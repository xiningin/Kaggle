{"cell_type":{"12003ee8":"code","105a0f43":"code","595c66ff":"code","e53464f5":"code","14469e62":"code","370f6897":"code","380ce0c8":"code","2383a3de":"code","fe406175":"code","05e4bdd4":"code","e5732717":"code","b765cff3":"code","e01172d9":"code","9eee8b29":"code","595b96ab":"code","2ad148c0":"code","0ed0e584":"code","ff89cf14":"code","f1b05d0e":"code","6e44c141":"markdown","47113c57":"markdown","8a9ef98b":"markdown","835be0c5":"markdown","d7f58e24":"markdown"},"source":{"12003ee8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt #visualization\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.offline as py\nimport plotly.express as px\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected=True)  \nfrom plotly.tools import FigureFactory as ff\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","105a0f43":"df = pd.read_csv('..\/input\/online-survey-data-of-bangladeshi-students\/Online Survey Data on Education Bd.csv', delimiter=',', encoding = \"ISO-8859-1\")\ndf.head()","595c66ff":"df.isnull().sum()","e53464f5":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndef simple_graph(dataframe,type_of_graph, top = 0):\n    data_frame = df[dataframe].value_counts()\n    layout = go.Layout()\n    \n    if type_of_graph == 'barh':\n        top_category = get_list(df[dataframe].dropna())\n        if top !=None:\n            data = [go.Bar(\n                x=top_category[1].head(top),\n                y=top_category[0].head(top),\n                orientation = 'h',\n                marker=dict(color=random_colors(10), line=dict(color='rgb(8,48,107)',width=1.5,)),\n                opacity = 0.6\n            )]\n        else:\n            data = [go.Bar(\n            x=top_category[1],\n            y=top_category[0],\n            orientation = 'h',\n            marker=dict(color=random_colors(10), line=dict(color='rgb(8,48,107)',width=1.5,)),\n            opacity = 0.6\n        )]\n\n    elif type_of_graph == 'barv':\n        top_category = get_list(df[dataframe].dropna())\n        if top !=None:\n            data = [go.Bar(\n                x=top_category[0].head(top),\n                y=top_category[1].head(top),\n                marker=dict(color=random_colors(10), line=dict(color='rgb(8,48,107)',width=1.5,)),\n                opacity = 0.6\n         )]\n        else:        \n            data = [go.Bar(\n                x=top_category[0],\n                y=top_category[1],\n                marker=dict(color=random_colors(10), line=dict(color='rgb(8,48,107)',width=1.5,)),\n                opacity = 0.6\n            )]      \n\n    elif type_of_graph == 'pie':\n        data = [go.Pie(\n            labels = data_frame.index,\n            values = data_frame.values,\n            marker = dict(colors = random_colors(20)),\n            textfont = dict(size = 20)\n        )]\n    \n    elif type_of_graph == 'pie_':\n        data = [go.Pie(\n            labels = data_frame.index,\n            values = data_frame.values,\n            marker = dict(colors = random_colors(20)),\n            textfont = dict(size = 20)\n        )]\n        layout = go.Layout(legend=dict(orientation=\"h\"), autosize=False,width=700,height=700)\n        pass\n    \n    fig = go.Figure(data = data, layout = layout)\n    py.iplot(fig)","14469e62":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndef bubble_chart(col):\n    data = get_list(df[col].dropna())\n    data = data[:10]\n    data = data.reindex(index=data.index[::-1])\n\n    size = np.array(data[1]*0.001)\n    size\n    trace0 = go.Scatter(\n        x=data[0],\n        y=data[1],\n        mode='markers',\n        marker=dict(color = random_colors(10),size= size)\n    )\n\n    data = [trace0]\n    py.iplot(data)","370f6897":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\nimport random\n\ndef random_colors(number_of_colors):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","380ce0c8":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\nsimple_graph('Education Institute Area?','pie')","2383a3de":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndata = df[['Have Internet availability?','Gender']].dropna()\n\ntrace1 = go.Bar(\n    x=['Female', 'Male'],\n    y=[data[(data['Gender'] == 'Female') & (data['Have Internet availability?'] == 'Yes')].count()[0], data[(data['Gender'] == 'Male') & (data['Have Internet availability?'] == 'Yes')].count()[0]],\n    name='Yes',\n    opacity=0.6\n)\ntrace2 = go.Bar(\n    x=['Female', 'Male'],\n    y=[data[(data['Gender'] == 'Female') & (data['Have Internet availability?'] == 'No')].count()[0], data[(data['Gender'] == 'Male') & (data['Have Internet availability?'] == 'No')].count()[0]],\n    name='No',\n    opacity=0.6\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","fe406175":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndata = df[['Happy with online education?','Class performance increased in online education?']].dropna()\n\ntrace1 = go.Bar(\n    x=['Yes', 'No'],\n    y=[data[(data['Class performance increased in online education?'] == 'Yes') & (data['Happy with online education?'] == 'Yes')].count()[0], data[(data['Class performance increased in online education?'] == 'Yes') & (data['Happy with online education?'] == 'No')].count()[0]],\n    name='Yes',\n    opacity=0.6\n)\n\ndata = [trace1]\nlayout = go.Layout(\n    barmode='group'\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","05e4bdd4":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\nsimple_graph('Faced any issue with online class?','pie')","e5732717":"import squarify\nfrom collections import Counter","b765cff3":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndef get_list(col_name):\n    full_list = \";\".join(col_name)\n    each_word = full_list.split(\";\")\n    each_word = Counter(each_word).most_common()\n    return pd.DataFrame(each_word)\ndef calculate_percent(val):\n    return val\/ len(df) *100","e01172d9":"#To avoid deprecation warnings on the snippet below\n\nfrom plotly.graph_objs.layout import Margin","9eee8b29":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\ndata = df[df['Used smartphone\/computer\/laptop previously before online class?'] == 'Yes']\n\ndata = get_list(df['Level of study?'].dropna())\n\nx = 0\ny = 0\nwidth = 50\nheight = 50\ntype_list = data[0]\nvalues = data[1]\n\nnormed = squarify.normalize_sizes(values, width, height)\nrects = squarify.squarify(normed, x, y, width, height)\n\ncolor_brewer = random_colors(20)\nshapes = []\nannotations = []\ncounter = 0\n\nfor r in rects:\n    shapes.append( \n        dict(\n            type = 'rect', \n            x0 = r['x'], \n            y0 = r['y'], \n            x1 = r['x']+r['dx'], \n            y1 = r['y']+r['dy'],\n            line = dict( width = 1 ),\n            fillcolor = color_brewer[counter]\n        ) \n    )\n    annotations.append(\n        dict(\n            x = r['x']+(r['dx']\/2),\n            y = r['y']+(r['dy']\/2),\n            text = \"{}\".format(type_list[counter]),\n            showarrow = False\n        )\n    )\n    counter = counter + 1\n    if counter >= len(color_brewer):\n        counter = 0\n\ntrace0 = go.Scatter(\n    x = [ r['x']+(r['dx']\/2) for r in rects ], \n    y = [ r['y']+(r['dy']\/2) for r in rects ],\n    text = [ str(v) for v in values ], \n    mode = 'text',\n)\n\nlayout = dict(\n    height=600, \n    width=850,\n    xaxis=dict(showgrid=False,zeroline=False),\n    yaxis=dict(showgrid=False,zeroline=False),\n    shapes=shapes,\n    annotations=annotations,\n    hovermode='closest',\n    font=dict(color=\"#FFFFFF\"),\n    margin = go.Margin(\n            l=0,\n            r=0,\n            pad=0\n        )\n)\n\nfigure = dict(data=[trace0], layout=layout)\niplot(figure)","595b96ab":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\nbubble_chart('Preferred device for an online course')","2ad148c0":"#Code by Ranjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results\n\nsimple_graph('Broadband \/ Mobile Internet?','barh',10)","0ed0e584":"simple_graph('Institute Type','barv',10)","ff89cf14":"#Code by Seungbum Lim https:\/\/www.kaggle.com\/seungbumlim\/20-21-ml-ds-survey-pandas-filter-custom-function\n\nplt.figure(figsize = (8, 4))\nax = sns.countplot(data = df,\n                   x = 'Age?',\n                   palette = 'Blues_r')\n\nax.bar_label(ax.containers[0])\nax.set_ylim(0, 4500)\nax.set_title('Age group', pad = 20)\n\nplt.show()","f1b05d0e":"#Code by Seungbum Lim https:\/\/www.kaggle.com\/seungbumlim\/20-21-ml-ds-survey-pandas-filter-custom-function\n\nplt.figure(figsize = (6, 4))\nax = sns.countplot(data = df,\n                   y = 'Knowledge increased after online education (comparatively)?',\n                   palette = 'Reds_r')\n\nax.bar_label(ax.containers[0])\n# ax.set_ylim(0, 17000)\nax.set_title('Knowledge increased after online education?', pad = 20)\n\nplt.show()","6e44c141":"#Acknowledgments:\n    \nRanjeet Jain  https:\/\/www.kaggle.com\/ranjeetjain3\/stack-over-flow-results  \n\nSeungbum Lim https:\/\/www.kaggle.com\/seungbumlim\/20-21-ml-ds-survey-pandas-filter-custom-function\n\n\n    ","47113c57":"#A tiny bubble. Since we don't have any column with many options. ","8a9ef98b":"#Those that \"Have Internet availability?\" by gender.","835be0c5":"#After the snippets above, would I call it Simple? Definitely not.","d7f58e24":"![](https:\/\/www.tbsnews.net\/sites\/default\/files\/styles\/amp_metadata_content_image_min_696px_wide\/public\/images\/2019\/09\/05\/quality-of-primary-education_lead-tbs.jpg?itok=W8s80m_U)tbsnews.net"}}