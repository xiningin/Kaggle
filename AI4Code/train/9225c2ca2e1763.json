{"cell_type":{"d02fcdb3":"code","be9a1114":"code","2dec31b7":"code","89d0425d":"code","897f433c":"code","d4d71aec":"code","ef3e2d4c":"code","d6d86dda":"code","3bf86524":"code","3c0981a2":"code","13145bad":"code","3944fc50":"code","b5388a67":"code","e8d54a40":"code","a44a9e8c":"code","f1ba7e7c":"code","897f0d0d":"markdown","03d54bf7":"markdown","9a1664ee":"markdown","c7375352":"markdown"},"source":{"d02fcdb3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","be9a1114":"# here we will import the libraries used for machine learning\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv), data manipulation as in SQL\nimport matplotlib.pyplot as plt # this is used for the plot the graph \nimport seaborn as sns # used for plot interactive graph. I like it most for plot\n%matplotlib inline\nfrom sklearn.linear_model import LogisticRegression # to apply the Logistic regression\nfrom sklearn.model_selection import train_test_split # to split the data into two parts\nfrom sklearn.model_selection import KFold # use for cross validation\nfrom sklearn.model_selection import GridSearchCV# for tuning parameter\nfrom sklearn.ensemble import RandomForestClassifier # for random forest classifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import svm # for Support Vector Machine\nfrom sklearn import metrics # for the check the error and accuracy of the model\n# Any results you write to the current directory are saved as output.\n# dont worry about the error if its not working then insteda of model_selection we can use cross_validation","2dec31b7":"import seaborn as sns\n","89d0425d":"dataset=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ndataset","897f433c":"dataset.info()","d4d71aec":"dataset.drop(['Unnamed: 32','id'],axis=1,inplace=True)\ndataset.columns","ef3e2d4c":"### As per the above output of cell. all data can be divided into three parts.lets divied the features according to their category.\n'''features_mean= list(dataset.columns[1:11])\nfeatures_se= list(dataset.columns[11:20])\nfeatures_worst=list(dataset.columns[21:31])\nprint(features_mean)\nprint(\"----\"*35)\nprint(features_se)\nprint(\"----\"*35)\nprint(features_worst)\nprint(\"----\"*35)'''","d6d86dda":"dataset['diagnosis']=dataset['diagnosis'].map({'M':1,'B':0})","3bf86524":"dataset.describe()","3c0981a2":"sns.countplot(dataset['diagnosis'],label='count')","13145bad":"y=dataset.pop('diagnosis')\n","3944fc50":"train_x,test_x,train_y,test_y = train_test_split(dataset, y,test_size = 0.2,random_state=42)","b5388a67":"model=RandomForestClassifier(n_estimators=100)\nmodel.fit(train_x,train_y)","e8d54a40":"prediction=model.predict(test_x)","a44a9e8c":"metrics.accuracy_score(prediction,test_y)","f1ba7e7c":"from sklearn.metrics import accuracy_score, confusion_matrix\n\nplt.subplots(figsize=(14,12))\nsns.heatmap(confusion_matrix(test_y, prediction),annot=True,fmt=\"1.0f\",cbar=False,annot_kws={\"size\": 20})\nplt.title(f\"Random forest model Accuracy: {accuracy_score(test_y, prediction)}\",fontsize=40)\nplt.xlabel(\"Target\",fontsize=30)\nplt.show()","897f0d0d":"### visuallize labels count int histogram**","03d54bf7":"### import and preprocess dataset","9a1664ee":"**from this graph we can see that there is a more number of bengin stage of cancer which can be cure**","c7375352":"### import required lib."}}