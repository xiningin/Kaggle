{"cell_type":{"b3cc1796":"code","41855b7a":"code","4e0c7ce3":"code","8c6fc796":"code","a2e2e91e":"code","c58b944b":"code","70755484":"code","13e4fad6":"code","3503ada0":"code","72fafa77":"code","85d4fcf9":"code","448cd380":"code","3d0be115":"code","ad6e5657":"code","4d019ccf":"code","3314b79f":"code","a836506a":"code","cede8e86":"code","c4dd4944":"code","d5b371f9":"code","e64e97ab":"code","51302de9":"code","2fbe1f45":"code","ab728238":"code","42862151":"code","e9ff50b7":"code","70efa0f2":"code","5d337a65":"code","69b1eed2":"code","26921d1c":"code","1fe5fd3d":"code","e91ed43e":"markdown","caa81719":"markdown","4fca8051":"markdown","1662d7bc":"markdown","43e6ab18":"markdown","7054c3c5":"markdown","7e756e9e":"markdown","8ac8ea3b":"markdown","25eec1ce":"markdown"},"source":{"b3cc1796":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\n\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import precision_score, recall_score\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import auc, roc_curve\n\nsns.set(style = 'darkgrid')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","41855b7a":"df = pd.read_csv('\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv')\ndf.sample(5)","4e0c7ce3":"# Check null values in each feature\ndf.isna().sum()","8c6fc796":"# Check duplicate value \ndf.duplicated().sum()","a2e2e91e":"df.info()","c58b944b":"# drop user id(no use)\ndf.drop('User ID', axis = 1, inplace=True)","70755484":"df.describe()","13e4fad6":"# Checking outliers\nfig, ax = plt.subplots(1,2, figsize = (15, 5))\ndf['Age'].plot.box(ax = ax[0], showmeans = True, meanline = True)\ndf['EstimatedSalary'].plot.box(ax = ax[1], showmeans = True, meanline = True)\n#sns.boxplot(df['EstimatedSalary'], ax = ax[1])","3503ada0":"df.hist(figsize = (15, 8))","72fafa77":"df['Gender'].value_counts()","85d4fcf9":"# pie plot\ndf['Gender'].value_counts().plot.pie(autopct = '%1.1f%%', shadow= True, figsize = (6, 8))","448cd380":"sns.countplot('Purchased', data = df)","3d0be115":"df['Purchased'].value_counts().plot.pie(autopct = '%1.1f%%', shadow= True, figsize = (6, 8), explode = [0, 0.06])","ad6e5657":"# Bivariate analysis\nsns.scatterplot('Age', 'EstimatedSalary', data = df, hue = 'Purchased')","4d019ccf":"sns.barplot('Gender', 'Age',data = df, hue = 'Purchased', ci = False)","3314b79f":"sns.violinplot('Gender', 'Age',data = df, hue = 'Purchased')","a836506a":"sns.boxplot('Gender', 'EstimatedSalary',data = df, hue = 'Purchased')","cede8e86":"df.drop('Gender', inplace=True, axis = 1)","c4dd4944":"sns.heatmap(df.corr(), annot=True)","d5b371f9":"X = df.drop('Purchased', axis = 1)\ny = df['Purchased']","e64e97ab":"X.shape, y.shape","51302de9":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)","2fbe1f45":"# Normalizing the data\nstd = StandardScaler()\nX_train = std.fit_transform(X_train)\nX_test = std.transform(X_test)","ab728238":"model_list = []\nscore_list = []\n\nmodel1 = LogisticRegression()\nmodel1.fit(X_train, y_train)\nscore1 = accuracy_score(y_test, model1.predict(X_test))\nprint(\"Model : Logistics Regression\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score1))\nmodel_list.append('Logistic_Regression')\nscore_list.append(score1)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model1.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model1.predict(X_test))))","42862151":"model2 = RandomForestClassifier(random_state=5)\nmodel2.fit(X_train, y_train)\nscore2 = accuracy_score(y_test, model2.predict(X_test))\nprint(\"Model : RandomForest Classifier\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score2))\nmodel_list.append('RandomForestClassifier')\nscore_list.append(score2)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model2.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model2.predict(X_test))))","e9ff50b7":"model3 = GradientBoostingClassifier(n_estimators=300, learning_rate=0.01)\nmodel3.fit(X_train, y_train)\nscore3 = accuracy_score(y_test, model3.predict(X_test))\nprint(\"Model : GradientBoosting Classifier\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score3))\nmodel_list.append('GradientBoostingClassifier')\nscore_list.append(score3)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model3.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model3.predict(X_test))))","70efa0f2":"model4 = AdaBoostClassifier()\nmodel4.fit(X_train, y_train)\nscore4 = accuracy_score(y_test, model4.predict(X_test))\nprint(\"Model : AdaBoost Classifier\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score4))\nmodel_list.append('AdaBoostClassifier')\nscore_list.append(score4)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model4.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model4.predict(X_test))))","5d337a65":"model5 = SVC(kernel = 'rbf',  random_state = 2)\nmodel5.fit(X_train, y_train)\nscore5 = accuracy_score(y_test, model5.predict(X_test))\nprint(\"Model : Support vector Classifier\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score5))\nmodel_list.append('Support vectorClassifier')\nscore_list.append(score5)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model5.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model5.predict(X_test))))","69b1eed2":"model6 = GaussianNB()\nmodel6.fit(X_train, y_train)\nscore6 = accuracy_score(y_test, model6.predict(X_test))\nprint(\"Model : GaussianNB\")\nprint('=====================================')\nprint('Accuracy : {:0.2f}'.format(score6))\nmodel_list.append('GaussianNB')\nscore_list.append(score6)\nprint('=====================================')\nprint('Recall_Score : {:0.2f}'.format(recall_score(y_test, model6.predict(X_test))))\nprint('=====================================')\nprint('precission_Score : {:0.2f}'.format(precision_score(y_test, model6.predict(X_test))))","26921d1c":"plt.figure(figsize=(15, 5))\nsns.lineplot(model_list, score_list)","1fe5fd3d":"plt.figure(figsize=(18, 5))\nsns.barplot(model_list, score_list)","e91ed43e":"### **Objective** : \nThe objective of this analysis is to predict whether a person will buy a product displayed on a social network ad ","caa81719":"### Import Library","4fca8051":"# we can say that Gradient Boosting, Random forest works well","1662d7bc":"### Random Forest","43e6ab18":"### Import DataSet","7054c3c5":"* 'Gender' : Categorical value\n* 'Age' : Integer value\n* 'EstimatedSalary' : Integer value\n* 'Purchased' :Target variable        ","7e756e9e":"### Logistics Regression","8ac8ea3b":"# **Social network product purchase**\n","25eec1ce":"##### There is no use of Gender feature because there is no(less) efferct of Gender on Purchased"}}