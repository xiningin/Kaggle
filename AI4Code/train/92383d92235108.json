{"cell_type":{"0f713db7":"code","4ec83e47":"code","f36ca2e7":"code","f6b80b43":"code","78fbe094":"code","e77887cb":"code","20a5ce5d":"code","6970ebae":"code","bbc4447f":"code","e36c0f7e":"code","5275c115":"code","0181867e":"code","7c497829":"code","7d3b567f":"code","c32e671a":"code","bb21ebef":"markdown","a1f55473":"markdown","9337d501":"markdown","3dcf78f5":"markdown","c2a65e8a":"markdown"},"source":{"0f713db7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4ec83e47":"bike = pd.read_csv(\"..\/input\/train.csv\")\nbike.head()","f36ca2e7":"bike.describe()","f6b80b43":"import seaborn as sns\n\nsns.distplot(bike['cnt'])","78fbe094":"g = sns.FacetGrid(bike, row=\"workingday\", col=\"holiday\", margin_titles=True)\n#g.map(ptl.hist,bike['cnt'])\ng.map(sns.distplot,'cnt')","e77887cb":"g = sns.FacetGrid(bike, row=\"workingday\", col=\"season\", margin_titles=True)\n#g.map(ptl.hist,bike['cnt'])\ng.map(sns.distplot,'cnt')","20a5ce5d":"g = sns.FacetGrid(bike, row=\"weathersit\", col=\"season\", margin_titles=True)\n#g.map(ptl.hist,bike['cnt'])\ng.map(sns.distplot,'cnt')","6970ebae":"X_train = bike.drop(columns=\"cnt\")\ny_train = bike['cnt']\n","bbc4447f":"from sklearn.linear_model import LogisticRegression\n\n# Initialize the predictive model object\nmod_logistic = LogisticRegression()\n\n# Train the model using the training sets\nmod_logistic.fit(X_train, y_train)\n\n","e36c0f7e":"# Make predictions using the testing set\npred = mod_logistic.predict(X_train)\n\nsns.distplot(pred)","5275c115":"sns.scatterplot(pred, y_train)","0181867e":"test = pd.read_csv(\"..\/input\/test.csv\")\ntest.head()","7c497829":"test['cnt'] = mod_logistic.predict(test)\ntest.head()","7d3b567f":"res = test[(['id','cnt'])]\nres.head()","c32e671a":"### run this to generate the prediction file. Change each time the name by adding info related to the model and the version,\n### you must upload this files into the kaggle platform (on our competition page) so this prediction can enter the challenge.\n\n# res.to_csv(\"prediction_lm_v1.0.csv\")","bb21ebef":"Now we will check our outcome (cnt) to see if it is a normally distributed variable","a1f55473":"**Import challenge data**\n\nWe import the data using pandas","9337d501":"As we can see, our outcome does not follow a normal distribution. It has two picks,","3dcf78f5":"We will divide the train dataset into two sets, one for the independent variables (X) and one for the outcome (y).","c2a65e8a":"Now we will proceed to run a linear regression to show how models have to be ran in this challenge. \n \n**Please be aware that this model is not the ideal one because the outcome is not normally distributed !!!**"}}