{"cell_type":{"6e27dc78":"code","52adf3f7":"code","58348726":"code","d15582b7":"code","cea19aec":"code","68daf5cd":"code","835511bc":"code","9ed3fe4c":"code","a5b6a3d4":"markdown","edb52684":"markdown","277c4a15":"markdown","70d8a57d":"markdown","af79cb3d":"markdown","a81afe6b":"markdown","1514ad13":"markdown"},"source":{"6e27dc78":"import numpy as np \nimport pandas as pd \nfrom sklearn.model_selection import StratifiedKFold \nimport tensorflow as tf\nfrom tensorflow.keras.layers import Dense, Activation, Flatten, Convolution1D, Dropout,MaxPooling1D,GlobalAveragePooling1D\nfrom tensorflow.keras import models, layers,Sequential,regularizers\nfrom tensorflow.keras.utils import to_categorical","52adf3f7":"def dataset_creation(train_loc, test_loc):\n    data_test = pd.read_csv(test_loc)\n    data_train = pd.read_csv(train_loc)\n    data_test.columns = [x for x in range(188)]\n    data_train.columns = [x for x in range(188)]\n    dataset = pd.concat([data_train, data_test], axis=0).sort_index()\n    return dataset","58348726":"def stratkfold(dataset):\n    dataset[\"kfold\"] = -1\n    dataset = dataset.sample(frac=1).reset_index(drop=True)\n    X= dataset.iloc[:,:-1]\n    y= dataset.iloc[:,-1]\n    skf = StratifiedKFold(n_splits=5)\n    for f, (t_, v_) in enumerate(skf.split(X,y)):\n        dataset.loc[v_, 'kfold'] = f\n    return dataset","d15582b7":"def traintest_split(dataset):\n    train=dataset[dataset[\"kfold\"]!=4]\n    valid=dataset[dataset[\"kfold\"]==4]\n    X_train=np.asarray(train.iloc[:,:187].values)\n    y_train=train.iloc[:,187].values\n    X_valid=np.asarray(valid.iloc[:,:187].values)\n    y_valid=valid.iloc[:,187].values\n    y_train=to_categorical(y_train)\n    y_valid=to_categorical(y_valid)\n    X_train=tf.expand_dims(X_train, axis=2)\n    X_valid=tf.expand_dims(X_valid, axis=2)\n    print(X_train.shape)\n    return X_train, X_valid, y_train, y_valid","cea19aec":"def make_model(X_train):\n    model= Sequential()\n    model.add(Convolution1D(32,5,activation='relu',input_shape=(X_train.shape[1],1)))\n    model.add(Convolution1D(64,5,activation='relu'))         \n    model.add(MaxPooling1D(3))\n    model.add(Convolution1D(128, 3, activation='relu'))\n    model.add(Convolution1D(256, 3, activation='relu'))\n    model.add(GlobalAveragePooling1D())\n    model.add(Dropout(0.3))\n    model.add(Flatten())\n    model.add(Dense(1024,activation='relu'))\n    model.add(Dropout(0.3))\n    model.add(Dense(256,activation='relu'))\n    model.add(Dense(32,activation='relu'))\n    model.add(Dense(5,activation='softmax'))\n    \n    model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy',tf.keras.metrics.AUC(name='auc')])\n    return model","68daf5cd":"train_loc = \"..\/input\/heartbeat\/mitbih_train.csv\"\ntest_loc= \"..\/input\/heartbeat\/mitbih_test.csv\"\ndataset= dataset_creation(train_loc,test_loc)\ndata= stratkfold(dataset)\nX_train,X_valid,y_train, y_valid = traintest_split(data)","835511bc":"model=make_model(X_train)\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.1,\n    batch_size=64,\n    epochs=100,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=5,\n            restore_best_weights=True\n        )\n    ]\n)","9ed3fe4c":"model.evaluate(X_valid,y_valid)","a5b6a3d4":"The given notebook creates a model to predict the various classes of heartbeats based on MITBIH Dataset ","edb52684":"## **Stratified K-Fold**","277c4a15":"Training accuracy of 98.77% and test accuracy of 98.44% has been achieved from the given model ","70d8a57d":" ## Uploading dataset","af79cb3d":"## **1-D CNN Model** ","a81afe6b":"The MITBIH dataset is constituted of 109446 beats, labeled with 5 different classes :\n\n'N': 0, 'S': 1, 'V': 2, 'F': 3, 'Q': 4\n\nN : Non-ecotic beats (normal beat)\n\nS : Supraventricular ectopic beats\n\nV : Ventricular ectopic beats\n\nF : Fusion Beats\n\nQ : Unknown Beats\n\nThe PTBHB dataset is constituted of 14552 beats, labeled with two different classes :\n\n'0' for normal beat '1' for abnormal beat (Myocardial infarction)\n\nAll the beats are recorded with 187 points. The shorter beats are padded with zeros to reach 187.","1514ad13":"## **Train-Test Split**"}}