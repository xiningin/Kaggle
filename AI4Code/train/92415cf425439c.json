{"cell_type":{"ee5a96f4":"code","f370e665":"code","2cfb4bcb":"code","ae91ce4c":"code","86f1ea87":"code","9f3c26bb":"code","52aec82c":"code","8fd9f51f":"code","eade46b7":"code","b6f42772":"code","48d6d8fa":"code","51b88f4b":"code","2b3abdd1":"code","8491e510":"code","118c9a7b":"code","298b1281":"code","1d417d22":"code","e209d1e0":"code","1df04bf2":"code","613a7298":"code","db580980":"code","811083b1":"code","fb2ac4fe":"code","c27a04f9":"code","c009f658":"code","f441d404":"code","01a8759d":"code","61c52e11":"code","36dde4c8":"code","f2705738":"code","77e8e7aa":"code","797f3a5c":"code","a5eee8f3":"code","f86fd342":"code","e6a6fe8c":"code","04332839":"markdown","a82898c7":"markdown","712e7e37":"markdown","20c9df2f":"markdown","a14cbe1c":"markdown","4fe50847":"markdown"},"source":{"ee5a96f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f370e665":"df = pd.read_csv('\/kaggle\/input\/data-analyst-jobs\/DataAnalyst.csv', index_col=0)","2cfb4bcb":"df.head()","ae91ce4c":"df.info()","86f1ea87":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom plotly import __version__\nimport cufflinks as cf","9f3c26bb":"import plotly\nimport plotly.express as px\nimport plotly.graph_objects as go","52aec82c":"plt.figure(figsize=(12,4))\nsns.heatmap(df.isnull(),cmap='Blues')","8fd9f51f":"df.describe()","eade46b7":"df['Company Name'] = df['Company Name'].astype(str).str[:-4]","b6f42772":"df.columns","48d6d8fa":"company = df['Company Name'].value_counts().nlargest(n=15)\nfig = px.bar(y=company.values,\n       x=company.index,\n       orientation='v',\n       color=company.index,\n       text=company.values,\n       color_discrete_sequence= px.colors.qualitative.Bold)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='outside', \n                  marker_line_color='rgb(8,48,107)', \n                  marker_line_width=1.5, \n                  opacity=0.7)\n\nfig.update_layout(width=1000, \n                  showlegend=False, \n                  xaxis_title=\"Company\",\n                  yaxis_title=\"Count\",\n                  title=\"Top 15 Companies by job count\")\nfig.show()","51b88f4b":"df['Job Title'].value_counts()","2b3abdd1":"sns.barplot(x=df['Job Title'].value_counts()[0:9],y=df['Job Title'].value_counts()[0:9].index)","8491e510":"role = df['Job Title'].value_counts().nlargest(n=10)\nfig = px.pie(role, \n       values = role.values, \n       names = role.index, \n       title=\"Top 10 Job Titles\", \n       color=role.values,\n       color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7,\n                  marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5)\nfig.update_layout(title_x=0.5)\nfig.show()","118c9a7b":"sns.barplot(x=df['Salary Estimate'].value_counts()[0:9],y=df['Salary Estimate'].value_counts()[0:9].index)","298b1281":"role = df['Salary Estimate'].value_counts().nlargest(n=10)\nfig = px.pie(role, \n       values = role.values, \n       names = role.index, \n       title=\"Top 10 Salary Estimates\", \n       color=role.values,\n       color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7,\n                  marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5)\nfig.update_layout(title_x=0.5)\nfig.show()","1d417d22":"sns.barplot(x=df['Location'].value_counts()[0:10],y=df['Location'].value_counts()[0:10].index)","e209d1e0":"location = df['Location'].value_counts().nlargest(n=10)\nfig = px.bar(y=location.values,\n       x=location.index,\n       orientation='v',\n       color=location.index,\n       text=location.values,\n       color_discrete_sequence= px.colors.qualitative.Bold)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='outside', \n                  marker_line_color='rgb(8,48,107)', \n                  marker_line_width=1.5, \n                  opacity=0.7)\n\nfig.update_layout(width=800, \n                  showlegend=False, \n                  xaxis_title=\"City\",\n                  yaxis_title=\"Count\",\n                  title=\"Top 10 cities by job count\")\nfig.show()","1df04bf2":"sns.barplot(x=df['Headquarters'].value_counts()[0:9],y=df['Headquarters'].value_counts()[0:9].index)","613a7298":"df['Job Description']","db580980":"from wordcloud import WordCloud,STOPWORDS","811083b1":"plt.figure(figsize = (20,20)) # Text that is Not Sarcastic\nwc = WordCloud(max_words = 2000 , width = 1600 , height = 800).generate(\" \".join(df['Job Description']))\nplt.imshow(wc , interpolation = 'bilinear')","fb2ac4fe":"plt.figure(figsize = (20,20)) # Text that is Not Sarcastic\nwc = WordCloud(max_words = 2000 , width = 1600 , height = 800).generate(\" \".join(df['Job Title']))\nplt.imshow(wc , interpolation = 'bilinear')","c27a04f9":"sns.barplot(x=df['Sector'].value_counts()[0:9],y=df['Sector'].value_counts()[0:9].index)","c009f658":"sns.barplot(x=df['Industry'].value_counts()[1:10],y=df['Industry'].value_counts()[1:10].index)","f441d404":"industry = df['Industry'].value_counts()[1:15]\nfig = px.bar(y=industry.values,\n       x=industry.index,\n       orientation='v',\n       color=industry.index,\n       text=industry.values,\n       color_discrete_sequence= px.colors.qualitative.Bold)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='outside', \n                  marker_line_color='rgb(8,48,107)', \n                  marker_line_width=1.5, \n                  opacity=0.7)\n\nfig.update_layout(width=800, \n                  showlegend=False, \n                  xaxis_title=\"Industry\",\n                  yaxis_title=\"Count\",\n                  title=\"Top 10 Industries by job count\")\nfig.show()","01a8759d":"sns.barplot(x=df['Type of ownership'].value_counts()[0:9],y=df['Type of ownership'].value_counts()[0:9].index)","61c52e11":"df['Revenue'].value_counts()\nsns.barplot(x=df['Revenue'].value_counts()[0:10],y=df['Revenue'].value_counts()[0:10].index)","36dde4c8":"rev = df['Revenue'].value_counts().nlargest(n=10)\nfig = px.pie(role, \n       values = rev.values, \n       names = rev.index, \n       title=\"Top 10 revenues\", \n       color=rev.values,\n       color_discrete_sequence=px.colors.qualitative.Prism)\nfig.update_traces(opacity=0.7,\n                  marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5)\nfig.update_layout(title_x=0.5)\nfig.show()","f2705738":"df.head()","77e8e7aa":"df['Easy Apply'].value_counts()","797f3a5c":"easy_app = df[df['Easy Apply'] == 'True']","a5eee8f3":"sns.barplot(x=easy_app['Company Name'].value_counts()[0:9],y=easy_app['Company Name'].value_counts()[0:9].index)\nplt.xlabel('Number of Openings')\nplt.show()","f86fd342":"comp_easy = easy_app['Company Name'].value_counts()[0:10]\nfig = px.bar(y=comp_easy.values,\n       x=comp_easy.index,\n       orientation='v',\n       color=comp_easy.index,\n       text=comp_easy.values,\n       color_discrete_sequence= px.colors.qualitative.Bold)\n\nfig.update_traces(texttemplate='%{text:.2s}', \n                  textposition='outside', \n                  marker_line_color='rgb(8,48,107)', \n                  marker_line_width=1.5, \n                  opacity=0.7)\n\nfig.update_layout(width=800, \n                  showlegend=False, \n                  xaxis_title=\"Industry\",\n                  yaxis_title=\"Count\",\n                  title=\"Top 10 companies having easy apply\")\nfig.show()","e6a6fe8c":"sns.barplot(x=easy_app['Salary Estimate'].value_counts()[0:9],y=easy_app['Salary Estimate'].value_counts()[0:9].index)\nplt.xlabel('Number of Openings')\nplt.show()","04332839":"Loading the data","a82898c7":"**WordClouds**","712e7e37":"Processing Company Name column","20c9df2f":"Same with Plotly","a14cbe1c":"I hope this kernel was helpful. Please upvote if You liked","4fe50847":"Finding Missing Values"}}