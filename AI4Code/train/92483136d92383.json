{"cell_type":{"8295b06b":"code","297cde07":"code","ae5e8bbc":"code","07c75e45":"code","2923e990":"code","49a672f5":"code","6cdf882d":"code","46980036":"code","a5e516de":"markdown"},"source":{"8295b06b":"import os\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n","297cde07":"# functions \n\ndef plot_data(ids:str, target:int)->None:\n    ''' \n    Plots a sample array using its id and target (0 or 1)\n    '''\n    array = np.load(os.path.join(path, f'train\/{ids[0]}\/{ids}' + '.npy'))\n    fig = plt.figure(figsize=(9, 8))\n    for i in range(6):\n        ax = fig.add_subplot(6, 1, i+1)\n        ax.imshow(array[i].astype('float'), interpolation='nearest', aspect='auto')\n        state = 'ON' if i%2 == 0 else 'OFF'\n        if i == 0:\n            ax.set_title(f'Id: {ids}, target: {target}, state: {state} target', size=16)\n        else:\n            ax.set_title(f'{state} target', size=16)\n        plt.tight_layout()\n        \ndef plot_multisamples(sample_list):\n    '''\n    Plots multiple samples from a list of sample arrays (sample_list). \n    '''\n    for index in range( len(sample_list) ) :\n        id, target = sample_list[index][0], sample_data[index][1]\n        plot_data(id, target)\n        ","ae5e8bbc":"# read the training csv file\npath = '..\/input\/seti-breakthrough-listen\/'\ntrain_df = pd.read_csv(os.path.join(path, 'train_labels.csv'))\ntrain_df.head()","07c75e45":"# read the sample submission csv file\nssu_path = '..\/input\/seti-breakthrough-listen\/'\nssu_df = pd.read_csv(os.path.join(ssu_path, 'sample_submission.csv'))\nssu_df.head()","2923e990":"# distribution of the target values\nsns.countplot(x=train_df['target'])\nplt.show()\nprint('\\n', 'percentage of target values:')\ntrain_df['target'].value_counts(normalize=True)*100","49a672f5":"# get the file ids for both the classes\n## subset dataframe by target values [0,1]\nclass_1 = train_df[train_df['target'] == 1][:2]\nclass_0 = train_df[train_df['target'] == 0][:2]\n## transform to list of tuples: (id, target_value)\nclass_1 = list(zip(class_1.id, class_1.target))\nclass_0 = list(zip(class_0.id, class_0.target))\n## sample list (four samples as tuples)\nsample_data = [*class_1, *class_0]\nsample_data","6cdf882d":"# shape of samples\nid = sample_data[0][0]\narray = np.load(os.path.join(path, f'train\/{id[0]}\/{id}' + '.npy'))\narray.shape","46980036":"# plot the samples in sample_data\nplot_multisamples(sample_list=sample_data)","a5e516de":"# Exploratory Data Analysis (EDA): SETI Breakthrough Listen \n\nBased on the following notebook:\n\n1. [Detecting Wow! Signal by Lakshya Malhotra](https:\/\/www.kaggle.com\/lakshya91\/detecting-wow-signal)\n"}}