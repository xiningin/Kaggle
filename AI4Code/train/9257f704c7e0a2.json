{"cell_type":{"9660a597":"code","27ac6c74":"code","2fea4e9d":"code","2d7bbe40":"code","a3368f87":"code","dc5e09f5":"code","eb494199":"code","a0eb716e":"code","ca3e1a48":"code","f31a2331":"code","826e6214":"code","2d683f4d":"code","042112c2":"code","431cdfa2":"code","cbc82b6a":"code","d78e7429":"code","659a4d80":"code","8897dd5c":"code","d2802a1f":"code","a2a1cd86":"code","5b19cf8f":"code","60840589":"code","68a0d975":"code","12a38d57":"code","081d440a":"code","d10430ec":"code","0c3cf7f7":"code","cbd7a5a0":"code","0c38c26c":"code","25871a00":"code","19c1eb4e":"code","50fc6cab":"code","622ee18a":"code","e1a294c7":"code","260fc038":"code","7f14e195":"code","cef7dee6":"code","6822daf7":"code","2e73f648":"code","256459af":"code","0395c195":"code","5e811152":"code","b7d39e47":"code","4bcc7b10":"code","1b584fc4":"code","c5a4f196":"markdown","f68c31a1":"markdown","11f5649f":"markdown","60a56ba8":"markdown","9e6a1dfc":"markdown","eeea5c2c":"markdown","2f356bf0":"markdown","602c8297":"markdown","d5212396":"markdown","fd3a85b4":"markdown","ac1e1dd2":"markdown","19a9a738":"markdown","fa087f66":"markdown","b3089e84":"markdown","bbc13e9e":"markdown","2873f3c5":"markdown","e5593ba2":"markdown","61b8f49f":"markdown","787de2ad":"markdown","53fdb627":"markdown","d9c6dd9f":"markdown","ddc523ee":"markdown","afdba266":"markdown","26346b08":"markdown","95b39c5e":"markdown","ec7e0151":"markdown","50165300":"markdown","edc68d42":"markdown","2ad65ba4":"markdown","dce653ba":"markdown","a599f4c5":"markdown","ef84d36c":"markdown","c74cdc0a":"markdown","5fb84bca":"markdown","3b0e1d23":"markdown","1ec427f3":"markdown","ffbe4b19":"markdown","79087d0b":"markdown","326e4c4d":"markdown","c53b5099":"markdown","2fd50439":"markdown","e4e444d8":"markdown","d0665937":"markdown","5ff4ce56":"markdown","35ad7025":"markdown","5e18dc83":"markdown","da462e14":"markdown","86c5caa9":"markdown","ab1989d1":"markdown","b4b34bd1":"markdown","52f09ab2":"markdown","461beb69":"markdown","32162026":"markdown","5083ca8e":"markdown","1735078d":"markdown","1b444ea5":"markdown","1b5a1970":"markdown","919a6d97":"markdown","f1e4d34f":"markdown","6b858a4e":"markdown","0d5b8af5":"markdown","8282ad0e":"markdown","594186ef":"markdown","355d2aa3":"markdown","1f7b721e":"markdown","d18a68fc":"markdown","9a558f68":"markdown","915cd8a0":"markdown","13531b6f":"markdown","bda4e41b":"markdown","da8257f5":"markdown","bcc8602e":"markdown","71316d68":"markdown","8a6b1f00":"markdown","a583455e":"markdown","435212f1":"markdown","a3cd96d3":"markdown","2a259935":"markdown","dae9a24a":"markdown","5eda3825":"markdown","f42484e1":"markdown","8dce1785":"markdown","ce330382":"markdown","d5733ee2":"markdown","51fd9a80":"markdown","ea6bee2d":"markdown","9def1d5a":"markdown","b62f64b2":"markdown","9e879195":"markdown","d9e10148":"markdown","9acc00d7":"markdown"},"source":{"9660a597":"import tensorflow as tf\nimport numpy as np","27ac6c74":"# \uae30\ubcf8\uc801\uc73c\ub85c int32 \ud150\uc11c\uac00 \ub429\ub2c8\ub2e4; \uc544\ub798\uc758 \"dtypes\"\ub97c \ubcf4\uc138\uc694.\nrank_0_tensor = tf.constant(4)\nprint(rank_0_tensor)","2fea4e9d":"# \uc2e4\uc218 \ud150\uc11c\ub85c \ub9cc\ub4e4\uc5b4\ubd05\uc2dc\ub2e4.\nrank_1_tensor = tf.constant([2.0, 3.0, 4.0])\nprint(rank_1_tensor)","2d7bbe40":"# \uc870\uae08 \ub354 \uba85\ud655\ud558\uac8c \ud558\uace0 \uc2f6\ub2e4\uba74, \uc0dd\uc131\ud558\uba74\uc11c (\uc544\ub798\uc640 \uac19\uc774) dtype\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nrank_2_tensor = tf.constant([[1, 2],\n                            [3, 4],\n                            [5, 6]], dtype=tf.float16)\nprint(rank_2_tensor)","a3368f87":"# \uc784\uc758\uc758 \uac1c\uc218\uc758 \ucd95\uc744 \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# (\"\ucc28\uc6d0\"\uc774\ub77c\uace0 \ubd88\ub9ac\uae30\ub3c4 \ud569\ub2c8\ub2e4)\nrank_3_tensor = tf.constant([\n    [[0, 1, 2, 3, 4],\n    [5, 6, 7, 8, 9]],\n    [[10, 11, 12, 13, 14],\n    [15, 16, 17, 18, 19]],\n    [[20, 21, 22, 23, 24],\n    [25, 26, 27, 28, 29]],])\n\nprint(rank_3_tensor)","dc5e09f5":"np.array(rank_2_tensor)","eb494199":"rank_2_tensor.numpy()","a0eb716e":"a = tf.constant([[1, 2],\n                [3, 4]])\nb = tf.constant([[1, 1],\n                [1, 1]]) # 'tf.ones([2, 2])'\ub85c \uc4f8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\n\nprint(tf.add(a, b), \"\\n\")\nprint(tf.multiply(a, b), \"\\n\")\nprint(tf.matmul(a, b), \"\\n\")","ca3e1a48":"print(a + b, \"\\n\") # \uc6d0\uc18c \ubcc4 \ub367\uc148\nprint(a * b, \"\\n\") # \uc6d0\uc18c \ubcc4 \uacf1\uc148\nprint(a @ b, \"\\n\") # \ud589\ub82c \uacf1\uc148","f31a2331":"c = tf.constant([[4.0, 5.0], [10.0, 1.0]])\n\n# \uac00\uc7a5 \ud070 \uac12\uc744 \ucc3e\uc2b5\ub2c8\ub2e4\nprint(tf.reduce_max(c))\n# \uac00\uc7a5 \ud070 \uac12\uc758 \uc704\uce58\ub97c \ucc3e\uc2b5\ub2c8\ub2e4\nprint(tf.argmax(c))\n# softmax\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4\nprint(tf.nn.softmax(c))","826e6214":"rank_4_tensor = tf.zeros([3, 2, 4, 5])","2d683f4d":"print(\"Type of every element:\", rank_4_tensor.dtype)\nprint(\"Number of axes:\", rank_4_tensor.ndim)\nprint(\"Shape of tensor:\", rank_4_tensor.shape)\nprint(\"Elements along axis 0 of tensor:\", rank_4_tensor.shape[0])\nprint(\"Elements along the last axis of tensor:\", rank_4_tensor.shape[-1])\nprint(\"Total number of elements (3*2*4*5): \", tf.size(rank_4_tensor).numpy())","042112c2":"rank_1_tensor = tf.constant([0, 1, 1, 2, 3, 5, 8, 13, 21, 34])\nprint(rank_1_tensor.numpy())","431cdfa2":"print(\"First:\", rank_1_tensor[0].numpy())\nprint(\"Second:\", rank_1_tensor[1].numpy())\nprint(\"Last:\", rank_1_tensor[-1].numpy())","cbc82b6a":"print(\"Everything:\", rank_1_tensor[:].numpy())\nprint(\"Before 4:\", rank_1_tensor[:4].numpy())\nprint(\"From 4 to the end:\", rank_1_tensor[4:].numpy())\nprint(\"From 2, before 7:\", rank_1_tensor[2:7].numpy())\nprint(\"Every other item:\", rank_1_tensor[::2].numpy())\nprint(\"Reversed:\", rank_1_tensor[::-1].numpy())","d78e7429":"print(rank_2_tensor.numpy())","659a4d80":"# 2\uae09 \ud150\uc11c\uc5d0\uc11c \ub2e8\uc77c\uac12\uc744 \uac00\uc838\uc635\ub2c8\ub2e4\nprint(rank_2_tensor[1, 1].numpy())","8897dd5c":"# \ud589\uacfc \uc5f4 \ud150\uc11c\ub97c \uac00\uc838\uc635\ub2c8\ub2e4\nprint(\"Second row:\", rank_2_tensor[1, :].numpy())\nprint(\"Second column:\", rank_2_tensor[:, 1].numpy())\nprint(\"Last row:\", rank_2_tensor[-1, :].numpy())\nprint(\"First item in last column:\", rank_2_tensor[0, -1].numpy())\nprint(\"Skip the first row:\")\nprint(rank_2_tensor[1:, :].numpy(), \"\\n\")","d2802a1f":"print(rank_3_tensor[:, :, 4])","a2a1cd86":"# shape\uc740 \uac01 \ucd95\uc5d0 \ub530\ub77c \ud06c\uae30\ub97c \ubcf4\uc5ec\uc8fc\ub294 'TensorShape' \uac1d\uccb4\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4\nx = tf.constant([[1], [2], [3]])\nprint(x.shape)","5b19cf8f":"# \uc774 \uac1d\uccb4\ub97c Python \ubc30\uc5f4\ub85c \ubcc0\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4\nprint(x.shape.as_list())","60840589":"# \uc0c8\ub85c\uc6b4 \ubaa8\uc591\uc73c\ub85c \ud150\uc11c\ub97c \ubc14\uafc0 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n# \ubc30\uc5f4\uc744 \ub118\uaca8\uc8fc\ub294 \uac83\uc744 \uae30\uc5b5\ud558\uc138\uc694\nreshaped = tf.reshape(x, [1, 3])","68a0d975":"print(x.shape)\nprint(reshaped.shape)","12a38d57":"print(rank_3_tensor)","081d440a":"# 'shape' \uc778\uc790\uc5d0 '-1'\uc744 \ub118\uaca8\uc8fc\ub294 \uac83\uc740 \"\ub9de\ub294 \uc544\ubb34 \uc22b\uc790\"\ub97c \ub73b\ud569\ub2c8\ub2e4.\nprint(tf.reshape(rank_3_tensor, [-1]))","d10430ec":"print(tf.reshape(rank_3_tensor, [3*2, 5]), \"\\n\")\nprint(tf.reshape(rank_3_tensor, [3, -1]))","0c3cf7f7":"# \ub098\uc05c \uc608\uc81c: \uc774\ub807\uac8c \ud558\uc9c0 \ub9c8\uc138\uc694\n\n# \ubaa8\uc591 \ubcc0\ud615\uc73c\ub85c \ucd95\uc758 \uc21c\uc11c\ub97c \uc7ac\ubc30\uce58\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.\nprint(tf.reshape(rank_3_tensor, [2, 3, 5]), \"\\n\")\n\n# \uc774\uac74 \ub354\ub7fd\uc2b5\ub2c8\ub2e4\nprint(tf.reshape(rank_3_tensor, [5, 6]), \"\\n\")\n\n# \uc774\uac74 \uc544\uc608 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\ntry:\n    tf.reshape(rank_3_tensor, [7, -1])\nexcept Exception as e:\n    print(f\"{type(e).__name__}: {e}\")","cbd7a5a0":"the_f64_tensor = tf.constant([2.2, 3.3, 4.4], dtype=tf.float64)\nthe_f16_tensor = tf.cast(the_f64_tensor, dtype=tf.float16)\n# \uc774\uc81c, uint8\ub85c \ubcc0\ud658\ud558\uace0 \uc18c\uc218\uc810\uc744 \uc783\uc2b5\ub2c8\ub2e4\nthe_u8_tensor = tf.cast(the_f16_tensor, dtype=tf.uint8)\nprint(the_u8_tensor)","0c38c26c":"x = tf.constant([1, 2, 3])\n\ny = tf.constant(2)\nz = tf.constant([2, 2, 2])\n# \uc544\ub798\ub294 \ubaa8\ub450 \uac19\uc740 \uacc4\uc0b0\uc785\ub2c8\ub2e4.\nprint(tf.multiply(x, 2))\nprint(x * y)\nprint(x * z)","25871a00":"# \uc774\uac83\ub4e4\uc740 \ubaa8\ub450 \uac19\uc740 \uacc4\uc0b0\uc785\ub2c8\ub2e4\nx = tf.reshape(x, [3, 1])\ny = tf.range(1, 5)\nprint(x, \"\\n\")\nprint(y, \"\\n\")\nprint(tf.multiply(x, y))","19c1eb4e":"x_stretch = tf.constant([[1, 1, 1, 1],\n                        [2, 2, 2, 2],\n                        [3, 3, 3, 3]])\n\ny_stretch = tf.constant([[1, 2, 3, 4],\n                        [1, 2, 3, 4],\n                        [1, 2, 3, 4]])\n\nprint(x_stretch * y_stretch) # \ub610\ub2e4\uc2dc, \uc5f0\uc0b0\uc790 \uc624\ubc84\ub85c\ub529","50fc6cab":"print(tf.broadcast_to(tf.constant([1, 2, 3]), [3, 3]))","622ee18a":"ragged_list = [\n    [0, 1, 2, 3],\n    [4, 5],\n    [6, 7, 8],\n    [9]]","e1a294c7":"try:\n    tensor = tf.constant(ragged_list)\nexcept Exception as e:\n    print(f\"{type(e).__name__}: {e}\")","260fc038":"ragged_tensor = tf.ragged.constant(ragged_list)\nprint(ragged_tensor)","7f14e195":"print(ragged_tensor.shape)","cef7dee6":"# \ud150\uc11c\ub294 \ubb38\uc790\uc5f4\ub3c4 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30 \uc2a4\uce7c\ub77c \ubb38\uc790\uc5f4\uc785\ub2c8\ub2e4.\nscalar_string_tensor = tf.constant(\"Gray wolf\")\nprint(scalar_string_tensor)","6822daf7":"# \uc11c\ub85c \ub2e4\ub978 \uae38\uc774\uc758 \uc138\uac1c \ubb38\uc790\uc5f4 \ud150\uc11c\ub97c \uac00\uc9c0\uace0 \uc788\uc5b4\ub3c4 \uad1c\ucc2e\uc2b5\ub2c8\ub2e4.\ntensor_of_strings = tf.constant([\"Gray wolf\",\n                                \"Quick brown fox\",\n                                \"Lazy dog\"])\n# \ubaa8\uc591\uc740 (3,)\uc73c\ub85c, \ubb38\uc790\uc5f4\uc758 \uae38\uc774\ub294 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\nprint(tensor_of_strings)","2e73f648":"tf.constant(\"\ud83e\udd73\ud83d\udc4d\")","256459af":"# \ud150\uc11c\uc758 \uc9d1\ud569\uc5d0 \ubb38\uc790\uc5f4\uc744 \ub098\ub220\uc11c \ub123\uae30 \uc704\ud574\uc11c\ub294 split\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4\nprint(tf.strings.split(scalar_string_tensor, sep=\" \"))","0395c195":"# ... \ud558\uc9c0\ub9cc \ubb38\uc790\uc5f4 \ud150\uc11c\ub97c \ub098\ub204\uba74 'RaggedTensor'\uac00 \ub429\ub2c8\ub2e4.\n# \uac01 \ubb38\uc790\uc5f4\uc740 \uc11c\ub85c \ub2e4\ub978 \uac1c\uc218\uc758 \ubd80\ubd84\uc73c\ub85c \ub098\ub258\uc5b4\uc9c8 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\nprint(tf.strings.split(tensor_of_strings))","5e811152":"text = tf.constant(\"1 10 100\")\nprint(tf.strings.to_number(tf.strings.split(text, \" \")))","b7d39e47":"byte_strings = tf.strings.bytes_split(tf.constant(\"Duck\"))\nbyte_ints = tf.io.decode_raw(tf.constant(\"Duck\"), tf.uint8)\nprint(\"Byte strings:\", byte_strings)\nprint(\"Bytes:\", byte_ints)","4bcc7b10":"# \ub610\ub294 \uc720\ub2c8\ucf54\ub4dc\ub85c \ub098\ub204\uace0 \ub514\ucf54\ub529\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4\nunicode_bytes = tf.constant(\"\u30a2\u30d2\u30eb \ud83e\udd86\")\nunicode_char_bytes = tf.strings.unicode_split(unicode_bytes, \"UTF-8\")\nunicode_values = tf.strings.unicode_decode(unicode_bytes, \"UTF-8\")\n\nprint(\"\\nUnicode bytes:\", unicode_bytes)\nprint(\"\\nUnicode chars:\", unicode_char_bytes)\nprint(\"\\nUnicode values:\", unicode_values)","1b584fc4":"# \ud76c\uc18c \ud150\uc11c\ub294 \ud6a8\uc728\uc801\uc778 \uba54\ubaa8\ub9ac \ubc29\uc2dd\uc744 \uc704\ud574 \uac12\uc744 \uc704\uce58\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4\nsparse_tensor = tf.sparse.SparseTensor(indices=[[0, 0], [1, 2]],\n                                      values=[1, 2],\n                                      dense_shape=[3, 4])\nprint(sparse_tensor, \"\\n\")\n\n# \ud76c\uc18c \ud150\uc11c\ub97c \uaf49 \ucc44\uc6cc \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4\nprint(tf.sparse.to_dense(sparse_tensor))","c5a4f196":"\ubaa8\uc591 \ubcc0\ud615\uc740 \ucd1d \uc6d0\uc18c \uac1c\uc218\ub9cc \ub9de\ub2e4\uba74 \uc5b4\ub5a4 \uc0c8\ub85c\uc6b4 \ubaa8\uc591\uc73c\ub85c\ub3c4 \"\uc791\ub3d9\"\ud558\uc9c0\ub9cc, \ucd95\uc758 \uc21c\uc11c\ub97c \uace0\ub824\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc804\ud600 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4.","f68c31a1":"**\ucc38\uace0**: \"2\ucc28\uc6d0 \ud150\uc11c\"\uc5d0 \ub300\ud574 \uc5b8\uae09\ud558\ub294 \uac83\uc744 \ubcfc \uc218\ub3c4 \uc788\uc9c0\ub9cc, 2\uae09 \ud150\uc11c\ub294 \uc8fc\ub85c 2\ucc28\uc6d0 \uacf5\uac04\uc744 \uc124\uba85\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.","11f5649f":"\uac00\uc7a5 \uac04\ub2e8\ud558\uace0 \ub9ce\uc774 \uc4f0\uc774\ub294 \uacbd\uc6b0\ub294 \ud150\uc11c\uc640 \uc2a4\uce7c\ub77c\ub97c \uacf1\ud558\uac70\ub098 \ub354\ud558\ub824\uace0 \ud560 \ub54c\uc785\ub2c8\ub2e4. \uc774 \uacbd\uc6b0\uc5d0, \uc2a4\uce7c\ub77c\uac00 \ub2e4\ub978 \uc778\uc790\uc5d0 \ub9de\uac8c \uac19\uc740 \ubaa8\uc591\uc774 \ub418\ub3c4\ub85d \ud37c\ub728\ub824\uc9d1\ub2c8\ub2e4.","60a56ba8":"## \ud37c\ub728\ub9ac\uae30","9e6a1dfc":"\uc2a4\uce7c\ub77c\ub85c \uac00\ub9ac\ud0a4\uba74 \ucd95\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4:","eeea5c2c":"\uc790\ub8cc\ud615\uc5d0\uc11c \uc790\ub8cc\ud615\uc73c\ub85c \ubcc0\ud658\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","2f356bf0":"\uac19\uc740 \ubc29\uc2dd\uc73c\ub85c, \uae38\uc774 1\uc758 \ucd95\uc740 \ub2e4\ub978 \uc778\uc790\uc5d0 \ub9de\uac8c \ub298\ub824\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac19\uc740 \uacc4\uc0b0 \uc18d\uc5d0\uc11c \ub450 \uc778\uc790 \ubaa8\ub450 \ub298\ub824\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","602c8297":"\uc774 \uacbd\uc6b0\uc5d0\ub294 3x1 \ud589\ub82c\uc774 1x4 \ud589\ub82c\uacfc \uc6d0\uc18c\ubcc4 \uacf1\uc148\uc774 \uc218\ud589\ub418\uba74\uc11c 3x4 \ud589\ub82c\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc55e\uc11c\ub294 1\uc774 \uc5b4\ub5bb\uac8c \ub420\uc9c0\ub294 \uc120\ud0dd\uc801\uc785\ub2c8\ub2e4: y\uc758 \ubaa8\uc591\uc740 ```[4]```\uc785\ub2c8\ub2e4.","d5212396":"## \uac00\ub9ac\ud0a4\uae30","fd3a85b4":"## \ubaa8\uc591 \uc0dd\uc131\ud558\uae30","ac1e1dd2":"\uace0\ucc28\uc6d0 \ud150\uc11c\ub294 \uc5ec\ub7ec\uac1c\uc758 \uc0c9\uc778\uc744 \ub118\uaca8\uc8fc\uc5b4 \uac00\ub9ac\ucf1c\uc9d1\ub2c8\ub2e4.","19a9a738":"[tf.string](https:\/\/www.tensorflow.org\/api_docs\/python\/tf#string)\uc740 \ud150\uc11c\uc5d0\uc11c \ub370\uc774\ud130\ub97c \ubb38\uc790\uc5f4 (\ub2e4\uc591\ud55c \uae38\uc774\uc758 \ubc14\uc774\ud2b8 \ubc30\uc5f4)\ub85c \ub098\ud0c0\ub0bc \uc218 \uc788\ub294 dtype\uc785\ub2c8\ub2e4.","fa087f66":"np.array\ub098 tensor.numpy \uba54\uc18c\ub4dc\ub97c \uc0ac\uc6a9\ud574\uc11c \ud150\uc11c\ub97c NumPy \ubc30\uc5f4\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4:","b3089e84":"Python \uac1d\uccb4\ub85c\ubd80\ud130 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\ub97c \uc0dd\uc131\ud560 \ub54c\uc5d0\ub294, \ud2b9\uc815 \ub370\uc774\ud130 \uc790\ub8cc\ud615\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ud2b9\uc815\ud574\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","bbc13e9e":"\"\ubca1\ud130\" \ud639\uc740 \"1\uae09\" \ud150\uc11c\ub294 \uac12\uc758 \ubc30\uc5f4\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubca1\ud130\ub294 \ud558\ub098\uc758 \ucd95\uc744 \uac00\uc9d1\ub2c8\ub2e4:","2873f3c5":"## tf.convert_to_tensor","e5593ba2":"\ud150\uc11c\ub294 \ubcf4\ud1b5 \uc2e4\uc218\ub098 \uc815\uc218\ub97c \uac00\uc9c0\uc9c0\ub9cc, \ub2e4\uc74c\uacfc \uac19\uc740 \ub2e4\uc591\ud55c \uc790\ub8cc\ud615\uc744 \uac00\uc9d1\ub2c8\ub2e4:\n* \ubcf5\uc18c\uc218\n* \ubb38\uc790\uc5f4\n\n\uae30\ubcf8\uc801\uc778 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor) \ud074\ub798\uc2a4\ub294 \ud150\uc11c\uac00 \"\uc9c1\uac01\"\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4 - \uc124\uba85\uc744 \ub367\ubd99\uc774\uc790\uba74, \uac01 \ucd95\uc744 \ub530\ub77c\uc11c \ubaa8\ub4e0 \uc6d0\uc18c\uac00 \uac19\uc740 \ud06c\uae30\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \ub2e4\ub978 \ubaa8\uc591\uc744 \ub2e4\ub8f0 \uc218 \uc788\ub294 \ud2b9\ud654\ub41c \ud615\ud0dc\uc758 \ud150\uc11c\uac00 \uc788\uc2b5\ub2c8\ub2e4:\n* \ube44\uc815\ud615 \ud150\uc11c (\uc544\ub798\uc758 [\ube44\uc815\ud615 \ud150\uc11c](https:\/\/www.tensorflow.org\/guide\/tensor#ragged_tensors)\ub97c \ubcf4\uc138\uc694)\n* \ud76c\uc18c \ud150\uc11c (\uc544\ub798\uc758 [\ud76c\uc18c \ud150\uc11c](https:\/\/www.tensorflow.org\/guide\/tensor#sparse_tensors)\ub97c \ubcf4\uc138\uc694)","61b8f49f":"| \uba87\uac00\uc9c0 \uc548\uc88b\uc740 \ubaa8\uc591 \ubcc0\ud615 | | |\n| --- | --- | --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-bad.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-bad4.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-bad2.png) |","787de2ad":": \uc870\uac01\ub0b4\uae30\ub85c \uac00\ub9ac\ud0a4\uba74 \ucd95\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4:","53fdb627":"\uc77c\ubc18\uc801\uc73c\ub85c [tf.reshape]\uc758 \ud569\ub9ac\uc801\uc778 \uc0ac\uc6a9\uc740 \uc778\uc811\ud55c \ucd95\ub4e4\uc744 \ud569\uce58\uac70\ub098 \ub098\ub204\ub294 (\ub610\ub294 1\ub4e4\uc744 \ucd94\uac00\ud558\uac70\ub098 \uc81c\uac70\ud558\ub294) \uc6a9\ub3c4\uc785\ub2c8\ub2e4.","d9c6dd9f":"| \uc138 \ubb38\uc790\uc5f4\uc744 \ub098\ub234\uc744 \ub54c, \ubaa8\uc591: ```[3, None]``` |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/string-split.png) |","ddc523ee":"| \ubb38\uc790\uc5f4\uc758 \ubca1\ud130, \ubaa8\uc591: ```[3, ]``` |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/strings.png) |","afdba266":"\"\uc2a4\uce7c\ub77c\" \ud639\uc740 \"0\uae09\" \ud150\uc11c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\uce7c\ub77c\ub294 \ub2e8\uc77c \uac12\ub9cc\uc744 \uac00\uc9c0\uba70, \"\ucd95\"\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.","26346b08":"\ub300\uc2e0 [tf.ragged.constant](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/ragged\/constant)\ub97c \uc0ac\uc6a9\ud574\uc11c [tf.RaggedTensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/RaggedTensor)\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4:","95b39c5e":"| tf.RaggedTensor, \ubaa8\uc591: ```[4, None]``` |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/ragged.png) |","ec7e0151":"3\uac1c \ucd95 \ud150\uc11c\uc5d0 \ub300\ud55c \uc608\uc81c\uc785\ub2c8\ub2e4:","50165300":"\ud150\uc11c\ub97c \ud3bc\uce58\uba74 \uba54\ubaa8\ub9ac\uc5d0 \uc5b4\ub5a4 \uc21c\uc11c\ub85c \ubc30\uce58\ub418\ub294\uc9c0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","edc68d42":"\uc608\ub97c \ub4e4\uc5b4, \uc774\uac83\uc740 \ud45c\uc900\uc801\uc778 \ud150\uc11c\ub85c\ub294 \ud45c\ud604\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4:","2ad65ba4":"\uc880 \ub354 \ubcf5\uc7a1\ud574\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Jake VanderPlas\uc758 \ucc45 _Python Data Science Handbook_ \uc758 [\uc774 \uc808](https:\/\/jakevdp.github.io\/PythonDataScienceHandbook\/02.05-computation-on-arrays-broadcasting.html)\uc740 \ub354 \ub9ce\uc740 \ud37c\ub728\ub9ac\uae30 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4 (NumPy\uc5d0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4).","dce653ba":"## \uae30\ucd08","a599f4c5":"\ud37c\ub728\ub9ac\uae30\ub294 [NumPy\uc758 \uac19\uc740 \uc18d\uc131](https:\/\/numpy.org\/doc\/stable\/user\/basics.html)\uc5d0\uc11c \ube4c\ub824\uc628 \uac1c\ub150\uc785\ub2c8\ub2e4. \uac04\ub2e8\ud558\uac8c, \ud2b9\uc815\ud55c \uc870\uac74 \uc544\ub798\uc5d0\uc11c, \ub450 \ud150\uc11c\ub97c \uacb0\ud569\ud558\ub294 \uc5f0\uc0b0\uc744 \uc2e4\ud589\ud560 \ub54c, \uc791\uc740 \ud150\uc11c\ub294 \uc790\ub3d9\uc73c\ub85c \"\ub298\ub824\uc838\" \ud070 \ud150\uc11c\uc5d0 \ub9de\ucdb0\uc9d1\ub2c8\ub2e4.","ef84d36c":"TensorFlow\ub294 [Python\uc5d0\uc11c \ubc30\uc5f4 \ub610\ub294 \ubb38\uc790\uc5f4 \uac00\ub9ac\ud0a4\uae30](https:\/\/docs.python.org\/3\/tutorial\/introduction.html#strings), NumPy \uac00\ub9ac\ud0a4\uae30\uc758 \uae30\ubcf8 \uaddc\uce59\uacfc \ube44\uc2b7\ud55c \ubc29\uc2dd\uc778 \ud45c\uc900 Python \uac00\ub9ac\ud0a4\uae30 \uaddc\uce59\uc744 \ub530\ub985\ub2c8\ub2e4.\n* \uc0c9\uc778\uc740 0\uc5d0\uc11c \uc2dc\uc791\ud569\ub2c8\ub2e4\n* \uc74c\uc758 \uc0c9\uc778 \uac12\uc740 \ub05d\uc5d0\uc11c\ubd80\ud130 \uc5ed\uc21c\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4\n* \ucf5c\ub860, :\uc740 \uc870\uac01\uc744 \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4: \uc2dc\uc791:\ub9c8\uce68:\ub2e8\uacc4","c74cdc0a":"\uba87\uac1c\uc758 \ucd95\uc5d0\uc11c \ub2e4\uc591\ud55c \uac1c\uc218\uc758 \uc6d0\uc18c\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \ud150\uc11c\ub294 \"\ube44\uc815\ud615\"\uc774\ub77c\uace0 \ubd88\ub9bd\ub2c8\ub2e4. \ube44\uc815\ud615 \ub370\uc774\ud130\ub97c \uc704\ud574\uc11c tf.ragged.RaggedTensor\ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","5fb84bca":"[tf.string](https:\/\/www.tensorflow.org\/api_docs\/python\/tf#string) dtype\uc740 TensorFlow\uc5d0\uc11c \ubaa8\ub4e0 \ubc14\uc774\ud2b8 \ub370\uc774\ud130\ub97c \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. [tf.io](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/io) \ubaa8\ub4c8\uc740 \ubc14\uc774\ud2b8\ub85c\ubd80\ud130 \ud639\uc740 \ubc14\uc774\ud2b8\ub85c \ub370\uc774\ud130\ub97c \ubcc0\ud658\ud558\ub294 \ud568\uc218\ub4e4, \uc774\ubbf8\uc9c0\ub97c \ub514\ucf54\ub529\ud558\uace0 csv\ub97c \ubd84\uc11d\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.","3b0e1d23":"| \ud37c\ub728\ub824\uc9c4 \ub367\uc148 : ```[3, 1]``` \uacf1\ud558\uae30 ```[1, 4]```\ub294 ```[3, 4]```\uc785\ub2c8\ub2e4 |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/broadcasting.png) |","1ec427f3":"\"\ud589\ub82c\" \ud639\uc740 \"2\uae09\" \ud150\uc11c\ub294 \ub450\uac1c\uc758 \ucd95\uc744 \uac00\uc9d1\ub2c8\ub2e4:","ffbe4b19":"\ud150\uc18c\uc640 [tf.TensorShape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/TensorShape) \uac1d\uccb4\ub294 \uc811\uadfc\ud558\uae30 \uc704\ud55c \ud3b8\ub9ac\ud55c \uc18d\uc131\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4:","79087d0b":"\ud150\uc11c\ub97c \ub2e4\ub978 \ubaa8\uc591\uc73c\ub85c \ubc14\uafc0 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. [tf.reshape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/reshape) \uc5f0\uc0b0\uc740 \uadf8 \uc544\ub798\uc758 \ub370\uc774\ud130\uac00 \ubcf5\uc81c\ub420 \ud544\uc694\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \ube60\ub974\uace0 \uc309\ub2c8\ub2e4.","326e4c4d":"\uadf8\ub9ac\uace0 \ubb38\uc790\uc5f4\uc758 \ubca1\ud130\uc785\ub2c8\ub2e4:","c53b5099":"\uc2a4\uce7c\ub77c \ubb38\uc790\uc5f4 \ud150\uc11c\uc785\ub2c8\ub2e4:","2fd50439":"## \ud76c\uc18c \ud150\uc11c","e4e444d8":"[tf.broadcast_to](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/broadcast_to)\ub97c \uc0ac\uc6a9\ud574\uc11c \ud37c\ub728\ub9ac\uae30\uac00 \uc5b4\ub5bb\uac8c \uc0dd\uacbc\ub294\uc9c0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d0665937":"\ubaa8\ub4e0 \ud150\uc11c\ub294 Python \uc22b\uc790\ub098 \ubb38\uc790\uc5f4 \uac19\uc774 \ubcc0\uacbd \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4: \ud150\uc11c\uc758 \ub0b4\uc6a9\uc744 \uac31\uc2e0\ud560 \uc218 \uc5c6\uc73c\uba70, \uc0c8\ub85c\uc6b4 \uac83\uc744 \ub9cc\ub4e4 \uc218 \ub9cc \uc788\uc2b5\ub2c8\ub2e4.","5ff4ce56":"\uac01 \uc0c9\uc778 \ub9c8\ub2e4 \uc815\uc218\ub97c \ub118\uae30\uba74 \uacb0\uacfc\ub294 \uc2a4\uce7c\ub77c\uc785\ub2c8\ub2e4.","35ad7025":"\ub300\ubd80\ubd84, \ud37c\ub728\ub9ac\uae30\ub294 \uba54\ubaa8\ub9ac \uc0c1\uc5d0\uc11c \ud655\uc7a5\ub41c \ud150\uc11c\ub97c \uc808\ub300 \uc2e4\uccb4\ud654\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0, \uc2dc\uac04\uc801\uc73c\ub85c\ub3c4 \uacf5\uac04\uc801\uc73c\ub85c\ub3c4 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4.","5e18dc83":"\ub584\ub85c\ub294, \ub370\uc774\ud130\ub294 \ud76c\uc18c\ud574\uc11c \ub9e4\uc6b0 \ub112\uc740 \ub0b4\uc7ac\ub41c \uacf5\uac04\uc744 \uac00\uc9d1\ub2c8\ub2e4. TensorFlow\ub294 [tf.sparse.SparseTensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/sparse\/SparseTensor)\uc640 \ud76c\uc18c \ub370\uc774\ud130\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uc800\uc7a5\ud558\uae30 \uc704\ud55c \uc5f0\uad00\ub41c \uc5f0\uc0b0\ub4e4\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.","da462e14":"[tf.RaggedTensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/RaggedTensor)\uc758 \ubaa8\uc591\uc740 \uc54c \uc218 \uc5c6\ub294 \uae38\uc774\ub97c \uac00\uc9c0\ub294 \uba87\uac1c\uc758 \ucd95\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4:","86c5caa9":"\uc218\ud559\uc801\uc778 \uc5f0\uc0b0\uacfc \ub2e4\ub974\uac8c, \uc608\ub97c \ub4e4\uc5b4, broadcast_to\ub294 \uba54\ubaa8\ub9ac\ub97c \uc808\uc57d\ud558\uae30 \uc704\ud574\uc11c \ud2b9\ubcc4\ud55c \uac83\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\uc11c\ub294 \ud150\uc11c\uac00 \uc2e4\uccb4\ud654\ub429\ub2c8\ub2e4.","ab1989d1":"\ub9cc\uc57d [NumPy](https:\/\/numpy.org\/devdocs\/user\/quickstart.html)\uc640 \uce5c\uc219\ud558\ub2e4\uba74, \ud150\uc11c\ub294 np.arrays\uc640 (\ub300\uac15) \ube44\uc2b7\ud569\ub2c8\ub2e4.","b4b34bd1":"| \uba87\uac00\uc9c0 \uc88b\uc740 \ubaa8\uc591 \ubcc0\ud615 | | |\n| --- | --- | --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-before.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-good1.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/reshape-good2.png) |","52f09ab2":"## DType\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4","461beb69":"\ub9cc\uc57d \uc9c1\uc811 \ub9cc\ub4e0 \uc790\ub8cc\ud615\uc744 \uac00\uc9c0\uace0 \uc788\uace0 \ud150\uc11c\ub85c\uc758 \uc790\ub3d9 \ubcc0\ud658\uc744 \uc6d0\ud55c\ub2e4\uba74, \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [tf.register_tensor_conversion_function](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/register_tensor_conversion_function)\uc744 \ubcf4\uc138\uc694.","32162026":"| \uc77c\ubc18\uc801\uc778 \ucd95\uc758 \uc21c\uc11c |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/shape2.png) |","5083ca8e":"### \ub2e8\uc77c\ucd95 \uac00\ub9ac\ud0a4\uae30","1735078d":"| \uc2a4\uce7c\ub77c, \ubaa8\uc591: ```[]``` | \ubca1\ud130, \ubaa8\uc591: ```[3]``` | \ud589\ub82c, \ubaa8\uc591: ```[3, 2]``` |\n|---|---|---|\n| ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/scalar.png?raw=1) | ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/vector.png?raw=1) | ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/matrix.png?raw=1) |","1b444ea5":"## \ud615\ud0dc","1b5a1970":"[tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor)\uc758 \ub370\uc774\ud130 \uc790\ub8cc\ud615\uc744 \ubcf4\uae30 \uc704\ud574\uc11c\ub294 [Tensor.dtype](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor#dtype) \uc18d\uc131\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","919a6d97":"| tf.SparseTensor, \ubaa8\uc591: ```[3, 4]``` |\n| --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/sparse.png) |","f1e4d34f":"\ub9cc\uc57d \ud558\uc9c0 \uc54a\ub294\ub2e4\uba74, TensorFlow\ub294 \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub294 \ub370\uc774\ud130 \uc790\ub8cc\ud615\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4. TensorFlow\ub294 Python \uc815\uc218\ub97c [tf.int32](https:\/\/www.tensorflow.org\/api_docs\/python\/tf#int32)\ub85c, Python \uc2e4\uc218\ub97c [tf.float32](https:\/\/www.tensorflow.org\/api_docs\/python\/tf#float32)\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4. \uadf8 \uc678\uc758 \uacbd\uc6b0\uc5d0\ub294 TensorFlow\ub294 NumPy\uac00 \ubc30\uc5f4\ub85c \ubcc0\ud658\ud560 \ub54c \uc0ac\uc6a9\ud558\ub294 \uac83\uacfc \uac19\uc740 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","6b858a4e":"## \ube44\uc815\ud615 \ud150\uc11c","0d5b8af5":"\ud150\uc11c\ub294 \ubaa8\ub4e0 \uc885\ub958\uc758 \uc5f0\uc0b0\uc5d0\uc11c \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","8282ad0e":"\ub450\uac1c\ubcf4\ub2e4 \ub9ce\uc740 \ucd95\uc744 \uac00\uc9c4 \ud150\uc11c\ub97c \uc2dc\uac01\ud654\ud558\uae30 \uc704\ud574\uc11c\ub294 \ub9ce\uc740 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.","594186ef":"\uc804\ubd80\ub294 \uc544\ub2c8\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uc5f0\uc0b0\uc740 \ud150\uc11c\uac00 \uc544\ub2cc \uc778\uc790\uc5d0 convert_to_tensor\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \ubcc0\ud658\ub4e4\uc774 \ub4f1\ub85d\ub418\uc5b4 \uc788\uace0, NumPy\uc758 ndarray\ub098 TensorShape, Python \ubc30\uc5f4, [tf.Variable](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Variable)\uacfc \uac19\uc740 \ub300\ubd80\ubd84\uc758 \uac1d\uccb4 \ud074\ub798\uc2a4\ub4e4\uc740 \uc790\ub3d9\uc801\uc73c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4.","355d2aa3":"\ub370\uc774\ud130\ub294 \uba54\ubaa8\ub9ac\uc5d0\uc11c\uc758 \uc704\uce58\ub97c \ubcf4\uc874\ud558\uba70, \uc694\uccad\ub41c \ubaa8\uc591\uc73c\ub85c \uc0c8\ub85c\uc6b4 \ud150\uc11c\uac00 \uc0dd\uc131\ub418\uba74 \uac19\uc740 \ub370\uc774\ud130\ub97c \uac00\ub9ac\ud0b5\ub2c8\ub2e4. TensorFlow\ub294 \uac00\uc7a5 \uc624\ub978\ucabd\uc758 \uc0c9\uc778\ubd80\ud130 \uba54\ubaa8\ub9ac\uc758 \ub2e8\uc77c \ub2e8\uacc4\uc5d0 \ub9de\ucdb0\uc11c \uc99d\uac00\ud558\ub294 C-\ubc29\uc2dd\uc758 \"\ud589-\uc6b0\uc120\" \uba54\ubaa8\ub9ac \uc21c\uc11c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","1f7b721e":"\ucd95\uc774 \uac01\uac01\uc758 \uc704\uce58\uc5d0 \ub530\ub77c \uac00\ub9ac\ucf1c\uc9c0\uae30 \ub54c\ubb38\uc5d0, \uac01\uac01\uc758 \uc758\ubbf8\uc5d0 \ub300\ud574\uc11c \ud56d\uc0c1 \ub530\ub77c\uac00\uace0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ubcf4\ud1b5 \ucd95\uc740 \uc804\uc5ed\uc5d0\uc11c \uc9c0\uc5ed\uc73c\ub85c \uac00\ub294 \uc21c\uc11c\ub97c \uc9c0\ud0b5\ub2c8\ub2e4: \ubb36\uc74c \ucd95\uc774 \uba3c\uc800, \uacf5\uac04 \ucc28\uc6d0\uc774 \uadf8 \ub4a4\ub97c \ub530\ub77c\uc624\uace0, \uac01 \uc704\uce58\uc5d0\uc11c\uc758 \uc18d\uc131\ub4e4\uc774 \ub9c8\uc9c0\ub9c9\uc5d0 \uc704\uce58\ud569\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc774 \uc18d\uc131 \ubca1\ud130\uac00 \uba54\ubaa8\ub9ac \uc0c1\uc5d0\uc11c \uc778\uc811\ud55c \uc9c0\uc5ed\uc5d0 \uc788\uac8c \ud574\uc90d\ub2c8\ub2e4.","d18a68fc":"\ubb38\uc790\uc5f4\uc744 \uc0ac\uc6a9\ud558\ub294 \uba87\uac1c\uc758 \uae30\ubcf8\uc801\uc778 \ud568\uc218\ub294 [tf.strings](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/strings)\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 [tf.strings.split](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/strings\/split)\uac00 \uc788\uc2b5\ub2c8\ub2e4.","9a558f68":"\ubb38\uc790\uc5f4\uc740 \ucabc\uac24 \uc218 \uc5c6\uace0 Python \ubb38\uc790\uc5f4\uc5d0\uc11c \uac00\ub9ac\ud0a4\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc758 \uae38\uc774\ub294 \ud150\uc11c\uc758 \ud558\ub098\uc758 \ucd95\uc758 \uae38\uc774\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc774\uac83\ub4e4\uc744 \ub2e4\ub8e8\ub294 \ud568\uc218\ub97c \uc54c\uc544\ubcf4\uae30 \uc704\ud574\uc11c\ub294 [tf.strings](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/strings)\ub97c \ubcf4\uc138\uc694.","915cd8a0":"[tf.reshape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/reshape)\uc73c\ub85c \ucd95\uc744 \uad50\ud658\ud558\ub294 \uac83\uc740 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4; [tf.transpose](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/transpose)\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","13531b6f":"[tf.RaggedTensor](https:\/\/www.tensorflow.org\/guide\/tensor#ragged_tensors)\ub97c \uc81c\uc678\ud558\uace0, \uc774\ub7f0 \ubaa8\uc591\ub4e4\uc740 TensorFlow\uc758 \uc0c1\uc9d5\uc801\uc774\ub85c \uadf8\ub798\ud504\ub97c \ub9cc\ub4dc\ub294 API\ub4e4\uc5d0\uc11c\ub9cc \ubc1c\uc0dd\ud569\ub2c8\ub2e4:\n* [tf.function](https:\/\/www.tensorflow.org\/guide\/function)\n* [keras \ud568\uc218 API](https:\/\/www.tensorflow.org\/guide\/keras\/functional).","bda4e41b":"\ub9cc\uc57d \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \ub118\uaca8\uc8fc\uba74 utf-8 \uc778\ucf54\ub529\uc774 \ub429\ub2c8\ub2e4.","da8257f5":"\ubb38\uc790\uc5f4 \ud150\uc11c\ub97c \uc22b\uc790\ub4e4\ub85c \ubc14\uafb8\uae30 \uc704\ud574 [tf.cast](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/cast)\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0, \uc774\uac83\uc744 \ubc14\uc774\ud2b8\ub85c \ubcc0\ud658\ud558\uace0 \uadf8 \ub2e4\uc74c\uc5d0 \uc22b\uc790\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","bcc8602e":"\ud150\uc11c\ub294 \ub2e8\uc77c \uc885\ub958(dtype\uc774\ub77c\uace0 \ubd88\ub9bd\ub2c8\ub2e4)\ub85c \uad6c\uc131\ub41c \ub2e4\ucc28\uc6d0 \ubc30\uc5f4\uc785\ub2c8\ub2e4. [tf.dtypes.DType](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/dtypes\/DType)\uc5d0\uc11c \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 dtypes\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","71316d68":"[tf.matmul](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/linalg\/matmul)\uacfc [tf.reshape](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/reshape)\uacfc \uac19\uc740 \ub300\ubd80\ubd84\uc758 \uc5f0\uc0b0\uc740 [tf.Tensor](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/Tensor) \ud074\ub798\uc2a4\uc758 \uc778\uc218\ub97c \ubc1b\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098, \uc704\uc758 \uacbd\uc6b0\uc5d0\uc11c \uc54c\uc544\ucc4c \uc218 \uc788\ub4ef\uc774, \ud150\uc11c\uc640 \uac19\uc740 \ubaa8\uc591\uc758 Python \uac1d\uccb4\ub3c4 \ubc1b\uc544\uc9d1\ub2c8\ub2e4.","8a6b1f00":"### \ub2e4\uc911\ucd95 \uac00\ub9ac\ud0a4\uae30","a583455e":"| \uac01 \ubb36\uc74c\uc5d0\uc11c \uac01 \uc608\uc81c\uc5d0\uc11c \ubaa8\ub4e0 \uc704\uce58 \uc911\uc5d0 \ub9c8\uc9c0\ub9c9 \ud2b9\uc131\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4 | | \n| --- | --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/index1.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/index2.png) }","435212f1":"\ud150\uc11c\ub294 \ub354 \ub9ce\uc740 \ucd95\uc744 \uac00\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4: \uc138\uac1c\uc758 \ucd95\uc744 \uac00\uc9c4 \ud150\uc11c\uc785\ub2c8\ub2e4:","a3cd96d3":"\uadf8\ub9ac\uace0 tf.string.to_number\uc785\ub2c8\ub2e4:","2a259935":"\ud37c\ub728\ub9ac\uae30 \uc5c6\ub294 \uac19\uc740 \uc5f0\uc0b0\uc785\ub2c8\ub2e4:","dae9a24a":"# \ud150\uc11c\uc5d0 \ub300\ud55c \uc18c\uac1c","5eda3825":"## \ubb38\uc790\uc5f4 \ud150\uc11c","f42484e1":"\uae30\ucd08\uc801\uc778 \ud150\uc11c\ub97c \uba87\uac1c \uc0dd\uc131\ud574\ubd05\uc2dc\ub2e4.","8dce1785":"\uc774 3x2x5 \ud150\uc11c\uc5d0\uc11c\ub294, (3x2)x5\ub098 3x(2x5)\ub85c\uc758 \ubaa8\uc591 \ubcc0\ud615\uc740 \uc870\uac01\uc774 \uc11e\uc774\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub450 \uc801\ub2f9\ud55c \ud589\ub3d9\uc785\ub2c8\ub2e4:","ce330382":"\ubaa8\ub450 \uc815\ud574\uc9c0\uc9c0 \uc54a\uc740 \ubaa8\uc591\uc744 \ub9cc\ub098\uac8c \ub420 \ub54c\ub3c4 \uc788\uc744 \uac83\uc785\ub2c8\ub2e4. \ubaa8\uc591\uc774 None (\ucd95\uc758 \uae38\uc774\uac00 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc74c)\uc774\uac70\ub098 \ubaa8\uc591 \uc804\uccb4\uac00 None (\ud150\uc11c\uc758 \uae09\uc774 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc74c)\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","d5733ee2":"\uc815\uc218\uc640 \uc870\uac01\ub0b4\uae30\ub97c \uc5bc\ub9c8\ub4e0\uc9c0 \uc870\ud569\ud574\uc11c \uac00\ub9ac\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4:","51fd9a80":"\ud150\uc11c\uc5d0\uc11c \ub367\uc148, \uc6d0\uc18c \ubcc4 \uacf1\uc148, \ud589\ub82c \uacf1\uc148\uacfc \uac19\uc740 \uae30\ubcf8\uc801\uc778 \uc218\ud559 \uc5f0\uc0b0\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","ea6bee2d":"| | 3\ucd95 \ud150\uc11c, \ubaa8\uc591: ```[3, 2, 5]``` | |\n|---|---|---|\n| ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/3-axis_numpy.png?raw=1) | ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/3-axis_front.png?raw=1) | ![](https:\/\/github.com\/tensorflow\/docs\/blob\/master\/site\/en\/guide\/images\/tensor\/3-axis_block.png?raw=1) |","9def1d5a":"\ud150\uc11c\uc758 \ubaa8\uc591\uc744 \ubc14\uafb8\ub294 \uac83\uc740 \ud070 \uc720\uc6a9\uc131\uc744 \uac00\uc9d1\ub2c8\ub2e4.","b62f64b2":"\ud150\uc11c\ub294 \ud615\ud0dc\ub97c \uac00\uc9d1\ub2c8\ub2e4. \uba87\uac1c \uc6a9\uc5b4\ub97c \uc9da\uc5b4\ubcf4\uc790\uba74:\n* **\ud615\ud0dc**: \ud150\uc11c\uc758 \uac01 \ucd95\uc758 \uae38\uc774(\uc6d0\uc18c\uc758 \uac1c\uc218).\n* **\uae09**: \ud150\uc11c \ucd95\uc758 \uac1c\uc218. \uc2a4\uce7c\ub77c\ub294 0\uae09, \ubca1\ud130\ub294 1\uae09, \ud589\ub82c\uc740 2\uae09.\n* **\ucd95** \ub610\ub294 **\ucc28\uc6d0**: \ud150\uc11c\uc758 \uce21\uc815 \ucc28\uc6d0\n* **\ud06c\uae30**: \ud150\uc11c \uc548\uc5d0 \uc788\ub294 \ucd1d \uc6d0\uc18c\uc758 \uac1c\uc218, \ubaa8\uc591 \ubca1\ud130\uc758 \uacf1.","9e879195":"| 4\uae09 \ud150\uc11c, \ubaa8\uc591: ```[3, 2, 4, 5]``` | |\n| --- | --- |\n| ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/shape.png) | ![](https:\/\/www.tensorflow.org\/guide\/images\/tensor\/4-axis_block.png) |","d9e10148":"\uc704\uc5d0\uc11c b \uc811\ub450\uc0ac\ub294 [tf.string](https:\/\/www.tensorflow.org\/api_docs\/python\/tf#string) dtype\uc774 \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\uc5f4\uc774 \uc544\ub2c8\ub77c \ubc14\uc774\ud2b8 \ubb38\uc790\uc5f4\uc774\ub77c\ub294 \uac83\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. TensorFlow\uc5d0\uc11c \uc720\ub2c8\ucf54\ub4dc \ubb38\uc790\ub97c \uc0ac\uc6a9\ud558\uace0 \uc2f6\ub2e4\uba74 [\uc720\ub2c8\ucf54\ub4dc \ud29c\ud1a0\ub9ac\uc5bc](https:\/\/www.tensorflow.org\/tutorials\/load_data\/unicode)\uc744 \ud655\uc778\ud558\uc138\uc694.","9acc00d7":"\ub2e8\uc77c\ucd95\uc758 \uacbd\uc6b0\uc640 \uc815\ud655\uc774 \ub3d9\uc77c\ud55c \uaddc\uce59\uc774 \uac01 \ucd95\uc5d0 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4."}}