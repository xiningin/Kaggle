{"cell_type":{"4f36a593":"code","490b9da2":"code","66a97fba":"code","12e386eb":"code","11726bbc":"code","46d67ca9":"code","04ab2383":"code","6e1bad5b":"code","724523c1":"code","cd12bba3":"code","45b08b6f":"code","3e203b5a":"code","8f20f98f":"code","9c27a036":"code","e067481e":"code","9bab6cc8":"code","ff62d537":"code","e81ef9af":"code","8a0ede90":"code","04b6b903":"code","99c8e96d":"code","88466b39":"code","191856c9":"code","4537da5c":"code","d100f1e5":"code","91254fcb":"markdown","bc2e1b02":"markdown","0296b5c0":"markdown","6426c297":"markdown","029ba29f":"markdown","5ceb1128":"markdown"},"source":{"4f36a593":"# Importing all necessary libraries.\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","490b9da2":"# Using data from Apple's stock.\ndf = pd.read_csv('..\/input\/sandp500\/individual_stocks_5yr\/individual_stocks_5yr\/AAPL_data.csv') ","66a97fba":"df.head()","12e386eb":"df.info()","11726bbc":"df.describe()","46d67ca9":"df.shape","04ab2383":"# Visualizing the opening prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('Opening Price USD ($)')\nplt.plot(df['open'])\nplt.show()","6e1bad5b":"# Visualizing the high prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('High Price USD ($)')\nplt.plot(df['high'])\nplt.show()","724523c1":"# Visualizing the low prices of the data.\nplt.figure(figsize=(16,8))\nplt.title('Apple')\nplt.xlabel('Days')\nplt.ylabel('Low Price USD ($)')\nplt.plot(df['low'])\nplt.show()","cd12bba3":"df2 = df['close']","45b08b6f":"df2.tail()","3e203b5a":"df2 = pd.DataFrame(df2)  ","8f20f98f":"df2.tail()","9c27a036":"# Prediction 100 days into the future.\nfuture_days = 100\ndf2['Prediction'] = df2['close'].shift(-future_days)","e067481e":"df2.tail()","9bab6cc8":"X = np.array(df2.drop(['Prediction'], 1))[:-future_days]\nprint(X)","ff62d537":"y = np.array(df2['Prediction'])[:-future_days]\nprint(y)","e81ef9af":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","8a0ede90":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression","04b6b903":"# Implementing Linear and Decision Tree Regression Algorithms.\ntree = DecisionTreeRegressor().fit(x_train, y_train)\nlr = LinearRegression().fit(x_train, y_train)","99c8e96d":"x_future = df2.drop(['Prediction'], 1)[:-future_days]\nx_future = x_future.tail(future_days)\nx_future = np.array(x_future)\nx_future","88466b39":"tree_prediction = tree.predict(x_future)\nprint(tree_prediction)","191856c9":"lr_prediction = lr.predict(x_future)\nprint(lr_prediction)","4537da5c":"predictions = tree_prediction \nvalid = df2[X.shape[0]:]\nvalid['Predictions'] = predictions","d100f1e5":"plt.figure(figsize=(16,8))\nplt.title(\"Model\")\nplt.xlabel('Days')\nplt.ylabel('Close Price USD ($)')\nplt.plot(df2['close'])\nplt.plot(valid[['close', 'Predictions']])\nplt.legend([\"Original\", \"Valid\", 'Predicted'])\nplt.show()","91254fcb":"In this notebook I take a look at stock market prediction using decision tree and linear regression.","bc2e1b02":"# Importing Libraries","0296b5c0":"# Linear and Decision Tree Regression","6426c297":"# EDA","029ba29f":"# Data","5ceb1128":"# Stock Market Prediction using Decision Tree"}}