{"cell_type":{"9476568c":"code","c77eaedb":"code","497bf13a":"code","580eadea":"code","0f4c6141":"code","9103f812":"code","e82a425c":"code","617320d6":"code","a3c00886":"code","a53be535":"code","092d1f9d":"code","6ead103a":"code","126ba8fc":"code","5d0d2774":"code","f335c114":"markdown","e041c331":"markdown","ce9c3aa0":"markdown","b301ef0c":"markdown","93f7af9b":"markdown"},"source":{"9476568c":"import pandas as pd\nimport numpy as np\nimport re as re\ndf = pd.read_csv('..\/input\/laptop-price-prediction-using-specifications\/LaptopPricePrediction.csv')\ndf.head()","c77eaedb":"#removing the Unnamed column\ndf.drop(df.columns[df.columns.str.contains('unnamed',case = False)],axis = 1, inplace = True)\ndf.head()","497bf13a":"# removing the rupee symbol from the price column\ndf['Price'] = df['Price'].str.replace(',', '')\ndf['Price'] = df['Price'].str.replace('\u20b9', '')\ndf.head(10)","580eadea":"# removing the text the from the all rows of the ram column.\n# so that we can treat it as number data.\ndf[\"RAM\"] = df.RAM.str.replace('\\s.*','')\n\ndf.head(10)","0f4c6141":"# removing the text the from the all rows of the Warranty column.\n# so that we can treat it as number data.\ndf[\"Warranty\"] = df.Warranty.str.replace('\\s.*','')\ndf.head()","9103f812":"#droping irrelevant column such as operating system. Becuase it is same for every laptop.\n# droping rating becuase it is no where correlated with price.\n\ndf.drop(['rating', 'Operating System'], axis = 1, inplace = True)\ndf.head()","e82a425c":"df[\"Price\"] = df[\"Price\"].astype(str).astype(int)\nprint(df.dtypes)\n","617320d6":"df['Storage'] = df['Storage'].replace('1 TB', '1024 GB', regex=True)\ndf","a3c00886":"column = [Predictor for Predictor in df.columns if df[Predictor].dtype == 'O']\nfor Predictor in column:\n    labels_ordered= df.groupby([Predictor])['Price'].mean().sort_values().index\n    labels_ordered={k:i for i,k in enumerate(labels_ordered,0)}\n    df[Predictor]=df[Predictor].map(labels_ordered)\ndf.head(10)","a53be535":"#seprating target vraible from features\nTarget = df['Price']\nfeatures = df.drop(columns='Price')","092d1f9d":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler() \n\na = scaler.fit_transform(features)\nfeatures = pd.DataFrame(a)","6ead103a":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(features, Target, test_size=0.3, random_state=42,shuffle = True)","126ba8fc":"from sklearn.ensemble import RandomForestRegressor\nRandom_forest_regressor = RandomForestRegressor(random_state=10)\nRandom_forest_regressor.fit(X_train,y_train)\n\n","5d0d2774":"print(\"Training score\")\nprint(Random_forest_regressor.score(X_train,y_train))\nprint('\\r')\nprint(\"Testing score\")\nprint(Random_forest_regressor.score(X_test,y_test))","f335c114":"# Standardising","e041c331":"# Splitting","ce9c3aa0":"# Data Cleaning","b301ef0c":"# Random Forest Regressor","93f7af9b":"# Loading Required Libraries and dataset"}}