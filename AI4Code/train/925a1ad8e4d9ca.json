{"cell_type":{"b9fef71d":"code","5f126bc8":"code","1394bef4":"code","2b418b09":"code","a932fcee":"code","a902d52a":"code","41e6aaf6":"code","e50207e7":"code","c9f07bb2":"code","2a3143f8":"code","dbb146ca":"code","18ebc146":"code","1c4df99d":"code","c7ac0b1f":"code","68314437":"markdown","9abec530":"markdown"},"source":{"b9fef71d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","5f126bc8":"#Loading the dataset\nenv=pd.read_csv('\/kaggle\/input\/environmental-variables-for-world-countries\/World_countries_env_vars.csv')\n\n#first look and the info about dataset\nenv.info()\nenv.head()","1394bef4":"#correlation of dataset\nenv.corr()","2b418b09":"#correlation with plot\nf,ax=plt.subplots(figsize=(15,12))\nsns.heatmap(env.corr(), annot=True, linewidths=.5, fmt='.1f', ax=ax)","a932fcee":"#line plot\nenv.wind.plot(kind = 'line', label = 'wind', linewidth = 1, alpha = 0.5, grid = True, linestyle = '-.', figsize =(15,15))\nenv.temp_annual_range.plot(kind = 'line', color = 'r', label = 'temp_annual_range', linewidth = 1, alpha = 0.5, grid = True, linestyle = '-.', figsize =(15,15))\nplt.legend(loc = 'upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line Plot')","a902d52a":"#histogram of all columns\nenv.hist(figsize =(10,10))","41e6aaf6":"#hexbin plot\n#Actually, when I was searching the plot types, I came across this. But I do not understand this plot purpose.\nenv.plot(kind='hexbin', x='wind', y='temp_annual_range', color='g', figsize =(15,15))","e50207e7":"env.head()","c9f07bb2":"#minimum elevation\nenv.elevation.min()","2a3143f8":"#maximum elevation\nenv.elevation.max()","dbb146ca":"#minimum accessibility_to_cities\nenv.accessibility_to_cities.min()","18ebc146":"#maximum accessibility_to_cities\nenv.accessibility_to_cities.max()","1c4df99d":"#the result of where elevation >400 and accessibility_to_cities < 100\nenv[(env['elevation']>400) & (env['accessibility_to_cities']<100)]","c7ac0b1f":"#printing the result of elevation where elevation >400 and accessibility_to_cities < 100 and cropland_cover<20\nvar1 = env[(env['elevation']>400) & (env['accessibility_to_cities']<100) & (env['cropland_cover']<20)]\nfor index, value in var1.iterrows():\n    print (value.Country,\"elevation: \", value.elevation)","68314437":"Almost all country has low \"accessibility to city\", \"elevation\"","9abec530":"I chose that dataset because I want to study enviromental with satellite imagery and machine learning."}}