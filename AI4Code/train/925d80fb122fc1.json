{"cell_type":{"70ac9f5a":"code","f0190724":"code","1cb2a50c":"code","01766738":"code","4cf05a4b":"code","729a4c0f":"code","e3031082":"code","81146148":"code","200a4c15":"code","5f4bbecf":"code","35533146":"code","d5f5d7bc":"code","b7f0286b":"code","71048d9c":"code","f614475e":"code","1017e021":"code","032fc63b":"code","fdc4224e":"code","6ed7a18b":"code","7264d970":"code","4609684a":"code","c512cd6e":"code","af87a803":"code","4fd0793f":"code","6ab3b0b2":"code","dd5aaeea":"code","f2d606b9":"code","baec40b5":"code","67529e9f":"code","63cff0de":"code","67f4bbd8":"code","f0407638":"markdown","ac3c940a":"markdown","1b274a7a":"markdown","926b724a":"markdown","cdafbbb0":"markdown","519ebadc":"markdown","47effedb":"markdown","0214248d":"markdown","dab81774":"markdown","d76697ba":"markdown","98dff987":"markdown","77cc9514":"markdown","11ef2846":"markdown"},"source":{"70ac9f5a":"%%capture\n!pip install pycaret","f0190724":"import nltk\nnltk.download('stopwords')","1cb2a50c":"#import data and preprocess\nimport pandas as pd\nimport re\nimport string\nfrom string import punctuation\nfrom nltk.corpus import stopwords\nstop_words = stopwords.words('indonesian') #stopwords for Indonesian\n\n#feature extraction\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer","01766738":"bisnis_df = pd.read_csv('..\/input\/iykra-odin\/bisnis.csv', usecols=['content'])\nbisnis_df['category'] = 'bisnis'\nbisnis_df.head(2)","4cf05a4b":"lifestyle_df = pd.read_csv('..\/input\/iykra-odin\/lifestyle.csv', usecols=['content'])\nlifestyle_df['category'] = 'lifestyle'\nlifestyle_df.head(2)","729a4c0f":"sport_df = pd.read_csv('..\/input\/iykra-odin\/sport.csv', usecols=['content'])\nsport_df['category'] = 'sport'\nsport_df.head(2)","e3031082":"df = pd.concat([bisnis_df, lifestyle_df, sport_df])\ndf.describe()","81146148":"import warnings\nwarnings.filterwarnings('ignore')","200a4c15":"cv = CountVectorizer(lowercase = True, stop_words = stop_words, token_pattern=\"[A-Za-z]+\")\nBoW = cv.fit_transform(df['content'])\nBoW_df = pd.DataFrame(BoW.toarray(), columns=cv.get_feature_names())\nBoW_df['target_cat'] = df.reset_index().category.map({'bisnis':0, 'lifestyle':1, 'sport':2})\nBoW_df","5f4bbecf":"from pycaret.classification import *\nsetup = setup(data=BoW_df, target='target_cat', session_id=123, train_size = 0.7, fold=10, silent=True)","35533146":"models = compare_models()","d5f5d7bc":"lr = create_model('lr')\nplot_model(lr, \"confusion_matrix\")","b7f0286b":"svm = create_model('svm')\nplot_model(svm, \"confusion_matrix\")","71048d9c":"nb = create_model('nb')\nplot_model(nb, \"confusion_matrix\")","f614475e":"tv = TfidfVectorizer(lowercase = True, stop_words = stop_words, token_pattern=\"[A-Za-z]+\")\ntf_idf = tv.fit_transform(df['content'])\ntf_idf_df = pd.DataFrame(tf_idf.toarray(), columns=tv.get_feature_names())\ntf_idf_df['target_cat'] = df.reset_index().category.map({'bisnis':0, 'lifestyle':1, 'sport':2})\ntf_idf_df","1017e021":"from pycaret.classification import *\nsetup = setup(data=tf_idf_df, target='target_cat', session_id=123, train_size = 0.7, fold=10, silent=True)","032fc63b":"models = compare_models()","fdc4224e":"lr = create_model('lr')\nplot_model(lr, \"confusion_matrix\")","6ed7a18b":"svm = create_model('svm')\nplot_model(svm, \"confusion_matrix\")","7264d970":"nb = create_model('nb')\nplot_model(nb, \"confusion_matrix\")","4609684a":"from sklearn.cluster import KMeans","c512cd6e":"mod = KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,\n       n_clusters=3, n_init=10, n_jobs=-1, precompute_distances='deprecated',\n       random_state=123, tol=0.0001, verbose=0)","af87a803":"res = mod.fit_transform(BoW_df.drop('target_cat', axis=1))","4fd0793f":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits import mplot3d","6ab3b0b2":"BoW_df['col'] = BoW_df['target_cat'].map({0:'green', 1:'red', 2:'blue'})","dd5aaeea":"plt.figure(figsize=(10,10))\nax = plt.axes(projection='3d')\nax.set_zlim(0, 50)\nax.set_xlim(0, 50)\nax.set_ylim(65, 90)\nax.scatter3D(res[:,1], res[:,2], res[:,0], c=BoW_df['col'], cmap='Greens');\nax.view_init(10, 150) #rotate view\nplt.draw()","f2d606b9":"#we choose naive bayes because it has the highest accuracy\nnb = create_model('nb')\nnb_final = finalize_model(nb)","baec40b5":"text_sport = ['TRIBUNNEWS.COM, JAKARTA \u2013 Pebulutangkis asal China Taipei, Lee Yang\/Wang Chi-Lin akhirnya mampu mengalahkan Kevin Sanjaya Sukamuljo\/Marcus Fernaldi Gideon pada laga pamungkas grup A Olimpiade Tokyo 2020. Pada laga tersebut, Lee\/Wang menaklukkan Kevin\/Marcus melalui drama rubber game 18-21, 21-15 dan 17-21. Hasil ini membuat Lee\/Wang bangga lantaran tak pernah menang dari Kevin\/Marcus dalam tiga pertemuan terakhir. Seusai laga, Wang Chi Lin mengatakan di laga tadi, dirinya bersama Lee Yang memang mengubah strategi yang awalnya bertahan menjadi menyerang. Bahkan, ia mengatakan penampilan ini dinilainya jadi penampilan terbaiknya.\" \"Kami tidak memiliki tekanan dan jadi kami bermain lebih baik dari kemarin. Kami kalah di pertandingan pertama karena kami bermain terlalu bertahan,\u201d kata Wang Chi Lin, Selasa (27\/7\/2021). \u201cJadi kami mencoba menikmati pertandingan hari ini dan menyerang. Sejauh ini, ini penampilan terbaik kami selama kompetisi,\u201d sambungnya. Meski sukses mengalahkan The Minions, Lee\/Wang yang sama-sama mengemas dua kali kemenangan harus puas lolos sebagai runner-up grup A. Sementara The Minions tetap keluar sebagai juara grup lantaran mengemas angka yang lebih baik dari Lee\/Wang dan Shetty\/Reddy. Kevin\/Marcus meraih kemenangan dua game langsung saat menghadapi Shetty\/Reddy dan Lane Vendy serta terakhir kalah 2-1 dari Lee\/Wang.']","67529e9f":"text_transformed = tv.transform(text_sport)\ntext_transformed_df = pd.DataFrame(text_transformed.toarray(), columns=tv.get_feature_names())\nprediction = predict_model(nb_final, text_transformed_df)\nprediction[['Label', 'Score']] # 'bisnis':0, 'lifestyle':1, 'sport':2","63cff0de":"text_bisnis =['TRIBUNNEWS.COM, JAKARTA - Perusahaan layanan angkutan bus Damri melakukan penyesuaian jam operasional selama masa Pemberlakuan Pengetatan Kegiatan Masyarakat (PPKM) Level 4. Corporate Secretary Damri Sidik Pramono mengatakan, Damri melakukan penyesuaian jam operasional armada menuju Bandara mulai pukul 02.00 \u2013 18.00 WIB, sedangkan dari dalam Bandara mulai pukul 07.00 \u2013 21.00 WIB. \"Selain itu, kami juga memperketat pembatasan jumlah penumpang dengan kapasitas angkut hanya 50 persen,\" ucap Sidik, Selasa (27\/7\/2021). Sidik juga mengungkapkan, penumpang Damri yang melakukan perjalanan di Pulau Jawa dan Bali wajib menunjukkan kartu vaksin dosis pertama dan surat keterangan hasil negatif tes RT-PCR yang diambil dalam kurun waktu maksimal 2x24 jam sebelum keberangkatan, atau hasil negatif rapid test antigen yang diambil dalam kurun waktu maksimal 1x24 jam sebelum keberangkatan. \"Kemudian untuk yang bekerja di sektor formal diimbau untuk membawa Surat Tanda Registrasi Pekerja (STRP) atau Surat Tugas\/Keperluan dari pimpinan Perusahaan,\" ucap Sidik. Kebijakan ini, lanjut Sidik, tentunya mengacu pada Surat Edaran Kementerian Perhubungan Nomor 54 Tahun 2021 tentang Perubahan Kedua Atas SE Menteri Perhubungan Nomor 42 Tahun 2021, serta Surat Edaran Satgas Covid-19 Nomor 15 Tahun 2021. \"Kami mengimbau kepada masyarakat yang masih harus keluar rumah dan menggunakan transportasi publik agar tetap mematuhi protokol kesehatan dengan mengutamakan kesehatan dan keselamatan bersama,\" ujar Sidik.']","67f4bbd8":"text_transformed = tv.transform(text_bisnis)\ntext_transformed_df = pd.DataFrame(text_transformed.toarray(), columns=tv.get_feature_names())\nprediction = predict_model(nb_final, text_transformed_df)\nprediction[['Label', 'Score']] # 'bisnis':0, 'lifestyle':1, 'sport':2","f0407638":"## BoW","ac3c940a":"## [BONUS] Clustering by K-Means","1b274a7a":"### Confusion Matrix (BoW)","926b724a":"Before doing any machine learning task with PyCaret, we should set up the environment necessarily. Because we want to do a classification task, we need to set up it accordingly. Another argument we specify here is the target variable, train size, and the number of folds. ","cdafbbb0":"### TF-IDF","519ebadc":"### Confusion Matrix (TF-IDF)","47effedb":"Hi everyone!\n\nIn this notebook, I will demonstrate how to do automated text classification with PyCaret.\nThe dataset is collected from an Indonesian online newspaper, thus the text is in Indonesian.\nI only use minimal pre-processing and feature extraction, so that the reader can easily understand what's going on here.\n\nFeel free to connect with me on LinkedIn. [**LinkedIn post of this notebook**](https:\/\/www.linkedin.com\/posts\/yevonnael-andrew-3351b9a7_automated-text-classification-using-pycaret-activity-6827505978343325696-AsEf)\n\n**What is PyCaret?**\n\nPyCaret is an open-source,\u00a0**low-code\u00a0machine learning library** in Python that aims to reduce the cycle time from hypothesis to insights. It is well suited for\u00a0**seasoned data scientists**\u00a0who want to increase the productivity of their ML experiments by using PyCaret in their workflows or for\u00a0**citizen data scientists**\u00a0and **those\u00a0new to data science**\u00a0with little or no background in coding. PyCaret allows you to go from preparing your data to deploying your model within seconds using your choice of notebook environment. https:\/\/pycaret.org\/guide\/","0214248d":"Above we can see the metrics from training on 10 folds.","dab81774":"## Conclusion\n\nIn this notebook, we demonstrated how easy to create classification models with PyCaret. With only several lines of code, we can compare the numbers of models for text classification, with their metrics.\n\nPyCaret philosophy is \u201clow-code\u201d, which means it goals to make machine learning more accessible to a wider audience. \n\nWe encouraged readers to dive deeper into other parameters available on PyCaret. Please consult with official documentation of PyCaret.","d76697ba":"## Prediction","98dff987":"We can see that our model succesully predict the category of our unseen data with full confidence.","77cc9514":"After setting up the environment, we now compare the models.","11ef2846":"We have three separate data sources, each source is its own category. After loading all three data, we will concatenate them."}}