{"cell_type":{"916fb7b1":"code","ef91b903":"code","dc21d5f8":"code","388589ea":"code","c08ddf0d":"code","1fbaad95":"code","cd76f744":"code","4126616d":"code","31b13338":"code","261a4619":"code","921cf3e9":"code","9bdded72":"code","39d131c7":"code","ea28254b":"code","243953bf":"code","2b9efed5":"code","88627215":"code","4b6410b2":"markdown","ed878451":"markdown","79b20afc":"markdown","07e72372":"markdown","698b477a":"markdown"},"source":{"916fb7b1":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","ef91b903":"from cycler import cycler\nimport matplotlib as mpl\n\nraw_light_palette = [\n    (0, 122, 255), # Blue\n    (255, 149, 0), # Orange\n    (52, 199, 89), # Green\n    (255, 59, 48), # Red\n    (175, 82, 222),# Purple\n    (255, 45, 85), # Pink\n    (88, 86, 214), # Indigo\n    (90, 200, 250),# Teal\n    (255, 204, 0)  # Yellow\n]\n\nraw_dark_palette = [\n    (10, 132, 255), # Blue\n    (255, 159, 10), # Orange\n    (48, 209, 88),  # Green\n    (255, 69, 58),  # Red\n    (191, 90, 242), # Purple\n    (94, 92, 230),  # Indigo\n    (255, 55, 95),  # Pink\n    (100, 210, 255),# Teal\n    (255, 214, 10)  # Yellow\n]\n\nraw_gray_light_palette = [\n    (142, 142, 147),# Gray\n    (174, 174, 178),# Gray (2)\n    (199, 199, 204),# Gray (3)\n    (209, 209, 214),# Gray (4)\n    (229, 229, 234),# Gray (5)\n    (242, 242, 247),# Gray (6)\n]\n\nraw_gray_dark_palette = [\n    (142, 142, 147),# Gray\n    (99, 99, 102),  # Gray (2)\n    (72, 72, 74),   # Gray (3)\n    (58, 58, 60),   # Gray (4)\n    (44, 44, 46),   # Gray (5)\n    (28, 28, 39),   # Gray (6)\n]\n\nlight_palette = np.array(raw_light_palette)\/255\ndark_palette = np.array(raw_dark_palette)\/255\ngray_light_palette = np.array(raw_gray_light_palette)\/255\ngray_dark_palette = np.array(raw_gray_dark_palette)\/255\n\nmpl.rcParams['axes.prop_cycle'] = cycler('color',dark_palette)\nmpl.rcParams['figure.facecolor']  = gray_dark_palette[-2]\nmpl.rcParams['figure.edgecolor']  = gray_dark_palette[-2]\nmpl.rcParams['axes.facecolor'] =  gray_dark_palette[-2]\n\nwhite_color = gray_light_palette[-2]\nmpl.rcParams['text.color'] = white_color\nmpl.rcParams['axes.labelcolor'] = white_color\nmpl.rcParams['axes.edgecolor'] = white_color\nmpl.rcParams['xtick.color'] = white_color\nmpl.rcParams['ytick.color'] = white_color\n\nmpl.rcParams['figure.dpi'] = 200\n\nmpl.rcParams['axes.spines.top'] = False\nmpl.rcParams['axes.spines.right'] = False\n","dc21d5f8":"data = pd.read_csv(r'..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","388589ea":"data.head()","c08ddf0d":"data.shape","1fbaad95":"data.dtypes","cd76f744":"data.nunique()","4126616d":"data.describe()","31b13338":"data.isnull().sum()","261a4619":"sns.countplot(x='sex',data=data,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0) \nplt.title('\"Distribution of sex\\naccording to target variable')\nplt.show()","921cf3e9":"plt.figure(figsize=(14,6))\nplt.subplot(121)\nsns.kdeplot(x='age',hue='output',data=data,fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0)\nplt.title('\"Distribution of age\\naccording to target variable')\n\nplt.subplot(122)\nsns.kdeplot(x='trtbps',hue='output',data=data,fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0) \nplt.title('\"Distribution of trtbps\\naccording to target variable')\nplt.show()","9bdded72":"plt.figure(figsize=(14,7))\nplt.subplot(121)\nsns.kdeplot(x='chol',hue='output',data=data,fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0) \nplt.title('\"Distribution of chol\\naccording to target variable')\n\nplt.subplot(122)\nsns.kdeplot(x='oldpeak',hue='output',data=data,fill=True,palette=[\"#8000ff\",\"#da8829\"], alpha=.5, linewidth=0) \nplt.title('\"Distribution of oldpeak\\naccording to target variable')\nplt.show()","39d131c7":"sns.catplot(x='cp',y='thalachh',hue='output',kind='swarm',data=data)\nplt.show()","ea28254b":"X = data.drop('output',axis=1)\ny = data['output']","243953bf":"from sklearn.model_selection import KFold, StratifiedKFold\nfrom sklearn.metrics import accuracy_score\n\ndef cross_val(X, y, model, params, folds=5):\n\n    skf = StratifiedKFold(n_splits=folds, shuffle=True, random_state=21)\n    for fold, (train_idx, test_idx) in enumerate(skf.split(X, y)):\n        print(f\"Fold: {fold}\")\n        x_train, y_train = X.iloc[train_idx], y.iloc[train_idx]\n        x_test, y_test = X.iloc[test_idx], y.iloc[test_idx]\n\n        alg = model(**params)\n        alg.fit(x_train, y_train,\n                eval_set=[(x_test, y_test)],\n                early_stopping_rounds=100,\n                verbose=400)\n\n        pred = alg.predict(x_test)\n        accuracy = accuracy_score(y_test, pred)\n        print(f\" accuracy_score: {accuracy}\")\n        print(\"-\"*50)\n    \n    return alg","2b9efed5":"catboost_params= {\"iterations\": 1600,\n                  \"learning_rate\": 0.033,\n                  \"depth\": 6,\n                  \"bagging_temperature\": 0.3,\n                  \"metric_period\":200,\n                  \"od_type\":'Iter',\n                  \"od_wait\": 400,\n                  \"random_seed\":17,\n                  \"allow_writing_files\":False}","88627215":"from catboost import CatBoostClassifier\ncat_model = cross_val(X, y, CatBoostClassifier, catboost_params)","4b6410b2":"About this dataset\n* Age : Age of the patient\n\n* Sex : Sex of the patient\n\n* exang: exercise induced angina (1 = yes; 0 = no)\n\n* ca: number of major vessels (0-3)\n\n* cp : Chest Pain type chest pain type\n      * Value 1: typical angina\n      * Value 2: atypical angina\n      * Value 3: non-anginal pain\n      * Value 4: asymptomatic\n* trtbps : resting blood pressure (in mm Hg)\n\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n\n* rest_ecg : resting electrocardiographic results\n      * Value 0: normal\n      * Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n      * Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* thalach : maximum heart rate achieved\n\n* target : 0= less chance of heart attack 1= more chance of heart attack","ed878451":"#### if you like this notebook please upvote it.\n#### thank you","79b20afc":"Higher the chest pain and higher the heart rate, very likely is person to suffer from heart attack.","07e72372":"### Model building","698b477a":"### Data Visualization"}}