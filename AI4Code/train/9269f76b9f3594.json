{"cell_type":{"5c8e4ee7":"code","6bf35eba":"code","839934af":"code","11ea4556":"code","e51b1494":"code","88dd3eb0":"code","90f48f83":"code","919b1da2":"code","cd37cca4":"code","f90dad84":"code","6071cedf":"code","0c933fa4":"code","1d130fca":"code","a4c686a3":"code","4bb474be":"code","8f0e54e2":"markdown","955cfed8":"markdown","f357ecf0":"markdown","4b7c362f":"markdown","198b4e5f":"markdown","300c8977":"markdown","47747244":"markdown"},"source":{"5c8e4ee7":"# This Python 3 environment comes with many helpful analytics libraries installed\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt;\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","6bf35eba":"data=pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","839934af":"data.info()","11ea4556":"data.isnull().sum()","e51b1494":"data.dropna(subset=['Publisher'],inplace=True);\ndata['Year'].fillna(method='ffill',inplace=True);","88dd3eb0":"totalsales=round(data.groupby(['Genre']).sum(),0)\ntotalsales.reset_index(inplace=True)\navgsales=round(data.groupby(['Genre']).mean(),2)\navgsales.reset_index(inplace=True)","90f48f83":"sales=[]\nfor i in range(0,len(totalsales)):\n    one ={\n\t    'Genre' : totalsales.iloc[i]['Genre'],\n\t    'Total_Sales' : totalsales.iloc[i]['Global_Sales'],\n\t    'Avg_Sales' : avgsales.iloc[i]['Global_Sales']\n\t    }\n    sales.append(one)\nsales=pd.DataFrame(sales)\nsales.sort_values('Total_Sales',inplace=True)","919b1da2":"plt.figure(figsize=(16,8))\nplt.suptitle('Total and Average Global Sales Analysis Across Genre',fontsize=20)\nplt.subplot(121)\nplt.barh(sales['Genre'],sales['Total_Sales'],height=0.5)\nplt.xlabel('Total Sales',fontsize=16)\nplt.yticks(fontsize=13)\nplt.subplot(122)\nplt.barh(sales['Genre'],sales['Avg_Sales'],height=0.5)\nplt.xlabel('Avg Sales',fontsize=16)\nplt.yticks(fontsize=13)\nplt.show()","cd37cca4":"color=['blue','orange','green','red','purple','brown','pink','skyblue','indigo','olive','lime','gold']\n#plt.figure(figsize=(5,5))\nplt.pie(totalsales.Global_Sales,labels=totalsales.Genre,pctdistance=0.8,labeldistance=1.1,autopct='%1.1f%%',startangle=90,colors=color,)\nplt.title('Global Sales Percentage Across Genre',fontsize=16)\nplt.show()","f90dad84":"platform=pd.DataFrame(data.Platform.value_counts())\nplatform.reset_index(inplace=True)\nplatform.rename(columns={'Platform': 'Number of Games', 'index': 'Platform'},inplace=True)\nplatform.drop(platform.index[20:],inplace=True)\nplatform.sort_values('Number of Games',inplace=True)\nplt.figure(figsize=(6,8))\nplt.barh(platform.Platform,platform['Number of Games'],height=0.5)\nplt.title('Number of Games Across Platform',fontsize=16)\nplt.show()\n","6071cedf":"Genre=[]\nNorth_America=[]\nEurope=[]\nJapan=[]\nOther=[]\nfor i in range(0,len(totalsales)):\n    Genre.append(totalsales.iloc[i].Genre)\n    net=100\/totalsales.iloc[i].Global_Sales\n    North_America.append(round(totalsales.iloc[i].NA_Sales*net,4))\n    Europe.append(round(totalsales.iloc[i].EU_Sales*net,4))\n    Japan.append(round(totalsales.iloc[i].JP_Sales*net,4))\n    Other.append(round(totalsales.iloc[i].Other_Sales*net,4))\n\nGenre=np.array(Genre)\nNorth_America=np.array(North_America)\nEurope=np.array(Europe)\nJapan=np.array(Japan)\nOther=np.array(Other)\n","0c933fa4":"ind=np.arange(12)\nwidth=0.4\nplt.figure(figsize=(16,5))\nplt.bar(ind,North_America,width)\nplt.bar(ind,Europe,width,bottom=North_America)\nplt.bar(ind,Japan,width,bottom=North_America+Europe)\nplt.bar(ind,Other,width,bottom=North_America+Europe+Japan)\nplt.xticks(ind,Genre,fontsize=13)\nplt.legend(['North America','Europe','Japan','Other'])\nplt.title('Sales Percentage Distribution Across Region',fontsize=16)\nplt.show()\n","1d130fca":"i=0\ndf=data.groupby(['Genre'])\nplt.figure(figsize=(15,8))\nfor genre,games in df:\n    games=round(games.groupby(['Name']).sum(),2)\n    games.reset_index(inplace=True)\n    games.sort_values(['Global_Sales'],inplace=True)\n    games=games.iloc[len(games)-5:]\n    i=i+1\n    plt.subplot(2,2,i)\n    plt.barh(games.Name,games.Global_Sales,height=0.5)\n    plt.title(\"Top 5 Games for \" + genre,fontsize=14)\n    if i%4==0:\n        i=0\n        plt.show()\n        plt.figure(figsize=(15,8))\n","a4c686a3":"platform=pd.DataFrame(data.groupby(['Platform']).sum())\nplatform.sort_values(['Global_Sales'],ascending=False,inplace=True)\nplatform.reset_index(inplace=True)\ntop15=[]\nfor i in range(0,15):\n    top15.append(platform.iloc[i]['Platform'])\nfull=[]\nfor genre,table in df:\n    table=round(table.groupby(['Platform']).sum(),0)\n    table.reset_index(inplace=True)\n    temp=[]\n    for each in top15:\n\t    x=table[['Global_Sales']][table.Platform==each]\n\t    if len(x)==0:\n\t\t    temp.append(0)\n\t    else :\n\t\t    temp.append(x.iat[0,0])\n    full.append(np.array(temp))\n","4bb474be":"prev=np.zeros(15)\nind=np.arange(0,15)\npx=[]\nplt.figure(figsize=(16,10))\nfor i in range(0,len(Genre)):\n    px.append(plt.bar(ind,full[i],width,bottom=prev,color=color[i]))\n    prev=prev+full[i]\nplt.xticks(ind,top15,fontsize=16)\nplt.yticks(fontsize=16)\nplt.ylabel('Global Sales',fontsize=16)\nplt.title('Total Global Sales for Top 15 Platform and Genre',fontsize=20)\nplt.legend(reversed(px),reversed(Genre),fontsize=18);\nplt.show()","8f0e54e2":"# Global Sales Distribution Across Genre in Top 15 Platform","955cfed8":"# Action Genre has the Highest Global Sales and Platform Genre has Highest Average Global Sales","f357ecf0":"# Top 5 Games for Each Genre","4b7c362f":"> > > In this data set there are 11 columns. Their names and data types as follows:\n\n* **Rank** - Ranking of overall sales, integer\n\n* **Name** - The games name, object\n\n* **Platform** - Platform of the games release (i.e. PC,PS4, etc.), object\n\n* **Year** - Year of the game's release, float\n\n* **Genre** - Genre of the game ,object\n\n* **Publisher** - Publisher of the game\n\n* **NA_Sales** - Sales in North America (in millions)\n\n* **EU_Sales** - Sales in Europe (in millions)\n\n* **JP_Sales** - Sales in Japan (in millions)\n\n* **Other_Sales** - Sales in the rest of the world (in millions)\n\n* **Global_Sales** - Total worldwide sales.","198b4e5f":"# Number of Games In Top 20 Platform","300c8977":"# Sales Percentage Distribution Across Region","47747244":"# Global Sales Percentage Distributed between Genre"}}