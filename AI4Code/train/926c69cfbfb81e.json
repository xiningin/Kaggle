{"cell_type":{"70129bfe":"code","7503bac0":"code","4957a158":"code","91413357":"code","af6e4a8e":"code","f9359c1a":"code","edbb527b":"code","bfcaef04":"markdown","918e988e":"markdown","c819145d":"markdown","2e0eddfe":"markdown"},"source":{"70129bfe":"import pandas as pd\nfrom catboost import CatBoostRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import mean_squared_error, make_scorer","7503bac0":"TEST_TIMELINE = '2019-06-21'","4957a158":"df = pd.read_csv('\/kaggle\/input\/real-time-advertisers-auction\/Dataset.csv')\ndf.date = pd.to_datetime(df.date)","91413357":"def weird_division(n, d):\n    return n \/ d if d else 0\n\n\ndf['CPM'] = df.apply(\n    lambda x: 1000*weird_division(((100*x.total_revenue)), x.measurable_impressions),\n    axis=1\n)\ndf = df[df.CPM.between(0, df.CPM.quantile(.95))].copy()","af6e4a8e":"train_mask = (df.date <= TEST_TIMELINE).values\ndf.drop([\n    'integration_type_id',\n    'revenue_share_percent',\n    \n    'total_revenue',\n    'measurable_impressions',\n    \n    'date',\n], axis=1, inplace=True)\n\ntrain, test = df[train_mask].copy(), df[~train_mask].copy()\n\nX_train, y_train = train.drop('CPM', axis=1), train.CPM.values\nX_test, y_test = test.drop('CPM', axis=1), test.CPM.values","f9359c1a":"clf = CatBoostRegressor(random_seed=1, verbose=0)\ncross_val_score(clf, X_train, y_train, scoring=make_scorer(mean_squared_error), cv=5)","edbb527b":"clf.fit(X_train, y_train)\ny_test_hat = clf.predict(X_test)\nmean_squared_error(y_test, y_test_hat)","bfcaef04":"## Train & Inference","918e988e":"## Validation","c819145d":"## Reading data","2e0eddfe":"## Preprocessing"}}