{"cell_type":{"9517049f":"code","43bfd69a":"code","1de36bdf":"code","d7b0a1d0":"code","5062019c":"code","351fc50d":"code","0ce0efea":"code","7c636c6b":"code","dd087a23":"code","d0cea0a7":"code","0a5e6f2d":"code","5349e3d3":"code","466a6805":"code","1b01cbe6":"code","be36630b":"code","ae25cb37":"code","a726b113":"code","756375f7":"code","d517be35":"code","957f2875":"code","5628dbbb":"code","2cfcd7bc":"code","30f6f420":"code","e2eb8c4e":"code","fc99b46c":"code","bf8c9d77":"code","e8a4a6db":"code","61dfd78b":"code","2a194237":"code","22ec1199":"code","a1bb23dc":"code","230ee01c":"code","4045fb3d":"code","0ad8a56b":"code","495aad3f":"code","701bcc80":"code","6909f379":"code","f9fa8a3b":"code","33dfaed6":"code","dcaba926":"code","8b49b518":"code","a14e743a":"code","07b37346":"code","4bf0c01b":"code","a51c7053":"code","c2708d92":"code","3f58101d":"code","1a25c455":"code","ac4ae177":"code","78f72e4e":"code","e71358a9":"code","442bba44":"markdown","82e32905":"markdown","d4215fa3":"markdown","9b271753":"markdown","cf9c091c":"markdown","a6ab368e":"markdown","2282b132":"markdown","08d01f0e":"markdown","0317817b":"markdown","aa2b55a7":"markdown","337a690a":"markdown"},"source":{"9517049f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","43bfd69a":"sample_data = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv\")\ntest_data = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/test.csv\")\ntrain_data = pd.read_csv(\"..\/input\/tabular-playground-series-apr-2021\/train.csv\")","1de36bdf":"sample_data.info()","d7b0a1d0":"sample_data.describe()","5062019c":"sample_data[sample_data.Survived == 1].sum()","351fc50d":"sample_data[sample_data.Survived == 0].sum()","0ce0efea":"test_data.head(10)","7c636c6b":"test_data.info()","dd087a23":"test_data.Pclass.unique()","d0cea0a7":"Male = test_data[test_data.Sex == 'male'].count()\nMale['Sex']","0a5e6f2d":"Female = test_data[test_data.Sex == 'female'].count()\nFemale['Sex']","5349e3d3":"test_data.shape","466a6805":"test_data.isnull().sum()","1b01cbe6":"def rep_na(series):\n    return series.fillna(series.median())","be36630b":"test_data.Age = test_data['Age'].transform(rep_na)","ae25cb37":"test_data.isnull().sum()","a726b113":"missing_per_test = (test_data[test_data.columns].isnull().sum()\/test_data.shape[0])*100\nmissing_per_test","756375f7":"missing_per_train = (train_data[train_data.columns].isnull().sum()\/train_data.shape[0])*100\nmissing_per_train","d517be35":"train_data.Age = train_data['Age'].transform(rep_na)","957f2875":"missing_per_train = (train_data[train_data.columns].isnull().sum()\/train_data.shape[0])*100\nmissing_per_train","5628dbbb":"train_data.describe()","2cfcd7bc":"for i in train_data.columns:\n    print(\"Total unique values in {} is {}\".format(i, len(train_data[i].unique())))","30f6f420":"for i in test_data.columns:\n    print(\"Total unique values in {} is {}\".format(i, len(test_data[i].unique())))","e2eb8c4e":"not_survived = (train_data['Survived'] == 0).sum()\nnot_survived","fc99b46c":"print(\"% didn't survived:\", (not_survived \/ train_data.shape[0])*100)","bf8c9d77":"survived = (train_data['Survived'] == 1).sum()\nsurvived","e8a4a6db":"print(\"% survived:\", (survived \/ train_data.shape[0])*100)","61dfd78b":"names = ['Survived', 'not_survived']\nvalues = [survived,not_survived]\n\nplt.figure(figsize=(15, 5))\n\nplt.subplot(131)\nplt.bar(names, values)\nplt.subplot(132)\nplt.scatter(names, values)\nplt.subplot(133)\nplt.plot(names, values)\nplt.show()","2a194237":"GRP = train_data.groupby('Sex')\nx = GRP['Survived'].agg(np.mean)\nx","22ec1199":"plt.figure(figsize=(15,5))\nplt.plot(x, 'g')\nplt.xticks(rotation = 90)\nplt.show()","a1bb23dc":"sns.histplot(data=train_data, x=\"Pclass\", kde=True)","230ee01c":"sns.set_palette([\"Green\"])\nsns.histplot(data=train_data, x=\"Sex\", kde=True)","4045fb3d":"sns.set_palette([\"Green\"])\nsns.histplot(data=train_data, x=\"Survived\", kde=True)","0ad8a56b":"sns.boxplot(x=train_data['Survived'],y=train_data['Age'])","495aad3f":"sns.pairplot(train_data[['Sex','Survived']],hue='Survived')","701bcc80":"train_data.drop(columns = 'Name',inplace = True)","6909f379":"train_data.head()","f9fa8a3b":"train_data.drop(columns = 'Cabin',inplace = True)","33dfaed6":"train_data.head()","dcaba926":"train_data['Age'].hist()","8b49b518":"print(set(train_data.columns) - set(test_data.columns))\nprint(set(test_data.columns) - set(train_data.columns))","a14e743a":"test_data.drop(columns=['Ticket','Cabin'],inplace = True)","07b37346":"test_data.drop(columns = 'Name',inplace=True)","4bf0c01b":"train_data.head()","a51c7053":"test_data.head()","c2708d92":"train_data = pd.get_dummies(train_data)\ntest_data = pd.get_dummies(test_data)","3f58101d":"id_colm = test['PassengerId']","1a25c455":"for i in [train_data,test_data]:\n    i.drop(columns='PassengerId',inplace=True)","ac4ae177":"train_data.head()","78f72e4e":"test_data.head()","e71358a9":"sample_data.to_csv('submission.csv',index=False)","442bba44":"**After removing null values from Age attribute in Train data**","82e32905":"# Replacing Null value with median ","d4215fa3":"**Understanding Test data**","9b271753":"**Finding the mean on the basis of sex who servived**","cf9c091c":"**Null values in test data**","a6ab368e":"**Reading the csv file**","2282b132":"**Understanding the Sample_submission.csv **","08d01f0e":"**Percentage that survived**","0317817b":"**Percentage that didn't survived**","aa2b55a7":"**Finding unique values in test data**","337a690a":"**We can easily observe that null values in Age attribute has been replaced with median value **"}}