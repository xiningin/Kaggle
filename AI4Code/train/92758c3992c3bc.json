{"cell_type":{"470e7909":"code","717d36e1":"code","857e6575":"code","b8afeaa2":"code","8349dbfa":"code","419f20c9":"code","2dc3d506":"code","1907c0c6":"code","00b840da":"code","e3fe7ddc":"code","2fb797a6":"code","12d17aec":"code","af47db67":"code","980fd173":"code","b9be31d2":"markdown","76323f25":"markdown","8f19dd45":"markdown","2759b4b2":"markdown","1a06e888":"markdown","5fd14d2c":"markdown","af6434ac":"markdown","20756d6b":"markdown","241e69a8":"markdown"},"source":{"470e7909":"#import libraries\nimport numpy as np                                                      #for fast operations on arrays    \nimport pandas as pd                                                     #for read & manipulate dataset\nimport matplotlib.pyplot as plt                                         #for Data visualization\nfrom sklearn.model_selection import train_test_split                    #for split dataset to training set and test set \nfrom sklearn.linear_model import LinearRegression                       #Regression Model     \nfrom sklearn.metrics import r2_score                                    #Evaluation Model Performance\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline","717d36e1":"# Read dataset\ndf = pd.read_csv('\/kaggle\/input\/studentscore\/student_scores.csv')","857e6575":"df.head()","b8afeaa2":"#Shape of Dataset\nprint(\"Number of rows : {}\".format(df.shape[0]))","8349dbfa":"#Check Missing Values\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = (df.isnull().sum()\/df.isnull().count()).sort_values(ascending=False)\nmissing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\nmissing_data.head(2)","419f20c9":"df.describe()","2dc3d506":"# visualize Dataset\ndf.plot(x='Hours', y='Scores', style='o')  \nplt.title('Hours vs Percentage')  \nplt.xlabel('Hours Studied')  \nplt.ylabel('Percentage Score')  \nplt.show()","1907c0c6":"# Split Dataset to input & output\nX = df.iloc[:, :-1].values  \ny = df.iloc[:, 1].values ","00b840da":"# Split data to 80% training set & 20% testset \nX_train, X_test, y_train, y_test = train_test_split(X, y, \n                            test_size=0.2, random_state=0) ","e3fe7ddc":"regressor = LinearRegression()  \nregressor.fit(X_train, y_train)","2fb797a6":"# Predicting the scores\ny_pred = regressor.predict(X_test)","12d17aec":"#visualize Data\nplt.scatter(X,y,c='red')\n\n#visualize Model\nline = regressor.coef_*X+regressor.intercept_\n\nplt.plot(X, line)","af47db67":"r2 = r2_score(y_test,y_pred)\nprint(\"Model Accuracy : {}\".format(r2))","980fd173":"hours = 9.25\nown_pred = regressor.predict(np.asarray(hours).reshape(1, -1))\nprint(\"No of Hours = {}\".format(hours))\nprint(\"Predicted Score = {}\".format(own_pred[0]))","b9be31d2":"## Evaluating the model","76323f25":"## Plot Model Output","8f19dd45":"## Prepare Data","2759b4b2":"## Train Model","1a06e888":"### Student Score Prediction (linear Regression Model)\n\n\n**- In this regression task we will predict the percentage of marks that a student is expected to score based upon the number of hours they studied.**\n\n**- What will be the predict score if a student studies for 9.25 hrs\/day?**","5fd14d2c":"What will be the predict score if a student studies for 9.25 hrs\/day?","af6434ac":"## Exploratory Data Analysis","20756d6b":"## Make Predictions","241e69a8":"From the graph above, we can clearly see that there is a positive linear relation between the number of hours studied and percentage of score"}}