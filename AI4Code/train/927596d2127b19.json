{"cell_type":{"f4bd9588":"code","08ed8617":"code","893fd0fb":"code","873ecffc":"code","55c6a871":"code","bc9c0cfb":"code","ac075506":"code","5d24a6d7":"code","b48511da":"markdown"},"source":{"f4bd9588":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n\nfrom sklearn import svm\nfrom sklearn.model_selection import train_test_split\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","08ed8617":"#importing the data to pandas dataframes\ntrain_digits = pd.read_csv('..\/input\/train.csv')\ntest_images = pd.read_csv('..\/input\/test.csv')","893fd0fb":"#splitting the data (keeping the data to 2000 observations to save time)\ntrain_labels = train_digits.iloc[0:2000,0]\ntrain_images = train_digits.iloc[0:2000,1:]\ntrain_X, test_X, train_y, test_y = train_test_split(train_images, train_labels,\n                                                    test_size=0.33, random_state=42)\n","873ecffc":"#I'm going to take a quick look at one of the rows of the dataframe. \n#Each row of the matrix is an image that is 28x28 pixels, so we should have 784 columns. \n#if we reshape the an observation, one row of data, into a 28x28 matrix we can see image.\n#here is a quick function to print the image correcty\ndef display(image):\n    single_image = image.reshape((28,28))\n    plt.imshow(single_image, cmap=cm.Pastel1_r)\n    \ndisplay(train_images.iloc[10].values)\n\n#Note that these images aren't actually black and white (0,1). They are gray-scale (0-255). You can \n#see this clearly with the funky pastels","55c6a871":"#Let's standardize the greyscale between 1 and 0. \ntrain_X = train_X.apply(lambda x : x*(1\/255))\ntest_X = test_X.apply(lambda x : x*(1\/255))","bc9c0cfb":"#running just a simple support vector machine (SVM) classifier on the data. \n\nclf = svm.SVC()\nclf.fit(train_X, train_y.values.ravel())\nclf.score(test_X,test_y)","ac075506":"test_images = test_images.apply(lambda x : x*(1\/255))\nresults = clf.predict(test_images)","5d24a6d7":"df = pd.DataFrame(results)\ndf.index.name='ImageId'\ndf.index+=1\ndf.columns=['Label']\ndf.to_csv('results.csv', header=True)","b48511da":"### Just a kernel to learn how to submit data\n"}}