{"cell_type":{"89eff9bb":"code","e3c5e26a":"code","120b6be9":"code","a1320d2d":"code","6221ee98":"code","e14f8c24":"code","1d69d173":"code","c7c72cca":"code","01b414bf":"code","2e611f3d":"code","f0b84edb":"markdown","ea3feed1":"markdown","ba4d7110":"markdown","27878dfc":"markdown","27a4f479":"markdown","fe58b668":"markdown"},"source":{"89eff9bb":"#Change the country name and go all the way down to see the predictions for today\nCOUNTRY = \"Sri Lanka\"","e3c5e26a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","120b6be9":"import numpy as np \nimport matplotlib.pyplot as plt \nimport matplotlib.colors as mcolors\nimport pandas as pd \nimport random\nimport math\nimport time\nfrom sklearn.linear_model import LinearRegression, BayesianRidge\nfrom sklearn.model_selection import RandomizedSearchCV, train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.svm import SVR\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport datetime\nimport operator \nfrom datetime import datetime\nplt.style.use('seaborn')\n%matplotlib inline ","a1320d2d":"confirmed_df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_confirmed.csv\")\ndeath_df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_deaths.csv\")\nrecovered_df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/time_series_covid_19_recovered.csv\")\nconfirmed_df.head()","6221ee98":"confirmed_df_t = confirmed_df.melt(\n    id_vars = [\"Country\/Region\", \"Province\/State\",\"Lat\",\"Long\"],\n    var_name = \"Date\",\n    value_name=\"Value\"\n)\nconfirmed_df_t.head()","e14f8c24":"if(COUNTRY==\"World\"):\n    confirmed_df_t_sl = confirmed_df_t.drop([\"Country\/Region\",\"Province\/State\",\"Lat\",\"Long\"], axis=1)\n    confirmed_df_t_sl = confirmed_df_t_sl.groupby([\"Date\"]).sum()\n\n\nelse:\n    confirmed_df_t_sl = confirmed_df_t[confirmed_df_t['Country\/Region']==COUNTRY]\n    confirmed_df_t_sl = confirmed_df_t_sl.drop([\"Province\/State\",\"Lat\",\"Long\"], axis=1)\n    confirmed_df_t_sl = confirmed_df_t_sl.groupby([\"Country\/Region\",\"Date\"]).sum()\n\nconfirmed_df_t_sl = confirmed_df_t_sl.reset_index()\nconfirmed_df_t_sl[\"Date\"] = pd.to_datetime(confirmed_df_t_sl['Date'])\nconfirmed_df_t_sl = confirmed_df_t_sl.sort_values(by=[\"Date\"])\nconfirmed_df_t_sl.tail()","1d69d173":"confirmed_df_t_sl['Frequency'] = confirmed_df_t_sl[['Value']].diff().fillna(confirmed_df_t_sl)\nconfirmed_df_t_sl.head()","c7c72cca":"#USA choosed as benchmark \nconfirmed_df_t_cn = confirmed_df_t[confirmed_df_t['Country\/Region']==\"US\"]\nconfirmed_df_t_cn = confirmed_df_t_cn.drop([\"Province\/State\",\"Lat\",\"Long\"], axis=1)\n\nconfirmed_df_t_cn = confirmed_df_t_cn.groupby([\"Country\/Region\",\"Date\"]).sum()\nconfirmed_df_t_cn = confirmed_df_t_cn.reset_index()\nconfirmed_df_t_cn[\"Date\"] = pd.to_datetime(confirmed_df_t_cn['Date'])\nconfirmed_df_t_cn = confirmed_df_t_cn.sort_values(by=[\"Date\"])\nconfirmed_df_t_cn['Frequency'] = confirmed_df_t_cn[['Value']].diff().fillna(confirmed_df_t_cn)\nconfirmed_df_t_cn.tail()","01b414bf":"#SRI LANKA\nconfirmed_df_t_sl[\"Date\"] = pd.to_datetime(confirmed_df_t_sl['Date'])\nconfirmed_df_t_sl_ts = confirmed_df_t_sl.iloc[:,-3:]\nconfirmed_df_t_sl_ts = confirmed_df_t_sl_ts.set_index('Date')\n\n#USA\nconfirmed_df_t_cn[\"Date\"] = pd.to_datetime(confirmed_df_t_cn['Date'])\nconfirmed_df_t_cn_ts = confirmed_df_t_cn.iloc[:,-3:]\nconfirmed_df_t_cn_ts = confirmed_df_t_cn_ts.set_index('Date')\nplt.figure(figsize=(20,10))\n\n#plt.plot(confirmed_df_t_cn_ts['Frequency'].rolling(7).sum(), label=\"USA - Benchmark\", color=\"blue\")\nplt.plot(confirmed_df_t_sl_ts['Frequency'].rolling(7).mean(), label=\"actual\", color=\"black\")\nplt.plot(confirmed_df_t_sl_ts['Frequency'].rolling(20).mean(), label=\"ma20\", color=\"yellow\")\nplt.plot(confirmed_df_t_sl_ts['Frequency'].rolling(50).mean(), label=\"ma50\", color=\"blue\")\nplt.plot(confirmed_df_t_sl_ts['Frequency'].rolling(200).mean(), label=\"ma200\", color=\"red\")\nplt.xlabel('Total confirmed cases')\nplt.ylabel('daily confirmed cases') \nplt.legend(loc=\"best\")\nplt.show()","2e611f3d":"#SRI LANKA\nconfirmed_df_t_sl[\"Date\"] = pd.to_datetime(confirmed_df_t_sl['Date'])\nconfirmed_df_t_sl_ts = confirmed_df_t_sl.iloc[:,-3:]\nconfirmed_df_t_sl_ts = confirmed_df_t_sl_ts.set_index('Date')\n\n#USA\nconfirmed_df_t_cn[\"Date\"] = pd.to_datetime(confirmed_df_t_cn['Date'])\nconfirmed_df_t_cn_ts = confirmed_df_t_cn.iloc[:,-3:]\nconfirmed_df_t_cn_ts = confirmed_df_t_cn_ts.set_index('Date')\nplt.figure(figsize=(20,10))\n\nplt.plot(confirmed_df_t_cn_ts['Value'].rolling(7).mean(), confirmed_df_t_cn_ts['Frequency'].rolling(7).mean(), label=\"USA - Benchmark\", color=\"blue\")\nplt.plot(confirmed_df_t_sl_ts['Value'].rolling(7).mean(), confirmed_df_t_sl_ts['Frequency'].rolling(7).mean(), label=COUNTRY, color=\"red\")\nplt.xlabel('Total confirmed cases')\nplt.ylabel('daily confirmed cases') \nplt.legend(loc=\"best\")\nplt.xscale(\"log\")\nplt.yscale(\"log\")\nplt.show()","f0b84edb":"# INSPIRATION","ea3feed1":"# IMPLEMENTATION","ba4d7110":"As far we know coronavirus pandemic spreading as exponential. Every country has confirmed cases of growth as an exponential function. In the exponential function, we cannot surely guess the next outcome either graph gonna flatten or further increase. In the video, they explained a simple method to identify the exponential function next step. Here I created that to the number of cases in Sri Lanka with the number of cases in the USA which used as a benchmark. The USA confirmed cases are still at the growth stage of exponential function directed to use it as the benchmark.","27878dfc":"**Look at this video** https:\/\/www.youtube.com\/watch?v=54XLXg4fYsc","27a4f479":"**Creating Benchmark Dataset**","fe58b668":"# OUTCOME"}}