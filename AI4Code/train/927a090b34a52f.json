{"cell_type":{"445a5fa4":"code","bc8cf832":"code","9c2354f2":"code","2d5f204d":"code","a535e85a":"code","bd5d432e":"code","e6f91645":"code","ffaeacde":"code","d248f754":"code","13a4301e":"code","d8efe1f6":"code","1d1be514":"code","d052589d":"code","f5c2b078":"code","29995a88":"code","013d0757":"code","4f087945":"code","3b70c647":"markdown","98d22e0f":"markdown","6ad911d9":"markdown","5f158bae":"markdown","17150b32":"markdown"},"source":{"445a5fa4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc8cf832":"house_info = pd.read_csv(\"\/kaggle\/input\/housesalesprediction\/kc_house_data.csv\")\ndf = house_info.copy()\ndf.head()","9c2354f2":"df.info()","2d5f204d":"year = []\nmonth = []\nday = []\nfor i in df[\"date\"].index:\n    year.append(df[\"date\"][i].rsplit(df[\"date\"][i][4:])[0])\n    month.append(df[\"date\"][i].rsplit(df[\"date\"][i][6:])[0][4:])\n    day.append(df[\"date\"][i].rsplit(df[\"date\"][i][8:])[0][6:])","a535e85a":"datetime = []","bd5d432e":"for i,j,z in zip(year,month,day):\n    datetime.append(i + \"\/\" + j + \"\/\" + z)\n\ndf[\"date\"] = datetime","e6f91645":"df.columns","ffaeacde":"df.isnull().sum()","d248f754":"df.describe().T","13a4301e":"df2 = df.select_dtypes([\"float64\",\"int64\"])\ndf2 = df2.drop(\"id\",axis = 1) \ndf2.head()","d8efe1f6":"for i in range(len(df2.columns)):\n\n    data = df2.loc[:,[df2.columns[i],df2.columns[i+1]]]\n    data.plot()\n    if i == 17:\n        break","1d1be514":"f,ax = plt.subplots(figsize = (15,15))\nsns.heatmap(df2.corr(),ax = ax,annot = True,fmt = \".1f\")","d052589d":"df2.plot(kind = \"scatter\",x = \"price\",y = \"sqft_living\")","f5c2b078":"for i in range(len(df2.columns)):\n\n    data = df2.loc[:,[df2.columns[i],df2.columns[i+1]]]\n    data.plot(kind = \"hist\",bins = 50,range = (1,500),density = True)\n    if i == 17:\n        break","29995a88":"datetime = pd.to_datetime(datetime)","013d0757":"df = df.set_index(datetime)","4f087945":"df.resample(\"D\").mean()","3b70c647":"<a id = \"4\"><\/a>\n# Index Update & Control","98d22e0f":"<a id = \"1\"><\/a>\n# Import Data & Look Data","6ad911d9":"# Introduction\n\nThe Dataset has house sales info. We use a one variable in this notebook. It's date. \n\n1. [Import Data & Look DataRandom Visualization](#1)\n1. [Date Variable Updating](#2)\n1. [Random Visualization](#3)\n1. [Index Update & Control](#4)","5f158bae":"<a id = \"2\"><\/a>\n# Date Variable Updating","17150b32":"<a id = \"3\"><\/a>\n# Random Visualization (Example)"}}