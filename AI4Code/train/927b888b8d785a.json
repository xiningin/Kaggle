{"cell_type":{"2a3c5b62":"code","fc073176":"code","d9ea163c":"code","82723c95":"code","f9103cf1":"code","b71c0889":"code","ba8d1b6d":"code","eb04836d":"code","5a0dddeb":"code","01c182f6":"code","4cb366c1":"code","bcd0f7cc":"code","1e531c1c":"code","d3bdea5c":"code","3d7b98dd":"code","1a48e430":"code","afd9c1af":"code","16eef7fe":"code","d526e56d":"code","73b4a621":"code","5291f82d":"code","4bec4c09":"code","3f76ebe1":"code","bed2f6b2":"code","3011e7fa":"code","9858da84":"code","624b1f95":"code","1c8e4687":"code","01f232be":"code","2a95c4c6":"code","bb3408f8":"code","d2989e97":"code","eb5ca424":"code","8b2b3744":"code","6de7d375":"code","a471d275":"code","18ad332c":"code","49aa2199":"code","241afd45":"code","28a4737f":"markdown","fd883cdd":"markdown"},"source":{"2a3c5b62":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom wordcloud import WordCloud\n\nimport folium\n\nimport os\nimport cv2\n\n%matplotlib inline\npd.set_option('max_columns', 30)","fc073176":"# DIY\n\ndef missing_values(df):\n    for column in df.columns:\n        null_rows = df[column].isnull()\n        if null_rows.any() == True:\n            print('%s: %d nulls' % (column, null_rows.sum()))\n            \ndef cicle(df):    \n    plt.figure(figsize=(10,7))\n    names= 'Dog', 'Cat'\n    size=df['Type'].value_counts()\n    my_circle=plt.Circle((0,0), 0.7, color='white')\n    plt.pie(size, labels=names, colors=['skyblue','red'])\n    p=plt.gcf()\n    p.gca().add_artist(my_circle)\n    plt.title('Type of pets distribution', fontsize=15)\n    plt.show()\n    \ndef buzz_name(txt):\n    wordcloud = WordCloud(width=480, height=480, max_font_size=50, min_font_size=10).generate(dog_txt)\n    plt.figure()\n    plt.imshow(wordcloud, interpolation=\"bilinear\")\n    plt.axis(\"off\")\n    plt.margins(x=0, y=0)\n    plt.show()\n    \ndef show_rand_img():    \n    plt.rc('axes', grid = True)\n    _, ax = plt.subplots(1, 3, figsize=(20, 20))\n    images_train = os.listdir(\"..\/input\/train_images\/\")\n    random_img = np.random.randint(0, len(images_train) - 3)\n\n    for i , file in enumerate(images_train[random_img:random_img + 3]):\n        img = cv2.imread('..\/input\/train_images\/{}'.format(file))\n        ax[i].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n    plt.show()","d9ea163c":"df_train = pd.read_csv('..\/input\/train\/train.csv')\ndf_breed = pd.read_csv('..\/input\/breed_labels.csv')\ndf_color = pd.read_csv('..\/input\/color_labels.csv')\ndf_state = pd.read_csv('..\/input\/state_labels.csv')","82723c95":"df_train.sample(3)","f9103cf1":"df_train.shape","b71c0889":"df_breed.sample(5)","ba8d1b6d":"df_color","eb04836d":"df_state","5a0dddeb":"df_train.info()","01c182f6":"df_train.describe()","4cb366c1":"df_train.isnull().any().any()","bcd0f7cc":"missing_values(df_train)","1e531c1c":"plt.rcParams['figure.figsize']=(18,10)\nsns.heatmap(df_train.corr(), annot=True, linewidths=.5, fmt = \".2f\", cmap=\"YlGnBu\");","d3bdea5c":"# target variable\nax = sns.countplot(x = 'AdoptionSpeed', data = df_train, palette = 'hls');\nax.set_title(label='Count of adoption speed', fontsize=20);","3d7b98dd":"ax = sns.kdeplot(df_train['Age'], shade=True);\nax.set_title(label='Count of pets age', fontsize=20);","1a48e430":"ax = sns.countplot(x = 'Gender', data = df_train, palette = 'hls');\nax.set_title(label='Count of adoption speed per gender', fontsize=20);","afd9c1af":"ax = sns.countplot(x=\"Color1\", data=df_train, hue=\"AdoptionSpeed\")\nax.set_title(label='Count of color and adoption speed', fontsize=20);","16eef7fe":"ax = sns.countplot(x=\"FurLength\", data=df_train, hue=\"AdoptionSpeed\")\nax.set_title(label='Count of fur lenght and adoption speed', fontsize=20);","d526e56d":"ax = sns.countplot(x=\"MaturitySize\", data=df_train, hue=\"AdoptionSpeed\")\nax.set_title(label='Count of maturity size and adoption speed', fontsize=20);","73b4a621":"ax = sns.countplot(x=\"Health\", data=df_train, hue=\"AdoptionSpeed\")\nax.set_title(label='Count of health and adoption speed', fontsize=20);","5291f82d":"ax = sns.countplot(x=\"Sterilized\", data=df_train, hue=\"AdoptionSpeed\")\nax.set_title(label='Count of sterilized and adoption speed', fontsize=20);","4bec4c09":"# we have two type of animals - dog(1) and cat(2)\ndf_train['Type'].value_counts()","3f76ebe1":"cicle(df_train)","bed2f6b2":"ax = sns.countplot(x='Type',hue='Gender',data=df_train);\nax.set_title(label='Sex of the animal', fontsize=15);","3011e7fa":"ax = sns.violinplot(x='MaturitySize', y='Age',\n                     hue='AdoptionSpeed',\n                     data=df_train)\nax.set_title(label='Relation between maturity size and age with respected adoption speed', fontsize=20);","9858da84":"plt.figure(figsize=(10,7))\nax = sns.violinplot(x='Gender', y='Age',\n                     hue='AdoptionSpeed',\n                     data=df_train)\nax.set_title(label='Relation between gender and age with respected adoption speed', fontsize=20);","624b1f95":"plt.figure(figsize=(10,7))\nax = sns.violinplot(x='FurLength', y='Age',\n                     hue='AdoptionSpeed',\n                     data=df_train)\nax.set_title(label='Relation between fur length and age with respected adoption speed', fontsize=20);","1c8e4687":"plt.title('Adoption time:')\nax = sns.countplot(x='Type',hue='AdoptionSpeed',data=df_train);\nax.set_title(label='Relation between adoption time and type', fontsize=20);","01f232be":"top10_names = df_train['Name'].value_counts().head(10)\ntop10_names.plot(kind='bar', title = 'Top 10 pet names');","2a95c4c6":"sns.boxenplot(y='Age',x='AdoptionSpeed',hue='Type',data=df_train);","bb3408f8":"df_train[df_train['Age'] == df_train['Age'].max()]","d2989e97":"ax = sns.violinplot(y='Fee',x='AdoptionSpeed',hue='Type',data=df_train);\nax.set_title(label='The most expensive fee', fontsize=20);","eb5ca424":"ax = sns.pointplot(x = 'Sterilized', y = 'AdoptionSpeed', hue = 'Health', data = df_train);\nax.set_title(label='Adoption speed vs Health and Sterilized', fontsize=20);","8b2b3744":"df_train['AdoptionSpeed'].value_counts().sort_index().plot('barh');\nplt.title('Adoption speed classes counts');","6de7d375":"plt.rcParams['figure.figsize']=(15,8)\ndog_txt = ' '.join(df_train.loc[df_train['Type'] == 1, 'Name'].fillna('').values)\nbuzz_name(dog_txt)","a471d275":"cat_txt = ' '.join(df_train.loc[df_train['Type'] == 2, 'Name'].fillna('').values)\nbuzz_name(cat_txt)","18ad332c":"show_rand_img()","49aa2199":"data = pd.DataFrame({\n'lat':[103.733333, 100.362778, 102, 101.692222, 115.219033, 102.251111, 102.25, 102.5, 101, 100.25, 100.3292, 117, 113.781111, 101.5, 103],\n'lon':[1.483333, 6.128333, 5.25, 3.153889, 5.315894, 2.188889, 2.75, 3.75, 4.75, 6.5, 5.4145, 5.25, 3.038056, 3.333333, 4.75],\n'name':['Johor', 'Kedah', 'Kelantan', 'Kuala Lumpur', 'Labuan', 'Malakka', 'Negeri Sembilan', 'Pahang', 'Perak', 'Perlis', 'Penang', 'Sabah', 'Sarawak', 'Selangor', 'Terengganu']\n})\ndata\n \nm = folium.Map(location=[5, 108], tiles=\"Mapbox Bright\", zoom_start=6)\n \nfor i in range(0,len(data)):\n    folium.Marker([data.iloc[i]['lon'], data.iloc[i]['lat']], popup=data.iloc[i]['name']).add_to(m)\n    \ndisplay(m)","241afd45":"# df_train = df_train[df_train['Description'].notnull()]","28a4737f":"0 - Pet was adopted on the same day as it was listed.  \n1 - Pet was adopted between 1 and 7 days (1st week) after being listed.  \n2 - Pet was adopted between 8 and 30 days (1st month) after being listed.  \n3 - Pet was adopted between 31 and 90 days (2nd & 3rd month) after being listed.  \n4 - No adoption after 100 days of being listed. (There are no pets in this dataset that waited between 90 and 100 days). ","fd883cdd":"# PetFinder.my Adoption Prediction\n\nTarget: Predict the speed at which a pet is adopted, based on the pet\u2019s listing on PetFinder\n\nSource: https:\/\/www.kaggle.com\/c\/petfinder-adoption-prediction"}}