{"cell_type":{"1b341dbd":"code","1003b878":"code","60be5694":"code","5ede223a":"code","46597184":"code","6701cae1":"code","7675166c":"code","11cfec35":"code","ba22c336":"code","72987f2f":"code","2d1eb89b":"code","03f8b5e7":"code","a176c169":"code","0e55dcf0":"code","a7944d13":"code","b9fbbcb7":"code","ea457746":"code","156d9574":"code","e440633c":"code","c2686ebf":"code","a7657865":"code","dcdab142":"code","26ab590f":"code","c83dedd8":"code","4b1b52e4":"code","3eefbbb2":"code","61b947b8":"code","7d818b6c":"code","41d5311b":"code","c75b5304":"code","c6ff5184":"code","867012b8":"code","71ccbf66":"code","23c5bb22":"code","4c2698ff":"code","9af62a16":"code","3073f884":"code","173a0de9":"code","42021112":"code","7eb9d031":"code","3fbc69de":"code","900d173a":"markdown","a21b866f":"markdown","803a5cc4":"markdown","9ea64a09":"markdown","1018f4ce":"markdown","156d810a":"markdown","85bfba53":"markdown","06c0383f":"markdown","57e639ec":"markdown","7c8aab9a":"markdown","26271eb4":"markdown","7d6d615a":"markdown","6e656838":"markdown","39b38252":"markdown","6b1554fd":"markdown","1c9f6e79":"markdown","60d86e72":"markdown"},"source":{"1b341dbd":"#import libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns","1003b878":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","60be5694":"#read files\n#Reading train file:\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\n#Reading test file:\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","5ede223a":"train","46597184":"test","6701cae1":"train.isnull().sum()","7675166c":"test.isnull().sum()","11cfec35":"train['Age'] = train['Age'].fillna(train['Age'].median())\ntrain['Fare'] = train['Fare'].fillna(train['Fare'].median())\ntrain['Embarked'] = train['Embarked'].fillna(train['Embarked'].mode()[0])\n\ntest['Age'] = test['Age'].fillna(test['Age'].median())\ntest['Fare'] = test['Fare'].fillna(test['Fare'].median())\ntest['Embarked'] = test['Embarked'].fillna(test['Embarked'].mode()[0])","ba22c336":"train.isnull().sum()","72987f2f":"test.isnull().sum()","2d1eb89b":"survived = train.groupby('Survived').Survived.count()\nsurvived","03f8b5e7":"percent_survived = (survived \/ len(train)) * 100\npercent_survived","a176c169":"\ntrain.groupby('Survived').Survived.count().plot.bar(ylim=0)\nplt.show()","0e55dcf0":"plt.figure(figsize=(25, 7))\nax = plt.subplot()\nax.scatter(train[train['Survived'] == 1]['Age'], train[train['Survived'] == 1]['Fare'], c='green', s=train[train['Survived'] == 1]['Fare'])\nax.scatter(train[train['Survived'] == 0]['Age'], train[train['Survived'] == 0]['Fare'], c='red', s=train[train['Survived'] == 0]['Fare']);","a7944d13":"#create a heatmap to correlate promotion\nplt.figure(figsize=(10,6))\ncmap=train.corr()\nsns.heatmap(cmap)","b9fbbcb7":"sex = train.groupby('Sex').Survived.count()\nsex","ea457746":"percent_sex = (sex \/ len(train)) * 100\npercent_sex","156d9574":"train.groupby('Sex').Survived.count().plot.bar(ylim=0)\nplt.show()","e440633c":"pclass = train.groupby('Pclass').Pclass.count()\npclass","c2686ebf":"percent_class = (pclass \/ len(train)) * 100\npercent_class","a7657865":"train.groupby('Pclass').Survived.count().plot.bar(ylim=0)\nplt.show()","dcdab142":"train.Age = train.Age.astype(int)\ntest.Age = test.Age.astype(int)","26ab590f":"plt.figure(figsize=(10,6))\nplt.title(\"Ages Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=train[\"Age\"])\nplt.show()","c83dedd8":"max_age = train.Age.max()\nmax_age","4b1b52e4":"min_age = train.Age.min()\nmin_age","3eefbbb2":"median_age = train.Age.median()\nmedian_age","61b947b8":"most_age = train.Age.mode()\nmost_age","7d818b6c":"plt.figure(figsize=(10,6))\nplt.title(\"Fare Frequency\")\nsns.axes_style(\"dark\")\nsns.violinplot(y=train[\"Fare\"])\nplt.show()","41d5311b":"max_fare = train.Fare.max()\nmax_fare","c75b5304":"min_fare = train.Fare.min()\nmin_fare","c6ff5184":"median_fare = train.Fare.median()\nmedian_fare","867012b8":"most_fare = train.Fare.mode()\nmost_fare","71ccbf66":"embark = train.groupby('Embarked').Survived.count()\nembark","23c5bb22":"percent_embark = (embark \/ len(train)) * 100\npercent_embark","4c2698ff":"train.groupby('Embarked').Survived.count().plot.bar(ylim=0)\nplt.show()","9af62a16":"sex1={'male':1, 'female':2}\ntrain.Sex=train.Sex.map(sex1)\ntest.Sex=test.Sex.map(sex1)","3073f884":"embark1={'C':1, 'Q':2, 'S':3}\ntrain.Embarked=train.Embarked.map(embark1)\ntest.Embarked=test.Embarked.map(embark1)","173a0de9":"train.Age = train.Age.astype(int)\ntest.Age = test.Age.astype(int)\n\ntrain.Fare = train.Fare.astype(int)\ntest.Fare = test.Fare.astype(int)","42021112":"predictions = []\n\nfor i in range(len(test)):\n    if test.Sex[i] == 2 or test.Age[i] < 12 and test.Pclass[i] < 3:\n        value = 1\n    else:\n        value = 0\n    predictions.append(value)\n\nprint(len(predictions))","7eb9d031":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","3fbc69de":"#upload submission\nsubmission = pd.read_csv(\"submission.csv\")\nsubmission","900d173a":"Passenger class","a21b866f":"onvert age and fare to integar","803a5cc4":"Heatmap","9ea64a09":"Import Libraries","1018f4ce":"Impute","156d810a":"Embarked","85bfba53":"\nCheck for null values","06c0383f":"Age","57e639ec":"Determine individuals most likely to survive","7c8aab9a":"Problem Statement\n\nThe sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others.\n\nIn this challenge, we ask you to build a predictive model that answers the question: \u201cwhat sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).","26271eb4":"Survived","7d6d615a":"Sex","6e656838":"Fare","39b38252":"Ordinal encode categorical columns","6b1554fd":"Loads and read files","1c9f6e79":"Prepare and submit","60d86e72":"Analysis of train dataset"}}