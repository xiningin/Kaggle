{"cell_type":{"b838dc10":"code","66511f14":"code","d8675372":"code","5d162bf9":"code","04848110":"code","b8e077d0":"code","71f81cd0":"code","09cac3b3":"code","b47daeff":"code","865c44d2":"code","65142721":"code","eab9c146":"code","23c53bac":"code","3e131f33":"code","c6beda30":"code","3333ab03":"code","2b501918":"code","98b7b59c":"code","e09d3aa2":"code","79847b50":"code","70cb4098":"code","ad1c0d25":"code","a7a89fae":"code","6e0c437c":"code","01579914":"markdown","2e69f4ce":"markdown","5f080547":"markdown","13536678":"markdown","ee3efba6":"markdown","44b20ec9":"markdown","43c5b50a":"markdown","34648e2c":"markdown","805b4cc2":"markdown","86c9f79c":"markdown","511391c5":"markdown","5e8f5830":"markdown","8b15d9e3":"markdown"},"source":{"b838dc10":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","66511f14":"import pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')","d8675372":"df=pd.read_csv(\"\/kaggle\/input\/weather-prediction\/seattle-weather.csv\")","5d162bf9":"df.head()","04848110":"df.describe()","b8e077d0":"df.drop(['date'],axis=1)","71f81cd0":"df.info()","09cac3b3":"df.shape","b47daeff":"df.isnull().sum()","865c44d2":"df.skew()","65142721":"df.precipitation=np.sqrt(df.precipitation)","eab9c146":"df.skew()","23c53bac":"df.weather.unique()","3e131f33":"from sklearn.preprocessing import LabelEncoder\ndf.weather=LabelEncoder().fit_transform(df.weather)","c6beda30":"import matplotlib.pyplot as plt\nimport seaborn as sns","3333ab03":"num=['precipitation', 'temp_max', 'temp_min', 'wind']\nfor col in num:\n  plt.figure(figsize=(8,4))\n  plt.hist(df[col])\n  plt.title(col)\n  plt.show()","2b501918":"cor=df.corr()\nplt.figure(figsize=(8,4))\nsns.heatmap(cor,annot=True,cmap='coolwarm')\nplt.show()","98b7b59c":"df.weather.unique()","e09d3aa2":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","79847b50":"df.columns","70cb4098":"x=df[['precipitation', 'temp_max', 'temp_min', 'wind']]\ny=df[['weather']]\n","ad1c0d25":"x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.8,random_state=10)","a7a89fae":"from xgboost import XGBClassifier\n\n\nmodel1=XGBClassifier()\nmodel1.fit(x_train,y_train)\npredict=model1.predict(x_test)","6e0c437c":"print(accuracy_score(y_test,predict)*100)","01579914":"# **Label Encoding**","2e69f4ce":"# **Statistical Summary**","5f080547":"# **Peak at the Data**","13536678":"# **Information of the dataset**","ee3efba6":"# **Missing values**","44b20ec9":"# **Load Dataset**","43c5b50a":"# **unwanted columns**","34648e2c":"# **Analyzing Features**","805b4cc2":"# **Importing Libraries**","86c9f79c":"# **Dimensions of Dataset**","511391c5":"# **Outliers**","5e8f5830":"# **Train the Model**","8b15d9e3":"# **Correlation Matrix**"}}