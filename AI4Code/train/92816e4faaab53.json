{"cell_type":{"3de7fc98":"code","20839750":"code","9ba4d4fa":"code","b7aaf597":"code","6001ad6b":"code","efe7eb52":"code","0a133851":"code","1180705b":"code","8a8ac296":"code","7d0fb4e8":"code","c7fbc7c4":"code","75128522":"code","d4c80a88":"code","68c91581":"code","610884bc":"code","448eaae2":"code","db5ba119":"code","a8be59c4":"code","f71ba21f":"code","ee7422e4":"code","50a18279":"code","5d8cc191":"code","a0d31963":"code","a0dda7f6":"code","0b7c3759":"code","1b0ef635":"code","caa21c9b":"code","691ffed9":"code","04ecd9d6":"code","448617a9":"code","1706d285":"code","18925fef":"code","ab72c397":"code","3edc17fe":"code","8c5064dc":"code","1ae398a2":"code","5064fe2e":"code","3ee36d46":"code","d610763e":"code","947af19c":"code","e0da070f":"code","28f8bbf0":"code","aae51484":"code","4f1db770":"code","13ba41a8":"code","d47701b6":"code","5fc3f5a2":"code","6699f87e":"markdown","fed42567":"markdown","da666b02":"markdown","ec759395":"markdown","4b3c8fb4":"markdown","11e1b1e1":"markdown","e36c0e99":"markdown","1b3736b0":"markdown","14081f29":"markdown","01ddc61a":"markdown","2fc5dfb6":"markdown","4d838a7e":"markdown","e2d5fade":"markdown","42610c4a":"markdown"},"source":{"3de7fc98":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd #data processing, CSV file I\/O (e.g. pd.read_csv)\n#for visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","20839750":"data=pd.read_csv('..\/input\/placement-visualization-prediction\/datasets_placememt.csv')","9ba4d4fa":"data","b7aaf597":"data.shape","6001ad6b":"data.head()","efe7eb52":"data.tail()","0a133851":"data.info()","1180705b":"#Check the datatypes of this dataset\ndata.dtypes","8a8ac296":"#Check the null values\ndata.isnull().sum()","7d0fb4e8":"data.describe(include='all')","c7fbc7c4":"#clean the nan value\ndata['salary'].fillna(data['salary'].mean(), inplace=True)","75128522":"#after cleaning the nan value check the null value\ndata.isnull().sum()","d4c80a88":"sns.countplot(data.status)\nplt.show()","68c91581":"data['status'].value_counts()","610884bc":"sns.countplot(data.gender,hue=data.status)\nplt.show()","448eaae2":"sns.distplot(data.ssc_p[data.status=='Not Placed'])\nsns.distplot(data.ssc_p[data.status=='Placed'])\nplt.legend(['Not placed','placed'])\nplt.show()","db5ba119":"data['ssc_b'].value_counts()","a8be59c4":"sns.countplot(data.ssc_b,hue=data.status)\nplt.show()","f71ba21f":"sns.distplot(data.hsc_p[data.status=='Not Placed'])\nsns.distplot(data.hsc_p[data.status=='Placed'])\nplt.legend(['Not placed','placed'])\nplt.show()","ee7422e4":"data['hsc_b'].value_counts()","50a18279":"sns.countplot(data.hsc_b,hue=data.status)\nplt.show()","5d8cc191":"data['hsc_s'].value_counts()","a0d31963":"sns.countplot(data.hsc_s,hue=data.status)\nplt.show()","a0dda7f6":"sns.distplot(data.degree_p[data.status=='Not Placed'])\nsns.distplot(data.degree_p[data.status=='Placed'])\nplt.legend(['Not placed','placed'])\nplt.show()","0b7c3759":"data['degree_t'].value_counts()","1b0ef635":"sns.countplot(data.degree_t,hue=data.status)\nplt.show()","caa21c9b":"data['workex'].value_counts()","691ffed9":"sns.countplot(data.workex,hue=data.status)\nplt.show()","04ecd9d6":"sns.distplot(data.etest_p[data.status=='Not Placed'])\nsns.distplot(data.etest_p[data.status=='Placed'])\nplt.legend(['Not placed','placed'])\nplt.show()","448617a9":"data['specialisation'].value_counts()","1706d285":"sns.countplot(data.specialisation,hue=data.status)\nplt.show()","18925fef":"sns.distplot(data.mba_p[data.status=='Not Placed'])\nsns.distplot(data.mba_p[data.status=='Placed'])\nplt.legend(['Not placed','placed'])\nplt.show()","ab72c397":"sns.swarmplot(x=data.salary,y=data.gender,hue=data.status,data=data)\nplt.show()","3edc17fe":"#drop the unrelevent column\ndata.drop(['sl_no'],axis=1,inplace=True)","8c5064dc":"#Label encoder\nfrom sklearn.preprocessing import LabelEncoder\nlb=LabelEncoder()\ndata.gender=lb.fit_transform(data.gender)\n\nle1=LabelEncoder()\ndata.ssc_b=le1.fit_transform(data.ssc_b)\n\nlb2=LabelEncoder()\ndata.hsc_b=lb2.fit_transform(data.hsc_b)\n\nle3=LabelEncoder()\ndata.hsc_s=le3.fit_transform(data.hsc_s)\n\nlb4=LabelEncoder()\ndata.degree_t=lb4.fit_transform(data.degree_t)\n\nle5=LabelEncoder()\ndata.workex=le5.fit_transform(data.workex)\n\nlb6=LabelEncoder()\ndata.specialisation=lb6.fit_transform(data.specialisation)\n\nle7=LabelEncoder()\ndata.status=le7.fit_transform(data.status)","1ae398a2":"data","5064fe2e":"corr=data.corr()\nplt.figure(figsize=(12,5))\nsns.heatmap(corr,annot=True,cmap='coolwarm')\nplt.show()","3ee36d46":"#input and output selection\nip=data.drop(['status'],axis=1)\nop=data['status']","d610763e":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\n\nct = ColumnTransformer([('status',OneHotEncoder(),[5,7])],remainder='passthrough')\n\nip = np.array(ct.fit_transform(ip),dtype = np.str)","947af19c":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.1)","e0da070f":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","28f8bbf0":"from sklearn.linear_model import LogisticRegression\nalg=LogisticRegression()","aae51484":"#train the algorithm with the training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)","4f1db770":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","13ba41a8":"accuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)","d47701b6":"precission=metrics.precision_score(yts,yp)\nprint(precission)","5fc3f5a2":"recall=metrics.recall_score(yts,yp)\nprint(recall)","6699f87e":"# Description of this Dataset","fed42567":"1. sl_no -Serial Number\n2. Gender- Male='M',Female='F'\n3. ssc_p-Secondary Education percentage- 10th Grade \n4. ssc_b-Board of Education- Central\/ Others\n5. hsc_pHigher Secondary Education percentage- 12th Grade\n6. hsc_b-Board of Education- Central\/ Others\n7. hsc_s-Specialization in Higher Secondary Education \n8. degree_p-Degree Percentage\n9. degree_t-Under Graduation(Degree type)- Field of degree educatio\n10. workex-Work Experience\n11. etest_p = Employability test percentage ( conducted by college)\n12. specialisation = Post Graduation(MBA)- Specialization\n13. mba_p = MBA percentage\n14. status = Status of placement- Placed\/Not placed\n15. salary = Salary offered by corporate to candidates","da666b02":"# LOGISTIC REGRESSION\n","ec759395":"# Scalling our dataset","4b3c8fb4":"# checking accuracy of the model\n","11e1b1e1":"* a one-hot encoding can be applied to the integer representation. This is where the integer encoded      variable is removed and a new binary variable is added for each unique integer value.\n\n* In the \u201ccolor\u201d variable example, there are 3 categories and therefore 3 binary variables are needed. A \u201c1\u201d value is placed in the binary variable for the color and \u201c0\u201d values for the other colors.","e36c0e99":"* Taitanic dataset contain text or categorical values\n* To make the data understandable or in human readable form, the training data is often labeled in words.\n* Label Encoding refers to converting the labels into numeric form so as to convert it into the machine-readable form.","1b3736b0":"We can see that most of the Mens are placed in this placement","14081f29":"# Analyzing the datase","01ddc61a":"# Pearson's Correlation","2fc5dfb6":"We can see that 140 above students ara placed and nearby 80 are not placed","4d838a7e":"Now my dataset has fully cleaned","e2d5fade":"# One-Hot Encoing","42610c4a":"# Train and test dataset"}}