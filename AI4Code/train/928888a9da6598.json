{"cell_type":{"65a9f28c":"code","60b0ea00":"code","90ff0131":"code","45b316e8":"code","acc30759":"code","e0d112ad":"code","a33dea36":"code","58c3a079":"code","c17d0a52":"code","2513cd30":"code","69493fe5":"code","3967c8ee":"markdown","a6689284":"markdown","b2434aa1":"markdown","e4939ea6":"markdown","74c95722":"markdown","a781fb52":"markdown","0e420008":"markdown","9f545d09":"markdown","e04c2fce":"markdown","eb33bbf4":"markdown"},"source":{"65a9f28c":"#==========================\n# Import Libraries\n#===========================\nimport numpy as np\nimport pandas as pd","60b0ea00":"xTrain = pd.read_csv(\"..\/input\/competicin-para-curso-de-ia\/xTrain.csv\", header = 0)\nyTrain = pd.read_csv('..\/input\/competicin-para-curso-de-ia\/yTrain.csv', header = 0)\nprint(f\"La forma del xTrain es {xTrain.shape} y la forma del yTrain {yTrain.shape}\")\n","90ff0131":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\n\nle.fit(yTrain.iloc[:,-1].values)\n\nle.classes_\n\ny_numerical = le.transform(yTrain.iloc[:,-1].values) \ny_numerical # 1 = male, 0 = female","45b316e8":"from sklearn import preprocessing\nX_scaled = preprocessing.scale(xTrain)","acc30759":"#from sklearn import svm\n#clf = svm.SVC(kernel='poly')\n\nfrom sklearn.neighbors import KNeighborsClassifier\nclf_1 = KNeighborsClassifier(n_neighbors=3)","e0d112ad":"from sklearn import linear_model\nclf_2 = linear_model.RidgeClassifier(alpha=.25, normalize= True)","a33dea36":"from sklearn.neural_network import MLPClassifier\n\nclf_3 = MLPClassifier(hidden_layer_sizes=(20,20,20),alpha=0.001, max_iter=400, learning_rate=\"invscaling\", early_stopping=True,n_iter_no_change=20, validation_fraction=0.1, verbose=True)","58c3a079":"from sklearn.ensemble import AdaBoostClassifier\n\nclf_4 = AdaBoostClassifier(n_estimators=100)","c17d0a52":"from sklearn.ensemble import StackingClassifier, RandomForestClassifier\n\nclf_final = StackingClassifier(estimators=[(\"knn\",clf_1), (\"ridge\",clf_2), (\"ada\",clf_3), (\"mlp\", clf_4)])\nclf_final.fit(xTrain,y_numerical)","2513cd30":"xTest = pd.read_csv('..\/input\/competicin-para-curso-de-ia\/xTest.csv', header = 0)\n\nprediction=clf_final.predict(xTest).astype(str)\n\nprediction[prediction==\"1\"] = \"male\"\n\nprediction[prediction==\"0\"] = \"female\"\n\n\nmy_submission = pd.DataFrame({'Id': xTest.index, 'Predicted': prediction})\nmy_submission","69493fe5":"# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)\nmy_submission","3967c8ee":"---\n## 4) Normalize your dataset\n---","a6689284":"---\n## 2) Visualize\/ Understand your data\n---","b2434aa1":"## 5) Split the dataset into Training and Validation\n---","e4939ea6":"---\n## 7) Train your model\n---","74c95722":"---\n## 8) Check your predictions on the validation sample\n---","a781fb52":"---\n# Data Challenge\n\n### Carlos\n---\n\n#### Step 1: Understand your problem\n\n#### *Description:* \n\n\n![Screenshot%202019-07-19%20at%2001.40.22.png](attachment:Screenshot%202019-07-19%20at%2001.40.22.png)","0e420008":"---\n## 9) Tune your model changing the hyperparameters, searching the best model\n---","9f545d09":"---\n## 6) Select your model\n---","e04c2fce":"---\n## 3) Clean your Data\n---","eb33bbf4":"---\n## 1) Import your Data\n---"}}