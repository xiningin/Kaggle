{"cell_type":{"41360e46":"code","4dc8df40":"code","2e14e93c":"code","1a886985":"code","ed92c7a9":"code","b82f675f":"code","d318de74":"code","43784ce2":"code","b72e03b8":"code","445e5324":"code","bc2e3ad6":"code","013afe67":"code","92838a13":"markdown","b1e5e449":"markdown","c988a29b":"markdown","e722e634":"markdown","5c6d90eb":"markdown","a5c6df18":"markdown","e32369c1":"markdown","11a5828d":"markdown"},"source":{"41360e46":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\nprint(os.listdir(\"..\/input\/election-data-wrangling\"))","4dc8df40":"## 2002 Elections ## \nNA_All = pd.read_csv(\"..\/input\/election-data-wrangling\/NA2002-18.csv\", encoding = \"ISO-8859-1\")\nNA_Less = pd.DataFrame([])\nNA_Less['Seat'] = NA_All['ConstituencyTitle'] + '-' + NA_All['Year'].astype(str) + '-' + NA_All['Seat']\nNA_Less['Party'] = NA_All['Party']\nNA_Less['Votes'] = NA_All['Votes']\nNA_Less['Year'] = NA_All['Year']","2e14e93c":"CombinedDF = NA_Less\nCombinedDF.shape","1a886985":"CombinedDF = CombinedDF.sort_values(by=['Seat','Year'])\nCombinedDF.shape","ed92c7a9":"CombinedDF2 = CombinedDF.groupby(['Seat', 'Party'])['Votes'].sum().reset_index()\n#CombinedDF2","b82f675f":"len(CombinedDF2['Seat'].unique())","d318de74":"#CombinedDF2.reset_index()\nCombinedDF3 = CombinedDF2.set_index(['Seat','Party'])\nprint(CombinedDF3.index.names)","43784ce2":"seat_names=CombinedDF3.index.levels[0]\nparty_names=CombinedDF3.index.levels[1]","b72e03b8":"#matrix = pd.DataFrame(index=seat_names,columns=party_names)\n#matrix.shape\n#matrix.iloc[0,0]=50\n#matrix\nmatrix = np.zeros((len(seat_names),len(party_names)))","445e5324":"#CombinedDF3.loc[('NA-1-2002-PESHAWAR-I','Muttahidda Majlis-e-Amal Pakistan')].item()","bc2e3ad6":"for s in range(0,len(seat_names)):\n    for p in range (0,len(party_names)):\n        try:\n            matrix[s,p] = CombinedDF3.loc[(seat_names[s], party_names[p])].item()\n            #matrix.iloc[s,p] = CombinedDF3.loc[(seat_names[s], party_names[p])].item()\n        except KeyError:\n            continue\n        #without loopup - very slow\n        #matrix[s,p] = CombinedDF2.loc[(CombinedDF2['Seat'] == seat_names[s]) & (CombinedDF2['Party'] == party_names[p]), ['Votes']]","013afe67":"matrix2 = pd.DataFrame(matrix, index=seat_names, columns=party_names)\n#matrix2 = matrix\n#matrix2 = matrix2.fillna(0)\n#matrix2 = matrix2.astype(int)\nmatrix2.style.background_gradient(cmap='summer',axis=1)","92838a13":"### I had to come up with some logic in order to consider all 'Independent' candidates as one entry per Constituency. \n### Therefore I sum up votes of all Independent candidates and call it Independent party per Contituency","b1e5e449":"### Below is the heatmap of total votes in each constituency for each party. Yellow bright color represents large number of votes where as dark green shows small number of votes\n\n### It would be nice if we can export this heatmap as image or pdf to make it a poster. I did not spend much time on it but there should be some way to do it. Happy Coding !","c988a29b":"### inserting values of votes in each constitueny for each party - takes couple of minutes to finish","e722e634":"### Creating an empty matrix for storing heatmap data","5c6d90eb":"## Heatmap Visualization of votes among all parties in all constituency for all election years","a5c6df18":"### Adding Indexing for faster search and lookup","e32369c1":"### Using Zeeshan's combined data file after data wranggling\n### Adding a new field called Seat which is a combination of Constituency, Year and Seat. This will be used for Indexing and Visualization","11a5828d":"### creating list of unique seat names and party names for heatmap entry and visualization"}}