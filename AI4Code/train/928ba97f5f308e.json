{"cell_type":{"2dde4cbd":"code","94099c71":"code","b021a872":"code","0403a64f":"code","682e767c":"code","57a50507":"code","0acabbff":"code","5c2f53d8":"markdown"},"source":{"2dde4cbd":"# Some snipets coppied from https:\/\/www.kaggle.com\/rdizzl3\/eda-and-baseline-model\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","94099c71":"train_sales = pd.read_csv('\/kaggle\/input\/m5-forecasting-accuracy\/sales_train_validation.csv')\nsubmission_file = pd.read_csv('\/kaggle\/input\/m5-forecasting-accuracy\/sample_submission.csv')","b021a872":"days = range(1, 1913 + 1)\ntime_series_columns = [f'd_{i}' for i in days]\ntime_series_data = train_sales[time_series_columns]","0403a64f":"MA_x = 35  #play here\n\nforecast = time_series_data.iloc[:, -MA_x:].copy()\nfor i in range(28):\n    forecast['F'+str(i+1)] = forecast.iloc[:, -MA_x:].mean(axis=1)    \n    \nforecast = forecast[['F'+str(i+1) for i in range(28)]]\nforecast.head(20)","682e767c":"validation_ids = train_sales['id'].values\nevaluation_ids = [i.replace('validation', 'evaluation') for i in validation_ids]\nids = np.concatenate([validation_ids, evaluation_ids])\npredictions = pd.DataFrame(ids, columns=['id'])\nforecast = pd.concat([forecast] * 2).reset_index(drop=True)\npredictions = pd.concat([predictions, forecast], axis=1)\npredictions.to_csv('submission.csv', index=False)","57a50507":"predictions.head()","0acabbff":"predictions.shape","5c2f53d8":"[](http:\/\/)# Simple MA Model\n\nI give you a MA_x to play ..."}}