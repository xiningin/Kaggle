{"cell_type":{"8ebf79d6":"code","1535f02b":"code","d8f5fc60":"code","d7fe9e75":"code","ecd00b01":"code","e0b2e861":"code","efae346a":"code","1b4b6e1e":"code","93578405":"code","df377a5b":"code","7a519437":"code","eb461092":"code","11ae71fc":"code","f563dc3c":"markdown","edba2b11":"markdown"},"source":{"8ebf79d6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1535f02b":"dataset=pd.read_csv('..\/input\/bill_authentication\/bill_authentication.csv')\ndataset.head()","d8f5fc60":"X=dataset.drop('Class',axis=1)\ny=dataset['Class']","d7fe9e75":"y.head()","ecd00b01":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","e0b2e861":"from sklearn.tree import DecisionTreeClassifier\nclassifier=DecisionTreeClassifier()\nclassifier.fit(X_train,y_train)","efae346a":"y_pred=classifier.predict(X_test)","1b4b6e1e":"from sklearn.metrics import confusion_matrix,classification_report\nprint(confusion_matrix(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","93578405":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(n_estimators=10,criterion='entropy')\nclassifier.fit(X_train,y_train)","df377a5b":"y_pred=classifier.predict(X_test)","7a519437":"from sklearn.metrics import confusion_matrix,classification_report\nprint(confusion_matrix(y_test,y_pred))\nprint(classification_report(y_test,y_pred))","eb461092":"predicted_values=y_pred\npredicted_values","11ae71fc":"my_submission = pd.DataFrame({'Actual_value': y_test[0:], 'predicted_values':predicted_values})\n\nmy_submission.to_csv('submission.csv', index=False)","f563dc3c":"So as we can see , we have slightly improve accuracy ","edba2b11":"using randomforest classifer"}}