{"cell_type":{"ecfc85d0":"code","0725f063":"code","bf4a3660":"code","a1940585":"code","c94690d2":"code","1eeb4dbf":"code","3dc5d3cd":"code","fb670ee6":"code","011d51bc":"markdown","53b603d4":"markdown"},"source":{"ecfc85d0":"# Set up libraries\nimport pandas as pd\nimport numpy as np","0725f063":"# import data\ntest = pd.read_csv(\"..\/input\/TestData.csv\",low_memory=False)\ntrain = pd.read_csv(\"..\/input\/TrainData.csv\",low_memory=False)","bf4a3660":"# basic data prep for train\ntrain_prep = train.copy()\ntrain_prep['log__donations_and_bequests'] = train_prep[\"donations_and_bequests\"].apply(lambda x: np.log(1+x))\n# this successfully executes, even though there are negative values - weird.","a1940585":"# basic data prep for test\ntest_prep = test.copy()\ntest_prep['log__previous__donations_and_bequests'] = test_prep[\"previous__donations_and_bequests\"].apply(lambda x: np.log(1+x))\n","c94690d2":"# find the average log donation bequest in train\ntrain_mean = train_prep['log__donations_and_bequests'].mean()\ntrain_mean","1eeb4dbf":"# Define our common sense estimator\ndef naive_prediction(row):\n    # Takes a training set, and either returns the previous fundraising value, or the average of all fundraising values\n    if (np.all(pd.notnull(row['log__previous__donations_and_bequests']))):\n        return row['log__previous__donations_and_bequests']\n    else:\n        return train_mean","3dc5d3cd":"# Apply our estimator and check the resulting numbers\ntest_prep['log__donations_and_bequests'] = test_prep.apply(naive_prediction,axis=1)\ntest_prep[['log__donations_and_bequests','log__previous__donations_and_bequests']].head(10)","fb670ee6":"# Create your submission file\ntest_prep[['id','log__donations_and_bequests']].to_csv('ExampleSubmission.csv',index=False)","011d51bc":"# Example Submission\nThis workbook shows the logic used to generate the common sense benchmark, and the boilerplate in creating and extracting a test submission. <br>\nThe basic benchmark is - <br>\n- Where we know how much a charity earned last year, we believe a charity will earn the same this year.\n- Where we don't know how much a charity earned last year, we believe the charity will earn the average amount (of the log transformed donations) <br>\nIt's really simple - **I bet you can beat it!** <br>\n","53b603d4":"## Where is my output?\nParaphrasing from \"Szamil\" in [this kernal](https:\/\/www.kaggle.com\/szamil\/where-is-my-output-file)\n>click the Commit button - as I write it, this is a light-blue button in the top-right corner of my notebook page, in the main pane. (There is also a right pane with Sessions, Versions etc. You can ignore it for now). It may take a minute for the Kaggle server to publish your notebook. \n\n>When this operation is done, you can go back by clicking '<<' button in the top-left corner. Then you should see your notebook with a top bar that has a few tabs: Notebook, Code, Data, Output, Comments, Log ... Edit Notebook. Click the Output tab. You should see your output csv file there, ready to download!\n"}}