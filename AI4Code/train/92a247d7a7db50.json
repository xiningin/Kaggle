{"cell_type":{"f847cab5":"code","f713a160":"code","b1f01bc0":"code","5d209bda":"code","d55247f7":"code","f9affa48":"code","a808c108":"code","23f7a2da":"code","7946fea7":"code","7eaf3897":"code","de5177fc":"code","6fab1ee6":"code","150b3188":"code","984f7e75":"code","cdf9c002":"code","92e78888":"code","fc54b1ed":"markdown","b08e750b":"markdown","a3e15518":"markdown","262fbe71":"markdown","029c03b7":"markdown","c7c9809d":"markdown","98e2df1f":"markdown","fd0e9771":"markdown","f534975c":"markdown","6ba3a2dc":"markdown","eeb6c74f":"markdown","227aa64c":"markdown","0d770287":"markdown"},"source":{"f847cab5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f713a160":"df = pd.read_csv(\"..\/input\/salaries-data-set\/Salaries.csv\")\ndf.head()\n","b1f01bc0":"df.describe()","5d209bda":"df.info()","d55247f7":"df['OvertimePay'].max()","f9affa48":"df['BasePay'].mean()","a808c108":"# note here we get row that's match ups\ndf[df['EmployeeName']=='JOSEPH DRISCOLL']","23f7a2da":"# add extra [] set of  square bracket and grab what ever column you need ! \n# For example the code look like this The code look like this!\ndf[df['EmployeeName']=='JOSEPH DRISCOLL']['JobTitle']","7946fea7":"df[df['EmployeeName']=='JOSEPH DRISCOLL']['TotalPayBenefits']","7eaf3897":"df[df['TotalPayBenefits']== df['TotalPayBenefits'].max()] #['EmployeeName']\n# or\n# df.loc[sal['TotalPayBenefits'].idxmax()\ndf[df['TotalPayBenefits'] == df[\"TotalPayBenefits\"].max()]['TotalPayBenefits']","de5177fc":"df.groupby('Year').mean()['BasePay']","6fab1ee6":"df['JobTitle'].nunique()\n# or\nlen(df['JobTitle'].unique())","150b3188":"df['JobTitle'].value_counts()[:5]\n# or \ndf['JobTitle'].value_counts().head(5)\n","984f7e75":"def cheif_find(title):\n    if 'chief' in title.lower():\n        return True\n    else:\n        return False","cdf9c002":"sum(df['JobTitle'].apply(lambda x: cheif_find(x)))","92e78888":"df.corr()","fc54b1ed":"# How much does JOSEPH DRISCOLL make (including benefits)?","b08e750b":"# What is the job title of JOSEPH DRISCOLL ? Note use allcaps (there is also a lowercase Joseph Driscoll);","a3e15518":"**Reading the dataFrame using pandas **\n","262fbe71":"# What is the name of highest paid person (including benefits)?","029c03b7":"# **Read Salaries.csv as a dataframe called df**","c7c9809d":"# What is the average BasePay ?","98e2df1f":"#  is the highest amount of OvertimePay in the dataset ?","fd0e9771":"# How many unique job titles are there?\n## Two ways we can done this ! ","f534975c":"# Use the .info() method to find out how many entries there are.","6ba3a2dc":"# Finding the co-relation of the dataset !!!","eeb6c74f":"# What was the average (mean) BasePay of all employees per year? (2011-2014) ?","227aa64c":"# How many people have the word Chief in their job title?","0d770287":"# What are the top 5 most common jobs? "}}