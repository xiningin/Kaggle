{"cell_type":{"3f3a1b44":"code","c04b10d0":"code","6f54cbea":"code","719b9261":"code","adba1dc9":"code","69febfe3":"code","6a9f1370":"code","98bddb22":"code","2a60408e":"code","7f2ab3d5":"code","57720919":"code","3ebad9cb":"code","e8b9aa50":"code","e75a73bc":"code","9062e6b1":"code","f6983650":"code","e9849dba":"code","5e920839":"code","20db3d68":"code","efaf8ae9":"code","46278933":"code","21f78ac7":"code","dc4f029c":"code","96810348":"code","c5fe7097":"code","f5367196":"code","a1cd4260":"code","3bf53a6e":"code","840bb33a":"code","330c716e":"code","e16c241e":"code","36cc9093":"code","abcf7fc9":"code","33d619d9":"code","b1fb8e52":"code","b47e7609":"code","e2225ba5":"code","22075ee6":"code","2af6c005":"code","04c074f2":"code","8a0f33bf":"code","69d37a90":"code","af9978ed":"code","11d40008":"code","8a68f463":"markdown","10a895f1":"markdown"},"source":{"3f3a1b44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c04b10d0":"train_df = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest_df = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')","6f54cbea":"train_df.head()","719b9261":"test_df.head()","adba1dc9":"# Check patient_id column is valid feature\n\ntrain_df['p_id']=train_df['patient_id'].str[3:].astype(int)","69febfe3":"train_df['int_sex'] = 0\nfemale_ind=train_df[train_df['sex'] == 'female'].index\ntrain_df.loc[female_ind,'int_sex'] = 1\ntrain_df['int_benign_malignant'] = 0\nmalignant_ind = train_df[train_df['benign_malignant']=='malignant'].index\ntrain_df.loc[malignant_ind,'int_benign_malignant'] = 1\ntrain_df.head()","6a9f1370":"train_df[['int_benign_malignant','target']].corr()\ntrain_df.drop(['int_benign_malignant','benign_malignant'],axis=1,inplace=True)","98bddb22":"train_df.head(5)","2a60408e":"print(train_df['patient_id'].str[:3].unique())\ntrain_df.drop('patient_id',axis=1,inplace=True)","7f2ab3d5":"print(train_df[['p_id','target']].corr())\ntrain_df.drop('p_id',axis=1,inplace=True)","57720919":"train_df.head()","3ebad9cb":"train_df[train_df['sex'].isnull()]['age_approx'].unique()  # NULL sex row == NULL age row","e8b9aa50":"train_df[train_df['sex'].isnull()]['target'].unique()  # All benign row","e75a73bc":"print(np.round(train_df['target'].value_counts()[1] \/ train_df.shape[0] * 100,2),'%  malignant')","9062e6b1":"train_df.groupby('sex')['target'].mean()","f6983650":"import seaborn as sns\nimport matplotlib.pyplot as plt\nplt.hist(train_df['sex'].tolist())\nplt.show()","e9849dba":"sns.kdeplot(train_df['age_approx'])","5e920839":"train_df.head(5)","20db3d68":"train_df['anatom_site_general_challenge'].value_counts()","efaf8ae9":"train_df.groupby('anatom_site_general_challenge')['target'].mean()","46278933":"target_rate = .1\nidx_0 = train_df[train_df.target==0].index\nidx_1 = train_df[train_df.target==1].index\n\nsampling_rate = (((1-target_rate)*len(train_df.loc[idx_1]))\/(len(train_df.loc[idx_0])*target_rate))\nunder_sample_len = int(sampling_rate*len(train_df.loc[idx_0]))\nprint(sampling_rate)\nprint(under_sample_len)","21f78ac7":"from sklearn.utils import shuffle\nundersampled_idx = shuffle(idx_0,random_state=801, n_samples=under_sample_len)\nlen(undersampled_idx)","dc4f029c":"all_idx = list(undersampled_idx)+list(idx_1)","96810348":"undersampled_train_df = train_df.loc[all_idx].reset_index()","c5fe7097":"undersampled_train_df","f5367196":"undersampled_train_df['anatom_site_general_challenge'].fillna('NULL',inplace=True)","a1cd4260":"undersampled_train_df.drop(undersampled_train_df[undersampled_train_df['sex'].isnull()].index,axis=0,inplace=True)","3bf53a6e":"undersampled_train_df.isnull().sum()","840bb33a":"undersampled_train_df.drop(undersampled_train_df[undersampled_train_df['age_approx'].isnull()].index,axis=0,inplace=True)","330c716e":"undersampled_train_df.isnull().sum().sum()","e16c241e":"undersampled_train_df.drop(['sex','index'],axis=1,inplace=True)","36cc9093":"undersampled_train_df.head()","abcf7fc9":"undersampled_train_df.drop('diagnosis',axis=1,inplace=True)\noh_us_train_df=pd.get_dummies(undersampled_train_df,columns=['anatom_site_general_challenge'])","33d619d9":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nscaled_age=scaler.fit_transform(oh_us_train_df['age_approx'].values.reshape(-1,1))\noh_us_train_df['age'] = scaled_age\noh_us_train_df.drop('age_approx',axis=1,inplace=True)","b1fb8e52":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(oh_us_train_df.drop('target',axis=1),oh_us_train_df['target'],\n                                                   test_size=0.05,stratify = oh_us_train_df['target'])\nprint(x_train.shape,y_train.shape,x_test.shape,y_test.shape)","b47e7609":"x_train","e2225ba5":"y_train","22075ee6":"y_test.shape","2af6c005":"from xgboost import XGBClassifier\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import GridSearchCV\nxgb = XGBClassifier(n_estimators=400,learning_rate=.1,max_depth=3,gpu_id=0)\nparams = {'max_depth':[2,3,5,10],'min_child_weight':[1,3,7],'colsample_bytree':[0.5,0.75],'n_estimators':[100,200,400]}\ngridcv = GridSearchCV(xgb,param_grid=params)\ngridcv.fit(x_train.drop('image_name',axis=1),y_train,eval_metric='auc',eval_set=[(x_train.drop('image_name',axis=1),y_train),\n                                                                                (x_test.drop('image_name',axis=1),y_test)])\nprint('best param',gridcv.best_params_)\npreds=gridcv.predict(x_test.drop('image_name',axis=1))\nprint(roc_auc_score(preds,y_test.tolist()))","04c074f2":"plt.figure(figsize=(24,24))\nsns.heatmap(oh_us_train_df.corr(),annot=True)","8a0f33bf":"for x,y in zip(xgb.feature_importances_,x_train.columns[1:]):\n    print('# {} feature_importance : {:.4f}'.format(y,x))","69d37a90":"import torch\nimport torch.nn as nn\nimport torch.nn.init as init\ntr_img_path = '..\/input\/siim-isic-melanoma-classification\/jpeg\/train'\nte_img_path = '..\/input\/siim-isic-melanoma-classification\/jpeg\/test'","af9978ed":"import matplotlib.image as img\n\nimg.imread(tr_img_path+'\/ISIC_0015719.jpg').shape","11d40008":"import torchvision.models as models\nmnasnet = models.mnasnet1_0()\n\n    \n","8a68f463":"# UnderSampling","10a895f1":"# Image Classification"}}