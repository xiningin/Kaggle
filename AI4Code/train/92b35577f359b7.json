{"cell_type":{"ef7a87a8":"code","e44c4f16":"code","2de89a06":"code","0238df08":"code","deff6641":"code","fdeb4231":"code","b5c8c3c1":"code","6bcfc02b":"code","5b11e8d8":"code","3d298fd2":"code","a068df90":"code","9e38ef80":"code","d2a036b8":"code","911d981d":"code","56010bf1":"code","a8ce0d55":"code","6ed6e934":"code","86b59914":"code","a748e630":"code","4b60c6ef":"code","7eb0dea2":"code","292e1aaf":"code","aacd81ac":"code","066f55ec":"code","8435a343":"code","71411e9f":"code","2da34292":"code","b72cbbfe":"code","e81f36fc":"code","ed93cdab":"code","14af75d5":"code","3d00ebd5":"code","e5007a6d":"code","4eeac5e8":"code","ee7b540e":"code","91e93588":"markdown","f36f3920":"markdown","81fe666d":"markdown","7cb61fc1":"markdown","41bf2315":"markdown","e759e46c":"markdown","0c5e6070":"markdown","d09f30fa":"markdown","74169e6b":"markdown","d7d8edf9":"markdown","2ccf6997":"markdown","abfb0d18":"markdown","51bdefa3":"markdown","4cb4d35f":"markdown","a508a216":"markdown","085d030f":"markdown","79e73ade":"markdown"},"source":{"ef7a87a8":"#Import Library\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n% matplotlib inline\nimport statsmodels.formula.api as smf\n","e44c4f16":"#Import the dataset\nsal = pd.read_csv(\"..\/input\/salary\/Salary.csv\")","2de89a06":"#Check the data\nsal.head()","0238df08":"sal = sal.rename(columns={\"Salary\":\"hike\",\"YearsExperience\":\"years\"})\nsal.head(5)\n","deff6641":"# Check for Null Data - No Null values\nsal.info()","fdeb4231":"sal.describe()\n","b5c8c3c1":"#Plot Histogram to view Distribution of data field ( Univariate)\nsns.histplot(sal[\"hike\"], color ='green',kde=True)","6bcfc02b":"#Plot Histogram to view Distribution of data field ( Univariate) \nsns.histplot(sal[\"years\"], color ='blue',kde=True)","5b11e8d8":"sns.boxplot(sal[\"hike\"], color ='green')\n# No Outlier found based on the boxplot analysis","3d298fd2":"sns.boxplot(sal[\"years\"], color ='yellow')\n# No Outlier found based on the boxplot analysis","a068df90":"#Check the relation between Variable by Scatter Plot & Correlation Coefficient.\nsns.scatterplot(y=\"hike\",x=\"years\",data=sal, color = \"purple\" )\n#Relation Type = Linear\n#Direction - Positive Correlation\n#Strength -Can't Comment\n","9e38ef80":"# Find the Correlation Coefficient (R) for the relation\n# R tells the magnitude of strength of relation between y & x","d2a036b8":"np.corrcoef(sal[\"years\"],sal[\"hike\"])\n# R value is above 0.85 means Correlation strength is High.","911d981d":"#Use OLS & fit model on data\nimport statsmodels.formula.api as smf\nmodel1= smf.ols('hike~years',data = sal).fit()\nmodel1.summary()","56010bf1":"# Predict Regression Line Model1\npred1 = model1.predict(pd.DataFrame(sal['years']))\nplt.scatter(x=\"years\",y=\"hike\",data=sal, color = \"purple\" )\nplt.plot(sal['years'],pred1)\nplt.legend(['Predicted line', 'Observed data'])\nplt.xlabel('years')\nplt.ylabel('Hike')\nplt.show()","a8ce0d55":"# RMSE Error calculation (Model-1)\nres1 = sal.hike - pred1\nres_sqr1 = res1 * res1\nmse1 = np.mean(res_sqr1)\nrmse1 = np.sqrt(mse1)\nrmse1","6ed6e934":"#Check the relation between Variable by Scatter Plot & Correlation Coefficient.\nplt.scatter(x = np.log(sal['years']), y = sal['hike'], color = 'brown')\nnp.corrcoef(np.log(sal['years']),sal['hike'] ) #correlation\n","86b59914":"#Use OLS & fit model on data\nmodel2= smf.ols('hike ~ np.log(years)',data = sal).fit()\nmodel2.summary()\n","a748e630":"# Predict Regression Line for Model-2\npred2 = model2.predict(pd.DataFrame(sal['years']))\nplt.scatter(x=np.log(sal[\"years\"]),y=\"hike\",data= sal, color = \"purple\" )\nplt.plot(np.log(sal['years']),pred2)\nplt.legend(['Predicted line', 'Observed data'])\nplt.xlabel('log(Years Experience)')\nplt.ylabel('Salary Hike')\nplt.show()","4b60c6ef":"# RMSE Error calculation for Model-2\nres2 = sal.hike- pred2\nres_sqr2 = res2 * res2\nmse2 = np.mean(res_sqr2)\nrmse2 = np.sqrt(mse2)\nrmse2","7eb0dea2":"#Check the relation between Variable by Scatter Plot & Correlation Coefficient.\nplt.scatter(x = sal['years'], y= np.log(sal['hike']), color = 'brown') # Scatter Plot for checking relation.\nnp.corrcoef(sal['years'],np.log(sal['hike']) ) #correlation","292e1aaf":"#Use OLS & fit model on data\nimport statsmodels.formula.api as smf\nmodel3= smf.ols('np.log(hike) ~ years',data = sal).fit()\nmodel3.summary()","aacd81ac":"# Predict Regression Line for Model-3\npred3 = model3.predict(pd.DataFrame(sal['years']))\npred3_exp = np.exp(pred3)\nplt.scatter(x =(sal['years']), y = np.log(sal['hike']), color = 'brown')\nplt.plot(sal['years'],pred3)\nplt.legend(['Predicted line', 'Observed data'])\nplt.xlabel('Years Experience')\nplt.ylabel('log(Salary Hike)')\nplt.show()\n","066f55ec":"# RMSE Error calculation\nres3 = sal.hike - pred3_exp\nres_sqr3 = res3 * res3\nmse3 = np.mean(res_sqr3)\nrmse3 = np.sqrt(mse3)\nrmse3","8435a343":"#Use OLS & fit model on data\nmodel4 = smf.ols('hike ~ years + I(years*years)', data = sal).fit()\nmodel4.summary()","71411e9f":"pred4 = model4.predict(pd.DataFrame(sal))\nX = sal.iloc[:, 0:1].values\n","2da34292":"plt.scatter(sal.years,sal.hike)\nplt.plot(X, pred4, color = 'red')\nplt.legend(['Predicted line', 'Observed data'])\nplt.show()","b72cbbfe":"# Error calculation\nres4 = sal.hike - pred4\nres_sqr4 = res4 * res4\nmse4 = np.mean(res_sqr4)\nrmse4 = np.sqrt(mse4)\nrmse4","e81f36fc":"# Choose the best model using RMSE\ndata = {\"MODEL\":pd.Series([\"SLR\", \"Log model\", \"Exp model\", \"Poly model\"]), \"RMSE\":pd.Series([rmse1, rmse2, rmse3, rmse4])}\ntable_rmse = pd.DataFrame(data)\ntable_rmse","ed93cdab":"#Althought the R^2 & RMSE value is higher for Polynomial model but it is having p value higher than 5% Hence we will neglect this model.\n#Our Best model is Base Model with No transfomation.( Vanilla Model)","14af75d5":"from sklearn.model_selection import train_test_split\n\ntrain, test = train_test_split(sal, test_size = 0.25,random_state=6)\n\nfinalmodel = smf.ols('hike ~ years', data = train).fit()\nfinalmodel.summary()","3d00ebd5":"# Prediction on train data\ntrain_pred = finalmodel.predict(pd.DataFrame(train))\ntrain_pred \n","e5007a6d":"# Model Evaluation on train data\ntrain_res = train.hike - train_pred\ntrain_sqrs = train_res * train_res\ntrain_mse = np.mean(train_sqrs)\ntrain_rmse = np.sqrt(train_mse)\ntrain_rmse","4eeac5e8":"# Predict on test data\ntest_pred = finalmodel.predict(pd.DataFrame(test))\ntest_pred\n","ee7b540e":"# Model Evaluation on Test data\ntest_res = test.hike - test_pred\ntest_sqrs = test_res * test_res\ntest_mse = np.mean(test_sqrs)\ntest_rmse = np.sqrt(test_mse)\ntest_rmse","91e93588":"# 6 Final Observation\nAlthough Train data is giving better result than test data hence it looks like an overfit model. \nBut since the RMSE value of Train & Test data is very Close, it can be Inferred Model will perform well in real life scenario with Unknown Data. \nHence, we can predict the Salary Hike with higher accuracy based on Year\u2019s of Experience data.\n\n\n# Final R^2 Value = 97.3%","f36f3920":"#Outlier Identification\nUse BoxPlot to Identify any outlier in data","81fe666d":"## 4.1. BEST MODEL - Vanilla Model ( y=mx+c,No Tranformation)","7cb61fc1":"#Exploratory Data Analysis\n1. Check for the null Values in dataset.\n2. Check for the outlier in dataset\n","41bf2315":"### Rename Column for Ease of Coding","e759e46c":"# 2. Perform EDA on data (Outlier, Missing Values)","0c5e6070":"![salary.png](attachment:55bb7677-6746-4869-b22f-f446ee366c30.png)","d09f30fa":"# Problem Statement\n\nThe head of HR of a certain organization wants to automate their salary hike estimation. The organization consulted an analytics service provider and asked them to build a basic prediction model by providing them with a dataset that contains the data about the number of years of experience and the salary hike given accordingly. Build a Simple Linear Regression model with salary as the target variable.\n\nDefinition of Variable -:\n\n1. Year of Experience (Input)\n2. Salary Hike -> Hike in salary (Target)\n","74169e6b":"## 3.4  Model-4 Polynomial of Transformation of Degree 2 ( Quadratic) , y=ax^2+bx+c --> {x = years ; x^2 =  (years)^2 ; y = hike}","d7d8edf9":"## 3.3 Model-3 {Exponential Method}, y=log(hike), x=year","2ccf6997":"# Approach to Solve the Business Case -:\n1. Business Objective - Find Relationship between Salary Hike and Year of Experience\n2. Perform EDA on data (Outlier, Missing Values).\n3. Understand the relationship between the variable's using Scatter Plot.\n4. Apply Simple linear regression with OLE to create base regression model( Vanilla Model)\n5. Check the RMSE, R^2 & R values for the model.\n5. Compare the Vanilla model with Model with Transformation's to check the best fit model.\n   Transformation used\n   1. Logarithmic\n   2. Exponential\n   3. Polynomial with degree 2\n6. After comparing RMSE, R^2 & R values, Select the best model.\n7. Train & Test your data on these model to check the performance of model on test data.\n\n","abfb0d18":"## 3.2 Model 2 {Log Transformation}, x = log(years); y = hike\n","51bdefa3":"## 3.1    Model -1 - Vanilla Model ( No Transformation) - y = ax+b","4cb4d35f":"Change the Column Label to short Abbrevation for ease of Code handling.\nWeight gained (grams) - wg\nCalories Consumed - cc","a508a216":"# 4. Best Model Selection from 4 Model tested Based on R , R^2 & RMSE Values","085d030f":"# 5. Train & Test your data on the Best model to check the performance of model on test data","79e73ade":"# 3. Apply Simple linear regression with OLS to create different regression model.\n"}}