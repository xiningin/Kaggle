{"cell_type":{"53383c37":"code","3b54fecc":"code","84cb4d04":"code","d2dde99e":"code","c4ace613":"code","868116b6":"code","502e0da3":"code","b399a665":"code","5d1cb98f":"code","ce419aa7":"code","58ab4a47":"code","47136240":"code","29639032":"code","d26b1afc":"code","47eda7b1":"code","8ddec2ea":"code","0bad1be3":"code","a2fe37c2":"code","92583e8e":"markdown"},"source":{"53383c37":"import numpy  as np \nimport  pandas as pd","3b54fecc":"df = pd.read_csv(\"..\/input\/udacity-mlcharity-competition\/census.csv\")\ndf.head()","84cb4d04":"df.info()","d2dde99e":"df.isnull().sum()","c4ace613":"df.corr()","868116b6":"Y=df[\"income\"]\nX=df.drop([\"income\"],axis=1)","502e0da3":"Y=df['income'].map({'<=50K': 0, '>50K': 1})\nY.head()      ","b399a665":"from sklearn.impute import SimpleImputer #importing all of our libraries\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier","5d1cb98f":"numerical_cols = ['age','education-num','capital-gain','capital-loss','hours-per-week']\ncategorical_cols = ['workclass','education_level','marital-status','occupation','relationship','sex']\n\n\nnumerical_transformer = Pipeline(steps=[('imputer',SimpleImputer(strategy='median')),\n                                       ('scale', StandardScaler())])\n\n\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder())\n])\n\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numerical_transformer, numerical_cols),\n        ('cat', categorical_transformer, categorical_cols)\n    ])\n\nmodel = Pipeline(steps=[('preprocessor', preprocessor),\n                              ('model', RandomForestClassifier(random_state=0, \n                                                               n_estimators=500))\n                             ])\n\n# Preprocessing of training data, fit model \nmodel.fit(X,Y)\n\n","ce419aa7":"from sklearn.model_selection import cross_val_score\nprint(cross_val_score(model, X, Y, cv=2).mean())","58ab4a47":"train_df=pd.read_csv(\"..\/input\/udacity-mlcharity-competition\/test_census.csv\")\ntrain_df.head()","47136240":"train_df=train_df.drop([\"Unnamed: 0\"],axis=1)\ntrain_df.head()","29639032":"train_df.shape","d26b1afc":"preds= model.predict(train_df)","47eda7b1":"submissiondf = pd.read_csv(\"..\/input\/udacity-mlcharity-competition\/example_submission.csv\")\nsubmissiondf.shape","8ddec2ea":"submissiondf=submissiondf.drop([\"income\"],axis=1)\nsubmissiondf[\"income\"]=preds","0bad1be3":"submissiondf.head()","a2fe37c2":"#submission file\n'''submission.to_csv(\".\/submission.csv\", index=False)'''","92583e8e":"### Note- Will be adding  Graphs later "}}