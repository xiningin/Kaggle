{"cell_type":{"69620bfa":"code","79c57a45":"code","a4622a16":"code","348ec3f6":"code","40f13dee":"code","146ddf7a":"code","f78470e2":"code","345a9997":"code","2d729a22":"code","6943efe2":"code","cbbee3f6":"code","4d084284":"code","43ae223d":"code","89b053ab":"code","bec0e1ac":"code","d0082ca0":"code","79c09c31":"code","5b8576fe":"code","a702c5d6":"code","70e8a977":"code","57484fa6":"code","37431940":"code","d9b177a2":"code","91eb0cd0":"code","b751e232":"code","77b3efe4":"code","02f79fb3":"code","2bf3d616":"code","fb3ea585":"code","0e06e31e":"code","f3e3ac64":"code","868b4681":"code","067100df":"code","90736fb7":"code","287ac920":"code","d3592fa1":"code","d4ba8bca":"code","5f2372ed":"code","a2542e47":"code","3d4769dd":"code","67db0833":"code","60da41e8":"code","ec09d2dc":"code","6025ac67":"code","8ec50129":"code","8a518231":"code","022366ea":"code","52194afd":"code","f4f191ab":"code","f15521ed":"code","ded26bb8":"code","e88ffe46":"code","985a1eb7":"code","331c83df":"code","58c0cd56":"markdown","c6819557":"markdown","3443e9ea":"markdown","cf4aad93":"markdown","ee85635d":"markdown","850636c0":"markdown","9f030827":"markdown","3e3bb378":"markdown","2a18b7e1":"markdown","a64c465f":"markdown","187a6217":"markdown","ea5116ba":"markdown","b856a077":"markdown","2fccec4d":"markdown","4b63532f":"markdown","64467b2a":"markdown","849c3e2b":"markdown","b9f3285c":"markdown","2fcc58cd":"markdown","7b7103de":"markdown","469cc570":"markdown","c33dc5b0":"markdown","c4553ee6":"markdown","a0f35c3d":"markdown","52026ab5":"markdown","5375fd9f":"markdown","90c186cb":"markdown","9964b23a":"markdown","1408d81b":"markdown","f8e22e56":"markdown","ad43a2ea":"markdown","9bb26da8":"markdown","30ee1bf4":"markdown","b3face85":"markdown","eff8b0c4":"markdown","377f2bf6":"markdown","bbf432a2":"markdown","01c81b0c":"markdown"},"source":{"69620bfa":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn')\n","79c57a45":"# Loads the data and prints out a few lines. Performs operations to inspect data\n#   types and looks for instances of missing or possibly errant data.\ndf = pd.read_csv('..\/input\/noshowappointments\/KaggleV2-May-2016.csv')\ndf.head()","a4622a16":"df.describe()","348ec3f6":"df.info()","40f13dee":"df.nunique()","146ddf7a":"# renames the columns having wrong spelling.\ndf.rename(columns={'Hipertension':'Hypertension','Handcap':'Handicap'},inplace=True)","f78470e2":"# drops some columns that we don't need in analysis like PatientId and AppointmentID.\ndf.drop(['PatientId','AppointmentID'],axis=1,inplace=True)","345a9997":"df.query('Age <0')","2d729a22":"# if the age of any patient is less than 0 we will drop it\ndf.drop(df.query('Age <0').index,inplace=True)\ndf.Age.describe()","6943efe2":"# divides the ages to four periods between [0,18],[19,37],[38,55],and[56,115]\ndf['age_period'] = pd.cut(df['Age'], [-1, 18, 37, 55, 115],labels=['[0,18]', '[19,37]', '[38,55]', '[56,115]'])","cbbee3f6":"df.query('Handicap>1')","4d084284":"df['Handicap'].unique()","43ae223d":"# the column 'Handicap' should have only values 0 or 1 which mean false or true\n# and not contains the number of Handicap [2,3,4] for each patient\n# so we will replace all incorrect values from column 'Handicap' [2,3,4]  by the value of 1\ndf['Handicap'].replace(to_replace =[2, 3,4], value =1,inplace=True)\ndf['Handicap'].describe()","89b053ab":"df['ScheduledDay'] = pd.to_datetime(df['ScheduledDay'])\ndf['AppointmentDay'] = pd.to_datetime(df['AppointmentDay'])\n# we will find the difference between Scheduled Day and Appointment Day to knowif there is a relationship\n# between No-show and the length of time between the day of booking and the day of the appointment\ndf['diff_day'] = ((df['AppointmentDay'] - df['ScheduledDay']).dt.days)+1 \n# we will find the day of the week for Appointment Days to know if there is a relationship\n# between No-show and   days of the week\ndf['day_of_week']=df['AppointmentDay'].dt.day_name()\ndf.describe()","bec0e1ac":"df.query('diff_day<0')","d0082ca0":"# removes any errant values for the column of difference between Scheduled Day and Appointment Day\n# if any difference between the two dates is less than '0'  we will drop it\ndf.drop(df.query('diff_day <0').index,inplace=True)\ndf.diff_day.describe()","79c09c31":"# divides the diff_day to four periods between [0,4],[5,15],[16,179]\ndf['diff_period'] = pd.cut(\n    df['diff_day'], [-1, 0, 4, 15, 179], labels=['the same day', '[1,4]', '[5,15]', '[16,179]'])","5b8576fe":"df.hist(figsize=(20,15))","a702c5d6":"df.info()","70e8a977":"#we will divide the data to absentees and attendees to make it easy to know\n#What factors are important for us in order to\n#predict if a patient will show up for their scheduled appointment?\ndf_Absentees = df[df['No-show'] == 'Yes']\ndf_attendees = df[df['No-show'] == 'No']","57484fa6":"df_Absentees.describe()","37431940":"df_attendees.describe()","d9b177a2":"df['Gender'].value_counts().sort_values(ascending=False)","91eb0cd0":"Gender_Absentees = df_Absentees.groupby('Gender')['No-show'].count()\nGender_attendees = df_attendees.groupby('Gender')['No-show'].count()\nprint('\\tAttendees')\nprint(Gender_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Gender_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Gender_Absentees)),\n        Gender_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Gender_attendees)), Gender_attendees,\n        label='Attendees',bottom=Gender_Absentees)\nplt.xticks(np.arange(len(Gender_Absentees)),\n           Gender_attendees.index, rotation=0, fontsize=20)\ndef design(x,y):\n    '''axes design'''\n    plt.title(f'The relation between {x} and No-show', fontsize=20)\n    plt.xlabel(x, fontsize=20)\n    plt.ylabel(y, fontsize=20)\n    plt.legend(prop={'size': 20})\n    plt.show()\ndesign('Gender','Count')    ","b751e232":"total_Gender = df.groupby('Gender')['No-show'].count()\n# calculate propotion for Absentees and attendees\np_Absentees_Gender = ((Gender_Absentees\/total_Gender)\n                ).fillna(0).sort_values(ascending=True)\np_attendees_Gender = ((Gender_attendees\/total_Gender)\n               ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Gender)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Gender)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Gender)),\n        p_Absentees_Gender, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Gender)), p_attendees_Gender,\n        label='Attendees', bottom=p_Absentees_Gender)\nplt.xticks(np.arange(len(total_Gender)),\n           p_attendees_Gender.index, rotation=0, fontsize=20)\nplt.ylim(0,1.2)\ndesign('Gender','Proportion')","77b3efe4":"# divides the ages to four periods between [0,18],[19,37],[38,55],and[56,115]\ndf['age_period'].value_counts().sort_values(ascending=False)","02f79fb3":"age_period_Absentees = df_Absentees.groupby('age_period')['No-show'].count()\nage_period_attendees = df_attendees.groupby('age_period')['No-show'].count()\nprint('\\tAttendees')\nprint(age_period_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(age_period_Absentees)\nplt.figure(figsize=(25, 15))\nplt.bar(np.arange(len(age_period_Absentees)),\n        age_period_Absentees, label='Absentees', color='#A54158')\nplt.bar(np.arange(len(age_period_attendees)), age_period_attendees,\n        label='Attendees', bottom=age_period_Absentees)\nplt.xticks(np.arange(len(age_period_Absentees)),\n           age_period_attendees.index, rotation=0, fontsize=20)\ndesign('Age','Count')","2bf3d616":"age_period_Absentees = df_Absentees.groupby('age_period')['No-show'].count()\nage_period_attendees = df_attendees.groupby('age_period')['No-show'].count()\ntotal_age_period = df.groupby('age_period')['No-show'].count()\np_Absentees_age_period = ((age_period_Absentees\/total_age_period)\n                          ).fillna(0)\np_attendees_age_period = ((age_period_attendees\/total_age_period)\n                          ).fillna(0)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_age_period)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_age_period)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_age_period)),\n        p_Absentees_age_period, label='Absentees', color='#A54158')\nplt.bar(np.arange(len(p_attendees_age_period)), p_attendees_age_period,\n        label='Attendees', bottom=p_Absentees_age_period)\nplt.xticks(np.arange(len(total_age_period)),\n           p_attendees_age_period.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Age','Proportion')","fb3ea585":"df['Neighbourhood'].value_counts().sort_values(ascending=False)","0e06e31e":"Neighbourhood_Absentees = df_Absentees.groupby('Neighbourhood')['No-show'].count()\nNeighbourhood_attendees = df_attendees.groupby('Neighbourhood')['No-show'].count()\nprint('\\tAttendees')\nprint(Neighbourhood_attendees.sort_values(ascending=False))\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Neighbourhood_Absentees.sort_values(ascending=False))\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Neighbourhood_Absentees)),\n        Neighbourhood_Absentees, label='Absentees',color='#A54158',alpha=.5)\nplt.bar(np.arange(len(Neighbourhood_attendees)), Neighbourhood_attendees,\n        label='Attendees',alpha=.5)\nplt.xticks(np.arange(len(Neighbourhood_Absentees)),\n           Neighbourhood_attendees.index, rotation=90)\ndesign('Neighbourhood','Count')","f3e3ac64":"total_Neighbourhood = df.groupby('Neighbourhood')['No-show'].count()\ntotal_Neighbourhood = df.groupby('Neighbourhood')['No-show'].count()\np_Absentees_Neighbourhood = ((Neighbourhood_Absentees\/total_Neighbourhood)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Neighbourhood = ((Neighbourhood_attendees\/total_Neighbourhood)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Neighbourhood)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Neighbourhood)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Neighbourhood)),\n        p_Absentees_Neighbourhood, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Neighbourhood)), p_attendees_Neighbourhood,\n        label='Attendees', bottom=p_Absentees_Neighbourhood)\nplt.xticks(np.arange(len(total_Neighbourhood)),\n           p_attendees_Neighbourhood.index, rotation=90)\nplt.ylim(0, 1.2)\ndesign('Neighbourhood','Proportion')","868b4681":"Scholarship_Absentees = df_Absentees.groupby('Scholarship')['No-show'].count()\nScholarship_attendees = df_attendees.groupby('Scholarship')['No-show'].count()\nprint('\\tAttendees')\nprint(Scholarship_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Scholarship_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Scholarship_Absentees)),\n        Scholarship_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Scholarship_attendees)), Scholarship_attendees,\n        label='Attendees', bottom=Scholarship_Absentees)\nplt.xticks(np.arange(len(Scholarship_Absentees)),\n           Scholarship_attendees.index, rotation=0, fontsize=20)\ndesign('Scholarship','Count')","067100df":"total_Scholarship = df.groupby('Scholarship')['No-show'].count()\np_Absentees_Scholarship = ((Scholarship_Absentees\/total_Scholarship)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Scholarship = ((Scholarship_attendees\/total_Scholarship)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Scholarship)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Scholarship)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Scholarship)),\n        p_Absentees_Scholarship, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Scholarship)), p_attendees_Scholarship,\n        label='Attendees', bottom=p_Absentees_Scholarship)\nplt.xticks(np.arange(len(total_Scholarship)),\n           p_attendees_Scholarship.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Scholarship','Proportion')","90736fb7":"df['Hypertension'].value_counts().sort_values(ascending=False)","287ac920":"Hypertension_Absentees = df_Absentees.groupby('Hypertension')['No-show'].count()\nHypertension_attendees = df_attendees.groupby('Hypertension')['No-show'].count()\nprint('\\tAttendees')\nprint(Hypertension_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Hypertension_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Hypertension_Absentees)),\n        Hypertension_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Hypertension_attendees)), Hypertension_attendees,\n        label='Attendees', bottom=Hypertension_Absentees)\nplt.xticks(np.arange(len(Hypertension_Absentees)),\n           Hypertension_attendees.index, rotation=0, fontsize=20)\ndesign('Hypertension','Count')","d3592fa1":"total_Hypertension = df.groupby('Hypertension')['No-show'].count()\np_Absentees_Hypertension = ((Hypertension_Absentees\/total_Hypertension)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Hypertension = ((Hypertension_attendees\/total_Hypertension)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Hypertension)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Hypertension)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Hypertension)),\n        p_Absentees_Hypertension, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Hypertension)), p_attendees_Hypertension,\n        label='Attendees', bottom=p_Absentees_Hypertension)\nplt.xticks(np.arange(len(total_Hypertension)),\n           p_attendees_Hypertension.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Hypertension','Proportion')","d4ba8bca":"df['Diabetes'].value_counts().sort_values(ascending=False)","5f2372ed":"Diabetes_Absentees = df_Absentees.groupby('Diabetes')['No-show'].count()\nDiabetes_attendees = df_attendees.groupby('Diabetes')['No-show'].count()\nprint('\\tAttendees')\nprint(Diabetes_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Diabetes_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Diabetes_Absentees)),\n        Diabetes_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Diabetes_attendees)), Diabetes_attendees,\n        label='Attendees', bottom=Diabetes_Absentees)\nplt.xticks(np.arange(len(Diabetes_Absentees)),\n           Diabetes_attendees.index, rotation=0, fontsize=20)\ndesign('Diabetes','Count')","a2542e47":"total_Diabetes = df.groupby('Diabetes')['No-show'].count()\np_Absentees_Diabetes = ((Diabetes_Absentees\/total_Diabetes)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Diabetes = ((Diabetes_attendees\/total_Diabetes)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Diabetes)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Diabetes)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Diabetes)),\n        p_Absentees_Diabetes, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Diabetes)), p_attendees_Diabetes,\n        label='Attendees', bottom=p_Absentees_Diabetes)\nplt.xticks(np.arange(len(total_Diabetes)),\n           p_attendees_Diabetes.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Diabetes','Proportion')","3d4769dd":"df['Alcoholism'].value_counts().sort_values(ascending=False)","67db0833":"Alcoholism_Absentees = df_Absentees.groupby('Alcoholism')['No-show'].count()\nAlcoholism_attendees = df_attendees.groupby('Alcoholism')['No-show'].count()\nprint('\\tAttendees')\nprint(Alcoholism_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Alcoholism_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Alcoholism_Absentees)),\n        Alcoholism_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Alcoholism_attendees)), Alcoholism_attendees,\n        label='Attendees', bottom=Alcoholism_Absentees)\nplt.xticks(np.arange(len(Alcoholism_Absentees)),\n           Alcoholism_attendees.index, rotation=0, fontsize=20)\ndesign('Alcoholism','Count')","60da41e8":"total_Alcoholism = df.groupby('Alcoholism')['No-show'].count()\np_Absentees_Alcoholism = ((Alcoholism_Absentees\/total_Alcoholism)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Alcoholism = ((Alcoholism_attendees\/total_Alcoholism)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Alcoholism)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Alcoholism)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Alcoholism)),\n        p_Absentees_Alcoholism, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Alcoholism)), p_attendees_Alcoholism,\n        label='Attendees', bottom=p_Absentees_Alcoholism)\nplt.xticks(np.arange(len(total_Alcoholism)),\n           p_attendees_Alcoholism.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Alcoholism','Proportion')","ec09d2dc":"df['Handicap'].value_counts().sort_values(ascending=False)","6025ac67":"Handicap_Absentees = df_Absentees.groupby('Handicap')['No-show'].count()\nHandicap_attendees = df_attendees.groupby('Handicap')['No-show'].count()\nprint('\\tAttendees')\nprint(Handicap_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(Handicap_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(Handicap_Absentees)),\n        Handicap_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(Handicap_attendees)), Handicap_attendees,\n        label='Attendees', bottom=Handicap_Absentees)\nplt.xticks(np.arange(len(Handicap_Absentees)),\n           Handicap_attendees.index, rotation=0, fontsize=20)\ndesign('Handicap','Count')","8ec50129":"total_Handicap = df.groupby('Handicap')['No-show'].count()\np_Absentees_Handicap = ((Handicap_Absentees\/total_Handicap)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_Handicap = ((Handicap_attendees\/total_Handicap)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_Handicap)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_Handicap)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_Handicap)),\n        p_Absentees_Handicap, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_Handicap)), p_attendees_Handicap,\n        label='Attendees', bottom=p_Absentees_Handicap)\nplt.xticks(np.arange(len(total_Handicap)),\n           p_attendees_Handicap.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Handicap','Proportion')","8a518231":"df['SMS_received'].value_counts().sort_values(ascending=False)","022366ea":"SMS_received_Absentees = df_Absentees.groupby('SMS_received')['No-show'].count()\nSMS_received_attendees = df_attendees.groupby('SMS_received')['No-show'].count()\nprint('\\tAttendees')\nprint(SMS_received_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(SMS_received_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(SMS_received_Absentees)),\n        SMS_received_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(SMS_received_attendees)), SMS_received_attendees,\n        label='Attendees', bottom=SMS_received_Absentees)\nplt.xticks(np.arange(len(SMS_received_Absentees)),\n           SMS_received_attendees.index, rotation=0, fontsize=20)\ndesign('SMS_received','Count')","52194afd":"total_SMS_received = df.groupby('SMS_received')['No-show'].count()\np_Absentees_SMS_received = ((SMS_received_Absentees\/total_SMS_received)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_SMS_received = ((SMS_received_attendees\/total_SMS_received)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_SMS_received)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_SMS_received)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_SMS_received)),\n        p_Absentees_SMS_received, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_SMS_received)), p_attendees_SMS_received,\n        label='Attendees', bottom=p_Absentees_SMS_received)\nplt.xticks(np.arange(len(total_SMS_received)),\n           p_attendees_SMS_received.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('SMS_received','Proportion')","f4f191ab":"df['day_of_week'].value_counts().sort_values(ascending=False)","f15521ed":"day_of_week_Absentees = df_Absentees.groupby('day_of_week')['No-show'].count()\nday_of_week_attendees = df_attendees.groupby('day_of_week')['No-show'].count()\nprint('\\tAttendees')\nprint(day_of_week_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(day_of_week_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(day_of_week_Absentees)),\n        day_of_week_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(day_of_week_attendees)), day_of_week_attendees,\n        label='Attendees', bottom=day_of_week_Absentees)\nplt.xticks(np.arange(len(day_of_week_Absentees)),\n           day_of_week_attendees.index, rotation=0, fontsize=20)\ndesign('Days of the week','Count')","ded26bb8":"total_day_of_week = df.groupby('day_of_week')['No-show'].count()\np_Absentees_day_of_week = ((day_of_week_Absentees\/total_day_of_week)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_day_of_week = ((day_of_week_attendees\/total_day_of_week)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_day_of_week)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_day_of_week)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_day_of_week)),\n        p_Absentees_day_of_week, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_day_of_week)), p_attendees_day_of_week,\n        label='Attendees', bottom=p_Absentees_day_of_week)\nplt.xticks(np.arange(len(total_day_of_week)),\n           p_attendees_day_of_week.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('Days of the week','Proportion')","e88ffe46":"df['diff_period'].value_counts().sort_values(ascending=False)","985a1eb7":"diff_period_Absentees = df_Absentees.groupby('diff_period')['No-show'].count()\ndiff_period_attendees = df_attendees.groupby('diff_period')['No-show'].count()\nprint('\\tAttendees')\nprint(diff_period_attendees)\nprint('-'*40)\nprint('\\tAbsentees')\nprint(diff_period_Absentees)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(diff_period_Absentees)),\n        diff_period_Absentees, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(diff_period_attendees)), diff_period_attendees,\n        label='Attendees', bottom=diff_period_Absentees)\nplt.xticks(np.arange(len(diff_period_Absentees)),\n           diff_period_attendees.index, rotation=0, fontsize=20)\ndesign('The time between the day of booking and the day of the appointment','Count')","331c83df":"total_diff_period = df.groupby('diff_period')['No-show'].count()\np_Absentees_diff_period = ((diff_period_Absentees\/total_diff_period)\n                      ).fillna(0).sort_values(ascending=True)\np_attendees_diff_period = ((diff_period_attendees\/total_diff_period)\n                      ).fillna(0).sort_values(ascending=False)\nprint('-'*100)\nprint('\\tAttendees Proportion')\nprint(p_attendees_diff_period)\nprint('-'*40)\nprint('\\tAbsentees Proportion')\nprint(p_Absentees_diff_period)\nplt.figure(figsize=(20, 10))\nplt.bar(np.arange(len(p_Absentees_diff_period)),\n        p_Absentees_diff_period, label='Absentees',color='#A54158')\nplt.bar(np.arange(len(p_attendees_diff_period)), p_attendees_diff_period,\n        label='Attendees', bottom=p_Absentees_diff_period)\nplt.xticks(np.arange(len(total_diff_period)),\n           p_attendees_diff_period.index, rotation=0, fontsize=20)\nplt.ylim(0, 1.2)\ndesign('The time between the day of booking and the day of the appointment','Proportion')","58c0cd56":"### Is there a relationship between No-show and location of the hospital?","c6819557":"it's sound that the count of enrolled patients is the least, but the No-show rate for enrolled patients or not enrolled patients is convergent, the Scholarship doesn't have any effect on it.","3443e9ea":"Although the count having Handicap is the least, but the No-show rate for patients having Handicap or not is convergent, the Handicap doesn't have any effect on it.","cf4aad93":"#### to make a clear comparsion to find out the attendance and absence rate for each period(the length of time between the day of booking and the day of the appointment) so let's divide each count by the total count for Absentees and Attendees to use proportions instead","ee85635d":"\n# Project: No-show appointments\n\n## Table of Contents\n<ul>\n<li><a href=\"#intro\">Introduction<\/a><\/li>\n<li><a href=\"#wrangling\">Data Wrangling<\/a><\/li>\n<li><a href=\"#eda\">Exploratory Data Analysis<\/a><\/li>\n<li><a href=\"#conclusions\">Conclusions<\/a><\/li>\n<\/ul>","850636c0":"#### to make a clear comparison to find out the attendance and absence rate for each gender  let's divide each count by the total count for Absentees and Attendees to use proportions instead","9f030827":"### Is there a relationship between No-show and the length of time between the day of booking and the day of the appointment?","3e3bb378":"The No-show rate rises between 1 and 18 and reaches its highest level between 19 and 37, but it decreases between 38 and 55 to reach its lowest level between 56 and 115","2a18b7e1":"the attendance and absence rate for each gender is convergent,the gender don't have any effect on it","a64c465f":"<a id='conclusions'><\/a>\n## Conclusions\n-the attendance and absence rate for each gender is convergent, the gender doesn't have any effect on it.\n\n-The No-show rate rises between 1 and 18 and reaches its highest level between 19 and 37, but it decreases         between 38 and 55 to reach its lowest level between 56 and 115.\n\n-there's a strong correlation between Neighbourhood and No-show.\n\n-the No-show rate for enrolled patients or not enrolled patients is convergent, the Scholarship doesn't have any effect on it.\n\n-Hypertension, Diabetes, Alcoholism, and Handicap don't have any effect on the No-show rate.\n\n-the No-show rate of patients who received SMS is less than patients who not received SMS, it's strange!\n\n-the No-show rate for patients every day of the week is convergent.\n\n-the count of patients booking on the same day is the biggest And the longer the time between the day of booking   and the day of the appointment,The higher the No-show rate.\n#### limitations:\n    -there's no clear correlation between No-show and gender, chronic diseases,enrollment in Scholarship.\n    -the column 'Handicap' should have only values 0 or 1 which mean false or trueand not contains the number  of Handicap [2,3,4] for each patient","187a6217":"<a id='wrangling'><\/a>\n## Data Wrangling\n","ea5116ba":"### Is there a relationship between No-show and whether the patient is Diabetic?","b856a077":"the count of patients on Saturday is the least, but the No-show rate for patients every day of the week is convergent.","2fccec4d":"#### to make a clear comparsion to find out the attendance and absence rate whether has Alcoholism or not let's divide each count by the total count for Absentees and Attendees to use proportions instead","4b63532f":"the count of patients who received SMS is few and the No-show rate of patients who received SMS is less than patients who not received SMS, it's strange!","64467b2a":"there's strong correlation between Neighbourhood and No-show","849c3e2b":"### Is there a relationship between No-show and whether the patient has Alcoholism?","b9f3285c":"<a id='eda'><\/a>\n## Exploratory Data Analysis\n### Is there a relationship between No-show and Gender?","2fcc58cd":"### Is there a relationship between No-show and whether the patient  received SMS?","7b7103de":"the count patients booking in the same day is the biggest \nAnd the longer the time between the day of booking and the day of the appointment, The higher the No-show rate.","469cc570":"#### to make a clear comparsion to find out the attendance and absence rate whether enrolled or not  let's divide each count by the total count for Absentees and Attendees to use proportions instead","c33dc5b0":"#### to make a clear comparison to find out the attendance and absence rate for each age let's divide each count by the total count for Absences and Attendees to use proportions instead","c4553ee6":"### Is there a relationship between No-show and whether the patient has Hypertension?","a0f35c3d":"#### to make a clear comparsion to find out the attendance and absence rate for each day of week so let's divide each count by the total count for Absentees and Attendees to use proportions instead","52026ab5":"#### to make a clear comparsion to find out the attendance and absence rate whether has Handicap or not let's divide each count by the total count for Absentees and Attendees to use proportions instead","5375fd9f":"### Is there a relationship between No-show and whether the patient has Handicap?","90c186cb":"Although the count having Hypertension is the least, but the No-show rate for patients having Hypertension or not is convergent, the Hypertension doesn't have any effect on it.","9964b23a":"### Is there a relationship between No-show and whether patient is enrolled in Brasilian welfare program Bolsa Fam\u00edlia?","1408d81b":"#### to make a clear comparsion to find out the attendance and absence rate whether has received SMS or not let's divide each count by the total count for Absentees and Attendees to use proportions instead","f8e22e56":"### to make a clear comparsion to find out the attendance and absence rate whether has Diabetes or not let's divide each count by the total count for Absentees and Attendees to use proportions instead","ad43a2ea":"#### to make a clear comparsion to find out the attendance and absence rate whether has Hypertension or not let's divide each count by the total count for Absentees and Attendees to use proportions instead","9bb26da8":"Although the count having Alcoholism is the least, but the No-show rate for patients having Alcoholism or not is convergent, the Alcoholism doesn't have any effect on it.","30ee1bf4":"<a id='intro'><\/a>\n## Introduction\n\n### Dataset Description \n\n> This dataset collects information from 100k medical appointments in Brazil and is focused on the question of whether or not patients show up for their appointment. A number of characteristics about the patient are included in each row.\n## columns:\n#### -PatientId: unique indentifier for each patient.\n#### -AppointmentID: unique indentifier for each Appointment.\n#### -Gender: sex of each patient and it contains two values : F: refers to female  &&   M: refers to male.\n#### -ScheduledDay: tells us on what day the patient set up their appointment.\n#### -AppointmentDay: the date to go to the hospital.\n#### -Age: the date of birth of each patient.\n#### -Neighbourhood: indicates the location of the hospital.\n#### -Scholarship: indicates whether or not the patient is enrolled in Brasilian welfare program Bolsa Fam\u00edlia and it contains two values: 0 refers to be not enrolled and 1 refers to be enrolled.\n#### -Hipertension: indicates whether or not the patient has high blood pressure.\n#### -Diabetes: indicates whether or not the patient has Diabetes mellitus (is a chronic disease that impairs blood sugar regulation in the body) and it contains two values: 0 refers to not sick and 1 refers to sick.\n#### -Alcoholism : indicates whether or not the patient is an addiction to drinking alcohol and it contains two values: 0 refers to not sick and 1 refers to sick.\n#### -Handicap: indicates whether or not the patient has physical disability and it contains two values: 0 refers to not sick and 1 refers to sick.\n#### -SMS_received:  indicates whether or not the patient received message SMS and it contains two values: 0 refers to not sick and 1 refers to sick.\n#### -No-show: it says \u2018No\u2019 if the patient showed up to their appointment, and \u2018Yes\u2019 if they did not show up.\n\n\n### Question(s) for Analysis\n    \n#### 1)-Is there a relationship between No-show and Gender?\n\n#### 2)-Is there a relationship between No-show and the age of patient?\n\n#### 3)-Is there a relationship between No-show and location of the hospital?\n\n#### 4)-Is there a relationship between No-show and whether patient is enrolled in Brasilian welfare program Bolsa Fam\u00edlia?\n\n#### 5)-Is there a relationship between No-show and whether the patient has Hypertension?\n\n#### 6)-Is there a relationship between No-show and whether the patient is Diabetic?\n\n#### 7)-Is there a relationship between No-show and whether the patient has Alcoholism?\n\n#### 8)-Is there a relationship between No-show and whether the patient has Handicap?\n\n#### 9)-Is there a relationship between No-show and whether the patient  received SMS?\n\n#### 10)-Is there a relationship between No-show and   days of week? \n\n#### 11)-Is there a relationship between No-show and the length of time between the day of booking and the day of the appointment?\n\n#### 12)-What factors are important for us to know in order to predict if a patient will show up for their scheduled appointment?\n","b3face85":"### Is there a relationship between No-show and   days of week? ","eff8b0c4":"\n### Data Cleaning ","377f2bf6":"####  to make a clear comparison to find out the attendance and absence rate for each Neighbourhood  let's divide each count by the total count for Absentees and Attendees to use proportions instead","bbf432a2":"### Is there a relationship between No-show and the age of patient?","01c81b0c":"Although the count having Diabetes is the least, but the No-show rate for patients having Diabetes or not is convergent, Diabetes doesn't have any effect on it."}}