{"cell_type":{"ef32e60b":"code","d910fb88":"code","03c52080":"code","236b7131":"code","90b02720":"code","2ccff282":"code","de454f74":"code","9d3ac7ab":"code","8c5ee9ed":"code","f2ef7283":"code","146e1935":"markdown","d5f12b8c":"markdown","d90711cb":"markdown","907e3f03":"markdown","3c6005f0":"markdown","b8749e64":"markdown"},"source":{"ef32e60b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d910fb88":"# Imports\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","03c52080":"def read_data(df):\n    print(f\"Total rows {df.shape[0]}\")\n    print(f\"Columns {df.shape[1]}\")\n    print(df.columns)\n    print(df.head(3))","236b7131":"train_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-mar-2021\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-mar-2021\/test.csv\")\nprint(\"Train Data\")\nread_data(train_df)\nprint(\"Test Data\")\nread_data(test_df)","90b02720":"feature_cols = train_df.drop(['id', 'target'], axis=1).columns\n# Seprating numerical and categprical columns\nnumerical_columns = train_df[feature_cols].select_dtypes(include='float64').columns\ncategorical_columns = train_df[feature_cols].select_dtypes(include='object').columns\n\n\n# combinning both train and test df\ndf = pd.concat([train_df, test_df], axis=0).reset_index(drop=True)\ntargets = df['target']\ndf = df.drop(['id', 'target'], axis=1)\nprint(df.shape)","2ccff282":"# Lets check some numerical columns\ndf_numerical = df[numerical_columns]\ndf_numerical.head(5)","de454f74":"# Correlation matrix\ncorr = df.corr()\ncorr.style.background_gradient(cmap='coolwarm')","9d3ac7ab":"# Lets check some categorical columns\ndf_categorical = df[categorical_columns]\ndf_categorical.head(5)","8c5ee9ed":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style=\"ticks\", context=\"talk\")\n\ndef plot_unique(columns, df):\n    unique_count = []\n    for column in columns:\n        # print(f'{column}: {df[column].unique().size}')\n        unique_count.append(df[column].unique().size)\n    plt.xticks(rotation='vertical')    \n    plt.bar(categorical_columns, unique_count)\n    plt.xlabel('Column name')\n    plt.ylabel('Count of unique values')\n    print(f\"Min count: {min(unique_count)}\")\n    print(f\"Max count: {max(unique_count)}\")\nplot_unique(categorical_columns, df_categorical)        ","f2ef7283":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\ntarget_counts = targets.value_counts()\nprint(target_counts.index)\nsns.barplot(x=target_counts.index, y=target_counts.values)\nplt.xlabel('Targets')\nplt.ylabel('Count')\nplt.show()\n\nprint(\"Count of targets:\")\nprint(targets.value_counts())","146e1935":"Seems like the targets are skewed with significantly more number of 0's than 1's","d5f12b8c":"Reading Data\n\nWe see a target column to be predicted, cat0 - cat18 are categorical, and the feature columns cont0 - cont10 are continuous.","d90711cb":"Observations:\n\n* Seems like cont6 is not correlated to any of the other columns.\n* cont1 and cont2 seem to be highly correlated (0.86193) same could be said for cont0 & cont10, cont0 & cont7.","907e3f03":"Distribution of unique values","3c6005f0":"Observations:\n\n* Minimum number fo unique values present in the categorical columns is 2 and max is 309.\n* For other columns the value ranges from 2-100 unique values.\n* cat5, cat8 & cat10 have 2 letter alphabets whereas other contain only single alphabet value.","b8749e64":"Lets have a look at the target column"}}