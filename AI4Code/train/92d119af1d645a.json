{"cell_type":{"e527b818":"code","7e90ea19":"code","9c335f25":"code","0d7d78dd":"code","25a99d1c":"code","0f991d29":"code","19736bbc":"code","ea7204fe":"code","b035d7f8":"code","a134ef2d":"code","e70297a9":"code","6738d17f":"code","05a7d418":"code","4000e22c":"code","08bf56c8":"code","d4409228":"code","69c0a92b":"code","ebf2d8fc":"code","f705f5ea":"code","300955f6":"code","bb4a88f4":"code","2e5c92e9":"code","c75bc2b3":"code","735e8aaf":"code","aa27b509":"code","dd6a3b88":"code","703e874b":"markdown","3b252119":"markdown","95bb8a05":"markdown","e0ae1d39":"markdown","ff13bdbb":"markdown"},"source":{"e527b818":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport math\nimport matplotlib.pyplot as plt\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, mean_squared_error","7e90ea19":"dementia = pd.read_csv('..\/input\/dementia-prediction-dataset\/dementia_dataset.csv')","9c335f25":"dementia.shape","0d7d78dd":"dementia.head()","25a99d1c":"dementia.describe()","0f991d29":"dementia.info()","19736bbc":"#handling missing value\ndementia.isnull().sum()","ea7204fe":"dementia['SES'].fillna(0)","b035d7f8":"dementia['MMSE'].fillna(0)","a134ef2d":"#rename attribute\ndementia = dementia.rename(columns = {'M\/F' : 'Gender'})","e70297a9":"#correlation heatmap\nplt.figure(figsize = (10,10))\nsns.heatmap(dementia.corr(), annot = True, cmap = 'OrRd')","6738d17f":"df = dementia[['eTIV', 'nWBV', 'ASF', 'CDR', 'Group']]\ndf.head()","05a7d418":"Demented = df[df['CDR'] == 0.5]\nNonDemented = df[df['CDR'] == 0.0]","4000e22c":"df.Group[df.Group == 'Nondemented'] = 1\ndf.Group[df.Group == 'Demented'] = 2\ndf.Group[df.Group == 'Converted'] = 3","08bf56c8":"df['Group'] = df['Group'].astype(int)","d4409228":"#split data\nX = df.drop('Group', axis = 1)\ny = df['Group']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 1)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","69c0a92b":"svm = SVC(kernel = 'linear', gamma = 'auto', C = 5)\nsvm.fit(X_train, y_train)\nprint(svm)","ebf2d8fc":"#prediction\ny_pred = svm.predict(X_test)\nprint(y_pred)","f705f5ea":"#accuracy score\naccuracy = accuracy_score(y_test, y_pred)\nprint('Accuracy Score : ', accuracy)\nprint('Percentage : ', int(accuracy * 100), '%')","300955f6":"#check RMSE\nmse = mean_squared_error(y_test, y_pred)\nrmse = math.sqrt(mse)\nprint('Root Mean Squared Error : ', rmse)","bb4a88f4":"#confusion matrix\nmatrix = pd.crosstab(y_test, y_pred, rownames = ['Actual'], colnames = ['Predicted'])\nprint(matrix)","2e5c92e9":"#classification report\nreport = classification_report(y_test, y_pred)\nprint(report)\n\n# Nondemented -> 1\n# Demented -> 2\n# Converted -> 3","c75bc2b3":"#plotting result\nresult = Demented.plot(kind='scatter', x = 'nWBV', y = 'ASF', label = 'Demented', color='red')\nNonDemented.plot(kind='scatter', x = 'nWBV', y = 'ASF', label = 'Non Demented', color='blue', ax = result)\nplt.title(\"ASF ~ nWBV\")","735e8aaf":"#matrix correlation\nplt.figure(figsize = (10,6))\nsns.heatmap(matrix.corr(), annot = True, cmap = 'OrRd')","aa27b509":"plt.figure(figsize = (10,6))\nsns.countplot(dementia['Group'])\nplt.title(\"Classification of Dementia\")\nplt.show()","dd6a3b88":"#distribution\nplt.figure(figsize = (10,6))\nsns.distplot(df['Group'])\nplt.title(\"Distribution Group of Dementia\")\nplt.show()","703e874b":"# Classification & Prediction of Dementia","3b252119":"## Selection Data","95bb8a05":"## Support Vector Machine Model","e0ae1d39":"## Data Extraction","ff13bdbb":"## Transform Data"}}