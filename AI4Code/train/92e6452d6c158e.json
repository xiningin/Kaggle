{"cell_type":{"df6e8ea5":"code","1b0d9441":"code","0519e7eb":"code","d3a1e487":"code","7d2934b5":"code","67d59846":"code","71063f10":"code","04e8d3f1":"code","8c8b59fa":"code","a12e4f15":"code","4cbdf744":"code","acf13cd7":"code","3320f0b3":"code","af609dd3":"code","71e49260":"code","7d38da2c":"markdown","583bd253":"markdown","a2bb5b8c":"markdown","2ef1d9e3":"markdown","0a26d76d":"markdown","adfef810":"markdown","7d6523c7":"markdown","ced923a9":"markdown","f06e9b00":"markdown","6dbe4d09":"markdown"},"source":{"df6e8ea5":"# \u5f62\u614b\u7d20\u5206\u6790\u30e9\u30a4\u30d6\u30e9\u30ea\u30fcMeCab \u3068 \u8f9e\u66f8(mecab-ipadic-NEologd)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \n!apt-get -q -y install sudo file mecab libmecab-dev mecab-ipadic-utf8 git curl python-mecab > \/dev\/null\n!git clone --depth 1 https:\/\/github.com\/neologd\/mecab-ipadic-neologd.git > \/dev\/null \n!echo yes | mecab-ipadic-neologd\/bin\/install-mecab-ipadic-neologd -n > \/dev\/null 2>&1\n!pip install mecab-python3 > \/dev\/null","1b0d9441":"# \u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u306b\u3088\u308b\u30a8\u30e9\u30fc\u56de\u907f\n!ln -s \/etc\/mecabrc \/usr\/local\/etc\/mecabrc","0519e7eb":"# NEologd\u306e\u5834\u6240\u3092\u78ba\u8a8d\n!echo `mecab-config --dicdir`\"\/mecab-ipadic-neologd\"","d3a1e487":"!pip install mojimoji > \/dev\/null","7d2934b5":"from typing import List, Optional\n\nimport MeCab\nimport mojimoji\n\n\ndicdir = !echo `mecab-config --dicdir`\"\/mecab-ipadic-neologd\"\ntagger = MeCab.Tagger(dicdir[0])","67d59846":"def tokenize(sentence: str) -> List[str]:\n    splitted = tagger.parse(sentence).split(\"\\n\")\n    filtered = list(\n        filter(\n            lambda x: x != \"\" and x != \"EOS\",\n            splitted\n        )\n    )\n    return filtered\n\n\ndef split_sentence(\n    sentence: str, \n    normalize=False, \n    pos_allowed: Optional[List[str]] = None, \n    disallow: Optional[List[str]] = None\n) -> List[str]:\n    if normalize:\n        sentence = mojimoji.zen_to_han(sentence, kana=False).lower()\n        sentence = mojimoji.han_to_zen(sentence, digit=False, ascii=False)\n    splitted = [result.split(\"\\t\") for result in tokenize(sentence)]\n    if disallow is None:\n        disallow = []\n    \n    if pos_allowed is None:\n        words = [\n            result[0] for result in splitted\n            if result[1].split(\",\")[1] not in disallow\n        ]\n    else:\n        words = [\n            result[0] for result in splitted\n            if result[1].split(\",\")[1] not in disallow\n            and result[1].split(\",\")[0] in pos_allowed\n        ]\n    return words","71063f10":"text = \"\u667a\u306b\u50cd\u3051\u3070\u89d2\u304c\u7acb\u3064\u3002\u60c5\u306b\u68f9\u3055\u305b\u3070\u6d41\u3055\u308c\u308b\u3002\u610f\u5730\u3092\u901a\u305b\u3070\u7aae\u5c48\u3060\u3002\u514e\u89d2\u306b\u4eba\u306e\u4e16\u306f\u4f4f\u307f\u306b\u304f\u3044\u3002\"\ntokenize(text)","04e8d3f1":"split_sentence(text)","8c8b59fa":"split_sentence(text, normalize=True)","a12e4f15":"split_sentence(text, disallow=[\"\u53e5\u70b9\", \"\u975e\u81ea\u7acb\"])","4cbdf744":"split_sentence(text, pos_allowed=[\"\u540d\u8a5e\"])","acf13cd7":"import pandas as pd\n\n\ntrain = pd.read_csv(\"..\/input\/rkcup-1\/train.csv\")\ntest = pd.read_csv(\"..\/input\/rkcup-1\/test.csv\")","3320f0b3":"train.head()","af609dd3":"train[\"separated_text_2\"] = train[\"text\"].map(lambda x: \" \".join(split_sentence(x)))\ntest[\"separated_text_2\"] = test[\"text\"].map(lambda x: \" \".join(split_sentence(x)))","71e49260":"train.head()","7d38da2c":"`normalize`\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u5168\u89d2\u534a\u89d2\u3092\u63c3\u3048\u305f\u308a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u5168\u3066\u5c0f\u6587\u5b57\u306b\u76f4\u3057\u305f\u308a\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u4f8b\u6587\u306f\u6b63\u898f\u5316\u3055\u308c\u308b\u5bfe\u8c61\u4f8b\u6587\u304c\u306a\u3044\u305f\u3081\u51fa\u529b\u306b\u5909\u5316\u306f\u3042\u308a\u307e\u305b\u3093\u3002","583bd253":"`disallow`\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u54c1\u8a5e\u7d30\u5206\u985e\u306b\u3064\u3044\u3066\u8a31\u53ef\u3057\u306a\u3044\u3082\u306e\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","a2bb5b8c":"\u5206\u304b\u3061\u66f8\u304d\u3060\u3051\u3055\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u88dc\u52a9\u60c5\u5831\u304c\u3064\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n`split_sentence`\u95a2\u6570\u306f\u88dc\u52a9\u60c5\u5831\u3092\u843d\u3068\u3057\u3066\u5358\u8a9e\u5206\u5272\u306e\u7d50\u679c\u306e\u307f\u3092\u8fd4\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u51fa\u3057\u308f\u3051\u304c\u3067\u304d\u307e\u3059\u3002","2ef1d9e3":"## MeCab & NEologd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMeCab\u3068\u305d\u306ePython\u30e9\u30c3\u30d1\u30fc\u3001\u304a\u3088\u3073`mecab-ipadic-neologd`\u306e\u8f9e\u66f8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002","0a26d76d":"## \u5358\u8a9e\u5206\u5272\u3092\u884c\u3046\u305f\u3081\u306e\u95a2\u6570\u3092\u7528\u610f","adfef810":"## \u30b5\u30f3\u30d7\u30eb\u306e\u4f8b\u6587\u3067\u8a66\u3057\u3066\u307f\u308b\n\n\u6319\u52d5\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u3001`tokenize`\u95a2\u6570\u306f`MeCab`\u306e\u5206\u304b\u3061\u66f8\u304d\u7d50\u679c\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3057\u307e\u3059\u3002","7d6523c7":"## \u5168\u89d2\u21c4\u534a\u89d2\u5909\u63db\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","ced923a9":"## \u306f\u3058\u3081\u306b\n\n\u3053\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u3001`train.csv`\u304a\u3088\u3073`test.csv`\u306e`text`\u30ab\u30e9\u30e0\u304b\u3089`separated_text`\u3092\u4f5c\u3063\u305f\u5358\u8a9e\u5206\u5272\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002","f06e9b00":"`pos_allowed`\u306f\u54c1\u8a5e\u306b\u3064\u3044\u3066\u8a31\u53ef\u3059\u308b\u3082\u306e\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002","6dbe4d09":"## RKCup\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u9069\u7528"}}