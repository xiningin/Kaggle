{"cell_type":{"dd4040cb":"code","3e1f2572":"code","b5439362":"code","92044170":"code","ce461911":"code","5b019e22":"code","50b1c14c":"code","eef2a055":"code","72c8b1cf":"code","c98e0b88":"code","cb360a2a":"code","7bea2540":"code","c4ec5944":"code","79ad7dd9":"code","bb0fae9e":"code","d11b54f3":"code","82713b78":"code","ef6d975c":"code","72d8c323":"code","d787702f":"code","fc18ab8f":"code","11cefa2f":"code","6e47fd9f":"code","7a0356ed":"code","2cf42d46":"code","63fca1d5":"code","5646dd6c":"code","6726203d":"code","70ab2db1":"code","b856a776":"code","22dfe665":"code","50029744":"code","c50a5149":"code","b5d83bd6":"code","386091a4":"code","cb49b794":"code","33b110f7":"code","a8543bf4":"code","f7076192":"code","4cff3982":"code","ad22bb19":"code","39a07547":"code","4889545a":"code","5c6cf228":"code","10677c58":"code","75da37e6":"code","347c961d":"code","efd3429e":"code","2f71f4f1":"code","dff919e8":"code","d924cc57":"code","3de98c5c":"code","f294246f":"code","762a5dae":"code","07e18bc5":"code","8e162d18":"code","b1e39164":"code","712a7089":"code","22348d76":"code","7f43e9ed":"code","b4a538c7":"code","13567048":"code","dff157c1":"code","fd179a56":"code","7e0a948d":"code","85f1d3dd":"code","0ec84957":"code","4040cad6":"code","6d104f8d":"code","dc49f2cc":"code","b236c31c":"code","20105392":"code","ae381af4":"code","d8e1ee3e":"code","d0ec3ab4":"code","a879aecb":"code","d086fe2c":"markdown","847a1407":"markdown","d0b6554a":"markdown","2e155c2f":"markdown","d17f3a34":"markdown","10f16015":"markdown","f031cba4":"markdown","8c132cee":"markdown","e1640751":"markdown","f568891c":"markdown","e054302d":"markdown","f7f6630b":"markdown","550f73d7":"markdown","34594635":"markdown","79e40a38":"markdown","4a56c9f4":"markdown","a5ba8ba6":"markdown","fd1ac689":"markdown","9aefee92":"markdown","b4052ba5":"markdown","a8a0f60e":"markdown","fe632a49":"markdown","c7a38552":"markdown","ec4cbe1c":"markdown","5fc2ea48":"markdown","8523194f":"markdown","8353df82":"markdown","7a8f233e":"markdown","19b1542f":"markdown","31f7acf6":"markdown","9504daa9":"markdown","97dba82b":"markdown","f7b2f730":"markdown","afdafdb1":"markdown","356b74c4":"markdown","9af150e8":"markdown","c3a981bd":"markdown","18609b2a":"markdown","fc52cc1f":"markdown","2e352840":"markdown","a44739aa":"markdown","9a3f970c":"markdown","993ec332":"markdown","2ef15f8d":"markdown","0500d00a":"markdown","095fb20f":"markdown","80d130bb":"markdown","98b76a91":"markdown","905b16e9":"markdown","4cf8d453":"markdown","7809efe7":"markdown","01ee9875":"markdown","98405f09":"markdown","43a02c71":"markdown","8cc2dd90":"markdown","5a277daa":"markdown","ded29a21":"markdown","68f757a3":"markdown","2f07f527":"markdown","86dcfb89":"markdown","2c96f0c0":"markdown","a99295c0":"markdown","51e008fb":"markdown","e80ed3c1":"markdown","49574b6a":"markdown","8c99f9ae":"markdown","8c119c66":"markdown","6f8ca68b":"markdown","ee7960d9":"markdown","35ca8bf5":"markdown","62015f3d":"markdown","fa02ef9c":"markdown","5f31c30f":"markdown","5a592153":"markdown","e9867098":"markdown","322afc01":"markdown","b6c78538":"markdown","2443d783":"markdown","dcba850b":"markdown","4976f8c8":"markdown","d540506a":"markdown","c19997af":"markdown","b43a49b1":"markdown","570c4e1c":"markdown","0baad581":"markdown","da8210d1":"markdown","8f56444d":"markdown","885d611f":"markdown"},"source":{"dd4040cb":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3e1f2572":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","b5439362":"# Display all columns(features)\npd.set_option('display.max_columns', None)\n#pd.set_option('display.max_rows', None)\n\ndf_loan = pd.read_csv('\/kaggle\/input\/lending-club-loan-data\/loan.csv')","92044170":"df_loan.shape","ce461911":"df_loan.head()","5b019e22":"# descriptive statistics of numerical features\ndf_loan.describe()","50b1c14c":"# descriptive statistics of categorical (string) features\ndf_loan.describe(include=['O'])","eef2a055":"df_loan.isnull().sum()","72c8b1cf":"total_data=len(df_loan)","c98e0b88":"plt.figure(figsize=(11,6))\nsns.set(style='darkgrid')\ng=sns.countplot(x=\"loan_status\", data=df_loan ,order = df_loan['loan_status'].value_counts().index ,color='r')\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Loan Status\", fontsize=15)\ng.set_ylabel(\"Count\", fontsize=15)\ng.set_title(\"Loan Status Distribution\", fontsize=20)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.3f}%'.format(height\/total_data*100),ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","cb360a2a":"status=['Current','Fully Paid','Charged Off','Default']\ndf=df_loan[df_loan['loan_status'].isin(status)]","7bea2540":"plt.figure(figsize=(20,10))\ntab=pd.crosstab(df['addr_state'], df['loan_status'],normalize='index') * 100\ntab.plot(kind='bar',legend=None,stacked=True)\nplt.xlabel('State',fontsize=10)\nplt.xticks(fontsize=9)\nplt.yticks(fontsize=9)\nplt.ylabel('Share of Loan Status (%)',fontsize=10)\nplt.title('Share of Loan Status by State', fontsize=12)\n#plt.legend(loc='upper right')","c4ec5944":"tab.style.background_gradient(cmap = sns.light_palette(\"green\", as_cmap=True))","79ad7dd9":"tab=pd.crosstab(df['verification_status'], df['loan_status'],normalize='index') * 100\ntab.plot(kind='bar',legend=None,stacked=True)\nplt.xlabel('Verification Status',fontsize=10)\nplt.ylabel('Share of Loan Status (%)',fontsize=10)\nplt.xticks(fontsize=9)\nplt.yticks(fontsize=9)\nplt.title('Share of Loan Status by Verification Status',fontsize=12)\n#plt.legend(loc='upper right')","bb0fae9e":"tab.style.background_gradient(cmap = sns.light_palette(\"orange\", as_cmap=True))","d11b54f3":"plt.figure(figsize=(11,6))\n\ng = sns.countplot(x='purpose', data=df_loan,order = df_loan['purpose'].value_counts().index,color='g')\ng.set_title(\"Borrower Purposes for Loan Credit\", fontsize=20)\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Purpose\", fontsize=15)\ng.set_ylabel('Count', fontsize=15)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=11) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","82713b78":"cm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_loan['purpose'], df_loan['loan_status'],normalize='index') * 100,2).style.background_gradient(cmap = cm)","ef6d975c":"plt.figure(figsize=(11,6))\nsns.set(style='dark')\ng = sns.distplot(df_loan[\"loan_amnt\"], color='c')\ng.set_xlabel(\"Loan Amount\", fontsize=15)\ng.set_ylabel(\"Frequency\", fontsize=15)\ng.set_title(\"Loan Amount Distribution\", fontsize=20)\nplt.show()","72d8c323":"plt.figure(figsize=(11,6))\n\ng2 = sns.boxplot(x=\"loan_status\", y=\"loan_amnt\", data=df_loan, order = df_loan['loan_status'].value_counts().index,color='r')\ng2.set_xticklabels(g2.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng2.set_xlabel(\"Loan Status\", fontsize=15)\ng2.set_ylabel(\"Loan Amount Distribution\", fontsize=15)\ng2.set_title(\"Loan Amount by Loan Status\", fontsize=20)\n\nplt.show()","d787702f":"df_loan['issue_month'], df_loan['issue_year'] = df_loan['issue_d'].str.split('-', 1).str\n\nplt.figure(figsize=(11,6))\nsns.set(style='darkgrid')\n\ng = sns.countplot(x='issue_year', data=df_loan, color='m')\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'center'},rotation=45)\ng.set_xlabel(\"Year\", fontsize=15)\ng.set_ylabel(\"Total Loan\", fontsize=15)\ng.set_title(\"Total Loan by Year Issued\", fontsize=20)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","fc18ab8f":"plt.figure(figsize=(11,6))\n\ng = sns.countplot(x='application_type', data=df_loan,order = df_loan['application_type'].value_counts().index,color='gray')\ng.set_title(\"Aplication Type Distribution\", fontsize=20)\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Application Type\", fontsize=15)\ng.set_ylabel('Count', fontsize=15)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=11) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","11cefa2f":"# Now will start exploring the Purpose variable\nplt.figure(figsize=(11,6))\n\ng = sns.violinplot(x=\"loan_status\",y=\"loan_amnt\",data=df_loan,hue=\"application_type\", order = df_loan['loan_status'].value_counts().index,split=True, palette='RdBu')\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_title(\"Loan Status - Loan Amount Distribution by Application Type\", fontsize=20)\ng.set_xlabel(\"Loan Status\", fontsize=15)\ng.set_ylabel(\"Loan Amount Distribution\", fontsize=15)\n\nplt.show()","6e47fd9f":"# Now will start exploring the Purpose variable\nplt.figure(figsize=(11,6))\n\ng = sns.violinplot(x=\"purpose\",y=\"loan_amnt\",data=df_loan,hue=\"application_type\",order = df_loan['purpose'].value_counts().index ,split=True, palette='hls')\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_title(\"Purpose - Loan Amount Distribution by Application Type\", fontsize=20)\ng.set_xlabel(\"Purpose\", fontsize=15)\ng.set_ylabel(\"Loan Amount Distribution\", fontsize=15)\n\nplt.show()","7a0356ed":"plt.figure(figsize=(15,7))\ngg = sns.boxplot(x=\"loan_status\", y=\"annual_inc\", data=df_loan, order = df_loan['loan_status'].value_counts().index,color='r')\ngg.set_xticklabels(gg.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\nplt.show()","2cf42d46":"q3=df_loan['annual_inc'].quantile([0.999]).values\n# Exclude data outside quantile 9.999%\nplt.figure(figsize=(15,7))\ngg = sns.boxplot(x=\"loan_status\", y=\"annual_inc\", data=df_loan, order = df_loan['loan_status'].value_counts().index,color='r')\ngg.set_xticklabels(gg.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\nplt.ylim([0,q3])\nplt.show()","63fca1d5":"plt.figure(figsize=(11,6))\n\ng = sns.countplot(x='home_ownership', data=df_loan,order = df_loan['home_ownership'].value_counts().index,color='cyan')\ng.set_title(\"Home Ownership Distribution\", fontsize=20)\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Home Ownership\", fontsize=15)\ng.set_ylabel('Count', fontsize=15)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=11) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","5646dd6c":"plt.figure(figsize = (11,6))\n\ng = sns.boxenplot(x=\"home_ownership\",y=\"loan_amnt\",data=df_loan,hue=\"application_type\")\ng.set_title(\"Home Ownership - Loan Amount\", fontsize=20)\ng.set_xlabel(\"Home Ownership\", fontsize=15)\ng.set_ylabel(\"Loan Amount\", fontsize=15)\nplt.show()","6726203d":"cm = sns.light_palette(\"cyan\", as_cmap=True)\nround(pd.crosstab(df_loan['loan_status'], df_loan['home_ownership'],normalize='columns')*100,2).fillna(0).style.background_gradient(cmap = cm)","70ab2db1":"cm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_loan['loan_status'], df_loan['grade'], normalize='columns')*100,2).style.background_gradient(cmap = cm)","b856a776":"cm = sns.light_palette(\"green\", as_cmap=True)\nround(pd.crosstab(df_loan['loan_status'], df_loan['sub_grade'], normalize='columns')*100,2).style.background_gradient(cmap = cm)","22dfe665":"cm = sns.light_palette(\"purple\", as_cmap=True)\nround((pd.crosstab(df_loan['loan_status'], df_loan['purpose'],values=df_loan['revol_util'], aggfunc='mean')).fillna(0),2).style.background_gradient(cmap = cm)","50029744":"# Into lowercase\ndf_loan['emp_title']=df_loan['emp_title'].str.lower()\n\nplt.figure(figsize=(20,8))\nsns.set(style='darkgrid')\n\ng = sns.countplot(x='emp_title', data=df_loan, palette='hls',order = df_loan['emp_title'].value_counts().index.values[:20])\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Employment Title\", fontsize=15)\ng.set_ylabel(\"Total Loans\", fontsize=15)\ng.set_title(\"Number of Loans by Employment Title\", fontsize=20)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 1000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","c50a5149":"emp_title = df_loan.emp_title.value_counts()[:30].index.values \ncm = sns.light_palette(\"red\", as_cmap=True)\n\nround(pd.crosstab(df_loan[df_loan['emp_title'].isin(emp_title)]['emp_title'], df_loan[df_loan['emp_title'].isin(emp_title)]['loan_status'], normalize='index')*100,2).style.background_gradient(cmap = cm)","b5d83bd6":"emp_title = df_loan.emp_title.value_counts()[:30].index.values \ncm = sns.light_palette(\"blue\", as_cmap=True)\n\nround(pd.crosstab(df_loan[df_loan['emp_title'].isin(emp_title)]['emp_title'], df_loan[df_loan['emp_title'].isin(emp_title)]['grade'], normalize='index')*100,2).style.background_gradient(cmap = cm)","386091a4":"cm = sns.light_palette(\"blue\", as_cmap=True)\n\nround(pd.crosstab(df_loan[df_loan['emp_title'].isin(emp_title)]['emp_title'], df_loan[df_loan['emp_title'].isin(emp_title)]['sub_grade'], normalize='index')*100,2).style.background_gradient(cmap = cm)","cb49b794":"orders = ['< 1 year', '1 year', '2 years', '3 years','4 years', '5 years', '6 years', '7 years','8 years', '9 years', '10+ years']\nplt.figure(figsize=(20,8))\nsns.set(style='darkgrid')\n\ng = sns.countplot(x='emp_length', data=df_loan, color='blue',order = orders)\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Employment Length\", fontsize=15)\ng.set_ylabel(\"Total Loans\", fontsize=15)\ng.set_title(\"Number of Loans by Employment Length\", fontsize=20)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","33b110f7":"plt.figure(figsize = (11,6))\n\ng = sns.violinplot(x=\"emp_length\", y=\"loan_amnt\",data=df_loan, color='gray',order=orders)\ng.set_title(\"Loan Amount Distribution by Employment Length\", fontsize=20)\ng.set_xlabel(\"Employment Length\", fontsize=15)\ng.set_ylabel(\"Loan Amount\", fontsize=15)\n\nplt.legend(loc='upper left')\nplt.show()","a8543bf4":"cm = sns.light_palette(\"red\", as_cmap=True)\nround(pd.crosstab(df_loan['emp_length'],df_loan['loan_status'],   normalize='index') * 100,3)[:15].style.background_gradient(cmap = cm)","f7076192":"# Into lowercase\ndf_loan['title']=df_loan['title'].str.lower()\n\nplt.figure(figsize=(20,8))\nsns.set(style='darkgrid')\n\ng = sns.countplot(x='title', data=df_loan, color='red',order = df_loan['title'].value_counts().index.values[:20])\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Credit Loan Title\", fontsize=15)\ng.set_ylabel(\"Total Loans\", fontsize=15)\ng.set_title(\"Number of Loans by Credit Loan Title\", fontsize=20)\n\nsizes=[]\nfor p in g.patches:\n    height = p.get_height()\n    sizes.append(height)\n    g.text(p.get_x()+p.get_width()\/2.,height + 10000,'{:1.2f}%'.format(height\/total_data*100),ha=\"center\", fontsize=12) \ng.set_ylim(0, max(sizes) * 1.10)\nplt.show()","4cff3982":"q3=df_loan['dti'].quantile([0.999]).values\nplt.figure(figsize=(11,6))\n\ng = sns.boxplot(x=\"loan_status\", y=\"dti\", data=df_loan, order = df_loan['loan_status'].value_counts().index,color='purple')\ng.set_xticklabels(g.get_xticklabels(),fontdict={'horizontalalignment':'right'},rotation=45)\ng.set_xlabel(\"Loan Status\", fontsize=15)\ng.set_ylabel(\"DTI Distribution\", fontsize=15)\ng.set_title(\"Loan Status by DTI\", fontsize=20)\nplt.ylim([0,q3])\nplt.show()","ad22bb19":"cm = sns.light_palette(\"yellow\", as_cmap=True)\nround((pd.crosstab(df_loan['loan_status'], df_loan['purpose'],values=df_loan['dti'], aggfunc='mean')).fillna(0),2).style.background_gradient(cmap = cm)","39a07547":"# Create a new dataframe to plot how dominant the missing values are\ndata={\"feature\":df_loan.columns,\n     \"missing_value\":df_loan.isnull().sum()}\ndf1=pd.DataFrame(data=data)\nplt.figure(figsize=(20,6))\nsns.barplot(x='feature',y='missing_value',data=df1)\nplt.ylim(0,df_loan.shape[0])","4889545a":"df1['missing_value'].describe()","5c6cf228":"# select features that pass the threshold\nchosen_feature=df1['feature'][df1['missing_value']<=2000].values","10677c58":"# Create a new dataframe containing selected features\ndf_data=df_loan[chosen_feature]","75da37e6":"df_data.shape","347c961d":"df_data.head()","efd3429e":"bad_loan = [\"Charged Off\",\"In Grace Period\", \"Default\",\"Late (16-30 days)\", \"Late (31-120 days)\",\"Does not meet the credit policy. Status:Charged Off\"]\ndat_temp=df_data.loan_status\n\ndef loan_condition(status):\n    if status in bad_loan:\n        return 'Bad Loan'\n    else:\n        return 'Good Loan'\n\ndf_data['loan_status'] = df_data['loan_status'].apply(loan_condition)","2f71f4f1":"# Create a new dataframe specifically for object type\ndf_obj=df_data.select_dtypes(include='object')","dff919e8":"df_obj.shape","d924cc57":"df_obj.describe(include=['O'])","3de98c5c":"# drop some features\nfeatures_dropped = ['issue_d','zip_code','addr_state','earliest_cr_line','last_credit_pull_d','disbursement_method','debt_settlement_flag']\ndf_obj.drop(features_dropped,axis=1, inplace=True)\ndf_data.drop(features_dropped,axis=1, inplace=True)","f294246f":"features=df_obj.columns\nfor feature in features:\n    le = LabelEncoder()\n    le.fit(df_obj[feature])\n    df_obj[feature]=list(le.transform(df_obj[feature]))\n    df_data[feature]=df_obj[feature]","762a5dae":"df_obj.info()","07e18bc5":"# update the dataframe by dropping the 'police_code' feature\ndf_data.drop('policy_code',axis=1, inplace=True)","8e162d18":"temp_features=df_data.drop('loan_status',axis=1).columns\nx1=list(temp_features[:14])\nx1.append('loan_status')\nx2=list(temp_features[14:27])\nx2.append('loan_status')\nx3=list(temp_features[27:len(temp_features)])\nx3.append('loan_status')","b1e39164":"plt.figure(figsize=(35,25))\nsns.set(font_scale=2)\nsns.heatmap(df_data[x1].corr(), vmin=-0.42,vmax=0.42,square=True, annot=True,cmap='YlGnBu', cbar=True)","712a7089":"plt.figure(figsize=(35,25))\nsns.heatmap(df_data[x2].corr(), vmin=-0.42,vmax=0.42,square=True, annot=True,cmap='YlGnBu', cbar=True)","22348d76":"plt.figure(figsize=(35,25))\nsns.heatmap(df_data[x3].corr(), vmin=-0.42,vmax=0.42,square=True, annot=True,cmap='YlGnBu', cbar=True)","7f43e9ed":"features_selected = ['loan_amnt','int_rate','term','grade','sub_grade','home_ownership','annual_inc','purpose',\n                    'dti','revol_util','total_acc','last_pymnt_amnt','total_pymnt','loan_status']\ndf_data=df_data[features_selected]","b4a538c7":"df_data.isnull().sum()","13567048":"df_data.annual_inc.fillna(df_data.annual_inc.median(), inplace=True)     \ndf_data.dti.fillna(df_data.dti.median(), inplace=True)\ndf_data.revol_util.fillna(df_data.revol_util.median(), inplace=True)\ndf_data.total_acc.fillna(df_data.total_acc.median(), inplace=True)","dff157c1":"df_data.isnull().sum()","fd179a56":"# Splitting the dataset in X (features) and Y (target variable)\nX=df_data.drop(['loan_status'],axis=1)\nY=df_data['loan_status']\n\n# Splitting the dataset in training (75%) and testing set (25%)\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 0)","7e0a948d":"#Feature Scaling\nstd_scaler = StandardScaler()\nX_train = std_scaler.fit_transform(X_train)\nX_test = std_scaler.fit_transform(X_test)","85f1d3dd":"from sklearn.linear_model import LogisticRegression\n#from sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n#from sklearn.ensemble import BaggingClassifier\n#from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score","0ec84957":"# Logistic Regression\nclf_log_reg = LogisticRegression()\nclf_log_reg.fit(X_train, Y_train)\nacc_log_reg=round((cross_val_score(clf_log_reg,X_train, Y_train, cv=3,scoring='accuracy').mean())*100,2)\nprint(\"Accuracy: \"+str(acc_log_reg)+\"%\")","4040cad6":"\"\"\"\n# Support Vector Machine\nclf_svc=SVC() \nclf_svc.fit(X_train, Y_train)\nacc_svc=round((cross_val_score(clf_svc,X_train, Y_train, cv=3,scoring='accuracy').mean())*100,2)\nprint(\"Accuracy: \"+str(acc_svc)+\"%\")\n\"\"\"","6d104f8d":"# Decision Tree\nclf_dt = DecisionTreeClassifier()\nclf_dt.fit(X_train, Y_train)\nacc_decision_tree=round((cross_val_score(clf_dt,X_train, Y_train, cv=3,scoring='accuracy').mean())*100,2)\nprint(\"Accuracy: \"+str(acc_decision_tree)+\"%\")","dc49f2cc":"# Random Forest\nclf_rf = RandomForestClassifier(n_estimators=3)\nclf_rf.fit(X_train, Y_train)\nacc_random_forest=round((cross_val_score(clf_rf,X_train, Y_train, cv=3,scoring='accuracy').mean())*100,2)\nprint(\"Accuracy: \"+str(acc_random_forest)+\"%\")","b236c31c":"\"\"\"\n# Bagging (estimator KNN)\nclf_bagging = BaggingClassifier(\n    KNeighborsClassifier(\n        n_neighbors=3,\n        weights='distance'\n        ),\n    oob_score=True,\n    max_samples=0.5,\n    max_features=1.0\n    )\nclf_bagging.fit(X_train, Y_train)\nacc_bagging=round((cross_val_score(clf_bagging,X_train, Y_train, cv=3,scoring='accuracy').mean())*100,2)\nprint(\"Accuracy: \"+str(acc_bagging)+\"%\")\n\"\"\"","20105392":"# Predicting & Model Evaluation\n\n# Predicting the results\nlog_pred = clf_log_reg.predict(X_test)\n#svc_pred = clf_svc.predict(X_test)\ndt_pred = clf_dt.predict(X_test)\nrf_pred = clf_rf.predict(X_test)\n#bag_pred = clf_bagging.predict(X_test)","ae381af4":"# Creating the confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm_log = confusion_matrix(Y_test,log_pred)\naccuracy_1 = (cm_log[0,0]+cm_log[1,1])\/len(Y_test)","d8e1ee3e":"cm_dt = confusion_matrix(Y_test,dt_pred)\naccuracy_4 = (cm_dt[0,0]+cm_dt[1,1])\/len(Y_test)\ncm_dt","d0ec3ab4":"cm_rf = confusion_matrix(Y_test,rf_pred)\naccuracy_5 = (cm_rf[0,0]+cm_rf[1,1])\/len(Y_test)\ncm_rf","a879aecb":"print(\"Accuracy Logistic Regression in Testing Set:\",accuracy_1*100,'%',\n      #\"\\nAccuracy SVC:\",accuracy_2*100,'%',\n      \"\\nAccuracy Decision Tree in Testing Set:\",accuracy_4*100,'%',\n      \"\\nAccuracy Random Forest in Testing Set:\",accuracy_5*100,'%')\n      #\"\\nAccuracy Bagging Classifier:\",accuracy_6*100,'%'","d086fe2c":"### Home Ownership Distribution","847a1407":"### Loan Status by Sub-Grade","d0b6554a":"Because there are so many features within dataframe <i>df_data<\/i>, we divide by three parts data for creating the heatmap. ","2e155c2f":"* ##  Loan Status","d17f3a34":"> In Fully Paid cases, all grade has the similar chance rate by about 40%-50%. In charged off cases, grade E,F,G have the highest chance rate of occurency.<br>\nWhile F1,F2,F3,F4,F5,F1,G2,G3,G4,and G5 sub-grade have the highest chance rate of charged off by moret than 30%.","10f16015":"> In training set, Random Forest algorithm provide result with accuracy about 92%","f031cba4":"> The top three home ownership for the loan application throughout 2007-2018: Mortgage (49%), Rent (39.6%), Own (11.2%).\n<br><br>Generally, the loan amount value distribution from joint application is higher than from individual application.\n<br><br>The Home Ownership tends to does not strongly correlated with status loan since the chance rate for all status loan by all home ownership is relatively similar each other.","8c132cee":"> Mostly, the loan has status fuly paid by 46%, current 41%, charged off 12%, then followed by other status. While default status portion just about 0.001% or happened 1 out of 1000 cases.","e1640751":"## Handle the missing value","f568891c":"### Employment Length Distribution","e054302d":"> Over 1\/3 of the loans throughout 2007-2018 are requested by employee with working experienced 10 or above years. The rest portion evenly distributed by less than 1 year to 9 year employees. <br>\n> Employee with experience less than 1 year have the least chance rate of fully paid plus have the largest rate of current status.\n> Employee with experience 7,8, and 9 years has the best chance rate of fully paid status.\n> The loan amount for each employment length category is similar each other.","f7f6630b":"* ## Purpose","550f73d7":"> In training set, Logistic Regression algorithm provide result with accuracy around 88%","34594635":"### Purpose Distribution","79e40a38":"Most likely, features that are dominated by missing values will not help much as features for the prediction model, even those features may be noises in the modeling. Hence, we specify the threshold for maximum containing missing value as 0.09% (2000 observations).","4a56c9f4":"### Sub-Grade by Employment Title","a5ba8ba6":"> Almost all of the loans are from individual application by 94.7% while the rest with small portion is from joint application (5.3%). <br>\nLoan application which does not meet credit policy come from individual application.<br>\nThe distribution of loan amount of joint application nearly the same for all loan status and also similar to from individual app. <br>\nThose patter nearly the same with categorized by purpose except the wedding and educational purpose only come from individual app.","fd1ac689":"> * ## Loan Amount","9aefee92":"> Verification status does not strongly correlated referenced by fully paid (red), current (orange), and charged off (blue) status. <br> Altough, loan with verified mark has slightly better fully paid chance rate but it is not significant compared to other category of verification status.","b4052ba5":"# Exploratory Data Analysis","a8a0f60e":"### Loan Amount & Purpose by Application Type","fe632a49":"### Total Loan by Year Issued","c7a38552":"There are 17 features with object type. We will not convert all of those, but just the features that will have high impact for the model and feature with categorical values.","ec4cbe1c":"### Purpose by Loan Status","5fc2ea48":"# Checking the Available Dataset","8523194f":"> The count of total loan significantly increase between 2012 and 2015. Afterward, the count keep increasing with constant rise until recent year.","8353df82":"> In training set, Decision Tree algorithm provide result with accuracy more than 94%","7a8f233e":"* ## State","19b1542f":"## Model Prediction","31f7acf6":"# Convert Loan Status into Good or Bad Loan","9504daa9":"## Model Fitting","97dba82b":"> There are outliers value in annual income for each loan status. <br>\nThe quantile 25%, 50%, and 75% of annual income for each loan status has similiar value distribution. <br>\nWhat differentiate is the value distribution of outlier values for each loan status.","f7b2f730":"> Overall, default cases occur to borrower with revolving line utilization rate more than 50%. While in fully paid cases, mostly the revolving utilization rate less than 50%.","afdafdb1":"Important information regarding the distribution of missing values throughout all features:\n- q0 (min) = 0\n- q1 (25%) = 29\n- q2 (50%) = 70276\n- q3 (75%) = 2139958\n- q4 (max) = 2260668","356b74c4":"### Confusion Matrix from Decision Tree","9af150e8":"The dataset consist of 2,260,668 observations and 145 features (including the target feature *\"loan_status\"*). Most of those features contain too many missing values.","c3a981bd":"# Feature Selection (Part 1)\n## Dealing with the Dominant Missing Values","18609b2a":"### Loan Amount Distribution","fc52cc1f":"Dataframe consists 2,260,668 observations and 41 features with data type <u>*int, float, and object (string)*<\/u>. All features for prediction models need to convert into numeric <u>*(int or float)*<\/u> datatype. Thus, the features with type object need to converted into numeric type first.","2e352840":"* ## Year Issued","a44739aa":"> The top five borrower by the employment title: Teacher, Manager, Owner, Nurse, and Drive. <br>\n> Overall, the chance rate of fully paid for all emplyment title is similar by 40-50%, except Owner (34%) and Drive (37%). <br>\n> Driver, Truck Driver, and Store Manager have the largest chance rate of charged off by more than 14%, while other employment title lower than 12% rate.","9a3f970c":"# Loading Dataset","993ec332":"# Model Building\n## Splitting into Training and Testing Set","2ef15f8d":"* ## DTI Ratio (Debt to Income Ratio)","0500d00a":"### Loan Amount by Employment Length","095fb20f":"* ## Verification Status","80d130bb":"###### So far the candidate for model algorithms as follow:\n- Logistic Regression\n- Decision Tree\n- Random Forest\n- Bagging Classifier","98b76a91":"> The borrowers mostly request the loan for debt consolidation by more than half portion (56.53%). The second and third largest are credit card and home improvement respectively by much lesser percentage. <br>\nLoan with wedding purpose has the chance rate of fully paid. Meanwhile many education purposes loan has the great record chance of does not meet the credit policy status. Loan with small business purpose has the biggest chance rate of charged off status.","905b16e9":"### Application Type Distribution","4cf8d453":"### Loan Status by Annual Income","7809efe7":"## Converting into Numerical Type (by using LabelEncoder)","01ee9875":"# Convert the Object Type into Numerical Type\n## Feature Selection for Object Type","98405f09":"### Loan Status by Employment Length","43a02c71":"### Grade by Employment Title","8cc2dd90":"### Home Ownership & Loan Amount by Application Type","5a277daa":"## Model Validation\n### Confusion Matrix from Logistic Regression","ded29a21":"* ## Revolving Line Utilization Rate","68f757a3":"### Logistic Regression","2f07f527":"* ## Home Ownership","86dcfb89":"### Loan Status & Purpose by DTI ","2c96f0c0":"> Similar to Purpose feature, the title feature has the same pattern with debt consolidation, credit card refinancing, and home improvement have the largest share.","a99295c0":"### Random Forest","51e008fb":"# Feature Selection (Part 2)","e80ed3c1":"### Loan Status by Grade","49574b6a":"Based on domain knowledge sense and output from heatmap above, here are the features we would like to retain:\n- loan amount (loan_amnt)\n- interest rate (int_rate)\n- term (term)\n- grade (grade)\n- sub-grade (sub_grade)\n- home ownership (home_ownership)\n- annual income (annual_inc)\n- purpose (purpose)\n- DTI (dti)\n- revolving utilization rate (revol_util)\n- total accumulation of credit line (total_acc)\n- last payment amount (last_pymnt_amnt)\n- total payment to date (total_pymnt)\n- loan status (loan_status)","8c99f9ae":"### Employment Title Distribution","8c119c66":"# General Data Exploration","6f8ca68b":"> There are outliers DTI value for each loan status. <br>\nThe quantile 25%, 50%, and 75% of DTI value distribution for each loan status has similiar value distribution. <br>\nWhat differentiate is the value distributino of outlier values for each loan status.","ee7960d9":"### Loan Status by Employment Title","35ca8bf5":"> The highest frequency of loan amount requested by borrowes are about USD 10,000. <br> Generally, the loan borrower that does not meet the credit policy are  request for lower loan amount than with other loan status.","62015f3d":"## Feature Scaling","fa02ef9c":"Based on that descriptive statistics above, several categorical features need to be dropped because the level of values is too varied or not significantly influece the target variable (<i>loan_status<\/i>), as following:\n- issue_d\n- zip_code\n- addr_state\n- earliest_cr_line\n- last_credit_pull_d\n- disbursement_method\n- debt_settlement_flag","5f31c30f":"* ## Employment Title","5a592153":"* ## Annual Income","e9867098":"### Confusion Matrix from Random Forest","322afc01":"### Loan Status by Home Ownership","b6c78538":"### Credit Loan Title Distribution","2443d783":"# Loading Modules","dcba850b":"* ## Grade and Sub-Grade","4976f8c8":"### Loan Amount & Loan Status by Application Type","d540506a":"### Import the Modules","c19997af":"### Loan Status Distribution","b43a49b1":"### Loan Amount by Loan Status","570c4e1c":"* ## Employment Length","0baad581":"> Typically, all states loan dominated by status fully paid (red), current (orange), and charged off (blue). Meanwhile, default just occur in few cases. <br> IA is the state with largest portion of fully paid status by 85.7%. Also the state with largest percentage of charged off beside AL by 14%. While ME is the state with largest portion of default by 0.02%.","da8210d1":"### Decision Tree","8f56444d":"* ## Loan Credit Title","885d611f":"* ## Application Type"}}