{"cell_type":{"cc1c4185":"code","48b92d2f":"code","058db963":"code","d0338112":"code","1cad1c01":"code","febf96be":"code","33744ee9":"code","e7bece47":"code","46e01b29":"code","1cc02bab":"code","3118bf1b":"code","a765b027":"code","f7217263":"code","da12a056":"code","ebb73717":"code","802da720":"code","d653c7e7":"code","61d33297":"code","65585119":"code","55125aba":"code","b595efed":"code","59043774":"code","ff532bf1":"code","b8cdd281":"code","f6da36f2":"code","76a95231":"code","25747f29":"code","798e8036":"code","cae66ac7":"code","3b462e4f":"code","ed5f4b47":"code","9a34c1cc":"code","42577c3a":"code","af167470":"code","5357c414":"code","b28bdf69":"code","40c0b9f9":"code","ce8b803c":"code","b2a8bc8c":"code","d7aed4b8":"code","2401f81c":"code","c63c1411":"code","586d12ba":"code","6b513ab6":"code","757a2080":"markdown","63e7edc7":"markdown","500b7970":"markdown","06c81453":"markdown","3c4a07f3":"markdown","6558012a":"markdown","14372c07":"markdown","26743633":"markdown","b656cd2a":"markdown","4afbc8e6":"markdown","6ce6ada5":"markdown","c84f90ae":"markdown","4838479f":"markdown","4b43b39e":"markdown","c4c011eb":"markdown","ab9e06a5":"markdown","9e8de710":"markdown","9f1ac7ec":"markdown","5b5afd3c":"markdown","522cf2d9":"markdown"},"source":{"cc1c4185":"import pandas as pd\nimport numpy as np\n\n# read csv file\nfilename ='..\/input\/noshowappointments\/KaggleV2-May-2016.csv'\ndf = pd.read_csv(filename) # default sep=','","48b92d2f":"df.info()\n# found no any missing data","058db963":"# personally, I want to rename these columns in standard English\ndf.rename(index=str, columns={'Hipertension':'Hypertension','Handcap':'Handicap'},inplace=True)","d0338112":"sum(df.duplicated())\n#found no duplicated records","1cad1c01":"df['Gender'].value_counts()\n# found no error records in Gender column","febf96be":"df['No-show'].value_counts()\n# found no error records in No-show column","33744ee9":"df.describe()","e7bece47":"df.Handicap.value_counts()","46e01b29":"df[df['Age']<0]","1cc02bab":"#delete rows with abnormal value: Age = -1, 1 row was deleted\ndf.drop(df[df['Age']<0].index,inplace=True)","3118bf1b":"#delete rows with abnormal value:Handicap > 1, 199 rows were deleted\ndf.drop(df[df.Handicap > 1].index, inplace=True)","a765b027":"type(df['ScheduledDay'][0])","f7217263":"type(df['AppointmentDay'][0])","da12a056":"df['waitdays'] = pd.to_datetime(df['AppointmentDay'])- pd.to_datetime(df['ScheduledDay'])","ebb73717":"df['waitdays'] = df['waitdays'].apply(lambda x: x.days)","802da720":"df['waitdays'].describe()\n#here, we see min: -7days there could be something wrong","d653c7e7":"# drop them\ndf.drop(df[df.waitdays < -1].index, inplace=True)","61d33297":"df.drop(['PatientId','AppointmentID','ScheduledDay','AppointmentDay'], axis=1,inplace=True)","65585119":"df['No-show'] = df['No-show'].replace({'Yes':1,'No':0})","55125aba":"df.rename(index=str,columns={'No-show':'No_show'},inplace =True)","b595efed":"#preview of clean_dataset\ndf.head()","59043774":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n\nfilename = '..\/input\/noshow\/clean_data.csv'\ndff = pd.read_csv(filename) # here I created another dataframe named 'dff', be careful and don't mix it with the former 'df' : )","ff532bf1":"gender_noshow = dff.groupby('Gender').sum()['No_show']","b8cdd281":"gender_noshow.plot.pie(figsize=(5,5),title = 'Gender distribution on NoShow')","f6da36f2":"median = dff['Age'].median()\nlow_age = dff.query('Age < {}'.format(median))\nhigh_age = dff.query('Age >= {}'.format(median))\n\nnoshow_sum_low = low_age['No_show'].sum()\nnoshow_sum_high = high_age['No_show'].sum()","76a95231":"locations = [1, 2]\nheights = [noshow_sum_low, noshow_sum_high]\nlabels = ['Low', 'High']\nplt.bar(locations, heights, tick_label=labels,color='lightcoral')\nplt.title('Relationship Age --- No show')\nplt.xlabel('Age Distribution')\nplt.ylabel('Total Count On NoShow')","25747f29":"age_noshow = dff.groupby('Age').sum()['No_show']","798e8036":"age_noshow = age_noshow\/ df['Age'].value_counts()","cae66ac7":"age_noshow.sort_values(ascending=False).head(10)","3b462e4f":"#Number of no-show patients in each hospital\nNei_noshow = dff.groupby('Neighbourhood').sum()['No_show']","ed5f4b47":"top10_noshow = Nei_noshow.sort_values(ascending=False).head(10)","9a34c1cc":"top10_noshow.plot(kind='bar',figsize=(10,5),\\\n                  title = 'TOP 10 number of patients no-show in Neighbourhood')","42577c3a":"#Number of patients who made appointments in each hospital\nNei_group = dff.Neighbourhood.value_counts()","af167470":"#divide by index and sort result to get rate\nNei_rate = (Nei_noshow \/ Nei_group).sort_values(ascending=False)","5357c414":"#here, we should drop row with rate=1 and rate =0 for better data model\nNei_rate.drop(labels=[Nei_rate.idxmax(),Nei_rate.idxmin()],inplace=True)","b28bdf69":"top10_rate_noshow=Nei_rate.head(10)","40c0b9f9":"top10_rate_noshow.plot(kind='bar',figsize=(10,5),\\\n                      title = 'TOP 10 rates of patients no-show in Neighbourhood')","ce8b803c":"df_new = dff.groupby('No_show')['Scholarship', 'Hypertension',\\\n                       'Diabetes', 'Alcoholism', 'Handicap', 'SMS_received'].sum()","b2a8bc8c":"noshow_6r = df_new.query(\"No_show == 1\")","d7aed4b8":"noshow_total = dff['No_show'].value_counts()[1]","2401f81c":"prop_6r = noshow_6r \/ noshow_total","c63c1411":"sns.set_style('darkgrid')\nprop_6r.plot(kind='bar',figsize=(8,8),\\\n            title='Relationship on 6 factors with No-Show')","586d12ba":"wait_noshow = dff.groupby('waitdays').sum()['No_show']","6b513ab6":"wait_noshow.plot(figsize=(20,10),title='trends on No-show times as wait days increased')","757a2080":"TOP 5 age group --- Rates on No show up","63e7edc7":"# Medical Appointment No Shows\nPhenomenon: Why do 30% of patients miss their scheduled appointments? ","500b7970":"\n\n\n### PART 2:  Data analysis and visualization\n\n\n","06c81453":">Update values in No-show column, No for 0, Yes for 1, and rename it","3c4a07f3":">Rename columns, check if duplicates","6558012a":"PatientID and AppointmentID belong to personal identity information, which don't have much influence on No-show,  ScheduledDay and AppointmentDay has been transferred to waitdays for analysis. hence, drop these columns.","14372c07":"4. Relationship on 'Scholarship', 'Hypertension','Diabetes', 'Alcoholism', 'Handicap', 'SMS_received' with No_show\n\nmake proportions for each elements to find the relationships","26743633":"2. Relationship Age --- No show\n\ncould be improved with smaller age interval","b656cd2a":"Considering the accurancy of AppointmentDay, I ignore the hour and smaller time units and keep days only\n\nvalue of waitdays: -1 means 'today', 0 means 'tomorrow', which means the valid day should be larger than -1. You can refer to original datetime in ScheduledDay and AppointmentDay for help.","4afbc8e6":"5. relationship on waitdays with No-show","6ce6ada5":"## The End. Thanks for reading. Feel free to comment : )","c84f90ae":"**About AppointmentDay and ScheduledDay** <br>\nAppend a new column named 'waitdays' to check if AppointmentDay is later then ScheduledDay. The appointment day as well as the scheduled day need convert their datatype from string to datetime.","4838479f":"3. Relationship\uff1a neighbourhood --- no_show\n\nfind the top10 Neighbourhood (hospital) that patient will not show","4b43b39e":"### PART 1 : Data Wrangling ","c4c011eb":"Other columns are clear so far. Here, I've finished data wrangling. Saving the csv file.\n\nI've uploaded another csv file named 'clean_data.csv' to save time<br>\nYou can use command: df.to_csv('clean_data.csv',index=False) on your notebook workspace.","ab9e06a5":"**Conclusions:**\n* a. After exploring the matters of the dataset, a possible situation that a patient missed his appointment is mainly related with not receiving SMS.\n* b. The female group and Young group take up mainly the \u2018no-show\u2019 group.\n* c. Observation and conclusion should be improved because of the limitations of these data models.","9e8de710":"**About Handicap** <br>\nThe following steps contained my personal thoughts about handling the Handicap data . But in fact,  how to handle 'Handicap' column is decided by the data provider. **Hence, my solution is not suggested.**<br> Handicap has been set into 5 levels  from 0 to 4. I simplified them by keeping records with  0 and 1 only. In the scale of  over 100k sample data, those 'to-be-dropped' records, 183+13+3 = 199, take up  a few part of the whole dataset. \n>Found abnormal values in Column:min Age =-1, and max Handicap =4. Let's deal with related data rows\n","9f1ac7ec":"1.  Relationship: Gender --- no show","5b5afd3c":">Skip the PatientId, AppointmentID and Neighbourhood checkpoints because we can't validate these data without addtional documents\n\n>Check columns: Gender, No-show","522cf2d9":">get the basic information of dataset and check if any data errors regarding each value in columns and save the clean_csv file."}}