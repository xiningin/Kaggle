{"cell_type":{"0e5bdc96":"code","99079487":"code","069ca7a0":"code","dec467cd":"code","cebb3efc":"code","8c8affe9":"markdown","82f6f1e0":"markdown","a1b7dfca":"markdown","9f209404":"markdown"},"source":{"0e5bdc96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","99079487":"import tensorflow as tf\nfrom tensorflow import keras\nfrom sklearn.metrics import classification_report,confusion_matrix\nimport matplotlib.pyplot as plt\nimport seaborn as sns","069ca7a0":"best_model = keras.models.load_model('\/kaggle\/input\/prostaya-so-mnogimy-vyhodami-50\/best_model')\nX1_train, X1_test, X2_train, X2_test, y_train, y_test, d_train, d_test = np.load('\/kaggle\/input\/prostaya-so-mnogimy-vyhodami-50\/data.npy',allow_pickle=True)\nacc_list = np.load('\/kaggle\/input\/prostaya-so-mnogimy-vyhodami-50\/acc_list.npy')\nbest_params = np.load('\/kaggle\/input\/prostaya-so-mnogimy-vyhodami-50\/best_params.npy',allow_pickle=True)","dec467cd":"train_kach = best_model.evaluate([X1_train,X2_train],list(y_train.T),verbose=0)[-53:]\nplt.figure(figsize=(15,5))\npd.DataFrame(train_kach,index=acc_list).sort_values(0).plot.bar(figsize=(15,5))\nplt.title(f'\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435 ({np.mean(train_kach):.2f})')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()","cebb3efc":"test_kach = best_model.evaluate([X1_test,X2_test],list(y_test.T),verbose=0)[-53:]\nplt.figure(figsize=(15,5))\npd.DataFrame(test_kach,index=acc_list).sort_values(0).plot.bar(figsize=(15,5))\nplt.title(f'\u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u0442\u0435\u0441\u0442\u0435 ({np.mean(test_kach):.2f})')\nplt.xticks(rotation=90)\nplt.grid()\nplt.show()\n","8c8affe9":"# \u0418\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","82f6f1e0":"# \u041a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u0442\u0440\u0435\u0439\u043d\u0435","a1b7dfca":"# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430","9f209404":"# \u041a\u0430\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0430 \u0442\u0435\u0441\u0442\u0435"}}