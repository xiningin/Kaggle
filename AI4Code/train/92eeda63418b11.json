{"cell_type":{"547957b8":"code","8f8575f4":"code","8ca588b5":"code","d8df4e9f":"code","270d06a7":"code","1c682a18":"code","3d7a3d91":"code","b787b77c":"code","2e58803c":"code","00d78abe":"code","8c7c9114":"code","f6571413":"code","56514d9c":"code","8f9f84f1":"code","b752d82a":"code","d3cd2b12":"code","f046a36d":"code","db6cff3b":"markdown","96ab6284":"markdown","d55e5b83":"markdown","e90037cb":"markdown","1df96728":"markdown","6c9d6fa4":"markdown","06091d46":"markdown","70e77567":"markdown","bfdac748":"markdown","db83f8d8":"markdown","116e59f2":"markdown","b724b050":"markdown","fdeb0978":"markdown"},"source":{"547957b8":"import glob\nfrom PIL import Image\nimport random\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","8f8575f4":"input_dir = '..\/input\/landmark-retrieval-2020\/'\nglob.glob(input_dir+'*')","8ca588b5":"train_images = sorted(glob.glob(input_dir+\"train\/*\/*\/*\/*.jpg\"))\ntest_images = sorted(glob.glob(input_dir+\"test\/*\/*\/*\/*.jpg\"))\nindex_images = sorted(glob.glob(input_dir+\"index\/*\/*\/*\/*.jpg\"))\n\nprint(f'train : {len(train_images)} \\\n        test : {len(test_images)} \\\n        index : {len(index_images)}')","d8df4e9f":"def plot_sample_images(images, nrows=2, ncols=4):\n    fig, axes = plt.subplots(nrows, ncols, figsize=(15, int(nrows*2.5)))\n    for i, ax in enumerate(axes.flatten()):\n        img = plt.imread(images[i])\n        ax.imshow(img)\n    plt.show()","270d06a7":"plot_sample_images(train_images)","1c682a18":"plot_sample_images(test_images)","3d7a3d91":"plot_sample_images(index_images)","b787b77c":"train_df = pd.read_csv(input_dir+'train.csv')\ntrain_df","2e58803c":"train_df.landmark_id.unique().shape","00d78abe":"train_df.landmark_id.value_counts()","8c7c9114":"fig, axis = plt.subplots(1, 2, figsize=(15, 5))\nsns.countplot(train_df['landmark_id'], order=train_df['landmark_id'].value_counts().index[:20], ax=axis[0])\nsns.countplot(train_df['landmark_id'], order=train_df['landmark_id'].value_counts().index[-20:], ax=axis[1])\naxis[0].tick_params(axis='x', labelrotation=90)\naxis[1].tick_params(axis='x', labelrotation=90)\naxis[1].set(ylim=(0, 10))\nplt.show()","f6571413":"def trans_id_to_path(id):\n    path = f'{input_dir}\/train\/{id[0]}\/{id[1]}\/{id[2]}\/{id}.jpg'\n    return path\n\ntrain_df['path'] = train_df['id'].map(trans_id_to_path)\ntrain_df.head(5)","56514d9c":"train_df.to_pickle(f'train_path.zip')","8f9f84f1":"def display_images_per_id(df, id, n=2):\n    nrows = n\n    ncols = 4\n    fig, axes = plt.subplots(nrows, ncols, figsize=(15, int(nrows*2.5)))\n    cnt = len(df[df['landmark_id']==id])\n    print(f'Landmark ID = {id}')\n    for i in range(nrows):\n        for j in range(ncols):\n            img = plt.imread(df[df['landmark_id']==id].path.iloc[random.randint(0, cnt - 1)])\n            axes[i, j].imshow(img)\n    plt.show()","b752d82a":"i = random.randint(0, len(train_df)-1)\ndisplay_images_per_id(train_df, id=train_df.landmark_id[i])","d3cd2b12":"i = random.randint(0, len(train_df)-1)\ndisplay_images_per_id(train_df, id=train_df.landmark_id[i])","f046a36d":"i = random.randint(0, len(train_df)-1)\ndisplay_images_per_id(train_df, id=train_df.landmark_id[i])","db6cff3b":"Counts per landmark_id.","96ab6284":"### 2.1. landmark_id","d55e5b83":"### 2.2. Add image path to train.csv","e90037cb":"### 2.3. Display images per landmark_id","1df96728":"# EDA - Google Landmark Retrieval 2020","6c9d6fa4":"According to [Data Description](https:\/\/www.kaggle.com\/c\/landmark-retrieval-2020\/data), \"In this competition, you are asked to develop models that can efficiently retrieve landmark images from a large database.\"","06091d46":"## 2. Training data","70e77567":"Number of landmark_id.","bfdac748":"### 1.1. Number of images","db83f8d8":"<hr>\n\n## 1. Input data overview\n\n- The training set is available in the train\/ folder, with corresponding landmark labels in train.csv. \n\n- The query images are listed in the test\/ folder, while the \"index\" images from which you are retrieving are listed in index\/.\n\n- The provided index\/ and test\/ images in the publicly available dataset are provided to mock the size and structure of the private data, but are otherwise not directly used.\n\n- Each image has a unique id. Since there are a large number of images, each image is placed within three subfolders according to the first three characters of the image id (i.e. image abcdef.jpg is placed in a\/b\/c\/abcdef.jpg).\n\nFor more information, please read [Data Description](https:\/\/www.kaggle.com\/c\/landmark-retrieval-2020\/data) !","116e59f2":"This data is unbalanced.","b724b050":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\">\n    <ul class=\"toc-item\">\n        <li><span><a href=\"#1.-Input-data-overview\" data-toc-modified-id=\"Input-data-overview-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Input data overview<\/a><\/span>\n    <ul class=\"toc-item\">\n        <li><span><a href=\"#1.1.-Number-of-images\" data-toc-modified-id=\"Number-of-images-1.1\"><span class=\"toc-item-num\">1.1&nbsp;&nbsp;<\/span>Number of images<\/a><\/span><\/li>\n        <li><span><a href=\"#1.2.-Sample-images\" data-toc-modified-id=\"Sample-images-1.2\"><span class=\"toc-item-num\">1.2&nbsp;&nbsp;<\/span>Sample images<\/a><\/span><\/li>\n            <\/ul><\/li>\n        <li><span><a href=\"#2.-Training-data\" data-toc-modified-id=\"Training-data-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Training data<\/a><\/span>\n            <ul class=\"toc-item\">\n                <li><span><a href=\"#2.1.-landmark_id\" data-toc-modified-id=\"landmark_id-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;<\/span>landmark_id<\/a><\/span><\/li>\n                <li><span><a href=\"#2.2.-Add-image-path-to-train.csv\" data-toc-modified-id=\"Add-image-path-to-train.csv-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;<\/span>Add image path to train.csv<\/a><\/span><\/li>\n                <li><span><a href=\"#2.3.-Display-images-per-landmark_id\" data-toc-modified-id=\"Display-images-per-landmark_id-2.3\"><span class=\"toc-item-num\">2.3&nbsp;&nbsp;<\/span>Display images per landmark_id<\/a><\/span><\/li>\n            <\/ul><\/li>\n    <\/ul>\n<\/div>","fdeb0978":"### 1.2. Sample images"}}