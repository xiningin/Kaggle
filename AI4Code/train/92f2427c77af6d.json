{"cell_type":{"6a3b1415":"code","b97a8a38":"code","57a9f5d1":"code","7592ed67":"code","6a6d31ca":"code","da909d7f":"code","7bc70eca":"code","3cb242e6":"code","ab825925":"code","864acfb3":"code","f9b2b29c":"code","41ab5faf":"code","1abbf164":"code","3c4635be":"code","48bbf624":"code","c4485efd":"code","ca39dc42":"code","e82faf84":"code","c27e5489":"code","8ae13cae":"code","a0a3e3d8":"code","21af65f5":"code","543b058d":"code","df4c9369":"code","fbd8d80e":"code","1cb9d884":"code","a1ef4537":"code","8eec3ebb":"code","48e04b98":"code","d4565564":"code","a3ae85e5":"code","5e59faae":"code","c55a99b9":"code","42aa85e3":"code","42580dbe":"code","bcfda740":"code","5ce258ae":"code","5fbcaec5":"code","6384707b":"code","34a04854":"code","51b2afc3":"code","8a7b19f4":"code","c628911c":"code","027ba5b4":"code","164c7893":"code","b1dd1987":"code","c121e531":"code","b8c608df":"code","e4870738":"code","523efda5":"code","81cca01b":"code","5717cfb1":"code","14c648ca":"code","dcfafe15":"code","9547314a":"code","7d5e071a":"code","db63fb04":"code","e14575af":"code","15c36617":"code","ec8a5c7e":"code","2fe8648f":"code","3ecf8f9e":"code","3f378217":"markdown","23aae65a":"markdown","bb5b4e99":"markdown","ea82e005":"markdown","3be7e605":"markdown","91417bcb":"markdown","88cca0bc":"markdown","646c6e81":"markdown","9a76a8b0":"markdown","18a1772c":"markdown","29c3841d":"markdown","79dc2cdb":"markdown","917507bc":"markdown","5a75902c":"markdown","8a5aa891":"markdown","8cd46ddb":"markdown","2d951035":"markdown","f90a4a09":"markdown","2ed6080c":"markdown","ca6a411b":"markdown","91fa4c10":"markdown","d04b51b0":"markdown","74457ee7":"markdown","9fb864ef":"markdown","a1ef6615":"markdown","ae84eb5e":"markdown","c84b78e0":"markdown","61ccba1c":"markdown","9a9faeff":"markdown","5ebbc2a5":"markdown","6c8393e2":"markdown","f2565c5e":"markdown","408b81fc":"markdown","5c9a7494":"markdown","27722529":"markdown","145bf6aa":"markdown","649731f3":"markdown","64d5ff3f":"markdown","6078679f":"markdown","3d3a8bb8":"markdown","2a6e56ce":"markdown","fff3beb9":"markdown","0de6e254":"markdown","5317be09":"markdown"},"source":{"6a3b1415":"# Data Analysis & Data wrangling\nimport numpy as np\nimport pandas as pd\nimport missingno as mn\nfrom random import sample\nfrom numpy.random import uniform\nfrom math import isnan\n\n# Static Visualization\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nimport matplotlib.cm as cm\n%matplotlib inline\n\n# Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.tools import FigureFactory as FF\nfrom plotly import tools\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\nfrom plotly.offline import init_notebook_mode, iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\nfrom IPython.display import display, HTML\ninit_notebook_mode(connected=True)\n\n# ML Libraries \n# SKLearn\nimport sklearn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.neighbors import NearestNeighbors\nfrom sklearn.metrics import silhouette_samples, silhouette_score\n\n# SciPy\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","b97a8a38":"# Ignoring warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Setting up the view options\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\npd.set_option('display.expand_frame_repr', False)","57a9f5d1":"# Reading the dataset\ncountry = pd.read_csv('..\/input\/help-international\/Country-data.csv')\n\ncountry.head(10)","7592ed67":"# Checking the shape of the dataframe\ncountry.shape","6a6d31ca":"# Inspecting the distribution of numerical values\ncountry.describe()","da909d7f":"# Checking for duplicates rows of data\ncountry_duplicate = country.copy()\ncountry_duplicate.drop_duplicates(subset=None, inplace=True)\ncountry_duplicate.shape\n\n# Null Value Visualization\nmn.matrix(country)\n\n# Checking Column wise null values\ncountry.isnull().sum()\n\n# Checking row wise null values\n(country.isnull().sum(axis=1) * 100 \/ len(country)).value_counts(ascending=False)","7bc70eca":"# Function for visualizing the distribution of numerical columns\ndef uni(df,col,v,hue =None):\n\n    sns.set(style=\"darkgrid\")\n    \n    if v == 0:\n        fig, ax=plt.subplots(nrows =1,ncols=3,figsize=(20,8))\n        ax[0].set_title(\"Distribution Plot\")\n        sns.distplot(df[col],ax=ax[0], color=\"#4FAAA7\")\n        plt.yscale('log')\n        ax[1].set_title(\"Violin Plot\")\n        sns.violinplot(data =df, x=col,ax=ax[1], inner=\"quartile\", color=\"#9DE4AC\")\n        plt.yscale('log')\n        ax[2].set_title(\"Box Plot\")\n        sns.boxplot(data =df, x=col,ax=ax[2],orient='v', color=\"#CBFC53\")\n        plt.yscale('log')\n    \n    if v == 1:\n        temp = pd.Series(data = hue)\n        fig, ax = plt.subplots()\n        width = len(df[col].unique()) + 6 + 4*len(temp.unique())\n        fig.set_size_inches(width , 7)\n        ax = sns.countplot(data = df, x= col, color=\"#4CB391\", order=df[col].value_counts().index,hue = hue) \n        if len(temp.unique()) > 0:\n            for p in ax.patches:\n                ax.annotate('{:1.1f}%'.format((p.get_height()*100)\/float(len(loan))), (p.get_x()+0.05, p.get_height()+20))  \n        else:\n            for p in ax.patches:\n                ax.annotate(p.get_height(), (p.get_x()+0.32, p.get_height()+20)) \n        del temp\n    else:\n        exit\n        \n    plt.show()\n    \n\n# distribution of 'child-mort' column\nuni(df=country,col='child_mort',v=0)","3cb242e6":"# distribution of 'health' column\n\nuni(df=country,col='health',v=0)","ab825925":"# distribution of 'income' column\n\nuni(df=country,col='income',v=0)","864acfb3":"# distribution of 'inflation' column\n\nuni(df=country,col='inflation',v=0)","f9b2b29c":"# distribution of 'life_expec' column\nuni(df=country,col='life_expec',v=0)","41ab5faf":"# distribution of 'total_fert' column\n\nuni(df=country,col='total_fer',v=0)","1abbf164":"# distribution of 'gdpp' column\n\nuni(df=country,col='gdpp',v=0)","3c4635be":"# CHILD MORTALITY\ntemp = country[['country','child_mort']]\n# 20 largest child_mort values   \ntemps = temp.nlargest(20, columns=['child_mort'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['child_mort'].values,\n    marker_color=colors \n)])\nfig.update_layout(title_text='20 Countries with the HIGHEST Child Mortality rate')\nfig.show()","48bbf624":"# Plotting World Map\ndf_fed = country.groupby('country')['child_mort'].sum().reset_index()\n\nfig = px.choropleth(df_fed, locations=\"country\",\n                    color=\"child_mort\",\n                    locationmode = 'country names',\n                    hover_name=\"country\", \n                    color_continuous_scale=\"Reds\",\n                    title = 'Country wise Child Mortality Rate')\nfig.show()","c4485efd":"# GDP\ntemp = country[['country','gdpp']]\n    \n# smallest 20 values\ntemps = temp.nsmallest(20, columns=['gdpp'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['gdpp'].values,\n    marker_color=colors\n)])\nfig.update_layout(title_text='20 Countries with the LOWEST GDP')\nfig.show()","ca39dc42":"#exports\ntemp = country[['country','exports']]\n    \n\ntemps = temp.nsmallest(20, columns=['exports'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['exports'].values,\n    marker_color=colors \n)])\nfig.update_layout(title_text='20 Countries with the LOWEST export')\nfig.show()","e82faf84":"#health\ntemp = country[['country','health']]\n    \n\ntemps = temp.nsmallest(20, columns=['health'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['health'].values,\n    marker_color=colors\n)])\nfig.update_layout(title_text='20 Countries which spends the LEAST amount on Healthcare')\nfig.show()","c27e5489":"# Imports\ntemp = country[['country','imports']]\n    \n\ntemps = temp.nsmallest(20, columns=['imports'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['imports'].values,\n    marker_color=colors \n)])\nfig.update_layout(title_text='20 Countries with the LOWEST import')\nfig.show()","8ae13cae":"temp = country[['country','income']]\n    \n\ntemps = temp.nsmallest(20, columns=['income'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['income'].values,\n    marker_color=colors # marker color can be a single color value or an iterable\n)])\nfig.update_layout(title_text='20 Countries with the LOWEST income')\nfig.show()","a0a3e3d8":"# inflation\ntemp = country[['country','inflation']]\n    \n\ntemps = temp.nlargest(20, columns=['inflation'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['inflation'].values,\n    marker_color=colors \n)])\nfig.update_layout(title_text='20 Countries with the HIGHEST inflation')\nfig.show()","21af65f5":"temp = country[['country','life_expec']]\n    \n\ntemps = temp.nsmallest(20, columns=['life_expec'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['life_expec'].values,\n    marker_color=colors # marker color can be a single color value or an iterable\n)])\nfig.update_layout(title_text='20 Countries with the LOWEST Life Expectancy')\nfig.show()","543b058d":"temp = country[['country','total_fer']]\n    \n\ntemps = temp.nlargest(20, columns=['total_fer'])\ntemps.reset_index(drop=True, inplace=True)\n\ncolors = ['#FE7176'] * 20\ncolors[0] = 'crimson'\ncolors[1] = 'crimson'\ncolors[2] = 'crimson'\ncolors[10] = '#FF956A'\ncolors[11] = '#FF956A'\ncolors[12] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[13] = '#FF956A'\ncolors[14] = '#FF956A'\ncolors[15] = '#FF956A'\ncolors[16] = '#FF956A'\ncolors[17] = '#FF956A'\ncolors[18] = '#FF956A'\ncolors[19] = '#84D2C3'\n\nfig = go.Figure(data=[go.Bar(\n    x=temps['country'].values,\n    y=temps['total_fer'].values,\n    marker_color=colors \n)])\nfig.update_layout(title_text='20 Countries with the HIGHEST fertility')\nfig.show()","df4c9369":"sns.set_context(\"notebook\", font_scale=1, rc={\"lines.linewidth\": 2.5})","fbd8d80e":"# plotting a pair plot\nfig = FF.create_scatterplotmatrix(country.iloc[:,1:10], diag='box', size=2, height=1100, width=1100)\niplot(fig)","1cb9d884":"# Plotting a correlation matrix\nplt.figure(figsize = (17, 13))\nsns.heatmap(country.corr(), annot = True, cmap=\"Wistia\")\nplt.savefig('Correlation')\nplt.show()","a1ef4537":"# Checking for outliers\nfeatures = country.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=country[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='#3AD44D', \n                      opacity=0.6,\n                      x0=col\n                     ),row=i, col=j)\nfig.update_layout(height=800, width=800, title_text=\"Distribution of Numerical Columns\")\nfig.update_traces(showlegend=False)\n\nfig.show()        ","8eec3ebb":"#Capping Values\nugdpp = country['gdpp'].quantile(0.99)\nuincome = country['income'].quantile(0.99)\nuhealth = country['health'].quantile(0.99)\nuimport = country['imports'].quantile(0.99)\nuexport = country['exports'].quantile(0.99)\nuinflation = country['inflation'].quantile(0.99)\n\nprint('Total number of rows getting capped for dgpp : ', len(country[country['gdpp']>ugdpp]))\nprint('Total number of rows getting capped for income : ', len(country[country['income']>uincome]))\nprint('Total number of rows getting capped for health : ', len(country[country['health']>uhealth]))\nprint('Total number of rows getting capped for imports : ', len(country[country['imports']>uimport]))\nprint('Total number of rows getting capped for exports : ', len(country[country['exports']>uexport]))\nprint('Total number of rows getting capped for inflation : ', len(country[country['inflation']>uinflation]))\n\n\n# capping the gdpp and income values\ncountry['gdpp'][country['gdpp']>ugdpp] = ugdpp\ncountry['income'][country['income']>uincome] = uincome\ncountry['health'][country['health']>uhealth] = uhealth\ncountry['imports'][country['imports']>uimport] = uimport\ncountry['exports'][country['exports']>uexport] = uexport\ncountry['inflation'][country['inflation']>uinflation]= uinflation","48e04b98":"# Checking for outliers after capping\nfeatures = country.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=country[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='#FEFD00', \n                      opacity=0.6,\n                      x0=col\n                     ),row=i, col=j)\nfig.update_layout(height=800, width=800, title_text=\"Distribution of Numerical Columns\")\nfig.update_traces(showlegend=False)\n\nfig.show()","d4565564":"# Checking the distribution after capping\nplt.figure(figsize=(15, 15))\nfeatures = country.columns[1:]\nfor i in enumerate(features):\n    ax = plt.subplot(3, 3, i[0]+1)\n    sns.distplot(country[i[1]],color = '#3AD44D')\n    plt.xticks(rotation=20)","a3ae85e5":"# creating a dataframe with only numerical columns\ncountry_num = country.drop(['country'], axis=1)\nfeatures = country_num.columns\ncountry_num.head(2)","5e59faae":"scaler = StandardScaler()\n\n# fit_transform\ncountry_scaled = scaler.fit_transform(country_num)\ncountry_scaled","c55a99b9":"#Checking the scaled data\ncountry_scaled = pd.DataFrame(country_scaled)\ncountry_scaled.columns = features\ncountry_scaled.head()","42aa85e3":"def hopkins(X):\n    d = X.shape[1]\n    #d = len(vars) # columns\n    n = len(X) # rows\n    m = int(0.1 * n) \n    nbrs = NearestNeighbors(n_neighbors=1).fit(X.values)\n \n    rand_X = sample(range(0, n, 1), m)\n \n    ujd = []\n    wjd = []\n    for j in range(0, m):\n        u_dist, _ = nbrs.kneighbors(uniform(np.amin(X,axis=0),np.amax(X,axis=0),d).reshape(1, -1), 2, return_distance=True)\n        ujd.append(u_dist[0][1])\n        w_dist, _ = nbrs.kneighbors(X.iloc[rand_X[j]].values.reshape(1, -1), 2, return_distance=True)\n        wjd.append(w_dist[0][1])\n \n    H = sum(ujd) \/ (sum(ujd) + sum(wjd))\n    if isnan(H):\n        print(ujd, wjd)\n        H = 0\n \n    return H","42580dbe":"# Hopkins Score for Scaled Features\nhopkins(country_scaled)","bcfda740":"# Hopkins Score for Unscaled Features\nhopkins(country_num)","5ce258ae":"# elbow-curve\/SSD\nssd = []\nrange_n_clusters = [2, 3, 4, 5, 6, 7, 8]\nfor num_clusters in range_n_clusters:\n    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)\n    kmeans.fit(country_scaled)\n    \n    ssd.append(kmeans.inertia_)\n    \n# plot the SSDs for each n_clusters\nssddf = pd.DataFrame(ssd)\nssddf.columns = ['SSD']\nfig = go.Figure(data=go.Scatter(x=range_n_clusters, y=ssddf['SSD']))\nfig.update_layout(height=500, width=800, title_text=\"SSD\/Elbow Curve\", shapes=[\n    dict(\n      type= 'line',\n      yref= 'paper', y0= 0, y1= 1,\n      xref= 'x', x0= 4, x1= 4\n    )\n] )\nfig.show()","5fbcaec5":"sse_ = []\nfor k in range(2, 15):\n    kmeans = KMeans(n_clusters=k).fit(country_scaled)\n    sse_.append([k, silhouette_score(country_scaled, kmeans.labels_)])\n\n\n\nssedf = pd.DataFrame(sse_)\nfig = go.Figure(data=go.Scatter(x=pd.DataFrame(sse_)[0], y=pd.DataFrame(sse_)[1]))\nfig.update_layout(height=500, width=800, title_text=\"Silhouette Analysis\", shapes=[\n    dict(\n      type= 'line',\n      yref= 'paper', y0= 0, y1= 1,\n      xref= 'x', x0= 4, x1= 4\n    )\n])\nfig.show()","6384707b":"kmeans_4 = KMeans(n_clusters=4, max_iter=500, init='k-means++', n_init=10, random_state= 350)\nkmeans_4.fit(country_scaled)\nkmeans_4.labels_","34a04854":"country['KCluster_4_Label'] = kmeans_4.labels_\ncountry.head()","51b2afc3":"country['KCluster_4_Label'].value_counts()","8a7b19f4":"im = country['KCluster_4_Label'].value_counts()\ndf = pd.DataFrame({'labels': ['0', '1', '3', '2'],'values': im.values})\ndf.iplot(kind='pie',labels='labels',values='values', title='K-Means Clustering - Cluster Size Comparison', hole = 0.5, colors=['#63D7CF','#FD7B80', '#FCBF8A', '#F7EDCD'])","c628911c":"df_fed = country.groupby('country')['KCluster_4_Label'].sum().reset_index()\n\nfig = px.choropleth(df_fed, locations=country['country'],\n                    color='KCluster_4_Label',\n                    locationmode = 'country names',\n                    hover_name=country['country'], \n                    color_continuous_scale=\"picnic_r\",\n                    title = 'Cluster of Countries')\nfig.show()","027ba5b4":"#Checking the spread and density of clusters\nplt.figure(figsize=(18, 8))\nplt.subplot(1, 3, 1)\nsns.swarmplot(x='KCluster_4_Label', y='child_mort', data=country, palette=\"cool\")\nplt.subplot(1, 3, 2)\nsns.swarmplot(x='KCluster_4_Label', y='gdpp', data=country, palette=\"cool\")\nplt.subplot(1, 3, 3)\nsns.swarmplot(x='KCluster_4_Label', y='income', data=country, palette=\"cool\")\n\nplt.show()","164c7893":"df_fed = country.groupby('country')['child_mort', 'income', 'gdpp', 'KCluster_4_Label'].sum().reset_index()\nfig = px.scatter(df_fed, x=\"gdpp\", y=\"child_mort\", color='KCluster_4_Label', hover_data=['country'], color_continuous_scale='sunsetdark', title=\"GDP vs Child Mortality of Clusters\")\nfig.show()","b1dd1987":"df_fed = country.groupby('country')['child_mort', 'income', 'gdpp', 'KCluster_4_Label'].sum().reset_index()\nfig = px.scatter(df_fed, x=\"income\", y=\"child_mort\", color='KCluster_4_Label', hover_data=['country'],title=\"Income vs Child Mortality of Clusters\", color_continuous_scale='sunsetdark')\nfig.show()","c121e531":"df_fed = country.groupby('country')['child_mort', 'income', 'gdpp', 'KCluster_4_Label'].sum().reset_index()\nfig = px.scatter(df_fed, x=\"gdpp\", y=\"income\", color='KCluster_4_Label', size='child_mort', hover_data=['country'],title=\"GDP vs Income of Clusters sized on Child Mortality Rate\", color_continuous_scale='sunsetdark')\nfig.show()","b8c608df":"df_fed = country.groupby('country')['child_mort', 'income', 'gdpp', 'KCluster_4_Label'].sum().reset_index()\nfig = px.scatter_3d(df_fed, x=\"gdpp\", y=\"income\", color='KCluster_4_Label', z='child_mort', hover_data=['country'],title=\"GDP vs Income of Clusters sized on Child Mortality Rate\", color_continuous_scale='rainbow', opacity=0.6)\nfig.update_layout(margin=dict(l=0, r=0, b=0, t=0))\nfig.show()","e4870738":"# Checking the countries under Cluster 1\ncountry[country['KCluster_4_Label']==1]","523efda5":"# Group by analysis\nk_analysis =  country.groupby(['KCluster_4_Label']).mean()\nk_analysis","81cca01b":"# count of countries in each cluster\nk_analysis['Count']=country.groupby('KCluster_4_Label')['country'].count()\nk_analysis","5717cfb1":"# Proportion out of 1\nk_analysis['Proportion']=round(k_analysis['Count']\/k_analysis['Count'].sum(),2)\nk_analysis","14c648ca":"features =k_analysis.columns[:-2]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Bar(x=k_analysis.index,\n                   y=k_analysis[col],\n                   marker={'color': k_analysis.index,\n                   'colorscale': 'oryel'},\n                   text=round(k_analysis[col],2),\n                   textposition = \"outside\",\n                   ),row=i, col=j)\n        fig.update_yaxes(title_text=col, row=i, col=j)\n\nfig.update_layout(height=1500, width=1200, title_text=\"K-Means Cluster - Feature Mean Values\")\nfig.update_traces(showlegend=False)\n\nfig.show()","dcfafe15":"cluster_km=country[country['KCluster_4_Label']==1]\ncluster_km.sort_values(['gdpp','income','child_mort','health','inflation','life_expec','total_fer','imports','exports'], \n                      ascending=[True,True,False,True,False,True,False,False,True]).head(5)","9547314a":"aid = cluster_km.sort_values(['gdpp','income','child_mort','health','inflation','life_expec','total_fer','imports','exports'], \n                      ascending=[True,True,False,True,False,True,False,False,True]).head(5)","7d5e071a":"aid","db63fb04":"features = aid.columns[1:]\nfig = make_subplots(rows=3, cols=3)\ncount = 0\n\nfor i in range(1,4):\n    for j in range (1,4):\n        col = features[count]\n        count = count+1\n        fig.add_trace(\n            go.Violin(y=aid[col],\n                      box_visible=True, \n                      line_color='black',\n                       meanline_visible=True,\n                      fillcolor='#EA4335', \n                      opacity=0.6,\n                      x0=col\n                     ),row=i, col=j)\n        #fig.update_xaxes(title_text=col, row=i, col=j)\nfig.update_layout(height=1000, width=1000, title_text=\"Data Distribution\")\nfig.update_traces(showlegend=False)\n\nfig.show()","e14575af":"plt.figure(figsize=(18, 8))\nplt.subplot(1, 3, 1)\nsns.scatterplot(x='gdpp', y='child_mort', hue='country',\n                data=aid, legend='full', palette=\"prism\", s=300)\nplt.subplot(1, 3, 2)\nsns.scatterplot(x='gdpp', y='income', hue='country',\n                data=aid, legend='full', palette=\"prism\", s=300)\nplt.subplot(1, 3, 3)\nsns.scatterplot(x='income', y='child_mort', hue='country',\n                data=aid, legend='full', palette=\"prism\", s=300)\nplt.show()","15c36617":"df_fed = aid.groupby('country')['child_mort', 'income', 'gdpp'].sum().reset_index()\nfig = px.scatter_3d(aid, x=\"gdpp\", y=\"income\", color='country', z='child_mort', hover_data=['country'],title=\"GDP vs Income of Clusters sized on Child Mortality Rate\", color_discrete_sequence=[\"crimson\", \"#2AD7E7\", \"#FA6B16\", \"goldenrod\", \"#8E0067\"], opacity=0.6)\nfig.update_layout(margin=dict(l=0, r=0, b=0, t=0))\nfig.show()","ec8a5c7e":"print (\"GDP Statistics of Selected Countries : \")\nprint (\"Max GDP : \", max(aid.gdpp))\nprint (\"Min GDP : \", min(aid.gdpp))\nprint (\"Avg GDP : \", aid.gdpp.mean())\nprint('-'*50)\nprint (\"Income Statistics of Selected Countries : \")\nprint (\"Max Income : \", max(aid.income))\nprint (\"Min Income : \", min(aid.income))\nprint (\"Avg Income : \", aid.income.mean())\nprint('-'*50)\nprint (\"Child Mortality Statistics of Selected Countries : \")\nprint (\"Max Child Mortality : \", max(aid['child_mort']))\nprint (\"Min Child Mortality : \", min(aid['child_mort']))\nprint (\"Avg Child Mortality : \", round(aid['child_mort'].mean(),1))","2fe8648f":"# Ranking of countries\naid.reset_index(drop=True, inplace=True)\naid['Rank']= aid.index+1\naid","3ecf8f9e":"df_fed = aid.groupby('country')['Rank'].sum().reset_index()\n\nfig = px.choropleth(df_fed, locations=aid['country'],\n                    color='Rank',\n                    locationmode = 'country names',\n                    hover_name=aid['country'], \n                    color_continuous_scale=\"ylorrd_r\",\n                    title = 'Countries that require Aid')\nfig.show()","3f378217":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Child Mortality values have some outliers.\n    <\/span>    \n<\/div>","23aae65a":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        GDP values have several outliers.\n    <\/span>    \n<\/div>","bb5b4e99":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>MODEL INTERPRETATION<h2>","ea82e005":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Life expectancy values have only outliers but below the first quartile.\n    <\/span>    \n<\/div>","3be7e605":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>DATA CLEANING<h2>","91417bcb":"<h2 style='text-align:center;font-size:40px;background-color:#5F4B8B;border:10px;color:white'>Clustering, Outlier Analysis and EDA<h2>\n<h1 style='text-align:center;font-size:20px;background-color:#5F4B8B;border:10px;color:white'>This notebook is my attempt to perform Clustering and EDA on dataset provided by HELP International to assist them in making an informed choice regarding their budget expenditure. The core aim of this notebook will be to come up with names of countries which deserve to heleped the most.<h1>","88cca0bc":"<div class=\"alert alert-block alert-danger\">\n    <span style='font-family:Georgia'>\n        <b>Warning: <\/b><br>\n        Removal of outliers will change the ranking of few countries with respect to requirement of Financial Aid. If treat the outliers by Deletion based on IQR values, this will remove few countries from the list that would have really deserved the Financial Aid. If we do not treat the Outliers then it can impact the clustering model, as the presence of Outlier can change the CENTROID (K-Means) of the cluster. <br><br>\n    <\/span>    \n<\/div>\n\n<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Approach: <\/b><br>\n        Instead of deleting the outliers, we will approach to cap only the necessary features ( upper or lower based on feature importance). The capping will be done based on 1% for lower and 99% for the upper values. <br><br>\n    <\/span>    \n<\/div>","646c6e81":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n    We can see from the 3D Scatter plot that cluster 1 has the highest child mortality rate as well as lowest income and GDP as compared to other clusters\n    <\/span>    \n<\/div>","9a76a8b0":"<h2 style='text-align:center;font-size:30px;background-color:#FE7176;border:20px;color:white'>OBJECTIVES<h2>\n    \n#### The main task is to cluster the countries on the basis of socio-economic factors and provide the NGO with a list of countries in need of help.\n- Data inspection and EDA tasks suitable for this dataset - data cleaning, univariate analysis, bivariate analysis etc.\n- Outlier Analysis: Performing the Outlier Analysis on the dataset.\n- Create model using both K-means and Hierarchical clustering(both single and complete linkage) on this dataset to create the clusters.\n- Analyse the clusters and identify the ones which are in dire need of aid. \n- Perform visualisations on the clusters that have been formed using the features selected for building the clustering model.","18a1772c":"<h2 style='text-align:center;font-size:40px;background-color:crimson;border:20px;color:white'>K-MEANS CLUSTERING<h2>\n    \n   ##### K-means clustering is one of the simplest and popular unsupervised machine learning algorithms.\n\nThe algorithm works as follows:\n\nFirst we initialize k points, called means, randomly. We categorize each item to its closest mean and we update the mean\u2019s coordinates, which are the averages of the items categorized in that mean so far. We repeat the process for a given number of iterations and at the end, we have our clusters.","29c3841d":"<h2 style='text-align:center;font-size:40px;background-color:#CBFC53;border:20px;color:black'>CONCLUSION<h2>\n    \n<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Outcome: <\/b><br>\n        The following 5 countries require NGO Aid . These fall under Underdeveloped Country list and are performing worst among the Under Developed Countries : \n        <ul>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li>\n        <\/ul>\n    <\/span>   \n    <br>\n    <br>\n    <span style='font-family:Georgia'>\n        <b>Reasons for Aid: <\/b><br>\n        <ul>\n            <li>High child mortality<\/li>\n            <li>Low Income <\/li>\n            <li>Low GDP<\/li>\n            <li>Low health spent <\/li>\n            <li>High Inflation <\/li>\n            <li>Lower life expectency<\/li>\n            <li>High fertility rate (i.e more number of children per family\/woman)<\/li>\n        <\/ul>\n    <\/span>\n    \n<\/div>","79dc2cdb":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>FINAL ANALYSIS<h2>","917507bc":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        We can see that majority of African countries are in Cluster-1.\n    <\/span>    \n<\/div>","5a75902c":"<h2 style='text-align:center;font-size:40px;background-color:#5F4B8B;border:10px;color:white'>THANK YOU! <h2>","8a5aa891":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>IMPORTING LIBRARIES<h2>","8cd46ddb":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>UNIVARIATE ANALYSIS<h2>","2d951035":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Result: <\/b><br>\n        Our Hopkins Score is above 0.7 and closer to 1 which means our data has a high tendency to cluster.<br><br>\n    <\/span>    \n<\/div>","f90a4a09":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Health values have only a outliers.\n    <\/span>    \n<\/div>","2ed6080c":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Income values have several outliers.\n    <\/span>    \n<\/div>","ca6a411b":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Result: <\/b><br>\n        - There are no missing or null values in the dataframe.<br>\n        - There are no duplicate values in the dataset.\n    <\/span>    \n<\/div>","91fa4c10":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Total fertility values have only one outlier.\n    <\/span>    \n<\/div>","d04b51b0":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n    From the scatter plot we now know that we have to focus on cluster 1.\n    <\/span>    \n<\/div>","74457ee7":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>SCALING<h2>","9fb864ef":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>SILHOUETTE ANSLYSIS<h2>\n\n### Equation:\n<span style=\"font-size:6mm\" >\n    <span style ='font-family:Georgia'>\n        <font color = blue > Silhouette score =\n            <span style=\"display: inline-block;vertical-align: middle;\">\n                <div style=\"text-align: center;border-bottom: 1px solid black;\">p-q<\/div>\n                <div style=\"text-align: center;\">max(p,q)<\/div> \n            <\/span>\n        <\/font>\n    <\/span>\n<\/span>\n   \n    \n    \n    \n<p>\n    <span style='font-family:Georgia'>\n        <b>p<\/b>  is the mean distance to the points in the nearest cluster that the data point is not a part of <br>\n        <b>q<\/b>  is the mean intra-cluster distance to all the points in its own cluster.\n    <\/span>\n<\/p>\n\n<span style='font-family:Georgia'>\n    <ul>\n        <li>The value of the silhouette score range lies between -1 to 1.<\/li>\n        <li>A score closer to 1 indicates that the data point is very similar to other data points in the cluster<\/li>\n        <li>A score closer to -1 indicates that the data point is not similar to the data points in its cluster<\/li>\n    <\/ul>\n<\/span>\n    \n","a1ef6615":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>CLUSTER ANALYSIS<h2>","ae84eb5e":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Based on the graphs above we should consider cluster 1 countries for NGO aid, because : \n        <ul>\n            <li>It has highest child mortality<\/li>\n            <li>Lowest income<\/li>\n            <li>Lowest GDP<\/li>\n            <li>Lowest health expenditure<\/li>\n            <li>The highest inflation<\/li>\n            <li>Compartively low life expectancy<\/li>\n            <li>Highest total fertility<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","c84b78e0":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Result: <\/b><br>\n         From the Silhouette analysis we can see that 4 clusters are optimal for our model. \n    <\/span>    \n<\/div>","61ccba1c":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>MODEL BUILDING<h2>","9a9faeff":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n        Infation values have some outliers.\n    <\/span>    \n<\/div>","5ebbc2a5":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>MULTIVARIATE ANALYSIS<h2>","6c8393e2":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>OUTLIER TREATMENT<h2>","f2565c5e":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Outcome: <\/b><br>\n        Based on above data, the following 5 countries requires NGO Aid based on K-Means clustering : \n        <ul>\n            <li>Burundi<\/li>\n            <li>Liberia<\/li>\n            <li>Congo<\/li>\n            <li>Niger<\/li>\n            <li>Sierra Leone<\/li>\n        <\/ul>\n    <\/span>    \n<\/div>","408b81fc":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>MAP<h2>","5c9a7494":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>SSD (ELBOW CURVE)<h2>\n \n##### For the Optimal Number of Clusters we use Elbow Curve.\n    \nA fundamental step for any unsupervised algorithm is to determine the optimal number of clusters into which the data may be clustered. The Elbow Method is one of the most popular methods to determine this optimal value of k.","27722529":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>BIVARIATE AND GEOGRAPHICAL ANALYSIS<h2>","145bf6aa":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>HOPKINS STATISTICS<h2>\n\n  ##### To check cluster tendency, we use the Hopkins test.\nThe Hopkins statistic (introduced by Brian Hopkins and John Gordon Skellam) is a way of measuring the cluster tendency of a data set.It acts as a statistical hypothesis test where the null hypothesis is that the data is generated by a Poisson point process and are thus uniformly randomly distributed. A value close to 1 tends to indicate the data is highly clustered, random data will tend to result in values around 0.5, and uniformly distributed data will tend to result in values close to 0.\n\n- If the value is between {0.01, ...,0.3}, the data is regularly spaced.\n\n- If the value is around 0.5, it is random.\n\n- If the value is between {0.7, ..., 0.99}, it has a high tendency to cluster.","649731f3":"<h2 style='text-align:center;font-size:30px;background-color:#63D7CF;border:20px;color:white'>DATA GATHERING AND INSPECTION<h2>","64d5ff3f":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <h1><b>Insights: <\/b><br>\n            From the world heatmap we can see that Central and West African countries are extremes in many aspects.<\/h1>\n    <\/span>    \n<\/div>","6078679f":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Result: <\/b><br>\n        We still have some outliers but this will not impact our model.<br><br>\n    <\/span>    \n<\/div>","3d3a8bb8":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insights: <\/b><br>\n        <ul>\n            <li> GDP and Income has high positive correlation (0.9). This means countries where people have high income has high GDP. <\/li>\n            <li> Life Expectency and Child Mortality have high negative correlation (-0.89)<\/li>\n            <li> Total Fertility and Child Mortality has high correlation. <\/li>\n            <li> Number of children per woman\/ fertility is also negatively correlated with life-expectency. <\/li>\n            <li> Exports and Imports have high correlation. <\/li>\n            <li> Income has postivite correlation (0.61) with life expectency and negative correlation (-0.52) with child mortality. This signifies that countries with higher income values can spend more in healhcare which reduced the child mortality and increases average life espectency. <\/li>\n            <li> GDP is negatively correlated with fertility (-0.45) signifying that developed countries prefer less children in a family compared to underdeveloped countries. <\/li>            \n        <\/ul>\n    <\/span>    \n<\/div>","2a6e56ce":"<h2 style='text-align:center;font-size:30px;background-color:#FE7176;border:20px;color:white'>DATA DICTIONARY<h2>\n    \n#### The country.csv contains the economic and health data of all countries \n    \n- **country** : Name of the country\n- **child_mort** : Death of children under 5 years of age per 1000 live births\n- **exports** : Exports of goods and services per capita. Given as %age of the GDP per capita\n- **health** : Total health spending per capita. Given as %age of GDP per capita\n- **imports** : Imports of goods and services per capita. Given as %age of the GDP per capita\n- **income** : Net income per person\n- **inflation** : The measurement of the annual growth rate of the Total GDP\n- **life_expec** : The average number of years a new born child would live if the current mortality patterns are to remain the same\n- **total_fer** : The number of children that would be born to each woman if the current age-fertility rates remain the same\n- **gdpp** : The GDP per capita. Calculated as the Total GDP divided by the total population","fff3beb9":"<div class=\"alert alert-block alert-success\">\n    <span style='font-family:Georgia'>\n        <b>Result: <\/b><br>\n        Looking at the above elbow curve it looks good to proceed with 4 or 5 clusters.<br><br>\n    <\/span>    \n<\/div>","0de6e254":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <b>Insight: <\/b><br>\n    We can see that Cluster 1 has the highest child mortality rate.\n    <\/span>    \n<\/div>","5317be09":"<div class=\"alert alert-block alert-info\">\n    <span style='font-family:Georgia'>\n        <h1>\n            Except for Total Fertility Value and Life Expetancy, all other parameters have some outliers.<\/h1>\n    <\/span>    \n<\/div>"}}