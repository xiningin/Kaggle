{"cell_type":{"147e75bf":"code","62858bb8":"code","b70c48dd":"code","5fb1a2d5":"code","d8fca02c":"code","4941402e":"code","0090d1d4":"code","52c00f27":"code","7922d767":"code","166bc884":"code","3ab94bcb":"code","ff460740":"code","1d87d121":"code","a7e45e52":"code","e1ab6da4":"code","51bb596b":"code","4547bbe4":"code","2a7069fd":"code","8b0033ce":"code","1b6e2900":"code","9b18ffc4":"code","89000029":"code","94847e3a":"code","21585b93":"code","61a4a7b9":"code","1c9a9715":"code","0fe4ce45":"code","5243a1bf":"code","da47e80d":"code","46eb4cfb":"code","ab030541":"code","13f8f37c":"code","9aedb2c7":"code","f6cc67ad":"code","557e4dfa":"code","74b1fe4d":"code","d559c26f":"code","d464a584":"code","aec0adbc":"code","557553ba":"code","95eef656":"code","bd900c13":"code","8d689bb9":"code","05f17bf4":"code","e27b521c":"code","0e0f3ec1":"code","8335f34b":"code","c4eafb1c":"code","daf909b3":"code","c000b130":"code","58717713":"code","aac3a084":"code","673bc24a":"code","614c5e24":"code","e9f18871":"code","6bf98150":"code","27eee5f3":"code","ff92f48a":"code","fdbeeb26":"code","dd8e7f5f":"code","5355f3fe":"code","565b69a5":"code","ca371cb3":"code","6872b0b8":"code","87423b82":"code","1df1b140":"code","2548a772":"markdown","1640b1c1":"markdown","46763bf7":"markdown","b036d5f9":"markdown"},"source":{"147e75bf":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","62858bb8":"df1=pd.read_csv('..\/input\/world-happiness\/2015.csv')","b70c48dd":"df1.head()","5fb1a2d5":"df1.columns=['country','region','happiness_rank','happiness_score','standard_error','economy','family','health',\n            'freedom','trust','generosity','dystopia_residual']","d8fca02c":"df1.head()","4941402e":"df1.tail()","0090d1d4":"df1.isnull().sum()","52c00f27":"df1.info()","7922d767":"df1.describe().T","166bc884":"df1.corr()","3ab94bcb":"df1 = df1.sort_values(by=[\"happiness_score\"], ascending=False)\ndf1['rank']=tuple(zip(df1.happiness_score))\ndf1['rank']=df1.groupby('happiness_score',sort=False)['rank'].apply(lambda x : pd.Series(pd.factorize(x)[0])).values\ndf1.head()","ff460740":"df1.drop([\"rank\"],axis=1,inplace=True)","1d87d121":"df1.reset_index(inplace=True,drop=True)\ndf1.head()","a7e45e52":"df1.nunique()","e1ab6da4":"#World Happiness Score Freedom - 2015\nplt.figure(figsize=(18,5))\nsns.set(style='whitegrid')\nax=sns.barplot(x=df1['region'].value_counts().index,y=df1['region'].value_counts().values,palette=\"Blues_d\")\nplt.legend(loc=8)\nplt.xlabel('region')\nplt.xticks(rotation=75)\nplt.ylabel('Frequency')\nplt.title('Show of region Bar Plot')\nplt.show()","51bb596b":"f,ax=plt.subplots(figsize=(9,10))\nsns.barplot(x=df1['country'].value_counts().values,y=df1['country'].value_counts().index,alpha=0.5,color='red',label='country')\nsns.barplot(x=df1['region'].value_counts().values,y=df1['region'].value_counts().index,color='blue',alpha=0.7,label='region')\nax.legend(loc='upper right',frameon=True)\nax.set(xlabel='country , region',ylabel='Groups',title=\"country vs region \")\nplt.show()","4547bbe4":"df1['region'].unique()\nlen(df1[(df1['region']=='Sub-Saharan Africa')].happiness_score)\nf,ax1=plt.subplots(figsize=(15,10))\nsns.pointplot(x=np.arange(1,41),y=df1[(df1['region']=='Sub-Saharan Africa')].health,color='lime',alpha=0.8)\nsns.pointplot(x=np.arange(1,41),y=df1[(df1['region']=='Sub-Saharan Africa')].economy,color='red',alpha=0.5)\nplt.xlabel('Sub-Saharan Africa index State')\nplt.ylabel('Frequency')\nplt.title('Sub-Saharan Africa health & economy')\nplt.xticks(rotation=90)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.grid()\nplt.show()","2a7069fd":"labels=df1['region'].value_counts().index\ncolors=['blue','red','yellow','green','brown']\nexplode=[0.3,0.3,0.2,0.1,0,0,0,0,0,0]\nvalues=df1['region'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('region According Analysis',color='black',fontsize=10)\nplt.show()","8b0033ce":"plt.figure(figsize=(15,7))\nsns.lmplot(x='happiness_score',y='economy',data=df1)\nplt.xlabel('happiness_score')\nplt.ylabel('economy')\nplt.title('happiness_score vs economy')\nplt.show()","1b6e2900":"plt.figure(figsize=(15,7))\nsns.lmplot(x='happiness_score',y='health',data=df1)\nplt.xlabel('happiness_score')\nplt.ylabel('health')\nplt.title('happiness_score vs health')\nplt.show()","9b18ffc4":"plt.figure(figsize=(15,7))\nsns.lmplot(x='happiness_score',y='trust',data=df1)\nplt.xlabel('happiness_score')\nplt.ylabel('trust')\nplt.title('happiness_score vs trust')\nplt.show()","89000029":"plt.figure(figsize=(15,7))\nsns.lmplot(x='happiness_score',y='freedom',data=df1)\nplt.xlabel('happiness_score')\nplt.ylabel('freedom')\nplt.title('happiness_score vs freedom')\nplt.show()","94847e3a":"plt.figure(figsize=(18,7))\nsns.lmplot(x='economy',y='health',hue='region',data=df1)\nplt.xlabel('happiness_score')\nplt.ylabel('trust')\nplt.title('happiness_score vs trust')\nplt.show()","21585b93":"sns.kdeplot(df1['happiness_score'])\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('happiness_score Kde Plot System Analysis')\nplt.show()","61a4a7b9":"plt.figure(figsize=(18,5))\nsns.kdeplot(df1['health'],shade=True,color='r')\nsns.kdeplot(df1['economy'],shade=True,color='g')\nsns.kdeplot(df1['freedom'],shade=True,color='black')\nsns.kdeplot(df1['family'],shade=True,color='orange')\nsns.kdeplot(df1['generosity'],shade=True,color='yellow')\nsns.kdeplot(df1['dystopia_residual'],shade=True,color='brown')\nsns.kdeplot(df1['trust'],shade=True,color='b')\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('Health, Economy, Freedom, Family, Generosity,Dystopia Residual, Trust Kde Plot System Analysis')\nplt.show()","1c9a9715":"sns.violinplot(df1['happiness_score'])\nplt.xlabel('happiness_score')\nplt.ylabel('Frequency')\nplt.title('Violin happiness_score Show')\nplt.show()","0fe4ce45":"plt.figure(figsize=(18,5))\nsns.violinplot(x=df1['region'],y=df1['economy'])\nplt.xticks(rotation=75)\nplt.show()","5243a1bf":"sns.heatmap(df1.corr())\nplt.show()","da47e80d":"sns.heatmap(df1.corr(),vmin=0,vmax=1)\nplt.show()","46eb4cfb":"plt.figure(figsize=(18,5))\nsns.heatmap(df1.corr(),annot=True,fmt=\".0%\")\nplt.show()","ab030541":"# Compute the correlation matrix\ncorr = df1.corr()\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11, 9))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\nplt.show()","13f8f37c":"sns.heatmap(df1.corr(),cmap='YlGnBu')\nplt.show()","9aedb2c7":"plt.figure(figsize=(18,5))\nsns.set(style='whitegrid')\nsns.boxplot(df1['happiness_score'])\nplt.show()","f6cc67ad":"plt.figure(figsize=(18,5))\nsns.boxplot(x=df1['region'],y=df1['happiness_score'])\nplt.xticks(rotation=75)\nplt.show()","557e4dfa":"plt.figure(figsize=(18,5))\nsns.boxenplot(x=\"region\", y=\"health\",\n              color=\"b\",\n              scale=\"linear\", data=df1)\nplt.xticks(rotation=75)\nplt.show()","74b1fe4d":"plt.figure(figsize=(18,5))\nsns.boxplot(x=df1['region'],y=df1['happiness_score'])\nplt.xticks(rotation=75)\nsns.swarmplot(x=df1['region'],y=df1['happiness_score'],color=\".25\")\nplt.xticks(rotation=75)\nplt.show()","d559c26f":"sns.set(style='whitegrid')\nsns.swarmplot(x=df1['happiness_score'])\nplt.show()","d464a584":"sns.set(style=\"whitegrid\")\n\nsns.swarmplot(y=df1[\"happiness_score\"],color='red')\nsns.swarmplot(y=df1[\"dystopia_residual\"],color='blue')\nsns.swarmplot(y=df1[\"economy\"],color='yellow')\nsns.swarmplot(y=df1[\"trust\"],color='purple')\nsns.swarmplot(y=df1[\"health\"],color='green')\n\nplt.title('happiness_score & dystopia_residual & economy  & trust & health')\nplt.show()","aec0adbc":"sns.swarmplot(x=df1['economy'],y=df1['health'])\nplt.show()","557553ba":"sns.pairplot(df1)\nplt.show()","95eef656":"sns.pairplot(df1,diag_kind='kde')\nplt.show()","bd900c13":"sns.pairplot(df1,kind='reg')\nplt.show()","8d689bb9":"sns.countplot(df1['region'])\nplt.xticks(rotation=75)\nplt.show()","05f17bf4":"sns.stripplot(x=df1['happiness_score'])\nplt.show()","e27b521c":"ax = sns.distplot(df1['economy'], rug=True, hist=False)\nplt.show()","0e0f3ec1":"ax = sns.distplot(df1['health'], vertical=True)\nplt.show()","8335f34b":"ax = sns.distplot(df1['trust'])\nplt.show()","c4eafb1c":"ax = sns.distplot(df1['family'], color=\"y\")\nplt.show()","daf909b3":"plt.figure(figsize=(15,5))\nsns.lineplot(x='happiness_score',y='economy',hue=\"region\",estimator=None,data=df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.show()","c000b130":"df1.groupby('region')[['happiness_score','economy']].mean()","58717713":"f, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.scatterplot(x=\"happiness_score\", y=\"economy\",\n                hue=\"region\", size=\"region\",data=df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.show()","aac3a084":"sns.clustermap(df1.corr(), center=0, cmap=\"vlag\",\n               linewidths=.75, figsize=(13, 13))","673bc24a":"sns.set(style=\"white\")\n# Plot miles per gallon against horsepower with other semantics\nsns.relplot(x=\"economy\",y=\"health\",hue=\"region\",\n            sizes=(40, 400), alpha=.9, palette=\"muted\",\n            height=6, data=df1)\nplt.show()","614c5e24":"f, ax = plt.subplots(figsize=(6.5, 6.5))\nsns.despine(f, left=True, bottom=True)\nsns.scatterplot(x=\"economy\", y=\"trust\",\n                hue=\"region\", size=\"region\",data=df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.show()","e9f18871":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:30], y =df1.happiness_score[:30], hue = df1.region[:30], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","6bf98150":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.economy[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","27eee5f3":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.family[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","ff92f48a":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.health[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","fdbeeb26":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.freedom[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","dd8e7f5f":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.trust[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","5355f3fe":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.generosity[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","565b69a5":"plt.figure(figsize=(16,5))\nsns.barplot(x = df1.country[:20], y =df1.dystopia_residual[:20], hue = df1.region[:20], data = df1)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)\nplt.xticks(rotation=45)\nplt.show()","ca371cb3":"country_list1 = list(df1['country'])\neconomy_2015 = []\nhealth_2015 =[]\nfreedom_2015=[]\nfamily_2015=[]\n\n\nfor i in country_list1:\n    x = df1[df1['country']==i]\n    economy_2015.append(sum(x.economy)\/len(x))\n    health_2015.append(sum(x.health) \/ len(x))\n    freedom_2015.append(sum(x.freedom) \/ len(x))\n    family_2015.append(sum(x.family) \/ len(x))\n\n\n# visualization\n\nf,ax = plt.subplots(figsize = (15,45))\nsns.barplot(x=economy_2015,y=country_list1,color='green',alpha = 0.5,label='economy_2015' )\nsns.barplot(x=health_2015,y=country_list1,color='blue',alpha = 0.7,label='health_2015')\nsns.barplot(x=freedom_2015,y=country_list1,color='cyan',alpha = 0.6,label='freedom_2015')\nsns.barplot(x=family_2015,y=country_list1,color='yellow',alpha = 0.6,label='family_2015')\n\n\nax.legend(loc='lower right',frameon = True)\nax.set(xlabel='Percentage of Economy, Health, Freedom and Family 2015', ylabel='country',\n       title = \"Percentage of Country's According to Economy, Health, Freedom and Family 2015\")\nplt.show()","6872b0b8":"from wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df1.country[:20])\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"black\").generate(text)\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","87423b82":"df1.head(10)","1df1b140":"# import the library\nimport folium\n \n# Make a data frame with dots to show on the map\ndata = pd.DataFrame({\n   'lat':[46.20,64.12,55.67,59.91,43.76,60.19,52.37,58.29,-36.84,-35.47],\n   'lon':[6.143,-21.82,12.56,10.75,79.41,24.94,4.89,12.96,174.7,149.0],\n   'name':['Switzerland', 'Iceland', 'Denmark', 'Norway', 'Canada', 'Finland', 'Netherlands', 'Sweden',\"New Zealand\",\"Australia\"],\n   \n})\ndata\n \n \n# Make an empty map\nm = folium.Map(location=[20, 0], tiles=\"Mapbox Bright\", zoom_start=2)\n\n# I can add marker one by one on the map\nfor i in range(0,len(data)):\n    folium.Marker([data.iloc[i]['lon'], data.iloc[i]['lat']], popup=data.iloc[i]['name']).add_to(m)\n\n# Save it as html\n#m.save('312_markers_on_folium_map1.html')\n","2548a772":"<font size=\"5\">Percentage of Country's According to Economy, Health, Freedom and Family 2015<\/font>\n","1640b1c1":"References:\n\nhttps:\/\/seaborn.pydata.org\/\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/plotly-tutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/data-sciencetutorial-for-beginners\n\nhttps:\/\/www.kaggle.com\/kanncaa1\/time-series-prediction-tutorial-with-eda\n\nhttps:\/\/www.kaggle.com\/michaelkang\/testing-out-basemap\n\n","46763bf7":"<font size=\"5\">Analysis of World Happiness Report 2015<\/font>","b036d5f9":"\n<font size=\"5\">World Happiness Report 2015<\/font>"}}