{"cell_type":{"4759e086":"code","e48e8638":"code","f33f7dfb":"code","dc3e112c":"code","97cf9bad":"code","935c2cde":"code","d63a6367":"code","e8381677":"code","a805e0cf":"code","ebd1ed3a":"code","a03d6e1b":"code","cffdc625":"code","0a7c112a":"code","d948d92f":"code","d598e4cb":"code","9b168ea2":"code","e36e6253":"code","aaa81719":"code","41cc7a00":"code","dc7aee3d":"code","3ccc85b5":"code","f6e49f75":"code","719003aa":"code","6fa32993":"code","7f686de6":"code","c1fff5cb":"code","f93a64e4":"code","36acbb0f":"code","6174ec71":"code","350de625":"code","2a148d19":"code","d629ad87":"code","6b4d7c55":"code","0f2c2130":"code","38c66fed":"code","bb20bb5c":"code","3bd32840":"code","b8c54ff0":"code","c9941359":"code","842ed7f8":"code","e5dfc002":"code","24270d0a":"code","3c10efc9":"code","f4cbc62b":"code","6e8bfc26":"code","81a75cf4":"code","78d2b3c1":"code","8f10a899":"code","d603f88c":"code","1723ff16":"code","56b96143":"code","c4a30495":"code","04a3e9fc":"code","924aee70":"code","772a8c68":"code","d5aa1a51":"code","af6c84a8":"code","3dc58e49":"code","743149c6":"code","0b6ab1cb":"code","2e4ca75f":"code","e4b31a4f":"code","f66b998c":"code","5fdd99c7":"code","62ddc256":"code","811517c5":"code","e4e46699":"code","a9326f27":"code","1f705edb":"code","da99f063":"code","22ccf03c":"code","dad5bb59":"code","ba659f7e":"code","2ca16b39":"code","5b89f8d8":"code","1f65450e":"code","10833796":"code","3cc86240":"code","40f7910b":"code","d6455794":"code","d7b9d391":"code","4aece53f":"code","7f71bd2b":"code","f0e16cb4":"code","c6856b34":"code","56cb80d1":"code","18729b8e":"code","516f6438":"code","309f290a":"code","5c70906d":"code","48807f9c":"code","93a3a013":"code","77dbf2e0":"code","aef8c1f1":"code","edd48167":"code","fbb9c294":"code","d9ec8acc":"code","d02f30d6":"code","0536a3f8":"code","b54ddc63":"code","d033918d":"code","d1ed9015":"code","97ab0688":"code","c0565a1b":"code","c881dff6":"code","a4da6ede":"code","d0bd87f1":"code","f30402c4":"code","7b56c2de":"code","fb4211dd":"markdown","47673138":"markdown","79671ce9":"markdown","2edfe6f8":"markdown","79a4c684":"markdown","35f71b83":"markdown","fae448d6":"markdown","3a5998b8":"markdown","f1a4b4f9":"markdown","1b2d66bd":"markdown","b547e672":"markdown"},"source":{"4759e086":"import pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport patsy\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import RidgeCV\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Lasso, LassoCV, Ridge, RidgeCV\nfrom sklearn.preprocessing import StandardScaler,PolynomialFeatures\n \nimport warnings\nwarnings.filterwarnings('ignore')","e48e8638":"df1 = pd.read_csv('..\/input\/bike-sales-in-europe\/Sales.csv')\ndf1","f33f7dfb":"df1.Product_Category.value_counts()","dc3e112c":"df1.columns","97cf9bad":"df1.shape","935c2cde":"df1.info()","d63a6367":"df1.isna().sum()","e8381677":"df1.nunique()","a805e0cf":"df1.describe()","ebd1ed3a":"sns.boxplot(df1.Profit)","a03d6e1b":"df1=df1[df1.Profit<=4000]","cffdc625":"sns.boxplot(df1.Profit)","0a7c112a":"sns.boxplot(df1.Cost)","d948d92f":"df1=df1[df1.Cost<=4000]","d598e4cb":"sns.boxplot(df1.Cost)","9b168ea2":"sns.boxplot(df1.Unit_Cost)","e36e6253":"df1=df1[df1.Cost<=2000]","aaa81719":"df1.shape","41cc7a00":"sns.boxplot(df1.Cost)","dc7aee3d":"sns.boxplot(df1.Unit_Price)","3ccc85b5":"df1=df1[df1.Unit_Price<=3000]\ndf1.shape","f6e49f75":"sns.boxplot(df1.Unit_Price)","719003aa":"sns.boxplot(df1.Revenue)","6fa32993":"df1=df1[df1.Revenue<=3000]\ndf1.shape","7f686de6":"sns.boxplot(df1.Revenue)","c1fff5cb":"corr =df1.corr()\ncorr","f93a64e4":"cp = sns.heatmap(corr,cmap='Oranges', annot=True)\nplt.gcf().set_size_inches(12,12)","36acbb0f":"df1.duplicated().values.any()","6174ec71":"df1.duplicated().sum()","350de625":"df1.duplicated()","2a148d19":"df1.duplicated().values.any()","d629ad87":"df1 = df1.drop_duplicates()\ndf1.shape","6b4d7c55":"df1.duplicated().values.any()","0f2c2130":"df1.dtypes","38c66fed":"df1.groupby(['Country', 'Product_Category'])['Revenue'].sum()\nsns.countplot(data = df1, x='Country', hue='Product_Category', palette=('Oranges'))\nplt.savefig('product11.jpg')\nplt.gcf().set_size_inches(12,6)","bb20bb5c":"df1['Product_Category'].value_counts()","3bd32840":"sns.countplot(data = df1, x='Country', hue='Customer_Gender',palette=('Oranges'))\nplt.xticks(rotation=60)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(11,6)\nplt.savefig('gender2,.jpg')\nplt.show()","b8c54ff0":"df_age = df1['Customer_Age'].value_counts()","c9941359":"df_age","842ed7f8":"bikes_df =df1[df1['Product_Category']=='Bikes']\nbikes_df","e5dfc002":"rs = bikes_df.groupby('Customer_Gender')['Sub_Category'].value_counts()\nrs","24270d0a":"fig, rs = plt.subplots(figsize=(8,8))\nrs = bikes_df.groupby('Customer_Gender')['Sub_Category'].value_counts()\nplt.savefig('Customer_Gender.jpg')\nsns.countplot(data = bikes_df, x='Sub_Category', hue='Customer_Gender',palette=('Oranges'));","3c10efc9":"#fig, rs = plt.subplots(figsize=(8,8))\nrs = bikes_df.groupby('Country')['Sub_Category'].value_counts()\nplt.savefig('country1.jpg')\nsns.countplot(data = bikes_df, x='Sub_Category', hue='Country',palette=('Oranges'));","f4cbc62b":"sns.countplot(data = df1, x='Age_Group', hue='Customer_Gender',palette=('Oranges'))\nplt.xticks(rotation=0)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(8,8)\nplt.show()\nplt.savefig('Age_Group whith gender.jpg')\nplt.figure(figsize=(10,10))","6e8bfc26":"sns.countplot(data = df1, x='Country', hue='Age_Group',palette=('Oranges'))\nplt.xticks(rotation=60)\nsns.set_style(\"whitegrid\")\nplt.gcf().set_size_inches(12,6)\nplt.savefig('country.jpg')\nplt.show()","81a75cf4":"df_product = df1['Product_Category'].value_counts()\nlabel= [df_product.index.tolist()]\nplt.pie(df_product, shadow=True,labels=label[0],explode=(0.2, 0.2, 0.2), autopct='%1.1f%%', startangle=80)\nplt.gcf().set_size_inches(12,6)\nplt.savefig('product.jpg')\nplt.show()","78d2b3c1":"sns.countplot(data = df1, x='Product_Category', hue='Customer_Gender', palette=('Oranges'))\nplt.xticks(rotation=0)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(10,6)\nplt.savefig('customer.jpg')\nplt.show()","8f10a899":"df_Bikes = df1[df1['Product_Category'] == 'Bikes']\ndf_Bikes = df_Bikes['Sub_Category'].value_counts()\n\nlabel = [df_Bikes.index.tolist()]\nplt.pie(df_Bikes, shadow=True, autopct='%1.1f%%', startangle=90, labels=label[0])\nplt.gcf().set_size_inches(12,6)\nplt.savefig('sub.jpg')\nplt.show()","d603f88c":"bikes_df","1723ff16":"da = bikes_df.groupby('Country')['Sub_Category','Unit_Price'].max()\nda","56b96143":"most_years = bikes_df.groupby('Year')['Sub_Category','Unit_Price'].sum()\nmost_years","c4a30495":"df_product_month = df1['Month'].value_counts()\n\nlabel= [df_product_month.index.tolist()]\nplt.pie(df_product_month, shadow=True, labels=label[0], explode=(0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2),\n        autopct='%1.1f%%', startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.savefig(' based on Month.jpg')\nplt.show()\n","04a3e9fc":"plt.figure(figsize=(8,8))\nax = df1.groupby('Country')['Profit'].sum().plot(kind='barh',color=[0.8500, 0.3250, 0.0980])\nax.set(xlabel='Profit', ylabel='Country')","924aee70":"ax = df1.groupby('Year')['Revenue', 'Profit', 'Cost'].sum().plot(kind='barh')\nax.set(xlabel='Price in eur', ylabel='Year')\nplt.savefig(' based on Month.jpg')\nplt.gcf().set_size_inches(10,10)\n","772a8c68":"fig, ax = plt.subplots(figsize=(10,5))\nsns.barplot(data= df1, x='Country', y='Revenue', hue='Age_Group',  palette=('Oranges') ,alpha=1,ci=None, ax=ax)\nplt.title('Global Revenue by Age Group of Customers',fontdict={'fontsize': 15}, y=1.02)\nplt.legend(bbox_to_anchor=(1.05, 0.6))\nplt.tight_layout()\nplt.savefig('evenue by Age Group1.jpg')\nplt.show()","d5aa1a51":"# Check sales by season and country\n\nlabel = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.countplot(data = df1, x='Month', hue='Country', palette=('Oranges'))\nplt.xticks(ticks=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], labels=label)\nsns.set_style(\"whitegrid\")\nplt.gcf().set_size_inches(12,6)\nplt.savefig('month1.jpg')\nplt.show()","af6c84a8":"cols_to_plot = ['Sub_Category', 'Profit', 'Revenue', 'Customer_Age']\nplt.figure(figsize=(10,10))\nsns.pairplot(df1[cols_to_plot], hue='Sub_Category',palette=('Oranges'))\nplt.show() ","3dc58e49":"# Correlation plot Revenue vs Cost\n\nsns.scatterplot(data=df1, x=\"Revenue\", y=\"Cost\", hue='Year', palette=('Oranges'))\nplt.xlim(0,3000)\nplt.ylim(0,2000)\nplt.gcf().set_size_inches(12,6)\n\nm, b = np.polyfit(df1[\"Revenue\"], df1[\"Cost\"], 1)\nplt.savefig('revenue.jpg')\nplt.plot(df1[\"Revenue\"], m*df1[\"Revenue\"] + b);","743149c6":"df1.columns\n","0b6ab1cb":"df1.drop('Order_Quantity',axis =1,inplace=True)","2e4ca75f":"df1.drop('Unit_Cost',axis =1,inplace=True)","e4b31a4f":"df1.drop('Unit_Price',axis =1,inplace=True)","f66b998c":"df1.drop('Revenue',axis =1,inplace=True)","5fdd99c7":"df1","62ddc256":"df1.dtypes","811517c5":"bike = df1.select_dtypes(exclude=['object']).copy()","e4e46699":"bike","a9326f27":"bike['Customer_Age'] = df1['Customer_Age']","1f705edb":"bike['Customer_Gender'] = df1['Customer_Gender']","da99f063":"bike['Country'] = df1['Country']","22ccf03c":"bike['Product_Category'] = df1['Product_Category']","dad5bb59":"bike","ba659f7e":"bike = pd.get_dummies(bike)","2ca16b39":"bike","5b89f8d8":"bike.shape","1f65450e":"bike.columns","10833796":"X, y = bike.drop('Profit',axis=1), bike['Profit']\n\nX_train_val, X_test, y_train_val, y_test = train_test_split(X, y, test_size=0.2, random_state=100)","3cc86240":"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=.25, random_state=100)","40f7910b":"plt.rcParams[\"figure.figsize\"] = (10,8);\n\nsns.heatmap(bike.corr(), cmap = 'OrRd', annot = True, vmin= -1, vmax= 1, linewidths=1.5, fmt='.2f');\nplt.title('CORRELATION MATRIX\\n', loc='left', fontsize=18);","d6455794":"X_train_val","d7b9d391":"len(X_train_val.index)","4aece53f":"y_train_val","7f71bd2b":"len(y_train_val.index)","f0e16cb4":"len(X_test)","c6856b34":"len(y_test)","56cb80d1":"X_train_val.index","18729b8e":"X_test.index","516f6438":"X_train","309f290a":"y_train","5c70906d":"lm = LinearRegression().fit(X_train,y_train)\nlm.score(X_train,y_train)","48807f9c":"scaler = StandardScaler()\n\nX_train_scaled =scaler.fit_transform(X_train.values)\nX_val_scaled = scaler.transform(X_val.values)\nX_test_scaled = scaler.transform(X_test.values)\n","93a3a013":"lm = LinearRegression().fit(X_train_scaled,y_train)\nlm.score(X_train_scaled,y_train)","77dbf2e0":"lr_model_ridge = Ridge(alpha = 1000000)\nlr_model_ridge.fit(X_train, y_train)\n\nlist(zip(X_train.columns, lr_model_ridge.coef_))\n","aef8c1f1":"poly = PolynomialFeatures(degree=2) \n\nX_train_poly = poly.fit_transform(X_train.values)\nX_val_poly = poly.transform(X_val.values)\nX_test_poly = poly.transform(X_test.values)\n\nlm_poly = LinearRegression().fit(X_train_poly,y_train)\nlm_poly.score (X_train_poly,y_train)","edd48167":"poly3 = PolynomialFeatures(degree=3) \n\nX_train_poly3 = poly3.fit_transform(X_train.values)\nX_val_poly3 = poly3.transform(X_val.values)\nX_test_poly3 = poly3.transform(X_test.values)\n\nlm_poly3 = LinearRegression().fit(X_train_poly3,y_train)\nlm_poly3.score (X_train_poly3,y_train)","fbb9c294":"poly4 = PolynomialFeatures(degree=4) \n\nX_train_poly4 = poly4.fit_transform(X_train.values)\nX_val_poly4 = poly4.transform(X_val.values)\nX_test_poly4 = poly4.transform(X_test.values)\n\nlm_poly4 = LinearRegression().fit(X_train_poly4,y_train)\nlm_poly4.score (X_train_poly4,y_train)","d9ec8acc":"lm.fit(X_train, y_train)\nprint(f'Linear Regression train R^2: {lm.score(X_train, y_train):.3f}')\n\nlr_model_ridge.fit(X_train_scaled, y_train)\nprint(f'Ridge Regression train R^2: {lr_model_ridge.score(X_train_scaled, y_train):.3f}')\n\nlm_poly.fit(X_train_poly, y_train)\nprint(f'Degree 2 polynomial regression train R^2: {lm_poly.score(X_train_poly, y_train):.3f}')\n\nlm_poly4.fit(X_train_poly4, y_train)\nprint(f'Degree 4 polynomial regression train R^2: {lm_poly4.score(X_train_poly4, y_train):.3f}')","d02f30d6":"lm.fit(X_val, y_val)\nprint(f'Linear Regression val R^2: {lm.score(X_val, y_val):.3f}')\n\nlr_model_ridge.fit(X_val_scaled, y_val)\nprint(f'Ridge Regression val R^2: {lr_model_ridge.score(X_val_scaled, y_val):.3f}')\n\nlm_poly.fit(X_val_poly, y_val)\nprint(f'Degree 2 polynomial regression val R^2: {lm_poly.score(X_val_poly, y_val):.3f}')\n\nlm_poly3.fit(X_val_poly4, y_val)\nprint(f'Degree 4 polynomial regression val R^2: {lm_poly4.score(X_val_poly4, y_val):.3f}')","0536a3f8":"lm.fit(X_test, y_test)\nprint(f'Linear Regression test R^2: {lm.score(X_test, y_test):.3f}')\n\nlr_model_ridge.fit(X_test_scaled, y_test)\nprint(f'Ridge Regression test R^2: {lr_model_ridge.score(X_test_scaled, y_test):.3f}')\n\nlm_poly.fit(X_test_poly, y_test)\nprint(f'Degree 2 polynomial regression test R^2: {lm_poly.score(X_test_poly, y_test):.3f}')\n\nlm_poly3.fit(X_test_poly4, y_test)\nprint(f'Degree 4 polynomial regression test R^2: {lm_poly4.score(X_test_poly4, y_test):.3f}')","b54ddc63":"sns.scatterplot(data=bike, x=\"Profit\", y=\"Cost\", palette=('OrRd_r'))\nplt.xlim(0,3000)\nplt.ylim(0,2000)\nplt.gcf().set_size_inches(12,6)\n\nm, b = np.polyfit(bike[\"Profit\"], bike[\"Cost\"], 1)\nplt.savefig('cost.jpg')\nplt.plot(bike[\"Profit\"], m*bike[\"Profit\"] + b)","d033918d":"lasso_model = Lasso(alpha = 10000) # this is a VERY HIGH regularization strength!, wouldn't usually be used\nlasso_model.fit(X_val , y_val)","d1ed9015":"list(zip(X_val.columns, lasso_model.coef_))","97ab0688":"lasso_model.score(X_train,y_train)","c0565a1b":"from sklearn.tree import DecisionTreeRegressor","c881dff6":"td = DecisionTreeRegressor(random_state =100,max_depth=8) ","a4da6ede":"td.fit(X_train,y_train)","d0bd87f1":"td.score(X_train,y_train)","f30402c4":"td.score(X_val,y_val)","7b56c2de":"td.score(X_test,y_test)","fb4211dd":"# Import necessary libraries and read data set","47673138":"# Linear , Ridge and Polynomial Regression","79671ce9":"# EDA for dataset","2edfe6f8":"# Linear Regression","79a4c684":"#   Check null values","35f71b83":"# **Remove duplicated Records**\n\n","fae448d6":"# Polynomial Regression","3a5998b8":"Abstract:\n\nThis data contains bike sales in Europe and America and the relationship between leading profits with age groups of people and according to males and females and needs that can bepurchased when buying a bike and we can predict future prices using machine learning once the product is developed so the machine will make the decision in setting the price and this data was analyzed by reviewing bicycle data and extracting insights into sales in each of their countries. And calculate the percentage of profits in each of the countries. Also, who buys bikes more, males or females, and what are the most expensive types of bikes, who the most years in which bikes were sold? The results were presented in graphic images that easily simulate this information.","f1a4b4f9":"Algorithms:\n\nimporting the data and then reading it to know the number of rows and columns.etc It does not contain null values Duplicate values have been eliminated All questions answered in graphs Determine of product category in each country Determine the most types of bikes to buy. Road bikes It is the most purchased by males and females Determine the number of the age group most interested in bicycles: 35-64 are the most interested. Converting data from object to numbers The data has been divided to create a new model that predicts profits We used 3 types of models and the best result is Polynomial Regression degree = 4","1b2d66bd":"# Ridge Regression","b547e672":"<img src=\"bikes.jpg\" alt=\"Drawing\"\/>"}}