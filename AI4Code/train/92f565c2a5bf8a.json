{"cell_type":{"01fa52cc":"code","4e40af41":"code","2ec4c432":"code","dfb4a4fe":"code","919dbf78":"code","43c11f20":"code","ec006aef":"code","6c70b82f":"code","df2649bc":"code","b12f0c33":"code","47ad2c98":"code","a4b71923":"code","8c4f9754":"code","fc56c269":"code","ff9eb14b":"code","1830bb2f":"code","58dae274":"code","e2d3d429":"code","5e66c520":"code","32449e34":"code","d24116dc":"code","1169bdf2":"code","5a938df9":"code","5de32bbe":"code","65606624":"code","d099ad67":"code","26a1e591":"code","d82b9028":"code","29ac1d5c":"code","67f5f664":"code","bb6f70f1":"code","481e3d94":"code","3523e38c":"code","95dfde02":"code","ba97478e":"code","70be7484":"code","c70a0796":"code","9ae66cbe":"code","e9cb4d5a":"code","41646aec":"code","44921351":"code","67921289":"code","1cb0c352":"code","df0b8cf8":"code","f15c8345":"code","9ce3cb00":"code","dca179b4":"code","c1034938":"code","54c44d35":"code","bea5b60a":"code","0112def2":"code","89260072":"code","ce129ebf":"code","049db350":"code","e88d3bdf":"code","d2b046da":"code","356fcc03":"code","3305930c":"code","b58872b9":"code","ea93bffe":"code","609fd9ee":"code","37f2df1a":"code","36a3a41f":"code","1579e2a0":"code","0cd5a963":"code","bdca3d6f":"code","ec476f07":"code","3533188d":"code","d0ef9b50":"code","df5eba1d":"code","df74bea0":"code","814292d6":"code","47bcabdb":"code","dbde6beb":"code","0a096175":"code","f46df09f":"code","d34e60d0":"code","57aa691e":"code","b1016fab":"code","38d88967":"code","7c2c99e1":"code","0a5d9d63":"code","47fde264":"code","5eb63174":"code","bf435d02":"code","31f49984":"code","8eaf5736":"code","d20df14a":"code","f524b91e":"code","bd751c64":"code","b88e0080":"code","1a28a43f":"code","84eda5b9":"code","a562a1be":"code","13b15d5c":"code","2407609b":"code","f93c6d06":"code","d8233baf":"code","4ce73022":"code","06850731":"code","2a3aed3c":"code","3c880d49":"code","bd2c7c5e":"code","ede80398":"code","4d3f7088":"code","899530fc":"code","f86cec56":"code","5caf2a49":"code","9261b7b6":"code","72103fc6":"code","0482ea70":"code","8d1bc463":"code","93bb016d":"code","651cc0ad":"code","8972e111":"code","9b0ae58f":"code","d28c00c2":"code","cf20473f":"code","c47e282a":"code","5238e268":"code","8e2934fe":"code","5cec0c06":"code","3a23ffc2":"code","1a7b649a":"code","5a780a02":"code","26a02d67":"code","c0807462":"code","2ac80146":"code","a6a0332c":"code","96301685":"code","4c4afe7f":"code","7a581b86":"code","863d4a0d":"code","35c52578":"code","e1536569":"code","89305fbd":"code","ea9b75f1":"code","8fe91c60":"code","5270cb5f":"code","3e5ca9f0":"code","d12b25e0":"code","baea329a":"code","940cf463":"code","fd965e7b":"code","f7bd3b85":"code","7ffb8ece":"code","2a51bd2b":"code","0062482b":"code","01893df5":"code","ceeedfe7":"code","b3814b62":"code","aad00ec2":"code","7bf3f25c":"code","9e0679e7":"markdown","dcb4fe7d":"markdown","ea3f1767":"markdown","8e5d3e68":"markdown","b4d938c2":"markdown","5aa5ad00":"markdown","df4bf753":"markdown","bdff7741":"markdown","88c9bb33":"markdown","e4dbb431":"markdown","78106877":"markdown","578f3f45":"markdown","0bd1aa6e":"markdown","a79bedd3":"markdown","3d2fe58b":"markdown","807d7871":"markdown","921f24c3":"markdown","12666fcb":"markdown","2ce7031e":"markdown","6dfff59e":"markdown","d4574dc4":"markdown","14d58c27":"markdown","56ca1641":"markdown","e9c58ba7":"markdown","43375a30":"markdown","fcdbcde1":"markdown","18621cad":"markdown","70a37aa3":"markdown","d434ea8c":"markdown","d2c014f8":"markdown","ee861d31":"markdown","de92e1f3":"markdown","a0c05c69":"markdown","f836b05a":"markdown"},"source":{"01fa52cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n","4e40af41":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","2ec4c432":"choco=pd.read_csv('\/kaggle\/input\/chocolate-bar-ratings\/flavors_of_cacao.csv')","dfb4a4fe":"choco.tail()","919dbf78":"choco['Specific Bean Origin\\nor Bar Name'].unique()","43c11f20":"choco['Bean\\nType'].unique()","ec006aef":"choco['Broad Bean\\nOrigin'].unique()","6c70b82f":"choco.columns","df2649bc":"new_columns=['company','bean_region','review_#','review_date','cocoa_%','company_loc',\n             'rating','bean_type','bean_country']\nold_columns=choco.columns","b12f0c33":"choco=choco.rename(columns=dict(zip(old_columns,new_columns)))","47ad2c98":"#renaming columns into more \"logical\"\nchoco=choco[['bean_region','bean_country','bean_type','cocoa_%',\n       'review_#','review_date','company','company_loc','rating']]","a4b71923":"choco.info()","8c4f9754":"choco.head(50)","fc56c269":"choco.groupby('bean_region')[['rating']].mean().sort_values(by='rating',ascending=False).head(30)","ff9eb14b":"choco[choco['bean_type'].isnull()]","1830bb2f":"choco[choco['bean_type']=='Trinitario']","58dae274":"choco['bean_type'].describe()","e2d3d429":"choco.bean_type.values[1]","5e66c520":"choco['bean_type'].unique()","32449e34":"sns.set_style('whitegrid')\nplt.figure(figsize=(17,6))\nsns.countplot(x=choco['bean_type'])\nplt.xticks(rotation='vertical')\nplt.tight_layout","d24116dc":"choco[choco['bean_type']=='\\xa0']","1169bdf2":"choco=choco.replace('\\xa0','none')","5a938df9":"type(choco.bean_type.values[1])","5de32bbe":"choco.head(10)","65606624":"len(choco[choco['bean_type']=='none'])","d099ad67":"choco['bean_type'].isnull().value_counts()","26a1e591":"choco['bean_type'].fillna(value='none',inplace=True)","d82b9028":"choco['bean_type'].isnull().value_counts()","29ac1d5c":"choco[choco['bean_type']=='none'].count()","67f5f664":"def find_word(text):\n    if 'Forastero'in text:\n        return 1\n    else:\n        return 0","bb6f70f1":"choco['bean_type'].apply(find_word).sum()","481e3d94":"choco['Forastero']=choco['bean_type'].apply(find_word)","3523e38c":"choco['Forastero']","95dfde02":"sns.countplot(x='Forastero',data=choco)","ba97478e":"def find_word(text):\n    if 'Trinitario'in text:\n        return True\n    else:\n        return False","70be7484":"choco['bean_type'].apply(find_word).value_counts()","c70a0796":"choco['Trinitario']=choco['bean_type'].apply(find_word)","9ae66cbe":"sns.countplot(x='Trinitario',data=choco)","e9cb4d5a":"def find_word(text):\n    if 'Criollo'in text:\n        return 1\n    else:\n        return 0","41646aec":"choco['Criollo']=choco['bean_type'].apply(find_word)","44921351":"choco['Criollo'].sum()","67921289":"sns.countplot(x='Criollo',data=choco)","1cb0c352":"def is_blend(text):\n    if (',' in text) or('Blend' in text) or ('mix'in text) :\n        return 1\n    else:\n        return 0\n","df0b8cf8":"is_blend('Amazon Blend')","f15c8345":"choco['blend']=choco['bean_type'].apply(is_blend)","9ce3cb00":"choco['blend'].value_counts()","dca179b4":"choco1=pd.concat((choco['Forastero'],choco['Trinitario'],choco['Criollo'],choco['blend']),axis=1)","c1034938":"choco1","54c44d35":"fig, ax =plt.subplots(1,4)\nsns.countplot(choco1['Forastero'], ax=ax[0])\nsns.countplot(choco1['Trinitario'], ax=ax[1])\nsns.countplot(choco1['Criollo'], ax=ax[2])\nsns.countplot(choco1['blend'], ax=ax[3])\nplt.tight_layout()","bea5b60a":"choco.groupby('blend')['rating'].mean()","0112def2":"choco.groupby('Forastero')['rating'].mean()","89260072":"choco.groupby('Criollo')['rating'].mean()","ce129ebf":"choco.groupby('Trinitario')['rating'].mean()","049db350":"def not_blend(text):\n    if ('Forastero'in text) and (',' not in text) and ('Blend' not in text) and  ('mix'not in text) :\n        return 1\n    else:\n        return ","e88d3bdf":"choco['bean_type'].apply(not_blend).sum()","d2b046da":"def not_blend(name, text):\n    if (name in text) and (',' not in text) and ('Blend' not in text) and  ('mix'not in text) :\n        return 1\n    else:\n        return 0\nchoco['Forastero']=choco['bean_type'].apply(lambda text: not_blend(\"Forastero\",text))\nchoco['Criollo']=choco['bean_type'].apply(lambda text: not_blend(\"Criollo\",text))\nchoco['Trinitario']=choco['bean_type'].apply(lambda text: not_blend(\"Trinitario\",text))","356fcc03":"choco['Forastero'].sum()","3305930c":"choco['Criollo'].sum()","b58872b9":"choco['Trinitario'].sum()","ea93bffe":"choco.groupby(\"Forastero\")['rating'].mean()","609fd9ee":"choco.groupby(\"Trinitario\")['rating'].mean()","37f2df1a":"choco.groupby(\"Criollo\")['rating'].mean()","36a3a41f":"ratings=pd.DataFrame(data=[choco.groupby(\"Forastero\")['rating'].mean(),\n                          choco.groupby(\"Trinitario\")['rating'].mean(),\n                          choco.groupby(\"Criollo\")['rating'].mean(),\n                          choco.groupby(\"blend\")['rating'].mean()], index=[\"Forastero\",'Trinitario',\n                                                                             'Criollo','blend'], \n                                                                     columns=None)","1579e2a0":"ratings","0cd5a963":"choco.head()","bdca3d6f":"choco['bean_country'].nunique()","ec476f07":"choco['bean_country'].unique()","3533188d":"choco[choco['bean_country'].isnull()]","d0ef9b50":"choco['bean_country'].fillna(value='Madagascar',inplace=True)","df5eba1d":"choco[choco['bean_country'].isnull()]","df74bea0":"choco[choco['bean_country']=='none'][['bean_region','bean_type']].head(40)","814292d6":"len(choco[choco['bean_country']=='none'])","47bcabdb":"choco2=choco.drop(choco[choco['bean_country']=='none'].index)","dbde6beb":"len(choco2[choco2['bean_country']=='none'])","0a096175":"choco2.apply(len)","f46df09f":"country_count=pd.DataFrame(choco2['bean_country'].value_counts().head(24),\n                           index=None,columns=None)","d34e60d0":"country_count","57aa691e":"country_count.columns","b1016fab":"country_count.index","38d88967":"country_count.sum()\/17.22","7c2c99e1":"country_count.head(5).sum()\/17.22","0a5d9d63":"country_count.plot(kind='bar',color='green')","47fde264":"l=[]\nfor country in country_count.index:\n    l.append(round(choco[choco['bean_country']==country]['rating'].mean(),2))\n    \nprint(f'{l}')","5eb63174":"l","bf435d02":"import pycountry\n\ninput_countries = country_count.index\n\ncountries = {}\nfor country in pycountry.countries:\n    countries[country.name] = country.alpha_3\n\ncodes = [countries.get(country, 'Unknown code') for country in input_countries]\n\nprint(codes)","31f49984":"#replacing missing values\nCountry_code=['VEN', 'ECU', 'PER', 'MDG', 'DOM', 'NIC', 'BRA', 'BOL', 'BLZ', 'PNG', 'COL', 'CRI',\n              'VNM', 'TZA', 'TTO', 'GHA', 'MEX', 'US-HI', 'GTM', 'DOM', 'JAM', 'GRD', 'IDN', 'HND']","8eaf5736":"top_24_rating=pd.DataFrame(list(zip(Country_code,l)),country_count.index,columns=['Country Code','Rating'])","d20df14a":"top_24_rating","f524b91e":"top_24_countries=pd.concat([country_count,top_24_rating],axis=1)","bd751c64":"top_24_countries=top_24_countries[['Country Code','bean_country','Rating']]","b88e0080":"top_24_countries.rename(columns={'bean_country':'# of data'},inplace=True)","1a28a43f":"top_24_countries","84eda5b9":"\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","a562a1be":"data=dict(type='choropleth',\n         locations=Country_code, \n         z=top_24_countries['Rating'],\n         text=top_24_countries['Country Code'],\n         colorbar={'title':'Chocolate rating'})\nlayout=dict(title='Chocolate rating for top 24 beans origin countries',\n           geo=dict(showframe=False,projection={'type':'mercator'}))\n\nchoromap4=go.Figure(data=[data],layout=layout)\n\niplot(choromap4)","13b15d5c":"#countplot per countries with associated mean score\ndef display_figures(ax):\n    i=0\n    for p in ax.patches:\n        h=p.get_height()\n        if (h>0):\n            value=l[i]\n            ax.text(p.get_x()+p.get_width()\/2,h+6, value,ha='center')\n            i=i+1\n            \n            \nplt.figure(figsize=(15,10))\nax=sns.barplot(x='Country Code',y='# of data',data=top_24_countries,orient='v')\ndisplay_figures(ax)","2407609b":"#barplot for mean score vs.countries\ndef display_figures(ax):\n    i=0\n    for p in ax.patches:\n        h=p.get_height()\n        if (h>0):\n            value=top_24_countries['# of data'][i]\n            ax.text(p.get_x()+p.get_width()\/2,h+0.08, value, ha='center')\n            i=i+1\n            \n            \nplt.figure(figsize=(15,10))\nax=sns.barplot(x='Country Code',y='Rating',data=top_24_countries,orient='v')\ndisplay_figures(ax)","f93c6d06":"top_24_countries['Rating'].max()","d8233baf":"top_24_countries['Rating'].min()","4ce73022":"choco.groupby('bean_country')[['rating']].mean().sort_values(by='rating',ascending=False).head(20)","06850731":"#making a new dataframe for countries with the highest reviews\ndf1=pd.DataFrame(round(choco.groupby('bean_country')[['rating']].mean().sort_values(by='rating',ascending=False).head(20),2),\n                           index=None,columns=None)","2a3aed3c":"df1","3c880d49":"l1=[]\nfor country in df1.index:\n    l1.append(len(choco[choco['bean_country']==country]))\n    ","bd2c7c5e":"len(l1)","ede80398":"#adding the number of reviews to top 20 ratings\ntop_20_ratings=pd.DataFrame(list(zip(l1,df1['rating'])),index=df1.index,columns=['# of reviews','Avearge rating'])","4d3f7088":"top_20_ratings","899530fc":"top_20_ratings['# of reviews'].sum()\/17.22","f86cec56":"df2=pd.DataFrame(round(choco.groupby('bean_country')[['rating']].mean().sort_values(by='rating',ascending=True).head(20),2),\n                           index=None,columns=None)","5caf2a49":"df2","9261b7b6":"l2=[]\nfor country in df2.index:\n    l2.append(len(choco[choco['bean_country']==country]))","72103fc6":"bottom_20_ratings=pd.DataFrame(list(zip(l2,df2['rating'])),index=df2.index,columns=['# of reviews','Avearge rating'])","0482ea70":"bottom_20_ratings.tail()","8d1bc463":"choco[choco['bean_country']=='Carribean']","93bb016d":"choco[choco['bean_country']=='Uganda']","651cc0ad":"choco[choco['bean_country']=='Ivory Coast']","8972e111":"choco[choco['bean_country']=='West Africa']","9b0ae58f":"(bottom_20_ratings['# of reviews'].sum()-73)\/17.22","d28c00c2":"sns.distplot(choco['rating'],kde=False,bins=8)","cf20473f":"#checking on company location\nchoco['company_loc'].nunique()","c47e282a":"choco['company_loc'].isnull().value_counts()","5238e268":"choco['company_loc'].unique()","8e2934fe":"choco.groupby('company_loc')[['rating']].mean()","5cec0c06":"choco=choco.replace('Amsterdam','Netherlands')","3a23ffc2":"choco.groupby('company_loc')[['rating']].mean()","1a7b649a":"choco['company_loc'].value_counts()","5a780a02":"df3=pd.DataFrame(choco['company_loc'].value_counts().head(15),index=None,columns=None)","26a02d67":"df3","c0807462":"l3=[]\nfor country in df3.index:\n    l3.append(round(choco[choco['company_loc']==country]['rating'].mean(),2))\n\n","2ac80146":"l3","a6a0332c":"top_companies=pd.DataFrame(list(zip(df3['company_loc'],l3)),index=df3.index,columns=['# of reviews','Rating'])","96301685":"top_companies.sort_values(by='Rating',ascending=False)","4c4afe7f":"top_24_countries","7a581b86":"s=0\nfor country in  top_companies.index:\n    if country in top_24_countries.index:\n        s+=1\n    else:\n        pass\nprint (s)\n","863d4a0d":"choco['cocoa_%']","35c52578":"def per_to_num(data):\n    return int(data[0:2])","e1536569":"choco['cocoa_%']=choco['cocoa_%'].apply(per_to_num)","89305fbd":"choco['cocoa_%'].unique()","ea9b75f1":"choco['cocoa_%'].value_counts().head(10).sum()\/17.95","8fe91c60":"# %top 10 cocoa percentages\ndf4=pd.DataFrame(choco['cocoa_%'].value_counts().head(10),index=None,columns=None)","5270cb5f":"df4","3e5ca9f0":"df5=choco.groupby('cocoa_%')[['rating']].mean()","d12b25e0":"df5","baea329a":"plt.scatter(x=df5.index,y='rating',data=df5)","940cf463":"#let'sgo backand look at the top 10 cocoa percentages\nl4=[]\nfor per in df4.index:\n    l4.append(round(choco[choco['cocoa_%']==per]['rating'].mean(),2))\n\n","fd965e7b":"l4","f7bd3b85":"top_10_cocoa_per=pd.DataFrame(list(zip(df4['cocoa_%'],l4)),index=df4.index,columns=['# of reviews','Rating'])","7ffb8ece":"top_10_cocoa_per","2a51bd2b":"plt.scatter(x=top_10_cocoa_per.index,y='Rating',s=top_10_cocoa_per['# of reviews'], data=top_10_cocoa_per,marker='o',c='pink')","0062482b":"choco[choco['bean_country']=='Carribean']['cocoa_%'].mean()","01893df5":"choco[choco['bean_country']=='Uganda']['cocoa_%'].mean()","ceeedfe7":"choco[choco['bean_country']=='Ivory Coast']['cocoa_%'].mean()","b3814b62":"choco[choco['bean_country']=='West Africa']['cocoa_%'].mean()","aad00ec2":"df5","7bf3f25c":"plt.figure(figsize=(15,6))\nsns.boxplot(x='cocoa_%', y='rating',data=choco)","9e0679e7":"From this we can see that Uganda has the highest percentage of reviews less than 3. Still the bottom 20 countries that have reviews less than 3, if we don't count hte missing data,account to only 3% of total data, which is not very significant. It means that the probablilty of review being less than 3 is only 0.03. \n\nThis also tells us that the majority of reviews are \"in the middle\", which is anyway characteristic for normal distribution.","dcb4fe7d":"Conclusion: It seems that 3 above mentioned are the most common bean types. But when we look at the rating of these 3 , the avearge we are seeing is not significant as these bean types are also counted in blends, so therefor these avearges are not showing avearge for chocolates with ONLY that bean type. We need to check how many of these are actually only Criollo,Forastero or...","ea3f1767":"This scatter plot shows us that majority of chocolates with the rating between 3 and 3.5 have cocoa percentage somwhere between 60% and 80%","8e5d3e68":"I am interested to look into 3 columns for begining: bean_region,bean_country and bean_type.In order to make a table a bit more transparent and the order more logical I will also regroup columns","b4d938c2":"From this we can see that out of top 24 beans' origin countries, only 3 of them are actualy having company locations amongst top 15. This tells us that most of the better quality beans are exported and chocolate is produced somewhere else.  ","5aa5ad00":"For the simplicity and teh make sure I can plot them using pltly I will create ISO-3 codes for those countries.","df4bf753":"As we can see from above it is hard to identify cocoa beans with only one country when country is missing. For example Trinitario may be from Venezuela, Columbia or Caribbean. So I will ignore those entries where bean_country has \"none\" value. That would be 73 entries out of 1795 and it accounts to 4% of total data which is acceptable.","bdff7741":"Finally, I will replace these empty entries with 'none' values","88c9bb33":"As we can see, the blend has the highest average rating followed by 'Criollo' bean type with average score 3.26. The least popular seems to be Forastero, with the score of 3.11. The blend is still apparentyl the most popular \"solution\".","e4dbb431":"This gives us a bit better picture. We can see that beans from Caribbean,Uganda.St.Lucia,Ivory Coast,West africa seem not be very popular.Let's exmine them more closely.","78106877":"This is great- there are only 60 company locations. Let's check for null data.","578f3f45":"So we have 103 blend types.We have to be carefull here. We know that we have 888 null values, so that means that out of 1692 'non blends' 888 of them are null values. So we have actually 804 non-blends. We need to make a column that will represent this","0bd1aa6e":"What about the number of original sorts ? Can we count those and can we count blends?","a79bedd3":"As we can notice thre are no huge differences in average average rating amongst the top 24 countries. All average ratings are withing the range (3,3.35). As fort he average rating there are not hge differences between thesetop 24countries, so 88%of data has rating within the range (3,3.35).\n\nIt is important to see the top ratings, number of ratings and their origin. Let's look at \nratings \u2265 3.5, number of reviews associated, bean_type and origin.","3d2fe58b":"Average rating for 76% cocoa is 2.9 , so it could be the cocoa % they are using.","807d7871":"So we can see that there is a difference. Before we had 201 identified 'Forastero' types, but only 194 of them are only Forastero! So 7 of them belong to blends. I will do this with other 2 bean types. I could define pnly one function and change paramter.","921f24c3":"As we can see the most popular chocolates are those with the rating 70% and it has the second highest review. \n\nNow looking back at those \"unpopoular countries\".","12666fcb":"As we can see one more is left as null value. I will change that one into a string so the entire column has the same data type ","2ce7031e":"As we see Forestero appears 201 times as originalsort or part of a blend.I will plot this","6dfff59e":"PART 2: In ths part I will investigate bean origin vs rating and percentage of cocoa vs rating. ","d4574dc4":"PART 3: In this part I will investigate percentage of cocoao and the average rating. Also, it is well know that for example  Italy has a 'good\" chocolates, so I will also examine the company location and the rating.","14d58c27":"From here we can see that only 2 of 20 top ratings come from 2 or  3 reviews and the rest are all coming from 1 review. Therefore, we have no enough evdiences to say that those are the top rated chocolates indeed. \n\nAlso, the top 20 reviews account only to 1.3% of data which means that the probability of being top 20 is 0.01\n\nLet'slook at the ratings below 3. ","56ca1641":"It seems that there are alot of null values but they have specific format. We need to discover what it is and try to replace it with NaN","e9c58ba7":"From what we can see he top 5 countries are origin for almost 50% of data. \nAround 88% of total data come from the above mentioned 24 countries.\nOnly 12%  or 205 data comes from the rest 75 countries. \nIt seems that those 24 countries are the reasonable choice for analysis. I will presetn those on the barchart.","43375a30":"*In Part 1 I will be exploring columns separately and then possibly look into any correlation that\nmay exist between them.\n* Columns will be renamed, checked for null values,datatypes etc...\n* New possible columns will be created\n* different bean types and brends will be observed","fcdbcde1":"As we see Forestero appears 225 times as original sort or part of a blend.I will plot this","18621cad":"As we see Forestero appears 476 times as original sort or part of a blend.I will plot this","70a37aa3":"I will count the number of blends or original sorts of Forastero, Trinitario and Criollo","d434ea8c":"We can see from here that data are slightly negatively skewed, but they are still approximately normally distributed. \n\n\n","d2c014f8":"As we can see 49.5% have no bean_type,so this columns shouldn't be the one that will affect the rating a  lot. Still we can investigate some other most common bean types","ee861d31":"So, 81 percent of data has cocoa % in thetop 10 percentages. I will create the dataset representing those percentages and look at the avearge ratings.","de92e1f3":"I will observe oly top 15 companies because the ones after account to <1% of total reviews. ","a0c05c69":"So we can seethat the best average rating goes to Australia,Switzerland,Italy,Canada and Spain. \n\nAll top 15 countries again have reviews from 3.01 to 3.36.","f836b05a":"As we can see some of the beans\/blends have omore tha one countrylisted as an origin. I will look into the top 20 countries and the average rating of their beans. I will not count in the appearnce of countries along with some other ones as the avearge rating in that case is skewed by the presence of different countries. Therefore, the average rating for single country would not present the rating for country ONLY."}}