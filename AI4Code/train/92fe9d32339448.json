{"cell_type":{"bff67520":"code","873b8921":"code","c6eeae93":"code","36758be2":"code","ce16d269":"code","52ea7da2":"code","1b92678e":"code","4110e228":"code","a59b1b20":"code","e1a579d6":"code","1a78bc4b":"code","0d282d5a":"code","04229340":"code","98df251d":"code","c035b850":"code","8435aa52":"code","b6527086":"code","087961e3":"code","ccc41c52":"code","cdb1d3ff":"code","68c3a5ef":"code","66ab5cd3":"code","bcd1c91f":"code","dcbc8ad5":"code","e514e839":"code","cece734d":"markdown"},"source":{"bff67520":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","873b8921":"# loading the data\nimport pandas as pd\nimport seaborn as sns\ndf = pd.read_csv('\/kaggle\/input\/titanic\/test_data.csv')\ndf.head()","c6eeae93":"# describe \ndf.describe()","36758be2":"# it will check count of the survived data.... and for ML model this the dependent lable for the we will guess imbalansed or unbalansed\nsns.countplot(x='Survived',data=df,saturation=0.90)","ce16d269":"# count of the Gender M, F\nsns.countplot(x = 'Sex',data = df)","52ea7da2":"# relation of the all data set\nsns.boxplot(data=df)","1b92678e":"# Calculate correlations, how lables or correlated to target lable...\ncorr = df.corr()\n \n# Heatmap\nsns.heatmap(corr)","4110e228":"# distribution among Age..\nsns.distplot(df.Age)","a59b1b20":"# distribution among Fare lable\nsns.distplot(df.Fare)","e1a579d6":"\n# Density Plot between sex and age\nsns.kdeplot(df.Sex, df.Age)","1a78bc4b":"# it will show the two defferent lable importance..\nsns.jointplot(x='Fare', y='Age', data=df)","0d282d5a":"# count of family size lable..\nsns.countplot(x = 'Family_size',data = df)","04229340":"# count of titile\nsns.countplot(x = 'Title_1',data = df)","98df251d":"# count of Pclass1\nsns.countplot(x = 'Pclass_1',data = df)","c035b850":"sns.countplot(x = 'Pclass_2',data =df)","8435aa52":"sns.countplot(x = 'Pclass_3',data =df)","b6527086":"# count of Emb_3\nsns.countplot(x = 'Emb_3',data =df)","087961e3":"sns.countplot(x = 'Emb_2',data = df)","ccc41c52":"sns.countplot(x = 'Emb_3',data = df)","cdb1d3ff":"# lables split\ny = df['Survived']\nx = df.drop(['Survived'], axis = 1)","68c3a5ef":"# Titanic data is ready for predictions so i want apply some ML Algos on this....\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25)","66ab5cd3":"# apply for the logistic regreesion on it....\nfrom sklearn.linear_model import LogisticRegression\nlr = LogisticRegression().fit(x_train,y_train)\nprint(lr.predict(x_test).mean())\nprint(lr.score(x,y))","bcd1c91f":"# svm techniq\nfrom sklearn.svm import SVC\nsvc = SVC().fit(x_train,y_train)\nprint(svc.predict(x_test).mean())\nprint(svc.score(x,y))","dcbc8ad5":"# DecisionTree Tecchnic\nfrom sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier().fit(x_train,y_train)\nprint(dtc.predict(x_test).mean())\nprint(dtc.score(x,y))","e514e839":"# RandomForest techniq..\nfrom sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier().fit(x_train,y_train)\nprint(rfc.predict(x_test).mean())\nprint(rfc.score(x,y))","cece734d":"**Titanic data set**.**\ndata loading from kaggle to do data analysis and undestsnding about the dataset more crearly for this i was used seaborn and pandas. "}}