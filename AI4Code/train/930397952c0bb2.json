{"cell_type":{"d5326cf3":"code","6749cb56":"code","e446bafc":"code","94e443d5":"code","c787d36c":"code","b8413f31":"code","7199d3d9":"code","6a657dec":"code","ec439159":"code","a81be7a0":"code","8eeb6d88":"code","80b189fb":"code","077438d0":"code","2f6f1cfb":"code","cf960766":"code","79be1681":"code","a53aa4f4":"code","6eff6ab2":"code","a3c21b78":"code","85adfd8b":"code","90b26ca2":"code","634d46d0":"code","38f3a175":"code","b4280948":"code","fbb15d22":"code","00ddd650":"code","30662bd4":"code","3e430e57":"code","07a8eb03":"code","17d61ee9":"code","cddce3e7":"code","897b31b9":"code","61fad52e":"code","a9f40c7d":"code","bdd6d2e3":"code","40a15a2c":"code","d91ade32":"code","f2581e4f":"code","146fa3b4":"code","f0771edc":"code","1b9dd077":"code","7b3cc2db":"code","428fa569":"code","9dade7f2":"code","19c7502a":"code","50df18f6":"code","705f4a9a":"code","0a1933dc":"code","1f834fce":"code","db9934bd":"code","fbd32e82":"code","33b8ee07":"code","26d5112a":"code","f8ab238e":"code","c2c5c64d":"code","2c81e9b3":"code","044a3294":"code","065a72d0":"code","34758dd9":"code","04faa89a":"code","93b0c025":"markdown","230bdd07":"markdown","5101abad":"markdown","4e02b075":"markdown","cfd50d7c":"markdown","1f77aff2":"markdown","addc2af6":"markdown","b1023b28":"markdown"},"source":{"d5326cf3":"import pandas as pd\nimport re\nfrom datetime import datetime\nimport numpy as np\npd.options.mode.chained_assignment = None  # |default='warn'","6749cb56":"df_sla = pd.read_excel(\"..\/input\/open-shopee-code-league-logistic\/SLA_matrix.xlsx\")","e446bafc":"## SLA Matrix\ndf_sla","94e443d5":"## Delivery data\ndf_delivery = pd.read_csv(\"..\/input\/open-shopee-code-league-logistic\/delivery_orders_march.csv\")","c787d36c":"df_delivery.shape","b8413f31":"df_delivery['buyeraddress']=\" \"+df_delivery['buyeraddress']+\" \"","7199d3d9":"df_delivery['selleraddress']=' '+df_delivery['selleraddress']+' '","6a657dec":"df_delivery.head()","ec439159":"## SLA matrix\nmatrix = df_sla.iloc[1:5, 2:].values\ncity_order = [\" metro manila \", \" luzon \", \" visayas \", \" mindanao \"]","a81be7a0":"matrix","8eeb6d88":"## SLA 2nd attempt\nprint(df_sla.iloc[8:,:1].values[0][0])","80b189fb":"## Sample orders\ndf_sample = df_delivery.sample(n=1000)\ndf_sample.head()","077438d0":"def find_city(x):\n    for city in city_order:\n        if city.lower() in x:\n            return city.lower()","2f6f1cfb":"## Get Origin\ndef get_origin(df):\n    origin = find_city(df['selleraddress'].lower())\n    return origin","cf960766":"## Get Destination\ndef get_destination(df):\n    destination = find_city(df['buyeraddress'].lower())\n    return destination","79be1681":"df_sample['origin'] = df_sample.apply(get_origin, axis=1)\ndf_sample['destination'] = df_sample.apply(get_destination, axis=1)","a53aa4f4":"df_sample.head()","6eff6ab2":"def get_sla(df):\n    sla = matrix[city_order.index(df['origin']), city_order.index(df['destination'])]\n    days = int(re.search(r'\\d', sla).group(0))\n    return days","a3c21b78":"df_sample['sla'] = df_sample.apply(get_sla, axis=1)","85adfd8b":"df_sample.head()","90b26ca2":"type(df_sample['pick'])","634d46d0":"type(df_delivery['pick'])","38f3a175":"## Convert all date column to date\npick = pd.to_datetime(df_sample['pick']+(8+24)*3600, unit='s').dt.date\nfirst_deliver = pd.to_datetime(df_sample['1st_deliver_attempt']+(8+24)*3600, unit='s').dt.date\nsecond_deliver = pd.to_datetime(df_sample['2nd_deliver_attempt']+(8+24)*3600, unit='s').dt.date","b4280948":"df_sample['pick'] = pick\ndf_sample['1st_deliver_attempt'] = first_deliver\ndf_sample['2nd_deliver_attempt'] = second_deliver","fbb15d22":"df_sample.head()","00ddd650":"## Initiate public holidays\npublic_holidays = [\"2020-03-08\", \"2020-03-25\", \"2020-03-30\", \"2020-03-31\"]","30662bd4":"np.busday_count('2020-03-08', '2020-03-10', holidays=public_holidays, weekmask=[1,1,1,1,1,1,0])","3e430e57":"def get_busday_first(df):\n    create_date = str(df['pick'])\n    resolve_date = str(df['1st_deliver_attempt'])\n\n    create_datetime = datetime.strptime(create_date, '%Y-%m-%d')\n    resolve_datetime = datetime.strptime(resolve_date, '%Y-%m-%d')\n\n    busday = np.busday_count(create_date, resolve_date, holidays=public_holidays, weekmask=[1,1,1,1,1,1,0])\n\n    return busday    ","07a8eb03":"df_sample['1st_deliver_days'] = df_sample.apply(get_busday_first, axis=1)","17d61ee9":"df_sample.head()","cddce3e7":"## Saving checkpoint\n# import pickle\n# pickle.dump(df_sample, open(\"1st_fullfilment.pickle\", \"wb\"))","897b31b9":"def get_busday_second(df):\n    create_date = str(df['1st_deliver_attempt'])\n    resolve_date = str(df['2nd_deliver_attempt'])\n    \n    if resolve_date == 'NaT':\n        resolve_date = create_date\n\n    create_datetime = datetime.strptime(create_date, '%Y-%m-%d')\n    resolve_datetime = datetime.strptime(resolve_date, '%Y-%m-%d')\n\n    busday = np.busday_count(create_date, resolve_date, holidays=public_holidays, weekmask=[1,1,1,1,1,1,0])\n\n    return busday   ","61fad52e":"df_sample['2nd_deliver_days'] = df_sample.apply(get_busday_second, axis=1)","a9f40c7d":"df_sample.head()","bdd6d2e3":"## Saving checkpoint\n# import pickle\n# pickle.dump(df_sample, open(\"2nd_fullfilment.pickle\", \"wb\"))","40a15a2c":"not_late_df = df_sample[(df_sample['1st_deliver_days'] <= df_sample['sla']) & (df_sample['2nd_deliver_days'] <= 3)][['orderid']]\nnot_late_df['is_late'] = 0\nnot_late_df.head()","d91ade32":"late_df = df_sample[~df_sample['orderid'].isin(not_late_df['orderid'])][['orderid']]\nlate_df['is_late'] = 1\nlate_df.head()","f2581e4f":"not_late_df.orderid.nunique() + late_df.orderid.nunique()","146fa3b4":"res_df = pd.concat([late_df, not_late_df], axis=0)\nres_df.head()","f0771edc":"#### Export solution\nres_df.to_csv(\"solution_logistics_bahy_sample.csv\", index=False)","1b9dd077":"test = pd.read_csv(\"solution_logistics_bahy_sample.csv\")\ntest.head()","7b3cc2db":"test.shape","428fa569":"df_delivery.head()","9dade7f2":"df_delivery.count()","19c7502a":"df_delivery['origin'] = df_delivery.apply(get_origin, axis=1)\ndf_delivery['destination'] = df_delivery.apply(get_destination, axis=1)","50df18f6":"df_delivery['sla'] = df_delivery.apply(get_sla, axis=1)","705f4a9a":"pick = pd.to_datetime(df_delivery['pick']+(8+24)*3600, unit='s').dt.date\nfirst_deliver = pd.to_datetime(df_delivery['1st_deliver_attempt']+(8+24)*3600, unit='s').dt.date\nsecond_deliver = pd.to_datetime(df_delivery['2nd_deliver_attempt']+(8+24)*3600, unit='s').dt.date","0a1933dc":"pick.shape","1f834fce":"pick.count()","db9934bd":"df_delivery['pick'] = pick\ndf_delivery['1st_deliver_attempt'] = first_deliver\ndf_delivery['2nd_deliver_attempt'] = second_deliver","fbd32e82":"public_holidays = [\"2020-03-08\", \"2020-03-25\", \"2020-03-30\", \"2020-03-31\"]","33b8ee07":"df_delivery['1st_deliver_days'] = df_delivery.apply(get_busday_first, axis=1)","26d5112a":"df_delivery['2nd_deliver_days'] = df_delivery.apply(get_busday_second, axis=1)","f8ab238e":"# not_late_df = df_sample[(df_sample['1st_deliver_days'] <= df_sample['sla']) & (df_sample['2nd_deliver_days'] <= 3)][['orderid']]\n# not_late_df['is_late'] = 0\nnot_late_df = df_delivery[(df_delivery['1st_deliver_days'] <= df_delivery['sla']) & (df_delivery['2nd_deliver_days'] <= 3)][['orderid']]\nnot_late_df['is_late'] = 0","c2c5c64d":"# late_df = df_sample[~df_sample['orderid'].isin(not_late_df['orderid'])][['orderid']]\n# late_df['is_late'] = 1\nlate_df = df_delivery[~df_delivery['orderid'].isin(not_late_df['orderid'])][['orderid']]\nlate_df['is_late'] = 1","2c81e9b3":"res_df = pd.concat([late_df, not_late_df], axis=0)","044a3294":"#### Export solution\nres_df.to_csv(\"solution_logistics_bahy.csv\", index=False)","065a72d0":"res_df.count()","34758dd9":"df_delivery.loc[df_delivery.orderid==2230338585]","04faa89a":"df_delivery.buyeraddress[191268]","93b0c025":"* This a modified version of the original work. It gives a score of 1.0.\n* Modifing datetime to GMT+8 by adding 8\/times3600sec, and counting the last day instead of the 1st day by adding 24 hours to all dates, the score would be 0.99990.\n* Adding spaces to front and back of the city names, buyeraddress and selleraddress the score would be 1.0.","230bdd07":"#### Check for 2nd SLA fullfilment","5101abad":"#### Find origin, destination, SLA","4e02b075":"#### Decide late\/not late","cfd50d7c":"### Run all below cells as \"Code\" to export the solution for sample\/all data","1f77aff2":"#### Create sample df","addc2af6":"#### Test to all data\nJust replace all the cells below to a Code cell to run it on all data","b1023b28":"#### Check for first SLA fullfilment"}}