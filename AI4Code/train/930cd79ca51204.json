{"cell_type":{"319c98af":"code","27d3e0ab":"code","f14730b3":"code","226f1f39":"code","ed01a988":"code","a9a61567":"code","e5bf04d0":"code","d3f22590":"code","6826cf1a":"code","b88293f2":"code","f9e579af":"code","3f4bb4e1":"markdown","bf666dc8":"markdown","592e688d":"markdown","66cb3cdb":"markdown","add18c8a":"markdown","92717ad2":"markdown","4dfd5086":"markdown","7d88bad9":"markdown","67f2a18f":"markdown","da347142":"markdown","9db022e1":"markdown"},"source":{"319c98af":"import pandas as pd\npd.plotting.register_matplotlib_converters()\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np","27d3e0ab":"gapminder_filepath = \"..\/input\/gapminder - gapminder.csv\"\ngapminder_data = pd.read_csv(gapminder_filepath, index_col='country')\ngapminder_data.head()","f14730b3":"plt.plot(gapminder_data.gdp_cap, gapminder_data.life_exp)\nplt.show()","226f1f39":"plt.scatter(gapminder_data.gdp_cap, gapminder_data.life_exp)\n#A correlation will become clear, when you display the GDP per capita on a logarithmic scale\nplt.xscale('log')\nplt.show()","ed01a988":"plt.hist(gapminder_data.life_exp)\nplt.show()","a9a61567":"#with more bins for clear visibility\nplt.hist(gapminder_data.life_exp, bins=20)\nplt.show()","e5bf04d0":"plt.scatter(gapminder_data.gdp_cap, gapminder_data.life_exp)\nplt.xscale('log')\nplt.xlabel('GDP per Capita [in USD]')\nplt.ylabel('Life Expectancy [in years]')\nplt.title('World Development in 2007')\nplt.show()","d3f22590":"plt.scatter(gapminder_data.gdp_cap, gapminder_data.life_exp)\nplt.xscale('log')\nplt.xlabel('GDP per Capita [in USD]')\nplt.ylabel('Life Expectancy [in years]')\nplt.title('World Development in 2007')\nplt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])\nplt.show()","6826cf1a":"# Store population as a numpy array: np_pop\nnp_pop = np.array(gapminder_data.population)\nnp_pop2 = np_pop*2\n#Use seaborn scatterplot for better customization\nsns.scatterplot(gapminder_data['gdp_cap'], gapminder_data['life_exp'], hue = gapminder_data['continent'], size = np_pop2, sizes=(20,400))\nplt.grid(True)\nplt.xscale('log')\nplt.xlabel('GDP per Capita [in USD]')\nplt.ylabel('Life Expectancy [in years]')\nplt.title('World Development in 2007')\nplt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])\nplt.show()","b88293f2":"# Increase the graph size\nplt.figure(dpi=150)\n# Store population as a numpy array: np_pop\nnp_pop = np.array(gapminder_data.population)\nnp_pop2 = np_pop*2\n#Let's delete the annoying legend\nsns.scatterplot(gapminder_data['gdp_cap'], gapminder_data['life_exp'], hue = gapminder_data['continent'], size=np_pop2, sizes=(20,400), legend = False)\nplt.grid(True)\nplt.xscale('log')\nplt.xlabel('GDP per Capita [in USD]', fontsize = 14)\nplt.ylabel('Life Expectancy [in years]', fontsize = 14)\nplt.title('World Development in 2007', fontsize = 20)\nplt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])\nplt.show()","f9e579af":"# Increase the graph size\nplt.figure(dpi=150)\n# Store population as a numpy array: np_pop\nnp_pop = np.array(gapminder_data.population)\nnp_pop2 = np_pop*2\n#Let's change the opacity \nsns.scatterplot(gapminder_data['gdp_cap'], gapminder_data['life_exp'], hue = gapminder_data['continent'], legend = False, \n                size=np_pop2, sizes=(20,500), alpha = 0.8)\nplt.grid(True)\nplt.xscale('log')\nplt.xlabel('GDP per Capita [in USD]', fontsize = 14)\nplt.ylabel('Life Expectancy [in years]', fontsize = 14)\nplt.title('World Development in 2007', fontsize = 20)\nplt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])\n#Add description to the biggest countries\nplt.text(1550, 67, 'India')\nplt.text(5650, 75, 'China')\nplt.show()","3f4bb4e1":"But this doesn't look right. \ud83d\ude02\n\nFor this type of comparison - let's make a simple scatter plot.","bf666dc8":"Let's increase the size of the graph and fonts of the labels. Remove the legend.","592e688d":"**Can we draw any conclutions?**\n\nThe higher GDP usually corresponds to a higher life expectancy. In other words, there is a positive correlation.","66cb3cdb":"This is looking more and more like Hans Rosling's plot! \ud83e\udd73","add18c8a":"Let's make a simple line plot from our data. ","92717ad2":"4. Let's get back to our scatter plot and improve it.","4dfd5086":"Let's replace the tick values 1000, 10000 and 100000 with 1k, 10k and 100k. ","7d88bad9":"Wouldn't it be nice if the size of the dots corresponds to the population?","67f2a18f":"Let's create a histogram of life expectancy.","da347142":"Let's add some description to the biggest countries. ","9db022e1":"**This Notebook made as a first try and exploration of the pandas and seaborn visualiazation features.**"}}