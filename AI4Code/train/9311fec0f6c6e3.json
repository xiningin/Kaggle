{"cell_type":{"944ae9f6":"code","8d2c08b5":"code","5c2cc535":"code","ffc9175b":"code","99f940de":"code","7d66cd11":"code","67f5f1da":"code","b3e9b45c":"code","50b682f7":"code","12a5e494":"code","1466db93":"code","4f87df2c":"code","50992a6c":"code","4e0e41ab":"code","1804b96e":"code","b7366ced":"code","2d02c2e2":"code","bb546146":"code","0f52b396":"code","418c268d":"code","7632f560":"code","7c18f434":"code","c6f0b256":"code","d0f28f67":"code","9d552905":"code","b695cd11":"code","7899ec92":"code","21e37848":"code","90750753":"code","b6dadc11":"code","bdb0a932":"code","5f39cc2c":"code","4a4d16f8":"code","81f2093b":"code","e9407989":"code","52b22f00":"code","7f1a6e9f":"code","75fb750b":"markdown","328ee417":"markdown","cb2f8bb3":"markdown","9862d1b4":"markdown"},"source":{"944ae9f6":"import tensorflow as tf\nimport keras as ks","8d2c08b5":"print(ks.__version__,tf.__version__)","5c2cc535":"fashion_mnist = ks.datasets.fashion_mnist","ffc9175b":"(x_train_full,y_train_full),(x_test,y_test) = fashion_mnist.load_data()","99f940de":"x_train_full.shape","7d66cd11":"x_train_full.dtype","67f5f1da":"x_valid,x_train = x_train_full[:5000]\/255,x_train_full[5000:]\/255\ny_valid,y_train = y_train_full[:5000],y_train_full[5000:]","b3e9b45c":"class_names = [\"T-shirt\/top\", \"Trouser\", \"Pullover\", \"Dress\", \"Coat\",\n               \"Sandal\", \"Shirt\", \"Sneaker\", \"Bag\", \"Ankle boot\"]    \n#Outputs are in index of class_names, 4 represents coat. predefined","50b682f7":"print(y_train[0])\nclass_names[y_train[0]]","12a5e494":"#Using sequential API\nmodel = ks.models.Sequential()","1466db93":"#Adding layers\nmodel.add(ks.layers.Flatten(input_shape=[28,28])) #do this or just add a simple layer but flattened inputs.(2d to 1d)\nmodel.add(ks.layers.Dense(300,activation=\"relu\"))\nmodel.add(ks.layers.Dense(100,activation=\"relu\"))\nmodel.add(ks.layers.Dense(10,activation=\"softmax\"))#10 classes \n#use soft max for multiclass classificaiton (exclusive classes output).It will make sure that probablity adds upto 1.","4f87df2c":"model.summary()","50992a6c":"#fetch layer informaiton and weights for conneciton and bias\nhidden1 = model.layers[1]","4e0e41ab":"hidden1.name","1804b96e":"weights,biases = hidden1.get_weights()\nweights","b7366ced":"biases","2d02c2e2":"weights.shape","bb546146":"biases.shape","0f52b396":"#Compile the model created earlier.\n#set optimisation, cost funciton and metric to be used\nmodel.compile(loss=\"sparse_categorical_crossentropy\",\n             optimizer=\"sgd\",\n             metrics=[\"accuracy\"])","418c268d":"#Training and evaluation\nhistory = model.fit(x_train,y_train,epochs=30,validation_data=(x_valid,y_valid))","7632f560":"#Performance checking\nimport pandas as pd\nimport matplotlib.pyplot as plt\n","7c18f434":"pd.DataFrame(history.history).plot(figsize=(10,8))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.savefig(\"Performance on fashion mnist.jpeg\")\nplt.show()\n","c6f0b256":"#Evaluate\nmodel.evaluate(x=x_test,y=y_test)","d0f28f67":"#make prediciotns\nx_new = x_test[:3]\ny_proba = model.predict(x_new)  #gives probability distribution\ny_proba.round(2)","9d552905":"#for classes\ny_pred = model.predict_classes(x_new)\ny_pred","b695cd11":"#convert list into array and use index from above\nimport numpy as np\nnp.array(class_names)[y_pred]","7899ec92":"#check\ny_new = y_test[:3]\ny_new","21e37848":"def arraytoimage(index):\n    img = x_test[index].reshape((x_test[index].shape[0], x_test[index].shape[1], 1))\n    return ks.preprocessing.image.array_to_img(img,scale=True)\n\nfor i in range(len(class_names)):\n    print(str(i)+\":\",class_names[i])\n    arraytoimage(i)\n    ","90750753":"arraytoimage(1)  #input is not a class index but row number or instance under x_test","b6dadc11":"from sklearn.datasets import fetch_california_housing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","bdb0a932":"housing = fetch_california_housing()","5f39cc2c":"x_train_full,x_test,y_train_full,y_test = train_test_split(housing.data,housing.target)\nx_train,x_valid,y_train,y_valid = train_test_split(x_train_full,y_train_full)\n","4a4d16f8":"scaler = StandardScaler()","81f2093b":"x_train = scaler.fit_transform(x_train)\nx_valid = scaler.transform(x_valid)\nx_test = scaler.transform(x_test)","e9407989":"model = ks.models.Sequential([ks.layers.Dense(30,activation=\"relu\",input_shape=x_train.shape[1:]),\n                             ks.layers.Dense(1)])\nmodel.compile(loss=\"mean_squared_error\",optimizer=\"sgd\")\nhistory = model.fit(x_train,y_train,epochs=20,\n                   validation_data=(x_valid,y_valid))\nmse_test = model.evaluate(x_test,y_test)\nx_new = x_test[:3]\ny_pred = model.predict(x_new)","52b22f00":"y_pred","7f1a6e9f":"y_test[:3]","75fb750b":"## Regression MLP using sequential API","328ee417":"One wrong prediciton because curves say that they are overfitted.","cb2f8bb3":"Model predicted coat for a pullover. ","9862d1b4":"Unlike mnist, fashion mnist contains array of 28 x 28 features, a 2D array. intensity is laso varries betwenn 0 to 255 integers. \nThere is no validation set in dataset but train and test is there. We will transform the intensity for simplicity and create a valdiaiton dataset as well."}}