{"cell_type":{"68ef4682":"code","f255281c":"code","286c393e":"code","91aef763":"code","9aec31a1":"code","923b33f9":"markdown","9d1de276":"markdown","291432aa":"markdown","05f26578":"markdown"},"source":{"68ef4682":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f255281c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import LinearSVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.impute import KNNImputer, SimpleImputer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import fbeta_score\nfrom sklearn.metrics import make_scorer\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nfrom sklearn.preprocessing import OneHotEncoder, MinMaxScaler, RobustScaler","286c393e":"# import all stock prices \ndf = pd.read_csv(\"\/kaggle\/input\/nyse\/prices-split-adjusted.csv\", index_col = 0)\ndf.info()\ndf.head()\n\n# number of different stocks\nprint('number of different stocks: ', len(list(set(df.symbol))))\nprint(list(set(df.symbol))[:10])","91aef763":"from datetime import datetime\n\ndf = df.reset_index()\ndf['date'] = df['date'].apply(lambda x : datetime.strptime(x ,'%Y-%m-%d')) \ndf = df.sort_values(['date', 'symbol']).set_index('date')","9aec31a1":"df_symbol = df[df['symbol'] == 'EQIX']\ndf_symbol.head(5)","923b33f9":"# 4. Train model","9d1de276":"# 1. Import Libary","291432aa":"# 3. Feature Engineering","05f26578":"# 2. Analyze data"}}