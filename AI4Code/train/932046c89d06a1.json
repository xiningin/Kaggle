{"cell_type":{"bf03e4f6":"code","09a50e89":"code","fbc2ba94":"code","e144e4ab":"code","75b0a372":"code","3593ab36":"code","07d82c56":"code","a1c37c33":"code","3e25ab1a":"code","5513c880":"code","10822130":"code","0bf010e1":"code","8b1d36c0":"code","03f05419":"code","9ebe1f38":"code","658763c2":"code","4e41414d":"code","74264d96":"code","396693a5":"code","16d56293":"code","a41a41a6":"code","f8d1d17d":"code","41545b90":"markdown","169e31f5":"markdown","6a542f4c":"markdown","e1c240f9":"markdown","a0c58e69":"markdown","95de368d":"markdown","2afdc95f":"markdown","d34d5af7":"markdown","28d8a094":"markdown","784a7f4a":"markdown","ec0b15b0":"markdown"},"source":{"bf03e4f6":"import seaborn as sns\nimport pandas as pd\nimport numpy as np\nimport matplotlib as pyplot\n%matplotlib inline\n\niris = pd.read_csv('\/kaggle\/input\/iris\/Iris.csv')\n","09a50e89":"iris.head()","fbc2ba94":"iris.tail()","e144e4ab":"# create pairplot of the dataset, which flower species seems to be most separable","75b0a372":"sns.pairplot(iris, hue='Species')","3593ab36":"# create a kde plot of sepal_length versus sepal width for sentosa species of flower","07d82c56":"setosa= iris[iris['Species']=='setosa']sns.kdeplot(setosa['sepal_width'],setosa['sepal_length'],cmap='plasma',shade=True)","a1c37c33":"from sklearn.model_selection import train_test_split ","3e25ab1a":"X=iris.drop('Species',axis=1)\ny=iris['Species']\nX_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.3)","5513c880":"from sklearn.svm import SVC","10822130":"svc_model = SVC()","0bf010e1":"svc_model.fit(X_train, y_train)","8b1d36c0":"prediction =svc_model.predict(X_test)","03f05419":"from sklearn.metrics import classification_report,confusion_matrix","9ebe1f38":"print(confusion_matrix(y_test,prediction))","658763c2":"print(classification_report(y_test, prediction))","4e41414d":"from sklearn.model_selection import GridSearchCV","74264d96":"param_grid ={'C':[0.1,1,10,100],'gamma':[1,0.1,0.01,0.001]}","396693a5":"grid =GridSearchCV(SVC(),param_grid,verbose=2)\ngrid.fit(X_train,y_train)","16d56293":"grid_predictions=grid.predict(X_test)","a41a41a6":"print(confusion_matrix(y_test, grid_predictions))","f8d1d17d":"print(classification_report(y_test,grid_predictions))","41545b90":"**** Importing the Libraries and Loading the dataset","169e31f5":"setosa= iris[iris['Species']=='setosa']\nsns.kdeplot(setosa['sepal_width'],setosa['sepal_length'],cmap='plasma',shade=True)","6a542f4c":"Model Evaluation","e1c240f9":"Create a GridSearchCV object and fit it to the training data","a0c58e69":"Grid search","95de368d":"Create a dict called param_grid and fillout some parameters for C and gamma","2afdc95f":"Train Model","d34d5af7":"Getting the Headings","28d8a094":"Now take taht grid model and create some predictios using the test set and create classification report and classification reports and confusion metrics for them.","784a7f4a":"# train test split","ec0b15b0":"#now get predictions from the model and create a confusion matrix and a aclassification report"}}