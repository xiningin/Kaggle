{"cell_type":{"7da8584e":"code","1a04f289":"code","5918cd3e":"code","c5a820d8":"code","6d9de79c":"code","da3ba1ce":"code","b30410ea":"code","0d36fd11":"code","e2fda2f4":"code","3ca525ae":"code","6e3ee284":"code","067dac07":"code","7c9a3f60":"code","24521a67":"code","95df3baa":"code","218acec9":"code","981725f9":"code","df11f207":"code","c8326fe1":"code","3e8c5ade":"code","bd38031b":"code","9dacced1":"code","476c0ba0":"code","91433c36":"code","44c6748c":"code","95984739":"code","a215b08f":"code","2f988d57":"code","905098e5":"code","91edb795":"code","df077e76":"markdown","b615d9cc":"markdown","1a75f134":"markdown"},"source":{"7da8584e":"#importing libraries\nimport numpy as np\nimport pandas as pd\n\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport matplotlib.pylab as pylab\n%matplotlib inline\nplt.style.use('ggplot')\npylab.rcParams['figure.figsize'] = 12,8\n\nimport seaborn as sns\nsns.set(style='darkgrid')\n\n\nfrom sklearn import linear_model\nfrom sklearn.model_selection import train_test_split\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n\n","1a04f289":"#Read the dataset\ntrain_data = pd.read_csv('..\/input\/dsn-ai-oau-july-challenge\/train.csv')\ntest_data = pd.read_csv('..\/input\/dsn-ai-oau-july-challenge\/test.csv')","5918cd3e":"train_data.shape","c5a820d8":"train_data.head(10)","6d9de79c":"#All null values present in the train dataset\ntrain_data.isnull().sum()","da3ba1ce":"#print duplicates\nprint('Duplicated entries:',train_data.duplicated().sum())","b30410ea":"#Value counts of product fat content\ntrain_data['Product_Fat_Content'].value_counts()","0d36fd11":"#Finding the mean weight value based on product weight\ndata = train_data[['Product_Fat_Content','Product_Weight']]\ndata_grp = data.groupby(['Product_Fat_Content'])\ndata_grp.describe()","e2fda2f4":"#Replacing null values of product weight with their respective means based on product fat content\nLF = train_data['Product_Fat_Content'] == 'Low Fat'\nNF = train_data['Product_Fat_Content'] == 'Normal Fat'\nULF = train_data['Product_Fat_Content'] == 'Ultra Low fat'\n\ntrain_data.loc[LF,'Product_Weight'] = train_data.loc[LF,'Product_Weight'].fillna(train_data.loc[LF,'Product_Weight'].mean())\ntrain_data.loc[NF,'Product_Weight'] = train_data.loc[NF,'Product_Weight'].fillna(train_data.loc[NF,'Product_Weight'].mean())\ntrain_data.loc[ULF,'Product_Weight'] = train_data.loc[ULF,'Product_Weight'].fillna(train_data.loc[ULF,'Product_Weight'].mean())","3ca525ae":"#print first 10 rows of train dataset\ntrain_data.head(10)","6e3ee284":"#confirming all null values for product weight have been filled\ntrain_data.isnull().sum()","067dac07":"#drop ID values\ntrain_data.drop(columns=['Supermarket_Identifier','Product_Supermarket_Identifier','Product_Identifier'],inplace=True)","7c9a3f60":"train_data_copy = train_data.copy()","24521a67":"#fill supermarket missing values\ntrain_data['Supermarket _Size'].fillna(method='bfill', inplace=True)","95df3baa":"train_data","218acec9":"#all null values handled\ntrain_data.isnull().sum()","981725f9":"#Group by product type and fat content\nGrp_Type_Fat = train_data[:10].groupby(['Product_Type','Product_Fat_Content'])\nGrp_Type_Fat.first()","df11f207":"#crosstab of supermarket size with location type\npd.crosstab(train_data['Supermarket _Size'],train_data['Supermarket_Location_Type'],margins=True)","c8326fe1":"#Create a pivot table\npd.pivot_table(train_data,index=['Supermarket_Opening_Year'], values='Product_Supermarket_Sales')","3e8c5ade":"#Create another pivot table including the supermarket size, location and opening year\npd.pivot_table(train_data, index=['Supermarket_Opening_Year','Supermarket _Size','Supermarket_Location_Type'],values='Product_Supermarket_Sales',aggfunc=[np.mean, np.median, min, max, np.std])","bd38031b":"fig_dims = (25, 8)\nfig, ax = plt.subplots(figsize=fig_dims)\nsns.barplot(x='Product_Type', y='Product_Price',ax=ax, data=train_data)","9dacced1":"sns.lineplot(x='Product_Weight', y='Product_Price', data=train_data)","476c0ba0":"sns.lineplot(x='Supermarket_Opening_Year', y='Product_Supermarket_Sales',data=train_data)","91433c36":"sns.barplot(x='Product_Fat_Content', y='Product_Supermarket_Sales',data=train_data)","44c6748c":"sns.barplot(x='Supermarket_Opening_Year', y='Product_Supermarket_Sales',data=train_data)","95984739":"sns.boxplot(train_data['Product_Supermarket_Sales'], orient='vertical')","a215b08f":"sns.lineplot(x='Supermarket_Opening_Year', y='Product_Price',data=train_data)","2f988d57":"sns.catplot(data=train_data, x='Supermarket_Opening_Year', y='Product_Supermarket_Sales', row='Product_Fat_Content', kind='swarm', height=3, aspect=4)","905098e5":"sns.heatmap(train_data.corr(), annot = True, fmt = '.1g',vmin = -1, vmax = 1, center = 0, cmap = 'coolwarm', linewidths = 2, linecolor = 'black')","91edb795":"train_data.hist()\nplt.tight_layout()","df077e76":"# Data Visualisation","b615d9cc":"# Exploratory Data Analysis","1a75f134":"# DSN July Challenge"}}