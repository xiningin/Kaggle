{"cell_type":{"d155d04d":"code","713abcc4":"code","a939806a":"code","02414c82":"code","e7057068":"code","ab135a4e":"code","b391e45f":"code","e5cc4bd7":"code","42771aaf":"code","cb651463":"code","e10f5fcf":"code","24e5cecb":"code","7079ad86":"code","6dd638c3":"code","dba12a2e":"code","254173e3":"code","b773e973":"code","7c62fcaa":"code","29de6f63":"code","c408b043":"code","06bc9915":"code","973fefe6":"code","eb41afa4":"code","49b8f8c6":"code","ff0b7a1b":"code","0d247001":"code","2250a5a0":"code","93c75520":"code","adb96d88":"code","d4e8d1cd":"code","efaecee5":"code","4c3f0b4e":"markdown","b0f4b3f2":"markdown","2c537609":"markdown","cdc7f33d":"markdown","26ce52be":"markdown","b3c521be":"markdown","ced0aaa2":"markdown","1df73bf7":"markdown","8c470fe0":"markdown","4aac9303":"markdown","52d0ee61":"markdown","e41a8cb1":"markdown","183ec871":"markdown","68406bd7":"markdown","4d6f0f02":"markdown","9d0a8a3b":"markdown","ccc0457e":"markdown","26afe0ca":"markdown","6b066ce3":"markdown","79c5aca6":"markdown","9f52591a":"markdown","55e26a47":"markdown","d36e7b4f":"markdown","c0a17dff":"markdown","55ba6e02":"markdown","6f01e28b":"markdown","f3ddb2ea":"markdown","3d01afe5":"markdown"},"source":{"d155d04d":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","713abcc4":"df_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ndf_submit = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","a939806a":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\ndf_data.head()","02414c82":"# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\ndf_test.head()","e7057068":"#\u3000\u63d0\u51fa\u7528\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\ndf_submit.head()","ab135a4e":"df_data.describe()","b391e45f":"df_data.isnull().sum()","e5cc4bd7":"df_data['Survived'].value_counts().index","42771aaf":"\nplt.figure(figsize=(18,12))\nfor i,col in enumerate(['Survived','Pclass','Sex','SibSp','Parch','Embarked']):\n    #print(df_data[col].value_counts())\n    plt.subplot(3,3,i+1)\n    \n    plt.title(col)\n    plt.bar(df_data[col].value_counts().index,df_data[col].value_counts()\/df_data[col].value_counts().sum()*100)\n    \nplt.show()\n    ","cb651463":"# \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u751f\u5b58\u8005\u6570\u3092\u78ba\u8a8d\nnum_of_survive = df_data.Survived.sum()\nsurvice_rate = num_of_survive * 100 \/ df_data.shape[0]\nprint(f'\u751f\u5b58\u8005\u306f{num_of_survive}')\nprint('\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u751f\u5b58\u7387\u306f{:.2f}%'.format(survice_rate))\n","e10f5fcf":"# PClass\u6bce\u3067\u306e\u751f\u5b58\u8005\u306e\u5272\u5408\nplt.subplot(1,2,1)\n\nplt.title('Dead')\nplt.hist(df_data.Pclass[df_data.Survived == 0],bins=3)\n\nplt.subplot(1,2,2)\nplt.title('Survived')\nplt.hist(df_data.Pclass[df_data.Survived == 1],bins=3)\n\nplt.show\n\nD_class3 = df_data.Pclass[(df_data.Survived == 0) & (df_data.Pclass == 3)].count()\nS_class3 = df_data.Survived[(df_data.Survived == 1) & (df_data.Pclass == 3)].count()\nD_class2 = df_data.Pclass[(df_data.Survived == 0) & (df_data.Pclass == 2)].count()\nS_class2 = df_data.Survived[(df_data.Survived == 1) & (df_data.Pclass == 2)].count()\nD_class1 = df_data.Pclass[(df_data.Survived == 0) & (df_data.Pclass == 1)].count()\nS_class1 = df_data.Survived[(df_data.Survived == 1) & (df_data.Pclass == 1)].count()\n\nprint('\u5168\u4f53\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c3\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(df_data.Pclass[(df_data.Pclass == 3)].count()*100\/df_data.Pclass.count()))\nprint('\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c3\u306e\u4eba\u306e\u751f\u5b58\u306e\u5272\u5408{:.2f}%'.format(S_class3*100\/df_data.Survived[df_data.Pclass==3].count()))\nprint('\u6b7b\u4ea1\u3057\u305f\u4eba\u306e\u4e2d\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c3\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(D_class3*100\/df_data.Pclass[(df_data.Survived == 0)].count()))\nprint('\u5168\u4f53\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c2\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(df_data.Pclass[(df_data.Pclass == 2)].count()*100\/df_data.Pclass.count()))\nprint('\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c2\u306e\u4eba\u306e\u751f\u5b58\u306e\u5272\u5408{:.2f}%'.format(S_class2*100\/df_data.Survived[df_data.Pclass==2].count()))\nprint('\u6b7b\u4ea1\u3057\u305f\u4eba\u306e\u4e2d\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c2\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(D_class2*100\/df_data.Pclass[(df_data.Survived == 0)].count()))\nprint('\u5168\u4f53\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c1\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(df_data.Pclass[(df_data.Pclass == 1)].count()*100\/df_data.Pclass.count()))\nprint('\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c1\u306e\u4eba\u306e\u751f\u5b58\u306e\u5272\u5408{:.2f}%'.format(S_class1*100\/df_data.Survived[df_data.Pclass==1].count()))\nprint('\u6b7b\u4ea1\u3057\u305f\u4eba\u306e\u4e2d\u3067\u30c1\u30b1\u30c3\u30c8\u30af\u30e9\u30b9\u304c1\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(D_class1*100\/df_data.Pclass[(df_data.Survived == 0)].count()))","24e5cecb":"# PClass\u6bce\u3067\u306e\u751f\u5b58\u7387\n\nC1_S_rate = df_data.Survived[(df_data.Survived == 1) &  (df_data.Pclass == 1)].count()\/df_data.Survived[(df_data.Pclass == 1)].count()\nprint(C1_S_rate)\nC2_S_rate = df_data.Survived[(df_data.Survived == 1) &  (df_data.Pclass == 2)].count()\/df_data.Survived[(df_data.Pclass == 2)].count()\nprint(C2_S_rate)\nC3_S_rate = df_data.Survived[(df_data.Survived == 1) &  (df_data.Pclass == 3)].count()\/df_data.Survived[(df_data.Pclass == 3)].count()\nprint(C3_S_rate)\n\ndf_S_rate = pd.DataFrame(\n    [[C1_S_rate * 100,C2_S_rate * 100,C3_S_rate * 100]],columns=['Class 1','Class 2','Class 3']\n)\ndf_S_rate[:]\n\nplt.ylim(0,100)\nplt.title('Survive rate for the ticket class')\nplt.bar(['Class 1','Class 2','Class 3'],[C1_S_rate * 100,C2_S_rate * 100,C3_S_rate * 100])\nplt.show()","7079ad86":"df_data.Pclass[(df_data.Survived == 0) & (df_data.Pclass == 3)].count()","6dd638c3":"# \u6027\u5225\u3067\u306e\u751f\u5b58\u8005\u306e\u5272\u5408\nplt.subplot(1,2,1)\n\nplt.title('Dead')\nplt.hist(df_data.Sex[df_data.Survived == 0],bins=2)\n\nplt.subplot(1,2,2)\nplt.title('Survived')\nplt.hist(df_data.Sex[df_data.Survived == 1],bins=2)\n\nplt.show\n\n\nD_male = df_data.Pclass[(df_data.Survived == 0) & (df_data.Sex == 'male')].count()\nS_male = df_data.Survived[(df_data.Survived == 1) & (df_data.Sex == 'male')].count()\nD_female = df_data.Pclass[(df_data.Survived == 0) & (df_data.Sex == 'female')].count()\nS_female = df_data.Survived[(df_data.Survived == 1) & (df_data.Sex == 'female')].count()\n\n\nprint('\u5168\u4f53\u3067\u7537\u6027\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(df_data.Sex[(df_data.Sex == 'male')].count()*100\/df_data.Sex.count()))\nprint('\u7537\u6027\u306e\u4eba\u306e\u751f\u5b58\u306e\u5272\u5408{:.2f}%'.format(S_male*100\/df_data.Survived[df_data.Sex=='male'].count()))\nprint('\u6b7b\u4ea1\u3057\u305f\u4eba\u306e\u4e2d\u3067\u7537\u6027\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(D_male*100\/df_data.Sex[(df_data.Survived == 0)].count()))\nprint('\u5168\u4f53\u3067\u5973\u6027\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(df_data.Sex[(df_data.Sex == 'female')].count()*100\/df_data.Sex.count()))\nprint('\u5973\u6027\u306e\u4eba\u306e\u751f\u5b58\u306e\u5272\u5408{:.2f}%'.format(S_female*100\/df_data.Survived[df_data.Sex=='female'].count()))\nprint('\u6b7b\u4ea1\u3057\u305f\u4eba\u306e\u4e2d\u3067\u5973\u6027\u306e\u4eba\u306e\u5272\u5408{:.2f}%'.format(D_female*100\/df_data.Sex[(df_data.Survived == 0)].count()))","dba12a2e":"# \u6027\u5225\u6bce\u3067\u306e\u751f\u5b58\u7387\n\nM_S_rate = df_data.Survived[(df_data.Survived == 1) &  (df_data.Sex == 'male')].count()\/df_data.Survived[(df_data.Sex == 'male')].count()\nprint(M_S_rate)\nF_S_rate = df_data.Survived[(df_data.Survived == 1) &  (df_data.Sex == 'female')].count()\/df_data.Survived[(df_data.Sex == 'female')].count()\nprint(F_S_rate)\n\nplt.ylim(0,100)\nplt.title('Survive rate for sex')\nplt.bar(['Male','Female'],[M_S_rate * 100,F_S_rate * 100])\nplt.show()","254173e3":"# \u5e74\u4ee3\u5225\u306e\u751f\u5b58\u7387\u5206\u6790\nprint(df_data.Age.max())\n\nplt.title('Numbers for the age')\nplt.hist(df_data.Age,bins=[0,10,20,30,40,50,60,70,80,90])\n\nplt.show()\n\nplt.title('Suvivors for the age')\nplt.hist(df_data.Age[df_data.Survived == 1],bins=[0,10,20,30,40,50,60,70,80,90])\n\nplt.show()\n","b773e973":"#Uder10 = df_data.Age[df_data.Age < 10].count()\n#Uder20 = df_data.Age[(df_data.Age >= 10) & (df_data.Age < 20)].count()\n\ndef Survive_rate_range(df,maxrange):\n    if maxrange == 10:\n        return_rate = df_data.Age[(df.Age < 10) & (df.Survived == 1)].count() * 100 \/ df.Age[df_data.Age < 10].count()\n    else:\n        return_rate = df_data.Age[(df_data.Age >= (maxrange - 10)) & (df_data.Age < maxrange) & (df.Survived == 1)].count() * 100 \/ df.Age[(df_data.Age >= (maxrange - 10)) & (df_data.Age < maxrange)].count()\n    \n    return return_rate\n\n\nUnder10 = Survive_rate_range(df_data,10)\nUnder20 = Survive_rate_range(df_data,20)\nUnder30 = Survive_rate_range(df_data,30)\nUnder40 = Survive_rate_range(df_data,40)\nUnder50 = Survive_rate_range(df_data,50)\nUnder60 = Survive_rate_range(df_data,60)\nUnder70 = Survive_rate_range(df_data,70)\nUnder80 = Survive_rate_range(df_data,80)\nUnder90 = Survive_rate_range(df_data,90)\n\n\nplt.ylim(0,100)\nplt.title('Survive rate for age')\nplt.bar(['0','10','20','30','40','50','60','70','80'],[Under10,Under20,Under30,Under40,Under50,Under60,Under70,Under80,Under90])\nplt.show()","7c62fcaa":"# \u5144\u5f1f\u3001\u914d\u5076\u8005\u4e00\u7dd2\u306e\u4e57\u8239\u3057\u3066\u3044\u308b\u4eba\u306e\u751f\u5b58\u7387\nprint(df_data.SibSp.describe())\n\n# \u5144\u5f1f\u3001\u914d\u5076\u8005\u306e\u4eba\u6570\u3054\u3068\u306e\u751f\u5b58\u8005\u306e\u4eba\u6570\nplt.subplot(1,2,1)\n\nplt.title('Dead')\nplt.hist(df_data.SibSp[df_data.Survived == 0])\n\nplt.subplot(1,2,2)\nplt.title('Survived')\nplt.hist(df_data.SibSp[df_data.Survived == 1])\n\nplt.show\n","29de6f63":"# \u5144\u5f1f\u3001\u914d\u5076\u8005\u306e\u4eba\u6570\u3054\u3068\u306e\u751f\u5b58\u7387\n\nSrate_SibSp = [df_data.SibSp[(df_data.SibSp == i) & (df_data.Survived == 1)].count() * 100\/df_data.SibSp[df_data.SibSp == i].count() for i in range(9)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for SibSp')\nplt.bar(['0','1','2','3','4','5','6','7','8'],Srate_SibSp)\nplt.show()\n","c408b043":"# \u89aa\u5b50\u4e00\u7dd2\u306e\u4e57\u8239\u3057\u3066\u3044\u308b\u4eba\u306e\u751f\u5b58\u7387\nprint(df_data.Parch.describe())\n\n# \u89aa\u5b50\u306e\u4eba\u6570\u3054\u3068\u306e\u751f\u5b58\u8005\u306e\u4eba\u6570\nplt.subplot(1,2,1)\n\nplt.title('Dead')\nplt.hist(df_data.Parch[df_data.Survived == 0])\n\nplt.subplot(1,2,2)\nplt.title('Survived')\nplt.hist(df_data.Parch[df_data.Survived == 1])\n\nplt.show","06bc9915":"# \u5144\u5f1f\u3001\u914d\u5076\u8005\u306e\u4eba\u6570\u3054\u3068\u306e\u751f\u5b58\u7387\n\nSrate_Parch = [df_data.Parch[(df_data.Parch == i) & (df_data.Survived == 1)].count() * 100\/df_data.Parch[df_data.Parch == i].count() for i in range(7)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for Parch')\nplt.bar(['0','1','2','3','4','5','6'],Srate_Parch)\nplt.show()","973fefe6":"#\u30c1\u30b1\u30c3\u30c8\u306e\u7a2e\u985e\u306b\u3064\u3044\u3066\nprint(df_data.Ticket.describe())\n","eb41afa4":"#\u30c1\u30b1\u30c3\u30c8\u306e\u4fa1\u683c\u306b\u3064\u3044\u3066\nprint(df_data.Fare.describe())\n\nprint('\u751f\u5b58\u8005\u30c7\u30fc\u30bf')\nprint(df_data.Fare[df_data.Survived==1].describe())\nprint('\u6b7b\u4ea1\u8005\u30c7\u30fc\u30bf')\nprint(df_data.Fare[df_data.Survived==0].describe())\n\n\n#\u751f\u5b58\u8005\u3001\u6b7b\u4ea1\u8005\u306e\u30c1\u30b1\u30c3\u30c8\u4fa1\u683c\u3092\u30d7\u30ed\u30c3\u30c8\n\nplt.boxplot([df_data.Fare[df_data.Survived==1], df_data.Fare[df_data.Survived==0]], labels=['Survive', 'Dead'])\nplt.show()\n\n","49b8f8c6":"# \u30ad\u30e3\u30d3\u30f3\u306e\u5206\u6790\nprint(df_data.Cabin.describe())","ff0b7a1b":"# \u4e57\u8239\u5024\u3054\u3068\u306e\u5206\u6790\n\nprint(df_data.Embarked.describe())\n\n\n# \u4e57\u8239\u5024\u306e\u751f\u5b58\u7387\n\nSrate_Embarked = [df_data.Embarked[(df_data.Embarked == n) & (df_data.Survived == 1)].count() * 100\/df_data.Embarked[df_data.Embarked == n].count() for n in df_data.Embarked.unique()]\n\nplt.ylim(0,100)\nplt.title('Survive rate for Parch')\nplt.bar(['S','C','Q','nan'],Srate_Embarked)\nplt.show()","0d247001":"df_data['Miss'] = [1 if 'Miss.' in x else 0 for x in df_data.Name]\ndf_data['Mrs'] = [1 if 'Mrs.' in x else 0 for x in df_data.Name]\ndf_data['Mr'] = [1 if 'Mr.' in x else 0 for x in df_data.Name]","2250a5a0":"df_data.Miss.sum() + df_data.Mrs.sum() + df_data.Mr.sum()","93c75520":"df_data[(df_data.Miss == 0) & (df_data.Mrs == 0) & (df_data.Mr == 0)]","adb96d88":"# \u656c\u79f0\u6bce\u306e\u751f\u5b58\u8005\u306e\u78ba\u7387\n\nSrate_Miss = [df_data.Miss[(df_data.Miss == i) & (df_data.Survived == 1)].count() * 100\/df_data.Parch[df_data.Miss == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for Miss')\nplt.bar(['Others','Miss'],Srate_Miss)\nplt.show()\n\nSrate_Mrs = [df_data.Mrs[(df_data.Mrs == i) & (df_data.Survived == 1)].count() * 100\/df_data.Parch[df_data.Mrs == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for Mrs')\nplt.bar(['Others','Mres'],Srate_Mrs)\nplt.show()\n\nSrate_Mr = [df_data.Mr[(df_data.Mr == i) & (df_data.Survived == 1)].count() * 100\/df_data.Parch[df_data.Mr == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for Mr')\nplt.bar(['Others','Mr'],Srate_Mr)\nplt.show()","d4e8d1cd":"# \u30ad\u30e3\u30d3\u30f3\u306e\u540d\u524d\u306bA-G\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u5206\u96e2\ndf_data['Cabin_A'] = [1 if 'A' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_B'] = [1 if 'B' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_C'] = [1 if 'C' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_D'] = [1 if 'D' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_E'] = [1 if 'E' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_F'] = [1 if 'F' in str(x) else 0 for x in df_data.Cabin]\ndf_data['Cabin_G'] = [1 if 'G' in str(x) else 0 for x in df_data.Cabin]","efaecee5":"# \u30ad\u30e3\u30d3\u30f3\u7a2e\u5225\u6bce\u306e\u751f\u5b58\u7387\u306e\u78ba\u7387\n\nSrate_CabinA = [df_data.Cabin_A[(df_data.Cabin_A == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_A[df_data.Cabin_A == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinA')\nplt.bar(['Others','CabinA'],Srate_CabinA)\nplt.show()\n\nSrate_CabinB = [df_data.Cabin_B[(df_data.Cabin_B == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_B[df_data.Cabin_B == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinB')\nplt.bar(['Others','CabinB'],Srate_CabinB)\nplt.show()\n\nSrate_CabinC = [df_data.Cabin_C[(df_data.Cabin_C == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_C[df_data.Cabin_C == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinC')\nplt.bar(['Others','CabinC'],Srate_CabinC)\nplt.show()\n\nSrate_CabinD = [df_data.Cabin_D[(df_data.Cabin_D == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_D[df_data.Cabin_D == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinD')\nplt.bar(['Others','CabinD'],Srate_CabinD)\nplt.show()\n\nSrate_CabinE = [df_data.Cabin_E[(df_data.Cabin_E == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_E[df_data.Cabin_E == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinE')\nplt.bar(['Others','CabinE'],Srate_CabinE)\nplt.show()\n\nSrate_CabinF = [df_data.Cabin_F[(df_data.Cabin_F == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_F[df_data.Cabin_F == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinF')\nplt.bar(['Others','CabinF'],Srate_CabinF)\nplt.show()\n\nSrate_CabinG = [df_data.Cabin_G[(df_data.Cabin_G == i) & (df_data.Survived == 1)].count() * 100\/df_data.Cabin_G[df_data.Cabin_G == i].count() for i in range(2)]\n\nplt.ylim(0,100)\nplt.title('Survive rate for CabinG')\nplt.bar(['Others','CabinG'],Srate_CabinG)\nplt.show()","4c3f0b4e":"\u656c\u79f0\u306a\u3057\u306e\u4eba\u306f\u5b50\u4f9b\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u5b50\u4f9b\u3060\u3051\u3068\u306f\u8a00\u3044\u5207\u308c\u306a\u3044\u3002","b0f4b3f2":"# EDA for titanic competition\n\n## Import package","2c537609":"### \u6b20\u640d\u5024\u3082\u591a\u304f\u3001\u91cd\u8907\u30c7\u30fc\u30bf\u3082\u5c11\u306a\u3044\u307e\u305f\u3001\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u3082\u306a\u3044\u306e\u3067\u4eca\u56de\u306f\u5206\u6790\u5bfe\u8c61\u304b\u3089\u5916\u3057\u307e\u3059\u3002","cdc7f33d":"### 10\u6b73\u4ee5\u4e0b\u306e\u5b50\u4f9b\u306e\u751f\u5b58\u7387\u306f60%\u3068\u9ad8\u3044\u304c\u4ed6\u306e\u4e16\u4ee3\u306f\u9855\u8457\u306a\u50be\u5411\u306f\u898b\u3089\u308c\u306a\u3044\uff0880\u4ee3\u306f\u5168\u4f53\u30671\u540d\u306a\u306e\u3067\u3001\u7387\u306b\u3059\u308b\u3068100%\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\uff09","26ce52be":"# \u7279\u5fb4\u91cf\u751f\u6210","b3c521be":"### \u9ad8\u3044\u30c1\u30b1\u30c3\u30c8\u3092\u8cfc\u5165\u3057\u3066\u3044\u308b\u4eba\u306e\u65b9\u304c\u751f\u5b58\u7387\u304c\u9ad8\u3044","ced0aaa2":"\u30ad\u30e3\u30d3\u30f3\u306e\u7a2e\u985e\u6bce\u306b\u304b\u306a\u308a\u751f\u5b58\u7387\u306b\u5dee\u304c\u51fa\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002","1df73bf7":"# \u307e\u3068\u3081\n\n\u4e0a\u8a18\u306e\u5206\u6790\u306b\u3088\u308a\u3001\u5927\u304d\u304f\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8a00\u3048\u308b\u3002\n- \u6b20\u640d\u5024\u306f\u3001\u5e74\u9f62\u3001\u30ad\u30e3\u30d3\u30f3\u306e\u5834\u6240\u304c\u591a\u304f\u3001\u51fa\u6e2f\u5730\u3067\u30822\u4ef6\u307b\u3069\u3042\u308b\n- \u751f\u5b58\u8005\u306e\u5272\u5408\u304c4\u5272\u5f31\u3068\u591a\u5c11\u4e0d\u5747\u8861\u306a\u30c7\u30fc\u30bf\u3067\u3042\u308b\u304c\u5927\u304d\u306a\u554f\u984c\u306f\u306a\u3044\n- Fare\u3092\u9664\u3051\u3070\u5927\u304d\u306a\u5916\u308c\u5024\u3092\u542b\u3080\u30c7\u30fc\u30bf\u306f\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u3002\n- \u5ba2\u5ba4\u306e\u7b49\u7d1a\u306b\u3088\u308a\u751f\u5b58\u7387\u306f\u5927\u304d\u304f\u5909\u308f\u308b\uff08\u6700\u3082\u4eba\u6570\u306e\u591a\u30443\u7b49\u5ba2\u5ba4\u306e\u751f\u5b58\u7387\u304c\u6700\u3082\u4f4e\u3044\uff09\n- \u5973\u6027\u306e\u751f\u5b58\u7387\u304c\u9ad8\u304f\u7537\u6027\u306e\u751f\u5b58\u7387\u306f\u4f4e\u3044\n- 10\u6b73\u672a\u6e80\u306e\u5b50\u4f9b\u306e\u751f\u5b58\u7387\u306f\u6709\u610f\u306b\u9ad8\u3044\n- \u72ec\u308a\u8eab\u3088\u308a\u3082\u5bb6\u65cf\u3001\u5b50\u4f9b\u304c\u3044\u308b\u4e57\u5ba2\u306e\u65b9\u304c\u751f\u5b58\u7387\u304c\u9ad8\u3044\n- \u30c1\u30b1\u30c3\u30c8\u306e\u4fa1\u683c\u3082\u9ad8\u3044\u65b9\u304c\u751f\u5b58\u7387\u304c\u9ad8\u3044\uff08\u5ba2\u5ba4\u306e\u7b49\u7d1a\u306e\u8a71\u3068\u540c\u3058\uff09\n- \u5bc4\u6e2f\u5730\u6bce\u306b\u751f\u5b58\u7387\u306b\u6709\u610f\u306a\u5dee\u304c\u3042\u308b\uff08\u5bc4\u6e2f\u5730\u6bce\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30ad\u30e3\u30d3\u30f3\u304c\u7570\u306a\u3063\u3066\u3044\u305f\u53ef\u80fd\u6027\u3042\u308a\uff09\n- \u30ad\u30e3\u30d3\u30f3\u306e\u7a2e\u5225\u6bce\u306b\u751f\u5b58\u7387\u306b\u6709\u610f\u306a\u5dee\u304c\u3042\u308b\u3002\n- Miss\u3001Mrs\u306a\u3069\u306b\u3088\u308a\u5973\u6027\u306b\u304a\u3044\u3066\u306f\u3001\u5e74\u9f62\u306e\u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304c\u6709\u610f\u306a\u5dee\u306f\u898b\u3089\u308c\u306a\u304b\u3063\u305f\n\n","8c470fe0":"\u751f\u5b58\u8005\u306f\u3001\u7d046\u5272\u307b\u3069  \n\u30c1\u30b1\u30c3\u30c8\u306e\u30af\u30e9\u30b9\u306f\u30013\u7b49\u5ba2\u5ba4\u304c5\u5272\u5f37\u3067\u30011,2\u7b49\u306f2\u5272\u7a0b\u5ea6  \n\u6027\u5225\u306f\u3001\u7537\u6027\u304c6\u5272\u5f37  \n\u7d047\u5272\u306f\u3001\u5144\u5f1f\u3001\u914d\u5076\u8005\u3068\u4e57\u8239\u3057\u3066\u3044\u306a\u3044  \n\u7d047\u5272\u306f\u3001\u5b50\u4f9b\u3092\u9023\u308c\u3066\u4e57\u8239\u3057\u3066\u3044\u306a\u3044  \n\u7d047\u5272\u304c\u3001Southampton\u304b\u3089\u4e57\u8239\u3057\u3066\u3044\u308b  \n\u3000","4aac9303":"#### \u30c1\u30b1\u30c3\u30c83\u306e\u751f\u5b58\u7387\u304c25%\u7a0b\u5ea6\n#### \u30c1\u30b1\u30c3\u30c82\u306e\u751f\u5b58\u7387\u304c40%\u7a0b\u5ea6\n#### \u30c1\u30b1\u30c3\u30c81\u306e\u751f\u5b58\u7387\u304c60%\u7a0b\u5ea6\n","52d0ee61":"### PClass\u6bce\u306e\u751f\u5b58\u8005\u306e\u78ba\u8a8d","e41a8cb1":"## \u30ad\u30e3\u30d3\u30f3\u306e\u7a2e\u5225\u3092\u7279\u5fb4\u91cf\u3068\u3057\u3066\u8ffd\u52a0","183ec871":"#### \u7537\u6027\u306e\u751f\u5b58\u7387\u304c20%\u7a0b\u5ea6\n#### \u5973\u6027\u306e\u751f\u5b58\u7387\u304c75%\u7a0b\u5ea6\n","68406bd7":"### \u6b20\u640d\u5024\u306e\u78ba\u8a8d","4d6f0f02":"## \u6b20\u640d\u5024\u306e\u591a\u3044\u5e74\u9f62\u3092\u88dc\u3046\u305f\u3081\u3001\u656c\u79f0(Mr.Mrs,Miss\uff09\u3092\u65b0\u305f\u306a\u7279\u5fb4\u91cf\u3068\u3057\u3066\u8ffd\u52a0","9d0a8a3b":"## \u5168\u4f53\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","ccc0457e":"### Cherbourg\u304b\u3089\u4e57\u8239\u3057\u305f\u4eba\u304c\u751f\u5b58\u7387\u304c\u4e00\u756a\u9ad8\u3044\u3002\n### \u4e57\u8239\u5730\u3068\u751f\u5b58\u7387\u306b\u76f4\u63a5\u3001\u56e0\u679c\u95a2\u4fc2\u304c\u3042\u308b\u3068\u306f\u8003\u3048\u3089\u308c\u306a\u3044\u306e\u3067\u3001\u30c1\u30b1\u30c3\u30c8\u306e\u30e9\u30f3\u30af\u3084\u30ad\u30e3\u30d3\u30f3\u306e\u914d\u7f6e\u306a\u3069\u306e\u7b2c\u4e09\u306e\u5909\u6570\u3068\u76f8\u95a2\u304c\u3042\u308b\u306e\u3060\u3068\u601d\u308f\u308c\u308b\u3002\uff08\u3053\u3053\u3067\u306f\u305d\u3053\u307e\u3067\u8abf\u67fb\u3057\u306a\u3044\uff09","26afe0ca":"Miss\u306e\u65b9\u304c\u82e5\u3044\u4eba\u304c\u591a\u3044\u306e\u3067\u3001\u751f\u5b58\u7387\u304c\u9ad8\u304f\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u305f\u304cMrs\u306e\u65b9\u304c\u3084\u3084\u751f\u5b58\u7387\u304c\u9ad8\u3044\u7d50\u679c\u3068\u306a\u3063\u305f  \n\u76ee\u306b\u898b\u3048\u308b\u7279\u5fb4\u306f\u308f\u304b\u3089\u306a\u3044\u304c\u88dc\u5b8c\u7684\u306a\u610f\u5473\u3067\u7279\u5fb4\u91cf\u3068\u3057\u3066\u6b8b\u3059\u3053\u3068\u3068\u3059\u308b  ","6b066ce3":"### \u5404\u5024\u306e\u51fa\u73fe\u983b\u5ea6\u306e\u78ba\u8a8d","79c5aca6":"### \u751f\u5b58\u8005\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","9f52591a":"### \u6027\u5225\u306b\u3088\u308b\u751f\u5b58\u8005\u306e\u78ba\u8a8d","55e26a47":"## \u500b\u5225\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","d36e7b4f":"## Import data","c0a17dff":"### \u89aa\u304c\u3044\u308b\u30fb\u5b50\u4f9b\u304c2,3\u4eba\u4e57\u8239\u3057\u3066\u3044\u308b\u65b9\u304c\u4e00\u4eba\u8eab\u306e\u4eba\u306b\u30b0\u30e9\u3079\u3066\u751f\u5b58\u7387\u304c\u9ad8\u3044","55ba6e02":"### \u30c1\u30b1\u30c3\u30c8\u306e\u7a2e\u985e\u306f\u3001681\u7a2e\u985e\u4ee5\u4e0a\u3067\u3042\u308a\u50be\u5411\u306a\u3069\u3092\u5206\u6790\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u5206\u6790\u5bfe\u8c61\u5916\u3068\u3057\u307e\u3059\u3002","6f01e28b":"## \u5144\u5f1f\u3001\u914d\u5076\u8005\u304c1,2\u540d\u3044\u308b\u4eba\u306e\u65b9\u304c\u3084\u3084\u751f\u5b58\u7387\u304c\u9ad8\u3044","f3ddb2ea":"### \u5e74\u4ee3\u5225\u3067\u306e\u5206\u6790","3d01afe5":"### \u5e74\u9f62\u5225\u306e\u751f\u5b58\u8005\u306e\u5206\u6790"}}