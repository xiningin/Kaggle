{"cell_type":{"acb35cf8":"code","c9a37351":"code","6022a82f":"code","487d94f8":"code","9c00dc50":"code","cf8e8cbe":"code","d5dea02e":"code","b69f2198":"code","06c0c7ff":"code","383501cd":"code","44d5de8a":"code","2916bc37":"code","1f2c4188":"code","5aa6cb7a":"code","3310f7e1":"code","afb5bfa4":"code","7e200710":"code","f5c53443":"code","08efbb80":"code","d7cffb37":"code","726a440b":"code","43a9e798":"code","a0ceb9e6":"code","67cd8704":"code","c0918d64":"code","9f32c913":"code","56f43e3f":"code","d365b398":"code","e8105539":"code","6d6f62a3":"code","9a6f0994":"code","c60626ed":"code","759cbcce":"code","5bf2debd":"code","938a0f1e":"code","6a0ef4d9":"code","15a895ef":"markdown","a2e70710":"markdown","31cace74":"markdown","3b392a75":"markdown","eaad0d5e":"markdown","5f190f68":"markdown","bd7a348f":"markdown","d689f683":"markdown","fe8a25fc":"markdown","d5cc9b7b":"markdown","0be1fb34":"markdown","0a1016fc":"markdown","98f1dc9c":"markdown","5f70fc77":"markdown","04fd05f9":"markdown","d9a845cd":"markdown","3c264161":"markdown","ffa01297":"markdown"},"source":{"acb35cf8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport seaborn as sns\nimport folium","c9a37351":"indicators = pd.read_csv('..\/input\/world-development-indicators\/Indicators.csv')\nindicators.head()","6022a82f":"water_flag = indicators['IndicatorName'].str.contains('water')","487d94f8":"only_ukraine_flag = indicators['CountryName'].str.contains('Ukraine')","9c00dc50":"water_resources = indicators[water_flag & only_ukraine_flag]","cf8e8cbe":"water_resources","d5dea02e":"water_resources['IndicatorName'].unique().tolist()","b69f2198":"general_indicator = 'SH.H2O.SAFE.ZS'\nmask1 = water_resources['IndicatorCode'].str.contains(general_indicator)","06c0c7ff":"res_general = water_resources[mask1]","383501cd":"res_general.head()","44d5de8a":"year_general, values_general = water_resources[mask1]['Year'].values, water_resources[mask1]['Value'].values","2916bc37":"current_water_supply = res_general['Value'].iloc[-1]","1f2c4188":"current_water_supply","5aa6cb7a":"urban_indicator = 'SH.H2O.SAFE.UR.ZS'\nmask2 = water_resources['IndicatorCode'].str.contains(urban_indicator)\nyear_urb, values_urb = water_resources[mask2]['Year'].values, water_resources[mask2]['Value'].values\nres_urb = water_resources[mask2]\nres_urb.head()","3310f7e1":"rural_indicator = 'SH.H2O.SAFE.RU.ZS'\nmask3 = water_resources['IndicatorCode'].str.contains(rural_indicator)\nres_rural = water_resources[mask3]","afb5bfa4":"year_rural, values_rural = water_resources[mask3]['Year'].values, water_resources[mask3]['Value'].values","7e200710":"res_urb_from_1994 = res_urb.iloc[4:]","f5c53443":"year_urb_from_1994 = res_urb_from_1994['Year']\nvalue_urb_from_1994 = res_urb_from_1994['Value']","08efbb80":"withdrawal_flag = water_resources['IndicatorName'].str.contains('Annual freshwater withdrawals')","d7cffb37":"withdrawal = water_resources[withdrawal_flag]\nwithdrawal","726a440b":"agriculture = withdrawal[withdrawal['IndicatorName'].str.contains('Annual freshwater withdrawals, agriculture')]\nagriculture = agriculture.append(pd.Series(data=['Ukraine', \n                                   'UKR', \n                                   'Annual freshwater withdrawals, agriculture (% of total freshwater withdrawal)',\n                                  'ER.H2O.FWAG.ZS',\n                                  1992,\n                                  6.164], index=['CountryName', 'CountryCode', \n                                                   'IndicatorName', 'IndicatorCode', \n                                                   'Year', 'Value'], name=5532532))\nagriculture = agriculture.sort_values(by='Year')\nagriculture","43a9e798":"domestic = withdrawal[withdrawal['IndicatorName'].str.contains('Annual freshwater withdrawals, domestic ')]\ndomestic","a0ceb9e6":"industry = withdrawal[withdrawal['IndicatorName'].str.contains('Annual freshwater withdrawals, industry')]\nindustry","67cd8704":"fgroups = list()\nfor i in range(0, 3):\n    \n    dfList = [agriculture.iloc[i], domestic.iloc[i], industry.iloc[i]]\n    fgroups.append(pd.DataFrame().append(other=dfList))\n\nfgroups[2]","c0918d64":"fgroups[0]","9f32c913":"total = water_resources[water_resources['IndicatorName'].str.contains('Annual freshwater withdrawals, total')]\ntotal","56f43e3f":"total = total.sort_values(by='IndicatorCode')","d365b398":"total['IndicatorName'] = ['billion cubic meters', 'billion cubic meters', 'billion cubic meters',\n                                         '% of internal resources', '% of internal resources', '% of internal resources']","e8105539":"total","6d6f62a3":"plt.style.use('seaborn')\n\nplt_1 = plt.figure(figsize=(20, 10))\n\nplt.title('Improved water source (% of population with access)', fontdict={'fontname': 'comic sans ms',\n                                                                           'fontsize': 20, 'weight': 'bold'})\n\nplt.ylim(23, 31)\nplt.axis([1993, 2016, 96, 98])\n\nplt.ylabel('The % of people with access to water', fontdict={'fontsize': 25}, labelpad=15)\nplt.xlabel('Years', fontdict={'fontsize': 25}, labelpad=15)\nplt.tick_params(axis='x', labelsize=20)\nplt.tick_params(axis='y', labelsize=20)\n\nplt.plot(year_general, values_general, color='tomato', marker='D', mfc='orange', linewidth=8, markersize=15)","9a6f0994":"plt.style.use('seaborn')\n\nplt_1 = plt.figure(figsize=(20, 10))\n\nplt.title('Improved water source, urban (% of urban population with access)', fontdict={'fontname': 'comic sans ms',\n                                                                           'fontsize': 20, 'weight': 'bold'})\n\nplt.ylabel('The % of urban people with access to water', fontdict={'fontsize': 25}, labelpad=15)\nplt.xlabel('Years', fontdict={'fontsize': 25}, labelpad=15)\nplt.tick_params(axis='x', labelsize=20)\nplt.tick_params(axis='y', labelsize=20)\n\nplt.plot(year_urb, values_urb, color='yellow', marker='D', mfc='orange', linewidth=8, markersize=15)","c60626ed":"plt.style.use('seaborn')\n\nplt_1 = plt.figure(figsize=(20, 10))\n\nplt.title('Improved water source, rural (% of rural population with access)', fontdict={'fontname': 'comic sans ms',\n                                                                           'fontsize': 20, 'weight': 'bold'})\n\nplt.ylabel('The % of rural people with access to water', fontdict={'fontsize': 25}, labelpad=15)\nplt.xlabel('Years', fontdict={'fontsize': 25}, labelpad=15)\nplt.tick_params(axis='x', labelsize=20)\nplt.tick_params(axis='y', labelsize=20)\n\nplt.plot(year_rural, values_rural, color='brown', marker='D', mfc='red', linewidth=8, markersize=15)","759cbcce":"plt.style.use('seaborn')\n\nplt_1 = plt.figure(figsize=(20, 10))\n\nplt.title('Water supplying - From 1994 up to 2015', fontdict={'fontname': 'comic sans ms',\n                                                                           'fontsize': 20, 'weight': 'bold'})\n\n#plt.ylim(23, 31)\nplt.axis([1993, 2016, 90, 101])\n\nplt.ylabel('% of people', fontdict={'fontsize': 25}, labelpad=15)\nplt.xlabel('Years', fontdict={'fontsize': 25}, labelpad=15)\nplt.tick_params(axis='x', labelsize=20)\nplt.tick_params(axis='y', labelsize=20)\n\nplt.plot(year_general, values_general, color='orange', marker='D', linewidth=3, markersize=7)\nplt.plot(year_urb_from_1994, value_urb_from_1994, color='gold', marker='o', linewidth=3, markersize=10)\nplt.plot(year_rural, values_rural, color='red', marker='D', linewidth=3, markersize=7)\n\nplt.legend(['The % of people which gained access to improved water sources', \n            'The % of urban people which gained access to improved water sources',\n            'The % of rural people which gained access to improved water sources'],\n            fontsize=15)","5bf2debd":"# set width of bars\nbarWidth = 0.25\n\n# data\nlabels = ['1992', '2007', '2013']\nagr_val = [fgroups[0]['Value'].iloc[0], fgroups[1]['Value'].iloc[0], fgroups[2]['Value'].iloc[0]]\ndomest_val = [fgroups[0]['Value'].iloc[1], fgroups[1]['Value'].iloc[1], fgroups[2]['Value'].iloc[1]]\nind_val = [fgroups[0]['Value'].iloc[2], fgroups[1]['Value'].iloc[2], fgroups[2]['Value'].iloc[2]]\n\n# set position of bar on X axis\nr1 = np.arange(len(agr_val))\nr2 = [x + barWidth for x in r1]\nr3 = [x + barWidth for x in r2]\n\n# Make the size of chart bar\nfig, ax = plt.subplots(figsize=(20,12))\n\n# Make the plot\nax.bar(r1, agr_val, color='#7f6d5f', width=barWidth, edgecolor='white', label='Agriculture')\nax.bar(r2, domest_val, color='#557f2d', width=barWidth, edgecolor='white', label='Domestic')\nax.bar(r3, ind_val, color='#2d7f5e', width=barWidth, edgecolor='white', label='Industry')\n\n# Add xticks on the middle of the group bars\nplt.xlabel('Years', fontweight='bold', fontsize=20)\nplt.xticks([r + barWidth for r in range(len(agr_val))], labels, fontsize=17)\nplt.yticks(fontsize=17)\n\n# Add a legend\n\ncolors = {'Agriculture':'#7f6d5f', 'Domestic':'#557f2d', 'Industry': '#2d7f5e'}     \nlabels = list(colors.keys())\nhandles = [plt.Rectangle((0,0),1,1, color=colors[label]) for label in labels]\nplt.legend(handles, labels, fontsize=25)\n\nplt.show()","938a0f1e":"sns.set( rc = {'figure.figsize' : ( 100, 100 ), \n               'axes.labelsize' : 22,\n               'xtick.labelsize': 18,\n               'ytick.labelsize': 18})\n\n# Create a grid : initialize it\ng = sns.FacetGrid(total, col='IndicatorName', hue='IndicatorName', col_wrap=2, height=8.5, sharex=True)\n\n# Add the line over the area with the plot function\ng = g.map(plt.plot, 'Year', 'Value')\n\n# Fill the area with fill_between\ng = g.map(plt.fill_between, 'Year', 'Value', alpha=0.4).set_titles(\"{col_name} IndicatorName\")\n \n# Control the title of each facet\ng = g.set_titles(\"{col_name}\")\n \n# Add a title for the whole plot\nplt.subplots_adjust(top=1) \ng = g.fig.suptitle('Annual freshwater withdrawals, total between 1992 and 2013', x=0.5, y=1.1, fontsize=22)\n\n# Show the graph\nplt.show()","6a0ef4d9":"map_protected_areas = folium.Map(\n                            location=[45.6, 33.6],\n                            zoom_start=7)\nfolium.GeoJson('..\/input\/norh-black-sea-coast\/north_black_sea_coast.geojson', name='geojson').add_to(map_protected_areas)\nfolium.LayerControl().add_to(map_protected_areas)\n# to display map trust a jupyter notebook on your machine\n# after the trusting cleat make the comment below a string of your code\nmap_protected_areas\n# if you cannot trust me make the comment below (it saves the map into .html file) the part of your code and rerun notebook\n# map_protected_areas.save(\"north_black_sea_protected_areas.html\")","15a895ef":"# Step 1: Importing required packages","a2e70710":"### The access people to water supply","31cace74":"* https:\/\/matplotlib.org\/ - for visualization\n* https:\/\/python-visualization.github.io\/folium\/quickstart.html - for creation a map\n* https:\/\/geojson.io\/#map=2\/20.0\/0.0 - creation geo data necessaried for layers on the map\n* https:\/\/mpatlas.org\/ - data with marine protected areas","3b392a75":"The primary goal is to discover data visualisation and practise using matplotlib and others libraries for graph plotting.","eaad0d5e":"### Above listed the data frame which contains only data about ukrainians water resources and below the list of indicators for exploring","5f190f68":"### Annual freshwater withdrawals, total (billion cubic meters)","bd7a348f":"<br><br><center><h1 style=\"font-size:2em;color:#2467C0\">Spreading of water resources in Ukraine - Using matplotlib and folium for Visualization<\/h1><\/center>","d689f683":"## Introduction","fe8a25fc":"### The situation with water withdrawal for agriculture","d5cc9b7b":"### Reading data","0be1fb34":"# References","0a1016fc":"### The analysis of annual water withdrawal ","98f1dc9c":"### Industry","5f70fc77":"Domestic","04fd05f9":"# Step 3: Visualization","d9a845cd":"### The situation in % with water supply on the 2015","3c264161":"# Step 2: Exploring data","ffa01297":"Ploting a map using folium"}}