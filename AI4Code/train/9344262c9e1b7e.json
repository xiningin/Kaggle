{"cell_type":{"9fedb6a2":"code","902275c5":"code","24dfac95":"code","b5287b15":"code","f49e6d49":"code","f4c9960b":"code","d4c8533d":"code","418d148b":"code","413376f5":"code","6f0d8faf":"code","e81e92cb":"code","008a50b0":"code","0e1ed4e3":"code","690a7e30":"code","06cc0331":"code","3c69c815":"markdown","87122756":"markdown","400e7977":"markdown","a6dc1dbd":"markdown","14e5dff3":"markdown","9d2c4ee7":"markdown","5b85bb49":"markdown","79787017":"markdown","f837e75e":"markdown","19414f33":"markdown","be2c9acc":"markdown"},"source":{"9fedb6a2":"import pandas as pd\nimport itertools as it\nimport collections as co\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","902275c5":"anime = pd.read_csv(\"..\/input\/anime-recommendations-database\/anime.csv\", header=0, index_col=0, encoding='utf-8')","24dfac95":"anime['genre'] = anime['genre'].fillna('None')\nanime['genre'] = anime['genre'].apply(lambda x: x.split(', '))  # split in according to \u2018\uff0c \u2019","b5287b15":"genre = it.chain(*anime['genre'])  # spread list\ngenre_count = co.Counter(genre)\n\ngenreframe = pd.DataFrame.from_dict(genre_count, orient='index').reset_index().rename(columns={'index':'genre', 0: 'count'})\ngenreframe = genreframe.sort_values('count', ascending=False)","f49e6d49":"plt.figure(figsize=(10, 12))\nplt.barh(genreframe[\"genre\"].head(20), genreframe[\"count\"].head(20),\n         facecolor='tan', height=0.5, edgecolor='r', alpha=0.6)\nplt.yticks(fontsize=10)\nplt.xticks(fontsize=10)\nplt.title(label=\" Genre_Ranking Top 20\", loc=\"center\")\n\n\nplt.show()","f4c9960b":"type = pd.DataFrame(anime[\"type\"])\ntype = type.groupby(\"type\").aggregate({\"type\": \"count\"}).rename(columns={'type': 'count', 'index': 'type'})\ntype = type.sort_values('count', ascending=False).reset_index()\n\nplt.figure(figsize=(10, 10))\nexplode = [0.07,0,0,0,0,0]\nlabels = type[\"type\"]\ncolors = ['aqua', 'yellow', 'limegreen', 'orange', 'cornflowerblue', 'slategray']\nplt.pie(type[\"count\"], autopct='%.1f%%', explode=explode, labels=labels, colors=colors)\nplt.title(label=\" Type of Animes\", loc=\"center\", fontsize=15)\n\nplt.show()","d4c8533d":"type = pd.DataFrame(anime[[\"type\", \"rating\"]]).dropna()\ntype = type.sort_values('type', ascending=False).reset_index()","418d148b":"plt.figure(figsize=(8, 10))\nsns.boxplot(x='type', y='rating', data=type)\nplt.yticks(fontsize=12)\nplt.xticks(fontsize=12)\nplt.title(label=\" Types VS Rating\", loc=\"center\", fontsize=18)\n\nplt.show()","413376f5":"type = pd.DataFrame(anime[[\"name\", \"type\", \"rating\"]]).dropna()\ntype = type.sort_values(['type', 'rating'], ascending=False)\ngroup = type.groupby(type[\"type\"]).aggregate({\"rating\": \"max\", \"name\": \"count\"})","6f0d8faf":"max_TV = type.iloc[0:6]\nmax_special = type.iloc[3671:3676]\nmax_OVA = type.iloc[5342:5347]\nmax_ONA = type.iloc[8627:8632]\nmax_music = type.iloc[9279:9284]\nmax_movie = type.iloc[9767:9772]\ndata = pd.concat([max_TV, max_movie, max_OVA, max_ONA, max_special, max_music], ignore_index=True)","e81e92cb":"print(data)","008a50b0":"TV_anime = anime[anime['type'] == 'TV']\n\nfor index, lst in zip(TV_anime.index,TV_anime['genre'].values):\n    for genre in lst:\n        TV_anime.at[index, genre] = 1\n\nTV_anime = TV_anime.fillna(0).drop(columns=\"None\")","0e1ed4e3":"TV_Action = TV_anime[TV_anime['Action'] == 1].sort_values(['rating'], ascending=False)\nTV_Action = TV_Action.head(1)\nTV_Action = pd.DataFrame(TV_Action[[\"name\", \"rating\"]])\n\nTV_Adventure = TV_anime[TV_anime['Adventure'] == 1].sort_values(['rating'], ascending=False)\nTV_Adventure = TV_Adventure.head(1)\nTV_Adventure = pd.DataFrame(TV_Adventure[[\"name\", \"rating\"]])\n\nTV_Comedy = TV_anime[TV_anime['Comedy'] == 1].sort_values(['rating'], ascending=False)\nTV_Comedy = TV_Comedy.head(1)\nTV_Comedy = pd.DataFrame(TV_Comedy[[\"name\", \"rating\"]])\n\nTV_SciFi = TV_anime[TV_anime['Sci-Fi'] == 1].sort_values(['rating'], ascending=False)\nTV_SciFi = TV_SciFi.head(1)\nTV_SciFi = pd.DataFrame(TV_SciFi[[\"name\", \"rating\"]])\n\nTV_School = TV_anime[TV_anime['School'] == 1].sort_values(['rating'], ascending=False)\nTV_School = TV_School.head(1)\nTV_School = pd.DataFrame(TV_School[[\"name\", \"rating\"]])\n\nTV_Thriller = TV_anime[TV_anime['Thriller'] == 1].sort_values(['rating'], ascending=False)\nTV_Thriller = TV_Thriller.head(1)\nTV_Thriller = pd.DataFrame(TV_Thriller[[\"name\", \"rating\"]])\n","690a7e30":"data = pd.concat([TV_Action, TV_Adventure, TV_Comedy, TV_School, TV_SciFi, TV_Thriller], ignore_index=True)\ndata[\"genre\"] = [\"TV_Action\", \"TV_Adventure\", \"TV_Comedy\", \"TV_School\", \"TV_SciFi\", \"TV_Thriller\"]","06cc0331":"print(data)","3c69c815":"<h1>Types VS Rating<\/h1>","87122756":"Present the rating of animes with different types in box-plot.","400e7977":"Explore animes with maximum ratings in genres.","a6dc1dbd":"<h1>Maximum Rating in Genre<\/h1>","14e5dff3":"Explore the ranking in according to the count of the Genre.","9d2c4ee7":"Explore animes with maximum ratings in types.","5b85bb49":"<h1>Maximum Rating in Type<\/h1>","79787017":"<h1>Type of Animes in Pie Chart<\/h1>","f837e75e":"A simple Exploratory Data Analysis with simple visualization.\n* Genre_Ranking Top 20\n* Type of Animes in Pie Chart\n* Types VS Rating\n* Maximum Rating in Type\n* Maximum Rating in Genre","19414f33":"<h1>Genre_Ranking Top 20<\/h1>","be2c9acc":"Explore the proportion of the type of animes in data."}}