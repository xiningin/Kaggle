{"cell_type":{"e9459a89":"code","70ae6826":"code","a768a614":"code","af04c693":"code","3696d9f1":"markdown"},"source":{"e9459a89":"import math\nimport csv\nimport numpy as np\nfrom sklearn.preprocessing import scale\n\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\n    ","70ae6826":"application_data = pd.read_csv(\"..\/input\/application_train.csv\")\ncorr = application_data.corr().abs()\n","a768a614":"def FeatureAnalysis(df,corr):\n    \n    corr_target = corr['TARGET']\n    for colName in df:\n        \n        if(colName=='TARGET' or colName=='SK_ID_CURR'):\n            continue\n        if (colName  in corr_target.index):\n            pass\n        else:\n            continue\n            \n        print(\"Feature Name: \",colName)\n        print(\"Coefficient Correlation: \",corr_target[colName])\n        print(\"Correlation Rank: \",corr['TARGET'].rank(ascending=False).loc[colName],\"\/\",corr['TARGET'].count())\n        print(\"DataType: \",df[colName].dtypes)\n        if(df[colName].dtypes!='object' and len(df[colName].unique())<=20 ):\n            print(\"Feature Type: \",\"Categorical\")\n            if(len(df[colName].unique()) == 2):\n                print(\"Recommendation: \",\"Label Encoding\")\n            else:\n                print(\"Recommendation: \",\"One Hot Encoding\")\n            dfTemp = pd.DataFrame({'Target_0' :df[application_data['TARGET']==0].groupby([colName])[colName].count()}).reset_index()\n            dfTemp2 = pd.DataFrame({'Target_1' :df[application_data['TARGET']==1].groupby([colName])[colName].count()}).reset_index()\n            dfTemp = dfTemp.merge(dfTemp2,on=colName,how='outer')\n            dfTemp.plot(kind='bar',xticks=dfTemp.index,x=colName,figsize=(12, 4),rot=1)\n            plt.xticks(np.arange(len(dfTemp.index)), dfTemp[colName], rotation='vertical')\n            plt.show()\n\n        else:\n            print(\"Feature Type: \",\"Numerical\")\n            print(\"Recommendation: \",\"Normalize\")\n\n            if(df[colName].min()<0):\n                print(\"Has Negative Values !\")\n        print(\"Unique Values: \",len(df[colName].unique()))\n        print(\"Null Values: \",df[colName].isnull().values.sum())\n\n        sns.kdeplot(application_data.loc[application_data['TARGET'] == 0, colName], label = 'target == 0')\n        sns.kdeplot(application_data.loc[application_data['TARGET'] == 1, colName], label = 'target == 1')\n        plt.show()\n        df[colName].hist()\n        plt.show()\n","af04c693":"FeatureAnalysis(application_data,corr)\n","3696d9f1":"This is a generic kernel for intended for data exploration in a structured way.  Although this example uses HomeDefaultCreditRisk data, but it can be applied for any other data source. Goal is to plot KDE chart, Histogram and understand data in each feature.  It will iteratively go through all features and bring out important charactersitics of each feature."}}