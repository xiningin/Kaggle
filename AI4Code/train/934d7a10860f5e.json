{"cell_type":{"e751fdc8":"code","6867cb50":"code","421cce88":"code","75ac00a0":"code","3a5111e0":"code","1383df4d":"code","af525b68":"code","1d38ef21":"code","349838fa":"code","6a4f055b":"code","fec53f5c":"code","de32c11e":"code","380a7f90":"code","c0d55d19":"code","f8a27bd7":"code","650b4bb4":"code","7428580b":"code","f137de2e":"code","62ea9dca":"code","0dd31449":"code","8baa97f6":"code","ce69d45f":"code","8029d4c7":"code","4925d982":"code","b8a8a32d":"code","c796ab69":"code","dcea5137":"markdown","d8c18b5f":"markdown","197633e3":"markdown","75557233":"markdown","f5f4689f":"markdown","7bce061d":"markdown","56e36df6":"markdown","d60dcb8d":"markdown","7ea6646e":"markdown","03df0917":"markdown","5341a38a":"markdown","6626c6ae":"markdown","b65a48a7":"markdown"},"source":{"e751fdc8":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6867cb50":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","421cce88":"iris = pd.read_csv(r'..\/input\/iris\/Iris.csv')","75ac00a0":"iris.info()","3a5111e0":"iris.describe()","1383df4d":"iris.head()","af525b68":"iris['Species'].value_counts()","1d38ef21":"iris.drop('Id', axis=1, inplace=True)","349838fa":"sns.pairplot(iris, hue='Species')","6a4f055b":"from sklearn.preprocessing import LabelEncoder","fec53f5c":"le = LabelEncoder()","de32c11e":"iris['Species'] = le.fit_transform(iris['Species'])","380a7f90":"plt.figure(figsize=(10, 8))\nplt.title('Correlation matrix')\nsns.heatmap(iris.corr(), annot=True)","c0d55d19":"correlations=iris.drop('Species', axis=1).corrwith(iris['Species'])\nc = []\nfor corr in correlations:\n    if corr >= 0:\n        c.append('blue')\n    else:\n        c.append('red')","f8a27bd7":"plt.figure(figsize=(12, 6))\nplt.title('Correlation with specie')\nplt.bar(x=iris.drop('Species', axis=1).columns, height=correlations, color=c)","650b4bb4":"X = iris.drop('Species', axis=1)\ny = iris['Species']\nX.head()","7428580b":"y.head()","f137de2e":"from sklearn.ensemble import RandomForestClassifier","62ea9dca":"rfc = RandomForestClassifier(n_estimators=150, random_state=42)","0dd31449":"from sklearn.model_selection import train_test_split","8baa97f6":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","ce69d45f":"rfc.fit(X_train, y_train.values.ravel())","8029d4c7":"pred = rfc.predict(X_test)","4925d982":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score","b8a8a32d":"print(classification_report(y_test, pred))","c796ab69":"plt.title('Confusion matrix')\nsns.heatmap(confusion_matrix(y_test, pred), annot=True)","dcea5137":"The target is a categorical variable, so we need to encode it into numbers","d8c18b5f":"As we can see in the scatterplots these iris can be separated in groups, which can be useful to an decision tree or random forest algorithm","197633e3":"# Dividing DataFrame into X and y:","75557233":"We need to drop the id column which have no utility and actually can bias our model","f5f4689f":"## Trainning the model:","7bce061d":"Any missing values in the dataset, so there's no need to clean the data","56e36df6":"We need to divide our DataFrame in features (X) and target (y)","d60dcb8d":"# Exploratory analysis:","7ea6646e":"# Classifier model:","03df0917":"## Model evaluating:","5341a38a":"The main correlation (which is the correlation between features and the targed) can be easily visualized with a columns graph","6626c6ae":"## Visualizing correlation:","b65a48a7":"# Encoding categorical variables:"}}