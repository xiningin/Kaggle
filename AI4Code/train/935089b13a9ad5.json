{"cell_type":{"174da707":"code","431c7e2b":"code","346d1562":"code","2949083d":"code","d8333bb1":"code","2d9ad20c":"code","39d3ac50":"code","99682a8e":"code","c09b3e52":"code","1c056344":"code","e231e940":"code","2b9d23ca":"code","38566cf4":"code","a30a98b1":"code","d36dc7a1":"code","4fed1103":"code","a2ac57e2":"code","ef3f73df":"code","d8533db3":"code","3636b8d0":"code","39e9ffd6":"code","4822b31e":"code","4eb98550":"code","26fda58b":"code","f3f56eaa":"code","20c8826d":"code","04986b2f":"code","ea70d480":"code","7ae2f482":"code","45426d1f":"code","50603db7":"code","069439d3":"code","4dc12ab2":"code","26c77c8f":"code","fca485d7":"code","ccedadf6":"code","f5e34972":"code","8fcc0314":"code","6236c295":"code","53b0d88a":"code","8afa7986":"code","9044081e":"code","3d7d688d":"code","60112a03":"code","3558ee26":"code","95ef5af7":"code","2640c106":"code","139964ec":"code","18da9973":"code","54354b43":"code","a17cc127":"code","33f93d27":"code","a0768cd4":"code","41b0773b":"markdown","d7995243":"markdown","f6c9a559":"markdown","57084bd3":"markdown","02c83433":"markdown","90d44e75":"markdown","40317095":"markdown","7a08bdb2":"markdown","17192932":"markdown","e606918b":"markdown","72c60ebb":"markdown","d0eb83f4":"markdown","3da8b57a":"markdown","e6bbffed":"markdown"},"source":{"174da707":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline \n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport warnings\nwarnings.filterwarnings('ignore') \n\n#from subprocess import check _output \n#print(check_output([\"ls\",\"..\/input\"]).decode(\"utf-8\")\n \n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","431c7e2b":"median_house_holding_income2015 =pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv',encoding=\"windows-1252\")\npercent_over25_completed = pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv',encoding=\"windows-1252\")\npercentage_people_below_poverty_level= pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv', encoding=\"windows-1252\")\nshare_race_city =pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv',encoding=\"windows-1252\")\npolice_killings =pd.read_csv('..\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv',encoding=\"windows-1252\")","346d1562":"percentage_people_below_poverty_level.head()","2949083d":"percentage_people_below_poverty_level.info()","d8333bb1":"percentage_people_below_poverty_level.poverty_rate.value_counts","2d9ad20c":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()","39d3ac50":"   percentage_people_below_poverty_level.poverty_rate.replace([\"-\"],0.0, inplace=True)     ","99682a8e":"percentage_people_below_poverty_level.poverty_rate.value_counts()\npercentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level[\"Geographic Area\"].unique())\narea_poverty_ratio=[]\n\nfor i in area_list:\n    x=percentage_people_below_poverty_level[percentage_people_below_poverty_level[\"Geographic Area\"]==i]\n    area_poverty_rate = sum(x.poverty_rate) \/ len(x)\n    area_poverty_ratio.append(area_poverty_rate)\n\ndata = pd.DataFrame({\"area_list\":area_list, \"area_poverty_ratio\":area_poverty_ratio}) \nnew_index=(data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)\n\n#vis\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\n#plt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"Poverty Ratio\")\nplt.title(\"Poverty Rate Given States\")\nplt.show()","c09b3e52":"police_killings.head()","1c056344":"separate = police_killings.name[(police_killings.name != \"TK TK\") &  (police_killings.name != \"TK Tk\")].str.split()\na,b = zip(*separate) \nname_list= a+b\nname_count =Counter(name_list)\nmost_common_names = name_count.most_common(15)\nx,y=zip(*most_common_names)\nx,y = list(x),list(y)\n \nplt.figure(figsize=(15,10))  \nsns.barplot(x=x, y=y,palette = sns.cubehelix_palette(start=len(x),rot=.1))\nplt.xlabel(\"Name or Surname of killed People\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Most Common 15 Name or Surname of killed people\")\nplt.show()","e231e940":"police_killings.name.value_counts()","2b9d23ca":"percent_over25_completed.head()","38566cf4":"percent_over25_completed.info()","a30a98b1":"percent_over25_completed.percent_completed_hs.value_counts()","d36dc7a1":"percent_over25_completed.percent_completed_hs.replace([\"-\"], 0.0, inplace = True)\npercent_over25_completed.percent_completed_hs=percent_over25_completed.percent_completed_hs.astype(float)\narea_list = list(percent_over25_completed[\"Geographic Area\"].unique())\narea_highSchool_ratio=[]\n\nfor area in area_list:\n    x = percent_over25_completed[percent_over25_completed[\"Geographic Area\"] == area]\n    area_highSchool_rate = sum(x.percent_completed_hs) \/ len(x)\n    area_highSchool_ratio.append(area_highSchool_rate)\n\n# sorting\ndata = pd.DataFrame({\"area_list\": area_list, \"area_highSchool_ratio\": area_highSchool_ratio})\nnew_index = (data['area_highSchool_ratio'].sort_values(ascending=True)).index.values\nsorted_data2 = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize = (15,10))\nsns.barplot(x = sorted_data2['area_list'], y = sorted_data2['area_highSchool_ratio'])\n# plt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"High School Graduate Rate\")\nplt.title(\"Percentage of Given States' Population Above 25 that Graduted from High School\")\nplt.show()","4fed1103":"share_race_city.head()","a2ac57e2":"share_race_city.replace([\"-\"], 0.0, inplace = True)\nshare_race_city.replace([\"(X)\"], 0.0, inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\n\nfor area in area_list:\n    x = share_race_city[share_race_city[\"Geographic area\"] == area]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n\n# visualization\nf,ax = plt.subplots(figsize=(9,15))\nsns.barplot(x=share_white, y=area_list, color='green', alpha=0.5, label='White')\nsns.barplot(x=share_black, y=area_list, color='blue', alpha=0.7, label='Afro-American')\nsns.barplot(x=share_native_american, y=area_list, color='cyan', alpha=0.6, label='Native American')\nsns.barplot(x=share_asian, y=area_list, color='yellow', alpha=0.6, label='Asian')\nsns.barplot(x=share_hispanic, y=area_list, color='red', alpha=0.6, label='Hispanic')\n\nax.legend(loc='lower right', frameon=True)\nax.set(xlabel=\"Percentage of Races\", ylabel=\"States\", title = \"Percentage of States' Population According to Races\")\n\nplt.show()","ef3f73df":"sorted_data['area_poverty_ratio'] = sorted_data['area_poverty_ratio']\/max(sorted_data['area_poverty_ratio'])\nsorted_data2['area_highSchool_ratio'] = sorted_data2['area_highSchool_ratio']\/max(sorted_data2['area_highSchool_ratio'])\ndata = pd.concat([sorted_data, sorted_data2['area_highSchool_ratio']], axis = 1)\ndata.sort_values('area_poverty_ratio', inplace = True)\n\n# visualization\nf,ax1 = plt.subplots(figsize = (20,10))\nsns.pointplot(x = 'area_list', y = 'area_poverty_ratio', data = data, color = 'lime', alpha = 0.8)\nsns.pointplot(x = 'area_list', y = 'area_highSchool_ratio', data = data, color = 'red', alpha = 0.8)\nplt.text(40, 0.6, 'High School graduate ratio', color = 'red', fontsize = 17, style = 'italic')\nplt.text(40, 0.55, 'Poverty Ratio', color = 'lime', fontsize = 18, style = 'italic')\nplt.xlabel(\"States\", fontsize = 15, color = \"blue\")\nplt.ylabel(\"Values\", fontsize = 15, color = \"blue\")\nplt.title(\"High School Graduate VS Poverty Rate\", fontsize = 20, color = \"blue\")\nplt.grid()\nplt.show()","d8533db3":"data.head()","3636b8d0":"g = sns.jointplot(data.area_poverty_ratio, data.area_highSchool_ratio, kind=\"kde\", size=7)\nplt.savefig('graph.png')\nplt.show()","39e9ffd6":"data.head()","4822b31e":"# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\ng = sns.jointplot(\"area_poverty_ratio\", \"area_highSchool_ratio\", data=data,size=7, ratio=3, color=\"g\")","4eb98550":"police_killings.race.head(15)","26fda58b":"police_killings.race.value_counts()","f3f56eaa":"# Race rates according in kill data \npolice_killings.race.dropna(inplace = True)\nlabels = police_killings.race.value_counts().index\ncolors = ['grey','blue','red','yellow','green','brown']\nexplode = [0,0,0,0,0,0]\nsizes = police_killings.race.value_counts().values\n\n# visual\nplt.figure(figsize = (7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)\nplt.show()","20c8826d":"data.head()","04986b2f":"sns.lmplot(x=\"area_poverty_ratio\", y=\"area_highSchool_ratio\", data=data)\nplt.show()","ea70d480":"data.head()","7ae2f482":"sns.kdeplot(data.area_poverty_ratio, data.area_highSchool_ratio, shade=True, cut=3)\nplt.show()","45426d1f":"data.head()","50603db7":"pal = sns.cubehelix_palette(2, rot=-.5, dark=.3)\nsns.violinplot(data=data, palette=pal, inner=\"points\")\nplt.show()","069439d3":"data.corr()","4dc12ab2":"f,ax = plt.subplots(figsize=(5, 5))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"gray\", fmt= '.1f',ax=ax)\nplt.show()","26c77c8f":"police_killings.head()","fca485d7":"police_killings.manner_of_death.unique()","ccedadf6":"sns.boxplot(x=\"gender\", y=\"age\", hue=\"manner_of_death\", data=police_killings, palette=\"PRGn\")\nplt.show()","f5e34972":"police_killings.head()","8fcc0314":"sns.swarmplot(x=\"gender\", y=\"age\",hue=\"manner_of_death\", data=police_killings)\nplt.show()","6236c295":"data.head()","53b0d88a":"sns.pairplot(data)\nplt.show()","8afa7986":"police_killings.gender.value_counts()","9044081e":"police_killings.head()","3d7d688d":"# Murder properties\n# Manner of death\nsns.countplot(police_killings.gender)\n#sns.countplot(police_killings.manner_of_death)\nplt.title(\"gender\",color = 'blue',fontsize=15)","60112a03":"# murder weapon\narmed = police_killings.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","3558ee26":"# age of killed people\nabove25 =['above25' if i >= 25 else 'below25' for i in police_killings.age]\ndf = pd.DataFrame({'age':above25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color = 'blue',fontsize=15)","95ef5af7":"# Race of killed people\nsns.countplot(data=police_killings, x='race')\nplt.title('Race of killed people',color = 'blue',fontsize=15)","2640c106":"# Most dangerous cities\ncity = police_killings.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title('Most dangerous cities',color = 'blue',fontsize=15)","139964ec":"# most dangerous states\nstate = police_killings.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'blue',fontsize=15)","18da9973":"# Having mental ilness or not for killed people\nsns.countplot(police_killings.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","54354b43":"# Threat types\nsns.countplot(police_killings.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","a17cc127":"# Flee types\nsns.countplot(police_killings.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","33f93d27":"# Having body cameras or not for police\nsns.countplot(police_killings.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","a0768cd4":"# Kill numbers from states in kill data\nsta = police_killings.state.value_counts().index[:10]\nsns.barplot(x=sta,y = police_killings.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","41b0773b":"# INTRODUCTION\n1. Read datas\n1. Poverty rate of each state\n1. Most common 15 Name or Surname of killed peple\n1. Hight school graduation rate of the population that is order than 25 in states\n1. Percentage of state's population according to races that are black,white,native american,asian,and hispanic\n1. High school school graduation rate vs Poverty rate of each state\n1. Kill properties\n      * Manner of death\n      * Kill weapon\n      * Age of killed people\n      * Race of killed people\n      * Most dangerous cities\n      * Most dangerous status\n      * Having mental illness or not for killed people\n      * Threat types\n      * Flee types\n      * Having body cameras or not for police\n1. Race rates according to states in killdata\n1. Kill numbers from states in kill data\n     ### Plot Contents:\n1. [Bar Plot](#1)\n1. [Point Plot](#2)\n1. [Join Plot](#3)\n1. [Pie Chart](#4)\n1. [LM Plot](#5)\n1. [Kde Plot](#6)\n1. [Violin Plot](#7)\n1. [Heatmap](#8)\n1. [Box Plot](#9)\n1. [Swarm Plot](#10)\n1. [Pair Plot](#11)\n1. [Count Plot](#12)\n     \n  \n    ","d7995243":"<a id=\"3\"><\/a><br>\n\n# Joint Plot","f6c9a559":"<a id=\"7\"><\/a><br>\n# Violin Plot","57084bd3":"<a id=\"1\"><\/a><br>\n# Bar Plot\n","02c83433":"<a id=\"2\"><\/a><br>\n# Point Plot","90d44e75":"<a id=\"11\"><\/a><br>\n# Pair Plot","40317095":"<a id=\"5\"><\/a><br>\n# Lm Plot","7a08bdb2":"<a id=\"4\"><\/a><br>\n# Pie Chart","17192932":"### MedianHouseholdIncome2015.csv\n### PercentOver25CompleteHightSchool.csv\n### PercentagePeopeBelowPovertyLevel.csv\n### PoliceKillingsUS.csv\n### ShareRaceByCity.csv","e606918b":"<a id=\"10\"><\/a><br>\n# Swarm Plot","72c60ebb":"<a id=\"8\"><\/a><br>\n# Heatmap","d0eb83f4":"<a id=\"6\"><\/a><br>\n# Kde Plot","3da8b57a":"<a id=\"12\"><\/a><br>\n# Count Plot","e6bbffed":"<a id=\"9\"><\/a><br>\n# Box Plot"}}