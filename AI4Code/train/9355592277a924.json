{"cell_type":{"926edf16":"code","957d2f4f":"code","46b3f45a":"code","dde3fb5d":"code","82863cc9":"code","3f587593":"code","9e97343a":"code","7dbf3c33":"code","7e969703":"code","fea75bfe":"code","b5a5bea7":"code","f55af469":"code","c9da2b58":"code","8e72bffb":"code","f6685d71":"code","52c62c06":"code","4c4c7f1b":"code","cfdc1117":"code","13ba4204":"code","f18264ba":"code","703b86af":"code","ef428d6c":"code","72765816":"code","8239dd01":"code","779b973d":"code","784a9a7b":"code","c805e673":"code","ef88cc1d":"code","0dc779f8":"code","89e93ea4":"code","0d64c54c":"code","f3566c66":"code","2393b264":"code","fecd7a3a":"code","9a5c041d":"code","ab0d9cd5":"code","39f28f71":"code","85ee9192":"code","c66c48e7":"code","f3e06bd8":"code","c477de3f":"code","a960fe88":"code","e86537f3":"code","2f0a2cab":"code","56988365":"code","fc8d468f":"code","2101283e":"code","9e79c141":"code","bb7f063c":"code","a540bee6":"code","2c4456fd":"code","df1ed122":"code","e99b6bd2":"code","624149b1":"code","f5b200c2":"code","6eb551a3":"code","f9b38f5a":"code","dac2cb36":"code","279a77af":"code","016a87e5":"code","4c31777e":"code","8dc02e0c":"code","79340e16":"code","337961d2":"code","2e5ad03e":"code","f5673958":"code","a56f324b":"code","17a427fe":"code","15570dc2":"code","9a80b035":"code","1ae4373c":"code","24ef1ecf":"code","09e79637":"code","68b656c9":"code","de0a1f66":"code","23407b2f":"code","faad7470":"markdown","0cb3e809":"markdown","233d4710":"markdown","1e562c1d":"markdown","59a291a9":"markdown","fad62298":"markdown","7a50670b":"markdown","787a83d3":"markdown","f5dceb7b":"markdown","9ee50268":"markdown","557598dd":"markdown","bfc12acc":"markdown","eb94c9eb":"markdown","5f7b5397":"markdown","298a7130":"markdown","c51260f7":"markdown","617042ce":"markdown","7e469879":"markdown","7b252ecd":"markdown","3c6daf33":"markdown","b2badb08":"markdown"},"source":{"926edf16":"import pandas as pd \nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt \nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')\ncnf, dth, rec, act = '#393e46', '#ff2e63', '#21bf73', '#fe9801'\n\nprint('Modules are imported.')","957d2f4f":"!ls ..\/input\/owidcoviddata\n!ls ..\/input\/population-by-country1\n!ls ..\/input\/time-series-covid\n!ls ..\/input\/worldwide-happiness-report-2019\n!ls ..\/input\/worldwide-happiness-report-2020\n","46b3f45a":"cc=pd.read_csv(\"..\/input\/owidcoviddata\/owid-covid-data (1).csv\")\ncc['date'] = pd.to_datetime(cc['date'],errors='coerce')\ncc\n\n","dde3fb5d":"cc=pd.read_csv(\"..\/input\/owidcoviddata\/owid-covid-data (1).csv\")\npop_dataset=pd.read_csv(\"..\/input\/population-by-country1\/population_by_country_2020.csv\")\nless=[\"Yearly Change\",'Net Change',\"Density (P\/Km\u00b2)\",\"Land Area (Km\u00b2)\",\"Migrants (net)\",\"Fert. Rate\",'Med. Age','Urban Pop %','World Share']\npop_dataset.drop(less,axis=1,inplace=True) \npop_dataset\n","82863cc9":"pop_dataset.sort_values(by=['Country (or dependency)'], inplace=True)\npop_dataset.rename(columns={\"Country (or dependency)\":\"Country name\"},inplace=True)\npop_dataset\n\n","3f587593":"corona_dataset_csv = pd.read_csv(\"..\/input\/time-series-covid\/time_series_covid19_confirmed_global (2).csv\")\ncorona_dataset_csv.head(10)\n","9e97343a":"corona_dataset_csv.shape","7dbf3c33":"corona_dataset_csv.drop(['Lat','Long'],axis=1,inplace=True)\n","7e969703":"corona_dataset_csv","fea75bfe":"corona_dataset_aggregated = corona_dataset_csv.groupby(\"Country\/Region\").sum()\ncorona_dataset_aggregated.rename(index={\"US\":\"United States\"},inplace=True)\njordan_curve=corona_dataset_aggregated\ncorona_dataset_aggregated","b5a5bea7":"corona_dataset_aggregated.shape\n","f55af469":"corona_dataset_aggregated.loc[\"Jordan\"]","c9da2b58":"\ncorona_dataset_aggregated.reset_index(inplace=True)\ncovid_con=corona_dataset_aggregated[[\"Country\/Region\",\"12\/20\/20\"]]\ncovid_con.rename(columns={\"Country\/Region\":\"Country name\"},inplace=True)\ncovid_con\n\n","8e72bffb":"data_merged = pd.merge(covid_con,pop_dataset,on=\"Country name\")\ndata_merged\n","f6685d71":"for ind,row in data_merged.iterrows():\n    data_merged.loc[ind,\"percent of cases over population(%)\"]=(row[\"12\/20\/20\"]\/row[\"Population (2020)\"])*100\ndata_merged  \n","52c62c06":"percent=data_merged[[\"Country name\",\"percent of cases over population(%)\"]]\npercent.loc[\"Country name\":\"Jordan\"]\npercent.head()\n#percent_indexed.reset_index(inplace=True)\npercent_indexed=percent\npercent_indexed\n\n","4c4c7f1b":"\n\n\ncc_=cc[[\"continent\",\"location\",\"total_cases\",\"total_tests\",\"date\"]]\n\naa=cc_.dropna(axis=0)\naa.sort_values(\"total_tests\",ascending=False)\nccc=aa.groupby(['location']).max()\nccc.drop([\"date\"],axis=1,inplace=True)\nccc\nfor i,r in ccc.iterrows():\n    ccc.loc[i,\"test per confirmed(%)\"]=(r[\"total_cases\"]\/r[\"total_tests\"])*100\ncccc=ccc.reset_index()  \ncccc\n\n","cfdc1117":"fig = px.choropleth(cc, locations=\"location\", \n                    color=np.log(cc[\"total_cases\"]),\n                    locationmode=\"country names\", hover_name=\"location\", \n                    animation_frame=cc[\"date\"],\n                    title='Cases over time', color_continuous_scale=px.colors.sequential.matter)\n#fig.update(layout_coloraxis_showscale=False)\nfig.show()","13ba4204":"def plot_map(df, col, pal):\n    \n    fig = px.choropleth(df, locations=\"location\", locationmode='country names', \n                  color=col, hover_name=\"location\", \n                  title=col, hover_data=[col], color_continuous_scale=pal)\n#    fig.update_layout(coloraxis_showscale=False)\n    fig.show()","f18264ba":"cc_deaths=cc[[\"continent\",\"location\",\"total_cases\",\"date\",\"total_deaths\",\"total_deaths_per_million\",\"total_cases_per_million\"]]\nbb=cc_deaths.dropna(axis=0)\ncc_data=bb.groupby(['location']).max()\ncc_data.drop([\"date\"],axis=1,inplace=True)\ncc_data.reset_index(inplace=True)\n\ncc_data.drop(index=171,inplace=True)\ncc_data\ncc_data[cc_data[\"continent\"]==\"Africa\"].sum()\n","703b86af":"plot_map(cc_data,'total_cases', 'matter')","ef428d6c":"plot_map(cc_data,'total_cases_per_million', 'matter')","72765816":"plot_map(cc_data,'total_deaths', 'matter')","8239dd01":"plot_map(cc_data,'total_deaths_per_million', 'matter')\n","779b973d":"percent= dict(type = 'choropleth', \n           locations = percent_indexed['Country name'],\n           locationmode = \"country names\",\n           z = percent_indexed['percent of cases over population(%)'], \n           text = percent_indexed['Country name'],\n           colorbar = {'title':'Percent'})\nlayout = dict(title = 'The Percentage of confirmed cases over population', \n             geo = dict(showframe = False,\n                       showocean = False,\n                       showlakes = True,\n                       showcoastlines = True,\n                       projection = {'type': 'natural earth'}))\nmap_ = go.Figure(data=percent,layout=layout)\niplot(map_)\n","784a9a7b":"def plot_hbar(df, col, n, hover_data=[]):\n    fig = px.bar(df.sort_values(col).tail(n), \n                 x=col, y=\"location\", color='continent',  \n                 text=col, orientation='h', width=700, hover_data=hover_data,\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\", \n                      yaxis_categoryorder = 'total ascending',\n                      uniformtext_minsize=8, uniformtext_mode='hide')\n    fig.show()\npp=percent_indexed.reset_index()    \ndef plot_hbar_(df, col, n, hover_data=[]):\n    fig = px.bar(df.sort_values(col).tail(n), \n                 x=col, y=\"Country name\",  \n                 text=col, orientation='h', width=700, hover_data=hover_data,\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\", \n                      yaxis_categoryorder = 'total ascending',\n                      uniformtext_minsize=8, uniformtext_mode='hide')\n    fig.show()    ","c805e673":"plot_hbar(cc_data, 'total_cases', 15)","ef88cc1d":"plot_hbar(cc_data, 'total_cases_per_million', 15)","0dc779f8":"plot_hbar(cc_data, 'total_deaths', 15)","89e93ea4":"plot_hbar(cc_data, 'total_deaths_per_million', 15)","0d64c54c":"plot_hbar(cccc,\"test per confirmed(%)\", 15)","f3566c66":"plot_hbar_(pp,\"percent of cases over population(%)\" , 15)","2393b264":"def plot_treemap(col):\n    fig = px.treemap(cc_data, path=[\"location\"], values=col, height=700,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()\ndef plot_treemap_(col):\n    fig = px.treemap(cccc, path=[\"location\"], values=col, height=700,\n                 title=col, color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.data[0].textinfo = 'label+text+value'\n    fig.show()    ","fecd7a3a":"plot_treemap('total_cases')","9a5c041d":"plot_treemap('total_deaths')","ab0d9cd5":"plot_treemap_('test per confirmed(%)')","39f28f71":"px.box(cc_data, x='continent', y='total_cases', color='continent',\n title='Distribution of cases in different continents')","85ee9192":"world_happiness_report = pd.read_csv(\"..\/input\/worldwide-happiness-report-2019\/worldwide_happiness_report.csv\")\nworld_happiness_report.rename(columns={\"Country or region\":\"Country name\"},inplace=True)\n","c66c48e7":"world_happiness_report","f3e06bd8":"columns_to_drop = ['Overall rank','Score']\nworld_happiness_report.drop(columns_to_drop,axis=1 , inplace=True)","c477de3f":"whr2020_csv=pd.read_csv(\"..\/input\/worldwide-happiness-report-2020\/2020.csv\")","a960fe88":"useless=[\"lowerwhisker\",\"Ladder score\",\"Standard error of ladder score\",\"upperwhisker\",\"Social support\",\"Healthy life expectancy\",\"Freedom to make life choices\",\"Generosity\",\"Perceptions of corruption\",\"Dystopia + residual\",\"Logged GDP per capita\",\"Ladder score in Dystopia\"]\nwhr2020_csv.drop(useless,axis=1,inplace=True)\n\n#whr2020_csv\n\n","e86537f3":"data=pd.merge(percent_indexed,whr2020_csv,on=\"Country name\")\ndata\n\npx.scatter(data, x='percent of cases over population(%)', y='Explained by: Log GDP per capita',color=\"Regional indicator\", hover_data=['Country name'],)","2f0a2cab":"diff=pd.merge(world_happiness_report,whr2020_csv,on=\"Country name\")\n","56988365":"for ind,row in diff.iterrows():\n    diff.loc[ind,\"diff in GDP per capita\"]=(row[\"Explained by: Log GDP per capita\"]-row[\"GDP per capita\"])*-1\n    diff.loc[ind,\"diff in Social support\"]=(row[\"Explained by: Social support\"]-row[\"Social support\"])*-1\n    diff.loc[ind,\"diff in Healthy life expectancy \"]=(row[\"Explained by: Healthy life expectancy\"]-row[\"Healthy life expectancy\"])*-1\n    diff.loc[ind,\"diff in Freedom to make life choices \"]=(row[\"Explained by: Freedom to make life choices\"]-row[\"Freedom to make life choices\"])*-1\n    diff.loc[ind,\"diff in Generosity\"]=(row[\"Explained by: Generosity\"]-row[\"Generosity\"])*-1\n    diff.loc[ind,\"diff in Perceptions of corruption\"]=(row[\"Explained by: Perceptions of corruption\"]-row[\"Perceptions of corruption\"])*-1\n\n","fc8d468f":"diff_=diff[[\"Regional indicator\",\"Country name\",\"diff in GDP per capita\",\"diff in Social support\",\"diff in Healthy life expectancy \",\"diff in Freedom to make life choices \",\"diff in Generosity\",\"diff in Perceptions of corruption\"]]\n#diff_         ","2101283e":"def plot_hbar__(df, col, n, hover_data=[]):\n    fig = px.bar(df.sort_values(col).tail(n), \n                 x=col, y=\"Country name\", color='Regional indicator',  \n                 text=col, orientation='h', width=700, hover_data=hover_data,\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\", \n                      yaxis_categoryorder = 'total ascending',\n                      uniformtext_minsize=8, uniformtext_mode='hide')\n    fig.show()\ndef plot_hbar___(df, col, n, hover_data=[]):\n    fig = px.bar(df.sort_values(col).tail(n), \n                 x=col, y=\"Country name\", color='Regional indicator',  \n                 text=col, orientation='h', width=700, hover_data=hover_data,\n                 color_discrete_sequence = px.colors.qualitative.Dark2)\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\", \n                      yaxis_categoryorder = 'total ascending',\n                      uniformtext_minsize=8, uniformtext_mode='hide')\n    fig.show()","9e79c141":"plot_hbar__(diff_, 'diff in GDP per capita', 15)","bb7f063c":"plot_hbar__(diff_, 'diff in Social support', 15)","a540bee6":"plot_hbar__(diff_, 'diff in Healthy life expectancy ', 15)              ","2c4456fd":"plot_hbar__(diff_, 'diff in Generosity', 15)  ","df1ed122":"plot_hbar__(diff_, 'diff in Perceptions of corruption', 15)","e99b6bd2":"cc=pd.read_csv(\"..\/input\/owidcoviddata\/owid-covid-data (1).csv\")\n","624149b1":"cc_=cc[[\"location\",\"total_cases\",\"total_tests\",\"date\"]]\n#cc_","f5b200c2":"aa=cc_.dropna(axis=0)\naa.sort_values(\"total_tests\",ascending=False)\nccc=aa.groupby(['location']).max()\nccc.drop([\"date\"],axis=1,inplace=True)\nccc\nfor i,r in ccc.iterrows():\n    ccc.loc[i,\"test per confirmed(%)\"]=(r[\"total_cases\"]\/r[\"total_tests\"])*100\ncccc=ccc.reset_index()  \ncccc.rename(columns={\"location\":\"Country name\"},inplace=True)\n","6eb551a3":"final_data=pd.merge(cccc,diff_,on=\"Country name\")\n#final_data","f9b38f5a":"px.scatter(final_data, y='diff in GDP per capita', x='test per confirmed(%)',color=\"Regional indicator\", hover_data=['Country name'],trendline=\"ols\")","dac2cb36":"px.scatter(final_data, y='diff in Social support', x='test per confirmed(%)',color=\"Regional indicator\", hover_data=['Country name'])","279a77af":"px.scatter(final_data, y='diff in Healthy life expectancy ', x='test per confirmed(%)',color=\"Regional indicator\", hover_data=['Country name'])","016a87e5":"px.scatter(final_data, y='diff in Generosity', x='test per confirmed(%)',color=\"Regional indicator\", hover_data=['Country name'])","4c31777e":"px.scatter(final_data, y='diff in Perceptions of corruption', x='test per confirmed(%)',color=\"Regional indicator\", hover_data=['Country name'])","8dc02e0c":"ccc.loc[\"Jordan\"]","79340e16":"test_per_conirmed=ccc.drop([\"total_tests\",\"total_cases\"],axis=1)\ntest_per_conirmed.reset_index(inplace=True)\ntest_per_conirmed.rename(columns={\"location\":\"Country name\"},inplace=True)\ntest_per_conirmed\n","337961d2":"#jordan_=cc[cc[\"location\"]==\"Jordan\"]\n#jordan_\n#jordan_['date'] = pd.to_datetime(jordan_['date'])\n#jordan_ = jordan_.replace('', np.nan).fillna(0)\n\n","2e5ad03e":"jordan_=cc[cc[\"location\"]==\"Jordan\"]\njordan_\njordan_['date'] = pd.to_datetime(jordan_['date'])\n","f5673958":"pd.set_option('display.max_columns', None)\n\n#jordan_\n","a56f324b":"def plot_daywise(col, hue):\n    fig = px.bar(jordan_, x=\"date\", y=col, width=700, color_discrete_sequence=[hue])\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\")\n    fig.show()\ndef plot_daywise_line(col, hue):\n    fig = px.line(jordan_, x=\"date\", y=col, width=700, color_discrete_sequence=[hue])\n    fig.update_layout(title=col, xaxis_title=\"\", yaxis_title=\"\")\n    fig.show()\n","17a427fe":"plot_daywise(\"total_cases\", '#333333')","15570dc2":"plot_daywise(\"new_cases\", '#333333')","9a80b035":"plot_daywise(\"total_deaths\",dth)","1ae4373c":"plot_daywise(\"new_deaths\",dth)","24ef1ecf":"plot_daywise(\"new_deaths\",dth)","09e79637":"plot_daywise(\"new_tests\",dth) ","68b656c9":"plot_daywise_line('total_cases_per_million', rec)","de0a1f66":"plot_daywise_line('total_deaths_per_million', rec)","23407b2f":"j=diff_[diff[\"Country name\"]==\"Jordan\"]\nj.drop(\"diff in Freedom to make life choices \",axis=1,inplace=True)\nj","faad7470":"![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F518134%2F485aa04e87e4e45c91815101784c6d95%2Fcorona-4930541_1280.jpg?generation=1585438527494582&alt=media)","0cb3e809":"Let's see number of deaths on map.We can see US,Brazil,Mexico and India are distinctive\n\n\n<span style=\"color:red\"><b>You can click each country and see the number of the total deaths.<\/b><\/span>","233d4710":"Let's see number of confirmed cases on map.We can see US,Brazil and India are distinctive\n\nFor africa regions, the  confirmed cases is lower than other continents, I guess this is due to the fact that number of tests is quite low. \n\n<span style=\"color:red\"><b>You can click each country and see the number of the total confirmed cases.<\/b><\/span>","1e562c1d":"<a id=\"id_recover\"><\/a>\n# Importing the world happiness reports (2019-2020)","59a291a9":"<a id=\"id_ref\"><\/a>\n# Ploting regression graphs Globally\n","fad62298":"## Table of Contents\n\n\n**[Load Data](#id_load)**<br\/>\n**[Worldwide spread](#id_ww)**<br\/>\n**[COVID-19 maps](#id_country)**<br\/>\n**[World map: Confirmed cases relative to the size of the population](#id_province)**<br\/>\n**[Top 15 countries](#id_province)**<br\/>\n**[Visulizing Treemaps ](#id_e)**<br\/>\n**[The distripution of  cases in different continents](#id_a)**<br\/>\n**[Importing the world happiness reports (2019-2020)](#id_r)**<br\/>\n**[ploting top 15 countries impacted in COVID-19](#id_c)**<br\/>\n**[Ploting regression graphs Globally](#id_g)**<br\/>\n**[Jordan analysis and visualization](#id_jordan)**<br\/>","7a50670b":"<a id=\"id_us\"><\/a>\n\n# Top 15 countries\n\n\n","787a83d3":"We can see that south,north America and europe has the most number of total deaths per million\n\n<span style=\"color:red\"><b>You can click each country and see the number of the total deaths per million.<\/b><\/span>","f5dceb7b":"The World Happiness Report is a landmark survey of the state of global happiness that ranks 156 countries by how happy their citizens perceive themselves to be. The World Happiness Report 2020 for the first time ranks cities around the world by their subjective well-being and digs more deeply into how the social, urban and natural environments combine to affect our happiness.","9ee50268":"<a id=\"id_asia\"><\/a>\n# The distripution of  cases in different continents","557598dd":"\n<span style=\"color:red\"><b>You can click each country and see the number of the total confirmed cases per million.<\/b><\/span>","bfc12acc":"<a id=\"id_country\"><\/a>\n# COVID-19 maps\n","eb94c9eb":"<a id=\"id_converge\"><\/a>\n# ploting top 15 countries impacted in COVID-19","5f7b5397":"Coronavirus is continuing its spread across the world with almost 100 million confirmed cases in 191 countries and more than two million deaths.\nand the virus has been detected in nearly every country, as these maps show.\n\nWe can see trend moving to China -> Europe -> US\n\n<span style=\"color:red\"><b>You can click each country and see the number representing the spread of the virus.<\/b><\/span>","298a7130":"## Prepared by :Abdel-rahman Al-Kafaween\n","c51260f7":"# COVID-19 Impact in Jordan\n## (Analysis,Visualization and  Comparaisons)","617042ce":"<a id=\"id_ww\"><\/a>\n# Worldwide spread","7e469879":"<a id=\"id_europe\"><\/a>\n# Visulizing Treemaps\n\nWe used this technique of data visulizing  to display hierarchical data using nested rectangles,And accurately display multiple elements together","7b252ecd":"<a id=\"id_province\"><\/a>\n# World map: Confirmed cases relative to the size of the population\n\nThe differences in the population size between different countries are often large \u2013 it is insightful to compare the number of confirmed cases per million people\nso for more accurate graphs we calculated the percentage of confirmed cases per capita .\n\nThis graph demonsrtates the concentration of total cases in each indivisual reagion this graph however illustrates the cases per capita .evidentally,there is a clear difference in the colors representing the concentration of cases.\n\nFor example:\n\nmontenegro percentage is :6,998321\n\nJordan percantage is :2.690144\n\n\nTherefore, the graph was significantly useful in drawing our attention towards the various methods through which this pandemic can be observed and analyzed So, this graph was very helpful in making a more comprehensive understanding of the pandemic\n\n\n\n<span style=\"color:red\"><b>You can click each country and see the percentage.<\/b><\/span>\n\n","3c6daf33":"<a id=\"id_jordan\"><\/a>\n# Jordan analysis and visualization","b2badb08":"<a id=\"id_load\"><\/a>\n# Load Data"}}