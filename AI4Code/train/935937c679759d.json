{"cell_type":{"47f3f0d4":"code","88d51e1d":"code","d4cefa1e":"code","be320778":"code","ead911d1":"code","ef5c0088":"code","c56a799d":"code","4e119129":"code","94682d30":"code","5051825f":"code","6faa5996":"code","1d19b00c":"code","67765090":"code","1fdcc66f":"code","91f6fdb0":"code","70ad7701":"code","60223e2f":"code","04432859":"code","030eb54d":"code","06cc9dc1":"code","2769f381":"code","6a9d97cc":"code","723b821c":"code","6b93da79":"code","98d40d06":"code","c91e7624":"markdown","c262f4ea":"markdown","8c948fbc":"markdown","abc4ecb4":"markdown","008fd02c":"markdown","2ffbcefa":"markdown","f1c6fa18":"markdown","51652a94":"markdown","7b678d7f":"markdown","5d56c86f":"markdown","bc3fcbb6":"markdown"},"source":{"47f3f0d4":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\n# getting the path of the file\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","88d51e1d":"# ignore warning for the distplot, which is deprecated, but allows for a better viz of the histogram and kde line\n\nimport warnings\nwarnings.filterwarnings('ignore')","d4cefa1e":"# reading the dataset\n\necomm = pd.read_csv('\/kaggle\/input\/ecommerce-customers\/Ecommerce Customers.csv')\necomm.head()","be320778":"ecomm.info(memory_usage='deep')","ead911d1":"# data types are OK. Confirming that there are no null values:\n\necomm.isna().sum()","ef5c0088":"ecomm.describe()","c56a799d":"# dropping the 'Avatar' column\n\necomm = ecomm.drop('Avatar', axis=1)\n\n# checking the 'Address' columns, it looks like some records do not have the state available\n\necomm.Address.str.split(',',expand=True).sample(10)","4e119129":"# plotting for columns that have, for illustrative purposes only\n\necomm['State'] = ecomm.Address.str.split(',', expand=True)[1].str.split(' ', expand=True)[1]\necomm = ecomm[['Email', 'Address', 'State', 'Avg. Session Length', 'Time on App', 'Time on Website', 'Length of Membership', 'Yearly Amount Spent']] # rearranging columns\nplt.figure(figsize=(10,8))\necomm.groupby('State').sum()['Yearly Amount Spent'].sort_values(ascending=False)[1:10].plot(kind='bar', color='blue');\nplt.title('Amount Spent by US State', loc='Left', fontsize=17, pad=20);","94682d30":"# relationships across the dataset\n\nsns.set_style('whitegrid')\nsns.pairplot(ecomm);\n\n# side note: the dataset is already normally distributed (good sign for the regression analysis)\n# length of membership seems to have the highest correlationw with the amount spent. Time on app apparently comes second.","5051825f":"# heatmap for corr analysis\n\nplt.figure(figsize=(10, 8))\nsns.heatmap(ecomm.corr(),annot=True, cmap='coolwarm');\nplt.title('Correlation of the Dataset', loc='left', fontsize=15);","6faa5996":"# length of membership vs. yearly amount spent\n\nsns.regplot(data=ecomm, x='Length of Membership', y='Yearly Amount Spent', color='r');","1d19b00c":"# yearly amount spent vs time on website\n\nsns.set_style('whitegrid')\nsns.jointplot(x=ecomm['Time on Website'], y=ecomm['Yearly Amount Spent'], kind='hex');\n\n# the lack of a strong relationship between the variables is quite apparent\n\nsns.jointplot(kind='reg',x=ecomm['Time on Website'], y=ecomm['Yearly Amount Spent']);","67765090":"# yearly amount spent vs time on app\n\nsns.jointplot(x=ecomm['Time on App'], y=ecomm['Yearly Amount Spent'], color='g', kind='hex');\n\n# much stronger correlation\n\nsns.jointplot(kind='reg',x=ecomm['Time on App'], y=ecomm['Yearly Amount Spent'], color='g');","1fdcc66f":"from sklearn.model_selection import train_test_split\n\nX = ecomm[['Avg. Session Length', 'Time on App','Time on Website', 'Length of Membership']]\ny = ecomm['Yearly Amount Spent']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","91f6fdb0":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression().fit(X_train, y_train)\n\n# printing the coefficients and score\n\nprint(f'Coefficients: {reg.coef_}. \\nScore: {reg.score(X_train, y_train)}.')","70ad7701":"# calculating the metrics - I'll use the MAE, MSE, RMSE. And also print the explained variance score (R^2) again, just so they're together.\n\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, explained_variance_score\npredictions = reg.predict(X_test)\nmae = mean_absolute_error(y_test, predictions)\nmse = mean_squared_error(y_test, predictions)\nrmse = np.sqrt(mse)\nrsqrt = explained_variance_score(y_test, predictions)\n\nprint('MAE: {} \\nMSE: {} \\nRMSE: {} \\nR-squared: {}'.format(mae, mse, rmse, rsqrt))\n\n# the model explains approx. 98% of the variance, which is extremely accurate","60223e2f":"reg.predict(X_test)\n\nax = sns.regplot(x=y_test, y=reg.predict(X_test),\n                scatter_kws={'color': 'blue'}, line_kws={'color':'red'});\nax.set(xlabel='y test', ylabel='predicted y');","04432859":"# sample of predicted vs. actual amount spent\n\nsamp = pd.DataFrame({'Prediction': predictions, 'Actual': y_test}, index=None)\nsamp.sample(10)","030eb54d":"x_ax = range(len(X_test))\nplt.figure(figsize=(18,8))\nplt.plot(x_ax, y_test, lw=1, color='blue',label=\"Original\")\nplt.plot(x_ax, predictions, lw=0.8, color='red', label = \"Predicted\", marker=\"x\", markersize=5)\nplt.legend()\nplt.title('Comparison between original and predicted amounts', loc='left', fontsize=15, pad=20);","06cc9dc1":"sns.distplot(y_test - predictions);","2769f381":"coeff = pd.DataFrame(index=X.columns, columns=['Coefficients'], data=reg.coef_)\ncoeff","6a9d97cc":"from sklearn.cluster import KMeans\nclus = X\n\n# elbow method\n\nc = []\nfor i in range(1, 10):\n    km = KMeans(n_clusters=i, init='k-means++')\n    km.fit(clus)\n    c.append(km.inertia_)\nplt.plot(range(1, 10), c);\nplt.title('Elbow Method', loc='left', fontsize=15, pad=20);\nplt.xlabel('Number of clusters');\nplt.ylabel('CS');","723b821c":"# trying out with 5 different clusters\n\nkm = KMeans(n_clusters=5)\nclus['Cluster'] = km.fit_predict(clus)\nclus['Cluster'] = clus['Cluster'].astype('category')\nclus.head(10)","6b93da79":"sns.relplot(x='Length of Membership', y='Time on App', hue='Cluster', data=clus, \n            height=10, alpha=.8, s=100, palette='Paired');","98d40d06":"clus['Yearly Amount Spent'] = ecomm['Yearly Amount Spent']\nsns.boxplot(x='Yearly Amount Spent', y='Cluster', data=clus);","c91e7624":"# Imports\n","c262f4ea":"### Description of each column, according to the dataset source\n\n* **Avg. Session Length**: Average session of in-store style advice sessions.\n* **Time on App**: Average time spent on App in minutes\n* **Time on Website**: Average time spent on Website in minutes\n* **Length of Membership**: How many years the customer has been a member.","8c948fbc":"### Insights:\n\n* Based on the coefficients, it is possible to predict - with a 98% accuracy, approx. - that, with all other features fixed, to **each unit increase in the time spent on app, there is a USD 38.10 increase in the 'Yearly Amount Spent'**.\n* Considering that it would be significantly more difficult to increase the **'Avg Session Length'** (and it may even lead to a worse customer experience) and that the **'Length of Membership'** cannot be directly stimulated (only by focusing on customer service and retention) and only grows with time, **the company should focus on**:\n##### * Further developing their mobile application, which should lead to an increase in the time customers spend on it.\n##### * Creating a survey and performing a root cause analysis to better understand how to improve the website experience and why it is not leading to sales as well as their mobile app.","abc4ecb4":"# Bonus: Clustering with K-Means\n\n* The idea is to **find the best number of clusters** and separate them in a way that would allow for a different strategy to target each one.","008fd02c":"# Preprocessing and Modeling","2ffbcefa":"# Laying out the main ideas:\n* Explore the dataset (EDA)\n* Preprocessing and modeling\n* Testing and evaluating the models\n* Conclusion (insights)\n* **Bonus**: Clustering with K-Means ","f1c6fa18":"# Predicting and Evaluating the Linear Model","51652a94":"# Conclusion and Insights of the Linear Model","7b678d7f":"# Residuals\n","5d56c86f":"# Exploratory Data Analysis (EDA)","bc3fcbb6":"##### That is it for this one. Thank you for reading! :)\nIf there's anything you believe could be improved, please, leave a comment. :)"}}