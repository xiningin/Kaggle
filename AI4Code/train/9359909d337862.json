{"cell_type":{"ef0beebb":"code","800f8417":"code","41e82f0d":"code","4b928782":"code","c828d06a":"code","52d7d479":"code","99b790ed":"code","23896a1c":"code","d7b2dba6":"code","d6607c3f":"code","9a75415f":"code","3126cd46":"code","7814d8be":"code","851bd6e7":"code","d4afb199":"code","0c2cba61":"markdown","67581636":"markdown","366a3b05":"markdown","b7f0b641":"markdown"},"source":{"ef0beebb":"# My first kernel- exciting!!! \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport pandas_profiling\nimport sqlite3 as sql\nimport datetime as dt","800f8417":"con=sql.connect(\"\/kaggle\/input\/pitchfork-data\/database.sqlite\")\ndf=pd.read_sql_query(\"SELECT DISTINCT r.reviewid, r.title, r.artist, r.score, r.author, r.pub_date, r.pub_year, y.year as album_year, g.genre, l.label FROM reviews r LEFT OUTER JOIN years y on r.reviewid=y.reviewid LEFT OUTER JOIN genres g on r.reviewid=g.reviewid LEFT OUTER JOIN labels l on r.reviewid=l.reviewid\", con)\ndf['album_year']=df['album_year'].astype('Int64')\ndf.head()\n","41e82f0d":"#Get some basic stats on the scores\ndfscore=df[['reviewid','score']].drop_duplicates()\ndfscore['score'].describe()","4b928782":"#Pitchfork does reviews of \"significant albums from the past\" weekly. I wanted to see whether these \"late\/retrospective\" have a \n#different average score than albums that are reviewed at the time of release.\ndfscore=df[['reviewid','score','album_year','pub_year']].drop_duplicates()\nrsreviews=dfscore[dfscore['pub_year']-dfscore['album_year']>1]\ntreviews=dfscore[dfscore['pub_year']-dfscore['album_year']<=1]\nprint('Timely reviews have a mean score of {:.2f}.'.format(treviews['score'].mean()))\nprint('Retrospective reviews have a mean score of {:.2f}'.format(rsreviews['score'].mean()))","c828d06a":"#Functions for quantiles\ndef q1(x):\n    return x.quantile(0.25)\ndef q3(x):\n    return x.quantile(0.75)\n\n#Various metrics on scores by Genre\ndfgenre=df[['reviewid','score','genre']].drop_duplicates()\ndfgenre=dfgenre.groupby('genre').agg(mean_score=('score','mean'), \n                             median_score=('score','median'),\n                             first_quant=('score',q1),\n                             third_quant=('score',q3),\n                             count=('score','count'))\nprint(dfgenre)\n","52d7d479":"fig=plt.figure(figsize=(14,7))\nax=plt.gca()\ngenres=list(dfgenre.index)\npositions=np.arange(len(genres))+1\nheights=dfgenre['mean_score']\nsns.barplot(genres,heights,palette='muted');\nplt.ylim(6,8)\nax.tick_params(axis='both', which='both',length=0)\nax.set_title('Mean Score by Genre')\nax.set_ylabel('Mean Score');\n","99b790ed":"#Let's find the average score by year. Note, average for all differs from above because an album can have multiple genres\ndfyear=df[['reviewid','score','pub_year']].drop_duplicates()\nprint(dfyear.pivot_table('score','pub_year',aggfunc=['mean','median',q1,q3,'count'],margins=True))","23896a1c":"#Let's find the average score by year and genre and plot it! Let's look from 2002 to 2016, since there is a similar # of reviews\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ndfgenrescore=df[(df['pub_year']>=2002)&(df['pub_year']<=2016)].drop_duplicates()\ngrouped=dfgenrescore.groupby(['pub_year','genre'])['score'].mean()\nfig,ax=plt.subplots(figsize=(14,7))\ngrouped.unstack().plot(ax=ax)\nax.tick_params(axis='both', which='both',length=0)\nax.set_xlabel('Year of Review')\nax.set_ylabel('Mean Score')\nax.set_title('Average Score by Genre')\nplt.legend(loc=(1.05,.5));\n","d7b2dba6":"#Find the trend in musicians' albums scores over time (e.g. average first score, second score, third score,etc...). See if this \n#trend differs with the number of albums Pitchfork reviews. For example, artists who have only had one album reviewed by Pitchfork\n#may have received lower scores on their first album than artists who had multiple albums reviewed by Pitchfork. I'm also curious\n#if the scores of a given artist's albums decrease with time. Being hipsters (like me!), maybe Pitchfork gets bored of a particular\n#artist\/sound with time.\n\nimport seaborn as sns\ndftrend=df[['reviewid','artist','score','album_year']].drop_duplicates()\ndftrend=dftrend.sort_values(['album_year','reviewid']).dropna(subset=['album_year'])\n#Adding the order column, which adds a sequential column (by album date) that indicates which # review this is for the artist\ndftrend['num_album_reviewed']=dftrend.groupby('artist').cumcount()+1\n#Removing 'various artists', since they have 694 albums and shouldn't count for this\ndftrend=dftrend[dftrend['artist']!='various artists']\n#Adding the max_order column, which indicates how many reviews an artist has\ndftrend['tot_albums_reviewed']=dftrend.groupby('artist')['num_album_reviewed'].transform('count')\n#For purposes of this analysis, let's make the maximum group of # of albums reviewed 5 or more and only look at albums up to\n#the fifth album\ndftrend['tot_albums_reviewed_group']=dftrend['tot_albums_reviewed']\ndftrend=dftrend[dftrend['num_album_reviewed']<=5]\ndftrend.loc[dftrend['tot_albums_reviewed_group']>=5,'tot_albums_reviewed_group']=5\n#Setting up a new data frame, dftotal, to store the grouped means\ndftotal=pd.DataFrame()\ngroups=dftrend['tot_albums_reviewed_group'].unique()\n#Let's find the average score for each album reviewed by the order in which it was released, grouped by the # of albums\n#Pitchfork reviewed by the artist\nfor i in groups:\n    dftemp=dftrend[dftrend['tot_albums_reviewed_group']==i]\n    dftemp=dftemp.groupby(['tot_albums_reviewed_group','num_album_reviewed'])['score'].agg(['mean','median',q1,q3,'count'])\n    dftemp=dftemp.reset_index()\n    dftotal=dftotal.append(dftemp)\ndftotal=dftotal.sort_values(['tot_albums_reviewed_group','num_album_reviewed'])\ndftotal=dftotal.reset_index(drop=True)\nprint(dftotal)\n\n#Regardless of how many albums Pitchfork has reviewed for an artist, it looks like the average score decreases with each album.\n#In addition, the more albums Pitchfork has reviewed for a particular artist, the higher scores the respective album receives. \n#For example, for artists with one album reviewed on Pitchfork, the average score of that album is 6.79. For artists with 5 \n#or more albums reviewed on Pitchfork, the average score of that first album is 7.61.","d6607c3f":"#Let's graph this wonderful data!\nimport matplotlib.ticker as ticker\n\ndftotal['tot_albums_reviewed_group']=dftotal['tot_albums_reviewed_group'].astype('str')\nsns.lineplot(x='num_album_reviewed',y='mean',hue='tot_albums_reviewed_group',style='tot_albums_reviewed_group',\n             palette=['red','lightcoral','maroon','dimgrey','black'],markers=True,data=dftotal);\nax = plt.gca()\nax.set_xlabel('# Album Released by Artist')\nax.set_ylabel('Mean Score')\nax.set_title('Average Review Score by # of Album Released\\nand Total Albums Reviewed by Pitchfork')\nax.xaxis.set_major_locator(ticker.MaxNLocator(integer=True))\nax.tick_params(axis='both', which='both',length=0)\nL=plt.legend()\nL.get_texts()[0].set_text('Total Number of Albums\\n Reviewed for Artist')\nL.get_texts()[5].set_text('5 or more')\n\n#Plot shows that the average score goes down as an artist releases more albums. In addition, the review for a given album\n#(first, second, third, etc) tends to be higher if Pitchfork has reviewed more of the artists' albums. This may indicate that\n#Pitchfork only continues to review albums of a certain score or that the artists who continue to make music receive higher\n#scores on Pitchfork\n","9a75415f":"#Let's find the trend between month published and average score (practice with datetimes!)\ndfdates=df[['reviewid','score','pub_date']].drop_duplicates()\ndfdates.head(5)\ndfdates['pub_date']=pd.to_datetime(dfdates['pub_date'],format='%Y-%m-%d')\ndfdates['month']=dfdates['pub_date'].dt.month\ndfdates['month_name']=dfdates['pub_date'].dt.month_name()\nmonths=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\ndfdates['month_name']=pd.Categorical(dfdates['month_name'], categories=months, ordered=True)\ndfdatesagg=dfdates.groupby('month_name')['score'].agg(['mean','median',q1,q3,'count'])\nprint(dfdatesagg)\n\n","3126cd46":"#Let's make a line graph of the scores!\nfig=plt.figure()\nax=plt.gca()\nplt.plot(list(dfdatesagg.index),dfdatesagg['mean'],'-o')\nplt.xticks(rotation=45)\nax.tick_params(axis='both', which='both',length=0)\nplt.ylim(6,8)\nax.set_ylabel('Mean Score')\nax.set_title('Mean Score by Review Month');","7814d8be":"#Let's look at the length of the title and relationship to score\ndftitle=df[['reviewid','title','score']].drop_duplicates()\ndftitle['title_length']=dftitle['title'].map(lambda x: len(x.split()))\ndftitle=dftitle[dftitle['title_length']!=0]\ndftitle['title_length_11']=dftitle['title_length']\n#Any title length greater than or equal to 11 words we'll categorize as 11\ndftitle.loc[dftitle['title_length_11']>=11,'title_length_11']=11\ndftitlegroup=dftitle.groupby('title_length_11')['score'].agg(['mean','median',q1,q3,'count'])\nprint(dftitlegroup)","851bd6e7":"title_lengths=list(dftitlegroup.index)\nsns.lineplot(x=title_lengths,y='mean',data=dftitlegroup)\nax=plt.gca()\nax.set_title('Album Title Length and Mean Score');\nax.set_ylabel('Mean Score')\nax.set_xlabel('How Many Words in Album Title')\nax.tick_params(axis='both', which='both',length=0)\nplt.xticks(np.arange(min(title_lengths), max(title_lengths)+1, 1.0))\nplt.ylim(6,8);","d4afb199":"sns.boxplot(x='title_length_11',y='score',data=dftitle)\nax=plt.gca()\nax.tick_params(axis='both', which='both',length=0)\nax.set_title('Album Title Length and Mean Score')\nax.set_ylabel('Mean Score')\nax.set_xlabel('How Many Words in Album Title');\n","0c2cba61":"Doesn't look like there's a significant trend between month of the review and the score. Let's plot it for completion.","67581636":"Additional ideas:\n\n-Perform wordclouds for reviews associated with different genres (are certain words unique to rap reviews or electronic reviews), different years, and\/or different scores\n-Predict scores by review contents","366a3b05":"**Table of Contents**\n\n* Timely vs Retroactive Reviews\n* Scores by Genre, Year, and Genre and Year\n* Score by # of Album Released and Total Albums Reviewed\n* Score by Month\n* Score by Title Length","b7f0b641":"Looks like there might be a slight positive relationship, but it's not too strong. Let's look at the distribution via box plot."}}