{"cell_type":{"288d59c7":"code","d6818582":"code","fbfe7180":"code","d632c21c":"code","07c43af3":"code","0ea23ee6":"code","1a3fafff":"code","3832d5cf":"code","b699337a":"code","d8f8c5f6":"code","a4e271e1":"code","eaa56f88":"code","e740a7d2":"code","d9d184e4":"code","360779fb":"code","cc9acfba":"code","37fd86a9":"code","80919649":"markdown","012c2c83":"markdown","65352d45":"markdown","59f5cc23":"markdown","4429b1e0":"markdown","de03eeae":"markdown","91c22544":"markdown","5a32b589":"markdown"},"source":{"288d59c7":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d6818582":"data = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv', keep_default_na=False)\ndata.info()","fbfe7180":"test = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv', keep_default_na=False)\n\ntest.info()","d632c21c":"#dataset.select_dtypes(include=['object']).columns.values","07c43af3":"#test.select_dtypes(include=['object']).columns.values","0ea23ee6":"dataset = data.iloc[:,1:81]\n\nconvert_dtype_into_obj=['MSSubClass','YearBuilt','YearRemodAdd', 'MoSold', 'YrSold']\n\nconvert_dtype_into_int = ['LotFrontage','MasVnrArea']\n\ndataset[convert_dtype_into_obj] = dataset[convert_dtype_into_obj].astype('object')\n\ndataset[convert_dtype_into_int] = dataset[convert_dtype_into_int].replace(to_replace =\"NA\", value = 0)\ndataset[convert_dtype_into_int] = dataset[convert_dtype_into_int].astype('int64')\n\n#dataset.info()","1a3fafff":"convert_dtype_into_obj=['MSSubClass','YearBuilt','YearRemodAdd', 'MoSold', 'YrSold']\n\nconvert_dtype_into_int = ['LotFrontage','OverallQual','OverallCond','MasVnrArea','BsmtFinSF1','BsmtFinSF2','BsmtUnfSF','TotalBsmtSF','BsmtFullBath','BsmtHalfBath','GarageCars','GarageArea']\n\ntest[convert_dtype_into_obj] = test[convert_dtype_into_obj].astype('object')\n\n\ntest[convert_dtype_into_int] = test[convert_dtype_into_int].replace(to_replace =\"NA\", value = 0)\ntest[convert_dtype_into_int] = test[convert_dtype_into_int].astype('int64')\n\n#test.info()","3832d5cf":"datatrain = dataset.copy()\nTest = test.drop(columns = ['Id']).copy()\n\nfrom sklearn.preprocessing import OrdinalEncoder\n\nord_enc = OrdinalEncoder()\n\ndatatrain[datatrain.columns.values.tolist()] = ord_enc.fit_transform(datatrain[datatrain.columns.values.tolist()])\n\nTest[Test.columns.values.tolist()] = ord_enc.fit_transform(Test[Test.columns.values.tolist()])\n\n\ndatatrain = datatrain.drop(columns = ['SalePrice'])\n\ndatatrain","b699337a":"Test","d8f8c5f6":"from sklearn.model_selection import train_test_split\n\nxtrain, xtest, ytrain, ytest = train_test_split(datatrain, dataset['SalePrice'].values, test_size=0.10)","a4e271e1":"from sklearn.ensemble import RandomForestRegressor \n  \nreg = RandomForestRegressor()\n\nreg.fit(xtrain,ytrain)","eaa56f88":"pred = reg.predict(xtest)","e740a7d2":"# Performance metrics\nerrors = abs(pred - ytest)\nprint('Metrics for Random Forest Trained on Original Data')\n# Calculate mean absolute percentage error (MAPE)\nmape = 100 * (errors \/ ytest)\n# Calculate and display accuracy\naccuracy = 100 - np.mean(mape)\nprint('Accuracy:', round(accuracy, 5), '%.')","d9d184e4":"pred_SalePrice = reg.predict(Test)","360779fb":"submission = test['Id']\ntest_pred = np.array(pred_SalePrice, dtype=np.float128)\ntest_pred = pd.DataFrame(test_pred)\nsubmission = pd.concat([submission,test_pred],axis=1)\nsubmission.rename({0:'SalePrice'},axis=1,inplace=True)","cc9acfba":"submission.head(10)","37fd86a9":"submission.to_csv(\"Prediction_result.csv\", index = False, header = True)","80919649":"Using OrdinalEncoders","012c2c83":"#### Features like 'LotFrontage' and 'MasVnrArea' which show these features as Object data type which in data description is integer type data, so making these object to integer type.\n\n#### Features like 'MSSubClass','OverallQual','OverallCond','YearBuilt','YearRemodAdd', 'MoSold' and 'YrSold' which show these features as integers data type which are object type data, so making these integer to object type.","65352d45":"# House Sales Price Prediction Using RandomForest Regressor","59f5cc23":"Similarly, the data which is to be treated as integer are as Object and vice versa. Thus, making changes into the dataset","4429b1e0":"In this notebook \\OrdinalEncoder is used to convert categorical features to non-categorical features.","de03eeae":"## Data Preprocessing","91c22544":"### Accuracy ","5a32b589":"## Preparing data for training and test"}}