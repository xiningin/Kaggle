{"cell_type":{"6e3c55ee":"code","03e02a5c":"code","f7c8e00c":"code","05b70f39":"code","e4569fa6":"code","51eedfce":"code","f42ec34e":"code","444af288":"code","f4f008c0":"code","26a466c1":"code","8985d47d":"code","f071f902":"code","ed03e9b7":"code","422a443b":"markdown","4f16d5c9":"markdown","2c5457e6":"markdown","ca1f359b":"markdown","c1ebaad1":"markdown","2dccabd3":"markdown","3ed28187":"markdown","fce188b3":"markdown","c8137bf3":"markdown","585eccfc":"markdown"},"source":{"6e3c55ee":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\nimport numpy as np\n\n%matplotlib inline","03e02a5c":"df = pd.read_csv('..\/input\/phishing-website-dataset\/dataset.csv')","f7c8e00c":"# First 5 sample rows of Dataset\ndf.head()","05b70f39":"# Name of columns\nlist(df.columns)","e4569fa6":"df.info()","51eedfce":"for col in df.columns:\n    unique_value_list = df[col].unique()\n    if len(unique_value_list) > 10:\n        print(f'{col} has {df[col].nunique()} unique values')\n    else:\n        print(f'{col} contains:\\t\\t\\t{unique_value_list}')","f42ec34e":"df = df.drop(columns=['index'])","444af288":"print(df['Result'].value_counts())\nsns.countplot(df['Result'])","f4f008c0":"plt.figure(figsize=(15, 15))\nsns.heatmap(df.corr(), linewidths=.5)","26a466c1":"from sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import KFold\nfrom xgboost import XGBClassifier","8985d47d":"from sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\n\n\ndef binary_classification_accuracy(actual, pred):\n    \n    print(f'Confusion matrix: \\n{confusion_matrix(actual, pred)}')\n    print(f'Accuracy score: \\n{accuracy_score(actual, pred)}')\n    print(f'Classification report: \\n{classification_report(actual, pred)}')","f071f902":"# Replacing -1 with 0 in the target variable\ndf['Result'] = np.where(df['Result']==-1, 0, df['Result'])\ntarget = df['Result']\nfeatures = df.drop(columns=['Result'])","ed03e9b7":"folds = KFold(n_splits=4, shuffle=True, random_state=42)\n\ntrain_index_list = list()\nvalidation_index_list = list()\n\nfor fold, (train_idx, validation_idx) in enumerate(folds.split(features, target)):\n    \n    model = XGBClassifier()\n    model.fit(np.array(features)[train_idx,:], np.array(target)[train_idx])\n    predicted_values = model.predict(np.array(features)[validation_idx,:])\n    print(f'==== FOLD {fold+1} ====')\n    binary_classification_accuracy(np.array(target)[validation_idx], predicted_values)","422a443b":"Let us drop the index column because that acts as a primary key and has no significance in EDA and modelling","4f16d5c9":"# MODELLING \ud83d\udc87\u200d\u2640\ufe0f\n\nWe will be using a simple tree based classifier and no hyper-parameter tuning to model and test our dataset. Note that we replace -1 with 0 and 0 marks phishing website.","2c5457e6":"You can see that there are no missing values in the Dataset","ca1f359b":"More EDA, Hyperparameter tuning, modelling and ensemble techniques are going to be updated in this kernel. Stay tuned.\n> ### DONT FORGET TO UPVOTE IF YOU LIKED IT \ud83d\ude0a\nVisit my blog akashnotes.com for more data science related blogs.","c1ebaad1":"# Data Overview","2dccabd3":"# Problem Statement\n**Phishing is a form of fraud in which the attacker tries to learn sensitive information such as login credentials or account information by sending as a reputable entity or person in email or other communication channels.**\nTypically a victim receives a message that appears to have been sent by a known contact or organization. The message contains malicious software targeting the user\u2019s computer or has links to direct victims to malicious websites in order to trick them into divulging personal and financial information, such as passwords, account IDs or credit card details.\n\nIn this notebook we will see what all features can we derive and use from the domain\/URL of a website to detect whether it is phishing or not. First of all let us understand the breakdown of a URL.\n\n# Domain Analysis\n\n**URL components** <br>\nUniform Resource Locator (URL) is created to address web pages. The figure below shows relevant parts in the structure of a typical URL.\n\n<img src='https:\/\/miro.medium.com\/max\/1400\/1*mPoNQ5LUkuOTog1dUb1EFw.png' width=600><\/img>\n\nA phisher has full control over the subdomain portions and can set any value to it. The URL may also have a path and file components which, too, can be changed by the phisher at will. The subdomain name and path are fully controllable by the phisher. We use the term FreeURL to refer to those parts of the URL in the rest of the article.<br>\nThe attacker can register any domain name that has not been registered before. This part of URL can be set only once. The phisher can change FreeURL at any time to create a new URL. The reason security defenders struggle to detect phishing domains is because of the unique part of the website domain (the FreeURL). When a domain detected as a fraudulent, it is easy to prevent this domain before an user access to it.\n\n# Dataset description\n\nThere are 4 types of features that we can extract from the URL.\n- Address Bar based Features\n- Abnormal Based Features\n- HTML and JavaScript based Features\n- Domain based Features\n\n### Address Bar based Features\n1. **Using the IP Address**<br>\nIf an IP address is used as an alternative of the domain name in the URL, such as \u201chttp:\/\/125.98.3.123\/fake.html\u201d, users can be sure that someone is trying to steal their personal information. Sometimes, the IP address is even transformed into hexadecimal code as shown in the following link \u201chttp:\/\/0x58.0xCC.0xCA.0x62\/2\/paypal.ca\/index.html\u201d.\n> RULE: IF <br>\n{If The Domain Part has an IP Address \u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n2. **Long URL to Hide the Suspicious Part**<br>\nPhishers can use long URL to hide the doubtful part in the address bar. For example: \nhttp:\/\/federmacedoadv.com.br\/3f\/aze\/ab51e2e319e51502f416dbe46b773a5e\/?cmd=_home&amp;dispatch=11004d58f5b74f8dc1e7c2e8dd4105e811004d58f5b74f8dc1e7c2e8dd4105e8@phishing.website.html\nTo ensure accuracy of our study, we calculated the length of URLs in the dataset and produced an average URL length. The results showed that if the length of the URL is greater than or equal 54 characters then the URL classified as phishing. By reviewing our dataset we were able to find 1220 URLs lengths equals to 54 or more which constitute 48.8% of the total dataset size. We have been able to update this feature rule by using a method based on frequency and thus improving upon its accuracy.\n> RULE: IF<br>\n{URL length<54 \u2192 feature = Legitimate<br>\n{else if URL length\u226554 and \u226475 \u2192 feature = Suspicious<br>\n{otherwise\u2192 feature = Phishing\n\n3. **Using URL Shortening Services \u201cTinyURL\u201d**<br>\nURL shortening is a method on the \u201cWorld Wide Web\u201d in which a URL may be made considerably smaller in length and still lead to the required webpage. This is accomplished by means of an \u201cHTTP Redirect\u201d on a domain name that is short, which links to the webpage that has a long URL. For example, the URL \u201chttp:\/\/portal.hud.ac.uk\/\u201d can be shortened to \u201cbit.ly\/19DXSk4\u201d.\n> RULE: IF<br>\n{TinyURL \u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n4. **URL\u2019s having \u201c@\u201d Symbol**<br>\nUsing \u201c@\u201d symbol in the URL leads the browser to ignore everything preceding the \u201c@\u201d symbol and the real address often follows the \u201c@\u201d symbol.\n>RULE: IF<br>\n{Url Having @ Symbol\u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n5. **Redirecting using \u201c\/\/\u201d**<br>\nThe existence of \u201c\/\/\u201d within the URL path means that the user will be redirected to another website. An example of such URL\u2019s is: \u201chttp:\/\/www.legitimate.com\/\/http:\/\/www.phishing.com\u201d. We examin the location where the \u201c\/\/\u201d appears. We find that if the URL starts with \u201cHTTP\u201d, that means the \u201c\/\/\u201d should appear in the sixth position. However, if the URL employs \u201cHTTPS\u201d then the \u201c\/\/\u201d should appear in seventh position.\n>RULE: IF<br>\n{The Position of the Last Occurrence of \"\/\/\\\" \" in the URL > 7\u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n6. **Adding Prefix or Suffix Separated by (-) to the Domain**<br>\nThe dash symbol is rarely used in legitimate URLs. Phishers tend to add prefixes or suffixes separated by (-) to the domain name so that users feel that they are dealing with a legitimate webpage. For example http:\/\/www.Confirme-paypal.com\/.\n>RULE: IF<br>\n{Domain Name Part Includes (-) Symbol \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\n7. **Sub Domain and Multi Sub Domains**<br>\nLet us assume we have the following link: http:\/\/www.hud.ac.uk\/students\/. A domain name might include the country-code top-level domains (ccTLD), which in our example is \u201cuk\u201d. The \u201cac\u201d part is shorthand for \u201cacademic\u201d, the combined \u201cac.uk\u201d is called a second-level domain (SLD) and \u201chud\u201d is the actual name of the domain. To produce a rule for extracting this feature, we firstly have to omit the (www.) from the URL which is in fact a sub domain in itself. Then, we have to remove the (ccTLD) if it exists. Finally, we count the remaining dots. If the number of dots is greater than one, then the URL is classified as \u201cSuspicious\u201d since it has one sub domain. However, if the dots are greater than two, it is classified as \u201cPhishing\u201d since it will have multiple sub domains. Otherwise, if the URL has no sub domains, we will assign \u201cLegitimate\u201d to the feature.\n> RULE: IF<br>\n{Dots In Domain Part=1 \u2192 Legitimate<br>\n{Dots In Domain Part=2 \u2192 Suspicious<br>\n{Otherwise\u2192 Phishing\n\n8. **HTTPS (Hyper Text Transfer Protocol with Secure Sockets Layer)**<br>\nThe existence of HTTPS is very important in giving the impression of website legitimacy, but this is clearly not enough. The authors in (Mohammad, Thabtah and McCluskey 2012) (Mohammad, Thabtah and McCluskey 2013) suggest checking the certificate assigned with HTTPS including the extent of the trust certificate issuer, and the certificate age. Certificate Authorities that are consistently listed among the top trustworthy names include: \u201cGeoTrust, GoDaddy, Network Solutions, Thawte, Comodo, Doster and VeriSign\u201d. Furthermore, by testing out our datasets, we find that the minimum age of a reputable certificate is two years.\n>RULE: IF<br>\n{Use https and Issuer Is Trusted &and Age of Certificate\u2265 1 Years \u2192 Legitimate<br>\n{Using https and Issuer Is Not Trusted  \u2192 Suspicious<br>\n{Otherwise\u2192 Phishing\n\n9. **Domain Registration Length**<br>\nBased on the fact that a phishing website lives for a short period of time, we believe that trustworthy domains are regularly paid for several years in advance. In our dataset, we find that the longest fraudulent domains have been used for one year only.\n>RULE: IF<br>\n{Domains Expires on\u2264 1 years \u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n10. **Favicon**<br>\nA favicon is a graphic image (icon) associated with a specific webpage. Many existing user agents such as graphical browsers and newsreaders show favicon as a visual reminder of the website identity in the address bar. If the favicon is loaded from a domain other than that shown in the address bar, then the webpage is likely to be considered a Phishing attempt.\n>RULE: IF<br>\n{Favicon Loaded From External Domain\u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n11. **Using Non-Standard Port**<br>\nThis feature is useful in validating if a particular service (e.g. HTTP) is up or down on a specific server. In the aim of controlling intrusions, it is much better to merely open ports that you need. Several firewalls, Proxy and Network Address Translation (NAT) servers will, by default, block all or most of the ports and only open the ones selected. If all ports are open, phishers can run almost any service they want and as a result, user information is threatened.\n>RULE: IF<br>\n{\"Port # is of the \" Preffered Status\u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n12. **The Existence of \u201cHTTPS\u201d Token in the Domain Part of the URL**<br>\nThe phishers may add the \u201cHTTPS\u201d token to the domain part of a URL in order to trick users. For example,\nhttp:\/\/https-www-paypal-it-webapps-mpp-home.soft-hair.com\/.\n>RULE: IF<br>\n{\"Using \" HTTP Token in Domain Part of The URL\u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n\n\n### Abnormal Based Features\n1. **Request URL**<br>\nRequest URL examines whether the external objects contained within a webpage such as images, videos and sounds are loaded from another domain. In legitimate webpages, the webpage address and most of objects embedded within the webpage are sharing the same domain. \n>Rule: IF<br>\n{% of Request URL <22% \u2192 Legitimate<br>\n{%of Request URL\u226522% and 61%\u2192 Suspicious<br>\n{Otherwise\u2192 feature=Phishing\n\n2. **URL of Anchor**<br>\nAn anchor is an element defined by the ```<a>``` tag. This feature is treated exactly as \u201cRequest URL\u201d. However, for this feature we examine:\n\tIf the ```<a>``` tags and the website have different domain names. This is similar to request URL feature. \n\tIf the anchor does not link to any webpage, e.g.:<br>\n\t```<a href=\u201c#\u201d>```<br>\n\t```<a href=\u201c#content\u201d>```<br>\n\t```<a href=\u201c#skip\u201d>```<br>\n\t```<a href=\u201cJavaScript ::void(0)\u201d>```<br>\n>Rule:  IF<br>\n{% of URL Of Anchor <31%  \u2192 Legitimate<br>\n{% of URL Of Anchor \u226531% and \u226467% \u2192 Suspicious<br> \n{Otherwise\u2192 Phishing\n\n3. **Links in ```<Meta>, <Script>``` and ```<Link>``` tags**<br>\nGiven that our investigation covers all angles likely to be used in the webpage source code, we find that it is common for legitimate websites to use ```<Meta>``` tags to offer metadata about the HTML document; ```<Script>``` tags to create a client side script; and ```<Link>``` tags to retrieve other web resources. It is expected that these tags are linked to the same domain of the webpage. \n>Rule: IF<br>\n{% of Links in ```<Meta>```,```<Script>``` and ```<Link>```<17%  \u2192 Legitimate<br>\n{% of Links in ```<Meta>```,```<Script>``` and ```<Link>``` \u226517% And\u226481% \u2192 Suspicious<br>\n{Otherwise\u2192 Phishing\n\n4. **Server Form Handler (SFH)**<br>\nSFHs that contain an empty string or \u201cabout:blank\u201d are considered doubtful because an action should be taken upon the submitted information. In addition, if the domain name in SFHs is different from the domain name of the webpage, this reveals that the webpage is suspicious because the submitted information is rarely handled by external domains. \n>Rule: IF<br>\n{SFH is \"\"about: blank\\\"\" Or Is Empty \u2192 Phishing<br>\n{SFH \"Refers To \" A Different Domain\u2192 Suspicious<br>\n{Otherwise  \u2192 Legitimate\n\n5. **Submitting Information to Email**<br>\nWeb form allows a user to submit his personal information that is directed to a server for processing. A phisher might redirect the user\u2019s information to his personal email. To that end, a server-side script language might be used such as \u201cmail()\u201d function in PHP. One more client-side function that might be used for this purpose is the \u201cmailto:\u201d function. \n>Rule: IF<br>\n{Using \"\"mail()\\\" or \\\"mailto:\\\" Function to Submit User Information\" \u2192 Phishing<br>\n{Otherwise  \u2192 Legitimate\n\n6. **Abnormal URL**<br>\nThis feature can be extracted from WHOIS database. For a legitimate website, identity is typically part of its URL. \n>Rule: IF<br>\n{The Host Name Is Not Included In URL \u2192 Phishing<br>\n{Otherwise\u2192 Legitimate\n    \n### HTML and JavaScript based Features\n1. **Website Forwarding**\nThe fine line that distinguishes phishing websites from legitimate ones is how many times a website has been redirected. In our dataset, we find that legitimate websites have been redirected one time max. On the other hand, phishing websites containing this feature have been redirected at least 4 times. \n>Rule: IF<br> \n{Number of Redirect Page \u2264 1 \u2192 Legitimate<br>\n{Number of Redirect Page \u2265 2 And < 4 \u2192 Suspicious<br>\n{Otherwise \u2192 Phishing\n\n2. **Status Bar Customization**\nPhishers may use JavaScript to show a fake URL in the status bar to users. To extract this feature, we must dig-out the webpage source code, particularly the \u201conMouseOver\u201d event, and check if it makes any changes on the status bar. \n>Rule: IF<br>\n{onMouseOver Changes Status Bar\u2192 Phishing<br>\n{It Does't Change Status Bar \u2192 Legitimate\n\n3. **Disabling Right Click**\nPhishers use JavaScript to disable the right-click function, so that users cannot view and save the webpage source code. This feature is treated exactly as \u201cUsing onMouseOver to hide the Link\u201d. Nonetheless, for this feature, we will search for event \u201cevent.button==2\u201d in the webpage source code and check if the right click is disabled. \n>Rule: IF<br>\n{Right Click Disabled \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\n4. **Using Pop-up Window**\nIt is unusual to find a legitimate website asking users to submit their personal information through a pop-up window. On the other hand, this feature has been used in some legitimate websites and its main goal is to warn users about fraudulent activities or broadcast a welcome announcement, though no personal information was asked to be filled in through these pop-up windows.\n>Rule: IF<br> \n{Popoup Window Contains Text Fields \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\n5. **IFrame Redirection**\nIFrame is an HTML tag used to display an additional webpage into one that is currently shown. Phishers can make use of the \u201ciframe\u201d tag and make it invisible i.e. without frame borders. In this regard, phishers make use of the \u201cframeBorder\u201d attribute which causes the browser to render a visual delineation. \n>Rule: IF<br>\n{Using iframe \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\n### Domain based Features\n1. **Age of Domain**<br>\nThis feature can be extracted from WHOIS database (Whois 2005). Most phishing websites live for a short period of time. By reviewing our dataset, we find that the minimum age of the legitimate domain is 6 months. \n>Rule: IF<br>\n{Age Of Domain\u22656 months \u2192 Legitimate<br>\n{Otherwise \u2192 Phishing\n\n2. **DNS Record**<br>\nFor phishing websites, either the claimed identity is not recognized by the WHOIS database (Whois 2005) or no records founded for the hostname (Pan and Ding 2006). If the DNS record is empty or not found then the website is classified as \u201cPhishing\u201d, otherwise it is classified as \u201cLegitimate\u201d. \n>Rule: IF<br>\n{no DNS Record For The Domain \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\n3. **Website Traffic**<br>\nThis feature measures the popularity of the website by determining the number of visitors and the number of pages they visit. However, since phishing websites live for a short period of time, they may not be recognized by the Alexa database (Alexa the Web Information Company., 1996). By reviewing our dataset, we find that in worst scenarios, legitimate websites ranked among the top 100,000. Furthermore, if the domain has no traffic or is not recognized by the Alexa database, it is classified as \u201cPhishing\u201d. Otherwise, it is classified as \u201cSuspicious\u201d. \n>Rule: IF<br>\n{Website Rank<100,000 \u2192 Legitimate<br>\n{Website Rank>100,000 \u2192 Suspicious<br>\n{Otherwise \u2192 Phishing\n\t\n4. **PageRank**<br>\nPageRank is a value ranging from \u201c0\u201d to \u201c1\u201d. PageRank aims to measure how important a webpage is on the Internet. The greater the PageRank value the more important the webpage. In our datasets, we find that about 95% of phishing webpages have no PageRank. Moreover, we find that the remaining 5% of phishing webpages may reach a PageRank value up to \u201c0.2\u201d. \n>Rule: IF<br>\n{PageRank<0.2 \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n\t\n5. **Google Index**<br>\nThis feature examines whether a website is in Google\u2019s index or not. When a site is indexed by Google, it is displayed on search results (Webmaster resources, 2014). Usually, phishing webpages are merely accessible for a short period and as a result, many phishing webpages may not be found on the Google index. \n>Rule: IF<br>\n{Webpage Indexed by Google \u2192 Legitimate<br>\n{Otherwise \u2192 Phishing\n\t\n6. **Number of Links Pointing to Page**<br>\nThe number of links pointing to the webpage indicates its legitimacy level, even if some links are of the same domain (Dean, 2014). In our datasets and due to its short life span, we find that 98% of phishing dataset items have no links pointing to them. On the other hand, legitimate websites have at least 2 external links pointing to them. \n>Rule: IF<br>\n{Number Of Link Pointing to The Webpage=0 \u2192 Phishing<br>\n{Number Of Link Pointing to The Webpage>0 and \u2264 2 \u2192 Suspicious<br>\n{Otherwise \u2192 Legitimate\n\n7. **Statistical-Reports Based Feature**<br>\nSeveral parties such as PhishTank (PhishTank Stats, 2010-2012), and StopBadware (StopBadware, 2010-2012) formulate numerous statistical reports on phishing websites at every given period of time; some are monthly and others are quarterly. In our research, we used 2 forms of the top ten statistics from PhishTank: \u201cTop 10 Domains\u201d and \u201cTop 10 IPs\u201d according to statistical-reports published in the last three years, starting in January2010 to November 2012. Whereas for \u201cStopBadware\u201d, we used \u201cTop 50\u201d IP addresses.\n>Rule: IF<br>\n{Host Belongs to Top Phishing IPs or Top Phishing Domains \u2192 Phishing<br>\n{Otherwise \u2192 Legitimate\n","3ed28187":"Note that feature `popUpWindow` and `favicon` are highly correlated. Looking at the definitions of these features from the Data description, we can say that, for websites where favicon is loaded from external links the pop-up window mostly contains text field. This is said just by seeing the high correlation. Dropping one of the features or not is an experimental decision.\n\nNote that some features are negatively correlated but the color index minimum correlation is upto -0.6. Negative correlations are where one feature marks it as phishing and other don't.","fce188b3":"According to the Data descrition, these are the meaning of the values in the data\n* 1 means legitimate\n* 0 is suspicious\n* -1 is phishing","c8137bf3":"The data seems pretty much balanced i.e. There is not a significant difference between the count of the target variable values.","585eccfc":"# EDA \ud83d\udcc8\ud83d\udcca\ud83d\udcc9"}}