{"cell_type":{"b3461fd4":"code","4f4405c8":"code","c25706bc":"code","ba70560b":"code","4c59c079":"code","44e02ffc":"code","552481d3":"code","5255c035":"code","3dae69bc":"code","7a140ff7":"code","587aebc2":"code","00338887":"code","5e1900c2":"code","ab51ba9a":"code","3cb5c822":"code","cb168e1a":"code","b15f89b9":"code","a865eebf":"code","04cd4a34":"code","d4be95e7":"code","6f41ad12":"code","cdfadbb2":"code","75c68c85":"code","71369673":"code","0e63851c":"code","dafda1f6":"code","bc855a78":"code","781be13d":"code","5e34980a":"code","99b52bc7":"code","b7f8a811":"code","9b4e0116":"code","c8b79e95":"code","d519a465":"code","c9c4e83e":"code","0febd400":"code","46263ffa":"code","2869b9ab":"code","db6268ac":"code","2c9ad1ae":"code","24b6519e":"code","c73b5cea":"code","08d5af66":"code","5b9bdfaf":"code","ed68e4c9":"code","ba555aed":"code","40653e7a":"code","8b90cb22":"code","0a146407":"code","07d62a87":"markdown","34f14bd2":"markdown","ed9fe421":"markdown","23924238":"markdown","0c6a52c9":"markdown","ef9b1800":"markdown","52db1097":"markdown","73987149":"markdown","43610601":"markdown","1e53fa8c":"markdown","bc2747e3":"markdown","10cf8f65":"markdown","49297f44":"markdown","2a01be46":"markdown","7fd4393a":"markdown","c6226615":"markdown","c13db4dd":"markdown","03b8b1df":"markdown","568bce72":"markdown","4d3a4f43":"markdown","57c67f9d":"markdown","4951444b":"markdown","bb9940e6":"markdown","d03d234d":"markdown","484c3e27":"markdown","94b2662e":"markdown","11c0f58e":"markdown","cdeaef15":"markdown","da449cff":"markdown","a0f57cbc":"markdown","409699ef":"markdown","77a20253":"markdown","7f091c03":"markdown","c33e5088":"markdown","6c93013d":"markdown","a5d96e96":"markdown"},"source":{"b3461fd4":"!pip install chart_studio\n!pip install pgeocode","4f4405c8":"import numpy as np\nimport pandas as pd\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\nfrom plotly.subplots import make_subplots\n\nfrom pathlib import Path\ndata_dir = Path('..\/input\/covid19-corona-virus-india-dataset')\n\nimport os\nos.listdir(data_dir)","c25706bc":"df = pd.read_csv('..\/input\/covid19-corona-virus-india-dataset\/patients_data.csv')","ba70560b":"from IPython.display import display, HTML\ndisplay(HTML(df.tail().to_html()))","4c59c079":"def state_wise_patients(name,df=df):\n    data = df.loc[df['detected_state']==name]\n    df = data[['patient_number','date_announced','detected_state']]\n    data = df.groupby('date_announced')['patient_number'].nunique()\n    data = data.reset_index()\n    data['date_announced']=pd.to_datetime(data['date_announced'],format = '%d\/%m\/%Y')\n    data = data.sort_values(by=['date_announced'], ascending=True)\n    data['patient_number'] = data.patient_number.cumsum()\n    return data","44e02ffc":"collection = {}\nfor i in df.detected_state.unique():\n    collection['patients in '+ str(i)] = state_wise_patients(i)","552481d3":"collection['patients in Maharashtra']","5255c035":"keys = list(collection.keys())","3dae69bc":"visible_True=[]\nfor i in range(len(keys)):\n    visible_True.append(True)\ndef t2f(i):\n    visible = []\n    for a in range(len(keys)):\n        if a == i:\n            visible.append(True)\n        else:\n            visible.append(False)\n    return visible","7a140ff7":"def create_buttons(keys=keys):\n    l=[dict(label = 'All',\n                  method = 'update',\n                  args = [{'visible': visible_True},\n                          {'title': 'All',\n                           'showlegend':True}])]\n    for i in range(len(keys)):\n        l.append(dict(label = keys[i],\n                  method = 'update',\n                  args = [{'visible': t2f(i)}, # the index of True aligns with the indices of plot traces\n                          {'title': keys[i],\n                           'showlegend':True}]))\n    return l","587aebc2":"fig = go.Figure()\nkeys = list(collection.keys())\nfor column in collection:\n    fig.add_trace(\n        go.Line(\n            x = collection[column].date_announced,\n            y = collection[column].patient_number,\n            name = column\n        )\n    )\n    \n#fig.update_layout(updatemenus=[go.layout.Updatemenu( active=0,buttons=list(create_buttons()))])\n\nfig.show()","00338887":"def per_day_inc(collection=collection):\n    for i in list(collection.keys()):\n        collection[i]['prev_patients'] = collection[i]['patient_number'].shift(1)\n        collection[i]['new_patients'] = collection[i]['patient_number'] - collection[i]['prev_patients']\n    return collection\ncoll1 = per_day_inc()","5e1900c2":"fig = go.Figure()\nkeys = list(collection.keys())\nfor column in collection:\n    fig.add_trace(\n        go.Line(\n            x = collection[column].date_announced,\n            y = collection[column].new_patients,\n            name = column\n        )\n    )\n    \nfig.update_layout(updatemenus=[go.layout.Updatemenu(active=0,buttons=list(create_buttons()))])\n\nfig.show()","ab51ba9a":"fig = go.Figure()\nkeys = list(collection.keys())\nfor column in collection:\n    fig.add_trace(\n        go.Line(\n            x = collection[column].date_announced,\n            y = collection[column].patient_number,\n            name = column\n        )\n    )\n    \nfig.update_layout(yaxis_type='log')\n\nfig.show()","3cb5c822":"import requests\nindia_data_json = requests.get('https:\/\/api.rootnet.in\/covid19-in\/unofficial\/covid19india.org\/statewise').json()\ndf_india = pd.io.json.json_normalize(india_data_json['data']['statewise'])\ndf_india = df_india.set_index(\"state\")","cb168e1a":"total = df_india.sum()\ntotal.name = \"Total\"\ndf_t = pd.DataFrame(total,dtype=float).transpose()\ndf_t[\"Mortality Rate (per 100)\"] = np.round(100*df_t[\"deaths\"]\/df_t[\"confirmed\"],2)","b15f89b9":"df_india[\"Mortality Rate (per 100)\"]= np.round(np.nan_to_num(100*df_india[\"deaths\"]\/df_india[\"confirmed\"]),2)\ndf_india.style.background_gradient(cmap='Blues',subset=[\"confirmed\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"deaths\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"recovered\"])\\\n                        .background_gradient(cmap='Purples',subset=[\"active\"])\\\n                        .background_gradient(cmap='plasma',subset=[\"Mortality Rate (per 100)\"])","a865eebf":"trace1 = go.Bar(\n                x = df_india.index,\n                y = df_india.deaths,\n                name = \"deaths\",\n                marker = dict(color = 'rgba(255, 174, 255, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_india.index)\n# create trace2 \ntrace2 = go.Bar(\n                x = df_india.index,\n                y = df_india.recovered,\n                name = \"recovered\",\n                marker = dict(color = 'rgba(255, 255, 128, 0.5)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_india.index)\ntrace3 = go.Bar(\n                x = df_india.index,\n                y = df_india.active,\n                name = \"active\",\n                marker = dict(color = 'rgba(0, 174, 174, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df_india.index)\ndata = [trace1, trace2,trace3]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\nfig.update_layout(yaxis_type=\"log\")\nfig.show()","04cd4a34":"import plotly.express as px\nimport numpy as np\nfig = px.scatter_3d(df_india, x='recovered', y='active', z='confirmed',size='confirmed',  color=df_india.index)\nfig.update_layout(height=800, width=800,scene_zaxis_type=\"log\",scene_yaxis_type=\"log\",scene_xaxis_type=\"log\")\nfig.show()","d4be95e7":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = df_india.index\n\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'domain'}, {'type':'domain'}]])\nfig.add_trace(go.Pie(labels=labels, values=df_india.deaths, name=\"deaths\"),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=df_india[\"Mortality Rate (per 100)\"], name=\"Mortality Rate (per 100)\"),\n              1, 2)\n\n# Use `hole` to create a donut-like pie chart\nfig.update_traces(hole=.4, hoverinfo=\"label+percent+name\")\n\nfig.update_layout(\n    title_text=\"Covid-19 \",\n    # Add annotations in the center of the donut pies.\n    annotations=[dict(text='deaths', x=0.18, y=0.5, font_size=20, showarrow=False),\n                 dict(text='Mortality', x=0.82, y=0.5, font_size=20, showarrow=False)])\nfig.show()","6f41ad12":"data_dir = Path('\/kaggle\/input\/hospitalbedloc')","cdfadbb2":"import folium\nindia = folium.Map(location=[20.5937,78.9629], zoom_start=5.4)\ndf = pd.read_csv('..\/input\/covid19-corona-virus-india-dataset\/complete.csv')\nfor lat, lon,State,Death,Total_confirmed_cases in zip(df['Latitude'], df['Longitude'],df['Name of State \/ UT'],df['Death'],df['Total Confirmed cases']):\n    folium.CircleMarker([lat, lon],\n                        radius=5,\n                        color='Blue',\n                      popup =('State:' + str(State) + '<br>'\n                             'Total Confirmed cases:' + str(Total_confirmed_cases) + '<br>',\n                              'Deaths :' + str(Death) +'<br>'\n                             ),\n                        fill_color='red',\n                        fill_opacity=0.7 ).add_to(india)\nindia","75c68c85":"df = pd.read_csv(data_dir\/'HospitalBedsIndiaLocations.csv')\ndf = df.fillna(0)\ndf['total_Beds'] = df['NumUrbanBeds_NHP18'] + df['NumRuralBeds_NHP18'] + df['NumPublicBeds_HMIS'] \ndf['total_Hospitals'] = df['NumUrbanHospitals_NHP18'] + df['NumRuralHospitals_NHP18'] + df['NumSubDistrictHospitals_HMIS'] + df['NumDistrictHospitals_HMIS']","71369673":"#india = folium.Map(location=[20.5937,78.9629], zoom_start=5.4,max_zoom=10)\nfor i in range(len(df['State\/UT'].values)):\n    folium.Circle(\n        location=[df.loc[i]['Latitude'], df.iloc[i]['Longitude']],\n        tooltip = \"<h5 style='text-align:center;font-weight: bold'>\"+ str(df.iloc[i]['State\/UT'])+\"<\/h5>\"+\n        \"<div style='text-align:center;'>\"+\"total_Beds:   \" + str(df.iloc[i]['total_Beds'])+\"<\/div>\"+\n        \"<div style='text-align:center;'>\"+\"total_Hospital:   \" + str(df.iloc[i]['total_Hospitals'])+\"<\/div>\"+\n        \"<hr style='margin:10px;'>\"+\n        \"<ul style='color: #444;list-style-type:circle;align-item:left;padding-left:20px;padding-right:20px'>\"+\n        \"<li>NumSubDistrictHospitals_HMIS: \"+str(df.iloc[i]['NumSubDistrictHospitals_HMIS'])+\"<\/li>\"+\n        \"<li>NumDistrictHospitals_HMIS:   \"+str(df.iloc[i]['NumDistrictHospitals_HMIS'])+\"<\/li>\"+\n        \"<li>TotalPublicHealthFacilities_HMIS:   \"+str(df.iloc[i]['TotalPublicHealthFacilities_HMIS'])+\"<\/li>\"+       \n        \"<li>NumPublicBeds_HMIS:   \"+str(df.iloc[i]['NumPublicBeds_HMIS'])+\"<\/li>\"+\n        \"<li>NumRuralHospitals_NHP18:   \"+str(df.iloc[i]['NumRuralHospitals_NHP18'])+\"<\/li>\"+\n        \"<li>NumRuralBeds_NHP18:   \"+str(df.iloc[i]['NumRuralBeds_NHP18'])+\"<\/li>\"+\n        \"<li>NumUrbanHospitals_NHP18:   \" + str(df.iloc[i]['NumUrbanHospitals_NHP18'])+\"<\/li>\"+\n        \"<li>NumUrbanBeds_NHP18:   \" + str(df.iloc[i]['NumUrbanBeds_NHP18'])+\"<\/li>\"+\n        \"<li>NumCommunityHealthCenters_HMIS:   \" + str(df.iloc[i]['NumCommunityHealthCenters_HMIS'])+\"<\/li>\"+\n        \"<\/ul>\",\n        radius=int((np.log2(df.iloc[i]['total_Beds']+1))*6000),\n        color=df['State\/UT'].values[i],\n        fill_color='red',\n        fill=True).add_to(india)\nindia","0e63851c":"data_dir1 = Path('\/kaggle\/input\/covid19-in-india')","dafda1f6":"df1 = pd.read_csv(data_dir1\/'AgeGroupDetails.csv')","bc855a78":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nlabels = df1.AgeGroup\nvalues = df1.TotalCases\n# Create subplots: use 'domain' type for Pie subplot\nfig = make_subplots(rows=1, cols=2, specs=[[{'type':'xy'}, {'type':'domain'}]])\nfig.add_trace(go.Bar(x=labels, y=values, name=\"bar\",marker = dict(color = 'rgba(0, 174, 174, 0.5)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = labels),\n              1, 1)\nfig.add_trace(go.Pie(labels=labels, values=values, name=\"pie\"),\n              1, 2)\n\n\nfig.update_layout(\n    title_text=\"Covid-19 Age group details \")\n    # Add annotations in the center of the donut pies.\nfig.show()","781be13d":"import pgeocode\ndf1 =  pd.read_csv('..\/input\/covid19-in-india\/ICMRTestingLabs.csv')\nnomi = pgeocode.Nominatim('IN')\nlat = []\nlong = []\nfor i in df1.pincode.values:\n    lat.append(nomi.query_postal_code(str(i)).latitude)\n    long.append(nomi.query_postal_code(str(i)).longitude)","5e34980a":"df1['lat'] = pd.Series(lat)\ndf1['long'] = pd.Series(long)\ndf1 = df1.dropna()\ndf1 = df1.reset_index()","99b52bc7":"import folium\n#india = folium.Map(location=[20.5937,78.9629], zoom_start=5.4,max_zoom=10)\nfor i in range(len(df1)):\n    folium.Circle(\n        location=[df1.loc[i]['lat'], df1.iloc[i]['long']],\n        tooltip = \"<h5 style='text-align:center;font-weight: bold'>\"+ str(df1.iloc[i]['state'])+\"<\/h5>\"+\n        \"<div style='text-align:center;'>\"+\"type:   \" + str(df1.iloc[i]['type'])+\"<\/div>\"+\n        \"<div style='text-align:center;'>\"+\"city:   \" + str(df1.iloc[i]['city'])+\"<\/div>\"+\n        \"<hr style='margin:10px;'>\"+\n        \"<ul style='color: #444;list-style-type:circle;align-item:left;padding-left:20px;padding-right:20px'>\"+\n        \"<li>lab  : \" + str(df1.iloc[i]['lab'])+\"<\/li>\"+\n        \"<li>address : \" + str(df1.iloc[i]['address'])+\"<\/li>\"+\n        \"<\/ul>\",\n        radius=30000,\n        color=df1['state'].values[i],\n        fill_color='red',\n        fill=True).add_to(india)\nindia","b7f8a811":"df1 = pd.read_csv('..\/input\/covid19-in-india\/ICMRTestingDetails.csv')","9b4e0116":"import plotly.graph_objects as go\nx1 = df1.DateTime.values\nx=df1.TotalSamplesTested.values\ny = df1.TotalIndividualsTested.values\nz = df1.TotalPositiveCases\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=x1, y=z,\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(256, 0, 256)'),\n    stackgroup='one',\n    name = 'TotalPositiveCases'\n))\nfig.add_trace(go.Scatter(\n    x=x1, y=x,\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(0, 256, 256)'),\n    stackgroup='one',\n    name ='TotalSamplesTested'\n))\n\nfig.update_layout()\nfig.show()\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=x1, y=z,\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(256, 0, 256)'),\n    stackgroup='one',\n    name = 'TotalPositiveCases'\n))\nfig.add_trace(go.Scatter(\n    x=x1, y=x,\n    hoverinfo='x+y',\n    mode='lines',\n    line=dict(width=0.5, color='rgb(0, 256, 256)'),\n    stackgroup='one',\n    name ='TotalSamplesTested'\n))\n\nfig.update_layout(yaxis_type=\"log\")\nfig.show()","c8b79e95":"df = pd.read_csv(data_dir\/'HospitalBedsIndiaLocations.csv')\ndf =df.fillna(0)\ndf['total_Beds'] = df['NumUrbanBeds_NHP18'] + df['NumRuralBeds_NHP18'] + df['NumPublicBeds_HMIS'] \ndf['total_Hospitals'] = df['NumUrbanHospitals_NHP18'] + df['NumRuralHospitals_NHP18'] + df['NumSubDistrictHospitals_HMIS'] + df['NumDistrictHospitals_HMIS']\ndf.index=df['State\/UT']\ndf = df.drop(columns=['Sno','State\/UT'])","d519a465":"df1 = pd.read_csv('..\/input\/covid19-in-india\/population_india_census2011.csv')\ndf1 = df1.sort_values(by='State \/ Union Territory')\ndf1 = df1.reset_index()\ndf1.index = df1['State \/ Union Territory']\ndf1 = df1.drop(columns=['index','Sno','State \/ Union Territory'])\nfrom IPython.display import display, HTML\ndisplay(HTML(df1.to_html()))","c9c4e83e":"df.index.values[0] = df1.index.values[0]\ndf.index.values[-5] = df1.index.values[-5]\ndf.index.values[14] = df1.index.values[13]","0febd400":"df['Population'] = df1['Population']\ndf['Rural population'] = df1['Rural population']\ndf['Urban population'] = df1['Urban population']\ndf = df.drop(['Dadra & Nagar Haveli','Daman & Diu'],axis=0)","46263ffa":"df['total_Rural_Hospitals'] = df['NumRuralHospitals_NHP18'] + df['NumSubDistrictHospitals_HMIS'] + df['NumDistrictHospitals_HMIS'] \ndf['total_Rural_Beds'] = df['NumRuralBeds_NHP18'] + df['NumPublicBeds_HMIS'] \ndf['total_Urban_Hospitals'] =  df['NumUrbanHospitals_NHP18'] + df['NumSubDistrictHospitals_HMIS'] + df['NumDistrictHospitals_HMIS']\ndf['total_Urban_Beds'] = df['NumUrbanBeds_NHP18'] + df['NumPublicBeds_HMIS'] \ndf['total_medical_centres'] = df['NumPrimaryHealthCenters_HMIS'] + df['NumCommunityHealthCenters_HMIS'] + df['TotalPublicHealthFacilities_HMIS']","2869b9ab":"df[\"Hospitals (per 100000)\"]= np.round(100000*df[\"total_Hospitals\"]\/df[\"Population\"],2)\ndf[\"Beds (per 100000)\"]= np.round(100000*df[\"total_Beds\"]\/df[\"Population\"],2)\ndf[\"rural Hospitals (per 100000)\"]= np.round(100000*df[\"total_Rural_Hospitals\"]\/df[\"Rural population\"],2)\ndf[\"rural Beds (per 100000)\"]= np.round(100000*df[\"total_Rural_Beds\"]\/df[\"Rural population\"],2)\ndf[\"Urban Hospitals (per 100000)\"]= np.round(100000*df[\"total_Urban_Hospitals\"]\/df[\"Urban population\"],2)\ndf[\"Urban Beds (per 100000)\"]= np.round(100000*df[\"total_Urban_Beds\"]\/df[\"Urban population\"],2)","db6268ac":"df = df[['total_Rural_Beds','total_Urban_Hospitals','total_Urban_Beds','total_medical_centres','Hospitals (per 100000)','Beds (per 100000)'\n    ,'rural Hospitals (per 100000)','rural Beds (per 100000)','Urban Hospitals (per 100000)','Urban Beds (per 100000)']]","2c9ad1ae":"df_india = df_india.sort_index()","24b6519e":"df['confirmed'] = df_india['confirmed']\ndf['recovered'] = df_india['recovered']\ndf['deaths'] = df_india['deaths']\ndf['active'] = df_india['active']\ndf['Mortality Rate (per 100)'] = df_india['Mortality Rate (per 100)']","c73b5cea":"df=df.dropna()","08d5af66":"df.style.background_gradient(cmap='Blues',subset=[\"Beds (per 100000)\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"Urban Hospitals (per 100000)\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"rural Hospitals (per 100000)\"])\\\n                        .background_gradient(cmap='Purples',subset=[\"rural Beds (per 100000)\"])\\\n                        .background_gradient(cmap='YlOrBr',subset=[\"Urban Beds (per 100000)\"])\\\n                        .background_gradient(cmap='Oranges',subset=[\"Hospitals (per 100000)\"])\\\n                        .background_gradient(cmap='Reds',subset=[\"Mortality Rate (per 100)\"])\\\n                        .background_gradient(cmap='Purples',subset=[\"confirmed\"])\\\n                        .background_gradient(cmap='Greens',subset=[\"deaths\"])\\\n                        .background_gradient(cmap='Blues',subset=[\"active\"])\\\n                        .background_gradient(cmap='Oranges',subset=[\"recovered\"])\\","5b9bdfaf":"import plotly.graph_objects as go\n\nfig = go.Figure(data=go.Heatmap(\n                   z=df.corr(),\n                   x=df.columns.values,\n                   y=df.columns.values,\n                   hoverongaps = False))\nfig.show()","ed68e4c9":"df = pd.read_csv('..\/input\/covid19-corona-virus-india-dataset\/patients_data.csv')\na = df.detected_district.value_counts()\na = a.dropna()","ba555aed":"!pip install opencage","40653e7a":"from opencage.geocoder import OpenCageGeocode\nkey = '157336e14b654bceb51b5fc3cc07bec4'  # get api key from:  https:\/\/opencagedata.com\ngeocoder = OpenCageGeocode(key)\nquery = 'Bid, India'  \nresults = geocoder.geocode(query)\nlat = results[0]['geometry']['lat']\nlng = results[0]['geometry']['lng']\nprint (lat, lng)","8b90cb22":"from scipy.optimize import curve_fit\nimport matplotlib.pyplot as pt","0a146407":"def log_curve(x, k, x_0, ymax):\n    return ymax \/ (1 + np.exp(-k*(x-x_0)))\ndef fit_curve():\n    for i in list(collection.keys()):\n        if collection[i]['patient_number'].max()>650:\n            x_data = range(len(collection[i].index))\n            y_data = collection[i]['patient_number']\n            popt, pcov = curve_fit(log_curve, x_data, y_data, bounds=([0,0,0],np.inf), maxfev=50000)\n            estimated_k, estimated_x_0, ymax= popt\n            k = estimated_k\n            x_0 = estimated_x_0\n            y_fitted = log_curve(range(0,160), k, x_0, ymax)\n            fig = go.Figure()\n            fig.add_trace(go.Line(x = np.arange(160),y = y_fitted,name ='predicted ' + i  ))\n            fig.add_trace(go.Line(x = np.arange(80),y = y_data,name = i))\n            fig.show()\nfit_curve()","07d62a87":"Using pgeocode library to get latitude and longitude from the pincode","34f14bd2":"# Contents\n\n* [<font size=4>Findings<\/font>](#1)\n    * [Number of Patients](#1.1)\n    * [Daily increase in Patients](#1.2)\n    * [Explaining the trends](#1.3)\n    * [Deaths and Mortality](#1.4)\n    * [Age Group](#1.5)\n    * [Sample tested](#1.6)\n    * [Hospital and Beds](#1.7)\n    * [Correlation](#1.8)\n    * [curve fit](#1.9)\n  \n* [<font size=4>My Thoughts<\/font>](#2)","ed9fe421":"3D scatter plot showing a great pattern all of the data points are aligned in a linear fashion reason ??(tell in comments)","23924238":"### 7. Findings Hospitals and Beds <a id=\"1.7\"><\/a>\n1. States like Andaman and Nicobar Islands ,Sikkim ,Tripura,Himachal Pradesh has a very good number in Urban_beds per 100000 as compared to other states but keeping in mind these states has low population as compared to Uttar pradesh, Maharashtra etc.\n2. Chandigrah has around 13000 rural beds for every 100000 which very good as compared to other region,Delhi also has around 5000 rural beds per 100000 which is also very good this might be a reason that delhi has such low mortality rate\n3. Rajasthan , Tamil nadu ,Uttar pradesh has very low beds per person but still they have very low mortality rate which is good leading us to think that the government of these states has done some good work on social distancing\n4. Madhya pradesh and Maharashtra has high mortality rate also they have low bed and hospitals per 100000 in all aspects<br>\nmore results can be inferred so brainstorm on it","0c6a52c9":"This notebook is my contribution to show how the medical situations are in India and what are estimates and trends.<br>\nCredit - Whole Kaggle community but special thanks to<br>\n1. [Logistic Curve Fitting - Global Covid-19 Confirmed](https:\/\/www.kaggle.com\/dferhadi\/logistic-curve-fitting-global-covid-19-confirmed) ~ by Daner Ferhadi for curve fitting ","ef9b1800":"Shows the information about the number of patients this dataset is updated in every 24 hours till today we see their are 11512 cases of covid in india<br>\n> a little info - i started making this notebook yesterday and there where about near 9500 patients so you can see how sevierly the number is increasing","52db1097":"**Now i have described how the trends of testing and +ve cases connects with each other**\n### data is till 27th of April ","73987149":"<font color=\"red\" size=3>It might take some time to load <\/font>","43610601":">But why does Mumbai is worst hit<br>\nMaharashtra is bearing the brunt of India\u2019s COVID-19 crisis, with 23% of the total cases and 46% of overall deaths*. Most cases are from Mumbai, with the highest share in its G-south ward. Wards with dense populations have the highest number of cases. The State has the highest number of such wards.\nfor more you can [see](https:\/\/www.livemint.com\/news\/india\/coronavirus-update-mumbai-s-covid-19-case-count-breaches-10-000-mark-11588780219101.html)","1e53fa8c":"**geo spacial veiw of patients in different states of india (hover to view)**","bc2747e3":"### 2. Findings - Daily increase in  Patients <a id=\"1.2\"><\/a>\nyou can see the plots of these states either by clicking the legend or by the dropdown list\n1. In Maharastra the daily increase in number of patients were 117 till 8 April but the sudden increase is noted on april 9 and april 13 \n2. Thought uttar pradesh saw a spike on april 4 and after 11 we see peaks on 13 april(75) and 14 april(102)\n3. Well in rajasthan we see spike on 5 april but latter we saw spikes on 9 and after this day we saw sudden growth of 317 in number of patients \n4. Tamil Nadu see unprecedental increase on 1 April around 100 patients +ve in a single day explains why 29 - 5 April period in tamil nadu was severe\n5. Though Delhi has seen up and down in the daily rate of +ve cases but 13 april saw 356 patients in a day ","10cf8f65":"we will analyze these states\n1. Maharashtra\n2. Uttar pradesh\n3. Rajasthan\n4. Tamil Nadu\n5. Delhi \n<br>\n<br>\nbecause of these states in total comprises of 60% of india's covid +ve cases","49297f44":"### 1. Findings - Number of Patients <a id=\"1.1\"><\/a>\nyou can see the plots of these states either by clicking the legend or by the dropdown list\n1. As you have seen in maharasshtra the situation started getting bad in the period of 29 - 3 april and then their is near exponancial growth shows that their might had been an outbreak or a system failure\n2. Though the condition is uttar pradesh was not that harsh as it was in maharashtra but the conditions goes out of handle in the period of 29 - 5 april when cluster spreading starts\n3. In rajasthan Same period of  29 - 5 april is time when it starts to grow in an exponancial manner\n4. Okay see again the time bound of 29 - 5 april here we se a sudden growth 30 March(67) - 5 april(571) 9x time growth\n5. Delhi is too different as the period was 1-5 april when the outbreak happens","2a01be46":"**Geo spacial view about the number of medical care facilities available in indian states (hover to view)**","7fd4393a":"As we all know how this virus is spreading very dangerously in the communities and localities. While kaggle community is working hard to show how is the spreading trend is in the different countries of the world .The trends of COVID in india is not lesser known as it is spreading very rapidly in the indian subcontinent but measures taken by Indian government are good and essential but still we should prepare for a long fight against this pandemic until scientists all around the world could find a breakthrough.Until than STAY INDOORS and follow the guidelinces of the authorities. <font color=\"red\" size=3>STAY SAFE<\/font>","c6226615":"Aggregating the Beds and Hospitals in different states","c13db4dd":"**This Map plot shows where are the labs are situated in different regions of india and which state has more labs(Hover to see)**","03b8b1df":"## New Updates\n1. Zone Division <br>\nstarting May 4, the Union Health Ministry has issued a revised list of districts under red, orange and green zones Friday. A total of 130 districts across the country have been placed under the red zone, while 284 and 319 districts have been identified as orange and green zones, respectively.\nThis revised classification is based on the incidence of cases, doubling rate, the extent of testing and surveillance feedback. As per the revised criteria, Union Health Secretary Preeti Sudan, in a letter to state chief secretaries, said, green zones are districts which haven\u2019t reported a fresh case in 21 days, down from the 28 days earlier. The orange zones are those with a few cases, and the red ones have a large number of cases.\nfor more you can [see](https:\/\/www.hindustantimes.com\/india-news\/india-s-lockdown-3-0-restrictions-red-zone-and-travel-decoded-in-9-points\/story-sOpDy1zkSdL3SetlJpOaQJ.html)","568bce72":"New columns\n1. total_Rural_Hospitals - total rural Hospital in the state\n2. total_Rural_Beds - total rural beds in the state\n3. total_Urban_Hospitals - total Urban Hospitals in the state\n4. total_Urban_Beds - total Urban Beds in the state","4d3a4f43":"Now we will analyze the Hospitals and beds available in different states\n\n![](https:\/\/akm-img-a-in.tosshub.com\/indiatoday\/images\/story\/202003\/coronaviruspatients-770x433.jpeg?FySKakF9X_ltswD07Oz2lJWHl0iRoyof)","57c67f9d":"### 3. Findings - Explaining the trends <a id=\"1.3\"><\/a>\n1. In log scale we see a linear growth in number of patients from 15 of March\n2. Same linear growth is observed in Uttar pradesh from 8 March\n3. Rajathan growth pattern matches the Uttar pradesh but rate is more\n4. 18 March is the day when patient number starts grow in an exponancial manner\n5. Delhi is also follows the same trend describing that Covid increases Exponancially","4951444b":"<center><img src='https:\/\/akm-img-a-in.tosshub.com\/indiatoday\/images\/story\/202004\/Screenshot_2020-04-06_at_3.36.-770x433.png?7sMd_I7U5lOVvbjtmGmSJjU3nrUvnHc5' size ='1000px'><\/center>","bb9940e6":"**Here i have tried to show the distribtution of ICMR labs around the states**\n![](https:\/\/socialimages.sakalmediagroup.com\/sakaltimes-prod\/s3fs-public\/news-story\/cover-images\/1ICMR_0.jpg?unHhcHI1moxtdh3EaxAFeBKxpEh1mnJE)","d03d234d":"<font color=\"red\" size=3>Please UPVOTE this kernel if you like it. It motivates me to produce more quality content :) <br><br>\n    Please do comment what your views are and what you understand from this.\n    <br><br> Dont't forget to give your suggestions in the comment section <\/font>","484c3e27":"![](https:\/\/media.cntraveller.in\/wp-content\/uploads\/2020\/04\/BMC-mumbai-coronavirus-containment-zone-map-screen.jpg)","94b2662e":"### 5. Findings Age Group <a id=\"1.5\"><\/a>\n1. As you can see the patients are most in the region of 20-29,30-39 age group\n2. 20-29 region comprises of 24.9% of the people that are infected while 30-39 capture 21.1% \n<br>shows that people in the these 2 regions are more infected but nothing much can be said as age group data is less avialable","11c0f58e":"> for instance \nsee collection['patients in Maharashtra']","cdeaef15":"### 4. Findings - Deaths and Mortality <a id=\"1.4\"><\/a>\n1. India saw around 38.7% deaths in maharashtra and 22% in Gujarat\n2. West Bengal ,Maharashtra ,Punjab, Madhya Pradesh mortality rate is significantly high as compared to other states (the mortality rate is per 100 patients) ignoring Meghalaya because of low data available ","da449cff":"This function segregates and collects the data of different states with dates and patient_number","a0f57cbc":"### 6. Findings Sample tested <a id=\"1.6\"><\/a>\n1. As you can see in the 1st plot the number of total samples tested are increased in a exponancial ways started(from 29 - March)\n2. Though the testing rate is increasing but still number of tests are very low in comparison to the 10% population of india\n3. In the second plot you can witness how is the increase in TotalSample leads to increase in Total+ve cases in a same manner leading us to infer that more and more testing should be done","409699ef":"### 9. Findings curve fit <a id=\"1.9\"><\/a>\n1. Until in Delhi today we see 1561 patients and the patient count might saturate in an around more 23 days\n2. For Tamil Nadu the curve shows the saturation way to early in just next 8 days.\n3. In rajasthan things will take around 24 more days  to touch the peak but this might lead to around 3000+ve patients\n4. In Uttar pradesh the peak will touch in more 23 days leading to 1000 +ve patients shows that uttar pradesh might have done some progress in flattening the curve\n5. Same situation is in Madhya pradesh as in UP they might have taken some measures to flatten the curve peak will touch in 20 more days\n6. Well I am pretty curious about the situation in Maharashtra the peak will touch in more 26 days but the rate at which the patients number increase will be very heigh until peak we will see around 8500 patients.","77a20253":"### 8. Findings Correlation <a id=\"1.8\"><\/a>\n1. Hospitals(per 100000)  have a correlation of -.35 with confirmed cases and -.27 with deaths\n2. Urban_beds(per 100000) have a correlation values of -.33 with active cases\n3. Beds(per 100000) has a -ve correlation value with Mortality Rate","7f091c03":"![](https:\/\/pbs.twimg.com\/media\/EVzBrIIUYAEsdj2.jpg)","c33e5088":"the above table is self explainatory it shows the most essential stats about the COVID situation (confirmed \trecovered \tdeaths \tactive \tMortality Rate (per 100)) with darker color means high values","6c93013d":"Simple bar chart in (log scale)showing the huge difference in the active and recovered cases","a5d96e96":"### My Thoughts <a id=\"2\"><\/a>\n1. I think that increasing lockdown is a good thing to be done as we might have seen in the above cell's output it is important to flatten the curve an the best thing is social distancing\n2. we have seen above that the their is -ve correlation between the beds and confirmed cases so i think more medical facilities might can do the job\n3. Also we should increase the testing should be increased as testing and +ve cases have linear correlation\n4. Government should increase the testing facilities for better testing \n<br>Please provide your thoughts too in the comment sections\n\n\n![](https:\/\/www.businessinsider.in\/thumb.cms?msid=74896617&width=1200&height=900)\n\nWell in all of this negativity we can see some remarkable changes in our environment and air quality<br>\nbut due to the severe fatalities covid has inflicted on makes me sad irrespective of what is the air quality during the lockdown period.<br>\nbut i also think that the government has spent a lot of money on to reduce the air,water pollution but we never saw this level of changes<br>\nso in my though government should learn from this lockdown and try to regulate their environment saving policies"}}