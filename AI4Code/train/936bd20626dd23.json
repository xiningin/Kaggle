{"cell_type":{"af46e6e5":"code","07e26cda":"code","97324a0a":"code","893b548a":"code","472a528c":"code","08b83a5b":"code","b6950a3b":"code","25e9a80d":"code","9e5157ac":"code","46e3a699":"code","76c67389":"code","6b79a444":"code","71f29484":"code","ba1dcc0f":"code","11ef99d9":"code","b2b51ae1":"code","b43bfc2c":"code","50330609":"code","2eb738f6":"code","daafc846":"code","32bab9da":"code","06c727ae":"code","df49fcb5":"code","fc0ddfb3":"code","a64b618f":"code","45c4972f":"code","d531b1e5":"code","5a7d0a8a":"code","76185630":"code","626eb7e2":"code","963e10fb":"code","cb3034fb":"code","36138a34":"code","18550de5":"code","716fca58":"code","82930a4d":"code","3000215f":"code","0f92d7f0":"markdown","7192f78d":"markdown"},"source":{"af46e6e5":"import os\nos.listdir('..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A')","07e26cda":"im1 = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/a\/color_0_0003.png'\n\nimport cv2\nimport matplotlib.pyplot as plt\n\nimage = cv2.imread(im1)\nimage = cv2.cvtColor(image , cv2.COLOR_BGR2RGB)\n\nplt.imshow(image)\n\nprint(image.shape)","97324a0a":"from tqdm import tqdm\n\nloc = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/'\n\nftr = []\n\nfor dir in tqdm(os.listdir(loc)):\n    #print(dir)\n    for img in os.listdir(os.path.join(loc,dir)):\n        im = cv2.imread(os.path.join(loc,dir,img))\n        im = cv2.resize(im,(50,50))\n        ftr.append(im)","893b548a":"i = 0\n\nltr = []\n\nfor dir in tqdm(os.listdir(loc)):\n    #print(dir)\n    for img in os.listdir(os.path.join(loc,dir)):\n        ltr.append(i)\n    i += 1","472a528c":"actual_label = []\n\nfor dir in tqdm(os.listdir(loc)):\n    actual_label.append(dir)","08b83a5b":"actual_label","b6950a3b":"loc1 = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/a'\nloc2 = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/b'\nloc3 = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/c'\nloc4 = '..\/input\/asl-rgb-depth-fingerspelling-spelling-it-out\/dataset5\/A\/d'","25e9a80d":"from tqdm import tqdm","9e5157ac":"features_array = []\n\nfor images in tqdm(os.listdir(loc1)):\n    features = cv2.imread(os.path.join(loc1,images))\n    features = cv2.resize(features , (75,75))\n    features_array.append(features)\n    \nfor images in tqdm(os.listdir(loc2)):\n    features = cv2.imread(os.path.join(loc2,images))\n    features = cv2.resize(features , (75,75))\n    features_array.append(features)\n    \nfor images in tqdm(os.listdir(loc3)):\n    features = cv2.imread(os.path.join(loc3,images))\n    features = cv2.resize(features , (75,75))\n    features_array.append(features)\n    \nfor images in tqdm(os.listdir(loc4)):\n    features = cv2.imread(os.path.join(loc4,images))\n    features = cv2.resize(features , (75,75))\n    features_array.append(features)","46e3a699":"labels_array = []\n\nfor images in tqdm(os.listdir(loc1)):\n    labels_array.append(0)\n    \nfor images in tqdm(os.listdir(loc2)):\n    labels_array.append(1)\n    \nfor images in tqdm(os.listdir(loc3)):\n    labels_array.append(2)\n    \nfor images in tqdm(os.listdir(loc4)):\n    labels_array.append(3)","76c67389":"import numpy as np\nnp.array(ftr).shape","6b79a444":"import numpy as np\n\nft = np.array(ftr).reshape(25118 ,7500)","71f29484":"lt = np.array(ltr).reshape(25118,1)","ba1dcc0f":"import pandas as pd\ndf = pd.DataFrame(np.hstack((lt,ft)))\ndf.head()","11ef99d9":"df.shape","b2b51ae1":"df.head()\n\ndf1 = df[df[0] <= 14]","b43bfc2c":"filter_samples = []\n\nfor row in range(len(df1)):\n    filter_samples.append(df1.loc[row].max() >= 15)","50330609":"df2 = df1[filter_samples]\ndf2.head()","2eb738f6":"df2[0].value_counts()","daafc846":"Y = df2[[0]].values\nX = df2.drop(0,axis='columns').values","32bab9da":"df2.shape","06c727ae":"X.shape","df49fcb5":"X = X.reshape(7779,50,50,3)","fc0ddfb3":"print(Y[7000])\nplt.imshow(X[7010])\nplt.show()","a64b618f":"from sklearn.model_selection import train_test_split\nxtrain,xtest,ytrain,ytest = train_test_split(X,Y,train_size=0.8)","45c4972f":"xtrain.shape[1:]","d531b1e5":"import keras\nfrom keras.models import Sequential\nfrom keras.utils import np_utils\nfrom keras.layers import Dense,Activation,Flatten,Dropout,Conv2D,MaxPooling2D\nimport numpy as np","5a7d0a8a":"model = Sequential()\n\nmodel.add(Conv2D(32 , (3,3) , padding='same' , input_shape=xtrain.shape[1:]))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(32 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\nmodel.add(Dropout(0.1))\n\nmodel.add(Conv2D(64 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(64 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n#model.add(Dropout(0.1))\n\nmodel.add(Conv2D(128 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(128 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(128 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n#model.add(Dropout(0.1))\n\nmodel.add(Conv2D(256 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(256 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(256 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n#model.add(Dropout(0.1))\n\nmodel.add(Conv2D(512 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(512 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(Conv2D(512 , (3,3) , padding='same'))\nmodel.add(Activation('relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n#model.add(Dropout(0.1))\n\n\nmodel.add(Flatten())\nmodel.add(Dense(15,activation='sigmoid'))","76185630":"model.summary()","626eb7e2":"import tensorflow as tf\n\n#sgd = tf.keras.optimizers.SGD(0.3)\n\nmodel.compile(loss='categorical_crossentropy',\n             optimizer='sgd',\n             metrics=['accuracy'])","963e10fb":"xtrainC = xtrain\/xtrain.max()\nxtestC = xtest\/xtest.max()","cb3034fb":"ytrainC = np_utils.to_categorical(ytrain)\nytestC = np_utils.to_categorical(ytest)","36138a34":"model.fit(xtrainC,ytrainC,\n         epochs=10,\n         validation_data=(xtestC,ytestC))","18550de5":"model.evaluate(xtrainC,ytrainC)","716fca58":"model.evaluate(xtestC,ytestC)","82930a4d":"actual_label[np.argmax(model.predict(xtestC[70].reshape(1,50,50,3)))]","3000215f":"plt.imshow(xtestC[70])\nplt.show()","0f92d7f0":"**CNN Architecture to identify finger spelling**","7192f78d":"#Image Feature Engineering : - Create a structured data using image features"}}