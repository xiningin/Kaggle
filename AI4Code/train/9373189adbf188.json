{"cell_type":{"0131d0e6":"code","56bbca60":"code","7527a969":"code","7a4daa83":"code","31a30539":"code","81d0dad8":"code","11a4038a":"markdown","c80a36e3":"markdown","8e8dfe0c":"markdown","7f21c920":"markdown","57312b5c":"markdown","2ab5fac5":"markdown","4155b0c5":"markdown"},"source":{"0131d0e6":"import numpy as np\nimport pandas as pd","56bbca60":"#Let's suppose we have a data_set of population of different countries.\n#There is a country name column in that data set with followig entries.\n\ncountry_name=[\"India\",\"USA\",\"China\",\"Lebanon\",\"india\",\"InDia\",\"South Africa\",\"china\"]\n\n#check unique values in country_name.\n\nprint(np.unique(country_name))","7527a969":"#In above column we can see that there is a clear inconsistency in country name.\n#As we know India,india,InDia all represent same country and same thing in case of China and china, but it's obvious that any programming lnguage will\n#treat them differently.\n#We can deal with this problem by converting them into lowercase or uppercase letters\n\ncountry_name_lower=[name.lower() for name in country_name]\ncountry_name_upper = [name.upper() for name in country_name]\nprint(\"Countries Name\")\nprint(country_name_lower)\nprint(country_name_upper)\nprint(\"Unique Countries Name\")\nprint(np.unique(country_name_lower))\nprint(np.unique(country_name_upper))","7a4daa83":"#we are taking same country_name list.\ncountry_name=[\"India\",\"USA\",\"China\",\"Lebanon\",\"SouthAfrica\",\"Austria\",\"Australia\",\"Pakistan\",\"South Africa\",\"South'Africa\"]\nprint(np.unique(country_name))","31a30539":"#In above country_name both SouthAfrica,South Africa and South'Afrcia all are same for us but not for programming language.\n#We can solve this by replacing one of them with other.\n#Like we can replace \"South Africa\" with \"SouthAfrica\" or vice versa.\n\nimport string\n\ncountry_name_lower = [name.lower() for name in country_name]\ncountry_name_lower_right=[]\nfor name in country_name_lower:\n    name_char=[ch for ch in name if ch not in string.punctuation+\" \"] #space is not in punctuation. run in code `\" \" in string.punctuation`\n    country_name_lower_right.append(\"\".join(name_char))\n    \nprint(\"Country Name Before\")\nprint(country_name_lower)\nprint(\"Country Name After\")\nprint(country_name_lower_right)\nprint(\"Unique Country Name Before\")\nprint(len(np.unique(country_name_lower)))\nprint(\"Unique Country Name After\")\nprint(len(np.unique(country_name_lower_right)))","81d0dad8":"#let's take example of height\n\nheight_of_children_before = [1.2,1.7,1,-1.2,2.4,1.6,-1.8]\n\n#this height_of_children contains negative values which is thoroughly wrong because height of anyone can't be negative it's always greater than zero.\n#let's make it correct\n\nheight_of_children_after = np.abs(height_of_children_before)\n\nprint(height_of_children_after)","11a4038a":"**Yay we did it!!**\ud83d\udc4d","c80a36e3":"# Inconsistency in data\n\n**There are many type of inconsistencies in any data but in this we will understand some most frequent**","8e8dfe0c":"# Thank You","7f21c920":"**we can see that India and india are showing differently while they are same.**\n\n**we need to change it**","57312b5c":"# Case 1. When same thing is written in different cases.","2ab5fac5":"# Case 3. If some numeric value gets wrong sign","4155b0c5":"# Case 2. When punctuations change the meaning"}}