{"cell_type":{"42d6b3f4":"code","43151f5b":"code","8104a01c":"code","613490b5":"code","172b9ccc":"code","9b650b2f":"code","65fd0e32":"code","f254bf4a":"code","c2b77158":"code","05ceaf56":"code","f29bad75":"code","77f8e703":"code","cfa5ca36":"code","ab54167f":"code","f6a6c9bd":"code","69f16631":"markdown","d3d99cae":"markdown","1ce99c9f":"markdown","9847dee3":"markdown","3079604f":"markdown","fb6e5cac":"markdown","06065546":"markdown","b4bfba5a":"markdown"},"source":{"42d6b3f4":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns","43151f5b":"train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\ntrain.head(2)","8104a01c":"X=train.drop([\"label\"],axis=1).values\nY=train[[\"label\"]].values","613490b5":"plt.imshow(X[0].reshape([28,28]))","172b9ccc":"plt.imshow(X[19].reshape([28,28]))","9b650b2f":"X=X[:3001]    ### Only select limited observation forn anlaysis\nY=Y[:3001]\nprint(X.shape)\nprint(Y.shape)","65fd0e32":"X=X\/255","f254bf4a":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.15, random_state = 14)","c2b77158":"print(x_train.shape)\nprint(y_train.shape)\nprint(x_test.shape)\nprint(y_test.shape)","05ceaf56":"from sklearn.tree import DecisionTreeClassifier\ndt_classifier = DecisionTreeClassifier(criterion = 'entropy',max_depth = 8, random_state = 14)\ndt_classifier.fit(x_train,y_train)\npred_train = dt_classifier.predict(x_train)\npred_test = dt_classifier.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Training Accuracy :\", accuracy_score(pred_train,y_train))\nprint(\"Testing Accuracy :\", accuracy_score(pred_test,y_test))","f29bad75":"from sklearn.ensemble import RandomForestClassifier\nrf_classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy',max_depth = 10, random_state =14)\nrf_classifier.fit(x_train, y_train)\npred_train = rf_classifier.predict(x_train)\npred_test = rf_classifier.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Training Accuracy :\", accuracy_score(pred_train,y_train))\nprint(\"Testing Accuracy :\", accuracy_score(pred_test,y_test))","77f8e703":"import xgboost as xgb\nxg_classifier =xgb.XGBClassifier(n_estimators =5)\nxg_classifier.fit(x_train, y_train)\npred_train = xg_classifier.predict(x_train)\npred_test = xg_classifier.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Training Accuracy :\", accuracy_score(pred_train,y_train))\nprint(\"Testing Accuracy :\", accuracy_score(pred_test,y_test))","cfa5ca36":"import lightgbm as lgb\nlg_classifier=lgb.LGBMClassifier(min_child_samples=10)\nlg_classifier.fit(x_train, y_train)\npred_train = lg_classifier.predict(x_train)\npred_test = lg_classifier.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Training Accuracy :\", accuracy_score(pred_train,y_train))\nprint(\"Testing Accuracy :\", accuracy_score(pred_test,y_test))","ab54167f":"from sklearn.ensemble import VotingClassifier\nvt_classifier =VotingClassifier(estimators=[(\"dt\",dt_classifier),(\"rf\",rf_classifier),(\"xgb\",xg_classifier)\n                                           ,(\"lgbm\",lg_classifier)],voting='hard')\nvt_classifier.fit(x_train, y_train)\npred_train = vt_classifier.predict(x_train)\npred_test = vt_classifier.predict(x_test)\nfrom sklearn.metrics import accuracy_score\nprint(\"Training Accuracy :\", accuracy_score(pred_train,y_train))\nprint(\"Testing Accuracy :\", accuracy_score(pred_test,y_test))","f6a6c9bd":"pred = lg_classifier.predict(test)\npred_df = pd.DataFrame({'ImageId' : [i for i in range(1, len(pred) + 1)], 'Label' : pred})\npred_df.to_csv('submission.csv', header=True, index=False)","69f16631":"### Importing Data","d3d99cae":"## Submission for Test data ","1ce99c9f":"## Decision tree Classifier","9847dee3":"## Xgboost Algorithm","3079604f":"### Train and Test Split","fb6e5cac":"## lightgbm Algorithm","06065546":"## Voting Classifier  (Stacking)","b4bfba5a":"## Random Forest"}}