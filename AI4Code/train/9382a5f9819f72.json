{"cell_type":{"63357bad":"code","781c2c72":"code","1a5efe91":"code","190b13b3":"code","5806b36e":"code","a6e5742b":"code","ee36250d":"code","9e0553f4":"code","d8aed161":"code","7cfc8f9f":"code","e8045731":"code","98d5c68f":"code","b5cf5330":"markdown","0c8b64d7":"markdown","862ea86f":"markdown","1e5922e5":"markdown","f3b6049a":"markdown","b77dc6f1":"markdown","4fb1385e":"markdown","1208a915":"markdown","d210ec0f":"markdown","55150f6f":"markdown"},"source":{"63357bad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport missingno as msno\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib_venn as venn\nfrom math import pi\n#from pandas.tools.plotting import parallel_coordinates\nimport plotly.graph_objs as go\n#import plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","781c2c72":"covid = pd.read_csv(\"..\/input\/coronavirus-2019ncov\/covid-19-all.csv\")","1a5efe91":"covid","190b13b3":"msno.matrix(covid)\nplt.show()","5806b36e":"covid['Country\/Region'].head()","a6e5742b":"covid.columns","ee36250d":"plt.figure(figsize=(15,10))\nparallel_coordinates(covid,'Country\/Region', colormap=plt.get_cmap(\"Set1\"))\nplt.title(\"Hangi ulkede ne kadar vaka var\")\nplt.xlabel(\"Ulkeler\")\nplt.ylabel(\"vaka\")\nplt.savefig('praph.png')\nplt.show()","9e0553f4":"corr = covid.iloc[:,0:4].corr()\ncorr","d8aed161":"import networkx as nx\n\n# Transform it in a links data frame (3 cloumns only)\nlinks = corr.stack().reset_index()\nlinks.columns = ['var1', 'var2', 'value']\n\n# correlation\nthreshold = -1 # s\u0131n\u0131r\n\n# Keep only correlation over a threshold and remove self correlation ( cor (A,A)=1)\nlinks_filtered = links.loc [ (links ['value'] >= threshold) & (links ['var1'] != links ['var2'])]\n\n# Build your graph\nG=nx.from_pandas_dataframe(links_filtered, 'var1', 'var2')\n\n# Plot the network\nnx.draw_circular(G, with_labels=True, node_color='orange', node_size=300, edge_color='red', linewidths=1, font_size=10)","7cfc8f9f":"links","e8045731":"from matplotlib_venn import venn2\nLatitude = covid.iloc[:,0]\nLongitude = covid.iloc[:,1]\nvenn2(subsets = (len(Latitude)-15, len(Latitude)-15, 15), set_labels = ('Latitude','Longitude'))\nplt.show()","98d5c68f":"covid.columns","b5cf5330":"<a id = 5><\/a><\/br>\n## Donut Plot (matplotlib)\n","0c8b64d7":"<a id = 7><\/a><\/br>\n## Cluster Map (seaborn)\n","862ea86f":"# NADiR KULLANILAN G\u00d6RSELLE\u015eT\u0130RME ARA\u00c7LARI\n\n1. [Matrix and Box Plot (missingno)](#1)\n1. [Parallel Plots (pandas)](#2)\n1. [Network Charts (networkx)](#3)\n1. [Venn Diagram (matplotlib)](#4)\n1. [Donut Plot (matplotlib)](#5)\n1. [Spyder Chart (matplotlib)](#6)\n1. [Cluster Map (seaborn)](#7)\n1. [Inset Plot (plotly)](#8)\n1. [3D Plot (plotly)](#9)\n","1e5922e5":"<a id = 8><\/a><\/br>\n## Inset Plot (plotly)\n","f3b6049a":"<a id = 9><\/a><\/br>\n## 3D Plot (plotly)","b77dc6f1":"<a id = 1><\/a><\/br>\n## Matrix and Box Plot (missingno)","4fb1385e":"<a id = 6><\/a><\/br>\n## Spyder Chart (matplotlib)\n","1208a915":"<a id = 3><\/a><\/br>\n## Network Charts (networkx)\n","d210ec0f":"<a id = 2><\/a><\/br>\n## Parallel Plots (pandas)\n","55150f6f":"<a id = 4><\/a><\/br>\n## Venn Diagram (matplotlib)\n"}}