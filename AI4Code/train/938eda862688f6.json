{"cell_type":{"c4258f27":"code","c984e3cb":"code","8bc73481":"code","06d57f06":"code","2bbe195b":"code","c4b425b2":"code","a16656a8":"code","eac65410":"code","46ede494":"code","73229126":"code","8caf4029":"markdown"},"source":{"c4258f27":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\nimport seaborn as sns\n\nimport statsmodels.api as sm\nfrom statsmodels.stats import diagnostic as diag\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c984e3cb":"wines_df = pd.read_csv(\"\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\nwines_df.sample(frac=1).reset_index(drop=True)\n\nwines_df.head()","8bc73481":"display(wines_df.isna().sum())","06d57f06":"correlation = wines_df.corr()\n\nfig = plt.subplots(figsize=(10,10))\nsns.heatmap(correlation,vmax=1,square=True,annot=True,cmap='Blues')","2bbe195b":"wines_df_before = wines_df\nwines_df_after = wines_df.drop(['fixed acidity','citric acid','density'], axis = 1)\n\nX1 = sm.tools.add_constant(wines_df_before)\nX2 = sm.tools.add_constant(wines_df_after)\n\nseries_before = pd.Series([variance_inflation_factor(X1.values, i) for i in range(X1.shape[1])], index=X1.columns)\nseries_after = pd.Series([variance_inflation_factor(X2.values, i) for i in range(X2.shape[1])], index=X2.columns)\n\ndisplay(series_before)\ndisplay(series_after)\n\nwines_df = wines_df_after","c4b425b2":"x = np.array(wines_df.loc[:, wines_df.columns != 'quality'])\ny = np.array(wines_df['quality'])","a16656a8":"desc_df = wines_df.describe()\n\ndesc_df.loc['+3_std'] = desc_df.loc['mean'] + (desc_df.loc['std'] * 3)\ndesc_df.loc['-3_std'] = desc_df.loc['mean'] - (desc_df.loc['std'] * 3)\n\ndesc_df","eac65410":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.10, random_state=1)\n\nprint(x_train.shape, x_test.shape)","46ede494":"regression_model = LinearRegression()\n\nregression_model.fit(x_train, y_train)","73229126":"y_predict = regression_model.predict(x_test)\ny_predict = np.round(y_predict)\n\nsum = 0\nfor i,n in enumerate(y_test):\n    if n == y_predict[i]:\n        sum += 1\nprint(sum\/len(y_test))","8caf4029":"# **Acknowledgement**\n* [ Multiple Regression Analysis in Python ](https:\/\/www.youtube.com\/watch?v=M32ghIt1c88)"}}