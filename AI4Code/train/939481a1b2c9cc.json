{"cell_type":{"1c2a0fb7":"code","25bf4ed0":"code","5bd7c4ff":"code","f1933c9d":"code","09ee0736":"code","26584674":"code","40091f1c":"code","aec4224b":"code","cd021d37":"code","9b5d4561":"code","d63771fd":"code","c761c3f0":"code","7d5844ee":"code","c17132a3":"code","68dbaff1":"code","07e683f5":"code","b9eaabae":"code","5a7d7496":"code","738e03e1":"code","ceebc126":"code","d85df873":"code","ccb4d649":"code","dcd294fe":"code","ccf0f9b2":"code","4ec1e666":"code","f176e55b":"code","480f17cb":"code","9c460fda":"code","977a0d19":"code","bfd5b7d7":"code","64d25093":"code","c83d8d70":"code","3290d17e":"code","7fe87278":"code","32644448":"code","f69b553e":"code","35a2e0a2":"code","cf633ab8":"code","e04d6048":"code","25df8596":"code","5c35d6eb":"code","b79f77f7":"code","28e634c7":"code","dc5bcfca":"code","437ad455":"code","48f2a139":"code","1f24b9c7":"code","2f9e3533":"code","fb795fe8":"code","18101bc7":"code","8e05c394":"code","31df1805":"markdown"},"source":{"1c2a0fb7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import DBSCAN\nfrom geopy.distance import great_circle\nfrom shapely.geometry import MultiPoint\nfrom shapely.geometry import Point\nimport geopandas as gpd\nfrom geopandas import GeoDataFrame\n","25bf4ed0":"df = pd.read_csv('..\/input\/birdclef-2021\/train_metadata.csv')\ndf","5bd7c4ff":"#df['date_new']=df.date.str[:4]","f1933c9d":"#df.drop(['date'],axis=1,inplace = True)","09ee0736":"#X = df.iloc[:,3:].values\n#X","26584674":"#dx = pd.DataFrame(X, columns = ['latitude','longitude','scientific_name','common_name','author','filename','license','rating','time','url'])\n\n","40091f1c":"#dx.drop(['filename'],axis=1,inplace=True)","aec4224b":"#dx.drop(['license'],axis=1,inplace=True)","cd021d37":"#dx.drop(['rating'],axis=1,inplace=True)","9b5d4561":"#dx.drop(['time'],axis=1,inplace=True)\n#dx.drop(['url'],axis=1,inplace=True)","d63771fd":"#dx.drop(['scientific_name'],axis=1,inplace=True)","c761c3f0":"#dx.drop(['common_name'],axis=1,inplace=True)","7d5844ee":"#dx.drop(['author'],axis=1,inplace=True)","c17132a3":"#dx.drop(['date_new'],axis=1,inplace=True)","68dbaff1":"#dx['latitude'] = dx['latitude'].astype(float)","07e683f5":"#dx['longitude'] = dx['longitude'].astype(float)","b9eaabae":"#geometry = [Point(xy) for xy in zip(df['longitude'], df['latitude'])]\n#gdf = GeoDataFrame(dx, geometry=geometry)","5a7d7496":"import matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans","738e03e1":"#dx.drop(['date_new'],axis=1,inplace=True)","ceebc126":"#dx.drop(['geometry'],axis=1,inplace=True)","d85df873":"#dx.drop(['cluster_label'],axis=1,inplace=True)","ccb4d649":"#dx","dcd294fe":"coords = df[['longitude', 'latitude']].to_numpy()","ccf0f9b2":"coords","4ec1e666":"#dx.plot.scatter(x = 'latitude', y = 'longitude', c=labels, s=15, cmap='viridis')\n#plt.scatter(centers[:, 0], c='black', s=200, alpha=0.5)","f176e55b":"#!pip install folium","480f17cb":"import matplotlib\n%matplotlib inline\n%config InlineBackend.figure_format = 'svg'\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom tqdm import tqdm\nfrom sklearn.cluster import KMeans, DBSCAN\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.datasets import make_blobs\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom ipywidgets import interactive\nfrom collections import defaultdict\n#import hdbscan\nimport folium\nimport re","9c460fda":"#sns.scatterplot(x=dx['latitude'], y = dx['longitude'])","977a0d19":"db = DBSCAN(eps=0.6, min_samples=1).fit(coords)\ncore_samples_mask = np.zeros_like(db.labels_, dtype=bool)\ncore_samples_mask[db.core_sample_indices_] = True\nlabels = db.labels_","bfd5b7d7":"labels","64d25093":"n_clusters_ = len(set(labels)) - (1 if -1 in labels else 0)\nn_noise_ = list(labels).count(-1)","c83d8d70":"n_clusters_","3290d17e":"n_noise_","7fe87278":"from sklearn.neighbors import NearestNeighbors\nfrom matplotlib import pyplot as plt","32644448":"neighbors = NearestNeighbors(n_neighbors=20)\nneighbors_fit = neighbors.fit(coords)\ndistances, indices = neighbors_fit.kneighbors(coords)","f69b553e":"distances = np.sort(distances, axis=0)\ndistances = distances[:,1]\nplt.plot(distances)","35a2e0a2":"n_noise_","cf633ab8":"#import sklearn.metrics as metrics","e04d6048":"import matplotlib.pyplot as plt","25df8596":"unique_labels = set(labels)\ncolors = [plt.get_cmap('Spectral')(each)\n          for each in np.linspace(0, 1, len(unique_labels))]\nfor k, col in zip(unique_labels, colors):\n    if k == -1:\n        # Black used for noise.\n        col = [0, 0, 0, 1]\n\n    class_member_mask = (labels == k)\n\n    xy = coords[class_member_mask & core_samples_mask]\n    plt.plot(xy[:, 0], xy[:, 1], 'o', markerfacecolor=tuple(col),\n             markeredgecolor='k', markersize=14)\n\n    xy = coords[class_member_mask & ~core_samples_mask]\n    plt.plot(xy[:, 0], xy[:, 1], 'o', markerfacecolor=tuple(col),\n             markeredgecolor='k', markersize=6)\n\nplt.title('Estimated number of clusters: %d' % n_clusters_)\n\nplt.show()","5c35d6eb":"!pip install reverse-geocode","b79f77f7":"import reverse_geocode as rg\ncoordinates = coords\nu = rg.search(coordinates)","28e634c7":"u[0]","dc5bcfca":"pd.DataFrame(u)\npd.DataFrame.from_dict(u)\nbc = pd.DataFrame.from_records(u)","437ad455":"bc","48f2a139":"res2 = pd.concat([df,bc], axis=1, join='inner')\nres2","1f24b9c7":"labels","2f9e3533":"temp = pd.DataFrame(labels, columns = ['Cluster_point'])\n","fb795fe8":"final_train_meta = pd.concat([res2,temp], axis=1, join='inner')\nfinal_train_meta","18101bc7":"final_train_meta.to_csv('alter_meta_3.csv')","8e05c394":"z = pd.read_csv('.\/alter_meta_3.csv')","31df1805":"![tcs_1x](https:\/\/user-images.githubusercontent.com\/50532530\/121583757-47745c00-ca4e-11eb-927f-84e256e28f6a.jpeg)"}}