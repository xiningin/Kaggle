{"cell_type":{"0338dfd3":"code","244508b1":"code","acd4f145":"code","bc586760":"code","2006a589":"code","04d3c6fe":"code","725fb13a":"code","32de4dc8":"code","eff36f7c":"code","34dc2e32":"code","e87e628c":"code","7c11561f":"code","3547462e":"code","dbfbad14":"code","841c460f":"markdown","19d434cb":"markdown","61625c3f":"markdown","84289f84":"markdown"},"source":{"0338dfd3":"import numpy as np\nimport pandas as pd\nfrom sklearn.metrics import log_loss\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.ensemble import ExtraTreesClassifier","244508b1":"teams = pd.read_csv('..\/input\/wdatafiles\/WTeams.csv')\nteams2 = pd.read_csv('..\/input\/wdatafiles\/WTeamSpellings.csv', encoding='latin-1')\nseason_cresults = pd.read_csv('..\/input\/wdatafiles\/WRegularSeasonCompactResults.csv')\nseason_dresults = pd.read_csv('..\/input\/wdatafiles\/WRegularSeasonDetailedResults.csv')\ntourney_cresults = pd.read_csv('..\/input\/wdatafiles\/WNCAATourneyCompactResults.csv')\ntourney_dresults = pd.read_csv('..\/input\/wdatafiles\/WNCAATourneyDetailedResults.csv')\nslots = pd.read_csv('..\/input\/wdatafiles\/WNCAATourneySlots.csv')\nseeds = pd.read_csv('..\/input\/wdatafiles\/WNCAATourneySeeds.csv')\nseeds = {'_'.join(map(str,[int(k1),k2])):int(v[1:3]) for k1, v, k2 in seeds[['Season', 'Seed', 'TeamID']].values}\nseeds = {**seeds, **{k.replace('2018_','2019_'):seeds[k] for k in seeds if '2018_' in k}}\ncities = pd.read_csv('..\/input\/wdatafiles\/WCities.csv')\ngcities = pd.read_csv('..\/input\/wdatafiles\/WGameCities.csv')\nseasons = pd.read_csv('..\/input\/wdatafiles\/WSeasons.csv')\nsub = pd.read_csv('..\/input\/WSampleSubmissionStage2.csv')","acd4f145":"teams2 = teams2.groupby(by='TeamID', as_index=False)['TeamNameSpelling'].count()\nteams2.columns = ['TeamID', 'TeamNameCount']\nteams = pd.merge(teams, teams2, how='left', on=['TeamID'])\ndel teams2","bc586760":"season_cresults['ST'] = 'S'\nseason_dresults['ST'] = 'S'\ntourney_cresults['ST'] = 'T'\ntourney_dresults['ST'] = 'T'\n\ngames = pd.concat((season_dresults, tourney_dresults), axis=0, ignore_index=True)\ngames.reset_index(drop=True, inplace=True)\ngames['WLoc'] = games['WLoc'].map({'A': 1, 'H': 2, 'N': 3})","2006a589":"games['ID'] = games.apply(lambda r: '_'.join(map(str, [r['Season']]+sorted([r['WTeamID'],r['LTeamID']]))), axis=1)\ngames['IDTeams'] = games.apply(lambda r: '_'.join(map(str, sorted([r['WTeamID'],r['LTeamID']]))), axis=1)\ngames['Team1'] = games.apply(lambda r: sorted([r['WTeamID'],r['LTeamID']])[0], axis=1)\ngames['Team2'] = games.apply(lambda r: sorted([r['WTeamID'],r['LTeamID']])[1], axis=1)\ngames['IDTeam1'] = games.apply(lambda r: '_'.join(map(str, [r['Season'], r['Team1']])), axis=1)\ngames['IDTeam2'] = games.apply(lambda r: '_'.join(map(str, [r['Season'], r['Team2']])), axis=1)","04d3c6fe":"games['Team1Seed'] = games['IDTeam1'].map(seeds).fillna(0)\ngames['Team2Seed'] = games['IDTeam2'].map(seeds).fillna(0)","725fb13a":"games['ScoreDiff'] = games['WScore'] - games['LScore']\ngames['Pred'] = games.apply(lambda r: 1. if sorted([r['WTeamID'],r['LTeamID']])[0]==r['WTeamID'] else 0., axis=1)\ngames['ScoreDiffNorm'] = games.apply(lambda r: r['ScoreDiff'] * -1 if r['Pred'] == 0. else r['ScoreDiff'], axis=1)\ngames['SeedDiff'] = games['Team1Seed'] - games['Team2Seed'] \ngames = games.fillna(-1)","32de4dc8":"#Competitiveness, includes more game options - overfitting for now in Tournaments\nc_score_col = ['NumOT', 'WFGM', 'WFGA', 'WFGM3', 'WFGA3', 'WFTM', 'WFTA', 'WOR', 'WDR', 'WAst', 'WTO', 'WStl',\n 'WBlk', 'WPF', 'LFGM', 'LFGA', 'LFGM3', 'LFGA3', 'LFTM', 'LFTA', 'LOR', 'LDR', 'LAst', 'LTO', 'LStl',\n 'LBlk', 'LPF']\nc_score_agg = ['sum', 'mean', 'median', 'max', 'min', 'std', 'skew', 'nunique']\ngb = games.groupby(by=['IDTeams']).agg({k: c_score_agg for k in c_score_col}).reset_index()\ngb.columns = [''.join(c) + '_c_score' for c in gb.columns]\n\n#for now\ngames = games[games['ST']=='T']","eff36f7c":"sub['WLoc'] = 3\nsub['Season'] = sub['ID'].map(lambda x: x.split('_')[0])\nsub['Season'] = sub['ID'].map(lambda x: x.split('_')[0])\nsub['Season'] = sub['Season'].astype(int)\nsub['Team1'] = sub['ID'].map(lambda x: x.split('_')[1])\nsub['Team2'] = sub['ID'].map(lambda x: x.split('_')[2])\nsub['IDTeams'] = sub.apply(lambda r: '_'.join(map(str, [r['Team1'], r['Team2']])), axis=1)\nsub['IDTeam1'] = sub.apply(lambda r: '_'.join(map(str, [r['Season'], r['Team1']])), axis=1)\nsub['IDTeam2'] = sub.apply(lambda r: '_'.join(map(str, [r['Season'], r['Team2']])), axis=1)\nsub['Team1Seed'] = sub['IDTeam1'].map(seeds).fillna(0)\nsub['Team2Seed'] = sub['IDTeam2'].map(seeds).fillna(0)\nsub['SeedDiff'] = sub['Team1Seed'] - sub['Team2Seed'] \nsub = sub.fillna(-1)","34dc2e32":"games = pd.merge(games, gb, how='left', left_on='IDTeams', right_on='IDTeams_c_score')\nsub = pd.merge(sub, gb, how='left', left_on='IDTeams', right_on='IDTeams_c_score')","e87e628c":"col = [c for c in games.columns if c not in ['ID', 'DayNum', 'ST', 'Team1', 'Team2', 'IDTeams', 'IDTeam1', 'IDTeam2', 'WTeamID', 'WScore', 'LTeamID', 'LScore', 'NumOT', 'Pred', 'ScoreDiff', 'ScoreDiffNorm', 'WLoc'] + c_score_col]","7c11561f":"model = ExtraTreesClassifier(n_estimators=200)\nmodel.fit(games[col].fillna(-1), games['Pred'])\npredictions = model.predict(games[col].fillna(-1)).clip(0,1)\nprint('Log Loss:', log_loss(games['Pred'], predictions))","3547462e":"sub['Pred'] = model.predict(sub[col].fillna(-1)).clip(1,0)\nsub[['ID', 'Pred']].to_csv('akash.csv', index=False)","dbfbad14":"from IPython.display import FileLink\nFileLink('.\/akash.csv')","841c460f":"<div style=\"text-align: center\"><h2>Akash Gupta...... March Madness<\/h2><\/div>","19d434cb":"![](https:\/\/www.ncaa.com\/sites\/default\/files\/public\/styles\/focal_point_large\/public-s3\/images\/2019-03-19\/2019-ncaa-womens-basketball-tournament-bracket-schedule_1.jpg?h=90a9705f&itok=dWNiu6Vu)","61625c3f":"[](https:\/\/www.ncaa.com\/sites\/default\/files\/public\/styles\/stax_large_content_tile\/public-s3\/tile-images\/graphic\/USATSI_10738161.jpg?itok=A0Z-uELc)","84289f84":"[](https:\/\/www.ncaa.com\/sites\/default\/files\/public\/styles\/stax_large_content_tile\/public-s3\/tile-images\/graphic\/USATSI_10738161.jpg?itok=A0Z-uELc)"}}