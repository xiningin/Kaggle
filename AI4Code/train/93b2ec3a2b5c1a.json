{"cell_type":{"46181c0f":"code","74ebcdc5":"code","48139213":"code","1d68945c":"code","a2f72e6e":"code","1b109d14":"code","1a4af007":"code","f34edda9":"code","042b5b3a":"code","c2ca1569":"code","da31e890":"code","4bca6a71":"code","af29cf9c":"code","6e2d2a33":"code","0d0af064":"code","5d97423b":"code","a97e9d84":"code","3eb1e804":"code","4efeca3d":"code","3351d24a":"markdown","ab397fe9":"markdown","6b9edac1":"markdown","e264b990":"markdown","3de76407":"markdown","c394a678":"markdown","cd307829":"markdown","f7c1b5e4":"markdown","0011deaf":"markdown","211383c3":"markdown"},"source":{"46181c0f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom PIL import Image\nimport glob \nimport matplotlib.pyplot as plt\nimport json\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nos.listdir('\/kaggle\/input\/iwildcam-2020-fgvc7')\n","74ebcdc5":"test=pd.read_csv('..\/input\/iwildcam-2020-fgvc7\/sample_submission.csv')\ntest.shape                  ","48139213":"train_jpeg = glob.glob('..\/input\/iwildcam-2020-fgvc7\/train\/*')\ntest_jpeg = glob.glob('..\/input\/iwildcam-2020-fgvc7\/test\/*')\n\nprint(\"number of train jpeg data:\", len(train_jpeg))\nprint(\"number of test jpeg data:\", len(test_jpeg))\n'''\nnumber of train jpeg data: 217959\nnumber of test jpeg data: 62894\n\n'''","1d68945c":"fig = plt.figure(figsize=(25, 16))\nfor i,im_path in enumerate(train_jpeg[:16]):\n    ax = fig.add_subplot(4, 4, i+1, xticks=[], yticks=[])\n    im = Image.open(im_path)\n    im = im.resize((480,270))\n    plt.imshow(im)","a2f72e6e":"im = Image.open(\"..\/input\/iwildcam-2020-fgvc7\/train\/905a4416-21bc-11ea-a13a-137349068a90.jpg\")\n\nplt.imshow(im)\nprint(im.size)","1b109d14":"with open('..\/input\/iwildcam-2020-fgvc7\/iwildcam2020_megadetector_results.json', encoding='utf-8') as fin:\n    train_df=json.load(fin)","1a4af007":"# for i,item in enumerate(train_df['images']):\n#     if i>20:break\n#     print('*'*50)\n#     print(item)\n        ","f34edda9":"box=[0.0, 0.4669, 0.1853, 0.4238]","042b5b3a":"from PIL import Image, ImageDraw\n\n\nx1, y1,w_box, h_box = box\nymin,xmin,ymax, xmax=y1, x1, y1 + h_box, x1 + w_box\n\n\ndraw = ImageDraw.Draw(im)\nimageWidth=im.size[0]\nimageHeight= im.size[1]\n(left, right, top, bottom) = (xmin * imageWidth, xmax * imageWidth,\n                                      ymin * imageHeight, ymax * imageHeight)\nprint(left, right, top, bottom)\n\ndraw.line([(left, top), (left, bottom), (right, bottom),\n               (right, top), (left, top)], width=4, fill='Red')","c2ca1569":"# plt.imshow(crop_img)\nim","da31e890":"#Image.crop(left, up, right, below)\ncrop_shape=(left,top , right, bottom)\ncrop_img = im.crop(crop_shape)\ncrop_img=crop_img.resize((299,299))\niImage = im.format\ncrop_img.save('dogs1.jpg'.format(iImage))\ncrop_img","4bca6a71":"box=[0.2406, 0.4672, 0.0309, 0.1105]","af29cf9c":"x1, y1,w_box, h_box = box\nymin,xmin,ymax, xmax=y1, x1, y1 + h_box, x1 + w_box\n\n\n(left, right, top, bottom) = (xmin * imageWidth, xmax * imageWidth,\n                                      ymin * imageHeight, ymax * imageHeight)\nprint(left, right, top, bottom)\n\ndraw.line([(left, top), (left, bottom), (right, bottom),\n               (right, top), (left, top)], width=4, fill='Red')","6e2d2a33":"im","0d0af064":"#Image.crop(left, up, right, below)\ncrop_shape=(left,top , right, bottom)\ncrop_img = im.crop(crop_shape)\ncrop_img=crop_img.resize((299,299))\niImage = im.format\ncrop_img.save('dogs2.jpg'.format(iImage))\ncrop_img","5d97423b":"box=[0.5058, 0.4577, 0.06, 0.1043]\nx1, y1,w_box, h_box = box\nymin,xmin,ymax, xmax=y1, x1, y1 + h_box, x1 + w_box\n\n\n(left, right, top, bottom) = (xmin * imageWidth, xmax * imageWidth,\n                                      ymin * imageHeight, ymax * imageHeight)\nprint(left, right, top, bottom)\n\ndraw.line([(left, top), (left, bottom), (right, bottom),\n               (right, top), (left, top)], width=4, fill='Red')","a97e9d84":"im","3eb1e804":"#Image.crop(left, up, right, below)\ncrop_shape=(left,top , right, bottom)\ncrop_img = im.crop(crop_shape)\ncrop_img=crop_img.resize((299,299))\niImage = im.format\ncrop_img.save('dogs3.jpg'.format(iImage))\ncrop_img","4efeca3d":"print('Done!')","3351d24a":"{'detections': [{'category': '1', 'bbox': [0.0, 0.4669, 0.1853, 0.4238], 'conf': 1.0}, {'category': '1', 'bbox': [0.2406, 0.4672, 0.0309, 0.1105], 'conf': 0.998}, {'category': '1', 'bbox': [0.5058, 0.4577, 0.06, 0.1043], 'conf': 0.911}, {'category': '1', 'bbox': [0.9902, 0.4283, 0.0098, 0.0487], 'conf': 0.697}, {'category': '1', 'bbox': [0.9956, 0.4284, 0.0044, 0.049], 'conf': 0.505}, {'category': '1', 'bbox': [0.9974, 0.4293, 0.0026, 0.0481], 'conf': 0.505}, {'category': '1', 'bbox': [0.5078, 0.4574, 0.046, 0.0656], 'conf': 0.316}], 'id': '905a4416-21bc-11ea-a13a-137349068a90', 'max_detection_conf': 1.0}","ab397fe9":"* This picture has over 3 bboxes. We will choose three bboxes which conf are greater than 0.9.","6b9edac1":"# EDA","e264b990":"## Draw the third bbox","3de76407":"## One sample","c394a678":"## Draw one bbox","cd307829":"# Draw bbox and Save","f7c1b5e4":"Show how to draw bbox and crop them as train datas.","0011deaf":"## Crop and save the bbox image","211383c3":"## Draw the second bbox"}}