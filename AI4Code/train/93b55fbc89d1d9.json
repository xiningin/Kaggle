{"cell_type":{"08661b39":"code","ec124d77":"code","065de578":"code","12bb2c2d":"code","32ec77c7":"code","d6436e4d":"code","4d6754ad":"code","8bfa4481":"code","294258cf":"code","0e8c0333":"code","f00765d3":"code","c38853bf":"code","fdfaf634":"code","4e88d288":"code","f85be089":"code","e78a63f3":"code","f4f81508":"code","165c8789":"code","243b9594":"code","22c48111":"code","cf0a84ba":"code","b62108f1":"code","a25b520a":"code","afe88ef1":"code","cfb147df":"code","c915fbd8":"markdown","b571e1ab":"markdown","e6e06be9":"markdown","3eaec8f5":"markdown","e172cf0f":"markdown","03a0508b":"markdown"},"source":{"08661b39":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ec124d77":"data = pd.read_csv(\"\/kaggle\/input\/social-network-ads\/Social_Network_Ads.csv\")","065de578":"data.head()","12bb2c2d":"data['Purchased'].value_counts()","32ec77c7":"data.describe()","d6436e4d":"data.info()","4d6754ad":"%matplotlib inline","8bfa4481":"# for plotting histogram\n\nimport matplotlib.pyplot as plt\ndata.hist(bins = 50, figsize = (20, 15))","294258cf":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.lmplot('Age', 'EstimatedSalary', data, hue='Purchased', fit_reg=False)\nfig = plt.gcf()\nfig.set_size_inches(8, 6)\nplt.show()","0e8c0333":"from sklearn.model_selection import train_test_split\ntrain_set, test_set = train_test_split(data, test_size=0.2, random_state=42)\n\nprint(len(train_set), len(test_set))","f00765d3":"train_set.shape","c38853bf":"from pandas.plotting import scatter_matrix\nattributes = [\"Purchased\", \"Age\", \"EstimatedSalary\"]\nscatter_matrix(train_set[attributes], figsize=(12, 8))","fdfaf634":"%matplotlib inline","4e88d288":"corr_matrix = train_set.corr()","f85be089":"corr_matrix","e78a63f3":"x_train_set = train_set.drop(\"Purchased\", axis = 1)\ny_train_set = train_set[\"Purchased\"]\n\nx_test_set = test_set.drop(\"Purchased\", axis = 1)\ny_test_set = test_set[\"Purchased\"]","f4f81508":"x_train_set.shape\ny_train_set.shape","165c8789":"from sklearn.naive_bayes import GaussianNB","243b9594":"clf = GaussianNB()","22c48111":"clf.fit(x_train_set,y_train_set) #fitting the model \ny_pred = clf.predict(x_test_set) #prediction\ny_train_pred = clf.predict(x_train_set)","cf0a84ba":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test_set, y_pred)","b62108f1":"from sklearn.metrics import precision_score, recall_score\nprecision_score(y_test_set, y_pred)","a25b520a":"recall_score(y_test_set, y_pred)","afe88ef1":"from sklearn.metrics import f1_score\nf1_score(y_test_set, y_pred)","cfb147df":"from sklearn.metrics import accuracy_score\naccuracy_score(y_test_set, y_pred)","c915fbd8":"## F-Score","b571e1ab":"## Correlations","e6e06be9":"## Confusion matrix","3eaec8f5":"## Train-Test Splitting","e172cf0f":"## Precision and Recall","03a0508b":"## Accuracy"}}