{"cell_type":{"527faa6f":"code","ed3b34af":"code","5d2a4d92":"code","0efd02c2":"code","db15255e":"code","2c07899a":"code","6c93b680":"code","c1b76066":"code","e3ffe31e":"code","a6e2ab53":"code","0d649bf9":"code","6d20afe5":"code","faaa0e32":"code","20320f00":"code","1276a501":"code","15c9918c":"code","c337fd93":"code","d09d8ef7":"code","5451b0cb":"code","e8f26a3b":"code","7b2efba1":"code","4e317b96":"code","2f8bbe73":"code","dd92f389":"code","16282ebc":"code","302e65fd":"code","5432e165":"code","95ded716":"code","fe40f7ed":"code","39493720":"markdown","b4c37566":"markdown","16b3905f":"markdown","e7e49132":"markdown","a554b3ef":"markdown","eee2cdb6":"markdown","075b6eaf":"markdown","ef6d7985":"markdown","5014f011":"markdown","07ed45a0":"markdown","07326755":"markdown","b597544a":"markdown"},"source":{"527faa6f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ed3b34af":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","5d2a4d92":"!pip install openpyxl","0efd02c2":"df = pd.read_excel('\/kaggle\/input\/hr-employee-data-descriptive-analytics\/HR_Employee_Data.xlsx', \n                   sheet_name='HR_Employee_Data')\ndf\n#Read the .xlsx file and make new dataframe","db15255e":"df.info()","2c07899a":"df.describe()","6c93b680":"df.describe(include='object')","c1b76066":"#Let's watch general distribution of the left and non-left employees\ndf['left'].plot(kind='hist')\nplt.show()","e3ffe31e":"df['left'].value_counts(normalize=True)\n#76% have to be classification","a6e2ab53":"#And lets watch at pairplot of employees left\n\nsns.pairplot(df, hue='left', palette='Set1')\nplt.show()","0d649bf9":"#Exploring raltaions of left to salary, department and satisfaction level\ng = sns.FacetGrid(data=df, col=\"Department\", row=\"salary\", hue='left')\ng.map(plt.hist, \"satisfaction_level\", bins='auto', alpha=0.3).add_legend()\nplt.show()","6d20afe5":"df.pivot_table('left', 'salary', aggfunc='mean')","faaa0e32":"g  = sns.FacetGrid(data=df,hue=\"salary\", height=5)\ng.map(sns.kdeplot, 'left').add_legend()\nplt.show()","20320f00":"df.pivot_table('satisfaction_level', 'salary', aggfunc='mean')","1276a501":"g  = sns.FacetGrid(data=df,hue=\"salary\", height=5)\ng.map(sns.kdeplot, 'satisfaction_level').add_legend()\nplt.show()","15c9918c":"df.pivot_table('satisfaction_level', 'Department', aggfunc='mean')","c337fd93":"g  = sns.FacetGrid(data=df,hue=\"Department\", height=10)\ng.map(sns.kdeplot, 'satisfaction_level').add_legend()\nplt.show()","d09d8ef7":"df.pivot_table('left', 'Department', aggfunc='mean')","5451b0cb":"g  = sns.FacetGrid(data=df,hue=\"Department\", height=10)\ng.map(sns.kdeplot, 'left').add_legend()\nplt.show()","e8f26a3b":"df.pivot_table('left', 'number_project', aggfunc='mean')","7b2efba1":"g  = sns.FacetGrid(data=df,hue=\"number_project\", height=10)\ng.map(sns.kdeplot, 'left').add_legend()\nplt.show()","4e317b96":"import sklearn.model_selection","2f8bbe73":"train_data, test_data, train_labels, test_labels = sklearn.model_selection.train_test_split(df.drop(['left'], axis=1), df['left'], test_size=0.23)","dd92f389":"pd.crosstab((train_data['salary'] == 'low') & (train_data['Department'].str.contains('hr|accounting')) \n| (train_data['number_project'] == 2), df['left'])","16282ebc":"recall = 1271\/(1271+1418)\nprecision = 1271\/(1271+1007)\nF_score = (2*recall*precision) \/ (recall + precision)\nprint('recall: {}'.format(round(recall, 2)))\nprint(\"precision : {}\".format(round(precision, 2)))\nprint('F-score : {}'.format(round(F_score, 2)))","302e65fd":"pd.crosstab((train_data['salary'] == 'low') & (train_data['Department'].str.contains('hr|accounting')) \n| (train_data['number_project'] == 5), df['left'])","5432e165":"recall = 592\/(592+2097)\nprecision = 592\/(592+1974)\nF_score = (2*recall*precision) \/ (recall + precision)\nprint('recall: {}'.format(round(recall, 2)))\nprint(\"precision : {}\".format(round(precision, 2)))\nprint('F-score : {}'.format(round(F_score, 2)))","95ded716":"pd.crosstab((train_data['salary'] == 'low') & (train_data['Department'].str.contains('hr|accounting')) \n| (train_data['number_project'] == 6), df['left'])","fe40f7ed":"recall = 595\/(595+2094)\nprecision = 595\/(595+791)\nF_score = (2*recall*precision) \/ (recall + precision)\nprint('recall: {}'.format(round(recall, 2)))\nprint(\"precision : {}\".format(round(precision, 2)))\nprint('F-score : {}'.format(round(F_score, 2)))","39493720":"And obviously that the most left employees worked in **accounting** and **hr** departments","b4c37566":"## Cheking out the heuristics","16b3905f":"# Heuristics:\n- explore relation of **left to salary**\n- explore relation of **left to department**\n- explore relation of **left to satisfaction level**\n- explore relation of **left to number of project**","e7e49132":"Not bad metrics: percision **43%**, recall **22%**, F-score **29%**","a554b3ef":"The most employees left with **low salary** - 29%","eee2cdb6":"The lowest satisfaction level in **accounting** and **hr** departments","075b6eaf":"Bad metrics: percision **23%**, recall **22%**, F-score **23%**\n\n","ef6d7985":"To solve task about attrition analysis clearly we take in account the following data:\n- **low** salary\n- department **hr** and **accounting**\n- number of projects - **2**, **5**, **6**","5014f011":"Satisfaction level depends of salary. **Low salary = low satisfaction level**","07ed45a0":"Good metrics: percision **56%**, recall **47%**, F-score **51%**","07326755":"**2**, **5**, **6** of projects are a reason of left too","b597544a":"In accordance with heuristics above, the reasons of attrition and low satisfaction level are in **low** salary, **2** and **6** numbers of projects and working in **hr** and **accounting** department.\n\nP.S. I'm newbee in data analysis, always open to comments about my work. Thank you for your attention!"}}