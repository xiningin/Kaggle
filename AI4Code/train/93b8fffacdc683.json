{"cell_type":{"1ec5ca78":"code","1bef7ddc":"code","95bef05c":"code","a9d833f3":"code","36b86c61":"code","7f29e99e":"code","b59ccc81":"code","ffd4aaca":"code","745156df":"code","de21a5ce":"code","1e4fb5b0":"code","df6874e9":"markdown","ff2561e9":"markdown","f33493e3":"markdown"},"source":{"1ec5ca78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1bef7ddc":"restaurant = pd.read_csv('..\/input\/restaurant-and-food-inspections-alaska-usa\/Restaurant_and_Food_Inspection_Alaska.csv')","95bef05c":"restaurant.info()","a9d833f3":"restaurant.describe()","36b86c61":"cities=restaurant['business_city'].value_counts()\n\nfig = px.pie(cities,\n             values=cities.values,\n             names=cities.index,\n             title=\"Restaurant Distribution\",\n             template=\"seaborn\")\nfig.update_traces(rotation = -70, textinfo=\"label+percent\")\nfig.show()","7f29e99e":"restaurant['violation'] = 1\nrestaurant.loc[restaurant['violation_code'].isna(),'violation'] = 0\n\nplt.figure(figsize=(11,8))\nsns.countplot(x='violation',data=restaurant)\nplt.title('Violation',size=20)","b59ccc81":"#violation each year\n\nrestaurant['inspection_year'] = restaurant['inspection_date'].str.split('\/').str[2]\nrestaurant['inspection_month'] = restaurant['inspection_date'].str.split('\/').str[0]\n\nplt.figure(figsize=(11,8))\nsns.countplot(x= 'inspection_year', hue = 'violation',data=restaurant)\nplt.title('Violation by Year',size=20)","ffd4aaca":"#violation each month\nplt.figure(figsize=(11,8))\nsns.countplot(x= 'inspection_month', hue = 'violation',data=restaurant)\nplt.title('Violation by Month',size=20)","745156df":"plt.figure(figsize=(11,8))\nsns.countplot(y='inspection_type', hue = 'violation',data=restaurant)\nplt.title('Inspection Type by Violation Situation',size=20)","de21a5ce":"#violation score distribution by violation\nplt.figure(figsize=(11,8))\nsns.distplot(restaurant[restaurant['violation']==0]['inspection_score'], kde =False, bins =30, hist_kws={'label':'0'})\nsns.distplot(restaurant[restaurant['violation']==1]['inspection_score'], kde =False, bins =30, hist_kws={'label':'1'})\nplt.title('Inspection Score by Violation Situation',size=20)\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)","1e4fb5b0":"codes=restaurant['violation_code'].value_counts().head(20)\n\nfig = px.pie(codes,\n             values=codes.values,\n             names=codes.index,\n             title=\"Top 20 Violations\",\n             template=\"seaborn\")\nfig.update_traces(textinfo=\"label+value\")\nfig.show()","df6874e9":"## Restaurant Violation","ff2561e9":"# Exploratory Analysis","f33493e3":"## Restaurant Distribution"}}