{"cell_type":{"ebe02a5b":"code","bb2c4138":"code","62a9e92f":"code","2b3a5e6b":"code","12851c36":"code","679cd507":"code","da893abc":"code","ddafd79f":"code","40ac35da":"code","3beb698c":"code","cb37fd1b":"code","9b85f79f":"code","7f0f6361":"code","11208383":"code","d9fb2481":"code","368512d8":"code","19c8df34":"code","e3417f57":"code","c6a82e9c":"markdown","f2e975ef":"markdown","d8aa1f4a":"markdown","22f88f6d":"markdown","99e24cd4":"markdown"},"source":{"ebe02a5b":"# In this nootbook,We are going to implement Decision Tree Models like single and multi varient classification on Iris data.","bb2c4138":"#Importing Libraries\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import confusion_matrix","62a9e92f":"#Loading Dataset\niris = pd.read_csv('..\/input\/iris\/Iris.csv')","2b3a5e6b":"iris.head()","12851c36":"iris.shape","679cd507":"iris.info()","da893abc":"#Data Visualization\nsns.pairplot(iris)","ddafd79f":"sns.scatterplot(x='SepalLengthCm',y='PetalLengthCm',data=iris,hue=\"Species\")\nplt.show()","40ac35da":"sns.set(style=\"whitegrid\")\nsns.barplot(x=\"Species\",y=\"SepalWidthCm\",data=iris,palette='vlag')\nplt.show()","3beb698c":"sns.jointplot(x='SepalLengthCm',y='PetalLengthCm',data=iris,color=\"green\")\nplt.show()","cb37fd1b":"sns.scatterplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris,hue=\"PetalLengthCm\")\nplt.show()","9b85f79f":"# Model-1\n\n# Target(Dependent) variable\ny = iris[['Species']]\n\n# Independent variable\nx = iris[['SepalLengthCm']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)\n\ndtc = DecisionTreeClassifier()\n\n#Fitting our Model\ndtc.fit(x_train,y_train)","7f0f6361":"#Predicting Values\ny_pred = dtc.predict(x_test)\n\n#Evaluating Model using confusion_matrix\nconfusion_matrix(y_test,y_pred)","11208383":"#Simplifying confusion_Metrix\n(13+11+7)\/(13+11+7+1+2+1+10)","d9fb2481":"# Model-2 (Multi varient classification)\n\n# Target(Dependent) variable\ny = iris[['Species']]\n\n# Independent variable\nx = iris[['SepalLengthCm','PetalLengthCm']]\n\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.4)\n\ndtc2 = DecisionTreeClassifier()\n\n#Fitting our Model\ndtc2.fit(x_train,y_train)","368512d8":"#Predicting Values\ny_pred = dtc2.predict(x_test)\n\n#Evaluating Model using confusion_matrix\nconfusion_matrix(y_test,y_pred)","19c8df34":"#Simplifying confusion_Metrix\n(20+19+17)\/(20+19+17+3+1)","e3417f57":"#If you like this notebook, Don't forget to upvote.","c6a82e9c":"# Exploratory data analysis","f2e975ef":"### Model-1 has accuracy about 68% which is not really great, So now we are going to improve our model.","d8aa1f4a":"### Model-2 has accuracy about 93% which is much better than Model-1.","22f88f6d":"# Decision Tree Models","99e24cd4":"# Contents\n\n## Setup\n## Exploratory data analysis\n## Decision Tree algorithms"}}