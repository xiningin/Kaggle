{"cell_type":{"18cf0433":"code","2c3dc229":"code","ef76386e":"code","4919a3e4":"code","f993563d":"code","b3ac3023":"code","2228ed2d":"code","8b13f072":"code","6b71392a":"code","fabe29a0":"code","94cf93de":"code","b8592136":"code","5a7bc3e2":"code","e5a5083f":"code","396ac433":"code","c44f02f6":"code","fe81095e":"code","d8d692dd":"code","c1ac461f":"code","3db8782c":"code","5f347011":"code","c78aec02":"code","6b082176":"markdown","a15e3ef0":"markdown","12db9d4c":"markdown","f04db260":"markdown","29382e22":"markdown","06621091":"markdown","91b9f7d3":"markdown","f5963533":"markdown","bd12593b":"markdown","c5ee15af":"markdown","7d9f5c76":"markdown","954597fe":"markdown","fe0eec33":"markdown","a8de8c32":"markdown","bba0714c":"markdown"},"source":{"18cf0433":"#load the necessary libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npalette = sns.color_palette(\"Paired\")\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","2c3dc229":"data = pd.read_csv('..\/input\/Mall_Customers.csv')\ndata.head()","ef76386e":"data = data.rename(index=str,columns = {\"CustomerID\":\"id\",\"Annual Income (k$)\":\"income\",\"Spending Score (1-100)\":\"score\"})","4919a3e4":"print(data.columns)\nprint(type(data))","f993563d":"print(data.describe())\nprint(data.isnull().sum())","b3ac3023":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ndata['Gender'] = le.fit_transform(data.Gender)\nprint(le.classes_)\n#Male is encoded as 1\n#Female is encoded as 0.\nprint(data.head(5))","2228ed2d":"m,f=data['Gender'].value_counts()[1],data['Gender'].value_counts()[0]\ngen = [m,f]\nlab = ['Male','Female']\nplt.pie(gen,labels=lab, shadow=True,autopct='%1.0f%%', startangle=140)\n","8b13f072":"\nfig = plt.figure()\nfig.suptitle('PDF',fontsize=20)\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\nfor i in range(2,len(data.columns)):\n    ax = fig.add_subplot(1, 3, i-1)\n    fig.set_figheight(5)\n    fig.set_figwidth(20)\n    sns.distplot(data[str(data.columns[i])],hist=False,kde_kws={\"shade\": True},color='orange')\n    \n    ax.title.set_text(data.columns[i])\n    \n\nplt.show()\nfig = plt.figure()\nfig.suptitle('CDF',fontsize=20)\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\nfor i in range(2,len(data.columns)):\n    ax = fig.add_subplot(1, 3, i-1)\n    fig.set_figheight(5)\n    fig.set_figwidth(20)\n    sns.distplot(data[str(data.columns[i])],hist=False,kde_kws={\"shade\": True,\"cumulative\":True},color='g')\n    ax.title.set_text(data.columns[i])\n    \n\nplt.show()","6b71392a":"fig = plt.figure()\n\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\nfor i in range(2,len(data.columns)-1):\n    sns.jointplot(str(data.columns[i]),'score',data, kind=\"kde\",space=0, color=\"#4CB391\")","fabe29a0":"fig = plt.figure()\nfig.suptitle('Violin Plots',fontsize=20)\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\ncols = ['Age', 'income', 'score']\nfor i in range(len(cols)):\n    ax = fig.add_subplot(1, 3, i+1)\n    fig.set_figheight(5)\n    fig.set_figwidth(20)\n    sns.violinplot(x = 'Gender' , y = cols[i], data = data )\n    \n    ","94cf93de":"fig = plt.figure()\nfig.suptitle('Violin Plots',fontsize=20)\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\ncols = ['Age', 'income', 'score']\nfor i in range(len(cols)):\n    ax = fig.add_subplot(1, 3, i+1)\n    fig.set_figheight(5)\n    fig.set_figwidth(20)\n    sns.violinplot(x = 'Gender' , y = cols[i], data = data )\n    ","b8592136":"import itertools\ncol_list = ['Age','score','income','Gender']\ncombinations =list(itertools.permutations(col_list, 3))\nprint(combinations)\nfig = plt.figure()\nfig.suptitle('Scatter Plots',fontsize=20)\nfig.subplots_adjust(hspace=0.4, wspace=0.4)\nfor i in range(0,len(combinations)):\n    try:\n        ax = fig.add_subplot(4, 4, i)\n        fig.set_figheight(20)\n        fig.set_figwidth(20)\n        sns.scatterplot(x=str(combinations[i][0]),y=str(combinations[i][1]),hue=str(combinations[i][2]),data=data)\n    except:\n        pass\n","5a7bc3e2":"print(data.columns)\nattr,label = data.iloc[:,1:-1],data.iloc[:,-1]\nsse = {}\nfrom sklearn.cluster import KMeans\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(attr)\n    \n    sse[k] = kmeans.inertia_ \nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()\n","e5a5083f":"kmeans = KMeans(n_clusters=4).fit(attr)\nlabel = kmeans.labels_\ncenters = kmeans.cluster_centers_","396ac433":"import plotly as py\nimport plotly.graph_objs as go\nimport plotly.offline as py_of\npy_of.init_notebook_mode(connected=True)\ndata['labels3'] =  label\ntrace1 = go.Scatter3d(\n    x= data['Age'],\n    y= data['score'],\n    z= data['income'],\n    mode='markers',\n     marker=dict(\n        color = data['labels3'], \n        size= 20,\n        line=dict(\n            color= data['labels3'],\n            width= 12\n        ),\n    \n        \n     )\n)\ndata_2 = [trace1]\nlayout = go.Layout(\n    \n    title= 'Clusters',\n    scene = dict(\n            xaxis = dict(title  = 'Age'),\n            yaxis = dict(title  = 'Spending Score'),\n            zaxis = dict(title  = 'Annual Income')\n        )\n)\nlayout.autosize= True\nfig = go.Figure(data=data_2, layout=layout)\npy_of.iplot(fig)","c44f02f6":"from sklearn.model_selection import train_test_split\ntrain_x,test_x,train_y,test_y = train_test_split(attr,label)\n","fe81095e":"data_temp = data.iloc[:,[2,4]]\nsse = {}\nfrom sklearn.cluster import KMeans\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(data_temp)\n    #print(data[\"clusters\"])\n    sse[k] = kmeans.inertia_ # Inertia: Sum of distances of samples to their closest cluster center\nplt.figure()\nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()","d8d692dd":"kmeans = KMeans(n_clusters=4,random_state=2).fit(data_temp)\nlabel = kmeans.labels_\ncenters = kmeans.cluster_centers_\nprint(data_temp.head())\n","c1ac461f":"sns.scatterplot(x='score',y='Age',hue = label,data = data_temp,palette=\"Set2\")","3db8782c":"data_temp = data.iloc[:,[3,4]]\nsse = {}\nfrom sklearn.cluster import KMeans\nfor k in range(1, 10):\n    kmeans = KMeans(n_clusters=k, max_iter=1000).fit(data_temp)\n    #print(data[\"clusters\"])\n    sse[k] = kmeans.inertia_ # Inertia: Sum of distances of samples to their closest cluster center\nplt.figure()\nplt.plot(list(sse.keys()), list(sse.values()))\nplt.xlabel(\"Number of cluster\")\nplt.ylabel(\"SSE\")\nplt.show()","5f347011":"kmeans = KMeans(n_clusters=5,init='k-means++',max_iter=1000,random_state=2).fit(data_temp)\nlabel = kmeans.labels_\ncenters = kmeans.cluster_centers_","c78aec02":"sns.scatterplot(x='score',y='income',data=data_temp,hue=label)","6b082176":"1) Loading the Dataset and renaming the columns for the ease of use.","a15e3ef0":"Simple Analysis of the Dataset to understand the parameters and what each is trying to convey.","12db9d4c":"I hope you liked my work. Please suggest what more I can do and do upvote if you like it. Thank You!","f04db260":"Joint Plot","29382e22":"Here we generate the PDFs and the CDFs for Age, Income and Score. We that most of the Participants were in their 30s. They had an income of around 75K Dollars and mostly a score between 40 and 60.","06621091":"The following can be concluded from the clustering.\n4 clusters are generated:\n\nCluster number 0 suggesting the group of people who are 'Young and have a normal Spending Score'.\n\nCluster 1 are group of people who have a high Spending score and are young as well. These can be depicted as the target customers.\n\nCluster 2 are group of People who are old and have an Average Spending score.\n\nCluster 3 are the group of people who have a very low score. ","91b9f7d3":"Here we calculate the percentage of Male and Female participants who were selected for the Analysis.","f5963533":"Clustering on the basis of Income and Score","bd12593b":"Clustering based on Age and Spending Score","c5ee15af":"Here 5 clusters are generated \n\nCluster 0 are the group of people who have an average Income and an Average Score.\n\nCluster 1 are people who have really high Income but don't really care about incomes.\n\nCluster 2 are people who have low income and low scores.\n\nCluster 3 are are people who have a really high income and a really High Score.\n\nCluster 4 shows the group of people who have low incomes but tend to have really Hight scores.\n\n\n","7d9f5c76":"Elbow curve generation for creating a 3d clustering graph taking age,income and score into consideration.","954597fe":"Here we generate all the possible scatter plots for all parameters.","fe0eec33":"Market Basket Analysis is a modelling technique based upon the theory that if you buy a certain group of items, you are more (or less) likely to buy another group of items.\nIn this case we use the Mall Customer Segmentation dataset that has parameters such as Age, Gender, Income and Spending Score.\nThe Spending score is based on parameters like customer behavior and purchasing data.","a8de8c32":"On Violin Plot we observe that most of the women were of the age 30 whereas the age group is more uniformally distribute in case of Men.\nIt can be seen that the highest income for men was slightly higher than that of Female however the Spending score for minimum spendind score for men was lesser than that of women. At the same time the spendng score for women is much better.","bba0714c":"Looking athe Description we can tell that 200 people between the Age of 18 and 70 are considered in this test with an Average age of 38.85~ 39 Years is taken. Similarly most of the People have their income around  60K dollar  with the Heighest being 137K dollar and lowest being $ 15K dollar. On average people have a credit score of 25.82 with the heighest rewarded for the best customer,ie:99 and lowest being 1 for the worst."}}