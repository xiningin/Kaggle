{"cell_type":{"13f2e3be":"code","cb6257af":"code","ce3f0334":"code","fa2eb2a5":"code","dc8a8b1c":"code","d5f640f5":"code","85ea2795":"code","ae5bcbd7":"code","b092c4dc":"code","d1b98476":"code","31f0b4fb":"code","346e2084":"code","be912b59":"code","8c16e1c7":"code","d072e1f5":"code","70ba7e43":"code","633e80aa":"code","5bdc3452":"markdown","761118de":"markdown","7276a373":"markdown","5d6a32f7":"markdown","6d103f46":"markdown","70edd751":"markdown"},"source":{"13f2e3be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb6257af":"import tensorflow\nimport os\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, GlobalAveragePooling2D\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing import image\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom tqdm import tqdm","ce3f0334":"!nvidia-smi","fa2eb2a5":"train = pd.read_csv('\/kaggle\/input\/image-data-for-predicting-movies-genre\/Multi_Label_dataset\/train.csv')\ntrain.head()","dc8a8b1c":"train.shape","d5f640f5":"train_image = []\nfor i in tqdm(range(train.shape[0])):\n    img = image.load_img('\/kaggle\/input\/image-data-for-predicting-movies-genre\/Multi_Label_dataset\/Images\/'+train['Id'][i]+'.jpg',target_size=(300,300,1),\n                        color_mode=\"grayscale\")\n    img = image.img_to_array(img)\n    img = img\/255\n    train_image.append(img)\nX = np.array(train_image)","85ea2795":"X.shape","ae5bcbd7":"plt.imshow(X[2])","b092c4dc":"train['Genre'][2]","d1b98476":"fig = plt.figure(figsize=(10,10))\nfig.suptitle(\"Some examples of images of the dataset\", fontsize=16)\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(X[i], cmap= 'YlOrRd')\n    #plt.xlabel(class_names[labels[i]])\nplt.show()","31f0b4fb":"y = np.array(train.drop(['Id', 'Genre'],axis=1))\ny.shape","346e2084":"X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42, test_size=0.15)","be912b59":"model = Sequential()\nmodel.add(Conv2D(filters=16, kernel_size=(3, 3), activation=\"relu\", input_shape=(300,300,1)))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters=32, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters=64, kernel_size=(3, 3), activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Conv2D(filters=64, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(25, activation='sigmoid'))","8c16e1c7":"model.summary()","d072e1f5":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","70ba7e43":"history = model.fit(X_train, y_train, epochs=100, batch_size=32)","633e80aa":"evaluation_metrics=pd.DataFrame(model.history.history)\nevaluation_metrics.plot(figsize=(10,5))\nplt.title(\"Loss for Training\", size = 20)","5bdc3452":"I will keep updating it, will work on improving it.","761118de":"Now let's check at the shape of the array.","7276a373":"Now next we will read what's in the csv file.","5d6a32f7":"Now let's prepare the data for training.","6d103f46":"Let's import all the required libraries.","70edd751":"So our dataset has 27 columns, meaning 27 genres in total and in total 7254 images. Also now let's do the data preparation using keras."}}