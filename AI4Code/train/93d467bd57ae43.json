{"cell_type":{"c9161d6e":"code","5cd7bd37":"code","ccc9c76b":"code","6581c1e8":"code","f3114727":"code","37dc2e58":"code","71cd6891":"code","a297683c":"code","87b5daa9":"code","5972170c":"code","28666321":"code","b9f7b24a":"code","1413ad48":"code","7f8c216f":"code","4e95c24a":"code","5d813e46":"code","8fe1c068":"code","dc3da300":"code","e887a4fc":"markdown","a1dbf2be":"markdown","90afb73c":"markdown","9eee7bef":"markdown","751d34d0":"markdown"},"source":{"c9161d6e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\n","5cd7bd37":"# Import Packages\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np \nimport pandas as pd \nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.arima_model import ARIMA\nimport statsmodels.api as sm\nimport statsmodels.tsa.api as smt\nimport statsmodels.formula.api as smf\nfrom sklearn.metrics import mean_squared_error\n\n%matplotlib inline","ccc9c76b":"df = pd.read_csv('..\/input\/bitcoin_price.csv', parse_dates=['Date'])\ndf.head(3)","6581c1e8":"print (df.describe())\n","f3114727":"print (df.dtypes)","37dc2e58":"df1 = df[['Date','Close']]\ndf1.head(3)","71cd6891":"# Setting the Date as Index\ndf_ts = df1.set_index('Date')\ndf_ts.sort_index(inplace=True)\nprint (type(df_ts))\nprint (df_ts.head(3))\nprint (df_ts.tail(3))","a297683c":"#plot\ndf_ts.plot()","87b5daa9":"# Dickey Fuller Test Function\ndef test_stationarity(timeseries):\n    # Perform Dickey-Fuller test:\n    from statsmodels.tsa.stattools import adfuller\n    print('Results of Dickey-Fuller Test:')\n       \n    dftest = adfuller(timeseries, autolag='AIC')\n    \n    dfoutput = pd.Series(dftest[0:4], index=['Test Statistic', 'p-value', '#lags Used', 'Number of Observations Used'])\n    \n    for key, value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    \n    print(dfoutput)","5972170c":"# Stationarity with Dickey Fuller Test \n# Convert the DF to series first\nts = df_ts['Close']\ntest_stationarity(ts)","28666321":"# plot the 12-Month Moving Rolling Mean, Variance \n# Rolling Statistics\nrolmean = ts.rolling(window=12).mean()\nrolvar = ts.rolling(window=12).std()\n\nplt.plot(ts, label='Original')\nplt.plot(rolmean, label='Rolling Mean')\nplt.plot(rolvar, label='Rolling Standard Variance')\nplt.legend(loc='best')\nplt.title('Rolling Mean & Standard Deviation')\nplt.show(block=False)","b9f7b24a":"# vanila decomposition to see any trend seasonality in the ts\ndecomposition = sm.tsa.seasonal_decompose(ts, model='multiplicative')\n\nfig = decomposition.plot()\nfig.set_figwidth(12)\nfig.set_figheight(8)\nfig.suptitle('Decomposition of multiplicative time series')\nplt.show()","1413ad48":"#data by Month and analyze again\ndf_ts_m = df_ts.resample('M').mean()\nprint (type(df_ts_m))\nprint (df_ts_m.head(3))","7f8c216f":"tsm = df_ts_m['Close']\nprint (type(tsm))","4e95c24a":"# Stationarity Check\ntest_stationarity(tsm)","5d813e46":"# A quick vanila decomposition \ndecomposition = sm.tsa.seasonal_decompose(tsm, model='multiplicative')\n\nfig = decomposition.plot()\nfig.set_figwidth(12)\nfig.set_figheight(8)\nfig.suptitle('Decomposition of multiplicative time series')\nplt.show()","8fe1c068":"# \"tsm\" Stationary\n\ntsmlog = np.log10(tsm)\ntsmlog.dropna(inplace=True)\n\ntsmlogdiff = tsmlog.diff(periods=1)\ntsmlogdiff.dropna(inplace=True)\n# Stationarity Check\ntest_stationarity(tsmlogdiff)","dc3da300":"# plot ACF & PACF graphs to visualize AR & MA components\nfig, axes = plt.subplots(1, 2)\nfig.set_figwidth(12)\nfig.set_figheight(4)\nsmt.graphics.plot_acf(tsmlogdiff, lags=30, ax=axes[0], alpha=0.5)\nsmt.graphics.plot_pacf(tsmlogdiff, lags=30, ax=axes[1], alpha=0.5)\nplt.tight_layout()","e887a4fc":"**Conslusion**\n\nSeasonal graph is too stacked . This was obvious by the way as we are analyzing daily data so trying out a Monthly approach","a1dbf2be":"**Conclusion**\n\nMuch more clear seasonality graph","90afb73c":"**Basic Time Series Analysis on Cryptocurrency Historical Prices**","9eee7bef":"**Conclusion**\n\nThe Test Statistics value is Much higher than critical value. So we can't reject the Null Hypothesis.\n\nHence from the plot the Time series is Non-Stationary","751d34d0":"**Conclusion**\n\nThe time series is Stationary now. We can use it now in Forecasting Techniques like ARIMA"}}