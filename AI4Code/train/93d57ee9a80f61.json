{"cell_type":{"318af68d":"code","69ecc392":"code","a0c72d60":"code","7be196c5":"code","65487d3b":"code","7fff4e5b":"code","a242ed8c":"code","c9d1af09":"code","19e181b4":"code","44b4b45c":"code","f2ce55c8":"code","e24114c7":"code","5bb17791":"markdown","7b76ef51":"markdown","7320565c":"markdown","4fbb3f41":"markdown","2f692bfc":"markdown","049418cf":"markdown","c8237602":"markdown","27e37aef":"markdown","36cb6b5b":"markdown","6689c935":"markdown"},"source":{"318af68d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans","69ecc392":"# loading the data from csv file to a Pandas DataFrame\ncustomer_data = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","a0c72d60":"# first 5 rows in the dataframe\ncustomer_data.head()","7be196c5":"# finding the number of rows and columns\ncustomer_data.shape","65487d3b":"# getting some informations about the dataset\ncustomer_data.info()","7fff4e5b":"# checking for missing values\ncustomer_data.isnull().sum()","a242ed8c":"X = customer_data.iloc[:,[3,4]].values","c9d1af09":"print(X)","19e181b4":"# finding wcss value for different number of clusters\n\nwcss = []\n\nfor i in range(1,11):\n  kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)\n  kmeans.fit(X)\n\n  wcss.append(kmeans.inertia_)","44b4b45c":"# plot an elbow graph\n\nsns.set()\nplt.plot(range(1,11), wcss)\nplt.title('The Elbow Point Graph')\nplt.xlabel('Number of Clusters')\nplt.ylabel('WCSS')\nplt.show()","f2ce55c8":"kmeans = KMeans(n_clusters=5, init='k-means++', random_state=0)\n\n# return a label for each data point based on their cluster\nY = kmeans.fit_predict(X)\n\nprint(Y)","e24114c7":"# plotting all the clusters and their Centroids\n\nplt.figure(figsize=(8,8))\nplt.scatter(X[Y==0,0], X[Y==0,1], s=50, c='green', label='Cluster 1')\nplt.scatter(X[Y==1,0], X[Y==1,1], s=50, c='red', label='Cluster 2')\nplt.scatter(X[Y==2,0], X[Y==2,1], s=50, c='yellow', label='Cluster 3')\nplt.scatter(X[Y==3,0], X[Y==3,1], s=50, c='violet', label='Cluster 4')\nplt.scatter(X[Y==4,0], X[Y==4,1], s=50, c='blue', label='Cluster 5')\n\n# plot the centroids\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=100, c='cyan', label='Centroids')\n\nplt.title('Customer Groups')\nplt.xlabel('Annual Income')\nplt.ylabel('Spending Score')\nplt.show()","5bb17791":"5 Clusters -  0, 1, 2, 3, 4","7b76ef51":"Training the k-Means Clustering Model","7320565c":"Choosing the number of clusters","4fbb3f41":"# New section","2f692bfc":"Optimum Number of Clusters = 5","049418cf":"Data Collection & Analysis","c8237602":"Choosing the Annual Income Column & Spending Score column","27e37aef":"Importing the Dependencies","36cb6b5b":"Visualizing all the Clusters","6689c935":"WCSS  ->  Within Clusters Sum of Squares"}}