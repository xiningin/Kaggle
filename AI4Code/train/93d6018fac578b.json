{"cell_type":{"16d67861":"code","b1e2910c":"code","c4ab348b":"code","4124cfa3":"code","6ef6c550":"code","2ed962ca":"code","670eb63f":"code","f7a8b3a1":"code","fd6b4b2c":"code","73e919da":"code","6d434183":"markdown","4f7c2342":"markdown","9e68051e":"markdown","8c48dfd9":"markdown","b7c7063c":"markdown","1d253f0e":"markdown","5be642b0":"markdown"},"source":{"16d67861":"message = \"Hello Kaggle World!\"","b1e2910c":"# what do you think will happen when you run this code?\nprint(message)","c4ab348b":"message = \"A New message\"","4124cfa3":"print(message)","6ef6c550":"message2 = \"A 2nd message\"","2ed962ca":"print(message2)","670eb63f":"# below is a very basic example of showing both messages printed from above!\nprint(message)\nprint(message2)","f7a8b3a1":"doh = \"this is not an error\"","fd6b4b2c":"print(dh)","73e919da":"# let's try it again, the right way this time\nprint(doh)","6d434183":"In Python, variables are nothing but reserved memory locations to store values. This means that when you create a variable you reserve space in memory. \n\n**Rules for variables:**\n\n* Letters, numbers, and underscores. They can start with a letter or an underscore, but not with a number. For instance, you can call a variable message_1 but not 1_message. \n\n* Spaces are not allowed in variable names, but underscores can be used to separate words in variable names. For example, greeting_message works, but greeting message will cause errors. \n\n* Avoid using Python keywords and function names as variable *names*; that is, do not use words that Python has reserved for a particular programmatic purpose, such as the word *print*. \n\n**Tips:** name is better than n, student_name is better than s_n, and name_length is better than length_of_persons_name. Be careful when using the lowercase letter l and the uppercase letter O because they could","4f7c2342":"Based on rules above, here is one that will cause an error.","9e68051e":"We\u2019ve added a variable named message. Every variable is assigned to a value and in our case that value is the \"Hello Python world!\" text.","8c48dfd9":"Above you see the traceback which is a record of where the Python interpreter ran into trouble when trying to execute your code.\n\nIn this case, \"dh\" is not defined. It means.. \"dh\" was not created anywhere. And that is true because we created \"doh\" not \"dh\"","b7c7063c":"First step, let's create a message. The words in the message don't matter, what is important is that you understand what is happening. ","1d253f0e":"Now we can create a second message","5be642b0":"We can also remove our original variable and add another variable."}}