{"cell_type":{"fe2236c9":"code","bb4e2a93":"code","5e1809e6":"code","8b847837":"code","696fb297":"code","f0cd9bd7":"code","e73f2345":"code","cf5ff273":"code","b3666443":"code","c36fff64":"code","08b6a8be":"code","70354af5":"code","abeff400":"code","f6903f57":"code","38efa3fc":"code","6269344a":"code","f1bf4cae":"code","b5623a79":"code","972c3033":"code","6dcffe07":"code","c9decb33":"code","d47cd97e":"code","e8ee17ac":"code","43d93abc":"code","2d3551a2":"code","bc85f637":"code","03bc9518":"code","b4cb4f8e":"code","664487b0":"code","749e0f91":"code","180b9bb5":"code","0355e33d":"code","09651723":"code","88449497":"code","f3c94d6e":"code","b031f54c":"code","80e62e6f":"code","b4a3c2dc":"code","e301734c":"code","4d853c9a":"code","7cb6e74e":"code","52f25586":"code","1564847c":"code","6bdaa08e":"code","fa9b8796":"code","cf4c73db":"code","d4269c7c":"code","68dad6ea":"code","6eef8d9f":"code","7368e19b":"code","9c20c8c6":"code","c07c034e":"code","7fe55b7d":"code","ad75f632":"code","e608ccf7":"code","02e553ab":"code","307da62e":"code","a6096d43":"code","41c58de6":"code","b4962648":"markdown","d4265750":"markdown","dd2dd6dc":"markdown","fa0c9508":"markdown","58a72d13":"markdown","95b20d16":"markdown","1cef515d":"markdown","16732978":"markdown","7aad2b05":"markdown","e77ad3e2":"markdown","6aea0b05":"markdown","065a8326":"markdown","14eef07a":"markdown","55df8c4a":"markdown","2b2b5044":"markdown","e1e8031a":"markdown","ba52bf60":"markdown","68964ddf":"markdown","25d3905b":"markdown","7d664b3a":"markdown","697ee89c":"markdown","78c89724":"markdown"},"source":{"fe2236c9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bb4e2a93":"import numpy as np\nimport pandas as pd","5e1809e6":"import os\nprint(os.listdir(\"..\/input\/immigration-to-canada-ibm-dataset\"))","8b847837":"df_can_imm = pd.read_excel('..\/input\/immigration-to-canada-ibm-dataset\/Canada.xlsx',\n                          sheet_name = \"Canada by Citizenship\",\n                          skiprows = range(20),\n                          skipfooter = 2)\ndf_can_imm.shape","696fb297":"df_can_imm.head(5)","f0cd9bd7":"df_can_imm.tail()","e73f2345":"df_can_imm.info()","cf5ff273":"df_can_imm.columns.values","b3666443":"df_can_imm.index.values","c36fff64":"df_can_imm.dtypes","08b6a8be":"df_can_imm.columns","70354af5":"print(type(df_can_imm.columns))","abeff400":"print(df_can_imm.columns.to_list())","f6903f57":"print(type(df_can_imm.index))","38efa3fc":"print(type(df_can_imm.index.to_list()))","6269344a":"# in pandas axis =0 is rows(default) and axis = 1 represents column\ndf_can_imm.drop(['Type','Coverage','AREA','REG','DEV'], axis = 1, inplace = True)\ndf_can_imm.head(2)","f1bf4cae":"df_can_imm.rename(columns={'OdName':'Country' , 'AreaName':'Continent', 'RegName':'Region'}, inplace = True)\ndf_can_imm.columns","b5623a79":"df_for_imm_total = df_can_imm.drop(['Country','Continent','Region','DevName'], axis = 1)\ndf_for_imm_total\ndf_can_imm['Total'] = df_for_imm_total.sum(axis=1)\ndf_can_imm.head(2)","972c3033":"df_can_imm.isnull()","6dcffe07":"df_can_imm.isnull().sum()","c9decb33":"df_can_imm.describe()","d47cd97e":"df_can_imm.describe(include = \"all\")","e8ee17ac":"df_can_imm.Country","43d93abc":"df_can_imm['Country']","2d3551a2":"df_can_imm[['Country','Total']]","bc85f637":"df_can_imm[['Country',1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990]]\n#as years are in integers","03bc9518":"df_can_imm.set_index ('Country', inplace = True)\n","b4cb4f8e":"df_can_imm.head(2)","664487b0":"df_can_imm.index.name","749e0f91":"print(df_can_imm.loc['India'])","180b9bb5":"print(df_can_imm.loc['India', 2013])","0355e33d":"print(df_can_imm.loc['India', [2010,2011,2012,2013]])","09651723":"print(df_can_imm.iloc[87])","88449497":"print(df_can_imm.iloc[87,4])","f3c94d6e":"print(df_can_imm.iloc[87,[4,5,6,7,8]])","b031f54c":"print(df_can_imm[df_can_imm.index == 'India'])\n","80e62e6f":"print(df_can_imm[df_can_imm.index == 'India'].squeeze())","b4a3c2dc":"# japan for year 2013\ndf_can_imm.loc['Japan', 2013]","e301734c":"# alternate method\nprint(df_can_imm.iloc[87, 36]) # year 2013 is the last column, with a positional index of 36","4d853c9a":"# 3. for years 1980 to 1985\ndf_can_imm.loc['Japan', [1980, 1981, 1982, 1983, 1984, 1985]]","7cb6e74e":"# 1. create the condition boolean series\ncondition = df_can_imm['Continent'] == 'Asia'\nprint(condition)","52f25586":"# 2. pass this condition into the dataFrame\ndf_can_imm[condition]","1564847c":"condition1 = (df_can_imm['Continent'] == 'Asia') & (df_can_imm['Region'] == 'Southern Asia')\ndf_can_imm[condition1]","6bdaa08e":"print('data dimensions:', df_can_imm.shape)\nprint(df_can_imm.columns)\ndf_can_imm.head(2)","fa9b8796":"# we are using the inline backend\n%matplotlib inline \n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","cf4c73db":"print ('Matplotlib version: ', mpl.__version__) # >= 2.0.0","d4269c7c":"print(plt.style.available)","68dad6ea":"mpl.style.use(['ggplot']) # optional: for ggplot-like style","6eef8d9f":"#df_can_imm.columns = list(map(str, df_can_imm.columns))\n#[print (type(x)) for x in df_can_imm.columns.values]","7368e19b":"\n# useful for plotting\nyears = list(range(1980,2014))\n\nyears","9c20c8c6":"haiti = df_can_imm.loc['Haiti', years] # passing in years 1980 - 2013 to exclude the 'total' column\nhaiti.head()","c07c034e":"haiti.plot()","7fe55b7d":"#haiti.index=haiti.index.map(int)\nhaiti.plot(kind = 'line')\n\nplt.title(\"Immigration to canada\")\nplt.ylabel(\"NUmber of Immigrants\")\nplt.xlabel(\"Year\")\n\n# annotate the 2010 Earthquake. \n# syntax: plt.text(x, y, label)\nplt.text(2000,6000,'2010 Earthquake')\n\nplt.show() # need this line to show the updates made to the figure","ad75f632":"df_indochina = df_can_imm.loc[['China','India'], years]\ndf_indochina .head()","e608ccf7":"df_indochina.plot(kind='line')","02e553ab":"df_indochina = df_indochina.transpose()\ndf_indochina.head()","307da62e":"df_indochina.plot(kind='line')\nplt.title('Immigrants from china and india')\nplt.ylabel('NUmber of immigrants')\nplt.xlabel('Years')\nplt.show()\n","a6096d43":"df_can_imm.sort_values(by = 'Total', ascending = False, axis = 0, inplace = True)\ndf_can_imm_top = df_can_imm.head(5)\ndf_can_imm_top","41c58de6":"df_can_imm_top = df_can_imm_top[years].transpose() \nprint(df_can_imm_top)\ndf_can_imm_top.plot(kind='line', figsize=(13, 8)) \nplt.title('Immigration Trend of Top 5 Countries')\nplt.ylabel('Number of Immigrants')\nplt.xlabel('Years')\nplt.show()","b4962648":"# Visualizing Data using Matplotlib\n>Matplotlib is a Python 2D plotting library\n>To create impactful visualization with python, Matplotlib is an essential tool\n<p>Matplotlib.Pyplot<\/p>\n<p>Each pyplot function makes some change to a figure: e.g., creates a figure, creates a plotting area in a figure, plots some lines in a plotting area, decorates the plot with labels, etc. We will work with the scripting layer to learn how to generate line plots. <\/p>\n","d4265750":"### Other Plots\n\nThat all about how to wrangle data with python and create a line plot with Matplotlib. There are many other plotting styles available other than the default Line plot, all of which can be accessed by passing `kind` keyword to `plot()`. The full list of available plots are as follows:\n\n* `bar` for vertical bar plots\n* `barh` for horizontal bar plots\n* `hist` for histogram\n* `box` for boxplot\n* `kde` or `density` for density plots\n* `area` for area plots\n* `pie` for pie plots\n* `scatter` for scatter plots\n* `hexbin` for hexbin plot","dd2dd6dc":"If the years were stored as type 'string', we would need to specify x as the index position of the year. Eg 20th index is year 2000 since it is the 20th year with a base year of 1980.\n    plt.text(20, 6000, '2010 Earthquake') # years stored as type int","fa0c9508":"Import two important data anlytics modules pandas and numpy","58a72d13":"# Select Columns","95b20d16":"**Let's start with a case study:**\n\nIn 2010, Haiti suffered a catastrophic magnitude 7.0 earthquake. The quake caused widespread devastation and loss of life and aout three million people were affected by this natural disaster. As part of Canada's humanitarian effort, the Government of Canada stepped up its effort in accepting refugees from Haiti. We can quickly visualize this effort using a `Line` plot:\n\n**Question:** Plot a line graph of immigration from Haiti using `df.plot()`.","1cef515d":"pandas will auomatically graph the two countries on the same graph. ","16732978":"above will return series as output","7aad2b05":"Recall that pandas plots the indices on the x-axis and the columns as individual lines on the y-axis. Since `df_indochina` is a dataframe with the country as the index and years as the columns,\n\nwe must first transpose the dataframe using transpose() method to swap the row and columns.","e77ad3e2":"# Filtering Dataframe based on a criteria\n<p>For example, Let's filter the dataframe to show the data on Asian countries (AreaName = Asia).<\/p>","6aea0b05":"### Line plot is a handy tool to display several dependent variables against one independent variable. However, it is recommended that no more than 5-10 lines on a single graph; any more than that and it becomes difficult to interpret.\n\n\nQuestion: Compare the trend of top 5 countries that contributed the most to immigration to Canada.","065a8326":"![](http:\/\/)pandas automatically populated the x-axis with the index values (years), and the y-axis with the column values (population).\n\nnotice how the years were not displayed because they are of type string. Therefore, let's change the type of the index values to integer for plotting\n\nAlso, let's label the x and y axis using plt.title(), plt.ylabel(), and plt.xlabel() as follows:\n\nWe can clearly notice how number of immigrants from Haiti spiked up from 2010 as Canada stepped up its efforts to accept refugees from Haiti. Let's annotate this spike in the plot by using the plt.text() method.","14eef07a":"### We can easily add more countries to line plot to make meaningful comparisons of immigration from different countries.\n\nQuestion: Let's compare the number of immigrants from India and China from 1980 to 2013.","55df8c4a":"## To find missing values","2b2b5044":"Next, we will plot a line plot by appending .plot() to the haiti dataframe","e1e8031a":"# Select rows","ba52bf60":"*Note*: How come we didn't need to transpose Haiti's dataframe before plotting (like we did for df_CI)?\n\nThat's because `haiti` is a series as opposed to a dataframe, and has the years as its indices","68964ddf":"# Plotting in pandas\n<p>Fortunately, pandas has a built-in implementation of Matplotlib that we can use. Plotting in pandas is as simple as appending a .plot() method to a series or dataframe.<\/p>","25d3905b":"## Line Pots (Series\/Dataframe)\nA line chart or line plot is a type of plot which displays information as a series of data points called 'markers' connected by straight line segments.\n\nUse line plot when you have a continuous data set.\n\nThese are best suited for trend-based visualizations of data over a period of time.\n","7d664b3a":"Above will not work if column name is having spaces or underscore","697ee89c":"#### Import <pre>os module<\/pre> which is used for operating system dependent functionality.\n#### Here we use listdir function to get the list of files available in the input directory","78c89724":"Since we converted the years to string, let's declare a variable that will allow us to easily call upon the full range of years:"}}