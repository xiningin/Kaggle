{"cell_type":{"e9eb97dc":"code","ee1a4edc":"code","a997ff5b":"code","814a2944":"code","8ee0d916":"code","f97d81fe":"code","7db82cbf":"markdown","0b73c169":"markdown","0a34f277":"markdown","cba366af":"markdown","7681b2f9":"markdown","540b365e":"markdown","2c064c6e":"markdown","0d424dd6":"markdown","83897cea":"markdown","76c2f0ca":"markdown","3f673b37":"markdown"},"source":{"e9eb97dc":"(cmd)\npip install virtualenv ","ee1a4edc":"(cmd)\ncd C:\\...\\Desktop\\Python\\Hungry Goose\n    ","a997ff5b":"(cmd)\nvirtualenv myenv ","814a2944":"(cmd)\n.\\myenv\\Scripts\\activate\n# The . basically states 'current directory'","8ee0d916":"(cmd)\npip install kaggle-environments\npip install ipykernel \npython -m ipykernel install --name=myenv # This adds the environment to jupyter notebook's kernel list.","f97d81fe":"from kaggle_environments.envs.hungry_geese.hungry_geese import Observation, Configuration, Action, row_col\nfrom kaggle_environments import evaluate, make, utils\n\n#help(row_col)\n#print(Configuration.columns)\n\n# Agent\ndef agent(obs_dict, config_dict):\n    \"\"\"This agent always moves toward observation.food[0] but does not take advantage of board wrapping\"\"\"\n    #print(\"Config dict\", config_dict) # Config is static\n    print(\"Observation dict\", obs_dict) # This changes over each timestep (your observations change over time poggers)\n    print(obs_dict['step']) # This and obs_dict.step are the exact same. No idea which one's better.\n    \n    observation = Observation(obs_dict) # -> Why is obs_dict wrapped in Observation? What does that do vs just obs_dict?\n    print('ho', observation)\n    \n    configuration = Configuration(config_dict)\n    player_index = observation.index\n    player_goose = observation.geese[player_index]\n    player_head = player_goose[0]\n    player_row, player_column = row_col(player_head, configuration.columns)\n    food = observation.food[0]\n    food_row, food_column = row_col(food, configuration.columns)\n\n    if food_row > player_row:\n        return Action.SOUTH.name\n    if food_row < player_row:\n        return Action.NORTH.name\n    if food_column > player_column:\n        return Action.EAST.name\n    return Action.WEST.name\n\n###\n\n# Setup a hungry_geese environment and run agent vs a random.\nenv = make(\"hungry_geese\", debug=True) # Set debug to False if you don't want the printed statements (or just remove the prints in the agent)\nenv.run([agent, agent,agent,agent])\nenv.render(mode=\"ipython\", width=500, height=450)","7db82cbf":"You might get an issue saying 'no module about requests'. The fix is as easy as pip installing it (pip install requests) into your venv.\n\nTada, everything is nice now!\n![image.png](attachment:image.png)","0b73c169":"Then, you want to **create** a virtual environment. I'll put mine in the Hungry Goose directory, so staying on the same cmd (![image.png](attachment:image.png)) you then create one with:\nYou can call it whatever you want; we'll call it myenv.","0a34f277":"And now, it's as simple as putting your code in! Or writing markdown, whatever you want.\nHere's some code to put in a code cell so you can check if it works.","cba366af":"You can then open jupyter notebook after by just typing 'jupyter notebook' in the cmd.\nNow you should be here:\n![image.png](attachment:image.png)\nFrom here, it's as easy as creating a new notebook by clicking 'New' -> myenv, which makes the new notebook use that environment. You can change the environment a notebook uses by clicking on 'kernel' -> 'change kernel' in that notebook.\n","7681b2f9":"Some links I used to make this:\nhttps:\/\/www.kaggle.com\/c\/hungry-geese\/discussion\/218888 # Ant comes in clutch.\n\nhttps:\/\/mothergeo-py.readthedocs.io\/en\/latest\/development\/how-to\/venv-win.html#:~:text=If%20you%20try%20to%20run,can%20install%20it%20using%20pip.&text=virtualenv.exe%20will%20likely%20now,directory%20under%20the%20Scripts%20subdirectory.\n\nhttps:\/\/janakiev.com\/blog\/jupyter-virtual-envs\/\n\nhttps:\/\/queirozf.com\/entries\/jupyter-kernels-how-to-add-change-remove\n\nhttps:\/\/stackoverflow.com\/questions\/57883361\/how-to-display-ipython-core-display-html-object\n\n","540b365e":"**Then, make your cmd go to wherever your project is stored.\nIn my case, I'm going my Hungry Goose folder.**\n\n(A quick way to find it is to just make the files, then go to Hungry Goose (in my case), and click on the directory bar.\n![image.png](attachment:image.png)\nClicking on that will get you something like 'C:\\Users\\X\\Desktop\\Python\\Hungry Goose', but where ever your directory is.\n*My terminology may be incorrect.*\n\n**TIME TRAVELLER HERE:\nIT'S A LOT BETTER NOT TO HAVE SPACES IN FOLDER NAMES. Make it Hungry_Goose, anything, BUT NO SPACES.** The issue is: Once you're in Jupyter, you can usually use pip or cmd commands in their code cells. But with a space in your directory, you'll get an issue saying it can't locate something or other. Happened for me, anyways. ","2c064c6e":"Now there should be a fancy little thing that says (myenv) to the left of your directory on the cmd. You're in!\nNow we do the actual useful things. Note: You can see what version of python the env is by typing 'python' in the cmd.\n# Installing Libraries & Jupyter Notebook\nLet's go ahead and install kaggle-environments (it's different to kaggle!)\nYou can go ahead and install numpy and others later on, just remember to activate the environment first (unless you wanna use the global).\n\n\n*Why do we care about notebook?*\nTo render the games.\nIf we used something like vsc, when we want to render the module, it just returns '<IPython.core.display.HTML object>'. According to a source shown before, they only render on html or browser type things. So, we'll use Jupyter here.","0d424dd6":"# Setting up a Virtual Environment \n**First**, we'll make a virtualenv.\nYou can use conda for this, but I've temporarily shied away from that because of a few problems I had.\nInstall it if you haven't yet on the cmd.\nSkip to Installing Libraries & Finishing if you're already cool and did this before or don't want to make one.\n\n","83897cea":"# Intro\nHello!\nThis is just a simple guide on how to run (any!) playground simulation locally. While you can abuse notebooks for their free computational resources, it might be nicer to code it in Jupyter or something else.\n\nThe only caveat: This assumes you already have Jupyter Notebook & basic knowledge of cmd \n\nObviously, you could do this pretty quickly, but I'm just documenting my steps here so you won't have to do X amount of googling.\n*Also, running the code in here will do nothing useful. The whole point is local, right?*\n\n(This is for windows)","76c2f0ca":"\nIf you have any improvements on this, please comment! This is by no means exhaustive and I'm probably wrong somewhere.\nGiven that you've read all the way down here, I hope you got something useful out of this.\n\nBye!\n","3f673b37":"Now you should have a 'myenv' file in your Hungry Goose directory. Cool. Let's activate it in our cmd so we can actually install things into it."}}