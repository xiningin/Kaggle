{"cell_type":{"5848d140":"code","ab2d96b0":"code","580dfe24":"code","8e4c538b":"code","63ca9a50":"code","954baf2e":"code","6f774fc8":"code","610eb2a0":"code","1970be07":"code","2cda4d5d":"code","b296a8e0":"code","279303d6":"code","ac10cbec":"code","ac238a40":"code","6171a50d":"code","ed152f43":"code","a3fa53f2":"code","9cfdfbf9":"code","217ff7e0":"code","82c22bc3":"code","3459c910":"code","ac8232f7":"code","bc037271":"code","3c879511":"code","a6b9927d":"code","af7d2d1e":"code","7c4223e1":"code","a0c4613a":"code","c0e5ba15":"code","3b6b564b":"code","e152186c":"code","ab4b0d15":"code","e3042e40":"markdown","b8c3815a":"markdown","e1299c2c":"markdown","691adf76":"markdown"},"source":{"5848d140":"import numpy as np\nimport pandas as pd \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ab2d96b0":"train_data = pd.read_csv(\"..\/input\/titanic\/train.csv\", index_col='PassengerId')\ntrain_data","580dfe24":"for col in train_data.columns:\n    print(col, len(train_data[col].unique()))","8e4c538b":"train_data.drop(columns=['Name', 'Cabin', 'Ticket'], inplace=True)\ntrain_data","63ca9a50":"total = train_data.isnull().sum()\n\npercent_1 = train_data.isnull().sum()\/train_data.isnull().count()*100\n\npercent_2 = (round(percent_1, 1))\n\nmissing_data = pd.concat([total, percent_2], axis=1, keys=['Total', '%'])\nmissing_data","954baf2e":"age_mean = train_data.Age.mean()\ntrain_data.Age.fillna(age_mean, inplace=True)\n\ntrain_data.isna().sum()","6f774fc8":"train_data['Embarked'].describe()","610eb2a0":"train_data.Embarked.fillna(train_data.Embarked.mode()[0], inplace=True)\ntrain_data.isna().sum()","1970be07":"train_data.Embarked.replace('C', 0, inplace=True)\ntrain_data.Embarked.replace('S', 1, inplace=True)\ntrain_data.Embarked.replace('Q', 2, inplace=True)\n\ntrain_data","2cda4d5d":"train_data.Age.dtype","b296a8e0":"test_data = pd.read_csv(\"..\/input\/titanic\/test.csv\", index_col='PassengerId')","279303d6":"data = [train_data, test_data]\n\nfor dataset in data:\n    dataset['Age'] = dataset['Age'].fillna(0)\n    dataset['Age'] = dataset['Age'].astype(int)\n    \ntrain_data    ","ac10cbec":"test_data.Age","ac238a40":"train_data.info()","6171a50d":"train_data.Sex.replace('male', 0, inplace=True)\ntrain_data.Sex.replace('female', 1, inplace=True)\n\ntrain_data","ed152f43":"print(train_data.Sex.value_counts())\nprint('----------------------')\nprint(train_data.groupby('Sex').Survived.value_counts())","a3fa53f2":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nsns.barplot(x='Sex', y='Survived', data=train_data)","9cfdfbf9":"train_data.Embarked.value_counts().plot(kind='bar')\nplt.title(\"Passengers per boarding location\");","217ff7e0":"Survived_Pcalss = sns.catplot(x=\"Pclass\", y=\"Survived\", hue=\"Sex\", data=train_data, kind=\"bar\")\nSurvived_Pcalss = Survived_Pcalss.set_ylabels(\"survival probability\")","82c22bc3":"test_data = pd.read_csv(\"..\/input\/titanic\/test.csv\", index_col='PassengerId')\n\ntest_data.drop(columns=['Name', 'Cabin', 'Ticket'], inplace=True)\ntest_data","3459c910":"test_data.isna().sum()","ac8232f7":"test_data.Age.fillna(age_mean, inplace=True)\ntest_data.Fare.fillna(test_data.Fare.mean(), inplace=True)\n\ntest_data","bc037271":"test_data.Sex.replace('male', 0, inplace=True)\ntest_data.Sex.replace('female', 1, inplace=True)\n\ntest_data.Embarked.replace('C', 0, inplace=True)\ntest_data.Embarked.replace('S', 1, inplace=True)\ntest_data.Embarked.replace('Q', 2, inplace=True)\n\ntest_data","3c879511":"X_train = train_data.drop(\"Survived\", axis=1)\ny_train = train_data[\"Survived\"]\n\nX_train","a6b9927d":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X_train, y_train, random_state=1)\n\nRFC_model = RandomForestClassifier(criterion='gini', \n                             n_estimators=100,\n                             random_state=1,\n                             n_jobs=-1)\nRFC_model.fit(X_train, y_train)\n\ny_prediction = RFC_model.predict(X_test)\n\nRFC_model.score(X_train, y_train)\nacc_RFC = round(RFC_model.score(X_train, y_train) * 100, 2)\n\nacc_RFC","af7d2d1e":"from sklearn.metrics import (accuracy_score, classification_report, confusion_matrix)\n\ny_predict = RFC_model.predict(X_test)\naccuracy_score(y_test, y_predict)\n\nprint(classification_report(y_test, y_predict))\n","7c4223e1":"from sklearn.tree import DecisionTreeClassifier\n\ndecision_tree = DecisionTreeClassifier() \ndecision_tree.fit(X_train, y_train)  \ny_prediction = decision_tree.predict(X_test) \n\nacc_decision_tree = round(decision_tree.score(X_train, y_train) * 100, 2)\n\nacc_decision_tree","a0c4613a":"y_predict = decision_tree.predict(X_test)\naccuracy_score(y_test, y_predict)\n\nprint(classification_report(y_test, y_predict))","c0e5ba15":"results = pd.DataFrame({\n    'Model': ['Random Forest','Decision Tree'], 'Score': [acc_RFC, acc_decision_tree]})\nresult_df = results.sort_values(by='Score', ascending=False)\nresult_df = result_df.set_index('Score')\nresult_df.head(2)","3b6b564b":"f_model = DecisionTreeClassifier()\nf_model.fit(X_train, y_train)\n\npreds = f_model.predict(test_data)\n\ntest_data.shape","e152186c":"test_output = pd.DataFrame({\n    'PassengerId': test_data.index, \n    'Survived': preds\n})\ntest_output.to_csv('submission.csv', index=False)","ab4b0d15":"submission = pd.read_csv('submission.csv')\n\nsubmission","e3042e40":"**Information below shows the survival probability of each classes according to their gender..**","b8c3815a":"**Chart says that more female passengers are survived compared to males..**","e1299c2c":"**Chart below describe how many passengers are there in every boarding location (Embarked)**","691adf76":"**Building ML Model**"}}