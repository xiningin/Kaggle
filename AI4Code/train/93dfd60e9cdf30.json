{"cell_type":{"408ea697":"code","3e08e3b4":"code","31157dbb":"code","c4f9d3b2":"code","dd1a737b":"code","a01e80b3":"code","0bb3b787":"code","fd79f02b":"code","2fb5bf29":"code","ce3461b0":"code","4e714abf":"code","6273b40b":"code","06fed8e1":"code","a9f9ebda":"code","2b2c9bf1":"code","140d3c32":"code","1c2508f4":"code","8dafaa4e":"code","4e5b72b4":"code","31a58f03":"code","18e809d3":"code","e7dc5647":"code","a99d1c15":"code","6ae7fc71":"code","3eb6d2e0":"code","8d1022d2":"code","8d157c75":"code","8317973f":"code","11cdd83a":"code","95332708":"code","9ba3d11a":"code","b8801d66":"code","fb061a12":"code","b0f6649a":"code","a219a1d7":"code","24890444":"code","a2b40e12":"code","b9db2bb2":"markdown","48256221":"markdown","0772d78d":"markdown","d04f545d":"markdown","191fc63e":"markdown"},"source":{"408ea697":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3e08e3b4":"# Done after the submission Data, hence answers already known and looked at. \n\nimport pandas as pd\nimport numpy as np\nimport tensorflow as tf\n\n# fixing the random seed for reproducibility\nnp.random.seed(50)\ntf.random.set_seed(50)\n\n# Saving the filepath of 'Phishing.csv' saved in the GitHub repository\nfilepath = \"https:\/\/raw.githubusercontent.com\/sayakpaul\/Manning-Phishing-Websites-Detection\/master\/Phishing.csv\"\n\n# Loading the .csv into a DataFrame\nmyData = pd.read_csv(filepath)","31157dbb":"myData.head(10)","c4f9d3b2":"myData.sample(12)","dd1a737b":"myData.columns","a01e80b3":"#Columns and raws \nmyData.info","0bb3b787":"#Number of records and features \nmyData.shape","fd79f02b":"myData['Result'].unique()","2fb5bf29":"#T attributed notes during the revision\nmyData.T\n#Column headers clear \n","ce3461b0":"myData.head(5).T","4e714abf":"myData.describe()","6273b40b":"resultsData=myData['Result'].unique()","06fed8e1":"resultsData","a9f9ebda":"myResultsData=myData['Result'].value_counts()","2b2c9bf1":"myResultsDataAsArray=np.array(myResultsData)","140d3c32":"myResultsDataAsArray","1c2508f4":"myResultsDataAsArray[1]","8dafaa4e":"data = np.array([['','Class','Num_Observations'],\n                ['0',resultsData[0],myResultsDataAsArray[0]],\n                ['1',resultsData[1],myResultsDataAsArray[1]]])\n                \nprint(pd.DataFrame(data=data[1:,1:],\n                  index=data[1:,0],\n                  columns=data[0,1:]))","4e5b72b4":"import matplotlib.pyplot as plt\n# aggreate the data \nheight = [myResultsDataAsArray[0],myResultsDataAsArray[1]]\nbars = (resultsData[0], resultsData[1])\ny_pos = np.arange(len(bars))\n \n# Create bars\nplt.bar(y_pos, height)\n \n# Create names on the x-axis\nplt.xticks(y_pos, bars)\n \n# Show graphic\nplt.show()","31a58f03":"myData.describe().T","18e809d3":"myData['Result']=myData['Result'].replace([-1],0)","e7dc5647":"myData.head(10).T","a99d1c15":"# Saving the filepath of 'Phishing.csv' saved in the GitHub repository\nfilepath = \"https:\/\/raw.githubusercontent.com\/sayakpaul\/Manning-Phishing-Websites-Detection\/master\/Phishing.csv\"\n\n# Loading the .csv into a DataFrame\nmyData = pd.read_csv(filepath, header =None)\n","6ae7fc71":"myData.T","3eb6d2e0":"(myData[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]]==0).sum()","8d1022d2":"y=myData[30]","8d157c75":"y","8317973f":"y=myData['Result'].replace([-1],0)","11cdd83a":"y","95332708":"x=myData.drop(['Result'],axis=1)","9ba3d11a":"x","b8801d66":"x.T","fb061a12":"from sklearn.model_selection import train_test_split","b0f6649a":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.8,random_state=1)","a219a1d7":"len(y_train)","24890444":"len(x_train)","a2b40e12":"len(x_test)","b9db2bb2":"So this are the features to be used x with no target class. ","48256221":"Checking the size of the train data:","0772d78d":"Looking at the dataset i see no missing values. I am still checking but i see not missing values yet\n","d04f545d":"The target class is y i.e the result with the values being either 0 or 1.","191fc63e":"#Trying sample function, not used before"}}