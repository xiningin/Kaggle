{"cell_type":{"9761b6a6":"code","771191aa":"code","41e504c2":"code","31b85f03":"code","c48277a3":"code","9cf73698":"code","307951a3":"code","03cb0a9c":"code","beea2845":"code","d98d3ea5":"code","66708b55":"code","bb347973":"code","f8463a1a":"code","559c723c":"markdown","9355439b":"markdown","6c80bd04":"markdown","2a8dcd28":"markdown","b4391b07":"markdown","60ed16e5":"markdown","76c857e4":"markdown","0ae327ab":"markdown","cc320c55":"markdown","11dcf402":"markdown","c3f56b6a":"markdown","68d8f5d7":"markdown"},"source":{"9761b6a6":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql_advanced.ex3 import *\nprint(\"Setup Complete\")","771191aa":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"github_repos\" dataset\ndataset_ref = client.dataset(\"github_repos\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"sample_commits\" table\ntable_ref = dataset_ref.table(\"sample_commits\")\n\n# API request - fetch the table\nsample_commits_table = client.get_table(table_ref)\n\n# Preview the first five lines of the table\nclient.list_rows(sample_commits_table, max_results=5).to_dataframe()","41e504c2":"# Print information on all the columns in the table\nsample_commits_table.schema","31b85f03":"# Write a query to find the answer\nmax_commits_query = \"\"\"\n                    SELECT \n                    committer.name AS committer_name,\n                    COUNT(*) AS num_commits\n                    \n                    FROM `bigquery-public-data.github_repos.sample_commits`\n                    \n                    WHERE committer.date >= '2016-01-01' AND committer.date < '2017-01-01'\n                    GROUP BY committer_name\n                    ORDER BY num_commits DESC\n                    \"\"\"\n\n# Check your answer\nq_1.check()","c48277a3":"# Lines below will give you a hint or solution code\n#q_1.hint()\n#q_1.solution()","9cf73698":"# Construct a reference to the \"languages\" table\ntable_ref = dataset_ref.table(\"languages\")\n\n# API request - fetch the table\nlanguages_table = client.get_table(table_ref)\n\n# Preview the first five lines of the table\nclient.list_rows(languages_table, max_results=5).to_dataframe()","307951a3":"# Print information on all the columns in the table\nlanguages_table.schema","03cb0a9c":"# Fill in the blank\nnum_rows = 6\n\n# Check your answer\nq_2.check()","beea2845":"# Lines below will give you a hint or solution code\n#q_2.hint()\n#q_2.solution()","d98d3ea5":"# Write a query to find the answer\npop_lang_query = \"\"\"\n                 SELECT l.name as language_name, COUNT(*) as num_repos\n                 \n                 FROM `bigquery-public-data.github_repos.languages`,\n                     UNNEST(language) AS l\n                     \n                 GROUP BY language_name\n                 ORDER BY num_repos DESC\n                 \"\"\"\n\n# Check your answer\nq_3.check()","66708b55":"# Lines below will give you a hint or solution code\n#q_3.hint()\n#q_3.solution()","bb347973":"# Your code here\nall_langs_query = \"\"\"\n                    SELECT l.name, l.bytes\n                        \n                    FROM `bigquery-public-data.github_repos.languages`,\n                        UNNEST(language) AS l\n                    \n                    WHERE repo_name = 'polyrabbit\/polyglot'\n                    ORDER BY l.bytes DESC\n                  \"\"\"\n\n# Check your answer\nq_4.check()","f8463a1a":"# Lines below will give you a hint or solution code\n#q_4.hint()\n#q_4.solution()","559c723c":"# Exercises\n\n### 1) Who had the most commits in 2016?\n\nGitHub is the most popular place to collaborate on software projects. A GitHub **repository** (or repo) is a collection of files associated with a specific project, and a GitHub **commit** is a change that a user has made to a repository.  We refer to the user as a **committer**.\n\nThe `sample_commits` table contains a small sample of GitHub commits, where each row corresponds to different commit.  The code cell below fetches the table and shows the first five rows of this table.","9355439b":"# Keep going\n\nLearn how to make your queries **[more efficient](https:\/\/www.kaggle.com\/alexisbcook\/writing-efficient-queries)**.","6c80bd04":"### 4) Which languages are used in the repository with the most languages?\n\nFor this question, you'll restrict your attention to the repository with name `'polyrabbit\/polyglot'`.\n\nWrite a query that returns a table with one row for each language in this repository.  The table should have two columns:\n- `name` - the name of the programming language\n- `bytes` - the total number of bytes of that programming language\n\nSort the table by the `bytes` column so that programming languages that take up more space in the repo appear first.","2a8dcd28":"### 3) What's the most popular programming language?\n\nWrite a query to leverage the information in the `languages` table to determine which programming languages appear in the most repositories.  The table returned by your query should have two columns:\n- `language_name` - the name of the programming language\n- `num_repos` - the number of repositories in the `languages` table that use the programming language\n\nSort the table so that languages that appear in more repos are shown first.","b4391b07":"# Introduction\n\nNow that you know how to query nested and repeated data, you're ready to draw interesting insights from the [GitHub Repos](https:\/\/www.kaggle.com\/github\/github-repos) dataset.  \n\nBefore you get started, run the following cell to set everything up.","60ed16e5":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161315) to chat with other Learners.*","76c857e4":"Each row of the `languages` table corresponds to a different repository.  \n- The \"repo_name\" column contains the name of the repository,\n- the \"name\" field in the \"language\" column contains the programming languages that can be found in the repo, and \n- the \"bytes\" field in the \"language\" column has the size of the files (in bytes, for the corresponding language).\n\nRun the following code cell to print the table schema.","0ae327ab":"Run the next code cell to print the table schema. ","cc320c55":"**This notebook is an exercise in the [Advanced SQL](https:\/\/www.kaggle.com\/learn\/advanced-sql) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/alexisbcook\/nested-and-repeated-data).**\n\n---\n","11dcf402":"Assume for the moment that you have access to a table called `sample_languages` that contains only a very small subset of the rows from the `languages` table: in fact, it contains only three rows!  This table is depicted in the image below.\n\n![](https:\/\/i.imgur.com\/qAb5lZ2.png)\n\nHow many rows are in the table returned by the query below?\n\n![](https:\/\/i.imgur.com\/Q5qYAtz.png)\n\nFill in your answer in the next code cell.","c3f56b6a":"Write a query to find the individuals with the most commits in this table in 2016.  Your query should return a table with two columns:\n- `committer_name` - contains the name of each individual with a commit (from 2016) in the table\n- `num_commits` - shows the number of commits the individual has in the table (from 2016)\n\nSort the table, so that people with more commits appear first.\n\n**NOTE**: You can find the name of each committer and the date of the commit under the \"committer\" column, in the \"name\" and \"date\" child fields, respectively.","68d8f5d7":"### 2) Look at languages!\n\nNow you will work with the `languages` table.  Run the code cell below to print the first few rows."}}