{"cell_type":{"b36a3783":"code","9333d64f":"code","09b3313a":"code","0af42a11":"code","7d0d6e26":"code","ab1c85bd":"code","1c9bfd3b":"code","16654c68":"code","ab12854e":"code","903ea6af":"code","efeb9c02":"code","0f84de07":"markdown","b4eb55d3":"markdown","d22f5895":"markdown","fe6f6f05":"markdown","491065c2":"markdown","02ea42de":"markdown"},"source":{"b36a3783":"import sys\n!cp ..\/input\/rapids\/rapids.0.16.0 \/opt\/conda\/envs\/rapids.tar.gz\n!cd \/opt\/conda\/envs\/ && tar -xzvf rapids.tar.gz > \/dev\/null\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\/site-packages\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\/python3.7\"] + sys.path\nsys.path = [\"\/opt\/conda\/envs\/rapids\/lib\"] + sys.path \n!cp \/opt\/conda\/envs\/rapids\/lib\/libxgboost.so \/opt\/conda\/lib\/\n!pip install lofo-importance","9333d64f":"import cudf, cuml # RAPIDS\nimport cupy\n\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import KFold","09b3313a":"%%time\n\ndef metric(y_true, y_pred):\n    return cupy.mean(cupy.sum(cupy.abs(y_true - y_pred), axis=0)\/cupy.sum(y_true, axis=0))\n\n\nTARGETS = {\"age\": {\"SVR_C\": 100, \"metric_weight\": 0.3},\n           \"domain1_var1\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain1_var2\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain2_var1\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain2_var2\": {\"SVR_C\": 10, \"metric_weight\": 0.175}}\n\nfnc_df = cudf.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/fnc.csv\")\nloading_df = cudf.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/loading.csv\")\n\nfnc_features, loading_features = list(fnc_df.columns[1:]), list(loading_df.columns[1:])\ndf = fnc_df.merge(loading_df, on=\"Id\")\n\nlabels_df = cudf.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/train_scores.csv\")\nlabels_df[\"is_train\"] = True\n\ndf = df.merge(labels_df, on=\"Id\", how=\"left\")\n\ntest_df = df[df[\"is_train\"] != True].copy()\ndf = df[df[\"is_train\"] == True].copy()\n\nprint(df.shape, test_df.shape)","0af42a11":"df.head(2)","7d0d6e26":"%%time\n\n\ndef plot_tsne(features, target):\n    tsne = cuml.manifold.TSNE(n_components=2)\n\n    X = tsne.fit_transform(df[features])\n\n    plt.figure(figsize=(8, 8), dpi=80)\n    plt.scatter(X[0].to_array(), X[1].to_array(), c=df[target].to_array())\n    plt.legend()\n    \nplot_tsne(features=loading_features, target=\"age\")","ab1c85bd":"# Giving less importance to FNC features since they are easier to overfit due to high dimensionality. Feature scales matter for SVM.\nFNC_SCALE = 1\/500\n\ndf[fnc_features] *= FNC_SCALE\ntest_df[fnc_features] *= FNC_SCALE","1c9bfd3b":"%%time\n\nNUM_FOLDS = 7\nkf = KFold(n_splits=NUM_FOLDS, shuffle=True, random_state=0)\n\n\nfeatures = loading_features + fnc_features\n\noveral_score = 0\nfor target, conf in TARGETS.items():    \n    y_oof = cupy.zeros(df.shape[0])\n    y_test = cupy.zeros((test_df.shape[0], NUM_FOLDS))\n    \n    for f, (train_ind, val_ind) in enumerate(kf.split(df, df)):\n        train_df, val_df = df.iloc[train_ind], df.iloc[val_ind]\n        train_df = train_df[train_df[target].notnull()]\n\n        model = cuml.SVR(C=conf[\"SVR_C\"], cache_size=3000.0)\n        model.fit(train_df[features], train_df[target])\n\n        y_oof[val_ind] = model.predict(val_df[features]).values\n        y_test[:, f] = model.predict(test_df[features]).values\n        \n    df[\"pred_{}\".format(target)] = y_oof\n    test_df[target] = y_test.mean(axis=1)\n    \n    score = metric(df[df[target].notnull()][target].values, df[df[target].notnull()][\"pred_{}\".format(target)].values)\n    overal_score += conf[\"metric_weight\"]*score\n    print(target, cupy.around(score, 4))\n    print()\n    \nprint(\"Overal score:\", cupy.around(overal_score, 4))\nprint()","16654c68":"%%time\n\nsub_df = cudf.melt(test_df[[\"Id\", \"age\", \"domain1_var1\", \"domain1_var2\", \"domain2_var1\", \"domain2_var2\"]], id_vars=[\"Id\"], value_name=\"Predicted\")\nsub_df[\"Id\"] = sub_df[\"Id\"].astype(\"str\") + \"_\" +  sub_df[\"variable\"].astype(\"str\")\n\nsub_df = sub_df.drop(\"variable\", axis=1).sort_values(\"Id\")\nassert sub_df.shape[0] == test_df.shape[0]*5\nsub_df.head(10)","ab12854e":"%%time\n\nsub_df.to_csv(\"submission.csv\", index=False)","903ea6af":"from lofo import LOFOImportance, Dataset, plot_importance\n\n\ndef get_lofo_importance(df, target, n_folds=4):\n    df = df.to_pandas()\n\n    dataset = Dataset(df=df[df[target].notnull()], target=target, features=loading_features,\n                      feature_groups={\"fnc\": df[df[target].notnull()][fnc_features].values\n                      })\n\n    model = cuml.SVR(C=TARGETS[target][\"SVR_C\"], cache_size=3000.0)\n    lofo_imp = LOFOImportance(dataset, cv=n_folds, scoring=\"neg_mean_absolute_error\", model=model)\n\n    return lofo_imp.get_importance()\n\nfeature_imp = get_lofo_importance(df, target=\"age\")\n\nplot_importance(feature_imp, figsize=(8, 8), kind=\"box\")","efeb9c02":"%%time\n\nplot_tsne(features=[\"IC_22\", \"IC_12\", \"IC_04\", \"IC_15\"], target=\"age\")","0f84de07":"![](https:\/\/rapids.ai\/assets\/images\/RAPIDS-logo-white.svg)","b4eb55d3":"# Modelling and Cross-Validation","d22f5895":"# Making submission","fe6f6f05":"# Feature Importance and Visualization","491065c2":"# Reading and merging dataframes\n* tabular data generated from brain scans\n* **targets**: age and 4 anonymized domain variables\n* **metric**: normalized mean absolute error\n* **fnc_features**: cross-correlation values among 53 component timecourses from fMRI\n* **loading_features**: independent component features from sMRI\n* 5877 patients in train, 5877 patients in test set","02ea42de":"# [RAPIDS](http:\/\/rapids.ai): GPU Accelerated Data Science"}}