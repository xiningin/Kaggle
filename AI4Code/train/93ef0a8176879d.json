{"cell_type":{"8817cf90":"code","fb9e77b0":"code","ca7b03ad":"code","a533c87c":"code","ac31ae09":"code","c2739229":"code","cb2dc210":"code","82d8e90c":"code","99152538":"code","96d4eafb":"code","98ace394":"code","80fd405f":"code","eac57412":"code","6577386b":"code","0dc10033":"code","708880cf":"code","78bd5104":"code","af05f4ad":"code","4ee391c4":"code","f0c8e641":"code","5ef6e9f2":"code","6716032e":"code","edd69a52":"code","9fbb193b":"code","983fbcc4":"code","5073f7b1":"code","973e2cdf":"code","f638f05a":"code","7234cbcd":"code","f53fb533":"code","2e7c18f5":"code","eb2087ab":"code","df3c92ff":"code","5bf869c8":"code","6112a819":"code","5b21e105":"code","f2e97809":"code","058cec6f":"code","19cc93bb":"code","8523cae9":"markdown","12c6ad71":"markdown","8e125ae7":"markdown","0301f33b":"markdown","ec19223b":"markdown","9bc387b7":"markdown","858cc599":"markdown","5a6ecfff":"markdown","4ff562ae":"markdown","e845dbb9":"markdown","af341feb":"markdown","759d7748":"markdown","dac592a8":"markdown","ad595d7a":"markdown","b672ca03":"markdown","831fddbd":"markdown","5c123675":"markdown","48cf5c7e":"markdown","5e367c30":"markdown"},"source":{"8817cf90":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fb9e77b0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ca7b03ad":"car=pd.read_csv('..\/input\/car-data\/CarPrice_Assignment.csv')\ncar.head()","a533c87c":"car.isnull().sum()","ac31ae09":"car.columns","c2739229":"car.info()","cb2dc210":"car.describe()","82d8e90c":"car.shape","99152538":"car.columns\n","96d4eafb":"car['fueltype'].unique()","98ace394":"sns.catplot(x='fueltype',y='price', data=car).add_legend()\nplt.show()","80fd405f":"sns.boxplot(x='fueltype',y='price', data=car,linewidth=1)","eac57412":"car.columns","6577386b":"car['carlength']","0dc10033":"sns.boxplot(x='fueltype',y='carlength', data=car)","708880cf":"car.info()","78bd5104":"CompanyName = car['CarName'].apply(lambda x : x.split(' ')[0])\ncar.insert(3,\"CompanyName\",CompanyName)\ncar.drop(['CarName'],axis=1,inplace=True)\ncar.head()","af05f4ad":"plt.figure(figsize=(10,10))\nsns.pairplot(car)","4ee391c4":"car.CompanyName.unique()","f0c8e641":"car.CompanyName=car.CompanyName.str.lower()\n\ndef replace_name(a,b):\n    car.CompanyName.replace(a,b, inplace=True)\n    \nreplace_name('maxda','mazada')\nreplace_name('porcshe','porcshce')\nreplace_name('toyouta','toyota')\nreplace_name('vokswagen','volkswagen')\nreplace_name('vw', 'volkswagen')","5ef6e9f2":"car.CompanyName.unique()","6716032e":"car.loc[car.duplicated()]","edd69a52":"car.columns","9fbb193b":"car.price.describe(percentiles=[0.25,0.5,0.75,0.8,0.85,0.9,1])","983fbcc4":"plt.figure(figsize=(25,6))\n\nplt.subplot(1,3,1)\nplt1=car.CompanyName.value_counts().plot(kind='bar')\nplt.title('Companies Histogram')\nplt1.set(xlabel='car company', ylabel='Frequency of company')\n\nplt.subplot(1,3,2)\nplt1=car.fueltype.value_counts().plot(kind='bar')\nplt.title(\"Fuel Type Diagram\")\nplt1.set(xlabel=\"Feul Type\",ylabel=\"Frequency of the company\")\n\nplt.subplot(1,3,3)\nplt1=car.carbody.value_counts().plot(kind='bar')\nplt.title(\"carbody \")\nplt1.set(xlabel=\"car body\", ylabel=\"frequency\")\n\nplt.show()\n","5073f7b1":"car.columns","973e2cdf":"plt.figure(figsize=(10,5))\ncar.symboling.value_counts().plot(kind='bar')\nplt.title(\"Symbol\")\nplt.xlabel(\"Symbol\")\nplt.ylabel(\"Frequency Number\")\nplt.show()","f638f05a":"plt.figure(figsize=(10,10))\nsns.boxplot(x='symboling', y='price', data=car)\nplt.show()","7234cbcd":"plt.figure(figsize=(25,5))\n\nplt.subplot(1,2,1)\nplt.title('Symboling Histogram')\nsns.countplot(car.symboling, palette=(\"cubehelix\"))\n\nplt.subplot(1,2,2)\nplt.title(\"Symbol vs Price\")\nsns.boxplot(x='symboling', y='price', data=car)\n\nplt.show()","f53fb533":"car.columns","2e7c18f5":"plt.figure(figsize=(25,5))\n\nplt.subplot(1,2,1)\nplt.title(\"Engine type \")\nsns.countplot(car.enginetype, palette=(\"dark\"))\n\nplt.subplot(1,2,2)\nplt.title(\"Engine type Vs Price\")\nsns.boxplot(x=\"enginetype\", y='price', data=car, palette=(\"PuBuGn\"))\nplt.show()","eb2087ab":"df=pd.DataFrame(car.groupby(['enginetype'])['price'].mean().sort_values(ascending=False))\ndf.plot.bar(figsize=(10,5))\nplt.title(\"Engine Type Vs Price\")\nplt.show()","df3c92ff":"plt.figure(figsize=(10,10))\n\ndf=pd.DataFrame(car.groupby(['CompanyName'])['price'].mean().sort_values(ascending=False))\ndf.plot.bar()\nplt.title(\"Compan Name Vs Avg. Price\")\nplt.show\n\ndf=pd.DataFrame(car.groupby(['fueltype'])['price'].mean().sort_values(ascending=False))\ndf.plot.bar()\nplt.title(\"Fuel Type Vs Avg. Price\")\nplt.show\n\ndf=pd.DataFrame(car.groupby(['carbody'])['price'].mean().sort_values(ascending=False))\ndf.plot.bar()\nplt.title(\"Car Body Vs Avg. Price\")\nplt.show\n","5bf869c8":"plt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nplt.title('Door Number Histogram')\nsns.countplot(car.doornumber, palette=(\"plasma\"))\n\nplt.subplot(1,2,2)\nplt.title(\"Door Numbers Vs cars\")\nsns.boxplot(x=\"doornumber\", y='price', data=car)\n\nplt.show()","6112a819":"plt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nplt.title(\"Aspiration\")\nsns.countplot(car.aspiration, palette=(\"dark\"))\n\nplt.subplot(1,2,2)\nplt.title(\"Aspiration Vs price\")\nsns.boxplot(x=\"aspiration\", y=\"price\", data=car)\n\nplt.show()","5b21e105":"def plot_count(x, fig):\n    plt.subplot(4,2,fig)\n    plt.title(x+'Histogram')\n    sns.countplot(car[x], palette=(\"dark\"))\n    plt.subplot(4,2,(fig+1))\n    plt.title(x+'vs Price')\n    sns.boxplot(x=car[x],y=car.price, palette=(\"magma\"))\n    \nplt.figure(figsize=(15,15))\n\nplot_count(\"enginelocation\",1)\nplot_count(\"cylindernumber\",3)\nplot_count(\"fuelsystem\",5)\nplot_count(\"drivewheel\",7)\n\nplt.tight_layout()\nplt.show()\n    ","f2e97809":"car.columns","058cec6f":"def scatter(x, fig):\n    plt.subplot(5,2,fig)\n    plt.scatter(car[x], car['price'])\n    plt.title(x+' vs price')\n    plt.ylabel(\"Price\")\n    plt.xlabel(x)\n    \nplt.figure(figsize=(25,25))\n\nscatter('carlength',1)\nscatter('carwidth',2)\nscatter('carheight',3)\nscatter('curbweight',4)\n\nplt.tight_layout()","19cc93bb":"corrmat=car.corr()\ntop_corr_feature=corrmat.index\nplt.figure(figsize=(20,20))\ng=sns.heatmap(car[top_corr_feature].corr(), annot=True,cmap=\"RdYlGn\")","8523cae9":"# Data cleaning and preparation","12c6ad71":"#  Visualising Categorical Data","8e125ae7":"# Inference :\n* Very few datapoints for enginelocation categories to make an inference.\n* Most common number of cylinders are four, six and five. Though eight cylinders have the highest price range.\n* mpfi and 2bbl are most common type of fuel systems. mpfi and idi having the highest price range. But there are few data for other categories to derive any meaningful inference\n* A very significant difference in drivewheel category. Most high ranged cars seeme to prefer rwd drivewheel.","0301f33b":"**No Duplicate Found**","ec19223b":"# Information  about the dataset ","9bc387b7":"# inference :\n* Toyota seemed to be favored car company.\n* Number of gas fueled cars are more than diesel.\n* sedan is the top car type prefered","858cc599":"# Inference :\n* Jaguar and Buick seem to have highest average price.\n* diesel has higher average price than gas.\n* hardtop and convertible have higher average price.","5a6ecfff":"# Inference :\n* Doornumber variable is not affacting the price much. There is no sugnificant difference between the categories in it.\n* It seems aspiration with turbo have higher price range than the std(though it has some high values outside the whiskers.)","4ff562ae":"# Checking for duplicates\n","e845dbb9":"# Visualising numerical data","af341feb":"# inference :\n* The plot seemed to be right-skewed, meaning that the most prices in the dataset are low(Below 15,000).\n* There is a significant difference between the mean and the median of the price distribution.\n* The data points are far spread out from the mean, which indicates a high variance in the car prices.(85% of the prices are below 18,500, whereas the remaining 15% are between 18,500 and 45,400.)","759d7748":"# Inference :\n* ohc Engine type seems to be most favored type.\n* ohcv has the highest price range (While dohcv has only one row), ohc and ohcf have the low price range.","dac592a8":"# Conclusion\n* Here is the EDA of car price prediction\n* Prediction will be done next day \n* The Linear Regression will be used to predict the price of the car\n* Seaborn is uded to get the good visual represenatation of the data\n","ad595d7a":"# Describe \nIt is used to get the insight of the dataset like mean, median, std etc.","b672ca03":"Fixing invalid values\nThere seems to be some spelling error in the CompanyName column.\n\nmaxda = mazda\nNissan = nissan\nporsche = porcshce\ntoyota = toyouta\nvokswagen = volkswagen = vw\n","831fddbd":"# Inference :\n* carwidth, carlength and curbweight seems to have a poitive correlation with price.\n* carheight doesn't show any significant trend with price.","5c123675":"# EDA analysis of car dataset","48cf5c7e":"# Shape of the dataset ","5e367c30":"# useful insight of car price"}}