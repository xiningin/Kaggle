{"cell_type":{"7a180d76":"code","add23a96":"code","b94a846e":"code","e05e58a6":"code","ce4de6a3":"code","2e1a582c":"code","26216bc9":"code","bf317046":"code","050549eb":"code","363e693e":"code","3a8d35e3":"code","e443c200":"code","c8f7952a":"code","7a108b74":"code","8aa9791a":"code","7c5df44f":"code","904fb190":"code","25187ac7":"code","98228d69":"code","4cb49844":"code","54f81bf5":"code","46af298b":"code","2d925707":"code","4b965e0c":"code","7ea66301":"markdown","69825b23":"markdown","b44d0e81":"markdown","e678967a":"markdown","1c64e436":"markdown","e693acab":"markdown","0f289ddc":"markdown","3276073a":"markdown"},"source":{"7a180d76":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport os\nimport numpy as np\nimport pandas as pd\nfrom PIL import Image\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport glob\nfrom datetime import datetime\nimport random\npd.set_option('display.max_columns', 100)\npd.set_option('display.max_rows', 100)\nOUTPUT_DIR = '.\/'","add23a96":"train = pd.read_csv('..\/input\/shigglecup-2nd\/train.csv')\nprint(train.shape)\ntrain.head()","b94a846e":"team_df = pd.read_csv('..\/input\/shigglecup-2nd\/team_id.csv')\nprint(team_df.shape)\nteam_df.head()","e05e58a6":"poke_df = pd.read_csv('..\/input\/shigglecup-2nd\/pokemon.csv')\nprint(poke_df.shape)\npoke_df.head()","ce4de6a3":"type_df = pd.read_csv('..\/input\/shigglecup-2nd\/typetable.csv')\nprint(type_df.shape)\ntype_df.head()","2e1a582c":"test = pd.read_csv('..\/input\/shigglecup-2nd\/test.csv')\nprint(test.shape)\ntest.head()","26216bc9":"pokemon_japanese = pd.read_csv('..\/input\/pokemon-japanese\/pokemon_japanese.csv')\npokemon_japanese = pokemon_japanese.iloc[:,:3]\nprint(pokemon_japanese.shape)\npokemon_japanese.head()","bf317046":"train['flag'] = 1\ntest['flag'] = 0\nwhole_df = pd.concat([train, test], axis=0).reset_index(drop=True)\nwhole_df.head()","050549eb":"import plotly.express as px\nfig = px.scatter(whole_df, x='first', y='second', color=\"flag\")\nfig.show()","363e693e":"import plotly.express as px\nfig = px.scatter(whole_df[whole_df['flag']==1], x='first', y='second', color=\"target\")\nfig.show()","3a8d35e3":"# \u8ca0\u3051\u6570\u304c\u5c11\u306a\u3044\u30c1\u30fc\u30e0\u3092\u53d6\u5f97\ndisplay(whole_df[whole_df['flag']==1].groupby('first')['target'].sum().sort_values().head(10))\ntop10_team_id = whole_df[whole_df['flag']==1].groupby('first')['target'].sum().sort_values().head(10).index","e443c200":"poke_df['clean_Name'] = poke_df['Name'].str.replace('Mega ', '').str.replace(' X', '').str.replace(' Y', '')","c8f7952a":"poke_jp_df = pd.merge(poke_df, pokemon_japanese[['\u82f1\u8a9e','\u65e5\u672c\u8a9e']], left_on='clean_Name', right_on='\u82f1\u8a9e', how='left')\npoke_jp_df = poke_jp_df.drop(columns='\u82f1\u8a9e')\npoke_jp_df['\u65e5\u672c\u8a9e'] = np.where(poke_jp_df['Name'].str.contains('Mega '), '\u30e1\u30ac' + poke_jp_df['\u65e5\u672c\u8a9e'], poke_jp_df['\u65e5\u672c\u8a9e'])\npoke_jp_df['\u65e5\u672c\u8a9e'] = np.where(poke_jp_df['Name'].str.contains(' X'), poke_jp_df['\u65e5\u672c\u8a9e'] + 'X', poke_jp_df['\u65e5\u672c\u8a9e'])\npoke_jp_df['\u65e5\u672c\u8a9e'] = np.where(poke_jp_df['Name'].str.contains(' Y'), poke_jp_df['\u65e5\u672c\u8a9e'] + 'Y', poke_jp_df['\u65e5\u672c\u8a9e'])\npoke_jp_df.head()","7a108b74":"print(team_df.shape)\nfor i in range(6):\n    team_df = pd.merge(team_df, poke_jp_df.add_suffix(f'_{i+1}'), on=f'pokemon_id_{i+1}', how='left')\n    print(team_df.shape)","8aa9791a":"# \u8ca0\u3051\u6570\u304c\u5c11\u306a\u3044\u30c1\u30fc\u30e0\u69cb\u6210\u306f\uff1f\nteam_df[team_df['team_id'].isin(top10_team_id)][['team_id','Name_1', '\u65e5\u672c\u8a9e_1', 'Name_2', '\u65e5\u672c\u8a9e_2', 'Name_3','\u65e5\u672c\u8a9e_3',\n                                                 'Name_4', '\u65e5\u672c\u8a9e_4', 'Name_5','\u65e5\u672c\u8a9e_5', 'Name_6','\u65e5\u672c\u8a9e_6']]","7c5df44f":"team_df['win']=0\nteam_df['lose']=0\nfor i in team_df['team_id'].unique():\n    wins = len(train[(train['first']==i)&(train['target']==0)]) + len(train[(train['second']==i)&(train['target']==1)])\n    loses = len(train[(train['first']==i)&(train['target']==1)]) + len(train[(train['second']==i)&(train['target']==0)])\n    team_df.loc[team_df['team_id']==i, 'win'] = wins\n    team_df.loc[team_df['team_id']==i, 'lose'] = loses \nteam_df['win_rate'] = team_df['win'] \/ (team_df['win'] + team_df['lose'])","904fb190":"team_df","25187ac7":"# \u52dd\u7387\u306e\u9ad8\u3044\u9806\nteam_df.sort_values('win_rate', ascending=False)[['team_id', '\u65e5\u672c\u8a9e_1', '\u65e5\u672c\u8a9e_2', '\u65e5\u672c\u8a9e_3', \n                                                  '\u65e5\u672c\u8a9e_4', '\u65e5\u672c\u8a9e_5', '\u65e5\u672c\u8a9e_6', 'win_rate']]","98228d69":"vs_df = pd.DataFrame(np.zeros((100,100)), columns=list(range(1,101)), index=list(range(1,101)))\nvs_win_df = pd.DataFrame(np.zeros((100,100)), columns=list(range(1,101)), index=list(range(1,101)))\nfor i,r in train.iterrows():\n    vs_df.loc[r['first'], r['second']] += 1\n    vs_df.loc[r['second'], r['first']] += 1\n    if r['target']==0:\n        vs_win_df.loc[r['first'], r['second']] += 1\n    elif r['target']==1:\n        vs_win_df.loc[r['second'], r['first']] += 1\nvs_rate_df = vs_win_df \/ vs_df","4cb49844":"# \u52dd\u7387\u306e\u53ef\u8996\u5316\ncm = sns.light_palette(\"green\", as_cmap=True)\nvs_rate_df.style.background_gradient(cmap=cm)","54f81bf5":"# \u5bfe\u6226\u304c2\u56de\u4ee5\u4e0a\u3042\u308b\u30c7\u30fc\u30bf\u306e\u52dd\u7387\u306e\u53ef\u8996\u5316\ncm = sns.light_palette(\"green\", as_cmap=True)\nvs_rate_df[vs_df>=2].style.background_gradient(cmap=cm)","46af298b":"# \u30c6\u30b9\u30c8\u306e\u5bfe\u6226\u8868\u306e\u4f5c\u6210\nvs_test_df = pd.DataFrame(np.zeros((100,100)), columns=list(range(1,101)), index=list(range(1,101)))\nfor i,r in test.iterrows():\n    vs_test_df.loc[r['first'], r['second']] += 1\n    vs_test_df.loc[r['second'], r['first']] += 1","2d925707":"# \u5bfe\u6226\u304c2\u56de\u4ee5\u4e0a\u3042\u3063\u3066\u3001\u30c6\u30b9\u30c8\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3082\u306e\u2192\u306a\u3057\ncm = sns.light_palette(\"green\", as_cmap=True)\nvs_rate_df[(vs_test_df>=1)&(vs_df>=2)].style.background_gradient(cmap=cm)","4b965e0c":"# \u5bfe\u6226\u304c1\u56de\u3042\u3063\u3066\u3001\u30c6\u30b9\u30c8\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3082\u306e\ncm = sns.light_palette(\"green\", as_cmap=True)\nvs_rate_df[(vs_test_df>=1)&(vs_df>=1)].style.background_gradient(cmap=cm)","7ea66301":"# \u5bfe\u6226\u30ab\u30fc\u30c9\u4e00\u89a7","69825b23":"# \u5bfe\u6226\u8868\u306e\u4f5c\u6210","b44d0e81":"# \u30c1\u30fc\u30e0\u5225\u306e\u52dd\u7387\u306e\u7b97\u51fa","e678967a":"### \u2191 team_id = 1,22,25,31,43,48,77,84,89\u3042\u305f\u308a\u304c\u5f37\u305d\u3046","1c64e436":"### \u2191 \u6700\u7d42\u9032\u5316\u3092\u4f7f\u3063\u3066\u306a\u3044\u30c1\u30fc\u30e0\u3082\u5f37\u304b\u3063\u305f\u308a\u3059\u308b\u6a21\u69d8","e693acab":"# Data Loading","0f289ddc":"# \u65e5\u672c\u8a9e\u540d\u306b\u5909\u63db","3276073a":"### \u2191 first = 4,7,12,17,26,30,34,49,55,67,71,73,81,93,95,98\u306f\u5168\u3066test\u306b\u306a\u3063\u3066\u3044\u308b"}}