{"cell_type":{"642cf603":"code","245041a4":"code","740264c6":"code","30a54450":"code","a41d223e":"code","f0135de0":"code","d24216ec":"code","b611dd26":"code","328bc06f":"markdown","428e279d":"markdown","cd24bdcc":"markdown"},"source":{"642cf603":"import numpy as np \nimport pandas as pd \nimport os\nfrom lightgbm import LGBMRegressor\nimport matplotlib.pyplot\nfrom sklearn.model_selection import TimeSeriesSplit","245041a4":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","740264c6":"\ntrain = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntrain[['pred_carbon_monoxide','pred_benzen','pred_nitrogen_oxides']] =0,0,0\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\nss= pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","30a54450":"test.head()","a41d223e":"#Plot sensors 2-4 for first 5 days\n#reference: https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.plot.html\ntest.iloc[:5*24,:].plot(y=['sensor_2', 'sensor_3', 'sensor_2'], \n                        title = 'Daily Sensor data', xlabel='Days', ylabel='Readings')","f0135de0":"\n#Plot Mean of all Sensors\n#reference: https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.plot.html\ntest.mean().plot(y=['sensor_2', 'sensor_3', 'sensor_2'], \n                        title = 'Mean Values', kind = 'bar')","d24216ec":"\ni=0;j=72;k=5\ntrain[[f'sensor_{i}' for i in range(1,4)]].iloc[((24)*i + j):(24*(i+k) + j)].plot()","b611dd26":"\ndef SCORE_FUNCTION(preds, truth):\n    return np.mean(np.square(np.log1p(preds) - np.log1p(truth)))\n\n#5x Crossval\nmodel = LGBMRegressor()\ntss = TimeSeriesSplit()\nFEATURES = ['deg_C','relative_humidity','absolute_humidity','sensor_1','sensor_2','sensor_3','sensor_4','sensor_5']\n\nscores = []\nfor train_idx, test_idx in tss.split(train):\n    score = []\n    for TARGET in ['target_carbon_monoxide','target_benzene','target_nitrogen_oxides']:\n        predictor = '_'.join(['pred'] + TARGET.split('_')[1:])\n        \n        model.fit(train[FEATURES].iloc[train_idx], train[[TARGET]].iloc[train_idx])\n        preds = np.clip(model.predict(train[FEATURES].iloc[test_idx]), a_min=0., a_max=1e100)\n        score.append(SCORE_FUNCTION(preds, train[TARGET].iloc[test_idx].values))\n     \n    score.append(np.mean(score))\n    scores.append(pd.DataFrame(score).T)\n    print(f'{score[0] :.4f}, {score[1] :.4f}, {score[2] :.4f}, {score[3] :.4f}')\n    \n\n#Predictions\nfor TARGET in ['target_carbon_monoxide','target_benzene','target_nitrogen_oxides']:\n    model.fit(train[FEATURES], train[[TARGET]])\n    ss[TARGET] = np.clip(model.predict(test[FEATURES]), 0., 1e10)\n\n\nss.to_csv('submission.csv', index=False)","328bc06f":"# Importing Modules","428e279d":"# Creating a Data Frame","cd24bdcc":"# Loading Data"}}