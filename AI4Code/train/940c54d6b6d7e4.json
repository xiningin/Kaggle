{"cell_type":{"0c0ec9e2":"code","e9de9e7c":"code","4b8e94f6":"code","ca610444":"code","49dad94d":"code","d950eb0a":"code","31ce2cd4":"code","b32c0e2a":"code","76d4ded7":"code","868e9e56":"code","1edb4fc2":"code","8d946553":"code","f6e65e5a":"markdown","98827836":"markdown","a71b2ad7":"markdown","35e47e03":"markdown","3a363c49":"markdown","c6d759a2":"markdown","8d0d5b08":"markdown"},"source":{"0c0ec9e2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9de9e7c":"import pathlib\n\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.ensemble import RandomForestClassifier","4b8e94f6":"# set a path variable to easily access files without mentioning the entire\n# path again and again\npath = pathlib.Path(\"\/kaggle\/input\/titanic\")","ca610444":"train = pd.read_csv(path\/'train.csv')\n\ntrain.head()","49dad94d":"test = pd.read_csv(path\/'test.csv')\n\ntest.head()","d950eb0a":"women = train.loc[train.Sex=='female']['Survived']\nfraction_women = women.sum()\/len(women)\n\nprint(f\"Fraction women suvived: {fraction_women}\")","31ce2cd4":"men = train.loc[train.Sex=='male']['Survived']\nfraction_men = men.sum()\/len(men)\n\nprint(f\"Fraction women suvived: {fraction_men}\")","b32c0e2a":"# features to use for training\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\n\n# selecting the above features from the entire dataset\nselected_train = train[features]\nselected_test = test[features]\n\n# getting the target\/labels\ny = train['Survived']","76d4ded7":"# Encode categorical columns\nX = pd.get_dummies(selected_train)\nX_test = pd.get_dummies(selected_test)\n\nX.head(10)","868e9e56":"?RandomForestClassifier","1edb4fc2":"# Build model\nmodel = RandomForestClassifier(n_estimators=100,\n                               max_depth=5,\n                               random_state=42)\n\n# model training\nmodel.fit(X, y)\n\n# generate predictions\npredictions = model.predict(X_test)","8d946553":"# create submission dataframe\noutput = pd.DataFrame({\n    'PassengerId': test.PassengerId,\n    'Survived': predictions\n})\n\n# create submission csv\noutput.to_csv('submission.csv', index=False)\n\noutput.head()","f6e65e5a":"### Import Dataset","98827836":"For the sake of simplicity lets just do as told in the accompaning notebook and just consider four features namely, \"Pclass\", \"Sex\", \"SibSp\", \"Parch\" and quickly get a model up and running.","a71b2ad7":"This is a basic notebook following the guidelines for the 1st day of Kaggle's 30 Days of ML.","35e47e03":"### Create submission","3a363c49":"### Import libraries","c6d759a2":"### Building Model","8d0d5b08":"Before we proceed further, lets encode the categorical features, i.e - **pclass, embarked**."}}