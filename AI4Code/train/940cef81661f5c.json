{"cell_type":{"15178014":"code","b74330c2":"code","043a683c":"code","053b18df":"code","66891281":"code","2907c370":"code","9b545c91":"code","b603d2bc":"code","8729200f":"code","7d60fbda":"code","d807fc38":"code","17715df3":"code","6cf23b73":"code","693dbdf0":"code","7265b365":"code","d9860f63":"code","ecb223ba":"code","972c4c9f":"code","69dfea04":"code","bf9dc5b2":"code","ef7aec22":"code","4af0fe38":"code","30459b83":"code","c8d16e95":"code","02a9dc8e":"code","3c0d9c04":"code","c3c662fb":"code","cfb59755":"markdown","6806de66":"markdown","b4ee0c0c":"markdown","e5142c2c":"markdown","e88411a2":"markdown","0e097fec":"markdown","2ea03288":"markdown","7961528b":"markdown","731f79d9":"markdown","7763f90c":"markdown","9a442627":"markdown","5ecfbfcc":"markdown","99ee2537":"markdown","a2e9df98":"markdown","864bfcc2":"markdown","960df352":"markdown","ba3ce69a":"markdown","f4f228b6":"markdown","36ccc6ba":"markdown","f2326380":"markdown","9e69c6ce":"markdown","2d56ec8c":"markdown","51cc0880":"markdown","05b964a6":"markdown","1fbb10e0":"markdown","06d75bfe":"markdown","3499292e":"markdown"},"source":{"15178014":"import pandas as pd","b74330c2":"pd.set_option('display.max_columns', None)\n\ndf = pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndf.head()","043a683c":"rows = df.shape[0]\ncols = df.shape[1]\n\nprint(\"There are \" + str(rows) + \" rows and \" + str(cols) + \" columns in this dataframe.\")","053b18df":"dupRows = df.duplicated().sum()\nprint(\"There are \" + str(dupRows) + \" duplicated rows in the dataframe. They will be removed.\")","66891281":"df = df.drop_duplicates(keep = \"first\")\ndupRows = df.duplicated().sum()\nprint(\"After removing, there are \" + str(dupRows) + \" duplicated rows left.\")","2907c370":"df.isnull().sum()","9b545c91":"df.info()","b603d2bc":"df.describe()","8729200f":"pip install pandas-profiling[notebook]","7d60fbda":"import pandas_profiling\nfrom pandas_profiling import ProfileReport\n\nprofile = ProfileReport(df, title = \"Pandas Profiling Report\", explorative = True)\n\nprofile.to_widgets()","d807fc38":"import numpy as np\nimport matplotlib.pyplot as plt","17715df3":"for column in df:\n    fig1, axes = plt.subplots(figsize = (10, 8))\n    axes.set_title(str(column))\n    axes.boxplot(df[column]);","6cf23b73":"df.corr()[\"quality\"]","693dbdf0":"import seaborn as sns\n\nplt.figure(figsize = (16, 12))\nplt.title(\"Heatmap showing the inter-column correlations\", fontsize = 20)\nsns.heatmap(df.corr(), annot = True, cmap = \"mako\")","7265b365":"sns.set_style(\"whitegrid\")\nplt.figure(figsize = (16, 12))\nplt.title(\"Number of occurences of quality labels\", fontsize = 20)\nsns.countplot(x = \"quality\", data = df, palette = \"husl\");","d9860f63":"df[\"quality\"] = np.where(df[\"quality\"] > 6, 1, 0)\ndf[\"quality\"].value_counts()","ecb223ba":"X = df.drop([\"quality\"], axis = 1)\ny = df[\"quality\"]\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 42, test_size = 0.25)","972c4c9f":"X.shape","69dfea04":"y.shape","bf9dc5b2":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nscaler.fit(X_train)\n\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","ef7aec22":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(multi_class = \"ovr\")\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","4af0fe38":"from sklearn.multiclass import OneVsOneClassifier\n\nmodel = OneVsOneClassifier(LogisticRegression())\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","30459b83":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression(multi_class = \"multinomial\", solver = \"newton-cg\")\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","c8d16e95":"from sklearn.tree import DecisionTreeClassifier\n\nmodel = DecisionTreeClassifier(criterion = \"entropy\")\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","02a9dc8e":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(criterion = \"entropy\")\nmodel.fit(X_train, y_train)\n\nmodel.score(X_test, y_test)","3c0d9c04":"from sklearn.neighbors import KNeighborsClassifier\n\nmodel = KNeighborsClassifier()\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","c3c662fb":"from sklearn.svm import SVC\n\nmodel = SVC(kernel = \"rbf\", gamma = 1, C = 0.5)\nmodel.fit(X_train, y_train)\n\nprint(model.score(X_test, y_test))","cfb59755":"#### What data types do the columns have?","6806de66":"#### **Loading and Displaying data**","b4ee0c0c":"#### Visualizing the correlations between columns in a Heatmap","e5142c2c":"#### Pre-Processing and Cleaning data","e88411a2":"#### Removing duplicated dataframe rows","0e097fec":"#### How much do the different columns correlate with the column \"quality\"?","2ea03288":"### **Random Forest**","7961528b":"### **KNN**","731f79d9":"#### **Statistics & Analysis**","7763f90c":"#### Are there duplicate rows in the dataframe?","9a442627":"#### Statistics for each column","5ecfbfcc":"### **SVM**","99ee2537":"#### Showing raw data","a2e9df98":"#### Boxplots for columns","864bfcc2":"## **Machine Learning**","960df352":"# **EDA & Machine Learning Techniques**","ba3ce69a":"We can see that the columns \"alcohol\", \"sulphates\" and \"citric acid\" tend to influence the quality stronger than other columns.","f4f228b6":"#### Defining X and y and Splitting data","36ccc6ba":"#### Are there null values in the dataframe?","f2326380":"### **Logistic Regression: One-vs-One**","9e69c6ce":"### **Multinomial Logistic Regression**","2d56ec8c":"#### How many rows and columns are there?","51cc0880":"#### Scaling data","05b964a6":"### **Logistic Regression: One-vs-All**","1fbb10e0":"## **EDA**","06d75bfe":"### **Decision Tree**","3499292e":"#### How many wines of what quality do we have?"}}