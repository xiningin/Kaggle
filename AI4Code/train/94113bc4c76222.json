{"cell_type":{"7240079c":"code","4617fb06":"code","e2526fb1":"code","a573f884":"code","b4736cf5":"code","ababad48":"code","409f676f":"code","e0067dc3":"code","cca8ed07":"code","6c86dc70":"code","7fa2456f":"code","4f606f6e":"code","f22ff520":"code","118215a6":"code","27fb1e5d":"code","2dc7716a":"code","368ddf46":"code","678fe529":"code","ed01aa90":"code","08f2d217":"code","22488a6c":"code","83b24a9b":"code","c20a88d6":"code","23405836":"code","393ae0a4":"code","1e66d8cc":"code","8bb99da9":"code","288634ef":"code","3c0e9136":"code","5dad69f0":"code","c83be3e5":"code","eda62bea":"code","922bda3d":"code","7efbc732":"code","ae3fde11":"code","07fdb12a":"markdown","caff0e11":"markdown","5949031e":"markdown","ceb4bfc4":"markdown"},"source":{"7240079c":"import numpy as np\nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport geopandas as gpd\nimport plotly.express as px","4617fb06":"data = pd.read_csv('..\/input\/covid19s-impact-on-airport-traffic\/covid_impact_on_airport_traffic.csv')\ndata.head()","e2526fb1":"data.info()","a573f884":"data.Country.unique()","b4736cf5":"data.ISO_3166_2.unique()","ababad48":"data = data.sort_values(by=\"Date\")","409f676f":"print(data.Date.dtype)","e0067dc3":"data['date_parsed'] = pd.to_datetime(data['Date'], format=\"%Y-%m-%d\")","cca8ed07":"data['date_parsed'].dt.year.nunique()\n# All recorded dates are in 2020 ","6c86dc70":"group_airport = data.groupby('AirportName')\ngroup_country = data.groupby('Country')","7fa2456f":"country = data.Country.unique()\nap_number = {c : group_country.get_group(c)['AirportName'].nunique() for c in country}\nprint(ap_number)\n# Chile and Australia only has 1 airport included","4f606f6e":"# No duplication of date in each airport\nairport = data.AirportName.unique()\nfor port in airport:\n    date_uniq = group_airport.get_group(port)['Date'].is_unique\n    if date_uniq == False:\n        print('Dates are not unique')\nprint('Dates are unique')","f22ff520":"# Sub table\nAus = group_country.get_group('Australia')\nChi = group_country.get_group('Chile')\nCan = group_country.get_group('Canada')\nUS = group_country.get_group('United States of America (the)')","118215a6":"Aus.head()","27fb1e5d":"plt.figure(figsize=(20,5))\ncount_ap = sns.countplot(x = 'AirportName', data = data)\ncount_ap.set_xticklabels(count_ap.get_xticklabels(), rotation=90)\ncount_ap.set_title(\"Count for various Airport\")\nplt.show()\n#All airports have more or less equal counts in the data","2dc7716a":"plt.figure(figsize=(20,5))\nbar_ap = sns.barplot(data =data, x='AirportName', y='PercentOfBaseline')\nbar_ap.set_xticklabels(bar_ap.get_xticklabels(), rotation=90)\nplt.show()\n# But the value of PercentOfBaseline is different ","368ddf46":"plt.figure(figsize=(20,5))\nsns.barplot(data =data, x='Country', y='PercentOfBaseline')\n#The percentage of Canada and the US is around 65-75%, while Chile and Australia is 35-40%","678fe529":"plt.figure(figsize=(10,5))\nsns.boxplot(data=data, x=\"Country\", y=\"PercentOfBaseline\")\n# The distribution","ed01aa90":"plt.figure(figsize=(10,5))\nsns.violinplot(data=data, x=\"Country\", y=\"PercentOfBaseline\")\n# The distribution","08f2d217":"plt.figure(figsize=(20,5))\nsns.lineplot(data=data, x=\"date_parsed\", y=\"PercentOfBaseline\", hue=\"Country\",ci = None )\nplt.show()","22488a6c":"plt.figure(figsize=(20,5))\nsns.lineplot(data=Aus, x=\"date_parsed\", y=\"PercentOfBaseline\")","83b24a9b":"plt.figure(figsize=(20,5))\nsns.lineplot(data=Can, x=\"date_parsed\", y=\"PercentOfBaseline\",ci = None )","c20a88d6":"plt.figure(figsize=(20,5))\nsns.lineplot(data=Chi, x=\"date_parsed\", y=\"PercentOfBaseline\")","23405836":"plt.figure(figsize=(20,5))\nsns.lineplot(data=US, x=\"date_parsed\", y=\"PercentOfBaseline\",ci = None )","393ae0a4":"US_airport = US.groupby('AirportName')[\"PercentOfBaseline\"].mean().sort_values(ascending = False).reset_index()\nUS_state = US.groupby('State')[\"PercentOfBaseline\"].mean().sort_values(ascending = False).reset_index()","1e66d8cc":"US_state_airport = pd.DataFrame(US.groupby('State')[\"AirportName\"].nunique().sort_values(ascending = False).reset_index())\nUS_state_airport","8bb99da9":"US.loc[US.State == 'New York'].AirportName.unique()","288634ef":"US.loc[US.State == 'California'].AirportName.unique()","3c0e9136":"US.head()","5dad69f0":"plt.figure(figsize=(28,5))\nbar_us_ap = sns.barplot(data=US_airport, y=\"PercentOfBaseline\",x=\"AirportName\")\nbar_us_ap.set_xticklabels(bar_us_ap.get_xticklabels(), rotation=90)\nplt.show()","c83be3e5":"plt.figure(figsize=(28,5))\nvio_us_ap = sns.violinplot(data=US, y=\"PercentOfBaseline\",x=\"AirportName\", order=US_airport['AirportName'] )\nvio_us_ap.set_xticklabels(vio_us_ap.get_xticklabels(), rotation=90)\nplt.show()","eda62bea":"plt.figure(figsize=(28,5))\nsns.barplot(data=US_state, y=\"PercentOfBaseline\",x=\"State\")\nplt.show()","922bda3d":"plt.figure(figsize=(28,5))\nsns.violinplot(data=US, y=\"PercentOfBaseline\",x=\"State\", order=US_state['State'])\nplt.show()","7efbc732":"data[\"lon\"] = data.Centroid.apply(lambda x: x.split(\" \")[0].replace(\"POINT(\",\" \"))\ndata[\"lat\"] = data.Centroid.apply(lambda x: x.split(\" \")[1].replace(\")\",\" \"))","ae3fde11":"# Map\ndf1 = data.groupby([\"Country\",\"City\",'lat','lon'])['PercentOfBaseline'].mean().sort_values(ascending = False).reset_index()\nfig = px.scatter_geo(df1,\n                     lat='lat',\n                     lon='lon',\n                     hover_name=\"Country\",\n                     color = 'Country',\n                     hover_data = ['PercentOfBaseline',\"City\"],\n                     labels = {\"PercentOfBaseline\":\"Percent of Baseline\"}\n                     \n                    )\n\nfig.update_geos(showocean = True,\n                oceancolor = 'LightCyan',\n                lakecolor = 'LightSteelBlue',\n                showlakes = True,\n               \n               )\nfig.show()","07fdb12a":"# Data Transformation\n* Date Parsing\n* Group by Airport\n* Group by Country","caff0e11":"# US\n* Columns:'AggregationMethod', 'Date', 'Version', 'AirportName','PercentOfBaseline', 'Centroid', 'City', 'State', 'ISO_3166_2','Country', 'Geography'","5949031e":"# Compairing Four Countries","ceb4bfc4":"# Map"}}