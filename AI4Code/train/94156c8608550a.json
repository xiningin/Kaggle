{"cell_type":{"a8646282":"code","421da3ce":"code","a520e12c":"code","ec492ecf":"code","50b3a084":"code","c50ed629":"code","bdc5fbe4":"code","5a150988":"code","025d1803":"code","93068ccb":"code","656ed7fd":"code","7c269b9a":"code","f0f61063":"code","c90841f3":"code","025c3762":"markdown","1906fc4e":"markdown","ed565886":"markdown","ec200670":"markdown","4b68da9a":"markdown","91a0cfef":"markdown","45c6dbb7":"markdown","cdee7a76":"markdown"},"source":{"a8646282":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","421da3ce":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","a520e12c":"train = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/test.csv')\nss = pd.read_csv('\/kaggle\/input\/tabular-playground-series-jul-2021\/sample_submission.csv')","ec492ecf":"print(f'Shape of Train dataset is : {train.shape}')\nprint(f'Shape of Test dataset is : {test.shape}')\nprint(f'Shape of Sample Submission dataset is : {ss.shape}')","50b3a084":"def check_NAN_columns(df, df_name):\n    if len(df.columns[df.isnull().any()]) == 0:\n        print(f'No missing data in {df_name} dataset')\n    else:\n        print(f'The following columns are having missing data in {df_name} dataset:')\n        print(df.columns[df.isnull().any()])","c50ed629":"datasets = {\n    'Train': train,\n    'Test': test,\n    'Sample Submission': ss,\n}\nfor df_name, df in datasets.items():\n    check_NAN_columns(df, df_name)","bdc5fbe4":"train.describe().T.style.background_gradient(subset = ['count'], cmap = 'viridis') \\\n    .bar(subset = ['mean', '50%'], color = '#1E90FF') \\\n    .bar(subset = ['std'], color = '#DC143C')","5a150988":"test.describe().T.style.background_gradient(subset = ['count'], cmap = 'viridis') \\\n    .bar(subset = ['mean', '50%'], color = '#1E90FF') \\\n    .bar(subset = ['std'], color = '#DC143C')","025d1803":"corr = train.corr()\nmask = np.triu(np.ones_like(corr, dtype = bool))\n\nplt.figure(figsize = (12, 10))\nplt.title('Corelation matrix')\nsns.heatmap(corr, mask = mask, cmap = 'rocket_r', linewidths = .5)\nplt.show()","93068ccb":"targets = ['target_carbon_monoxide','target_benzene','target_nitrogen_oxides']","656ed7fd":"fig, ax = plt.subplots(1,3,figsize=(18, 6))\nfig.suptitle('Target Distributions', size ='xx-large')\n\nfor idx, col in enumerate(targets):\n    sns.kdeplot(train[col], ax=ax[idx], fill=True)\n    ax[idx].set_title(col)","7c269b9a":"X = train.drop(['date_time','target_carbon_monoxide', 'target_benzene', 'target_nitrogen_oxides'], axis=1)\ny = train[targets]\nX_test = test.drop(\"date_time\", axis=1)","f0f61063":"reg1 = LinearRegression().fit(X, y.iloc[:, 0])\nreg2 = LinearRegression().fit(X, y.iloc[:, 1])\nreg3 = LinearRegression().fit(X, y.iloc[:, 2])","c90841f3":"ss[targets[0]] = reg1.predict(X_test)\nss[targets[1]] = reg2.predict(X_test)\nss[targets[2]] = reg3.predict(X_test)\nss.to_csv(\"\/kaggle\/working\/sub_lr.csv\", index=False)","025c3762":"# \ud83c\udfafModel Creation","1906fc4e":"<br>\n<h1 style=\"color:pink; text-align:center; font-size:30px; font-family:Arial Black; border-radius:30px 30px; background-color:black; line-height: 50px; padding: 15px 15px 15px 2.5%;\">\ud83d\ude80Linear Regression\ud83d\ude80<\/h1>\n<br>","ed565886":"# \ud83d\udd0dBasic Data Checks","ec200670":"# \u2b06Kindly Upvote, if you like this notebook.\n# Thank you\ud83d\ude4f","4b68da9a":"# \ud83d\udcc1 Submission file","91a0cfef":"# \u2705 Importing Required Libraries","45c6dbb7":"<div class=\"alert alert-block alert-info\">\n\ud83d\udcccAll the targets are left skewed.    \n<\/div>","cdee7a76":"# \ud83d\udcd1Reading the Data"}}