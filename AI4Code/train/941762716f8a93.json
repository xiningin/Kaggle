{"cell_type":{"b98c25ea":"code","69f50757":"code","97d759ec":"code","08eab085":"code","0c2b2b06":"code","4724d62f":"code","1fec69bd":"code","3e18619c":"code","5ebda9c6":"code","eb948b58":"code","ed1d6307":"code","2a3d3167":"code","7093a458":"code","a12b9e32":"code","beac910d":"code","5a8fb669":"code","0a52c45f":"code","ecbfe960":"code","e21ffa70":"code","2ece93dc":"code","94c1b002":"code","c902cfdf":"code","04f82d04":"code","9fc55d7d":"code","15b6cb2f":"code","367474d7":"code","8581968b":"code","977d0b54":"code","cd7eb5eb":"code","1463ed2e":"code","a2a0040a":"code","028944ca":"code","921869c8":"code","b1aeb91e":"code","437ad5d2":"code","7788e72c":"code","4f74a8fe":"code","66f68c71":"markdown","764aae6b":"markdown","56f25a6d":"markdown","da444aaa":"markdown","e804c517":"markdown","36f2448e":"markdown","e7d7e436":"markdown","79ace2fa":"markdown","c9a7bdd1":"markdown","46b83921":"markdown","c4ce63d1":"markdown","cd3aed12":"markdown","8925acf3":"markdown","31bc79dc":"markdown","8b006c8d":"markdown","7488c433":"markdown","56dfb69e":"markdown","4d3d34e2":"markdown","7047607f":"markdown","46b4e50d":"markdown","1ae8f2ad":"markdown","9241d7f4":"markdown","f4c95a69":"markdown","69891bc9":"markdown","22a70c8c":"markdown","65a0823c":"markdown","f15ba666":"markdown","dfce54f8":"markdown","3b7e3096":"markdown","38fd49fa":"markdown","47630f5b":"markdown","22e340a9":"markdown"},"source":{"b98c25ea":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\n\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nfrom sklearn.metrics import roc_auc_score, roc_curve, recall_score, f1_score, precision_score\nfrom sklearn.naive_bayes import GaussianNB","69f50757":"startups = pd.read_csv(\"..\/input\/50_Startups.csv\")\ndf=startups.copy()","97d759ec":"df.head()","08eab085":"df.info()","0c2b2b06":"df.shape","4724d62f":"df.isna().sum()","1fec69bd":"df = df.rename(columns = {\"R&D Spend\":\"RdSpend\",\"Marketing Spend\":\"MarketingSpend\"})","3e18619c":"df.head()","5ebda9c6":"corr = df.corr()\ncorr","eb948b58":"sns.heatmap(corr,annot=True)","ed1d6307":"fig = px.scatter(df, x=\"RdSpend\", y=\"Profit\",color=\"RdSpend\")\n\nfig.update_layout(\n    title={\n        'text': \"RdSpend-Profit Scatter Plot\",\n        'y':0.95,\n        'x':0.5\n})\n\nfig.show()","2a3d3167":"fig = px.scatter(df, x=\"RdSpend\", y=\"Profit\", trendline=\"ols\",color=\"RdSpend\")\n\nfig.update_layout(\n    title={\n        'text': \"RdSpend-Profit Regression Plot\",\n        'y':0.95,\n        'x':0.5\n})\n\nfig.show()","7093a458":"df[df.Profit<=40000]","a12b9e32":"trace1 = go.Histogram(\n    x=df.Administration,\n    opacity=0.75,\n    name = \"Administration\",\n    marker=dict(color='rgba(255, 51, 0, 0.8)'))\n\ntrace2 = go.Histogram(\n    x=df.RdSpend,\n    opacity=0.75,\n    name = \"RdSpend\",\n    marker=dict(color='rgba(77, 77, 255, 0.8)'))\n\ntrace3 = go.Histogram(\n    x=df.MarketingSpend,\n    opacity=0.75,\n    name = \"MarketingSpend\",\n    marker=dict(color='rgba(0, 204, 0,0.8)'))\n\ntrace4 = go.Histogram(\n    x=df.Profit,\n    opacity=0.75,\n    name = \"Profit\",\n    marker=dict(color='rgba(0, 0, 102 0.8)'))\n\ndata = [trace1,trace2,trace3,trace4]\nlayout = go.Layout(barmode='group',\n                   title=' Say\u0131sal De\u011fi\u015fkenlerin Da\u011f\u0131l\u0131m\u0131',\n                   yaxis=dict( title='Count'),\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","beac910d":"df.describe().T","5a8fb669":"df.State.unique()","0a52c45f":"df[\"State\"] = pd.Categorical(df[\"State\"])\ndfDummies = pd.get_dummies(df[\"State\"],prefix=\"state\")\ndfDummies.head()","ecbfe960":"df = pd.concat([df, dfDummies],axis=1)\ndf.head()","e21ffa70":"df =df.drop(columns =\"state_New York\")\ndf.head()","2ece93dc":"df =df.drop(columns =\"State\")\ndf = df.rename(columns = {\"state_California\":\"StateC\",\"state_Florida\":\"StateF\"})\ndf.head()","94c1b002":"y = df['Profit']\nX = df.drop(['Profit'], axis=1)","c902cfdf":"X.head()","04f82d04":"y.head()","9fc55d7d":"X_train, X_test, y_train, y_test = train_test_split(X,\n                                                    y, \n                                                    test_size = 0.25, \n                                                    random_state = 42)","15b6cb2f":"X_train.info()","367474d7":"X_test.info()","8581968b":"y_train","977d0b54":"y_test","cd7eb5eb":"from sklearn.linear_model import LinearRegression\n\nlinear_regresyon = LinearRegression()","1463ed2e":"linear_regresyon.fit(X, y)","a2a0040a":"y_pred=linear_regresyon.predict(X)","028944ca":"df[\"y_pred\"]=y_pred\ndf.head()","921869c8":"df[\"predFark\"]=df[\"Profit\"]-df[\"y_pred\"]\ndf.head()","b1aeb91e":"from sklearn.metrics import mean_squared_error\n\nMSE = mean_squared_error(df[\"Profit\"], df[\"y_pred\"])\nMSE","437ad5d2":"from sklearn.metrics import mean_absolute_error\nMAE = mean_absolute_error(df[\"Profit\"], df[\"y_pred\"])\nMAE","7788e72c":"import math\n\nRMSE = math.sqrt(MSE)\nRMSE","4f74a8fe":"linear_regresyon.score(X,y)","66f68c71":"Modele daha \u00f6nce g\u00f6rmedi\u011fi ba\u011f\u0131ml\u0131 test de\u011fi\u015fkenini tahmin ettirelim. Bu tahmin de\u011ferlerimizi y_pred de\u011fi\u015fkenine atayal\u0131m.","764aae6b":"50 adet Startup'\u0131n ara\u015ft\u0131rma ve geli\u015ftirmeye y\u00f6nelik harcamas\u0131, y\u00f6netime y\u00f6nelik harcamas\u0131, pazarlama harcamas\u0131, kazand\u0131klar\u0131 kar miktar\u0131 ve kurulduklar\u0131 lokasyon bilgisi bulunmaktad\u0131r. Ama\u00e7 kar miktar\u0131n\u0131 tahmin etmektir. Bu bir say\u0131sal tahmin problemidir ve ba\u011f\u0131ml\u0131 de\u011fi\u015fkenimiz \"Profit\".","56f25a6d":"get_dummies yard\u0131m\u0131yla State'a dair kategorik \u00f6znitelik \u00e7\u0131kar\u0131mlar\u0131nda bulunal\u0131m. \u00c7\u00fcnk\u00fc State'lar\u0131n birbirine \u00fcst\u00fcnl\u00fc\u011f\u00fc yok, nominaller. Ordinal de\u011fil.","da444aaa":"Ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenleri kontrol edelim.","e804c517":"Veri setimizin isimlendirmelerini uygun hale getirelim.","36f2448e":"state \u00f6zniteliklerinin herhangi ikisine bakt\u0131\u011f\u0131m\u0131z zaman rahatl\u0131kla \u00fc\u00e7\u00fcnc\u00fc state \u00f6zniteli\u011finin ne oldu\u011funu anlayabilir.Makine \u00f6\u011frenmesi yapaca\u011f\u0131m\u0131z i\u00e7in herhangi bir state \u00f6zniteli\u011fini drop edelim.","e7d7e436":"R&D Spend ve Profit aras\u0131ndaki korelasyonu daha iyi g\u00f6rebilmek i\u00e7in scatterplot \u00e7izdirelim.","79ace2fa":"State \u00f6zniteli\u011fini silip dummy olarak yarat\u0131lan State'lardan da birisini hari\u00e7 tutarak veri \u00e7er\u00e7evemizi g\u00fcncelleyelim.","c9a7bdd1":"# Do\u011frusal Regresyon Egzersizleri","46b83921":"K\u00fct\u00fcphaneleri \u00e7ekirde\u011fe dahil edelim.","c4ce63d1":"Veri \u00e7er\u00e7evemizi ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenler olmak \u00fczere b\u00f6l\u00fctleyelim.","cd3aed12":"Tahminleri ve ger\u00e7ek de\u011ferleri bir veri \u00e7er\u00e7evesinde toplay\u0131p \u00fczerinde g\u00f6z gezdirelim.","8925acf3":"4 par\u00e7a de\u011fi\u015fkeni kontrol edelim.","31bc79dc":"Is\u0131 haritas\u0131n\u0131 inceledi\u011fimizde 'Profit'-'RdSpend' aras\u0131nda g\u00fc\u00e7l\u00fc ve pozitif bir ili\u015fki oldu\u011funu g\u00f6rebiliriz.","8b006c8d":"Seaborn ile korelasyon matrisinin \u0131s\u0131 haritas\u0131n\u0131 \u00e7izdirelim.","7488c433":"Modeli e\u011fitmek i\u00e7in ba\u011f\u0131ml\u0131 ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden olu\u015fturulan e\u011fitim verilerini verelim.","56dfb69e":"Tahminlerimizin ba\u015f\u0131r\u0131s\u0131n\u0131 daha iyi g\u00f6rebilmek i\u00e7in predFark de\u011fi\u015fkeni olu\u015fturup bu de\u011fi\u015fkene y_pred ve Profit fark\u0131n\u0131 atayal\u0131m","4d3d34e2":"LinearRegression'u \u00e7ekirde\u011fe dahil edip modeli in\u015fa edelim.","7047607f":"Eksik verileri kontrol edelim.","46b4e50d":"Modelimizin ba\u015far\u0131 oran\u0131n\u0131n %95 oldu\u011funu g\u00f6rebiliriz. Bu da ba\u015far\u0131l\u0131 bir regresyon olu\u015fturdu\u011fumuzu g\u00f6sterir.","1ae8f2ad":"Ka\u00e7 g\u00f6zlem ve \u00f6znitelikten olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","9241d7f4":"Modelin R Squared de\u011ferini e\u011fitim verileri \u00fczerinden yazd\u0131ral\u0131m.","f4c95a69":"Korelasyon matrisi \u00e7izdirelim.","69891bc9":"Bu ba\u011f\u0131ml\u0131 ve ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerden train ve test olmak \u00fczere 4 par\u00e7a olu\u015ftural\u0131m. Bunu yapmak i\u00e7in train_test_split kullanal\u0131m.","22a70c8c":"Veri \u00e7er\u00e7evesinin bilgilerini g\u00f6r\u00fcnt\u00fcleyelim.","65a0823c":"Veri \u00e7er\u00e7evesinin temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","f15ba666":"Hi\u00e7 eksik veri g\u00f6r\u00fcnmemektedir.","dfce54f8":"sklearn b\u00fcnyesinde bar\u0131nan metrics'i \u00e7ekirde\u011fe dahil edelim ve MAE, MSE, RMSE de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","3b7e3096":"Dizinde bulunan veri \u00e7er\u00e7evemizi startups de\u011fi\u015fkenine atayal\u0131m. Startups de\u011fi\u015fkenini df de\u011fi\u015fkenine kopyalayarak kullanmaya ba\u015flayal\u0131m.","38fd49fa":"\u0130lk 5 g\u00f6zlemini yazd\u0131ral\u0131m.","47630f5b":"Say\u0131sal de\u011fi\u015fkenlerin da\u011f\u0131l\u0131m\u0131n\u0131 g\u00f6rmek i\u00e7in df \u00fczerinden histogram \u00e7izdirelim.","22e340a9":"State'a ait benzersiz de\u011ferleri g\u00f6r\u00fcnt\u00fcleyelim."}}