{"cell_type":{"68a786ec":"code","e7156007":"code","937891be":"code","70c84230":"code","81a07bbe":"code","6702f600":"code","ed50ff6a":"code","8b511191":"code","c78b02d2":"code","e69dd711":"code","f096c40a":"code","7b0548e1":"code","e8ff839b":"code","74b257e4":"code","32c9559f":"code","e1815d24":"code","c1b203dd":"code","6b4830e6":"code","4a5a9cd8":"markdown","4d8da37c":"markdown","1033d00f":"markdown","59e6ac64":"markdown","32b04b76":"markdown","ee54f340":"markdown","33fb6dd1":"markdown","22b9a173":"markdown","258dd00c":"markdown"},"source":{"68a786ec":"!pip install quandl\nimport quandl","e7156007":"quandl.ApiConfig.api_key = \"#######\" # encryted my API key, sign up with Quandl","937891be":"data = quandl.get(\"EOD\/AAPL\") # \"EOD\/AAPL\"is the code for getting Apple Inc. data.","70c84230":"data['HL_PCT'] = (data['Adj_High']-data['Adj_Low'])\/data['Adj_Close']*100\ndata['PCT_CHANGE'] = (data['Adj_Close']-data['Adj_Open'])\/data['Adj_Open']*100","81a07bbe":"data","6702f600":"df = data.iloc[:,10:15] # we only take 5 columns, as newly created features, carries the information about the other columns.\ndf","ed50ff6a":"import math","8b511191":"df.fillna(value=-99999,inplace=True) # Filling Nan values with a hypothetical numeric value.\nforecast_col = 'Adj_Close'\nforecast_out = int(math.ceil(0.01 * len(df)))\ndf['label'] = df[forecast_col].shift(-forecast_out)","c78b02d2":"df.dropna(inplace=True)","e69dd711":"df.isnull().sum()  #Checking for NAN....","f096c40a":"df","7b0548e1":"X = df.iloc[:,:-1]\ny = df.label","e8ff839b":"from sklearn.preprocessing import scale\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import mean_squared_error, r2_score","74b257e4":"X_scaled =scale(X)","32c9559f":"pd.DataFrame(X_scaled)","e1815d24":"X_train,X_test,y_train,y_test = train_test_split(X_scaled,y) # Spltting the dataset into train and test.","c1b203dd":"model = LinearRegression()\nmodel.fit(X_train,y_train)\ny_predict = model.predict(X_test)","6b4830e6":"mean_squared_error(y_test,y_predict)","4a5a9cd8":"## Defining X and y:","4d8da37c":"## Installing the Quandly package:","1033d00f":"## Feature Generation:\n\n- Calculating High-Low percentage : High and Low of the stock price is taken to percentage.\n- Calculating Percentage Change : Change observed in day's Open and Close.","59e6ac64":"# Interesting task using Linear Regression:\n- The data is gathered from Quandl.\n- Quandl is a platform for financial and stocks related data.\n- This is just for learning purpose, can't be used for any finacial analysis.\n- Company we have taken is Apple Inc.\n- Feature generation is used to create features from existing features.\n- Metrics used to evaluate the model is : Mean Squared Error.","32b04b76":"## Adding a new column: 'labels'\n- Consists the forecasted value for 10 days.\n- We use the 'Shift' command to add forecasted stock value using the 'Adj_Close' feature.\n- We predict the stock price for an interval of 10 days.","ee54f340":"## Building the model:","33fb6dd1":"## Evaluation :","22b9a173":"- Encrypted the API key, each user gets a different API KEY after signing up with Quandl.","258dd00c":"## Feature Scaling using the Scale from Preprocessing:"}}