{"cell_type":{"15964732":"code","2c5f0dee":"code","819a802a":"code","b8363e7c":"code","10269d3b":"code","53650f8b":"code","1e8ff676":"code","904fc25a":"code","548fb2e2":"markdown","91e85672":"markdown","13732fad":"markdown","05af8c33":"markdown","da5fa59b":"markdown","c5d184ad":"markdown","d3637627":"markdown","357a4772":"markdown","8150173b":"markdown","88421dd5":"markdown","e7bc9711":"markdown","91135a67":"markdown","dd705e75":"markdown"},"source":{"15964732":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# The below two are visualization libraires\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# for calculating interval\nfrom time import time\n\nplt.rcParams['figure.figsize'] = 10,8 # setting default figure size for the kernel\n\n# for clustering image pixels\nfrom sklearn.cluster import KMeans \n# for simple image processing tasks\nfrom skimage import io","2c5f0dee":"url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTzLzdD4MoAPP3I_JjrxndAqKg1zXtEnaODwsHbH6il9BL3Qt61'\nimg_original = io.imread(url)\nplt.axis('off')\nplt.imshow(img_original)\nplt.title('Our buddy for the experiment !')\nplt.show()","819a802a":"# Unit normalizing \nimg = np.array(img_original,dtype=float) \/ 255\n\n# Save the dimensions, we will be need them later\nw, h, d = original_shape = img.shape\nprint('Original Shape'.center(20,'='))\nprint(img.shape)\n\n# image_array size - w*h , d\nimage_array = img.reshape(-1,d)\nprint('ReShaped'.center(20,'='))\nprint(image_array.shape)","b8363e7c":"n_colours = [64,32]\n\n# 64 colour image\nt0 = time()\nkmeans64 = KMeans(n_clusters = n_colours[0],random_state=42,verbose=2,n_jobs=-1).fit(image_array)\n\nprint(f'Completed 64 clusters in {round(time()-t0,2)} seconds.')\n\n# 32 colour image\nt0 = time()\nkmeans32 = KMeans(n_clusters = n_colours[1],random_state=42,verbose=2,n_jobs=-1)\nkmeans32.fit(image_array)\n\nprint(f'Completed 32 clusters in {round(time()-t0,2)} seconds.')\n\nlabels64 = kmeans64.labels_\nlabels32 = kmeans32.labels_","10269d3b":"print(f'Within cluster sum of square error for {n_colours[0]} clusters = {round(kmeans64.inertia_,2)}')\nprint(f'Within cluster sum of square error for {n_colours[1]} clusters = {round(kmeans32.inertia_,2)}')","53650f8b":"# checking the compressed values\ncompressed = pd.DataFrame(image_array,columns=['Red','Green','Blue'])\ncompressed['labels'] = kmeans64.labels_\ncompressed","1e8ff676":"# Recreate image\ndef recreate_image(centroids, labels, w, h):\n    # centroids variable are calculated from the flattened image\n    # centroids: w*h, d \n    # so each row depicts the values per depth\n    d = centroids.shape[1]\n    image = np.zeros((w, h, d))\n    label_idx = 0\n    for i in range(w):\n        for j in range(h):\n            # filling values in new image with centroid values\n            image[i][j] = centroids[labels[label_idx]]\n            label_idx += 1\n    return image","904fc25a":"plt.figure(figsize=(20,10))\nplt.subplot(132)\nplt.axis('off')\nplt.title('Original image')\nplt.imshow(img)\n\nplt.subplot(131)\nplt.axis('off')\nplt.title('Compressed image (64 colors, K-Means)')\nplt.imshow(recreate_image(kmeans64.cluster_centers_, labels64, w, h))\n\nplt.subplot(133)\nplt.axis('off')\nplt.title('Compressed image (32 colors, K-Means)')\nplt.imshow(recreate_image(kmeans32.cluster_centers_, labels32, w, h))\n\nplt.show()","548fb2e2":"This function will utilize the cluster center details to reconstruct a simplified version of the image.\n\nFunction logic:\n- Create a new image having similar shape of the original image\n- For each pixel value check the cluster label assigned\n- Based on the label, find the common color\/centroid value (eg: the value found in ```kmeans64.cluster_centroids_```)\n- In the new image, fill the corresponding pixel position with the new color value.","91e85672":"## Time for the results\n\n\ud83e\udd41 *drum roll please* \ud83e\udd41","13732fad":"## Sample check\nWhat labels has the 64 cluster model produced?","05af8c33":"## Import necessary packages\nWe will need these along the way, I have tried to explain the purpose of each libraries as comments.","da5fa59b":"## The real work begins\n\nNow, the clustering algorithm will find common cluster based on which we can reduce the colors in the image. Even before beginning we will have to specify the number of clusters (common color points) one would like to have in the final image. I have randomly chosen `64` and `32` as the number of clusters. Try out values like `128` and `16` to see more drastic change.\n\n**Note:** As the number of clusters increases, the image will be closer to the original image but at the cost of higher computational cost.","c5d184ad":"## To do\n- [X] Use custom images\n- [X] Add jobs for faster execution.\n- [ ] Compare performance with other clustering methods (hierarchical and density based)\n- [ ] % change of size per image\n\n*If you have been this far and enjoyed the kernel, let's give an upvote for this kernel.*","d3637627":"Within cluster sum of square error, it measures the variance of datapoints inside a cluster.\n\nUse this to know how well the clustering worked. The lower, the better.","357a4772":"## Helper function","8150173b":"<center><img src='http:\/\/i.stack.imgur.com\/UJl1A.jpg' width='600px'><\/center>","88421dd5":"You might not notice much difference at first but try to zoom the kernel and take a look at it again.","e7bc9711":"**Kernel Reference**: [Scikit-learn documentation](https:\/\/scikit-learn.org\/stable\/auto_examples\/cluster\/plot_color_quantization.html)","91135a67":"## Make sure the model understands you\n\nAs most of you know, computers unlike humans interpret images as numbers (to be more specific, numerical array). So we must take care (preprocess) the image prior to any analytical operation.\n\nBelow, we will be performing the following operations:\n- Normalization, color range is from 0 to 255 and dividing by max value will scale it down to 0 - 1 range.\n- Reshaping, the clustering algorithm is expecting a max of 2 dimension array so we will have to make necessary adjustments for it to work properly. ","dd705e75":"## Load a sample photo\n\nIf you want to try out your own image feel free to replace the URL with your favorite image. Here, we will be working with this sweet lil guy."}}