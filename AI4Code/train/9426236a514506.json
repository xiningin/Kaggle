{"cell_type":{"7827df89":"code","0d45dc4b":"code","e557908f":"code","d7b98d58":"code","75457ae2":"code","119a7e4b":"code","d80f11ab":"code","05be02a2":"code","d4ad19aa":"code","830f6546":"code","98dd6353":"code","57f87c3e":"code","feaa3a1c":"code","e319d7ff":"code","a426d42d":"code","4eee23be":"code","b8c639a8":"code","2f36bc9d":"markdown","00cae5b9":"markdown","629e6f45":"markdown","121cfabf":"markdown","fe669ec4":"markdown","2237eb09":"markdown","b0785f89":"markdown","70321a73":"markdown"},"source":{"7827df89":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n","0d45dc4b":"#READ THE DATASET\ndf=pd.read_csv(r\"..\/input\/titanic\/train.csv\")\ndf.head(10)","e557908f":"#DROPPING A FEW FEATURES TO MAKE IT EASIER TO ANALYZE THE DATA\n#AND DEMONSTRATE THE CAPABILITIES OF THE PIVOT_TABLE FUNCTION:\n\ndf.drop(['PassengerId','Ticket','Name'],inplace=True,axis=1)\ndf.head()","d7b98d58":"# A SINGLE INDEX(SEX)\n\ntable=pd.pivot_table(data=df,index=['Sex'])\nprint(table)","75457ae2":"#PLOTTING THE FINDINGS\n\ntable.plot(kind='bar');","119a7e4b":"# A SINGLE INDEX\n\ntable=pd.pivot_table(data=df,index=['Embarked'])\nprint(table)","d80f11ab":"# PLOTTING\n\ntable.plot(kind='bar');","05be02a2":"# WE CAN ALSO USE MORE THAN ONE INDEX TO GROUP OUR DATA\n# PIVOT WITH A MULTI-INDEX","d4ad19aa":"# MULTIPLE INDEXES\n\ntable=pd.pivot_table(df,index=['Sex','Pclass'])\nprint(table)","830f6546":"table.plot(kind='bar');\n","98dd6353":"#DIFFERENT AGGREGATE FUNCTIONS\n\ntable=pd.pivot_table(df,index=['Sex','Pclass'],values=['Survived'],aggfunc=np.mean)\nprint(table)","57f87c3e":"table.plot(kind='bar')","feaa3a1c":"#COLUMNS\n\ntable=pd.pivot_table(df,index=['Sex'],columns=['Pclass'],values=['Survived'],aggfunc=np.sum)\nprint(table)","e319d7ff":"table.plot(kind='bar')","a426d42d":"# DISPLAY NULL VALUES.\n\ntable=pd.pivot_table(df,index=['Sex','Survived','Pclass'],columns=['Embarked'],values=['Age'],aggfunc=np.mean)\nprint(table)","4eee23be":"# HANDLING NULL VALUES\n\ntable=pd.pivot_table(df,index=['Sex','Survived','Pclass'],columns=['Embarked'],values=['Age'],aggfunc=np.mean,fill_value=np.mean(df['Age']))\nprint(table)\n","b8c639a8":"table.plot(kind='bar');","2f36bc9d":"Time to build a pivot table in python using the awesome Pandas library! We will explore the different facets of a\npivot table in this article and build an awsome.\n\nHow to group data using index in a pivot table? pivot_table requires a data and index parameter dats is the pandas\ndataframe you pass to the function index is the feature that allows you to group your data. The index feature will appear as an index in the resultant table I will be using the 'sex' column as the index for now","00cae5b9":"#  FIND THE RELATIONSHIP BETWEEN FEATURES WITH COLUMNS  PARAMETER","629e6f45":"# DIFFERENT AGGREGATE FUNCTION FOR DIFFERENT FEATURES","121cfabf":" The values shown in the table are the result of the summarization that aggfun applies to the feature data aggfunc is \nan aggregate function that pivot_table applies to your grouped data.\n\nBy default it is np.mean(), but you can use different aggregate functions for different features too! Just provide a dictionary as an input to the aggfunc parameter with the feature name as the key and the corresponding aggregate function as the value.\n\nI will be using np.mean() for the Age feature and np.sum() for the Survived feature:","fe669ec4":"# HANDLING MISSING DATA","2237eb09":"Using multiple features as indexes is fine, but using some features as columns will help you to intuitively understand\nthe relationship between them Also the resultant table can always be better viewed by incorporating the columns parameter of the pivot_table.\n\n","b0785f89":"# BUILDING A PIVOT TABLE USING PANDAS","70321a73":"# IMPORTING PACKAGES"}}