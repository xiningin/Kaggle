{"cell_type":{"85483ae2":"code","925211b9":"code","402f64a8":"code","d0e4e0b2":"code","3eb73efd":"code","00326b86":"code","6a314bad":"code","9dab6fce":"code","2a1688ea":"code","72ae36b4":"code","7cb52756":"code","f166aba4":"code","a63d2f1d":"code","431ccf1d":"code","2dc439d8":"code","c711bf2e":"code","dd6006ef":"code","afc021e9":"code","16c9b011":"markdown","673eb6b0":"markdown","289a5dfe":"markdown","24e38833":"markdown"},"source":{"85483ae2":"#Importing the libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","925211b9":"#load the dataset\ncolumns = ['age', 'year', 'nodes', 'status']\ndf = pd.read_csv('..\/input\/habermans-survival-data-set\/haberman.csv',header=None, names=columns)\nprint(df.head())","402f64a8":"#Summary about the dataset\ndf.info()","d0e4e0b2":"#Replacing the status column with a meaningful data\ndf.loc[df.status == 1,'status'] = 'yes'\ndf.loc[df.status == 2,'status'] = 'no'\nprint(df.info)","3eb73efd":"#Getting statistics about dataset\ndf.describe()\n\n#Status count\nprint((df.iloc[:,-1].value_counts()))","00326b86":"#Probability density function is a function that gives the probability that a random variable has a value x.\nsns.FacetGrid(df, hue=\"status\",size=5) \\\n   .map(sns.distplot, \"age\") \\\n   .add_legend();\nplt.show();","6a314bad":"sns.FacetGrid(df, hue=\"status\",size=5) \\\n   .map(sns.distplot, \"year\") \\\n   .add_legend();\nplt.show();","9dab6fce":"sns.FacetGrid(df, hue=\"status\",size=5) \\\n   .map(sns.distplot, \"nodes\") \\\n   .add_legend();\nplt.show();","2a1688ea":"# The cumulative distribution function (cdf) is the probability that the variable takes a value less than or equal to x.\ncounts, bin_edges = np.histogram(df['nodes'], bins=10,density = True)\npdf = counts\/(sum(counts))\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.plot(bin_edges[1:],pdf)\nplt.show();","72ae36b4":"counts, bin_edges = np.histogram(df['age'], bins=10,density = True)\npdf = counts\/(sum(counts))\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.plot(bin_edges[1:],pdf)\nplt.show();","7cb52756":"counts, bin_edges = np.histogram(df['year'], bins=10,density = True)\npdf = counts\/(sum(counts))\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.plot(bin_edges[1:],pdf)\nplt.show();","f166aba4":"#Box Plots\nsns.boxplot(x='status',y='age', data=df)\nplt.show()","a63d2f1d":"#Box Plots\nsns.boxplot(x='status',y='nodes', data=df)\nplt.show()","431ccf1d":"#Box Plots\nsns.boxplot(x='status',y='year', data=df)\nplt.show()","2dc439d8":"#Violin Plot\nsns.violinplot(x=\"status\", y=\"age\", data=df, size=5)\nplt.show()","c711bf2e":"sns.violinplot(x=\"status\", y=\"nodes\", data=df, size=5)\nplt.show()","dd6006ef":"sns.violinplot(x=\"status\", y=\"year\", data=df, size=5)\nplt.show()","afc021e9":"#3-D Pair Plot\nsns.pairplot(df, hue=\"status\",size=4);\nplt.show()","16c9b011":"### Observation\n\n* Even though the max positive nodes are 52, we can observe that 75% of patients only have 5 positive nodes\n* Since there are 255 yes and 81 no, we can observe that the data is imbalanced","673eb6b0":"### Observation\n\n* Since there is no missing value there is no need for imputation\n* Status column is an integer value that needs to be converted into categorical value i.e \"Yes\" or \"No\".","289a5dfe":"# Analysis","24e38833":"## Observation\n\n* We can see that almost 80% of the patients have only 0-5 positive lymph nodes (PDF and CDF of Nodes).\n* Patients treated after 1966 have a slighter higher chance of surviving compared to the rest (Box Plot of Years).\n"}}