{"cell_type":{"fd83fcdc":"code","570d8f56":"code","08de0c3b":"code","3c462ec2":"code","b0e19276":"code","8eb6fc98":"code","16b277a7":"code","e1486fd0":"code","e0637148":"code","1ad37c60":"code","c6636af5":"code","43990349":"code","fd521304":"code","9afe001d":"code","5f20df24":"code","da9d6587":"code","a440eb67":"code","24ca0351":"code","cf88c54f":"code","e9ac5db3":"code","5ce7ded9":"code","cfc0dbe3":"code","77b43fa2":"code","0a0c047e":"code","d4d9fdd2":"code","12ce5a7d":"code","d9157c78":"code","a65a4f2c":"code","93b4ff60":"code","e57ef952":"code","37d7e18c":"code","78dd2c95":"code","d03a052d":"code","727eb59d":"code","a3144e33":"code","33ead312":"code","c33a7ecc":"code","cfa187b6":"code","999504ec":"code","3a05f33a":"code","723f66d6":"code","f3d7f974":"code","95025542":"code","2021dc76":"code","18366998":"markdown","8a977b5d":"markdown","7579a951":"markdown","8c69a34f":"markdown","18d0c81f":"markdown","e19e1c8f":"markdown","52f2eb0f":"markdown","181b94d8":"markdown","05f1a307":"markdown","e697a62d":"markdown","95f08507":"markdown","32edb871":"markdown","7ab25acf":"markdown","04302f4a":"markdown","6ad1238d":"markdown","735fe22d":"markdown","235f391c":"markdown","3ce8f5b0":"markdown","832b6e9f":"markdown","930c3528":"markdown","fa33475a":"markdown","2429f331":"markdown","79ce43a7":"markdown","2b7b1538":"markdown","3e17d323":"markdown","6a2814c5":"markdown","94cc84b0":"markdown","1a95da6e":"markdown","7539ecc3":"markdown","e1fc2a01":"markdown","57692513":"markdown","4c9e5d76":"markdown","1ce2869d":"markdown","d9f9d651":"markdown","b988ba87":"markdown","62181cdc":"markdown","1bf035a8":"markdown","66b801fe":"markdown","c32bb957":"markdown","0da7fece":"markdown","c22e0c53":"markdown","f2d4273d":"markdown","f08b6d17":"markdown","15a847f0":"markdown","318129a5":"markdown","6c2aadd4":"markdown"},"source":{"fd83fcdc":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn_pandas import DataFrameMapper\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score","570d8f56":"the_data = pd.read_csv(\"..\/input\/d\/imakash3011\/customer-personality-analysis\/marketing_campaign.csv\", delimiter='\\t')\nthe_data.head()","08de0c3b":"the_data.isna().sum()","3c462ec2":"income_median = the_data[\"Income\"].median()\nthe_data = the_data.replace(np.nan, income_median)","b0e19276":"the_data[\"Income\"].hist(bins=50)","8eb6fc98":"the_data[\"Income\"] = np.log(the_data[\"Income\"])\nthe_data[\"Income\"].hist(bins=50)","16b277a7":"the_data[\"Income\"].plot(kind=\"box\")","e1486fd0":"the_data.hist()","e0637148":"the_data.describe().loc[\"std\"]","1ad37c60":"the_data = the_data.drop([\"Z_CostContact\", \"Z_Revenue\"], axis=1)","c6636af5":"the_data[\"Year_Birth\"].plot(kind=\"box\")","43990349":"the_data = the_data[the_data[\"Year_Birth\"] > 1920]","fd521304":"the_data[\"Dt_Customer\"].head()","9afe001d":"the_data[\"Dt_Customer\"] = pd.to_datetime(the_data[\"Dt_Customer\"])","5f20df24":"the_data.select_dtypes(\"object\").value_counts()","da9d6587":"the_data[\"Marital_Status\"] = the_data[\"Marital_Status\"].replace([\"YOLO\", \"Alone\", \"Absurd\"], \"Single\")\nthe_data.select_dtypes(\"object\").value_counts()","a440eb67":"the_data[\"Marital_Status\"] = the_data[\"Marital_Status\"].replace([\"Divorced\", \"Widow\"], \"Single\")\nthe_data[\"Marital_Status\"] = the_data[\"Marital_Status\"].replace([\"Married\", \"Together\"], \"Couple\")","24ca0351":"the_data[\"Education\"] = the_data[\"Education\"].replace([\"Graduation\", \"PhD\", \"Master\"], \"Graduate\")\nthe_data[\"Education\"] = the_data[\"Education\"].replace([\"Basic\", \"2nd Cycle\", \"2n Cycle\"], \"non-Graduate\")","cf88c54f":"#Create a total spent variable\nthe_data[\"total_spent\"] = the_data[[\"MntWines\", \"MntFruits\", \"MntMeatProducts\", \"MntFishProducts\", \"MntSweetProducts\", \"MntGoldProds\"]].sum(axis=1)\nthe_data[\"months_enrolled\"] = (pd.to_datetime(\"01-01-2015\") - the_data[\"Dt_Customer\"])\/np.timedelta64(1, 'M')\n# now create a variable for the total number of kids at home\nthe_data[\"children\"] = the_data[\"Kidhome\"] + the_data[\"Teenhome\"]\n# now create a variable that records the percent of purchases made online\npurchases = the_data[[\"NumWebPurchases\", \"NumCatalogPurchases\", \"NumStorePurchases\"]].sum(axis=1)\nthe_data[\"technology\"] = the_data[\"NumWebPurchases\"] \/ purchases\n# the denominator might be zero in some cases leading to na values\nthe_data[\"technology\"].isna().sum()\n# we confirm that there are null values. Remove these records\nthe_data = the_data.dropna()","e9ac5db3":"the_data[\"total_spent\"].hist(bins=50)","5ce7ded9":"the_data[\"total_spent\"] = np.log(the_data[\"total_spent\"])","cfc0dbe3":"the_data.boxplot(column=\"Income\", by=\"Education\")","77b43fa2":"the_data.boxplot(column=\"total_spent\", by=\"Marital_Status\")","0a0c047e":"the_data.boxplot(column=\"total_spent\", by=\"children\")","d4d9fdd2":"the_data.plot(x=\"Income\", y=\"total_spent\", kind=\"scatter\")","12ce5a7d":"sns.regplot(x=\"Income\", y=\"total_spent\", data=the_data, lowess=True, ci=None)","d9157c78":"corr_matrix = the_data.corr()\ncorr_matrix[\"total_spent\"].sort_values(ascending=False).drop(\"total_spent\", axis=0).plot(kind=\"bar\")","a65a4f2c":"x = the_data[[\"Year_Birth\", \"Education\", \"Marital_Status\", \"Income\", \"children\", \"Recency\",\n              \"NumDealsPurchases\", \"technology\", \"Complain\", \"total_spent\", \"months_enrolled\"]]","93b4ff60":"mapper = DataFrameMapper([\n    ([\"Year_Birth\"], StandardScaler()),\n    ([\"Income\"], StandardScaler()),\n    ([\"children\"], StandardScaler()),\n    ([\"Recency\"], StandardScaler()),\n    ([\"NumDealsPurchases\"], StandardScaler()),\n    ([\"technology\"], StandardScaler()),\n    (\"Complain\", None),\n    ([\"total_spent\"], StandardScaler()),\n    ([\"months_enrolled\"], StandardScaler()),\n    (\"Education\", LabelBinarizer()),\n    (\"Marital_Status\", LabelBinarizer())\n], df_out=True)\n\nx_transformed = mapper.fit_transform(x)","e57ef952":"sse = []\nfor k in range(1, 11):\n    k_means = KMeans(n_clusters=k)\n    k_means.fit(x_transformed)\n    sse.append(k_means.inertia_)\nplt.plot(range(1, 11), sse, '-o')","37d7e18c":"silhouette_coefficients = []\nfor k in range(2, 11):\n    k_means = KMeans(n_clusters=k)\n    k_means.fit(x_transformed)\n    score = silhouette_score(x_transformed, k_means.labels_)\n    silhouette_coefficients.append(score)\nplt.plot(range(2, 11), silhouette_coefficients, '-o')","78dd2c95":"k_means = KMeans(n_clusters=3)\nk_means.fit(x_transformed)\nyhat = k_means.predict(x_transformed)\nthe_data[\"clusters\"] = yhat","d03a052d":"corr_matrix = the_data.corr()\ncorr_matrix[\"clusters\"].drop(\"clusters\", axis=0).sort_values(ascending=False).plot(kind=\"bar\")","727eb59d":"sns.displot(the_data, x=\"Income\", hue=\"clusters\", palette=\"viridis\")","a3144e33":"sns.displot(the_data, x=\"total_spent\", hue=\"clusters\", palette=\"viridis\")","33ead312":"colors = {0:'red', 1:'green', 2:'blue'}\nfig, ax = plt.subplots()\nfor key, group in the_data.groupby(\"clusters\"):\n    group.plot(x=\"Income\", y=\"total_spent\", kind=\"scatter\", ax=ax, label=key, color=colors[key], alpha=0.2)","c33a7ecc":"the_data[[\"technology\", \"clusters\"]].boxplot(column=\"technology\", by=\"clusters\")","cfa187b6":"clusters_marital = the_data[[\"clusters\", \"Marital_Status\"]].groupby([\"clusters\", \"Marital_Status\"]).size().reset_index(name=\"counts\")\nclusters_marital = clusters_marital.pivot(index=\"clusters\", columns=\"Marital_Status\", values=\"counts\")\nclusters_marital.plot(kind=\"bar\", stacked=True, rot=0)","999504ec":"clusters_education = the_data[[\"clusters\", \"Education\"]].groupby([\"clusters\", \"Education\"]).size().reset_index(name=\"counts\")\nclusters_education = clusters_education.pivot(index=\"clusters\", columns=\"Education\", values=\"counts\")\nclusters_education.plot(kind=\"bar\", stacked=True, rot=0)","3a05f33a":"clusters_children = the_data[[\"clusters\", \"children\"]].groupby([\"clusters\", \"children\"]).size().reset_index(name=\"counts\")\nclusters_children = clusters_children.pivot(index=\"clusters\", columns=\"children\", values=\"counts\")\nclusters_children.plot(kind=\"bar\", stacked=True, rot=0)","723f66d6":"the_data[[\"NumDealsPurchases\", \"clusters\"]].boxplot(column=\"NumDealsPurchases\", by=\"clusters\")","f3d7f974":"the_data[[\"months_enrolled\", \"clusters\"]].boxplot(column=\"months_enrolled\", by=\"clusters\")","95025542":"the_data[[\"Complain\", \"clusters\"]].groupby([\"clusters\"]).sum().plot(kind=\"bar\", rot=0)","2021dc76":"from sklearn.manifold import TSNE\ntsne = TSNE(n_components=2, random_state=8)\nx_transformed_reduced = tsne.fit_transform(x_transformed)\nx_transformed_reduced = np.c_[k_means.labels_, x_transformed_reduced]\nplt.scatter(x_transformed_reduced[:, 1], x_transformed_reduced[:, 2], c=x_transformed_reduced[:, 0])","18366998":"We see that there are outliers with some people being extremely old. They seem to be too old to be included. Let us remove these observations:","8a977b5d":"We see that Z_CostContact and z_Revenue have 0 standard deviation. This means that they provide no information since they do not vary. Let us remove them:","7579a951":"Who spends more, single people or couples?","8c69a34f":"There are outliers, but I see no reasons for eliminating them. \n\nLet is look at the othe variables now:","18d0c81f":"# Cluster Analysis\n\nFirst we keep the variables that we are interested in:","e19e1c8f":"The variable is skewed as expected.","52f2eb0f":"Clearly it is skewed. It would be a good idea to take the log of this variable:","181b94d8":"Again, no differences.\n\nNow children:","05f1a307":"There is a date column in the data set. Let us look at how the variables are stored:","e697a62d":"# Introduction\n\nThe data set includes information about customer purchasing habits. The purpose of the analysis is to investigate customer segmentation in order to allow the company to understand the different categories of customers that it has. The data set contains the following information about each customer:\n\n* ID: Customer's unique identifier\n* Year_Birth: Customer's birth year\n* Education: Customer's education level\n* Marital_Status: Customer's marital status\n* Income: Customer's yearly household income\n* Kidhome: Number of children in customer's household\n* Teenhome: Number of teenagers in customer's household\n* Dt_Customer: Date of customer's enrollment with the company\n* Recency: Number of days since customer's last purchase\n* Complain: 1 if customer complained in the last 2 years, 0 otherwise\n* MntWines: Amount spent on wine in last 2 years\n* MntFruits: Amount spent on fruits in last 2 years\n* MntMeatProducts: Amount spent on meat in last 2 years\n* MntFishProducts: Amount spent on fish in last 2 years\n* MntSweetProducts: Amount spent on sweets in last 2 years\n* MntGoldProds: Amount spent on gold in last 2 years\n* NumDealsPurchases: Number of purchases made with a discount\n* AcceptedCmp1: 1 if customer accepted the offer in the 1st campaign, 0 otherwise\n* AcceptedCmp2: 1 if customer accepted the offer in the 2nd campaign, 0 otherwise\n* AcceptedCmp3: 1 if customer accepted the offer in the 3rd campaign, 0 otherwise\n* AcceptedCmp4: 1 if customer accepted the offer in the 4th campaign, 0 otherwise\n* AcceptedCmp5: 1 if customer accepted the offer in the 5th campaign, 0 otherwise\n* Response: 1 if customer accepted the offer in the last campaign, 0 otherwise\n* NumWebPurchases: Number of purchases made through the company\u2019s web site\n* NumCatalogPurchases: Number of purchases made using a catalogue\n* NumStorePurchases: Number of purchases made directly in stores\n* NumWebVisitsMonth: Number of visits to company\u2019s web site in the last month\n\nFirst we set up the environment:","95f08507":"Let us now create some useful variables:","32edb871":"Check for outliers:","7ab25acf":"We see that cluster 2 is made up of people with no children, while cluster 0 is made up of people with the most children.\n\nSo far, it seems that clutser 2 is made up of the people with the highest income, spent the most, no children, use techology the least. The following graph shows that these people use deals the least, probably becuase they dont have to:","04302f4a":"We need to convert categorical variables to numbers and we need to standardize other variables:","6ad1238d":"# Visualization","735fe22d":"Is there a relationship between income and amount spent?","235f391c":"Finally, we can visualise the clusters by reducing the dimensions using TSNE:","3ce8f5b0":"Look at differences in income between some groups:","832b6e9f":"Seems that 3 or 4 is the optimal number of clusters. Let us try the silhouette scores to validate this result:","930c3528":"We now check the marital status of people in each cluster:","fa33475a":"The type of the column is object. Let us convert it to a date:","2429f331":"From the histograms produced earlier, it seemd that the variable year had a long left tail let us check it out:","79ce43a7":"Let us now produce graphs that will help us better understand the individuals that make up each cluster. First we look at income:","2b7b1538":"Let us look at income in more detail:","3e17d323":"Next we read the data:","6a2814c5":"Produce variables most correlated with the clusters:","94cc84b0":"Let us look at the values of the object variables:","1a95da6e":"Histogarm of total amount spent:","7539ecc3":"We combine both pieces of information in the following scatter plot:","e1fc2a01":"We now also do the same for education (graduated or not):","57692513":"Check missing information:","4c9e5d76":"Replace missing income by median values:","1ce2869d":"Look at differences in spending with respect to number of kids:","d9f9d651":"Let us collapse this variable into a single\/couple variable:","b988ba87":"We see that there are two columns. Looking at the marital status column, we see that there are strange values such as yolo and alone. We should rename these to more meaningful names:","62181cdc":"We run the KNN algorith several times, each time changing the number of clusters and saving the inertia of the model. This will allow us to use the \"elbow\" method to determine the best number of clusters:","1bf035a8":"We see that three seems to be the optimal number.","66b801fe":"We now check the use of technology by people in each cluster:","c32bb957":"Finally, as shown in the figure below, cluster 2 is made up of people who complain the least.","0da7fece":"We see that the three clusters are made up of both groups. Therefore, no differences.\n\nNow education:","c22e0c53":"# Conclusion\n\nBased on the above, the best customers are in cluster 2. They have the most money, spend the most, and complain the least. Given that they do not tend to use technology a lot in purchasing, the company needs to concentrate on more traditional channels like in-store and catalogue purchases. These people also do not have children, so marketing compaigns targeting these customers should not concentrate on items for children. They should concentrate on items used by adults.","f2d4273d":"It seems that some variables take on only a single value. Let us look at the standard deviation:","f08b6d17":"Cluster 2 is made up of people with the highest income, while cluster 1 is made up of people with the lowest income. These differences in income are reflected in their spending habits:","15a847f0":"Let us produce the same graph but with a loess smoother. Remeber that we have taken the log of both of these variables:","318129a5":"Let us look at the variables that most correlate with amount spent:","6c2aadd4":"The following plots show that there is no difference between clusters in terms of recency and time since enrollment:"}}