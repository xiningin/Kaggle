{"cell_type":{"a87d2b4c":"code","346afac5":"code","1d74d6df":"code","7a1ecd9d":"code","67e67a71":"code","ef982035":"code","3c61a56f":"code","dbf18a5a":"code","57399ee5":"code","f4aeca72":"code","005c8f60":"code","cde13cca":"markdown","7789593e":"markdown","1d6e72fa":"markdown","4088490e":"markdown","dc872083":"markdown","559de1bb":"markdown","7e1de547":"markdown"},"source":{"a87d2b4c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","346afac5":"import pandas as pd \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split\n","1d74d6df":"url=\"https:\/\/raw.githubusercontent.com\/AdiPersonalWorks\/Random\/master\/student_scores%20-%20student_scores.csv\"","7a1ecd9d":"score=pd.read_csv(url)\nscore.head()\n","67e67a71":"y = score.Scores\nX = score.drop('Scores',axis=1)","ef982035":"train_X, val_X, train_y, val_y = train_test_split(X, y,test_size=0.2 , random_state=1179)","3c61a56f":"model = LinearRegression()\nmodel.fit(train_X,train_y)\n","dbf18a5a":"pred_y = model.predict(val_X)","57399ee5":"import numpy as np  \nimport matplotlib.pyplot as plt  \nplt.title('Actual vs Predicted')\nplt.xlabel('Hours')\nplt.ylabel('Score')\nplt.scatter(val_X,val_y)\nplt.scatter(val_X,pred_y);\nplt.show()","f4aeca72":"print('Mean Absolute Error:', mean_absolute_error(val_y, pred_y)) ","005c8f60":"hours = ([[9.25],[0],[0],[0]])\npred_score = model.predict(hours)\nprint(\"Predicted score is :{}\".format(pred_score[0]))","cde13cca":"**Training the model**\n\nAt first the dataset is splitted to obtain a test set to test the model after training.","7789593e":"**Prediction for the test Set**\n\nThis part predicts the value of scores for the test data","1d6e72fa":"Below marks the mean absolute error for the test set.","4088490e":"Hi, This is a notebook created as a part of Data Science internship at sparks foundation. The Problem is to create a Supervised ML model to perform linear regression on 2 features.","dc872083":"Here the random state is set to obtain a minimum Mean Absolute error","559de1bb":"**Answer**\n\nThis part has the answer to predict the score for a time of 9.25 hours. The input has been changed into 2D array to align with parameters of model.","7e1de547":"Here the predicted and real Scores are compared through the graph."}}