{"cell_type":{"f4d47afd":"code","d58e5e92":"code","02e51f68":"code","011241af":"code","233f7a54":"code","99fcfd0c":"code","8f2a8941":"code","51532655":"code","6b968210":"code","a340ea6e":"code","b4ab0436":"code","7ddcd2a3":"code","7ecd5d3d":"code","a78b9587":"code","809460b8":"code","6145a610":"code","3b43a6b4":"code","6acca05c":"code","27c5f807":"markdown","ed3a5359":"markdown","2dea5891":"markdown","05042092":"markdown","90b5d849":"markdown","7b55f86b":"markdown","19c292b7":"markdown","b4a2b7ef":"markdown"},"source":{"f4d47afd":"#importando bibliotecas necess\u00e1rias\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n%matplotlib inline\n\nimport pydicom\nimport os\nimport warnings","d58e5e92":"#caminho onde est\u00e3o armazenadas nossas imagens\nimagens_dir = '..\/input\/siim-medical-images\/dicom_dir'\n#le todos os arquivos e insere em uma lista\nimagens_list = os.listdir(imagens_dir)\n\nprint(f'Foram encontrados {len(imagens_list)} imagens dicom neste diret\u00f3rio.',\n      f'\\nExemplo dos arquivos encontrados:\\n{imagens_list[0:5]}')\n","02e51f68":"def CarregaDadosDataFrame():\n    \n    '''\n    Carrega um dataframe Pandas com as imagens para o treinamento do modelo\n    '''\n    \n    #caminho onde est\u00e3o armazenadas nossas imagens\n    imagens_dir = '..\/input\/siim-medical-images\/dicom_dir'\n    #le todos os arquivos e insere em uma lista\n    imagens_list = os.listdir(imagens_dir)\n    imagens_quant = (len(imagens_list))\n    \n    dados = {\n        #\"LOCAL\": [],\n        \"ARQUIVO\": [],\n        \"ID\": [],\n        \"IDADE\": [],\n        \"CONTRASTE\":[],\n        \"FAIXA_ETARIA\":[],\n    }\n    \n    for arquivo in range(imagens_quant):\n        #dados['LOCAL'].append(f'{imagens_dir}')\n        dados['ARQUIVO'].append(f'{imagens_list}{arquivo}')\n        dados['ID'].append(imagens_list[arquivo][3:7])\n        dados['IDADE'].append(int(imagens_list[arquivo][14:16]))\n        \n        if dados['IDADE'][arquivo] < 40:\n            dados['FAIXA_ETARIA'].append('menos de 40')\n        elif dados['IDADE'][arquivo] >= 40 and dados['IDADE'][arquivo] < 60:\n            dados['FAIXA_ETARIA'].append('40-59')\n        elif dados['IDADE'][arquivo] >= 60 and dados['IDADE'][arquivo] < 80:\n            dados['FAIXA_ETARIA'].append('59-79')\n        else:\n            dados['FAIXA_ETARIA'].append('mais de 80')\n        \n        dados['CONTRASTE'].append(int(imagens_list[arquivo][26]))\n        \n    print(f'Os dados est\u00e3o armazenados no diret\u00f3rio\\n{imagens_dir}\\n que cont\u00e9m {imagens_quant} exames')\n        \n    dados = pd.DataFrame(data=dados)\n    return dados","011241af":"dados =  CarregaDadosDataFrame()\n","233f7a54":"dados.head()","99fcfd0c":"dados.info()","8f2a8941":"fig, (ax1, ax2) = plt.subplots(1,2, figsize = (8, 2))\ns1 = sns.countplot(dados['CONTRASTE'], ax=ax1)\ns1.set_title(\"Uso de Contraste\")\ns2 = sns.countplot(dados['FAIXA_ETARIA'], ax=ax2)\ns2.set_title(\"IDADE\")\nplt.show()\n","51532655":"dados['FAIXA_ETARIA'].describe()","6b968210":"dados['IDADE'].describe()","a340ea6e":"#salva este relat\u00f3rio em csv para an\u00e1lise posterior\/compartilhamento com outras equipes\ndados.to_csv('exames_dicom.csv')","b4ab0436":"# Full path of the DICOM file is passed in base\nimagens_dir = '..\/input\/siim-medical-images\/dicom_dir'\nimagens_list = os.listdir(imagens_dir)\n\narquivo = pydicom.data.data_manager.get_files(imagens_dir, imagens_list[99])[0]\n  \nmetadados = pydicom.dcmread(arquivo)\n\n# Metadados da imagem:\nprint()\nprint(f\"Local do arquivo........: {imagens_dir}\")\nprint(f\"SOP Class........: {metadados.SOPClassUID} ({metadados.SOPClassUID.name})\")\nprint()\n\npat_name = metadados.PatientName\ndisplay_name = pat_name.family_name + \", \" + pat_name.given_name\nprint(f\"Patient's Name...: {display_name}\")\nprint(f\"Patient ID.......: {metadados.PatientID}\")\nprint(f\"Modality.........: {metadados.Modality}\")\nprint(f\"Study Date.......: {metadados.StudyDate}\")\nprint(f\"Image size.......: {metadados.Rows} x {metadados.Columns}\")\nprint(f\"Pixel Spacing....: {metadados.PixelSpacing}\")\n\n# use .get() if not sure the item exists, and want a default value if missing\nprint(f\"Slice location...: {metadados.get('SliceLocation', '(missing)')}\")\n\nplt.imshow(metadados.pixel_array, cmap=plt.cm.bone)  # set the color map to bone\nplt.show()","7ddcd2a3":"metadados_full = pydicom.dcmread(arquivo)\nmetadados_full","7ecd5d3d":"# Full path of the DICOM file is passed in base\ndef ImageToDataFrame():\n    \n    imagens_dir = '..\/input\/siim-medical-images\/dicom_dir'\n    imagens_list = os.listdir(imagens_dir)\n    imagens_quant = len(imagens_list)\n    \n    print(f'foram encontradas {imagens_quant} imagens.')\n    \n    dados = {\n        \"PatientID\": [],\n        \"PatientSex\": [],\n        \"PatientAge\": [],\n        \"BodyPartExamined\": [],        \n        \"DistanceSource_mm\":[],\n        \"PixelData\":[],\n        \n    }\n    \n    for img in range(imagens_quant):\n              \n        arquivo = pydicom.data.data_manager.get_files(imagens_dir, imagens_list[img])[0]\n        metadados = pydicom.dcmread(arquivo)\n\n        # Metadados da imagem:\n        dados['PatientID'].append(metadados.PatientID)\n        dados['PatientSex'].append(metadados.PatientSex)\n        dados['PatientAge'].append(metadados.PatientAge)\n        dados['BodyPartExamined'].append(metadados.BodyPartExamined)\n        dados['DistanceSource_mm'].append(metadados.DistanceSourceToPatient)\n        dados['PixelData'].append(metadados.pixel_array) #.flatten()\n\n    dados = pd.DataFrame(data=dados)\n    return dados\n\n  ","a78b9587":"exames = ImageToDataFrame()","809460b8":"exames.head()","6145a610":"def MostraExames(n):\n    exame_sample = exames['PixelData'][n]\n    plt.imshow(exame_sample, cmap=plt.cm.bone)  # set the color map to bone\n    plt.show()","3b43a6b4":"MostraExames(2)","6acca05c":"DistanceSource = sns.countplot(exames['DistanceSource_mm'])\nDistanceSource.set_title(\"Dist\u00e2ncia em mm entre o raio x e o paciente\")\nplt.show()","27c5f807":"### Ref\u00eancias\nMITA - Medical Imaging Technology Association. **DICOM PS3.1 2021b - Introduction and Overview**. NEMA, DICOM Standards Committee (2021). Dispon\u00edvel [AQUI](http:\/\/dicom.nema.org\/medical\/dicom\/current\/output\/html\/part01.html#sect_1.1). Acessado em 25\/04\/2021.\n\nAlbertina, B., Watson, M., Holback, et al. Radiology Data from The Cancer Genome Atlas Lung Adenocarcinoma [TCGA-LUAD] collection. T**he Cancer Imaging Archive**. (2016). Dispon\u00edvel [AQUI](http:\/\/doi.org\/10.7937\/K9\/TCIA.2016.JGNIHEP5). Acessado em 20\/04\/2021.\n\nInnolitics. **DICOM Standard Browser**. (2021) Dispon\u00edvel [AQUI](https:\/\/dicom.innolitics.com\/ciods). Acessado em 24\/04\/2021.\n\nPydicom. **Introduction to pydicom - Brief overview of pydicom.** (2021). Dispon\u00edvel [AQUI](https:\/\/pydicom.github.io\/pydicom\/stable\/old\/getting_started.html). Acessado em 23\/04\/2021.","ed3a5359":"### Qual a dist\u00e2ncia mais utilizada para realizar os exames?\n\nVamos analisar qual a dist\u00e2ncia entre o raio x e o paciente (atributo *DistanceSourceToPatient*)","2dea5891":"### Sobre o conjunto de dados\n\nPara este estudo foram utilizados exames de Adenocarcinoma pulmonar, disponibilizados publicamente no *The Cancer Imaging Archive (TCIA).* Este conjunto de dados de imagem s\u00e3o heterog\u00eaneos em termos de modalidades de scanner, fabricantes e protocolos de aquisi\u00e7\u00e3o. Na maioria dos casos, as imagens foram adquiridas como parte dos cuidados de rotina e n\u00e3o como parte de um estudo de pesquisa controlado ou ensaio cl\u00ednico (Albertina, Watson, Holback, et al, 2016).\n\nAs imagens utilizadas neste estudo s\u00e3o as de peito (chest) e pulm\u00e3o (lung).\n\n------\nPara baixar o conjunto de dados completo, [clique aqui.](https:\/\/wiki.cancerimagingarchive.net\/display\/Public\/TCGA-LUAD)","05042092":"**salvando relat\u00f3rio**\n\nPdemos enviar estes dados tabulados para an\u00e1lises de custos, BI entre outros setores administrativos.","90b5d849":"A pydicom possui diversas ferramentas para lidarmos com imagens dicom. Ao inv\u00e9s de filtrar e mostrar apenas alguns metadados, podemos usar o *.dcmread* isoladamente, que teremos todos os metadados da imagem em quest\u00e3o.\nAbaixo temos todos os metadadosd deste exame. Uma lista completa e documentada de todos os par\u00e2metros podem,os encontrar em [Innolitics(2021)](https:\/\/dicom.innolitics.com\/ciods)","7b55f86b":"# Imagens M\u00e9dicas e Sinais Biol\u00f3gicos: Cen\u00e1rios baseados em imagens digitais em sa\u00fade\n\n[\/\/]: # (Title: Imagens M\u00e9dicas e Sinais Biol\u00f3gicos: Cen\u00e1rios baseados em imagens digitais em sa\u00fade)\n[\/\/]: # (Author: Jonas Campos)\n[\/\/]: # (Date: April 20, 2021)\n[\/\/]: # (Comment: Imagens M\u00e9dicas e Sinais Biol\u00f3gicos, Especializa\u00e7\u00e3o em Inform\u00e1tica da Sa\u00fade) \n[\/\/]: # (Tags: #python, #pydicom, #dicom, #imagensmedicas)  \n\n<!-- PROJECT SHIELDS | ![image](BadgeURLHere) -->\n<p align='center'>\n  <!-- Python -->\n  <img src='https:\/\/img.shields.io\/badge\/Python-14354C?style=for-the-badge&logo=python&logoColor=white'\/>\n  <!-- Jupyter -->\n  <img src='https:\/\/img.shields.io\/badge\/Jupyter-F37626.svg?&style=for-the-badge&logo=Jupyter&logoColor=white'\/>\n<\/p>\n  <p align='center'>\n  <!-- Unifesp logo -->\n  <img src='https:\/\/www.unifesp.br\/reitoria\/dci\/images\/docs\/manual_da_marca\/Unifesp_completa_policromia_RGB.png' alt=\"unifesp\" width=\"200\" height=\"200\" \/>\n  <\/p> \n<!-- PROJECT LOGO -->\n  <a href=\"#\">\n    <img src=\"https:\/\/www.visualmedica.com\/wp-content\/uploads\/2019\/04\/Dicom-Logo-1024x394.png\" alt=\"Logo\" width=\"200\" height=\"200\">\n  <\/a>\n<\/p>    \n    \n\n  <h3 align=\"center\">Utiliza\u00e7\u00e3o de uma ferramenta para visualiza\u00e7\u00e3o de imagens m\u00e9dicas (Tema A)<\/h3>\n\n  <p align=\"center\">Imagens M\u00e9dicas e Sinais Biol\u00f3gicos, Especializa\u00e7\u00e3o em Inform\u00e1tica da Sa\u00fade<\/p>\n\n------\n\n## Utiliza\u00e7\u00e3o de uma ferramenta para visualiza\u00e7\u00e3o de imagens m\u00e9dicas (Tema A)\n\n**O que veremos neste artigo:**\n\n- [ ] Obter dados e armazen\u00e1-los para an\u00e1lise posterior\n- [ ] Visualizar imagens dicom utilizando a linguagem Python, em um jupyter notebook, que dispensa a instala\u00e7\u00e3o e roda em qualquer navegador.\n- [ ] Obter e organizar metadados das imagens em um data frame\n- [ ] Analisar as imagens\n\n","19c292b7":"## Contato\n\n**Author:** Jonas Araujo de Avila Campos\n\n<p align='center'>\n\n  <a href='https:\/\/github.com\/jonasaacampos'>\n    <img src='https:\/\/img.shields.io\/badge\/GitHub-100000?style=for-the-badge&logo=github&logoColor=white'\/>\n  <\/a>\n\n  <a href='https:\/\/www.linkedin.com\/in\/jonasaacampos\/'>\n    <img src='https:\/\/img.shields.io\/badge\/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white'\/>\n  <\/a>\n\n  <a href='https:\/\/www.facebook.com\/jonasaacampos'>\n    <img src='https:\/\/img.shields.io\/badge\/Facebook-1877F2?style=for-the-badge&logo=facebook&logoColor=white'\/>\n  <\/a>","b4a2b7ef":"### Imagens em formato DICOM\n\nO padr\u00e3o *Digital Imaging and Communications in Medicine* (DICOM) facilita a interoperabilidade de equipamentos de imagens m\u00e9dicas, especificando: protocolos de rede e de armazenamento (MITA 2021).\n\n### Visualizando arquivos DICOM e extraindo metadados\n\nPydicom \u00e9 um pacote Python puro para trabalhar com arquivos DICOM, como imagens m\u00e9dicas, relat\u00f3rios e objetos de radioterapia. Este pacote manipula, visualiza e grava arquivos DICOM (Pydicom, 2021)."}}