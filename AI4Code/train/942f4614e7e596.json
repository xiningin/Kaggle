{"cell_type":{"9a30d785":"code","7113f76a":"markdown"},"source":{"9a30d785":"def Snippet_199():\n    print()\n    print(format('How to find optimal parameters for CatBoost using GridSearchCV for Regression','*^82'))\n\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n\n    # load libraries\n    from sklearn import datasets\n    from sklearn.model_selection import train_test_split\n    from sklearn.model_selection import GridSearchCV\n    from catboost import CatBoostRegressor\n\n    # load the iris datasets\n    dataset = datasets.load_boston()\n    X = dataset.data; y = dataset.target\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)\n\n    model = CatBoostRegressor()\n    parameters = {'depth'         : [6,8,10],\n                  'learning_rate' : [0.01, 0.05, 0.1],\n                  'iterations'    : [30, 50, 100]\n                 }\n    grid = GridSearchCV(estimator=model, param_grid = parameters, cv = 2, n_jobs=-1)\n    grid.fit(X_train, y_train)\n\n    # Results from Grid Search\n    print(\"\\n========================================================\")\n    print(\" Results from Grid Search \" )\n    print(\"========================================================\")\n    print(\"\\n The best estimator across ALL searched params:\\n\",\n          grid.best_estimator_)\n    print(\"\\n The best score across ALL searched params:\\n\",\n          grid.best_score_)\n    print(\"\\n The best parameters across ALL searched params:\\n\",\n          grid.best_params_)\n    print(\"\\n ========================================================\")\n\nSnippet_199()","7113f76a":"# How to find optimal parameters for CatBoost using GridSearchCV for Regression?\n\nThis python source code does the following: \n1. pip installs Catboost \n2. Imports SKlearn dataset \n3. Performs validation dataset from the existing dataset \n4. Applies Catboost Regressor \n5. Hyperparameter tuning using GridSearchCV"}}