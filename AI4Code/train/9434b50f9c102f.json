{"cell_type":{"7c195ec3":"code","a1981135":"code","6484652e":"code","e9e3f5be":"code","8ab2cb62":"code","8333eb12":"code","a618b5e2":"code","7c7a1da4":"code","e0fd5f70":"code","8cdad3f1":"code","c25f9792":"code","9e040e60":"code","8c1f8677":"code","eb704a50":"code","9acbb2ae":"code","3e334a7b":"code","3af5ae81":"code","f624cc60":"code","ada07823":"code","b3c3c0ff":"code","f3572d9f":"code","2db62d37":"code","649e35a7":"code","63443063":"code","892671f1":"markdown","33a0f834":"markdown","230c2ff6":"markdown","92acfac6":"markdown","31b924bc":"markdown"},"source":{"7c195ec3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a1981135":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","6484652e":"from fastai import *\nfrom fastai.vision import *\nfrom fastai.utils.collect_env import *","e9e3f5be":"show_install(True)","8ab2cb62":"np.random.seed(42)","8333eb12":"path = Path('..\/input\/fruits-360_dataset\/fruits-360')","a618b5e2":"!ls {path}","7c7a1da4":"train_path = path\/'Training'\ntest_path = path\/'Test'\n\nls_trn = train_path.ls()\nls_tst = test_path.ls()\nlen(ls_trn), len(ls_tst), ls_trn[90:], ls_tst[90:]","e0fd5f70":"def add_test_folder(iil, test_path):\n    iil.test = ImageItemList.from_folder(test_path).no_split().label_from_folder().train\n    \niil = (ImageItemList.from_folder(train_path)\n                     .random_split_by_pct(.2)\n                     .label_from_folder())\n\nadd_test_folder(iil, test_path)\n\ndata = iil.transform(tfms=None, size=100, bs=32).databunch().normalize(imagenet_stats)","8cdad3f1":"len(data.train_dl.dataset), len(data.valid_dl.dataset), len(data.test_dl.dataset)","c25f9792":"data.show_batch(ds_type=DatasetType.Train ,rows=3, figsize=(7,7))","9e040e60":"print(data.classes)\nlen(data.classes),data.c","8c1f8677":"metrics = [accuracy]","eb704a50":"!pwd","9acbb2ae":"learn = create_cnn(data, models.resnet34, model_dir='\/kaggle\/working\/models',  metrics=metrics)","3e334a7b":"learn.loss_func","3af5ae81":"learn.lr_find()","f624cc60":"learn.recorder.plot()","ada07823":"lr = 1e-3","b3c3c0ff":"learn.fit_one_cycle(5, max_lr=lr)","f3572d9f":"learn.recorder.plot_losses()","2db62d37":"learn.save('fruits-stg1-rn34')\n!ls -l .\/models","649e35a7":"results = learn.validate(dl=learn.data.test_dl)","63443063":"print('loss: {:.6f}; accuracy: {}'.format(results[0].item(), results[1].item()))","892671f1":"We import all the necessary packages. We are going to work with the [fastai V1 library](http:\/\/www.fast.ai\/2018\/10\/02\/fastai-ai\/) which sits on top of [Pytorch 1.0](https:\/\/hackernoon.com\/pytorch-1-0-468332ba5163). The fastai library provides many useful functions that enable us to quickly and easily build neural networks and train our models.","33a0f834":"## Import libs","230c2ff6":"## Training Model","92acfac6":"## Evaluate Model","31b924bc":"## Looking at the data"}}