{"cell_type":{"7cf6889a":"code","f716fe81":"code","52c8f390":"code","bf6fba01":"code","e0b970dc":"code","f0b199fb":"code","124d6cb9":"code","7501f9d0":"code","d564f5c1":"code","aacbc4f6":"code","13353b33":"code","51ac8947":"code","16388d11":"code","2ad4dcf0":"code","57be98e3":"code","7ba1b5ef":"code","8d7b4367":"code","2dab78e2":"code","dad871df":"code","a26cb63b":"code","2e728aac":"code","92fadea4":"code","936b7002":"code","271617f3":"code","41e569cb":"code","c5a99604":"code","baabd20e":"code","56166e5d":"code","055b4538":"code","9e98b4e1":"code","3c90478a":"code","9501c0f0":"code","038ef383":"code","d70c3b74":"code","3c51b051":"code","76f2bcb1":"code","2ed5dff2":"code","9054ea34":"code","6e8b657f":"code","30cc54a5":"code","3b1ea483":"code","4044f24e":"code","e0aae05d":"code","668289f9":"code","bfd04d22":"code","da795507":"code","1e2c6675":"code","793024b6":"code","d6344ba3":"code","518d836a":"code","5f82c78f":"code","2d100130":"code","882c7231":"code","47a6d9df":"code","a39fdd85":"code","1bc68c0e":"code","deeb74d5":"code","6b91be95":"code","be19fe6d":"code","0a70640c":"code","a481d52d":"code","d9f591cb":"code","a744c6a4":"code","4d3f1727":"code","38f9a28c":"code","0e209e81":"code","4bb904de":"code","d9a7fab9":"code","a3e8c766":"code","bbd20a0f":"markdown","d60ac14b":"markdown","a07875f2":"markdown","05e08398":"markdown","c37c7439":"markdown","694f5161":"markdown","4dc83200":"markdown","51a0225b":"markdown","fbefc53d":"markdown","133adc4f":"markdown","e08e6d24":"markdown","72dc6a1c":"markdown","11d30181":"markdown","95eeae18":"markdown","7dbb1d30":"markdown","dca0d82b":"markdown","7e7d79e2":"markdown","b2417281":"markdown","17028e20":"markdown","6790bdd4":"markdown","374e85a5":"markdown","d771d3d2":"markdown","594202e0":"markdown","43abfec0":"markdown","21173b8b":"markdown","c14d31ac":"markdown","9eb4bc1d":"markdown","99d84e28":"markdown","782e1a2e":"markdown","8d14933c":"markdown","34012cb0":"markdown","9000f1d9":"markdown","8abd6a32":"markdown","16d7114d":"markdown","f0c009c0":"markdown"},"source":{"7cf6889a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f716fe81":"from gensim.models import Word2Vec\nimport gensim","52c8f390":"gl_model = Word2Vec.load('\/kaggle\/input\/biology-on-graphs-w2v\/gl_model.model')\nal_model = Word2Vec.load('\/kaggle\/input\/biology-on-graphs-w2v\/al_model.model')","bf6fba01":"len(gl_model.wv.key_to_index)","e0b970dc":"len(al_model.wv.key_to_index)","f0b199fb":"print('fgf20' in gl_model.wv.key_to_index)","124d6cb9":"print('fgf20' in al_model.wv.key_to_index)","7501f9d0":"import matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n%matplotlib inline","d564f5c1":"df = pd.read_csv('\/kaggle\/input\/biology-on-graphs-w2v\/genes_human_58347_used_in_sciPlex2_brief_info_by_mygene_package.csv')","aacbc4f6":"df_sort = df.sort_values(by=['count pubmed'], ascending=False)\ndf_sort.shape","13353b33":"words = list(df_sort['symbol'].str.lower())","51ac8947":"words = [words[i] for i in range(len(words)) if (words[i] in gl_model.wv.key_to_index) and (words[i] in al_model.wv.key_to_index)]\nlen(words)","16388d11":"words = words[:1000]","2ad4dcf0":"dct_names = dict.fromkeys(words)\nfor key in dct_names.keys():\n    dct_names[key] = dict.fromkeys(words);\n\nfor key1 in dct_names.keys():\n    for key2 in dct_names[key1].keys():\n        if key1 == key2:\n            dct_names[key1][key2] = '-';        \n        else:\n            dct_names[key1][key2] = gl_model.wv.similarity(key1, key2)","57be98e3":"dct_vls = dict.fromkeys(words)\nfor key in dct_vls.keys():\n    dct_vls[key] = dict.fromkeys(words);\n\nfor key1 in dct_vls.keys():\n    for key2 in dct_vls[key1].keys():\n        if key1 == key2:\n            dct_vls[key1][key2] = '-';        \n        else:\n            dct_vls[key1][key2] = al_model.wv.similarity(key1, key2)","7ba1b5ef":"import networkx as nx","8d7b4367":"G_gl = nx.Graph()\nG_gl.add_nodes_from(words)\n\nfor key1 in dct_names.keys():\n    for key2 in dct_names[key1].keys():\n        if key1 != key2:\n            if dct_names[key1][key2] > 0.6:\n                G_gl.add_weighted_edges_from([(key1, key2, dct_names[key1][key2])])","2dab78e2":"G_al = nx.Graph()\nG_al.add_nodes_from(words)\n\nfor key1 in dct_vls.keys():\n    for key2 in dct_vls[key1].keys():\n        if key1 != key2:\n            if dct_vls[key1][key2] > 0.6:\n                G_al.add_weighted_edges_from([(key1, key2, dct_vls[key1][key2])])","dad871df":"#G_gl.remove_nodes_from(list(nx.isolates(G_gl)))\n#G_al.remove_nodes_from(list(nx.isolates(G_al)))","a26cb63b":"#G_gl = G_gl.subgraph(nx.shortest_path(G_gl.to_undirected(),'tp53'))\n#G_al = G_al.subgraph(nx.shortest_path(G_al.to_undirected(),'tp53'))","2e728aac":"print(nx.info(G_gl))","92fadea4":"print(nx.info(G_al))","936b7002":"[n for n in G_gl.neighbors('tp53')]","271617f3":"[n for n in G_al.neighbors('tp53')]","41e569cb":"print(nx.shortest_path(G_gl,source='tp53',target='ptgs2', weight='weight'))","c5a99604":"print(nx.shortest_path(G_al,source='tp53',target='ptgs2', weight='weight'))","baabd20e":"from community import community_louvain","56166e5d":"communities_gl =community_louvain.best_partition(G_gl)\ncommunities_al =community_louvain.best_partition(G_al)","055b4538":"gl_community_id = [communities_gl[node] for node in G_gl.nodes()]\n\nfig = plt.figure(figsize=(10, 10))\nnx.draw(\n    G_gl,\n    #with_labels=True,\n    edge_color=['silver'] * len(G_gl.edges()),\n    cmap=plt.cm.tab20,\n    node_color=gl_community_id,\n    node_size=150,\n)","9e98b4e1":"al_community_id = [communities_al[node] for node in G_al.nodes()]\n\nfig = plt.figure(figsize=(10, 10))\nnx.draw(\n    G_al,\n    #with_labels=True,\n    edge_color=['silver'] * len(G_al.edges()),\n    cmap=plt.cm.tab20,\n    node_color=al_community_id,\n    node_size=150,\n)","3c90478a":"gl_community_list = pd.DataFrame(np.column_stack([G_gl.nodes, gl_community_id]), \n                               columns=['node', 'community'])\n\ngl_community_list.community = gl_community_list.community.astype(int)\ngl_community_list.community.value_counts()","9501c0f0":"gl_community_list_filter = gl_community_list[gl_community_list['community'] == 0]\ngl_community_list_filter.head(10)","038ef383":"al_community_list = pd.DataFrame(np.column_stack([G_al.nodes, al_community_id]), \n                               columns=['node', 'community'])\n\nal_community_list.community = al_community_list.community.astype(int)\nal_community_list.community.value_counts()","d70c3b74":"al_community_list_filter = al_community_list[al_community_list['community'] == 0]\nal_community_list_filter.head(10)","3c51b051":"from sklearn.metrics.cluster import adjusted_rand_score\nadjusted_rand_score(al_community_list.community, gl_community_list.community)","76f2bcb1":"def eigenvector(G_gl):\n    ev = nx.eigenvector_centrality(G_gl)\n    df = pd.DataFrame.from_dict({\n        'node': list(ev.keys()),\n        'eigenvector_gl': list(ev.values())\n    })\n    return df.sort_values('eigenvector_gl', ascending=False)\n\neigenv_gl = pd.DataFrame(eigenvector(G_gl), columns=['node', 'eigenvector_gl'])\neigenv_gl.head(10)","2ed5dff2":"def eigenvector(G_al):\n    ev = nx.eigenvector_centrality(G_al)\n    df = pd.DataFrame.from_dict({\n        'node': list(ev.keys()),\n        'eigenvector_al': list(ev.values())\n    })\n    return df.sort_values('eigenvector_al', ascending=False)\n\neigenv_al = pd.DataFrame(eigenvector(G_al), columns=['node', 'eigenvector_al'])\neigenv_al.head(10)","9054ea34":"def pr_summary(G_gl):\n    pr = nx.pagerank(G_gl)\n    df = pd.DataFrame.from_dict({\n        'node': list(pr.keys()),\n        'centrality_pr_gl': list(pr.values())\n    })\n    return df.sort_values('centrality_pr_gl', ascending=False)\n\npr_gl = pd.DataFrame(pr_summary(G_gl), columns=['node', 'centrality_pr_gl'])\npr_gl.head(10)","6e8b657f":"def pr_summary(G_al):\n    pr = nx.pagerank(G_al)\n    df = pd.DataFrame.from_dict({\n        'node': list(pr.keys()),\n        'centrality_pr_al': list(pr.values())\n    })\n    return df.sort_values('centrality_pr_al', ascending=False)\n\npr_al = pd.DataFrame(pr_summary(G_al), columns=['node', 'centrality_pr_al'])\npr_al.head(10)","30cc54a5":"def bc_summary(G_gl):\n    bc = nx.betweenness_centrality(G_gl)\n    df = pd.DataFrame.from_dict({\n        'node': list(bc.keys()),\n        'centrality_bc_gl': list(bc.values())\n    })\n    return df.sort_values('centrality_bc_gl', ascending=False)\n\nbc_gl = pd.DataFrame(bc_summary(G_gl), columns=['node', 'centrality_bc_gl'])\nbc_gl.head(10)","3b1ea483":"def bc_summary(G_al):\n    bc = nx.betweenness_centrality(G_al)\n    df = pd.DataFrame.from_dict({\n        'node': list(bc.keys()),\n        'centrality_bc_al': list(bc.values())\n    })\n    return df.sort_values('centrality_bc_al', ascending=False)\n\nbc_al = pd.DataFrame(bc_summary(G_al), columns=['node', 'centrality_bc_al'])\nbc_al.head(10)","4044f24e":"df_sort['symbol'] = df_sort['symbol'].str.lower()\ndf_sort['node'] = df_sort['symbol']\ndf_node = df_sort[['node', 'count pubmed']]","e0aae05d":"from functools import reduce\n\ndfs = [df_node, eigenv_gl, eigenv_al, pr_gl, pr_al, bc_gl, bc_al]  \ndf_sum = reduce(lambda left,right: pd.merge(left,right,on='node'), dfs)","668289f9":"df_sum_sort = df_sum.sort_values(by=['count pubmed'], ascending=False)\ndf_sum_sort.head(10)","bfd04d22":"corr = df_sum.corr(method='spearman', min_periods=1)\ncorr.style.background_gradient(cmap='coolwarm')","da795507":"g = nx.Graph()\ng.add_nodes_from(words)\n\nfor key1 in dct_names.keys():\n    for key2 in dct_names[key1].keys():\n        if key1 != key2:\n            if dct_names[key1][key2] > 0:\n                g.add_weighted_edges_from([(key1, key2, dct_names[key1][key2])])","1e2c6675":"communities =community_louvain.best_partition(g)","793024b6":"community_id = [communities[node] for node in g.nodes()]\n\nfig = plt.figure(figsize=(10, 10))\nnx.draw(\n    g,\n    #with_labels=True,\n    edge_color=['silver'] * len(g.edges()),\n    cmap=plt.cm.tab20,\n    node_color=community_id,\n    node_size=150,\n)","d6344ba3":"community_list = pd.DataFrame(np.column_stack([g.nodes, community_id]), \n                               columns=['node', 'community'])\n\ncommunity_list.community = community_list.community.astype(int)\ncommunity_list['community'].value_counts()","518d836a":"df_target = community_list.copy()","5f82c78f":"x = [(gl_model.wv[str(i)]) for i in df_target['node']]","2d100130":"emb_df_untarget = pd.DataFrame(x, index = df_target['node'])","882c7231":"df_target.set_index('node', inplace=True)","47a6d9df":"emb_df_target = df_target.join(emb_df_untarget)","a39fdd85":"df_train = emb_df_target","1bc68c0e":"data_full = df_train.copy()\nX_data = data_full.drop('community', axis=1)\ny = data_full.community","deeb74d5":"from xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import LabelEncoder","6b91be95":"label_encoder = LabelEncoder()\nlabel_encoder = label_encoder.fit(y)\nlabel_encoded_y = label_encoder.transform(y)\nseed = 7\ntest_size = 0.33\nX_train, X_test, y_train, y_test = train_test_split(X_data, label_encoded_y,test_size=test_size, random_state=seed)\nxgb = XGBClassifier(\n    max_depth=2,\n    gamma=2,\n    eta=0.8,\n    reg_alpha=0.5,\n    reg_lambda=0.5\n)\nxgb.fit(X_train, y_train)","be19fe6d":"predictions = xgb.predict(X_test)\naccuracy = accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))","0a70640c":"pred_words = [\n\n    'bevacizumab',\n    'valdecoxib',\n    'etoricoxib',\n    'alirocumab',\n    'linagliptin',\n    'apixaban',\n    'alectinib',\n    'sofosbuvir',\n    'bevirimat',\n    'ivacaftor',\n    'vilanterol',\n    'evolocumab',\n    'tisagenlecleucel',\n    'leflunomide',\n    'ropivacaine',\n    'eletriptan',\n    'lopinavir',\n    'parecoxib',\n    'rofecoxib',\n    'celecoxib',\n    'ketoprofen',\n    'ketorolac',\n    'ondansetron',\n    'sumatriptan',\n    'salmeterol',\n    'verapamil',\n    'tramadol',\n    'propofol',\n    'ranitidine',\n    'naproxen',\n    'carfentanil',    \n    'budesonide',\n    'diclofenac',\n    'etidocaine',\n    'mupirocin',\n    'cimetidine',\n    'metolazone',\n    'ciclosporin',\n    'prilocaine',\n    'amiloride',\n    'salbutamol'     \n\n]","a481d52d":"pred_words = [pred_words[i] for i in range(len(pred_words)) if (pred_words[i] in gl_model.wv.key_to_index) and (pred_words[i] in al_model.wv.key_to_index)]","d9f591cb":"len(pred_words)","a744c6a4":"x1 = [(gl_model.wv[str(i)]) for i in pred_words]","4d3f1727":"emb_df = pd.DataFrame(x1, index = pred_words)","38f9a28c":"boosted_predictions = xgb.predict(emb_df)","0e209e81":"node = emb_df.index","4bb904de":"pred_results = pd.DataFrame({'node': node, 'value_prediction': boosted_predictions})\npred_results.value_prediction.value_counts()","d9a7fab9":"select_class = pred_results.loc[pred_results['value_prediction'] == 1]\nselect_class","a3e8c766":"community_list_filter = community_list[community_list['community'] == 1]\ncommunity_list_filter.head(10)","bbd20a0f":"\u041f\u0435\u0439\u0434\u0436\u0440\u0430\u043d\u043a:","d60ac14b":"\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0438\u0437 \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u043e\u0432  al_model:","a07875f2":"## \u041e \u0431\u043b\u043e\u043a\u043d\u043e\u0442\u0435\n\n\u041f\u043e\u0432\u043e\u0434\u043e\u043c \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0430\u043b \u0440\u0430\u0437\u0433\u043e\u0432\u043e\u0440 \u0441 [\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u043c \u0427\u0435\u0440\u0432\u043e\u0432\u044b\u043c](https:\/\/www.kaggle.com\/alexandervc), \u0432 \u0445\u043e\u0434\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u0438\u0434\u0435\u044f \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0431\u0438\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0439 \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 \u0431\u043b\u043e\u043a\u043d\u043e\u0442\u043e\u043c \"[\u0424\u0438\u043b\u043e\u0441\u043e\u0444\u0438\u044f \u043d\u0430 \u0433\u0440\u0430\u0444\u0430\u0445](https:\/\/www.kaggle.com\/visualcomments\/philosophy-ru-on-graphs)\". \n\n\u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u043e\u0432\u0430 - \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u0433\u0435\u043d\u043e\u0432 - \u043a\u0430\u043a \u0438\u043c\u0435\u043d\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0440\u0451\u0431\u0440\u0430\u043c\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u0445\u043e\u0434\u0441\u0442\u0432\u0430 \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438. \u042d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u0438 \u0441\u043b\u043e\u0432 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u043c \u0434\u043b\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u0445\u043e\u0434\u0441\u0442\u0432\u0435, \u0430 \u0433\u0440\u0430\u0444 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u0430\u043f\u043f\u0430\u0440\u0430\u0442\u0430 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0442\u043e\u0440\u0438\u043a\u0438 \u0438 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0442\u0435\u043e\u0440\u0438\u0438 \u0433\u0440\u0430\u0444\u043e\u0432.\n\n\u0421\u043e\u0430\u0432\u0442\u043e\u0440 \u043a\u043e\u0434\u0430: \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u041c\u043e\u0440\u043e\u0437\u043e\u0432.","05e08398":"## \u041c\u0435\u0440\u044b \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438","c37c7439":"\u0421\u043d\u043e\u0432\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0433\u0440\u0430\u0444 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0446\u0435\u043b\u0435\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u044c\u043c\u0451\u043c \u043b\u044e\u0431\u044b\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430 \u0441\u0445\u043e\u0434\u0441\u0442\u0432\u0430 \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u044b\u0445 \u0440\u0451\u0431\u0435\u0440 \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0440\u0448\u0438\u043d\u0430\u043c\u0438.","694f5161":"\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432 \u0434\u043b\u044f \u0438\u043c\u0451\u043d \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435. \u0412\u043e\u0437\u044c\u043c\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0441\u043b\u043e\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u0445 \u043e\u0431\u0435\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.","4dc83200":"\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0438\u0437 \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u043e\u0432 gl_model:","51a0225b":"\u0415\u0441\u043b\u0438 \u043c\u044b \u0445\u043e\u0442\u0438\u043c \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043d\u0430 \u043a\u0430\u043a\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430, \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \"\u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044e\u0442\" \u0433\u0440\u0430\u0444 \u043d\u0430 \u0441\u0432\u044f\u0437\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b-\u043c\u043e\u0434\u0443\u043b\u0438. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0447\u0430\u0441\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0439 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u0446\u0435\u043b\u0435\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c Louvain.","fbefc53d":"\u041c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0442\u043e\u0447\u043d\u0438\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043d\u0443\u0436\u043d\u043e\u0435 \u043d\u0430\u043c \u0441\u043b\u043e\u0432\u043e \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.","133adc4f":"\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u0446\u0435\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u043d\u043e\u0432\u043e\u043c \u043d\u0430\u0431\u043e\u0440\u0435 \u0441\u043b\u043e\u0432.","e08e6d24":"\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u0438 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 \u0441\u043b\u043e\u0432 \u043e\u0431\u0435\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u0430 \u0441\u0445\u043e\u0434\u0441\u0442\u0432\u0430.","72dc6a1c":"\u0412 \u0446\u0435\u043b\u044f\u0445 \u0443\u0442\u043e\u0447\u043d\u0435\u043d\u0438\u044f \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0438\u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0439 \u043f\u0443\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u043c\u0438 \u043d\u0430\u0441 \u0432\u0435\u0440\u0448\u0438\u043d\u0430\u043c\u0438:","11d30181":"## \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435","95eeae18":"\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u044b \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0432 \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u044b \u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u0435\u0439:","7dbb1d30":"\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0432\u0435\u043a\u0442\u043e\u0440:","dca0d82b":"\u0413\u0440\u0430\u0444 \u0438\u0437 \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u043e\u0432 al_model:","7e7d79e2":"## \u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0442\u0435\u0440\u043c\u043e\u0432\n\n\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u0444\u0430 \u043d\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430 \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u0439 \u0434\u0430\u0442\u0430\u0441\u0435\u0442. \u0415\u0441\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430 (\u043c\u043e\u0434\u0443\u043b\u0438) \u0445\u043e\u0440\u043e\u0448\u043e \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f, \u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432 \u0441\u043b\u043e\u0432 \u043a\u0430\u043a \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 (\u0444\u0438\u0447\u0438) \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0446\u0435\u043b\u0435\u0432\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 (\u043c\u043e\u0434\u0443\u043b\u0435\u0439). \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043c\u0443\u043b\u044c\u0442\u0438\u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439.","b2417281":"\u0413\u0440\u0430\u0444 \u0438\u0437 \u044d\u043c\u0431\u0435\u0434\u0434\u0438\u043d\u0433\u043e\u0432 gl_model:","17028e20":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444 \u0438\u0437 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0432, \u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u0440\u0451\u0431\u0440\u0430 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043d\u0430 \u0431\u0430\u0437\u0435 \u043f\u043e\u0440\u043e\u0433\u043e\u0432\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0445\u043e\u0434\u0441\u0442\u0432\u0430 \u043c\u0435\u0436\u0434\u0443 \u0441\u043b\u043e\u0432\u0430\u043c\u0438.","6790bdd4":"## \u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430","374e85a5":"\u0421\u043c\u043e\u0442\u0440\u0438\u043c \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u0433\u0440\u0430\u0444\u043e\u0432: \u0447\u0438\u0441\u043b\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0438 \u0440\u0451\u0431\u0435\u0440, \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u044c:","d771d3d2":"\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u043e \u043f\u043e\u0441\u0440\u0435\u0434\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u0443:","594202e0":"\u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432\u0435\u0440\u0448\u0438\u043d\u044b.","43abfec0":"\u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0433\u0440\u0430\u0444\u044b \u043f\u043e \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0430\u043c:","21173b8b":"\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0447\u0430\u0441\u0442\u043e\u0442\u0435 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0439 \u0432 PubMed:","c14d31ac":"\u0427\u0442\u043e\u0431\u044b \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u044c \u0433\u0440\u0430\u0444\u044b \u043d\u0430 \u0441\u0435\u043c\u0430\u043d\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u043e\u0434\u043e\u0431\u0438\u0435, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0438\u0445 \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b.","9eb4bc1d":"\u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u043e\u0436\u0435\u043c \u0432\u0437\u044f\u0442\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u043f\u043e\u0432\u044b\u0445 \u0441\u043b\u043e\u0432.","99d84e28":"\u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0433\u0440\u0430\u0444\u0430 \u043f\u043e\u0434\u0433\u0440\u0430\u0444 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0433\u0438\u0433\u0430\u043d\u0442\u0441\u043a\u0443\u044e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443) \u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435\u043c \u0432 \u043d\u0451\u043c \u0438\u043c\u0435\u043d\u0438 \u0442\u043e\u043f\u043e\u0432\u043e\u0433\u043e \u0433\u0435\u043d\u0430.","782e1a2e":"\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f\u043c \u0433\u0435\u043d\u043e\u0432 \u0432 PubMed.","8d14933c":"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.","34012cb0":"## \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435","9000f1d9":"## \u041a\u0430\u043a \u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0441\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\n\n\u0414\u043b\u044f \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f \u043a\u043e\u0440\u043f\u0443\u0441 \u043a\u043d\u0438\u0433 [\u041b\u0438\u0431\u0433\u0435\u043d\u0430](http:\/\/libgen.rs\/repository_torrent\/) \u043f\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e \u043d\u0430 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c 2021 \u0433\u043e\u0434\u0430.\n\n\u0411\u044b\u043b\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u043b\u043d\u043e\u0442\u0435\u043a\u0441\u0442\u043e\u0432\u0430\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u043a\u043e\u0440\u043f\u0443\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0443\u0442\u0438\u043b\u0438\u0442\u044b [recoll](https:\/\/www.lesbonscomptes.com\/recoll\/). \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043f\u043e \u043d\u0443\u0436\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443.\n\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0431\u043b\u043e\u043a\u043d\u043e\u0442\u0430 \u0431\u044b\u043b\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u044b \u0434\u0432\u0435 word2vec-\u043c\u043e\u0434\u0435\u043b\u0438.\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c (gl_model) \u043e\u0431\u0443\u0447\u0435\u043d\u0430 \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0438\u0437 1097 \u0442\u0435\u043a\u0441\u0442\u043e\u0432 \u043f\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \"glioblastoma cancer cell brain tumor\".\n\n\u0412\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c (al_model) \u043e\u0431\u0443\u0447\u0435\u043d\u0430 \u043d\u0430 \u043a\u043e\u0440\u043f\u0443\u0441\u0435 \u0438\u0437 1332 \u0442\u0435\u043a\u0441\u0442\u043e\u0432 \u043f\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \"Alzheimer's disease\".","8abd6a32":"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0433\u0435\u043d\u043e\u0432.","16d7114d":"\u0414\u043b\u044f \u0440\u0430\u043d\u0436\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043c\u0435\u0440\u0430\u043c\u0438 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438.","f0c009c0":"\u041e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0432\u0441\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0432 \u043e\u0434\u0438\u043d \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c:"}}