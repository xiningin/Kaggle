{"cell_type":{"4762db7f":"code","ad17aed8":"code","6cfc0765":"code","ee2eafb3":"code","155b3599":"code","55e488e7":"code","03916332":"code","438eacc6":"code","323276ef":"code","c610fe4d":"code","e45e9a1e":"code","3a9fe808":"code","af44dea7":"code","e9452d6a":"code","144b0a4c":"code","5bf5945b":"code","6b8b468d":"code","f98e8d45":"code","fa35008c":"code","4ac27b7c":"code","ece44c85":"code","328c1fea":"code","1e0ab2b8":"code","568f34b3":"code","d629a775":"markdown","edfd2f5c":"markdown","9bbc03b9":"markdown","7d3056cf":"markdown","483d2169":"markdown","24879154":"markdown","7dd3f56e":"markdown","15a96834":"markdown","3e32cf7f":"markdown","11d8dee4":"markdown","e530dfe6":"markdown","cf427344":"markdown"},"source":{"4762db7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ad17aed8":"import matplotlib.pyplot as plt\nimport seaborn as sns","6cfc0765":"df=pd.read_csv('..\/input\/rainfall-in-pakistan\/Rainfall_1901_2016_PAK.csv')\ndf.head()","ee2eafb3":"df.columns","155b3599":"# Renaming columns\ndf.rename(columns={'Rainfall - (MM)':'rainfall-MM',' Year':'year','Month':'month'}, inplace=True)","55e488e7":"df.head()","03916332":"df.columns","438eacc6":"df.isna().sum()","323276ef":"df['year'].nunique()","c610fe4d":"df['year'].unique()","e45e9a1e":"plt.figure(figsize=(14,8))\nplt.plot(df.groupby(['year']).mean())\nplt.xlabel('years')\nplt.ylabel('average rainfall')\nplt.show()","3a9fe808":"df[df['year']==2016].mean()['rainfall-MM']","af44dea7":"avg_rainfall_by_month=df.groupby(df.month)['rainfall-MM'].mean()","e9452d6a":"plt.figure(figsize=(14,8))\nplt.barh(avg_rainfall_by_month.index,avg_rainfall_by_month)\nplt.show()","144b0a4c":"avg_rainfall_across_years=df.groupby(df.year)['rainfall-MM'].mean()","5bf5945b":"\nplt.figure(figsize=(14,8))\nplt.barh(avg_rainfall_across_years.index,avg_rainfall_across_years)\nplt.show()","6b8b468d":"avg_rainfall_across_years.sort_values(ascending=False)","f98e8d45":"#dataframe copy\ndf_after_2k=df.copy()","fa35008c":"#Filtering Years\ndf_after_2k=df_after_2k[df_after_2k['year']>=2000]\ndf_after_2k.head()","4ac27b7c":"#plotting the data by taking mean across the year\nplt.figure(figsize=(14,8))\nplt.plot(df_after_2k.groupby(['year']).mean())\nplt.xlabel('years')\nplt.ylabel('average rainfall')\nplt.show()","ece44c85":"#calculating mean across months\navg_rainfall_by_month_after_2k=df_after_2k.groupby(df_after_2k.month)['rainfall-MM'].mean()","328c1fea":"#Plotting average rainfall in a month after 2020\nplt.figure(figsize=(14,8))\nplt.barh(avg_rainfall_by_month_after_2k.index,avg_rainfall_by_month_after_2k)\nplt.show()","1e0ab2b8":"avg_rainfall_across_years_after_2k=df_after_2k.groupby(df_after_2k.year)['rainfall-MM'].mean()","568f34b3":"avg_rainfall_across_years_after_2k","d629a775":"Calculate mean rainfall of year","edfd2f5c":"let's find those years","9bbc03b9":"## Now let's check it after 2000","7d3056cf":"## Let's find average rainfall across months","483d2169":"# Reading data","24879154":"Unique number of years","7dd3f56e":"## Columns of dataframe\n**Note:** One thing to notice there's a space before Year column so let's rename that","15a96834":"df['quarter'] = pd.PeriodIndex(df.Month, freq='Q')","3e32cf7f":"# Dependencies","11d8dee4":"Let's sort the values to better estimate the top performer year","e530dfe6":"So the top performing month is July unexpected one :D","cf427344":"# Leading Month\nAugust take a lead this time"}}