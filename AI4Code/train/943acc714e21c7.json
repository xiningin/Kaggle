{"cell_type":{"bfe26740":"code","17d6f3e5":"code","1c4df970":"code","f0729391":"code","1a8e1a2d":"code","872f68fc":"code","2a29f2b7":"code","fbc0122c":"code","53a1ff58":"code","cd545234":"code","43d7906d":"code","99e98c97":"code","25bde85c":"code","3261562b":"code","7ff1b0b6":"code","2aea6686":"code","861bcb40":"code","21ef54d6":"code","e93c559d":"code","db92aca6":"code","feceb9c3":"code","22c32253":"code","40b898dc":"code","a4c785ea":"markdown","8a05842b":"markdown","5e431a39":"markdown","7b2985cc":"markdown","7af237d6":"markdown","e006f71a":"markdown","c2f43c4e":"markdown","49dea7d4":"markdown","7e02c6a3":"markdown","0fae709d":"markdown"},"source":{"bfe26740":"import os","17d6f3e5":"os.listdir('..\/input\/')","1c4df970":"import pandas as pd \ndf=pd.read_csv(\"..\/input\/..\/input\/autompg-dataset\/auto-mpg.csv\")\ndf","f0729391":"df[\"horsepower\"].unique()","1a8e1a2d":"df=df[df.horsepower != \"?\"]  # since we find the \"?\" ,thus removing the value ","872f68fc":"df[\"horsepower\"].unique()  # \"?\" removed successfully","2a29f2b7":"df.info()","fbc0122c":"import seaborn as sns\n#horsepower distribution\nsns.distplot(df['horsepower'], hist=True, kde=True, \n              color = 'Red',\n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 3})","53a1ff58":"#accelration disctribution\nsns.distplot(df['acceleration'], hist=True, kde=True, \n              color = 'blue',\n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 3})","cd545234":"#weight distribution\nsns.distplot(df['weight'], hist=True, kde=True, \n              color = 'blue',\n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 3})","43d7906d":"#displacement distribution\nsns.distplot(df['displacement'], hist=True, kde=True, \n              color = 'blue',\n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 3})","99e98c97":"#mpg distribution\nsns.distplot(df['mpg'], hist=True, kde=True, \n              color = 'blue',\n             hist_kws={'edgecolor':'black'},\n             kde_kws={'linewidth': 3})","25bde85c":"df[\"horsepower\"]=df.horsepower.astype(\"int64\") #changing it from object to int ","3261562b":"#orignal data \nhorepw=df[\"horsepower\"]\naccel=df[\"acceleration\"]","7ff1b0b6":"#scaled data \nscaled_horpw=whiten(horepw)\nscaled_accel=whiten(accel)","2aea6686":"from scipy.cluster.vq import whiten  #whiten hepls to scale the data \n#pusing the sacled data into data frame\ndf[\"scaled_accel\"]=scaled_accel\ndf[\"scaled_horpw\"]=scaled_horpw","861bcb40":"#plotting teh scaled data and orignal data ","21ef54d6":"import  matplotlib.pyplot as plt\n#orignal data \nplt.plot(accel,label=\"orignal\")\n#scaled data \nplt.plot(scaled_accel,label=\"scaled\")\n#legend \nplt.legend()\nplt.show()","e93c559d":"#orignal data \nplt.plot(horepw,label=\"orignal\")\n#scaled data \nplt.plot(scaled_horpw,label=\"scaled\")\n#legend \nplt.legend()\nplt.show()","db92aca6":"#first will check how many clusters we will take by the help of elbow plot\ndistortions = []\nnum_clusters = range(1, 7)\n\n# Create a list of distortions from the kmeans function\nfor i in num_clusters:\n    cluster_centers, distortion = kmeans(df[[\"horsepower\",\"acceleration\"]],i)\n    distortions.append(distortion)\n\n# Create a data frame with two lists - num_clusters, distortions\nelbow_plot = pd.DataFrame({'num_clusters': num_clusters, 'distortions': distortions})\n\n# Creat a line plot of num_clusters and distortions\nsns.lineplot(x=\"num_clusters\", y=\"distortions\", data = elbow_plot)\nplt.xticks(num_clusters)\nplt.show()","feceb9c3":"#clustering with two variables \"horsepower\" and \"acceleration\".\n# Import the kmeans and vq functions\nfrom scipy.cluster.vq import kmeans, vq\nimport seaborn as sns\n\n# Generating cluster centers\ncluster_centers, distortion = kmeans(df[[\"horsepower\",\"acceleration\"]],2)\n\n# Assigning cluster labels\ndf['cluster_labels'], distortion_list = vq(df[[\"horsepower\",\"acceleration\"]],cluster_centers)\n\n# Plotting clusters\nsns.scatterplot(x='horsepower', y='acceleration', \n                hue='cluster_labels', data = df)\nplt.show()","22c32253":"#now taking the \"weight\" and \"displacement\"\n\n#first will check how many clusters will be adiquate\ndistortions = []\nnum_clusters = range(1, 7)\n\n# Create a list of distortions from the kmeans function\nfor i in num_clusters:\n    cluster_centers, distortion = kmeans(df[[\"weight\",\"displacement\"]],i)\n    distortions.append(distortion)\n\n# Create a data frame with two lists - num_clusters, distortions\nelbow_plot = pd.DataFrame({'num_clusters': num_clusters, 'distortions': distortions})\n\n# Creat a line plot of num_clusters and distortions\nsns.lineplot(x=\"num_clusters\", y=\"distortions\", data = elbow_plot)\nplt.xticks(num_clusters)\nplt.show()","40b898dc":"#clustering with two variables \"weight\" and \"displacement\".\n# Import the kmeans and vq functions\nfrom scipy.cluster.vq import kmeans, vq\nimport seaborn as sns\n\n# Generating cluster centers\ncluster_centers, distortion = kmeans(df[[\"weight\",\"displacement\"]],2)\n\n# Assigning cluster labels\ndf['cluster_labels'], distortion_list = vq(df[[\"weight\",\"displacement\"]],cluster_centers)\n\n# Plotting clusters\nsns.scatterplot(x='weight', y='displacement', \n                hue='cluster_labels', data = df)\nplt.show()","a4c785ea":"like this we can apply it on the number of variables we like and do the kmeans clustering.\none more in done below to show it can be done on any.","8a05842b":"#we can see there is a drop after the 2, means we can give out **2 clusters** as it will be adiquate to plot.","5e431a39":"we can see there is a **\"?\"**,need to remove it from the data set.","7b2985cc":"##from the upper plot we can see that after scaling there is a drastic change in the line plot,so we will not use the scaled values.","7af237d6":"##from the upper plot we can see that after scaling there is a drastic change in the line plot,so we will not use the scaled values.","e006f71a":"#from here we can see that 2 clusters will be adiquate.","c2f43c4e":"I hope it helped you to get well across the kmeans clustring.\nif you have any douts regarding it please feel free to contact me.\n\ncheers to data science.","49dea7d4":"#acceleration has a bell curve like structure it is normally distributed.","7e02c6a3":" **now we will check the distribution of all the colums to check how they are distributed.**","0fae709d":"# Now we will do the Kmeans Clustering"}}