{"cell_type":{"bdc315e1":"code","11321351":"code","89d6a0ff":"code","150fd09e":"code","abbc65a3":"code","7bbc3771":"code","cb290ad1":"code","4e2b2958":"code","0718b434":"code","e1efb474":"code","64b4c63c":"code","0deaa881":"code","0aac7c8d":"code","fa506086":"code","f1967286":"code","194bb060":"markdown","cd93cfd3":"markdown"},"source":{"bdc315e1":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","11321351":"data = pd.read_csv('..\/input\/us-accidents\/US_Accidents_Dec19.csv')","89d6a0ff":"data.info()","150fd09e":"data.shape","abbc65a3":"data.head(3).T","7bbc3771":"!pip install folium\n","cb290ad1":"import folium\ndef plot_map1(LatLong, city=None):\n    accident_map = folium.Map(location=LatLong, \n                           tiles = \"Stamen Toner\",\n                           zoom_start = 10)\n    if city != None:\n        data_heatmap = data[data[\"City\"] == city]\n    else:\n        data_heatmap = data.copy()\n    data_heatmap = data_heatmap[['Start_Lat','Start_Lng']]\n    data_heatmap = [[row['Start_Lat'],row['Start_Lng']] for index, row in data_heatmap.iterrows()]\n    HeatMap(data_heatmap, radius=10).add_to(accident_map)\n    return accident_map","4e2b2958":"data[data['City']=='New York'].shape","0718b434":"from folium.plugins import HeatMap\nplot_map1([40.712776,-74.005974], city='New York')","e1efb474":"import plotly.graph_objects as go\nstate_count_acc = pd.value_counts(data['State'])\n\nfig = go.Figure(data=go.Choropleth(\n    locations=state_count_acc.index,\n    z = state_count_acc.values.astype(float),\n    locationmode = 'USA-states',\n    colorscale = 'Reds',\n    colorbar_title = \"Count Accidents\",\n))\n\nfig.update_layout(\n    title_text = '2016 - 2019 US Traffic Accident Dataset by State',\n    geo_scope='usa',\n)\n\nfig.show()","64b4c63c":"!pip install plotly-geo","0deaa881":"df_county = pd.read_csv('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/laucnty16.csv')\ndf_county.head(3)","0aac7c8d":"df_county['county_full'] = df_county['County Name\/State Abbreviation'].apply(lambda x: x.split(', ')[0])\ndf_county['county_name'] = df_county['county_full'].apply(lambda x: x.split(' County')[0])\n\ncounty_count_acc = pd.value_counts(data['County'])\nfips_county_df = df_county[['county_name', 'County FIPS Code', 'State FIPS Code']].merge(county_count_acc, left_on='county_name', right_index=True)","fa506086":"import plotly.figure_factory as ff\n\nfips_county_df['State FIPS Code'] = fips_county_df['State FIPS Code'].apply(lambda x: str(x).zfill(2))\nfips_county_df['County FIPS Code'] = fips_county_df['County FIPS Code'].apply(lambda x: str(x).zfill(3))\nfips_county_df['FIPS'] = fips_county_df['State FIPS Code'] + fips_county_df['County FIPS Code']\n\ncolorscale = [\"#f7fbff\", \"#ebf3fb\", \"#deebf7\", \"#d2e3f3\", \"#c6dbef\", \"#b3d2e9\", \"#9ecae1\",\n    \"#85bcdb\", \"#6baed6\", \"#57a0ce\", \"#4292c6\", \"#3082be\", \"#2171b5\", \"#1361a9\",\n    \"#08519c\", \"#0b4083\", \"#08306b\"\n]\nendpts = list(np.linspace(1,30000, len(colorscale) - 1))\nfips = fips_county_df['FIPS'].tolist()\nvalues = fips_county_df['County'].tolist()\n\n\nfig = ff.create_choropleth(\n    fips=fips, values=values, scope=['usa'],\n    binning_endpoints=endpts, colorscale=colorscale,\n    show_state_data=False,\n    show_hover=True,\n    asp = 2.9,\n    title_text = 'USA County accidents count',\n    legend_title = 'Accidents count'\n)\nfig.layout.template = None\nfig.show()","f1967286":"data_sever = data.sample(n=10000)\n\nfig = go.Figure(data=go.Scattergeo(\n        locationmode = 'USA-states',\n        lon = data_sever['Start_Lng'],\n        lat = data_sever['Start_Lat'],\n        text = data_sever['City'],\n        mode = 'markers',\n        marker = dict(\n            size = 8,\n            opacity = 0.8,\n            reversescale = True,\n            autocolorscale = False,\n            symbol = 'circle',\n            line = dict(\n                width=1,\n                color='rgba(102, 102, 102)'\n            ),\n            colorscale = 'Reds',\n            cmin = data_sever['Severity'].max(),\n        color = data_sever['Severity'],\n        cmax = 1,\n            colorbar_title=\"Severity\"\n        )))\n\nfig.update_layout(\n        title = 'Severity of accidents',\n        geo = dict(\n            scope='usa',\n            projection_type='albers usa',\n            showland = True,\n            landcolor = \"rgb(250, 250, 250)\",\n            subunitcolor = \"rgb(217, 217, 217)\",\n            countrycolor = \"rgb(217, 217, 217)\",\n            countrywidth = 0.7,\n            subunitwidth = 0.7\n        ),\n    )\nfig.show()","194bb060":"Here I download special dataset to get county codes:","cd93cfd3":"<b>Here we need to input the Logitude and Latitude of the Location to See the Map<\/b>"}}