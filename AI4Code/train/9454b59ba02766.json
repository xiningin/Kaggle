{"cell_type":{"c6b9ca82":"code","4dc30498":"code","64f25d3d":"code","d1168198":"code","96e752ac":"code","ac7e63de":"code","c66fbfdf":"code","0a32ed80":"code","ab5b0d9b":"code","cca1e660":"code","732c043b":"code","b71737c4":"code","143d625d":"code","c82c472f":"code","181328d8":"code","9ffd1eb4":"code","f4de26e7":"code","99a6cd52":"code","747ce484":"code","8612d8a9":"code","ad644ef5":"code","0d79e7eb":"code","4c833bd7":"code","711eb483":"markdown","48cb953b":"markdown","55b2ecee":"markdown","6150917b":"markdown","45171992":"markdown","04abf338":"markdown","f7df4757":"markdown","3c138c92":"markdown","66f8e0e8":"markdown","72e87abf":"markdown"},"source":{"c6b9ca82":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","4dc30498":"datasets = ['..\/input\/season-0809_csv.csv','..\/input\/season-0910_csv.csv','..\/input\/season-1011_csv.csv',\n     '..\/input\/season-1112_csv.csv','..\/input\/season-1213_csv.csv','..\/input\/season-1314_csv.csv',\n     '..\/input\/season-1415_csv.csv','..\/input\/season-1516_csv.csv','..\/input\/season-1617_csv.csv',\n     '..\/input\/season-1718_csv.csv']\nseason = ['2008\/2009','2009\/2010','2010\/2011','2011\/2012','2012\/2013','2013\/2014',\n          '2014\/2015','2015\/2016','2016\/2017','2017\/2018']\ndf = pd.DataFrame()\nfor i in range(10):\n    df_temp = pd.read_csv(datasets[i])\n    df_temp['Date'] = season[i]\n    df = pd.concat([df,df_temp])\ndf.loc[df.FTR == 'H','WinTeam'] = df.loc[df.FTR == 'H','HomeTeam']\ndf.loc[df.FTR == 'A','WinTeam'] = df.loc[df.FTR == 'A','AwayTeam']\ndf.loc[df.FTR == 'D','WinTeam'] = 'Draw'\n\n#Specify Managers for each season\nmanager1 = ['2008\/2009', '2009\/2010', '2010\/2011','2011\/2012']\nmanager2 = ['2012\/2013']\nmanager3 = ['2013\/2014']\nmanager4 = ['2014\/2015','2015\/2016','2016\/2017']\nmanager5 = ['2017\/2018']\nmanagers = ['Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde']\ndf.loc[df.Date.isin(manager1), 'Manager'] = 'Guardiola'\ndf.loc[df.Date.isin(manager2), 'Manager'] = 'Vilanova'\ndf.loc[df.Date.isin(manager3), 'Manager'] = 'Martino'\ndf.loc[df.Date.isin(manager4), 'Manager'] = 'Enrique'\ndf.loc[df.Date.isin(manager5), 'Manager'] = 'Valverde'\n\n# Extract Barca Match\ndf_barca = df.loc[(df['HomeTeam'] == 'Barcelona') | (df['AwayTeam'] == 'Barcelona')]\ndf_barca.head()","64f25d3d":"win_rate = pd.DataFrame()\nfor i in managers:\n    manager_total = df_barca[df_barca['Manager'] == i]['Date'].count()\n    manager_win = df_barca[(df_barca.WinTeam == 'Barcelona') & (df_barca.Manager == i)]['Date'].count()\n    manager_draw = df_barca[(df_barca.WinTeam == 'Draw') & (df_barca.Manager == i)]['Date'].count()\n    manager_lose = manager_total - manager_win - manager_draw\n    manager_perform = (manager_win * 3 + manager_draw) \/ manager_total\n    \n    # Win rate for Home\/Away\n    manager_home = df_barca[(df_barca.HomeTeam == 'Barcelona') & (df_barca.Manager==i)]['Date'].count()\n    manager_away = df_barca[(df_barca.HomeTeam != 'Barcelona') & (df_barca.Manager==i)]['Date'].count()\n    manager_home_win = df_barca[(df_barca.HomeTeam == 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam=='Barcelona')]['Date'].count()\n    manager_home_lose = df_barca[(df_barca.HomeTeam == 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam!='Barcelona') & (df_barca.WinTeam!='Draw')]['Date'].count()\n    manager_home_draw = df_barca[(df_barca.HomeTeam == 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam=='Draw')]['Date'].count()\n    \n    manager_away_win = df_barca[(df_barca.HomeTeam != 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam=='Barcelona')]['Date'].count()\n    manager_away_lose = df_barca[(df_barca.HomeTeam != 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam!='Barcelona') & (df_barca.WinTeam!='Draw')]['Date'].count()\n    manager_away_draw = df_barca[(df_barca.HomeTeam != 'Barcelona') & (df_barca.Manager==i) & (df_barca.WinTeam=='Draw')]['Date'].count()\n    win_rate = win_rate.append(pd.Series([i,manager_total, manager_win\/manager_total, \n                                          manager_lose\/manager_total, manager_draw\/manager_total, manager_perform, \n                                          manager_home_win\/manager_home, manager_home_lose\/manager_home, manager_home_draw\/manager_home,\n                                        manager_away_win\/manager_away, manager_away_lose\/manager_away, manager_away_draw\/manager_away]), ignore_index=True)\n    print('{}: {} Total matches, {} wins, {} losses, {} draws, {:.2f} points per match'.format(i, manager_total, manager_win, manager_lose, manager_draw, manager_perform))\n    ","d1168198":"win_rate.columns = ['Manager', 'Total_Match', 'Win_Rate', 'Lose_Rate', 'Draw_Rate','Points per match',\n                    'Win_Rate_Home', 'Lose_Rate_Home','Draw_Rate_Home',\n                   'Win_Rate_Away', 'Lose_Rate_Away', 'Draw_Rate_Away']\nwin_rate","96e752ac":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\n\nrects1 = ax.bar(index, win_rate.Win_Rate, bar_width,\n               alpha=0.5, color='g', label = 'Win Rate')\nrects2 = ax.bar(index+bar_width, win_rate.Lose_Rate, bar_width,\n               alpha=0.5, color='r', label = 'Lose Rate')\nrects3 = ax.bar(index+2*bar_width, win_rate.Draw_Rate, bar_width,\n               alpha=0.5, label = 'Draw Rate')\n\nax.set_xlabel('Managers')\nax.set_ylabel('Rate')\nax.set_title('Overall Win\/Lose\/Draw Rate')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","ac7e63de":"fig, ax =plt.subplots()\nfig.set_size_inches(20,7)\nindex = np.arange(5)\nbar_width = 0.15\n\n\nrects1 = ax.bar(index, win_rate.Win_Rate_Home, bar_width,\n               alpha=0.5, color='g', label = 'Win Rate(Home)')\nrects2 = ax.bar(index+bar_width, win_rate.Win_Rate_Away, bar_width,\n               alpha=0.5, color='blue', label = 'Win Rate(Away)')\nrects3 = ax.bar(index+2*bar_width, win_rate.Lose_Rate_Home, bar_width,\n               alpha=0.5, color='r', label = 'Lose Rate(Home)')\nrects4 = ax.bar(index+3*bar_width, win_rate.Lose_Rate_Away, bar_width,\n               alpha=0.5, color='black', label = 'Lose Rate(Away)')\nrects5 = ax.bar(index+4*bar_width, win_rate.Draw_Rate_Home, bar_width,\n               alpha=0.5, label = 'Draw Rate(Home)')\nrects6 = ax.bar(index+5*bar_width, win_rate.Draw_Rate_Away, bar_width,\n               alpha=0.5, label = 'Draw Rate(Away)')\n\nax.set_xlabel('Managers')\nax.set_ylabel('Rate')\nax.set_title('Home\/Away Win\/Lose\/Draw Rate')\nax.set_xticks(index + 5*bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","c66fbfdf":"Barca_Goal = pd.DataFrame()\nfor i in managers:\n    # Goal Counts\n    Barca_Home_GS = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['FTHG'].mean() #Barca scored as Home\n    Barca_Home_GC = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['FTAG'].mean() #Barca conceded as Home\n    Barca_Away_GS = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['FTAG'].mean() #Barca scored as Away\n    Barca_Away_GC = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['FTHG'].mean() #Barca conceded as Away\n    Barca_Total_GS = (Barca_Home_GS + Barca_Away_GS)\/2\n    Barca_Total_GC = (Barca_Home_GC + Barca_Away_GC)\/2\n    # Shoot Counts\n    Barca_Home_S = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['HS'].mean() # Barca Shoots as Home\n    Barca_Home_S_ = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['AS'].mean() # Barca's opponent Shoots\n    Barca_Away_S = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['AS'].mean() # Barca Shoots as Away\n    Barca_Away_S_ = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['HS'].mean() # Barca' opponent Shoots\n    Barca_Total_S = (Barca_Home_S + Barca_Away_S)\/2\n    Barca_Total_S_ = (Barca_Home_S_ + Barca_Away_S_)\/2\n    # Shoot on Target Counts\n    Barca_Home_ST = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['HST'].mean() # Barca Shoots on Target as Home\n    Barca_Home_ST_ = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['AST'].mean() # Barca's opponent Shoots on Target\n    Barca_Away_ST = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['AST'].mean() # Barca Shoots on Target as Away\n    Barca_Away_ST_ = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['HST'].mean() # Barca' opponent Shoots on Target\n    # Corners\n    Barca_Home_C = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['HC'].mean() # Barca Corner as Home\n    Barca_Home_C_ = df_barca.loc[(df_barca.HomeTeam=='Barcelona') & (df_barca.Manager==i)]['AC'].mean() # Barca's opponent Corner\n    Barca_Away_C = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['AC'].mean() # Barca Corner as Away\n    Barca_Away_C_ = df_barca.loc[(df_barca.HomeTeam!='Barcelona') & (df_barca.Manager==i)]['HC'].mean() # Barca' opponent Corner\n\n    Barca_Goal = Barca_Goal.append(pd.Series([i,Barca_Total_GS, Barca_Total_GC,Barca_Total_S,Barca_Total_S_,\n                                              Barca_Home_GS, Barca_Home_GC, Barca_Away_GS, Barca_Away_GC,\n                                             Barca_Home_S, Barca_Home_S_, Barca_Away_S, Barca_Away_S_,\n                                             Barca_Home_ST, Barca_Home_ST_, Barca_Away_ST, Barca_Away_ST_,\n                                             Barca_Home_C, Barca_Home_C_, Barca_Away_C, Barca_Away_C_]),ignore_index=True)\nBarca_Goal.columns = ['Manager', 'Barca_Total_Scored', 'Barca_Total_Conceded', 'Barca_Total_Shoot', 'Bara_Total_Shoot_',\n                      'Barca_Home_Scored','Barca_Home_Conceded','Barca_Away_Scored', 'Barca_Away_Conceded',\n                     'Barca_Home_Shoot','Barca_Home_Shoot_','Barca_Away_Shoot','Barca_Away_Shoot_',\n                     'Barca_Home_ST','Barca_Home_ST_','Barca_Away_ST','Barca_Away_ST_',\n                     'Barca_Home_C','Barca_Home_C_', 'Barca_Away_C', 'Barca_Away_C_']\nBarca_Goal","0a32ed80":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\n\nrects1 = ax.bar(index, Barca_Goal.Barca_Home_Scored, bar_width,\n               alpha=0.5, color='g', label = 'Home Scored')\nrects2 = ax.bar(index+bar_width, Barca_Goal.Barca_Away_Scored, bar_width,\n               alpha=0.5, color='r', label = 'Away Scored')\n\n\nax.set_xlabel('Managers')\nax.set_ylabel('Rate')\nax.set_title('Goals')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","ab5b0d9b":"goal_by = df_barca[['Manager','HomeTeam', 'AwayTeam', 'FTHG', 'FTAG','FTR']].copy()\ngoal_by['Result'] = 'Draw'\ngoal_by.loc[((goal_by['HomeTeam']=='Barcelona')&(goal_by['FTR']=='H')) |\n            ((goal_by['AwayTeam']=='Barcelona')&(goal_by['FTR']=='A')),'Result'] = 'Win'\ngoal_by.loc[((goal_by['HomeTeam']=='Barcelona')&(goal_by['FTR']=='A')) |\n            ((goal_by['AwayTeam']=='Barcelona')&(goal_by['FTR']=='H')),'Result'] = 'Lose'\ngoal_by.reset_index(drop=True,inplace=True)\ngoal, goalby=[], []\nfor i in goal_by.index:\n    if goal_by.iloc[i]['HomeTeam'] == 'Barcelona':\n        goal.append(goal_by.iloc[i]['FTHG'])\n        goalby.append(goal_by.iloc[i]['FTAG'])\n    else:\n        goal.append(goal_by.iloc[i]['FTAG'])\n        goalby.append(goal_by.iloc[i]['FTHG'])\ngoal_by['Barca_Goal'], goal_by['Opponent_Goal']= goal, goalby\n\n#goal_by.loc[goal_by.Manager=='Guardiola'].boxplot(column='Barca_Goal', by='Result')\n#goal_by.loc[goal_by.Manager=='Enrique'].boxplot(column='Barca_Goal', by='Result')\n#goal_by.loc[(goal_by.Manager=='Enrique') & (goal_by.Result=='Lose')]\n#goal_by\nplt.show()","cca1e660":"df_goal_by = pd.DataFrame({'Manager':managers})\ngoalW, goalL, goalD, goal_W, goal_L, goal_D = [], [], [], [], [], []\n\nfor i in managers:\n    goalW.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Win')]['Barca_Goal'].mean())\n    goalL.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Lose')]['Barca_Goal'].mean())\n    goalD.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Draw')]['Barca_Goal'].mean())\n    goal_W.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Win')]['Opponent_Goal'].mean())\n    goal_L.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Lose')]['Opponent_Goal'].mean())\n    goal_D.append(goal_by.loc[(goal_by.Manager==i)&(goal_by.Result=='Draw')]['Opponent_Goal'].mean())\n    \ndf_goal_by['Barca_Goal_Winner']=goalW\ndf_goal_by['Barca_Goal_Loser']=goalL\ndf_goal_by['Barca_Goal_Draw']=goalD\ndf_goal_by['Barca_GoalConceded_Winner']=goal_W\ndf_goal_by['Barca_GoalConceded_Loser']=goal_L\ndf_goal_by['Barca_GoalConceded_Draw']=goal_D\n#goal_average \ndf_goal_by","732c043b":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\nrects1 = ax.bar(index, df_goal_by.Barca_Goal_Winner, bar_width,\n               alpha=0.5, color='g', label = 'Goals as Winner')\nrects2 = ax.bar(index+bar_width, df_goal_by.Barca_Goal_Loser, bar_width,\n               alpha=0.5, color='r', label = 'Goals as Loser')\nrects3 = ax.bar(index+2*bar_width, df_goal_by.Barca_Goal_Draw, bar_width,\n               alpha=0.5, label = 'Goals in Draw Games')\n\nax.set_xlabel('Managers')\nax.set_ylabel('Average Goal')\nax.set_title('Goals in Win\/Draw\/Lose Game')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","b71737c4":"#columns = ['Manager', 'WinTeam', 'GoalC', 'OppF', 'OppC', 'BarcaY', 'BarcaR']\n\n#for i in managers:\n#    OppC.append(df_defend.loc[(df_defend.HomeTeam=='Bareclona') & (df_defend.Manager==i)]['AC'].mean() +\n#                 df_defend.loc[(df_defend.HomeTeam!='Bareclona') & (df_defend.Manager==i)]['HC'].mean())\n#    BarcaF.append(df_defend.loc[(df_defend.HomeTeam=='Bareclona') & (df_defend.Manager==i)]['HF'].mean() +\n#                 df_defend.loc[(df_defend.HomeTeam!='Bareclona') & (df_defend.Manager==i)]['AF'].mean())","143d625d":"Barca_Goal_Efficiency = pd.DataFrame({'Manager': managers})\n\nBarca_Goal_Efficiency['Total_Score_Efficiency'] = Barca_Goal['Barca_Total_Scored']\/Barca_Goal['Barca_Total_Shoot']\nBarca_Goal_Efficiency['Home_Score_Efficiency'] = Barca_Goal['Barca_Home_Scored']\/Barca_Goal['Barca_Home_Shoot']\nBarca_Goal_Efficiency['Away_Score_Efficiency'] = Barca_Goal['Barca_Away_Scored']\/Barca_Goal['Barca_Away_Shoot']\n\nBarca_Goal_Efficiency","c82c472f":"fig, ax =plt.subplots()\nfig.set_size_inches(10,8)\nindex = np.arange(5)\nbar_width = 0.25\n\nrects1 = ax.bar(index, Barca_Goal.Barca_Total_Shoot,bar_width, \n               alpha=0.5, color='g', label = 'Total Shots')\nfor i, v in enumerate(Barca_Goal['Barca_Total_Shoot'].round(2)):\n    ax.text(i-0.1,v+0.3,  str(v), color='g')\nrects2 = ax.bar(index+bar_width, Barca_Goal.Barca_Total_Scored, bar_width,\n               alpha=0.5, color='r', label = 'Total Goal Scored')\n\nfor i, v in enumerate(Barca_Goal['Barca_Total_Scored'].round(2)):\n    ax.text(i+0.15,v+0.3,  str(v), color='r')\n\nax.set_xlabel('Managers')\nax.set_ylabel('Rate')\nax.set_title('Goal & Shots')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend(loc='center')\n\nplt.show()","181328d8":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\n\nrects1 = ax.bar(index, Barca_Goal_Efficiency.Total_Score_Efficiency, bar_width,\n               alpha=0.5, color='g', label = 'Total Score Efficiency')\n\n\nline1 = ax.plot(index, Barca_Goal_Efficiency.Home_Score_Efficiency)\nline2 = ax.plot(index, Barca_Goal_Efficiency.Away_Score_Efficiency)\n\nax.set_xlabel('Managers')\nax.set_ylabel('Rate')\nax.set_title('Goal Efficiency')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","9ffd1eb4":"plt.plot(managers,Barca_Goal.Barca_Total_Conceded)\nplt.show()","f4de26e7":"df_defend = df_barca[['Date', 'HomeTeam', 'AwayTeam', 'FTR', 'HF', 'AF', 'HC', 'AC', 'HY', 'AY', 'HR', 'AR','WinTeam', 'Manager']]\n\ndf_defend.head()","99a6cd52":"df_goal_by.head()","747ce484":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\nrects1 = ax.bar(index, df_goal_by.Barca_GoalConceded_Winner, bar_width,\n               alpha=0.5, color='g', label = 'Goals Conceded as Winner')\nrects2 = ax.bar(index+bar_width, df_goal_by.Barca_GoalConceded_Loser, bar_width,\n               alpha=0.5, color='r', label = 'Goals Conceded as Loser')\nrects3 = ax.bar(index+2*bar_width, df_goal_by.Barca_GoalConceded_Draw, bar_width,\n               alpha=0.5, label = 'Goals Conceded in Draw Games')\n\nax.set_xlabel('Managers')\nax.set_ylabel('Average Goals Conceded')\nax.set_title('Goals Conceded in Win\/Draw\/Lose Game')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","8612d8a9":"df_vs = pd.DataFrame()\ndf_vs = df_barca.loc[((df_barca.HomeTeam =='Barcelona') & (df_barca.AwayTeam.isin(['Real Madrid', 'Ath Madrid']))) |\n              ((df_barca.AwayTeam=='Barcelona') & (df_barca.HomeTeam.isin(['Real Madrid', 'Ath Madrid'])))]\ndf_vs.head()","ad644ef5":"df_vs_stat = pd.DataFrame()\nfor i in managers:\n    \n    win = df_vs.loc[(df_vs.WinTeam == 'Barcelona')& (df_vs.Manager == i)]['Date'].count()\n    lose = df_vs.loc[(df_vs.WinTeam.isin(['Ath Madrid', 'Real Madrid']))& (df_vs.Manager == i)]['Date'].count()\n    draw = df_vs.loc[(df_vs.WinTeam == 'Draw')& (df_vs.Manager == i)]['Date'].count()\n    goal = (df_vs.loc[((df_vs.HomeTeam=='Barcelona') & (df_vs.Manager==i))]['FTHG'].mean() + df_vs.loc[((df_vs.AwayTeam=='Barcelona')&(df_vs.Manager==i))]['FTAG'].mean())\/2\n    goal_ = (df_vs.loc[((df_vs.HomeTeam=='Barcelona') & (df_vs.Manager==i))]['FTAG'].mean() + df_vs.loc[((df_vs.AwayTeam=='Barcelona')&(df_vs.Manager==i))]['FTHG'].mean())\/2\n    \n    total_match = df_vs.loc[df_vs.Manager==i]['Date'].count()\n    perform = (3*win + draw) \/ total_match\n    \n    df_vs_stat = df_vs_stat.append(pd.Series([i, total_match, win, lose, draw, win\/total_match, lose\/total_match, draw\/total_match, perform, goal, goal_]), ignore_index=True)\n    \ndf_vs_stat.columns=['Manager', 'Total_Match', 'Win', 'Lose', 'Draw', 'Win_Rate', 'Lose_Rate', 'Draw_Rate','Points_per_Match','Goal_Scored', 'Goal_Conceded']\ndf_vs_stat","0d79e7eb":"win_rate, lose_rate, draw_rate= df_vs_stat['Win_Rate'], df_vs_stat['Lose_Rate'], df_vs_stat['Draw_Rate']\n\nplt.figure(1, figsize=(15,3))\nplt.subplot(131)\nplt.bar(managers,win_rate,color='g',alpha=0.5)\nplt.subplot(132)\nplt.bar(managers, lose_rate,color='r',alpha=0.5)\nplt.subplot(133)\nplt.bar(managers, draw_rate,color='b',alpha=0.5)\nplt.suptitle('Win\/Lose\/Draw Rate Against Ath Mardird and Real Mardrid')\nplt.show()","4c833bd7":"fig, ax =plt.subplots()\nfig.set_size_inches(10,7)\nindex = np.arange(5)\nbar_width = 0.25\n\n\nrects1 = ax.bar(index, df_vs_stat.Goal_Scored, bar_width,\n               alpha=0.5, color='g', label = 'Barca Goals Scored')\nrects2 = ax.bar(index+bar_width, df_vs_stat.Goal_Conceded, bar_width,\n               alpha=0.5, color='r', label = 'Barca Goals Conceded')\n\n\nax.set_xlabel('Managers')\nax.set_ylabel('Goals per Match')\nax.set_title('Goals Scored\/Conceded Against Ath Mardird and Real Mardrid')\nax.set_xticks(index + bar_width \/ 2)\nax.set_xticklabels(('Guardiola', 'Vilanova', 'Martino', 'Enrique', 'Valverde'))\nax.legend()\n\nplt.show()","711eb483":"The data sets are from *[Datahub](https:\/\/datahub.io\/sports-data\/spanish-la-liga)*, which includes all the match details from 2008 to 2018 in Laliga. First thing to do is to retrieve matches of Barca and group them by managers. In order to evaluate their performances, I'll compare them with the following facts.\n\n- Win Rate\n        Overall Win Rate\n        Win Rate as Home\/Away\n- Goal Scored\n        Average Goal Scored\n        Average Goal Scored as Home\/Away\n        Average Goal Scored in Win\/Lose\/Draw Match\n        Goal Scoring Efficiency\n- Defend\n        Average Goal Conceded\n        Average Goal Conceded as Home\/Away\n        Average Goal Conceded in Win\/Lose\/Draw Match\n        Average Corners Opponents Get\n       \n- Performance against Real Madrid and Athletic Madrid\n  ","48cb953b":"Valverde scores the least goals in the winning matches. Valverde is critisized by the public about his attacking strategies. This comparison shows that he is conservative in his winning matches. \n\nMartino scores the least goals in the losing(0.6) and draw matches(0.66). ","55b2ecee":"# Defend","6150917b":"Let's see how they perform in their Win\/Lose\/Draw matches.","45171992":"# Against Atletico Mardrid and Read Mardrid\n\nThe last comparison is to find out how their team performs against \"Strong Opponents\", which are Atletico Mardrid and Real Mardrid.\n\nIn this comparison, Guardiola performs the best. He has the highest win rate, gains the highest points per match, and scores the highest goals.\n\nVilanova only gets 1.75 points per match. His team is not prepared to defend well against opponents' attack. The opponents score 1.5 goals per match.\n\nMartino and Valverde only score 1.75 goals per match and gain 2 points per match. ","04abf338":"Martino is critisized by the public about his attcking strategy. It is true since he has the lowest scoring efficiency.","f7df4757":"# Win Rate\n\nVilanova has the highest win rate as the manager and Valverde has only one game lost in his manager career.\n\nMartino has the lowest win rate, highest lose rate and the lowest points per match. \n\nHowever, the result is not the only factors to determine whether the manager is successful or not. I try to compare managers across different factor to find out their strength and weakness.","3c138c92":"# Goal Scored\n\nMatch location is an important factor that influence the players' performances. Therefore, I divides the games into Home and Away.\n\nOverall, Vilanova scores the highest average goals and Valverde scores the least.\n\nAs we can see, Martino scores the second highest goals in Home matches but the lowest Away goals. Valverde scores the least Home goals but the goal difference between Home and Away is the smallest.","66f8e0e8":"Talking about goal conceded, I also separate them by the match result. Valverde conceded most goals(5) as a loser. However, he only lost one game, so I don't take it into the comparison. Vilanova conceded the most goals in each categories.","72e87abf":"## Home\/Away Win\/Lose\/Draw Rate"}}