{"cell_type":{"0ed27a47":"code","509055f0":"code","73135751":"code","eb134bde":"code","022636e3":"code","a9cb07e9":"code","1b6cc2d9":"code","1e438be3":"code","89423728":"code","9834eb0b":"code","8e3dd2d5":"code","c24d62cb":"code","cc81f8b6":"code","e22b1222":"code","8e5706eb":"code","7677fbab":"code","ccc4f34c":"code","49c4b458":"code","4363068d":"markdown","b03ad755":"markdown","abb49e03":"markdown","3e7024c7":"markdown","be37d055":"markdown","25034934":"markdown","06f886a9":"markdown","99539794":"markdown","773b5c04":"markdown","06bf3052":"markdown"},"source":{"0ed27a47":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt","509055f0":"df_train = pd.read_csv(\"\/kaggle\/input\/heartbeat\/mitbih_train.csv\", header=None)\ndf_test = pd.read_csv(\"\/kaggle\/input\/heartbeat\/mitbih_test.csv\", header=None)\ndf_train.head()","73135751":"plt.plot(df_train.iloc[0,:186])","eb134bde":"plt.plot(df_test.iloc[0,:186])","022636e3":"X_train = df_train.values[:, :-1]\ny_train = df_train.values[:, -1].astype(int)\n\nX_test  = df_test.values[:, :-1]\ny_test  = df_test.values[:, -1].astype(int)\n\nprint(X_train.shape)\nprint(X_test.shape)","a9cb07e9":"#X_train = X_train.reshape(X_train.shape[0], X_train.shape[1], 1)\n#X_test = X_test.reshape(X_test.shape[0], X_test.shape[1], 1)\n\n#print(X_train.shape)\n#print(X_test.shape)","1b6cc2d9":"from tensorflow.keras import utils\ny_train = utils.to_categorical(y_train)\ny_test  = utils.to_categorical(y_test)\n\nprint(y_train.shape)\nprint(y_test.shape)","1e438be3":"num_classes= 5","89423728":"# Build Model\nfrom tensorflow.keras import models, layers\n\nmodel = models.Sequential()\n\nmodel.add(layers.InputLayer(input_shape=(187,)))\nmodel.add(layers.Dense(128, activation=\"relu\"))\nmodel.add(layers.Dense(32,  activation=\"relu\"))\nmodel.add(layers.Dense(num_classes, activation=\"softmax\"))\n\nmodel.summary()","9834eb0b":"# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","8e3dd2d5":"batch_size = 100\nnum_epochs = 10 ","c24d62cb":"# Train Model\nhist = model.fit(X_train, y_train, epochs=num_epochs, batch_size=batch_size, validation_data=(X_test, y_test))","cc81f8b6":"# Save Model\nmodels.save_model(model, 'ecg_arrhythmia.hdf5')","e22b1222":"from sklearn.metrics import classification_report, confusion_matrix\n\nlabels = [\"Normal\",\n          \"Artial Premature\",\n          \"Premature ventricular contraction\",\n          \"Fusion of ventricular and normal\",\n          \"Fusion of paced and normal\"]","8e5706eb":"# Test Model\npredY = model.predict(X_test)\ny_pred = np.argmax(predY,axis=1)\ny_actual = np.argmax(y_test,axis=1)\ncm = confusion_matrix(y_actual, y_pred)\nprint(cm)","7677fbab":"print(classification_report(y_actual, y_pred, target_names=labels))","ccc4f34c":"print(X_test[0].shape)","49c4b458":"pred = model.predict(X_test[0].reshape(-1, X_test[0].shape[0]))\nprint(pred)\nprint(\"predicted class =\", np.argmax(pred))","4363068d":"## Build Model","b03ad755":"### show one data","abb49e03":"## Read Dataset","3e7024c7":"## Prepare Dataset","be37d055":"# ECG DNN","25034934":"## Dataset: [ECG Heartbeat Categorization Dataset](https:\/\/www.kaggle.com\/shayanfazeli\/heartbeat)","06f886a9":"### Test 1 data","99539794":"## Save Model","773b5c04":"## Train Model","06bf3052":"## Test Model"}}