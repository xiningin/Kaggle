{"cell_type":{"d7aef1d6":"code","defbdf08":"code","c8e8d6c1":"code","b2e3e9e9":"code","066a8968":"code","8160f658":"code","eb4870bf":"code","b0d6bde4":"code","5fea54ad":"code","c044f542":"code","9e83dc6a":"code","cea96dd2":"code","17ec431f":"code","924fa5db":"markdown","23074e3f":"markdown","e18ede32":"markdown","a81faa27":"markdown","8e2fe098":"markdown","00926d7a":"markdown","27aad944":"markdown","bfedb9a9":"markdown","b4d31804":"markdown","8497de46":"markdown","9be6dbd2":"markdown","ae073c89":"markdown","3363f959":"markdown","334b8913":"markdown"},"source":{"d7aef1d6":"!pip install transformers","defbdf08":"from transformers import pipeline\nimport numpy as np","c8e8d6c1":"pipeline(\"<task-name>\")","b2e3e9e9":"pipeline(\"<task-name>\", model=\"<model_name>\")","066a8968":"pipeline('<task-name>', model='<model name>', tokenizer='<tokenizer_name>')","8160f658":"nlp_feature_extraction = pipeline('feature-extraction')\nfeatures = nlp_feature_extraction('The Book is on the table')\n\nprint(\"shape: \",np.array(features).shape)\nprint(\"\\n\")\nprint(features)","eb4870bf":"nlp_sentiment_analysis = pipeline('sentiment-analysis')\nresult = nlp_sentiment_analysis(task='I am happy after winning match.')\n\nprint(result)","b0d6bde4":"nlp_ner = pipeline('ner')\nresult = nlp_ner(task='Hugging Face is a French company based in New-York.')\n\nprint(result)","5fea54ad":"nlp_qa = pipeline('question-answering')\n\ndesc = '''\nPython is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.[28]\n\nPython is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented, and functional programming. Python is often described as a \"batteries included\" language due to its comprehensive standard library.\n'''\nq = 'who developed python?'\nresult = nlp_qa(context=desc, question=q)\n\nprint(result)","c044f542":"nlp_fill_mask = pipeline('fill-mask')\nresult = nlp_fill_mask('The ball is on the <mask>')\n\nprint(result)","9e83dc6a":"nlp_summary = pipeline('summarization')\ntxt = '''\nPython is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.[28]\n\nPython is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented, and functional programming. Python is often described as a \"batteries included\" language due to its comprehensive standard library.\n'''\nresult = nlp_summary(txt, min_length=20, max_length=50)\n\nprint(result)","cea96dd2":"nlp_trans = pipeline('translation_en_to_fr')\ntxt = '''Happy New Year'''\nresult = nlp_trans(txt)\n\nprint(result)","17ec431f":"nlp_text_generate = pipeline('text-generation')\ntxt = '''Today is a hot day. I am thinking '''\nresult = nlp_text_generate(txt, max_length=30)\n\nprint(result)","924fa5db":"#### Using default model and tokenizer for the task","23074e3f":"## Name-Entity Recognition","e18ede32":"## Translation from one language to another ","a81faa27":"#### Using custom model\/tokenizer as str","8e2fe098":"## Question Answering","00926d7a":"#### Using a user-specified model","27aad944":"### Install tranaformers ","bfedb9a9":"## Pipeline\n\nThe pipelines are a great and easy way to use models for inference. These pipelines are objects that abstract most of the complex code from the library, offering a simple API dedicated to several tasks\n\n* Feature Extraction(\"feature-extraction\") - will return a FeatureExtractionPipeline\n* Sentiment Analysis(\u201dsentiment-analysis\u201d) - will return a TextClassificationPipeline\n* Name-Entity Recognition(\u201dner\u201d) -  will return a TokenClassificationPipeline\n* Question Answering(\u201dquestion-answering\u201d) - will return a QuestionAnsweringPipeline\n* Fill Masks(\u201dfill-mask\u201d) - will return a FillMaskPipeline\n* Summarization(\u201dsummarization\u201d) - will return a SummarizationPipeline\n* Translation from one language toanother (\u201dtranslation_xx_to_yy\u201d) - will return a TranslationPipeline\n* Text Generation(\u201dtext-generation\u201d) - will return a TextGenerationPipeline\n\n\n### Pipelines encapsulate the overall process of every NLP process:\n\n* Tokenization: Split the initial input into multiple sub-entities with ... properties (i.e. tokens).\n* Inference: Maps every tokens into a more meaningful representation.\n* Decoding: Use the above representation to generate and\/or extract the final output for the underlying task.\n\n\n### Pipeline parameters\n\n* Task - The Task which we want to perform, ner, sentiment-analysis etc\n* Model - Model you are going to use for the task , like Bert,T5\n* Config - Each and everymodel has it's own configuration files , if you specify any model in model instance dont forget to provide exact config or tokenizer path or instance\n* Tokenizer - If you are going to use Bert you are going to select\n* BertTokenizer from transformer Framework - Either \"pt\" or\"tf\" pt -> Pytorch tf -> Transformers\n","b4d31804":"## Summarization","8497de46":"## Feature Extraction","9be6dbd2":"#### User can access pipeline api using below 3 ways","ae073c89":"## Sentiment Analysis","3363f959":"## Fill Masks","334b8913":"## Text Generation"}}