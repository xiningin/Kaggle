{"cell_type":{"87310f5f":"code","51061fc1":"code","b798fae0":"code","5784fbc5":"code","94ed1d51":"code","6bb4f85b":"code","6a56add3":"code","1c1849ea":"code","9e49a281":"code","ef56e96a":"code","22b93860":"code","9f26412c":"code","a9c7efb2":"code","66196a46":"code","0de268a2":"code","f022f232":"code","471279a2":"code","59627ade":"code","33303ecc":"code","adc1d029":"code","7519c4bd":"code","10628a22":"code","ed63f49d":"code","2cb0190c":"code","e1c67c18":"code","94a21819":"code","c402265f":"code","1b4f7e08":"code","d60dcbd2":"code","2f37e459":"code","bce38a17":"code","27d92df3":"code","ea05321a":"code","30d41bab":"code","59ca56b6":"code","382c08b4":"code","d22f4687":"markdown","484332f8":"markdown","d8457a2d":"markdown","da3f9fef":"markdown","f40ddff9":"markdown","d977c702":"markdown","34c99f9f":"markdown","1d3dd8f4":"markdown","c207d771":"markdown","64839426":"markdown","171804b6":"markdown","54ec0db3":"markdown"},"source":{"87310f5f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","51061fc1":"df= pd.read_csv('\/kaggle\/input\/fifa19\/data.csv')","b798fae0":"df.head()","5784fbc5":"df=df.drop('Unnamed: 0',1)","94ed1d51":"df.head()","6bb4f85b":"df.columns","6a56add3":"df.info()","1c1849ea":"df.describe()","9e49a281":"df.describe(include='O')","ef56e96a":"data= df.drop(['ID', 'Photo', 'Flag', 'Club Logo', 'Loaned From', 'Jersey Number', 'Volleys'], axis=1)\ndata.head()","22b93860":"def strip_prefix_suffix(value):\n    \n    if value==np.nan:\n        new_value=float(0)\n    else:\n        value=value.replace('\u20ac','')\n        if value[-1]=='K':\n            new_value=float(value.replace('K',''))\n        else:\n            new_value=float(value.replace('M',''))*1000\n    return new_value","9f26412c":"data['Value']= data['Value'].apply(lambda x : strip_prefix_suffix(x))\ndata['Wage']= data['Wage'].apply(lambda x : strip_prefix_suffix(x))","a9c7efb2":"data['Joined']= pd.to_datetime(data['Joined'], format='%b %d, %Y').apply(lambda x: x.year).fillna(0).astype(int)","66196a46":"data['Contract Valid Until']= pd.to_datetime(data['Contract Valid Until'])","0de268a2":"data['Release Clause']= data['Release Clause'].fillna(\"0\").apply(lambda x : strip_prefix_suffix(x))","f022f232":"data['Height']= data['Height'].fillna(\"0'0\").apply(lambda x: round(int(x.split(\"'\")[1])\/12+int(x.split(\"'\")[0]),2))","471279a2":"data['Weight']= data['Weight'].fillna('0').apply(lambda x: x.replace('lbs', '')).astype(float)","59627ade":"null_values= data.isnull().sum()\nnull_values","33303ecc":"#columns having null values\nindexes= [i for i in null_values[null_values>0].index]\nindexes","adc1d029":"#numerical columns having null values\ncols_missing_value=[index for index in indexes if index in data.columns and data[index].dtype!='O']\ncols_missing_value","7519c4bd":"#mean imputation for all numerical features with missing values\nfor col in cols_missing_value:\n    if col!='Contract Valid Until':\n        data[col]= data[col].fillna(data[col].mean())","10628a22":"#verifying\ndata.isnull().sum()","ed63f49d":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","2cb0190c":"fig, ax= plt.subplots(1, 2, figsize=(15,8))\n\nsns.distplot(data['Overall'], bins=15, ax=ax[0])\nax[0].set_title('Density plot of Overall')\nsns.boxplot(y=data['Overall'], ax=ax[1])\nax[1].set_title('Boxplot distribution of Overall')\nplt.show()","e1c67c18":"target=data['Overall']\ncols=['Overall','Value', 'Wage', 'International Reputation', 'Height', 'Weight', 'Release Clause']","94a21819":"sns.pairplot(data[cols])\nplt.show()","c402265f":"data[cols].corr()","1b4f7e08":"contract2020= data[data['Contract Valid Until']=='2020-01-01']\ncontract2020['Rank']= contract2020['Overall'].rank(method='dense', ascending=False)","d60dcbd2":"top20 = contract2020.sort_values(['Rank', 'Value'], ascending=[True, False]).head(20)\ntop20","2f37e459":"#average wage\n\nprint('The average wage for this set of players is: \u20ac',top20['Wage'].mean(),'K')\n\nplt.figure(figsize=(15,8))\nsns.barplot(y=top20['Wage'], x=top20['Name'])\nplt.xticks(rotation=90)\nplt.xlabel(None)\nplt.ylabel('Wage in \u20ac(thousands)')\nplt.show()","bce38a17":"#average age\n\nprint('The average age for this set of players is: ', top20['Age'].mean(), 'years')\n\n","27d92df3":"#correlation Overall rating vs Value\n\nplt.figure(figsize=(15,8))\nsns.boxplot(x= top20['Overall'], y=top20['Value'])\nplt.ylabel('Value in \u20ac(thousands)')\n\nplt.show()\nprint(round(top20[['Overall', 'Value']].corr()['Value'][0]*100, 2))","ea05321a":"pp= data.groupby(by=['Position']).apply(lambda x : x.sort_values('Overall', ascending=False).head(5))","30d41bab":"#checking for duplicate names\npp['Name'].duplicated().sum()","59ca56b6":"#average wage for top 5 in every position\n\nmean_pp= pp['Wage'].groupby(by=['Position']).apply(np.mean)","382c08b4":"plt.figure(figsize=(15,8))\nmean_pp.sort_values().plot(kind='bar')\nplt.ylabel('Wage in \u20ac(thousands)')\nplt.show()","d22f4687":"Checking for missing values and do a mean\/median imputation where necessary.","484332f8":"ANALYSIS","d8457a2d":"Overall vs Value, Wage, International Reputation, Height, Weight and Release Clause","da3f9fef":"Top 5 players by Overall rating for each unique position","f40ddff9":"OBSERVATIONS:\n    \n1. The  pairplots are showing positive linear correlation between the features\n2. To verify this and get actual measure of relation we can look at correlation values","d977c702":"Dropping columns unnecessary for analysis","34c99f9f":"OBSERVATIONS:\n1. Top 5 Strikers(ST) have the highest wage when ranked by Rating\n2. Top 5 Left Wing Backs(LWB) have the lowest wage","1d3dd8f4":"OBSERVATIONS: \n\n1. The density plot is normally distributed and having peakedness around 65-70\n2. The boxplot identifies outliers at minima as well as maxima, so outlier treatment needs to be done, before we train the data for any model","c207d771":"OBSERVATIONS:\n\n1. For the top 20 players whose contract ends in 2020 we are having OverallRating between 85 to 91\n2. The median Value ranges from \u20ac32000K ~ \u20ac68000K\n3. For Overallrating=90 we only have a single value hence we get at flatline at  \u20ac60000K","64839426":"Distribution of Overall rating for all players. ","171804b6":"The following columns need to be converted for further analysis:\n\n'Value' Convert to Float and getting rid of currency symbol and suffix \n\n'Wage' Convert to Float and rid of currency symbol and suffix.\n\n'Joined' Convert to int with only year\n\n'Contract Valid Until' Convert to datetime type\n\n'Height' Convert to Float with decimal points\n\n'Weight' Remove the suffix and convert to float\n\n'Release Clause' Convert to Float and get rid of currency symbol and suffix.\n","54ec0db3":" Top 20 players ranked by Overall score and whose contract expires in 2020"}}