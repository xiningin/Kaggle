{"cell_type":{"d665bc9c":"code","f43f5396":"code","c5574793":"code","9574e48a":"code","6d651602":"code","cc4f37a8":"code","8e1f676c":"code","def734cd":"code","36dbebe9":"code","a5233c45":"code","d947e5a6":"code","8b19f1e8":"code","f797b42e":"code","79d17868":"code","301cebee":"code","38c2c223":"code","659b2ba1":"code","b174eb9f":"code","9189bcc0":"code","893305bc":"code","85d60462":"code","787c1ed4":"code","8bf94d30":"code","56f9159e":"code","0336b395":"code","8185ca8f":"code","c7e094bf":"code","5e195005":"code","4932045d":"code","ca5ad9c3":"code","77a3cd75":"markdown"},"source":{"d665bc9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f43f5396":"train = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/health-insurance-cross-sell-prediction\/test.csv')","c5574793":"train.head()","9574e48a":"len(train)","6d651602":"len(test)","cc4f37a8":"test.head()","8e1f676c":"test.isna().sum()","def734cd":"import matplotlib.pyplot as plt\nimport seaborn as sns","36dbebe9":"train_sample = train","a5233c45":"train_sample.dtypes\n","d947e5a6":"train_sample['Response'] = train_sample['Response'].astype('category')","8b19f1e8":"sns.pairplot(train_sample[['Region_Code','Age','Response']], hue='Response',  size=2.5)","f797b42e":"sns.pairplot(train)","79d17868":"train_sample.drop(['id'], inplace=True, axis =1)","301cebee":"train_sample = pd.get_dummies(train_sample, drop_first=True)","38c2c223":"train_sample.head()","659b2ba1":"train_sample.dtypes","b174eb9f":"train_sample['Gender_Male'] = train_sample['Gender_Male'].astype('int64')\ntrain_sample['Vehicle_Age_< 1 Year'] = train_sample['Vehicle_Age_< 1 Year'].astype('int64')\ntrain_sample['Vehicle_Age_> 2 Years'] = train_sample['Vehicle_Age_> 2 Years'].astype('int64')\ntrain_sample['Vehicle_Damage_Yes'] = train_sample['Vehicle_Damage_Yes'].astype('int64')","9189bcc0":"train_sample.dtypes\n","893305bc":"sns.pairplot(train_sample)","85d60462":"from sklearn.linear_model import LogisticRegression \n\nlr = LogisticRegression()","787c1ed4":"X = train_sample.iloc[:,:-1]","8bf94d30":"Y = train_sample.iloc[:,-1]","56f9159e":"lr.fit(X,Y)","0336b395":"test_sample = pd.get_dummies(test, drop_first =True)","8185ca8f":"test_sample.dtypes","c7e094bf":"test_sample['Gender_Male'] = test_sample['Gender_Male'].astype('int64')\ntest_sample['Vehicle_Age_< 1 Year'] = test_sample['Vehicle_Age_< 1 Year'].astype('int64')\ntest_sample['Vehicle_Age_> 2 Years'] = test_sample['Vehicle_Age_> 2 Years'].astype('int64')\ntest_sample['Vehicle_Damage_Yes'] = test_sample['Vehicle_Damage_Yes'].astype('int64')","5e195005":"test_sample.drop(['id'], inplace = True, axis = True)","4932045d":"y_pred = lr.predict(test_sample)","ca5ad9c3":"y_pred","77a3cd75":"There are no null values in the entire test and train data sets "}}