{"cell_type":{"79386f7f":"code","022e4209":"code","94ea88a3":"code","04ad378f":"code","f5958605":"code","7d7884a6":"code","a94f8888":"code","3fbd035e":"code","16240cdf":"code","559cca21":"code","936f9f75":"code","5e95f59a":"code","59c1ffef":"code","872f8ea2":"code","6a723c7b":"code","bdf8526a":"code","db3a9461":"code","2a3f469c":"code","82b2a53f":"code","38a375e4":"code","92a804e3":"code","4fb48300":"code","1f1af3b2":"code","d7574604":"code","30065dc7":"code","242a757c":"code","0942fba2":"code","8edb0eb3":"code","d86cab35":"code","c31b55b5":"code","d08c4b4b":"code","c75df522":"code","54e02f73":"code","f3405acb":"code","e0e505c6":"code","e7453db7":"code","0b7e30de":"code","bc11e48c":"code","e9cc55c9":"code","18b1a5d9":"code","8ff97f3a":"code","c1c8034e":"code","d55868f1":"code","b14f527a":"code","a5a27423":"code","b24c51f0":"code","31562cb8":"code","f21852e3":"code","bede1ed6":"code","44cb5554":"code","0c3b83c6":"code","4c0e4b52":"code","47727d72":"code","7440e51c":"code","d8cfa42a":"code","1c60ce21":"code","1a5439b4":"code","fb237aaa":"code","98771b92":"code","77e2ef85":"code","d8481f79":"code","3db81795":"code","9421ada2":"code","e6a64b53":"code","4f781571":"code","ac52f5f9":"code","08c85d6c":"code","4ea20530":"code","aef3ba71":"markdown","dd3d04d0":"markdown","28e54135":"markdown","bce4b55f":"markdown","8b0d1155":"markdown","ac0e538a":"markdown","4d1c7df8":"markdown","a8785aa1":"markdown","46412c3f":"markdown","1599d78f":"markdown","a190c994":"markdown","46236bd9":"markdown","84165aff":"markdown","c8c5adfd":"markdown","51976b50":"markdown","5d229f82":"markdown","aad64211":"markdown","242f4568":"markdown","4bf7de63":"markdown","82a63e3b":"markdown","c5090971":"markdown","9122729a":"markdown","ceeb239e":"markdown","a823ee42":"markdown","c5f377c4":"markdown","4d604c8f":"markdown","effba2e6":"markdown","47671a20":"markdown","b55b27da":"markdown","9cb71e98":"markdown","32e1a6d0":"markdown","917e9dd5":"markdown","992dcb49":"markdown","77c1ed22":"markdown","7f37b26c":"markdown","71df11fb":"markdown","499bbc99":"markdown","254e34df":"markdown","290b6f24":"markdown","79c8e10a":"markdown","4046d615":"markdown","f172da65":"markdown","d936cf4f":"markdown","7d291d79":"markdown","23b05b25":"markdown","c809f57e":"markdown","17055e1d":"markdown","928f76a5":"markdown","033cf051":"markdown","d6f3940c":"markdown","d14b16b9":"markdown","8a4cad05":"markdown"},"source":{"79386f7f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n\nimport seaborn as sns\nsns.set(style=\"darkgrid\")\n\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","022e4209":"df=pd.read_csv('..\/input\/seaborn-datasets\/repository\/mwaskom-seaborn-data-23ee2ba\/diamonds.csv')","94ea88a3":"df.head()","04ad378f":"df.info()","f5958605":"sns.relplot(x=\"carat\",y=\"price\",data=df,height=7)","7d7884a6":"sns.relplot(x=\"carat\", y=\"price\",data=df,height=7, alpha=0.25, edgecolor=None)","a94f8888":"# Add \"clarity\" variable as color\nsns.relplot(\n            x=\"carat\",\n            y=\"price\",\n            hue=\"clarity\", # added to color axis\n            data=df,\n            height=7,\n            palette=\"Set1\", # change color palette \n            edgeColor=None)","3fbd035e":"sns.relplot(\n            x=\"carat\",\n            y=\"price\",\n            hue=\"clarity\",\n            size=\"depth\",   ###\n            style=\"color\",  ###\n            data=df,\n            palette=\"CMRmap_r\",\n            edgecolor=None,\n            height=7)","16240cdf":"df1=df.iloc[:250]\n\n","559cca21":"sns.relplot(x=\"carat\",y=\"depth\",data=df1,kind=\"line\",ci=None)","936f9f75":"fmri=pd.read_csv('..\/input\/seaborn-datasets\/repository\/mwaskom-seaborn-data-23ee2ba\/fmri.csv')","5e95f59a":"fmri.head()","59c1ffef":"fmri.info()","872f8ea2":"sns.relplot(x=\"timepoint\",y=\"signal\",kind=\"line\",data=fmri,height=7)","6a723c7b":"sns.relplot(x=\"timepoint\", y=\"signal\", kind=\"line\", data=fmri, ci=\"sd\", height=7)","bdf8526a":"sns.relplot(x=\"timepoint\", y=\"signal\", kind=\"line\", data=fmri, ci=None, height=7)","db3a9461":"sns.relplot(\n            x=\"timepoint\",\n            y=\"signal\",\n            size=\"event\",\n            style=\"region\",\n            markers=True,\n            kind=\"line\",\n            data=fmri,\n            hue=\"region\",\n            height=7\n            )\n\nplt.savefig(\"graph2.png\")","2a3f469c":"sns.relplot(x=\"timepoint\",\n            y=\"signal\",\n            col=\"region\", # show region in columns\n            data=fmri,\n            height=7)","82b2a53f":"sns.relplot(x=\"timepoint\",\n            y=\"signal\",\n            col=\"region\", # show region in columns\n            row=\"event\",  # show event in rows\n            kind=\"line\",\n            data=fmri,\n            height=7)","38a375e4":"sns.relplot(x=\"timepoint\", y=\"signal\", \n            col=\"subject\", kind=\"line\",\n            data=fmri)","92a804e3":"sns.relplot(x=\"timepoint\", \n            y=\"signal\", \n            col=\"subject\", \n            col_wrap=4,\n            kind=\"line\",\n            data=fmri)","4fb48300":"data=pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","1f1af3b2":"data.head()","d7574604":"data.info()","30065dc7":"data.dropna(how=\"any\",inplace = True)\ndata.info()\n","242a757c":"data.Year = data.Year.astype(int)","0942fba2":"# \n\nplatform_count = Counter(data.Platform)\nmost_platform=platform_count.most_common(20)\nplatform_name,count = zip(*most_platform)\nplatform_name,count = list(platform_name),list(count)\n\n# visualization\n\nplt.figure(figsize=(15,10))\nax=sns.barplot( x = platform_name, y = count, palette = 'rocket')\nplt.xlabel('Platform')\nplt.ylabel('Frequency')\nplt.title('Most common 20 of Platform')\nplt.show()\n","8edb0eb3":"# 2013-2016 \nfirst_filter=data.Year>2012\nsecond_filter=data.Year<2017\nnew_data=data[first_filter&second_filter]\n\nplt.figure(figsize=(15,10))\nsns.catplot(x=\"Year\",y=\"Global_Sales\",kind=\"bar\",\n            hue=\"Platform\",\n            data=new_data,\n            edgecolor=None,\n            height=8.27, aspect=11.7\/8.27,ci=None)\nplt.show()","d86cab35":"#2010-2016\nfirst_filter=data.Year>2009\nsecond_filter=data.Year<2017\nnew_data1=data[first_filter&second_filter]\n\n\n#visualization\n\nsns.catplot(x=\"Year\",y=\"NA_Sales\",kind=\"point\",\n            data=new_data1,\n            hue = \"Platform\",\n            palette='Set1',\n            ci = None,\n            edgecolor=None,\n            height=8.27, \n            aspect=11.7\/8.27)\nplt.show()","c31b55b5":"data1=data[['Year','Genre','Global_Sales']]\ndata1=data1.set_index('Year')\ndata2010=[]\ndata2010.append([sum(data1.loc[2010].Genre=='Shooter'),sum(data1.loc[2010].Genre=='Sports'), sum(data1.loc[2010].Genre=='Action'),sum(data1.loc[2010].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2011].Genre=='Shooter'),sum(data1.loc[2011].Genre=='Sports'), sum(data1.loc[2011].Genre=='Action'),sum(data1.loc[2011].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2012].Genre=='Shooter'),sum(data1.loc[2012].Genre=='Sports'), sum(data1.loc[2012].Genre=='Action'),sum(data1.loc[2012].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2013].Genre=='Shooter'),sum(data1.loc[2013].Genre=='Sports'), sum(data1.loc[2013].Genre=='Action'),sum(data1.loc[2013].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2014].Genre=='Shooter'),sum(data1.loc[2014].Genre=='Sports'), sum(data1.loc[2014].Genre=='Action'),sum(data1.loc[2014].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2015].Genre=='Shooter'),sum(data1.loc[2015].Genre=='Sports'), sum(data1.loc[2015].Genre=='Action'),sum(data1.loc[2015].Genre=='Role-Playing')])\ndata2010.append([sum(data1.loc[2016].Genre=='Shooter'),sum(data1.loc[2016].Genre=='Sports'), sum(data1.loc[2016].Genre=='Action'),sum(data1.loc[2016].Genre=='Role-Playing')])\n\ndf=pd.DataFrame(data2010,columns = ['Shooter' , 'Sports', 'Action','Role-Playing'])\ndf['Year']=[2010,2011,2012,2013,2014,2015,2016]\n\n#visual\n\nf,ax1 = plt.subplots(figsize =(20,10))\n\nsns.pointplot(x='Year',y='Action',data=df,color='lime',alpha=0.7)\nsns.pointplot(x='Year',y='Shooter',data=df,color='red',alpha=0.7)\nsns.pointplot(x='Year',y='Sports',data=df,color='blue',alpha=0.7)\nsns.pointplot(x='Year',y='Role-Playing',data=df,color='orange',alpha=0.7)\n\n\nplt.xlabel('Years',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.text(5.7,240,'Action',color='lime',fontsize = 15,style = 'italic')\nplt.text(5.7,230,'Shooter',color='red',fontsize = 15,style = 'italic')\nplt.text(5.7,220,'Sports',color='blue',fontsize = 15,style = 'italic')\nplt.text(5.7,210,'Role-Playing',color='orange',fontsize = 15,style = 'italic')\nplt.grid()","d08c4b4b":"iris=pd.read_csv('..\/input\/iris\/Iris.csv')","c75df522":"iris.head()","54e02f73":"iris.info()","f3405acb":"iris.corr()","e0e505c6":"sns.jointplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris)","e7453db7":"sns.jointplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris, kind=\"hex\", height=8)\n","0b7e30de":"sns.jointplot(x=\"SepalLengthCm\",y=\"PetalLengthCm\",data=iris, kind=\"kde\",height=8)","bc11e48c":"iriscorr=iris.drop([\"Id\"],axis=1).corr()\niriscorr","e9cc55c9":"#correlation map\n\nf, ax = plt.subplots(figsize=(7,7))\nsns.heatmap(iriscorr, annot=True, linewidths=0.2, fmt='.2f', ax=ax, cmap=\"rocket_r\" )\nplt.show()","18b1a5d9":"nRowsRead = 1000 # specify 'None' if want to read whole file\ncars = pd.read_csv('..\/input\/cars-mini-dataset\/cars.csv', delimiter=';', nrows = nRowsRead)\ncars.dataframeName = 'cars.csv'\nnRow, nCol = cars.shape\nprint(f'There are {nRow} rows and {nCol} columns')","8ff97f3a":"cars.info()","c1c8034e":"cars.head()","d55868f1":"f, ax = plt.subplots(figsize=(6,8))\n\nsns.boxplot(x=\"Origin\", \n            y=\"Horsepower\", \n            data=cars,\n            palette='Set2',\n            ax=ax)","b14f527a":"f, ax = plt.subplots(figsize=(8,10))\nsns.boxplot(x=\"Origin\", \n            y=\"Horsepower\",\n            hue=\"Cylinders\",\n            data=cars,\n            palette='tab10',\n            ax=ax)","a5a27423":"\nsns.catplot(x=\"Origin\", \n            y=\"Horsepower\",\n            hue=\"Cylinders\",\n            data=cars,\n            palette='tab20',\n            kind=\"box\",\n            height=8\n            )","b24c51f0":"sns.catplot(x=\"Origin\", \n            y=\"Horsepower\",\n            data=cars,\n            palette='inferno',\n            kind=\"boxen\",\n            height=8\n            )\nplt.savefig('graph.png')","31562cb8":"fmri.head()","f21852e3":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"subject\",\n              y=\"signal\",\n              data=fmri,\n              ax=ax,\n              palette=\"hsv\")","bede1ed6":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"signal\",\n              y=\"subject\",\n              data=fmri,\n              ax=ax,\n              palette=\"hsv\")","44cb5554":"f, ax = plt.subplots(figsize=(10,8))\nsns.stripplot(x=\"subject\",\n              y=\"signal\",\n              data=fmri,\n              jitter=False,\n              alpha=0.25,\n              ax=ax,\n              palette=\"hsv\")\nplt.savefig(\"graph1.png\")","0c3b83c6":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              data=fmri\n              )","4c0e4b52":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              hue=\"event\",\n              data=fmri,\n              palette=\"rocket\"\n              )","47727d72":"f, ax = plt.subplots(figsize=(8,8))\nsns.swarmplot(x=\"region\",\n              y=\"signal\",\n              data=fmri,\n              palette=\"CMRmap\",\n              alpha=0.5\n              )\nsns.boxplot(x=\"region\",\n            y=\"signal\",\n            data=fmri,\n            palette=\"Set1\",\n            )","7440e51c":"df1.head()","d8cfa42a":"f, ax = plt.subplots(figsize=(10,8))\nsns.countplot(x=\"color\",\n              hue=\"cut\",\n              data=df1,\n              edgecolor=None,\n              palette=\"inferno\",\n              ax=ax)","1c60ce21":"\nsns.pairplot(iris, kind=\"reg\",\n             x_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             y_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             height=5)","1a5439b4":"sns.pairplot(iris, kind=\"reg\",\n             x_vars=[\"SepalLengthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             y_vars=[\"SepalWidthCm\",\"PetalLengthCm\",\"PetalWidthCm\"],\n             height=5)","fb237aaa":"f, ax = plt.subplots(figsize=(8,8))\nsns.violinplot(x=\"Origin\", y=\"Horsepower\", data=cars, ax=ax, inner=\"points\")","98771b92":"sns.catplot(x=\"Origin\", y=\"Horsepower\", data=cars, kind=\"violin\", height=8)","77e2ef85":"cars[\"Old\"] = cars.Year < 76","d8481f79":"sns.catplot(x=\"Origin\",\n            y=\"Horsepower\",\n            hue = \"Old\",\n            data=cars,\n            split=True, # You need to turn on this parameter!\n            inner = \"stick\", \n            kind=\"violin\",\n            palette=\"Blues\",\n            height=8\n           )","3db81795":"sns.lmplot(x=\"PetalLengthCm\", y=\"PetalWidthCm\", data=iris, height=7)","9421ada2":"sns.regplot(x=\"PetalLengthCm\", y=\"PetalWidthCm\", data=iris,order=3)","e6a64b53":"sns.lmplot(x=\"SepalLengthCm\",\n           y=\"PetalWidthCm\",\n           hue=\"Species\",\n           data=iris,\n           height=7)","4f781571":"cylinder8 = cars.loc[cars.Cylinders == 8]\ncylinder5 = cars.loc[cars.Cylinders == 5]\n\nf, ax = plt.subplots(figsize=(10,8))\n\nsns.kdeplot(cylinder8.Horsepower, cylinder8.Weight, cmap=\"Reds\", shade=True, shade_lowest=False, alpha=0.9)\nsns.kdeplot(cylinder5.Horsepower, cylinder5.Weight, cmap=\"Blues\", shade=True, shade_lowest=False, alpha=1)","ac52f5f9":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth, kde=False)","08c85d6c":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth, hist=False, kde=True)","4ea20530":"f, ax = plt.subplots(figsize=(7,7))\nsns.distplot(df1.depth)","aef3ba71":"<a id=\"2\"><\/a> \n## Relational Plot(relplot)\n\n","dd3d04d0":"It is possible to have a **\"standard deviation\"** instead of a **\"confidence interval\"**. For this we need to add **ci = \"sd\"** parameter.","28e54135":"### With catplot","bce4b55f":"> **countplot** shows the numbers in each category. Here we just need to write x or y. If we want, we can set the **hue** parameter.","8b0d1155":"Variables can be defined in rows as we define in columns.","ac0e538a":"<a id=\"5\"><\/a> \n#### Example 3: <font color=#696969>multi-graphical representation using relplot<\/font>","4d1c7df8":"Often it is not enough to display on a single chart, it may be necessary to divide the chart into pieces and show different variables within those parts. There is a function called **subplots** in the **matplotlib** library. With the **subplots** function you need to divide the chart and determine what area to plot.","a8785aa1":"<a id=\"15\"><\/a> \n## Strip Plot","46412c3f":"<a id=\"24\"><\/a>\n# distplot (distribution plots)\n\n **distplot** is used to plot univariate distributions.\n \n>  This function does not use dataframe. For this reason, we need to give the variable we want to draw directly.","1599d78f":"## Tip: If the x and y variables are not the same, we cannot see the histograms in between.","a190c994":"> **Tip: When the number of categories is high, you can choose to move the categorical variable to the y-axis, that is, visualize the chart horizontally.**","46236bd9":"> **Tip:** If we give the *hue* parameter as a categorical variable, it will show them side by side as *boxplot*.","84165aff":"## We can draw the same graph with ***catplot***.","c8c5adfd":"\n### Warning: the \"swarm plot\" data set may run very slowly when large.","51976b50":"<a id=\"18\"><\/a> \n## Count Plot","5d229f82":"The graphic above is nice but why did the **seaborn** behave like this?\n\n> Because **seaborn** understood more than one measurement result in a time frame and showed the mean and 95% reliability values of these measurements as the default behavior.","aad64211":"<a id=\"13\"><\/a> \n# Box Plot \n\n> Boxplots are a standardized way of displaying the distribution of data based on a five number summary (\u201cminimum\u201d, first quartile (Q1), median, third quartile (Q3), and \u201cmaximum\u201d).","242f4568":"<a id=\"25\"><\/a>\n### plot the histogram with the distplot","4bf7de63":"> To do so, just change the location of x and y **seaborn** takes care of the rest.","82a63e3b":"If you use the **seaborn** library you can do this automatically. How Does?","c5090971":"<a id=\"16\"><\/a> \n## Swarm Plot","9122729a":"<a id=\"4\"><\/a> \n#### Example 2: <font color=#696969>show line graphs with relplot<\/font>","ceeb239e":"Let's add another dimension to the chart. But the size we will add is to change the color scale. So let's assign color to a variable. It's easy to do with **seaborn**. You just change the **hue** parameter.","a823ee42":"We can use the **col_wrap** parameter to visualize them on a specific number of lines.","c5f377c4":"> **Tip: The default behavior of the distplot function is to have both the histogram and kde plotted.**","4d604c8f":"<a id=\"6\"><\/a> \n## Bar Plot","effba2e6":"<a id=\"22\"><\/a>\n### Multiple regression with lmplot","47671a20":"If we wish, we can assign any variable as color in this swarm chart. For example, let's assign the variable **\"event\"** as **hue**.","b55b27da":"<a id=\"19\"><\/a> \n## Pair Plot","9cb71e98":"<a id=\"14\"><\/a> \n## *boxenplot*","32e1a6d0":"<a id=\"26\"><\/a>\n### plot the kde(kernel density estimation) with the distplot","917e9dd5":"<a id=\"8\"><\/a> \n## Joint Plot\n\n> **jointplot** is used to examine the probability distributions of two variables. There are also small distribution functions for each variable at the edges.","992dcb49":"<a id=\"20\"><\/a> \n## Violin Plot\n\n> **This is the favorite chart of many people. With \"Kde: kernel density estimation\" method, the violin-like distributions are drawn.**","77c1ed22":"<a id=\"11\"><\/a>\n#### Example 3: <font color=#696969>**kde representation with jointplot**<\/font> \n\n> *  pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n> *  If it is zero, there is no correlation between variables\n> *  Show the joint distribution using **kde**(kernel density estimation)","7f37b26c":"### References\n\n* https:\/\/www.kaggle.com\/kanncaa1\/seaborn-tutorial-for-beginners\n \n* https:\/\/www.datafloyd.com\/tr\/seaborn-kutuphanesi-ile-gorsellestirme","71df11fb":"We used the color variable as an axis \/ dimension.\nCan we find other axes in a similar way?\nOur answer is yes! For example, let's assign the variables **style** and **size**.","499bbc99":"<a id=\"21\"><\/a> \n## lmplot and regplot (linear model plots)\n\n> The **lmplot** and **regplot** functions are used to represent the linear (or nth degree) relationship between two variables.","254e34df":"![](https:\/\/miro.medium.com\/max\/1838\/1*2c21SkzJMf3frPXPAR_gZA.png)","290b6f24":"## How to fold a row or column?","79c8e10a":"<a id=\"12\"><\/a> \n## Heatmap","4046d615":"### Tip: You can turn off the vibration parameter by setting \"**jitter = False**\".","f172da65":"<a id=\"7\"><\/a>\n## Point Plot","d936cf4f":"## you can change parameters of joint plot\n## kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }","7d291d79":"<a id=\"1\"><\/a> \n# Why use seaborn?\n\n* seaborn allows you to make beautiful visualizations with very short codes.\n* If you use pandas for your data analysis, it is a perfect match for you.\n* Optimized for statistical analysis.\n* It is a well-known and widespread tool among data scientists.\n","23b05b25":"# INTRODUCTION\n1. [Why use seaborn?](#1)\n<br>\n<br>\n1.  Plot Contents:\n    * 2.1 [Relational Plot](#2)\n        * 2.1.1 [binary (and more) variable analysis with](#3) relplot\n        * 2.1.2 [show line graphs with](#4) relplot\n        * 2.1.3 [multi-graphical representation using](#5) relplot\n    * 2.2 [Bar Plot](#6)\n    * 2.3 [Point Plot](#7)\n    * 2.4 [Joint Plot](#8)\n         * 2.4.1 [scatter representation with](#9) jointplot\n         * 2.4.2 [hexbin representation with](#10) jointplot\n         * 2.4.3 [kde representation with](#11) jointplot\n    * 2.5 [Heatmap](#12)\n    * 2.6 [Box Plot](#13)\n        * 2.6.1 [boxenplot](#14)\n    * 2.7 [Strip Plot](#15)\n    * 2.8 [Swarm Plot](#16)\n        * 2.8.1 [Swarm + Box](#17)\n    * 2.9 [Count Plot](#18)\n    * 2.10 [Pair Plot](#19)\n    * 2.11 [Violin Plot](#20)\n    * 2.12 [lmplot and regplot](#21)\n        * 2.12.1 [Multiple regression with](#22) lmplot\n    * 2.13 [KDE plot](#23)\n    * 2.14 [Distribution Plot (distplot)](#24)\n        * 2.14.1 [plot the histogram](#25)\n        * 2.12.1 [plot the kde](#26)\n<br>\n<br>\n1. [CONCLUSION](#27)","c809f57e":"<a id=\"9\"><\/a>\n#### Example 1: <font color=#696969>**Scatter representation with jointplot**<\/font> ","17055e1d":"<a id=\"10\"><\/a>\n#### Example 2: <font color=#696969>**Hexbin representation with jointplot**<\/font> ","928f76a5":"<a id=\"3\"><\/a> \n#### Example 1: <font color=#696969>binary (and more) variable analysis with relplot<\/font> ","033cf051":"<a id=\"17\"><\/a> \n### Swarm + Box plot","d6f3940c":"<a id=\"27\"><\/a> \n# CONCLUSION\n\nIf you like it, please upvote :)","d14b16b9":"<a id=\"23\"><\/a>\n# KDE Plot","8a4cad05":"So, what happens if we apply **hue**, **size** and **style** parameters here?"}}