{"cell_type":{"bd6cda04":"code","0bb5b942":"code","92bf97ef":"code","805cf2f2":"code","a7a2f093":"code","61ec08c3":"code","0de13067":"code","d94cbd40":"code","3ae2e815":"code","c95a5184":"code","f32f098a":"code","964db0c0":"code","5e573315":"code","254444f5":"code","6aecb269":"code","a5f8ed6f":"code","304f350e":"code","fcf6edba":"code","fd740ced":"code","b8bc74e7":"code","8b30f8fe":"code","1a32ce7a":"code","62c28bcf":"code","e46ad5c7":"code","2d8c7fdd":"code","f970f655":"code","bf02fb48":"markdown"},"source":{"bd6cda04":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0bb5b942":"train = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","92bf97ef":"train","805cf2f2":"test","a7a2f093":"train = train.drop(columns= ['Name','Ticket','Cabin'])\ntest = test.drop(columns= ['Name','Ticket','Cabin'])","61ec08c3":"train['Embarked_S'] = (train['Embarked'] == 'S').astype(int)\ntrain['Embarked_C'] = (train['Embarked'] == 'C').astype(int)\ntrain['Embarked_Q'] = (train['Embarked'] == 'Q').astype(int)\ntrain['Gender'] = (train['Sex'] == 'male').astype(int)","0de13067":"test['Embarked_S'] = (test['Embarked'] == 'S').astype(int)\ntest['Embarked_C'] = (test['Embarked'] == 'C').astype(int)\ntest['Embarked_Q'] = (test['Embarked'] == 'Q').astype(int)\ntest['Gender'] = (test['Sex'] == 'male').astype(int)","d94cbd40":"train = train.drop(columns = ['Sex'])\ntest = test.drop(columns = ['Sex'])","3ae2e815":"train = train.drop(columns = ['Embarked'])\ntest = test.drop(columns = ['Embarked'])","c95a5184":"train.isnull().sum()","f32f098a":"test.isnull().sum()","964db0c0":"train.fillna(0,inplace=True)\ntest.fillna(0,inplace=True)","5e573315":"X = train.drop(columns = ['Survived'])\ny = train['Survived']","254444f5":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor(n_estimators = 1000, random_state = 42)","6aecb269":"rf.fit(X, y)","a5f8ed6f":"rf_pred = rf.predict(test)\nrf_pred","304f350e":"rf_pred_fix = (rf_pred>=0.5).astype(int)\nrf_pred_fix","fcf6edba":"result = pd.DataFrame({\"PassengerId\":test['PassengerId'], \"Survived\":rf_pred_fix})","fd740ced":"result","b8bc74e7":"#Our result!\n\nresult.to_csv(\"submission.csv\", index=False) ","8b30f8fe":"from sklearn.tree import export_graphviz\nimport pydot","1a32ce7a":"feature_list = list(test.columns)\nfeature_list","62c28bcf":"#Pull out a tree\n\ntree = rf.estimators_[5]","e46ad5c7":"export_graphviz(tree, out_file='tree.dot', feature_names=feature_list, rounded=True, precision=1)","2d8c7fdd":"(graph, ) = pydot.graph_from_dot_file('tree.dot')","f970f655":"graph.write_png('tree.png')","bf02fb48":"# EXTRAS: Getting an image of the Decision Tree"}}