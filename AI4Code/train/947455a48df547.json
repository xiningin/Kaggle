{"cell_type":{"5f80a59b":"code","f55cb6b7":"code","b529dd3c":"code","ae23b595":"code","1ee2c8e4":"code","cf35b482":"code","6e98bfe4":"code","8f296e17":"code","4f91fdf2":"code","3e2da69e":"code","0e55d54b":"code","0266ebc7":"code","991a0d99":"code","56c8daee":"code","c388ceb3":"code","6f111113":"code","4d218dd2":"code","35229883":"code","e304a70b":"code","379e44c5":"code","14bd938c":"code","acc960a2":"code","298a2011":"code","468973a5":"code","55962624":"code","49a4b525":"code","b32c011b":"markdown","e196b485":"markdown","83142c9a":"markdown","318ae092":"markdown","8aa5bdb3":"markdown","fb91fe1a":"markdown","51988db7":"markdown","86134cd0":"markdown","c718d5c1":"markdown","92d24838":"markdown","e7ba2b57":"markdown","c3ec3690":"markdown"},"source":{"5f80a59b":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, accuracy_score, confusion_matrix, roc_curve, auc, classification_report\nfrom sklearn.svm import SVC\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.preprocessing import StandardScaler","f55cb6b7":"!ls ..\/input\/voicegender\/voice.csv","b529dd3c":"data = pd.read_csv(\"..\/input\/voicegender\/voice.csv\")\ndf = pd.DataFrame(data)\ndf","ae23b595":"df.isnull().sum()","1ee2c8e4":"df['label'].value_counts()","cf35b482":"df.info()","6e98bfe4":"la=LabelEncoder()\ndf['label']=la.fit_transform(df['label'])","8f296e17":"data.info()","4f91fdf2":"df['label']","3e2da69e":"corr=df.corr()\ncorr","0e55d54b":"plt.subplots(figsize=(36,12))\nsns.heatmap(corr, annot=True)","0266ebc7":"corr['label'].sort_values(ascending=False)","991a0d99":"x=df.drop(['meanfun','Q25','meanfreq','centroid','median','maxdom','mindom','dfrange','meandom','mode','maxfun','minfun','label'], axis=1)\nx.describe()","56c8daee":"scaler = StandardScaler()\nx = pd.DataFrame(data=scaler.fit_transform(x), columns=x.columns)\nx","c388ceb3":"y=df.iloc[:,-1]\ny","6f111113":"y.shape","4d218dd2":"xtrain, xtest, ytrain, ytest = train_test_split(x,y, test_size=0.25, random_state=0)","35229883":"cla=SVC()\ncla.fit(xtrain, ytrain)","e304a70b":"cla.get_params()","379e44c5":"# Fitting Data to find best parameters\nparam = {\n    'C': [1,2],\n    'kernel': ['rbf', 'sigmoid'],\n    'degree' : [3,4],\n    'break_ties' : [True, False],\n    'verbose' : [True, False],\n    'probability' : [True, False]\n}\ngrid = GridSearchCV(estimator=cla, param_grid=param, cv= 5)\ngrid.fit(xtrain, ytrain)","14bd938c":"# Finding best parameters\ngrid.best_params_","acc960a2":"# Data fitting using parameters found from GridSearch\ncla2=SVC(C=2 , random_state=0, kernel= 'rbf', degree=3 , break_ties= True, verbose=True , probability=True )\ncla2.fit(xtrain, ytrain)","298a2011":"ytest_predict= cla2.predict(xtest)\naccuracy_score(ytest_predict, ytest)","468973a5":"# ROC Curve\n\nfpr, tpr, thresholds =roc_curve(ytest, ytest_predict, pos_label=1)\nplt.plot(fpr, tpr)\nplt.xlabel('False positive rate')\nplt.ylabel('True positive rate')\nplt.title('ROC curve')\nplt.show()\n# Measure the area under the curve.  The closer to 1, the \"better\" the predictions.\nprint(\"AUC of the predictions: {0}\".format(auc(fpr, tpr)))\n\n# Measure the Accuracy Score\nprint(\"Accuracy score of the predictions: {0}\".format(accuracy_score(ytest_predict, ytest)))\n","55962624":"# Confusion matrix\n\nconfu = confusion_matrix(ytest, ytest_predict, labels = [0,1])\nsns.heatmap(confu, annot=True)","49a4b525":"print(\"Classification Report for our model is \")\nprint(classification_report(ytest, ytest_predict))","b32c011b":"# Applying Classifier","e196b485":"# Loading Dataset","83142c9a":"Since the positive values are less so i will take all of them","318ae092":"So now it is converted into mumerical data type so now we can apply our classiffier","8aa5bdb3":"# Splitting data into traning and testing","fb91fe1a":"Sicne Lable is object so we need to convert it into numerical data","51988db7":"# Data Visualization","86134cd0":"# Importing Libraries","c718d5c1":"# Data Pre-processing","92d24838":"Data is also balanced","e7ba2b57":"# Checking Accuracy","c3ec3690":"# Data Training Using GridSearch"}}