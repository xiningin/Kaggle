{"cell_type":{"8a87643c":"code","6ccaf9c8":"code","ebe77c0f":"code","171898a5":"code","d08456f3":"code","7c44c0f9":"code","a1b680ac":"code","e64d9acc":"code","c742d68e":"code","37901c84":"code","30cace72":"code","69ff97c8":"code","3a69d10e":"code","11bba151":"code","5a88bc39":"code","baa6fbdf":"code","429fa1b9":"code","52289c4c":"code","17accc79":"code","2acc9c5b":"markdown","91045eac":"markdown"},"source":{"8a87643c":"\n\nimport numpy as np\nimport pandas as pd \n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","6ccaf9c8":"loading_df = pd.read_csv(\"..\/input\/trends-assessment-prediction\/loading.csv\")\nloading_features = list(loading_df.columns[1:])\nlabels_df = pd.read_csv(\"..\/input\/trends-assessment-prediction\/train_scores.csv\")\nlabels_df[\"is_train\"] = True\nloading_df=loading_df.merge(labels_df, on=\"Id\", how=\"left\")","ebe77c0f":"test_df=loading_df[loading_df[\"is_train\"] != True].copy()\ntrain_df = loading_df[loading_df[\"is_train\"] == True].copy()","171898a5":"print(test_df.shape,train_df.shape)","d08456f3":"train_df['domain1_var1'].fillna(train_df['domain1_var1'].mean(),inplace=True)\ntrain_df['domain1_var2'].fillna(train_df['domain1_var2'].mean(),inplace=True)\ntrain_df['domain2_var1'].fillna(train_df['domain2_var1'].mean(),inplace=True)\ntrain_df['domain2_var2'].fillna(train_df['domain2_var2'].mean(),inplace=True)","7c44c0f9":"train_df.head()","a1b680ac":"from sklearn.model_selection import train_test_split,cross_val_score\nfrom sklearn.linear_model import LinearRegression,Ridge,Lasso,ElasticNet\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error","e64d9acc":"X=train_df.drop(columns=labels_df)\nY=labels_df.drop(columns=['Id','is_train'])","c742d68e":"Y['domain1_var1'].fillna(Y['domain1_var1'].mean(),inplace=True)\nY['domain1_var2'].fillna(Y['domain1_var2'].mean(),inplace=True)\nY['domain2_var1'].fillna(Y['domain2_var1'].mean(),inplace=True)\nY['domain2_var2'].fillna(Y['domain2_var2'].mean(),inplace=True)","37901c84":"models=[LinearRegression(),Ridge(),Lasso(),ElasticNet()]\nnames=['linearregression','ridgeregression','lassoregression','elasticnetregression']\nfor model, name in zip(models, names):\n    print(name)\n    print(cross_val_score(model,X,Y.domain1_var2,scoring='neg_mean_absolute_error', cv=5).mean())","30cace72":"y.drop(columns=['Id','is_train']).columns","69ff97c8":"test_df.drop(columns=labels_df.columns,inplace=True)","3a69d10e":"test_df","11bba151":"lis=[]\nfor i in labels_df.drop(columns=['Id','is_train']).columns:\n    elastic=ElasticNet()\n    elastic.fit(X,Y[i])\n    pred=elastic.predict(test_df)\n    lis.append(pred)","5a88bc39":"lis=np.array(lis)","baa6fbdf":"sub=pd.read_csv('\/kaggle\/input\/trends-assessment-prediction\/sample_submission.csv')","429fa1b9":"for i in ","52289c4c":"for i in range(lis.shape[1]):\n    sub.iloc[(5*i)+0,1]=lis[0,i]\n    sub.iloc[(5*i)+1,1]=lis[1,i]\n    sub.iloc[(5*i)+2,1]=lis[2,i]\n    sub.iloc[(5*i)+3,1]=lis[3,i]\n    sub.iloc[(5*i)+4,1]=lis[4,i]","17accc79":"sub.to_csv('submit.csv',index=False)","2acc9c5b":"#### Import libraries","91045eac":"## Predict from loading.csv and achievea decent score"}}