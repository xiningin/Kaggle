{"cell_type":{"155139c1":"code","d6f444c6":"code","ee9d3167":"code","cfa2fd6e":"code","4827cd63":"code","b8cbe770":"code","d1b0d880":"code","e8f7f412":"code","48f647e2":"code","abc8e3a2":"code","1b7f2b3d":"code","c8b7b92c":"code","c02a41d0":"code","1e226a1c":"code","2fa84523":"code","27d2f742":"code","23d72150":"code","2c85190c":"code","f0845536":"code","09af1a14":"code","ca39c926":"code","0a7ca90a":"code","14b2ff40":"code","4051e156":"code","9db40341":"code","8012736e":"code","ff416c34":"code","fd838320":"code","39d38d35":"code","d1bc10a2":"code","59a196d5":"code","4c74d49d":"code","a9ef38ba":"code","af0f5e2c":"code","2f9e4d59":"code","e03acc09":"code","fbecc360":"code","fa33a4eb":"code","c84287d5":"code","fd97660b":"code","a98c1fb7":"code","37e49620":"code","83178088":"code","28a53240":"code","b65b0b57":"code","d7eee398":"code","592bea3e":"code","702249c7":"code","24ce2587":"code","2e567e8c":"code","4e458ba9":"code","728190ca":"code","2e378c9c":"code","92f13e41":"code","54060a4b":"code","7bcab831":"code","c9033add":"code","97f85c88":"code","ed23088a":"code","675e3d85":"code","89003197":"code","8558686c":"code","0d7937af":"code","61cf0fe6":"code","8532c7ee":"code","9758ca3f":"code","c2356619":"code","516cd1e6":"code","715eed54":"code","e0fce06a":"code","353c32e3":"markdown","02858ea4":"markdown","40f84390":"markdown","716dea96":"markdown","22191ce8":"markdown","3b403dd8":"markdown","c6c69ebd":"markdown","10006b06":"markdown","a960e9da":"markdown","c5ecd91f":"markdown","8003817f":"markdown","7f3500e9":"markdown","c7ec5b3c":"markdown","5017c117":"markdown","e98936dd":"markdown","8efd368b":"markdown","11bf043b":"markdown","a96b0d05":"markdown","0cb14dec":"markdown","9c33d92b":"markdown","e4964814":"markdown","3377d37a":"markdown","88c798cf":"markdown","0a429189":"markdown","f95eaa19":"markdown","09fd1876":"markdown","a00faa0f":"markdown"},"source":{"155139c1":"import pandas as pd\nfrom matplotlib import pyplot as plt\nfrom matplotlib import dates as mpl_dates","d6f444c6":"ind_covid_df = pd.read_csv('..\/input\/indias-covid19-cases\/case_time_series.csv')","ee9d3167":"ind_covid_df","cfa2fd6e":"ind_covid_df.info()","4827cd63":"ind_covid_df.isnull().sum()","b8cbe770":"ind_covid_df['Date_YMD'] = pd.to_datetime(ind_covid_df['Date_YMD'])","d1b0d880":"ind_covid_df.tail(1)","e8f7f412":"total_cases = ind_covid_df['Total Confirmed']\ndates = ind_covid_df['Date_YMD']","48f647e2":"curr_date = dates.max()\ncurr_total_cases = int(total_cases.tail(1))","abc8e3a2":"dates.max()","1b7f2b3d":"filt = ind_covid_df.Date_YMD==dates.max()\ntoday_cases = int(ind_covid_df.loc[filt, 'Daily Confirmed'])\n\ntoday_deaths = int(ind_covid_df.loc[filt, 'Daily Deceased'])\n\ntoday_recovered = int(ind_covid_df.loc[filt, 'Daily Recovered'])\n\ncurr_total_deaths = int(ind_covid_df.loc[filt, 'Total Deceased'])\n\ncurr_total_recovered = int(ind_covid_df.loc[filt, 'Total Recovered'])","c8b7b92c":"plt.style.use('fivethirtyeight')\n# total_cases.plot(figsize=(10,6))\nplt.figure(figsize=(10,6))\nplt.plot(dates, total_cases.values\/10**6, color='#0000a0')\n# plt.plot(total_deaths.index, total_deaths.values, linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.xlabel('')\nplt.ylabel('Count (in Millions)',fontsize=16)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=13)\nplt.suptitle('Total Cases by Time', fontsize=20)\n\nplt.annotate(text=str(curr_total_cases), xy=(curr_date,curr_total_cases\/10**6),\n             xycoords='data', xytext=(-80,1), textcoords='offset points', fontsize=14)","c02a41d0":"daily_cases = ind_covid_df['Daily Confirmed']","1e226a1c":"plt.figure(figsize=(10,6))\nplt.plot(dates, daily_cases,'-', linewidth=2)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count')\nplt.suptitle('Daily New Cases by time',fontsize=22)\n\nplt.annotate(text=str(today_cases), xy=(curr_date, today_cases),\n             xycoords='data', xytext=(-56,1), textcoords='offset points', fontsize=14)\n\n","2fa84523":"total_deaths = ind_covid_df['Total Deceased']","27d2f742":"plt.figure(figsize=(10,6))\nplt.plot(dates, total_deaths, color='red')\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count')\nplt.suptitle('Total Deaths by Time', fontsize=22)\n\nplt.annotate(text=str(curr_total_deaths), xy=(curr_date, curr_total_deaths),\n             xycoords='data', xytext=(-56,1), textcoords='offset points', fontsize=14)","23d72150":"daily_deaths = ind_covid_df['Daily Deceased']","2c85190c":"plt.figure(figsize=(10,6))\nplt.plot(dates, daily_deaths,'-r', linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count')\nplt.suptitle('Daily New Deaths by time',fontsize=22)\n\nplt.annotate(text=str(today_deaths), xy=(curr_date, today_deaths),\n             xycoords='data', xytext=(-40,1), textcoords='offset points', fontsize=14)","f0845536":"plt.figure(figsize=(8,5))\nplt.scatter(daily_cases, daily_deaths, edgecolor='black', alpha=.3)\nplt.xlabel('New Cases')\nplt.ylabel('New Deaths')","09af1a14":"total_recovered = ind_covid_df['Total Recovered']","ca39c926":"plt.figure(figsize=(10,6))\nplt.plot(dates, total_recovered\/10**6, color='green')\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count (in Million)')\nplt.suptitle('Total Recovery by Time', fontsize=22)\n\nplt.annotate(text=str(curr_total_recovered), xy=(curr_date, curr_total_recovered\/10**6),\n             xycoords='data', xytext=(-70,1), textcoords='offset points', fontsize=14)\n\n","0a7ca90a":"daily_recovered = ind_covid_df['Daily Recovered']","14b2ff40":"plt.figure(figsize=(10,6))\nplt.plot(dates, daily_recovered,'-g', linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count')\nplt.suptitle('Daily Recovered by time',fontsize=22)\n\nplt.annotate(text=str(today_recovered), xy=(curr_date, today_recovered),\n             xycoords='data', xytext=(-60,1), textcoords='offset points', fontsize=14)","4051e156":"active_cases = total_cases-total_deaths-total_recovered","9db40341":"curr_active_cases = curr_total_cases - curr_total_deaths - curr_total_recovered","8012736e":"plt.figure(figsize=(10,6))\nplt.plot(dates, active_cases\/10**6, color='#483096', linewidth=2)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Count (in Millions)')\nplt.suptitle('Active Cases over Time',fontsize=22)\n\nplt.annotate(text=str(curr_active_cases), xy=(curr_date, curr_active_cases\/10**6),\n             xycoords='data', xytext=(-66,1), textcoords='offset points', fontsize=14)","ff416c34":"inf_fatality_ratio = (total_deaths\/total_cases)*100","fd838320":"curr_fat_ratio = (curr_total_deaths\/curr_total_cases)*100","39d38d35":"plt.figure(figsize=(10,6))\nplt.plot(dates, inf_fatality_ratio,'-m', linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Percent')\nplt.suptitle('Infection Fatality Ratio over Time',fontsize=22)\n# plt.title('(Chances of Death)')\n\nplt.annotate(text=str(round(curr_fat_ratio, 3)), xy=(curr_date, curr_fat_ratio),\n             xycoords='data', xytext=(-48,-10), textcoords='offset points', fontsize=14)","d1bc10a2":"recovery_rate = (total_recovered\/total_cases)*100","59a196d5":"curr_rec_ratio = (curr_total_recovered\/curr_total_cases)*100","4c74d49d":"plt.figure(figsize=(10,6))\nplt.plot(dates, recovery_rate, color='#3b7d24', linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Percent')\nplt.suptitle('Recovery rate over Time',fontsize=22)\n\nplt.annotate(text=str(round(curr_rec_ratio, 2)), xy=(curr_date, curr_rec_ratio),\n             xycoords='data', xytext=(-50,-5), textcoords='offset points', fontsize=14)","a9ef38ba":"per_act_cases = (active_cases\/total_cases)*100","af0f5e2c":"curr_per_act_cases = (curr_active_cases\/curr_total_cases)*100","2f9e4d59":"plt.figure(figsize=(10,6))\nplt.plot(dates, per_act_cases, color='#8c2730', linewidth=1)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\nplt.ylabel('Percent')\nplt.suptitle('Percent of Active Cases over Time',fontsize=22)\n\nplt.annotate(text=str(round(curr_per_act_cases, 2)), xy=(curr_date, curr_per_act_cases),\n             xycoords='data', xytext=(-40,1), textcoords='offset points', fontsize=14)","e03acc09":"fig, ax = plt.subplots()\nfig.set_figheight(8)\nfig.set_figwidth(10)\n\nlabels = ['Deaths','Recovered','Active']\nax.stackplot(dates, total_deaths\/10**6,total_recovered\/10**6,active_cases\/10**6, alpha=.8, labels=labels)\nax.set_ylabel('Count (in Million)')\nax.legend(loc='upper left')\n\nfig.autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\n\nax.xaxis.set_major_locator(plt.MaxNLocator(18))\nax.xaxis.set_major_formatter(date_format)\n\nplt.annotate(text=str(curr_total_deaths), xy=(curr_date, curr_total_deaths\/10**6),\n             xycoords='data', xytext=(-55,5), textcoords='offset points', fontsize=14)\n\nplt.annotate(text=str(curr_total_recovered), xy=(curr_date, curr_total_recovered\/10**6),\n             xycoords='data', xytext=(-70,1), textcoords='offset points', fontsize=14)\n\nplt.annotate(text=str(curr_active_cases), xy=(curr_date, curr_active_cases\/10**6 + curr_total_recovered\/10**6),\n             xycoords='data', xytext=(-60,-10), textcoords='offset points', fontsize=14)","fbecc360":"total_deaths.max()","fa33a4eb":"fig, ax = plt.subplots(figsize=(10,6))\n\nlabels = ['Deceased', 'Active', 'Recovered', 'Confirmed']\nvalues = [total_deaths.max(), active_cases.max(), total_recovered.max(), total_cases.max()]\n\nax.bar(labels, values, color=['#a83232','#3267a8','#67a832','#5d32a8'])\nax.set_ylabel('Count')\n\n# create a list to collect the plt.patches data\ntotals = []\n\n# find the values and append to list\nfor i in ax.patches:\n    totals.append(i.get_height())\n\n# set individual bar lables using above list\nfor i in ax.patches:\n    # get_x pulls left or right; get_height pushes up or down\n    ax.text(i.get_x()+.18, i.get_height()+500000, \\\n            str(round(i.get_height())), fontsize=15,\n                color='dimgrey')\n\n","c84287d5":"vac_df = pd.read_csv('..\/input\/indias-vaccine-progress\/cowin_vaccine_data_statewise.csv')\npd.set_option('display.max_rows', 10)","fd97660b":"filt = vac_df.State=='India'\nind_vac_df = vac_df.loc[filt].copy()","a98c1fb7":"ind_vac_df","37e49620":"total_population = 1380004385","83178088":"ind_vac_df.columns","28a53240":"ind_vac_df.drop(['State','Total Sessions Conducted','Total Sites ','Male(Individuals Vaccinated)','Female(Individuals Vaccinated)','Transgender(Individuals Vaccinated)','AEFI'], axis=1, inplace=True)","b65b0b57":"ind_vac_df","d7eee398":"ind_vac_df['Total Doses Administered']=ind_vac_df['First Dose Administered']+ind_vac_df['Second Dose Administered']","592bea3e":"ind_vac_df.info()","702249c7":"ind_vac_df.rename(columns={'Updated On':'Date'}, inplace=True)","24ce2587":"ind_vac_df.dropna(thresh=5,inplace=True)","2e567e8c":"ind_vac_df.loc[:,['First Dose Administered','Second Dose Administered',\n                  'Total Covaxin Administered','Total CoviShield Administered',\n                  'Total Individuals Vaccinated',\n                  'Total Doses Administered']]=ind_vac_df.loc[:,['First Dose Administered',\n                                                                 'Second Dose Administered',\n                                                                 'Total Covaxin Administered','Total CoviShield Administered','Total Individuals Vaccinated','Total Doses Administered']].astype('int64')","4e458ba9":"ind_vac_df['Date'] = pd.to_datetime(ind_vac_df['Date'],format='%d\/%m\/%Y')","728190ca":"ind_vac_df","2e378c9c":"ind_vac_df.set_index('Date',inplace=True)","92f13e41":"ind_vac_df['Percentage Population Vaccinated'] = (ind_vac_df['Total Individuals Vaccinated']\/total_population)*100","54060a4b":"ind_vac_df['Percentage Population Completely Vaccinated'] = (ind_vac_df['Second Dose Administered']\/total_population)*100","7bcab831":"ind_vac_df","c9033add":"curr_date = ind_vac_df.index.max()\ncurr_fst_dose = ind_vac_df.loc[curr_date, 'First Dose Administered']\ncurr_snd_dose = ind_vac_df.loc[curr_date, 'Second Dose Administered']","97f85c88":"per_pop_vac = ind_vac_df['Percentage Population Vaccinated'].max()\nper_pop_com_vac = ind_vac_df['Percentage Population Completely Vaccinated'].max()","ed23088a":"fig, (ax1, ax2) = plt.subplots(1,2)\nfig.set_figheight(4)\nfig.set_figwidth(10)\n\nslices = [per_pop_vac, 100-per_pop_vac]\ncolors = ['#00aaff', '#f0b73c']\nlabels = ['Vaccinated','Unvaccinated']\nax1.pie(slices, labels=labels,colors=colors, wedgeprops={'edgecolor':'black'}, shadow=True, explode=(0.2,0),  autopct='%.2f%%')\n\nslices = [per_pop_com_vac, per_pop_vac-per_pop_com_vac, 100-per_pop_vac]\nlabels = ['Both dose','Only One dose','Unvaccinated']\nax2.pie(slices, labels=labels,startangle=30,\n        wedgeprops={'edgecolor':'black'}, shadow=True, explode=(0.2,0.2,0),  autopct='%.2f%%')\n\n\nplt.show()","675e3d85":"fig, (ax,ax2) = plt.subplots(2,1)\nfig.set_figheight(14)\nfig.set_figwidth(10)\n\nax1 = ax.twiny()\nax.stackplot(ind_vac_df.index, ind_vac_df['Percentage Population Completely Vaccinated'],\n             ind_vac_df['Percentage Population Vaccinated']-ind_vac_df['Percentage Population Completely Vaccinated'],\n             labels=['Two dose','One dose'],colors=['#31a354','#addd8e'], alpha=.6)\nax.set_ylabel('Percent (%) of Population')\nax.legend(loc='upper left')\n\nax.set_xticks(ind_vac_df.index)\nax.xaxis.set_major_locator(plt.MaxNLocator(18))\nfor tick in ax.get_xticklabels():\n    tick.set_rotation(90)\n    \n\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nax.xaxis.set_major_formatter(date_format)\n\nax1.plot(ind_vac_df.index, ind_vac_df['Percentage Population Vaccinated'],\n         label='Total Percent of Population Vaccinated', color='#007580')\nax1.xaxis.set_visible(False)\nax1.yaxis.set_visible(False)\nax1.legend(loc='center left')\n\nax1.set_title('Vaccination over Time', fontsize=23)\n\n\nax2.plot(ind_vac_df.index, ind_vac_df['First Dose Administered']\/10**6, color='#28abb9', label='First dose')\nax2.plot(ind_vac_df.index, ind_vac_df['Second Dose Administered']\/10**6, color='#2d6187', label='Second dose')\nax2.plot(ind_vac_df.index, ind_vac_df['First Dose Administered']\/10**6+ind_vac_df['Second Dose Administered']\/10**6, color='#ab4b9c', label='Total doses')\nax2.legend()\nax2.set_ylabel('Count (in Millions)')\nax2.set_xticks(ind_vac_df.index)\nax2.xaxis.set_major_locator(plt.MaxNLocator(18))\nfor tick in ax2.get_xticklabels():\n    tick.set_rotation(90)\nax2.xaxis.set_major_formatter(date_format)\nax2.annotate(text=str(curr_fst_dose), xy=(curr_date,curr_fst_dose\/10**6), xycoords='data',\n            xytext=(-98, -20),\n            textcoords='offset points')\nax2.annotate(text=str(curr_snd_dose), xy=(curr_date,curr_snd_dose\/10**6), xycoords='data',\n            xytext=(-80, 0),\n            textcoords='offset points')\n\nplt.annotate(text=str(round(per_pop_com_vac,2)), xy=(curr_date, per_pop_com_vac),\n             xycoords='data', xytext=(-38,-35), textcoords='offset points', fontsize=14)\n\nplt.annotate(text=str(round(per_pop_vac-per_pop_com_vac, 2)), xy=(curr_date, per_pop_vac-per_pop_com_vac),\n             xycoords='data', xytext=(-35,-85), textcoords='offset points', fontsize=14)\n\nplt.annotate(text=str(round(per_pop_vac, 2)), xy=(curr_date, per_pop_vac),\n             xycoords='data', xytext=(-35,0), textcoords='offset points', fontsize=14)","89003197":"help(ax.annotate)","8558686c":"ind_vac_df","0d7937af":"daily_vac = []\n\nprev_vac=0;\ncurr_vac=0;\n\nfor i in range(ind_vac_df.shape[0]):\n    curr_vac=ind_vac_df['Total Individuals Vaccinated'][i]\n    daily_vac.append(curr_vac - prev_vac)\n    prev_vac=curr_vac\n    \nind_vac_df['Daily Individuals Vaccinated'] = daily_vac","61cf0fe6":"ind_vac_df","8532c7ee":"daily_vac = ind_vac_df['Daily Individuals Vaccinated']","9758ca3f":"daily_vac","c2356619":"todays_vac = daily_vac.get(curr_date)","516cd1e6":"avg_daily_vac = daily_vac.median()","715eed54":"avg_daily_vac","e0fce06a":"plt.figure(figsize=(10,6))\nplt.bar(daily_vac.index, daily_vac.values\/10**6,color='#de9d23', alpha=.6)\nplt.plot(daily_vac\/10**6, color='#6a2c70', linewidth=2)\nplt.axhline(y=avg_daily_vac\/10**6, linewidth=1, alpha=.9)\n\nplt.gcf().autofmt_xdate()\ndate_format = mpl_dates.DateFormatter('%d %b, %Y')\nplt.gca().xaxis.set_major_formatter(date_format)\n\n# plt.gca().xaxis.set_major_locator(plt.MaxNLocator(len(daily_vac)\/15))\n\nplt.ylabel('Count (in Millions)')\nplt.suptitle('Daily Individuals Vaccinated over time', fontsize=22)\n\nplt.annotate(text=str(todays_vac), xy=(curr_date, todays_vac\/10**6),\n             xycoords='data', xytext=(-5,10), textcoords='offset points', fontsize=14)\n\n","353c32e3":"Above plot depicts that their were large no. of deaths in August, September and October months of year 2020.\nSudden spike of deaths was seen in mid-June month. \nIn Second wave the deaths are 4 to 5 times more than the previous wave","02858ea4":"### **About**","40f84390":"![](https:\/\/e3.365dm.com\/21\/03\/1600x900\/skynews-india-vaccine-graphic_5325213.jpg?bypass-service-worker&20210331165132)","716dea96":"The first signs of **COVID-19 in India** was reported in some towns of Kerala, among three Indian medical students who had returned from Wuhan. After that, the Government of India had announced lockdown on **25 March 2020**. India faced its **first wave** from May 2020 to January 2020 with an Amplitude of around **90,000** new infections a day. As of now India is going under second wave which has proved to be more deadlier than previous one.","22191ce8":"### **Introduction**","3b403dd8":"After the first quarter of the vaccination drive, India has vaccinated **10.13%** of its total population which is about **139 Million** Individuals vaccinated out of which **2.9%** are fully vaccinated. At the end of the quarter one, average Individuals immunized are **0.93 Million**.","c6c69ebd":"We can see that it doesn't contain any null or missing values.Hence it reduces our work","10006b06":"$$Recovery\\ Rate = \\frac{Number\\ of\\ recovries\\ from\\ disease}{Number\\ of\\ diagonsed\\ case\\ of\\ disease}X\\ 100$$","a960e9da":"### Individuals immunized on daily basis","c5ecd91f":"### 2. Rate of Recovery","8003817f":"During the rise of second wave, recovery rate started falling from March 2021 and settled at 80% after which has started to grow again","7f3500e9":"The logarithmic rise of total cases was observed from July end 2020 till December 2020 which seemed to saturate in january 2020. But April 2020 onwards, cases started to increase at much higher rate than before","c7ec5b3c":"###  Percentage share of population vaccinated","5017c117":"The Scatterplot shows that Daily New deaths are linearly correlated with new cases on daily basis.\nTheir is positive, strong relation between the two, as more points overlapp to form a line \n\ni.e. Deaths occuring each day depends on the fresh Covid cases on that day. More the no. of cases are found more deaths will occur.\n\nFrom above plots we can conclude, that if we could stop or supress the fresh Covid cases, then their would be less deaths.","e98936dd":"`if we could prevent new cases from happening, deaths would reduce`","8efd368b":"This document contains basic exploaratory data analysis of COVID-19 Disease in India. This notebook serves to analyze and visualize the progress of the pandemic from various perspectives.\n\nData used in this notebook is complied from https:\/\/api.covid19india.org\/\n\n**Feel free to point out mistakes and give feedback since I am novice.\nAny suggestions are welcome.\nIf you like work Please upvote and share.**","11bf043b":"### Cumulative doses administered across the country","a96b0d05":"# India's COVID-19 Exploratory analysis\n---","0cb14dec":"From July 2020 Onwards infection rate started to increase and reached its first peak at September 2020 with over 90,000 cases reported per-day.\\\nCases began to decline from October 2020 and were reported below 15,000 in January 2021 which was a good sign.\n\nA second wave beginning in March 2021 was much larger than first, with shortages of vaccines, hospital beds, oxygen cylinders and other medicines such as remdesivir in parts of the country. By April end daily infection count reached over 400,000 which was new record","9c33d92b":"### Let us see if their is any correlation between new cases and new deaths on daily basis","e4964814":"Case fatality ratio(CFR) is ratio to measure risk of death when person is infected with a disease. The actual probability of death of person diagonsed with a disease is generally less since everybody is not tested to have a disease or not. Hence their would be a scenario where their are people who have the disease but are not diagonsed.\nCFR can increase or decrease, or could vary by location and characteristics of the infected person.\n\nCFR gives rough chances of death if person is infected with COVID-19","3377d37a":"India began its **vaccination program** on **16 January 2021**. India has approved two vaccines for emergency use, including Oxford-AstraZeneca vaccine also known as **Covisheld** manufactured by the Serum Institue of India, and **Covaxin** developed by Biotech. In April 2021 ,Sputnik V was approved as a third vaccine.\n\nIndia first started with vaccinating Health care workers being first to receive the vaccine. On **April 1 2021** vaccination of people above **age 45** was started. Followed by vaccination of age **group 18-44** from **1 May** onwards.","88c798cf":"\n## **2. Vaccination**","0a429189":"### 1. Case Fatality Ratio (CFR)","f95eaa19":"$$CFR=\\frac{Number\\ of\\ deaths\\ from\\ disease}{Number\\ of\\ diagonsed\\ case\\ of\\ disease}X\\ 100$$","09fd1876":"## Summary","a00faa0f":"## 1. Cases, Deaths and Recovery"}}