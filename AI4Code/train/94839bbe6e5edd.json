{"cell_type":{"e759a7a9":"code","28cd6a37":"code","e3a9060c":"code","695158a7":"code","fb9f3ed2":"code","2818a35e":"code","3de71c85":"code","a1722255":"code","133b2c62":"code","0cbcf8e3":"code","bf4cd927":"code","c9bcf264":"code","247fcfe6":"code","aaf0b223":"code","eee95733":"code","af6eb360":"code","b72792d7":"code","7da6ebdd":"code","8b577d65":"code","e8e1f72d":"code","66067c72":"code","3e78e14e":"code","eaee5f72":"code","fb6716ef":"code","ed135c39":"code","e88eb477":"code","725fc4bb":"code","31fc41b9":"code","ffbc25e3":"code","0c9e8717":"code","85f8d305":"code","62964715":"code","ba3b56e5":"code","26d45bfa":"code","ce467607":"code","b11990ab":"code","0957cae7":"code","70129cc2":"code","ddeb804c":"code","d1e904ba":"code","4978a354":"code","198daaf8":"code","997602f2":"code","b9caca4a":"code","d60d068b":"code","1c13f9e8":"code","8906eb03":"code","0d4c8d97":"code","8a44318a":"code","e0ee8576":"markdown","98713708":"markdown","94dc358a":"markdown","c0256b79":"markdown","75c2c538":"markdown","f648a374":"markdown","7c5bba2a":"markdown","9120cc10":"markdown","78588a93":"markdown","88d25834":"markdown","5ae0748e":"markdown","b2f21b95":"markdown","9c1716e4":"markdown","481ed276":"markdown","aaf1fc84":"markdown","aaa60e6d":"markdown","af146a06":"markdown","9d582078":"markdown","fcf6d46b":"markdown","efdd24d2":"markdown","4d45e524":"markdown","0525dca2":"markdown","223ac91f":"markdown","298f26db":"markdown","71eafce4":"markdown","d9d21fd3":"markdown","af2376ba":"markdown","38bb177d":"markdown","b4aa76cc":"markdown","3511ce76":"markdown","e12f3666":"markdown","4336139c":"markdown","7f8191b3":"markdown","78d7d8a9":"markdown","7735df91":"markdown","b8ec8932":"markdown","6bf50bae":"markdown","f703331c":"markdown","25ba462d":"markdown","d8cd741d":"markdown","74385112":"markdown","528161b1":"markdown"},"source":{"e759a7a9":"import pandas as pd\nimport numpy as np  \nimport seaborn as sns \npal = sns.color_palette()\nfrom wordcloud import WordCloud\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn import preprocessing\nimport glob\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.tools as tls\nfrom keras.models import Sequential\nfrom tensorflow.keras.layers import Activation, Dense, Dropout\n\n#for geospatial analysis\nimport math\nimport folium\nfrom geopy.geocoders import Nominatim\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","28cd6a37":"districts_data=pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\")","e3a9060c":"districts_data.head()","695158a7":"districts_data.tail()","fb9f3ed2":"districts_data.columns","2818a35e":"print('lenght of data is', len(districts_data))","3de71c85":"districts_data.shape","a1722255":"districts_data.info()","133b2c62":"districts_data.dtypes","0cbcf8e3":"np.sum(districts_data.isnull().any(axis=1))","bf4cd927":"print('Count of columns in the data is:  ', len(districts_data.columns))","c9bcf264":"print('Count of rows in the data is:  ', len(districts_data))","247fcfe6":"current=len(districts_data)\nprint('Rows of data before Delecting ', current)","aaf0b223":"districts_data=districts_data.drop_duplicates()","eee95733":"now=len(districts_data)\nprint('Rows of data before Delecting ', now)","af6eb360":"diff=current-now\nprint('Duplicated rows deleted ', diff)","b72792d7":"plt.figure(figsize=(12,10))\nsns.countplot(districts_data.state)\nplt.xticks(rotation=90)","7da6ebdd":"districts_data[\"state\"].value_counts().head(10).plot(kind = 'pie', autopct='%1.1f%%', figsize=(10, 10), startangle=0).legend()","8b577d65":"plt.figure(figsize=(12,10))\nsns.countplot(districts_data.locale)\nplt.xticks(rotation=90)","e8e1f72d":"districts_data[\"locale\"].value_counts().head(10).plot(kind = 'pie', autopct='%1.1f%%', figsize=(10, 10), startangle=0).legend()","66067c72":"sns.countplot(data= districts_data, x = \"pct_black\/hispanic\")\nplt.show()","3e78e14e":"sns.countplot(data= districts_data, x = \"pct_free\/reduced\")\nplt.show()","eaee5f72":"sns.countplot(data= districts_data, x = \"county_connections_ratio\")\nplt.show()","fb6716ef":"plt.figure(figsize=(12,10))\nsns.countplot(districts_data.pp_total_raw)\nplt.xticks(rotation=90)","ed135c39":"products_data = pd.read_csv(\"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\")\nproducts_data","e88eb477":"plt.figure(figsize=(16, 10))\nsns.countplot(y='Provider\/Company Name', data=products_data, order=products_data[\"Provider\/Company Name\"].value_counts().index[:10])\nplt.title(\"Top 10 Provider\/Company Names\",font=\"Serif\", size=20)\nplt.show()","725fc4bb":"c1=c2=c3=0\nfor s in products_data[\"Sector(s)\"]:\n    if(not pd.isnull(s)):\n        s = s.split(\";\")\n        for i in range(len(s)):\n            sub = s[i].strip()\n            if(sub == 'PreK-12'): c1+=1\n            if(sub == 'Higher Ed'): c2+=1\n            if(sub == 'Corporate'): c3+=1\n\nfig, ax  = plt.subplots(figsize=(16, 8))\nfig.suptitle('Sector Distribution', size = 30, font=\"Serif\")\nexplode = (0.05, 0.05, 0.05)\nlabels = ['PreK-12','Higher Ed','Corporate']\nsizes = [c1,c2, c3]\nax.pie(sizes, explode=explode,startangle=60, labels=labels,autopct='%1.2f%%', pctdistance=0.7, colors=[\"#ff228a\",\"#20b1fd\",\"#ffb703\"])\nax.add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","31fc41b9":"primary_essential_main = []\nprimary_essential_sub = []\nfor s in products_data[\"Primary Essential Function\"]:\n    if(not pd.isnull(s)):\n        s1 = s.split(\"-\",1)[0].strip()\n        primary_essential_main.append(s1)\n    else:\n        primary_essential_main.append(np.nan)\n    \n    if(not pd.isnull(s)):\n        s2 = s.split(\"-\",1)[1].strip()\n        primary_essential_sub.append(s2)\n    else:\n        primary_essential_sub.append(np.nan)\n\nproducts_data[\"primary_essential_main\"] = primary_essential_main\nproducts_data[\"primary_essential_sub\"] = primary_essential_sub","ffbc25e3":"c1=c2=c3=0\n\nfor s in products_data[\"primary_essential_main\"]:\n    if(not pd.isnull(s)):\n        c1 += s.count(\"CM\")\n        c2 += s.count(\"LC\")\n        c3 += s.count(\"SDO\")\n\nfig, ax  = plt.subplots(figsize=(16, 8))\nfig.suptitle('Primary Essential Function', size = 20, font=\"Serif\")\nexplode = (0.05, 0.05, 0.05)\nlabels = ['CM','LC','SDO']\nsizes = [c1, c2, c3]\nax.pie(sizes, explode=explode,startangle=60, labels=labels,autopct='%1.2f%%', pctdistance=0.7, colors=[\"#18ff9f\",\"#2cfbff\",\"#ffb703\"])\nax.add_artist(plt.Circle((0,0),0.4,fc='white'))\nplt.show()","0c9e8717":"plt.figure(figsize=(16, 20))\nsns.countplot(y='primary_essential_sub', data=products_data, order=products_data[\"primary_essential_sub\"].value_counts().index)\nplt.title(\"Primary Essential Function(Sub)\",font=\"Serif\", size=20)\nplt.show()","85f8d305":"ds = products_data['Sector(s)'].value_counts().reset_index()\nds.columns = [\n    'Sector(s)', \n    'percent'\n]\nds['percent'] \/= len(products_data)\n\nfig = px.pie(\n    ds, \n    names='Sector(s)', \n    values='percent',\n    color_discrete_sequence=px.colors.sequential.Mint,\n    title='Distribution of Sector(s) in the District Information Data:', \n    width=700,\n    height=500\n)\nfig.show()","62964715":"cloud = WordCloud(width=1440, height=1080).generate(\" \".join(districts_data['state'].astype(str)))\nplt.figure(figsize=(15, 10))\nplt.imshow(cloud)\nplt.axis('off')","ba3b56e5":"ds = districts_data['state'].value_counts().reset_index()\nds.columns = [\n    'state', \n    'percent'\n]\nds['percent'] \/= len(districts_data)\n\nfig = px.pie(\n    ds, \n    names='state', \n    values='percent',\n    color_discrete_sequence=px.colors.sequential.Mint,\n    title='Occurrence of states in the District Information Data:', \n    width=700,\n    height=500\n)\nfig.show()","26d45bfa":"ds = districts_data['locale'].value_counts().reset_index()\nds.columns = [\n    'locale', \n    'percent'\n]\nds['percent'] \/= len(districts_data)\n\nfig = px.pie(\n    ds, \n    names='locale', \n    values='percent',\n    color_discrete_sequence=px.colors.sequential.Mint,\n    title='Occurrence of Locale in the District Information Data:', \n    width=700,\n    height=500\n)\nfig.show()","ce467607":"CSV_files=pd.DataFrame()\naddress = glob.glob('..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data\/*.csv')\ncount=0\nfor i in address:\n    with open(i, \"rb\") as data_of_files:\n        data=pd.read_csv(data_of_files)\n        CSV_files=pd.concat([CSV_files,data], axis=0)\n        count=count+1\n        if count==233:\n            break  \nCSV_files","b11990ab":"CSV_files.hist(figsize=(20,20),bins = 20, color=\"#107009AA\")\nplt.title(\"Numeric Features Distribution\")\nplt.show()","0957cae7":"colormap = plt.cm.RdBu\nplt.figure(figsize=(14,12))\nplt.title('Pearson Correlation of Features', y=1.05, size=15)\nsns.heatmap(CSV_files.corr(),linewidths=0.1,vmax=1.0, \n            square=True, cmap=colormap, linecolor='white', annot=True)","70129cc2":"CSV_files.isnull().sum()","ddeb804c":"data_total = CSV_files.isnull().sum()\ndata_percent = ((CSV_files.isnull().sum()\/CSV_files.shape[0])*100).round(2)\nmissing_data = pd.concat([data_total, data_percent],\n                                axis=1, \n                                keys=['Data_Total', 'Data_Percent %'],\n                                sort = True)\nmissing_data.style.bar(color = ['gold'])","d1e904ba":"path = '..\/input\/learnplatform-covid19-impact-on-digital-learning\/engagement_data' \nall_files = glob.glob(path + \"\/*.csv\")\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    district_id = filename.split(\"\/\")[4].split(\".\")[0]\n    df[\"district_id\"] = district_id\n    li.append(df)\n    \nengagement_data = pd.concat(li)\nengagement_data = engagement_data.reset_index(drop=True)\nengagement_data.head()","4978a354":"engagement_data['time'] = pd.to_datetime(engagement_data['time'])","198daaf8":"print(products_data[\"LP ID\"].nunique())\nprint(engagement_data[\"lp_id\"].nunique())","997602f2":"products_engagement_data = pd.merge(products_data, engagement_data, left_on='LP ID', right_on='lp_id')\nproducts_engagement_data.head()","b9caca4a":"print(districts_data[\"district_id\"].nunique())\nprint(engagement_data[\"district_id\"].nunique())","d60d068b":"engagement_data[\"district_id\"] = engagement_data[\"district_id\"].astype(str).astype(int)\ndistricts_engagement_data = pd.merge(districts_data, engagement_data, left_on='district_id', right_on='district_id')\ndistricts_engagement_data.head()","1c13f9e8":"geolocator = Nominatim(user_agent=\"Ruch\")\n\ndef feature_generation(df):\n    lat=[]\n    long=[]\n    for i in df['state']: \n        location = geolocator.geocode(i)\n        try:\n            lat.append(location.latitude)\n            long.append(location.longitude)\n        except:\n            lat.append(\"NA\")\n            long.append(\"NA\")\n    df['Latitude'] = lat\n    df['Longitude'] = long\n    \n    return df\n\ndef map_df(df,col1,col2):\n    df = pd.DataFrame(df[[col1,col2]]\\\n            .groupby([col1])[col2].mean()\\\n            .sort_values(ascending=False)[:20]).reset_index()\n    df = feature_generation(df)\n    \n    return df\n\nstate_access = map_df(districts_engagement_data, \"state\", \"pct_access\")\nstate_engagement_index = map_df(districts_engagement_data, \"state\", \"engagement_index\")","8906eb03":"north_america_map = folium.Map(location=[38.9, -77.05], tiles='Stamen Watercolor', zoom_start=3)\nnorth_america_map","0d4c8d97":"mc = MarkerCluster()\nfor idx, row in state_access.iterrows():\n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        popup = \"\"\"\n        State : <b>%s<\/b><br>\n        Percentage Access : <b>%s<\/b><br>\n        \"\"\" % (row['state'], row['pct_access'])\n        mc.add_child(Marker([row['Latitude'], row['Longitude']],tooltip=popup))\n    north_america_map.add_child(mc)\nnorth_america_map","8a44318a":"mc = MarkerCluster()\nfor idx, row in state_engagement_index.iterrows():\n    if not math.isnan(row['Longitude']) and not math.isnan(row['Latitude']):\n        popup = \"\"\"\n        State : <b>%s<\/b><br>\n        Engagement Index : <b>%s<\/b><br>\n        \"\"\" % (row['state'], row['engagement_index'])\n        mc.add_child(Marker([row['Latitude'], row['Longitude']],tooltip=popup))\n    north_america_map.add_child(mc)\nnorth_america_map","e0ee8576":"#### Five last records of data","98713708":"### Bivariate Analysis\n","94dc358a":"### Distribution of Sector(s) in the District Information Data","c0256b79":"Distribution of locale","75c2c538":"<center><img src=\"https:\/\/www.un.org\/sites\/un2.un.org\/files\/field\/image\/1597430311.7857.jpg\" alt=\"covid_impact on digital learning\" width=\"500\" height=\"600\"><\/center>","f648a374":"#### Five top records of data","7c5bba2a":"#### Checking Null values \/ missing values","9120cc10":"### lets calculate the total missing values in the each column","78588a93":"#### Data information","88d25834":"### Occurrence of states in the District Information Data","5ae0748e":"### Base Map \ud83c\udf0e","b2f21b95":"## Loading the Products data","9c1716e4":"<div class=\"alert alert-block alert-info\">  \n \n<hr>\n<b>Data Description: <\/b> \n<hr> \n    <p>We include three basic sets of files to help you get started. The engagement data are based on LearnPlatform\u2019s Student Chrome Extension. The extension collects page load events of over 10K education technology products in our product library, including websites, apps, web apps, software programs, extensions, ebooks, hardwares, and services used in educational institutions. The engagement data have been aggregated at school district level, and each file represents data from one school district. The product file includes information about the characteristics of the top 372 products with most users in 2020. The district file includes information about the characteristics of school districts, including data from National Center for Education Statistics (NCES), The Federal Communications Commission (FCC), and Edunomics Lab.<\/p>\n <a href=\"https:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning\/data\">https:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning\/data<\/a>\n   \n<\/div>","481ed276":"#### Shape of data","aaf1fc84":"<h4>How we can install the libraries in python?<\/h4>","aaa60e6d":"#### Rows and columns in the dataset","af146a06":"### Let's start Geospatial analysis","9d582078":"<div class=\"alert alert-block alert-info\">  \n \n<hr>\n<b>Objectives: <\/b> \n<hr> \n    <p> <li>Uncover trends in digital learning<\/li>\n<li> Visualize the trends of digital connectivity and engagement in 2020. <\/li>\n<li> Understand and measure the scope and impact of the pandemic on digital learning. <\/li>\n<li> How does student engagement with different types of education technology change over the course of the pandemic? <\/li>\n<li> How does student engagement with online learning platforms relate to different geography? Demographic context (e.g., race\/ethnicity, ESL, learning disability)? Learning context? Socioeconomic status?<\/li>\n<li> Do certain state interventions, practices or policies (e.g., stimulus, reopening, eviction moratorium) correlate with the increase or decrease online engagement?<\/li><\/p>\n   \n<\/div>","fcf6d46b":"county_connections_ratio","efdd24d2":"### districts state wordcloud","4d45e524":"#### Coloumns\/features in data","0525dca2":"<div class=\"alert alert-block alert-success\">  \n \n<hr>\n<b>Source of Data: <\/b> \n<hr> \n <a href=\"https:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning\/datahttps:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning\/data\">https:\/\/www.kaggle.com\/c\/learnplatform-covid19-impact-on-digital-learning\/data<\/a>\n   \n<\/div>","223ac91f":"<div class=\"alert alert-block alert-info\">  \n    <h3><strong>\ud83d\udcd6 LearnPlatform COVID-19 Impact on Digital Learning \ud83d\ude37<\/strong><\/h3>\n    <h4><strong><li> Use digital learning data to analyze the impact of COVID-19 on student learning<\/strong><\/h4>\n<\/div>","298f26db":"## Exploratory data analysis \ud83d\udd0e \ud83d\udcca","71eafce4":"## Data Visualization \ud83d\udcdd\n###  Univariate Analysis \nDistribution of state","d9d21fd3":"## Importing Python Libraries  \ud83d\udcd8\n- Libraries are important and we call them to perform the different actions on our data and for training the models.\n- Its a first step to load the library to perform the specific task","af2376ba":"### Numeric features distrubution ","38bb177d":"### Missing value Treatment\n\n","b4aa76cc":"## Loading the data \ud83d\udcc1 ","3511ce76":"<p><center> <h3>More code is coming Soon. Please upvote you will get notifications with additions.<\/h3><\/center> <\/p>\n\n<center><img src=\"https:\/\/cdn.dribbble.com\/users\/32897\/screenshots\/3564812\/1.gif\" width= 600px length=600px><\/center>","e12f3666":"## Geospatial Analysis\n- For Geospatial Analysis we'll merge files the we'll do analysis on states vs pct_access\n### Merging files \ud83d\udcc1","4336139c":"### State and Engagement Index (Top 20) \ud83c\udf0e","7f8191b3":"### Deleting the duplicate rows","78d7d8a9":"#### Length of data","7735df91":"pct_free\/reduced","b8ec8932":"### Occurrence of Locale in the District Information Data","6bf50bae":"Distribution of pct_black\/hispanic","f703331c":"<h4>To install the python library is very easy<\/h4>\n- pip install name_of_library \n<h5> Like if you wanted to install tensorflow? <\/h5>\n- pip install tensforflow","25ba462d":"#### Data types of all coloumns","d8cd741d":"Summary :\n- The product file ```products_info.csv``` includes information about the characteristics of the top 372 products with most users in 2020. The categories listed in this file are part of LearnPlatform's product taxonomy. \n- The district file ```districts_info.csv``` includes information about the **characteristics of school districts**, including data from \n>- NCES (2018-19), \n>- FCC (Dec 2018), and \n>- Edunomics Lab. \n- The engagement data are aggregated at school district level, and each file in the folder ```engagement_data``` represents data from **one school district**.\n- First we had Analyzed the ```districts_info.csv``` & then ```products_info.csv``` lastly we did geo spatial analysis by merging.\n- I'm Humbled & thankful to all of the peoples who did their code & submitted on kaggle & had did a great learning by taking help from thier notebooks.","74385112":"# Loading All Engagement Files","528161b1":"### State and Percentage Access (Top 20) \ud83c\udf0e"}}