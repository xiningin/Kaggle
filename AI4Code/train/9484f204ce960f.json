{"cell_type":{"da572e11":"code","12ebba46":"code","45761c21":"code","bfbbc28a":"code","9d2aed67":"code","71f0c58c":"code","157941a9":"code","8e0b28f8":"code","aa93c40d":"code","44902ed2":"code","afc912a8":"code","f4700ac5":"code","a2fafe64":"code","2a0cb82d":"code","5f2872da":"code","fb6742d5":"code","1d48244b":"code","7d3109c3":"code","79f07b83":"code","d917236f":"code","52354379":"code","5b477dbb":"code","b4803ad9":"code","a2929b70":"code","0a3ae18d":"code","17596c34":"code","d0428e90":"code","7fe39da5":"code","97023b3b":"code","622a5864":"code","95612e91":"code","a8d27f3b":"code","32ecad9d":"code","a66fa5f3":"code","3092d476":"code","3be1bf8f":"code","fd2b4e8f":"markdown","96bcf001":"markdown"},"source":{"da572e11":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","12ebba46":"df = pd.read_csv('\/kaggle\/input\/engineering-placements-prediction\/collegePlace.csv')","45761c21":"df.head()","bfbbc28a":"df.shape","9d2aed67":"df.info()","71f0c58c":"df.isna().sum()","157941a9":"df.Stream.unique()","8e0b28f8":"plt.xticks(rotation = 90)\nsns.barplot(x = df.Stream, y = df.PlacedOrNot)","aa93c40d":"df.Age.unique()","44902ed2":"plt.figure(figsize = (12,7))\nsns.barplot(x = df.Age, y = df.PlacedOrNot, hue = df.Gender)","afc912a8":"plt.figure(figsize = (7,5))\nsns.countplot(x = df.Age)","f4700ac5":"df.Age.value_counts()","a2fafe64":"sns.barplot(x = df.Internships, y = df.PlacedOrNot)","2a0cb82d":"df.Internships.value_counts()","5f2872da":"df.CGPA.value_counts()","fb6742d5":"sns.barplot(x = df.CGPA, y = df.PlacedOrNot)","1d48244b":"sns.barplot(x = df.Hostel, y = df.PlacedOrNot)","7d3109c3":"sns.barplot(x = df.Gender, y = df.PlacedOrNot)","79f07b83":"sns.barplot(x = df.HistoryOfBacklogs, y = df.PlacedOrNot)","d917236f":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()","52354379":"df.Gender = le.fit_transform(df.Gender)\ndf.Stream = le.fit_transform(df.Stream)","5b477dbb":"df.head()","b4803ad9":"x = df.drop(['PlacedOrNot'], axis = 1)","a2929b70":"y = df.PlacedOrNot","0a3ae18d":"from sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","17596c34":"from sklearn.model_selection import cross_val_score","d0428e90":"cross_val_score(SVC(),x, y, cv = 3)","7fe39da5":"cross_val_score(DecisionTreeClassifier(), x, y, cv = 3)","97023b3b":"cross_val_score(LogisticRegression(), x, y, cv = 3)","622a5864":"cross_val_score(RandomForestClassifier(n_estimators=50), x, y, cv = 3)","95612e91":"cross_val_score(KNeighborsClassifier(),x, y ,cv = 3)","a8d27f3b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","32ecad9d":"model = RandomForestClassifier()\nmodel.fit(X_train, y_train)","a66fa5f3":"y_pred = model.predict(X_test)","3092d476":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)","3be1bf8f":"sns.heatmap(cm, annot = True)","fd2b4e8f":"Looks like RandomForest is the best model from this problem","96bcf001":"there are only 5 students whose ages are above 26, thats why their placement rate is high"}}