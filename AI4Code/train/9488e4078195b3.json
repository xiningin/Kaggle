{"cell_type":{"40b1b61c":"code","eae7dd4e":"code","b19dcf70":"code","ed00c990":"code","4a0a51d1":"code","b38deea6":"code","32b5663e":"code","0d8cba6d":"code","aea01248":"code","7d213d57":"code","50ada672":"code","75c21f5d":"code","a596dbcc":"code","00381699":"code","5c9dfbf7":"markdown","ca0a7c43":"markdown","cfa720cb":"markdown","10aac14c":"markdown","25daf4cf":"markdown","9a010680":"markdown","8ccb35de":"markdown","c777f8ab":"markdown","f4e907a8":"markdown","a17cc3b5":"markdown","f5aafe82":"markdown","d4e7d170":"markdown"},"source":{"40b1b61c":"# In order to install an updated package. For this tutorial we needed seaborn 0.11.0\n!pip install seaborn --upgrade","eae7dd4e":"# Lets start by importing seaborn and matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nsns.__version__","b19dcf70":"# We will use a pre-provided dataset called iris\niris = sns.load_dataset(\"iris\")\niris.head()","ed00c990":"# Lets make a simple relational plot using relplot\nsns.relplot(data=iris,x='sepal_length',y='sepal_width')","4a0a51d1":"# Scatterplot options from Relplot\nsns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter')\nplt.show()","b38deea6":"# Lineplot options from Relplot\nsns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='line')\nplt.show()","32b5663e":"# Notice plt.title gives us the ability to add a Title to the graph\nscatter = sns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter')\nplt.title(\"IRIS SCATTER PLOT\")\nplt.show()","0d8cba6d":"# Simple scatter plot, has HUE option enabled which adds another dimention to the data.\nsns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter', hue=\"petal_width\")\nplt.title(\"IRIS SCATTER PLOT\")\nplt.show()","aea01248":"# We can do the same with another datapoint species which will show us the distribution of species across the line chart\nsns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='line', hue=\"species\")\nplt.title(\"IRIS SCATTER PLOT\")\nplt.show()","7d213d57":"# We will be using the same scatter plot as above and add different labels to the same\nscatter = sns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter', hue='species')\nscatter.set_axis_labels('Sepal Length', 'Sepal Width')\nplt.title(\"IRIS SCATTER PLOT\")\nplt.show()","50ada672":"sns.set_style('dark')\nscatter = sns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter', hue='species')\nscatter.set_axis_labels('Sepal Length', 'Sepal Width')\nplt.title(\"IRIS SCATTER PLOT - Style = Dark\")\nplt.show()","75c21f5d":"sns.set_style('darkgrid')\nscatter = sns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter', hue='species')\nscatter.set_axis_labels('Sepal Length', 'Sepal Width')\nplt.title(\"IRIS SCATTER PLOT - With Grid\")\nplt.show()","a596dbcc":"sns.set_style('darkgrid')\nscatter = sns.relplot(data=iris,x='sepal_length',y='sepal_width', kind='scatter', hue='species', style='species')\nscatter.set_axis_labels('Sepal Length', 'Sepal Width')\nplt.title(\"IRIS SCATTER PLOT - With Grid\")\nplt.show()","00381699":"# The various datasets that are available from seaborn are as follows:-\nsns.get_dataset_names()","5c9dfbf7":"# Conclusion\nIn this tutorial we have learnt how to create a graph representing relational data stap by step. First we created a simple 2D graph and added labels, legend, theme, hue and title. This can be a useful starting point to learning Seaborn.","ca0a7c43":"# Relplot\n\nAs discussed earlier, we will study the first kind of plot called the **Relplot**. The Relplot is a simple plot to see relational data. The syntax is simple and it also gives us ways to switch between tow kind of **Relplot**. Remember **Relplot** always returns **FlatGrid**. This will come handy as we go ahead.\n\n1. Scatterplot\n2. Lineplot\n\nBelow is an illustration of simple **Relplot** with just the data and x & y reprensets the data from the DataFrame to be illustrated on the graph. Below this we will also explore the scatter and the line plot. We will be using the **kind** argument for the same.","cfa720cb":"## How to add legend?\nAs our data is 2-Dimentional and we don't see the legend on the screen. In order to increase the dimention we can add hue parameter to the plots. Lets re-create the two plots with hue data.","10aac14c":"*Note: The various Datasets that are available form Seaborn are as follows:-*","25daf4cf":"# Seaborn Tutorials - Relplots\n\n## Introduction\nThis series of tutorials will consist of 5-6 notebooks and will focus on getting started with seaborn in a gradual fashion rather then just dumping few graphs here and there. The part I of the tutorial will only focus on creating the canvas on which the graphs will be created.\n\nWe will start by looking at the three different kind of graphs that can be created using Seaborn.\n\n1. Relplot - Relational Plots\n2. Catplot - Categorical Plots\n3. Displot - Distribution Plots\n\nRemember :  Always import matplotlib in order to print any graph on the python notebook.","9a010680":"Lets just go ahead and add 4-5 different themes to the graphs above and get our plots in place. Adding themes is just a matter of specifying them. Right now we use the themes provided by seaborn.","8ccb35de":"From the above we see there are few issues with the graph.\n1. Add Title to the graph\n2. There is no legend to the system, this also makes it ambigious.\n3. There are no labels on the X and Y axis. We need to specify the labels as well to make it look good.\n4. There are no colorcodes to showcase the data and there is no way to showcase the difference between data points\n5. How to add internal styles to group of data","c777f8ab":"## How to add Title to a Graph?","f4e907a8":"## How to add style to the group of Data?\nStyle helps us to style up the data that we represent based on a certain groups. These groups help us visualize the data in a better way.","a17cc3b5":"## How to add axis labels?\nAdding axis labels are pretty easy. As you create the graph you get the as we know from the above mentioned introduction. The Relplot always returns a FactGrid and FactGrid gives us multiple functions to manipulate the graph and the representation associated.\n\nLets go ahead and get to know how to add axis labels. You can refer to this document on [FactGrid](https:\/\/seaborn.pydata.org\/generated\/seaborn.FacetGrid.html) in order to know the different functions offered.","f5aafe82":"### Start by importing the various libraries","d4e7d170":"## How to add styles to the plots?"}}