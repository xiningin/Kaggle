{"cell_type":{"f055e6bb":"code","55a160d8":"code","3970be5b":"code","bf8f44a9":"code","32156d29":"code","73fdd85d":"code","a74e58c8":"code","75f1bec4":"code","2170a859":"code","543536ad":"code","6f2b241d":"markdown","dbba4b3b":"markdown","c605ea1d":"markdown","da61f851":"markdown","193c429d":"markdown"},"source":{"f055e6bb":"import pandas as pd","55a160d8":"train = pd.read_csv('..\/input\/netflix-appetency\/train.csv')\ntest = pd.read_csv('..\/input\/netflix-appetency\/test.csv')","3970be5b":"print('Shape training set: ', train.shape); print()\ntrain.head()","bf8f44a9":"pandas_describe = train.describe(include='all')\npandas_describe","32156d29":"# Only one categorical value\none_cat = train.columns[(pandas_describe.loc['unique', :]==1) & (pandas_describe.loc['count', :]==70000)]\n\nprint('Len: ', len(one_cat)); print(); print(one_cat)","73fdd85d":"train[one_cat].value_counts()","a74e58c8":"# Same count, mean, std and max\nsame_max = train.columns[(pandas_describe.loc['mean', :]==3.1383) &\n              (pandas_describe.loc['count', :]==70000) &\n              (pandas_describe.loc['std', :]==17.344943670292547) &\n              (pandas_describe.loc['max', :]==99)] \n\nprint('Len: ', len(same_max)); print(); print(same_max)","75f1bec4":"train[same_max[:5]].value_counts() # Inspect first results","2170a859":"# Same count, mean, std and min\nsame_min = train.columns[(pandas_describe.loc['mean', :]==-3.1383) &\n              (pandas_describe.loc['count', :]==70000) &\n              (pandas_describe.loc['std', :]==17.344943670292547) &\n              (pandas_describe.loc['min', :]==-99)] \n\nprint('Len: ', len(same_min)); print(); print(same_min)","543536ad":"train[same_min].value_counts()","6f2b241d":"### To be continued!","dbba4b3b":"In this notebook I'll quickly highlight some interesting findings you can extract by simply looking at the Pandas `.describe()` method.","c605ea1d":"# Strategies","da61f851":"* **one_cat**: drop the columns, since they add nothing to your model\n* **same_max**: keep just one columns since all the others are equal\n* **same_min**: same as above","193c429d":"By looking carefully if one scrolls to the right, we see that for example:\n\n- `feature_497` and `499` oddly share the same count, mean, std and min values, at `-3.18`, `17.34` and `-99` respectively\n- a similar patter is present in columns `feature_501` and `503` for instance, where instead of min at `-99` we have max at `99` and the mean value is positive\n- other columns such as `feature_500` have count at `70000` and mean, max and min at `0` (meaning there's only **one value in the column**)\n- another odd behaviour is the presence of columns with just **one categorical value**.\n\nLet's try to isolate these issues."}}