{"cell_type":{"39501a7a":"code","5587f30c":"code","e22a8fb7":"code","95a2d493":"code","756c6781":"code","1220dab7":"code","985491cf":"code","0e8bea0d":"code","6eaa1758":"code","8278ba5a":"code","c2d3518f":"code","b54a3f70":"code","4360a3df":"code","697725ac":"code","3950e42a":"code","fa0af19a":"code","75e401e7":"code","3bc18f1e":"code","b31d0821":"code","782951e0":"markdown","d3ee10ab":"markdown","94179999":"markdown","46e7d20b":"markdown","6f78c07e":"markdown","9f12848f":"markdown","326dc41c":"markdown","925bbe69":"markdown","ccc83cc2":"markdown","978608b7":"markdown","df9d1c8d":"markdown","0c6f0ce9":"markdown","ed12589f":"markdown"},"source":{"39501a7a":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score, mean_squared_error\nfrom sklearn.linear_model import ElasticNet, LassoLars, Ridge, LinearRegression, Lasso\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, PolynomialFeatures\n%matplotlib inline\nplt.style.use('ggplot')","5587f30c":"df = pd.read_csv('..\/input\/diamonds.csv',delimiter=',')\ndf.head()","e22a8fb7":"df.isnull().sum()","95a2d493":"df.info()","756c6781":"df.drop(['Unnamed: 0','x','y','z'],inplace=True, axis=1)\ndf.head()","1220dab7":"f, ax = plt.subplots(3, figsize=(12,18))\nsns.countplot('cut', data=df, ax=ax[0])\nsns.countplot('color', data=df, ax=ax[1])\nsns.countplot('clarity', data=df, ax=ax[2])\nax[0].set_title('Diamond cut')\nax[1].set_title('Colour of the diamond')\nax[2].set_title('Clarity of the diamond')","985491cf":"df.describe()","0e8bea0d":"f, ax = plt.subplots(4, figsize=(12,24))\nsns.distplot(df.carat,color='c',ax=ax[0])\nsns.distplot(df.depth,color='c',ax=ax[1])\nsns.distplot(df.table,color='c',ax=ax[2])\nsns.distplot(df.price,color='c',ax=ax[3])\nax[0].set_title('Diamond carat distribution')\nax[1].set_title('Total depth distribution')\nax[2].set_title('Table width distribution')\nax[3].set_title('Price distribution')","6eaa1758":"g = sns.pairplot(df,vars=['carat', 'depth',\n      'table', 'price'])","8278ba5a":"f, ax = plt.subplots(3,figsize=(12,16))\n# sns.violinplot(x='carat',y='price',data=df,ax=ax[3])\nsns.violinplot(x='clarity',y='price',data=df,ax=ax[2])\nsns.violinplot(x='color',y='price',data=df,ax=ax[1])\nsns.violinplot(x='cut',y='price',data=df,ax=ax[0])\nax[0].set_title('Cut vs Price')\nax[1].set_title('Color vs Price')\nax[2].set_title('Clarity vs Price')\n# ax[3].set_title('carat vs Price')","c2d3518f":"sns.jointplot(x='carat',y='price',data=df,color='c')","b54a3f70":"\ncorrmat = df.corr()\nf, ax = plt.subplots(figsize=(20, 9))\nsns.heatmap(corrmat, vmax=.8, annot=True)","4360a3df":"le = LabelEncoder()\ndf.cut = le.fit_transform(df.cut)\ndf.color = le.fit_transform(df.color)\ndf.clarity = le.fit_transform(df.clarity)\ndf.info()","697725ac":"df","3950e42a":"x = df.drop('price',axis=1)\ny = df.price","fa0af19a":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=28)","75e401e7":"sc = StandardScaler()\nsc.fit(x_train)\nsc.transform(x_train)\nsc.transform(x_test)","3bc18f1e":"clf = LinearRegression()\nclf.fit(x_train,y_train)\n","b31d0821":"from sklearn.linear_model import LinearRegression\nfrom yellowbrick.regressor import PredictionError\nf, ax = plt.subplots(figsize=(30, 15))\nmodel = LinearRegression() # Instantiate the linear model and visualizer\nvisualizer = PredictionError(model=clf, identity=False)\nvisualizer.fit(x_train, y_train)  # Fit the training data to the visualizer\nvisualizer.score(x_test, y_test)  # Evaluate the model on the test data\nvisualizer.poof()             # Draw\/show\/poof the data","782951e0":"#### More plots to understand the variation of price","d3ee10ab":"#### Describe the characteristics of the columns containing numeric values.","94179999":"Various count plots.","46e7d20b":"#### Load the data into a dataframe","6f78c07e":"# Import the necessary libraries\n","9f12848f":"Drop the first column and the *x*, *y*,*z* columns as the total depth and the table width will be used for further analysis.","326dc41c":"* Most of the diamonds in the dataset are below 2 carats.\n* The depth peaks at around 62.\n* Table width peaks around 58.\n* Most of the diamonds in the dataset sold are less than $5000.","925bbe69":"# Regression","ccc83cc2":"# Data Visualization","978608b7":"From the above plots, the following observations could be made:\n* Quite a lot of diamonds have an *Ideal* cut following by *Premium* and *Very Good.*\n* The dataset contains good distribution of various colours, with *I* and *J* having the least number.\n* Only a small fraction of the diamonds have the best quality while even smaller fracition of the dianonds have poor quality.","df9d1c8d":"#### Linear Model","0c6f0ce9":"Convert the non-numeric data into numbers.","ed12589f":"There are no missing values in the dataset."}}