{"cell_type":{"2aa78aff":"code","2c418b6b":"code","eeb7f10d":"code","3824bbf5":"code","f376ab8a":"code","ffec9589":"code","7ec981b9":"code","3d17f598":"code","867f25c5":"code","28ec25dd":"code","021b437a":"code","b300eb15":"code","0f24aac6":"code","dc784d2c":"code","9e255acc":"code","3943a885":"code","affa8c46":"code","1147641c":"code","e57e943b":"code","d6fea3a7":"markdown","b7d12c3d":"markdown","89ce9ecc":"markdown","54b8cca3":"markdown","935af5fd":"markdown","974ad534":"markdown","ed1c5592":"markdown","b9626141":"markdown","3094e236":"markdown","83e413e3":"markdown"},"source":{"2aa78aff":"import os\nimport pandas as pd\nimport numpy as np\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport plotly as py\nimport plotly.graph_objs as go\nimport gensim\nfrom gensim import corpora, models, similarities\nimport logging\nimport tempfile\nfrom nltk.corpus import stopwords\nfrom string import punctuation\nfrom collections import OrderedDict\nimport seaborn as sns\nimport pyLDAvis.gensim\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ninit_notebook_mode(connected=True) #do not miss this line\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\npd.set_option('display.max_columns', None)\npd.set_option('display.float_format', lambda x: '%.3f' % x)\npd.set_option('display.width', 500)","2c418b6b":"data_path = '..\/input\/data-bg-tweets\/data_bg.csv'\ntweets = pd.read_csv(data_path, encoding='latin1')","eeb7f10d":"\ntweets = tweets.assign(Time=pd.to_datetime(tweets.time)).drop('id', axis='columns')\n\nprint(\"Number of tweets: \",len(tweets['tweet']))\ntweets.head(5)","3824bbf5":"tweets['Time'] = pd.to_datetime(tweets['time'], format='%H:%M:%S')\ntweetsT = tweets['Time']\n\ntrace = go.Histogram(\n    x=tweetsT,\n    marker=dict(\n        color='blue'\n    ),\n    opacity=0.75\n)\n\nlayout = go.Layout(\n    title='Tweet Activity Over Hours',\n    height=450,\n    width=1200,\n    xaxis=dict(\n        title='Hours'\n    ),\n    yaxis=dict(\n        title='Tweet Quantity'\n    ),\n    bargap=0.2,\n)\n\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig)","f376ab8a":"tweets['Time'] = pd.to_datetime(tweets['date'], format= '%Y-%m-%d')\ntweetsT = tweets['Time']\n\ntrace = go.Histogram(\n    x=tweetsT,\n    marker=dict(\n        color='blue'\n    ),\n    opacity=0.75\n)\n\nlayout = go.Layout(\n    title='Tweet Activity Over Years',\n    height=450,\n    width=1200,\n    xaxis=dict(\n        title='Month and year'\n    ),\n    yaxis=dict(\n        title='Tweet Quantity'\n    ),\n    bargap=0.2,\n)\n\ndata = [trace]\n\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig)","ffec9589":"# Preparing a corpus for analysis and checking first 10 entries\n\ncorpus=[]\na=[]\nfor i in range(len(tweets['tweet'])):\n        a=tweets['tweet'][i]\n        corpus.append(a)\n        \ncorpus[0:10]","7ec981b9":"TEMP_FOLDER = tempfile.gettempdir()\nprint('Folder \"{}\" will be used to save temporary dictionary and corpus.'.format(TEMP_FOLDER))\n\nlogging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)","3d17f598":"# removing common words and tokenizing\nlist1 = ['RT','rt']\nstoplist = stopwords.words('english') + list(punctuation) + list1\n\ntexts = [[word for word in str(document).lower().split() if word not in stoplist] for document in corpus]\n\ndictionary = corpora.Dictionary(texts)\ndictionary.save(os.path.join(TEMP_FOLDER, 'bill.dict'))  # store the dictionary, for future reference\n\n#print(dictionary)\n#print(dictionary.token2id)","867f25c5":"corpus = [dictionary.doc2bow(text) for text in texts]\ncorpora.MmCorpus.serialize(os.path.join(TEMP_FOLDER, 'bill.mm'), corpus)  # store to disk, for later use","28ec25dd":"tfidf = models.TfidfModel(corpus) # step 1 -- initialize a model","021b437a":"corpus_tfidf = tfidf[corpus]  # step 2 -- use the model to transform vectors","b300eb15":"total_topics = 5","0f24aac6":"lda = models.LdaModel(corpus, id2word=dictionary, num_topics=total_topics)\ncorpus_lda = lda[corpus_tfidf] # create a double wrapper over the original corpus: bow->tfidf->fold-in-lsi","dc784d2c":"#Show first n important word in the topics:\nlda.show_topics(total_topics,5)","9e255acc":"data_lda = {i: OrderedDict(lda.show_topic(i,25)) for i in range(total_topics)}\n#data_lda","3943a885":"df_lda = pd.DataFrame(data_lda)\ndf_lda = df_lda.fillna(0).T\nprint(df_lda.shape)","affa8c46":"df_lda","1147641c":"g=sns.clustermap(df_lda.corr(), center=0, standard_scale=1, cmap=\"RdBu\", metric='cosine', linewidths=.75, figsize=(15, 15))\nplt.setp(g.ax_heatmap.yaxis.get_majorticklabels(), rotation=0)\nplt.show()\n#plt.setp(ax_heatmap.get_yticklabels(), rotation=0)  # For y axis","e57e943b":"pyLDAvis.enable_notebook()\npanel = pyLDAvis.gensim.prepare(lda, corpus_lda, dictionary, mds='tsne')\npanel","d6fea3a7":"<a id = \"5\"><\/a><br>\n### 3.2. Tweet Activity Over Years","b7d12c3d":"<a id = \"1\"><\/a><br>\n## 1. Libraries","89ce9ecc":"<a id = \"3\"><\/a><br>\n## 3. Time Series\n<a id = \"4\"><\/a><br>\n### 3.1. Tweet Activity Over Hours\n\n","54b8cca3":"<a id = \"8\"><\/a><br>\n### 5.1. Topic Modelling Correlation Matrix ","935af5fd":"<a id = \"9\"><\/a><br>\n### 5.2. LDA Visualization (pyLDAvis)","974ad534":"<a id = \"10\"><\/a><br>\n## 6. References\n* https:\/\/www.kaggle.com\/errearanhas\/topic-modelling-lda-on-elon-tweets\/notebook\n* https:\/\/towardsdatascience.com\/topic-modeling-and-latent-dirichlet-allocation-in-python-9bf156893c24#:~:text=Topic%20modeling%20is%20a%20type,document%20to%20a%20particular%20topic.","ed1c5592":"## Introduction\n\nTopic modeling is a type of statistical modeling for discovering the abstract \u201ctopics\u201d that occur in a collection of documents. Latent Dirichlet Allocation (LDA) is an example of topic model and is used to classify text in a document to a particular topic. It builds a topic per document model and words per topic model, modeled as Dirichlet distributions.\n\n\n<font color = 'blue'>\nContent: \n\n1. [Libraries](#1)\n1. [Load and Check Data](#2)\n1. [Time Series](#3)\n   * 3.1 [Tweet Activity Over Hours](#4)\n   * 3.2 [Tweet Activity Over Years](#5)\n1. [Text Preparation](#6)\n1. [LDA Topic Modelling](#7)\n   * 5.1. [Topic Modelling Correlation Matrix](#8)\n   * 5.2. [LDA Visualization (pyLDAvis)](#9)\n1. [References](#10)\n","b9626141":"<a id = \"7\"><\/a><br>\n## 5. LDA Topic Modelling","3094e236":"<a id = \"6\"><\/a><br>\n## 4. Text Preparation","83e413e3":"<a id = \"2\"><\/a><br>\n## 2. Load and Check Data"}}