{"cell_type":{"94ebd7a3":"code","b8a5ebc0":"code","cc1290a9":"code","63b2b5a4":"code","ae40fd74":"code","74d2ef8e":"code","f3d2753a":"code","01a98e1f":"code","d7320c19":"code","ca1e5bce":"code","19095af8":"code","a8702425":"code","3712d156":"markdown","a3846207":"markdown","eb306d77":"markdown","8a36d91c":"markdown","49f77bff":"markdown","afd152e0":"markdown","fcb5e04b":"markdown","8b0f8171":"markdown"},"source":{"94ebd7a3":"import os\nimport shutil","b8a5ebc0":"WHEELS_FOLDER_NAME = \"wheels\"\n\n# This is a list of our required packages, specified exactly as you would for\n# !pip install. If you need to specify where to find the links, list them in\n# the links list\nPACKAGES = [\n    \"torch==1.7.1+cu110\", \n    \"torchvision==0.8.2+cu110\", \n    \"torchaudio==0.7.2\", \n    \"cellpose==0.6.1\",\n]\nLINKS = [\n    \"https:\/\/download.pytorch.org\/whl\/torch_stable.html\"\n]","cc1290a9":"# Path roots for the project\nINPUT_ROOT = os.path.abspath(os.path.join(\"..\", \"input\"))\nTEMP_ROOT = os.path.abspath(os.path.join(\"..\", \"temp\"))\nWORKING_ROOT = os.path.abspath(\".\")\nprint(f\"INPUT_ROOT='{INPUT_ROOT}'\")\nprint(f\"TEMP_ROOT='{TEMP_ROOT}'\")\nprint(f\"WORKING_ROOT='{WORKING_ROOT}'\")","63b2b5a4":"wheels_folder = os.path.join(TEMP_ROOT, WHEELS_FOLDER_NAME)\nwheels_folder","ae40fd74":"zip_file_base_name = os.path.join(WORKING_ROOT, WHEELS_FOLDER_NAME)\nzip_file_base_name","74d2ef8e":"# Clear any contents that may already be in this folder\nif os.path.exists(wheels_folder):\n    shutil.rmtree(wheels_folder)","f3d2753a":"# Tidy any pre-existing zip file\nif os.path.exists(zip_file_base_name + \".zip\"):\n    os.remove(zip_file_base_name + \".zip\")","01a98e1f":"pip_packages = \" \".join(PACKAGES)\nfind_links = \" \".join([f\"--find-links {link}\" for link in LINKS])","d7320c19":"%%time\n!pip wheel {pip_packages} {find_links} \\\n    --progress-bar off \\\n    --wheel-dir={wheels_folder}","ca1e5bce":"# List out the files we've downloaded\nos.listdir(wheels_folder)","19095af8":"%%time\n# We're going to zip up this folder into the working root folder with\n# the name <WHEELS_FOLDER_NAME>.zip\nshutil.make_archive(base_name=zip_file_base_name,\n                    format=\"zip\",\n                    root_dir=wheels_folder)","a8702425":"requirements_file_path = os.path.join(WORKING_ROOT, \"requirements.txt\")\nwith open(requirements_file_path, \"w\") as f:\n    for package in PACKAGES:\n        f.write(f\"{package}\\n\")\nwith open(requirements_file_path, \"r\") as f:\n    requirements_txt = f.read()\n    print(f\">>>> {requirements_file_path}\\n\")\n    print(requirements_txt)\n    print(\"<<<<\")","3712d156":"# Notebook to package libraries for HPA21 Competition\n\n## If you find this notebook useful to you, please up-vote it. Thank you, Andrew.\n\nHuman Protein Atlas 2021 project is a code competition where results are submitted from a notebook\nthat is prohibited from using internet access.\n\nThis means that to use additional packages in your workbook you need to offline load them.\n\nUse this notebook to prepare packages for offline loading.\n\n### See the end of the notebook for instructions on how to use the packags in your competition notebook.\n","a3846207":"# Notebook Configuration","eb306d77":"# Create the requirements.txt file\n\nUse this to pip install all of the packages.","8a36d91c":"# Now zip these files\n\nAgain can take a few minutes.","49f77bff":"# Next steps\n\nNow upload the output of the workbook as a Dataset in Kaggle. This is what you are now going to use\nin your offline competition entry notebook.\n\n1. In your notebook use the \\[+ Add Data\\] button and add the dataset you just created.\n2. In your notebook !pip install the packages in your list above, but specify --no_index and --find-links to your _wheels_ folder.\n\nE.g. Assume you have called your dataset \"HPA21 Extra Packages\" and used the default folder name \"wheels\". \n     This will have a path in your notebook of \"\/input\/hpa21-extra-packages\/wheels\". To install all of the\n     packages you specified use:\n\n     > !pip install \\\n     >     --requirement \/input\/hpa21-extra-packages\/requirements.txt \\\n     >     --no-index \\\n     >     --find-links file:\/\/\/input\/hpa21-extra-packages\/wheels\n     \n### IMPORTANT: You need the _--no-index_ to make it work offline!\n","afd152e0":"# Folder Roots","fcb5e04b":"# Download the wheel files\n\nNote that this can take a few minutes, depending on the size of the packages. We're using\n_!pip wheel_ rather than pip download as this will build the wheel files for packages\nthat are available only as a source .tar.gz file.","8b0f8171":"# Imports"}}