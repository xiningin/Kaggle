{"cell_type":{"92e95520":"code","33877ae4":"markdown","b3d5a3a7":"markdown"},"source":{"92e95520":"# Tus notas pueden ir aqu\u00ed si quieres.. :)\n# Tambi\u00e9n puedes responder\/discutir sobre los comentarios de este cuaderno..","33877ae4":"\u00a1Bienvenido al primer d\u00eda de Introducci\u00f3n a Automated Data Pipelines!\n\nHoy vamos a cubrir dos cosas:\n\n* Versiones de datos: \u00bfqu\u00e9 es y cu\u00e1ndo deber\u00eda hacerlo?\n* Creando un conjunto de datos Kaggle desde GitHub\n\nRevisar\u00e9 este cuaderno en vivo a las 9:00 AM hora del Pac\u00edfico el 29 de enero de 2019. [Aqu\u00ed hay un enlace a la transmisi\u00f3n en vivo, que tambi\u00e9n deber\u00eda apuntar a la grabaci\u00f3n si extra\u00f1a la transmisi\u00f3n en vivo](https:\/\/youtu.be\/Xi140XVOznM),\n\n# Versiones de datos\n\nEs posible que ya est\u00e9 familiarizado con las versiones de trabajar con el control de versiones o el control de fuente para su c\u00f3digo. La idea b\u00e1sica es que, a medida que trabaja, crea copias est\u00e1ticas de su trabajo que puede consultar m\u00e1s adelante. (Esto es lo que hace el bot\u00f3n de \"commit\" en los kernels). Esto es particularmente importante cuando est\u00e1 colaborando porque si usted y un colaborador est\u00e1n trabajando en el mismo archivo, puede comparar cada una de sus versiones y decidir qu\u00e9 cambios realizar.\n\nAs\u00ed que el control de versi\u00f3n para el c\u00f3digo es una buena idea ... pero \u00bfqu\u00e9 pasa con los datos?\n\nLa idea de que deber\u00eda versionar sus datos es en realidad un tanto controvertida.\n\n[Mucha gente](https:\/\/www.datacamp.com\/community\/blog\/version-control-data-science) [recomendar\u00e1](https:\/\/datascience.stackexchange.com\/questions\/5178\/how-to -deal-con-versi\u00f3n-control-de-grandes-cantidades-de-datos-binarios \/ 6943 # 6943) [que no versionas tus datos](http: \/\/columbia-applied-data-science.github. io \/ homework \/ 2013\/04\/29 \/ homework-08-stackoverflow-questions \/) en absoluto. Y hay algunas buenas razones para esto:\n\n* La mayor\u00eda del software de control de versiones est\u00e1 dise\u00f1ado para archivos con c\u00f3digo en ellos, y estos archivos generalmente no son muy grandes. Tratar de usar el software de control de versiones para archivos grandes (m\u00e1s de un par de MB) significa que muchas de sus funciones \u00fatiles, como mostrar las diferencias de l\u00ednea, ya no son tan \u00fatiles.\n* El control de versi\u00f3n puede significar almacenar varias copias de archivos, y si tiene un conjunto de datos grande, esto puede resultar muy costoso r\u00e1pidamente.\n* Si realiza una copia de seguridad de sus datos de forma rutinaria y utiliza el control de versiones para las consultas o secuencias de comandos que est\u00e1 utilizando para extraer datos, entonces puede ser redundante almacenar subconjuntos espec\u00edficos de sus datos por separado.\n\nEstoy de acuerdo en que no es necesario guardar versiones separadas de sus datos para cada tarea que realice. Sin embargo, **si est\u00e1 entrenando modelos de aprendizaje autom\u00e1tico, creo que deber\u00eda actualizar tanto los datos exactos que us\u00f3 para entrenar su modelo como su c\u00f3digo**. Esto se debe a que, sin el c\u00f3digo, los datos y el entorno, no podr\u00e1 reproducir su modelo. (Escrib\u00ed [un art\u00edculo completo al respecto si est\u00e1s interesado](https:\/\/openreview.net\/forum?id=B1eYYK5QgX).)\n\nEsto se convierte en un problema realmente espinoso si desea realizar experimentos y comparar modelos entre s\u00ed. \u00bfEsta nueva arquitectura de modelo supera a la que est\u00e1s usando actualmente? Sin saber en qu\u00e9 datos entren\u00f3 el modelo original, es dif\u00edcil saberlo.\n\n## \u00bfCu\u00e1ndo es apropiado el versionado de datos?\n\n\u00bfCu\u00e1ndo deber\u00edas versionar tus datos?\n\n* Al realizar cambios de esquema\/metadatos, como agregar o eliminar columnas o cambiar las unidades en las que se almacena la informaci\u00f3n.\n* Cuando est\u00e1s entrenando modelos experimentales de aprendizaje autom\u00e1tico. La unidad reproducible m\u00e1s peque\u00f1a para modelos de aprendizaje autom\u00e1tico es datos de capacitaci\u00f3n + c\u00f3digo de especificaci\u00f3n del modelo. (Hablo m\u00e1s sobre esto [en esta publicaci\u00f3n de blog](http:\/\/blog.kaggle.com\/2018\/09\/19\/help-i-cant-reproduce-a-machine-learning-project\/).)\n\n\u00bfCu\u00e1ndo deber\u00edas considerar no versionar tus datos?\n\n* Cuando sus datos no est\u00e1n siendo utilizados para entrenar modelos. Por ejemplo, es m\u00e1s eficiente en el espacio simplemente guardar la consulta SQL que us\u00f3 para hacer un gr\u00e1fico que guardar todos los datos transformados.\n* Cuando sus datos son lo suficientemente grandes como para almacenar una copia versionada ser\u00eda prohibitivamente costoso. En este caso, recomendar\u00eda la versi\u00f3n tanto de los scripts que usaste para extraer los datos como de suficientes estad\u00edsticas descriptivas para poder volver a generar un conjunto de datos muy similar.\n* Cuando tu proyecto vive completamente en GitHub. La versi\u00f3n de grandes conjuntos de datos a trav\u00e9s de GitHub puede volverse dif\u00edcil de manejar r\u00e1pidamente. (GitLFS puede ayudar con esto, pero si est\u00e1 almacenando conjuntos de datos muy grandes, GitHub en general probablemente no sea la mejor herramienta para el trabajo. Una base de datos o un servicio de alojamiento de almacenamiento de blog espec\u00edficamente dise\u00f1ado para grandes datos generalmente le dar\u00e1 menos problemas. La mayor\u00eda de los servicios en la nube generalmente ya tienen alg\u00fan tipo de control de versiones incorporado.\n\nPor supuesto, si debe o no la versi\u00f3n de los datos finalmente se reduce a un juicio de su parte.\n\n## Herramientas para la versi\u00f3n de datos cuando se trabaja localmente\n\nSi sus datos est\u00e1n en Kaggle, ya nos encargamos del control de versiones de los datos; puede desplazarse a la parte inferior de la p\u00e1gina de inicio de su conjunto de datos para ver la pesta\u00f1a \"Historial\" y ver las versiones anteriores del conjunto de datos, qu\u00e9 cambios se realizaron entre las versiones y cualquier actualizaci\u00f3n que se haya realizado en los metadatos. [Este conjunto de datos de contadores de bicicletas en Ottawa es un buen ejemplo de un conjunto de datos que ha pasado por varias iteraciones](https:\/\/www.kaggle.com\/m7homson\/ottawa-bike-counters).\n\nPero algunos datos no se deben poner en Kaggle ([no estamos cumpliendo con la HIPAA en este momento](https:\/\/www.hhs.gov\/hipaa\/for-professionals\/special-topics\/cloud-computing\/index.html) , por ejemplo) y algunas veces es posible que prefiera trabajar localmente. \u00bfQu\u00e9 herramientas puedes usar en ese caso?\n\n> **Si ya est\u00e1 utilizando herramientas en la nube para almacenar sus datos, la mayor\u00eda de las plataformas tendr\u00e1n una versi\u00f3n integrada.** Probablemente deber\u00eda usarlas en lugar de configurar su propio sistema, si no fuera por esa raz\u00f3n, ser\u00e1 alguien. El problema de otra persona cuando inevitablemente se rompe. \ud83d\ude02\n\nEl ecosistema de herramientas de control de versiones de datos todav\u00eda es bastante joven, pero tiene algunas opciones. En este momento, dos de los m\u00e1s populares son [DVC](https:\/\/dvc.org\/), que es la abreviatura de Data Version Control, y [Pachyderm](https:\/\/pachyderm.io\/). Estos no son entornos de codificaci\u00f3n como Kaggle Kernels. M\u00e1s bien, son similares a Git: le permiten guardar versiones espec\u00edficas de su c\u00f3digo y datos junto con comentarios sobre ellos. Esto le permite revertir su trabajo m\u00e1s tarde y hacer un seguimiento de lo que hizo y colaborar con otros en el mismo c\u00f3digo \/ datos.\n\nLa mayor diferencia entre estas herramientas y Git es que\n\n**Similitudes:**\n\n* Ambos se basan en Git y est\u00e1n dise\u00f1ados para interactuar bien con las cadenas de herramientas Git existentes.\n* Se enfocan en versionar de pipelines completas, versionar los datos, el c\u00f3digo y los modelos entrenados juntos.\n\n**Diferencias:**\n\n* DVC solo est\u00e1 disponible como herramienta de l\u00ednea de comandos. Pachyderm tambi\u00e9n tiene una interfaz gr\u00e1fica de usuario (GUI).\n* DVC es de c\u00f3digo abierto y gratuito. Pachyderm tiene una versi\u00f3n de c\u00f3digo abierto, pero para obtener todos los detalles que necesitar\u00e1 para la edici\u00f3n de la empresa.\n* Pachyderm est\u00e1 completamente en contenedores (Docker y Kubernetes). Puedes usar contenedores con DVC pero no son los predeterminados.\n\nOtras opciones para versionar datos y tuber\u00edas incluyen, en orden alfab\u00e9tico: [Dataiku](https:\/\/www.dataiku.com\/), [Datalad](https:\/\/www.datalad.org\/), [Datmo](https:\/\/github.com\/datmo\/datmo), [GitLFS](https:\/\/git-lfs.github.com\/), [qri](https:\/\/github.com\/qri-io\/qri) y [Quilt](https:\/\/quiltdata.com\/). Estos son una combinaci\u00f3n de c\u00f3digo cerrado y c\u00f3digo abierto y muchos de ellos est\u00e1n en desarrollo, por lo que es una buena idea hacer algunas compras antes de comprometerse con un sistema de herramientas.\n\n## ejercicio\n\nEsta secci\u00f3n es un poco te\u00f3rica, as\u00ed que tengo algunas preguntas de discusi\u00f3n para usted.\n\nPara cada uno de estos conjuntos de datos, considere si tiene sentido la versi\u00f3n de estos datos.\n\n* Tiene un conjunto de datos de transmisi\u00f3n de datos de sensores con m\u00e1s de cinco mil millones de columnas. Se actualiza cada cinco segundos. Lo est\u00e1 utilizando para crear un panel de control que permita a las partes interesadas monitorear las anomal\u00edas.\n* Tienes un .CSV con unos pocos miles de filas de datos de estudiantes. Lo est\u00e1 almacenando en una computadora que cumple con las leyes de su pa\u00eds sobre privacidad de datos. Desea construir un modelo para ver si hay un efecto cuando las pruebas se administran en los puntajes de las pruebas.\n* Est\u00e1s trabajando con una base de datos de clientes de un mill\u00f3n de due\u00f1os de mascotas que han pedido comida personalizada para perros a trav\u00e9s de tu inicio. Desea crear una plataforma de diapositivas con visualizaciones que resuman la informaci\u00f3n sobre sus clientes para ayudar al equipo de marketing a decidir d\u00f3nde comprar anuncios de peri\u00f3dicos.\n","b3d5a3a7":"# Creando un conjunto de datos Kaggle desde GitHub\n\nBien, ahora que tenemos algo de teor\u00eda fuera del camino y deber\u00edas tener una mejor idea de si las versiones son apropiadas, \u00a1hagamos algunos conjuntos de datos nuevos!\n\nHoy vamos a hacer conjuntos de datos de los repos de GitHub (abreviatura de \"repositorios\"). Primero, deber\u00e1s elegir un repositorio.\n\n> Actualmente, solo admitimos la creaci\u00f3n de conjuntos de datos de los repositorios **public**. Si no tiene sus propios datos p\u00fablicos, puede consultar [esta lista de conjuntos de datos p\u00fablicos de GitHub](https:\/\/github.com\/awesomedata\/awesome-public-datasets) para ver si hay algo que le guste.\n\nUna vez que haya elegido un repositorio, es bastante f\u00e1cil crear su conjunto de datos.\n\n## Crea un conjunto de datos Kaggle desde un repo de GitHub\n\n* Vaya a [www.kaggle.com\/datasets](www.kaggle.com\/datasets) (o simplemente haga clic en la pesta\u00f1a \"Datasets\" cerca de la barra de b\u00fasqueda).\n* Haga clic en \"New Dataset\".\n* En el modo que aparece, haz clic en el c\u00edrculo con una silueta de un Octocat (la mascota de GitHub) en \u00e9l.\n* Ingrese un t\u00edtulo de conjunto de datos y la URL del repositorio de GitHub que le interesa. Si la URL es v\u00e1lida, deber\u00eda ver una lista de todos los archivos que se incluir\u00e1n en su dataset\n* Pulsa crear.\n* \u00a1\u00c9xito!\n\n## Modificar la versi\u00f3n\n\n* Go to the page for your dataset. (You can find it by clicking on the \"Datasets\" tab next to the search bar and then clicking on the \"Your Datasets\" tab.)\n* Click on the \"Settings\" tab. (The end of the URL will be \/settings.)\n* **To turn off versioning**, select \"Latest version only\" in the \"Versioning\" drop down. \n* **To automatically update your dataset**, choose your preferred frequency from the \"Update\" dropdown.\n* That's all there is to it! \ud83d\ude0e\n\n* Ir a la p\u00e1gina de tu Dataset. (Puede encontrarlo haciendo clic en la pesta\u00f1a \"Datasets\" junto a la barra de b\u00fasqueda y luego haciendo clic en la pesta\u00f1a \"Datasets\".)\n* Haga clic en la pesta\u00f1a \"Configuraci\u00f3n\". (El final de la URL ser\u00e1 \/configuraci\u00f3n).\n* **Para desactivar el control de versiones**, seleccione \"S\u00f3lo la versi\u00f3n m\u00e1s reciente\" en el men\u00fa desplegable \"Control de versiones\".\n* **Para actualizar autom\u00e1ticamente su conjunto de datos**, elija su frecuencia preferida en el men\u00fa desplegable \"Actualizar\".\n* \u00a1Eso es todo al respecto! \ud83d\ude0e"}}