{"cell_type":{"53065867":"code","98b86a5f":"code","4beb28e7":"code","7ccae36e":"code","db1a430f":"code","496f39e9":"code","57421f2f":"code","6509e46b":"code","0a690510":"code","935aac88":"code","955871b0":"code","bb1abd1e":"code","c4bdea85":"code","0b93fef3":"markdown","d864dbb6":"markdown","11e90d97":"markdown","3f890200":"markdown"},"source":{"53065867":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","98b86a5f":"data = pd.read_csv(\"..\/input\/WA_Fn-UseC_-HR-Employee-Attrition.csv\")\ndata.info()","4beb28e7":"data.describe()","7ccae36e":"f,ax = plt.subplots(figsize=(30,30))\nsns.heatmap(data.corr(),annot=True,linewidth=.3,fmt='.2f')\nplt.show()","db1a430f":"data.head(10)","496f39e9":"data.plot(kind='scatter', x='MonthlyIncome', y='YearsAtCompany', alpha = 0.5,color = 'red',figsize=(15,5))\nplt.xlabel('Income')              \nplt.ylabel('Years at Company')\nplt.title('Income-Years at Company Scatter Plot')           ","57421f2f":"data.Age.plot(kind = 'hist',bins = 40,figsize = (20,15))\nplt.show()","6509e46b":"x = data['JobRole']=='Manufacturing Director'\ndata[x]","0a690510":"y = data['Age']<30\ndata[x&y]            #shows information of manufacturing directors who are below 30","935aac88":"managers = data['JobRole']=='Manager'\ndata[managers].Education.plot(kind='hist',bins=4,figsize=(10,10))","955871b0":"c1=0\nc2=0\nc3=0\nc4=0\nc5=0\nc6=0\nfor index,value in data[['EducationField']].iterrows():\n    if (value.item()=='Human Resources'):\n        c1 = c1 + 1\n    elif (value.item()=='Life Sciences'):\n        c2 = c2 + 1\n    elif (value.item()=='Marketing'):\n        c3 = c3 + 1\n    elif (value.item()=='Medical'):\n        c4 = c4 + 1\n    elif (value.item()=='Technical Degree'):\n        c5 = c5 + 1\n    elif (value.item()=='Other'):\n        c6 = c6 + 1\nprint(\"Education field of \",c1,\"employees is Human Resources.\")\nprint(\"Education field of \",c2,\"employees is Life Sciences.\")\nprint(\"Education field of \",c3,\"employees is Marketing.\")\nprint(\"Education field of \",c4,\"employees is Medical.\")\nprint(\"Education field of \",c5,\"employees is Technical Degree.\")\nprint(\"Education field of \",c6,\"employees is none of above.\")\n ","bb1abd1e":"i = 0\nn1=0\nn2=0\nn3=0\na = 0  #will be calculated as number of employees doing overtime\n\nwhile (i < len(data.OverTime)):\n    if (data.OverTime[i]=='Yes'):\n        if (data.MonthlyIncome[i] <= 2500):\n            n1 = n1 + 1\n        elif (2500 < data.MonthlyIncome[i] <= 6500):\n            n2 = n2 + 1\n        elif (data.MonthlyIncome[i] > 6500):\n            n3 = n3 + 1\n        a = a + 1\n    i = i + 1\n    \nr1 = round((n1\/a),2)\nr2 = round((n2\/a),2)\nr3 = round((n3\/a),2)\n    \nprint(r1,\" of employees doing overtime have monthly income lower than 2500.\")\nprint(r2,\" of employees doing overtime have monthly income between 2500 and 6500.\")\nprint(r3,\" of employees doing overtime have monthly income greater than 6500.\")\n    ","c4bdea85":"lacking = []    \ni = 0\nwhile(i < len(data.EmployeeNumber)-1):    \n    if (data.EmployeeNumber[i+1] != data.EmployeeNumber[i] + 1):\n        diff = data.EmployeeNumber[i+1] - data.EmployeeNumber[i]   \n        k = 1\n        c = data.EmployeeNumber[i]+1\n        while (k < diff):           \n            lacking.append(c)\n            c = c + 1\n            k = k + 1\n    i= i + 1\n    \nlacking","0b93fef3":"Looking at the heatmap, we can say that monthly income is directly proportional to job level and job level is related with total working years, naturally experience. Another observe can be that job satisfaction is not related with job level.","d864dbb6":"Most of the managers have high level of education.","11e90d97":"Most of the employees are around 40.","3f890200":"There is a column named \"EmployeeNumber\" in data set. Observing here, I guess these data do not include information of all employees. Code below gives which employees are not included."}}