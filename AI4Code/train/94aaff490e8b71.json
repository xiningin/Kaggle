{"cell_type":{"04b97500":"code","caeda0cd":"code","21208d16":"code","9089e4a6":"code","256c953a":"code","cb4f0731":"code","c813ca3e":"code","454401de":"code","e578a384":"code","7d4dbf70":"code","668cdb5f":"code","2e41b2e4":"code","502f46c8":"code","20dca5ad":"code","24a2cfd7":"code","d41241de":"code","17013cf1":"code","d8816f65":"code","306ab35e":"code","6905475e":"code","f6b5284e":"code","08af165a":"code","b4dc5caf":"code","1a3a608a":"code","7996e082":"code","d1019771":"code","ef0f3725":"markdown","7f86ec76":"markdown","e41e2ba7":"markdown","60dcb3cd":"markdown","bce40a90":"markdown","6746cbc4":"markdown","4032fa59":"markdown","757e08ba":"markdown","36092652":"markdown","b1d26fb9":"markdown","92f3c3ff":"markdown","7223fa04":"markdown","41799ae4":"markdown","4dcbe9db":"markdown","d0063dc3":"markdown","42d37a4c":"markdown","be2ad3fa":"markdown","0779f934":"markdown","bb879514":"markdown","ca4c0792":"markdown","663ecf98":"markdown","834ac117":"markdown","dcf31288":"markdown","dac5569b":"markdown","1bcad325":"markdown","95cc4bba":"markdown"},"source":{"04b97500":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n        \nimport numpy as np # linear algebra\nimport pandas as pd # data processing\n\n#importing visualising libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\n%matplotlib inline\n\n#NLP\nimport nltk\nfrom nltk.corpus import stopwords\n\n#Data Cleaning\nimport string\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\n\n#Training Model\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import classification_report","caeda0cd":"msgs = pd.read_csv(\"..\/input\/sms-spam-collection-dataset\/spam.csv\",encoding='latin-1')","21208d16":"msgs.head()","9089e4a6":"#Dropping unnecessary columns\nmsgs.drop(msgs.columns[[2, 3, 4]], axis = 1, inplace = True)","256c953a":"#Renaming columns\nmsgs.rename(columns = {'v1': 'label', 'v2': 'message'},inplace=True)","cb4f0731":"msgs.head()","c813ca3e":"msgs.describe()","454401de":"msgs.info()","e578a384":"msgs.groupby('label').describe()","7d4dbf70":"Category_count=np.array(msgs['label'].value_counts())\nlabels=sorted(msgs['label'].unique())","668cdb5f":"fig = go.Figure(data=[go.Pie(labels=labels, values=Category_count, hole=.3)])\nfig.show()","2e41b2e4":"msgs['length'] = msgs['message'].apply(len)\nmsgs.head()","502f46c8":"fig = px.histogram(msgs, x=\"length\",color=\"label\")\nfig.show()","20dca5ad":"msgs.hist(column='length', by='label',bins=50, figsize=(10,4))","24a2cfd7":"msgs.length.describe()","d41241de":"msgs[msgs['length']==910]['message'].iloc[0]","17013cf1":"#Forming function for msgs\n#Removing punctuations and stopwords\ndef text_process(mess):\n  nopunc=[char for char in mess if char not in string.punctuation]\n  nopunc=''.join(nopunc)\n  return [word for word in nopunc.split() if word.lower() not in stopwords.words('english') ]","d8816f65":"#making lists of tokens(lemmas)\nmsgs['message'].apply(text_process)","306ab35e":"#converting text doc to a matrix of token counts using scikit countvectorizer \nbow_transformer = CountVectorizer(analyzer=text_process).fit(msgs['message'])\n\n# Print total number of vocab words\nprint (len(bow_transformer.vocabulary_))","6905475e":"#calculating sparsity\nmsgs_bow=bow_transformer.transform(msgs['message'])\nprint ('Shape of Sparse Matrix:{}',format(msgs_bow.shape))\nprint ('Amount of Non-Zero occurences:{}',format(msgs_bow.nnz))\nprint ('sparsity: %.2f%%' % (100.0 * msgs_bow.nnz \/ (msgs_bow.shape[0] * msgs_bow.shape[1])))","f6b5284e":"print(msgs_bow)","08af165a":"tfidf_transformer = TfidfTransformer().fit(msgs_bow)\nmsgs_tfidf = tfidf_transformer.transform(msgs_bow)\nprint (msgs_tfidf.shape)","b4dc5caf":"print(msgs_tfidf)","1a3a608a":"spam_detect_model=MultinomialNB().fit(msgs_tfidf, msgs['label'])","7996e082":"#test\nall_predictions=spam_detect_model.predict(msgs_tfidf)\nprint(all_predictions)","d1019771":"from sklearn.metrics import classification_report\nprint(classification_report(msgs['label'],all_predictions))","ef0f3725":"Well!... this has to be the longest message. After all, it's from a Romeo to his Juliet.","7f86ec76":"# **Loading Data**","e41e2ba7":"# Finding Term frequency\u2013inverse document frequency","60dcb3cd":"**About Dataset:**\n\nA collection of SMS composed of one text file, where each line has the correct class followed by the raw message. ","bce40a90":"# **SMS spam (cell phone spam or short messaging service spam)**\n\nSMS spam (sometimes called cell phone spam) is any junk message delivered to a mobile phone as text messaging through the Short Message Service (SMS).Text messaging has greatly increased in popularity in the past five years and the government is trying to keep up with rapidly changing technology.This notebook demonstrates a basic model of the process and gives an intution of how the process works.","6746cbc4":"# **Importing Libraries**","4032fa59":"Converting Sequence of characters into sequence of numbers(raw messages into vectors) that can be used by scikit-learn algorithm.","757e08ba":"It can be seen there are no null values in data.","36092652":"we have got 98% accuracy using Naive Bayes Multinomial Classifier.","b1d26fb9":"# Feature Engineering","92f3c3ff":"We can see 86.6% of the messages are ham, which indicates that the possibility of spam messages are quite low.","7223fa04":"# **Tokenizing Process(Normalization)**","41799ae4":"**Using Naive Bayes Multinomial Classifier**","4dcbe9db":"**Target:**\n\nTo train a model to classify SMS as either ham or spam for future predictions.","d0063dc3":"# Model Evaluation","42d37a4c":"**Removing Punctuation using string lib and stopwords using nltk**","be2ad3fa":"TF-idf numerical statistic that is intended to reflect how important a word is to a document in a collection or corpus","0779f934":"Let's bring more clarity to ham and spam.","bb879514":"# Vectorization: Implementing Bag of Words","ca4c0792":"Please, upvote this work if it's of any help. Thank you!","663ecf98":"# Text Preprocessing","834ac117":"**Approach:**\n\nFirstly, some EDA and feature engineering followed by Data cleaning by removing unnecessary data and Vectorization using Bag of Words. Lastly, model training using Naive Bayes Multinomial classifier.","dcf31288":"The maximum length of a message is 910. Let's explore this message.","dac5569b":"# **Exploratory Data Analysis**","1bcad325":"This shows that short messages are generally ham whereas  messages with length around 150 are generally spam.","95cc4bba":"# **Training model**"}}