{"cell_type":{"5e5f1fc7":"code","b59716fa":"code","567aeb6a":"code","c07d4fb2":"code","63c36c8b":"code","576b9dcb":"code","cee54a2e":"code","ceecaf73":"code","c23e18cf":"code","4b23dc00":"code","a3c5dc2a":"code","9a2d1a0f":"code","0357ebb7":"code","80cc79d6":"code","ba78d304":"code","d0a3c6a1":"code","f1a4a63c":"code","4025622a":"code","bec66fce":"code","4fb447e0":"code","c71f67fe":"code","44f03988":"code","990f5363":"code","84bd6bc6":"code","0d36eeea":"code","978e170a":"code","6b7e06a4":"code","c419dada":"code","ba6504f0":"code","cb1df4cf":"code","90198861":"code","e35dc6b5":"code","9c74ddf4":"code","07058892":"code","46c3b5c9":"code","ac5b5d7c":"code","ab5ff99e":"code","3af3ad55":"code","74e7a8d6":"code","9af30259":"code","a245d5ed":"code","4badd770":"code","b05cd479":"code","37805d57":"code","afc293a3":"code","e0f38c39":"code","51d8a0e4":"code","220c801f":"code","a3caa6a0":"code","782e9367":"code","3ecf13de":"code","6cb8e7b3":"code","c190c930":"code","f2a044b5":"code","7132ff69":"code","88f34ef0":"code","cfa78f50":"code","c73a16e5":"code","7a662e16":"code","8f29479d":"code","1c139182":"code","7b288a57":"code","d628d71b":"code","a37f47ee":"markdown","1cda01ba":"markdown","e388760a":"markdown","101462ef":"markdown","7ed6c849":"markdown","638abf94":"markdown","12fd2fec":"markdown","d81268ec":"markdown","9665cdc9":"markdown","9b1f6e1a":"markdown","53d8557f":"markdown","3cb34a84":"markdown","b15f7dd7":"markdown","25c350c1":"markdown","7371a919":"markdown","2cd413b8":"markdown","bf9dee74":"markdown","6802b3bd":"markdown","e9f82c58":"markdown","2ad496cd":"markdown","388a31ce":"markdown","4cf798ff":"markdown","399bb2b3":"markdown","4eb6e237":"markdown","fc83b972":"markdown","2443245b":"markdown","4edab783":"markdown","7c2cde3f":"markdown"},"source":{"5e5f1fc7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b59716fa":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\nsubmission_data = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","567aeb6a":"print(f'Size: {train_data.shape}')","c07d4fb2":"train_data.head(2)","63c36c8b":"train_data.isnull().sum().to_frame().rename(columns={0:'Null values'})","576b9dcb":"print(f'Size: {test_data.shape}')","cee54a2e":"test_data.head(2)","ceecaf73":"test_data.isnull().sum().to_frame().rename(columns={0:'Null values'})","c23e18cf":"print(f'Size: {submission_data.shape}')","4b23dc00":"submission_data.head(2)","a3c5dc2a":"submission_data.isnull().sum().to_frame().rename(columns={0:'Null values'})","9a2d1a0f":"full_data = pd.concat([train_data,test_data])","0357ebb7":"print(f'Size: {full_data.shape}')","80cc79d6":"full_data.head(2)","ba78d304":"full_data = pd.concat([train_data,train_data])","d0a3c6a1":"full_data.isnull().sum().to_frame().rename(columns={0:'Null values'})","f1a4a63c":"for col in full_data.columns:\n    print(f'{len(full_data[col].unique())} unique values in {col} column')","4025622a":"full_data.drop(columns=['PassengerId','Survived']).describe()","bec66fce":"plt.figure(figsize=(20,8));\nsns.heatmap(full_data.isnull(), cmap='viridis');","4fb447e0":"corr = full_data.corr()\ncorr['Survived'].sort_values(ascending=False)[1:].to_frame().style.background_gradient(axis=1,cmap=sns.light_palette('green', as_cmap=True))","c71f67fe":"plt.figure(figsize=(20,8));\nsns.heatmap(corr, cmap=\"viridis\");","44f03988":"full_data.skew().to_frame().rename(columns={0:'Skewness'}).sort_values('Skewness')","990f5363":"fig, axes = plt.subplots(1,3, figsize=(20, 8));\nfig.suptitle('Skewness', fontsize=20);\n\nsns.kdeplot(full_data['Fare'], ax=axes[0],hue=full_data['Survived']);\nsns.kdeplot(full_data['SibSp'], ax=axes[1],hue=full_data['Survived']);\nsns.kdeplot(full_data['Parch'], ax=axes[2],hue=full_data['Survived']);","84bd6bc6":"data_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndata_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndata_submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","0d36eeea":"test_PassengerId = data_submission['PassengerId'] ","978e170a":"data_train = pd.get_dummies(data_train, columns=['Sex', 'Embarked']).drop(columns=['Sex_male']).rename(columns={'Sex_female':'Sex'})","6b7e06a4":"data_train.head(2)","c419dada":"data_test = pd.get_dummies(data_test, columns=['Sex', 'Embarked']).drop(columns=['Sex_male']).rename(columns={'Sex_female':'Sex'})","ba6504f0":"data_test.head(2)","cb1df4cf":"data_train = data_train.drop(columns=['PassengerId','Ticket','Cabin','Name'])","90198861":"data_test = data_test.drop(columns=['PassengerId','Ticket', 'Cabin','Name'])\n","e35dc6b5":"from sklearn.tree import DecisionTreeRegressor","9c74ddf4":"data_for_age = data_train.copy()","07058892":"dtr = DecisionTreeRegressor(max_depth=5)","46c3b5c9":"data_for_age = data_for_age.drop(columns=['Survived'])","ac5b5d7c":"dtr.fit(data_for_age.dropna().drop([\"Age\"], axis=1), data_for_age.Age.dropna())","ab5ff99e":"data_train.loc[data_train['Age'].isna(), 'Age'] = dtr.predict(data_for_age.loc[data_for_age['Age'].isna()].drop([\"Age\"], axis=1))","3af3ad55":"data_train.info()","74e7a8d6":"data_test.loc[data_test['Age'].isna(), 'Age'] = dtr.predict(data_test.loc[data_test['Age'].isna()].drop([\"Age\"], axis=1))","9af30259":"data_test.info()","a245d5ed":"data_test.loc[data_test['Fare'].isna(), 'Fare'] = data_test.Fare.mean()","4badd770":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report","b05cd479":"X_train, X_test, y_train, y_test = train_test_split(data_train.drop(columns='Survived'), data_train.Survived, test_size=0.2, random_state=42)","37805d57":"from sklearn import tree","afc293a3":"paramentrs_for_clf = {'criterion':['gini', 'entropy'], 'max_depth':range(1,9), 'min_samples_split':range(2,50), 'min_samples_leaf':range(1,12)}","e0f38c39":"clf = tree.DecisionTreeClassifier(random_state=42) ","51d8a0e4":"grid_search__cv_clf = GridSearchCV(clf, paramentrs_for_clf, cv=10)","220c801f":"grid_search__cv_clf.fit(X_train, y_train)","a3caa6a0":"best_clf = grid_search__cv_clf.best_estimator_","782e9367":"y_pred_clf = best_clf.predict(X_test)","3ecf13de":"print(classification_report(y_test,y_pred_clf))","6cb8e7b3":"y_pred_clf = best_clf.predict(data_test)","c190c930":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import RandomizedSearchCV","f2a044b5":"paramentrs_for_rf_clf = {'n_estimators':range(10,500,10), 'criterion':['gini', 'entropy'], 'max_depth':range(2,10)}","7132ff69":"rf_clf = RandomForestClassifier(random_state=42, n_jobs=-1)","88f34ef0":"grid_search__cv_rf_clf = GridSearchCV(rf_clf, paramentrs_for_rf_clf, cv=10)","cfa78f50":"grid_search__cv_rf_clf.fit(X_train, y_train)","c73a16e5":"best_rf_clf = grid_search__cv_rf_clf.best_estimator_","7a662e16":"best_rf_clf.get_params","8f29479d":"y_pred_rf_clf = best_rf_clf.predict(X_test)","1c139182":"print(classification_report(y_test,y_pred_rf_clf))","7b288a57":"y_pred_rf_clf = best_rf_clf.predict(data_test)","d628d71b":"submission = pd.DataFrame({\"PassengerId\": test_PassengerId,\"Survived\": y_pred_clf})\nsubmission.to_csv('submission_for_kaggle.csv', index=False)","a37f47ee":"## Visual data analysis","1cda01ba":"### Score","e388760a":"## Work with categorical columns","101462ef":"## A little magic","7ed6c849":"### Process","638abf94":"### Result","12fd2fec":"### Result","d81268ec":"## Loading data","9665cdc9":"## Chose the data for submit","9b1f6e1a":"### Visualization of null values","53d8557f":"### Age in data test","3cb34a84":"## Remove unnecessary","b15f7dd7":"### Process","25c350c1":"# Data analysis","7371a919":"# Preprocessing","2cd413b8":"### Visualization of correlation between columns and target column","bf9dee74":"### Score","6802b3bd":"## DecisionTreeClassifier","e9f82c58":"### Full data","2ad496cd":"### Test data","388a31ce":"## Work with 'Age'","4cf798ff":"### Visualization of skewness","399bb2b3":"### Age in data train","4eb6e237":"#  Machine learning models","fc83b972":"### Train data","2443245b":"## RandomForestClassifier","4edab783":"## Quick analysis","7c2cde3f":"### Submission"}}