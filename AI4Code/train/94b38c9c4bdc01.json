{"cell_type":{"5c5e03ad":"code","55b63ba5":"code","f19ab3af":"code","18a9ea58":"code","aba53f99":"code","653b7d9e":"code","eda3273b":"code","a892df38":"code","b22b3463":"code","d24ee180":"code","be686703":"code","18e5db81":"code","6093cfbf":"code","53f8bc6b":"code","fc888270":"code","1d590092":"code","4b99f891":"markdown","c4d6a049":"markdown","b34400d4":"markdown"},"source":{"5c5e03ad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55b63ba5":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.set_style(\"darkgrid\")","f19ab3af":"df = pd.read_csv(\"\/kaggle\/input\/f1-2021-emilia-romagna-grand-prix-imola\/2021_round_2_laptimes.csv\")\ndf.head()","18a9ea58":" df.drop(columns=['Unnamed: 0'], inplace=True)","aba53f99":"plt.figure(figsize=(17,5))\nsns.boxplot(x='lap', y='secs', data=df)\nplt.title('Lap-Times per Lap');","653b7d9e":"# replace outliers because of red flag\ndf['secs'].mask(df['secs'] > 250, df['secs'].median(), inplace=True)\ndf.describe()","eda3273b":"plt.figure(figsize=(17,5))\nsns.boxplot(x='lap', y='secs', data=df)\nplt.axhline(df['secs'].median(), ls='--', color='red', label='Overall Median')\nplt.axhline(df['secs'].mean(), ls='-', color='blue', label='Overall Average')\nplt.legend()\nplt.ylim(75, 120)\nplt.title('Lap-Times per Lap');","a892df38":"plt.figure(figsize=(17,5))\nsns.boxplot(x='driver', y='secs', data=df)\nplt.axhline(df['secs'].median(), ls='--', color='red', label='Overall Median')\nplt.legend()\nplt.title('Lap-Times per Driver');","b22b3463":"df_piv = df.pivot(\"driver\", \"lap\", \"position\")\ndf_piv.head()","d24ee180":"f, ax = plt.subplots(figsize=(17, 6))\nsns.heatmap(df_piv, linewidths=.1, ax=ax, cmap=\"Greens\")\nplt.title(\"Position Change per Lap for each Driver\");","be686703":"df_ver = df[df['driver'] == 'max_verstappen'].copy()\ndf_ham = df[df['driver'] == 'hamilton'].copy()","18e5db81":"plt.figure(figsize=(11, 4))\n\nplt.subplot(1,2,1)\nsns.boxplot(y='secs', data=df_ver, showfliers = False) # showfliers = False\nplt.title(\"Max Verstappen Lap Times w\/o Outliers\")\nplt.ylim(75, 105)\n\nplt.subplot(1,2,2)\nsns.boxplot(y='secs', data=df_ham, showfliers = False) # showfliers = False\nplt.title(\"Lewis Hamilton Lap Times w\/o Outliers\")\nplt.ylim(75, 105)\n\nplt.draw()","6093cfbf":"plt.figure(figsize=(11, 4))\nsns.lineplot(x='lap', y='secs', data=df_ver, label='Max Verstappen', ls='-', linewidth=2)\nplt.axhline(df_ver['secs'].mean(), ls='-', color='blue', label='Verstappen Average')\nsns.lineplot(x='lap', y='secs', data=df_ham, label='Lewis Hamilton', ls='--', linewidth=2)\nplt.axhline(df_ham['secs'].mean(), ls='-.', color='orange', label='Hamilton Average')\nplt.title('Laptimes Verstappen vs. Hamilton')\nplt.legend();","53f8bc6b":"df_mick = df[df['driver'] == 'mick_schumacher'].copy()\ndf_mazepin = df[df['driver'] == 'mazepin'].copy()","fc888270":"plt.figure(figsize=(11, 4))\n\nplt.subplot(1,2,1)\nsns.boxplot(y='secs', data=df_mick) # showfliers = False\nplt.title(\"Mick Schumacher Times\")\nplt.ylim(75, 135)\n\nplt.subplot(1,2,2)\nsns.boxplot(y='secs', data=df_mazepin) # showfliers = False\nplt.title(\"Nikita Mazepin Times\")\nplt.ylim(75, 135)\n\nplt.draw()","1d590092":"plt.figure(figsize=(11, 4))\nsns.lineplot(x='lap', y='secs', data=df_mick, label='Mick Schumacher', ls='-')\nplt.axhline(df_mick['secs'].mean(), ls='-', color='blue', label='Schumacher Average')\nsns.lineplot(x='lap', y='secs', data=df_mazepin, label='Nikita Mazepin', ls='--')\nplt.axhline(df_mazepin['secs'].mean(), ls='-.', color='orange', label='Mazepin Average')\nplt.title('Laptimes Schumacher vs. Mazepin')\nplt.legend();","4b99f891":"# Verstappen vs. Hamilton","c4d6a049":"# Haas - Mick Schumacher vs. Nikita Mazepin","b34400d4":"# Overall Analysis"}}