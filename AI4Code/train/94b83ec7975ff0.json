{"cell_type":{"2893875c":"code","4699ecb7":"code","67e2bfda":"code","80acf303":"code","6a75d3d9":"code","f12b8937":"code","68e8e15d":"code","3b1d911c":"markdown","a0a27052":"markdown","2ffcd0ae":"markdown","80f0658c":"markdown","be100131":"markdown"},"source":{"2893875c":"import numpy as np\nimport os\n\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.datasets import fetch_openml\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA\nfrom sklearn.decomposition import KernelPCA\n\nnp.random.seed(42)\n\nN_COMPONENTS = 154\nN_BATCH = 5","4699ecb7":"mnist = fetch_openml('mnist_784', version=1, as_frame=False)\nmnist.target = mnist.target.astype(np.uint8)","67e2bfda":"X = mnist[\"data\"]\ny = mnist[\"target\"]\n\nX_train, X_test, y_train, y_test = train_test_split(X, y)","80acf303":"pca = PCA(n_components=N_COMPONENTS)\nX_reduced = pca.fit_transform(X_train)\nprint(np.sum(pca.explained_variance_ratio_))","6a75d3d9":"pca = PCA(n_components=N_COMPONENTS,svd_solver=\"randomized\")\nX_reduced = pca.fit_transform(X_train)\nprint(np.sum(pca.explained_variance_ratio_))","f12b8937":"pca = IncrementalPCA(n_components=N_COMPONENTS)\n\nfor X_batch in np.array_split(X_train,N_BATCH):\n    pca.partial_fit(X_batch)\n    \nX_reduced = pca.transform(X_train)\nprint(np.sum(pca.explained_variance_ratio_))","68e8e15d":"import time\n\nfor n_components in (2, 10, 154):\n    print(\"n_components =\", n_components)\n    regular_pca = PCA(n_components=n_components, svd_solver=\"full\")\n    inc_pca = IncrementalPCA(n_components=n_components, batch_size=500)\n    rnd_pca = PCA(n_components=n_components, random_state=42, svd_solver=\"randomized\")\n\n    for name, pca in ((\"PCA\", regular_pca), (\"Inc PCA\", inc_pca), (\"Rnd PCA\", rnd_pca)):\n        t1 = time.time()\n        pca.fit(X_train)\n        t2 = time.time()\n        print(\"    {}: {:.1f} seconds\".format(name, t2 - t1))","3b1d911c":"# Randomized PCA","a0a27052":"more fast than normal pca","2ffcd0ae":"# Incremental PCA","80f0658c":"pca for big size data","be100131":"# PCA"}}