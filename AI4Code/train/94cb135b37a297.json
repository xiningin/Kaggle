{"cell_type":{"e47edb71":"code","fd7ce484":"code","20c955a9":"code","828900e3":"code","ab5d70c3":"code","d26479a5":"code","869ccd90":"code","fb9a0334":"code","a60820a5":"code","fefd9918":"code","48ecbb06":"code","341f4f3c":"code","ea5fd5ae":"code","43ea6af1":"code","51e917c8":"code","e9147688":"code","1425e6b8":"code","e2adbbbe":"code","5c2eb630":"code","74d34f8d":"code","a992e707":"code","5770e891":"code","2611026f":"code","5ed7479c":"code","8d00382e":"code","176ee2b4":"markdown","65c0e546":"markdown","723f442f":"markdown","90e89298":"markdown","200934ec":"markdown","cb6da344":"markdown"},"source":{"e47edb71":"%%time\nimport pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns","fd7ce484":"train = pd.read_csv(\"..\/input\/predict-red-wine-quality\/train.csv\")\ntest = pd.read_csv(\"..\/input\/predict-red-wine-quality\/test.csv\")\ntrain.head(3)","20c955a9":"train.info()\n# all are numeric values","828900e3":"train.describe()","ab5d70c3":"#Drop useles data\ntrain1 = train.drop([\"id\"],axis=1)\ntest1 = test.drop([\"id\"],axis=1)\ntrain1_col = list(train1.columns)","d26479a5":"#sns.boxplot(column=test1_col,data = test1)\n\nfor i in train1.columns:\n    train1.boxplot(column=i)\n    plt.show()","869ccd90":"q1 = train1.quantile(0.25)\nq3 = train1.quantile(0.75)\niqr = q3-q1\nl = q1-1.5*iqr\nh = q3+1.5*iqr\n#train2 = train1.loc[(train1 > l) & (train1 < h).any(axis=1)]\n#train2\n\ntrain2 = train1[((train1 >= (q1 - 1.5 * iqr))& (train1 <= (q3 + 1.5 * iqr))).all(axis=1)]\ntrain2.describe()","fb9a0334":"for i in train2.columns:\n    train2.boxplot(column=i)\n    plt.show()","a60820a5":"train2.info()","fefd9918":"sns.pairplot(train2, diag_kind=\"reg\")","48ecbb06":"train1_col","341f4f3c":"sns.pairplot(train2, x_vars=['fixed.acidity','volatile.acidity', 'citric.acid', 'residual.sugar', 'chlorides', \n                             'free.sulfur.dioxide', 'total.sulfur.dioxide', 'density', 'pH', 'sulphates', \n                             'alcohol'], y_vars='quality', markers=\"+\",size=5)","ea5fd5ae":"plt.subplots(figsize=(10,10))\nsns.heatmap(train2.corr(), linewidths=1, annot=True)","43ea6af1":"train2.corr()[\"quality\"].sort_values()","51e917c8":"train2 = train2.drop([\"residual.sugar\"],axis=1)\ntrain2 = train2.drop([\"free.sulfur.dioxide\"],axis=1)\ntrain2 = train2.drop([\"pH\"],axis=1)","e9147688":"from sklearn.model_selection import train_test_split\nx = train2.drop(['quality'],axis=1)\ny = test.drop([\"id\"],axis=1)\n#y_test = test[\"quality\"]\nx_train = train2.drop(['quality'],axis=1)\ny_train = train2[\"quality\"]\nx_test = test.drop([\"id\"],axis=1)","1425e6b8":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = x_train.columns\nvif['VIF'] = [variance_inflation_factor(x_train.values, i) for i in range(x_train.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","e2adbbbe":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\n#model.fit(x_train,y_train)","5c2eb630":"from sklearn.feature_selection import RFE\nrfe = RFE(model, 6)\nrfe.fit(x_train, y_train)","74d34f8d":"x_col = x_train.columns[rfe.support_]\nx_col","a992e707":"model.fit(x_train[x_col],y_train)\n#model.fit(x_train,y_train)","5770e891":"rst = model.predict(x_test[x_col])\n#model.predict(x_test)","2611026f":"rst = rst.round(0)","5ed7479c":"ids = test['id']","8d00382e":"file = open(\"result.csv\", \"w\")\nfile.write(\"id,quality\\n\")\n    \nfor id_, pred in zip(ids, rst):\n    file.write(\"{},{}\\n\".format(id_, pred))\nfile.close()","176ee2b4":"From analysis, residual sugar,","65c0e546":"### Test Train split ","723f442f":"## EDA","90e89298":"## Pre processing","200934ec":"There is some Outlier. so, we remove outliers using IQR","cb6da344":"# Model Building"}}