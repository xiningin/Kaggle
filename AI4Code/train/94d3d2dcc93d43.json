{"cell_type":{"e5774cd4":"code","c46679b8":"code","d61c03dc":"code","464225b0":"code","85ae6529":"code","0cc95396":"code","684f3fb5":"code","8995d0d3":"code","82dd2220":"code","76c5fcd8":"code","8dd82bc9":"code","9f128bf2":"code","1716eaba":"code","94d88e40":"code","e9afa2b5":"code","6ce790c7":"code","ad8a83b3":"code","b0ed2030":"code","d15ecdb5":"code","3e37ea49":"code","ec2a1d22":"code","0f136c6f":"code","8eeee0b7":"code","d53e2031":"code","623e8ab0":"code","847c8ff9":"code","5cd070d6":"code","c831855a":"code","258bc4b8":"code","a5c4617b":"code","f98d2cc6":"code","4d9242f5":"code","ad8ca62e":"code","88e2dc47":"code","e65928ed":"code","e2ee6f52":"code","6d29b239":"code","52cac42d":"code","becb1937":"code","01c7876e":"code","98995c22":"code","0943b3c1":"code","8768ee27":"code","1bf4b68e":"code","0ef305e0":"code","447861f9":"code","a60128ea":"code","f3322764":"code","b6161a6e":"code","83983022":"code","440c065b":"code","c13689e6":"markdown","65ee8b73":"markdown","77ee962b":"markdown","478fb1fe":"markdown","3fca4a0e":"markdown","0af4604b":"markdown","efab63f2":"markdown","d1454df8":"markdown","b670c91d":"markdown","045ba67a":"markdown","2049e876":"markdown","fb614148":"markdown","b4ec051a":"markdown","9bcd79f2":"markdown","9eeddff9":"markdown","10d3cf27":"markdown","0de03314":"markdown"},"source":{"e5774cd4":"import numpy as np\nimport pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots","c46679b8":"df = pd.read_csv('\/kaggle\/input\/covid19-daily-cases-in-bolivia-by-region\/bolivia_covid19_cases_daily.csv')\ndf.head(10)","d61c03dc":"df.tail(10)","464225b0":"df.describe()","85ae6529":"nRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","0cc95396":"df.isnull().values.any()","684f3fb5":"import plotly.graph_objs as gobj\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)","8995d0d3":"data = dict(type = 'choropleth',\n            locations = ['bolivia'],\n            locationmode = 'country names',\n            colorscale= 'Portland',\n            text= ['BOL'],\n            z=[1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0],\n            colorbar = {'title':'Country Colours', 'len':200,'lenmode':'pixels' })\ncol_map = gobj.Figure(data = [data])\n#plotting the map\niplot(col_map)","82dd2220":"# Total population of Bolivia\ndf.groupby(['region'])['population'].max().sum()","76c5fcd8":"df['region'].unique()","8dd82bc9":"Data_per_department= df.groupby([\"region\"])[\"population\"].max().reset_index().sort_values(\"population\", ascending=False).reset_index(drop=True)","9f128bf2":"fig = go.Figure(data=[go.Bar(\n            x=Data_per_department['region'], y=Data_per_department['population'],\n            text=Data_per_department['population'],\n            textposition='auto',\n            marker_color='black',)])\nfig.update_layout(\n    title='Population by Department',\n    xaxis_title=\"Departments\",\n    yaxis_title=\"Population\",\n)\nfig.show()","1716eaba":"total_confirmed = df[['date','cases']].groupby('date').sum().reset_index()","94d88e40":"fig = go.Figure(data=go.Scatter(x=total_confirmed['date'],\n                                y=total_confirmed['cases'],\n                                mode='lines+markers')) \nfig.update_layout(title='Number of COVID cases over time', xaxis_title=\"Date\", yaxis_title=\"Number of cases\")\nfig.show()","e9afa2b5":"covid_lp = df[df['region']==\"La Paz\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_sc = df[df['region']==\"Santa Cruz\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_cb = df[df['region']==\"Cochabamba\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_or = df[df['region']==\"Oruro\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_bn = df[df['region']==\"Beni\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_pn = df[df['region']==\"Pando\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_tj = df[df['region']==\"Tarija\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_cs = df[df['region']==\"Chuquisaca\"][['date','cases']].groupby('date').sum().reset_index()\ncovid_pt = df[df['region']==\"Potosi\"][['date','cases']].groupby('date').sum().reset_index()","6ce790c7":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=covid_lp['date'], y=covid_lp['cases'], name = 'La Paz',\n                         line=dict(color='royalblue', width=4, dash=\"dot\")))\nfig.add_trace(go.Scatter(x=covid_sc['date'], y=covid_sc['cases'], name = 'Santa Cruz',\n                         line=dict(color='green', width=4, dash=\"dashdot\")))\nfig.add_trace(go.Scatter(x=covid_cb['date'], y=covid_cb['cases'], name = 'Cochabamba',\n                         line=dict(color='brown', width=4, dash=\"dash\")))\nfig.add_trace(go.Scatter(x=covid_or['date'], y=covid_or['cases'], name = 'Oruro',\n                         line=dict(color='red', width=4, dash=\"dot\")))\nfig.add_trace(go.Scatter(x=covid_bn['date'], y=covid_bn['cases'], name = 'Beni',\n                         line=dict(color='yellow', width=4,dash=\"dashdot\")))\nfig.add_trace(go.Scatter(x=covid_pn['date'], y=covid_pn['cases'], name = 'Pando',\n                         line=dict(color='black', width=4, dash=\"dash\")))\nfig.add_trace(go.Scatter(x=covid_tj['date'], y=covid_tj['cases'], name = 'Tarija',\n                         line=dict(color='purple', width=4, dash=\"dot\")))\nfig.add_trace(go.Scatter(x=covid_cs['date'], y=covid_cs['cases'], name = 'Chuquisaca',\n                         line=dict(color='cyan', width=4,dash=\"dashdot\")))\nfig.add_trace(go.Scatter(x=covid_pt['date'], y=covid_pt['cases'], name = 'Potosi',\n                         line=dict(color='magenta', width=4, dash=\"dash\")))\nfig.update_layout(title='Number of COVID cases over time for different departments',\n                  xaxis_title=\"Date\", yaxis_title=\"Number of cases\")\nfig.show()","ad8a83b3":"total_deceased = df[['date','deceased']].groupby('date').sum().reset_index()","b0ed2030":"fig = go.Figure(data=go.Scatter(x=total_deceased['date'],\n                                y=total_deceased['deceased'],\n                                mode='lines',\n                               marker_color='darkred'))\nfig.update_layout(title='Bolivia Covid deaths over time', xaxis_title=\"Date\", yaxis_title=\"Number of deaths\")\nfig.show()","d15ecdb5":"temp = df.groupby(['date', 'region'])['active_per_10k'].max().reset_index()\ntemp = temp.sort_values(['active_per_10k', 'date'], ascending=False)\n\nfig = px.line(temp, x=\"date\", y=\"active_per_10k\", color='region', title='Active cases per 10 000 people', height=600)\nfig.update_layout(yaxis_title='Active per 10K')","3e37ea49":"temp = df.groupby(['date', 'region'])[['deceased_per_million', 'deceased']].max().reset_index()\ntemp = temp.sort_values(['deceased', 'date'], ascending=False)\n\npx.line(temp, x=\"date\", y=\"deceased_per_million\", color='region', title='Deceased per million', height=600)","ec2a1d22":"fig = go.Figure(go.Bar(\n            x=df['date'], y=df['deceased'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths in Bolivia',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","0f136c6f":"Data_per_department= df.groupby([\"region\"])[\"cases\",\"active\",\n                                            \"recovered\",\"deceased\"].max().reset_index().sort_values(\"cases\", ascending=False).reset_index(drop=True)","8eeee0b7":"fig = px.pie(Data_per_department, values=Data_per_department['cases'], names=Data_per_department['region'],\n             title='Confirmed cases in Bolivia',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","d53e2031":"fig = px.treemap(Data_per_department, path=['region'], values=Data_per_department['cases'], height=700,\n                 title='Confirmed cases in Bolivia', color_discrete_sequence = px.colors.qualitative.Dark2)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()","623e8ab0":"fig = go.Figure(go.Bar(\n            x=Data_per_department['active'],\n            y=Data_per_department['region'],\n            orientation='h',\n            marker_color='#DC3912',))\nfig.update_layout(\n    title='Active Cases In Each Department',\n    xaxis_title=\"Active Cases\",\n    yaxis_title=\"Department\",\n)\nfig.show()","847c8ff9":"fig = go.Figure(go.Bar(\n            x=Data_per_department['cases'],\n            y=Data_per_department['region'],\n            orientation='h'))\nfig.update_layout(\n    title='Confirmed Cases In Each Department',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Departments\",\n)\nfig.show()","5cd070d6":"fig = go.Figure(go.Bar(\n            x=Data_per_department['deceased'],\n            y=Data_per_department['region'],\n            orientation='h',\n            marker_color='darkred',))\nfig.update_layout(\n    title='Deaths In Each Department',\n    xaxis_title=\"Deaths\",\n    yaxis_title=\"Departments\",\n)\n\nfig.show()","c831855a":"fig = go.Figure(go.Bar(\n            x=Data_per_department['recovered'],\n            y=Data_per_department['region'],\n            orientation='h',\n            marker_color='green',))\nfig.update_layout(\n    title='Recovered Cases In Each Department ',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Departments\",\n)\nfig.show()","258bc4b8":"fig = go.Figure(data=[go.Bar(\n            x=Data_per_department['region'], y=Data_per_department['active'],\n            text=Data_per_department['active'],\n            textposition='auto',\n            marker_color='magenta',)])\nfig.update_layout(\n    title='Active Cases by Department',\n    xaxis_title=\"Departments\",\n    yaxis_title=\"Active Cases\",\n)\nfig.show()","a5c4617b":"Recovered_per_department = df.groupby([\"region\"])[\"recovered\"].max().reset_index().sort_values(\"recovered\",ascending=False).reset_index(drop=True)","f98d2cc6":"headerColor = 'blue'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Department<\/b>','<b>Recovered<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Recovered_per_department['region'],\n      Recovered_per_department['recovered'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_department)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Recovered Cases In Each Department',\n)\nfig.show()","4d9242f5":"fig = px.pie(Recovered_per_department, values=Recovered_per_department['recovered'],\n             names=Recovered_per_department['region'],\n             title='Recovered cases',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout\nfig.show()","ad8ca62e":"fig = go.Figure(data=[go.Bar(\n            x=Recovered_per_department['region'], y=Recovered_per_department['recovered'],\n            text=Recovered_per_department['recovered'],\n            textposition='auto',\n            marker_color='cyan',\n\n        )])\nfig.update_layout(\n    title='Recovered by Department',\n    xaxis_title=\"Departments\",\n    yaxis_title=\"Recovered Cases\",\n)\nfig.show()","88e2dc47":"Data_lp = df[(df['region'] == 'La Paz') ].reset_index(drop=True)","e65928ed":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_lp['date'], y=Data_lp['cases'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\nfig.add_trace(go.Scatter(x=Data_lp['date'], y=Data_lp['active'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\nfig.add_trace(go.Scatter(x=Data_lp['date'], y=Data_lp['deceased'],name='deceased',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\nfig.add_trace(go.Scatter(x=Data_lp['date'], y=Data_lp['recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\nfig.update_layout(\n    title='Evolution of cases over time in La Paz',\n)\nfig.show()","e2ee6f52":"fig = go.Figure(go.Bar(\n            x=Data_lp['date'],\n            y=Data_lp['cases'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Confirmed cases in La Paz',\n     xaxis_title=\"Confirmed cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","6d29b239":"fig = go.Figure(go.Bar(\n            x=Data_lp['date'],\n            y=Data_lp['active'],\n    marker_color='red'\n           ))\nfig.update_layout(\n    title='Active cases in La Paz',\n     xaxis_title=\"Active cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","52cac42d":"fig = go.Figure(go.Bar(\n            x=Data_lp['date'],\n            y=Data_lp['recovered'],\n    marker_color='yellow'\n           ))\nfig.update_layout(\n    title='Recovered cases in La Paz',\n     xaxis_title=\"Recovered cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","becb1937":"fig = go.Figure(go.Bar(\n            x=Data_lp['date'],\n            y=Data_lp['deceased'],\n    marker_color='purple'\n           ))\nfig.update_layout(\n    title='Deaths in La Paz',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","01c7876e":"cases = df['cases'].groupby(df['date']).sum().sort_values(ascending=True)\ncases = cases[cases>0].reset_index().drop('date',axis=1)\ndeaths = df['deceased'].groupby(df['date']).sum().sort_values(ascending=True)\ndeaths = deaths[deaths>0].reset_index().drop('date',axis=1)","98995c22":"# Converting data into an array\ndays_since_first_case = np.array([i for i in range(len(cases.index))]).reshape(-1, 1)\nbolivia_cases = np.array(cases).reshape(-1, 1)\ndays_since_first_death = np.array([i for i in range(len(deaths.index))]).reshape(-1, 1)\nbolivia_deaths = np.array(deaths).reshape(-1, 1)","0943b3c1":"days_in_future = 30\nfuture_forecast = np.array([i for i in range(len(cases.index)+days_in_future)]).reshape(-1, 1)\nadjusted_dates = future_forecast[:-30]\nfuture_forecast_deaths = np.array([i for i in range(len(deaths.index)+days_in_future)]).reshape(-1, 1)\nadjusted_dates_deaths = future_forecast_deaths[:-30]","8768ee27":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(days_since_first_case\n                                                    , bolivia_cases\n                                                    , test_size=10\n                                                    , shuffle=False\n                                                    , random_state = 42) \n\nX_train_death, X_test_death, y_train_death, y_test_death = train_test_split(days_since_first_death\n                                                    , bolivia_deaths\n                                                    , test_size=10\n                                                    , shuffle=False\n                                                    , random_state = 42)","1bf4b68e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom math import sqrt","0ef305e0":"# The best degree for cases\nrmse = 10000\ndegree = 0\nfor i in range(101):\n    poly = PolynomialFeatures(degree=i)\n    poly_X_train = poly.fit_transform(X_train)\n    poly_X_test = poly.fit_transform(X_test)\n    poly_future_forecast = poly.fit_transform(future_forecast)\n\n    linear_model = LinearRegression(normalize=True, fit_intercept=False)\n    linear_model.fit(poly_X_train, y_train)\n    test_linear_pred = linear_model.predict(poly_X_test)\n    linear_pred = linear_model.predict(poly_future_forecast)\n\n    # evaluating with RMSE\n    rm = sqrt(mean_squared_error(y_test, test_linear_pred))\n    if(rm<rmse):\n        rmse = rm\n        degree = i\n    if(i==100):\n        print('the best mae is:',round(rmse,2))\n        print('the best degree for cases is:',degree)","447861f9":"# The best degree for deaths\nrmse = 10000\ndegree = 0\nfor i in range(101):\n    poly_death = PolynomialFeatures(degree=i)\n    poly_X_train_death = poly_death.fit_transform(X_train_death)\n    poly_X_test_death = poly_death.fit_transform(X_test_death)\n    poly_future_forecast_death = poly_death.fit_transform(future_forecast_deaths)\n\n    linear_model_death = LinearRegression(normalize=True, fit_intercept=False)\n    linear_model_death.fit(poly_X_train_death, y_train_death)\n    test_linear_pred_death = linear_model_death.predict(poly_X_test_death)\n    linear_pred_death = linear_model_death.predict(poly_future_forecast_death)\n\n    # evaluating with RMSE\n    rm = sqrt(mean_squared_error(y_test_death, test_linear_pred_death))\n    if(rm<rmse):\n        rmse = rm\n        degree = i\n    if(i==100):\n        print('the best mae is:',round(rmse,2))\n        print('the best degree for deaths is:',degree)","a60128ea":"# Transform our cases data for polynomial regression\npoly = PolynomialFeatures(degree=6)\npoly_X_train = poly.fit_transform(X_train)\npoly_X_test = poly.fit_transform(X_test)\npoly_future_forecast = poly.fit_transform(future_forecast)\n\n# Transform our death data for polynomial regression\npoly_death = PolynomialFeatures(degree=3)\npoly_X_train_death = poly_death.fit_transform(X_train_death)\npoly_X_test_death = poly_death.fit_transform(X_test_death)\npoly_future_forecast_death = poly_death.fit_transform(future_forecast_deaths)","f3322764":"# polynomial regression cases\nlinear_model = LinearRegression(normalize=True, fit_intercept=False)\nlinear_model.fit(poly_X_train, y_train)\ntest_linear_pred = linear_model.predict(poly_X_test)\nlinear_pred = linear_model.predict(poly_future_forecast)\n\n# evaluating with RMSE\nprint('RMSE:', sqrt(mean_squared_error(y_test, test_linear_pred)))","b6161a6e":"pd.DataFrame(linear_pred[len(cases):].astype('Int64'), columns = ['Predicted']).style.background_gradient(cmap='Blues')","83983022":"# polynomial regression deaths\nlinear_model_death = LinearRegression(normalize=True, fit_intercept=False)\nlinear_model_death.fit(poly_X_train_death, y_train_death)\ntest_linear_pred_death = linear_model_death.predict(poly_X_test_death)\nlinear_pred_death = linear_model_death.predict(poly_future_forecast_death)\n\n# evaluating with RMSE\nprint('RMSE:', sqrt(mean_squared_error(y_test_death, test_linear_pred_death)))","440c065b":"pd.DataFrame(linear_pred_death[len(deaths):].astype('Int64'), columns = ['Predicted']).style.background_gradient(cmap='Reds')","c13689e6":"# Covid-19 Analysis in Bolivia (March 21, 2020 - July 20, 2020)","65ee8b73":"We can see that the highest number of cases is in Santa Cruz. La Paz is on the second place","77ee962b":"<img src=\"https:\/\/i.pinimg.com\/originals\/a8\/d8\/66\/a8d866c87e75ae65af8a3f167ee1e8f6.gif\">","478fb1fe":"The number of active cases per 10k population is the highest in Beni, Pando is on the second place","3fca4a0e":"The three departments with the highest number of confirmed cases are Santa Cruz, La Paz and Cochabamba","0af4604b":"The most populous departments are Santa Cruz, La Paz and Cochabamba","efab63f2":"The number of deaths per million is the highest in Pando, Beni is on the second place","d1454df8":"Let's look at the total number of cases overtime","b670c91d":"# Number of Cases and Deaths Prediction with Polynomial Regression","045ba67a":"Total number of cases by department","2049e876":"# Covid-19 in La Paz","fb614148":"From what we can see the number of cases wasn't that high at the beginning, but started growing rapidly later","b4ec051a":"No missing values","9bcd79f2":"There are 9 departments in Bolivia: La Paz, Santa Cruz, Cochabamba, Oruro, Potosi, Tarija, Beni, Pando and Chuquisaca","9eeddff9":"# Stay safe everyone!","10d3cf27":"References: [https:\/\/www.kaggle.com\/gatunnopvp\/covid-19-in-brazil-prediction-updated-06-04-20](http:\/\/)","0de03314":"The highest number of recovered cases is in Santa Cruz"}}