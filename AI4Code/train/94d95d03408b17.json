{"cell_type":{"f6824289":"code","1557d60e":"code","3698bfdf":"code","ed72611c":"code","f254672d":"code","390f4770":"code","fa6692be":"code","b92cb65c":"code","37fbc0d2":"code","5f1fe2a7":"code","5b9d6080":"code","cb32ba3b":"code","2cbdbd71":"code","6992982d":"code","62855c81":"code","49a354ee":"code","75427f91":"code","7b4f4fb7":"code","a4d10828":"code","a9a7e3a5":"code","9c66fe3c":"code","a7ca4b63":"code","e59f1ec3":"code","be5356a7":"code","cc2d3f3d":"code","aa6186eb":"code","2f3719bf":"markdown","815a50a3":"markdown","e7911c31":"markdown"},"source":{"f6824289":"import numpy as np\nimport pandas as pd\nimport os\nimport seaborn as sns\nimport pandas_profiling as pp\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.linear_model import LinearRegression","1557d60e":"# Read the data\ndata_train = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv\")\ndata_test = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/test.csv\")\nitem_categories = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv\")\nitem = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/items.csv\")\nshops = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/shops.csv\")\nsample_submission = pd.read_csv(\"..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv\")","3698bfdf":"item_categories.head()","ed72611c":"item.head()","f254672d":"shops.head()","390f4770":"data_train.head()","fa6692be":"data_test.head()","b92cb65c":"data_train.describe()","37fbc0d2":"# Remove the missing values\ndef missing_value(data):\n    missing_data = pd.DataFrame({\n        'Missing_count':data.isnull().sum(),\n        'Missing_part':data.isnull().sum()\/len(data)\n    })\n    missing_data = missing_data[missing_data['Missing_count']!=0]\n\n    return missing_data\n\nmissing_value(data_train)","5f1fe2a7":"missing_value(data_test)","5b9d6080":"# Data duplicate\nif (data_train.duplicated().sum() != 0 ):\n    data_train.drop_duplicates(keep = 'first', inplace=True)\n    print(data_train.duplicated().sum())","cb32ba3b":"data_train.info()","2cbdbd71":"# change date type to datetime\ndata_train['date'] = pd.to_datetime(data_train['date'])\ndata_train['date'] = data_train['date'].apply(lambda x: x.strftime('%Y-%m'))\ndata_train.head()","6992982d":"sns.pairplot(data_train)","62855c81":"plt.scatter(data_train['date'], data_train['item_price'])","49a354ee":"# Remove the outliers (item_price)\ndata_train[data_train.item_price > 100000]\ndata_train.drop(1163158,inplace = True)","75427f91":"# Drop columns\ndata_train.drop(['date_block_num', 'item_price'], axis=1, inplace=True)\ndata_train.head()","7b4f4fb7":"# Data train\ndf_train = data_train.groupby(['date','shop_id','item_id']).sum()\ndf_train = df_train.pivot_table(index=['shop_id','item_id'], \n                                columns='date', \n                                values='item_cnt_day', \n                                fill_value=0)\n\ndf_train.reset_index(inplace=True)\ndf_train.head()","a4d10828":"# Data test\ndf_test = pd.merge(data_test, df_train, on=['shop_id','item_id'], how='left')\ndf_test.drop(['ID'], axis=1, inplace=True)\ndf_test = df_test.fillna(0)\ndf_test.head()","a9a7e3a5":"X_train = df_train.drop(['2015-12'], axis = 1)\nY_train = df_train['2015-12'].values\n\nx_test = df_test.drop(['2013-01'], axis=1)\nprint(X_train.shape, Y_train.shape)\nprint(x_test.shape)","9c66fe3c":"# Split the data\nx_train, x_val, y_train, y_val = train_test_split(X_train, Y_train, test_size=0.2, random_state=0)\nprint(X_train.shape)\nprint(y_train.shape)","a7ca4b63":"# Linear Regression\nLR = LinearRegression()\nLR.fit(x_train, y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, LR.predict(x_train)))\nprint('Val set mse:', mean_squared_error(y_val, LR.predict(x_val)))\n","e59f1ec3":"# Gradient boosting Regression\ngbr = GradientBoostingRegressor(learning_rate=0.1, n_estimators=100, max_depth=3)\ngbr.fit(x_train, y_train)\n\nprint('Train set mse:', mean_squared_error(y_train, gbr.predict(x_train)))\nprint('Val set mse:', mean_squared_error(y_val, gbr.predict(x_val)))","be5356a7":"# Predict using gradient boosting regression\npred_test = gbr.predict(x_test)","cc2d3f3d":"submission = pd.DataFrame({\n    'ID':data_test['ID'],\n    'item_cnt_month':pred_test\n})\nsubmission.to_csv('submission.csv', index=False)","aa6186eb":"submission.head()","2f3719bf":"### Preprocessing","815a50a3":"### Submission","e7911c31":"### Model"}}