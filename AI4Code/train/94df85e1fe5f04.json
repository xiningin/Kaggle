{"cell_type":{"9c5c11f6":"code","a0330f09":"code","8d5f5463":"code","5ad14776":"code","0340debd":"code","001c5b2d":"code","1edc4182":"code","25b6ac5c":"code","b8310e82":"code","c391dc38":"code","6f7ac85c":"code","99e135a5":"code","a3a7feab":"code","420a34ea":"code","b7415cea":"markdown","4b4795fe":"markdown","94a7d755":"markdown","7f214dae":"markdown","d9f72d71":"markdown","e0cb32b8":"markdown","7367b843":"markdown","332ca908":"markdown","3ac4e708":"markdown","9f705ad4":"markdown","9b0dabfd":"markdown"},"source":{"9c5c11f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0330f09":"dftrain = pd.read_csv('\/kaggle\/input\/airline-passenger-satisfaction\/train.csv')\ndftest = pd.read_csv('\/kaggle\/input\/airline-passenger-satisfaction\/test.csv')\ndf_ori = pd.concat([dftrain, dftest], sort=False) # concatenate the train and test for generalizability\ndf = df_ori.copy()\ndf = df.iloc[:,8:24]\ndf = df.dropna() # checking missing data\ndf","8d5f5463":"pip install factor_analyzer # installing Factor Analyzer","5ad14776":"from factor_analyzer import FactorAnalyzer # Then, we import the installed package into our notebook.","0340debd":"# Barlett's\n\nfrom factor_analyzer.factor_analyzer import calculate_bartlett_sphericity\ncalculate_bartlett_sphericity(df)","001c5b2d":"# KMO\n\nfrom factor_analyzer.factor_analyzer import calculate_kmo\nkmo_all, kmo_model = calculate_kmo(df)\nprint(kmo_model)","1edc4182":"# instantiate the Factor Analyzer\nfa = FactorAnalyzer() \n\n# Fit the dataframe using Factor Analyzer\nfa.fit(df)\n\n# Identify the eigenvalues\nev, v = fa.get_eigenvalues() #eigenvalues\n\n# display the eigenvalues\nev","25b6ac5c":"# Then, we repeat the factor analyzer using five factors, fitting it, and print the factor loadings for each variables.\nfa = FactorAnalyzer(5, rotation='varimax')\nfa.fit(df)\nprint(fa.loadings_)","b8310e82":"lmatrix = pd.DataFrame(fa.loadings_, index = list(df.columns), columns = ['Factor 1', 'Factor 2', 'Factor 3', 'Factor 4', 'Factor 5'])\nlmatrix #loading matrix","c391dc38":"lmatrix.sort_values('Factor 1', ascending=False)","6f7ac85c":"lmatrix.sort_values('Factor 2', ascending=False)","99e135a5":"lmatrix.sort_values('Factor 3', ascending=False)","a3a7feab":"lmatrix.sort_values('Factor 4', ascending=False)","420a34ea":"lmatrix.sort_values('Factor 5', ascending=False)","b7415cea":"Let's sort the dataframe based on each factor using cut off value 0.2.","4b4795fe":"# Identify the Number of Factors","94a7d755":"Of course we can simulate the number of factors towards other numbers, but I will stop until this point and you can further explore other possibilities.","7f214dae":"# Importing Factor Analyzer\nLet's install the package for factor analysis called Factor Analyzer.","d9f72d71":"* Factor 1: Cleanliness, Food and Drink, Inflight Entertainment, Seat Comfort\n* Factor 2: Inflight Services, Baggage Handling, Onboard Services, Leg Room\n* Factor 3: Arrival and Departure Delay\n* Factor 4: Online Booking, Gate Location, Inflight wifi, Departure\/Arrival Time Convenience\n* Factor 5: Online Boarding","e0cb32b8":"The above array of eigen values show that we can create five factors.","7367b843":"# Testing a few Assumptions\n1. Bartlett's Test: to check whether observed variables intercorrelate at all using the observed correlation matrix\n2. Kaiser-Meyer-Olkin Test: to measures the suitability of data for factor analysis \n\n[Source](https:\/\/www.datacamp.com\/community\/tutorials\/introduction-factor-analysis)","332ca908":"# Business Problem:\n\n* Can we categorize the dimensions of passenger's satisfaction into smaller number of Factors?\n\nIn order to do that, we'll perform Factor Analysis.","3ac4e708":"The above dataframe shows all the parameters that contribute to passengers' satisfaction.","9f705ad4":"The above output is not human-eye friendly, so we make the below dataframes.","9b0dabfd":"Both Bartlett's Test and KMO indicates that the dataframe is good to go for factor analysis."}}