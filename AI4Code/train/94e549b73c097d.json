{"cell_type":{"a198835d":"code","45508f5f":"code","a3c5a43c":"code","bee5a597":"code","3c8d87e9":"code","5493d60c":"code","01211a7b":"code","758348bc":"code","3abfb77d":"code","b6539264":"code","b083909e":"code","ead4dd76":"code","4582c40c":"code","b580741c":"code","90961606":"code","8b9381b2":"code","4f0a6fd8":"code","355fe172":"code","df6c5307":"code","bc360940":"code","d3067b18":"code","ddf86b48":"code","9517dc1b":"code","7d72817d":"code","0845f0dd":"code","12bc91d1":"code","73528609":"code","9decdd41":"code","9b7490a1":"code","b08768fd":"code","1b25d27a":"code","8462b7b6":"code","1f21eb84":"code","c6483792":"code","69aa54ee":"code","4565f891":"code","dcd08703":"code","a5d55aca":"code","e4654475":"code","2979afc6":"code","cc47a44a":"code","42ee1d8f":"code","8831d857":"code","300a76b9":"code","cf2a98a2":"code","1ecf45b1":"code","a243cbac":"code","f5dd992a":"code","89f04d32":"code","fa496e2c":"code","b3f21e43":"code","34026e94":"code","715a01e2":"code","30c8fb0d":"code","d1d7668c":"code","ce171901":"code","756b2883":"code","925dbb7f":"code","63ced114":"code","ab4ec35f":"code","55ef81bf":"code","f1045792":"code","9f85f4a3":"code","c0fc1b32":"code","be5993d5":"code","f2cf351b":"code","e2068c69":"code","4e887add":"code","22014f8c":"code","ec18d546":"code","63893d56":"code","58a3cbed":"markdown","5f6d8e24":"markdown","5df6d861":"markdown","b5a440de":"markdown","2aff3451":"markdown","1917329b":"markdown","55562caf":"markdown","0a0b73a3":"markdown","46724d42":"markdown","cd8f42d0":"markdown","8b653875":"markdown","2fb54dc0":"markdown","2584e1a9":"markdown","15c70d9a":"markdown","f9d53df1":"markdown","f45b6143":"markdown","806dff1d":"markdown","51e4bfc4":"markdown","9b42075c":"markdown","0b0d5f8b":"markdown","26810ec9":"markdown","b27b320a":"markdown","154e5630":"markdown","91174bb5":"markdown","bbca4793":"markdown","51eebe57":"markdown","f40f794f":"markdown","94d1650a":"markdown","b9d1f645":"markdown","e158bd86":"markdown","2fe9fa94":"markdown","07b840ac":"markdown","e7577545":"markdown","4ee1385b":"markdown","811e63eb":"markdown","bf488e1d":"markdown","fd7d9f12":"markdown","1cefcd88":"markdown","528112e2":"markdown","4be43fa3":"markdown","2345962a":"markdown","d6350536":"markdown","76a767c1":"markdown","01a364d0":"markdown"},"source":{"a198835d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","45508f5f":"data_filename = \"..\/input\/us-accidents\/US_Accidents_Dec20_updated.csv\"\ndata_filename2 = \"..\/input\/us-2021-census-cities-populations-coordinates\/us2021census.csv\"","a3c5a43c":"#1.Loading the file using Pandas\ndf = pd.read_csv(data_filename)\ndf.head(3)","bee5a597":"print('The Dataset contains: Rows - {} and Columns - {}'.format(df.shape[0],df.shape[1]))","3c8d87e9":"dff = pd.read_csv(data_filename2)\ndff.head()","5493d60c":"dff = dff.drop([\"Latitude\",\"Longitude\",\"Type\",\"Counties\"],axis=1)\ndff.head()","01211a7b":"#2.Looking at some overall information and statistics about the data.\ndf.info()","758348bc":"df.describe()","3abfb77d":"# 3. Fixing any missing or incorrect values.\ndf.isna().mean().sort_values(ascending=False)","b6539264":"a = (df.isna().sum().sort_values(ascending=False)\/len(df))*100\nplt.figure(figsize=(9,4))\nplt.title(\"Percentage of null values in the dataset\",size=17,color=\"grey\")\nplt.xlabel('\\n Percentage (%) \\n', fontsize=15, color='grey')\nplt.ylabel('\\n Columns \\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na[a!=0].plot(kind=\"barh\",color=\"pink\")\nplt.show()","b083909e":"df = df.drop(\"Number\",axis=1)","ead4dd76":"#As there are 10657 unique cities, we cant plot data for all of them.\n#So, I only plot data of cities which had reported more than 10k accident cases.\na = df.City.value_counts()\nplt.figure(figsize=(10,6))\nplt.title(\"US cities where accident cases recorded are more than 10,000\",size=17,color=\"grey\",y=1.04)\n#t = a[a>10000].plot(kind=\"pie\",shadow=True,explode=(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1),startangle=130,autopct=\"%1.1f%%\",label=\"\")\nlab= a[a>10000].index\nplt.pie(a[a>10000],shadow=True,explode=(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1),startangle=90,labels=lab)\nplt.show()","4582c40c":"largest_acc_city = a[0]\nlargest_acc_city\/5 #Divided by 5 because of 2016-2020","b580741c":"#Lets look at top 10 most populated cities:\ndff.groupby(\"City\")[\"Population\"].sum().sort_values(ascending=False).head(10)","90961606":"print(dff[dff.City==\"Miami\"].index.values)","8b9381b2":"for i in [43,3008,9872,14548,19114]:\n  print(dff.iloc[i])\n#The census dataset shows that more than 1 state has its city named Miami.","4f0a6fd8":"print(dff[dff.City==\"Charlotte\"].index.values)","355fe172":"print(dff[dff.City==\"Houston\"].index.values)","df6c5307":"print(dff[dff.City==\"Dallas\"].index.values)","bc360940":"# Lets try to see the distribution of accidents in cities in log scale.","d3067b18":"plt.figure(figsize=(9,4))\nplt.xlabel('\\n City \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nsns.histplot(df.City.value_counts(),log_scale=True,color=\"grey\")\nplt.show()","ddf86b48":"b = df.State.value_counts()\n#b[b>50000].plot(kind=\"pie\",radius=2.0,shadow=True,explode=(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1),startangle=90,autopct=\"%1.1f%%\",label=\"\")\nplt.figure(figsize=(10,6))\nplt.title(\"US states where accident cases recorded are more than 50,000\",size=17,y=1.04,color=\"grey\")\nlab= b[b>50000].index\nplt.pie(b[b>50000],shadow=True,explode=(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1),startangle=280,labels=lab)\nplt.show()","9517dc1b":"# Lets look at the population of top 10 states.\ndff.groupby(\"State\")[\"Population\"].sum().sort_values(ascending=False).head(10)","7d72817d":"timezone = pd.DataFrame(df.Timezone.value_counts()).reset_index().rename(columns={\"index\":\"Timezone\",\"Timezone\":\"Cases\"})\nplt.figure(figsize=(9,4))\nplt.title('\\n Accident cases for different timezones in US (2016-2020)\\n', size=20, color='grey')\nplt.xlabel('\\n Timezone \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.barplot(x=timezone.Timezone , y=timezone.Cases,palette=\"rainbow\")\nimport matplotlib.ticker as ticker\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","0845f0dd":"a1 = dff[(dff.State==\"CT\") | (dff.State==\"CA\")| (dff.State==\"GA\") | (dff.State==\"ME\") | (dff.State==\"MD\") | (dff.State==\"MA\") | (dff.State==\"NH\") | (dff.State==\"NJ\") | (dff.State==\"NY\") | (dff.State==\"NC\") | (dff.State==\"OH\") | (dff.State==\"PA\") | (dff.State==\"RI\") | (dff.State==\"SC\") | (dff.State==\"WT\") | (dff.State==\"VA\") | (dff.State==\"VT\")][\"Population\"].sum()","12bc91d1":"a2= dff[(dff.State==\"CA\") | (dff.State==\"WA\")][\"Population\"].sum()","73528609":"a3 = dff[(dff.State==\"AL\") | (dff.State==\"AR\")| (dff.State==\"IL\") | (dff.State==\"IA\") | (dff.State==\"LA\") | (dff.State==\"MN\") | (dff.State==\"MS\") | (dff.State==\"MO\") | (dff.State==\"OK\") | (dff.State==\"WI\")][\"Population\"].sum()","9decdd41":"a4 = dff[(dff.State==\"CO\") | (dff.State==\"MT\") | (dff.State==\"NM\") | (dff.State==\"UT\") | (dff.State==\"AZ\") | (dff.State==\"WY\")][\"Population\"].sum()","9b7490a1":"a = [\"Eastern\",\"Pacific\",\"Central\",\"Mountain\"]\nb=[a1,a2,a3,a4]\ntot = a1+a2+a3+a4\nc = [a1\/(tot)*100,a2\/(tot)*100,a3\/(tot)*100,a4\/(tot)*100]\nfor (i,j,k) in zip(a,b,c):\n  print(\"Population in {} timezone region: {} ({:.2f}%)\".format(i,j,k))","b08768fd":"for (i,j) in zip(timezone.Timezone,range(0,4)):\n    print(\"Percentage of accident cases reported in {} is {:.2f}%\".format(i,(df.Timezone.value_counts()[j]\/(df.Timezone.value_counts()[0] + df.Timezone.value_counts()[1] + df.Timezone.value_counts()[2] + df.Timezone.value_counts()[3]))*100))","1b25d27a":"street = pd.DataFrame(df.Street.value_counts().reset_index().rename(columns={'index':'Street No.', 'Street':'Cases'}))\ntop_street = pd.DataFrame(street.head(10))\nplt.figure(figsize=(9,4))\nplt.title('\\nTop 10 Accident Prone Streets in US (2016-2020)\\n', size=20, color='grey')\nplt.xlabel('\\nStreet No.\\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.barplot(x=top_street[\"Street No.\"],y=top_street.Cases,palette=\"rainbow\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","8462b7b6":"len(df.Street)","1f21eb84":"#top_street[\"Cases\"][0] + top_street[\"Cases\"][1] + \nfor (i,j) in zip(street[\"Street No.\"],range(0,10)):\n    print(\"Percentage of accident cases reported on street: {} is {:.2f}%\".format(i,(street.Cases[j]\/len(street.Cases)*100)))","c6483792":"# Lets first parse the Start_Time column as a datetime column.\ndf.Start_Time = pd.to_datetime(df.Start_Time)","69aa54ee":"hour = pd.DataFrame(df.Start_Time.dt.hour.value_counts()).reset_index().rename(columns={\"index\":\"Hour\",\"Start_Time\":\"Accident_Cases\"})","4565f891":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases for different hours of a day\\n', size=20, color='grey')\nplt.xlabel('\\n Hours \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.barplot(x=hour.Hour,y=hour.Accident_Cases,palette=\"pastel\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","dcd08703":"for (i,j) in zip(hour.Hour,range(0,24)):\n  print(\"Percentage of accidents occuring at {} hour is {:.2f}%\".format(i,(hour.Accident_Cases[j]\/hour.Accident_Cases.sum())*100))","a5d55aca":"day = pd.DataFrame(df.Start_Time.dt.day_name().value_counts()).reset_index().rename(columns={'index':'Day', 'Start_Time':'Cases'})","e4654475":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases for different days of a week\\n', size=20, color='grey')\nplt.xlabel('\\n Day \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.barplot(x=day.Day,y=day.Cases,palette=\"muted\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","2979afc6":"for (i,j) in zip(day.Day,range(0,7)):\n  print(\"Percentage of accidents occuring at {} hour is {:.2f}%\".format(i,(day.Cases[j]\/day.Cases.sum())*100))","cc47a44a":"# Lets look at monday first.\nplt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different hours on Monday\\n', size=20, color='grey')\nplt.xlabel('\\n hours \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nmonday = df.Start_Time[df.Start_Time.dt.dayofweek==0]\na = sns.histplot(monday.dt.hour,bins=24,color=\"grey\")\na.xaxis.set_ticks(range(0,24))\n# More accidents take place in the morning and in the evening after people are going to\/coming from their job.\nplt.show()","42ee1d8f":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different hours on Sunday\\n', size=20, color='grey')\nplt.xlabel('\\n hours \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nsunday = df.Start_Time[df.Start_Time.dt.dayofweek==6]\nsns.histplot(sunday.dt.hour,bins=24,color=\"grey\")\nplt.show()","8831d857":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different hours on Saturday\\n', size=20, color='grey')\nplt.xlabel('\\n hours \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nsaturday = df.Start_Time[df.Start_Time.dt.dayofweek==5]\nsns.histplot(saturday.dt.hour,bins=24,color=\"grey\")\nplt.show()","300a76b9":"import calendar\nmonth = pd.DataFrame(df.Start_Time.dt.month.value_counts()).reset_index().rename(columns={\"index\":\"Month\",\"Start_Time\":\"Accident_Cases\"}).sort_values('Month')\nmonth_names = list(calendar.month_name)[1:]\nmonth.Month = month_names","cf2a98a2":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different months in US (2016-2020)\\n', size=20, color='grey')\nplt.ylabel('\\n Months \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\n\na = sns.barplot(x=month.Accident_Cases,y=month.Month,palette=\"plasma\")\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","1ecf45b1":"for (i,j) in zip(month.Month,range(0,12)):\n  print(\"Percentage of accidents occuring in month {} is {:.2f}%\".format(month.Month[j],(month.Accident_Cases[j]\/month.Accident_Cases.sum())*100))","a243cbac":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different months in US (2016)\\n', size=20, color='grey')\nplt.xlabel('\\n Months \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nyear = df.Start_Time[df.Start_Time.dt.year==2016]\na = sns.histplot(year.dt.month,bins=12,color=\"yellow\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","f5dd992a":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different months in US (2020)\\n', size=20, color='grey')\nplt.xlabel('\\n Months \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nyear = df.Start_Time[df.Start_Time.dt.year==2020]\na = sns.histplot(year.dt.month,bins=12,color=\"green\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","89f04d32":"\nplt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different months in US (2019)\\n', size=20, color='grey')\nplt.xlabel('\\n Months \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nyear = df.Start_Time[df.Start_Time.dt.year==2019]\na = sns.histplot(year.dt.month,bins=12,color=\"red\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","fa496e2c":"year = pd.DataFrame(df.Start_Time.dt.year.value_counts()).reset_index().rename(columns={\"index\":\"Year\",\"Start_Time\":\"Accident_Cases\"})","b3f21e43":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported yearly in US (2016-2020)\\n', size=20, color='grey')\nplt.xlabel('\\n Year \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.barplot(x=year.Year, y = year.Accident_Cases,palette=\"rainbow\")\na.yaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","34026e94":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported yearly in US (2016-2020)\\n', size=20, color='grey')\nplt.xlabel('\\n Year \\n', fontsize=15, color='grey')\nplt.ylabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.lineplot(data = year, marker='o', x='Year', y='Accident_Cases', color = '#734dff', label=\"Yearly Road Accidents\")\na.xaxis.set_ticks(year.Year)\na.yaxis.set_major_formatter(ticker.EngFormatter())\n\nplt.show()","715a01e2":"for (i,j) in zip(year.Year,range(0,5)):\n  print(\"Percentage of accidents occuring in year {} is {:.2f}%\".format(i,(year.Accident_Cases[j]\/year.Accident_Cases.sum())*100))","30c8fb0d":"for (i,j) in zip(year.Year,range(0,5)):\n  print(\"Average no. of accidents occuring per month in year {} is {}.\".format(i,round(year.Accident_Cases[j]\/12)))","d1d7668c":"for (i,j) in zip(year.Year,range(0,5)):\n  print(\"Average no. of accidents occuring per day in year {} is {}.\".format(i,round(year.Accident_Cases[j]\/365)))","ce171901":"for (i,j) in zip(year.Year,range(0,5)):\n  print(\"Average no. of accidents occuring per hour in year {} is {:.2f}.\".format(i,(year.Accident_Cases[j]\/365)\/24))","756b2883":"fig, ((ax1, ax2), (ax3, ax4), (ax5, ax6), (ax7, ax8)) = plt.subplots(nrows=4, ncols=2, figsize = (16,20))\n\nroad_conditions = ['Bump', 'Crossing', 'Give_Way', 'Junction', 'Stop', 'No_Exit', 'Traffic_Signal', 'Turning_Loop']\ncolors = [('#6662b3', '#00FF00'), ('#7881ff', '#0e1ce8'), ('#18f2c7', '#09ad8c'), ('#08ff83', '#02a352'), ('#ffcf87', '#f5ab3d'),\n         ('#f5f53d', '#949410'), ('#ff9187', '#ffc7c2'), ('tomato', '#008000')]    \ncount = 0\n\ndef func(pct, allvals):\n    absolute = int(round(pct\/100*np.sum(allvals), 2))\n    return \"{:.2f}%\\n({:,d} Cases)\".format(pct, absolute)    \n\nfor i in [ax1, ax2, ax3, ax4, ax5, ax6, ax7, ax8]:\n    \n    size = list(df[road_conditions[count]].value_counts())\n    if len(size) != 2:\n        size.append(0)\n    \n    labels = ['False', 'True']\n    \n    \n    \n    i.pie(size, labels = labels, colors = colors[count],\n                    autopct = lambda pct: func(pct, size), labeldistance=1.1,\n                    textprops={'fontsize': 12}, explode=[0, 0.2])\n\n    title = '\\nPresence of {}'.format(road_conditions[count])\n\n    i.set_title(title, fontsize = 18, color='grey')\n    \n    count += 1","925dbb7f":"df.head(2)","63ced114":"temp = pd.DataFrame(df[\"Temperature(F)\"].value_counts()).reset_index().rename(columns={\"index\":\"Temp\",\"Temperature(F)\":\"Cases\"})","ab4ec35f":"plt.figure(figsize=(12,6))\nplt.title('\\n Accident cases reported for different temperature ranges \\n', size=20, color='grey')\nplt.ylabel('\\n Temperature(F) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.scatterplot(x=temp.Cases[temp.Cases>100],y=temp.Temp,color=\"red\")\na.xaxis.set_major_formatter(ticker.EngFormatter())\n\nplt.show()","55ef81bf":"humid = pd.DataFrame(df[\"Humidity(%)\"].value_counts()).reset_index().rename(columns={\"index\":\"Humidity\",\"Humidity(%)\":\"Cases\"})","f1045792":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different humidity \\n', size=20, color='grey')\nplt.ylabel('\\n Humidity(%) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.scatterplot(x=humid.Cases,y=humid.Humidity,color=\"violet\")\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()\n","9f85f4a3":"pressure = pd.DataFrame(df[\"Pressure(in)\"].value_counts()).reset_index().rename(columns={\"index\":\"Pressure\",\"Pressure(in)\":\"Cases\"})","c0fc1b32":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different prerssures \\n', size=20, color='grey')\nplt.ylabel('\\n Pressure(in) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.scatterplot(x=pressure.Cases,y=pressure.Pressure,color=\"purple\")\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","be5993d5":"wind = pd.DataFrame(df[\"Wind_Chill(F)\"].value_counts()).reset_index().rename(columns={\"index\":\"Wind_Chill\",\"Wind_Chill(F)\":\"Cases\"})","f2cf351b":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different wind chill \\n', size=20, color='grey')\nplt.ylabel('\\n Wind Chill(F) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.scatterplot(x=wind.Cases,y=wind.Wind_Chill)\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","e2068c69":"wind = pd.DataFrame(df[\"Wind_Speed(mph)\"].value_counts()).reset_index().rename(columns={\"index\":\"Wind_Speed\",\"Wind_Speed(mph)\":\"Cases\"})","4e887add":"plt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different wind speed \\n', size=20, color='grey')\nplt.ylabel('\\n Wind_Speed(mph) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\na = sns.scatterplot(x=wind.Cases,y=wind.Wind_Speed[wind.Wind_Speed<50])\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","22014f8c":"visibility = pd.DataFrame(df[\"Visibility(mi)\"].value_counts()).reset_index().rename(columns={\"index\":\"Visibility\",\"Visibility(mi)\":\"Cases\"})\nplt.figure(figsize=(9,4))\nplt.title('\\n Accident cases reported for different visibility \\n', size=20, color='grey')\nplt.ylabel('\\n Visibility(mi)) \\n', fontsize=15, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nplt.xlim(1000,60000)\na = sns.scatterplot(x=visibility.Cases,y=visibility.Visibility[visibility.Visibility<20])\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","ec18d546":"weather_condition_df = pd.DataFrame(df.Weather_Condition.value_counts().head(10)).reset_index().rename(columns={'index':'Weather_Condition', 'Weather_Condition':'Cases'})","63893d56":"plt.figure(figsize=(9,4))\nplt.title('\\nRoad Accident Percentage \\nfor different Weather Condition in US (2016-2020)\\n', size=20, color='grey')\nplt.xlabel('\\nAccident Cases\\n', fontsize=15, color='grey')\nplt.ylabel('\\nWeather_Condition\\n', fontsize=15, color='grey')\nplt.xticks(fontsize=13)\nplt.yticks(fontsize=12)\nplt.xlim(0, 600000)\na = sns.barplot(x=weather_condition_df['Cases'], y=weather_condition_df['Weather_Condition'], palette='rainbow_r')\na.xaxis.set_major_formatter(ticker.EngFormatter())\nplt.show()","58a3cbed":"- We see that the trend is almost exponentially increasing year by year with a sharp rise in year 2020.\n- Year 2020 reported half of the cases in the whole data set.\n- 65661 accidents reported per month in year 2020.\n- On Average, 2159 accidents were reported daily i.e 90 cases per hour, in year 2020 alone.\n- Least no. of accident cases were reported in year 2016.\n- From 2019 to 2020 the average accident\/day has increased 3 times in US.\n- Compared to year 2016, average no of accidents per hour has increased by 6 times.\n","5f6d8e24":"- We can see that the Number column has almost 70% data missing, Precipitation(in) and Wind_Chill(F) also have >=30% data missing.\nSince, Number column (which shows the street number) has majority of the data missing, we should drop it.","5df6d861":"- On the weekends, the distribution of accidents taking place over the day looks very different from that of on weekdays. It is more distributed through out the day, instead of peaking at a specific hour range.","b5a440de":"Insights-\n- This tells us that majority of the accidents (> 75%) had a severity rating of ~2 i.e. the traffic was not highly impacted.\n- The average length of the road extent affected by the accidents was ~0.6 miles. So, there was almost no traffic disturbance.\n- Accidents took place despite having average visibility of ~9 miles. This could mean that low visibility was not a reason.\n- For about 75% of the accidents, no precipitation was reported. This could mean that rain was not a problem.\n","2aff3451":"### 6. Which day of the week accidents are more frequent in?\n\n---\n\n","1917329b":"- We can see from this that Weather condition was Fair most of the time and thus it is not a major cause behind the accidents.","55562caf":"### 2. Which 5 state had the most number of accidents?","0a0b73a3":"### Questions:\n1. Which city in US has reported the most number of accident cases?\n2. Which 5 states reported the highest number of accident cases?\n3. Which timezone reported the most number of accident cases?\n4. Which street is most accident prone in US?\n5. What time of the day are accidents most frequent in?\n6. Which days of the week have the most accidents?\n7. Which months have the most accidents?\n8. What is the trend of accidents year over year (decreasing\/increasing?)\n9. Effects of road condition on the accident cases.\n10. How did the weather conditions affected the cases?\n","46724d42":"- These are the states that comes under the US\/Eastern time zone: https:\/\/en.wikipedia.org\/wiki\/Eastern_Time_Zone\n    - Connecticut,Delaware,Georgia,Maine,Maryland,Massachusetts,New Hampshire,New Jersey,New York,North Carolina,Ohio,Pennsylvania,Rhode Island,South Carolina,Vermont,Virginia,West Virginia.\n\n- Two states are fully contained in the Pacific Time Zone: https:\/\/en.wikipedia.org\/wiki\/Pacific_Time_Zone\n    - California,Washington.\n\n- These are the states that comes under the Central Time Zone:\n    - Alabama, Arkansas, Illinois, Iowa, Louisiana, Minnesota, Missouri, Mississippi, Oklahoma, and Wisconsin.(https:\/\/simple.wikipedia.org\/wiki\/Central_Time_Zone)\n\n- Six states are fully contained in the Mountain Time Zone: https:\/\/en.wikipedia.org\/wiki\/Mountain_Time_Zone\n    - Colorado,Montana,New Mexico,Utah,Wyoming,Arizona.\n\n14 states are not included because they are split between different time zones.","cd8f42d0":"- US\/Eastern timezone region reported the most number of accident cases (Census data also shows that the population in this timezone is also the largest), followed by US\/Pacific, US\/Central and US\/Mountain.\n- US\/Eastern timezone region accounts for about 38.84% of the accident cases.\n- Eastern and Pacific timezone regions accounts for about 76% of the accident cases. Interestingly, these two regions also accounts for about 72% of the population (excluding those 14 split timezone states)\n- Us\/Mountain region reported the lowest number of accident cases. It agrees with the fact that Mountain timezone region has the least population, thus lowest no of accidents are reported there.","8b653875":"- Large no. of cases were reported for wind chill range between 51(F) - 71(F).","2fb54dc0":"### 8. What is the trend of accidents year over year?","2584e1a9":"Lets see how the accidents are distributed over different hour of the day on the weekends.","15c70d9a":"- Thrusday reported the highest no of cases.\n- It looks like overall it is evenly distributed on the business days.\n- Only around 17% of the cases were reported on weekends.\n- Working Days of the week have almost 2 times higher accident percentage, compared with the Weekend Days which is expected.\n- As a surprise, there are less accidents occuring on the weekends, probably because of low vehichles on road? Lets verify it.","f9d53df1":"- We see that California (CA) had the most number of accidents,followed by Florida, Oregon, Texas and New york. It appears to be right as California also has the largest population.\n- In past 5 years, on average 246 accidents (daily) happened in California, implies approximately 10 accidents per hour.","f45b6143":"- In maximum cases of road accident, the Visibility range is between 5(mi) - 10(mi), which is quite good and thus it is not a major cause behind the accidents.","806dff1d":"## Data Preparation and Cleaning\n\n1. Load the file using Pandas\n2. Look at some information about the data & the columns\n3. Fix any missing or incorrect values","51e4bfc4":"### 9. Effect of road conditions on the accident cases.\n","9b42075c":"# US Accident exploratory data analysis","0b0d5f8b":" - Maximum cases were recorded for the wind speed range between 5(mph) - 10(mph), which is not much and thus it is not a major cause behind the accidents.","26810ec9":"- We see that maximum no of cases occured between temperature range: 40-80 F.","b27b320a":"### 3. Which timezone reported the most number of accident cases?","154e5630":"### 5. What time of the day accidents are more frequent in?","91174bb5":"### 10. How did the weather conditions affected the cases?","bbca4793":"This shows the name of all the columns, it show which columns have null values. The data types used are: int, float, bool and object.","51eebe57":"- 26,645 (28.64%) accidents occured on Street I-5 N in the last 5 years (2016-2020) in US.\n- On average 14 accidents were reported on street I-5 N.","f40f794f":"###4 Which street is most accident prone in US?","94d1650a":"- Higest no of accident occured when the air pressure range is between 20(in) - 30(in).","b9d1f645":"We have 1167 cities which recorded only 1 accident case, this is another data source drawback.","e158bd86":"No of accidents in cities are exponentially decreasing. We see large accounts near to 1, possibly because of not data recorded there.","2fe9fa94":"- Highest number of accidents occur between 3:00PM - 6:00PM, and between 6:00AM - 9:00AM (Possibly because of work hours). \n- In evening, around 27% of the road accidents occurred in between 3:00PM to 6:00PM.\n- Around 18% of the road accidents occurred in between 6:00AM to 9:00AM.\n- The most-deadliest accident hour is 5:00PM implies the Evening Office-Returning Hours.\n- The 2nd most-deadliest accident hour is 8:00AM implies the Morning Office-Going Hours.\n- We see high number of accidents in the evening time frame because people are more tired at that time as compared to morning hours and thus have low concentration. \n- High no of accidents occur in the morning possibly because people are in a hurry to reach their destination.","07b840ac":"## Exploratory analysis and visualisation","e7577545":"### Dataset abbrevations:    \n\n- ID - This is a unique identifier of the accident record.\n\n- Severity - Shows the severity of the accident, a number between 1 and 4, where 1 indicates the least impact on traffic (i.e., short delay as a result of the accident) and 4 indicates a significant impact on traffic (i.e., long delay).\n\n- Start_Time - Shows start time of the accident in local time zone.\n\n- End_Time - Shows end time of the accident in local time zone. End time here refers to when the impact of accident on traffic flow\n\n- Start_Lat - Shows latitude in GPS coordinate of the start point.\n\n- Start_Lng - Shows longitude in GPS coordinate of the start point.\n\n- End_Lat - Shows latitude in GPS coordinate of the end point.\n\n- End_Lng - Shows longitude in GPS coordinate of the end point.\n\n- Distance(mi) - The length of the road extent affected by the accident.\n\n- Description - Shows natural language description of the accident.\n\n- Number - Shows the street number in address record.\n\n- Street - Shows the street name in address record.\n\n- Side - Shows the relative side of the street (Right\/Left) in address record.\n\n- City - Shows the city in address record.\n\n- County - Shows the county in address record.\n\n- State - Shows the state in address record.\n\n- Zipcode - Shows the zipcode in address record.\n\n- Country - Shows the country in address record.\n\n- Timezone - Shows timezone based on the location of the accident (eastern, central, etc.).\n\n- Airport_Code - Denotes an airport-based weather station which is the closest one to location of the accident.\n\n- Weather_Timestamp - Shows the time-stamp of weather observation record (in local time).\n\n- Temperature(F) - Shows the temperature (in Fahrenheit).\n\n- Wind_Chill(F) - Shows the wind chill (in Fahrenheit).\n\n- Humidity(%) - Shows the humidity (in percentage).\n\n- Pressure(in) - Shows the air pressure (in inches).\n\n- Visibility(mi) - Shows visibility (in miles).\n\n- Wind_Direction - Shows wind direction.\n\n- Wind_Speed(mph) - Shows wind speed (in miles per hour).\n\n- Precipitation(in) - Shows precipitation amount in inches, if there is any.\n\n- Weather_Condition - Shows the weather condition (rain, snow, thunderstorm, fog, etc.)\n\n- Amenity - A POI annotation which indicates presence of amenity in a nearby location.\n\n- Bump - A POI annotation which indicates presence of speed bump or hump in a nearby location.\n\n- Crossing - A POI annotation which indicates presence of crossing in a nearby location.\n\n- Give_Way - A POI annotation which indicates presence of give_way in a nearby location.\n\n- Junction - A POI annotation which indicates presence of junction in a nearby location.\n\n- No_Exit - A POI annotation which indicates presence of junction in a nearby location.\n\n- Railway - A POI annotation which indicates presence of railway in a nearby location.\n\n- Roundabout - A POI annotation which indicates presence of roundabout in a nearby location.\n\n- Station - A POI annotation which indicates presence of station in a nearby location.\n\n- Stop - A POI annotation which indicates presence of stop in a nearby location.\n\n- Traffic_Calming - A POI annotation which indicates presence of traffic_calming in a nearby location.\n\n- Traffic_Signal - A POI annotation which indicates presence of traffic_signal in a nearby location.\n\n- Turning_Loop - A POI annotation which indicates presence of turning_loop in a nearby location.\n\n- Sunrise_Sunset - Shows the period of day (i.e. day or night) based on sunrise\/sunset.\n\n- Civil_Twilight - Shows the period of day (i.e. day or night) based on civil twilight.\n\n- Nautical_Twilight - Shows the period of day (i.e. day or night) based on nautical twilight.\n\n- Astronomical_Twilight - Shows the period of day (i.e. day or night) based on astronomical twilight.","4ee1385b":"- Almost in every case (99.98%) Bumper was absent in the accident spot.\n\n- In 5.7% cases, road accidents happened near the crossing.\n\n- In 98.83% cases, there were no Stop near the accident area.\n\n- 13.49% road accident cases recorded near the junctions.\n\n- There are no accident cases recorded near the Turning Loop.\n\n- 11.21% road accident cases recorded near the traffic signal.","811e63eb":"### 7. Which month accidents are more frequent in?\n","bf488e1d":"- Around 18% of the cases are reported in December.\n-  July is the month with least (3.54%) no. of road accidents in US.\n- 45% of the road accidents occurred only within the 3 months, October to December\n- We see towards the end of the year the number of accidents is quite high.\n- Also, the dataset is from Feb 2016-Dec2020, we are missing January data for 1 year but that should not make much of a difference.\n\nLets try to figure out why there are more accidents towards the end of the year?\nLets try to look at it for different years.","fd7d9f12":"- We see that Los Angeles had the largest number of accidents (it is also the 2nd most populated city of US), Miami is the city with 2nd highest no. of accident cases reported. \n- On average, 7996 accidents very reported in Los Angeles yearly from 2016-2020.\n- As a surprise, Chicago being the 3rd most populated city reported quite less number of accidents. Source of the data could be an issue here.\n- Miami city reported 2nd largest number of accidents. Possibly because more than 1 state has city named Miami (total 11 from wikipedia), the State census dataset also shows Miami city in different states,similarly for Charlotte,Dallas,Houstan etc.\n- One anomaly is that New York didn't report accidents larger than 10,000 from 2016-2020 despite being the most populated city of US (possible reason is less data from this city).","1cefcd88":"- We can see that for year 2016,2019,2020 less data was recorded for first 6 months. This could explain why we observed more accident cases reports in the last quarter of the year.\n- The dataset is a compilation of records from different sources, it means that the source has missing data.","528112e2":"- We see that as the humidity increases the no of cases also increases.","4be43fa3":"Insights:\n- The majority of the accidents (> 75%) had a severity rating of ~2 i.e. the traffic was not highly impacted.\n- The average length of the road extent affected by the accidents was ~0.6 miles. So, there was almost no traffic disturbance.\n- We can see that the Number column has almost 70% data missing, Precipitation(in) and Wind_Chill(F) also have >=30% data missing.\nSince, Number column (which shows the street number) has majority of the data missing, we should drop it.\n- Los Angeles had the largest number of accidents (it is also the 2nd most populated city of US), Miami is the city with 2nd highest no. of accident cases reported. \n- On average, 7996 accidents very reported in Los Angeles yearly from 2016-2020.\n- As a surprise, Chicago being the 3rh most populated city reported quite less number of accidents.\n- Miami city reported 2nd largest number of accidents. Possibly because more than 1 state has city named Miami (total 11 from wikipedia), the State census dataset also shows Miami city in different states,similarly for Charlotte,Dallas,Houstan etc.\n- One anomaly is that New York didn't report accidents larger than 10,000 despite being the most populated city of US (possible reason is less data from this city).\n- We have 1167 cities which recorded only 1 accident case, this is another data source drawback.\n- We see that California (CA) had the most number of accidents,followed by Florida, Oregon, Texas and New york. It appears to be right as California also has the largest population.\n- In past 5 years, on average 246 accidents (daily) happened in California, implies approximately 10 accidents per hour.\n- US\/Eastern timezone region reported the most number of accident cases (Census data also shows that the population in this timezone is also the largest), followed by US\/Pacific, US\/Central and US\/Mountain.\n- US\/Eastern timezone region accounts for about 38.84% of the accident cases.\n- Eastern and Pacific timezone regions accounts for about 76% of the accident cases. Interestingly, these two regions also accounts for about 72% of the population (excluding those 14 split timezone states)\n- Us\/Mountain region reported the lowest number of accident cases. It agrees with the fact that Mountain timezone region has the least population, thus lowest no of accidents are reported there.\n- On average 14 accidents were reported on street I-5 N.\n- Highest number of accidents occur between 3:00PM - 6:00PM, and between 6:00AM - 9:00AM (Possibly because of work hours). \n- In evening, around 27% of the road accidents occurred in between 3:00PM to 6:00PM.\n- Around 18% of the road accidents occurred in between 6:00AM to 9:00AM.\n- The most-deadliest accident hour is 5:00PM implies the Evening Office-Returning Hours.\n- The 2nd most-deadliest accident hour is 8:00AM implies the Morning Office-Going Hours.\n- We see high number of accidents in the evening time frame because people are more tired at that time as compared to morning hours and thus have low concentration. \n- High no of accidents occur in the morning possibly because people are in a hurry to reach their destination.\n- Thrusday reported the highest no of cases.\n- It looks like overall the cases over different hour is evenly distributed on the business days.\n- Only around 17% of the cases were reported on weekends.\n- Working Days of the week have almost 2 times higher accident percentage, compared with the Weekend Days which is expected.\n- As a surprise, there are less accidents occuring on the weekends.\n- On the weekends, the distribution of accidents taking place over the day looks very different from that of on weekdays. It is more distributed through out the day, instead of peaking at a specific hour range.\n- Around 18% of the cases are reported in December.\n- July is the month with least (3.54%) no. of road accidents in US.\n- 45% of the road accidents occurred only within the 3 months, October to December\n- We see towards the end of the year the number of accidents is quite high.\n- Also, the dataset is from Feb 2016-Dec2020, we are missing January data for 1 year but that should not make much of a difference.\n- For year 2016,2019,2020 less data was recorded for first 6 months. This could explain why we observed more accident cases reports in the last quarter of the year.\n- This dataset is a compilation of records from different sources, the accident cases for different months of different year shows that the sources has missing data.\n- The trend of accident cases is almost exponentially increasing year by year with a sharp rise in year 2020.\n- Year 2020 reported half of the cases in the whole data set.\n- 65661 accidents reported per month in year 2020.\n- On Average, 2159 accidents were reported daily i.e 90 cases per hour, in year 2020 alone.\n- Least no. of accident cases were reported in year 2016.\n- From 2019 to 2020 the average accident\/day has increased 3 times in US.\n- Compared to year 2016, average no of accidents per hour has increased by 6 times.\n- Almost in every case (99.98%) Bumper was absent in the accident spot.\n- In 5.7% cases, road accidents happened near the crossing.\n- In 98.83% cases, there were no Stop near the accident area.\n- 13.49% road accident cases recorded near the junctions.\n- There are no accident cases recorded near the Turning Loop.\n- 11.21% road accident cases recorded near the traffic signal.\n- Maximum no of cases occured between temperature range: 40-80 F.\n- Humidity increases the no of cases also increases.\n- Higest no of accident occured when the air pressure range is between 20(in) - 30(in).\n- Large no. of cases were reported for wind chill range between 51(F) - 71(F).\n- Maximum cases were recorded for the wind speed range between 5(mph) - 10(mph), which is not much and thus it is not a major cause behind the accidents.\n- In maximum cases of road accident, the Visibility range is between 5(mi) - 10(mi), which is quite good and thus it is not a major cause behind the accidents.\n- Weather condition was Fair most of the time and thus it is not a major cause behind the accidents.","2345962a":"## Information\nThis is a countrywide car accident dataset, which covers 49 states of the USA. The accident data are collected from February 2016 to December 2020.\n\nCurrently, there are about 1.5 million accident records in this dataset.\n\n### Acknowledgement\nMoosavi, Sobhan, Mohammad Hossein Samavatian, Srinivasan Parthasarathy, and Rajiv Ramnath. \u201cA Countrywide Traffic Accident Dataset.\u201d, 2019.\n\nMoosavi, Sobhan, Mohammad Hossein Samavatian, Srinivasan Parthasarathy, Radu Teodorescu, and Rajiv Ramnath. \"Accident Risk Prediction based on Heterogeneous Sparse Data: New Dataset and Insights.\" In proceedings of the 27th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems, ACM, 2019.","d6350536":"The abbrevations for state can be checked from here: https:\/\/about.usps.com\/who-we-are\/postal-history\/state-abbreviations.htm","76a767c1":"### 1. Which city in US has reported the most number of accident cases?\n","01a364d0":"The abbrevations for states can be checked from here: https:\/\/about.usps.com\/who-we-are\/postal-history\/state-abbreviations.htm"}}