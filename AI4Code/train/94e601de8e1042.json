{"cell_type":{"5a138e62":"code","f41effbc":"code","2ccb752a":"code","08d66267":"code","09f423a1":"code","8d1142d4":"code","bbce3dce":"code","75d860c9":"code","0a04572e":"code","d2fa72ae":"code","7296a49b":"code","38945ef9":"code","2ad09562":"code","9963df6a":"markdown","cf7c2c68":"markdown","e7789b15":"markdown","563fe459":"markdown","6a191ed8":"markdown"},"source":{"5a138e62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f41effbc":"import pandas as pd\n\n","2ccb752a":"df = pd.read_csv(\"..\/input\/-datacleaningforbeginnerusingpandas\/Data-cleaning-for-beginners-using-pandas.csv\")","08d66267":"df.head(6)","09f423a1":"################# Check the null values ################\ndf.isnull().sum()","8d1142d4":"################ We can also plot using heat map ############\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(12,6))\n\nsns.heatmap(df.isnull(),cbar=False,cmap='Set1',yticklabels=False)","bbce3dce":"###################### First check the age column ################################\n\ndf['Age'] = df['Age'].fillna(df['Age'].mean())","75d860c9":"################ Now clean the Salary columns little bit tricky ! ############################\n\n################# check the first loc of the salary how it's look like #########################\ndf['Salary'].iloc[0]\n\n##################### how use replace method remove the unnecessary char ##########################\n\ndf['Salary'] = df['Salary'].apply(lambda x:x.replace(\"$\",''))\ndf['Salary'] = df['Salary'].apply(lambda x:x.replace(\"k\",''))\n\n############ Now use split method to split this into two values #############\n\n####### use custom function and create what ever u want \ud83d\udca5 ##############\n\n\ndef average_of_this_two(args):\n    try :\n        return float(args)\n    except:\n        values = args.split('-')\n        \n        if len(values) == 2:\n            \n            return float(int(values[0]) + int(values[1]) ) \/2\n        \n\n        \n        \ndf['Salary'] = df[\"Salary\"].apply(average_of_this_two)","0a04572e":"import numpy as np\n################### Now check the Rating columns #########################\ndf['Rating'].isnull().sum()\n######## Here we can 1 null values and -1 values like outliers ############\n###### Fill those values using np.nan using replace method ###########\n\ndf['Rating'] = df[\"Rating\"].replace(-1,np.nan)\n\n#### Now replace the those nan values using mean() method ###\n\ndf['Rating'] = df[\"Rating\"].fillna(df['Rating'].mean())\n","d2fa72ae":"############ Now check the Location column ########################\n\ndf['Location'] = df[\"Location\"].apply(lambda x:x.split(',')[0])","7296a49b":"################ Now remove the outliers(-1) values in established column #####################\n\n######## Step one : --->> \n\ndf[\"Established\"] = df[\"Established\"].replace(-1,np.nan)\n\n\n######## Setp two ----->>\n\ndf[\"Established\"].dropna()","38945ef9":"####### let's check the Final column i.e Easy apply for the application ###########\n\n\n\ndf['Easy Apply']  =  df[\"Easy Apply\"].replace(\"-1\",\"FALSE\")","2ad09562":"df.head()","9963df6a":"#  Any other suggestion are accepted \ud83d\udde8\ud83d\udcac\ud83d\udcac\ud83d\udcac ########### \n## I hope this data cleaning process is very useful to you !! #########\n## Have great day a head \ud83d\udca5 All the best \u2705  \n","cf7c2c68":"## lambda function\/method [click-here](https:\/\/www.w3schools.com\/python\/python_lambda.asp)   \n## apply method [click-here](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.apply.html)\n## replace method [click-here](https:\/\/pandas.pydata.org\/docs\/reference\/api\/pandas.DataFrame.replace.html)","e7789b15":"# <center> Import the libraries <\/center>","563fe459":"# <center> Let's begin our process! using pandas  <\/center>","6a191ed8":"## fillna() method [click-here](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.fillna.html)"}}