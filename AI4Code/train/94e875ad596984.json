{"cell_type":{"e9e6394a":"code","f5ed97ed":"code","2206cdf1":"code","fea052c6":"code","eff7e06a":"code","8f15edc3":"code","56bf7955":"code","49deb849":"code","acb27cf2":"code","457e8410":"code","6137ba5c":"code","8a9d453e":"code","a1619f6b":"code","2ad87182":"code","9b73a84a":"code","51d6d8d3":"code","0480fedf":"code","c38744e0":"code","6a49d8b7":"code","3efc5ce6":"code","e1346e32":"code","8f428126":"code","e9a5248f":"code","9f402b2c":"markdown","6a3b7f15":"markdown","e22fdfe5":"markdown","6bd2b92e":"markdown","a1b219b2":"markdown","4276d556":"markdown","e6ad9390":"markdown","be821f50":"markdown"},"source":{"e9e6394a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f5ed97ed":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\ndata = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")","2206cdf1":"data.head()","fea052c6":"data.isnull().sum()\n","eff7e06a":"data['class'].unique()\n","8f15edc3":"print(data.groupby('class').size())\n","56bf7955":"\nax = sns.countplot(x=\"class\", data=data) #balanced daaset\n","49deb849":"ax = sns.countplot(x=\"class\", hue=\"population\", data=data)\n","acb27cf2":"from sklearn.preprocessing import LabelEncoder\nlabelencoder=LabelEncoder()\nfor col in data.columns:\n    data[col] = labelencoder.fit_transform(data[col])\n ","457e8410":"data.head()","6137ba5c":"\n\ncorrmat = data.corr()\nplt.subplots(figsize=(12,9))\nsns.heatmap(corrmat,  square=True,cbar=True)\n\n","8a9d453e":"data=data.drop('veil-type',axis=1)\ny=data['class'].values\ndata=data.drop('class',axis=1)","a1619f6b":"y","2ad87182":"\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(data,y,test_size=0.2,random_state=4)\n\n","9b73a84a":"\nfrom xgboost import XGBClassifier\nclassifier=XGBClassifier()\n\n","51d6d8d3":"\nclassifier.fit(X_train, y_train)\n","0480fedf":"classifier.score(X_train, y_train)\n","c38744e0":"\nfrom sklearn.model_selection import cross_val_score\n\nscores = cross_val_score(classifier, X_train, y_train, cv=10, scoring='accuracy')\n\n","6a49d8b7":"scores\nscores.mean()","3efc5ce6":"y_pred=classifier.predict(X_test)","e1346e32":"from sklearn import metrics","8f428126":"auc_roc=metrics.roc_auc_score(y_test,y_pred)\nauc_roc","e9a5248f":"\nfrom sklearn import metrics\n\nconfusion_matrix=metrics.confusion_matrix(y_test,y_pred)\nconfusion_matrix","9f402b2c":"so what we get:\n1. veil-color has no effect on anyone i.e it has to be dropped.\n2. gill size is mostly correlated with class","6a3b7f15":"# label encoding all the categorical features","e22fdfe5":"## e=4208 and p=3916 so balance dataset","6bd2b92e":"## Giving the correlation plot to get the idea of correlation between features","a1b219b2":"## P and E are the two classes and lets check whether their is a balance dataset or imbalanced dataset","4276d556":"lets perform splitting the dataset","e6ad9390":"## you can tune the parameters as per your choice","be821f50":"applying the most efficient classifier: xgboost model"}}