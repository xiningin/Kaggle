{"cell_type":{"32da66b8":"code","a82fe55d":"markdown"},"source":{"32da66b8":"import pandas as pd\nimport numpy  as np\n\n#===========================================================================\n# read in the data\n#===========================================================================\ntrain_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest_data  = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')\nsample     = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\n\n#===========================================================================\n# select some features\n#===========================================================================\nfeatures = ['LotArea', 'OverallQual', 'OverallCond', 'YearBuilt', \n            'YearRemodAdd', 'BsmtFinSF1', 'BsmtFinSF2', 'TotalBsmtSF', \n            '1stFlrSF', 'LowQualFinSF', 'GrLivArea', 'BsmtFullBath', \n            'BsmtHalfBath', 'HalfBath', 'BedroomAbvGr',  'Fireplaces', \n            'GarageCars', 'GarageArea', 'WoodDeckSF', 'OpenPorchSF', \n            'EnclosedPorch',  'PoolArea', 'YrSold']\n\n\nX_train = train_data[features]\ny_train = train_data[\"SalePrice\"]\nX_test  = test_data[features]\n\n#===========================================================================\n# XGBoost regression with default parameters\n#===========================================================================\nimport xgboost as xgb\nregressor=xgb.XGBRegressor()\nregressor.fit(X_train, y_train)\n\n#===========================================================================\n# use the model to predict the prices for the test data\n#===========================================================================\npredictions = regressor.predict(X_test)\n\n#===========================================================================\n# write out a CSV submission file\n#===========================================================================\noutput = pd.DataFrame({\"Id\":test_data.Id, \"SalePrice\":predictions})\noutput.to_csv('submission.csv', index=False)","a82fe55d":"This is a simple benchmark of XGBoost using the same very same selection of features that were used in [TabNet: A very simple regression example](https:\/\/www.kaggle.com\/carlmcbrideellis\/tabnet-a-very-simple-regression-example), which had a Public Score of `0.14532`:"}}