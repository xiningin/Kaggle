{"cell_type":{"eef10ec2":"code","24628ba6":"code","87977861":"code","e07fe586":"code","ae4ab5e4":"code","9ef2fa70":"code","3844599f":"code","9f933ab6":"code","1107fe89":"code","430e58eb":"code","dae6d940":"code","5b579f63":"code","abcb099f":"code","318d1d32":"markdown","f3488abb":"markdown","e9708802":"markdown","24f028db":"markdown","9e4cb1a6":"markdown"},"source":{"eef10ec2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","24628ba6":"import matplotlib.pyplot as plt \nimport seaborn as sns ","87977861":"iris_df = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")\niris_df","e07fe586":"sns.scatterplot(x ='sepal_length' , y ='sepal_width' , hue= 'species', data= iris_df)","ae4ab5e4":"plt.figure(figsize= (10,10)) \nplt.subplot(2,2,1)\nsns.violinplot(x ='species', y = 'petal_length', data= iris_df)\n\n \nplt.subplot(2,2,2)\nsns.violinplot(x ='species', y = 'petal_width', data= iris_df)\n \nplt.subplot(2,2,3)\nsns.violinplot(x ='species', y = 'sepal_length', data= iris_df)\n\nplt.subplot(2,2,4)\nsns.violinplot(x ='species', y = 'sepal_width', data= iris_df)","9ef2fa70":"sns.pairplot(iris_df, hue= 'species')","3844599f":"plt.figure(figsize=(9,4))\nsns.heatmap(iris_df.corr(), annot = True)","9f933ab6":"X= iris_df.drop(['species'], axis = 1)\nX","1107fe89":"y = iris_df['species']\ny ","430e58eb":"from sklearn.model_selection import  train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size= 30 )\nX_train.shape\nX_test.shape ","dae6d940":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report\nclassifier = KNeighborsClassifier(n_neighbors= 5, metric= \"minkowski\",p=2)\nclassifier.fit(X_train, y_train)\n","5b579f63":"y_predict = classifier.predict(X_test)\ny_predict\nfrom sklearn.metrics import confusion_matrix \ncm = confusion_matrix(y_test, y_predict)\nsns.heatmap(cm, annot = True)\nprint(classification_report(y_test,y_predict))","abcb099f":"import sklearn\naccuracy = sklearn.metrics.accuracy_score(y_test, y_predict)\naccuracy","318d1d32":"**importing the libaries **","f3488abb":"**finding the scattering of the Data **","e9708802":"**Trianing the model**","24f028db":"**Data cleaning **","9e4cb1a6":"**Evaluating the Model**"}}