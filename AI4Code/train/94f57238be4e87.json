{"cell_type":{"6ff2ba96":"code","178b2dbe":"code","2086fa41":"code","e26e2fb9":"code","850d7ca8":"code","103a145d":"code","86ee2f20":"code","43015dfb":"code","b0fa6bab":"code","64062c39":"code","518e2975":"code","3d21245f":"code","ecbc81cb":"code","c6e51bd2":"code","b454c5fc":"code","1c4413bf":"code","f54506a9":"code","03be7f5e":"code","cd7b301f":"code","9a51aade":"code","0c41a86a":"code","dc3851cb":"code","ad97ff23":"code","f9e8731d":"code","304f5095":"code","fda95078":"code","e058ffaa":"code","93f52fe2":"code","f5532aa5":"code","cbfe324d":"code","75948829":"code","0bc1d683":"code","5349154f":"code","ea7456ae":"code","c44fd680":"code","a4397399":"code","94b0caf6":"code","c69fbafe":"code","0ea733cc":"code","df34b1ea":"code","51f354f6":"code","650eb6ac":"code","10b57a16":"code","ca2b06f4":"code","b711c479":"code","2acb5817":"code","c7131658":"code","ab5cb279":"markdown","ec4eb893":"markdown","2d23a078":"markdown","d49c0ac0":"markdown","90adb3a9":"markdown","adc631c0":"markdown","c590892e":"markdown","df3f1feb":"markdown","0f7ad41c":"markdown","e818ef2b":"markdown"},"source":{"6ff2ba96":"#importing libraries\nimport pandas as pd\nimport numpy as np\nfrom scipy import stats\nfrom scipy.stats import kurtosistest\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas.plotting import scatter_matrix\nimport warnings\n\n%matplotlib inline\nwarnings.simplefilter(\"ignore\")","178b2dbe":"#reading the data\ntrain = pd.read_csv(\"\/kaggle\/input\/grocery-sales-forecast-weekend-hackathon\/Grocery_Sales_ParticipantsData\/Train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/grocery-sales-forecast-weekend-hackathon\/Grocery_Sales_ParticipantsData\/Test.csv\")","2086fa41":"#checking on the basic\nprint(train.head(2))\nprint(\"*\"*50)\nprint(train.isnull().sum())\nprint(\"*\"*50)\nprint(\"The shape of Train Dataset is:\",train.shape)","e26e2fb9":"train.describe()","850d7ca8":"#checking normality of data\nk2, p = stats.normaltest(train['GrocerySales'])\nalpha = 1e-3\nprint(\"p = {:g}\".format(p))\np = 3.27207e-11\nif p < alpha:  # null hypothesis: x comes from a normal distribution\n    print(\"Data Not Normalize\")\nelse:\n    print(\"Data Noramlize\")","103a145d":"#correlation comparison \ncorr = train.corr()\ncorr.style.background_gradient(cmap='coolwarm')","86ee2f20":"#scatter matrix\nscatter_matrix(train)\nplt.show()","43015dfb":"#checking on outliers\nplt.figure(figsize=(5,5))\nsns.boxplot(x= 'variable', y = 'value', data = pd.melt(train[['GrocerySales']]))","b0fa6bab":"#treemap\nfig = px.treemap(train, path=['GrocerySales'],color='GrocerySales', hover_data=['Day', 'GrocerySales'])\nfig.show()","64062c39":"#scatter plot\nfig = px.scatter(train, x=\"Day\", y=\"GrocerySales\", trendline=\"ols\")\nfig.show()","518e2975":"#Grocery Sales density plot \nsns.set_style(\"darkgrid\")\nsns.kdeplot(data=train['GrocerySales'],label=\"GrocerySales\" ,shade=True)","3d21245f":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error","ecbc81cb":"X = train['Day']\ny = train['GrocerySales']\nX_pred = test['Day']","c6e51bd2":"X = np.array(X)\nX = X.reshape(-1, 1)","b454c5fc":"X_pred = np.array(X_pred)\nX_pred = X_pred.reshape(-1, 1)","1c4413bf":"#scaling the data\nrs = RobustScaler()","f54506a9":"X_scaled = rs.fit_transform(X)\nX_pred_scaled = rs.fit_transform(X_pred)","03be7f5e":"train_X, test_X, train_y, test_y = train_test_split(X, y,test_size=0.3,random_state = 42)","cd7b301f":"lr = LinearRegression()\nlr.fit(train_X,train_y)","9a51aade":"predict = lr.predict(test_X)\nprint('Mean Squared Error: %.2f'% mean_squared_error(test_y,predict))\nprint('Mean Absolute Error: %.2f'% mean_absolute_error(test_y,predict))","0c41a86a":"y_pred_lr = lr.predict(X_pred)","dc3851cb":"y_pred_lr","ad97ff23":"knn = KNeighborsRegressor()\nknn.fit(train_X,train_y)","f9e8731d":"predict_knn = knn.predict(test_X)\nprint('Mean Squared Error: %.2f'% mean_squared_error(test_y,predict_knn))\nprint('Mean Absolute Error: %.2f'% mean_absolute_error(test_y,predict_knn))","304f5095":"y_pred_knn = knn.predict(X_pred)","fda95078":"y_pred_knn","e058ffaa":"scaled_train_X, scaled_test_X, train_y, test_y = train_test_split(X_scaled, y, test_size=0.3,random_state = 42)","93f52fe2":"lr = LinearRegression()\nlr.fit(scaled_train_X,train_y)","f5532aa5":"scaled_predict = lr.predict(scaled_test_X)\nprint('Mean Squared Error: %.2f'% mean_squared_error(test_y,scaled_predict))\nprint('Mean Absolute Error: %.2f'% mean_absolute_error(test_y,scaled_predict))","cbfe324d":"y_pred_scaled_lr = lr.predict(X_pred_scaled)","75948829":"y_pred_scaled_lr","0bc1d683":"knn = KNeighborsRegressor()\nknn.fit(scaled_train_X,train_y)","5349154f":"scaled_predict_knn = knn.predict(scaled_test_X)\nprint('Mean Squared Error: %.2f'% mean_squared_error(test_y,scaled_predict_knn))\nprint('Mean Absolute Error: %.2f'% mean_absolute_error(test_y,scaled_predict_knn))","ea7456ae":"y_pred_scaled_knn = knn.predict(X_pred_scaled)","c44fd680":"y_pred_scaled_knn","a4397399":"sns.distplot(test_y-predict)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","94b0caf6":"sns.distplot(test_y-predict_knn)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","c69fbafe":"sns.distplot(test_y-scaled_predict)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","0ea733cc":"sns.distplot(test_y-scaled_predict_knn)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","df34b1ea":"df1 = pd.DataFrame(y_pred_lr,columns=['GrocerySales_lr'])\ndf2 = pd.DataFrame(y_pred_knn,columns=['GrocerySales_knn'])\ndf3 = pd.DataFrame(y_pred_scaled_lr,columns=['GrocerySales_lrs'])\ndf4 = pd.DataFrame(y_pred_scaled_knn,columns=['GrocerySales_knns'])","51f354f6":"temp = [test, df1, df2, df3, df4]","650eb6ac":"test_result = pd.concat(temp, axis=1, join='outer', ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False, copy=True)","10b57a16":"test_result.head(2)","ca2b06f4":"fig = px.scatter(x=test_result.Day, y=test_result.GrocerySales_knn)\nfig.show()","b711c479":"fig = px.scatter(x=test_result.Day, y=test_result.GrocerySales_knns)\nfig.show()","2acb5817":"fig = px.scatter(x=test_result.Day, y=test_result.GrocerySales_lr)\nfig.show()","c7131658":"fig = px.scatter(x=test_result.Day, y=test_result.GrocerySales_lrs)\nfig.show()","ab5cb279":"### Pre-processing and Cleansing the Data","ec4eb893":"### The End!!!","2d23a078":"#### Using Linear Regression (Non-Scaled Data)","d49c0ac0":"### Model Implementation ","90adb3a9":"#### Using KNN Regressor (Non-Scaled Data)","adc631c0":"### Plottting the Prediction","c590892e":"#### Machine Hack - Sales Forcasting","df3f1feb":"###### About Data \n\nSales forecasting has always been one of the most predominant applications of machine learning. Big companies like Walmart have been employing this technique to achieve steady and enormous growth over decades now. In this challenge, you as a data scientist must use machine learning to help a small grocery store in predicting its future sales and making better business decisions.\n\nGiven the daily sales of a grocery shop recorded over a period of almost 2 years, your objective as a data scientist is to build a machine learning model that can forecast the sales for the upcoming 3 months.","0f7ad41c":"#### Using KNN Regressor (Scaled Data)","e818ef2b":"#### Using Linear Regression (Scaled Data)"}}