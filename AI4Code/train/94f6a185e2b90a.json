{"cell_type":{"f7e45964":"code","78020439":"code","f71237e4":"code","8025bb0c":"code","d054eb9d":"code","97b431f1":"code","131a2c89":"code","6b657847":"code","a4bf6c3d":"code","a8e04ced":"code","7fb95e5e":"code","461371ef":"code","e6047c45":"code","60e8dffc":"code","e35f7fab":"code","2bbefdd1":"code","61a5e511":"markdown","df2f54c5":"markdown"},"source":{"f7e45964":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import hist\n%matplotlib inline\n\n# Data\ndata_path = \"\/kaggle\/input\/data4wfh\/\"","78020439":"# Loading county wise election data\n# Source: https:\/\/www.kaggle.com\/unanimad\/us-election-2020\ndf1_1 = pd.read_csv(data_path + \"president_county_candidate.csv\")\ndf1_1.head()\n\n# Data pre-processing\ndf1_2 = df1_1[(df1_1[\"party\"] == \"DEM\") | (df1_1[\"party\"] == \"REP\")]\ndf1_2 = df1_2.drop(columns=[\"candidate\",\"won\"])\ndf1_2.rename(columns = {'state': 'State', 'county': 'County'}, inplace = True)\n\ndf1_3 = pd.pivot_table(df1_2,values=\"total_votes\",index=[\"State\",\"County\"],columns=\"party\").copy()\ndf1_3.reset_index(inplace=True)\ndf1_3.head()","f71237e4":"# Updating new england states data since data provided was city and not county wise\n# Source: https:\/\/www.politico.com\/2020-election\/results\/\ndf1_3.drop(df1_3[(df1_3[\"State\"] == \"Connecticut\") | (df1_3[\"State\"] == \"Massachusetts\") | \\\n                 (df1_3[\"State\"] == \"Maine\") | (df1_3[\"State\"] == \"New Hampshire\") | (df1_3[\"State\"] == \"Vermont\") | \\\n                 (df1_3[\"State\"] == \"Rhode Island\") | (df1_3[\"State\"] == \"Alaska\")].index, inplace=True)\n\ndf1_4 = pd.read_csv(data_path + \"NewEngland_ElectionData.csv\")\ndf1_4 = pd.concat([df1_3, df1_4], axis=0)\ndf1 = df1_4\ndf1.head()","8025bb0c":"# County wise median home price data\n# Source: https:\/\/www.nar.realtor\/research-and-statistics\/housing-statistics\/county-median-home-prices-and-monthly-mortgage-payment\n\n#from tabula import read_pdf\n#df2_1 = read_pdf(data_path + '2019-q4-county-median-home-prices.pdf', pages=\"all\")\n\n#df2_2 = df2_1[0].iloc[:,0:2]\n#col0 = df2_2.columns[0]\n#col1 = df2_2.columns[1]\n#df2_2.rename(columns = {col0: 'County', col1: 'Median Home Price'}, inplace = True)\n\n#df2_3 = df2_2.copy()    \n#for i in range(1,len(df2_1)):\n#    df2_2 = df2_1[i].iloc[:,0:2]\n#    col0 = df2_2.columns[0]\n#    col1 = df2_2.columns[1]\n#    df2_2.rename(columns = {col0: 'County', col1: 'Median Home Price'}, inplace = True)\n#    df2_2 = df2_2.append([{'County': col0, 'Median Home Price': col1}], ignore_index=False)\n#    df2_3 = df2_3.append(df2_2)\n\n#df2_4 = df2_3.reset_index().drop(columns=\"index\")\n#df2_4[\"State\"] = df2_4[\"County\"].str.split(\",  \", expand = True)[1]\n#df2_4[\"County\"] = df2_4[\"County\"].str.split(\",  \", expand = True)[0]\n#df2_4[\"Median Home Price\"] = df2_4[\"Median Home Price\"].str.replace('$','').str.replace(',','').astype(int)\n\n#df2 = df2_4","d054eb9d":"# County wise median home price data\n# Source: https:\/\/www.nar.realtor\/research-and-statistics\/housing-statistics\/county-median-home-prices-and-monthly-mortgage-payment\ndf2 = pd.read_csv(data_path + '2019-q4-county-median-home-prices.csv')\ndf2.head()","97b431f1":"# County wise population data\n# Source: https:\/\/www.census.gov\/data\/tables\/time-series\/demo\/popest\/2010s-counties-total.html#par_textimage_242301767\ndf3 = pd.read_csv(data_path + 'county_population.csv')\ndf3[\"State\"] = df3[\"County\"].str.split(\", \", expand = True)[1]\ndf3[\"County\"] = df3[\"County\"].str.split(\", \", expand = True)[0]\ndf3[\"County\"] = df3[\"County\"].str.replace(\".\",\"\")\n\ndf3.sort_values(\"Population\",ascending=False).head()","131a2c89":"# Combining election, home price and population data\ndf4 = pd.concat([df1.set_index([\"State\",\"County\"]), df2.set_index([\"State\",\"County\"]), \\\n                   df3.set_index([\"State\",\"County\"])], axis=1).reset_index()\n\n# Data processing\ndf4.drop(df4[df4[\"DEM\"].isnull() | df4[\"REP\"].isnull() | \\\n             df4[\"Median Home Price\"].isnull() | df4[\"Population\"].isnull()].index, inplace=True)\ndf4.drop(df4[(df4[\"DEM\"] == 0) | (df4[\"REP\"] == 0)].index, inplace=True)\ndf4[\"DEM\"] = df4[\"DEM\"].astype(int)\ndf4[\"REP\"] = df4[\"REP\"].astype(int)\ndf4[\"Median Home Price\"] = df4[\"Median Home Price\"].astype(int)\ndf4[\"Population\"] = df4[\"Population\"].astype(int)\ndf4.reset_index(inplace=True)\ndf4.drop(columns=\"index\",inplace=True)\n\ndf4.head()","6b657847":"# Home price comparison for counties won by democratic vs republic party\nfrom babel.numbers import format_decimal\ndf5 = df4.copy()\n\nprice_mean = df5[\"Median Home Price\"].mean()\nprice_mean_DEM = df5[df5[\"DEM\"] > df5[\"REP\"]][\"Median Home Price\"].mean()\nprice_mean_REP = df5[df5[\"DEM\"] < df5[\"REP\"]][\"Median Home Price\"].mean()\n\nprint (\"Median Home Price\")\nprint (\"-----------------\")\nprint (\"Overall:  $\", format_decimal(int(price_mean), locale='en_US'), sep='')\nprint (\"DEM:      $\", format_decimal(int(price_mean_DEM), locale='en_US'), sep='')\nprint (\"REP:      $\", format_decimal(int(price_mean_REP), locale='en_US'), sep='')\n\n\ndf5_DEM = df5[df5[\"DEM\"] > df5[\"REP\"]]\ndf5_REP = df5[df5[\"DEM\"] < df5[\"REP\"]]\nbins_list = np.linspace(1,35,35)*20000\n\nplt.hist(df5_DEM[\"Median Home Price\"], weights=df5_DEM[\"Population\"], alpha=0.5, color='b', bins=bins_list, label='DEM');\nplt.hist(df5_REP[\"Median Home Price\"], weights=df5_REP[\"Population\"], alpha=0.5, color='r', bins=bins_list, label='REP');\nplt.suptitle(\"Home price comparison for counties won by DEM vs REP\", fontweight='bold', fontsize=16);\nplt.xlabel(\"Median Home Price\");\nplt.ylabel(\"Population\");\nplt.legend(loc='upper right')\nplt.show()","a4bf6c3d":"# Estimating the vote distribution change for migration from higher to lower home price counties  \n\n# Assumptions made to estimate the impact of work-from-home:\n#   1.Work-from-home option will result in migration from high to low median home price places\n#   2.People will migrate out from counties with home median price in top 50th percentile \n#   3.People will migrate out to the counties with half or lesser home median price\n#   4.Migration from county is proportional to the county's population and equally probable to eligible counties\n\ndf7 = df4.copy()\npara_pct = 0.29\npara_price_cut_out = 0.5\npara_price_cut_in1 = 0.0\npara_price_cut_in2 = 0.5\n\nprice_cut_out = df7[\"Median Home Price\"].quantile(para_price_cut_out)\nind_out = (df7[\"Median Home Price\"] >= price_cut_out)\nalpha = para_pct * df7.loc[ind_out,\"Population\"].sum() \/ \\\n                    (df7.loc[ind_out,\"Median Home Price\"] * df7.loc[ind_out,\"Population\"]).sum()\ndf7[\"Delta_DEM\"] = 0\ndf7[\"Delta_REP\"] = 0\n\nfor i in range(len(df7)):\n    home_price = df7[\"Median Home Price\"][i]\n    if (home_price < price_cut_out):\n        continue\n\n    county_pop = df7[\"Population\"][i]\n    pop_out = int(alpha * home_price * county_pop)\n    dem_ratio = df7.DEM[i] \/ county_pop\n    rep_ratio = df7.REP[i] \/ county_pop\n    ind_in = (df7[\"Median Home Price\"] >= para_price_cut_in1 * home_price) & \\\n                    (df7[\"Median Home Price\"] <= para_price_cut_in2 * home_price)\n    if (ind_in.sum() == 0):\n        continue\n\n    n_in = sum(ind_in)\n    df7.loc[ind_in,\"Delta_DEM\"] += 1\/n_in * pop_out * dem_ratio\n    df7.loc[ind_in,\"Delta_REP\"] += 1\/n_in * pop_out * rep_ratio\n\n    df7.at[i,\"Delta_DEM\"] -= pop_out * dem_ratio\n    df7.at[i,\"Delta_REP\"] -= pop_out * rep_ratio\n\ndf7.Delta_DEM = df7.Delta_DEM.astype(int)\ndf7.Delta_REP = df7.Delta_REP.astype(int)\n\ndf7[\"DEM_new\"] = df7[\"DEM\"] + df7[\"Delta_DEM\"]\ndf7[\"REP_new\"] = df7[\"REP\"] + df7[\"Delta_REP\"]\n\ndf7[\"Diff\"] = df7[\"DEM\"] - df7[\"REP\"]\ndf7[\"Diff_new\"] = df7[\"DEM_new\"] - df7[\"REP_new\"]\n\ndf7[\"Color\"] = (df7[\"DEM\"] < df7[\"REP\"]).astype(int)\ndf7[\"Color_new\"] = (df7[\"DEM_new\"] < df7[\"REP_new\"]).astype(int)\n\ncheck = df7.Delta_DEM.sum()\npop_move = para_pct * df7.loc[ind_out,\"Population\"].sum() \/ df7[\"Population\"].sum()\n#print (\"Population moved: \", int(pop_move*100), \"%\")\ndf7.head()","a8e04ced":"print (\"Counties Won\")\nprint (\"------------\")\nprint (\"DEM\/REP (2020 Election): \", df7[\"Color\"].count()-df7[\"Color\"].sum(), \"\/\", df7[\"Color\"].sum())\nprint (\"DEM\/REP (Simulation): \", df7[\"Color_new\"].count()-df7[\"Color_new\"].sum(), \"\/\", df7[\"Color_new\"].sum())\n\nlabels = 'DEM', 'REP'\ncolors = 'b','r'\nexplode = (0, 0.1)\n\nfig = plt.figure(figsize=(8,4))\nplt.suptitle(\"Counties won by DEM & REP\", fontweight='bold', fontsize=16, y=1.08);\n\nsizes = [df7[\"Color\"].count()-df7[\"Color\"].sum(), df7[\"Color\"].sum()]\nax1 = fig.add_subplot(121)\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',shadow=True, startangle=90)\nax1.title.set_text('2020 Election')\nax1.axis('equal') \n\nsizes = [df7[\"Color_new\"].count()-df7[\"Color_new\"].sum(), df7[\"Color_new\"].sum()]\nax2 = fig.add_subplot(122)\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90)\nax2.axis('equal')\nax2.title.set_text('Simulation \\n(w. 25% migration)')\nplt.show()","7fb95e5e":"df8 = df7.copy()\ndf8 = df8.groupby(\"State\").sum()[[\"DEM\",\"REP\",\"Population\", \\\n                                     \"Delta_DEM\",\"Delta_REP\",\"DEM_new\",\"REP_new\",\"Diff\",\"Diff_new\"]]\ndf8.reset_index(inplace=True)\n\ndf8[\"Color\"] = (df8[\"DEM\"] < df8[\"REP\"]).astype(int)\ndf8[\"Color_new\"] = (df8[\"DEM_new\"] < df8[\"REP_new\"]).astype(int)\n\ndf8[\"Swing State\"] = 0\ndf8.loc[(df8[\"Color\"] != df8[\"Color_new\"]), \"Swing State\"] = 1\n\ndf8[\"Trending DEM\"] = 0\ndf8.loc[(df8[\"Diff\"] < df8[\"Diff_new\"]), \"Trending DEM\"] = 1\ndf8.head()","461371ef":"#print (\"State swinged: \", len(df8[df8[\"Swing State\"] == 1][\"State\"]))\nprint (\"States (+DC) Won\")\nprint (\"----------------\")\nprint (\"DEM\/REP (2020 Election): \", df8[\"Color\"].count()-df8[\"Color\"].sum(), \"\/\", df8[\"Color\"].sum())\nprint (\"DEM\/REP (Simulation): \", df8[\"Color_new\"].count()-df8[\"Color_new\"].sum(), \"\/\", df8[\"Color_new\"].sum())\n\nlabels = 'DEM', 'REP'\ncolors = 'b','r'\nexplode = (0, 0.1)\n\nfig = plt.figure(figsize=(8,4))\nplt.suptitle(\"States (+DC) won by DEM & REP\", fontweight='bold', fontsize=16, y=1.08);\n\nsizes = [df8[\"Color\"].count()-df8[\"Color\"].sum(), df8[\"Color\"].sum()]\nax1 = fig.add_subplot(121)\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',shadow=True, startangle=90)\nax1.title.set_text('2020 Election')\nax1.axis('equal') \n\nsizes = [df8[\"Color_new\"].count()-df8[\"Color_new\"].sum(), df8[\"Color_new\"].sum()]\nax2 = fig.add_subplot(122)\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90)\nax2.axis('equal')\nax2.title.set_text('Simulation \\n(w. 25% migration)')\nplt.show()","e6047c45":"# Loading state codes\n# Source: https:\/\/worldpopulationreview.com\/states\/state-abbreviations\ndf9 = pd.read_csv(data_path + \"State_Code.csv\")\ndf9.rename(columns = {'code': 'Code'}, inplace = True)\n\n# Loading data for state wise electoral votes\n# Source: https:\/\/en.wikipedia.org\/wiki\/United_States_Electoral_College\ndf10 = pd.read_csv(data_path + \"ElectoralVotes.csv\")\ndf10 = df10.append([{'State': 'District of Columbia', 'Number of Electoral Votes': 3}], ignore_index=True)\ndf10.rename(columns = {'Number of Electoral Votes': 'Electoral Votes'}, inplace = True)\n\ndf11 = pd.concat([df8.set_index(\"State\"), df9.set_index(\"State\"), df10.set_index(\"State\")], axis=1)\ndf11 = df11.reset_index()\ndf11.rename(columns = {'index': 'State'}, inplace = True)\ndf11.drop(columns=\"Abbrev\", inplace=True)\ndf11.head()","60e8dffc":"tot_elec = df11[\"Electoral Votes\"].sum()\nrep_elec = df11[df11[\"Color\"] == 1][\"Electoral Votes\"].sum()\nrep_elec_new = df11[df11[\"Color_new\"] == 1][\"Electoral Votes\"].sum()\nprint (\"Electoral Votes\")\nprint (\"---------------\")\nprint (\"DEM\/REP (2020 Election): \", tot_elec-rep_elec, \"\/\", rep_elec)\nprint (\"DEM\/REP (Simulation): \", tot_elec-rep_elec_new, \"\/\", rep_elec_new)\n\nlabels = 'DEM', 'REP'\ncolors = 'b','r'\nexplode = (0, 0.1)\n\nfig = plt.figure(figsize=(8,4))\nplt.suptitle(\"Electoral Votes won by DEM & REP\", fontweight='bold', fontsize=16, y=1.08);\n\nsizes = [tot_elec-rep_elec, rep_elec]\nax1 = fig.add_subplot(121)\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',shadow=True, startangle=90)\nax1.title.set_text('2020 Election')\nax1.axis('equal') \n\nsizes = [tot_elec-rep_elec_new, rep_elec_new]\nax2 = fig.add_subplot(122)\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90)\nax2.axis('equal')\nax2.title.set_text('Simulation \\n(w. 25% migration)')\nplt.show()","e35f7fab":"import plotly\nimport plotly.graph_objects as go\nplotly.offline.init_notebook_mode (connected = True)\n\ndf = df11.copy()\nfor col in df.columns:\n    df[col] = df[col].astype(str)\n\ndf['text'] = 'Electorals ' + df['Electoral Votes'] + '<br>' + 'DEM ' + df['DEM'] + '<br>' + 'REP ' + df['REP']\ndf['text_new'] = 'Electorals ' + df['Electoral Votes'] + '<br>' + 'DEM ' + df['DEM_new'] + '<br>' + 'REP ' + df['REP_new']\n\nfig1 = go.Figure(data=go.Choropleth(\n    locations=df['Code'],\n    z=df['Color'].astype(float),\n    locationmode='USA-states',\n    colorscale='Bluered',\n    autocolorscale=False,\n    text=df['text'], # hover text\n    marker_line_color='white', # line markers between states\n    colorbar_title=\"Red: REP\" + '<br>' + \"Blue: DEM\"\n))\n\nfig2 = go.Figure(data=go.Choropleth(\n    locations=df['Code'],\n    z=df['Color_new'].astype(float),\n    locationmode='USA-states',\n    colorscale='Bluered',\n    autocolorscale=False,\n    text=df['text_new'], # hover text\n    marker_line_color='white', # line markers between states\n    colorbar_title=\"Red: REP\" + '<br>' + \"Blue: DEM\"\n))\n\nfig1.update_layout(\n    title_text='2020 US General Election Results by State',\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'),\n)\n\nfig2.update_layout(\n    title_text='Estimate of US General Election Results with ' + str(int(pop_move*100)) + '% Migration',\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        showlakes=True, # lakes\n        lakecolor='rgb(255, 255, 255)'),\n)\n\nfig1.show()\nfig2.show()","2bbefdd1":"# Vote differences (DEM-REP) for 2020 Election \/ Case with 25% migration\nN = 12\ndf12 = df11[df11.Color == 1].sort_values(\"Diff\", ascending=False).iloc[0:N]\nind = np.arange(N)\nwidth = 0.3       \n\nfig = plt.figure(figsize=(15,5))\nplt.suptitle(\"Vote Difference (DEM-REP) for states with close result\", fontweight='bold', fontsize=16);\nax = fig.add_subplot(111)\n\nrects1 = ax.bar(ind, df12[\"Diff\"], width, color='y')\nrects2 = ax.bar(ind+width, df12[\"Diff_new\"], width, color='g')\n\n#ax.set_title('')\nax.set_ylabel('Vote Difference (DEM-REP)', fontsize=16)\nax.set_xticks(ind+width)\nplt.xticks(rotation=90)\nax.set_xticklabels((df12[\"State\"]), fontsize=16)\nax.legend((rects1[0],rects2[0]),('2020 Election','Simulation'));","61a5e511":"DESCRIPTION:\n\nRecent pandemic has led to enforce somewhat frowned upon work-from-home culture. This has given many companies an oppurtunity to evaluate it\u2019s long term cost savings. Though on one hand the employers can benefit from not having physical offices, the employees on the other hand can benefit too by relocating to the palces with lower cost of living. And since the home price is the major factor in overall cost of living, this could very well be the start of massive migration from places with higher to lower home prices. This project studies the potential impact of any such migration on change in voter demographics and the effect it can have on the future US general elections.","df2f54c5":"**SUMMARY**\n\n1. Counties won by demcratic party in 2020 general elections have siginificant higher home median price compared to counties won by republican party (DEM: 258,176 vs REP: 140,612)\n\n2. If current work-from-home option leads to migration from high to low median home price locations, then analysis shows that it will disproportionately benefit democratic party\n\n3. With high migration (25%) assumption, simulated scenario shows that Democratic party's electoral vote share would increase from current tally of 306 to as high as 350\n\n4. The eight states that \"swinged\" in favor of Democratic party in the above simulated case are Alaska, North Carolina, Montana, South Dakota, North Dakota, Iowa, Nebraska and Kansas."}}