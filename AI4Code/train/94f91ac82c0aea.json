{"cell_type":{"bac2e537":"code","2a8780fa":"code","dad5d8d1":"code","13363579":"code","f8b79ff8":"code","a1c603c7":"code","068c41c3":"code","0de0db0c":"code","85c91d60":"code","bfd8ce47":"markdown","7d6fccb0":"markdown","3362ec82":"markdown"},"source":{"bac2e537":"import numpy as np\nimport pandas as pd\n\nfrom scipy import stats\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')","2a8780fa":"df_1 = pd.read_csv(\"..\/input\/tps-12-nn-tpu-pseudolabeling-0-95690\/tps12-pseudeo-submission.csv\")\ndf_2 = pd.read_csv(\"..\/input\/tps-12-nn-tpu-pseudolabeling-0-95690\/tps12-pseudeo-submission.csv\")\ndf_3 = pd.read_csv(\"..\/input\/tps-12-g-res-variable-selection-nn-keras\/baseline_nn.csv\")\ndf_4 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\ndf_5 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\ndf_6 = pd.read_csv(\"..\/input\/tps202112-reasonable-xgboost-model\/submission.csv\")\ndf_7 = pd.read_csv(\"..\/input\/tps-12-super-fast-blending-tool\/tps12-fast-blend.csv\")\n\nsubmission = pd.read_csv('..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv')\n\npredictions = [df_1, df_2, df_3, df_4, df_5, df_6, df_7]","dad5d8d1":"results = pd.DataFrame()\nfor i, ds in enumerate(predictions):\n    results[f'p{i+1}'] = ds['Cover_Type']\n\nprint(results.shape)\nresults.head()","13363579":"%%time\nresults[\"ensemble\"] = stats.mode(np.array(results), axis=1)[0]\nresults.head()","f8b79ff8":"def nunique(a, axis):\n    return (np.diff(np.sort(a,axis=axis),axis=axis)!=0).sum(axis=axis)+1","a1c603c7":"results[\"dif\"] = nunique(results.iloc[:,:len(predictions)].values,1) - 1\nresults.head()","068c41c3":"results.dif.value_counts()","0de0db0c":"submission['Cover_Type'] = results[\"ensemble\"]\nsubmission.to_csv(\"submission.csv\", index=False)\nsubmission.head()","85c91d60":"plt.figure(figsize=(10,5))\nax = sns.countplot(x=submission.Cover_Type)\nplt.title(\"Predictions\")\nplt.xlabel(\"Cover Type\")\nax.bar_label(ax.containers[0])\nplt.show()","bfd8ce47":"# Import Some Main Libs","7d6fccb0":"I am not interested in ensemble notebooks; since all efforts are for others who publish their great notebooks with a good score, you get a simple average without much effort. However, in this competition, I saw there were no ensemble notebooks and there were some discussion that is ensemble can get a better results here or not, since this competition is a little bit different from previous ones. So I was just curious to test a simple ensemble. \n\nOf course the credit of these good scores is for original notebook publishers:\n- @kaaveland for [TPS202112 - Reasonable XGBoost model](https:\/\/www.kaggle.com\/kaaveland\/tps202112-reasonable-xgboost-model)\n- @remekkinas for [TPS-12 NN (TPU) + Pseudolabeling [0.95690]](https:\/\/www.kaggle.com\/remekkinas\/tps-12-nn-tpu-pseudolabeling-0-95690) and [TPS-12 - super fast blending tool](https:\/\/www.kaggle.com\/remekkinas\/tps-12-super-fast-blending-tool\/comments)\n- @mlanhenke for [[TPS-12] G-Res & Variable Selection NN (Keras)](https:\/\/www.kaggle.com\/mlanhenke\/tps-12-g-res-variable-selection-nn-keras)","3362ec82":"# Now Submission"}}