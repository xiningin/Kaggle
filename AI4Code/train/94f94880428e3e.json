{"cell_type":{"5ff4d1d4":"code","5170bd3a":"code","99c6cd92":"code","b72300a3":"code","396c0323":"code","b6fe6bc5":"code","746c5682":"code","91fb735b":"code","9014b6fc":"code","8900884d":"code","ed0106d2":"code","8d85c74d":"code","81db06cb":"code","f7ac662d":"code","8d1750d3":"code","1f1f42b7":"code","8015b0e3":"code","194eab0a":"code","3c457c3c":"code","3974a8aa":"code","dafc79c6":"code","963a43b8":"code","b56eb1d9":"code","e1cceca7":"code","76546d1e":"code","a5d38a2e":"markdown","32407188":"markdown","cecfcac2":"markdown","8d0ad685":"markdown","caac8ebe":"markdown","8bf6c44b":"markdown","021f3402":"markdown"},"source":{"5ff4d1d4":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5170bd3a":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n","99c6cd92":"train.head()","b72300a3":"train.info()","396c0323":"pd.options.display.max_rows = 30\nprint(train.isnull().sum().sort_values())","b6fe6bc5":"train.drop(['PoolQC', 'MiscFeature', 'Alley', \"Fence\", \"FireplaceQu\", \"LotFrontage\"], axis=1, inplace=True)","746c5682":"plt.subplots(figsize=(20,20))\nsns.heatmap(train.corr())","91fb735b":"num_cols= train.select_dtypes(include=['int64', 'float64'])\ncatcols= train.select_dtypes(include='object')","9014b6fc":"catcols.columns","8900884d":" catcols.info()","ed0106d2":"train[catcols.columns]","8d85c74d":"pd.get_dummies(train[catcols.columns])","81db06cb":"train = pd.concat((train[num_cols.columns], pd.get_dummies(train[catcols.columns])), axis=1)\ntrain.dropna()\n\ny = train['SalePrice']\nX = train.drop(['SalePrice'], axis = 1)","f7ac662d":"columnsX = X.columns","8d1750d3":"from sklearn.impute import SimpleImputer\nimp = SimpleImputer(strategy='most_frequent')\nX = pd.DataFrame(imp.fit_transform(X))","1f1f42b7":"X.columns = columnsX","8015b0e3":"X.isnull().any().sum()","194eab0a":"def cor_selector(X, y, num_feats):\n  cor_list = []\n  feature_name = X.columns.tolist()\n\n  for i in X.columns.tolist():\n    cor = np.corrcoef(X[i], y)[0, 1]\n    cor_list.append(cor)\n \n  cor_list = [0 if np.isnan(i) else i for i in cor_list]\n\n  cor_feature = X.iloc[:,np.argsort(np.abs(cor_list))[-num_feats:]].columns.tolist()\n  return cor_feature\n\nPearsoncolumns =  cor_selector(X, y,30)\n","3c457c3c":"Pearsoncolumns","3974a8aa":"from sklearn.feature_selection import SelectKBest\nfrom sklearn.feature_selection import chi2\nfrom sklearn.preprocessing import MinMaxScaler\nX_norm = MinMaxScaler().fit_transform(X)\nchi_selector = SelectKBest(chi2, k=30)\nchi_selector.fit(X_norm, y)\nchi_support = chi_selector.get_support()\nchi_feature = X.loc[:, chi_support].columns.tolist()\n","dafc79c6":"chi_feature","963a43b8":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)","b56eb1d9":"from sklearn.linear_model import LinearRegression\nreg = LinearRegression().fit(X_train,y_train)\nreg.score(X_train,y_train)\n","e1cceca7":"y_pred = reg.predict(X_test)","76546d1e":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, y_pred,squared=False)","a5d38a2e":"2. Chi Squared","32407188":"I can see that correlation and chi\u00b2 select very diferent features and a i dont know why. So I will try to run the linear regression on all the data and on the select features to see if i get any change","cecfcac2":"1. Pearson Correlation\n","8d0ad685":"3 - Quiring the data","caac8ebe":"1 - Import libraries","8bf6c44b":"2 - Importing data","021f3402":"- Testing feature selection algorithms\n1. Pearson correlation\n2. Chi-Squared\n3. Recursive Feature Elimination\n4. Lasso: SelectFromModel\n5. Tree-Base: SelectFromModel"}}