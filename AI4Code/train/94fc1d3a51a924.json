{"cell_type":{"375a2a78":"code","f481e7b1":"code","31f17d02":"code","96f11317":"code","58ad87ca":"code","91d01b59":"code","37f27796":"code","d6373e99":"code","e474a584":"code","01dfaba1":"code","eea4c916":"code","a9b06d05":"code","ed3b2ab8":"code","3aabb456":"code","5a326a68":"code","ae62d807":"code","504c0c11":"code","c351aad5":"code","85f75258":"code","71a1082d":"code","5f72d09b":"code","10e27ece":"code","0717de32":"code","84ebc7db":"code","622343a2":"code","51e3da64":"code","b6c4b68b":"code","69c1a7a7":"code","ba899076":"code","394ade5b":"code","d28e51fc":"code","66e6d6ac":"code","29407f7a":"code","047c43ce":"code","e0e8d797":"code","096fcae1":"code","eddbb5e8":"code","a6b4d0cf":"code","4a9db8e9":"code","9463c550":"code","16cf8d8a":"code","1f3c8a24":"code","995bbf04":"code","2618dcbc":"markdown","88a707ff":"markdown","b917d01d":"markdown","7e7fd4d7":"markdown","2cbde364":"markdown","58309dde":"markdown","a873774d":"markdown","fd31588a":"markdown","728e96e0":"markdown","7916d608":"markdown","f54c70eb":"markdown","25ac4e95":"markdown","02924808":"markdown","22aa9c61":"markdown","7f3420ee":"markdown","fec27281":"markdown","b64b7afe":"markdown","afaa2d3b":"markdown","9a8ea8a9":"markdown","64975ca5":"markdown","d4fcc7a5":"markdown","a10ad21e":"markdown","c235e0f7":"markdown","fa36db99":"markdown","dd035620":"markdown","b3dd1cb6":"markdown","9c8840ee":"markdown","f1656dd7":"markdown","391ac6f7":"markdown","85dd1c46":"markdown","6f0c2403":"markdown","2895fdb2":"markdown","682c26ff":"markdown","41c7f9e2":"markdown","24f77709":"markdown","86a6f944":"markdown","51e8494a":"markdown","ccaeeabf":"markdown","97811386":"markdown","426feb79":"markdown","2dda0163":"markdown","bfc35e22":"markdown","f1c78c8c":"markdown","b138215f":"markdown","d9bc7201":"markdown","e1e50bd1":"markdown","e5b33b07":"markdown"},"source":{"375a2a78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f481e7b1":"matches=pd.read_csv('\/kaggle\/input\/ipl\/matches.csv')\ndeliveries =  pd.read_csv('\/kaggle\/input\/ipl\/deliveries.csv')","31f17d02":"def name_corrections(cols):\n    val=cols[0]\n    if val=='Rising Pune Supergiant':\n        val='Rising Pune Supergiants'\n    return val","96f11317":"matches['team1']=matches[['team1']].apply(name_corrections,axis=1)\nmatches['team2']=matches[['team2']].apply(name_corrections,axis=1)\nmatches['winner']=matches[['winner']].apply(name_corrections,axis=1)\nmatches['toss_winner']=matches[['toss_winner']].apply(name_corrections,axis=1)","58ad87ca":"deliveries.columns","91d01b59":"deliveries.head(5)","37f27796":"plt.figure(figsize=(10,5))\ndeliveries['batsman'].value_counts().head(20).plot(kind='bar',title='Maximim Balls Faced')","d6373e99":"plt.figure(figsize=(10,5))\ndeliveries.groupby(by='batsman').sum().sort_values('batsman_runs',ascending=False).batsman_runs.head(20).plot(kind='bar',title='Maximim Runs Scored')","e474a584":"plt.figure(figsize=(10,5))\n\ntotal_runs=deliveries.groupby(by='batsman').sum().sort_values('batsman_runs',ascending=False).batsman_runs\ntotal_balls=deliveries.batsman.value_counts()\nstrike_rate=total_runs\/total_balls*100\nstrike_rate.name='Strike_Rate'\n#strike_rate=strike_rate.sort_values(ascending=False).head(20)\nbatsman_analysis=pd.concat([total_runs,total_balls,strike_rate],axis=1)\nbatsman_analysis=batsman_analysis[batsman_analysis['batsman']>300]\nbatsman_analysis.sort_values('Strike_Rate',ascending=False).head(20).Strike_Rate.plot(kind='bar', title='Players with Maximum Strike Rate')","01dfaba1":"plt.figure(figsize=(10,5))\n\ntotal_runs=deliveries[deliveries['over']>15].groupby(by='batsman').sum().sort_values('batsman_runs',ascending=False).batsman_runs\ntotal_balls=deliveries[deliveries['over']>15].batsman.value_counts()\nstrike_rate=total_runs\/total_balls*100\nstrike_rate.name='Strike_Rate'\n#strike_rate=strike_rate.sort_values(ascending=False).head(20)\nbatsman_analysis=pd.concat([total_runs,total_balls,strike_rate],axis=1)\nbatsman_analysis=batsman_analysis[batsman_analysis['batsman']>200]\nbatsman_analysis.sort_values('Strike_Rate',ascending=False).head(20).Strike_Rate.plot(kind='bar', title='Players with Maximum Strike Rate in the last five overs')","eea4c916":"plt.figure(figsize=(10,5))\n\ntotal_runs=deliveries[deliveries['over']<7].groupby(by='batsman').sum().sort_values('batsman_runs',ascending=False).batsman_runs\ntotal_balls=deliveries[deliveries['over']<7].batsman.value_counts()\nstrike_rate=total_runs\/total_balls*100\nstrike_rate.name='Strike_Rate'\n#strike_rate=strike_rate.sort_values(ascending=False).head(20)\nbatsman_analysis=pd.concat([total_runs,total_balls,strike_rate],axis=1)\nbatsman_analysis=batsman_analysis[batsman_analysis['batsman']>200]\nbatsman_analysis.sort_values('Strike_Rate',ascending=False).head(20).Strike_Rate.plot(kind='bar', title='Players with Maximum Strike Rate in the Powerplay')","a9b06d05":"plt.figure(figsize=(10,5))\ndeliveries['bowler'].value_counts().head(20).plot(kind='bar',title='Maximim Balls Bowled')","ed3b2ab8":"plt.figure(figsize=(10,5))\ndeliveries[deliveries['total_runs']==0].groupby(by='bowler').count().sort_values('total_runs',ascending=False).total_runs.head(20).plot(kind='bar',title='Dot Balls')","3aabb456":"plt.figure(figsize=(10,5))\ndeliveries[(pd.notnull(deliveries['dismissal_kind'])) & (deliveries['dismissal_kind']!='run out') & (deliveries['dismissal_kind']!='obstructing the field')]['bowler'].value_counts().head(20).plot(kind='bar', title='wickets')","5a326a68":"w_types=deliveries.dismissal_kind.unique()\nw=[1,2,4,5,6,8]\nw_types=[w_types[x] for x in w]\n\ntemp=deliveries[deliveries['dismissal_kind'].isin(w_types)].groupby(by=['bowler','dismissal_kind']).dismissal_kind.count().unstack(fill_value = 0)\ntemp['total']=temp.sum(axis=1)\n\ntemp=temp.sort_values('total',ascending=False).drop('total',axis=1).head(10).plot(kind='bar',figsize = (12,6),stacked=True)\nplt.xlabel(\"Bowler\")\nplt.ylabel(\"Total Wickets Taken\")\nplt.title(\"Top 10 Highest Wicket-Takers categorized by Type of Wicket Taken\")","ae62d807":"plt.figure(figsize=(10,5))\nsns.countplot(deliveries.dismissal_kind)\nplt.xticks(rotation='vertical')\nplt.title('Dismissal Type')\nplt.show()","504c0c11":"max_dismissal = pd.DataFrame(columns = [\"bowler\", \"dismissal_kind\", \"batsman\"])\nbatsmen=deliveries.batsman.unique()\nfor x in batsmen:\n    current=deliveries[deliveries['batsman']==x]\n    current=current[current['dismissal_kind'].isin(['caught','lbw','bowled','stumped','caught and bowled',\"hit wicket\"])]\n    current=current.groupby('bowler').count().sort_values(by='dismissal_kind',ascending=0).dismissal_kind[:1].reset_index()\n    current['batsman']=x\n    max_dismissal = pd.concat([max_dismissal, current], ignore_index=True)\nmax_dismissal=max_dismissal.sort_values(by='dismissal_kind',ascending=0,ignore_index=True)\nmax_dismissal=max_dismissal[[\"batsman\",\"bowler\", \"dismissal_kind\"]]\nmax_dismissal.rename(columns={'batsman': 'Batsman', 'bowler': 'Bowler', 'dismissal_kind':'Dismissed_Times'},inplace=True)\nmax_dismissal.head(10)","c351aad5":"plt.figure(figsize=(10,5))\ndeliveries.groupby(by='bowler').sum().sort_values('extra_runs',ascending=False).extra_runs.head(10).plot(kind='bar',title='Extra Runs')","85f75258":"plt.figure(figsize=(10,5))\ndeliveries[deliveries['batsman_runs']==6]['batsman'].value_counts().head(10).plot(kind='bar',title='Sixes by Player')","71a1082d":"plt.figure(figsize=(10,5))\ndeliveries[deliveries['batsman_runs']==4]['batsman'].value_counts().head(10).plot(kind='bar',title='Boundaries by Player')","5f72d09b":"plt.figure(figsize=(10,5))\ndeliveries[deliveries['batsman_runs']==6]['batting_team'].value_counts().head(10).plot(kind='bar',title='Sixes by Team')","10e27ece":"plt.figure(figsize=(10,5))\ndeliveries[deliveries['batsman_runs']==4]['batting_team'].value_counts().head(10).plot(kind='bar',title='Boundaries by Team')","0717de32":"#matches_season=matches.drop_duplicates(subset=['season'], keep='last')[['id','season']].reset_index(drop=True)\ndef insert_season(cols):\n    val=cols[0]\n    if val<=59:\n        return 2017\n    elif val<=117:\n        return 2008\n    elif val<=174:\n        return 2009\n    elif val<=234:\n        return 2010\n    elif val<=307:\n        return 2011\n    elif val<=381:\n        return 2012\n    elif val<=457:\n        return 2013\n    elif val<=517:\n        return 2014\n    elif val<=576:\n        return 2015\n    else:\n        return 2016\ndeliveries['season']=deliveries[['match_id']].apply(insert_season,axis=1)","84ebc7db":"deliveries[deliveries['batsman_runs']==6].groupby(by='season').count()['batsman_runs'].plot(kind='line',title='Sixes per Season')","622343a2":"deliveries[deliveries['batsman_runs']==4].groupby(by='season').count()['batsman_runs'].plot(kind='line',title='Boundaries per Season')","51e3da64":"sixes_season=deliveries[deliveries['batsman_runs']==6].groupby(by='season').count()['batsman_runs']\nsixes_season.name='Total_Sixes'\nmatches_season=matches['season'].value_counts(sort=False)\nmatches_season.name='Total_Matches'\navg_sixes_season=sixes_season\/matches_season\nplt.plot(avg_sixes_season.index,avg_sixes_season)","b6c4b68b":"temp=deliveries[deliveries['batsman_runs']==6].groupby(['season','match_id'])['batsman_runs'].count()\ntemp.name='Sixes'\ndf=pd.DataFrame(temp)\ndf.reset_index(inplace=True)\nplt.figure(figsize=(12,5))\nsns.boxplot(x=df.season,y=df.Sixes)\nplt.title(\"Season wise Comparision of sixes in a match \")\nplt.show()","69c1a7a7":"temp=deliveries[(deliveries['batsman_runs']==6) & (deliveries['inning']<3)].groupby(['season','match_id','inning'])['batsman_runs'].count()\ntemp=pd.DataFrame(temp)\ntemp.reset_index(inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.boxplot(temp.season,temp.batsman_runs,hue=temp.inning)\nplt.title(\"Season wise Comparision of sixes in first and second innings \")\nplt.show()","ba899076":"temp=deliveries[deliveries['batsman_runs']==4].groupby(['match_id','season'])['batsman_runs'].count()\ntemp.name='fours'\ntemp=pd.DataFrame(temp)\ntemp.reset_index(inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.boxplot(temp.season,temp.fours)\nplt.title(\"Season wise Comparision of fours in a match \")\nplt.show()","394ade5b":"temp=deliveries[(deliveries['batsman_runs']==4) & (deliveries['inning']<3)].groupby(['season','match_id','inning'])['batsman_runs'].count()\ntemp=pd.DataFrame(temp)\ntemp.reset_index(inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.boxplot(temp.season,temp.batsman_runs,hue=temp.inning)\nplt.title(\"Season wise Comparision of fours in first and second innings \")\nplt.show()","d28e51fc":"temp=deliveries.groupby(['match_id','season'])['total_runs'].sum()\ntemp=pd.DataFrame(temp)\ntemp.reset_index(inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.boxplot(temp.season,temp.total_runs)\nplt.title(\"Season wise Comparision of runs in a match \")\nplt.show()","66e6d6ac":"temp=deliveries[deliveries['inning']<3].groupby(['match_id','season','inning'])['total_runs'].sum()\ntemp=pd.DataFrame(temp)\ntemp.reset_index(inplace=True)\n\nplt.figure(figsize=(12,5))\nsns.boxplot(temp.season,temp.total_runs,hue=temp.inning)\nplt.title(\"Season wise Comparision of runs in first and second innings \")\nplt.show()","29407f7a":"matches.head()","047c43ce":"sns.countplot(matches['season'])","e0e8d797":"sns.countplot(matches['season'],hue=matches['toss_decision'])","096fcae1":"temp_series = matches.toss_decision.value_counts()\nlabels = (np.array(temp_series.index))\nsizes = (np.array((temp_series \/ temp_series.sum())*100))\ncolors = ['gold', 'lightskyblue']\nplt.pie(sizes, labels=labels, colors=colors,\n        autopct='%1.1f%%', shadow=True, startangle=90)\nplt.title(\"Toss decision percentage\")\nplt.show()","eddbb5e8":"winner_count=len(matches[matches['winner']==matches['toss_winner']].index)\ntotal_count=len(matches.index)\nwinner_percentage=winner_count\/total_count*100\nlosers_percentage=100-winner_percentage\ncolors = ['gold', 'lightskyblue']\nlabels=np.array(['Win','Loss'])\nplt.pie(np.array([winner_percentage,losers_percentage]),labels=labels,autopct='%1.1f%%', colors=colors,shadow=True,startangle=90)\nplt.title(\"Toss Winning vs Match Winning Percentage\")\nplt.show()","a6b4d0cf":"plt.figure(figsize=(10,5))\nmatches['player_of_match'].value_counts().head(20).plot(kind='bar')","4a9db8e9":"plt.figure(figsize=(10,5))\n(matches['team1'].value_counts()+matches['team1'].value_counts()).plot(kind='bar')","9463c550":"plt.figure(figsize=(10,5))\nmatches['winner'].value_counts().plot(kind='bar')","16cf8d8a":"plt.figure(figsize=(10,5))\n(matches['winner'].value_counts()\/(matches['team1'].value_counts()+matches['team1'].value_counts())*100).plot(kind='bar')","1f3c8a24":"venues=matches['venue'].unique()\nfor x in venues:\n    plt.figure(figsize=(15,5))\n    sns.countplot(x=matches[matches['venue']==x]['venue'], hue='winner', data=matches)\n    plt.ylabel('Number of matches')\n    #plt.xticks(rotation=90)\n    plt.xlabel('Venue')\n    plt.title('Venue V\/s matches won',size=50, fontweight=\"bold\")\n    plt.show()","995bbf04":"matches.drop_duplicates(subset=['season'], keep='last')[['season', 'winner']].reset_index(drop=True)","2618dcbc":"# Insights:\n1) Among Indians Harbhajan Singh is the most preferred bowler. \n2) Among Overseas players SL Malinga is the most preferred bowler.\n3) Out of first 20 bowlers, 14 are Indian bowlers.\n","88a707ff":"# Dataset: Matches Graph No.: 5\n**Top 20 Players with most man of the matches awards**","b917d01d":"# I would like to request viewers to give Insigts of remaining graph through comments.","7e7fd4d7":"# Dataset: Deliveries Graph No.: 14\n\n**If CH  Gayle is the sixer king then G Gambhir is the master of finding gaps**","2cbde364":"# **Insights:**\n1) First six players in this list are Indians.\n2) Out of first 10 batsmen who have faced maximum balls, 8 are Indian players.\n3) Out of first 20 batsmen who have faced maximum balls, 15 are Indian players.**","58309dde":"# Dataset: Deliveries Graph No.: 7\n\n**Top 20 Bowlers with maximum dot balls**","a873774d":"# Dataset: Deliveries Graph No.: 12\n\n**Giving runs for free to opponent is really a weakness of some bowlers**","fd31588a":"# Dataset: Deliveries Graph No.: 9\n\n**Top 20 Bowlers with maximum wickets along with dismissal kind**","728e96e0":"# **Insights:**\n1) In the powerplay, among indian palyers YK Pathan tops the list.\n2) In the powerplay, among overseas palyers F du Plessis tops the list.\n3) DA Warner, SK Raina and YK Pathan appears in all above five graphs. ","7916d608":"# Dataset: Matches Graph No.: 3\n**Following Pie chart shows percentage of selecting bowling and batting after winning the toss**","f54c70eb":"# Dataset: Deliveries Graph No.: 25\n**Finally its time to see average runs in a inning season wise**","25ac4e95":"# **Insights:**\n1) Among indian players V Kohli(Run Machine of India) and RG Sharma(Hitman of India) are batsmen with best strike rates in death overs. \n2) AB de Villiers is the most destructive batsmen in the death overs.\n3) AB de villiers,DA Warner, MS Dhoni, SK Raina and YK Pathan appears in all above four graphs.","02924808":"# Dataset: Deliveries Graph No.: 17\n\n**Lets find out the season with most sixes**","22aa9c61":"# Dataset: Deliveries Graph No.: 4\n**Top 20 Batsmen with maximum strike rate (in the last five overs and played atleast 200 balls)**","7f3420ee":"# Insights:\n1) P Kumar tops the list here.\n2) Many players are common in the lists Maximum balls bowled and the bowlers with maximum dots.","fec27281":"# Dataset: Matches Graph No.: 7\n**Following graph shows total number of matches won by each team**","b64b7afe":"# Dataset: Matches Graph No.: 4\n**Following Pie chart shows percentage of winning the match vs winning the toss**","afaa2d3b":"# Dataset: Matches Graph No.: 10\n**Following Table shows final winner of particular season**","9a8ea8a9":"# Dataset: Deliveries Graph No.: 15\n\n**Lets find out the team likes to hit sixes**","64975ca5":"# Dataset: Matches Graph No.: 2\n**Following graph shows toss selection season wise**","d4fcc7a5":"# Dataset: Deliveries Graph No.: 20\n**Lets have better look at sixes per match season wise **","a10ad21e":"# **Insights:**\n1) First four players in this list are Indians.\n2) Another importan conclusion here is first four batsmen are common in lists batsmen with maximum ball faced  and batsmen with maximum runs scored (order is different).\n3) The strike rate of DA Warner has to be better than as that of S Dhawan and RV Uthappa.","c235e0f7":"# Dataset: Deliveries Graph No.: 18\n\n**Lets find out the season with most boundries**","fa36db99":"# Dataset: Matches Graph No.: 1\n**Number of matches season wise**","dd035620":"# Lets move on to the second data set we have i.e. matches.csv","b3dd1cb6":"# Dataset: Deliveries Graph No.: 2\n**Top 20 batsmen with maximum runs**","9c8840ee":"**As in the dataset there are two names for the team Rising Pune Supergiant one with s at the end and another without s at the end. So following function is defined to convert the name to one. Function name_correction will append s to all occurance of name of the team without s at the end in the given column. After defining the function, four columns are passed to the function one by one as given below.**","f1656dd7":"# Dataset: Deliveries Graph No.: 16\n\n**Lets find out the team likes to find gaps**","391ac6f7":"# Dataset: Deliveries Graph No.: 21\n**Lets have better look at sixes per inning season wise**","85dd1c46":"# Dataset: Deliveries Graph No.: 10\n\n**Share of each dismissal kind in total wickets**","6f0c2403":"# Dataset: Matches Graph No.: 8\n**Following graph shows wining percentage of each team**","2895fdb2":"# Dataset: Deliveries Graph No.: 5\n\n**Top 20 Batsmen with maximum strike rate (in the first six overs and played atleast 200 balls)**","682c26ff":"# Insights:\n1) SL Malinga tops the list here.\n2) There is huge difference between wicket taken by the SL Maling and A mishra who is second in the list.","41c7f9e2":"# Dataset: Matches Graph No.: 6\n**Following graph shows total number of matches played by each team**","24f77709":"# Insights:\n1) The total number of wickets taken by SL Malinga with dismissal kind Bowled and Caught are more than total wickets taken by A Mishra. ","86a6f944":"# Dataset: Deliveries Graph No.: 23\n**Lets have better look at fours per inning season wise**","51e8494a":"# Dataset: Deliveries Graph No.: 24\n**Now its time to see average runs in a match season wise**","ccaeeabf":"# Dataset: Deliveries Graph No.: 8\n\n**Top 20 Bowlers with maximum wickets**","97811386":"# Dataset: Matches Graph No.: 9\n**Following graph shows number matches won by each team at particular venue**","426feb79":"# Dataset: Deliveries Graph No.: 11\n\n**Few bowlers had caused lot of troubles to some of the selected batsmen**","2dda0163":"# **Insights:**\n1) One of the important insight here is Out of 20 players, 13 players are oversea players.\n2) Another importan insight here is only three Indian players i.e. YK Pathan, SK Raina and MS Dhoni are indian players who are common in the lists Maximum ball played, Maximum runs scored and Maximum strike rate. ","bfc35e22":"# Dataset: Deliveries Graph No.: 13\n\n**Lets find out who is the sixer king**","f1c78c8c":"# Dataset: Deliveries Graph No.: 22\n**Lets have better look at fours per match season wise **","b138215f":"# Dataset: Deliveries Graph No.: 6\n***Now Lets talk about the bowlers:***\n**Top 20 Bowlers with maximum balls bowled**","d9bc7201":"# Dataset: Deliveries Graph No.: 19\n\n**Lets find out the season having best average sixes per match**","e1e50bd1":"# Dataset: Deliveries Graph No.: 1\n**The following bar graph shows Maximim Balls Faced by batsmen**","e5b33b07":"# Dataset: Deliveries Graph No.: 3\n**Top 20 Batsmen with maximum strike rate (played atleast 300 balls)**"}}