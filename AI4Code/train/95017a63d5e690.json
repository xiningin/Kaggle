{"cell_type":{"fdd6ddda":"code","09cd4ef6":"code","8536eaae":"code","14e6622a":"code","b25b1955":"code","28aab97c":"code","e81eef24":"code","2b937207":"code","8d26ec28":"code","94983957":"code","9e744928":"code","07ca8094":"code","1d7c1d91":"code","4c162711":"code","08755f4d":"code","9c36022e":"code","1caf156b":"code","9a8968cd":"code","26484472":"code","3d3d7a2a":"markdown"},"source":{"fdd6ddda":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split","09cd4ef6":"data = pd.read_csv('..\/input\/online-shoppers-intention\/online_shoppers_intention.csv')\ndata.head()","8536eaae":"data.info()","14e6622a":"data.isna().sum()","b25b1955":"# Missing value handling\ndata[data.isna().sum(axis=1).astype(bool)]","28aab97c":"# these entries are not reliable to use so we will drop them.\ndata = data.dropna(axis=0).reset_index(drop = True)\ndata","e81eef24":"print('total missing values: ', data.isna().sum().sum())","2b937207":"# encoding categorical features\n{column: list(data[column].unique()) for column in data.columns if data.dtypes[column] == 'object'}","8d26ec28":"pd.get_dummies(data['VisitorType'])","94983957":"def ord_encode(df,column,ordering):\n    df = df.copy()\n    df[column] = df[column].apply(lambda x: ordering.index(x))\n    return df\ndef one_hot_encode(df,column,prefix):\n    df=df.copy()\n    dummies = pd.get_dummies(df[column],prefix=prefix)\n    df = pd.concat([df,dummies],axis=1)\n    df=df.drop(column,axis=1)\n    return df","9e744928":"month_order = ['Jan','Feb','Mar','Apr','May','June','Jul','Aug','Sep','Oct','Nov','Dec']\nvisitor_prefix= 'V'\n","07ca8094":"data = ord_encode(data,'Month',month_order)\ndata = one_hot_encode(data,'VisitorType',visitor_prefix)","1d7c1d91":"data['Weekend'] = data['Weekend'].astype(np.int)\ndata['Revenue'] = data['Revenue'].astype(np.int)","4c162711":"data.head()","08755f4d":"y=data['Revenue']\nX=data.drop('Revenue',axis=1)","9c36022e":"scaler = StandardScaler()\nX = scaler.fit_transform(X)","1caf156b":"X_train,X_test,y_train,y_test = train_test_split(X ,y, train_size=0.7,random_state=20)","9a8968cd":"models = []\nCs = [0.01, 0.1, 1.0, 10.0, 100.0, 1000.0, 10000.0]\n\nfor i in range(len(Cs)):\n    model = LogisticRegression(C=Cs[i])\n    model.fit(X_train, y_train)\n    models.append(model)","26484472":"model_acc = [model.score(X_test, y_test) for model in models]\n\nprint('Model Accuracy (C={Cs[0]}):', model_acc[0])\nprint('Model Accuracy (C={Cs[0.1]}):', model_acc[1])\nprint('Model Accuracy (C={Cs[1.0]}):', model_acc[2])\nprint('Model Accuracy (C={Cs[10.0]}):', model_acc[3])\nprint('Model Accuracy (C={Cs[100.0]}):', model_acc[4])\nprint('Model Accuracy (C={Cs[1000.0]}):', model_acc[5])\nprint('Model Accuracy (C={Cs[10000.0]}):', model_acc[6])","3d3d7a2a":"#  preprocessing"}}