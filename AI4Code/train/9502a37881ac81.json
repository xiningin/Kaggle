{"cell_type":{"fe9a9462":"code","2bcf66ba":"code","7a6e9739":"code","b1a45af8":"code","60cdcd31":"code","3bcc9119":"code","fa6677b4":"code","1a6b9557":"code","da33a9c0":"code","e6d78c44":"code","7ef289e2":"code","2dcf6c48":"code","d0228687":"code","8085f763":"code","27633f4b":"code","b808eebf":"code","c47aab7f":"code","c33f567a":"code","521a2029":"code","0204329f":"code","bb33be16":"code","ffaf6d1a":"code","cf98dafb":"code","1fb3e270":"code","978e0f03":"code","a5cec483":"code","ebc36ec2":"code","a72ee339":"code","63f38cda":"code","76fa94f7":"code","6dd703a4":"code","472f0afd":"code","abaa42ff":"code","59ba4d72":"code","de62e095":"code","ea5736f3":"code","c086217c":"code","7facf82c":"code","9e9eeb28":"code","de66b066":"code","ce2391d2":"code","e27a2b86":"code","8927b7fe":"code","5493c9ff":"code","532dc829":"code","ed71f2da":"code","040776f2":"code","1839517b":"code","63533bca":"code","fd9e27ba":"code","1c68d5ae":"code","1f3b1a0e":"code","74d3a2d9":"code","12a416ca":"code","a4ba30cc":"code","4aa3157c":"code","d9476c90":"code","5bbf0a12":"code","4dc8a457":"code","d61b1b84":"code","25f64010":"code","67b3e2b3":"code","8aade0b9":"code","dd009254":"code","f21f2d83":"code","889b17ea":"code","13f91c6d":"code","6d806b80":"code","3119cc83":"markdown","523679dc":"markdown","2e139e47":"markdown","fd87d398":"markdown","ad6201fe":"markdown","95c141c1":"markdown","88bb50ff":"markdown","2f20a3f6":"markdown","58226aa2":"markdown","149fa6b1":"markdown","7827bf82":"markdown","7ca88ba5":"markdown","67d4e4c3":"markdown","76c8df1f":"markdown","f54f0e85":"markdown","92f77f77":"markdown","d6eb4a13":"markdown","eca667cf":"markdown","b8247c85":"markdown","0f104eff":"markdown","26453354":"markdown","74556040":"markdown","df07a3b6":"markdown","e06d084c":"markdown","a1f0a78e":"markdown","398fa267":"markdown","cc617891":"markdown","7f481c90":"markdown","61d2c362":"markdown","b5c10e91":"markdown","bc27c8b3":"markdown","2824661b":"markdown","5bfc58f9":"markdown","f5b56d77":"markdown","ac2c6e84":"markdown","ea597c7e":"markdown","9372852f":"markdown","eb3bcc71":"markdown","d794e43f":"markdown","c3eb9dff":"markdown","e82af00a":"markdown","da4f17e4":"markdown","a227799c":"markdown","b503b1d4":"markdown","3e2e2443":"markdown","5844a913":"markdown","59fa2b36":"markdown","e4860533":"markdown","0e7351a3":"markdown","1b0b848f":"markdown","74e08d63":"markdown","d07b95d8":"markdown","32a05c45":"markdown","a29b0bcb":"markdown","4b1619b3":"markdown","84f572ef":"markdown","dd3d2a74":"markdown"},"source":{"fe9a9462":"%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport missingno as mno\nimport seaborn as sns\nimport pandas as pd","2bcf66ba":"sns.set_theme(style=\"darkgrid\")","7a6e9739":"df = pd.read_csv(\"..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")","b1a45af8":"df.shape","60cdcd31":"df.head()","3bcc9119":"df.info()","fa6677b4":" df.isnull().sum()","1a6b9557":"numerical_cols = df.columns[df.dtypes != object]","da33a9c0":"numerical_cols","e6d78c44":"categorical_cols = df.columns[df.dtypes == object]","7ef289e2":"categorical_cols","2dcf6c48":"def draw_histplot_for_numerical_cols():\n    dataset = df.copy()\n    fig, axes = plt.subplots(1, len(numerical_cols), figsize=(36, 5))\n    row_idx = 0\n    for col in numerical_cols:\n        sns.histplot(x=col, data=dataset, ax = axes[row_idx])\n        row_idx += 1\n    plt.show()","d0228687":"draw_histplot_for_numerical_cols()","8085f763":"def plot_grouped_data(feature):\n    dataset = df.copy()\n    grouped_dataset = df.groupby(feature)['id'].agg({'count'}).reset_index()\n    sns.barplot(y='count', x = feature, data=grouped_dataset)\n    plt.show()\n    ","27633f4b":"df.groupby('hypertension')['hypertension'].count().apply(lambda x: x* 100\/ len(df))","b808eebf":"plot_grouped_data('hypertension')","c47aab7f":"df.groupby('heart_disease')['heart_disease'].count().apply(lambda x: x* 100\/ len(df))","c33f567a":"plot_grouped_data('heart_disease')","521a2029":"df.groupby('stroke')['stroke'].count().apply(lambda x: x* 100\/ len(df))","0204329f":"plot_grouped_data('stroke')","bb33be16":"def draw_count_plot_for_categorical_feature():\n    dataset = df.copy()\n    fig, axes = plt.subplots(1, len(categorical_cols), figsize=(36, 5))\n    row_idx = 0\n    for col in categorical_cols:\n        sns.countplot(x=col, data=dataset, ax = axes[row_idx])\n        row_idx += 1\n    plt.show()","ffaf6d1a":"draw_count_plot_for_categorical_feature()","cf98dafb":"sns.pairplot(df.iloc[: , 1:-1])","1fb3e270":"sns.histplot(x ='age', data=df, bins = 10, hue = 'heart_disease', multiple=\"stack\")","978e0f03":"sns.histplot(x ='age', data=df, bins = 10, hue = 'hypertension', multiple=\"stack\")","a5cec483":"sns.lineplot(x ='age', data=df, y = 'avg_glucose_level')","ebc36ec2":"sns.lineplot(x ='age', data=df, y = 'bmi')","a72ee339":"def relate_age_and_categorical_cols():\n    dataset = df.copy()\n    fig, axes = plt.subplots(1, len(categorical_cols), figsize=(36, 5))\n    for idx, col in enumerate(categorical_cols):\n        sns.histplot(x ='age', data=dataset, bins = 10, hue = col, multiple=\"stack\", ax = axes[idx])\n    plt.show()","63f38cda":"relate_age_and_categorical_cols()","76fa94f7":"def is_a_cause_of_stroke(feature):\n    dataset = df.copy()\n    grouped_df = dataset.groupby([feature, 'stroke'])['id'].agg({'count'}).reset_index()\n    grouped_df['percentage_count'] = grouped_df.groupby(feature)['count'].apply(lambda x: 100 * x \/ x.sum())\n    return grouped_df","6dd703a4":"is_a_cause_of_stroke('hypertension')","472f0afd":"is_a_cause_of_stroke('heart_disease')","abaa42ff":"is_a_cause_of_stroke('smoking_status')","59ba4d72":"is_a_cause_of_stroke('gender')","de62e095":"is_a_cause_of_stroke('work_type')","ea5736f3":"is_a_cause_of_stroke('Residence_type')","c086217c":"is_a_cause_of_stroke('ever_married')","7facf82c":"corr = df.iloc[:, 1:].corr()\ncorr","9e9eeb28":"df.isnull().sum()","de66b066":"sns.histplot(x='bmi', data=df)","ce2391d2":"df['bmi'] = df['bmi'].fillna(df['bmi'].mean())","e27a2b86":"df.isnull().sum()","8927b7fe":"categorical_cols","5493c9ff":"def encode_categorical_cols_using_one_hot_encoding():\n    dataset = df.copy()\n    return pd.get_dummies(data=dataset, columns=categorical_cols)","532dc829":"encoded_df = encode_categorical_cols_using_one_hot_encoding()","ed71f2da":"encoded_df.columns","040776f2":"encoded_df.head()","1839517b":"grouped_df = df.groupby('stroke')['id'].agg({'count'}).reset_index()\ngrouped_df['percentage'] = grouped_df['count'].apply(lambda x: x * 100 \/ len(df))\ngrouped_df","63533bca":"from sklearn.preprocessing import StandardScaler\n\ndef scale_dataset(df):\n    dataset = df.copy()\n    dataset.drop(['stroke'], axis = 1, inplace = True)\n    scaler = StandardScaler()\n    return pd.DataFrame(scaler.fit_transform(dataset),columns = dataset.columns)","fd9e27ba":"# Scaling Ecoded dataset\nscaled_X = scale_dataset(encoded_df)","1c68d5ae":"corr = scaled_X.corr().round(3)","1f3b1a0e":"corr","74d3a2d9":"plt.figure(figsize=(20,15))\nsns.heatmap(corr, vmin=-1, vmax=1, annot=True)","12a416ca":"from sklearn.linear_model import Lasso\nfrom sklearn.feature_selection import SelectFromModel","a4ba30cc":"scaled_X.columns","4aa3157c":"scaled_X.drop('id', inplace=True, axis=1)","d9476c90":"dataset = scaled_X.copy()\nY = df['stroke']\nX = dataset","5bbf0a12":"feature_sel_model = SelectFromModel(Lasso(alpha=0.005, random_state = 0))\nfeature_sel_model.fit(X, Y)","4dc8a457":"feature_sel_model.get_support()","d61b1b84":"selected_features = X.columns[(feature_sel_model.get_support())]","25f64010":"selected_features","67b3e2b3":"from sklearn.metrics import confusion_matrix, classification_report,accuracy_score, precision_recall_fscore_support\nfrom sklearn.model_selection import StratifiedKFold\nfrom imblearn.over_sampling import SMOTE, RandomOverSampler","8aade0b9":"skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=1)\nsmt = RandomOverSampler(random_state=12)\ndef apply_stratified_k_fold_validation( model, x = X[selected_features], y = Y ):\n    fig, axes = plt.subplots(1, 5, figsize=(36, 5))\n    exp = 0\n    for train_index, test_index in skf.split(x , y):\n        x_train_fold, x_test_fold = x.iloc[train_index.tolist()], x.iloc[test_index.tolist()]\n        y_train_fold, y_test_fold = y.iloc[train_index.tolist()], y.iloc[test_index.tolist()]\n        X_train_res, y_train_res = smt.fit_resample(x_train_fold, y_train_fold)\n        model.fit(X_train_res, y_train_res)\n        y_pred_fold = model.predict(x_test_fold)\n        print(\"Experiment:\", exp)\n        print(\"Classification Report\")\n        print(classification_report(y_test_fold, y_pred_fold))\n        print(\"Confusion Matrix\")\n        mat = confusion_matrix(y_test_fold, y_pred_fold)\n        print(\"True Postive:\", mat[0][0])\n        print(\"True Negative:\", mat[1][1])\n        print(\"False Postive:\", mat[0][1])\n        print(\"False Negative:\", mat[1][0])\n        print(\"\\n\")\n        sns.countplot(x=y_pred_fold, ax= axes[exp])\n        plt.title(\"Experiment \"+ str(exp))\n        exp += 1    \n","dd009254":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\napply_stratified_k_fold_validation(model)","f21f2d83":"from sklearn import tree\n\nmodel = tree.DecisionTreeClassifier()\napply_stratified_k_fold_validation(model)","889b17ea":"from xgboost import XGBClassifier\nmodel = XGBClassifier(max_depth=12,random_state = 42, use_label_encoder =False)\napply_stratified_k_fold_validation(model)","13f91c6d":"from sklearn.naive_bayes import GaussianNB\n\nmodel = GaussianNB()\napply_stratified_k_fold_validation(model)","6d806b80":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(random_state=0)\napply_stratified_k_fold_validation(model)","3119cc83":"**90% of polulation do not have hypertension.**","523679dc":"There are no higly correlated columns. So there is less chance of overfitting.","2e139e47":"### For Categorical Column","fd87d398":"- BMI initially increase with age, then it starts to decrease after 50.","ad6201fe":"### Does hypertension is a cause of Stroke?","95c141c1":"# Model Selction with Cross Validation","88bb50ff":"### Find out which age group has higher BMI","2f20a3f6":"### Find out which age group has more hypertension","58226aa2":"## Decision Tree","149fa6b1":"Below observation can be made:\n- Self-Employed people have highest chance of stroke.\n- Population who never worked did not had stroke.\n- Private sector population is at 2nd number.","7827bf82":"Below observation can be made:\n- Population with no hypertension have less chance of getting stroke than population with hypertension.","7ca88ba5":"Below observation can be made:\n- There are more female in each age group.\n- Population above 20 are married, and population greater than 40 have most married people.\n- Population above 20, mostly work in private sector.\n- Population have equal number of people from rural and urban.\n- Population above 20 have fair amount of people who smokes.\n- There are more people above 20 who never smoked.\n- More people have quit smoking after 40.","67d4e4c3":"**We can also see that data is higly imbalance.**","76c8df1f":"We can see that our dataset is higly imbalance, as it contains 95% of value as 0 and only 5% of value as 1. We can use Random Undersampling, Random Oversampling and SMOTE to create a banace dataset.","f54f0e85":"We can see that age, average glucose level and BMI has higher values than other columns, so we need to scale them. ","92f77f77":"- Average glucose level is increasing with age.","d6eb4a13":"Below observation can be made:\n- Population who used to smoke has less chance of stroke.\n- Population who smokes has less chance of stroke.\n- Population who never smoked has less chance of stroke.\n- Population who used to smoke has more chance of stroke when compared with smoker and non-smokers(never smoked).","eca667cf":"Each experiment only predicted __0__ with high accuracy not __1's__. However, out of all models, Logistics Regression performs well.","b8247c85":"- Population below 40 has almost no heart disease.\n- Population between 70 to 80 has most hear disease.","0f104eff":"## BiVariate Analysis","26453354":"Only bmi has missing values.","74556040":"### FInd out which age group has more heart disease","df07a3b6":"**94% of population do not have heart disease.**","e06d084c":"### Does Smoking cause stroke?","a1f0a78e":"# Feature Selection","398fa267":"## Random Forest Classifier","cc617891":"# Feature Engineering","7f481c90":"### Which gender has high chance of stroke?","61d2c362":"### Find out which age group has high average glucose level","b5c10e91":"- *This problem is a classification problem with an imbalanced dataset. So we can use Recall (True Positive Rate), Precision, and F1 Score as performance metrics.*\n- *We need to focus more on predicting stroke rather than predicting that person will not have a stroke because if a person expected to have a stroke. If he is not going to have a stroke, then a person can take further tests and medicines, but if a person is going to have a stroke, our model predicted as NO, then it can cause disaster. Hence we need to reduce the False Negative value. __Therefore Recall should be used as a metric.__*\n- *Although predicting stroke is more important, there may be a scenario where is person is predicted to have stroke and it is a false positive, and the person start taking medication and those meidcation starts effecting him\/her adversly. Therefore we should avoid predicting stroke, if a person is not supposed to have one. __Hence Precision is also important.__*\n- *Since both Recall and Precision are important, therefore __we will also be using F1 Score.__*\n\n#### Using above explaination, following metrics will be used for performace metrics\n- Recall\n- Precision\n- F1 Score","bc27c8b3":"## Logistics Regression","2824661b":"## Imputing missing numerical values","5bfc58f9":"Below observation can be made:\n- Population with no heart disease have less chance of getting stroke than population with heart disease.","f5b56d77":"It follows almost normal gaussian distribution, and it has no outliers. So, **mean can be used to imputer missing values.**","ac2c6e84":"Below observtion can be made:\n- Age is most responsible for Stroke.\n- BMI is lease responsible for stroke.","ea597c7e":"Below observation can be made:\n- Married people have high chance of stroke.","9372852f":"### Effect of resisdence on stroke.","eb3bcc71":"Below observations can be made:\n- Most people are from either age 40 or age 80.\n- Mostly all people do not have hypertension.\n- Mostly all people do not have heart disease.\n- Most population has avergae glucose level less than 180.\n- Almost all population has BMI less than 60.\n- Most people did not had stroke.\n\n**We have seen that BMI has missing value, and it follows almost normal trend (slightly right skewed), we can use mean to fill missing values.**","d794e43f":"### Numerical columns","c3eb9dff":"Below observation can be made:\n- Population living in Urban have more chance of stroke.","e82af00a":"## Univariate Analysis","da4f17e4":"Below observation can be made:\n- Men have more chance of stroke than Female.","a227799c":"### Scaling Dataset","b503b1d4":"### Relation between age and categorical columns","3e2e2443":"### Effect of marriage on stroke.","5844a913":"### Pearson Correlation","59fa2b36":"- Population below 20 do not have hypertension.\n- Population between 20 and 30 have few peoples with hypertension.\n- Population with age greater than 50 have more people with hypertension","e4860533":"## Encoding categorical columns","0e7351a3":"## XGBoost Classifier","1b0b848f":"## Naive Bayes Classifier","74e08d63":"### Does heart disease is a cause of stroke?","d07b95d8":"**95% of population did not had storke.**","32a05c45":"# Dataset Analysis","a29b0bcb":"# Import Packages","4b1619b3":"We will be performing univariate analysis for numerical and categorical columns separately.","84f572ef":"Below observation can be made:\n- There are more female than males.\n- There are more married people.\n- More People work in Private sector.\n- There equal number of people from rural and urban.\n- Most people haven't smoked.","dd3d2a74":"### Using Lasso Regression"}}