{"cell_type":{"43d1a0f8":"code","28ebb3f1":"code","9dfbcc58":"code","0d1c868c":"code","97839c08":"code","494b96ea":"code","6a8b00c7":"code","c175e4e5":"code","5a848267":"code","78097876":"code","664d0e7b":"code","60a38ac4":"code","fd3c9998":"code","68a4f093":"code","ead4a7f1":"code","56299606":"code","4bcf08e9":"code","4751a1e4":"code","6774de77":"code","db5e2d0a":"code","18207c3d":"code","129bb5b0":"code","1c727bd1":"code","f5f0988e":"code","58e6b0cd":"code","e19985d7":"code","9ea40da4":"code","5576893a":"markdown","72854210":"markdown","6e0938d3":"markdown","f0f2563b":"markdown","ed4f8d77":"markdown","45463114":"markdown","2cafc9a4":"markdown","096b294a":"markdown","9e2c4377":"markdown"},"source":{"43d1a0f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","28ebb3f1":"df=pd.read_csv(\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","9dfbcc58":"df.head()","0d1c868c":"df.info()","97839c08":"df.describe()","494b96ea":"df.rename(columns={'Annual Income (k$)':'Income','Spending Score (1-100)':'SpendScore'},inplace=True)","6a8b00c7":"df.head()","c175e4e5":"sns.pairplot(df)","5a848267":"df=df.drop(['CustomerID'],axis=1)","78097876":"df.head()","664d0e7b":"sns.heatmap(df.corr())","60a38ac4":"plt.figure(figsize=(7,7))\nsize=df['Gender'].value_counts()\nlabel=['Female','Male']\ncolor=['Pink','Blue']\nexplode=[0,0.1]\nplt.pie(size,explode=explode,labels=label,colors=color,shadow=True)\nplt.legend()\nplt.show()","fd3c9998":"plt.figure(figsize=(10,5))\nsns.countplot(df['Age'])\nplt.xticks(rotation=90)","68a4f093":"sns.boxplot(df['Gender'],df['SpendScore'])","ead4a7f1":"plt.figure(figsize=(15,5))\nsns.countplot(df['Income'])\n","56299606":"plt.bar(df['Income'],df['SpendScore'])\nplt.title('Spendscore over income',fontsize=20)\nplt.xlabel('Income')\nplt.ylabel('Spendscore')","4bcf08e9":"df.head()","4751a1e4":"x=df.iloc[:,[2,3]].values","6774de77":"x.shape","db5e2d0a":"from sklearn.cluster import DBSCAN\ndb=DBSCAN(eps=3,min_samples=4,metric='euclidean')","18207c3d":"model=db.fit(x)","129bb5b0":"label=model.labels_","1c727bd1":"label","f5f0988e":"from sklearn import metrics\n\n#identifying the points which makes up our core points\nsample_cores=np.zeros_like(label,dtype=bool)\n\nsample_cores[db.core_sample_indices_]=True\n\n#Calculating the number of clusters\n\nn_clusters=len(set(label))- (1 if -1 in label else 0)\nprint('No of clusters:',n_clusters)","58e6b0cd":"y_means = db.fit_predict(x)\nplt.figure(figsize=(7,5))\nplt.scatter(x[y_means == 0, 0], x[y_means == 0, 1], s = 50, c = 'pink')\nplt.scatter(x[y_means == 1, 0], x[y_means == 1, 1], s = 50, c = 'yellow')\nplt.scatter(x[y_means == 2, 0], x[y_means == 2, 1], s = 50, c = 'cyan')\nplt.scatter(x[y_means == 3, 0], x[y_means == 3, 1], s = 50, c = 'magenta')\nplt.scatter(x[y_means == 4, 0], x[y_means == 4, 1], s = 50, c = 'orange')\nplt.scatter(x[y_means == 5, 0], x[y_means == 5, 1], s = 50, c = 'blue')\nplt.scatter(x[y_means == 6, 0], x[y_means == 6, 1], s = 50, c = 'red')\nplt.scatter(x[y_means == 7, 0], x[y_means == 7, 1], s = 50, c = 'black')\nplt.scatter(x[y_means == 8, 0], x[y_means == 8, 1], s = 50, c = 'violet')\nplt.xlabel('Annual Income in (1k)')\nplt.ylabel('Spending Score from 1-100')\nplt.title('Clusters of data')\nplt.show()\n\n","e19985d7":"import scipy.cluster.hierarchy as sch\n\ndendrogram = sch.dendrogram(sch.linkage(x, method = 'ward'))\nplt.title('Dendrogam', fontsize = 20)\nplt.xlabel('Customers')\nplt.ylabel('Ecuclidean Distance')\nplt.show()","9ea40da4":"from sklearn.cluster import AgglomerativeClustering\n\nhc = AgglomerativeClustering(n_clusters = 9, affinity = 'euclidean', linkage = 'ward')\ny_hc = hc.fit_predict(x)\n\nplt.scatter(x[y_hc == 0, 0], x[y_hc == 0, 1], s = 50, c = 'pink')\nplt.scatter(x[y_hc == 1, 0], x[y_hc == 1, 1], s = 50, c = 'yellow')\nplt.scatter(x[y_hc == 2, 0], x[y_hc == 2, 1], s = 50, c = 'cyan')\nplt.scatter(x[y_hc == 3, 0], x[y_hc == 3, 1], s = 50, c = 'magenta')\nplt.scatter(x[y_hc == 4, 0], x[y_hc == 4, 1], s = 50, c = 'orange')\nplt.scatter(x[y_hc == 5, 0], x[y_hc == 5, 1], s = 50, c = 'blue')\nplt.scatter(x[y_hc == 6, 0], x[y_hc == 6, 1], s = 50, c = 'red')\nplt.scatter(x[y_hc == 7, 0], x[y_hc == 7, 1], s = 50, c = 'black')\nplt.scatter(x[y_hc == 8, 0], x[y_hc == 8, 1], s = 50, c = 'violet')\n\n\nplt.title('Hierarchial Clustering', fontsize = 20)\nplt.xlabel('Annual Income')\nplt.ylabel('Spending Score')\nplt.legend()\nplt.grid()\nplt.show()","5576893a":"# HIERARCHICAL CLUSTERING****","72854210":"**Peoples of salary 54k and 78k are the mostly visited persons in mall.**","6e0938d3":"**From the diagram we can say that females are more visiting to mall than males**","f0f2563b":"**Peoples of age between 25 to 40 are mostly visiting mall than other age groups**","ed4f8d77":"**From the above diagram, we can say that the customer id is not correlated with income, it's not an useful feature so we can remove that.**","45463114":"**Peoples of income in the range of 20k-40k and 70k-100k have the highest spend score**","2cafc9a4":"# **Density Based Spacial Clustering of Applications with noise (DBSCAN)**","096b294a":"**This diagram shows the mean spendscore of female and male. we can observe that the mean average spend score of female is greater than male, they have higher spendscore than male,and their least spendscore is greater than males least spendscore**","9e2c4377":"**We are going to use the DBSCAN  for algorithm for the purpose of clustering. It is an unsupervised machine learning algorithm. It is used for clusters of high density. It automatically predicts the outliers and removes it. It is better than hierarchical and k-means clustering algorithm. It makes the clusters based on the parameters like epsilon,min points and noise.It separately predicts the core points, border points and outliers efficiently.**"}}