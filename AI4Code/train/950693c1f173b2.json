{"cell_type":{"f13aae19":"code","7c74cea2":"code","6c54a2fa":"code","91e81410":"code","baf412cc":"code","38fd1eea":"code","afddc241":"code","e7f88b88":"code","f596076c":"code","6bc7d150":"code","381ea0f6":"code","d8e8303e":"code","b1f23fdd":"code","94c6ee24":"code","6d8c3d99":"code","dc74d76c":"code","3d088625":"code","9ce4535b":"code","97e081ef":"code","4a90a21e":"code","fc0b02fe":"code","bbdf0a68":"code","b7141775":"code","273ef11e":"code","24d93b21":"code","e6eb1d9f":"code","424c0dcf":"code","dea7a0a4":"code","be27f589":"code","0b796281":"code","ccf6db41":"code","185ad9af":"code","53d7fba7":"code","1c521658":"code","a24d84e4":"code","f36ce774":"code","79433461":"code","7d95b16d":"code","ef837f93":"code","54aafb11":"code","bbd25b5d":"code","c88aa91a":"code","22a5313c":"code","316d944f":"code","b6a0d7dd":"code","6857a992":"code","4d9d3c99":"code","38b761c7":"code","33f54dc5":"code","eab605be":"code","8e347f51":"code","cc54037f":"code","07fb7802":"code","780c001e":"code","9a780d22":"code","8e3b3733":"code","8c01490b":"code","3170c7da":"code","dd2d17ef":"code","e2cee82e":"markdown","6830d329":"markdown","dc88d2c4":"markdown","07d9f926":"markdown","05027d0e":"markdown","5286d881":"markdown","5d42bc48":"markdown","4e63efbd":"markdown","75bf0bec":"markdown","792a267c":"markdown","9cbac38a":"markdown","2bd4f749":"markdown","08ab12e3":"markdown","545e76e8":"markdown","7b6f513a":"markdown","8dedad39":"markdown","162f39b0":"markdown","f2ca0157":"markdown","911e2dfe":"markdown","5fff6437":"markdown","adc4f795":"markdown","8d6a025f":"markdown","c7223512":"markdown","2c66647f":"markdown","dd37cbd2":"markdown","851d181b":"markdown","ea3dbc6d":"markdown","e3165ede":"markdown","9a452204":"markdown","dfe47d08":"markdown","68f7cb2f":"markdown"},"source":{"f13aae19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7c74cea2":"import pandas as pd \nimport plotly.express as px","6c54a2fa":"pd.options.display.float_format = '{:,.2f}'.format","91e81410":"df = pd.read_csv('..\/input\/d\/lava18\/google-play-store-apps\/googleplaystore.csv')","baf412cc":"df.shape","38fd1eea":"df.columns","afddc241":"df.sample()","e7f88b88":"df.drop(['Last Updated', 'Android Ver', 'Current Ver'], axis=1, inplace=True)","f596076c":"df.head()","6bc7d150":"df.isnull().sum()","381ea0f6":"df_clean = df.dropna(subset=['Rating'])","d8e8303e":"df_clean.shape","b1f23fdd":"df_clean.isnull().sum()","94c6ee24":"df_clean[df_clean['Content Rating'].isna()]","6d8c3d99":"df_clean.dropna(inplace=True)","dc74d76c":"df_clean.info()","3d088625":"pd.options.mode.chained_assignment = None  # default='warn'","9ce4535b":"df_clean['Size'] = df_clean.Size.apply(lambda x: x.strip('+'))\ndf_clean['Size'] = df_clean.Size.apply(lambda x: x.replace(',', ''))\ndf_clean['Size'] = df_clean.Size.apply(lambda x: x.replace('M', ''))\ndf_clean['Size'] = df_clean.Size.apply(lambda x: x.replace('k', 'e-3'))\ndf_clean['Size'] = df_clean.Size.replace('Varies with device', 0)","97e081ef":"df_clean['Size'] = pd.to_numeric(df_clean['Size'])","4a90a21e":"df_clean.head()","fc0b02fe":"df_clean.loc[df_clean.Size == 0, 'Size'] = df_clean.Size.median()","bbdf0a68":"df_clean.rename(columns={\"Size\": \"Size_MB\"}, inplace=True)","b7141775":"df_clean['Installs'] = df_clean.Installs.apply(lambda x: x.strip('+'))\ndf_clean['Installs'] = df_clean.Installs.apply(lambda x: x.replace(',', ''))\ndf_clean['Installs'] = pd.to_numeric(df_clean['Installs'])","273ef11e":"df_clean.info()","24d93b21":"df_clean['Price'] = df_clean.Price.apply(lambda x: x.replace('$', ''))","e6eb1d9f":"df_clean['Price'] = pd.to_numeric(df_clean.Price)","424c0dcf":"df_clean[\"Reviews\"] = pd.to_numeric(df_clean.Reviews)","dea7a0a4":"df_clean.isna().sum()","be27f589":"duplicated_rows = df_clean[df_clean.duplicated()]\nprint(duplicated_rows.shape)\nduplicated_rows.head()","0b796281":"df_clean[df_clean.App == 'Instagram']","ccf6db41":"df_clean = df_clean.drop_duplicates()","185ad9af":"df_clean[df_clean.App == 'Instagram']","53d7fba7":"df_clean = df_clean.drop_duplicates(subset=['App', 'Type', 'Price'])\ndf_clean[df_clean.App == 'Instagram']","1c521658":"df_clean.shape","a24d84e4":"df_clean.info()","f36ce774":"df_clean.sort_values('Rating', ascending=False).head()","79433461":"df_clean.sort_values('Size_MB', ascending=False).head()","7d95b16d":"df_clean.sort_values('Reviews', ascending=False).head(10)","ef837f93":"ratings = df_clean['Content Rating'].value_counts()\nratings","54aafb11":"fig = px.pie(labels=ratings.index, values=ratings.values, title=\"Content Rating\", names=ratings.index)\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","bbd25b5d":"fig = px.pie(labels=ratings.index,\nvalues=ratings.values,\ntitle=\"Content Rating\",\nnames=ratings.index,\nhole=0.6,\n)\nfig.update_traces(textposition='inside', textfont_size=15, textinfo='percent')\n \nfig.show()","c88aa91a":"df_clean.sort_values('Price', ascending=False).head(10)","22a5313c":"df_sub = df_clean[df_clean['Price'] < 250]\ndf_sub.sort_values('Price', ascending=False).head()","316d944f":"df_sub['Revenue_Estimate'] = df_sub.Installs.mul(df_sub.Price)\ndf_sub.sort_values('Revenue_Estimate', ascending=False)[:10]","b6a0d7dd":"df_sub.Category.nunique()","6857a992":"top10_category = df_sub.Category.value_counts()[:10]\ntop10_category","4d9d3c99":"bar = px.bar(x=top10_category.index, y=top10_category.values)\nbar.show()","38b761c7":"category_installs = df_sub.groupby('Category').agg({'Installs': pd.Series.sum})\ncategory_installs.sort_values('Installs', ascending=True, inplace=True)\ncategory_installs[:10]","33f54dc5":"h_bar = px.bar(x=category_installs.Installs,\n               y=category_installs.index,\n               orientation='h',\n               title='Category Popularity')\nh_bar.update_layout(xaxis_title='Number of Downloads', yaxis_title='Category')\nh_bar.show()","eab605be":"category_app_installs = df_sub.groupby('Category').agg({'App': pd.Series.count, 'Installs': pd.Series.sum})\ncategory_app_installs.sort_values('Installs', ascending=False)","8e347f51":"scatter = px.scatter(category_app_installs,\n                     x='App',\n                     y='Installs', \n                     title='Category Concentration',\n                     size='App',\n                     hover_name=category_app_installs.index,\n                     color='Installs')\nscatter.update_layout(xaxis_title='Number of Apps (Lower=More Concentrated)',\n                      yaxis_title='Installs',\n                      yaxis=dict(type='log'))\nscatter.show()","cc54037f":"stack = df_sub.Genres.str.split(';', expand=True).stack()\nprint(f'We now have a single column with shape: {stack.shape}')\nnum_genres = stack.value_counts()\nprint(f'Number of genres: {len(num_genres)}')","07fb7802":"bar = px.bar(x=num_genres.index[:15],\n             y=num_genres.values[:15],\n             title='Top Genres',\n             color=num_genres.values[:15],\n             hover_name=num_genres.index[:15],\n             color_continuous_scale='Agsunset')\nbar.update_layout(xaxis_title='Genre',\n                  yaxis_title='Number of Apps',\n                  coloraxis_showscale=False)\nbar.show()","780c001e":"df_free_vs_paid = df_sub.groupby(['Category', 'Type'], as_index=False).agg({'App': pd.Series.count})\ndf_free_vs_paid.head()","9a780d22":"g_bar = px.bar(x=df_free_vs_paid.Category,\n              y=df_free_vs_paid.App,\n              title='Free vs Paid Apps by Category',\n              color=df_free_vs_paid.Type,\n              barmode='group')\ng_bar.update_layout(xaxis_title='Category',\n                    yaxis_title='Number of Apps',\n                    xaxis={'categoryorder':'total descending'},\n                    yaxis=dict(type='log'))\ng_bar.show()","8e3b3733":"box = px.box(df_sub,\n             y='Installs',\n             x='Type',\n             color='Type',\n             notched=True,\n             points='all',\n             title='How Many Downloads are Paid Apps Giving Up?')\nbox.update_layout(yaxis=dict(type='log'))\nbox.show()","8c01490b":"df_paid_apps = df_sub[df_sub.Type=='Paid']\np_box = px.box(df_paid_apps,\n               x='Category',\n               y='Revenue_Estimate',\n               title='How Much Can Paid App Earn?')\np_box.update_layout(xaxis_title='Category',\n                    yaxis_title='Paid App Ballpack Revenue',\n                    xaxis={'categoryorder':'min ascending'},\n                    yaxis=dict(type='log'))\np_box.show()","3170c7da":"df_paid_apps.Price.median()","dd2d17ef":"box = px.box(df_paid_apps,\n             x='Category',\n             y=\"Price\",\n             title='Price per Category')\n \nbox.update_layout(xaxis_title='Category',\n                  yaxis_title='Paid App Price',\n                  xaxis={'categoryorder':'max descending'},\n                  yaxis=dict(type='log'))\n \nbox.show()","e2cee82e":"### Data Type Conversion","6830d329":"#### Plotly Box Plots: Revenue by App Category","dc88d2c4":"**Data Source:** <br>\nApp and review data was scraped from the Google Play Store by Lavanya Gupta in 2018. Original files listed [here](\nhttps:\/\/www.kaggle.com\/lava18\/google-play-store-apps).","07d9f926":"### Drop Unused Columns","05027d0e":"#### Vertical Bar Chart - Highest Competition (Number of Apps)","5286d881":"#### Category Concentration - Downloads vs. Competition","5d42bc48":"Remove columns `Last Updates`, `Android Version` and `Current Ver`","4e63efbd":"#### Horizontal Bar Chart - Most Popular Categories (Highest Downloads)","75bf0bec":"## Exploratory Analysis and Visualization","792a267c":"#### Grouped Bar Charts: free vs Paid Apps per Category","9cbac38a":"### Most expensive Apps and calculate a Sales Revenue Estimate","2bd4f749":"As we can see, even though, we already remove duplicates but there are still different versions so we will remove it with less subset to reduce the data duplicates.","08ab12e3":"### Largest Apps in terms of Size(MBs)","545e76e8":"#### How Much Can You Charge? Examine Paid App Pricing Strategies by Category","7b6f513a":"### Plotly Bar Charts & Scatter Plots: Analysing App Categories","8dedad39":"### Plotly Pie and Donut Charts - Visualise Categorical Data: Content Ratings","162f39b0":"Now, we should do the same for `Installs`","f2ca0157":"### Apps with most Reviews","911e2dfe":"We will drop all rows that Rating is null ","5fff6437":"## Import and note book presentation","adc4f795":"### Find and Remove Duplicates","8d6a025f":"# Google Play Store App Analytics\n\nIn this notebook, we will do a compredensive analysis of the Android app market by comparing thousands of apps in the Google Play Store","c7223512":"we should try to clear up the size column. It is displaying numbers that are recognizable to humans, but python doesn't understand what the m in the number is. So we need to turn it back into an integer.","2c66647f":"### Highest Rated Apps","dd37cbd2":"### Find and Remove NaN values","851d181b":"#### Extracting Nested Data from Genre Column","ea3dbc6d":"#### Plotly Box Plots: Number of Installs of Free vs Paid Apps","e3165ede":"## Read Dataset","9a452204":"We will create a new Dataframe with Price less than $250 than add a column call `Revenue_Estimate` to that DataFrame. This column holds the price of the app times the number of installs.","dfe47d08":"## Data Cleaning","68f7cb2f":"Now, we will do the sdsame for `Price`"}}