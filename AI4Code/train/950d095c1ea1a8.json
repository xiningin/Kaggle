{"cell_type":{"02d9919d":"code","f7f59db4":"code","adad8eb4":"code","af9c7ad9":"code","72d4903b":"code","4f3b6628":"code","330a2cfd":"code","f739d17f":"code","c309ead1":"code","d6cfef96":"code","e3596742":"code","7f1d84d4":"code","57ec8781":"code","592db0ec":"code","e812af6a":"code","a38ecd01":"code","f565f4b1":"code","dc13f135":"code","ec1216ac":"markdown","10943c35":"markdown","648f6730":"markdown","6abc1653":"markdown","d79816d2":"markdown","6d6861b5":"markdown","4ed1198e":"markdown","f3ca7432":"markdown","9dcedcf6":"markdown","407fab4a":"markdown","e189e359":"markdown","83b0686b":"markdown","c89dd56d":"markdown","bc2d3df1":"markdown","ee223a8d":"markdown","bde7aee2":"markdown","e9e17de1":"markdown","345a7ea6":"markdown","42e25208":"markdown","ef57d8d6":"markdown","2c460d26":"markdown","20057826":"markdown","eb171aac":"markdown","4f0d3008":"markdown","64828d81":"markdown","aec56483":"markdown"},"source":{"02d9919d":"# Imports and data\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport random as rd\n\ndata = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\ndata['smoker'] = [bool(sm == 'yes') for sm in data['smoker']]\ndata['age_cat'] = pd.cut(data['age'], 8, labels=False)\ndata['age_cat'] = [int(18+i*(64-18)\/8) for i in data['age_cat']]","f7f59db4":"# Setting up graphics and color palette\nfrom pylab import rcParams\nrcParams['figure.figsize'] = 9, 7\n\nsns.set_context('notebook')\nsns.set_style('whitegrid')\npal = sns.color_palette('Set3')\nrd.shuffle(pal, lambda: .4)\npal[0], pal[1], pal[2], pal[4] = pal[1], pal[0], pal[4], pal[2]\nsns.set_palette(pal)","adad8eb4":"sns.histplot(data, x='charges', hue='smoker', kde=True, hue_order=[True, False], alpha=.7)\nplt.title('Distribution of charges in relation to smoking')\nplt.show()","af9c7ad9":"sns.violinplot(data=data, y='charges', x='smoker', order=[True, False])\nplt.title('Distribution of charges in relation to smoking')\nplt.show()","72d4903b":"sns.histplot(data=data, x='bmi', stat='density', kde=True)\nplt.show()","4f3b6628":"sns.lmplot(data=data, x='bmi', y='charges', hue='smoker', scatter_kws={\"alpha\": .3, \"s\": 20}, height=7, aspect=1.15)\nplt.show()","330a2cfd":"sns.barplot(data=data, x='age_cat', y='children', estimator=np.mean)\nplt.show()","f739d17f":"sns.barplot(data=data, x='children', y='charges', estimator=np.mean)\nplt.show()","c309ead1":"sns.barplot(data=data, x='age_cat', y='charges', estimator=np.mean)\nplt.show()","d6cfef96":"sns.scatterplot(data=data, x='age', y='charges', hue='smoker')\nplt.show()","e3596742":"from sklearn.cluster import KMeans\n\ndata['smoker'] = [int(sm) for sm in data['smoker']]\ndata['charges\/age'] = data['charges'] - data['age']*200\ndata['sex_male'] = [int(s == 'male') for s in data['sex']]\n\nX = np.array(data[['charges\/age']])\nkmeans = KMeans(n_clusters=3, max_iter=500, init=np.array([16000, 28000, 48000]).reshape(-1, 1), n_init=1)\nkmeans = kmeans.fit(X.reshape(-1, 1))\ndata['cluster'] = kmeans.labels_\n\nsns.scatterplot(data=data, x='age', y='charges', hue='cluster', palette=pal[0:3])\nplt.title('Clusters of Patients')\nplt.show()","7f1d84d4":"sns.lmplot(data=data, x='age', y='charges', hue='cluster', scatter_kws={\"alpha\": .3, 's': 20}, height=7, aspect=1.15)\nplt.title('Regression within clusters')\nplt.show()","57ec8781":"sns.scatterplot(data=data, x='bmi', y='charges', hue='cluster', palette=pal[0:3])\nplt.title('BMI and charges distribution within clusters')\nplt.show()","592db0ec":"from sklearn.model_selection import train_test_split\n\ndata_train, data_test = train_test_split(data, test_size=.3, random_state=6)\ndata_cv, data_test = train_test_split(data_test, test_size=.5, random_state=6)","e812af6a":"pd.options.mode.chained_assignment = None\ndata_train['cat'] = 'train'\ndata_cv['cat'] = 'cv'\ndata_test['cat'] = 'test'\ndata_cat = pd.concat([data_train, data_cv, data_test])\nfig, axes = plt.subplots(2, 2)\nsns.barplot(data=data_cat, x='cat', y='smoker', estimator=np.mean, ax=axes[0, 0])\nsns.barplot(data=data_cat, x='cat', y='charges', estimator=np.mean, ax=axes[0, 1])\nsns.barplot(data=data_cat, x='cat', y='age', estimator=np.mean, ax=axes[1, 0])\nsns.barplot(data=data_cat, x='cat', y='bmi', estimator=np.mean, ax=axes[1, 1])\nfor ax in axes[:, 1]:\n    ax.yaxis.tick_right()\nfor ax in axes.flatten():\n    ax.set(xlabel='')\nplt.gcf().suptitle('Mean of the features across the data categories')\nplt.show()","a38ecd01":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import Ridge\n\n# Features Preprocessing\nreg_features = ['cluster', 'age', 'smoker', 'bmi', 'children']\n\nX_train = np.array(data_train[reg_features])\npoly = PolynomialFeatures(3)\nX_train = poly.fit_transform(X_train)\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\ny_train = np.array(data_train[['charges']])\n\nX_cv = np.array(data_cv[reg_features])\nX_cv = scaler.transform(poly.transform(X_cv))\ny_cv = np.array(data_cv[['charges']])\n\nX_test = np.array(data_test[reg_features])\nX_test = scaler.transform(poly.transform(X_test))\ny_test = np.array(data_test[['charges']])\n\n# Tuning regularization parameter\nscores = np.array([])\nscores = scores.reshape(-1, 2)\nfor alpha in np.arange(0, 1, .1):\n    reg = Ridge(alpha=alpha)\n    reg.fit(X_train, y_train)\n    scores = np.append(scores, np.array([[reg.score(X_cv, y_cv), alpha]]), axis=0)\n    print('Alpha: ' + str(alpha) + '\\tacc: ' + str(round(scores[-1, 0], 5)))\n\nind = np.argmax(scores, axis=0)[0]\nalpha = scores[ind, 1]\nreg = Ridge(alpha=alpha)\nreg.fit(X_train, y_train)\nprint('\\nChosen alpha: ' + str(alpha) + '\\tfor accuracy: ' + str(reg.score(X_cv, y_cv)))\n\n# Testing the model\nprint('\\nAccuracy of the model:')\nprint(reg.score(X_test, y_test))\n","f565f4b1":"from sklearn import svm\nfrom sklearn.metrics import classification_report\n\n\n# Features Preprocessing\nsvc_features = ['age', 'smoker', 'bmi', 'children', 'sex_male']\n\nX_train = np.array(data_train[svc_features])\ny_train = data_train['cluster']\n\nX_cv = np.array(data_cv[svc_features])\ny_cv = data_cv['cluster']\n\nX_test = np.array(data_test[svc_features])\ny_test = data_test['cluster']\n\n# Tuning in regularization and gamma params\nscores = np.array([])\nscores = scores.reshape(-1, 3)\nfor c in range(8, 13):\n\tfor gamma in np.arange(.0015, .003, .0005):\n\t\tsvclassifier = svm.SVC(C=c, kernel='rbf', gamma=gamma, decision_function_shape='ovo')\n\t\tsvclassifier.fit(X_train, y_train.values.ravel())\n\t\tscores = np.append(scores, np.array([[svclassifier.score(X_test, y_test), c, gamma]]), axis=0)\n\t\tprint('C: ' + str(c) + '\\tgamma: ' + str(round(gamma,4)) + '\\tacc: ' + str(round(scores[-1, 0], 5)))\nind = np.argmax(scores, axis=0)[0]\nc = scores[ind, 1]\ngamma = scores[ind, 2]\nsvclassifier = svm.SVC(C=c, kernel='rbf', gamma=gamma)\nsvclassifier.fit(X_train, y_train.values.ravel())\nprint(\n\t'\\nChosen C: ' + str(c) +\n\t'\\twith gamma: ' + str(gamma) +\n\t'\\tfor accuracy: ' + str(svclassifier.score(X_test, y_test))\n)\n\n# Testing the model\ny_pred = svclassifier.predict(X_test)\nprint()\nprint(classification_report(y_pred, y_test))\n","dc13f135":"from sklearn.metrics import r2_score\n\ny_test = data_test['charges']\n\n# Classifier to predict the cluster\nX_test = data_test[svc_features]\nX_test['cluster'] = svclassifier.predict(X_test)\n\n# Polynomial regression to predict the charges\nX_test = np.array(X_test[reg_features])\nX_test = scaler.transform(poly.transform(X_test))\ny_pred = reg.predict(X_test)\n\nprint('Accuracy of the merged models: ')\nprint(r2_score(y_test, y_pred))","ec1216ac":"In this section we'll be using the **K-means algorithm** to classify the individuals into 3 different clusters: upper, middle, and lower class.<br>\nWe'll then explore the consequences of clustering.","10943c35":"### *  Classification:<a id=\"class\"><\/a>","648f6730":"### * BMI, charges (and smoking)","6abc1653":"### *  Regression:<a id=\"reg\"><\/a>","d79816d2":"After running the clustering algorithm, we will take a look at the different manifestations of the clusters along our dataset.","6d6861b5":"Walkthrough the notebook:\n1. <a href=\"#eda\">Exploratory Data Analysis<\/a>\n2. <a href=\"#cluster\">Culstering the patients<\/a> \n3. <a href=\"#pred\">Classification and Regression<\/a>\n    * <a href=\"#reg\">Regression<\/a> 99% accuracy\n    * <a href=\"#class\">Classification<\/a> 95% accuracy\n    * <a href=\"#merge\">Merging the models<\/a> 90% accuracy","4ed1198e":"In this section we will use SVM with gaussian kernel to classify the individuals into their correct clusters (ie social class) given the rest of the features:","f3ca7432":"### *  Merging the two models:<a id=\"merge\"><\/a>","9dcedcf6":"Smokers' charges roughly increse with BMI.","407fab4a":"## Introduction","e189e359":"## 1. Exploratory Data Analysis:<a id=\"eda\"><\/a>","83b0686b":"Even though the data is pretty unbalanced when it comes to the 'smoker' feature, it's clear that smokers in general have heavier charges.","c89dd56d":"Knowing the cluster of the patients we can predict their charges to up to an accuracy of ***98%***","bc2d3df1":"### * Age, charges (and smoking)","ee223a8d":"Even tho *the higher the age the higher the charges*, from this scatter plot we can recognize 3 clusters in the individuals, which can be interpreted as the **upper middle and lower social classes**.<br>\nMoreover it's pretty much understandable that smoking is more frequent in the upper class than in the lower class.\n\nIn the next section we will dive more into these clusters.","bde7aee2":"In this section we will predict the charges given the rest of the features, including the cluster.\nWe will use polynomial regression of degree 3.","e9e17de1":"It's clear that the regression (and later on the prediction) has become more fitting to the data.","345a7ea6":"The data is pretty much balanced between all the categories.","42e25208":"Distribution of the BMI along the dataset:","ef57d8d6":"### * Number of childre, age, and charges:","2c460d26":"## 2. Clustering:<a id=\"cluster\"><\/a>","20057826":"In this notebook we will go through the data of the \"Medical Cost Personal\" dataset. Starting with some exploratory data analysis, we will find some patterns that'll help us divide the patients into 3 solid clusters. These clusters will help us later on predict the charges of the patients more accurately using simple polynomial regression.","eb171aac":"### *  Charges in relation to smoking\n\nOne of the first obvious corrolations to explore is the influance of smoking on the overall charges of the individuals:","4f0d3008":"First we have to divide the data into **training** 70%, **crossvalidation** 15%, and **testing** 15% parts:","64828d81":"Here, we will assess both our models in a sequence on our test set:\n* First we'll use the classifier to predict the social class of the individual;\n* Then we will use regression model to predict the charges of the individual.","aec56483":"## 3. Prediciton:<a id=\"pred\"><\/a>"}}