{"cell_type":{"47540011":"code","d8d428d8":"code","b2a7cbd2":"code","d32231b7":"code","ce09eefc":"code","74ec66f9":"code","6439495f":"code","93a697a8":"code","327cc8a8":"code","19f2732e":"code","ef66ca6d":"code","03b7b3cf":"code","dc652d14":"code","731caff6":"code","0a0918c8":"code","08b7c4e3":"code","21ad409f":"markdown"},"source":{"47540011":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\n\n# Any results you write to the current directory are saved as output.","d8d428d8":"diab = pd.read_csv('..\/input\/diabetes.csv')","b2a7cbd2":"X = diab.iloc[:,:7]\ny = diab.iloc[:,8]","d32231b7":"X_train,X_test,y_train,y_test = train_test_split(X, y, test_size=0.33, random_state=42)","ce09eefc":"model = LogisticRegression()","74ec66f9":"model.fit(X_train,y_train)","6439495f":"model.score(X_test,y_test)","93a697a8":"from sklearn.decomposition import PCA","327cc8a8":"pca_diab = PCA(n_components=2)\n#decreasing 7 features to 2 features","19f2732e":"X1= pca_diab.fit_transform(X)\n#fit so that it could find relations and transformed into 2 features\n#Namely =PCA1 and PCA2","ef66ca6d":"data_frame = pd.DataFrame(data = X1,columns = ['PCA1','PCA2'])","03b7b3cf":"data_frame.head()","dc652d14":"X_train,X_test,y_train,y_test = train_test_split(X1, y, test_size=0.33, random_state=42)","731caff6":"model_new = LogisticRegression()","0a0918c8":"model_new.fit(X_train,y_train)","08b7c4e3":"model_new.score(X_test,y_test)","21ad409f":"# Using PCA"}}