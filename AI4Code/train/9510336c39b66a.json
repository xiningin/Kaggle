{"cell_type":{"16dcd3fd":"code","0fe58e7d":"code","2d46b734":"code","943ac0f4":"code","1b700b03":"code","49d4cb61":"code","d9a84252":"code","32ae728e":"code","29eccf30":"code","8f55ec3c":"code","d7ada253":"code","5347f92d":"code","59ef265d":"code","f971784f":"code","d4f784c5":"code","18d7fc58":"code","ee353de7":"code","4428008e":"markdown","a70efaec":"markdown","4f1c3a08":"markdown","a344f9e2":"markdown","80569fe0":"markdown"},"source":{"16dcd3fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0fe58e7d":"import itertools\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix","2d46b734":"data = pd.read_csv('\/kaggle\/input\/fake-news\/news.csv')","943ac0f4":"data","1b700b03":"data.head()","49d4cb61":"print(data.shape)\nprint(data.head())","d9a84252":"data.isna().sum()","32ae728e":"X = data.iloc[ : , -2].values\ny = data.iloc[ : ,-1].values","29eccf30":"X","8f55ec3c":"y","d7ada253":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.33, random_state = 7)","5347f92d":"tfidf_vectorizer = TfidfVectorizer(stop_words = 'english', max_df = 0.7)\n\ntfidf_train = tfidf_vectorizer.fit_transform(X_train)\ntfidf_test = tfidf_vectorizer.transform(X_test)","59ef265d":"pac = PassiveAggressiveClassifier(max_iter = 50)\npac.fit(tfidf_train, y_train)","f971784f":"y_pred = pac.predict(tfidf_test)\ny_pred","d4f784c5":"df=pd.DataFrame(y_test, y_pred)\ndf","18d7fc58":"score = accuracy_score(y_test, y_pred)\nprint(f'Accuracy: {round(score*100,2)}%')","ee353de7":"confusion_matrix(y_test, y_pred, labels = ['FAKE', 'REAL'])","4428008e":"### Data Processing","a70efaec":"### Checking the accuracy of the data","4f1c3a08":"### Importing Libraries","a344f9e2":"### Splitting the data into training and testing data","80569fe0":"### Creating Data Frame for testing and predicted data"}}