{"cell_type":{"bb5d68bb":"code","670658d3":"code","9c3336da":"code","806476de":"code","b3a1ca99":"code","c2e6eb8d":"code","28fe2b5a":"code","4a2a26f5":"code","00cb37f9":"code","8b58c192":"code","af4a6507":"code","3636a5f1":"code","197e2b90":"code","b13b36b6":"markdown","e0f7abab":"markdown","e6674723":"markdown","c7b64ad3":"markdown","8f0c16a1":"markdown","2ffd501f":"markdown","196bc35d":"markdown","fad65a4e":"markdown","1d005abf":"markdown","5d0dee9d":"markdown","fdd87446":"markdown","0825bbf1":"markdown","27516443":"markdown","97bbacfe":"markdown","9495199c":"markdown"},"source":{"bb5d68bb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","670658d3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import NearestNeighbors","9c3336da":"df = pd.read_csv('\/kaggle\/input\/updated-netflix-stock-price-all-time\/netflix.csv')\ndf = df.iloc[4000:,:]\ndf['Date']=pd.to_datetime(df['Date'])\ndf","806476de":"fig, ax = plt.subplots(figsize=(20,8))\nplt.plot(df[\"Date\"], df[\"Open\"], color='Red')\nax.set_xlabel('Date', fontsize='11')\nax.set_ylabel('Opening Price in USD', fontsize='11')\nplt.title('Netflix Stock Prices (April 13th 2018 ~)')\nplt.grid()\nplt.show()","b3a1ca99":"df = df.drop(columns=['High','Low','Close','Volume','Adj Close'])","c2e6eb8d":"for i in range(len(df)):\n    df['Date'][i+4000] = i\ndf","28fe2b5a":"# create model\nnbrs = NearestNeighbors(n_neighbors = 10)\n# fit model\nnbrs.fit(df)","4a2a26f5":"# distances and indexes of k-neaighbors from model outputs\ndistances, indexes = nbrs.kneighbors(df)\n# plot\nplt.figure(figsize=(15, 7))\nplt.plot(distances.mean(axis =1))","00cb37f9":"distances = pd.DataFrame(distances)\ndistances_mean = distances.mean(axis =1)\ndistances_mean","8b58c192":"distances_mean.describe()","af4a6507":"th = 9.0\noutlier_index = np.where(distances_mean > th)\noutlier_index","3636a5f1":"outlier_values = df.iloc[outlier_index]\noutlier_values","197e2b90":"# plot data\nplt.figure(figsize=(20, 7))\nplt.plot(df[\"Date\"], df[\"Open\"], color = \"b\")\n# plot outlier values\nplt.scatter(outlier_values[\"Date\"], outlier_values[\"Open\"], color = \"r\")","b13b36b6":"**Set thresholds with reference to statistics.**","e0f7abab":"## If you like this notebook then please give an upvote \ud83d\udc4d","e6674723":"Since 75th percentile is 8.35, we will set threshold into 9.0","c7b64ad3":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nImport Libraries\n<\/h1>\n<\/div>\n<\/div>","8f0c16a1":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nGet Abnormal Points\n<\/h1>\n<\/div>\n<\/div>","2ffd501f":"<img src=\"https:\/\/miro.medium.com\/max\/778\/1*z8PiWePLH9P82hJ2P0N0Jg.png\" alt=\"\">","196bc35d":"<img src=\"https:\/\/ei.marketwatch.com\/Multimedia\/2017\/05\/22\/Photos\/ZH\/MW-FM980_netfli_20170522210252_ZH.jpg?uuid=8bee2706-3f53-11e7-8476-9c8e992d421e\" alt=\"\">","fad65a4e":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nRead Data\n<\/h1>\n<\/div>\n<\/div>","1d005abf":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nUnsupervised Learning : KNN\n<\/h1>\n<\/div>\n<\/div>","5d0dee9d":"**KNN is a supervised learning-based algorithm.  \nHowever, using KNN's distance calculation method can also be used as an unsupervised learning method.**  \n\n**In this work, we will use Scikit-Learn's NearestNeighbors, which we can use it for unsupervised learning**","fdd87446":"### sklearn.neighbors.NearestNeighbors\n```\nclass sklearn.neighbors.NearestNeighbors(*, n_neighbors=5, radius=1.0, algorithm='auto', leaf_size=30, metric='minkowski', p=2, metric_params=None, n_jobs=None)\n```\n- n_neighbors : int, default=5 (Number of neighbors to use by default for kneighbors queries.)\n- radius : float, default=1.0 (Range of parameter space to use by default for radius_neighbors queries.)\n- algorithm : {\u2018auto\u2019, \u2018ball_tree\u2019, \u2018kd_tree\u2019, \u2018brute\u2019}, default=\u2019auto\u2019 (Algorithm used to compute the nearest neighbors)\n- metric : str or callable, default=\u2019minkowski\u2019 (the distance metric to use for the tree.)\n- p : int, default=2 (Parameter for the Minkowski metric from sklearn.metrics.pairwise.pairwise_distances. When p = 1, this is equivalent to using manhattan_distance (l1), and euclidean_distance (l2) for p = 2.)","0825bbf1":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nVisualize Abnormal Points\n<\/h1>\n<\/div>\n<\/div>","27516443":"**It can be seen that our KNN algorithm captures the soaring and plunging points of the stock graph quite well! \ud83d\ude4c**","97bbacfe":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nSimple Anomaly Detection using Unsupervised KNN\n<\/h1>\n<\/div>\n<\/div>","9495199c":"<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div style=\"color:white;\n           display:fill;\n           border-radius:5px;\n           background-color:crimson;\n           font-size:110%;\n           font-family:Verdana;\n           letter-spacing:0.5px\">\n<h1 style=\"text-align: center;\n           padding: 10px;\n              color:white\">\nData Pre-processing\n<\/h1>\n<\/div>\n<\/div>"}}