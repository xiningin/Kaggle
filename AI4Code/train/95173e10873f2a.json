{"cell_type":{"ae2fdc44":"code","62fbb66c":"code","4cc6b7e2":"code","543d2866":"code","d04576c8":"code","73e01b92":"code","38434db2":"code","af9ce1d3":"code","0d4ac009":"code","2adb5db9":"markdown"},"source":{"ae2fdc44":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","62fbb66c":"SEED = 1337\nnp.random.seed(SEED)\n\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.set_style(\"whitegrid\")","4cc6b7e2":"train_df = pd.read_csv(\"..\/input\/train.csv\")\nsub = pd.read_csv(\"..\/input\/sample_submission.csv\")\n\ndisplay(train_df.head())\ndisplay(sub.head())","543d2866":"train_df.shape, sub.shape","d04576c8":"train_df[train_df[\"EncodedPixels\"].isna()].shape","73e01b92":"c = 1\nplt.figure(figsize=[16,16])\nfor img_name in os.listdir(\"..\/input\/train_images\/\")[:16]:\n    img = cv2.imread(\"..\/input\/train_images\/{}\".format(img_name))[...,[2,1,0]]\n    plt.subplot(4,4,c)\n    plt.imshow(img)\n    plt.title(\"train img{}. shape = {}\".format(c, img.shape))\n    c += 1\nplt.show();","38434db2":"c = 1\nplt.figure(figsize=[16,16])\nfor img_name in os.listdir(\"..\/input\/test_images\/\")[:16]:\n    img = cv2.imread(\"..\/input\/test_images\/{}\".format(img_name))[...,[2,1,0]]\n    plt.subplot(4,4,c)\n    plt.imshow(img)\n    plt.title(\"test img{}. shape = {}\".format(c, img.shape))\n    c += 1\nplt.show();","af9ce1d3":"for img_name in os.listdir(\"..\/input\/train_images\/\"):\n    img = cv2.imread(\"..\/input\/train_images\/{}\".format(img_name))[...,[2,1,0]]\n    if img.shape != (256,1600,3):\n        print(img.shape)","0d4ac009":"for img_name in os.listdir(\"..\/input\/test_images\/\"):\n    img = cv2.imread(\"..\/input\/test_images\/{}\".format(img_name))[...,[2,1,0]]\n    if img.shape != (256,1600,3):\n        print(img.shape)","2adb5db9":"**~43k images without defects**"}}