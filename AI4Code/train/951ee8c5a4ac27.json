{"cell_type":{"ba984f74":"code","3f3d8cc6":"code","ae705e89":"code","9a214ed8":"code","f3ff2468":"code","9e49f486":"code","41a135c4":"code","cc9348a3":"code","fe670297":"code","58138863":"code","9fe2d1db":"code","df5b1d6e":"code","d8bb1f86":"code","5062ab7c":"markdown","221d99a5":"markdown","69f6f5bf":"markdown","148cb345":"markdown","a472301b":"markdown","7aa936b7":"markdown","4785819b":"markdown","0dbef811":"markdown"},"source":{"ba984f74":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\nsns.set(rc={'figure.figsize':(16,9)})\npalette=\"Set3\"\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f3d8cc6":"df_players = pd.read_csv('\/kaggle\/input\/fifa-21-complete-player-dataset\/players_21.csv')","ae705e89":"df_players.head()","9a214ed8":"def separate_month_and_day(date):\n    day = int(date.split('-')[2])\n    month = int(date.split('-')[1])\n    return day, month","f3ff2468":"def calculate_sign(date):\n    day, month = separate_month_and_day(date)\n    if month == 12:\n        astro_sign = 'Sagittarius' if (day < 22) else 'Capricorn'\n    elif month == 1:\n        astro_sign = 'Capricorn' if (day < 20) else 'Aquarius'\n    elif month == 2:\n        astro_sign = 'Aquarius' if (day < 19) else 'Pisces'\n    elif month == 3:\n        astro_sign = 'Pisces' if (day < 21) else 'Aries'\n    elif month == 4:\n        astro_sign = 'Aries' if (day < 20) else 'Taurus'\n    elif month == 5:\n        astro_sign = 'Taurus' if (day < 21) else 'Gemini'\n    elif month == 6:\n        astro_sign = 'Gemini' if (day < 21) else 'Cancer'\n    elif month == 7:\n        astro_sign = 'Cancer' if (day < 23) else 'Leo'\n    elif month == 8:\n        astro_sign = 'Leo' if (day < 23) else 'Virgo'\n    elif month == 9:\n        astro_sign = 'Virgo' if (day < 23) else 'Libra'\n    elif month == 10:\n        astro_sign = 'Libra' if (day < 23) else 'Scorpio'\n    elif month == 11:\n        astro_sign = 'Scorpio' if (day < 22) else 'Sagittarius'\n    return astro_sign","9e49f486":"df_players['sign'] = df_players.apply(lambda x: calculate_sign(x['dob']), axis=1)","41a135c4":"ax = sns.countplot(x=\"sign\", data=df_players, order = df_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","cc9348a3":"df_best_100_players = df_players[0:100]\nax = sns.countplot(x=\"sign\", data=df_best_100_players, order = df_best_100_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","fe670297":"df_worst_100_players = df_players[-100:]","58138863":"ax = sns.countplot(x=\"sign\", data=df_worst_100_players, order = df_worst_100_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","9fe2d1db":"ax = sns.countplot(x=\"sign\", data=df_worst_100_players, order = df_worst_100_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","df5b1d6e":"best_skill_players = df_players[df_players['skill_moves'] == 5]\nax = sns.countplot(x=\"sign\", data=best_skill_players, order = best_skill_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","d8bb1f86":"best_weak_foot_players = df_players[df_players['weak_foot'] == 5]\nax = sns.countplot(x=\"sign\", data=best_weak_foot_players, order = best_weak_foot_players['sign'].value_counts().index)\nax.set_xticklabels(ax.get_xticklabels(), rotation=50)\nax","5062ab7c":"Some intersting changes here:\n    * Gemini are 7th sign with more players but between the top players it's 3th\n    * Aquarius beat Pisces in the top 100 players and lead the list","221d99a5":"## Worst 100 players sign","69f6f5bf":"### We did calculate the sign of all palyers and let's start with stats","148cb345":"Some intersting changes here:\n    * Gemini drop to last position in weak foot, showing dificult to repetitive training.\n    * Libra and Aquarius drop a lot of positions too.\n    * Taurus was the 9th in skills but 2th in weak foot.","a472301b":"## Players with 5 stars of skill","7aa936b7":"**Hmm, the distribution shows that we have more some signs than others.**","4785819b":"## Players with 5 stars of weak foot","0dbef811":"## Best 100 players sign"}}