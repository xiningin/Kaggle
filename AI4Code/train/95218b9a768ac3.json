{"cell_type":{"0226f953":"code","a8f4cd06":"code","cc77f17f":"code","967b47b8":"code","06a2bce5":"code","50b96808":"code","f04a29a8":"code","e8772a97":"code","ae71d382":"code","c8ad6951":"code","5276b45c":"code","48ca5217":"code","e23c6fa5":"markdown"},"source":{"0226f953":"from google.colab import drive\ndrive.mount('\/content\/drive')","a8f4cd06":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport tensorflow as tf","cc77f17f":"root_path = '\/content\/drive\/MyDrive\/Kaggle\/digit-recognizer\/'","967b47b8":"train_data = pd.read_csv(root_path + 'train.csv')\ntest_data = pd.read_csv(root_path + 'test.csv')","06a2bce5":"train_data.head()","50b96808":"img = train_data.iloc[5, 1:].values.reshape(28, 28)\nplt.imshow(img, cmap='gray')\nplt.show()","f04a29a8":"model = tf.keras.Sequential([\n  tf.keras.layers.Flatten(input_shape=[784]),\n  tf.keras.layers.Dense(128, activation='relu'),\n  tf.keras.layers.Dense(10)                    \n])\n\nmodel.compile(\n    optimizer=tf.keras.optimizers.Adam(0.0001),\n    loss=tf.keras.losses.CategoricalCrossentropy(from_logits=True),\n    metrics=['accuracy']\n)\nmodel.summary()","e8772a97":"x = train_data.iloc[:, 1:]\ny = np.array([[0 if i!=j else 1 for j in range(10)] for i in train_data.iloc[:, 0]])","ae71d382":"history = model.fit(x, y, validation_split=0.2 , epochs=10)","c8ad6951":"# Summarize history for accuracy\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('model accuracy')\nplt.ylabel('accuracy')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()\n# Summarize history for loss\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('model loss')\nplt.ylabel('loss')\nplt.xlabel('epoch')\nplt.legend(['train', 'test'], loc='upper left')\nplt.show()","5276b45c":"predictions = []\nfor i in range(test_data.shape[0]):\n  predictions.append(np.argmax(model.predict(test_data.iloc[i:i+1,].values)))\n  print('\\r' + str(i+1) + '\/' + str(test_data.shape[0]), end='')\nd = {'ImageId': [i+1 for i in range(test_data.shape[0])], 'Label': predictions}\ndf_output = pd.DataFrame(data=d)","48ca5217":"df_output.to_csv(root_path + 'submission.csv', index=False)","e23c6fa5":"# Digit Recognizer\n\n*Author: Lorenzo Vainigli*\n\n[Competition page](https:\/\/www.kaggle.com\/c\/digit-recognizer\/)"}}