{"cell_type":{"131a8c96":"code","8cf04ef9":"code","0c923d10":"code","cfc0bceb":"code","2d350600":"code","03f2d08d":"code","0bc104e8":"code","9b11d80e":"markdown"},"source":{"131a8c96":"import numpy as np\nimport pandas as pd\nimport os, gc\nfrom sklearn.model_selection import StratifiedKFold\nfrom scipy.stats import pearsonr as p\nfrom lightgbm import LGBMRegressor as lgbr\nfrom catboost import CatBoostRegressor as cbr\n\nimport warnings\nwarnings.filterwarnings('ignore')","8cf04ef9":"#https:\/\/www.kaggle.com\/valleyzw\/ubiquant-lgbm-baseline\nparams = {\n        'n_estimators':1000,\n        'learning_rate':0.1,\n        \"objective\": \"regression\",\n        \"metric\": \"rmse\",\n        'boosting_type': \"gbdt\",\n        'verbosity': -1,\n        'n_jobs': -1, \n        'seed': 21,\n        'lambda_l1': 1.1895057699067542, \n        'lambda_l2': 1.9079686837880768e-08, \n        'num_leaves': 112, \n        'subsample':0.8,\n        'feature_fraction': 0.6259927292757151, \n        'bagging_fraction': 0.9782210574588895, \n        'bagging_freq': 1, \n        'n_estimators': 306, \n        'max_depth': 12, \n        'max_bin': 494, \n        'min_data_in_leaf': 366,\n        'colsample_bytree': None,\n        'subsample_freq': None,\n        'min_child_samples': None,\n        'reg_lambda': None,\n        'reg_alpha': None,\n    }","0c923d10":"def run(train):\n    fold_scores = []\n    for fold, (trn_idx, val_idx) in enumerate(kfold.split(train[feats], train['investment_id'])):\n        X_train, y_train = train.iloc[trn_idx][feats], train.iloc[trn_idx][target]\n        X_val, y_val = train.iloc[val_idx][feats], train.iloc[val_idx][target]\n\n        model_lgbr = lgbr(**params)\n        model_lgbr.fit(X_train, y_train, eval_metric='rmse', eval_set=[(X_val, y_val)], early_stopping_rounds=100, verbose=100)\n        models.append(model_lgbr)\n        \n        model_cbr = cbr()\n        model_cbr.fit(X_train, y_train, eval_set=[(X_val, y_val)], use_best_model = True, early_stopping_rounds=100, verbose = False)\n        models.append(model_cbr)\n        \n        y_pred = ( model_lgbr.predict(X_val) + model_cbr.predict(X_val) ) \/ 2.0\n\n        score = p(y_pred, y_val)[0]\n        print(f\"Fold {fold + 1}: {score}\")\n        fold_scores.append(score)\n        \n        del model_lgbr, model_cbr, y_pred, score\n        gc.collect()\n    \n    print(f\"Overall score: {np.mean(fold_scores)}\")","cfc0bceb":"train = pd.read_pickle('..\/input\/ump195gb\/train.pkl')","2d350600":"models = []\nn_splits=5\nfeats = [f for f in train.columns if f not in ['time_id', 'row_id', 'target']]\ntarget = 'target'\nkfold = StratifiedKFold(n_splits=n_splits, shuffle=True, random_state=42)","03f2d08d":"run(train[-1500000:])","0bc104e8":"import ubiquant\nenv = ubiquant.make_env()  \niter_test = env.iter_test()\nfor (test_df, sample_prediction_df) in iter_test:\n    test_df = test_df[feats]\n    pred = np.zeros(len(test_df))\n    \n    for i in range(len(models)):\n        pred += models[i].predict(test_df)\n    \n    pred \/= len(models)\n    sample_prediction_df['target'] = pred\n    env.predict(sample_prediction_df)","9b11d80e":"Credit: \nhttps:\/\/www.kaggle.com\/nicohrubec\/lgb-baseline-with-groupkfold\nhttps:\/\/www.kaggle.com\/valleyzw\/ubiquant-lgbm-baseline"}}