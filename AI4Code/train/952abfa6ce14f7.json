{"cell_type":{"03d17f0c":"code","dc4fa370":"code","d323da07":"code","994a3049":"code","d37a8ef7":"code","013f65dc":"code","73ec1ade":"code","17b79ed4":"code","57749774":"code","1568121c":"code","863838ee":"code","29c63977":"code","7db296d4":"code","14608877":"code","d9f0ee9c":"markdown","4d4b997f":"markdown","0fb8922e":"markdown","02e26b68":"markdown","3d05ee4b":"markdown","e1076b14":"markdown","933d9277":"markdown","eb82b630":"markdown","adb29fa4":"markdown","b45ae55f":"markdown","4e872115":"markdown","4413fdc3":"markdown","b7f91df1":"markdown","ec7d5e21":"markdown","ee842e76":"markdown","847b060c":"markdown","285c527b":"markdown","6f9cc0cd":"markdown","0e4cf20f":"markdown","a9d1c2d6":"markdown","c7ce0bb4":"markdown","781cbf77":"markdown","e7a1e8a8":"markdown"},"source":{"03d17f0c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nMultiResponses = pd.read_csv('..\/input\/multipleChoiceResponses.csv', low_memory=False)\nMultiResponses = MultiResponses.replace({'Q3': 'Republic of Korea'}, 'South Korea')\n#Official name of South Korea is Republic of Korea, survey had two selections on one country\nMultiResponses = MultiResponses.replace({'Q3': 'United States of America'}, 'USA')\nMultiResponses = MultiResponses.replace({'Q3': 'United Kingdom of Great Britain and Northern Ireland'}, 'UK')\n#Using Short Name","dc4fa370":"UserCountCountry = pd.DataFrame(MultiResponses['Q3']).rename(columns={'Q3' : 'Country'})\nUserCountCountry = UserCountCountry.drop([0]).dropna()  \nUserCountCountry = UserCountCountry[(~UserCountCountry['Country'].isin(['Other','I do not wish to disclose my location']))]\n\nfig = plt.figure(figsize=(8,20))\nfig.add_subplot(1,1,1)\nax = sns.countplot(y=\"Country\",\n                   data=UserCountCountry,\n                   order = UserCountCountry['Country'].value_counts().index,\n                   palette=\"GnBu_d\")\n","d323da07":"UserViolin = pd.DataFrame(MultiResponses[['Q2','Q3','Q7','Q24','Q26']]).rename(columns={'Q2' : 'Age','Q3' : 'Country','Q7' : 'Job','Q24' : 'Code_Year','Q26' : 'Are_You_DS'})\nUserViolin = UserViolin[(UserViolin['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil' ]))]\nUserViolin = UserViolin.replace({'Age': '18-21'}, 19)\nUserViolin = UserViolin.replace({'Age': '22-24'}, 23)\nUserViolin = UserViolin.replace({'Age': '25-29'}, 27)\nUserViolin = UserViolin.replace({'Age': '30-34'}, 32)\nUserViolin = UserViolin.replace({'Age': '35-39'}, 37)\nUserViolin = UserViolin.replace({'Age': '40-44'}, 42)\nUserViolin = UserViolin.replace({'Age': '45-49'}, 47)\nUserViolin = UserViolin.replace({'Age': '50-54'}, 52)\nUserViolin = UserViolin.replace({'Age': '55-59'}, 57)\nUserViolin = UserViolin.replace({'Age': '60-69'}, 64)\nUserViolin = UserViolin.replace({'Age': '70-79'}, 74)\nUserViolin = UserViolin.replace({'Age': '80+'}, 80)\nUserViolin = UserViolin[((UserViolin['Job'] == 'I am a student') & (UserViolin['Code_Year'] != 'I have never written code and I do not want to learn'))\n                        | ((UserViolin['Job'] != 'I am a student') & (UserViolin['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nUserViolin = UserViolin.dropna()  \nUserViolin['Marker'] = np.where(UserViolin['Job'] == 'I am a student', 'Student', 'Data Scientist')\nUserViolin = UserViolin.sort_values(by='Marker', ascending=True).sort_values(by='Country', ascending=False)\n\n\nsns.set()\nf, ax = plt.subplots(figsize=(20, 10))\nax = sns.violinplot(x=\"Country\", y=\"Age\", hue=\"Marker\", data=UserViolin, palette=\"muted\", split=True, scale=\"count\", inner=\"quartile\", scale_hue=True, bw=.4).set_title('Age Distribution of Data Scientist \/ Student (Scaled)',fontsize=20)","994a3049":"sns.set()\nf, ax = plt.subplots(figsize=(20, 10))\nax = sns.violinplot(x=\"Country\", y=\"Age\", hue=\"Marker\", data=UserViolin, palette=\"muted\", split=True, scale=\"count\", inner=\"quartile\", scale_hue=False, bw=.4).set_title('Age Distribution of Data Scientist \/ Student (Actual)',fontsize=20)","d37a8ef7":"Student = pd.DataFrame(MultiResponses[['Q7','Q4','Q3']]).rename(columns={'Q7' : 'Job', 'Q4' : 'Education', 'Q3' : 'Country'})\nStudent = Student[(Student['Job'] == 'I am a student')]\nStudent = Student[(Student['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil']))]\nCounter = 1\nStudent['#Student'] = Counter\n\nsns.set()\nStudent = Student.pivot_table(values='Job', index='Education', columns='Country', aggfunc='count')\nStudent = Student[['USA','UK','Russia', 'India','Germany', 'China', 'Brazil']]\nStudent = Student.reindex(['I prefer not to answer',\n                             'No formal education past high school',\n                             'Some college\/university study without earning a bachelor\u2019s degree',\n                             'Bachelor\u2019s degree',\n                             'Professional degree',\n                             'Master\u2019s degree',\n                             'Doctoral degree'])\n\nf, ax = plt.subplots(figsize=(9, 6))\nsns.heatmap(Student, cmap=\"Blues\", vmin=-50, vmax=500, annot=True, fmt=\".0f\", linewidths=.5, ax=ax).set_title('Degrees attained or plan to attain within the next 2 years in Student Group',fontsize=15)","013f65dc":"UserIncome = pd.DataFrame(MultiResponses[['Q9','Q3','Q7','Q24','Q26']]).rename(columns={'Q9' : 'Compensation','Q3' : 'Country','Q7' : 'Job','Q24' : 'Code_Year','Q26' : 'Are_You_DS'})\nUserIncome = UserIncome[(UserIncome['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil']))]\nUserIncome = UserIncome.replace({'Compensation': '0-10,000'}, 5000)\nUserIncome = UserIncome.replace({'Compensation': '10-20,000'}, 15000)\nUserIncome = UserIncome.replace({'Compensation': '20-30,000'}, 25000)\nUserIncome = UserIncome.replace({'Compensation': '30-40,000'}, 35000)\nUserIncome = UserIncome.replace({'Compensation': '40-50,000'}, 45000)\nUserIncome = UserIncome.replace({'Compensation': '50-60,000'}, 55000)\nUserIncome = UserIncome.replace({'Compensation': '60-70,000'}, 65000)\nUserIncome = UserIncome.replace({'Compensation': '70-80,000'}, 75000)\nUserIncome = UserIncome.replace({'Compensation': '80-90,000'}, 85000)\nUserIncome = UserIncome.replace({'Compensation': '90-100,000'}, 95000)\nUserIncome = UserIncome.replace({'Compensation': '100-125,000'}, 112500)\nUserIncome = UserIncome.replace({'Compensation': '125-150,000'}, 137500)\nUserIncome = UserIncome.replace({'Compensation': '150-200,000'}, 187500)\nUserIncome = UserIncome.replace({'Compensation': '200-250,000'}, 225000)\nUserIncome = UserIncome.replace({'Compensation': '250-300,000'}, 275000)\nUserIncome = UserIncome.replace({'Compensation': '300-400,000'}, 350000)\nUserIncome = UserIncome.replace({'Compensation': '400-500,000'}, 450000)\nUserIncome = UserIncome.replace({'Compensation': '500,000+'}, 500000)\nUserIncome = UserIncome[(UserIncome['Compensation'] != 'I do not wish to disclose my approximate yearly compensation')]\nUserIncome['Compensation'] = UserIncome['Compensation'].astype('float', copy=False)\nUserIncome = UserIncome[((UserIncome['Job'] == 'I am a student') & (UserIncome['Code_Year'] != 'I have never written code and I do not want to learn'))\n                        | ((UserIncome['Job'] != 'I am a student') & (UserIncome['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nUserIncome = UserIncome.dropna()  \nUserIncome['Marker'] = np.where(UserIncome['Job'] == 'I am a student', 'Student', 'Data Scientist')\nUserIncome = UserIncome.sort_values(by='Marker', ascending=True).sort_values(by='Country', ascending=False)\n\n\nsns.set()\nf, ax = plt.subplots(figsize=(20, 10))\nax = sns.violinplot(x=\"Country\", y=\"Compensation\", hue=\"Marker\", data=UserIncome, palette=\"muted\", split=True, scale=\"count\", inner=\"quartile\", scale_hue=True, bw=.4).set_title('Compensation Distribution of Data Scientist \/ Student (Scaled)',fontsize=20)\n\n","73ec1ade":"sns.set()\nf, ax = plt.subplots(figsize=(20, 10))\nax = sns.violinplot(x=\"Country\", y=\"Compensation\", hue=\"Marker\", data=UserIncome, palette=\"muted\", split=True, scale=\"count\", inner=\"quartile\", scale_hue=False, bw=.4).set_title('Compensation Distribution of Data Scientist \/ Student (Actual)',fontsize=20)","17b79ed4":"UserJobRatio = pd.DataFrame(MultiResponses[['Q3','Q7','Q6','Q24','Q26']]).rename(columns={'Q3' : 'Country','Q7' : 'Job','Q6' : 'Title','Q24' : 'Code_Year','Q26' : 'Are_You_DS'})\nUserJobRatio = UserJobRatio[(UserJobRatio['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil' ]))]\nUserJobRatio = UserJobRatio[((UserJobRatio['Job'] == 'I am a student') & (UserJobRatio['Code_Year'] != 'I have never written code and I do not want to learn'))\n                        | ((UserJobRatio['Job'] != 'I am a student') & (UserJobRatio['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nUserJobRatio = UserJobRatio.dropna()  \nUserJobRatio['Marker'] = np.where(UserJobRatio['Job'] == 'I am a student', 'Student', 'Data Scientist')\nUserJobRatio = UserJobRatio.sort_values(by='Marker', ascending=True).sort_values(by='Country', ascending=False)\n\nUserJobRatio_Summary = pd.DataFrame(UserJobRatio[['Country','Marker']])\nCounter = 1\nUserJobRatio_Summary['#Counter'] = Counter\nPivot = pd.pivot_table(UserJobRatio_Summary, values='#Counter', index=['Country'], columns=['Marker'], aggfunc=np.sum)\nPivot['Ratio'] = Pivot['Data Scientist'] \/ Pivot['Student']\nPivot","57749774":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nCodeTimeIncome = pd.DataFrame(MultiResponses[['Q9','Q3','Q7','Q8','Q26']]).rename(columns={'Q9' : 'Compensation','Q3' : 'Country','Q7' : 'Job','Q8' : 'Exp_Year','Q26' : 'Are_You_DS'})\nCodeTimeIncome = CodeTimeIncome[(CodeTimeIncome['Country'].isin(['USA','UK','Russia', 'India']))]\n\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '0-10,000'}, 5000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '10-20,000'}, 15000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '20-30,000'}, 25000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '30-40,000'}, 35000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '40-50,000'}, 45000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '50-60,000'}, 55000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '60-70,000'}, 65000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '70-80,000'}, 75000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '80-90,000'}, 85000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '90-100,000'}, 95000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '100-125,000'}, 112500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '125-150,000'}, 137500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '150-200,000'}, 187500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '200-250,000'}, 225000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '250-300,000'}, 275000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '300-400,000'}, 350000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '400-500,000'}, 450000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '500,000+'}, 500000)\nCodeTimeIncome = CodeTimeIncome[(CodeTimeIncome['Compensation'] != 'I do not wish to disclose my approximate yearly compensation')]\nCodeTimeIncome['Compensation'] = CodeTimeIncome['Compensation'].astype('float', copy=False)\n\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '0-1'}, 0.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '1-2'}, 1.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '2-3'}, 2.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '3-4'}, 3.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '4-5'}, 4.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '5-10'}, 7.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '10-15'}, 12.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '15-20'}, 17.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '20-25'}, 22.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '25-30'}, 27.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '30 +'}, 30.0)\nCodeTimeIncome['Exp_Year'] = CodeTimeIncome['Exp_Year'].astype('float', copy=False)\n\nCodeTimeIncome = CodeTimeIncome[((CodeTimeIncome['Job'] != 'I am a student') & (CodeTimeIncome['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nCodeTimeIncome = CodeTimeIncome.dropna()\n\nCodeTimeIncome = CodeTimeIncome.sort_values(by='Country', ascending=False)\n\nsns.lmplot(x=\"Exp_Year\", y=\"Compensation\", col=\"Country\", data=CodeTimeIncome, aspect=.5, height=8, fit_reg=True, x_estimator=np.mean);","1568121c":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\nCodeTimeIncome = pd.DataFrame(MultiResponses[['Q9','Q3','Q7','Q8','Q26']]).rename(columns={'Q9' : 'Compensation','Q3' : 'Country','Q7' : 'Job','Q8' : 'Exp_Year','Q26' : 'Are_You_DS'})\nCodeTimeIncome = CodeTimeIncome[(CodeTimeIncome['Country'].isin(['Germany', 'China', 'Brazil']))]\n\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '0-10,000'}, 5000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '10-20,000'}, 15000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '20-30,000'}, 25000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '30-40,000'}, 35000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '40-50,000'}, 45000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '50-60,000'}, 55000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '60-70,000'}, 65000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '70-80,000'}, 75000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '80-90,000'}, 85000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '90-100,000'}, 95000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '100-125,000'}, 112500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '125-150,000'}, 137500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '150-200,000'}, 187500)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '200-250,000'}, 225000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '250-300,000'}, 275000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '300-400,000'}, 350000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '400-500,000'}, 450000)\nCodeTimeIncome = CodeTimeIncome.replace({'Compensation': '500,000+'}, 500000)\nCodeTimeIncome = CodeTimeIncome[(CodeTimeIncome['Compensation'] != 'I do not wish to disclose my approximate yearly compensation')]\nCodeTimeIncome['Compensation'] = CodeTimeIncome['Compensation'].astype('float', copy=False)\n\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '0-1'}, 0.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '1-2'}, 1.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '2-3'}, 2.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '3-4'}, 3.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '4-5'}, 4.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '5-10'}, 7.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '10-15'}, 12.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '15-20'}, 17.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '20-25'}, 22.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '25-30'}, 27.5)\nCodeTimeIncome = CodeTimeIncome.replace({'Exp_Year': '30 +'}, 30.0)\nCodeTimeIncome['Exp_Year'] = CodeTimeIncome['Exp_Year'].astype('float', copy=False)\n\nCodeTimeIncome = CodeTimeIncome[((CodeTimeIncome['Job'] != 'I am a student') & (CodeTimeIncome['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nCodeTimeIncome = CodeTimeIncome.dropna()\n\nCodeTimeIncome = CodeTimeIncome.sort_values(by='Country', ascending=False)\n\nsns.lmplot(x=\"Exp_Year\", y=\"Compensation\", col=\"Country\", data=CodeTimeIncome, aspect=.5, height=8, fit_reg=True, x_estimator=np.mean);","863838ee":"English = pd.DataFrame(\n    {'USA' : [ '296603003' , '283160411', '95.46'],\n     'UK' : [ '64000000' , '59600000', '97.74'],\n     'Russia' : [ '138312535' , '7574303', '5.48'],\n     'India' : ['1028737436' , '125344737', '12.18'],\n     'Germany' : [ '80600000' , '45400000', '56.00'],\n     'China' : [ '1210000000' , '10000000', '0.01'],\n     'Brazil' : [ '205000000' , '10542000', '5.00']},\n     index = ['Population','English Speaker','English Speaker%'])\nEnglish","29c63977":"UserIncome = pd.DataFrame(MultiResponses[['Q9','Q3','Q7','Q24','Q26']]).rename(columns={'Q9' : 'Compensation','Q3' : 'Country','Q7' : 'Job','Q24' : 'Code_Year','Q26' : 'Are_You_DS'})\nUserIncome = UserIncome[(UserIncome['Country'].isin(['USA','Japan','Australia','China','South Korea','Singapore' ,'India']))]\nUserIncome = UserIncome.replace({'Compensation': '0-10,000'}, 5000)\nUserIncome = UserIncome.replace({'Compensation': '10-20,000'}, 15000)\nUserIncome = UserIncome.replace({'Compensation': '20-30,000'}, 25000)\nUserIncome = UserIncome.replace({'Compensation': '30-40,000'}, 35000)\nUserIncome = UserIncome.replace({'Compensation': '40-50,000'}, 45000)\nUserIncome = UserIncome.replace({'Compensation': '50-60,000'}, 55000)\nUserIncome = UserIncome.replace({'Compensation': '60-70,000'}, 65000)\nUserIncome = UserIncome.replace({'Compensation': '70-80,000'}, 75000)\nUserIncome = UserIncome.replace({'Compensation': '80-90,000'}, 85000)\nUserIncome = UserIncome.replace({'Compensation': '90-100,000'}, 95000)\nUserIncome = UserIncome.replace({'Compensation': '100-125,000'}, 112500)\nUserIncome = UserIncome.replace({'Compensation': '125-150,000'}, 137500)\nUserIncome = UserIncome.replace({'Compensation': '150-200,000'}, 187500)\nUserIncome = UserIncome.replace({'Compensation': '200-250,000'}, 225000)\nUserIncome = UserIncome.replace({'Compensation': '250-300,000'}, 275000)\nUserIncome = UserIncome.replace({'Compensation': '300-400,000'}, 350000)\nUserIncome = UserIncome.replace({'Compensation': '400-500,000'}, 450000)\nUserIncome = UserIncome.replace({'Compensation': '500,000+'}, 500000)\nUserIncome = UserIncome[(UserIncome['Compensation'] != 'I do not wish to disclose my approximate yearly compensation')]\nUserIncome['Compensation'] = UserIncome['Compensation'].astype('float', copy=False)\nUserIncome = UserIncome[((UserIncome['Job'] == 'I am a student') & (UserIncome['Code_Year'] != 'I have never written code and I do not want to learn'))\n                        | ((UserIncome['Job'] != 'I am a student') & (UserIncome['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nUserIncome = UserIncome.dropna()  \nUserIncome['Marker'] = np.where(UserIncome['Job'] == 'I am a student', 'Student', 'Data Scientist')\nUserIncome = UserIncome.sort_values(by='Country', ascending=True).sort_values(by='Marker', ascending=True)\n\n\nsns.set()\nf, ax = plt.subplots(figsize=(20, 10))\nax = sns.violinplot(x=\"Country\", y=\"Compensation\", hue=\"Marker\", data=UserIncome, palette=\"muted\", split=True, scale=\"count\", inner=\"quartile\", scale_hue=True, bw=.4).set_title('Compensation Distribution of Data Scientist \/ Student (Scaled)',fontsize=20)","7db296d4":"Employer_Chance = pd.DataFrame(MultiResponses[['Q10','Q3','Q7','Q26']]).rename(columns={'Q10' : 'ML_Status','Q3' : 'Country','Q7' : 'Job', 'Q26' : 'Are_You_DS'})\nEmployer_Chance = Employer_Chance[(Employer_Chance['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil','Japan','Australia','South Korea','Singapore']))]\nEmployer_Chance = Employer_Chance[((Employer_Chance['Job'] != 'I am a student') & (Employer_Chance['Are_You_DS'].isin(['Definitely yes','Probably yes','Maybe'])))]\nEmployer_Chance = Employer_Chance.dropna()\n\nCounter = 1\n\nEmployer_Chance_Total = Employer_Chance\nEmployer_Chance_Total = pd.DataFrame(Employer_Chance_Total[['ML_Status', 'Country']])\nEmployer_Chance_Total['#Counter'] = Counter\nPivot_Total = pd.pivot_table(Employer_Chance_Total, values='#Counter', index=['ML_Status'], columns=['Country'], aggfunc=np.sum)\nPivot_Total = Pivot_Total[['USA','UK','Russia', 'India','Germany', 'China', 'Brazil','Japan','Australia','South Korea','Singapore']]\nPivot_Total = Pivot_Total.reindex(['I do not know',\n         'No (we do not use ML methods)',\n         'We are exploring ML methods (and may one day put a model into production)',\n         'We use ML methods for generating insights (but do not put working models into production)',\n         'We recently started using ML methods (i.e., models in production for less than 2 years)',\n         'We have well established ML methods (i.e., models in production for more than 2 years)'  ])\n\n\nf, ax = plt.subplots(figsize=(12, 6))\nsns.heatmap(Pivot_Total, cmap=\"Blues\", vmin=-50, vmax=700, annot=True, fmt=\"d\", linewidths=.5, ax=ax).set_title('Q10. Does your current employer incorporate machine learning methods into their business?',fontsize=15)","14608877":"Student = pd.DataFrame(MultiResponses[['Q7','Q4','Q3']]).rename(columns={'Q7' : 'Job', 'Q4' : 'Education', 'Q3' : 'Country'})\nStudent = Student[(Student['Job'] == 'I am a student')]\nStudent = Student[(Student['Country'].isin(['USA','UK','Russia', 'India','Germany', 'China', 'Brazil','Japan','Australia','South Korea','Singapore']))]\nCounter = 1\nStudent['#Student'] = Counter\n\nsns.set()\nStudent = Student.pivot_table(values='Job', index='Education', columns='Country', aggfunc='count')\nStudent = Student[['USA','UK','Russia', 'India','Germany', 'China', 'Brazil','Japan','Australia','South Korea','Singapore']]\nStudent = Student.reindex(['I prefer not to answer',\n                             'No formal education past high school',\n                             'Some college\/university study without earning a bachelor\u2019s degree',\n                             'Bachelor\u2019s degree',\n                             'Professional degree',\n                             'Master\u2019s degree',\n                             'Doctoral degree'])\n\nf, ax = plt.subplots(figsize=(12, 6))\nsns.heatmap(Student, cmap=\"Blues\", vmin=-50, vmax=500, annot=True, fmt=\".0f\", linewidths=.5, ax=ax).set_title('Degrees attained or plan to attain within the next 2 years in Student Group',fontsize=15)","d9f0ee9c":"### Findings from observe compensation graph:\n1. USA data scientists got the highest compensation\n2. Germany is 2nd highest, UK is 3rd.\n3. Russia, India, China and Brazil recorded relatively lower compensation\n4. Students are poor across all countries\n\n*(Comment: There are value lesser than zero compensation. It is caused by graph smoothing of Seaborn, there is no minus compensation in raw data. Hope to not misunderstanding and please excuse its appearance)*\n\n#### It is prime reason to why the international companies want to build data analytics center outside of USA. Assuming data scientist's skills are similar across the world, companies will find place where the cost are the lowest. Data analytics, which needs to processing repeating large simple data, will be key target to migration\n\nOverall, compensation view, Russia, India, China and Brazil would have competitive advantage than other countries.\n","4d4b997f":"## - Compensation Growth Expectation\n\n\nMost of jobs have shown very strong correlation between work experience year and compensation, because we expect working skill will improve year by year. But the companies' view is totally different. They want to pay stable salary over years on the simple and repeating task. Anyway, it was different by countries. Linear graph of correlation between work experience year and compensation by countries is below:","0fb8922e":"Above graph was adjusted by each countries scale for understanding. To comparison, we should see actual. ","02e26b68":"I did not know there are many english speakers in Germany before.  Anyway, between India and China - India has more English speakers, and there is one more supportive evidence: \"English enjoys the status of subsidiary official language but is the most important language for national, political, and commercial communication\" from CIA's World Fact Book (https:\/\/www.cia.gov\/library\/publications\/the-world-factbook\/geos\/in.html). India added competitive advantage to attract the data analytics centers of the international companies. \n\n\n## Conclusion: India has best country to build the data analytics center from the angles of Labor force, Compensation and Language.","3d05ee4b":"### Findings from observe demography graph:\n1. Data scientists' average age are similar across the world\n2. USA had the largest number in both data scientists and students\n3. USA data scientists could relatively work older (age) than other countries\n4. Not enough students from UK, Russia, Germany and Brazil\n5. India: Many students exists on age between 10s and 20s\n\nWe need to focus finding (5) - many population on age 10s\/20s in India, even # of students are higher than USA!\n\nWith this information, let's check students' level of academic degrees.","e1076b14":"Due to many students, China and India show the lowest on Job Demand-Supply Ratio. It means that India and China data scientist's average compensation expected to be stable for years. Students in Russia, UK, Germany, Brazil and USA would be easy to find job  comparatively.","933d9277":"Now, we have top 7 countries, which eligible for the data analytics center: \n\n### **[ USA , India , China , Russia , Brazil , Germany , UK ]**\n\n\nNext, we need to find out which country is best option to choose\n","eb82b630":"## **Finding Country to Build Data Analytics Center**\n\n<br>\nLet's find out by using 2018 Kaggle ML & Data Science Survey.<br>\nThere are some conditions for finding the center's location:<br>\n\n**A. Sufficient labor force supply on data science field for years from now** <br>\n**B. Has competitive advantage on data scientist's compensation**<br>\n   i. Average compensation should be lower<br>\n   ii. Relatively less number of employers<br>\n   iii. Compensation growth rate should be lower<br>\n**C. English Availability**<br>\n*(Comment: I would not handle each country's land price, price index, political stability and information security, to make problem simple. But if you are real head of data analytics department, then you may consider all these factors)*<br>\n<br>\n<br>\nThe data analytics center should be located country, which many data scientists lived. Graph shows the top respondents by countries on survey, excluding of 'other' and 'I do not wish to disclose my location'<br>\n*(Comment: 'South Korea' and 'Republic of Korea' are same country - survey had two selections on one country. I used 'South Korea' because it is better known over the world)*","adb29fa4":"**Advice 2 for ex-US Kagglers**<br>\nChange to using advanced ML skill are different by countries. On survey, Question 10 was \"Does your current employer incorporate machine learning methods into their business?\". You can estimate your countries and employers give you to using advanced technology by this question.  Here is result - USA and India might be a land of opportunities. Germany and Russia would be alternative option to choose, because we already checked, these countries has relative lack of #students relatively.","b45ae55f":"\n## English Availability\n\nAs the international company, fluent in English is one of key consideration.  Checked English-speaking population of USA , India , China , Russia , Brazil , Germany and UK \n\n*Source: List of countries by English-speaking population, Wikipedia, https:\/\/en.wikipedia.org\/wiki\/List_of_countries_by_English-speaking_population*","4e872115":"### So, in sum, India and China had large number of young students who want to be data scientist. India, especially, they plan to have bacholor degree as highest level of education, it means that india would provide sufficient labor force for a long time quickly.","4413fdc3":"## - Number of Employers\n\n\nLet's remind Economics Basic 101 Class. Even if plenty of labor forces exists, but there are more employers than employees: compensation (as labor price) will rise up. Therefore, existing relatively less number of employers in country, it would potential factor to prevent increasing total compensation cost.\n\nOn survey, I could not find question to finding employers' need on data scientist, So, I would like to propose alternative way:\n\n#### Job_Demand_Supply_Ratio = #Data_Scientist \/ #Student\n\n\nIt is very simple formula; the ratio of 'Labor Demand' divided by 'Labor Supply'. The ratio can easily compare level of hard to finding job as student and unemployed. \nIf ratio value is high - it means employers more existing relatively.\nIf ratio value is low - it means job seekers more existing relatively.\nRun the code and check out the result\n","b7f91df1":"## **Agenda**\n- Introduction\n- Finding Countries\n- Advice for ex-US Kagglers\n","ec7d5e21":"![](https:\/\/i.imgur.com\/WS0VoqJ.jpg)\n","ee842e76":"## - Data Scientist's compensation\n\nUsing compensation answers, instead of age, it makes easy to compare between countries. Middle value used for representative value on compensation range, as same as age.\n","847b060c":"Thank you very much for reading my kernel, and it will be updated when I found something from Kaggle Survey 2018. <br>\nAnd, most of all, I hope this Kernel could be good opportunity to develop a greater understanding of each other : data scientist across the world.","285c527b":"## **Introduction**\n\nAssume you are the head of data analytics department (such as Decision Management, Data Research, Big Data Dept. whatever called) of the international company - head quarter in USA. The field of data science and machine learning is one of the hottest industries, but labor force supply has been limited; compensation cost has increased for the years. Therefore, you might face cost optimization someday. Common solution idea is to build the Center to centralize data analytics. **Problem is where would it be located: USA, India, China, Russia and Germany? What's your call?**\n","6f9cc0cd":"Above graph was adjusted by each countries scale for understanding. To comparison, we should see actual. ","0e4cf20f":"**Advice 3 for India Student**<br>\n\nI have no idea for now... why India students are concentrated on Bachelor\u2019s degree. When I find rational reason, I will update it.  Anyway, it is clearly not that usual, comparing with other countries' distribution. I think there are reasons that DS and ML students in other countries want Master degree and Doctor degree. And most of india student finished Bachelor degree as highest degree, relative value of Master and Doctor degree might rise, then it may open your another opportunities. ","a9d1c2d6":"### Findings from observe linear correlation : Compensation vs. Experienced Year:\n1. USA shows highest compensation growth rate. Germany is 2nd place.\n2. UK data scientist got top salary when they worked around 17 years\n3. India shows lowest compensation growth with smaller variance\n4. Except outlier on 30+ experienced years, China also shows stable compensation growth rate\n\n### To be short, China and India would be best place to build the data analytics center on compensation view.\n","c7ce0bb4":"## Advice for ex-US Kagglers\n<br>\nSeriously, I do apologize if I offended anyone. I knew some people and countries did not like to comment about compensation or salary. All the top 7 countries has contributed  technology development of data science and machine learnings and there are plenty of opportunities in the industry. However, what I want to  emphasize - some of these opportunities are not for individual data scientists, but for the international companies. <br>\n<br>\n**Advice 1 for ex-US Kagglers**<br>\nIf you are a data scientist of ex-US country, with same skill and knowledge as USA data scientist: where you work would decide your compensation. Hope to find out country where pay as much as your value. Here is my personal recommendation in top 20 user countries (benchmark as USA, India and China)  without consideration language difference. USA and Australia shows very similar distribution and having the highest compensation level. And another similar group is South Korea, Singapore and Japan.","781cbf77":"### Findings from observe student degree:\n1. Outlier found : India student with Bachelor degree, the highest number across countries\n2. Students tend to get Master degree in USA, India and China\n3. USA has the highest # of Doctor degree among all students\n4. Germany and UK  tend to prefer Master degree","e7a1e8a8":"## **Sufficient Future Data Scientist**\n<br>\nThe demographical view will be good tool for expectation, and need to set definition for categorizing. I assumed....\n\n**Student**<br>\n= Student who wants to be data scientist or has interest data analytics at least<br>\n= Kaggers who answered 'I am student' on Q7 and did not answer 'I have never code and I do not want to learn' on Q24<br>\n<br>\n**Data Scientist**<br>\n= Worker, in any industry including unemployed, who involved data science field<br>\n= Kaggers who did not answer 'I am student' on Q7 and answer 'Definitely yes', 'Probability yes', 'Maybe' on Q26 (Are you a data scientist?)<br>\n<br>\n**Ages**<br>\n= Used middle value of range<br>\n<br>\nThen demography graph of Data Scientist and Student looks like this:    "}}