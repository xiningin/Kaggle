{"cell_type":{"21f21337":"code","11187d9d":"code","f4191eff":"code","85170a56":"code","c6188cd5":"code","672243cb":"code","692feda7":"code","f2d6434e":"code","def31b71":"code","4729c0c9":"code","67ab9453":"code","a35e9012":"code","307c140b":"code","eb0d076d":"code","4211e58c":"code","155eaef2":"code","47cfea23":"code","bba9926b":"code","a58cc8da":"code","32a9d69c":"code","7da5c71a":"code","1dddba51":"code","06f3d70d":"code","0ec504a5":"code","379a7d11":"code","7bcaf1a8":"code","8388cf6b":"code","a60cba90":"code","e5a223f7":"markdown","bb9ebeda":"markdown","f540e7e3":"markdown","cf6d5c62":"markdown"},"source":{"21f21337":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport tensorflow as tf\nfrom tensorflow import keras","11187d9d":"train_path = '..\/input\/forest-cover-type-kernels-only\/train.csv.zip'\n\ndf = pd.read_csv(train_path)\ndf.head()","f4191eff":"df.columns","85170a56":"print(df.iloc[0])","c6188cd5":"df.shape  # 15,120 rows and 56 columns","672243cb":"corr = df.corr()\ncorr.style.background_gradient(cmap='coolwarm', axis=None)","692feda7":"df = df.drop(['Aspect', 'Soil_Type7', 'Soil_Type15'], axis=1)\ndf.head(1)","f2d6434e":"# temp = df.drop(['soil', 'wild', 'Cover_Type', 'Id'], axis=1)\n# temp\ntemp = df.drop(['Cover_Type', 'Id'], axis=1)\ntemp.iloc[0]","def31b71":"temp = (temp-temp.min())\/(temp.max()-temp.min()).astype(np.float32)  # Using min-max standardization\ntemp.describe()","4729c0c9":"temp","67ab9453":"from keras.utils import to_categorical\n\nall_data = temp.values\nprint(all_data[0])\n\nall_labels = to_categorical(df['Cover_Type'])\nprint(all_labels[: 2])","a35e9012":"assert(len(all_labels) == len(all_data))","307c140b":"print(len(all_data))\n\ntrain_size = 12096\n\ntrain_data = all_data[: train_size]\nvalid_data = all_data[train_size: ]\n\ntrain_labels = all_labels[: train_size]\nvalid_labels = all_labels[train_size: ]\n","eb0d076d":"print(len(train_data[0]))","4211e58c":"model = keras.models.Sequential([\n    keras.layers.Dense(64),\n    keras.layers.LeakyReLU(),\n    keras.layers.Dense(8, 'softmax'),\n])\n\nmodel.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics=['acc'])","155eaef2":"my_cb = tf.keras.callbacks.EarlyStopping(monitor='loss', patience=3)\n\nhistory = model.fit(train_data, train_labels, epochs=200,\n              validation_data=(valid_data, valid_labels), \n              callbacks=[my_cb])","47cfea23":"print(history.history.keys())\nepochs = len(history.history['loss'])\nepochs","bba9926b":"y1 = history.history['loss']\ny2 = history.history['val_loss']\nx = np.arange(1, epochs+1)\n\nplt.plot(x, y1, y2)\nplt.legend(['loss', 'val_loss'])\nplt.xlabel('Epochs')\nplt.ylabel('Loss')\nplt.tight_layout()","a58cc8da":"y1 = history.history['acc']\ny2 = history.history['val_acc']\nx = np.arange(1, epochs+1)\n\nplt.plot(x, y1, y2)\nplt.legend(['acc', 'val_acc'])\nplt.xlabel('Epochs')\nplt.ylabel('Acc')\nplt.tight_layout()","32a9d69c":"model.evaluate(valid_data, valid_labels)","7da5c71a":"test_path = '..\/input\/forest-cover-type-kernels-only\/test.csv.zip'\n\ntest_df = pd.read_csv(test_path)","1dddba51":"test_df.head()","06f3d70d":"test_df = test_df.drop(['Aspect', 'Soil_Type7', 'Soil_Type15'], axis=1)\n\nid_nums = test_df['Id']","0ec504a5":"temp = test_df.drop(['Id'], axis=1)\ntemp = (temp-temp.min())\/(temp.max()-temp.min()).astype(np.float32)\n\nall_data = temp.values\nall_data","379a7d11":"answer = model.predict(all_data)","7bcaf1a8":"classes = answer.argmax(axis=-1)\nclasses","8388cf6b":"my_final = pd.DataFrame({'id': id_nums, 'Cover_Type': classes})\nmy_final.head()","a60cba90":"kaggle_output_path = '.\/submission.csv'\nmy_final.to_csv(kaggle_output_path, index=False)","e5a223f7":"# Data Preprocessing","bb9ebeda":"# Training the model","f540e7e3":"# Make predictions","cf6d5c62":"# Building and compiling the model"}}