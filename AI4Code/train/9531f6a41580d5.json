{"cell_type":{"eaceff42":"code","4980cfd9":"code","acaefe6e":"code","df0710a3":"code","4656d8d9":"code","edd5f442":"code","3cbb3a63":"code","86d2a84e":"code","55a00cf7":"code","a6e9aa41":"code","8309cf8c":"code","b3630e15":"code","5961be45":"code","be42886b":"code","7f2db852":"code","beda8c55":"code","30254dd2":"code","86f03eb6":"code","d0f6e87b":"code","40d12e42":"code","376f5eae":"code","e1ca3ddb":"code","8a952c60":"code","e98e87e7":"code","4c1036cf":"code","191d47be":"code","7590fc53":"code","68df2e74":"code","b60ba8ed":"code","82cfac6e":"markdown","d17ca6a4":"markdown","6da99e00":"markdown","185b364a":"markdown","ae5f5169":"markdown","dd5d3c9f":"markdown","20a503e8":"markdown","22abf955":"markdown","1ab12956":"markdown","8ffb62d8":"markdown","0ed691ac":"markdown","86591d47":"markdown"},"source":{"eaceff42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\") #Python taraf\u0131ndan verilen hatalar\u0131 g\u00f6sterme\n\n\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","4980cfd9":"train=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test[\"PassengerId\"]","acaefe6e":"train.columns","df0710a3":"train.head()","4656d8d9":"train.describe()","edd5f442":"train.info()","3cbb3a63":"def bar_plot(variable):\n    \"\"\"\n        input: variable ex: \"Sex\"\n        output: bar plot & value count\n    \"\"\"\n    # get feature\n    var = train[variable]\n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n \n    ","86d2a84e":"category1=[\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\n\nfor c in category1:\n    bar_plot(c)\n    ","55a00cf7":"category2 = [\"Cabin\", \"Name\", \"Ticket\"]\nfor c in category2:\n    print(\"{} \\n\".format(train[c].value_counts()))","a6e9aa41":"def plot_hist(variable):\n    plt.figure(figsize = (9,3))\n    plt.hist(train[variable], bins = 50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","8309cf8c":"numericVar = [\"Fare\", \"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","b3630e15":"# Pclass vs Survived\ntrain[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by=\"Survived\",ascending=False)","5961be45":"# Sex vs Survived\ntrain[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","be42886b":"# Sibsp vs Survived\ntrain[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","7f2db852":"# Parch vs Survived\ntrain[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\",ascending = False)","beda8c55":"#Pclass vs Age\ntrain[[\"Pclass\",\"Age\"]].groupby([\"Pclass\"],as_index=False).mean().sort_values(by=\"Age\",ascending=False)","30254dd2":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","86f03eb6":"train.loc[detect_outliers(train,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","d0f6e87b":"# drop outliers\ntrain = train.drop(detect_outliers(train,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"]),axis = 0).reset_index(drop = True)","40d12e42":"train_len=len(train)\ntrain=pd.concat([train,test],axis=0).reset_index(drop=True)\n","376f5eae":"train.head()","e1ca3ddb":"train.columns[train.isnull().any()]","8a952c60":"# ka\u00e7 tane oldugunu g\u00f6relim\ntrain.isnull().sum()","e98e87e7":"#dataframe de nerede olduguna bakal\u0131m\ntrain[train[\"Embarked\"].isnull()]","4c1036cf":"#datay\u0131 fare den yola c\u0131karak doldurmaya cal\u0131sal\u0131m\n\ntrain.boxplot(column=\"Fare\",by=\"Embarked\")\nplt.show()","191d47be":"train[\"Embarked\"]=train[\"Embarked\"].fillna(\"C\")","7590fc53":"train[train[\"Embarked\"].isnull()]","68df2e74":"train[train[\"Fare\"].isnull()]","b60ba8ed":"train[\"Fare\"] = train[\"Fare\"].fillna(np.mean(train[train[\"Pclass\"] == 3][\"Fare\"]))","82cfac6e":"<a id = '6'><\/a><br>\n    \n# Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n* Pclass - Age","d17ca6a4":"# \u0130ntroduction\n\nThe sinking of Titanic is one of the most notorious shipwrecks in the history. In 1912, during her voyage, the Titanic sank after colliding with an iceberg, killing 1502 out of 2224 passengers and crew.\n\n<font color ='blue'>\nConcent:\n\n1. [Load and check Data](#1)\n1. [Veriable Description](#2)\n    \n    * [Univarite Variable Analysis](#3)\n        * [Categorical Variable ](#4)\n        * [Numerical Variable ](#5)\n1. [Basic Data Analysis](#6)\n1. [Outlier Detection](#7)\n1. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)","6da99e00":"<a id = '1'><\/a><br>\n# Load and check Data","185b364a":"* float64(2) : Fare ve Age \n* int64(5) :Pclass, sibsp, parch, passengerId and survived\n* object(5) :Cabin, embarked, ticket, name and sex","ae5f5169":"<a id = '5'><\/a><br>\n## Numerical Variable","dd5d3c9f":"<a id = '7'><\/a><br>\n# Outlier Detection","20a503e8":" <a id = '10'><\/a><br>\n## Fill Missing Value\n\n* Embarked has 2 missing value\n* Fare has only 1","22abf955":"<a id = '1'><\/a><br>\n# Veriable Description\n\n1. PassengerId: unique id number to each passenger\n1. Survived: passenger survive(1) or died(0)\n1. Pclass: passenger class\n1. Name: name\n1. Sex: gender of passenger\n1. Age: age of passenger\n1. SibSp: number of siblings\/spouses\n1. Parch: number of parents\/children\n1. Ticket: ticket number\n1. Fare: amount of money spent on ticket\n1. Cabin: cabin category\n1. Embarked: port where passenger embarked (C = Cherbourg, Q = Queenstown, S = Southampton)","1ab12956":"<a id = '9'><\/a><br>\n## Find Missing Value","8ffb62d8":"<a id = '4'><\/a><br>\n## Categorical Variable\n","0ed691ac":" <a id = '8'><\/a><br>\n # Missing Value\n* Find Missing Value\n* Fill Missing Value","86591d47":"<a id = '3'><\/a><br>\n# Univarite Variable Analysis\n* Categorical Variable: Survived,Sex,Pclass,Embarked,Cabin,Name,Ticket,Sibsp and parch\n* Numerical Variable:Age,Fare and passenger\u0130d"}}