{"cell_type":{"2185c806":"code","5b7ad98b":"code","cf2fdd50":"code","a41c0e25":"code","fbac074f":"code","489c8007":"code","e491a9bd":"code","1c38541a":"code","19414552":"code","8a632445":"code","92539aac":"code","b33e2a4f":"code","1a035ee2":"code","c327f929":"markdown","6a1ac872":"markdown","a526ce26":"markdown","4ec72ad9":"markdown","c9728f1b":"markdown","17af9493":"markdown","f89b96d5":"markdown"},"source":{"2185c806":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nimport re\nfrom datetime import *\n\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport plotly.graph_objects as go\nimport plotly.express as px\n# import chart_studio\n# import chart_studio.plotly as py\n\nimport seaborn as sns\nimport time\n\nfrom sklearn import linear_model\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import cross_val_score, train_test_split, KFold\nfrom sklearn.metrics import r2_score\nfrom sklearn.preprocessing import StandardScaler\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b7ad98b":"df_index = pd.read_csv('..\/input\/evol-metricas-prestadores\/index_50.csv')\ndf_metricas = pd.read_csv('..\/input\/evol-metricas-prestadores\/metricas_prestador_plan.csv')\n\n# df_index = pd.read_csv('data\/index_50.csv')\n# df_metricas = pd.read_csv('data\/metricas_prestador_plan.csv')\n\n\nprint(df_metricas.shape)\ndf_metricas.sample(3)","cf2fdd50":"df_procedimientos = pd.read_csv('..\/input\/evol-metricas-prestadores\/procedimientos.csv')\n# df_procedimientos = pd.read_csv('data\/procedimientos.csv')\n\nprint(df_procedimientos.shape)\ndf_procedimientos.sample(3)\n","a41c0e25":"fig, ax = plt.subplots(figsize=(16,8))\nsns.set_theme(style=\"whitegrid\")\nsns.barplot(y = 'afiliado_count', x = 'Periodo', data = df_metricas, palette=\"Blues_d\", ax = ax).\\\n    set(title='Evoluci\u00f3n mensual - Todos los prestadores')\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right')\nplt.show()","fbac074f":"aa = df_metricas.groupby(['Prestador_ID', 'Agrupador_Plan']).Periodo.count()\nsns.histplot(aa.values);","489c8007":"df = pd.DataFrame(aa).reset_index(drop = False)\ndf.groupby('Agrupador_Plan')\nmask_PP2 = df.Agrupador_Plan == 'PP2'\nprint('Cantidad de prestadores con servicios para el plan PP2: ', mask_PP2.sum(), 'de 98\\n')\nfor i in df.Agrupador_Plan.unique():\n    mask = df.Agrupador_Plan == i \n    print(i, mask.sum())","e491a9bd":"df = df_metricas.copy()\ndf.drop(columns = ['Prestador_ID'], inplace = True)\ncol_numericas = [i for i in df.columns if df.loc[:,i].apply(np.isreal).all()]\ncol_numericas","1c38541a":"# ### Creamos la matriz de correlacion y ordenos de mayor a menor\nccc = df[col_numericas].corr()\n# ccc\n\nplt.figure(figsize=(20, 8))\n# define the mask to set the values in the upper triangle to True\nmask = np.triu(np.ones_like(ccc, dtype=np.bool))\nheatmap = sns.heatmap(ccc, mask=mask, vmin=-0.5, vmax=1, annot=True, cmap='BrBG')\nheatmap.set_title('Triangle Correlation Heatmap', fontdict={'fontsize':18}, pad=16);","19414552":"ll = ['afiliado_nunique',\n 'afiliado_count',\n 'sexo_afiliado_prop_mujeres',\n 'monto_prestacion_q0.50',\n#  'monto_prestacion_q0.95',\n#  'edad_afil_median',\n 'edad_afil_q0.50',\n#  'edad_afil_q0.95',\n#  'permanencia_median',\n 'permanencia_q0.50',\n# 'Agrupador_Plan', \n#  'permanencia_q0.95'\n     ]\ndf = df_metricas[ll].sample(100)\nplt.figure(figsize=(20, 10))\npplot = sns.pairplot(df, kind=\"hist\", corner=True);\n# pplot = sns.pairplot(df);","8a632445":"plt.figure(figsize=(10,5))\ng = sns.lineplot(\n    data=df_index,\n    x='Periodo',\n    y= 'Index_50',\n    palette='Set1'\n)\ng.set_xticklabels(labels=df_index.Periodo, rotation=90)\nplt.show()","92539aac":"## Cual es la edad de cada plan\naa = df_metricas.groupby('Agrupador_Plan').agg({'edad_afil_q0.50' : 'mean'}).reset_index(drop = False)\naa['anios'] = round(aa['edad_afil_q0.50']\/12,1)\naa.sort_values(by = 'anios', ascending = False)\n# df_metricas['edad_afil_q0.50']","b33e2a4f":"## Cuales son los prestadores q atienden a gente mayor\n\naa = df_metricas.groupby('Prestador_ID').agg({'edad_afil_q0.50' : 'mean'}).reset_index(drop = False)\naa['anios'] = round(aa['edad_afil_q0.50']\/12,1)\naa.sort_values(by = 'anios', ascending = False)\n\n","1a035ee2":"## independientemente del prestador y del plan analizamos el consumo vs la edad\n\nplt.figure(figsize=(10,5))\ng = sns.scatterplot(\n    data=df_metricas,\n    x='edad_afil_q0.50',\n    y= 'monto_prestacion_q0.50',\n    hue = 'Agrupador_Plan',\n    palette='Set1'\n)\n# g.set_xticklabels(labels=df_index.Periodo, rotation=90)\nplt.show()","c327f929":"## Influencia de la EDAD en el CONSUMO","6a1ac872":"## Oferta de servicios de los prestadores seg\u00fan PLAN\nNO TODOS LOS PRESTADORES OFRECEN SERVICIOS LOS 30 MESES NI A TODOS LOS PLANES","a526ce26":"El gr\u00e1fico anterior permite visualizar claramente el impacto de la pandemia y la cuarentena implementada a mediados de marzo 2020","4ec72ad9":"## Inflaci\u00f3n efectiva ","c9728f1b":"## Afiliados que est\u00e1n hace m\u00e1s tiempo en la OS gastan m\u00e1s??","17af9493":"No todos los prestadores atienden a todos los planes. \nAbajo una lista con la cantidad de prestadores por cada grupo de plan:","f89b96d5":"## Leemos los archivos"}}