{"cell_type":{"2466d52d":"code","a52f89de":"code","485e25c3":"code","ae2f95f6":"code","9b3998d6":"code","cad6dade":"code","86d7496b":"code","49e9ccbb":"code","5da57933":"code","e80c46b2":"code","7a0f5020":"code","06df6a7d":"code","ffc39e77":"markdown","d72d5542":"markdown","b333a57a":"markdown"},"source":{"2466d52d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a52f89de":"# Read and display contents of the first CSV file\n\ndf1 = pd.read_csv('\/kaggle\/input\/betalactamase\/CHEMBL1255124.csv')\ndf1","485e25c3":"# Store all CSV files in a list\n\nimport glob\n\nall_csv = glob.glob('\/kaggle\/input\/betalactamase\/*.csv')\nall_csv","ae2f95f6":"# Combine contents of all CSV files into a single DataFrame\n\ndf = pd.concat( (pd.read_csv(csv)) for csv in all_csv )\ndf","9b3998d6":"# Bar plot of Missing vs Non-Missing Data\n\nimport matplotlib.pyplot as plt\n\n# Data\nmissing = df.pchembl_value.isnull().sum()\nnonmissing = df.pchembl_value.notnull().sum()\n\nx = ['Missing', 'Non-Missing']\ny = [missing, nonmissing]\n\n# Setup plot\nfig, ax = plt.subplots()\n\n# Make bar plot\np = ax.bar(x, y, color = ['#F8766D', '#00BFC4'], ec = 'black')\n\nax.set_title('pChEMBL Missing Data', fontsize=14, fontweight='bold', pad=15)\n#ax.set_xticklabels(x, fontweight='bold')\n\nax.set_ylim(0,70000)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\n\n# Label above bar\nfor index, data in enumerate(y):\n    plt.text(x=index-0.1 , y =data+1000 , s=f\"{data}\" , fontdict=dict(fontsize=14))\n\nfig.set_size_inches(5,4.5)\nplt.show()","cad6dade":"# Non-missing data with pChEMBL value\ndf2 = df[df.pchembl_value.notnull()]\ndf2","86d7496b":"# Group DataFrame by the molecule's chembl_id followed by calculating its mean value\n\ndf2.groupby('molecule_chembl_id').mean()","49e9ccbb":"# Group DataFrame by the molecule's chembl_id followed by calculating its standard deviation value\n\ndf2.groupby('molecule_chembl_id').std()","5da57933":"# High-level overview of the Dataset\n\nprint('Number of unique ChEMBL ID:', str(len(df.molecule_chembl_id.unique()) )  )\nprint('Total number of ChEMBL ID: ', str(len(df)) )\nprint('Number of missing ChEMBL ID: ', str(df.molecule_chembl_id.isnull().sum()) )","e80c46b2":"# Bar plot of Top 50 target proteins\n\ndf2.target_pref_name.value_counts()[0:50].plot.bar(figsize=(24,4), color='#00BFC4', ec='black')\n\nplt.title('Top 50 Targets', fontsize=14, fontweight='black', pad=15)\nplt.show()","7a0f5020":"# Top 10 Bioactivity units\n\ndf2.standard_type.value_counts()[:10].plot.bar(figsize=(8,4), color='#00BFC4', ec='black')\n\nplt.title('Top Bioactivity Units', fontsize=14, fontweight='black', pad=15)\nplt.show()","06df6a7d":"# Histogram of pChEMBL values\n\ndf2.pchembl_value.hist(bins=40, figsize=(8,4), color='#00BFC4', ec='black')\n\nplt.title('Histogram of pChEMBL values', fontsize=14, fontweight='black', pad=15)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.show()","ffc39e77":"# **Basic Exploratory Data Analysis**","d72d5542":"# **Loading the Dataset**","b333a57a":"# **Open Bioinformatics Research Project**\n\nThe dataset that we will be using is the Beta-Lactamase bioactivity dataset compiled from the ChEMBL database (Version 29). \n\nThe dataset is comprised of the bioactivity data for a collection of molecules that has been experimentally tested against 136 variants of Beta-Lactamases."}}