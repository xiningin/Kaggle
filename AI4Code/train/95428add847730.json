{"cell_type":{"5f541ba7":"code","66fa3edb":"code","da78a8f6":"code","f82743a6":"code","b29da40f":"code","fa15a990":"code","3667313f":"code","2d5fcb09":"code","082b0d09":"code","3bc2965a":"code","eb527d5b":"code","24a404af":"code","3ce9131f":"code","9722657b":"code","14ad2031":"code","28560168":"code","bb5e9fa9":"code","3b40de6d":"code","366ce4db":"code","7bbe7aab":"code","cc074040":"code","6c5990cd":"code","51493dea":"code","59968f0a":"code","2cff1c5a":"markdown","7bbd001f":"markdown","06c86ede":"markdown","406bab5d":"markdown","e8e1c7f7":"markdown","c05023e9":"markdown","8a048805":"markdown","2e972d8f":"markdown","082e427a":"markdown"},"source":{"5f541ba7":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        files=os.path.join(dirname, filename)\n        print(files)\n        if files == \"\/kaggle\/input\/petfinder-pawpularity-score\/train\/7fc71b8da143721939715b1cfe22122f.jpg\":\n            break","66fa3edb":"import pandas as pd\nimport numpy as np\ntrain_data=pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/train.csv\")\ntest_data=pd.read_csv(\"\/kaggle\/input\/petfinder-pawpularity-score\/test.csv\")\nimport seaborn as sns\nsns.distplot(train_data[\"Pawpularity\"])","da78a8f6":"#value=train_data[\"Pawpularity\"].quantile(0.5)\n#value2=train_data[\"Pawpularity\"].quantile(0.17)\n#print(value,value2)","f82743a6":"#train_data=train_data[train_data[\"Pawpularity\"] < value]\n#train_data=train_data[train_data[\"Pawpularity\"] > value2]\n#sns.distplot(train_data[\"Pawpularity\"])","b29da40f":"import scipy.stats as stats\nimport matplotlib.pyplot as plt\nstats.probplot(train_data[\"Pawpularity\"], dist=\"norm\", plot=plt)\nplt.show()","fa15a990":"x_train=np.array(train_data.iloc[:,1:13])\nx_test=np.array(test_data.iloc[:,1:])\ny_train=np.array(train_data.iloc[:,13])","3667313f":"#StandardScaler is essential for high accuracy.\nfrom sklearn.preprocessing import StandardScaler\nstdsc = StandardScaler()\nx_train = stdsc.fit_transform(x_train)\nx_test = stdsc.transform(x_test)","2d5fcb09":"from sklearn.model_selection import train_test_split\nx_train2, x_valid2, y_train2, y_valid2 = train_test_split(x_train, y_train, test_size=0.1,random_state=123)","082b0d09":"import xgboost as xgb\nxgbm2 = xgb.XGBRegressor(base_score=0.9, booster='gbtree', colsample_bylevel=1,\n                         colsample_bynode=1, colsample_bytree=1, gamma=1, gpu_id=-1,\n                         importance_type='gain', interaction_constraints='',\n                         learning_rate=0.100000012, max_delta_step=100, max_depth=800,\n                         min_child_weight=1, monotone_constraints='()',\n                         n_estimators=500, n_jobs=2, num_parallel_tree=1, random_state=1,\n                         reg_alpha=1, reg_lambda=1, scale_pos_weight=1, subsample=1,\n                         tree_method='exact', validate_parameters=1, verbosity=None)\nmodel1=xgbm2\nmodel1.fit(x_train, y_train)\na1=model1.predict(x_valid2)\np1=model1.predict(x_test)\nfrom sklearn.metrics import mean_squared_error\nimport numpy as np\nw1=np.sqrt(mean_squared_error(a1,y_valid2))\nw1","3bc2965a":"sns.scatterplot(x=a1,y=y_valid2)","eb527d5b":"from sklearn.ensemble import RandomForestRegressor\nforest = RandomForestRegressor(random_state=123, max_depth=100,\n                               min_samples_leaf=11, n_estimators=200,min_samples_split=2)\nmodel2=forest\nmodel2.fit(x_train, y_train)\na2=model2.predict(x_valid2)\np2=model2.predict(x_test)\nw2=np.sqrt(mean_squared_error(a2,y_valid2))\nw2","24a404af":"sns.scatterplot(x=a2,y=y_valid2)","3ce9131f":"#forest.get_params()","9722657b":"import lightgbm as lgb\ngbm = lgb.LGBMRegressor()\ngbm = lgb.LGBMRegressor(learning_rate=0.0001, max_depth=100, min_child_samples=20,\n                        min_child_weight=0.001, num_leaves=31, reg_alpha=0, reg_lambda=1,random_state=0)\nmodel3=gbm\nmodel3.fit(x_train, y_train,verbose=True)\np3 = model3.predict(x_test)\na3= model3.predict(x_valid2)\nw3=np.sqrt(mean_squared_error(a3,y_valid2))\nw3","14ad2031":"sns.scatterplot(x=a3,y=y_valid2)","28560168":"from sklearn.neural_network import MLPRegressor\ndeep_learning = MLPRegressor(hidden_layer_sizes=(100,100,100,100),random_state=123,verbose=True,activation='relu',\n                             early_stopping=True,max_iter=500,\n                             solver='adam',warm_start=True)\nmodel4=deep_learning\nmodel4.fit(x_train, y_train)\na4=model4.predict(x_valid2)\np4=model4.predict(x_test)\nw4=np.sqrt(mean_squared_error(a4,y_valid2))\nw4","bb5e9fa9":"sns.scatterplot(x=a4,y=y_valid2)","3b40de6d":"from sklearn import svm\nfrom matplotlib import pyplot as plt\nsvr = svm.SVR(C=30,epsilon=0.01,verbose=True,degree=100)\nmodel7=svr\nmodel7.fit(x_train,y_train)\np7 = model7.predict(x_test)\na7= model7.predict(x_valid2)\nw7=np.sqrt(mean_squared_error(a7,y_valid2))\nw7","366ce4db":"sns.scatterplot(x=a7,y=y_valid2)","7bbe7aab":"kinds=pd.concat([pd.DataFrame([w1],columns=[\"XGBoost\"],index=[\"RMSE\"]),pd.DataFrame([w2],columns=[\"R.Forest\"],index=[\"RMSE\"]),\n                pd.DataFrame([w3],columns=[\"LightGBM\"],index=[\"RMSE\"]),pd.DataFrame([w4],columns=[\"Neural Net\"],index=[\"RMSE\"]),\n                pd.DataFrame([w7],columns=[\"SVR Regressor\"],index=[\"RMSE\"])], axis=1).T.sort_values(\"RMSE\")\nkinds","cc074040":"#submit_ans=pd.concat([test_data.iloc[:,[0]],epsilon_maker(1),pd.DataFrame(p1,columns=[\"XGBoost\"]),pd.DataFrame(p2,columns=[\"R.Forest\"]),pd.DataFrame(p3,columns=[\"LightGBM\"])], axis=1)\nsubmit_ans=pd.concat([test_data.iloc[:,[0]],pd.DataFrame(p1,columns=[\"XGBoost\"]),pd.DataFrame(p2,columns=[\"R.Forest\"]),pd.DataFrame(p3,columns=[\"LightGBM\"]),pd.DataFrame(p4,columns=[\"Neural Net\"]),pd.DataFrame(p7,columns=[\"SVR\"])], axis=1)\nsubmit_ans","6c5990cd":"final=submit_ans.iloc[:,3:4].mean(axis=1)+1.8\n","51493dea":"submit_ans_pd=pd.concat([test_data.iloc[:,[0]],pd.DataFrame(np.round(final,9),columns=[\"Pawpularity\"])], axis=1)\nsubmit_ans_pd","59968f0a":"submit_ans_pd.to_csv(\"submission.csv\",index=False)\nprint(\"File Saved\")","2cff1c5a":"####  3.LightGBM","7bbd001f":"Thanks for checking my notebook :-)","06c86ede":"#### 2. Random Forest","406bab5d":"#### Look at the gauge 100. To cut outliers of datasets is essential to improve accuracy.","e8e1c7f7":"#### 1. First of all, let's check given data.","c05023e9":"#### 1. XGBoost.","8a048805":"<HR>","2e972d8f":"4.Deep Learning","082e427a":"##### 5.Support Vector Regressor"}}