{"cell_type":{"f549214c":"code","310086ab":"code","0099d255":"code","25b7caf9":"code","75145544":"code","2dd457c3":"code","53293139":"code","f4804ae6":"code","c48d61a7":"code","51562705":"code","1e21e658":"code","0edba6b5":"code","1f6667fb":"code","7d69e961":"code","1d2ae0e9":"code","ca745c05":"code","40a1a98c":"code","49b51e3e":"code","de3cba18":"code","09653b8f":"code","57415c97":"code","399fa074":"code","b13508bd":"code","326cc291":"code","aed21486":"code","5874c2a6":"code","0e93a313":"code","48cec12a":"code","c30e2b1b":"code","918665b8":"code","0610ebe3":"code","4fb00f59":"code","657496c1":"code","e018bc32":"code","f13b503a":"code","18335e95":"code","30546f3c":"code","aa0c7234":"code","0676a090":"code","076eb64a":"code","6ebb0f47":"code","eb100c23":"code","de0912d7":"code","ed4a7de9":"code","9535d72f":"code","8521ea36":"code","9266ae07":"code","da84b095":"code","71d5c0d7":"code","6e937060":"code","3169c4e3":"code","b2d3005b":"code","30c1a77f":"code","bb8a5315":"code","f103f67f":"code","4d1b3553":"code","aa9ef348":"code","16e88b7c":"code","2bf80cd6":"code","0c4813d7":"code","e07b81c5":"code","5dbf7253":"code","0bf47094":"code","fc22968c":"code","e3f27162":"code","686b3839":"code","29c22647":"code","0de43cef":"code","b00bf26b":"code","2fe4e035":"code","eb736f9d":"code","70a72038":"code","e9dcc804":"code","700d6af1":"code","ce4e6609":"code","0018577d":"code","c8c00f51":"code","24c57786":"code","680d6b93":"code","5e1784e8":"code","909ff2df":"code","8d45d0a8":"markdown","df7a606f":"markdown","c19fd556":"markdown","ab70c480":"markdown","455c6f00":"markdown","acfe79ce":"markdown","e4b67697":"markdown","11995e42":"markdown","1625403f":"markdown","b8203018":"markdown","b35f8605":"markdown","588161d1":"markdown","05294087":"markdown","0070fb53":"markdown","ba5086fb":"markdown","f546f804":"markdown"},"source":{"f549214c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","310086ab":"train= pd.read_csv(\"..\/input\/titanic\/train.csv\")","0099d255":"test= pd.read_csv(\"..\/input\/titanic\/test.csv\")\ngender= pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")","25b7caf9":"train.head()","75145544":"test.head()","2dd457c3":"gender.head()","53293139":"train.info()","f4804ae6":"test.info()","c48d61a7":"gender.info()","51562705":"train.describe()","1e21e658":"train.isnull().sum().sort_values()","0edba6b5":"train= train.drop(columns=['Cabin'])","1f6667fb":"feature= ['Age', 'Embarked']\ntrain[feature]= train[feature].fillna(train[feature].mode().iloc[0])","7d69e961":"train.isnull().sum()","1d2ae0e9":"train= train.drop(columns=['Name', 'Ticket'])","ca745c05":"train.head()","40a1a98c":"train['Sex']= train[\"Sex\"].astype('category').cat.codes","49b51e3e":"train['Embarked']=train['Embarked'].astype('category').cat.codes","de3cba18":"train['Fare']= train['Fare'].round(0).astype(int)","09653b8f":"train=train.astype('int64')","57415c97":"train.dtypes","399fa074":"train.Survived.describe()","b13508bd":"import matplotlib as plt\n%matplotlib inline\nfrom pandas.plotting import scatter_matrix","326cc291":"train.hist(figsize=(12,12))\nplt.show()","aed21486":"train.Survived.value_counts().plot(kind='bar', figsize=(8,8))\nplt.xlable('Survived')\nplt.ylable('count')\nplt.show()","5874c2a6":"train.Sex.value_counts().plot( kind= 'bar', figsize=(5,5))\nplt.xlable('Sex')\nplt.ylable('count')\nplt.show()","0e93a313":"import seaborn as sns\nimport statistics","48cec12a":"sns.catplot(x='Pclass',data= train,kind='count',hue='Survived',col='Sex')","c30e2b1b":"sns.ecdfplot(x='Age', data= train,hue='Survived')\nplt.show()","918665b8":"co_relation=train.corr()","0610ebe3":"co_relation['Survived'].sort_values()","4fb00f59":"import sklearn\nimport sklearn.metrics as sm\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import GridSearchCV","657496c1":"from sklearn import svm\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import accuracy_score","e018bc32":"from sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC","f13b503a":"y= train['Survived']\nx= train.drop(columns=['Survived','PassengerId','Fare','Age'])","18335e95":"y.shape","30546f3c":"x_train, x_test, y_train, y_test= train_test_split(x,y,test_size=0.2,random_state=0)","aa0c7234":"y_train.shape","0676a090":"x_train.shape\n","076eb64a":"y_test.shape","6ebb0f47":"x_test.shape","eb100c23":"print(len(x_train))\nprint(len(y_train))\nprint(len(x_test))\nprint(len(y_test))","de0912d7":"logit= LogisticRegression()\nlogit.fit(x_train,y_train)\npredict_1=logit.predict(x_test)\n","ed4a7de9":"train_accuracy= round(logit.score(x_train,y_train)*100)\ntest_accuracy= round(accuracy_score(predict_1,y_test)*100)","9535d72f":"print(\"Logistic Regression Train Accuracy Score : {}%\".format(train_accuracy))\nprint(\"Logistic Regression Test Accuracy Score : {}%\".format(test_accuracy))","8521ea36":"print(classification_report(predict_1, y_test))","9266ae07":"dt=DecisionTreeClassifier()\ndt.fit(x_train, y_train)\npredict_2=dt.predict(x_test)","da84b095":"train_accuracy= round(dt.score(x_train,y_train)*100)\ntest_accuracy= round(accuracy_score(predict_2,y_test)*100)","71d5c0d7":"print(\"Decision Tree Train Accuracy Score :{}%\".format(train_accuracy))\nprint(\"Decision Tree Test Accuracy Score :{}%\".format(test_accuracy))","6e937060":"print(classification_report(predict_2,y_test))","3169c4e3":"nb=MultinomialNB()\nnb.fit(x_train,y_train)\nprdict_3=nb.predict(x_test)","b2d3005b":"train_accuracy= round(nb.score(x_train,y_train)*100)\ntest_accuracy= round(accuracy_score(prdict_3,y_test)*100)","30c1a77f":"print(\"NB Train Accuracy Score :{}%\".format(train_accuracy))\nprint(\"NB test Accuracy Score :{}%\".format(test_accuracy))","bb8a5315":"print(classification_report(prdict_3,y_test))","f103f67f":"rfc= RandomForestClassifier()\nrfc.fit(x_train,y_train)\nprdict_= rfc.predict(x_test)","4d1b3553":"train_accuracy= round(rfc.score(x_train,y_train)*100)\ntest_accuracy= round(accuracy_score(prdict_,y_test)*100)","aa9ef348":"print(\"Random Forest Train Accuracy Score :{}%\".format(train_accuracy))\nprint(\"Random Forest Test Accuracy Score :{}%\".format(test_accuracy))","16e88b7c":"print(classification_report(prdict_,y_test))","2bf80cd6":"sgd= SGDClassifier()\nsgd.fit(x_train, y_train)\npredict_4=sgd.predict(x_test)","0c4813d7":"train_accuracy=round(sgd.score(x_train,y_train)*100)\ntest_accuracy= round(accuracy_score(predict_4,y_test)*100)\n","e07b81c5":"print(\"SVM Train Accuracy Score :{}%\".format(train_accuracy))\nprint(\"SVM Test Accuracy Score :{}%\".format(test_accuracy))\nprint(classification_report(predict_4,y_test))","5dbf7253":"knn= KNeighborsClassifier(n_neighbors=5,metric='euclidean')\nknn.fit(x_train,y_train)\npredict_5= knn.predict(x_test)","0bf47094":"tain_accuracy= round(knn.score(x_train,y_train)*100)\ntest_accuracy=round(accuracy_score(predict_5,y_test)*100)\n","fc22968c":"print(\"KNN Train Accuracy Score :{}%\".format(train_accuracy))\nprint(\"KNN Test Accuracy Score :{}%\".format(test_accuracy))","e3f27162":"print(classification_report(predict_5,y_test))","686b3839":"svc=SVC(probability=True)\nsvc.fit(x_train,y_train)\npredict_6=svc.predict(x_test)","29c22647":"train_accuracy= round(svc.score(x_train,y_train)*100)\ntest_accuracy=round(accuracy_score(predict_6,y_test)*100)","0de43cef":"print(\"SVC Train Accuracy Score:{}%\".format(train_accuracy))\nprint(\"SVS test Accuracy Score:{}%\".format(test_accuracy))\nprint(classification_report(predict_6,y_test))","b00bf26b":"test.head()","2fe4e035":"test.info()","eb736f9d":"test= test.drop(columns=['Age','Name','Cabin','Fare','Ticket'])","70a72038":"test['Sex']=test.Sex.astype('category').cat.codes\ntest['Embarked']=test.Embarked.astype('category').cat.codes","e9dcc804":"test.head()","700d6af1":"test.dtypes","ce4e6609":"test.isnull().sum()","0018577d":"test=test.astype('int64')","c8c00f51":"test_id= test['PassengerId']\ntest_x=test.drop(columns='PassengerId')","24c57786":"test_y_predict=rfc.predict(test_x)","680d6b93":"final_result=pd.DataFrame(list(zip(test_id,test_y_predict)),columns=['PassengerId','Survived'])","5e1784e8":"final_result.head(50)","909ff2df":"final_result.to_csv('final_result.csv',index=False)","8d45d0a8":"After doing all iterations I found model prepared by RFC is the best followed by Decision Tree.","df7a606f":"The above visualization clearly shows that male in every category has higher chances of survival.","c19fd556":"splitting train dataset into training and testing datasets in order to train the model.","ab70c480":"EDA","455c6f00":"Coversion of categorical variables into numerical variabls","acfe79ce":"Let's apply the best model on Test Dataset ","e4b67697":"cabin feature in this dataset has more than 50%  missing data. Also this will not help in our model taining. Therefore, We must drop this feature.","11995e42":"Start with basic EDA of the available dataests.","1625403f":"Missing value treatment","b8203018":"Now let's Prepare test dataset for applying RFC model","b35f8605":"separating features and lables","588161d1":"Convert all numerical variables into integer type","05294087":"importing libraries for visualization","0070fb53":"Training the dataset to get best model","ba5086fb":"Dropping all irrelevant columns","f546f804":"Dropping irrelevant features"}}