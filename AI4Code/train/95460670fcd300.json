{"cell_type":{"456e42fb":"code","9dab1df6":"code","86223f3b":"code","45ad99b0":"code","c45faf2d":"code","43e65bd9":"code","ed9ebac4":"code","0c2339b3":"code","12cf19d6":"code","62b16d39":"code","2d519ce5":"code","6e445112":"code","f2c65be9":"code","ce7c7144":"code","4aaaff75":"code","3a284734":"code","c748708c":"code","48973bb2":"code","989eef68":"code","3bdecf19":"code","3de5dd5c":"code","bf3bae41":"code","3d5be8e2":"code","7024735c":"code","f3c95598":"code","248043c1":"code","abc78cbb":"code","3bb2d4eb":"code","a864ae2a":"code","57568c4c":"code","dd9cbb2e":"code","f1d63fed":"code","85ace013":"code","d6d6d973":"code","b4edab7b":"code","02911524":"code","e0918ee8":"code","b979ebca":"code","1618129f":"markdown","6a061a85":"markdown","0b9436d1":"markdown","52251160":"markdown"},"source":{"456e42fb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.feature_selection import mutual_info_regression\nfrom sklearn.impute import SimpleImputer,KNNImputer\nfrom sklearn.model_selection import train_test_split\nimport lightgbm as gbm\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import KFold, cross_val_score\n!pip install -q -U mljar-supervised\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9dab1df6":"sample=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\nhouse_train=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')\nhouse_test=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","86223f3b":"house_train.head(-1)","45ad99b0":"house_train.describe().T","c45faf2d":"house_train.isna().sum()[house_train.isna().sum()>0].sort_values(ascending=False).plot(kind='bar',figsize=(20,9))","43e65bd9":"plt.rcParams['figure.figsize']=(20,9)\nsns.boxplot(x='YrSold',y='SalePrice',data=house_train)","ed9ebac4":"def rectify_dtypes(df):\n    df1=df.copy()\n    cat_features=df1.select_dtypes(['object']).columns\n    for c in cat_features:\n        if len(df1[c].unique())<12:\n            df1[c]=df1[c].astype('category')\n            if 'None' not in df1[c].cat.categories:\n                df1[c].cat.add_categories(\"None\", inplace=True)            \n    return df1","0c2339b3":"house_train=rectify_dtypes(house_train)\nhouse_test=rectify_dtypes(house_test)","12cf19d6":"house_train[['MSSubClass','Neighborhood','OverallQual','OverallCond','Exterior1st','Exterior2nd','GarageCars','FullBath','HalfBath']]=house_train[['MSSubClass','Neighborhood','OverallQual','OverallCond','Exterior1st','Exterior2nd','GarageCars','FullBath','HalfBath']].astype('category')\nhouse_test[['MSSubClass','Neighborhood','OverallQual','OverallCond','Exterior1st','Exterior2nd','GarageCars','FullBath','HalfBath']]=house_test[['MSSubClass','Neighborhood','OverallQual','OverallCond','Exterior1st','Exterior2nd','GarageCars','FullBath','HalfBath']].astype('category')","62b16d39":"def encode_category(df):\n    df1=df.copy()\n    for c in df1.select_dtypes(['category']):\n        df1[c]=pd.Categorical(df[c]).codes\n    return df1","2d519ce5":"house_train=encode_category(house_train)\nhouse_test=encode_category(house_test)","6e445112":"cols_nan=house_train.columns[house_train.isna().mean()>0.5].to_list()","f2c65be9":"house_train.drop(cols_nan,axis=1,inplace=True)\nhouse_test.drop(cols_nan,axis=1,inplace=True)","ce7c7144":"house_train.info()","4aaaff75":"house_train=house_train[house_train.SalePrice<np.percentile(house_train.SalePrice,q=97)]","3a284734":"house_train.info()","c748708c":"house_train.rename(columns={\n        \"1stFlrSF\": \"FirstFlrSF\",\n        \"2ndFlrSF\": \"SecondFlrSF\",\n        \"3SsnPorch\": \"Threeseasonporch\",\n    }, inplace=True,\n    )","48973bb2":"house_train.corr().iloc[-1,:].sort_values(ascending=False)[1:].plot(kind='bar',figsize=(20,9))","989eef68":"house_train.loc[house_train.GarageYrBlt.isna(),'GarageYrBlt']=house_train.loc[house_train.GarageYrBlt.isna()].YearBuilt","3bdecf19":"house_train.isna().sum().sort_values(ascending=False)","3de5dd5c":"house_train.fillna(0,inplace=True)\nhouse_test.fillna(0,inplace=True)","bf3bae41":"#X_train,X_valid,y_train,y_valid=train_test_split(df_imp.drop(['SalePrice'],axis=1),df_imp['SalePrice'],test_size=0.1)\nX_train,X_valid,y_train,y_valid=train_test_split(house_train.drop(['SalePrice'],axis=1),house_train['SalePrice'],test_size=0.1)","3d5be8e2":"def score_dataset(X, y, model=XGBRegressor()):\n    # Label encoding for categoricals\n    #\n    # Label encoding is good for XGBoost and RandomForest, but one-hot\n    # would be better for models like Lasso or Ridge. The `cat.codes`\n    # attribute holds the category levels.\n    for colname in X.select_dtypes([\"category\"]):\n        X[colname] = X[colname].cat.codes\n    # Metric for Housing competition is RMSLE (Root Mean Squared Log Error)\n    log_y = np.log(y)\n    score = cross_val_score(\n        model, X, log_y, cv=5, scoring=\"neg_mean_squared_error\",\n    )\n    score = -1 * score.mean()\n    score = np.sqrt(score)\n    return score","7024735c":"score_dataset(house_train.drop(['SalePrice'],axis=1), house_train['SalePrice'])","f3c95598":"mut_info=pd.DataFrame({'features':house_train.drop(['SalePrice'],axis=1).columns.to_list(),'values':mutual_info_regression(house_train.drop(['SalePrice'],axis=1),house_train['SalePrice'])})","248043c1":"useful_col=mut_info[mut_info['values']>0.2].features","abc78cbb":"useful_col","3bb2d4eb":"X_train[useful_col].shape","a864ae2a":"rfr=RandomForestRegressor(n_estimators=2000)","57568c4c":"rfr.fit(X_train[useful_col].drop('FirstFlrSF',axis=1),y_train)","dd9cbb2e":"score_dataset(rfr.predict(X_train),y_train)","f1d63fed":"mean_squared_error(y_valid,rfr.predict(X_valid[useful_col]))","85ace013":"useful_col.drop(43)","d6d6d973":"useful_col","b4edab7b":"y_test=rfr.predict(house_test[useful_col.drop(43)])","02911524":"house_test.Id","e0918ee8":"output = pd.DataFrame({'Id': house_test.Id.values, 'SalePrice': y_test})\noutput.to_csv('my_submission.csv', index=False)","b979ebca":"house_test.Id.values","1618129f":"#Remove outliers","6a061a85":"#Drop columns having more than 50% nan","0b9436d1":"# #Prepare and train model","52251160":"# EDA on the data"}}