{"cell_type":{"5b6057ae":"code","a04d004b":"code","36fa5b35":"code","49e7bc3f":"code","c18d4a48":"code","f8914ecf":"code","949b2dfe":"code","85adf86f":"code","82b071ee":"code","096a4702":"code","82a345a2":"code","a0d40805":"code","5659c6e4":"code","890c2fbb":"code","5e72241d":"code","fcf81a84":"code","faf5f70f":"code","e5656191":"code","13fb020a":"code","d900cef9":"code","2064701c":"code","302dbf78":"code","b9346b96":"code","65306c0e":"code","e46a5a94":"code","f05a9426":"code","6d5ec118":"code","b9c786ca":"code","96cc259c":"code","6fbd0c31":"code","dc5a3f97":"code","1669725f":"code","ffcf82ff":"code","3ccd1c07":"code","a9a449e4":"code","60d8b6a3":"code","dccb57e0":"code","bb2aefc4":"code","8eb2dd48":"code","3e31d14f":"code","226ad3d3":"code","b8d16511":"code","d6989802":"markdown"},"source":{"5b6057ae":"import numpy as np\nimport pandas as pd\nimport re #regular exprssion \nfrom nltk.corpus import stopwords\nfrom nltk.stem import SnowballStemmer\nfrom sklearn.preprocessing import scale\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression,Lasso,ElasticNet,SGDClassifier\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis,QuadraticDiscriminantAnalysis","a04d004b":"df = pd.read_csv('..\/input\/spam-ham-dataset\/spam.csv',encoding='latin-1')\ndf.head()","36fa5b35":"df.rename(columns={'v1':'Cat','v2':'Mess'},inplace=True)\ndf.columns","49e7bc3f":"df.tail()","c18d4a48":"df.index","f8914ecf":"np.sum(df.isna())","949b2dfe":"df['word_counts']=df['Mess'].agg(lambda x : len(x.split()))","85adf86f":"df['char_counts']=df['Mess'].agg(len)","82b071ee":"df.head()","096a4702":"stop = stopwords.words('english')\n# stop","82a345a2":"stop.append('u')\nstop.append('ur')\nstop.append('2')\nstop.append('4')\nstop.append('n')","a0d40805":"df['Mess']=df['Mess'].agg(lambda x:x.lower())\ndf.head()","5659c6e4":"df['n-of-stopwords'] = df['Mess'].agg(lambda x: len( [w for w in x.split() if w in stop]))","890c2fbb":"df.head()","5e72241d":"df2 = df.groupby('Cat') \ndf2.agg('mean')","fcf81a84":"df['n-of-signs']=df['Mess'].agg(lambda x: len(re.findall('[^\\w\\s]',x)))","faf5f70f":"df.head()","e5656191":" df['Mess']=df['Mess'].agg(lambda x:re.sub('[^\\w\\s]','',x))","13fb020a":"df.head()","d900cef9":"stemmer= SnowballStemmer('english')","2064701c":"df['Mess1']=df['Mess'].agg(lambda x:(' ').join([stemmer.stem(word) for word in x.split()]))","302dbf78":"df.head()","b9346b96":"spamtxt=df.loc[df['Cat']=='spam',:].loc[:,'Mess1']#only Message columns  spamtxt=df.loc[df['Cat']=='spam','Mess']","65306c0e":"hamtxt=df.loc[df['Cat']=='ham','Mess1']","e46a5a94":"#it only use for two class\nspamnostop=spamtxt.agg(lambda x :(' ').join([word for word in x.split() if word not in stop]))\nhamnostop = hamtxt.agg(lambda x :(' ').join([word for word in x.split() if word not in stop]))","f05a9426":"spamwordcount = spamnostop.str.split(expand=True).stack().value_counts()","6d5ec118":"hamwordcount = hamnostop.str.split(expand=True).stack().value_counts()","b9c786ca":"spamworduseable = spamwordcount[spamwordcount>=20]\nhamworduseable = hamwordcount[hamwordcount>=20]","96cc259c":"s1=set(spamworduseable.index)\ns2=set(hamworduseable.index)\n","6fbd0c31":"Union = list(s1.union(s2))\nIntersection = list(s1.intersection(s2))\n","dc5a3f97":"allfeaturs=np.zeros((df.shape[0],len(Union)))","1669725f":"for i in range(len(Union)):\n    allfeaturs[:,i]=df['Mess'].agg(lambda x :x.split().count(Union[i]))\nallfeaturs.shape","ffcf82ff":"df.columns","3ccd1c07":"completedata =pd.concat([df,pd.DataFrame(allfeaturs,columns=Union)],axis=1)","a9a449e4":"X = completedata.iloc[:,2:]\n\ny= completedata['Cat']","60d8b6a3":"X.drop(['Mess1'],inplace=True,axis=1)","dccb57e0":"X = scale(X)\nenc = LabelEncoder()\nenc.fit(y)\ny=enc.transform(y)","bb2aefc4":"repet = 10\nacc_lasso_ham  = np.empty(repet)\nacc_lasso_spam = np.empty(repet)\nacc_ridge_ham  = np.empty(repet)\nacc_ridge_spam = np.empty(repet)\nacc_elnet_ham  = np.empty(repet)\nacc_elnet_spam = np.empty(repet)","8eb2dd48":"for i in range(repet):\n#     print(i)\n    X_train,X_test,y_train,y_test=train_test_split(X,y)\n    lassologreg    = LogisticRegression(C=5,penalty='l1',solver='liblinear')\n    ridgeologreg   = LogisticRegression(C=5,penalty='l2',solver='liblinear')\n    elasticologreg = SGDClassifier(loss= 'log',penalty='elasticnet',alpha = 0.0001,l1_ratio=0.9)\n   \n    lassologreg.fit(X_train,y_train)  \n    ridgeologreg.fit(X_train,y_train)        \n    elasticologreg.fit(X_train,y_train)        \n\n    lasso = confusion_matrix(y_test,lassologreg.predict(X_test))\n    ridge = confusion_matrix(y_test,ridgeologreg.predict(X_test))\n    elnet = confusion_matrix(y_test,elasticologreg.predict(X_test))\n\n    acc_lasso_ham[i]  = lasso[0,0]\/sum(lasso[0,:])\n    acc_lasso_spam[i] = lasso[1,1]\/sum(lasso[1,:])\n    acc_ridge_ham[i]  = ridge[0,0]\/sum(ridge[0,:])\n    acc_ridge_spam[i] = ridge[1,1]\/sum(ridge[1,:])\n    acc_elnet_ham[i]  = elnet[0,0]\/sum(elnet[0,:])\n    acc_elnet_spam[i]  = elnet[1,1]\/sum(elnet[1,:])\n    \nprint('Glm lasso Ham' ,'\\n',np.mean(acc_lasso_ham))\nprint('Glm lasso spam','\\n',np.mean(acc_lasso_spam))\nprint('Glm ridge Ham' ,'\\n',np.mean(acc_ridge_ham))\nprint('Glm ridge spam','\\n',np.mean(acc_ridge_spam))\nprint('Glm elnet Ham' ,'\\n',np.mean(acc_elnet_ham))\nprint('Glm elnet spam','\\n',np.mean(acc_elnet_spam))\n","3e31d14f":"lda = LinearDiscriminantAnalysis()\nqda =QuadraticDiscriminantAnalysis()\n","226ad3d3":"lda.fit(X_train,y_train)\nlda.score(X_test,y_test)","b8d16511":"qda.fit(X_train,y_train)\nqda.score(X_test,y_test)","d6989802":"# EDA"}}