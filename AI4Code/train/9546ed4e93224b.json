{"cell_type":{"bda375d3":"code","f81998c0":"code","81d6bf00":"code","bed02cc1":"code","06151df6":"code","8ca007b3":"code","0d6b04e5":"code","0e32a101":"code","4e24b66a":"code","fb02974b":"code","9b4588a7":"code","740b703d":"markdown"},"source":{"bda375d3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f81998c0":"from sklearn.metrics import f1_score\nfrom tensorflow import keras\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' ","81d6bf00":"df= pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")\ndf.head()","bed02cc1":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nscalar = StandardScaler()\nX = df.drop('Class', axis=1)\ny = df.Class\nX_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.3, random_state=42)\nX_train = scalar.fit_transform(X_train)\nX_test = scalar.transform(X_test)","06151df6":"\nmodel = keras.Sequential([\n    keras.layers.Dense(256, activation='relu', input_shape=(X_train.shape[-1],)),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dropout(0.3),\n    keras.layers.Dense(256, activation='relu'),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dropout(0.3),\n    keras.layers.Dense(256, activation='relu'),\n    keras.layers.BatchNormalization(),\n    keras.layers.Dropout(0.3),\n    keras.layers.Dense(1, activation='sigmoid'),\n])\nmodel.compile(optimizer=keras.optimizers.Adam(1e-3), loss='binary_crossentropy')\nmodel.summary()\nr = model.fit(X_train, y_train,validation_data=(X_test,y_test),batch_size=2048, epochs=30)","8ca007b3":"score = model.evaluate(X_test, y_test)\nprint(score)","0d6b04e5":"scores_dict=dict()\nfrom xgboost import XGBClassifier\n\nxgb_clf = XGBClassifier()\nxgb_clf.fit(X_train, y_train, eval_metric='aucpr')\n\ny_train_pred = xgb_clf.predict(X_train)\ny_test_pred = xgb_clf.predict(X_test)\n\nscores_dict['XGBoost'] = {\n        'Train': f1_score(y_train,y_train_pred),\n        'Test': f1_score(y_test, y_test_pred),\n}","0e32a101":"from sklearn.ensemble import RandomForestClassifier\n\nrf_clf = RandomForestClassifier(n_estimators=100, oob_score=False)\nrf_clf.fit(X_train, y_train)\n\ny_train_pred = rf_clf.predict(X_train)\ny_test_pred = rf_clf.predict(X_test)\nscores_dict['Random Forest'] = {\n        'Train': f1_score(y_train,y_train_pred),\n        'Test': f1_score(y_test, y_test_pred),\n}","4e24b66a":"from catboost import CatBoostClassifier\n\ncb_clf = CatBoostClassifier()\ncb_clf.fit(X_train, y_train)\ny_train_pred = cb_clf.predict(X_train)\ny_test_pred = cb_clf.predict(X_test)\nscores_dict['CatBoost'] = {\n        'Train': f1_score(y_train,y_train_pred),\n        'Test': f1_score(y_test, y_test_pred),\n}","fb02974b":"from lightgbm import LGBMClassifier\n\nlgbm_clf = LGBMClassifier()\nlgbm_clf.fit(X_train, y_train)\n\ny_train_pred = lgbm_clf.predict(X_train)\ny_test_pred = lgbm_clf.predict(X_test)\nscores_dict['LigthGBM'] = {\n        'Train': f1_score(y_train,y_train_pred),\n        'Test': f1_score(y_test, y_test_pred),\n}","9b4588a7":"scores_df = pd.DataFrame(scores_dict)\n\nscores_df.plot(kind='barh', figsize=(15, 8))","740b703d":"# Reference\n\nhttps:\/\/www.kaggle.com\/faressayah\/credit-card-fraud-detection-anns-vs-xgboost"}}