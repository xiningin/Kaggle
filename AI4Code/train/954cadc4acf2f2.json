{"cell_type":{"347f98bb":"code","82fcf490":"code","69088801":"code","ca483b10":"code","a8c4659d":"code","0c8b2912":"code","c5140fbd":"code","f93e3794":"code","65a1ad84":"code","3c006f73":"code","71c6786e":"code","38820241":"code","b44dfb97":"code","f7b4d1ac":"code","27ee0273":"code","ecab41b0":"code","11e14a7f":"code","e0b34ab3":"code","8e1b0316":"code","129de6e0":"code","f8210167":"code","1c67c5d7":"code","a1f58e84":"code","ed7f8ed0":"code","cf51b7ac":"code","009ad52e":"code","2573aed7":"code","264a5b85":"code","ebf241fe":"code","c8a4e737":"code","09819934":"code","01915ed3":"code","91929e91":"code","88c52686":"code","d3e54821":"code","4fd0d0fa":"markdown","57157925":"markdown","243800a2":"markdown","cb1d7223":"markdown","04388354":"markdown","0e8cd545":"markdown","ac4e8d96":"markdown","819e7d79":"markdown","71df060b":"markdown","ba15bd68":"markdown","30d8ae26":"markdown","83827b97":"markdown","41d0656a":"markdown","51b22420":"markdown","16ff6842":"markdown","a1c6d0fb":"markdown","23edd382":"markdown","5b57dd91":"markdown","ae1fe557":"markdown","90827fc9":"markdown","a23928c6":"markdown","032f80e9":"markdown","32a46e59":"markdown","3b49cfc2":"markdown","95ceeeb9":"markdown","76a903d6":"markdown","5561b56f":"markdown","98addcd7":"markdown","d7696d85":"markdown","32529ea7":"markdown","b9f1ceeb":"markdown","5a26d072":"markdown","b1adf1cf":"markdown","e9796ba0":"markdown","6550fd28":"markdown","4d2e9512":"markdown","8c3d6ecd":"markdown","fb8f9fed":"markdown","20291e84":"markdown","e358f261":"markdown","a63086d2":"markdown","a5eff4a6":"markdown"},"source":{"347f98bb":"# numpy , pandas\nimport numpy as np \nimport pandas as pd\n# scikit-learn\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import Lasso\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n# \u53ef\u8996\u5316\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#pandas\u306e\u30ab\u30e9\u30e0\u304c100\u5217\u307e\u3067\u898b\u308c\u308b\u3088\u3046\u306b\u3059\u308b\npd.set_option('display.max_columns', 100)","82fcf490":"def add_new_columns(df):\n    # \u5efa\u7269\u5185\u306e\u7dcf\u9762\u7a4d = 1\u968e\u306e\u9762\u7a4d + 2\u968e\u306e\u9762\u7a4d + \u5730\u4e0b\u306e\u9762\u7a4d\n    df[\"TotalSF\"] = df[\"1stFlrSF\"] + df[\"2ndFlrSF\"] + df[\"TotalBsmtSF\"]\n    \n    # \u4e00\u90e8\u5c4b\u3042\u305f\u308a\u306e\u5e73\u5747\u9762\u7a4d = \u5efa\u7269\u306e\u7dcf\u9762\u7a4d \/ \u90e8\u5c4b\u6570\n    df['AreaPerRoom'] = df['TotalSF']\/df['TotRmsAbvGrd']\n    \n    # \u7bc9\u5e74\u6570 + \u6700\u65b0\u30ea\u30d5\u30a9\u30fc\u30e0\u5e74 : \u3053\u306e\u5024\u304c\u5927\u304d\u3044\u307b\u3069\u5024\u6bb5\u304c\u9ad8\u304f\u306a\u308a\u305d\u3046\n    df['YearBuiltPlusRemod']=df['YearBuilt']+df['YearRemodAdd']\n    \n    # \u304a\u98a8\u5442\u306e\u7dcf\u9762\u7a4d\n    # Full bath : \u6d74\u69fd\u3001\u30b7\u30e3\u30ef\u30fc\u3001\u6d17\u9762\u53f0\u3001\u4fbf\u5668\u5168\u3066\u304c\u5099\u308f\u3063\u305f\u30d0\u30b9\u30eb\u30fc\u30e0\n    # Half bath : \u6d17\u9762\u53f0\u3001\u4fbf\u5668\u304c\u5099\u308f\u3063\u305f\u90e8\u5c4b)(\u30b7\u30e3\u30ef\u30fc\u30eb\u30fc\u30e0\u304c\u3042\u308b\u5834\u5408\u3082\u3042\u308b)\n    # \u30b7\u30e3\u30ef\u30fc\u304c\u306a\u3044\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066Half Bath\u306b\u306f0.5\u306e\u4fc2\u6570\u3092\u3064\u3051\u308b\n    df['TotalBathrooms'] = (df['FullBath'] + (0.5 * df['HalfBath']) + df['BsmtFullBath'] + (0.5 * df['BsmtHalfBath']))\n    \n    # \u5408\u8a08\u306e\u5c4b\u6839\u4ed8\u304d\u306e\u7384\u95a2\u306e\u7dcf\u9762\u7a4d \n    # Porch : \u5c4b\u6839\u4ed8\u304d\u306e\u7384\u95a2 \u65e5\u672c\u98a8\u306b\u3044\u3046\u3068\u7e01\u5074\n    df['TotalPorchSF'] = (df['OpenPorchSF'] + df['3SsnPorch'] + df['EnclosedPorch'] + df['ScreenPorch'] + df['WoodDeckSF'])\n    \n    # \u30d7\u30fc\u30eb\u306e\u6709\u7121\n    df['HasPool'] = df['PoolArea'].apply(lambda x: 1 if x > 0 else 0)\n    \n    # 2\u968e\u306e\u6709\u7121\n    df['Has2ndFloor'] = df['2ndFlrSF'].apply(lambda x: 1 if x > 0 else 0)\n    \n    # \u30ac\u30ec\u30fc\u30b8\u306e\u6709\u7121\n    df['HasGarage'] = df['GarageArea'].apply(lambda x: 1 if x > 0 else 0)\n    \n    # \u5730\u4e0b\u5ba4\u306e\u6709\u7121\n    df['HasBsmt'] = df['TotalBsmtSF'].apply(lambda x: 1 if x > 0 else 0)\n    \n    # \u6696\u7089\u306e\u6709\u7121\n    df['HasFireplace'] = df['Fireplaces'].apply(lambda x: 1 if x > 0 else 0)","69088801":"def lasso_tuning(train_x,train_y):\n    # alpha\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\n    param_list = [0.001, 0.01, 0.1, 1.0, 10.0,100.0,1000.0] \n    \n    for cnt,alpha in enumerate(param_list):\n        # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u305f\u30e9\u30c3\u30bd\u56de\u5e30\u30e2\u30c7\u30eb\n        lasso = Lasso(alpha=alpha) \n        # \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u751f\u6210\n        pipeline = make_pipeline(StandardScaler(), lasso)\n        \n        # \u5b66\u7fd2\u30c7\u30fc\u30bf\u5185\u3067\u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u691c\u8a3c\u306e\u305f\u3081\u306b\u5206\u5272 \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5272\u5408\u306f0.3 seed\u5024\u30920\u306b\u56fa\u5b9a\n        X_train, X_test, y_train, y_test = train_test_split(train_x, train_y, test_size=0.3, random_state=0)\n        \n        # \u5b66\u7fd2\n        pipeline.fit(X_train,y_train)\n        \n        # RMSE(\u5e73\u5747\u8aa4\u5dee)\u3092\u8a08\u7b97\n        train_rmse = np.sqrt(mean_squared_error(y_train, pipeline.predict(X_train)))\n        test_rmse = np.sqrt(mean_squared_error(y_test, pipeline.predict(X_test)))\n        # \u30d9\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\n        if cnt == 0:\n            best_score = test_rmse\n            best_param = alpha\n        elif best_score > test_rmse:\n            best_score = test_rmse\n            best_param = alpha\n    \n    # \u30d9\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306ealpha\u3068\u3001\u305d\u306e\u3068\u304d\u306eMSE\u3092\u51fa\u529b\n    print('alpha : ' + str(best_param))\n    print('test score is : ' +str(round(best_score,4)))\n    \n    # \u30d9\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8fd4\u5374\n    return best_param","ca483b10":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\ntrain_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv',index_col=0)\n# \u5148\u982d5\u884c\u3092\u307f\u3066\u307f\u308b\u3002\ntrain_df.head()","a8c4659d":"train_df","0c8b2912":"# \u58f2\u5374\u4fa1\u683c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\nsns.distplot(train_df['SalePrice'])\n# \u58f2\u5374\u4fa1\u683c\u306e\u6982\u8981\u3092\u307f\u3066\u307f\u308b\nprint(train_df[\"SalePrice\"].describe())\nprint(f\"\u6b6a\u5ea6: {round(train_df['SalePrice'].skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(train_df['SalePrice'].kurt(),4)}\" )","c5140fbd":"# \u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\ntest_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv',index_col=0)\nall_df = pd.concat([train_df.drop(columns='SalePrice'),test_df])","f93e3794":"test_df","65a1ad84":"num2str_list = ['MSSubClass','YrSold','MoSold']\nfor column in num2str_list:\n    all_df[column] = all_df[column].astype(str)","3c006f73":"all_df.info()","71c6786e":"# \u5909\u6570\u306e\u578b\u3054\u3068\u306b\u6b20\u640d\u5024\u306e\u6271\u3044\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5217\u3054\u3068\u306b\u51e6\u7406\nfor column in all_df.columns:\n    # dtype\u304cobject\u306e\u5834\u5408\u3001\u6587\u5b57\u5217\u306e\u5909\u6570\n    if all_df[column].dtype=='O':\n        all_df[column] = all_df[column].fillna('None')\n    # dtype\u304cint , float\u306e\u5834\u5408\u3001\u6570\u5b57\u306e\u5909\u6570\n    else:\n        all_df[column] = all_df[column].fillna(0)","38820241":"all_df.info()","b44dfb97":"add_new_columns(all_df)","f7b4d1ac":"all_df","27ee0273":"# One-Hot-Encoding\u524d\u306e\u5217\u6570\nlen(all_df.columns)","ecab41b0":"# pd.get_dummies\u3092\u4f7f\u3046\u3068\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3067\u304d\u308b\u3002\nall_df = pd.get_dummies(all_df)","11e14a7f":"# One-Hot-Encoding\u5f8c\u306e\u5217\u6570\nlen(all_df.columns)","e0b34ab3":"all_df","8e1b0316":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u4e88\u6e2c\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3057\u3066\u5143\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u623b\u3059\u3002\ntrain_df = pd.merge(all_df.iloc[train_df.index[0]:train_df.index[-1]],train_df['SalePrice'],left_index=True,right_index=True)\ntest_df = all_df.iloc[train_df.index[-1]:]","129de6e0":"train_df = train_df[(train_df['LotArea']<20000) & (train_df['SalePrice']<400000)& (train_df['YearBuilt']>1920)]","f8210167":"# \u5bfe\u6570\u5909\u63db\u524d\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3001\u6b6a\u5ea6\u3001\u5c16\u5ea6\nsns.distplot(train_df['SalePrice'])\nprint(f\"\u6b6a\u5ea6: {round(train_df['SalePrice'].skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(train_df['SalePrice'].kurt(),4)}\" )","1c67c5d7":"# SalePriceLog\u306b\u5bfe\u6570\u5909\u63db\u3057\u305f\u5024\u3092\u5165\u308c\u308b\u3002\u8aac\u660e\u306e\u90fd\u5408\u4e0a\u65b0\u305f\u306a\u30ab\u30e9\u30e0\u3092\u4f5c\u308b\u304c\u3001\u57fa\u672c\u7684\u306b\u305d\u306e\u307e\u307e\u4ee3\u5165\u3057\u3066\u826f\u3044\u3002\ntrain_df['SalePriceLog'] = np.log(train_df['SalePrice'])","a1f58e84":"# \u5bfe\u6570\u5909\u63db\u5f8c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3001\u6b6a\u5ea6\u3001\u5c16\u5ea6\nsns.distplot(train_df['SalePriceLog'])\nprint(f\"\u6b6a\u5ea6: {round(train_df['SalePriceLog'].skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(train_df['SalePriceLog'].kurt(),4)}\" )","ed7f8ed0":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\u8aac\u660e\u5909\u6570\ntrain_X = train_df.drop(columns = ['SalePrice','SalePriceLog'])\n# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\u76ee\u7684\u5909\u6570\ntrain_y = train_df['SalePriceLog']\n\n# \u4e88\u6e2c\u30c7\u30fc\u30bf\u3001\u8aac\u660e\u5909\u6570\ntest_X = test_df","cf51b7ac":"best_alpha = lasso_tuning(train_X,train_y)","009ad52e":"# \u30e9\u30c3\u30bd\u56de\u5e30\u30e2\u30c7\u30eb\u306b\u30d9\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\nlasso = Lasso(alpha = best_alpha)\n# \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u4f5c\u6210\npipeline = make_pipeline(StandardScaler(), lasso)\n# \u5b66\u7fd2\npipeline.fit(train_X,train_y)","2573aed7":"# \u7d50\u679c\u3092\u4e88\u6e2c\npred = pipeline.predict(test_X)","264a5b85":"# \u4e88\u6e2c\u7d50\u679c\u306e\u30d7\u30ed\u30c3\u30c8\nsns.distplot(pred)\n# \u6b6a\u5ea6\u3068\u5c16\u5ea6\nprint(f\"\u6b6a\u5ea6: {round(pd.Series(pred).skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(pd.Series(pred).kurt(),4)}\" )","ebf241fe":"# \u6307\u6570\u5909\u63db\npred_exp = np.exp(pred)\n# \u6307\u6570\u5909\u63db\u3057\u305f\u4e88\u6e2c\u7d50\u679c\u3092\u30d7\u30ed\u30c3\u30c8\nsns.distplot(pred_exp)\n# \u6b6a\u5ea6\u3068\u5c16\u5ea6\nprint(f\"\u6b6a\u5ea6: {round(pd.Series(pred_exp).skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(pd.Series(pred_exp).kurt(),4)}\" )","c8a4e737":"# 400,000\u3088\u308a\u9ad8\u3044\u7269\u4ef6\u306f\u9664\u53bb\npred_exp_ex_outliars = pred_exp[pred_exp<400000]\n# \u6307\u6570\u5909\u63db\u3057\u305f\u4e88\u6e2c\u7d50\u679c\u3092\u30d7\u30ed\u30c3\u30c8\nsns.distplot(pred_exp_ex_outliars)\n# \u6b6a\u5ea6\u3068\u5c16\u5ea6\nprint(f\"\u6b6a\u5ea6: {round(pd.Series(pred_exp_ex_outliars).skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(pd.Series(pred_exp_ex_outliars).kurt(),4)}\" )","09819934":"# \u5b66\u7a2e\u30c7\u30fc\u30bf\u306e\u4f4f\u5b85\u4fa1\u683c\u3092\u30d7\u30ed\u30c3\u30c8\nsns.distplot(train_df['SalePrice'])\n# \u6b6a\u5ea6\u3068\u5c16\u5ea6\nprint(f\"\u6b6a\u5ea6: {round(pd.Series(train_df['SalePrice']).skew(),4)}\" )\nprint(f\"\u5c16\u5ea6: {round(pd.Series(train_df['SalePrice']).kurt(),4)}\" )","01915ed3":"# sample_submission.csv\u306e\u8aad\u307f\u8fbc\u307f\nsubmission_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\n# sample_submission.csv\u306e\u5f62\u5f0f\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u5148\u982d\u4e94\u884c\u3092\u898b\u3066\u307f\u308b\u3002\nsubmission_df.head()","91929e91":"# \u6307\u6570\u5909\u63db\u3057\u305f\u5024\u3092\u4ee3\u5165\nsubmission_df['SalePrice'] = pred_exp","88c52686":"submission_df","d3e54821":"submission_df.to_csv('submission.csv',index=False)","4fd0d0fa":"### 2.2\u3000\u30e9\u30c3\u30bd\u56de\u5e30\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u95a2\u6570","57157925":"\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4f4f\u5b85\u4fa1\u683c\u306e\u5206\u5e03\u3068\u6bd4\u8f03","243800a2":"### 4.6\u3000\u4f4f\u5b85\u4fa1\u683c\u3092\u5bfe\u6570\u5909\u63db\n\u591a\u304f\u306e\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u6b63\u898f\u5206\u5e03\u306e\u30c7\u30fc\u30bf\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6b63\u898f\u5206\u5e03\u3067\u306f\u306a\u3044\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u7cbe\u5ea6\u304c\u51fa\u306a\u3044\u5834\u5408\u304c\u591a\u3044\u3002  \n-> \u6b63\u898f\u5206\u5e03\u306b\u5f93\u308f\u306a\u3044\u5909\u6570\u306e\u5bfe\u6570\u3092\u3068\u308b\u3068\u3001\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u4ed8\u304f\u3053\u3068\u304c\u591a\u3044\u3002(\u305d\u306e\u3088\u3046\u306a\u5206\u5e03\u3092\u5bfe\u6570\u6b63\u898f\u5206\u5e03\u3068\u547c\u3076\u3002)","cb1d7223":"### \u4f59\u8ac7\n\u5143\u306e\u76ee\u7684\u5909\u6570\u306e\u5206\u5e03\u306b\u3088\u3063\u3066\u306f\u5bfe\u6570\u5909\u63db\u304c\u610f\u5473\u3092\u306a\u3055\u306a\u3044\u3001\u307e\u305f\u306f\u60aa\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u5834\u5408\u304c\u3042\u308b\u3002   \n\u53c2\u8003\uff1a[\u5bfe\u6570\u5909\u63db\u304c\u9069\u3055\u306a\u3044\u5834\u5408\u304c\u3042\u308b\uff01\uff1f\u5bfe\u6570\u5909\u63db\u3059\u308b\u3068\u7d50\u679c\u304c\u60aa\u304f\u306a\u308b\u4f8b\u306e\u7d39\u4ecb](https:\/\/yolo-kiyoshi.com\/2018\/12\/26\/post-1037\/)","04388354":"\u57fa\u672c\u306f\u4e88\u6e2c\u7d50\u679c\u3092\u4ee3\u5165\u3059\u308b\u3060\u3051\u3067OK\u3002(\u4e88\u6e2c\u7d50\u679c\u306e\u500b\u6570\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u30c1\u30a7\u30c3\u30af\u306b\u3082\u306a\u308b\u3002)","0e8cd545":"\u3053\u308c\u306f\u300c4.6\u3000\u4f4f\u5b85\u4fa1\u683c\u3092\u5bfe\u6570\u5909\u63db\u300d\u3067\u5bfe\u6570\u5909\u63db\u3057\u305f\u5024\u306a\u306e\u3067\u3001\u9006\u306b\u6307\u6570\u5909\u63db\u3057\u3066\u623b\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002","ac4e8d96":"### 4.3\u3000\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\n\u4e88\u6e2c\u306b\u52b9\u679c\u7684\u305d\u3046\u306a\u65b0\u3057\u3044\u5909\u6570\u3092\u8ffd\u52a0  \n\u4f8b\uff1a\u5efa\u7269\u5185\u306e\u7dcf\u9762\u7a4d = 1\u968e\u306e\u9762\u7a4d + 2\u968e\u306e\u9762\u7a4d + \u5730\u4e0b\u306e\u9762\u7a4d  \n\u8a73\u3057\u304f\u306f\u3001\u300c2.1\u3000\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306b\u3088\u308a\u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\u3059\u308b\u95a2\u6570\u300d\u3092\u53c2\u7167","819e7d79":"### 4.1\u3000\u4e00\u90e8\u306e\u6570\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\u5909\u6570\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n\u6570\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\u304c\u3001\u6570\u5b57\u306e\u5927\u5c0f\u95a2\u4fc2\u304c\u4e88\u6e2c\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u65b9\u304c\u826f\u3044\u3082\u306e\u306f\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u3059\u3079\u304d\u3000\u2192\u3000\u6587\u5b57\u5217\u306b\u5909\u66f4\u3057\u3066\u304a\u304f  \n\u4f8b\uff1a\u8840\u6db2\u578b\u306e\u5909\u6570\u304c{'A' : 0 ,'B' : 1 , 'O' : 3 , 'AB' : 4 }\u3068\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u6570\u306e\u5927\u5c0f\u306b\u610f\u5473\u306f\u306a\u3044","71df060b":"csv\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u63d0\u51fa\uff01","ba15bd68":"\u6700\u3082\u7cbe\u5ea6\u304c\u51fa\u305falpha\u306f\u300c0.01\u300d\u3001RMSE(\u5e73\u5747\u4e8c\u4e57\u5e73\u65b9\u6839\u8aa4\u5dee)\u306f\u300c0.0985\u300d","30d8ae26":"## \u5909\u6570\u306b\u3064\u3044\u3066  \n\u30c7\u30fc\u30bf\u8a73\u7d30(\u5909\u6570\u5b9a\u7fa9)\u306f\/kaggle\/input\/house-prices-advanced-regression-techniques\/data_description.txt \u306b\u8a18\u8f09 \n<hr>  \n\n### \u76ee\u7684\u5909\u6570(\u672c\u8ab2\u984c\u3067\u4e88\u6e2c\u3059\u308b\u5024) - 1\u500b\n* SalePrice : \u4f4f\u5b85\u4fa1\u683c\n\n<hr>\n  \n### \u8aac\u660e\u5909\u6570(\u4e88\u6e2c\u306b\u4f7f\u3046\u5909\u6570)\u3000- 79\u500b\u3000\u4e00\u90e8\u629c\u7c8b\n\n\u4f4f\u5b85\u4fa1\u683c\u306b\u5927\u304d\u304f\u5f71\u97ff\u3057\u305d\u3046\u306a\u5909\u6570\n* LotArea : \u6577\u5730\u9762\u7a4d\n* YearBuilt : \u5efa\u7bc9\u5e74\n* YearRemodAdd : \u30ea\u30d5\u30a9\u30fc\u30e0\u5e74  \n\n\u4f4f\u5b85\u4fa1\u683c\u306b\u3042\u308b\u7a0b\u5ea6\u5f71\u97ff\u3057\u305d\u3046\u306a\u5909\u6570\n* KitchenQual : \u30ad\u30c3\u30c1\u30f3\u306e\u72b6\u614b\n* RoofMatl : \u5c4b\u6839\u306e\u6750\u8cea\n  \n\u3081\u3063\u3061\u3083\u30a2\u30e1\u30ea\u30ab\u3063\u307d\u3044\u3084\u3064\u3082\u3002\u3002\u3002\n* HeatingQC : \u6696\u7089\u306e\u72b6\u614b\n* PoolArea : \u30d7\u30fc\u30eb\u306e\u5e83\u3055","83827b97":"## \u8ab2\u984c\u6982\u8981\n\u30a2\u30e1\u30ea\u30ab\u5408\u5dde\u56fd \u30a2\u30a4\u30aa\u30ef\u5dde\u3000\u30a8\u30a4\u30e0\u30ba\u5e02\u306e\u6238\u5efa\u3066\u4f4f\u5b85\u306e\u4fa1\u683c\u309279\u500b\u306e\u5909\u6570\u304b\u3089\u4e88\u6e2c\u3059\u308b\u3002\n<br>\n<br>\n<br>\n[\u30a2\u30a4\u30aa\u30ef\u5dde - Wikipedia](https:\/\/ja.wikipedia.org\/wiki\/%E3%82%A2%E3%82%A4%E3%82%AA%E3%83%AF%E5%B7%9E)\n<br>\n<img src=\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/57\/Iowa_in_United_States.svg\/560px-Iowa_in_United_States.svg.png\" alt=\"\u30a2\u30a4\u30aa\u30ef\u5dde\" align=\"left\" width= \"300px\">\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\u50d5\u306e\u5927\u597d\u304d\u306aSlipknot\u306e\u51fa\u8eab\u5730\n<br>\n<img src=\"https:\/\/images-na.ssl-images-amazon.com\/images\/I\/81lrF8AR%2BtL._AC_SX679_.jpg\" alt=\"Slipknot\" align=\"left\" width= \"300px\">\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n[\u30a2\u30a4\u30aa\u30ef\u5dde \u30a8\u30a4\u30e0\u30ba\u5e02 - Wikipedia](https:\/\/ja.wikipedia.org\/wiki\/%E3%82%A8%E3%82%A4%E3%83%A0%E3%82%BA_(%E3%82%A2%E3%82%A4%E3%82%AA%E3%83%AF%E5%B7%9E))\n<br>\n<br>","41d0656a":"### 5.2\u3000\u30d9\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7528\u3044\u3066\u30e2\u30c7\u30eb\u4f5c\u6210\n\u4ea4\u5dee\u691c\u8a3c\u306e\u7d50\u679c\u3092\u3082\u3068\u306b\u3001\u6700\u512a\u79c0alpha\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u8a2d\u5b9a\u3057\u3066\u5b66\u7fd2","51b22420":"### 4.4\u3000\u6587\u5b57\u5217\u306e\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u5316(One-Hot-Encoding)\n\u6587\u5b57\u5217\u306e\u307e\u307e\u3067\u306f\u3001\u6b63\u898f\u5316\u3057\u305f\u308a\u6a5f\u68b0\u5b66\u7fd2\u306b\u304b\u3051\u3089\u308c\u306a\u3044\u306e\u3067\u3001One-Hot-Encoding\u306b\u3088\u308a\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u5316\u3059\u308b\u3002  \n![One-Hot-Encoding](https:\/\/miro.medium.com\/max\/1400\/1*ggtP4a5YaRx6l09KQaYOnw.png)\n\u51fa\u5178\uff1a[Building a One Hot Encoding Layer with TensorFlow](https:\/\/towardsdatascience.com\/building-a-one-hot-encoding-layer-with-tensorflow-f907d686bf39)","16ff6842":"\u5206\u5e03\u306f\u304b\u306a\u308a\u4f3c\u3066\u308b\uff01\u6c17\u304c\u3059\u308b\uff01","a1c6d0fb":"### 5.1\u3000\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\u4ea4\u5dee\u691c\u8a3c(Grid Search)\u3092\u7528\u3044\u3066\u3001\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306ealpha\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0  \nlasso_tuning\u3000-> \u5b66\u7fd2\u30c7\u30fc\u30bf\u5185\u3067\u30db\u30fc\u30eb\u30c9\u30a2\u30a6\u30c8\u691c\u8a3c\u3092\u3057\u3066\u3001\u6700\u3082\u7cbe\u5ea6\u306e\u9ad8\u304b\u3063\u305falpha\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8fd4\u3059\u3002  \n\u8a73\u3057\u304f\u306f\u3001\u300c2.2\u3000Lasso\u56de\u5e30\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u95a2\u6570\u300d\u3092\u53c2\u7167","23edd382":"### 6.1 \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3067\u4f4f\u5b85\u4fa1\u683c\u3092\u4e88\u6e2c\u3059\u308b\u3002","5b57dd91":"### 6.2\u3000\u4e88\u6e2c\u7d50\u679c\u3092\u6307\u6570\u5909\u63db","ae1fe557":"## 7 \u63d0\u51fa\u7528csv\u3092\u4f5c\u6210\nsample_submission.csv\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3001\u63d0\u51fa\u3059\u308b\u3002","90827fc9":"### \u4f59\u8ac7\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u5927\u5c0f\u306e\u610f\u5473\u3092\u6301\u305f\u305b\u305f\u3044\u5834\u5408\u306fOrdinal Encoding(Label Encoding)\u3092\u7528\u3044\u308b\u3068\u3088\u3044\u3002  \n![Ordinal Encoding](https:\/\/www.renom.jp\/ja\/notebooks\/tutorial\/preprocessing\/category_encoding\/renom_cat_ordinal.png)\n\u4f8b\uff1a \u30c6\u30b9\u30c8\u306e\u7d50\u679c\u306b\u57fa\u3065\u3044\u305f\u8a55\u5b9a\u300090 ~ :'S',\u300080 ~ 89 :'A',\u300070 ~ 79 :'B', ~ 70:'C'\u3000\u306e\u6642\u306f\u5927\u5c0f\u95a2\u4fc2\u306b\u610f\u5473\u304c\u3042\u308b\u3002  \n\u53c2\u8003\uff1a[\u30ab\u30c6\u30b4\u30ea\u30ab\u30eb\u5909\u6570\u306f\u306a\u3093\u3067\u3082\u30c0\u30df\u30fc\u5909\u63db\u3059\u308c\u3070\u3088\u3044\u306e\u304b\uff1f-\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u5fdc\u3058\u305fOne Hot Encoding\u3068Label Encoding\u306e\u4f7f\u3044\u5206\u3051](https:\/\/yolo-kiyoshi.com\/2018\/12\/23\/post-1016\/)  \n  \nOne-Hot-Encoding\u306b\u3088\u3063\u3066\u3001\u5909\u6570\u304c\u904e\u5270\u306b\u5897\u3048\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306b\u3001Ordinal Encoding\u3092\u7528\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u3002\n","a23928c6":"\u5916\u308c\u5024\u306e\u6761\u4ef6\u306f\u4ee5\u4e0b\u306b\u8a2d\u5b9a\u3057\u3001\u8a72\u5f53\u3059\u308b\u7269\u4ef6\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664\n* \u7269\u4ef6\u306e\u4fa1\u683c\u304c400000\u30c9\u30eb\u4ee5\u4e0a\n* \u6577\u5730\u9762\u7a4d\u304c20000\u5e73\u65b9\u30e1\u30fc\u30c8\u30eb\u4ee5\u4e0a\n* \u5efa\u7bc9\u5e74\u304c1920\u5e74\u3088\u308a\u524d","032f80e9":"\u3071\u3063\u3068\u898b\u308f\u304b\u308a\u3065\u3089\u3044\u304c\u3001\u6b6a\u5ea6\u3001\u5c16\u5ea6\u3092\u307f\u308b\u3068\u304b\u306a\u308a\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3065\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u308b\u3002","32a46e59":"\u4e88\u6e2c\u7d50\u679c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u307f\u3066\u307f\u308b\u3002","3b49cfc2":"## \u5927\u5909\u304a\u4e16\u8a71\u306b\u306a\u3063\u305f\u30d6\u30ed\u30b0\u306e\u30da\u30fc\u30b8\u3000\n[kaggle\u306e\u4f4f\u5b85\u4fa1\u683c\u4e88\u6e2c\u554f\u984c\uff08House Prices\uff09\u3092\u89e3\u3044\u3066\u307f\u308b](https:\/\/medium-s.jp\/kaggle-house-prices\/)","95ceeeb9":"## 1\u3000\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8","76a903d6":"### 2.1\u3000\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306b\u3088\u308a\u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\u3059\u308b\u95a2\u6570","5561b56f":"### 4.2\u3000\u6b20\u640d\u5024\u306e\u51e6\u7406\n\u6b20\u640d\u5024\u306e\u51e6\u7406\u306b\u306f\u3001\u4e3b\u306b\u4ee5\u4e0b\u306e2\u3064\u304c\u3042\u308b\u3002  \n1. \u6b20\u640d\u5024\u3092\u542b\u3080\u884c\u307e\u305f\u306f\u5217\u306e\u524a\u9664  \n2. \u6b20\u640d\u5024\u3092\u4ee3\u8868\u5024\u306a\u3069\u3067\u57cb\u3081\u308b   \n  \n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u3067\u306f\u6b20\u640d\u5024\u3068\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u306f\u3001\u305d\u306e\u8a2d\u5099\u304c\u306a\u3044\u5834\u5408\u3067\u3042\u308b\u3002(\u4f8b\uff1aPoolArea\u304c\u6b20\u640d\u3057\u3066\u3044\u308b\u7269\u4ef6\u306f\u305d\u3082\u305d\u3082\u30d7\u30fc\u30eb\u304c\u306a\u3044\u3002)  \n\u305d\u3053\u3067\u4eca\u56de\u306f\u3001\u6570\u5b57\u306e\u5909\u6570\u306e\u6b20\u640d\u306f\u300c0\u300d,\u6587\u5b57\u5217\u306e\u5909\u6570\u306e\u6b20\u640d\u306f\u300c'None'\u300d\u3067\u57cb\u3081\u308b\u3082\u306e\u3068\u3059\u308b\u3002","98addcd7":"## 5.\u3000\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3001\u5b66\u7fd2\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u50be\u5411\u3092\u5b66\u7fd2\u3057\u3001\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002","d7696d85":"## 3.1\u3000\u58f2\u5374\u4fa1\u683c\u306b\u3064\u3044\u3066","32529ea7":"### 4.5\u3000\u5916\u308c\u5024\u306e\u9664\u53bb\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u304b\u3089\u7279\u7570\u306a\u7269\u4ef6\u306e\u30c7\u30fc\u30bf\u306f\u524a\u9664\u3057\u3066\u304a\u304f\u3002(\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u7269\u4ef6\u306f\u524a\u9664\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306e\u307f\u5b9f\u65bd)  \n\u4f8b\uff1a\u4e00\u822c\u306e\u4f4f\u5b85\u306e\u30c7\u30fc\u30bf\u306b\u30cf\u30ea\u30a6\u30c3\u30c9\u30b9\u30bf\u30fc\u306e\u7269\u4ef6\u306e\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3001\u305d\u306e\u30c7\u30fc\u30bf\u306b\u4e88\u6e2c\u304c\u5f71\u97ff\u3092\u53d7\u3051\u3066\u3057\u307e\u3046\u3002","b9f1ceeb":"\u4fa1\u683c\u306e\u4f4e\u3044\u7269\u4ef6\u304c\u5927\u591a\u6570\u3092\u5360\u3081\u3066\u3044\u305d\u3046\u3002\u3002\u3002  \n-> \u6b63\u898f\u5206\u5e03\u306b\u5f93\u308f\u306a\u3044\u5206\u5e03","5a26d072":"\u3081\u3061\u3083\u304f\u3061\u3083\u9ad8\u3044\u7269\u4ef6\u304c\u3042\u3063\u3066\u307f\u3065\u3089\u3044\u306e\u3067\u3001\u4e00\u65e6\u5916\u308c\u5024\u9664\u53bb\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3002","b1adf1cf":"# House Prices\u3092(\u30d1\u30af\u3063\u3066)\u3084\u3063\u3066\u307f\u305f\u3002","e9796ba0":"csv\u3092\u51fa\u529b\u3059\u308b\u3002(\u5fc5\u305a index=False \u3068\u3059\u308b\u3053\u3068\uff01)","6550fd28":"### 4.7\u3000\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\u3068\u76ee\u7684\u5909\u6570\u3001\u4e88\u6e2c\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u5909\u6570\u306b\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u5206\u5272\u3059\u308b\u3002","4d2e9512":"### \u6b6a\u5ea6(\u308f\u3044\u3069)\n\u5206\u5e03\u3092\u6b63\u898f\u5206\u5e03\u3068\u6bd4\u8f03\u3057\u305f\u3068\u304d\u306e\u504f\u308a\u5ea6\u5408\u3044(\u975e\u5bfe\u79f0\u6027)\u3092\u793a\u3059\u5c3a\u5ea6\u30020\u306b\u8fd1\u3044\u307b\u3069\u5de6\u53f3\u5bfe\u79f0\u3002  \n![\u6b6a\u5ea6](http:\/\/bellcurve.jp\/statistics\/wp-body\/wp-content\/uploads\/2018\/01\/795316b92fc766b0181f6fef074f03fa.png)\n  \n### \u5c16\u5ea6(\u305b\u3093\u3069)\n\u5206\u5e03\u3092\u6b63\u898f\u5206\u5e03\u3068\u6bd4\u8f03\u3057\u305f\u3068\u304d\u306e\u5c16\u308a\u5177\u5408\u3092\u793a\u3059\u5c3a\u5ea6\u30020\u306b\u8fd1\u3044\u307b\u3069\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3002  \n\u307e\u305f\u3001\u6b63\u306e\u5927\u304d\u3044\u5024\u3092\u3068\u308b\u307b\u3069\u3001\u30d4\u30fc\u30af\u4ed8\u8fd1\u306b\u6a19\u672c\u304c\u96c6\u4e2d\u3057\u3066\u304a\u308a\u3001\u8ca0\u306e\u5927\u304d\u3044\u5024\u3092\u3068\u308b\u307b\u3069\u3001\u5206\u5e03\u304c\u6563\u3089\u3070\u3063\u3066\u3044\u308b\u3002\n![\u6b6a\u5ea6](http:\/\/bellcurve.jp\/statistics\/wp-body\/wp-content\/uploads\/2018\/01\/2b530e80c7d0de90885e285c5d798063.png)\n  \n\u53c2\u8003\uff1a[\u6b6a\u5ea6\u3068\u5c16\u5ea6 - \u7d71\u8a08Web](https:\/\/bellcurve.jp\/statistics\/course\/17950.html)","8c3d6ecd":"![\u30b9\u30b3\u30a2](https:\/\/qiita-image-store.s3.ap-northeast-1.amazonaws.com\/0\/801820\/e06da4b6-6090-f058-a359-81ee9b712a1c.png)\n![\u9806\u4f4d](https:\/\/qiita-image-store.s3.ap-northeast-1.amazonaws.com\/0\/801820\/d0a17dfb-bb60-9bd5-093f-835693be4397.png)","fb8f9fed":"## 4\u3000\u30c7\u30fc\u30bf\u524d\u51e6\u7406\n\u524d\u51e6\u7406\u306f\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u4e88\u6e2c\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5408\u308f\u305b\u3066\u540c\u6642\u306b\u884c\u3046\u3002  \n(\u305f\u3060\u3057\u3001\u4e88\u6e2c\u30c7\u30fc\u30bf\u306f\u5168\u3066\u306e\u884c\u3092\u6b8b\u3059\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u5916\u308c\u5024\u306e\u9664\u53bb\u306f\u3057\u306a\u3044\u3002)","20291e84":"## 2\u3000\u95a2\u6570","e358f261":"\u4eca\u56de\u306f\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066\u30e9\u30c3\u30bd\u56de\u5e30(Lasso Regression)\u3092\u7528\u3044\u308b\u3002  \n[\u30e9\u30c3\u30bd\u56de\u5e30 - Wikipedia](https:\/\/ja.wikipedia.org\/wiki\/%E3%83%A9%E3%83%83%E3%82%BD%E5%9B%9E%E5%B8%B0)  \n  \n\u30e9\u30c3\u30bd\u56de\u5e30\u3092\u9078\u3093\u3060\u7406\u7531\n* \u5909\u6570\u306e\u6570\u304c\u591a\u304f\u3001\u5c11\u6570\u306e\u5909\u6570\u304c\u4e88\u6e2c\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u305d\u3046\u306a\u5834\u5408\u306b\u6709\u52b9 (\u6577\u5730\u9762\u7a4d\u3068\u304b\u7bc9\u5e74\u6570\u304c\u5f71\u97ff\u3092\u4e0e\u3048\u305d\u3046\u3002\u3002\u3002)\n* \u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u304calpha\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3060\u3051\u8abf\u6574\u3059\u308c\u3070\u884c\u3051\u305d\u3046\u306a\u96f0\u56f2\u6c17\u3060\u3063\u305f\u3002(\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u30c1\u30e7\u30ed\u305d\u3046)","a63086d2":"## 3\u3000\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3001EDA (\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790)","a5eff4a6":"## 6\u3000\u4f4f\u5b85\u4fa1\u683c\u4e88\u6e2c"}}