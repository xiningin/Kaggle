{"cell_type":{"31693163":"code","c4150c50":"code","2988d48f":"code","d797e65e":"code","a633384b":"code","39820a2d":"code","9b09d62e":"code","462b9787":"code","b043c0f4":"code","2049a070":"code","3afe842a":"code","16d60023":"code","73f07294":"code","9307dfc7":"markdown","91d28b0f":"markdown","fb29bf18":"markdown","3cc65cdd":"markdown","49da99a7":"markdown","8235330f":"markdown","8f890bf4":"markdown","8725ad4c":"markdown","c32f93cd":"markdown"},"source":{"31693163":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\npd.set_option('display.max_columns', 500)","c4150c50":"px.set_mapbox_access_token('pk.eyJ1IjoiaGFyaXN5YW0iLCJhIjoiY2poZHRqMGV4MG93MDNkcXZqcmQ3b3RzcSJ9.V-QDWKoYu_6OqATbmH9ocw')","2988d48f":"train_df = pd.read_csv('\/kaggle\/input\/bigquery-geotab-intersection-congestion\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/bigquery-geotab-intersection-congestion\/test.csv')","d797e65e":"train_df.head(10)","a633384b":"train_df.info()","39820a2d":"fig, axarr = plt.subplots(1,2, figsize=(18, 8))\nsns.countplot(x='City',data=train_df,ax=axarr[0]);\naxarr[0].set_title('measurements per city in Train Set')\naxarr[0].set_ylabel('# of Observations in Train Set');\nsns.countplot(x='City',data=test_df,ax=axarr[1]);\naxarr[1].set_title('measurements per city  in Test Set')\naxarr[1].set_ylabel('# of Observations in Test Set');","9b09d62e":"fig, axarr = plt.subplots(1, 2, figsize=(15, 8))\ntrain_df.groupby(['City']).IntersectionId.nunique().sort_index().plot.bar(ax=axarr[0])\naxarr[0].set_title('# of Intersections per city in Train Set')\naxarr[0].set_ylabel('# of Intersections');\ntest_df.groupby(['City']).IntersectionId.nunique().sort_index().plot.bar(ax=axarr[1])\naxarr[1].set_title('# of Intersections per city in Test Set')\naxarr[1].set_ylabel('# of Intersections');","462b9787":"print('Number of Entry Headings in Train Set: ', len(train_df.EntryHeading.unique()))\nprint('Number of Exit Headings in Train Set: ', len(train_df.ExitHeading.unique()))\nprint('Number of Entry Street Names in Train Set: ', len(train_df.EntryStreetName.unique()))\nprint('Number of Exit Street Names in Train Set: ', len(train_df.ExitStreetName.unique()))\n\nprint('Number of Entry Headingds in Test Set: ', len(test_df.EntryHeading.unique()))\nprint('Number of Exit Headings in Test Set: ', len(test_df.ExitHeading.unique()))\nprint('Number of Entry Street Names in Test Set: ', len(test_df.EntryStreetName.unique()))\nprint('Number of Exit Street Names in Test Set: ', len(test_df.ExitStreetName.unique()))","b043c0f4":"train_intersections_count=train_df.groupby(['City','Latitude','Longitude']).IntersectionId.count().reset_index()\ntrain_intersections_count.columns=['City','Latitude','Longitude','Count_Obs']","2049a070":"fig = px.scatter_mapbox(train_intersections_count[train_intersections_count.City=='Atlanta'], lat=\"Latitude\", lon=\"Longitude\",size=\"Count_Obs\",color=\"Count_Obs\",  \n                        color_continuous_scale=px.colors.sequential.Viridis, size_max=15, zoom=10)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.show()","3afe842a":"fig = px.scatter_mapbox(train_intersections_count[train_intersections_count.City=='Chicago'], lat=\"Latitude\", lon=\"Longitude\",size=\"Count_Obs\",color=\"Count_Obs\",  \n                        color_continuous_scale=px.colors.sequential.Viridis, size_max=15, zoom=9)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.show()","16d60023":"fig = px.scatter_mapbox(train_intersections_count[train_intersections_count.City=='Philadelphia'], lat=\"Latitude\", lon=\"Longitude\",size=\"Count_Obs\",color=\"Count_Obs\",  \n                        color_continuous_scale=px.colors.sequential.Viridis, size_max=15, zoom=10)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.show()","73f07294":"fig = px.scatter_mapbox(train_intersections_count[train_intersections_count.City=='Boston'], lat=\"Latitude\", lon=\"Longitude\",size=\"Count_Obs\",color=\"Count_Obs\",  \n                        color_continuous_scale=px.colors.sequential.Viridis, size_max=15, zoom=10)\nfig.update_layout(mapbox_style=\"open-street-map\")\nfig.show()","9307dfc7":"# 1) Imorting Necessary modules","91d28b0f":"***Observations:***\n* Every Intersection has an Id, and it is marked by Latitude and Longitude and labeled by City\n* Entry and Exit street were given along with directions\n* Temporal Information - Time, Boolean Weekend variable and Month\n* Path - is basically the string concat of the Spatial columns --> Entry\/Exit Street Name + Entry\/Exit Heading\n* Intermediate Target Variables - TimeFromFirstStop\n* Target Variables - TotalTimeStopped, DistanceToFirstStop -- 20th,40th ,50th, 60th & 80th percentiles","fb29bf18":"**Observation: ** \n* The train set have less number of Intersections per city when compared to test set. Need to confirm!!\n* In the train set and test set --> Chicago had higher number of Intersections","3cc65cdd":"Hello everyone!!. In this following kernel I will do the EDA for this dataset. Please do upvote if you find it useful!!\nPlease mention all the improvements or mistakes and new ideas as well in the comments below\n\nLoading of the maps could be slower, but I will be improving them by aggregations","49da99a7":"# 2) EDA","8235330f":"**Observations:**\n*  In every city I see that more number of observations are recorded at the Intersections near to the Airports\n*  Temporal Information will help in more insights here","8f890bf4":"**!!! WILL be updated!!!**","8725ad4c":"***Observation:*** Train set and test have similar %observations in the 4 cities","c32f93cd":"# Topics still need to be answered\/covered!!!\n* How to combine the percentile values for the Target Variables for visualization?\n* Would like to create a distance features from POI's like airports and shopping centres to Intersections...can be a very useful information\n* Plots using Temporal Information\n"}}