{"cell_type":{"d2721cfd":"code","378c4b95":"code","07028daf":"code","06115029":"code","829aa994":"code","5fefa553":"code","823c4e25":"code","460b492c":"code","2d45d56c":"code","29b5d217":"code","002b8421":"code","bfa51e14":"code","a494ad85":"code","72432ef9":"code","5cf81625":"code","acaf0e58":"code","ad7a2b45":"code","e094330f":"code","7251fea1":"code","e8bf4eb4":"code","ccbee8b8":"code","38eb0fc0":"code","df50847a":"code","585a0598":"code","3b722172":"code","b7c52c74":"markdown","7d6d84d1":"markdown","547fb86e":"markdown","5bdcca7a":"markdown","0039c369":"markdown","73140918":"markdown","1970e6bf":"markdown","497ce9d9":"markdown","eeb4526e":"markdown","fa42e019":"markdown","e5065e5e":"markdown","6cf19ea5":"markdown","57daff96":"markdown","bab106aa":"markdown","d4678424":"markdown","85a263e8":"markdown","f6a29618":"markdown","2985463f":"markdown","eb5789e4":"markdown","f7273ebd":"markdown","ec946171":"markdown","beb52b3b":"markdown","d0ef5d41":"markdown","d0a99cc3":"markdown"},"source":{"d2721cfd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","378c4b95":"!pip install openpyxl\nimport openpyxl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom pandasql import sqldf\npysqldf = lambda q: sqldf(q, globals())","07028daf":"path = '..\/input\/average-temperature-of-pakistani-cities\/AVGTempPak.xlsx'\n\ndf = pd.read_excel(path, engine=\"openpyxl\")\ndf.head()","06115029":"df.info()","829aa994":"df.describe(include=[object])","5fefa553":"sns.lineplot(data=df )","823c4e25":"df.describe(include=[np.number]).round(1)","460b492c":"fig, axs = plt.subplots(3, 4, figsize=(20, 15))\n\nsns.histplot(data=df, x=\"January\", kde=True, ax=axs[0, 0])\nsns.histplot(data=df, x=\"February\", kde=True, ax=axs[0, 1])\nsns.histplot(data=df, x=\"March\", kde=True, ax=axs[0, 2])\nsns.histplot(data=df, x=\"April\", kde=True, ax=axs[0, 3])\nsns.histplot(data=df, x=\"May\", kde=True, ax=axs[1, 0])\nsns.histplot(data=df, x=\"June\", kde=True, ax=axs[1, 1])\nsns.histplot(data=df, x=\"July\", kde=True, ax=axs[1, 2])\nsns.histplot(data=df, x=\"August\", kde=True, ax=axs[1, 3])\nsns.histplot(data=df, x=\"September\", kde=True, ax=axs[2, 0])\nsns.histplot(data=df, x=\"October\", kde=True, ax=axs[2, 1])\nsns.histplot(data=df, x=\"November\", kde=True, ax=axs[2, 2])\nsns.histplot(data=df, x=\"December\", kde=True, ax=axs[2, 3])\n\nplt.show()","2d45d56c":"from scipy.stats import shapiro\n\nalpha = 0.05\ncolumns = list(df.columns)[2:]\n\nfor column in columns:\n    stat, p = shapiro(df[column])\n    print(f'Shapiro-Wilk test of month: {column}')\n    print(f'Statistics = {stat:.3f}, p-value = {p:.3f}')\n    \n    if p > alpha:\n        print('It follows a normal distribution.\\n')\n    else:\n        print('It does not follow a normal distribution.\\n')","29b5d217":"# l1 = []\n# l2 = []\n# for i in range(4):\n#     for j in range(4):\n#         l2 = [i ,j]\n#         l1.append(l2)","002b8421":"sns.boxplot(data=df[df.Range=='low'], orient='h', color='lightblue')","bfa51e14":"pysqldf('''\n        select City_name as 'City Name', max(September) as 'Max Temperature in September (Celsius)'\n        from df;\n''')","a494ad85":"df[df.Range=='low'].describe(include=[np.number]).round(1)","72432ef9":"sns.boxplot(data=df[df.Range=='high'], orient='h', color='red')","5cf81625":"pysqldf('''\n        select City_name as 'City Name', min(August) as 'Min Temperature in August (Celsius)'\n        from df;\n''')","acaf0e58":"pysqldf('''\n        select City_name as 'City Name', min(December) as 'Min Temperature in a Year (Celsius)'\n        from df;\n''')","ad7a2b45":"df[df.Range=='high'].describe(include=[np.number]).round(1)","e094330f":"df1 = df","7251fea1":"df1['Year_min'] = df.select_dtypes(include='number').min(axis=1).round(1)\ndf1['Year_max'] = df.select_dtypes(include='number').max(axis=1).round(1)\n\ndf1.head()","e8bf4eb4":"pysqldf('''\n        select City_name as 'City Name', min(Year_min) as 'Min_temp_year'\n        from df\n        group by City_name\n        order by Min_temp_year asc\n        limit 10;\n''')","ccbee8b8":"pysqldf('''\n        select City_name as 'City Name', max(Year_min) as 'Min_temp_year'\n        from df\n        group by City_name\n        order by Min_temp_year asc\n        limit 10;\n''')","38eb0fc0":"df1['Year_mean'] = df.select_dtypes(include='number').mean(axis=1).round(1)\ndf1['Year_median'] = df.select_dtypes(include='number').median(axis=1).round(1)\ndf1['Year_sd'] = df.select_dtypes(include='number').std(axis=1).round(1)\ndf1.head()","df50847a":"def show_values(axs, orient=\"v\", space=.01):\n    def _single(ax):\n        if orient == \"v\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() \/ 2\n                _y = p.get_y() + p.get_height() + (p.get_height()*0.01)\n                value = '{:.1f}'.format(p.get_height())\n                ax.text(_x, _y, value, ha=\"center\") \n        elif orient == \"h\":\n            for p in ax.patches:\n                _x = p.get_x() + p.get_width() + float(space)\n                _y = p.get_y() + p.get_height() - (p.get_height()*0.5)\n                value = '{:.1f}'.format(p.get_width())\n                ax.text(_x, _y, value, ha=\"left\")\n\n    if isinstance(axs, np.ndarray):\n        for idx, ax in np.ndenumerate(axs):\n            _single(ax)\n    else:\n        _single(axs)","585a0598":"from matplotlib import rcParams\n\ngrouped = df1.groupby(['City_name'])\norder = grouped.mean()[\"Year_mean\"].sort_values(ascending=True).index\n# order = df[\"Year_mean\"].sort_values(ascending=True).index\n\n\nrcParams['figure.figsize'] = 15,30\np = sns.barplot(y=\"City_name\", x=\"Year_mean\", data=df1, hue='Range', order=order)\n\nshow_values(p, \"h\", space=0.4)","3b722172":"df2 = df.iloc[:,:14]\n\ncorrelation = df2.corr()\n\nsns.heatmap(correlation, annot=True)\n\nplt.show()","b7c52c74":"So, Larkana is the city with highest temperature i.e. 41.8 C in the month of September.\n\nSummary statistics are as follows,","7d6d84d1":"Now, creating yearly columns related to mean, median and standard deviation.","547fb86e":"From the test it is indicated that only months March, April and July follow a normal distribution which was also evident from the above histograms.","5bdcca7a":"So, Chunian is the city with lowest temperature i.e. 3.6 C in the month of August whereas Skardu has the minimum in a year.\n\nSummary statistics are as follows,","0039c369":"## Initial Data Exploration","73140918":"Calculating coorelations between the numerical variables.","1970e6bf":"## Stats with respect to Months","497ce9d9":"## Stats with respect to Ranges","eeb4526e":"Summary statistics with respect to high and low temperatures are discussed below.\n\nWhen range equals low temperature,","fa42e019":"Let's check the overall summary statistics.","e5065e5e":"The boxplot shows that the months April to October are the hotest considering median greater than 30 C as the metric. The outlier in August is way from the minmum whisker, so we find which city is that.","6cf19ea5":"Now, finding out whether there exists null values in the dataset, and what are datatypes of each column.","57daff96":"It can be seen that winter months have high correlations with each other, and same is the case with summer months. For example, January have high correlations with February, March and December. This means such months their means are very closer to each other.","bab106aa":"Above barplot shows Drosh is the coldest, and Larkana is the hottest city with the year wise mean temperature.","d4678424":"Listing the top ten hottest and coldest cities of Pakistan.\n\nCreating two new columns.","85a263e8":"The boxplot shows that only January, November and December are the coldest months in a year considering median less than 10 C as the metric. The outlier in September is way from the maximum whisker, so we find which city is that.","f6a29618":"There are 47 unique cities in the dataset with a frequency of 2 whereas there are 2 unique temperature ranges with a frequency of 47.","2985463f":"June is the hottest month of year in Pakistan with a mean of 31.5 C and maximum of 46.3 C whereas January is the coldest month with a mean of 12.1 C and minimum of -12 C.\n\nAbove table only shows descriptive statistics without considering cities and range of temperature.\n\nNow, ploting distribution of each month.","eb5789e4":"When range equals high temperature,","f7273ebd":"Above histograms illustrates that the months April and July have unimodal distribution and the rest with the bimodal distribution. This shows that Pakistani cities don't lie in only one climate but in one month there many cities with hot and cold weather thus making a bimodal distribution except for April and July.\n\nWhether months follows a normal distribution or not, let's perform Shapiro-Wilk test.","ec946171":"## Stats with respect to Cities","beb52b3b":"There are no null values in the dataset.\n\nAre there 94 cities and 94 temperature ranges in the dataset? Let's find out.","d0ef5d41":"First of all, loading the dataset.","d0a99cc3":"## Coorelations"}}