{"cell_type":{"45b36c8f":"code","6d5963c8":"code","c4902937":"code","1da45def":"code","f2e72928":"code","75749e0e":"code","3ef8111b":"code","45a850d6":"code","beb41c85":"code","61388f42":"code","02a1651d":"code","df0d9d9e":"code","3bacbf6d":"code","7da4dd00":"code","ed893229":"code","1922d4c3":"code","62e574ee":"code","3424f2bc":"markdown","1eec7331":"markdown","786287a4":"markdown","5d005710":"markdown","2ee51473":"markdown"},"source":{"45b36c8f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d5963c8":"from sklearn.ensemble import RandomForestClassifier","c4902937":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")","1da45def":"train.head()","f2e72928":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")","75749e0e":"test.head()","3ef8111b":"# Null values \nmissing = [col for col in train.columns if train[col].isnull().sum()]\nprint(missing)\nprint(train.isnull().sum())\n","45a850d6":"print(test.isnull().sum())","beb41c85":"X_train = train.drop(['Survived','Ticket','Name','Cabin'],axis=1)\nX_train[\"Sex\"] = pd.get_dummies(X_train['Sex']) \nX_train.Age = X_train.Age.fillna(0)\nX_train.Embarked = pd.get_dummies(X_train.Embarked)","61388f42":"y_train= train[\"Survived\"]","02a1651d":"x_test = test.drop(['Ticket','Name','Cabin'],axis=1)\nx_test.Sex = pd.get_dummies(x_test.Sex)\nx_test.Age = x_test.fillna(0)\nx_test.Fare = x_test.Fare.fillna(0)\nx_test.Embarked = pd.get_dummies(x_test.Embarked )","df0d9d9e":"model = RandomForestClassifier()\nmodel.fit(X_train,y_train) \nmodel","3bacbf6d":"score = model.score(X_train,y_train) \nprint(\"Accuracy :\", score)","7da4dd00":"pred = model.predict(x_test)","ed893229":"pred = np.array(pred) \npred","1922d4c3":"sub = pd.DataFrame()\nsub['PassengerId'] = x_test['PassengerId']\nsub['Survived'] = pred\n\nsub.to_csv(\"submission.csv\",index=False)\nsub","62e574ee":"%ls \"..\/input\/titanic\"","3424f2bc":"# Predictions ","1eec7331":"# Accuracy ","786287a4":"# Submission ","5d005710":"# Preparing Data ...","2ee51473":"# Building Model "}}