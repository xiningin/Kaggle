{"cell_type":{"d8848c99":"code","3b7eaf13":"code","7ba39ffc":"code","8afce1be":"code","2a34836a":"code","1e1de7a4":"code","dfd77699":"code","fa1f163c":"code","981d3722":"code","6d1655e0":"code","512e8cda":"code","486da163":"markdown","0e1d9dc6":"markdown","7a93aa5d":"markdown","9c6a84bc":"markdown","46e79a7a":"markdown","6bdba810":"markdown","ff27a272":"markdown","f3411a4e":"markdown","48f54d17":"markdown","383fc19f":"markdown","e7cccce1":"markdown"},"source":{"d8848c99":"from fastai.vision.all import *\nfrom fastai.data.all import *","3b7eaf13":"datapath = Path('..\/input\/autistic-children-data-set-traintestvalidate\/')\ndatapath.ls()","7ba39ffc":"# all image names\ntrainfiles = get_image_files(datapath\/\"train\")\nvalidfiles = get_image_files(datapath\/\"valid\")\ntestfiles = get_image_files(datapath\/\"test\")\nall_files = trainfiles + validfiles + testfiles","8afce1be":"# indexes of the training and testing files\ntrain_idxs = [i for i, fname in enumerate(all_files) if \"train\" in str(fname)]\nval_idxs = [i for i, fname in enumerate(all_files) if \"valid\" in str(fname)]\ntest_idxs = [i for i, fname in enumerate(all_files) if \"test\" in str(fname)]","2a34836a":"# how to get image label: autistic, non-autistic\ndef label_func(fname):\n    return re.match(r'^(.*)\/(.*)$', fname.parent.as_posix()).groups()[1]","1e1de7a4":"dblock = DataBlock(blocks    = (ImageBlock, CategoryBlock),\n                   get_y     = label_func,\n                   splitter=lambda x: [train_idxs, test_idxs])","dfd77699":"dls = dblock.dataloaders(all_files)\ndls.show_batch()","fa1f163c":"learn = cnn_learner(dls, resnet34, metrics=[accuracy])","981d3722":"learn.fit_one_cycle(2)","6d1655e0":"learn.fine_tune(1)","512e8cda":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix(figsize=(6,6), dpi=60)","486da163":"Get the directory of the data. Note that with fastai, we are given the number of items in the directory in addition to the contents with ``ls()``","0e1d9dc6":"In order to set up the dataloaders to train the model, we need the following:\n- the list of image filenames\n- the indexes of the training and testing files\n- a function to determine what category the images are in, i.e., \"autistic\" or \"non_autistic\"\n\nNote that I am not actually using the validity set.","7a93aa5d":"With those components, we can set up a method for creating blocks of data. Here, I have not currently done any data augmentation.","9c6a84bc":"# Classifying images from the Autism Dataset","46e79a7a":"Fine tune the network for one cycle.","6bdba810":"Create a convolutional neural network with the dataloader, a pretrained resnet34 architecture, and show the outcome metrics of accuracy.","ff27a272":"In this kernel, I use a pretrained Resnet34 to classify the images from the Autism Dataset. I use the fastai framework (which is built on top of Pytorch) to do the classification task.\n\n<i>This is a work in progress, and will be updated with better documentation.<\/i>","f3411a4e":"Train with the ``fit_one_cycle`` approach for two cycles.","48f54d17":"Create a dataloader from the list of files we created earlier, and look at one batch of data. Check out [my other kernel](https:\/\/www.kaggle.com\/melissarajaram\/concerns-with-detect-autism-dataset) where I look deeper into the contents of the dataset. ","383fc19f":"Look at the confusion matrix for the predictions on the test set.","e7cccce1":"## V1 Summary\nThis bare-bones approach gets greater than 80% accuracy on classifying the images.\n\nTODO: implement gradcam to be able to see what is driving the classification of the model."}}