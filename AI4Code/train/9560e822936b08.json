{"cell_type":{"44ed6930":"code","4170262c":"code","3bd4ee32":"code","9ce8557a":"code","a72ac891":"code","f0b6dc1e":"code","aa358e74":"code","2e2095b5":"markdown","0808abbf":"markdown"},"source":{"44ed6930":"import numpy as np\nimport time","4170262c":"def vector_mult(arr1,arr2):\n    mult_arr = np.array([])\n    for i, i2 in zip(arr1, arr2):\n        mult_arr = np.append(mult_arr, [i*i2])\n    mult_arr = mult_arr.astype(int)\n    \n    return mult_arr","3bd4ee32":"arr1 = np.array([1,2,3]*500)\narr2 = np.array([1,2,3]*500)","9ce8557a":"t0 = time.time()\nmult = arr1 * arr2\nt1= time.time()\nprint(\"numpy: \", mult, \" in \", t1-t0)\n\nt0 = time.time()\nmult = vector_mult(arr1,arr2)\nt1= time.time()\nprint(\"my forloop: \", mult, \" in \", t1-t0)","a72ac891":"def matrix_multiply(mat1, mat2):\n    result = None\n    row = np.array([])\n    for i in mat1:\n        for i2 in mat2.T:\n            sum = np.matmul(i,i2.T)\n            row = np.append(row, sum)\n        if result is None:\n            result = row\n        else:\n            result = np.row_stack((result, row)).astype(int)\n        row = np.array([]) \n    return result","f0b6dc1e":"matrix1 = np.matrix([[3,2,1],[3,4,0]])\nmatrix2 = np.matrix([[1,2],[3,4],[2,3]])","aa358e74":"t0 = time.time()\nmult = matrix_multiply(matrix1,matrix2)\nt1= time.time()\nprint(\"mine: \", mult, \" in \", t1-t0)\n\nt0 = time.time()\nmult = matrix1 * matrix2\nt1= time.time()\nprint(\"numpy: \", mult, \" in \", t1-t0)","2e2095b5":"# Vector multiplication\nforloop function to multiply 2 vectors","0808abbf":"## Matrix multiplication\nmultiply matricies function by for loops"}}