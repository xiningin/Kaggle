{"cell_type":{"6b9970cb":"code","dd5f9aa4":"code","ba3da416":"code","1f8b25fe":"code","214c4c4e":"code","96c14bfd":"code","7fc0c8a2":"code","f4ef400a":"markdown","617da38b":"markdown"},"source":{"6b9970cb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n #   for filename in filenames:\n  #      print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","dd5f9aa4":"import pandas as pd \nimport numpy as np \nimport tensorflow as tf \nimport keras \nimport seaborn as sns \nimport matplotlib.pyplot as plt \nimport pickle \nimport cv2\nimport json \nfrom keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\nsns.set_style(\"whitegrid\")\nmy_pal = sns.color_palette(n_colors=10)","ba3da416":"!ls -GFlash --color ..\/input\/pku-autonomous-driving\/","1f8b25fe":"# let us look inside the train data \ntrain_csv = pd.read_csv(\"..\/input\/pku-autonomous-driving\/train.csv\")\ntrain_csv.head()","214c4c4e":"plt.rcParams[\"axes.grid\"] = False\nfig, ax = plt.subplots(figsize = (10,10))\ntrain_ids = train_csv['ImageId'].values\nimg_name = train_ids[244]\nimg = load_img('..\/input\/pku-autonomous-driving\/train_images\/' + img_name + '.jpg')\nplt.imshow(img)\nplt.show()","96c14bfd":"\nfig, ax = plt.subplots(figsize = (10,10))\ntrain_ids = train_csv['ImageId'].values\nimg_name = train_ids[244]\nmask = load_img('..\/input\/pku-autonomous-driving\/train_masks\/' + img_name + '.jpg')\nplt.imshow(mask)\nplt.show()","7fc0c8a2":"fig, ax = plt.subplots(figsize = (10,10))\nplt.imshow(img)\nplt.imshow(mask,cmap=plt.cm.viridis, interpolation='none', alpha = 0.7)\n\nplt.show()","f4ef400a":"# mask example ","617da38b":"# mask over image "}}