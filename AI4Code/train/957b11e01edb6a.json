{"cell_type":{"fdddb84f":"code","76800bb2":"code","3b85f645":"code","cc4fd1c1":"code","4ded32f7":"code","450cd829":"code","0b3abbb4":"code","d0a61938":"code","9f618619":"code","76023a7c":"code","0aa6c0fb":"code","5bc26742":"code","3021ee1e":"code","76cf57cf":"code","a2ae9c88":"code","9b557ae0":"code","88ce2a32":"code","ee9f2776":"code","9ef8ce03":"code","c603eb31":"code","65d9b9f0":"code","190e94d1":"code","4e0ec748":"code","de4b3fa3":"code","57cd3073":"code","edd7b07e":"code","96a17009":"code","5c79826a":"code","a5597246":"code","88086df3":"code","30dc592d":"code","364c18e4":"code","2a27cbc7":"code","28691d01":"code","22704782":"code","743e788e":"code","6964018b":"code","82922521":"code","dfad445f":"code","7bd18af0":"code","3c7a44e4":"code","9efcd016":"code","02331bea":"code","ee7fd02e":"code","33d74593":"code","887d530c":"code","68367605":"code","e65dcc73":"code","518114d4":"code","3d057e1c":"code","16562ba5":"code","850def89":"code","61f1f5ac":"code","5d3681e9":"code","db548aaa":"code","69749d42":"code","8376f1b8":"code","2f217384":"code","8d06a77c":"code","f9d209df":"code","c9d5eebb":"code","6b85a078":"code","26451664":"code","75566060":"code","275fdfc2":"code","bd80fd15":"code","7d158abe":"code","a166870b":"code","4061b47d":"code","fd1cf99a":"code","7de8d566":"code","fe5160cc":"code","bf64c240":"code","e4a4d8f6":"code","c424a3c7":"code","5b1084ec":"code","34761f8b":"code","450e9780":"code","6b3dbebe":"code","743b5b6a":"code","1299398f":"code","8850d91c":"code","ef55b027":"code","bf889cf4":"code","6df9bb2f":"code","6e169a5a":"code","ab8e896e":"code","ffedb5f1":"code","5ac4d65f":"code","fe69d5e3":"code","110a2c99":"code","9184c94a":"code","954a35aa":"code","e8d19a1a":"code","97b0d41b":"code","755af1d2":"code","1bc81411":"code","d7c02c7c":"code","5137a3a3":"code","d7f3dd13":"code","e61a0478":"code","bdb00aef":"code","ee7e3fb4":"code","cad63591":"code","6bcf18a9":"code","d3062cb9":"code","084c7241":"code","fae075c5":"code","310e0914":"code","ab2d3030":"code","a0e498ee":"code","631f39ed":"code","1059110c":"code","ecea1aaf":"code","15c4e6f5":"code","d6cb2505":"code","dd65cd60":"code","5d6acdd8":"code","3887e96a":"code","ab9590f0":"code","79cc1d63":"code","6ccdcba2":"code","6dd7e38d":"code","1d3fd330":"code","c8be526e":"code","8e10f040":"code","760f2573":"code","c03d81de":"code","9de91f03":"code","f364bbf7":"code","28c6d1f9":"code","75ad7abf":"code","7d6d75e9":"code","71d3e8f8":"code","12ecedfc":"code","33538023":"code","0447c837":"code","8ed2c54f":"code","abc13805":"code","7b8a5d29":"code","b8793495":"code","16ceb200":"code","445c6e2b":"code","f94130ad":"code","5904c2fc":"code","25eb3740":"code","6b21147e":"code","d4cbe0d5":"code","a0e94891":"code","0394fe5d":"code","be08a94c":"code","0786b3da":"code","6bde1fa5":"code","c05ef496":"code","665f6417":"code","e6e1ff01":"code","c1b4257b":"code","f87137a2":"code","1bb80819":"code","2920298e":"code","33a5bb4b":"code","6dd42452":"code","3172b576":"code","9b9f7b85":"code","93f75ce6":"code","30edbadf":"code","08d7f461":"code","43bc4fda":"code","179f3f2f":"code","333013f9":"code","0ce3e619":"code","b3ac7cc9":"code","7229d369":"code","b6bd75a7":"markdown","84b2ed90":"markdown","9892b796":"markdown","18306576":"markdown","313fbb60":"markdown","1312af61":"markdown","743343a9":"markdown","bd3f09e6":"markdown","9fde29fe":"markdown","1df92fac":"markdown","4a3704da":"markdown","01ab30b0":"markdown","af5cc04d":"markdown","bcc29cf0":"markdown","532782a5":"markdown","7cab5de0":"markdown","8a9a9f38":"markdown","d88f768b":"markdown","582fd9bc":"markdown","ce78e411":"markdown","c98928e7":"markdown","68069161":"markdown","107fa6ef":"markdown","ab40449e":"markdown","1b26abdb":"markdown","4c5eeb5b":"markdown","2915cfec":"markdown","112159f6":"markdown","8edea12d":"markdown","f866781c":"markdown","32d4cb81":"markdown","54399227":"markdown","9116a4a0":"markdown","9bbe7a81":"markdown","aa2d2820":"markdown","8962f016":"markdown","4633110b":"markdown","61aabf8d":"markdown","47358278":"markdown","c893d734":"markdown","e5944a4f":"markdown","96060d0c":"markdown","72c6a523":"markdown"},"source":{"fdddb84f":"import seaborn as sns\ndf = sns.load_dataset('diamonds')\ndf = df.select_dtypes(include = ['float64', 'int64']) \ndf = df.dropna() #bo\u015f de\u011ferleri silme\ndf.head()","76800bb2":"df_table = df[\"table\"]  #table de\u011fi\u015fkeni se\u00e7\ndf_table.head()","3b85f645":"#g\u00f6rselle\u015ftirme, ayk\u0131r\u0131 de\u011ferler iki siyah \u00e7izginin\nsns.boxplot(x = df_table); ","cc4fd1c1":"#e\u015fik de\u011fer belirleme\nQ1 = df_table.quantile(0.25) #ilk \u00e7eyreklik\nQ3 = df_table.quantile(0.75) #\u00fc\u00e7\u00fcnc\u00fc \u00e7eyrekli\u011fi ata.\nIQR = Q3-Q1 # veri interquartile, \u00fc\u00e7\u00fcnc\u00fc \u00e7eyrek fark\u0131 birinci \u00e7eyrek fark\u0131","4ded32f7":"#ilk \u00e7eyreklik\nQ1","450cd829":"#\u00fc\u00e7\u00fcnc\u00fc \u00e7eyrekli\u011fi ata.\nQ3","0b3abbb4":"# veri interquartile, \u00fc\u00e7\u00fcnc\u00fc \u00e7eyrek fark\u0131 birinci \u00e7eyrek fark\u0131\n# inter qurtile\nIQR #","d0a61938":"#soldaki uzun siyah \u00e7izgi\nalt_sinir = Q1- 1.5*IQR \n#sa\u011fdaki uzun siyah \u00e7izgi\nust_sinir = Q3 + 1.5*IQR\nalt_sinir","9f618619":"ust_sinir","76023a7c":"#ayk\u0131r\u0131 de\u011fer sorgulamas\u0131\n\n# 1. alt s\u0131n\u0131rdan d\u00fc\u015f\u00fck de\u011fer var m\u0131 ?\n# 2.  ya da \u00fcst s\u0131n\u0131rdan b\u00fcy\u00fck de\u011fer var m\u0131?\n(df_table < alt_sinir) | (df_table > ust_sinir)","0aa6c0fb":"#ayk\u0131r\u0131 true false\naykiri_tf = (df_table < alt_sinir)\n\naykiri_tf.head()","5bc26742":"# fancy index ile yard\u0131m\u0131yla ayk\u0131r\u0131 de\u011ferleri getir\n# \ndf_table[aykiri_tf]","3021ee1e":"df_table[aykiri_tf].index\n# sonraki i\u015flemlerde,\n# 1. silme\n# 2. ortalama ile doldurma\n# 3. bask\u0131lama y\u00f6netimi","76cf57cf":"df_table[aykiri_tf]","a2ae9c88":"import pandas as pd\ntype(df_table) #pandas series","9b557ae0":"# dataframe \u00e7evirme\ndf_table = pd.DataFrame(df_table) #dataframe \u00e7evirme\ndf_table.shape","88ce2a32":"# ~ i\u015fareti, sa\u011fda taraftaki ko\u015fulun d\u0131\u015f\u0131ndakilileri getir.\n# ayk\u0131r\u0131l\u0131klar\u0131 yakalamk d\u015f\u0131ndakiler, axis=1, s\u00fct\u00fcn da i\u015flem yap.\n\nt_df = df_table[~((df_table < (alt_sinir)) | (df_table > (ust_sinir))).any(axis = 1)]\nt_df.shape","ee9f2776":"import seaborn as sns\ndf = sns.load_dataset('diamonds')\ndf = df.select_dtypes(include = ['float64', 'int64']) \ndf = df.dropna()  \ndf.head()","9ef8ce03":"df_table = df[\"table\"]\n\naykiri_tf.head()","c603eb31":"#ayk\u0131r\u0131lar\u0131 yakalamak, alt s\u0131n\u0131r\ndf_table[aykiri_tf] ","65d9b9f0":"#verinin ortalmas\u0131\ndf_table.mean()  ","190e94d1":" #ayk\u0131r\u0131lara ortalmalar\u0131 ver\ndf_table[aykiri_tf] = df_table.mean()","4e0ec748":"# ayk\u0131r\u0131 de\u011ferleri ortalama ile doldurduk\ndf_table[aykiri_tf]","de4b3fa3":"\nimport seaborn as sns\ndf = sns.load_dataset('diamonds')\ndf = df.select_dtypes(include = ['float64', 'int64']) \ndf = df.dropna()\ndf.head()","57cd3073":"df_table = df[\"table\"]","edd7b07e":"df_table[aykiri_tf]","96a17009":"alt_sinir","5c79826a":"#alt s\u0131n\u0131r de\u011ferlerin alt\u0131ndakilerini alt s\u0131n\u0131rlara atamak.\ndf_table[aykiri_tf] = alt_sinir","a5597246":"df_table[aykiri_tf]","88086df3":"import seaborn as sns\ndiamonds = sns.load_dataset('diamonds')\ndiamonds = diamonds.select_dtypes(include = ['float64', 'int64']) \ndf = diamonds.copy()\ndf = df.dropna()\ndf.head()","30dc592d":"import numpy as np\nfrom sklearn.neighbors import LocalOutlierFactor","364c18e4":"# n= neighboors = (kom\u015fululuk say\u0131s\u0131, contamination=yo\u011funluk)\nclf = LocalOutlierFactor(n_neighbors = 20, contamination = 0.1)","2a27cbc7":"# fit etme, algrotimay\u0131 \u00e7al\u0131\u015ft\u0131rma\nclf.fit_predict(df)","28691d01":"\ndf_scores = clf.negative_outlier_factor_","22704782":"# g\u00f6zlem de\u011ferleri i\u00e7in bir yo\u011funluk skoru, local o.f.\ndf_scores[0:10]","743e788e":"# s\u0131ralama yap\u0131yoruz\nnp.sort(df_scores)\n #s\u0131raland\u0131ktan sonra ilk yermi de\u011feri\nnp.sort(df_scores)[0:30]","6964018b":"# e\u015fik de\u011feri belirleme\nesik_deger = np.sort(df_scores)[13]\nesik_deger","82922521":"# e\u015fik de\u011ferlerden yukar\u0131dan olanlar\u0131\naykiri_tf = df_scores > esik_deger\naykiri_tf","dfad445f":"#ayk\u0131r\u0131 de\u011ferleri silme,ayk\u0131r\u0131 de\u011fer olmadan yazd\u0131rma\nyeni_df  = df[df_scores > esik_deger]","7bd18af0":"yeni_df","3c7a44e4":"#ayk\u0131r\u0131 de\u011ferler\ndf[df_scores < esik_deger]","9efcd016":"# e\u015fik de\u011feri loc ile bulma\ndf[df_scores == esik_deger]","02331bea":"# ayk\u0131r\u0131 g\u00f6zlemlerre esik de\u011ferleri atamak\nbaski_deger = df[df_scores == esik_deger]\nbaski_deger","ee7fd02e":"aykirilar = df[~aykiri_tf]\naykirilar","33d74593":"#index problemini \u00e7\u00f6zmek i\u00e7in\n# 1. ayk\u0131r\u0131lar dataframe i indeksiz bir data frame atamak\n# 2. bask\u0131 g\u00f6zlemini arrayla\u015ftirip bask\u0131 g\u00f6zlemini atamak\n# 3. ay\u0131k\u0131r\u0131 de\u011ferleri bask\u0131 de\u011ferleri ile de\u011fi\u015ftirmek\n\naykirilar.to_records(index = False)\n# sadece de\u011ferler var, indexlerinden kurtulduk.","887d530c":"res = aykirilar.to_records(index = False)\nres","68367605":"# bask\u0131 de\u011ferini al\u0131p arraye \u00e7evir\n# \nres[:] = baski_deger.to_records(index = False)\nres","e65dcc73":"df[~aykiri_tf]\n# olu\u015fturdu\u011fumuz array\u0131 ger\u00e7ek veri setine nas\u0131l yerle\u015ftirebiliriz?","518114d4":"# array data frame \u00e7evirmek gerek\nimport pandas as pd\ndf[~aykiri_tf] = pd.DataFrame(res, index = df[~aykiri_tf].index)\n####????? ayk\u0131r\u0131 de\u011ferlerin indexleri ile \u00e7a\u011f\u0131r.","3d057e1c":"df[~aykiri_tf]","16562ba5":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","850def89":"# eksik verilerin say\u0131lar\u0131n\u0131n toplam\u0131\ndf.isnull().sum()","61f1f5ac":"#bo\u015f olmayan de\u011ferleri\n# eksik veri olmayan say\u0131lar\u0131n toplam\u0131, tam olan say\u0131lar\u0131n toplam\u0131\ndf.notnull().sum()","5d3681e9":"#b\u00fct\u00fcn veri setindeki toplam eksik say\u0131lar\ndf.isnull().sum().sum()","db548aaa":"#eksik de\u011ferleri bar\u0131nd\u0131ran g\u00f6zlem birimleri\n#eksiklik var m\u0131 yok mu?\ndf.isnull()","69749d42":"# any= en az bir tane eksik de\u011fer varsa getir\n#eksik de\u011ferleri bulundurur g\u00f6zlemleri getiriyor.\ndf[df.isnull().any(axis = 1)]","8376f1b8":"#hepsi dolu olanlar\u0131 s\u00fct\u00fcnlara g\u00f6re getir\n\ndf[df.notnull().all(axis = 1)]","2f217384":"# v1 ve v2 ve v3 bo\u015f olmayan de\u011ferleri getir.\ndf[df[\"V1\"].notnull() & df[\"V2\"].notnull()& df[\"V3\"].notnull()]","8d06a77c":"# bir g\u00f6zlem biriminde bir eksiklik varsa g\u00f6zlem birimi u\u00e7uruyor\ndf.dropna()\n#ge\u00e7ici bir u\u00e7urma","f9d209df":"df","c9d5eebb":"#kal\u0131c\u0131 silmeyi sa\u011flama\ndf.dropna(inplace =True) \ndf","6b85a078":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","26451664":"df","75566060":"df[\"V1\"]\n#eksik de\u011ferleri g\u00f6rme","275fdfc2":"df[\"V1\"].mean()\n#v1 ortalamas\u0131","bd80fd15":"#v1  de\u011ferleri v1 ortalamalar\u0131yla ata\ndf[\"V1\"].fillna(df[\"V1\"].mean())","7d158abe":"# de\u011fi\u015fkenlleri 0 ile doldurmak\ndf[\"V2\"].fillna(0)","a166870b":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","4061b47d":"#onlarca de\u011fi\u015fken olursan nas\u0131l yapaca\u011f\u0131?\n# apply s\u00fct\u00fcnlar \u00fczerine bir i\u015flem yapacak.\n# axis = 0 sat\u0131rlara g\u00f6re\ndf.apply(lambda x: x.fillna(x.mean()), axis = 0)","fd1cf99a":"#de\u011fi\u015fkenlerdeki tam de\u011fer say\u0131s\u0131\ndf.notnull().sum()","7de8d566":"#de\u011fi\u015fkenlerdeki eksik de\u011fer say\u0131s\u0131\ndf.isnull().sum()","fe5160cc":"#veri setindeki toplam eksik de\u011fer say\u0131s\u0131\ndf.isnull().sum().sum()","bf64c240":"#en az bir eksik de\u011fere sahip g\u00f6zlemler\ndf[df.isnull().any(axis=1)]","e4a4d8f6":"#t\u00fcm de\u011ferleri tam olan g\u00f6zlemler\ndf[df.notnull().all(axis=1)]","c424a3c7":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","5b1084ec":"# Missing No k\u00fct\u00fcphanesi\n!pip install missingno","34761f8b":"import missingno as msno","450e9780":"msno.bar(df);","6b3dbebe":"msno.matrix(df);\n#eksik de\u011ferlerin rastsal\u0131\u011f\u0131 yap\u0131sal bozuklu\u011funu g\u00f6rme\n# g\u00f6z ile yakalanamayan eksiklikleri binlerce verideki g\u00f6zlemi g\u00f6rmeyi sa\u011flar","743b5b6a":"df","1299398f":"import seaborn as sns\ndf = sns.load_dataset('planets')\ndf.head()","8850d91c":"df.isnull().sum()","ef55b027":"msno.matrix(df);\n\n#de\u011fi\u015fkenler aras\u0131nda bir ba\u011f\u0131ml\u0131l\u0131k var m\u0131 yok mu g\u00f6rmeyi sa\u011flama?","bf889cf4":"#Bo\u015fluklar aras\u0131nda bir ili\u015fki var m\u0131?\n#eksikli\u011fi \n# nullity correlation bo\u015fluk aras\u0131nda bir ba\u011f var m\u0131?\nmsno.heatmap(df);\n# orta \u015fiddetli bir korelasyon var.\n# de\u011fi\u015fkenlerin birbirine olan ba\u011f\u0131ml\u0131l\u0131\u011f\u0131na dikkattt\n","6df9bb2f":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","6e169a5a":"df.dropna()","ab8e896e":"df","ffedb5f1":"# b\u00fct\u00fcn de\u011ferleri bo\u015f olan\u0131 sil.\n#ayn\u0131 anda hepsi bo\u015f olan\u0131 sil\ndf.dropna(how = \"all\")","5ac4d65f":"# en az bir tane eksikli\u011fi olan g\u00f6zlemi u\u00e7ur\n# de\u011fi\u015fkenler baz\u0131nda silme ger\u00e7ekle\u015ftir. hepsi gider. \ndf.dropna(axis = 1)","fe69d5e3":"# t\u00fcm de\u011ferleri nan olan veriyi sil.\n# de\u011fi\u015fkenlere g\u00f6re i\u015flem yap.\ndf.dropna(axis = 1, how = \"all\")","110a2c99":"# t\u00fcm de\u011ferleri nan olan\u0131 atamak\ndf[\"sil_beni\"] = np.nan","9184c94a":"df","954a35aa":"# t\u00fcm de\u011ferleri nan olan de\u011ferleri ge\u00e7ici silme\ndf.dropna(axis = 1, how = \"all\")","e8d19a1a":"df","97b0d41b":"# Kal\u0131c\u0131 silme,\ndf.dropna(axis = 1, how = \"all\", inplace = True)","755af1d2":"df","1bc81411":"df.heatmap()","d7c02c7c":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\n\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3}        \n)\n\ndf","5137a3a3":"df[\"V1\"].fillna(0)","d7f3dd13":"df","e61a0478":"#ortalama ile doldurma\ndf[\"V1\"].fillna(df[\"V1\"].mean())","bdb00aef":"#tum degiskenler icin birinci yol\n#t\u00fcm de\u011fi\u015fkenleri ortalama ile doldurma, x s\u00fct\u00fcnlar\u0131\ndf.apply(lambda x: x.fillna(x.mean()), axis = 0)","ee7e3fb4":"# b\u00fct\u00fcn de\u011fi\u015fkenlere ortalama ile doldurma\ndf.fillna(df.mean()[:])","cad63591":"# v1 den v2 e kadar, bunlar simetrik, da\u011f\u0131l\u0131ml\u0131mlar simetrik\n# e\u011fer da\u011f\u0131l\u0131mlar asimetrikse, sa\u011fa \u00e7arp\u0131ki sola \u00e7arp\u0131k ise medyan de\u011ferleri\ndf.fillna(df.mean()[\"V1\":\"V2\"])","6bcf18a9":"# medyan de\u011ferini atamak.\ndf[\"V3\"].fillna(df[\"V3\"].median())","d3062cb9":"# pandas i\u00e7inde notna \n# eksik de\u011ferlerin yerine o de\u011fi\u015fkenlerin ortalamas\u0131n\u0131 at\u0131yor.\ndf.where(pd.notna(df), df.mean(), axis = \"columns\")\n","084c7241":"# uzmanl\u0131klar\u0131na g\u00f6re  maa\u015f atmas\u0131,\n# 5 y\u0131l uzmanl\u0131\u011f\u0131 olan ki\u015filerin ayr\u0131 bir seviyede.\n# 3 y\u0131l uzmanl\u0131\u011f\u0131 olan ki\u015fileri\n# departmanler\u0131 kendi i\u00e7inde maa\u015f \n# okul seviyelerine g\u00f6re maa\u015f atamas\u0131\n# \nimport numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV2 = np.array([7,np.NaN,5,8,12,np.NaN,np.NaN,2,3])\nV3 = np.array([np.NaN,12,5,6,14,7,np.NaN,2,31])\nV4 = np.array([\"IT\",\"IT\",\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"])\n\ndf = pd.DataFrame(\n        {\"maas\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3,\n        \"departman\" : V4}        \n)\n\ndf\n","fae075c5":"# departmanlar\u0131n maa\u015f ortalamalar\u0131 nedir?\ndf.groupby(\"departman\")[\"maas\"].mean()","310e0914":"# transform ortalamalar\u0131 d\u00f6n\u00fc\u015ft\u00fcr.\n# ik b\u00f6l\u00fcm\u00fcne g\u00f6re dolduruldu.\ndf[\"maas\"].fillna(df.groupby(\"departman\")[\"maas\"].transform(\"mean\"))","ab2d3030":"import numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,np.NaN,7,1,np.NaN,9,15])\nV4 = np.array([\"IT\",np.nan,\"IK\",\"IK\",\"IK\",\"IK\",\"IK\",\"IT\",\"IT\"], dtype=object)\n\ndf = pd.DataFrame(\n        {\"maas\" : V1,\n        \"departman\" : V4}        \n)\n\ndf\n# nan veri var\n","a0e498ee":"# kategorik de\u011ferler eksik moda g\u00f6re yap\u0131l\u0131r. \n# en \u00e7ok tekrar eden neyse ona g\u00f6re doldurulur.\ndf[\"departman\"].mode()[0]","631f39ed":"# depatman de\u011fi\u015fkenin modu ile doldur.\ndf[\"departman\"].fillna(df[\"departman\"].mode()[0])\n#kal\u0131c\u0131 bir de\u011fi\u015fiklik de\u011fil.\n","1059110c":"df\n#kal\u0131c\u0131 de\u011fi\u015fiklik yapma inplace= True ile doldurlur.\n","ecea1aaf":"#sonraki de\u011fi\u015fikli\u011fi dolduruyor, \n# before fill\ndf[\"departman\"].fillna(method = \"bfill\")\n","15c4e6f5":"# \u00f6nceki de\u011fer ile doldurma\n\ndf[\"departman\"].fillna(method = \"ffill\")","d6cb2505":"import seaborn as sns\nimport missingno as msno\ndf = sns.load_dataset('titanic')\ndf = df.select_dtypes(include = ['float64', 'int64'])\nprint(df.head())\ndf.isnull().sum() # eksik de\u011ferleri ifade ediyor","dd65cd60":"\n!pip install ycimpute","5d6acdd8":"# k near neigboorhood imput\nfrom ycimpute.imputer import knnimput","3887e96a":"# dataframeleri isimlerini tutma\nvar_names = list(df)","ab9590f0":"#data framei numpy e \u00e7evirme\nimport numpy as np\n\nn_df = np.array(df)","79cc1d63":"n_df[0:10]","6ccdcba2":"n_df.shape # head() pandas a ait.","6dd7e38d":"# k = kom\u015fuluk say\u0131s\u0131, k en yak\u0131n kom\u015fu algoritmas\u0131\n# k parametresi, \ndff = knnimput.KNN(k = 4).complete(n_df)","1d3fd330":"# numpy array, \ntype(dff)\n","c8be526e":"# pandas dataframe \u00e7evirmek gerekiyor.\nimport pandas as pd\ndff = pd.DataFrame(dff, columns = var_names)","8e10f040":"type(dff)","760f2573":"# toplam eksik de\u011ferlei ka\u00e7 tane oldu?\n\ndff.isnull().sum() ","c03d81de":"import seaborn as sns\nimport missingno as msno\ndf = sns.load_dataset('titanic')\ndf = df.select_dtypes(include = ['float64', 'int64'])","9de91f03":"df.isnull().sum()","f364bbf7":"msno.matrix(df);","28c6d1f9":"var_names = list(df)","75ad7abf":"import numpy as np\nn_df = np.array(df)","7d6d75e9":"from ycimpute.imputer import iterforest\ndff = iterforest.IterImput().complete(n_df)\n\n# \u00f6zellik uyar\u0131s\u0131 veriyor. Hata de\u011fil.","71d3e8f8":"dff = pd.DataFrame(dff, columns = var_names)","12ecedfc":"dff.isnull().sum()","33538023":"msno.matrix(dff);\n\n# \u00f6ncelikle yap\u0131sal problem var m\u0131 buna dikkkat edin makine \u00f6\u011frenmesi ile doldurmadan \u00f6nce","0447c837":"import seaborn as sns\nimport missingno as msno\ndf = sns.load_dataset('titanic')\ndf = df.select_dtypes(include = ['float64', 'int64'])\n\n# 1. yap\u0131sal bi problem var m\u0131? bak\u0131n\u0131z","8ed2c54f":"msno.matrix(df);","abc13805":"from ycimpute.imputer import EM","7b8a5d29":"var_names = list(df)","b8793495":"msno.matrix(df);","16ceb200":"import numpy as np\nn_df = np.array(df)","445c6e2b":"dff = EM().complete(n_df)","f94130ad":"dff = pd.DataFrame(dff, columns = var_names)","5904c2fc":"msno.matrix(dff);","25eb3740":"dff.isnull().sum()","6b21147e":"# de\u011fi\u015fken standardizasyonu: de\u011fi\u015fken varyans\u0131 ve s\u0131ras\u0131 de\u011fi\u015fmez. de\u011ferler de\u011fi\u015fecektir. z skor, normalle\u015ftirme?\n# de\u011fi\u015fken d\u00f6n\u00fc\u015f\u00fcm\u00fc: de\u011fi\u015fkenin ta\u015f\u0131d\u0131\u011f\u0131 bilginin ta\u015f\u0131d\u011f\u0131 \u015fekliyle kalamamas\u0131\n# cinsyet kad\u0131n,erkek-> 0,1\n# ya\u015f, s\u0131ral\u0131, -> kategori\u011fe d\u00f6n\u00fc\u015ft\u00fcrme\nimport numpy as np\nimport pandas as pd\nV1 = np.array([1,3,6,5,7])\nV2 = np.array([7,7,5,8,12])\nV3 = np.array([6,12,5,6,14])\ndf = pd.DataFrame(\n        {\"V1\" : V1,\n         \"V2\" : V2,\n         \"V3\" : V3})\n#tiplerini ondal\u0131k hale getirme\ndf = df.astype(float)\ndf","d4cbe0d5":"# normal da\u011f\u0131l\u0131m\u0131 -3, +3 aras\u0131 de\u011ferler\nfrom sklearn import preprocessing ","a0e94891":"#de\u011ferleri d\u00f6n\u00fc\u015ft\u00fcr.\n# copy arg\u00fcman\u0131 True, inplace =False: orijinal yap\u0131s\u0131n\u0131 bozmaz.\npreprocessing.scale(df)\n# makine \u00f6\u011frenmesi, algoritmalar standart de\u011fi\u015fkenleri sever.","0394fe5d":"df","be08a94c":"# de\u011ferleri 0,1 aras\u0131nda atar. d\u00f6n\u00fc\u015ft\u00fcr\u00fcr\npreprocessing.normalize(df)","0786b3da":"#de\u011ferleri iki aral\u0131\u011fa atar \u00e7al\u0131\u015ft\u0131r\u0131r.\n#d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc nesnesi olu\u015fturduk.\nscaler = preprocessing.MinMaxScaler(feature_range = (100,300))","6bde1fa5":"# initiate etme, d\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc nesnesi olu\u015fturma\nscaler.fit_transform(df)","c05ef496":"#de\u011fi\u015fken d\u00f6n\u00fc\u015f\u00fcmleri > standardizasyon\n# !!! de\u011fi\u015fken d\u00f6n\u00fc\u015f\u00fcmleri yaparken, mevc\u00fct verinin bilginin YAPISI bozuluyor mu?\nimport seaborn as sns\ndf = sns.load_dataset('tips')\ndf.head()","665f6417":"from sklearn.preprocessing import LabelEncoder\n\nlbe = LabelEncoder()","e6e1ff01":"# hangi de\u011fi\u015fkeni istemek\nlbe.fit_transform(df[\"sex\"])","c1b4257b":"lbe.fit_transform(df[\"time\"])","f87137a2":"df.dropna(how = \"all\")","1bb80819":"#Yeni de\u011fi\u015fkene cinsiyet atama\ndf[\"yeni_sex\"] = lbe.fit_transform(df[\"sex\"])","2920298e":"#Yeni de\u011fi\u015fkene cinsiyet atama\ndf[\"yeni_time\"] = lbe.fit_transform(df[\"time\"])","33a5bb4b":"df\n# not: hangisi 0 hangisi 1 bunu bilmek gerekiyor?","6dd42452":"#ba\u011f\u0131ml\u0131 de\u011fi\u015fkenleri bilmek gerekiyor.\ndf.head()","3172b576":"# true false vekt\u00f6r\u00fc d\u00f6nd\u00fc\ndf[\"day\"].str.contains(\"Sun\")","9b9f7b85":"# day i\u00e7ine bak, i\u00e7inde SUN ifadesi varsa 1 de,di\u011ferlerine 0 de.\nimport numpy as np \ndf[\"yeni_day\"] = np.where(df[\"day\"].str.contains(\"Sun\"), 1, 0)","93f75ce6":"df","30edbadf":"from sklearn.preprocessing import LabelEncoder\nlbe = LabelEncoder()","08d7f461":"lbe.fit_transform(df[\"day\"])\n#s\u0131n\u0131f say\u0131s\u0131 kadar, say\u0131 olu\u015fur 0dan ba\u015flar\n# 0 dan 3 aras\u0131nda bir s\u0131n\u0131f olacakt\u0131r. ","43bc4fda":"#\u00c7ok dikkat \n","179f3f2f":"#one hot enconding\ndf.head()","333013f9":"#prefix \u00f6n isimlendirmesi nedir?\n#s\u0131n\u0131f say\u0131s\u0131 kadar de\u011fi\u015fken olu\u015ftu.\n# tuzak: bir de\u011fi\u015fken \u00fczerinden ba\u015fka bir de\u011fi\u015fken olu\u015fturalabiliyorsa\n# tuzak: kad\u0131n \u00fczerinden erkek, erkek \u00fczerinden kad\u0131n olu\u015fturabliyor.\n# \u00c7\u00f6z\u00fcm: iki de\u011fi\u015fkenden biri yok edilmeli, iki kategorik de\u011ferlerde\ndf_one_hot = pd.get_dummies(df, columns = [\"sex\"], prefix = [\"sex\"])","0ce3e619":"df_one_hot.head()\n# iki s\u0131n\u0131fl\u0131 kadar yeni de\u011fi\u015fken olu\u015ftu.\n","b3ac7cc9":"# de\u011fi\u015fkenin orijinal hali veride olmamal\u0131\npd.get_dummies(df, columns = [\"day\"], prefix = [\"day\"]).head()","7229d369":"df_one_hot = pd.get_dummies(df, columns = [\"time\"], prefix = [\"time\"])\n\ndf_one_hot ","b6bd75a7":"# 8.Eksik Veri Analizi\n\u0130ncelenen veri setindeki g\u00f6zlemlerde eksiklik olma durumu\n\n1. silmek: yeni problem do\u011furabilir.\n> Eksik de\u011fere sahip g\u00f6zlemlerin veri setinden direk \u00e7\u0131kar\u0131lmas\u0131 ve rassall\u0131\u011f\u0131n incelenmemesi yap\u0131lacak ististiksel \u00e7\u0131kar\u0131mlar\u0131n, modelleme \u00e7al\u0131\u015fmalar\u0131n g\u00fcvenirli\u011fini d\u00fc\u015f\u00fcrecektir. (Reha Alpar,2011)(\u00c7ok de\u011fi\u015fkenli istatistiksel kitab\u0131)\n> Tabachnick ve Fidell 1996 \u00c7ok de\u011f\u015fkenli \u0130statistisel kitab\u0131. rassal: rastlege: eksik de\u011ferler rastgele olu\u015fmam\u0131\u015fsa direkt \u00e7\u0131kartamam\u0131yoruz.\n\n    1. Veri setindeki eksiklik rastgele mi olu\u015ftu yoksa yap\u0131sal bir problem mi? Kredi kart\u0131 olmayanlar\u0131n kredi kart\u0131 harcamas\u0131n\u0131n olmamas\u0131. NA ba\u015fka bir \u015feyle ili\u015fkili\n    \n    2. NA her zaman eksiklik anlam\u0131na gelmez: \u00f6rn: kredi kart\u0131 var ama kredi kart\u0131 harcamas\u0131 yapmad\u0131 bu ay. Yani: \u00f6l\u00e7\u00fcm yap\u0131lmam\u0131\u015f olabilir. \n    3. Eksik veriyi silmek ve ya doldurmak ver kayb\u0131na yol a\u00e7abilir. \u00f6rn: bir de\u011feri eksik ama 99 de\u011feri dolu ise onu silmek onun bilgisini yok eder.\n\n2. doldurmak: yeni problem do\u011furabilir.\n3.\n\n\nKay\u0131p T\u00fcrleri\n1. T\u00fcm\u00fcyle Raslant\u0131sal kay\u0131p: D\u011fer de\u011fi\u015fkenlerden yada yap\u0131sal problemlerden kaynaklanmayan\n\n2. Raslant\u0131sal Kay\u0131: Di\u011fer de\u011fi\u015fkenlere ba\u011fl\u0131 olarak olu\u015fabilecek eksiklik t\u00fcr\u00fc\n\n3. Rastlant\u0131sal olmayan Kay\u0131p: G\u00f6z ard\u0131 edilmeyecek olan ve yap\u0131sal problemler ile ortaya \u00e7\u0131kan eksiklik t\u00fcr\u00fc.\n\nEksik Veri Rassal\u0131\u011f\u0131n\u0131n Testi\n1. G\u00f6rsel Teknikler**\n2. Ba\u011f\u0131ms\u0131z iki \u00f6rneklem t test\n3. Korelasyon Testi\n4. Little'nin MCAR testi**\n\n\nThe idea of imputation is both seductive and dangerous.\nR.J.A Little + D.B Rubin\n\n1. Silme Y\u00f6ntemleri\n    1. G\u00f6zlem(%70 \u00fczeri) yada de\u011fi\u015fken silme (%50-60 \u00fczeri)\n    2. Liste baz\u0131nda silme, Listwise Method\n    3. \u00c7iftlerin baz\u0131ndan silme, Pairwise method\n\n2. De\u011fer Atama y\u00f6ntemleri\n    1. Ortancai ortalama, medyan\n    2. En benzer birime atama(hot deck\n    3. D\u0131\u015f kaynakl\u0131 atama\n\n3. Tahmine dayal\u0131 Y\u00f6ntemler\n    1. Makine \u00d6\u011frenmesi\n    2. EM\n    3. \u00c7oklu Atama Y\u00f6ntemi","84b2ed90":"#### birinci yol","9892b796":"# 5. Ayk\u0131r\u0131 De\u011fer Problemini \u00c7\u00f6zmek","18306576":"# 16. De\u011fi\u015fken Standardizasyonu (Veri Standardizasyonu)","313fbb60":"### 16.2 Normalizasyon\nDe\u011ferleri 0,1 aras\u0131nda atar. d\u00f6n\u00fc\u015ft\u00fcr\u00fcr\n","1312af61":"# 17.De\u011fi\u015fken D\u00f6n\u00fc\u015f\u00fcmleri","743343a9":"# 1. Veri \u00d6n \u0130\u015flemeye Genel Bak\u0131\u015f\n\nVeri mi Model mi?\n* Makine \u00f6\u011frenmesi modelinin amac\u0131: ***genellebilir*** yap\u0131lar ortaya koymakt\u0131r. \n>* Belirli olaylar g\u00f6zlemlendi\u011finde belirli tahmin sonu\u00e7lar\u0131n\u0131 vermektir.\n\n* HBR: E\u011fer veriniz k\u00f6t\u00fc ise makine \u00f6\u011frenmesi ara\u00e7lar\u0131n\u0131z kullan\u0131\u015fs\u0131z olacakt\u0131r.\n\nVeri \u00d6n \u0130\u015fleme Genel Bak\u0131\u015f\n1.  Veri Temizleme (data cleaning\/cleasing)\n    1. G\u00fcr\u00fclt\u00fcl\u00fc Veri, \u00f6rn: erkek Hamilelik durumu\n    2. Eksik Veri Analizi\n    3. Ayk\u0131r\u0131 G\u00f6zlem Analizi\n3. Veri Standardizasyonu\n    1. 0-1 D\u00f6n\u00fc\u015f\u00fcm\u00fc\n    2. z-skoru D\u00f6n\u00fc\u015f\u00fcm\u00fc\n    3. Logaritmik D\u00f6n\u00fc\u015f\u00fcm\n3. Veri \u0130ndirgeme\n    1. G\u00f6zlem Say\u0131s\u0131n\u0131n Azaltmas\u0131\n    2. De\u011fi\u015fken Say\u0131s\u0131n\u0131n Azalt\u0131lmas\u0131\n4. De\u011fi\u015fken D\u00f6n\u00fc\u015f\u00fcmleri\n    1. S\u00fcrekli De\u011fi\u015fkenlerde D\u00f6n\u00fc\u015f\u00fcmler\n    2. Kategorik De\u011fi\u015fkenlerde D\u00f6n\u00fc\u015f\u00fcmler\n","bd3f09e6":"### 15.3. EM: Expectation Maximizatio (EM) Algorithm","9fde29fe":"# 6.\u00c7ok De\u011fi\u015fkenli Ayk\u0131r\u0131 G\u00f6zlem Analizi","1df92fac":"prefix \u00f6n isimlendirmesi nedir?\n s\u0131n\u0131f say\u0131s\u0131 kadar de\u011fi\u015fken olu\u015ftu.\n \n tuzak: bir de\u011fi\u015fken \u00fczerinden ba\u015fka bir de\u011fi\u015fken olu\u015fturalabiliyorsa\n \n tuzak: kad\u0131n \u00fczerinden erkek, erkek \u00fczerinden kad\u0131n olu\u015fturabliyor.\n \n\u00c7\u00f6z\u00fcm: iki de\u011fi\u015fkenden biri yok edilmeli, iki kategorik de\u011ferlerde\n\ndf_one_hot = pd.get_dummies(df, columns = [\"sex\"], prefix = [\"sex\"])","4a3704da":"### 15.1 KNN: K-Nearest Neighbors Algorithm","01ab30b0":"# 10.Eksik Veri Yap\u0131s\u0131n\u0131n G\u00f6rselle\u015ftirilmesi","af5cc04d":"### 9.2 eksik degerlerin direk silinmesi","bcc29cf0":"\n### 5.3. Bask\u0131lama Y\u00f6ntemi\n* ayrk\u0131r\u0131 de\u011feleri s\u0131n\u0131rlara do\u011fru bask\u0131layarak \u00e7ekme\n* bask\u0131lama: yukar\u0131 veya a\u015fa\u011f\u0131 y\u00f6nl\u00fc a\u015fa\u011f\u0131 \u00e7ekilmesi. ortalama ile y\u00fcksek de\u011ferin aras\u0131nda y\u00fcksek bir fark varsa, bunu ortalama ile doldurmak yerine \u00fcst s\u0131n\u0131r yahut alt s\u0131n\u0131ra \u00e7ekme\n","532782a5":"# 4. Ayk\u0131r\u0131 De\u011ferleri Yakalamak","7cab5de0":"### \"1 ve Di\u011ferleri (0) \" D\u00f6n\u00fc\u015f\u00fcm\u00fc","8a9a9f38":"# 7. Bask\u0131lama: \u00c7ok De\u011fi\u015fkenlilerde \n\n\nudemyde, coursera, bunu bulman\u0131z \u00e7ok zor. Genellikle tek de\u011fi\u015fkenlilerde ayk\u0131r\u0131 g\u00f6zlemlerin i\u015flemleri var.\n","d88f768b":"## 6.2 \u00c7ok de\u011fi\u015fkenlilerde silme y\u00f6ntemi","582fd9bc":"### 17.2. \u00c7ok S\u0131n\u0131fl\u0131 D\u00f6n\u00fc\u015f\u00fcm\n\n##### \u00c7ok dikkat \n\nElimizdeki kategorik bir de\u011fi\u015fkenin ikiden fazla s\u0131n\u0131f\u0131 varsa, algoritme bunun 0-3 aras\u0131 olarak alg\u0131yacak. Kategorik de\u011fi\u015fkenin s\u0131n\u0131flar\u0131n\u0131n ba\u011f\u0131ml\u0131 de\u011fi\u015fkene olan etkileri bozulacakt\u0131r. Kategorik nominal iken, bozulu\u011f sanki aralar\u0131nda bir fark varm\u0131\u015f gibi oluyor.\n\nHalbuki bu nominal ile \u00f6l\u00e7\u00fclm\u00fc\u015f.\n\nbunun \u00f6n\u00fcne ge\u00e7mek i\u00e7in One-hat enconding yapmak gerekiyor.\n","ce78e411":"# 9.H\u0131zl\u0131 \u00c7\u00f6z\u00fcm: Eksik Veride","c98928e7":"### 12.1 say\u0131sal degiskenlerde atama ","68069161":"# 2. Ayk\u0131r\u0131 G\u00f6zlem\n\n1. Ayk\u0131r\u0131 G\u00f6zlem: Veride genel e\u011filimin olduk\u00e7a d\u0131\u015f\u0131na \u00e7\u0131kan ya da di\u011fer g\u00f6zlemlerden olduk\u00e7a farkl\u0131 olan g\u00f6zlemlere denir. \n        * Ayk\u0131r\u0131 de\u011feri bar\u0131ndan birime ayk\u0131r\u0131 g\u00f6zlem denir.\n2. Ayk\u0131r\u0131 de\u011fer: Ayk\u0131r\u0131l\u0131\u011f\u0131 ifade eden numerik eden de\u011ferdir.\n3. Ayk\u0131r\u0131 g\u00f6zlem olas\u0131 sonu\u00e7lar\u0131: Genellebilir kay\u0131g\u0131s\u0131 ile olu\u015fturulan kural setlerini ya da fonksiyonlar\u0131 yan\u0131lt\u0131r.\n","107fa6ef":"# 19. B\u00f6l\u00fcm Sonu De\u011ferlendirmesi","ab40449e":"### 16.1 Standardizasyon\n\nde\u011ferleri d\u00f6n\u00fc\u015ft\u00fcr.\n\ncopy arg\u00fcman\u0131 True, inplace =False: orijinal yap\u0131s\u0131n\u0131 bozmaz.\n\nmakine \u00f6\u011frenmesi, algoritmalar standart de\u011fi\u015fkenleri sever.","1b26abdb":"### 9.3 Basit deger atama","4c5eeb5b":"Veri \u00d6n \u0130\u015fleme \n\nAyk\u0131r\u0131 G\u00f6zlem Analizi\n\nEksik G\u00f6zlem Analizi\n\nDe\u011fi\u015fken Standartla\u015ft\u0131rma\n\nDe\u011fi\u015fken D\u00f6n\u00fc\u015ft\u00fcrme","2915cfec":"### 5.2. Ortalama ile Doldurma","112159f6":"### 5.1 Silme","8edea12d":"### 15.2 random forests","f866781c":"#### \u00dc\u00e7\u00fcnc\u00fc yol,\n","32d4cb81":"### 6.1. Local Outlier Factor LOF\n\nG\u00f6zlemleri bulunduklar\u0131 konumda yo\u011funluk tabanl\u0131 skorlayarak buna g\u00f6re ayk\u0131r\u0131 de\u011fer olabilecek de\u011ferleri tan\u0131mlayabilmemize imkan sa\u011fl\u0131yor.\n\nBir noktan\u0131n local yo\u011funlu\u011fu bu noktan\u0131n kom\u015fular\u0131 ile kar\u015f\u0131la\u015ft\u0131r\u0131l\u0131yor. E\u011fer bir nokta kom\u015fular\u0131n\u0131n\u0131n yo\u011funlu\u011fundan anlaml\u0131 \u015fekilde d\u00fc\u015f\u00fck ise bu nokta kom\u015fular\u0131ndan daha seyrek bir b\u00f6lgede bulunuyordur yorumu yap\u0131labiliyor. Dolay\u0131s\u0131yla burada bir kom\u015fuluk yap\u0131s\u0131 s\u00f6z konusu. \n\nBir de\u011ferin \u00e7evresi yo\u011fun de\u011filse demek ki bu de\u011fer ayk\u0131r\u0131 de\u011ferdir \u015feklinde de\u011ferlendiriliyor.\n\n#### ya\u015f 17, evlilik say\u0131s\u0131 3\nEn yak\u0131n \u00fc\u00e7 kom\u015fusuna bak istersen,A n\u0131n yo\u011funlu\u011fu di\u011ferlerinde \u00e7ok daha uzak\n[LOF g\u00f6rseli](https:\/\/www.notion.so\/sezginildes\/Veri-n-leme-111ee4b07bfd49879a62b4b13be5e014#a9c968f31cdf4559b6d9d0ff2f65f345)","54399227":"# 13.Kategorik De\u011fi\u015fken K\u0131r\u0131l\u0131m\u0131nda De\u011fer Atama: Eksik veride","9116a4a0":"### 17.1. 0-1 D\u00f6n\u00fc\u015f\u00fcm\u00fc\n\nKategorik veriyi numerik veriye d\u00f6n\u00fc\u015ft\u00fcrmek\n\nCinsiyet de\u011fi\u015fkeni 0-1 \u00e7evirmek,\n\nLabelEnconder, fit_transform hangi de\u011fere hangi say\u0131 geliyorsa bunu bilmek gerekiyor. Hangisiyle ilgileniyorsak ona 1 deriz. ","9bbe7a81":"# 12.Basit De\u011fer Atama Y\u00f6ntemleri: Eksik Veride","aa2d2820":"# Veri \u00d6n \u0130\u015fleme 101\n\n[Notion.so notlar\u0131](https:\/\/www.notion.so\/sezginildes\/Veri-On-isleme-111ee4b07bfd49879a62b4b13be5e014)\n\n[ Veri \u00d6n \u0130\u015fleme 101\n videolar\u0131n\u0131 indirme linki](https:\/\/drive.google.com\/drive\/folders\/1ae2O1Bd2grZ7dquBTNfmlUNNwVETTk9y?usp=sharing)","8962f016":"# 11. Silme Y\u00f6ntemleri: Eksik Veride","4633110b":"# 14. Kategorik De\u011fi\u015fkenler i\u00e7in Eksik De\u011fer Atama","61aabf8d":"#### ikinci yol\n\n E\u011fer da\u011f\u0131l\u0131mlar \u00e7arp\u0131ksa, baz\u0131lar\u0131na ortalama baz\u0131lar\u0131na medyan de\u011ferleri atamak gerekiyor.","47358278":"### 9.4 Eksik De\u011ferlerin Saptanmas\u0131","c893d734":"# 3. Kime G\u00f6re Neye G\u00f6re Ayk\u0131r\u0131\n\n1. Sekt\u00f6r Bilgisi: \u00f6rn: 1000 odal\u0131 ev genel yap\u0131y\u0131 bozar.\n  \n2. Standart Sapma Yakla\u015f\u0131m\u0131: e\u015fik de\u011fer= ortalama +-1Xstandart sapma(2 ve ya 3 standart sapma eklenebilir.)\n\n3. Z-Skoru yakla\u015f\u0131m\u0131: ortalama +-2.5 de\u011ferleri\n\n[4. Boxplot(interquartile range-IQR)y\u00f6ntemi:](https:\/\/www.notion.so\/sezginildes\/Veri-n-leme-111ee4b07bfd49879a62b4b13be5e014#b58208ddf6f74efb96223c0342c687e1) ","e5944a4f":"# 15. Tahmine Dayal\u0131 De\u011fer Atama Y\u00f6ntemleri\n\n1. KKN: K en Yak\u0131n Kom\u015fu \n2. Random Forest:\n3. EM: Expectation Maximizatio (EM) Algorithm","96060d0c":"# 18. One-Hot D\u00f6n\u00fc\u015f\u00fcm\u00fc ve Dummy De\u011fi\u015fken Tuza\u011f\u0131\n\n\n\u00c7ok dikkat \n\nElimizdeki kategorik bir de\u011fi\u015fkenin ikiden fazla s\u0131n\u0131f\u0131 varsa, algoritme bunun 0-3 aras\u0131 olarak alg\u0131yacak. Kategorik de\u011fi\u015fkenin s\u0131n\u0131flar\u0131n\u0131n ba\u011f\u0131ml\u0131 de\u011fi\u015fkene olan etkileri bozulacakt\u0131r. Kategorik nominal iken, bozulu\u011f sanki aralar\u0131nda bir fark varm\u0131\u015f gibi oluyor.\n\nHalbuki bu nominal ile \u00f6l\u00e7\u00fclm\u00fc\u015f.\n\nbunun \u00f6n\u00fcne ge\u00e7mek i\u00e7in One-hat enconding yapmak gerekiyor.\n","72c6a523":"### 16.3 Min-Max D\u00f6n\u00fc\u015f\u00fcm\u00fc\n\nde\u011ferleri iki aral\u0131\u011fa atar \u00e7al\u0131\u015ft\u0131r\u0131r.\n\nd\u00f6n\u00fc\u015ft\u00fcr\u00fcc\u00fc nesnesi olu\u015fturduk."}}