{"cell_type":{"feda5f0f":"code","fa13fe3c":"code","a6f87aa1":"code","e2f3ffd8":"code","5bcd0746":"code","f7eda93a":"code","1154db80":"code","b67236c6":"code","3230ddc6":"code","68f0aa1b":"code","2be44cc2":"code","0ddd9650":"code","0940c42c":"code","a24518b0":"code","9f43812e":"code","724b2d6a":"code","5186c5fb":"code","bd5dd331":"code","f98ff8e8":"code","e1a6b112":"code","9aadb459":"code","fb6763d2":"code","9919fb59":"code","5b0e0562":"markdown","0202cc50":"markdown","ca759360":"markdown","09492a93":"markdown","898b83d8":"markdown","06865a1b":"markdown","d1c9b246":"markdown","4b4216f6":"markdown","e4590a0b":"markdown","af24c99f":"markdown","f0b996fd":"markdown","9befe58d":"markdown","ce70e627":"markdown","e464203f":"markdown","89af7804":"markdown","6960788e":"markdown","fff85073":"markdown","a17ab6f7":"markdown","d230506d":"markdown","4e1663e8":"markdown","ee533101":"markdown","b4162c05":"markdown","7cc2d396":"markdown"},"source":{"feda5f0f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport missingno as msgo\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nimport geopandas as gpd\nimport plotly.express as px\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa13fe3c":"df = pd.read_csv('\/kaggle\/input\/covid-vaccination-vs-death\/covid_vaccination_vs_death_ratio.csv')\ndf.head()","a6f87aa1":"df.shape","e2f3ffd8":"df.describe()","5bcd0746":"df.info()","f7eda93a":"msgo.matrix(df)\n#not null,good data!","1154db80":"df.columns\nfor col in df.columns:\n    if col.startswith('Unnamed'):\n        del df[col]\n\ndf.head()","b67236c6":"df['country'].unique().shape\n#198 countries in this dataset","3230ddc6":"#total population in this dataset\ntotal_population = df['population'].unique().sum()\ntotal_population","68f0aa1b":"#'people_fully_vaccinated' is an accumulation variable we need get the maximum value for each country\n# and sum them\ndf_country = df.groupby('country').agg({'people_fully_vaccinated':max})\nsum_vac_full = df_country['people_fully_vaccinated'].sum()\nsum_vac_full","2be44cc2":"plt.figure(figsize=(10,5),dpi=100)\nplt.pie(\n    [total_population,sum_vac_full],\n    autopct='%.2F%%',\n    labels=['total_population','people_fully_vaccinated'])\nplt.title('Ratio of people fully vaccinated')\nplt.show()","0ddd9650":"#number of people who got at least one shot of COVID vaccine\ndf_country_vac = df.groupby('country').agg({'people_vaccinated':max}).reset_index()\nsum_vac = df_country_vac['people_vaccinated'].sum()\ndf_country_rat = df.groupby('country').agg({'ratio':max}).reset_index()\ndf_country_deaths = df.groupby('country').agg({'New_deaths':max}).reset_index()\n# df_country_deaths\ndf_country_rat","0940c42c":"plt.figure(figsize=(10,5),dpi=100)\nplt.pie(\n    [total_population,sum_vac],\n    autopct='%.2F%%',\n    labels=['total_population','people_vaccinated'])\nplt.title('Ratio of people vaccinated(at least one shot)')\nplt.show()","a24518b0":"date_group = df.groupby('date').agg('sum').reset_index()\ndate_group","9f43812e":"#preparing data\nx = date_group['date']\ny1 = date_group['total_vaccinations']\ny2 = date_group['New_deaths']\n\n#line 1\nfig, ax1 = plt.subplots(1,1,figsize=(16,9), dpi= 80)\nax1.plot(x,y1,color='tab:red')\n\n#line 2\nax2 = ax1.twinx()\nax2.plot(x,y2,color='tab:blue')\n\n#decorations line 1\nax1.set_xlabel('date',fontsize=20)\nax1.tick_params(axis='x',rotation=0,labelsize=12)\nax1.set_ylabel('total_vaccinations',color='tab:red',fontsize=20)\nax1.tick_params(axis='y',rotation=0,labelcolor='tab:red')\nax1.grid(alpha=0.4)\n\n#decorations line 2\nax2.set_ylabel('New_deaths',fontsize=20,color='tab:blue')\nax2.tick_params(axis='y',rotation=0,labelcolor='tab:blue')\nax2.set_xticks(np.arange(0,len(x),60))#\nax2.set_title('total_vaccinations vs New_deaths')","724b2d6a":"df_corr = df.corr()\ndf_corr","5186c5fb":"plt.figure(figsize=(20,15),dpi=100)\nsns.heatmap(df_corr,annot=True,square=True,vmin=-1,cmap='CMRmap',center=0.8)\nplt.yticks(rotation=90)","bd5dd331":"df_usa = df[df['country']=='United States of America']\ndf_usa.plot(\n    kind='scatter',\n    x='ratio',\n    y='New_deaths',\n    label='New_deaths vs ratio(USA)',\n    alpha=0.2,\n    figsize=(20,15),\n    s=df_usa['New_deaths'],\n    c='ratio',\n    cmap=plt.get_cmap('jet'),\n    colorbar=True)\n\nplt.xlabel('ratio(%)',fontsize=15)\nplt.ylabel('New_deaths(USA)',fontsize=18)\nplt.title('ratio vs New_deaths USA',fontsize=22)\n# The radius of each circle represents the district\u2019s population (option s), and the color represents the price (option c).","f98ff8e8":"date_group\ntime = date_group['date'].values.tolist()\n\npx.line(x=time,y=date_group['New_deaths'].cumsum())\n# In this case New Deaths is a cumulative number so we use function cumsum())","e1a6b112":"# define x,y\nx = df_usa[['ratio']]\ny = df_usa[['New_deaths']]\n\n# split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=42)\n\n# Standard Normalization(x)\nstd_x = StandardScaler()\nx_train = std_x.fit_transform(x_train)\nx_test = std_x.fit_transform(x_test)\n\n# Standard Normalization(y)\nstd_y = StandardScaler()\ny_train = std_y.fit_transform(y_train)\ny_test = std_y.fit_transform(y_test)\n\n# fitting in\nliner = LinearRegression()\nliner.fit(x_train,y_train)\n\n# coefficients\nprint ('Coefficients: ', liner.coef_)\nprint ('Intercept: ',liner.intercept_)\n\n# prediction\ny_pre = std_y.inverse_transform(liner.predict(x_test))# inverse to original value\nprint('The prediction of New Deaths is :\\n',y_pre)","9aadb459":"x = df_usa['ratio']\ny = df_usa['New_deaths']\n\nplt.figure(figsize=(10,8),dpi=100)\nsns.regplot(x=x, y=y)\nplt.xlabel('Ratio(USA)',fontsize=18)\nplt.ylabel('New Deaths',fontsize=18)\nplt.title('Liner Regression',fontsize=20)","fb6763d2":"mse = mean_squared_error(std_y.inverse_transform(y_test),y_pre)\n\n# make sure the output not show with scientific notation\ndef as_float(x):\n    y='{:.50f}'.format(x)\n    return  y\n\nprint('The Mean Squared Error(MSE) of y_pre is :',as_float(mse))","9919fb59":"mae = mean_absolute_error(std_y.inverse_transform(y_test),y_pre)\nprint('The Mean Absolute Error(MAE) of y_pre is :',as_float(mae))","5b0e0562":"## Plotting with regression line","0202cc50":"## Ratio of people vaccinated","ca759360":"## How many countries do we have here ?","09492a93":"$$\nM S E=\\frac{S S E}{n}=\\frac{1}{n} \\sum i=1^{m} w i(y i-\\hat{y i})^{2}\n$$","898b83d8":"# Evaluation : Mean Squared Error(MSE)","06865a1b":"# Plotting Pie Chart","d1c9b246":"$$\n\\mathrm{MAE}=\\frac{\\sum_{i=1}^{n}\\left|y_{i}-x_{i}\\right|}{n}=\\frac{\\sum_{i=1}^{n}\\left|e_{i}\\right|}{n}\n$$","4b4216f6":"# Plotting scatter ---> USA","e4590a0b":"## Ratio of people fully vaccinated","af24c99f":"## Plotting","f0b996fd":"### The mean squared error (MSE)[1][2] or mean squared deviation (MSD) of an estimator (of a procedure for estimating an unobserved quantity) measures the average of the squares of the errors\u2014that is, the average squared difference between the estimated values and the actual value. MSE is a risk function, corresponding to the expected value of the squared error loss. ---wiki","9befe58d":"# Dealing with null-values\n## missinggo cool tool to visualizing null values","ce70e627":"# Daily World Deaths","e464203f":"#Back to original dateset","89af7804":"$$ r(X, Y)=\\frac{\\operatorname{Cov}(X, Y)}{\\sqrt{\\operatorname{Var}[X] \\operatorname{Var}[Y]}}\n$$","6960788e":"## Delete Unnamed column","fff85073":"# Plotting line chart","a17ab6f7":"# Grouping Data Times Series","d230506d":"# Loading Data","4e1663e8":"# Relationship Between variables (Plotting Heatmap with seaborn)","ee533101":"# Machine Learning \uff1aSSSSSimple LinerRegression","b4162c05":"# Basic Information of Data","7cc2d396":"### In statistics, mean absolute error (MAE) is a measure of errors between paired observations expressing the same phenomenon.---wiki"}}