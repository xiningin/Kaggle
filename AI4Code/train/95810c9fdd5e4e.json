{"cell_type":{"6b3556f6":"code","539925cd":"code","8705d394":"code","7cfc555c":"code","5e0a4f95":"code","4bec7f43":"code","a028a017":"code","0a3df932":"code","6fae2925":"code","79bc1652":"code","3b4f9a0d":"code","e5c94b2c":"code","aaa0ac77":"code","3f91cefe":"code","0700be7c":"code","a55baba2":"code","66a26f62":"code","18539c4f":"code","97d88146":"code","aa53c6b3":"code","fb905864":"code","2410c64d":"code","55f7f43e":"code","e662b419":"code","0ba4b357":"code","77de880b":"code","d5e14a6e":"code","7c033151":"code","a03d771e":"code","4271f2c1":"code","581644e5":"code","23f60b04":"code","0efe4c0e":"code","d5dea403":"code","500e5e5b":"code","c5cf44f8":"code","a7e36376":"code","7e2285e6":"code","6b37d6af":"code","cc2ec299":"code","64eccfaa":"code","d144a4f9":"code","cb72b03d":"code","a8740776":"code","34d02fff":"code","88250cd1":"code","73e3601e":"code","23667091":"code","9f4dccbb":"code","8134178e":"code","d9e780df":"code","36e8b102":"code","aa592f5a":"code","7f6233c8":"code","fec28124":"code","ef7770af":"code","715f185b":"code","18084cb2":"code","b596a310":"code","2af508e5":"code","39abbb22":"code","65e78e98":"code","f16c5a8b":"code","f20e178d":"code","59d201a0":"code","20f2b6d8":"code","b28ab2c8":"code","1e18bc82":"code","70e1a781":"code","88045053":"code","5cb459b0":"code","3f1363c0":"code","72086234":"code","ee105abb":"code","34d8dcbe":"code","30c84bd2":"code","9cd386d9":"code","42621c40":"code","186bbadb":"code","e63e7d79":"code","ad3e0cfe":"code","dd74e06d":"code","dfb89146":"code","f3962beb":"code","38ef4022":"code","5211ada2":"code","0f00478c":"code","7d8955ed":"code","51f0b999":"code","b3f3824d":"code","24d5801c":"code","1b32fb18":"code","2f2fd31e":"code","3531e1da":"code","5e5859c6":"code","c7867fbf":"code","482d5eca":"code","3472b0f7":"code","35c4bf92":"code","c2549984":"code","df6b2aa9":"code","9f72741a":"code","97cc5d10":"code","0d929582":"code","cc69b586":"code","529f8e98":"code","363f8f1f":"code","d3557ad2":"code","40473220":"code","8cd76b6c":"code","8ccd6f37":"markdown","780e0415":"markdown","055f4174":"markdown","1deeea78":"markdown","a9a6e93f":"markdown","4196f13f":"markdown","7c80d32d":"markdown","9819023a":"markdown","41ea8bed":"markdown","bde9344d":"markdown","eff4585c":"markdown","692bd1be":"markdown","6e59b5e3":"markdown","0f3dc071":"markdown","e64f8bf7":"markdown","e4638cff":"markdown","fda45c02":"markdown","254a060d":"markdown","c65eac39":"markdown","ddf7efc6":"markdown","1e4562cf":"markdown","ee406ea4":"markdown","1c475917":"markdown","f9f103a3":"markdown","8faab5e5":"markdown","2069dcb4":"markdown"},"source":{"6b3556f6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import stats\nfrom matplotlib.offsetbox import (TextArea, DrawingArea, OffsetImage,\n                                  AnnotationBbox)\n\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nprint(os.listdir(\"..\/input\"))","539925cd":"!pip install chart_studio","8705d394":"from plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True) \nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom PIL import Image\nimport requests\nfrom io import BytesIO","7cfc555c":"fifa = pd.read_csv('..\/input\/fifa19\/data.csv')","5e0a4f95":"pd.set_option('display.max_columns',None)","4bec7f43":"fifa.head()","a028a017":"del fifa['Unnamed: 0']","0a3df932":"fifa.isnull().sum()","6fae2925":"fifa.head()","79bc1652":"list_val = []\nfor i in fifa.Value:\n    if i[-1] == 'M':\n        list_val.append(float(i[1:-1])*1000000)\n    elif i[-1] == 'K':\n        list_val.append(float(i[1:-1])*1000)\n    else:\n        list_val.append(float(i[1]))","3b4f9a0d":"fifa['Value'] = list_val","e5c94b2c":"fifa.head()","aaa0ac77":"list_wage = []\nfor i in fifa.Wage:\n    if i[-1] == 'K':\n        list_wage.append(float(i[1:-1])*1000)\n    else:\n        list_wage.append(float(i[1]))","3f91cefe":"fifa['Wage'] = list_wage","0700be7c":"fifa['Preferred Foot'].value_counts()","a55baba2":"foot = fifa['Preferred Foot'].value_counts(normalize=True)\nfoot_null = fifa['Preferred Foot'].isnull()\nfifa.loc[fifa['Preferred Foot'].isnull(),'Preferred Foot'] = np.random.choice(\n    foot.index, size=foot_null.sum(), p=foot.values)","66a26f62":"fifa['Preferred Foot'].value_counts()","18539c4f":"fifa['Weak Foot'].fillna(round(float(fifa['Weak Foot'].mean()),0), inplace=True)","97d88146":"fifa['International Reputation'].fillna(round(float(fifa['International Reputation'].mean()),0), inplace=True)","aa53c6b3":"fifa['Skill Moves'].fillna(round(float(fifa['Skill Moves'].mean()),0), inplace=True)","fb905864":"fifa.isnull().sum()","2410c64d":"for i in range(27,53):\n    fifa.iloc[:,i].fillna(method=\"ffill\", inplace=True)","55f7f43e":"for i in range(27,53):\n    fifa.iloc[:,i] = fifa.iloc[:,i].str[:2]","e662b419":"list1 = []\nfor i in range(27,53):\n    for j in fifa.iloc[:,i]:\n        list1.append(float(j))\n    fifa.iloc[:,i] = list1\n    list1.clear()   ","0ba4b357":"fifa.head()","77de880b":"fifa['Position Mean'] = round(fifa.iloc[:,[i for i in range(27,53)]].median(axis=1),0)","d5e14a6e":"for i in range(53,87):\n    fifa.iloc[:,i].fillna(method=\"ffill\", inplace=True)","7c033151":"fifa['Attribute Mean'] = round(fifa.iloc[:,[i for i in range(53,87)]].median(axis=1),0)","a03d771e":"fifa.head()","4271f2c1":"fifa['Weight'].fillna(method='ffill', inplace=True)","581644e5":"list_weight = []\nfor i in fifa.Weight.str[0:3]:\n    list_weight.append(float(i))\nfifa['Weight'] = list_weight","23f60b04":"fifa.head()","0efe4c0e":"fifa['Height'].fillna(method='ffill', inplace=True)","d5dea403":"fifa.Height.isnull().sum()","500e5e5b":"list_height = []\nfor i in fifa.Height:\n    list_height.append((int(i[0])*12)+int(i[2])) \nfifa['Height'] = list_height","c5cf44f8":"fifa.head()","a7e36376":"fifa['BMI'] = round((fifa.Weight*703)\/(fifa.Height)**2,2)","7e2285e6":"list_bmi = []\nfor i in fifa.BMI:\n    if i < 18.5:\n        list_bmi.append('Underweight')\n    elif (i >= 18.5)and(i < 25):\n        list_bmi.append('Normal')\n    elif (i >= 25) and (i < 30):\n        list_bmi.append('Overweight')\n    elif (i >= 30):\n        list_bmi.append('Obese')","6b37d6af":"fifa['Weight Class'] = list_bmi","cc2ec299":"fifa.head()","64eccfaa":"import missingno\nmissingno.matrix(fifa, figsize=(40,20))","d144a4f9":"x_train = fifa[['Age','Overall','Wage','Special','International Reputation',\n         'Weak Foot','Skill Moves','Height','Weight','Position Mean','Attribute Mean',\n         'BMI']]\ny_train = fifa.Value","cb72b03d":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()","a8740776":"x_train.head()","34d02fff":"from mlxtend.feature_selection import SequentialFeatureSelector as sfs\n\nsfs1 = sfs(rf,k_features=5,cv=2)\nsfs1 = sfs1.fit(x_train,y_train)\nfeat_cols = list(sfs1.k_feature_idx_)\nprint(feat_cols)","88250cd1":"x_train.iloc[:,feat_cols].head()","73e3601e":"a=3\nb=2\nc=1","23667091":"fifa['GK_Overall'] = (b*fifa.Balance + b*fifa.Stamina + b*fifa.ShortPassing + c*fifa.Aggression + b*fifa.LongPassing + \n                      a*fifa.Agility + a*fifa.Reactions + a*fifa.Jumping +  b*fifa.Vision +  b*fifa.Composure +  \n                      a*fifa.GKDiving +  a*fifa.GKHandling +  a*fifa.GKKicking+  a*fifa.GKPositioning+ \n                      a*fifa.GKReflexes + a*fifa.Strength + a*fifa.Overall + a*fifa[\"International Reputation\"])","9f4dccbb":"gk = fifa.sort_values('GK_Overall', ascending=False)[:5]","8134178e":"trace_gk=go.Bar(\n            x=gk.Name,\n            y=gk.GK_Overall,\n            name=\"GK_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=gk.Nationality)\ndata_gk=[trace_gk]\nlayout_gk=dict(title=\"Best Goalkeepers\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_gk=go.Figure(data=data_gk, layout=layout_gk)\niplot(fig_gk)","d9e780df":"sns.stripplot(x=gk['Name'], y=gk['GK_Overall'], data=fifa, hue='Preferred Foot')\nplt.show()","36e8b102":"fifa['CB_Overall'] = (a*fifa.Agility + a*fifa.Strength + a*fifa.Composure+ a*fifa.Aggression+ a*fifa.Balance+ a*fifa.Reactions+ \n                      a*fifa.StandingTackle+ a*fifa.SlidingTackle+ a*fifa.Marking+ a*fifa.Positioning\n                     + a*fifa.Interceptions+ b*fifa.Jumping + b*fifa.BallControl + b*fifa.HeadingAccuracy +\n                      b*fifa.LongPassing + b*fifa.ShortPassing+ b*fifa.Vision+ b*fifa.Stamina+ c*fifa.Dribbling + \n                      a*fifa.Overall + a*fifa['International Reputation'])","aa592f5a":"cb = fifa.sort_values('CB_Overall', ascending=False)","7f6233c8":"lcb = cb[(cb['Position']=='CB') | (cb['Position']=='LCB')]\nlcb1 = lcb.sort_values('CB_Overall',ascending=False)[:5]","fec28124":"rcb = cb[(cb['Position']=='CB') | (cb['Position']=='RCB')]\nrcb1 = rcb.sort_values('CB_Overall',ascending=False)[:5]","ef7770af":"trace_lcb=go.Bar(\n            x=lcb1.Name,\n            y=lcb1.CB_Overall,\n            name=\"CB_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=lcb1.Nationality)\ndata_lcb=[trace_lcb]\nlayout_lcb=dict(title=\"Best Left Center Backs\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_lcb=go.Figure(data=data_lcb, layout=layout_lcb)\niplot(fig_lcb)","715f185b":"sns.stripplot(x=lcb1['Name'], y=lcb1['CB_Overall'], data=lcb1, hue='Preferred Foot')\nplt.show()","18084cb2":"trace_rcb=go.Bar(\n            x=rcb1.Name,\n            y=rcb1.CB_Overall,\n            name=\"RCB_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=rcb1.Nationality)\ndata_rcb=[trace_rcb]\nlayout_rcb=dict(title=\"Best Right Center Backs\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_rcb=go.Figure(data=data_rcb, layout=layout_rcb)\niplot(fig_rcb)","b596a310":"sns.stripplot(x=rcb1['Name'], y=rcb1['CB_Overall'], data=rcb1, hue='Preferred Foot')\nplt.show()","2af508e5":"fifa[\"FullBacks\"] = (a*fifa.SprintSpeed + a*fifa.Acceleration + a*fifa.Agility + a*fifa.Stamina + a*fifa.Aggression +\n                    a*fifa.Positioning + a*fifa.Marking + a*fifa.SlidingTackle + a*fifa.StandingTackle + a*fifa.Crossing+ \n                    a*fifa.Dribbling + a*fifa.Reactions + \n                    b*fifa.Strength + b*fifa.BallControl + b*fifa.Curve + b*fifa.HeadingAccuracy +\n                    b*fifa.Interceptions + b*fifa.Composure + b*fifa.Vision+ \n                    b*fifa.Jumping + b*fifa.Balance + b*fifa.LongPassing + b*fifa.ShortPassing +\n                    c*fifa.Volleys )","39abbb22":"fb = fifa.sort_values('FullBacks', ascending=False)","65e78e98":"lfb = fb[(fb['Position']=='LB') | (fb['Position']=='LWB')]\nlfb1 = lfb.sort_values('FullBacks',ascending=False)[:5]","f16c5a8b":"rfb = fb[(fb['Position']=='RB') | (fb['Position']=='RWB')]\nrfb1 = rfb.sort_values('FullBacks',ascending=False)[:5]","f20e178d":"trace_lfb=go.Bar(\n            x=lfb1.Name,\n            y=lfb1.FullBacks,\n            name=\"Fullbacks\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=lfb1.Nationality)\ndata_lfb=[trace_lfb]\nlayout_lfb=dict(title=\"Best Left Backs\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_lfb=go.Figure(data=data_lfb, layout=layout_lfb)\niplot(fig_lfb)","59d201a0":"sns.stripplot(x=lfb1['Name'], y=lfb1['FullBacks'], data=lfb1, hue='Preferred Foot')\nplt.show()","20f2b6d8":"trace_rfb=go.Bar(\n            x=rfb1.Name,\n            y=rfb1.FullBacks,\n            name=\"FullBacks\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=rfb1.Nationality)\ndata_rfb=[trace_rfb]\nlayout_rfb=dict(title=\"Best Right Backs\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_rfb=go.Figure(data=data_rfb, layout=layout_rfb)\niplot(fig_rfb)","b28ab2c8":"sns.stripplot(x=rfb1['Name'], y=rfb1['FullBacks'], data=rfb1, hue='Preferred Foot')\nplt.show()","1e18bc82":"fifa['CDM_Overall'] = (a*fifa.ShortPassing + a*fifa.LongPassing +a*fifa.BallControl \n            +a*fifa.Composure + a*fifa.Balance\n            +a*fifa.Positioning +a*fifa.Strength +\n            a*fifa.Agility +a*fifa.Vision +\n            b*fifa.Reactions + b*fifa.Dribbling +b*fifa.Acceleration +b*fifa.Stamina +\n            b*fifa.LongShots +b*fifa.Interceptions +b*fifa.StandingTackle \n            +b*fifa.SlidingTackle +\n            b*fifa.Marking +b*fifa.Jumping + b*fifa.HeadingAccuracy +\n            c*fifa.Finishing)","70e1a781":"cdm = fifa.sort_values('CDM_Overall', ascending=False) ","88045053":"cdm1 = cdm[(cdm['Position'] == 'CDM') | (cdm['Position'] == 'LDM') | (cdm['Position'] == 'RDM')][:5]","5cb459b0":"trace_cdm=go.Bar(\n            x=cdm1.Name,\n            y=cdm1.CDM_Overall,\n            name=\"CDM_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=cdm1.Nationality)\ndata_cdm=[trace_cdm]\nlayout_cdm=dict(title=\"Best Center Defensive Midfielders\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_cdm=go.Figure(data=data_cdm, layout=layout_cdm)\niplot(fig_cdm)","3f1363c0":"sns.stripplot(x=cdm1['Name'], y=cdm1['CDM_Overall'], data=cdm1, hue='Preferred Foot')\nplt.show()","72086234":"fifa['CM_Overall'] = (a*fifa.ShortPassing + a*fifa.LongPassing +a*fifa.BallControl \n            +a*fifa.Composure + a*fifa.Balance\n            +a*fifa.Positioning +a*fifa.Strength +\n            a*fifa.Agility +a*fifa.Vision +\n            b*fifa.Reactions + b*fifa.Dribbling +b*fifa.Acceleration +b*fifa.Stamina +\n            b*fifa.LongShots +b*fifa.Interceptions +b*fifa.StandingTackle \n            +b*fifa.SlidingTackle +\n            b*fifa.Marking +b*fifa.Jumping + b*fifa.HeadingAccuracy +\n            c*fifa.Finishing)","ee105abb":"cm = fifa.sort_values('CM_Overall', ascending=False) ","34d8dcbe":"cm1 = cm[(cm['Position'] == 'CM') | (cm['Position'] == 'LCM') | (cm['Position'] == 'RCM')][:5]","30c84bd2":"trace_cm=go.Bar(\n            x=cm1.Name,\n            y=cm1.CM_Overall,\n            name=\"CM_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=cm1.Nationality)\ndata_cm=[trace_cm]\nlayout_cm=dict(title=\"Best Center Midfielders\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_cm=go.Figure(data=data_cm, layout=layout_cm)\niplot(fig_cm)","9cd386d9":"sns.stripplot(x=cm1['Name'], y=cm1['CM_Overall'], data=cm1, hue='Preferred Foot')\nplt.show()","42621c40":"fifa['CAM_Overall'] = (a*fifa.Marking + a*fifa.Positioning +a*fifa.BallControl\n                       +a*fifa.ShortPassing + a*fifa.Dribbling +a*fifa.Agility\n                       +a*fifa.Composure +a*fifa.Stamina +\n                       a*fifa.LongShots +a*fifa.Aggression +a*fifa.Vision\n                       +a*fifa.Acceleration + b*fifa.Finishing + b*fifa.Crossing\n                       + b*fifa.HeadingAccuracy+ b*fifa.ShotPower + b*fifa.SprintSpeed\n                       + b*fifa.Curve+ b*fifa.Volleys + c*fifa.Strength + \n                       c*fifa.StandingTackle + c*fifa.SlidingTackle)","186bbadb":"cam = fifa.sort_values('CAM_Overall', ascending=False) ","e63e7d79":"cam1 = cam[(cam['Position'] == 'CAM') | (cam['Position'] == 'LAM') | (cam['Position'] == 'RAM')][:5]","ad3e0cfe":"trace_cam=go.Bar(\n            x=cam1.Name,\n            y=cam1.CAM_Overall,\n            name=\"CAM_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=cam1.Nationality)\ndata_cam=[trace_cam]\nlayout_cam=dict(title=\"Best Center Attacking Midfielders\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_cam=go.Figure(data=data_cam, layout=layout_cam)\niplot(fig_cam)","dd74e06d":"sns.stripplot(x=cam1['Name'], y=cam1['CAM_Overall'], data=cam1, hue='Preferred Foot')\nplt.show()","dfb89146":"fifa['LW_Overall'] = (a*fifa.Crossing + a*fifa.Dribbling +a*fifa.Aggression +\n                      a*fifa.Stamina +a*fifa.Agility +a*fifa.BallControl +\n                      a*fifa.Curve +a*fifa.Balance +a*fifa.Positioning +\n                      a*fifa.Marking +a*fifa.SprintSpeed +a*fifa.Acceleration +\n                      b*fifa.Strength + b*fifa.ShotPower +b*fifa.Finishing +\n                      b*fifa.ShortPassing +b*fifa.Volleys +b*fifa.Vision +\n                      b*fifa.Interceptions + c*fifa.Jumping)","f3962beb":"lw = fifa.sort_values('LW_Overall', ascending=False)","38ef4022":"lw1 = lw[(lw['Position'] == 'LW') | (lw['Position'] == 'LM') | (lw['Position'] == 'LF')][:5]","5211ada2":"trace_lw=go.Bar(\n            x=lw1.Name,\n            y=lw1.LW_Overall,\n            name=\"LW_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=lw1.Nationality)\ndata_lw=[trace_lw]\nlayout_lw=dict(title=\"Best Left Wingers\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_lw=go.Figure(data=data_lw, layout=layout_lw)\niplot(fig_lw)","0f00478c":"sns.stripplot(x=lw1['Name'], y=lw1['LW_Overall'], data=lw1, hue='Preferred Foot')\nplt.show()","7d8955ed":"fifa['RW_Overall'] = (a*fifa.Crossing + a*fifa.Dribbling +a*fifa.Aggression +\n                      a*fifa.Stamina +a*fifa.Agility +a*fifa.BallControl +\n                      a*fifa.Curve +a*fifa.Balance +a*fifa.Positioning +\n                      a*fifa.Marking +a*fifa.SprintSpeed +a*fifa.Acceleration +\n                      b*fifa.Strength + b*fifa.ShotPower +b*fifa.Finishing +\n                      b*fifa.ShortPassing +b*fifa.Volleys +b*fifa.Vision +\n                      b*fifa.Interceptions + c*fifa.Jumping)","51f0b999":"rw = fifa.sort_values('RW_Overall', ascending=False)","b3f3824d":"rw1 = rw[(rw['Position'] == 'RW') | (rw['Position'] == 'RM') | (rw['Position'] == 'RF')][:5]","24d5801c":"trace_rw=go.Bar(\n            x=rw1.Name,\n            y=rw1.RW_Overall,\n            name=\"RW_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=rw1.Nationality)\ndata_rw=[trace_rw]\nlayout_rw=dict(title=\"Best Right Wingers\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_rw=go.Figure(data=data_rw, layout=layout_rw)\niplot(fig_rw)","1b32fb18":"sns.stripplot(x=rw1['Name'], y=rw1['RW_Overall'], data=rw1, hue='Preferred Foot')\nplt.show()","2f2fd31e":"fifa['ST_Overall'] = (a*fifa.Finishing + a*fifa.HeadingAccuracy +a*fifa.Volleys +\n                      a*fifa.BallControl +a*fifa.Composure +a*fifa.Balance +\n                      a*fifa.Strength +a*fifa.Positioning +a*fifa.Jumping +\n                      a*fifa.ShotPower +a*fifa.Agility +a*fifa.Acceleration +\n                      b*fifa.Dribbling + b*fifa.ShortPassing +b*fifa.Curve +\n                      b*fifa.SprintSpeed +b*fifa.Stamina +b*fifa.Aggression +\n                      c*fifa.Crossing)","3531e1da":"st = fifa.sort_values('ST_Overall', ascending=False)","5e5859c6":"st1 = st[(st['Position'] == 'ST') | (st['Position'] == 'ST') | (st['Position'] == 'ST')][:5]","c7867fbf":"trace_st=go.Bar(\n            x=st1.Name,\n            y=st1.ST_Overall,\n            name=\"ST_Overall\",\n            marker=dict(color=\"rgba(72,240,224,0.8)\"),\n            text=st1.Nationality)\ndata_st=[trace_st]\nlayout_st=dict(title=\"Best Strikers\"\n            ,xaxis=dict(title=\"Names\",ticklen=5,zeroline=False),\n            yaxis=dict(title=\"Overall Ratings\",ticklen=5,zeroline=False))\nfig_st=go.Figure(data=data_st, layout=layout_st)\niplot(fig_st)","482d5eca":"sns.stripplot(x=st1['Name'], y=st1['ST_Overall'], data=st1, hue='Preferred Foot')\nplt.show()","3472b0f7":"list_photo = [gk.Photo.iloc[0],lfb1.Photo.iloc[0],lcb1.Photo.iloc[0],rcb1.Photo.iloc[0],\n            rfb1.Photo.iloc[0],cdm1.Photo.iloc[0],cam1.Photo.iloc[0],cm1.Photo.iloc[0],\n            lw1.Photo.iloc[0],st1.Photo.iloc[0],rw1.Photo.iloc[0]]","35c4bf92":"list_team = [gk.Name.iloc[0],lfb1.Name.iloc[0],lcb1.Name.iloc[0],rcb1.Name.iloc[0],\n            rfb1.Name.iloc[0],cdm1.Name.iloc[0],cam1.Name.iloc[0],cm1.Name.iloc[0],\n            lw1.Name.iloc[0],st1.Name.iloc[0],rw1.Name.iloc[0]]\nlist_team","c2549984":"list_posi_x = [10  , 1.5, 6.8, 13.5, 18.5, 10  , 5.5 , 14  , 1.5 , 10   , 18.5]\nlist_posi_y = [2.9 , 6  , 6  , 6   ,    6, 10  , 13.5, 13.5, 17.5, 18.5 , 17.5]\nlist_name_x = [10.7, 2.2, 7.5, 14.2, 19.2, 10.7, 6.2 , 14.7, 2.2 , 10.8 , 19.3]\nlist_name_y = [0   , 3.1, 3.1, 3.1 ,  3.1, 7.1 , 10.6, 10.6, 14.6, 15.6 , 14.6]","df6b2aa9":"play = []\nfor i in list_photo:\n    response = requests.get(i)\n    img_play = Image.open(BytesIO(response.content))\n    play.append(np.array(img_play))","9f72741a":"fig, ax = plt.subplots(figsize=(10,10))\n\ndef plot(x,y,image):\n    xy = [x, y]\n    imagebox = OffsetImage(image, zoom=1)\n    imagebox.image.axes = ax\n    ab = AnnotationBbox(imagebox, xy,)\n    ax.add_artist(ab)\n\n    \ndef names(x,y,text):\n    xy1 = [x,y]\n    offsetbox = TextArea(text, minimumdescent=False)\n    ab1 = AnnotationBbox(offsetbox, xy1,\n                        xybox=(-20, 40),\n                        xycoords='data',\n                        boxcoords=\"offset points\")\n    ax.add_artist(ab1)\nax.set_facecolor('#4FB352')\nfor i in range(0,11):\n    plot(list_posi_x[i],list_posi_y[i],play[i])\n    names(list_name_x[i],list_name_y[i],list_team[i])\n    \nax.set_xlim(0, 20)\nax.set_ylim(0, 20)\nplt.title('Fifa Best 11')\nplt.show()","97cc5d10":"sns.lmplot(x='Age', y='Overall', data=fifa, hue='Preferred Foot',markers=['o','v'],\n          scatter_kws={'s':100}, size=10, palette='inferno')\nplt.show()","0d929582":"sns.distplot(fifa.Overall)\nplt.axvline(x=fifa.Overall.mean())\nplt.show()","cc69b586":"nations = pd.DataFrame(fifa.Nationality.value_counts())","529f8e98":"nations.rename({'England':'UK'}, inplace=True)","363f8f1f":"nations.head()","d3557ad2":"data1 = dict(\n        type = 'choropleth',\n        locations = list(nations.index),\n        locationmode = 'country names',\n        colorscale = \"Speed\",\n        z = list(nations.Nationality),\n        colorbar = {'title' : 'Number Of Players'},\n      ) ","40473220":"layout1 = dict(\n    title = 'Football Players Around the World',\n    geo = dict(\n        showframe = False\n    )\n)","8cd76b6c":"choromap = go.Figure(data = [data1],layout = layout1)\niplot(choromap)","8ccd6f37":"# Importing The Libraries","780e0415":"## Best Left Winger","055f4174":"# Plotting the Team","1deeea78":"## Converting Value and Wage into simpler form","a9a6e93f":"# Looking at the Missing Values throughout the Dataset\n### The Relevant columns are already cleaned.","4196f13f":"# Some Plots","7c80d32d":"## Filling The Missing values in 'Preferred Foot' by their Binomial Distribution ","9819023a":"# Data Cleaning","41ea8bed":"# Fifa Best 11","bde9344d":"## Best Goalkeeper","eff4585c":"## So The 5 most Significant Features which play a vital role in determining a Player's Value are:- Overall Ratings, Wage, International Reputation, Weak Foot and Skill Moves.","692bd1be":"## Treating the Height & Weight Columns and Calculating every player's BMI.","6e59b5e3":"## Filling other columns by their mean.","0f3dc071":"## Treating the Position and Attribute columns","e64f8bf7":"# Football Players Around the World","e4638cff":"## Best Right Winger","fda45c02":"## Best Center Defensive Midfielder","254a060d":"## Loading the Data","c65eac39":"## To Display all the Columns","ddf7efc6":"### The average overall player rating is somewhere between 65 to 70","1e4562cf":"## Best Full Backs","ee406ea4":"## Best Center Backs","1c475917":"## Best Striker","f9f103a3":"## Best Attacking Midfielder","8faab5e5":"### Age vs Overall vs Potential","2069dcb4":"# To Find out the Significant Features that determine a Player's value."}}