{"cell_type":{"37540ba7":"code","16309cf3":"code","891cb273":"code","6b568eb3":"code","1be89b73":"code","4ca9a528":"code","69e2f5c9":"code","89d68cbf":"code","1cb5495a":"code","11d0336c":"code","3d19b866":"code","f508b95a":"code","d70cfb73":"markdown","0bf78762":"markdown","cbd8eba4":"markdown","f8e600cb":"markdown","36353840":"markdown"},"source":{"37540ba7":"from datetime import datetime, timedelta\nimport glob\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nimport pandas as pd\nimport re\nimport tifffile as tiff ","16309cf3":"s5p_no2_timeseries = glob.glob('..\/input\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/*')","891cb273":"data_monthly_divided = {}","6b568eb3":"for data in s5p_no2_timeseries:\n     \n    data_date =  datetime.strptime(data[:77], '..\/input\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/s5p_no2_%Y%m')\n    data_date = data_date.strftime(\"%Y\/%m\")\n    \n    if not data_date in data_monthly_divided.keys():\n        data_monthly_divided[data_date] = []\n        \n    data_monthly_divided[data_date].append(data)","1be89b73":"for key in sorted(data_monthly_divided.keys()):\n    print(\"number of data in\" , key, \"is\", len(data_monthly_divided[key]))","4ca9a528":"#From https:\/\/www.kaggle.com\/paultimothymooney\/overview-of-the-eie-analytics-challenge\n\ndef split_column_into_new_columns(dataframe,column_to_split,new_column_one,begin_column_one,end_column_one):\n    for i in range(0, len(dataframe)):\n        dataframe.loc[i, new_column_one] = dataframe.loc[i, column_to_split][begin_column_one:end_column_one]\n    return dataframe","69e2f5c9":"power_plants = pd.read_csv('\/kaggle\/input\/ds4g-environmental-insights-explorer\/eie_data\/gppd\/gppd_120_pr.csv')\npower_plants = split_column_into_new_columns(power_plants,'.geo','latitude',50,66)\npower_plants = split_column_into_new_columns(power_plants,'.geo','longitude',31,48)\npower_plants['latitude'] = power_plants['latitude'].astype(float)\na = np.array(power_plants['latitude'].values.tolist()) # 18 instead of 8\npower_plants['latitude'] = np.where(a < 10, a+10, a).tolist() ","89d68cbf":"power_plants_df = power_plants.sort_values('capacity_mw',ascending=False).reset_index()\npower_plants_df[['name','latitude','longitude','primary_fuel','capacity_mw','estimated_generation_gwh']][29:30]\nquantity_of_electricity_generated = power_plants_df['estimated_generation_gwh'][29:30].values\nprint('Quanity of Electricity Generated: ', quantity_of_electricity_generated)","1cb5495a":"month = []\nemissions = []\n\nfor key in sorted(data_monthly_divided.keys()):\n    average_emissions = []\n    datas = data_monthly_divided[key]\n    for data in datas:\n        \n        #You can use your model here!!!\n        average_emission = np.nanmean(tiff.imread(data))\n        \n        average_emissions.append(average_emission)\n    \n    month.append(key)\n    emissions.append(np.nanmean(average_emissions))           ","11d0336c":"results = pd.DataFrame(columns=['month', 'emission','emisson factor'])\nresults = pd.DataFrame({'emission':emissions,\n                       'emission factor':emissions\/quantity_of_electricity_generated},\n                    index=month)","3d19b866":"results","f508b95a":"results[\"emission factor\"].plot()\nplt.title('Monthly Mean Simplified Emissions Factor in Puerto Rico')","d70cfb73":"# List up given Sentinel 5P OFFL NO2","0bf78762":"There seems  more data than days in each month.","cbd8eba4":"# Calculate simplified emissions factor","f8e600cb":"# Calculate Quanity of Electricity Generated","36353840":"It is required to calculate emissions factor on a time slice with a small average emission factor in the past.\n\n> Bonus points for smaller time slices of the average historical emissions factors, such as one per month for the 12-month period.\n\nhttps:\/\/www.kaggle.com\/c\/ds4g-environmental-insights-explorer\/overview\/evaluation\n\nI\"ll try to calculate monthly averaged simplified emissions factor."}}