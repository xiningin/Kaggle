{"cell_type":{"01e17651":"code","626810a7":"code","eab2df8f":"code","91efe4bb":"code","94db6e5e":"code","cc3e9501":"code","ce423ccb":"code","92733f71":"code","0a47f1a8":"code","c86668c0":"code","78803745":"code","6aa4b2a5":"code","45942d22":"code","72aa8e1f":"code","b9d30ac4":"code","fe8ea4bc":"code","80158509":"code","279a0553":"code","898d41e8":"markdown","db289c86":"markdown","3f8402bf":"markdown","f31608eb":"markdown","1798d5f1":"markdown","2cbcfe5b":"markdown","bc86a1d8":"markdown","b7f4b333":"markdown"},"source":{"01e17651":"import numpy as np\nimport pandas as pd\nimport os\n\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\npd.options.display.max_columns = 1000\npd.options.display.max_rows = 1000\n\n\npath_submissions = '\/'\ntarget_name = 'target'\nscores_folds = {}\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nDEBUG = False","626810a7":"nrows = 10000 if DEBUG else None\n\ntrain=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv\", nrows = nrows)\ntest=pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-nov-2021\/test.csv\", nrows = nrows)","eab2df8f":"train.describe()","91efe4bb":"train.isnull().sum()","94db6e5e":"colNames=[col for col in test.columns if col not in 'id']","cc3e9501":"!mkdir -p \/tmp\/pip\/cache\/\n!cp ..\/input\/hdbscan0827-whl\/hdbscan-0.8.27-cp37-cp37m-linux_x86_64.whl \/tmp\/pip\/cache\/\n!pip install --no-index --find-links \/tmp\/pip\/cache\/ hdbscan","ce423ccb":"%%time\n\nfrom sklearn.preprocessing import StandardScaler\nimport hdbscan\nimport umap\n\nscaler = StandardScaler()\n\nX = scaler.fit_transform(train[colNames])\n\nreducer = umap.UMAP(random_state=42, n_components=2)\nembedding = reducer.fit_transform(X)\n\nclusterer = hdbscan.HDBSCAN(prediction_data=True, min_cluster_size = 250).fit(embedding)\n\nu, counts = np.unique(clusterer.labels_, return_counts=True)\n\nprint(u)\nprint(counts)","92733f71":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=clusterer.labels_, edgecolors='none', cmap='jet');","0a47f1a8":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=train.target, edgecolors='none', cmap='jet');","c86668c0":"from sklearn.preprocessing import RobustScaler\n\nscaler = RobustScaler()\n\nX = scaler.fit_transform(train[colNames])\n\nreducer = umap.UMAP(random_state=42, n_components=2)\nembedding = reducer.fit_transform(X)\nclusterer = hdbscan.HDBSCAN(prediction_data=True, min_cluster_size = 10).fit(embedding)\n\nu, counts = np.unique(clusterer.labels_, return_counts=True)\n\nprint(u)\nprint(counts)","78803745":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=clusterer.labels_, edgecolors='none', cmap='jet');","6aa4b2a5":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=train.target, edgecolors='none', cmap='jet');","45942d22":"table_target = pd.crosstab(clusterer.labels_,train.target)","72aa8e1f":"proba = table_target.iloc[:,1] \/ table_target.sum(axis=1)","b9d30ac4":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding[:, 0], embedding[:, 1], s=5, c=[proba[i] for i in clusterer.labels_], edgecolors='none', cmap='jet',vmin=0.25,vmax=0.75);","fe8ea4bc":"Xtest = scaler.transform(test[colNames])\nembedding_test = reducer.transform(Xtest)\ntest_labels, strengths = hdbscan.approximate_predict(clusterer, embedding_test)\ntest_proba = [proba[i] for i in test_labels]","80158509":"plt.figure(figsize=(10, 8))\nplt.scatter(embedding_test[:, 0], embedding_test[:, 1], s=5, c=test_labels, edgecolors='none', cmap='jet');","279a0553":"sub=pd.read_csv(\"..\/input\/tabular-playground-series-nov-2021\/sample_submission.csv\",nrows = nrows)\nsub['target']=test_proba\nsub.to_csv(\"submission.csv\",index=False)","898d41e8":"# Prediction","db289c86":"# Plot relation to target","3f8402bf":"# Plot clusters","f31608eb":"# Use on test","1798d5f1":"# UMAP \/ Hdbscan","2cbcfe5b":"# Count target by cluster","bc86a1d8":"# Better scaler","b7f4b333":"# plot probabilities"}}