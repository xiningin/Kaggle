{"cell_type":{"b2377502":"code","b9680368":"code","a070f52e":"code","e42e4704":"code","18993ff9":"code","d87ac096":"code","2d398050":"code","30a167b6":"code","7df81640":"code","d2921a31":"code","e06c262c":"code","5dd4ed21":"code","b0af9c67":"code","ee042950":"code","eeba2c71":"code","310cbd56":"code","455fb4ae":"code","75f109c6":"markdown","41b6681a":"markdown","28fbbe78":"markdown","f7d14b31":"markdown","10dfae4d":"markdown","005103ea":"markdown","780e356c":"markdown","cfa98671":"markdown","1ac0d912":"markdown","b7f0f9eb":"markdown","f1ec5684":"markdown","605fe07f":"markdown"},"source":{"b2377502":"# Install celluloid for animation \n# Documentation: https:\/\/pypi.org\/project\/celluloid\/\n!pip install celluloid ","b9680368":"# Load packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime\nfrom celluloid import Camera\nfrom IPython.display import Image\n%matplotlib inline","a070f52e":"# Read data\nPATH = '..\/input\/euro-exchange-daily-rates-19992020\/euro-daily-hist_1999_2020.csv'\ndf = pd.read_csv(PATH)","e42e4704":"# Show first 5 rows for data exploration\ndf.head()","18993ff9":"# Understanding of our columns and their dtypes\ndf.info()","d87ac096":"df.rename(columns={'[US dollar ]':'us_dollar', 'Period\\\\Unit:':'time'}, inplace=True)\n\n# Test\ndf[['time','us_dollar']].sample()","2d398050":"df['time'] = pd.to_datetime(df.time)\n\n# Test\ndf.time.dtype","30a167b6":"df = df.sort_values('time').reset_index(drop=True)\n\n# Test\ndf.head()","7df81640":"usd_df = df[['time','us_dollar']].copy()\n\n# Test\nusd_df.sample()","d2921a31":"usd_df.us_dollar.value_counts()","e06c262c":"usd_df.drop(index=usd_df[usd_df['us_dollar']=='-'].index, inplace=True)\n\n# Test\nusd_df.us_dollar.value_counts()","5dd4ed21":"usd_df.us_dollar = usd_df.us_dollar.astype('float')\n\n# Test\nusd_df.info()","b0af9c67":"fig, ax = plt.subplots()\nax.plot(usd_df.time, usd_df.us_dollar)","ee042950":"usd_df['rolling_mean_30'] = usd_df.us_dollar.rolling(30).mean()\n\n# Test\nusd_df.tail()","eeba2c71":"# Replot vs rolling mean\nfig, ax = plt.subplots()\nax.plot(usd_df.time, usd_df.rolling_mean_30)","310cbd56":"# Generating figure\nfig , axs = plt.subplots(7,1,figsize=(8,24))\n\n# Initializing our figures parameters\nstarts=[0, 782, 2455, 2807, 3935, 4175, 5440]\nends =[782, 2455, 2600, 2940, 4175, 5440, -1]\nwys = [1.53, 1.48, 1.53, 1.53, 1.48, 1.48, 1.48]\ntexts = ['Euro Introduction', 'Transition From Legacy\\n   Currencies to Euro', 'Global Financial Crisis',\n       'Greek Crisis', '   Euro Plunging\\nVS Mighty Dollar', 'Quantitative Easing\\n          Policy',\n       'Coronavirus\\n  Pandemic']\nsizes=[10, 8, 10, 10, 8, 8, 8]\n\n# looping over figures\nfor start, end, wy, text, size, ax in zip(starts, ends, wys, texts, sizes, axs):\n    # Background figure\n    ax.plot(usd_df.time, usd_df.rolling_mean_30, color='#b00b1e', alpha=0.25)\n    ax.axhline(y=1, color='#898989', alpha=0.2, xmax=0.97)\n    ax.spines['right'].set_visible(False)\n    ax.spines['top'].set_visible(False)\n    ax.tick_params(left=False)\n    \n    # Foreground figure\n    ax.plot(usd_df.time[start:end], usd_df.rolling_mean_30[start:end], color='#b00b1e')\n    ax.text(x=datetime.strptime('1999', '%Y'), y=wy, s=text, size=size,\n             bbox=dict(facecolor='none', edgecolor='black', boxstyle='round,pad=0.2'))\n    \n# Title & subtitle\naxs[0].text(x=datetime.strptime('1998', '%Y'), y=1.8, s='Euro more valuable than Dollar:', weight='bold', size=18)\naxs[0].text(x=datetime.strptime('1998', '%Y'), y=1.71, s='History of the Euro currency', size=15)\n\n# Signature\naxs[6].text(x=datetime.strptime('1997', '%Y'), y=0.59, s='\u00a9Youssef Etman'+' '*90+'Source:thebalance.com',\n            backgroundcolor='#000000', color='#ffffff');","455fb4ae":"# Initialize plot and animation camera\nfig1, (ax1, ax2) = plt.subplots(1,2, figsize=(14,4))\ncamera = Camera(fig1)\n\n# Looping over figures as above\nfor start, end, wy, text, size in zip(starts, ends, wys, texts, sizes):\n    for i in range(0,5):\n        # Main still figure\n        ax1.plot(usd_df.time, usd_df.rolling_mean_30, color='#b00b1e')\n        ax1.axhline(y=1, color='#898989', alpha=0.4, xmax=0.97)\n        ax1.text(x=datetime.strptime('2007', '%Y'), y=1.02, s='Euro stronger \u2191', color='#898989')\n        ax1.text(x=datetime.strptime('2007', '%Y'), y=0.96, s='Dollar stronger \u2193', color='#898989')\n        ax1.spines['right'].set_visible(False)\n        ax1.spines['top'].set_visible(False)\n        ax1.tick_params(left=False)\n        ax1.set_ylabel('Eur \/ USD')\n    \n        ax2.plot(usd_df.time, usd_df.rolling_mean_30, color='#b00b1e', alpha=0.25)\n        ax2.axhline(y=1, color='#898989', alpha=0.2, xmax=0.97)\n        ax2.spines['right'].set_visible(False)\n        ax2.spines['top'].set_visible(False)\n        ax2.tick_params(left=False)\n        \n        # Title\n        ax1.text(x=datetime.strptime('1998', '%Y'), y=1.65, s='History of the Euro currency', size=15)\n        \n        # Signature\n        ax1.text(x=datetime.strptime('1997', '%Y'), y=0.7, s='\u00a9Youssef Etman'+' '*195+'Source:thebalance.com',\n        backgroundcolor='#000000', color='#ffffff')\n\n        # Dynamic figure\n        ax2.plot(usd_df.time[start:end], usd_df.rolling_mean_30[start:end], color='#b00b1e')\n        ax2.text(x=datetime.strptime('1999', '%Y'), y=wy, s=text, size=size, bbox=dict(facecolor='none', \n                                                                                        edgecolor='black', \n                                                                                        boxstyle='round,pad=0.2'))\n        camera.snap()\n    \n# Compile & save animation\nanimation = camera.animate()\nanimation.save('euro_hist.gif')\n\n# Clear figure\nplt.clf()\n\n# Display saved GIF\nImage(url='euro_hist.gif')","75f109c6":"# Producing our story","41b6681a":"The figure above is too long and might be annoying for some readers, Next we are going to generate an animated GIF that summarizes all of the above figures.","28fbbe78":"# History of Euro vs Dollar [ANIMATED!]\nIn this notebook we are going to study the history of the Euro vs US Dollar using our generated plot. There are 7 interesting highlights in the history of the Euro let's take a look at them:\n* 1- The currency was introduced in non-physical form (traveller's cheques, electronic transfers, banking, etc.) at midnight on 1 January 1999 [[source]](https:\/\/en.wikipedia.org\/wiki\/History_of_the_euro#Launch)\n* 2- Transition from national legacy currencies to euro 2002 [[source]](https:\/\/en.wikipedia.org\/wiki\/History_of_the_euro#Aftermath)\n* 3- Global financial crisis 2008 [[source]](https:\/\/en.wikipedia.org\/wiki\/History_of_the_euro#Recession_era)\n* 4- Greek Crisis 2010 [[source]](https:\/\/www.thebalance.com\/what-is-the-greece-debt-crisis-3305525#:~:text=Why%20Greece%20Didn't%20Leave%20the%20Eurozone&text=Without%20the%20austerity%20measures%2C%20the,lowered%20its%20euro%20exchange%20rate.)\n* 5- Euro plunging for many reasons Much of has been about the strength of the Dollar 2014. [[source]](https:\/\/money.cnn.com\/2015\/01\/05\/investing\/euro-slump-deepens\/index.html)\n* 6- Quantitative Easing start in Europe 2015 [[source]](https:\/\/www.reuters.com\/article\/us-eurozone-ecb-qe-idUSKBN1OB1SM)\n* 7- Coronavirus Pandemic 2020 [[source]](https:\/\/www.statista.com\/statistics\/1102209\/coronavirus-cases-development-europe\/)","f7d14b31":"The resulting figure has many wiggles representing the daily variation of the exchange rate. However, we are only interested in long term variation so next we are going to apply rolling mean with rolling window of 30 days showing variation of exchange rate every 30 days.","10dfae4d":"---\n# Analysis\nNow that we're finished cleaning the data, we'll generate a line plot to visualize the evolution of the euro-dollar exchange rate.","005103ea":"## Sort the values by time in ascending order & reset index.","780e356c":"## Change the time column to a datetime data type","cfa98671":"## Columns renaming","1ac0d912":"## Isolate `time` & `us_dollar` in a separate df","b7f0f9eb":"# Clean\nBelow, we do the following:\n\n* We rename the `[US dollar ]` and `Period\\Unit:` columns to something easier to type \u2014 us_dollar and time.\n* We change the time column to a datetime data type.\n* We sort the values by time in ascending order.\n* We reset the index (and drop the initial index).\n* Isolate `time` & `us_dollar` in a separate df since this is our area of focus.\n* Drop rows with `us_dollar` value = `-`\n* Convert the `us_dollar` column to a float data type.","f1ec5684":"## Drop rows with `us_dollar` value = `-`","605fe07f":"## Convert the `us_dollar` column to a float data type."}}