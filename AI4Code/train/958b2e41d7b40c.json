{"cell_type":{"581fce15":"code","55db9612":"code","fbbc1042":"code","dd28cdd0":"code","33be9754":"code","2dcac320":"code","3786aa60":"code","a648c941":"code","ca674f6d":"code","72607a92":"code","079a293b":"code","21a41cb8":"code","fa5cbe97":"code","4a3718f6":"code","13839e00":"code","58bb0653":"code","4bb1c8dd":"code","409b5bc7":"code","a43f977c":"code","2bdd7ded":"code","8fda4d6d":"code","a7d02dec":"code","407d6b40":"code","600794a9":"code","dedc883b":"code","fb7b5b24":"code","e6dd30b3":"code","3084c898":"code","3e0c22bd":"code","674bc176":"code","7d7095e1":"code","45be097d":"code","238a2f2f":"code","8234ca48":"code","58f92ed7":"code","e5e72af2":"code","390623cd":"code","4a5fdb9a":"code","b1b68d83":"code","0e8210bd":"code","e94c3599":"code","c6382910":"code","38adb275":"code","6d9d4994":"code","9d3bdfac":"code","3d13f957":"code","2860d5db":"code","4542fc3a":"code","7f5e337d":"code","54b8ee8e":"markdown","590fbc53":"markdown","49a94e9e":"markdown","7070bcea":"markdown"},"source":{"581fce15":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55db9612":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nimport unidecode","fbbc1042":"dt = pd.read_csv('\/kaggle\/input\/corona-virus-brazil\/brazil_covid19.csv')\ndt.head()","dd28cdd0":"dt.info()","33be9754":"dt.date = pd.to_datetime(dt['date'])\ndt.info()","2dcac320":"pd.set_option('display.float_format', lambda x: '%.2f' % x)\ndt.describe()","3786aa60":"dt.columns = [\"date\", \"regiao\", \"estado\", \"casos\", \"mortes\"]\ndt.head()","a648c941":"dt[dt.casos == 1178075.00]","ca674f6d":"dt[\"casos_diarios\"] = dt.groupby('estado')['casos'].apply(lambda x: x.shift(1) - x)*-1\ndt[\"mortes_diarias\"] = dt.groupby('estado')['mortes'].apply(lambda x: x.shift(1) - x)*-1\ndt.describe()","72607a92":"mxdt = str(max(dt['date']))\nprint(\"dados de: \", min(dt['date']), max(dt['date']))","079a293b":"dtsum = dt[['date', 'casos', 'mortes']].groupby('date').sum()\ndtsum.head()","21a41cb8":"\nfig = make_subplots(rows=2, cols=1)\n\nfig.add_trace(go.Bar(x=dtsum.index, y=dtsum.casos,  name=\"Casos Confirmados\"), row = 1, col = 1)\nfig.add_trace(go.Bar(x=dtsum.index, y=dtsum.mortes, name=\"\u00d3bitos\"), row = 2, col = 1)\nfig.update_layout(title_text=(\"Situa\u00e7\u00e3o at\u00e9 - \"+mxdt), paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","fa5cbe97":"dtsum2 = dt[['date', 'casos_diarios', 'mortes_diarias']].groupby(\"date\").sum()\ndtsum2[\"media_casos_semanal\"] = dtsum2[[\"casos_diarios\"]].rolling(window=7).mean()\ndtsum2[\"media_mortes_semanal\"] = dtsum2[[\"mortes_diarias\"]].rolling(window=7).mean()\ndtsum2[\"media_casos_30dias\"] = dtsum2[[\"casos_diarios\"]].rolling(window=30).mean()\ndtsum2[\"media_mortes_30dias\"] = dtsum2[[\"mortes_diarias\"]].rolling(window=30).mean()\n","4a3718f6":"fig = make_subplots(rows=2, cols=1)\n\nfig.add_trace(go.Bar(x=dtsum2.index, y=dtsum2.casos_diarios,  name=\"Casos Confirmados di\u00e1rios\", yaxis='y1'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x=dtsum2.index, y=dtsum2.media_casos_semanal,  name=\"Casos Confirmados - M\u00e9dia Semanal\", yaxis='y2'),  row = 1, col = 1)\n\n\nfig.add_trace(go.Bar(x=dtsum2.index, y=dtsum2.mortes_diarias, name=\"\u00d3bitos di\u00e1rios\", yaxis='y1'), row = 2, col = 1)\nfig.add_trace(go.Scatter(x=dtsum2.index, y=dtsum2.media_mortes_semanal,  name=\"\u00d3bitos - M\u00e9dia Semanal\", yaxis='y2'), row = 2, col = 1)\nfig.update_layout(title_text=(\"Situa\u00e7\u00e3o di\u00e1ria at\u00e9 - \"+mxdt), \n    plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","13839e00":"fig = make_subplots(1, 1)\n\nfig.add_trace(go.Scatter(x=dtsum2.index, y=dtsum2.media_casos_30dias,  name=\"Confirmados - Media 30 dias\", yaxis='y1'), row = 1, col = 1)\nfig.add_trace(go.Scatter(x=dtsum2.index, y=dtsum2.media_casos_semanal,  name=\"Confirmados - M\u00e9dia Semanal\", yaxis='y2'),  row = 1, col = 1)\n\nfig.update_layout(title_text=(\"M\u00e9dia de Confirmados at\u00e9 - \"+mxdt), \n    plot_bgcolor='rgba(0,0,0,0)')\n\nfig.show()","58bb0653":"dtsum[\"tx_letalidade\"] = dtsum.mortes\/dtsum.casos\n\nfig = px.line(x=dtsum.index, y=dtsum.tx_letalidade,  title=\"Taxa de letalidade\")\nfig.update_layout(xaxis_title=\"Data\",\n    yaxis_title=\"Taxa de Letalidade\", \n    plot_bgcolor='rgba(0,0,0,0)', yaxis_tickformat = '.2%')\nfig.show()","4bb1c8dd":"dtsum3 = dt.loc[(dt['date']== mxdt), ['estado', 'casos', 'mortes']]\ndtsum3.columns = ['UF', 'casos', 'mortes']\ndtsum3.head()","409b5bc7":"dtsum3['% Taxa letalidade'] = round(dtsum3.mortes\/dtsum3.casos*100, 2)\ndtsum3[['UF', '% Taxa letalidade']].sort_values(by='% Taxa letalidade', ascending=False).style.background_gradient(cmap='Reds', subset = ['% Taxa letalidade'])","a43f977c":"dtpop = pd.read_csv('\/kaggle\/input\/corona-virus-brazil\/brazil_population_2019.csv', error_bad_lines=False)\ndtpop.head()","2bdd7ded":"dtpopsum = dtpop[['region', 'state','population']].groupby(['state', 'region'], as_index = False).sum()\ndtpopsum['Estado'] = dtpopsum['state'].apply(unidecode.unidecode)\ndtpopsum.head()","8fda4d6d":"import geopandas as gpd\nimport json\nimport unidecode \n\nmapbrasil = gpd.read_file('\/kaggle\/input\/majson\/data\/Brasil.json')\nmapbrasil['Estado'] = mapbrasil['ESTADO'].apply(unidecode.unidecode)\nmapbrasil.head()\n","a7d02dec":"dtsum4 = pd.merge(dtpopsum, mapbrasil, how= 'left')\ndtsum4 = dtsum4[['UF', 'Estado','population']]\ndtsum4.head()","407d6b40":"dtsum5 = pd.merge(dtsum4, dtsum3, how = 'inner')\ndtsum5['caso100mil'] = dtsum5['casos']\/dtsum5['population']*100000\ndtsum5['caso100mil'] = dtsum5['caso100mil'].astype('int64')\ndtsum5['mortes100mil'] = dtsum5['mortes']\/dtsum5['population']*100000\ndtsum5['mortes100mil'] = dtsum5['mortes100mil'].astype('int64')\ndtsum5[['Estado', 'caso100mil', 'mortes100mil']].sort_values(by='caso100mil', ascending=False).style.background_gradient(cmap='Reds', subset = [\"caso100mil\", 'mortes100mil'])","600794a9":"populacao = dtpop.population.sum()\ndtsum['populacao'] = populacao\ndtsum['casos100mil'] = dtsum.casos\/dtsum.populacao*100000\ndtsum['casos100mil'] = dtsum['casos100mil'].astype('int64')\n\ndtsum['mortes100mil'] = dtsum.mortes\/dtsum.populacao*100000\ndtsum['mortes100mil'] = dtsum['mortes100mil'].astype('int64')\n\nfig = px.bar(dtsum, x = dtsum.index, y = 'casos100mil', title = \"Casos por 100mil habitantes - Brasil\")\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height = 400)\nfig.show()","dedc883b":"fig = px.bar(dtsum, x = dtsum.index, y = 'mortes100mil', title = \"\u00d3bitos por 100mil habitantes - Brasil\")\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height = 400)\nfig.show()","fb7b5b24":"estado = np.unique(dt[['estado', 'regiao']].values)\nregiao = np.unique(dt[['regiao']].values)\n\ndt_ufreg = dt[['estado', 'regiao']].drop_duplicates()\ndt_ufreg.columns = ['Estado', 'regiao']\n","e6dd30b3":"dtreg = dt[['date', 'regiao', 'casos', 'mortes']].groupby(['date', 'regiao'], as_index=False).sum()\n\ndtpopreg = dtpopsum[['region', 'population']].groupby('region', as_index=False).sum()\ndtpopreg.columns = ['regiao', 'population']\ndtreg2 = pd.merge(dtreg, dtpopreg, how='left')\ndtreg2.head()\n","3084c898":"dtreg2['caso100mil'] = dtreg2['casos']\/dtreg2['population']*100000\ndtreg2['caso100mil'] = dtreg2['caso100mil'].astype('int64')\ndtreg2['morte100mil'] = dtreg2['mortes']\/dtreg2['population']*100000\ndtreg2['morte100mil'] = dtreg2['morte100mil'].astype('int64')\ndtreg2['txletalidade'] = dtreg2['mortes']\/dtreg2['casos']\ndtreg2.head()\n\nfig = px.scatter(dtreg2, x ='date', y='caso100mil', color='regiao', title = 'Casos 100mil habitantes por Regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height = 500)\nfig.show()","3e0c22bd":"fig = px.scatter(dtreg2, x ='date', y='morte100mil', color='regiao', title = 'Mortes 100mil habitantes por Regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height = 500)\nfig.show()","674bc176":"dtreg2 = dtreg2.reset_index()\ndtreg2.head()","7d7095e1":"fig = px.scatter(dtreg2, x ='date', y='casos', color='regiao', title = 'Casos por regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height = 500)\nfig.show()","45be097d":"fig = px.scatter(dtreg2, x ='date', y='mortes', color='regiao', title = 'Mortes por regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","238a2f2f":"dtreg2[\"casos_var\"] = dtreg2['casos'] - dtreg2.groupby('regiao')['casos'].shift(1)\ndtreg2[\"mortes_var\"] = dtreg2['mortes'] - dtreg2.groupby('regiao')['mortes'].shift(1)\n\ndtreg2[\"casos7dias\"] = dtreg2.groupby('regiao')['casos_var'].shift(7)\ndtreg2[\"mortes7dias\"] =  dtreg2.groupby('regiao')['mortes_var'].shift(7)\n\ndtreg2[\"casos14dias\"] = dtreg2.groupby('regiao')['casos_var'].shift(14)\ndtreg2[\"casos21dias\"] = dtreg2.groupby('regiao')['casos_var'].shift(21)\ndtreg2[\"casos30dias\"] = dtreg2.groupby('regiao')['casos_var'].shift(30)\ndtreg2[\"mortes14dias\"] = dtreg2.groupby('regiao')['mortes_var'].shift(14)\n\ndtreg2.tail(151)","8234ca48":"fig = px.line(dtreg2, x ='date', y='casos_var', color='regiao', title = 'Casos por regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","58f92ed7":"fig = px.line(dtreg2, x ='date', y='mortes_var', color='regiao', title = 'Mortes por regi\u00e3o')\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)')\nfig.show()","e5e72af2":"fig = make_subplots(rows=2, cols=2, subplot_titles=(\"Mortes x Casos 7 dias atras\", \"Mortes x Casos 14 dias atras\", \"Mortes x Casos 21 dias atras\", \"Mortes x Casos 30 dias atras\"))\n\n\nfig.add_trace(go.Scatter(x =dtreg2['casos7dias'], y=dtreg2['mortes'], mode = \"markers\"), row = 1, col = 1)\nfig.add_trace(go.Scatter(x =dtreg2['casos14dias'], y=dtreg2['mortes'], mode = \"markers\"), row = 2, col = 1)\nfig.add_trace(go.Scatter(x =dtreg2['casos21dias'], y=dtreg2['mortes'], mode = \"markers\"), row = 1, col = 2)\nfig.add_trace(go.Scatter(x =dtreg2['casos30dias'], y=dtreg2['mortes'], mode = \"markers\"), row = 2, col = 2)\nfig.update_layout( plot_bgcolor='rgba(0,0,0,0)', height=700)\nfig.show()","390623cd":"dtRG_CO = dt[dt[\"regiao\"]==\"Centro-Oeste\"]\ndtRG_CO['txletalidade'] = dtRG_CO[\"mortes\"]\/dtRG_CO[\"casos\"]\n\ndtRG_CO.head()","4a5fdb9a":"fig = px.line(dtRG_CO, x ='date', y='txletalidade', color='estado', title = 'Taxa de letalidade Centro Oeste')\nfig.update_layout(xaxis_title=\"Data\",\n    yaxis_title=\"Taxa de Letalidade\", \n    plot_bgcolor='rgba(0,0,0,0)', yaxis_tickformat = '.2%')\nfig.show()","b1b68d83":"dtRG_CO = dt[dt[\"regiao\"]==\"Sudeste\"]\ndtRG_CO['txletalidade'] = dtRG_CO[\"mortes\"]\/dtRG_CO[\"casos\"]\n","0e8210bd":"fig = px.line(dtRG_CO, x ='date', y='txletalidade', color='estado', title = 'Taxa de letalidade por Regi\u00e3o Sudeste')\nfig.update_layout(xaxis_title=\"Data\",\n    yaxis_title=\"Taxa de Letalidade\", \n    plot_bgcolor='rgba(0,0,0,0)', yaxis_tickformat = '.2%')\nfig.show()","e94c3599":"fig = px.line(dtreg2, x ='date', y='txletalidade', color='regiao', title = 'Taxa de letalidade por Regi\u00e3o')\nfig.update_layout(xaxis_title=\"Data\",\n    yaxis_title=\"Taxa de Letalidade\", \n    plot_bgcolor='rgba(0,0,0,0)', yaxis_tickformat = '.2%')\nfig.show()","c6382910":"dtsum.head()","38adb275":"\ndt2 = dtsum.loc[dtsum['casos']!=0, ['casos']]\n#dt2.drop(['date'],axis=1,inplace = True)\ndt2.reset_index(drop=True, inplace=True)\ndt2['dias'] = dt2.index\ndt2['dias'] = dt2['dias'].apply(lambda x: x+1)\ndt2.head()","6d9d4994":"txCasos = [1]\ntxCasos[-1]","9d3bdfac":"def casos_Taxa(taxa, dias):\n    txCasos = [1]\n    for i in range(len(listDias)-1):\n        \n        txCasos.append(taxa*txCasos[-1])\n        \n    return txCasos\n\nlistDias = list(range(0, max(dt2['dias']),2))\ndt_diasSup = pd.DataFrame({'dias_real':listDias, 'dias2x':casos_Taxa(2, listDias), 'dias3x':casos_Taxa(3, listDias), 'dias5x':casos_Taxa(5, listDias)})\ndt_diasSup.head()","3d13f957":"\nfig = go.Figure(data=[\n    go.Scatter(x=dt2.index, y=dt2['casos'], name='Casos Reais',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias2x'], name = '2x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias3x'], name = '3x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias5x'], name = '5x',mode=\"lines+markers\")\n])\n\nfig.update_layout( paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title= \"Crescimento de casos a cada 2 dias\",\n    xaxis_title=\"Dias\",\n    yaxis_title=\"Quantidade (log)\",\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 1,\n        dtick = 5\n    ),\n    yaxis_type=\"log\")\n\nfig.show()","2860d5db":"listDias = list(range(0, max(dt2['dias']),3))\ndt_diasSup = pd.DataFrame({'dias_real':listDias, 'dias1.5x':casos_Taxa(1.5, listDias), 'dias2x':casos_Taxa(2, listDias), 'dias3x':casos_Taxa(3, listDias), 'dias5x':casos_Taxa(5, listDias)})\n\n\nfig = go.Figure(data=[\n    go.Scatter(x=dt2.index, y=dt2['casos'], name='Casos Reais',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias1.5x'], name = '1.5x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias2x'], name = '2x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias3x'], name = '3x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias5x'], name = '5x',mode=\"lines+markers\")\n    \n])\n\nfig.update_layout( paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title= \"Crescimento de casos a cada 3 dias\",\n    xaxis_title=\"Dias\",\n    yaxis_title=\"Quantidade (log)\",\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 1,\n        dtick = 5\n    ),\n    yaxis_type=\"log\")\n\nfig.show()\n","4542fc3a":"listDias = list(range(0, max(dt2['dias']),5))\ndt_diasSup = pd.DataFrame({'dias_real':listDias, 'dias1.5x':casos_Taxa(1.5, listDias), 'dias2x':casos_Taxa(2, listDias), 'dias3x':casos_Taxa(3, listDias), 'dias5x':casos_Taxa(5, listDias)})\n\n\nfig = go.Figure(data=[\n    go.Scatter(x=dt2.index, y=dt2['casos'], name='Casos Reais',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias1.5x'], name = '1.5x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias2x'], name = '2x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias3x'], name = '3x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias5x'], name = '5x',mode=\"lines+markers\")\n    \n])\n\nfig.update_layout( paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title= \"Crescimento de casos a cada 5 dias\",\n    xaxis_title=\"Dias\",\n    yaxis_title=\"Quantidade (log)\",\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 1,\n        dtick = 5\n    ),\n    yaxis_type=\"log\")\n\nfig.show()\n","7f5e337d":"listDias = list(range(0, max(dt2['dias']),7))\ndt_diasSup = pd.DataFrame({'dias_real':listDias, 'dias1.5x':casos_Taxa(1.5, listDias), 'dias2x':casos_Taxa(2, listDias), 'dias3x':casos_Taxa(3, listDias), 'dias5x':casos_Taxa(5, listDias)})\n\n\nfig = go.Figure(data=[\n    go.Scatter(x=dt2.index, y=dt2['casos'], name='Casos Reais',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias1.5x'], name = '1.5x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias2x'], name = '2x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias3x'], name = '3x',mode=\"lines+markers\"),\n    go.Scatter(x=dt_diasSup ['dias_real'], y=dt_diasSup ['dias5x'], name = '5x',mode=\"lines+markers\")\n    \n])\n\nfig.update_layout( paper_bgcolor='rgba(0,0,0,0)',\n    plot_bgcolor='rgba(0,0,0,0)',\n    title= \"Crescimento de casos a cada 7 dias\",\n    xaxis_title=\"Dias\",\n    yaxis_title=\"Quantidade (log)\",\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 1,\n        dtick = 5\n    ),\n    yaxis_type=\"log\")\n\nfig.show()\n","54b8ee8e":"### Situa\u00e7\u00e3o da quantidade de casos e \u00f3bitos a cada 100mil habitantes at\u00e9 30-11-2020\n","590fbc53":"### Taxa de letalidade por UF em 2020-11-19","49a94e9e":"### CoronaV\u00edrus no Brasil\n\nOs dados deste notebook s\u00e3o dados do governo federal.\n\nhttps:\/\/covid.saude.gov.br\/\n","7070bcea":"**Data Frame Popula\u00e7\u00e3o**"}}