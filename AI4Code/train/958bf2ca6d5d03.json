{"cell_type":{"4aaea808":"code","ee56c474":"code","df1ff9bd":"code","2dc5a4c5":"code","23774a0e":"code","01514e7f":"markdown","44f49208":"markdown","d97ddcc8":"markdown","a42a3a66":"markdown","843681ca":"markdown"},"source":{"4aaea808":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ee56c474":"# loading in the plays\nplay_data = pd.read_csv(\"\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv\")\n\n# getting just kickoffs\nkickoffs = play_data.loc[play_data['specialTeamsPlayType'] == 'Kickoff']\n\n# getting just punts\npunts = play_data.loc[play_data['specialTeamsPlayType'] == 'Punt']\n\nfgs = play_data.loc[play_data['specialTeamsPlayType'] == 'Field Goal']\n\npunts","df1ff9bd":"full_kicks = kickoffs.loc[kickoffs['kickLength'] >= 50]\n\nteams = kickoffs.possessionTeam.unique()\nteams\n\nteamData = pd.DataFrame()\nfor team in teams:\n    team_kicks = full_kicks.loc[full_kicks['possessionTeam'] == team]\n    total_kicks = team_kicks.shape[0]\n    touchbackPercentage = team_kicks.loc[team_kicks['specialTeamsResult'] == 'Touchback'].shape[0] * 100 \/ total_kicks\n    goodCoveragePercentage = team_kicks.loc[team_kicks['playResult'] > 40].shape[0] * 100 \/ total_kicks\n    badCoveragePercentage = team_kicks.loc[team_kicks['playResult'] < 40].shape[0] * 100 \/ total_kicks\n    teamVals = {'Team': team, 'Touchback %': touchbackPercentage, 'Good Coverage %': goodCoveragePercentage, 'Bad Coverage %': badCoveragePercentage}\n    teamData = teamData.append(teamVals, ignore_index = True)\n\n# sort by teams with the lowest percentage of bad coverage\nteamData = teamData.sort_values(by=['Bad Coverage %'])\nteamData\n","2dc5a4c5":"pinning_punts = punts.loc[punts['possessionTeam'] != punts['yardlineSide']]\n\nteams = kickoffs.possessionTeam.unique()\nteams\n\nteamPuntData = pd.DataFrame()\nfor team in teams:\n    team_punts = pinning_punts.loc[pinning_punts['possessionTeam'] == team]\n    total_punts = team_punts.shape[0]\n    pinnedPercentage = team_punts.loc[team_punts['yardlineNumber'] - team_punts['playResult'] < 20].shape[0] * 100 \/ total_punts\n    touchbackPercentage = team_punts.loc[team_punts['specialTeamsResult'] == 'Touchback'].shape[0] * 100 \/ total_punts\n    disasterPercentage = team_punts.loc[team_punts['yardlineNumber'] - team_punts['playResult'] > 20].shape[0] * 100 \/ total_punts\n    teamVals = {'Team': team,'Pinned %': pinnedPercentage, 'Touchback %': touchbackPercentage,'Disaster %': disasterPercentage}\n    teamPuntData = teamPuntData.append(teamVals, ignore_index = True)\n\n# sort by teams with the highest percentage of pinning teams back\nteamPuntData = teamPuntData.sort_values(by=['Pinned %'], ascending=False)\nteamPuntData","23774a0e":"teams = kickoffs.possessionTeam.unique()\nteams\n\nteamFGData = pd.DataFrame()\nfor team in teams:\n    team_fgs = fgs.loc[fgs['possessionTeam'] == team]\n    total_fgs = team_fgs.shape[0]\n    made_fgs = team_fgs.loc[team_fgs['specialTeamsResult'] == 'Kick Attempt Good']\n    fgPct = made_fgs.shape[0] * 100 \/ total_fgs\n    fiftyPlusMakes = made_fgs.loc[team_fgs['kickLength'] >= 50].shape[0]\n    teamVals = {'Team': team,'Field Goal %': fgPct, '50+ Yard Makes': fiftyPlusMakes}\n    teamFGData = teamFGData.append(teamVals, ignore_index = True)\n\n# sort by teams with the highest percentage of made field goals\nteamFGData = teamFGData.sort_values(by=['Field Goal %'], ascending=False)\nteamFGData","01514e7f":"Looking at the data, some initial trends are apparent. Keeping in mind that this data stretches back to the 2019 season, one observation from simply looking at the Top 10 teams in terms of lowest \"Bad Coverage\" percentage, is that the vast majority are viewed as either perennial contenders or teams that may have overachieved in recent years. For example, we have our two previous Super Bowl winners, Kansas City and Tampa Bay, represented in the Top 10, alongside teams like Washington, New Orleans, and Miami that have recently made playoff appearances without significant starpower.\n\nUnfortunately for Coach Belichick, our champion of good kick coverage, his team has struggled recently with covering kicks, coinciding with his worst season in over a decade. There are, however, several teams with seemingly poor kickoff units, including Tennessee, Green Bay, and San Francisco. These teams also ","44f49208":"# NFL Special Teams Analysis: EDA\n\nDespite not being as glamorous as Offense and Defense, Special Teams is still a crucial component of any NFL game. 6-Time Super Bowl-winning Head Coach Bill Belichick often mentions 'covering kicks' as a key ability of a winning team, and plenty of great teams have had their seasons cut short due to spotty kick coverage. Back in 2010, the San Diego Chargers had the #1 Offense AND the #1 Defense, yet failed to even make the postseason due to poor Special Teams play. With this in mind, I want to explore which teams are currently the best and worst at covering kickoffs and punts, and see what I can glean from that information!","d97ddcc8":"Out of all punts that occured on the opponent's side of the field, we can classify them as:\n1: Pinned (Punt inside the 20)\n2: Touchback\n3: Disaster (Worse than touchback)","a42a3a66":"Since Football is highly situational, we should also separate this plays further, since an Onside Kick and a Regular Kickoff for example, have very different intended outcomes. For most kickoffs, both teams are usually content to accept a \"touchback\" where the ball is kicked into the endzone and the return team chooses not to return it. A touchback places the ball at the 25-yard line, which we can use as the cutoff for \"good\" and \"bad\" coverage.\n\nOne way we can separate kickoffs is based on Kick Length. Kickers are not perfect, but they are professionals. If a kick travels less than 50 yards in the NFL, it's fairly safe to assume that it was not intended to be a 'full' kickoff, otherwise the return team could have only a very short distance to cover.\n\nOnce we have the data separated in this way, we can start sorting each dataframe by team. This will allow us to analyze each team's performance separately, before comparing side-by-side to see which Special Teams units perform the best (or worst).","843681ca":"Finally, we have each team ranked by field goal conversion percentage, along with average field goal attempt length."}}