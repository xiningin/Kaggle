{"cell_type":{"80f16a62":"code","1aacd066":"code","a802dda6":"code","2e5fd082":"code","f643f379":"code","3c18afdb":"markdown","3a57f347":"markdown","71c8404f":"markdown"},"source":{"80f16a62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","1aacd066":"train = pd.read_csv('..\/input\/digit-recognizer\/train.csv')","a802dda6":"test = pd.read_csv('..\/input\/digit-recognizer\/test.csv')","2e5fd082":"from sklearn import svm\n\ntrain_x = train.drop('label',axis = 1)\ntrain_y = train['label']\n\nres = svm.SVC(C = 4)\nres.fit(train_x,train_y)","f643f379":"prediction = res.predict(test)\n\noutput = pd.DataFrame({'ImageId':range(1,len(test)+1),'Label':prediction})\noutput.to_csv('submission.csv',index=False, header = 1)","3c18afdb":"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435","3a57f347":"\u041f\u0430\u0440\u0441\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435","71c8404f":"\u0421\u0442\u0440\u043e\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e \u043c\u0435\u0442\u043e\u0434\u0443 \u043e\u043f\u043e\u0440\u043d\u044b\u0445 \u0432\u0435\u043a\u0442\u043e\u0440\u043e\u0432 SVM, \u0441 \u043f\u043e\u0434\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c C=4"}}