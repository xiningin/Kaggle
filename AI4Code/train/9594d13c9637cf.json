{"cell_type":{"3ebd0e38":"code","ab5a1421":"code","59276e40":"code","9faeaee4":"code","33c7513a":"code","148b9ee0":"code","fe02b3c1":"code","de1c96f4":"code","a67d68fc":"code","49246630":"code","dcf30a3a":"code","e4346f75":"code","af6627f1":"code","a0f277b9":"code","ebbf6dd1":"code","97ff0d84":"code","be3273f6":"code","0bc369a8":"code","17e81288":"code","b1a0abb2":"code","09554276":"code","cffcb7c6":"code","735faf64":"code","945fc41e":"code","5a085dee":"code","06df7654":"code","a8e6cf3a":"code","c7b439f0":"code","cb43c3da":"code","37937e32":"code","5b5b1980":"code","108a230f":"code","c16fc542":"code","dfc4e15f":"code","e65c5520":"code","56d16f4f":"code","b503a8d3":"code","a8a024a4":"code","f5ee025a":"markdown","060967d1":"markdown","4b1fb4ac":"markdown","9df46a49":"markdown","cfbdbabf":"markdown","20c9f8eb":"markdown","12d10731":"markdown","d22b4360":"markdown","12874a2a":"markdown","f7f10e28":"markdown","d0cef313":"markdown","a3efdaa0":"markdown","e670b487":"markdown"},"source":{"3ebd0e38":"#Import necessary libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\nsns.set_palette(\"tab10\")\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode,iplot\nplt.style.use('seaborn-notebook')\nparams = {'legend.fontsize': 15,\n          'legend.title_fontsize': 16,\n          'figure.figsize': (15, 5),\n         'axes.labelsize': 18,\n         'axes.titlesize':20,\n         'xtick.labelsize':18,\n         'ytick.labelsize':18}\nplt.rcParams.update(params)","ab5a1421":"# Loading the data into pandas dataframe for EDA\ndf_stores = pd.read_csv('..\/input\/retaildataset\/stores data-set.csv')\ndf_features = pd.read_csv('..\/input\/retaildataset\/Features data set.csv')\ndf_features.Date = pd.to_datetime(df_features.Date)\ndf_sales = pd.read_csv('..\/input\/retaildataset\/sales data-set.csv')\ndf_sales.Date = pd.to_datetime(df_sales.Date)","59276e40":"df_sales.head()\ndf_sales.info()\ndf_sales.describe().T","9faeaee4":"df_stores.head()\ndf_stores.info()\ndf_stores.describe().T","33c7513a":"df_features = df_features.merge(df_stores, on = 'Store')\ndf = df_features.merge(df_sales, on = ['Store','Date','IsHoliday'])\ndf=df.fillna(0)","148b9ee0":"df.head()\ndf.info()\ndf.describe().T\ndf = df.sort_values(by = ['Date'])","fe02b3c1":"# splitting date into 3 columns denoting Year, Month and Day respectively\ndf['Year'] = df.Date.apply(lambda x: int(str(x)[:4]))\ndf['Month'] = df.Date.apply(lambda x: int(str(x)[5:7]))\ndf['Year-Month'] = df.Date.apply(lambda x: str(x)[:7])\ndf['Day'] = df.Date.apply(lambda x: int(str(x)[8:10]))","de1c96f4":"#df.groupby(['Year','Month']).Fuel_Price.mean()\nplot_no = 1\n_ = plt.subplots(figsize = (20,10))\n_ = plt.xticks(rotation = 60)\n_ = sns.lineplot(data = df, x = 'Year-Month',y = 'Fuel_Price')\n_ = plt.title('LinePlot showing the change in fuel price over the span of 3 years', fontsize=20)\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","a67d68fc":"r = 5 #lets round off the temperature in the range of r\ndf['Temperature_r'] = df.sort_values(by=['Temperature']).Temperature.apply(lambda x : x - x %r)","49246630":"_ = plt.subplots(figsize = (20,10))\n_ = plt.ylim(3.1,3.45)\nplots = sns.barplot(data = df, x = 'IsHoliday', y = 'Fuel_Price', hue = 'Type')\n_ = plt.title('BarPlot showing the change in fuel price with respect the type of the store with holidays grouped')\nfor bar in plots.patches:\n    _ = plots.annotate(format(bar.get_height(), '.2f'), \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height() - (bar.get_height()-3.1)\/2), ha='center', va='center',\n                   size=15, xytext=(0, 0),bbox=dict(boxstyle=\"round4,pad=0.6\", fc=\"w\", ec=\"black\", lw=2),\n                   textcoords='offset points')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","dcf30a3a":"_ = plt.subplots(figsize = (20,10))\n_ = sns.lineplot(data = df, x = 'Type', y = 'Fuel_Price', hue = 'IsHoliday',style = 'IsHoliday', markers = True, ci = 68)\n_ = plt.title('LinePlot showing the change in fuel price with respect the type of the store')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","e4346f75":"_ = plt.subplots(figsize = (20,10))\n_ = sns.lineplot(data = df, x = 'Temperature_r', y = 'Fuel_Price', hue = 'IsHoliday',style = 'IsHoliday', markers = True, ci = 68)\n_ = plt.xlabel('Temperature range')\n_ = plt.title('Lineplot showing the change in fuel price with respect to the change in temperature')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","af6627f1":"_ = plt.subplots(figsize = (20,10))\n_ = sns.lineplot(data = df, x = 'Temperature_r', y = 'CPI', hue = 'Type',style = 'Type', markers = True, ci = 68)\n_ = plt.title('Lineplot showing the change in CPI with respect to the change in temperature')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","a0f277b9":"_ = plt.subplots(figsize = (20,10))\n_ = sns.lineplot(data = df, x = 'Date', y = 'Fuel_Price')\n_ = plt.title('Lineplot showing the change in fuel price in each month over the span of 3 years')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","ebbf6dd1":"_ = plt.subplots(figsize = (20,10))\n_ = sns.countplot(data = df,x='Year',hue='Month')\n_ = plt.title('Barplot showing the observation counts for each recorded month')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","97ff0d84":"_ = plt.subplots(figsize = (20,10))\nplots = sns.barplot(data = df, x = 'Type', y = 'Fuel_Price')\nfor bar in plots.patches:\n    _ = plots.annotate(format(bar.get_height(), '.2f'), \n                   (bar.get_x() + bar.get_width() \/ 2, \n                    bar.get_height()), ha='center', va='center',\n                   size=15, xytext=(0, 23),\n                   textcoords='offset points');\n_ = plt.ylim(2.5,3.5)\n_ = plt.title('Barplot showing the change in Fuel price with respect to the type of the store')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","be3273f6":"df_rolled_mean = df.set_index('Date').rolling(window = 2948).mean().reset_index()\ndf_rolled_std = df.set_index('Date').rolling(window = 2948).std().reset_index()","0bc369a8":"\nfig,ax = plt.subplots(figsize = (20,10))\n_ = sns.lineplot(data = df, x = 'Year-Month', y = 'Weekly_Sales', ax = ax, ci = 1)\n_ = plt.xticks(rotation = 60)\n_ = plt.title('Lineplot showing the change in Weekly_Sales in each month over the span of 3 years')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","17e81288":"_ = df[['Date', 'Temperature', 'Fuel_Price', 'CPI', 'Unemployment', 'MarkDown1', 'MarkDown2', 'MarkDown3', 'MarkDown4', 'MarkDown5']].plot(x = 'Date', subplots = True, figsize = (20,15))\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","b1a0abb2":"df_average_sales_week = df.groupby(by=['Date'], as_index=False)['Weekly_Sales'].sum()\ndf_average_sales = df_average_sales_week.sort_values('Weekly_Sales', ascending=False)\n\n_ = plt.figure(figsize=(20,8))\n_ = plt.plot(df_average_sales_week.Date, df_average_sales_week.Weekly_Sales)\n_ = plt.title('Data spread of total weekly sales volume of the retail chain')\n_ = plt.xlabel('Date')\n_ = plt.ylabel('Weekly Sales')\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","09554276":"ts = df_average_sales_week.set_index('Date')\n# Top performing type of stores in term of sales\ndf_top_stores = df.groupby(by=['Type'], as_index=False)['Weekly_Sales'].sum()\ndf_top_stores.sort_values('Weekly_Sales', ascending=False)","cffcb7c6":"# Top performing stores in term of sales\ndf_top_stores = df.groupby(by=['Store'], as_index=False)['Weekly_Sales'].sum()\ndf_top_stores.sort_values('Weekly_Sales', ascending=False)[:3]","735faf64":"from statsmodels.graphics.tsaplots import acf, pacf, plot_acf, plot_pacf\n\nfig, axes = plt.subplots(1,2, figsize=(20,5))\n_ = plot_acf(ts, lags=64, ax=axes[0])\n_ = plot_pacf(ts, lags=64, ax=axes[1])\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","945fc41e":"from sklearn.linear_model import LinearRegression\n\ndef fit_ar_model(ts, orders):\n    X=np.array([ ts.values[(i-orders)].squeeze() if i >= np.max(orders) else np.array(len(orders) * [np.nan]) for i in range(len(ts))])\n    mask = ~np.isnan(X[:,:1]).squeeze()\n    Y= ts.values\n    lin_reg=LinearRegression()\n    lin_reg.fit(X[mask],Y[mask])\n    print(lin_reg.coef_, lin_reg.intercept_)\n    print('Score factor: %.2f' % lin_reg.score(X[mask],Y[mask]))\n    return lin_reg.coef_, lin_reg.intercept_\n    \ndef predict_ar_model(ts, orders, coef, intercept):\n    return np.array([np.sum(np.dot(coef, ts.values[(i-orders)].squeeze())) + intercept  if i >= np.max(orders) else np.nan for i in range(len(ts))])","5a085dee":"orders=np.array([1,6,52])\ncoef, intercept = fit_ar_model(ts,orders)\npred=pd.DataFrame(index=ts.index, data=predict_ar_model(ts, orders, coef, intercept))\n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(ts, 'o')\n_ = plt.plot(pred)\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","06df7654":"diff=(ts['Weekly_Sales']-pred[0])\/ts['Weekly_Sales']\n\nprint('AR Residuals: avg %.2f, std %.2f' % (diff.mean(), diff.std()))\n \n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(diff, c='orange')\n_ = plt.grid()\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","a8e6cf3a":"df20=df.where( df['Store'] == 20)\ndf20=df20.dropna()\ndf20=df20.groupby(by=['Date'], as_index=False)['Weekly_Sales'].sum()\ndf20 = df20.set_index('Date')\ndf20.head()","c7b439f0":"_ = plt.figure(figsize=(20,5))\n_ = plt.plot(df20.index, df20.values)\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","cb43c3da":"fig, axes = plt.subplots(1,2, figsize=(20,5))\n_ = plot_acf(df20.values, lags=21, alpha=0.05, ax=axes[0])\n_ = plot_pacf(df20.values, lags=21, alpha=0.05, ax=axes[1])\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","37937e32":"orders=np.array([1,6,29,46,52])\ncoef, intercept = fit_ar_model(df20,orders)\npred=pd.DataFrame(index=df20.index, data=predict_ar_model(df20, orders, coef, intercept))\n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(df20, 'o')\n_ = plt.plot(pred)\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","5b5b1980":"diff=(df20['Weekly_Sales']-pred[0])\/df20['Weekly_Sales']\n\nprint('AR Residuals: avg %.2f, std %.2f' % (diff.mean(), diff.std()))\n \n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(diff, c='orange')\n_ = plt.grid()\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","108a230f":"dfext=df.where( df['Store'] == 20)\ndfext=dfext.dropna()\ndfext=dfext.groupby(by=['Date'], as_index=False)[['Temperature', 'Fuel_Price', 'CPI', 'Unemployment', \n                                                  'MarkDown1', 'MarkDown2', 'MarkDown3', 'MarkDown4', 'MarkDown5']].mean()\ndfext = dfext.set_index('Date')\ndfext.head()","c16fc542":"dfext['shifted_sales'] = df20.shift(-1)\ndfext.head()","dfc4e15f":"corr = dfext.corr()\n_ = plt.figure(figsize=(10,10))\nsns.heatmap(corr, \n            annot=True, fmt=\".3f\",\n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values);\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","e65c5520":"corr['shifted_sales'].sort_values(ascending=False)","56d16f4f":"def fit_ar_model_ext(ts, orders, ext, fitter=LinearRegression()):\n    X=np.array([ ts.values[(i-orders)].squeeze() if i >= np.max(orders) else np.array(len(orders) * [np.nan]) for i in range(len(ts))])\n    X = np.append(X, ext.values, axis=1)\n    mask = ~np.isnan(X[:,:1]).squeeze()\n    Y= ts.values\n    fitter.fit(X[mask],Y[mask].ravel())\n    print(fitter.coef_, fitter.intercept_)\n    print('Score factor: %.2f' % fitter.score(X[mask],Y[mask]))\n    return fitter.coef_, fitter.intercept_\n    \ndef predict_ar_model_ext(ts, orders, ext, coef, intercept):\n    X=np.array([ ts.values[(i-orders)].squeeze() if i >= np.max(orders) else np.array(len(orders) * [np.nan]) for i in range(len(ts))])\n    X = np.append(X, ext.values, axis=1)\n    return np.array( np.dot(X, coef.T) + intercept)","b503a8d3":"#dfexte=dfext.drop(['shifted_sales'], axis=1)\ndfexte=dfext[['Unemployment','Fuel_Price','CPI','Temperature',\n              'MarkDown1', 'MarkDown2', 'MarkDown3', 'MarkDown4', 'MarkDown5']]\n\norders=np.array([1,6,29,46,52])\ncoef, intercept = fit_ar_model_ext(df20,orders,dfexte)\npred_ext=pd.DataFrame(index=df20.index, data=predict_ar_model_ext(df20, orders, dfexte, coef, intercept))\n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(df20, 'o')\n_ = plt.plot(pred)\n_ = plt.plot(pred_ext)\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","a8a024a4":"diff=(df20['Weekly_Sales']-pred[0])\/df20['Weekly_Sales']\ndiff_ext=(df20['Weekly_Sales']-pred_ext[0])\/df20['Weekly_Sales']\n\nprint('AR Residuals: avg %.2f, std %.2f' % (diff.mean(), diff.std()))\nprint('AR wiht Ext Residuals: avg %.2f, std %.2f' % (diff_ext.mean(), diff_ext.std()))\n \n_ = plt.figure(figsize=(20,5))\n_ = plt.plot(diff, c='orange', label='w\/o external variables')\n_ = plt.plot(diff_ext, c='green', label='w\/ external variables')\n_ = plt.legend()\n_ = plt.grid()\nplt.savefig(str(plot_no)+'_plot.png')\nplot_no +=1","f5ee025a":"<div style=\"color:#00381c;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 5px;\n            border-color:#00381c;\n           background-color:#f7e1cd;\n           letter-spacing:0.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h2 style = \"line-height:1.3;\"><b>Features data-set.csv :<\/b><\/h2>\n    <h3 style = \"line-height:1.3em\">\n        Contains additional data related to the store, department, and regional activity for the given dates.\n<ul><li>Store - the store number<\/li>\n<li>Date - the week<\/li>\n<li>Temperature - average temperature in the region<\/li>\n<li>Fuel_Price - cost of fuel in the region<\/li>\n<li>MarkDown1-5 - anonymized data related to promotional markdowns. MarkDown data is only available after Nov 2011, and is not available for all stores all the time. Any missing value is marked with an NA<\/li>\n<li>CPI - the consumer price index<\/li>\n<li>Unemployment - the unemployment rate<\/li>\n<li>IsHoliday - whether the week is a special holiday week<\/li><\/ul><\/h3>\n<\/div>","060967d1":"# Top Stories","4b1fb4ac":"<div style=\"color:#001724;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 15px;\n            border-color:#001724;\n           background-color:#d0e7f5;\n           letter-spacing:1.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h3 style = \"line-height:1.3;\">There is a significant increase in the fuel price for the type B store and comparatively the fuels prices were very less during weekends. <\/h3>\n<\/div>","9df46a49":"# Exploratory Data analysis:","cfbdbabf":"<div style=\"color:#001724;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 15px;\n            border-color:#001724;\n           background-color:#d0e7f5;\n           letter-spacing:1.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h3 style = \"line-height:1.3;\">It is seen that the fuel price increases with increase in temperature steadily during workdays and unevenly during holidays<\/h3>\n<\/div>","20c9f8eb":"# Retail Data Analytics\n<div style=\"color:#00381c;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 5px;\n            border-color:#00381c;\n           background-color:#f7e1cd;\n           letter-spacing:0.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h3 style = \"line-height:1.3;\">This notebook deals the retail sales - time series data. I am using <a style = \"color:#0b70db;\" href = \"https:\/\/www.kaggle.com\/manjeetsingh\/retaildataset\"> Retail sales data<\/a> to play around with.<\/h3>\n<h2><b>Context<\/b><\/h2>\n<h3 style = \"line-height:1.3;\">The Challenge - One challenge of modeling retail data is the need to make decisions based on limited history. Holidays and select major events come once a year, and so does the chance to see how strategic decisions impacted the bottom line. In addition, markdowns are known to affect sales \u2013 the challenge is to predict which departments will be affected and to what extent.<\/h3>\n<h2><b>Content<\/b><\/h2>\n<h3 style = \"line-height:1.3;\">You are provided with historical sales data for 45 stores located in different regions - each store contains a number of departments. The company also runs several promotional markdown events throughout the year. These markdowns precede prominent holidays, the four largest of which are the Super Bowl, Labor Day, Thanksgiving, and Christmas. The weeks including these holidays are weighted five times higher in the evaluation than non-holiday weeks.<\/h3>\n<\/div>","12d10731":"<div style=\"color:#001724;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 15px;\n            border-color:#001724;\n           background-color:#d0e7f5;\n           letter-spacing:1.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h3 style = \"line-height:1.3;\">There is no significant pattern in the data points spread each months in the dataset. However one noticeable cue is that no sales data is recorded \/ happened during the month of September in 2013<\/h3>\n<\/div>","d22b4360":"# Loading the data:","12874a2a":"# Forecasting","f7f10e28":"# Merging the data into a single Dataframe:","d0cef313":"<div style=\"color:#00381c;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 5px;\n            border-color:#00381c;\n           background-color:#f7e1cd;\n           letter-spacing:0.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h2 style = \"line-height:1.3;\"><b>stores data-set.csv:<\/b><\/h2>\n    <h3 style = \"line-height:1.3;\">\nHistorical sales data, which covers to 2010-02-05 to 2012-11-01. Within this tab you will find the following fields:\n<ul>\n<li>Store - the store number<\/li>\n<li>Dept - the department number<\/li>\n<li>Date - the week<\/li>\n<li>Weekly_Sales -  sales for the given department in the given store<\/li>\n<li>IsHoliday - whether the week is a special holiday week<\/li>\n        <\/ul>\n    <\/h3>\n<\/div>","a3efdaa0":"<div style=\"color:#00381c;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 5px;\n            border-color:#00381c;\n           background-color:#f7e1cd;\n           letter-spacing:0.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h2 style = \"line-height:1.3;\"><b>sales data-set.csv:<\/b><\/h2>\n    <h3>Anonymized information about the 45 stores, indicating the type and size of store<\/h3>\n<\/div>","e670b487":"<div style=\"color:#001724;\n           display:fill;\n           border-radius:50px;\n            border-style: solid;\n            padding: 25px 25px;\n           border-width: 15px;\n            border-color:#001724;\n           background-color:#d0e7f5;\n           letter-spacing:1.1px;\n            font-family:'Futura';\n            line-height: 1.7em;\n            font-size:1.5em;\">\n    <h3 style = \"line-height:1.3;\">There was a peak during the end of the years 2010 and 2011 but not during 2012. This might be due to comparatively very less observations during the last 2 months in 2012<\/h3>\n<\/div>"}}