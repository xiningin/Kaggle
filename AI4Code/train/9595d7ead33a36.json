{"cell_type":{"86edd9de":"code","1b9848fc":"code","3f0d6f00":"code","5ed5a6b9":"code","3566d2bd":"code","bf5673a5":"code","de210a3a":"code","793b7c58":"code","b8341001":"code","37cdce9e":"code","8ec7ea7f":"code","2de0a5a4":"code","31f33af1":"code","191d21eb":"code","625c65f3":"code","885212cf":"code","464b95fa":"code","7fa97a3e":"code","01488e5e":"code","c6f23bb5":"code","70fafc60":"code","58627b4a":"code","796efd35":"code","032a3dc9":"code","7d4b108c":"code","884a62d2":"code","77521619":"code","2c93b16f":"code","3886127b":"code","7d0d1c25":"code","ea606553":"code","e390d388":"code","4e190a93":"code","aa1a22d0":"code","18c6202f":"code","77116cab":"code","73ea4e01":"code","a7abb22d":"code","5d434bb2":"code","cb1bdd59":"code","eac98ee8":"markdown","d42dc830":"markdown","99d37302":"markdown","3ab9d672":"markdown","fe01baec":"markdown","8fa603a8":"markdown","2f111c2e":"markdown","5171e8cb":"markdown","9b04fbf4":"markdown","3a1931da":"markdown","4dd630b0":"markdown","0f6229c4":"markdown","44930040":"markdown","2b7e5ad1":"markdown","aa31689a":"markdown"},"source":{"86edd9de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1b9848fc":"\nimport os\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport statistics\nimport scipy.stats as stats\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import logit\nfrom scipy.stats import chi2_contingency\nfrom scipy.stats import kurtosis \nfrom scipy.stats import skew\nfrom statistics import stdev \nimport seaborn as sns\nfrom tqdm import tqdm\nfrom PIL import Image\nimport warnings\nwarnings.filterwarnings('ignore')\nplt.style.use('fivethirtyeight')\n","3f0d6f00":"\ntrain = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/train.csv')\ntest = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/test.csv')\n","5ed5a6b9":"# Look at dimension of data set and types of each attribute\ntrain.info()","3566d2bd":"test.info()","bf5673a5":"# Summarize attribute distributions of the data frame\ntrain.describe(include='all')","de210a3a":"test.describe(include='all')","793b7c58":"# Take a peek at the first rows of the data\ntrain.head(10)","b8341001":"test.head(10)","37cdce9e":"# Check missing values both to numeric features and categorical features\ntrain.isnull().sum()\/train.shape[0]*100","8ec7ea7f":"test.isnull().sum()\/test.shape[0]*100","2de0a5a4":"# Data Imputation\n# Input missing values with median or mode depending of features class\ntrain['sex'].fillna(train['sex'].mode()[0], inplace=True)\ntrain['age_approx'].fillna(train['age_approx'].median(), inplace=True)\ntrain['anatom_site_general_challenge'].fillna(train['anatom_site_general_challenge'].mode()[0], inplace=True)\ntest['anatom_site_general_challenge'].fillna(test['anatom_site_general_challenge'].mode()[0], inplace=True)\n\n","31f33af1":"# Summarize the class distribution \ncount = pd.crosstab(index = train['target'], columns=\"count\")\npercentage = pd.crosstab(index = train['target'], columns=\"frequency\")\/pd.crosstab(index = train['target'], columns=\"frequency\").sum()\npd.concat([count, percentage], axis=1)","191d21eb":"# Plot the target variable\nax = sns.countplot(x=train['target'], data=train, order=[0,1]).set_title(\"Target Variable Distribution\")","625c65f3":"# Univariate analysis looking at Standard Deviation, Skewness and Kurtosis for train set\n\nprint('\\nStandard Deviation :', stdev(train['age_approx']), \n      '\\nSkewness :', skew(train['age_approx']), \n        '\\nKurtosis :', kurtosis(train['age_approx']))","885212cf":"# Univariate analysis looking at Standard Deviation, Skewness and Kurtosis for test set\n\nprint('\\nStandard Deviation :', stdev(test['age_approx']), \n      '\\nSkewness :', skew(test['age_approx']), \n        '\\nKurtosis :', kurtosis(test['age_approx']))","464b95fa":"# graphical function for univariate analysis\n\ndef num_plot(dataframe, feature):\n    plt.figure(figsize=(15, 5))\n\n    # histogram\n    plt.subplot(1, 3, 1)\n    sns.distplot(train[feature], bins=30, color='g')\n    plt.title('Histogram')\n    # Q-Q plot\n    plt.subplot(1, 3, 2)\n    stats.probplot(train[feature], dist=\"norm\", plot=plt)\n    plt.ylabel('Variable quantiles')\n    # boxplot\n    plt.subplot(1, 3, 3)\n    x=train[feature]\n    sns.boxplot(x,linewidth=1.5, color='g')\n    plt.title('Boxplot')\n\n    plt.show()","7fa97a3e":"# train\n# age_approx\nnum_plot(train, 'age_approx')","01488e5e":"# test\n# age_approx\nnum_plot(test, 'age_approx')","c6f23bb5":"# Feature selection with Kendall's Test\n\nalpha = 0.05\nvar = 'age_approx'\np = stats.kendalltau(train['target'],train[var])[1]\nif p <= alpha:\n    print('{0} Dependent (reject H0)'.format(var))\nelse:\n    print('{0} Independent (fail to reject H0)'.format(var))","70fafc60":"# Univariate analysis with frequency and barplots for train set\nsns.set( rc = {'figure.figsize': (5, 5)})\nfcat_tr = ['sex','anatom_site_general_challenge','diagnosis','benign_malignant']\n\nfor col in fcat_tr:\n    count = pd.crosstab(index = train[col], columns=\"count\")\n    percentage = pd.crosstab(index = train[col], columns=\"frequency\")\/pd.crosstab(index = train[col], columns=\"frequency\").sum()\n    tab = pd.concat([count, percentage], axis=1)\n    plt.figure()\n    sns.countplot(x=train[col], data=train, palette=\"Set1\")\n    plt.xticks(rotation=45)\n    print(tab)\n    plt.show()","58627b4a":"# Univariate analysis with frequency and barplots for test set\nsns.set( rc = {'figure.figsize': (5, 5)})\nfcat_te = ['sex','anatom_site_general_challenge']\n\nfor col in fcat_te:\n    count = pd.crosstab(index = test[col], columns=\"count\")\n    percentage = pd.crosstab(index = test[col], columns=\"frequency\")\/pd.crosstab(index = test[col], columns=\"frequency\").sum()\n    tab = pd.concat([count, percentage], axis=1)\n    plt.figure()\n    sns.countplot(x=test[col], data=test, palette=\"Set1\")\n    plt.xticks(rotation=45)\n    print(tab)\n    plt.show()","796efd35":"# Bivariate analysis with barplots for train set\nsns.set( rc = {'figure.figsize': (5, 5)})\n\nfor col in fcat_tr:\n    plt.figure()\n    sns.countplot(x=train[col], hue=train['target'], data=train, palette=\"Set2\")\n    plt.xticks(rotation=45)\n    plt.show()","032a3dc9":"# Feature Selection with Chi-Square Test \nalpha = 0.05\nfor var in fcat_tr:\n    X = train[var].astype(str)\n    Y = train['target'].astype(str)\n    dfObserved = pd.crosstab(Y,X)\n    chi2, p, dof, expected = stats.chi2_contingency(dfObserved.values)\n    if p <= alpha:\n    \tprint('{0} Dependent (reject H0)'.format(var))\n    else:\n        print('{0} Independent (fail to reject H0)'.format(var))","7d4b108c":"img = []\nfor i, image_id in enumerate(tqdm(train['image_name'].head(20))):\n    im = Image.open(f'..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/{image_id}.jpg')\n    im = im.resize((128, )*2)\n    img.append(im)","884a62d2":"img[0]","77521619":"img[5]","2c93b16f":"img[10]","3886127b":"img[15]","7d0d1c25":"benign = train[train['benign_malignant']=='benign']\nmalign = train[train['benign_malignant']=='malignant']","ea606553":"img_b = []\nfor i, image_id in enumerate(tqdm(benign['image_name'].tail(20))):\n    im = Image.open(f'..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/{image_id}.jpg')\n    im = im.resize((128, )*2)\n    img_b.append(im)","e390d388":"img_b[1]","4e190a93":"img_b[6]","aa1a22d0":"img_b[11]","18c6202f":"img_b[16]","77116cab":"img_m = []\nfor i, image_id in enumerate(tqdm(malign['image_name'].head(20))):\n    im = Image.open(f'..\/input\/siim-isic-melanoma-classification\/jpeg\/train\/{image_id}.jpg')\n    im = im.resize((128, )*2)\n    img_m.append(im)","73ea4e01":"img_m[2]","a7abb22d":"img[7]","5d434bb2":"img[12]","cb1bdd59":"img[17]","eac98ee8":"# Summarize Data","d42dc830":"# Target Variable Analysis","99d37302":"### Visualizing Images with Benign lesions","3ab9d672":"### Upload Libraries","fe01baec":"### Numerical Features Analysis","8fa603a8":"\n# Prepare workspace\n","2f111c2e":"The number of unique patients is less than the total number of patients, so each patient have multiple images.","5171e8cb":"# Exploratory Data Analysis","9b04fbf4":"<div align='center'><font size=\"6\" color=\"#43C6DB\">SIIM-ISIC Melanoma Classification <\/font><\/div>\n<hr>\n\n![](https:\/\/higherlogicdownload.s3.amazonaws.com\/SITCANCER\/2c19e5a6-3adb-4d01-b46c-c01e11745b3a\/UploadedImages\/Education\/Patient_CONNECT\/Melanoma_Patient_Resource_Guide\/Stages_of_Melnoma.jpg)\nsource:https:\/\/higherlogicdownload.s3.amazonaws.com\/SITCANCER\/2c19e5a6-3adb-4d01-b46c-c01e11745b3a\/UploadedImages\/Education\/Patient_CONNECT\/Melanoma_Patient_Resource_Guide\/Stages_of_Melnoma.jpg\n\n\n## Objective\n\nIn this competition, the goal is to identify melanoma in images of skin lesions. There are images within the same patient and and the task is to determine which are likely to represent a melanoma. Value 0 denotes benign, and 1 indicates malignant. Using patient-level contextual information may help the development of image analysis tools, which could better support clinical dermatologists.\n\nMelanoma is a deadly disease, but if caught early, most melanomas can be cured with minor surgery. Image analysis tools that automate the diagnosis of melanoma will improve dermatologists' diagnostic accuracy. Better detection of melanoma has the opportunity to positively impact millions of people.\n\n\n## Evaluation Metric\n\n![](https:\/\/i.pinimg.com\/736x\/dd\/aa\/f1\/ddaaf1a24e601be6085e8b2ef6c7d819.jpg)\nsource: https:\/\/i.pinimg.com\/736x\/dd\/aa\/f1\/ddaaf1a24e601be6085e8b2ef6c7d819.jpg\n\n\n\nReferences: \n\nhttps:\/\/www.kaggle.com\/parulpandey\/melanoma-classification-eda-starter\n\nhttps:\/\/www.kaggle.com\/tunguz\/melanoma-classification-eda-and-modeling\n","3a1931da":"### Categorical Features Analysis","4dd630b0":"The target variable is grouped into two classes: 0 = benign and 1 = malignant. Looking at the barplot, it's higly imbalanced.","0f6229c4":"### Handling Missing Values","44930040":"### Visualizing Images with Malignant lesions","2b7e5ad1":"### Visualising a keep of images","aa31689a":"### Upload data sets"}}