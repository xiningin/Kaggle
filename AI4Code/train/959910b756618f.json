{"cell_type":{"109e6893":"code","907fda86":"code","556353d5":"code","935be242":"code","5aefe495":"code","3fe4d4e6":"code","4327a839":"code","ae116484":"code","90d2f40d":"code","bb26d85e":"code","c2f87671":"code","ae697615":"code","ad06ef57":"code","153897cc":"code","713b9ee2":"code","e5b07f58":"code","0fd0fc04":"code","bd51d329":"code","61cebe37":"code","d43f2773":"code","03ed660e":"code","73a229c6":"code","621364f5":"code","e95d761f":"code","5c04a3bd":"markdown","d477f961":"markdown","066ce6df":"markdown","d5762ccf":"markdown","c9f9d90d":"markdown","1c0b531c":"markdown","941c2098":"markdown"},"source":{"109e6893":"from nltk.corpus import stopwords\n\nstop_words = set(stopwords.words('english'))","907fda86":"# If you use a package that is not imported yet, pyforest imports the package for you\n# check this documantation for more details https:\/\/github.com\/8080labs\/pyforest\nfrom pyforest import * \nimport sqlite3","556353d5":"data_path = \"..\/input\/amazon-fine-food-reviews\/database.sqlite\"\ncon = sqlite3.connect(data_path)","935be242":"# coverting sql database into pandas DataFrame\n\ndata=pd.read_sql_query('''select * from reviews''',con)\ndata.head()","5aefe495":"# lets check information about dataset\ndata.info()","3fe4d4e6":"integer_cols=data.select_dtypes(include=['int64']).columns\n\ncategorical_cols=data.select_dtypes(include=['object']).columns\n\nprint(f'Number of categorical columns : {categorical_cols.shape[0]} \\nNumber of integer columns : {integer_cols.shape[0]}')","4327a839":"# checking for missing-values\n\ndata.isna().sum()","ae116484":"# Lets find Number of unique products in a dataset using pandas value_count() function\n\ndata.ProductId.value_counts().shape","90d2f40d":"sns.countplot(x='Score',data=data)","bb26d85e":"print(f'{round((data[data.Score==5].shape[0]\/ data.shape[0])*100)} % of people gave 5 stars')","c2f87671":"display = pd.read_sql_query('''\nselect ProductId, UserId, ProfileName, HelpfulnessNumerator, HelpfulnessDenominator, Score, Time, Summary, Text,  COUNT(*) \nfrom Reviews\nGROUP BY UserId \nhaving count(*)>=2\n''', con)\n\ndisplay.head()","ae697615":"data[data.UserId == '#oc-R115TNMSPFT9I7']","ad06ef57":"display.shape","153897cc":"#Sorting data according to ProductId in ascending order\nsorted_data=data.sort_values('ProductId', axis=0, ascending=True, inplace=False, kind='quicksort', na_position='last')\n\n# now drop duplicates\nfiltered_data=sorted_data.drop_duplicates(subset={\"UserId\",\"ProfileName\",\"Time\",\"Text\"}, keep='first', inplace=False)\nfiltered_data.shape","713b9ee2":"print(f'Number of Obsevrations, \\n  Before removing duplicates : {data.shape[0]} \\n  After removing duplicates :  {filtered_data.shape[0]}')","e5b07f58":"print(f'Initially in our original dataset {round((display.shape[0] \/ data.shape[0])* 100)}% of data were repeated')","0fd0fc04":"filtered_data[filtered_data.HelpfulnessDenominator < filtered_data.HelpfulnessNumerator]","bd51d329":"# Lets remove those rows by taking Index label\n\nfiltered_data=filtered_data.drop([64421,44736])","61cebe37":"# select reviews with score above and below 3 but not equal to 3 \n\nfiltered_data=filtered_data[filtered_data.Score != 3]\nfiltered_data.shape","d43f2773":"# if score greater than or equal to 4 then sentiment will be set to positive or else negative\n\ndef partition(x):\n    \n    if x < 3 :\n        category = 'negative'\n    \n    else :\n        category = 'positive'\n    return category\n\n# returns category\n\ncategory=np.array([partition(x) for x in filtered_data.Score.values])\n\nfiltered_data['sentiment']=category","03ed660e":"# we already extracted sentiment from score column so lets drop it\n\nfiltered_data=filtered_data.drop('Score', axis=1)","73a229c6":"filtered_data.head(2)","621364f5":"sns.countplot(x='sentiment', data=filtered_data)","e95d761f":"emoving numbers, punctuations, emojis, etc.\nRemoving stop words\nLemmatizing or stemming words","5c04a3bd":"****There are no missing values","d477f961":"# observations :\n    most of the people who bought product from amazon give 5 stars and only few people dislike products.","066ce6df":"****Lets remove the rows where HelpfulnessNumerator greater than HelpfulnessNumerator which  is not practically possible","d5762ccf":"****There are only two rows ","c9f9d90d":"**It can be seeen above the same User has multiple Reviews with same values its not by Technical or Humar Error.  It because of same product just having different flavour or quantity. Hence in order to reduce redundancy it was decided to eliminate the rows having same Values.","1c0b531c":"****In order to analyze the sentiment of the reviews, we need to classify reviews into positive and negative based on Score. \nIf the score id above 3, then the recommendation wil be set to \"positive\". Otherwise, it will be set to \"negative\".\nwe ignoring score equal to 3 cause its neutral and moreover we are interested in analyzing positive and negative reviews to improve product quality . ","941c2098":"# Check for Duplicate Values"}}