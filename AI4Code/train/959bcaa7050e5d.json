{"cell_type":{"2484dafb":"code","de67a5eb":"code","b3650a85":"code","c6c8bd35":"code","bec2a36a":"code","7d1e70ed":"code","a66bc366":"code","87267a8d":"code","e11fc003":"code","bc889b3a":"code","1c13e4f6":"code","9fa89858":"code","b8840194":"code","c32f3da3":"code","f7bdfee8":"code","87da3dfe":"code","33093e30":"code","612e9695":"code","9180c0c3":"code","7cbacc54":"code","03d53094":"code","57a67fc2":"code","34f034e0":"code","95f0cd77":"markdown","96c513e0":"markdown","c9155dd3":"markdown","7f317c72":"markdown","8432d330":"markdown","41bab2bb":"markdown","d13c9769":"markdown","e7e9642b":"markdown","9ac8512b":"markdown","6e233cf6":"markdown","1d88322f":"markdown","1cc2708f":"markdown","9843ed85":"markdown","4548df64":"markdown","68700c87":"markdown","890dc6cd":"markdown","89cc0beb":"markdown","20ab40e4":"markdown","9c91d6a7":"markdown","cb1f5272":"markdown","714a2794":"markdown","59b2814f":"markdown"},"source":{"2484dafb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de67a5eb":"#import libraries for data visualisation \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","b3650a85":"#read train cvs file with pandas \nfile_path ='..\/input\/titanic-machine-learning-from-disaster\/train.csv'\ndata =pd.read_csv( file_path)\n#show the first 5 rows of data dataframe \ndata.head()","c6c8bd35":"# identify missing data \nmissing_data=data.isnull()\nmissing_data","bec2a36a":"# visualize missing data with heatmap of boolean values \nsns.heatmap(missing_data, cbar=False)","7d1e70ed":"sns.countplot(data[\"Survived\"], hue=\"Sex\", data=data, palette='RdBu_r')","a66bc366":"sns.countplot(data[\"Survived\"], hue=\"Pclass\", data=data, palette='RdBu_r')","87267a8d":"sns.countplot(data[\"Pclass\"], data=data, palette='RdBu_r')","e11fc003":"data.groupby(\"Pclass\")[\"Age\"].mean()","bc889b3a":"#define a function that return missing value per class \ndef fill_missing(cols) : \n    Age = cols[0] #Age column\n    Pclass = cols[1] #Pclass column\n    if pd.isnull(Age): #if the age value is missing \n        if Pclass==1: \n            return 38\n        elif Pclass==2: \n            return 29\n        else :\n            return 25\n    else : \n        return Age \n    \ndata[\"Age\"]= data[[\"Age\",\"Pclass\"]].apply(fill_missing, axis=1)","1c13e4f6":"#Checking visually that our function filled the missing value \nsns.heatmap(data.isnull(), cbar=False)","9fa89858":"data.drop(\"Cabin\", axis=1, inplace=True) \n#if you don't use inplace =True the cabin column will still exist on your data ","b8840194":"sns.heatmap(data.isnull(), cbar=False)","c32f3da3":"pd.get_dummies(data[\"Sex\"])","f7bdfee8":"#create dummiee variables for sex and Embarked\nsex=pd.get_dummies(data[\"Sex\"],drop_first=True)\nembarked= pd.get_dummies(data[\"Embarked\"],drop_first=True)\n#Add this two variable to our data : \ndata=pd.concat([data,sex,embarked], axis=1)\n#Check the first row of our data\ndata.head(1)","87da3dfe":"data.drop([\"Sex\",\"Embarked\",\"Name\",\"Ticket\"], axis=1, inplace=True)","33093e30":"#drop the passanger ID\ndata.drop(\"PassengerId\", axis=1, inplace=True)","612e9695":"#check data\ndata.head()","9180c0c3":"#select the output y and the features X\ny=data[\"Survived\"]\nfeatures = [\"Pclass\",\"Age\", \"SibSp\", \"Parch\",\"Fare\",\"male\",\"Q\",\"S\"]\nX=data[features]","7cbacc54":"#Import scikit learn libraries\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\n#split our data into a train and test data\nX_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.30, random_state=0)\n\n#Create an instance of a logistic model \nlgmodel= LogisticRegression()\n\n#train the lgmodel \nlgmodel.fit(X_train,y_train)","03d53094":"predictions = lgmodel.predict(X_test)","57a67fc2":"from sklearn.metrics import confusion_matrix\n#show the confusing matrix \nprint(confusion_matrix(y_test,predictions))","34f034e0":"from sklearn.metrics import classification_report \n#show a full classification report\nprint(classification_report(y_test,predictions))","95f0cd77":"The isnull() function return a True value when the data is missining NAN value.","96c513e0":"# 4. Create a dummy variable ","c9155dd3":"We are going to use a function that fills missing age value by 38 for class 1 and 29 for class 2 and 25 for class 3","7f317c72":"# Conclusion\nYet we finished all the steps but we want to improve our model. So in the next notebook we are going to do some changes in order to explore whether we can do better.","8432d330":"A lot of people did not survive from the third class. Is it because money matters in life-death situation or just simply because we have more passenger from the third class than the others? We want to get a distribution of passangers based on their classes.  ","41bab2bb":"The heatmap tells us that every white dash is a True value for a missing data. So we assume that we have missing a lot of data for **\"Cabin\"** columns and some data are missing too for **\"Age\"**","d13c9769":"Again we drop columns we don't need like Sex, Embarked, Name, Ticket \n","e7e9642b":"# Description\nOn this notebook we are going to use a logistic regression model for a classification problem. We want to predict whether a passenger will survive  or die from the Titanic disaster. The notebook shows all the steps used in a machine learning process. The purpose of this notebook is getting familiar with logistic regression and understand it in the simple possible way. \n","9ac8512b":"Read the input file","6e233cf6":"You can mention here that if it's not a male it's female wish makes our columns predictives. We don't want this behaviour calles multicollinearity so we fix this issue by calling he parameter drop_first as True","1d88322f":"# 2. Cleaning data","1cc2708f":"For the second missing value; we are just going to drop this column and don\u2019t use it in our model as a feature for simplicity.","9843ed85":"The plot tells us that we have more female survived than male. Next we are going to explore whether the rich people survived more than poor one ","4548df64":"1. Import scikit learn libraries\n1. Create an instance of a logistic regression model \n1. Fit the model to our data \n1. predict ","68700c87":"We are going to replace null age value by the average age per class.","890dc6cd":"# 5. Train the model ","89cc0beb":"The rate of people from the third class is the highest. That explains why more people died from this class. Well it's time to stop guessing and do some logistic machine learning to predict death among passengers. ","20ab40e4":"Import libraries for evaluting model ","9c91d6a7":"# 1. Explore data ","cb1f5272":"We use get_dummies to transform a categorical variable to a numerical value. For example for columns sex , we transform male to 1 and female to 0","714a2794":"Now we want to visualize survived passanger based on their gender. ","59b2814f":"# 6. Evaluating model "}}