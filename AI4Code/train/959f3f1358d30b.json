{"cell_type":{"e23eb2be":"code","a6f2a8ce":"code","347a8ad3":"code","be6f45c7":"code","1ef4ccd8":"code","a414fa82":"code","535e21da":"code","15533e40":"code","e9d66014":"code","0a71e3c4":"code","78a1b0e6":"code","96ac0b52":"code","500d0b74":"markdown","563a9841":"markdown","4572818e":"markdown","0b49c5b4":"markdown","16bf2669":"markdown","87498754":"markdown","875d7d2f":"markdown"},"source":{"e23eb2be":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix","a6f2a8ce":"df = pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")\ndf.head(10)","347a8ad3":"df.drop('Time', axis='columns', inplace=True)\ndf.head(5)","be6f45c7":"features = df.drop('Class', axis='columns')\nlabels = df['Class']\n\n# X_train, X_test, y_train, y_test\ntrain_features, test_features, train_labels, test_labels = train_test_split(features, labels, test_size=0.20)","1ef4ccd8":"model = RandomForestClassifier(n_estimators=10)\nmodel.fit(train_features, train_labels)","a414fa82":"predicted = model.predict(test_features)\nscore = accuracy_score(predicted, test_labels)\n\nprint(\"{}% accuracy\".format(score * 100))","535e21da":"# Confusion matrix (true positives, false positives, etc...)\ncm = confusion_matrix(predicted, test_labels)\ncm","15533e40":"import xgboost as xgb","e9d66014":"# Use the default paramaters for now\nxgbModel = xgb.XGBClassifier()\nxgbModel","0a71e3c4":"xgbModel.fit(train_features, train_labels)\nxgPredicted = xgbModel.predict(test_features)","78a1b0e6":"xgbScore = accuracy_score(xgPredicted, test_labels)\n\nprint(\"{}% accuracy\".format(xgbScore * 100))","96ac0b52":"# Confusion matrix (true positives, false positives, etc...)\ncm = confusion_matrix(xgPredicted, test_labels)\ncm","500d0b74":"**Predict the accuracy and see how it performs against the Random Forest Algorithm**","563a9841":"**Our first algorithm will be the Random Forest**","4572818e":"**Get rid of the 'Time' feature**","0b49c5b4":"**Read and print a portion of the dataset**\nThe feature names dont tell us much","16bf2669":"**Now lets see our prediction. with XGBoost**","87498754":"**Predict the accuracy**\n\nIn addition to the overall accuracy, print out the confusion matrix to see the false positives and negatives","875d7d2f":"**Split our data into two sets for training and testing**"}}