{"cell_type":{"44404395":"code","6a43863b":"code","05f9b710":"code","10ea5fee":"code","db13d9e7":"code","5fdc1cbe":"code","c0a8325f":"code","46a707bb":"code","984c726a":"code","f41a27d8":"code","c5cce4e6":"code","ae4511eb":"code","cf14fe6b":"markdown","aff68f99":"markdown","220c714c":"markdown","9d284156":"markdown","e02da1f2":"markdown"},"source":{"44404395":"import pandas as pd\nfrom sklearn import preprocessing","6a43863b":"# Loading .csv file\ndf1 = pd.read_csv(\"..\/input\/ieee-fraud-detection\/train_identity.csv\")\n\n# Replacing NaN with default values\ndf1 = df1.fillna(value = -999)\n\n# Dropping columns\ndf1.drop([\"id_23\", \"id_27\"], axis = 1).values\n\n# Replacing values\ndf1 = df1.replace(\"Found\", 1)\ndf1 = df1.replace(\"NotFound\", 2)\ndf1 = df1.replace(\"New\", 3)\ndf1 = df1.replace(\"mobile\", 4)\ndf1 = df1.replace(\"desktop\", 5)\ndf1 = df1.replace(\"T\", 6)\ndf1 = df1.replace(\"F\", 7)\n\n#df1.select_dtypes(\"number\")\n#df1.select_dtypes(\"object\")\n\n# Typecasting\ndf1[\"DeviceInfo\"] = df1[\"DeviceInfo\"].astype(str)\ndf1[\"id_30\"] = df1[\"id_30\"].astype(str)\ndf1[\"id_31\"] = df1[\"id_31\"].astype(str)\ndf1[\"id_33\"] = df1[\"id_33\"].astype(str)\ndf1[\"id_34\"] = df1[\"id_34\"].astype(str)\ndf1[\"id_15\"] = df1[\"id_15\"].astype(str)\ndf1[\"id_23\"] = df1[\"id_23\"].astype(str)\n\n# Initializing Encoder\nnumber = preprocessing.LabelEncoder()\n\n# Encoding\ndf1[\"DeviceInfo\"] = number.fit_transform(df1[\"DeviceInfo\"])\ndf1[\"id_30\"] = number.fit_transform(df1[\"id_30\"])\ndf1[\"id_31\"] = number.fit_transform(df1[\"id_31\"])\ndf1[\"id_33\"] = number.fit_transform(df1[\"id_33\"])\ndf1[\"id_34\"] = number.fit_transform(df1[\"id_34\"])\ndf1[\"id_15\"] = number.fit_transform(df1[\"id_15\"])\ndf1[\"id_23\"] = number.fit_transform(df1[\"id_23\"])\n\ndf1.head()","05f9b710":"df1.shape","10ea5fee":"df1 = df1.iloc[:100000]\ndf1.shape","db13d9e7":"# Loading .csv file\ndf2 = pd.read_csv(\"..\/input\/ieee-fraud-detection\/train_transaction.csv\")\n\n# Replacing NaN with default values\ndf2 = df2.fillna(value = -999)\n\n#df2.select_dtypes(\"number\")\n#df2.select_dtypes(\"object\")\n\n# Typecasting\ndf2[\"card4\"] = df2[\"card4\"].astype(str)\ndf2[\"card6\"] = df2[\"card6\"].astype(str)\ndf2[\"P_emaildomain\"] = df2[\"P_emaildomain\"].astype(str)\ndf2[\"R_emaildomain\"] = df2[\"R_emaildomain\"].astype(str)\ndf2[\"M1\"] = df2[\"M1\"].astype(str)\ndf2[\"M2\"] = df2[\"M2\"].astype(str)\ndf2[\"M3\"] = df2[\"M3\"].astype(str)\ndf2[\"M4\"] = df2[\"M4\"].astype(str)\ndf2[\"M5\"] = df2[\"M5\"].astype(str)\ndf2[\"M6\"] = df2[\"M6\"].astype(str)\ndf2[\"M7\"] = df2[\"M7\"].astype(str)\ndf2[\"M8\"] = df2[\"M8\"].astype(str)\ndf2[\"M9\"] = df2[\"M9\"].astype(str)\ndf2[\"ProductCD\"] = df2[\"ProductCD\"].astype(str)\n\n# Initializing Encoder\nnumber = preprocessing.LabelEncoder()\n\n# Encoding\ndf2[\"card4\"] = number.fit_transform(df2[\"card4\"])\ndf2[\"card6\"] = number.fit_transform(df2[\"card6\"])\ndf2[\"P_emaildomain\"] = number.fit_transform(df2[\"P_emaildomain\"])\ndf2[\"R_emaildomain\"] = number.fit_transform(df2[\"R_emaildomain\"])\ndf2[\"M1\"] = number.fit_transform(df2[\"M1\"])\ndf2[\"M2\"] = number.fit_transform(df2[\"M2\"])\ndf2[\"M3\"] = number.fit_transform(df2[\"M3\"])\ndf2[\"M4\"] = number.fit_transform(df2[\"M4\"])\ndf2[\"M5\"] = number.fit_transform(df2[\"M5\"])\ndf2[\"M6\"] = number.fit_transform(df2[\"M6\"])\ndf2[\"M7\"] = number.fit_transform(df2[\"M7\"])\ndf2[\"M8\"] = number.fit_transform(df2[\"M8\"])\ndf2[\"M9\"] = number.fit_transform(df2[\"M9\"])\ndf2[\"ProductCD\"] = number.fit_transform(df2[\"ProductCD\"])\n\ndf2.head()","5fdc1cbe":"df2.shape","c0a8325f":"df2 = df2.iloc[:100000]\ndf2.shape","46a707bb":"df = pd.merge(df1, df2, on = \"TransactionID\", how = \"outer\")\n\ndf.head()","984c726a":"df = df.dropna()","f41a27d8":"df.shape","c5cce4e6":"from sklearn.model_selection import train_test_split\n\n# Columns used as predictors\nX = df.drop([\"isFraud\"], axis = 1).values\n\ny = df[\"isFraud\"].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0, test_size = 0.25)","ae4511eb":"from sklearn.ensemble import RandomForestClassifier\n\nmodel = RandomForestClassifier(criterion = \"entropy\")\nmodel.fit(X_train, y_train)\n\nmodel.score(X_test, y_test)","cf14fe6b":"#### Defining X and y and Splitting data","aff68f99":"#### Loading, Cleaning and Displaying data","220c714c":"# IEEE Fraud Detection with Random Forest","9d284156":"#### Applying Random Forest","e02da1f2":"#### Merging two dataframes to one big dataframe"}}