{"cell_type":{"2a3a40fa":"code","6b5a62ee":"code","ed0005a5":"code","c78ed606":"code","f8b02df6":"code","bb9bd0f4":"code","3157c6e0":"code","6d58669e":"markdown","24391c83":"markdown","805f9a7c":"markdown"},"source":{"2a3a40fa":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib.patches import Arc, Arrow , Circle , ConnectionPatch , Rectangle\nimport matplotlib.pyplot as plt\nimport json\nfrom pandas.io.json import json_normalize\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","6b5a62ee":"# Create a normal dataframe from the input json data\nwith open('..\/input\/france-vs-belgium-soccer-play\/France_Belgium.json') as data_file:    \n    data = json.load(data_file)\ndf = json_normalize(data, sep = \"_\")","ed0005a5":"# Different events captured from a gameplay\ndf[\"type_name\"].value_counts()","c78ed606":"# eden hazard pass data\nEdenHazard_pass = df[(df['type_name'] == \"Pass\") & (df['player_name']=='Eden Hazard')]\npass_column = [i for i in df.columns if i.startswith(\"pass\")]\nEdenHazard_pass = EdenHazard_pass[[\"id\", \"period\", \"timestamp\", \"location\", \"pass_end_location\", \"pass_recipient_name\"]]\nEdenHazard_pass.head()\n\n#eden hazard shot data\nEdenHazard_shot = df[(df['type_name'] == \"Shot\") & (df['player_name']=='Eden Hazard')]\nEdenHazard_shot  = EdenHazard_shot[[\"id\",\"location\",\"shot_end_location\",\"type_name\",\"shot_technique_name\",\"shot_outcome_name\"]]\nEdenHazard_shot.head()","f8b02df6":"#pass end-location and start-location\npe = list(EdenHazard_pass[\"pass_end_location\"])\nps = list(EdenHazard_pass[\"location\"])\n\n#shot end-location and start-location\nse = list(EdenHazard_shot[\"shot_end_location\"])\nss = list(EdenHazard_shot[\"location\"])","bb9bd0f4":"# method for creating a football court\ndef CreatePitch(ax):\n    \n    # boarder line\n    OuterLine = Rectangle([0,0],width = 120, height = 80, fill = True, color = 'green')\n    LeftPenalty = Rectangle([0,19.85],width =16.5 , height = 40.3, fill = False)\n    RightPenalty = Rectangle([103.5,19.85],width =16.5 , height =40.3  ,fill = False)\n    MidLine = ConnectionPatch([60,0],[60,80],\"data\",\"data\")\n   \n    # Mid Circle\n    MidCircle = Circle([60,40],9.15,fill = False)\n   \n    # 6 Yards area\n    LeftSix = Rectangle([0,30.85],width = 5.5,height = 18.3,fill = False)\n    RightSix = Rectangle([114.5,30.85],width = 5.5,height = 18.3,fill = False)\n   \n    # Dot near penalty area\n    LDot = Circle([11,40],0.8,fill = True,color = 'white')\n    RDot = Circle([109,40],0.8,fill = True,color = 'white')\n   \n    # Goal post\n    Lgoal = Rectangle([0,36.35],width = 2.3 , height = 7.3 ,\n                      angle = 360 , fill = True, color = 'white')\n    Rgoal = Rectangle([117.5,36.35],width = 2.3 , height = 7.3 ,\n                      angle = 360 ,fill = True, color = 'white')\n    \n    # Arcs\n    leftArc = Arc((11,40),height=18,width=20,angle=0,theta1=310,theta2=50,color=\"black\")\n    rightArc = Arc((109,40),height=16,width=20,angle=0,theta1=130,theta2=230,color=\"black\")\n   \n    # mid point\n    MidPoint = Circle([60,40], 0.8,fill = True,color = 'white')\n    objects = [OuterLine,LeftPenalty,RightPenalty,MidLine,MidCircle,LeftSix,\n               RightSix, MidPoint,LDot,RDot,Lgoal,Rgoal,leftArc,rightArc]\n    \n    for i in objects:\n        ax.add_patch(i)\n    for i,j in zip(pe,ps):\n        ax.annotate(\"\", xy = (i[0],i[1]),xycoords = \"data\",\n                    xytext = (j[0],j[1]),textcoords = 'data',\n                   arrowprops=dict(arrowstyle=\"->\",connectionstyle=\"arc3\", color = \"black\"))\n    for i,j in zip(se,ss):\n        ax.annotate(\"\",xy = (i[0],i[1]),xytext = (j[0],j[1]),textcoords = 'data',\n                    arrowprops=dict(arrowstyle=\"->\",connectionstyle=\"arc3\", color = \"red\"))\n       ","3157c6e0":"fig=plt.figure(figsize = (10,6)) \nax=fig.add_subplot(1,1,1)\nCreatePitch(ax) #overlay our different objects on the pitch\nplt.ylim(-10, 90)\nplt.xlim(-10, 132)\nplt.xlabel(\"Width of the pitch <---120 meters--->\", color = 'black')\nplt.ylabel(\"height of the pitch <---80 meters--->\", color = 'black')\nplt.title(\"Eden Hazard's pass(Black arrow) and shots(Red arrow)\")\nplt.show()","6d58669e":"**Work in progress..**\n\n\nPlease upvote if you like this.","24391c83":"**Football gameplay analysis.**\n\nDataset is available in the link : https:\/\/github.com\/statsbomb\/open-data\n\nThe dataset that is used here is the soccer gameplay data between France and Belgium.\n\nI'm going to select one player from Belgium and analyze the player moves(pass\/shot) with cool visualization.\n\nI have created a separate method for plotting a soccer pitch and the dimensions are 120\/80.","805f9a7c":"<img src=\"https:\/\/www.thestatesman.com\/wp-content\/uploads\/2018\/07\/Samuel-Umtiti-and-Eden-Hazard-WC.jpg\" width=\"1000\">\n\nimage source : https:\/\/www.thestatesman.com\/"}}