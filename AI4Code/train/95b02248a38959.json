{"cell_type":{"9e4909f6":"code","d29a1bdb":"code","794e36a0":"code","9f67b360":"code","d0fccf5c":"markdown","a04a31b4":"markdown","418727ea":"markdown","4d1c4d6d":"markdown","9f29f6ee":"markdown","4fe5f7db":"markdown","f646c0ff":"markdown","4fd4fd39":"markdown","f45b3711":"markdown","7a4a395c":"markdown","aa4ec1b1":"markdown","ee88bccc":"markdown","2b95d112":"markdown"},"source":{"9e4909f6":"from sklearn.datasets import load_iris\niris = load_iris()\n\n# Model (can also use single decision tree)\nfrom sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=10)\n\n# Train\nmodel.fit(iris.data, iris.target)\n# Extract single tree\nestimator = model.estimators_[5]","d29a1bdb":"from sklearn.tree import export_graphviz\n# Export as dot file\nexport_graphviz(estimator, out_file='tree.dot', \n                feature_names = iris.feature_names,\n                class_names = iris.target_names,\n                rounded = True, proportion = False, \n                precision = 2, filled = True)","794e36a0":"# Convert to png using system command (requires Graphviz)\nfrom subprocess import call\ncall(['dot', '-Tpng', 'tree.dot', '-o', 'tree.png', '-Gdpi=600'])","9f67b360":"# Display in jupyter notebook\nfrom IPython.display import Image\nImage(filename = 'tree.png')","d0fccf5c":"# Visualization of a decision tree from a random forest","a04a31b4":"# **Create a model train and extrac data**","418727ea":"This makes use of the export_graphviz function in Scikit-Learn. There are many parameters here that control the look and information displayed. Take a look at the documentation for specifics.","4d1c4d6d":"# \u0421onsiderations","9f29f6ee":"We could use a single decision tree, but since I often employ the random forest for modeling it\u2019s used in this example. (The trees will be slightly different from one another!).","4fe5f7db":"Running system commands in Python can be handy for carrying out simple tasks. This requires installation of graphviz which includes the dot utility. For the complete options for conversion, take a look at the documentation.","f646c0ff":"It\u2019s helpful to limit maximum depth in your trees when you have a lot of features. Otherwise, you end up with massive trees, which look impressive, but cannot be interpreted at all!","4fd4fd39":"The best visualizations appear in the Jupyter Notebook. (Equivalently you can use matplotlib to show images)","f45b3711":"# Convert dot to png using a system command","7a4a395c":"# Export Tree as .dot File","aa4ec1b1":"* [**Article on visualization of a random forest**](https:\/\/towardsdatascience.com\/how-to-visualize-a-decision-tree-from-a-random-forest-in-python-using-scikit-learn-38ad2d75f21c)\n* [**Documentation Sklearn**](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html)\n* [**Explanation of a random forest using visualization**](https:\/\/garg-mohit851.medium.com\/random-forest-visualization-3f76cdf6456f)","ee88bccc":"# Source","2b95d112":"# Visualization"}}