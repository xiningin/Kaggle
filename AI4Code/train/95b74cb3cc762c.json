{"cell_type":{"1916f8a4":"code","55aee423":"code","a55538f2":"code","2cd96cd6":"code","68b3f4b2":"code","4d77b02c":"code","0a153374":"code","80606f8b":"code","d8344ebb":"code","d271c36e":"code","924e7d5e":"markdown","7734b857":"markdown","03a80af7":"markdown"},"source":{"1916f8a4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport h2o\nfrom h2o.automl import H2OAutoML\nfrom h2o.estimators import H2OXGBoostEstimator\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nh2o.init()\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","55aee423":"train_df = h2o.import_file(\"\/kaggle\/input\/tabular-playground-series-dec-2021\/train.csv\")\ntest_df = h2o.import_file(\"\/kaggle\/input\/tabular-playground-series-dec-2021\/test.csv\")","a55538f2":"train_df.describe()","2cd96cd6":"x = [i for i in train_df.columns if i not in {\"Id\", \"Cover_Type\"}]\ny = \"Cover_Type\"\n\ntrain_df[y] = train_df[y].asfactor()","68b3f4b2":"# ## automl\n# aml = H2OAutoML(max_models=10, seed=1234, verbosity=\"info\", max_runtime_secs=60 * 20)\n# aml.train(x=x, y=y, training_frame=train_df)\n\n## XGBoost model\ntrain, valid = train_df.split_frame(ratios=[.8], seed=1234)\nxgb = H2OXGBoostEstimator(booster='dart', seed=1234, backend=\"gpu\")\nxgb.train(x=x, y=y, training_frame=train, validation_frame=valid)","4d77b02c":"# ## automl leaderboard\n# lb = aml.leaderboard\n# lb.head(rows=lb.nrows)\n\n# xgboost performance\nxgb.model_performance()","0a153374":"# xgb.explain(train_df)","80606f8b":"# preds = aml.predict(test_df)\npreds = xgb.predict(test_df)","d8344ebb":"df = preds.as_data_frame()\ndf['Id'] = test_df.as_data_frame()['Id']\nres_df = df[['Id', 'predict']]\nres_df.columns = ['Id', 'Cover_Type']","d271c36e":"res_df.to_csv('\/kaggle\/working\/submission.csv', index=False)","924e7d5e":"## csv File reading","7734b857":"Some simple data rangement.","03a80af7":"## Data Training"}}