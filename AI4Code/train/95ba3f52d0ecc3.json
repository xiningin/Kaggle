{"cell_type":{"e998b11e":"code","7af72394":"code","66eb1254":"code","bb956a19":"code","990b74cd":"code","3af5227b":"code","d6ef2038":"code","71941d0e":"code","e680b5cd":"code","93416609":"code","0e6b36f3":"code","4c2b2abe":"code","93aa90be":"code","704e3c7c":"code","84d7e003":"code","5c599152":"code","3914b6bb":"code","bc8ee13d":"code","b5e313d4":"code","2eb2aa89":"code","3d5cb495":"markdown"},"source":{"e998b11e":"import pandas as pd\nnetflix=pd.read_csv('..\/input\/tcs-share\/TCS.NS (1).csv')\nnetflix.head()","7af72394":"netflix=netflix[['Date','Close']]\nnetflix.head()","66eb1254":"netflix.info()","bb956a19":"!pip install pycaret-ts-alpha","990b74cd":"from pycaret.internal.pycaret_experiment import TimeSeriesExperiment\nfrom sktime.utils.plotting import plot_series","3af5227b":"netflix.index = pd.DatetimeIndex(netflix[\"Date\"])\nnetflix.drop([\"Date\"],axis=1,inplace=True)\nnetflix.head()","d6ef2038":"netflix = netflix.asfreq('d')\nnetflix.index","71941d0e":"netflix.head()","e680b5cd":"netflix=netflix.fillna(method='ffill')\nnetflix.head()","93416609":"data=netflix.Close\ndata","0e6b36f3":"import matplotlib.pyplot as plt\n_ =plot_series(data)\nplt.xticks(rotation=90)\nplt.grid()","4c2b2abe":"exp = TimeSeriesExperiment()\nexp.setup(data=data,session_id=42,fh=365)","93aa90be":"## Create a model manually\nmodel = exp.create_model(\"exp_smooth\")\nmodel","704e3c7c":"y_train = exp.get_config(\"y_train\")\ny_train[:5]","84d7e003":"y_predict = exp.predict_model(model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","5c599152":"tuned_model = exp.tune_model(model,optimize = 'MAE')\ntuned_model","3914b6bb":"exp.predict_model(tuned_model)","bc8ee13d":"y_predict = exp.predict_model(tuned_model)\nplot_series(data, y_train, y_predict, labels=['All', 'Train', 'Test Predictions'])\nplt.grid()","b5e313d4":"# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n_=plot_series(data, y_pred_future, labels=['All', 'Future Pred (Unknown)'])\nplt.grid()","2eb2aa89":"# Test Set Predictions\ny_pred = exp.predict_model(tuned_model)\n\n# Finalize Model\nfinal_model = exp.finalize_model(tuned_model)\n\n# Future Predictions\ny_pred_future = exp.predict_model(final_model, verbose=False)\n\n# Plot Results\ny_train = exp.get_config(\"y_train\")\n_ = plot_series(data, y_train, y_pred, y_pred_future, labels=['All', 'Train', 'Test Predictions', 'Future Pred (Unknown)'])\nplt.grid()","3d5cb495":"# "}}