{"cell_type":{"7a802718":"code","050092e6":"code","178a6fc1":"code","7d336b7a":"code","83e8f75e":"code","5b9642c2":"code","df683edc":"code","c96894b7":"code","ab90256b":"code","159092eb":"code","6d53a3c0":"code","825ef528":"code","d0c6f80c":"code","7395138a":"code","246c8bac":"code","90456a96":"code","404cdaff":"code","016b24cf":"code","40b69218":"code","20b3484e":"code","274caa2d":"code","b5887a39":"code","c6f6a633":"code","fd93c56d":"code","23d31583":"code","15bce403":"code","86825fa6":"code","7e4d15a5":"code","24a28af2":"code","66bd07a8":"code","ac63ae15":"code","36f6ec39":"code","8fd1d6bc":"code","f17255d0":"code","1012d91e":"code","43c3576d":"code","1bb0c30e":"code","ff89121e":"code","c1d0eefb":"code","cfa1c308":"code","5b321956":"code","17e07e16":"code","f73c3ce9":"code","ca9fb3f5":"code","a88496ad":"code","4953921b":"code","e21d4cc5":"code","9d670663":"code","aaf736fe":"code","72713e61":"code","c1fea431":"code","6aee8beb":"code","34e02857":"code","cbfddd88":"code","c3fbdaa0":"code","ada8576a":"markdown","9e11a768":"markdown","f4b65317":"markdown","28f93d51":"markdown","b743c24d":"markdown","6a109a0b":"markdown"},"source":{"7a802718":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","050092e6":"import seaborn as sns","178a6fc1":"import matplotlib.pyplot as plt","7d336b7a":"test_df = pd.read_csv('..\/input\/titanic\/test.csv')","83e8f75e":"test_df.head()","5b9642c2":"df = pd.read_csv('..\/input\/titanic\/train.csv')","df683edc":"df.head()","c96894b7":"df.info()","ab90256b":"df.describe()","159092eb":"plt.figure(figsize=(12,6))\nsns.heatmap(df.isnull())","6d53a3c0":"sns.set_style('whitegrid')\nsns.countplot(data=df, x='Survived', hue='Sex')","825ef528":"sns.countplot(data=df, x='Survived', hue='Pclass')","d0c6f80c":"sns.displot(df['Age'].dropna(), kde=False, bins=35)","7395138a":"sns.countplot(data=df, x='SibSp')","246c8bac":"sns.boxplot(data=df, x='Pclass', y='Age')","90456a96":"age_by_class = df.groupby('Pclass')['Age'].mean()\nage_by_class","404cdaff":"def fill_age(x):\n    Age = x[0]\n    Pclass = x[1]\n    if pd.isnull(Age):\n        if(Pclass==1):\n            return 38\n        elif(Pclass==2):\n            return 29\n        else:\n            return 25\n    return Age","016b24cf":"df['Age'] = df[['Age', 'Pclass']].apply(fill_age, axis=1)","40b69218":"plt.figure(figsize=(12,6))\nsns.heatmap(df.isnull())","20b3484e":"df = df.drop('Cabin', axis=1)","274caa2d":"plt.figure(figsize=(12,6))\nsns.heatmap(df.isnull())","b5887a39":"df = df.dropna()","c6f6a633":"plt.figure(figsize=(12,6))\nsns.heatmap(df.isnull())","fd93c56d":"df.head()","23d31583":"df['Embarked'].value_counts()","15bce403":"embarked_dummies = pd.get_dummies(df['Embarked'], drop_first=True)","86825fa6":"embarked_dummies","7e4d15a5":"sex_dummies = pd.get_dummies(df['Sex'], drop_first=True)","24a28af2":"sex_dummies","66bd07a8":"df = pd.concat([df.drop(['Embarked','Sex'],axis=1),embarked_dummies, sex_dummies],axis=1)","ac63ae15":"df.head()","36f6ec39":"df = df.drop(['Name', 'Ticket'], axis=1)","8fd1d6bc":"df.head()","f17255d0":"test_df.head()","1012d91e":"test_df = test_df.drop(['Name', 'Ticket', 'Cabin'], axis=1)","43c3576d":"test_df.head()","1bb0c30e":"sns.heatmap(test_df.isnull())","ff89121e":"test_df['Age'] = test_df[['Age', 'Pclass']].apply(fill_age, axis=1)","c1d0eefb":"sns.heatmap(test_df.isnull())","cfa1c308":"sns.heatmap(df.isnull())","5b321956":"embarked_dummies_test = pd.get_dummies(test_df['Embarked'], drop_first=True)\nsex_dummies_test = pd.get_dummies(test_df['Sex'], drop_first=True)\ntest_df = pd.concat([test_df.drop(['Embarked','Sex'],axis=1),embarked_dummies_test, sex_dummies_test],axis=1)","17e07e16":"df.info()","f73c3ce9":"test_df.info()","ca9fb3f5":"df.head()","a88496ad":"test_df.head()","4953921b":"from sklearn.ensemble import RandomForestClassifier\n\ny = df[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Age\", \"SibSp\", \"Parch\", \"male\", \"Q\", \"S\"]\nX = df[features]\nX_test = test_df[features]\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)","e21d4cc5":"output = pd.DataFrame({'PassengerId': test_df.PassengerId, 'Survived': predictions})\noutput.to_csv('submission.csv', index=False)\nprint(\"Saved!\")","9d670663":"output_df = pd.read_csv('..\/working\/submission.csv')","aaf736fe":"output_df.info()","72713e61":"sum(output_df['Survived'] == 0)","c1fea431":"sum(output_df['Survived'] == 1)","6aee8beb":"output_df_tutorial = pd.read_csv('..\/input\/titanic-tutorial\/submission.csv')","34e02857":"output_df_tutorial.info()","cbfddd88":"sum(output_df_tutorial['Survived'] == 0)","c3fbdaa0":"sum(output_df_tutorial['Survived'] == 1)","ada8576a":"# **Exploratory Data Analysis**","9e11a768":"Fill the null values in Age column","f4b65317":"# **Test Data**","28f93d51":"# **Cleaning the data**","b743c24d":"# **Modelling**","6a109a0b":"**Cleaning data**"}}