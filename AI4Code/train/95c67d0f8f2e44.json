{"cell_type":{"4ae70062":"code","415468b7":"code","bf066f86":"code","21a3f829":"code","968b5019":"code","7536c300":"code","4ff4c63a":"code","120790d4":"code","403b66a9":"code","d4bd3c8d":"code","de4162e8":"code","194a2998":"code","8baea2da":"code","96e7cc53":"code","9b80242e":"code","2b1307c4":"code","3c8e5aeb":"code","2fd5259c":"code","033d6844":"code","b1dd68f0":"code","c18def42":"code","1af5574b":"code","11b24ecc":"code","c5de649e":"code","8f6f43d7":"code","90965dfc":"code","850f3783":"code","00b126c1":"code","cce030c7":"code","77bee23a":"code","4bf1f1ea":"code","fffb934d":"markdown","e20cd5d4":"markdown","103ff447":"markdown","4d99603e":"markdown","3956da37":"markdown","66cdcf38":"markdown","bdac256a":"markdown","53e399ef":"markdown","54d5685a":"markdown"},"source":{"4ae70062":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","415468b7":"import warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport geopandas\nimport pycountry\nimport plotly.express as ex","bf066f86":"gdp = pd.read_csv(\"\/kaggle\/input\/country-regional-and-world-gdp\/gdp_csv.csv\")","21a3f829":"gdp.head()","968b5019":"gdp.isnull().sum()","7536c300":"len(gdp[\"Country Name\"].unique())","4ff4c63a":"Sum = gdp['Value'].groupby(gdp['Country Code']).sum()\nfirst_15 = Sum.sort_values(ascending=True)[:15]\nfirst_15","120790d4":"Sum.max()","403b66a9":"first_15.plot(kind = 'bar',xlim=10, color='red')\nplt.show()","d4bd3c8d":"gdp[\"Country Name\"].unique()","de4162e8":"#countries = []\n#for x in pycountry.countries:\n#    countries.append(x.name)","194a2998":"countries = ['Arab World', 'Caribbean small states',\n       'Central Europe and the Baltics', 'Early-demographic dividend',\n       'East Asia & Pacific',\n       'East Asia & Pacific (excluding high income)',\n       'East Asia & Pacific (IDA & IBRD countries)', 'Euro area',\n       'Europe & Central Asia',\n       'Europe & Central Asia (excluding high income)',\n       'Europe & Central Asia (IDA & IBRD countries)', 'European Union',\n       'Fragile and conflict affected situations',\n       'Heavily indebted poor countries (HIPC)', 'High income',\n       'IBRD only', 'IDA & IBRD total', 'IDA blend', 'IDA only',\n       'IDA total', 'Late-demographic dividend',\n       'Latin America & Caribbean',\n       'Latin America & Caribbean (excluding high income)',\n       'Latin America & the Caribbean (IDA & IBRD countries)',\n       'Least developed countries: UN classification',\n       'Low & middle income', 'Low income', 'Lower middle income',\n       'Middle East & North Africa',\n       'Middle East & North Africa (excluding high income)',\n       'Middle East & North Africa (IDA & IBRD countries)',\n       'Middle income', 'North America', 'OECD members',\n       'Other small states', 'Pacific island small states',\n       'Post-demographic dividend', 'Pre-demographic dividend',\n       'Small states', 'South Asia', 'South Asia (IDA & IBRD)',\n       'Sub-Saharan Africa', 'Sub-Saharan Africa (excluding high income)',\n       'Sub-Saharan Africa (IDA & IBRD countries)', 'Upper middle income',\n       'World']","8baea2da":"print(countries)","96e7cc53":"df_country = gdp.loc[~gdp['Country Name'].isin(countries)]","9b80242e":"len(df_country['Country Name'].unique())","2b1307c4":"df_country = df_country.replace('United States','United States of America')\ndf_country = df_country.replace('Russian Federation','Russia')","3c8e5aeb":"annotations = []\nfig = ex.line(df_country, x=\"Year\", y=\"Value\", color=\"Country Name\",\n              line_group=\"Country Name\", hover_name=\"Country Name\")\nannotations.append(dict(xref='paper', yref='paper', x=0.0, y=1.05,\n                              xanchor='left', yanchor='bottom',\n                              text='GDP over the years (1960 - 2016)',\n                              font=dict(family='Arial',\n                                        size=30),\n                              showarrow=False))\nfig.update_layout(annotations=annotations)\nfig.show()","2fd5259c":"world = geopandas.read_file(geopandas.datasets.get_path(\"naturalearth_lowres\"))","033d6844":"df_country_final = world.merge(df_country, how=\"left\", left_on=['name'], right_on=['Country Name'])","b1dd68f0":"world.name.unique()","c18def42":"df_country_final.isnull().sum()","1af5574b":"df_country_final.shape","11b24ecc":"#world = geopandas.read_file(geopandas.datasets.get_path(\"naturalearth_lowres\"))\n#print(\"Geometry Column Name : \", world.geometry.name)\n#print(\"Dataset Size : \", world.shape)\n#world.head()\ndf_country_final.plot('Value',figsize=(20,14),legend=True,\n                           legend_kwds={\"label\":\"Gdp By Countrie\", \"orientation\":\"horizontal\"});","c5de649e":"gdp = pd.read_csv(\"\/kaggle\/input\/country-regional-and-world-gdp\/gdp_csv.csv\")","8f6f43d7":"gdp['Date'] = pd.to_datetime(gdp.Year, format='%Y')\ngdp.set_index('Date', inplace=True)\ngdp = gdp.loc[gdp[\"Country Name\"] == \"United States\"]\ngdp.head()","90965dfc":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(gdp.Value, order=(3,1,3))\nresult_AR = model.fit(disp = 0)","850f3783":"result_AR.plot_predict(1,80)\nx=result_AR.forecast(steps=200)","00b126c1":"gdp = pd.read_csv(\"\/kaggle\/input\/country-regional-and-world-gdp\/gdp_csv.csv\")","cce030c7":"gdp['Date'] = pd.to_datetime(gdp.Year, format='%Y')\ngdp.set_index('Date', inplace=True)\ngdp = gdp.loc[gdp[\"Country Name\"] == \"China\"]\ngdp.head()","77bee23a":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(gdp.Value, order=(1,1,2))\nresult_AR = model.fit(disp = 0)","4bf1f1ea":"result_AR.plot_predict(1,80)\nx=result_AR.forecast(steps=200)","fffb934d":"prediction for USA","e20cd5d4":"We can Get the Countries Names with pycountry :","103ff447":"We gonna change some countries names !\nnote : there are also some countries tha they still need to correct","4d99603e":"There is No missing values","3956da37":"We filtred the Countries tha they didn't exist in the map dictionnary","66cdcf38":"We gonna make visualize the most 15 Gross Domestic Product in the world from 1960 to 2016","bdac256a":"Prediction for China","53e399ef":"# We gonna do some Exploratory Data Analysis","54d5685a":"# Import the libraries"}}