{"cell_type":{"3ece069b":"code","e1d49927":"code","9ce65b80":"code","d5ef60cf":"code","460d12a8":"code","e052cab6":"code","0bab5814":"code","abf16581":"code","27d18820":"code","89f55d7c":"code","1e3a6c39":"code","9271ddfc":"code","4c4d41dd":"code","c0073b22":"code","993e9c3a":"code","01eaca07":"code","c880298a":"code","418cfd50":"code","1430f7f0":"code","73f28921":"code","dcc564d8":"markdown","e757c691":"markdown","426577d9":"markdown","1300ff20":"markdown","52ebbc9d":"markdown","e4a23603":"markdown","9244f66e":"markdown","02c2c0f2":"markdown","bbb8947f":"markdown","c0669a95":"markdown","3ca45150":"markdown","d74612fc":"markdown","e3c94e7c":"markdown","57805cb9":"markdown","731ba8b0":"markdown","288432f9":"markdown","b8af2ae5":"markdown","c34152a8":"markdown","add098e6":"markdown","0766627f":"markdown","facfc747":"markdown","a4e14083":"markdown","151c7e5c":"markdown","bb9e8078":"markdown","e4131406":"markdown"},"source":{"3ece069b":"#data analysis libraries \nimport numpy as np\nimport pandas as pd\nimport datetime\n\n#visualization libraries\nimport matplotlib.pyplot as plt\nfrom matplotlib import pyplot\nimport seaborn as sns\n%matplotlib inline\n\n#ignore warnings\nimport warnings\nwarnings.filterwarnings('ignore')","e1d49927":"data = pd.read_csv('..\/input\/avocado.csv') #read to data\ndata = data.drop(['Unnamed: 0'], axis = 1) #drop the useless column\nnames = [\"date\", \"avprice\", \"totalvol\", \"small\",\"large\",\"xlarge\",\"totalbags\",\"smallbags\",\"largebags\",\"xlargebags\",\"type\",\"year\",\"region\"] #get new column names\ndata = data.rename(columns=dict(zip(data.columns, names))) #rename columns\ndata.head()","9ce65b80":"data.info()","d5ef60cf":"dates = [datetime.datetime.strptime(ts, \"%Y-%m-%d\") for ts in data['date']]\ndates.sort()\nsorteddates = [datetime.datetime.strftime(ts, \"%Y-%m-%d\") for ts in dates]\ndata['date'] = pd.DataFrame({'date':sorteddates})\ndata['Year'], data['Month'],  data['Day'] = data['date'].str.split('-').str\ndata.head(10)","460d12a8":"plt.figure(figsize=(12,5))\nplt.title(\"Price Distirbution Graph\")\nax = sns.distplot(data[\"avprice\"], color = 'y')","e052cab6":"import seaborn as sns\nfig, ax = plt.subplots()\nfig.set_size_inches(10,5)\nsns.violinplot(data.dropna(subset = ['avprice']).avprice)","0bab5814":"dategroup=data.groupby('date').mean()\nplt.figure(figsize=(12,5))\ndategroup['avprice'].plot(x=data.date)\nplt.title('Average Price')","abf16581":"dategroup=data.groupby('Month').mean()\nfig, ax = plt.subplots(figsize=(12,5))\nax.xaxis.set(ticks=range(0,13)) # Manually set x-ticks\ndategroup['avprice'].plot(x=data.Month)\nplt.title('Average Price by Month')","27d18820":"dategroup=data.groupby('Day').mean()\nfig, ax = plt.subplots(figsize=(12,5))\nax.xaxis.set(ticks=range(0,31)) # Manually set x-ticks\ndategroup['avprice'].plot(x=data.Day)\nplt.title('Average Price by Day')","89f55d7c":"plt.figure(figsize=(20,20))\nsns.set_style('whitegrid')\nsns.pointplot(x='avprice',y='region',data=data, hue='year',join=False)\nplt.xticks(np.linspace(1,2,5))\nplt.xlabel('Region',{'fontsize' : 'large'})\nplt.ylabel('Average Price',{'fontsize':'large'})\nplt.title(\"Yearly Average Price in Each Region\",{'fontsize':20})","1e3a6c39":"plt.figure(figsize=(12,20))\nsns.set_style('whitegrid')\nsns.pointplot(x='avprice',y='region',data=data, hue='type',join=False)\nplt.xticks(np.linspace(1,2,5))\nplt.xlabel('Region',{'fontsize' : 'large'})\nplt.ylabel('Average Price',{'fontsize':'large'})\nplt.title(\"Type Average Price in Each Region\",{'fontsize':20})","9271ddfc":"print(data['type'].value_counts())\nplt.figure(figsize=(12,5))\nsns.countplot(data['type'])\nplt.show()","4c4d41dd":"%matplotlib inline\nimport pandas as pd\nfrom fbprophet import Prophet\n\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')","c0073b22":"df = data.loc[:, [\"date\",\"avprice\"]]\ndf['date'] = pd.DatetimeIndex(df['date'])\ndf.dtypes","993e9c3a":"df = df.rename(columns={'date': 'ds',\n                        'avprice': 'y'})","01eaca07":"ax = df.set_index('ds').plot(figsize=(20, 12))\nax.set_ylabel('Monthly Average Price of Avocado')\nax.set_xlabel('Date')\n\nplt.show()","c880298a":"my_model = Prophet()\nmy_model.fit(df)\n\nfuture_dates = my_model.make_future_dataframe(periods=900)\nforecast =my_model.predict(future_dates)","418cfd50":"fig2 = my_model.plot_components(forecast)","1430f7f0":"forecastnew = forecast['ds']\nforecastnew2 = forecast['yhat']\n\nforecastnew = pd.concat([forecastnew,forecastnew2], axis=1)\n\nmask = (forecastnew['ds'] > \"2018-03-24\") & (forecastnew['ds'] <= \"2020-09-10\")\nforecastedvalues = forecastnew.loc[mask]\n\nmask = (forecastnew['ds'] > \"2015-01-04\") & (forecastnew['ds'] <= \"2018-03-25\")\nforecastnew = forecastnew.loc[mask]","73f28921":"fig, ax1 = plt.subplots(figsize=(16, 8))\nax1.plot(forecastnew.set_index('ds'), color='b')\nax1.plot(forecastedvalues.set_index('ds'), color='r')\nax1.set_ylabel('Average Prices')\nax1.set_xlabel('Date')\nprint(\"Red = Predicted Values, Blue = Base Values\")","dcc564d8":"- I want to look at data types and take positions accordingly","e757c691":"## 4- Time Series Analysis\n<a id=\"ch3\"><\/a>","426577d9":"- Now let's look at how the model made a price estimate, and the part of the blue area contains the values that the model predicts","1300ff20":"### Call Prophet Model\n- now we introduce the prophet function and train the model, here I set it to predict the next 900 days, you can increase or decrease this number","52ebbc9d":"- Now I got Sorted data let's do some visualizations","e4a23603":"### Yearly Average Price in Each Region\n- Again an extremely important graphic reason for us is the price change between the states","9244f66e":"- If you want to do time series analysis in the prophet library, you have to change the column names. I changed the name of the column to make it possible.","02c2c0f2":"- Here we can see that the weight is in the price range of $ 1.15","bbb8947f":"# 5- Source\n<a id=\"ch4\"><\/a>\n- [Explore avocados from all sides!](https:\/\/www.kaggle.com\/hely333\/explore-avocados-from-all-sides])\n- [A Guide to Time Series Forecasting with Prophet in Python 3](https:\/\/www.digitalocean.com\/community\/tutorials\/a-guide-to-time-series-forecasting-with-prophet-in-python-3)\n- [Time Series Analysis in Python: An Introduction](https:\/\/towardsdatascience.com\/time-series-analysis-in-python-an-introduction-70d5a5b1d52a)","c0669a95":" ## Final Results\n \n - Our model predicted that rising prices would go down in the coming years.","3ca45150":"**Thank You For Reading, All Feedbacks are Welcome!**","d74612fc":"### Weight distribution of prices","e3c94e7c":"### Change of average price per calendar year\n\n- This is important because seasonal changes can affect prices.","57805cb9":"- We first import the necessary libraries and start the time series analysis process","731ba8b0":"### Type Average Price in Each Region\n- In this chart, we can see price changes according to type in cities, organic avocado is more expensive as a standard","288432f9":"## 3- Visualizations\n<a id=\"ch2\"><\/a>","b8af2ae5":"### Changes in prices by day of month\n- Which is again a significant chart reason for us on certain days of the week discounts","c34152a8":"# \u0130ntroduction\n1. [Import Libraries](#ch0)\n1. [Data Preprocessing](#ch1)\n1. [Visualization](#ch2)\n1. [Time Series Analysis And Prediction](#ch3)\n1. [Source](#ch4)","add098e6":"# Avocado Prices Analysis and Prediction\n\n- Hello everyone, i am new at time series and this is my first notebook about time series, in this notebook i aimed to predict avocado prices, and analyze the change in average avocado prices\n\n**Yunus Emre G\u00fcndo\u011fmu\u015f - September 2018**","0766627f":"### Price distribution graph in general","facfc747":"## 2 - Data PreProcessing \n<a id=\"ch1\"><\/a>","a4e14083":"- In this section we will divide the predicted results by train results.\n- We first create a DataFrame containing the main train data named ForecastNew. Then we filter it out and divide it into two. \n- forecastnew = main data \n- forecastedvalues = model predicted data","151c7e5c":"- Here we look at the type distribution in the dataset.","bb9e8078":"- When I look at data types, I see that date is not datetime, so I will solve this problem and sort the data by date. Then I will divide the dates into day-month-year for a better analysis.","e4131406":"## 1 - \u0130mport Libraries\n<a id=\"ch0\"><\/a>"}}