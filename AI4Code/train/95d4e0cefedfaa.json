{"cell_type":{"b30da325":"code","32466319":"code","fcc89d2a":"code","863db0d6":"code","f7b6c5eb":"code","5e6d73a6":"code","c5c80e82":"code","921dad48":"code","6a7068e7":"code","2fc7f908":"code","93d08054":"code","08ccf0ba":"code","b2c3940d":"code","fc11717e":"code","0beb6bc7":"code","e96353ef":"code","f5352aff":"code","024eba61":"code","e8629476":"code","93f4868f":"code","278d2eb9":"code","07f052a4":"code","0d9a1400":"markdown","1c90702b":"markdown","fd645130":"markdown","5c6c02da":"markdown","552b556e":"markdown","f8e67983":"markdown","0fd21af0":"markdown","187faa95":"markdown","e8c19686":"markdown","c2580c7e":"markdown","f2875a0c":"markdown","055ca5c3":"markdown"},"source":{"b30da325":"tup1 = () # Empty tuple\nprint(tup1)","32466319":"tup2 = (10,) # tuple with one element, see , after the element\nprint(tup2)","fcc89d2a":"tup3 = (10,20,-30.1,\"Delhi\") # tuple with different types of elements\nprint(tup3)","863db0d6":"tup4 = (10,20,30)\nprint(tup4)","f7b6c5eb":"tup5 = 1,2,3,4  #no braces\nprint(tup5)","5e6d73a6":"list = [1,2,3,4]\n\ntup6 = tuple(list) # Convert list into tuple using tuple() function\nprint(tup6)","c5c80e82":"tpl = tuple(range(4,9,2)) # Pass range to tuple() function\nprint(tpl)\n","921dad48":"tup = (50,60,70,80,90)\n\nprint(tup[0])\nprint(tup[4])\nprint(tup[-1])","6a7068e7":"print(tup[:])","2fc7f908":"print(tup[1:4])","93d08054":"print(tup[::-2])","08ccf0ba":"student_tup = (11202515, \"Bhupesh\", 50,60,65,61,70)\nrno, name = student_tup[0:2]\nprint(rno,name)\nprint(rno)\nprint(name)","b2c3940d":"marks_tup = student_tup[2:7]\nprint(marks_tup)\n\nprint(\"Print Using  index\")\nfor i in range(len(marks_tup)):\n    print(marks_tup[i])\n    \nprint(\"\\n Print using direct element\")\nfor element in marks_tup:\n    print (element)","fc11717e":"# finding length\nstudent_tup = (11202515, \"Bhupesh\", 50,60,65,61,70)\nlen(student_tup)","0beb6bc7":"# concatenation\nfees_tup = (72000, ) * 2 # repeat tuple element 2 times\nprint(fees_tup)\n\n\nstudent1_tup = student_tup + fees_tup\nprint(student1_tup)","e96353ef":"# repetition\ntup7 = (10,11,12)\nnew_tup = tup7 * 3\nprint(new_tup)","f5352aff":"tuple1 = (1,2,3,4,5)","024eba61":"print(len(tuple1))\nprint(min(tuple1))\nprint(max(tuple1))\nprint(sorted(tuple1))\nprint(sorted(tuple1, reverse= True))","e8629476":"tup = (50, 60, 70, 80, 90, (200, 201))\n\n# Last element is nested tuple \n\nprint(tup[5])","93f4868f":"# every nested tuple represents a data record\nstudent_tup = ( (11202515, \"Bhupesh\",50, 60, 70, 80, 89, (72000,  72000) ),\n                (11202517, \"Ajay \" ,60, 65, 76, 76, 54, (72000,  72000) ) )\nprint(student_tup)","278d2eb9":"# We can use sorted () function. It sorts by default into ascending order\n# It sorts according to first element (0th element in nested tuple) i.e.  rollno of student\nprint(sorted(student_tup))","07f052a4":"print( sorted(student_tup, key = lambda x : x[1]) ) # sort on name\n\n# key indicates key for the sorted function , it tells on which element sorting should be done.","0d9a1400":"# Tuple Functions and methods\n\nAny function is called directly with its name. len(), min(), max(), sorted().\ncount() and index() are not functions but methods. Hence called with format: object.method()","1c90702b":"# Tuple operations\n\n5 basic operations are: finding length, concatenation, repetition, membership and iteration.","fd645130":"# Tuple Example\nextracted elements should be stored in separate variables","5c6c02da":"# Sorting nested tuple\n","552b556e":"# Nested  tuple\n\na tuple inserted inside another tuple is nested tuple.","f8e67983":"# Introduction\n\nA tuple is a python sequence which stores a group of elements.\nTuples are similar to lists but main difference is tuples are immutable but lists are mutable.\nImmutable means once created the elements of tuple cannot be modified.\n\nwe cannot perform operations like append(), extend(), insert(), remove(), pop() and clear() on tuples.\n\nTuples are used to store the data which should not be modified and retrieve data on demand.\n","0fd21af0":"# Creating a tuple","187faa95":"# Membership\nname = \"Vinay Kumar\"\nprint(name in student1_tup)\n\nname = \"Bhupesh\"\nprint(name in student1_tup)","e8c19686":"# If we want to sort tuple based on student name, which is the 1st elemnt in nested tuple, we can use lambda expression.\n","c2580c7e":"# Accessing tuple elements\nThis is done using indexing or slicing\n\n","f2875a0c":"# References\n1. Core Python Programming by Dr R. Nageswara Rao\n","055ca5c3":"# Python tuple from list"}}