{"cell_type":{"04b95d96":"code","1056f7c7":"code","745a0c15":"code","7fa6234d":"code","4e83f179":"code","a9989626":"code","96d74716":"code","ac05842a":"code","078ad40d":"code","b801cf71":"code","b4297767":"code","f18765fd":"code","64bd79c1":"code","c2ce9a96":"code","b5bb89db":"code","4b20e289":"code","10bfd79e":"code","9790b144":"code","6aa5e648":"code","c4394813":"code","4fe3019c":"code","4ac6d10d":"code","489c7889":"code","4fde9a46":"code","f20f2e4b":"code","83e6b2f0":"code","193e5df3":"code","195c121a":"code","1ee471f3":"code","858c6cfa":"markdown"},"source":{"04b95d96":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1056f7c7":"from fastai.vision import *","745a0c15":"df = pd.read_csv(\"..\/input\/train_labels.csv\")\ndf.head()","7fa6234d":"tfms = get_transforms(flip_vert=True, max_lighting=0.1, max_zoom=1.05, max_warp=0.)","4e83f179":"np.random.seed(42)\nsrc = (ImageItemList.from_csv('..\/input', 'train_labels.csv', folder='train', suffix='.tif')\n       .random_split_by_pct(0.2)\n       .label_from_df(label_delim=' '))","a9989626":"data = (src.transform(tfms, size=128)\n        .databunch().normalize(imagenet_stats))","96d74716":"data.show_batch(rows=3, figsize=(12,9))","ac05842a":"arch = models.resnet50","078ad40d":"df['label'].value_counts()","b801cf71":"PATH = \"..\/input\/\"\nprint(\"training data\")\n!ls -l {PATH}train | grep ^[^dt] | wc -l","b4297767":"print(\"test data\")\n!ls -l {PATH}test | grep ^[^dt] | wc -l","f18765fd":"from os.path import *\ncache_dir = expanduser(join('~', '.torch'))\nif not exists(cache_dir):\n    makedirs(cache_dir)\nmodels_dir = join(cache_dir, 'models')\nif not exists(models_dir):\n    makedirs(models_dir)","64bd79c1":"!ls ~\/.torch\/models","c2ce9a96":"import pathlib\narch.path = pathlib.Path('.')","b5bb89db":"!cp ..\/input\/models\/resnet50-19c8e357.pth ~\/.torch\/models\/resnet50-19c8e357.pth","4b20e289":"learn = create_cnn(data,arch, path='.')","10bfd79e":"create_cnn??\n","9790b144":"learn.lr_find()","6aa5e648":"learn.recorder.plot()","c4394813":"lr = 7.6e-3\nlearn.fit_one_cycle(5,slice(lr))","4fe3019c":"learn.save('stage-1-rn50')","4ac6d10d":"learn.unfreeze()","489c7889":"learn.lr_find()\n","4fde9a46":"learn.recorder.plot()","f20f2e4b":"learn.fit_one_cycle(5,slice(5e-6,lr\/5))","83e6b2f0":"learn.save('stage-2-rn50')","193e5df3":"data = (src.transform(tfms, size=256)\n        .databunch().normalize(imagenet_stats))\n\nlearn.data = data\ndata.train_ds[0][0].shape","195c121a":"learn.freeze()","1ee471f3":"learn.lr_find()\nlearn.recorder.plot()","858c6cfa":"**All code below this cell are Work In Progress [WIP]**"}}