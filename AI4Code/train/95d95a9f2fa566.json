{"cell_type":{"63c3f81e":"code","f37ddef8":"code","1ce4fcef":"code","8c44921f":"code","056ab27d":"code","46f9fcce":"code","74076c97":"code","4828fa5f":"code","32beec4c":"code","2c9ec256":"code","ded7fede":"code","3d79a6ba":"code","ab3a48e4":"code","643cf80f":"code","1a7e6493":"code","f28a061b":"code","08a74274":"code","62faee2b":"code","f8dea157":"code","c9afcdd4":"code","17a11aa9":"code","3171d8eb":"code","ec2bed29":"code","bdcee6af":"code","1b76024b":"markdown","333aac7c":"markdown","fbb58f54":"markdown","6f1708d8":"markdown","799beba1":"markdown","37322d5a":"markdown","fb3d9702":"markdown"},"source":{"63c3f81e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f37ddef8":"import matplotlib.pyplot as plt\nimport seaborn as sn\nimport pandas_profiling\nimport zipfile ","1ce4fcef":"# This import helps to run more than one command in single cell\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = 'all'","8c44921f":"data = pd.read_csv(\"\/kaggle\/input\/factors-affecting-campus-placement\/Placement_Data_Full_Class.csv\")","056ab27d":"data","46f9fcce":"data.info()","74076c97":"data.profile_report()","4828fa5f":"salary_mean = data['salary'].mean()\ndata['salary'].fillna(salary_mean, inplace=True)","32beec4c":"data['gender'].value_counts()\ndata['ssc_b'].value_counts()\ndata['hsc_b'].value_counts()\ndata['hsc_s'].value_counts()\ndata['degree_t'].value_counts()\ndata['specialisation'].value_counts()","2c9ec256":"def count_plot(x_cols, y_col, data):\n    \n    for x_col in x_cols:\n        sn.countplot(x_col,hue= y_col, data=data )\n        plt.show()","ded7fede":"cat_cols= ['gender','ssc_b','hsc_b','hsc_s','degree_t','workex','specialisation']\ncount_plot(cat_cols, 'status',data)","3d79a6ba":"data.drop([\"ssc_b\",\"hsc_b\"],axis=1,inplace=True)","ab3a48e4":"data['gender'] = data.gender.map({\"M\":0, \"F\":1})\ndata['hsc_s'] = data.hsc_s.map({\"Commerce\":0, \"Science\":1, \"Arts\":2})\ndata[\"degree_t\"] = data.degree_t.map({\"Comm&Mgmt\":0, \"Sci&Tech\":1, \"Others\":2})\ndata[\"specialisation\"] = data.specialisation.map({\"Mkt&Fin\":0, \"Mkt&HR\":1})\ndata[\"workex\"] = data.workex.map({\"Yes\":1, \"No\":0})\ndata[\"status\"] = data.status.map({\"Placed\":1, \"Not Placed\":0})","643cf80f":"from sklearn.metrics import accuracy_score, classification_report\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split","1a7e6493":"X = data.drop(['status',\"salary\",\"sl_no\"],axis=1)\nY = data['status']","f28a061b":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)","08a74274":"Dec_tree = DecisionTreeClassifier(criterion='entropy')","62faee2b":"Dec_tree.fit(x_train,y_train)\ny_pred = Dec_tree.predict(x_test)","f8dea157":"accuracy_score(y_test, y_pred)","c9afcdd4":"print(classification_report(y_test, y_pred))","17a11aa9":"Ran_for = RandomForestClassifier(criterion=\"entropy\")","3171d8eb":"Ran_for.fit(x_train, y_train)\ny_pred_ranfor = Ran_for.predict(x_test)","ec2bed29":"accuracy_score(y_test, y_pred_ranfor)\nprint(classification_report(y_test,y_pred_ranfor))","bdcee6af":"cats = list(X.columns)\nimps = Ran_for.feature_importances_\n\nfor z in zip(cats, imps):\n  print(z,\"\\n\")","1b76024b":"# 2. Importing data and getting some basic insights","333aac7c":"# 4. Classification on Status of placement","fbb58f54":"# 3. feature labeling","6f1708d8":"# 1. Importing required libraries","799beba1":"Dropping \"ssc_b\" and \"hsc_b\" columns because they does not affect the status of placement","37322d5a":"* hsc_s does not have much feature importance\n* degree_t does not have much feature importance\n* so next time training we can remove this two features\n\n","fb3d9702":"* this dataset have 215 entries and 15 features.\n* salary feature has null values.\n* they must be filled or removed.\n* in next step we will fill it with the mean value"}}