{"cell_type":{"a04ce53b":"code","354d1147":"code","18d024a5":"code","f25296b6":"code","d566967a":"code","18a2fc91":"code","a4bb22a5":"code","a86b82f0":"code","d07d67a0":"code","c993354b":"code","db8ac5a3":"code","bc5bbcbd":"code","f0f27489":"code","0344014b":"code","3750fa1c":"code","12473e3d":"code","69e6d88e":"code","21acb6e7":"markdown","be431838":"markdown","9996abb1":"markdown","573ab870":"markdown","7d142d20":"markdown","35349d61":"markdown","0754f051":"markdown","b9a3ea5f":"markdown"},"source":{"a04ce53b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","354d1147":"data=pd.read_csv(\"..\/input\/Iris.csv\")","18d024a5":"data.info()\ndata.Species.value_counts()","f25296b6":"data.head()","d566967a":"data.drop(\"Id\",axis=1,inplace=True)","18a2fc91":"fig = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='orange', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='blue', label='versicolor',ax=fig)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='SepalLengthCm',y='SepalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Sepal Length\")\nfig.set_ylabel(\"Sepal Width\")\nfig.set_title(\"Sepal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","a4bb22a5":"fig = data[data.Species=='Iris-setosa'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='orange', label='Setosa')\ndata[data.Species=='Iris-versicolor'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='blue', label='versicolor',ax=fig)\ndata[data.Species=='Iris-virginica'].plot(kind='scatter',x='PetalLengthCm',y='PetalWidthCm',color='green', label='virginica', ax=fig)\nfig.set_xlabel(\"Petal Length\")\nfig.set_ylabel(\"Petal Width\")\nfig.set_title(\"Petal Length VS Width\")\nfig=plt.gcf()\nfig.set_size_inches(10,6)\nplt.show()","a86b82f0":"plt.figure(figsize=(10,7)) \nsns.heatmap(data.corr(),annot=True, cmap='cubehelix_r') \nplt.show()","d07d67a0":"data.hist(edgecolor=\"black\",linewidth=1.2)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.show()","c993354b":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=data)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=data)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=data)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=data)\nplt.show()","db8ac5a3":"# s\u0131n\u0131fland\u0131rma algoritmalar\u0131\nfrom sklearn.linear_model import LogisticRegression  \nfrom sklearn.model_selection import train_test_split \nfrom sklearn.neighbors import KNeighborsClassifier  \nfrom sklearn import svm  \nfrom sklearn import metrics \nfrom sklearn.tree import DecisionTreeClassifier","bc5bbcbd":"y=data[\"Species\"]\nx=data.drop([\"Species\"],axis=1)\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 1)","f0f27489":"score_list=[]\nfor each in range(1,15):\n    knn2= KNeighborsClassifier(n_neighbors=each)\n    knn2.fit(x_train,y_train)\n    score_list.append(knn2.score(x_test,y_test))\nplt.figure(figsize=(10,7))\nplt.plot(range(1,15),score_list)\nplt.xlabel(\"k de\u011fer\")\nplt.ylabel(\"accuracy\")\nplt.show()","0344014b":"#%% KNN\nknn = KNeighborsClassifier(n_neighbors=8)\nknn.fit(x_train,y_train)\nprint(\"n= {} i\u00e7in KNN sonucu: {}\".format(8,knn.score(x_test,y_test)))","3750fa1c":"#%% SVM \nsvm1=svm.SVC()\nsvm1.fit(x_train,y_train)\nsvm_pred=svm1.predict(x_test)\nprint(\"SVM score: {}\".format(svm1.score(x_test,y_test)))\nprint(\"svm do\u011fruluk: \",metrics.accuracy_score(svm_pred,y_test))","12473e3d":"#%% logistic regression\nlr=LogisticRegression()\nlr.fit(x_train,y_train)\nprint(\"logistic regression test sonucu: {}\".format(lr.score(x_test,y_test)))","69e6d88e":"#%% Decision Tree\ntree_reg = DecisionTreeClassifier()   # random sate = 0\ntree_reg.fit(x_train,y_train)\nprint(\"decision tree test sonucu: {}\".format(tree_reg.score(x_test,y_test)))","21acb6e7":"* Giri\u015f verileri x de\u011fi\u015fkenine, hedef veriler y de\u011fi\u015fkenine atand\u0131.\n* Giri\u015f ve hedef verileri; %70 e\u011fitim, %30 test verisi olmak \u00fczere b\u00f6l\u00fcn\u00fcyor. (test_size=0.3)","be431838":"Veri i\u015fe yarar hale getirildikten sonra her bir t\u00fcr i\u00e7in sepal uzunluk ve geni\u015fli\u011fin ili\u015fkisine bak\u0131l\u0131r.","9996abb1":"Daha sonra petal uzunluk ve geni\u015fli\u011fin ili\u015fkisine bak\u0131l\u0131r.","573ab870":"* Farkl\u0131 n de\u011ferleri i\u00e7in KNN algoritmas\u0131 sonu\u00e7lar\u0131na bak\u0131ld\u0131. B\u00fct\u00fcn sonu\u00e7lar ayn\u0131 de\u011feri vermi\u015f olup say\u0131sal sonu\u00e7 i\u00e7in verilen aral\u0131ktan herhangi bir de\u011fer se\u00e7ildi.","7d142d20":"\u00dcstteki 2 tablo ve korelasyonun g\u00f6sterildi\u011fi fig\u00fcr; petal uzunluk ve geni\u015fli\u011finin, sepal uzunluk ve geni\u015fli\u011finden daha ba\u011f\u0131nt\u0131l\u0131 oldu\u011funu g\u00f6stermektedir.","35349d61":"# Introduction\n* Bu \u00e7al\u0131\u015fma Udemy kursu \u00f6devi i\u00e7in haz\u0131rlanm\u0131\u015ft\u0131r.\n* Sepal uzunlu\u011fu, sepal geni\u015fli\u011fi, petal uzunlu\u011fu, petal geni\u015fli\u011fi bilinen; setosa, versicolor, virginica t\u00fcrlerindeki \u00e7i\u00e7eklerin bu uzunluk ve geni\u015fliklerle aras\u0131ndaki ili\u015fki incelenmi\u015ftir.","0754f051":"* Buraya kadar verinin g\u00f6rsel olarak incelenmesi ger\u00e7ekle\u015ftirilmi\u015ftir. \n* \u00c7i\u00e7ek t\u00fcrleri aras\u0131nda s\u0131n\u0131fland\u0131rma yapmaya uygun oldu\u011fu g\u00f6r\u00fcn\u00fcyor.\n* Devam eden k\u0131s\u0131mlarda verinin farkl\u0131 algoritmalar kullan\u0131larak s\u0131n\u0131fland\u0131r\u0131lmas\u0131 yap\u0131lacakt\u0131r. ","b9a3ea5f":"# Conclusion\n* \u00c7i\u00e7ek boyut ve t\u00fcrleri aras\u0131ndaki ba\u011f\u0131nt\u0131 g\u00f6rsel olarak incelenmi\u015ftir. Scatter plot komutunun daha ayr\u0131nt\u0131l\u0131 bir sonu\u00e7 verdi\u011fi g\u00f6r\u00fclm\u00fc\u015ft\u00fcr.\n* KNN ve SVM algoritmalar\u0131 ile olu\u015fturulan modellerin %97,8 do\u011frulukla, decision tree ve logistic regression algoritmalar\u0131ndan daha verimli oldu\u011fu g\u00f6r\u00fclm\u00fc\u015ft\u00fcr."}}