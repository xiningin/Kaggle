{"cell_type":{"62b3ef93":"code","6992f35a":"code","1e475437":"code","1b406647":"code","caac0cf5":"code","364c3c40":"code","4625184e":"code","72cbabd6":"code","1e3a4e6d":"code","8ab7d703":"code","b51ad2b7":"code","a97258d0":"code","6c27dc38":"code","3388802c":"code","5857c5d7":"code","3de8a1a4":"code","92a4797b":"code","e1e5f490":"markdown","85f705c9":"markdown","5625625a":"markdown","17cd017e":"markdown","538034de":"markdown","74025c8a":"markdown","9d68f739":"markdown","575f3ba1":"markdown","8dfa69a1":"markdown","78246bb1":"markdown","66d817b9":"markdown","1abd1798":"markdown","fc02120f":"markdown"},"source":{"62b3ef93":"import tensorflow as tf\nimport pandas as pd\nimport numpy as np\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPool2D,Flatten,Dropout,BatchNormalization,Activation\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport matplotlib.pyplot as plt\nfrom keras.preprocessing.image import load_img,img_to_array","6992f35a":"train_directory='..\/input\/100-bird-species\/train'\nval_directory='..\/input\/100-bird-species\/valid'\ntest_directory='..\/input\/100-bird-species\/test'","1e475437":"train_datagen=ImageDataGenerator(rescale=1\/255)\nval_datagen=ImageDataGenerator(rescale=1\/255)\ntest_datagen=ImageDataGenerator(rescale=1\/255)","1b406647":"train_generator=train_datagen.flow_from_directory(train_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)\n\nval_generator=val_datagen.flow_from_directory(val_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)\n\ntest_gemerator=test_datagen.flow_from_directory(test_directory,\n                                                 target_size=(224,224),\n                                                 color_mode='rgb',\n                                                 class_mode='sparse',batch_size=256)","caac0cf5":"train_generator.class_indices","364c3c40":"from keras.applications import ResNet101V2\nconvlayer=ResNet101V2(input_shape=(224,224,3),weights='imagenet',include_top=False)\nfor layer in convlayer.layers:\n    layer.trainable=False","4625184e":"model=Sequential()\nmodel.add(convlayer)\nmodel.add(Dropout(0.5))\nmodel.add(Flatten())\nmodel.add(BatchNormalization())\nmodel.add(Dense(2048,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1024,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(225,activation='softmax'))\nprint(model.summary())","72cbabd6":"opt=tf.keras.optimizers.Adam(lr=0.001)\nmodel.compile(loss='sparse_categorical_crossentropy',metrics=['accuracy'],optimizer=opt)","1e3a4e6d":"history=model.fit(train_generator,validation_data=val_generator,\n         epochs=5)","8ab7d703":"opt=tf.keras.optimizers.RMSprop(lr=0.0001)\nmodel.compile(loss='sparse_categorical_crossentropy',metrics=['accuracy'],optimizer=opt)\nhistory_1=model.fit(train_generator,validation_data=val_generator,\n         epochs=1)","b51ad2b7":"plt.plot(history.history['accuracy'],c='red')\nplt.plot(history.history['val_accuracy'],c='green')\nplt.title('Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['train','validation'],loc='lower right')","a97258d0":"plt.plot(history.history['loss'],c='red')\nplt.plot(history.history['val_loss'],c='green')\nplt.title('Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['train','validation'],loc='upper right')","6c27dc38":"model.evaluate(test_gemerator)","3388802c":"dic=train_generator.class_indices\nicd={k:v for v,k in dic.items()}\ndef output(location):\n    img=load_img(location,target_size=(224,224,3))\n    img=img_to_array(img)\n    img=img\/255\n    img=np.expand_dims(img,[0])\n    answer=model.predict_classes(img)\n    probability=round(np.max(model.predict_proba(img)*100),2)\n    #print ('Bird Is',icd[answer[0]], 'With probability',probability)\n    print (probability, ' % chances are there that the Bird Is',icd[answer[0]])","5857c5d7":"img='..\/input\/anurag-mishra\/belted.jpg'\npic=load_img('..\/input\/anurag-mishra\/belted.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","3de8a1a4":"img='..\/input\/fdjn-vfvjkfd-v\/hg.jpg'\npic=load_img('..\/input\/fdjn-vfvjkfd-v\/hg.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","92a4797b":"img='..\/input\/fj-fdjvdk-vmdvdjl\/bananan.jpg'\npic=load_img('..\/input\/fj-fdjvdk-vmdvdjl\/bananan.jpg',target_size=(224,224,3))\nplt.imshow(pic)\noutput(img)","e1e5f490":"### ARARIPE MANAKIN ","85f705c9":"# Importing Libraries","5625625a":"### Training with lower learning rate for last iteration","17cd017e":"Function for predicting bird class","538034de":"### BANANAQUIT","74025c8a":"# Test Accuracy ","9d68f739":"# Prediction","575f3ba1":"### Belted Kingfisher","8dfa69a1":"# Accuracy Plot","78246bb1":"# Transfer Learning Using RESNET_101","66d817b9":"# Loss Plot","1abd1798":"# Setting Directory","fc02120f":"# Classes of Birds "}}