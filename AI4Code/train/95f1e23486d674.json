{"cell_type":{"a2d928e0":"code","f121c60b":"code","76cacad7":"code","d9ef49cc":"code","aa47a9b8":"code","df7b0ccc":"code","b90a53b6":"code","a8a2115b":"code","33731a86":"code","18be7b0a":"code","b9c6d17a":"code","5c120f87":"code","ae2e5437":"code","a0da98e4":"code","b4071ca7":"code","051556e6":"code","c154a219":"code","778450e4":"code","d235c586":"code","37134b4b":"code","4ec5f913":"code","e046b1b4":"code","f34d0f97":"code","229d2bd7":"code","342b3956":"code","af7a7313":"code","77272a1d":"code","0bb715bb":"markdown","c373ab91":"markdown","ceed9519":"markdown","836e1c2d":"markdown","7b077443":"markdown","92ecc876":"markdown","1b1f88d1":"markdown","f104205f":"markdown","cb08bf62":"markdown","ff1ff46e":"markdown","f5e0fc3b":"markdown","16b17485":"markdown","44622f59":"markdown","bf14f5a6":"markdown","70168ae1":"markdown","9fb40b2e":"markdown","1057e0b5":"markdown"},"source":{"a2d928e0":"import numpy as np\nimport pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')\n\nimport plotly.express as px\nimport plotly.graph_objects as go","f121c60b":"data = pd.read_csv(r'..\/input\/travel-insurance-prediction-data\/TravelInsurancePrediction.csv')","76cacad7":"data.shape","d9ef49cc":"data.dtypes","aa47a9b8":"data.head()","df7b0ccc":"data.nunique()","b90a53b6":"data.describe()","a8a2115b":"data.isnull().sum()","33731a86":"data.columns","18be7b0a":"data.drop('Unnamed: 0',axis=1,inplace=True)","b9c6d17a":"data['TravelInsurance'].replace({0:'No',1:'Yes'},inplace=True)\n\n\nfig = go.Figure(data=[go.Pie(labels=data.TravelInsurance, hole=.4)])\nfig.add_annotation(text='TravelInsurance',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='how many will take Travel Insurance?',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","5c120f87":"data['TravelInsurance'].replace({'No':0,'Yes':1},inplace=True)","ae2e5437":"data['Age'].value_counts()","a0da98e4":"fig = go.Figure(data=[go.Pie(labels=data.Age, hole=.2)])\nfig.add_annotation(text='Age',\n                   x=0.5,y=0.5,showarrow=False,font_size=18,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Age distribution',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(orientation='v',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","b4071ca7":"fig = go.Figure(data=[go.Pie(labels=data['Employment Type'], hole=.4)])\nfig.add_annotation(text='Employment Type',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Employment Type',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","051556e6":"fig = go.Figure(data=[go.Pie(labels=data['GraduateOrNot'], hole=.4)])\nfig.add_annotation(text='GraduateOrNot',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='how many Graduate or Not?',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","c154a219":"data['FamilyMembers'].value_counts()","778450e4":"fig = go.Figure(data=[go.Pie(labels=data['FamilyMembers'], hole=.4)])\nfig.add_annotation(text='FamilyMembers',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Family Members',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(orientation='v',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","d235c586":"data['ChronicDiseases'].replace({0:'No',1:'Yes'},inplace=True)\n\nfig = go.Figure(data=[go.Pie(labels=data['ChronicDiseases'], hole=.4)])\nfig.add_annotation(text='ChronicDiseases',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Chronic Diseases',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","37134b4b":"data['ChronicDiseases'].replace({'No':0,'Yes':1},inplace=True)","4ec5f913":"fig = go.Figure(data=[go.Pie(labels=data['FrequentFlyer'], hole=.4)])\nfig.add_annotation(text='FrequentFlyer',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='FrequentFlyer',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\nfig.update_traces(textposition='outside', textinfo='percent+label')\nfig.show()","e046b1b4":"fig = go.Figure(data=[go.Pie(labels=data['EverTravelledAbroad'], hole=.5)])\nfig.add_annotation(text='EverTravelledAbroad',\n                   x=0.5,y=0.5,showarrow=False,font_size=16,opacity=0.7,font_family='monospace')\nfig.update_traces(hoverinfo='label+percent+value',\n                  marker=dict(colors=['darkorange','blue'], line=dict(color='#000000', width=2)))\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='how many people Ever Travelled Abroad?',x=0.47,y=0.98,\n               font=dict(color='black',size=20)),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\n\nfig.update_traces(textposition='outside', textinfo='percent+label')\n\nfig.show()","f34d0f97":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nvar = ['Employment Type','GraduateOrNot','FrequentFlyer','EverTravelledAbroad']\nfor i in var:\n    data[i] = le.fit_transform(data[i])","229d2bd7":"!pip install pycaret","342b3956":"from pycaret.classification import setup, compare_models, blend_models, finalize_model, predict_model, plot_model","af7a7313":"def pycaret_model(train, target, n_select, fold, opt):\n    print('Setup Your Data....')\n    setup(data=train,\n              target=target,\n              numeric_imputation = 'mean',\n              silent= True)\n  \n    print('Comparing Models....')\n    best = compare_models(sort=opt, n_select=n_select, fold = fold)\n\n    \n    print('Blending Models....')\n    blended = blend_models(estimator_list= best, fold=fold, optimize=opt)\n    pred_holdout = predict_model(blended)\n    \n    print('Finallizing Models....')\n    final_model = finalize_model(blended)\n    print('Done...!!!')\n\n    pred = predict_model(final_model)\n    return pred","77272a1d":"pycaret_model(data, 'TravelInsurance', 5, 3, 'AUC')","0bb715bb":"* **EverTravelledAbroad:**","c373ab91":"### **About Data**\n* **Age**- Age Of The Customer\n\n* **Employment Type**- The Sector In Which Customer Is Employed\n* **GraduateOrNot**- Whether The Customer Is College Graduate Or Not\n* **AnnualIncome**- The Yearly Income Of The Customer In Indian Rupees[Rounded To Nearest 50 Thousand Rupees]\n* **FamilyMembers**- Number Of Members In Customer's Family\n* **ChronicDisease**- Whether The Customer Suffers From Any Major Disease Or Conditions Like Diabetes\/High BP or Asthama,etc.\n* **FrequentFlyer**- Derived Data Based On Customer's History Of Booking Air Tickets On Atleast 4 Different Instances In The Last 2 Years[2017-2019].\n* **EverTravelledAbroad**- Has The Customer Ever Travelled To A Foreign Country[Not Necessarily Using The Company's Services]\n* **TravelInsurance**- Did The Customer Buy Travel Insurance Package During Introductory Offering held in 2019.","ceed9519":"#### **if you like this notebook plz upvote it**\n#### **Thank you :)**","836e1c2d":"### **Building Model**","7b077443":"* **FamilyMembers:**","92ecc876":"* **ChronicDiseases:**","1b1f88d1":"* **GraduateOrNot:**","f104205f":"* **Employment Type:**","cb08bf62":"### **Context**\nA Tour & Travels Company Is Offering Travel Insurance Package To Their Customers.\nThe New Insurance Package Also Includes Covid Cover.\nThe Company Requires To Know The Which Customers Would Be Interested To Buy It Based On Its Database History.\nThe Insurance Was Offered To Some Of The Customers In 2019 And The Given Data Has Been Extracted From The Performance\/Sales Of The Package During That Period.\nThe Data Is Provided For Almost 2000 Of Its Previous Customers And You Are Required To Build An Intelligent Model That Can Predict If The Customer Will Be Interested To Buy The Travel Insurance Package Based On Certain Parameters Given Below.","ff1ff46e":"* **FrequentFlyer:**\n","f5e0fc3b":"* **Age:**","16b17485":"![](https:\/\/www.shriramgi.com\/images\/travelproductbg.jpg)","44622f59":"* **TravelInsurance:**","bf14f5a6":"* looks like the age group is between 25 to 35","70168ae1":"* drop **Unnamed: 0** as it contains index values","9fb40b2e":"### **Data preprocessing**","1057e0b5":"* looks like there is no missing values.\n* let's check each columns:"}}