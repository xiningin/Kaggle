{"cell_type":{"dea64cf3":"code","75c15ea6":"code","906ebeb5":"code","17a1d757":"code","29c41d40":"code","efef3a5a":"code","0538d0a0":"code","77816818":"code","ee34d433":"code","9bd7819d":"code","e5d07855":"markdown","b5926305":"markdown","25ce7f73":"markdown","895a2464":"markdown"},"source":{"dea64cf3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","75c15ea6":"!pip install bert-extractive-summarizer","906ebeb5":"!pip install transformers==2.2.0\n","17a1d757":"!pip install spacy==2.0.12","29c41d40":"paragraphs = pd.read_excel('\/kaggle\/input\/task-uj\/TASK.xlsx', headers=True) #read dataset \nparagraphs['introduction'] = paragraphs['Unnamed: 1'] #cleanup column\nparagraphs = paragraphs.drop(columns=['TEST DATASET','Unnamed: 1'],axis=1)\nparagraphs = paragraphs.drop(paragraphs.index[0])#cleanup rows\nnew_index = list(range(0,len(paragraphs)))#reorder index\nparagraphs['index'] = new_index\nparagraphs = paragraphs.set_index('index')\nprint(len(paragraphs))\nparagraphs.head()","efef3a5a":"from summarizer import Summarizer,TransformerSummarizer","0538d0a0":"#get input for the desired word count of the summary\nsum_len=int(input('Enter length of summary? For better performance min_lenght is 60 '))\n\n#initialize variables\nsummary = [] # for storing summaries\n\nmodel = TransformerSummarizer(transformer_type=\"XLNet\",transformer_model_key=\"xlnet-base-cased\")\n\n#generating summaries using ransformerSummarizer \nfor i in range(0,len(paragraphs)):\n        summary.append(model(paragraphs.introduction[i],min_length=sum_len))\n\n#adding the summary to dataframe\nparagraphs['summary'] = summary\n\n\n#print top 5 results\n#paragraphs.to_excel(\"output.xlsx\")\nparagraphs.head()","77816818":"#get input for the desired word count of the summary\nsum_len=int(input('Enter length of summary? For better performance min_lenght is 60 '))\n\n#initialize variables\nsummary = [] # for storing summaries\n\nGPT2_model = TransformerSummarizer(transformer_type=\"GPT2\",transformer_model_key=\"gpt2-medium\")\n\n#generating summaries using gensim summarizer #bert_summary = ''.join(bert_model(introduction, min_length=60))\nfor i in range(0,len(paragraphs)):\n        summary.append(GPT2_model(paragraphs.introduction[i],min_length=sum_len))\n\n#adding the summary to the main dataframe\nparagraphs['summary'] = summary\n\n#print top 5 results\n#execute the following code to output the code as an excel file marked as 'output.xlsx'\n#paragraphs.to_excel(\"output.xlsx\")\nparagraphs.head()","ee34d433":"#get input for the desired word count of the summary\nsum_len=int(input('What is the desired word count of the summary? Ideal length is around 50 '))\n\n#initialize variables\nsummary = [] # for storing summaries\n\nbert_model = Summarizer()\n\n#generating summaries using gensim summarizer \nfor i in range(0,len(paragraphs)):\n\n        \n        summary.append(bert_model(paragraphs.introduction[i],min_length=sum_len))\n\n#adding the summary to the main dataframe\nparagraphs['summary'] = summary\n\n#execute the following code to output the code as an excel file marked as 'output.xlsx'\n#paragraphs.to_excel(\"output.xlsx\")\nparagraphs.head()","9bd7819d":"paragraphs.to_excel(\"\/kaggle\/working\/output11.xlsx\")","e5d07855":"output","b5926305":"BERT","25ce7f73":"GPT2","895a2464":"XLNet"}}