{"cell_type":{"d8626199":"code","8addefc0":"code","0f43b1c2":"code","4ca1fc66":"code","0e2cc331":"code","42dce664":"code","398047df":"code","ae9ad0d5":"code","0f387480":"code","8c4d8440":"markdown"},"source":{"d8626199":"!pip install -U altair vega_datasets","8addefc0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport os\nimport glob\nfrom pathlib import Path\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport altair as alt\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input\/statistics-2020-taiwan-election-day-countdown-bot\/election-2020-01-11\/'):\n    for filename in filenames:\n        print((Path(dirname) \/ filename).stem)","0f43b1c2":"pattern = \"\/kaggle\/input\/statistics-2020-taiwan-election-day-countdown-bot\/election-2020-01-11\/*.csv\"\ndf_all = pd.concat((pd.read_csv(x) for x in glob.glob(pattern)), axis=0).reset_index(drop=True)\ndf_all.columns","4ca1fc66":"df_all[['Tweet text', 'time', 'impressions', 'engagements', 'engagement rate', \n        'retweets', 'replies', 'likes', 'user profile clicks', 'url clicks', \n        'hashtag clicks', 'follows']].sample(2)","0e2cc331":"df_all[\"time\"].sort_values().tail()","42dce664":"df_all[\"time\"] = pd.to_datetime(pd.to_datetime(df_all[\"time\"]).dt.tz_convert('Asia\/Taipei').dt.date)","398047df":"source = df_all[[\"time\", \"impressions\"]]\nbar = alt.Chart(source).mark_bar().encode(\n    x='time:T',\n    y='impressions:Q'\n).properties(width=600)\nbar","ae9ad0d5":"from datetime import datetime\nbar = alt.Chart(source[source[\"time\"] >= \"2019-11-01\"]).transform_calculate(\n    electionDate=\"date(datum.time) == 11 & month(datum.time) == 0\",\n).mark_bar().encode(\n    x='time:T',\n    y='impressions:Q',\n    color=alt.condition(\n        \"datum.electionDate\",  \n        alt.value('orange'),     # which sets the bar orange.\n        alt.value('steelblue')   # And if it's not true it sets the bar steelblue.\n    )\n).properties(width=600)\nbar","0f387480":"df_all[['Tweet text', 'time', 'impressions', 'engagements', 'engagement rate', \n        'retweets', 'replies', 'likes', 'user profile clicks', 'url clicks', \n        'hashtag clicks', 'follows']].sort_values(\"time\").tail(2)","8c4d8440":"Statistics of tweets from [@ElectionDat_bot](https:\/\/twitter.com\/ElectionDay_bot)."}}