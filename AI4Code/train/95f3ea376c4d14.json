{"cell_type":{"964f674f":"code","c5d6755b":"code","e379f0da":"code","d608adde":"code","4a3f98d2":"code","d680c8b6":"code","6c8a2a10":"code","8c1c1b62":"code","748d7339":"code","94038271":"code","1d29d5fa":"code","c4519dea":"code","3aab2c7a":"code","d686c656":"code","512bf9b2":"code","8d43073a":"code","4f8462e3":"code","163fb8af":"code","5355b4f0":"code","0d677680":"code","aa741057":"code","26656d0e":"code","fd799294":"code","d3b67211":"markdown","6b75e93f":"markdown","78b66636":"markdown","39eee921":"markdown","87c331ec":"markdown","4025e57c":"markdown"},"source":{"964f674f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n    \n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as img\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.metrics import mean_squared_error as mse, r2_score as r2\n\nfrom catboost import Pool, CatBoostClassifier, cv\n\nfrom lightgbm import LGBMRegressor\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.datasets import load_iris\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn import svm\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis","c5d6755b":"df = pd.read_csv('\/kaggle\/input\/tabular-playground-series-nov-2021\/train.csv')\ndf1 = pd.read_csv('\/kaggle\/input\/tabular-playground-series-nov-2021\/test.csv')\nans_pd = pd.read_csv('\/kaggle\/input\/tabular-playground-series-nov-2021\/sample_submission.csv')","e379f0da":"#df.columns","d608adde":"X = df.drop('target', axis=1)\ny = df['target']\n\nX.set_index('id', inplace=True)\n#y.set_index('id', inplace=True)","4a3f98d2":"#df1","d680c8b6":"X_final = df1\nX_final.set_index('id', inplace=True)\nX_final","6c8a2a10":"print('\u0421\u0442\u0440\u043e\u043a \u0432 \u0442\u0440\u0435\u0439\u043d\u0435:' ,  X.shape[0])\nprint('\u0421\u0442\u0440\u043e\u043a \u0432 \u0442\u0440\u0435\u0439\u043d\u0435:' ,  X_final.shape[0])","8c1c1b62":"#X.info()","748d7339":"#X_final.info()","94038271":"#X.describe()","1d29d5fa":"range_datasets = MinMaxScaler(feature_range=(0, 1))\n# Fit on the training data\nrange_datasets.fit(X)\n# Transform both the training and testing data\nX_norm = range_datasets.transform(X)\nX_norm","c4519dea":"range_datasets = MinMaxScaler(feature_range=(0, 1))\nrange_datasets.fit(X_final)\n# Transform both the training and testing data\nX_final = range_datasets.transform(X_final)\nX_final","3aab2c7a":"X_train, X_test, y_train, y_test = train_test_split(X_norm, y, test_size=0.3, random_state=42)\n","d686c656":"X_train","512bf9b2":"model = LinearDiscriminantAnalysis()\n\n#y_train.ravel()\n \nmodel.fit(X_train, y_train)\n\ny_pred_test = model.predict(X_test)","8d43073a":"model.score(X_test, y_test)","4f8462e3":"model_ans = LinearDiscriminantAnalysis()\n\n\nmodel_ans.fit(X_norm, y)\n\ny_pred_test = model_ans.predict(X_norm)\nmodel_ans.score(X, y)","163fb8af":"y_pred_final = model_ans.predict(X_final)\ny_pred_final","5355b4f0":"y_pred_ans = model.predict_proba(X_final)\ny_pred_ans","0d677680":"y_pred_df = pd.DataFrame(y_pred_ans, columns=['target1', 'target'])\ny_pred_df","aa741057":"ans = y_pred_df.drop('target1', axis=1)\n#X = df.drop('target', axis=1)\nans","26656d0e":"ans_pd['target'] = ans\nans_pd.to_csv('submission.csv',index=False)","fd799294":"ans_pd","d3b67211":"# Analyse datasets","6b75e93f":"# Input datasets","78b66636":"# Fit model","39eee921":" Initialize CatBoostClassifier\nmodel = CatBoostClassifier(thread_count=3,\n   iterations=500,\n   l2_leaf_reg = 4.0, \n   learning_rate = 0.035,\n   random_seed=63)\n\n#y_train.ravel()\n\n\nmodel.fit(X_train, y_train)\n\ny_pred_test = model.predict(X_test)","87c331ec":"# **Library**","4025e57c":"some parameter so big, some so small. We need normalize parameters."}}