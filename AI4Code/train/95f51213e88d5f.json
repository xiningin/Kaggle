{"cell_type":{"123747ae":"code","628a3cda":"code","3b8e3218":"code","3d702dbe":"code","e9c945ad":"code","efb26ed7":"code","2b00697f":"code","52e23691":"code","2d11875d":"code","0cfd8cc6":"code","8ef6fcd9":"code","b1899ebb":"code","c7e49c15":"code","91df3e2e":"code","6bfe685c":"code","b6c6dba9":"code","473aa893":"code","62e552ba":"code","cc5e9df7":"code","4da57479":"code","3d9527b5":"code","5e30d456":"code","7a81d04a":"code","141436d5":"code","c5a90024":"code","eb0672c3":"code","76273592":"code","364db2a8":"code","5eac03ee":"markdown","42d97377":"markdown","4924a53a":"markdown"},"source":{"123747ae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","628a3cda":"train=pd.read_csv('..\/input\/digit-recognizer\/train.csv')\ntrain.head()","3b8e3218":"test=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","3d702dbe":"X=train.copy()","e9c945ad":"X.head()","efb26ed7":"y=X['label']\nX=X.drop(['label'],axis=1)\nX.head()","2b00697f":"y","52e23691":"y=y.to_numpy()","2d11875d":"X=X.to_numpy()","0cfd8cc6":"X","8ef6fcd9":"import matplotlib.pyplot as plt","b1899ebb":"\nplt.imshow(X[10].reshape(28,28),cmap = 'Greys')\nplt.show()","c7e49c15":"X=X\/255\nX","91df3e2e":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size = 0.30,random_state=50)","6bfe685c":"test=pd.read_csv('..\/input\/digit-recognizer\/test.csv')","b6c6dba9":"test.head()","473aa893":"test1=test.to_numpy()","62e552ba":"test1","cc5e9df7":"from sklearn.model_selection import cross_val_score","4da57479":"from sklearn.neighbors import KNeighborsClassifier\nk_range = range(1,10)\nk_scores = []\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    scores = cross_val_score(knn, X, y, cv=10, scoring='accuracy')\n    k_scores.append(scores.mean())\nprint(k_scores)","3d9527b5":"from sklearn.metrics import accuracy_score\n\nknn = KNeighborsClassifier(n_neighbors=3)\nknn.fit(X_train,y_train)\ny_pred = knn.predict(X_test)\nprint('accuracy score:',accuracy_score(y_test,y_pred))\n\n","5e30d456":"predictions = knn.predict(test1)\n","7a81d04a":"predictions","141436d5":"test1.shape","c5a90024":"test1=test1\/255\n","eb0672c3":"sample_sub = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","76273592":"Submit = pd.DataFrame()\nSubmit['ImageId']=sample_sub['ImageId']                       # Copying it as it is from the sample data\nSubmit['label']=predictions\nSubmit.to_csv('Submission.csv',index = False)","364db2a8":"Submit.head()","5eac03ee":"HYPERPARAMETER TUNING\n","42d97377":"**the image representation****","4924a53a":"# **BASED ON THE HYPERPARAMETER TUNING N_NEIGHBOR IS TAKEN AS 3 **"}}