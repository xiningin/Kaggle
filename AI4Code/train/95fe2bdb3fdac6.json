{"cell_type":{"c2052677":"code","5293278d":"code","dc1da0d4":"code","756ade23":"code","020836bf":"code","f1d9b335":"code","269faaa5":"code","2261cc8f":"code","cf72eb6a":"code","d936a79f":"code","59f99724":"code","08c3460e":"code","fa550aec":"markdown","4abb05ce":"markdown","a9ac2389":"markdown","108ff944":"markdown","3013f73c":"markdown","66e570a4":"markdown"},"source":{"c2052677":"# Importing libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport warnings as warnings\nimport tensorflow as tf\n\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras.utils import to_categorical, plot_model\n\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","5293278d":"# Previewing dataset\ndf = pd.read_csv(\"..\/input\/creditcardfraud\/creditcard.csv\")\ndf.drop([\"Time\"], axis=1, inplace=True)\ndf.head()","dc1da0d4":"print(\"Number of Transactions : \", len(df))","756ade23":"# Checking the proportion of the classes\nround(df.Class.value_counts(normalize=True) * 100, 2)","020836bf":"df.Class.value_counts(normalize=True).plot(kind=\"pie\", explode=[0.2, 0], startangle = 270, )\nplt.show()","f1d9b335":"# Finding X & y\ny = df.pop(\"Class\").values\nX = df.values","269faaa5":"print(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))","2261cc8f":"# Building neural network\nmodel = Sequential([\n    Dense(16, input_shape=(29,), activation='relu'),\n    Dense(8, activation='relu'),\n    Dense(2, activation='softmax')\n])\nmodel.compile(loss='sparse_categorical_crossentropy', optimizer=SGD(lr=1e-3), metrics=['categorical_accuracy'])\n\n# Viewing the network - layer by layer\nplot_model(model, show_shapes=True, rankdir='LR')","cf72eb6a":"layer1, layer2, layer3 = model.layers\n\n# Viewing the shapes of weights and biases for each layer\nl1_weight, l1_bias = layer1.weights\nprint(\"Shape of Layer1 Weight : \", l1_weight.shape, \" and Bias : \", l1_bias.shape)\n\nl2_weight, l2_bias = layer2.weights\nprint(\"Shape of Layer2 Weight : \", l2_weight.shape, \" and Bias : \", l2_bias.shape)\n\nl3_weight, l3_bias = layer3.weights\nprint(\"Shape of Layer3 Weight : \", l3_weight.shape, \" and Bias : \", l3_bias.shape)","d936a79f":"history = model.fit(X, y, batch_size=120, epochs=30)","59f99724":"plt.plot(history.history[\"loss\"], label='Loss')\nplt.show()","08c3460e":"plt.plot(history.history[\"categorical_accuracy\"], label='Accuracy')\nplt.show()","fa550aec":"## Problem: Credit Card Fraud Detection\nGiven a list of 28 anonimyzed features and the amount of money involved in a credt card transaction, predict whether the transaction is likely to be fraudulent.\nSource: https:\/\/www.kaggle.com\/mlg-ulb\/creditcardfraud\/","4abb05ce":"## Assembling Network","a9ac2389":"## Training the Model","108ff944":"## Defining Inputs & Outputs","3013f73c":"## Installing Tensorflow\/Keras","66e570a4":"## Plotting Graphs"}}