{"cell_type":{"4e4cc5d8":"code","e227af81":"code","601818a6":"code","f4adf87d":"code","909a016b":"code","e0d1f8dd":"code","6faa278f":"code","950e0397":"code","1c7b1271":"code","9fa5a95e":"code","a2224f73":"code","d164f2bb":"code","12702c7a":"code","b81bf64c":"code","3e624025":"code","8d5e9352":"code","f74781c7":"code","e2766722":"code","c7c85201":"code","096fabbd":"code","05045c42":"code","6ae4478f":"code","48cf88de":"code","da901f30":"markdown","5c82bda7":"markdown","cc189639":"markdown","d85f00d9":"markdown","83fe785d":"markdown","0502a2af":"markdown","6fa31777":"markdown","0b176eed":"markdown","41469dc5":"markdown","0a2db6ed":"markdown"},"source":{"4e4cc5d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e227af81":"data = pd.read_csv(\"\/kaggle\/input\/tesla-stock-price\/Tesla.csv - Tesla.csv.csv\")","601818a6":"data.head()","f4adf87d":"data.describe().T","909a016b":"# data shape\ndata.shape","e0d1f8dd":"# data columns\ndata.columns","6faa278f":"# data types\ndata.dtypes","950e0397":"data.isnull().sum()","1c7b1271":"f,ax = plt.subplots(figsize = (12,7))\nplt.subplot(2,1,1) \nsns.distplot(data.Open,color=\"green\",label=\"Open Price\");\nplt.title(\"Open Price\",fontsize = 20,color='blue')\nplt.xlabel('Price',fontsize = 15,color='blue')\nplt.legend()\nplt.grid()\n#\nplt.subplot(2,1,2)\nsns.distplot(data.Close,color=\"darkblue\",label=\"Close Price\");\nplt.title(\"Close Price\",fontsize = 20,color='blue')\nplt.xlabel('Price',fontsize = 15,color='blue')\nplt.tight_layout()\nplt.legend()\nplt.grid()","9fa5a95e":"# Creating trace1\nline_1 = go.Scatter(\n                    x = data.index,\n                    y = data.Open,\n                    mode = \"lines\",\n                    name = \"citations\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'))  \ndata_line = [line_1]\nlayout = dict(title = 'TESLA Stock Price',\n              xaxis= dict(title= 'Open Price',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data_line, layout = layout)\niplot(fig)","a2224f73":"f,ax = plt.subplots(figsize = (10,7))\nsns.heatmap(data.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.2f',ax=ax);","d164f2bb":"# load library\nfrom fbprophet import Prophet","12702c7a":"data.head()","b81bf64c":"# convert date to date:)\ndata[\"Date\"] = pd.to_datetime(data[\"Date\"], infer_datetime_format=True)","3e624025":"prophet_df = data.iloc[:,[0,1]]\nprophet_df.head()","8d5e9352":"prophet_df = prophet_df.rename(columns={'Date':'ds', 'Open':'y'})\nprophet_df.tail(10)","f74781c7":"prophet_df.dtypes","e2766722":"# Create Model\nm = Prophet()\nm.fit(prophet_df)","c7c85201":"# Forcasting into the future\nfuture = m.make_future_dataframe(periods=730)\nfuture.tail(10)","096fabbd":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","05045c42":"# You can plot the forecast\nfigure1 = m.plot(forecast, xlabel='Date', ylabel='Price')","6ae4478f":"# If you want to see the forecast components\nfigure2 = m.plot_components(forecast)","48cf88de":"from fbprophet.plot import plot_plotly\nimport plotly.offline as py\npy.init_notebook_mode()\n\nfig = plot_plotly(m, forecast)  # This returns a plotly Figure\npy.iplot(fig)","da901f30":"### Disturbution Of Data","5c82bda7":"# **Making Prediction**","cc189639":"# ** Load Data **","d85f00d9":"# **Observe Prediction on Plot**","83fe785d":"**Content**\n* Within the dataset one will encounter the following:\n\n* The date - \"Date\"\n\n* The opening price of the stock - \"Open\"\n\n* The high price of that day - \"High\"\n\n* The low price of that day - \"Low\"\n\n* The closed price of that day - \"Close\"\n\n* The amount of stocks traded during that day - \"Volume\"\n\n* The stock's closing price that has been amended to include any distributions\/corporate actions that occurs before next days open - \"Adj[usted] Close\"","0502a2af":"# **Observing Data**","6fa31777":"## **Prediction For 2 years**","0b176eed":"# **Let's See Corrolation**","41469dc5":"# **Data Visualization**","0a2db6ed":"**Check Nan Values**"}}