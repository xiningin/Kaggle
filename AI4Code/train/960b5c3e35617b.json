{"cell_type":{"f5a3b50c":"code","274ecfde":"code","a03d2e3e":"code","9cf5c665":"code","8f99b942":"code","3b7e8e11":"code","c2deda39":"code","0b92aa62":"code","9ba168fe":"code","2a01ff6c":"code","f18da7b5":"code","4d997bae":"code","137871ba":"code","8c532306":"code","218a1eb3":"code","c5d99a2d":"code","18876e44":"code","eeb6c6f9":"markdown","1033d2de":"markdown"},"source":{"f5a3b50c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","274ecfde":"# Import the libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","a03d2e3e":"# import the dataset\ndf = pd.read_csv(\"..\/input\/coursera-course-dataset\/coursea_data.csv\",index_col=0)\n","9cf5c665":"df.head()","8f99b942":"df.info()","3b7e8e11":"df.columns","c2deda39":"df.isnull().sum()","0b92aa62":"labels=['COURSE','SPECIALIZATION','PROFESSIONAL CERTIFICATE']\ndata=df.course_Certificate_type.value_counts()\nprint(data)\n\nplt.figure(figsize=(20,6))\nplt.pie(data,labels=labels,explode=[0.01,0.01,0.01],autopct='%0.02f%%')\nplt.title(\"Course certification Analysis\",fontsize=16)\n\nplt.legend()\nplt.show()","9ba168fe":"data=df.course_difficulty.value_counts()\nprint(data)\nlabels=['Beginner','Intermediate','Mixed','Advanced']\nplt.figure(figsize=(20,6))\nplt.pie(data,labels=labels,autopct='%0.02f%%',explode=[0.01,0.01,0.01,0.01])\nplt.title(\"Course difficulty Analysis\",fontsize=16)\n\nplt.legend()\nplt.show()","2a01ff6c":"plt.figure(figsize=(10,7))\nplt.title(\"Course Difficulty analysis\",fontsize=16)\nax=sns.countplot(x=\"course_difficulty\",data=df)\n\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d'% int(p.get_height()),\n           fontsize=12,color='blue',ha='center',va='bottom')","f18da7b5":"plt.figure(figsize=(10,7))\nplt.title(\"course Certificate type Analysis\")\n\nax=sns.countplot(x=\"course_Certificate_type\",data=df)\n\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d'% int(p.get_height()),\n           fontsize=12,color='blue',ha='center',va='bottom')","4d997bae":"# convert enrolled to no.\ndf['course_students_enrolled']=df['course_students_enrolled'].str.replace('k','*1000')\ndf['course_students_enrolled']=df['course_students_enrolled'].str.replace('m','*10000')\ndf['course_students_enrolled']=df['course_students_enrolled'].map(lambda x:eval(x))","137871ba":"df['course_students_enrolled']","8c532306":"plt.figure(figsize=(10,7))\nplt.title(\"course Difficulty and Course Student Enrolled\",fontsize=25)\nplt.xlabel(\"course Difficulty\",fontsize=20)\nplt.ylabel(\"Student Enrolled\",fontsize=20)\nax=sns.barplot(df.course_difficulty,df.course_students_enrolled)\n\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d'% int(p.get_height()),\n           fontsize=12,color='blue',ha='center',va='bottom')","218a1eb3":"plt.figure(figsize=(10,7))\nplt.title(\"course Difficulty and Course Student Enrolled\",fontsize=16)\nax=sns.countplot(x='course_Certificate_type',data=df,hue='course_difficulty')","c5d99a2d":"data=df.nlargest(10,'course_students_enrolled')\nsns.set_style(\"darkgrid\")\nplt.figure(figsize=(10,7))\nplt.title(\"Top 10 Course Using Enrolled\",fontsize=25)\nplt.xlabel(\"Top 10 Course\",fontsize=20)\nplt.ylabel(\"Student Enrolled\",fontsize=20)\n\nax=sns.barplot(data.course_title,data.course_students_enrolled)\nax.set_xticklabels(rotation=75,labels=data.course_title)\n\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d'% int(p.get_height()),\n           fontsize=12,color='blue',ha='center',va='bottom')","18876e44":"plt.figure(figsize=(20,6))\nsns.set_style(\"darkgrid\")\nTop10=df.course_organization.value_counts().sort_values(ascending=False).head(10)\nTop10\nax=sns.barplot(Top10.index,Top10.values)\nax.set_xticklabels(rotation=30,labels=Top10.index)\nplt.title(\"Top 10 Course Organization\",fontsize=25)\nplt.xlabel(\"Organizations\",fontsize=20)\nplt.ylabel(\"No Of\",fontsize=20)\n\n\nfor p in ax.patches:\n    ax.text(p.get_x() + p.get_width()\/2., p.get_height(), '%d'% int(p.get_height()),\n           fontsize=12,color='blue',ha='center',va='bottom')\n    \nplt.show()","eeb6c6f9":"# Data Visulation","1033d2de":"# Analyze the Dataset"}}