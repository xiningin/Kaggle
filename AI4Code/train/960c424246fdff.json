{"cell_type":{"aae3b450":"code","1995b9cd":"code","c2a56d1b":"code","dfa90dd7":"code","1d4cc7f9":"code","13a2fa3f":"markdown","f45c317a":"markdown","f26943ff":"markdown"},"source":{"aae3b450":"import numpy as np\nimport pandas as pd\nimport torch\nimport torch.optim as optim\ntorch.manual_seed(1)\n\n!pip uninstall -y kaggle\n!pip install --upgrade pip\n!pip install kaggle==1.5.6\n!mkdir -p ~\/.kaggle\n!cp kaggle.json ~\/.kaggle\/\n! chmod 600 ~\/.kaggle\/kaggle.json\n!kaggle -v\n!unzip 18011854kbopredicton.zip","1995b9cd":"xy=np.loadtxt('kbo_train.csv',delimiter=',',dtype=np.float32,skiprows=1,usecols=range(0,9))\nx_data=torch.from_numpy(xy[:,0:-1])\ny_data=torch.from_numpy(xy[:,[-1]])\ntest=np.loadtxt('kbo_test.csv',delimiter=',',dtype=np.float32, skiprows=1,usecols=range(0,8))\nx_test=torch.from_numpy(test)","c2a56d1b":"w=torch.zeros((8,1),requires_grad=True)\nb=torch.zeros(1,requires_grad=True)\noptimizer=optim.SGD([w, b], lr=1e-9)\nnb_epochs=300000\n\nfor epoch in range(nb_epochs+1):\n  hypo=x_data.matmul(w)+b\n  cost=torch.mean((hypo-y_data)**2)\n  optimizer.zero_grad()\n  cost.backward()\n  optimizer.step()\n  if(epoch%30000==0):\n    print('epo : {:4d} cost : {:.6f}'.format(epoch, cost.item()\n    ))","dfa90dd7":"predict=x_test.matmul(w)+b\nprint(x_test)\nprint(predict)","1d4cc7f9":"submit=pd.read_csv('submit_sample.csv')\nfor i in range(len(predict)):\n  submit['Expected'][i]=predict[i].item()\nsubmit.to_csv('baseline.csv',mode='w',index=False)\nfrom google.colab import files\n\nfiles.download('baseline.csv') ","13a2fa3f":"# \ub370\uc774\ud130 \ub85c\ub4dc","f45c317a":"# \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc758 \ud0c0\uc11d \uc218 \uc608\uce21","f26943ff":"# \ubaa8\ub378 \ud559\uc2b5"}}