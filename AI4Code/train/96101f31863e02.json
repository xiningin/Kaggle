{"cell_type":{"857c5e2d":"code","24dcf954":"code","7fc24d93":"code","8ae523b8":"code","e0d71ded":"code","ecccc7bb":"code","8bac6872":"code","66acbfd0":"code","49df21cb":"code","631a53a3":"markdown","30289343":"markdown","41959da7":"markdown"},"source":{"857c5e2d":"import tensorflow as tf\n\nfrom tensorflow.keras import datasets, layers, models\nimport matplotlib.pyplot as plt","24dcf954":"(train_images, train_labels), (test_images, test_labels) = datasets.cifar10.load_data()","7fc24d93":"train_images, test_images = train_images\/255.0 , test_images\/255.0","8ae523b8":"class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer','dog', 'frog', 'horse', 'ship', 'truck']\n\n\nplt.figure(figsize=(12,12))\nfor i in range(30):\n  plt.subplot(5,6,i+1)\n  plt.xticks([])\n  plt.yticks([])\n  plt.grid(False)\n  plt.imshow(train_images[i])\n  plt.xlabel(class_names[train_labels[i][0]])\nplt.show()  ","e0d71ded":"model = models.Sequential([\n                           layers.experimental.preprocessing.Rescaling(1.\/255,input_shape=(32,32,3)),\n                           layers.Conv2D(32,(3,3), activation='relu'),\n                           layers.MaxPooling2D((2,2)),\n                           layers.Conv2D(64,(3,3), activation='relu'),\n                           layers.MaxPooling2D((2,2)),\n                           layers.Conv2D(64,(3,3), activation='relu'),\n                           layers.Flatten(),\n                           layers.Dense(64, activation='relu'),\n                           layers.Dense(10)\n])","ecccc7bb":"model.summary()","8bac6872":"model.compile(optimizer='adam', \n              loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), \n              metrics=['accuracy'])\nhistory = model.fit(train_images, train_labels, epochs=10, validation_data=(test_images, test_labels))","66acbfd0":"plt.plot(history.history['accuracy'], label='Accuracy')\nplt.plot(history.history['val_accuracy'], label='Val_Accuracy')\nplt.xlabel(\"Epochs\")\nplt.ylabel(\"Accuracy\")\nplt.legend(loc='lower right')\ntest_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2)","49df21cb":"print(test_acc)","631a53a3":"**Creating Models**\n\n\n---\n\n\n\n---\n\n","30289343":"**Model Evaluation**\n\n\n---\n\n\n\n---\n\n","41959da7":"**Train Model**\n\n\n---\n\n\n\n---\n\n"}}