{"cell_type":{"096c0e1f":"code","35b4c46c":"code","ffc7ad01":"code","f427b100":"code","637657b3":"code","f0780e35":"code","3b7c3bfa":"code","e135e1ef":"code","c8cd89e5":"code","7db1c80d":"code","6172d175":"code","313c525a":"code","81022390":"code","d2f3c3e5":"code","f2a89fa3":"code","724ab795":"code","549ea908":"code","cbcdc12e":"code","c0526320":"code","ee019cfb":"code","44ada34d":"code","2d491ba1":"code","a7c0f474":"code","fbfa92f2":"code","3bb49e85":"code","bf5952d5":"code","40fc0394":"code","06aa05fb":"code","cdf0b67b":"code","b58e9ea3":"markdown","ea3a66d0":"markdown","52a4cd82":"markdown","579dc4a4":"markdown","e81a06f4":"markdown","1957d253":"markdown","5910a295":"markdown","c9b6fb7a":"markdown","c8e41a6b":"markdown","fbccad91":"markdown","ddab4ca7":"markdown","e183d006":"markdown","8732d906":"markdown","b71f9064":"markdown","3f1bf426":"markdown","6297767f":"markdown","c69034a6":"markdown","4c7b3646":"markdown","e59020a0":"markdown","356a9c5d":"markdown","58dc9992":"markdown","dbfa0f07":"markdown"},"source":{"096c0e1f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35b4c46c":"import pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nsns.set_style(\"darkgrid\")\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom tqdm import tqdm_notebook\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import f1_score,classification_report\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA\nfrom sklearn.manifold import TSNE","ffc7ad01":"data = pd.read_csv(\"..\/input\/mf-accelerator\/contest_train.csv\")\ndata.head()","f427b100":"features = data.drop(columns=[\"ID\",\"TARGET\"])\nfeatures.head()","637657b3":"target = data.TARGET","f0780e35":"count_dict = {}\nfor col in features.columns:\n    count_dict[col] = [features[col].unique().shape[0]]\nfeats_counts = pd.DataFrame(count_dict).T\nfeats_counts.columns=[\"counts\"]\nfeats_counts.head()","3b7c3bfa":"sorted_feats = feats_counts.copy().sort_values(by=[\"counts\"])","e135e1ef":"sorted_feats[sorted_feats.counts < 2].index","c8cd89e5":"sorted_feats[sorted_feats.counts == 3].index","7db1c80d":"data.TARGET.hist()","6172d175":"features[[\"FEATURE_207\",\"FEATURE_205\",\"FEATURE_208\"]].hist();","313c525a":"features[[\"FEATURE_257\",\"FEATURE_259\"]].hist();","81022390":"features[[\"FEATURE_123\",\"FEATURE_131\",\"FEATURE_156\"]].hist();","d2f3c3e5":"def null_map(data):\n    data_to_heat = data.isnull()\n    data_to_heat.head()\n    with plt.xkcd():\n        plt.figure(figsize=(20,14))\n        colors = ['#000099', '#ffff00'] \n        sns.heatmap(data_to_heat,cmap = sns.color_palette(colors));\n        \nnull_map(features)","f2a89fa3":"na_prop_dict = {}\nfor col in features.columns:\n    na_prop_dict[col] = [features[col].isnull().astype(int).mean()]\nfeats_na_prop = pd.DataFrame(na_prop_dict).T\nfeats_na_prop.columns=[\"NAN_prop\"]\nsorted_feats_nan_prop = feats_na_prop.copy().sort_values(by=[\"NAN_prop\"],ascending=False)\nsorted_feats_nan_prop.head()","724ab795":"sorted_feats_nan_prop[sorted_feats_nan_prop.NAN_prop > 0.5]","549ea908":"features_new = features.copy().drop(columns = ['FEATURE_249', 'FEATURE_3', 'FEATURE_256', 'FEATURE_144',\"FEATURE_189\"])\nfeatures_new.head()","cbcdc12e":"def LR_feature_selection(features,max_R2=0.9):\n    '''\n    \u0424\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u0438\u0442 LR \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043d\u0430 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435\n    \u0438 \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435 R2 > max_R2\n    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0442\u043e\u0433\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 R2\n    '''\n    features = features.copy().fillna(0)\n\n    features_list = list(features.columns)\n    R2s = {}\n    for col in tqdm_notebook(features.columns):\n\n        model = LinearRegression()\n        X = features[features_list].drop(columns = [col])\n        y = features[col]\n\n        model.fit(X,y)\n\n        R2 = model.score(X,y)\n        R2s[col] = [R2]\n\n        if R2 > max_R2:\n            features_list = list(features[features_list].drop(columns = [col]).columns)\n\n    R2_df = pd.DataFrame(R2s).T\n    R2_df.columns=[\"R2\"]\n\n    return features[features_list],R2_df","c0526320":"feats_selected, R2_df = LR_feature_selection(features_new)","ee019cfb":"R2_df.plot()","44ada34d":"feats_selected.shape[1]","2d491ba1":"feats_selected.head()","a7c0f474":"def RF_feature_selection_validation(features_train,target_train,features_val,target_val, min_metric = 0.01):\n    '''\n    \u0421\u0442\u0440\u043e\u0438\u0442 RF \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u0430\u0440\u0433\u0435\u0442\u0430 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0438\u0437 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \n    \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e, \u043e\u0442\u0431\u0438\u0440\u0430\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043d\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \n\n    \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u0440\u0438\u043a\u0438\n    '''\n    assert len(features_train.columns) == len(features_val.columns) \n\n\n    features_train = features_train.copy().fillna(0)\n    target_train = target_train.copy()\n\n    features_val = features_val.copy().fillna(0)\n    target_val = target_val.copy()\n\n    features_list = list(features_train.columns)\n    metric_values = {}\n    for col in tqdm_notebook(features_train.columns):\n\n        model = RandomForestClassifier(n_estimators=10,n_jobs=-1)\n        X = features_train[[col]]\n        y = target_train\n\n        model.fit(X,y)\n\n        predictions = model.predict(features_val[[col]])\n\n        metric = f1_score(target_val, predictions,average='macro')\n    \n        metric_values[col] = [metric]\n\n        if metric < min_metric:\n            features_list = list(features_train[features_list].drop(columns = [col]).columns)\n\n    metric_values = pd.DataFrame(metric_values).T\n    metric_values.columns=[\"f1_average\"]\n\n    return features_list, metric_values","fbfa92f2":"feats_train,feats_val,labels_train,labels_val = train_test_split(feats_selected,target, test_size = 0.3,\\\n                                                                   shuffle=True,random_state=42,\\\n                                                                   stratify = target)","3bb49e85":"features_selectedRF,metric_values = RF_feature_selection_validation(feats_train,labels_train,\n                                                                      feats_val,labels_val,\n                                                                      min_metric = 0.3)","bf5952d5":"metric_values.plot()","40fc0394":"len(features_selectedRF)","06aa05fb":"X_scaled = StandardScaler().fit_transform(data[features_selectedRF].copy().fillna(0))\n\nX_pca =  PCA(n_components=2).fit_transform(X_scaled)\npca_df = pd.DataFrame(X_pca,columns=[\"component1\",\"component2\"])\npca_df['target'] = target\nplt.figure(figsize=(14,10))\nsns.scatterplot(data=pca_df, x=\"component1\", y=\"component2\", hue=\"target\",alpha=0.5)","cdf0b67b":"X_embedded = TSNE(n_components=2).fit_transform(X_scaled)\ntsne_df = pd.DataFrame(X_embedded,columns=[\"component1\",\"component2\"])\ntsne_df['target'] = target\nplt.figure(figsize=(14,10))\nsns.scatterplot(data=tsne_df, x=\"component1\", y=\"component2\", hue=\"target\",alpha=0.5)","b58e9ea3":"\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 260 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e 69. \u041e\u0442\u043c\u0435\u0447\u0443, \u043e\u0434\u043d\u0430\u043a\u043e, \u0447\u0442\u043e \u0432 \u0441\u043e\u0440\u0435\u0432\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0430 \u043d\u0435 \u0434\u0430\u043b\u043e, \u0434\u0430\u0436\u0435 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442. \n\n\u0421\u043b\u043e\u0436\u043d\u044b\u0435 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0430\u043d\u0441\u0430\u043c\u0431\u043b\u0435\u0439 \u0438\u0437 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u044b \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u0437, \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0437\u0433\u043b\u044f\u0434, \u0434\u0430\u0436\u0435 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u044d\u0442\u043e \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c. \n\n\u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u044b \u043f\u043e \u0441\u0435\u043b\u0435\u043a\u0446\u0438\u0438 \u044f \u0437\u0434\u0435\u0441\u044c \u043f\u043e\u043c\u0435\u0449\u0430\u044e \u0441\u043a\u043e\u0440\u0435\u0435 \u0434\u043b\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438. ","ea3a66d0":"\u041e\u0442\u0431\u0435\u0440\u0435\u043c \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438.","52a4cd82":"\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c, \u043a\u0430\u043a\u0438\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c.","579dc4a4":"# \u041f\u0435\u0440\u0432\u0438\u0447\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u0438 \u0441\u0435\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\n\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b: \u0413\u043b\u0430\u0437\u0443\u043d\u043e\u0432 \u0410.\u0412.","e81a06f4":"\u041e\u0442\u0431\u0435\u0440\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438","1957d253":"\u041d\u0435\u0441\u043c\u043e\u0442\u0440\u044f \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432\u0438\u0434\u043d\u044b \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f, \u0445\u043e\u0447\u0443 \u043e\u0442\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430 \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u0441\u043b\u043e\u0436\u043d\u0430, \u043d\u0430 \u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043c\u044b.","5910a295":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435 3 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","c9b6fb7a":"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u043d\u043e\u0442\u0435 \u043e\u043f\u0438\u0448\u0443 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f \u043e\u0431\u0440\u0430\u0442\u0438\u043b \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u043e\u043c \u0430\u043d\u0430\u043b\u0438\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432 \u0441\u0432\u043e\u0438\u0445 \u043f\u043e\u043f\u044b\u0442\u043a\u0430\u0445 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.","c8e41a6b":"\u041f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e","fbccad91":"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","ddab4ca7":"\u0422\u0435\u043f\u0435\u0440\u044c \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 \u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u0442\u0440\u043e\u0438\u0442\u044c random_forest \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438. \n\n\u041e\u0442\u043c\u0435\u0447\u0443,\u0447\u0442\u043e \u0437\u0434\u0435\u0441\u044c \u043c\u044b \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u043e\u0442\u0435\u0440\u044f\u0435\u043c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043d\u0430\u0439\u0442\u0438 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438, \u043d\u043e \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u0431\u0443\u0434\u0435\u0442.","e183d006":"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u043f\u043e\u0445\u043e\u0436\u0438 \u043b\u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u0442\u0430\u0440\u0433\u0435\u0442, \u0432\u0434\u0440\u0443\u0433 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438?","8732d906":"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043e\u0442\u0431\u043e\u0440\u0430","b71f9064":"\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u044f\u043c\u0430\u044f \u0441\u0432\u044f\u0437\u044c \u0441 \u0442\u0430\u0440\u0433\u0435\u0442\u043e\u043c \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0443 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","3f1bf426":"\u041d\u0430 \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u0432\u0438\u0434\u0435\u043d\u043e, \u0447\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u043c\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0438\u0445 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u0431\u0440\u0430\u0442\u044c \u0434\u0430\u043b\u044c\u0448\u0435.","6297767f":"\u041c\u044b \u0443\u0434\u0430\u043b\u0438\u043b\u0438 \u0438\u0437 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044f \u043f\u043e\u0447\u0442\u0438 100 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c:","c69034a6":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435 \u043e\u043d\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e","4c7b3646":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043f\u043b\u043e\u0441\u043a\u043e\u0441\u0442\u0438, \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 2 \u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b, \u0430 \u0437\u0430\u0442\u0435\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0443\u0436\u0435 \u043d\u0435\u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0433\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438 tsne","e59020a0":"\u0423\u0434\u0430\u043b\u044f\u0435\u043c 189.","356a9c5d":"\u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u044d\u0442\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u0435 \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b.","58dc9992":"\u041f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0433\u0434\u0435 \u0442\u043e\u043b\u044c\u043a\u043e 1 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435","dbfa0f07":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u0432 (\u0436\u0435\u043b\u0442\u043e\u0435 \u043d\u0430 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435)"}}