{"cell_type":{"a679c7ed":"code","1f085540":"code","f9571539":"code","d8701789":"code","d097c00e":"code","42ca0b4f":"code","1978eacf":"code","8fc12c3f":"code","d8aab5b9":"code","c0e105ce":"code","aed0afa4":"code","bba22272":"code","135f6f6e":"code","b01d01dd":"code","5fdc5e63":"code","7eeb4feb":"code","bf884cbb":"code","6b9e8e58":"code","69b685da":"code","b5589c48":"code","6c64021d":"code","a4ef1e21":"code","c46e87eb":"code","06fdc78b":"code","e8964b49":"code","86a99c49":"code","78ce8966":"code","bd0e49e4":"code","13bd9147":"code","9a522ac4":"code","bf6d3ac7":"code","5b27c1b9":"code","1c6912f1":"code","6a561b00":"code","42952267":"code","fd040f67":"code","70a7f2ed":"code","f6412ee2":"code","07fb2b43":"code","c57c1570":"code","7a792480":"code","b3d929ae":"markdown","343ac559":"markdown"},"source":{"a679c7ed":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f085540":"import matplotlib.pyplot as plt\nimport seaborn as sns\ndata = pd.read_csv('\/kaggle\/input\/usa-cers-dataset\/USA_cars_datasets.csv', index_col = 0)","f9571539":"data.info()","d8701789":"data.describe().transpose()","d097c00e":"print(f'This dataset has {data.shape[0]} rows')\nprint(f'This dataset has {data.shape[1]} columns')","42ca0b4f":"data.isnull().sum()","1978eacf":"data.head()","8fc12c3f":"print('Unique car brands: ',data['brand'].nunique())\nprint('Unique car models: ',data['model'].nunique())","d8aab5b9":"plt.figure(figsize = (18,8))\nsns.countplot(data['brand'])\nplt.tight_layout()\nplt.xticks(rotation = 90)\nplt.xlabel('Car Brands', fontsize = 20)\nplt.xticks(fontsize = 15)\nplt.show()","c0e105ce":"plt.figure(figsize = (25,8))\nsns.countplot(data['model'])\nplt.tight_layout()\nplt.xticks(rotation = 90)\nplt.xlabel('Car Models', fontsize = 25)\nplt.xticks(fontsize = 15)\nplt.show()","aed0afa4":"print(f'Most auctioned off car models: \\n{data[\"model\"].value_counts().head()}')","bba22272":"plt.figure(figsize = (18,8))\ndata.groupby('brand')['price'].mean().sort_values(ascending = False).plot.bar()\nplt.xticks(rotation = 90, fontsize = 20)\nplt.ylabel('Mean Price')\nplt.xlabel('Car Brands', fontsize = 25)\nplt.tight_layout()\nplt.show()","135f6f6e":"print(f'Most auctioned off car brands: \\n{data[\"brand\"].value_counts().head()}')","b01d01dd":"plt.figure(figsize = (20,8))\ndata.groupby('model')['price'].mean().sort_values(ascending = False).plot.bar()\nplt.xticks(rotation = 90)\nplt.ylabel('Mean Price')\nplt.xlabel('Car Models', fontsize = 25)\nplt.tight_layout()\nplt.show()","5fdc5e63":"data.head()","7eeb4feb":"plt.figure(figsize = (25,7))\nsns.countplot(data['color'])\nplt.xticks(rotation = 90, fontsize = 13)\nplt.xlabel('Color', fontsize = 20)\nplt.title('Most used colors on cars')\nplt.show()","bf884cbb":"print('Mean price for a car: ', round(data['price'].mean(),2))","6b9e8e58":"plt.figure(figsize = (15,8))\nsns.distplot(data['price'])\nplt.xlabel('Price', fontsize = 20)\nplt.show()","69b685da":"df = data.agg({'price': ['sum', 'min', 'max','median'], 'mileage': ['sum', 'min','max','median']})","b5589c48":"df","6c64021d":"print('Max Year: ', data['year'].max())\nprint('Min Year: ', data['year'].min())","a4ef1e21":"print(f'Average price per year: \\n{data.groupby(\"year\")[\"price\"].mean().sort_values(ascending = False)}')","c46e87eb":"plt.figure(figsize = (18,8))\ndata.groupby('year')['price'].mean().sort_values(ascending = False).plot.bar()\nplt.xticks(rotation = 0)\nplt.title('Average price of a car per year', fontsize = 25, pad = 10)\nplt.xlabel('Years',fontsize = 25)\nplt.show()","06fdc78b":"plt.figure(figsize = (18,8))\nsns.scatterplot(data['year'], data['mileage'])\nplt.xlabel('Years',fontsize = 25)\nplt.ylabel('Mileage')\nplt.show()","e8964b49":"plt.figure(figsize = (20,8))\nsns.boxplot(data['year'], data['price'])\nplt.xlabel('Years',fontsize = 25)\nplt.ylabel('Price')\nplt.show()","86a99c49":"print('Average mileage for an auction car: ', data['mileage'].mean())","78ce8966":"print('Different car colors: ',data['color'].nunique())","bd0e49e4":"print('States in this dataset: ',data['state'].nunique())","13bd9147":"plt.figure(figsize = (18,8))\nsns.countplot(sorted(data['state']))\nplt.xticks(rotation = 90)\nplt.xlabel('States', fontsize = 20)\nplt.show()","9a522ac4":"plt.figure(figsize = (18,8))\ndata.groupby('state')['price'].mean().sort_values(ascending = False).plot.bar()\nplt.title('Average price for a car per state', fontsize = 25, pad = 10)\nplt.xlabel('States', fontsize = 15)\nplt.tight_layout()\nplt.show()","bf6d3ac7":"print(f'States that auction the most cars: \\n{data.groupby(\"state\")[\"brand\"].count()}')","5b27c1b9":"print('Unique countries in this dataset: ',data['country'].nunique())","1c6912f1":"data['country'].unique()","6a561b00":"plt.figure(figsize = (15,8))\nsns.countplot(data['country'])\nplt.xlabel('Country', fontsize = 20)\nplt.show()","42952267":"plt.figure(figsize = (18,7))\nsns.countplot(data['brand'], hue = data['country'])\nplt.title('Cars auctioned of in the US and Canada', fontsize = 25, pad = 10)\nplt.tight_layout()\nplt.xticks(rotation = 90, fontsize = 15)\nplt.xlabel('Brand', fontsize = 20)\nplt.show()","fd040f67":"print(f'The only cars being auctioned in canada: \\n{data[data[\"country\"] ==  \" canada\"][\"brand\"]}')","70a7f2ed":"data['country'].value_counts()","f6412ee2":"print('Mean price for a car in the US: ',round(data[data['country'] == ' usa']['price'].mean(),2))\nprint('Mean price for a car in Canada: ',round(data[data['country'] == ' canada']['price'].mean(),2))","07fb2b43":"print(f'Total of clean and salvaged vehicles: \\n{data[\"title_status\"].value_counts()}')","c57c1570":"print(f'Average price for a clean and salvaged vehicle: \\n{data.groupby(\"title_status\")[\"price\"].mean()}')","7a792480":"plt.figure(figsize = (18,8))\nsns.swarmplot(data['title_status'], data['price'])\nplt.xlabel('Title Status', fontsize = 20)\nplt.ylabel('Price', fontsize = 20)\nplt.show()","b3d929ae":"![](https:\/\/estaticos.efe.com\/efecom\/recursos2\/imagen.aspx?lVW2oAh2vjO1Ph965nvplqxhRgK-P-2bMsMYQ4TncnkXVSTX-P-2bAoG0sxzXPZPAk5l-P-2fU5UQPtGbMWtd4o6jEass3B0Tw-P-3d-P-3d)","343ac559":"# US Car Dataset"}}