{"cell_type":{"77a5cd21":"code","66b89f07":"code","def3902b":"code","2984244f":"code","b9323f94":"code","84fbb86c":"code","0532cb0e":"code","90729538":"code","00395380":"code","0f09bb61":"code","b605288f":"code","2f8171f4":"code","5ade8fee":"code","c696474d":"code","877a3fef":"code","7fe40aef":"code","6981d173":"code","420dbecd":"markdown","31cb7a08":"markdown","06dbc3f4":"markdown","dcaf6d2d":"markdown"},"source":{"77a5cd21":"!ls -lah ..\/input","66b89f07":"!pip install ..\/input\/sacremoses\/sacremoses-master\/\n!pip install ..\/input\/transformers\/transformers-master\/","def3902b":"import re\nimport gc\nimport pickle\nimport numpy as np\nimport pandas as ps\nfrom tqdm.auto import tqdm\nfrom pathlib import Path\nfrom itertools import chain\nfrom collections import Counter\nfrom abc import ABC, abstractmethod\nfrom typing import List, Dict, Tuple, Set\nfrom transformers import BertTokenizer\n\nimport numpy as np\nimport pandas as ps\n\nimport matplotlib.pyplot as plt\nimport seaborn as sbn\n\n%matplotlib inline","2984244f":"data_dir = Path('..') \/ 'input' \/ 'google-quest-challenge'\ninput_dir = Path('..') \/ 'input'\n\ntokenizer = BertTokenizer.from_pretrained(\"..\/input\/pretrained-bert-including-scripts\/uncased_L-12_H-768_A-12\/uncased_L-12_H-768_A-12\")\n\ntrain_df = ps.read_csv(data_dir \/ 'train.csv')\ntest_df = ps.read_csv(data_dir \/ 'test.csv')","b9323f94":"def combined_len(title, body, answer):\n    return len([\"[CLS]\"] + tokenizer.tokenize(title + \",\" + body) + [\"[SEP]\"] + tokenizer.tokenize(answer) + [\"[SEP]\"])\n\ndef title_body_len(title, body):\n    return len(tokenizer.tokenize(title + \",\" + body))\n    \ndef field_len(feature):\n    return len(tokenizer.tokenize(feature))\n\n\nfor df in (train_df, test_df):\n    df[\"sequences_len\"] = df.apply(lambda row: combined_len(row[\"question_title\"], row[\"question_body\"], row[\"answer\"]), axis=1)\n    df[\"title_body_len\"] = df.apply(lambda row: title_body_len(row[\"question_title\"], row[\"question_body\"]), axis=1)\n    df[\"title_len\"] = df[\"question_title\"].apply(field_len)\n    df[\"body_len\"] = df[\"question_body\"].apply(field_len)\n    df[\"answer_len\"] = df[\"answer\"].apply(field_len)","84fbb86c":"def mean_std(tr_vals, ts_vals):\n    items = list(tr_vals) + list(ts_vals)\n    return np.mean(items), np.std(items)","0532cb0e":"mean_std(train_df[\"title_body_len\"].values, test_df[\"title_body_len\"].values), mean_std(train_df[\"answer_len\"].values, test_df[\"answer_len\"].values)","90729538":"for df in (train_df, test_df):\n    df[\"title_str_len\"] = df[\"question_title\"].str.len()\n    df[\"body_str_len\"] = df[\"question_body\"].str.len()\n    df[\"answer_str_len\"] = df[\"answer\"].str.len()","00395380":"mean_std(train_df[\"title_str_len\"].values, test_df[\"title_str_len\"].values), \\\nmean_std(train_df[\"body_str_len\"].values, test_df[\"body_str_len\"].values), \\\nmean_std(train_df[\"answer_str_len\"].values, test_df[\"answer_str_len\"].values) ","0f09bb61":"def num_alpha(s):\n    return sum(1 for c in s if c.isalpha())\n\ndef num_nums(s):\n    return sum(1 for c in s if c.isnumeric())\n\ndef low_num(s):\n    return sum(1 for c in s if c.islower())\n\ndef upper_num(s):\n    return sum(1 for c in s if c.isupper())\n\ndef spaces_num(s):\n    return sum(1 for c in s if c.isspace())\n\ndef num_words(s):\n    return len(s.split())\n\n\nfor df in (train_df, test_df):\n    df[\"title_str_alpha_num\"] = df[\"question_title\"].apply(num_alpha)\n    df[\"title_str_nums_num\"] = df[\"question_title\"].apply(num_nums)\n    df[\"title_str_lows_num\"] = df[\"question_title\"].apply(low_num)\n    df[\"title_str_ups_num\"] = df[\"question_title\"].apply(upper_num)\n    df[\"title_str_spaces_num\"] = df[\"question_title\"].apply(spaces_num)\n    df[\"title_str_words_num\"] = df[\"question_title\"].apply(num_words)\n    \n    df[\"body_str_alpha_num\"] = df[\"question_body\"].apply(num_alpha)\n    df[\"body_str_nums_num\"] = df[\"question_body\"].apply(num_nums)\n    df[\"body_str_lows_num\"] = df[\"question_body\"].apply(low_num)\n    df[\"body_str_ups_num\"] = df[\"question_body\"].apply(upper_num)\n    df[\"body_str_spaces_num\"] = df[\"question_body\"].apply(spaces_num)\n    df[\"body_str_words_num\"] = df[\"question_body\"].apply(num_words)\n    \n    df[\"answer_str_alpha_num\"] = df[\"answer\"].apply(num_alpha)\n    df[\"answer_str_nums_num\"] = df[\"answer\"].apply(num_nums)\n    df[\"answer_str_lows_num\"] = df[\"answer\"].apply(low_num)\n    df[\"answer_str_ups_num\"] = df[\"answer\"].apply(upper_num)\n    df[\"answer_str_spaces_num\"] = df[\"answer\"].apply(spaces_num)\n    df[\"answer_str_words_num\"] = df[\"answer\"].apply(num_words)","b605288f":"mean_std(train_df[\"title_str_alpha_num\"].values, test_df[\"title_str_alpha_num\"].values), \\\nmean_std(train_df[\"title_str_nums_num\"].values, test_df[\"title_str_nums_num\"].values), \\\nmean_std(train_df[\"title_str_lows_num\"].values, test_df[\"title_str_lows_num\"].values), \\\nmean_std(train_df[\"title_str_ups_num\"].values, test_df[\"title_str_ups_num\"].values), \\\nmean_std(train_df[\"title_str_spaces_num\"].values, test_df[\"title_str_spaces_num\"].values), \\\nmean_std(train_df[\"title_str_words_num\"].values, test_df[\"title_str_words_num\"].values)","2f8171f4":"mean_std(train_df[\"body_str_alpha_num\"].values, test_df[\"body_str_alpha_num\"].values), \\\nmean_std(train_df[\"body_str_nums_num\"].values, test_df[\"body_str_nums_num\"].values), \\\nmean_std(train_df[\"body_str_lows_num\"].values, test_df[\"body_str_lows_num\"].values), \\\nmean_std(train_df[\"body_str_ups_num\"].values, test_df[\"body_str_ups_num\"].values), \\\nmean_std(train_df[\"body_str_spaces_num\"].values, test_df[\"body_str_spaces_num\"].values), \\\nmean_std(train_df[\"body_str_words_num\"].values, test_df[\"body_str_words_num\"].values)","5ade8fee":"mean_std(train_df[\"answer_str_alpha_num\"].values, test_df[\"answer_str_alpha_num\"].values), \\\nmean_std(train_df[\"answer_str_nums_num\"].values, test_df[\"answer_str_nums_num\"].values), \\\nmean_std(train_df[\"answer_str_lows_num\"].values, test_df[\"answer_str_lows_num\"].values), \\\nmean_std(train_df[\"answer_str_ups_num\"].values, test_df[\"answer_str_ups_num\"].values), \\\nmean_std(train_df[\"answer_str_spaces_num\"].values, test_df[\"answer_str_spaces_num\"].values), \\\nmean_std(train_df[\"answer_str_words_num\"].values, test_df[\"answer_str_words_num\"].values)","c696474d":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(17, 7))\n\nsbn.distplot(train_df[\"sequences_len\"].values, norm_hist=False, ax=ax1)\nax1.set_xlabel(\"sequence length\")\nax1.set_title(\"Num records with len > 512: \" + str(np.sum(train_df[\"sequences_len\"].values > 512)) + f\", total - {train_df.shape[0]}\");\n\nsbn.distplot(test_df[\"sequences_len\"].values, norm_hist=False, ax=ax2)\nax2.set_xlabel(\"sequence length\")\nax2.set_title(\"Num records with len > 512: \" + str(np.sum(test_df[\"sequences_len\"].values > 512)) + f\", total - {test_df.shape[0]}\");","877a3fef":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(17, 7))\n\nsbn.distplot(train_df[\"title_len\"].values, norm_hist=False, ax=ax1)\nax1.set_xlabel(\"sequence length\")\nax1.set_title(\"Num records with len > 512: \" + str(np.sum(train_df[\"title_len\"].values > 512)) + f\", total - {train_df.shape[0]}\");\n\nsbn.distplot(test_df[\"title_len\"].values, norm_hist=False, ax=ax2)\nax2.set_xlabel(\"sequence length\")\nax2.set_title(\"Num records with len > 512: \" + str(np.sum(test_df[\"title_len\"].values > 512)) + f\", total - {test_df.shape[0]}\");","7fe40aef":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(17, 7))\n\nsbn.distplot(train_df[\"body_len\"].values, norm_hist=False, ax=ax1)\nax1.set_xlabel(\"sequence length\")\nax1.set_title(\"Num records with len > 512: \" + str(np.sum(train_df[\"body_len\"].values > 512)) + f\", total - {train_df.shape[0]}\");\n\nsbn.distplot(test_df[\"body_len\"].values, norm_hist=False, ax=ax2)\nax2.set_xlabel(\"sequence length\")\nax2.set_title(\"Num records with len > 512: \" + str(np.sum(test_df[\"body_len\"].values > 512)) + f\", total - {test_df.shape[0]}\");","6981d173":"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(17, 7))\n\nsbn.distplot(train_df[\"answer_len\"].values, norm_hist=False, ax=ax1)\nax1.set_xlabel(\"sequence length\")\nax1.set_title(\"Num records with len > 512: \" + str(np.sum(train_df[\"answer_len\"].values > 512)) + f\", total - {train_df.shape[0]}\");\n\nsbn.distplot(test_df[\"answer_len\"].values, norm_hist=False, ax=ax2)\nax2.set_xlabel(\"sequence length\")\nax2.set_title(\"Num records with len > 512: \" + str(np.sum(test_df[\"answer_len\"].values > 512)) + f\", total - {test_df.shape[0]}\");","420dbecd":"## Distribution of `question_title` lengths","31cb7a08":"## Distribution of `answer` lengths","06dbc3f4":"## Combined sequence length distributions","dcaf6d2d":"## Distribution of `body_len` lengths"}}