{"cell_type":{"80a802d3":"code","845cf673":"code","f87b9702":"code","658d0d2d":"code","c13ad9e4":"code","81f70e59":"code","0a09e10a":"code","6066fab1":"code","785f1084":"code","25d7a212":"code","b55eeaec":"code","8f97a7cb":"code","36ea9844":"code","d9369ae3":"code","55fd8092":"code","858de2b3":"code","91781d14":"code","0caeacb8":"markdown","97b38d53":"markdown","0d258e61":"markdown","b25352c8":"markdown","d1e022c0":"markdown","fb918ed6":"markdown","5b7d1233":"markdown","739ef910":"markdown","27c98981":"markdown","4ef46617":"markdown","4c4b51a6":"markdown","589e4ddf":"markdown","851a457c":"markdown"},"source":{"80a802d3":"import numpy as np\nimport pandas as pd\nfrom sklearn import preprocessing\n%matplotlib inline","845cf673":"# Load Data\ndf = pd.read_csv('\/kaggle\/input\/nasa-asteroids-classification\/nasa.csv')\ndf.head()","f87b9702":"df['Hazardous'].value_counts()","658d0d2d":"df.corr()['Hazardous']","c13ad9e4":"# Show independent variable names\ndf.columns","81f70e59":"# Discard columns with identical values, identifiers, etc.\nX = df[['Absolute Magnitude', 'Est Dia in Feet(min)', 'Est Dia in Feet(max)', 'Epoch Date Close Approach', 'Relative Velocity km per hr', 'Miles per hour','Miss Dist.(miles)','Orbit Uncertainity','Minimum Orbit Intersection', 'Jupiter Tisserand Invariant','Epoch Osculation', 'Eccentricity', 'Semi Major Axis', 'Inclination','Asc Node Longitude', 'Orbital Period', 'Perihelion Distance','Perihelion Arg', 'Aphelion Dist', 'Perihelion Time', 'Mean Anomaly','Mean Motion']]\nX[0:5]","0a09e10a":"X.info()","6066fab1":"X = preprocessing.StandardScaler().fit(X).transform(X.astype(float))\nX[0:5]","785f1084":"y = df['Hazardous'].values\ny[0:5]","25d7a212":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.3)\nprint ('Train set:', X_train.shape,  y_train.shape)\nprint ('Test set:', X_test.shape,  y_test.shape)","b55eeaec":"from sklearn.neighbors import KNeighborsClassifier\nneighbors = KNeighborsClassifier(n_neighbors=3).fit(X_train, y_train)\nneighbors","8f97a7cb":"# Predict using 3-NN Classifier\ny_hat = neighbors.predict(X_test)\ny_hat[0:5]","36ea9844":"from sklearn import metrics\nprint(\"Train set Accuracy: \", metrics.accuracy_score(y_train, neighbors.predict(X_train)))\nprint(\"Test set Accuracy: \", metrics.accuracy_score(y_test, y_hat))","d9369ae3":"neighbors_1 = KNeighborsClassifier(n_neighbors=5).fit(X_train, y_train)\n\ny_hat_1 = neighbors_1.predict(X_test)\n\nprint(neighbors_1)\nprint(metrics.accuracy_score(y_train, neighbors_1.predict(X_train)))\nprint(metrics.accuracy_score(y_test, y_hat_1))","55fd8092":"Ks = 10\nmean_acc = np.zeros((Ks-1))\nstd_acc = np.zeros((Ks-1))\nConfustionMx = [];\nfor n in range(1,Ks):\n    \n    #Train Model and Predict  \n    neighbors = KNeighborsClassifier(n_neighbors = n).fit(X_train,y_train)\n    y_hat=neighbors.predict(X_test)\n    mean_acc[n-1] = metrics.accuracy_score(y_test, y_hat)\n\n    \n    std_acc[n-1]=np.std(y_hat==y_test)\/np.sqrt(y_hat.shape[0])\n\nmean_acc","858de2b3":"print( \"The best accuracy of\", mean_acc.max(), \"was measured with k=\", mean_acc.argmax()+1) ","91781d14":"print('prediction set:', y_hat_1[0:5])\nprint('test set:      ', y_test[0:5])","0caeacb8":"## Construct feature set","97b38d53":"## Next Steps\n1. Use smaller feature set to avoid overfitting - strongly-correlated values (orbit_uncertainty, absolute_mangitude, minimum_orbit_intersection)\n2. Better evaluation of model with multiple folds\/sizes of test\/train sets\n","0d258e61":"## Train, test, evaluate 3-NN Classifier","b25352c8":"# Construct and test models","d1e022c0":"## Train, test, evaluate 5-NN Classifier","fb918ed6":"## Split data into test and train set","5b7d1233":"## Normalize feature set","739ef910":"# Conclusion\nUsing 5 nearest-neighbors, we can train a classification model that performs at 89.8% accuracy predicting asteroid hazardousnous.","27c98981":"## Import libraries","4ef46617":"## Determine best value of K","4c4b51a6":"## Load data into dataframe","589e4ddf":"** Orbit uncertainty, absolute mangitude, and minimum orbit intersection show strongest correlation. **","851a457c":"## Understanding the dependent variable"}}