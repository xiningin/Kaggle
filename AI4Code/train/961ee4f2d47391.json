{"cell_type":{"6d570754":"code","61ff42e7":"code","23c923c6":"code","5cdb5215":"code","0d58f9a9":"code","aef2c5b1":"code","fd052ec7":"code","417b9bfb":"code","d24dc9f9":"code","ad94d9f9":"markdown","f03c27d0":"markdown","5df86836":"markdown","8d193641":"markdown","e7814b7e":"markdown"},"source":{"6d570754":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","61ff42e7":"#Importing the dataset on Feb 14 2021 ()\ndf_covid_vaccination= pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")  # read csv file","23c923c6":"#Data Cleaning\n\n#There are a lot of numerical columns which are Null\/NaN in data frame to replace them with zero. Replace Wales, Scotland, Northern Ireland and England to United Kingdom.\ndf_covid_vaccination = df_covid_vaccination.fillna(0)\ndf_covid_vaccination = df_covid_vaccination.replace(to_replace =\"Wales\", \n                 value =\"United Kingdom\")\ndf_covid_vaccination = df_covid_vaccination.replace(to_replace =\"Scotland\", \n                 value =\"United Kingdom\")  \ndf_covid_vaccination = df_covid_vaccination.replace(to_replace =\"Northern Ireland\", \n                 value =\"United Kingdom\")  \ndf_covid_vaccination = df_covid_vaccination.replace(to_replace =\"England\", \n                 value =\"United Kingdom\")  \n\n","5cdb5215":"#Explore data\nprint(df_covid_vaccination.head(10))\nprint(df_covid_vaccination.tail(10))\nprint(df_covid_vaccination.dtypes)\nprint(df_covid_vaccination.describe())","0d58f9a9":"#Compare top 10 countries \n\n#Top 10 countries with total_vaccination\ndf_covid_vaccination_agg=df_covid_vaccination.groupby(['country'])[\"total_vaccinations\"].max().reset_index()\ndf_covid_vaccination_agg=df_covid_vaccination_agg.nlargest(10,[\"total_vaccinations\"]).reset_index()\ndel df_covid_vaccination_agg['index']\ntop10_countries=df_covid_vaccination_agg['country']\nprint(df_covid_vaccination_agg)\n\n\n#Top 10 countries with people_vaccinated\ndf_covid_vaccination_agg=df_covid_vaccination.groupby(['country'])[\"people_vaccinated\"].max().reset_index()\ndf_covid_vaccination_agg=df_covid_vaccination_agg.nlargest(10,[\"people_vaccinated\"]).reset_index()\ndel df_covid_vaccination_agg['index']\ntop10_countries=df_covid_vaccination_agg['country']\nprint(df_covid_vaccination_agg)\n\n\n#Top 10 countries with people_fully_vaccinated\ndf_covid_vaccination_agg=df_covid_vaccination.groupby(['country'])[\"people_fully_vaccinated\"].max().reset_index()\ndf_covid_vaccination_agg=df_covid_vaccination_agg.nlargest(10,[\"people_fully_vaccinated\"]).reset_index()\ndel df_covid_vaccination_agg['index']\ntop10_countries=df_covid_vaccination_agg['country']\nprint(df_covid_vaccination_agg)","aef2c5b1":"#Compare top 5 countries based on total vaccinations: US, Israel, Russia, Germany and UK\n\n#US\nvariables = ['country','total_vaccinations','people_vaccinated','people_fully_vaccinated']\nUSdata = df_covid_vaccination.loc[(df_covid_vaccination['country']=='United States'),variables].max()\nprint(USdata.head())\nprint(len(USdata))\nUS_population = 330084974\nPercentage_fully_vaccinated = float(1.30822e+07\/US_population*100)\nprint(\"United State percentage of people fully vaccinated:\", Percentage_fully_vaccinated, \"%\")\nPercentage_vaccinated = float(3.70561e+07\/US_population*100)\nprint(\"United State percentage of people partially vaccinated:\", Percentage_vaccinated, \"%\")\n\n#Israel\nvariables = ['country','total_vaccinations','people_vaccinated','people_fully_vaccinated']\nIsraeldata = df_covid_vaccination.loc[(df_covid_vaccination['country']=='Israel'),variables].max()\nprint(Israeldata.head())\nprint(len(Israeldata))\nIsrael_population = 8789774\nPercentage_fully_vaccinated = float(2.45743e+06\/Israel_population*100)\nprint(\"Israel percentage of people fully vaccinated:\", Percentage_fully_vaccinated, \"%\")\nPercentage_vaccinated = float(3.82448e+06\/Israel_population*100)\nprint(\"Israel percentage of people partially vaccinated:\", Percentage_vaccinated, \"%\")\n\n#UK\nvariables = ['country','total_vaccinations','people_vaccinated','people_fully_vaccinated']\nUKdata = df_covid_vaccination.loc[(df_covid_vaccination['country']=='United Kingdom'),variables].max()\nprint(UKdata.head())\nprint(len(UKdata))\nUK_population = 68110181\nPercentage_fully_vaccinated = float(534869\/UK_population*100)\nprint(\"United Kingdom percentage of people fully vaccinated:\", Percentage_fully_vaccinated, \"%\")\nPercentage_vaccinated = float(1.45568e+07\/UK_population*100)\nprint(\"United Kingdom percentage of people partially vaccinated:\", Percentage_vaccinated, \"%\")\n\n#Russia\nvariables = ['country','total_vaccinations','people_vaccinated','people_fully_vaccinated']\nRussiadata = df_covid_vaccination.loc[(df_covid_vaccination['country']=='Russia'),variables].max()\nprint(Russiadata.head())\nprint(len(Russiadata))\nRussia_population = 144.37e+06\nPercentage_fully_vaccinated = float(1.7e+06\/Russia_population*100)\nprint(\"Russia percentage of people fully vaccinated:\", Percentage_fully_vaccinated, \"%\")\nPercentage_vaccinated = float(2.2e+06\/Russia_population*100)\nprint(\"Russia percentage of people partially vaccinated:\", Percentage_vaccinated, \"%\")\n\n#Germany\nvariables = ['country','total_vaccinations','people_vaccinated','people_fully_vaccinated']\nGermanydata = df_covid_vaccination.loc[(df_covid_vaccination['country']=='Germany'),variables].max()\nprint(Germanydata.head())\nprint(len(Germanydata))\nGermany_population = 83.13e+06\nPercentage_fully_vaccinated = float(1.33157e+06\/Germany_population*100)\nprint(\"Germany percentage of people fully vaccinated:\", Percentage_fully_vaccinated, \"%\")\nPercentage_vaccinated = float(2.63567e+06\/Russia_population*100)\nprint(\"Germany percentage of people partially vaccinated:\", Percentage_vaccinated, \"%\")\n","fd052ec7":"#Bar graph population\nlabels = ['United States', 'Israel', 'United Kingdom', 'Russia', 'Germany']\npopulation = [330084974, 8789774, 68110181, 144.37e+06, 83.13e+06 ]\nvaccinated = [3.70e+07, 3.82448e+06, 1.45568e+07, 2.2e+06, 2.63567e+06 ]\nfully_vaccinated = [1.30822e+07, 2.45743e+06, 534869, 1.7e+06, 1.33157e+06]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, population, width, label='population')\n#rects2 = ax.bar(x - width\/2, vaccinated, width, label='vaccinated')\n#rects3 = ax.bar(x + width\/2, fully_vaccinated, width, label='fully_vaccinated')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Count')\nax.set_title('Country Population 2021')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\n#autolabel(rects2)\n#autolabel(rects3)\n\nfig.tight_layout()\n\nplt.show()\n","417b9bfb":"#Bar graph Vaccination#\nlabels = ['United States', 'Israel', 'United Kingdom', 'Russia', 'Germany']\npopulation = [330084974, 8789774, 68110181, 144.37e+06, 83.13e+06 ]\nvaccinated = [3.70e+07, 3.82448e+06, 1.45568e+07, 2.2e+06, 2.63567e+06 ]\nfully_vaccinated = [1.30822e+07, 2.45743e+06, 534869, 1.7e+06, 1.33157e+06]\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, vaccinated, width, label='vaccinated')\nrects2 = ax.bar(x + width\/2, fully_vaccinated, width, label='fully_vaccinated')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Count')\nax.set_title('Vaccination')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.show()\n\n","d24dc9f9":"#Bar graph Vaccination % \n\nlabels = ['United States', 'Israel', 'United Kingdom', 'Russia', 'Germany']\npartially_vaccinated = [11.3, 43.5, 21.4, 1.5, 1.8]\nfully_vaccinated = [4.0, 27.9, 0.8, 1.2, 1.6]\n\n\nx = np.arange(len(labels))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots()\nrects1 = ax.bar(x - width\/2, partially_vaccinated, width, label='partially_vaccinated')\nrects2 = ax.bar(x + width\/2, fully_vaccinated, width, label='fully_vaccinated')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Percentage')\nax.set_title('Percentage Vaccination of Partially vs. Fully')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\n\n\ndef autolabel(rects):\n    \"\"\"Attach a text label above each bar in *rects*, displaying its height.\"\"\"\n    for rect in rects:\n        height = rect.get_height()\n        ax.annotate('{}'.format(height),\n                    xy=(rect.get_x() + rect.get_width() \/ 2, height),\n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom')\n\n\nautolabel(rects1)\nautolabel(rects2)\n\nfig.tight_layout()\n\nplt.show()","ad94d9f9":"Bar graph 3 shows how each country did with their vaccination program by percentage. The results used the population value to normalize for a fair comparison among the countries.\n1. Israel will have 50% of the population be vaccinated with first dose of vaccine and 25% of the population already fully vaccinated. Definitely, a successful case study to learn on how to effectively control a pandemic.\n2. United Kingdom has ~ 25% of the population vaccinated with first dose. However,there is less than 1% of the population being fully vaccinated due to shortage of vaccine or slow data reporting. Or the rush to vaccinate as many people as possible due to the new UK variant.\n3. United States only have 11% of the population vaccinated at first dose and 4% of the population fully vaccinated. A slow vaccination roll out due to misinformation, missed oppountuity,and mismanagement. This will be a case study for generations to learn how to avoid the missteps.\n","f03c27d0":"**Exploratory Data Analysis**","5df86836":"**Purpose: For this notebook is to start learning python from my fellow Kaggle members.\n\nCode Objective: **\n\n1. Download CSV file\n2. Learn how to code group by\n3. Work with sub-data frame\n4. Plot bar graphs","8d193641":"Bar graph 2 shows the number of people vaccinated with the assumption of they received the first vaccine dose from Pfizer or Morderna. The number of people fully vaccinated received their second dose and completed their vaccination. At the first glance, United States is doing a great job with the vaccination program by comparison to other countries. ","e7814b7e":"This bar graph 1 shows the current population for each country. United States is ~ 40X bigger than Israel. The population values were used to normalize the following data for comparison.    "}}