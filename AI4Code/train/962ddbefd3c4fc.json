{"cell_type":{"94643d28":"code","0e3dffe9":"code","dc3e2f46":"code","8fe12c12":"code","4dd6fc53":"code","b910628b":"code","94213309":"code","a3695ea9":"code","2f8b222d":"markdown","75b1b243":"markdown"},"source":{"94643d28":"import os\nimport glob\nimport shutil\nimport numpy as np\nimport pandas as pd\nfrom tqdm.notebook import tqdm\n\npd.set_option('display.max_rows', 300)","0e3dffe9":"train = pd.read_csv('..\/input\/ventilator-pressure-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/ventilator-pressure-prediction\/test.csv')\nsub = pd.read_csv('..\/input\/ventilator-pressure-prediction\/sample_submission.csv')","dc3e2f46":"train['u_in_cumsum'] = (train['u_in']).groupby(train['breath_id']).cumsum()\n\ntrain['last_value_u_in'] = train.groupby('breath_id')['u_in'].transform('last')\ntrain['u_in_lag'] = train['u_in'].shift(1)\ntrain['u_out_lag'] = train['u_out'].shift(1)\ntrain = train.fillna(0)\n\ntrain['u_in_diff'] = train['u_in'] - train['u_in_lag']\ntrain['u_out_diff'] = train['u_out'] - train['u_out_lag']\n\ntrain['breath_id__u_in__diffmax'] = train.groupby(['breath_id'])['u_in'].transform('max') - train['u_in']\ntrain['breath_id__u_in__diffmean'] = train.groupby(['breath_id'])['u_in'].transform('mean') - train['u_in']\n\ncolumns = [col for col in train.columns if col not in ['breath_id', 'pressure']]\nX = train[columns]\nY = train['pressure']","8fe12c12":"test['u_in_cumsum'] = (test['u_in']).groupby(test['breath_id']).cumsum()\n\ntest['last_value_u_in'] = test.groupby('breath_id')['u_in'].transform('last')\ntest['u_in_lag'] = test['u_in'].shift(1)\ntest['u_out_lag'] = test['u_out'].shift(1)\ntest = test.fillna(0)\n\ntest['u_in_diff'] = test['u_in'] - test['u_in_lag']\ntest['u_out_diff'] = test['u_out'] - test['u_out_lag']\n\ntest['breath_id__u_in__diffmax'] = test.groupby(['breath_id'])['u_in'].transform('max') - test['u_in']\ntest['breath_id__u_in__diffmean'] = test.groupby(['breath_id'])['u_in'].transform('mean') - test['u_in']\n\ncolumns = [col for col in test.columns if col not in ['breath_id']]\nt_x = test[columns]","4dd6fc53":"params = {'objective': 'regression',\n          'learning_rate': 0.5,\n          \"boosting_type\": \"gbdt\",\n          \"metric\": 'mae',\n          'n_jobs': -1}","b910628b":"import lightgbm as lgb\nfrom sklearn import metrics\nfrom sklearn.model_selection import GroupKFold\n\nn_splits = 5\npreds = np.zeros((sub.shape[0], 1), dtype=np.float64)\ngkfold = GroupKFold(n_splits=n_splits)\nfor i, (idx_train, idx_val) in enumerate(gkfold.split(X, Y, groups=train['breath_id'])):\n    print(f'STARTING FOLD :- {i+1}')\n    x_train, x_val, y_train, y_val = X.iloc[idx_train], X.iloc[idx_val], Y.iloc[idx_train], Y.iloc[idx_val]\n    model = lgb.LGBMRegressor(**params, n_estimators=20000)\n    model.fit(x_train, y_train, eval_set=[(x_train, y_train), (x_val, y_val)], verbose=100,\n              early_stopping_rounds = 50,eval_metric='l2')\n    print(metrics.mean_absolute_error(y_val, model.predict(x_val)))\n    preds+=model.predict(t_x).reshape(-1, 1)\npreds\/=n_splits","94213309":"print(preds)","a3695ea9":"sub['pressure'] = preds\nsub.to_csv('submission.csv', index=False)\nsub.head(10)","2f8b222d":"<h4>This notebook uses LGBM <\/h4>\n<h5>I will keep updating the hyper-parameters<\/h5>\n<font color='red'><h3>PLEASE DON'T FORGET TO UPVOTE<\/h3>","75b1b243":"**Version 2**: A starter model <\/br>\n**Version 3**:\nAdded 'u_in_cumsum'(refer to: https:\/\/www.kaggle.com\/c\/ventilator-pressure-prediction\/discussion\/273974)"}}