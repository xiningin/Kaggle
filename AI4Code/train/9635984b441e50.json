{"cell_type":{"e9eb2ee2":"code","493bf57f":"code","9e857fbb":"code","9bb731d2":"code","46503843":"code","9cf93d15":"code","d30e96b9":"code","30d7f9e6":"code","6fb2954a":"code","6291575f":"code","93fd55f4":"markdown","7c45ec29":"markdown","158b2f54":"markdown","05be9fbe":"markdown","62b110ce":"markdown","6f668fb9":"markdown","826fc070":"markdown"},"source":{"e9eb2ee2":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport pandas as pd\nimport seaborn as sns\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","493bf57f":"# Admission_Predict.csv has 400 rows and Admission_Predict_Ver1.1.csv has 500 rows.\n# Admission_Predict_Ver1.1 has the first 400 rows are the same as Admission_Predict and it has extra 100 rows. Therefore I'm using it.\ndf=pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","9e857fbb":"#Column LOR and Chance of Admit has an unnecessary extra space at the end, Removing it.\n\ndf.rename(columns={'LOR ': 'LOR'}, inplace=True)\ndf.rename(columns={'Chance of Admit ': 'Chance of Admit'}, inplace=True)","9bb731d2":"#  We have different libraries to normalize the data like MinMaxScaler and StandardScaler but I'm normalizing it manually\n\ndf['GRE Score']=df['GRE Score']\/340\ndf['TOEFL Score']=df['TOEFL Score']\/120\ndf['University Rating']=df['University Rating']\/5\ndf['SOP']=df['SOP']\/5\ndf['LOR']=df['LOR']\/5\ndf['CGPA']=df['CGPA']\/10","46503843":"# Lets check the distribution of data\n\ndf.hist(bins=50, figsize=(20, 10))\nplt.show()","9cf93d15":"# Let see how values are correlated\n\ncorr = df.corr()\nfig, ax = plt.subplots(figsize=(8, 8))\ncolormap = sns.diverging_palette(250, 15, s=75, l=40,n=9, center=\"dark\")\ndropSelf = np.zeros_like(corr)\ndropSelf[np.triu_indices_from(dropSelf)] = True\nsns.heatmap(corr, cmap=colormap, linewidths=.5, annot=True, fmt=\".2f\", mask=dropSelf)\nplt.show()","d30e96b9":"#Linear regression works well when data is normally distributed, checking if data has normal distribution\n\ndf.drop('Chance of Admit', axis=1).corrwith(df['Chance of Admit']).plot(kind='bar', grid=True, figsize=(10, 5), title=\"Correlation with Chance of Admit\")","30d7f9e6":"# Linear regression works well when data is normally distributed, checking if data has normal distribution\n\nres = stats.probplot(df['TOEFL Score'], plot=plt)\nplt.title(\"Probplot for TOEFL Score\")\nplt.show()\nres = stats.probplot(df['CGPA'], dist=\"norm\", plot=plt)\nplt.title(\"Probplot for CGPA\")\nplt.show()\nres = stats.probplot(df['GRE Score'], dist=\"norm\", plot=plt)\nplt.title(\"Probplot for GRE Score\")\nplt.show()","6fb2954a":"from sklearn import linear_model\nfrom sklearn.model_selection import train_test_split \n\ndf_y=df['Chance of Admit']\ndf.drop('Serial No.', axis=1,inplace=True)\ndf.drop('Chance of Admit', axis=1,inplace=True)\nX_train, X_test, y_train, y_test = train_test_split(df, df_y, test_size=0.2,random_state=11) \nreg = linear_model.LinearRegression() \nreg.fit(X_train, y_train) \n\n\nprint('R Squared: {:.2f}'.format(reg.score(X_test, y_test)*100)) \nprint('Adjusted R Squared: {:.2f}'.format((1 - (1-reg.score(X_test, y_test))*(len(df_y)-1)\/(len(df_y)-df.shape[1]-1))*100)) ","6291575f":"print(reg.coef_)\nimportance=reg.coef_\nimportance=pd.Series(reg.coef_,index =['GRE Score','TOEFL Score','University Rating','SOP','LOR','CGPA','Research'])\nimportance.plot(kind='barh',title='Importance of Features',figsize=(15,5))","93fd55f4":"**Observation 1**\n1. University rating, LOR, SOP, Research has discrete values.\n2. CGPA, Chance of Admit, GRE score has continous values.\n3. Data looks normally distrubuted, we can do a test to confirm it.","7c45ec29":"# Task 1: Predict Likelihood of Admission\n","158b2f54":"1. GRE Scores ( out of 340 )\n2. TOEFL Scores ( out of 120 )\n3. University Rating ( out of 5 )\n4. Statement of Purpose and Letter of Recommendation Strength ( out of 5 )\n5. Undergraduate GPA ( out of 10 ) \n6. Research Experience ( either 0 or 1 ) \n7. Chance of Admit ( ranging from 0 to 1 )","05be9fbe":"**Observation 3**\n\n1. Linear model is good showing accuracy of more than 87%\n2. CGPA has the highest Importance of 1.15 followed by GRE score which is 0.62 ","62b110ce":"**Observation 2**\n1. Look like Data is normally distributed\n2. CGPA has the highest correlation with Chance of Admit\n3. SOP and LOR doesn't have much correlations\n","6f668fb9":"# Explore Data","826fc070":"# Task 2: How important are GRE scores?"}}