{"cell_type":{"0f2c1b20":"code","a49e48c9":"code","08e9db31":"code","0034b591":"code","00a1c934":"code","ea786165":"code","c97bb069":"code","ab2b70ea":"code","835f49b4":"code","d9619f69":"code","8e62d2cd":"code","1c4c2d6a":"code","780f7a4c":"code","bae353e8":"code","cb112fc3":"code","c10e52b7":"code","bf27bd36":"code","77d2364e":"code","1a4ce7c4":"code","82c49637":"code","d964a9ff":"code","457babd8":"markdown","6de56f9d":"markdown","ff4ad6ae":"markdown","4c3e3d73":"markdown","2554dbdf":"markdown","93b486ef":"markdown","d71efb29":"markdown","ab70d952":"markdown","15162320":"markdown","fbebb71c":"markdown","2bcded66":"markdown","8c21aa37":"markdown","ac6639e1":"markdown","4045b6c1":"markdown"},"source":{"0f2c1b20":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a49e48c9":"df = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')","08e9db31":"print(df.shape)\ndf.head()","0034b591":"df.info()","00a1c934":"df = df.drop(['Unnamed: 32', 'id'], axis=1)","ea786165":"df['diagnosis'].value_counts()","c97bb069":"df['diagnosis']= df['diagnosis'].replace('M', 1)\ndf['diagnosis']= df['diagnosis'].replace('B', 0)","ab2b70ea":"df.head()","835f49b4":"corr = df.corr()","d9619f69":"plt.figure(figsize=(20,10))\nsns.heatmap(corr, cmap='coolwarm', annot = True)\nplt.show()","8e62d2cd":"corr[abs(corr['diagnosis']) > 0.59].index","1c4c2d6a":"df = df[['diagnosis', 'radius_mean', 'perimeter_mean', 'area_mean',\n       'compactness_mean', 'concavity_mean', 'concave points_mean',\n       'radius_worst', 'perimeter_worst', 'area_worst', 'compactness_worst',\n       'concavity_worst', 'concave points_worst']]","780f7a4c":"print(df.shape)\ndf.head()","bae353e8":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn import metrics","cb112fc3":"x = df.drop(['diagnosis'], axis=1)\ny = df['diagnosis']","c10e52b7":"x.shape, y.shape","bf27bd36":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)","77d2364e":"from sklearn.linear_model import LogisticRegression\nlogistic = LogisticRegression()\nlogistic.fit(x_train, y_train)\nprediction_lr = logistic.predict(x_test)\nprint(classification_report(y_test,prediction_lr))\nmetrics.plot_roc_curve(logistic, x_test, y_test)","1a4ce7c4":"from sklearn.tree import DecisionTreeClassifier\ntree = DecisionTreeClassifier()\ntree.fit(x_train, y_train)\nprediction_dt = tree.predict(x_test)\nprint(classification_report(y_test, prediction_dt))\nmetrics.plot_roc_curve(tree, x_test, y_test)","82c49637":"from sklearn.ensemble import RandomForestClassifier\nforest = RandomForestClassifier()\nforest.fit(x_train, y_train)\nprediction_rf = forest.predict(x_test)\nprint(classification_report(y_test, prediction_rf))\nmetrics.plot_roc_curve(forest, x_test, y_test)","d964a9ff":"import xgboost\nxgb = xgboost.XGBClassifier()\nxgb.fit(x_train,y_train)\nprediction_xgb = xgb.predict(x_test)\nprint(classification_report(y_test, prediction_xgb))\nmetrics.plot_roc_curve(xgb, x_test, y_test)","457babd8":"This is it for this notebook. We implemented simple Machine Learning models and get successful results. I hope you like it. If you do, upvotes are appreciated. Take care.","6de56f9d":"We are ready to go.","ff4ad6ae":"<img src=\"https:\/\/media.giphy.com\/media\/ZZiLDJ98R2GOY\/giphy.gif\">","4c3e3d73":"There are two diagnosis results and they are in object form. I will replace M with 1 and B with 0. So if the *diagnosis* is 1, which means it is cancerous.\n* M, malignant: 1, Cancerous\n* B, benign: 0, Not Cancerous","2554dbdf":"We will not be needing these.","93b486ef":"Great news! The data has no null values. Also all variables except *diagnosis* are in float form.","d71efb29":"# DECISION TREE","ab70d952":"# **DIAGNOSTIC DEPARTMENT**","15162320":"# LOGISTIC REGRESSION","fbebb71c":"<img src=\"https:\/\/media.giphy.com\/media\/xUPOqo6E1XvWXwlCyQ\/giphy.gif\">","2bcded66":"# PREPROCESS","8c21aa37":"* There are 30 columns relevant to *diagnosis*. Since there are too many columns and I am not an expert in this field, I will use correlation function.\n* Correlation function will tell me the relationship between *diagnosis* and the other columns, and their effect\/importance to the diagnosis.\n* I will determine a correlation threshold and everything below that will dropped.","ac6639e1":"# RANDOM FOREST","4045b6c1":"# XGBOOST"}}