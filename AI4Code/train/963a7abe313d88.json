{"cell_type":{"cf229b8e":"code","85a2b4b9":"code","56116f0f":"code","b10f17b8":"code","4d7b6286":"code","150cd9f3":"code","a412c038":"code","91cea673":"code","9882b2a3":"code","d7011cd5":"markdown","165d6bd4":"markdown","db4bd909":"markdown","33933e9b":"markdown","8a8a852d":"markdown"},"source":{"cf229b8e":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxITEhUTExIVFRUVGBkYFxYYGB0XFxgYGBgaGh0VFhUYICogGBonHxcYITEhJSkrLi4uGyAzODMtNygtLisBCgoKDg0OGhAQGzIlHyUtLS8tLzUtNS0tLS0tKy8tLS03LS0tLS8tLS01Ly0tLS0tLS0tLS0tLS0tNS0tLS0tN\/\/AABEIAKgBLAMBIgACEQEDEQH\/xAAcAAACAwEBAQEAAAAAAAAAAAAABQQGBwMCAQj\/xABQEAACAQMCAwQGBAkJBQYHAAABAgMABBESIQUTMQYiQVEHMmFxgZEUI1KhM0JicpKxssHRFSRTc4KTs9LwQ2OiwvE0RIPD4eMWJTVkdKO0\/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAIDBAUB\/8QAKREAAgEDAwMEAgMBAAAAAAAAAAECAwQRITFBEhNxMjNRgUJhkaGxFf\/aAAwDAQACEQMRAD8A3GiiigCiiigCiiigE0YmMksiOC6vyzC7ERaQoZcEAlXw4csAc6ipzhSvCwmF1NMHEiGIImgOy79\/VIkkbaWBOU2OQY2Bx0qbwxgZbsBhnmrkA7jNvDufLpt\/oD1wXhphQBmDvpVSwXSuEGAqqSSBuTuSSWY+wAevokq\/g5yfyZVDjHkGXS2faS3uoF5Mvr25PticOAPaG0Nn2BTU+igF6cbtycGVUbOnTJmNs4zjTJg5wQenjU8Gq9b95bVuomuJZPejxXDJn+zoHwpmeDwb6Y+XnqYiYifeYyCaAn0VA+gMPUnlUfZbTIvxLguf0qP5yv8AQyfpRf56An0VmHpavblPoR1SQgzMjcmZgr6lyoJXSTgr4jzqLwgXTY+tlP50zH9bGh7jTJrNFVfhkE49Y597mnUryAeqv6Z\/y0PCdRVcup5fZ+mf8tQY7qbP\/uN\/CvcAuNFV+2upPIfpn\/LUq4vmC+p8m\/8ASvMAbUVnnGuJPvsw9zVUez\/HpBxezQySaXZ1KlyVOqNgAVzg94g0ehJLJuNFFFCIUUUUAUUUUAUUUUAUUUUAUV8JpJw3hySpzH1kSPI2lmbS6GRzHrQncaCuFI6YBGwwA8oqBwjYPFknkuUBO\/dKrIoz46VcLk7nTvmp9AFFFFAFFFFAFcL25EaFyCcYAUdWZiFVRnbJYgb7b13pbfkSSxw5zpIlkA8kOY9R8MuAw8+WeoBoCI\/DOXHA2gPJGymR1GZDkYdlPrHLEFh1K6upwKmni6A95JlB6EwuRjzJVTo\/tYphRQED+WYP6QA+RBBx54I6e3pXC\/4xEYZDDNG74KppcN9Y3dQbHrqIFNqWcWjDyW6aQSZNZ23CxqWBB8PrOX86A93fDvqkSLutDgwnwVlUqAR4qVJU+xjjBwR3sLxZU1DIPRlOzI2ASjDwIyPgQehFSaT9nbnKlGR0kAEj6xjJlZySN84DKyjONgMbYoBxRRVT9JXaGS0tRyc864cQRt4IzBiZDnyVWI9uK8bwsnqWXhFF9J3be0a8S2dsx2razpXUWnwVx7FQE+9j+Tvw4d6SOGJ1eQf+EaoE3ZJc5aSTJyd8Ek1Bfs4o6s\/3VRG6p\/JpdpVfBtUHpb4SOs0n90\/8K6S+lzhJG08n90\/8KwduCgdWYfKuJ4YPtH7qsVaD5IO2qLg2+b0o8LPSd\/7p\/wCFcU9JnDM\/h2\/upP8ALWIGyG+5\/wBeFc0txvkkf66VPrRB0pI3+H0pcKHW5I\/8KX\/JXaX0pcII\/wC1H+5l\/wAlfn+OyU9WPsrsnDF8XP3VF1Yo9VCb2Nhve33C3zi5B98cg\/WlU7jnaC1MkdxbTLzoHWSPusASpB0NsNjiqtFwVD1dh8qlw9moj1lceXT+FQdxTxqy2NrV3SP0v2P7UpfxCWOKRV0jLNp06\/xo1IYsSvngDce6n+oZxnfrjxx5\/cawb0Y3ktlc\/RlmUQXCsWeU4EboM8wDoTp2wcA7ZPdwdcsbExM88JSZZdBJzmR1C42lLaW3LNuB62MgAVOE1NZRTUg4Swx9RS2W4nILYS3QblpcO3tyqMFUe3UfcKjHj6xKrXDJoYkJNH3o3wTgaQSwOPeNjuNgZlY7orzG4IBHQjI8OvsPSvVAFFFFAFFcbq6SMAuwXJwPMn7KgbsdjsN6hycZQFQI5mLnSo5ZTLBWbGZdIHdRjv5UBPnlVVZmOFUEknwAGSajcGiZLeFW9ZY0De8KAfvpVxcSzlIdLRCRZNi4JOF2Z0TIZQxUEasENgg52bW1+rQiZu4NOpgx9Qj1lY+akEH2igI9yksTtKmGjYqZIwhaTZdJZCG3wAh06STg43IFT7edXUOhBVhkEUqtuHGYmW4LsrZ027hRGoDvodkxkvpZchicEDYEbN0QAAAAADAA2AA8APAUB6ooooAooooApbwOPKtKR35WclupKCR+WM+QUjC+GT4k1Mu7hY0Z2zhRnbcnyVR4sTgAeJIFLLDgxWMfWyxyHvPpk1rqYliAsoZOpO4UZ67UA5opfpul6NFKPAMGib3lxrBPuUVzPGdLaJIZVbGe6vNBGcZHK1MBn7QHQ+RoBpS6Marpj4RRBQfypWLOp+EcR+Nd7biUMh0pKjMOqhhqHvTqPiK48GGRJJ4ySu3wXESke9I1PxoBhSziP1cqThWORy5Aqs5KbsraUBJ0tkDbpI1M6xe89Mk8Tlfoqt32wedjuknC45W2BjfeouSWjJRhKSyjUrvjWFBSOQlnRFLxui6ndU72oagBqznGNutUf0uyTcuz5qRqouhhlkZiTyZeqlBgfE067JdoJL6GB5FCt9IfUAdQ0JGzqc4HRmjHTwpf6aEzDZj\/AO7H+DNUZNODa+CcIuNRJ75M2ubrpnalVzc5xnbamVzanbV91Kri36Zrj01Hg7uv2QpZsnfyqI8ozv5VJli33qJJFvv5VrhgzVHIjPIN89cVyVM5J2\/jXSSLr5\/vrnG+Nj\/o5\/61qW2hie+pJii2+G1So4tqjRSDG\/wqVHLtvVM2zRTSJsUHntTS3tDnfbpilsVx501gu\/tezGKxTybo4xoWrsLEV4nbZHUTf4RrRu1r\/RIXu4QiSBgGySschlIiUyAbMQ7I2o74XTkBiaznsROW4pa5\/wB9\/hNWr9p7ZXtZQwzpUuo\/Lj76H3hlUj2gV0LPPaWTkXuO68C\/hIj5C3MjzSqdLRc0liegR1i+27HWARqGsKNIAUSbXhAZmuDqimkOcqcFUHqo6eq5xu2oE5JwdlxKmQc+GPoqI8gHTddMYx5gCRtvatMa1GQicOnZg6uVLI5UlQVB2DA6STjZh41LqvW7XCJJMw0gSa2TTlmTIDEnJzpQYUKATy1O+rFWAHO4oD7RUXid2Yoy4AOCo3OlQGYKWZgDhVBLE46A9OtcuTcnrNGAfsxHUPczORn2lfhQHmzXXNK7bmM8pB4KpRHPxYsMnyVR4ZJxruqkuMiFxIfzdLI7fBHZseOMVJsrNYgQuSWOpmY6mZsAamJ8cADyAAAwABUg0AvYj6UnjqhfSfIK8er561+XsqElqfpRjI+pGbgDw5jEALjxwwkk3\/GdSN1qDwyO0CICXkkUFNCvLKyDONOgMREp0L1wuw8qIr63Rlkih5UoGGhKgSTRsSMIUJDsDGWG5xpYHSGLAC10VD4PdPLCjyRmJ2ByjbEYJAJHhkAHHhnFTKAKKKKAKKKKAX8YGOU3ULNHlfPWeWP0WkV\/7HnvTCl\/HDiHV4I8TsfJElR2PwVSaYUAUu4cNUs8n5SxKfNYgc\/ESPKPhU25nVEZ2OFRSzHyCjJP3VH4PCyQoGGHI1P+e51P\/wATNQHa6tI5BpkjRx5MoYfI1DXgsaDETSQ4GAEc6FHksT6ox8FplRQCe6luIjGA8cvMfQqupjYnSzktKmV9VGOBGKw02\/C2A57kTb570g73sCKRW83PeuYV6hEkkPsbuIvzV5flWScV9El60hZGtHGSQXeVTj3KCM1XNNyWF8ltOSUXltbFo9FwjJdYSTHFqIyD0mWDBywGSDBKP+or16ZmxBZnyu1\/wZqmdhez9xw+N1kjWVnK7xOPVUbAiQIM5LePjSj0t3uuOzjeKSNjchgG0kFVikB70bMOrr86i01SeVjRk006yw86meXV101fcKV3FznGfuptdWvTVv7qVXNtjrXJp9J2tfsXyy+dRJJfPyqXLDvvUSSMZ38q1wwZanURHlG+ev765omck\/D3\/wCs11eIb564++uSPjIP+j\/rNaltoZHvqSYott\/hUuOLbf4VEil2\/VUuOXzqip1F9PpJ0Vv5\/Cm0Fp9r2YwaURXHnTaC7Oe9v0xisk8m6OMaFm7H\/VcStWfOPrvVBY\/gW8FGfKtU41xaPkS4EvqN\/sJQNhndimAPadqy7sTMTxS0z\/vv8Fq2qeJXVkYZVgVI8wRgit9nntLJyL3HdeCJxEYeBvESEe8NG4x89Lf2anUhsbWWfS0shHJaVFKHvOys0YlckYVioPdAI753rrxG2dNBFzNpMiq47m4c6AAdGR3mQ7eVajISuKuTohU4Mp3IOCI1wXIxuCRhMjGC4Odq7TzxQRgsQiKAqgDyGyIo3J2wFG9Rl4OoYuJJgxGknmFsgHOO9nT1\/FxXW24aqnUxaV8Y5kmCwB6hQAFQHAzpAzgZzQGX8T9LkDlUNtNkZJQ8vQzfi6iJMlAdyPEge46Fwq8ubmGOYGGISKGxhpjuPPKAH4H41hrwcLQgTvJzxs2NYXUDg7ImD0PjW3dg5lawhK+r31XPXSsjqM\/ACqoSk8Za2L6sIpPpT35J\/wDJrH17iZgfAERge4xKrY97GosV1JDI0JV5kVVcOCGkRWLALICcyY0HDDLEbEEgszW4uUjGp3VB5sQo+ZpPZ8RjkuyYJElVowJCoJCiN3AIlB0klmZdP5Lb7YNpQcezjPPAjIzQxd7BCgSSNqOokSL3FzqHTUTvkDq34fw2OHOjVk4BLMWOASQMsdhlmOPaa5cBQLGVUkoruiZ3OlG04z4jIbHsxTGgCiiigCiiigCiiigPhGdqT9mebobW+uNSEiOkKSsahS+zE7sDsd8gnoQA5pfwr17jw+t9Xy7ib+XezqwPteZNATyKXcMPLY2x6KNUJ84sgafaUJCn2GMk5JplUPiVqXUMmBJGdUZOwz0Kt+SwJU7HGcjcCgO7XKDq6jJx1HUnTj352x511r88XPDIxeGdrqNHWVn+jPgyhlkJCnD+tkY2Br9D1GMslk4KPIus+9cTv9kRxfFVMmflMPlTGl\/BN0Zz1klkbPmusqh\/QVKYVIrCsx9ML725x+Dli\/8A2rcZ\/wAEVp1Zp6VFDKp8ruCP9G2nf\/zahU9D8FlL1x8mc3N0RjO9K7i4PjvXjtVasZbWMORzH0EjwyyLnGd+tOuJ9g+HQTtbzcdKSoQGDW74UsARl9WkDBG+awULZSgpJnSrXfbk4talZll333qJJL5+VaNfehyCJ4Y5OKuGuGKRDkE6mAzjIfA288VNf0CgAk8SbA3JMPh\/eVqjb45M0rvPBkTy9fPFeI0zud8\/rrUuC+hq3u4hPb8VMkbEgMIMbqcEYZweoqFw70YWE9w9rDxkvNHksq25wNJw2H16TgkZwfGrOj4Ke6s6lEijGP1VLjiGN6t976NLGHmiTjLKYZEicfR2J5kgyqKobMjEb4XPjS7ivo75PFLXh4u3YXKa+aY9JT8Jtyy2\/qeJHWoSot8lsbmK4F8Vv5702gtMdd+mKmT+jmxSKSZuNsEimMDnkNnnL1iVdeXb80GlHa\/shHa2Ed9b8RkuY5JeUv1bRb4fJ7zZBBjIwRVErRv8i5X6WiiXLsZBp4pZ5Oc87\/BatsrC+wtx\/wDMrHUevNAz5\/R3\/hW6VbaJqnh\/sz3jTqZX6IHCzvMPKVv+JVb\/AJqOOj+bykDJReYo\/Kj76\/eorzwfczsdi0zZX7OlVjXf8pUV\/wC3jwr1xK7x9UgDSvgAEEqqnOZJMdFADbZGojAOTWkyk5TncV4uJ0RSzsFUdWYgAeG5NLrRLmJFj0xyhAFV9ZRiAMDWhBA9pDHPXA6VzieSS5CzRhOUgkUBtaOzll1A4DEoBjBAH1oO+2AKFN6K\/pLtP9I5Qkd3VWgBcIzHG7MCpIwcYBGfMU4s+BXMUEVqkjI5LaCXYkANlpSkTKoQZGxL6iyr3M5F3vrkRxvIQToUtgdTgZwPaelR+HWLqTJLIXkdQDsAiAEnRGAAdOWO7Ek4GTtUVBLYm5ye7EvDFlikVJbKFHbUv0mMqVkfSzKVU\/WAFUbVrPdJUAuCWVTYXzmBLh+YraC78pHC6ZEUzqjhWUMJo5GGSNiNxnNW7j1pzIsiURNHl0kPqqdLKS+CDp0swOCDvkEEAim9koCFggG4dpDIUbmRkQyROrNKqKrnvFNXrOCNWSpCyIF9slAjQBOWAqgRnGU2Hc7pI26bEjau1FFAFFFFAFFFFAFFFFAFL5u5cI3hMDG356guh9g0iQE+Pc8qYVD4jaM+go+l421rkZUnQyYcdSuHPQg5AoCZRUCDiGH5U2iOQ4KAPkODn1SwBLDScgDYYPjU+gM47Q+ji1a5N08s4SSQtIF5fcLnIYMYywTVsd9g2ScA1fuIXPKhkkxnlozY89Kk4+6u7oGBBAIIwQdwQeoI8RVdsOHB7iVJlEq26xLCzd5hkuxBJ31aeWpO+oKMknIHiilsScm9ztYxTQLHALiJtEagK0TayFAXUZFfA6H8Wup4y641xxnU2lRHMGZmOwGJFQZ+NZD6Y7h1vXIkdcKgGGK4GkHGzDbJJ+NUvs7eSM65lkOGDDMjnBU5BA33BGapddJP9F8baTxruj9N\/wAqgevFOh8uWZPvh1AfOs69InEIngUpIpZr8NozhsJA8WdJ3G6eVarWa9vADw+zb+kuVlx7ZY55D971ZV9D8FVH3I+TI+MsTc2WST9cv7cdXjtr2R4hNe35it7hkuXtzHpkjW3flqmTcIx1MoIOMY8ao3aqyBmtE1Ea306h1GWQah7d6tnEez1hBcPbS8Z4irxsiOdLmNWkAK6pANIzqG5NVWvtLBbd57ryaF27srkycOmhtmnNtMzyJGVXbl6dtZA6mpHam4vbjhciwWskVxP9Vy2ddUas2lpGdTjGjJ2OdxWcXvZmyiuXtW4txMyxlA4RJHClwGXLKCACCPGmdx6PLdLqOzbjN6J5UZ0TV1Vc5Oc4HQ7ew1oMxYvRjwK8sXuLaaFFgbRLE0Tl4w+kI6ZfDZOlW6Y6139Glnd2afQZrRgsbSsLoOhjcNJqXC515IPltiqVedjrSJbhn4xxAC2kSKX1jh5MaQMet6w3FRrzs3ZR3P0V+LcU52rTpEchB3AyGAwV3G\/SgHPE+x98vErniUUTO0V1E8UDFdE8Rj0SMuT3ZBtgnGMeO1dO1TZ7T8MOCMwZweo\/D7H20ovOydnFHPI\/GOIabeYQSYDEiU4woA3bqNxXCLsTw+TkzHifEA0k620TSRMsnMYZCjWNSrgnfp1oCwt2XuBb3Iks7h3PFJrmEwTRxSorDuzozEg+I0nffwxSL0nwXqcCgF6WMv0zI1lWkEZSbQsjJ3WfHUiurdkbMBj\/ACzxDC3X0M+t\/wBoP4nu\/K6Uq9LPYP6BZpN9NubjVMqaJWyoyjnV7+7j40Aw7KQsvELAoA7fWEK22cW75APgcE4PTOM+dbZDxCNo2kJKqmdeoaSmkZYMPDHXPQjcZBBrC+yN2E4hw9myRrZdtzl4WQdfawrWDEWmcpDJJb6tkVkEbThjrkYOQdAONhkFg7acgE0W3o+3\/ppuvc0+ESOHWNx33SQQRSkuIyjPKhZmJkDyNhGbIOgoQpz13yzseHiNmfW7s4VcuQSFUsVQYAyAXY5OTv12GOYN0w6QRn3vN+6Ovv0Wc+tcAf1cQX\/EL1eZifSW4laWdeQUJgDCRzup15BgBXo2qNWb7Oldjq2knhhIIe4nYfnLH98SqR86Uw8MikHLgRTAoC82R3mA29WCOXUjADA1ZKg7YbBFAS7mddSm7ngiUEFYRIMFgchnd9JfBAIUKMEb6tsTP5atz6syP7IzzGPuVMk164VwiC3UrDGqajliAMsfNj4nw9gAAwABU6gF\/wDKLt+Dt5WB6M2Il+Ic6x+hVcuuIcm4jRDHHKGDSW8Ilm+qO7yOF0qgxuGKElsAHernVavJpJLv6Mza4XAJVUXqNR0SESFwh0gMSmk6gudyKAsaOCAQQQRkEbgg+INeqg8D4f8AR7eKDVq5aKurzIG5x4DPh4VOoAooooAooooAooooAooooDldW6yIUcZVhgjp8QRuCOoI3B3qLw6d8tDJu8aqdY\/HVi4ViMDS\/cOQNvKp9RLm0YvzI30Pp0nKhlYA5GobHYk4wR6x9mAJdLLFuZO8qjCBTFk4zIyOdwB0VTrAJ6lm2wAT0BuhtiF\/ystH\/wAGHz+lXPs64+jxxk9+JESRcYKuFGQVO48x5gggkHNAZr274pBb8QmaZCwaOMDCK+O75P0Pt8PCq9L2is5wRFEwYjb6mNADkb7N093lnqatfpJ7EXl1cmWBIpEKqMNIyMCBjp0++qxwj0Z8REi5t4olzuedqG564OTsPKs77nS8I1RVLMcvjU27jMxS3mZfWWNyv5wU4+\/FUz0sx8uztlUbJcRge4QygVb+Nboqjq0sQx5jmKzD9FWqtelZc20P\/wCSn+HLVtT0PwU0fcj5RhvGD\/ObL+uX9uOtA7XdiuIT3928UJKTy27pIbhVhAiVNRmtd+cMqQM9KpvHuCpNo7zLpz0weuPP3UjuOz6qdppD8ayW1xTVNLJsuLapKo2ka\/ednr5OL3F2lvLJFK9uytFeLbriJFDc2LcyrkHunwz51w452V4pJfycRRItUVxFyIyw5rQRZUqj6tCrIHckNvsOlY7LwnB\/CyfOuD2GP9o\/zrSq0HyZ3bVFwbj2h7K30k15DHFGYL24t5ueZQDEItBZWixlmym2DirXe8Llbi1vchcwx20sbNqGzsykDTnJ2HXFfl57Yg\/hH+dcGQ59dvmampplbpSRv3F+yN3JDfxhMGfiKToVkVSYQUzIGz3SNJOOu1N+03ZSZYLX6K8ly9pdpc6bibU8gXOYxM\/TrtnavzcsB+2\/zNdhZH+kf5146kUeqjN7G3T9lL\/6IX5KNcScUW\/MAlUBEH+zMp2LbDcedRPThdzy8Jia4t\/o8n0tRy+YsvdEUuG1rtv5VkQ4X\/vZPnUodnlbYyyEfOoO4prksVpVeyLxwhYo7yxaTXoHMJ0Fg5It30qhQhtRbAAB3JA8a2Tg19HFCiESlgMsBFLJhmJYqG0ksASRk7nFZH2LXHFLAeTS\/dbSVvFRtfb\/AJPbv3PpCyHjkT50LM2CQfqJV3HUZdQK83XGHRSxtJ9KjJbMIAHiSDLkAdTt0rrwfpL\/AF0n7VTJ4VdWRhlWBUjzBGCK0GUzbjPpIthLJFcxyKkUhAXQHWTSCpEhVjldR1AaR6q\/Gdwvt\/b3txDBBPIgcN6sRUhgCQGeWMrjA2xjfxPSsrv+zNzdd+NkfUxGXdVdiM5cggDfBOc9duu1OvR12dnS7iWUNFnWVdXUnKoxDDBPRgNm2OCCCMiqFUnhZXJqdKnriWy\/s2luF+InnDDowf8A5CNBz03U+zBwa8tYTDdbuQkdFkSIofYwSNW+TD49D6tbqRX5U5UswzG6KUR8dU0lm0uOuM7jcdGx1v75Yxj1nYHRGPWcjAwAMkDJGWxhQcnarzKL5+KM+YAjpOdAYLlgqO2DKsoGkDSHK6sHK+r4U2trZI1CooVQMAAYFcuG2xRO9jWzM7kb95iTjJAJAGFB8lHSpVAFFFFAFFFFAFFFFAFFFFAFFFKYeZcYZjoiBcaUdhIWViuHYY04w2VGd8b7bgNqKXjheneKWRD45YyBvzhLqPxBBPidhXia5ni0F+XIrOqFlBjK62Cg6SW1d4qOo60AzqLeWKuQwJSRdlkX1gPsnOzL+Scjx6gESqKAXx3zIQk4Ck4CyD8E5O2N942O3dbzABbemFeXQEEEAgjBB3BB8CPGoQ4Nbj1YY0PmihD80waA+X41TW6+Ks8nwWNk\/XKtVr0s5+iRkdROn7ElWP8AkSLWHDTBwGUNzpGwGKkgB2I3KL4eFVT0g8HghtYuXDGhWVFDBQGwEcbtjJqFX0Pwyyj7kfKMnuXIA0\/xpXOxHSrDcqoxpxjHnmlN0qg93y881xqckd\/HAnkYjpUV2Ph5UxlAzt5VEcDwrXBmWpFi+RiM46Yr7B+7f5\/9K6v4+X7qjAkE6f8AQ2rStUY3oydCNv11KiG21L4icbeW9S4yfD41TNGimxrCoA2pxBGo6ezO+arsTN4fGmdsWB7vsz41jmjdF5Rbey6KOK2GnxebO+f+7yVt9YP2P\/8Aqth+fN\/\/ADy1vFdCzWKSOPevNVkDhHST+uk\/aNSrqTSjN5KT8hUCxuFjSUucBZZSfE41Z6Dc+sPmK9vxSFgVYPggghopACD1BytajIfnaTj99D3YWYp008oOvx2JPxNXr0U8QluLtTKEBjjkI0oFOSUU53zn\/wBaYy+jzhU9yyJzY9UYkUpLJnKth8iQnAGuLAx4nyq09k+xNvYMzxPK7MunLlTgZBONKjqQOuenvqiNOaUVnbc0yq05dTxvsPOJwK8Z1Erp74dcakK7hlyCM+wggjIIIJFKuzFoxL3LEnnhGTmIBMq6Rs7KABnCnQBgEE5Yk127QSysDbxIjNNDMcs5TTpCLthGzvKPLpTOzuBJGki9HUMPPDDO\/wA6vMx2ooooAooooAooooAooooAooooBZx6SRURk5gUPmUxKruIwjHuowJY6tIwoLb7Co3ZmDZpOc0hbSCCjRkEKCDIjkkyaSgJONlXPSpXENbTRRBiiEO7lchmCaVCBgQVGZFbI+wR0NSrO0EerBYljqJY5JOkL+pQKAkVB40PqifsvG36Eit+6p1QeOH+bynyRj8hn91ATqKKKAKKKKAKpvpUz9DXHXnJ+y9XKql6TB\/NU\/rk\/ZeoVfQ\/DLKPuR8oxi51YGnPwpXNq8M1YrkrtpxjFKLkrkacYxXGpyyd\/HAkkk8iPmKjSP5H76dcJnRoI2HDYHweVzGcDU8acwsy6PEDxO\/QVOltuZzY14VCNKKS8boO64dFdH5Z1EnLZH2B5GurGglyceV03wU2Rjvg7Yr7Cw8xnG\/z\/wClXDhfDyFjB4bA5EcQJaRQT463DRnBJYA48XRTnao8iFJxGeHW4JWBO8VIOZCNalUADNkDODjx1dBZ0FXeeRDE646j271LhYeBHtqzwcLkfSycLtCmkt68Z1KdDBtRj6jJG23UYGKql1cB5iq26wGJOW6pjDMrHvnAG5\/dVNSjo3k0UrhuSWBpDjG3xpxBo\/Fx7cVXYg3h8aaW4bPdz4ZrnTidWLyizcDhjfiViuhHBebKkAqcW8hAIO3WtAtJZVveRyPoqSoDpgKNkqXHMY6AApGAcYYdzwzWbdmkY8TsQjaTzJO9jOByZM4B2zjOM5AONj0rZbzg8rFWW5fmL0ZlTKhsatOhQfBe6cqdIyM4YdCzWKSOPevNVnm57MQvqJaXUdWG1kspZAhKk+YVcg5B0ipZ4a3rc+XmeDau6PyeUBoI8Nxq9ucEMKK1GQT3tnNIoWSK1kI6O4OFJ21iEq36OsZ8xUb+QVi6QQ3CjqGiiSb3hlURt7iE\/Oqw0UAs4Va2uTJBFGjgFGKxhHXOlijjAZeinB9hr1afVyvF+K+ZY\/eT9Yg\/tEPv\/SHGy7eIrpReSRENqaJHB0nRhWcHv9NW4264+FSeKWxdO5jmIdcZO2HAOAT4AglT+SxoCXRXG0uVkRXXow8diD0KsPBgcgjwIIrtQBRRRQBRRRQHLSQxYudJAGk4wCCdweu+R18hjG+eteZEDAhgCCMEEZBB8CPGuUMJXYNlQqgKQABpzuCoHXbbpttigO9FeUbOdiNyN8b+0YPSo0904ljRYiytnW+cBAFJH5xJGMeGfmBy45al4iVUmRO9HpbS2oA+qcgE+xjpJxnavNrxF9UizokXLRZCwk1IFbV6zFVKkaG8Me2pdwrsjhWCOQwRh3tJI7rkEYODvil1vwBNJEjs5Y5O5UasAa+pZmGFwzsxUqNJGBgBfbNczuzoSgeNkyW7sJLbLyVOTKoCnJxnWdwFCljccOl5ckSyBo3Ur3yxddS4IDnUWHiNWcZxuMATOG8OjgUpGMAnUcnOWIAz7Og6VLoCr3XH7q3eOOW1aXmOqiSMjSNW2CxwNWSMatAO42wNT\/h99HMmuNgQCVYZBKupwyNg7MCCCK6XMAdSjZwRjY4I9oPgR1zVctez01syPBIW1MizLhVDIGA1gsCe7HkYzk4yDnKsBaK5yhj6pA3G5Gds7jGRg46H7j0PSigFfB+GSQli9w0uQANWrOxPebLEajkZ0BF29XoBVfSnxH6kQ8uUfWx4k0\/VkkHbXnbrp9+3iM36o9\/YxzRtFKgdGGGVhkH+B8QeoNRkspolCXTJM\/OlyjEDT\/Clc6scY\/XV37TeiK6E7G2nkMDAle+S6H7LqSNa+TKc+Y8TT7n0c8TUkK4fG2NbK3uKkbfOscbNrk6Tv44xgr54aBsrOB1I1YGfdXI2xByHk26HUcjGTt8z86nzdjOKL1gk+Ein\/mqHL2b4gvW3n+GW\/ZJrSoTW7Mjq0n+JFkR851ucDqWOQAQdviAfgK+oWYYMkh8SNR+1n9Zz768vwu6X1oJx743H7q4\/RJx\/s5R\/Zb+FTw\/kr64fBOjgz+PJsPtH2D9wHwFSra3AJbUzMepY5Pz+FKUs7g9I5vgr\/uFTLbgV8\/qwzf2sp+0RVcqcpLGSyFaEXnpLBCwI2+O1OIHU+r8dsVW7bsdfEZZxGPHMhJ+SZH311s+zVxLKILWaS5mJ3VCVjjH2pXyQo95FZpWTfJr\/AOgsekvXZmRTxawCbkNMxwOi8hxk+zJxW5VS\/Rx2FHD4y8riW6kADybkKo3EUerfTncnYk9egxdK00KXagomG4q92fUFFFFXFIUUUUBCvrZyySx6daBl0tsrK5UkZG6nKKQcHoRjfI7WFxzI1fGNQBI8j4qfaDkfCu9LZrYxNzIQSCcyRDo2TvIg6LICSxx62+QSQQB7t00XDqPVdQ+PAPkqzDyyNOR0yM9Scz6gWKs0jyspUEKiK2M4UsS+PxdRfp1wozjpU+gCiiigCiiigCiiigCiiigCiiigCiiigCiiigCiiigCiiigCkI9WS3MMkjF5Tt3FAkcuG522PwnVcsNJ2yKKKA8js4xRR9KuI3\/ABijI4PsxNGw2G2QozjOBXZOBuP+8F\/6yKI\/sItFFAfG4I5\/Gt\/7g5+6UV5\/+H\/MxfCJh+uQ0UUB8PZpT+OB7kH7814XsnHnJmmI+z9Wo+aoG++iigO6dlbP8aBZP6wmUfKQkU1t7ZIxpRFQeSgKPkKKKA60UUUAUUUUAUUUUAUUUUAUUUUAUUUUAUUUUB\/\/2Q==',width=400,height=400)","85a2b4b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56116f0f":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsbrewerscsv\/brewers.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'brewers.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","b10f17b8":"# checking dataset\n\nprint (\"Rows     : \" ,df.shape[0])\nprint (\"Columns  : \" ,df.shape[1])\nprint (\"\\nFeatures : \\n\" ,df.columns.tolist())\nprint (\"\\nMissing values :  \", df.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",df.nunique())","4d7b6286":"df.describe().T","150cd9f3":"def plot_count(feature, title, df, size=1):\n    f, ax = plt.subplots(1,1, figsize=(4*size,4))\n    total = float(len(df))\n    g = sns.countplot(df[feature], order = df[feature].value_counts().index[:20], palette='Set3')\n    g.set_title(\"Number and percentage of {}\".format(title))\n    if(size > 2):\n        plt.xticks(rotation=90, size=8)\n    for p in ax.patches:\n        height = p.get_height()\n        ax.text(p.get_x()+p.get_width()\/2.,\n                height + 3,\n                '{:1.2f}%'.format(100*height\/total),\n                ha=\"center\") \n    plt.show()","a412c038":"plot_count(\"TOTAL_BARLEY_USAGE\", \"TOTAL_BARLEY_USAGE\", df,4)","91cea673":"plt.figure(figsize=(8,6))\nfig,ax = plt.subplots(2,3,figsize=(10,8))\nsns.regplot(x = 'YEAR', y = 'TOTAL_BARLEY_USAGE',data= df,color='coral',ax=ax[0][0])\nsns.regplot(x = 'YEAR', y = 'BARLEY_USED_FOR_MALTING',data= df,color='coral',ax=ax[0][1])\nsns.regplot(x = 'YEAR', y = 'BARLEY_USED_AS_STRAIGHT_GRAIN_FOR_BREWING_DISTILLING',data= df,color='coral',ax=ax[0][2])\nsns.regplot(x = 'YEAR', y = 'TOTAL_WHEAT_USAGE',data= df,color='coral',ax=ax[1][0])\nsns.countplot(x='CLOSING_STOCKS_OF_WHEAT',hue = 'YEAR', data= df,ax=ax[1][1])\nsns.countplot(x='TOTAL_MAIZE_USED_AS_STRAIGHT_GRAIN_FOR_ BREWING_DISTILLING',hue = 'CLOSING_STOCKS_OF_MAIZE', data= df,ax=ax[1][2])\n\nplt.tight_layout()\nplt.show()","9882b2a3":"from scipy import stats\n\nplt.figure(figsize=(8,6))\nfig,ax = plt.subplots(3,3,figsize=(10,8))\nsns.distplot(df['YEAR'], fit = stats.norm,color='coral',ax=ax[0][0])\nsns.distplot(df['TOTAL_BARLEY_USAGE'], fit = stats.norm,color='coral',ax=ax[0][1])\nsns.distplot(df['BARLEY_USED_FOR_MALTING'], fit = stats.norm,color='coral',ax=ax[0][2])\nsns.distplot(df['BARLEY_USED_AS_STRAIGHT_GRAIN_FOR_BREWING_DISTILLING'], fit = stats.norm,color='coral',ax=ax[1][0])\nsns.distplot(df['CLOSING_STOCKS_OF_BARLEY'], fit = stats.norm,color='coral',ax=ax[1][1])\nsns.distplot(df['TOTAL_WHEAT_USAGE'], fit = stats.norm,color='coral',ax=ax[1][2])\nsns.distplot(df['CLOSING_STOCKS_OF_WHEAT'], fit = stats.norm,color='coral',ax=ax[2][0])\nsns.distplot(df['MONTH'], fit = stats.norm,color='coral',ax=ax[2][1])\nsns.distplot(df['TOTAL_WHEAT_USAGE'], fit = stats.norm,color='coral',ax=ax[2][2])\n\nplt.tight_layout()\nplt.show()","d7011cd5":"![](https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcTdcNID_xpFHJUN50ek3e7kdAFdtrTqQXg1AQ&usqp=CAU)wreg.com","165d6bd4":"#Code from  Taha07 https:\/\/www.kaggle.com\/taha07\/car-price-prediction\/comments","db4bd909":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","33933e9b":"#The Black is Beautiful Initiative - blackisbeautiful.beer\n\nThat initiative is a collaborative effort amongst the brewing community and its customers, in an attempt to bring awareness to the injustices that many people of color face daily. Their mission is to bridge the gap that's been around for ages and provide a platform to show that the brewing community is an inclusive place for everyone of any color. They are asking for all breweries and brewers far and wide to raise a glass with them in unison and participate in this collaboration.\n\nIn the collaboration efforts, they would ask for participating breweries to do the following:\n\nDonate 100% of the beer's proceeds to local foundations that support police brutality reform and legal defenses for those who have been wronged.\n\nChoose their own entity to donate to local organizations that support equality and inclusion.\n \nCommit to the long-term work of equality.https:\/\/blackisbeautiful.beer\/","8a8a852d":"abc.10"}}