{"cell_type":{"2c4be70c":"code","d3e2cbde":"code","227f7557":"code","f7423bbb":"code","ea8f8df3":"code","8d93dddd":"code","259667d2":"code","6bafe535":"code","9e99582f":"code","62d67776":"code","6091199a":"code","90680da0":"code","4341d329":"code","76d0fc0f":"code","c4094a5d":"code","b23738ca":"code","6f2f0360":"code","9b494b6f":"code","a49c19e9":"code","42a26bb1":"code","c884fdf5":"code","c6ead1ea":"code","fd2f6043":"code","0fe9863f":"code","59c73efb":"code","34c547b4":"code","94865f9f":"markdown","c36305e3":"markdown"},"source":{"2c4be70c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in 3\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","d3e2cbde":"data = pd.read_csv(\"\/kaggle\/input\/diabetic-retinopathy-resized\/trainLabels.csv\")\ndata.head()","227f7557":"data.head()","f7423bbb":"data['image_name'] = [i+\".jpeg\" for i in data['image'].values]\ndata.head()","ea8f8df3":"data['level'].hist()\ndata['level'].value_counts()","8d93dddd":"from sklearn.model_selection import train_test_split","259667d2":"train, val = train_test_split(data, test_size=0.15)","6bafe535":"train.shape, val.shape","9e99582f":"from keras.preprocessing.image import ImageDataGenerator","62d67776":"import cv2\ndef load_ben_color(image):\n    IMG_SIZE = 224\n    sigmaX=10\n    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))\n    image=cv2.addWeighted ( image,4, cv2.GaussianBlur( image , (0,0) , sigmaX) ,-4 ,128)\n    return image","6091199a":"data_gen = ImageDataGenerator(rescale=1\/255.,\n                              zoom_range=0.15,\n                              fill_mode='constant',\n                              cval=0.,\n                              horizontal_flip=True,\n                              vertical_flip=True,\n                              preprocessing_function=load_ben_color)","90680da0":"# batch size\nbs = 32\n\ntrain_gen = data_gen.flow_from_dataframe(train, \n                                         \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                         x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                         batch_size=bs,\n                                         target_size=(224, 224))\nval_gen = data_gen.flow_from_dataframe(val,\n                                       \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                       x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                       batch_size=bs,\n                                       target_size=(224, 224))","4341d329":"from keras.applications.densenet import DenseNet121\nimport keras.layers as L\nfrom keras.models import Model","76d0fc0f":"base_model = DenseNet121(weights='imagenet',\n                   include_top=False,\n                   input_shape=(224, 224, 3))\nx = base_model.output\nx = L.GlobalMaxPooling2D()(x)\nx = L.BatchNormalization()(x)\nx = L.Dropout(0.4)(x)\nx = L.Dense(1024, activation=\"relu\")(x)\nx = L.Dropout(0.2)(x)\nx = L.Dense(64, activation=\"relu\")(x)\npredictions = L.Dense(5, activation='softmax')(x)","c4094a5d":"model = Model(inputs=base_model.input, outputs=predictions)","b23738ca":"for layer in base_model.layers[:-100]: layer.trainable = False","6f2f0360":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","9b494b6f":"model.summary()","a49c19e9":"from keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nmodel_chk = ModelCheckpoint(\"densenet_model.h5\", save_best_only=True, monitor=\"val_accuracy\")\nreduce_lr = ReduceLROnPlateau()","42a26bb1":"model.fit_generator(train_gen, train_gen.n \/\/ bs,\n                    validation_data=val_gen, validation_steps=val_gen.n \/\/ bs,\n                    epochs=25, workers=4, callbacks=[model_chk])","c884fdf5":"from keras.models import load_model\nmodel = load_model(\"densenet_model.h5\")","c6ead1ea":"model.evaluate_generator(val_gen, steps=val_gen.n\/bs, verbose=1)","fd2f6043":"from PIL import Image\nim = Image.open(\"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\" + val.iloc[0].image_name)\nim = np.array(im.resize((224, )*2, resample=Image.LANCZOS))\nim.shape","0fe9863f":"import matplotlib.pyplot as plt\nplt.imshow(im)","59c73efb":"plt.imshow(load_ben_color(im))","34c547b4":"print(\"predicted:\", np.argmax(model.predict(load_ben_color(im).reshape(1, *im.shape))[0]))\nprint(\"actual:\", val.iloc[0].level)","94865f9f":"test some instances","c36305e3":"### DenseNet"}}