{"cell_type":{"80ec270c":"code","55e0b716":"code","c84ca8eb":"code","e6a537b9":"code","3597663c":"code","fe33147b":"code","c25fd86d":"code","c795ee5b":"code","e321e51e":"code","9f246494":"code","d0ec573c":"code","33480fa2":"code","fb09013d":"code","34aa655a":"code","47903306":"code","0d63454c":"code","7d10c799":"code","731a4595":"code","4e9f23ab":"code","119ff28e":"code","94656429":"code","1a804daf":"code","e943172d":"code","8387d423":"code","edc3fec4":"code","37a2fa0a":"code","ea115b2d":"markdown","67004ee6":"markdown","a952a839":"markdown","87847680":"markdown","1e607dcc":"markdown","19649454":"markdown","b1cb7814":"markdown","a1e973ce":"markdown","e5f14abb":"markdown","a0be2f3b":"markdown","28f5e3a3":"markdown"},"source":{"80ec270c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport cufflinks as cf\ncf.go_offline()\ncf.set_config_file(offline=False, world_readable=True)\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.rcParams.update({'font.size': 16})","55e0b716":"!pip install klib","c84ca8eb":"!pip install dataprep","e6a537b9":"import klib\nimport dataprep\nfrom dataprep.eda import plot,create_report,plot_diff\nfrom dataprep.eda.missing import plot_missing","3597663c":"df = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")\ndftest = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/test.csv\")","fe33147b":"df.head()","c25fd86d":"dftest.head()","c795ee5b":"print(\"train data shape : {}\".format(df.shape))","e321e51e":"print(\"test data shape : {}\".format(dftest.shape))","9f246494":"missing_values_count = df.isnull().sum()\ntotal_cells = np.product(df.shape)\ntotal_missing = missing_values_count.sum()\npercent_missing = (total_missing\/total_cells) * 100\nprint(\"Missing data in train  % = {}\".format(percent_missing))","d0ec573c":"missing_values_count = dftest.isnull().sum()\ntotal_cells = np.product(dftest.shape)\ntotal_missing = missing_values_count.sum()\npercent_missing = (total_missing\/total_cells) * 100\nprint(\"Missing data in test  % = {}\".format(percent_missing))","33480fa2":"#visuvalising the  null values\nplt.figure(figsize=(18,9))\nsns.heatmap(df.isnull(),yticklabels=False)\nplt.title('Heatmap for checking Null Values in train data')\nplt.show()","fb09013d":"#visuvalising the  null values\nplt.figure(figsize=(18,9))\nsns.heatmap(dftest.isnull(),yticklabels=False)\nplt.title('Heatmap for checking Null Values in test data')\nplt.show()","34aa655a":"#getting sum of null values\nnull_df = df.isnull().sum().sort_values(ascending=False).to_frame()\nnull_df['percentage'] = (null_df[0]\/df.shape[0])*100\nnull_df=null_df.reset_index()\nnull_df = null_df.rename(columns = {0:\"Missing values\",\"percentage\":\"Missing_percentage\",\"index\":\"variable\"})\nnull_df\n","47903306":"fig = px.bar(data_frame=null_df,y ='variable',x='Missing values',template = 'ggplot2',\n             height=5000,text='Missing values',\n             title = 'Missing values count of train data')\nfig.show()","0d63454c":"#getting sum of null values\nnull_df_test = dftest.isnull().sum().sort_values(ascending=False).to_frame()\nnull_df_test['percentage'] = (null_df_test[0]\/df.shape[0])*100\nnull_df_test=null_df_test.reset_index()\nnull_df_test = null_df_test.rename(columns = {0:\"Missing values\",\"percentage\":\"Missing_percentage\",\"index\":\"variable\"})\nnull_df_test","7d10c799":"fig = px.bar(data_frame=null_df_test,y ='variable',x='Missing values',template = 'ggplot2',\n             height=5000,text='Missing values',\n             title = 'Missing values count of test data')\nfig.show()","731a4595":"create_report(df,display=[\"Overview\"],progress=False)","4e9f23ab":"create_report(df,display=[\"Interactions\"],progress=False)","119ff28e":"sns.set(style='darkgrid')\ndf1 = df.drop(['id','claim'],axis = 1)\ncolumns = df1.columns\nplt.subplots(figsize = (20,80))\nplt.suptitle(\"Distribution of train data\")\nlength = len(columns)\nfor i,j in zip(columns,range(length)):\n    fig = plt.subplot((length\/5)+1,5,j+1)\n    plt.subplots_adjust(wspace=.10, hspace=.6)\n    plt.yticks([])\n    plt.grid('off')\n    plt.axis('off')\n    plt.title(\"{}\".format(i))\n    sns.histplot(x=df[i])","94656429":"sns.set(style='darkgrid')\ndf1 = dftest.drop(['id',],axis = 1)\ncolumns = df1.columns\nplt.subplots(figsize = (20,80))\nplt.suptitle(\"Distribution test data\")\nlength = len(columns)\nfor i,j in zip(columns,range(length)):\n    fig = plt.subplot((length\/5)+1,5,j+1)\n    plt.subplots_adjust(wspace=.10, hspace=.6)\n    plt.yticks([])\n    plt.grid('off')\n    plt.axis('off')\n    plt.title(\"{}\".format(i))\n    sns.histplot(x=df[i])","1a804daf":"df1 = df.drop(['id','claim'],axis=1)\ndf2 = dftest.drop('id',axis=1)\ndf1 = df1.replace(\" ?\", np.NaN)\ndf2 = df2.replace(\" ?\", np.NaN)\nplot_diff([df1,df2],config={\"diff.label\": [\"train\", \"test\"]},progress=False)","e943172d":"#visualizing using data prep library\nplot(df,'f1')\n","8387d423":"#data is not sekwed \npx.bar(df['claim'].value_counts())","edc3fec4":"klib.corr_mat(df)","37a2fa0a":"#df.drop('id',axis = 1,inplace = True)\ncorr = df.corr()\nplt.figure(figsize = (27, 9))\ncorr[\"claim\"][:-1].iplot(kind=\"bar\",color = 'black')\nplt.title(\"ALL Features Correlation\")","ea115b2d":"<h1> Distributions of Data <\/h1>","67004ee6":"<h1> Claim Variable <\/h1>","a952a839":"<h4> I used auto visualization libraries in this notebook,so this notebook may take time to load <\/h4> ","87847680":"<h2> Checking Missing Values <\/h2>","1e607dcc":"<h4> Importing libraries <\/h4>","19649454":"<h1> Creating a overveiw and interactions of train data <\/h1>","b1cb7814":"<h4> let us try with data prep  and see <\/h4>","a1e973ce":"<h1> Given Data <\/h1>","e5f14abb":"<h1> Co-relation <\/h1>","a0be2f3b":"<h4> if you want to get particular variableyou can use plot function for that variable <\/h4>","28f5e3a3":"<h2> EDA using Klib,dataprep <\/h2>"}}