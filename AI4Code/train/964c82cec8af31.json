{"cell_type":{"316709ef":"code","2ca34bfb":"code","61a8c4f8":"code","ffb47286":"code","fbefaaf0":"code","72164195":"code","446d4b65":"code","7dcaa360":"code","fedc879a":"code","1af68ad3":"code","fa9d8a67":"code","6435a372":"code","933f8142":"code","409e88c6":"markdown","2f363452":"markdown","629e51af":"markdown","1af494bc":"markdown","e318c874":"markdown","317e1309":"markdown","d3d1e72f":"markdown","6cfe8130":"markdown","5635b158":"markdown","cfedb20f":"markdown","bfaf6e2a":"markdown","6bf1bb2c":"markdown","e9eb4396":"markdown","a82d3bb5":"markdown","da6e0560":"markdown","acd944ae":"markdown","39135141":"markdown","67d3cb31":"markdown","dfc074f1":"markdown","1408e648":"markdown","95fca891":"markdown"},"source":{"316709ef":"from torchvision import datasets\n\n# path to store data or load data from\npath2data = \".\/data\"\n\n# loading training data\ntrain_data = datasets.MNIST(path2data, train=True, download=True)","2ca34bfb":"# extract data and targets\nx_train, y_train = train_data.data, train_data.targets\nprint(x_train.shape)\nprint(y_train.shape)","61a8c4f8":"# loading test data\ntest_data = datasets.MNIST(path2data, train=False, download=True)","ffb47286":"# extract data and targets\nx_test, y_test = test_data.data, test_data.targets\nprint(x_test.shape)\nprint(y_test.shape)","fbefaaf0":"# add a dimension\nif len(x_train.shape) == 3:\n    x_train = x_train.unsqueeze(1)\nprint(x_train.shape)\n\nif len(x_test.shape) == 3:\n    x_test = x_test.unsqueeze(1)\nprint(x_test.shape)","72164195":"from torchvision import utils\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib inline","446d4b65":"def show(image):\n    # convert tensor to numpy array\n    npimage = image.numpy()\n    # convert to H * W * C shape\n    npimage_trans = np.transpose(npimage, (1,2,0))\n    plt.imshow(npimage_trans, interpolation='nearest')","7dcaa360":"# make a grid of 20 images, 5 images per row\nx_grid = utils.make_grid(x_train[:20], nrow=5, padding=2)\n# print(x_grid.shape)\n\n# call helper function\nshow(x_grid)","fedc879a":"from torchvision import transforms\n\n# define transformations\ndata_transform = transforms.Compose([\n        transforms.RandomHorizontalFlip(p=1),\n        transforms.RandomVerticalFlip(p=1),\n        transforms.ToTensor()\n    ])","1af68ad3":"# get a sample image from training data\nimage = train_data[0][0]\n\n# transform the sample image\nimage_tf = data_transform(image)\n\n# convert the tensor to numpy array\nimage_tf_np = image_tf.numpy()\n\n# display original and transformed images\nplt.subplot(1,2,1)\nplt.imshow(image, cmap='gray')\nplt.title(\"Original\")\nplt.subplot(1,2,2)\nplt.imshow(image_tf_np[0], cmap='gray')\nplt.title(\"Transformed Image\")","fa9d8a67":"# train_data=datasets.MNIST(path2data, train=True, download=True, transform=data_transform )","6435a372":"from torch.utils.data import TensorDataset\n\n# wrap tensors into a dataset\ntrain_ds = TensorDataset(x_train, y_train)\n\nfor x,y in train_ds:\n    print(x.shape, y.item())\n    break","933f8142":"from torch.utils.data import DataLoader\n\n# create a data loader for training data\ntrain_dl = DataLoader(train_ds, batch_size=8)\n\nfor x,y in train_dl:\n    print(x.shape)\n    print(y.shape)\n    break","409e88c6":"## Exploring PyTorch data tools to load and preprocess data","2f363452":"1. Create a PyTorch dataset by warapping train dataset","629e51af":"8. Create a grid of images and display them","1af494bc":"#### To easily iterate over the data during training, we can create a data loader using *DataLoader* class","e318c874":"## Loading a Dataset","317e1309":"1. Create a dataloader for training data","d3d1e72f":"7. Define a helper function to display tensors as images","6cfe8130":"6. Import required libraries to display the images.","5635b158":"If the data is available in tensors, wrap them as a PyTorch dataset using *TensorDataset* class. ","cfedb20f":"## Wrapping tensors into a dataset","bfaf6e2a":"5. Adding a new dimension to the tensors to become Batch * Channels * Height * Width","6bf1bb2c":"Image transformation(augmentation) is a technique used to improve a model's performance.","e9eb4396":"3. Load MNIST test dataset.","a82d3bb5":"2. Extract input data and target labels.","da6e0560":"1. Load MNIST dataset from torchvision","acd944ae":"4. Extract input data and target labels.","39135141":"## Creating data loaders","67d3cb31":"### we can also pass the transformer function to the dataset class.","dfc074f1":"1. Define a transformer class to apply some image transformations","1408e648":"2. Apply transformations on an image","95fca891":"## Data Transformation"}}