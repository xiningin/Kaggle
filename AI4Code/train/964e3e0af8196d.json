{"cell_type":{"0f73b995":"code","30076c79":"code","dd0ecf51":"code","5b06f20d":"code","23182301":"code","ced0423b":"code","9b426a5d":"code","1878561f":"code","ae469777":"code","94867ec1":"code","a776c9a2":"code","df9bd15b":"code","6940b318":"code","ce8550c9":"code","30860da8":"code","a51446f9":"code","97dc4587":"code","e6f9051e":"code","c682820a":"code","87912943":"code","3f2c6cc3":"code","26f7916d":"code","d4d8f6d0":"code","69e1869e":"markdown","48789f15":"markdown","0ae1ad14":"markdown","b2db640c":"markdown","0387f424":"markdown","849f5216":"markdown","747ddb03":"markdown","823a1d78":"markdown","e4dcc646":"markdown","2485f770":"markdown","4e26435f":"markdown","5eba25b1":"markdown","5da0dec9":"markdown","e77dc5a3":"markdown","fb8469ef":"markdown","7a6074cd":"markdown","b8e2c929":"markdown","96f267aa":"markdown","753b4b3b":"markdown","9820d68d":"markdown","fd5372ed":"markdown","2083ab8d":"markdown"},"source":{"0f73b995":"%matplotlib inline\nimport pandas as pd\nimport numpy as np\nimport json\nimport matplotlib.pyplot as plt","30076c79":"dfAnv = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/anv.csv', delimiter=',')\ndfAnv.info()","dd0ecf51":"dfAnv.head(1)","5b06f20d":"dfEleitorado = pd.read_csv('..\/input\/dataviz-facens-20182-aula-1-exerccio-2\/BR_eleitorado_2016_municipio.csv', delimiter=',')\ndfEleitorado.info()","23182301":"dfEleitorado.head(1)","ced0423b":"dfPorcentGenNaoInformado = round((dfEleitorado['gen_nao_informado'] \/ dfEleitorado['total_eleitores']) * 100,4) # .sort_values('gen_nao_informado', ascending=False)\ndfPorcentGenNaoInformado.sort_values(ascending=False).head(13)","9b426a5d":"nomesRepetidos = dfEleitorado['nome_municipio'].value_counts()\nprint('Munic\u00edpios que tem nome repetido: ', len(nomesRepetidos[nomesRepetidos > 1]))\n\nnomesRepetidos = (dfEleitorado['nome_municipio'] + ' (' + dfEleitorado['uf'] + ')').value_counts()\nprint('Munic\u00edpios com o mesmo nome em um mesmo estado: ', len(nomesRepetidos[nomesRepetidos > 1]))","1878561f":"dfEleitorado.insert(3, 'municipio', dfEleitorado['nome_municipio'] + ' (' + dfEleitorado['uf'] + ')')\ndfEleitorado.head(1)","ae469777":"dfEleitorado['f_inf_18'] = dfEleitorado['f_16'] + dfEleitorado['f_17']\ndfEleitorado['f_sup_69'] = dfEleitorado['f_70_79'] + dfEleitorado['f_sup_79']\ndfEleitorado['facultativos'] = dfEleitorado['f_inf_18'] + dfEleitorado['f_sup_69']\ndfEleitorado['f_18_24'] = dfEleitorado['f_18_20'] + dfEleitorado['f_21_24']\ndfEleitorado['f_25_44'] = dfEleitorado['f_25_34'] + dfEleitorado['f_35_44']\ndfEleitorado['f_45_69'] = dfEleitorado['f_45_59'] + dfEleitorado['f_60_69']\ndfEleitorado.head(1)","94867ec1":"variaveis = ['uf','municipio','total_eleitores','gen_feminino','gen_masculino','f_inf_18','f_18_24','f_25_44','f_45_69','f_sup_69','facultativos']\ndf = dfEleitorado[variaveis]\ndf.head(5)","a776c9a2":"d = 'Quantitativa Discreta'\nn = 'Qualitativa Nominal'\nresposta = {\n    'Variavel': variaveis,\n    'Classifica\u00e7\u00e3o': [n, n, d,d,d,d,d,d,d,d,d]\n}\nresposta = pd.DataFrame(resposta)\nresposta","df9bd15b":"freqUf = pd.DataFrame(df['uf'].value_counts().sort_values(ascending=False))\nfreqUf","6940b318":"freqMunicipio = pd.DataFrame(df['municipio'].value_counts().sort_values(ascending=False))\nfreqMunicipio","ce8550c9":"def scatterPlotForLatLong(df, title, s, c=None):\n    if c is None:\n        c = s\n    return df.plot(\n        kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4, legend=False,\n        title=title,\n        s=s\/3500, #label=\"eleitorado\",\n        c=c, figsize=(10,7),\n        cmap=plt.get_cmap(\"jet\"), colorbar=True\n    )","30860da8":"totalEleitorado = df.groupby(['uf'])['total_eleitores'].agg('sum')\n\ndfUfs = pd.DataFrame({\n    'longitude': [-70.55,-36.82,-65.10,-51.77,-41.71,-39.53,-40.34,-49.86,-45.44,-44.38,-54.54,-55.42,-52.48,-36.72,-37.86,-42.28,-51.55,-42.66,-36.59,-63.34,-61.33,-53.50,-50.95,-37.45,-48.79,-48.26],\n    'latitude':  [-8.77,-9.62,-3.47,1.41,-13.29,-5.20,-19.19,-15.98,-5.42,-18.10,-20.51,-12.64,-3.79,-7.28,-8.38,-6.60,-24.89,-22.25,-5.81,-10.83,1.99,-30.17,-27.45,-10.57,-22.19,-9.46],\n    'uf': list(totalEleitorado.index),\n    'eleitorado': totalEleitorado.values\n})","a51446f9":"df = df.assign(longitude=np.nan)\ndf = df.assign(latitude=np.nan)\nwith open('..\/input\/cidades-latitude-longitude\/cidadeLatlong.json', 'r') as cidadesLatlong:\n    json_object = json.loads(cidadesLatlong.read())\n    for index, value in df.iterrows():\n        latlong = json_object[value['municipio']]\n        df.loc[index, 'longitude'] = latlong['longitude']\n        df.loc[index, 'latitude'] = latlong['latitude']\ndf.head()","97dc4587":"ax = scatterPlotForLatLong(\n    dfUfs,\n    'Dispers\u00e3o do eleitorado nacional em cada estado (%)',\n    dfUfs[\"eleitorado\"],\n    dfUfs[\"eleitorado\"]\/dfUfs[\"eleitorado\"].sum()*100\n)\n\nfor index, value in dfUfs.iterrows():\n    annotate = ax.annotate(value['uf'], (value['longitude'] -0.62, value['latitude']-0.35))\n","e6f9051e":"ax = scatterPlotForLatLong(\n    df,\n    'Dispers\u00e3o de eleitores nas cidades',\n    df[\"total_eleitores\"]\n)\n\nax = scatterPlotForLatLong(\n    df,\n    'Eleitores facultativos com menos de 18 anos nas cidades',\n    df[\"f_inf_18\"]\n)\n\nax = scatterPlotForLatLong(\n    df,\n    'Eleitores facultativos com mais de 69 anos nas cidades',\n    df[\"f_sup_69\"]\n)\n","c682820a":"totalEleitores = df['total_eleitores'].sum()\nplot = pd.DataFrame(\n    {'Total': [df['gen_masculino'].sum() , df['gen_feminino'].sum()]},\n    index=['Masculino', 'Feminino']\n).plot.pie(y='Total',autopct='%1.1f%%', title='Total de eleitores por g\u00eanero', startangle=20)","87912943":"fig, ax = plt.subplots(figsize=(12,12))\ndfGenero = df.groupby('uf').agg('sum')[['gen_feminino',\"gen_masculino\"]].sort_values('uf', ascending=False)\ndfGenero['percent_gen_masculino'] = round(dfGenero['gen_masculino'] \/ (dfGenero['gen_feminino'] + dfGenero['gen_masculino']) * 100, 1)\ndfGenero['percent_gen_feminino'] = round(dfGenero['gen_feminino'] \/ (dfGenero['gen_feminino'] + dfGenero['gen_masculino']) * 100, 1)\ndfGenero = dfGenero.drop(['gen_feminino', 'gen_masculino'], axis=1)\ndfGenero.plot(kind='barh', ax=ax, grid=True)\nplt.legend(['Masculino', 'Feminino'])\nplt.title(\"Porcentagem de eleitores de cada g\u00eanero nos estados\")\nlabel = plt.ylabel(\"Estados\")","3f2c6cc3":"totalEleitores = df['total_eleitores'].sum()\nfaixasEtarias = {\n    '< 18':   (df['f_inf_18'].sum() \/ totalEleitores) * 100,\n    '18 a 24':(df['f_18_24'].sum()  \/ totalEleitores) * 100,\n    '25 a 44':(df['f_25_44'].sum()  \/ totalEleitores) * 100,\n    '45 a 69':(df['f_45_69'].sum()  \/ totalEleitores) * 100,\n    '> 69':   (df['f_sup_69'].sum() \/ totalEleitores) * 100,\n}\n\nnames = list(faixasEtarias.keys())\nvalues = list(faixasEtarias.values())\n\nfig, ax = plt.subplots(figsize=(8,5))\nax.bar(names, values)\n\nfor i, v in enumerate(values):\n    ax.text(i - 0.2 ,v + 0.5, \"{0:.2f}%\".format(v))\n\ntitle = plt.title(\"Porcentagem do total de eleitores por faixa et\u00e1ria\")","26f7916d":"faixasEtarias = ['f_inf_18', 'f_18_24', 'f_25_44', 'f_45_69', 'f_sup_69']\ndfUfIdades = df.groupby('uf').agg('sum')[faixasEtarias + ['total_eleitores']].sort_values('uf', ascending=False)\nfor faixaEtaria in faixasEtarias:\n    dfUfIdades[faixaEtaria] = dfUfIdades[faixaEtaria] \/ dfUfIdades['total_eleitores'] * 100\ndfUfIdades.drop('total_eleitores', axis=1, inplace=True)\nplot = dfUfIdades.plot(kind='bar', grid=True, figsize=(22,8), stacked=True, cmap=plt.get_cmap('Set3'))","d4d8f6d0":"dfFacultativos = df.groupby('uf').agg('sum')[['facultativos', 'total_eleitores']]\ndfFacultativos = dfFacultativos.sort_values('uf', ascending=False)\ndfFacultativos['facultativos'] = dfFacultativos['facultativos'] \/ dfFacultativos['total_eleitores'] * 100\ndfFacultativos.drop('total_eleitores', axis=1, inplace=True)\nplot = dfFacultativos.plot(\n    kind='bar', grid=True, figsize=(22,8), stacked=True, cmap=plt.get_cmap('Set3'),\n    title='Percentual de votos facultativos por estado'\n)","69e1869e":"# Cidades X Eleitorado","48789f15":"Para cada uma das suas vari\u00e1veis escolhidas, forne\u00e7a:\n\n\n### Quest\u00e3o 1 - Item A - Classifica\u00e7\u00e3o das vari\u00e1veis\n\nClassifique todas as vari\u00e1veis escolhidas, e construa um dataframe com sua resposta.\nExemplo:","0ae1ad14":"# UF X Eleitorado","b2db640c":"### Pr\u00e9via do dataset anv\n**Colunas e exemplo de registro**","0387f424":"### Quest\u00e3o 1 - Item B - Tabela de frequ\u00eancia\n\nConstrua uma tabela de frequ\u00eancia para cada uma das **vari\u00e1veis qualitativas** que voc\u00ea escolheu (caso n\u00e3o tenha escolhido nenhuma, deixe esta quest\u00e3o em branco). Uma dica: a fun\u00e7\u00e3o *value_counts()* do Pandas pode ser muito \u00fatil. =)\n","849f5216":"# Eleitores X Faixas et\u00e1rias","747ddb03":"### Pr\u00e9via do dataset eleitorado\n**Colunas e exemplo de registro**","823a1d78":"## DataFrame com as vari\u00e1veis escolhidas","e4dcc646":"**Entendendo a repeti\u00e7\u00e3o de nomes de munic\u00edpios**","2485f770":"## !!! Para a apresenta\u00e7\u00e3o da vari\u00e1vel de estado e cidade, fiz o processamento de uma base externa de estados e munic\u00edpios para obter a informa\u00e7\u00e3o da LATITUDE E LONGITUDE de cada mun\u00edcipio do nosso dataset\n\nO dataset est\u00e1 disponivel no seguinte link: https:\/\/github.com\/kelvins\/Municipios-Brasileiros\/tree\/main\/csv\n\nPeguei as latitudes e longitudes dos ESTADOS e inseri no bloco a seguir.","4e26435f":"COM A BASE DE MUNIC\u00cdPIOS, gerei um dicionario para associar o nome da cidade com sua respectiva latitude e longitude. Feito isso, salvei no json associado ao notebook **(cidadeLatlong.json)**.\n\nNa c\u00e9lula abaixo, incluo a latitude e longitude no dataframe","5eba25b1":"# Estados X Votos facultativos","5da0dec9":"# Eleitores por g\u00eanero","e77dc5a3":"## Quest\u00e3o 1\n**Enunciado:**  Este notebook est\u00e1 associado ao *Kaggle Dataset* chamado \"Exerc\u00edcio 1\". Este *Kaggle Dataset* possui dois arquivos em formato CSV (anv.csv e BR_eleitorado_2016_municipio ). Escolha um dos datasets dispon\u00edveis e j\u00e1 conhecidos, a seu crit\u00e9rio. Uma vez definido o csv, escolha no m\u00ednimo 7 e no m\u00e1ximo 12 vari\u00e1veis (colunas) que voc\u00ea avalia como sendo relevantes. ","fb8469ef":"### O dataset escolhido foi do eleitorado\n\nAs primeiras variaveis selecionadas foram: \n1. uf\n2. total_eleitores\n3. gen_feminino\n4. gen_masculino\n\nAlgumas que n\u00e3o ser\u00e3o utilizadas s\u00e3o:\n* **cod_municipio_tse**, pois os valores n\u00e3o tem significado, diferente do nome da cidade, por ex;\n* **gen_nao_informado**, pois representa uma parcela muito pequena de eleitores. Apenas 12 cidades t\u00eam entre 1 e 5% de eleitores que n\u00e3o informaram o g\u00eanero;","7a6074cd":"**nome_municipio** tem o problema de que alguns repetem entre os estados. Para solucionar isso, ser\u00e1 criada uma nova coluna no seguinte formato: CIDADE (UF).\n\nEssa abordagem facilitar\u00e1 a visualiza\u00e7\u00e3o e entendimento de gr\u00e1ficos que apresentarem o nome dos munic\u00edpios, por dar o contexto do estado correspondente.\n\n5. municipio","b8e2c929":"# Estados X Eleitores por g\u00eanero","96f267aa":"<div align=\"center\">\n <img src=\"https:\/\/raw.githubusercontent.com\/matheusmota\/dataviz2018\/master\/resources\/images\/logo_facens_pos.png\" width=\"150px\">\n <h1> Dataviz - Data Science Specialization Program - FACENS<\/h1>\n<\/div>\n<br><br>\n# Exerc\u00edcio 1 - Primeiro contato com o Kaggle\n(valendo nota)\n\n* **Data de entrega:** at\u00e9 o final da aula \n* **Professor:**  Matheus Mota\n* **Aluno:** Murilo Spinoza de Arruda\n* **RA:** 203144","753b4b3b":"### Quest\u00e3o 1 - Item C - Representa\u00e7\u00e3o Gr\u00e1fica\nPara cada uma das vari\u00e1veis, produza um ou mais gr\u00e1ficos, usando matplotlib, que descreva seu comportamento \/ caracteristica. Lembre-se que estes gr\u00e1ficos precisam ser compat\u00edveis com a classifica\u00e7\u00e3o da vari\u00e1vel. ","9820d68d":"Para um melhor aproveitamento das informa\u00e7\u00f5es e respeitar o n\u00famero de vari\u00e1veis proposto, ser\u00e3o criadas novas colunas para as faixas etarias de jovens e idosos que t\u00eam o voto facultativo.\n6. f_inf_18\n7. f_sup_69\n8. facultativos\n\nE, para contemplar o maior n\u00famero de eleitores na an\u00e1lise, algumas faixas et\u00e1rias ser\u00e3o agrupadas\n\n9. f_18_24 (f_18_20 + f_21_24)\n10. f_25_44 (f_25_34 + f_35_44)\n11. f_45_69 (f_45_59 + f_60_69)","fd5372ed":"# Estados X Eleitores por faixas et\u00e1rias","2083ab8d":"**Verificando a importancia da coluna de g\u00eanero n\u00e3o informado**"}}