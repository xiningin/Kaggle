{"cell_type":{"0e4dfe4f":"code","898a77a8":"code","9904c295":"code","3d3f662a":"code","52949d5f":"code","2267ff7b":"code","291b2f6b":"code","a32ee30e":"markdown","30bb2df9":"markdown","3e85747f":"markdown","4c5a63f3":"markdown","0e145bbf":"markdown"},"source":{"0e4dfe4f":"import numpy as np \nimport pandas as pd \nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree","898a77a8":"df_train = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\n\nprint(df_train.shape)\nprint(df_test.shape)","9904c295":"df_train.iloc[:,784]","3d3f662a":"X = []\ny = []\nfor row in df_train.iterrows() :\n    label = row[1][0] # label (the number visible in the image)\n    image = list(row[1][1:]) # image\/pixel information as list, without label\n    image = np.array(image) \/ 255 #normalizing the image for ease in calculation\n    X.append(image)\n    y.append(label)\n\nX = np.array(X)\ny = np.array(y)\nprint(len(X))\nprint(len(y))","52949d5f":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\nprint(len(X_train), len(y_train))\nprint(X_train[1].shape)","2267ff7b":"clf = tree.DecisionTreeClassifier(criterion=\"entropy\") #id3 algorithm\nclf = clf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nprint(y_pred[0:20])\nprint(y_test[0:20])\nprint(metrics.accuracy_score(y_test, y_pred))","291b2f6b":"clf = tree.DecisionTreeClassifier(criterion=\"gini\") #CART algorithm\nclf = clf.fit(X_train, y_train)\ny_pred = clf.predict(X_test)\nprint(y_pred[0:20])\nprint(y_test[0:20])\nprint(metrics.accuracy_score(y_test, y_pred))","a32ee30e":"**Visualizing the labels for all training data**","30bb2df9":"# CART (Classification and Regression Tree) algorithm","3e85747f":"# ID3 algorithm","4c5a63f3":"**Loading training and test data**","0e145bbf":"**Importing necessary libraries**"}}