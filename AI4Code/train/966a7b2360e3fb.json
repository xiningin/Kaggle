{"cell_type":{"4ab50a5f":"code","4b37b355":"code","3c0f234a":"code","944f796a":"code","c44a3698":"code","b394e639":"code","e7934907":"code","54178a69":"code","7f186a6e":"code","8c70a0d8":"code","00e5c5be":"code","fe6b2d66":"code","691c1ea4":"code","400f264f":"code","8fa089a0":"code","62093d48":"code","052dc02f":"code","c7c715c9":"code","28f0f785":"code","de0960e4":"code","1e91250e":"code","3bd03de1":"code","1a19451c":"code","93a424ff":"code","084f3e86":"markdown","c94a7041":"markdown","9e9d16fb":"markdown","05803927":"markdown","a20c6038":"markdown","6103715e":"markdown","bec1c187":"markdown","2ecec163":"markdown","add53579":"markdown","8495f2d7":"markdown","d7e9109d":"markdown","cfb7edf1":"markdown","bd373936":"markdown","71cf962a":"markdown","db5845e4":"markdown","78d6d892":"markdown","594bb551":"markdown","a8ca7411":"markdown","ab625e93":"markdown"},"source":{"4ab50a5f":"# Function used in this notebook\ndef count_unique_values(df) :\n    var = list(df.columns)\n    print('Count unique values :')\n    \n    for i in var :\n        count = len(df[i].unique())\n        print(i,':',count)\n\ndef check_missing_values(df) :\n    n = len(df)\n    var = list(df.columns)\n    missing_var = []\n    missing_count = []\n    print('Variable with missing values :')\n    \n    for i in var :\n        count = np.sum(df[i].isna())\n        count_percentage = round(count*100\/n, 2)\n        if count > 0 :\n            print(i,':',count,'\/\/',count_percentage,'%')\n            missing_var.append(i)\n            missing_count.append(count_percentage)\n    \n    return missing_var, missing_count\n\ndef stepwise_selection(X, y, \n                       initial_list=[], \n                       threshold_in=0.01, \n                       threshold_out = 0.05, \n                       verbose=True):\n \n    included = list(initial_list)\n    while True:\n        changed=False\n        # forward step\n        excluded = list(set(X.columns)-set(included))\n        new_pval = pd.Series(index=excluded)\n        for new_column in excluded:\n            model = sm.genmod.GLM(y, sm.add_constant(pd.DataFrame(X[included+[new_column]]))\n                                ,family=sm.genmod.families.Gamma(link=sm.genmod.families.links.log)).fit()\n            new_pval[new_column] = model.pvalues[new_column]\n        best_pval = new_pval.min()\n        if best_pval < threshold_in:\n            best_feature = new_pval.argmin()\n            included.append(best_feature)\n            changed=True\n            if verbose:\n                print('Add  {:30} with p-value {:.6}'.format(best_feature, best_pval))\n\n        # backward step\n        model = sm.genmod.GLM(y, sm.add_constant(pd.DataFrame(X[included]))\n                            ,family=sm.genmod.families.Gamma(link=sm.genmod.families.links.log)).fit()\n        # use all coefs except intercept\n        pvalues = model.pvalues.iloc[1:]\n        worst_pval = pvalues.max() # null if pvalues is empty\n        if worst_pval > threshold_out:\n            changed=True\n            worst_feature = pvalues.argmax()\n            included.remove(worst_feature)\n            if verbose:\n                print('Drop {:30} with p-value {:.6}'.format(worst_feature, worst_pval))\n        if not changed:\n            break\n    return included\n\ndef dataset_ready(x_train, y_train) :\n    # Make dummy variable for categorical variable\n    X = pd.get_dummies(x_train)\n\n    # Make Intercept\n    X['Intercept'] = [1]*len(X)\n\n    # Make interaction between 'gdp_per_capita' and 'population'\n    X['gdp_pop'] = np.log(X['gdp_per_capita']*X['population'])\n\n    # Scale continuous variable with log function\n    cont_var = ['gdp_per_capita','population']\n    for i in cont_var :\n        X[i] = np.log(X[i])\n\n    # Make interaction between 'continent' and 'gdp'\n    col = pd.Series(X.columns)\n    var1 = list(X.filter(like='continent').columns)\n    for i in var1 :\n        string = i+'_gdp'\n        X[string] = X[i]*X['gdp_per_capita']   \n\n    # Make interaction between 'continent' and 'population'\n    for i in var1 :\n        string = i+'_population'\n        X[string] = X[i]*X['population']  \n\n    # Target variable\n    Y = y_train\n    \n    return X,Y\n\n# I use stepwise algorith from this link https:\/\/datascience.stackexchange.com\/questions\/24405\/how-to-do-stepwise-regression-using-sklearn","4b37b355":"# Load and configure notebook settings\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport seaborn as sns\nimport statsmodels.api as sm\n%matplotlib inline\n\nfrom matplotlib.pylab import rcParams\n# For every plotting cell use this\nrcParams['figure.figsize'] = [10,5]\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\npd.set_option('display.max_rows', 50)\npd.set_option('display.max_columns', 50)\n\nsns.set()\nsns.set_style('whitegrid')","3c0f234a":"# Load dataset\ndf_train = pd.read_csv('..\/input\/master.csv')","944f796a":"# Overview of the dataset\ndf_train.head()","c44a3698":"# Change some variable name\ndf_train.rename(columns={' gdp_for_year ($) ':'gdp_for_year', 'gdp_per_capita ($)':'gdp_per_capita'}, inplace=True)\ndf_train_v2 = df_train.copy()","b394e639":"# Summary of the dataset\ndf_train.describe()","e7934907":"# Overview data types of the dataset\nprint('Data types of the dataset :')\nprint(df_train.dtypes)","54178a69":"# Change 'gdp_for_year' data type\nchange_var = []\nfor i in df_train['gdp_for_year'] :\n    split = i.split(',')\n    val = ''\n    for j in split :\n        val = val + j\n    change_var.append(int(val))\n    \ndf_train['gdp_for_year'] = change_var","7f186a6e":"# See the correlation between the variables\nrcParams['figure.figsize'] = [10,5]\nsns.heatmap(df_train.corr(), annot=True, linewidths=0.2, cmap='coolwarm' )\nplt.title('Correlation heatmap of the dataset', size=15, fontweight='bold') ;\nplt.xticks(rotation=45)","8c70a0d8":"# Check for missing values in the dataset\nmissing_var, missing_count = check_missing_values(df_train)","00e5c5be":"# Remove unwanted variable\ndf_train_v2.drop(columns=['country-year','HDI for year','gdp_for_year'], inplace=True)","fe6b2d66":"# Check how many unique values in categorical variable\ncategory_var = ['country','year','sex','age','generation']\ncount_unique_values(df_train[category_var])","691c1ea4":"# Check the distribution of target variable 'suicides_no'\nrcParams['figure.figsize'] = [15,5]\ngs = gridspec.GridSpec(1,2)\nax1 = plt.subplot(gs[0,0])\nax2 = plt.subplot(gs[0,1])\n\n# Plot 1 - Distribution of the target variable\nsns.distplot(df_train['suicides_no'], color='#7f181b', kde=True, hist=False, ax=ax1) ;\nax1.set_title('Distribution of the suicides_no', size=15, fontweight='bold') ;\n\n# Plot 2 - Distribution of the log(target variable)\nsns.distplot(np.log(df_train[df_train['suicides_no']>0]['suicides_no']), color='#7f181b', kde=True, hist=True, ax=ax2) ;\nax2.set_title('Distribution of the log of population', size=15, fontweight='bold') ;","400f264f":"# Make new variable 'continent' that represent continent of each country\n# Based on wikipedia.com\ncountry = df_train_v2['country'].unique()\nnew_val = ['Europe','Central America','South America','Asia','Central America'\n          ,'Australia','Europe','Asia','Central America','Asia'\n          ,'Central America','Europe','Europe','Central America'\n          ,'Europe','South America','Europe','Africa'\n          ,'North America','South America','South America','Central America','Europe','Central America'\n          ,'Asia','Europe','Europe','Central America','South America'\n          ,'Central America','Europe','Oceania','Europe','Europe','Asia'\n          ,'Europe','Europe','Central America','Central America','South America','Europe'\n          ,'Europe','Europe','Asia','Europe','Central America','Asia'\n          ,'Asia','Oceania','Asia','Asia','Europe'\n          ,'Europe','Europe','Asia','Asia','Europe'\n          ,'Africa','North America','Asia','Europe','Europe'\n          ,'Oceania','Central America','Europe','Asia','Central America','South America'\n          ,'Asia','Europe','Europe','Central America','Asia'\n          ,'Asia','Europe','Europe'\n          ,'Central America','Central America'\n          ,'Central America','Europe','Europe'\n          ,'Africa','Asia','Europe','Europe','Africa'\n          ,'Europe','Asia','South America','Europe','Europe'\n          ,'Asia','Central America','Asia','Asia'\n          ,'Europe','Asia','Europe'\n          ,'North America','South America','Asia']\nnew_var = []\n\nfor i in range(len(country)) :\n    n = len(df_train[df_train['country']==country[i]])\n    for j in range(n) :\n        new_var.append(new_val[i])\n        \ndf_train_v2['continent'] = new_var","8fa089a0":"# Top 10 country with highest suicide median\n# We use median because the distribution is skewed to the right\ndf_check = df_train_v2.groupby(by=['country','continent']).median()[['suicides_no','population','gdp_per_capita']].sort_values('suicides_no',ascending=False).reset_index()\ncat = list(df_check.head(10)['country'])\nprint('Top 10 country with highest suicide median ')\nprint(df_check.head(10))","62093d48":"# Top 10 country number of suicides growth year by year\n# We use median because the distribution is skewed to the right\ndf_check = df_train.groupby(by=['country','year']).median()['suicides_no'].reset_index()\nrcParams['figure.figsize'] = [10,6]\ngs = gridspec.GridSpec(2,1)\nax1 = plt.subplot(gs[0,0])\nax2 = plt.subplot(gs[1,0])\n\n# Plot 1 - Line plot for top 3 country\nfor i in cat[:3] :\n    sns.lineplot(data=df_check[df_check['country']==i], x='year', y='suicides_no', ax=ax1) ;\n    \nax1.legend(cat[:3], loc=7,  bbox_to_anchor=(1.3, 0.5)) ;\nax1.set_title('Number of suicide growth of top 3 country', size=15, fontweight='bold') ;\n\n# Plot 2 - Line plot for reminding country\nfor i in cat[3:] :\n    sns.lineplot(data=df_check[df_check['country']==i], x='year', y='suicides_no', ax=ax2) ;\n    \nax2.legend(cat[3:], loc=7,  bbox_to_anchor=(1.3, 0.5)) ;\nax2.set_xlabel('Number of suicide growth of reminding country', size=15, fontweight='bold') ;","052dc02f":"# Count how many country in each continent recorded in the dataset\ncontinent = list(df_train_v2['continent'].unique())\nnew_val = pd.Series(new_val)\ncount = []\n\nprint('Count contry in each continent recorded in the dataset :')\nfor i in continent :\n    n = len(new_val[new_val==i])\n    count.append(n)\n    print(i,':',n)\n \n#  Plot\ndf = pd.DataFrame({'continent':continent, 'count':count})\ndf.sort_values(by='count', ascending=False, inplace=True)\nsns.catplot(data=df, x='continent', y='count') ;\nplt.xticks(rotation=45)\nplt.title('How many country in each continent', size=15, fontweight='bold') ;","c7c715c9":"# Number of suicides growth in each continent\ndf_check = df_train_v2.groupby(by=['continent','year']).median()['suicides_no'].reset_index()\nrcParams['figure.figsize'] = [10,6]\ngs = gridspec.GridSpec(2,1)\nax1 = plt.subplot(gs[0,0])\nax2 = plt.subplot(gs[1,0])\n\n# Plot 1 - Line plot for North America\nsns.lineplot(data=df_check[df_check['continent']=='North America'], x='year', y='suicides_no', ax=ax1 ) ;\nax1.legend(['North America'], loc=7,  bbox_to_anchor=(1.3, 0.5)) ;\nax1.set_title('Number of suicide growth of North America', size=15, fontweight='bold') ;\n\n# Plot 2 - Line plot for reminding continent\ncontinent = pd.Series(continent)\nfor i in continent[continent!='North America'] :\n    sns.lineplot(data=df_check[df_check['continent']==i], x='year', y='suicides_no', ax=ax2) ;\n    \nax2.legend(continent[continent!='North America'], loc=7,  bbox_to_anchor=(1.3, 0.5)) ;\nax2.set_xlabel('Number of suicide growth of reminding continent', size=15, fontweight='bold') ;","28f0f785":"# Check the effect of gender and sex\nrcParams['figure.figsize'] = [15,5]\ngs = gridspec.GridSpec(1,2)\nax1 = plt.subplot(gs[0,0])\nax2 = plt.subplot(gs[0,1])\n\n# Plot 1 - based on\nsns.barplot(data=df_train_v2, x='sex', y='suicides_no', hue='age', ax=ax1\n           ,hue_order=['5-14 years','15-24 years','25-34 years','35-54 years','55-74 years','75+ years']) ;\nax1.set_title('Disrtibution of suicide count by sex', size=15, fontweight='bold') ;\n\n# Plot 2\nsns.barplot(data=df_train_v2, x='sex', y='suicides\/100k pop', hue='age', ax=ax2\n           ,hue_order=['5-14 years','15-24 years','25-34 years','35-54 years','55-74 years','75+ years']) ;\nax2.set_title('Disrtibution of suicide count (rescale) by sex ', size=15, fontweight='bold') ;","de0960e4":"# Check the effect of variable 'generation'\nrcParams['figure.figsize'] = [16,5]\ngs = gridspec.GridSpec(1,3, width_ratios=[2,8,6])\nax1 = plt.subplot(gs[0,0])\nax2 = plt.subplot(gs[0,1])\nax3 = plt.subplot(gs[0,2])\n\n# Plot 1 - North America perspective\nsns.barplot(data=df_train_v2[df_train_v2['continent']=='North America'], x='continent', y='suicides_no', ax=ax1\n           ,hue_order=['G.I. Generation','Silent','Boomers','Generation X','Milennials','Generation Z'], hue='generation',) ;\nax1.get_legend().remove()\nax1.set_title('(NA)', size=15, fontweight='bold') ;\n\n# Plot 2 - Europe, South America, Asia, Australia perspective\nsns.barplot(data=df_train_v2[df_train_v2['continent'].isin(['Europe','South America','Asia','Australia'])]\n            , x='continent', y='suicides_no'\n            ,hue='generation', ax=ax2\n           ,hue_order=['G.I. Generation','Silent','Boomers','Generation X','Milennials','Generation Z']) ;\nax2.set_title('Suicide count by generation (E,SA,AS,AUS)', size=15, fontweight='bold') ;\n\n# Plot 3 - Central America, Oceania, Africa perspective\nsns.barplot(data=df_train_v2[df_train_v2['continent'].isin(['Central America','Oceania','Africa'])]\n            , x='continent', y='suicides_no'\n            ,hue='generation', ax=ax3\n           ,hue_order=['G.I. Generation','Silent','Boomers','Generation X','Milennials','Generation Z']) ;\nax3.get_legend().remove()\nax3.set_title('(CA,O,AF)', size=15, fontweight='bold') ;","1e91250e":"# Split train and validation set\nfrom sklearn.model_selection import train_test_split\ndummy = pd.Series(df_train_v2.columns)\ndf_train_v3 = df_train_v2[df_train_v2>0].dropna()\n\nx = dummy[~dummy.isin(['country','suicides_no','suicides\/100k pop'])]\ny = 'suicides\/100k pop'\n                      \nx_train, x_valid, y_train, y_valid = train_test_split(df_train_v3[x], df_train_v3[y], test_size=0.2, random_state=11)","3bd03de1":"# Preparing dataset\nX, Y = dataset_ready(x_train, y_train)\nX2, Y2 = dataset_ready(x_valid, y_valid)\n\nbest_var = stepwise_selection(X,Y, list(X.columns))","1a19451c":"# Generalize Linear Model - Gamma distribution\nfrom statsmodels.tools.eval_measures import rmse\nimport statsmodels.api as sm\nGLM_gamma = sm.genmod.GLM(endog=Y, exog=X[best_var]\n                            ,family=sm.genmod.families.Gamma(link=sm.genmod.families.links.log))\nGLM_result = GLM_gamma.fit()\nprint(GLM_result.summary())\nprint('Model AIC :',GLM_result.aic)\nprint('Model BIC :',GLM_result.bic)\nprint('Model deviance :',GLM_result.deviance)\nprint('Model RMSE :',rmse(GLM_result.predict(X2[best_var]),Y2))","93a424ff":"# Preparing prediction\nvar = pd.Series(df_train_v3.columns)\nx = var[~var.isin(['country','suicides_no','suicides\/100k pop'])]\ny = 'suicides\/100k pop'\n\nX3 = df_train_v3[x]\nY3 = df_train_v3[y]\n\n# Input data for prediction\nnx = len(X3)\nny = len(Y3)\nX3.loc[nx+1] = [2016, 'male', '25-34 years', 21845000, 57588, 'Millenials', 'North America']\nX3.loc[nx+2] = [2016, 'female', '25-34 years', 21917000, 57588, 'Millenials', 'North America']\nX3.loc[nx+3] = [2016, 'male', '35-54 years', 40539000, 57588, 'Generation X', 'North America']\nX3.loc[nx+4] = [2016, 'female', '35-54 years', 42031000, 57588, 'Generation X', 'North America']\nX3.loc[nx+5] = [2016, 'male', '15-24 years', 21719000, 57588, 'Millenials', 'North America']\nX3.loc[nx+6] = [2016, 'female', '15-24 years', 21169000, 57588, 'Millenials', 'North America']\nY3.loc[ny+1] = 26.95\nY3.loc[ny+2] = 6.75\nY3.loc[ny+3] = 28.35\nY3.loc[ny+4] = 9.46\nY3.loc[ny+5] = 21.06\nY3.loc[ny+6] = 5.42\n\n# Tranform the data to be ready for precition\nX3,Y3 = dataset_ready(X3, Y3)\nX3 = X3.loc[nx+1:nx+6]\nY3 = Y3.loc[ny+1:nx+6]\n\n# Predict\npredict = GLM_result.predict(X3[best_var])\nfor i in range(len(predict)) :\n    print('Option',i+1)\n    print('Predicted suicide rates :',round(predict.iloc[i],2))\n    print('Actual suicide rates :',Y3.iloc[i])\n    print('')","084f3e86":"Variable __'HDI for year'__ have too many missing values and we know that this variable have high correlation with variable __'gdp_per_capita'__, so we should remove this variable","c94a7041":"After preparing the data by using insight we get from our analysis, now its time to do some modelling. We will test some combination using variable __suicide_no__ and __suicides\/100k pop__ as target variable and evaluate the best model using AIC\n-\tModel 1 ->  Model 0 + Intercation of continent with population + stepwise\n-\tModel 2 ->  Model 0 + Interaction of continent with gdp_per_capita   + stepwise\n-\tModel 3 -> Model 0 + Interaction of continent with population  and gdp  + stepwise\n-\tModel 4 ->  Model 0 + stepwise\n\nIn the end, our best model is Model 3 with __suicides\/100k pop__ as the target variable\n","9e9d16fb":"We can see that the top 3 country have a significant difference in suicides count with the the other country. Beside that we can see that generally the more population and gdp, the more suicides count a country have. But theres some country like Russia and Brazil that have high population but low gdp.  ","05803927":"# <font color='#00205b'>Conclusion<\/font>","a20c6038":"# <font color='#00205b'>Model Selection<\/font>","6103715e":"# <font color='#00205b'>Prediction<\/font>","bec1c187":"We can see that North America have a significant difference of number of suicides with the other continent. But we suspect thats because in this dataset, North America consist of only 3 countries. Which is why the aggregated number of suicides become higher than other continent. We suspect Australia also have the same situation (Australia consist of only Australia).\n\nFrom before we get that the 6 out of 10 top country with highest suicide count come from Europe. But in this plot wee see that the aggregated number of Europe is significantly lower than aggregated number from each all 6 country. With this we suspect that there must be some interaction between variable __'continent'__ with other variable that can explain the variability in target variable much better","2ecec163":"We can see that the target variable have a gamma \/ inverse gaussian distribution\n<br> __<font color='7f181b'>Conclusion<\/font>__ use GLM with gamma \/ inverse gaussian distribution","add53579":"# <font color='#00205b'>Data Preprocessing<\/font>","8495f2d7":"We can see from here that the dataset is mainly consist of country in Europe, Asia, and Central America. The other continent only consist of <10 countries","d7e9109d":"# <font color='#00205b'>Suicide Rates Overview 1985 to 2016<\/font>\nThis compiled dataset pulled from four other datasets linked by time and place, and was built to find signals correlated to increased suicide rates among different cohorts globally, across the socio-economic spectrum.\n\n__Objective__\n<br> Understand the main reason why people committed suicide country-scale \n\n__Variables__\n- (c) __country__\n- (n) __year__ : from 1985 - 2016\n- (c) __sex__  : male or female\n- (c) __age__ : grouped age\n- (n) __suicides_no__ : suicides count\n- (n) __population__ : \n- (n) __suicides\/100k pop__ : suicides count rescale\n- (c) __country-year__ : country with year combine\n- (n) __HDI for year__ : Human Development Index, higher better\n- (n) __gdp_for_year__ : Gross Domestic Product\n- (n) __gdp_per_capita__ : Gross Domestic Product rescale\n- (c) __generation__\n\n__References__\n<br>United Nations Development Program. (2018). Human development index (HDI). Retrieved from http:\/\/hdr.undp.org\/en\/indicators\/137506\n\nWorld Bank. (2018). World development indicators: GDP (current US$) by country:1985 to 2016. Retrieved from http:\/\/databank.worldbank.org\/data\/source\/world-development-indicators#\n\n[Szamil]. (2017). Suicide in the Twenty-First Century [dataset]. Retrieved from https:\/\/www.kaggle.com\/szamil\/suicide-in-the-twenty-first-century\/notebook\n\nWorld Health Organization. (2018). Suicide prevention. Retrieved from http:\/\/www.who.int\/mental_health\/suicide-prevention\/en\/","cfb7edf1":"We will be using United States data from 2016 with GDP_per_capita 57588 and in North America continent\n<br> __Option 1__ : Male within age 25-34 with population 21845000 Milennials generation with suicide rates 26.95\n<br> __Option 2__ : Female within age 25-34 with population 21917000 Milennials generation with suicide rates 6.75\n<br> __Option 3__ : Male within age 35-54 with population 40539000 X generation with suicide rates 28.35\n<br> __Option 4__ : Female within age 35-54 with population 42031000 X generation with suicide rates 9.46\n<br> __Option 5__ : Male within age 15-24 with population 21719000 Milennials generation with suicide rates 21.06\n<br> __Option 6__ : Female within age 15-24 with population 21169000 Milennials generation with suicide rates 5.42\n\nSources : \n<br> https:\/\/en.wikipedia.org\/wiki\/Suicide_in_the_United_StatesFrom\n<br> https:\/\/www.census.gov\/data\/tables\/2016\/demo\/age-and-sex\/2016-age-sex-composition.html\n<br> https:\/\/www.google.com\/search?client=opera&q=united+states+gpd+per+capita+2016&sourceid=opera&ie=UTF-8&oe=UTF-8","bd373936":"- Suicide rates in United States is actually increasing just like Central for Disease Control say in their report. But in another contry it usually not the case except for South Korea. More detailed dataset is needed to understand why only in this country the suicide rates is increasing\n- Millenials is not the generation with the highest probability of committing suicide, it is actuallt Boomers generation. From the analysis we can see that Boomers suicide rates peak within 1995 to 1999. As we all know within that year, World economic crisis is happening causing many people to lose their job. This fenomena is most likely trigger the mass suicide\n- The model we use has an AIC value of 117661, a large number indeed indicating that our model is still bad for predicting. We can see from the prediction that our model tend to undervalue the suicide rates. This is bad especially for country like United States that most likel increase their suicide rates overtime. We think that a more detailed dataset is needed to improve our model","71cf962a":"From the start we can assume that variable __'generation'__ is an interaction variable between __'year'__ and __'age'__, so we want to see wether this interaction will be significant to our model. From this plot we can see clearly that Boomers have a high chance than any other category to commit suicide. This maybe because in the past, people tend to underestimate the effect of depression and there exist very little help\/instituion\/suicide hotlin not like now. Beside that around 1995-1998, there is an economic crisis happen all around the world with the impact of many people losing their job ","db5845e4":"We can see that variable __'country'__ have too many unique values, this will become a problem when making the model (curse of dimensional)\n<br> __<font color='7f181b'>Conclusion<\/font>__ : Group the category into new variable __'continent'__","78d6d892":"Variable __'gdp_for_year'__ should have numeric data type, but in here this variable have a object data type. Lets change it","594bb551":"We can see that theres a country with a positive growth and negative growth, lets see if we group it by continent","a8ca7411":"From here we can conclude that male more likely to commit suicide than female and people who are in the middle-age have higher chance to commit suicide than any other age category. So this two variable are likely to have significant effect to the model","ab625e93":"We can see that __'HDI for year'__ and __'gdp_per_capita($)'__ have high correlation and variable __'HDI for year'__ have a NaN value\n<br> __<font color='7f181b'>Conclusion<\/font>__ : maybe remove variable __'HDI for year'__\n\nBeside that we see that variable __'gdp_for_year'__ and __'population'__ also have high correlation, but oddly not with __'gdp_per_capita'__. We the two gdp variable has to be correlated and there must be some error in recording the data\n<br> __<font color='7f181b'>Conclusion<\/font>__ : maybe remove variable __'gdp_for_year'__ "}}