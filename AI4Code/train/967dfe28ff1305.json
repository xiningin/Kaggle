{"cell_type":{"0b87628d":"code","0191d53e":"code","3b7648db":"code","5d07f79d":"code","e4dbbd7e":"code","b1edcbda":"code","518f6f5a":"code","2373e408":"code","ede21456":"code","8839f230":"code","b9db8795":"code","46913ba9":"code","ac78a398":"code","4f71f3b9":"code","e47cbede":"code","326d7f92":"code","7b86384d":"code","e80410d1":"code","5e47e43d":"code","b663a3d6":"markdown","9e0d52ba":"markdown","dba9b536":"markdown"},"source":{"0b87628d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0191d53e":"import matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","3b7648db":"from sklearn.datasets import load_breast_cancer","5d07f79d":"cancer = load_breast_cancer()","e4dbbd7e":"cancer.keys()","b1edcbda":"print(cancer['DESCR'])","518f6f5a":"df = pd.DataFrame(cancer['data'],columns=cancer['feature_names'])","2373e408":"df.head()","ede21456":"from sklearn.preprocessing import StandardScaler","8839f230":"scaler = StandardScaler()","b9db8795":"scaler.fit(df)","46913ba9":"scaled_data = scaler.transform(df)","ac78a398":"from sklearn.decomposition import PCA","4f71f3b9":"# 30 features -> 2 features\npca = PCA(n_components=2)","e47cbede":"pca.fit(scaled_data)","326d7f92":"x_pca = pca.transform(scaled_data)","7b86384d":"scaled_data.shape","e80410d1":"x_pca.shape","5e47e43d":"plt.figure(figsize=(8,6))\nplt.scatter(x_pca[:,0],x_pca[:,1],c=cancer['target'],cmap='plasma')\nplt.xlabel('First principal component')\nplt.ylabel('Second Principal Component')","b663a3d6":"# IMPORT MODULES:","9e0d52ba":"# THE DATA:","dba9b536":"# PCA VISUALIZATION"}}