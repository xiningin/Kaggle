{"cell_type":{"6ada2030":"code","028918ea":"code","96c6adf3":"code","d8f61bec":"code","79cb9340":"code","1c8c815e":"code","db98e879":"code","ed8f6244":"code","8d877843":"code","877bd889":"code","1f0fd129":"code","b73ccea5":"code","3008aab6":"code","38079cc0":"code","e1950c7f":"code","c81f00f5":"code","14a014e7":"code","6f18af6a":"code","98693cd2":"code","4af9bf18":"code","31f379db":"code","39ce2c46":"code","706437dd":"code","9df6663f":"markdown","54110367":"markdown","5cda55c2":"markdown","e3591281":"markdown","6d1ef19e":"markdown","8590d555":"markdown","5843d7f6":"markdown","cd8b9e38":"markdown","da19078f":"markdown","72ccdb6b":"markdown","e3382474":"markdown","1efef103":"markdown","e57db638":"markdown","28cd8cb0":"markdown","c2bffded":"markdown","ba2d4ab6":"markdown","0d2e5913":"markdown","60fb7941":"markdown","7a405f57":"markdown","4545d886":"markdown","b2ad5f49":"markdown","8382965d":"markdown","ddb00b90":"markdown","6c5c76ca":"markdown","f98e085a":"markdown","b88b47d1":"markdown","22fa1193":"markdown","22cf312b":"markdown"},"source":{"6ada2030":"!pip install yfinance\n!pip install pandas\n!pip install requests\n!pip install bs4\n!pip install plotly","028918ea":"import yfinance as yf  #Yahoo Finance package\nimport pandas as pd\nimport requests  #used for HTTP requests\nfrom bs4 import BeautifulSoup  #used for HTML web scraping\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots","96c6adf3":"tsla = yf.Ticker(\"TSLA\")","d8f61bec":"tsla_data = tsla.history(period=\"max\")","79cb9340":"tsla_data.reset_index(inplace=True)\ntsla_data.head()","1c8c815e":"tsla_url = \" https:\/\/www.macrotrends.net\/stocks\/charts\/TSLA\/tesla\/revenue\"\nhtml_data = requests.get(tsla_url).text","db98e879":"beautiful_soup = BeautifulSoup(html_data, 'html5lib')","ed8f6244":"tsla_revenue = pd.DataFrame(\n                [{\"Date\": r.select_one('td:nth-of-type(1)').text, \n                 \"Revenue\":r.select_one('td:nth-of-type(2)').text} \n                 for r in beautiful_soup.select('#style-1 div + div .historical_data_table tr')[1:]]\n                , columns = ['Date', 'Revenue'])","8d877843":"print(tsla_revenue)","877bd889":"tsla_revenue[\"Revenue\"] = tsla_revenue['Revenue'].str.replace(',|\\$',\"\")  #remove dollar and comma sign\n\ntsla_revenue.dropna(inplace=True)  #remove NA values\ntsla_revenue = tsla_revenue[tsla_revenue['Revenue'] != \"\"]","1f0fd129":"tsla_revenue.tail()","b73ccea5":"gme = yf.Ticker(\"GME\")","3008aab6":"gme_data = gme.history(period=\"max\")","38079cc0":"gme_data.reset_index(inplace=True)\ngme_data.head()","e1950c7f":"gme_url = \"https:\/\/www.macrotrends.net\/stocks\/charts\/GME\/gamestop\/revenue\"\nhtml_data = requests.get(gme_url).text","c81f00f5":"beautiful_soup = BeautifulSoup(html_data, 'html5lib')","14a014e7":"gme_revenue = pd.DataFrame(\n                [{\"Date\": r.select_one('td:nth-of-type(1)').text, \n                 \"Revenue\":r.select_one('td:nth-of-type(2)').text} \n                 for r in beautiful_soup.select('#style-1 div + div .historical_data_table tr')[1:]]\n                , columns = ['Date', 'Revenue'])","6f18af6a":"print(gme_revenue)","98693cd2":"gme_revenue[\"Revenue\"] = gme_revenue['Revenue'].str.replace(',|\\$',\"\") #remove dollar and comma sign\n\ngme_revenue.dropna(inplace=True) #remove NA values\ngme_revenue = gme_revenue[gme_revenue['Revenue'] != \"\"]","4af9bf18":"gme_revenue.tail()","31f379db":"def make_graph(stock_data, revenue_data, stock):\n    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=(\"Historical Share Price\", \"Historical Revenue\"), vertical_spacing = .3)\n    stock_data_specific = stock_data[stock_data.Date <= '2021--06-14']\n    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']\n    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype(\"float\"), name=\"Share Price\"), row=1, col=1)\n    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype(\"float\"), name=\"Revenue\"), row=2, col=1)\n    fig.update_xaxes(title_text=\"Date\", row=1, col=1)\n    fig.update_xaxes(title_text=\"Date\", row=2, col=1)\n    fig.update_yaxes(title_text=\"Price ($US)\", row=1, col=1)\n    fig.update_yaxes(title_text=\"Revenue ($US Millions)\", row=2, col=1)\n    fig.update_layout(showlegend=False,\n    height=900,\n    title=stock,\n    xaxis_rangeslider_visible=True)\n    fig.show()","39ce2c46":"make_graph(tsla_data, tsla_revenue, 'Tesla Stock Data')","706437dd":"make_graph(gme_data, gme_revenue, 'GameStop')","9df6663f":"Display the `tesla_revenue` dataframe using `print()` function to check if the data match from the website.","54110367":"`Ticker` function indicate the ticker symbol of the stock to extract. The stock data to be extract will be Tesla, hence the ticker symbol is `TSLA`.","5cda55c2":"`Ticker` function indicate the ticker symbol of the stock to extract. The stock data to be extract will be GameStop, hence the ticker symbol is `GME`.","e3591281":"## **Plot GameStop Stock Graph**","6d1ef19e":"## **Install and Import Neccessary Python Library**","8590d555":"By observing the HTML webpages, the GME Revenue table is located. The table is then extract using `BeautifulSoup` and store into a dataframe named `gme_revenue` which include the `Date` and `Revenue` column. ","5843d7f6":"Using the `reset_index(inplace=True)` function to reset the index of dataframe. While the `head` function display the first 5 rows of the `gme_data` dataframe.","cd8b9e38":"Download Tesla Revenue webpage https:\/\/www.macrotrends.net\/stocks\/charts\/TSLA\/tesla\/revenue using `requests` library and save text response named as `html_data`.","da19078f":"# **Extracting and Visualizing Stock Data**\nThis project will involving in extracting `Tesla` and `GME` stock data to compare and display them in graph.","72ccdb6b":"## **Extract Tesla Revennue Data using Webscraping**","e3382474":"Define the graph parameter named `make_graph` function.","1efef103":"By observing the HTML webpages, the Tesla Revenue table is located. The table is then extract using `BeautifulSoup` and store into a dataframe named `tesla_revenue` which include the `Date` and `Revenue` column. ","e57db638":"Removing the dollar and comma sign from `Revenue` column. Also removing the empty strings or null values in the `Revenue` column.","28cd8cb0":"Display the last 5 rows of `gme_revenue` data.","c2bffded":"Display the `gme_revenue` dataframe using `print()` function to check if the data match from the website.","ba2d4ab6":"## **Extract GameStop Stock Data with yfinance (Yahoo Finance)**","0d2e5913":"## **Define Graphing Function**","60fb7941":"Extract stock information with `history` function and save them in `gme_data` dataframe. Parameter `period=\"max\"` is set to extract the information of the maximum amount of time.","7a405f57":"Removing the dollar and comma sign from `Revenue` column. Also removing the empty strings or null values in the `Revenue` column.","4545d886":"Download Tesla Revenue webpage https:\/\/www.macrotrends.net\/stocks\/charts\/GME\/gamestop\/revenue using `requests` library and save text response named as `html_data`.","b2ad5f49":"## **Extract Tesla Revennue Data using Webscraping**","8382965d":"Extract stock information with `history` function and save them in `tsla_data` dataframe. Parameter `period=\"max\"` is set to extract the information of the maximum amount of time.","ddb00b90":"Parse the html data with `beautiful_soup`","6c5c76ca":"Using the `reset_index(inplace=True)` function to reset the index of dataframe. While the `head` function display the first 5 rows of the `tesla_data` dataframe.","f98e085a":"## **Extract TESLA Stock Data with yfinance (Yahoo Finance)**","b88b47d1":"Display the last 5 rows of `tsla_revenue` data using `tail` function.","22fa1193":"## **Plot Tesla Stock Graph**","22cf312b":"Parse the html data with `beautiful_soup`"}}