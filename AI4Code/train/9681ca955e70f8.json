{"cell_type":{"dd8d1179":"code","2f324fc6":"code","2d29a2ec":"code","de1e999b":"code","8ceaeff9":"code","0a7104b2":"code","abafe87c":"code","dc1c4eeb":"code","81043844":"markdown","fb2fad92":"markdown","0be8dfbc":"markdown","f07fb43f":"markdown","806995cd":"markdown","5fb43462":"markdown","a3c13b17":"markdown"},"source":{"dd8d1179":"import pandas as pd\nimport numpy as np","2f324fc6":"df = pd.read_csv(\"..\/input\/new-york-city-airport-activity\/nyc-flights.csv\", sep = r',', skipinitialspace = True, encoding = 'unicode_escape')\n\ndf.head()","2d29a2ec":"%matplotlib inline\nimport matplotlib.pyplot as plt","de1e999b":"plt.figure(figsize = (12, 10))\nplt.xlabel(\"Air Time\", fontsize = 20)\nplt.ylabel(\"Distance\", fontsize = 20)\nplt.scatter(df[\"air_time\"], df[\"distance\"], color = \"purple\")\nplt.show()","8ceaeff9":"from sklearn import preprocessing\n\n# Replacing NaN with default valuesb\ndf = df.fillna(value = -1)\n\n# Typecasting\ndf[\"carrier\"] = df[\"carrier\"].astype(str)\ndf[\"tailnum\"] = df[\"tailnum\"].astype(str)\ndf[\"origin\"] = df[\"origin\"].astype(str)\ndf[\"dest\"] = df[\"dest\"].astype(str)\n\n# Initializing Encoder\nnumber = preprocessing.LabelEncoder()\n\n# Encoding\ndf[\"carrier\"] = number.fit_transform(df[\"carrier\"])\ndf[\"tailnum\"] = number.fit_transform(df[\"tailnum\"])\ndf[\"origin\"] = number.fit_transform(df[\"origin\"])\ndf[\"dest\"] = number.fit_transform(df[\"dest\"])\n\ndf.head()","0a7104b2":"# Cluster based on distance\nfrom sklearn.cluster import KMeans\n\nsub_df = df[[\"air_time\",\"distance\"]]\nclusters = 5 # number of clusters \nkmeans = KMeans(n_clusters=clusters).fit(sub_df)\nlabels = kmeans.labels_\n\n\nplt.xlabel(\"Air Time\", fontsize = 20)\nplt.ylabel(\"Distance\", fontsize = 20)\nfor k in range(clusters):\n    data_k = sub_df[labels==k]\n    plt.scatter(data_k[\"air_time\"], data_k[\"distance\"])\n","abafe87c":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\n\n\nX = df.drop(['carrier','flight','tailnum','year'], axis=1)\ny = df['carrier']\n\nX_train, X_test, y_train, y_test = train_test_split(\n        X,y, test_size=0.25)\n\nrfc = RandomForestClassifier(max_samples=10000)\nrfc.fit(X_train,y_train)\npred = rfc.predict(X_test)\n\naccuracy = sum(pred == y_test)\/len(y_test)*100\nprint(\"Prediction correct:\", accuracy)\n","dc1c4eeb":"ranked_features = np.argsort(rfc.feature_importances_)[::-1]\nprint(\"The features, in descending order of importance:\")\nfor feat in X.columns[ranked_features]:\n    print(feat)\n","81043844":"The RandomForest algorithm can tell us which features were most important to the classification","fb2fad92":"Can we predict the carrier based on flight data? \n\nWe remove the carrier information, including flight number and tail number, as well as the year (since all flights took place in 2013).\n\nNext we train a RandomForest classifier and test it. ","0be8dfbc":"#### Visualizing data","f07fb43f":"Let's try a $k$-means classifier on the above two columns (air time and distance)","806995cd":"#### Loading and Displaying data","5fb43462":"#### Preparing data for Machine Learning Applications","a3c13b17":"# NYC Airport Activity Analysis"}}