{"cell_type":{"ad497622":"code","c2ee6565":"code","24ed00b6":"code","12589a9b":"code","e160b42a":"code","2c3ead89":"code","cb277430":"code","37063727":"code","e1a28b7f":"code","5d992eb7":"code","37807efb":"code","bd3f402f":"code","e217d1c1":"code","6e54beec":"code","aad4808c":"code","98a4346f":"code","83b673fa":"code","39f1bc79":"code","37a2628c":"code","aa9a7b9c":"markdown","c9797f8c":"markdown","7483faa6":"markdown","e4b68524":"markdown","a7a64831":"markdown","c000ddc9":"markdown","983e0a97":"markdown","6cd22bbc":"markdown","f8692692":"markdown","50eb884c":"markdown","3170f941":"markdown"},"source":{"ad497622":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, cross_validate\nfrom sklearn.metrics import roc_auc_score\n\nimport xgboost as xgb\nimport lightgbm as lgb\nimport catboost\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.gaussian_process import GaussianProcessClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier","c2ee6565":"input_path = os.path.join(os.getcwd(), \"..\", \"input\")\ntarget_col = \"isBankrupted\"","24ed00b6":"df_train = pd.read_csv(os.path.join(input_path, \"train.csv\"), index_col=\"id\")\ndf_test = pd.read_csv(os.path.join(input_path, \"test.csv\"), index_col=\"id\")","12589a9b":"df_train.head()","e160b42a":"df_test.head()","2c3ead89":"df_train.describe()","cb277430":"print(df_train[target_col].value_counts())\nsns.set_style(\"whitegrid\")\nsns.countplot(df_train[target_col])\nos.makedirs('..\/files\/', exist_ok=True)\nplt.savefig('..\/files\/unbalnced.jpg')","37063727":"df_train.info()","e1a28b7f":"df_train.isnull().any()","5d992eb7":"df_test.isnull().any()","37807efb":"pipe = Pipeline([\n    (\"impute\", SimpleImputer(strategy=\"median\", missing_values=np.nan)),\n    (\"scaler\", StandardScaler()),\n])","bd3f402f":"X = pipe.fit_transform(df_train.drop(target_col, axis=1))\nX_test = pipe.transform(df_test)\ny = df_train[target_col].values","e217d1c1":"clfs = [\n    xgb.XGBClassifier(),\n    lgb.LGBMClassifier(),\n    catboost.CatBoostClassifier(verbose=0, task_type=\"GPU\"),\n    SVC(gamma=\"auto\"),\n    MLPClassifier(),\n    GaussianNB(),\n#     GaussianProcessClassifier()\n]\nclf_names = [\n    \"XGBoost\",\n    \"LightGBM\",\n    \"CatBoost\",\n    \"SVC\",\n    \"NeuralNetwork\",\n    \"NaiveBayes\",\n#     \"Gaussian\"\n]","6e54beec":"scores = np.zeros(len(clfs))","aad4808c":"for i in np.arange(len(clfs)):\n    print(clf_names[i])\n    scores[i] = np.mean(cross_validate(clfs[i], X, y, scoring=\"roc_auc\", cv=5, return_train_score=False)[\"test_score\"])","98a4346f":"pd.DataFrame(scores, index=clf_names, columns=[\"Score\"])","83b673fa":"clf = xgb.XGBClassifier()\nclf.fit(X, y)\npredict = clf.predict_proba(X_test)[:, 1]","39f1bc79":"submit = pd.read_csv(\"..\/input\/sampleSubmission.csv\")\nsubmit[\"isBankrupted\"] = predict","37a2628c":"os.makedirs(\"..\/output\/\", exist_ok=True)\nsubmit.to_csv(\"..\/output\/submit_xgb.csv\", index=False)","aa9a7b9c":"# \u5b66\u7fd2\u3068\u4e88\u6e2c","c9797f8c":"### \u76ee\u7684\u5909\u6570\u306e\u53ef\u8996\u5316  ","7483faa6":"# \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3092\u691c\u8a3c\u30c7\u30fc\u30bf\u3068\u3057\u3066\u533a\u5225\u3057\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u4e88\u6e2c\u306e\u7cbe\u5ea6\u3092\u78ba\u304b\u3081\u308b","e4b68524":"### \u6b20\u640d\u5024(NaN)\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d","a7a64831":"## \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f","c000ddc9":"# \u4f7f\u7528\u30e9\u30a4\u30d6\u30e9\u30ea  \n- Python3\n- Numpy\n- Pandas  \n- Matplotlib\n- Seaborn\n- Scikit-Learn\n- XGBoost\n- LightGBM\n- CatBoost","983e0a97":"## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8","6cd22bbc":"## \u30c7\u30fc\u30bf\u306e\u78ba\u8a8d","f8692692":"# \u524d\u51e6\u7406","50eb884c":"### \u5e73\u5747\u3084\u56db\u5206\u4f4d\u7bc4\u56f2\u306e\u78ba\u8a8d","3170f941":"## \u6b20\u640d\u5024\u306e\u88dc\u5b8c\u3068\u30b9\u30b1\u30fc\u30eb\u5316\n1. imputer -> \u6b20\u640d\u5024\u306e\u88dc\u5b8c(\u4eca\u56de\u306f**\u4e2d\u592e\u5024**\u3067\u88dc\u5b8c)\n2. Scaler -> \u6a19\u6e96\u5316\u3092\u884c\u3044\u7279\u5fb4\u5909\u6570\u9593\u306e\u5358\u4f4d\u3092\u63c3\u3048\u308b  \n  \n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30011\u5ea6\u3067\u8907\u6570\u306e\u51e6\u7406\u3092\u65bd\u305b\u308b"}}