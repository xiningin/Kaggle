{"cell_type":{"9ecfc80a":"code","b201765b":"code","2589e53f":"code","20e966ca":"code","2ecfd4db":"code","d34f0301":"code","c9742f9c":"code","5cb70783":"code","f2c84765":"code","e8aaaa54":"code","6b934298":"code","046e2253":"code","4e791132":"code","e5da4fc1":"code","2eccd300":"code","fc88a0f3":"code","07b4b533":"markdown","9e569774":"markdown","576ac1e9":"markdown","d9b72d5c":"markdown","edd64721":"markdown","20ea016c":"markdown","c037f43e":"markdown","92250a51":"markdown"},"source":{"9ecfc80a":"!pip install jcopml","b201765b":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\n\nfrom jcopml.pipeline import num_pipe, cat_pipe\nfrom jcopml.utils import save_model, load_model\nfrom jcopml.plot import plot_missing_value\nfrom jcopml.feature_importance import mean_score_decrease","2589e53f":"df = pd.read_csv(\"..\/input\/open-shopee-code-league-marketing-analytics\/train.csv\")\ndf.head()","20e966ca":"plot_missing_value(df, return_df=True)","2ecfd4db":"X = df.drop(columns=\"open_flag\")\ny = df.open_flag\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","d34f0301":"import pandas as pd\nfrom jcopml.automl import AutoRegressor","c9742f9c":"model = AutoRegressor(['user_id', 'subject_line_length', 'open_count_last_10_days', 'open_count_last_30_days', 'open_count_last_60_days', 'login_count_last_10_days', 'login_count_last_30_days', 'login_count_last_60_days', 'checkout_count_last_10_days', 'checkout_count_last_30_days', 'checkout_count_last_60_days'], [\"country_code\", \"row_id\"])","5cb70783":"model.fit(X, y, cv=5, n_trial=10)","f2c84765":"df.head()\n\n# not used\n# grass_date, last_open","e8aaaa54":"from sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom jcopml.tuning import grid_search_params as rsp","6b934298":"preprocessor = ColumnTransformer([\n    ('numeric', num_pipe(impute='mean', scaling=\"minmax\"), ['subject_line_length', 'open_count_last_10_days', 'open_count_last_30_days', 'open_count_last_60_days', 'login_count_last_10_days', 'login_count_last_30_days', 'login_count_last_60_days', 'checkout_count_last_10_days', 'checkout_count_last_30_days', 'checkout_count_last_60_days']),\n    ('categoric', cat_pipe(impute='most_frequent', encoder=\"onehot\"), [\"country_code\", \"grass_date\"])\n])\n\npipeline = Pipeline([\n    ('prep', preprocessor),\n    ('algo', KNeighborsClassifier())\n])\n\nmodel = RandomizedSearchCV(pipeline, rsp.knn_params, cv=3, n_jobs=-1, verbose=1)\nmodel.fit(X_train, y_train)\n\nprint(model.best_params_)\nprint(model.score(X_train, y_train), model.best_score_, model.score(X_test, y_test))","046e2253":"# Save Model\nsave_model(model, 'model.pkl')","4e791132":"# Load Model\nmodel = load_model(\".\/model\/model.pkl\")","e5da4fc1":"df_submit = pd.read_csv(\"..\/input\/open-shopee-code-league-marketing-analytics\/test.csv\")\ndf_submit.head()","2eccd300":"def submit(model, filename=\"submission1.csv\"):\n    df_submit = pd.read_csv(\"..\/input\/open-shopee-code-league-marketing-analytics\/test.csv\", index_label=\"row_id\")\n    df_submit['open_flag'] = model.predict(df_submit)\n    df_submit[['open_flag']].to_csv(filename, index_label=\"row_id\")","fc88a0f3":"submit(model)","07b4b533":"# Import Data","9e569774":"# Model","576ac1e9":"# Predict","d9b72d5c":"# Training","edd64721":"```\nmodel.fit(X, y, cv=2, n_trial=5)\n================== Best Model Info ==================\nalgo                      | RandomForestRegressor\nalgo__max_depth           | 31\nalgo__max_features        | 0.6504878444394528\nalgo__min_samples_leaf    | 12\nalgo__n_estimators        | 188\n=====================================================\n\n================================ Best Preprocessor Info =================================\ncategorical_imputer       | SimpleImputer(add_indicator=True, strategy='most_frequent')\ncategorical_encoder       | OneHotEncoder\nnumerical_imputer         | KNNImputer(add_indicator=True, n_neighbors=5)\nnumerical_scaler          | RobustScaler\n=========================================================================================\n\n=========== Score ===========\nTrain: 0.50288865410843\nValid: 0.3548705169400873\nTest : 0.3457376259719307\n=============================\n```","20ea016c":"```\nKNN\nFitting 3 folds for each of 10 candidates, totalling 30 fits\n[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\n[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed:  7.5min finished\n{'algo__weights': 'uniform', 'algo__p': 1, 'algo__n_neighbors': 7}\n0.9029083306420085 0.8838197467341873 0.8812890943704107\n\n\nSVM\nFitting 3 folds for each of 10 candidates, totalling 30 fits\n[Parallel(n_jobs=-1)]: Using backend LokyBackend with 4 concurrent workers.\n[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed:  1.2min finished\n\/opt\/conda\/lib\/python3.7\/site-packages\/sklearn\/svm\/_base.py:249: ConvergenceWarning: Solver terminated early (max_iter=500).  Consider pre-processing your data with StandardScaler or MinMaxScaler.\n  % self.max_iter, ConvergenceWarning)\n{'algo__gamma': 0.1, 'algo__C': 1000.0}\n-0.908854106457224 -0.8659911405950694 -0.8067383110295432\n```","c037f43e":"# AutoML","92250a51":"# Dataset Splitting"}}