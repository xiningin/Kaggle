{"cell_type":{"721a0e05":"code","7ac59173":"code","8ecaf2e3":"code","60c0286b":"code","006d2d78":"code","0c9fbf7c":"code","b60e5893":"code","7cac04d7":"code","232f96dc":"code","c9ecd837":"code","5b67fa99":"code","00043f3d":"code","23bfc75b":"code","8469e045":"code","495470bf":"code","7fb44c40":"code","9d5ddd51":"code","de4e3d5b":"code","d69cff98":"code","a8b64668":"code","71778dff":"code","d4e67f76":"code","5d285146":"markdown","4691ef90":"markdown","f5632b94":"markdown","303f7814":"markdown","ec22a42f":"markdown"},"source":{"721a0e05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport seaborn as sns\nimport plotly as py\nfrom plotly.offline import init_notebook_mode, iplot, plot\ninit_notebook_mode(connected = True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7ac59173":"data_2C = pd.read_csv('..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv')\ndata_3C = pd.read_csv('..\/input\/biomechanical-features-of-orthopedic-patients\/column_3C_weka.csv')","8ecaf2e3":"data_2C.info()","60c0286b":"data_3C.info()","006d2d78":"data_2C.head()","0c9fbf7c":"data_2C.pelvic_incidence","b60e5893":"data_3C.columns","7cac04d7":"data_3C.pelvic_incidence = data_3C.pelvic_incidence.astype(float)\ndata_3C.lumbar_lordosis_angle = data_3C.lumbar_lordosis_angle.astype(float)","232f96dc":"data_3C['class'].head()","c9ecd837":"data_3C.corr()","5b67fa99":"#Correlation Matrix\nax=plt.subplots(figsize=(18,18))\nax=sns.heatmap(data_3C.corr(), vmin=-1, vmax=1, center=0, annot=True, linewidths=1, cmap=plt.get_cmap(\"Spectral\", 10))","00043f3d":"#Scatter Star Poly\n#pelvic_incidence <-> sacral_slope (0.81) (+)\n#pelvic_incidence <-> lumbar_lordosis_angle (0.72) (+)\n#pelvic_incidence <-> degree_spondylolisthesis (0.64) (+)\n#pelvic_incidence <-> pelvic_tilt (0.63) (+)\n#sacral_slope <-> pelvic_radius (-0.34) (-)\n#pelvic_incidence <-> pelvic_radius (-0.25) (-)\nplt.figure(figsize=(20,20))\nplt.subplot(321)\nx=data_3C.pelvic_incidence\ny=data_3C.sacral_slope\nz=np.sqrt(x**2+y**2)\nplt.scatter(x, y, s=100, c=z, marker='+')\nplt.xlabel('pelvic_incidence')\nplt.ylabel('sacral_slope')\n\nplt.subplot(322)\nx=data_3C.pelvic_incidence\ny=data_3C.lumbar_lordosis_angle\nplt.scatter(x, y, s=100, c=z, marker=(5,0))\nplt.xlabel('pelvic_incidence')\nplt.ylabel('lumbar_lordosis_angle')\n\nplt.subplot(323)\nx=data_3C.pelvic_incidence\ny=data_3C.degree_spondylolisthesis\nverts = np.array([[-1, -1], [1, -1], [1, 1], [-1, -1]])\nplt.scatter(x, y, s=100, c=z, marker=verts)\nplt.xlabel('pelvic_incidence')\nplt.ylabel('degree_spondylolisthesis')\n\nplt.subplot(324)\nx=data_3C.pelvic_incidence\ny=data_3C.pelvic_tilt\nplt.scatter(x, y, s=100, c=z, marker=(5,1))\nplt.xlabel('pelvic_incidence')\nplt.ylabel('pelvic_tilt')\n\nplt.subplot(325)\nx=data_3C.sacral_slope\ny=data_3C.pelvic_radius\nplt.scatter(x, y, s=100, c=z, marker='+')\nplt.xlabel('sacral_slope')\nplt.ylabel('pelvic_radius')\n\nplt.subplot(326)\nx=data_3C.pelvic_incidence\ny=data_3C.pelvic_radius\nplt.scatter(x, y, s=100, c=z, marker=(5,2))\nplt.xlabel('pelvic_incidence')\nplt.ylabel('pelvic_radius')\n\nplt.show()\n","23bfc75b":"#Visualization with Joint Plot\npelvic_incidence_normalize = (data_3C.pelvic_incidence) \/ max(data_3C.pelvic_incidence)\nsacral_slope_normalize = (data_3C.sacral_slope) \/ max(data_3C.sacral_slope)\npelvic_radius_normalize = (data_3C.pelvic_radius) \/ max(data_3C.pelvic_radius)\npelvic_tilt_normalize = (data_3C.pelvic_tilt) \/ max(data_3C.pelvic_tilt)\ndegree_spondylolisthesis_normalize = (data_3C.degree_spondylolisthesis) \/ max(data_3C.degree_spondylolisthesis)\nnew_data = pd.concat([pelvic_incidence_normalize, sacral_slope_normalize, pelvic_radius_normalize, pelvic_tilt_normalize, degree_spondylolisthesis_normalize], axis=1)\nnew_data.sort_values('pelvic_incidence', inplace=True)\n\n#Visualization\ng = sns.jointplot(new_data.pelvic_incidence, new_data.sacral_slope, kind='reg', height=10)\nplt.savefig('graph.png')\nplt.show()","8469e045":"#Visualization with Lm Plot\nsns.lmplot(x=\"pelvic_radius\", y=\"sacral_slope\", data=new_data, palette='pal', height=10, logistic=True)\nplt.show()","495470bf":"#Visualization with Violin Plot\nplt.subplots(figsize=(10,10))\nsns.violinplot(data=new_data, palette=sns.color_palette(), inner='points', linewidth=1)\nplt.xlabel(\"Biomechanic Features\", color=\"blue\", fontsize=15)\nplt.ylabel(\"Normalize values of features\", color=\"blue\", fontsize=15)\nplt.title(\"Frequency Distribution of Biomechanical Properties\", color=\"green\", fontsize=15)\nplt.show()","7fb44c40":"#Swarm Plot\nsns.swarmplot(x=\"pelvic_incidence\", y=\"class\", hue=\"class\", data = data_3C)\nplt.show()","9d5ddd51":"#Pair Plot\nsns.pairplot(new_data)\nplt.show()","de4e3d5b":"#Plotly\ndf = data_3C.iloc[:100,:]\nimport plotly.graph_objs as go\n#df.pelvic_incidence = df.pelvic_incidence.astype(int)\n#df.sacral_slope = df.sacral_slope.astype(int)\nfig = go.Figure()\ntrace1 = go.Scatter(\n                    x = np.linspace(1,140,200),\n                    y = df.pelvic_incidence,\n                    mode = \"lines\",\n                    name = \"pelvic_incidence\",\n                    marker = dict(color = \"rgba(255, 140, 44, 1)\"),\n                    text = \"pelvic_incidence\")\n#Create a Trace-2\ntrace2 = go.Scatter(\n                    x = np.linspace(1,140,200),\n                    y = df.sacral_slope,\n                    mode = \"lines+markers\",\n                    name = \"sacral_slope\",\n                    marker = dict(color = \"rgba(80, 26, 80, 0.8)\"),\n                    text = \"sacral_slope\")\n#Data Concat\ndata = [trace1, trace2]\n#Layout (Ba\u015fl\u0131k, x-axis, y-axis name etc.)\nlayout = dict(title='Relationship between pelvic incidence and sacral slope values of patients', xaxis = dict(title = \"Top 100 Features\", ticklen = 5, zeroline = False))\nfig = dict(data = data, layout = layout)\niplot(fig)","d69cff98":"#Scatter Plot\nimport plotly.figure_factory as ff\ndataframe = data_3C[data_3C['class'] == \"Normal\"]\nnew_data = dataframe.loc[:,['pelvic_incidence','pelvic_tilt','lumbar_lordosis_angle','sacral_slope']]\nnew_data['index'] = np.arange(1, len(new_data)+1)\nfig = ff.create_scatterplotmatrix(new_data, diag = 'box', index = 'index', colormap = 'Picnic', colormap_type = 'cat', height = 1000, width = 1000)\niplot(fig)","a8b64668":"#Linear Regression\nfrom sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\nx = data_3C.pelvic_incidence.values.reshape(-1,1)\ny = data_3C.sacral_slope.values.reshape(-1,1)\n\nlinear_reg.fit(x,y)\n\n#Prediction\nb0 = linear_reg.predict([[0]])\nprint(\"b0: \",b0)\nb0_ = linear_reg.intercept_\nprint(\"b0_: \", b0_)\nb1 = linear_reg.coef_\nprint(\"b1: \", b1)\n\n#Visualization\nplt.figure(figsize=(15,15))\nplt.scatter(x,y)\narr = np.linspace(26,130,500).reshape(-1,1)\ny_head = linear_reg.predict(arr)\nplt.plot(arr, y_head, color = \"red\")\nplt.show()","71778dff":"#Multiple Linear Regression\n#Correlation\n#pelvic_incidence <-> sacral_slope (0.81) (+)\n#pelvic_incidence <-> lumbar_lordosis_angle (0.72) (+)\n#pelvic_incidence <-> degree_spondylolisthesis (0.64) (+)\n#pelvic_incidence <-> pelvic_tilt (0.63) (+)\n#from sklearn.linear_model import LinearRegression\n#dataframe = data_3C.loc[:,['pelvic_incidence','pelvic_tilt','lumbar_lordosis_angle','sacral_slope','degree_spondylolisthesis']]\n#dataframe['index'] = np.arange(1, len(dataframe)+1)\n\n#x = dataframe.iloc[:,[1,4]].values\n#y = dataframe.pelvic_incidence.values.reshape(-1,1)\n\n#multiple_linear_regression = LinearRegression()\n#multiple_linear_regression.fit(x,y)","d4e67f76":"dataframe","5d285146":"**Data Analysis and Visualization**\n\n**(EN)**\nField Descriptions:\n\nEach patient is represented in the data set by six biomechanical attributes derived from the shape and orientation of the pelvis and lumbar spine (each one is a column):\n\n* pelvic incidence\n* pelvic tilt\n* lumbar lordosis angle\n* sacral slope\n* pelvic radius\n* grade of spondylolisthesis\n\n**(TR)**\nAlan a\u00e7\u0131klamalar\u0131:\n\nHer hasta, pelvis ve lomber omurgan\u0131n \u015fekli ve oryantasyonundan t\u00fcretilen alt\u0131 biyomekanik \u00f6zellik ile belirlenen verilerde temsil edilir (her biri bir s\u00fctundur):\n\n* pelvik insidans\n* pelvik e\u011fim\n* lomber lordoz a\u00e7\u0131s\u0131\n* sakral e\u011fim\n* pelvik yar\u0131\u00e7ap\u0131\n* spondilolistezis derecesi","4691ef90":"**(EN)**\nIn this study, the visualization and classification of orthopedic patients according to their various biomechanical characteristics were firstly normal, disc hernia and spondylolisthesis and then normal \/ abnormal.\n\n**(TR)**\nBu \u00e7al\u0131\u015fmada ortopedik hastal\u0131klar\u0131n \u00e7e\u015fitli biyomekanik \u00f6zelliklerine g\u00f6re g\u00f6rselle\u015ftirilmesi ve s\u0131n\u0131fland\u0131r\u0131lmas\u0131 yap\u0131lm\u0131\u015ft\u0131r. \u00c7al\u0131\u015fmalarda ilk olarak hastal\u0131klar; normal, disk hernisi ve spondilolistez olarak daha sonra ise normal\/anormal olarak s\u0131n\u0131fland\u0131r\u0131lm\u0131\u015ft\u0131r.","f5632b94":"**(TR)**\n\nMakine \u00d6\u011frenmesi Algoritmalar\u0131n\u0131n Uygulanmas\u0131\n\nG\u00f6rselle\u015ftirmesi yap\u0131lan veri setleri \u00fczerinde makine \u00f6\u011frenmesi algoritmalar\u0131yla tahmin \u00e7al\u0131\u015fmalar\u0131 yap\u0131lm\u0131\u015ft\u0131r.\n\n**(EN)**\n\nApplication of Machine Learning Algorithms\n\nPrediction studies were performed on the data sets with visualization by machine learning algorithms.\n","303f7814":"* (TR) ---> Turkish\n* (EN) ---> English","ec22a42f":"**(TR)**\nBiyomekanik \u00f6zellikler aras\u0131nda korelasyon katsay\u0131s\u0131na bak\u0131larak ili\u015fki d\u00fczeyi y\u00fcksek olan \u00f6zelliklerin farkl\u0131 bir g\u00f6rselle\u015ftirilmesi a\u015fa\u011f\u0131ya \u00e7\u0131kar\u0131lm\u0131\u015ft\u0131r.\n\n**(EN)**\nThe correlation coefficient between biomechanical properties is examined and a different visualization of the features with high correlation level is given below."}}