{"cell_type":{"b70af254":"code","f7c0acef":"code","6ef1a837":"code","02005a2e":"code","caaaf67f":"code","49e6a2ca":"code","d767cec8":"code","b89d7001":"code","48a6015d":"code","b3799846":"code","65c3bd61":"code","2315bb9a":"code","1fcc3d51":"code","66837608":"markdown","dd9d8a78":"markdown","7cf7a1fd":"markdown","a41204b0":"markdown","875464b6":"markdown","fec3e931":"markdown","39e58b6f":"markdown","c7ce3e61":"markdown","59a27fc0":"markdown","fc070c08":"markdown","05f5909c":"markdown","829f1e4e":"markdown","82ce5925":"markdown","9a13e72f":"markdown","6d9187b5":"markdown","74b56db8":"markdown","72b94961":"markdown"},"source":{"b70af254":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f7c0acef":"! pip install pydotplus","6ef1a837":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nfrom sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier\nfrom sklearn.model_selection import train_test_split # Import train_test_split function\nfrom sklearn import metrics #Import scikit-learn metrics module for accuracy calculation","02005a2e":"df=pd.read_csv(\"\/kaggle\/input\/uciseeds\/seeds.csv\")\nprint(df.shape)\nprint(df.describe())\ndf.head(2)","caaaf67f":"X=df.iloc[:,0:7]\ny=df.iloc[:,7]\nfeature_names=list(X.columns)\nprint(feature_names)","49e6a2ca":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1) # 80% training and 20% test\nclf = DecisionTreeClassifier()\n#clf = DecisionTreeClassifier(min_samples_leaf = 20)\n# Train Decision Tree Classifer\nclf = clf.fit(X_train,y_train)\n\n#Predict the response for test dataset\ny_pred = clf.predict(X_test)","d767cec8":"from sklearn.tree import export_graphviz\nfrom sklearn.externals.six import StringIO  \nfrom IPython.display import Image  \nimport pydotplus\n\ndot_data = StringIO()\nexport_graphviz(clf, out_file=dot_data,  \n                filled=True, rounded=True,\n                special_characters=True,feature_names = feature_names,class_names=['1','2','3'])\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())  \ngraph.write_png('seeds.png')\nImage(graph.create_png())","b89d7001":"# Model Accuracy, how often is the classifier correct?\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))\n\n#Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint('\\nConfusion matrix')\nprint(confusion_matrix(y_test, y_pred))\n\n#Classification Report\nfrom sklearn.metrics import classification_report\nprint('\\nClassification Report')\nprint(classification_report(y_test, y_pred))  ","48a6015d":"nc=np.arange(1,50,2)\nacc=np.empty(25)\ni=0\nfor k in np.nditer(nc):\n    clf = DecisionTreeClassifier(max_depth = int(k))\n    clf.fit(X_train, y_train)\n    temp= clf.score(X_test, y_test)\n    acc[i]=temp\n    i = i + 1","b3799846":"x=pd.Series(acc,index=nc)\nx.plot()\n# Add title and axis names\nplt.title('Max Depth vs Accuracy')\nplt.xlabel('Depth')\nplt.ylabel('Accuracy')\nplt.show() ","65c3bd61":"nc=np.arange(1,1000,2)\nacc=np.empty(500)\ni=0\nfor k in np.nditer(nc):\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=int(k))\n    clf = DecisionTreeClassifier()\n    clf.fit(X_train, y_train)\n    temp= clf.score(X_test, y_test)\n    acc[i]=temp\n    i = i + 1","2315bb9a":"x=pd.Series(acc,index=nc)\nx.plot(kind='box')\n# Add title and axis names\nplt.title('Accuracy on diffrent test set')\nplt.xlabel('Seed valus')\nplt.ylabel('Accuracy')\nplt.show() ","1fcc3d51":"# Reading the File\ndf=pd.read_csv(\"\/kaggle\/input\/advtlr\/Advertising.csv\")\n# Inspecting the dataset\ndf.shape\ndf.head(2)\n#Importing the decsion tree regressor\nfrom sklearn.tree import DecisionTreeRegressor\n#Setting up X and y\nX=df.iloc[:,1:4]\ny=df.iloc[:,4]\nregressor = DecisionTreeRegressor(random_state=0)\n# Splitting on train and test\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=408)\n#Test the model\nregressor.fit(X_train,y_train)\n# Check R Squared\nprint(regressor.score(X_test,y_test))","66837608":"# Assignments","dd9d8a78":"# Importing and inspecting Dataset <a id=\"1.2\"><\/a>","7cf7a1fd":"# Contents\n\n* [<font size=4>Getting Started<\/font>](#1)\n    * [Importing the Libraries](#1.1)\n    * [Importing and Inspecting the Data](#1.2)\n   \n   \n* [<font size=4>Fitting the model<\/font>](#2)\n    * [Setting up the input and the output variable](#2.1)\n    * [Fitting the Model](#2.2)\n    * [Evaluating the Model](#2.3)\n    * [Playing with Max Depth](#2.4)\n    * [Playing with diffrent Train-Test Split](#2.5)\n    * [Regression Tree](#2.6)\n    ","a41204b0":"![image.png](attachment:image.png)","875464b6":"# Setting up input output <a id=\"2.1\"><\/a>","fec3e931":"# Fitting the model <a id=\"2\"><\/a>\nIn this section, we discuss about setting the input, output data, splitting into training and testing. Fitting the decision Tree, look at it's some of the parameter, visualize the tree.","39e58b6f":"# Visuaizing the Tree  <a id=\"2.3\"><\/a>","c7ce3e61":"# Getting Started <a id=\"1\"><\/a>\nHere we describe installing and importing the library, impoting the datset and some basic checks on the dataset","59a27fc0":"# Experimenting with test set accuracy with diffrent random sample","fc070c08":"# Installing and importing library <a id=\"1.1\"><\/a>","05f5909c":"1. criterion{\u201cgini\u201d, \u201centropy\u201d}\n2. splitter{\u201cbest\u201d, \u201crandom\u201d}\n3. max_depth int\n4. min_samples_split int or float\n5. min_samples_leaf int or float\n5. max_leaf_nodes int","829f1e4e":"# Evaluating the Model <a id=\"2.4\"><\/a>","82ce5925":"**Plotting accuracy of diffrent test set**","9a13e72f":"![image.png](attachment:image.png)","6d9187b5":"* You train a decision tree with splitting critreion as information gain , report test set accuracy\n* For diffrent 100 seeds you train your tree and plot the accurcaies using a box plot , Insead of staring from 1, you start with your class roll no\n* You are gettig very min sample leaf from 1 to 10 and plot the accurcaies using a line plot.\n","74b56db8":"# Fitting the model <a id=\"2.2\"><\/a>","72b94961":"# Playing with max depth parameter<a id=\"2.5\"><\/a>"}}