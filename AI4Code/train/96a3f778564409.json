{"cell_type":{"70795cd0":"code","2878ed74":"code","b9f62fd3":"code","d2d20dde":"code","3f6f5313":"code","7b6185af":"code","1c43e6df":"code","9a5bd39e":"code","cb54f1a2":"code","7faf4dbc":"code","0b23bec3":"code","c29cc642":"code","31318589":"code","db691143":"code","21efebfe":"code","a52adcc2":"code","58157cd8":"code","e1b1163f":"code","5c15422b":"code","3e8ae292":"code","88f0cc33":"code","5900a619":"code","20e8a16a":"code","304a440f":"code","f6f58e7c":"code","c577d6ee":"code","ad417e42":"code","07c19074":"code","389d3963":"code","1d7b2e21":"code","95d9e49b":"code","c28406fd":"code","d9f0eb3d":"code","b293cd9f":"code","30d21773":"code","541f3c5b":"code","35fd53b2":"code","a06e1714":"code","d5b48d90":"code","de51eec0":"markdown","d6b6f588":"markdown","63c7220e":"markdown","0f351e08":"markdown","68062e3e":"markdown","ec99ebea":"markdown","78a8c6d7":"markdown","ccd614a9":"markdown","2617386e":"markdown","30b577f3":"markdown","bb6bf91b":"markdown","cc56c168":"markdown","717db50f":"markdown","70e4efe6":"markdown","050b70f6":"markdown","2c985da7":"markdown","42aba0d4":"markdown","b5daebd2":"markdown","c8c939c5":"markdown","904dc4ff":"markdown","58082caf":"markdown","d3307862":"markdown","2d234817":"markdown"},"source":{"70795cd0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import model_selection\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import GridSearchCV\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn import svm\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import accuracy_score\nfrom pandas.plotting import scatter_matrix\nfrom sklearn.metrics import accuracy_score, roc_auc_score, roc_curve, confusion_matrix, auc","2878ed74":"df=pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\ndf.head(4)","b9f62fd3":"df.info()","d2d20dde":"df.describe()","3f6f5313":"df.isnull().sum()","7b6185af":"df= df.fillna(0)","1c43e6df":"f,ax=plt.subplots(1,1,figsize=(25,8))\nsns.countplot(x=\"hotel\",hue=\"arrival_date_month\",data=df,palette=\"muted\")","9a5bd39e":"f,ax=plt.subplots(1,2,figsize=(25,6))\nsns.countplot(x=\"hotel\",hue=\"is_canceled\",data=df,ax=ax[0], palette=\"muted\")\nsns.countplot(x=\"hotel\",hue=\"reservation_status\",data=df,ax=ax[1], palette=\"muted\")","cb54f1a2":"sns.countplot(x=\"hotel\",data=df, palette=\"muted\")","7faf4dbc":"f,ax=plt.subplots(1,3,figsize=(25,6))\nsns.countplot(x=\"hotel\",hue=\"adults\",data=df,ax=ax[0], palette=\"muted\")\nsns.countplot(x=\"hotel\",hue=\"children\",data=df,ax=ax[1], palette=\"muted\")\nsns.countplot(x=\"hotel\",hue=\"babies\",data=df,ax=ax[2], palette=\"muted\")","0b23bec3":"f,ax=plt.subplots(1,1,figsize=(15,5))\nsns.countplot(x=\"hotel\",hue=\"meal\",data=df, palette=\"muted\")","c29cc642":"f,ax=plt.subplots(1,1,figsize=(15,4))\nsns.countplot(x=\"reservation_status\",hue=\"hotel\",data=df, palette=\"muted\")","31318589":"f,ax=plt.subplots(1,1,figsize=(15,4))\nsns.countplot(x=\"deposit_type\",hue=\"hotel\",data=df, palette=\"muted\")","db691143":"f,ax=plt.subplots(1,1,figsize=(15,4))\nsns.countplot(x=\"customer_type\",hue=\"hotel\",data=df, palette=\"muted\")","21efebfe":"f,ax=plt.subplots(1,1,figsize=(15,4))\nsns.countplot(x=\"market_segment\",hue=\"hotel\",data=df, palette=\"muted\")\n","a52adcc2":"f,ax=plt.subplots(1,1,figsize=(25,6))\nsns.countplot(x=\"country\",data=df.head(500), palette=\"muted\")","58157cd8":"f,ax=plt.subplots(1,1,figsize=(25,10))\nsns.countplot(x=\"arrival_date_month\",data=df, palette=\"muted\")","e1b1163f":"f,ax=plt.subplots(2,2,figsize=(25,15))\nsns.countplot(x=\"customer_type\",data=df,palette=\"muted\",ax=ax[0][0])\nsns.countplot(x=\"reserved_room_type\",data=df,palette=\"muted\",ax=ax[0][1])\nsns.countplot(x=\"assigned_room_type\",data=df,palette=\"muted\",ax=ax[1][0])\nsns.countplot(x=\"distribution_channel\",data=df,palette=\"muted\",ax=ax[1][1])","5c15422b":"f,ax=plt.subplots(1,2,figsize=(25,6))\nsns.countplot(x=\"required_car_parking_spaces\",data=df,palette=\"muted\",ax=ax[0])\nsns.countplot(x=\"total_of_special_requests\",data=df,palette=\"muted\",ax=ax[1])","3e8ae292":"sns.set(font_scale=1.5)\nplt.figure(figsize=(20,8))\ncorr = (df.corr())\nsns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values,cmap=\"YlGnBu\",annot=True,linewidths=.5, fmt=\".2f\")\nplt.title(\"Pearson Correlation of all Elements\")","88f0cc33":"sns.pairplot(df,vars = ['lead_time','arrival_date_year','arrival_date_day_of_month', 'adults', 'children','babies'] )","5900a619":"df_copy = df.copy()\ndf_copy.head(1)","20e8a16a":"df_copy.rename(columns={\"arrival_date_week_number\": \"A_Weeknumber\", \"arrival_date_day_of_month\": \"A_Datemonth\",\"stays_in_weekend_nights\":\"weekend_nights\",\"stays_in_week_nights\":\"week_nights\"},inplace=True)\ndf_copy.head(1)","304a440f":"sns.pairplot(df_copy,hue ='hotel', vars = ['A_Weeknumber','A_Datemonth','lead_time','weekend_nights','week_nights'] )","f6f58e7c":"d1=df.head(100)\ndf2= d1.groupby('country').size()\ndf2.plot(kind='pie', subplots=True, figsize=(8, 8))\nplt.title(\"Pie Chart of Various Category\")\nplt.ylabel(\"\")\nplt.show()","c577d6ee":"f,ax=plt.subplots(1,2,figsize=(25,4))\nhist_mean=df['arrival_date_day_of_month'].hist(bins=10, figsize=(15,5),grid=False,ax=ax[0])\nhist_mean=df['arrival_date_week_number'].hist(bins=10, figsize=(15,5),grid=False,ax=ax[1])","ad417e42":"f,ax=plt.subplots(1,2,figsize=(25,5))\nhist_mean=df['agent'].hist(bins=10, figsize=(15,5),grid=False,ax=ax[0])\nhist_mean=df['reservation_status_date'].hist(bins=10, figsize=(15,4),grid=False,ax=ax[1])","07c19074":"f,ax=plt.subplots(1,2,figsize=(25,6))\nsns.violinplot(x=\"hotel\", y=\"lead_time\",ax=ax[0],data=df, palette=\"muted\")\nsns.violinplot(x=\"hotel\", y=\"arrival_date_week_number\",data=df,ax=ax[1], palette=\"muted\")","389d3963":"df['arrival_date_month'].replace([0], 'July', inplace=True) \ndf['arrival_date_month'].replace([1], 'August', inplace=True) \ndf['arrival_date_month'].replace([2], 'May', inplace=True)   \nf,ax=plt.subplots(1,1,figsize=(25,10))\nsns.kdeplot(df.loc[(df['arrival_date_month']=='July'), 'lead_time'], color='b', shade=True, Label='July')\nsns.kdeplot(df.loc[(df['arrival_date_month']=='August'), 'lead_time'], color='g', shade=True, Label='August')\nsns.kdeplot(df.loc[(df['arrival_date_month']=='May'), 'lead_time'], color='r', shade=True, Label='May')\nplt.xlabel('Lead_Time') \nplt.ylabel('Probability Density')","1d7b2e21":"f,ax=plt.subplots(1,3,figsize=(25,8))\nsns.scatterplot(x=\"arrival_date_week_number\", y=\"hotel\",color = \"red\",data=df,ax=ax[0])\nsns.scatterplot(x=\"arrival_date_day_of_month\", y=\"hotel\",color = \"green\",data=df,ax=ax[1])\nsns.scatterplot(x=\"lead_time\", y=\"hotel\",color = \"orange\",data=df,ax=ax[2])","95d9e49b":"f,ax=plt.subplots(1,3,figsize=(25,8))\ndf['lead_time'].plot.box(sym='.k',figsize=(25,7),ax=ax[0])\ndf['arrival_date_week_number'].plot.box(sym='.k',figsize=(25,7),ax=ax[1])\ndf['arrival_date_day_of_month'].plot.box(sym='.k',figsize=(25,7),ax=ax[2])\nplt.show ()","c28406fd":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ndf['hotel']=le.fit_transform(df['hotel'])\ndf['arrival_date_month']=le.fit_transform(df['arrival_date_month'])\ndf['meal'] = le.fit_transform(df['meal'])\ndf['market_segment'] = le.fit_transform(df['market_segment'])\ndf['distribution_channel'] = le.fit_transform(df['distribution_channel'])\ndf['reserved_room_type'] = le.fit_transform(df['reserved_room_type'])\ndf['assigned_room_type'] =le.fit_transform(df['assigned_room_type'])\ndf['customer_type'] = le.fit_transform(df['customer_type'])\ndf['reservation_status'] = le.fit_transform(df['reservation_status'])\ndf['deposit_type'] = le.fit_transform(df['deposit_type'])","d9f0eb3d":"from sklearn.model_selection import train_test_split\nX = df.drop(['is_canceled','reservation_status_date','country'], axis=1)\nY = df['is_canceled']\nx_train, x_test, y_train, y_test = train_test_split(X,Y,random_state=0)","b293cd9f":"logistic = LogisticRegression()\nlogistic.fit(x_train,y_train)\ny_pred=logistic.predict(x_test)\nprint(classification_report(y_test,y_pred))\naccuracy1=logistic.score(x_test,y_test)\nprint (accuracy1*100,'%')\ncm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot= True)","30d21773":"false_positive_rate, true_positive_rate, threshold = roc_curve(y_test, y_pred)\nroc_auc = auc(false_positive_rate, true_positive_rate)\nplt.figure(figsize = (10,6))\nplt.title('Receiver Operating Characteristic')\nplt.plot(false_positive_rate, true_positive_rate, color = 'red', label = 'AUC = %0.2f' % roc_auc)\nplt.legend(loc = 'lower right')\nplt.plot([0, 1], [0, 1], linestyle = '--')\nplt.axis('tight')\nplt.ylabel('True Positive Rate')\nplt.xlabel('False Positive Rate')","541f3c5b":"train_score = logistic.score(x_train,y_train)\ntest_score = logistic.score(x_test,y_test)\nprint(f'Training Accuracy of our model is: {train_score}')\nprint(f'Test Accuracy of our model is: {test_score}')","35fd53b2":"ran_class=RandomForestClassifier()\nran_class.fit(x_train,y_train)\nran_predict=ran_class.predict(x_test)\nprint(classification_report(y_test,ran_predict))\naccuracy3=ran_class.score(x_test,y_test)\nprint(accuracy3*100,'%')\ncm = confusion_matrix(y_test, ran_predict)\nsns.heatmap(cm, annot= True)","a06e1714":"train_score = ran_class.score(x_train,y_train)\ntest_score = ran_class.score(x_test,y_test)\nprint(f'Training Accuracy of our model is: {train_score}')\nprint(f'Test Accuracy of our model is: {test_score}')","d5b48d90":"prediction = ran_class.predict(x_train.iloc[15].values.reshape(1,-1))\nactual_value = y_train.iloc[15]\nprint(f'Predicted Value \\t: {prediction[0]}')\nprint(f'Actual Value\\t\\t: {actual_value}')","de51eec0":"**Percentage of adults,childrens,babies**","d6b6f588":"3.Agent\n\n4.Reservation Status Date","63c7220e":"**Which countries tourists visiting hotel**","0f351e08":"**1.Determining Customer type**\n\n**2.Reserved Room type**\n\n**3.Assigned Room type**\n\n**4.Distribution type**","68062e3e":"**In which month Hotel Booking is in demand for Resort Hotel and City Hotel**","ec99ebea":"1.Arrival Date of Month\n\n2.Arrival Date Week Number","78a8c6d7":"**Lable Encoding**","ccd614a9":"**Piechart**","2617386e":"1.Required Car Parking Spaces\n\n2.Total number of special requests\n\n","30b577f3":"**KDE plot**","bb6bf91b":"**Traintest split**","cc56c168":"**In which months more tourists visits more**","717db50f":"****1.In which hotel booking canclation is more?****\n\n2.Reservation Status in Hotel","70e4efe6":"**Importing Libraries**","050b70f6":"**Comparison of Resort Hotel and City Hotel**","2c985da7":"**Boxplot**","42aba0d4":"**Violinplot**","b5daebd2":"**Meals in Resort Hotel and City Hotel**","c8c939c5":"**Logistic Regression**","904dc4ff":"**Pairplot**","58082caf":"**Histogram**","d3307862":"**Heatmap**","2d234817":"**Scatter plot**"}}