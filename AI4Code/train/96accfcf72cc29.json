{"cell_type":{"8b467515":"code","79522b0b":"code","c1d4a157":"code","04c46d26":"code","1cb506a6":"code","3decdd28":"code","aa23249f":"code","f1ef7816":"code","61f48a66":"code","ef0e075c":"code","f73fe83a":"code","88350f3b":"code","fb7ef7ef":"markdown","81f51ff1":"markdown"},"source":{"8b467515":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","79522b0b":"wine_df = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\nwine_df.head()","c1d4a157":"wine_df.isnull().sum()","04c46d26":"wine_df['quality'].value_counts()","1cb506a6":"sns.heatmap(wine_df.corr())\nplt.title('Correlations between features')\nplt.show()","3decdd28":"wine_df.corr()['quality']","aa23249f":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.feature_selection import SelectKBest, f_regression\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nwine_df_std = scaler.fit_transform(wine_df)\nwine_df_std = pd.DataFrame(wine_df_std, columns=wine_df.columns)","f1ef7816":"X_train, X_test, y_train, y_test = train_test_split(wine_df_std.drop(columns='quality'), wine_df_std['quality'], test_size= 0.2, random_state=42)\nreg = KNeighborsRegressor()","61f48a66":"num_features = []\ntrain_score = []\ntest_score = []\n\nfor k in range(2, 12):\n    selector = SelectKBest(f_regression, k = k)\n    X_train_new = selector.fit_transform(X_train, y_train)\n    X_test_new = selector.transform(X_test)\n    reg.fit(X_train_new, y_train)\n    num_features.append(k)\n    train_score.append(reg.score(X_train_new, y_train))\n    test_score.append(reg.score(X_test_new, y_test))\n\nsns.lineplot(x = num_features, y = train_score)\nsns.lineplot(x = num_features, y = test_score)\nplt.show()","ef0e075c":"selector = SelectKBest(f_regression, k = 5)\nX_train_new = selector.fit_transform(X_train, y_train)\nX_test_new = selector.transform(X_test)\nreg.fit(X_train_new, y_train)\nprint(reg.score(X_test_new, y_test))","f73fe83a":"params = {'n_neighbors': range(2, 45), 'weights':['uniform','distance']}\ngs = GridSearchCV(estimator=reg, param_grid=params, cv = 3)\ngs.fit(X_train_new, y_train)\nreg2 = gs.best_estimator_","88350f3b":"from sklearn.metrics import r2_score\nreg2.fit(X_train_new, y_train)\ny_pred = reg2.predict(X_test_new)\nr2 = r2_score(y_test, y_pred)\nprint(r2 ** (1\/2))","fb7ef7ef":"**This is my first time submitting a task on Kaggle. Please leave a comment to improve my skills, and also thank you!**","81f51ff1":"Loading the data"}}