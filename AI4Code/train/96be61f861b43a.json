{"cell_type":{"f0ee783c":"code","06f2515e":"code","a77fd729":"code","aaee6e28":"markdown","62cab0f9":"markdown","de1287f9":"markdown","b125e18c":"markdown"},"source":{"f0ee783c":"# Random Selection\n\n# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Importing the dataset\ndataset = pd.read_csv('..\/input\/adsoptimisationdata\/Ads_CTR_Optimisation.csv')\n\n# Implementing Random Selection\nimport random\nN = 10000\nd = 10\nads_selected = []\ntotal_reward = 0\nfor n in range(0, N):\n    ad = random.randrange(d)\n    ads_selected.append(ad)\n    reward = dataset.values[n, ad]\n    total_reward = total_reward + reward\n\n# Visualising the results\nplt.hist(ads_selected)\nplt.title('Histogram of ads selections')\nplt.xlabel('Ads')\nplt.ylabel('Number of times each ad was selected')\nplt.show()","06f2515e":"# Upper Confidence Bound\n\n# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Importing the dataset\ndataset = pd.read_csv('\/kaggle\/input\/adsoptimisationdata\/Ads_CTR_Optimisation.csv')\n\n# Implementing UCB\nimport math\nN = 10000\nd = 10\nads_selected = []\nnumbers_of_selections = [0] * d\nsums_of_rewards = [0] * d\ntotal_reward = 0\nfor n in range(0, N):\n    ad = 0\n    max_upper_bound = 0\n    for i in range(0, d):\n        if (numbers_of_selections[i] > 0):\n            average_reward = sums_of_rewards[i] \/ numbers_of_selections[i]\n            delta_i = math.sqrt(3\/2 * math.log(n + 1) \/ numbers_of_selections[i])\n            upper_bound = average_reward + delta_i\n        else:\n            upper_bound = 1e400\n        if upper_bound > max_upper_bound:\n            max_upper_bound = upper_bound\n            ad = i\n    ads_selected.append(ad)\n    numbers_of_selections[ad] = numbers_of_selections[ad] + 1\n    reward = dataset.values[n, ad]\n    sums_of_rewards[ad] = sums_of_rewards[ad] + reward\n    total_reward = total_reward + reward\n\n# Visualising the results\nplt.hist(ads_selected)\nplt.title('Histogram of ads selections')\nplt.xlabel('Ads')\nplt.ylabel('Number of times each ad was selected')\nplt.show()","a77fd729":"# Thompson Sampling\n\n# Importing the libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n# Importing the dataset\ndataset = pd.read_csv('\/kaggle\/input\/adsoptimisationdata\/Ads_CTR_Optimisation.csv')\n\n# Implementing Thompson Sampling\nimport random\nN = 10000\nd = 10\nads_selected = []\nnumbers_of_rewards_1 = [0] * d\nnumbers_of_rewards_0 = [0] * d\ntotal_reward = 0\nfor n in range(0, N):\n    ad = 0\n    max_random = 0\n    for i in range(0, d):\n        random_beta = random.betavariate(numbers_of_rewards_1[i] + 1, numbers_of_rewards_0[i] + 1)\n        if random_beta > max_random:\n            max_random = random_beta\n            ad = i\n    ads_selected.append(ad)\n    reward = dataset.values[n, ad]\n    if reward == 1:\n        numbers_of_rewards_1[ad] = numbers_of_rewards_1[ad] + 1\n    else:\n        numbers_of_rewards_0[ad] = numbers_of_rewards_0[ad] + 1\n    total_reward = total_reward + reward\n\n# Visualising the results - Histogram\nplt.hist(ads_selected)\nplt.title('Histogram of ads selections')\nplt.xlabel('Ads')\nplt.ylabel('Number of times each ad was selected')\nplt.show()","aaee6e28":"It learns which Advertisement is clicked most and predict the most suitable Ad.","62cab0f9":"# **2. Upper Confidence Bound**","de1287f9":"# **1. Random Selection Results**","b125e18c":"# **3. Thompson Sampling**"}}