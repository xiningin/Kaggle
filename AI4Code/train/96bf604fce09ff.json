{"cell_type":{"3734f454":"code","e0269da3":"code","101d7d82":"code","facaabdd":"code","271ce8b8":"code","dd8b9343":"code","ea3ffd01":"code","26274680":"code","beb1d818":"code","5412ae1a":"code","8efc1a9f":"code","38c803a6":"code","ad383d90":"code","ff60c7b3":"code","03719266":"code","2dd232cb":"code","17a4fc09":"code","98e7244a":"code","cdefbb9d":"code","a0d8c31e":"code","6eafe0f5":"code","6f7b4be6":"code","a2a46d56":"code","f16011ff":"code","eade7623":"code","92588d2c":"code","de3b29c5":"code","3605da08":"code","21fcbe55":"code","e099b2b8":"code","b20a9ca8":"code","81973d25":"code","d664df8c":"code","f792488b":"markdown","7f117dfc":"markdown","2284cc82":"markdown","1effce45":"markdown","13cf6ef2":"markdown","efb3160a":"markdown"},"source":{"3734f454":"#Ridge , #LASSO , #ElasticNet","e0269da3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import Ridge\nfrom sklearn.linear_model import RidgeCV\nfrom sklearn.linear_model import LassoCV\nfrom sklearn.linear_model import ElasticNetCV\n%matplotlib inline","101d7d82":"df=pd.read_csv('..\/input\/real-estate-price-prediction\/Real estate.csv')","facaabdd":"df.head()","271ce8b8":"df.shape","dd8b9343":"df.info()","ea3ffd01":"sns.pairplot(df)","26274680":"X=df.drop(['Y house price of unit area','No'],axis=1)\ny=df['Y house price of unit area']","beb1d818":"X.shape","5412ae1a":"F_polynomial_convertor=PolynomialFeatures(degree=2,include_bias=False)\npoly_features=F_polynomial_convertor.fit_transform(X)\nX_train,X_test,y_train,y_test=train_test_split(poly_features,y,test_size=0.2,random_state=42)\npoly_features.shape","8efc1a9f":"scaler= StandardScaler()\nscaler.fit(X_train)\nX_train= scaler.transform(X_train)\nX_test= scaler.transform(X_test)","38c803a6":"R_model= Ridge(alpha=0.1)\nR_model.fit(X_train, y_train)","ad383d90":"y_predict= R_model.predict(X_test)","ff60c7b3":"R_MAE= mean_absolute_error(y_test, y_predict)\nR_MSE= mean_squared_error(y_test, y_predict)\nR_RMSE= np.sqrt(R_MSE)","03719266":"print('R_MAE :',R_MAE)\nprint('R_MSE :',R_MSE)\nprint('R_RMSE :',R_RMSE)","2dd232cb":"R_cv_model=RidgeCV(alphas=(0.1, 1.0, 10.0), scoring='neg_mean_absolute_error')","17a4fc09":"R_cv_model.fit(X_train, y_train)","98e7244a":"R_cv_model.alpha_","cdefbb9d":"y_predict_ridge= R_cv_model.predict(X_test)\nRC_MAE= mean_absolute_error(y_test, y_predict_ridge)\nRC_MSE= mean_squared_error(y_test, y_predict_ridge)\nRC_RMSE= np.sqrt(RC_MSE)","a0d8c31e":"print('RC_MAE :',RC_MAE)\nprint('RC_MSE :',RC_MSE)\nprint('RC_RMSE :',RC_RMSE)","6eafe0f5":"R_cv_model.coef_","6f7b4be6":"L_cv_model= LassoCV(eps=0.1, n_alphas=100, cv=10)","a2a46d56":"L_cv_model.fit(X_train, y_train)","f16011ff":"L_cv_model.alpha_","eade7623":"y_predict_lasso= L_cv_model.predict(X_test)","92588d2c":"L_MAE= mean_absolute_error(y_test, y_predict_lasso)\nL_MSE= mean_squared_error(y_test, y_predict_lasso)\nL_RMSE= np.sqrt(L_MSE)","de3b29c5":"print('L_MAE :',L_MAE)\nprint('L_MSE :',L_MSE)\nprint('L_RMSE :',L_RMSE)","3605da08":"L_cv_model.coef_","21fcbe55":"El_model= ElasticNetCV(l1_ratio=[0.1, 0.5, 0.7, 0.9, 0.95, 0.99, 1],cv=10, max_iter=100000)\nEl_model.fit(X_train, y_train)","e099b2b8":"El_model.l1_ratio_","b20a9ca8":"y_predict_elastic=El_model.predict(X_test)\nEl_MAE= mean_absolute_error(y_test, y_predict_elastic)\nEl_MSE= mean_squared_error(y_test, y_predict_elastic)\nEl_RMSE= np.sqrt(El_MSE)\nprint('El_MAE :',El_MAE)\nprint('El_MSE :',El_MSE)\nprint('El_RMSE :',El_RMSE)","81973d25":"data = {'Metrics': [R_MAE,R_MSE,R_RMSE,RC_MAE,RC_MSE,RC_RMSE,L_MAE,L_MSE,L_RMSE,El_MAE, El_MSE, El_RMSE], 'Model': ['Ridge','Ridge','Ridge','RidgeCV','RidgeCV','RidgeCV','LassoCV','LassoCV','LassoCV','ElasticNetCV','ElasticNetCV','ElasticNetCV']}\n\npd.DataFrame(data, index=['MAE', 'MSE', 'RMSE','MAE', 'MSE', 'RMSE','MAE', 'MSE', 'RMSE','MAE', 'MSE', 'RMSE'])","d664df8c":"El_model.coef_","f792488b":"# Standardization data , Ridge Model------------------------------------------------","7f117dfc":"# ElasticNetCV-----------------------------------------------------","2284cc82":"# RidgeCV-------------------------------------------------------------","1effce45":"# LassoCV---------------------------------------------------","13cf6ef2":"# Poly_features---------------------------------------------------------","efb3160a":"# #Feature , Label Split--------------------------------------------"}}