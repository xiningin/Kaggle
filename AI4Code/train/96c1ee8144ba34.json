{"cell_type":{"0f7993ae":"code","c3d70b18":"code","b2afbcb3":"code","6a76d399":"code","0a53a02c":"code","84de2e3a":"code","3ee81a84":"code","d29d4765":"code","eba2342c":"code","8f298450":"code","624c9491":"code","433678bc":"code","bedf6a1c":"code","f3c367b1":"markdown","f24ca385":"markdown","82d136bb":"markdown","cf7398a2":"markdown","049c4585":"markdown","bb1b4386":"markdown","1068d97a":"markdown","4cb1d76d":"markdown","6e6ee9e8":"markdown","2de8e05b":"markdown","5a0ed577":"markdown","00ad3c50":"markdown"},"source":{"0f7993ae":"import pandas as pd\ndf = pd.read_csv('\/kaggle\/input\/enem-score\/Data_Base.csv',sep=';')\ndf.fillna(0)\ndf.head()","c3d70b18":"year = [2015,2016,2017,2018]\ndic = {'Year': year}\ngradesMT,gradesLC = [],[]\ngradesCN,gradesCH = [],[]","b2afbcb3":"#average of the grades\n\nfor i in range(4):\n    gradesCH.append(df[df['NU_ANO'] == year[i]].NU_NOTA_CH.mean())\n    gradesCN.append(df[df['NU_ANO'] == year[i]].NU_NOTA_CN.mean())\n    gradesMT.append(df[df['NU_ANO'] == year[i]].NU_NOTA_MT.mean())\n    gradesLC.append(df[df['NU_ANO'] == year[i]].NU_NOTA_LC.mean())","6a76d399":"dic['GRADES_CH'] = gradesCH\ndic['GRADES_CN'] = gradesCN\ndic['GRADES_MT'] = gradesMT\ndic['GRADES_LC'] = gradesLC","0a53a02c":"grades = pd.DataFrame(dic)\ngrades.head()","84de2e3a":"from sklearn.linear_model import LinearRegression","3ee81a84":"def regLinear(x,y,x_pred):\n    model = LinearRegression()\n    model.fit(x,y)\n    pred = []\n    for i in x_pred:\n        pred.append(float(model.predict([[i]]).max()))\n    return pred","d29d4765":"x = grades.iloc[:,0].values\nx = x.reshape(-1,1)","eba2342c":"y_CH = grades.iloc[:,1].values\ny_CH = y_CH.reshape(-1,1)\n\ny_CN = grades.iloc[:,2].values\ny_CN = y_CN.reshape(-1,1)\n\ny_MT = grades.iloc[:,3].values\ny_MT = y_MT.reshape(-1,1)\n\ny_LC = grades.iloc[:,4].values\ny_LC = y_LC.reshape(-1,1)","8f298450":"pred = [2019,2020]\ndic = {'Year': [2019,2020]}","624c9491":"dic['GRADES_CH'] = regLinear(x,y_CH,pred)\ndic['GRADES_CN'] = regLinear(x,y_CN,pred)\ndic['GRADES_MT'] = regLinear(x,y_MT,pred)\ndic['GRADES_LC'] = regLinear(x,y_LC,pred)","433678bc":"grades_pred = pd.DataFrame(dic)\ngrades_pred.head()","bedf6a1c":"final_grades = pd.concat([grades,grades_pred], ignore_index=True)\nfinal_grades","f3c367b1":"First of all, you need to download the data (https:\/\/www.kaggle.com\/salomaoalves\/enem-score). And I will use the library pandas and sklearn.linear_model (function: LinearRegression), so you can already import these lib. In this code, the data is in Data Frame df.","f24ca385":"For the last, I create a new data frame with the prediction.","82d136bb":"Then, I call the function regLinear and predict the data.","cf7398a2":"**Merge**\n\nFinally, I just merge the two data frame (grades and grades_pred) and my prediction is finish.","049c4585":"And now, I just put the grade in the dic and create a data frame call grades. So the pre-processing is finish.","bb1b4386":"**Pre-processing**\n\nTo predict the grades, I need to pre-processing the data first. For that, I will creat a data frame call grades, which will have the average of each year for each knowledge area. In the next few steps I will do it.","1068d97a":"Now, I need to separate and reshape the data.","4cb1d76d":"Hey guys, what's up? So, I will use the data set ENEM grades. This is a example of how you can use that data set. Here, I will predict the grades for each knowledge area for the next two years (2019 and 2020) using Linear Regression. So, let's coding!!!","6e6ee9e8":"The second step is calculate the average. For this, I will use the function mean (don't warry about missing values, the function mean don't use them). The result will be put in grades list.","2de8e05b":"Here, I create the function regLinear with 3 parameters (x, y and x_pred). X represent the years I have, Y represent the grades I have and x_pred represent the years I want predict. In this function, I create the model, train him and predict.","5a0ed577":"First thing I will do is create some data struct to help me separate the data I have. I will create 5 list and 1 dictionary.\n\n<ol>\n<li><b>List year:<\/b> contain the year of the exam.<\/li>\n\n<li><b>Dictionary dic:<\/b> this will contain the years, the average grade of each year for each knowledge area; from this dictionary I will create the data frame.<\/li>\n\n<li><b>List gradesMT, gradesLC, gradesCN, gradesCH:<\/b> this four list will have the average grade; MT is math, LC is languages, CN is science natural, CH is humanities.<\/li>\n<\/ol>\n\nFor all list, each element represent a year. For example, in gradesMT, the first element (gradesMT[0]) represent the average grade for the year 2015, and so on.","00ad3c50":"**Machine Learning**\n\nIn this part, I start the predction. For this, I will use the function LinearRegression from sklearn. How many predictions will be made, I will create a function regLinear, which receive the data and return the prediction. The data needs a simple reshape because of the function. After that, I use other dictionary to put the prediction and from that dictionary I will create the data frame."}}