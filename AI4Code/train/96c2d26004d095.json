{"cell_type":{"f6dbac9c":"code","b57568c9":"code","d9046f24":"code","e1e71fdb":"code","c0c85bd5":"code","ab0725bd":"code","00b02968":"code","50a2d72f":"code","aa7bb362":"code","e0e48de8":"code","cce5a778":"code","3c9193c9":"code","5893faf9":"code","5bcfa40b":"code","d6ec1f2a":"code","2f624a5c":"code","30999c2d":"code","b88f0229":"code","9469fa3b":"code","392019f3":"code","292c0ae6":"code","3976d313":"code","6eab4798":"code","fbe3a2e3":"code","b331534b":"code","48e48b7c":"code","9d69fac7":"code","0a318bd5":"code","c2659d17":"code","979b6216":"code","5300ce22":"code","40344b44":"code","ea07e134":"code","9dc0580e":"code","6ea06784":"code","5f8197a9":"markdown","8032805d":"markdown","59a62153":"markdown","580afd95":"markdown","581470c7":"markdown","b8b20d99":"markdown","ea8e9c5b":"markdown","382a846d":"markdown","c6195200":"markdown","dabff3a7":"markdown","c30bdabc":"markdown","6e387184":"markdown","c6afdd3c":"markdown","64f67502":"markdown","aede16d3":"markdown","1652f42a":"markdown","93f946ba":"markdown"},"source":{"f6dbac9c":"#Importing required packages.\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import train_test_split, GridSearchCV, cross_val_score\n%matplotlib inline","b57568c9":"#Loading dataset\nwine = pd.read_csv('..\/input\/winequality-red.csv')","d9046f24":"#Let's check how the data is distributed\nwine.head()","e1e71fdb":"#Information about the data columns\nwine.info()","c0c85bd5":"#Here we see that fixed acidity does not give any specification to classify the quality.\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'fixed acidity', data = wine)","ab0725bd":"#Here we see that its quite a downing trend in the volatile acidity as we go higher the quality \nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'volatile acidity', data = wine)","00b02968":"#Composition of citric acid go higher as we go higher in the quality of the wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'citric acid', data = wine)","50a2d72f":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'residual sugar', data = wine)","aa7bb362":"#Composition of chloride also go down as we go higher in the quality of the wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'chlorides', data = wine)","e0e48de8":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'free sulfur dioxide', data = wine)","cce5a778":"fig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'total sulfur dioxide', data = wine)","3c9193c9":"#Sulphates level goes higher with the quality of wine\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'sulphates', data = wine)","5893faf9":"#Alcohol level also goes higher as te quality of wine increases\nfig = plt.figure(figsize = (10,6))\nsns.barplot(x = 'quality', y = 'alcohol', data = wine)","5bcfa40b":"#Making binary classificaion for the response variable.\n#Dividing wine as good and bad by giving the limit for the quality\nbins = (2, 6.5, 8)\ngroup_names = ['bad', 'good']\nwine['quality'] = pd.cut(wine['quality'], bins = bins, labels = group_names)","d6ec1f2a":"#Now lets assign a labels to our quality variable\nlabel_quality = LabelEncoder()","2f624a5c":"#Bad becomes 0 and good becomes 1 \nwine['quality'] = label_quality.fit_transform(wine['quality'])","30999c2d":"wine['quality'].value_counts()","b88f0229":"sns.countplot(wine['quality'])","9469fa3b":"#Now seperate the dataset as response variable and feature variabes\nX = wine.drop('quality', axis = 1)\ny = wine['quality']","392019f3":"#Train and Test splitting of data \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","292c0ae6":"#Applying Standard scaling to get optimized result\nsc = StandardScaler()","3976d313":"X_train = sc.fit_transform(X_train)\nX_test = sc.fit_transform(X_test)","6eab4798":"rfc = RandomForestClassifier(n_estimators=200)\nrfc.fit(X_train, y_train)\npred_rfc = rfc.predict(X_test)","fbe3a2e3":"#Let's see how our model performed\nprint(classification_report(y_test, pred_rfc))","b331534b":"#Confusion matrix for the random forest classification\nprint(confusion_matrix(y_test, pred_rfc))","48e48b7c":"sgd = SGDClassifier(penalty=None)\nsgd.fit(X_train, y_train)\npred_sgd = sgd.predict(X_test)","9d69fac7":"print(classification_report(y_test, pred_sgd))","0a318bd5":"print(confusion_matrix(y_test, pred_sgd))","c2659d17":"svc = SVC()\nsvc.fit(X_train, y_train)\npred_svc = svc.predict(X_test)","979b6216":"print(classification_report(y_test, pred_svc))","5300ce22":"#Finding best parameters for our SVC model\nparam = {\n    'C': [0.1,0.8,0.9,1,1.1,1.2,1.3,1.4],\n    'kernel':['linear', 'rbf'],\n    'gamma' :[0.1,0.8,0.9,1,1.1,1.2,1.3,1.4]\n}\ngrid_svc = GridSearchCV(svc, param_grid=param, scoring='accuracy', cv=10)","40344b44":"grid_svc.fit(X_train, y_train)","ea07e134":"#Best parameters for our svc model\ngrid_svc.best_params_","9dc0580e":"#Let's run our SVC again with the best parameters.\nsvc2 = SVC(C = 1.2, gamma =  0.9, kernel= 'rbf')\nsvc2.fit(X_train, y_train)\npred_svc2 = svc2.predict(X_test)\nprint(classification_report(y_test, pred_svc2))","6ea06784":"#Now lets try to do some evaluation for random forest model using cross validation.\nrfc_eval = cross_val_score(estimator = rfc, X = X_train, y = y_train, cv = 10)\nrfc_eval.mean()","5f8197a9":"## Support Vector Classifier","8032805d":"\n\n## Stochastic Gradient Decent Classifier","59a62153":"### Random Forest Classifier","580afd95":"## Let's try to increase our accuracy of models\n## Grid Search CV","581470c7":"# **Thank You for opening this notebook!!!**\n\n## **This notebook tutorial is for those who are beginners to machine learning.**\n\n*In this notebook, First I have done some exploration on the data using matplotlib and seaborn.\nThen, I use different classifier models to predict the quality of the wine.*\n\n**1. Random Forest Classifier**\n\n**2. Stochastic Gradient Descent Classifier**\n\n**3. Support Vector Classifier(SVC) **\n\n*Then I use cross validation evaluation technique to optimize the model performance.*\n\n**1. Grid Search CV**\n\n**2. Cross Validation Score**\n\n## **If you find this notebook useful then please upvote.**","b8b20d99":"#### Random forest gives the accuracy of 87%","ea8e9c5b":"## If you find this notebook useful then please upvote. So the beginners can find easily","382a846d":"### Random forest accuracy increases from 87% to 91 % using cross validation score","c6195200":"## **Let's do some plotting to know how the data columns are distributed in the dataset**","dabff3a7":"#### 84% accuracy using stochastic gradient descent classifier","c30bdabc":"# CHANGE THE PATH OF THE DATASET ACCORDING TO UR LOCATION AND NAME provide fullpath","6e387184":"## Preprocessing Data for performing Machine learning algorithms","c6afdd3c":"#### Support vector classifier gets 86%","64f67502":"### Thank for going through this notebook","aede16d3":"## Our training and testing data is ready now to perform machine learning algorithm","1652f42a":"### SVC improves from 86% to 90% using Grid Search CV","93f946ba":"## Cross Validation Score for random forest and SGD"}}