{"cell_type":{"11a45e7a":"code","6d3ea9d9":"code","50fcb7a9":"code","52da6c4a":"code","85a8e119":"code","d7b725d6":"code","2e7c104e":"code","9a46a922":"code","3f19f7af":"code","6c48886a":"code","10b4a17c":"code","7403209a":"code","64c9bc6c":"code","4fed3287":"code","40f19cdf":"code","288913e5":"markdown","0ce3c0cc":"markdown","b9819dcc":"markdown"},"source":{"11a45e7a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans, AffinityPropagation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport plotly as py\nimport plotly.graph_objs as go\nimport plotly.express as px\npy.offline.init_notebook_mode(connected = True)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d3ea9d9":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsvaccinatedcsv\/vaccinated.csv', delimiter=';', encoding = \"utf8\", nrows = nRowsRead)\ndf.dataframeName = 'vaccinated.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')\ndf.head()","50fcb7a9":"!pip install dataprep","52da6c4a":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","85a8e119":"plot_missing(df)","d7b725d6":"plot(df)","2e7c104e":"#API Correlation\nplot_correlation(df)","9a46a922":"brz = df[(df['location']=='Brazil')].reset_index(drop=True)\nbrz.head()","3f19f7af":"#Code by Joshua Swords  https:\/\/www.kaggle.com\/joshuaswords\/data-visualization-clustering-mall-data\n\n#Preparing to cluster: What about the distribution of our data?\nimport matplotlib.gridspec as gridspec\n\n# Create 2x2 sub plots\ngs = gridspec.GridSpec(1, 3)\n\nfig = plt.figure(figsize=(15, 3))\n\n# Title and sub-title\n\nfig.text(0.09, 1.09, 'Numeric variable distribution', fontsize=15, fontweight='bold', fontfamily='serif')\nfig.text(0.09, 1, 'Our data appears to be relatively normal, therefore we will not transform it.', fontsize=12, fontweight='light', fontfamily='serif')\n\n# Grid spec layout\n\nax1 = fig.add_subplot(gs[0, 0]) # row 0, col 0\nax1 = sns.distplot(df[\"people_vaccinated\"],color='#244747',hist_kws=dict(edgecolor=\"white\", linewidth=1,alpha=0.8))\n\nax2 = fig.add_subplot(gs[0, 1]) # row 0, col 1\nax2 = sns.distplot(df[\"people_fully_vaccinated\"],color='#244747',hist_kws=dict(edgecolor=\"white\", linewidth=1,alpha=0.8))\n\nax3 = fig.add_subplot(gs[0, 2]) # row 1, span all columns\nax3 = sns.distplot(df[\"daily_vaccinations_per_million\"],color='#244747',hist_kws=dict(edgecolor=\"white\", linewidth=1,alpha=0.8))\n\nsns.despine()\n\nplt.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=0.3, hspace=None) # useful for adjusting space between subplots","6c48886a":"fig = px.bar(df, \n             x='date', y='people_vaccinated',color_discrete_sequence=['blue'],\n             title='Covid Vaccine Administered', text='location')\nfig.show()","10b4a17c":"fig = px.bar(brz, \n             x='date', y='people_vaccinated',color_discrete_sequence=['darkolivegreen'],\n             title='Covid Vaccine Administered in Brazil', text='people_fully_vaccinated')\nfig.show()","7403209a":"fig = px.parallel_categories(df, color=\"people_vaccinated\", color_continuous_scale=px.colors.sequential.OrRd)\nfig.show()\n","64c9bc6c":"fig = px.line(df, x=\"date\", y=\"people_fully_vaccinated\", color_discrete_sequence=['darksalmon'], \n              title=\"Covid-19 Doses Administered\")\nfig.show()","4fed3287":"fig = px.scatter(df, x=\"date\", y=\"people_fully_vaccinated\",color_discrete_sequence=['#4257f5'], title=\"Covid Doses Administered\" )\nfig.show()","40f19cdf":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","288913e5":"#Dataprep\n\nAcknowlegdements\n\nSFU Data Science Research Group - SIMON FRASER UNIVERSITY\n\nhttps:\/\/sfu-db.github.io\/dataprep\/user_guide\/eda\/plot.html\n\nhttps:\/\/dataprep.ai\/\n\nhttps:\/\/www.cs.sfu.ca\/~jnwang\/\n\nhttps:\/\/www.cs.sfu.ca\/~jnwang\/ppt\/DataPrep-Overview-Databricks.pdf","0ce3c0cc":"#COVID-19 vaccine doses administered per 100 people\n\nTotal number of vaccination doses administered per 100 people in the total population. This is counted as a single dose, and may not equal the total number of people vaccinated, depending on the specific dose regime (e.g. people receive multiple doses).\n\nhttps:\/\/data.humdata.org\/dataset\/covid-19-vaccinations","b9819dcc":"![](https:\/\/i.ytimg.com\/vi\/0l8BOOX1Mqc\/maxresdefault.jpg)youtube.com"}}