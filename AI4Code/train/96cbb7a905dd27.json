{"cell_type":{"5f457f4e":"code","7f9cfbb5":"code","ef511700":"code","9a2bc6af":"code","0f0f71a3":"code","de799898":"code","9c6f3597":"code","44e30ed2":"code","67f325a6":"code","1ed0600b":"code","77e521b4":"code","80f75a6c":"code","267001b0":"code","5d49e9a6":"markdown","327f5529":"markdown","1df67ec9":"markdown","4b316e60":"markdown"},"source":{"5f457f4e":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom datetime import datetime\n\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn-darkgrid')","7f9cfbb5":"btc = pd.read_csv('\/kaggle\/input\/bitcoin-historical-data\/bitstampUSD_1-min_data_2012-01-01_to_2020-09-14.csv')\n# Converting the Timestamp column from string to datetime\nbtc['Timestamp'] = [datetime.fromtimestamp(x) for x in btc['Timestamp']]\nbtc = btc.set_index('Timestamp')","ef511700":"btc_daily = btc.resample(\"24H\").mean() #daily resampling","9a2bc6af":"from statsmodels.tsa.seasonal import seasonal_decompose\nfrom statsmodels.tsa.stattools import kpss\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf","0f0f71a3":"def fill_missing(df):\n    ### function to impute missing values using interpolation ###\n    df['Open'] = df['Open'].interpolate()\n    df['Close'] = df['Close'].interpolate()\n    df['Weighted_Price'] = df['Weighted_Price'].interpolate()\n    df['Volume_(BTC)'] = df['Volume_(BTC)'].interpolate()\n    df['Volume_(Currency)'] = df['Volume_(Currency)'].interpolate()\n    df['High'] = df['High'].interpolate()\n    df['Low'] = df['Low'].interpolate()\n    print(df.head())\n    print(df.isnull().sum())\n    \nfill_missing(btc_daily)","de799898":"\nplt.figure(figsize=(15,12))\nseries = btc_daily.Weighted_Price\nresult = seasonal_decompose(series, model='additive',period=1)\nresult.plot()","9c6f3597":"!pip install neuralprophet[live]\nfrom neuralprophet import NeuralProphet","44e30ed2":"# Renaming the column names accroding to Prophet's requirements\n\ndaily_data_fb = btc_daily.reset_index()[['Timestamp','Weighted_Price']].rename({'Timestamp':'ds','Weighted_Price':'y'}, axis=1)\ndaily_data_fb.head()","67f325a6":"test_length = 365\nsplit_date = \"2020-01-01\"\ntrain_filt = daily_data_fb['ds'] <= split_date\ntest_filt = daily_data_fb['ds'] > split_date\n\ntrain_fb = daily_data_fb[train_filt]\ntest_fb = daily_data_fb[test_filt]\n\nprint(\"train data shape :\", train_fb.shape[0] \/ daily_data_fb.shape[0] * 100)\nprint(\"test data shape :\", test_fb.shape[0] \/ daily_data_fb.shape[0] * 100)","1ed0600b":"nprophet_model = NeuralProphet()\nmetrics = nprophet_model.fit(train_fb, freq=\"D\")\nfuture_df = nprophet_model.make_future_dataframe(train_fb, \n                                                 periods = test_length, \n                                                 n_historic_predictions=len(train_fb))\npreds_df_2 = nprophet_model.predict(future_df)","77e521b4":"nprophet_model.plot(preds_df_2);","80f75a6c":"nprophet_model.plot_components(preds_df_2, residuals=True);","267001b0":"nprophet_model.plot_parameters();","5d49e9a6":"#### Time Series Decomposition & Statistical Tests","327f5529":"#### Time resampling","1df67ec9":"## Glipse Data","4b316e60":"Read data"}}