{"cell_type":{"0ea4051f":"code","0ec4f0ee":"code","50de8b5f":"code","9672bd51":"code","4154de03":"code","d022406d":"code","5b1845e8":"code","cc9a58be":"code","1a1e0fd1":"code","e25dff1f":"code","fe60856d":"code","4cd87fd4":"code","79feb415":"code","8022e07e":"code","90799088":"code","0135938a":"code","e8645198":"code","6dde7e28":"code","fbb2651d":"code","a8a7416d":"code","027081ba":"code","a7eb84cd":"code","cfddc7b6":"code","c00b199a":"code","e8d7eeb9":"code","f29d6407":"code","e75bcd87":"code","89a0174b":"code","9f665280":"markdown","7b03b995":"markdown"},"source":{"0ea4051f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0ec4f0ee":"movies = pd.read_csv('\/kaggle\/input\/movietweetings\/movies.dat', delimiter='::', engine='python', header=None, names = ['Movie ID', 'Movie Title', 'Genre'])\nusers = pd.read_csv('\/kaggle\/input\/movietweetings\/users.dat', delimiter='::', engine='python', header=None, names = ['User ID', 'Twitter ID'])\nratings = pd.read_csv('\/kaggle\/input\/movietweetings\/ratings.dat', delimiter='::', engine='python', header=None, names = ['User ID', 'Movie ID', 'Rating', 'Rating Timestamp'])\npd.set_option('display.max_columns', None)\n\nmovies.head()","50de8b5f":"movies.iloc[3]['Movie Title']","9672bd51":"ratings.head()","4154de03":"movies.dropna(how='any',axis=0,inplace=True)","d022406d":"movies.isnull().sum()","5b1845e8":"movies.head()","cc9a58be":"p=movies['Movie Title'].str.split('(',expand=True)[1]\nmovies['year']=p.str.split(\")\",expand=True)[0]\nmovies","1a1e0fd1":"movies['Movie Title']=movies['Movie Title'].str.split('(',expand=True)[0]\n\nmovies.head(10)","e25dff1f":"p=movies['Genre'].str.split('|',expand=True)\nmovies['Genre']=p[0]","fe60856d":"movies['Genre'].loc[movies['Genre']=='Short']=p[1]\nmovies.head(10)\n        ","4cd87fd4":"movies.isnull().sum()","79feb415":"movies['Genre'].unique()","8022e07e":"df=pd.merge(movies,ratings,how='right')\ndf.head(10)","90799088":"df=df.drop('Rating Timestamp',axis=1)\n","0135938a":"df.loc[df['Movie Title']==np.nan]","e8645198":"df","6dde7e28":"df.isnull().sum()","fbb2651d":"df.dropna(how='any',axis=0,inplace=True)","a8a7416d":"df.head(2)","027081ba":"df[['Movie Title','Rating']].groupby(['Movie Title']).agg({'Rating':np.mean}).sort_values(by='Rating',ascending=False).head(10)\n","a7eb84cd":"df[['Movie Title','Genre','Rating','year']].groupby(['year','Movie Title']).agg({'Rating':np.mean})","cfddc7b6":"df.rename(columns={'Rating':'raw_ratings'})\ndf.head(2)","c00b199a":"df['raw_ratings']=df['Rating']\ndf.head(2)","e8d7eeb9":"\nfrom surprise import KNNWithMeans\nfrom surprise import Dataset\nfrom surprise import accuracy\nfrom surprise import Reader\nfrom surprise.model_selection import train_test_split","f29d6407":"reader=Reader(rating_scale=(1,10))\ndata=Dataset.load_from_df(df[['User ID','Movie ID','Rating']],reader)","e75bcd87":"[trainset,testset]=train_test_split(data,test_size=.4,shuffle=True)","89a0174b":"#recom=KNNWithMeans(k=17,sim_options={'name':'cosine','user_based':True})\n#recom.fit(data.build_full_trainset()) #using full tarining set and not doning\n#test_pred=recom.test(testset)\n#RMSE=accuracy.rmse(test_pred)","9f665280":"**Top 10 rated movie :-**","7b03b995":"**Year wise top rated movies :-**"}}