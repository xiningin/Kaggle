{"cell_type":{"d82d6114":"code","29f0f704":"code","cd4100a6":"code","4d82f6a7":"code","81f628c1":"code","41c66973":"code","3785204d":"code","19d7b65e":"code","3d5ee699":"code","a2cd2180":"code","683f7b9e":"code","e6e33681":"code","faf392d6":"code","fc3ada7d":"code","1b79fc95":"code","485d0add":"code","75e9180e":"code","b47fb6e2":"code","0afc125c":"markdown","ddcc1815":"markdown","3fa334e7":"markdown","b09e32f0":"markdown","024f6443":"markdown","22839f4c":"markdown","333e7659":"markdown","d622bf54":"markdown","019264fd":"markdown","864bf631":"markdown"},"source":{"d82d6114":"import os\nimport cv2\nimport glob\nimport random\n%matplotlib inline\nimport numpy as np\nimport pandas as pd\nfrom pathlib import Path\nfrom skimage import io,data\nimport matplotlib.pyplot as plt\nfrom skimage.transform import rescale, resize, downscale_local_mean\n\nimport tensorflow as tf\nfrom keras.optimizers import RMSprop\nfrom keras.models import Sequential, Model\nfrom sklearn.preprocessing import StandardScaler\nfrom tensorflow.keras.preprocessing import image\nfrom keras.layers.experimental import preprocessing\nfrom tensorflow.keras.callbacks import EarlyStopping\nfrom sklearn.model_selection import train_test_split \nfrom tensorflow.keras.metrics import categorical_crossentropy\nfrom keras.preprocessing.image import ImageDataGenerator,load_img, img_to_array \nfrom keras.layers import Dense, Flatten, Conv2D, MaxPooling2D, Dropout, Activation","29f0f704":"directory = Path(\"..\/input\/a-large-scale-fish-dataset\/Fish_Dataset\/Fish_Dataset\")\npaths = list(directory.glob(r\"**\/*.png\"))\nLabels = list(map(lambda x: os.path.split(os.path.split(x)[0])[1],paths))","cd4100a6":"filepaths = pd.Series(paths, name = 'Filepath').astype(str)\nLabels = pd.Series(Labels, name = 'Label').astype(str)\ndf = pd.merge(filepaths, Labels, right_index = True, left_index = True)","4d82f6a7":"df.shape","81f628c1":"df = df[df[\"Label\"].apply(lambda x: x[-2:] != \"GT\")].reset_index(drop=True)\ndf.head()","41c66973":"df.tail()","3785204d":"df.shape","19d7b65e":"train,test = train_test_split(df, test_size = 0.2, random_state = 42)\ntrain_new, validation = train_test_split(train, test_size = 0.2, random_state = 42)\nprint(\"Train Data shape:\",train_new.shape)\nprint(\"Test Data shape:\",test.shape)\nprint(\"Validation Data shape:\",validation.shape)","3d5ee699":"train_datagen = ImageDataGenerator(rescale = 1.\/255.,rotation_range = 20, width_shift_range = 0.2, height_shift_range = 0.2, \n                                   zoom_range = 0.2, shear_range = 0.2, horizontal_flip = True, vertical_flip =True)\n\ntest_datagen = ImageDataGenerator(rescale = 1.0\/255.)","a2cd2180":"img_gen = ImageDataGenerator(preprocessing_function=tf.keras.applications.mobilenet_v2.preprocess_input)\ntrain_generator = img_gen.flow_from_dataframe(train_new,\n                                    x_col ='Filepath',\n                                    y_col ='Label',\n                                    target_size=(224, 224),\n                                    color_mode = 'rgb',\n                                    class_mode = 'categorical',\n                                    batch_size = 32,\n                                    shuffle = True,\n                                    seed = 42\n)\n\nval_generator = img_gen.flow_from_dataframe(validation,\n                                  x_col='Filepath',\n                                  y_col='Label',\n                                  target_size = (224, 224),\n                                  color_mode = 'rgb',\n                                  class_mode = 'categorical',\n                                  batch_size = 32,\n                                  shuffle = True,\n                                  seed = 42\n)\n\n\ntest_generator = img_gen.flow_from_dataframe(test,\n                                   x_col = 'Filepath',\n                                   y_col = 'Label',\n                                   target_size = (224, 224),\n                                   color_mode = 'rgb',\n                                   class_mode = 'categorical',\n                                   batch_size = 32,\n                                   shuffle = False\n)","683f7b9e":"pretrained_model = tf.keras.applications.MobileNetV2(\n    input_shape= (224,224,3),\n    include_top = False,\n    weights = 'imagenet',\n    pooling = 'avg'\n)\npretrained_model.trainable = False","e6e33681":"labels = train_generator.class_indices\nlabels = train_generator.class_indices\nlabels = dict((m,n) for n,m in labels.items())\nlabels","faf392d6":"inputs = pretrained_model.input\nx = tf.keras.layers.Dense(128,activation = 'relu')(pretrained_model.output)\nx = tf.keras.layers.Dense(128,activation = 'relu')(x)\n             \noutput = tf.keras.layers.Dense(9,activation = 'softmax')(x)\nmodel = tf.keras.Model(inputs = inputs,outputs = output)","fc3ada7d":"model.compile(\n    optimizer=\"rmsprop\",\n    loss=\"categorical_crossentropy\",\n    metrics=[\"accuracy\"])\nhist = model.fit(train_generator,\n    validation_data = val_generator,\n    epochs = 5,\n    callbacks = [\n        tf.keras.callbacks.EarlyStopping(\n        monitor = 'val_loss',\n        patience = 3,\n        )\n    ]\n                )","1b79fc95":"predictions = model.predict(test_generator)\npreds = np.argmax(predictions, axis=1)\npreds","485d0add":"preds = [labels[n] for n in preds]\npreds","75e9180e":"test.head()","b47fb6e2":"from sklearn.metrics import accuracy_score\nprint(\"Test accuracy:\", accuracy_score(test.Label, preds) * 100,'%')","0afc125c":"**References**\n\n@inproceedings{ulucan2020large,\n  \n  title={A Large-Scale Dataset for Fish Segmentation and Classification},\n  \n  author={Ulucan, Oguzhan and Karakaya, Diclehan and Turkan, Mehmet},\n  \n  booktitle={2020 Innovations in Intelligent Systems and Applications Conference (ASYU)},\n  \n  pages={1--5},\n  \n  year={2020},\n  \n  organization={IEEE}\n}","ddcc1815":"**COMPILING THE MODEL**","3fa334e7":"**IMAGE AUGMENTATION**","b09e32f0":"**CONVERTING LISTS (PATHS AND LABELS) TO A DATAFRAME\/SERIES**","024f6443":"**SPLITTING THE DATASET INTO TRAIN, VALIDATION AND TEST DATA**","22839f4c":"**GETTING FILEPATHS AND LABELS**","333e7659":"**MAKING THE PREDICTIONS**","d622bf54":"**DEFINING THE MODEL**","019264fd":"**IMPORTING LIBRARIES**","864bf631":"**REMOVING ALL THE GROUND TRUTH(GT) IMAGES FROM THE DATASET**"}}