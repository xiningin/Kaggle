{"cell_type":{"88b8bd45":"code","4df25b2f":"code","bcf3b4f1":"code","9cfeba6e":"code","cc5e0ed0":"code","d9401470":"code","09e3d682":"code","b67d12d9":"code","11ee83f1":"code","dc3020e0":"code","64432ec4":"code","439ed8ed":"code","93efe815":"code","c85d8fb4":"code","bed78df9":"code","46bccf0f":"code","dce65dea":"code","688443f7":"code","bd352e0b":"code","fe94fb67":"code","dd5fff1d":"code","6b1c60dc":"code","4a7e96f2":"code","ef7b6ab4":"code","c361e5e6":"code","a29ad1f9":"code","ef36ef9a":"code","b88d336c":"markdown","8566c2d7":"markdown","c6c16361":"markdown","c3c43445":"markdown","16e0566e":"markdown","d11e6187":"markdown","a8c71da8":"markdown","1836d822":"markdown","873fbde7":"markdown","51adac23":"markdown","aabc608a":"markdown","fd6b2801":"markdown","8c5a5d29":"markdown","36cf3851":"markdown","8e08001f":"markdown"},"source":{"88b8bd45":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport seaborn as sns \nimport plotly as py\nimport plotly.graph_objs as go\npy.offline.init_notebook_mode(connected = True)\n\nfrom sklearn.cluster import KMeans # https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html","4df25b2f":"df = pd.read_csv(r'\/kaggle\/input\/Mall_Customers.csv')","bcf3b4f1":"df.head()","9cfeba6e":"df.shape","cc5e0ed0":"# https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.describe.html\ndf.describe()","d9401470":"df.dtypes","09e3d682":"df.isnull().sum()","b67d12d9":"plt.figure(1, figsize=(15, 6))\nfor idx, x in enumerate(['Age', 'Annual Income (k$)', 'Spending Score (1-100)']):\n    plt.subplot(1, 3, idx+1)\n    plt.subplots_adjust(hspace=0.5, wspace=0.5)\n    sns.distplot(df[x], bins=20)\n    plt.title('Distplot of {}'.format(x))\nplt.show()","11ee83f1":"plt.figure(1, figsize = (15, 5))\nsns.countplot(y = 'Gender', data = df)\nplt.show()","dc3020e0":"plt.figure(1 , figsize = (15 , 7))\nn = 0 \nfor x in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n    for y in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n        n += 1\n        plt.subplot(3 , 3 , n)\n        plt.subplots_adjust(hspace = 0.5 , wspace = 0.5)\n        sns.regplot(x = x , y = y , data = df)\n        plt.ylabel(y.split()[0]+' '+y.split()[1] if len(y.split()) > 1 else y )\nplt.show()","64432ec4":"plt.figure(1 , figsize = (15 , 6))\nfor gender in ['Male' , 'Female']:\n    plt.scatter(x = 'Age' , y = 'Annual Income (k$)' , data = df[df['Gender'] == gender] ,\n                s = 200 , alpha = 0.5 , label = gender)\nplt.xlabel('Age'), plt.ylabel('Annual Income (k$)') \nplt.title('Age vs Annual Income w.r.t Gender')\nplt.legend()\nplt.show()","439ed8ed":"plt.figure(1 , figsize = (15 , 6))\nfor gender in ['Male' , 'Female']:\n    plt.scatter(x = 'Annual Income (k$)',y = 'Spending Score (1-100)' ,\n                data = df[df['Gender'] == gender] ,s = 200 , alpha = 0.5 , label = gender)\nplt.xlabel('Annual Income (k$)'), plt.ylabel('Spending Score (1-100)') \nplt.title('Annual Income vs Spending Score w.r.t Gender')\nplt.legend()\nplt.show()","93efe815":"plt.figure(1 , figsize = (15 , 7))\nn = 0 \nfor cols in ['Age' , 'Annual Income (k$)' , 'Spending Score (1-100)']:\n    n += 1 \n    plt.subplot(1 , 3 , n)\n    plt.subplots_adjust(hspace = 0.5 , wspace = 0.5)\n    sns.violinplot(x = cols , y = 'Gender' , data = df , palette = 'vlag')\n    sns.swarmplot(x = cols , y = 'Gender' , data = df)\n    plt.ylabel('Gender' if n == 1 else '')\n    plt.title('Boxplots & Swarmplots' if n == 2 else '')\nplt.show()","c85d8fb4":"'''Age and spending Score'''\nX1 = df[['Age', 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1, 11):\n    algorithm = KMeans(\n        n_clusters=n,\n        init='k-means++', \n        n_init = 10,\n        max_iter=300, \n        tol=0.0001,\n        random_state=111,\n        algorithm='elkan'\n    )\n    \n    algorithm.fit(X1)\n    inertia.append(algorithm.inertia_) # https:\/\/stats.stackexchange.com\/questions\/78313\/clustering-inertia-formula-in-scikit-learn","bed78df9":"plt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Inertia')\nplt.show()","46bccf0f":"algorithm = KMeans(\n    n_clusters = 4,\n    init='k-means++',\n    n_init = 10,\n    max_iter=300, \n    tol=0.0001,\n    random_state=111,\n    algorithm='elkan'\n)\n\nalgorithm.fit(X1)\nlabels1 = algorithm.labels_\ncentroids1 = algorithm.cluster_centers_","dce65dea":"h = 0.02\nx_min, x_max = X1[:, 0].min() - 1, X1[:, 0].max() + 1\ny_min, y_max = X1[:, 1].min() - 1, X1[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\nZ = algorithm.predict(np.c_[xx.ravel(), yy.ravel()]) ","688443f7":"plt.figure(1 , figsize = (15 , 7) )\nplt.clf()\nZ = Z.reshape(xx.shape)\nplt.imshow(Z , interpolation='nearest', \n           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n           cmap = plt.cm.Pastel2, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Age' ,y = 'Spending Score (1-100)' , data = df , c = labels1 , \n            s = 200 )\nplt.scatter(x = centroids1[: , 0] , y =  centroids1[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.ylabel('Spending Score (1-100)') , plt.xlabel('Age')\nplt.show()","bd352e0b":"'''Annual Income and spending Score'''\nX2 = df[['Annual Income (k$)' , 'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 11):\n    algorithm = KMeans(\n        n_clusters=n,\n        init='k-means++', \n        n_init = 10,\n        max_iter=300, \n        tol=0.0001,\n        random_state=111,\n        algorithm='elkan'\n    )\n\n    algorithm.fit(X2)\n    inertia.append(algorithm.inertia_)","fe94fb67":"plt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Inertia')\nplt.show()","dd5fff1d":"algorithm = KMeans(\n    n_clusters = 5,\n    init='k-means++',\n    n_init = 10,\n    max_iter=300, \n    tol=0.0001,\n    random_state=111,\n    algorithm='elkan'\n)\n\nalgorithm.fit(X2)\nlabels2 = algorithm.labels_\ncentroids2 = algorithm.cluster_centers_","6b1c60dc":"h = 0.02\nx_min, x_max = X2[:, 0].min() - 1, X2[:, 0].max() + 1\ny_min, y_max = X2[:, 1].min() - 1, X2[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\nZ2 = algorithm.predict(np.c_[xx.ravel(), yy.ravel()]) ","4a7e96f2":"plt.figure(1 , figsize = (15 , 7) )\nplt.clf()\nZ2 = Z2.reshape(xx.shape)\nplt.imshow(Z2 , interpolation='nearest', \n           extent=(xx.min(), xx.max(), yy.min(), yy.max()),\n           cmap = plt.cm.Pastel2, aspect = 'auto', origin='lower')\n\nplt.scatter( x = 'Annual Income (k$)' ,y = 'Spending Score (1-100)' , data = df , c = labels2 , \n            s = 200 )\nplt.scatter(x = centroids2[: , 0] , y =  centroids2[: , 1] , s = 300 , c = 'red' , alpha = 0.5)\nplt.ylabel('Spending Score (1-100)') , plt.xlabel('Annual Income (k$)')\nplt.show()","ef7b6ab4":"X3 = df[['Age' , 'Annual Income (k$)' ,'Spending Score (1-100)']].iloc[: , :].values\ninertia = []\nfor n in range(1 , 11):\n    algorithm = KMeans(\n        n_clusters=n,\n        init='k-means++', \n        n_init = 10,\n        max_iter=300, \n        tol=0.0001,\n        random_state=111,\n        algorithm='elkan'\n    )\n    \n    algorithm.fit(X3)\n    inertia.append(algorithm.inertia_)","c361e5e6":"plt.figure(1 , figsize = (15 ,6))\nplt.plot(np.arange(1 , 11) , inertia , 'o')\nplt.plot(np.arange(1 , 11) , inertia , '-' , alpha = 0.5)\nplt.xlabel('Number of Clusters')\nplt.ylabel('Inertia')\nplt.show()","a29ad1f9":"algorithm = KMeans(\n    n_clusters = 6,\n    init='k-means++',\n    n_init = 10,\n    max_iter=300, \n    tol=0.0001,\n    random_state=111,\n    algorithm='elkan'\n)\n\nalgorithm.fit(X3)\nlabels3 = algorithm.labels_\ncentroids3 = algorithm.cluster_centers_","ef36ef9a":"df['label3'] = labels3\ntrace1 = go.Scatter3d(\n    x= df['Age'],\n    y= df['Spending Score (1-100)'],\n    z= df['Annual Income (k$)'],\n    mode='markers',\n    marker=dict(\n        color = df['label3'], \n        size= 20,\n        line=dict(\n            color= df['label3'],\n            width= 12\n        ),\n        opacity=0.8\n    )\n)\ndata = [trace1]\nlayout = go.Layout(\n    title= 'Clusters',\n    scene = dict(\n        xaxis = dict(title  = 'Age'),\n        yaxis = dict(title  = 'Spending Score'),\n        zaxis = dict(title  = 'Annual Income')\n    )\n)\nfig = go.Figure(data=data, layout=layout)\npy.offline.iplot(fig)","b88d336c":"### Distribution of values in Age , Annual Income and Spending Score according to Gender","8566c2d7":"## Ph\u00e2n c\u1ee5m d\u1eef li\u1ec7u b\u1eb1ng thu\u1eadt to\u00e1n K-Means","c6c16361":"# B\u00e0i to\u00e1n ph\u00e2n t\u00edch kh\u00e1ch h\u00e0ng\nGi\u1ea3 s\u1eed b\u1ea1n \u0111ang s\u1edf h\u1eefu m\u1ed9t si\u00eau th\u1ecb v\u00e0 th\u00f4ng qua nh\u1eefng t\u1ea5m th\u1ebb th\u00e0nh vi\u00ean (membership cards) b\u1ea1n cung c\u1ea5p cho kh\u00e1ch h\u00e0ng c\u1ee7a m\u00ecnh, b\u1ea1n s\u1ebd thu \u0111\u01b0\u1ee3c nh\u1eefng th\u00f4ng tin nh\u01b0 ID kh\u00e1ch h\u00e0ng (customer id), tu\u1ed5i (age), gi\u1edbi t\u00ednh (gender), thu nh\u1eadp h\u00e0ng n\u0103m (annual income) v\u00e0 \u0111i\u1ec3m chi (spending score); trong \u0111\u00f3, \u0111i\u1ec3m chi l\u00e0 m\u1ed9t con s\u1ed1 \u0111\u01b0\u1ee3c g\u00e1n cho m\u1ed7i kh\u00e1ch h\u00e0ng d\u1ef1a v\u00e0o nh\u1eefng tham s\u1ed1 m\u00e0 b\u1ea1n \u0111\u1ecbnh ngh\u0129a, v\u00ed d\u1ee5 nh\u01b0 h\u00e0nh vi c\u1ee7a kh\u00e1ch h\u00e0ng, d\u1eef li\u1ec7u mua s\u1eafm, bla bla bla ...\nT\u1eeb t\u1ea5t c\u1ea3 nh\u1eefng th\u00f4ng tin c\u00f3 \u0111\u01b0\u1ee3c \u1edf tr\u00ean, b\u1ea1n mu\u1ed1n kh\u00e1ch h\u00e0ng th\u00e0nh nh\u1eefng \"nh\u00f3m\" \u0111\u1ec3 t\u1eeb \u0111\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0a ra chi\u1ebfn l\u01b0\u1ee3c ph\u00f9 h\u1ee3p, nh\u1eefng \u01b0u \u0111\u00e3i d\u00e0nh ri\u00eang cho t\u1eebng nh\u00f3m kh\u00e1ch h\u00e0ng, ...\n\n### C\u00e1c b\u01b0\u1edbc th\u1ef1c hi\u1ec7n:\n1. Import c\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft\n2. Th\u0103m d\u00f2 d\u1eef li\u1ec7u\n3. Tr\u1ef1c quan h\u00f3a d\u1eef li\u1ec7u c\u1ee7a b\u00e0i to\u00e1n\n4. Ph\u00e2n c\u1ee5m d\u1eef li\u1ec7u b\u1eb1ng thu\u1eadt to\u00e1n K-Means\n5. L\u1ef1a ch\u1ecdn s\u1ed1 l\u01b0\u1ee3ng c\u1ee5m\n6. Tr\u1ef1c quan h\u00f3a c\u00e1c c\u1ee5m \u0111\u01b0\u1ee3c ph\u00e2n trong kh\u00f4ng gian 2 chi\u1ec1u\n7. Tr\u1ef1c quan h\u00f3a c\u00e1c c\u1ee5m \u0111\u01b0\u1ee3c ph\u00e2n trong kh\u00f4ng gian 3 chi\u1ec1u","c3c43445":"### Count Plot of Gender","16e0566e":"## Import c\u00e1c th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft","d11e6187":"### 2. Ch\u1ea1y thu\u1eadt to\u00e1n ph\u00e2n c\u1ee5m v\u1edbi tr\u01b0\u1eddng Annual Income v\u00e0 Spending Score","a8c71da8":"### 3. Ch\u1ea1y thu\u1eadt to\u00e1n ph\u00e2n c\u1ee5m v\u1edbi tr\u01b0\u1eddng Age, Annual Income v\u00e0 Spending Score","1836d822":"## Th\u0103m d\u00f2 d\u1eef li\u1ec7u","873fbde7":"### Histograms","51adac23":"# Note\nThis notebook is a translated version of this [one](https:\/\/www.kaggle.com\/kushal1996\/customer-segmentation-k-means-analysis) with some additional modification.","aabc608a":"# Ch\u00fac c\u00e1c b\u1ea1n c\u00f3 m\u1ed9t bu\u1ed5i th\u1ef1c h\u00e0nh vui v\u1ebb v\u00e0 hi\u1ec7u qu\u1ea3!\n### V\u00e0 nh\u1edb th\u1ef1c h\u00e0nh th\u1eadt nhi\u1ec1u m\u1ed7i khi c\u00f3 th\u1eddi gian nh\u00e9 :D","fd6b2801":"### 1. Ch\u1ea1y thu\u1eadt to\u00e1n ph\u00e2n c\u1ee5m v\u1edbi tr\u01b0\u1eddng Age v\u00e0 Spending Score","8c5a5d29":"### Ploting the Relation between Age, Annual Income and Spending Score","36cf3851":"## Tr\u1ef1c quan h\u00f3a d\u1eef li\u1ec7u c\u1ee7a b\u00e0i to\u00e1n","8e08001f":"### L\u1ef1a ch\u1ecdn s\u1ed1 l\u01b0\u1ee3ng c\u1ee5m (K) d\u1ef1a v\u00e0o gi\u00e1 tr\u1ecb Inertia (t\u1ed5ng b\u00ecnh ph\u01b0\u01a1ng kho\u1ea3ng c\u00e1ch gi\u1eefa c\u00e1c t\u00e2m c\u1ee5m v\u00e0 c\u00e1c \u0111i\u1ec3m d\u1eef li\u1ec7u)"}}