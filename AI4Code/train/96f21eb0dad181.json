{"cell_type":{"5762ceae":"code","9ca4206f":"code","af1a034a":"code","2437193b":"code","a8043904":"code","c33bea9c":"code","f9906ceb":"code","55c80e9a":"code","738cc559":"code","853d3ddf":"code","8f3bfe81":"code","31814dbf":"markdown","8a00882b":"markdown","050e1546":"markdown","07bc556a":"markdown","ce3dd9b0":"markdown","05fe7c25":"markdown","c04a8baa":"markdown"},"source":{"5762ceae":"import numpy as np\nimport pandas as pd","9ca4206f":"train = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/train.csv', parse_dates=['Date'])\ntest  = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/test.csv',  parse_dates=['Date'])\n\ntrain.rename(columns={\n        'Id': 'id',\n        'Date': 'date',\n        'Province_State':'state',\n        'Country_Region':'country',\n        'ConfirmedCases': 'confirmed',\n        'Fatalities':'deaths',\n        }, inplace=True)\n\ntest.rename(columns={\n        'ForecastId': 'id',\n        'Date': 'date',\n        'Province_State':'state',\n        'Country_Region':'country',\n        }, inplace=True)\n\nvalid = train[train['date'] >= test['date'].min()]\ntrain = train[(train['date'] < test['date'].min()) & (train['date'] > pd.Timestamp('2020-03-01'))]\n\ntrain['date'] = (train['date'] - pd.Timestamp('2020-03-01')).dt.days\nvalid['date'] = (valid['date'] - pd.Timestamp('2020-03-01')).dt.days\ntest['date']  = (test['date'] - pd.Timestamp('2020-03-01')).dt.days\n\ntrain['loc'] = train['country'].astype(str) + '-' + train['state'].astype(str)\nvalid['loc'] = valid['country'].astype(str) + '-' + valid['state'].astype(str)\ntest['loc'] = test['country'].astype(str) + '-' + test['state'].astype(str)","af1a034a":"all_coords = train['loc'].unique().tolist()\npredictions = dict()\nRMSE = dict()\ntotal_RMSE = 0\n\nfor coords in all_coords:\n    \n    X_train_ = train[train['loc']==coords]['date']#.values.reshape(-1,1)\n    y_train_ = train[train['loc']==coords]['confirmed']#.values.reshape(-1,1)\n    \n    X_valid_ = valid[valid['loc']==coords]['date']#.values.reshape(-1,1)\n    y_valid_ = valid[valid['loc']==coords]['confirmed']#.values.reshape(-1,1)\n    \n    last_diff = y_train_.iloc[-1] - y_train_.iloc[-2]\n    y_linear = y_train_.iloc[-1] + last_diff*np.arange(1,len(X_valid_)+1,1)\n    \n    z = np.polyfit(X_train_.values, y_train_.values, 3)\n    pf = np.poly1d(z)\n        \n    y_preds_ = np.round(X_valid_.apply(pf)).clip(lower=y_linear)\n    \n    predictions[coords] = y_preds_\n    RMSE[coords]=np.sqrt(np.sum(np.square(y_preds_-y_valid_)))\n    total_RMSE += np.sqrt(np.sum(np.square(y_preds_-y_valid_)))\n\n    \nprint(total_RMSE)","2437193b":"all_coords = train['loc'].unique().tolist()\npredictions = dict()\nRMSE = dict()\ntotal_RMSE = 0\n\nfor coords in all_coords:\n    \n    X_train_ = train[train['loc']==coords]['date']#.values.reshape(-1,1)\n    y_train_ = train[train['loc']==coords]['deaths']#.values.reshape(-1,1)\n    \n    X_valid_ = valid[valid['loc']==coords]['date']#.values.reshape(-1,1)\n    y_valid_ = valid[valid['loc']==coords]['deaths']#.values.reshape(-1,1)\n    \n    last_diff = y_train_.iloc[-1] - y_train_.iloc[-2]\n    y_linear = y_train_.iloc[-1] + last_diff*np.arange(1,len(X_valid_)+1,1)\n    \n    z = np.polyfit(X_train_.values, y_train_.values, 3)\n    pf = np.poly1d(z)\n    \n    y_preds_ = np.round(X_valid_.apply(pf)).clip(lower=y_linear)\n    predictions[coords] = y_preds_\n    RMSE[coords]=np.sqrt(np.sum(np.square(y_preds_-y_valid_)))\n    total_RMSE += np.sqrt(np.sum(np.square(y_preds_-y_valid_)))\n\n    \nprint(total_RMSE)","a8043904":"train = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/train.csv', parse_dates=['Date'])\ntest  = pd.read_csv('..\/input\/covid19-global-forecasting-week-3\/test.csv',  parse_dates=['Date'])\n\ntrain.rename(columns={\n        'Id': 'id',\n        'Date': 'date',\n        'Province_State':'state',\n        'Country_Region':'country',\n        'ConfirmedCases': 'confirmed',\n        'Fatalities':'deaths',\n        }, inplace=True)\n\ntest.rename(columns={\n        'ForecastId': 'id',\n        'Date': 'date',\n        'Province_State':'state',\n        'Country_Region':'country',\n        }, inplace=True)\n\ntrain = train[train['date'] > pd.Timestamp('2020-03-01')]\n\ntrain['date'] = (train['date'] - pd.Timestamp('2020-03-01')).dt.days\ntest['date']  = (test['date'] - pd.Timestamp('2020-03-01')).dt.days\n\ntrain['loc'] = train['country'].astype(str) + '-' + train['state'].astype(str)\ntest['loc'] = test['country'].astype(str) + '-' + test['state'].astype(str)","c33bea9c":"submission = pd.DataFrame()\nsubmission['loc'] = test['loc']\nsubmission.reset_index(inplace=True)\n\nsubmission['ConfirmedCases'] = 0\nsubmission['Fatalities'] = 0","f9906ceb":"all_coords = train['loc'].unique().tolist()\npredictions = dict()\nRMSE = dict()\ntotal_RMSE = 0\n\nfor coords in all_coords:\n    \n    X_train_ = train[train['loc']==coords]['date']#.values.reshape(-1,1)\n    y_train_ = train[train['loc']==coords]['confirmed']#.values.reshape(-1,1)\n    \n    X_test_ = test[test['loc']==coords]['date']#.values.reshape(-1,1)\n    \n    last_diff = y_train_.iloc[-1] - y_train_.iloc[-2]\n    y_linear = y_train_.iloc[-1] + last_diff*np.arange(1,len(X_test_)+1,1)\n    \n    z = np.polyfit(X_train_.values, y_train_.values, 3)\n    pf = np.poly1d(z)\n    \n    y_preds_ = np.round(X_test_.apply(pf)).clip(lower=y_linear)\n        \n    submission.loc[submission['loc']==coords,'ConfirmedCases'] = y_preds_","55c80e9a":"all_coords = train['loc'].unique().tolist()\npredictions = dict()\nRMSE = dict()\ntotal_RMSE = 0\n\nfor coords in all_coords:\n    \n    X_train_ = train[train['loc']==coords]['date']#.values.reshape(-1,1)\n    y_train_ = train[train['loc']==coords]['deaths']#.values.reshape(-1,1)\n    \n    X_test_ = test[test['loc']==coords]['date']#.values.reshape(-1,1)\n    \n    last_diff = y_train_.iloc[-1] - y_train_.iloc[-2]\n    y_linear = y_train_.iloc[-1] + last_diff*np.arange(1,len(X_test_)+1,1)\n    \n    z = np.polyfit(X_train_.values, y_train_.values, 3)\n    pf = np.poly1d(z)\n    \n    y_preds_ = np.round(X_test_.apply(pf)).clip(lower=y_linear)\n    \n    submission.loc[submission['loc']==coords,'Fatalities'] = y_preds_","738cc559":"submission.drop('loc', axis=1, inplace=True)\nsubmission['index'] = submission['index'] + 1\nsubmission.rename(columns={\n    'index' : 'ForecastId'}, inplace=True)","853d3ddf":"submission","8f3bfe81":"submission.to_csv('submission.csv', index=False)","31814dbf":"### Deaths","8a00882b":"### Confirmed cases","050e1546":"### Fatalities","07bc556a":"### Confirmed cases","ce3dd9b0":"## Toy model ","05fe7c25":"## Full model","c04a8baa":"##  Data preprocessing"}}