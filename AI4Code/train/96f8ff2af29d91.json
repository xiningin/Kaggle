{"cell_type":{"a1377d63":"code","bc6b8219":"code","771df2e9":"code","76e1cc0a":"code","9a52f4a4":"code","9b28acb8":"code","439aa049":"code","254b5f6f":"code","d57aa551":"code","52fc8475":"code","8d2b6ac9":"code","a4a606d9":"code","209f3fc2":"code","46bc50df":"code","62868ab4":"markdown","c6468365":"markdown","891aa792":"markdown","6881b526":"markdown","66cdbd4e":"markdown"},"source":{"a1377d63":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow import keras","bc6b8219":"train_gen = keras.preprocessing.image.ImageDataGenerator(rescale = 1.0 \/ 255.0,\n                                                        zoom_range = 0.2)\n                                                        #horizontal_flip = True,\n                                                        #vertical_flip = True)\nprint('-------------------------------------------------------------------------')\ntest_gen = keras.preprocessing.image.ImageDataGenerator(rescale = 1.0 \/ 255.0)\n                                                        ","771df2e9":"train = train_gen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/train', \n                                     class_mode = 'binary',\n                                     batch_size = 100,\n                                     color_mode = 'grayscale', \n                                     target_size = (400, 400))","76e1cc0a":"test = train_gen.flow_from_directory('..\/input\/chest-xray-pneumonia\/chest_xray\/test', \n                                     class_mode = 'binary',\n                                     target_size = (400, 400),\n                                     color_mode = 'grayscale')","9a52f4a4":"np.unique(train.classes, return_counts=True)","9b28acb8":"from sklearn.utils.class_weight import compute_class_weight\nweight = compute_class_weight('balanced', np.unique(train.classes), train.classes)","439aa049":"class_weigth_xray = dict(zip(np.unique(train.classes), weight))","254b5f6f":"model = keras.models.Sequential()\n\nmodel.add(keras.layers.Conv2D(16, 3 , padding = 'same' ,input_shape = (400, 400, 1)))\nmodel.add(keras.layers.Conv2D(16, 3, padding = 'same'))\nmodel.add(keras.layers.MaxPooling2D(2))\n\nmodel.add(keras.layers.Conv2D(32, 3, padding = 'same'))\nmodel.add(keras.layers.Conv2D(32, 3, padding = 'same'))\nmodel.add(keras.layers.MaxPooling2D(2))\n\nmodel.add(keras.layers.Flatten())\n\nmodel.add(keras.layers.Dense(100, activation = 'elu'))\n\nmodel.add(keras.layers.Dense(50, activation = 'elu'))\n\nmodel.add(keras.layers.Dense(1, activation = 'sigmoid'))","d57aa551":"model.summary()","52fc8475":"from keras.utils import plot_model\nplot_model(model)","8d2b6ac9":"model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = 'accuracy')","a4a606d9":"from keras.callbacks import EarlyStopping\nearly = EarlyStopping(monitor = 'val_loss', mode = 'min', patience = 7)","209f3fc2":"result = model.fit_generator(train, steps_per_epoch = len(train), validation_data = test,\n                             validation_steps = len(test), epochs = 15, class_weight = class_weigth_xray)\n                             ","46bc50df":"pd.DataFrame(result.history).plot()","62868ab4":"## See There is Imbalance Data We Have It We Must Balance It The Weight","c6468365":"## We have maxpool and mean pool \n### max pool maximum number like gif above\n### mean pool sum mean all pixle ","891aa792":"## if you see the blue pixle is our corner and the near pixle is padding to calculate filter \n## Now What Is The Number Of Number In Filter That's my Weight and in each epoch update weight ","6881b526":"## Explanation CNN:","66cdbd4e":"## This is Image and Convolved feature is our filter in this case are 3 * 3 and filter run on image and caculate \n## pixle with filter and make new matris if you attention the picture most pixle in center of image is more effective\n## than corner pixle in this case we use paddind = 'same' to envolved corner pixle"}}