{"cell_type":{"60ab1345":"code","1c71e2b1":"code","b4924b51":"code","b3524f97":"code","a36f5a2c":"code","27dca050":"code","bbf19fd9":"code","b48bc341":"code","9a1b62c8":"code","debb186a":"code","b9d77ac9":"code","6b20d4d3":"code","c26fd2e3":"code","ee674b56":"code","f252704c":"code","ed91b855":"code","6623b76b":"code","4a2f1ff3":"code","dab3a381":"code","2d6a3037":"code","0b5172c5":"code","ce7e17eb":"code","0fc623fc":"code","9188f3ac":"code","aab0f999":"code","5fd423e7":"code","1319bd67":"code","6edb4016":"code","a59fac2e":"code","6cf4d136":"code","68c916dc":"code","25f14875":"code","1b177156":"code","2ab49112":"code","ecb1c484":"code","f308fa46":"code","1bf46123":"code","9b406186":"code","a638824b":"code","51772b31":"code","c948741c":"code","060a480e":"code","23724982":"code","cafe4336":"code","84de82e4":"code","1d4d37b8":"code","924cdfee":"code","1cfe47e9":"code","a9581f25":"code","cedf465b":"code","a5a1f864":"code","f1265a00":"code","86aa1d89":"code","9325b0b7":"code","3ae10e29":"code","d51d22a6":"code","6d938ac2":"code","a1d8ad09":"code","9f920949":"code","1226d993":"code","316ca790":"code","83df3da9":"code","f876e21e":"markdown","4e4c1f24":"markdown","90226fd2":"markdown","b74e86fd":"markdown","007f30b0":"markdown","d4ea5c05":"markdown","db244083":"markdown","3b9d9086":"markdown","58ed0a14":"markdown","f5d4e259":"markdown","9bd3d087":"markdown","6b9e7d8b":"markdown","795a3ca0":"markdown","7b20afa0":"markdown","fde17c61":"markdown","2a7d1c81":"markdown","b4fe6b67":"markdown"},"source":{"60ab1345":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","1c71e2b1":"dataset = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","b4924b51":"dataset.head(5)","b3524f97":"dataframe = pd.DataFrame(dataset)","a36f5a2c":"def missing_percentage(df):     \n    missing_total = df.isnull().sum().sort_values(ascending = False)[df.isnull().sum().sort_values(ascending = False) != 0]\n    percent = round(df.isnull().sum().sort_values(ascending = False)\/len(df)*100,2)[round(df.isnull().sum().sort_values(ascending = False)\/len(df)*100,2) != 0]\n    return pd.concat([missing_total, percent], axis=1, keys=['Missing_Total','Percent'])\n\n\nmissing_percentage(dataframe)","27dca050":"dataframe.drop(['Cabin'], axis = 1, inplace = True)\ndataframe.head(5)","bbf19fd9":"#Fill the missing values in Age\ndataframe['Initial']=0\nfor i in dataframe:\n    dataframe['Initial']=dataframe.Name.str.extract('([A-Za-z]+)\\.')\n\ndataframe['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess',\n                         'Jonkheer','Col','Rev','Capt','Sir','Don'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other',\n                         'Other','Other','Mr','Mr','Mr'],inplace=True)\n\ndataframe.groupby('Initial')['Age'].mean()","b48bc341":"#Fill with Values\ndataframe.loc[(dataframe.Age.isnull())&(dataframe.Initial=='Mr'),'Age']=33\ndataframe.loc[(dataframe.Age.isnull())&(dataframe.Initial=='Mrs'),'Age']=36\ndataframe.loc[(dataframe.Age.isnull())&(dataframe.Initial=='Master'),'Age']=5\ndataframe.loc[(dataframe.Age.isnull())&(dataframe.Initial=='Miss'),'Age']=22\ndataframe.loc[(dataframe.Age.isnull())&(dataframe.Initial=='Other'),'Age']=46","9a1b62c8":"#Delete observation without Embark\n#dataframe.drop(dataframe[pd.isnull(dataframe['Embarked'])].index, inplace = True)\ndataframe['Embarked'] = dataframe['Embarked'].fillna('S')","debb186a":"#Checking the null value\nmissing_percentage(dataframe)","b9d77ac9":"#just Keep the original copy for furture use\ndataframe_cy = dataframe.copy()\ndataframe.drop(['Name'], axis = 1, inplace = True)\ndataframe.drop(['Ticket'], axis = 1, inplace = True)\ndataframe.drop(['Initial'], axis = 1, inplace = True)\ndataframe.drop(['PassengerId'], axis = 1, inplace = True)","6b20d4d3":"dataframe.head(5)","c26fd2e3":"dataframe = pd.get_dummies(dataframe, drop_first=True)","ee674b56":"from sklearn.preprocessing import StandardScaler\nscalar = StandardScaler()","f252704c":"dataframe['Age'] = scalar.fit_transform(dataframe[['Age']])\ndataframe['Fare'] = scalar.fit_transform(dataframe[['Fare']])\ndataframe['Pclass'] = scalar.fit_transform(dataframe[['Pclass']])","ed91b855":"dataframe.head(5)","6623b76b":"y = dataframe[['Survived']]\nx = dataframe.drop(['Survived'], axis = 1)","4a2f1ff3":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = \\\ntrain_test_split(x, y, test_size = 0.3, random_state = 1234)","dab3a381":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression()\nlr.fit(X_train, Y_train)","2d6a3037":"Y_predict = lr.predict(X_test)","0b5172c5":"from sklearn.metrics import confusion_matrix\n\ncm = confusion_matrix(Y_test, Y_predict)\ncm","ce7e17eb":"lr.score(X_test, Y_test)","0fc623fc":"from sklearn.svm import SVC\nsvc = SVC()\n\nsvc.fit(X_train, Y_train)\nY_predict_svc = svc.predict(X_test)\n\n#Lets Check Confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(Y_test, Y_predict_svc)\ncm","9188f3ac":"svc.score(X_test, Y_test)","aab0f999":"svc_rbf = SVC(kernel='rbf', gamma = 1)\nsvc_rbf.fit(X_train, Y_train)\nY_predict_svc1 = svc_rbf.predict(X_test)\n\ncm_rbf = confusion_matrix(Y_test, Y_predict_svc1)\ncm_rbf","5fd423e7":"print('Accuracy_RBF ', svc_rbf.score(X_test, Y_test))","1319bd67":"svc_lin = SVC(kernel='linear')\nsvc_lin.fit(X_train, Y_train)\nY_predict_svc2 = svc_lin.predict(X_test)\n\ncm_lin = confusion_matrix(Y_test, Y_predict_svc2)\ncm_lin","6edb4016":"print('Accuracy_Lin ', svc_lin.score(X_test, Y_test))","a59fac2e":"svc_poly = SVC(kernel='poly')\nsvc_poly.fit(X_train, Y_train)\nY_predict_svc3 = svc_poly.predict(X_test)\n\ncm_poly = confusion_matrix(Y_test, Y_predict_svc3)\ncm_poly","6cf4d136":"print('Accuracy_POLY ', svc_lin.score(X_test, Y_test))","68c916dc":"from sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier(random_state=1234)\ndtc.fit(X_train, Y_train)\n\nY_predict_dtc = dtc.predict(X_test)\n\n#confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm_dtc = confusion_matrix(Y_test, Y_predict_dtc)\ncm_dtc","25f14875":"print('DecisionTree ', dtc.score(X_test, Y_test))","1b177156":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(random_state=1234)\nrfc.fit(X_train, Y_train)\n\nY_predict_rfc = rfc.predict(X_test)\n\n#confusion matrix\ncm_rfc = confusion_matrix(Y_test, Y_predict_rfc)\ncm_rfc","2ab49112":"print('RandomForest ', rfc.score(X_test, Y_test))","ecb1c484":"from sklearn.metrics import classification_report\nprint(classification_report(Y_test, Y_predict_svc))","f308fa46":"dataframe_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","1bf46123":"dataframe_test.head(5)","9b406186":"missing_percentage(dataframe_test)","a638824b":"#Fill the missing values in Age\ndataframe_test['Initial']=0\nfor i in dataframe_test:\n    dataframe_test['Initial']=dataframe_test.Name.str.extract('([A-Za-z]+)\\.')\n\ndataframe_test['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess',\n                         'Jonkheer','Col','Rev','Capt','Sir','Don'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other',\n                         'Other','Other','Mr','Mr','Mr'],inplace=True)\n\ndataframe_test.groupby('Initial')['Age'].mean()","51772b31":"dataframe_test.loc[(dataframe_test.Age.isnull())&(dataframe_test.Initial=='Mr'),'Age']=33\ndataframe_test.loc[(dataframe_test.Age.isnull())&(dataframe_test.Initial=='Mrs'),'Age']=36\ndataframe_test.loc[(dataframe_test.Age.isnull())&(dataframe_test.Initial=='Master'),'Age']=5\ndataframe_test.loc[(dataframe_test.Age.isnull())&(dataframe_test.Initial=='Miss'),'Age']=22\ndataframe_test.loc[(dataframe_test.Age.isnull())&(dataframe_test.Initial=='Other'),'Age']=46","c948741c":"#dataframe_test.drop(dataframe_test[pd.isnull(dataframe_test['Fare'])].index, inplace = True)\ndataframe_test['Fare'].fillna(dataframe_test['Fare'].median(), inplace=True)","060a480e":"missing_percentage(dataframe_test)","23724982":"dataframe_test.drop(['Cabin'], axis = 1, inplace = True)","cafe4336":"missing_percentage(dataframe_test)","84de82e4":"dataframe_test.head(5)","1d4d37b8":"dataframe_test.drop(['Name'], axis = 1, inplace = True)\ndataframe_test.drop(['Ticket'], axis = 1, inplace = True)\ndataframe_test.drop(['Initial'], axis = 1, inplace = True)","924cdfee":"dataframe_test.head(5)","1cfe47e9":"dataframe_test = pd.get_dummies(dataframe_test, drop_first=True)\ndataframe_test.shape","a9581f25":"scalar_test = StandardScaler()\nscalar_test.fit_transform(dataframe_test)","cedf465b":"dataframe_test.head(5)","a5a1f864":"dataframe_cy.drop(['Name'], axis = 1, inplace = True)\ndataframe_cy.drop(['Ticket'], axis = 1, inplace = True)\ndataframe_cy.drop(['Initial'], axis = 1, inplace = True)\n#dataframe_cy.drop(['Survived'], axis = 1, inplace = True)","f1265a00":"dataframe_cy = pd.get_dummies(dataframe_cy, drop_first=True)","86aa1d89":"dataframe_cy.head(5)","9325b0b7":"svm_test_data = SVC()\nsvm_test_data.fit(dataframe_cy.drop(['Survived'], axis = 1), dataframe_cy['Survived'])","3ae10e29":"test_predict = svm_test_data.predict(dataframe_test)","d51d22a6":"test_predict.shape","6d938ac2":"print('SVC_TEST ', svm_test_data.score(dataframe_cy.drop(['Survived'], axis = 1),\n                                 dataframe_cy['Survived']))","a1d8ad09":"test_pred = pd.DataFrame(test_predict, columns = ['Survived'])","9f920949":"test_data_new = pd.concat([dataframe_test, test_pred], axis = 1, join = 'inner')","1226d993":"df_sub = test_data_new[['PassengerId', 'Survived']]","316ca790":"df_sub.head()","83df3da9":"df_sub.to_csv('prediction.csv', index = False)","f876e21e":"Lets Check With Decision Tree","4e4c1f24":"Missing Value","90226fd2":"Now drop the name, ticket, initial columns as it is not needed","b74e86fd":"Now Lets work with Test Dataset","007f30b0":"Lets check with Different type of SVM","d4ea5c05":"SVM POLY","db244083":"Confusion Matrix","3b9d9086":"SVM RBF","58ed0a14":"Predict the Output","f5d4e259":"Lets Use Support Vector Machine","9bd3d087":"Accuracy Logistic","6b9e7d8b":"Create the dummy variables","795a3ca0":"Accuracy SVM","7b20afa0":"Normalize the data","fde17c61":"Lets use Random Forest Classifier","2a7d1c81":"Ok, After using SVM, DecisionTree, RandomForest,Logistic Regression.It is final that SVM (RBF) have good accuracy of 84%.\n\nNow lets check F1 Score, Precision, Recall\/Sensitivity.","b4fe6b67":"SVM Linear"}}