{"cell_type":{"d1d9a1e7":"code","b228e02a":"code","03d24e59":"code","334021e9":"code","8bc7a41a":"code","33f74789":"code","905e867e":"code","8fb5e980":"code","4898f1ff":"code","189b56f0":"code","05e8323f":"code","74b34ece":"code","f5dc6fa1":"code","c3a695ed":"code","44cb56d2":"code","b6b4e84d":"code","d7a26cab":"code","bb2cac64":"code","517370f7":"code","e0b3df15":"code","130bb919":"code","f73fcfa4":"code","056adbcd":"code","6ab30884":"code","5ded86f0":"code","582f2d66":"code","2ed7908f":"code","60ddcd4b":"code","7bb682f9":"code","fb44a302":"code","11f7350d":"code","1b62fbf2":"code","c19f33c5":"code","1612b92d":"code","afff7d1a":"code","55f11846":"code","8abf0b45":"code","da4e24eb":"code","fb815963":"code","059884ea":"code","07372d7e":"code","43a1065c":"code","d842b84c":"code","d202b02f":"code","265d6175":"code","c60c7961":"code","c9e008f5":"code","a3234074":"code","e6deb16b":"code","d1a7c606":"code","431c9bf1":"code","8b1b36a3":"code","73aad65d":"code","eef13605":"code","198a1497":"markdown","799bbc6f":"markdown","67baa8f9":"markdown","c037d01d":"markdown","990d7f12":"markdown","6f20de5d":"markdown","708ebc9f":"markdown","14f21eeb":"markdown","08f1b745":"markdown","200614e1":"markdown","da21ed31":"markdown","da6c79c0":"markdown","201d368a":"markdown","2af7d6a5":"markdown","ea3ae57d":"markdown","1ab441ba":"markdown","04a0c8b4":"markdown","1c7ede2d":"markdown","f6e84ca2":"markdown","f7753d2a":"markdown","887b2733":"markdown","69feca24":"markdown","130877d8":"markdown","1f2b7a26":"markdown","ec0807a6":"markdown","8e55d94b":"markdown","18b6e469":"markdown","af06c410":"markdown","6746d6ec":"markdown","9e76477f":"markdown","cd0b7e64":"markdown","9fd0d2bf":"markdown","d455e629":"markdown","8d4cf469":"markdown","474fbb7f":"markdown","88409e82":"markdown","27755f9f":"markdown","3512cff1":"markdown","5e6972ed":"markdown","c0361025":"markdown","e7332796":"markdown","b2be4afa":"markdown","3504577e":"markdown","16e36cc9":"markdown","a402e110":"markdown","b939f798":"markdown","826213bf":"markdown","41b47ab5":"markdown","79528d65":"markdown","f36ce153":"markdown","b36ca4a3":"markdown","4f01c283":"markdown","d8795413":"markdown","0bfe2fdb":"markdown","29781723":"markdown","07cf6eb5":"markdown","433c725a":"markdown","35c88155":"markdown","cc8daed0":"markdown","35dfacfe":"markdown","1c4b8486":"markdown","5bb4fad3":"markdown","0fa501d1":"markdown","3e806a3f":"markdown","6fb13be0":"markdown","138e8add":"markdown","14a1cd9f":"markdown","6cbea064":"markdown","17ef55ed":"markdown","807cad1d":"markdown"},"source":{"d1d9a1e7":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import RepeatedKFold\nfrom sklearn.preprocessing import LabelEncoder","b228e02a":"treinamento = pd.read_csv('..\/input\/titanic\/train.csv')\nteste = pd.read_csv('..\/input\/titanic\/test.csv')\ndados = pd.concat([treinamento, teste])","03d24e59":"dados.head(5) # Permite visualizar as primeiras linhas do DataFrame, de acordo com o argumento.","334021e9":"treinamento['Survived'].value_counts(normalize=True)","8bc7a41a":"plt.figure(figsize=(8, 6))\nsns.countplot(x = treinamento['Survived'], palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('')\nplt.xticks((0, 1), ['Mortos', 'Sobreviventes'])\nplt.show()","33f74789":"print(dados['Pclass'].value_counts())","905e867e":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Pclass', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Classe')\nplt.xticks((0, 1, 2), ['Primeira', 'Segunda', 'Terceira'])\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","8fb5e980":"dados['Titulo'] = dados['Name'].str.extract('([A-Za-z]+)\\.', expand = False)","4898f1ff":"dados['Titulo'].value_counts()","189b56f0":"dados['Titulo']  = dados['Titulo'].replace(['Dr', 'Rev', 'Col', 'Major', 'Sir', 'Ms', 'Lady', \n                                            'Capt', 'Don', 'Jonkheer', 'Countess', 'Mlle','Mme', \n                                            'Dona'], 'Outro')","05e8323f":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Titulo', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('T\u00edtulo')\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","74b34ece":"dados['Titulo'] = LabelEncoder().fit_transform(dados['Titulo'])","f5dc6fa1":"dados['Titulo'].value_counts()","c3a695ed":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Sex', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('')\nplt.xticks((0, 1), ['Homens', 'Mulheres'])\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","44cb56d2":"sex_map = {'female':1, 'male':0}\ndados['Sexo'] = dados['Sex'].map(sex_map).astype(int)","b6b4e84d":"plt.figure(figsize=(8, 6))\nsns.histplot(dados['Age'], binwidth=5, color='navy')\nplt.ylabel('Passageiros')\nplt.xlabel('Idade')\nplt.show()","d7a26cab":"print('Passageiros sem o valor da idade:',dados['Age'].isnull().sum())","bb2cac64":"plt.figure(figsize=(10, 8))\nsns.boxplot(x = dados['Pclass'], y = dados['Age'], hue = dados['Sex'])\nplt.ylabel('Idade',size=12)\nplt.xlabel('Classe',size=12)\nplt.show()","517370f7":"dados.groupby(['Sex', 'Pclass']).median()['Age']","e0b3df15":"dados.loc[(dados['Sex'] == 'male')   & (dados['Pclass'] == 1) & (dados['Age'].isnull()), 'Age'] = 42\ndados.loc[(dados['Sex'] == 'male')   & (dados['Pclass'] == 2) & (dados['Age'].isnull()), 'Age'] = 30\ndados.loc[(dados['Sex'] == 'male')   & (dados['Pclass'] == 3) & (dados['Age'].isnull()), 'Age'] = 25\ndados.loc[(dados['Sex'] == 'female') & (dados['Pclass'] == 1) & (dados['Age'].isnull()), 'Age'] = 36\ndados.loc[(dados['Sex'] == 'female') & (dados['Pclass'] == 2) & (dados['Age'].isnull()), 'Age'] = 28\ndados.loc[(dados['Sex'] == 'female') & (dados['Pclass'] == 3) & (dados['Age'].isnull()), 'Age'] = 22","130bb919":"dados['Idade'] = pd.qcut(dados['Age'], 10, duplicates='drop')","f73fcfa4":"plt.figure(figsize=(12, 8))\nsns.countplot(x='Idade', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Faixa de Idade')\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","056adbcd":"dados['Idade'] = LabelEncoder().fit_transform(dados['Idade'])","6ab30884":"dados['Familiares'] = dados['SibSp'] + dados['Parch']\ndados['Familiares'].value_counts()","5ded86f0":"familia_map = {0:0, \n               1:1, 2:1, 3:1, \n               4:2, 5:2, \n               6:3, 7:3, 10:3}\ndados['Familiares'] = dados['Familiares'].map(familia_map)","582f2d66":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Familiares', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Familiares a bordo')\nplt.xticks((0, 1, 2, 3), ['0', '1-3', '4-5', '6+'])\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","2ed7908f":"dados['Frequencia_Ticket'] = dados.groupby('Ticket')['Ticket'].transform('count')","60ddcd4b":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Frequencia_Ticket', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Apari\u00e7\u00f5es do ticket')\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","7bb682f9":"dados.loc[dados['Fare'].isnull()]","fb44a302":"dados.groupby(['Pclass', 'Sex']).Fare.median()[3][0]","11f7350d":"dados['Fare'] = dados['Fare'].fillna(10.4896)","1b62fbf2":"dados['Taxa'] = pd.qcut(dados['Fare'], 10)","c19f33c5":"plt.figure(figsize=(16, 8))\nsns.countplot(x='Taxa', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Faixa de pre\u00e7o')\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","1612b92d":"dados['Taxa'] = LabelEncoder().fit_transform(dados['Taxa'])","afff7d1a":"print('Passageiros sem cabine:', dados['Cabin'].isnull().sum())\ndados['Cabin'] = dados['Cabin'].fillna('N')","55f11846":"dados['Cabine'] = dados['Cabin'].str.slice(start = 0, stop = 1)","8abf0b45":"dados['Cabine'].value_counts()","da4e24eb":"dados['Cabine'] = dados['Cabine'].replace(['A', 'B', 'C', 'T'], '0')\ndados['Cabine'] = dados['Cabine'].replace(['D', 'E'], '1')\ndados['Cabine'] = dados['Cabine'].replace(['F', 'G'], '2')\ndados['Cabine'] = dados['Cabine'].replace(['N'], '3')","fb815963":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Cabine', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('N\u00edvel da Cabine')\nplt.xticks((0, 1, 2, 3), ['N', 'A, B, C e T', 'D e E', 'F e G'])\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","059884ea":"dados.loc[dados['Embarked'].isnull()]","07372d7e":"dados['Embarked'] = dados['Embarked'].fillna('S')","43a1065c":"porto_map = {'C':0, 'Q':1, 'S':2}\ndados['Porto'] = dados['Embarked'].map(porto_map).astype(int)   ","d842b84c":"plt.figure(figsize=(8, 6))\nsns.countplot(x='Porto', data = dados, hue='Survived', palette=['darkred', 'navy'])\nplt.ylabel('Passageiros')\nplt.xlabel('Porto de Embarque')\nplt.xticks((0, 1, 2), ['Cherbourg', 'Queenstown', 'Southampton'])\nplt.legend(['Mortos', 'Sobreviventes'])\nplt.show()","d202b02f":"features = pd.concat([pd.get_dummies(dados['Pclass'], prefix='Class', drop_first=True),\n                      pd.get_dummies(dados['Titulo'], prefix='Titulo', drop_first=True),\n                      pd.get_dummies(dados['Sexo'], prefix='Sexo', drop_first=True),\n                      pd.get_dummies(dados['Idade'], prefix='Idade', drop_first=True),\n                      pd.get_dummies(dados['Familiares'], prefix='Familiares', drop_first=True),\n                      pd.get_dummies(dados['Frequencia_Ticket'], prefix='Ticket', drop_first=True),\n                      pd.get_dummies(dados['Taxa'], prefix='Taxa', drop_first=True),\n                      pd.get_dummies(dados['Cabine'], prefix='Cabine', drop_first=True),\n                      pd.get_dummies(dados['Porto'], prefix='Porto', drop_first=True),\n                     ], axis = 1)","265d6175":"modelo = LogisticRegression()","c60c7961":"X = features[0:891]\nX.head()","c9e008f5":"X_test = features[891:1309]\nX_test.head()","a3234074":"y = treinamento['Survived']\ny.head()","e6deb16b":"accuracy_list = []\n\nkf = RepeatedKFold(n_splits = 5, n_repeats = 10)\n\nfor train_lines, valid_lines in kf.split(X):\n    X_train, X_valid = X.iloc[train_lines], X.iloc[valid_lines]\n    y_train, y_valid = y.iloc[train_lines], y.iloc[valid_lines]\n    \n    modelo.fit(X_train, y_train)\n    \n    p_valid = modelo.predict(X_valid)\n    \n    accuracy_list.append(np.mean(y_valid == p_valid))","d1a7c606":"plt.figure(figsize=(8, 6))\nplt.hist(accuracy_list)\nplt.xlabel('Acur\u00e1cia')\nplt.ylabel('Repeti\u00e7\u00f5es')\nplt.show()","431c9bf1":"print(f'Acur\u00e1cia m\u00e9dia do treinamento: {np.mean(accuracy_list):.4f}')\nprint(f'Desvio padr\u00e3o da acur\u00e1cia treinamento: {np.std(accuracy_list):.4f}')","8b1b36a3":"p = modelo.predict(X_test)\nprint(p)","73aad65d":"submission = pd.Series(p, index=teste['PassengerId'], name='Survived')\nsubmission.head()","eef13605":"submission.to_csv(\"submission.csv\", header=True)","198a1497":"Com todas as vari\u00e1veis exploradas e categorizadas, resta apenas uma etapa de transforma\u00e7\u00e3o dos dados para que sejam usados no modelo. A representa\u00e7\u00e3o por n\u00fameros inteiros pode causar confus\u00e3o no aprendizado do modelo, pois indica uma rela\u00e7\u00e3o de ordem.\n\nSer\u00e1 usado o _One-Hot Encoding_ (mais especificamente o _Dummy Variable Encoding_, que usa uma coluna a menos), que consiste em transformar dados categ\u00f3ricos em uma representa\u00e7\u00e3o com um vetor bin\u00e1rio.\n\nO _One-Hot Encoding_ cria uma coluna para cada valor poss\u00edvel dentro de uma categoria e atribui o valor **1** \u00e0 coluna apropriada. Como exemplo, utilizando a j\u00e1 analisada _feature Embarked_:\n\n| Local de Embarque | Porto_0 | Porto_1 | Porto_2\n| ---|---|---|---\n| Cherbourg | 1 | 0 | 0\n| Queenstown | 0 | 1 | 0\n| Southampton | 0 | 0 | 1\n\nPor\u00e9m, uma dessas colunas \u00e9 redundante. Observe que mesmo sem a primera coluna, cada valor poss\u00edvel possui uma representa\u00e7\u00e3o \u00fanica:\n\n| Local de Embarque | Porto_1 | Porto_2\n| ---|---|---\n| Cherbourg | 0 | 0 \n| Queenstown | 1 | 0 \n| Southampton | 0 | 1 \n\nEsta representa\u00e7\u00e3o, sem a coluna redundante \u00e9 chamada _Dummy Variable Encoding_.\n\nA biblioteca _pandas_ possui a fun\u00e7\u00e3o <code>get_dummies()<\/code> que faz essa transforma\u00e7\u00e3o. Deve-se acrescentar o argumento <code>drop_first = True<\/code> para que uma coluna seja descartada.","799bbc6f":"### 4.3 Inputs \/ Outputs","67baa8f9":"### 3.4 Age","c037d01d":"A quantidade de familiares ser\u00e1 dividida em 4 grupos:\n\n| Grupo  | Quantidade de Familiares  |\n|---|---|\n| 0  | 0 |\n| 1  | 1 a 3 |\n| 2 | 4 ou 5 |\n| 3  | 6 ou mais |","990d7f12":"A feature _cabin_ cont\u00e9m uma letra, que indica o n\u00edvel em que a cabine est\u00e1 (conforme diagrama abaixo), e um n\u00famero que difere as cabine de um mesmo n\u00edvel.","6f20de5d":"### 3.9 Embarked","708ebc9f":"Observa-se diferentes taxas de sobreviv\u00eancia para cada grupo:","14f21eeb":"# Titanic - Machine Learning from Disaster","08f1b745":"### 3.2 Name","200614e1":"A primeira informa\u00e7\u00e3o que pode ser obtida \u00e9 a quantidade de sobreviventes conjunto de treinamento.\n\nO m\u00e9todo <code>value_counts()<\/code> retorna a contagem dos valores \u00fanicos presentes na coluna _Survived_ e o argumento <code>normalize<\/code> tr\u00e1s o resultado em percentual.","da21ed31":"O _array \"p\"_ em uma _series_ do _pandas_ com o cabe\u00e7alho de acordo com a submiss\u00e3o do Kaggle.","da6c79c0":"Combinando as vari\u00e1veis *SibSp* e *Parch*, obt\u00e9m-se a quantidade de familiares do passageiro a bordo do navio:","201d368a":"### 3.8 Cabin","2af7d6a5":"O gr\u00e1fico mostra como foi a sobreviv\u00eancia dos passageiros de acordo com a classe em que estavam:","ea3ae57d":"## 5. Previs\u00e3o para os dados de teste","1ab441ba":"Observa-se diferentes taxas de sobreviv\u00eancia para cada grupo:","04a0c8b4":"Observa-se diferentes taxas de sobreviv\u00eancia para cada grupo:","1c7ede2d":"Com a ajuda de um _boxplot_, pode-se observar a distribui\u00e7\u00e3o das idades de acordo com a classe dos passageiros e o sexo:\n\n_**Obs.: Deixo como sugest\u00e3o este artigo sobre [como interpretar um boxplot](https:\/\/operdata.com.br\/blog\/como-interpretar-um-boxplot\/), que tamb\u00e9m aborda o conceito de percentis.**_","f6e84ca2":"Na _feature_ nome, o t\u00edtulo do passageiro \u00e9 extra\u00eddo usando o m\u00e9todo <code>str.extract()<\/code>.\n\nO t\u00edtulo \u00e9 sempre separado do nome por um ponto, o que facilita a tarefa.","f7753d2a":"Os passageiros estavam divididos em 1\u00aa, 2\u00aa e 3\u00aa classe: ","887b2733":"[Na p\u00e1gina do desafio](https:\/\/www.kaggle.com\/c\/titanic) est\u00e3o dispon\u00edveis dois arquivos: \n* _training.csv_ - Cont\u00e9m conjunto de treinamento\n* _test.csv_ - Cont\u00e9m o conjunto de testes.\n\nA fun\u00e7\u00e3o <code>pd.read_csv()<\/code> permite ler os arquivos e criar _DataFrames_ do _pandas_.\n\nA fun\u00e7\u00e3o <code>pd.concat()<\/code> \u00e9 usada para unir os dois _DataFrames_ criados, facilitando as transforma\u00e7\u00f5es que ser\u00e3o feitas nos dados.","69feca24":"### 4.1 Treinamento e Valida\u00e7\u00e3o Cruzada","130877d8":"O pr\u00f3ximo passo \u00e9 explorar as _features_, decidir quais ser\u00e3o utilizadas no modelo e fazer as transforma\u00e7\u00f5es necess\u00e1rias.","1f2b7a26":"Observa-se diferentes taxas de sobreviv\u00eancia para cada grupo:","ec0807a6":"### 4.2 Regress\u00e3o Log\u00edstica","8e55d94b":"E finalmente, usando a fun\u00e7\u00e3o <code>to_csv()<\/code>, a solu\u00e7\u00e3o \u00e9 escrita em formato _.csv_ para ser enviada:","18b6e469":"Como existem muitos valores diferentes de idade, elas devem ser agrupadas.\n\nPara isso, \u00e9 usada fun\u00e7\u00e3o <code>pd.qcut()<\/code> discretiza a vari\u00e1vel em grupos de tamanhos iguais baseados no percentil. \n\nNeste caso, divididos em 10 grupos:","af06c410":"O naufr\u00e1gio do *RMS Titanic*, em 1912, foi uma das maiores trag\u00e9dias da hist\u00f3ria da navega\u00e7\u00e3o civil e suas causas foram amplamentes discutidas em livros, artigos e inqu\u00e9ritos. [As teorias sobre a causa da colis\u00e3o com o iceberg variam entre a proximidade da Terra com a Lua e o Sol, que resultou em mar\u00e9s maiores at\u00e9 a possibilidade de que uma miragem afetou a no\u00e7\u00e3o de dist\u00e2ncia.](https:\/\/www.nytimes.com\/2012\/04\/10\/science\/a-new-look-at-natures-role-in-the-titanics-sinking.html)\n\n![image.png](attachment:image.png)\nFig. 1: RMS Titanic - retirado de <a href=\"https:\/\/commons.wikimedia.org\/wiki\/File:RMS_Titanic_3.jpg\">Wikimedia Commons<\/a>, Dom\u00ednio P\u00fablico.\n\nNeste *notebook*, um *dataset* com informa\u00e7\u00f5es sobre passageiros do *RMS Titanic* ser\u00e1 usado para construir um modelo que ir\u00e1 prever quais passageiros sobreviveram ao naufr\u00e1gio. Este \u00e9 o [desafio inicial do Kaggle](https:\/\/www.kaggle.com\/c\/titanic), uma comunidade para projetos e competi\u00e7\u00f5es de _Data Science_.\n\nEste desafio me ajudou a aprender v\u00e1rios conceitos da ci\u00eancia de dados e, por isso, decidi criar este *notebook* com as etapas devidamente explicadas. Sempre que poss\u00edvel procurei explicar conceitos importantes ou deixar refer\u00eancias sobre o assunto.","6746d6ec":"Para utilizar esta vari\u00e1vel no modelo, ela ser\u00e1 convertida para uma representa\u00e7\u00e3o bin\u00e1ria:\n\n| Valor  | Bin\u00e1rio  |\n|---|---|\n| male  | 0 |\n| female  | 1 |\n\nPara isso \u00e9 usado o m\u00e9todo <code>map()<\/code> que faz a transforma\u00e7\u00e3o da vari\u00e1vel.\n\n\u00c9 preciso passar como argumento um dicion\u00e1rio no qual a atual representa\u00e7\u00e3o \u00e9 a chave e a representa\u00e7\u00e3o desejada \u00e9 o valor.","9e76477f":"As idades dos passageiros est\u00e3o distribuidas conforme o histograma:","cd0b7e64":"O m\u00e9todo <code>loc[]<\/code> localiza no DataFrame um grupo de colunas ou linhas de acordo com os argumentos passados.\n\nNeste caso, \u00e9 feita uma busca por valores nulos de acordo com o sexo e a classe do passageiro, para preench\u00ea-los com os valores de mediana.","9fd0d2bf":"A taxa de sobreviv\u00eancia \u00e9 diferente para cada classe, portanto essa _feature_ ser\u00e1 inclu\u00edda no modelo.","d455e629":"![image.png](attachment:image.png)\nFig. 2: Titanic Cutaway Diagram - retirado de <a href=\"https:\/\/commons.wikimedia.org\/wiki\/File:Titanic_cutaway_diagram.png\">Wikimedia Commons<\/a>, Dom\u00ednio P\u00fablico.","8d4cf469":"## 3. Explorando e preparando os dados","474fbb7f":"Os passageiros do navio embarcaram de 3 portos diferentes: Cherbourg, Queenstown e Southampton. \n\n\nPor\u00e9m, duas passageiras n\u00e3o possuem a informa\u00e7\u00e3o do porto de embarque:","88409e82":"Ao separar os sobreviventes e mortos pelo sexo, observa-se que a taxa de sobreviv\u00eancia das mulheres \u00e9 maior que a dos homens.","27755f9f":"A _feature_ Ticket cont\u00e9m um c\u00f3digo alfanum\u00e9rico que identifica cada passagem.\n\nDevido \u00e0 dificuldade de extrair algum padr\u00e3o desse c\u00f3digo, ser\u00e1 verificado apenas a frequ\u00eancia com que ele aparece. Para isso, agrupa-se os valores com o m\u00e9todo <code>groupby()<\/code> e com o m\u00e9todo <code>transform()<\/code> obt\u00e9m-se a contagem de apari\u00e7\u00f5es.","3512cff1":"As vari\u00e1veis alfab\u00e9ticas do porto ser\u00e3o transformadas em num\u00e9ricas:\n\n| Porto | Alfab\u00e9tica | Num\u00e9rica\n|---|---|---|\n| Cherbourg  | C | 0\n| Queenstown  | Q | 1\n| Southampton  | S | 2","5e6972ed":"Para preencher os valores nulos ser\u00e1 usada a mediana da idade dos passageiros agrupados por sexo e pela classe.\n\nA mediana foi escolhida por ser menos influenciada pelos _outliers_ do que a m\u00e9dia.","c0361025":"A representa\u00e7\u00e3o num\u00e9rica \u00e9 obtida com a fun\u00e7\u00e3o <code>LabelEncoder()<\/code>:","e7332796":"### 3.3 Sex","b2be4afa":"## 4. Modelo - Cria\u00e7\u00e3o, Treinamento e Valida\u00e7\u00e3o","3504577e":"A taxa de sobreviv\u00eancia \u00e9 diferente para cada t\u00edtulo, portanto essa _feature_ ser\u00e1 inclu\u00edda no modelo.\n\nPor\u00e9m, \u00e9 necess\u00e1ria uma representa\u00e7\u00e3o num\u00e9rica para os cinco t\u00edtulos. Isso \u00e9 feito com a fun\u00e7\u00e3o <code>LabelEncoder()<\/code>:","16e36cc9":"Uma grande quantidade de passageiros n\u00e3o possui informa\u00e7\u00e3o sobre cabine, eles receber\u00e3o a letra _\"N\"_.","a402e110":"### 3.5 SibSp \/ Parch","b939f798":"[Pandas](https:\/\/pandas.pydata.org\/)\n\n[NumPy](https:\/\/numpy.org\/)\n\n[Seaborn](https:\/\/seaborn.pydata.org\/)\n\n[Matplotlib](https:\/\/matplotlib.org\/)\n\n[Scikit-learn](https:\/\/scikit-learn.org\/)","826213bf":"Com o m\u00e9todo <code>replace()<\/code>, os t\u00edtulos menos comuns s\u00e3o substitu\u00eddos por uma categoria chamada \"Outro\".","41b47ab5":"### 4.1 Dummy Variable Encoding","79528d65":"Para o conjunto de treinamento, j\u00e1 temos o _output_ que \u00e9 a sobreviv\u00eancia ou n\u00e3o do passageiro:","f36ce153":"## 1. Introdu\u00e7\u00e3o","b36ca4a3":"No in\u00edcio, os _DataFrames train_ e _test_ foram concatenados para facilitar as transforma\u00e7\u00f5es nos dados.\n\nAgora, ser\u00e3o separados em treinamento e teste novamente, estes s\u00e3o os _inputs_ do modelo.","4f01c283":"Existe um \u00fanico passageiro que n\u00e3o possui o valor pago na passagem, se trata de um homem que estava na terceira classe:","d8795413":"A letra que define o n\u00edvel da cabine ser\u00e1 extra\u00edda e usada para o agrupamento:","0bfe2fdb":"O modelo utilizado neste problema \u00e9 a regress\u00e3o log\u00edstica.\n\nPara evitar uma explica\u00e7\u00e3o em texto, que poderia se alongar muito, deixo como sugest\u00e3o [este v\u00eddeo do canal EstaTiDados](https:\/\/www.youtube.com\/watch?v=dcsZsA_wipE), que explica muito bem o conceito.","29781723":"Novamente, a representa\u00e7\u00e3o num\u00e9rica \u00e9 obtida com a fun\u00e7\u00e3o <code>LabelEncoder()<\/code>:","07cf6eb5":"## 2. Bibliotecas","433c725a":"**Aproximadamente 62% dos passageiros contidos no conjunto de treinamento n\u00e3o sobreviveram ao desastre.**","35c88155":"O m\u00e9todo <code>isnull()<\/code> \u00e9 usado para verificar se existem valores nulos:","cc8daed0":"Assim como na _feature age_, _fare_ ser\u00e1 agrupada em grupos de tamanhos iguais baseados no percentil. Neste caso, tamb\u00e9m ser\u00e1 dividido em 10 grupos.","35dfacfe":"O conjunto de treinamento \u00e9 composto por dados de 891 passageiros, enquanto o de testes cont\u00e9m dados de 418. A diferen\u00e7a entre os conjuntos \u00e9 que o conjunto de testes n\u00e3o informa se o passageiro sobreviveu ou n\u00e3o, afinal, o objetivo \u00e9 descobrir essa informa\u00e7\u00e3o (**_target_**).\n\nS\u00e3o dadas 10 caracter\u00edsticas (**_features_**) que poder\u00e3o ser utilizadas no modelo, descritas na tabela a seguir:\n\n| Vari\u00e1vel  | Descri\u00e7\u00e3o  |\n|---|---|\n| Pclass  | Classe da hospedagem no navio |\n| Name  | Nome do passageiro |\n| Sex | Sexo do passageiro |\n| Age  | Idade do passageiro |\n| SibSp  | N\u00famero de irm\u00e3os e c\u00f4njuges a bordo do navio |\n| Parch  | N\u00famero de pais e filhos a bordo do navio |\n| Ticket  | Identifica\u00e7\u00e3o da passagem |\n| Fare  | Valor pago na passagem |\n| Cabin | Identifica\u00e7\u00e3o da cabine do passageiro |\n| Embarked  | Porto no qual o passageiro embarcou |","1c4b8486":"Observa-se diferentes taxas de sobreviv\u00eancia para cada grupo:","5bb4fad3":"### 3.7 Fare","0fa501d1":"Ser\u00e1 utilizado para preencher o valor nulo, a mediana do _fare_ para passageiros homens da terceira classe:","3e806a3f":"O agrupamento ser\u00e1 feito conforme mostrado na tabela abaixo:\n\n| N\u00edvel  | Valor  |\n|---|---|\n| A, B, C, T  | 0 |\n| D e E  | 1 |\n| F e G | 2 |\n| N  | 3 |","6fb13be0":"Para evitar o [_overfitting_](https:\/\/towardsdatascience.com\/what-are-overfitting-and-underfitting-in-machine-learning-a96b30864690) durante o treinamento, ser\u00e1 utilizada a t\u00e9cnica de valida\u00e7\u00e3o cruzada por meio da fun\u00e7\u00e3o <code>RepeatedKFold()<\/code>.\n\nA valida\u00e7\u00e3o cruzada consiste em:\n- O conjunto de treinamento \u00e9 dividido em **k** partes (chamadas de dobras ou _folds_). \n- O treinamento ocorre **k** vezes. \n- Em cada treinamento uma dobra diferente \u00e9 usada como conjunto de teste, avaliando como foi o aprendizado (porcentagem de acertos), enquanto as demais dobras permanecem como conjunto de treinamento.\n\nA fun\u00e7\u00e3o <code>RepeatedKFold()<\/code> permite que a valida\u00e7\u00e3o cruzada seja repetida v\u00e1rias vezes. A cada repeti\u00e7\u00e3o as dobras s\u00e3o geradas aleatoriamente, dando mais robustez \u00e0 valida\u00e7\u00e3o.\n\nNeste caso, ser\u00e3o usadas 5 _folds_ com 10 repeti\u00e7\u00f5es.","138e8add":"### 3.6 Ticket","14a1cd9f":"Agora que o modelo est\u00e1 treinado, ele ser\u00e1 alimentado com o conjunto de teste (que ainda n\u00e3o conhece) e far\u00e1 as previs\u00f5es sobre a sobreviv\u00eancia dos passageiros:","6cbea064":"A distribui\u00e7\u00e3o da acur\u00e1cia \u00e9 exibida no histograma abaixo:","17ef55ed":"Segundo a [Encyclopedia Titanica](https:\/\/www.encyclopedia-titanica.org\/), a [Senhora Martha Evelyn Stone](https:\/\/www.encyclopedia-titanica.org\/titanic-survivor\/martha-evelyn-stone.html) embarcou no porto de _Southampton_ junto com sua empregada [Senhorita Amelie Icard](https:\/\/www.encyclopedia-titanica.org\/titanic-survivor\/amelia-icard.html).\nPortanto ser\u00e1 atribuido o porto de _Southampton_ a elas:","807cad1d":"### 3.1 Pclass"}}