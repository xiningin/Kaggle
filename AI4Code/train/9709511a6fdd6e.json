{"cell_type":{"518f7488":"code","41afe26c":"code","6e2fe31d":"code","bce27507":"code","1bc76fcc":"code","96a393cc":"code","a71e1fd5":"code","125379d6":"code","9791e75a":"code","59d81cdc":"code","77d9117a":"markdown","9c853d60":"markdown","47babae0":"markdown","e9ee4508":"markdown","6efbf41c":"markdown","693294d3":"markdown","a738a120":"markdown","01a817a3":"markdown","74a3221e":"markdown","6cce2d01":"markdown","d48ee83c":"markdown","8dc099a1":"markdown"},"source":{"518f7488":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","41afe26c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport glob\nimport os\nfrom scipy import stats\nhappiness = pd.read_csv('\/kaggle\/input\/are_you_happy.csv')\nhappiness.columns = happiness.columns.str.replace(' ','_')\nhappiness","6e2fe31d":"happy_ranking = happiness.groupby(happiness.Country)['Happiness_Rank'].mean().sort_values(ascending=True)\nhappy_ranking","bce27507":"happy_score = happiness.groupby(happiness.Country)['Happiness_Score'].mean().sort_values(ascending=False)\nbest_country=pd.DataFrame(happy_score[0:5])\nworst_country=pd.DataFrame(happy_score[::-1][0:5].sort_values(ascending=False))\nkorea_score = happy_score.index=='South Korea'\nkorea_score=pd.DataFrame(happy_score[korea_score])\nbest_worst_country = pd.concat([best_country,korea_score,worst_country])","1bc76fcc":"region_happiness = happiness.groupby(happiness.Region)['Happiness_Score'].mean()[:10].\\\nsort_values(ascending=False)\nhappy_score","96a393cc":"sns.set_style('dark')\nsns.set(font_scale=1.3)\nplt.figure(figsize=(11,8))\nplt.subplot(2,1,1)\nplt.title('Wolrd Happiens_Best5 and Worst5')\nbest_country=happy_score[0:5]\nworst_country=happy_score[::-1][0:5]\nsns.barplot(best_worst_country.index,best_worst_country.Happiness_Score,color='olive',\n           alpha=0.7, palette=['green', 'green','green','green','green','gold','red','red','red','red','red'])\nplt.xticks(rotation='45')\nplt.subplot(2,1,2)\nplt.title('Happines of Regions')\nsns.barplot(region_happiness.index,region_happiness.values)\nplt.xticks(rotation='60')\nplt.subplots_adjust(wspace=0, hspace=1)","a71e1fd5":"from scipy.stats import ttest_1samp\nmu = 5 # \ubcf4\ud1b5 \ud589\ubcf5\ub3c4\uac00 5\uac00 \ub418\uba74 \ub9cc\uc871\uc2a4\ub7fd\ub2e4 \ub77c\uace0 \ud55c\ub2e4.\n\nttest_1samp(happiness.Happiness_Score,mu)","125379d6":"plt.figure(figsize=(9,7))\nplt.style.use(\"seaborn-white\")\nmu = 5\nstd = np.std(happiness.Happiness_Score)# \uac00\uc124\uac80\uc815\uc744 \uc2dc\uac01\ud654 \ud560\ub54c\ub294 \ud45c\uc900\uc815\uaddc\ubd84\ud3ec\ub85c \uadf8\ub9ac\uc790\nrv = stats.norm(mu, std) # \uadf8 \ud3c9\uade0\uacfc \ud45c\uc900\ud3b8\ucc28\ub85c \uc815\uaddc\ubd84\ud3ec \uac1d\uccb4 rv\ub97c \uc0dd\uc131\ud55c\ub2e4\nx = np.linspace(-0, 10, 1000)\nd = rv.pdf(x) # rv\ub77c\ub294 \uc815\uaddc\ubd84\ud3ec\uac1d\uccb4\uc758 pdf \uc989 \ud655\ub960\ubc00\ub3c4\ud568\uc218\ub97c \uad6c\ud55c\ub2e4.\nax = plt.axes()\nax.plot(x, d)\nplt.axvline(mu,label='world mean happy')\nplt.axvline(mu+1.96*std,color='green')\nplt.axvline(5.8,color='red',label='Korea') # \uc6b0\ub9ac\ub098\ub77c\uc758 \ud3c9\uade0 \ud589\ubcf5\ub3c4\ub294 5.8\uc774\ub2e4\nplt.axvline(7.54,color='yellow',label = 'Denmark')\nplt.legend()","9791e75a":"corr = happiness.corr()\ncorr['Happiness_Score']\nplt.figure(figsize=(11,8))\nmask = np.zeros_like(corr, dtype = np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr,mask = mask,vmin=-1, vmax=1,annot = True,\n            cmap ='RdYlBu_r', linewidths=4 )","59d81cdc":"economy = happiness.loc[:,['Country','Economy_(GDP_per_Capita)']]\neconomy = economy.groupby(economy.Country)['Economy_(GDP_per_Capita)'].mean().sort_values(ascending=False)\neconomy = economy.rank(method='min',ascending=False)['South Korea']\nhealth = happiness.loc[:,['Country','Health_(Life_Expectancy)']]\nhealth = health.groupby(health.Country)['Health_(Life_Expectancy)'].mean().sort_values(ascending=False)\nhealth = health.rank(method='min',ascending=False)['South Korea']\nfree = happiness.loc[:,['Country','Freedom']]\nfree= free.groupby(free.Country)['Freedom'].mean().sort_values(ascending=False)\nfree = free.rank(method='min',ascending=False)['South Korea']\nprint(f'170\uac1c\uad6d \uc911 \ub300\ud55c\ubbfc\uad6d\uc758 \\nGDP \uc21c\uc704:{economy.astype(np.int)}\uc704\\n\uae30\ub300\uc218\uba85 \uc21c\uc704:{health.astype(np.int)}\uc704\\n\uc790\uc720\ub3c4 \uc21c\uc704:{free.astype(np.int)}\uc704')","77d9117a":"# \ud589\ubcf5 \uc9c0\uc218\uc5d0 \uc601\ud5a5\uc744 \uc8fc\ub294 \uc694\uc778 \ud30c\uc545","9c853d60":"* \ucd5c\uc0c1\uc704\uc640 \ucd5c\uc544\uc704\uc758 \ud589\ubcf5\uc9c0\uc218\uc758 \ucc28\uc774\uac00 \uc0c1\ub2f9\ud788 \ub9ce\uc774 \ub098\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc5c8\ub2e4.\n* \uc6b0\ub9ac\ub098\ub77c\ub294 \uadf8\ub798\ub3c4 \uad49\uc7a5\ud788 \ub192\uc740 \ud3b8\uc774\ub2e4.\n* \uac00\uc7a5 \ub0ae\uc740 \ud589\ubcf5\ub3c4\ub97c \uac16\ub294 burundi\ub294 \uc0c1\uc704 \uad6d\uac00\uc640 2\ubc30 \uc774\uc0c1\uc758 \ucc28\uc774\ub97c \ubcf4\uc5ec\uc900\ub2e4\n* \uac00\uc7a5 \ud589\ubcf5\ud55c \ub300\ub959\uc740 \ud638\uc8fc \ub274\uc9c8\ub79c\ub4dc \ub300\ub959, \uc6b0\ub9ac\ub098\ub77c\uac00 \uc18d\ud55c \ub3d9\ubd81\uc544\ub294 \uc911\uc704\uad8c, \ucd5c \ud558\uc704 \ub300\ub959\uc740 \uc0ac\ud558\ub77c \uc544\ud504\ub9ac\uce74 \uc9c0\uc5ed\uc774 \uac00\uc7a5 \ub0ae\ub2e4.","47babae0":"# \ub300\ub959\ubcc4 \ucc28\uc774 \ube44\uad50","e9ee4508":"* \ub374\ub9c8\ud06c, \ub178\ub974\uc6e8\uc774, \uc544\uc774\uc2ac\ub780\ub4dc, \uc2a4\uc704\uc2a4, \ud540\ub780\ub4dc \uc21c\uc73c\ub85c 5\ub144\uac04\uc758 \ud3c9\uade0 \ub4f1\uc218\uac00 \uac00\uc7a5 \ub192\uc558\ub2e4.\n* \uac00\uc7a5 \uaf34\ub4f1\uc744 \ub9ce\uc774 \ud55c \uad6d\uac00\ub294 \ube0c\ub8ec\ub514 \uc774\ub2e4.","6efbf41c":"* \ud589\ubcf5\ub3c4\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \uc8fc\ub294 \uac83\uc740 \uacbd\uc81c\uc801 \uc5ec\uc720, \uac74\uac15(\uc218\uba85), \uc790\uc720\ub3c4 \uc21c\uc778 \uac83\uc744 \uc54c \uc218 \uc788\uc5c8\ub2e4.","693294d3":"# \uc6b0\ub9ac\ub098\ub77c\ub294 \uc704\uc758 3\uac00\uc9c0\uac00 \uac01\uac01 \uba87\uc704\uc77c\uae4c?","a738a120":"* gdp \uc21c\uc704\ub294 \uc591\ud638, \uae30\ub300\uc218\uba85\uc740 \uad49\uc7a5\ud788 \ub192\ub2e4. \ub2e4\ub978\ub098\ub77c\ubcf4\ub2e4 \uad6d\uac00 \ubcf5\uc9c0 \uc218\uc900\uc774 \ub192\uc740 \ub355\uc5d0 \ub192\uc740 \uc21c\uc704\ub97c \ucc28\uc9c0\ud55c \uac83 \uac19\ub2e4.\n* \uc790\uc720\ub3c4\ub294 \uac70\uc758 \ucd5c \ud558\uc704 \uc218\uc900\uc774\uc600\ub2e4. \ub098\ub294 \ub098\ub984 \uc6b0\ub9ac\ub098\ub77c\uc758 \uc790\uc720\ub3c4\uac00 \ub192\ub2e4\uace0 \uc0dd\uac01\ud558\ub294\ub370 \ub108\ubb34 \ub0ae\uac8c \ub098\uc640\uc11c \ucda9\uaca9\uc774\uc600\ub2e4.\n* \uc790\uc720\ub3c4\uc758 \uc815\uc758\ub294 \ubb34\uc5c7\uc77c\uae4c. \uc815\uce58\uc801\uc73c\ub85c \ubb38\uc81c\uac00 \uc788\uc73c\uba74 \uc790\uc720\ub86d\uac8c \uc2dc\uc704\ub3c4\ud558\uace0, \ud45c\ud604\uc758 \uc790\uc720, \uc5b8\ub860\uc758 \uc790\uc720, \uc54c\uad8c\ub9ac \ubaa8\ub450 \uc0c1\uc704\ub77c\uace0 \uc0dd\uac01\ud558\ub294\ub370 \uc774\ub807\uac8c \ucd5c \ud558\uc704 \uc218\uc900\uc774 \ub098\uc628 \uc774\uc720\ub294 \ubb34\uc5c7\uc77c\uae4c.\n* \ud589\ubcf5\ub3c4\uac00 \ub192\uc740 \uc720\ub7fd\uc9c0\uc5ed\ucc98\ub7fc \uae38\uac70\ub9ac\uc5d0\uc11c \ub290\uaef4\uc9c0\ub294 \uc5ec\uc720\ub85c\uc6c0\uc774 \uc790\uc720\ub3c4\uc758 \ud070 \ubd80\ubd84\uc744 \ucc28\uc9c0\ud558\ub294 \uac83\uc77c\uae4c?","01a817a3":"* \uc6b0\uce21 p value\ub97c \ubd23\uc744\ub54c, \ubaa8\ub4e0 \uad6d\uac00\uc758 \ud589\ubcf5\ub3c4\ub294 \ud3c9\uade0 \ud589\ubcf5\ub3c4\uc778 5\uc640 \ucc28\uc774\uac00 \uc788\uc74c\uc744 \ud655\uc778 \ud560 \uc218 \uc788\ub2e4.","74a3221e":"# \uc0c1\uc704 5\uac1c\uad6d, \ub300\ud55c\ubbfc\uad6d, \ud558\uc704 5\uac1c\uad6d \ube44\uad50","6cce2d01":"# 2016\ub144~2020\ub144\n* \uae4c\uc9c0\uc758 \uc804 \uc138\uacc4 \ud589\ubcf5 \uc9c0\uc218\ub97c \uae30\ub85d\ud55c \ub370\uc774\ud130\ub77c\uace0 \ud55c\ub2e4\n* \uc6b0\ub9ac\ub098\ub77c\ub294 \uc5bc\ub9c8\ub098 \ud589\ubcf5\ud55c\uc9c0. \ud589\ubcf5\uc9c0\uc218\uac00 \ube44\uc2b7\ud55c \ub098\ub77c\ub4e4\uc740 \uc5b4\ub5a4 \ub098\ub77c\ub4e4\uc778\uc9c0 \uc54c\uc544\ubcf4\ub3c4\ub85d \ud558\uc790","d48ee83c":"* t test\uc758 p value\ub294 0.05\ubcf4\ub2e4 \uc791\uac8c \ub098\uc654\uae30 \ub54c\ubb38\uc5d0 \uc804\uccb4 \ub098\ub77c\uc758 \ud589\ubcf5\ub3c4\ub294 \uc138\uacc4\ud589\ubcf5\uc9c0\uc218\uc640 \ucc28\uc774\uac00 \uc788\ub2e4.\n* \uadf8\ub798\uc11c \uc6b0\ub9ac\ub098\ub77c\uc758 \ud589\ubcf5\ub3c4\uc778 5.8\uc744 \uadf8\ub798\ud504\uc5d0 \ub098\ud0c0\ub0b4 \ubcf4\uc558\ub2e4.\n* \uac00\uc6b4\ub370 \ud30c\ub780\uc904\uc740 \uc138\uacc4\ud3c9\uade0\ud589\ubcf5\uc9c0\uc218 5\uc810\n* \ucd08\ub85d\uc904\uc740 \uadf8 5\uc810\uacfc \uc720\uc758\ud558\uac8c \ucc28\uc774\uac00 \uc788\ub2e4\ub77c\uace0 \ubcfc \uc218 \uc788\ub294 , p\uac12 \uae30\uc900 0.05\ubcf4\ub2e4 \ud070 mu*1.96\uad6c\uac04\n* \ube68\uac04\uc904\uc774 \uc6b0\ub9ac\ub098\ub77c\uc758 \ud3c9\uade0\ud589\ubcf5\uc9c0\uc218 5.8\uc778\ub370, \ucd08\ub85d\uc904\uc744 \ub118\uc9c0 \ubabb\ud588\ub2e4.\n* \uc989, \ubaa8\ub4e0 \ub098\ub77c\uc758 \ud589\ubcf5\uc9c0\uc218\ub294 \ud589\ubcf5\ud560 \uc218 \uc788\ub294 \ud3c9\uade0 \ud589\ubcf5\uc9c0\uc218\uc778 5\uc640\ub294 \ucc28\uc774\uac00 \uc788\ub2e4, \ud558\uc9c0\ub9cc \uc6b0\ub9ac\ub098\ub77c\ub294 \ub17c\ub9ac\uc801\uc73c\ub85c \ud655\uc2e4\ud558\uac8c \ub192\uc740 \ud589\ubcf5\uc9c0\uc218\ub97c \uac16\uc9c0\ub294 \uc54a\ub294\ub2e4\n* \ub178\ub780\uc904\uc740 \ub374\ub9c8\ud06c\uc774\ub2e4. \ub374\ub9c8\uce74\ub294 \ucd08\ub85d\uc904\uc744 \ub118\uc5b4\uac14\ub2e4. \uc989 \ub374\ub9c8\ud06c\ub294 \ud3c9\uade0 \ud589\ubcf5\uc9c0\uc218\ub97c \ub118\uc5b4\uc120 \uc544\uc8fc \ub192\uc740 \ud589\ubcf5\uc9c0\uc218\ub97c \uac16\uace0\uc788\ub294 \uac83","8dc099a1":"# 5\ub144\uac04 \uac00\uc7a5 \ub192\uc740 \ud589\ubcf5\uc9c0\uc218\ub97c \uac16\ub294 \ub098\ub77c(\uc21c\uc704)"}}