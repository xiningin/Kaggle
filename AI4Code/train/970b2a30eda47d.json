{"cell_type":{"94673e54":"code","91dd1b7b":"code","8213176b":"code","5a42c224":"code","ca08c898":"code","b1508eef":"code","26e0b222":"code","e32bea33":"code","cb076ab9":"code","c316195f":"code","4b474580":"code","b182cbfb":"code","7e143279":"code","f9afd024":"code","c3c10c8d":"code","53901b20":"code","79cacd8c":"code","a64a9e61":"code","7abaec6f":"code","ff723ebd":"code","96f968cd":"code","c3228775":"markdown","c0d7284d":"markdown","e2a3560f":"markdown","b85a4fa6":"markdown","b208dfc8":"markdown","b6e482c1":"markdown","a1c52eae":"markdown","ef9c4c65":"markdown","f02876c0":"markdown","1f595dc5":"markdown"},"source":{"94673e54":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns","91dd1b7b":"data = pd.read_csv('..\/input\/environmental-sensor-data-132k\/iot_telemetry_data.csv', engine='python')","8213176b":"data","5a42c224":"# !pip install -q pandas-profiling[notebook]\n# from pandas_profiling import ProfileReport\n# profile = ProfileReport(data, title='Pandas Profiling Report')\n# profile.to_notebook_iframe()","ca08c898":"# convert the boolean columns to int32 for plotting\ndata['light_int'] = data['light'].astype('int32')\ndata['motion_int'] = data['motion'].astype('int32')","b1508eef":"# convert unix time to time of day\nfrom datetime import datetime, timedelta\nstart = datetime(1970, 1, 1)  # Unix epoch start time\ndata['datetime'] = data.ts.apply(lambda x: start + timedelta(seconds=x))\ndata['string_time'] = data.datetime.apply(lambda x: x.strftime('%Y-%m-%d %H:%M:%S'))","26e0b222":"# separate out the data for the different devices with a groupby\ndata_device_gb = data.groupby('device')","e32bea33":"for i in data_device_gb:\n    print(i[0])","cb076ab9":"!pip install -q plotly","c316195f":"# plot our time series again with a more meaningful time axis and the ability to select individual sensor time series by double clicking on them in the legend\n\ncols = data.columns\nunwanted_cols = set(['motion','ts', 'device', 'light', 'datetime', 'string_time'])\n\nimport plotly.express as px \n\nplt_idx = 0\nfor z in data_device_gb:\n    fig = px.line(log_y = True, title = z[0])\n    for i, j in enumerate(cols):\n       # print(i)\n        if j in unwanted_cols:\n            continue\n        else:\n            fig.add_scatter(x=z[1].iloc[:,-1], y=z[1].iloc[:,i], mode='lines')\n            #print(i, j)\n            fig.data[plt_idx].name = j\n            plt_idx += 1\n\n    fig.show()\n    fig.data = []\n    plt_idx = 0","4b474580":"subset = set(['smoke', 'humidity', 'temp'])\nf, axes = plt.subplots(1,3, figsize=(30, 10))\n\nfor i, j in enumerate(subset):\n    sns.boxplot(  y=data[j], x= \"device\", data=data, hue = 'device', orient='v' , ax=axes[i])","b182cbfb":"!pip install -q fbprophet","7e143279":"data['ds'] = data['datetime']\ndata['y'] = data['smoke']\ndata_device_gb = data.groupby('device')","f9afd024":"# create a dictionary of dataframes from the groupby\ndf_dict = {}\nfor i, j in enumerate(data_device_gb):\n    df_dict[i] = j[1]","c3c10c8d":"df_dict[0][['ds','y']]","53901b20":"# Be advised - the code below, fitting the prophet model, takes a very long time to run\nfrom fbprophet import Prophet","79cacd8c":"m = Prophet()\n\nprophet_dict = {}\nfor i in df_dict:\n    prophet_dict[i] = m.fit(df_dict[i][['ds','y']])\n    m = Prophet()","a64a9e61":"future_dict = {}\nfor i in prophet_dict:\n    m = prophet_dict[i]\n    future_dict[i] = m.make_future_dataframe(periods=0, freq='H')\n# future = m.make_future_dataframe(periods=0, freq='H')","7abaec6f":"fcst_dict = {}\nfor i in future_dict:\n    m = prophet_dict[i]\n    fcst_dict[i] = m.predict(future_dict[i])\n# fcst = m.predict(future)","ff723ebd":"for i in fcst_dict:\n    m = prophet_dict[i]\n    fig = m.plot_components(fcst_dict[i])\n    ax = fig.gca()\n    ax.set_title(\"Smoke - Device {}\".format(i+1), size=16, loc = 'right')\n#fig = m.plot_components(fcst)","96f968cd":"# make the datetime column the index and then use index.day to groupby day\n\n# DFList = []\n# for group in df.groupby(df.index.day):\n#     DFList.append(group[1])","c3228775":"- From the fbprophet model above we can see that there is a trend for a fall in smoke levels from around 6am to 8 pm and an increase in smoke levels around midnight each day, with the same trend seen across the three device locations\n\n- You could go through each sensor type and generate trend data as above. You could also groupby using the datetime column and group over a day time frame. From this you could calculate the mean and calculate confidence intervals, giving you similar trend information to that generate by fbprophet\n\n- These confidence intervals could be the basis for an anomaly detection system (smoke alarm, human alarm etc)","c0d7284d":"## From the plot above we can see a few things:\n-  CO, LPG and smoke levels (air quality metrics) are correlated for each device and vary over the time series and between devices\n- Dramatic swings in temperature are recorded (are they real or the result of sensor malfunction?) as well as more moderate temperature oscillations \n- There are spikes in humidity and motion\n- Illumination is either continuous or transient","e2a3560f":"# Tasks \n\n- The stated task is \"Use ML to Determine when a Person is near IoT Device\"\n\n- As we don't have labels of time stamps where people are near the IoT device we are limited to unsupervised methods\n\n- We do however, have three different devices in different locations, each with about a week of time series data recorded at a sampling interval of 5-10 seconds between measurements\n\n- The proximity of a person could affect the recorded parameters in the various ways:\n\n-- Would CO levels be impacted by the presence of an individual? Perhaps, if they are breathing air near the sensor the CO will stick to their Haemoglobin permanently (this is how Carbon Monoxide poisons you) effectively scrubbing some of it from the atmosphere like a filter and leading to detectable reduction in CO ppm\n\n-- Humidity might increase if a person is exhaling into the room\n\n-- Light levels might drop if a person is occluding the light sensor. Light levels might increase if a person turns on a light or opens a closet door\n\n-- LPG levels might drop if a person breathes it in and thereby filters it from the local atmosphere\n\n-- The movement of an individual near to a sensor would create detectable motion, though some information about other sources of motion\/vibration would be needed to attribute it to a nearby person\n\n-- Again, smoke levels could be reduced by the filtering effect of a persons lungs or increased if a person lights up a cigarette infront of the smoke sensor\n\n-- The ambient temperature might be increased by the presence of a person(s) next to the temperature sensor for a period of time","b85a4fa6":"# Exploring the time series","b208dfc8":"- We can do MANOVA (Multivariate ANalysis Of VAriance) to put some numbers on the differences in means for these variables across the three devices. Infact the statsmodel library has a class for it:\n\nstatsmodels.multivariate.manova.MANOVA\n\nBut the differences are fairly clear from the boxplots so lets move on","b6e482c1":"# Unsupervised learning to identify time series windows where humans are near\n\n### The central question here is defining which aspects of the time series can be attributed to human activity? It could be defined by:\n- motion spikes - when humans are near they wobble the accelerometer\n\n- light spikes - when humans open a door light falls on the detector \n\n- spikes in air pollution - when humans drive up to a sensor or turn on a machine fumes are produced\n\n- temperature and humidity spikes - when humans open a door the temperature and humidity shift accordingly\n\n### Really we need more information about the system and the impact of human behaivour within it, in order to build a system to flag human activity. Is human proximity an anomaly or a regular occurence? In what way do humans interact with the environment and how would this affect the sensor data?\n\n### Nevertheless, from what we have here there are a few approaches to defining time series windows containing human proximity:\n\n- Setting thresholds (if variable_x > cut_off_y: human_presence = True else: human_presence = False). If motion = human activity, we already have all we need for this\n\n- Doing some unsupervised clustering to bin time series windows into \"classes\" or \"clusters\" which may be subsequently labelled as containing traces of \"human proximity\". \n\n- Defining confidence intervals in the time series to create anomaly detection thresholds (if human activity is the anomaly)\n\nTBC\n\n","a1c52eae":"# Approach\n\n- Lets plot the time series with a meaningful time scale (time of day might indicate when people are more likely to be nearby)\n\n- Lets find out if there are any daily patterns the data\n\n- Lets see if there are any significant differences between the sensor time series between the three locations\n\n- Attempt to define thresholds\/confidence intervals\/clustering on windows of time series data to define plausible \"humans are nearby\" intervals (i.e corresponding to light\/motion\/atmospheric\/temperature changes)","ef9c4c65":"## Any differences between the three sensor devices in different locations?\n\n00:0f:00:70:91:0a = 00\n\n1c:bf:ce:15:ec:4d = 1c\n\nb8:27:eb:bf:9d:51 = b8\n\n-  There are clusters of motion spikes interspersed with moitionless intervals. b8 and 1c show far more motion spikes than 00\n- 1c shows continuous illumination but the others have light and dark intervals \n- 00 has worse spikes in air quality than the other devices","f02876c0":"## Any daily patterns in the data?\n\n- We can use facebook prophet to easily (if not rapidly) calculate and plot the hourly trends for our data. Lets take smoke across the three devices as an example","1f595dc5":"- From the boxplots above we can see that the three devices are definitely located in distinct environments: \n    \n    1. Ambient air pollution levels are highest in b8, followed by 1c and 00. 00 is less polluted most of the time but has more significant spikes of air pollution than the other devices\n    2. The three devices are in locations will slightly different average temperatures, in the range of 20-30 degC. 00 and 1c show significant temperature drop outliers\n    3. The three devices are also in locations with different humidity levels, in the range of roughly 50-75%. All three have some outliers showing increases and decreases in humidity which for 1c and 00 are substantial (65 to 0%)  "}}