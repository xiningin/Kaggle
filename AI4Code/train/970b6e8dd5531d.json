{"cell_type":{"27759b85":"code","d9ee1a3e":"code","2655ab5e":"code","d1eac9bb":"code","9598bc31":"code","9a06c00a":"code","8bfdd65e":"code","48cce982":"markdown","328608f5":"markdown","b01347ab":"markdown","e4bbc361":"markdown","c7dee9eb":"markdown","36194890":"markdown"},"source":{"27759b85":"import pandas as pd\nfrom sklearn.linear_model import LogisticRegression","d9ee1a3e":"train_data = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic\/test.csv')\nall_data = pd.concat([train_data, test_data], keys=['train', 'test'])\nall_data","2655ab5e":"all_data['Age'] = all_data['Age'].fillna(all_data['Age'].mean())\nall_data['Fare'] = all_data['Fare'].fillna(all_data['Fare'].mean())\nall_data = all_data.drop('PassengerId', axis=1)\nall_data['Embarked'].fillna(\"S\", inplace=True)\nall_data = all_data.drop('Cabin', axis=1)\nall_data = all_data.drop('Name', axis=1)\nall_data = all_data.drop('Ticket', axis=1)\nall_data = pd.get_dummies(all_data, drop_first=True)","d1eac9bb":"train = all_data.loc['train']\ntest = all_data.loc['test']\n","9598bc31":"X = train.drop('Survived', axis=1)\ny = train['Survived']","9a06c00a":"clf = LogisticRegression(max_iter=1500)\nclf.fit(X, y)","8bfdd65e":"\ny_pred = clf.predict(test.drop('Survived', axis=1))\npd.DataFrame({\n    \"PassengerId\": test_data.PassengerId.values,\n    \"Survived\": y_pred.astype(int)\n    }).to_csv('submission.csv', index=False, header=True)","48cce982":"# We will get back the test and training data\n# \u041e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0438 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435","328608f5":"# Using logistic regression\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e","b01347ab":"# Loading training and test data\nWe will load the data and combine them into one DataFrame for more convenient processing\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0442\u0440\u0435\u043d\u0438\u0440\u043e\u0432\u043e\u0447\u043d\u044b\u0445 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u043c \u0438\u0445 \u0432 \u043e\u0434\u0438\u043d DataFrame \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438","e4bbc361":"# Predict the result and get the answer\n# \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0436\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0442\u0432\u0435\u0442","c7dee9eb":"# Importing the necessary libraries\n#  \u0418\u043c\u043f\u043e\u0440\u0442 \u043d\u0443\u0436\u043d\u044b\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a","36194890":"# Let's process the data\nFill in the empty values with the average, and also delete the columns that have little effect on the result. Converting categorical values to numeric values using get_dummies\n# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n\u041f\u0443\u0441\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u043c, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0443\u0434\u0430\u043b\u0438\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043b\u0430\u0431\u043e \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e get_dummies"}}