{"cell_type":{"a91b0cca":"code","188b240e":"code","8e753cd4":"code","5f7cbf4e":"code","b3a3ccb8":"code","7b878ee0":"code","b61dfb83":"code","60eddcd6":"code","f11df611":"code","514780fb":"code","1e59b179":"code","ac4f696c":"code","c321591c":"code","46fa62b3":"code","49ff4e3d":"code","7623cfda":"code","b79f0201":"code","9205eea5":"code","5ff55550":"code","6aa248ff":"code","7d59a584":"code","8b9ca8b1":"code","fc60ab8d":"code","7b5c22c8":"code","8fd3c1d3":"code","be270d50":"code","9695881b":"code","d19c6c3c":"code","02a034c7":"code","059e09db":"code","39d67ca2":"code","1409de70":"code","9ea19b03":"code","547d7b05":"code","251062fa":"code","74fca444":"code","7d492588":"code","157066e7":"code","0acd69cb":"code","e31d1109":"code","3248f1e2":"code","c347b901":"code","794c370b":"code","a0524cbb":"markdown","a8655c73":"markdown","3fddce54":"markdown","38a9a723":"markdown","6ab1d7e5":"markdown","19ceb903":"markdown","84dcce9e":"markdown","e1190186":"markdown","ef49fcf3":"markdown","2725c7f9":"markdown","b39456d6":"markdown","cb09ff29":"markdown","0f6095e0":"markdown","ac080268":"markdown","882869b0":"markdown"},"source":{"a91b0cca":"import pandas as pd\nimport matplotlib.pyplot as plt","188b240e":"df_eth = pd.read_csv(\"\/kaggle\/input\/parsiq\/ERC20AXS.csv\").replace('0x1a2a1c938ce3ec39b6d47113c7955baa9dd454f2', 'Ronin').replace('0x28c6c06298d514db089934071355e5743bf21d60', 'Binance')\ndf_bsc = pd.read_csv(\"..\/input\/parsiq\/BinanceSmartChain.csv\").replace('0x8894e0a0c962cb723c1976a4421c95949be2d4e3', 'Binance6').replace('0xe2fc31f816a9b94326492132018c3aecc4a93ae1', 'Binance7')","8e753cd4":"df_eth.info()","5f7cbf4e":"df_eth.head()","b3a3ccb8":"df_bsc.info()","7b878ee0":"df_bsc.head(2)","b61dfb83":"df_eth[df_eth['to']== 'Binance'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\ndf_eth[df_eth['to']== 'Ronin'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\nplt.xticks(fontsize=6)\nplt.show()","60eddcd6":"df_eth[df_eth['from']== 'Binance'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\ndf_eth[df_eth['from']== 'Ronin'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\nplt.xticks(fontsize=6)\nplt.show()","f11df611":"# Divide by token type\ndf_eth_axs = df_eth[df_eth.symbol=='AXS']\ndf_eth_slp = df_eth[df_eth.symbol=='SLP']","514780fb":"len(df_eth_axs)","1e59b179":"df_eth_axs.to.value_counts()","ac4f696c":"df_eth_axs['from'].value_counts()","c321591c":"df_eth_axs['to'].value_counts()","46fa62b3":"eth_axs_counts_from = df_eth_axs['from'].value_counts().reset_index(name=\"count\").query(\"count > 10\").set_index('index')\neth_axs_counts_to   = df_eth_axs['to'].value_counts().reset_index(name=\"count\").query(\"count > 10\").set_index('index')","49ff4e3d":"eth_axs_counts_from.plot(kind='bar')\nplt.xlabel(\"Type\", labelpad=14)\nplt.ylabel(\"Count of transactions\", labelpad=14)\nplt.title(\"Count of AXS transactions from an address on Ethereum\", y=1.02)\nplt.savefig('eth_axs_counts_from.png');","7623cfda":"eth_axs_counts_to.plot(kind='bar')\nplt.xlabel(\"Type\", labelpad=14)\nplt.ylabel(\"Count of transactions\", labelpad=14)\nplt.title(\"Count of AXS transactions to an address on Ethereum\", y=1.02)\nplt.savefig('eth_axs_counts_to.png');","b79f0201":"df_eth_axs.sort_values(by=['value']).tail(25)","9205eea5":"df_eth_axs.groupby(['from'])['value'].sum().sort_values()","5ff55550":"df_eth_axs.groupby(['to'])['value'].sum().sort_values()","6aa248ff":"# total sum of flow values\ndf_eth_axs['value'].sum()","7d59a584":"df_eth_axs.groupby(['from'])['value'].sum().sort_values()","8b9ca8b1":"AXS_from_Ronin = df_eth_axs.groupby(['from'])['value'].sum().sort_values()['Ronin']\nAXS_to_Ronin   = df_eth_axs.groupby(['to'])['value'].sum().sort_values()['Ronin']","fc60ab8d":"df_eth_axs.groupby(['to'])['value', 'gas_used'].sum().sort_values(by=['value'])","7b5c22c8":"AXS_from_Binance = df_eth_axs.groupby(['from'])['value'].sum().sort_values()['Binance']\nAXS_to_Binance = df_eth_axs.groupby(['to'])['value'].sum().sort_values()['Binance']","8fd3c1d3":"df_eth_axs[df_eth_axs['to']== 'Binance'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\n#df_eth_axs[df_eth_axs['to']== 'Ronin'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\nplt.xticks(fontsize=8)\nplt.show()","be270d50":"df_eth_axs[df_eth_axs['to']== 'Ronin'].set_index('block_timestamp')['value']","9695881b":"df_eth_axs[df_eth_axs['from']== 'Binance'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\ndf_eth_axs[df_eth_axs['from']== 'Ronin'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\nplt.xticks(fontsize=6)\nplt.show()","d19c6c3c":"df_eth[df_eth['from']== 'Binance'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\ndf_eth[df_eth['from']== 'Ronin'].set_index('block_timestamp')['value'].plot(figsize=(10,6))\nplt.xticks(fontsize=6)\nplt.show()","02a034c7":"df = pd.DataFrame({'Group 1': {'from Ronin': AXS_from_Ronin, 'to Ronin': AXS_to_Ronin, 'from Binance': AXS_from_Binance, 'to Binance': AXS_to_Binance}})\n\nwidth = 0.8\nbottom = 0\n\nfor i in df.columns:\n    plt.bar(df.index, df[i], width=width, bottom=bottom)\n    bottom += df[i]\n\nplt.ylabel('Value')\n\nplt.xticks(fontsize=8)\nplt.tight_layout()","059e09db":"bsc_axs_counts_from = df_bsc['from'].value_counts().reset_index(name=\"count\").query(\"count > 2\").set_index('index')\nbsc_axs_counts_to   = df_bsc['to'].value_counts().reset_index(name=\"count\").query(\"count > 2\").set_index('index')","39d67ca2":"len(df_bsc)","1409de70":"bsc_axs_counts_to","9ea19b03":"bsc_axs_counts_from","547d7b05":"df = pd.DataFrame({'Group 1': {'outflows':66, 'inflows':26}, 'Go': {'outflows': 65}, })\n\nwidth = 0.8\nbottom = 0\n\nfor i in df.columns:\n    plt.bar(df.index, df[i], width=width, bottom=bottom)\n    bottom += df[i]\n\nplt.ylabel('Count')\n\nplt.xticks(fontsize=8)\nplt.tight_layout()","251062fa":"AXS_from_6_bsc = df_bsc.groupby(['from'])['block.header.nonce'].sum().sort_values()['Binance6']\nAXS_from_7_bsc = df_bsc.groupby(['from'])['block.header.nonce'].sum().sort_values()['Binance7']\nAXS_to_6_bsc   = df_bsc.groupby(['to'])['block.header.nonce'].sum().sort_values()['Binance6']","74fca444":"df_bsc.groupby(['from'])['block.header.nonce'].sum().sort_values()","7d492588":"df_bsc.groupby(['to'])['block.header.nonce'].sum().sort_values()","157066e7":"df = pd.DataFrame({'Group 1': {'outflows':AXS_from_6_bsc, 'inflows':AXS_to_6_bsc}, 'Go': {'outflows': AXS_from_7_bsc}, })\n\nwidth = 0.8\nbottom = 0\n\nfor i in df.columns:\n    plt.bar(df.index, df[i], width=width, bottom=bottom)\n    bottom += df[i]\n\nplt.ylabel('Value')\n\nplt.xticks(fontsize=8)\nplt.tight_layout()","0acd69cb":"df = pd.DataFrame({'Group 1': {'BSC outflows':AXS_from_6_bsc, 'BSC inflows':AXS_to_6_bsc,'ETH outflows': AXS_from_Binance, 'ETH inflows': AXS_to_Binance }, 'Go': {'BSC outflows': AXS_from_7_bsc}, 'Group3':{}})\n\n#df = pd.DataFrame({'Group 1': {'from Ronin': AXS_from_Ronin, 'to Ronin': AXS_to_Ronin, 'from Binance': AXS_from_Binance, 'to Binance': AXS_to_Binance}})\nwidth = 0.8\nbottom = 0\n\nfor i in df.columns:\n    plt.bar(df.index, df[i], width=width, bottom=bottom)\n    bottom += df[i]\n\nplt.ylabel('Value')\n\nplt.xticks(fontsize=8)\nplt.tight_layout()","e31d1109":"df_eth[df_eth['from']== 'Ronin'].mean() ","3248f1e2":"df_eth[df_eth['from']== 'Binance'].mean() ","c347b901":"df_eth[df_eth['to']== 'Ronin'].mean() ","794c370b":"df_eth[df_eth['to']== 'Binance'].mean() ","a0524cbb":"## Transforming the Data","a8655c73":"Great Sign for AXS: more transactions to the Ronin Bridge than Binance. Also more transactions to Ronin than from Ronin.","3fddce54":"## Reading Data","38a9a723":"### Inspecing value of AXS tokens","6ab1d7e5":"## ","19ceb903":"# Analysis. AXS on Ethereum","84dcce9e":"**This notebook relates to Gitcoin Bouunty for PARSIQ. Here is the repository of the Project: https:\/\/github.com\/Pfed-prog\/PARSIQ-AXS**","e1190186":"![soc.jpg](attachment:b702d0fa-b247-4549-ba1f-5d740f04957b.jpg)","ef49fcf3":"### Countplot of transactions","2725c7f9":"### Comparing BSC to Ethereum","b39456d6":"## getScore","cb09ff29":"# AXS on Binance Smart Chain","0f6095e0":"## Inspect Datasets","ac080268":"## Import Modules","882869b0":"# Calculating flows"}}