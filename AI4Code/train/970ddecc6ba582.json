{"cell_type":{"40f9b6b6":"code","a0c851f6":"code","9dd46000":"code","0001ae29":"code","d8f49289":"code","211fecc7":"code","f821258d":"code","81e36e3e":"code","4c6b2a64":"code","c5b1ae55":"code","93d1a0b3":"code","09df2cba":"code","46833373":"code","f105dc92":"markdown","63a8586b":"markdown","7f9aa2ef":"markdown","6335a236":"markdown","486a0e17":"markdown","fa478f29":"markdown"},"source":{"40f9b6b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a0c851f6":"df = pd.read_csv(\"..\/input\/szeged-weather\/weatherHistory.csv\")\ndf.shape","9dd46000":"df.head()","0001ae29":"df.describe(include = \"all\")","d8f49289":"df.drop_duplicates(inplace=True)\ndf.reset_index(drop=True, inplace=True)","211fecc7":"df.isnull().sum()","f821258d":"df.drop(columns = ['Formatted Date', 'Summary', 'Precip Type','Daily Summary', 'Loud Cover'], axis = 1 , inplace = True)","81e36e3e":"df.corr()[\"Apparent Temperature (C)\"].sort_values()","4c6b2a64":"x_data = df[[\"Humidity\", \"Temperature (C)\"]]\ny_data = df[[\"Apparent Temperature (C)\"]]","c5b1ae55":"from sklearn.model_selection import train_test_split\n\nx_train, x_test,y_train,y_test = train_test_split(x_data, y_data, test_size = 0.3 , random_state = 0)","93d1a0b3":"from sklearn.linear_model import LinearRegression\n\nlm = LinearRegression()\nlm.fit(x_train,y_train)","09df2cba":"lm.score(x_test,y_test)","46833373":"from sklearn.metrics import mean_squared_error\nmean_squared_error(y_test, lm.predict(x_test))","f105dc92":"#### dropping duplicates and null values","63a8586b":"## selecting features","7f9aa2ef":"# Task : To predict  Apparent Temprature","6335a236":"as we can see that appernt temprature is solely manipulated by humidity and tempreture columns ","486a0e17":"## testing the model","fa478f29":"## training a regression model"}}