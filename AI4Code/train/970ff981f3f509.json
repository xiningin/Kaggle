{"cell_type":{"9a51c37c":"code","b0a0d083":"code","939dd9f4":"code","10f9de69":"code","6c9384d5":"code","32eaf95f":"code","7bf12292":"code","74249fdc":"code","205362d1":"code","7b9ad8ca":"code","0eef0309":"code","3aaddec4":"code","97bd9727":"code","3677fa07":"code","5ca29c35":"code","ccdbdb67":"code","411f26e5":"code","20fb6e4f":"code","85664d14":"code","5a044bc9":"code","74f2074d":"code","63feecb3":"markdown","f1992992":"markdown","8038b3e3":"markdown","5af5b495":"markdown","aa70b864":"markdown","eb155dcf":"markdown","80203bcf":"markdown","98e89fbc":"markdown","9eb5c824":"markdown","75a54287":"markdown","e11f93d2":"markdown","ad90163f":"markdown","4e7f4f05":"markdown","9aaf0599":"markdown","0b2c7d0f":"markdown","9f8f1b2d":"markdown","44032d24":"markdown","47c16882":"markdown","ac7f3337":"markdown","a74c7931":"markdown","ff52585a":"markdown"},"source":{"9a51c37c":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\npenguins = sns.load_dataset(\"penguins\")\ntips = sns.load_dataset(\"tips\")\ndiamonds = sns.load_dataset(\"diamonds\")","b0a0d083":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            bins=20,\n            # binwidth=3\n            );","939dd9f4":"# it is also possible to apply bins=[1, 2, 3, 4, 5, 6, 7] or shrink=3 instead of discrete=True\nsns.displot(tips,\n            x=\"size\",\n            discrete=True,\n            # bins=[1, 2, 3, 4, 5, 6, 7],\n            # shrink=3,\n           );","10f9de69":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            hue=\"species\" # based on which features will the data be divided?\n            );","6c9384d5":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            hue=\"species\",\n            multiple=\"stack\",\n            # element=\"step\",\n            );","32eaf95f":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            col=\"sex\",\n            multiple=\"dodge\"\n            );\n\n# If you want to change the y-axis to a percentage, simply add stat=\"density\"","7bf12292":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            kind=\"kde\", # Kernel density estimation\n            bw_adjust=.25);","74249fdc":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            hue=\"species\",\n            kind=\"kde\",\n            multiple=\"stack\",\n            # fill=True,\n            );\n\n# it will be more effective to apply fill=True rather than multiple=\"stack\"","205362d1":"sns.displot(tips,\n            x=\"total_bill\",\n            kind=\"kde\",\n            cut=0\n           );","7b9ad8ca":"sns.displot(diamonds,\n            x=\"carat\",\n            kind=\"kde\"\n           );\n\n# If you look at the actual histogram, you can see that\n# the data is more jaggedly distributed. (remove kind=\"kde\")","0eef0309":"# Drawing histogram and KDE together\nsns.displot(diamonds,\n            x=\"carat\",\n            kde=True);","3aaddec4":"sns.displot(penguins,\n            x=\"flipper_length_mm\",\n            hue=\"species\",\n            kind=\"ecdf\");","97bd9727":"sns.displot(penguins,\n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\"\n           );","3677fa07":"sns.displot(data=penguins,\n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\",\n            # kind=\"kde\",\n            rug=True\n           );","5ca29c35":"sns.displot(data=penguins,\n            x=\"flipper_length_mm\",\n            hue=\"species\",\n            col=\"sex\",\n            kind=\"kde\");","ccdbdb67":"sns.displot(data=penguins,\n            y=\"flipper_length_mm\",\n            hue=\"sex\",\n            col=\"species\",\n            kind=\"ecdf\",\n            height=4,\n            aspect=.7,\n           );","411f26e5":"sns.displot(data=penguins,\n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\",\n            hue=\"species\",\n            kind=\"kde\" # kind parametrer's defalut: hist\n            );","20fb6e4f":"sns.jointplot(data=penguins,\n            x=\"bill_length_mm\",\n            y=\"bill_depth_mm\",\n            hue=\"species\",\n            kind=\"kde\", # what happen if kind parameter is removed?\n            );","85664d14":"# set up the base chart\ng = sns.JointGrid(data=penguins,\n                  x=\"bill_length_mm\",\n                  y=\"bill_depth_mm\"\n                 )\n\n# changing the representation of bivariate distributions\ng.plot_joint(sns.histplot)\n# change the representation of the marginal distribution\ng.plot_marginals(sns.boxplot);","5a044bc9":"sns.pairplot(penguins);","74f2074d":"g = sns.PairGrid(penguins)\n\n# the chart above the diagonal is represented as a histplot.\ng.map_upper(sns.histplot)\n# the chart below the diagonal is expressed as kdeplot\ng.map_lower(sns.kdeplot, fill=True)\n# diagonal chart is expressed by adding kde parameter to histplot.\ng.map_diag(sns.histplot, kde=True);","63feecb3":"If you want to change the shape of the bivariate distribution and the marginal distribution, you can set it as follows","f1992992":"The parameters applied to the histogram are also applied here.\n","8038b3e3":"This notebook is a summary of the tutorial provided by seaborn. So it's pretty much the same as the tutorial. However, the reason I made these notebooks separately is to quickly check and apply the codes I need when actually doing data visualization. And I think the more parameters you know, the more different visualizations you can do. Therefore, various parameters were intentionally added to each visualization process or a brief explanation was attached.\n\n- Reference:\n1. https:\/\/seaborn.pydata.org\/tutorial\/distributions.html\n2. https:\/\/seaborn.pydata.org\/generated\/seaborn.displot.html#seaborn.displot\n\n- Series:\n1. Statistical relationships: https:\/\/www.kaggle.com\/euitaekim\/seaborn-visualization-statistical-relationships\n2. Categorical data: https:\/\/www.kaggle.com\/euitaekim\/seaborn-visualization-categorical-data\n\n### **Import package & data**","5af5b495":"However, the above result makes it difficult to check the frequency of each feature. To compensate for this, **'multiple=\"dodge\"+ (col or hue)'** can be used. However, this method is only effective when the number of feature classes is moderately small.","aa70b864":"**'bins'** and **'binwidth'** parameter draw same chart. However, as the name suggests, the **'binwidth'** parameter adjusts the number by setting the width, so it may not give the desired result immediately. try applying various values at **'bins'** and **'binwidth'**!","eb155dcf":"Visualize bivariate distributions","80203bcf":"This is a method used to check the distribution of all univariate variables and the distribution relationship between each variable at once, and the official introduces this as a **small-multiple** approach.","98e89fbc":"**Histogram** is characterized in that the widths of the bars are connected to each other. However, it should be noted that the meaning of the histogram may be faded if discrete data is inserted. To solve this problem, apply **discrete=True**. ","9eb5c824":"displot() provide support for conditional subsetting via the **'hue'** semantic","75a54287":"### **Visualization**","e11f93d2":"Because the figure is drawn with a FacetGrid, you control its size and shape with the height and aspect parameters","ad90163f":"**kernel density estimation** presents a diffrent solution to the same problem. a KDE plot smooths the observations with a Gaussian kernel (producing a continuous density estimate)\n\n- over-smoothed estimate -> erase meaningful features\n- under-smoothed estimate -> obscure the true shape within random noise\n- Therefore, while adjusting **'bw_adjust'**, the adequacy of visualization should be reviewed.","4e7f4f05":"PairGrid can be utilized to flexibly adjust the shape of the chart that appears diagonally, above and below the diagonal.","9aaf0599":"**Empirical cumulative distributions(=ECDF)** draws a monotonically-incresing curve\n\n**advantage of ECDF 1.** ECDF directly represents each datapoint. so, there is no bin size or smoothing parameter to consider\n\n**advantage of ECDF 2.** ECDF is well-suited for comparing multiple distributions\n\n**downside of ECDF 1.** ECDF is represents the shape of distribution less intuitively than a histogram or density curve\n\n**downside of ECDF 2.** to see bimodality in the ECDF plot, you must look for varying slopes","0b2c7d0f":"**pitfalls of KDE 2.** The KDE approach also fails for discrete data or when data are naturally continuous but specific values are over-represented. KDE will always show you a smooth curve, even when the data themselves are not smooth\n\n","9f8f1b2d":"The figure is constructed using a FacetGrid, meaning that you can also show subsets on distinct subplots, or **\u201cfacets\u201d**\n- FacetGrid: Multi-plot grid for plotting conditional relationships.\n","44032d24":"If data is not visible due to overlapping graphs, you can solve it with **'element=\"step\"'** or **'multiple=\"stack\"'**","47c16882":"**advantages of KDE**\neasy to discern, afford easy comparisons between subsets.\n\n\n**pitfalls of KDE 1.**\nlogic of KDE assumes that the underlying distribution is smooth and unbounded. this assumption can fail when a varible reflects a quantity that is naturally bounded. If there are observations lying close to the bound, the KDE curve may extend to unrealistic values\n\nTo solve this problem, **'cut'** parameters are used.\n","ac7f3337":"Expressing bivariate and marginal distributions simultaneously","a74c7931":"If you want to draw a **bivariate graph**, you only need to add the y variable","ff52585a":"When using a bivariate graph, it may be difficult to properly understand the frequency of each observation sample on the x and y axes. In this case, if **rug=True** is used, the frequency of the sample corresponding to each axis can be used as a scale."}}