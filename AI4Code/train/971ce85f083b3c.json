{"cell_type":{"5c6db5b9":"code","f4f3a2ce":"code","ebcc0f5e":"code","efb662ef":"code","9f019e89":"code","fded5bf9":"code","dee68928":"code","617ad827":"code","bd04672c":"code","ad6c4c58":"code","8b867386":"code","f3394c8f":"code","33710820":"code","ba53c516":"code","c90b9213":"code","491ec908":"code","e4dfad68":"code","0b6e7fcb":"code","698f3ec9":"code","01082035":"code","38770640":"code","e89aa4a8":"code","f87ed70e":"code","3b2756e1":"code","29996fc2":"code","5e6dda4d":"code","0605f48c":"code","a2ca6b14":"code","afedf3d3":"code","7b1c3792":"code","4cc8e367":"code","813fa9ef":"code","c00400ec":"code","4de5a74f":"code","725d53e6":"code","37d9c6b4":"code","ce239604":"code","0074858d":"code","bbecf15c":"code","373b35bb":"markdown","1d75b998":"markdown","722e4327":"markdown","09dca96d":"markdown","0dd32376":"markdown","4b494a91":"markdown","382b0413":"markdown","23ad72db":"markdown","97ca76d1":"markdown","64c2101d":"markdown","d38fe42c":"markdown","57f63c11":"markdown","7e5548a3":"markdown","aca5b2d3":"markdown","8de7489d":"markdown"},"source":{"5c6db5b9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4f3a2ce":"# Let's import the data\ntrain_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntrain_data.head()","ebcc0f5e":"\ntrain_data.shape","efb662ef":"train_data.info()","9f019e89":"sns.heatmap(train_data.isnull(), yticklabels=False, cbar=False, cmap='magma')","fded5bf9":"# Let's get more data about survived people\nsns.set_style('whitegrid')\nsns.countplot(x='Survived', data=train_data)","dee68928":"# Let's divide this data according to their gender.\nsns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Sex', data=train_data)","617ad827":"# Let's get more clear aspects of survived people data with the help of passenger class\nsns.set_style('whitegrid')\nsns.countplot(x='Survived', hue='Pclass', data=train_data)\n","bd04672c":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass', y='Age', data=train_data)","ad6c4c58":"def replace_value(col):\n    Age = col[0]\n    Pclass = col[1]\n    \n    if pd.isnull(Age):\n        \n        if Pclass == 1:\n            return 37\n        \n        if Pclass == 2:\n            return 29\n        \n        else:\n            return 24\n        \n    else:\n        return Age\n            ","8b867386":"train_data['Age'] = train_data[['Age', 'Pclass']].apply(replace_value, axis=1)","f3394c8f":"train_data.drop('Cabin', axis=1, inplace=True)","33710820":"sns.heatmap(train_data.isnull(), yticklabels=False, cbar=False, cmap='magma')","ba53c516":"# After replacing missing values\ntrain_data.isnull()","c90b9213":"train_data.head()\n","491ec908":"train_data.info()","e4dfad68":"sex = pd.get_dummies(train_data['Sex'], drop_first=True)\nembark = pd.get_dummies(train_data['Embarked'], drop_first=True)\nsex.head()","0b6e7fcb":"train_data.drop(['Sex', 'Name', 'Embarked', 'Ticket', 'Fare'], axis=1, inplace=True )","698f3ec9":"train_data.head()","01082035":"train = pd.concat([train_data, embark, sex], axis=1)\ntrain.head()","38770640":"from sklearn.model_selection import train_test_split","e89aa4a8":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived', axis=1), train['Survived'], test_size=0.30, random_state=101)","f87ed70e":"from sklearn.linear_model import LogisticRegression","3b2756e1":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\n","29996fc2":"predictions = model.predict(X_test)\npredictions","5e6dda4d":"from sklearn.metrics import confusion_matrix, accuracy_score","0605f48c":"accuracy = confusion_matrix(y_test, predictions)\naccuracy_scr = accuracy_score(y_test, predictions)\naccuracy_scr\n","a2ca6b14":"test_data.head()","afedf3d3":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass', y='Fare', data=test_data)","7b1c3792":"sns.heatmap(test_data.isnull(), yticklabels=False, cbar=False, cmap='magma')","4cc8e367":"test_data['Age'] = test_data[['Age', 'Pclass']].apply(replace_value, axis=1)\nsns.heatmap(test_data.isnull(), yticklabels=False, cbar=False, cmap='magma')","813fa9ef":"sns.heatmap(test_data.isnull(), yticklabels=False, cbar=False, cmap='magma')","c00400ec":"test_data.info()","4de5a74f":"sex = pd.get_dummies(test_data['Sex'], drop_first=True)\nembark = pd.get_dummies(test_data['Embarked'], drop_first=True)\nsex.head()","725d53e6":"test = pd.concat([test_data, embark, sex], axis=1)\ntest.head()","37d9c6b4":"test.drop(['Sex', 'Name', 'Embarked', 'Ticket', 'Fare', 'Cabin'], axis=1, inplace=True )\ntest.head()","ce239604":"test_predictions = model.predict(test)\ntest_predictions","0074858d":"test['Survived'] = test_predictions\ntest.drop(['Pclass', 'Age', 'SibSp', 'Parch', 'Q', 'S', 'male'], axis=1, inplace=True)\ntest.head()","bbecf15c":"test.to_csv('Solution.csv', index=False)","373b35bb":"From the above boxplot, we can say that for pclass 1 average age value is 37 or 38, for pclass 2 average age value is 28 or 29, for pclass 3 average age value is 24 or 25. (We can use any value from given both values.)","1d75b998":"Here 'Cabin' has hightest number of null or missing values and also 'Cabin' column is not so important for further process. So we will drop it from the dataset.","722e4327":"# EDA(Exploratory Data Analysis)","09dca96d":"## Feature engineering","0dd32376":"## Converting categorical variables","4b494a91":"We have 891 rows and 12 columns in our dataset.","382b0413":"This plot is showing that now after removing 'Cabin' column we don't have any null values in our dataset.","23ad72db":"## Missing values ","97ca76d1":"From the above graph we can say that, most of the survived people were from pclass 1 and people who died the most were from pclass 3.","64c2101d":"# Replacing null values","d38fe42c":"We can observe that we have variable elements in different data types(int64, float64, object).Also here, we can see that 'Age' and 'Cabin' columns have maximum null or missing values. First of all we have to replace these missing values.","57f63c11":"From 'Cabin' and 'Age' columns, 'Cabin' has maximum missing values.","7e5548a3":"## EDA on Test dataset","aca5b2d3":"# Training the model with Logistic Regression","8de7489d":"## Checking the accuracy of the model"}}