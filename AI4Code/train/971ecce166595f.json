{"cell_type":{"277d0f97":"code","bc4c6634":"code","be8588c1":"code","fdba94c5":"code","c154a658":"code","26141348":"code","9367efee":"code","8400e3c6":"code","b4ae51e6":"code","c367bd68":"code","9c579af7":"code","69bb6f08":"code","e0ab9313":"code","77578341":"code","5d086b95":"code","3cb65a3d":"code","2ae40158":"code","cd932d22":"code","f66d8587":"code","8d713af1":"code","a87aa71d":"code","cf081dcf":"code","f7c6980f":"code","6bafa9c3":"markdown","c9c9bcf8":"markdown"},"source":{"277d0f97":"!pip install chart_studio","bc4c6634":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt \n%matplotlib inline \nimport chart_studio.plotly as py\nimport plotly.graph_objects as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","be8588c1":"init_notebook_mode(connected=True) ","fdba94c5":"volcano = pd.read_csv('..\/input\/volcano\/Volcano.csv')","c154a658":"volcano.head(1)","26141348":"#check nulls\nsns.heatmap(volcano.isnull(),cmap='coolwarm')","9367efee":"sns.lineplot(x='Year',y='TOTAL_DEATHS',data=volcano,ci=None)","8400e3c6":"plt.figure(figsize=(10,4))\ng = sns.FacetGrid(volcano, col=\"Year\",col_wrap=3)\ng.map(sns.lineplot,'Month','TOTAL_DEATHS')\nplt.show()","b4ae51e6":"plt.figure(figsize=(12,4))\nsns.countplot(x='Country',data=volcano)\nplt.xticks(rotation=90) #majority of volcanos are in Indoensia ","c367bd68":"plt.figure(figsize=(12,4))\nsns.barplot(x='Country',y='Elevation',data=volcano)\nplt.xticks(rotation=90) #tallest volcano is in Peru (Peru has one volcano)","9c579af7":"volcano['Country'].value_counts()","69bb6f08":"#closer look into Indonesia's volcanos\nindonesia_vol = volcano[volcano['Country'] == 'Indonesia']","e0ab9313":"sns.countplot(x='Type',data=indonesia_vol,hue='Status') #almost all volcanos in indonesia are Stratovolcano and are historical ","77578341":"volcano['Country'].unique()","5d086b95":"def country_code (row):\n   if row['Country'] == 'Ecuador' :\n      return 'ECU'\n   if row['Country'] == 'Iceland':\n      return 'ISL'\n   if row['Country'] == 'Guatemala':\n      return 'GTM'\n   if row['Country'] == 'United States':\n      return 'USA'\n   if row['Country'] == 'Indonesia':\n      return 'IDN'\n   if row['Country'] == 'Japan':\n      return 'JPN'\n   if row['Country'] == 'Philippines':\n      return 'PHL'\n   if row['Country'] == 'Chile':\n      return 'CHL'\n   if row['Country'] == 'Eritrea':\n      return 'ER'\n   if row['Country'] == 'Russia':\n      return 'RUS'\n   if row['Country'] == 'Peru':\n      return 'PER'\n   if row['Country'] == 'New Zealand':\n      return 'NZL'\n   if row['Country'] == 'Cape Verde':\n      return 'CPV'\n   if row['Country'] == 'Papua New Guinea':\n      return 'PNG'\n   if row['Country'] == 'Italy':\n      return 'ITA'\n   return 'Other'","3cb65a3d":"volcano['Country Codes'] = volcano.apply(lambda row: country_code(row), axis=1)","2ae40158":"elevation_avg = volcano.groupby(['Country']).mean()\nelevation_avg['Elevation']","cd932d22":"def elevation_avg (row):\n   if row['Country'] == 'Ecuador' :\n      return 5023.0\n   if row['Country'] == 'Iceland':\n      return 1589.0\n   if row['Country'] == 'Guatemala':\n      return 3156.5\n   if row['Country'] == 'United States':\n      return 1350.42\n   if row['Country'] == 'Indonesia':\n      return 2276.53\n   if row['Country'] == 'Japan':\n      return 1929.6\n   if row['Country'] == 'Philippines':\n      return 2163.0\n   if row['Country'] == 'Chile':\n      return 2119.5\n   if row['Country'] == 'Eritrea':\n      return 2218.0\n   if row['Country'] == 'Russia':\n      return 3682.0\n   if row['Country'] == 'Peru':\n      return 5672.0\n   if row['Country'] == 'New Zealand':\n      return 1111.0\n   if row['Country'] == 'Cape Verde':\n      return 2829.0\n   if row['Country'] == 'Papua New Guinea':\n      return 845.66\n   if row['Country'] == 'Italy':\n      return 1904\n   return 'Other'","f66d8587":"volcano['Elevation Average'] = volcano.apply(lambda row: elevation_avg(row), axis=1)","8d713af1":"volcano.head(5)","a87aa71d":"data = dict(\n        type = 'choropleth',\n        locations = volcano['Country Codes'],\n        z = volcano['Elevation Average'],\n        text = volcano['Country'],\n        colorbar = {'title' : 'Average Elevation in Feet'},\n      ) ","cf081dcf":"layout = dict(\n    title = 'Volcano Average Elevation',\n    geo = dict(\n        showframe = False,\n        projection = {'type':'natural earth'}\n    )\n)","f7c6980f":"choromap = go.Figure(data = [data],layout = layout)\niplot(choromap)","6bafa9c3":"## Create county codes for geo mapping","c9c9bcf8":"Lots of variables with nulls that I wont use. For the sake of this assessment I will keep these columns but I will not use them for my visualizations."}}