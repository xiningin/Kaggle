{"cell_type":{"3548f7b4":"code","67660cc7":"code","b229820e":"code","f0c01f98":"code","ad6a769d":"code","3f9a7a11":"code","82b4ae31":"code","92a44c6d":"code","b8d10acf":"code","a1db45cf":"code","d600ba14":"code","ce3f6919":"code","16d372a1":"code","d80006be":"code","301e5f58":"code","0d8355ef":"code","12ca4512":"code","be7a5b6e":"code","a44f60e7":"code","10c70a9e":"code","40cf756f":"code","e3e17474":"code","64ce01b1":"code","b7102201":"code","6d78b6c6":"code","de35703a":"code","f53580d1":"code","f8d33545":"code","9fc1dbda":"markdown","9a623bb2":"markdown","43da5521":"markdown","e7720f30":"markdown","6b87eaca":"markdown","8562fd41":"markdown","07ae6d0f":"markdown","1dbca067":"markdown","3bde88f7":"markdown","f7d272be":"markdown","159184ce":"markdown","9e661bc5":"markdown","3e790ebc":"markdown","bcf72e10":"markdown","15d301e4":"markdown","8b9d3d3e":"markdown","2271ada1":"markdown","77b774a9":"markdown","53470e77":"markdown","5b4c2ae3":"markdown","2521c416":"markdown","7d46c4e0":"markdown","f04f4c48":"markdown","f6cacf9f":"markdown","48b227ae":"markdown","ae1665f5":"markdown"},"source":{"3548f7b4":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib \n%matplotlib inline\nimport pandas_profiling as pp","67660cc7":"data = pd.read_csv(\"..\/input\/student-grade-prediction\/student-mat.csv\")","b229820e":"data.head()","f0c01f98":"data.info()","ad6a769d":"import pandas_profiling as pp\npp.ProfileReport(data)","3f9a7a11":"def bar_plot(variable):\n    var = data[variable]\n    var_c = var.value_counts()\n    \n    plt.figure(figsize= (5,5))\n    plt.bar(var_c.index, var_c)\n    plt.ylabel('Frequency')\n    plt.show()\n    print(\"{}\\n{}\".format(variable, var_c))","82b4ae31":"categorical = data.dtypes=='object'\ncategorical_list = list(categorical[categorical].index)\ncategorical_list\n\nfor i in categorical_list:\n    bar_plot(i)","92a44c6d":"sns.stripplot(x=data['sex'], y=data['G3'])\nplt.ylabel('final Grade')\nplt.show()","b8d10acf":"#1 age's dist\nsns.kdeplot(data['age'], shade=True)\nplt.show()","a1db45cf":"sns.violinplot(data=data, x='age',y='G3')\nplt.ylabel(\"final grade\")\nplt.show()","d600ba14":"sns.stripplot(data=data, x='age',y='G3', hue='sex')\nplt.show()","ce3f6919":"sns.kdeplot(data.loc[data['address']== 'U', 'G3'], shade=True)\nsns.kdeplot(data.loc[data['address']== 'R','G3'],shade= True)\nplt.legend(data['address'].unique())\nplt.show()","16d372a1":"numeric = data.dtypes=='int64'\nnumeric_list= numeric[numeric].index","d80006be":"for i in numeric_list:\n    print(i ,':', np.round(data['G3'].corr(data[i]), 2))","301e5f58":"plt.figure(figsize=(7,7))\nsns.swarmplot(x=data['failures'], y=data['G3'],palette='Purples')\nplt.show()","0d8355ef":"data['failures'].unique()","12ca4512":"plt.figure(figsize=(8,5))\nfamily_ed = data['Fedu'] + data['Medu']\nsns.boxplot(x=family_ed, y=data['G3'])\nplt.ylabel('Final Grade')\nplt.xlabel('Family Edu = (Fedu+Medu)')\nplt.show()\nsns.violinplot(x=family_ed, y=data['G3'])\nplt.xlabel('Family Edu = (Fedu+Medu)')\nplt.show()","be7a5b6e":"categorical_list","a44f60e7":"from sklearn.preprocessing import StandardScaler, LabelEncoder\n\ndef le(variable):\n    le = LabelEncoder()\n    le_variable = le.fit_transform(data[variable])\n    data[variable] = le_variable\n\nfor i in categorical_list:\n    le(i)","10c70a9e":"data.dtypes","40cf756f":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\ndata_input =data.drop(['G3'], axis=1)\ndata_target = data.G3","e3e17474":"train_input, test_input, train_target, test_target = train_test_split(data_input, data_target, test_size=.2)","64ce01b1":"from sklearn.neighbors import KNeighborsRegressor\nknr = KNeighborsRegressor()\nknr.fit(train_input, train_target)\nprint(knr.score(test_input, test_target))","b7102201":"from sklearn.model_selection import GridSearchCV\nparams = {'n_neighbors' : [1,2,3,4,5,6,7]}","6d78b6c6":"gs = GridSearchCV(knr, param_grid= params, n_jobs=-1, cv=5)\ngs.fit(train_input, train_target)\nbest_grid = gs.best_estimator_","de35703a":"#e.g.,\npred = best_grid.predict(test_input)\npd.DataFrame(pred, test_target)","f53580d1":"from sklearn.metrics import mean_absolute_error, mean_squared_error\nprint(mean_absolute_error(test_target, pred)) #\ud3c9\uade0\uc624\ucc28\nprint(mean_squared_error(test_target, pred))","f8d33545":"from sklearn.tree import DecisionTreeRegressor\ndtr= DecisionTreeRegressor()\ndtr.fit(train_input, train_target)\nprint(dtr.score(test_input, test_target))","9fc1dbda":"We can find out urban students make high scores.","9a623bb2":"* A derived variable was created and proceeded with the education level of the mother and father as the family <br>\n\n **There is a slight increase in Final Grade scores depending on the level of education of the family.**<br>\n There is a case where Family edu = 1, so I checked it with violinplot. Violinplot gives you an idea of \u200b\u200bwhat it means.","43da5521":"There are no distict diffrences between 'Sex','Final Grade'","e7720f30":"# Variable","6b87eaca":"# ML","8562fd41":"# Encoding","07ae6d0f":"Dtr","1dbca067":"KNN_R","3bde88f7":"### We want to know Student's Final Grade through ML !","f7d272be":"![image-2.png](attachment:image-2.png)","159184ce":"# Data Loading","9e661bc5":"When failures =0 , print high scores. <br>\nThis shows that students with good grades consistently lead to high final grades.","3e790ebc":"# Library","bcf72e10":"I think it is inefficient to find significant with all variables, <br>\nSo then, I will use variables with high correlation to G3","15d301e4":"1. Failures\n2. Medu\n3. Fedu","8b9d3d3e":"## Sex","2271ada1":"* Failures","77b774a9":"---","53470e77":"# Visualization ","5b4c2ae3":"\nAttribute Information:\n1. school - student's school (binary: 'GP' - Gabriel Pereira or 'MS' - Mousinho da Silveira)\n2. sex - student's sex (binary: 'F' - female or 'M' - male)\n3. age - student's age (numeric: from 15 to 22)\n4. address - student's home address type (binary: 'U' - urban or 'R' - rural)\n5. famsize - family size (binary: 'LE3' - less or equal to 3 or 'GT3' - greater than 3)\n6. Pstatus - parent's cohabitation status (binary: 'T' - living together or 'A' - apart)\n7. Medu - mother's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u00e2\u20ac\u201c 5th to 9th grade, 3 \u00e2\u20ac\u201c secondary education or 4 \u00e2\u20ac\u201c higher education)\n8. Fedu - father's education (numeric: 0 - none, 1 - primary education (4th grade), 2 \u00e2\u20ac\u201c 5th to 9th grade, 3 \u00e2\u20ac\u201c secondary education or 4 \u00e2\u20ac\u201c higher education)\n9. Mjob - mother's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n10. Fjob - father's job (nominal: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')\n11. reason - reason to choose this school (nominal: close to 'home', school 'reputation', 'course' preference or 'other')\n12. guardian - student's guardian (nominal: 'mother', 'father' or 'other')\n13. traveltime - home to school travel time (numeric: 1 - <15 min., 2 - 15 to 30 min., 3 - 30 min. to 1 hour, or 4 - >1 hour)\n14. studytime - weekly study time (numeric: 1 - <2 hours, 2 - 2 to 5 hours, 3 - 5 to 10 hours, or 4 - >10 hours)\n15. failures - number of past class failures (numeric: n if 1<=n<3, else 4)\n16. schoolsup - extra educational support (binary: yes or no)\n17. famsup - family educational support (binary: yes or no)\n18. paid - extra paid classes within the course subject (Math or Portuguese) (binary: yes or no)\n19. activities - extra-curricular activities (binary: yes or no)\n20. nursery - attended nursery school (binary: yes or no)\n21. higher - wants to take higher education (binary: yes or no)\n22. internet - Internet access at home (binary: yes or no)\n23. romantic - with a romantic relationship (binary: yes or no)\n24. famrel - quality of family relationships (numeric: from 1 - very bad to 5 - excellent)\n25. freetime - free time after school (numeric: from 1 - very low to 5 - very high)\n26. goout - going out with friends (numeric: from 1 - very low to 5 - very high)\n27. Dalc - workday alcohol consumption (numeric: from 1 - very low to 5 - very high)\n28. Walc - weekend alcohol consumption (numeric: from 1 - very low to 5 - very high)\n29. health - current health status (numeric: from 1 - very bad to 5 - very good)\n30. absences - number of school absences (numeric: from 0 to 93)\n31. G1 - score\n32. G2 - score\n33. G3 - socre","2521c416":"# EDA","7d46c4e0":"## address","f04f4c48":"---","f6cacf9f":"So then, Are there diffrences in score based on 'Age'+ 'Sex' ?","48b227ae":"There are no diffrences in this visualization.","ae1665f5":"## Age"}}