{"cell_type":{"fd91dfe8":"code","d2c9a110":"code","62438c1d":"code","1b9e8b20":"code","7a190d50":"code","c5bb2e16":"code","2a62e2f7":"code","a062a0eb":"code","0f12ee45":"code","3de858e0":"code","58a54336":"code","7ff34a53":"code","2c7eb34e":"code","a400b4c6":"code","b0e0081e":"code","25b18c2c":"code","90b51910":"code","14298f86":"code","7a231f0a":"code","26e311bf":"code","efc03661":"code","df8991df":"code","1c669de6":"code","f546b307":"code","c113f12f":"code","f249040e":"code","2b4425a7":"code","be5bc3f6":"code","24536ad4":"code","46549fbf":"markdown"},"source":{"fd91dfe8":"#Load the librarys\nimport pandas as pd #To work with dataset\nimport numpy as np #Math library\nimport seaborn as sns #Graph library that use matplot in background\nimport matplotlib.pyplot as plt #to plot some parameters in seaborn\n\n#Importing the data\ndf_credit = pd.read_csv(\"..\/input\/german-credit-data-with-risk\/german_credit_data.csv\",index_col=0)\ndf_credit.head()","d2c9a110":"#Searching for Missings,type of data and also known the shape of data\nprint(df_credit.info())","62438c1d":"df_credit.isnull().sum()\/len(df_credit)","1b9e8b20":"#Looking unique values\nprint(df_credit.nunique())","7a190d50":"sns.countplot(df_credit['Risk'])","c5bb2e16":"sns.countplot(x='Risk', hue='Job', data=df_credit)","2a62e2f7":"sns.countplot(x='Sex', hue='Risk', data=df_credit)","a062a0eb":"sns.distplot(df_credit['Age'],bins=5,kde=False)","0f12ee45":"sns.distplot(df_credit[df_credit['Risk']=='good']['Age'], bins=10, kde=False)","3de858e0":"sns.distplot(df_credit[df_credit['Risk']=='bad']['Age'], bins=10, kde=False)","58a54336":"sns.pairplot(df_credit,hue='Risk')","7ff34a53":"df_credit.fillna('Missing', inplace=True)\ndf_credit.head()","2c7eb34e":"df_credit['Job'] = df_credit['Job'].astype('category')","a400b4c6":"df_credit_dummy = pd.get_dummies(df_credit, drop_first = True)\ndf_credit_dummy.head()","b0e0081e":"X = df_credit_dummy.drop('Risk_good',axis=1)\ny = df_credit_dummy['Risk_good']","25b18c2c":"from sklearn.model_selection import train_test_split, KFold, cross_val_score # to split the data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state=42)","90b51910":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","14298f86":"log = LogisticRegression(solver = 'lbfgs', max_iter = 1000)\nlog.fit(X_train, y_train)\ndt = DecisionTreeClassifier(max_depth = 50)\ndt.fit(X_train, y_train)","7a231f0a":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, roc_curve\nfrom sklearn.model_selection import GridSearchCV","26e311bf":"y_pred_log = log.predict(X_test)\ny_pred_dt = dt.predict(X_test)","efc03661":"print (accuracy_score(y_test,y_pred_log))\nprint (confusion_matrix(y_test, y_pred_log))\nprint (classification_report(y_test, y_pred_log))","df8991df":"print (accuracy_score(y_test,y_pred_dt))\nprint (confusion_matrix(y_test, y_pred_dt))\nprint (classification_report(y_test, y_pred_dt))","1c669de6":"param_grid = { \"max_depth\" : [3,5,7,9,11,13,15,17,19,21],\n              \"max_features\" : [2,4,6,8,10]}\n\nmodel = RandomForestClassifier(random_state = 42)\n\ngrid_search = GridSearchCV(model, param_grid = param_grid, cv = 5 )","f546b307":"grid_search.fit(X_train, y_train)","c113f12f":"print(grid_search.best_score_)\nprint(grid_search.best_params_)","f249040e":"rf = RandomForestClassifier(max_depth= 7, max_features= 2)\nrf.fit(X_train, y_train)\ny_pred_rf = rf.predict(X_test)\nprint (accuracy_score(y_test,y_pred_rf))\nprint (confusion_matrix(y_test, y_pred_rf))\nprint (classification_report(y_test, y_pred_rf))","2b4425a7":"y_pred_prob = rf.predict_proba(X_test)[:,1]","be5bc3f6":"fpr, tpr, thresholds = roc_curve(y_test, y_pred_prob)","24536ad4":"# Plot ROC curve\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr, tpr)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curve')\nplt.show()","46549fbf":"<a id=\"Known\"><\/a> <br>\n# **3. First Look at the data:** \n- Looking the Type of Data\n- Null Numbers\n- Unique values\n- The first rows of our dataset"}}