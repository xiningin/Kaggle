{"cell_type":{"f04116c9":"code","c4ced18f":"code","66929ecd":"code","754e0623":"code","77380875":"code","e7705448":"code","8fdab961":"code","802bfef5":"code","cfcc390a":"code","bb2ab2e0":"code","598e3174":"code","6dca2c28":"code","e6714f35":"code","3e32db06":"code","dbaa6c11":"code","39489e3d":"code","8d11cd03":"code","88135332":"markdown","4b9719c3":"markdown","30ef6d3b":"markdown","6be75d5e":"markdown","ee17fa0f":"markdown","6401947a":"markdown"},"source":{"f04116c9":"#-*-coding:utf-8-*-\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c4ced18f":"data = pd.read_csv('..\/input\/FIFA 2018 Statistics.csv')\ndata.head(10)","66929ecd":"data.info()","754e0623":"data.corr()","77380875":"f , ax = plt.subplots(figsize=(18,18))\nsns.heatmap(data.corr() , annot=True , linewidths=1 , ax=ax)","e7705448":"data.columns","8fdab961":"data.Saves.plot(kind='line' , color='r' , label='Saves' , linewidth=1 , alpha=0.5 , grid=True , linestyle=':' )\ndata.Attempts.plot(color='b' , label='Attempts' , linewidth=1 , alpha=0.5 , grid=True , linestyle='-')\nplt.legend(loc='upper right') \nplt.xlabel('Saves')\nplt.ylabel('Attempts')\nplt.title('Saves-Attempts Relation')\nplt.show()","802bfef5":"data.plot(kind='scatter' , x='Own goals' , y='Own goal Time' , alpha=0.3 , color='blue')\nplt.xlabel('Own goals')\nplt.ylabel('Own goal Time')\nplt.title('Own goals-Own goal Time Relation')\nplt.show()","cfcc390a":"data.Attempts.plot(kind='hist' , bins=30 , figsize=(16,16))\nplt.title('Histogram of the Attempts')\nplt.show()","bb2ab2e0":"data.plot(kind='scatter' , x='Attempts' , y='Goal Scored' , alpha=0.3 ,color='red')\nplt.xlabel('Goal Attempts')\nplt.ylabel('Goal Scored')\nplt.title('Goal Attempts and Goal Scored Relation')\nplt.show()","598e3174":"#red = data[data.Red == 1]\n#red['Team']\ndata['Goal Scored'].plot(kind='hist' , bins=15 , figsize=(14,14))\nplt.title('Histogram of Gaol Scored')\nplt.show()","6dca2c28":"pass_mean = np.mean(data['Passes'])\nmore_pass_mean = data[data['Passes'] > pass_mean]\nless_pass_mean = data[data['Passes'] < pass_mean]\nmore_pass_mean['Goal Scored'].plot(kind='hist' , bins=15 , figsize=(14,14))\nless_pass_mean['Goal Scored'].plot(kind='hist' , bins=15)\nplt.title('\"blue\" >mean pass \/\/ \"orange\" <mean pass')\nplt.show()","e6714f35":"save_mean = np.mean(data['Saves'])\npenalty = data[data['PSO'] == 'Yes']\nprint('the goalkeeper saves in the mact goes penalty')\nprint(penalty)\nfracs=[penalty[penalty.Saves>save_mean]['Saves'].count() , penalty[penalty.Saves<save_mean]['Saves'].count()]\nlabels = 'more save' , 'less save'\nexplode = (0.05 , 0.05)\nplt.pie(fracs, explode=explode , labels=labels, autopct='%1.1f%%', shadow=True)\nplt.show()","3e32db06":"data['1st Goal'].plot(kind='hist' , bins=50 , figsize=(14,14))\nplt.axis([0,90,0,8])\nplt.show()","dbaa6c11":"time = data['1st Goal']\nzero_thirty = len([i for i in time if i>0 and i<=30])\nthirty_sixty = len([i for i in time if i>30 and i<=60])\nsizty_ninety = len([i for i in time if i>60 and i<=90])\nno_goal = len(time) - (zero_thirty + thirty_sixty + sizty_ninety)\nfracs=[zero_thirty , thirty_sixty , sizty_ninety , no_goal]\nlabels = '0-30' , '30-60' , '60-90' , 'no goal'\nexplode = (0 , 0.05 , 0 , 0.05)\nplt.pie(fracs, explode=explode , labels=labels, autopct='%1.2f%%', shadow=True)\nplt.show()\n","39489e3d":"teams=[]\n[teams.append(i) for i in data['Team'] if i not in teams]\non_target = [np.sum(data[data['Team'] == i]['On-Target']) for i in teams]\noff_target = [np.sum(data[data['Team'] == i]['Off-Target']) for i in teams]\nind = np.arange(len(teams))\np1 = plt.bar(ind, on_target, 0.4 , yerr=np.ones(len(teams)))\np2 = plt.bar(ind, off_target, 0.4 , bottom=on_target,yerr=np.ones(len(teams)))\nplt.ylabel('Shoots')\nplt.title('Total shoot of teams')\nplt.xticks(ind, teams , rotation=90)\nplt.yticks(np.arange(0, 81, 10))\nplt.legend((p1[0], p2[0]), ('On-Target', 'Off-Target'))","8d11cd03":"team_total_goal = [np.sum(data[data['Team'] == i]['Goal Scored']) for i in teams]\nplt.pie(team_total_goal , explode=np.ones(len(teams)) ,labels=teams, autopct='%1.2f%%', shadow=True)\nplt.show()\nmean_goal = sum(team_total_goal) \/ len(teams)\nfreq = [len([i for i in team_total_goal if i>mean_goal]) , \n        len([i for i in team_total_goal if i<mean_goal])]\nlabel = 'more than average goal' , 'less than average goal'\nplt.pie(freq , explode = [0.1 , 0] , labels=label, autopct='%1.2f%%', shadow=True)\nplt.show()","88135332":"**In this step, study on-target shoot and off-target shoot of the teams in cup.**","4b9719c3":"**In this step, study 1st goal scored time.**","30ef6d3b":"**In this step , study that which teams more than average goal and whict team less than avera team **","6be75d5e":"**In this step, if goalkeeper saves more than, do the match goes penalty? We will look at the answer to this question.**","ee17fa0f":"**And in this step , study 1st goal time interval 0-30 , 30-60 , 60-90 , no goal**","6401947a":"**In this step, calculate the average of passes. Find to make pass more than average pass and to make less then average pass. I want to calculate here,  the teams that pass more then average are have scored more goals or have scored less goals. If you make a lot of passes you score more goals in this cup. Is that true?**"}}