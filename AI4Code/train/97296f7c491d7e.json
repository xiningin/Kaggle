{"cell_type":{"f5055e0f":"code","feb7da0d":"code","3298fd44":"code","cdf92f9e":"code","29939ce9":"code","e185fc88":"code","4671a81e":"code","1e641ba6":"markdown","59e2ab3a":"markdown","9b52276e":"markdown","157a40b1":"markdown","a81599ab":"markdown"},"source":{"f5055e0f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nimport matplotlib.cm as cm\nimport matplotlib.colors as mcolors","feb7da0d":"states = pd.read_csv('..\/input\/us-tile-grid\/us_tile_grid.csv')","3298fd44":"fig, axs = plt.subplots(1, figsize=(12, 6), dpi=300)\nplt.xlim(0, 12)\nplt.ylim(0, 8)\nplt.axis('off')\naxs.set_aspect('equal')\nfor _, state in states.iterrows():\n    box = patches.Rectangle((state.column,state.row),1,1,linewidth=1,edgecolor='white',facecolor='lightgrey')\n    plt.text(state.column + 0.5, state.row + 0.5, state.code, horizontalalignment='center', verticalalignment='center', color='dimgrey')\n    axs.add_patch(box)\n\nplt.show()","cdf92f9e":"election = pd.read_csv('..\/input\/2016-american-election-dataset\/america.csv');\nelection['winner']=np.where(pd.isna(election['Trump']), 'Clinton', 'Trump')\nelection = election[['state_code', 'winner']].merge(states, how='inner', left_on='state_code', right_on='code')","29939ce9":"colors = { 'Trump': '#ff8080', 'Clinton': '#34aae0' }\nred = patches.Patch(color=colors['Trump'], label='Trump')\nblue = patches.Patch(color=colors['Clinton'], label='Clinton')\n\nfig, axs = plt.subplots(1, figsize=(12, 6), dpi=300)\nplt.xlim(0, 12)\nplt.ylim(0, 8)\nplt.axis('off')\naxs.set_aspect('equal')\nfor _, state in election.iterrows():\n    box = patches.Rectangle((state.column,state.row),1,1,linewidth=1,edgecolor='white',facecolor=colors[state.winner])\n    plt.text(state.column + 0.5, state.row + 0.5, state.code, horizontalalignment='center', verticalalignment='center', color='white', weight='bold')\n    axs.add_patch(box)\n\nplt.title('2016 US presidential election results')\nplt.legend(handles=[red, blue], handlelength=0.7)\nplt.show()","e185fc88":"covid = pd.read_csv('..\/input\/covid19-state-data\/COVID19_state.csv')\ncovid['rate']=covid['Infected']\/covid['Population']*100000\ncovid = covid[['State', 'rate']]\ncovid.columns = ['state_name', 'rate']\ncovid = covid.merge(states, how='inner', left_on='state_name', right_on='name')\nmin_rate = min(covid['rate'])\nmax_rate = max(covid['rate'])","4671a81e":"fig, axs = plt.subplots(1, figsize=(12, 6), dpi=300)\nplt.title('COVID-19 infection rate per 100k on 2020\/05\/20')\nplt.xlim(0, 12)\nplt.ylim(0, 8)\nplt.axis('off')\naxs.set_aspect('equal')\n\ncmap_type = 'coolwarm'\ncmap = cm.get_cmap(cmap_type)\nnorm = mcolors.LogNorm(vmin=min_rate, vmax=max_rate)\n\nfor _, state in covid.iterrows():\n    col = cmap(norm(state.rate))\n    box = patches.Rectangle((state.column,state.row),1,1,linewidth=1,edgecolor='white',facecolor=col)\n    plt.text(state.column + 0.5, state.row + 0.5, state.code, horizontalalignment='center', verticalalignment='center', color='white', weight='bold')\n    axs.add_patch(box)\n    \n# create a colorbar\nsm = cm.ScalarMappable(cmap=cmap_type, norm=norm)\ncb = fig.colorbar(sm, orientation='horizontal', fraction=0.046, pad=0.04)\n\nplt.show()","1e641ba6":"## Conclusion\n\nWith this notebook, you have the tools necessary for easily creating your own tile grid map. Have fun!","59e2ab3a":"# US Tile Grid Map\n\nThis is a starter notebook for creating tile grid maps of US states including DC. A tile grid map is used to display data by states in a visually cleaner way than a traditional to-scale map.\n\nThe tile grid used here is based on the [New York Times](https:\/\/archive.nytimes.com\/www.nytimes.com\/interactive\/2013\/06\/26\/us\/scotus-gay-marriage.html) layout. An overview of existing layouts can be found [here](https:\/\/kristw.medium.com\/whose-grid-map-is-better-quality-metrics-for-grid-map-layouts-e3d6075d9e80).","9b52276e":"## Empty tile grid map\n\nThe dataset used contains the followind columns:\n* **code**: The two-letter state code\n* **name**: The name of the state\n* **row**: Horizontal position within the grid\n* **column**: Vertical position within the grid\n\nThe grid is 8 rows x 12 columns. Row and column names start at 0. The origin is in the bottom-left corner.","157a40b1":"## Tile grid map with continuous values\n\nA tile grid map can also be used to plot continuous values. As an example, let's plot the infection rates of COVID-19 across US as of late May.","a81599ab":"## Tile grid map with discrete values\n\nLet's demonstrate how a tile grid map works with discrete values. As an example, we take the results of the 2016 presidential elections."}}