{"cell_type":{"44d3b09c":"code","ccc160e2":"code","d40b1549":"code","83d1d509":"code","d42ff172":"code","0c31683f":"code","07dfb331":"code","a34e0e9e":"code","dba4916a":"code","1ca909b4":"markdown","add52d90":"markdown","5058a94d":"markdown","cd58e294":"markdown"},"source":{"44d3b09c":"%reload_ext autoreload\n%autoreload 2\nimport os\nimport platform\nprint(\"Python Version:\", platform.python_version())\n\nimport time\nnotebookstart = time.time()\n\nfrom contextlib import contextmanager\nimport gc\nimport pprint\n\nimport numpy as np\nimport pandas as pd\n\n# Viz\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Modeling\nfrom sklearn.metrics import roc_auc_score, roc_curve\nfrom sklearn.model_selection import KFold\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn import metrics\nimport catboost\nfrom catboost import Pool, CatBoostClassifier, cv #CatBoost\nfrom sklearn.model_selection import train_test_split\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nseed = 24\nnp.random.seed(seed)\n\npd.set_option('display.max_columns', 500)\npd.options.display.max_rows = 999\npd.set_option('max_colwidth', 500)\n\nprint(\"Catboost version:\", catboost.__version__)","ccc160e2":"print(\"Define DF Schema..\")\n\ntarget_var = 'isFraud'\n\nschema = {\n    \"TransactionDT\":       \"int32\",\n    \"TransactionAmt\":    \"float32\",\n    \"ProductCD\":          \"object\",\n    \"card1\":               \"int16\",\n    \"card2\":             \"float32\",\n    \"card3\":             \"float32\",\n    \"card4\":              \"object\",\n    \"card5\":             \"float32\",\n    \"card6\":              \"object\",\n    \"addr1\":             \"float32\",\n    \"addr2\":             \"float32\",\n    \"dist1\":             \"float32\",\n    \"dist2\":             \"float32\",\n    \"P_emaildomain\":      \"object\",\n    \"R_emaildomain\":      \"object\",\n    \"C1\":                \"float32\",\n    \"C2\":                \"float32\",\n    \"C3\":                \"float32\",\n    \"C4\":                \"float32\",\n    \"C5\":                \"float32\",\n    \"C6\":                \"float32\",\n    \"C7\":                \"float32\",\n    \"C8\":                \"float32\",\n    \"C9\":                \"float32\",\n    \"C10\":               \"float32\",\n    \"C11\":               \"float32\",\n    \"C12\":               \"float32\",\n    \"C13\":               \"float32\",\n    \"C14\":               \"float32\",\n    \"D1\":                \"float32\",\n    \"D2\":                \"float32\",\n    \"D3\":                \"float32\",\n    \"D4\":                \"float32\",\n    \"D5\":                \"float32\",\n    \"D6\":                \"float32\",\n    \"D7\":                \"float32\",\n    \"D8\":                \"float32\",\n    \"D9\":                \"float32\",\n    \"D10\":               \"float32\",\n    \"D11\":               \"float32\",\n    \"D12\":               \"float32\",\n    \"D13\":               \"float32\",\n    \"D14\":               \"float32\",\n    \"D15\":               \"float32\",\n    \"M1\":                 \"object\",\n    \"M2\":                 \"object\",\n    \"M3\":                 \"object\",\n    \"M4\":                 \"object\",\n    \"M5\":                 \"object\",\n    \"M6\":                 \"object\",\n    \"M7\":                 \"object\",\n    \"M8\":                 \"object\",\n    \"M9\":                 \"object\",\n    \"V1\":                \"float32\",\n    \"V2\":                \"float32\",\n    \"V3\":                \"float32\",\n    \"V4\":                \"float32\",\n    \"V5\":                \"float32\",\n    \"V6\":                \"float32\",\n    \"V7\":                \"float32\",\n    \"V8\":                \"float32\",\n    \"V9\":                \"float32\",\n    \"V10\":               \"float32\",\n    \"V11\":               \"float32\",\n    \"V12\":               \"float32\",\n    \"V13\":               \"float32\",\n    \"V14\":               \"float32\",\n    \"V15\":               \"float32\",\n    \"V16\":               \"float32\",\n    \"V17\":               \"float32\",\n    \"V18\":               \"float32\",\n    \"V19\":               \"float32\",\n    \"V20\":               \"float32\",\n    \"V21\":               \"float32\",\n    \"V22\":               \"float32\",\n    \"V23\":               \"float32\",\n    \"V24\":               \"float32\",\n    \"V25\":               \"float32\",\n    \"V26\":               \"float32\",\n    \"V27\":               \"float32\",\n    \"V28\":               \"float32\",\n    \"V29\":               \"float32\",\n    \"V30\":               \"float32\",\n    \"V31\":               \"float32\",\n    \"V32\":               \"float32\",\n    \"V33\":               \"float32\",\n    \"V34\":               \"float32\",\n    \"V35\":               \"float32\",\n    \"V36\":               \"float32\",\n    \"V37\":               \"float32\",\n    \"V38\":               \"float32\",\n    \"V39\":               \"float32\",\n    \"V40\":               \"float32\",\n    \"V41\":               \"float32\",\n    \"V42\":               \"float32\",\n    \"V43\":               \"float32\",\n    \"V44\":               \"float32\",\n    \"V45\":               \"float32\",\n    \"V46\":               \"float32\",\n    \"V47\":               \"float32\",\n    \"V48\":               \"float32\",\n    \"V49\":               \"float32\",\n    \"V50\":               \"float32\",\n    \"V51\":               \"float32\",\n    \"V52\":               \"float32\",\n    \"V53\":               \"float32\",\n    \"V54\":               \"float32\",\n    \"V55\":               \"float32\",\n    \"V56\":               \"float32\",\n    \"V57\":               \"float32\",\n    \"V58\":               \"float32\",\n    \"V59\":               \"float32\",\n    \"V60\":               \"float32\",\n    \"V61\":               \"float32\",\n    \"V62\":               \"float32\",\n    \"V63\":               \"float32\",\n    \"V64\":               \"float32\",\n    \"V65\":               \"float32\",\n    \"V66\":               \"float32\",\n    \"V67\":               \"float32\",\n    \"V68\":               \"float32\",\n    \"V69\":               \"float32\",\n    \"V70\":               \"float32\",\n    \"V71\":               \"float32\",\n    \"V72\":               \"float32\",\n    \"V73\":               \"float32\",\n    \"V74\":               \"float32\",\n    \"V75\":               \"float32\",\n    \"V76\":               \"float32\",\n    \"V77\":               \"float32\",\n    \"V78\":               \"float32\",\n    \"V79\":               \"float32\",\n    \"V80\":               \"float32\",\n    \"V81\":               \"float32\",\n    \"V82\":               \"float32\",\n    \"V83\":               \"float32\",\n    \"V84\":               \"float32\",\n    \"V85\":               \"float32\",\n    \"V86\":               \"float32\",\n    \"V87\":               \"float32\",\n    \"V88\":               \"float32\",\n    \"V89\":               \"float32\",\n    \"V90\":               \"float32\",\n    \"V91\":               \"float32\",\n    \"V92\":               \"float32\",\n    \"V93\":               \"float32\",\n    \"V94\":               \"float32\",\n    \"V95\":               \"float32\",\n    \"V96\":               \"float32\",\n    \"V97\":               \"float32\",\n    \"V98\":               \"float32\",\n    \"V99\":               \"float32\",\n    \"V100\":              \"float32\",\n    \"V101\":              \"float32\",\n    \"V102\":              \"float32\",\n    \"V103\":              \"float32\",\n    \"V104\":              \"float32\",\n    \"V105\":              \"float32\",\n    \"V106\":              \"float32\",\n    \"V107\":              \"float32\",\n    \"V108\":              \"float32\",\n    \"V109\":              \"float32\",\n    \"V110\":              \"float32\",\n    \"V111\":              \"float32\",\n    \"V112\":              \"float32\",\n    \"V113\":              \"float32\",\n    \"V114\":              \"float32\",\n    \"V115\":              \"float32\",\n    \"V116\":              \"float32\",\n    \"V117\":              \"float32\",\n    \"V118\":              \"float32\",\n    \"V119\":              \"float32\",\n    \"V120\":              \"float32\",\n    \"V121\":              \"float32\",\n    \"V122\":              \"float32\",\n    \"V123\":              \"float32\",\n    \"V124\":              \"float32\",\n    \"V125\":              \"float32\",\n    \"V126\":              \"float32\",\n    \"V127\":              \"float32\",\n    \"V128\":              \"float32\",\n    \"V129\":              \"float32\",\n    \"V130\":              \"float32\",\n    \"V131\":              \"float32\",\n    \"V132\":              \"float32\",\n    \"V133\":              \"float32\",\n    \"V134\":              \"float32\",\n    \"V135\":              \"float32\",\n    \"V136\":              \"float32\",\n    \"V137\":              \"float32\",\n    \"V138\":              \"float32\",\n    \"V139\":              \"float32\",\n    \"V140\":              \"float32\",\n    \"V141\":              \"float32\",\n    \"V142\":              \"float32\",\n    \"V143\":              \"float32\",\n    \"V144\":              \"float32\",\n    \"V145\":              \"float32\",\n    \"V146\":              \"float32\",\n    \"V147\":              \"float32\",\n    \"V148\":              \"float32\",\n    \"V149\":              \"float32\",\n    \"V150\":              \"float32\",\n    \"V151\":              \"float32\",\n    \"V152\":              \"float32\",\n    \"V153\":              \"float32\",\n    \"V154\":              \"float32\",\n    \"V155\":              \"float32\",\n    \"V156\":              \"float32\",\n    \"V157\":              \"float32\",\n    \"V158\":              \"float32\",\n    \"V159\":              \"float32\",\n    \"V160\":              \"float32\",\n    \"V161\":              \"float32\",\n    \"V162\":              \"float32\",\n    \"V163\":              \"float32\",\n    \"V164\":              \"float32\",\n    \"V165\":              \"float32\",\n    \"V166\":              \"float32\",\n    \"V167\":              \"float32\",\n    \"V168\":              \"float32\",\n    \"V169\":              \"float32\",\n    \"V170\":              \"float32\",\n    \"V171\":              \"float32\",\n    \"V172\":              \"float32\",\n    \"V173\":              \"float32\",\n    \"V174\":              \"float32\",\n    \"V175\":              \"float32\",\n    \"V176\":              \"float32\",\n    \"V177\":              \"float32\",\n    \"V178\":              \"float32\",\n    \"V179\":              \"float32\",\n    \"V180\":              \"float32\",\n    \"V181\":              \"float32\",\n    \"V182\":              \"float32\",\n    \"V183\":              \"float32\",\n    \"V184\":              \"float32\",\n    \"V185\":              \"float32\",\n    \"V186\":              \"float32\",\n    \"V187\":              \"float32\",\n    \"V188\":              \"float32\",\n    \"V189\":              \"float32\",\n    \"V190\":              \"float32\",\n    \"V191\":              \"float32\",\n    \"V192\":              \"float32\",\n    \"V193\":              \"float32\",\n    \"V194\":              \"float32\",\n    \"V195\":              \"float32\",\n    \"V196\":              \"float32\",\n    \"V197\":              \"float32\",\n    \"V198\":              \"float32\",\n    \"V199\":              \"float32\",\n    \"V200\":              \"float32\",\n    \"V201\":              \"float32\",\n    \"V202\":              \"float32\",\n    \"V203\":              \"float32\",\n    \"V204\":              \"float32\",\n    \"V205\":              \"float32\",\n    \"V206\":              \"float32\",\n    \"V207\":              \"float32\",\n    \"V208\":              \"float32\",\n    \"V209\":              \"float32\",\n    \"V210\":              \"float32\",\n    \"V211\":              \"float32\",\n    \"V212\":              \"float32\",\n    \"V213\":              \"float32\",\n    \"V214\":              \"float32\",\n    \"V215\":              \"float32\",\n    \"V216\":              \"float32\",\n    \"V217\":              \"float32\",\n    \"V218\":              \"float32\",\n    \"V219\":              \"float32\",\n    \"V220\":              \"float32\",\n    \"V221\":              \"float32\",\n    \"V222\":              \"float32\",\n    \"V223\":              \"float32\",\n    \"V224\":              \"float32\",\n    \"V225\":              \"float32\",\n    \"V226\":              \"float32\",\n    \"V227\":              \"float32\",\n    \"V228\":              \"float32\",\n    \"V229\":              \"float32\",\n    \"V230\":              \"float32\",\n    \"V231\":              \"float32\",\n    \"V232\":              \"float32\",\n    \"V233\":              \"float32\",\n    \"V234\":              \"float32\",\n    \"V235\":              \"float32\",\n    \"V236\":              \"float32\",\n    \"V237\":              \"float32\",\n    \"V238\":              \"float32\",\n    \"V239\":              \"float32\",\n    \"V240\":              \"float32\",\n    \"V241\":              \"float32\",\n    \"V242\":              \"float32\",\n    \"V243\":              \"float32\",\n    \"V244\":              \"float32\",\n    \"V245\":              \"float32\",\n    \"V246\":              \"float32\",\n    \"V247\":              \"float32\",\n    \"V248\":              \"float32\",\n    \"V249\":              \"float32\",\n    \"V250\":              \"float32\",\n    \"V251\":              \"float32\",\n    \"V252\":              \"float32\",\n    \"V253\":              \"float32\",\n    \"V254\":              \"float32\",\n    \"V255\":              \"float32\",\n    \"V256\":              \"float32\",\n    \"V257\":              \"float32\",\n    \"V258\":              \"float32\",\n    \"V259\":              \"float32\",\n    \"V260\":              \"float32\",\n    \"V261\":              \"float32\",\n    \"V262\":              \"float32\",\n    \"V263\":              \"float32\",\n    \"V264\":              \"float32\",\n    \"V265\":              \"float32\",\n    \"V266\":              \"float32\",\n    \"V267\":              \"float32\",\n    \"V268\":              \"float32\",\n    \"V269\":              \"float32\",\n    \"V270\":              \"float32\",\n    \"V271\":              \"float32\",\n    \"V272\":              \"float32\",\n    \"V273\":              \"float32\",\n    \"V274\":              \"float32\",\n    \"V275\":              \"float32\",\n    \"V276\":              \"float32\",\n    \"V277\":              \"float32\",\n    \"V278\":              \"float32\",\n    \"V279\":              \"float32\",\n    \"V280\":              \"float32\",\n    \"V281\":              \"float32\",\n    \"V282\":              \"float32\",\n    \"V283\":              \"float32\",\n    \"V284\":              \"float32\",\n    \"V285\":              \"float32\",\n    \"V286\":              \"float32\",\n    \"V287\":              \"float32\",\n    \"V288\":              \"float32\",\n    \"V289\":              \"float32\",\n    \"V290\":              \"float32\",\n    \"V291\":              \"float32\",\n    \"V292\":              \"float32\",\n    \"V293\":              \"float32\",\n    \"V294\":              \"float32\",\n    \"V295\":              \"float32\",\n    \"V296\":              \"float32\",\n    \"V297\":              \"float32\",\n    \"V298\":              \"float32\",\n    \"V299\":              \"float32\",\n    \"V300\":              \"float32\",\n    \"V301\":              \"float32\",\n    \"V302\":              \"float32\",\n    \"V303\":              \"float32\",\n    \"V304\":              \"float32\",\n    \"V305\":              \"float32\",\n    \"V306\":              \"float32\",\n    \"V307\":              \"float32\",\n    \"V308\":              \"float32\",\n    \"V309\":              \"float32\",\n    \"V310\":              \"float32\",\n    \"V311\":              \"float32\",\n    \"V312\":              \"float32\",\n    \"V313\":              \"float32\",\n    \"V314\":              \"float32\",\n    \"V315\":              \"float32\",\n    \"V316\":              \"float32\",\n    \"V317\":              \"float32\",\n    \"V318\":              \"float32\",\n    \"V319\":              \"float32\",\n    \"V320\":              \"float32\",\n    \"V321\":              \"float32\",\n    \"V322\":              \"float32\",\n    \"V323\":              \"float32\",\n    \"V324\":              \"float32\",\n    \"V325\":              \"float32\",\n    \"V326\":              \"float32\",\n    \"V327\":              \"float32\",\n    \"V328\":              \"float32\",\n    \"V329\":              \"float32\",\n    \"V330\":              \"float32\",\n    \"V331\":              \"float32\",\n    \"V332\":              \"float32\",\n    \"V333\":              \"float32\",\n    \"V334\":              \"float32\",\n    \"V335\":              \"float32\",\n    \"V336\":              \"float32\",\n    \"V337\":              \"float32\",\n    \"V338\":              \"float32\",\n    \"V339\":              \"float32\",\n    \"id_01\":             \"float32\",\n    \"id_02\":             \"float32\",\n    \"id_03\":             \"float32\",\n    \"id_04\":             \"float32\",\n    \"id_05\":             \"float32\",\n    \"id_06\":             \"float32\",\n    \"id_07\":             \"float32\",\n    \"id_08\":             \"float32\",\n    \"id_09\":             \"float32\",\n    \"id_10\":             \"float32\",\n    \"id_11\":             \"float32\",\n    \"id_12\":              \"object\",\n    \"id_13\":             \"float32\",\n    \"id_14\":             \"float32\",\n    \"id_15\":              \"object\",\n    \"id_16\":              \"object\",\n    \"id_17\":             \"float32\",\n    \"id_18\":             \"float32\",\n    \"id_19\":             \"float32\",\n    \"id_20\":             \"float32\",\n    \"id_21\":             \"float32\",\n    \"id_22\":             \"float32\",\n    \"id_23\":              \"object\",\n    \"id_24\":             \"float32\",\n    \"id_25\":             \"float32\",\n    \"id_26\":             \"float32\",\n    \"id_27\":              \"object\",\n    \"id_28\":              \"object\",\n    \"id_29\":              \"object\",\n    \"id_30\":              \"object\",\n    \"id_31\":              \"object\",\n    \"id_32\":             \"float32\",\n    \"id_33\":              \"object\",\n    \"id_34\":              \"object\",\n    \"id_35\":              \"object\",\n    \"id_36\":              \"object\",\n    \"id_37\":              \"object\",\n    \"id_38\":              \"object\",\n    \"DeviceType\":         \"object\",\n    \"DeviceInfo\":         \"object\",\n    \"is_fraud\":\t\t\t  \"int8\"\n}","d40b1549":"@contextmanager\ndef timer(name):\n    \"\"\"\n    Time Each Process\n    \"\"\"\n    t0 = time.time()\n    yield\n    print('\\n[{}] done in {} Minutes\\n'.format(name, round((time.time() - t0)\/60,2)))\n\ndef fraud_preprocessing(debug = None):\n    print(\"Starting Pre-Processing..\")\n    with timer(\"Load Tables\"):\n        train_transaction = pd.read_csv('..\/input\/train_transaction.csv',\n                                        index_col='TransactionID', nrows= debug, dtype = schema)\n        test_transaction = pd.read_csv('..\/input\/test_transaction.csv',\n                                       index_col='TransactionID', nrows= debug, dtype = schema)\n\n        train_identity = pd.read_csv('..\/input\/train_identity.csv', index_col='TransactionID')\n        test_identity = pd.read_csv('..\/input\/test_identity.csv', index_col='TransactionID')\n\n        sample_submission = pd.read_csv('..\/input\/sample_submission.csv', index_col='TransactionID')\n\n    with timer(\"Merge Tables\"):\n        train = train_transaction.merge(train_identity, how='left', left_index=True, right_index=True)\n        test = test_transaction.merge(test_identity, how='left', left_index=True, right_index=True)\n\n        print(\"Train Shape: {} Rows, {} Columns\".format(*train.shape))\n        print(\"Test Shape: {} Rows, {} Columns\".format(*test.shape))\n\n        y = train[target_var].copy()\n        del train_transaction, train_identity, test_transaction, test_identity\n\n        traindex = train.index\n        testdex = test.index\n\n        df = pd.concat([train.drop(target_var,axis=1),test],axis = 0)\n        del train, test\n        \n    with timer(\"Feature Engineering\"):\n        print(\"** crickets **\")\n\n    with timer(\"Label Encode\"):\n        # Label Encoding\n        for f in df.columns:\n            if df[f].dtype=='object': \n                lbl = preprocessing.LabelEncoder()\n                df[f] = lbl.fit_transform(df[f].astype(str))\n#                 df[f] = df[f].astype('category')\n        print(\"Total Shape: {} Rows, {} Columns\".format(*df.shape))\n                \n    return df, y, traindex, testdex","83d1d509":"df, y, traindex, testdex = fraud_preprocessing(debug = None)\n\nX = df.loc[traindex,:]\nfeat_names = X.columns.tolist()\ntest = df.loc[testdex,:]\ndel df ; gc.collect()","d42ff172":"y.value_counts(normalize=True)","0c31683f":"model = CatBoostClassifier(\n    task_type='GPU',\n    eval_metric='AUC',\n    loss_function='Logloss', \n    learning_rate = 0.1,\n    iterations = 10000, \n    max_leaves=48,\n    od_wait = 100,\n    max_depth=6,\n    class_weights=[0.05, 0.95],\n    metric_period = 100,\n    silent=True)","07dfb331":"feature_size_SE = []\nfor total_data_size in list(np.arange(.1,1,.075).round(2)):\n    model_timer = time.time()\n    # Randomly Select Subset\n    sample = X.sample(int(X.shape[0]*total_data_size)).index\n    catpool = Pool(X.loc[sample,:],y.loc[sample])\n    cv_data = cv(catpool,model.get_params(),fold_count=4)\n    model_runtime = (time.time() - model_timer)\/60\n\n    # Get Metrics\n    best_cat_iterations = cv_data['test-AUC-mean'].idxmax()\n    \n    feature_size_SE.append(\n        [len(sample)] +\n        [model_runtime] +\n        list(cv_data.iloc[best_cat_iterations,:].values)\n    )\n    print(\"{} % Experiment complete\".format(int(total_data_size*100)))","a34e0e9e":"data_size_experiment_df = pd.DataFrame(feature_size_SE,\n                columns = ['observation_count', 'runtime_minutes'] + cv_data.columns.tolist())\ndata_size_experiment_df['observation_count'] = data_size_experiment_df['observation_count']\/1000\n\n# Plot\nf, ax = plt.subplots(1,4,figsize=[16,5])\nax[0].errorbar(data_size_experiment_df.observation_count, data_size_experiment_df['test-AUC-mean'],\n               yerr=data_size_experiment_df['test-AUC-std'], label='both limits (default)')\nax[0].set_title(\"AUC vs.\/nRow Count in Thousands\")\nax[0].set_xlabel(\"Row Count in Thousands\")\nax[0].set_ylabel(\"AUC\")\nax[1].errorbar(data_size_experiment_df.observation_count, data_size_experiment_df['test-Logloss-mean'],\n               yerr=data_size_experiment_df['test-Logloss-std'], label='both limits (default)', fmt =  'r-')\nax[1].set_title(\"LogLoss vs. Row Count in Thousands\")\nax[1].set_xlabel(\"Row Count in Thousands\")\nax[1].set_ylabel(\"LogLoss\")\nax[2].plot(data_size_experiment_df.observation_count, data_size_experiment_df.iterations, 'xg-')\nax[2].set_title(\"Boosting Rounds vs.\/nRow Count in Thousands\")\nax[2].set_xlabel(\"Row Count in Thousands\")\nax[2].set_ylabel(\"Boosting Rounds\")\n\nax[3].set_title(\"Runtime vs.\/nRow Count in Thousands\")\nax[3].plot(data_size_experiment_df.observation_count, data_size_experiment_df.runtime_minutes, 'xk-')\nax[3].set_ylabel(\"Runtime in Minutes\")\nax[3].set_xlabel('Row Count in Thousands')\n\nplt.tight_layout(pad=0)","dba4916a":"print(\"Notebook Runtime: %0.2f Minutes\"%((time.time() - notebookstart)\/60))","1ca909b4":"#### Prepare Data","add52d90":"#### Plot","5058a94d":"### CatBoost Model","cd58e294":"# AUC Performance vs. Training Size - GPU CatBoost  \n_By Nick Brooks_\n\nV1 - 28\/07\/2019 - First Commit\n\n**Aim:** <br>\nInvestigate the relationship between AUC performance and the number of Data Rows for GPU catboost cross validated with 4 folds. The data subset is randomly taken from the whole.\n\nInspired by a recent PyData Talk: <br>\n[Anna Veronika Dorogush: Mastering gradient boosting with CatBoost | PyData London 2019](https:\/\/www.youtube.com\/watch?v=usdEWSDisS0)\n\nOther Links: <Br>\n[CatBoost Website](https:\/\/catboost.ai\/)"}}