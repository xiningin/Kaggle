{"cell_type":{"a24e735c":"code","ac032044":"code","55d758ee":"code","9ef504d0":"code","820f5e00":"code","1950cbbc":"code","81240753":"code","5f898cc1":"code","a657db6d":"code","e826ef1b":"code","4934bfba":"code","6aa3bdb8":"code","23bad05e":"code","459e9096":"code","bb109de4":"code","9dc4a877":"code","ed6403d1":"code","b129aea9":"markdown","4a540653":"markdown","74c79245":"markdown","6fc1960c":"markdown","c39e7bff":"markdown","d33150f5":"markdown","b0134bc2":"markdown","b516c97d":"markdown","6511f20f":"markdown","9643bcbf":"markdown","c5acc2b7":"markdown","f26da50a":"markdown","6e46a6f4":"markdown","a13748db":"markdown","e8f6795e":"markdown","d4aaf040":"markdown","12b5237b":"markdown","6069dd57":"markdown","14177aae":"markdown","c04049bb":"markdown","8f574c56":"markdown","5ed9f404":"markdown","5a294da0":"markdown","3c4ca01c":"markdown","5b9bafde":"markdown"},"source":{"a24e735c":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","ac032044":"print(os.listdir(\"..\/input\"))","55d758ee":"data_path_training = '..\/input\/train.csv'\ndata_path_testing = '..\/input\/test.csv'\n\ndata_to_train = pd.read_csv(data_path_training)","9ef504d0":"print(data_to_train.head())","820f5e00":"df_train = pd.DataFrame(data_to_train)\ndf_train.describe()","1950cbbc":"df_train_table_store_item_date = pd.pivot_table(df_train,index=['store'],columns=['item','date'],values='sales')\ndf_train_table_store_item_date.head(10)","81240753":"df_train_table_store_date_item = pd.pivot_table(df_train,index=['store'],columns=['date','item'],values='sales')\ndf_train_table_store_date_item.head()","5f898cc1":"plt.figure(figsize=(15,5)) #(width,height)\n\nplt.subplot(1,3,1) #(row,col,index_in_this_matrix)\nstore_sales = pd.pivot_table(df_train,index=['store'],values='sales',aggfunc=[np.max])\nplt.grid()\n#plt.grid(color='r', linestyle='-', linewidth=1)\nplt.title(\"Max Sales per store\")\nplt.plot(store_sales, 'ro')\n\nplt.subplot(1,3,2) #(row,col,index_in_this_matrix)\nstore_sales = pd.pivot_table(df_train,index=['store'],values='sales',aggfunc=[np.mean])\nplt.grid()\nplt.title(\"Average Sales per store\")\nplt.plot(store_sales, 'gs')\n\nplt.subplot(1,3,3) #(row,col,index_in_this_matrix)\nplt.grid()\nplt.title(\"Sale hits per store\")\nplt.scatter(df_train.store,df_train.sales)","a657db6d":"bins = [10, 50, 100, 150, 200, 250]\nplt.grid()\nplt.hist(df_train.sales, bins, normed=1, histtype='bar', rwidth=0.8)","e826ef1b":"pivot_table_store_sales = pd.pivot_table(df_train,index=[\"store\"],values=[\"sales\"],aggfunc=[np.sum,np.mean])\nprint(pivot_table_store_sales)\nprint()\nprint(pivot_table_store_sales.max(axis=0))\n\n# plt.grid()\n# plt.plot(pivot_table_store_sales[\"sum\"], 'ro')\n\npivot_table_store_sales[\"sum\"].plot(kind=\"bar\",legend=\"Sum\", figsize=(20,5)).grid()","4934bfba":"pivot_table_item_sales = pd.pivot_table(df_train,index=[\"item\"],values=[\"sales\"],aggfunc=[np.sum,np.mean])\nprint(pivot_table_item_sales.head(10))\n\n\n# plt.grid()\n# plt.plot(pivot_table_item_sales[\"sum\"], 'bs')\n\npivot_table_item_sales[\"sum\"].plot(kind=\"bar\",legend=\"Sum\", figsize=(30,10)).grid()","6aa3bdb8":"time_plot_store_performance = pd.pivot_table(df_train,index=['date'],columns=['store',],values='sales',aggfunc=np.sum)\ntime_plot_store_performance.head(15)","23bad05e":"time_plot_items_performance = pd.pivot_table(df_train,index=['date'],columns=['item',],values='sales',aggfunc=np.sum)\ntime_plot_items_performance.head()","459e9096":"color_map = ['C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9']\n# for store in range(10):\n#     performance_of_store = pd.pivot_table(df_train[df_train.store==(store+1)],index=['date'],columns=['store',],values='sales',aggfunc=np.sum)\n#     plt.plot(performance_of_store, color=color_map[store])\n\nplt.figure(figsize=(30,10)) #(width,height)\nplt.title(\"Store'sale pattern\")\n# plt.grid()\nfor store in range(10):\n    performance_of_store = pd.pivot_table(df_train[df_train.store==(store+1)],index=['date'],columns=['store',],values='sales',aggfunc=np.sum)\n    plt.plot(performance_of_store, color=color_map[store],label=\"Store-\"+str(store+1))\nplt.legend(loc='upper left', shadow=True)","bb109de4":"plt.figure(figsize=(30,10)) #(width,height)\nplt.title(\"Item's sale pattern\")\n# plt.grid()\nfor item in range(10): #For now lets look at 10 items\n    performance_of_item = pd.pivot_table(df_train[df_train.item==(item+1)],index=['date'],columns=['item',],values='sales',aggfunc=np.sum)\n    plt.plot(performance_of_item, color=color_map[item%10],label=\"Item-\"+str(item+1))\nplt.legend(loc='upper left', shadow=True)","9dc4a877":"store_id = 5\nsale_performance_of_store = pd.pivot_table(df_train[df_train.store==store_id],index=['date'],columns=['store',],values='sales',aggfunc=np.sum)\nplt.title(\"Store-\" + str(store_id) + \"'s sale pattern\")\nplt.plot(sale_performance_of_store, 'bo',label=\"Store-\"+str(store_id))","ed6403d1":"item_id = 2\nsale_performance_of_item = pd.pivot_table(df_train[df_train.item==item_id],index=['date'],columns=['item',],values='sales',aggfunc=np.sum)\nplt.title(\"Item-\" + str(item_id) + \"'s sale pattern\")\nplt.plot(sale_performance_of_item, 'go',label=\"Item-\"+str(item_id))","b129aea9":"#### 1. Sales variation over store :","4a540653":"### All store's performance","74c79245":"Clearly, 2nd store is the topper and 7th store is the least revenue generating one","6fc1960c":"Majority of the time, store-2 is the top performer and store-7 is the most under performer w.r.t sale.","c39e7bff":"### 1. Store wise total and average sales:","d33150f5":"### 2. Item wise total and average sales:","b0134bc2":"## More insights:","b516c97d":"### List the directories and files","6511f20f":"Overall, store 2 is the topper here.","9643bcbf":"### 2. Item's sales performance over time","c5acc2b7":"Well, both store & item has simmilar pattern. Further, each store and each item has simmilar pattern of sale.\n<br>\n<br>\n<br>\n> > *Planning to create another kernel with plotly for better visual effects of graphs ;)*","f26da50a":"### Let's plot columns and see the sale pattern over the time..","6e46a6f4":"**2. store Vs date Vs item :**","a13748db":"### Get a glimpse of attributes","e8f6795e":"### Imports","d4aaf040":"### Take a look at summation..","12b5237b":"### Load training  data set","6069dd57":"### 1. Store's sales performance over time","14177aae":"## Exploring 5 years of store-item sales data to predict sales.\n\nLets get started..","c04049bb":"#### 2. Variation in scale of the sale transacted ","8f574c56":"### Individual pattern of item's sale","5ed9f404":"There is a total of 10 stores &  50 items, and a maximum sale entry is 231. Except this, there is nothing much here..","5a294da0":"### Individual pattern of store's sale","3c4ca01c":"### All item's performance","5b9bafde":"### Lets view couple of dicing versions of the table..\n**1. store Vs item Vs date :**"}}