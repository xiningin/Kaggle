{"cell_type":{"a906d6c2":"code","a685f0b8":"code","687d2a7c":"code","bce0f779":"code","5540c051":"code","2a36a834":"code","e990cd52":"code","92f9a3fc":"code","4afc1781":"code","0b09a188":"code","44e95da5":"code","8f70a9a3":"code","bdd8f3fc":"code","410f41d9":"code","43a3beed":"code","97664a39":"code","9e546746":"markdown","e19741be":"markdown","aa77a28b":"markdown","e04d3da0":"markdown","5fd20d05":"markdown","c745bb25":"markdown","a1940b8f":"markdown"},"source":{"a906d6c2":"import numpy as np\nimport pandas as pd\nfrom os import listdir","a685f0b8":"listdir('\/kaggle\/input')","687d2a7c":"data = pd.read_csv('\/kaggle\/input\/wikipedia-movie-plots\/wiki_movie_plots_deduped.csv')","bce0f779":"data.head()","5540c051":"data.drop(columns=set(data.columns)-{'Plot', 'Genre'}, inplace=True)\ndata.rename(str.lower, axis='columns', inplace=True)","2a36a834":"data.info()","e990cd52":"data['plot'] = data['plot'].map(str.lower)","92f9a3fc":"genres_count = data.groupby('genre').size()\ngenres_count = genres_count[genres_count >= 100]\ndata = pd.merge(data, pd.DataFrame(genres_count).drop(columns=[0]), left_on='genre', right_index=True)","4afc1781":"data.info()","0b09a188":"data['genre'].unique()","44e95da5":"from collections import ChainMap\ndefaults = dict(map(lambda genre: (genre, genre), data['genre'].unique()))\nparser = dict(ChainMap({\n    'romantic drama': 'romantic,drama',\n    'crime drama': 'crime,drama',\n    'comedy drama': 'comedy,drama',\n    'romantic comedy': 'romantic,comedy',\n    'musical comedy': 'musical,comedy',\n    'comedy, drama': 'comedy,drama',\n    'science fiction': 'sci-fi',\n    'comedy-drama': 'comedy,drama',\n    'romance': 'romantic'\n}, defaults))\ndata['genre'] = data['genre'].map(parser)","8f70a9a3":"data['genre'].unique()","bdd8f3fc":"from itertools import chain\ncategories = frozenset(chain.from_iterable(data['genre'].map(lambda genre: genre.split(','))))\n\ngenres = pd.DataFrame(dict(map(lambda category: (category, pd.Series([], dtype=np.uint8)), categories)),\n                      columns=categories)\nfor index in data['genre'].unique():\n    genres.loc[index] = np.array(list(map(set(index.split(',')).__contains__, categories)), dtype=np.uint8)\ndata = pd.merge(data, genres, left_on='genre', right_index=True).drop(columns=['genre'])","410f41d9":"data.info()","43a3beed":"data.to_csv('preprocessed-data.csv', index=False)","97664a39":"listdir('\/kaggle\/working')","9e546746":"This notebook preprocess the dataset of wikipedia movie plots to classify a movie genre based on its description ","e19741be":"Now we convert genre in categorical columns on the same dataframe","aa77a28b":"Save the result for other kernels","e04d3da0":"Remove genres that appears less than 100 times in the dataset","5fd20d05":"We are interest only in the genre & plot","c745bb25":"Now we parse the genres:\n* Some movies can be categorized with multiple genres. e.g: comedy-drama. Also note that \"comedy drama\", \"comedy & drama\" are the same. We are going to parse the data so that there is no ambiguity. They all will be \"comedy,drama\"\n* science-fiction is the same as sci-fi and romance same as romantic","a1940b8f":"Lowercase descriptions "}}