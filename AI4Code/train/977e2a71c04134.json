{"cell_type":{"6d9929fd":"code","db518144":"code","8496f32e":"code","e1b612a2":"code","52c4d121":"code","331dae92":"code","d28cfc5e":"code","8eaa00b5":"code","b9a17a52":"code","9eee7c31":"code","c34751dd":"code","3103747f":"code","1b924efe":"code","26c3a458":"code","2ef2f83c":"code","dc4190a5":"code","580160ff":"code","8e894169":"markdown","675fee52":"markdown","b410ec61":"markdown","6204b5a8":"markdown","857ada7d":"markdown","28b3974a":"markdown","e34e81b0":"markdown","22cc9da5":"markdown","eac455fe":"markdown","cb42b59f":"markdown","2aeff028":"markdown","1f2b0111":"markdown","522711bf":"markdown","903729ba":"markdown","0ec601c5":"markdown","bbc67d4c":"markdown","bfa4107e":"markdown","848b6384":"markdown","db9cce3a":"markdown","9b0c9eaa":"markdown"},"source":{"6d9929fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","db518144":"data = pd.read_csv('..\/input\/english-premier-league202021\/EPL_20_21.csv')\ndata.head()","8496f32e":"goals = px.bar(data_frame=data.nlargest(10, 'Goals')[['Name', 'Goals']], \n                     x=\"Name\", y=\"Goals\", color=\"Goals\")\ngoals.update_layout(title_text=\"Top Goal Scorers\", )\ngoals.show()\n\n","e1b612a2":"assists = px.bar(data_frame=data.nlargest(10, 'Assists')[['Name', 'Assists']], \n                     x=\"Name\", y=\"Assists\", color=\"Assists\")\nassists.update_layout(title_text=\"Top Assist Makers\", )\nassists.show()\n\n","52c4d121":"Red = px.bar(data_frame=data.nlargest(10, 'Red_Cards')[['Name', 'Red_Cards']], \n                     x=\"Name\", y=\"Red_Cards\", color=\"Red_Cards\")\nRed.update_layout(title_text=\"Top Red Cards\", )\nRed.show()\n\n","331dae92":"Yellow = px.bar(data_frame=data.nlargest(10, 'Yellow_Cards')[['Name', 'Yellow_Cards']], \n                     x=\"Name\", y=\"Yellow_Cards\", color=\"Yellow_Cards\")\nYellow.update_layout(title_text=\"Top Red Cards\", )\nYellow.show()\n\n","d28cfc5e":"\npen_att = px.bar(data_frame=data.nlargest(10, 'Penalty_Attempted')[['Name', 'Penalty_Attempted']], \n                     x=\"Name\", y=\"Penalty_Attempted\", color=\"Penalty_Attempted\")\npen_att.update_layout(title_text=\"Penalty_Attempted\", )\npen_att.show()\n","8eaa00b5":"\npen_goals = px.bar(data_frame=data.nlargest(10, 'Penalty_Goals')[['Name', 'Penalty_Goals']], \n                     x=\"Name\", y=\"Penalty_Goals\", color=\"Penalty_Goals\")\npen_goals.update_layout(title_text=\"Penalty Goals\", )\npen_goals.show()\n","b9a17a52":"\nplayer_age = px.bar(data_frame=data.nlargest(10, 'Age')[['Name', 'Age']], \n                     x=\"Name\", y=\"Age\", color=\"Age\")\nplayer_age.update_layout(title_text=\"Age Goals\", )\nplayer_age.show()\n","9eee7c31":"plt.figure(figsize=(15, 8))\nsns.distplot(data['Age'], hist=True, color='red')\nplt.xlabel(\"Ages\", fontsize=12)\nplt.ylabel('Density', fontsize=12)\nplt.title(\"Distribution of Ages\", fontsize=16)","c34751dd":"\npass_attempts = px.bar(data_frame=data.nlargest(10, 'Passes_Attempted')[['Name', 'Passes_Attempted']], \n                     x=\"Name\", y=\"Passes_Attempted\", color=\"Passes_Attempted\")\npass_attempts.update_layout(title_text=\"Pass Attempts\", )\npass_attempts.show()\n","3103747f":"nationality = data.groupby('Nationality').size().reset_index(name=\"count\")\nfig = px.treemap(nationality, path=['Nationality'], values='count')\nfig.update_layout(title_text='League Nationalities')\nfig.update_traces(textinfo='label+value')\nfig.show()","1b924efe":"players = data.groupby('Club').size().reset_index(name='count')\nfig = px.treemap(players, path=['Club'], values='count')\nfig.update_layout(title_text='Team Players')\nfig.update_traces(textinfo='label+value')\nfig.show()","26c3a458":"goals = data['Goals'].groupby(data['Club']).sum().sort_values(ascending=False).to_frame()\nfig = px.bar(data_frame=goals, x=goals.index, y='Goals', color='Goals')\nfig.update_layout(title_text='Goals Scored by each Team')\nfig.update_layout(xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()\n","2ef2f83c":"assists = data['Assists'].groupby(data['Club']).sum().sort_values(ascending=False).to_frame()\nfig = px.bar(data_frame=assists, x=assists.index, y='Assists', color='Assists')\nfig.update_layout(title_text='Assists by Team')\nfig.update_layout(xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()\n","dc4190a5":"red = data['Red_Cards'].groupby(data['Club']).sum().sort_values(ascending=False).to_frame()\nfig = px.bar(data_frame=red, x=red.index, y='Red_Cards', color='Red_Cards')\nfig.update_layout(title_text='Red Cards by Team')\nfig.update_layout(xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()\n","580160ff":"yellow = data['Yellow_Cards'].groupby(data['Club']).sum().sort_values(ascending=False).to_frame()\nfig = px.bar(data_frame=yellow, x=yellow.index, y='Yellow_Cards', color='Yellow_Cards')\nfig.update_layout(title_text='Yellow Cards by Team')\nfig.update_layout(xaxis={'categoryorder': 'total descending'})\nfig.update_traces(marker=dict(line=dict(color='#000000', width=2)))\nfig.show()\n","8e894169":"**AAccording to the chart, Harry kane is the top Assist maker with 14 assists followed by Kevin De Bruyne and Bruno Fernandes both with 12 assists**","675fee52":"## Assists by Team","b410ec61":"## Top Red Cards","6204b5a8":"## Nationalities in The League","857ada7d":"**According to the chart, the top scorer for the 20\/21 season is Harry Kane followed by Mohamed Salah as second and Bruno Fernandes as third**","28b3974a":"## Top Goal Scorers","e34e81b0":"# Premier League Analysis","22cc9da5":"## Yellow Cards by Team","eac455fe":"## Top Players in Age","cb42b59f":"## Red Cards by Team","2aeff028":"## Number of Players of each eam","1f2b0111":"## Top Assist Makers","522711bf":"## Dataset","903729ba":"## Top Yellow Cards","0ec601c5":"## Top Penalty Goals","bbc67d4c":"## Top Penalty Attempts\n","bfa4107e":"## Importing Libraries","848b6384":"## Goals by Team","db9cce3a":"## Most Pass Attempts","9b0c9eaa":"## League Distribution of Ages"}}