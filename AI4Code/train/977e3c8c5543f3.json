{"cell_type":{"f7b78142":"code","f46d4c60":"code","f7ac96fa":"code","019f067c":"code","49b44efd":"code","94134209":"code","1348d094":"code","94feb748":"code","e126038d":"code","bb905c08":"code","14947cc9":"code","1269135f":"code","e7f77d99":"code","c41b855d":"code","83334a03":"code","42ec515b":"code","9c8fae69":"code","733b3372":"code","32d3ee5c":"code","3f2c29ec":"code","c8adbc06":"code","bf26371a":"code","7e39f0ce":"code","eaa782fd":"code","79936793":"code","3d0b32f4":"code","ee994221":"code","9232405c":"markdown","2716133f":"markdown","37e36043":"markdown","3b75d0dc":"markdown","2bf39ded":"markdown","51b672cc":"markdown","8730ca8d":"markdown","966cc6a1":"markdown","a7d832b1":"markdown","3ecef090":"markdown","9e3018c6":"markdown","2c6b2e07":"markdown","5020fa00":"markdown","71e90c9c":"markdown","d0b3f308":"markdown","a4ac3cf3":"markdown"},"source":{"f7b78142":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f46d4c60":"data17 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2017.csv\")\ndata19 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\")\ndata15 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2015.csv\")\ndata16 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2016.csv\")\ndata18 = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2018.csv\")","f7ac96fa":"data16.info()","019f067c":"data16.describe()","49b44efd":"data16.corr()","94134209":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# plt.figure(figsize=(15,13))\nsns.heatmap(data16.corr(),annot=True,)","1348d094":"print(data15.columns)\n\ntemp = data15\n\nd15 = temp[['Country',\"Happiness Rank\",\n            'Happiness Score',\n            'Economy (GDP per Capita)',\n            'Family',\n            'Health (Life Expectancy)',\n            'Freedom',\n            'Trust (Government Corruption)',\n            'Generosity']].copy()\n\nd15[\"Year\"] = 2015\nd15 = d15.rename(columns={'Country':'Country',\n                          \"Happiness Rank\": \"Rank\",\n                          'Happiness Score': \"Score\",\n                          'Economy (GDP per Capita)':\"GDP\",\n                          'Family':\"Social_sup\",\n                          'Health (Life Expectancy)':\"Life_exp\",\n                          'Freedom':\"Freedom\",\n                          'Trust (Government Corruption)':\"Corruption\",\n                          'Generosity':\"Generosity\"})\nd15","94feb748":"d15[d15[\"Country\"]==\"Turkey\"]","e126038d":"print(data16.columns)\n\ntemp = data16\n\nd16 = temp[['Country',\n            \"Happiness Rank\",\n            'Happiness Score',\n            'Economy (GDP per Capita)',\n            'Family', 'Health (Life Expectancy)',\n            'Freedom',\n            'Trust (Government Corruption)',\n            'Generosity']].copy()\n\nd16[\"Year\"] = 2016\nd16 = d16.rename(columns={'Country':'Country',\n                          \"Happiness Rank\": \"Rank\",\n                          'Happiness Score': \"Score\",\n                          'Economy (GDP per Capita)':\"GDP\",\n                          'Family':\"Social_sup\",\n                          'Health (Life Expectancy)':\"Life_exp\",\n                          'Freedom':\"Freedom\",\n                          'Trust (Government Corruption)':\"Corruption\",\n                          'Generosity':\"Generosity\"})\nd16","bb905c08":"print(data17.columns)\n\ntemp = data17\nd17 = temp[['Country',\n            \"Happiness.Rank\",\n            'Happiness.Score',\n            'Economy..GDP.per.Capita.',\n            'Family', 'Health..Life.Expectancy.',\n            'Freedom',\n            'Trust..Government.Corruption.',\n            'Generosity']].copy()\nd17[\"Year\"] = 2017\nd17 = d17.rename(columns={'Country':'Country',\n                          \"Happiness.Rank\": \"Rank\",\n                          'Happiness.Score': \"Score\",\n                          'Economy..GDP.per.Capita.':\"GDP\",\n                          'Family':\"Social_sup\",\n                          'Health..Life.Expectancy.':\"Life_exp\",\n                          'Freedom':\"Freedom\",\n                          'Trust..Government.Corruption.':\"Corruption\",\n                          'Generosity':\"Generosity\"})\nd17","14947cc9":"print(data18.columns)\n\ntemp = data18\nd18 = temp[['Country or region',\n            \"Overall rank\",\n            'Score',\n            'GDP per capita',\n            'Social support',\n            'Healthy life expectancy',\n            'Freedom to make life choices',\n            'Perceptions of corruption',\n            'Generosity']].copy()\nd18[\"Year\"] = 2018\nd18 = d18.rename(columns={'Country or region':'Country',\n                          \"Overall rank\": \"Rank\",\n                          'Score': \"Score\",\n                          'GDP per capita':\"GDP\",\n                          'Social support':\"Social_sup\",\n                          'Healthy life expectancy':\"Life_exp\",\n                          'Freedom to make life choices':\"Freedom\",\n                          'Perceptions of corruption':\"Corruption\",\n                          'Generosity':\"Generosity\"})\nd18","1269135f":"print(data19.columns)\n\ntemp = data19\nd19 = temp[['Country or region',\n            \"Overall rank\",\n            'Score',\n            'GDP per capita',\n            'Social support',\n            'Healthy life expectancy',\n            'Freedom to make life choices',\n            'Perceptions of corruption',\n            'Generosity']].copy()\nd19[\"Year\"] = 2019\nd19 = d19.rename(columns={'Country or region':'Country',\n                          \"Overall rank\": \"Rank\",\n                          'Score': \"Score\",\n                          'GDP per capita':\"GDP\",\n                          'Social support':\"Social_sup\",\n                          'Healthy life expectancy':\"Life_exp\",\n                          'Freedom to make life choices':\"Freedom\",\n                          'Perceptions of corruption':\"Corruption\",\n                          'Generosity':\"Generosity\"})\nd19","e7f77d99":"df = d15.append([d16,d17,d18,d19]).reset_index(drop=True)\n\n# df = d15.append([d16,d17,d18,d19]).set_index([\"Country\",\"Year\"])\n\ndf","c41b855d":"df.isnull().sum()","83334a03":"df[df[\"Corruption\"].isna()]","42ec515b":"df.loc[489,\"Corruption\"] = float(df[df['Country']=='United Arab Emirates'].groupby('Country').mean()[\"Corruption\"])","9c8fae69":"df.loc[489]","733b3372":"data_tr = df[df[\"Country\"]==\"Turkey\"].reset_index(drop=True).copy()\ndata_tr","32d3ee5c":"from sklearn.ensemble import ExtraTreesRegressor\nimport matplotlib.pyplot as plt\n\nx_tra = data_tr.drop([\"Country\",\"Rank\",\"Score\",\"Year\"], axis=1)\ny_tra = data_tr[\"Score\"]\n\nmodel_etr = ExtraTreesRegressor()\nmodel_etr.fit(x_tra,y_tra)\nprint(model_etr.feature_importances_) \nfeat_imp = pd.Series(model_etr.feature_importances_, index=x_tra.columns)\nfeat_imp.nlargest().plot(kind='barh')\nplt.show()","3f2c29ec":"print(sns.heatmap(data_tr.drop([\"Year\",\"Rank\"],axis=1).corr(),annot=True))\n\ncor_target = abs(data_tr.corr()[\"Score\"])\nrelevant_features = cor_target[cor_target>0.5]\nprint(relevant_features)\n\nprint(\"\\n\\n\",df[[\"GDP\",\"Social_sup\",\"Life_exp\",\"Freedom\",\"Corruption\"]].corr())","c8adbc06":"g = sns.PairGrid(data_tr, x_vars=[\"Year\", 'Score'], y_vars=['Freedom','Corruption','Social_sup', 'GDP',  'Life_exp'])\ng.map(sns.regplot)","bf26371a":"dat19 = d19.copy().drop([\"Year\"],axis=1)\ndat19","7e39f0ce":"from sklearn.ensemble import ExtraTreesRegressor\nimport matplotlib.pyplot as plt\n\nx_d19 = dat19.drop([\"Country\",\"Rank\",\"Score\"], axis=1)\ny_d19 = dat19[\"Score\"]\n\nmodel_etr = ExtraTreesRegressor()\nmodel_etr.fit(x_d19,y_d19)\nfeat_imp = pd.Series(model_etr.feature_importances_, index=x_tra.columns)\nfeat_imp.nlargest().plot(kind='barh')\nplt.show()","eaa782fd":"cor_target = abs(dat19.corr()[\"Score\"])\nrelevant_features = cor_target[cor_target>0.5]\nprint(relevant_features)\n\nprint(\"\\n\\n\",dat19[[\"GDP\",\"Social_sup\",\"Life_exp\",\"Freedom\",\"Corruption\"]].corr())\n\n# print(\"\\n\\n\",dat19.corr())\nsns.heatmap(dat19.corr(), annot=True)","79936793":"dat19_hi = dat19[[\"Score\",\"Country\",\"GDP\",\"Social_sup\",\"Life_exp\"]]\n# dat19_hi = dat19_hi.nlargest(5,\"Score\")\n\nprint(\"Her s\u00fctun i\u00e7in en y\u00fcksek puan alan 5 \u00fclke: \\n\\n\")\n\nfor col in dat19_hi.drop([\"Country\"], axis=1).columns:\n    print(f\"{col}:\\n\",dat19_hi.nlargest(5,col),\"\\n\\n\")\n    \n","3d0b32f4":"import plotly.express as px\n\n\nfig = px.scatter(dat19_hi, y=\"Score\", x=\"Social_sup\",\n                 size=\"GDP\", color=\"Life_exp\",\n                 hover_name=\"Country\",\n                 size_max=20,\n                 labels= {\"Score\":\"Happiness Score\",\n                         \"Life_exp\":\"Life Expectancy\",\n                         \"Social_sup\":\"Social Support\",\n                         \"GDP\":\"GDP per Capita\"},\n                 title = \"2019 Selected Happiness Index Chart\")\n\n\nfig.show()","ee994221":"# Example Machine Learning Procedure\n\n\ndata = dat19.copy().set_index(\"Country\")\nfeatures = ['GDP', 'Social_sup', 'Life_exp', 'Freedom','Corruption', 'Generosity']\n\nfrom sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score\nfrom sklearn.metrics import mean_absolute_error\n\ny = data.Score\nx = data[features]\nx_tr, x_val, y_tr, y_val = train_test_split(x,y,test_size=0.20)\n\nprint(x.describe())\nprint(\"\\n\\n\",x.head(),\"\\n\\n\",y.head())\n\n\nfrom sklearn.tree import DecisionTreeRegressor\nmodel_tree = DecisionTreeRegressor()\nmodel_tree.fit(x_tr,y_tr)\npreds_tree = model_tree.predict(x_val)\nprint(\"\\n\\nDecision Tree: \",mean_absolute_error(y_val, preds_tree))\n\nfrom sklearn.ensemble import RandomForestRegressor\nmodel_forest = RandomForestRegressor()\nmodel_forest.fit(x_tr,y_tr)\npreds_forest = model_forest.predict(x_val)\nprint(\"\\n\\nRandom Forest: \",mean_absolute_error(y_val, preds_forest))\n\nfrom xgboost import XGBRegressor\nmodel_xgb = XGBRegressor()\nmodel_xgb.fit(x_tr,y_tr)\npreds_xgb = model_xgb.predict(x_val)\nprint(\"\\n\\nXGBoost: \", mean_absolute_error(preds_xgb, y_val))","9232405c":"\u015eimdi ilk soruyu cevaplamaya ba\u015flayabiliriz. \n\n1) \u00dclkemiz T\u00fcrkiye'yi baz alacak olursak; 2015-2019 y\u0131llar\u0131 aras\u0131nda insanlar\u0131n mutlu olmas\u0131na etki eden fakt\u00f6rler y\u0131llara g\u00f6re neler ve zamanla nas\u0131l de\u011fi\u015fmi\u015f?","2716133f":"\u00d6ncelikle T\u00fcrkiye i\u00e7in en \u00f6nemli fakt\u00f6rleri belirleyelim.","37e36043":"Nihayet isimlerini d\u00fczeltti\u011fimiz tablolar\u0131 birle\u015ftirebiliriz.","3b75d0dc":"Elde etti\u011fimiz i\u00e7g\u00f6r\u00fcler \u0131\u015f\u0131\u011f\u0131nda bulgular\u0131m\u0131z\u0131 g\u00f6rselle\u015ftirelim","2bf39ded":"G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere, \u00f6zg\u00fcrl\u00fck alg\u0131s\u0131ndaki ufak bir iyile\u015fme, toplumun mutlulu\u011funda \u00f6nemli bir pozitif de\u011fi\u015fime yol a\u00e7\u0131yor.","51b672cc":"Eksik olan de\u011ferin yerine o \u00fclkenin ortalamas\u0131n\u0131 yazal\u0131m.","8730ca8d":"G\u00f6rd\u00fc\u011f\u00fcm\u00fcz gibi, Finlandiya \u00fc\u00e7 \u00f6nemli \u00f6zellikte de birinci s\u0131rada de\u011fil. ","966cc6a1":"# World Happiness Challenge - Kaggle Master Project\n\n1) \u00dclkemiz T\u00fcrkiye'yi baz alacak olursak; 2015-2019 y\u0131llar\u0131 aras\u0131nda insanlar\u0131n mutlu olmas\u0131na etki eden fakt\u00f6rler y\u0131llara g\u00f6re neler ve zamanla nas\u0131l de\u011fi\u015fmi\u015f?\n\n2) Sadece 2019 verisini baz al\u0131rsak; 2019 y\u0131l\u0131ndaki en mutlu \u00fclke hangisidir? Hangi fakt\u00f6r\/fakt\u00f6rler en mutlu \u00fclke olmas\u0131n\u0131 sa\u011flam\u0131\u015f olabilir? G\u00f6rselle\u015ftirerek ifade etmenizi bekliyoruz.","a7d832b1":"B\u00fct\u00fcn dosyalarda ortak olan ve bizi ilgilendiren \u00f6zellikleri ay\u0131klayal\u0131m ve ortak bir DataFrame'de toplayabilmek i\u00e7in isimlerini d\u00fczeltelim.","3ecef090":"En \u00f6nemli etken net \u015fekilde \"Freedom\".","9e3018c6":"Bu zaman aral\u0131\u011f\u0131nda mutluluk skoruna en fazla etki eden fakt\u00f6rler s\u0131ras\u0131yla; \"Freedom\", \"Corruption\" ve \"Social Support\".\n\nBu fakt\u00f6rlerin y\u0131llar i\u00e7erisindeki de\u011fi\u015fimine bakarsak;","2c6b2e07":"Gelelim ikinci soruya:\n\n2) Sadece 2019 verisini baz al\u0131rsak; 2019 y\u0131l\u0131ndaki en mutlu \u00fclke hangisidir? Hangi fakt\u00f6r\/fakt\u00f6rler en mutlu \u00fclke olmas\u0131n\u0131 sa\u011flam\u0131\u015f olabilir? G\u00f6rselle\u015ftirerek ifade etmenizi bekliyoruz.","5020fa00":"G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere, 2019 y\u0131l\u0131nda en y\u00fcksek mutluluk skoru ile 1. s\u0131rada bulunan \u00fclke \"Finlandiya\".\n\n2019'da mutluluk skoruna en fazla etki eden unsurlar\u0131 tespit etmeye \u00e7al\u0131\u015fal\u0131m.","71e90c9c":"Birle\u015ftirdi\u011fimiz dataframe'de eksik girdi olup olmad\u0131\u011f\u0131na bakal\u0131m.","d0b3f308":"2019 y\u0131l\u0131nda mutlulu\u011fu en fazla etkilemi\u015f fakt\u00f6rler; \"GDP\", \"Social Support\" ve \"Life Expectancy\".","a4ac3cf3":"\u00d6rnek bir DataFrame'i inceleyerek ba\u015flayal\u0131m. "}}