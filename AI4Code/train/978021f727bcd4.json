{"cell_type":{"6ae59e1e":"code","053fdaa0":"code","324ea0c4":"code","222ca24c":"code","2fa190b7":"code","44fd8f48":"code","12916530":"code","f7e3fada":"code","adfbdfa1":"code","9e77d8d4":"code","c8765be7":"code","848cbc95":"code","594c4545":"code","0de46bd8":"code","7df4cf7a":"code","f8d4d824":"code","0c37e77d":"code","5e8c604d":"code","975ad6e2":"code","cf359f6f":"code","c1b88ac1":"markdown","acba87e2":"markdown","787db5ec":"markdown","c3c670e8":"markdown","60c46b88":"markdown","16c17b72":"markdown","41e18820":"markdown","a58e561e":"markdown","a2277cf0":"markdown","19469a54":"markdown","a5582382":"markdown","af7c402a":"markdown","841599a8":"markdown","6c2c7c60":"markdown","f14fa042":"markdown","e22bbc9e":"markdown","86f1bda4":"markdown"},"source":{"6ae59e1e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","053fdaa0":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.io as pio\nimport plotly.express as px\nimport plotly.graph_objects as go\n\npd.plotting.register_matplotlib_converters()\n%matplotlib inline\npio.renderers.default = 'iframe'\n\nprint(\"Done.\")","324ea0c4":"df = pd.read_csv(\"..\/input\/world-population-density\/csvData.csv\")\ndf.info()","222ca24c":"df.head(10)","2fa190b7":"print(\"Shape: \",df.shape)\nprint(\"Size: \",df.size)","44fd8f48":"# get the number of missing data points per column\ndf.isnull().sum()","12916530":"df.corr()","f7e3fada":"pio.templates.default = \"plotly_white\"\n\nfig = go.Figure(data = go.Heatmap(\n    z= df.corr(),\n    colorscale=px.colors.diverging.RdBu,\n    zmin=-1,\n    zmax=1\n)\n)\nfig.update_layout(\n    title='Correlation',\n    xaxis_nticks=36)\n\n","adfbdfa1":"list(df.columns)","9e77d8d4":"# Set the width and height of the figure\nplt.figure(figsize=(14,6))\n\n# Add title\nplt.title(\"Line Chart showing Area and Population of the countries in 2021 \")\n\n# Line chart showing daily global streams of 'Despacito'\nsns.lineplot(data=df['area'], label=\"Area\")\n\nsns.lineplot(data=df['pop2021'], label=\"Population in 2021\")\n\n\n\n# Add label for horizontal axis\nplt.xlabel(\"Area\")\nplt.ylabel(\"Population\")","c8765be7":"# pair plot\nimport seaborn as sns\nsns.pairplot(df)\nplt.show()","848cbc95":"sns.pairplot(df,hue='rank');","594c4545":"fig = px.density_heatmap(df, x=\"country\", y=\"density\",title=\"Countries with their Densities\")\nfig.show()","0de46bd8":"fig = px.density_heatmap(df, x = \"rank\", y = \"country\", marginal_x=\"histogram\", marginal_y=\"histogram\"\n                        ,title=\"Country Vs Rank\")\nfig.show()","7df4cf7a":"fig = px.scatter(df, x=\"area\", y=\"densityMi\",color=\"country\", trendline=\"lowess\", title=\"Area Vs DensityMi\")\nfig.show()","f8d4d824":"sns.jointplot(x='rank', y='area', data=df)\n# Add title\nplt.title(\"Relation between Rank and Area\")","0c37e77d":"sns.jointplot(x='rank', y='area', data=df ,kind = 'hex')","5e8c604d":"sns.jointplot(x='area', y='pop2021', data=df)\n","975ad6e2":"fig = px.histogram(df, x=\"country\", y=\"density\", color=\"pop2021\",\n                   marginal=\"violin\", title=\"Density Vs Country\")\nfig.show()","cf359f6f":"f,ax = plt.subplots(figsize=(12,10))\nsns.heatmap(df.iloc[:,2:].corr(),annot=True, linewidths=.1, fmt='.1f', ax=ax)\n\nplt.show()\n","c1b88ac1":"<h2 style=\" text-align:center; color:Lightblue; font-size:40px; display: block;\"> <u><b><i>If you find this notebook useful, do give me an UPvote\n <\/i><\/b><\/u> <\/h2>","acba87e2":"<br><div style=\"font-weight: bold;font-size:30px\">Table of Contents<\/div>\n1. [Importing Libraries and Loading Dataset](#1)\n1. [DATA Information](#2)\n1. [Data Cleaning](#3)\n1. [Data Visualization](#4)","787db5ec":"<a id=\"4\"><\/a> <br>\n## Data Visualization","c3c670e8":"<a id=\"1\"><\/a> <br>\n## Importing Libraries and Loading Dataset","60c46b88":"**World Population Density dataset includes Rank, Country, Density, DensityMi(),pop2021(Population of the countryin 2021), Area for all countries in the world.**\n\n**Let's begin.**","16c17b72":"<div style=\"font-weight: bold;font-size:40px\">Introduction<\/div>\n","41e18820":"<a id=\"2\"><\/a> <br>\n## DATA Information","a58e561e":"**Relation between Rank and Area**","a2277cf0":"<a id=\"3\"><\/a> <br>\n## Data Cleaning","19469a54":"<h2 style=\" text-align:center; color:pink; font-size:40px; display: block;\"> <u><b><i>If you find this notebook useful, do give me an UPvote\n <\/i><\/b><\/u> <\/h2>","a5582382":"**RANK Vs AREA**","af7c402a":"**Now ploting the corelation graph of the data. Here we will use Plotly(graph_objects) and Seaborn for ploting as they are more attracting and informative.**","841599a8":"**As we can see we don't have any missing data so we don't need to produce coulumns.\nLet us find correlation of the data.**","6c2c7c60":"**Reading the Data**","f14fa042":"**Pair plot only in relation to Ranks**","e22bbc9e":"<img src= \"https:\/\/images.unsplash.com\/photo-1560179376-2570140bed14?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cG9wdWxhdGlvbiUyMGRlbnNpdHl8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" alt =\"population\" style='width: 1000px;'>","86f1bda4":"**This Graph below is same as above, just the look is more appealing.**"}}