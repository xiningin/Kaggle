{"cell_type":{"d1fa7b93":"code","2fb67568":"code","b3fa7f20":"code","22c2503c":"code","b5e9cae5":"code","f2cf14e1":"code","baf67c28":"markdown","4b666fb7":"markdown","e299589e":"markdown"},"source":{"d1fa7b93":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\u3057\u307e\u3059\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame","2fb67568":"# \u8868\u8a18\u3086\u308c\u306e\u4fee\u6b63\u95a2\u6570\u3092\u62dd\u501f\u3000\u3000https:\/\/www.kaggle.com\/ryoichi0917\/corrections-to-notation-errors-and-eda-for-meta?scriptVersionId=73926073&cellId=1\ndef meta_define():\n    \"\"\"\n    input : none\n    output : Corrected metadata\n    \"\"\"\n    import pandas as pd\n    import os \n    os.chdir(\"\/kaggle\/input\/hah-data-science-challenge\/\")\n    df_train = pd.read_csv(\"train.csv\", index_col=False)\n    df_test = pd.read_csv(\"test.csv\", index_col=False)\n    \n    ##################################################\n    #\u4ee5\u4e0b\u8f9e\u66f8\u3084\u5909\u6570\u306e\u5b9a\u7fa9\n    #\u5404\u30c7\u30fc\u30bf\u4fee\u6b63\u7528\u306e\u8f9e\u66f8\n    bolt_dict = {\n        '\u5927':\"big\",\n        '\u5c0f':\"small\"\n    }\n\n    plate_dict = {\n        '\u5927':\"big\",\n        '\u5c0f':\"small\"\n    }\n\n    record_dict = {\n        'PC\u5185\u81d3':\"pc_built_in\",\n        'PC\u5185\u8535':\"pc_built_in\",\n        'USB1':\"usb1\", \n        'USB2':\"usb2\", \n        'USB3':\"usb3\", \n        'USB4':\"usb4\", \n        '\u30b9\u30de\u30db':\"smart_phone\",\n        '\u30b9\u30de\u30db\u306e\u30dc\u30a4\u30b9\u30ec\u30b3\u30fc\u30c0':\"smart_phone\",\n        '\u5185\u8535\u30de\u30a4\u30af':\"pc_built_in\",\n        }\n\n    distance_dict = {\n        '10cm': 0.1, \n        '10\u339d': 0.1, \n        '1M': 1.0, \n        '20cm': 0.2, \n        '20\u339d': 0.2, \n        '2M': 2.0, \n        '2m': 2.0, \n        '30cm': 0.3, \n        '30cn': 0.3, \n        '30\u339d': 0.3, \n        '3m': 3.0, \n        '40cm': 0.4, \n        '40\u339d': 0.4, \n        '50cm': 0.5, \n        '50\u339d': 0.5, \n        '5cm': 0.05,\n        '8cm': 0.08, \n        '\uff11\uff2d': 1.0   \n    }\n\n    cvt_dict = {\n        \"\u306d\u3058\" : bolt_dict, \n        '\u30d7\u30ec\u30fc\u30c8' : plate_dict, \n        '\u9332\u97f3\u65b9\u6cd5' : record_dict, \n        '\u30de\u30a4\u30af\u8ddd\u96e2' : distance_dict\n    }\n    \n    #df_train\u65e5\u672c\u8a9e\u30ab\u30e9\u30e0\u540d : ['ID', '\u306d\u3058', '\u30d7\u30ec\u30fc\u30c8', '\u9332\u97f3\u65b9\u6cd5', '\u30de\u30a4\u30af\u8ddd\u96e2', '\u30d5\u30a1\u30a4\u30eb', 'Target']\n    col_train = ['id', 'bolt', 'plate', 'record', 'mic_dist', 'file', 'Target']\n    #df_test\u65e5\u672c\u8a9e\u30ab\u30e9\u30e0\u540d : ['ID', '\u306d\u3058', '\u30d7\u30ec\u30fc\u30c8', '\u9332\u97f3\u65b9\u6cd5', '\u30de\u30a4\u30af\u8ddd\u96e2', '\u30d5\u30a1\u30a4\u30eb', 'Target']\n    col_test = ['id', 'bolt', 'plate', 'record', 'mic_dist', 'file']\n    \n    tgt_col = [\"\u306d\u3058\", '\u30d7\u30ec\u30fc\u30c8', '\u9332\u97f3\u65b9\u6cd5', '\u30de\u30a4\u30af\u8ddd\u96e2']\n    ##################################################\n    \n    for col in tgt_col:#Target\u306f\u5909\u63db\u5bfe\u8c61\u5916\n        df_train[col] = df_train[col].map(cvt_dict[col])\n        df_test[col] = df_test[col].map(cvt_dict[col])\n        \n    df_train.columns = col_train\n    df_test.columns = col_test\n    \n    return df_train, df_test","b3fa7f20":"# \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\ndf_train, df_test = meta_define()\n\n# flag \u3092\u4ed8\u4e0e\ndf_train['flag'] = 'train'\ndf_test['flag'] = 'test'","22c2503c":"# train \u3068\u3000\u3000test \u3092\u7d50\u5408\ndf = pd.concat([df_train, df_test])","b5e9cae5":"# \u5404\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\ndf_cnt = df.groupby(['bolt', 'plate', 'record', 'mic_dist']).count()['id'].rename('count').reset_index()\ndisplay(df_cnt.style.bar(subset=['count'],color=['lightblue']))","f2cf14e1":"# train \u3068 test \u3067\u5206\u3051\u3066\u3001\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3002\ndf_cnt = pd.crosstab([df['bolt'], df['plate'], df['record'], df['mic_dist']], df['flag'])\ndisplay(df_cnt.style.bar(subset=['train', 'test'],color=['lightblue']))","baf67c28":"### \u5404\u30c7\u30fc\u30bf\u6761\u4ef6\u3054\u3068\u306e\u30b5\u30f3\u30d7\u30eb\u6570\u3092\u78ba\u8a8d\n\u30cd\u30b8\u3001\u30d7\u30ec\u30fc\u30c8\u3001\u9332\u97f3\u65b9\u6cd5\u3001\u30de\u30a4\u30af\u8ddd\u96e2\u3000\u3054\u3068\u306e\u6761\u4ef6\u3067\u3001\u3069\u308c\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30eb\u6570\u304c\u3042\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002","4b666fb7":"\u305d\u3082\u305d\u3082 train \u306b\u3082\u30e9\u30d9\u30eb\u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u3001train \u3068 test \u3092\u5206\u3051\u308b\u610f\u5473\u306f\u8584\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\ntrain, test \u306e\u305d\u308c\u305e\u308c\u306b\u3057\u304b\u306a\u3044\u30c7\u30fc\u30bf\u53d6\u5f97\u6761\u4ef6\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002","e299589e":"\u3059\u3079\u3066\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u7db2\u7f85\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3088\u308a\u306f\u3001\u30c7\u30fc\u30bf\u53d6\u5f97\u6761\u4ef6\u3054\u3068\u306e\u4ef6\u6570\u306b\u504f\u308a\u304c\u3042\u308b\u3002\n\n\u3053\u306e\u6761\u4ef6\u3054\u3068\u306b\u7570\u5e38\u5ea6\u3092\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u3067\u7b97\u51fa\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u306e\u304b\u3082\u3002"}}