{"cell_type":{"f0856854":"code","5d6c6259":"code","20729d29":"code","0ac6e0c0":"code","f8a77cc4":"code","52b7ad7a":"code","78e9ce22":"code","e888b6ce":"code","0f04f974":"code","58f2db62":"code","36aa0f83":"code","90f1f3e1":"code","99cd1100":"code","59080426":"code","faffe0f3":"markdown","a2619165":"markdown","e93e1664":"markdown","05547cdc":"markdown","1409532b":"markdown","cdce8ff4":"markdown"},"source":{"f0856854":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5d6c6259":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib import rcParams\nimport matplotlib\nimport seaborn as sns\nimport geopandas as gpd\nfrom geopandas.tools import geocode\nimport squarify    # pip install squarify (algorithm for treemap)\nfrom mpl_toolkits.basemap import Basemap\nimport folium\nimport plotly.express as px\nimport plotly.graph_objects as go","20729d29":"df= gpd.read_file('..\/input\/protected-shipwrecks-sites\/ProtectedWrecks_17July2020.shp')\ndf.head(2)","0ac6e0c0":"data = df.loc[:, [\"Name\", \"DesigDate\", \"Latitude\",\"Longitude\",\"AREA_HA\",\"geometry\"]].copy()\ndata = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude))\ndata.head(2)","f8a77cc4":"data.crs = {'init': 'epsg:4326'}\nprint(data.crs)","52b7ad7a":"gb = gpd.read_file(\"..\/input\/uk-poly\/Uk_poly.shp\")\ngb.head()","78e9ce22":"ax = gb.plot(figsize=(10,8), color='lightgray', linestyle=':', edgecolor='black')\ndata.plot(markersize=70,alpha=0.9,edgecolor='k',ax=ax,color='lime')\nplt.title(\"Protected Shipwrecks Sites in English territorial waters\")\nplt.show()","e888b6ce":"gb1 = gpd.read_file(\"..\/input\/uk-poly\/England_AL4-AL4.shp\")\ngb1.head()","0f04f974":"ax = gb1.plot(figsize=(10,8), color='lightgray', linestyle=':', edgecolor='black')\ndata.plot(markersize=70,alpha=0.9,edgecolor='k',ax=ax,color='lime')\nplt.title(\"Protected Shipwrecks Sites in English territorial waters\")\nplt.show()","58f2db62":"m = folium.Map(location=[52.007666, -1.241896], tiles=\"OpenStreetMap\", zoom_start=6.4)\n \n# I can add marker one by one on the map\nfor i in range(0,len(data)):\n    folium.Marker([data.iloc[i]['Latitude'], data.iloc[i]['Longitude']], popup=data.iloc[i]['Name']).add_to(m)\n\n# m.save('Folium Shipwrecks sites.png')  <-----To download the graph\nm","36aa0f83":"BBox=((data.Longitude.min(), data.Longitude.max(), data.Latitude.min(), data.Latitude.max()))\n#defines the area of the map that will include all the spatial points \nBBox","90f1f3e1":"#Creating a list with additional area to cover all points into the map\nBBox=[-6.442, 2.100, 49.762, 54.858]\nBBox","99cd1100":"#import map layer extracted based on the lat and long values\ndata_map = plt.imread('..\/input\/gb-map\/map.png')\n\nfig, ax = plt.subplots(figsize = (10,10))\nax.scatter(data.Longitude, data.Latitude, zorder=2, alpha= 0.8, c='lime', s=80, edgecolors='k')\nax.set_title('Protected Shipwrecks Sites in English territorial waters', fontsize=15)\nax.set_xlim(BBox[0],BBox[1])\nax.set_ylim(BBox[2],BBox[3])\nax.imshow(data_map, zorder=1, extent=BBox,aspect='auto')\nplt.show()","59080426":"# Total area of protected shipwreck sites\nprint(\"Total area of protected sites:\",data.AREA_HA.sum())","faffe0f3":"### **Plotting spatial data over a Map layer(shapefile)** \ud83c\udf0a\ud83d\udea2","a2619165":"**Import Essentials**","e93e1664":"### **Using Folium to plot Shipwreck data** \ud83c\udf0a\u26f5","05547cdc":"**Protected Wreck Sites in English Territorial Waters**: \n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/42\/The_Wreck_of_the_Birkenhead.jpg\/400px-The_Wreck_of_the_Birkenhead.jpg)\n","1409532b":"### **Using matplotlib to plot spatial data over the map layer**","cdce8ff4":"**Load Data**"}}