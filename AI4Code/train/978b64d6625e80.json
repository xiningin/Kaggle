{"cell_type":{"513e23dc":"code","18d4b184":"code","a0823827":"code","79301ede":"code","ea2b2012":"code","ac96325d":"code","8b2f33c8":"code","ee9a0f63":"code","b68f9316":"code","97411058":"code","a52bd1ce":"markdown","f5cbe569":"markdown","2328b7f7":"markdown","94488cf9":"markdown","4ab88d24":"markdown","17ebe452":"markdown","58cc311a":"markdown","b2818bbc":"markdown","6b89a3e9":"markdown"},"source":{"513e23dc":"import numpy as np\nimport tensorflow as tf\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt","18d4b184":"data = pd.read_csv('..\/input\/epileptic-seizure-recognition\/Epileptic Seizure Recognition.csv')\ndata.head()","a0823827":"X = data.iloc[:,1:-1].values\nX.shape","79301ede":"y = data.iloc[:,-1:].values\ny[y>1] = 0\ny.shape","ea2b2012":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,shuffle=True)\nX_train.shape,y_test.shape","ac96325d":"def denseBlock(dims,inp) :\n    x = tf.keras.layers.BatchNormalization() (inp)\n    x = tf.keras.layers.Dense(dims,activation=tf.keras.layers.LeakyReLU(0.2)) (x)\n    x = tf.keras.layers.Dropout(0.4) (x)\n    x = tf.keras.layers.Dense(dims,activation=tf.keras.layers.LeakyReLU(0.2)) (x)\n    x = tf.keras.layers.Dropout(0.4) (x)\n    x = tf.keras.layers.Dense(dims,activation=tf.keras.layers.LeakyReLU(0.2)) (x)\n    x = tf.keras.layers.Dropout(0.4) (x)\n    x = tf.keras.layers.Dense(178,activation=tf.keras.layers.LeakyReLU(0.2)) (x)\n    return x","8b2f33c8":"inp = tf.keras.layers.Input(shape=(178,),name='input')\nx1 = denseBlock(256,inp)\nx2 = denseBlock(512,inp)\nx3 = denseBlock(1024,inp)\nx = tf.keras.layers.Concatenate()([x1,x2,x3])\nx = tf.keras.layers.Dense(128,activation=tf.keras.layers.LeakyReLU(0.2)) (x)\nout = tf.keras.layers.Dense(1,activation='sigmoid',name='output') (x)\n\nmodel = tf.keras.models.Model(inp,out)\nmodel.summary()","ee9a0f63":"tf.keras.utils.plot_model(model,show_shapes=True)","b68f9316":"model.compile(loss='binary_crossentropy',optimizer=tf.keras.optimizers.Adam(1e-4),metrics=['accuracy'])\nmodel.fit(X_train,y_train,epochs=100,batch_size=128,validation_split=0.2)","97411058":"model.evaluate(X_test,y_test)","a52bd1ce":"# **Creating the model**","f5cbe569":"# **Model Visualization**","2328b7f7":"# **Splitting the Dataset into Training and Test Sets**","94488cf9":"# **Splitting the data into features (X) and labels (y)**","4ab88d24":"# **Importing the Required Libraries**","17ebe452":"# **Evaluating the Model on Test Set**","58cc311a":"## **Accuracy on various Data Splits**\nTraining Accuracy : 99.48 %<br>\nValidation Accuracy : 96.12 %<br>\nTest Accuracy : 97.46 %","b2818bbc":"# **Loading the Data**","6b89a3e9":"# **Compiling and Training the Model**"}}