{"cell_type":{"5ddb33f7":"code","c7d3408e":"code","7f6f798c":"code","f4f8dca4":"code","d3045b52":"code","f1e783e3":"code","49b8bca5":"code","157a40f1":"code","399295bf":"code","0932b468":"code","a33875e2":"code","49f6a4de":"code","70023bb1":"code","cb3a7ffe":"code","b13acfe9":"code","0ef57ea1":"code","afdd5871":"code","86bbc634":"code","a15a7c1c":"code","4948dc84":"code","8fd91c35":"code","0de4d4bc":"code","50a270ba":"code","efc78c6b":"code","111add48":"code","7c8399f3":"code","8c393872":"code","9d8e1087":"code","3516c01c":"code","3dfeb9eb":"code","81d71836":"code","585ef8f0":"code","d9e029de":"code","67a8bea2":"code","42a4ff62":"markdown","13457f7c":"markdown","273d0712":"markdown","01cb39cc":"markdown","a5298906":"markdown","0026279e":"markdown","3682e1fd":"markdown","00eb3793":"markdown","2e839039":"markdown","eb48c616":"markdown","a00ec609":"markdown","3b5c5c87":"markdown","edab7052":"markdown","5a404266":"markdown","666f555c":"markdown"},"source":{"5ddb33f7":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c7d3408e":"train_titanic= pd.read_csv('..\/input\/titanic\/train.csv')\ntest_titanic= pd.read_csv('..\/input\/titanic\/test.csv')","7f6f798c":"#lets see how many columns and rows do we have here\ntrain_titanic.shape","f4f8dca4":"check_null=test_titanic.isnull()\ncheck_null.sum()","d3045b52":"check_null=train_titanic.isnull()\ncheck_null.sum()","f1e783e3":"sns.heatmap(test_titanic.isnull(),yticklabels=False,cbar=False,cmap='cividis')","49b8bca5":"sns.heatmap(train_titanic.isnull(),yticklabels=False,cbar=False,cmap='cividis')","157a40f1":"Ratio = {\"age ratio\": [177\/891],\n        \"cabin ratio\": [687\/891],\n         \"embarked ratio\": [ 2\/891]\n        }\n\ndf_Ratio = pd.DataFrame(Ratio, columns = [\"age ratio\", \"cabin ratio\", \"embarked ratio\"])\nprint(df_Ratio)","399295bf":"train_titanic.info()","0932b468":"sns.set_style('darkgrid')\nsns.countplot(x='Survived',data=train_titanic)","a33875e2":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=train_titanic,palette='RdBu_r')","49f6a4de":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train_titanic,palette='rainbow')","70023bb1":"train_titanic_drop = train_titanic.drop(['Cabin'], axis = 1)\ntest_titanic_drop = test_titanic.drop(['Cabin'], axis = 1)","cb3a7ffe":"sns.heatmap(train_titanic_drop.isnull(),yticklabels=False,cbar=False,cmap='cividis')\n\n","b13acfe9":"sns.heatmap(test_titanic_drop.isnull(),yticklabels=False,cbar=False,cmap='cividis')","0ef57ea1":"list(train_titanic_drop['Embarked'].unique())\nlist(test_titanic_drop['Embarked'].unique())","afdd5871":"train_new=train_titanic_drop.dropna(subset=['Embarked'])\ntest_new=test_titanic_drop.dropna(subset=['Embarked'])","86bbc634":"from sklearn.preprocessing import LabelEncoder\n# Make copy to avoid changing original data \ntrain_new = train_new.copy()\ntest_new = test_new.copy()\n# Apply label encoder to column with categorical data\nlabel_encoder = LabelEncoder()\ntrain_new['Embarked_Cat'] = label_encoder.fit_transform(train_new['Embarked'])\ntrain_newer = train_new.drop(['Embarked'], axis = 1)\ntrain_newer.head()\ntest_new['Embarked_Cat'] = label_encoder.fit_transform(test_new['Embarked'])\ntest_newer = test_new.drop(['Embarked'], axis = 1)\ntest_newer.head()","a15a7c1c":"# Make copy to avoid changing original data \ntrain_newer = train_newer.copy()\ntest_newer = test_newer.copy()\n# Apply label encoder to column with categorical data\nlabel_encoder = LabelEncoder()\ntrain_newer['Sex_Cat'] = label_encoder.fit_transform(train_newer['Sex'])\ntrain_final = train_newer.drop(['Sex'], axis = 1)\ntrain_final.head()\ntest_newer['Sex_Cat'] = label_encoder.fit_transform(test_newer['Sex'])\ntest_final = test_newer.drop(['Sex'], axis = 1)\ntest_final.head()","4948dc84":"from sklearn.preprocessing import Imputer\nimputer = Imputer(missing_values = 'NaN', strategy = 'mean', axis = 0)\nimputer_train= imputer.fit(train_final[['Age']])\nimputer_test=imputer.fit(test_final[['Age']])\ntrain_final[['Age']] = imputer.transform(train_final[['Age']])\ntest_final[['Age']] = imputer.transform(test_final[['Age']])\ntrain_final[['Age']]","8fd91c35":"sns.heatmap(train_final.isnull(),yticklabels=False,cbar=False,cmap='cividis')","0de4d4bc":"test_final.Embarked_Cat.isnull().sum()","50a270ba":"sns.heatmap(test_final.isnull(),yticklabels=False,cbar=False,cmap='cividis')","efc78c6b":"# Test\n\nx= train_final.loc[:, ['PassengerId', 'Age','SibSp','Fare', 'Parch', 'Pclass', 'Embarked_Cat', 'Sex_Cat']]\ny=train_final.Survived\n\ny","111add48":"correlation = x.corr()\ncorrelation","7c8399f3":"sns.heatmap(correlation)","8c393872":"correlation.style.background_gradient()","9d8e1087":"X_train= train_final.loc[:, ['PassengerId', 'SibSp', 'Parch', 'Pclass', 'Embarked_Cat', 'Sex_Cat']]\ny_train=train_final['Survived']\n\ncombined = [X_train, y_train]\ncombined","3516c01c":"X_test  = test_titanic.loc[:, ['PassengerId', 'SibSp', 'Parch', 'Pclass', 'Embarked_Cat', 'Sex_Cat']]\nX_train.shape, y_train.shape, X_test.shape","3dfeb9eb":"from sklearn.linear_model import LogisticRegression\n","81d71836":"logmodel = LogisticRegression()\nlogmodel.fit(X_train, y_train)","585ef8f0":"prediction = logmodel.predict(X_test)","d9e029de":"prediction","67a8bea2":"submission = pd.DataFrame({'PassengerId': X_test.PassengerId, 'Survived':prediction})\nsubmission.to_csv('submission.csv',index=False)\nsubmission","42a4ff62":"# Delete row and column for embarked nan and transform categorical value","13457f7c":"# Testing","273d0712":"TEST DATA","01cb39cc":"# Visualisation","a5298906":"# Drop the cabin column ","0026279e":"# Look for categorical value","3682e1fd":"# Transform sex into numerical value using label encoder","00eb3793":"# Impute missing value to age","2e839039":"# Read the training data and test data","eb48c616":"# Correlation Matrix","a00ec609":"# Import valuable libraries","3b5c5c87":"# Explanatory data analysis (EDA)","edab7052":"# Look for ratio between null value and total","5a404266":"# Use new variable","666f555c":"We can conclude that:\n* Age ratio can be imputed (< 20%)\n* Cabin ratio column can be dropped (> 20%)\n* Embarked ratio drop row (only 2 rows)\n"}}