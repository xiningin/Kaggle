{"cell_type":{"1e264a22":"code","d6167072":"code","24a3ef13":"code","4f84ae44":"code","d9d03262":"code","df2955cc":"code","2aafde60":"code","49292163":"markdown","6c3fef7a":"markdown"},"source":{"1e264a22":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6167072":"import json","24a3ef13":"def json_to_dataframe(file):\n\n    f = open ( file , \"r\") \n    data = json.loads(f.read())               #loading the json file.\n    iid = []                                  \n    tit = []                                  #Creating empty lists to store values.\n    con = []\n    Que = []\n    Ans_st = []\n    Txt = []\n    \n    for i in range(len(data['data'])):       #Root tag of the json file contains 'title' tag & 'paragraphs' list.\n        \n        title = data['data'][i]['title']\n        for p in range(len(data['data'][i]['paragraphs'])):  # 'paragraphs' list contains 'context' tag & 'qas' list.\n            \n            context = data['data'][i]['paragraphs'][p]['context']\n            for q in range(len(data['data'][i]['paragraphs'][p]['qas'])):  # 'qas' list contains 'question', 'Id' tag & 'answers' list.\n                \n                question = data['data'][i]['paragraphs'][p]['qas'][q]['question']\n                Id = data['data'][i]['paragraphs'][p]['qas'][q]['id']\n                for a in range(len(data['data'][i]['paragraphs'][p]['qas'][q]['answers'])): # 'answers' list contains 'ans_start', 'text' tags. \n                    \n                    ans_start = data['data'][i]['paragraphs'][p]['qas'][q]['answers'][a]['answer_start']\n                    text = data['data'][i]['paragraphs'][p]['qas'][q]['answers'][a]['text']\n                    \n                    tit.append(title)\n                    con.append(context)\n                    Que.append(question)                    # Appending values to lists\n                    iid.append(Id)\n                    Ans_st.append(ans_start)\n                    Txt.append(text)\n\n    print('Done')      # for indication perpose.\n    new_df = pd.DataFrame(columns=['Id','title','context','question','ans_start','text']) # Creating empty DataFrame.\n    new_df.Id = iid\n    new_df.title = tit           #intializing list values to the DataFrame.\n    new_df.context = con\n    new_df.question = Que\n    new_df.ans_start = Ans_st\n    new_df.text = Txt\n    print('Done')      # for indication perpose.\n    final_df = new_df.drop_duplicates(keep='first')  # Dropping duplicate rows from the create Dataframe.\n    return final_df","4f84ae44":"dev_data = json_to_dataframe('\/kaggle\/input\/stanford-question-answering-dataset\/dev-v1.1.json')\ndev_data","d9d03262":"dev_data.info()","df2955cc":"train_data = json_to_dataframe('\/kaggle\/input\/stanford-question-answering-dataset\/train-v1.1.json')\ntrain_data","2aafde60":"train_data.info()","49292163":"# This one function [json_to_dataframe(file_path)] works for both the json file.\n* Note : Remember to import json.","6c3fef7a":"<hr>\n\n*     This function built using all core python concepts like for loops, list and dict datatypes.\n*     Pandas helps in giving a proper representable table."}}