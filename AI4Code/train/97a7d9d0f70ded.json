{"cell_type":{"1ae4abd5":"code","1f2c9f60":"code","21139c89":"code","f994896b":"code","cd28c018":"code","99c92fb9":"code","f915e6c8":"code","1e9974a5":"code","89868dc1":"code","6c11cede":"code","53414c1b":"code","e59643e4":"code","717fee7d":"code","578af6e7":"code","13590178":"code","2fe0363c":"code","dffa37b0":"code","d3d87676":"code","f36810f4":"code","26570652":"code","dddecbfb":"code","45ab1b4f":"code","b2d61ad4":"code","39860a5c":"code","5fdc1c67":"code","b236593e":"code","1a7cd70a":"code","3daf000f":"code","d2a84c0f":"code","80c7c8d6":"markdown","6791fcf5":"markdown","73bab22b":"markdown","8567caf0":"markdown","2fb7e6a5":"markdown","613a5dc4":"markdown","e6e512be":"markdown","c05e37de":"markdown","c921b7b8":"markdown","618f821d":"markdown"},"source":{"1ae4abd5":"# Import the libraries\n\nimport pandas as pd\nimport numpy as np\nfrom numpy import NaN\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings('ignore')\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)","1f2c9f60":"# Read the dataset to the kernel\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","21139c89":"df = pd.read_csv('\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv')","f994896b":"# Removing the first row because we can't woek with it\n\ndf_1 = df.iloc[1:,:]\ndf_1.head()","cd28c018":"# Gender\n\ncounts = df_1.Q2.value_counts()\nplt.figure(figsize=(12,8))\nplt.title('Number of Participants by Gender')\nplt.xlabel('Gender')\nfor i in range(len(df_1.Q2.unique())):\n    plt.text(i,counts[i]\/2, str(f'{counts[i]:,}'), horizontalalignment='center', fontdict= dict(color='w'))\nsns.histplot(data=df_1, x='Q2')","99c92fb9":"# Gender and Age\n\n# To get the gender and age, we slice the data frame based on columns\n# which will give us the required information\ngenders = df_1.groupby(['Q1','Q2']).count()\ngenders = genders.iloc[:,0]\ngenders = genders.reset_index()\ngenders = genders.rename({'Time from Start to Finish (seconds)':'Count'}, axis=1)\nplt.figure(figsize=(15,8))\nplt.title('Gender and Age group count', fontdict=dict(fontsize=25))\nsns.barplot(data=genders, y='Count', x='Q1', hue='Q2')\nplt.xlabel('Age Group')\nplt.legend(title='Gender', bbox_to_anchor= (0.78, 1))","f915e6c8":"# Country & Gender\n\n# Again we sliced the data to get the required columns only\ngenders = df_1.groupby(['Q2','Q3']).count()\ngenders = genders.iloc[:,0]\ngenders = genders.reset_index()\ngenders = genders.rename({'Time from Start to Finish (seconds)':'Count'}, axis=1)\ngenders = genders.sort_values('Count', ascending=False)\nwomans = genders.loc[genders['Q2'] == 'Woman']\nwomans = womans.sort_values('Count', ascending=False)\nwomans = womans.iloc[:10, :]\nmen = genders.loc[genders['Q2'] == 'Man']\nmen = men.sort_values('Count', ascending=False)\nmen = men.iloc[:10, :]\nmen_women = pd.concat([womans, men])\nplt.figure(figsize=(15,8))\nplt.title('Gender and Country count (top 10)', fontdict=dict(fontsize=25))\nsns.barplot(data=men_women, y='Count', x='Q3', hue='Q2')\nplt.xticks(rotation=80)\nplt.xlabel('Country')\nplt.legend(title='Gender', bbox_to_anchor= (0.78, 1))","1e9974a5":"# Role & Gender\n\n# Again filtering the dataframe\nproffesion = df_1.groupby(['Q2','Q5']).count()\nproffesion = proffesion.iloc[:, 1]\nproffesion = proffesion.reset_index()\nproffesion = proffesion.rename({'Q1':'Count'}, axis=1)\nproffesion = proffesion.sort_values('Count', ascending=False)","89868dc1":"# Ploting the above dataset results\n\n# One more filter for fenders\nmen_q = proffesion.loc[proffesion['Q2'] == 'Man']\nwom_q = proffesion.loc[proffesion['Q2']== 'Woman']\nfig, ax = plt.subplots(1,2, figsize=(20,10))\nax[0].pie(men_q['Count'], labels=men_q['Q5'], autopct='%1.1f%%')\nax[0].set_title('Men', fontdict=dict(fontsize=20))\nax[0].axis('equal')\nax[1].pie(wom_q['Count'], labels=men_q['Q5'], autopct='%1.1f%%', rotatelabels=True)\nax[1].set_title('Woman',fontdict=dict(fontsize=20))\nax[1].axis('equal')\nplt.show()","6c11cede":"# Programming Langues\n\n# Defenition for collecting the sub-questions\n# For all the questions that have sub-questions will be collected and...\n# filtered by this function first and then invoke it into a new data frame\ndef all_Q(df, self='Q7'):\n    global Q\n    Q = []\n    for i in df.columns:\n        if i.startswith(str(self)) is True:\n            Q.append(str(i))\n        else: continue\n    return Q","53414c1b":"# capturing Q7 which is related to the programming langues\n\nall_Q(df_1, 'Q7')\nprog = df_1[Q]\nprog.columns = list(prog.mode().iloc[0,:])\nq7 = prog.count().reset_index()\nq7.columns = ['Languages','Count']","e59643e4":"# Ploting the above dataset\n\nplt.figure(figsize=(15,5))\nsns.barplot(data=q7, x='Languages', y='Count', color='Red')\nplt.title('Most Languages', fontdict=dict(fontsize=20), color='Purple')","717fee7d":"# Gender & Programming Languages\n\n# We append Q2 column (genders column) to the Q list and create a new dataframe..\n# Q list here is still Q7\nQ.append('Q2')\ngen_prog = df_1[Q]\ngen_prog.columns = list(gen_prog.mode().iloc[0,:])\ngen_prog = gen_prog.rename({'Man':'Gender'}, axis=1)\ngen_prog = gen_prog.groupby('Gender').count()\ngen_prog = gen_prog.reset_index()\ngen_prog","578af6e7":"# Subploting the for all Languages by Gender\n\ncount=1\nplt.subplots(figsize=(30, 20))\nfor i in gen_prog.columns[1:]:\n    plt.subplot(4,5, count)\n    sns.barplot(x=gen_prog['Gender'], y=gen_prog[i])\n    plt.xticks(rotation=20)\n    count+=1\n\nplt.show()","13590178":"# Woman only and Languages\n\nprog_wom = df_1[Q]\nprog_wom.columns = list(prog_wom.mode().iloc[0,:])\nprog_wom = prog_wom.rename({'Man':'Gender'}, axis=1)\nfor col in prog_wom.columns[:-1]:\n    prog_wom[col] = np.where(prog_wom[col].isnull(), 0, 1) # A way to convert the data to binary\nprog_wom = prog_wom.loc[prog_wom['Gender'] == 'Woman']\n#prog_wom = prog_wom.groupby('Gender').sum()\n#prog_wom = prog_wom.reset_index()\nprog_wom","2fe0363c":"# Ploting the above dataset\n\ncount=1\nplt.subplots(figsize=(30, 20))\nplt.suptitle('Woman and programming Languages')\nfor i in prog_wom.columns[:-1]:\n    plt.subplot(4,5, count)\n    sns.barplot(y=prog_wom[i], x=prog_wom.Gender)\n    #plt.xticks(rotation=20)\n    plt.yscale('linear')\n    plt.ylim((-0.2, 0.8))\n    count+=1\nplt.show()","dffa37b0":"# Roles & Coding experience\n\ncode_prof = df_1[['Time from Start to Finish (seconds)','Q5','Q6']]\ncode_prof = code_prof.rename({code_prof.columns[0]:'Count'}, axis=1)\ncode_prof = code_prof.groupby(['Q5','Q6']).count()\ncode_prof = code_prof.reset_index()\nplt.figure(figsize=(15,8))\nsns.barplot(data=code_prof, x='Q6', y='Count', hue='Q5', palette='Set2')\nplt.xlabel('Years of Coding')\nplt.legend(title='Role')","d3d87676":"df_1.columns","f36810f4":"# Education & Role\n\nedu_role = df_1[['Time from Start to Finish (seconds)','Q4','Q5']]\nedu_role = edu_role.groupby(['Q4','Q5']).count()\nedu_role = edu_role.reset_index()\nedu_role = edu_role.rename({edu_role.columns[-1]:'Count'}, axis=1)\nfig = go.Figure([go.Bar(x=edu_role.Q5, y=edu_role.Count)])\nfig.show()","26570652":"# Role & Gender\n\nrole_gen = df_1.groupby(['Q2','Q5']).count()\nrole_gen = role_gen[role_gen.columns[0]]\nrole_gen = role_gen.reset_index()\nrole_gen = role_gen.rename({role_gen.columns[2]: 'Count'}, axis=1)\nrole_gen = role_gen.loc[(role_gen['Q2'] == 'Woman') | (role_gen['Q2'] == 'Man')]\nrole_gen.head()","dddecbfb":"plt.figure(figsize=(15,8))\nsns.barplot(data=role_gen, y='Q5', hue='Q2', x='Count')\nplt.ylabel('Role', fontdict=dict(fontsize=15))\nplt.legend(title='Gender')\nplt.title('Role & Gender', fontdict=dict(fontsize=20))","45ab1b4f":"# IDE\n\n#first we need to collect Q9\nall_Q(df_1, 'Q9')\nide = pd.DataFrame()\nide[Q] = df_1[Q]\nide.columns = list(ide.mode().iloc[0, :])\nide = ide.count()\nide","b2d61ad4":"fig = go.Figure([go.Pie(values=ide.values, labels=ide.index, title='IDE Percentage')])\nfig.update_traces(hoverinfo='value+label', textinfo='percent', textfont_size=10,\n                  marker=dict(line=dict(color='#000000', width=1.5)))\nfig.show()","39860a5c":"# Programming Languages & Role\n\nall_Q(df, 'Q7')\nprog_role = pd.DataFrame()\nprog_role['Role'] = df_1['Q5']\nprog_role[Q] = df_1[Q]\nprog_role.columns = list(prog_role.mode().iloc[0,:])\nprog_role = prog_role.groupby('Student').count()\nprog_role","5fdc1c67":"count=1\nplt.subplots(figsize=(30, 20))\nplt.suptitle('Roles and programming Languages', fontdict=(dict(fontsize=30)))\nfor i in prog_role.columns[1:]:\n    plt.subplot(4,4, count)\n    plt.pie(prog_role[i], labels=prog_role.index, autopct='%1.1f%%')\n    plt.title(label=str(i))\n    count+=1\nplt.show()","b236593e":"# Melting the Dataframe to conver columns to rows\n\nprog_role_1 = prog_role.reset_index()\nrole_prog = pd.melt(prog_role_1, id_vars=['Student'])\n# Pivot the dataframe to convert the rows to columns\nrole_prog = role_prog.pivot(columns='Student', values='value', index='variable')\nrole_prog = role_prog.drop(role_prog.columns[-1], axis=1)\nrole_prog.head()","1a7cd70a":"count=1\nplt.subplots(figsize=(30, 20))\nplt.suptitle('Programming Languages and Roles ', fontdict=(dict(fontsize=30)))\nfor i in role_prog.columns:\n    plt.subplot(4,4, count)\n    plt.pie(role_prog[i], labels=role_prog.index, autopct='%1.1f%%')\n    plt.title(label=str(i))\n    count+=1\nplt.show()","3daf000f":"# ML Vis Lib\n\nall_Q(df_1, 'Q14')\nml_lib = df_1[Q]\nml_lib.columns = ml_lib.mode().iloc[0,:]\nml_lib = ml_lib.count()\nfig = go.Figure([go.Bar(x=ml_lib.index, y=ml_lib.values)])\nfig.update_traces(marker_color='pink', marker_line_color='blue')\nfig.update_layout(title_text='Most Selected Viz lib')\nfig.show()","d2a84c0f":"# ML Lib\n\nall_Q(df_1, 'Q16')\nml_lib = df_1[Q]\nml_lib.columns = ml_lib.mode().iloc[0,:]\nml_lib = ml_lib.count()\nx, y = ml_lib.index, ml_lib.values\nfig = go.Figure(data=[go.Bar(x=x, y=y)])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.5)\nfig.update_layout(title_text='Most Selected ML Library')\nfig.show()","80c7c8d6":"**The Pie charts seem to be identical.**\n\n**The Students of both genders are taking the majority of the participants although, the Women Students are accounted for more than Men by %8 followed by Data Scientists and Software Engineers.**\n\n**A nice point here to be described; the unemployed participants in both genders are almost the same which can give us an idea that there are no any kind of racisms at least for those who joined the survey.**\n\n","6791fcf5":"**The above charts are not surprising us, the same information as Men.**","73bab22b":"**This graph illustrating a couple of points:**\n1. India is the most participating country of both genders.\n2. Some countries such as Turkey Indonesia & Canada had only Women participants.","8567caf0":"# Building an EDA Model","2fb7e6a5":"### I want to thank Ken Jee for his Youtube video and his notebook too","613a5dc4":"## 1. Introduction\n*Kaggle conducts an industry-wide survey that presents a truly comprehensive view of the state of data science and machine learning. The survey was live for 3.5 weeks in October with 20,036 responses.*\n\n### The challenge objective: tell a data story about a subset of the data science community represented in this survey, through a combination of both narrative text and data exploration. A \u201cstory\u201d could be defined any number of ways, and that\u2019s deliberate. The challenge is to deeply explore (through data) the impact, priorities, or concerns of a specific group of data science and machine learning practitioners. This notebook tries to see Kagglers from the perspective of continents.","e6e512be":"**This graph is self-explained. Python is the most popular language among all famous languages followed by SQL which data query-specific language**","c05e37de":"**The Men in all languages are higher.**\n\n**The noticeable chart is the none language, the only chart that Women is very close to Men in terms of the number of participants.**","c921b7b8":"**We can see from the above chart that Men are dramatically higher than Women in Data and Data related domains**\n\n*We are talking about the dataset which has been obtained from Kaggle and this isn't mean that the whole world is the same*","618f821d":"**It's clear that the Men population is in the range of 25-29 years, which is making sense.**\n\n**On the other hand, Women are in the range 22-24, which could be explained later when we dive into the roles and the education**"}}