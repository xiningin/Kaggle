{"cell_type":{"8ad6dcbc":"code","7f3ee83c":"code","c358d214":"code","6800fb3d":"code","f039dd22":"code","21f46b90":"code","cb34e09a":"code","a4ae1019":"code","a39b5427":"code","2328f1ab":"code","fed2de89":"code","5edf1c47":"code","8c1ac8f3":"markdown","152a5f3f":"markdown","d009e66c":"markdown","8346ed79":"markdown","d87a222c":"markdown"},"source":{"8ad6dcbc":"import os\n\nimport cv2\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt #for plotting\nimport seaborn as sns            #vizualisation\n","7f3ee83c":"DIRE = '..\/input\/landmark-recognition-2020'","c358d214":"!ls {DIRE}","6800fb3d":"df = pd.read_csv(os.path.join(DIRE, 'train.csv'))\ndf.head(10)","f039dd22":"print(f'Total number of training images: {len(df)}')\n","21f46b90":"print(f'Total number of landmarks in training dataset: {df[\"landmark_id\"].nunique()}')\n","cb34e09a":"target_dist = df.groupby('landmark_id', as_index=False)['id'].count().sort_values('id', ascending=False).reset_index(drop=True)\ntarget_dist = target_dist.rename(columns={'id':'count'})\ntarget_dist","a4ae1019":"ad = sns.distplot(df['landmark_id'].value_counts()[:50])\nad.set(xlabel='Landmark Counts', ylabel='Probability Density', title='Distribution of top 50 landmarks')\nplt.show()","a39b5427":"ad = sns.distplot(df['landmark_id'].value_counts()[51:])\nad.set(xlabel='Landmark Counts', ylabel='Probability Density')\nplt.show()","2328f1ab":"def get_image(image_id):\n    img = cv2.imread(os.path.join(os.path.join(DIRE, 'train'), image_id[0], image_id[1], image_id[2], image_id + '.jpg'))\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    return img\n\ndef get_image_id(landmark_id):\n    return df[df['landmark_id'] == landmark_id]['id'][:1].values[0]","fed2de89":"fig, ad = plt.subplots(nrows=2, ncols=3, figsize=(30, 15))\nad = ad.flatten()\nlandmark_ids = target_dist['landmark_id'][:6].values\n\nfor i in range(6):\n    ad[i].imshow(get_image(get_image_id(landmark_ids[i])))\n    ad[i].grid(False)\nplt.show()\n","5edf1c47":"fig, ad = plt.subplots(nrows=2, ncols=3, figsize=(30, 15))\nad = ad.flatten()\nlandmark_ids = target_dist['landmark_id'][-6:].values\n\nfor i in range(6):\n    ad[i].imshow(get_image(get_image_id(landmark_ids[i])))\n    ad[i].grid(False)\nplt.show()","8c1ac8f3":"# TOP 6 Landmarks","152a5f3f":"Total 81313 landmarks and 1580470 images.\n\n","d009e66c":"# BOTTOM Landmarks","8346ed79":"# Distribution of All Landmarks\n","d87a222c":"let's plot the Probability density of rest of the landmarks\n\n"}}