{"cell_type":{"e2293db4":"code","418f3fbd":"code","c97d3670":"code","80d1f94c":"code","a96d87ef":"code","c0e96fee":"code","46055d41":"code","7f020a45":"code","88d20fcf":"code","a774be79":"code","ab49cd1b":"code","523dba21":"code","9e2b33c5":"code","536218e6":"code","43d862b0":"code","99dc5773":"code","73260ad3":"code","f91ba1bc":"code","6a35fe94":"code","7c350400":"code","c3fb012b":"code","4bc43727":"code","8b59569e":"code","496a17d8":"code","49720b4b":"code","352e1ada":"code","3345bc67":"markdown","6110d868":"markdown","1a77ebae":"markdown","c1da28db":"markdown","3bde9c97":"markdown","f9c2d011":"markdown","d9aa8de8":"markdown","f902a98a":"markdown","b3342aac":"markdown","dc4e968c":"markdown","06856a01":"markdown","9a8f8bad":"markdown","7a4e056c":"markdown","874b1348":"markdown","ee43348d":"markdown","f4869609":"markdown","33f75cb8":"markdown","cbb5a2c0":"markdown","05409c24":"markdown"},"source":{"e2293db4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","418f3fbd":"# import data\nraw_df = pd.read_csv(os.path.join(dirname, \"CarPrice_Assignment.csv\"))\nraw_df.sample(10)","c97d3670":"raw_df.dtypes","80d1f94c":"raw_df.drop(['car_ID'], axis=1, inplace=True)","a96d87ef":"raw_df.CarName = raw_df.CarName.str.split(' ', expand=True)","c0e96fee":"raw_df['CarName'] = raw_df['CarName'].replace(\n    {'maxda': 'mazda', \n     'nissan': 'Nissan', \n     'porcshce': 'porsche', \n     'toyouta': 'toyota', \n    'vokswagen': 'volkswagen', 'vw': 'volkswagen'\n    }\n)","46055d41":"# raw_df.describe()\nset(raw_df['CarName'])\n# raw_df","7f020a45":"raw_df['symboling']=raw_df['symboling'].astype('str')","88d20fcf":"num_cols = raw_df.describe().columns\nraw_df.describe()","a774be79":"# carName_df = pd.DataFrame(raw_df['CarName'])\nraw_df['CarName'].value_counts().plot(kind='bar')","ab49cd1b":"df = pd.DataFrame(raw_df['fueltype'].value_counts())\nplot = df.plot.pie(y='fueltype', figsize=(5, 5))\nplot","523dba21":"sns.distplot(raw_df['price'])","9e2b33c5":"plt.figure(figsize=(16,8))\nplt.subplot(221)\nplt.hist(raw_df[raw_df['fueltype']== 'gas']['price'], edgecolor='black', bins=5)\nplt.title('Price distribution of gas vehicles (5 bins)')\nplt.xlabel('price')\nplt.ylabel('frequency')\n\nplt.subplot(222)\nplt.hist(raw_df[raw_df['fueltype']== 'diesel']['price'], edgecolor='black', bins=5)\nplt.title('Price distribution of diesel vehicles (5 bins)')\nplt.xlabel('price')\nplt.ylabel('frequency')\n\nplt.subplot(223)\nplt.hist(raw_df[raw_df['fueltype']== 'gas']['price'], edgecolor='black', bins=10)\nplt.xlabel('price')\nplt.ylabel('frequency')\nplt.title('Price distribution of gas vehicles (10 bins)')\n\nplt.subplot(224)\nplt.hist(raw_df[raw_df['fueltype']== 'diesel']['price'], edgecolor='black', bins=10)\nplt.title('Price distribution of diesel vehicles (10 bins)')\nplt.xlabel('price')\nplt.ylabel('frequency')\n\nplt.tight_layout()\nplt.show()","536218e6":"print(len(raw_df)) # 205","43d862b0":"clean_df = raw_df[num_cols].dropna()\nprint(len(clean_df)) # 205 -> Data already cleaned","99dc5773":"correlation = raw_df.corr()\ncorrelation\n\n# heat map\nimport seaborn as sns\n\nmask = np.zeros_like(correlation, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n\nfig = plt.figure(figsize=(12, 8))\nsns.heatmap(correlation, mask=mask, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","73260ad3":"from sklearn.preprocessing import LabelEncoder\n\n# creating instance of labelencoder\nlabelencoder = LabelEncoder()\nraw_df['CarName_Cat'] = labelencoder.fit_transform(raw_df['CarName'])\nraw_df['fueltype_Cat'] = labelencoder.fit_transform(raw_df['fueltype'])\nraw_df","f91ba1bc":"raw_df[['CarName', 'CarName_Cat']].groupby(by='CarName').mean()\n","6a35fe94":"cols = list(num_cols)\ncols.append('CarName_Cat')\ncols.append('fueltype_Cat')\ncols\n\nclean_df = raw_df[cols].copy()\n\nclean_df","7c350400":"from sklearn.model_selection import train_test_split\n# print(cols.remove('price'))\nprint(cols)\nX = clean_df[cols]\ny = clean_df[['price']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","c3fb012b":"X_train","4bc43727":"from sklearn.linear_model import LinearRegression\n\nlinreg = LinearRegression()\nlinreg.fit(X_train, y_train)","8b59569e":"sns.pairplot(clean_df, x_vars=cols[0:5], y_vars='price', size=7, aspect=0.7, kind='reg')","496a17d8":"sns.pairplot(clean_df, x_vars=cols[5:10], y_vars='price', size=7, aspect=0.7, kind='reg')","49720b4b":"sns.pairplot(clean_df, x_vars=cols[10:], y_vars='price', size=7, aspect=0.7, kind='reg')","352e1ada":"from sklearn.metrics import r2_score,mean_absolute_error, mean_squared_error\n\ny_pred = linreg.predict(X_train)\nprint(\"R2-score: %.2f\" % r2_score(y , y_pred))\n# calculate MAE, MSE, RMSE\nprint(mean_absolute_error(y, y_pred))\nprint(mean_squared_error(y, y_pred))\nprint(np.sqrt(mean_squared_error(y, y_pred)))","3345bc67":"### Fuel type\nMost car uses Gas over diesel","6110d868":"## H\u1ec7 s\u1ed1 t\u01b0\u01a1ng quan: (Correlation Coeficient)","1a77ebae":"## Evaluation","c1da28db":"# Mini Group Project\nCredit: Nguyen Dinh Hung and Nguyen Thi My Le \\\nDO NOT COPY WITHOUT PERMISSION","3bde9c97":"### Car names","f9c2d011":"## Missing Value","d9aa8de8":"# Conclusion","f902a98a":"## Multiple Linear Regression","b3342aac":"# Build Model\nBecause we haven't studied how to Encode Categorical data, we'll just be using numberical data for now (and Car name + fueltype)\n\n\n## Split data","dc4e968c":"### Price distribution of Cars\nPrice max: 45400 \\\nPrice min: 5118\n- Right skewed\n- maximum number of cars are in range of 20000","06856a01":"According to the dataset:\n\nToyota is the most popular car \\\nMercury is the least popular car","9a8f8bad":"# Data cleaning","7a4e056c":"### Remove Duplicate values in car names\n- nissan == Nissan\n- toyota == toyouta\n- vokswagen == volkswagen == vw\n- mazda == maxda\n- porcshce == porsche\n","874b1348":"1 : T\u01b0\u01a1ng Quan \u0110\u1ed3ng Bi\u1ebfn \\\n0 : \u0110\u1ed9c l\u1eadp, kh\u00f4ng t\u01b0\u01a1ng quan \\\n-1: T\u01b0\u01a1ng Quan Ngh\u1ecbch Bi\u1ebfn ","ee43348d":"### Price distribution of Fuel type (gas vs. diesel)","f4869609":"Get only the features I have analyzed","33f75cb8":"### Drop car_ID","cbb5a2c0":"# Exploratory Data Analysis","05409c24":"### Categorical using LabelEncoder"}}