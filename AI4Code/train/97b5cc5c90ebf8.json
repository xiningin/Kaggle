{"cell_type":{"0a96b8da":"code","0a90360c":"code","f82fe32e":"code","0b062b05":"code","34878e75":"code","9c8a5a28":"code","fb4908d1":"code","4cf42fae":"code","8ad74651":"code","252d5ef4":"code","366846ed":"code","2a56df48":"code","9bcfd27f":"code","63824ac9":"code","21421eff":"code","4a112653":"code","be06701e":"code","c07a53b2":"code","f8d9669c":"code","e1feb62b":"code","b273013e":"code","c76e4d2d":"markdown","9c9ed7c4":"markdown","89815845":"markdown","24811ab5":"markdown","823f243f":"markdown","eee63011":"markdown","c9c7cb0b":"markdown","787b6f0e":"markdown","4fe80eb7":"markdown","c6c4581c":"markdown","e2660645":"markdown","de030697":"markdown","145b236c":"markdown","78a5301d":"markdown","26cbaa32":"markdown","32298f22":"markdown","8b037202":"markdown"},"source":{"0a96b8da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0a90360c":"data = pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","f82fe32e":"data.head()","0b062b05":"data.head(10)","34878e75":"data.info()","9c8a5a28":"data.corr()","fb4908d1":"f,ax = plt.subplots(figsize=(13, 13))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","4cf42fae":"data.columns","8ad74651":"data.EU_Sales.plot(kind=\"line\", color = \"g\", label = \"EU_Sales\", linewidth = 1, alpha = .5, grid = True, linestyle=\"-\")\ndata.Global_Sales.plot(kind=\"line\", color = \"r\", label=\"Global_Sales\", linewidth = 1, alpha = .5, grid = True, linestyle=\":\")\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')              \nplt.ylabel('y axis')\nplt.title('Line Plot')            \nplt.show()","252d5ef4":"\ndata.plot(kind='scatter', x='EU_Sales', y='Global_Sales',alpha = 0.5,color = 'red')\nplt.xlabel('EU_Sales')              \nplt.ylabel('Global_Sales')\nplt.title('EU - Global Scatter Plot')  ","366846ed":"data.EU_Sales.plot(kind = \"hist\", bins=5, figsize=(13,13))\nplt.show()","2a56df48":"data.EU_Sales.plot(kind=\"hist\", bins = 5, figsize = (10,10) )\nplt.clf()","9bcfd27f":"_dict = {\"course1\":\"python for ai\", \"course2\":\"data science\", \"course3\":\"data visulization\"}\nprint(_dict.keys())\nprint(_dict.values())","63824ac9":"_dict[\"course4\"] = \"machine learning\"\nprint(_dict)\n_dict[\"course1\"] = \"intro to python for data science\"\nprint(_dict)\ndel _dict[\"course3\"]\nprint(_dict)\nprint(\"course4\" in _dict)\nprint(\"course3\" in _dict)\n_dict.clear()\nprint(_dict)","21421eff":"del _dict\nprint(_dict)","4a112653":"series = data[\"Year\"]\nprint(type(series))\ndata_frame = data[[\"Year\"]]\nprint(type(data_frame))","be06701e":"print(5>8)\nprint(13>7)\nprint(True or False)\nprint(True and False)","c07a53b2":"x = data[\"EU_Sales\"] > 9\ndata[x]","f8d9669c":"data[np.logical_and(data[\"EU_Sales\"]>7, data[\"Global_Sales\"]>9)]","e1feb62b":"data[(data[\"EU_Sales\"]>7) & (data[\"Global_Sales\"]>9)]","b273013e":"\nlis = [1,2,3,4,5]\nfor i in lis:\n    print('i is: ',i)\n    lis[i-1] = len(lis)-(i-1)\nprint('')\n\n\nfor index, value in enumerate(lis):\n    print(index,\" : \",value)\nprint('')   \n\n\ndictionary = {'course1':'intro to python','course2':'data science', \"course4\":\"machine learning\"}\nfor key,value in dictionary.items():\n    print(value,\" : \",key)\nprint('')\n\n# For pandas we can achieve index and value\nfor index,value in data[['Rank']][:5].iterrows():\n    print(index,\" : \",value)","c76e4d2d":"**logical and**","9c9ed7c4":"**showing first 10 element of the data**","89815845":"**eu_sales histogram**","24811ab5":"**same thing with bitwise operators**","823f243f":"**reading our data (in this case a csv file)**","eee63011":"**line plotting EU-sales column and global sales column using matplotlib**","c9c7cb0b":"**A better way of displaying correlation**","787b6f0e":"**scatter ploting eu_sales and global_sales using matplotlib**","4fe80eb7":"**basic comparison operators**\n","c6c4581c":"**WORKING WITH DICTIONARIES**","e2660645":"**showing the first 5 elements of the data by default**","de030697":"**filtering pandas data frames**","145b236c":"**WORKING WITH LOOPS**","78a5301d":"**info about the data (column names, data types, non null count, etc.)**","26cbaa32":"**checking the correlation between columns for intuitive assumptions**","32298f22":"**difference between series and data frame**","8b037202":"**column names**\n"}}