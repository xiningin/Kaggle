{"cell_type":{"df478876":"code","0307f8bd":"code","165f32d5":"code","bb6a0f74":"code","e0094597":"code","e553e340":"code","bf6ba822":"code","edd88065":"code","ed347020":"code","2d143ac2":"code","6ff57aa5":"markdown","836e9bb0":"markdown","ead56ce3":"markdown","a4f2e2a6":"markdown","c0cb4763":"markdown","60c6d626":"markdown","9480e9c9":"markdown"},"source":{"df478876":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.model_selection import train_test_split, GridSearchCV","0307f8bd":"train = pd.read_csv('..\/input\/human-activity-recognition-with-smartphones\/train.csv')\ntest = pd.read_csv('..\/input\/human-activity-recognition-with-smartphones\/test.csv')\n\ntrain.head()","165f32d5":"train.shape","bb6a0f74":"train.isnull().sum(axis=1)","e0094597":"x_train = train.drop([\"Activity\", \"subject\"], axis=1)\nx_train","e553e340":"y_train = train.Activity\ny_train.unique()","bf6ba822":"pd.crosstab(index=y_train, columns=\"count\")","edd88065":"train = pd.read_csv('..\/input\/human-activity-recognition-with-smartphones\/train.csv')\ntest = pd.read_csv('..\/input\/human-activity-recognition-with-smartphones\/test.csv')\n\nle = LabelEncoder()\ntrain[\"activity\"] = le.fit_transform(train[\"Activity\"])\ntrain[\"Activity\"] = train[\"activity\"]\ntest[\"activity\"] = le.fit_transform(test[\"Activity\"])\ntest[\"Activity\"] = test[\"activity\"]\n\nx_train = train.drop([\"Activity\", \"subject\", \"activity\"], axis=1)\ny_train = train.Activity\nx_test = test.drop([\"Activity\", \"subject\", \"activity\"], axis=1)\ny_test = test.Activity\n\nx_train, x_test, y_train, y_test = (\n    x_train.values,\n    x_test.values,\n    y_train.values,\n    y_test.values,\n)","ed347020":"model = GradientBoostingClassifier(\n    loss=\"deviance\",\n    learning_rate=0.1,\n    n_estimators=100,\n    subsample=1,\n    min_samples_split=10,\n)\n\nparam_grid = {\n    \"learning_rate\": [0.01,0.05, 0.15, 0.2],\n    \"max_depth\": [3, 5],\n    \"subsample\": [0.5, 1.0],\n}\n\nGridSearchCV = GridSearchCV(model, param_grid, cv=2)\nGridSearchCV.fit(x_train, y_train)\n","2d143ac2":"pred = model.predict(x_test)\naccuracy = accuracy_score(y_test, pred)\naccuracy","6ff57aa5":"As we can see, our train dataset has 7352 instances and 563 attributes. \n\nNow, let us check the null values, see if we have any.","836e9bb0":"#  2 - Applying Gradient Boosting Classifier\n\nIn the following, I used GradientBoostingClassifier from the Sklearn.\n\nI have set all the parameters as their default values except for the learning rate, max_depth, and subsample. To find their optimum values, I used GridsearchCV to implement cross-validation on all the specified parameters. The number of the split in cross-validation has been set to 2 to run the model faster.\n\n","ead56ce3":"#  1 - Reading and exploring the dataset","a4f2e2a6":"# #  1.1 - Exploring the classes","c0cb4763":"We can conclude that we have six label classes.","60c6d626":"Let's split the X values for the training split by dropping the class column.","9480e9c9":"# #  1.2 - Reading and exploring the dataset\nIn the following, I define train and test data sets and class labels.\n\nAlso, I changed the class labels."}}