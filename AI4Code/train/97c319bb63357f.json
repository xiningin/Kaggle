{"cell_type":{"b59a9a0d":"code","f6782fb3":"code","4714cf40":"code","6ebb9323":"code","5f94a301":"code","bab46911":"code","f8f9f880":"code","904cd358":"code","c8a6cf9f":"code","8d32e021":"code","fd20d739":"code","399761dc":"code","511aa9c5":"markdown","35ca8fab":"markdown","9c548838":"markdown","a3d6dff6":"markdown","54478fa1":"markdown","14f8acf7":"markdown","5bbd428b":"markdown","d4092364":"markdown","37440f11":"markdown","00904ab2":"markdown","0fa34ffb":"markdown","9ca2a18f":"markdown"},"source":{"b59a9a0d":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f6782fb3":"import pandas as pd","4714cf40":"annually_df = pd.read_csv(\"\/kaggle\/input\/life-expectancy-at-birth-in-europe\/tps00208.tsv\", sep='\\t')","6ebb9323":"print(list(annually_df.columns))","5f94a301":"pivot_data_col = annually_df.columns[0]\ntime_columns = annually_df.columns[1:]","bab46911":"annually_df['unit']     = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[0])\nannually_df['sex'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[1])\nannually_df['statinfo'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[2])\nannually_df['geography'] = annually_df[pivot_data_col].apply(lambda x: x.split(\",\")[3])","f8f9f880":"selected_columns = list(['unit', 'sex', 'statinfo', 'geography']) +  list(time_columns)\nannually_df = annually_df[selected_columns]","904cd358":"annually_tr_df = annually_df.melt(id_vars=['unit', 'sex', 'statinfo', 'geography'], \n        var_name=\"date\", \n        value_name=\"value\")\nannually_tr_df['date'] = annually_tr_df['date'].apply(lambda x: int(x))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: str(x).replace(\": \", \"NAN\"))\nannually_tr_df['value'] = annually_tr_df['value'].apply(lambda x: float(x))","c8a6cf9f":"print(f\"Transformed data shape: {annually_tr_df.shape} (rows\/columns)\")\nannually_tr_df.head()","8d32e021":"annually_tr_df.tail()","fd20d739":"import pandas_profiling\npandas_profiling.ProfileReport(annually_tr_df)","399761dc":"annually_tr_df.to_csv(\"life_expectancy_at_birth.csv\", index=False)","511aa9c5":"# Data pre-processing\n\nWe start by defining two working lists.","35ca8fab":"# A very preliminary exploratory data analysis\n\nThis would be a very short exploratory data analysis. The role of this Kernel is just to show how we can prepare the annual data for analysis and we already did this.","9c548838":"Next, we pivot the time columns using `melt` operation in pandas.  \nWe also make sure we transform `date` to be an integer (here is a year data).  \nWe set `value` to be a float, after we replace \": \" (for N\/A) with `NAN`.","a3d6dff6":"Let's inspect the result.","54478fa1":"## Load the data\n\nThe datafiles are in TSV format. We will read the files using pandas, just include in the function call the `sep` (tab separator data).\nWe demonstrate first how to read and process the Annual data.","14f8acf7":"The first column is a composed one, containing 4 different information (the unit for temporal data, sex, type of statistical info, the geography). The next columns are the year value, from first (2009) to last (2019).","5bbd428b":"We select now only the new columns resulted from splitting the `pivot_data_col` and the time columns.","d4092364":"Then, we split from `pivot_data_col` the 3 separate fields:\n* unit (YR only);\n* sex (F\/M);\n* statistical indicator;\n* geography.","37440f11":"# Analysis preparation\n\n## Load packages","00904ab2":"# Save reformated dataset\n\nLet's now save the dataset in *.csv format.","0fa34ffb":"# Introduction\n\nWe show in this Kernel how we can process the data to prepare it for easier processing. Let's check the data files.","9ca2a18f":"Let's glimpse the data columns."}}