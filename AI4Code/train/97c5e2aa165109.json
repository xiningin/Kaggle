{"cell_type":{"3fb1867a":"code","80a9c211":"code","4a4bf0a0":"code","dda97051":"code","32447d92":"code","caac2c7a":"code","b261be3d":"code","74aaca6b":"code","44bc0156":"code","181200e5":"code","0f97707b":"code","25236a15":"code","1023d8b1":"code","cf5a18ca":"code","daf1087b":"code","4b6e199b":"code","ba033dc1":"code","6e69139e":"code","80682481":"code","4ba3b735":"code","ce52a0a2":"code","539ff91a":"code","139a14d0":"markdown","c8bde971":"markdown","df0a68d0":"markdown","75ec5fd4":"markdown","56ce64d2":"markdown","a62d5d06":"markdown","e93fb31e":"markdown","6236984d":"markdown","1b28e897":"markdown","84f1dc1c":"markdown"},"source":{"3fb1867a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","80a9c211":"df = pd.read_csv('..\/input\/spider-taxonomy-dataset\/species_export_20211111.csv', encoding='utf8')\ndf.head(2)","4a4bf0a0":"mll = df[(df['author']=='Mello-Leit\u00e3o')].reset_index(drop=True)\nmll.tail()","dda97051":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in mll.author)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Purples', background_color=\"white\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","32447d92":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.author)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Purples', background_color=\"red\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","caac2c7a":"#Code by Schichaoming https:\/\/www.kaggle.com\/shichaoming\/scm-201943407\n\ndef resumetable(df):\n    '''function to create feature summary'''\n    print(f'Shape: {df.shape}')\n    summary = pd.DataFrame(df.dtypes, columns=['Data Type'])\n    summary = summary.reset_index()\n    summary = summary.rename(columns={'index': 'Features'})\n    summary['Num of Null Value'] = df.isnull().sum().values\n    summary['Num of Unique Value'] = df.nunique().values\n    summary['1st Value'] = df.loc[0].values\n    summary['2nd Value'] = df.loc[1].values\n    summary['3rd Value'] = df.loc[2].values\n    return summary","b261be3d":"#Code by Schichaoming https:\/\/www.kaggle.com\/shichaoming\/scm-201943407\n\nresumetable(df)","74aaca6b":"#Code by Schichaoming https:\/\/www.kaggle.com\/shichaoming\/scm-201943407\n\ndef downcast(df, verbose=True):\n    start_mem = df.memory_usage().sum() \/ 1024**2\n    for col in df.columns:\n        dtype_name = df[col].dtype.name\n        if dtype_name == 'object':\n            pass\n        elif dtype_name == 'bool':\n            df[col] = df[col].astype('int8')\n        elif dtype_name.startswith('int') or (df[col].round() == df[col]).all():\n            df[col] = pd.to_numeric(df[col], downcast='integer')\n        else:\n            df[col] = pd.to_numeric(df[col], downcast='float')\n    end_mem = df.memory_usage().sum() \/ 1024**2\n    if verbose:\n        print('{:.1f}% Compressed'.format(100 * (start_mem - end_mem) \/ start_mem))\n    \n    return df","44bc0156":"#Code by Schichaoming https:\/\/www.kaggle.com\/shichaoming\/scm-201943407\n\ndf = downcast(df)","181200e5":"df[\"year\"].value_counts()","0f97707b":"ax = df['genus'].value_counts()[:20].plot.barh(figsize=(16, 8), color='orange')\nax.set_title('Spider Genus', size=18, color='green')\nax.set_ylabel('Genus', size=10)\nax.set_xlabel('Count', size=10);","25236a15":"ax = df['family'].value_counts()[:20].plot.barh(figsize=(16, 8), color='green')\nax.set_title('Spider Family', size=18, color='orange')\nax.set_ylabel('Family', size=10)\nax.set_xlabel('Count', size=10);","1023d8b1":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.family)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","cf5a18ca":"text_cols = ['author', 'genus', 'species', 'distribution']\n\nfrom wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state = 42)\nfig, axes = plt.subplots(2, 2, figsize=(20, 12))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(text_cols):\n  op = wc.generate(str(df[c]))\n  _ = axes[i].imshow(op)\n  _ = axes[i].set_title(c.upper(), fontsize=24)\n  _ = axes[i].axis('off')","daf1087b":"#Code by Baekhakjeon https:\/\/www.kaggle.com\/baekhakjeon\/explorer-tabular-playground-series-apr-2021\n\nplt.figure(figsize = (10, 5), dpi = 100)\nax = sns.countplot(x='family', hue='parentheses', palette= 'Purples', data=df)\n\n# Display values on the plot\nfor p in ax.patches:\n    ax.annotate(text=p.get_height(), xy=(p.get_x()+0.2, p.get_height()+1000), horizontalalignment='center', verticalalignment='top', color='black', size=10)\n\nplt.title(\"Spider Family by Parentheses\", fontsize=20)    \nplt.xlabel('Spider Family', fontsize=15)\nplt.ylabel('Counts', fontsize=15)\n#plt.legend(['Not Extinct', 'Extinct'], fontsize=15)\nplt.show()","4b6e199b":"#Code by Taha07  https:\/\/www.kaggle.com\/taha07\/data-scientists-jobs-analysis-visualization\/notebook\n\ncolor = plt.cm.Purples(np.linspace(0,1,20))\ndf[\"species\"].value_counts().sort_values(ascending=False).head(10).plot.pie(y=\"year\",colors=color,autopct=\"%0.1f%%\")\nplt.title(\"Spider Species\")\nplt.axis(\"off\")\nplt.show()","ba033dc1":"brz = df[(df['distribution']=='Brazil')].reset_index(drop=True)\nbrz.tail()","6e69139e":"amz = df[(df['species']=='amazonica')].reset_index(drop=True)\namz.tail()","80682481":"#Code by Baekhakjeon https:\/\/www.kaggle.com\/baekhakjeon\/explorer-tabular-playground-series-apr-2021\n\nplt.figure(figsize = (10, 5), dpi = 100)\nax = sns.countplot(x='year', hue='parentheses', palette= 'Purples', data=amz)\n\n# Display values on the plot\nfor p in ax.patches:\n    ax.annotate(text=p.get_height(), xy=(p.get_x()+0.2, p.get_height()+1000), horizontalalignment='center', verticalalignment='top', color='black', size=10)\n\nplt.title(\"Amazonica Spider by Years\", fontsize=20)    \nplt.xlabel('Year', fontsize=15)\nplt.ylabel('Counts', fontsize=15)\n#plt.legend(['Not Extinct', 'Extinct'], fontsize=15)\nplt.show()","4ba3b735":"mll = df[(df['author']=='Mello-Leit\u00e3o')].reset_index(drop=True)\nmll.head()","ce52a0a2":"#Code by Baekhakjeon https:\/\/www.kaggle.com\/baekhakjeon\/explorer-tabular-playground-series-apr-2021\n\nplt.figure(figsize = (10, 5), dpi = 100)\nax = sns.countplot(x='year', hue='parentheses', palette= 'Purples', data=mll)\n\n# Display values on the plot\nfor p in ax.patches:\n    ax.annotate(text=p.get_height(), xy=(p.get_x()+0.2, p.get_height()+1000), horizontalalignment='center', verticalalignment='top', color='black', size=10)\n\nplt.title(\"Mello-Leit\u00e3o Spiders discovers by Year \", fontsize=20)    \nplt.xlabel('Year', fontsize=15)\nplt.ylabel('Counts', fontsize=15)\n#plt.legend(['Not Extinct', 'Extinct'], fontsize=15)\nplt.xticks(rotation=45)\nplt.show()","539ff91a":"las = mll[(mll['species']=='parahybana')].reset_index(drop=True)\nlas.tail()","139a14d0":"#<font color=\"#EC7063\">Lasiodora parahybana<\/font>\n\n\"Lasiodora parahybana, the Brazilian salmon pink bird-eating tarantula, also simply known as the salmon pink or LP, is a tarantula from north-eastern Brazil and considered to be the fourth largest tarantula in the world (behind the three species in the genus Theraphosa).\"\n\n\"It was discovered and described in 1917 by C\u00e2ndido Firmino de Mello-Leit\u00e3o,in Para\u00edba, where the tarantula is endemic. They are popular pets in the tarantula hobby due to their large size and readiness to breed. They are also considered to be 'docile'.\"\n\n\"When threatened, the tarantula will raise its legs in the air, as well as the front of its body, in order to deter predators. If the attacker continues to attack, the tarantula will bite. The Brazilian salmon pink tarantula is capable of delivering a painful bite. They are known to bite only when provoked, and even then, this is a last resort. Bites from an L. parahybana are mechanically dangerous; fangs can be up to an inch long. Some sites claim that a bite from a salmon pink is similar to that of a cat. However, rather than biting, they choose to flick urticating hairs from a patch on their abdomen; these hairs are covered in barbs which irritate the skin and put off potential predators. These hairs are extremely irritating; in the hobby, they are considered to be one of the more painful hair types. Hairs that get into the eyes can cause blindness.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/Lasiodora_parahybana","c8bde971":"![](https:\/\/ecdn.teacherspayteachers.com\/thumbitem\/Charlotte-s-Web-Day-Let-s-Celebrate-2799973-1564611448\/original-2799973-4.jpg)teacherspayteachers.com","df0a68d0":"#Family length is 129, let's plot 20 Spider Family","75ec5fd4":"#<font color=\"#EC7063\">Lasiodora parahybana<\/font>","56ce64d2":"![](https:\/\/static.wixstatic.com\/media\/bf41c0_a38742693c1b447c97136aaa0c9c6165~mv2.jpg\/v1\/fill\/w_1000,h_376,al_c,q_90,usm_0.66_1.00_0.01\/bf41c0_a38742693c1b447c97136aaa0c9c6165~mv2.jpg)espacoselvagem.wixsite.com","a62d5d06":"#Hello Python by Charlotte's Web.","e93fb31e":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #8A2BE2;\"><b style=\"color:white;\">Mello-Leit\u00e3o founder of Arachnology in South America<\/b><\/h1><\/center>\n\n\"C\u00e2ndido Firmino de Mello-Leit\u00e3o (July 17, 1886 \u2013 December 14, 1948) was a Brazilian zoologist who is considered the founder of Arachnology in South America, publishing 198 papers on the taxonomy of Arachnida. He was also involved with education, writing high-school textbooks, and contributed to biogeography, with essays on the distribution of Arachnida in the South American continent.\"\n\n\"Among the many species of spiders researched and catalogued by the zoologist there is one in particular which is very intriguing, given its big size, beauty and carnivore habits (it is a bird eater) \u2013 the Lasiodora parahybana. The species was discovered and first described in 1917 in the vicinities of the city of Campina Grande, Para\u00edba, from where it is endemic.\"\n\n\"Mello-Leit\u00e3o received many honor awards and was appointed or elected to distinguished positions during his career. He was president of the Brazilian Academy of Sciences from 1943 to 1945.\"\n\n\"On June 6, 1949, his friend Augusto Ruschi inaugurated the Museum of Biology Mello-Leit\u00e3o in Santa Teresa, Esp\u00edrito Santo (state).\"\n\n\"The \"Mello-Leit\u00e3o Award\" is granted by the Brazilian Academy of Sciences.\"\n\nhttps:\/\/en.wikipedia.org\/wiki\/C%C3%A2ndido_Firmino_de_Mello-Leit%C3%A3o","6236984d":"#My Spider Family overlapped x-axis with its \"Spider Web\".","1b28e897":"#Since Genus length is 4233, let's plot 20 Spider Genus","84f1dc1c":"#I don't need to downcast\/reduce memory. I'm saving it for another time."}}