{"cell_type":{"3b7dd950":"code","56b1ae19":"code","b20f614b":"code","c756e176":"code","fbe5a10a":"code","99c578a3":"code","a4df6e23":"code","dbc8395b":"code","0183a957":"code","e583221a":"code","03d72e8d":"code","0ce02994":"code","640ce433":"code","a9d4070e":"code","64459262":"code","2effc82f":"code","6e6d2879":"code","644acc59":"code","8f5f8886":"code","acc3ff54":"code","10ddc595":"code","984230a4":"code","7e8c76d9":"code","7c8b17fc":"code","414c08b0":"code","ac6a551d":"code","dbaad9dd":"code","89563075":"code","40298fca":"code","5bdc1037":"code","cf83b5ef":"code","b4092319":"code","34759101":"code","706e5705":"code","e83d7f2b":"code","1b6fabd5":"code","29093683":"code","81f0f0f2":"code","a69eb9f9":"code","42833994":"code","8ad801ef":"code","e9580584":"code","3eeeea31":"markdown","f60f56fd":"markdown","f9ae1aeb":"markdown","ac41934a":"markdown","012bd13b":"markdown","82cb94a3":"markdown","b26f0d75":"markdown","2ff485a2":"markdown","62db298f":"markdown","cd2aac3d":"markdown","12ddf807":"markdown","36787b1f":"markdown"},"source":{"3b7dd950":"import pandas as pd\nimport numpy as np\nimport plotly.graph_objects as go\nfrom matplotlib import pyplot as plt\nimport warnings\nimport plotly.express as px\nimport seaborn as sns\nfrom wordcloud import WordCloud\nimport geopandas\nwarnings.filterwarnings('ignore')\nsns.set(rc={'figure.figsize':(20,20)})","56b1ae19":"df = pd.read_csv(\"..\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")","b20f614b":"df.head()","c756e176":"df[\"iso_code\"].unique()","fbe5a10a":"df[\"country\"].unique()","99c578a3":"eu_country=[\"Austria\",\n\"Belgium\",\n\"Bulgaria\",\n\"Croatia\", \n\"Cyprus\",\n\"Czech Republic\",\n\"Denmark\",\n\"Estonia\",\n\"Finland\",\n\"France\", \n\"Germany\", \n\"Greece\", \n\"Hungary\",\n\"Ireland\",\n\"Italy\",\n\"Latvia\",\n\"Lithuania\",\n\"Luxembourg\", \n\"Malta\",\n\"Netherlands\",\n\"Poland\",\n\"Portugal\",\n\"Romania\",\"Slovakia\",\"Slovenia\",\"Spain\",\"Sweden\"]","a4df6e23":"eu_country_in_df=[coun for i,coun in enumerate(eu_country) if coun in df[\"country\"].unique()]\n     ","dbc8395b":"eu_country_in_df","0183a957":"new_df = df.groupby([\"country\",'iso_code','vaccines'])['total_vaccinations','people_vaccinated','people_fully_vaccinated',\n                                           'daily_vaccinations','total_vaccinations_per_hundred','people_vaccinated_per_hundred',\n                                           \"people_fully_vaccinated_per_hundred\",'daily_vaccinations_per_million'].max().reset_index()\nnew_df.head()\n\n","e583221a":"df_per = df[df['country'].isin(eu_country_in_df)]\ndf_per = df_per.sort_values(by=\"people_vaccinated_per_hundred\",ascending=False,ignore_index=True)\nunique_country_vac_list = []\n\ncountry = []\nvalue = []\nfor i in range(len(eu_country_in_df)):\n    a = df_per.iloc[0][\"country\"]\n    b = df_per.iloc[0][\"people_vaccinated_per_hundred\"]\n    country.append(a)\n    value.append(b)\n    df_per = df_per.drop(df_per[df_per[\"country\"]==a].index)\n    df_per = df_per.reset_index(drop=True)\n\n\ndef make_time(date):\n    date = str(date).split(\" \")[0]\n    return date.replace(\"-\",\"\")\n\ndef date_count(date):\n    return len(t[t[\"date\"]==date])\n\n\n#df_process = df[(df[\"country\"] == \"France\") | (df[\"country\"] == \"Germany\") | (df[\"country\"] == \"Israel\") ]\ndf_process= df[df['country'].isin(country[0:5])]\n#df_process = df_per\nt = df_process[~df_process[\"people_vaccinated_per_hundred\"].isnull()][[\"country\",\"date\",\"people_vaccinated_per_hundred\"]]\nt[\"date\"] = t[\"date\"].map(make_time)\n\nt[\"date_count\"] = t[\"date\"].apply(date_count)\n\nt = t[t[\"date_count\"]==5]   \n\n\n    \n\n\n","03d72e8d":"data = new_df[['country','total_vaccinations']].nlargest(20,'total_vaccinations')\nfig = px.bar(data, x = 'country',y = 'total_vaccinations',title=\"Number of total vaccinations according to countries\",)\nfig.show()","0ce02994":"data = new_df[['country','people_vaccinated']].nlargest(20,'people_vaccinated')\nfig = px.bar(data, x = 'country',y = 'people_vaccinated',title=\"Number of people vaccinated according to countries\",)\nfig.show()","640ce433":"fig = px.choropleth(df, locations = \"iso_code\",\n                    color = \"vaccines\", \n                    hover_name = df.index,)\nfig.update_layout(title_x = 0.5)\nfig.update_layout({'legend_title':'Vaccine scheme'})\nfig.show()\n\n","a9d4070e":"df['date'] = pd.to_datetime(df['date'])\ndf = df.sort_values('date', ascending=True)\ndf['date'] = df['date'].dt.strftime('%m-%d-%Y')\ntdf = df.copy()\nfor iso_code in tdf['iso_code'].unique():\n    tdf.loc[tdf['iso_code'] == iso_code, :] = tdf.loc[tdf['iso_code'] == iso_code, :].fillna(method='ffill').fillna(0)","64459262":"fig = px.choropleth(\n    tdf,                            # Input Dataframe\n    locations=\"iso_code\",           # identify country code column\n    color=\"total_vaccinations_per_hundred\",                     # identify representing column\n    hover_name=\"country\",              # identify hover name\n    animation_frame=\"date\",\n    #category_orders={\"frame\": list(sorted(tdf['date'].unique()))},            # identify date column\n    color_continuous_scale= 'viridis',\n    projection=\"natural earth\",        # select projection\n    range_color=[0,5000000],\n    title='<span style=\"font-size:36px; font-family:Times New Roman\">Number of vaccinations per hundred per country<\/span>',\n)             # select range of dataset     \nfig.show()","2effc82f":"fig = px.choropleth(\n    tdf,                            # Input Dataframe\n    locations=\"iso_code\",           # identify country code column\n    color=\"total_vaccinations\",                     # identify representing column\n    hover_name=\"country\",              # identify hover name\n    animation_frame=\"date\",\n    #category_orders={\"frame\": list(sorted(tdf['date'].unique()))},            # identify date column\n    color_continuous_scale= 'viridis',\n    projection=\"natural earth\",        # select projection\n    range_color=[0,5000000],\n    title='<span style=\"font-size:36px; font-family:Times New Roman\">Number of vaccinations per country<\/span>',\n)             # select range of dataset     \nfig.show()","6e6d2879":"vaccince_types = df.groupby(['vaccines'])['iso_code'].unique()\nvaccince_types = vaccince_types.reset_index()\nvaccince_types","644acc59":"unique_brands=[]\nbrands=[brand.split(', ') for brand in set(df[\"vaccines\"])]\nfor e in brands:\n    for i in e:\n        unique_brands.append(i)","8f5f8886":"unique_brands=np.unique(unique_brands)","acc3ff54":"unique_brands","10ddc595":"unique_brands = np.delete(unique_brands, np.where(unique_brands == 'Pfizer\/ BioNTech'))","984230a4":"unique_brands","7e8c76d9":"vaccince_types[\"vaccines\"]\n","7c8b17fc":"wordCloud = WordCloud(\n    background_color='white',\n    max_font_size = 50).generate(' '.join(df.vaccines))\n\nplt.figure(figsize=(12,12))\nplt.axis('off')\nplt.imshow(wordCloud)\nplt.show()","414c08b0":"fig = px.treemap(new_df,names = 'country',values = 'total_vaccinations',path = ['vaccines','country'],\n                 title=\"Total Vaccinations per country grouped by Vaccines\",\n                 color_discrete_sequence =px.colors.qualitative.Set1)\nfig.show()\n","ac6a551d":"countries = df.country.unique()\ntotalVacc = sum(df['total_vaccinations'])\ntotalVacc\n\n\n# Total Vaccinations for countries\n\ntotal = {}\nfor country in countries:\n    sumC = 0\n    for index, row in df.iterrows():\n        if row['country'] == country:\n            sumC = sumC + row['total_vaccinations']\n    total[country] = sumC\ntotal\n\n","dbaad9dd":"country_vac_df = df[['country', 'iso_code','vaccines']]\ntemp_filter_mask = country_vac_df.duplicated()\nfilter_mask = [not index for index in temp_filter_mask]\nunique_country_vac_df = country_vac_df[filter_mask]\nunique_country_vac_df","89563075":"unique_country_vac_list = []\n\ndef transform_vacs_to_vac(data):\n    # If the country uses only one type of vaccine brand, directly insert to new dataframe.\n    # Else split them and insert to new dataframe separately\n    \n    if \",\" in data['vaccines']:\n        vacs = data['vaccines'].split(\", \")\n        \n        for vac in vacs:\n            temp = {'country': data['country'], 'iso_code': data['iso_code'], 'vaccines': vac}\n            unique_country_vac_list.append(temp)\n    else:\n        temp = {'country': data['country'], 'iso_code': data['iso_code'], 'vaccines': data['vaccines']}\n        unique_country_vac_list.append(temp)\n    \nfor index, row in unique_country_vac_df.iterrows():\n    transform_vacs_to_vac(row)\n\nunique_country_vac_df2 = pd.DataFrame(unique_country_vac_list)\nunique_country_vac_df2.tail(10)","40298fca":"world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\ndef one_vac_per_country(data, vac_name):\n    for index, row in unique_country_vac_df2.iterrows():\n        if data['iso_a3'] == row['iso_code'] and row['vaccines'] == vac_name:\n            return vac_name\n","5bdc1037":"for vaccin in unique_brands:\n    world_copy = world.copy()\n    world_copy['vaccines'] = world_copy.apply(lambda row: one_vac_per_country(row, vaccin), axis=1)\n    world_copy.plot(column='vaccines', legend=True, figsize=(15, 10), missing_kwds={\n    \"color\": \"lightgrey\",\n    \"label\": \"Other Brands\",\n})","cf83b5ef":"df.groupby(\"date\").sum()[[\"daily_vaccinations\",\"people_vaccinated\",\"people_fully_vaccinated\"]].reset_index()","b4092319":"df_per = df[df['country'].isin(eu_country_in_df)]\n","34759101":"df_per","706e5705":"unique_country_vac_df2 = pd.DataFrame(unique_country_vac_list)\nunique_country_vac_df2.tail(10)","e83d7f2b":"fig = px.bar(df, x=eu_country_in_df[0:20], y=value[0:20],color=eu_country_in_df[0:20], title= \"Top 20 countries with vaccination rates\",)\nfig.show()","1b6fabd5":"fig = px.bar(t, x=\"people_vaccinated_per_hundred\", y=\"country\", animation_frame=\"date\", range_x =(0,90), color='country',text=\"people_vaccinated_per_hundred\",title='<span style=\"font-size:36px; font-family:Times New Roman\">5 best country in term of vaccination per hundred in EUROPE<\/span>')\nfig.show()","29093683":"fig = px.choropleth(\n    df_per,                            # Input Dataframe\n    locations=\"iso_code\",           # identify country code column\n    color=\"total_vaccinations\",                     # identify representing column\n    hover_name=\"country\",              # identify hover name\n    animation_frame=\"date\",\n    #category_orders={\"frame\": list(sorted(tdf['date'].unique()))},            # identify date column\n    color_continuous_scale= 'viridis',\n    projection=\"azimuthal equal area\",        # select projection\n    range_color=[0,5000000],\n    title='<span style=\"font-size:36px; font-family:Times New Roman\">Total vaccination in EUROPE<\/span>',\n)             # select range of dataset     \nfig.show()","81f0f0f2":"FRA = df[df['iso_code']== 'FRA']\nFRA['cummulative'] = FRA['total_vaccinations'].cumsum()\nfig = px.line(FRA, x=\"date\", y=\"cummulative\", title='Cummulative Daily Vaccinations across World')\nfig.show()","a69eb9f9":"fig = px.line(FRA, x=\"date\", y=\"people_vaccinated\", title='Cummulative Vaccinations France')\nfig.show()","42833994":"fig = px.line(FRA, x=\"date\", y=\"people_fully_vaccinated\", title='People fully vaccinated France')\nfig.show()","8ad801ef":"fig = px.line(FRA, x=\"date\", y=\"daily_vaccinations_per_million\", title='Vaccination per million in France')\nfig.show()","e9580584":"fig = px.choropleth(FRA,                            # Input Dataframe\n                     locations=\"iso_code\",           # identify country code column\n                     color=\"cummulative\",                     # identify representing column\n                     hover_name=\"country\",              # identify hover name\n                     animation_frame=\"date\",        # identify date column\n                     projection=\"robinson\",        # select projection\n                     color_continuous_scale= 'magma',  # select prefer color scale\n                     range_color=[0,150000000],\n                   title='<span style=\"font-size:36px; font-family:Times New Roman\">Total vaccination in France<\/span>',)             # select range of dataset     \nfig.show()          \nfig.write_html(\"example_map.html\")  ","3eeeea31":"### Distribution of vaccins around the world","f60f56fd":"<h2 style=\"font-family: Verdana; font-size: 24px; font-style: normal; font-weight: bold; text-decoration: none; text-transform: none; letter-spacing: 3px; color: navy; background-color: #ffffff;\">TABLE OF CONTENTS<\/h2>\n\n---\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#intro\">0&nbsp;&nbsp;&nbsp;&nbsp;Aknowledgment<\/a><\/h3>\n\n---\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#intro\">I&nbsp;&nbsp;&nbsp;&nbsp;Introduction<\/a><\/h3>\n\n---\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#import\">II&nbsp;&nbsp;&nbsp;&nbsp;Import and utility<\/a><\/h3>\n\n---\n\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#world\">V&nbsp;&nbsp;&nbsp;&nbsp;Focus on the World<\/a><\/h3>\n\n---\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#europe\">VI&nbsp;&nbsp;&nbsp;&nbsp;Focus on the Europe <\/a><\/h3>\n\n---\n\n<h3 style=\"text-indent: 10vw; font-family: Verdana; font-size: 20px; font-style: normal; font-weight: normal; text-decoration: none; text-transform: none; letter-spacing: 2px; color: navy; background-color: #ffffff;\"><a href=\"#france\">VII&nbsp;&nbsp;&nbsp;&nbsp;Focus on France<\/a><\/h3>\n","f9ae1aeb":"\n## This dataset includes information about:\n\n* **Country** - this is the country for which the vaccination information is provided;     \n* **Country ISO Code** - ISO code for the country;   \n* **Date**- date for the data entry; for some of the dates we have only the daily vaccinations, for others, only the (cumulative) total;   \n* **Total number of vaccin ations** - this is the absolute number of total immunizations in the country;  \n* **Total number of people vaccinated** - a person, depending on the immunization scheme, will receive one or more (typically 2) vaccines; at a certain moment, the number of vaccination might be larger than the number of people;  \n* **Total number of people fully vaccinated** - this is the number of people that received the entire set of immunization according to the immunization scheme (typically 2); at a certain moment in time, there might be a certain number of people that received one vaccine and another number (smaller) of people that received all vaccines in the scheme;  \n* **Daily vaccinations (raw)** - for a certain data entry, the number of vaccination for that date\/country;  \n* **Daily vaccinations** - for a certain data entry, the number of vaccination for that date\/country;  \n* **Total vaccinations per hundred** - ratio (in percent) between vaccination number and total population up to the date in the country;  \n* **Total number of people vaccinated per hundred** - ratio (in percent) between population immunized and total population up to the date in the country;  \n* **Total number of people fully vaccinated per hundred** - ratio (in percent) between population fully immunized and total population up to the date in the country;   \n* **Number of vaccinations per day** - number of daily vaccination for that day and country;   \n* **Daily vaccinations per million** -  ratio (in ppm) between vaccination number and total population for the current date in the country;    \n* **Vaccines used in the country** - total number of vaccines used in the country (up to date);    \n* **Source name** - source of the information (national authority, international organization, local organization etc.);   \n* **Source website** - website of the source of information;  \n","ac41934a":"# Covid19 vaccination World and EU + focus on France\n\n\n**Coronaviruses are a group of related viruses that can cause respiratory tract infection in humans ranging from mild symptoms to lethal outcomes. Until now, there are seven genera of coronaviruses that are known to infect humans.**\n\n*SARS-CoV-2 is a new type of coronavirus that causes the Coronavirus Disease 2019 (COVID-19), which has been the most challenging pandemic in this century. Considering its high mortality and rapid spread, an effective vaccine is urgently needed to control this pandemic. As a result, the academia, industry, and government sectors are working tightly together to develop and test a variety of vaccines at an unprecedented pace. In this kernel I will briefly show an overview of vacciantion progress in the world and give some feedback the following questions:*\n\n1.     What vaccines are used and around the world?\n1.     How is the situation in Europe?\n1.     How is the situation France?\n\n<img style=\"width:100%;height:100%\" src=\"https:\/\/www.alten.com\/wp-content\/uploads\/2020\/03\/shutterstock_1642228681.jpg\"\/>\n<h3 align=\"center\" style='font-size:10px'>  \n","012bd13b":"Big thanks to [@Gabriel Preda](https:\/\/www.kaggle.com\/gpreda) for his tremendous work on this dataset,this Notebook would not have been possible without the huge amount of information provided. I strongly encourage you to upvote his dataset on Covid-19 world vaccination progress !!!","82cb94a3":"<h1 class=\"list-group-item list-group-item-action active\" id=\"world\">III&nbsp;&nbsp;Focus on world<\/h1>","b26f0d75":"<h1 class=\"list-group-item list-group-item-action active\" id=\"ak\">0&nbsp;&nbsp;Aknowledgment<\/h1>","2ff485a2":"<h1 class=\"list-group-item list-group-item-action active\" id=\"intro\">I&nbsp;&nbsp;Introduction<\/h1>","62db298f":"<h1 class=\"list-group-item list-group-item-action active\" id=\"import\">II&nbsp;&nbsp;Import and utility<\/h1>","cd2aac3d":"<h1 class=\"list-group-item list-group-item-action active\" id=\"france\">V&nbsp;&nbsp;Focus on France<\/h1>","12ddf807":"<h1 class=\"list-group-item list-group-item-action active\" id=\"europe\">IV&nbsp;&nbsp;Focus on Europe<\/h1>\n","36787b1f":"\n\n# Thank you for whatching this notebook, I hope you enjoyed do not hesitate to give me your feedback :)\n\nI will try to keep updated this kernel with the modification date tot date modification of the dataset. I would to also use multiple source data in order to make this analyse richer.. stay tune :D\n\n\n<img style=\"width:30%;height:50%\" src=\"https:\/\/media.giphy.com\/media\/SWowzQkaHdo5SQQT7l\/giphy.gif\"\/>\n<h3 align=\"center\" style='font-size:10px'>  \n\n\n"}}