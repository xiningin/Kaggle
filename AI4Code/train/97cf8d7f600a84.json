{"cell_type":{"87783e87":"code","e142125a":"code","5ee3b384":"code","c28e3ecc":"code","97dd7c38":"code","f3b48d71":"code","286fd5f9":"code","e8b5700a":"code","3764300c":"code","67800998":"code","6bd920ec":"code","28a6ac40":"code","70459790":"code","61272fda":"code","e5456ad5":"code","8fd68ec5":"code","b20191b9":"code","a6ec28ce":"code","83c48507":"code","7888a634":"code","ca1da520":"code","9e67cae0":"code","20f7ea6b":"code","2847dbda":"code","a883fca3":"code","721cff65":"code","77ea8371":"code","9072f054":"code","0c73ae65":"code","062e9379":"code","d60fcbe3":"code","82af5a9c":"code","615eb307":"code","eae47f75":"code","3b7f17b8":"code","66b2484b":"code","1e095023":"code","4f78f615":"code","151d8415":"code","e7f7e85c":"code","6dfc162f":"code","a5a636a3":"code","78fb3d16":"code","0070b650":"code","fea080ff":"code","b7fd2ff2":"code","83ba4d7e":"code","0440cfca":"code","b4dc3dc6":"code","5b98c90c":"code","d2adfecb":"code","b8150192":"code","be71c0ee":"code","29fad2bf":"code","f91836aa":"code","885c6463":"code","e137a9df":"code","2a68bfd0":"code","cc7fcf30":"code","055f296c":"code","5ae7ed57":"code","3d2058f3":"code","56421c04":"code","3a4f2e2b":"code","8971ebb4":"code","85a0c35f":"code","38f9cbd6":"code","b7bac91e":"code","6fde8afc":"code","88788271":"code","bb0a02b3":"code","c2079739":"code","83030973":"code","072392de":"code","e3445217":"code","cfbbe85f":"code","470457e4":"code","baacd6d0":"code","ae340b66":"code","59e2b5e2":"code","bc4e1725":"code","d06ad5c7":"code","5665755c":"code","24c8fa31":"code","67f0886b":"code","0d328894":"code","7b1045a3":"code","e45045bd":"code","af97408e":"code","59b3a0fe":"code","4e7353c5":"code","596683a3":"code","bdb12117":"code","68a3816d":"code","6beff8c8":"code","2704f4de":"code","8a910d37":"code","377a3de0":"code","c3d78fe0":"code","02a96301":"code","fa7d6b8a":"code","b43d892a":"code","f25eae18":"code","4c15ff67":"code","c5195bc8":"code","28f795ce":"code","a2b7e70a":"code","7dec6f55":"code","23702d3d":"code","44f2ad45":"code","e966392d":"code","f2ba1ee5":"code","e94f3ac7":"code","6af6c7ed":"code","fc1ea2d7":"code","3b72ca45":"code","b7e14a67":"code","25f4310e":"code","7876a03b":"code","30cd20a1":"code","15e52343":"code","634fffa5":"code","a833f919":"code","70c70e3d":"code","8ab0fd19":"code","31d8554f":"code","e0e9ee4b":"code","9710b296":"code","0b7978bc":"code","f9397740":"markdown","2c679f47":"markdown","91b92952":"markdown","af4abd82":"markdown","7860f267":"markdown","2cee2b1f":"markdown","0b25f502":"markdown","6477fa8c":"markdown","3a02aade":"markdown","c70fc219":"markdown","df0ee9f4":"markdown","4e696031":"markdown","a5818209":"markdown","e935ffd5":"markdown","b6d5f7c6":"markdown","f886cfa8":"markdown","9b546b5a":"markdown","25e739c9":"markdown","359f2ae0":"markdown","f4faf845":"markdown","5c6e5b72":"markdown","96c44d84":"markdown","dce166ec":"markdown","4be44411":"markdown","36658e98":"markdown","c3e5481c":"markdown","87f82d39":"markdown","b334f52d":"markdown","b03ca63c":"markdown","39058bba":"markdown","855a469a":"markdown","e0eb6d84":"markdown","73e2eae6":"markdown","db4b95dc":"markdown","5a28e196":"markdown","83d17bb6":"markdown","6ef02ac4":"markdown","967fe8ec":"markdown","9a5269a4":"markdown","d75012a0":"markdown","6ae45ced":"markdown","b1e9033f":"markdown","0fcc7081":"markdown","84187653":"markdown","29160890":"markdown","5bc830d1":"markdown","1be564d5":"markdown","0a2d248d":"markdown","a518fb0f":"markdown","f19f0032":"markdown","07566aa1":"markdown","39943069":"markdown","70f7398e":"markdown","d0c4a925":"markdown","014f7e47":"markdown","dbeafb0b":"markdown","0df4f7e6":"markdown","deba2c95":"markdown","daae7b8d":"markdown","cace6c6d":"markdown","d2f3e479":"markdown","2b803b6d":"markdown","af919f57":"markdown","62044af5":"markdown","af07f443":"markdown","4cec99b6":"markdown","0744799a":"markdown","09b7c94e":"markdown","edc2258e":"markdown","d54ddf2f":"markdown","e7bab617":"markdown","5cbad00d":"markdown","8d0efdeb":"markdown","56f9e406":"markdown","97e40732":"markdown","64c4353e":"markdown","b4922128":"markdown","5ff1b809":"markdown","9ab6052e":"markdown","6125a46b":"markdown","e9474c0d":"markdown","6ed0d4cb":"markdown","cc6cdcd0":"markdown","98c05f22":"markdown","f39b260e":"markdown","5baf5043":"markdown","b2109934":"markdown","704f4703":"markdown","f51edd42":"markdown","b1d537b6":"markdown","a109a6ed":"markdown","2e4b29d3":"markdown","482cf61b":"markdown","73ac0693":"markdown","0da1cac9":"markdown","11ac58f5":"markdown","8c77fb3a":"markdown","6ecad1c3":"markdown","7cc9c83f":"markdown","cfed004f":"markdown"},"source":{"87783e87":"%matplotlib inline","e142125a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","5ee3b384":"df = pd.read_csv(\"..\/input\/AppleStore.csv\", index_col = 0)\ndf.head()","c28e3ecc":"print(df.columns)","97dd7c38":"df = df.rename(columns = {\n    \"track_name\": \"name\",\n    \"rating_count_tot\": \"ratings_count\",\n    \"rating_count_ver\": \"ratings_count_vers\",\n    \"user_rating_ver\": \"user_rating_vers\",\n    \"ver\": \"version\",\n    \"prime_genre\": \"genre\",\n    \"sup_devices.num\": \"sup_devices\",\n    \"ipadSc_urls.num\": \"screenshots\",\n    \"lang.num\": \"lang_num\",\n    \"vpp_lic\": \"vpp_license\"\n})\n\nprint(df.columns)","f3b48d71":"df.info()","286fd5f9":"df = df.drop(\"id\", axis = \"columns\")","e8b5700a":"print(df.currency.unique())","3764300c":"df = df.drop(\"currency\", axis = \"columns\")","67800998":"unique_names = df.name.unique()\nprint(\"DataFrame rows:\", df.shape[0])\nprint(\"Unique names count:\", unique_names.size)","6bd920ec":"df[df.duplicated(\"name\", keep = False)]","28a6ac40":"df[\"is_free\"] = df.price.apply(lambda price: True if price == 0 else False)","70459790":"paid_apps = df[~df.is_free]","61272fda":"def ecdf(data):\n    \"\"\"Compute ECDF for a one-dimensional array of measurements.\"\"\"\n    x = np.sort(data)\n    y = np.arange(1, len(data) + 1) \/ len(data)\n    return x, y","e5456ad5":"x_price, y_price = ecdf(paid_apps.price)\nplt.plot(x_price, y_price, marker = \".\", linestyle = \"none\")\nplt.xticks(range(0, 301, 10), rotation = \"vertical\")\nplt.xlabel(\"price\")\nplt.ylabel(\"ECDF\")\nplt.show()","8fd68ec5":"paid_apps[paid_apps.price > 100]","b20191b9":"prices_under_100 = paid_apps.price < 100\nx_price, y_price = ecdf(paid_apps[prices_under_100].price)\nplt.plot(x_price, y_price, marker = \".\", linestyle = \"none\")\nplt.xticks(range(0, 101, 10), rotation = \"vertical\")\nplt.xlabel(\"price\")\nplt.ylabel(\"ECDF\")\nplt.show()","a6ec28ce":"plt.figure(figsize = (20, 3))\nsns.boxplot(data = paid_apps[prices_under_100], x = \"price\")\nplt.xticks(range(0, 102, 2))\nplt.show()","83c48507":"percentage = len(paid_apps[paid_apps.price > 8.99]) \/ len(paid_apps) * 100\nprint(\"The percentage of the apps with price grather than $8.99 is {:.2f}%\".format(percentage))","7888a634":"percentage = len(paid_apps[paid_apps.price > 9.99]) \/ len(paid_apps) * 100\nprint(\"The percentage of the apps with price grather than $9.99 is {:.2f}%\".format(percentage))","ca1da520":"selected_columns = [\"name\", \"price\", \"ratings_count\", \"user_rating\", \"genre\", \"sup_devices\", \"lang_num\"]\nprice_outliers = paid_apps[paid_apps.price > 9.99].sort_values(by = \"price\")\nprice_outliers[selected_columns]","9e67cae0":"print(np.percentile(paid_apps.price, [25, 50, 75]))\nprint(np.percentile(paid_apps.price, [85, 90, 95]))\nprint(np.percentile(paid_apps.price, [97.5, 99]))","20f7ea6b":"df_original = df.copy()\npaid_apps_original = df_original[~df_original.is_free]\nfree_apps_original = df_original[df_original.is_free]","2847dbda":"df = df[df.price <= 9.99] # Remove suspected outliers\npaid_apps = df[df.price != 0]\nfree_apps = df[df.price == 0]","a883fca3":"print(\"Free apps percentage: {:.2f}%\".format(len(free_apps) \/ len(df) * 100))\nprint(\"Paid apps percentage: {:.2f}%\".format(len(paid_apps) \/ len(df) * 100))","721cff65":"unique_prices = paid_apps.price.unique()\nprint(\"We have {0} unique prices in the iOS store.\".format(unique_prices.size))\nprint(sorted(unique_prices))","77ea8371":"sns.countplot(paid_apps.price)\nplt.xlabel(\"price ($)\")\nplt.show()","9072f054":"plt.figure(figsize = (20, 5))\nsns.countplot(paid_apps_original.price)\nplt.xticks(rotation = \"vertical\")\nplt.show()","0c73ae65":"def describe_free_vs_paid(column):\n    free_apps_ratings = pd.Series(free_apps[column].describe(), name = column + \"_free\")\n    paid_apps_ratings = pd.Series(paid_apps[column].describe(), name = column + \"_paid\")\n    return pd.concat([free_apps_ratings, paid_apps_ratings], axis = 1)","062e9379":"pd.set_option(\"display.float_format\", lambda x: \"%.2f\" % x)\ndescribe_free_vs_paid(\"ratings_count\")","d60fcbe3":"for count in range(2, 11):\n    filtered_apps = df[df.ratings_count >= count]\n    percentage = len(filtered_apps) \/ len(df) * 100\n    print(count, len(filtered_apps), percentage)","82af5a9c":"len(df[df.ratings_count < 5]) \/ len(df) * 100","615eb307":"df = df[df.ratings_count >= 5]\nfree_apps = df[df.is_free]\npaid_apps = df[~df.is_free]","eae47f75":"df_original = df_original[df_original.ratings_count >= 5]\nfree_apps_original = df_original[df_original.is_free]\npaid_apps_original = df_original[~df_original.is_free]","3b7f17b8":"print(sorted(free_apps.user_rating.unique()))\nprint(sorted(paid_apps.user_rating.unique()))","66b2484b":"describe_free_vs_paid(\"ratings_count_vers\")","1e095023":"print(sorted(free_apps.user_rating_vers.unique()))\nprint(sorted(paid_apps.user_rating_vers.unique()))","4f78f615":"df.cont_rating.unique()","151d8415":"sns.countplot(data = df, x = \"cont_rating\")\nplt.show()","e7f7e85c":"# Percentages\ndf.groupby(\"cont_rating\").size().sort_values(ascending = False) \/ len(df) * 100","6dfc162f":"def print_unique_values_and_their_size(series):\n    unique_values = series.genre.unique()\n    print(unique_values.size)\n    print(sorted(unique_values))","a5a636a3":"print_unique_values_and_their_size(free_apps)\nprint_unique_values_and_their_size(paid_apps)","78fb3d16":"print(\"Free: \", sorted(free_apps.sup_devices.unique()))\nprint(\"Paid: \", sorted(paid_apps.sup_devices.unique()))","0070b650":"free_paid = df.price.apply(lambda x: \"Free\" if x == 0 else \"Paid\")\nsns.countplot(data = df, x = \"sup_devices\", hue = free_paid, hue_order = [\"Free\", \"Paid\"])\nplt.xlabel(\"supported devices\")\nplt.show()","fea080ff":"len(df[df.sup_devices.isin([37, 38, 40])]) \/ len(df)","b7fd2ff2":"print(sorted(free_apps.screenshots.unique()))\nprint(sorted(paid_apps.screenshots.unique()))","83ba4d7e":"sns.countplot(data = df, x = \"screenshots\", hue = free_paid, hue_order = [\"Free\", \"Paid\"])\nplt.show()","0440cfca":"describe_free_vs_paid(\"screenshots\")","b4dc3dc6":"print(\"Free:\", sorted(free_apps.lang_num.unique()))\nprint(\"Paid:\", sorted(paid_apps.lang_num.unique()))","5b98c90c":"def countplot_lang_num(data):\n    plt.figure(figsize = (15, 4))\n    sns.countplot(data = data, x = \"lang_num\", hue = free_paid, hue_order = [\"Free\", \"Paid\"])\n    plt.xticks(rotation = \"vertical\")\n    plt.legend(loc = \"upper right\")\n    plt.show()","d2adfecb":"countplot_lang_num(df)","b8150192":"print(len(free_apps[free_apps.lang_num == 1]) \/ len(free_apps) * 100)\nprint(len(paid_apps[paid_apps.lang_num == 1]) \/ len(paid_apps) * 100)","be71c0ee":"selected_apps = df[(df.lang_num > 1) & (df.lang_num <= 20)]\ncountplot_lang_num(selected_apps)","29fad2bf":"selected_apps = df[df.lang_num > 20]\ncountplot_lang_num(selected_apps)","f91836aa":"sns.countplot(data = df[df.lang_num >= 35], x = \"genre\")\nplt.xticks(rotation = \"vertical\")\nplt.show()","885c6463":"selected_columns = [\"name\", \"lang_num\", \"genre\", \"is_free\", \"price\", \"user_rating\", \"ratings_count\"]\ndf.sort_values(by = [\"lang_num\", \"ratings_count\"], ascending = False).head(10)[selected_columns]","e137a9df":"df_google = df[df.name.str.contains(\"Google\", case = False)][selected_columns]\ndf_google.sort_values(by = [\"lang_num\", \"ratings_count\"], ascending = False)","2a68bfd0":"df.vpp_license.unique()","cc7fcf30":"df.vpp_license = df.vpp_license.astype(np.bool)\nprint(df.vpp_license.dtype)\nprint(df.vpp_license.unique())","055f296c":"sns.countplot(data = df, x = \"vpp_license\", hue = \"is_free\")\nplt.show()","5ae7ed57":"selected_apps = df[~df.vpp_license]\nsns.countplot(data = selected_apps, x = \"vpp_license\", hue = \"is_free\")\nplt.show()","3d2058f3":"df.size_bytes.describe()","56421c04":"ax = sns.distplot(df.size_bytes)\nax.set(xscale = \"log\")\nplt.show()","3a4f2e2b":"df[\"size_mb\"] = df.size_bytes \/ (1024 * 1024)\ndf = df.drop(\"size_bytes\", axis = \"columns\")\nfree_apps = df[df.is_free]\npaid_apps = df[~df.is_free]","8971ebb4":"df_original[\"size_mb\"] = df_original.size_bytes \/ (1024 * 1024)\ndf_original = df_original.drop(\"size_bytes\", axis = \"columns\")\nfree_apps_original = df_original[df_original.is_free]\npaid_apps_original = df_original[~df_original.is_free]","85a0c35f":"df.size_mb.describe()","38f9cbd6":"plt.figure(figsize = (20, 5))\nsns.distplot(free_apps.size_mb, kde = False, label = \"free\")\nsns.distplot(paid_apps.size_mb, kde = False, label = \"paid\")\nplt.xticks(np.arange(0, max(df.size_mb) + 1, 100), rotation = \"vertical\")\nplt.legend()\nplt.show()","b7bac91e":"print(\"Free apps results:\")\nprint(np.percentile(free_apps.size_mb, [25, 50, 75]))\nprint(np.percentile(free_apps.size_mb, [85, 90, 95]))\nprint(np.percentile(free_apps.size_mb, [97.5, 99]))\n\nprint()\n\nprint(\"Paid apps results:\")\nprint(np.percentile(paid_apps.size_mb, [25, 50, 75]))\nprint(np.percentile(paid_apps.size_mb, [85, 90, 95]))\nprint(np.percentile(paid_apps.size_mb, [97.5, 99]))","6fde8afc":"free_big_size_apps = free_apps[free_apps.size_mb > np.percentile(free_apps.size_mb, 99)]\nprint(len(free_big_size_apps))\nfree_big_size_apps","88788271":"paid_big_size_apps = paid_apps[paid_apps.size_mb > np.percentile(paid_apps.size_mb, 99)]\nprint(len(paid_apps[paid_apps.size_mb > np.percentile(paid_apps.size_mb, 99)]))\npaid_big_size_apps","bb0a02b3":"selected_columns = [\"name\", \"size_mb\", \"price\", \"ratings_count\", \"user_rating\", \"genre\", \n                    \"sup_devices\", \"screenshots\", \"lang_num\"]\nexpensive_apps = paid_apps_original[paid_apps_original.price > 9.99]\nexpensive_apps[selected_columns].nlargest(10, columns = \"price\")","c2079739":"paid_apps[selected_columns].nlargest(10, columns = [\"price\", \"ratings_count\"])","83030973":"paid_apps[selected_columns].nlargest(10, [\"user_rating\", \"ratings_count\"])","072392de":"free_apps[selected_columns].nlargest(10, [\"user_rating\", \"ratings_count\"])","e3445217":"def show_apps_count_by_genre(data, title):\n    genres_order = data.groupby('genre').size().sort_values(ascending = False).index\n    plt.figure(figsize = (15, 3))\n    sns.countplot(data = data, x = \"genre\", order = genres_order)\n    plt.title(title)\n    plt.xticks(rotation = 75)\n    plt.show()","cfbbe85f":"show_apps_count_by_genre(free_apps, \"Free Apps per Genre\")\nshow_apps_count_by_genre(paid_apps, \"Paids Apps per Genre\")","470457e4":"def show_apps_count_by_genre_with_hue(data):\n    genres_order = data.groupby('genre').size().sort_values(ascending = False).index\n    free_paid = data.price.apply(lambda x: \"Free\" if x == 0 else \"Paid\")\n    plt.figure(figsize = (15, 5))\n    plt.xticks(rotation = 75)\n    sns.countplot(x = \"genre\", hue = free_paid, hue_order = [\"Free\", \"Paid\"], order = genres_order, data = df)\n    plt.show()","baacd6d0":"show_apps_count_by_genre_with_hue(df)","ae340b66":"show_apps_count_by_genre_with_hue(df[df.genre != \"Games\"])","59e2b5e2":"def plot_correlation_matrix(data, title):\n    correlation_matrix = data.corr()\n    plt.figure(figsize = (10, 6))\n    sns.heatmap(correlation_matrix, annot = True)\n    plt.title(title)\n    plt.show()","bc4e1725":"plot_correlation_matrix(df, \"All Apps: Correlation Matrix\")","d06ad5c7":"correlation_matrix_all = df.corr()","5665755c":"correlation_matrix_all[\"user_rating\"].sort_values(ascending = False)","24c8fa31":"correlation_matrix_all[\"price\"].sort_values(ascending = False)","67f0886b":"correlation_matrix_free = free_apps.corr()\ncorrelation_matrix_paid = paid_apps.corr()\n\nplt.figure(figsize = (20, 6))\n\nax = plt.subplot2grid((1, 2), (0, 0))\nsns.heatmap(correlation_matrix_free, annot = True)\nplt.title(\"Free Apps: Correlation Matrix\")\n\nax = plt.subplot2grid((1, 2), (0, 1))\nsns.heatmap(correlation_matrix_paid, annot = True)\nplt.title(\"Paid Apps: Correlation Matrix\")\n\nplt.show()","0d328894":"correlation_matrix_paid[\"price\"].sort_values(ascending = False)","7b1045a3":"correlation_matrix_free[\"user_rating\"].sort_values(ascending = False)","e45045bd":"correlation_matrix_paid[\"user_rating\"].sort_values(ascending = False)","af97408e":"def get_free_vs_paid_corr(column, correlation_matrix_free, correlation_matrix_paid):\n    corr_user_rating = pd.concat([correlation_matrix_free[column], correlation_matrix_paid[column]], axis = 1)\n    corr_user_rating.columns = [column + \"_corr_free\", column + \"_corr_paid\"]\n    return corr_user_rating","59b3a0fe":"free_vs_paid_corr = get_free_vs_paid_corr(\"user_rating\", correlation_matrix_free, correlation_matrix_paid)\nfree_vs_paid_corr","4e7353c5":"def plot_mean_of_column_vs_grouped_column(data, mean_column, group_by, title):\n    grouped = data.groupby(group_by)[mean_column].mean()\n    grouped = grouped.sort_values(ascending = False)\n    grouped = grouped.reset_index()\n    grouped.columns = [group_by, \"mean_\" + mean_column]\n\n    plt.figure(figsize = (20, 5))\n    ax = sns.barplot(data = grouped, x = group_by, y = \"mean_\" + mean_column)\n    plt.title(title)\n    plt.xlabel(str.title(\" \".join(group_by.split(\"_\"))))\n    plt.ylabel(\"Mean \" + str.title(\" \".join(mean_column.split(\"_\"))))\n    plt.xticks(rotation = 90)\n    plt.show()","596683a3":"plot_mean_of_column_vs_grouped_column(data = free_apps, mean_column = \"user_rating\", group_by = \"genre\",\n                                      title = \"Free Apps: Mean User Rating Per Genre\")\nplot_mean_of_column_vs_grouped_column(data = paid_apps, mean_column = \"user_rating\", group_by = \"genre\",\n                                      title = \"Paid Apps: Mean User Rating Per Genre\")","bdb12117":"plot_mean_of_column_vs_grouped_column(data = free_apps_original, mean_column = \"user_rating\", group_by = \"genre\",\n                                      title = \"Free Apps: Mean User Rating Per Genre (With Outliers)\")\nplot_mean_of_column_vs_grouped_column(data = paid_apps_original, mean_column = \"user_rating\", group_by = \"genre\",\n                                      title = \"Paid Apps: Mean User Rating Per Genre (With Outliers)\")","68a3816d":"genre_order = df.groupby(\"genre\").size().sort_values(ascending = False).index\ndf.groupby([\"genre\", \"is_free\"]).size().unstack(level = -1).reindex(genre_order)","6beff8c8":"def plot_mean_of_column_per_genre_with_hue(data, column, title):\n    grouped = data.groupby([\"genre\", \"is_free\"])[column].mean()\n    grouped = grouped.reset_index()\n    grouped.columns = [\"genre\", \"is_free\", \"mean_\" + column]\n\n    genres_order = list(data.groupby(\"genre\").size().sort_values(ascending = False).index)\n    free_paid = grouped.is_free.apply(lambda x: \"Free\" if x else \"Paid\")\n    plt.figure(figsize = (20, 4))\n    ax = sns.barplot(data = grouped, x = \"genre\", y = \"mean_\" + column, \n                     hue = free_paid, hue_order = [\"Free\", \"Paid\"], order = genres_order)\n    ax.legend_.set_title(\"Price\")\n    plt.legend(loc = \"lower center\")\n    plt.title(title)\n    plt.xlabel(\"Genre\")\n    plt.ylabel(\"Mean \" + str.title(\" \".join(column.split(\"_\"))))\n    plt.xticks(rotation = 90)\n    plt.show()","2704f4de":"without_shopping = df[df.genre != \"Shopping\"]\nplot_mean_of_column_per_genre_with_hue(without_shopping, \"user_rating\", \"Mean User Rating Per Genre\")","8a910d37":"without_shopping = df_original[df_original.genre != \"Shopping\"]\nplot_mean_of_column_per_genre_with_hue(without_shopping, \"user_rating\", \"Mean User Rating Per Genre\")","377a3de0":"plt.figure(figsize = (20, 5))\nax = sns.stripplot(data = df, y = \"user_rating\", x = \"genre\", jitter = True)\nax.set_xticklabels(ax.get_xticklabels(), rotation = 90)\nplt.show()","c3d78fe0":"plot_mean_of_column_vs_grouped_column(data = free_apps, mean_column = \"ratings_count\", group_by = \"genre\",\n                                      title = \"Free Apps: Mean Rating Count Per Genre\")\nplot_mean_of_column_vs_grouped_column(data = paid_apps, mean_column = \"ratings_count\", group_by = \"genre\",\n                                      title = \"Paid Apps: Mean Rating Count Per Genre\")","02a96301":"plot_mean_of_column_per_genre_with_hue(df, \"ratings_count\", \"Mean Ratings Count Per Genre\")","fa7d6b8a":"plt.figure(figsize = (20, 5))\nsns.boxplot(data = df, x = \"sup_devices\")\nplt.show()","b43d892a":"plot_mean_of_column_vs_grouped_column(data = free_apps, mean_column = \"user_rating\", group_by = \"sup_devices\",\n                                     title = \"Free Apps: Mean User Rating vs Supported Devices Count\")\nplot_mean_of_column_vs_grouped_column(data = paid_apps, mean_column = \"user_rating\", group_by = \"sup_devices\",\n                                     title = \"Paid Apps: Mean User Rating vs Supported Devices Count\")","f25eae18":"plt.figure(figsize = (20, 5))\nfree_paid = df.price.apply(lambda x: \"Free\" if x == 0 else \"Paid\")\nsns.countplot(data = df, x = \"sup_devices\", hue = free_paid, hue_order = [\"Free\", \"Paid\"])\nplt.xlabel(\"supported devices\")\nplt.show()","4c15ff67":"famous_supported_devices_counts = [37, 38, 40]\nlen(df[df.sup_devices.isin(famous_supported_devices_counts)]) \/ len(df) * 100","c5195bc8":"data = free_apps[free_apps.sup_devices.isin(famous_supported_devices_counts)]\nplot_mean_of_column_vs_grouped_column(data = data, mean_column = \"user_rating\", group_by = \"sup_devices\",\n                                      title = \"Free Apps: Mean User Rating vs Supported Devices Count\")\n\ndata = paid_apps[paid_apps.sup_devices.isin(famous_supported_devices_counts)]\nplot_mean_of_column_vs_grouped_column(data = data, mean_column = \"user_rating\", group_by = \"sup_devices\",\n                                     title = \"Paid Apps: Mean User Rating vs Supported Devices Count\")","28f795ce":"def box_plot(data, x, y, title):\n    plt.figure(figsize = (20, 5))\n    sns.boxplot(data = data, x = x, y = y)\n    plt.title(title)\n    plt.show()","a2b7e70a":"box_plot(data = free_apps, x = \"sup_devices\", y = \"user_rating\", title = \"Free Apps: Supported Devices Count vs User Rating\")\nbox_plot(data = paid_apps, x = \"sup_devices\", y = \"user_rating\", title = \"Paid Apps: Supported Devices Count vs User Rating\")","7dec6f55":"def violin_plot(data, x, y, title):\n    plt.figure(figsize = (20, 5))\n    sns.violinplot(data = data, x = x, y = y)\n    plt.title(title)\n    plt.show()","23702d3d":"violin_plot(data = free_apps, x = \"sup_devices\", y = \"user_rating\", title = \"Free Apps: Supported Devices Count vs User Rating\")\nviolin_plot(data = paid_apps, x = \"sup_devices\", y = \"user_rating\", title = \"Paid Apps: Supported Devices Count vs User Rating\")","44f2ad45":"data = free_apps[free_apps.sup_devices.isin(famous_supported_devices_counts)]\nviolin_plot(data = data, x = \"sup_devices\", y = \"user_rating\", title = \"Free Apps: Supported Devices Count vs User Rating\")\n\ndata = paid_apps[paid_apps.sup_devices.isin(famous_supported_devices_counts)]\nviolin_plot(data = data, x = \"sup_devices\", y = \"user_rating\", title = \"Paid Apps: Supported Devices Count vs User Rating\")","e966392d":"def stripplot_sup_devices_vs_user_rating(data, title):\n    plt.figure(figsize = (20, 5))\n    sns.stripplot(data = data, x = \"sup_devices\", y = \"user_rating\", jitter = True)\n    plt.title(title)\n    plt.xlabel(\"Supported Devices Count\")\n    plt.ylabel(\"User Rating\")\n    plt.show()","f2ba1ee5":"stripplot_sup_devices_vs_user_rating(free_apps, \"Free apps: User Rating vs Supported Devices\")\nstripplot_sup_devices_vs_user_rating(paid_apps, \"Paid apps: User Rating vs Supported Devices\")","e94f3ac7":"plt.figure(figsize = (20, 5))\nplt.scatter(df.lang_num, df.user_rating)\nplt.title(\"User Rating vs Supported Languages Count\")\nplt.xlabel(\"Supported Languages Count\")\nplt.ylabel(\"User Rating\")\nplt.show()","6af6c7ed":"plot_mean_of_column_vs_grouped_column(data = free_apps, mean_column = \"user_rating\", group_by = \"lang_num\",\n                                     title = \"Free Apps: Mean User Rating vs Supported Languages Count\")\nplot_mean_of_column_vs_grouped_column(data = paid_apps, mean_column = \"user_rating\", group_by = \"lang_num\",\n                                     title = \"Paid Apps: Mean User Rating vs Supported Languages Count\")","fc1ea2d7":"box_plot(free_apps, x = \"lang_num\", y = \"user_rating\", title = \"Free Apps: User Rating vs Supported Languges Count\")\nbox_plot(paid_apps, x = \"lang_num\", y = \"user_rating\", title = \"Free Apps: User Rating vs Supported Languges Count\")","3b72ca45":"plt.figure(figsize = (20, 5))\nsns.countplot(data = df, x = \"lang_num\")\nplt.title(\"Count plot based on supported languages count\")\nplt.show()","b7e14a67":"len(df[df.lang_num <= 18]) \/ len(df) * 100","25f4310e":"violin_plot(data = free_apps[free_apps.lang_num <= 18], x = \"lang_num\", y = \"user_rating\",\n           title = \"Free Apps: User Rating vs Supported Languages Count\")\n\nviolin_plot(data = paid_apps[paid_apps.lang_num <= 18], x = \"lang_num\", y = \"user_rating\",\n           title = \"Paid Apps: User Rating vs Supported Languages Count\")","7876a03b":"plt.figure(figsize = (17, 8))\nsns.violinplot(data = df, y = \"lang_num\", x = \"user_rating\")\nplt.show()","30cd20a1":"def stripplot_lang_count_vs_user_rating(data, title):\n    plt.figure(figsize = (20, 5))\n    sns.stripplot(data = data, x = \"lang_num\", y = \"user_rating\", jitter = True)\n    plt.title(title)\n    plt.xlabel(\"Supported Languages Count\")\n    plt.ylabel(\"User Rating\")\n    plt.show()","15e52343":"stripplot_lang_count_vs_user_rating(free_apps, \"Free apps: User Rating vs Supported Languages\")\nstripplot_lang_count_vs_user_rating(paid_apps, \"Paid apps: User Rating vs Supported Languages\")","634fffa5":"apps_with_0_languages = df[df.lang_num == 0]\nprint(len(df[df.lang_num == 0]))\napps_with_0_languages.head()","a833f919":"sns.lmplot(data = df, x = \"size_mb\", y = \"user_rating\", col = \"is_free\", fit_reg = False)\nplt.show()","70c70e3d":"sns.lmplot(data = paid_apps, x = \"price\", y = \"user_rating\", fit_reg = False)\nplt.show()","8ab0fd19":"sns.lmplot(data = paid_apps, x = \"price\", y = \"user_rating\", col = \"cont_rating\", fit_reg = False)\nplt.show()","31d8554f":"df.groupby([\"cont_rating\", \"is_free\"]).size()","e0e9ee4b":"plot_mean_of_column_vs_grouped_column(data = paid_apps, mean_column = \"price\", group_by = \"genre\",\n                                     title = \"Paid Apps: Mean Price Per Genre\")","9710b296":"paid_apps[paid_apps.genre == \"Catalogs\"]","0b7978bc":"data = paid_apps[paid_apps.genre != \"Catalogs\"]\nplot_mean_of_column_vs_grouped_column(data = data, mean_column = \"price\", group_by = \"genre\",\n                                     title = \"Paid Apps: Mean Price Per Genre\")","f9397740":"Conclusions\n* 49.8% of the free apps have only one supported language\n* 52.6% of the paid apps have only one supported language","2c679f47":"### Top 10 High Rated Paid Apps\n\nLet's see the top 10 high rated paid apps. We'll sort by user rating and rating count for all versions.","91b92952":"Let's try the violin plots. But if we use all the data our plot will be very flattened. So, let's focus on the 93% of the data which have lower or equal to 18 languages supported.","af4abd82":"Let's see the 1% of the free apps that have greater MB than the other 99%.","7860f267":"If we look at the **\"Medical\"** genre, it's rating is higher than the previous plot. Maybe there are apps which costs more that \\$9.99. So, here I think that this plot is more correct.\n\nLet's prove that by seeing the prices for this genre.","2cee2b1f":"It seems that all the developers are using the same pricing strategy. All the prices have an ending digit equal to 9.\n\nMore information for the psychological pricing can be found [here](https:\/\/en.wikipedia.org\/wiki\/Psychological_pricing).","0b25f502":"If we judge by the distributions, we can think that the user rating can be correlated with the count of the supported devices.","6477fa8c":"I think we can safely remove these apps for the later analysis. They are only 3% of the paid apps and we want to focus on the overall pattern, so I think it's save to remove them. Before to do that, let's see them and save them in other DataFrame in case we need them later.","3a02aade":"Before we plot the mean user_rating per genre for the both free and paid apps, let's see the count of the free vs the count of the paid apps per genre.","c70fc219":"* Hmmm, what about if we set \\\\$9.99 as a price boundary. What will be the percentage of the app with a price greater than \n\\\\$9.99?","df0ee9f4":"Let's also filter the data with the \"outliers\". If we compare some plots with the outliers and without them, we don't want those apps to have below 5 ratings.","4e696031":"It seems that all the content ratings are correct.","a5818209":"### Genres","e935ffd5":"### Content Rating\nApple's content rating system for the App Store follows the following rubric:\n* 4+: Contains no objectionable material.\n* 9+: May contain content unsuitable for children under the age of 9.\n* 12+: May contain content unsuitable for children under the age of 12.\n* 17+: May contain content unsuitable for children under the age of 17.\n\nApps rated 17+ are prohibited from purchase by younger users.","b6d5f7c6":"### Mean User Rating per Genre","f886cfa8":"Top 3 free categories by mean user rating are:\n1. medical\n2. book\n3. productivity\n\nTop 3 paid categories by mean user rating are:\n1. shopping\n2. catalog\n3. book","9b546b5a":"They are 86% of the data. So, let's see the countplot again only with these apps.","25e739c9":"We can choice a 5 ratings count as a threshold, because we'll not loose so much data and 5 ratings maybe is not that bad. So, we'll remove 15.56% of our data. That's because we want to explore the app that have at least 5 ratings.","359f2ae0":"Conclusions from the plots\n\n* Top 3 free apps genres\n    1. Games\n    2. Entertainment\n    3. Photos & Video\n* Top 3 paid apps genres\n    1. Games\n    2. Education\n    3. Entartainment","f4faf845":"### Summary of the DataFrame\nLet's look at the types of the columns and see if there are any missing values.","5c6e5b72":"We can see that the top 3 prices ordered by count are \\\\$0.99, \\\\$2.99, and \\\\$1.99.\n\nLet's see the countplot with the outlier prices, too.","96c44d84":"We have 28 games here.","dce166ec":"We see that the apps with supported devices euqal to 37, 38 or 40 are the much more than the others.","4be44411":"From the boxplot above, we can see that apps with price greater than \\$8.99 don't follow the overall pattern. Let's see how many are these apps.","36658e98":"### Ratings Count (for all versions)\nFor the next analysis, we want to keep only the apps with a rating count greater than some number. We don't want to make an analysis on the user_rating when there are no ratings or not enough ratings for some of the apps. So, let's try to find what can be a reasonable **minimum** for the ** rating count** and then filter our DataFrame.","c3e5481c":"### Number of the Screenshots","87f82d39":"### Name\nWe can start by exploring the names of the apps.","b334f52d":"From the percentiles above we can see that\n* 50% of the prices are below or equal to \\$2.99\n* 75% of the prices are below or equal to \\$4.99\n* 95% of the prices are below or equal to \\$9.99\n* 97.5% of the prices are below or equal to \\$14.99\n* 99% of the prices are below or equal to \\$22.99","b03ca63c":"### Application Size","39058bba":"From the ECDF plot, we can see that almost all of the prices are less than **10\\$**. It seems that apps with prices greater than 10\\$ lies outside the overall pattern. Points that lied outside the overall pattern are called **outliers**. Let's use a boxplot graph to see if these apps are outliers.","855a469a":"We can see that we have 2 records for different versions of the games \"VR Roller Coaster\" and \"Mannequin Challenge\". All the other rows have unique names. I don't think that these records will influence our analysis wrong, so, let's just leave them in the data.","e0eb6d84":"Again, there are a lot of games. We have 7 games in the top 10 high rated free apps. Another interesting fact here is that here all the free apps have a very **high number of supported devices**. Nice!","73e2eae6":"### Number of Supported Languages","db4b95dc":"We have free and paid apps for all the genres.","5a28e196":"It seems that almost all of the apps have a vpp license. Let's see the count of those apps which don't have a vpp license.","83d17bb6":"Here the genres are: Music, Productivity and Games.","6ef02ac4":"### Correlation Matrix: Free vs Paid","967fe8ec":"Oh, we have only 1 Catalogs app. Let's see the plot without this app.","9a5269a4":"## Future work\n* Get more data (We can download more data and details for both iOS and Android stores). https:\/\/stackoverflow.com\/questions\/10272155\/getting-data-from-android-play-store\n    * Try to compare the Android and iOS stores\n* Add the description column from the other dataset\n* Try to predict is the app successive. For example, we can say an app is successive when the rating is >= 4","d75012a0":"### Ratings Count (for the current version)","6ae45ced":"Maybe, it'll be more convenient to convert the app size in MB. Let's do it!","b1e9033f":"## Final Words\nThank you for the read! I'll be glad to hear your feedback and any suggestions.","0fcc7081":"Let's see which are the unique prices for the paid apps after the filtering.","84187653":"### Currency","29160890":"### User Rating vs Size in MB","5bc830d1":"It seems that there is an error and these app have 1 supported language: English. So let's assume for the plots above that when we have 0 languages supported for an app, there is only one suppoted language.","1be564d5":"#### Countplot for the prices","0a2d248d":"### Correlation Matrix","a518fb0f":"### Question: How does the app details contribute the user ratings?","f19f0032":"### User Rating (for all versions)","07566aa1":"Great! We don't have any missing data. In many cases, the data scientists need to handle missing data, but here we're lucky.","39943069":"They all have supported devices larger than 24. The first **8 of them are games** and the most of them costs only \\$0.99, only 1 games have price \\$1.99. The last 2 are with **\"Health & Fitness\"** and **\"Business\"** genres. They have high number of supported devices and their prices are \\$4.99.","70f7398e":"The 2 of the apps are very expensive and make our plot concise and not very informative","d0c4a925":"## Summary Conclusions\n### How the free apps differ from the paid apps?\n* Top 3 famous app genres - free vs paid\n\n|Free|Paid|\n|-|-|\n|Games|Games|\n|Entartainment|Education|\n|Photo & Video|Entartainment|\n\n* Top 3 famous app genres mean user rating - free vs paid\n\n|Free|Paid|\n|-|-|\n|medical|shopping|\n|book|catalog|\n|productivity|book|\n\n* Top 3 famous app genres mean rating count - free vs paid\n\n|Free|Paid|\n|-|-|\n|Reference|Games|\n|Social Networking|Business|\n|Music|News|\n\n### How does the app details contribute to the user ratings?\n* It seems that users tend to give a good rating for apps which already have a good rating\n* Also, when the screenshots increase the rating is also increasing\n* Users tend to rate the free apps much more than the paid ones\n* An app have a high rating when it's size is greater\n\n### Other Interesting Analysis\n* There are 2 very expensive apps for education \"Proloquo2Go - Symbol-based AAC\" and \"LAMP Words For Life\" with prices \\\\$249.99 and \\\\$299.99\n* Most of the paid apps (96%) are below or equal to \\\\$9.99\n* The top 3 famous prices are: \\\\$0.99, \\\\$2.99, \\\\$1.99\n* Interesting fact: All prices have an ending digit 9 (psychological pricing)\n* Many of the apps (62%) have a content rating equal to 4+\n* 86% of the app have 37, 38, or 40 supported devices\n* Almost every app have a vpp license\n* Apps that are with very big size are games","014f7e47":"# iOS Mobile Apps Statistics","dbeafb0b":"Top 3 Free app genres:\n1. Reference\n2. Social Networking\n3. Music\n\nTop 3 Paid app genres:\n1. Games\n2. Business\n3. News","0df4f7e6":"### Number of Supported Devices","deba2c95":"## Abstract\nIn this analysis we will try to answer the following questions throughout some statistics and plots:\n* **How the free apps differ from the paid apps?**\n* **How does the app details contribute the user ratings?**\n* **Are the paid apps better than the free ones?**","daae7b8d":"### Price\nI think it will be nice to add a column called **is_free**. Later, we can use this column to create **\"free vs. paid\"** analysis.","cace6c6d":"### Mean Ratings Count per Genre","d2f3e479":"We can see that there is only one currency - USD. This column is not useful, so we'll delete and this column.","2b803b6d":"Let's see the same plot without them.","af919f57":"### Top 10 High Rated Free Apps","62044af5":"Conclusions\n\nFree apps:\n* 25% of the free apps have size in MB below or equal to 62.55 MB\n* 50% of the free apps have size in MB below or equal to 103.32 MB\n* 75% of the free apps have size in MB below or equal to 163.03 MB\n\nPaid apps:\n* 25% of the paid apps have size in MB below or equal to 35.44 MB\n* 50% of the paid apps have size in MB below or equal to 88.04 MB\n* 75% of the paid apps have size in MB below or equal to 222.62 MB","af07f443":"## Data Loading","4cec99b6":"Well, only the **\"shopping\"** genre has a very big difference: 1 paid app vs 105 free apps. We can also see that **\"Medical\"** and **\"Catalogs\"** genres have very few apps, but there the difference is not very big. So, we'll use all the genres instead **\"shopping\"**.","0744799a":"Wow, the **Google** apps have a high supported languages.\n\nLet's see for fun all Google apps.","09b7c94e":"### Apps Count by Genre\nLet's see how many apps are there per genre.","edc2258e":"Let's see the same plot with the **outliers**.","d54ddf2f":"For the **free apps** it seems that the most high correlated of all columns are:\n* **user_rating_vers** : 0.44\n* **screenshots**: 0.20\n\nFor the **paid app** it also seems that the most high correlated of the all columns are the same:\n* **user_rating_vers** : 0.48\n* **screenshots**: 0.17\n\nMaybe people tend to give a good rating if the app already have a good rating.","e7bab617":"We can see that many of the free apps have 37, 38 or 40 supported devices and many of the paid apps have 37, 38, 40 or 43 supported devices.","5cbad00d":"## Id\nWe don't need the app ID, so we'll delete it","8d0efdeb":"There are many games in the data and our plot is a little flattened, let's see the graph without them.","56f9e406":"Here, it's okay to have zero ratings for some of the apps. We'll focus on the rating count for all apps. However, if we want we can filter by this column, too.","97e40732":"## Data Cleaning and EDA\nFirst, we'll rename some of the columns for better readability.","64c4353e":"### Mean User Rating vs Supported Languages","b4922128":"#### Top 10 Apps With High Supported Languages","5ff1b809":"Top 3 genres:\n* Games\n* Entertainment\n* Education","9ab6052e":"Or ... just look it from a different point","6125a46b":"### Price vs User Rating","e9474c0d":"Let's see for fun which genres have supported devices greater than 35.","6ed0d4cb":"Wait. What? We have apps with 0 supported languases? Isn't the minimum one language?\n\nLet's see these apps.","cc6cdcd0":"### Top 10 Expensive apps\nLet's see the top 10 expensive apps","98c05f22":"Let's also see the most expensive of the apps without the outliers. We can sort by price and the by rating count.","f39b260e":"32 of them are games and 1 app is for education.\n\nLet's do the same for the paid apps.","5baf5043":"### User Rating (for the current version)","b2109934":"Let's plot counts per genre for both the free and paid apps in one plot.","704f4703":"## Question: How the free apps differ from the paid apps?","f51edd42":"The **violin plot** is a combination of a **kernel density estimation plot** and a **box plot**. We can try to use it because it is a very powerful plot. **Boxplots can be misleading**, they are not affected by the **distribution** of the data.","b1d537b6":"Wow, there are 2 very expensive apps for education. We can also say that the top 10 expensive apps are for education, productivity, navigation, business, and mobile music creation systems. Maybe these apps are used for **work** or **personal growth**.","a109a6ed":"An interesting fact here is that the prices greater than \\$9.99 and divisible by 5 tend to be more as count. ","2e4b29d3":"### Mean User Rating vs Supported Devices","482cf61b":"### VPP License\n**VPP** is an acronym for Volume Purchase Program\n\nThe Volume Purchase Program allows businesses and educational institutions to purchase your apps in volume and distribute them within their organizations. Contract developers can also offer customized apps to customers who have a Volume Purchase Program for Business account.\n","73ac0693":"## Dataset Description\n\n**AppleStore.csv**\n* \"id\" : App ID\n* \"track_name\": Application name\n* \"size_bytes\": Size in bytes\n* \"currency\": Currency type\n* \"price\": Price amount\n* \"rating_count_tot\": User rating count (for the all versions)\n* \"rating_count_ver\": User rating count (for the current version)\n* \"user_rating\" : Average User Rating value (for the all versions)\n* \"user_rating_ver\": Average User Rating value (for the current version)\n* \"ver\" : Latest version code\n* \"cont_rating\": Content rating\n* \"prime_genre\": Primary genre\n* \"sup_devices.num\": Number of supporting devices\n* \"ipadSc_urls.num\": Number of screenshots showed\n* \"lang.num\": Number of supported languages\n* \"vpp_lic\": Vpp Device Based Licensing Enabled","0da1cac9":"Almost all of the apps have a vpp license!","11ac58f5":"### Filter the apps by price\nLet's save the original DataFrame, in case we need it. And create a new DataFrame which have the apps with a price below or equal to \\$9.99.","8c77fb3a":"Wow, it seems that the users tend to rate the free apps much more than the paid ones.","6ecad1c3":"## Eploratory Data Analysis","7cc9c83f":"An interesting fact is that some of the free apps have much more supported languages.","cfed004f":"### Price vs Genre"}}