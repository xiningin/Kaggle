{"cell_type":{"57ab1aa9":"code","326b5172":"code","b183b821":"code","c52ecbf4":"code","abd4db4f":"code","2513dd0d":"code","5e2c63d6":"code","74432ae3":"code","74fbadb6":"code","fe8f8cd5":"code","1bb3fa75":"code","05679ccd":"markdown","5cf68167":"markdown","0d6c0536":"markdown","0e1328a1":"markdown","7ddb65de":"markdown","1fd3192d":"markdown","4d8f3f59":"markdown","814cb451":"markdown","8b09480e":"markdown","56f050fe":"markdown","39a9d092":"markdown"},"source":{"57ab1aa9":"\nimport numpy as np \nimport pandas as pd \n\n# Visualisation libraries\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set()\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\nimport folium \nfrom folium import plugins\n\n# Graphics in retina format \n%config InlineBackend.figure_format = 'retina' \n\n# Increase the default plot size and set the color scheme\nplt.rcParams['figure.figsize'] = 8, 5\n#plt.rcParams['image.cmap'] = 'viridis'\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# palette of colors to be used for plots\ncolors = [\"steelblue\",\"dodgerblue\",\"lightskyblue\",\"powderblue\",\"cyan\",\"deepskyblue\",\"cyan\",\"darkturquoise\",\"paleturquoise\",\"turquoise\"]\n\n\n# Disable warnings in Anaconda\nimport warnings\nwarnings.filterwarnings('ignore')","326b5172":"# Importing the 2019 survey dataset\n\n#Importing the 2019 Dataset\ndata_2019 = pd.read_csv('..\/input\/kaggle-survey-2019\/multiple_choice_responses.csv')\ndata_2019.columns = data_2019.iloc[0]\ndata_2019=data_2019.drop([0])\n\n# Helper functions\n\ndef return_count(data,question_part):\n    \"\"\"Counts occurences of each value in a given column\"\"\"\n    counts_df = data[question_part].value_counts().to_frame()\n    return counts_df\n\ndef return_percentage(data,question_part):\n    \"\"\"Calculates percent of each value in a given column\"\"\"\n    total = data[question_part].count()\n    counts_df= data[question_part].value_counts().to_frame()\n    percentage_df = (counts_df*100)\/total\n    return percentage_df\n\n\n    \ndef plot_graph(data,question,title,x_axis_title,y_axis_title):\n    \"\"\" plots a percentage bar graph\"\"\"\n    df = return_percentage(data,question)\n    \n    trace1 = go.Bar(\n                    x = df.index,\n                    y = df[question],\n                    #orientation='h',\n                    marker = dict(color='dodgerblue',\n                                 line=dict(color='black',width=1)),\n                    text = df.index)\n    data = [trace1]\n    layout = go.Layout(barmode = \"group\",title=title,width=800, height=500,\n                       xaxis=dict(type='category',categoryorder='array',categoryarray=salary_order,title=y_axis_title),\n                       yaxis= dict(title=x_axis_title))\n                       \n    fig = go.Figure(data = data, layout = layout)\n    iplot(fig)    ","b183b821":"# Replace missing answer with \u201cnot answer\u201d\ndf_2019 = data_2019\ndf_2019['What is the size of the company where you are employed?'] = df_2019['What is the size of the company where you are employed?'].fillna('not answer')\n\n# Splitting all the datasets genderwise\nmale_2019 = df_2019[df_2019['What is your gender? - Selected Choice']=='Male'].loc[df_2019['What is the size of the company where you are employed?'] != 'not answer']\nfemale_2019 = df_2019[df_2019['What is your gender? - Selected Choice']=='Female'].loc[df_2019['What is the size of the company where you are employed?'] != 'not answer']\n\n# Separation of data set by the number of employees in the company\nemployees_2019_0 = df_2019[df_2019['What is the size of the company where you are employed?'] == '0-49 employees']\nemployees_2019_50 = df_2019[df_2019['What is the size of the company where you are employed?'] == '50-249 employees']\nemployees_2019_250 = df_2019[df_2019['What is the size of the company where you are employed?'] == '250-999 employees']\nemployees_2019_1000 = df_2019[df_2019['What is the size of the company where you are employed?'] == '1000-9,999 employees']\nemployees_2019_NotAnswer = df_2019[df_2019['What is the size of the company where you are employed?'] == 'not answer']\nemployees_2019_10000 = df_2019[df_2019['What is the size of the company where you are employed?'] == '> 10,000 employees']\n\n# Distribution of respondents by the number of employees in the company in 2019\ncount_employees = df_2019['What is the size of the company where you are employed?'].value_counts()[:].reset_index()\n\npie_employees = go.Pie(labels=count_employees['index'],values=count_employees['What is the size of the company where you are employed?'],name=\"Employees\",hole=0.5,domain={'x': [0,1]})\n\nlayout = dict(title = 'Distribution of respondents by the number of employees in the company in 2019', font=dict(size=10), legend=dict(orientation=\"h\"),\n              annotations = [dict(x=0.5, y=0.5, text='Employees', showarrow=False, font=dict(size=20))])\n\nfig = dict(data=[pie_employees], layout=layout)\npy.iplot(fig)\n","c52ecbf4":"import textwrap\nfrom  textwrap import fill\n\n# Positions of respondents who did not answer about the size of the company\nx_axis=range(12)\nrole = employees_2019_NotAnswer['Select the title most similar to your current role (or most recent title if retired): - Selected Choice'].value_counts().to_frame()\nrole = role\/len(employees_2019_NotAnswer)*100\nlabels = role.index\n\nrole.plot(kind='bar',color='dodgerblue',linewidth=1,edgecolor='k',legend=None)\nplt.gcf().set_size_inches(16,7)\nplt.title('Positions of respondents who did not answer about the size of the company', fontsize = 16)\nplt.xticks(x_axis, [textwrap.fill(label, 9) for label in labels], \n           rotation = 5, fontsize=13, horizontalalignment=\"center\")\nplt.ylabel('Percentage of Respondents',fontsize=15)\nplt.xlabel('Role',fontsize=15)\nplt.show()","abd4db4f":"# Column of dataset under consideration\nq = 'What is the size of the company where you are employed?'\n\n#Preprocessing of data on the ratio of companies by gender\nlabel_employees = ['0-49 employees',\n                '50-249 employees',\n                '250-999 employees',\n                '1000-9,999 employees',\n                '> 10,000 employees']\n\ndf1 = return_count(female_2019,q)\ndf2 = return_count(male_2019, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='Females', y=df1[q], x=df1.index,marker_color='lightcoral'),\n    go.Bar(name='Males', y=df2[q], x=df2.index,marker_color='dodgerblue')\n])    \nfig.update_layout(barmode='group',title='Number of respondents in different companies by gender',xaxis=dict(title='Company size',categoryarray=label_employees),yaxis=dict(title='Number of working respondents'))\nfig.show() ","2513dd0d":"# Column of dataset under consideration\nq = 'What is your age (# years)?'\ndef concat_age(df):\n    df[q] = np.where(df[q].isin(['18-21','22-24']), '18-24',df[q])\n    df[q] = np.where(df[q].isin(['25-29','30-34']), '25-34',df[q])\n    df[q] = np.where(df[q].isin(['35-39','40-44']), '35-44' ,df[q])\n    df[q] = np.where(df[q].isin(['45-49','50-54']), '45-54',df[q])\n    df[q] = np.where(df[q].isin(['55-59','60-69']), '55-69',df[q])\n    df[q] = np.where(df[q].isin(['70+']),'70+' ,df[q])\n    return df\n\n#Preprocessing of data on the ratio of companies by age\nlabel = ['18-24', '25-34', '35-44', '45-54', '55-69', '70+']\n\nemployees_2019_0 = concat_age(employees_2019_0)\nemployees_2019_50 = concat_age(employees_2019_50)\nemployees_2019_250 = concat_age(employees_2019_250)\nemployees_2019_1000 = concat_age(employees_2019_1000)\nemployees_2019_10000 = concat_age(employees_2019_10000)\n\ndf1 = return_count(employees_2019_0,q)\ndf2 = return_count(employees_2019_50, q)\ndf3 = return_count(employees_2019_250, q)\ndf4 = return_count(employees_2019_1000, q)\ndf5 = return_count(employees_2019_10000, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='0-49 employees', y=df1[q], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='50-249 employees', y=df2[q], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='250-999 employees', y=df3[q], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='1000-9,999 employees', y=df4[q], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='> 10,000 employees', y=df5[q], x=df5.index,marker=dict(color='#8A2BE2'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by age',xaxis=dict(title='Age of respondents',categoryarray=label),yaxis=dict(title='Number of working respondents'))\nfig.show() ","5e2c63d6":"# Column of dataset under consideration\nq = 'What is the size of the company where you are employed?'\n\n#Pre-processing of data on the ratio of companies by education\nq1 = 'What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'\nMaster = df_2019[df_2019[q1] == 'Master\u2019s degree']\nProfessional = df_2019[df_2019[q1] == 'Professional degree']\nBachelor = df_2019[df_2019[q1] == 'Bachelor\u2019s degree']\nstudy = df_2019[df_2019[q1] == 'Some college\/university study without earning a bachelor\u2019s degree']\nDoctoral = df_2019[df_2019[q1] == 'Doctoral degree']\nnot_answer = df_2019[df_2019[q1] == 'I prefer not to answer']\nno_formal_education = df_2019[df_2019[q1] == 'No formal education past high school']\n\nlabel = ['0-49 employees', '50-249 employees', '250-999 employees', '1000-9,999 employees', '> 10,000 employees']\n\ndf1 = return_count(Master,q)\ndf2 = return_count(Professional, q)\ndf3 = return_count(Bachelor, q)\ndf4 = return_count(study, q)\ndf5 = return_count(Doctoral, q)\ndf6 = return_count(not_answer, q)\ndf7 = return_count(no_formal_education, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='Master\u2019s degree', y=df1[q], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='Professional degree', y=df2[q], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='Bachelor\u2019s degree', y=df3[q], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='Some college\/university study without earning a bachelor\u2019s degree', y=df4[q], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='Doctoral degree', y=df5[q], x=df5.index,marker=dict(color='#8A2BE2')),\n    go.Bar(name='I prefer not to answer', y=df6[q], x=df6.index,marker=dict(color='#5A2BE2')),\n    go.Bar(name='No formal education past high school', y=df7[q], x=df7.index,marker=dict(color='#8A2902'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by education',xaxis=dict(title='Company size',categoryarray=label),yaxis=dict(title='Number of respondents'))\nfig.show() ","74432ae3":"# Column of dataset under consideration\nq = 'Select the title most similar to your current role (or most recent title if retired): - Selected Choice'\n\n#Preprocessing of data on the ratio of companies by role\nlabel = ['Software Engineer', 'Other', 'Data Scientist', 'Statistician',\n 'Product\/Project Manager', 'Data Analyst', 'Research Scientist',\n 'Business Analyst', 'Data Engineer', 'DBA\/Database Engineer']\n\n\ndf1 = return_count(employees_2019_0,q)\ndf2 = return_count(employees_2019_50, q)\ndf3 = return_count(employees_2019_250, q)\ndf4 = return_count(employees_2019_1000, q)\ndf5 = return_count(employees_2019_10000, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='0-49 employees', y=df1[q], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='50-249 employees', y=df2[q], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='250-999 employees', y=df3[q], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='1000-9,999 employees', y=df4[q], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='> 10,000 employees', y=df5[q], x=df5.index,marker=dict(color='#8A2BE2'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by role',xaxis=dict(title='Role',categoryarray=label),yaxis=dict(title='Number of working respondents'))\nfig.show() ","74fbadb6":"# Column of dataset under consideration\nq = 'Have you ever used a TPU (tensor processing unit)?'\n\n#Preprocessing of data on the ratio of companies by frequency of use of the tensor processor'\nlabel = ['Never', 'Once','2-5 times', '6-24 times',  '> 25 times']\n\ndf1 = return_count(employees_2019_0,q)\ndf2 = return_count(employees_2019_50, q)\ndf3 = return_count(employees_2019_250, q)\ndf4 = return_count(employees_2019_1000, q)\ndf5 = return_count(employees_2019_10000, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='0-49 employees', y=df1[q], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='50-249 employees', y=df2[q], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='250-999 employees', y=df3[q], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='1000-9,999 employees', y=df4[q], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='> 10,000 employees', y=df5[q], x=df5.index,marker=dict(color='#8A2BE2'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by frequency of use of the tensor processor',xaxis=dict(title='Frequency of use of the tensor processor',categoryarray=label),yaxis=dict(title='Number of working respondents'))\nfig.show() ","fe8f8cd5":"# Column of dataset under consideration\nq = 'For how many years have you used machine learning methods?'\n\n#Preprocessing of data on the ratio of companies by number of years using machine learning methods\nlabel = ['< 1 years', '1-2 years', '2-3 years', '3-4 years', '4-5 years', '5-10 years', '10-15 years', '20+ years']\n\ndf1 = return_count(employees_2019_0,q)\ndf2 = return_count(employees_2019_50, q)\ndf3 = return_count(employees_2019_250, q)\ndf4 = return_count(employees_2019_1000, q)\ndf5 = return_count(employees_2019_10000, q)\n\nfig = go.Figure(data=[\n    go.Bar(name='0-49 employees', y=df1[q], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='50-249 employees', y=df2[q], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='250-999 employees', y=df3[q], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='1000-9,999 employees', y=df4[q], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='> 10,000 employees', y=df5[q], x=df5.index,marker=dict(color='#8A2BE2'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by number of years using machine learning methods',xaxis=dict(title='Number of years using machine learning methods',categoryarray=label),yaxis=dict(title='Number of working respondents'))\nfig.show() ","1bb3fa75":"# Column of dataset under consideration\nq = 'What is your current yearly compensation (approximate $USD)?'\n\n#Preprocessing the salary data to get standard salary categories\ndef salary(df):\n    df['Salary Range'] = np.where(df[q].isin(['$0-999','1,000-1,999','2,000-2,999','3,000-3,999',\n                     '4,000-4,999','5,000-7,499','7,500-9,999']),'0-10,000',' ')\n    df['Salary Range'] = np.where(df[q].isin(['10,000-14,999','15,000-19,999',]),'10-20,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['20,000-24,999','25,000-29,999',]),'20-30,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['30,000-39,999']),'30-40,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['40,000-49,999']),'40-50,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['50,000-59,999']),'50-60,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['60,000-69,999']),'60-70,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['70,000-79,999']),'70-80,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['80,000-89,999']),'80-90,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['90,000-99,999']),'90-100,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['100,000-124,999']),'100-125,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['125,000-149,999']),'125-150,000', df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['150,000-199,999']),'150-200,000',df['Salary Range'])\n    df['Salary Range'] = np.where(df[q].isin(['200,000-249,999', '250,000-299,999', '300,000-400,000', \n                                                       '400,000-500,000', '> $500,000']),'200,000+',df['Salary Range'])\n    return df\n\n\nsalary_order2 = ['0-10,000',\n                '10-20,000',\n                '20-30,000',\n                '30-40,000',\n                '40-50,000',\n                '50-60,000',\n                '60-70,000',\n                '70-80,000',\n                '80-90,000',\n                '90-100,000',\n                '100-125,000',\n                '125-150,000',\n                '150-200,000',\n                '200,000+']\n\ndf1 = salary(employees_2019_0)\ndf2 = salary(employees_2019_50)\ndf3 = salary(employees_2019_250)\ndf4 = salary(employees_2019_1000)\ndf5 = salary(employees_2019_10000)\n\ndf1 = return_count(df1,'Salary Range')\ndf2 = return_count(df2, 'Salary Range')\ndf3 = return_count(df3, 'Salary Range')\ndf4 = return_count(df4, 'Salary Range')\ndf5 = return_count(df5, 'Salary Range')\n\nfig = go.Figure(data=[\n    go.Bar(name='0-49 employees', y=df1['Salary Range'], x=df1.index,marker=dict(color='#F08080')),\n    go.Bar(name='50-249 employees', y=df2['Salary Range'], x=df2.index,marker=dict(color='#FFA500')),\n    go.Bar(name='250-999 employees', y=df3['Salary Range'], x=df3.index,marker=dict(color='#00FA9A')),\n    go.Bar(name='1000-9,999 employees', y=df4['Salary Range'], x=df4.index,marker=dict(color='#1E90FF')),\n    go.Bar(name='> 10,000 employees', y=df5['Salary Range'], x=df5.index,marker=dict(color='#8A2BE2'))\n])    \nfig.update_layout(barmode='group',title='The number of respondents in different companies by salaries in 2019',xaxis=dict(title='Annual Salary in USD',categoryarray=salary_order2),yaxis=dict(title='Count of respondents'))\nfig.show()    ","05679ccd":">\ud83d\udcce Resume: All companies are dominated by respondents with a master's and bachelor's degree\n\n# 4. Professional experience","5cf68167":"> \ud83d\udcce Resume: \n> - Most of the respondents who did not indicate the size of the company are students and the unemployed.\n\nMost of those who did not answer the question about the size of the company are either studying or unemployed. Therefore, we will not take into account their answers.\n\nLet us now compare our working respondents in 5 key areas: gender, age, education, professional experience and wages.\n\n# 1. Gender","0d6c0536":">\ud83d\udcce Resume: Most companies do not use a tensor processor","0e1328a1":">\ud83d\udcce Resume:\n- Data Scientists and Software Engineer are often found in large companies and in small companies such as startups.\n- But Business Analysts and Project Manager are more often found in large companies.\n- Research Scientist are more often found in small companies.","7ddb65de":">\ud83d\udcce Resume:\n> Young employees predominate.\n\nYoung employees predominate because the DS and ML area began to emerge quite recently, around the 1990s.\n>\ud83d\udcce Resume:\n> Basically, young respondents work either in a large company (more than 10,000 employees) or in a small company (less than 50 employees).\n\nIt is difficult to find work without work experience, so young people are trying to get a job, at least in small companies. But sometimes interns manage to get into a big company.\n>\ud83d\udcce Resume:\n> At a more mature age (more than 55 years), respondents work in small companies.\n\nWith age, people gain experience and want to share it with less experienced ones. But in higher education institutions there are not many workers. And that is why adults work in small companies.\n# 3.Education","1fd3192d":">\ud83d\udcce Resume:\n> - There are several times fewer women in various companies than men.\n> - But the biggest difference is in small companies (less than 50 employees) and in large companies (more than 10,000 employees).\n\n\nFrom this diagram, we can conclude that women are less likely to be found in the DS and ML, as in the principle in any technical field.\nIn large companies, mostly men work.\n# 2. Age","4d8f3f59":">\ud83d\udcce Resume:\nMore experienced in machine learning more often work in large companies.\n# 5. Wages","814cb451":" # Analysis of the 2019 Kaggle ML and DS poll on company employees\n![rawpixel.com](https:\/\/img.rawpixel.com\/s3fs-private\/rawpixel_images\/website_content\/v211batch10-minty-221-finance_2.jpg?auto=format&bg=transparent&con=3&cs=srgb&dpr=1&fm=jpg&ixlib=php-3.1.0&mark=rawpixel-watermark.png&markalpha=90&markpad=13&markscale=10&markx=25&q=75&usm=15&vib=3&w=1200&s=4aae6fd96e31db558710c6760321b0b1) \n*Sourse: rawpixel.com\/Minty*\n## Task\nThe purpose of this notebook is to analyze the survey data in order to answer an important question: who works in large companies and what skills does he have?\n\n## Overview\nThis is Kaggle\u2019s third annual machine learning and data science survey. This year, as in 2017 and 2018, Kagle conducted an industry-wide survey that provides a truly comprehensive picture of the state of data science and machine learning.\n\n## Methodology\nThis notebook will focus only on employees in companies with ML and DS, thus, analyzing the answers of only respondents working in the company.\n\nIn this notebook, small businesses are defined as firms with the number of employees from 1 to 49 people; medium-sized enterprises: 50-249; and large enterprises: 250 and more.\n\nAs a result of work, I will try to answer questions:\n- What is the difference between employees of different companies?\n- What does an employee of a large company look like?","8b09480e":"# Comparison of groups of respondents in different companies\n## Distribution of respondents by the number of employees in the company in 2019\nLet's see in which companies our respondents work.\n","56f050fe":"> \ud83d\udcce Resume:\n>  - Most of the respondents work in a small company (less than 50 employees) and in a large company (more than 10,000 employees).\n>  - But almost a third of the respondents did not answer which company they work for.\n\nLet's find out what they do.","39a9d092":">\ud83d\udcce Resume: Respondents in large companies receive more salary than in more small companies.\n\n# \u0421onclusion\nSo, what is the image of an employee of a large company and how to get there?\nAn employee of a large company is a man aged 25 to 45 years, having a master's or bachelor's degree and work experience of more than 1 year.\n\nIf you want to get into a large company, you should try, and you will succeed!\nFirst, the desire and interest in data mining is required\nSecondly, you need to gain experience as an example in small companies or immediately take an internship in large companies."}}