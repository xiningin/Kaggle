{"cell_type":{"8d22ec8f":"code","74d81646":"code","19e3a9a7":"code","192f661a":"code","ed26396c":"code","61f42fb7":"code","26af149f":"code","c909f0f2":"code","a00ed938":"code","0f7d098a":"code","e56a6c5a":"code","dbc25612":"code","02c147fb":"code","6b76300c":"code","0ffcc772":"code","b27cc680":"code","2440333a":"code","eafcdd36":"code","790356ce":"code","53480a11":"code","595d6a4f":"code","11a038e1":"code","52af6a2a":"code","6e7e164c":"code","8388e0c7":"code","708078a9":"code","d65f41a8":"code","221459c1":"code","d862fdd8":"code","4dffa846":"code","99bfdc74":"code","57906704":"code","1b4f1673":"markdown","0336ff51":"markdown","49fa52ff":"markdown","f86f7548":"markdown","ed353f3b":"markdown","69deeeb4":"markdown","5f8d40dc":"markdown","418fc574":"markdown","5707dc09":"markdown","22ae835b":"markdown","18ca5c38":"markdown","9fe26174":"markdown","e43df4c8":"markdown","1288847c":"markdown","eec3928d":"markdown"},"source":{"8d22ec8f":"#importing of all libraries and operations needed\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","74d81646":"header90 = \"KPopHits\"\nfooter90 = \"s.csv\"\nheader1 = \"KPopHits200\"\nheader10 = \"KPopHits20\"\nfooter = \".csv\"\nlabels = {}    #dictionary for the labels of a dataset and their respective csv file\n\nfor x in range(22):\n    if x == 0:\n        j = 90\n        labels[str(j)] = header90 + str(j) + footer90\n    elif x > 0 and x < 11:\n        if x == 1:\n            j = 0\n        labels[\"200\" + str(j)] =  header1 + str(j) + footer\n    else:\n        labels[\"20\" + str(j)] =  header10 + str(j) + footer\n    \n    if x != 0:\n        j += 1\n\nprint(labels)","19e3a9a7":"dfs = {}    #dictionary for the datasets\n\nkey_list = list(labels.keys())\nval_list = list(labels.values())\nfor x in range(22):\n    dfs[key_list[x]] = pd.read_csv(\"\/kaggle\/input\/kpop-hits-through-the-years\/\"+val_list[x])\n\ndfs['2000']    #as a sample of calling a dataset","192f661a":"dfs['90'].info()","ed26396c":"#danceability in the 90s\n\ndfs['90'].agg({\"danceability\": [\"mean\", \"std\", \"median\"]})","61f42fb7":"#energy in the 90s \n\ndfs['90'].agg({\"energy\": [\"mean\", \"std\", \"median\"]})","26af149f":"#the keys used in the 90s \n\ndfs['90'][\"key\"].mode()","c909f0f2":"dfs['90'].agg({\"key\": [\"std\"]})","a00ed938":"#loudness in the 90s \n\ndfs['90'].agg({\"loudness\": [\"mean\", \"std\", \"median\"]})","0f7d098a":"#the modes used in the 90s \n\ndfs['90'][\"mode\"].mode()","e56a6c5a":"dfs['90'].agg({\"mode\": [\"std\"]})","dbc25612":"#acousticness in the 90s \n\ndfs['90'].agg({\"acousticness\": [\"mean\", \"std\", \"median\"]})","02c147fb":"#valence in the 90s \n\ndfs['90'].agg({\"valence\": [\"mean\", \"std\", \"median\"]})","6b76300c":"#tempo in the 90s \n\ndfs['90'].agg({\"tempo\": [\"mean\", \"std\", \"median\"]})","0ffcc772":"#the duration (in milliseconds) in the 90s \n\ndfs['90'].agg({\"duration_ms\": [\"mean\", \"std\", \"median\"]})","b27cc680":"#the time signatures used in the 90s \n\ndfs['90'][\"time_signature\"].mode()","2440333a":"dfs['90'].agg({\"time_signature\": [\"std\"]})","eafcdd36":"for x in range(22): \n    if x == 0:\n        period_column = '1990s'\n    else:\n        period_column = key_list[x]\n    danceability_column = dfs[key_list[x]]['danceability'].mean()\n    energy_column = dfs[key_list[x]]['energy'].mean()\n    loudness_column = dfs[key_list[x]]['loudness'].mean()\n    speechiness_column = dfs[key_list[x]]['speechiness'].mean()\n    acousticness_column = dfs[key_list[x]]['acousticness'].mean()\n    valence_column = dfs[key_list[x]]['valence'].mean()\n    tempo_column = dfs[key_list[x]]['tempo'].mean()\n    duration_ms_column = dfs[key_list[x]]['duration_ms'].mean()\n        \n    if x == 0:\n        hits_df = pd.DataFrame({'period': [period_column], 'danceability': [danceability_column], 'energy': [energy_column], 'loudness': [loudness_column], 'speechiness': [speechiness_column], 'acousticness': [acousticness_column], 'valence': [valence_column], 'tempo': [tempo_column], 'duration_ms': [duration_ms_column]})\n    else:\n        row = pd.Series([period_column, danceability_column, energy_column, loudness_column, speechiness_column, acousticness_column, valence_column, tempo_column, duration_ms_column], index=hits_df.columns)\n        hits_df = hits_df.append(row, ignore_index=True)\n        \nhits_df","790356ce":"#Danceability\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [9.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"danceability\"]\nplt.plot(x, y, color='green')\nplt.title(\"General Look on K-Pop's Danceability\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Danceability\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","53480a11":"#Energy\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [9.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"energy\"]\nplt.plot(x, y, color='pink')\nplt.title(\"General Look on K-Pop's Energy\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Energy\")\nspacing = 0.110\nfig.subplots_adjust(bottom=spacing)\nplt.show()","595d6a4f":"#Loudness\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [15.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"loudness\"]\nplt.plot(x, y, color='purple')\nplt.title(\"General Look on K-Pop's Loudness\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Loudness\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()\n#loudness","11a038e1":"#Acousticness\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [9.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"acousticness\"]\nplt.plot(x, y, color='orange')\nplt.title(\"General Look on K-Pop's Acousticness\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Acousticness\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","52af6a2a":"#Valence\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [13.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"valence\"]\nplt.plot(x, y, color='#e1e047')\nplt.title(\"General Look on K-Pop's Valence\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Valence\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","6e7e164c":"#Tempo\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [9.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"tempo\"]\nplt.plot(x, y, color='blue')\nplt.title(\"General Look on K-Pop's Tempo\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Tempo\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","8388e0c7":"#Duration\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [15.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"]\ny = hits_df[\"duration_ms\"]\nplt.plot(x, y, color='black')\nplt.title(\"General Look on K-Pop's Duration\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Duration (ms)\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","708078a9":"#Speechiness\n\nfig = plt.figure()\nplt.rcParams[\"figure.figsize\"] = [9.5,3.5]\nplt.rcParams[\"figure.autolayout\"] = True\nx = hits_df[\"period\"][14:22] \ny = hits_df[\"speechiness\"][14:22]\nplt.plot(x, y, color='green')\nplt.title(\"General Look on K-Pop's Speechiness\")\nplt.xlabel(\"Period\/Year\")\nplt.ylabel(\"Speechiness\")\nspacing = 0.100\nfig.subplots_adjust(bottom=spacing)\nplt.show()","d65f41a8":"#Key\n\nfor x in range(22): \n    if x == 0:\n        period_column = '1990s'\n    else:\n        period_column = key_list[x]\n    key_counts = dfs[key_list[x]][\"key\"].value_counts()\n    df = key_counts.rename_axis('unique_values').reset_index(name='counts')\n    df = df.assign(period=[period_column for i in range(df['unique_values'].size)])\n    \n    if x == 0: \n        key_df = df\n    else:\n        key_df = key_df.append(df, ignore_index = True)\n\nkey_df","221459c1":"#Mode\n\nfor x in range(22): \n    if x == 0:\n        period_column = '1990s'\n    else:\n        period_column = key_list[x]\n    mode_counts = dfs[key_list[x]][\"mode\"].value_counts()\n    df = mode_counts.rename_axis('unique_values').reset_index(name='counts')\n    df = df.assign(period=[period_column for i in range(df['unique_values'].size)])\n    \n    if x == 0: \n        mode_df = df\n    else:\n        mode_df = mode_df.append(df, ignore_index = True)\n\nmode_df","d862fdd8":"#Time Signature\n\nfor x in range(22): \n    if x == 0:\n        period_column = '1990s'\n    else:\n        period_column = key_list[x]\n    time_signature_counts = dfs[key_list[x]][\"time_signature\"].value_counts()\n    df = time_signature_counts.rename_axis('unique_values').reset_index(name='counts')\n    df = df.assign(period=[period_column for i in range(df['unique_values'].size)])\n    \n    if x == 0: \n        time_signature_df = df\n    else:\n        time_signature_df = time_signature_df.append(df, ignore_index = True)\n\ntime_signature_df","4dffa846":"#Key\n\nsns.barplot(y='counts',x='period',hue='unique_values',data=key_df)\nsns.set(rc={'figure.figsize':(100,10)})\nplt.rcParams[\"figure.autolayout\"] = True\nplt.title(\"Keys used in KPop Hits\")","99bfdc74":"#Mode\n\nsns.barplot(y='counts',x='period',hue='unique_values',data=mode_df)\nsns.set(rc={'figure.figsize':(50,10)})\nplt.rcParams[\"figure.autolayout\"] = True\nplt.title(\"Modes used in KPop Hits\")","57906704":"#Time Signature\n\nsns.barplot(y='counts',x='period',hue='unique_values',data=time_signature_df)\nsns.set(rc={'figure.figsize':(50,10)})\nplt.rcParams[\"figure.autolayout\"] = True\nplt.title(\"Time Signatures used in KPop Hits\")","1b4f1673":"As evidently seen above, there is no doubt that the commonly used time signature for a majority of K-Pop hits from the beginning of the genre until the year of 2020 is 4.    \n\nThis time signature is even known as the \"common time\" in Western music. With this, it has become an accepted global norm that this time signature is a \"go to\" for a catchy pop song.","0336ff51":"### 1. Data Reading or Collection\n\nBelow, a dictionary is created, wherein the key represents the period or year while the value is represents the name of the dataset in a csv file.","49fa52ff":"There are 3 evident keys that have become popular in certain periods or years:\n- **`0` or `C`**: from 90s to 2000, 2017\n- **`1` or `C#`**: from 2005 to 2009, 2012, 2015, 2018\n- **`9` or `A`**: from 2000 to 2002, 2005, 2015, 2018, 2020\n\nHowever, when observed as a whole, there seems to be no \"popular\" key in all of K-Pop since it is known to be very experimental, wherein it is highly possible for one song to contain so many changes within it, whether in terms of the chord progression, tempo or even the genre of a particular section.","f86f7548":"Note that for `speechiness`, the years `2013` to `2020` are the only ones considered since these are the years wherein their respective Spotify playlists (where the information in the datasets were directly scraped from) had the following situations:\n1. initially had no missing songs, when compared to their original Apple Music `K-Pop Hits` playlists\n2. initially had missing songs but later found either the original or a cover that sounded very similar to the original\n3. no instrumentals were used to substitute the original song","ed353f3b":"As seen from the visualizations above, there has been a general upward trend in K-Pop in terms of danceability, energy and loudness while a downward trend is visually apparent in terms of acousticness and duration. The rest of the audio features presented do not have a trend or even a seasonal pattern to describe them.    \n\nThese observations compliment the fact that K-Pop has evidently grown through the years into a global phenomenon, which mainly has, in its forefront, very catchy and attention-grabbing songs that almost always has a choreography that was specially tailored for the specific song and artist. Through this, each performance and released content is utilized to its highest potential with the primary goal of not letting their audience get bored of them.","69deeeb4":"The major scales have ultimately dominated the hit charts in K-Pop ever since the beginning until the year of 2018. However, the recent years of 2019 and 2020 have shown a changing of the dominant mode used, now making minor scales as the dominant mode. \n\nOne possible reason for this is the constant drive for change and growth within the industry in order to sustain the global attention and even surpass the accomplishments of the past generations of K-Pop artists. ","5f8d40dc":"### 6. Data Visualization: Mode as Central Value\n\nThe periodic values per audio feature from the newly created dataframes are plotted.","418fc574":"### 3. The Combination of all Necessary Data: Mean as Central Value\n\nA dataframe is created, containing the values of all audio features, which uses the mean as the central value, per period or year.","5707dc09":"### 2. Doublechecking the Data's Values\n\nBelow, a dataframe is used as a sample to get a general view on the details of each value in the newly made dataframes.","22ae835b":"## Exploring the K-Pop Hits Datasets\n\nThe main goal is to identify the general trends that happened in K-Pop, specifically in terms of certain audio features.","18ca5c38":"### 4. Data Visualization: Mean as Central Value\n\nThe periodic values per audio feature from the newly created dataframe called `hits_df` are plotted.","9fe26174":"### 5. The Combination of all Necessary Data: Mode as Central Value\n\nA dataframe per audio feature, which uses the mode as the central value, is created. It contains the unique values of that audio feature and their respective counts per period or year.","e43df4c8":"Next, all the data from the datasets are read and transformed into separate dataframes.","1288847c":"The `central value` of each audio feature is also checked to find what would be the best value that would represent the given period in the audio feature.","eec3928d":"With this, it has been concluded to use the mean to represent the central value for the following audio features:\n- **`danceability`**: How suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n- **`energy`**: Perceptual measure of intensity and activity based on its dynamic range, perceived loudness, timbre, onset rate, and general entropy. The values range from 0.0 to 1.0.  \n- **`loudness`**: Overall loudness of a track in decibels. Loudness values are averaged across the entire track. Values usually range between -60 and 0 db.\n- **`speechiness`**: Presence of spoken words in a track. The more exclusively speech-like the recording, the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\n- **`acousticness`**: Confidence measure of whether the track is acoustic. Values range from 0.0 to 1.0. 1.0 represents high confidence the track is acoustic.\n- **`valence`**: Musical positiveness conveyed by a track. Values measure from 0.0 to 1.0. Tracks with high valence sound more positive while tracks with low valence sound more negative.\n- **`tempo`**: Overall estimated tempo of a track in beats per minute.\n- **`duration_ms`**: Duration of the track in milliseconds.\n\nMeanwhile, the mode is used to represent the central value for the following audio features:\n- **`key`**: Key the track is in. Integers map to pitches using standard Pitch Class notation.\n- **`mode`**: Type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0\n- **`time_signature`**: Estimated overall time signature of a track. The time signature is a notational convention to specify how many beats are in each bar\/measure."}}