{"cell_type":{"c201ea72":"code","c5a77d30":"code","579925ae":"code","cc042e12":"code","05fca6e8":"code","6ad8b5d8":"code","0f421523":"code","35ba3ce7":"code","46fa5831":"code","380ac25a":"code","717ffbe1":"code","2c66374f":"code","c8b2f468":"code","fd710317":"code","3b3683ce":"code","0022dbab":"code","ccaf88eb":"code","c5808872":"code","c5fd609a":"code","69fea12d":"markdown","ba9f83c6":"markdown"},"source":{"c201ea72":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c5a77d30":"df=pd.read_csv(\"..\/input\/california-housing-prices\/housing.csv\")\ndf.info()\n","579925ae":"df[\"ocean_proximity\"].value_counts()","cc042e12":"from sklearn.preprocessing import LabelBinarizer\n\nlb=LabelBinarizer()\nprox=lb.fit_transform(df[\"ocean_proximity\"])\ndf=df.drop(\"ocean_proximity\",axis=1)","05fca6e8":"print(prox)\nprox_df=pd.DataFrame(prox,columns=[\"<1H Ocean\",\"Inland\",\"Near Ocean\",\"Near Bay\",\"Island\"])\n","6ad8b5d8":"import matplotlib.pyplot as plt\n%matplotlib inline\ndf.hist(bins=50,figsize=(20,15))\nplt.show()","0f421523":"#fill n\/a \ndf[\"total_bedrooms\"]=df[\"total_bedrooms\"].fillna(df[\"total_bedrooms\"].median())","35ba3ce7":"import seaborn as sns\n\ncorr_matrix=df.corr()\nsns.heatmap(corr_matrix,annot=True,cmap='coolwarm')\nplt.title(\"Correlation map\")\nplt.show()","46fa5831":"from pandas.plotting import scatter_matrix\n\ncorr1=[\"median_house_value\",\"median_income\",\"total_rooms\",\"housing_median_age\",\"latitude\"]\nscatter_matrix(df[corr1],figsize=(20,15))","380ac25a":"df.plot(kind=\"scatter\",x=\"median_income\",y=\"median_house_value\",alpha=0.1)\nplt.show()\n#outliers detected","717ffbe1":"#remove outliers\ndf=df[df[\"median_house_value\"]<500000]","2c66374f":"df[\"bedrooms_per_household\"]=df[\"total_bedrooms\"]\/df[\"households\"]\ndf[\"rooms_per_household\"]=df[\"total_rooms\"]\/df[\"households\"]\n\ncorr_matrix=df.corr()\nsns.heatmap(corr_matrix,annot=True,cmap=\"coolwarm\")\nplt.show()\n","c8b2f468":"df.plot(kind=\"scatter\", x=\"longitude\", y=\"latitude\", alpha=0.4,\n    s=housing[\"population\"]\/100, label=\"population\", figsize=(10,7),\n    c=\"median_house_value\", cmap=plt.get_cmap(\"jet\"), colorbar=True,\n    sharex=False)","fd710317":"df=df.drop([\"total_rooms\",\"total_bedrooms\"],axis=1)\n\ndf[\"<1H Ocean\"]=prox_df[\"<1H Ocean\"]\ndf[\"Inland\"]=prox_df[\"Inland\"]\ndf[\"Near Ocean\"]=prox_df[\"Near Ocean\"]\ndf[\"Near Bay\"]=prox_df[\"Near Bay\"]\ndf[\"Island\"]=prox_df[\"Island\"]\ndf","3b3683ce":"#train test split\nfrom sklearn.model_selection import train_test_split\n\ny=df[\"median_house_value\"]\nX=df.drop([\"median_house_value\"],axis=1)\nX_train,X_test,y_train,y_test= train_test_split(X,y, test_size=0.2, random_state=42)\n","0022dbab":"from sklearn.preprocessing import StandardScaler\n\nss=StandardScaler()\ncols=[\"longitude\",\"latitude\",\"housing_median_age\",\"population\",\"households\",\"median_income\",\"bedrooms_per_household\",\"rooms_per_household\"]\nX_train[cols]=ss.fit_transform(X_train[cols])\nX_test[cols]=ss.transform(X_test[cols])","ccaf88eb":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\nlr=LinearRegression()\nlr.fit(X_train,y_train)\npred=lr.predict(X_test.iloc[:786])\nrms=mean_squared_error(pred,y_test.iloc[:786])\nprint(rms)","c5808872":"from sklearn.tree import DecisionTreeRegressor\n\ntree_reg = DecisionTreeRegressor(random_state=42)\ntree_reg.fit(X_train, y_train)\npred=tree_reg.predict(X_test.iloc[:786])\nrms=mean_squared_error(pred,y_test.iloc[:786])\nprint(rms)\ntree_reg.score(X_train,y_train)","c5fd609a":"output_csv = pd.DataFrame({'Label':pred})\n\noutput_csv.to_csv('output.csv',index=False)","69fea12d":"**Areas closer to shore are more expensive.**","ba9f83c6":"\n**median house value**-{median income,total rooms,age,latitude}.\n\n**household**-{total bedroom, total room}\n"}}