{"cell_type":{"81de8e30":"code","749dc76e":"code","9f629b0e":"code","826973b0":"code","32e499ed":"code","3c273a65":"code","211381f2":"code","023d86ca":"code","69feb60c":"code","9fa91805":"code","03328383":"code","c7e3174a":"code","68ff351a":"code","23a36721":"markdown"},"source":{"81de8e30":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\n\nimport joblib","749dc76e":"#load data\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\ntest.info()","9f629b0e":"test.set_index(['PassengerId'], inplace=True)\ntest.shape","826973b0":"#create feature of family size\ntest['FamSize'] = test.apply(lambda row: row.SibSp + row.Parch, axis = 1) ","32e499ed":"#create a function to determine deck level\ndef set_deck(cabin):\n    if str(cabin) == 'nan':\n        return 'Missing'\n    return cabin[0]","3c273a65":"#store results in new column named 'Deck'\ntest['Deck']= test['Cabin'].map(set_deck)","211381f2":"num_feat = ['Age', 'FamSize', 'Fare']\ncat_feat = ['Sex', 'Pclass', 'Deck', 'Embarked']\nfeatures = num_feat + cat_feat","023d86ca":"#load saved pipeline and model\npreprocessor = joblib.load('..\/input\/titanic-mn\/titanic_preprocessor.joblib')\n\nmodel = joblib.load('..\/input\/titanic-mn\/titanic_model.joblib')","69feb60c":"X_test = preprocessor.transform(test[features])","9fa91805":"predictions = model.predict(X_test)","03328383":"test['Survived'] = predictions\ntest","c7e3174a":"output = pd.DataFrame({'PassengerId': test.index, 'Survived': predictions})","68ff351a":"output.to_csv('mn_titanic_submission.csv', index=False)","23a36721":"**Preprocessing**"}}