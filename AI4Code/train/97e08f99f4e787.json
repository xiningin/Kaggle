{"cell_type":{"a056625a":"code","c729dd8c":"code","7618eb85":"code","5c694f9a":"code","e4e072dc":"code","07392cfa":"code","566ddd0f":"code","b8cdddb8":"code","eda282ac":"code","15db4052":"code","4a9dbefb":"code","f6713614":"code","40868c81":"code","a373c291":"code","b91e7639":"code","38328737":"code","a0946be1":"code","54dcf58c":"code","bbad9fb2":"code","77ca5c2a":"code","87ce2471":"code","605081c7":"code","c01b4c22":"code","61d14f60":"code","84ca6095":"code","1dbd145f":"code","54701709":"code","279e3289":"code","053776e3":"code","efa4696a":"markdown","fb2a77f0":"markdown","74292871":"markdown","4d378533":"markdown","f12d0e8c":"markdown","26c20349":"markdown","79ce6087":"markdown","7ec8db54":"markdown","e489a16c":"markdown","a948eb7b":"markdown","3f45e4c0":"markdown","6b53aa3e":"markdown","f2e245b2":"markdown","0d87b1f0":"markdown","cc94af79":"markdown","9f21710a":"markdown","18d08196":"markdown","7f905c93":"markdown","5ad7a77f":"markdown","fe496b23":"markdown","8bd70bee":"markdown","e5adf0f4":"markdown","2a3a2586":"markdown","7cf95c35":"markdown","bebd27e4":"markdown","2801474c":"markdown"},"source":{"a056625a":"# loading in some libraries \n\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport folium \nimport plotly.express as px\n\n%matplotlib inline\n\n# Geopy is used to find geo-data of street addresses and states. \nimport geopy\nfrom geopy.geocoders import Nominatim\n\nimport warnings\nwarnings.filterwarnings('ignore')\n","c729dd8c":"#inputting the data \n\ndf_city = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/city_day.csv')\ndf_stations = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/station_day.csv')\nstations = pd.read_csv('..\/input\/air-quality-data-in-india\/stations.csv')\n","7618eb85":"print(df_city.info())\ndf_city.head()\n","5c694f9a":"print(df_stations.info())\n\ndf_stations.head()","e4e072dc":"print(stations.info())\n\nstations.head()","07392cfa":"df_stations = pd.merge(df_stations,stations,how = 'left')\ndf_stations.head()\n#That's better","566ddd0f":"df_city.isnull().sum().plot(kind ='bar')","b8cdddb8":"df_stations.isnull().sum().plot(kind ='bar')","eda282ac":"df_city['AQI'].fillna(method = 'ffill',inplace = True)\ndf_city['AQI'].fillna(method = 'bfill',inplace = True)\ndf_city['AQI'].fillna(value = 0,inplace = True)\n\n\ndf_stations['AQI'].fillna(method = 'ffill',inplace = True)\ndf_stations['AQI'].fillna(method = 'bfill',inplace = True)\ndf_stations['AQI'].fillna(value = 0,inplace = True)\n\n# df_stations['AQI_Bucket'].fillna('Not Provided',inplace = True)","15db4052":"\n# Finds the geo coordinates of the stations\ndef get_geo(station_address,city):\n    # getting just the street address from station_address\n    \n    street_address = ''\n    temp = station_address.split(',')\n    street_address = temp[:1]\n        \n    geolocator = Nominatim(user_agent=\"Shirazfromkaggle\")\n    location = geolocator.geocode(street_address)\n    \n    if location is None:\n        #If street level address cant be found, then just the city's coordinates should do\n        location = geolocator.geocode(city)\n        \n        if location is None :\n            #If the coordiantes of the city cant be found either, then return None.\n            location = [None,None]\n            return location\n    \n    return [location.latitude,location.longitude],street_address\n\n\n# Finds the street-level addresses of the stations \ndef get_address(station_address):\n    street_address = ''\n    temp = station_address.split()\n    for i in range (0,len(temp)):\n                    \n        street_address += temp[i]\n        if temp[i][-1] == ',':\n            street_address += (\" \"+temp[i+1])\n            break\n        else:\n            street_address+=' '\n    return street_address\n\n#Finds the AQI buckets from inputted AQI.\ndef get_AQI_bucket(x):\n    \n    # Here, x = AQI\n    if x <= 50:\n        return \"Good\"\n    elif x <= 100:\n        return \"Satisfactory\"\n    elif x <= 200:\n        return \"Moderate\"\n    elif x <= 300:\n        return \"Poor\"\n    elif x <= 400:\n        return \"Very Poor\"\n    elif x > 400:\n        return \"Severe\"\n    else:\n        return np.NaN","4a9dbefb":"import json \n\n# geojson for the choropleth map \n\nindia_states = json.load(open('..\/input\/geojson\/india_states.geojson','r'))\n\nstate_id_map = {}\n\nfor features in india_states['features']:\n    features['id'] = features['properties']['ID_1']\n    state_id_map[features['properties']['NAME_1']] = features['id']\n    \nstate_id_map","f6713614":"# def get_state(city):\n#     # getting just the state in which the city is present\n#     geolocator = Nominatim(user_agent=\"Shirazfromkaggle\")\n#     location = geolocator.geocode(city)\n    \n#     if location is None:\n#         return 'Nan'\n#     else:\n#         state = location.address.split(sep = ',')[-2]\n#         # location.address.split displays address as ['\u0b9a\u0bc6\u0ba9\u0bcd\u0ba9\u0bc8 - Chennai', ' Chennai district', ' Tamil Nadu', ' India']\n\n#         if state.lstrip().isdigit():\n#             state = location.address.split(sep = ',')[-3]\n        \n#         return state.lstrip()\n\n# l = df_city['City'].unique()\n\n# city_states ={}\n# for i in l:\n#     city_states[i] = get_state(i)\n# city_states\n# # df_city['state'] = df_city['City'].apply(get_state)\n# # df_city['state'].unique()","40868c81":"city_states = {'Ahmedabad': 'Gujarat',\n 'Aizawl': 'Mizoram',\n 'Amaravati': 'Andhra Pradesh',\n 'Amritsar': 'Punjab',\n 'Bengaluru': 'Karnataka',\n 'Bhopal': 'Madhya Pradesh',\n 'Brajrajnagar': 'Orissa',\n 'Chandigarh': 'Chandigarh',\n 'Chennai': 'Tamil Nadu',\n 'Coimbatore': 'Tamil Nadu',\n 'Delhi': 'Delhi',\n 'Ernakulam': 'Kerala',\n 'Gurugram': 'Haryana',\n 'Guwahati': 'Assam',\n 'Hyderabad': 'Andhra Pradesh',\n 'Jaipur': 'Rajasthan',\n 'Jorapokhar': 'Jharkhand',\n 'Kochi': 'Kerala',\n 'Kolkata': 'West Bengal',\n 'Lucknow': 'Uttar Pradesh',\n 'Mumbai': 'Maharashtra',\n 'Patna': 'Bihar',\n 'Shillong': 'Meghalaya',\n 'Talcher': 'Orissa',\n 'Thiruvananthapuram': 'Kerala',\n 'Visakhapatnam': 'Andhra Pradesh'}\n\nlocations = {'Adarsh Nagar, Jaipur - RSPCB': [26.8986698, 75.8163567],\n 'Alandur Bus Depot, Chennai - CPCB': [12.9938386, 80.1622219],\n 'Alipur, Delhi - DPCC': [28.7959955, 77.1360706],\n 'Anand Vihar, Delhi - DPCC': [28.6256914, 77.10194106560284],\n 'Ashok Vihar, Delhi - DPCC': [28.6994533, 77.1848256],\n 'Aya Nagar, Delhi - IMD': [28.47649105, 77.13291315925144],\n 'BTM Layout, Bengaluru - CPCB': [12.9151772, 77.6102821],\n 'BWSSB Kadabesanahalli, Bengaluru - CPCB': [12.9791198, 77.5912997],\n 'Ballygunge, Kolkata - WBPCB': [22.5258813, 88.3660468],\n 'Bandra, Mumbai - MPCB': [19.0549792, 72.8402203],\n 'Bapuji Nagar, Bengaluru - KSPCB': [12.9556699, 77.5402492],\n 'Bawana, Delhi - DPCC': [28.79966, 77.0328847],\n 'Bidhannagar, Kolkata - WBPCB': [22.58162035, 88.4523869411636],\n 'Bollaram Industrial Area, Hyderabad - TSPCB': [17.5026977, 78.3645689],\n 'Borivali East, Mumbai - MPCB': [19.2267228, 72.8619328],\n 'Burari Crossing, Delhi - IMD': [28.7285944, 77.1993251],\n 'CRRI Mathura Road, Delhi - IMD': [28.5500925, 77.2751557],\n 'Central School, Lucknow - CPCB': [26.8528761, 77.79518485076366],\n 'Central University, Hyderabad - TSPCB': [17.4031425, 78.45593431157263],\n 'Chhatrapati Shivaji Intl. Airport (T2), Mumbai - MPCB': [18.9387711,\n  72.8353355],\n 'City Railway Station, Bengaluru - KSPCB': [12.9791198, 77.5912997],\n 'Colaba, Mumbai - MPCB': [18.915091, 72.8259691],\n 'DRM Office Danapur, Patna - BSPCB': [25.6093239, 85.1235252],\n 'DTU, Delhi - CPCB': [28.7473272, 77.11568781182513],\n 'Dr. Karni Singh Shooting Range, Delhi - DPCC': [28.5000822,\n  77.26751472410736],\n 'Dwarka-Sector 8, Delhi - DPCC': [28.5656109, 77.0670366],\n 'East Arjun Nagar, Delhi - CPCB': [28.6569534, 77.2947178],\n 'Fort William, Kolkata - WBPCB': [22.55449655, 88.33801318408831],\n 'GM Office, Brajrajnagar - OSPCB': [20.296059, 85.824539],\n 'GVM Corporation, Visakhapatnam - APPCB': [17.7231276, 83.3012842],\n 'Golden Temple, Amritsar - PPCB': [31.61997565, 74.87654076032885],\n 'Gomti Nagar, Lucknow - UPPCB': [26.8528761, 80.9988505],\n 'Govt. High School Shikarpur, Patna - BSPCB': [25.6093239, 85.1235252],\n 'Hebbal, Bengaluru - KSPCB': [13.0382184, 77.5919],\n 'Hombegowda Nagar, Bengaluru - KSPCB': [12.9791198, 77.5912997],\n 'ICRISAT Patancheru, Hyderabad - TSPCB': [17.38878595, 78.46106473453146],\n 'IDA Pashamylaram, Hyderabad - TSPCB': [17.38878595, 78.46106473453146],\n 'IGI Airport (T3), Delhi - IMD': [28.55489735, 77.08467458266915],\n 'IGSC Planetarium Complex, Patna - BSPCB': [25.6093239, 85.1235252],\n 'IHBAS, Dilshad Garden, Delhi - CPCB': [28.6517178, 77.2219388],\n 'ITO, Delhi - CPCB': [28.6305091, 77.2414363],\n 'Jadavpur, Kolkata - WBPCB': [22.4951079, 88.3749813],\n 'Jahangirpuri, Delhi - DPCC': [28.7259717, 77.162658],\n 'Jawaharlal Nehru Stadium, Delhi - DPCC': [28.58337705, 77.23354040287734],\n 'Jayanagar 5th Block, Bengaluru - KSPCB': [12.9194605, 77.58332110317872],\n 'Kacheripady, Ernakulam - Kerala PCB': [9.9862208, 76.2831865],\n 'Kariavattom, Thiruvananthapuram - Kerala PCB': [8.5614821, 76.8829796],\n 'Kurla, Mumbai - MPCB': [19.0652797, 72.8793805],\n 'Lalbagh, Lucknow - CPCB': [26.7908341, 80.8701804],\n 'Lodhi Road, Delhi - IMD': [28.589461, 77.2128399],\n 'Lumpyngngad, Shillong - Meghalaya PCB': [25.5760446, 91.8825282],\n 'Major Dhyan Chand National Stadium, Delhi - DPCC': [28.612634200000002,\n  77.23733038046025],\n 'Manali Village, Chennai - TNPCB': [13.1672275, 80.2598107],\n 'Manali, Chennai - CPCB': [13.1672275, 80.2598107],\n 'Mandir Marg, Delhi - DPCC': [28.5246601, 77.216217],\n 'Maninagar, Ahmedabad - GPCB': [22.9977135, 72.6067174],\n 'Mundka, Delhi - DPCC': [28.6824341, 77.0305741],\n 'Muradpur, Patna - BSPCB': [28.1128875, 75.8935118],\n 'NISE Gwal Pahari, Gurugram - IMD': [28.4646148, 77.0299194],\n 'NSIT Dwarka, Delhi - CPCB': [28.6082819, 77.0350079],\n 'Najafgarh, Delhi - DPCC': [28.612304, 76.9823908],\n 'Narela, Delhi - DPCC': [28.8426096, 77.0918354],\n 'Nehru Nagar, Delhi - DPCC': [28.5685108, 77.2513847],\n 'Nishant Ganj, Lucknow - UPPCB': [26.8381, 80.9346001],\n 'North Campus, DU, Delhi - IMD': [32.8880156, -117.24108559234455],\n 'Okhla Phase-2, Delhi - DPCC': [28.5366138, 77.2756197],\n 'Patparganj, Delhi - DPCC': [28.6115923, 77.2905644],\n 'Peenya, Bengaluru - CPCB': [13.0329419, 77.5273253],\n 'Plammoodu, Thiruvananthapuram - Kerala PCB': [8.5241122, 76.9360573],\n 'Police Commissionerate, Jaipur - RSPCB': [26.916194, 75.820349],\n 'Powai, Mumbai - MPCB': [19.1187195, 72.9073476],\n 'Punjabi Bagh, Delhi - DPCC': [28.668945, 77.1324614],\n 'Pusa, Delhi - DPCC': [28.641230399999998, 77.1742940078465],\n 'Pusa, Delhi - IMD': [28.641230399999998, 77.1742940078465],\n 'R K Puram, Delhi - DPCC': [28.5503864, 77.1855171],\n 'Rabindra Bharati University, Kolkata - WBPCB': [22.62696605,\n  88.38049809655342],\n 'Rabindra Sarobar, Kolkata - WBPCB': [22.51226105, 88.36383105710377],\n 'Railway Colony, Guwahati - APCB': [26.1808827, 91.7824864],\n 'Rajbansi Nagar, Patna - BSPCB': [25.6093239, 85.1235252],\n 'Rohini, Delhi - DPCC': [28.7162092, 77.1170743],\n 'SIDCO Kurichi, Coimbatore - TNPCB': [11.0018115, 76.9628425],\n 'Samanpura, Patna - BSPCB': [25.6093239, 85.1235252],\n 'Sanathnagar, Hyderabad - TSPCB': [17.4569654, 78.4434780636594],\n 'Sanegurava Halli, Bengaluru - KSPCB': [12.9791198, 77.5912997],\n 'Secretariat, Amaravati - APPCB': [16.5134691, 80.517227],\n 'Sector-25, Chandigarh - CPCC': [30.7516466, 76.7567324],\n 'Sector-51, Gurugram - HSPCB': [28.4287011, 77.0666877],\n 'Shadipur, Delhi - CPCB': [28.6516362, 77.1582947],\n 'Shastri Nagar, Jaipur - RSPCB': [25.787581, -100.4685005],\n 'Sikulpuikawn, Aizawl - Mizoram PCB': [23.7414092, 92.7209297],\n 'Silk Board, Bengaluru - KSPCB': [12.9167139, 77.6214094],\n 'Sion, Mumbai - MPCB': [19.0465213, 72.8632834],\n 'Sirifort, Delhi - CPCB': [28.6517178, 77.2219388],\n 'Sonia Vihar, Delhi - DPCC': [28.7199257, 77.2481823],\n 'Sri Aurobindo Marg, Delhi - DPCC': [28.5396291, 77.2000301],\n 'T T Nagar, Bhopal - MPPCB': [23.2286993, 77.4002881],\n 'Talcher Coalfields,Talcher - OSPCB': [20.9458183, 85.2111736],\n 'Talkatora District Industries Center, Lucknow - CPCB': [26.8381, 80.9346001],\n 'Tata Stadium, Jorapokhar - JSPCB': [23.7167069, 86.4110166],\n 'Teri Gram, Gurugram - HSPCB': [28.35117845, 77.06446614772139],\n 'Vasai West, Mumbai - MPCB': [19.3849292, 72.897546],\n 'Velachery Res. Area, Chennai - CPCB': [12.980165450000001,\n  80.22285056225584],\n 'Victoria, Kolkata - WBPCB': [22.54978375, 88.33911363126559],\n 'Vikas Sadan, Gurugram - HSPCB': [28.4646148, 77.0299194],\n 'Vile Parle West, Mumbai - MPCB': [19.1038725, 72.8402903],\n 'Vivek Vihar, Delhi - DPCC': [28.6691641, 77.31226695421603],\n 'Vyttila, Kochi - Kerala PCB': [9.9701655, 76.3180562],\n 'Wazirpur, Delhi - DPCC': [28.680084299999997, 77.17022123990277],\n 'Worli, Mumbai - MPCB': [19.0116962, 72.8180702],\n 'Zoo Park, Hyderabad - TSPCB': [25.3841041, 68.3413739]}\n\n\nstreet_address = {'Adarsh Nagar, Jaipur - RSPCB': 'Adarsh Nagar, Jaipur', 'Alandur Bus Depot, Chennai - CPCB': 'Alandur Bus Depot, Chennai', 'Alipur, Delhi - DPCC': 'Alipur, Delhi', 'Anand Vihar, Delhi - DPCC': 'Anand Vihar, Delhi', 'Ashok Vihar, Delhi - DPCC': 'Ashok Vihar, Delhi', 'Aya Nagar, Delhi - IMD': 'Aya Nagar, Delhi', 'BTM Layout, Bengaluru - CPCB': 'BTM Layout, Bengaluru', 'BWSSB Kadabesanahalli, Bengaluru - CPCB': 'BWSSB Kadabesanahalli, Bengaluru', 'Ballygunge, Kolkata - WBPCB': 'Ballygunge, Kolkata', 'Bandra, Mumbai - MPCB': 'Bandra, Mumbai', 'Bapuji Nagar, Bengaluru - KSPCB': 'Bapuji Nagar, Bengaluru', 'Bawana, Delhi - DPCC': 'Bawana, Delhi', 'Bidhannagar, Kolkata - WBPCB': 'Bidhannagar, Kolkata', 'Bollaram Industrial Area, Hyderabad - TSPCB': 'Bollaram Industrial Area, Hyderabad', 'Borivali East, Mumbai - MPCB': 'Borivali East, Mumbai', 'Burari Crossing, Delhi - IMD': 'Burari Crossing, Delhi', 'CRRI Mathura Road, Delhi - IMD': 'CRRI Mathura Road, Delhi', 'Central School, Lucknow - CPCB': 'Central School, Lucknow', 'Central University, Hyderabad - TSPCB': 'Central University, Hyderabad', 'Chhatrapati Shivaji Intl. Airport (T2), Mumbai - MPCB': 'Chhatrapati Shivaji Intl. Airport (T2), Mumbai', 'City Railway Station, Bengaluru - KSPCB': 'City Railway Station, Bengaluru', 'Colaba, Mumbai - MPCB': 'Colaba, Mumbai', 'DRM Office Danapur, Patna - BSPCB': 'DRM Office Danapur, Patna', 'DTU, Delhi - CPCB': 'DTU, Delhi', 'Dr. Karni Singh Shooting Range, Delhi - DPCC': 'Dr. Karni Singh Shooting Range, Delhi', 'Dwarka-Sector 8, Delhi - DPCC': 'Dwarka-Sector 8, Delhi', 'East Arjun Nagar, Delhi - CPCB': 'East Arjun Nagar, Delhi', 'Fort William, Kolkata - WBPCB': 'Fort William, Kolkata', 'GM Office, Brajrajnagar - OSPCB': 'GM Office, Brajrajnagar', 'GVM Corporation, Visakhapatnam - APPCB': 'GVM Corporation, Visakhapatnam', 'Golden Temple, Amritsar - PPCB': 'Golden Temple, Amritsar', 'Gomti Nagar, Lucknow - UPPCB': 'Gomti Nagar, Lucknow', 'Govt. High School Shikarpur, Patna - BSPCB': 'Govt. High School Shikarpur, Patna', 'Hebbal, Bengaluru - KSPCB': 'Hebbal, Bengaluru', 'Hombegowda Nagar, Bengaluru - KSPCB': 'Hombegowda Nagar, Bengaluru', 'ICRISAT Patancheru, Hyderabad - TSPCB': 'ICRISAT Patancheru, Hyderabad', 'IDA Pashamylaram, Hyderabad - TSPCB': 'IDA Pashamylaram, Hyderabad', 'IGI Airport (T3), Delhi - IMD': 'IGI Airport (T3), Delhi', 'IGSC Planetarium Complex, Patna - BSPCB': 'IGSC Planetarium Complex, Patna', 'IHBAS, Dilshad Garden, Delhi - CPCB': 'IHBAS, Dilshad', 'ITO, Delhi - CPCB': 'ITO, Delhi', 'Jadavpur, Kolkata - WBPCB': 'Jadavpur, Kolkata', 'Jahangirpuri, Delhi - DPCC': 'Jahangirpuri, Delhi', 'Jawaharlal Nehru Stadium, Delhi - DPCC': 'Jawaharlal Nehru Stadium, Delhi', 'Jayanagar 5th Block, Bengaluru - KSPCB': 'Jayanagar 5th Block, Bengaluru', 'Kacheripady, Ernakulam - Kerala PCB': 'Kacheripady, Ernakulam', 'Kariavattom, Thiruvananthapuram - Kerala PCB': 'Kariavattom, Thiruvananthapuram', 'Kurla, Mumbai - MPCB': 'Kurla, Mumbai', 'Lalbagh, Lucknow - CPCB': 'Lalbagh, Lucknow', 'Lodhi Road, Delhi - IMD': 'Lodhi Road, Delhi', 'Lumpyngngad, Shillong - Meghalaya PCB': 'Lumpyngngad, Shillong', 'Major Dhyan Chand National Stadium, Delhi - DPCC': 'Major Dhyan Chand National Stadium, Delhi', 'Manali Village, Chennai - TNPCB': 'Manali Village, Chennai', 'Manali, Chennai - CPCB': 'Manali, Chennai', 'Mandir Marg, Delhi - DPCC': 'Mandir Marg, Delhi', 'Maninagar, Ahmedabad - GPCB': 'Maninagar, Ahmedabad', 'Mundka, Delhi - DPCC': 'Mundka, Delhi', 'Muradpur, Patna - BSPCB': 'Muradpur, Patna', 'NISE Gwal Pahari, Gurugram - IMD': 'NISE Gwal Pahari, Gurugram', 'NSIT Dwarka, Delhi - CPCB': 'NSIT Dwarka, Delhi', 'Najafgarh, Delhi - DPCC': 'Najafgarh, Delhi', 'Narela, Delhi - DPCC': 'Narela, Delhi', 'Nehru Nagar, Delhi - DPCC': 'Nehru Nagar, Delhi', 'Nishant Ganj, Lucknow - UPPCB': 'Nishant Ganj, Lucknow', 'North Campus, DU, Delhi - IMD': 'North Campus, DU,', 'Okhla Phase-2, Delhi - DPCC': 'Okhla Phase-2, Delhi', 'Patparganj, Delhi - DPCC': 'Patparganj, Delhi', 'Peenya, Bengaluru - CPCB': 'Peenya, Bengaluru', 'Plammoodu, Thiruvananthapuram - Kerala PCB': 'Plammoodu, Thiruvananthapuram', 'Police Commissionerate, Jaipur - RSPCB': 'Police Commissionerate, Jaipur', 'Powai, Mumbai - MPCB': 'Powai, Mumbai', 'Punjabi Bagh, Delhi - DPCC': 'Punjabi Bagh, Delhi', 'Pusa, Delhi - DPCC': 'Pusa, Delhi', 'Pusa, Delhi - IMD': 'Pusa, Delhi', 'R K Puram, Delhi - DPCC': 'R K Puram, Delhi', 'Rabindra Bharati University, Kolkata - WBPCB': 'Rabindra Bharati University, Kolkata', 'Rabindra Sarobar, Kolkata - WBPCB': 'Rabindra Sarobar, Kolkata', 'Railway Colony, Guwahati - APCB': 'Railway Colony, Guwahati', 'Rajbansi Nagar, Patna - BSPCB': 'Rajbansi Nagar, Patna', 'Rohini, Delhi - DPCC': 'Rohini, Delhi', 'SIDCO Kurichi, Coimbatore - TNPCB': 'SIDCO Kurichi, Coimbatore', 'Samanpura, Patna - BSPCB': 'Samanpura, Patna', 'Sanathnagar, Hyderabad - TSPCB': 'Sanathnagar, Hyderabad', 'Sanegurava Halli, Bengaluru - KSPCB': 'Sanegurava Halli, Bengaluru', 'Secretariat, Amaravati - APPCB': 'Secretariat, Amaravati', 'Sector-25, Chandigarh - CPCC': 'Sector-25, Chandigarh', 'Sector-51, Gurugram - HSPCB': 'Sector-51, Gurugram', 'Shadipur, Delhi - CPCB': 'Shadipur, Delhi', 'Shastri Nagar, Jaipur - RSPCB': 'Shastri Nagar, Jaipur', 'Sikulpuikawn, Aizawl - Mizoram PCB': 'Sikulpuikawn, Aizawl', 'Silk Board, Bengaluru - KSPCB': 'Silk Board, Bengaluru', 'Sion, Mumbai - MPCB': 'Sion, Mumbai', 'Sirifort, Delhi - CPCB': 'Sirifort, Delhi', 'Sonia Vihar, Delhi - DPCC': 'Sonia Vihar, Delhi', 'Sri Aurobindo Marg, Delhi - DPCC': 'Sri Aurobindo Marg, Delhi', 'T T Nagar, Bhopal - MPPCB': 'T T Nagar, Bhopal', 'Talcher Coalfields,Talcher - OSPCB': 'Talcher Coalfields,Talcher - OSPCB ', 'Talkatora District Industries Center, Lucknow - CPCB': 'Talkatora District Industries Center, Lucknow', 'Tata Stadium, Jorapokhar - JSPCB': 'Tata Stadium, Jorapokhar', 'Teri Gram, Gurugram - HSPCB': 'Teri Gram, Gurugram', 'Vasai West, Mumbai - MPCB': 'Vasai West, Mumbai', 'Velachery Res. Area, Chennai - CPCB': 'Velachery Res. Area, Chennai', 'Victoria, Kolkata - WBPCB': 'Victoria, Kolkata', 'Vikas Sadan, Gurugram - HSPCB': 'Vikas Sadan, Gurugram', 'Vile Parle West, Mumbai - MPCB': 'Vile Parle West, Mumbai', 'Vivek Vihar, Delhi - DPCC': 'Vivek Vihar, Delhi', 'Vyttila, Kochi - Kerala PCB': 'Vyttila, Kochi', 'Wazirpur, Delhi - DPCC': 'Wazirpur, Delhi', 'Worli, Mumbai - MPCB': 'Worli, Mumbai', 'Zoo Park, Hyderabad - TSPCB': 'Zoo Park, Hyderabad'}","a373c291":"#adding states and state ID to df_city\n\ndf_city['State'] = df_city['City'].apply(lambda x: city_states[x])\ndf_city['State_ID'] = df_city['State'].apply(lambda x: state_id_map[x])\n\ndf_stations['street address'] = df_stations['StationName'].apply(lambda x: street_address[x])\ndf_stations['latitude'] = df_stations['StationName'].apply(lambda x: locations[x][0])\ndf_stations['longitude'] = df_stations['StationName'].apply(lambda x: locations[x][1])\n\ndf_stations['AQI_Bucket'] = df_stations['AQI'].apply(get_AQI_bucket)","b91e7639":"# locations = {}\n# street_address ={}\n# stations = df_stations.groupby('StationName').City.max()\n\n# for i in range(0,len(stations)):\n#     print(i)\n#     locations[stations.index[i]] = get_geo(stations.index[i],stations[i])\n#     street_address[stations.index[i]] = get_address(stations.index[i])\n    \n# # print(locations)\n# print(street_address)","38328737":"map_data = df_city[['Date','City','AQI','State','State_ID']]\nmap_data['Date'] = pd.to_datetime(map_data['Date'])\n\nmap_data = map_data.set_index('Date')\nmap_data = map_data.loc['2019-11-07']\nmap_data.reset_index(drop= False,inplace = True)\nmap_data['Date'] = map_data['Date'].apply(lambda x: x.strftime('%m\/%d\/%y'))","a0946be1":"indiamap = px.choropleth(data_frame = map_data,locations = 'State_ID', geojson = india_states,\n                         color = 'AQI',hover_name = 'State',hover_data = {'AQI':True,'State_ID':False,'Date':True},\n                         color_continuous_scale=px.colors.sequential.RdBu_r)\nindiamap.update_geos(fitbounds = 'locations',visible = False)\n\n# indiamap.update_layout(\n#     title_text = 'State-wise AQI',\n#     title_x = 0.5,\n#     geo=dict(\n#         showframe = False,\n#         showcoastlines = False,\n#     ))\n\nindiamap.show()","54dcf58c":"city_aqi_data = df_city[['City','AQI',\"Date\"]]\n\nlatest_station_report = df_stations[df_stations['Date'] == '2020-07-01'].reset_index(drop = True)\n\nindia_map = folium.Map(location = [21, 78],zoom_start = 5.4,tiles =  'CartoDB positron',max_zoom = 15,min_zoom = 5)\ncolor_dict = {'Satisfactory':'Green', 'Good':\"light blue\", 'Moderate':\"Orange\", 'Not Provided' :\"white\", 'Poor':\"Red\",'Very Poor':'Maroon','Severe':'Purple'}\n\nfor i in range(0,len(latest_station_report)):\n    folium.Circle(location  = [latest_station_report['latitude'][i],latest_station_report['longitude'][i]],\n                  tooltip =\"<h5 style = 'text-align:center; font-weight:bold'>\" +\"Station Name:\"+\"<\/h5>\"+ str(latest_station_report['street address'][i])+\\\n                  \"<h5 style = 'text-align:center; font-weight:bold'>\"+ '\\n\\n AQI:' + str(latest_station_report['AQI'][i]),\n                 radius = 10000, color = color_dict[latest_station_report['AQI_Bucket'][i]],\n                 fill_color = color_dict[latest_station_report['AQI_Bucket'][i]],fill = True).add_to(india_map)\n    \nindia_map","bbad9fb2":"city_mean_aqi = df_city.groupby('City')['AQI'].mean()\ncity_mean_aqi  = pd.DataFrame(city_mean_aqi)\ncity_mean_aqi['AQI_Bucket'] = city_mean_aqi['AQI'].apply(get_AQI_bucket)\ncity_mean_aqi['AQI'] = round(city_mean_aqi['AQI'],2)\ncity_mean_aqi.reset_index(drop = False, inplace = True)\n\n# d = dict(city_data[['City','AQI_Bucket']])\n\nstate_aqi_buckets ={'Ahmedabad': 'Severe',\n 'Aizawl': 'Good',\n 'Amaravati': 'Satisfactory',\n 'Amritsar': 'Moderate',\n 'Bengaluru': 'Satisfactory',\n 'Bhopal': 'Moderate',\n 'Brajrajnagar': 'Moderate',\n 'Chandigarh': 'Satisfactory',\n 'Chennai': 'Moderate',\n 'Coimbatore': 'Satisfactory',\n 'Delhi': 'Poor',\n 'Ernakulam': 'Satisfactory',\n 'Gurugram': 'Moderate',\n 'Guwahati': 'Moderate',\n 'Hyderabad': 'Moderate',\n 'Jaipur': 'Moderate',\n 'Jorapokhar': 'Moderate',\n 'Kochi': 'Moderate',\n 'Kolkata': 'Moderate',\n 'Lucknow': 'Poor',\n 'Mumbai': 'Good',\n 'Patna': 'Moderate',\n 'Shillong': 'Good',\n 'Talcher': 'Moderate',\n 'Thiruvananthapuram': 'Satisfactory',\n 'Visakhapatnam': 'Satisfactory'}\n","77ca5c2a":"city_aqi_data = df_city[['City','AQI',\"Date\"]]\ncity_aqi_data['Average AQI Bucket'] = city_aqi_data['City'].apply(lambda x: state_aqi_buckets[x])\n\n\nfig1 = px.box(data_frame= city_aqi_data, x = 'City', y = 'AQI',\n       template = 'ggplot2',color = 'Average AQI Bucket', color_discrete_sequence= [\"black\", \"green\", \"orange\", \"blue\",\"red\"],\n       hover_name = 'AQI',hover_data = {'AQI':False,'Date':True,'City':False},title = \"State-wise AQI Spread (from 2015 to Present) \",\n       labels = {'City':\"\"})\n\nfig1.update_layout(xaxis={'categoryorder':'category ascending'})\n\n# X-----------------------------------------------------------X\n\nfig2 = px.sunburst(data_frame= city_mean_aqi , path = city_mean_aqi[['AQI_Bucket','City']],template = 'ggplot2',\n                   color = city_mean_aqi['AQI_Bucket'], color_discrete_sequence = [\"lightgreen\", \"lightblue\", \"red\", \"yellow\",\"black\"],\n                   hover_data = {'AQI_Bucket':False,'AQI': True}, hover_name = 'AQI', title = 'Average AQI (between 2015 and present) and AQI buckets',\n                  labels = {'AQI':\"Average AQI\"})\n\nfig2.update_layout(title = {'text':'State-wise Average AQI (between 2015 and Present)','y':0.95,'x':0.5,'xanchor':'center'})\n\n\n# X-------------------------------------------------------------X\n\nfig1.show()\nfig2.show()","87ce2471":"all_india = df_city.groupby('Date')\n\nmean_national_aqi = all_india['AQI'].mean().reset_index()\nmean_national_aqi_bucket=[]\nmean_national_aqi['AQI'] = round(mean_national_aqi['AQI'],2)\n\ndates =  pd.to_datetime(mean_national_aqi['Date'].values)\nmean_national_aqi['Date'] = dates.strftime(\"%m\/%d\")\nyears = dates.year\nmean_national_aqi['year'] = years\n\n# months = dates.month\n# days =dates.day\n\nfor i in mean_national_aqi['AQI']:\n   mean_national_aqi_bucket.append(get_AQI_bucket(i))\n\n# mean_national_aqi['year'] = years\n\n\n\nfig= px.bar(data_frame =mean_national_aqi,x = mean_national_aqi['Date'],\n           y = (mean_national_aqi['AQI']),\n           template = 'ggplot2',color = mean_national_aqi_bucket,\n           color_discrete_sequence = [\"blue\", \"red\", \"orange\", \"maroon\",\"black\"],\n           title = \"India's Quality of Air since 2015\",hover_name = mean_national_aqi['AQI'],\n           labels = {'color':'AQI_Bucket ','value':'AQI'},facet_row = 'year',height = 1500)\n\nfig.update_layout(xaxis={'categoryorder':'category ascending'})\n\n\nfig.update_yaxes(matches=None)\nfig.update_xaxes(matches ='x')\nfig.show()","605081c7":"dates = pd.to_datetime(df_city['Date'].values)\ndf_city['month'] = dates.month\ndf_city['month_name'] = dates.month_name()\n\naqi_month = df_city.groupby(['month','month_name'])['AQI'].mean().reset_index()\naqi_month['AQI'] = round(aqi_month['AQI'],2)\naverage = aqi_month['AQI'].mean()\n\npx.bar(data_frame= aqi_month, x = aqi_month['month_name'], y = (aqi_month['AQI'].values - average) ,color = 'AQI',\n       color_continuous_scale=px.colors.sequential.Bluered,title = 'The Average AQI of India: ' + str(round(average,2)) +\" (from 2015 to present)\",\n       template = 'ggplot2',labels = {'y':'Monthly Variance in AQI from Average ','month_name':''},hover_data={'month_name':False},width = 750,height = 500)","c01b4c22":"df_city['AQI_Bucket'] = df_city['AQI'].apply(lambda x: get_AQI_bucket(x))\ndelhi =  df_city[df_city['City'] == 'Delhi']\n\ndates = pd.to_datetime(delhi['Date'].values)\ndelhi['Date'] = dates.strftime(\"%m\/%d\")\nyears = dates.year\ndelhi['year'] = years\n\n\ndelhi.set_index('year',inplace = True)\ndelhi = delhi.loc['2015':'2019']\ndelhi.reset_index(inplace = True,)\n\n\n\n\nfig= px.bar(data_frame= delhi, x ='Date' ,y = 'AQI', template = 'ggplot2',color = delhi['AQI_Bucket'],\n       color_discrete_sequence =[\"Black\", \"Blue\", \"Maroon\", \"Red\",\"yellow\",'lightgreen'],\n           title = \"Delhi's Quality of Air since 2015\",hover_name = 'AQI_Bucket',facet_row = 'year',height = 1500)\n\nfig.update_layout(xaxis={'categoryorder':'category ascending'})\n\nfig.show()","61d14f60":"delhi =  df_city[df_city['City'] == 'Delhi']\n\ndates = pd.to_datetime(delhi['Date'].values)\ndelhi['month'] = dates.month\ndelhi['month_name'] = dates.month_name()\n\naqi_month = delhi.groupby(['month','month_name'])['AQI'].mean().reset_index()\naqi_month['AQI'] = round(aqi_month['AQI'],2)\naverage = round(aqi_month['AQI'].mean(),2)\n\npx.bar(data_frame= aqi_month, x = aqi_month['month_name'], y = (aqi_month['AQI'].values - average) ,color = 'AQI',\n       color_continuous_scale=px.colors.sequential.Bluered,template = 'ggplot2',\n      labels = {'y':'Monthly Variance in AQI from the Average','month_name':''},hover_name = aqi_month['month_name'],\n      hover_data={'month_name':False},title = ' Average AQI of Delhi: '+str(average),width = 750,height = 500)","84ca6095":"from fbprophet import Prophet \n\ndelhi_aqi = delhi[['Date','AQI']]\ndelhi_aqi.reset_index(inplace = True,drop = True)\n\ntrain_df = delhi_aqi\ntrain_df.rename(mapper = {'Date':'ds','AQI':'y'},axis =1,inplace = True)\ntrain_df\n\nm = Prophet(holidays_prior_scale=0,seasonality_prior_scale=20,n_changepoints= 50,)\nm.fit(train_df)","1dbd145f":"future = m.make_future_dataframe(periods=365)\nfuture.tail()","54701709":"forecast = m.predict(future)\nforecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()","279e3289":"from fbprophet.diagnostics import mape,cross_validation,performance_metrics\ndf_cv = cross_validation(m, initial='1100 days', period='121 days', horizon = '365 days')\ndf_p = performance_metrics(df_cv)\nprint('Cross Validation accuracy:', (1 - df_p['mape'].mean())*100)","053776e3":"from fbprophet.plot import plot_plotly, plot_components_plotly\n\nfig = plot_plotly(m, forecast ,xlabel = 'Date',ylabel= 'AQI',figsize=(1000,750))\n\nfig.show()","efa4696a":"# How does one quantify AQI?","fb2a77f0":"'df_city' gives us city-level data of pollutants and their AQI levels. 'df_stations' gives us updates from different weather stations and 'stations' gives info about these stations.\n\nIt  would make sense to merge 'df_stations' with 'stations'. ","74292871":"Let's take a look at the AQI of a random week of data provided which is **24\/6\/2020 to 1\/07\/2020.**","4d378533":"There's a lot of missing Data in both dataframes. Let's try to fill in some data where possible.","f12d0e8c":"# Predicting The AQI","26c20349":"It's clear to see the rapid spike in AQI from November to February in this bar graph. Let's see if the capital city experiences the same trend.","79ce6087":"* An air quality index (AQI) is used by government agencies to communicate to the public how polluted the air currently is or how polluted it is forecast to become. Public health risks increase as the AQI rises. The AQI of India is determined by monitoring ground-level ozone, particulates, sulfur dioxide, carbon monoxide and nitrogen dioxide, and other pollutants.\n\n* In this notebook, I aim to visualize the AQI of different states and their change over time. We may understand pollution in India better by finding a pattern in the data.","7ec8db54":"**Insights made:**\n\n1. AQI changes sporadically from day to day.\n2. AQI varies a lot in day even between neighboring stations.\n3. Some states pollute much more than others.\n\nLet's explore these points further-","e489a16c":"# Breaking down the data - Statewise","a948eb7b":"# Visualizing Data - Maps","3f45e4c0":"Here's a look of the AQIs on **July 1 2020**, at the different weather stations of India.","6b53aa3e":"# Filling in Missing Data","f2e245b2":"**Delhi and Lucknow** have consistently poor grade AQI. **Ahmedabad** appears to have very severe AQI but the data available for the city is very little. That's why its average AQI is so high. \n\nOn the other hand, a majority of states are present in the Satisfactory and Moderate categories. Feel free to click on each category in the sunburst to view individual categories.\nLet's see how the national AQI has faired over the years.","0d87b1f0":"* The model picked up on the seasonal trend between November to February \n\n* The model is producing lower values of AQI for the year 2020. Probably considering the lower than normal AQI of the first few months of 2020 because of the quarantine. ","cc94af79":"# Taking a look at the data","9f21710a":"![image](http:\/\/www.indiatogether.org\/uploads\/picture\/image\/2590\/IT_airquality.png))","18d08196":"* The nation's AQI seems to peak between the months of **November - February** almost consistently every year. This coincides with when India has its monsoon season. \n\n* A quick lookup on this peculiar trend produces [this article](https:\/\/scroll.in\/article\/886776\/indian-monsoon-cleans-pollution-at-home-but-spreads-it-to-other-parts-of-the-world-finds-a-study). It explains how the monsoon may cause pollution to be sucked into the air over subcontinent in an 'anti-cyclone', thus **worsening the quality of air** in the rainy seasons.\n\n* Delhi is the most densely packed city in the nation and it experiences consistent smogs and haziness over the very same months.\n\n* It's interesting to note the decrease in AQI over **March 2020 - June 2020.** May be the lockdown was just what we needed to control air pollution?","7f905c93":"I used geopy to find the longitudes and latitudes as well as street level addresses of the weather stations. However,I'm commenting the functions I've used in interest of saving time to compile. The geo data has been saved as dictionaries that you can find below.","5ad7a77f":"With an average yearly AQI of 258, Delhi is almost consistently in the 'Poor' AQI level.","fe496b23":"The AQI of India seems to vary sporadically between local regions but,as we saw, possesses a seasonal rally trend in the monsoon. For this reason, **FBProphet** was chosen as it has excellent seasonality learning capabilities in time-series analaysis.","8bd70bee":"AQI is categorized into different categories as shown below.","e5adf0f4":"# Trend Spotting","2a3a2586":"# Defining Functions","7cf95c35":"Air pollution is a by-product of our lavish lifestyle. With more accessibility comes more dangers to the environment. By everyone doing their part to reduce their carbon-footprint at the individual level, we can tackle this threat to our planet. \n\nThanks for reading this notebook. Any comments and suggestions are welcome.","bebd27e4":"* Delhi experiences **Severe** AQI levels in the monsoon season consistently. It's a yearly health hazard for children and the elderly.\n\n* [This report](https:\/\/qz.com\/india\/1448666\/delhis-location-is-the-reason-it-suffers-smog-every-winter\/) explains the unfortunate geography of Delhi that does not allow the city's pollution to cleanse quickly. \n\n* Conditions were so bad in the first week of November 2017, that this period is referred to as **'The Great Smog of Delhi'**.","2801474c":"# What is AQI?"}}