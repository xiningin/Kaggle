{"cell_type":{"9d3f9b1f":"code","f544ba23":"code","1314edfc":"code","3cdaf209":"code","b280b4f0":"code","6199cb96":"code","0ebb450f":"code","de0f8d36":"code","80f350c8":"code","7b61c286":"code","6bb89306":"code","06f1e314":"code","2f8d5ca1":"code","6514720e":"code","fe88aa7f":"code","49c48cd3":"code","145cddad":"code","c6d41ddd":"code","53850b32":"code","3a87cc25":"code","97d1f800":"code","15032234":"code","e2dad497":"code","41faa9b9":"code","132acbb9":"code","e3dbc9bb":"code","1008ab8c":"code","2c4504f5":"code","5b97f7fd":"code","278cf29b":"code","0b31826f":"markdown","9e604621":"markdown","e25557de":"markdown","ade6ba42":"markdown","e9c907f2":"markdown","bb5d26b3":"markdown","f45df5ef":"markdown","49f43ecc":"markdown","88ce6d39":"markdown","06e03e34":"markdown"},"source":{"9d3f9b1f":"import re\nimport json\nimport math\nimport pprint\nimport requests\n# import pandas_profiling\nfrom scipy.stats import zscore\nfrom collections import defaultdict\nfrom urllib.request import urlopen, Request\n\nimport numpy as np\nimport pandas as pd\n# plotting stuff\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\ncolorMap = sns.light_palette(\"blue\", as_cmap=True)\nimport datatable as dt\n# misc\nimport missingno as msno\n# system\nimport warnings\nwarnings.filterwarnings('ignore')\n# garbage collector to keep RAM in check\nimport gc  \nimport matplotlib.gridspec as gridspec\n\n\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","f544ba23":"# Loading data\n\nfilename = \"\/kaggle\/input\/zameencom-property-data-pakistan\/Property_with_Feature_Engineering.csv\"\n# Making the Data Global\nglobal data\ndata = pd.read_csv(filename, sep = ',')\ndata.head(5)","1314edfc":"# Removing Outliers based on Price\nz = np.abs(zscore(data['price']))\nthresh = 3\noutliers_indices = np.where(z > thresh)","3cdaf209":"# Printing Outliers\nprint(\"Number of Outliers:\", len(outliers_indices[0]), \"with Threshold:\", thresh)\noutliers_data = data.iloc[list(set(outliers_indices[0]))]","b280b4f0":"# Removing the Outliers from Data\ndata.drop(labels = list(set(outliers_indices[0])), inplace = True)","6199cb96":"outliers_data.shape","0ebb450f":"# Converts Exponent to Float\ndef exp_to_float(num):\n    s = str(num)\n    if s.find(\"e+\") >= 0:\n        n, e = s.split('e+')\n        n_e = float(n) * (10 ** int(e))\n        return n_e\n    else:\n        return num","de0f8d36":"# Converts Pivot Tables' Indices to Labels for X-axis on Graph\ndef index_to_date(indices):\n    labels = []\n    for i in range(len(indices.codes[0])):\n        label = str(indices.levels[0][indices.codes[0][i]]) + '-' + str(indices.codes[1][i] + 1)\n        labels.append(label)\n    return labels","80f350c8":"# Calculates and Adds Rate of Change for all the Columns in the Pivot Table given Length of the whole Data.\ndef rates_of_change(pivot_table):\n    length = len(pivot_table)\n    \n    # For all Columns\n    for column in list(pivot_table.columns):\n        \n        # Calculating Rates of Change\n        rates = [0] * (length - 1)\n        for i in range(length - 1):\n            rates[i] = round((((pivot_table[column].values[i + 1] - pivot_table[column].values[i]) \/ pivot_table[column].values[i]) * 100), 2)\n            #print(pivot_table.get_value(i,column)\n                  \n        # Adding Rates of Change to Pivot Table\n        pivot_table.insert(pivot_table.columns.get_loc(column) + 1, ('rate_of_change_' + column), ([np.nan] + rates), allow_duplicates=True)\n    \n    cols = list(pivot_table.columns)\n    num_cols = len(cols)\n    \n    # Plotting the Results\n    fig, axs = plt.subplots(num_cols \/\/ 2, 2,figsize=(15, int(num_cols * 2.5)))\n    x_ticks = index_to_date(pivot_table.index)\n    plt.setp(axs, xticks = range(len(x_ticks)), xticklabels = x_ticks)\n    \n    for i in range(num_cols):\n        axs[i \/\/ 2, i % 2].plot(pivot_table[str(cols[i])].values, label = str(cols[i]))\n        axs[i \/\/ 2, i % 2].legend(loc = 0)\n        axs[i \/\/ 2, i % 2].grid()\n        axs[i \/\/ 2, i % 2].tick_params(labelrotation=45)\n    \n    return pivot_table","7b61c286":"# For Purpose\nrate_of_change_wrt_purpose = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['purpose'], aggfunc = 'mean')\n#rates_of_change(rate_of_change_wrt_purpose)\n\nrates_of_change(rate_of_change_wrt_purpose)","6bb89306":"# For Type\nrate_of_change_wrt_type = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['property_type'], aggfunc = 'mean')\nrates_of_change(rate_of_change_wrt_type)","06f1e314":"# For City\nrate_of_change_wrt_city = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['city'], aggfunc = 'mean')\nrates_of_change(rate_of_change_wrt_city)","2f8d5ca1":"# Calculates and Adds Rate of Change for all the Columns in the Pivot Table given Length of the whole Data.\ndef moving_averages(pivot_table, window_size = 3):\n    length = len(pivot_table)\n    \n    # For all Columns\n    for column in list(pivot_table.columns):\n        # Adding Moving Averages to Pivot Table\n        moving_avgs = pivot_table[str(column)].rolling(window_size).mean().shift(-1)\n        pivot_table.insert(pivot_table.columns.get_loc(column) + 1, ('moving_average_' + column), moving_avgs, allow_duplicates=True)\n    \n    cols = list(pivot_table.columns)\n    num_cols = len(cols)\n    \n    # Plotting the Results\n    fig, axs = plt.subplots(num_cols \/\/ 2, 2,figsize=(15, int(num_cols * 2.5)))\n    x_ticks = index_to_date(pivot_table.index)\n    plt.setp(axs, xticks = range(len(x_ticks)), xticklabels = x_ticks)\n    \n    for i in range(num_cols):\n        axs[i \/\/ 2, i % 2].plot(pivot_table[str(cols[i])].values, label = str(cols[i]))\n        axs[i \/\/ 2, i % 2].legend(loc = 0)\n        axs[i \/\/ 2, i % 2].grid()\n        axs[i \/\/ 2, i % 2].tick_params(labelrotation=45)\n    \n    return pivot_table","6514720e":"# For Purpose\nrate_of_change_wrt_purpose = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['purpose'], aggfunc = 'mean')\nmoving_averages(rate_of_change_wrt_purpose)","fe88aa7f":"# For Type\nrate_of_change_wrt_type = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['property_type'], aggfunc = 'mean')\nmoving_averages(rate_of_change_wrt_type)","49c48cd3":"# For City\nrate_of_change_wrt_city = pd.pivot_table(data, values = 'price', index = ['year', 'month'], columns=['city'], aggfunc = 'mean')\nmoving_averages(rate_of_change_wrt_city)","145cddad":"%%HTML\n<div class='tableauPlaceholder' id='viz1612724490621' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet3&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='RentalYields5_16127243602540&#47;Sheet3' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet3&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1612724490621');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","c6d41ddd":"%%HTML\n<div class='tableauPlaceholder' id='viz1612725172704' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet2&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='RentalYields5_16127243602540&#47;Sheet2' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet2&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1612725172704');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","53850b32":"%%HTML\n<div class='tableauPlaceholder' id='viz1612725216942' style='position: relative'><noscript><a href='#'><img alt=' ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet1&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='RentalYields5_16127243602540&#47;Sheet1' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Re&#47;RentalYields5_16127243602540&#47;Sheet1&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1612725216942');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","3a87cc25":"!pip install dataprep","97d1f800":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","15032234":"plot(data)","e2dad497":"create_report(data)","41faa9b9":"plot(data, \"price\")","132acbb9":"plot(data, \"price\",\"city\")","e3dbc9bb":"plot(data, \"price\",\"property_type\")","1008ab8c":"plot(data, \"price\",\"baths\")","2c4504f5":"plot(data, \"price\",\"area\")","5b97f7fd":"plot(data, \"price\",\"bedrooms\")","278cf29b":"data.head()","0b31826f":"# Mean Price","9e604621":"## Work is in progress will come back soon with new finding.","e25557de":"\n# Data Description\n\nThe dataset consists of data that was scraped from Zameen.com website. It is Pakistani top leading property buy and sell platform.\nGeography: Pakistan\nUnit of analysis: Real states Data Analysis\nDataset: The dataset contains detailed information online data available on zameen.com website . It contains propertyid,locationid,pageurl propertytype,price,location,city,provincename,latitude,longitude baths,area,purpose,bedrooms,dateadded,agency and agent. \n\n**Please upvote if you find this notebook helpful! \ud83d\ude0a Thank you! I would also be very happy to receive feedback on my work.**","ade6ba42":"# Moving Averages w.r.t Dates","e9c907f2":"# Data Description","bb5d26b3":"**Thank you! I would also be very happy to receive feedback on my work.**","f45df5ef":"## Analyzing the Outliers","49f43ecc":"# Rental Yield","88ce6d39":"# Mean Sale","06e03e34":"# Rates of Change w.r.t Dates"}}