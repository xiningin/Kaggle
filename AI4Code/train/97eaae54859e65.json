{"cell_type":{"0c85f226":"code","63910eb0":"code","e3d1259b":"code","b3d1f8fd":"code","09aec3a6":"code","0344165c":"code","aa23d77d":"code","418471e1":"code","070f9fdf":"code","8717f864":"code","a6497b05":"code","65f76b89":"code","44c22cb8":"code","c1a2277c":"markdown","ab4efb7b":"markdown"},"source":{"0c85f226":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcT0CM79Q-crkiUZooknoqfRR3UcUlUwvSFBTrqXSuqd38Gy9SZQ',width=400,height=400)","63910eb0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e3d1259b":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/cusersmarildownloadsventilatorcsv\/ventilator.csv', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'ventilator.csv'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","b3d1f8fd":"df.head().style.background_gradient(cmap='summer')","09aec3a6":"cnt_srs = df['quantity'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Greens',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Ventilators Distribution',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"quantity\")","0344165c":"fig = px.pie( values=df.groupby(['quantity']).size().values,names=df.groupby(['quantity']).size().index)\nfig.update_layout(\n    title = \"Quantity of Ventilators by cities\",\n    font=dict(\n        family=\"Arial, monospace\",\n        size=10,\n        color=\"#7f7f7f\"\n    )\n    )   \n    \npy.iplot(fig)","aa23d77d":"fig = px.histogram(df[df.quantity.notna()],x=\"quantity\",marginal=\"box\",nbins=10)\nfig.update_layout(\n    title = \"Quantity of Ventilators\",\n    xaxis_title=\"quantity\",\n    yaxis_title=\"Number of Ventilators\",\n    barmode=\"group\",\n    bargap=0.1,\n    xaxis = dict(\n        tickmode = 'linear',\n        tick0 = 0,\n        dtick = 10),\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )\npy.iplot(fig)","418471e1":"sns.countplot(df[\"quantity\"])\nplt.xticks(rotation=90)\nplt.show()","070f9fdf":"cat = []\nnum = []\nfor col in df.columns:\n    if df[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","8717f864":"plt.style.use('dark_background')\nfor col in df[num].drop(['quantity'],axis=1):\n    plt.figure(figsize=(8,5))\n    plt.plot(df[col].value_counts(),color='Green')\n    plt.xlabel(col)\n    plt.ylabel('quantity')\n    plt.tight_layout()\n    plt.show()","a6497b05":"df.corr()\nplt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=True,cmap='summer')\nplt.show()","65f76b89":"    plt.figure(figsize=(18,9))\n    sns.factorplot(x=col,y='quantity',data=df)\n    plt.tight_layout()\n    plt.show()","44c22cb8":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcRrtOf8lXsq7Yduwokl2ujlUkndfM0Cbvm44iGwZCnDP44wsHPg',width=400,height=400)","c1a2277c":"Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke","ab4efb7b":"#Italian hospital saves Covid-19 patients lives by 3D printing valves for reanimation devices\n\nAfter the first valves were 3D printed using a filament extrusion system, on location at the hospital, more valves were later 3D printed by another local firm, Lonati SpA, using a polymer laser powder bed fusion process (photo below) and a custom polyamide-based material.\n\nThe Isinnova team now developed and successfully tested a 3D printed adapter to turn a snorkeling mask into a non-invasive ventilator for COVID-19 patients. It\u2019s an idea that anyone can 3D print using just about any type of 3D printer\u2014and could help to address the possible shortage of hospital C-PAP masks for sub-intensive oxygen therapy, which is emerging as a concrete problem linked to the spread of COVID-19: an emergency ventilator mask, produced by adjusting a commercially available snorkeling mask. https:\/\/www.3dprintingmedia.network\/covid-19-3d-printed-valve-for-reanimation-device\/"}}