{"cell_type":{"ea02a513":"code","1091f405":"code","9f726457":"code","b508f1ce":"code","f70e7ec0":"code","8855b0fa":"code","2d9dd0bc":"code","7ff844c9":"code","37b92555":"markdown","886af4f0":"markdown","4efb2d36":"markdown","04f5f02c":"markdown","82c06332":"markdown"},"source":{"ea02a513":"# Import Libraries\nimport tensorflow as tf\nimport tensorflow.keras as keras\nfrom tensorflow.keras.datasets import cifar10 # use Keras built-in CIFAR10 dataset\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D ","1091f405":"# set parameters\nbatch_size = 32\nnum_classes = 10","9f726457":"# Split dataset into train and test:\n# Load CIFAR10 data\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')","b508f1ce":"# Prepare train & test Data\ny_train = to_categorical(y_train, num_classes) # one-hot encoding\ny_test = to_categorical(y_test, num_classes)   # one-hot encoding\n\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train \/= 255.0 # convert to floating point\nx_test \/= 255.0  # convert to floating point","f70e7ec0":"# Build Model\nmodel = keras.models.Sequential()\n# 1st Conv block\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=x_train.shape[1:]))\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n# 2nd Conv block\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\n# Fully-Connected layer\nmodel.add(Flatten())\nmodel.add(Dense(512, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(num_classes, activation='softmax'))\n\nmodel.summary()","8855b0fa":"# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='Adam', metrics=['accuracy'])","2d9dd0bc":"# Train Model \nnum_epochs=30\nhistory = model.fit(x_train, y_train, batch_size=batch_size, epochs=num_epochs, validation_data=(x_test, y_test))","7ff844c9":"# Evaluate Model\nscores = model.evaluate(x_test, y_test, verbose=1)\nprint('Test loss:', scores[0])\nprint('Test accuracy:', scores[1])","37b92555":"## Evaluate Model","886af4f0":"## Train Model","4efb2d36":"## Build Model","04f5f02c":"## Prepare Dataset","82c06332":"# Image Classifier with CIFAR-10 dataset\n[CIFAR-10 dataset](https:\/\/www.cs.toronto.edu\/~kriz\/cifar.html)\nconsists of 60000 **32x32** colour images in **10** classes, with 6000 images per class. There are 50000 training images and 10000 test images.\n![cifar-10](https:\/\/2.bp.blogspot.com\/-XFJ8r9tljKE\/Wsx1fHLFgaI\/AAAAAAAAJ7U\/Q5Xzo6YHWEMLJ92Cd10EMLGjOIsxD807ACLcBGAs\/s1600\/cifar10-ten-categories.jpg)"}}