{"cell_type":{"096f94bb":"code","0ff100f8":"code","50d71950":"code","fe6363b4":"code","44ea0f50":"code","417e56a5":"code","3c2192be":"code","02b5e0b1":"code","ab52cd3d":"code","c2ecdecb":"code","30850d6f":"code","bccb09fb":"code","69f186ea":"code","39b62850":"code","d464baa6":"code","765d38dd":"markdown","b4787903":"markdown"},"source":{"096f94bb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport gc\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nfrom numba import jit\nfrom sklearn.metrics import cohen_kappa_score, confusion_matrix\nimport time\nimport seaborn as sns\n","0ff100f8":"%%time \ntrain_df = pd.read_csv('..\/input\/data-science-bowl-2019\/train.csv')\ntest_df = pd.read_csv('..\/input\/data-science-bowl-2019\/test.csv')\ntrain_labels_df = pd.read_csv('..\/input\/data-science-bowl-2019\/train_labels.csv')\nspecs_df = pd.read_csv('..\/input\/data-science-bowl-2019\/specs.csv')\nsample_submission_df = pd.read_csv('..\/input\/data-science-bowl-2019\/sample_submission.csv')","50d71950":"print(\"Train shape\",train_df.shape)\nprint(\"Test shape\",test_df.shape)\nprint(\"Train labels shape\",train_labels_df.shape)\nprint(\"Specs shape\",specs_df.shape)","fe6363b4":"train_df.head()","44ea0f50":"train_labels_df.head()","417e56a5":"specs_df.head()","3c2192be":"train_labels_df['title'].unique()","02b5e0b1":"train_labels_df['accuracy_group'].value_counts().sort_index().plot.bar()\nplt.title('Accuracy group - target')","ab52cd3d":"plt.figure(figsize=(15,10))\nsns.countplot(x='title', hue='accuracy_group',data=train_labels_df)\nplt.show()","c2ecdecb":"plt.figure(figsize=(15,10))\nsns.countplot(x='title', hue='num_correct',data=train_labels_df)\nplt.show()","30850d6f":"f, axes = plt.subplots(1, 2,figsize=(20,10))\nsns.countplot(x='world',data=train_df, ax=axes[0])\naxes[0].set_title=\"world(train)\"\nsns.countplot(x='world',data=test_df, ax=axes[1])\naxes[1].set_title=\"world(test)\"\nplt.show()","bccb09fb":"f, axes = plt.subplots(1, 2,figsize=(35,10))\nsns.countplot(x='event_code',data=train_df, ax=axes[0])\naxes[0].set_title=\"event_code(train)\"\nsns.countplot(x='event_code',data=test_df, ax=axes[1])\naxes[1].set_title=\"event_code(test)\"\nplt.show()","69f186ea":"train_df.type.unique()","39b62850":"type_order = train_df.type.unique()\nf, axes = plt.subplots(1, 2,figsize=(20,10))\nsns.countplot(x='type',data=train_df, order=type_order, ax=axes[0])\naxes[0].set_title=\"type(train)\"\nsns.countplot(x='type',data=test_df, order=type_order, ax=axes[1])\naxes[1].set_title=\"type(test)\"\nplt.show()","d464baa6":"title_order = train_df.title.unique()\nf, axes = plt.subplots(1, 2,figsize=(30,10))\nsns.countplot(y='title',data=train_df, ax=axes[0], order=title_order)\naxes[0].set(title=\"title(train)\")\nsns.countplot(y='title',data=test_df, ax=axes[1],order=title_order)\naxes[1].set(title=\"title(test)\")\nplt.show()","765d38dd":"this eda includes some basic seaborn visualizations of the dataset. might be updated in the future","b4787903":"* **3:** the assessment was solved on the first attempt\n* **2:** the assessment was solved on the second attempt\n* **1:** the assessment was solved after 3 or more attempts\n* **0:** the assessment was never solved"}}