{"cell_type":{"f4c277bb":"code","1b9e35d5":"code","23a79d91":"code","f6cbb066":"code","44a86933":"code","513b26c1":"code","142a6a05":"code","7d1458dd":"code","8bb7bfa4":"code","e10c2f37":"code","c6927233":"code","9d480a60":"code","5f03690e":"code","93ed173d":"code","38fd05f3":"code","b6e48207":"code","5e1cda51":"code","3ddb4538":"code","5af5d9a0":"code","2fbbb2c0":"code","b28d5b33":"code","0d6113e2":"code","aff35c8d":"code","84562ae5":"code","af6a4dea":"code","13c5f197":"code","9faa38de":"code","1228fd2b":"code","97c71da7":"code","ea0ac0fd":"code","6de222d2":"code","c2b81313":"code","38b61e41":"code","4b24af85":"code","07876550":"code","73bfba86":"code","e08e4fdc":"code","1cca5a8d":"code","31022459":"code","7daf7b9f":"code","5c343f29":"code","3aaa238e":"code","5fb7f92b":"code","c1f1069b":"code","b4aa6d7c":"code","2a20255a":"code","0261671c":"code","b27cafda":"code","ec3e2aa2":"code","a72d32ba":"code","90f5d316":"code","24c9036e":"code","d744fc59":"code","5969a6c7":"code","6977d79e":"code","fb29847d":"code","ada702a2":"code","7d1a2efb":"code","f6d6af1b":"code","ba96c117":"code","d516990f":"code","b4c5d2ed":"code","561a0fca":"code","d203be36":"code","21529116":"code","6a717130":"code","1e92ad68":"code","dd5c505b":"code","ff2f200d":"code","524b9865":"code","2a845336":"code","290d467a":"code","1c89060a":"code","60f18a6e":"code","e2d00428":"code","b6ddee75":"code","e98f13f3":"code","b42952e0":"code","11f9a607":"code","156d428b":"code","12ec8290":"code","85b7cdb2":"code","b778800d":"code","8324ed6b":"code","91eec767":"code","1f4b28ef":"code","07bc4cf8":"code","1addfee2":"code","51d1a48c":"code","6f9ffd3b":"code","18a003e6":"code","1773916a":"code","c452804f":"code","db63f13e":"code","3abdc5da":"code","13c06a0e":"code","f54e3e1e":"code","7d3661a8":"code","4627b812":"code","9d44fcac":"code","7e91b901":"code","4190146b":"code","9163f490":"code","79acadf0":"code","d8275182":"code","336726c7":"code","b5a60b06":"code","ce05f397":"code","a5b13d4f":"code","7beaeadc":"code","e392772d":"code","462180f7":"code","2a8cfa93":"code","a746b943":"markdown","9ce2a755":"markdown","25cbe683":"markdown","b89d9558":"markdown","035486a4":"markdown","38f19f5d":"markdown","9b58013d":"markdown","6633caed":"markdown","25c4f365":"markdown","e8e80961":"markdown","2b4a42bb":"markdown","7508e5e6":"markdown","37f751cd":"markdown","46a811e8":"markdown","4ab5cbe1":"markdown","19995084":"markdown","eca64c04":"markdown","10902e7f":"markdown","ef6a19fb":"markdown","5d1d85ae":"markdown","ba83c311":"markdown","5defafb0":"markdown","acdad9cb":"markdown","26c13af3":"markdown","a852259d":"markdown","da723237":"markdown","3ffbcaea":"markdown","5d72cb66":"markdown","4302ab13":"markdown","fa22920e":"markdown","ad828c69":"markdown","9076192e":"markdown","bdc07829":"markdown","69ed1ba7":"markdown","245999e3":"markdown","648058c5":"markdown","f71c00af":"markdown","2181ecf1":"markdown","188607cc":"markdown","0677820c":"markdown","e9811b3b":"markdown","ab6c134a":"markdown","d351eed9":"markdown","c4b30b51":"markdown","4944c885":"markdown","16148f8e":"markdown","c01ff88c":"markdown","af0f322c":"markdown","af3104c0":"markdown","95b11671":"markdown","54d7fa53":"markdown","1ea70c7f":"markdown","bc5d3f49":"markdown","7839ec1e":"markdown","1a2efb1d":"markdown","8e88f33f":"markdown","0495b66d":"markdown","d34bddae":"markdown","2fdb685c":"markdown","776f7395":"markdown","73eef72b":"markdown","7d56cb5c":"markdown","81817881":"markdown","382870ec":"markdown","fd6f9343":"markdown","f6f69463":"markdown","e4a3d6ff":"markdown","9c5618c7":"markdown","b14d437c":"markdown","b04c00a2":"markdown","87803029":"markdown","e667fbf6":"markdown","804dd332":"markdown","a5c7f1b7":"markdown","63c4afa2":"markdown","41df174e":"markdown","391eebb5":"markdown","6dd07be6":"markdown","265a8b4a":"markdown","7f7822fa":"markdown","b0bd237a":"markdown","5041871c":"markdown","42645e18":"markdown","27fb9bf8":"markdown"},"source":{"f4c277bb":"#import the warnings.\nimport warnings\nwarnings.filterwarnings('ignore')","1b9e35d5":"#import the useful libraries.\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","23a79d91":"#read the csv files\nAD = pd.read_csv(\"..\/input\/credit-eda-case-study-data\/application_data.csv\")\nPD=pd.read_csv('..\/input\/credit-eda-case-study-data\/previous_application.csv')","f6cbb066":"AD.head()","44a86933":"AD.tail()","513b26c1":"AD.shape","142a6a05":"AD.info(verbose=True, null_counts=True)","7d1458dd":"AD.describe()","8bb7bfa4":"PD.head()","e10c2f37":"PD.tail()","c6927233":"PD.shape","9d480a60":"PD.info(verbose=True, null_counts=True)","5f03690e":"PD.describe()","93ed173d":"# Finding the percentage of missing values in all columns in Application data\nMissingAD=round(AD.isnull().mean()*100,2).sort_values(ascending = False)\nMissingAD.head(60)","38fd05f3":"# Removing all the columns from Application Data with more than 35% nulls values.\nAD= AD.loc[:,AD.isnull().mean()<=0.35]\nAD.shape","b6e48207":"# Finding the percentage of missing values in all columns in Previous application data\nMissingPD=round(PD.isnull().mean()*100,2).sort_values(ascending = False)\nMissingPD.head(60)","5e1cda51":"# Removing all the columns from Previous Application with more than 22% nulls values.\nPD= PD.loc[:,PD.isnull().mean()<=0.22]\nPD.shape","3ddb4538":"#Selecting columns with less or equal to than 35% null vallues\nlist(AD.columns[(AD.isnull().mean()<=0.35) & (AD.isnull().mean()>0)])\n","5af5d9a0":"AD['AMT_ANNUITY'].value_counts()","2fbbb2c0":"# Since AMT_ANNUITY is a continuous variable. So checking for outliers\nsns.boxplot(AD['AMT_ANNUITY'])\nplt.show()","b28d5b33":"AD['AMT_ANNUITY'].median()","0d6113e2":"AD['AMT_GOODS_PRICE'].value_counts()","aff35c8d":"# Since AMT_ANNUITY is a continuous variable. So checking for outliers\nsns.boxplot(AD['AMT_GOODS_PRICE'])\nplt.show()","84562ae5":"# Checking for median in AMT_GOODS_PRICE\nAD['AMT_GOODS_PRICE'].median()","af6a4dea":"# Checking for mode in Name type suite\nAD.NAME_TYPE_SUITE.mode()","13c5f197":"# Checking for most common value in Occupation Type\nAD.OCCUPATION_TYPE.value_counts()","9faa38de":"# checking for mode in occupation type\nAD.OCCUPATION_TYPE.mode()","1228fd2b":"# Plotting box plot to check for outliers\nsns.boxplot(AD['CNT_FAM_MEMBERS'])\nplt.show()","97c71da7":"# Check for median in CNT_FAM_MEMBERS\nround(AD['CNT_FAM_MEMBERS'].median(),2)","ea0ac0fd":"# Plotting box plot to check for outliers\nsns.boxplot(AD['EXT_SOURCE_2'])\nplt.show()","6de222d2":"# Check for mean in EXT_SOURCE_2\nround(AD['EXT_SOURCE_2'].mean(),2)","c2b81313":"round(AD['AMT_REQ_CREDIT_BUREAU_HOUR'].median(),2)","38b61e41":"round(AD['AMT_REQ_CREDIT_BUREAU_DAY'].median(),2)","4b24af85":"round(AD['AMT_REQ_CREDIT_BUREAU_WEEK'].median(),2)","07876550":"round(AD['AMT_REQ_CREDIT_BUREAU_MON'].median(),2)","73bfba86":"round(AD['AMT_REQ_CREDIT_BUREAU_QRT'].median(),2)","e08e4fdc":"AD.ORGANIZATION_TYPE.value_counts()","1cca5a8d":"# Replacing XNA with NaN \nAD = AD.replace('XNA',np.NaN)","31022459":"AD.select_dtypes('object').columns ","7daf7b9f":"AD.select_dtypes('float').columns ","5c343f29":"#Converting columns to int64\nINT = ['OBS_30_CNT_SOCIAL_CIRCLE', 'DEF_30_CNT_SOCIAL_CIRCLE', 'OBS_60_CNT_SOCIAL_CIRCLE',\n                   'DEF_60_CNT_SOCIAL_CIRCLE', 'DAYS_LAST_PHONE_CHANGE', 'AMT_REQ_CREDIT_BUREAU_HOUR',\n                   'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_WEEK', 'AMT_REQ_CREDIT_BUREAU_MON',\n                   'AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR']\nAD.loc[:,INT]=AD.loc[:,INT].apply(lambda col: col.astype('int64',errors='ignore'))","3aaa238e":"# The columns with days.\ndays= [x for x in AD if x.startswith('DAYS')]\ndays","5fb7f92b":"# Checking for the unique values present in all columns starting with 'DAYS'\nprint(AD['DAYS_BIRTH'].unique())\nprint(AD['DAYS_EMPLOYED'].unique())\nprint(AD['DAYS_REGISTRATION'].unique())\nprint(AD['DAYS_ID_PUBLISH'].unique())\nprint(AD['DAYS_LAST_PHONE_CHANGE'].unique())","c1f1069b":"# Applying abs() function to columns starting with 'DAYS' to convert the negative values to positive\nAD['DAYS_EMPLOYED']=abs(AD['DAYS_EMPLOYED'])\nAD['DAYS_REGISTRATION']=abs(AD['DAYS_REGISTRATION'])\nAD['DAYS_ID_PUBLISH']=abs(AD['DAYS_ID_PUBLISH'])\nAD['DAYS_LAST_PHONE_CHANGE']=abs(AD['DAYS_LAST_PHONE_CHANGE'])","b4aa6d7c":"#Creating a column AGE using DAYS_BIRTH\nAD['AGE']=abs(AD['DAYS_BIRTH'])\/\/365.25","2a20255a":"AD['AGE'].describe()","0261671c":"# Value Count of Gender Column\nAD.CODE_GENDER.value_counts()","b27cafda":"# Checking for the unique values in Gender Column.\nprint(AD['CODE_GENDER'].unique())","ec3e2aa2":"# Replacing XNA value with F as number of F is more\nAD.loc[AD.CODE_GENDER == 'XNA','CODE_GENDER'] = 'F'\nAD.CODE_GENDER.value_counts()","a72d32ba":"# Finding outlier in days birth\nsns.boxplot(data=AD,x='DAYS_BIRTH')\nplt.show()","90f5d316":"# Finding Outlier in Amount Annuity\nsns.boxplot(data=AD,x='AMT_ANNUITY')\nplt.show()","24c9036e":"# Finding outliers in CNT FAM Members\nsns.boxplot(AD['CNT_FAM_MEMBERS'])\nplt.show()","d744fc59":"# Finding outliers in Goods Price\nsns.boxplot(AD['AMT_GOODS_PRICE'])\nplt.show()","5969a6c7":"# Bining 'AGE'\nAD['AGE_GROUP']=pd.cut(AD['AGE'], bins=[18,25,35,60,100], labels=['Children','Young', 'Middle_Age', 'Senior_Citizen'])","6977d79e":"# Verifying age\nAD['AGE_GROUP'].value_counts()","fb29847d":"#Binning AMT_INCOME_TOTAL\nAD['INCOME_GROUP']=pd.qcut(AD['AMT_INCOME_TOTAL'],q=[0,0.1,0.2,0.6,0.8,1],labels=['VeryLow','Low','Medium','High','VeryHigh'])","ada702a2":"AD['INCOME_GROUP']","7d1a2efb":"# Counting percentage of defaulters and non defaulters\nAD['TARGET'].value_counts(normalize=True)*100","f6d6af1b":"# Plotting pieplot on Defaulter and non defaulter\nplt.pie(AD['TARGET'].value_counts(normalize=True)*100,labels=['NON-DEFAULTER','DEFAULTER'],explode=(0,0.05),autopct='%1.f%%')\nplt.title('DEFAULTER Vs NON-DEFAULTER')\nplt.show()","ba96c117":"# Dividing the original dataset into two different datasets depending upon the target value\ntarget_0 = AD.loc[AD['TARGET'] == 0]\ntarget_1 = AD.loc[AD['TARGET'] == 1]","d516990f":"#Plotting bar plot on the Grouped data of Housing Type and Non- Defaulters\ntarget_0['NAME_HOUSING_TYPE'].value_counts().plot.bar()\nplt.title('Housing Type of Non-Defaulters')\nplt.show()","b4c5d2ed":"#Plotting bar plot on the Grouped data of Housing Type and Defaulters\ntarget_1['NAME_HOUSING_TYPE'].value_counts().plot.bar()\nplt.title('Housing Type of Defaulters')\nplt.show()","561a0fca":"#Plotting bar plot on the Grouped data of Gender and Non Defaulters\ntarget_0['CODE_GENDER'].value_counts().plot.bar()\nplt.title('Gender Distribution of Non- Defaulters')\nplt.show()","d203be36":"#Plotting bar plot on the Grouped data of Gender and Defaulters\ntarget_1['CODE_GENDER'].value_counts().plot.bar()\nplt.title('Gender Distribution of Defaulters')\nplt.show()","21529116":"#Plotting bar plot on the Grouped data of Income Type and Non- Defaulters\ntarget_0['NAME_INCOME_TYPE'].value_counts().plot.bar()\nplt.title('Income Type of Non-Defaulters')\nplt.show()","6a717130":"#Plotting bar plot on the Grouped data of Income Type and Defaulters\ntarget_1['NAME_INCOME_TYPE'].value_counts().plot.bar()\nplt.title('Income Type of Defaulters')\nplt.show()","1e92ad68":"#Plotting bar plot on the Grouped data of Organization Type and Non- Defaulters\nplt.figure(figsize=[12,6])\ntarget_0['ORGANIZATION_TYPE'].value_counts().plot.bar()\nplt.title('Organization Type of Non-Defaulters')\nplt.show()","dd5c505b":"#Plotting bar plot on the Grouped data of Organization Type and Non- Defaulters\nplt.figure(figsize=[12,6])\ntarget_1['ORGANIZATION_TYPE'].value_counts().plot.bar()\nplt.title('Organization of Non-Defaulters')\nplt.show()","ff2f200d":"#Plotting bar plot on the Grouped data of Suite Type and Non- Defaulters\ntarget_0['NAME_TYPE_SUITE'].value_counts().plot.bar()\nplt.title('Suite Type of Non-Defaulters')\nplt.show()","524b9865":"#Plotting bar plot on the Grouped data of Suite Type and Defaulters\ntarget_1['NAME_TYPE_SUITE'].value_counts().plot.bar()\nplt.title('Suite Type of Defaulters')\nplt.show()","2a845336":"#Plotting bar plot on the Grouped data of Contract Type and Non- Defaulters\ntarget_0['NAME_CONTRACT_TYPE'].value_counts().plot.bar()\nplt.title('Contract Type of Non-Defaulters')\nplt.show()","290d467a":"#Plotting bar plot on the Grouped data of Contract Type and Defaulters\ntarget_1['NAME_CONTRACT_TYPE'].value_counts().plot.bar()\nplt.title('Contract Type of Defaulters')\nplt.show()","1c89060a":"#Plotting bar plot on the Grouped data of Age Grou and Non- Defaulters\ntarget_0['AGE_GROUP'].value_counts().plot.bar()\nplt.title('Age Group of Non-Defaulters')\nplt.show()","60f18a6e":"#Plotting bar plot on the Grouped data of Age Grou and Defaulters\ntarget_1['AGE_GROUP'].value_counts().plot.bar()\nplt.title('Age Group of Defaulters')\nplt.show()","e2d00428":"#Plotting bar plot on the Grouped data of Income and Non-Defaulters\ntarget_0['INCOME_GROUP'].value_counts().plot.bar()\nplt.title('Income Range of Non-Defaulters')\nplt.show()","b6ddee75":"#Plotting bar plot on the Grouped data of Income and Defaulters\ntarget_1['INCOME_GROUP'].value_counts().plot.bar()\nplt.title('Income Range of Defaulters')\nplt.show()","e98f13f3":"#Plotting bar plot on the Grouped data of Education and Non-Defaulters\ntarget_0['NAME_EDUCATION_TYPE'].value_counts().plot.bar()\nplt.title('Education Type of Non-Defaulters')\nplt.show()","b42952e0":"#Plotting bar plot on the Grouped data of Education and Defaulters\ntarget_1['NAME_EDUCATION_TYPE'].value_counts().plot.bar()\nplt.title('Education Type of Defaulters')\nplt.show()","11f9a607":"# function to plot bar for continuous variables\ndef unidist(var):\n\n    plt.style.use('ggplot')\n    sns.despine\n    fig,(ax1,ax2) = plt.subplots(1,2,figsize=(15,6))\n    sns.distplot(a=target_0[var],ax=ax1)\n    ax1.set_title(f' {var} for Non-Defaulters',fontsize=10)\n    sns.distplot(a=target_1[var],ax=ax2)\n    ax2.set_title(f'{var} for Defaulters',fontsize=10)    \n    plt.show()","156d428b":"unidist('AMT_ANNUITY')","12ec8290":"unidist('AMT_CREDIT')","85b7cdb2":"unidist('AMT_GOODS_PRICE')","b778800d":"# Plotting bargraph for income group and credit amount for non defaulter\nsns.barplot(data=target_0, x=\"INCOME_GROUP\", y=\"AMT_CREDIT\")\nplt.show()","8324ed6b":"# Plotting bargraph for income group and credit amount for defaulter\nsns.barplot(data=target_1, x=\"INCOME_GROUP\", y=\"AMT_CREDIT\")\nplt.show()","91eec767":"# Plotting bargraph for education type and credit amount for non defaulter\nplt.figure(figsize=[12,6])\nsns.barplot(data=target_0, x=\"NAME_EDUCATION_TYPE\", y=\"AMT_CREDIT\")\nplt.show()","1f4b28ef":"# Plotting bargraph for education type and credit amount for defaulter\nplt.figure(figsize=[12,6])\nsns.barplot(data=target_1, x=\"NAME_EDUCATION_TYPE\", y=\"AMT_CREDIT\")\nplt.show()","07bc4cf8":"# Plotting bargraph for  Age group and credit amount for non defaulter\nsns.barplot(data=target_0, x=\"AGE_GROUP\", y=\"AMT_CREDIT\")\nplt.show()","1addfee2":"# Plotting bargraph for Age group and credit amount for defaulter\nsns.barplot(data=target_1, x=\"AGE_GROUP\", y=\"AMT_CREDIT\")\nplt.show()","51d1a48c":"# Plotting pairplot for 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE','CNT_FAM_MEMBERS' for non defaulter\nNvN = target_0[['AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE','CNT_FAM_MEMBERS']].fillna(0)\nsns.pairplot(NvN)\nplt.show()","6f9ffd3b":"# Plotting pairplot for 'AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE','CNT_FAM_MEMBERS' for defaulter\nNvN = target_1[['AMT_CREDIT', 'AMT_ANNUITY', 'AMT_INCOME_TOTAL', 'AMT_GOODS_PRICE','CNT_FAM_MEMBERS']].fillna(0)\nsns.pairplot(NvN)\nplt.show()","18a003e6":"# Finding correlation for defaulter\ncorr=target_1.corr()\nc_df = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\nc_df.columns=['Var_1','Var_2','Correlation']\nc_df.dropna(subset=['Correlation'],inplace=True)\nc_df = c_df.sort_values(by=['Correlation'], ascending=False)\nc_df.head(10)","1773916a":"# Finding correlation for non defaulter\ncorr=target_0.corr()\nc_df = corr.where(np.triu(np.ones(corr.shape),k=1).astype(np.bool)).unstack().reset_index()\nc_df.columns=['Var_1','Var_2','Correlation']\nc_df.dropna(subset=['Correlation'],inplace=True)\nc_df = c_df.sort_values(by=['Correlation'], ascending=False)\nc_df.head(10)","c452804f":"PD.head()","db63f13e":"# Replacing XNA and XAP with NaN \nPD=PD.replace('XNA', np.NaN)\nPD=PD.replace('XAP', np.NaN)","3abdc5da":"# Plotting bar plot on contract status\nPD['NAME_CONTRACT_STATUS'].value_counts().plot.bar()\nplt.show()","13c06a0e":"# Plotting bar plot on payment type\nPD['NAME_PAYMENT_TYPE'].value_counts().plot.bar()\nplt.show()","f54e3e1e":"# Plotting bar plot on reson for loan reject\nPD['CODE_REJECT_REASON'].value_counts().plot.bar()\nplt.show()","7d3661a8":"# Plotting bar for goods category\nPD['NAME_GOODS_CATEGORY'].value_counts().plot.bar()\nplt.show()","4627b812":"# Plotting bar for client type\nPD['NAME_CLIENT_TYPE'].value_counts().plot.bar()\nplt.show()","9d44fcac":"# Plotting dist plot for credit amount\nsns.distplot(PD['AMT_CREDIT'])\nplt.show()","7e91b901":"# Plotting dist plot for application amount\nsns.distplot(PD['AMT_APPLICATION'])\nplt.show()","4190146b":"# plotting bar for credit amt vs contract status\nsns.barplot(data=PD, x=\"NAME_CONTRACT_TYPE\", y=\"AMT_CREDIT\")\nplt.show()","9163f490":"# Plotting bar for client type vs credit amount\nsns.barplot(data=PD, x=\"NAME_CLIENT_TYPE\", y=\"AMT_CREDIT\")\nplt.show()","79acadf0":"# Merding Application data and Previous data\nND = pd.merge(AD, PD, how='left', on=['SK_ID_CURR'])","d8275182":"ND.shape","336726c7":"ND.head()","b5a60b06":"ND.info()","ce05f397":"# Obtaining pivot table on gender and contract status\npvtb = pd.pivot_table(ND, values='SK_ID_CURR', index=['CODE_GENDER'],columns=['NAME_CONTRACT_STATUS'], aggfunc=np.sum)\npvtb","a5b13d4f":"# plotting var on gender vs contract status\npvtb.plot(kind='bar',stacked=True,figsize=(10,5))\nplt.xlabel('CODE_GENDER')\nplt.ylabel('CONTRACT_STATUS')\nplt.show()","7beaeadc":"# Obtaining pivot table on client type and contract status\npvtb2 = pd.pivot_table(ND, values='SK_ID_CURR', index=['NAME_CLIENT_TYPE'],columns=['NAME_CONTRACT_STATUS'], aggfunc=np.sum)\npvtb2","e392772d":"# plotting var on client type vs contract status\npvtb2.plot(kind='bar',stacked=True,figsize=(10,5))\nplt.xlabel('CLIENT_TYPE')\nplt.ylabel('CONTRACT_STATUS')\nplt.show()","462180f7":"# Obtaining pivot table on target and contract status\npvtb3 = pd.pivot_table(ND, values='SK_ID_CURR', index=['TARGET'],columns=['NAME_CONTRACT_STATUS'], aggfunc=np.sum)\npvtb3","2a8cfa93":"# plotting var on target vs contract status\npvtb3.plot(kind='bar',stacked=True,figsize=(10,5))\nplt.xlabel('TARGET')\nplt.ylabel('CONTRACT_STATUS')\nplt.show()","a746b943":"#### 4.1.2 Orderd Catagorical","9ce2a755":"Clearly the column Occupation_Type is a categorical column. So this column can be imputed using the mode of the column i.e Laborers","25cbe683":"#### Contract Type","b89d9558":"On comparing age group with credit amount we see that young people default more than senior citizen.","035486a4":"#### Organization Type","38f19f5d":"On comparing age group we can see that distribution of loan is more in Middle age but also as compared to senior citizen childrens are defaulting more","9b58013d":"On comparing between defaulter and Non defaulter about type suite we see that unaccompained clients defaults more and also apply for loan more as compared to others.","6633caed":"#### Income Type","25c4f365":"### 3.1 Data Sorting","e8e80961":"#### Suit Type","2b4a42bb":"## 4. Analysis","7508e5e6":"Clearly EXT_SOURCE_2 has no outliers so we can impute the mean i.e. 0.51","37f751cd":"As we can see Cash Loans has high amount credited","46a811e8":"Almost all clients opted for Cash through bank","4ab5cbe1":"#### 3.2.1 Imputation in AMT_ANNUITY","19995084":"Clearly the column NAME_TYPE_SUITE is a categorical column. So this column can be imputed using the mode of the column i.e Unaccompanied","eca64c04":"Clearly CNT_FAM_MEMBERS is a continuous variable and we can impute the mean\/median i.e. 2.0","10902e7f":"On comparing income group with credit amount we observe that similarilty lies between both defaulters and non defaulters.","ef6a19fb":"As we can see these columns contains -ve values and dates cant be in negative, so we need to convert it in +ve.","5d1d85ae":"### 4.1 Univariate Analysis on Categorical Variable","ba83c311":"### 6.1 Univariate Analysis","5defafb0":"#### Gender","acdad9cb":"### 3.7 Splitting Data","26c13af3":"Few defaulter also get there loan approved but there is vast majority in Non defaulter.","a852259d":"We can see there are some Nan values, so lets impute them.","da723237":"In 'AMT_REQ_CREDIT_BUREAU_HOUR' ,'AMT_REQ_CREDIT_BUREAU_DAY', 'AMT_REQ_CREDIT_BUREAU_MON', 'AMT_REQ_CREDIT_BUREAU_QRT', 'AMT_REQ_CREDIT_BUREAU_YEAR', we can impute the median i.e. 0.0\n","3ffbcaea":"### 6.2 Bivariate Analysis","5d72cb66":"### 2.2 Checking Previous Application Data","4302ab13":"## Problem Statement\n\n### Introduction\nThis case study aims to give you an idea of applying EDA in a real business scenario. In this case study, apart from applying the techniques that you have learnt in the EDA module, you will also develop a basic understanding of risk analytics in banking and financial services and understand how data is used to minimise the risk of losing money while lending to customers.\n\n \n\n### Business Understanding\nThe loan providing companies find it hard to give loans to the people due to their insufficient or non-existent credit history. Because of that, some consumers use it as their advantage by becoming a defaulter. Suppose you work for a consumer finance company which specialises in lending various types of loans to urban customers. You have to use EDA to analyse the patterns present in the data. This will ensure that the applicants capable of repaying the loan are not rejected.\n\n \n\nWhen the company receives a loan application, the company has to decide for loan approval based on the applicant\u2019s profile. Two types of risks are associated with the bank\u2019s decision:\n\nIf the applicant is likely to repay the loan, then not approving the loan results in a loss of business to the company\n\nIf the applicant is not likely to repay the loan, i.e. he\/she is likely to default, then approving the loan may lead to a financial loss for the company.\n\n \n\nThe data given below contains the information about the loan application at the time of applying for the loan. It contains two types of scenarios:\n\nThe client with payment difficulties: he\/she had late payment more than X days on at least one of the first Y instalments of the loan in our sample,\n\nAll other cases: All other cases when the payment is paid on time.\n\n \n\n \n\nWhen a client applies for a loan, there are four types of decisions that could be taken by the client\/company):\n\nApproved: The Company has approved loan Application\n\nCancelled: The client cancelled the application sometime during approval. Either the client changed her\/his mind about the loan or in some cases due to a higher risk of the client he received worse pricing which he did not want.\n\nRefused: The company had rejected the loan (because the client does not meet their requirements etc.).\n\nUnused offer:  Loan has been cancelled by the client but on different stages of the process.\n\nIn this case study, you will use EDA to understand how consumer attributes and loan attributes influence the tendency of default.\n\n \n\n \n\n### Business Objectives\nThis case study aims to identify patterns which indicate if a client has difficulty paying their installments which may be used for taking actions such as denying the loan, reducing the amount of loan, lending (to risky applicants) at a higher interest rate, etc. This will ensure that the consumers capable of repaying the loan are not rejected. Identification of such applicants using EDA is the aim of this case study.\n\n \n\nIn other words, the company wants to understand the driving factors (or driver variables) behind loan default, i.e. the variables which are strong indicators of default.  The company can utilise this knowledge for its portfolio and risk assessment.\n\nTo develop your understanding of the domain, you are advised to independently research a little about risk analytics - understanding the types of variables and their significance should be enough).\n\n \n\n### Data Understanding\n\n1. 'application_data.csv'  contains all the information of the client at the time of application.\nThe data is about whether a client has payment difficulties.\n\n \n\n2. 'previous_application.csv' contains information about the client\u2019s previous loan data. It contains the data whether the previous application had been Approved, Cancelled, Refused or Unused offer.\n\n \n\n3. 'columns_description.csv' is data dictionary which describes the meaning of the variables.\n\n\n### Results Expected\nPresent the overall approach of the analysis in a presentation. Mention the problem statement and the analysis approach briefly.\n\nIdentify the missing data and use appropriate method to deal with it. (Remove columns\/or replace it with an appropriate value)\n\nHint: Note that in EDA, since it is not necessary to replace the missing value, but if you have to replace the missing value, what should be the approach. Clearly mention the approach.\n\nIdentify if there are outliers in the dataset. Also, mention why do you think it is an outlier. Again, remember that for this exercise, it is not necessary to remove any data points.\n\nIdentify if there is data imbalance in the data. Find the ratio of data imbalance.\n\nHint: How will you analyse the data in case of data imbalance? You can plot more than one type of plot to analyse the different aspects due to data imbalance. For example, you can choose your own scale for the graphs, i.e. one can plot in terms of percentage or absolute value. Do this analysis for the \u2018Target variable\u2019 in the dataset ( clients with payment difficulties and all other cases). Use a mix of univariate and bivariate analysis etc.\n\n \n\nHint: Since there are a lot of columns, you can run your analysis in loops for the appropriate columns and find the insights.\n\nExplain the results of univariate, segmented univariate, bivariate analysis, etc. in business terms.\n\nFind the top 10 correlation for the Client with payment difficulties and all other cases (Target variable). Note that you have to find the top correlation by segmenting the data frame w.r.t to the target variable and then find the top correlation for each of the segmented data and find if any insight is there.  Say, there are 5+1(target) variables in a dataset: Var1, Var2, Var3, Var4, Var5, Target. And if you have to find top 3 correlation, it can be: Var1 & Var2, Var2 & Var3, Var1 & Var3. Target variable will not feature in this correlation as it is a categorical variable and not a continuous variable which is increasing or decreasing.  \n\nInclude visualisations and summarise the most important results in the presentation. You are free to choose the graphs which explain the numerical\/categorical variables. Insights should explain why the variable is important for differentiating the clients with payment difficulties with all other cases. ","fa22920e":"#### 3.2.4 Imputation in OCCUPATION_TYPE","ad828c69":"### 3.4 Finding Outliers","9076192e":"Mobile was the most loan applied goods.","bdc07829":"AMT Goods Price shows outliers","69ed1ba7":"#### 4.3.1 Catagorical Vs Numerical","245999e3":"### 3.5 Binning Continious Variables","648058c5":"## 3. Data Cleaning","f71c00af":"### 4.3 Bivariate Analysis","2181ecf1":"## 2. Data Checking","188607cc":"Since AMT_GOODS_PRICE has outliers, the column can be imputed using the median of the coumn i.e. 450000.0","0677820c":"On comaparing the Defaulters and Non Defaulters on the basis of Gender, we observe that Females are the majority in both the cases.","e9811b3b":"Comparison of Credited Amount vs Client type shows that Refreshed comes after the Repeater client with very less difference.","ab6c134a":"#### Housing Type","d351eed9":"## 1. Importing Libraries, Warnings & Files","c4b30b51":"On comparing Income Type We can see that the students & BusinessMen don't default. The reason could be they are not required to pay during the time they are students.\nMost of the loans are distributed to working class people","4944c885":"By comparing education type we can observe an increase in percentage of Loan Defaulters whose educational qualifications are secondary\/secondary and a decrease in the percentage of Loan Default who have completed higher education. ","16148f8e":"We can observe that majority of loans are approved and very less percentage of loans are unused offer","c01ff88c":"## 6.3 Data Merge","af0f322c":"#### Age Group","af3104c0":"CNT FAM members shows outliers around 20","95b11671":"#### 3.2.3 Imputation in NAME_TYPE_SUITE","54d7fa53":"### 2.1 Checking Application Data","1ea70c7f":"On comparing Housing Type we can see that people living with parents tend to default increases when compared with others.","bc5d3f49":"### 4.2 Univariate Analysis on Continuous Variable","7839ec1e":"As it shows Application data has high imbalance with Defaulted population of 8% as compared to Non-defualted population of 92%.","1a2efb1d":"### 3.3 Testing Data Types","8e88f33f":"Ratio decreases of Revolving loan in defaulter section","0495b66d":"On comparing income group we observe that there is increase in Loan Defaulters whose income is low. ","d34bddae":"#### 4.1.1 Unorderd Catagorical","2fdb685c":"### 5. Top 10 Correlation ","776f7395":"As we can see the data contains high number of null values, there are more attributes which are having null values around 50% and then it slightly decreases to 31%, so we can drop the coulmns which are above 35%.","73eef72b":"#### 4.3.2 Numerical Vs Numerical","7d56cb5c":"### 6.1.2 Numerical","81817881":"#### 3.2.7 Imputation in  AMT_REQ_CREDIT_BUREAU","382870ec":"## 6. Data Analysis on Previous Application Data","fd6f9343":"HC was reason of rejection of most application before.","f6f69463":"AMT Annuity shows outliers after 250000","e4a3d6ff":"Repeater and New has more number of approved loans.","9c5618c7":"#### Income Group","b14d437c":"#### Education Type","b04c00a2":"# Credit EDA Case Study","87803029":"#### 3.2.6 Imputation in EXT_SOURCE_2","e667fbf6":"Imputing the value'NaN' which means not available for the column 'ORGANIZATION_TYPE'","804dd332":"Since AMT_ANNUITY has outliers, the column can be imputed using the median of the coumn i.e. 24903.0","a5c7f1b7":"Most clients were repeater","63c4afa2":"### 3.2 Data Imputation","41df174e":"#### 3.2.2 Imputation in AMT_GOODS_PRICE","391eebb5":"### 3.6 Checking Data Imbalance","6dd07be6":"There are several columns having null values between 99% to 22% and then it comes down to 0%, so lets drop the columns having null values above 22%.","265a8b4a":"On comparing organization type Bussiness entity type 3 tends to apply for more loans and there is also similarity in defaulting it.","7f7822fa":"#### 3.2.5 Imputation in CNT_FAM_MEMBERS","b0bd237a":"### 6.1.1 Catagorical ","5041871c":"We can observe that the high default annuity amount lies between 20 to 40 thousand.","42645e18":"Female has more number of approved loan as per male.","27fb9bf8":"We dont see any outlier in Days Birth"}}