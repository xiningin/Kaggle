{"cell_type":{"e7053600":"code","3502b8b4":"code","c8825ee1":"code","53adba20":"code","d5f80165":"code","ceb46826":"code","73e4c234":"code","464a776b":"code","249057e6":"code","37e1b3d9":"code","89d7ce6e":"code","636bfe29":"code","8c83c1d0":"code","a09a5c55":"code","61020a01":"code","775d7e43":"code","bbd6e63a":"code","7d32137b":"code","cb1f0c52":"code","c0dd933b":"code","71f0e0a3":"code","3647888d":"code","5293ad9d":"code","26d25620":"code","6e04b5c9":"code","52738c82":"code","cd396cb3":"code","ade98436":"code","f9f1aa2c":"code","df3ec083":"code","f745dc93":"code","f8746b80":"code","016b1e07":"code","bfd5eb4f":"code","95fa73ea":"code","97357a48":"code","86d8171e":"code","67cb320d":"code","d31aceda":"code","e8c77f37":"code","5163f3b4":"code","82dd990d":"code","d7271285":"code","66623ffd":"code","1da6daba":"code","6e1d251d":"code","03860bb0":"code","dfbb788e":"code","c16658b8":"code","3c0c7831":"code","9bca3bdf":"code","297d7eb1":"code","1b77f2b2":"code","6bcfe004":"code","5e00ee96":"code","12a4cd84":"code","3b84307b":"code","538961d3":"code","434df022":"code","5650214d":"code","ec44f2d1":"code","f40b033c":"code","dc03eb76":"code","4bb2bbfe":"code","2f7bf070":"code","6955646b":"code","366babff":"code","c51942fe":"code","e77ee5d8":"code","1741023e":"markdown","da56fb8d":"markdown","0fdf0d1c":"markdown","deb50947":"markdown","f1a6eb68":"markdown","97273c05":"markdown","c53670ff":"markdown","25938394":"markdown","f7537ad1":"markdown","ad162033":"markdown"},"source":{"e7053600":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport os","3502b8b4":"ls \/kaggle\/input\/titanic\/","c8825ee1":"df=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\",index_col='PassengerId')","53adba20":"df.info()","d5f80165":"df.describe().T","ceb46826":"df.head()","73e4c234":"plt.figure(figsize=(15,6))\nsns.heatmap(df.corr(), annot=True, square=True, cmap='YlGnBu', linewidths=1, linecolor='black',annot_kws={'size':10})","464a776b":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(data=df,x='Sex',palette='rainbow')\nplt.title(\"Count Of Male & Female Passenger\")\nplt.subplot(1,2,2)\nsns.countplot(data=df,x='Sex',hue='Survived',palette='rainbow')\nplt.title(\"Count Of Survived Male & Female Passenger\")","249057e6":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(data=df,x='Pclass',palette='rainbow')\nplt.title(\"Count Of Passenger in Diff Class\")\nplt.subplot(1,2,2)\nsns.countplot(data=df,x='Pclass',hue='Survived',palette='rainbow')\nplt.title(\"Count Of Survived Passenger in Diff Class\")","37e1b3d9":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.boxenplot(data=df,x='Survived',y='Age',palette='rainbow')\nplt.title(\"Survived Passenger of Diff Class\")\nplt.subplot(1,2,2)\nsns.boxenplot(data=df,x='Survived',y='Fare',palette='rainbow')\nplt.title(\"Survived Passenger with Diff Ticket Fare\")","89d7ce6e":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(data=df,x='SibSp',hue='Survived',palette='rainbow')\nplt.title(\"Survived Passengers having n Number of Siblings\")\nplt.subplot(1,2,2)\nsns.countplot(data=df,x='Parch',hue='Survived',palette='rainbow')\nplt.title(\"Survived Passengers having n Number of parents\/children \")","636bfe29":"sns.countplot(data=df,x='Embarked',hue='Survived',palette='rainbow')","8c83c1d0":"df['Cabin'].value_counts()","a09a5c55":"df1=df.drop(['Name','Embarked','Ticket','Cabin'],axis=1)","61020a01":"df1.head()","775d7e43":"df1.groupby('Sex').mean()","bbd6e63a":"df1.groupby(['Pclass','Sex']).mean()","7d32137b":"df1.head()","cb1f0c52":"df1_dummies=pd.get_dummies(df1,drop_first=True)","c0dd933b":"df1_dummies.head()","71f0e0a3":"y=df1_dummies['Survived']\ndf2=df1_dummies[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex_male']]","3647888d":"from sklearn.experimental import enable_iterative_imputer\nfrom sklearn.impute import IterativeImputer\nimport numpy as np","5293ad9d":"imp = IterativeImputer(missing_values=np.nan,max_iter=10,initial_strategy='most_frequent')","26d25620":"imp.fit(df2)","6e04b5c9":"df2.info()","52738c82":"df3=pd.DataFrame(imp.transform(df2),columns=df2.columns)","cd396cb3":"df3.info()","ade98436":"df3.describe().T","f9f1aa2c":"df2.describe().T","df3ec083":"df2.columns","f745dc93":"x=df3[['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex_male']]","f8746b80":"from sklearn.preprocessing import MinMaxScaler","016b1e07":"scaler=MinMaxScaler()","bfd5eb4f":"scaler.fit(x)","95fa73ea":"x_scaled=scaler.transform(x)","97357a48":"x_scaled_df=pd.DataFrame(x_scaled,columns=x.columns)","86d8171e":"x_scaled_df.head(5)","67cb320d":"x_scaled_df.info()","d31aceda":"from sklearn.model_selection import train_test_split","e8c77f37":"X_train, X_test, y_train, y_test = train_test_split(x_scaled_df, y, test_size=0.33, random_state=42)","5163f3b4":"from sklearn.linear_model import LogisticRegression","82dd990d":"#LR=LogisticRegression(multi_class='ovr',solver='lbfgs')\nLR=LogisticRegression()","d7271285":"LR.fit(X_train,y_train)","66623ffd":"LR.score(X_train,y_train)","1da6daba":"LR.score(X_train,y_train)","6e1d251d":"predictions=LR.predict(X_test)","03860bb0":"from sklearn.metrics import classification_report","dfbb788e":"print(classification_report(y_test,predictions))","c16658b8":" from sklearn.metrics import accuracy_score","3c0c7831":"accuracy_score(y_test,predictions)","9bca3bdf":"df_test=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\",index_col='PassengerId')","297d7eb1":"df_test.head()","1b77f2b2":"df_test1=df_test.drop(['Name','Ticket','Cabin','Embarked'],axis=1)","6bcfe004":"df_test1.head()","5e00ee96":"df_test2=pd.get_dummies(df_test1,drop_first=True)","12a4cd84":"df_test2.info()","3b84307b":"df_test2.describe().T","538961d3":"df_test_imp=pd.DataFrame(imp.transform(df_test2),columns=df_test2.columns,index=df_test2.index)","434df022":"df_test_imp.describe().T","5650214d":"df_test_imp.head()","ec44f2d1":"df_test_imp_scaled=scaler.transform(df_test_imp)","f40b033c":"test_data=pd.DataFrame(df_test_imp_scaled,columns=df_test_imp.columns,index=df_test_imp.index)","dc03eb76":"test_data.head()","4bb2bbfe":"Predections = LR.predict(test_data)","2f7bf070":"Predections","6955646b":"Predections_df=pd.DataFrame(Predections,index=test_data.index,columns=['Survived'])","366babff":"Predections_df.head()","c51942fe":"sns.countplot(data=Predections_df,x='Survived')","e77ee5d8":"Predections_df.to_csv(\"\/kaggle\/working\/submission.csv\",header=True)","1741023e":"### Step 5: Scale all high intensity variables to avoid any impact due to its magnitude","da56fb8d":"### Hurrrreeeeey we are done!!!  :) \n#CheersForSolution - \n## If you found this notebook useful please Upvote and in case of any questions\/suggestions please put them down below :) ","0fdf0d1c":"### Step 3: Convert catagorial variable in to numeric","deb50947":"### Step1: Exploratory Analysis ","f1a6eb68":"### Step 6: Divide Data in to training & test data  set","97273c05":"### Step2 : Identify & Drop Variables which won't impact Survival of passenger ","c53670ff":"### Step 7:   Train Model Using Logical Regression & evaluate its accuracy ","25938394":"### Objective: To predict survival of passengers in Titatic Ship. \n\nOne can follow below 7-Steps to solutionize any Prediction Classification Problem. \n#### ===== Brief Summary\/Steps: ===== ####\n1. With the given data set, we will explore data to understand its quality, behaviour & dependencies \n2. We will Identify variables which won't contribute towards Passenger survival. We will eliminate these vairables as these won't help in quality training \n3. Convert Categorical Variable in to numeric values \n4. We will Identify variable which have missing values, if the number is quite high, we will impute data (fill in unknows\/NA with most appropiate\/probable value) \n5. We will then identify variables with values having different intensity, we will scale them to avoid any impact on model training due to its high or low magnitude \n6. After all above data preparation steps, we will start training model using Logical Classifier Algorithm and evaluate its accuracy \n7. Finally once your Model is ready! You can Predict Survical of Passengers from Test DataSet Using this Trained Model ","f7537ad1":"### Step 4: Fill in missing values \nAs we can see Age has many missing values, we will be filling in by Iterative Imputer","ad162033":"### Step 8: Predict Survical of Passengers from Test DataSet Using Trained Model "}}