{"cell_type":{"f6ae1bb1":"code","3cbe7478":"code","2c41a352":"code","dc3bfaf5":"code","8bfa9be3":"code","7cae068b":"code","7777a3df":"code","2700af07":"code","19223a15":"code","73d512ff":"code","7dd2eacd":"code","2c9b03f3":"code","b1d675f9":"code","a363a230":"code","f585fa28":"code","cc6b8d75":"code","9fdd0881":"code","0c716381":"code","6bcbd1fc":"code","ba81f3e1":"code","0fd462c3":"code","a8e98040":"code","b955f969":"code","fb95ed29":"code","6acba565":"code","98d34eaa":"code","899f5b63":"code","e0ae449a":"code","045b0167":"code","4615ba83":"code","7f41a317":"markdown","7687d131":"markdown","3254be4e":"markdown","17e22239":"markdown","40929d85":"markdown","4dbcfebe":"markdown","95c093ba":"markdown","448d8154":"markdown","f4e4be5f":"markdown","b715713f":"markdown","0cfdceda":"markdown","ba5569ce":"markdown","401784fc":"markdown","5dc3913c":"markdown","b79a0019":"markdown","49f17373":"markdown","8d9da7d4":"markdown","c5a8f13d":"markdown","148de497":"markdown","838e6abb":"markdown","6924255e":"markdown","19815084":"markdown","f727e55a":"markdown","b28f1516":"markdown","4138e540":"markdown","fce32ef1":"markdown","350a4d81":"markdown"},"source":{"f6ae1bb1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('ggplot')","3cbe7478":"df = pd.read_csv('..\/input\/videogamesales\/vgsales.csv')","2c41a352":"df.info()","dc3bfaf5":"df.describe()","8bfa9be3":"df.head()","7cae068b":"sns.heatmap(df.isnull(),cmap='Blues',cbar=False,yticklabels=False)","7777a3df":"df = df.dropna(how='any')","2700af07":"print(\"Number of games: \", len(df))\nprint(\"Number of publishers: \", len(df['Publisher'].unique()))\nprint(\"Number of platforms: \", len(df['Platform'].unique()))\nprint(\"Number of genres: \", len(df['Genre'].unique()))","19223a15":"plt.figure(figsize=(8,5))\nplt.title('Sales distribution as per year')\nax = sns.distplot(df['Year'], color = 'g')","73d512ff":"plt.figure(figsize=(12, 8))\nax = sns.countplot(x=\"Genre\", data=df, order = df['Genre'].value_counts().index, palette=\"rocket\")\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext= (0, 10), textcoords = 'offset points')\nax.set_title(label='Number of Games made as per Genre type', fontsize=20)\nax.set_xlabel(xlabel='Genre', fontsize=16)\nax.set_ylabel(ylabel='Number of Games', fontsize=16)\nplt.xticks(rotation=50)","7dd2eacd":"y = df.groupby(['Year']).sum()\ny = y['Global_Sales']\nx = y.index.astype(int)\n\nplt.figure(figsize=(14,8))\nax = sns.barplot(y = y, x = x,facecolor=(0, 0, 0, 0),\n                   linewidth=3,\n                   edgecolor=sns.color_palette(\"dark\", 10))\nax.set_xlabel(xlabel='Year', fontsize=16)\nax.set_xticklabels(labels = x, fontsize=12, rotation=50)\nax.set_ylabel(ylabel='$ Millions', fontsize=16)\nax.set_title(label='Game Sales in $ Millions Per Year', fontsize=20)\nplt.show();","2c9b03f3":"plt.figure(figsize=(14, 8))\nplt.style.use('ggplot')\nax = sns.countplot(x=\"Year\", data=df, order = df.groupby(by=['Year'])['Name'].count().sort_values(ascending=False).index,facecolor=(0, 0, 0, 0),\n                   linewidth=3,\n                   edgecolor=sns.color_palette(\"dark\", 10))\nax.set_xlabel(xlabel='Year', fontsize=16)\nax.set_ylabel(ylabel='Number of Games relased', fontsize=16)\nax.set_title(label='Number of Games released Per Year', fontsize=20)\nplt.xticks(rotation=50)","b1d675f9":"df_to_pie = df.drop(['Name','Platform', 'Genre', 'Publisher','Global_Sales','Rank'], axis = 1).groupby('Year').agg('sum')\ndf_to_pie.head()","a363a230":"index = ['NA_Sales','EU_Sales','JP_Sales','Other_Sales']\nseries = pd.DataFrame({'2006': df_to_pie.loc[[2006],:].values.tolist()[0],\n                      '2007': df_to_pie.loc[[2007],:].values.tolist()[0],\n                      '2008': df_to_pie.loc[[2008],:].values.tolist()[0],\n                      '2009': df_to_pie.loc[[2009],:].values.tolist()[0],\n                       '2010': df_to_pie.loc[[2010],:].values.tolist()[0],\n                       '2011': df_to_pie.loc[[2011],:].values.tolist()[0]}, index=index)\nseries.plot.pie(y='2006',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2006 Sales Distribution as per regions').set_ylabel('')\nseries.plot.pie(y='2007',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2007 Sales Distribution as per regions').set_ylabel('')\nseries.plot.pie(y='2008',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2008 Sales Distribution as per regions').set_ylabel('')\nseries.plot.pie(y='2009',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2009 Sales Distribution as per regions').set_ylabel('')\nseries.plot.pie(y='2010',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2010 Sales Distribution as per regions').set_ylabel('')\nseries.plot.pie(y='2011',figsize=(9, 9), autopct='%1.1f%%', colors=['orange', 'palegreen', 'aqua', 'blue'], fontsize=18, legend=False, title='2011 Sales Distribution as per regions').set_ylabel('')","f585fa28":"table = df.pivot_table('Global_Sales', index='Name', columns='Year')\ntable.columns = table.columns.astype(int)\ngames = table.idxmax()\nsales = table.max()\nyears = table.columns\ndata = pd.concat([games, sales], axis=1)\ndata.columns = ['Game', 'Global Sales']\n\n\ncolors = sns.color_palette(\"deep\", len(years))\nplt.figure(figsize=(14,10))\nax = sns.barplot(y = years , x = 'Global Sales', data=data, orient='h', palette=colors)\nax.set_xlabel(xlabel='Global Sales Per Year', fontsize=16)\nax.set_ylabel(ylabel='Year', fontsize=16)\nax.set_title(label='Highest Revenue Per Game in $ Millions Per Year', fontsize=20)\nplt.show();\ndata","cc6b8d75":"genre_comparison = df[['Genre', 'NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\ncomparison = genre_comparison.groupby(by=['Genre']).sum()","9fdd0881":"plt.figure(figsize=(12, 8))\nsns.set(font_scale=1)\nsns.heatmap(comparison,cmap=\"YlGnBu\",linewidths=.5, annot=True)\n\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.ylabel(ylabel='Genre', fontsize=16)\nplt.title('Sales comparison by Genre in different regions', fontsize=20)\nplt.show()","0c716381":"comparison_table = comparison.reset_index()\ncomparison_table = pd.melt(comparison_table, id_vars=['Genre'], value_vars=['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales'], var_name='Sale_Region', value_name='Sale_Price')\ncomparison_table.head()","6bcbd1fc":"plt.figure(figsize = (15,8))\nsns.barplot(x='Genre', y = 'Sale_Price', hue = 'Sale_Region', data = comparison_table, palette='deep')\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.xlabel(xlabel='Genre', fontsize=16)\nplt.ylabel(ylabel='Sale_Price', fontsize=16)\nplt.title('Sales comparison of different regions based on genre type', fontsize=20)","ba81f3e1":"top_sale_reg = df[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales']]\ntop_sale_reg = top_sale_reg.sum().reset_index()\ntop_sale_reg = top_sale_reg.rename(columns={\"index\": \"region\", 0: \"sale\"})\ntop_sale_reg","0fd462c3":"plt.figure(figsize = (10,7))\nax = sns.barplot(x='region',y='sale',data=top_sale_reg)\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.xlabel(xlabel='Regions', fontsize=16)\nplt.ylabel(ylabel='Sales in total', fontsize=16)\nplt.title('Overall Sales comparison of different regions.', fontsize=20)\nfor p in ax.patches:\n    ax.annotate(format(p.get_height(), '.2f'), (p.get_x() + p.get_width() \/ 2., p.get_height()), ha = 'center', va = 'center', xytext= (0, 10), textcoords = 'offset points')","a8e98040":"top_publishers = df.groupby(['Publisher']).count().iloc[:,0]\ntop_publishers = pd.DataFrame(top_publishers.sort_values(ascending=False))[0:10]\npublishers = top_publishers.index\ntop_publishers.columns = ['Releases']\n\ncolors = sns.color_palette(\"summer\", len(top_publishers))\nplt.figure(figsize=(13,8))\nax = sns.barplot(y = publishers , x = 'Releases', data=top_publishers, orient='h', palette=colors)\nax.set_xlabel(xlabel='Number of Releases', fontsize=16)\nax.set_ylabel(ylabel='Publisher', fontsize=17)\nax.set_title(label='Top 10 Total Publisher Games Released', fontsize=20)\nax.set_yticklabels(labels = publishers, fontsize=14)\nplt.show();","b955f969":"top_publishers_rev = df.groupby(['Publisher']).sum()['Global_Sales']\ntop_publishers_rev = pd.DataFrame(top_publishers_rev.sort_values(ascending=False))[0:10]\npublishers = top_publishers_rev.index\ntop_publishers_rev.columns = ['Global Sales']\n\ncolors = sns.color_palette(\"winter\", len(top_publishers_rev))\nplt.figure(figsize=(13,8))\nax = sns.barplot(y = publishers , x = 'Global Sales', data=top_publishers_rev, orient='h', palette=colors)\nax.set_xlabel(xlabel='Revenue in $ Millions', fontsize=16)\nax.set_ylabel(ylabel='Publisher', fontsize=17)\nax.set_title(label='Top 10 Total Publisher Game Revenue', fontsize=20)\nax.set_yticklabels(labels = publishers, fontsize=14)\nplt.show();","fb95ed29":"rev = df.groupby(['Genre']).sum()['Global_Sales']\nrev = pd.DataFrame(rev.sort_values(ascending=False))\ngenres = rev.index\nrev.columns = ['Revenue']\n\ncolors = sns.color_palette('Set3', len(rev))\nplt.figure(figsize=(12,8))\nax = sns.barplot(y = genres , x = 'Revenue', data=rev, orient='h', palette=colors)\nax.set_xlabel(xlabel='Revenue in $ Millions', fontsize=16)\nax.set_ylabel(ylabel='Genre', fontsize=16)\nax.set_title(label='Genres by Total Revenue Generated in $ Millions', fontsize=20)\nax.set_yticklabels(labels = genres, fontsize=14)\nplt.show();\n","6acba565":"data = pd.concat([df['Name'][0:10], df['Global_Sales'][0:10]], axis=1)\n\nplt.figure(figsize=(12,8))\ncolors = sns.color_palette(\"CMRmap\", len(data))\nax = sns.barplot(y = 'Name' , x = 'Global_Sales', data=data, orient='h', palette=colors)\nax.set_xlabel(xlabel='Revenue in $ Millions', fontsize=16)\nax.set_ylabel(ylabel='Name', fontsize=16)\nax.set_title(label='Top 10 Games by Revenue Generated in $ Millions', fontsize=20)\nax.set_yticklabels(labels = games, fontsize=14)\nplt.style.use('ggplot')\nplt.show();","98d34eaa":"EU = df.pivot_table('EU_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nNA = df.pivot_table('NA_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nJP = df.pivot_table('JP_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nOther = df.pivot_table('Other_Sales', columns='Name', index='Year', aggfunc='sum').sum(axis=1)\nyears = Other.index.astype(int)\nregions = ['European Union','Japan','North America','Other']\n\nplt.figure(figsize=(12,8))\nax = sns.pointplot(x=years, y=EU, color='mediumslateblue', scale=0.7)\nax = sns.pointplot(x=years, y=JP, color='orchid', scale=0.7)\nax = sns.pointplot(x=years, y=NA, color='midnightblue', scale=0.7)\nax = sns.pointplot(x=years, y=Other, color='thistle', scale=0.7)\nax.set_xticklabels(labels=years, fontsize=12, rotation=50)\nax.set_xlabel(xlabel='Year', fontsize=16)\nax.set_ylabel(ylabel='Revenue in $ Millions', fontsize=16)\nax.set_title(label='Distribution of Total Revenue Per Region by Year in $ Millions', fontsize=20)\nax.legend(handles=ax.lines[::len(years)+1], labels=regions, fontsize=18)\nplt.style.use('ggplot')\nplt.show();","899f5b63":"data = df\ndata = pd.DataFrame([data['EU_Sales'], data['JP_Sales'], data['NA_Sales'], data['Other_Sales']]).T\nregions = ['European Union', 'Japan', 'North America', 'Other']\nq = data.quantile(0.90)\ndata = data[data < q]\nplt.figure(figsize=(12,8))\n\ncolors = sns.color_palette(\"deep\", len(data))\nax = sns.boxplot(data=data, orient='h', palette=colors)\nax.set_xlabel(xlabel='Revenue per Game in $ Millions', fontsize=16)\nax.set_ylabel(ylabel='Region', fontsize=16)\nax.set_title(label='Distribution of Sales Per Game in $ Millions Per Region', fontsize=20)\nax.set_yticklabels(labels=regions, fontsize=14)\nplt.style.use('ggplot')\nplt.show()\n","e0ae449a":"plt.figure(figsize=(13,10))\nsns.heatmap(df.corr(), cmap = \"Blues\", annot=True, linewidth=3)","045b0167":"data_pair = df.loc[:,[\"Year\",\"Platform\", \"Genre\", \"NA_Sales\",\"EU_Sales\", \"Other_Sales\"]]\ndata_pair.head(2)","4615ba83":"plt.style.use('ggplot')\nsns.pairplot(data_pair, hue='Genre')","7f41a317":"### The graph below is to support the above heatmap. We can get the same information from this graph. Just the visualization is more clear and readable for a person who do not understand heatmaps.","7687d131":"### So when it comes to genres, Action games has made the most profit. Surely because the have also been the most released games. Maybe Nintendo sells more Action games?? It would be interesting to see that. ","3254be4e":"## Conclusion:\n\n> The dataset is really clean I am sure the uploader has worked on it. So a big upvote to the uploader. Normally I like to build predictive models and work more with Machine learning & Deep learning part of Data science. But its always good to learn & practice something different. Beautiful graphs and visualisatons always helps alot. \n\n### Let me know your views and suggestions & please upvote if you like my work. I am not excellent at data analyses but I always try ;)\n\n#### You can find my work here: https:\/\/www.kaggle.com\/vikasbhadoria\/notebooks","17e22239":"### As we can see below there are no missing values. There are a few which I will just drop as they are not much in numbers.\nTo check some steps involved in feature engineering kindly visit my this notebook: https:\/\/www.kaggle.com\/vikasbhadoria\/data-cleaning-feature-engineering-predict-profit","40929d85":"### Just to check which game exactly was the most profitable in last 20 years I have supported my graph with a pivot table below. Its always a good practice to have some pivot tables. So in 2006 Wii sports had the best sucess followed by Super Mario bros in 1985.","4dbcfebe":"### I have used this heatmap to see the sales on different regions based on Genre type. \n##### 1. The North American countries prefer Action gaming clearly. \n##### 2. EU countries alse are more inclined towards Action gaming.\n##### 3. The japanese rather prefer role-playing games.","95c093ba":"### Below I plot the distribution of game sales by region.","448d8154":"### I would like to end by visualizing pairplot between various features based on Genres. Normally I use pairplot to understand and finalize which machine learning algorithm should I use. Thats a good practice. But since there is no dependent feature in this dataset which can be predicted I would like to stop after this.","f4e4be5f":"## Visualization gives you answers to questions you didn\u2019t know you had.","b715713f":"# Video Games Sales Analysis And Visualization\n##### Hello everyone. I came across this clean dataset 'Video Game Sales' on Kaggle. At first look I thought of skipping and started looking for something else as I was looking to build a predictive model for a dataset. Later I came back here and motivated myself to get into some data analyses. This data seems perfect for that. \n","0cfdceda":"### Below I create a pointplot of total sales by region per year. As also seen in above plots. North america is leading in terms of sales all the way. Only in the start of 90's it went below Japan. ","ba5569ce":"### Looking through some numbers before visualisations to have a clear idea what are we dealing with.","401784fc":"### The graph below shows the number of games relesed every year. So there seems a direct correlation between Revenue & Games released which is obvious. The more games released the higher is the revenue.","5dc3913c":"### The graph below shows the game sales in millions every year. The period between 2006 to 2011 saw the most revenue for the gaming companies.","b79a0019":"### I found one meaningful distribution i.e 'sales distribution over years' when I drew a histogram of the whole data. ","49f17373":"### Just know your features before starting to code.\n1. Rank - Ranking of overall sales\n2. Name - The games name\n3. Platform - Platform of the games release (i.e. PC,PS4, etc.)\n4. Year - Year of the game's release\n5. Genre - Genre of the game\n6. Publisher - Publisher of the game\n7. NA_Sales - Sales in North America (in millions)\n8. EU_Sales - Sales in Europe (in millions)\n9. JP_Sales - Sales in Japan (in millions)\n10. Other_Sales - Sales in the rest of the world (in millions)\n11. Global_Sales - Total worldwide sales.","8d9da7d4":"### Some of the important visualizations in this notebook are:\n1. Number of Games made as per Genre type\n2. Pie polts to visualize the sales as per regions for the top years.\n3. Highest revenue by a single game every year with its pivot table.\n4. Sales comparison by Genre in different regions using a heatmap.\n5. Sales comparison of different regions based on genre type.\n6. Distribution of Total Revenue Per Region by Year in Millions.","c5a8f13d":"![image.png](attachment:image.png)","148de497":"### Below I have plot the top 10 games by the sales that they have generated since inception.","838e6abb":"### So these are the most active video game publishers in past 20 years. Releasing the most number of games. ","6924255e":"## Step 1: Importing all the needed libraries and loading our dataset.\n##### I am primarily going to us seaborn for my visualizations. It is an amazing open source library for Data analyses. \nread more about seaborn here: https:\/\/seaborn.pydata.org\/","19815084":"### But now when we see the most profitable publishers, there are few changes from above graph. Nintendo despite relasing much lesser games has the highest revenue. Surely they would be focusing more on quality rather then quantity.","f727e55a":"#### The goal of this notebook is to analyse the video game dataset and create some meaningful visualizations. I have tried to use various color patterns provided by seaborn. The dataset seems really good as there are no null values. The feature engineering part was not required atleast for my work.\n> I found here huge variety of seaborn colors, have a look: https:\/\/python-graph-gallery.com\/100-calling-a-color-with-seaborn\/","b28f1516":"### So the first important visualization is below which shows the exact number of games as per genre type. Clearly most of the games released in last 20 years are Action games. Strange the racing games are laggin a bit. ","4138e540":"### A simple heatmap to look at the correlations between various features.","fce32ef1":"### Using pie graphs to visualise the sales of different regions over the top 6 years. I have decided to make this only for the most profitable period of '2006-2011'. Clearly the sales in North America is much higher in all the 6 years. Maybe because of higher population. ","350a4d81":"### As seen earlier in pie graphs. The sales in North American countries are much higher. Just used a simple bargraph to visualize it."}}