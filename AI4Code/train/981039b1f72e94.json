{"cell_type":{"52a788ba":"code","139e258d":"code","4fa84e03":"code","204d3d3f":"code","63fc4336":"code","3d765861":"code","ce187173":"code","e1e355fe":"code","3de30ba4":"code","e7766135":"markdown","237ff114":"markdown","d797494e":"markdown","65e9b9cb":"markdown","b60d4d3e":"markdown","02fd677b":"markdown","eb955dd6":"markdown","1d9f8e70":"markdown","79e2e3b3":"markdown"},"source":{"52a788ba":"# Control characters.\n# See https:\/\/en.wikipedia.org\/wiki\/List_of_Unicode_characters#Control_codes\n# and https:\/\/en.wikipedia.org\/wiki\/C0_and_C1_control_codes\n# and https:\/\/en.wikipedia.org\/wiki\/Unicode_control_characters\n_control_chars_spaces = {9: 'tab', 10: 'newline', 13: 'return'}\nCONTROL_CHARS_C0 = [chr(i) for i in range(32)]\nCONTROL_CHARS_C1 = [chr(i) for i in range(127, 160)]","139e258d":"len(CONTROL_CHARS_C0 + CONTROL_CHARS_C1)","4fa84e03":"import re\n\n# From https:\/\/stackoverflow.com\/questions\/26741455\/how-to-remove-control-characters-from-string \nclean_control_char = lambda s: re.sub(\"[\\x00-\\x1F\\x7F-\\x9F]\", \"\", s) \n\ntext = \"This is a \\x00hell\\x08o wor\\x9Fld sentence\"\n\nprint(text)\nprint(len(text)) # Original text length.\n\ncleaned_text_1 = clean_control_char(text)\n\nprint(cleaned_text_1)\nprint(len(cleaned_text_1)) # Cleaned text length.","204d3d3f":"import unicodedata\n\n# From https:\/\/stackoverflow.com\/questions\/4324790\/removing-control-characters-from-a-string-in-python\nremove_control_characters = lambda s: \"\".join(ch for ch in s if unicodedata.category(ch)[0]!=\"C\")\n\nprint(text)\nprint(len(text)) # Original text length.\n\ncleaned_text_2 = remove_control_characters(text)\n\nprint(cleaned_text_2)\nprint(len(cleaned_text_2)) # Cleaned text length.","63fc4336":"# https:\/\/en.wikipedia.org\/wiki\/Unicode_control_characters#Control_pictures\n# U+240x and U+241x\nCONTROL_CHARS_C0_SYMBOLS_240_241 = [chr(i) for i in range(9216, 9248)]\n# U+242x\nCONTROL_CHARS_C0_SYMBOLS_242 = [chr(i) for i in range(9248, 9255)]\n_control_chars_C0_symbol_242 = {\n    u'\u2420': 'SYMBOL FOR SPACE', \n    u'\u2421': 'SYMBOL FOR DELETE', \n    u'\u2422': 'BLANK SYMBOL', \n    u'\u2423': 'OPEN BOX', \n    u'\u2424': 'SYMBOL FOR NEWLINE', \n    u'\u2425': 'SYMBOL FOR DELETE FORM TWO', \n    u'\u2426': 'SYMBOL FOR SUBSTITUTE FORM TWO'\n}","3d765861":"print(CONTROL_CHARS_C0_SYMBOLS_240_241 + CONTROL_CHARS_C0_SYMBOLS_242)\n\nprint(len(CONTROL_CHARS_C0_SYMBOLS_240_241)) \nprint(len(CONTROL_CHARS_C0_SYMBOLS_242))","ce187173":"# From https:\/\/en.wikipedia.org\/wiki\/List_of_Unicode_characters#Basic_Latin \n\n# [' ', '!', '\"', '#', '$', '%', '&', \"'\", '(', ')', '*', '+', ',', '-', '.', '\/']\nBASIC_ASCII_PUNCTUATION_SYMBOLS_1 = [chr(i) for i in range(32,48)] \n# [':', ';', '<', '=', '>', '?', '@']\nBASIC_ASCII_PUNCTUATION_SYMBOLS_2 = [chr(i) for i in range(58,65)] \n# ['[', '\\\\', ']', '^', '_', '`']\nBASIC_ASCII_PUNCTUATION_SYMBOLS_3 = [chr(i) for i in range(91,97)] \n# ['{', '|', '}', '~']\nBASIC_ASCII_PUNCTUATION_SYMBOLS_4 = [chr(i) for i in range(123,127)] \n# All ASCII punctuation\nBASIC_ASCII_PUNCTUATION_SYMBOLS_ALL = BASIC_ASCII_PUNCTUATION_SYMBOLS_1 + BASIC_ASCII_PUNCTUATION_SYMBOLS_2 \\\n    + BASIC_ASCII_PUNCTUATION_SYMBOLS_3 + BASIC_ASCII_PUNCTUATION_SYMBOLS_4\n\n# Digits, 0-9\nBASIC_ASCII_DIGITS = [chr(i) for i in range(48,58)] \n\n# English alphabet\nBASIC_ASCII_LETTERS_UPPERCASE = [chr(i) for i in range(65,91)]\nBASIC_ASCII_LETTERS_LOWERCASE = [chr(i) for i in range(97,123)]\n\nBASIC_LATIN = BASIC_ASCII_PUNCTUATION_SYMBOLS_1 + BASIC_ASCII_DIGITS \\\n    + BASIC_ASCII_PUNCTUATION_SYMBOLS_2 + BASIC_ASCII_LETTERS_UPPERCASE \\\n    + BASIC_ASCII_PUNCTUATION_SYMBOLS_3 + BASIC_ASCII_LETTERS_LOWERCASE \\\n    + BASIC_ASCII_PUNCTUATION_SYMBOLS_4","e1e355fe":"from unicodedata import normalize\n\n# From http:\/\/unicode.org\/charts\/PDF\/UFF00.pdf\nBASIC_LATIN_FULLWIDTH = [chr(i) for i in range(65281, 65375)]\n\n# Sanity check. \nfor normal, full in zip(BASIC_LATIN[1:], BASIC_LATIN_FULLWIDTH): # Skip the whitespace.\n    normalized_form = normalize('NFKD', full)\n    print(normal==full, # Diff chars.\n          normal==normalized_form, # Same char after normalization.\n          normal, full, normalized_form \n         )","3de30ba4":"# From https:\/\/cs.stanford.edu\/people\/miles\/iso8859.html#ASCII-SPECIAL\n\n# From https:\/\/eastmanreference.com\/list-of-html-entity-names-and-numbers \n\n# From https:\/\/www.freeformatter.com\/html-entities.html\n\n# https:\/\/www.w3.org\/MarkUp\/HTMLPlus\/htmlplus_13.html\n\n# https:\/\/www.bitdegree.org\/learn\/html-symbols\n\n# https:\/\/entitycode.com\/\n\n# https:\/\/www.fileformat.info\/format\/w3c\/htmlentity.htm\n\n# https:\/\/www.tutorialrepublic.com\/html-reference\/html-character-entities.php\n\n# http:\/\/www.cs.unc.edu\/~tell\/testpages\/sci_symbols.html\n\n# https:\/\/en.wikipedia.org\/wiki\/List_of_XML_and_HTML_character_entity_references\n\n# https:\/\/github.com\/mrkkrp\/html-entity-map","e7766135":"# Entity Names\n\nThere are ","237ff114":"Unicode has 7 character categories, and each category has subcategories:\n\n- **Letter (L)**: lowercase (Ll), modifier (Lm), titlecase (Lt), uppercase (Lu), other (Lo)\n- **Mark (M)**: spacing combining (Mc), enclosing (Me), non-spacing (Mn)\n- **Number (N)**: decimal digit (Nd), letter (Nl), other (No)\n- **Punctuation (P)**: connector (Pc), dash (Pd), initial quote (Pi), final quote (Pf), open (Ps), close (Pe), other (Po)\n- **Symbol (S)**: currency (Sc), modifier (Sk), math (Sm), other (So)\n- **Separator (Z)**: line (Zl), paragraph (Zp), space (Zs)\n- **Other (C)**: control (Cc), format (Cf), not assigned (Cn), private use (Co), surrogate (Cs)\n\n### Unicode assigned 65 code points under the Others->Control (`Cc`) category for compatibility with ISO\/IEC 2022.","d797494e":"Latin-1 ","65e9b9cb":"# Introduction\n\nIn Natural Language Processing (NLP), we deal with Unicode texts today but before we have a unified character set brought to us from the [Unicode Consortium](https:\/\/home.unicode.org\/), we had a [plethora of different encodings](https:\/\/en.wikipedia.org\/wiki\/Character_encoding#Common_character_encodings). \n\nThis a nice blogpost by David C. Zentgraf describing how we used get pass all the messy string encode\/decode operations in https:\/\/kunststube.net\/encoding\/.\n\n\nBut with Python 3+, we are blessed with the default `utf-8` encoding! In this notebook, we will dig deeper into what's inside Unicode and hopefully this information can help you in your NLP projects. \n\n","b60d4d3e":"# Control Characters\n\nThe C0 and C1 control character (aka. control code) sets define codes for \"extra-linguistics\" texts use for the computer systems; e.g. we need a code to represent \"deletion\" of a character (`DEL`), the escape key on our keyboards (`ESC`). \n\nHowever, do note that there whitespaces are also part of the control codes, the common horizontal tab, new line and return carriage character and in most cases we want to keep them in our texts in NLP. \n\nThe following is a list of control characters assigned in the ASCII code space under ISO\/IEC 2022. ","02fd677b":"## Control Code Icons\n\nInterestingly, Unicode has a set of printable characters to represent the C0 control characters. They are visual representations, not the actual control codes themselves. In this character range, \n- U+240x and U+241x maps directly to the first 32 control characters, and\n- another 7 special icons in the U+242x range","eb955dd6":"# Basic Latin (ASCII)\n\n\nWikipedia puts it well, https:\/\/en.wikipedia.org\/wiki\/Basic_Latin_(Unicode_block)\n\n> The Basic Latin or C0 Controls and Basic Latin Unicode block is the first block of the Unicode standard, and the only block which is encoded in one byte in UTF-8. The block contains all the letters and control codes of the ASCII encoding. It ranges from U+0000 to U+007F, contains 128 characters and includes the C0 controls, ASCII punctuation and symbols, ASCII digits, both the uppercase and lowercase of the English alphabet and a control character.\n\n\n### TL;DR\n\nThe `Basic Latin` block in the Unicode is made up of these sub-blocks\n- C0 Control Characters\n- ASCII Punctuation & Symbols (including whitespace)\n- ASCII Digits\n- (*More*) ASCII Punctuation & Symbols\n- 26 upercase letters from the English alphabet\n- (*Even more*) ASCII Punctuation & Symbols\n- 26 lowercase letters from the English alphabet\n- (*Yet again, more*) ASCII Punctuation & Symbols\n\n#### Cut-away: I'm curious why aren't the punctuations and symbols put together in one contiguous block @_@\n","1d9f8e70":"# Fullwidth ASCII variants\n\nThe same characters in the ASCII Basic Latin block in Unicode have their corresponding full-width form, except whitespace.\n\n\n","79e2e3b3":"## [Data Janitor] Removing Control Chars \n\nTo remove control chars, we usually do one of these munging steps:"}}