{"cell_type":{"43317691":"code","85a144da":"code","b4d81089":"code","36915ae7":"code","9862814e":"code","d21a4ac3":"code","774574d6":"code","75461df1":"code","6d31e2d6":"code","4f19fe2f":"code","441eb4e6":"markdown","f61b53e1":"markdown","fca8b78d":"markdown","5c973e8d":"markdown","6a8ea9db":"markdown","c5e021d5":"markdown"},"source":{"43317691":"!pip install Wikipedia-API > \/dev\/null","85a144da":"import pandas as pd\nimport numpy as np\nimport wikipediaapi\nfrom tqdm.notebook import tqdm\n\npd.set_option('max_columns', 500)","b4d81089":"wiki = wikipediaapi.Wikipedia('en')\ncat = wiki.page('Category:Operating roller coasters')\nlen(cat.categorymembers)","36915ae7":"def parse_coaster_infobox(url, filter_cols=False):\n    \"\"\"\n    Takes a coaster wikipedia url.\n    Pulls info from the infobox and returns as a dataframe\n    \"\"\"\n    df = pd.read_html(url)[0]\n    mycoaster = df.columns[0]\n    df = df[df.columns[:2]]\n    df.columns = ['Coaster','Value']\n    df = df.set_index('Coaster')\n    df = df.loc[~df.index.isna()]\n    if filter_cols:\n        MAIN_KEYS = ['Length', 'Speed', 'Location', 'Coordinates', 'Status', 'Opening date',\n               'General statistics', 'Type', 'Manufacturer', 'Height restriction',\n               'Model', 'Height', 'Inversions', 'Lift\/launch system', 'Cost', 'Trains',\n               'Park section', 'Duration', 'Capacity', 'G-force', 'Designer',\n               'Max vertical angle', 'Drop', 'Soft opening date',\n               'Fast Lane available', 'Replaced', 'Track layout']\n\n        FILTERED_KEYS = [v for v in df.index if v in MAIN_KEYS]\n        df = df.loc[FILTERED_KEYS]\n    df = df.T\n    df.index = [mycoaster]\n    return df","9862814e":"ds = []\nfor coaster, page in tqdm(cat.categorymembers.items()):\n    url = page.fullurl\n    ds.append(parse_coaster_infobox(url, filter_cols=True))\ncoaster_db = pd.concat(ds)","d21a4ac3":"# ds_new","774574d6":"coaster_db = pd.concat(ds_new)","75461df1":"# Save off our results\ncoaster_db.to_csv('coaster_db.csv', index_label='Coaster')\ncoaster_db = pd.read_csv('coaster_db.csv')","6d31e2d6":"def parse_coordinates(df):\n    \"\"\"\n    Messy clean of coordinates - fix and make better later\n    \"\"\"\n    coaster_db['Coordinates'] = coaster_db['Coordinates'].str.split('\/').str[-1]\n    coaster_db['lat_str'] = coaster_db['Coordinates'].str.split(' ').str[1]\n    coaster_db['lon_str'] = coaster_db['Coordinates'].str.split(' ').str[2]\n\n    coaster_db['lat'] = coaster_db['lat_str'].str[:-2].str.strip('\\ufeff').astype('float')\n    coaster_db['lon'] = coaster_db['lon_str'].str[:-2].str.strip('\\ufeff').str.strip('\u00b0E[').str.strip('\u00b0W').astype('float')\n\n    return df\n\ncoaster_db = parse_coordinates(coaster_db)","4f19fe2f":"import plotly.express as px\nimport pandas as pd\n\nfig = px.scatter_geo(coaster_db,lat='lat',lon='lon')\nfig.update_layout(title = 'Coaster map', title_x=0.5)\nfig.show()","441eb4e6":"# Parse Coords","f61b53e1":"# TODO\n- Go through entire list of coasters from wikipedia category\n    - https:\/\/en.wikipedia.org\/wiki\/Category:Roller_coaster_introductions_by_year\n- Parse data:\n    - years\/dates\n    - Capacity\n    - Coordinates","fca8b78d":"## We have 692 Operating Coasters","5c973e8d":"# Building a Roller Coaster Dataset from Wikipedia\n\n![test](https:\/\/external-content.duckduckgo.com\/iu\/?u=http%3A%2F%2Fwww.travelandleisure.com%2Fsites%2Fdefault%2Ffiles%2Fstyles%2F1600x1000%2Fpublic%2F1475074126%2Frollercoaster-KIDNEY0916.jpg%3Fitok%3DbpPex-qD&f=1&nofb=1)\n\nIn this notebook I'll attempt to gather data about roller coasters!\n\nThis code was created during a live stream on twitch. Check out my channel here: https:\/\/www.twitch.tv\/medallionstallion_","6a8ea9db":"# Trying to plot all the coaster on a map\n- TODO - fix this later!","c5e021d5":"# Gathering from Wikipedia\n- Category:Operating roller coasters\n\nWhat are we going to do here?\n1. Get a list of all the roller coasters from the category.\n2. Iterate over each and load the page using the wiki api\n3. Pull key statistics and gather into a dataset\nFeatures:\n    - Location\n    - Coords\n    - Height\n    - Construction (Wood \/ Steel)\n    - Dates\n        - Opening date\n        - Closing date\n    - Cost\n    - Speed"}}