{"cell_type":{"b14dc239":"code","d3e32b48":"code","21c5a79b":"code","4506d35f":"code","d6898ebd":"code","0ed02ac8":"code","15c6e656":"code","ec14b26f":"code","9f68b08b":"code","4bcb5ffc":"code","e8422c7a":"code","d3b8c051":"code","75969c90":"code","9cac5457":"code","605c372f":"code","f9f3667d":"code","67f7ec30":"code","59ee83de":"code","4b0c60b0":"code","ef50280b":"code","c4d020cc":"code","55ed8abd":"code","1e9996d3":"code","7205b5f4":"code","876915c4":"code","2012ecef":"code","885bc7f3":"code","796ffda3":"code","7f794076":"code","28d25bd9":"code","eae4df9c":"code","7685fa09":"code","72ac7c65":"code","21f7afe3":"markdown","01b352d0":"markdown","047ca677":"markdown","698017a4":"markdown"},"source":{"b14dc239":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d3e32b48":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","21c5a79b":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest= pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ngender=pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')","4506d35f":"train.head()","d6898ebd":"test.head()","0ed02ac8":"train.isnull().sum()","15c6e656":"test.isnull().sum()","ec14b26f":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","9f68b08b":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='winter')","4bcb5ffc":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=train,palette='winter',hue='Sex')","e8422c7a":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=train,palette='rainbow')","d3b8c051":"plt.figure(figsize=(12,6))\nsns.distplot(train['Age'].dropna(),kde=False,color='darkred',bins=30)","75969c90":"train['Age'].hist(bins=30,color='darkred',alpha=0.7)","9cac5457":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train,palette='rainbow')\n","605c372f":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","f9f3667d":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","67f7ec30":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='winter')","59ee83de":"train.drop('Cabin',axis=1,inplace=True)","4b0c60b0":"train.head()","ef50280b":"train.describe()","c4d020cc":"train.info()","55ed8abd":"train.dropna(inplace=True)","1e9996d3":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","7205b5f4":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","876915c4":"train.head()","2012ecef":"from sklearn.model_selection import train_test_split","885bc7f3":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1), \n                                                    train['Survived'], test_size=0.30, \n                                                    random_state=101)","796ffda3":"from sklearn.linear_model import LogisticRegression","7f794076":"lr= LogisticRegression()\nlr.fit(X_train,y_train)","28d25bd9":"pred = lr.predict(X_test)","eae4df9c":"from sklearn.metrics import classification_report,confusion_matrix","7685fa09":"print(classification_report(y_test,pred))","72ac7c65":"print(confusion_matrix(y_test,pred))","21f7afe3":"**Viewing train and test data**","01b352d0":"**Building ML model**","047ca677":"#checking missing values\n","698017a4":"**Data cleaning**"}}