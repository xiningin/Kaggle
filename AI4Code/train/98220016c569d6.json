{"cell_type":{"a9539942":"code","5e4d1b2c":"code","75053984":"code","9aa7b88c":"code","99508b28":"code","08b956c2":"code","4010a06e":"code","8efe12f5":"code","d71c7d6e":"code","98b21c42":"code","aa2209f4":"code","6fd4ad08":"code","3aeb4ff8":"code","69938305":"code","213908f9":"code","a16ba6ab":"code","12f17dfb":"code","c7db7210":"code","1d1e59b1":"code","7520d4ff":"code","57b1a049":"code","90394938":"code","0f579898":"code","39125e3a":"code","ce184d5e":"code","e7b7453f":"code","4f0b5223":"code","f079cd3a":"code","6d98542f":"code","b3f5c6bb":"code","ebfb61c6":"markdown","32a91760":"markdown","97711fda":"markdown","56922b7c":"markdown","dd3ef716":"markdown"},"source":{"a9539942":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","5e4d1b2c":"test = pd.read_csv('..\/input\/test.csv')\ntest","75053984":"test.shape","9aa7b88c":"train = pd.read_csv('..\/input\/train.csv')\n#train.head()\ntrain.describe()","99508b28":"train['Sex'] = train.Sex.map({'male': 0, 'female': 1})\ntrain.head()","08b956c2":"train_1 = train[['Pclass', 'SibSp', 'Sex', 'Embarked']]\ntrain_1.head()","4010a06e":"train_1.dropna(inplace=True)\ntrain_1.shape\ntrain","8efe12f5":"vals1 = train\nvals2 = test\nvals1.info()","d71c7d6e":"vals1['Sex'].value_counts()","98b21c42":"vals1['Embarked'].value_counts()","aa2209f4":"vals1.isnull().sum()","6fd4ad08":"vals2.isnull().sum()","3aeb4ff8":"vals1['Age'] = vals1['Age'].fillna(vals1['Age'].median())\nvals1['Fare'] = vals1['Fare'].fillna(vals1['Fare'].median())\n\nvals2['Age'] = vals2['Age'].fillna(vals2['Age'].median())\nvals2['Fare'] = vals2['Fare'].fillna(vals2['Fare'].median())\nvals1.isnull().sum()","69938305":"train = vals1\ntest = vals2\ntrain.isnull().sum()","213908f9":"y_train = train.Survived\ndef sex_to_val(sex):\n    if sex == 'male':\n        return 0\n    else:\n        return 1\ntrain['Sex_val'] = train['Sex'].apply(sex_to_val)\ntest['Sex_val'] = test['Sex'].apply(sex_to_val)\n        ","a16ba6ab":"import matplotlib.pyplot as plt;\nimport seaborn as sns\n%matplotlib inline","12f17dfb":"sns.distplot(train.Age)","c7db7210":"sns.scatterplot(x=train.Age, y=train.Survived)","1d1e59b1":"sns.countplot('Pclass',hue='Survived',data=train)\n#SUrvivers per class","7520d4ff":"sns.countplot('Parch',hue='Survived',data=train)\n#Survvivors per Parch","57b1a049":"sns.countplot('Sex_val',hue='Survived',data=train)\n#Sex_Vals after Normalizing sex to 1 and 0","90394938":"sns.countplot(x=\"Survived\", hue= 'Pclass',data = train)\n\n#From the below count plot could see that people who have not survived are from lower class","0f579898":"from sklearn.linear_model import LogisticRegression","39125e3a":"Logic = LogisticRegression()\ntrain.describe(include=['O'])","ce184d5e":"y = train['Survived']\nX_train = train[['Pclass', 'SibSp', 'Parch', 'Age', 'Sex_val', 'Fare']]\nX_test = test[['Pclass', 'SibSp', 'Parch', 'Age', 'Sex_val', 'Fare']]\nLogic.fit(X_train,y)","e7b7453f":"pred = Logic.predict(X_test)\npred","4f0b5223":"passId = test.PassengerId","f079cd3a":"randomPredict = [int(id) % 2 for id in passId]","6d98542f":"submission = pd.DataFrame({'PassengerId': passId, 'Survived': pred})\nsubmission","b3f5c6bb":"submission.to_csv('submissions.txt', index=False)","ebfb61c6":"## Data Wrangling","32a91760":"## Modeling\nbuild a linear model import logisticRegression","97711fda":"Try ","56922b7c":"## Submission","dd3ef716":"## Data Visualization"}}