{"cell_type":{"5b77fe13":"code","865d4303":"code","9eeb7aba":"code","1fc33fe7":"code","2dfd83ae":"code","797f4ad2":"code","3a866984":"code","03a1867b":"code","1be2a433":"code","4e37e353":"code","a4e5ede4":"code","7b7b56b5":"code","0e575bbf":"code","2eb485cd":"code","fc4b9284":"code","448a7789":"code","777306a5":"code","23e6910f":"code","62bff7c7":"code","e79ea21a":"code","0ff561ce":"code","cbce969e":"code","8331e803":"code","1fc3f68e":"code","fe207935":"code","a3ed6810":"code","4509fc1a":"code","6a54d398":"code","cdcf173d":"code","39a6781a":"code","6e03404f":"code","5ae41be0":"code","c4c06128":"code","d4a20045":"code","d83079c1":"code","ae65bdb0":"code","0de4aee2":"code","0f857736":"code","2eebc8c4":"code","b8951349":"code","815721eb":"markdown","d9274bdd":"markdown","ee1e9ffe":"markdown"},"source":{"5b77fe13":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import silhouette_score\nimport plotly.express as px","865d4303":"df = pd.read_csv('..\/input\/unsupervised-learning-on-country-data\/Country-data.csv')","9eeb7aba":"df.head()","1fc33fe7":"df.info()","2dfd83ae":"df.isnull().sum()","797f4ad2":"plt.figure(figsize=(12,8),dpi=150)\nsns.heatmap(data=df.corr(),annot = True)","3a866984":"plt.figure(figsize=(10,6))\nsns.scatterplot(data=df, x='income',y='life_expec',alpha=0.5)\nplt.title('Relation between Life Expectancy and Income')\nplt.xlabel('Income')\nplt.ylabel('Life Expectancy')\nplt.show()","03a1867b":"#Based on the scatter plot, there is an outlier with a very low life Expectancy\ndf[df['life_expec']<40]","1be2a433":"#Based on the scatter plot, there is an outlier with a very high Income\ndf[df['income']>120000]\n","4e37e353":"plt.figure(figsize=(10,6))\nsns.histplot(data=df, x='income',bins=30)\nplt.title('Distirbution of Income')\nplt.xlabel('Income')\nplt.show()","a4e5ede4":"plt.figure(figsize=(10,6))\nsns.scatterplot(data=df, x='gdpp',y='inflation',alpha=0.5)\nplt.title('Relation between GDP and Inflation')\nplt.xlabel('GDP')\nplt.ylabel('Inflation')\nplt.show()","7b7b56b5":"##Based on the scatter plot, there is an outlier with a very high Inflation Rate","0e575bbf":"plt.figure(figsize=(10,6))\nsns.scatterplot(data=df, x='income',y='inflation',alpha=0.5)\nplt.title('Relation between Income and Inflation')\nplt.xlabel('Income')\nplt.ylabel('Inflation')\nplt.show()","2eb485cd":"plt.figure(figsize=(10,6))\nsns.scatterplot(data=df, x='income',y='child_mort',alpha=0.5)\nplt.title('Relation between Income and Child Mortality')\nplt.xlabel('Income')\nplt.ylabel('Child Mortality')\nplt.show()","fc4b9284":"child_mortality = df[df['child_mort'] > df['child_mort'].mean()]","448a7789":"# The order of countries with child mortality rate above the average (in order)\nchild_mortality.sort_values(by='child_mort',ascending=False)","777306a5":"#Scaling data\nscaler = StandardScaler()\n","23e6910f":"scaled_df = scaler.fit_transform(df.drop('country',axis=1))","62bff7c7":"ssd = []\nsil = []\nfor k in range(1,30):\n    model = KMeans(n_clusters= k)\n    model.fit(scaled_df)\n    labels = model.labels_\n    ssd.append(model.inertia_)\n    if k > 1:\n        sil.append(silhouette_score(scaled_df,labels))\n","e79ea21a":"# Using the elbow method to select number of clusters\nplt.figure(figsize=(12,8),dpi=150)\nplt.plot(range(1,30),ssd,'o--')\nplt.title('Elbow method to find number of clusters')\nplt.xlabel('Number of Clusters')\nplt.ylabel('KMeans Inertia')\nplt.show()","0ff561ce":"plt.figure(figsize=(12,8),dpi=150)\nplt.plot(np.arange(2,30,1), sil, 'o--')\nplt.title('Silhouette Score')\nplt.show()","cbce969e":"# 3 cluster chosen\nk_model = KMeans(n_clusters=3)\nk_model.fit(scaled_df)\nlabels = k_model.predict(scaled_df)","8331e803":"df['labels'] = labels","1fc3f68e":"df","fe207935":"plt.figure(figsize=(10,6),dpi=150)\nsns.scatterplot(data=df, x='gdpp',y='inflation',alpha=0.5,hue='labels',palette='Set1')\nplt.title('Relation between GDP and Inflation with Labels')\nplt.xlabel('GDP')\nplt.ylabel('Inflation')\nplt.show()","a3ed6810":"df.corr()['labels'].sort_values(ascending=False)\n# Based on labels and correlations life expectancy, GDP and income have the highest impact on segmenting the countries.","4509fc1a":"# adding country iso codes too dataframe (to visualize with plotly)\niso_codes = pd.read_csv('..\/input\/country-iso-codes\/country_iso_codes.csv')\n","6a54d398":"#Adding iso codes to the original dataframe\niso_map = iso_codes.set_index('Country')['ISO Code'].to_dict()","cdcf173d":"df['ISO CODE']= df['country'].map(iso_map)","39a6781a":"df","6e03404f":"fig = px.choropleth(df, locations='ISO CODE',\n                    color='labels', \n                    hover_name=\"country\", \n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.show()","5ae41be0":"pca = PCA()\npca.fit(scaled_df)\npca_data = pca.transform(scaled_df)","c4c06128":"#Calculating the percentage of varation for pca\nper_var = np.round(pca.explained_variance_ratio_*100,decimals=1)","d4a20045":"#plotting the Scree plot\npca_labels = ['PC' + str(x) for x in range(1,len(per_var)+1)]\nplt.figure(figsize=(10,6),dpi=150)\nplt.bar(x=range(1,len(per_var)+1),height=per_var,tick_label=pca_labels)\nplt.ylabel('Percentage of Variance')\nplt.xlabel('Principal Component')\nplt.title('Scree Plot')\nplt.show()\n                                        \n                                           ","d83079c1":"#Based on scree plot, we use PC1 and PC2 and draw PCA plot\npca_model = PCA(n_components=2)\ndf_pca = pca_model.fit_transform(scaled_df)","ae65bdb0":"df_pca_= pd.DataFrame(df_pca, columns=['pca1', 'pca2'])","0de4aee2":"df_pca_","0f857736":"df_pca_['labels']= df['labels']\ndf_pca_['country'] = df['country']\ndf_pca_","2eebc8c4":"plt.figure(figsize=(10,6),dpi=150)\nax = sns.scatterplot(data=df_pca_,x='pca1', y='pca2', hue='labels',palette='Set1')","b8951349":"df.groupby('labels').mean()","815721eb":"# 1. Using KMeans Cluster","d9274bdd":"# Principal Component Analysis","ee1e9ffe":"# Plotting the labels on map"}}