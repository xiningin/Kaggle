{"cell_type":{"09a0cffa":"code","ed345540":"code","50239472":"code","09bd5ac9":"code","a7efae75":"code","30482762":"code","eb20d65b":"code","8ee548d5":"code","05d569d9":"code","ff656d88":"code","bcedc0b3":"code","b362eb05":"code","af000e3b":"code","26221594":"code","aac8e6da":"code","130db8bc":"code","5ab4e84e":"code","7a558949":"code","9130e31e":"markdown","9a133da3":"markdown","441aee5c":"markdown","94106ca4":"markdown","1f224341":"markdown","83608c17":"markdown","98fd0c8f":"markdown"},"source":{"09a0cffa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\nimport seaborn as sns\n","ed345540":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/input\/learn-together\/'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","50239472":"#Read the files train.csv and test.csv into variables df_train_data, and df_test_data.\ntrain_data = pd.read_csv('..\/input\/learn-together\/train.csv')\ntest_data = pd.read_csv('..\/input\/learn-together\/test.csv')","09bd5ac9":"train_data.head()","a7efae75":"test_data.head()","30482762":"print(\"train dataset shape \"+ str(train_data.shape))\nprint(\"test dataset shape \"+ str(test_data.shape))","eb20d65b":"train_data.info()","8ee548d5":"test_data.info()","05d569d9":"#train_data.describe()","ff656d88":"#test_data.describe()","bcedc0b3":"X = train_data.copy()\nX = X.drop(columns=['Cover_Type'])\ny = train_data[['Cover_Type']]","b362eb05":"X.columns","af000e3b":"colorado_features = ['Id', 'Elevation', 'Aspect', 'Slope',\n       'Horizontal_Distance_To_Hydrology', 'Vertical_Distance_To_Hydrology',\n       'Horizontal_Distance_To_Roadways', 'Hillshade_9am', 'Hillshade_Noon']\nX = X[colorado_features]","26221594":"from sklearn.tree import DecisionTreeRegressor\n\n# Define model. Specify a number for random_state to ensure same results each run\ncolorado_model = DecisionTreeRegressor(random_state=1)\n\n# Fit model\ncolorado_model.fit(X, y)","aac8e6da":"print(\"Making 5 predictions\")\nprint(X.head())\nprint(\"The predictions are\")\nprint(colorado_model.predict(X.head()))","130db8bc":"print(\"OK\")\nprint(X,\"The predictions are    \", colorado_model.predict(X))\nprint()","5ab4e84e":"def evaluate_metric_score(y_true, y_pred):\n    if y_true.shape[0] != y_pred.shape[0]:\n        raise Exception(\"Sizes do not match\")\n        return 0\n    else:\n        size = y_true.shape[0]\n        matches = 0\n        y_true_array = np.array(list(y_true))\n        y_pred_array = np.array(list(y_pred))\n        for i in range(0, size):\n            if y_true_array[i]==y_pred_array[i]:\n                matches = matches + 1\n        return mathces\/size","7a558949":"output = pd.DataFrame({'Id': X.index,\n                       'Cover_Type': test_preds})\noutput.to_csv('submission1.csv', index=False)\noutput.head()","9130e31e":"Read the data","9a133da3":"## Loading data","441aee5c":"# Competition Mettric: Categorization Accuracy, percentage of correct predictions","94106ca4":"## Exploratary data analysis\n\nGoals of Excecution Data Analysis\nSize of data\nProoperties of the target variable (check for issues like high class imbalance, skewed distribution in a regression\nProperties of the features: Finding sime peculiarities and dependecies between features and target variable is always useful\nGenerate ideas for feature engineering and future ypothesis\n","1f224341":"## Importing libraries","83608c17":"# Introduction","98fd0c8f":"### Size of the data"}}