{"cell_type":{"c82b14ea":"code","46973541":"code","2abc24cb":"code","b9d7e20a":"code","68b88c2c":"code","1cd78a25":"code","6148d3ff":"code","df353fe0":"code","37144193":"code","5be8c762":"code","61525d7d":"code","ac927f6f":"code","34b5aaa9":"code","dabe9759":"code","9b1d33fa":"code","f42b36db":"code","1c94b485":"code","5d26bdcf":"markdown","455453b4":"markdown","2867bd28":"markdown","6dde8b0f":"markdown"},"source":{"c82b14ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","46973541":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go","2abc24cb":"url='..\/input\/cristiano-ronald-vs-lionel-messi-weekly-updated\/cristiano_vs_messi.csv'\ndf=pd.read_csv(url)","b9d7e20a":"df.info()","68b88c2c":"df.head(30)","1cd78a25":"df.columns","6148d3ff":"df['comp']=df['comp'].ffill()\ndf['round']=df['round'].ffill()\ndf['date']=df['date'].ffill()\ndf['venue']=df['venue'].ffill()\ndf['opp']=df['opp'].ffill()\ndf.info()\n","df353fe0":"df.head(30)","37144193":"df['min']=df['min'].apply(lambda x:x.replace(\"'\",''))\ndf['min']=df['min'].apply(lambda x:x.replace(\"+\",''))\ndf['min'].unique()","5be8c762":"df.info()","61525d7d":"df['min']=pd.to_numeric(df['min'])\ndf['time_class']=df['min'].apply(lambda x:'first_half' if x<=45 else ( 'secound_half' if 45<x<=90 else 'extra_time'))\ndf.head(10)","ac927f6f":"df['assist']=df['assisted'].fillna(0)\ndf['solo']=df['assist'].apply(lambda x:'solo' if x==0 else 'assisted')\ndf.head()","34b5aaa9":"from datetime import date\ndf['date']=pd.to_datetime(df['date'])\n#== \nL = ['year', 'month', 'day', 'dayofweek', 'dayofyear', 'weekofyear', 'quarter']\ndf = df.join(pd.concat((getattr(df['date'].dt, i).rename(i) for i in L), axis=1))","dabe9759":"df['dayofweek']=pd.to_numeric(df['dayofweek'])\ndf['dayofweek']=df['dayofweek'].apply(lambda x:x+1)\ndf['dayofweek'].unique()\ndf['goal']=df['goal']=1","9b1d33fa":"df.head()","f42b36db":"df['player'].value_counts()","1c94b485":"df_ronaldo=df.loc[df['player']=='ronaldo']\ndf_messi=df.loc[df['player']=='messi']\n#===== \nronaldo_solo=df_ronaldo[df_ronaldo['solo']=='solo'] \nronaldo_assisted=df_ronaldo[df_ronaldo['solo']=='assisted'] \nslices=[len(ronaldo_solo),len(ronaldo_assisted)]\nlabels=['solo','assisted']\n#==== \nmessi_solo=df_messi[df_messi['solo']=='solo'] \nmessi_assisted=df_messi[df_messi['solo']=='assisted'] \nslices1=[len(messi_solo),len(messi_assisted)]\nlabels1=['solo','assisted']\n#===\nfig, axes = plt.subplots(1, 2, figsize=(15, 5), sharey=False)\nfig.suptitle('Cristiano Vs Messi\/Solo&assisted')\naxes[0].pie(slices,labels=labels,startangle=90,shadow=1,explode=(0,0.4),autopct='%1.2f%%',colors=['#808080','#F2EBED']);\naxes[0].set_title('Cristiano Ronaldo')\naxes[1].pie(slices1,labels=labels1,startangle=90,shadow=1,explode=(0,0.4),autopct='%1.2f%%',colors=['#7868DF','#DF6870']);\naxes[1].set_title('Lionel Messi');","5d26bdcf":"# Manipulate","455453b4":"convert min from object to time(numeric)","2867bd28":"## fill nan goals values\nif player score more than one goal on game only min and type filled","6dde8b0f":"## Goals"}}