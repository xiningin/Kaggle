{"cell_type":{"94b6ee92":"code","424ea9e7":"code","7559213f":"code","1f861da9":"code","e829f883":"code","e23a0b59":"code","50d7839a":"markdown","ac4fb42d":"markdown","ebe6dcc7":"markdown","9d2d81c8":"markdown","80ce3ad4":"markdown","63dfa702":"markdown"},"source":{"94b6ee92":"import os\nimport glob","424ea9e7":"paths = os.listdir('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification')\npaths","7559213f":"#create a space to save the files with .csv tag\ncsv_files = [] \n\n#iterate through the paths variable set in the initial step and append any path with the csv tag to the list we just made\nfor path in paths:\n    if path.endswith(\".csv\"):\n        csv_files.append(path)\n        \n#prints out the array\ncsv_files","1f861da9":"#remember to have imported glob at this point\n\n# glob.glob('file-location\/*desired-tag')\nglob.glob('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/*.csv')","e829f883":"#I am going to switch to grabbing the dcm tag because it is more relevant with this dataset \n\n#glob.glob('parent-dir-location\/**\/*.target-tag')\nglob.glob(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/test\/00001\/**\/*.dcm\", recursive=True)\n","e23a0b59":"# **\/* ","50d7839a":"> so here,","ac4fb42d":"> stepping up the complexity by just a notch, we can use this functionality recursively to grab any type of file from all child directories of a parent","ebe6dcc7":"> indicates that we are grabbing the contents of any file within the parent-dir and then grabbing the target tag referenced by the single astrik","9d2d81c8":"> Ordinarily UNIX can be used in the command line in order to find specific files based on tags such as the following case;","80ce3ad4":"> now with glob we can do the same thing, except markedly faster and in a less verbose fashion","63dfa702":"## Just a really quick demonstration of how to use the glob library\n\ncredit: [\"Indian Pythonista on YT\"](https:\/\/www.youtube.com\/watch?v=Vc5kGYty18k&ab_channel=IndianPythonista)"}}