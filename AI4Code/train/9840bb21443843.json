{"cell_type":{"47858362":"code","fb9aaa3e":"code","b7f025e5":"code","66b050f2":"code","0626074d":"code","d7c23c4a":"code","236cc74b":"code","cb84ef30":"code","2385b6bb":"code","e4168ada":"code","ec078416":"code","cd625ec0":"code","b6719af2":"code","ec4fc5c7":"code","d52bfbfd":"code","c492f782":"code","277cea20":"code","e7e5e2ea":"code","e6bf4fa3":"code","0d7ee8b3":"code","370a9221":"code","accfaefb":"code","115fb948":"markdown"},"source":{"47858362":"# import all the lib\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","fb9aaa3e":"# read the dataset using pandas\ndata = pd.read_csv('\/kaggle\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')","b7f025e5":"# This displays the top 5 rows of the data\ndata.head()","66b050f2":"# Provides some information regarding the columns in the data\ndata.info()","0626074d":"# this describes the basic stat behind the dataset used \ndata.describe()","d7c23c4a":"# These Plots help to explain the values and how they are scattered\n\nplt.figure(figsize=(12,6))\nsns.pairplot(data,x_vars=['YearsExperience'],y_vars=['Salary'],size=7,kind='scatter')\nplt.xlabel('Years')\nplt.ylabel('Salary')\nplt.title('Salary Prediction')\nplt.show()","236cc74b":"# Cooking the data\nX = data['YearsExperience']\nX.head()","cb84ef30":"# Cooking the data\ny = data['Salary']\ny.head()","2385b6bb":"# Import Segregating data from scikit learn\nfrom sklearn.model_selection import train_test_split","e4168ada":"# Split the data for train and test \nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=0.7,random_state=100)","ec078416":"# Create new axis for x column\nX_train = X_train[:,np.newaxis]\nX_test = X_test[:,np.newaxis]","cd625ec0":"# Importing Linear Regression model from scikit learn\nfrom sklearn.linear_model import LinearRegression","b6719af2":"# Fitting the model\nlr = LinearRegression()\nlr.fit(X_train,y_train)","ec4fc5c7":"# Predicting the Salary for the Test values\ny_pred = lr.predict(X_test)","d52bfbfd":"# Plotting the actual and predicted values\n\nc = [i for i in range (1,len(y_test)+1,1)]\nplt.plot(c,y_test,color='r',linestyle='-')\nplt.plot(c,y_pred,color='b',linestyle='-')\nplt.xlabel('Salary')\nplt.ylabel('index')\nplt.title('Prediction')\nplt.show()","c492f782":"# plotting the error\nc = [i for i in range(1,len(y_test)+1,1)]\nplt.plot(c,y_test-y_pred,color='green',linestyle='-')\nplt.xlabel('index')\nplt.ylabel('Error')\nplt.title('Error Value')\nplt.show()","277cea20":"# Importing metrics for the evaluation of the model\nfrom sklearn.metrics import r2_score,mean_squared_error","e7e5e2ea":"# calculate Mean square error\nmse = mean_squared_error(y_test,y_pred)","e6bf4fa3":"# Calculate R square vale\nrsq = r2_score(y_test,y_pred)","0d7ee8b3":"print('mean squared error :',mse)\nprint('r square :',rsq)","370a9221":"# Just plot actual and predicted values for more insights\nplt.figure(figsize=(12,6))\nplt.scatter(y_test,y_pred,color='r',linestyle='-')\nplt.show()","accfaefb":"# Intecept and coeff of the line\nprint('Intercept of the model:',lr.intercept_)\nprint('Coefficient of the line:',lr.coef_)","115fb948":"![](http:\/\/)Then it is said to form a line with\n# y = 25202.8 + 9731.2x"}}