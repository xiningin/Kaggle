{"cell_type":{"24f81557":"code","fcb60940":"code","d7449b8f":"code","a903b49a":"code","689395fb":"code","88b8232a":"code","23aae934":"code","e984236f":"code","00fdc943":"code","36a37dc4":"code","6d2ac911":"code","6936f1e4":"code","16c2507f":"code","ad4964ca":"code","70ccb284":"code","559a3da0":"code","59faef4d":"code","3746c66e":"code","3f3cae56":"code","156ad542":"code","ba5a91cf":"code","9146cdad":"code","991a256d":"code","ad4bf520":"code","01c0d498":"code","c97336ff":"code","11c1ce61":"code","a1c46195":"code","34c3ed12":"code","be37df47":"code","93207c38":"code","a392b384":"code","eaed87cc":"code","6ad44572":"markdown","5d73c6e7":"markdown","bd210e60":"markdown","2cc459c5":"markdown","1a546fc8":"markdown","a70b1ee8":"markdown","77f3d08a":"markdown","9ba793ab":"markdown","654035d4":"markdown","5c56af7a":"markdown","1b14b8ac":"markdown"},"source":{"24f81557":"\n# Import all the tools we need\n\n# Regular EDA (exploratory data analysis) and plotting libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# we want our plots to appear inside the notebook\n%matplotlib inline \n\n# Models from Scikit-Learn\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Model Evaluations\nfrom sklearn.model_selection import train_test_split, cross_val_score\nfrom sklearn.model_selection import RandomizedSearchCV, GridSearchCV\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom sklearn.metrics import precision_score, recall_score, f1_score\nfrom sklearn.metrics import plot_roc_curve, plot_confusion_matrix\n\n\nplt.style.use('ggplot')","fcb60940":"df = pd.read_csv('..\/input\/clothessizeprediction\/final_test.csv')\ndf.head()","d7449b8f":"df.isna().sum()","a903b49a":"df['age'].fillna(df['age'].mean(), inplace=True)\ndf['height'].fillna(df['height'].mean(), inplace=True)\ndf.isna().sum()","689395fb":"df['size'].value_counts()","88b8232a":"sns.boxplot(data=df['age']);","23aae934":"df['size'].value_counts().plot(kind='bar')\nplt.title('Samples')\nplt.xlabel('Sizes')\nplt.ylabel('Amount');","e984236f":"fig, ax = plt.subplots(figsize=(15,8))\nfor k in list(df['size'].unique()):\n    series = df[df['size'] == k]\n    scat = ax.scatter(series['weight'], series['height'], label=k)\nplt.xlabel('weight')\nplt.ylabel('height')\nplt.title('Weight vs Height By Size')\nplt.legend();","00fdc943":"df['age'].plot.hist();","36a37dc4":"df.info()","6d2ac911":"df.describe()","6936f1e4":"corr_matrix = df.corr()\ncorr_matrix","16c2507f":"fig, ax = plt.subplots(figsize=(8, 5))\nax = sns.heatmap(corr_matrix,\n                 annot=True,\n                 linewidths=0.5,\n                 fmt=\".2f\",\n                 cmap=\"YlGnBu\");","ad4964ca":"X = df.drop('size', axis=1)\ny = df['size']","70ccb284":"models = {\n    'LogisticRegresion': LogisticRegression(solver='liblinear'),\n    'KNN' : KNeighborsClassifier(),\n    'RandomForestClassifier': RandomForestClassifier()\n}","559a3da0":"np.random.seed(42)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.2)\nbaseline_models_score = {}\nfor name, model in models.items():\n    model.fit(X_train, y_train)\n    score = model.score(X_test, y_test)\n    baseline_models_score[name] = score\n    print(f'Model {name} with score: {score}')","59faef4d":"baseline_models_score","3746c66e":"model_compare = pd.DataFrame(baseline_models_score, index=[\"accuracy\"])\nmodel_compare.T.plot.bar();\nplt.yticks(np.arange(0,1.1,0.1));","3f3cae56":"# LOGISTIC REGRESSION GRID\n\nlog_reg_grid = {\"C\": np.logspace(-4, 4, 20),\n                \"solver\": [\"liblinear\"]}\n\n# Create a hyperparameter grid for RandomForestClassifier\nrf_grid = {\"n_estimators\": np.arange(10, 200, 50),\n           \"max_depth\": [None, 3, 5, 10],\n           \"min_samples_split\": [2,4],\n           \"min_samples_leaf\": [2,4,]}","156ad542":"\nnp.random.seed(42)\n\n# Setup random hyperparameter search for LogisticRegression\nrs_log_reg = RandomizedSearchCV(LogisticRegression(),\n                                param_distributions=log_reg_grid,\n                                cv=5,\n                                n_iter=20,\n                                verbose=True)\n\nrs_log_reg.fit(X_train, y_train)\n\nrs_log_reg.score(X_test, y_test)","ba5a91cf":"np.random.seed(42)\ngrid_log_reg = GridSearchCV(LogisticRegression(), param_grid=log_reg_grid, cv=5, verbose=True)\ngrid_log_reg.fit(X_train,y_train)","9146cdad":"grid_log_reg.score(X_test, y_test)","991a256d":"neighbors = range(1, 21, 2)\nparams = {'n_neighbors': neighbors}\nrs_knn = RandomizedSearchCV(KNeighborsClassifier(), param_distributions=params, verbose=True)\nrs_knn.fit(X_train, y_train)","ad4bf520":"rs_knn.best_params_","01c0d498":"rs_knn.score(X_test, y_test)","c97336ff":"rs_rf = RandomizedSearchCV(RandomForestClassifier(), param_distributions=rf_grid, verbose=True)\nrs_rf.fit(X_train, y_train)\nrs_rf.score(X_test, y_test)","11c1ce61":"rs_rf.best_params_","a1c46195":"gs_rf = GridSearchCV(RandomForestClassifier(), param_grid=rf_grid, verbose=True)\ngs_rf.fit(X_train, y_train)\ngs_rf.score(X_test, y_test)","34c3ed12":"gs_rf.best_params_","be37df47":"y_preds =gs_rf.predict(X_test)","93207c38":"confusion_matrix(y_test, y_preds)","a392b384":"fig, ax = plt.subplots(figsize=(15,8))\nplot_confusion_matrix(gs_rf, X_test, y_test, ax=ax)","eaed87cc":"print(classification_report(y_test,y_preds, zero_division=False))","6ad44572":"### replace NaN with mean","5d73c6e7":"## GridSearchCVC","bd210e60":"# 5. Modelling","2cc459c5":"# Tunning models","1a546fc8":"### USING GS_RF FOR METRICS","a70b1ee8":"# 1. LogisticRegression\n## RandomizedSearchCV","77f3d08a":"## RANDOM FOREST CLASSIFIER\n## RandomSearchCV","9ba793ab":"# KNN tunning","654035d4":"# Load data","5c56af7a":"## GridSearchCV","1b14b8ac":"# Clothes-Size-Prediction\n## 1. Problem Definition\n\nContext\n\nThe best way to avoid mistakes in buying clothes through online shops. You can check your predictions using this dataset.\n\nContext\n\nThe best way to avoid mistakes in buying clothes through online shops. You can check your predictions using this dataset\n\nInspiration\n\n\nThe most important motivation behind this was to get the size predicted to avoid any problems while buying clothes.\nContent\n\n##  2. Data\n\nData available on Kaggle.  https:\/\/www.kaggle.com\/tourist55\/clothessizeprediction\n\n\n## 3. Evaluation\n> If we can reach 80% (?) accuracy at predicting the size of a person during the proof of concept, we'll pursue the project.\n\n## 4. Features\n\nThe Dataset consists of 4 columns:\nThe output parameter is size and input parameters are Weight, Age, and Height.\n\n* Weight (in kgs)\n* Age\n* Height (in cm)\n* Size (Target)\n\n\n# Preparing the tools\n"}}