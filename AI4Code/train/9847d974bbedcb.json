{"cell_type":{"93e5456b":"code","4a76a334":"code","e8d5feec":"code","06897167":"code","370be8fb":"code","b36f175d":"code","68d59d1e":"code","495727ca":"code","8b244fa1":"code","d0c4a63a":"code","d0eb9a82":"markdown","e816321e":"markdown","2becf410":"markdown","32f07e74":"markdown","4fd962c7":"markdown"},"source":{"93e5456b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4a76a334":"data = pd.read_csv('..\/input\/2019-coronavirus-dataset-01212020-01262020\/2019_nC0v_20200121_20200126_cleaned.csv')\ndata.head()","e8d5feec":"data.info()","06897167":"#Delete unusefull column\n\ndel data['Unnamed: 0']","370be8fb":"data.columns","b36f175d":"data.corr()","68d59d1e":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","495727ca":"f,ax = plt.subplots(figsize=(18, 5))\ndata.Confirmed.plot(kind = 'line', color = 'g',label = 'Confirmed',linewidth=2,alpha = 1,grid = True,linestyle = ':', ax=ax)\ndata.Deaths.plot(color = 'r',label = 'Deaths',linewidth=2, alpha = 1,grid = True,linestyle = '-.', ax=ax)\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Relation between Confirmed and Deaths')            # title = title of plot\nplt.show()","8b244fa1":"f,ax = plt.subplots(figsize=(18, 5))\ndata.plot(kind='scatter', x='Confirmed', y='Recovered',alpha = 0.5,color = 'red', ax=ax)\nplt.xlabel('Confirmed')              # label = name of label\nplt.ylabel('Recovered')\nplt.title('Confirmed Recovered Scatter Plot')\nplt.show()","d0c4a63a":"f,ax = plt.subplots(figsize=(18, 5))\ndata.Suspected.plot(kind = 'hist',bins = 50,figsize = (12,12),ax=ax)\nplt.show()","d0eb9a82":"# **Line Plot**","e816321e":"# **Scatter Plot**","2becf410":"# **MATPLOTLIB**\nMatplot is a python library that help us to plot data. The easiest and most basic plots are line, scatter and histogram plots.","32f07e74":"# **Histogram**","4fd962c7":"# **Correlation Map**"}}