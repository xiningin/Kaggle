{"cell_type":{"e4921edb":"code","037cb37b":"code","a385728b":"code","f0244191":"code","993a4254":"code","c17d6e82":"code","1efbefba":"code","7d20bc27":"code","3d9e51b7":"code","5093f53c":"code","612d429b":"code","71eea12f":"code","45d5642e":"code","c3f3ba35":"code","dd93e4a3":"code","e5d6aaa1":"code","39e6eaaa":"code","4ebb2835":"code","57f2d2ae":"code","899f2ba3":"code","554555c8":"code","103cc20d":"code","756e6106":"code","6ebef8b1":"code","fdfcd839":"code","1107f20a":"code","2fba5b4a":"markdown"},"source":{"e4921edb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","037cb37b":"data = pd.read_csv('..\/input\/data.csv')","a385728b":"data.info()","f0244191":"data.corr()","993a4254":"f,ax = plt.subplots(figsize=(18, 18))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","c17d6e82":"data.head(10)","1efbefba":"data.columns","7d20bc27":"data.ShotPower.plot(kind = 'line', color = 'g',label = 'Shot Power',linewidth=3,alpha = 0.5,grid = True,linestyle = ':')\ndata.LongShots.plot(figsize=(10,10), color = 'r',label = 'Long Shots',linewidth=3, alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label\nplt.ylabel('y axis')\nplt.title('Line Plot')            # title = title of plot\nplt.show()","3d9e51b7":"# Scatter Plot \n# x = attack, y = defense\ndata.plot(kind='scatter', x='ShotPower', y='LongShots',alpha = 0.1,color = 'red')\nplt.xlabel('Shots Power')              # label = name of label\nplt.ylabel('Long Shots')\nplt.title('Attack Defense Scatter Plot')            # title = title of plot","5093f53c":"data.ShotPower.plot(kind = 'hist',bins = 50,figsize = (12,12))\nplt.show()","612d429b":"# clf() = cleans it up again you can start a fresh\ndata.ShotPower.plot(kind = 'hist',bins = 50)\nplt.clf()\n# We cannot see plot due to clf()","71eea12f":"# 1 - Filtering Pandas data frame\nx = data['Strength']>96    # He is a wrestler :)\ndata[x]","45d5642e":"# 2 - Filtering pandas with logical_and\n# This kid does a lot of work. :)\ndata[np.logical_and(data['Age']<=18, data['Dribbling']>85 )]","c3f3ba35":"data = pd.read_csv('..\/input\/data.csv')\ndata.head()","dd93e4a3":"# tail shows last 5 rows\ndata.tail()","e5d6aaa1":"# columns gives column names of features\ndata.columns","39e6eaaa":"data.shape","4ebb2835":"data.info()","57f2d2ae":"# For example let's look frequency of players nationality\nprint(data['Nationality'].value_counts(dropna =False))  # if there are nan values that also be counted\n# As it can be seen below there are 303 Turkish players or 1 New Caledonia's player.","899f2ba3":"# For example max Jmuping is 95 or min ShotPower is 2 :)))\n# Brother, I play you don't bother. :)\n# Jumping player must played basketball.\ndata.describe() #ignore null entries","554555c8":"data.boxplot(column='Age',by = 'Work Rate')\nplt.show()","103cc20d":"new_data = data.head()    # I only take 5 rows into new data\nnew_data","756e6106":"melted = pd.melt(frame=new_data,id_vars = 'Name', value_vars= ['Dribbling','SprintSpeed'])\nmelted","6ebef8b1":"melted.pivot(index = 'Name', columns = 'variable',values='value')","fdfcd839":"# Firstly lets create 2 data frame\ndata1 = data.head()\ndata2= data.tail()\nconc_data_row = pd.concat([data1,data2],axis =0,ignore_index =True) # axis = 0 : adds dataframes in row\nconc_data_row","1107f20a":"data1 = data['BallControl'].head()\ndata2= data['LongPassing'].head()\nconc_data_col = pd.concat([data1,data2],axis =1) # axis = 0 : adds dataframes in row\nconc_data_col","2fba5b4a":"**CLEAN\u0130NG DATA**\n"}}