{"cell_type":{"469a2916":"code","8b0c3c9d":"code","b7e9b528":"code","19d8292e":"code","2f8c498e":"code","dca7c629":"code","7db18cd0":"code","511904d5":"code","3b8e8bbd":"code","20ff2ab2":"code","86a4b7e0":"code","05f5e03d":"code","bb98c437":"code","4e59e2b5":"code","3c3ccecb":"code","7fb95c63":"code","13ceadaf":"code","6df25eaa":"code","9bc7ce0d":"code","c3736f4d":"code","c14f440b":"code","ce5a90de":"code","d07bf833":"code","acbfe319":"code","ef035572":"code","b3a8e141":"code","737f25de":"code","c23a4eee":"code","5d4338cb":"markdown","3fc8b185":"markdown","e394d0af":"markdown","b5d840ae":"markdown","42870b66":"markdown","d18532ec":"markdown","dfc6a859":"markdown","00596a85":"markdown","46491309":"markdown","285f2e5b":"markdown","f3114228":"markdown","aaf45cb6":"markdown","4e44a275":"markdown","b969639f":"markdown","7a024a27":"markdown","d2b68b18":"markdown","4b5e2be6":"markdown","8356a12d":"markdown","6003988f":"markdown","2f8799ee":"markdown","22c500ca":"markdown","e5536d3b":"markdown","bfd36425":"markdown","63e3232f":"markdown","8f0c4116":"markdown"},"source":{"469a2916":"import pandas as pd\nimport numpy as np\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\n# library for HTTP requests \nimport requests \n\n# suppress geopandas CRS warning\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# extra visuals\nfrom IPython.display import HTML\nimport plotly.express as px\nimport plotly\n\n# memory management\nimport gc\n\nprint('libraries loaded')","8b0c3c9d":"def pivot_styler(df, caption='text'):\n    # set alignment for measures, index and add thousands seperator\n    df = df.style.set_properties(**{'text-align': 'right'}) \\\n           .set_table_styles([ dict(selector='th', props=[('text-align', 'left')]) ]) \\\n           .format('{:,}').set_caption(caption)\n    return df\nprint('user defined function \"pivot_styler\" initialised')","b7e9b528":"# Function to get data from API\ndef get_crime_data(param):\n    crime_data_list = []\n    # refer to Crime API documentation for API specifications\n    url = 'https:\/\/a5c7zwf7e5.execute-api.ap-southeast-2.amazonaws.com\/dev\/offences?'\n    response = requests.get(url, params=param)\n\n    if response.status_code == 200: # status = OK\n        crime_data_list += response.json()\n        print(f\"Crime data from {param['startDate']} to {param['endDate']} \" \\\n              f\"retrieved successfully - {len(response.json()):,d} records\")\n\n    else: # prompt user of unsuccessful call\n        print(f\"Crime data from {param['startDate']} to {param['endDate']} \" \\\n              f\"unsuccessful.  Please try again.\")\n\n    df_crime_data = pd.DataFrame.from_dict(crime_data_list)\n    del crime_data_list\n    return df_crime_data\n\nprint('user defined function \"get_crime_data\" initialised')","19d8292e":"# initialise parameters for API\nquery = ( {'locationType': 'Lga', 'locationName': 'Brisbane', 'startDate': '07-01-2020', 'endDate': '12-31-2020'},\n          {'locationType': 'Lga', 'locationName': 'Brisbane', 'startDate': '01-01-2020', 'endDate': '06-30-2020'},\n          {'locationType': 'Lga', 'locationName': 'Brisbane', 'startDate': '07-01-2019', 'endDate': '12-31-2019'},\n          {'locationType': 'Lga', 'locationName': 'Brisbane', 'startDate': '01-01-2019', 'endDate': '06-30-2019'} )\nprint('parameters for query1 initialised')          ","2f8c498e":"# retreive crime data for query\ndf_crime_data = pd.DataFrame() # initialise data frame\n\n# split API call into subqueries - API responses capped at 100k records\nfor block in query:\n    df_result = get_crime_data(block)\n    df_crime_data = df_crime_data.append(df_result)\n    del df_result\n    \nprint(f'Dataframe consists of {len(df_crime_data):,d} records')","dca7c629":"fig, axes = plt.subplots(1, 2, figsize = (15, 15))\n#plt.suptitle('Preview of Brisbane LGA Regions')\nplt.tight_layout()\n# remove non metropolitan localities from visual\ngeo_filter = ['Moreton Island', 'Bulwer', 'Cowan Cowan', 'Moreton Bay', 'Kooringal (Qld)', \n              'Kholo', 'Lake Manchester', 'Enoggera Reservoir', 'Banks Creek', 'England Creek']\n\n# load preprocessed ABS shape file (cat 1270.0.55.003)\ngeo_ssc = gpd.read_file('..\/input\/brisbane-lga\/SSC_2016_BNE.shp')\ngeo_ssc = geo_ssc[geo_ssc['SSC_NAME16'].isin(geo_filter) == False]\nax = geo_ssc.plot(axes = axes.flat[0], cmap = 'Blues', edgecolor='k', alpha=0.5)\nax.axis('off')\naxes[0].set_title('Brisbane LGA Suburbs')\n\n# Get SSC to Region mapping from file\ngeo_mapping = pd.read_csv(r'..\/input\/brisbane-lga\/BNE Region Mapping.csv')\n\n# Add mapping to existing dataframe and merge shapes\ngeo_regions = geo_ssc.join(geo_mapping, how = 'left')\ngeo_regions = geo_regions.dissolve(by = 'Region').reset_index(drop = False)\n\n# Generate Visual\nax = geo_regions.plot(axes = axes.flat[1], cmap = 'Blues', edgecolor = 'k', alpha = 0.25)\nax.axis('off')\naxes[1].set_title('Brisbane LGA Regions')\n\n# add Region labels to plot\nfor x, y, label in zip(geo_regions.centroid.x, geo_regions.geometry.centroid.y, geo_regions.Region):\n    ax.annotate(label, xy = (x, y), xytext = (3, 3), textcoords = \"offset points\", color = \"Black\", horizontalalignment = 'center', size = 10)\n","7db18cd0":"# load mesh block mapping from file (cat 1270.0.55.001)\n#df_mb_map = pd.read_excel('Brisbane Mesh Blocks ASGS Edition 2016.xlsx')\ndf_mb_map = pd.read_csv('..\/input\/brisbane-lga\/Brisbane Mesh Blocks ASGS Edition 2016.csv')\n\n# cast identifier to string format to facilitate merge\ndf_mb_map['MB_CODE_2016'] = df_mb_map['MB_CODE_2016'].astype(str)\n\nprint('mesh block mapping initialised')","511904d5":"# Add Suburb and SSC to crime dataset\ndf_crime_data = df_crime_data.merge(df_mb_map[['SSC_CODE_2016', 'SSC_NAME_2016', 'MB_CODE_2016']], how = 'left',\n                left_on = 'ABS Meshblock', right_on = 'MB_CODE_2016')\n\n# Add Region to crime dataset\ndf_crime_data = df_crime_data.merge(geo_mapping[['SSC_CODE_2016', 'Region']], how = 'left',\n                left_on = 'SSC_CODE_2016', right_on = 'SSC_CODE_2016')\n\n# Remove Nulls\ndf_crime_data = df_crime_data.dropna()\nprint('Records containing nulls have been removed from the dataframe')\n\n# Create Mapping of Offence Type to Offence Category\noffencetypes = {'Type': [\"Arson\", \"Fraud\", \"Handling Stolen Goods\", \"Other Property Damage\", \"Other Theft (excl. Unlawful Entry)\", \"Unlawful Entry\", \"Unlawful Use of Motor Vehicle\", \"Assault\", \"Homicide (Murder)\", \"Other Homicide\", \"Other Offences Against the Person\", \"Robbery\", \"Drug Offences\", \"Gaming Racing & Betting Offences\", \"Good Order Offences\", \"Liquor (excl. Drunkenness)\", \"Miscellaneous Offences\", \"Prostitution Offences\", \"Stock Related Offences\", \"Traffic and Related Offences\", \"Trespassing and Vagrancy\", \"Weapons Act Offences\"],\n                'Category': [\"Offences against Property\", \"Offences against Property\", \"Offences against Property\", \"Offences against Property\", \"Offences against Property\", \"Offences against Property\", \"Offences against Property\", \"Offences against the Person\", \"Offences against the Person\", \"Offences against the Person\", \"Offences against the Person\", \"Offences against the Person\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\", \"Other Offences\"]}\n\ndf_offence_category = pd.DataFrame(offencetypes)\nprint('df_offence_category initialised')\n\n# Add Suburb and SSC to crime dataset\ndf_crime_data = df_crime_data.merge(df_offence_category[['Type','Category']], \n    how = 'left', left_on = 'Type', right_on = 'Type')\n\nprint('Category added to crime data frame')\n\n\n## Update Data Types\n# Data types were not defined when we retreived the data from the API so have defaulted to object.\n# Pandas has retained formats for data originating from Excel and CSV.\n\n# Categorical\ndf_crime_data['Type'] = df_crime_data['Type'].astype('category')\ndf_crime_data['Region'] = df_crime_data['Region'].astype('category')\ndf_crime_data['Category'] = df_crime_data['Category'].astype('category')\n\n# Datetime\ndf_crime_data['Date'] = pd.to_datetime(df_crime_data['Date'], format='%Y-%m-%d %H:%M:%S')\ndf_crime_data['Year'] = df_crime_data['Date'].dt.strftime('%Y')\ndf_crime_data['Hour_Text'] = df_crime_data['Date'].dt.strftime('%H:00') \ndf_crime_data['Year_Month'] = df_crime_data['Date'].dt.strftime('%Y-%m')\n\n# Integer\ndf_crime_data['SSC_CODE_2016'] = df_crime_data['SSC_CODE_2016'].astype(int)\n\nprint('Formats updated')\n\n# Remove some additional columns\ndf_crime_data = df_crime_data.drop(\n    columns = ['Area of Interest', 'Postcode', 'MB_CODE_2016'])\n\ndf_crime_data = df_crime_data.rename(\n    columns={'ABS Meshblock':'Meshblock', 'SSC_CODE_2016':'SSC', 'SSC_NAME_2016':'Suburb'})\n\ndf_crime_data.info()","3b8e8bbd":"# Aggregate mesh blcok level data into suburbs\n\n# get stats from mesh block mapping file\ndf_SSC_stats = df_mb_map[[\n    'SSC_CODE_2016', 'SSC_NAME_2016', 'DWELLINGS_2016', 'PERSONS_USUALLY_RESIDENT_2016']]\n\n# add Region to aggregated Suburb data\ndf_SSC_stats = df_SSC_stats.merge(geo_mapping[['SSC_CODE_2016', 'SSC_NAME', 'Region']], how = 'left',\n                left_on = 'SSC_CODE_2016', right_on = 'SSC_CODE_2016')\n\n# aggregate data by suburb\ndf_SSC_stats = df_SSC_stats.groupby(\n    ['SSC_CODE_2016', 'SSC_NAME_2016', 'Region'])['DWELLINGS_2016', 'PERSONS_USUALLY_RESIDENT_2016'].agg('sum')\n\n# cleanup column names\ndf_SSC_stats.rename_axis(index=['SSC', 'Suburb', 'Region'], inplace = True)\n\ndf_SSC_stats = df_SSC_stats.rename(\n    columns={'DWELLINGS_2016':'Dwellings','PERSONS_USUALLY_RESIDENT_2016':'Residents'})\n\nprint('SSC stats compiled')","20ff2ab2":"# aggregate data to Regions \ndf_region_stats = df_SSC_stats.groupby(\n    ['Region'])['Dwellings', 'Residents'].agg('sum')\n\n# add total to data frame\ndf_region_stats.loc['Total'] = df_region_stats.sum()\n\ndf_region_stats.style.set_properties(**{'text-align': 'right'}).set_table_styles([ dict(selector = 'th', props = [('text-align', 'left')]) ]).format('{:,}')","86a4b7e0":"df_region_stats = df_region_stats.iloc[:-1]\nprint(\"'Total' removed from data frame\")","05f5e03d":"# filter crime dataframe to only include 2019 offences\ndf_crime_data_2019 = df_crime_data[df_crime_data['Year'] == '2019']\ndf_crime_data_2019 = df_crime_data_2019[df_crime_data['Region'] != 'Moreton Bay Suburbs']\n\n# transpose output of .describe() function\ndisplay(df_crime_data_2019.astype('object').describe().transpose())","bb98c437":"# create pivot per offence Category\ncategories = df_crime_data_2019.Category.unique()\nfor category in categories:\n    \n    # filter and reshape data frame\n    df = df_crime_data_2019[df_crime_data_2019['Category'] == category]\n    df = df[['Type', 'Region']]\n    df = df.astype({'Type': 'object', 'Region': 'object'})\n\n    # create pivot for stack bar graph\n    df_bar = df.pivot_table(index=['Region'], columns='Type', aggfunc = len, fill_value=0, margins=False)\n    df_bar.plot.bar(stacked=True, figsize=(10,7), cmap='tab20c')\n    plt.suptitle(category)\n\n    # create pivot for showing\n    df = df.pivot_table(index=['Type'], columns='Region', aggfunc = len, fill_value=0, margins=True)\n    df.index.names = [category + ' 2019']\n    \n    plt.show()\n    display(pivot_styler(df, category))    ","4e59e2b5":"# create list of selected offences to display\nselected_offences = (\n    'Assault', 'Drug Offences', 'Good Order Offences', 'Robbery', \n    'Other Theft (excl. Unlawful Entry)', 'Unlawful Entry')\n\n# Pivot by offence type and suburb\npivot_SSC_crime = df_crime_data_2019[['Suburb', 'Type']]\npivot_SSC_crime = pivot_SSC_crime.pivot_table(\n    index=['Suburb'], columns='Type', aggfunc = len, fill_value=0, margins = False)\n\n# display top5 suburbs per specified offence type\nfor offence in selected_offences:\n    df = pivot_SSC_crime[offence].nlargest(5).to_frame()\n    title = 'Top 5 Suburbs for reported ' + offence\n    display(pivot_styler(df,title))","3c3ccecb":"# create data frame with 2019 crime numbers and suburb demographics\ndf_SSC_crime_rate = df_SSC_stats.join(pivot_SSC_crime, how='left').fillna(0).astype(int)\n\n# calculate offence rate per 100,000 people and add column to dataframe\noffences = df_crime_data_2019.Type.unique()\nfor offence in offences:\n    df_SSC_crime_rate[offence+' Rate'] = round(\n        df_SSC_crime_rate[offence].divide(df_SSC_crime_rate['Residents'])*100000,2)\n        \n# remove nulls and div0 values\ndf_SSC_crime_rate = df_SSC_crime_rate.replace(np.inf, 0).replace(np.nan, 0)\nprint('offence rates by type calculated per suburb')","7fb95c63":"# display seperate table per Region\nregions = df_crime_data_2019.Region.unique()\nfor region in regions:\n    # remove unwanted columns\n    df = df_SSC_crime_rate.loc[:, \n    (df_SSC_crime_rate.columns.str.endswith(' Rate')) | (df_SSC_crime_rate.columns == 'Residents')]\n    \n    # display only population and crime rates per suburb\n    df = df.xs(region, level = 'Region', axis=0)\n    display(pivot_styler(df, region))","13ceadaf":"# Pivot by offence type and region\ndf_region_crime = df_crime_data_2019[['Region', 'Type']]\ndf_region_crime = df_region_crime.pivot_table(\n    index=['Region'], columns='Type', aggfunc = len, fill_value=0, margins = False)\n\n# create data frame with 2019 crime numbers and suburb demographics\ndf_region_crime = df_region_stats.join(df_region_crime, how='left').fillna(0).astype(int)\n\n# calculate crime rates\nfor offence in selected_offences:\n    df_region_crime[offence + ' Rate'] = \\\n    round(df_region_crime[offence].divide(df_region_crime['Residents']) * 100000,2)\n\n# remove nulls and div0 values\ndf_region_crime = df_region_crime.replace(np.inf, 0).replace(np.nan, 0)\n\n# display only population and crime rates per region\npivot_region_crime_rate = df_region_crime.loc\\\n[:, (df_region_crime.columns.str.endswith(' Rate')) | \\\n(df_region_crime.columns.isin(['Residents', 'Dwellings']))]\n\ndisplay(pivot_styler(pivot_region_crime_rate, 'Selected Offence Rates by Region - 2019'))","6df25eaa":"# remove Moreton Bay\npivot_region_rank = df_region_crime[df_region_crime.index != 'Moreton Bay Suburbs']\npivot_region_rank\n\npivot_region_rank = pivot_region_rank.loc\\\n[:, (pivot_region_rank.columns.str.endswith(' Rate')) | \\\n(pivot_region_rank.columns.isin(['Assault', 'Drug Offences','Good Order Offences', \\\n'Robbery', 'Other Theft (excl. Unlawful Entry)', 'Unlawful Entry']) )]\n\n# rank each region\npivot_region_rank = pivot_region_rank.rank(ascending=False).transpose().astype(int)\npivot_region_rank.sort_index(ascending=True, inplace = True)\n\ndisplay(pivot_styler(pivot_region_rank, 'Incident Prevalence Ranking - 2019'))\nprint('*1 is most prevalent (ie highest rate when compared to other regions), 5 is lowest')","9bc7ce0d":"for offence in selected_offences:\n   \n    df_SSC_crime_rate_ranking = df_SSC_crime_rate[df_SSC_crime_rate['Residents']>1000]\n\n    df1 = df_SSC_crime_rate_ranking[[offence +' Rate', offence, 'Residents']].nlargest(5, offence +' Rate')\n    df2 = df_SSC_crime_rate_ranking[[offence +' Rate', offence, 'Residents']].nsmallest(5, offence +' Rate')\n    display(pivot_styler(df1,'Top 5 - ' + offence))\n    display(pivot_styler(df2,'Bottom 5 - ' + offence))","c3736f4d":"# add ranking\npivot_ssc_crime_rank = df_SSC_crime_rate_ranking.rank(ascending=False).astype(int)\n\n# remove and sort columns\npivot_ssc_crime_rank.drop(columns=['Dwellings', 'Residents'])\npivot_ssc_crime_rank = pivot_ssc_crime_rank.reindex(\n    sorted(pivot_ssc_crime_rank.columns), axis=1)\n\ndisplay(pivot_styler(pivot_ssc_crime_rank, 'Incident Prevalence Suburb Ranking - 2019'))\nprint('*1 is most prevalent (ie highest rate when compared to other regions), 5 is lowest')","c14f440b":"# build data frame for suburb choropleth\ngeo_ssc_crime_rate = geo_ssc.merge(df_SSC_crime_rate, how='left', left_on='SSC_NAME16', right_on='Suburb')\n\nfor offence in offences: # offences was defined above as a list of all offences in 2019 crime dataset\n    \n    # stop low pop suburbs from skewing choropleth by substituting rate to 0\n    geo_ssc_crime_rate.loc[geo_ssc_crime_rate['Residents']<1000, offence + ' Rate']=0\n    \nprint('geo pandas data frame for suburb choropleth initialised')","ce5a90de":"# create visual for selected offences\nfor offence in selected_offences:\n    geo_ssc_crime_rate.plot(\n        figsize=(25, 15), column=offence+' Rate', \n        cmap='Reds', edgecolor='k', alpha=0.5, legend=True)\n    \n    plt.title(offence+' Rates - 2019')\n    plt.axis('off')\n    plt.show()\n    plt.clf();plt.close()","d07bf833":"df = df_crime_data[['Year_Month','Type','Category']]\n\n# create new figure per category\nfor category in categories:\n\n    # filter and pivot\n    df = df_crime_data[df_crime_data['Category'] == category][['Year_Month','Type']]\n    df = df.pivot_table(\n        index=['Year_Month'], columns='Type', aggfunc = len, fill_value=0, margins = False)\n\n    # create line plot with subplot per type\n    axes = df.plot(\n\n        # force layout to 2 columns\n        figsize=(20, 15), subplots=True, layout=(-1, 2), \n        \n        # misc formatting\n        sharex=False, sharey=False,\n        ylabel = '', xlabel='', # plt.axis('off') not working \u00af\\_(\u30c4)_\/\u00af\n\n        # add ticks per quarter, calc range by counting dates in df (+1 to show end)\n        xticks=[x*3 for x in range(0, int( (len(df.index)\/3)+1) )] )\n\n    # annotate plots\n    for c in axes:\n        for ax in c:\n            # get co-ordinates for Covid-19 indicator\n            ymax = max(ax.get_ylim()); ymin = min(ax.get_ylim())\n            ax.plot([15, 15], [ymin, ymax], color='k', linestyle='-', linewidth=1)    \n            ax.annotate('Covid-19', xy=(18, ymin))    \n    \n    plt.tight_layout \n    plt.suptitle(category)\n    plt.show()","acbfe319":"#create data frame for heatmap\nmonthly_crime_numbers = df_crime_data[['Year_Month','Type']]\nmonthly_crime_numbers = monthly_crime_numbers.pivot_table(\n    index=['Year_Month'], columns='Type', aggfunc = len, fill_value=0, margins = False)\nprint('crime numbers compiled')","ef035572":"# calculate percentages by 'shifting' rows by 1.\npivot_percent_change = ((monthly_crime_numbers\/monthly_crime_numbers.shift(1,axis=0)-1))\\\n.replace(np.inf, 0).replace(np.nan, 0) # remove nulls and inf at the same time\n\npivot_percent_change.head(5)","b3a8e141":"# let's add some stats and transpose pivot\npivot_percent_change.loc['Min Count'] = monthly_crime_numbers.min()\npivot_percent_change.loc['Max Count'] = monthly_crime_numbers.max()\npivot_percent_change.loc['Avg Count'] = monthly_crime_numbers.mean()\npivot_percent_change.loc['2019 Total'] = \\\nmonthly_crime_numbers.loc[monthly_crime_numbers.index.str.startswith('2019')].sum()\npivot_percent_change.loc['2020 Total'] = \\\nmonthly_crime_numbers.loc[monthly_crime_numbers.index.str.startswith('2020')].sum()\n\n# transpose pivot\npivot_percent_change = pivot_percent_change.transpose()\n\n# update formats\npivot_percent_change = pivot_percent_change.astype(\n    {'Min Count': 'int', 'Max Count': 'int','Avg Count': 'int',\n     '2019 Total': 'int', '2020 Total': 'int'})\n\nprint(\"data frame 'pivot_percent_change' updated\")","737f25de":"# filter data for heatmap\nplot_percent_change = pivot_percent_change[pivot_percent_change['Min Count'] >= 30]\n\n# remove stats\nplot_percent_change = plot_percent_change.drop(\n    ['Min Count', 'Max Count', 'Avg Count', '2019 Total', '2020 Total'], axis=1)\n\n# only look back 18 months\nplot_percent_change.drop(plot_percent_change.columns[\n    [x for x in range(0, len(plot_percent_change.columns)-18)]], axis=1, inplace=True)\nprint('data frame filtered')","c23a4eee":"plt.rcParams['figure.figsize'] = (25, 18)\nsns.heatmap(\n    plot_percent_change, cmap='coolwarm', robust=True, \n    square=1, linewidth=1, annot_kws={'size':16}, \n    xticklabels=3,annot=True, fmt = '.1%').set(title='Month on Month Crime Rate')\nsns.set(font_scale = 2)\nplt.show()","5d4338cb":"As you can see, it's a bit TL;DR.  Let's aggregate these stats by Region\n### Rate by Region","3fc8b185":"## Visuals\n### Shapefiles\nThe Australian Statistical Geography Standard (ASGS) is the framework developed by the Australian Bureau of Statistics (ABS) to enable the publication of statistics that are comparable between datasets [(1270.0.55.001 - Australian Statistical Geography Standard (ASGS): Volume 1 - Main Structure and Greater Capital City Statistical Areas, July 2016, 2020)](https:\/\/www.abs.gov.au\/AUSSTATS\/abs@.nsf\/Lookup\/1270.0.55.001Main+Features10018July%202016?OpenDocument)\n\n#### State Suburb\n[The shapefile](https:\/\/www.abs.gov.au\/AUSSTATS\/abs@.nsf\/DetailsPage\/1270.0.55.003July%202016?OpenDocument) used in this analysis has been preprocessed ouside of Kaggle to remove all suburbs outside of the Brisbane LGA (1270.0.55.003 - Australian Statistical Geography Standard (ASGS): Volume 3 - Non ABS Structures, July 2016, 2020).  Additional filters have been applied to remove remove rural and Moreton Bay localities from this analysis.\n\n### Brisbane Regions\nSuburbs of Brisbane grouped into North, South, East, West and Inner City to assist with comparisons","e394d0af":"## Demographics\nCrime data can be merged with population figures to derive crime rates.  The following sections initialises dataframes for Suburb and Region","b5d840ae":"It's a bit TL;DR for my liking.  Perhaps a diagram will make things more interesting.  Let's see what this data looks like on a choropleth.\n","42870b66":"While most Brisbane residents will not be surprised with the Region level statistics, there is evidence to suggest \"hotspots\" exists in the suburbs\n## How Has Covid-19 Impacted Crime Trends?\nLet's investigate the impacts of Covid-19 on monthly crime numbers using some visuals.  Stage 1 started on 26 March 2020, with stages 2 and 3 involving tightening the restrictions. Stage 4 were introduced on 11 April.  \n\nFor the purposes of this analysis, I have used 30 March 2020 as the cutoff for pre\/Covid trending\n\n### Line Plots\nLine plots are often used to visualise timeseries data.  Let's create a line plot per offence type to see how month on month figures change over time.  showing recorded incidents per year\/month.  These figures should give us an indicator of how offences tracked pre and during Covid-19 restrictions.\n\nEach subplot is a line plot of frequency over time.  I have marked each subplot with a bar indicating pre and Covid-19 periods.\n","d18532ec":"### Rate by Suburb\nLet's start with some tables showing calculated 2019 crime rates per suburb.","dfc6a859":"As this data frame is used for further analysis, let's remove the total from the dataset","00596a85":"This heatmap will focus on month on month percentage changes.  Offences commited less than 30 times in any given period will be excluded and will only look back 18 months ie 01\/06\/2020 - 30\/11\/2020","46491309":"## What Suburb have the most...\nLet's see which suburbs have the most of the following offence types\nThe following tables displays the 5 suburbs with the most reported:\n* Assaults\n* Drug Offences\n* Good Order Offences\n* Robbery\n* Other Theft (excl. Unlawful Entry)\n* Unlawful Entries","285f2e5b":"# Analysis\n## Crime Rates\nIn the Exploratory Data Analysis, we have explored the total reported incidents by Suburb and Region.  A more meaningful metric for comparison is crime and offence rates.  For the purpose of this analysis, crime rates are per 100,000 people and is calculated using reported incidents in 2019 and population data collected in the 2016 census.","f3114228":"The describe function doesn't really provide any insights to this data.  This is to be expected when dealing with incident level details.  Additional wrangling is required to draw out some meaningful insights to our data set.\n## Number of Reported Offences by Category and Type\nLet's start with summarising our data to see how many offences were reported in 2019 and 2020.","aaf45cb6":"# Analysis of Brisbane LGA Crime\n\nThis notebook will analyse crime incidents in the Brisbane Local Government Area (LGA) over the course of the Covid-19 lockdown period.\n\nThe goal is to get a better understanding of crime in the Brisbane LGA and to see what impacts (if any) Covid-19 lockdowns have had on month on month crime trends.","4e44a275":"# Data Preparation\nClean up data for analysis","b969639f":"## Function to standardise formatting of pivots\nCreating a function to update formatting will save us from the tedious task of updating these one by one!","7a024a27":"Suburb rankings below","d2b68b18":"While aggregating data is useful when presenting numbers in tabular format, the price is a loss of information.\n\nIt's interesting to note that Unlawful Entry rates are highest in the Inner City while total Unlawful Entry cases are highest in the Southern Suburbs.\n\nFurther analysis is required to confirm what type of properties these offences are being recorded against ie (home invasions vs theft from offices\/shops).  Mesh block analysis would be required to get this insight and is outside the scope of this analaysis.\n\nA few more top5\/bottom5 tables because everyone likes rankings!","4b5e2be6":"This heatmap shows there is a clear change in month on month numbers and is shown by the dark blue squares arranged in a line over April 2020. Covid-19 appears to have significantly reduced property crimes. I guess working from home makes it harder to rob houses, though I doubt this will lower my insurance bill!\n\nOn the other hand, drug offences have increased significantly during the lockdown period .maybe this is a response to the stress and uncertainty of the times?\n\n# Conclusion\nThis analysis has explored incident level crime statistics in the Brisbane LGA from 01\/01\/2019 - 30\/11\/2020.  I analysed incident frequency and calculate incident rates per suburb and region.  Choropleth plots were used to help visually identify incident 'hotspots'  Suburbs and regions were then ranked to display top5\/bottom 5 league tables for selected types.  \n\nLastly, I performed timeseries analysis on crime frequency using line plots and heatmaps and identified a general reduction in reported offences (with the exemption of drug offences) during the inital Covid-19 lockdown.","8356a12d":"# References\n\n\n1. Data.qld.gov.au. 2020. Crime Locations Last 5 Years - Open Data Portal | Queensland Government. [online] Available at: <https:\/\/www.data.qld.gov.au\/dataset\/crime-locations-2000-present> [Accessed 6 December 2020]\n2. Brisbane.qld.gov.au. 2020. Brisbane Community Profiles. [online] Available at: <https:\/\/www.brisbane.qld.gov.au\/about-council\/governance-and-strategy\/business-in-brisbane\/business-opportunities\/brisbane-community-profiles> [Accessed 6 December 2020]\n3. Abs.gov.au. 2020. 1270.0.55.001 - Australian Statistical Geography Standard (ASGS): Volume 1 - Main Structure And Greater Capital City Statistical Areas, July 2016. [online] Available at: <https:\/\/www.abs.gov.au\/AUSSTATS\/abs@.nsf\/Lookup\/1270.0.55.001Main+Features10018July%202016?OpenDocument> [Accessed 6 December 2020]\n4. Abs.gov.au. 2020. 1270.0.55.003 - Australian Statistical Geography Standard (ASGS): Volume 3 - Non ABS Structures, July 2016. [online] Available at: <https:\/\/www.abs.gov.au\/AUSSTATS\/abs@.nsf\/DetailsPage\/1270.0.55.003July%202016?OpenDocument> [Accessed 6 December 2020]\n5. En.wikipedia.org. 2020. List Of Brisbane Suburbs. [online] Available at: <https:\/\/en.wikipedia.org\/wiki\/List_of_Brisbane_suburbs> [Accessed 6 December 2020]\n","6003988f":"### Location Mapping\nCrime data is geocoded using mesh blocks.  Mesh blocks are defined by the ASGS as small geographic units comprising of 30 to 60 dwellings and form the basis of ABS statistical boundaries.  The mesh block file was retrieved from the ABS and has been pre processed to remove unwanted columns and all locations outside of the Brisbane LGA.","2f8799ee":"Offence rates provide an indicator of prevalence.  This is however not a complete analysis as it does not include other factors such as transient population or other influences of offending such as opportunity and motivation.\n### Rankings\nTables are often produced to display Standings or League Tables.  Let's produce a few as a tables showing the areas with the highest and lowest crime rates.  Frequency and Rates can be skewed by a number of factors.  For the purposes of this analyis, I will exclude locations with less than 1,000 Residents.\n","22c500ca":"Looking at the above plots, we can easily see that there has been an impact to trends.  Anecdotally, alcohol related offences have dropped and is likely due to the temporary closure of licensed premises during stage 2-4 restrictions.  What's more revealing is how drug related offences and assaults increased as restrictions were in place.\n\nUnlawful entries and theft has also remained below pre Covid-19 numbers.  I wonder if more people working from home has had an impact on the opportunity driver of home invasions?\n\n### Heatmap\nHeatmaps are another popular way to visualise the impact of two variables.  Let's see if this visual can summarise the above findings","e5536d3b":"Create heatmap\n\nLet's exclude offence types if they were reported less than 30 times in a given month.","bfd36425":"## Libraries","63e3232f":"# Exploratory Data Analysis\nExploratory data analysis will focus on incidents occuring in 2019.  Various statistics will be compiled to assist with the analysis.","8f0c4116":"# Data Sources\n## Brisbane Crime Dataset\n[(Crime locations last 5 years - Open Data Portal | Queensland Government)](https:\/\/www.data.qld.gov.au\/dataset\/crime-locations-2000-present), \nconsists of a list of reported offences, a datetime stamp of when the offence occured and geocoding to capture where the offence was committed."}}