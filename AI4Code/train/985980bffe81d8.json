{"cell_type":{"365fa89a":"code","627a46cd":"code","16eb3074":"code","0e3034ad":"code","de8e45ea":"code","5d5bd153":"code","44836a78":"code","cf9f4bef":"code","e8bd2ed0":"code","de52e5bc":"code","695b6514":"code","3def6973":"code","d3aa5805":"markdown","2985d789":"markdown","3672ab51":"markdown","48c52c6a":"markdown","0fadc80f":"markdown","a6cdae27":"markdown","2a40e44a":"markdown"},"source":{"365fa89a":"import tensorflow as tf\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom PIL import Image\nimport os\n\nimport tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Conv2D,Dense,MaxPool2D,Dropout,Flatten,BatchNormalization\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import EarlyStopping\n\n","627a46cd":"print(os.listdir('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images'))","16eb3074":"parasitized_cells=os.listdir('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized')\nuninfected_cells=os.listdir('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected')\n","0e3034ad":"plt.figure(figsize=(16,16))\nfor i in range(4):\n    plt.subplot(1,4,i+1)\n    img=cv2.imread('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Parasitized'+'\/'+ parasitized_cells[i])\n    plt.title('Parasitized')\n    plt.imshow(img)\n    plt.tight_layout()\nplt.show()\n            \n    ","de8e45ea":"plt.figure(figsize=(16,16))\nfor j in range(4):\n    plt.subplot(1,4,j+1)\n    img=cv2.imread('\/kaggle\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/Uninfected'+'\/'+ uninfected_cells[j])\n    plt.title('Uninfected')\n    plt.imshow(img)\n    plt.tight_layout()\nplt.show()","5d5bd153":"datagen=ImageDataGenerator(rescale=1\/255.0,validation_split=0.2)\n\ntrain_datagen=datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images',\n                             target_size=(50,50),class_mode='binary',batch_size=32,\n                                         subset='training')\nval_datagen=datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images',\n                                       target_size=(50,50),class_mode='binary',subset='validation')","44836a78":"model=Sequential()\n\nmodel.add(Conv2D(16,(3,3),activation='relu',input_shape=(50,50,3)))\nmodel.add(MaxPool2D(2,2))\n\nmodel.add(Conv2D(32,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\n\nmodel.add(Conv2D(32,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.2))\n\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1,activation='sigmoid'))\n\n\n\n\n","cf9f4bef":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","e8bd2ed0":"early_stopping=EarlyStopping(monitor='val_loss',patience=2)","de52e5bc":"history=model.fit_generator(generator=train_datagen,steps_per_epoch=len(train_datagen),\n                          epochs=30,validation_data=val_datagen,\n                          validation_steps=len(val_datagen),\n                          callbacks=[early_stopping])","695b6514":"plt.figure(figsize=(12,12))\ndef learning_graph(history,epoch):\n    epochs=range(1,epoch+1)\n   \n    plt.plot(epochs,history.history['accuracy'])\n    plt.plot(epochs,history.history['val_accuracy'])\n    plt.title('Model Accuracy: Training and Validation')\n    plt.xlabel('epochs')\n    plt.ylabel('acuracy')\n    plt.legend(['Train','Validation'],loc='upper left')\n    plt.show()\n    \n    \n    plt.plot(epochs,history.history['loss'])\n    plt.plot(epochs,history.history['val_loss'])\n    plt.title('Model Loss')\n    plt.xlabel('epochs')\n    plt.ylabel('loss')\n    plt.legend(['Train','Validation'],loc='upper left')\n    plt.show()\n    \n\n\n    \n    \n    ","3def6973":"learning_graph(history,7)","d3aa5805":"# 2.Listing the files in the directory","2985d789":"# 5. Visualisation plot for Accuracy and Loss","3672ab51":"# 4. Data Augmentation","48c52c6a":"# Malaria Detection using CNN(Beginners recommended)\n\nThe notebook is divided into the following steps: \n1. Importing Libraries\n2. Listing the files in the directory\n3. Data Visualisation: How Parasitized and Uninfected Cells look like\n4. Data Augmentation\n5. Define the Model\n6. Visualisation plot for Accuracy and Loss","0fadc80f":"# 3.Data Visualisation: How Parasitized and Uninfected Cells look like","a6cdae27":"# 5. Define the model","2a40e44a":"# 1. Imoport Libraries"}}