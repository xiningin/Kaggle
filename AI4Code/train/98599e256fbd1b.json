{"cell_type":{"cabf7f85":"code","c020e3bc":"code","e040e596":"code","61d102a1":"code","e63b8bc5":"code","db0849a6":"code","2156f9f2":"code","d7d5eb57":"code","adb91198":"code","c4142f95":"code","2377d784":"code","a3ab3b62":"code","cc41f19f":"code","7de94c57":"code","a4a61bbb":"code","29523896":"code","49de20cc":"code","114b4e49":"code","30b5940c":"code","7d40ad1c":"code","097e79c5":"code","fd0cecfe":"code","24425a6f":"code","f39a2b00":"markdown","634c1647":"markdown","6b7e7262":"markdown","23d295c4":"markdown","aaaf1a05":"markdown","ba194872":"markdown","2f790cee":"markdown","5cc91fd3":"markdown","97413aa9":"markdown","6b33fb28":"markdown","65fe3cf3":"markdown","35b9b86d":"markdown","0d6ccf34":"markdown","808fc60b":"markdown","6a7c7395":"markdown","55f0042f":"markdown","34e40022":"markdown","4fd131c6":"markdown","a99de717":"markdown","191d0496":"markdown","e0b27db7":"markdown","53e6f05b":"markdown","3abee953":"markdown","650df7be":"markdown","f384d7fe":"markdown","737090da":"markdown","a3b3c870":"markdown","24dd2471":"markdown","2e4472ec":"markdown","01da5fb9":"markdown","38122c01":"markdown","a5e1769a":"markdown","49f2afef":"markdown","7355a750":"markdown","1e40c473":"markdown","12f8e110":"markdown","90bd123e":"markdown","9f8ee82d":"markdown","f02450bc":"markdown","372268cd":"markdown","376001ab":"markdown","157c47e0":"markdown","8f618846":"markdown"},"source":{"cabf7f85":"import pandas as pd\nimport numpy as np\nfrom scipy.sparse.linalg import svds\nimport matplotlib.pyplot as plt\nimport seaborn as sns","c020e3bc":"data = pd.read_csv(\"\/kaggle\/input\/Female Daily Skincare Review Final.csv\")","e040e596":"data.isna().sum()","61d102a1":"data = data.dropna()","e63b8bc5":"data.duplicated().sum()\ndata.drop_duplicates(keep = \"first\", inplace = True)","db0849a6":"id_count = pd.crosstab(index=data.Reviewer,columns='count').sort_values(by='count',ascending=True)","2156f9f2":"name_r = id_count[id_count['count']>1]\nname_u = name_r.index.to_list()\ndata = data[data.Reviewer.isin(name_u)]","d7d5eb57":"data = pd.read_csv(\"\/kaggle\/input\/femdaily.csv\")\ndata.drop_duplicates(keep = \"first\", inplace = True)\ndata.drop(['Recommend','Date','Date Scrape','Url','Category'], axis=1, inplace=True)\ndata.rename(columns={'Reviewer':'reviewer','Product':'product','Stars':'rating'}, inplace=True)\ndata = (data[~(data['reviewer'] == ' ')])","adb91198":"data","c4142f95":"uniq_product = data['product'].nunique()\nprint(\"Number of uniq product :\",uniq_product)","2377d784":"uniq_reviewer = data['reviewer'].nunique()\nprint(\"Number of uniq reviewer :\",uniq_reviewer)","a3ab3b62":"plt.subplots(figsize = (7,6))\nplt.hist(data['rating'],color=\"orange\")","cc41f19f":"matrix_pivot = pd.pivot_table(data,values='rating',index='reviewer',columns='product').fillna(0)\nmatrix_pivot.head()","7de94c57":"matrix_pivot_ = matrix_pivot.values\nuser_ratings_mean = np.mean(matrix_pivot_, axis = 1)\nuser_rating = matrix_pivot_ - user_ratings_mean.reshape(-1,1)\n","a4a61bbb":"from scipy.sparse.linalg import svds\nU, sigma, Vt = svds(user_rating, k = 50)","29523896":"sigma = np.diag(sigma)","49de20cc":"all_user_predicted_ratings = np.dot(np.dot(U, sigma), Vt) + user_ratings_mean.reshape(-1, 1)","114b4e49":"preds_df = pd.DataFrame(all_user_predicted_ratings, columns = matrix_pivot.columns, index=matrix_pivot.index)\npreds_df","30b5940c":" def recommend_product(predictions_df, user, data_,num_recommendations):\n   \n    user_row_number = user\n    sorted_user_predictions = preds_df.loc[user_row_number].sort_values(ascending=False)\n\n    user_data = data_[data_.reviewer == (user)]\n    user_full = user_data\n\n\n    print('User {0} has already rated {1} product'.format(user, user_full.shape[0]))\n\n    a = data.drop_duplicates(subset='product', keep='last')\n    recommendations = (a[~a['product'].isin(user_full['product'])].\n         merge(pd.DataFrame(sorted_user_predictions).reset_index(), how = 'left',\n               left_on = 'product',\n               right_on = 'product').\n         rename(columns = {user_row_number: 'Predictions'}).\n         sort_values('Predictions', ascending = False).\n                       iloc[:num_recommendations, :-1]\n                      )\n\n    return user_full, recommendations","7d40ad1c":"user = str(input(\"Enter the user id to whom you want to recommend : \"))\nalready_rated, predictions = recommend_product(preds_df, user, data,5)","097e79c5":"already_rated","fd0cecfe":"prod_pred = predictions['product']","24425a6f":"prod_pred","f39a2b00":"<h4>Read the data<\/h4>","634c1647":"Input the user id to whom you want recommend the product.","6b7e7262":"<h4>d. Create predictive rating<\/h4><br>\nAfter we get the value from decomposition matrix above, we can create product ratings predictions for every user. ","23d295c4":"<div style=\"text-align:justify\">From the ilustration above, information given that Kiki (girl with black cat) likes to buy apple, banana, and watermelon. While Satsuki (girl with yellow shirt) likes to buy apple and banana. They have similar taste in apple and banana, so we can recommend Satsuki to buy watermelon.<br><\/div>\nIn <b>collaborative filtering<\/b> method there are two approaches which can be implemented :<br>\n<b>1. Memory-based approach: <\/b>create recommendation system by calculated closest users or items using cosine similarity or pearson correlation coefficients.<br>\n<b>2. Model-based approach: <\/b>create recommendation system by given predict user's rating value of unrated items.<br>\n<br>\n<div style=\"text-align:justify\">In this notebook, I will create simply recommender system to recommend skincare product to the customers which have never buy before. I'll predict the unrated items using Singular Value Decomposition (SVD) of <b>Matrix Factorization<\/b> algorithm. The data used comes from scraping result in Femaledaily Website. Data contains information about review product given by customers. There are several attribut inside, for more details, let's check it out!<\/div>","aaaf1a05":"<h4>Filter the data<\/h4><br>\nIn this section I will do filtering on the data where customer only rated the product once. Since those data having less information in recommendation system.","ba194872":"<h4>c. Singular Value Decomposition (SVD)<\/h4><br>\nCreate matrix U and Vt using library scipy.","2f790cee":"<div style=\"text-align:justify\">where U and V are orthogonal matrix with orthonormal eigenvectors and $\\sum$ is the diagonal matrix of singular values (essentially weights). The matrix can be factorized as :<\/div>","5cc91fd3":"<h2>Conclusion<\/h2>","97413aa9":"From the result above, we can conclude that:<br>\n1. Based on recommendation system above, Femaledaily website can provide product recommendation in the main dashboard when targeted users access the website.<br>\n2. Low dimensional matrix in Matrix factorization tried to capture the underlying features or hidden factors from the users and items.<br>\n3. This model is the right choice if you have many sparcity data.<br>\n","6b33fb28":"<h4>Drop unused columns<\/h4>","65fe3cf3":"![New%20Project.png](attachment:New%20Project.png)","35b9b86d":"![matrix.JPG](attachment:matrix.JPG)","0d6ccf34":"<h2>Introduction<\/h2>","808fc60b":"We can arrange eigenvectors in different orders to produce U and V.","6a7c7395":"Here above, user have 22359 unique number, this number will become number of rows matrix in modelling step.","55f0042f":"<h4>Import library<\/h4>","34e40022":"<h4>Check and drop duplicated values<\/h4>","4fd131c6":"<div style=\"text-align:justify\">And, here below 5 highest predicted rating from user id \"zzulia\". The recommendation system suggest \"zzulia\" to buy Prominent Essence Facial Mask, Facial Mask Bedak Dingin, Oil Control Mask, White Aqua Serum Sheet Mask, and Essential Vitamin. Suggested products are dominated with \"Mask\" product, because from historical data above \"zzulia\" already rate 2 product with category \"Mask.<\/div>","a99de717":"<h3>Singular Value Decomposition (SVD)<\/h3>\n","191d0496":"Have you ever imagine how Netflix give you recommendation for movies you have never watch before? <br>\n<div style=\"text-align:justify\">If you're familiar with machine learning, you can find the answer. Yappps.. that's right. The answer is \"Recommendation System\".\nRecommendation system or recommender system is subclass of information filtering system that seeks to predict the \"rating\" or \"preference\" a user would give to an item. Recommendation system aims to telling us which movies to watch (Netflix), which product to buy (Amazone), or which songs to listen (Spotify) based on our historical data.<br><\/div>\n<div style=\"text-align:justify\"><b>Collaborative filtering<\/b> is one of basic models for recommendation system which are based on assumption that people like things similar to other things they like, or things that are liked by other people which have similar taste with them.<br><\/div>\nThe ilustration given below :","e0b27db7":"From the visualization above, bar plot shown that users frequently give rating in 5 or 4, which mean that they are satisfied with the product.","53e6f05b":"<h3>Matrix Factorization<\/h3>","3abee953":"<h4>b. Normalize rating values<\/h4><br>\nWhy we do need to normalize the rating?<br>\n<div style=\"text-align:justify\">Because it starts with the fact that people rate often on very different scales. Say that Kiki and Satsuki use a product B, and Kiki gives rating value 5 on that product, because Satsuki has a high standart she only gives 3 on that product. Here is, the 5 from Kiki is 3 from Satsuki. To make the model better is, we can increase the efficiency of this algorithm if we normalize user\u2019s rating by substract rating value given by user in each product with mean rating in each product.<\/div>","650df7be":"<h4>Number of uniq product<\/h4>","f384d7fe":"<h4>e. Create recommendation<\/h4><br>\nIn this final step we will create recommendation product. I'll return the product with the 5 highest predicted rating that the user hasn\u2019t already rated. ","737090da":"<div style=\"text-align:justify\">Intuitively, we can understand hidden factors for items and users from illustration above. Say that U is low dimensional matrix for Users features and V is low dimensional matrix for Product features. Every matrix values represent different characteristics about the users and the product. For e.g I have 3 features in Product matrix <i>(i) what kind categories of the product? (ii) Does the product contains dangerous addictive substance? (iii)How the product give impact in our skin? <\/i> Likewise, in Users matrix might represent <i>(i)how sensitive the user's skin into the product substances? (ii)Does the user like \"X\" category product, an so on<\/i>. We can get the predictive ratings by calculate the dot product between matrix U and matrix V.<\/div>","a3b3c870":"Here above, product have 3297 unique number, this number will become number of columns matrix in modelling step.","24dd2471":"<h4>a. Create matrix pivot<\/h4><br>\nCreate matrix pivot where the vertical value is users name, horizontal value is product name, and the value inside matrix is rating given by users.","2e4472ec":"<h2>Build Recommendation System<\/h2>","01da5fb9":"<h2>Data Preparation<\/h2>","38122c01":"And, here below matrix is result of predictive rating from each user in each product. ","a5e1769a":"<h2>Data Exploration<\/h2>","49f2afef":"<h4>Implementation Recommender System in Python Code<\/h4>","7355a750":"![matrix_.jpg](attachment:matrix_.jpg)","1e40c473":" # Skincare Recommendation System using Collaborative Filtering (Matrix Factorization)","12f8e110":"<div style=\"text-align:justify\">If you see the pivot matrix below, you will find that pivot matrix have so many zero value (missing value). Why did it happen? It can be happen because not every user give a rating in a every product, this condition called <b>sparse matrix.<\/b>Sparse matrix is limitation in collaborative filtering models, because sparse matrix gives bias information in our recommender system. There will be popularity bias in the recommendation given by the system to user, system will give recommends the product with the most interactions without any personalization.<br><\/div>\n<div style=\"text-align:justify\"><b>Matrix Factorization<\/b> is one way to handle those issue. Matrix factorization will breaking down of one matrix into a product of multiple matrices and give predictive rating in sparse matrix. Basic idea from matrix factorization is that attitudes or preferences of a user can be determined by a small number of hidden factors.<br><\/div>\nIllustration given below:","90bd123e":"Since in the next step (modelling) we will define and create matrix based on Product X User, so we need to understanding about size of both unique product and user.","9f8ee82d":"![svd.JPG](attachment:svd.JPG)","f02450bc":"<h4>Number of uniq users<\/h4>","372268cd":"<h4>Distribution rating given by users<\/h4>","376001ab":"<div style=\"text-align:justify\"><b>Singular Value Decomposition<\/b> is one of type Matrix Factorization. SVD algorithm will decomposes a matrix R into the best lower rank approximation of the original matrix R. Matematically SVD produce by the formula below :<\/div>","157c47e0":"Result below shown that \"zzulia\" already rate 3 product. Twice for Facial Mask with different rating in each product, and once for Pembersih Two In One Bengkoang Whitening.","8f618846":"<h4>Check and drop missing values<\/h4>"}}