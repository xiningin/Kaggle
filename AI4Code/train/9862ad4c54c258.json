{"cell_type":{"3fa9cd7c":"code","55888f86":"code","71210c07":"code","f64d9abb":"code","9dbaf833":"code","b88023ac":"code","46434f12":"code","40a9481b":"code","14c3e727":"code","4cda583c":"code","79ac3e97":"code","0ba3638e":"code","962de2e2":"code","42c1a01d":"markdown","795baa73":"markdown","59a2c7d6":"markdown","ac04ecb9":"markdown","e105865b":"markdown","db62fe11":"markdown","6b462b0c":"markdown","49428a55":"markdown"},"source":{"3fa9cd7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","55888f86":"from keras.models import Sequential\nfrom keras.layers import Convolution2D\nfrom keras.layers import MaxPooling2D\nfrom keras.layers import Flatten\nfrom keras.layers import Dense\nfrom keras.layers import Activation","71210c07":"classifier=Sequential()","f64d9abb":"classifier.add(Convolution2D(32, 3, 3, input_shape = (256, 256, 3), activation=('relu')))","9dbaf833":"classifier.add(MaxPooling2D(pool_size=(2,2)))","b88023ac":"classifier.add(Flatten())","46434f12":"classifier.add(Dense(output_dim = 128, activation=('relu'))) # input for the neural network","40a9481b":"classifier.add(Dense(output_dim=1, activation=('sigmoid')))\n# here we are adding the output layer\n# using sigmoid activation function as expecting binary outcome\n# if we expect more than two outcome we would use the softmax function\n# the ouput dim is 1 since we just expect the predicted probabailities of the classes","14c3e727":"classifier.compile(optimizer='adam', loss='binary_crossentropy',metrics=['accuracy'])","4cda583c":"from keras.preprocessing.image import ImageDataGenerator","79ac3e97":"train_datagen = ImageDataGenerator(rescale=1.\/255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True)\n# To prevent overfitting that is known as image augmentataion\n# rescale ensures the images are scaled to have pixel values between zero and one. \n# horizontally flip=True= means the images will be flipped horizontally. ","0ba3638e":"test_datagen = ImageDataGenerator(rescale=1.\/255)","962de2e2":"training_set = train_datagen.flow_from_directory('..\/kaggle\/input\/images-for-testing\/cat1.jpg',\n                                                 target_size=(256, 256), batch_size=32, class_mode='binary')","42c1a01d":"### Fitting the CNN","795baa73":"### Convolution","59a2c7d6":"### Compiling CNN\n3 parameters are required\n* the optimizer\n* the loss function\n* the metrics of performance ","ac04ecb9":"### Flattening","e105865b":"### Full Connection","db62fe11":"### Pooling","6b462b0c":"### Sequential to initialize the neural network\n### Convolution2D is to make convolutional network that deals with images \n### Maxpooling2D layer is use to add the pooling layer\n### Flatten is the function that converts the pooled featured map in to a asingle column that is passeed to the fully connected layer","49428a55":"### Initializing the neurl network"}}