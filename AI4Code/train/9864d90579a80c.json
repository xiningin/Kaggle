{"cell_type":{"da3451c4":"code","28156cde":"code","5e9fd583":"code","e11d9f8a":"code","0224f716":"code","76559411":"code","fd42d057":"code","ca7ef66b":"code","15db9770":"code","d450c21a":"code","e00fe25b":"code","0e0d6eb4":"code","fec341a7":"code","fce81177":"code","3c631904":"code","838cd6f0":"code","db7448a7":"code","7f62e1b5":"code","6e47a4a4":"code","3252276d":"code","d0429dcd":"code","9a11b679":"code","b4627ae3":"code","a1844401":"code","d76a1de8":"code","52843bb7":"code","44be0887":"code","a1102629":"code","c8db3cbe":"code","b6368e62":"code","12984dab":"code","e14ba8c0":"code","fefdfa46":"code","5e4542ce":"code","1b94dc2c":"code","db77b8cf":"code","920ab1d2":"code","8772a3f1":"code","c1164ab7":"code","4a7381d2":"code","8ed1de7c":"code","56e2d360":"code","34047588":"code","86a9a33a":"code","c2ca700c":"code","36c344e7":"code","af38b1d3":"code","0134dce8":"code","c24e6161":"code","781569d5":"code","6de7bbf1":"code","494709ca":"code","0f67bf27":"code","6a110a48":"code","df6467c2":"code","613aac37":"code","3a327ca7":"code","7418aea2":"code","f7898507":"code","a19c3ba5":"code","c859e876":"code","54145b08":"code","68fda0f4":"code","e907da76":"code","3caf0eaf":"code","63e361ca":"code","f3b4b585":"code","c08fb7fb":"code","15b9440f":"code","56044182":"code","9a6181ae":"code","87f61a7e":"code","f4567611":"code","855f8902":"code","4ccf5bde":"code","59a3db92":"code","3eeea7bc":"code","44f95920":"markdown","76a1be4d":"markdown","ea281b7e":"markdown","6d38c85c":"markdown","64017e91":"markdown","a4c029b1":"markdown","1013bc7c":"markdown","9fb54385":"markdown","f60b3b0a":"markdown","a65c27ca":"markdown","3d0f3b41":"markdown","86fcc28b":"markdown","7aeea7a4":"markdown","ca66f122":"markdown","f16f39e2":"markdown","caa5dfad":"markdown","2528b045":"markdown","2c69ce0c":"markdown","1a1a6381":"markdown","05fc728a":"markdown","a0397baa":"markdown","13907ec9":"markdown","d15d74ad":"markdown","d00be270":"markdown","029f2b2f":"markdown","a60fd2cd":"markdown","2ec5cc20":"markdown","8859c07c":"markdown","ef58a048":"markdown","2505107b":"markdown","c0e54ae4":"markdown","e9db1f99":"markdown","b2fbefaf":"markdown","29793614":"markdown","f77eaaf9":"markdown","dc8fd4e3":"markdown"},"source":{"da3451c4":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os","28156cde":"files=os.listdir(r'..\/input\/uber-pickups-in-new-york-city')[-7:]\nfiles","5e9fd583":"#uber-raw-data-jul14\nfinal = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-jul14.csv')","e11d9f8a":"final.shape","0224f716":"df=final.copy()","76559411":"df.head()","fd42d057":"df.tail()","ca7ef66b":"df.shape","15db9770":"df.isna().sum()","d450c21a":"df.dtypes","e00fe25b":"\ndf['Date\/Time'] = pd.to_datetime(df['Date\/Time'], format=\"%m\/%d\/%Y %H:%M:%S\")","0e0d6eb4":"df.dtypes","fec341a7":"\ndf['weekday']=df['Date\/Time'].dt.day_name()\ndf['day']=df['Date\/Time'].dt.day\ndf['minute']=df['Date\/Time'].dt.minute\ndf['month']=df['Date\/Time'].dt.month\ndf['hour']=df['Date\/Time'].dt.hour","fce81177":"df.dtypes","3c631904":"df.head()","838cd6f0":"df['Base'].unique()","db7448a7":"df['day'].unique()","7f62e1b5":"df['weekday'].unique()","6e47a4a4":"import plotly.express as px","3252276d":"px.bar(x=df['weekday'].value_counts().index,\n      y=df['weekday'].value_counts().values\n      )","d0429dcd":"plt.hist(df['hour'])","9a11b679":"for i,month in enumerate(df['month'].unique()):\n    print(month)","b4627ae3":"\nplt.figure(figsize=(40,20))\nfor i,month in enumerate(df['month'].unique()):\n    plt.subplot(3,2,i+1)\n    df[df['month']==month]['hour'].hist()\n","a1844401":"for i in df['month'].unique():\n    plt.figure(figsize=(5,3))\n    df[df['month']==i]['hour'].hist()\n    ","d76a1de8":"pip install chart_studio","52843bb7":"# !pip install chart_studio\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","44be0887":"trace1 = go.Bar( \n        x = df.groupby('month')['hour'].sum().index,\n        y = df.groupby('month')['hour'].sum(),\n        name= 'Priority')\niplot([trace1])","a1102629":"plt.figure(figsize=(10,6))\nplt.hist(df['day'], bins=30, rwidth=.8, range=(0.5, 30.5))\nplt.xlabel('date of the month')\nplt.ylabel('Total Journeys')\nplt.title('Journeys by Month Day')","c8db3cbe":"plt.figure(figsize=(20,8))\nfor i,month in enumerate(df['month'].unique(),1):\n    plt.subplot(3,2,i)\n    df_out=df[df['month']==month]\n    plt.hist(df_out['day'])\n    plt.xlabel('days in month'.format(i))\n    plt.ylabel('total rides')","b6368e62":"lat_df = df[[\"Lat\",\"Lon\"]] ","12984dab":"df[\"hour\"].isna().sum()","e14ba8c0":"plt.figure(figsize=(20,8))\nsns.set_style(style='whitegrid')\nsns.pointplot(x=\"hour\",y=\"Lat\",data=df)","fefdfa46":"sns.set(rc={'figure.figsize':(11.7,8.27)})\nax=sns.pointplot(x=\"hour\",y=\"Lat\", hue=\"weekday\",data=df)\nax.set_title('hoursoffday vs latiitide of passenger')\n","5e4542ce":"df.head()","1b94dc2c":"df['Base'].head()","db77b8cf":"df.groupby(['Base','month'])['Date\/Time'].count()","920ab1d2":"base=df.groupby(['Base','month'])['Date\/Time'].count().reset_index()\nbase","8772a3f1":"def count_rows(rows):\n    return len(rows)","c1164ab7":"by_cross = df.groupby(['weekday','hour']).apply(count_rows)\nby_cross","4a7381d2":"pivot=by_cross.unstack()\npivot","8ed1de7c":"plt.figure(figsize=(10,6))\nsns.heatmap(pivot, annot=False)","56e2d360":"df.head()","34047588":"def heatmap(col1,col2):\n    by_cross = df.groupby([col1,col2]).apply(lambda x:len(x))\n    pivot=by_cross.unstack()\n    plt.figure(figsize=(10,6))\n    return sns.heatmap(pivot,annot=False)","86a9a33a":"## validating above Analysis through Heatmap\nheatmap('day','hour')","c2ca700c":"heatmap('day','month')","36c344e7":"plt.figure(figsize=(10,6))\n\nplt.plot(df['Lon'], df['Lat'],'r+', ms=0.5)\nplt.xlim(-74.2, -73.7)\nplt.ylim(40.6,41)","af38b1d3":"df.head()","0134dce8":"df_out=df[df['weekday']=='Sunday']\ndf_out.head()","c24e6161":"df_out.groupby(['Lat','Lon'])['weekday'].count().reset_index()","781569d5":"from folium.plugins import HeatMap","6de7bbf1":"import folium\nfrom folium.plugins import HeatMap\nbasemap=folium.Map()","494709ca":"HeatMap(df_out.groupby(['Lat','Lon'])['weekday'].count().reset_index(),zoom=20,radius=15).add_to(basemap)\nbasemap","0f67bf27":"def plot(df,day):\n    df_out=df[df['weekday']==day]\n    df_out.groupby(['Lat','Lon'])['weekday'].count().reset_index()\n    HeatMap(df_out.groupby(['Lat','Lon'])['weekday'].count().reset_index(),zoom=20,radius=15).add_to(basemap)\n    return basemap\n","6a110a48":"plot(df,'Sunday')","df6467c2":"uber_15 = pd.read_csv(r'..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-janjune-15.csv',encoding='utf-8')\nuber_15.head()","613aac37":"uber_15.shape","3a327ca7":"#Checking the minimum date in the uber_15\nuber_15['Pickup_date'].min()","7418aea2":"#Checking the maximum date in the uber_15\nuber_15['Pickup_date'].max()","f7898507":"uber_15['Pickup_date'] =  pd.to_datetime(uber_15['Pickup_date'], format='%Y-%m-%d %H:%M:%S')","a19c3ba5":"\nuber_15['weekday']=uber_15['Pickup_date'].dt.day_name()\nuber_15['day']=uber_15['Pickup_date'].dt.day\nuber_15['minute']=uber_15['Pickup_date'].dt.minute\nuber_15['month']=uber_15['Pickup_date'].dt.month\nuber_15['hour']=uber_15['Pickup_date'].dt.hour","c859e876":"uber_15.head()","54145b08":"px.bar(x=uber_15['month'].value_counts().index,\n           y=uber_15['month'].value_counts().values)","68fda0f4":"ax=sns.countplot(uber_15['hour'])\nax","e907da76":"uber_15.groupby(['weekday', 'hour'])['Pickup_date'].count()","3caf0eaf":"uber_15.groupby(['weekday', 'hour'])['Pickup_date'].count().reset_index()","63e361ca":"summary=uber_15.groupby(['weekday', 'hour'])['Pickup_date'].count().reset_index()","f3b4b585":"summary=summary.rename(columns = {'Pickup_date':'Counts'})\nsummary","c08fb7fb":"plt.figure(figsize=(10,6))\nsns.pointplot(x=\"hour\", y=\"Counts\", hue=\"weekday\", data=summary)","15b9440f":"uber_foil=pd.read_csv(r'..\/input\/uber-pickups-in-new-york-city\/Uber-Jan-Feb-FOIL.csv')","56044182":"uber_foil.head()","9a6181ae":"uber_foil['dispatching_base_number'].unique()","87f61a7e":"sns.boxplot(x = 'dispatching_base_number', y = 'active_vehicles', data = uber_foil)","f4567611":"sns.boxplot(x = 'dispatching_base_number', y = 'trips', data = uber_foil)","855f8902":"# Finding the ratio of trips\/active_vehicles\nuber_foil['trips\/vehicle'] = uber_foil['trips']\/uber_foil['active_vehicles']","4ccf5bde":"uber_foil.head()","59a3db92":"uber_foil.set_index('date')","3eeea7bc":"plt.figure(figsize=(10,6))\nuber_foil.set_index('date').groupby(['dispatching_base_number'])['trips\/vehicle'].plot()\nplt.ylabel('Average trips\/vehicle')\nplt.title('Demand vs Supply chart (Date-wise)')\nplt.legend()","44f95920":"### getting Rush in hour ","76a1be4d":"#### It peaks during evening time when people are logging off from work","ea281b7e":"#### Analysis of Journey of Each  Day","6d38c85c":"##### Interestingly, after the morning rush, the number of Uber pickups doesn't dip much throughout the rest of the morning and early afternoon. There is significantly more demand in the evening than the daytime. Let's investigate to see if there's a difference in hourly pattern for different days of the week.","64017e91":"#### We can see that the number of Uber pickup has been steadily increasing throughout the first half of 2015 in NYC","a4c029b1":"#### analysis of which month has max rides","1013bc7c":"##### Loading Uber-Jan-Feb-FOIL.csv","9fb54385":"#### Analysis of Location data points\u00b6","f60b3b0a":"#### Analysis of Rush of each hour in each month","a65c27ca":"##### how Average trips\/vehicle inc\/decreases with dates with each of base umber","3d0f3b41":"#### seems to have highest sales on Thursday","86fcc28b":"##### adding hue params","7aeea7a4":"## Heatmap by Hour and Weekday.","ca66f122":"## Data Loading and Preparation\u00b6","f16f39e2":"#### Analysis of Total rides month wise","caa5dfad":"#### to analyse which base number gets popular by month name","2528b045":"## Analysis of Jan-June uber_15","2c69ce0c":"#### Analysis of journey by Week-days","1a1a6381":"### perform Spatial Analysis using heatmap to get a clear cut of Rush on Sunday(Weekend)","05fc728a":"##### The globe is split into an imaginary 360 sections from both top to bottom (north to south) and 180 sections from side to side (west to east). The sections running from top to bottom on a globe are called longitude, and the sections running from side to side on a globe are called latitude.\n\n\n##### Latitude is the measurement of distance north or south of the Equator.\n\n##### Every location on earth has a global address. Because the address is in numbers, people can communicate about location no matter what language they might speak. A global address is given as two numbers called coordinates. The two numbers are a location's latitude number and its longitude number (\"Lat\/Long\").","a0397baa":"#### seems to have more number of trips in B02764","13907ec9":"##### Lat : The latitude of the Uber pickup\n\n##### Lon : The longitude of the Uber pickup\n\n##### Base : The TLC base company code affiliated with the Uber pickup","d15d74ad":"##### Lets create a function for a specific day","d00be270":"#### Analysing Rush in New york City","029f2b2f":"###  Data Preparation\u00b6","a60fd2cd":"Cek every database","2ec5cc20":"### Analysis by Hour","8859c07c":"##### simplest way of creating pivot tables,first of all call groupby on 2 columns so that we will get groups \n##### df.groupby(['weekday','hour']).apply(lambda x: len(x)), now \"weekday\" becomes rows and \"hour\" becomes cols\n##### & then call unstack","ef58a048":"#### seems to have more number of Active Vehicles in B02764","2505107b":"#### create pivot_tables","c0e54ae4":"#### 2 Cross Analysis\n#### Through our exploration we are going to visualize:\n\n\n#### 1.Heatmap by Hour and Weekday.\n#### 2.Heatmap by Hour and Day.\n#### 3.Heatmap by Month and Day.\n#### 4.Heatmap by Month and Weekday.","e9db1f99":"### Loading Data\u00b6","b2fbefaf":"##### Uber pickups by the month in NYC","29793614":"### Analysing In-Depth Analysis of Rush in New york City Day & hour wise","f77eaaf9":"##### creating heatmap so that it can be easily visualize","dc8fd4e3":"##### group the data by Weekday and hour"}}