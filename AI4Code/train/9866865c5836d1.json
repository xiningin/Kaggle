{"cell_type":{"fcd71f0d":"code","dec2776e":"code","ad44263c":"code","6473b5b7":"code","f07c3f76":"code","ceb9acfc":"code","5aa3ec9d":"code","410fa6dc":"code","ea94fdd9":"code","7b3f9a03":"code","99d46836":"code","141f3fcb":"code","0938a9ad":"code","666dbd58":"code","ea4268ee":"code","19fd1320":"code","47da9a38":"markdown","a1999a9c":"markdown","3a6a1421":"markdown","bcbe7181":"markdown","4e83d4ab":"markdown","bd002104":"markdown","6e2a9d70":"markdown","8fa50f09":"markdown","9fad5184":"markdown","099e2be2":"markdown","2c2aabd0":"markdown","48ed5ee8":"markdown","81783628":"markdown","c6922ea7":"markdown","27091770":"markdown","a3b49203":"markdown"},"source":{"fcd71f0d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_extraction import DictVectorizer\n\nplt.rcParams['figure.figsize'] = (16, 8)\nplt.style.use('fivethirtyeight')","dec2776e":"df = pd.read_csv('..\/input\/default-of-credit-card-clients-dataset\/UCI_Credit_Card.csv')\ndisplay(df.head())\nprint()\ndisplay(df.info())","ad44263c":"df.columns = df.columns.str.lower().str.replace(' ', '_')\ndf.rename(columns={'default.payment.next.month':'def_pay'}, inplace=True)\ndf.rename(columns={'pay_0':'pay_1'}, inplace=True)\ndf.head()","6473b5b7":"\"\"\"Removing the index column\"\"\"\ndf = df.reset_index(drop=True)\n\n\"\"\"Checking for missing values\"\"\"\ndf.isnull().sum()","f07c3f76":"\"\"\"Creating Categorical and Numerical Columns\"\"\"\nuseful_features = [col for col in df.columns if col not in ['id', 'def_pay']]\n\ndef_cnt = (df['def_pay'].value_counts(normalize=True)*100)\ndef_cnt.plot.bar(figsize=(6,6))\nplt.xticks(fontsize=12, rotation=0)\nplt.yticks(fontsize=12)\nplt.title(\"Probability Of Defaulting Payment Next Month\", fontsize=15)\nfor x,y in zip([0,1],def_cnt):\n    plt.text(x,y,y,fontsize=12)\nplt.show()","ceb9acfc":"df[useful_features].describe().T","5aa3ec9d":"plt.subplots(figsize=(20,5))\nplt.subplot(121)\nsns.distplot(df['limit_bal'])\n\nplt.subplot(122)\nsns.distplot(df['age'])\n\nplt.show();","410fa6dc":"df.columns","ea94fdd9":"\"\"\"Number of Clients in Each Group\"\"\"\nbins = [20,30,40,50,60,70,80]\nnames = ['21-30','31-40','41-50','51-60','61-70','71-80']\ndf['age_bin'] = pd.cut(x=df['age'], bins=bins, labels=names, right=True)\n\nage_cnt = df['age_bin'].value_counts()\nage_0 = (df.age_bin[df['def_pay'] == 0].value_counts())\nage_1 = (df.age_bin[df['def_pay'] == 1].value_counts())\n\nplt.subplots(figsize=(8,5))\nplt.bar(age_0.index, age_0.values, label='0')\nplt.bar(age_1.index, age_1.values, label='1')\n\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title(\"Number of clients in each age group\", fontsize=15)\nplt.legend(loc='upper right', fontsize=15)\nplt.show()","7b3f9a03":"plt.subplots(figsize=(30,20))\nsns.heatmap(df.corr(), annot=True, lw = 0.1, cmap  = 'crest_r')\nplt.show()","99d46836":"plt.subplots(figsize=(20,10))\n\nplt.subplot(231)\nplt.scatter(x=df.pay_amt1, y=df.bill_amt1, c='r', s=1)\n\nplt.subplot(232)\nplt.scatter(x=df.pay_amt2, y=df.bill_amt2, c='b', s=1)\n\nplt.subplot(233)\nplt.scatter(x=df.pay_amt3, y=df.bill_amt3, c='g', s=1)\n\nplt.subplot(234)\nplt.scatter(x=df.pay_amt4, y=df.bill_amt4, c='c', s=1)\nplt.ylabel(\"Bill Amount in past 6 months\", fontsize=25)\n\nplt.subplot(235)\nplt.scatter(x=df.pay_amt5, y=df.bill_amt5, c='y', s=1)\nplt.xlabel(\"Payment in past 6 months\", fontsize=25)\n\nplt.subplot(236)\nplt.scatter(x=df.pay_amt6, y=df.bill_amt6, c='m', s=1)\n\nplt.show()","141f3fcb":"\"\"\"Many columns which are Categorical but shown as Numerical\"\"\"\ndisplay(df.nunique())\n\n\"\"\"Extract Those columns and convert them into categorical columns: Except for def_pay(Target Variable) and age_bin(created for visualization)\"\"\"\ncategorical = ['sex','education','marriage','pay_1','pay_2','pay_3','pay_4','pay_5','pay_6']\n\nfor i in categorical:\n    df[i] = df[i].astype(\"object\")\n\n    \nprint('\\n')    \ndisplay(df.info())","0938a9ad":"\"\"\"We are using sklearn train_test_split function to split the data into full_train and test set\"\"\"\nfrom sklearn.model_selection import train_test_split\n\n# Making full_train and test set\ndf_full_train, df_test = train_test_split(df, test_size=0.2, random_state=7)\n\n# Next making train and validation set from full_train set\ndf_train, df_val = train_test_split(df_full_train, test_size=0.25, random_state=7)\n\n# checking the number of values in datasets\nprint(\"Train_set %s:\" %len(df_train), \"Validation_set %s:\" %len(df_val), \"Test_set %s:\" %len(df_test))\n\n# Dropping indexes of these datasets\ndf_train = df_train.reset_index(drop=True)\ndf_val = df_val.reset_index(drop=True)\ndf_test = df_test.reset_index(drop=True)\n\n# Creating Dependent Variables\ny_train = df_train.def_pay.values\ny_val = df_val.def_pay.values\ny_test = df_test.def_pay.values\n\n# Deleting target column i.e. churn from training datasets\ndel df_train['def_pay']\ndel df_val['def_pay']\ndel df_test['def_pay']\n\n\n\"\"\"One Hot Encoding using DictVectorizer\"\"\"\n\n\n\ndv = DictVectorizer(sparse=False)                              \n\ntrain_dict = df_train[useful_features].to_dict(orient='records') # For making dict row-wise we use orient = 'records\nX_train = dv.fit_transform(train_dict)\n\nval_dict = df_val[useful_features].to_dict(orient='records') # For making dict row-wise we use orient = 'records'\nX_val = dv.transform(val_dict)\n\ntest_dict = df_test[useful_features].to_dict(orient='records') # For making dict row-wise we use orient = 'records'\nX_test = dv.transform(test_dict)","666dbd58":"model = LogisticRegression(solver = 'liblinear',penalty='l1')\nmodel1 = model.fit(X_train, y_train)\n\n\"\"\"Applying the model to Validation set to predict the probability\"\"\"\ny_pred = model.predict_proba(X_val)[:, 1]\n\n\"\"\"Making churn decision using probability threshold of 0.5\"\"\"\ndefaulter_decision = (y_pred >= 0.5)\n\n\"\"\"Accuracy Rate: mean of correct predictions\"\"\"\ndisplay(\"Accuracy Rate on Validation set\", (y_val == defaulter_decision).mean())","ea4268ee":"\"\"\"Checking the Model Interpretations\"\"\"\n\"\"\"Now using zip to combine features and their respective coefficients\"\"\"\ndict(zip(dv.get_feature_names(), model.coef_[0]))","19fd1320":"y_pred_test = model.predict_proba(X_test)[:, 1]\ndefaulter_decision_test  = (y_pred_test >= 0.5)\n\n\n\"\"\"Observe the above result in a dataset\"\"\"\ndf_pred = pd.DataFrame()\ndf_pred['probability'] = y_pred_test\ndf_pred['prediction'] = defaulter_decision_test.astype(int)\ndf_pred['actual'] = y_test\n\ndf_pred['correct'] = df_pred.prediction == df_pred.actual\ndisplay(df_pred)\ndisplay(\"Accuracy Rate on Test set\", df_pred['correct'].mean())","47da9a38":"**Observations**:\n- **we can see that all the 25 columns have 22003 count which indicates there is no missing value.**\n","a1999a9c":"<a id=\"table-of-contents\"><\/a>","3a6a1421":"**Observation:**\n- **As we can see that next month default prediction is dependent on repayment status of past six months of all the features given to us. But there is multicollinearity between the Repayment Status features.**\n- **We will first train model wil all the features and try reducing the non-important features.**","bcbe7181":"[back to top](#table-of-contents)\n<a id=\"5\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">5. Exploratory Data Analysis\n    \n<\/div>","4e83d4ab":"[back to top](#table-of-contents)\n<a id=\"7\"><\/a>\n\n<div style=\"background:#2b6684; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">7. Logistic Regression\n<ul style= \"font-size:15px;font-family:cursive;color:white\">\n<li >Similar to Linear Regression as both of them are linear models.<\/li>\n<li >Logistic Regression uses sigmoid function over the score of dot product and hence converts the results into the range of 0,1.<\/li>\n<li >Sigmoid Function = $\\large g(x_i) = \\Large \\frac{\\mathrm{1} }{\\mathrm{1} + e^{-x} }  $<\/li>\n<li >Linear regression is straightforward to understand and explain, and can be regularized to avoid overfitting. In addition, linear models can be updated easily with new data using stochastic gradient descent.<\/li><\/ul>\n<\/div>","bd002104":"**Observations**:\n- **By plotting the continous variables we observe that dataset consists of skewed data of limiting balance and age of clients.**\n- **We have more number of clients having limiting balance between 0 to 200000 currency.**\n- **We have more number of clients from age bracket of 20 to 40, i.e., clients from mostly young to mid aged groups.**\n- **We will observe the effect of variables on target variable below**","6e2a9d70":"<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\"><u>Content in this Notebook<\/u><\/div>\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:30px;color:white\"><u>Default of Credit Card Clients Dataset<\/u>     \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#1\"> 1. Introduction <\/a><\/li>      \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#2\" target=\"_blank\"> 2. Impoting Libraries <\/a><\/li> \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15;\" href = \"#3\"> 3. Loading and Reading Data <\/a><\/li> \n<li  style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#4\"> 4. Data Cleaning: Cleaning Strings in Column <\/a><\/li> \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#5\"> 5. Exploratory Data Analysis <\/a><\/li> \n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#6\"> 6. Data Preparation   <\/a><\/li>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#7\"> 7. Logistic Regression  <\/a><\/li>\n<li style = \"line-height: 0.7\"><a style=\"font-family:cursive;font-size:17px; color:#ecfe15\" href = \"#8\"> 8. Using the model<\/a>\n  \n<\/div>\n","8fa50f09":"[back to top](#table-of-contents)\n<a id=\"1\"><\/a>\n\n<div style=\"background:#2b6684;color:white;font-family:cursive;font-size:17px;padding:0.5em;border-radius:0.2em\">\n<p style=\"font-family:'Goudy Old Style';font-size:30px;color:yellow\">1. Introduction <\/p>\n\n<br><u style=\"color:yellow\">Dataset<\/u>\n\n<li   style=\"color:white\">This dataset contains information on default payments, demographic factors, credit data, history of payment, and bill statements of credit card clients in Taiwan from April 2005 to September 2005.<li>\n\n<br><u style=\"color:yellow\">There are 25 variables:<\/u>\n\n<li  style=\"color:white\">ID: ID of each client<\/li>\n<li  style=\"color:white\">LIMIT_BAL: Amount of given credit in NT dollars (includes individual and family\/supplementary credit<\/li>\n<li  style=\"color:white\">SEX: Gender (1=male, 2=female)<\/li>\n<li  style=\"color:white\">EDUCATION: (1=graduate school, 2=university, 3=high school, 4=others, 5=unknown, 6=unknown)<\/li>\n<li  style=\"color:white\">MARRIAGE: Marital status (1=married, 2=single, 3=others)<\/li>\n<li  style=\"color:white\">AGE: Age in years<\/li>\n<li  style=\"color:white\">PAY_0: Repayment status in September, 2005 (-1=pay duly, 1=payment delay for one month, 2=payment delay for two months, ... 8=payment delay for eight months, 9=payment delay for nine months and above)<\/li>\n<li  style=\"color:white\">PAY_2: Repayment status in August, 2005 (scale same as above)<\/li>\n<li  style=\"color:white\">PAY_3: Repayment status in July, 2005 (scale same as above)<\/li>\n<li  style=\"color:white\">PAY_4: Repayment status in June, 2005 (scale same as above)<\/li>\n<li  style=\"color:white\">PAY_5: Repayment status in May, 2005 (scale same as above)<\/li>\n<li  style=\"color:white\">PAY_6: Repayment status in April, 2005 (scale same as above)<\/li>\n<li  style=\"color:white\">BILL_AMT1: Amount of bill statement in September, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">BILL_AMT2: Amount of bill statement in August, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">BILL_AMT3: Amount of bill statement in July, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">BILL_AMT4: Amount of bill statement in June, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">BILL_AMT5: Amount of bill statement in May, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">BILL_AMT6: Amount of bill statement in April, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT1: Amount of previous payment in September, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT2: Amount of previous payment in August, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT3: Amount of previous payment in July, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT4: Amount of previous payment in June, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT5: Amount of previous payment in May, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">PAY_AMT6: Amount of previous payment in April, 2005 (NT dollar)<\/li>\n<li  style=\"color:white\">default.payment.next.month: Default payment (1=yes, 0=no)<\/li>\n    \n<\/div>    \n","9fad5184":"[back to top](#table-of-contents)\n<a id=\"6\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">6. Data Preparation\n    \n<\/div>","099e2be2":"[back to top](#table-of-contents)\n<a id=\"3\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">3. Loading and Reading Data\n    \n<\/div>","2c2aabd0":"**Observations**:\n- **We have maximum clients from 21-30 age group followed by 31-40.** \n- **Hence with increasing age group the number of clients that will default the payment next month is decreasing.** \n- **Hence we can see that Age is important feature to predict the default payment for next month.**","48ed5ee8":"[back to top](#table-of-contents)\n<a id=\"2\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">2. Importing Libraries\n    \n<\/div>","81783628":"\n[back to top](#table-of-contents)\n<a id=\"8\"><\/a>\n\n<div style=\"background:#2b6684; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">8. Using the Model\n    \n<\/div>    ","c6922ea7":"**Observation:**\n- **we can see that the repayment status is indicated in columns pay_0, pay_2 ... with no pay_1 column, so we rename pay_0 to pay_1 for ease of understanding.**","27091770":"**Observation:**\n- **We can see that the dataset consists of 77% clients are not expected to default payment whereas 23% clients are expected to default the payment.**\n\n","a3b49203":"[back to top](#table-of-contents)\n<a id=\"4\"><\/a>\n\n<div style=\"background:#2b6684;color:white; font-family:'Goudy Old Style';padding:0.5em;border-radius:0.2em;font-size:25px;color:yellow\">4. Data Cleaning: Cleaning Strings in Column\n    \n<\/div>"}}