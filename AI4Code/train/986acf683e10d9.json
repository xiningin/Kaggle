{"cell_type":{"9446c9c7":"code","12d9027e":"code","da6480c6":"code","3138f58c":"code","d525a0a1":"code","5be6625f":"code","44778724":"code","9ce9496f":"code","f6b0980d":"code","f3a2a514":"code","87cfa569":"code","4608d892":"code","8add60f0":"code","1b3b23c9":"code","ba6c7568":"code","a9f467d3":"code","0137d9f0":"code","0f988dc9":"code","2269be09":"code","5541edcd":"code","c1b8cc3c":"code","0ce8cfb5":"code","68e04ae1":"code","15a8b8ac":"code","fd2f523a":"code","dd77e3e0":"code","1c68f4c0":"code","cb65d567":"code","a9808211":"code","b4461ac6":"markdown","fe0656ee":"markdown","9b8b87fb":"markdown","16849110":"markdown","8feb7e84":"markdown","5c926e2f":"markdown","30bd386c":"markdown","58a8bb7d":"markdown","837c74ab":"markdown","4ac9f3c3":"markdown","c3f18b0c":"markdown","089b07a1":"markdown"},"source":{"9446c9c7":"import pandas as pd\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import norm\nimport warnings; warnings.simplefilter('ignore')\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","12d9027e":"train=data=pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/train.csv')\ntest=pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/test.csv')\nsubmission=pd.read_csv('\/kaggle\/input\/bike-sharing-demand\/sampleSubmission.csv')\n\nprint(train.shape, test.shape, submission.shape)","da6480c6":"train.head()","3138f58c":"Ytrain=train['count']\n\nfigure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.distplot(Ytrain, ax=ax1, fit=norm)\nsns.distplot(np.log(Ytrain)+1, ax=ax2, fit=norm)","d525a0a1":"feature_names=list(test)\ntrain=train[feature_names]\nall_data=pd.concat((train, test))\nprint(train.shape, test.shape, all_data.shape)","5be6625f":"all_data.isnull().sum()","44778724":"all_data['datetime']=pd.to_datetime(all_data['datetime'])\nall_data['year']=all_data['datetime'].dt.year\nall_data['month']=all_data['datetime'].dt.month\nall_data['day']=all_data['datetime'].dt.day\nall_data['hour']=all_data['datetime'].dt.hour\nall_data['dayofweek']=all_data['datetime'].dt.dayofweek\nall_data=all_data.drop(columns='datetime')","9ce9496f":"figure, ((ax1, ax2), (ax3, ax4)) = plt.subplots(nrows=2, ncols=2)\nfigure.set_size_inches(14,14)\nsns.pointplot(data=all_data[:len(train)], x='year', y=Ytrain, ax=ax1)\nsns.pointplot(data=all_data[:len(train)], x='month', y=Ytrain, ax=ax2, hue='year')\nsns.pointplot(data=all_data[:len(train)], x='day', y=Ytrain, ax=ax3, hue='month')\nsns.pointplot(data=all_data[:len(train)], x='hour', y=Ytrain, ax=ax4, hue='dayofweek')","f6b0980d":"all_data=all_data.drop(columns=['month', 'day'])","f3a2a514":"all_data['weekend']=(all_data['dayofweek']==5) | (all_data['dayofweek']==6)","87cfa569":"sns.barplot(data=all_data[:len(train)], x='season', y=Ytrain)","4608d892":"season_encoded=pd.get_dummies(all_data['season'], prefix='season_')\nall_data=pd.concat((all_data, season_encoded), axis=1)\nall_data=all_data.drop(columns='season')","8add60f0":"figure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.barplot(data=all_data[:len(train)], x='holiday', y=Ytrain, ax=ax1)\nsns.barplot(data=all_data[:len(train)], x='workingday', y=Ytrain, ax=ax2)","1b3b23c9":"sns.barplot(data=all_data[:len(train)], x='weather', y=Ytrain)","ba6c7568":"weather_encoded=pd.get_dummies(all_data['weather'], prefix='weather_')\nall_data=pd.concat((all_data, weather_encoded), axis=1)\nall_data=all_data.drop(columns='weather')","a9f467d3":"sns.regplot(data=all_data, x='temp', y='atemp')\n\nfigure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.distplot(all_data['temp'], ax=ax1, fit=norm)\nsns.distplot(all_data['atemp'], ax=ax2, fit=norm)","0137d9f0":"figure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.lineplot(data=all_data[:len(train)], x='temp', y=Ytrain, ax=ax1)\nsns.lineplot(data=all_data[:len(train)], x='atemp', y=Ytrain, ax=ax2)","0f988dc9":"from sklearn.decomposition import PCA","2269be09":"pca=PCA(n_components=1)\npca.fit(all_data[['temp', 'atemp']])\n\nprint(f\" Variance explained after PCA : {pca.explained_variance_ratio_}\")","5541edcd":"all_data['temperature']=pca.fit_transform(all_data[['temp','atemp']])\nsns.distplot(all_data['temperature'], fit=norm)","c1b8cc3c":"all_data=all_data.drop(columns=['temp', 'atemp'])","0ce8cfb5":"figure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.lineplot(data=all_data[:len(train)], x='humidity', y=Ytrain, ax=ax1)\nsns.distplot(all_data['humidity'], fit=norm, ax=ax2)","68e04ae1":"figure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.lineplot(data=all_data[:len(train)], x='windspeed', y=Ytrain, ax=ax1)\nsns.distplot(np.log(all_data['windspeed']+1), fit=norm, ax=ax2)","15a8b8ac":"all_data.loc[all_data['windspeed']==0, 'windspeed']=all_data['windspeed'].mean()","fd2f523a":"figure, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nfigure.set_size_inches(14,6)\nsns.lineplot(data=all_data[:len(train)], x='windspeed', y=Ytrain, ax=ax1)\nsns.distplot(np.log(all_data['windspeed']+1), fit=norm, ax=ax2)","dd77e3e0":"Xtrain=all_data[:len(train)]\nXtest=all_data[len(train):]\nYtrain=np.log(Ytrain+1)\nprint(Xtrain.shape, Ytrain.shape, Xtest.shape)","1c68f4c0":"from lightgbm import LGBMRegressor\nfrom sklearn.model_selection import cross_val_score","cb65d567":"model=LGBMRegressor(boosting_type='gbdt', class_weight=None,\n              colsample_bytree=0.6746393485503049, importance_type='split',\n              learning_rate=0.03158974434726661, max_bin=55, max_depth=-1,\n              min_child_samples=159, min_child_weight=0.001, min_split_gain=0.0,\n              n_estimators=1458, n_jobs=-1, num_leaves=196, objective=None,\n              random_state=18, reg_alpha=0.23417614793823338,\n              reg_lambda=0.33890027779706655, silent=False,\n              subsample=0.5712459474269626, subsample_for_bin=200000,\n              subsample_freq=1)","a9808211":"model.fit(Xtrain, Ytrain)\nlog_predictions=model.predict(Xtest)\npredictions=np.exp(log_predictions)-1\nsubmission['count']=predictions\nsubmission.to_csv('Result.csv', index=False)\nsubmission.head()","b4461ac6":"## Windspeed","fe0656ee":"## Season","9b8b87fb":"# Load Data","16849110":"## Holiday, Workingday","8feb7e84":"## Target Variable","5c926e2f":"# EDA","30bd386c":"## Temperature","58a8bb7d":"## Humidity","837c74ab":"## Missing Value","4ac9f3c3":"## Weather","c3f18b0c":"# Build Models","089b07a1":"## Datetime"}}