{"cell_type":{"ef2fdc72":"code","88b55fcb":"code","7fd126d0":"code","0d76d154":"code","1123f357":"code","54427fb3":"code","1a038b2e":"code","f7b7c0e5":"code","9295ba0a":"code","2a9a6ec8":"code","4d5bda92":"code","1c29b1d9":"code","078a75a6":"code","25ecc4e1":"code","4850ed89":"code","870a8be8":"code","110edd24":"code","105d52e4":"code","63b88e0a":"code","9fe8ef57":"code","272405e6":"markdown","cc34489f":"markdown","64ad2be6":"markdown","8766d59f":"markdown","e07278d4":"markdown","7bd6a4c5":"markdown","e4006154":"markdown","68892a6f":"markdown","0a3f1433":"markdown","0d413bf7":"markdown","32c5bb27":"markdown","7d8da7af":"markdown","3172946e":"markdown"},"source":{"ef2fdc72":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import classification_report, confusion_matrix","88b55fcb":"df=pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndf.head(3)","7fd126d0":"df.isnull().sum()","0d76d154":"df.info()","1123f357":"df.shape","54427fb3":"df.describe()","1a038b2e":"sns.pairplot(df,hue = 'DEATH_EVENT', vars = ['serum_creatinine', 'platelets', 'high_blood_pressure', 'serum_sodium', 'creatinine_phosphokinase'] )","f7b7c0e5":"df1=df.drop(['diabetes','DEATH_EVENT','sex','smoking'],axis=1)","9295ba0a":"f,ax=plt.subplots(1,2,figsize=(25,8))\nsns.countplot(x=\"sex\",hue=\"DEATH_EVENT\",data=df,ax=ax[0], palette=\"muted\")\nsns.countplot(x=\"diabetes\",hue=\"DEATH_EVENT\",data=df,ax=ax[1], palette=\"muted\")","2a9a6ec8":"f,ax=plt.subplots(3,2,figsize=(25,25))\nsns.countplot(x=\"diabetes\",ax=ax[0][0],data=df, palette=\"muted\")\nsns.countplot(x=\"DEATH_EVENT\",data=df,ax=ax[0][1], palette=\"muted\")\nsns.countplot(x=\"sex\",ax=ax[1][0],data=df, palette=\"muted\")\nsns.countplot(x=\"smoking\",ax=ax[1][1],data=df, palette=\"muted\")\nsns.countplot(x=\"anaemia\",ax=ax[2][0],data=df, palette=\"muted\")\nsns.countplot(x=\"diabetes\",ax=ax[2][1],data=df, palette=\"muted\")\n","4d5bda92":"hist_mean=df1.hist(bins=10, figsize=(15, 10),grid=False,)","1c29b1d9":"sns.set(font_scale=1.5)\nplt.figure(figsize=(15,8))\ncorr = (df.corr())\nsns.heatmap(corr, xticklabels=corr.columns.values, yticklabels=corr.columns.values,cmap=\"YlGnBu\",annot=True,linewidths=.5, fmt=\".2f\")\nplt.title(\"Pearson Correlation of all Elements\")","078a75a6":"f,ax=plt.subplots(1,1,figsize=(25,6))\nsns.kdeplot(df.loc[(df['DEATH_EVENT']==1), 'age'], color='r', shade=True, Label='1')\nsns.kdeplot(df.loc[(df['DEATH_EVENT']==0), 'age'], color='g', shade=True, Label='0')\nplt.xlabel('Platelets') ","25ecc4e1":"f,ax=plt.subplots(1,1,figsize=(25,6))\nsns.kdeplot(df.loc[(df['DEATH_EVENT']==1), 'platelets'], color='r', shade=True, Label='1')\nsns.kdeplot(df.loc[(df['DEATH_EVENT']==0), 'platelets'], color='g', shade=True, Label='0')\nplt.xlabel('Platelets') ","4850ed89":"f,ax=plt.subplots(1,3,figsize=(25,5))\nbox1=sns.boxplot(data=df['creatinine_phosphokinase'],ax=ax[0], palette=\"muted\",sym='k.')\nax[0].set_xlabel('creatinine_phosphokinase')\nbox1=sns.boxplot(data=df['ejection_fraction'],ax=ax[1], palette=\"muted\",sym='k.')\nax[1].set_xlabel('ejection_fraction')\nbox1=sns.boxplot(data=df['platelets'],ax=ax[2], palette=\"muted\",sym='k.')\nax[2].set_xlabel('platelets')","870a8be8":"f,ax=plt.subplots(2,2,figsize=(25,15))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"serum_creatinine\",ax=ax[0][0],data=df, palette=\"muted\")\nsns.violinplot(x=\"DEATH_EVENT\", y=\"platelets\",data=df,ax=ax[0][1], palette=\"muted\")\nsns.violinplot(x=\"DEATH_EVENT\", y=\"serum_sodium\",ax=ax[1][0],data=df, palette=\"muted\")\nsns.violinplot(x=\"DEATH_EVENT\", y=\"ejection_fraction\",ax=ax[1][1],data=df, palette=\"muted\")","110edd24":"X = df.drop(['DEATH_EVENT'],axis=1)\nY = df['DEATH_EVENT']\nx_train, x_test, y_train, y_test = model_selection.train_test_split(X, Y, test_size=0.2, random_state=7)","105d52e4":"svc_model = SVC(gamma='auto')\nsvc_model.fit(x_train, y_train)\ny_predict = svc_model.predict(x_test)\ncm = confusion_matrix(y_test, y_predict)\nsns.heatmap(cm, annot= True)\naccuracy1=svc_model.score(x_test,y_test)\nprint (accuracy1*100,'%')\nprint(classification_report(y_test, y_predict))","63b88e0a":"logistic = LogisticRegression()\nlogistic.fit(x_train,y_train)\ny_pred=logistic.predict(x_test)\ncm=confusion_matrix(y_test,y_pred)\nsns.heatmap(cm,annot=True)\naccuracy1=logistic.score(x_test,y_test)\nprint (accuracy1*100,'%')\nprint(classification_report(y_test,y_pred))\n","9fe8ef57":"des_class=DecisionTreeClassifier()\ndes_class.fit(x_train,y_train)\ndes_predict=des_class.predict(x_test)\ncm=confusion_matrix(y_test,des_predict)\nprint(classification_report(y_test,des_predict))\naccuracy3=des_class.score(x_test,y_test)\nprint(accuracy3*100,'%')\nsns.heatmap(cm,annot=True)","272405e6":"**3.Decision tree classifier**","cc34489f":"**Heatmap**","64ad2be6":"**Pairplot**","8766d59f":"**KDE plot**","e07278d4":"**Train test split**","7bd6a4c5":"**Violinplot**","e4006154":"**Boxplot**","68892a6f":"**2.Logistic Regression**","0a3f1433":"**1.SVM**","0d413bf7":"# **Table of contents**\n1.Importing dataset\n\n2.Visualizing dataset\n     \n     1.Pairplot\n     2.Countplot\n     3.Histogram\n     4.Heatmap\n     \n3.Evaluating Model\n     \n     1.SVM\n     2.Logistic Regression\n     3.Decision Tree Classifier","32c5bb27":"**Histogram**","7d8da7af":"**Countplot**","3172946e":"Importing Dataset"}}