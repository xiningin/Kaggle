{"cell_type":{"1a20decb":"code","7ee91ac9":"code","04bf90d5":"code","eb2ebc21":"code","2b3db4f2":"code","534d08d5":"code","fc2cc687":"markdown","42441c40":"markdown","780725a0":"markdown","92065955":"markdown","985d069d":"markdown","1c84fad6":"markdown","98fcbd61":"markdown","19f4e268":"markdown","f1699013":"markdown","a1dde2d0":"markdown"},"source":{"1a20decb":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex2 import *\nprint(\"Setup Complete\")","7ee91ac9":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"openaq\" dataset\ndataset_ref = client.dataset(\"openaq\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"global_air_quality\" table\ntable_ref = dataset_ref.table(\"global_air_quality\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"global_air_quality\" table\nclient.list_rows(table, max_results=5).to_dataframe()","04bf90d5":"# Query to select countries with units of \"ppm\"\nfirst_query = \"\"\"\n        SELECT DISTINCT country\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE unit = 'ppm'\n        \"\"\"\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 10 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nfirst_query_job = client.query(first_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nfirst_results = first_query_job.to_dataframe()\n\n# View top few rows of results\nprint(first_results)\n\n# Check your answer\nq_1.check()","eb2ebc21":"#q_1.solution()","2b3db4f2":"# Query to select all columns where pollution levels are exactly 0\nzero_pollution_query =  \"\"\"\n                        SELECT *\n                        FROM `bigquery-public-data.openaq.global_air_quality`\n                        WHERE value = 0\n                        \"\"\"\n\n# Set up the query\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)\nquery_job = client.query(zero_pollution_query, job_config=safe_config)\n\n# API request - run the query and return a pandas DataFrame\nzero_pollution_results = query_job.to_dataframe()\n\nprint(zero_pollution_results.head())\n\n# Check your answer\nq_2.check()","534d08d5":"#q_2.solution()","fc2cc687":"For the solution, uncomment the line below.","42441c40":"**This notebook is an exercise in the [SQL](https:\/\/www.kaggle.com\/learn\/intro-to-sql) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/dansbecker\/select-from-where).**\n\n---\n","780725a0":"For the solution, uncomment the line below.","92065955":"# Introduction\n\nTry writing some **SELECT** statements of your own to explore a large dataset of air pollution measurements.\n\nRun the cell below to set up the feedback system.","985d069d":"# Exercises\n\n### 1) Units of measurement\n\nWhich countries have reported pollution levels in units of \"ppm\"?  In the code cell below, set `first_query` to an SQL query that pulls the appropriate entries from the `country` column.\n\nIn case it's useful to see an example query, here's some code from the tutorial:\n\n```\nquery = \"\"\"\n        SELECT city\n        FROM `bigquery-public-data.openaq.global_air_quality`\n        WHERE country = 'US'\n        \"\"\"\n```","1c84fad6":"# Keep going\n**[GROUP BY](https:\/\/www.kaggle.com\/dansbecker\/group-by-having-count)** clauses and their extensions give you the power to pull interesting statistics out of data, rather than receiving it in just its raw format.","98fcbd61":"### 2) High air quality\n\nWhich pollution levels were reported to be exactly 0?  \n- Set `zero_pollution_query` to select **all columns** of the rows where the `value` column is 0.\n- Set `zero_pollution_results` to a pandas DataFrame containing the query results.","19f4e268":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/161314) to chat with other Learners.*","f1699013":"The code cell below fetches the `global_air_quality` table from the `openaq` dataset.  We also preview the first five rows of the table.","a1dde2d0":"That query wasn't too complicated, and it got the data you want. But these **SELECT** queries don't organizing data in a way that answers the most interesting questions. For that, we'll need the **GROUP BY** command. \n\nIf you know how to use [`groupby()`](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.groupby.html) in pandas, this is similar. But BigQuery works quickly with far larger datasets.\n\nFortunately, that's next."}}