{"cell_type":{"50a803b9":"code","eb2a2c0c":"code","9dd4bd89":"code","382eb157":"code","73eb8a16":"code","61dc2568":"code","c96cd703":"code","8213b664":"code","d1d207da":"code","935ba4eb":"code","d66f4ab6":"markdown"},"source":{"50a803b9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns","eb2a2c0c":"df = pd.read_csv('..\/input\/pima-indians-diabetes-database\/diabetes.csv')\ndf.head()","9dd4bd89":"# Check for missing values\ndf.isnull().sum()","382eb157":"# Check the spread of data across classes\nsns.countplot(y='Outcome', data=df)","73eb8a16":"sns.pairplot(df, hue=\"Outcome\")","61dc2568":"sns.heatmap(df.corr(), cmap='Accent')","c96cd703":"from sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix","8213b664":"X = df[df.columns[:-1]] # Everything except Outcome\ny = df['Outcome']\n\nscaler = preprocessing.StandardScaler().fit(X)\nX = scaler.transform(X)\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1) # total: 768 values\nprint('Train :', len(X_train))\nprint('Test  :', len(X_test))","d1d207da":"log = LogisticRegression(random_state=2)\nlog.fit(X_train, y_train)\n\ny_pred = log.predict(X_test)\nlog.score(X_test, y_test)","935ba4eb":"cfn_mat = np.array(confusion_matrix(y_test, y_pred), dtype='float')\ncfn_mat[0,0] \/= (y_test == 0).sum()\ncfn_mat[1,0] \/= (y_test == 0).sum()\ncfn_mat[0,1] \/= (y_test == 1).sum()\ncfn_mat[1,1] \/= (y_test == 1).sum()\n\nsns.heatmap(cfn_mat)","d66f4ab6":"Glucose levels seem to be a strong indicator"}}