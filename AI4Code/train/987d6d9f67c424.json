{"cell_type":{"369c2872":"code","cc7d9e3f":"code","2a939c9c":"code","cc9c4ef7":"code","435ff042":"code","df8d4ab4":"code","12cfc6a9":"code","65c4a614":"code","bd4901c9":"code","c2cae748":"code","08ebf838":"code","13b487ee":"code","f61aae01":"code","1919d6e4":"code","ef0bc26e":"code","6d77c35d":"markdown","5a39502b":"markdown","73b5bb8d":"markdown","3dbbc0c7":"markdown","076139d3":"markdown","161814d8":"markdown","1ad32eb9":"markdown","d7176a0a":"markdown","4eaee8ee":"markdown","697dc3e6":"markdown","85c6763a":"markdown","7527e15b":"markdown","17f1f751":"markdown"},"source":{"369c2872":"# libraries for data manipulation and exploration\nimport pandas as pd\nimport numpy as np\n\n# libraries for data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","cc7d9e3f":"# we have dataset of six months of year 2014\n# april, may, june, july, august and september\napr_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-apr14.csv')\nmay_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-may14.csv')\njun_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-jun14.csv')\njul_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-jul14.csv')\naug_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-aug14.csv')\nsep_df = pd.read_csv('..\/input\/uber-pickups-in-new-york-city\/uber-raw-data-sep14.csv')\n\n# concatenating all dataset into one\ndata = pd.concat([apr_df, may_df, jun_df, jul_df, aug_df, sep_df],\n                axis=0, ignore_index=True)\n\n# displaying first five rows\ndata.head()","2a939c9c":"# checking if there are null values or not\nprint('Null values in each column :')\nprint(data.isnull().sum())\nprint('\\n')\ndata.info()","cc9c4ef7":"# renaming the date column\ndata.rename({'Date\/Time':'Date'}, axis=1, inplace=True)\ndata['Date'] = pd.to_datetime(data['Date'])\n\n# let's make some more features with the existing features\ndata['Month'] = data['Date'].dt.month_name().str[:3] \ndata['Day'] = data['Date'].dt.day_name().str[:3]\ndata['Hour'] = data['Date'].dt.hour\ndata['Nday'] = data['Date'].dt.day\ndata['Date'] = data['Date'].dt.date\ndata.head()","435ff042":"# figure of width = 12 unit, and height = 5\nplt.figure(figsize=(12,5))\n\n# creating bar plot to show the count of rides by hours of day\nsns.countplot(x='Hour',\n              data=data,\n              palette='rocket_r',\n              saturation=1)\n\n# removing the frame around graph\nsns.despine(bottom=True, left=True)\n\n# removing x and y label\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Number of rides by hours',\n          fontsize=15);","df8d4ab4":"# grouping data on the basis of date and hour\navg_nday = data.groupby(['Date', 'Hour'])['Hour'].count()\navg_nday = avg_nday.groupby('Hour').agg([np.mean])\nplt.figure(figsize=(12,5))\nplt.plot(avg_nday,\n         c='#0a043c',\n         marker='o',\n         linewidth=2)\nplt.title('Average pickups by hours')\nplt.xticks(range(0,24))\nsns.despine()","12cfc6a9":"# defining size of figure\nplt.figure(figsize=(8,5))\n\n# making bar plot to show counting of rides during days of week\nsns.countplot(x='Day',\n              data=data,\n              palette='rocket_r',\n              saturation=1,\n              order=['Mon','Tue','Wed','Thu','Fri','Sat','Sun'])\n\n# removing frame around the graph\nsns.despine(bottom=True, left=True)\n# plt.xticks(color='black')\n# plt.yticks(color='black')\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Number of rides by days of week',\n          fontsize=15);","65c4a614":"# grouping data by date and week day\navg_day = data.groupby(['Date', 'Day'])['Day'].count()\n\n# calculating average pickups for week days\navg_day = avg_day.groupby('Day').agg([np.mean])\nplt.figure(figsize=(8,5))\nplt.plot(avg_day.iloc[[1, 5, 6, 4, 0, 2, 3]],\n         c='#0a043c',\n         marker='o',\n         linewidth=2)\nplt.title('Average pickups by weekdays')\nsns.despine();","bd4901c9":"months = data.Month.value_counts().sort_values()\nplt.figure(figsize=(8,5))\n\n# making a line chart to show the growth in rides by months\nplt.plot(months.index, months.values,\n         marker='o',\n         c='#0a043c',\n         linewidth=2)\n\n# removing frame around the graph\nsns.despine()\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Number of rides by months',\n          fontsize=15);","c2cae748":"plt.figure(figsize=(10,5))\n\n# making bar graph to show the frequency of rides by months and days\nsns.countplot(x='Month',\n              data=data, \n              palette='rocket_r',\n              saturation=1,\n              hue='Day',\n              hue_order=['Mon','Tue','Wed','Thu','Fri','Sat','Sun'])\n\n# removing the frame around graph\nsns.despine(bottom=True, left=True)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Number of rides by months and days',\n          fontsize=15)\nplt.legend(bbox_to_anchor= (1.03, 1) );","08ebf838":"# grouping the data on the basis of month and day of month\n# to show number of rides per day in each month\ngrouped_month_day = data.groupby(['Month', 'Nday'])['Nday'].count().unstack()\n\n# creating heatmap using the grouped data\nplt.figure(figsize=(12,2))\nsns.heatmap(grouped_month_day.iloc[[0,4,3,2,1,5], :30],\n            cmap='rocket_r',\n            linewidths=0.5,\n            linecolor='white')\n\n# rotating y axis ticks\nplt.yticks(rotation=0)\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Rides : Month vs Day');","13b487ee":"# grouping the data on the basis of days and hours\ngrouped_day_hour = data.groupby(['Day','Hour'])['Hour'].count().unstack()\nplt.figure(figsize=(12,3))\nsns.heatmap(grouped_day_hour.iloc[[1,5,6,4,0,2,3]],\n            cmap='rocket_r',\n            linewidths=0.5,\n            linecolor='white')\n\n# rotating y axis ticks\nplt.yticks(rotation=0)\n\n# removing x and y label\nplt.xlabel(None)\nplt.ylabel(None)\nplt.title('Rides : Weekdays vs Hours');","f61aae01":"import holidays\nholiday_dict = {}\n# showing the holidays between the given six months\nfor d in holidays.UnitedStates(years=2014).items():\n    if d[0].month in (4,5,6,7,8,9):\n        holiday_dict[d[0]] = d[1]\nholiday_dict        ","1919d6e4":"lst = []\nfor key in holiday_dict.keys():\n    lst.append(key)  \nholiday_months = ['May','Jul','Sep'] \nmonths_name = ['May', 'July', 'September']\n\n# ploting line charts of the months containing holidays\nfor i, month in enumerate(holiday_months):\n    # defining size of plots\n    fig = plt.figure(figsize=(12,12))\n    ax = fig.add_subplot(3, 1, i+1)\n    df = data[data.Month == month].groupby('Date')['Date'].count()\n    ax.plot(df, color='#0a043c', marker='o', linewidth=2)\n    title = 'Daily pickups in ' + months_name[i]\n    plt.title(title)\n    plt.axvline(lst[i], label=holiday_dict[lst[i]], color='red', linestyle='--')   \n    plt.legend()\n    sns.despine()","ef0bc26e":"# frequency of bases\nbase_freq = data.Base.value_counts()\n\n# ploting a pie chart to show the percentage of rides for each base\nplt.pie(base_freq.values, labels=base_freq.index,\n        radius=1.8,\n        autopct='%.0f%%',\n        wedgeprops=dict(width=0.5),\n        colors=['#060930','#333456','#595b83','#f4abc4','grey'])\nplt.title('Percentage of rides by base', y=1.35);","6d77c35d":"## **Analysis**\n### **-  Total and average pickups during the hour of days**\nHere, I am going to count down the total number of rides\/pickups during particular hours of day for the six months (Apr - Sep). This would help us to know the busy hours of the days.","5a39502b":"## **Final thought**\nSo, this was a small analysis of uber pickups between April to September 2014. We found the answers of all the questions that we raised in the beginning. We got insights like - the frequency of pickups increased with time which shows the growth on uber rides, the busy hours of the day, most busy days in weeks and finally the impact of holiday on the number of rides.\n\n### **Please upvote, if you like it.**","73b5bb8d":"There is a high rush from afternoon to evening. This says that most of the rides were taken after 10 A.M.. Because people use to go anywhere at this time whether it is trip, college, office, school etc.\n\nMost of the works are done during afternoon to evening and people visit different places at this time so this can be the reason for large number of pickups. Rides are less between 0 - 7 as compared to other hours because people sleep at this time.\n\n### **- Total and average pickups by weekdays**","3dbbc0c7":"All the graphs have the same conclusion, that pickups are very less on holidays. In the month of May, there was a holiday for Memorial day and at that pickups were lowest for that month. This was the same case with July and September.\n\nThis is because most of the places were closed, and people were not taking rides as usual, because of holidays.\n\n**Conclusion:** We can also say that holiday has the lowest pickup of particular month.\n### **- Rides by base**","076139d3":"As we can see more pickups are there after 13:00, because this is the usual time when people visit place like malls, hospitals etc. Also we can observe the hours 7 - 8 have more pickups, may be students are taking the rides during these hours between Monday to Friday.\n\nAlso, pickups are higher in late night on Friday and Saturday, because the next they have weekends and it's a common thing that people enjoy their weekends till late night. Again, sunday has very less rides as compare to other days followed by Monday.\n\n### **- Impact of holidays**","161814d8":"In april the pickups are less, and we can see a seasonality just because of working days. But in september the rides are in demand means there are more pickups for both working and non-working days.\n### **- Cross analysis of weekdays and hours**","1ad32eb9":"### **Reading data**","d7176a0a":"Rides on sunday and monday are less as compare to other days. Sunday has very less rides, it may be due to weekend or most places like school, college and offices are closed on sunday and most of the people stay at home.\n\nBetween tuesday and saturday, there are so many rides because these are working days.\n\n### **- Growth in rides by months**","4eaee8ee":"We can see positive growth in rides during the six months. At the end of september 2014, rides increased by more than 1.5%. This shows that people started using uber cabs for transportation at a large scale, also drivers started using uber.\n\n### **- Rides by months and weekdays**","697dc3e6":"### **Description of data**\nThere are six files of raw data on Uber pickups in New York City from April to September 2014. The files are separated by month and each has the following columns:\n\n- `Date\/Time` : The date and time of the Uber pickup\n- `Lat` : The latitude of the Uber pickup\n- `Lon` : The longitude of the Uber pickup\n- `Base` : The TLC base company code affiliated with the Uber pickup\n\nWe have merged all the files into a single file, and it doesn't have null values.","85c6763a":"Only following holidays are there during these six months in 2014:\n- **Memorial day** : (May 26)\n- **Independence day** : (July 4) \n- **Labor Day** : (September 1)\n\nNow, we will draw graph for each day for the 3 months containing holiday and point out the holiday in each of the graph.","7527e15b":"# **Uber pickups data analysis**\nIn this notebook, we are going to analyse Uber pickups in New York City from April to September 2014. The dataset we have, contains 4.5 million records of pickups. We will do a simple analysis by creating plots to answer few questions given below.\n\n### **Objectives:**\nIn order to make this analysis fruitful, we will raise some simple questions and then we'll find their answer.\n- To analyse the trends along time\n- Week days which have more pickups\n- Hours which are busy enough\n- Impact of holidays on pickups\n- Some cross analysis etc.\n\n### **Importing libraries**","17f1f751":"As the time is increasing pickups are increasing also, september has high rush and the overall demand for rides has increased.\n    \n### **- Cross analysis of months and days**    "}}