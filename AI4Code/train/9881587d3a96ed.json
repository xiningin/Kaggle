{"cell_type":{"300659e8":"code","245f0ec1":"code","55ef0b1d":"code","1769eb8b":"code","e3292829":"code","0670abb8":"code","3ac8f6ab":"code","f6681ba2":"code","40e859b4":"code","ea31147c":"code","f01c4c25":"code","1e0090e9":"code","2e81b039":"code","6f7ca704":"code","6f8c8667":"code","8b28540d":"markdown"},"source":{"300659e8":"# To import necessary libraries for this task\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","245f0ec1":"# imports the CSV dataset using pandas\ndataset=pd.read_csv('..\/input\/student-scores\/student_scores (2).csv')","55ef0b1d":"dataset.shape","1769eb8b":"dataset.head()","e3292829":"dataset.tail()","0670abb8":"dataset.describe()","3ac8f6ab":"#plot our data points on 2-D graph.\n#see if we can manually find any relationship between the data. \ndataset.plot(x='Hours',y='Scores',style=\"o\")\nplt.title('Hours vs Percentage')\nplt.xlabel('Hours Studied')\nplt.ylabel('Percentage Score')\nplt.show","f6681ba2":"#divide the data into \"attributes\" and \"labels\". \n#To extract the attributes and labels\nX=dataset.iloc[:, :-1].values\ny=dataset.iloc[:, 1].values","40e859b4":"# split data into training and test sets. \nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.22,random_state=0)","ea31147c":"# Training the Algorithm\nfrom sklearn.linear_model import LinearRegression\nregressor=LinearRegression()\nregressor.fit(X_train,y_train)","f01c4c25":"#To see the value of the intercept\nprint(regressor.intercept_)","1e0090e9":"#to see value of slope\nprint(regressor.coef_)","2e81b039":"# Making Predictions\ny_pred=regressor.predict(X_test)\n","6f7ca704":"#To compare the actual output values \ndf=pd.DataFrame({'Actual':y_test,'Predicted':y_pred})\ndf","6f8c8667":"from sklearn import metrics\nprint('Mean Absolute Error:',metrics.mean_absolute_error(y_test,y_pred))\nprint('Mean Squared Error:',metrics.mean_squared_error(y_test,y_pred))\nprint('Root Mean Squared Error:',np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","8b28540d":"# EDA "}}