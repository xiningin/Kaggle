{"cell_type":{"6ade17df":"code","444bc283":"code","4ec480e4":"code","7de0ed7a":"code","065dda9d":"code","a3994c9f":"code","7d883748":"code","0bdd829a":"code","155e08d9":"code","1a4c7759":"code","3e7db29c":"code","6445c2c3":"code","e8e499b5":"code","98026651":"markdown","e3eb32ac":"markdown","25487a52":"markdown","7eef8ec8":"markdown","d56969eb":"markdown","9c745f99":"markdown","5f8f608b":"markdown","6bd9e653":"markdown","702119e0":"markdown","b89f620b":"markdown","edab8990":"markdown","b99ee960":"markdown","402909c6":"markdown"},"source":{"6ade17df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","444bc283":"import matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nfrom datetime import datetime\nimport seaborn as sns\nimport folium\n%matplotlib inline","4ec480e4":"df = pd.read_csv(r'\/kaggle\/input\/us-police-shootings\/shootings.csv')\ndf.head(2)","7de0ed7a":"df.info()","065dda9d":"df.drop(['name', 'city', 'threat_level', 'arms_category', 'id'], axis = 1, inplace = True)","a3994c9f":"states = df['state'].value_counts().nlargest(15).index\ndeaths = df['state'].value_counts().nlargest(15).values\nplt.figure(figsize=(14,6))\nplt.style.use('fivethirtyeight')\ngraph1 = sns.barplot(states, deaths)\ngraph1.set(xlabel = 'States', ylabel = 'Number Of Deaths', title = 'Top 15 States with heighest number of deaths')\n\n\ndef autolabel(graph):\n    for patch in graph.patches:\n        height = patch.get_height()\n        plt.annotate(height.astype('int64'), xy = (patch.get_x() + patch.get_width() \/ 2, height),\n                     xytext = (0, 5), textcoords = 'offset points', ha = 'center', fontsize = 12)\n\nautolabel(graph1)","7d883748":"s = df['state'].value_counts()\ns1 = s.reset_index()\n\n\nm = folium.Map(location=[40, -102], zoom_start=3,\n              tiles='OpenStreetMap')\nstate_geo = r'\/kaggle\/input\/usstates\/us-states.json'\n\nfolium.Choropleth(\n    geo_data=state_geo,\n    data=s1,\n    columns=['index', 'state'],\n    key_on='feature.id',\n    fill_color='YlOrRd',\n    fill_opacity=0.7,\n    line_opacity=0.2,\n    legend_name='Number of deaths'\n).add_to(m)\n\nfolium.LayerControl().add_to(m)\n\nm","0bdd829a":"year = pd.to_datetime(df['date']).dt.year.value_counts().sort_index().index\ndeath = pd.to_datetime(df['date']).dt.year.value_counts().sort_index().values\ngraph2 = sns.barplot(year, death,palette=sns.color_palette(\"GnBu_d\"))\ngraph2.set_title('Year Wise Deaths')\ngraph2.set_ylabel('Deaths')\nautolabel(graph2)","155e08d9":"total = df.shape[0]\ngb_object = df.groupby('race')\nraces = gb_object['race'].count().index\ndeath_numbers = gb_object['race'].count().values\norder = [4, 5, 3, 2, 0, 1]  # order is changed because autopct values are overlapping.\nraces = [races[i] for i in order]\ndeath_numbers = [death_numbers[i] for i in order]\nplt.figure(figsize = (8, 6), facecolor = 'white')\nplt.pie(death_numbers,  autopct = '%1.1f%%', shadow = True, pctdistance=0.6, startangle=90, radius = 0.8)\nplt.legend(races, ncol = 3)\nplt.title('Distrubution of Deaths on Race', pad = 5)","1a4c7759":"text_cloud = \" \".join(text for text in df['armed'])\n\nwc = WordCloud(width=2500, height=1500).generate(text_cloud)\nplt.figure(figsize = (9, 7))\n\nplt.imshow(wc, interpolation='bilinear')\nplt.axis('off')\nplt.margins(x = 0, y = 0)\nplt.title('Freuently Armed Weapons By suspects')\nplt.show()\n","3e7db29c":"gender = ['Male', 'Female']\npeople = df['gender'].value_counts().values\nplt.figure(figsize = (7, 5))\nplt.pie(people, labels = gender, shadow= True, autopct = '%1.1f%%', pctdistance=0.6, wedgeprops={'edgecolor': 'black'})\nplt.title('Gender wise comparision')","6445c2c3":"plt.hist(df['age'], bins = range(0, 100, 10), edgecolor = 'white', color = 'gray')\nplt.xticks(range(0, 100, 10))\nplt.xlabel('Age')\nplt.ylabel('Deaths')\nplt.title('Suspects Age based Visual')","e8e499b5":"minor = df.loc[df['age'] < 18].shape[0]\nprint('Minor suspects killed in US from 2015 to 2020 =>', minor)","98026651":"By considering adult age 18, there are 97 suspects killed in 5 years. For crime of murder or any kind of serious crime a person with 16 or 17 age can treat as a Adult.","e3eb32ac":"Deaths are nearly same per year. And for 2020 we don't have data for the entire year.","25487a52":"If u like this notebook dont forget to **UPVOTE**, or if don't please leave suggestion which was very helfull for me. **Thank You**","7eef8ec8":"<h2 style = 'font-family:verdana;color:blue;'>Importing Libraries<\/h2>","d56969eb":"<h2 style = 'font-family:verdana;color:blue;'>Getting More Info<\/h2>","9c745f99":"<h1 style = 'font-family:verdana;color:blue;text-align:center;font-weight:bold'>Welcome To My Notebook<\/h1>","5f8f608b":"50% suspects are white people. I think it happens because, US has more white population than other races.","6bd9e653":"Here I am going to drop some columns which are not related to furher analysis. ","702119e0":"Recently **US Police**  in News because of George Floyd death which was hevily covered wordwide. So Using this data set i tried here to visulize the US police shooting Data.","b89f620b":"![image.png](attachment:image.png)","edab8990":"Datframe is cleaned and it doesn't contain any null values.","b99ee960":"By observing above figure we can say that most of the suspects are carrying **gun** or **knife**.","402909c6":"<h2 style = 'font-family:verdana;color:blue;'>Reading Data<\/h2>"}}