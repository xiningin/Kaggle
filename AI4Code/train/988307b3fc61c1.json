{"cell_type":{"7197459e":"code","fdcaacfe":"code","f857f6af":"code","ca3dcc6e":"code","affb7140":"code","6c95a42c":"code","2ae64442":"code","6f8976a6":"code","58d1857a":"code","ab1b0860":"code","0c4d25b5":"code","34d7c437":"code","4d5f01a7":"code","e4f392dc":"code","f31aff6e":"code","23f54bae":"code","19586c7c":"code","843cbf38":"markdown","baa244c1":"markdown","d8f6f2de":"markdown","5a3c9584":"markdown","0b84ed69":"markdown","9e3d57a2":"markdown","a05dff07":"markdown","e6b892c3":"markdown","970b9df6":"markdown","84e6e2eb":"markdown","9f143293":"markdown","9393cd8a":"markdown","5a49582d":"markdown","ec54a138":"markdown","1c48580b":"markdown","8ba84a6c":"markdown","f582b5c5":"markdown","87560e8f":"markdown"},"source":{"7197459e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pandas import DataFrame as DF \n\n# For plotting \nimport matplotlib\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nsns.set_theme()\n\n# For cleaner looking graphs\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n!pip install siuba\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fdcaacfe":"path1 = '\/kaggle\/input\/app-store-apple-data-set-10k-apps\/AppleStore.csv'\npath2 = '\/kaggle\/input\/app-store-apple-data-set-10k-apps\/appleStore_description.csv'\n\nraw_df = pd.read_csv(path1)\n#Display 5 random rows as sample\nraw_df.head()","f857f6af":"raw_df.drop('Unnamed: 0', axis='columns', inplace=True)\nraw_df.rename(columns={'track_name':'name'}, inplace=True)","ca3dcc6e":"raw_df.info()","affb7140":"raw_df.prime_genre.unique()","6c95a42c":"df = DF(raw_df.groupby('prime_genre')['name'].size()).reset_index().sort_values('name', ascending=False)\nplt.figure(figsize=(14,5))\nsns.barplot(data=df, x='prime_genre', y='name', color='firebrick')\nplt.xticks(rotation=75)\nplt.xlabel('App Categories')\nplt.ylabel('App Count')\nplt.show()","2ae64442":"df['percent'] = df['name'] \/ df['name'].sum()*100\ndf.rename(columns={'name':'app_count'}, inplace=True)\ndf.head(10)","6f8976a6":"plt.figure(figsize=(14,5))\nsns.histplot(raw_df.user_rating, bins=10, kde=False)\nplt.show()","58d1857a":"print('Mean Rating : ', raw_df.user_rating.mean())","ab1b0860":"df = DF(raw_df.groupby('prime_genre')['user_rating'].mean()).reset_index().sort_values('user_rating', ascending= False)\nplt.figure(figsize=(14,5))\nsns.barplot(data=df , x='prime_genre', y='user_rating', color='steelblue')\nplt.xticks(rotation=75)\nplt.ylabel('mean user rating')\nplt.xlabel('App Categories')\nplt.show()","0c4d25b5":"# To regroup non significant categories into a single category named 'other'.\nfrom siuba.dply.forcats import fct_lump\ndf1 = raw_df[['name','user_rating','prime_genre']]\ndf1['prime_genre'] = fct_lump(df1['prime_genre'], n=5)\n\n\ndf1 = DF(df1.pivot_table(values='name', index='prime_genre', columns='user_rating', aggfunc=np.size))\nratings = list(df1.columns)\n\n\nfor x in ratings :\n    df1[x] = df1[x] * 100 \/ df1[x].sum() \n\n\ndf1.sort_values(5.0, ascending=False, inplace=True)\n\n\n# Area Plot\nsns.set_palette('RdBu')\ndf1.transpose().plot.area(figsize = (13,7))\n\nplt.legend(bbox_to_anchor=(1.0,1.0))\nplt.ylabel('Percentage')\nplt.title('User ratings percentage breakdown by category')\nplt.show()","34d7c437":"df2 = raw_df[['name','price','user_rating','size_bytes']]\n\nplt.figure(figsize=(14,6))\n\n# Define mask to generate triangular output\nmask = np.triu(np.ones_like(df2.corr(), dtype=np.bool))\n\nheatmap = sns.heatmap(df2.corr(), \n        mask = mask, vmin=-0, vmax=1, annot=True, cmap='magma'\n)\n\nplt.title('price, user_rating and size_bytes correlation heatmap ')\nplt.show()","4d5f01a7":"sns.jointplot(data=df2, y='user_rating', x='size_bytes', joint_kws={'alpha':0.2})\nplt.show()","e4f392dc":"sns.jointplot(data=df2, y='price', x='size_bytes', joint_kws={'alpha':0.2})\nplt.ylim(0,30)\nplt.show()","f31aff6e":"criteria = (df2['size_bytes']<50000000) & (df2['price']>=20)\ndf2[criteria]","23f54bae":"df_free = raw_df[raw_df['price']==0]\ndf_10 = raw_df[(raw_df['price']>0) & (raw_df['price']<=10)]\ndf_20 = raw_df[(raw_df['price']>10) & (raw_df['price']<=20)]\ndf_30 = raw_df[raw_df['price']>20]\n\nplt.figure(figsize=(14,5))\nsns.kdeplot(df_free.user_rating, color='gold', alpha=0.3, fill=True, bw_adjust=.8)\nsns.kdeplot(df_10.user_rating, color='steelblue', alpha=0.3, fill=True, bw_adjust=.8)\nsns.kdeplot(df_20.user_rating, color='crimson', alpha=0.3, fill=True, bw_adjust=.8)\nsns.kdeplot(df_30.user_rating, color='olivedrab', alpha=0.3, fill=True, bw_adjust=.8)\nplt.legend(['price = free','0 USD < price <= 10 USD', '10 USD < price <= 20 USD', 'price > 20 USD'])\nplt.show()","19586c7c":"df3 = raw_df[raw_df['price']<40]\n\nplt.figure(figsize=(14,8))\nsns.stripplot(data=df3, x='prime_genre', y='price', jitter=True, linewidth=1)\nplt.xticks(rotation=75)\nplt.title('App pricing trend across categories', fontdict={'fontsize': 16})\nplt.show()","843cbf38":"## How does the price affect ratings?","baa244c1":"# Apps Rating","d8f6f2de":"# App Categories","5a3c9584":"<p> The <code>3<\/code> variables have a low correlation. Which indicates that they are unlikely to affect each other.<\/p>","0b84ed69":"The dataset consists of <code>7197<\/code> observations and <code>16<\/code> columns.\n<br>No missing values are present in the dataset.\n<br>The data types are correctly assigned to each category. ","9e3d57a2":"## How does app size affect its rating?","a05dff07":"<p>Ratings (on a scale of 0 to 5) impact the discoverability as well as the company's brand image. Ratings are a key performance indicator of an app.\nIn this dataset, the ratings are available under the <em>user_rating<\/em> column.<\/p>\n<p>The histogram plot is skewed to the left indicating that most of the apps are highly rated but still we can find quite a good amount of low-rated apps.<\/p>\n<p>The mean value for the ratings across all categories is <code>3.5<\/code>. The <code>Producticity<\/code> and <code>Music<\/code> categories have the highest average user ratings. While <code>Book<\/code>, <code>Finance<\/code> and <code>Catalogs<\/code> are the lowest rated app categories.<\/p>\n<p>Considering only the apps with a rating of <code>5<\/code>, the <em>Games<\/em> category account for <code>56%<\/code> of the ratings, while the remaining categories account for less than <code>10%<\/code> individually.<\/p>\n","e6b892c3":"<p>Most of the apps have a price ranging from <code>0<\/code> to <code>10<\/code> USD. We call also observe that some apps of small size are even priced at <code>30<\/code> USD.<\/p> \n<p>Having a look at these apps, we find that most of these are quite highly rated. The high price is either due to lifetime membership or due to special features that they offer such as mirroring your Mac and your Ipad.<\/p> ","970b9df6":"## In what proportions are they present?","84e6e2eb":"<p>There are <code>23<\/code> unique app categories present in the dataset. The <em>Games<\/em> category has the highest market prevalance representing <code>53%<\/code> of the total apps present on the platform.<\/p>\n<p>The next two catgories are <em>Entertainment<\/em> and <em>Education<\/em> representing <code>7%<\/code> and <code>6%<\/code> respectively.<\/p>","9f143293":"## App category relationship with price\n","9393cd8a":"# Price and Size","5a49582d":"<p>It can be observed that the the apps between <code>0<\/code> and <code>10<\/code> USD have a greater proportion of high ratings. This might indicate that some consummers more likely expect their apps to be free or inexpensive.<\/p> ","ec54a138":"## Are the price, size_bytes and user_rating columns highly correlated?","1c48580b":"<p>It is observed that the apps having a lower rating from <code>1<\/code> to <code>2<\/code> have a size less than <code>0.5 1e9<\/code> bytes. Which might indicate that these apps lack some functions as expected by the users.<\/p>\n<p>We find that as we go from rating <code>3<\/code> to <code>4.5<\/code>, apps tend to get bigger in size. Interestingly, at the highest rating the app size are smaller. This might indicate that the consummers tend to prefer apps that occupy less space on their devices.<\/p>","8ba84a6c":"## What are the different categories?","f582b5c5":"<p>We can observe that for most categories, the apps are reasonably priced below <code>5<\/code> USD. The <em>Medical<\/em> category is much less clustered in the lower price range. We observe some clustering up to <code>15<\/code> USD for the <em>Games<\/em> category. <em>Shopping<\/em> apps and <em>Catalogs<\/em> apps are mostly free.<\/p>","87560e8f":"## How does the app size affect the price?"}}