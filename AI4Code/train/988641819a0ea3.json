{"cell_type":{"1109aa9c":"code","09c69943":"code","8ba36f68":"code","0dcf9a79":"code","3d89beae":"code","6c90cbfe":"code","afb4f841":"code","99f86bec":"code","0770c2ba":"code","da560faa":"code","45c578f8":"code","fcce84c6":"code","a6ebec9d":"markdown"},"source":{"1109aa9c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","09c69943":"data = pd.read_csv('..\/input\/position-salary-dataset\/Position_Salaries.csv')\ndata","8ba36f68":"X = data.iloc[:, 1:-1]\ny = data.iloc[:, -1]","0dcf9a79":"X.shape","3d89beae":"y.shape","6c90cbfe":"plt.scatter(X,y)\nplt.xlabel('Level')\nplt.ylabel('Salary')","afb4f841":"from sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import PolynomialFeatures\npoly_reg = PolynomialFeatures(degree = 3)\nX_poly = poly_reg.fit_transform(X)\nmodel = LinearRegression()\nmodel.fit(X_poly, y)","99f86bec":"plt.scatter(X, y, color = 'red')\nplt.plot(X, model.predict(poly_reg.fit_transform(X)), color = 'blue')\nplt.xlabel('Position level')\nplt.ylabel('Salary')","0770c2ba":"model.predict(poly_reg.fit_transform([[4.5]]))","da560faa":"plt.scatter(4.5,\n            model.predict(poly_reg.fit_transform([[4.5]])), \n            color = 'green')\nplt.plot(X, \n         model.predict(poly_reg.fit_transform(X)), \n         color = 'blue')\nplt.xlabel('Position level')\nplt.ylabel('Salary')","45c578f8":"model.predict(poly_reg.fit_transform([[7.5]]))","fcce84c6":"plt.scatter(7.5,\n            model.predict(poly_reg.fit_transform([[7.5]])), \n            color = 'green')\nplt.plot(X, \n         model.predict(poly_reg.fit_transform(X)), \n         color = 'blue')\nplt.xlabel('Position level')\nplt.ylabel('Salary')","a6ebec9d":"### **Predicting random Values of level**"}}