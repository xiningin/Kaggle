{"cell_type":{"48385894":"code","e5648461":"code","89301dbd":"code","cdb406b2":"code","65fce536":"code","45cd84d4":"code","c8e76150":"code","03c6af9e":"code","05179aa6":"code","7e47d85e":"code","5dd1c152":"code","b9eb92f2":"code","725482d0":"code","9422d72f":"code","c242a5fd":"code","ebdbd122":"code","2360a2b9":"code","45e01cf1":"code","aba3f242":"code","ae3a6e6d":"code","7ce51534":"code","5ae38cf8":"code","1aab8177":"code","969717e5":"code","f2044171":"code","764001ba":"code","e7b330b5":"code","fde7aa6d":"code","562979e8":"code","c2f0eab2":"code","93947dff":"code","19fc3a01":"code","adbb9a65":"code","0aae9b25":"code","00ad651f":"code","f3755f92":"code","b21fb000":"code","884021fc":"code","a376e794":"code","1c510b21":"code","37265f02":"code","62eefb96":"code","fa526132":"code","5d924320":"code","6086866a":"code","e92a70f4":"code","d96b9b35":"code","ebdce85c":"markdown"},"source":{"48385894":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","e5648461":"import pandas as pd\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\nimport matplotlib.pyplot as plt\nfrom sklearn.cross_decomposition import PLSRegression,PLSSVD\nfrom sklearn.decomposition import PCA\nfrom sklearn.preprocessing import scale\nfrom sklearn import model_selection\nimport os","89301dbd":"data=pd.read_csv(\"..\/input\/youtube-new\/USvideos.csv\")","cdb406b2":"print(data.head())","65fce536":"data.describe().T","45cd84d4":"data=data[[\"views\",\"likes\",\"dislikes\",\"comment_count\"]]","c8e76150":"data.reset_index(drop=True,inplace=True)","03c6af9e":"print(data)","05179aa6":"data=data.dropna()","7e47d85e":"data.info()","5dd1c152":"data.describe().T","b9eb92f2":"y=data[\"comment_count\"]","725482d0":"X=data[[\"views\",\"likes\",\"dislikes\"]]","9422d72f":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=42)","c242a5fd":"print(\"X_train\",X_train.shape)\n","ebdbd122":"print(\"X_test\",X_test.shape)\n","2360a2b9":"print(\"y_train\",y_train.shape)\n","45e01cf1":"print(\"y_test\",y_test.shape)","aba3f242":"data.shape","ae3a6e6d":"pca=PCA()","7ce51534":"X_reduced_train=pca.fit_transform(scale(X_train))","5ae38cf8":"X_reduced_train[0:1,:]","1aab8177":"np.cumsum(np.round(pca.explained_variance_ratio_,decimals=4)*100)[0:5]","969717e5":"lm=LinearRegression()","f2044171":"pcr_model=lm.fit(X_reduced_train,y_train)","764001ba":"pcr_model.intercept_","e7b330b5":"pcr_model.coef_","fde7aa6d":"y_pred=pcr_model.predict(X_reduced_train)","562979e8":"y_pred[0:5]","c2f0eab2":"np.sqrt(mean_squared_error(y_train,y_pred))","93947dff":"data[\"views\"].mean()","19fc3a01":"r2_score(y_train,y_pred) # we can explain 0.83% of data ","adbb9a65":"pca2=PCA()","0aae9b25":"X_reduced_test=pca2.fit_transform(scale(X_test))","00ad651f":"y_pred=pcr_model.predict(X_reduced_test)","f3755f92":"np.sqrt(mean_squared_error(y_test,y_pred))","b21fb000":"cv_10=model_selection.KFold(n_splits=10,shuffle=True,random_state=1) #10k validation preparing","884021fc":"lm=LinearRegression()","a376e794":"RMSE=[]","1c510b21":"for i in np.arange(1,X_reduced_train.shape[1]+1):\n    score=np.sqrt(-1*model_selection.cross_val_score(lm,X_reduced_train[:,:i],\n                                                     y_train.ravel(),\n                                                     cv=cv_10,\n                                                     scoring='neg_mean_squared_error').mean())\n    RMSE.append(score)","37265f02":"plt.plot(RMSE,'-v')\nplt.xlabel('Component Values')\nplt.ylabel('RMSE Values')\nplt.title('Comment Count Estimation Model with PCR')","62eefb96":"lm=LinearRegression()","fa526132":"pcr_model=lm.fit(X_reduced_train[:,0:2],y_train)","5d924320":"y_pred=pcr_model.predict(X_reduced_train[:,0:2])","6086866a":"print(np.sqrt(mean_squared_error(y_train,y_pred))) #Trying to trainset control after validation","e92a70f4":"y_pred=pcr_model.predict(X_reduced_test[:,0:2])","d96b9b35":"print(np.sqrt(mean_squared_error(y_test,y_pred))) # Validation answered the purpose :)","ebdce85c":"**If you think useful, please give a upvote :))**\n**And you can follow my account for sharing **\n"}}