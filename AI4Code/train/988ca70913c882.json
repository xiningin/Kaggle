{"cell_type":{"4ee4945c":"code","727d6cf2":"code","f1adeac3":"code","aa095f70":"code","6cd07691":"code","8263e661":"code","8d763e7d":"code","c4e9000d":"code","bcce7646":"code","023a93fe":"code","a163950f":"markdown","a904bba6":"markdown","051479f3":"markdown","69cc253d":"markdown","c7b20f51":"markdown","3b583f0e":"markdown","f128a6a7":"markdown","05211341":"markdown","2cadd8ec":"markdown","f353a68e":"markdown","e3529e15":"markdown"},"source":{"4ee4945c":"import numpy as np \nimport pandas as pd \nimport os\nprint(os.listdir(\"..\/input\/seg_train\/seg_train\/\"))","727d6cf2":"import matplotlib.image as img\nimport cv2\nfrom PIL import Image\ndata=[]\nlabels=[]\nstreet = os.listdir('..\/input\/seg_train\/seg_train\/street\/')\n%time\nfor a in street:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/street\/'+a)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(0)\n    except AttributeError:\n        print(\"\")\n        \nsea = os.listdir('..\/input\/seg_train\/seg_train\/sea\/')\n%time\nfor b in sea:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/sea\/'+b)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(1)\n    except AttributeError:\n        print(\"\")\n        \nglacier = os.listdir('..\/input\/seg_train\/seg_train\/glacier\/')\n%time\nfor c in glacier:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/glacier\/'+c)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(2)\n    except AttributeError:\n        print(\"\")\n        \nmountain = os.listdir('..\/input\/seg_train\/seg_train\/mountain\/')\n%time\nfor d in mountain:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/mountain\/'+d)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(3)\n    except AttributeError:\n        print(\"\")\n        \n        \nbuildings = os.listdir('..\/input\/seg_train\/seg_train\/buildings\/')\n%time\nfor e in buildings:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/buildings\/'+e)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(4)\n    except AttributeError:\n        print(\"\")\n        \nforest = os.listdir('..\/input\/seg_train\/seg_train\/forest\/')\n%time\nfor f in forest:\n    try:\n        image = cv2.imread('..\/input\/seg_train\/seg_train\/forest\/'+f)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        data.append(np.array(size_image))\n        labels.append(5)\n    except AttributeError:\n        print(\"\")","f1adeac3":"x_train=np.array(data)\ny_train=np.array(labels)\ny_train.shape","aa095f70":"x_train.shape","6cd07691":"import matplotlib.image as img\nimport cv2\nfrom PIL import Image\ntest=[]\nprediction=[]\nstreet = os.listdir('..\/input\/seg_test\/seg_test\/street\/')\n%time\nfor a in street:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/street\/'+a)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(0)\n    except AttributeError:\n        print(\"\")\n        \nsea = os.listdir('..\/input\/seg_test\/seg_test\/sea\/')\n%time\nfor b in sea:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/sea\/'+b)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(1)\n    except AttributeError:\n        print(\"\")\n        \nglacier = os.listdir('..\/input\/seg_test\/seg_test\/glacier\/')\n%time\nfor c in glacier:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/glacier\/'+c)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(2)\n    except AttributeError:\n        print(\"\")\n        \nmountain = os.listdir('..\/input\/seg_test\/seg_test\/mountain\/')\n%time\nfor d in mountain:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/mountain\/'+d)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(3)\n    except AttributeError:\n        print(\"\")\n        \n        \nbuildings = os.listdir('..\/input\/seg_test\/seg_test\/buildings\/')\n%time\nfor e in buildings:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/buildings\/'+e)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(4)\n    except AttributeError:\n        print(\"\")\n        \nforest = os.listdir('..\/input\/seg_test\/seg_test\/forest\/')\n%time\nfor f in forest:\n    try:\n        image = cv2.imread('..\/input\/seg_test\/seg_test\/forest\/'+f)\n        image_to_array=Image.fromarray(image,\"RGB\")\n        size_image=image_to_array.resize((50,50))\n        test.append(np.array(size_image))\n        prediction.append(5)\n    except AttributeError:\n        print(\"\")","8263e661":"x_test=np.array(test)\ny_test=np.array(prediction)\ny_test.shape","8d763e7d":"import tensorflow as tf\nimport tensorflow.keras as keras\nfrom keras.utils import to_categorical\nno_classes=6\nytr=to_categorical(y_train,no_classes)\nyte=to_categorical(y_test,no_classes)\n","c4e9000d":"from keras.models import Sequential\nfrom keras.layers import  Dense, Dropout, Flatten, Conv2D, MaxPooling2D\nmodel=Sequential()\nmodel.add(Conv2D(filters=16,kernel_size=2,padding=\"same\",activation=\"relu\",input_shape=(50,50,3)))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=32,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=64,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Conv2D(filters=64,kernel_size=2,padding=\"same\",activation=\"relu\"))\nmodel.add(MaxPooling2D(pool_size=2))\nmodel.add(Flatten())\nmodel.add(Dense(500,activation=\"relu\"))\nmodel.add(Dense(6,activation=\"softmax\"))\nmodel.summary()","bcce7646":"model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])\nbatch_size=500\nepochs=40\npredict=model.fit(x_train,ytr,batch_size=batch_size,epochs=epochs)","023a93fe":"accuracy = model.evaluate(x_test, yte, verbose=1)\nprint('Test_Accuracy:-', accuracy[1])","a163950f":"And Finally we gonna check with accuracy of the model.","a904bba6":"Check the shape of our data.","051479f3":"Our First task is to import libraries and find the details about file structure.\n\nLets do it.","69cc253d":"Once our data got ready and everything had done.\n\nLets define a neural network which will best for this problem. \n\nI found below network which is working fine and I am trying to improve it.\n\nOk Lets add neural network layers.","c7b20f51":"Now we had 14034 images for training and 3000 images for testing. \n\nBefore start with training We have categorise targets or ouput. \n\nAnd we can do using below method.","3b583f0e":"Thank You for your time. Your suggestions and comments are always welcome.\n\nPlease upvote if you like.\n","f128a6a7":"Now We learnt file structure, our next task will be convert this all images to array.\n\nThe below code is going to do that work for me.","05211341":"Now we had traing data in the format we want. \n\nNow the next thing we can do is get testing data in the same way.\n\nBelow code will going to do that work for us.","2cadd8ec":"Our next task is to train the neural network.","f353a68e":"The code is very simple. We are applying a for loop on all the images and converting each image to array.\nNow Lets define our training data.","e3529e15":"Lets define testing data and check with number of images present in it."}}