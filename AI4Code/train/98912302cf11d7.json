{"cell_type":{"c8ee7c05":"code","777f8347":"code","b83d30b3":"code","95aa4500":"code","b58ee299":"code","dd638e16":"code","b7f0f031":"code","335e08e5":"code","4bd36934":"code","653e1cca":"code","1d9779f3":"code","20089c2d":"code","fc71744b":"code","80100f00":"code","744ea667":"code","09133a57":"code","86c7c875":"code","50ed7d28":"code","efced1c3":"code","375baf47":"code","577f57a8":"code","ed442bc3":"code","bf16e711":"code","fb7da453":"code","f94cc58e":"code","11a6fb56":"code","73bfb2d4":"code","dc7ed558":"code","7fddd85c":"code","1e7cfb6a":"code","69c4a853":"code","77678dbf":"code","6684ef84":"code","dde2386a":"code","88ce5f92":"code","7e66d5e6":"code","38c7ce80":"code","831fad15":"code","41c508f7":"code","996c46c3":"code","03a94772":"code","d76f0361":"code","a96edd32":"code","b63a560a":"code","a781171d":"code","e0928e27":"code","2388e157":"code","f398cefd":"code","522bcf8e":"code","c6223137":"code","160defd7":"code","274cde79":"markdown","7b0e0293":"markdown","dae2f194":"markdown","89b0e91e":"markdown","6d25b56d":"markdown","9b4fa1bd":"markdown","73954493":"markdown","8c581fa1":"markdown","7451efed":"markdown","8e9232fc":"markdown","41fcb02b":"markdown","64d71c81":"markdown"},"source":{"c8ee7c05":"import numpy as np # linear algebra\nimport pandas as pd # data processing\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","777f8347":"df = pd.read_csv(\"..\/input\/lending-club-loan-dataset\/loan.csv\")\ndf.head()","b83d30b3":"#exp = df.head(20)\n#exp.to_csv('.\/LendingClubExport.csv')","95aa4500":"def check_shape(df):\n    rows = df.shape[0]\n    cols = df.shape[1]\n    print(\" Number of Records: \",rows)\n    print(\" Number of Columns: \",cols)","b58ee299":"print(df.columns)\nprint(df.info())\nprint(df.describe())","dd638e16":"# Let's see the missing value counts across columns\nprint(df.isna().sum(),end='\\n\\n')\ncheck_shape(df)","b7f0f031":"df_null = pd.DataFrame(round((df.isna().sum()\/df.shape[0])*100,2),columns=['% Null']).reset_index()\ndf_null.rename(columns={'index':'Column'},inplace=True)","335e08e5":"df_null","4bd36934":"#df_null.sort_values(by='% Null',ascending=False)['% Null']>=30\ndrop_cols = df_null[df_null['% Null']>=20].sort_values(by='% Null',ascending=False)['Column'].tolist()\ndrop_cols","653e1cca":"df.drop(labels=drop_cols,axis=1, inplace=True)","1d9779f3":"df_null2 = pd.DataFrame(round((df.isna().sum()\/df.shape[0])*100,2),columns=['% Null']).reset_index()\ndf_null2.rename(columns={'index':'Column'},inplace=True)\ndf_null2.sort_values(by='% Null',ascending=False)\ncheck_shape(df)","20089c2d":"# dropping rows where missing values\ndf.dropna(axis=0, inplace=True)\ncheck_shape(df)","fc71744b":"df.head()","80100f00":"df.columns","744ea667":"df_ID_Cols = df[['id', 'member_id']]\nCols_To_Remove = ['id', 'member_id','emp_title','url','title','zip_code']\n\ndf.drop(labels=Cols_To_Remove,axis=1, inplace=True)","09133a57":"check_shape(df)","86c7c875":"obje_cols = df.select_dtypes(np.object).columns.tolist()\nobje_cols","50ed7d28":"df[obje_cols].head()","efced1c3":"for col in obje_cols:\n    print(df[col].value_counts(),end='\\n\\n')","375baf47":"numeric_cols = df.select_dtypes(['int','float']).columns.tolist()\nnumeric_cols","577f57a8":"df_num = df[numeric_cols[:16]]\ndf_num.describe()","ed442bc3":"df_num = df[numeric_cols[16:]]\ndf_num.describe()","bf16e711":"l = ['id','member_id','dti','delinq_2yrs','inq_last_6mths','pub_rec','policy_code','recoveries','collection_recovery_fee','total_rec_late_fee','collections_12_mths_ex_med','acc_now_delinq','tot_coll_amt']\nnum_cols = numeric_cols\nfor x in l:\n    if x in df.columns.tolist():\n        num_cols.remove(x)","fb7da453":"len(num_cols)","f94cc58e":"num_cols","11a6fb56":"def plot_box(dataframe,cols_list):\n    dff=dataframe\n    plt.figure(figsize=[20,20])\n    i=1\n    for col in cols_list:\n        plt.subplot(5,5,i)\n        sns.boxplot(dff[col],orient='h')\n        plt.title(\"Box plot for {}\".format(col))\n        i+=1\n        plt.tight_layout()\n    plt.show()","73bfb2d4":"plot_box(df,num_cols)","dc7ed558":"def plot_dist(cols_list):\n    plt.figure(figsize=[20,20])\n    i=1\n    for col in cols_list:\n        plt.subplot(5,5,i)\n        sns.distplot(df[col])\n        plt.title(\"Box plot for {}\".format(col))\n        i+=1\n        plt.tight_layout()\n    plt.show()","7fddd85c":"plot_dist(num_cols)","1e7cfb6a":"outlier_cols = ['int_rate','installment','open_acc','revol_util','total_acc', 'out_prncp','out_prncp_inv','total_pymnt','total_pymnt_inv','total_rec_prncp','total_rec_int']","69c4a853":"df[outlier_cols].describe()","77678dbf":"cols = outlier_cols\n#quantiles = np.arange(0.9,1.0,0.01)\nquantiles = [0.9 , 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99]\ndf_out = pd.DataFrame(columns=quantiles,index=outlier_cols)","6684ef84":"cols = outlier_cols\nquantiles = [0.9 , 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99]\nfor col in outlier_cols:\n    for q in quantiles:\n        df_out.loc[col][q]=round(df[col].quantile(q),4)\n        \ndf_out['Max'] = df[outlier_cols].apply(max)\ndf_out","dde2386a":"df_out.columns","88ce5f92":"#df[outlier_cols] = df[outlier_cols].quantile(q=0.99)","7e66d5e6":"plot_box(df,num_cols)","38c7ce80":"outlier_cols","831fad15":"df_final = df[(df['int_rate'] < 23) & (df['installment'] < 660) & (df['open_acc'] < 23) & \n              (df['revol_util'] < 100) & (df['total_acc'] < 54) & (df['out_prncp'] < 32648.05) & \n              (df['out_prncp_inv'] < 32648.05) & (df['total_pymnt'] < 32648.0) & (df['total_pymnt_inv'] < 20000.6853) & \n              (df['total_rec_prncp'] < 14000.0) & (df['total_rec_int'] < 4200.0)]\n\n","41c508f7":"plot_box(df_final,outlier_cols)","996c46c3":"df_final.shape","03a94772":"obj_cols = df_final.select_dtypes(np.object).columns.tolist()\nnum_cols = df_final.select_dtypes([int, float]).columns.tolist()","d76f0361":"# Plotting the scatterplot to find the linear relationship between the feature\n#plt.figure(figsize=(20,26))\n#i=1\n#for col in num_cols:\n    #plt.subplot(10,4,i)\n    #sns.scatterplot(x=df_final[col],y=df_final['SalePrice'])\n    #i+=1\n    #plt.tight_layout()","a96edd32":"obj_cols","b63a560a":"# Plotting the countplot to find the distribution of categories of categorical feature\nlong_obj_cols = ['sub_grade','loan_status','emp_length','issue_d','purpose',\n 'addr_state','earliest_cr_line','last_pymnt_d',\n 'last_credit_pull_d']\nplt.figure(figsize=(15,30))\ni=1\nfor col in obj_cols:\n    if col not in long_obj_cols:\n        plt.subplot(11,3,i)\n        sns.countplot(data = df_final, x=col,order=df_final[col].value_counts().index)\n        i+=1\n        plt.tight_layout()\n","a781171d":"plt.figure(figsize=(15,150))\nfor col in obj_cols:\n    if col in long_obj_cols:\n        plt.subplot(20,2,i)\n        sns.countplot(data = df_final, y=col,order=df_final[col].value_counts().index)\n        i+=1\n        plt.tight_layout()","e0928e27":"plt.figure(figsize=(15,90))\ni=1\nfor col in obj_cols:\n    if col not in long_obj_cols:\n        plt.subplot(20,1,i)\n        sns.countplot(data = df_final, x=col , order=df_final[col].value_counts().index,hue = df_final['loan_status'],palette='Blues').set(xlabel=str(col), ylabel='Loan Status', title='Distribution of {} in various Loan Statuses'.format(str(col)))\n        i+=1\n        plt.tight_layout()","2388e157":"df_final.head()","f398cefd":"for col in obje_cols:\n    print(df_final[col].value_counts(),end='\\n\\n')","522bcf8e":"df_final['term'] = df_final['term'].map({'36 months': 36,'60 months':60}) ","c6223137":"from sklearn.preprocessing import LabelEncoder","160defd7":"# Instantiating LabelEncoder\nle=LabelEncoder()\n\n# Iterating over all the values of each column and extract their dtypes\nfor col in df_final.columns.to_numpy():\n    # Comparing if the dtype is object\n    if df_final[col].dtypes in ('object'):\n    # Using LabelEncoder to do the numeric transformation\n        df_final[col]=le.fit_transform(df_final[col].astype(str))","274cde79":"### 2.3 Missing Value Treatment","7b0e0293":"# 1. Introduction\n\nLending Club\n\nThe goal of this notebook is to predict whether a person a potential loan customer or loan defaulter","dae2f194":"### 2.4.1 Data Standardisation - II","89b0e91e":"# 2.3 Bivariate Analysis","6d25b56d":"### 2.3 Data Standardization","9b4fa1bd":"# 2.2 Univariate Analysis","73954493":"# 2. Data Preprocessing","8c581fa1":"### 2.1 Data Read","7451efed":"### We can select the data at 98th percentile as the values seems to be shot up and could be potential outliers","8e9232fc":"Feature encoding","41fcb02b":"### 2.3.1 Feature Engineering - I","64d71c81":"### 2.4 Outlier Treatment"}}