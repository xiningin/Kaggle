{"cell_type":{"47a1fd3b":"code","c428c617":"code","023dce80":"code","841d089b":"code","b5e70108":"code","ef54ac5a":"code","006d4d03":"markdown","b073003e":"markdown","823e87e4":"markdown","0928fcc5":"markdown","1a1e3896":"markdown"},"source":{"47a1fd3b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c428c617":"!pip install lightweight-gan","023dce80":"!mkdir resized\n\nimport os, sys\nfrom PIL import Image, ImageOps\n\nfor filename in os.listdir('..\/input\/mathematical-mathematics-memes\/'):\n    old_img = Image.open(\"..\/input\/mathematical-mathematics-memes\/\" +filename)\n    old_size = old_img.size\n    size = (max(old_size), max(old_size))\n    old_size = old_img.size\n    img = Image.new(\"RGB\", size)\n    img.paste(old_img, ((size[0]-old_size[0])\/\/2,\n                      (size[1]-old_size[1])\/\/2))\n    img = img.resize((128,128))\n    img.save(\".\/resized\/\" + filename)","841d089b":"!lightweight_gan --data .\/resized --transparent --num-train-steps 10000 --image-size 128","b5e70108":"!lightweight_gan --data .\/resized --transparent --num-train-steps 20000 --image-size 128 --name .\/default\/ --load-from 10","ef54ac5a":"from IPython.display import Image\nImage(filename='.\/results\/default\/9.jpg') ","006d4d03":"#Code by That_Bag https:\/\/www.kaggle.com\/jahysama\/animal-crossing-nightmare-fuel-villagers\/notebook","b073003e":"#Above, No resized error with GPU?","823e87e4":"Original code was RGBA: to avoid error discard the A (of RGBA)\nJPG does not support transparency - RGBA means Red, Green, Blue, Alpha - Alpha is transparency.\n\nYou need to discard the Alpha Channel or save as something that supports transparency - like PNG.\n\nThe Image class has a method convert which can be used to convert RGBA to RGB - after that you will be able to save as JPG.\nhttps:\/\/stackoverflow.com\/questions\/48248405\/cannot-write-mode-rgba-as-jpeg\/48248432","0928fcc5":"#AssertionError: You need to have an Nvidia GPU with CUDA installed. Turn on GPU","1a1e3896":"AssertionError: You need to have an Nvidia GPU with CUDA installed.: I think that could be a Meme."}}