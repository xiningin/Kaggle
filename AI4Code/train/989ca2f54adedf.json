{"cell_type":{"2e903b9c":"code","17285095":"code","ef5c9dcd":"code","5778c7bf":"code","edccfc6d":"code","0d4b449d":"code","9427faa6":"code","e24dedb3":"code","d3ae9f85":"code","e2f1b540":"code","7480a37d":"code","36613337":"code","365ae19e":"code","5979ab27":"code","05481018":"code","79edc6ba":"code","91ce3863":"code","b5034b9c":"code","d18532d8":"code","e4b0edf0":"code","5b9ca521":"code","d6ae8f7f":"code","5e38ac41":"code","2e17611e":"code","27c4884b":"code","b53584b6":"code","966ea9d0":"code","279ebc6e":"code","c4f069fb":"code","b9cc61c2":"code","10a261a9":"code","a31c5f15":"code","9335a7e0":"markdown","5152b4ee":"markdown","1a4f4468":"markdown","b2d56d3b":"markdown","931730ab":"markdown","77ae972b":"markdown","91dfdb4c":"markdown","641ccc82":"markdown","fb270227":"markdown","63ffa563":"markdown","73e75eb5":"markdown","2432754e":"markdown","33cd40b0":"markdown","b9cf4bbe":"markdown","800e1cab":"markdown","a8c85975":"markdown","6b3fd2b3":"markdown","5e82e562":"markdown"},"source":{"2e903b9c":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix, r2_score","17285095":"#load data\ndf= pd.read_csv('..\/input\/titanic\/train.csv')\n#quick look at the data\ndf.info()","ef5c9dcd":"#check for null values\nsns.heatmap(df.isnull())","5778c7bf":"#get % of nulls\n(df.isnull().sum()\/len(df)).sort_values(ascending=False)","edccfc6d":"#Try to impute the age column\n#age based on Sex\ndf['Age'].groupby(df['Sex']).mean()","0d4b449d":"#age based on Sex and Pclass\ndf['Age'].groupby([df['Sex'], df['Pclass']]).mean()","9427faa6":"#Since the second approch gices as more verity we will go with it\ndf.head(10)","e24dedb3":"#fill missing values\ndef fill_age(col):\n    \"\"\"\n    input- dataframe with 3 columns in order (Sex, Pclass, Age)\n    ------------------\n    output- return the average age based on Pclass and Sex\n    \"\"\"\n    aa={'male': {1: 41.0, 2: 31.0, 3: 27.0},\n         'female': {1: 35.0, 2: 29.0, 3: 22.0}}\n    if pd.isnull(col[2]):\n        return aa[col[0]][col[1]]\n    else:\n        return col[2]\n    \ndf['Age']= df[['Sex','Pclass', 'Age']].apply(fill_age, axis=1)","d3ae9f85":"#drop Cabin because 77% is null and there is no meaningful way ti fill it\ndf.drop('Cabin', inplace=True, axis=1)","e2f1b540":"#find which port is the most used\n#C = Cherbourg, Q = Queenstown, S = Southampton\ndf['Embarked'].groupby(df['Pclass']).value_counts().plot(kind='bar')","7480a37d":"#since missing values are less than 1% and Southampton is the most frequent port\n#fill missing values with S\ndf['Embarked'].fillna('S', inplace=True)","36613337":"#check again\nsns.heatmap(df.isnull())","365ae19e":"#survive count based on gender\nsns.countplot(df['Sex'], hue=df['Survived'])\nplt.legend(loc='upper right')","5979ab27":"df[df['Survived']==1].groupby(df['Sex']).count()['Survived']","05481018":"df[df['Survived']==0].groupby(df['Sex']).count()['Survived']","79edc6ba":"#survival count based on ticket class\nsns.countplot(df['Pclass'], hue=df['Survived'])\nplt.legend(loc='upper right')","91ce3863":"#maybe gender plays a role here more than pclass\ndf.groupby([df['Pclass'],df['Sex'], df['Survived']]).count()['PassengerId'].plot(kind='bar')","b5034b9c":"df.groupby([df['Pclass'],df['Sex'], df['Survived']]).count()['PassengerId']\/len(df)","d18532d8":"#num of passenger per class\ndf['Pclass'].value_counts()","e4b0edf0":"#survival count per number of parents\/children\nsns.countplot(df['Parch'], hue=df['Survived'])\nplt.legend(loc='upper right')","5b9ca521":"#with gender\nplt.figure(figsize=(12, 6))\ndf.groupby([df['Parch'], df['Sex'], df['Survived']]).count()['PassengerId'].plot(kind='bar')","d6ae8f7f":"#prepare data for ML\n#drop passengerId\ndf.drop('PassengerId', axis=1, inplace=True)\ndf.drop('Ticket', axis=1, inplace=True)\n\n#extract title from name 1= Mr, 2= Mrs, 3= Miss, 0= no title\ndf['Name']= df['Name'].apply(lambda x : 1 if 'Mr.' in x else(2 if 'Mrs.' in x else (3 if 'Miss.' in x else 0)) )\n\n#make dummies for Sex and Embarked\ndum= pd.get_dummies(df[['Sex', 'Embarked']], drop_first=True)\n#drop orignal columns\ndf.drop('Sex', axis=1, inplace=True)\ndf.drop('Embarked', axis=1, inplace=True)\n#merge\ndf= pd.concat([df, dum], axis=1)\n\n#normilaze the data\nfrom sklearn.preprocessing import MinMaxScaler\n\n#spit data\nx= df.drop('Survived', axis=1)\ny= df['Survived']\n\n#scale x\nscaler=MinMaxScaler()\nx= scaler.fit_transform(x)\n\n#import model\nfrom sklearn.linear_model import LogisticRegression\nmodel= LogisticRegression()\nmodel.fit(x, y)","5e38ac41":"#import test(features) data and prepare it\ndf_test= pd.read_csv('..\/input\/titanic\/test.csv')\n\n#fill missing values\ndef fill_age(col):\n    \"\"\"\n    input- dataframe with 3 columns in order (Sex, Pclass, Age)\n    ------------------\n    output- return the average age based on Pclass and Sex\n    \"\"\"\n    aa={'male': {1: 41.0, 2: 31.0, 3: 27.0},\n         'female': {1: 35.0, 2: 29.0, 3: 22.0}}\n    if pd.isnull(col[2]):\n        return aa[col[0]][col[1]]\n    else:\n        return col[2]\n    \ndf_test['Age']= df_test[['Sex','Pclass', 'Age']].apply(fill_age, axis=1)","2e17611e":"#get mean manually\ndf_test['Fare'].groupby(df_test['Pclass']).mean()","27c4884b":"#fill with class 3 average fare\ndf_test.loc[152, 'Fare']=12.459678","b53584b6":"#fill emarked with S\ndf_test['Embarked'].fillna('S', inplace=True)\ndf_test.drop('Cabin', axis=1, inplace=True)\ndf_test.drop('Ticket', axis=1, inplace=True)\ndf_test.drop('PassengerId', axis=1, inplace=True)","966ea9d0":"df_test['Name']= df_test['Name'].apply(lambda x : 1 if 'Mr.' in x else(2 if 'Mrs.' in x else (3 if 'Miss.' in x else 0)) )\n\n#make dummies for Sex and Embarked\ndum= pd.get_dummies(df_test[['Sex', 'Embarked']], drop_first=True)\n\n#drop orignal columns\ndf_test.drop('Sex', axis=1, inplace=True)\ndf_test.drop('Embarked', axis=1, inplace=True)\n\n#merge\ndf_test= pd.concat([df_test, dum], axis=1)","279ebc6e":"#import test labels\ny_test= pd.read_csv('..\/input\/titanic\/gender_submission.csv')\ny_test.drop('PassengerId', axis=1, inplace=True)","c4f069fb":"x_test= scaler.transform(df_test)\ny_pred= model.predict(x_test)","b9cc61c2":"#evalutae\nprint('classification_report:')\nprint(classification_report(y_test, y_pred))\nprint('#######################################################')\nprint('confusion_matrix:')\nprint(confusion_matrix(y_test, y_pred))\nprint('#######################################################')\nprint('r2_score:')\nprint(r2_score(y_test, y_pred))","10a261a9":"#lets predict if we die or not\n#Order: \n#ticket class(1, 2, 3)\n#Name(0= None, 1=Mr ,2=Mrs ,3=Miss)\n#Age (number)\n#number of siplings\/ spouse (number)\n#number of parents\/ children (number)\n#fare (number)\n#male (0=no, 1=yes)\n#embarked from Queenstown (0=no, 1=yes)\n#embarked from Southampton (0=no, 1=yes)\n#if both Queenstown and Southhampton are 0 then you will embark from Cherbourg\nme= np.array([1, 0, 26.0, 0, 0, 100.0, 1, 0, 1])\nme= scaler.transform(me.reshape(1, -1))\npred= model.predict(me)","a31c5f15":"#sad really\nprint(pred)","9335a7e0":"form this we can see that being single has the highest survival rate and also the higeghst death count.  \nmeanwhile having one parent\/child with has higher chances of surviving than dying.  \nlets devide by gender to see if we can find something.","5152b4ee":"# imports","1a4f4468":"## 3-Prepare Data:","b2d56d3b":"if we look at sheer count only it looks like that being single increases chanses of surviving but in reality it doesn't affect the survival rate.  \n","931730ab":"## Q2: does pclass affect survival rate","77ae972b":"## Exploration\/answer questions","91dfdb4c":"3 columns need attention (Cabin, Age, Embarked)","641ccc82":"## Will you survive?","fb270227":"## 2-Data Understanding:","63ffa563":"## Q3:does parents\/children affect survival rate","73e75eb5":"# 1-Business Understanding:\n\nThe goal is to analyise the [titanic](https:\/\/www.kaggle.com\/c\/titanic\/data) data set to answer 3 questions:  \n1- does gender affect survival rate?  \n2- does ticket class affect survival rate?  \n3- does having parent\/childe affect survival rate?  ","2432754e":"## prepare test data","33cd40b0":"## Q1:which gender survive more?","b9cf4bbe":"This graph shows that women are more likly to survive than men.","800e1cab":"## 5-Evaluate the Results:","a8c85975":"we can clearly see that survival rate for 1st class is higher than other classes.  \nlets see the survival rate for each gender per class.","6b3fd2b3":"## 4-Data Modeling","5e82e562":"looks like that women in first class are the one with most survival rate while men don't benfit from the higher class"}}