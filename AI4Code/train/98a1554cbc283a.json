{"cell_type":{"6d073a15":"code","bab41b2a":"code","efae54ac":"code","f08844ad":"code","580e5a91":"code","90c8d8b8":"code","69db9705":"code","f90d701a":"code","a3c4ed5e":"code","cb15f182":"code","e9e1da9f":"code","c6c8edf0":"code","0340775a":"code","76040cff":"code","2c6f76f5":"code","7648a6ab":"code","39988c30":"code","910c175d":"code","9154424c":"code","3b25bb3e":"code","9666681c":"code","d17e37d4":"code","184def4f":"code","500bf56a":"code","cbbea563":"code","7999f5d4":"code","23f1da17":"code","15c59d2b":"code","38569b8b":"code","1ccc1eb8":"code","503ea460":"code","4bf7d3f2":"code","5c24791e":"code","05c675b9":"code","cc1e64c8":"code","2d1b6e9c":"code","1a6f984c":"code","c08b6664":"code","2ecd744f":"code","a2fc472c":"code","e80a3118":"code","ffdf3e0b":"code","ea12a116":"code","a22ee1c9":"code","d645351b":"code","9a11b64d":"code","cf012ddb":"code","46c6ac1e":"code","832c162f":"code","54a5a2fc":"code","573eb384":"code","7f0f3abc":"code","5cd100cf":"code","b3ff1b02":"code","3d0a0ba3":"code","795e6cd7":"code","b3badba4":"code","9429d955":"code","c9e98fb2":"code","96ad9123":"code","df000f65":"code","a08fa648":"code","ce7c461a":"markdown","5bfdaf15":"markdown","64b5e3d2":"markdown"},"source":{"6d073a15":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","bab41b2a":"df = pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","efae54ac":"df.head()","f08844ad":"df.describe()","580e5a91":"plt.figure(figsize=(12,6))\nsns.displot(data=df, x ='price' , kde=True)\n# right skewed plot","90c8d8b8":"sns.countplot(data=df, x='bedrooms')","69db9705":"df.corr()['price'].sort_values()[:-1]","f90d701a":"sns.scatterplot(data=df,x='sqft_living',y='price')","a3c4ed5e":"sns.boxplot(data=df,x='bedrooms',y='price')","cb15f182":"plt.figure(figsize=(12,6))\nsns.scatterplot(data=df,x='long',y='lat' , palette='plasma' , hue='price',alpha=0.2,edgecolor='black')\n# price pattern doesn't look so clear because of the presence of outliers","e9e1da9f":"df.sort_values('price',ascending=False)","c6c8edf0":"len(df)*0.01","0340775a":"non_top_1_percent = df.sort_values('price',ascending=False).iloc[216: , :]","76040cff":"plt.figure(figsize=(12,6))\nsns.scatterplot(data=non_top_1_percent,x='long',y='lat' , palette='coolwarm' , hue='price',alpha=0.2,edgecolor='black')\n# now we can see the price pattern more clearly","2c6f76f5":"sns.boxplot(data=df,x='waterfront',y='price')","7648a6ab":"df.head()","39988c30":"df.drop('id',axis=1,inplace=True)","910c175d":"df['date'] = pd.to_datetime(df['date'])","9154424c":"df['year'] = df['date'].apply(lambda x : x.year)\ndf['month'] = df['date'].apply(lambda x : x.month)","3b25bb3e":"df.head()","9666681c":"plt.figure(figsize=(12,6))\nsns.boxplot(data=df,x='month',y='price')\n# no significant difference","d17e37d4":"plt.figure(figsize=(12,6))\nsns.boxplot(data=df,x='year',y='price')","184def4f":"df.groupby('month').median()['price']","500bf56a":"df.groupby('year').median()['price']","cbbea563":"df.groupby('bedrooms').median()['price']","7999f5d4":"df.drop('date',axis=1,inplace=True)","23f1da17":"df['zipcode'].nunique()","15c59d2b":"df.groupby('zipcode').median()['price'].sort_values() # isn't much fruitful, will drop it","38569b8b":"df.drop('zipcode',axis=1,inplace=True)","1ccc1eb8":"X = df.drop('price',axis=1).values\ny = df['price'].values","503ea460":"from sklearn.model_selection import train_test_split","4bf7d3f2":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","5c24791e":"from sklearn.preprocessing import MinMaxScaler","05c675b9":"sc = MinMaxScaler()","cc1e64c8":"X_train = sc.fit_transform(X_train)","2d1b6e9c":"X_test = sc.transform(X_test)","1a6f984c":"X_train.shape","c08b6664":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense","2ecd744f":"model = Sequential()\n\nmodel.add(Dense(19,activation='relu')) # input layer\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\n\nmodel.add(Dense(1)) # output layer\n\nmodel.compile(optimizer='adam',loss='mse')","a2fc472c":"model.fit(x=X_train,y=y_train,validation_data=(X_test,y_test),epochs=600,verbose=1)","e80a3118":"loss_df = pd.DataFrame(model.history.history)","ffdf3e0b":"loss_df.head()","ea12a116":"loss_df.plot()","a22ee1c9":"pred = model.predict(X_test)","d645351b":"from sklearn.metrics import mean_squared_error,mean_absolute_error,explained_variance_score","9a11b64d":"np.sqrt(mean_squared_error(y_test,pred))","cf012ddb":"df['price'].median()","46c6ac1e":"mean_absolute_error(y_test,pred)","832c162f":"explained_variance_score(y_test,pred)","54a5a2fc":"plt.figure(figsize=(12,6))\nplt.scatter(y_test,pred)\nplt.plot(y_test,y_test,'r')","573eb384":"new_val = df.drop('price',axis=1).iloc[0].values\nnew_val = sc.transform(new_val.reshape(-1,19))","7f0f3abc":"model.predict(new_val)","5cd100cf":"df['price'][0]","b3ff1b02":"from catboost import CatBoostRegressor","3d0a0ba3":"cb = CatBoostRegressor(random_state=123,iterations=10000)","795e6cd7":"cb.fit(X_train,y_train,eval_set=(X_test,y_test), early_stopping_rounds=200)","b3badba4":"cb_pred = cb.predict(X_test)","9429d955":"mean_squared_error(y_test,cb_pred)**0.5","c9e98fb2":"mean_absolute_error(y_test,cb_pred)","96ad9123":"explained_variance_score(y_test,cb_pred)","df000f65":"cb.predict(new_val)","a08fa648":"df['price'][0]","ce7c461a":"# comparing the ann model with catboost","5bfdaf15":"# pretty close","64b5e3d2":"# In this case, catboost outperformed our ann model"}}