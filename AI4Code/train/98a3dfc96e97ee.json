{"cell_type":{"f9dc9604":"code","5c99d2be":"code","6544430e":"code","8f2a514c":"code","df939d99":"code","3d720494":"code","d1312183":"code","73effb8d":"code","40f9dbf7":"code","406bf7a0":"code","ec9b9bad":"code","385f8d13":"code","7abb1ebb":"code","91a6fb00":"code","e211d58e":"code","31dc247c":"code","3b2e9a9b":"code","4b67f0a0":"code","e55a32aa":"code","5c44fe1e":"code","8c9f7a5c":"code","45514bd6":"code","f5116258":"code","fe6f04b3":"code","6a3280fe":"code","49a6b742":"code","493ce90e":"code","01c3708d":"code","3dd205af":"code","f1487c11":"code","8953b614":"code","4aa88f41":"code","7c205f15":"code","930b7baf":"code","154793b5":"code","5c40b837":"code","14044a12":"code","2b9195d6":"code","ffb61259":"code","6b72afe1":"code","295cf4c5":"code","08a6457c":"code","2de12fdd":"code","0939d685":"code","0aee14e2":"code","bdcf730b":"code","e54be065":"code","26eb4010":"code","6cb9b69e":"code","f07da24c":"code","1a025401":"code","4b514b60":"code","7da78215":"markdown","44edcdab":"markdown","a580b727":"markdown","2630b168":"markdown","bb113235":"markdown","c0b9e0eb":"markdown","d5e9e5f9":"markdown","006ecba5":"markdown","a558b99f":"markdown","79fea206":"markdown"},"source":{"f9dc9604":"pip install openpyxl","5c99d2be":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt","6544430e":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","8f2a514c":"df = pd.read_excel('\/kaggle\/input\/voluntary2\/Dataset1.xlsx')","df939d99":"df.head()","3d720494":"df.shape","d1312183":"df.info() #check the basic information","73effb8d":"df.describe() #check the basic statistics information","40f9dbf7":"df.isnull().sum() # check the null values","406bf7a0":"# df['Years']= df[\"Month\"] + df[\"Year\"].astype(str)","ec9b9bad":"df['Year'] = pd.to_datetime(df['Year'])","385f8d13":"df = df[[\"Year\",\"Involuntary\",\"Voluntary\"]]","7abb1ebb":"df.info()","91a6fb00":"df = df.fillna(0)","e211d58e":"df = df.loc[:224 ] # clean dataset\ndf","31dc247c":"df.set_index('Year',inplace = True)","3b2e9a9b":"df","4b67f0a0":"pd.pivot_table(df, values=['Involuntary', 'Voluntary'], index='Year',\n                   aggfunc={'Involuntary': np.sum,'Voluntary': np.sum})","e55a32aa":"df1 = df.groupby('Year').aggregate({'Involuntary': 'sum',\n                             'Voluntary': 'sum'})","5c44fe1e":"df1","8c9f7a5c":"title = 'Voluntarty vs. Involuntary'\nylabel='Values'\nxlabel=''\nax = df1['Involuntary'].plot(figsize=(12,5),title=title,legend=True)\nax.autoscale(axis='x',tight=True)\nax.set(xlabel=xlabel, ylabel=ylabel)\ndf1['Voluntary'].plot(legend=True)\nplt.show()","45514bd6":"df1.info()","f5116258":"df1.columns","fe6f04b3":"import matplotlib.pyplot as plt","6a3280fe":"fig,ax = plt.subplots(2,1,figsize=(20,10))\nfor i,column in enumerate([col for col in df1.columns]):\n    df1[column].plot(ax=ax[i])\n    ax[i].set_title(column)","49a6b742":"from pandas.plotting import autocorrelation_plot\nfrom matplotlib.pylab import rcParams\n# rcParams['figure.figsize'] = 10,6\nrcParams['figure.figsize'] = 15,10\nautocorrelation_plot(df1)\nplt.show()\n","493ce90e":"def adf_test(series,title=''):\n    \"\"\"\n    Pass in a time series and an optional title, returns an ADF report\n    \"\"\"\n    print(f'Augmented Dickey-Fuller Test: {title}')\n    result = adfuller(series.dropna(),autolag='AIC') # .dropna() handles differenced data\n    \n    labels = ['ADF test statistic','p-value','# lags used','# observations']\n    out = pd.Series(result[0:4],index=labels)\n\n    for key,val in result[4].items():\n        out[f'critical value ({key})']=val\n        \n    print(out.to_string())          # .to_string() removes the line \"dtype: float64\"\n    \n    if result[1] <= 0.05:\n        print(\"Strong evidence against the null hypothesis\")\n        print(\"Reject the null hypothesis\")\n        print(\"Data has no unit root and is stationary\")\n    else:\n        print(\"Weak evidence against the null hypothesis\")\n        print(\"Fail to reject the null hypothesis\")\n        print(\"Data has a unit root and is non-stationary\")","01c3708d":"%matplotlib inline\n# Load specific forecasting tools\nfrom statsmodels.tsa.api import VAR\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.tools.eval_measures import rmse","3dd205af":"adf_test(df1['Involuntary'],title='Involuntary')","f1487c11":"adf_test(df1['Voluntary'],title='voluntary')","8953b614":"nobs=12\ntrain, test = df1[0:-nobs], df1[-nobs:]","4aa88f41":"test","7c205f15":"train","930b7baf":"print(train.shape)\nprint(test.shape)","154793b5":"from statsmodels.tsa.api import VAR","5c40b837":"for i in [1,2,3,4,5,6,7]:\n    model = VAR(train)\n    results = model.fit(i)\n    print('Order =', i)\n    print('AIC: ', results.aic)\n    print('BIC: ', results.bic)\n    print()","14044a12":"model = VAR(train)\nfor i in [1,2,3,4,5,6,7]:\n    results = model.fit(i)\n    print('Order =', i)\n    print('AIC: ', results.aic)\n    print('BIC: ', results.bic)\n    print()","2b9195d6":"model.endog_names","ffb61259":"results = model.fit(5)\nresults.summary()","6b72afe1":"lag_order = results.k_ar\nlag_order","295cf4c5":"z = results.forecast(y=train.values[-lag_order:], steps=12)\nz","08a6457c":"test","2de12fdd":"idx = pd.date_range('2021-07-02', periods=12, freq='MS')\ndf_forecast = pd.DataFrame(z, index=idx, columns=['Involuntary_F','Voluntary_F'])\ndf_forecast","0939d685":"df_forecast['InVol'] = (df['Involuntary'].iloc[-nobs-1]-df['Involuntary'].iloc[-nobs-2]) + df_forecast['Involuntary_F'].cumsum()\n\n# Now build the forecast values from the first difference set\ndf_forecast['InvolForecast'] = df['Involuntary'].iloc[-nobs-1] + df_forecast['InVol'].cumsum()","0aee14e2":"df_forecast['Vol'] = (df['Voluntary'].iloc[-nobs-1]-df['Voluntary'].iloc[-nobs-2]) + df_forecast['Voluntary_F'].cumsum()\n\n# Now build the forecast values from the first difference set\ndf_forecast['VolForecast'] = df['Voluntary'].iloc[-nobs-1] + df_forecast['Vol'].cumsum()","bdcf730b":"df_forecast","e54be065":"results.plot()","26eb4010":"results.plot_forecast(12)","6cb9b69e":"df['Involuntary'][-nobs:].plot(figsize=(12,5),legend=True).autoscale(axis='x',tight=True)\ndf_forecast['InvolForecast'].plot(legend=True);","f07da24c":"df['Voluntary'][-nobs:].plot(figsize=(12,5),legend=True).autoscale(axis='x',tight=True)\ndf_forecast['VolForecast'].plot(legend=True);\n","1a025401":"RMSE1 = rmse(df['Involuntary'][-nobs:], df_forecast['InvolForecast'])\nprint(f'Involuntary VAR(5) RMSE: {RMSE1:.3f}')","4b514b60":"RMSE2 = rmse(df['Voluntary'][-nobs:], df_forecast['VolForecast'])\nprint(f'Voluntary VAR(5) RMSE: {RMSE2:.3f}')","7da78215":"### Thank you please upvoted if you find help","44edcdab":"### VAR (Vector autoregression)","a580b727":"## Forecasting values","2630b168":"## Import Required Library","bb113235":"###  Autocorrelation plot","c0b9e0eb":"###  Load the Dataset","d5e9e5f9":"## Model part","006ecba5":"## Data Visualization","a558b99f":"## Aggregate the dataset","79fea206":"## Model Summary"}}