{"cell_type":{"f2b9c253":"code","5b95ed5c":"code","25188764":"code","9ff3ac25":"code","5f4e6b5d":"code","8984b32a":"code","e4302e44":"code","9f567187":"code","2a94fb14":"code","ee6a7cbd":"code","09dbf252":"code","578843b7":"code","e24f5bae":"code","48157336":"code","0b42794d":"code","9d16fefd":"code","ee1fe029":"code","ca0376bc":"code","1a9e1892":"code","31ab42c7":"code","c309f789":"code","2fc8ddad":"code","a1fc7fe5":"code","5ed6b938":"code","1c6a3811":"markdown","f6fe87ef":"markdown","efe82ef7":"markdown","f1b66d33":"markdown","3fa7d668":"markdown","8e417738":"markdown","69d4917f":"markdown","6135b860":"markdown","130ea81a":"markdown","529d624c":"markdown","44b18fde":"markdown"},"source":{"f2b9c253":"# Importing packages\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n","5b95ed5c":"# After uploading the file, we are able to see the name of the file saved as \"World_Happiness_2015_2017.csv\"\n# Use pd.read_csv() to read the file and assign it to variable call \"data\"\ndata = pd.read_csv('..\/input\/world-happiness\/World_Happiness_2015_2017.csv')\n\n# We then use data.head() to see the first 5 rows of data\ndata.head()","25188764":"# Then what I do next is look into shape using data.shape(). This will tell me how many rows and columns there are.\ndata.shape","9ff3ac25":"# Now lets see data types using data.dtypes\ndata.dtypes","5f4e6b5d":"# Now lets change the data type of Year from int to float \ndata['Year'] = data['Year'].astype('float')\n\n# Now let's check if we did it right\ndata.dtypes","8984b32a":"# Have a look at data\ndata.head()","e4302e44":"# Yikes! Year in decimals! Let's change it back to int!\ndata['Year'] = data['Year'].astype('int')","9f567187":"# Lets calculate the number of null values\ndata.isnull().sum()","2a94fb14":"g = sns.pairplot(data)\ng.fig.suptitle('FacetGrid plot', fontsize = 20)\ng.fig.subplots_adjust(top= 0.9);","ee6a7cbd":"# Creating a list of attributes we want (just copy the column name)\necon_happiness = ['Happiness Score','Economy (GDP per Capita)']\n\n# Creating a dataframe that only contains these attributes\necon_corr = data[econ_happiness]\n\n# Finding correlation\necon_corr.corr()","09dbf252":"sns.regplot(data = econ_corr, x = 'Economy (GDP per Capita)', y = 'Happiness Score').set_title(\"Correlation graph for Happiness score vs Economy\")","578843b7":"data.head()","e24f5bae":"#Creating correlation dataframe for happiness score and family\n\nFamily_Happiness = ['Happiness Score', 'Family']\nFamily_corr = data[Family_Happiness]\nFamily_corr.corr()","48157336":"#Plotting happiness score and family using linear regression\n\nsns.regplot(data = Family_corr, x='Family', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Family')","0b42794d":"#Creating R and R Squared for Happiness Score and Family\n\nR = np.array(Family_corr.corr())\nR2 = np.array(Family_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","9d16fefd":"#Creating correlation dataframe for happiness score and health\n\nHealth_Happiness = ['Happiness Score', 'Health (Life Expectancy)']\nHealth_corr = data[Health_Happiness]\nHealth_corr.corr()","ee1fe029":"#Plotting happiness score and health using linear regression\n\nsns.regplot(data = Health_corr, x='Health (Life Expectancy)', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Health')","ca0376bc":"#Creating R and R Squared for Happiness Score and Health\n\nR = np.array(Health_corr.corr())\nR2 = np.array(Health_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","1a9e1892":"#Creating correlation dataframe for happiness score and freedom\n\nFreedom_Happiness = ['Happiness Score', 'Freedom']\nFreedom_corr = data[Freedom_Happiness]\nFreedom_corr.corr()\n\n#Plotting happiness score and freedom using linear regression\n\nsns.regplot(data = Freedom_corr, x='Freedom', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Freedom')\n\n#Creating R and R Squared for Happiness Score and Freedom\n\nR = np.array(Freedom_corr.corr())\nR2 = np.array(Freedom_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","31ab42c7":"#Creating correlation dataframe for happiness score and trust\n\ntrust_Happiness = ['Happiness Score', 'Trust (Government Corruption)']\ntrust_corr = data[trust_Happiness]\ntrust_corr.corr()\n\n#Plotting happiness score and trust using linear regression\n\nsns.regplot(data = trust_corr, x='Trust (Government Corruption)', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Trust')\n\n#Creating R and R Squared for Happiness Score and trust\n\nR = np.array(trust_corr.corr())\nR2 = np.array(trust_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","c309f789":"#Creating correlation dataframe for happiness score and Generosity\n\nGenerosity_Happiness = ['Happiness Score', 'Generosity']\nGenerosity_corr = data[Generosity_Happiness]\nGenerosity_corr.corr()\n\n#Plotting happiness score and Generosity using linear regression\n\nsns.regplot(data = Generosity_corr, x='Generosity', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Generosity')\n\n#Creating R and R Squared for Happiness Score and Generosity\n\nR = np.array(Generosity_corr.corr())\nR2 = np.array(Generosity_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","2fc8ddad":"#Creating correlation dataframe for happiness score and Dystopia Residual\n\nDystopia_Residual_Happiness = ['Happiness Score', 'Dystopia Residual']\nDystopia_Residual_corr = data[Dystopia_Residual_Happiness]\nDystopia_Residual_corr.corr()\n\n#Plotting happiness score and Dystopia Residual using linear regression\n\nsns.regplot(data = Dystopia_Residual_corr, x='Dystopia Residual', y='Happiness Score').set_title('Correlation Graph for Happiness score vs. Dystopia Residual')\n\n#Creating R and R Squared for Happiness Score and Dystopia Residual\n\nR = np.array(Dystopia_Residual_corr.corr())\nR2 = np.array(Dystopia_Residual_corr.corr()**2)\n\nprint('The data shows we have an R value of: ' + str(R[1]) + ' and and R2 value of ' + str(R2[1]))","a1fc7fe5":"# Creating a correlation matrix for R values\n\nall_data = ['Happiness Score', 'Economy (GDP per Capita)', 'Family', \t'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)', 'Generosity', 'Dystopia Residual']\nall_data_dataframe = data[all_data]\nsns.heatmap(all_data_dataframe.corr(), annot=True).set_title(\"R values for 7 Happiness attributes\")","5ed6b938":"# Creating a correlation matrix for R2 values\n\nall_data = ['Happiness Score', 'Economy (GDP per Capita)', 'Family', \t'Health (Life Expectancy)', 'Freedom', 'Trust (Government Corruption)', 'Generosity', 'Dystopia Residual']\nall_data_dataframe = data[all_data]\nsns.heatmap(all_data_dataframe.corr()**2, annot=True).set_title(\"R2 values for 7 Happiness attributes\")","1c6a3811":"### Looking into null values. There are numerous way you can deal with null, NaN or unknown values.\n- Omitting rows with null\/NaN values\n  * This helps our output to be more robust and accurate\n  * However this should only be done when we have sufficient data. If we have more than 50% NaN values, we may not be able to omit the affected rows.\n- Replace these NaN and null values with mean or median\n * This saves us the worry for loss of information\n * This does increase our data variance and bias\n\nTo identify null values, we use **data.isnull().sum()**\n- isnull() returns boolean (True or False). Is this value null? Yes or No?\n- sum() calculate the number of True\n- For this practice I have personally picked one dataset with no null value. So you should see 0 for each column.","f6fe87ef":"## Explanation of packages (feel free to skip if you are familiar)\n### Pandas\nPandas works great on tabular (presented in tables or columns) data. These data can be merged, manipulated, reshaped and combined in just a few lines of code. \n\n### Numpy\nNumpy works specifically on [N-dimensional arrays](https:\/\/www.w3resource.com\/numpy\/ndarray\/index.php).  \n\n### Matplotlib\nLibrary for creating static, animated, and interactive visualizations in Python.\n- I will describe matplotlib as a manual car.\n\n### Seaborn\nSeaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics. In short, it allows you to make quick plot with just a line of code and you do not need to worry about customisation of plots (eg: working with colour palette). We will be using Seaborn for most of our plots and do feel free to use matplotlib if you are comfortable with that. I usually use matplotlib when I need to customise the plot to my flavor. \n- I will describe seaborn as an auto car.","efe82ef7":"## What do we see here?\nI need you to take 1-2 mins to just look at the plot. It's messy at first but you will get it.\n\nWe see two types of plot. \n- Histograms\n * Take some time to look at the x axis and y axis of the histogram. There are the same! This shows the distribution of each attribute.\n- Scatter plot\n * This shows the relationship between 2 attributes. We can see a strong linear correlation between Happiness Rank and Happiness Score. That is because the rank is determined by the score. \n\nWhat we are interested in finding out is the correlation between happiness score and each attribute. From the plot if we look at the second column from the left (Happiness score on x-axis), we do notice that econimic, family and health have positive linear correlation. Well, the truth is what you see may be different from what others see. We need to prove it through some form of numeric values and this tutorial will be focused on that.","f1b66d33":"![alt text](https:\/\/cdn.newsbook.com.mt\/wp-content\/uploads\/2019\/03\/0f40cb07fbf640d883755f420e91f6ec.jpg)\n\n# Introduction \n\n### Welcome\nI will like to take this opportunity to thank you for taking the initiative to work on your learning. Online courses and lectures do a great job in feeding you valuable knowledge but do you actually understand? If you are the person who read through a math textbook without lifting a pen, you are not alone! People tend to assume they know something but the only way to prove it is applying. In this walkthrough I will guide you and explain it to you as much as possible. If you still have any question please message me or drop the question on discord. This is not a perfect notebook. There may be flaws or errors and I do apologise beforehand. Kindly let me know and I will fix it immediately.\n\n### Context \nThis dataset is obtained from [Kaggle](https:\/\/www.kaggle.com\/unsdsn\/world-happiness). I have modified the data to contain only data from 2015 to 2017. This report ranks 155 countries by their happiness level through 6 indicators:\n\n- economic production\n- social support\n- life expectancy \n- freedom \n- absence of corruption\n- generosity\n\nThe last indicator is dystopia residual. Dystopia residual is \"the Dystopia Happiness Score(1.85) + the Residual value or the unexplained value for each country\".  Dystopia is a made up country that has the world's least happiest people. This made up country is high in corruption, low in average income, employment, etc. Dystopia residual is used as a benchmark and should be used side-by-side with the happiness score. \n- Low dystopia residual = low level of happiness \n- high dystopia residual = high level of happiness.\n\n### Understanding the column data\n- Country\n- Happiness rank \n- Happiness score \n * This is obtained from a sample of population. The survey-taker asked the respondent to rate their happiness from 1 to 10. \n- Economic (GDP per cap)\n * Extend of GDP that contributes to the happiness score\n- Family\n * To what extend does family contribute to the happiness score \n- Health\n * Extend of health (life expectancy) contribute to the happiness score \n- Freedom\n * Extend of freedom that contribute to happiness. The freedom here represents the freedom of speech, freedom to pursue what we want, etc\n- Trust (Government corruption)\n * Extend of trust with regards to government corruption that contribute to happiness score \n- Generosity \n * Extend of generosity that contribute to happiness score \n- dystopia residual\n- Year\n\n#### Do note:\n$ Happiness Score = Economic (GDP per cap) + Family + Health + Freedom + Trust + Generosity + Dystopia Residual $\n\n## Let's get started!","3fa7d668":"## What do we see here?\n- Before we interpret the result we need to ask ourselves how high should the correlation coefficient be to be significant. How close to -1 or 1? For this purpose let me introduce you to $R^2$!\n- Why is $R^2$ better than R?\n * Interpretation is easy.\n * For this exercise we realise that the $R^2$ value is 0.617. This tells us that 61.7% of variation can be explained by the relationship between happiness score and Economy. \n\n ![alt text](https:\/\/cdn.guff.com\/site_1\/media\/21000\/20041\/items\/c26faf8ac4163c7d0ceac1c8.jpg)\n   * **House Party conversation: What does R = 0.785 tells you?** \n     * **You** : Ummm it's closer to 1? \n     * **Kian**: $R^2$ tells you much more info. What is the difference between R = 0.5 and R = 0.7?\n     * **You**: I don't care! I am not a...\n     * **Kian**: It doesn't tell you much. But the $R^2$ values for them are 0.25 and 0.49 respectively which means R = 0.7 is twice as good as R = 0.5.\n     * **You**: *finding dropped jaws*\n\nNow that I got your attention, let's move on with charting. ","8e417738":"# Exercise for you\n- I will like you to tell me the correlation coefficient (R and $R^2$) for the other 6 attributes and plot a regression plot for each of them. (Advance: Feel free to use correlation matrix)\nThe 6 attributes you need to work on are:\n1. Family\n2. Health\n3. Freedom\n4. Trust (Government corruption)\n5. Generosity\n6. Dystopia residual\n\n- I need you to create a summary too and explain what you see. Words are important and needless to say is the key skill that will get you that job you want. ","69d4917f":"### Looking into data.shape() to see rows and columns\n- We should be able to see (470,11) as output. 470 represents number of rows while 11 represents number of columns.\n- We then use data.dtypes to identify the type for each column. Type can come in many form: str, int, float, object, etc. \n- The main purpose for this is that we will need to change the type if we want to manipulate data. For instance if my happiness ranking is a string type, I may have issue adding things up or perform statistical analysis on it. I will need to change it to int. This can be done using pandas.DataFrame.astype(). We will change the year column from int to float in the following exercise (Reason: just for you to practise. We will change back to Int after that)\n","6135b860":"## Next up! Plotting!\n- Here, we will want to see the relationship among attributes. My favourite way to visualise that is through seaborn's pairplot.\n- This can be done using sns.pairplot(). \n * I then adjust the layout to include a title call \"FacetGrid plot\", with fontsize of 20. I use adjust to adjust the spacing of margin and plot. You can experiment the number to your favor.\n * Note: If you are using dark theme on google colab you may need to change to light in order to see the axis name. ","130ea81a":"## Regression plot\nFor regression plot you can just use sns.regplot and input in 3 components.\n1. Data\n2. What to put on x axis\n3. What to put on y axis\n\nWe then set a title using set_title('blah blah blah')","529d624c":"## Correlation between Happiness score and economic \n\n### What I plan to do:\n- Assign the required attribute as a list and assign that to a variable\n- Use .corr() to find correlation. \n * If you look at the [documentation](https:\/\/pandas.pydata.org\/pandas-docs\/stable\/reference\/api\/pandas.DataFrame.corr.html), you will notice the default test used is pearson. Besides Pearson distribution, you get to choose between Kendall and Spearman.\n\n### Pearson distribution\nPearson's correlation is a measure of the linear relationship between two continuous random variables. A perfect positive linear correlation will be 1. If value on x increases, value of y increases. A perfect negative correlation is -1. If X increases, Y decrease. Before we run any stats model we need to look into the assumptions.\n#### Assumptions for Pearson\n- Each variable needs to be continuous and not discrete. Continuous values have decimals and has a scale. Things like weight and height are continuous (10.02 KG, 1.002 cm). Decrete are fix numbers. Things like I saw 2 eggs on the table or number of visits to the doctor (1,2,3,etc). No such thing as I saw 3.42 eggs on the table or I have visited the doctor 4.3 times this year.\n- Next is related pair. Related pairs refers to the pairs of variables. Each participant or observation should have a pair of values. So if the correlation was between GPA and SAT score, then each observation used should have both a GPA and a SAT value. Using this example I can only include Peter, Tom and Sam into the sample if they have both GPA and SAT score. If Sam only has GPA, I can't use Pearson.\n- No outliers. Absence of outliers refers to not having outliers in either variable. Having an outlier can skew the results of the correlation by pulling the line of best fit formed by the correlation too far in one direction or another.  Typically, an outlier is defined as a value that is 3.29 standard deviations from the mean,or a standardized value of less than \u00b13.29.\n- Linearity and homoscedasticity refer to the shape of the values formed by the scatterplot. For linearity, a \u201cstraight line\u201d relationship between the variable should be formed.  If a line were to be drawn between all the dots going from left to right, the line should be straight and not curved. Homoscedasticity refers to the distance between the points to that straight line. The shape of the scatterplot should be tube-like in shape. If the shape is cone-like, then homoskedasticity would not be met. \n\nCredit to [S.SWAIN](https:\/\/www.researchgate.net\/profile\/S_Swain2) from Researchgate that did a wonderful explanation! \n\nFor this practice, we will just work with Pearson.","44b18fde":"Summary:\n\nTop attributes that contribute to Happiness:\n\n1. Economy (R=0.79, R2=0.62)\n2. Health (R=0.75, R2=0.56)\n3. Family (R=0.64, R2=0.41)\n4. Freedom (R=0.56, R2=0.31)\n5. Dystopia Residual (R=0.49, R2=0.24)\n6. Trust in government (R=0.28, R2=0.08)\n7. Generosity (R=0.22, R2=0.049)\n\n\nDiscussion:\n\nFrom the data we can see that the three most important attributes that impact happiness are **economy**, **health**, and **family**. It could be speculated that countries with higher GDP have more resources that contribute to a higher quality of life. Additionally, countries with a higher GDP have more resources to invest in healthcare systems which would allow individuals to live a healthier, happier life.\n\n"}}