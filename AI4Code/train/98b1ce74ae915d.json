{"cell_type":{"0e9a8d5a":"code","5a3279eb":"code","e1b9a5b3":"code","bf03a0a6":"code","d8974f4b":"code","9f51db43":"code","187b3a38":"code","2d9198c4":"code","812b5363":"code","1a8a997f":"code","18665696":"code","2453c1ae":"code","8cb9149c":"code","66d44449":"code","31b20604":"code","f965406a":"code","4f93ec1c":"code","1139e5ff":"code","0419442f":"code","2d2e6bd2":"code","f225c682":"code","a69065c9":"code","93c42b47":"code","53f99fe5":"code","fda7a559":"code","dfef3c8d":"code","441148c1":"code","b691aaab":"code","4cca1a1a":"code","fecaa535":"code","a6fd7778":"code","9005de49":"code","de4a034f":"code","60ac3d79":"code","e6540ac2":"code","5c0187d9":"code","6d464222":"code","0c817e01":"code","a59ad555":"code","cf36350a":"code","d58e79cd":"code","ec684701":"code","e87841ca":"code","2c0e07fe":"code","984f9ff5":"code","de125bbf":"code","0d333945":"code","e5965133":"code","282bc292":"code","7744cfa8":"code","6514382b":"code","fc9d73ee":"code","020eaf4c":"markdown","56b1f653":"markdown","44db0e66":"markdown","909b01d4":"markdown","67917331":"markdown","872472ae":"markdown","89b6048c":"markdown","a734d565":"markdown","3b8a3f6f":"markdown","5553f449":"markdown","31ec3b9c":"markdown","bc81e134":"markdown","e445b8e7":"markdown"},"source":{"0e9a8d5a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a3279eb":"import pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","e1b9a5b3":"df = pd.read_csv('..\/input\/training\/titanic_train.csv')","bf03a0a6":"df.head(10)","d8974f4b":"df.info()","9f51db43":"df.isnull().sum()","187b3a38":"df.duplicated().sum()","2d9198c4":"df.columns.tolist()","812b5363":"df=df[['PassengerId',\n 'Pclass',\n 'Name',\n 'Sex',\n 'Age',\n 'SibSp',\n 'Parch',\n 'Ticket',\n 'Fare',\n 'Cabin',\n 'Embarked','Survived']]","1a8a997f":"df[df.columns].corr()['Survived']","18665696":"sns.factorplot('Survived',data=df,kind='count')","2453c1ae":"df['Pclass'].unique()","8cb9149c":"df['Pclass'].value_counts()","66d44449":"sns.factorplot('Pclass',data=df,kind='count')","31b20604":"sns.factorplot(x='Pclass',y='Survived',data=df,kind='bar',hue = 'Sex')","f965406a":"#Converting 1,2,3 to string because ml algos sees 1<2<3\ndf['Pclass']=df['Pclass'].replace( 1 , \"FC\") \ndf['Pclass']=df['Pclass'].replace( 2 , \"SC\") \ndf['Pclass']=df['Pclass'].replace( 3 , \"TC\") ","4f93ec1c":"# Has no null values and not needed to perform future predictions as name column is not related to target variable (Survived) ","1139e5ff":"df['Sex'].unique()","0419442f":"df['Sex'].value_counts()","2d2e6bd2":"df['Sex'].value_counts().plot(kind = 'pie')","f225c682":"pd.crosstab(df['Survived'],df['Sex'])","a69065c9":"sns.factorplot(x='Sex',y='Survived',data=df,kind='bar')","93c42b47":"df['Age'].isnull().sum()","53f99fe5":"df['Age'].describe().to_frame()","fda7a559":" df.hist(column='Age',color = \"green\")","dfef3c8d":" sns.boxplot(x = 'Age', data = df)","441148c1":"df['Age'].dropna().quantile(np.arange(0,1.1,.1)).to_frame()","b691aaab":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(df['Age'], df['Age'])\nplt.show()","4cca1a1a":"df[\"Age\"] = np.where(df[\"Age\"] >60,60,df['Age'])","fecaa535":"df['Age'].dropna().quantile(np.arange(0,1.1,.1)).to_frame()","a6fd7778":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(df['Age'], df['Age'])\nplt.show()","9005de49":"df['Age'].isnull().sum()","de4a034f":"df.groupby(['Pclass', 'Sex'])['Age'].median().to_frame()","60ac3d79":"df['Age']= np.where(df['Age'].isnull() & df['Pclass']== 'FC', 37 , df['Age'])\ndf['Age']= np.where(df['Age'].isnull() & df['Pclass']== 'SC', 29 , df['Age'])\ndf['Age']= np.where(df['Age'].isnull() & df['Pclass']== 'FC', 22.5 , df['Age'])","e6540ac2":"df.hist(column='Age',color = \"orange\")","5c0187d9":"df['SibSp'].describe()","6d464222":"sns.boxplot(x='SibSp',data=df, color = \"orange\")","0c817e01":"df['SibSp'].describe()","a59ad555":"sns.factorplot('Parch',data=df,kind='count')","cf36350a":"df['Total_relatives'] = df['SibSp'] + df['Parch']","d58e79cd":"# not important for making predictions","ec684701":"df['Fare'].describe()","e87841ca":"df['Fare'].dropna().quantile(np.arange(0,1.1,.1)).to_frame()","2c0e07fe":"df['Fare'].dropna().quantile([.92, .96, .98, .99, 1]).to_frame()","984f9ff5":"fig, ax = plt.subplots(figsize=(12,6))\nax.scatter(df['Fare'], df['Fare'])\nplt.show()","de125bbf":"df[\"Fare\"] = np.where(df[\"Fare\"] >250, 250 , df['Fare'])","0d333945":"df['Fare'].dropna().quantile([.92, .96, .98, 1]).to_frame()","e5965133":"df['Fare'].isnull().sum()","282bc292":"df['Embarked'].value_counts()","7744cfa8":"# Embarked is not important for predicting the survival of the person","6514382b":"df.drop(['Embarked','Cabin','Ticket','PassengerId','Name'], axis = 1, inplace=True)","fc9d73ee":"df.head()","020eaf4c":"**Sex**","56b1f653":"**Dropping not necessary columns**","44db0e66":"**Fare**","909b01d4":"**Here we observe females survived more than males**","67917331":"**Ticket**","872472ae":"**Pclass**","89b6048c":"**Survived**","a734d565":"**Embarked**","3b8a3f6f":"**SibSp**","5553f449":"**will combine Parch and SibSp as they both serve the same purpose**","31ec3b9c":"**Parch**","bc81e134":"**Name**","e445b8e7":"**Age**"}}