{"cell_type":{"2df20e50":"code","bfdef20b":"code","a71b2153":"code","e1b6390a":"code","2560ccc7":"code","83c03cb2":"code","c3191b1d":"code","06edcff8":"code","035645d9":"code","b2e731a1":"code","67f303e3":"code","25f36018":"code","6d5397b1":"code","0c83cf75":"code","653220c5":"code","8e3ec490":"code","00d37be0":"code","090ed209":"code","34aadcbc":"code","adc81c37":"code","6c614351":"code","edce2d89":"code","79163f80":"code","23a8b97a":"code","ef71bec6":"code","ad39e15e":"code","db6a537a":"code","301cd047":"code","f74bf49d":"code","7414c3c5":"code","0e8cd03a":"code","139c0920":"code","87a75167":"code","f7abedc7":"code","571e7686":"code","7b2d32fe":"code","dd83fcb5":"markdown","6a99bbc7":"markdown","196f5d58":"markdown","60886265":"markdown","f71b70cf":"markdown","5b95d261":"markdown","d8da8660":"markdown","f482a720":"markdown","d21d0cd0":"markdown","cddb714f":"markdown","3bbea4c9":"markdown","a41057e9":"markdown","a86f48b5":"markdown","ac887e9e":"markdown","db2d096b":"markdown","1b42f1d3":"markdown","4c962a6a":"markdown","7bab2a56":"markdown","1ea333bf":"markdown","83973552":"markdown","db8b35e2":"markdown","0422ce56":"markdown","a49985d2":"markdown","0022197b":"markdown","851fbf10":"markdown","090bfbe9":"markdown","6ffd6339":"markdown","10dd00c6":"markdown","96a8826f":"markdown","014b9121":"markdown","23e0ee8c":"markdown","100a0d1e":"markdown","e2c96ed5":"markdown","462baf2f":"markdown","0b7898e0":"markdown","f88aa5d8":"markdown","5102c107":"markdown","72f16ec0":"markdown","ea77a478":"markdown","4390fb36":"markdown","717ee050":"markdown","7b71979a":"markdown","3f43acc5":"markdown","3ba6f1bc":"markdown","74b00b78":"markdown","0efe2e59":"markdown","6410d9ba":"markdown","1afca2cc":"markdown","3e5f8993":"markdown","2bf59547":"markdown","bc118c1a":"markdown","b9cefaa3":"markdown","239329ba":"markdown","e116c74f":"markdown","940764e1":"markdown","02a0a3d7":"markdown","a884326b":"markdown","282ebc38":"markdown","f1a4cc34":"markdown","b48686bb":"markdown","469965d4":"markdown","1f7eee9c":"markdown","38b4a7c6":"markdown","3ff03d61":"markdown","4ff07c79":"markdown"},"source":{"2df20e50":"import gc\nimport os\nimport time\nimport logging\nimport datetime\nimport warnings\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport xgboost as xgb\nimport lightgbm as lgb\nfrom scipy import stats\nfrom tqdm import tqdm_notebook\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import explained_variance_score","bfdef20b":"test_path = '..\/input\/LANL-Earthquake-Prediction\/test'\nsubmission_path = '..\/input\/LANL-Earthquake-Prediction\/sample_submission.csv'\ntrain_path = '..\/input\/LANL-Earthquake-Prediction\/train.csv'","a71b2153":"%%time\ntrain_df = pd.read_csv(train_path,\n                       dtype={'acoustic_data': np.int16, 'time_to_failure': np.float64})","e1b6390a":"train_df.head()","2560ccc7":"train_df.shape","83c03cb2":"pd.options.display.precision = 11\ntrain_df.head()","c3191b1d":"sample_test_df = pd.read_csv(test_path + \"\/seg_00030f.csv\")\nsample_test_df","06edcff8":"fig, ax1 = plt.subplots(figsize=(16, 8))\n\nplt.title(\"Xu h\u01b0\u1edbng c\u1ee7a acoustic_data v\u00e0 time_to_failure trong 1% d\u1eef li\u1ec7u (m\u1ed7i \u0111i\u1ec3m c\u00e1ch nhau 100 b\u01b0\u1edbc nh\u1ea3y)\")\nplt.plot(train_df.acoustic_data.values[::100], color='b')\nax1.set_ylabel('acoustic_data', color='b')\nplt.legend(['acoustic_data'])\n\nax2 = ax1.twinx()\nplt.plot(train_df.time_to_failure.values[::100], color='r')\nax2.set_ylabel('time_to_failure', color='r')\nplt.legend(['time_to_failure'], loc=(0.875, 0.9))\n","035645d9":"fig, ax = plt.subplots(2,1, figsize=(20,12))\nax[0].plot(train_df.index.values[:7500000], train_df.time_to_failure.values[:7500000], c=\"red\")\nax[0].set_title(\"\u0110\u1ed3 th\u1ecb c\u1ee7a time_to_failure trong 7.5 tri\u1ec7u h\u00e0ng \u0111\u1ea7u ti\u00ean\")\nax[0].set_ylabel(\"time_to_failure (ms)\")\n\nax[1].plot(train_df.index.values[:7500000], train_df.acoustic_data.values[:7500000], c=\"green\")\nax[1].set_title(\"\u0110\u1ed3 th\u1ecb c\u1ee7a acoustic_data trong 7.5 tri\u1ec7u h\u00e0ng \u0111\u1ea7u ti\u00ean\")\nax[1].set_ylabel(\"acoustic_data\")","b2e731a1":"plt.subplots(figsize=(25,8))\n\nplt.plot(train_df.index.values[:150000], train_df.time_to_failure.values[:150000], c=\"red\")\nplt.ylabel(\"Time_to_failure (ms)\")\nplt.title(\"S\u1ef1 thay \u0111\u1ed5i c\u1ee7a time_to_failure trong 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\u1ea7u\")\nplt.show()","67f303e3":"fig, ax = plt.subplots(2,1,figsize=(25,10))\n\nax[0].plot(train_df.index.values[0:149999], np.diff(train_df.time_to_failure.values[0:150000]), c=\"r\")\nax[0].set_ylabel(\"\u0110\u1ed9 l\u1edbn c\u00e1c b\u01b0\u1edbc gi\u1ea3m\")\nax[0].set_title(\"Ch\u00eanh l\u1ec7ch \u0111\u1ed9 l\u1edbn gi\u1eefa c\u00e1c gi\u00e1 tr\u1ecb time_to_failure\");\n\nax[1].plot(train_df.index.values[0:4000], train_df.time_to_failure.values[0:4000], c=\"r\")\nax[1].set_ylabel(\"time_to_failure (ms)\")\nax[1].set_title(\"Xu h\u01b0\u1edbng c\u1ee7a time_to_failure trong m\u1ed9t \u0111\u01b0\u1eddng ngang\");","25f36018":"train_7m5 = train_df[:7500000]\ntrain_7m5.describe()","6d5397b1":"train_7m5['acoustic_data'].hist(bins=30, range = [-15,15], align='mid')\nplt.title(\"M\u1eadt \u0111\u1ed9 c\u1ee7a acoustic_data trong 7500000 gi\u00e1 tr\u1ecb \u0111\u1ea7u\")\nplt.xlabel('acoustic data')\nplt.ylabel('examples')\nplt.show()","0c83cf75":"nameOfFileTest = ['seg_0012b5.csv', 'seg_00030f.csv', 'seg_00184e.csv']\nfor name in nameOfFileTest:\n    plt.subplots(figsize=(16, 8))\n    seg = pd.read_csv(test_path  + '\/' + name)\n    plt.plot(seg.acoustic_data.values, c=\"green\")\n    plt.ylabel(\"acoustic_data\")\n    plt.title(\"Test \" + name);\n    plt.show()\n","653220c5":"rows = 150000\nsegments = int(np.floor(train_df.shape[0] \/ rows))\nprint(\"S\u1ed1 l\u01b0\u1ee3ng segments l\u00e0: \", segments)","8e3ec490":"X_train = pd.DataFrame(index=range(segments), dtype=np.float64)\ny_train = pd.DataFrame(index=range(segments), dtype=np.float64, columns=['time_to_failure'])","00d37be0":"xc = pd.Series(seg['acoustic_data'].values)\ndef feature_generate(df, x, seg):\n    df.loc[seg, 'ave'] = x.mean() \n    df.loc[seg, 'std'] = x.std()  \n    df.loc[seg, 'max'] = x.max()\n    df.loc[seg, 'min'] = x.min()\n    df.loc[seg, 'sum'] = x.sum()\n    df.loc[seg, 'mad'] = x.mad()\n    df.loc[seg, 'skew'] = x.skew()\n    \n    df.loc[seg, 'abs_min'] = np.abs(x).min()\n    df.loc[seg, 'abs_max'] = np.abs(x).max()\n    df.loc[seg, 'abs_mean'] = np.abs(x).mean()\n    df.loc[seg, 'abs_std'] = np.abs(x).std()\n    \n    df.loc[seg, 'q01'] = np.quantile(x,0.01)\n    df.loc[seg, 'q05'] = np.quantile(x,0.05)\n    df.loc[seg, 'q95'] = np.quantile(x,0.95)\n    df.loc[seg, 'q99'] = np.quantile(x,0.99)\n    \n    df.loc[seg, 'abs_q01'] = np.quantile(np.abs(x), 0.01)\n    df.loc[seg, 'abs_q05'] = np.quantile(np.abs(x), 0.05)\n    df.loc[seg, 'abs_q95'] = np.quantile(np.abs(x), 0.95)\n    df.loc[seg, 'abs_q99'] = np.quantile(np.abs(x), 0.99)\n    \n    df.loc[seg, 'average_first_10000'] = x[:10000].mean()\n    df.loc[seg, 'average_last_10000']  =  x[-10000:].mean()\n    df.loc[seg, 'average_first_50000'] = x[:50000].mean()\n    df.loc[seg, 'average_last_50000'] = x[-50000:].mean()\n    \n    df.loc[seg, 'std_first_10000'] = x[:10000].std()\n    df.loc[seg, 'std_last_10000']  =  x[-10000:].std()\n    df.loc[seg, 'std_first_50000'] = x[:50000].std()\n    df.loc[seg, 'std_last_50000']  =  x[-50000:].std()\n    \n    df.loc[seg, 'std_first_10000'] = x[:10000].min()\n    df.loc[seg, 'std_last_10000']  =  x[-10000:].min()\n    df.loc[seg, 'std_first_50000'] = x[:50000].min()\n    df.loc[seg, 'std_last_50000']  =  x[-50000:].min()\n    \n    df.loc[seg, 'std_first_10000'] = x[:10000].max()\n    df.loc[seg, 'std_last_10000']  =  x[-10000:].max()\n    df.loc[seg, 'std_first_50000'] = x[:50000].max()\n    df.loc[seg, 'std_last_50000']  =  x[-50000:].max()\n    \n    df.loc[seg, '10q'] = np.percentile(x, 0.10)\n    df.loc[seg, '25q'] = np.percentile(x, 0.25)\n    df.loc[seg, '50q'] = np.percentile(x, 0.50)\n    df.loc[seg, '75q'] = np.percentile(x, 0.75)\n    df.loc[seg, '90q'] = np.percentile(x, 0.90)\n    \n    zc = np.fft.fft(xc)\n    realFFT = np.real(zc)\n    imagFFT = np.imag(zc)\n    df.loc[seg, 'Rmean'] = realFFT.mean()\n    df.loc[seg, 'Rstd'] = realFFT.std()\n    df.loc[seg, 'Rmax'] = realFFT.max()\n    df.loc[seg, 'Rmin'] = realFFT.min()\n    df.loc[seg, 'Imean'] = imagFFT.mean()\n    df.loc[seg, 'Istd'] = imagFFT.std()\n    df.loc[seg, 'Imax'] = imagFFT.max()\n    df.loc[seg, 'Imin'] = imagFFT.min()\n    df.loc[seg, 'Rmean_last_5000'] = realFFT[-5000:].mean()\n    df.loc[seg, 'Rstd__last_5000'] = realFFT[-5000:].std()\n    df.loc[seg, 'Rmax_last_5000'] = realFFT[-5000:].max()\n    df.loc[seg, 'Rmin_last_5000'] = realFFT[-5000:].min()\n    df.loc[seg, 'Rmean_last_15000'] = realFFT[-15000:].mean()\n    df.loc[seg, 'Rstd_last_15000'] = realFFT[-15000:].std()\n    df.loc[seg, 'Rmax_last_15000'] = realFFT[-15000:].max()\n    df.loc[seg, 'Rmin_last_15000'] = realFFT[-15000:].min()\n    \n    for w in [10, 100, 1000, 10000]:\n        x_roll_abs_mean = x.abs().rolling(w).mean().dropna().values\n        x_roll_mean = x.rolling(w).mean().dropna().values\n        x_roll_std = x.rolling(w).std().dropna().values\n        x_roll_min = x.rolling(w).min().dropna().values\n        x_roll_max = x.rolling(w).max().dropna().values\n        \n        df.loc[seg, 'ave_roll_std_' + str(w)] = x_roll_std.mean()\n        df.loc[seg, 'std_roll_std_' + str(w)] = x_roll_std.std()\n        df.loc[seg, 'max_roll_std_' + str(w)] = x_roll_std.max()\n        df.loc[seg, 'min_roll_std_' + str(w)] = x_roll_std.min()\n        df.loc[seg, 'q01_roll_std_' + str(w)] = np.quantile(x_roll_std, 0.01)\n        df.loc[seg, 'q05_roll_std_' + str(w)] = np.quantile(x_roll_std, 0.05)\n        df.loc[seg, 'q10_roll_std_' + str(w)] = np.quantile(x_roll_std, 0.10)\n        df.loc[seg, 'q95_roll_std_' + str(w)] = np.quantile(x_roll_std, 0.95)\n        df.loc[seg, 'q99_roll_std_' + str(w)] = np.quantile(x_roll_std, 0.99)\n        \n        df.loc[seg, 'ave_roll_mean_' + str(w)] = x_roll_mean.mean()\n        df.loc[seg, 'std_roll_mean_' + str(w)] = x_roll_mean.std()\n        df.loc[seg, 'max_roll_mean_' + str(w)] = x_roll_mean.max()\n        df.loc[seg, 'min_roll_mean_' + str(w)] = x_roll_mean.min()\n        df.loc[seg, 'q05_roll_mean_' + str(w)] = np.quantile(x_roll_mean, 0.05)\n        df.loc[seg, 'q95_roll_mean_' + str(w)] = np.quantile(x_roll_mean, 0.95)\n        \n        df.loc[seg, 'ave_roll_abs_mean_' + str(w)] = x_roll_abs_mean.mean()\n        df.loc[seg, 'std_roll_abs_mean_' + str(w)] = x_roll_abs_mean.std()\n        df.loc[seg, 'q05_roll_abs_mean_' + str(w)] = np.quantile(x_roll_abs_mean, 0.05)\n        df.loc[seg, 'q95_roll_abs_mean_' + str(w)] = np.quantile(x_roll_abs_mean, 0.95)\n        \n        df.loc[seg, 'std_roll_min_' + str(w)] = x_roll_min.std()\n        df.loc[seg, 'max_roll_min_' + str(w)] = x_roll_min.max()\n        df.loc[seg, 'q05_roll_min_' + str(w)] = np.quantile(x_roll_min, 0.05)\n        df.loc[seg, 'q95_roll_min_' + str(w)] = np.quantile(x_roll_min, 0.95)\n\n        df.loc[seg, 'std_roll_max_' + str(w)] = x_roll_max.std()\n        df.loc[seg, 'min_roll_max_' + str(w)] = x_roll_max.min()\n        df.loc[seg, 'q05_roll_max_' + str(w)] = np.quantile(x_roll_max, 0.05)\n        df.loc[seg, 'q95_roll_max_' + str(w)] = np.quantile(x_roll_max, 0.95)\n    return df","090ed209":"for s in range(segments):\n    seg = train_df.iloc[s*150000:s*150000+150000]\n    x = pd.Series(seg['acoustic_data'].values)\n    y = seg['time_to_failure'].values[-1]\n    y_train.loc[s, 'time_to_failure'] = y\n    X_train = feature_generate(X_train,x,s)","34aadcbc":"X_train","adc81c37":"X_train.describe()","6c614351":"def plot_feature(feature, X=X_train):\n    fig, ax = plt.subplots(figsize=(20, 8)) \n    ax.set_xlabel(feature)\n    ax.set_ylabel('time_to_failure')\n    plt.title('{} - time_to_falure correlation'.format(feature), color='r')\n    plt.scatter(x = X[feature], y = y_train)","edce2d89":"for feature in X_train.columns:\n    plot_feature(feature)","79163f80":"\nX_train = X_train.drop(columns=['abs_min', 'abs_q01', 'q05_roll_abs_mean_10000', 'q95_roll_mean_10000', 'q05_roll_mean_10000', 'ave_roll_mean_10000','q05_roll_abs_mean_1000', \n                                'ave_roll_mean_1000', 'q05_roll_abs_mean_100', 'ave_roll_mean_100', 'min_roll_std_100', 'ave_roll_mean_10', \n                                'average_first_50000', 'average_last_50000', 'average_first_10000', 'average_last_10000', 'sum', 'ave'])","23a8b97a":"X_train","ef71bec6":"scaler = StandardScaler()\nscaler.fit(X_train)\nscaled_X_train = pd.DataFrame(scaler.transform(X_train), columns=X_train.columns)","ad39e15e":"scaled_X_train","db6a537a":"submission = pd.read_csv(submission_path, index_col='seg_id')\nX_test = pd.DataFrame(columns=scaled_X_train.columns, dtype=np.float64, index=submission.index)\nfor s in X_test.index:\n    seg = pd.read_csv(test_path + '\/' + s + '.csv')\n    x = pd.Series(seg['acoustic_data'].values)\n    X_test = feature_generate(X_test,x,s)","301cd047":"X_test = X_test.drop(columns=['abs_min', 'abs_q01', 'q05_roll_abs_mean_10000', 'q95_roll_mean_10000', 'q05_roll_mean_10000', 'ave_roll_mean_10000','q05_roll_abs_mean_1000', \n                                'ave_roll_mean_1000', 'q05_roll_abs_mean_100', 'ave_roll_mean_100', 'min_roll_std_100', 'ave_roll_mean_10', \n                                'average_first_50000', 'average_last_50000', 'average_first_10000', 'average_last_10000', 'sum', 'ave'])","f74bf49d":"X_test","7414c3c5":"scaled_X_test = pd.DataFrame(scaler.transform(X_test), columns=X_test.columns)","0e8cd03a":"scaled_X_test","139c0920":"from sklearn.svm import SVR\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import KFold\nimport re\nn_fold = 5\nfolds = KFold(n_splits=n_fold, shuffle=True, random_state=42)\nscaled_X_train = scaled_X_train.rename(columns = lambda x:re.sub('[^A-Za-z0-9_]+', '', x))\n\npredictions_svr = np.zeros(len(scaled_X_test))\n\nfor fold_, (train_idx, val_idx) in enumerate(folds.split(scaled_X_train,y_train.values)):\n    strLog = \"fold {}\".format(fold_)\n    print(strLog)\n    \n    X_tr, X_val = scaled_X_train.iloc[train_idx], scaled_X_train.iloc[val_idx]\n    y_tr, y_val = y_train.iloc[train_idx], y_train.iloc[val_idx]\n\n    model = SVR(kernel='rbf', C=1.0, epsilon=0.1, gamma='scale')\n    \n    model.fit(X_tr, y_tr)\n    \n    y_pred = model.predict(X_val)\n    mae = mean_absolute_error(y_val, y_pred)\n    print(\"MAE: \", mae)\n    predictions_svr += model.predict(scaled_X_test) \/ folds.n_splits","87a75167":"params = {'num_leaves': 51,\n         'min_data_in_leaf': 10, \n         'objective':'regression',\n         'max_depth': -1,\n         'learning_rate': 0.001,\n         \"boosting\": \"gbdt\",\n         \"feature_fraction\": 0.9,\n         \"bagging_freq\": 1,\n         \"bagging_fraction\": 0.9,\n         \"bagging_seed\": 42,\n         \"metric\": 'mae',\n         \"lambda_l1\": 0.1,\n         \"verbosity\": -1,\n         \"random_state\": 42}","f7abedc7":"from sklearn.model_selection import KFold\nimport re\nn_fold = 5\nfolds = KFold(n_splits=n_fold, shuffle=True, random_state=42)\nscaled_X_train = scaled_X_train.rename(columns = lambda x:re.sub('[^A-Za-z0-9_]+', '', x))\n\noof = np.zeros(len(scaled_X_train))\npredictions = np.zeros(len(scaled_X_test))\n\nfor fold_, (train_idx, val_idx) in enumerate(folds.split(scaled_X_train,y_train.values)):\n    strLog = \"fold {}\".format(fold_)\n    print(strLog)\n    \n    X_tr, X_val = scaled_X_train.iloc[train_idx], scaled_X_train.iloc[val_idx]\n    y_tr, y_val = y_train.iloc[train_idx], y_train.iloc[val_idx]\n\n    model = lgb.LGBMRegressor(**params, n_estimators = 10000, n_jobs = -1)\n    \n    model.fit(X_tr, y_tr, eval_set=[(X_tr, y_tr), (X_val, y_val)], eval_metric='mae',verbose=1000, early_stopping_rounds=500)\n    \n    oof[val_idx] = model.predict(X_val, num_iteration=model.best_iteration_)\n    predictions += model.predict(scaled_X_test, num_iteration=model.best_iteration_) \/ folds.n_splits","571e7686":"submission.time_to_failure = predictions\nsubmission.to_csv('submission.csv',index=True)","7b2d32fe":"submission.time_to_failure = predictions_svr\nsubmission.to_csv('submission_svr.csv',index=True)","dd83fcb5":"<a id=\"\"><\/a> <br>\n# 1. B\u00e0i to\u00e1n\n","6a99bbc7":"<p style=\"font-size:18px\"> C\u00f9ng xem l\u1ea1i X_train sau khi \u0111\u00e3 \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o th\u00eam c\u00e1c \u0111\u1eb7c tr\u01b0ng <\/p>","196f5d58":"## 2.1. \u0110\u1ecdc d\u1eef li\u1ec7u ","60886265":"<p style=\"font-size:18px\"> Gi\u1ed1ng nh\u01b0 v\u1edbi X_train, em c\u0169ng s\u1ebd chu\u1ea9n ho\u00e1 c\u00e1c gi\u00e1 tr\u1ecb c\u1ee7a X_test v\u1ec1 c\u00f9ng m\u1ed9t mi\u1ec1n gi\u00e1 tr\u1ecb b\u1eb1ng Standard Scaler <\/p>","f71b70cf":"<p style=\"font-size:18px\">\nD\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho vi\u1ec7c \u0111\u00e0o t\u1ea1o m\u00f4 h\u00ecnh g\u1ed3m 2 c\u1ed9t:<\/p>\n\n    \n1. `Acoustic_data`: <p style=\"font-size:18px\">l\u00e0 d\u1eef li\u1ec7u \u0111\u1ecba ch\u1ea5n (c\u01b0\u1eddng \u0111\u1ed9 s\u00f3ng thu \u0111\u01b0\u1ee3c t\u1eeb l\u00f2ng \u0111\u1ea5t) \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u01b0\u1edbi d\u1ea1ng ki\u1ec3u s\u1ed1 nguy\u00ean [int16] <\/p>\n2. `time_to_failure`: <p style=\"font-size:18px\">l\u00e0 th\u1eddi gian m\u00e0 tr\u1eadn \u0111\u1ed9ng \u0111\u1ea5t ti\u1ebfp theo s\u1ebd x\u1ea3y ra trong ph\u00f2ng th\u00ed nghi\u1ec7m (t\u00ednh b\u1eb1ng gi\u00e2y) \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u01b0\u1edbi ki\u1ec3u s\u1ed1 th\u1ef1c [float64] <\/p>\n\n\n\n`train.csv`: <p style=\"font-size:18px\"> Trong m\u1ed7i l\u1ea7n th\u1eed nghi\u1ec7m, d\u1eef li\u1ec7u \u0111\u1ecba ch\u1ea5n \u0111\u01b0\u1ee3c v\u00e0 th\u1eddi gian c\u00f2n l\u1ea1i tr\u01b0\u1edbc khi \u0111\u1ed9ng \u0111\u1ea5t x\u1ea3y ra \u0111\u01b0\u1ee3c \u0111o trong 0.0375s v\u1edbi t\u1ea7n s\u1ed1 \u1edf 4MHz do \u0111\u00f3 s\u1ebd c\u00f3 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u cho m\u1ed7i ph\u00e2n \u0111o\u1ea1n \u0111o (t\u1eeb \u0111\u00e2y em s\u1ebd g\u1ecdi l\u00e0 1 <i>segment<\/i> \u0111\u1ec3 kh\u00f4ng l\u00e0m ph\u1ee9c t\u1ea1p \u00fd \u0111\u1ecdc). File train l\u00e0 t\u1eadp h\u1ee3p g\u1ed3m 629145480 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi h\u01a1n 4194 segments.<\/p>\n\n<p style=\"font-size:18px\">\n    \n`test`:\n<p style=\"font-size:18px\">\nL\u00e0 m\u1ed9t folder g\u1ed3m nhi\u1ec1u file nh\u1ecf, m\u1ed7i file s\u1ebd l\u00e0 d\u1eef li\u1ec7u \u0111\u1ecba ch\u1ea5n c\u1ee7a 1 segment (g\u1ed3m 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u) <\/p>\n\n`sample_submission.csv`:\n<p style=\"font-size:18px\">\nL\u00e0 m\u1eabu file submit c\u1ee7a cu\u1ed9c thi <\/p>","5b95d261":"<p style=\"font-size:18px\"> D\u1ef1 b\u00e1o \u0111\u1ed9ng \u0111\u1ea5t l\u00e0 m\u1ed9t trong nh\u1eefng v\u1ea5n \u0111\u1ec1 quan tr\u1ecdng c\u1ee7a khoa h\u1ecdc v\u00ec nh\u1eefng h\u1eadu qu\u1ea3 t\u00e0n kh\u1ed1c c\u1ee7a ch\u00fang. Nh\u1eefng nghi\u00ean c\u1ee9u hi\u1ec7n nay v\u1ec1 v\u1ea5n \u0111\u1ec1 n\u00e0y s\u1ebd th\u01b0\u1eddng t\u1eadp trung v\u00e0o ba c\u00e2u h\u1ecfi: Khi n\u00e0o ?, \u1ede \u0111\u00e2u ? v\u00e0 Quy m\u00f4 nh\u01b0 th\u1ebf n\u00e0o ? <\/p>\n<p style=\"font-size:18px\"> Trong b\u00e0i to\u00e1n n\u00e0y, m\u1ee5c ti\u00eau c\u1ee7a ta l\u00e0 \u0111i d\u1ef1 \u0111o\u00e1n khi n\u00e0o \u0111\u1ed9ng \u0111\u1ea5t s\u1ebd x\u1ea3y ra. C\u1ee5 th\u1ec3 l\u00e0 d\u1ef1 \u0111o\u00e1n th\u1eddi gian c\u00f2n l\u1ea1i tr\u01b0\u1edbc khi c\u00e1c tr\u1eadn \u0111\u1ed9ng \u0111\u1ea5t trong ph\u00f2ng th\u00ed nghi\u1ec7m x\u1ea3y ra t\u1eeb d\u1eef li\u1ec7u \u0111\u1ecba ch\u1ea5n theo th\u1eddi gian th\u1ef1c. \u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i to\u00e1n h\u1ebft s\u1ee9c th\u1ef1c t\u1ebf, v\u00ec n\u1ebfu d\u1ef1 b\u00e1o \u0111\u01b0\u1ee3c c\u00e0ng s\u1edbm, c\u00e0ng ch\u00ednh x\u00e1c th\u00ec ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c nh\u1eefng c\u1ea3nh b\u00e1o \u0111\u1ec3 gi\u1ea3m thi\u1ec3u r\u1ee7i ro. <\/p>\n","d8da8660":"## 3.3. Ph\u00e2n t\u00edch time_to_failure trong 150000 gi\u00e1 tr\u1ecb \u0111\u1ea7u","f482a720":"<p style=\"font-size:18px\"> Bi\u1ec3u di\u1ec5n X_test <\/p>","d21d0cd0":"![image.png](attachment:3a2ac249-cf34-4da1-a994-791fdce0f5dd.png)","cddb714f":"<p style=\"font-size:18px\"> Do l\u01b0\u1ee3ng data qu\u00e1 l\u1edbn (h\u01a1n 600 tri\u1ec7u d\u00f2ng), v\u1eady n\u00ean em chia nh\u1ecf data th\u00e0nh c\u00e1c segments v\u1edbi size l\u00e0 150000 d\u00f2ng d\u1eef li\u1ec7u. \u0110i\u1ec1u n\u00e0y c\u0169ng ph\u00f9 h\u1ee3p khi hu\u1ea5n luy\u1ec7n v\u00e0 d\u1ef1 \u0111o\u00e1n v\u00ec \u0111\u1ed9 l\u1edbn c\u1ee7a m\u1ed9t file test c\u0169ng l\u00e0 150000 d\u00f2ng.<\/p>","3bbea4c9":"## 5.1. D\u1eef li\u1ec7u \u0111\u1ec3 train","a41057e9":"## 6.2. M\u00f4 h\u00ecnh SVR","a86f48b5":"<p style=\"font-size:18px\"> Em c\u0169ng s\u1ebd b\u1ecf \u0111i nh\u1eefng \u0111\u1eb7c tr\u01b0ng kh\u00f4ng d\u00f9ng \u0111\u01b0\u1ee3c nh\u01b0 X_train <\/p>","ac887e9e":"## 3.5. M\u00f4 t\u1ea3 m\u1ed9t v\u00e0i file d\u1eef li\u1ec7u test","db2d096b":"<p style=\"font-size:18px\"> K\u00edch c\u1ee1 c\u1ee7a train_df. B\u1ed9 d\u1eef li\u1ec7u c\u00f3 h\u01a1n 600 tri\u1ec7u d\u00f2ng v\u00e0 2 c\u1ed9t. \u0110\u00e2y l\u00e0 nh\u1eefng d\u1eef li\u1ec7u th\u00f4 thu th\u1eadp \u0111\u01b0\u1ee3c t\u1eeb c\u00e1c m\u00e1y trong ph\u00f2ng th\u00ed nghi\u1ec7m. Em s\u1ebd c\u1ea7n b\u01b0\u1edbc t\u1ea1o ra c\u00e1c feature t\u1eeb b\u1ed9 d\u1eef li\u1ec7u n\u00e0y \u0111\u1ec3 l\u00e0m d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n m\u00f4 h\u00ecnh <\/p>","1b42f1d3":"<p style=\"font-size:18px\"> M\u00f4 t\u1ea3 s\u01a1 l\u01b0\u1ee3c v\u1ec1 X_train. Sau khi xem qua, n\u1ebfu h\u00e0ng hay c\u1ed9t n\u00e0o thi\u1ebfu data ho\u1eb7c data kh\u00f4ng d\u00f9ng \u0111\u01b0\u1ee3c ta s\u1ebd drop \u0111i \u0111\u1ec3 tr\u00e1nh g\u00e2y nhi\u1ec5u m\u00f4 h\u00ecnh <\/p>","4c962a6a":"## 5.2. D\u1eef li\u1ec7u \u0111\u1ec3 test","7bab2a56":"<p style=\"font-size:18px\"> Ta c\u00f3 th\u1ec3 th\u1ea5y 1 file test s\u1ebd g\u1ed3m 150000 h\u00e0ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi 1 ph\u00e2n \u0111o\u1ea1n th\u1eed nghi\u1ec7m, nhi\u1ec7m v\u1ee5 c\u1ee7a ta l\u00e0 d\u1ef1 \u0111o\u00e1n 150000 m\u1ed1c th\u1eddi gian <b>time_to_failure<\/b> cho m\u1ed7i \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\u00f3 <\/p>\n","1ea333bf":"<a id=\"5\"><\/a> <br>\n# 5. Chu\u1ea9n b\u1ecb d\u1eef li\u1ec7u train v\u00e0 test","83973552":"<p style=\"font-size:18px\"> Em t\u1ea1o ra 1 data frame g\u1ed3m 7.5 tri\u1ec7u d\u00f2ng d\u1eef li\u1ec7u \u0111\u1ea7u ti\u00ean \u0111\u1ec3 quan s\u00e1t \u0111\u01b0\u1ee3c m\u1eadt \u0111\u1ed9 c\u0169ng nh\u01b0 m\u00f4 t\u1ea3 c\u1ee7a n\u00f3 b\u1eb1ng h\u00e0m describe() \u0111\u01b0\u1ee3c cung c\u1ea5p b\u1edfi pandas <\/p>\n","db8b35e2":"## 2.2. Bi\u1ec3u di\u1ec5n file train","0422ce56":"<p style=\"font-size:18px\"> X_train sau khi b\u1ecf c\u00e1c \u0111\u1eb7c tr\u01b0ng nhi\u1ec5u c\u00f2n l\u1ea1i 138 \u0111\u1eb7c tr\u01b0ng v\u00e0 4194 h\u00e0ng t\u01b0\u01a1ng \u1ee9ng 4194 segment. <\/p>","a49985d2":"### Nh\u1eadn x\u00e9t\n\n<p style=\"font-size:18px\"> Quan s\u00e1t trong 2 bi\u1ec3u \u0111\u1ed3 tr\u00ean ta c\u00f3 th\u1ec3 th\u1ea5y, tr\u01b0\u1edbc khi tr\u1eadn \u0111\u1ed9ng \u0111\u1ea5t x\u1ea3y ra (l\u00e0 kho\u1ea3ng th\u1eddi gian <b>time_to_failure<\/b> \u0111\u1ea1t 0) th\u00ec s\u1ebd c\u00f3 nh\u1eefng thay \u0111\u1ed5i l\u1edbn tr\u01b0\u1edbc \u0111\u00f3 \u1edf gi\u00e1 tr\u1ecb \u0111\u1ecba ch\u1ea5n <b>acoustic_data<\/b> v\u00e0 sau \u0111\u00f3 l\u00e0 m\u1ed9t kho\u1ea3ng th\u1eddi gian \u00edt bi\u1ebfn \u0111\u1ed9ng h\u01a1n b\u00ecnh th\u01b0\u1eddng <\/p>\n","0022197b":"## 2.3. Bi\u1ec3u di\u1ec5n file test","851fbf10":"<a id=\"2\"><\/a> <br>\n# 2. M\u00f4 t\u1ea3 d\u1eef li\u1ec7u\n","090bfbe9":"<p style=\"font-size:18px\"> Kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb X_train v\u00e0 y_train. Trong \u0111\u00f3 s\u1ed1 l\u01b0\u1ee3ng index l\u00e0 s\u1ed1 l\u01b0\u1ee3ng segments, y_train c\u00f3 1 c\u1ed9t d\u1eef li\u1ec7u l\u00e0 <i>time_to_failure<\/i> c\u00f2n \u0111\u1eb7c tr\u01b0ng c\u1ee7a X_train s\u1ebd \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o sau <\/p>","6ffd6339":"<a id=\"4\"><\/a> <br>\n# 4. Kh\u1edfi t\u1ea1o \u0111\u1eb7c tr\u01b0ng","10dd00c6":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> Do c\u00e1c \u0111\u1eb7c tr\u01b0ng \u0111ang \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi nh\u1eefng mi\u1ec1n gi\u00e1 tr\u1ecb kh\u00e1c nhau, v\u00ec v\u1eady em s\u1ebd chu\u1ea9n ho\u00e1 ch\u00fang v\u1ec1 c\u00f9ng 1 mi\u1ec1n gi\u00e1 tr\u1ecb. Vi\u1ec7c c\u00e1c d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n v\u00e0 test thu\u1ed9c c\u00f9ng m\u1ed9t mi\u1ec1n gi\u00e1 tr\u1ecb s\u1ebd t\u1ed1t h\u01a1n cho m\u00f4 h\u00ecnh trong vi\u1ec7c h\u1ecdc c\u0169ng nh\u01b0 vi\u1ec7c d\u1ef1 \u0111o\u00e1n.<\/p>\n<p style=\"font-size:18px\"> Em s\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n <b>Standard Scaler<\/b> \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y <\/p>","96a8826f":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> Ta c\u00f3 th\u1ec3 th\u1ea5y m\u1ed7i khi <b>time_to_failure<\/b> tr\u1edf v\u1ec1 0 \u0111\u1ed3ng ngh\u0129a v\u1edbi x\u1ea3y ra \u0111\u1ed9ng \u0111\u1ea5t th\u00ec gi\u00e1 tr\u1ecb <b>acoustic_data<\/b> c\u0169ng c\u00f3 s\u1ef1 thay \u0111\u1ed5i l\u1edbn ngay tr\u01b0\u1edbc \u0111\u00f3. <br>M\u1ed9t \u0111i\u1ec3m \u0111\u1eb7c bi\u1ec7t n\u1eefa, khi nh\u00ecn v\u00e0o bi\u1ec3u \u0111\u1ed3 1% data n\u00e0y (s\u1ebd l\u1ea5y c\u00e1c gi\u00e1 tr\u1ecb c\u00e1ch nhau 100 b\u01b0\u1edbc nh\u1ea3y) th\u00ec ta c\u00f3 th\u1ec3 ph\u00e1n \u0111o\u00e1n r\u1eb1ng b\u1ed9 d\u1eef li\u1ec7u train c\u00f3 16 l\u1ea7n x\u1ea3y ra \u0111\u1ed9ng \u0111\u1ea5t. <\/p>\n","014b9121":"<p style=\"font-size:18px\"> \u0110\u1ea7u ti\u00ean ta c\u1ea7n import nh\u1eefng t\u01b0 vi\u1ec7n s\u1ebd s\u1eed d\u1ee5ng trong notebook n\u00e0y<\/p>","23e0ee8c":"## Nh\u1eadn x\u00e9t:\n<p style=\"font-size:18px\"> M\u1ed7i file test l\u00e0 m\u1ed9t segment g\u1ed3m 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u. Ta c\u00f3 th\u1ec3 d\u1ef1 \u0111o\u00e1n trong m\u1ed7i file test trong 3 file tr\u00ean \u0111\u1ec1u c\u00f3 x\u1ea3y ra \u0111\u1ed9ng \u0111\u1ea5t do c\u00f3 m\u1ed9t s\u1ef1 thay \u0111\u1ed5i gi\u00e1 tr\u1ecb m\u1ea1nh b\u1ea5t th\u01b0\u1eddng t\u1ea1i 1 \u0111i\u1ec3m <\/p>","100a0d1e":"<p style=\"font-size:18px\"> Do pandas kh\u00f4ng th\u1ec3 hi\u1ec7n to\u00e0n b\u1ed9 c\u00e1c ch\u1eef s\u1ed1 sau d\u1ea5u ph\u1ea9y, n\u00ean ta s\u1ebd xem \u0111\u1ebfn 10 ch\u1eef s\u1ed1 sau d\u1ea5u ph\u1ea9y b\u1eb1ng c\u00e1ch l\u00e0m tr\u00f2n nh\u01b0 sau \u0111\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c s\u1ef1 thay \u0111\u1ed5i c\u1ee7a th\u1eddi gian <\/p>\n","e2c96ed5":"<p style=\"font-size:18px\"> V\u1ebd bi\u1ec3u \u0111\u1ed3 m\u00f4 t\u1ea3 s\u1ef1 t\u01b0\u01a1ng quan gi\u1eefa c\u00e1c \u0111\u1eb7c tr\u01b0ng c\u1ee7a X_train so v\u1edbi y_train <\/p>","462baf2f":"<p style=\"font-size:18px\"> V\u1eady gi\u1edd ta c\u00f9ng xem th\u1eed trong 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\u1ea7u (1 segment), xu h\u01b0\u1edbng c\u1ee7a <strong>time_to_failure<\/strong> di\u1ec5n ra nh\u01b0 th\u1ebf n\u00e0o <\/p>","0b7898e0":"## 6.1. Chu\u1ea9n b\u1ecb","f88aa5d8":"![image.png](attachment:5a3ad77e-4772-427f-8201-d6c7db31e267.png)","5102c107":"### Nh\u1eadn x\u00e9t:\n<p style=\"font-size:18px\"> Qua nh\u1eefng g\u00ec \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n tr\u00ean \u0111\u1ed3 th\u1ecb, c\u00f3 2 \u0111\u1ed3 th\u1ecb c\u1ee7a <b>abs_min<\/b> v\u00e0 <b>abs_q01<\/b> l\u00e0 ch\u1ec9 to\u00e0n gi\u00e1 tr\u1ecb 0 n\u00ean ta s\u1ebd lo\u1ea1i b\u1ecf 2 \u0111\u1eb7c tr\u01b0ng n\u00e0y. <\/p>\n<p style=\"font-size:18px\"> Ngo\u00e0i ra c\u00f2n c\u00f3 c\u00e1c \u0111\u1eb7c tr\u01b0ng m\u00e0 \u0111\u1ed3 th\u1ecb t\u01b0\u01a1ng quan kh\u00f4ng th\u1ec3 hi\u1ec7n \u0111\u01b0\u1ee3c th\u00f4ng tin g\u00ec (kh\u00f4ng ph\u1ea3i linear c\u0169ng kh\u00f4ng ph\u1ea3i non-linear) n\u00ean em c\u0169ng b\u1ecf nh\u1eefng \u0111\u1eb7c tr\u01b0ng n\u00e0y \u0111\u1ec3 tr\u00e1nh l\u00e0m nhi\u1ec5u d\u1eef li\u1ec7u.  <\/p>","72f16ec0":"<a id=\"7\"><\/a> <br>\n# 7. K\u1ebft qu\u1ea3","ea77a478":"## 3.2. Xu h\u01b0\u1edbng c\u1ee7a time_to_failure v\u00e0 acoustic_data trong 7.5 tri\u1ec7u d\u00f2ng d\u1eef li\u1ec7u (~50 segment) \u0111\u1ea7u ti\u00ean \n<p style=\"font-size:18px\"> D\u1ef1a theo bi\u1ec3u \u0111\u1ed3 tr\u00ean, em \u01b0\u1edbc l\u01b0\u1ee3ng \u0111\u01b0\u1ee3c trong kho\u1ea3ng 10tr d\u1eef li\u1ec7u \u0111\u1ea7u s\u1ebd c\u00f3 1 l\u1ea7n x\u1ea3y ra \u0111\u1ed9ng \u0111\u1ea5t. Do \u0111\u00f3 em s\u1ebd quan s\u00e1t 7.5 tri\u1ec7u d\u00f2ng d\u1eef li\u1ec7u \u0111\u1ea7u ti\u1ec1n (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi 50 segment). <\/p>\n<p style=\"font-size:18px\"> 2 \u0111\u1ed3 th\u1ecb d\u01b0\u1edbi \u0111\u00e2y s\u1ebd c\u00f3 c\u00f9ng kho\u1ea3ng gi\u00e1 tr\u1ecb theo tr\u1ee5c x. Ngh\u0129a l\u00e0 t\u1ea1i 1 v\u1ecb tr\u00ed \u1edf <b>time_to_failure<\/b>, ta gi\u00f3ng xu\u1ed1ng \u0111\u1ed3 th\u1ecb d\u01b0\u1edbi s\u1ebd \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb <b>acoustic_data<\/b> t\u01b0\u01a1ng \u1ee9ng. <\/p>","4390fb36":"### Nh\u1eadn x\u00e9t qua v\u1ec1 train_df\n* <p style=\"font-size:18px\"> train_df l\u00e0 data frame c\u00f3 l\u01b0\u1ee3ng d\u1eef li\u1ec7u r\u1ea5t l\u1edbn nh\u01b0ng l\u1ea1i ch\u1ec9 l\u00e0 d\u1eef li\u1ec7u th\u00f4 l\u1ea5y t\u1eeb th\u1ef1c nghi\u1ec7m. <\/p>\n* <p style=\"font-size:18px\"> Th\u1eddi gian <b>time_to_failure<\/b> gi\u1ea3m d\u1ea7n trong m\u1ed7i segment.  <\/p>\n","717ee050":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> Trong 7.5 tri\u1ec7u \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\u1ea7u, gi\u00e1 tr\u1ecb <b>acoustic_data<\/b> ph\u1ea7n l\u1edbn t\u1eadp trung t\u1ea1i kho\u1ea3ng 0-10. <br>\u0110\u00e2y c\u00f3 th\u1ec3 l\u00e0 c\u01a1 s\u1edf \u0111\u1ec3 ta drop \u0111i nh\u1eefng gi\u00e1 tr\u1ecb nhi\u1ec5u <\/p>\n","7b71979a":"<a id=\"6\"><\/a> <br>\n# 6.Hu\u1ea5n luy\u1ec7n \n","3f43acc5":"<p style=\"font-size:18px\"> Bi\u1ec3u \u0111\u1ed3 d\u01b0\u1edbi \u0111\u00e2y th\u1ec3 hi\u1ec7n m\u1eadt \u0111\u1ed9 ph\u00e2n b\u1ed1 c\u1ee7a c\u00e1c d\u1eef li\u1ec7u trong train_7m5 <\/p>\n","3ba6f1bc":"### L\u00fd thuy\u1ebft:\n<p style=\"font-size:18px\"> LightGBM l\u00e0 m\u1ed9t framework \u0111\u01b0\u1ee3c Microsoft ph\u00e1t tri\u1ec3n m\u1ee5c \u0111\u00edch x\u1eed l\u00fd thu\u1eadt to\u00e1n <b>Gradient boosting<\/b>. \u01afu \u0111i\u1ec3m c\u1ee7a LightGBM so v\u1edbi c\u00e1c framework kh\u00e1c nh\u01b0 XgBoost hay pGBRT l\u00e0 LightGBM s\u1eed d\u1ee5ng hai k\u0129 thu\u1eadt m\u1edbi <b>Gradient-based One-Side Sampling (GOSS)<\/b> v\u00e0 <b>Exclusive Feature Bundling (EFB)<\/b>. Nh\u1edd \u0111\u00f3 m\u00e0 c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c t\u1ed1c \u0111\u1ed9 t\u00ednh to\u00e1n c\u0169ng nh\u01b0 \u0111\u1ed9 ch\u00ednh x\u00e1c. \u0110\u1eb7c bi\u1ec7t l\u00e0 \u1edf nh\u1eefng b\u1ed9 d\u1eef li\u1ec7u l\u1edbn<\/p>\n<p style=\"font-size:18px\"> <b>Gradient-based One-Side Sampling (GOSS)<\/b> s\u1ebd l\u1ea5y nh\u1eefng data instance c\u00f3 gradient l\u1edbn v\u00e0 ch\u1ecdn ng\u1eabu nhi\u00ean x% trong s\u1ed1 nh\u1eefng data instance c\u00f3 gradient nh\u1ecf \u0111\u1ec3 \u0111\u01b0a v\u00e0o l\u00e0m d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n. Gi\u1ea3i th\u00edch cho \u0111i\u1ec1u n\u00e0y l\u00e0 b\u1edfi, nh\u1eefng data c\u00f3 gradient l\u1edbn theo \u0111\u1ecbnh ngh\u0129a v\u1ec1 m\u1ee9c t\u0103ng th\u00f4ng tin th\u00ec s\u1ebd mang l\u1ea1i nhi\u1ec1u th\u00f4ng tin h\u01a1n. Do \u0111\u00f3 GOSS \u01b0u ti\u00ean gi\u1eef l\u1ea1i nh\u1eefng data c\u00f3 gradient l\u1edbn <\/p>\n<p style=\"font-size:18px\"> <b>Exclusive Feature Bundling (EFB)<\/b> gi\u00fap c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 hu\u1ea5n luy\u1ec7n c\u1ee7a LightGBM b\u1eb1ng c\u00e1ch down sample chi\u1ec1u d\u1eef li\u1ec7u. Nh\u1eefng feature kh\u00f4ng \u0111\u1ed3ng th\u1eddi b\u1eb1ng 0, EFB s\u1ebd chu\u1ea9n ho\u00e1 v\u1ec1 th\u00e0nh 1 feature duy nh\u1ea5t \u0111\u1ec3 gi\u1ea3m chi\u1ec1u d\u1eef li\u1ec7u, t\u1eeb \u0111\u00f3 t\u1ed1c \u0111\u1ed9 hu\u1ea5n luy\u1ec7n \u0111\u01b0\u1ee3c c\u1ea3i thi\u1ec7n. <\/p>\n\n\n### C\u00e0i \u0111\u1eb7t\n<p style=\"font-size:18px\"> \u0110\u1ed1i v\u1edbi m\u00f4 h\u00ecnh n\u00e0y, em c\u0169ng c\u00e0i \u0111\u1eb7t b\u1eb1ng b\u1ed9 c\u00f4ng c\u1ee5 scikit_learn. V\u1edbi t\u1eadp params thu th\u1eadp \u0111\u01b0\u1ee3c v\u00e0 th\u1eed b\u1eb1ng tay. Tuy nhi\u00ean d\u00f9 c\u00f3 thay \u0111\u1ed5i params th\u00ec k\u1ebft qu\u1ea3 thay \u0111\u1ed5i kh\u00f4ng \u0111\u00e1ng k\u1ec3. <\/p>\n","74b00b78":"<p style=\"font-size:18px\"> 5 d\u00f2ng \u0111\u1ea7u ti\u00ean c\u1ee7a file train <\/p>","0efe2e59":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> Gi\u00e1 tr\u1ecb c\u1ee7a <strong>time_to_failure<\/strong> c\u00f3 xu h\u01b0\u1edbng gi\u1ea3m d\u1ea7n theo t\u1eebng b\u1eadc thang, li\u1ec7u nh\u1eefng b\u01b0\u1edbc gi\u1ea3m \u0111\u00f3 c\u00f3 \u0111\u1ec1u nhau v\u00e0 nh\u1eefng \u0111\u01b0\u1eddng ngang c\u00f3 th\u1eadt s\u1ef1 l\u00e0 kh\u00f4ng thay \u0111\u1ed5i gi\u00e1 tr\u1ecb ? <\/p>\n<p style=\"font-size:18px\"> Em s\u1ebd l\u00e0m r\u00f5 v\u1ea5n \u0111\u1ec1 n\u00e0y b\u1eb1ng c\u00e1ch v\u1ebd ra bi\u1ec3u \u0111\u1ed3 th\u1ec3 hi\u1ec7n s\u1ef1 ch\u00eanh l\u1ec7ch gi\u1eefa c\u00e1c gi\u00e1 tr\u1ecb <b>time_to_failure<\/b> li\u1ec1n nhau v\u00e0 xu h\u01b0\u1edbng bi\u1ebfn \u0111\u1ed9ng c\u1ee7a 1 \u0111\u01b0\u1eddng ngang \u0111\u1ea7u ti\u00ean. <\/p>","6410d9ba":"## 3.1. Xu h\u01b0\u1edbng c\u1ee7a acoustic_data v\u00e0 time_to_failure trong 1% d\u1eef li\u1ec7u\n<p style=\"font-size:18px\"> \u0110\u1ec3 xem \u0111\u01b0\u1ee3c xu h\u01b0\u1edbng, \u0111\u1ed3 th\u1ecb bi\u1ec3u di\u1ec5n c\u1ee7a d\u1eef li\u1ec7u, em s\u1eed d\u1ee5ng b\u1ed9 th\u01b0 vi\u1ec7n <b>matplotlib<\/b>. \u0110\u00e2y l\u00e0 b\u1ed9 th\u01b0 vi\u1ec7n h\u1ed7 tr\u1ee3 v\u1ebd bi\u1ec3u \u0111\u1ed3 d\u1eef li\u1ec7u <\/p> \n<p style=\"font-size:18px\"> \u1ede \u0111\u00e2y em v\u1ebd \u0111\u1ed3ng th\u1eddi 2 lo\u1ea1i d\u1eef li\u1ec7u <i>acoustic_data<\/i> v\u00e0 <i>time_to_failure<\/i> trong c\u00f9ng m\u1ed9t \u0111\u1ed3 th\u1ecb \u0111\u1ec3 c\u00f3 th\u1ec3 nh\u00ecn th\u1ea5y \u0111\u01b0\u1ee3c s\u1ef1 t\u01b0\u01a1ng quan v\u1edbi nhau <\/p>\n<p style=\"font-size:18px\"> values[::100] l\u00e0 slice, ngh\u0129a l\u00e0 em s\u1ebd l\u1ea5y c\u00e1c gi\u00e1 tr\u1ecb c\u00e1ch nhau 100 b\u01b0\u1edbc nh\u1ea3y, b\u1eaft \u0111\u1ea7u t\u1eeb gi\u00e1 tr\u1ecb 0. Vi\u1ec7c n\u00e0y nh\u1eb1m \u0111\u1ea3m b\u1ea3o l\u1ea5y \u0111\u01b0\u1ee3c 1% d\u1eef li\u1ec7u, \u0111\u1ed3ng th\u1eddi c\u0169ng t\u1ea1o \u0111\u01b0\u1ee3c s\u1ef1 bao qu\u00e1t to\u00e0n b\u1ed9 d\u1eef li\u1ec7u thay v\u00ec vi\u1ec7c l\u1ea5y 6 tri\u1ec7u d\u1eef li\u1ec7u \u0111\u1ea7u ti\u00ean<\/p>","1afca2cc":"<p style=\"font-size:18px\"> C\u00e0i \u0111\u1eb7t c\u00e1c \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn b\u1ed9 d\u1eef li\u1ec7u<\/p>","3e5f8993":"## Nh\u1eadn x\u00e9t:\n<p style=\"font-size:18px\">Ta c\u00f3 th\u1ec3 th\u1ea5y MAE c\u1ee7a m\u00f4 h\u00ecnh SVR c\u00f3 ph\u1ea7n th\u1ea5p h\u01a1n so v\u1edbi LightGBM, tuy nhi\u00ean, k\u1ebft qu\u1ea3 sau khi submit l\u1ea1i tr\u00e1i ng\u01b0\u1ee3c. K\u1ebft qu\u1ea3 c\u1ee7a LightGBM cao v\u01b0\u1ee3t tr\u1ed9i h\u01a1n so v\u1edbi SVR. Em ph\u00e1n \u0111o\u00e1n r\u1eb1ng m\u00f4 h\u00ecnh SVR c\u00f3 th\u1ec3 \u0111\u00e3 b\u1ecb overfitting v\u1edbi b\u1ed9 d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n, ho\u1eb7c b\u1ed9 d\u1eef li\u1ec7u submit c\u00f3 nhi\u1ec1u \u0111i\u1ec3m g\u00e2y nhi\u1ec5u n\u1eb1m ngo\u00e0i \u1ed1ng h\u01a1n khi\u1ebfn cho m\u00f4 h\u00ecnh SVR kh\u00f4ng c\u00f2n \u0111\u01b0\u1ee3c ch\u00ednh x\u00e1c <\/p>\n","2bf59547":"<p style=\"font-size:18px\"> X_test sau khi \u0111\u01b0\u1ee3c chu\u1ea9n ho\u00e1 <\/p>","bc118c1a":"<p style=\"font-size:18px\"> V\u1ec1 hu\u1ea5n luy\u1ec7n m\u00f4 h\u00ecnh, em \u0111\u00e3 th\u1eed v\u1edbi 2 m\u00f4 h\u00ecnh l\u00e0 <b>SVR<\/b> v\u00e0 <b>LightGBM<\/b>. <\/p>\n<p style=\"font-size:18px\"> Do ban \u0111\u1ea7u k\u1ebft qu\u1ea3 c\u1ee7a SVR ch\u01b0a \u0111\u01b0\u1ee3c t\u1ed1t n\u00ean em c\u00f3 t\u00ecm hi\u1ec3u c\u00e1c thu\u1eadt to\u00e1n kh\u00e1c \u0111\u1ec3 c\u1ea3i thi\u1ec7n k\u1ebft qu\u1ea3. V\u00e0 sau c\u00f9ng em l\u1ef1a ch\u1ecdn LightGBM. <\/p>\n<br>\n<p style=\"font-size:18px\">Trong m\u1ed7i m\u00f4 h\u00ecnh em \u0111\u1ec1u s\u1eed d\u1ee5ng <b>K-Fold cross validation<\/b>. K-Fold s\u1ebd chia b\u1ed9 d\u1eef li\u1ec7u c\u1ee7a ta ra th\u00e0nh k folds, m\u1ed7i fold s\u1ebd \u0111\u1ec1u \u0111\u01b0\u1ee3c thay phi\u00ean l\u00e0m t\u1eadp test m\u1ed9t l\u1ea7n v\u00e0 c\u00e1c folds c\u00f2n l\u1ea1i l\u00e0m t\u1eadp train. T\u1eeb \u0111\u00f3 s\u1ebd gi\u00fap \u0111\u00e1nh gi\u00e1 m\u00f4 h\u00ecnh \u0111\u01b0\u1ee3c ch\u00ednh x\u00e1c h\u01a1n t\u1eeb nhi\u1ec1u g\u00f3c nh\u00ecn. <\/p>\n<p style=\"font-size:18px\">Ngo\u00e0i ra, b\u00e0i to\u00e1n c\u00f2n gi\u1edbi thi\u1ec7u m\u1ed9t h\u00e0m l\u1ed7i l\u00e0 <b>mean_absoluted_error<\/b> v\u1edbi c\u00f4ng th\u1ee9c nh\u01b0 sau: <\/p>\n\n![image.png](attachment:5b144856-d684-4a98-9b3b-8bc3a12cd551.png)\n\n<p style=\"font-size:18px\">Do \u0111\u00e2y l\u00e0 c\u00e1ch t\u00ednh h\u00e0m l\u1ed7i \u0111\u1ec3 t\u00ednh \u0111i\u1ec3m khi submit c\u1ee7a b\u00e0i to\u00e1n n\u00ean em s\u1ebd d\u00f9ng lu\u00f4n trong b\u00e0i l\u00e0m c\u1ee7a m\u00ecnh. <\/p>\n","b9cefaa3":"<p style=\"font-size:18px\"> Ta c\u00f9ng t\u1ea1o ra c\u00e1c \u0111\u1eb7c tr\u01b0ng cho X_train b\u1eb1ng c\u00e1ch truy\u1ec1n l\u1ea7n l\u01b0\u1ee3t c\u00e1c segment v\u00e0o h\u00e0m feature_generate v\u1eeba t\u1ea1o \u1edf tr\u00ean. <\/p>","239329ba":"<p style=\"font-size:18px\"> \u0110\u00e2y l\u00e0 X_train sau khi \u0111\u00e3 \u0111\u01b0\u1ee3c chu\u1ea9n ho\u00e1.  <\/p>","e116c74f":"## 6.3. M\u00f4 h\u00ecnh LightGBM","940764e1":"<p style=\"font-size:18px\"> Do file train kh\u00e1 n\u1eb7ng (9.7GB) n\u00ean th\u1eddi gian \u0111\u1ecdc l\u00e2u v\u00e0 t\u1ed1n nhi\u1ec1u RAM. Em s\u1eed d\u1ee5ng b\u1ed9 th\u01b0 vi\u1ec7n Pandas \u0111\u1ec3 h\u1ed7 tr\u1ee3 \u0111\u1ecdc ghi file CSV, train_df sau khi ch\u1ea1y xong k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 m\u1ed9t data frame<\/p>","02a0a3d7":"<p style=\"font-size:18px\"> \u0110\u00e2y l\u00e0 d\u1eef li\u1ec7u \u1edf folder test d\u00f9ng \u0111\u1ec3 submit cho b\u00e0i to\u00e1n. D\u1eef li\u1ec7u \u0111\u1ec3 validate cho m\u00f4 h\u00ecnh em s\u1ebd chia khi hu\u1ea5n luy\u1ec7n b\u1eb1ng KFold <\/p>\n<p style=\"font-size:18px\"> \u0110\u1ecdc file submission v\u00e0 t\u1ea1o X_test c\u00f3 c\u1ea5u tr\u00fac b\u1eb1ng s\u1ed1 c\u1ed9t c\u1ee7a X_train. C\u00f2n s\u1ed1 h\u00e0ng s\u1ebd \u1ee9ng v\u1edbi s\u1ed1 file test. <br>\n    M\u1ed7i m\u1ed9t file test em s\u1ebd coi l\u00e0 1 h\u00e0ng c\u1ee7a X_test v\u00e0 l\u1ea1i t\u1ea1o feature t\u1eeb 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u nh\u01b0 c\u00e1ch l\u00e0m v\u1edbi X_train r\u1ed3i th\u00eam h\u00e0ng \u0111\u00f3 v\u00e0o X_test <\/p>","a884326b":"<p style=\"font-size:18px\"> Sau khi t\u1ea1o xong X_train, y_train, ta c\u00f9ng xem \u0111\u1ed9 t\u01b0\u01a1ng quan gi\u1eefa 2 t\u1eadp n\u00e0y. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 h\u00e0m plot_feature, \u0111\u1ec3 m\u00f4 t\u1ea3 s\u1ef1 t\u01b0\u1edfng quan c\u1ee7a t\u1eebng feature c\u1ee7a X so v\u1edbi y_train. \u0110\u1eb7c tr\u01b0ng n\u00e0o kh\u00f4ng ph\u00f9 h\u1ee3p ta s\u1ebd lo\u1ea1i b\u1ecf <\/p>","282ebc38":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> Qua 2 bi\u1ec3u \u0111\u1ed3 tr\u00ean ta c\u00f3 th\u1ec3 th\u1ea5y, nh\u1eefng b\u01b0\u1edbc nh\u1ea3y trong bi\u1ec3u \u0111\u1ed3 <b><i>\"S\u1ef1 thay \u0111\u1ed5i c\u1ee7a time_to_failure trong 150000 \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\u1ea7u\"<\/i><\/b> l\u00e0 <strong>kh\u00f4ng \u0111\u1ec1u nhau<\/strong>. <br> \u0110\u1ed3ng th\u1eddi, gi\u00e1 tr\u1ecb c\u1ee7a time_to_failure tr\u00ean t\u1eebng \u0111\u01b0\u1eddng ngang c\u00f3 xu h\u01b0\u1edbng <strong>gi\u1ea3m tuy\u1ebfn t\u00ednh<\/strong> <\/p>\n","f1a4cc34":"## 3.4. M\u1eadt \u0111\u1ed9 c\u1ee7a acoustic_data trong 7500000 gi\u00e1 tr\u1ecb \u0111\u1ea7u","b48686bb":"## 7.1. LightBGM","469965d4":"<a id=\"3\"><\/a> <br>\n# 3. Ph\u00e2n t\u00edch d\u1eef li\u1ec7u ","1f7eee9c":"## 7.2. SVR","38b4a7c6":"### L\u00fd thuy\u1ebft:\n<p style=\"font-size:18px\"> SVR (Support Vector Regression) l\u00e0 m\u1ed9t m\u00f4 h\u00ecnh h\u1ed3i quy nh\u01b0ng l\u1ea1i s\u1eed d\u1ee5ng thu\u1eadt to\u00e1n SVM (Support Vector Machine - thu\u1eadt to\u00e1n ph\u00e2n lo\u1ea1i) \u0111\u1ec3 d\u1ef1 \u0111o\u00e1n gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn li\u00ean t\u1ee5c. \u00dd t\u01b0\u1edfng c\u01a1 b\u1ea3n c\u1ee7a SVR l\u00e0 \u00e1nh x\u1ea1 kh\u00f4ng gian \u0111\u1ea7u v\u00e0o sang m\u1ed9t kh\u00f4ng gian \u0111\u1eb7c tr\u01b0ng nhi\u1ec1u chi\u1ec1u \u0111\u1ec3 ta c\u00f3 th\u1ec3 \u00e1p d\u1ee5ng \u0111\u01b0\u1ee3c h\u1ed3i quy tuy\u1ebfn t\u00ednh. \u0110\u1ec3 x\u00e2y d\u1ef1ng \u0111\u01b0\u1ee3c h\u00e0m h\u1ed3i quy n\u00e0y th\u00ec ta kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng h\u1ebft to\u00e0n b\u1ed9 c\u00e1c \u0111i\u1ec3m trong b\u1ed9 d\u1eef li\u1ec7u, n\u00ean nh\u1eefng \u0111i\u1ec3m n\u00e0o c\u00f3 \u0111\u00f3ng g\u00f3p v\u00e0o vi\u1ec7c x\u00e2y d\u1ef1ng h\u00e0m h\u1ed3i quy s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Support Vector, v\u00e0 vi\u1ec7c d\u1ef1 \u0111o\u00e1n gi\u00e1 tr\u1ecb hay ph\u00e2n l\u1edbp c\u0169ng ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c Support Vector \u0111\u00f3. <\/p>\n\n<p style=\"font-size:18px\"> H\u00e0m h\u1ed3i quy c\u1ea7n t\u00ecm c\u00f3 d\u1ea1ng: <\/p> \n\n![image.png](attachment:3e90d4cc-f94a-4735-ac6d-458d4a2740e3.png)\n\n<p style=\"font-size:18px\"> Trong \u0111\u00f3: w l\u00e0 vector tr\u1ecdng s\u1ed1, x l\u00e0 vector \u0111\u1ea7u v\u00e0o. M\u1ee5c ti\u00eau hu\u1ea5n luy\u1ec7n SVR l\u00e0 t\u00ecm ra \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb w v\u00e0 b. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3, SVR \u0111\u00e3 s\u1eed d\u1ee5ng h\u00e0m l\u1ed7i \u03b5-insensitive. \u0110\u1eb7c \u0111i\u1ec3m c\u1ee7a h\u00e0m l\u1ed7i n\u00e0y l\u00e0 n\u1ebfu s\u1ef1 sai l\u1ec7ch gi\u1eefa gi\u00e1 tr\u1ecb d\u1ef1 \u0111o\u00e1n v\u00e0 gi\u00e1 tr\u1ecb \u0111\u00edch nh\u1ecf h\u01a1n \u03b5 (\u03b5 > 0) th\u00ec s\u1ebd coi nh\u01b0 \u0111\u1ed9 sai l\u1ec7ch l\u1ed7i b\u1eb1ng 0. M\u1ee5c ti\u00eau s\u1ebd \u0111i t\u1ed1i \u01b0u h\u00e0m m\u1ea5t m\u00e1t m\u00e0 v\u1eabn th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n sau: <\/p>\n\n![image.png](attachment:5c6da0ec-5825-477f-955b-fd4d487ce0bc.png)\n\n<p style=\"font-size:18px\"> Tuy nhi\u00ean, b\u1ed9 d\u1eef li\u1ec7u s\u1ebd th\u01b0\u1eddng c\u00f3 nh\u1eefng \u0111i\u1ec3m g\u00e2y nhi\u1ec5u, kh\u00f4ng c\u00f3 c\u00e1ch n\u00e0o c\u00f3 th\u1ec3 \u0111\u00e1p \u1ee9ng t\u1ea5t c\u1ea3 c\u00e1c \u0111i\u1ec3m trong b\u1ed9 d\u1eef li\u1ec7u \u0111\u00f3. V\u00ed d\u1ee5 c\u00f3 nh\u1eefng \u0111i\u1ec3m d\u1eef li\u1ec7u s\u1ebd kh\u00f4ng bao gi\u1edd th\u1ecfa m\u00e3n, n\u1eb1m trong kho\u1ea3ng \u03b5 c\u1ee7a ta. M\u1ed9t \u00fd t\u01b0\u1edfng \u0111\u01b0\u1ee3c n\u1ea3y ra \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\u00e0y l\u00e0 ta th\u00eam m\u1ed9t bi\u1ebfn l\u1ecfng \u03be (slack variable) v\u1edbi m\u1ee5c \u0111\u00edch ch\u1ea5p nh\u1eadn nh\u1eefng \u0111i\u1ec3m nhi\u1ec5u kia \u0111\u00fang v\u00e0 v\u1eabn \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c s\u1ef1 \u0111\u00fang \u0111\u1eafn c\u1ee7a m\u00f4 h\u00ecnh. Khi \u0111\u00f3, ta c\u1ea7n \u0111i t\u1ed1i \u01b0u h\u00e0m m\u1ea5t m\u00e1t v\u1edbi \u0111i\u1ec1u ki\u1ec7n b\u00e0i to\u00e1n nh\u01b0 sau <\/p>\n\n![image.png](attachment:f8d19822-6f97-4e78-8dd1-933636f498c1.png)\n\n<p style=\"font-size:14px\"> <b>H\u00ecnh 4.3:<\/b> H\u00e0m m\u1ea5t m\u00e1t - Ngu\u1ed3n: b\u00e0i b\u00e1o \u201cSupport Vector Regression\u201d<\/p>\n\n![image.png](attachment:18493b59-d4cb-448c-8ebf-762be5048c9e.png)\n\n<p style=\"font-size:14px\"> <b>H\u00ecnh 4.4:<\/b> \u0110i\u1ec1u ki\u1ec7n b\u00e0i to\u00e1n - Ngu\u1ed3n: b\u00e0i b\u00e1o \u201cSupport Vector Regression\u201d <\/p>\n\n\n\n\n### C\u00e0i \u0111\u1eb7t c\u1ee5 th\u1ec3:\n<p style=\"font-size:18px\"> \u0110\u1ec3 c\u00e0i \u0111\u1eb7c \u0111\u01b0\u1ee3c m\u00f4 h\u00ecnh SVR, em \u0111\u00e3 s\u1eed d\u1ee5ng b\u1ed9 c\u00f4ng c\u1ee5 <b>scikit-learn<\/b> \u0111\u1ec3 g\u1ecdi h\u00e0m SVR. <\/p>\n<p style=\"font-size:18px\">Do b\u1ed9 d\u1eef li\u1ec7u qu\u00e1 l\u1edbn, khi fine tuning b\u1eb1ng <b>GridSearchCV<\/b> em \u0111\u00e3 b\u1ecb tr\u00e0n RAM n\u00ean em quy\u1ebft \u0111\u1ecbnh th\u1eed params b\u1eb1ng tay d\u1ef1a tr\u00ean kinh nghi\u1ec7m c\u00e1 nh\u00e2n. <\/p>","3ff03d61":"### Nh\u1eadn x\u00e9t\n<p style=\"font-size:18px\"> D\u1eef li\u1ec7u <b>acoustic_data<\/b> l\u00e0 d\u1eef li\u1ec7u th\u00f4 thu th\u1eadp \u0111\u01b0\u1ee3c t\u1eeb m\u00e1y \u0111o s\u00f3ng \u0111\u1ecba ch\u1ea5t t\u1eeb l\u00f2ng \u0111\u1ea5t, do \u0111\u00f3 ta kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng n\u00f3 nh\u01b0 m\u1ed9t \u0111\u1eb7c tr\u01b0ng \u0111\u1ec3 hu\u1ea5n luy\u1ec7n m\u00f4 h\u00ecnh. V\u00ec v\u1eady, em t\u1ea1o ra c\u00e1c \u0111\u1eb7c tr\u01b0ng t\u1eeb d\u1eef li\u1ec7u th\u00f4 \u0111\u00f3 v\u00e0 xem x\u00e9t l\u1ef1a ch\u1ecdn \u0111\u1eb7c tr\u01b0ng s\u1eed d\u1ee5ng cho vi\u1ec7c hu\u1ea5n luy\u1ec7n m\u00f4 h\u00ecnh. <\/p>\n<p style=\"font-size:18px\"> C\u00e1c \u0111\u1eb7c tr\u01b0ng em kh\u1edfi t\u1ea1o bao g\u1ed3m nh\u1eefng \u0111\u1eb7c tr\u01b0ng c\u01a1 b\u1ea3n nh\u01b0 mean, std, max, min, sum, quantile,.. c\u1ee7a m\u1ed7i c\u1ea3 segment ho\u1eb7c c\u1ee7a 10000, 50000 gi\u00e1 tr\u1ecb. <\/p>\n<p style=\"font-size:18px\"> Ngo\u00e0i ra c\u00f2n c\u00f3 \u0111\u1eb7c tr\u01b0ng do bi\u1ebfn \u0111\u1ed5i t\u1eeb mi\u1ec1n th\u1eddi gian v\u1ec1 mi\u1ec1n t\u1ea7n s\u1ed1 b\u1eb1ng <b>FFT (Fast Fourier Transform)<\/b> <\/p>","4ff07c79":"# Content\n1. [B\u00e0i to\u00e1n](#1)\n1. [M\u00f4 t\u1ea3 d\u1eef li\u1ec7u](#2)\n1. [Ph\u00e2n t\u00edch d\u1eef li\u1ec7u](#3)\n1. [Kh\u1edfi t\u1ea1o \u0111\u1eb7c tr\u01b0ng](#4)\n1. [Chu\u1ea9n b\u1ecb d\u1eef li\u1ec7u train v\u00e0 test](#5)\n1. [Hu\u1ea5n luy\u1ec7n](#6)\n1. [K\u1ebft qu\u1ea3](#7)"}}