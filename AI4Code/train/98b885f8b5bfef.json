{"cell_type":{"5763d3f5":"code","2d0c79f5":"code","17c19b6f":"code","664c744d":"code","732a1708":"code","5bc4cc34":"code","3e0588f0":"code","088b73dc":"code","016a0706":"code","de4c335d":"code","32406325":"code","28cf9eee":"code","7edf2458":"code","f2a06182":"code","9a5d20aa":"code","a1810cd0":"code","fbb4f4b4":"code","b9363466":"code","78e789a2":"markdown","db178ab9":"markdown","038dde36":"markdown","95cfd713":"markdown","09d78b20":"markdown","be19a39a":"markdown","2267d6c8":"markdown","4d343408":"markdown","ff96fc3b":"markdown","7303195f":"markdown","fa8cb9af":"markdown","bf222778":"markdown","53be3f60":"markdown","7a9fc1fb":"markdown","daf6f611":"markdown","450a66f1":"markdown","321337c4":"markdown","3f4cf6b3":"markdown","8b19de78":"markdown","424369b0":"markdown","79567dca":"markdown","be3b087e":"markdown","779ea0c0":"markdown","58bc79a5":"markdown","47905c8b":"markdown","770e74b5":"markdown"},"source":{"5763d3f5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d0c79f5":"myData = pd.read_csv(\"\/kaggle\/input\/covid19-tweets\/covid19_tweets.csv\")\nmyData.head(10)\n","17c19b6f":"myData.corr()","664c744d":"f,ax = plt.subplots(figsize = (8,8))\nsns.heatmap(myData.corr(), annot = True, linewidths = .5, fmt = '.1f', ax=ax)\nplt.show()","732a1708":"#line plot\nmyData.user_followers.plot(kind=\"line\",color = 'r',label='user_followers',linewidth = 1, alpha=0.5, grid = True, linestyle = '-.')\nmyData.user_friends.plot(color='y',label='user_friends',linewidth = 1, alpha=0.5, grid = True, linestyle = ':')\nplt.legend(loc = 'upper right')\nplt.xlabel('x axis')\nplt.ylabel('y axis')\nplt.title('Line plot')\nplt.show()","5bc4cc34":"myData.plot(kind='scatter',x = 'user_followers',y = 'user_friends',alpha =.5, color='green')\nplt.xlabel('user_followers')\nplt.ylabel('user_friends')\nplt.title('User Followers and Friends Scatter Plot')","3e0588f0":"myData.user_favourites.plot(kind='hist',bins=50,figsize=(8,8))","088b73dc":"dictionary={'Turkey':'Istanbul'}","016a0706":"dictionary={'Turkey':'Istanbul','France':'Paris','Italy':'Roma'}\nprint(dictionary.keys())\nprint(dictionary.values())","de4c335d":"dictionary={'Turkey':'Istanbul','France':'Paris','Italy':'Roma'}\nprint(dictionary)\ndictionary['Turkey']=\"Ankara\" #Update existing entry\nprint(dictionary)\ndictionary['ABD'] = \"New York\" #add new entry\nprint(dictionary)\ndel dictionary['ABD'] #we can delete for not to fill memory\nprint(dictionary)\nprint('Turkey' in dictionary) #check exist or not\ndictionary.clear() #remove all entries \nprint(dictionary)","32406325":"series = myData['user_friends']\nprint(type(series))\ndataFrame = myData[['user_friends']]\nprint(type(dataFrame))","28cf9eee":"x = myData['user_friends']>2000\nmyData[x]","7edf2458":" #myData(myData['user_friends']>2000) &  myData(myData['user_favourites']>2000) #without using the np library\nmyData[np.logical_and(myData['user_friends']>2000, myData['user_favourites']>2000)]","f2a06182":"a = 4\nwhile a!=8:\n    print(a)\n    a += 1\n","9a5d20aa":"x = [1,2,3]\nfor i in x: \n    print(i)\nprint('')\n\n#Enumerate index and values of lists (e.g index:value, 0-1)\nfor index, value in enumerate(x):\n    print(index,'-',value)\n    \n# for dictionaries. We can loop through a dictionary by using a for loop.\n# When looping through a dictionary, the return value are the keys of the dictionary.\n\ndictionary={'Turkey':'Istanbul','France':'Paris','Italy':'Roma'}\nfor key,value in dictionary.items():\n    print(key,'-',value)\n    \n#We can achieve index and values (pandas)\n#The iterrows() function is used to iterate over DataFrame rows as (index, Series) pairs.\n#Iterates over the DataFrame columns, returning a tuple with the column name and the content as a Series.\nfor index,value in myData[['user_friends']][0:1].iterrows(): # [0:1] --> gets the first \n     print(key,'-',value)\n","a1810cd0":"def my_tuble():\n    \"\"\" my tuble \"\"\"\n    tuble = (1,2,3)\n    print(tuble)\n    return tuble\nx,y,z = my_tuble()\nprint(x,y,z)","fbb4f4b4":"a = 5\ndef func():\n    a = 7\n    return a\nprint(a)  #Global variable a = 5\nprint(func()) #Local variable a = 7","b9363466":"# We can see which ones built in scope\nimport builtins\ndir(builtins)","78e789a2":"*  CSV : Comma-seperated values.\n*  pandas consists of two types of data types.\n1.     1.Series : Series are one-dimensional structures extending in the form of a vector\n1.     2.DataFrame","db178ab9":"# What is the Pandas?\nPandas is one of the open source Python libraries that provide easy-to-use data structures and enable data analysis. It provides great convenience to those working in the fields of machine learning in data reading and preprocessing stages.","038dde36":"*  **annot = True** for show numbers from table\n*  **linewidths** for line thickness\n*  **fmt** values to print after zero\n*  **data.columns** shows its properties","95cfd713":"The **built-in scope** has all the names that are loaded into python variable scope when we start the interpreter\nFor example: print(),id(),len,type..","09d78b20":"myData.info()","be19a39a":"**Dictionary** is include in key and value like small a data frame structure. Dictionaries help it easier to read and change our data.Also, it is faster than lists. Use of;","2267d6c8":"# Why using the dictionary?","4d343408":"# LOOPS\n*While*\n","ff96fc3b":"logical_and : Enables the *And* method from the np library\nTrue, True = True,\nTrue, False = False","7303195f":"*User Defined Function*\n\n* docstring : Documentation for functions\n\n    for func():\n    \"\"\"my docstring \"\"\"\n* tuble : sequence of immutable python objects.\n\n     tuble = (1,2,3,4,5)","fa8cb9af":"* Resources:\n* https:\/\/dataiteam.com\/\n* https:\/\/www.w3schools.com\/python\/gloss_python_loop_dictionary_items.asp\n\n","bf222778":"# Python Data Science Toolbox","53be3f60":"**What is Scope?**\n\nUsed for the area where a variable is available.\n\n**Scope Types;**\n1. Global \n1. Local\n1. Built in scope","7a9fc1fb":"The Data Science is most popular for research and implementation scope today. Data science is use various tools,  algorithms, and machine learning principles for the deriving value from data.\n","daf6f611":"We take correlation between feautire. Simple like excel tablo;","450a66f1":"**matplotlib** library for visualization. \nThe easy plots are line,scatter and histogram plots.\nThe **Line Plot** is if x axis, visualization use the line plot.\nThe **Scatter Plot** is used to understand whether there is a correlation between two variables.\nThe **Histogram Plot** is if we want to understand the distribution of a data, histogram is used.","321337c4":"# PANDAS ","3f4cf6b3":"  We take basic informatiormation about our data ","8b19de78":"# DICTIONARY","424369b0":"* How filtering pandas with logical_and?","79567dca":" This code block show us five head data from file","be3b087e":"*For loop*","779ea0c0":"We see user reviews from play store with Line Plot","58bc79a5":"# **What is the Data Science?**","47905c8b":"series = myData['Defense']\n","770e74b5":"# Scope"}}