{"cell_type":{"630bd01f":"code","fa8e5b21":"code","53f9fd3f":"code","97f435b4":"code","3b7388a9":"code","16477510":"code","dae5a4ff":"code","e62fba4a":"code","bbd7fb5b":"code","f48aedec":"code","0b63bab4":"code","1b62b43f":"code","28992253":"code","c3bb8323":"code","b1f61efb":"code","4a598440":"code","8f8806e2":"code","fec71954":"code","39b15645":"code","80d76ac2":"code","cf24617a":"code","7a6ea8b4":"code","270925f4":"markdown","1cbee122":"markdown","b8120e0a":"markdown","09bf7542":"markdown","fe7887ae":"markdown","0380f749":"markdown"},"source":{"630bd01f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib\nimport matplotlib.pyplot as plt\nmatplotlib.style.use('ggplot')\nfrom sklearn.model_selection import train_test_split \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fa8e5b21":"randomGen = np.random.RandomState(1)\nX1 = [randomGen.randint(500,2000) for a in randomGen.rand(50)]\nX2 = [randomGen.randint(100,500) for b in randomGen.rand(50)]\nX3 =  pd.Series(X1) * 3 + 12\nY = pd.Series(X2) + pd.Series(X3) \n\ndata = pd.DataFrame({\n    'input X1':X1,\n    'input X2':X2,\n    'input X3':X3,\n    'output':Y\n})\ndataX1 =pd.DataFrame({\n    'input X1':X1,\n    'output':Y\n})\ndataX2 =pd.DataFrame({\n    'input X2':X2,\n    'output':Y\n})\ndataX3 =pd.DataFrame({\n    'input X3':X3,\n    'output':Y\n})\ndataOut =pd.DataFrame({\n    'output Y':Y\n})","53f9fd3f":"data","97f435b4":"data.corr()","3b7388a9":"#X1 and Y\nprint('Correlation between X1 and Y')\ndataX1.corr()","16477510":"#X2 and Y\nprint('Correlation between X2 and Y')\ndataX2.corr()","dae5a4ff":"#X3 and Y\nprint('Correlation between X3 and Y')\ndataX3.corr()","e62fba4a":"#X1 and Y\ndata.plot(kind='scatter',x='input X1',y='output',\n           title=\"Scatter plot showing relationship between X1 and Y\",\n            figsize=(10,8))","bbd7fb5b":"\ndata.plot(kind='scatter',x='input X2',y='output',\n           title=\"Scatter plot showing relationship between X2 and Y\",\n            figsize=(10,8))","f48aedec":"from sklearn.model_selection import train_test_split \nfrom sklearn import linear_model\nimport statsmodels.api as sm","0b63bab4":"dataReg = data.copy()\nRegres = linear_model.LinearRegression()\n\nprint ('separation of data into dependent (Y) and independent(X1 and X2) variables')\nX_data = dataReg[['input X1']]#independent\nX2_data = dataReg[['input X2']]#independent\nY_data = dataReg['output']#dependent\nY2_data = dataReg['output']#dependent\n\nX_train, X_test, y_train, y_test = train_test_split(X_data, Y_data, test_size=0.30)\nX2_train,X2_test, y2_train,y2_test = train_test_split(X2_data, Y2_data, test_size=0.30)\npd.DataFrame(X_test)","1b62b43f":"model = Regres.fit(X_train,y_train)\nmodel2 = Regres.fit(X2_train,y2_train)\npredictions= Regres.predict(pd.DataFrame(X_test))\npredictions2 = Regres.predict(pd.DataFrame(X2_test))","28992253":"plt.scatter(X_test,predictions, color='black')\nplt.show()","c3bb8323":"plt.scatter(X2_test,predictions2, color='blue')\nplt.show()","b1f61efb":"import seaborn as sns","4a598440":"# Plot the residuals after fitting a linear model\nsns.residplot(Regres.predict(X_train), Regres.predict(X_train)-y_train, lowess=True, color=\"r\")\nsns.residplot(Regres.predict(pd.DataFrame(X_test)), Regres.predict(pd.DataFrame(X_test))-y_test, lowess=True, color=\"g\")\nplt.title('Residual Plot using Training (red) and test (green) data ')\nplt.ylabel('Residuals')","8f8806e2":"from sklearn.metrics import r2_score","fec71954":"print('Coefficicent is: %.2f' % r2_score(y_test, Regres.predict(X_test)))","39b15645":"Regres.intercept_","80d76ac2":"Regres= linear_model.LinearRegression()","cf24617a":" print(model.score(pd.DataFrame(X_test), pd.DataFrame(y_test)))\n print(model.score(pd.DataFrame(X2_test), pd.DataFrame(y2_test)))","7a6ea8b4":"#R^2\nRegres(X2_test,y_test) ","270925f4":"1. Generate a random data set of 50 values in X1, X2,X3 Y values and store in a data frame","1cbee122":"5. Provide a plot illustrating the Residuals","b8120e0a":"Determine the Coefficient of Determination (R^2 ) of your model. Explain what this means This refers to how well the the model fits the data. In the first test it had a 50% score for how well the model fit the data while the second scenario showed the model poorly fit the data at 11%","09bf7542":"3. Plot a scatter plot illustrating the relationship between","fe7887ae":"4. Perform Regression Analysis on your data set to determine the impact that X1 and X2 (Independent) has on Y. Ensure that you perform cross validation on the data","0380f749":"2. Determine the correlation between: \nX1 and Y,\nX2 and Y, \nX3 and Y\n"}}