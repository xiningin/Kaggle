{"cell_type":{"941dbb95":"code","dbce06f5":"code","8959000e":"code","8cdbd38a":"code","47dce916":"code","4fab6dac":"code","e8fe8fce":"code","3ca48935":"code","2f685488":"code","993f286c":"code","703ba96f":"code","d39e75ad":"code","078cb144":"code","bd378711":"code","f37de95d":"code","8ba8da96":"code","1393fa77":"code","e7f3039f":"code","f87bd875":"code","10684298":"code","7c6aaf4d":"code","50a201b7":"code","cebe849d":"code","a973a98c":"code","ee4f1edb":"code","0c68a5cf":"code","6f93e161":"code","1112ce4a":"code","4c4c0e84":"code","29c5e096":"code","2f9a3f8f":"code","efcae7d0":"code","dcdf056c":"code","f8724408":"code","b5a2cb9a":"code","9e3b31b8":"code","8736deb5":"code","cd0f27fe":"code","6dc804c1":"code","d1cad05c":"code","0ef6ff1d":"code","d990c195":"code","478ec460":"code","e76b87b9":"code","a48dc239":"code","176c14cd":"code","7e55e6fc":"code","86fd50fd":"code","cf7111f1":"code","dc7e9cfb":"code","c6dc8fc3":"code","8df68691":"code","307de89c":"code","8bd32597":"code","64c8d8ff":"code","81cb5743":"code","4fc7f75f":"code","8e21560e":"code","a91a0254":"code","8411d01f":"code","e0a4ee3f":"code","f842fb3d":"code","b4f8b244":"code","795b2a0b":"code","449c5e83":"code","17b672eb":"code","dab90479":"code","c84c9770":"code","9e287edb":"code","2fda262b":"code","1326f17f":"code","3504220c":"code","3914e5ff":"code","434fb40e":"code","300f1789":"code","fc8556a1":"code","7771eaac":"code","a8fc3d5e":"code","a4c0bd7d":"code","07f54c09":"code","fdd7d73b":"code","6a00b27c":"code","a7d02d80":"code","90987bb1":"code","1b41cea4":"code","f5fac2a5":"code","eb6dfb56":"code","cd097ece":"code","629ce984":"code","5b6de787":"code","bb740736":"code","42e26fa4":"code","8a5912e9":"code","8e2ea138":"code","9ac0d6a5":"code","fa366369":"code","30dca556":"code","5b291a4f":"code","e21decb6":"code","0daf036b":"code","9f7b8935":"code","3183959b":"code","9d386f35":"code","e7117186":"code","ee8dcebc":"code","6e74ea8f":"code","b858341d":"code","47c228b3":"code","3674fe1e":"code","1f3f3faa":"code","0ed5873f":"code","f83b8b0e":"code","c2e8fe08":"code","e4f1b142":"code","23b8ac4a":"code","87bf7d88":"code","a48aa7dc":"code","2ec5ed06":"code","c64c25aa":"code","84945b90":"code","979180d8":"code","2b1326f3":"code","3e7b6755":"code","a089432d":"code","6923ee96":"code","6b4b8d6f":"code","d1779870":"code","8245f2e3":"code","080abf16":"code","929b8e68":"code","6e506445":"code","dcca6e07":"markdown","e5574ebd":"markdown","ad336703":"markdown","1d40a06b":"markdown","b4103a49":"markdown","9a85ab69":"markdown","717f0881":"markdown","1d285d12":"markdown","b9e7f44b":"markdown","ac40aab2":"markdown","cd872716":"markdown","d3dbcecb":"markdown","7d9023fe":"markdown","02d421ef":"markdown","db351c31":"markdown","43a70c96":"markdown","a06cbaf2":"markdown","d8b33ce4":"markdown","bf486e0e":"markdown","056283ba":"markdown","32f9d1a1":"markdown","db89272b":"markdown","39047f2e":"markdown","9074d1ba":"markdown","c9d5638b":"markdown","11a752cd":"markdown","d515c722":"markdown","3f081e6a":"markdown","92f0f71f":"markdown","8f4518c7":"markdown","57369146":"markdown","a799de52":"markdown","d6759afd":"markdown","3bc3a9a7":"markdown","7e3492b9":"markdown","524c3649":"markdown","a8691837":"markdown","ebf3a569":"markdown","5c66a4ec":"markdown","18124300":"markdown","91d6d267":"markdown","e7ea693d":"markdown","588b2a30":"markdown","10577efd":"markdown","74d0ac25":"markdown","e2cc745b":"markdown","bcb59686":"markdown","980aecdb":"markdown","7041a1b5":"markdown","ad51a950":"markdown","260e75d1":"markdown","0d27eea3":"markdown","bef79a50":"markdown","7ad3a811":"markdown","f18791d3":"markdown","d580b50f":"markdown","1bb83511":"markdown","f8b3e812":"markdown","45a50a2d":"markdown","2cd07e78":"markdown","6bdbdbb4":"markdown","ef60aa98":"markdown","a1eed683":"markdown","8e12f833":"markdown","494241d1":"markdown","fa2d7f50":"markdown","71c5fbfc":"markdown","5f91b104":"markdown","f404e777":"markdown","307f8869":"markdown","fa038be2":"markdown","8c47e7a5":"markdown","8acd39de":"markdown","16b96da4":"markdown","8f475044":"markdown","5036be19":"markdown","6877e485":"markdown","10cd28ca":"markdown","09ce7a3a":"markdown","d8ee50ae":"markdown","1f8b9b8c":"markdown","f182a169":"markdown","1e831be4":"markdown","cf450b79":"markdown","1b933b8d":"markdown","b5913b83":"markdown","7b85129a":"markdown","ca385cf3":"markdown","a61f98a5":"markdown","0b357775":"markdown","65125f44":"markdown","0a77329a":"markdown","ff7643a7":"markdown","64b4af59":"markdown","885611fc":"markdown","ffe40f12":"markdown","ba7111f1":"markdown","5a4b8c57":"markdown","ef70c8c4":"markdown","63490908":"markdown","8d5f1b6a":"markdown","5fab7e77":"markdown","ee66b5d4":"markdown","5a948ed6":"markdown","8ff01ae2":"markdown","89ba5f0a":"markdown","b503e3c1":"markdown","6980108d":"markdown","2b52d720":"markdown"},"source":{"941dbb95":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","dbce06f5":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.impute import KNNImputer\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom xgboost import XGBRegressor\n\n","8959000e":"df = pd.read_csv('\/kaggle\/input\/google-play-store-apps\/googleplaystore.csv')\ndf.head()","8cdbd38a":"df.info()","47dce916":"def num_plots(df, col, title, xlabel):\n    fig, ax = plt.subplots(2, 1, sharex=True, figsize=(8,5),gridspec_kw={\"height_ratios\": (.2, .8)})\n    ax[0].set_title(title,fontsize=18)\n    sns.boxplot(x=col, data=df, ax=ax[0])\n    ax[0].set(yticks=[])\n    sns.histplot(x=col, data=df, ax=ax[1])\n    ax[1].set_xlabel(xlabel, fontsize=16)\n    plt.tight_layout()\n    plt.show()","4fab6dac":"df = df.rename(columns=str.lower)","e8fe8fce":"df.columns","3ca48935":"df[df.duplicated(subset='app')]","2f685488":"df.drop_duplicates(subset='app', inplace=True, ignore_index=True)","993f286c":"df_clean = df.copy()","703ba96f":"print('Number of non numeric reviews :', len(df_clean) - df_clean.reviews.str.isnumeric().sum())","d39e75ad":"df[pd.to_numeric(df_clean.reviews, errors='coerce').isna()]","078cb144":"df.at[9300,'category'] = np.nan\r\ndf.at[9300,'rating'] = 1.9\r\ndf.at[9300,'reviews'] = 19.0\r\ndf.at[9300,'size'] = '3.0M'\r\ndf.at[9300,'installs'] = '1,000+'\r\ndf.at[9300,'type'] = 'Free'\r\ndf.at[9300,'price'] = 0\r\ndf.at[9300,'content rating'] = 'Everyone'\r\ndf.at[9300,'genres'] = np.nan\r\ndf.at[9300,'last updated'] = 'February 11, 2018'\r\ndf.at[9300,'current ver'] = '1.0.19'\r\ndf.at[9300,'android ver'] = '4.0 and up'\r\n","bd378711":"df_clean = df_clean.drop(9300)\ndf_clean = df_clean.reset_index(drop=True)","f37de95d":"print('Number of non numeric reviews :', len(df_clean) - df_clean.reviews.str.isnumeric().sum())","8ba8da96":"df_clean['reviews'] = df_clean['reviews'].astype('int64')","1393fa77":"df_clean['size']","e7f3039f":"df_clean[~df_clean['size'].str.contains('M', regex= True, na=False)].head()","f87bd875":"df_clean[~df_clean['size'].str.contains('[k,M,Varies with device]$', regex= True, na=False)].head()","10684298":"df_clean['size'] = df_clean['size'].replace('Varies with device', 'NaN', regex=True)","7c6aaf4d":"df_clean['size']","50a201b7":"size =[]\n\nfor i in df_clean['size']:\n    if i == 'NaN':\n        size.append('NaN')\n    elif i[-1] == 'k':\n        size.append(float(i[:-1])\/1000)\n    else:\n        size.append(float(i[:-1]))","cebe849d":"df_clean['size'] = size\ndf_clean['size'] = df_clean['size'].astype(float)\ndf_clean.rename(columns={df_clean.columns[4]:'size(MB)'}, inplace=True)","a973a98c":"df_clean.head()","ee4f1edb":"num_plots(df_clean,'size(MB)','App Size distribution','Size (MB)')","0c68a5cf":"print('Average app size is: ', df_clean['size(MB)'].mean())\nprint('Median app size is: ', df_clean['size(MB)'].median())\nprint('Mode app size is: ', df_clean['size(MB)'].mode()[0])","6f93e161":"num_plots(df_clean,'rating','App rating distribution','Rating')","1112ce4a":"print('Average app rating is: ', df_clean['rating'].mean())\nprint('Median app rating is: ', df_clean['rating'].median())\nprint('Mode app rating is: ', df_clean['rating'].mode()[0])","4c4c0e84":"df_clean[df_clean['rating'] <= 1.0]","29c5e096":"print('Apps with rating equal or lower than 1 star: ',len(df_clean[df_clean['rating'] <= 1.0]))","2f9a3f8f":"df_clean['price'].isnull().sum()","efcae7d0":"df_clean['price'] = df_clean['price'].str.replace('$','').astype(float)","dcdf056c":"df_clean['price'].value_counts()","f8724408":"print('Free apps are {}% of the total apps in the dataset'.format(np.round(len(df_clean[df_clean['price']==0])*100\/len(df_clean)),2))","b5a2cb9a":"num_plots(df_clean,'price','Price Distribution','price')","9e3b31b8":"num_plots(df_clean[(df_clean['price']>0) & (df_clean['price']<10)],'price','Price Distribution of apps between 0-10$','price')","8736deb5":"num_plots(df_clean[(df_clean['price']>10)],'price','Price Distribution of apps over 10$','price')","cd0f27fe":"df_clean[df_clean['price']>350]","6dc804c1":"df_clean[(df_clean['price']>50) & (df_clean['price']<350)]","d1cad05c":"print('Number of apps with price higher than 50$: ', len(df_clean.loc[df_clean['price']>50]))","0ef6ff1d":"df_clean = df_clean.loc[df_clean['price'] < 50]","d990c195":"num_plots(df_clean.loc[df_clean['price'] > 0],'price','Price Distribution of Paid Apps','price')","478ec460":"df_clean = df_clean.loc[df_clean['price']<20]","e76b87b9":"df_clean['installs']","a48dc239":"df_clean['installs'] = df_clean['installs'].str.replace('+','').str.replace(',','').astype(float)","176c14cd":"df_clean.rename(columns={df_clean.columns[5]:'Installs(+)'}, inplace=True)","7e55e6fc":"sns.kdeplot(x='Installs(+)', data=df_clean)","86fd50fd":"df_clean[df_clean['Installs(+)']> 0.8e9 ]","cf7111f1":"sns.boxplot(x='Installs(+)', data=df_clean)","dc7e9cfb":"def iqr_fence(x):\n    Q1 = x.quantile(0.25)\n    Q3 = x.quantile(0.75)\n    IQR = Q3 - Q1\n    Lower_Fence = Q1 - (1.5 * IQR)\n    Upper_Fence = Q3 + (1.5 * IQR)\n    u = max(x[x<Upper_Fence])\n    l = min(x[x>Lower_Fence])\n    return [u,l]","c6dc8fc3":"upper, lower = iqr_fence(df_clean['Installs(+)'])\nprint('Upper Fence:', upper)\nprint('Lower Fence:', lower)","8df68691":"print('Total apps', len(df_clean))\nno_installs = [1e9, 1e8, 1e7, 1e6, 1e5, 1e4, 1e3, 1e2, 1e1]\nfor n in no_installs:\n    print('Number of apps with less than ' + str(n) + ' installs:', len(df_clean.loc[df_clean['Installs(+)']<n]))","307de89c":"print('In total there are {} different app categories'. format(len(df_clean['category'].value_counts())))","8bd32597":"plt.subplots(figsize=(13,5))\nsns.countplot(x='category', data=df_clean, order = df_clean['category'].value_counts().index)\nplt.xticks(rotation=90);\nplt.xlabel('')\nplt.title('App category counts');","64c8d8ff":"df_clean[['category','genres']]","81cb5743":"sns.countplot(x='type', data=df_clean)\nplt.title('Paid vs Free apps')\nplt.xlabel('App type')\nplt.show()","4fc7f75f":"sns.countplot(x='content rating', data=df_clean)\nplt.title('Paid vs Free apps')\nplt.xticks(rotation=60)\nplt.show()","8e21560e":"fig, ax = plt.subplots(figsize=(8,4))\nax=sns.boxplot(x='content rating', y='rating', data=df_clean)\nax.set_title('Content rating vs rating')\nplt.show()","a91a0254":"fig, ax = plt.subplots(figsize=(8,4))\nax=sns.boxplot(x='content rating', y='Installs(+)', hue='type', data=df_clean)\nax.set_title('Installs(+) per content rating by type')\nax.set_yscale('log')\nplt.show()","8411d01f":"df_clean['genres'].value_counts()","e0a4ee3f":"sns.heatmap(df_clean.corr(), annot=True, cmap='Blues')\nplt.title('Correlation Matrix')\nplt.show()","f842fb3d":"df_clean['last updated']=pd.to_datetime(df_clean['last updated'])","b4f8b244":"plt.figure(figsize=(10,4))\nsns.histplot(x='last updated', data=df_clean)\nplt.show()","795b2a0b":"df_clean['last_up_year']=df_clean['last updated'].dt.year","449c5e83":"plt.figure(figsize=(10,4))\nsns.histplot(x='last_up_year', data=df_clean)\nplt.show()","17b672eb":"df_clean['current ver']","dab90479":"df_clean['current ver'] = df_clean['current ver'].replace('Varies with device', 'NaN', regex=True)","c84c9770":"df_clean['current ver'].value_counts()","9e287edb":"df_clean['current vers']=df_clean['current ver'].str.extract(r'^(\\d+).', ).astype(float)","2fda262b":"df_clean['current vers'].value_counts()","1326f17f":"sns.boxplot(x='current vers', data=df_clean.loc[df_clean['current vers']<100])\nplt.show()","3504220c":"sns.boxplot(x='current vers', data=df_clean.loc[df_clean['current vers']<10])\nplt.show()","3914e5ff":"print('Total apps', len(df_clean))\nprint('Number of apps with current version lower than 1000:', len(df_clean.loc[df_clean['current vers']<1000]))\nprint('Number of apps with current version lower than 100:', len(df_clean.loc[df_clean['current vers']<100]))\nprint('Number of apps with current version lower than 10:', len(df_clean.loc[df_clean['current vers']<10]))\nprint('Number of apps with current version lower than 6:', len(df_clean.loc[df_clean['current vers']<6]))","434fb40e":"df_clean=df_clean.drop('current ver', axis=1)","300f1789":"df_clean=df_clean.loc[df_clean['current vers']<6]","fc8556a1":"df_clean['android ver']","7771eaac":"df_clean['android vers']=df_clean['android ver'].replace('and up', '', regex=True)","a8fc3d5e":"df_clean.drop('android ver', axis=1,inplace=True)","a4c0bd7d":"df_clean['android vers'].value_counts()","07f54c09":"df_clean['android vers']=df_clean['android vers'].replace('Varies with device', '', regex=True).replace('W', '', regex=True).replace('', np.nan)\r\ndf_clean=df_clean.loc[df_clean['android vers'].str.contains(r'-') == False]","fdd7d73b":"df_clean['android vers']=df_clean['android vers'].str.strip()","6a00b27c":"df_clean['android vers'].value_counts()","a7d02d80":"df_clean['android vers'] = df_clean['android vers'].apply(lambda x: x[:3])","90987bb1":"sns.histplot(x='android vers', data=df_clean)\nplt.xticks(rotation=90);\nplt.title('Andoid Version Distributions over apps')\nplt.show()","1b41cea4":"df_clean['android vers_main']=df_clean['android vers'].str.extract(r'^(\\d+).', ).astype(float)","f5fac2a5":"df_clean['android vers_main'].value_counts()","eb6dfb56":"sns.histplot(x='android vers_main', data=df_clean)\nplt.xticks(rotation=90);\nplt.title('Main Andoid Version by apps')","cd097ece":"df_clean = df_clean.loc[(df_clean['android vers_main'] >= 3)]","629ce984":"df_clean.info()","5b6de787":"df_clean['android vers'] = df_clean['android vers'].astype(float)","bb740736":"sns.regplot(x='price', y='rating', data=df_clean)\nplt.title('Price VS Rating')\nplt.show()","42e26fa4":"sns.regplot(y='rating', x='reviews', data=df_clean)\nplt.title('No. Reviews VS Rating')\nplt.show()","8a5912e9":"plt.figure(figsize=(14,4))\nsns.boxplot(x='category', y='reviews', data=df_clean, hue='type')\nplt.yscale('log')\nplt.ylabel('')\nplt.xticks(rotation=90);\nplt.title('No. Reviews (log) vs Category')\nplt.show()","8e2ea138":"plt.figure(figsize=(14,4))\nsns.boxplot(x='category', y='rating', data=df_clean, hue='type')\nplt.xticks(rotation=90);\nplt.title('Rating vs Category')\nplt.ylabel('')\nplt.show()","9ac0d6a5":"plt.figure(figsize=(14,4))\nsns.boxplot(x='category', y='size(MB)', data=df_clean, hue='type')\nplt.xticks(rotation=90);\nplt.title('size vs category')\nplt.show()","fa366369":"sns.regplot(x='rating', y='size(MB)', data=df_clean)","30dca556":"sns.regplot(x='Installs(+)',y='reviews', data=df_clean)\r\nplt.yscale('log')\r\nplt.xscale('log')","5b291a4f":"df_clean.info()","e21decb6":"plt.figure(figsize=(8,4))\nsns.heatmap(df_clean.corr(), cmap='Blues', annot=True)\nplt.title('Correlation Matrix')","0daf036b":"df1=df_clean.copy()","9f7b8935":"df1=df1.drop(['app','last updated'], axis=1)","3183959b":"df1.info()","9d386f35":"df1.head()","e7117186":"df1.describe()","ee8dcebc":"df1['Installs(+)']=np.log(df_clean['Installs(+)'] + 1)","6e74ea8f":"sns.displot(df1['Installs(+)'])","b858341d":"df1.drop('android vers_main', axis = 1, inplace=True)","47c228b3":"df1['type'] = df1['type'].replace({'Free':0, \"Paid\":1})","3674fe1e":"df1.info()","1f3f3faa":"en = LabelEncoder()\ncatCols =  ['category','content rating','genres']\nfor cols in catCols:\n    df1[cols] = en.fit_transform(df1[cols])","0ed5873f":"df1.info()","f83b8b0e":"imputer = KNNImputer(n_neighbors=3)\ndf1 = pd.DataFrame(imputer.fit_transform(df1),columns = df1.columns)","c2e8fe08":"df1.info()","e4f1b142":"df1.head()","23b8ac4a":"X=df1.drop('rating', axis = 1).values","87bf7d88":"y=df1['rating'].values","a48aa7dc":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)","2ec5ed06":"scaler = MinMaxScaler()","c64c25aa":"scaler.fit(X_train)","84945b90":"X_train = scaler.transform(X_train)\r\nX_test = scaler.transform(X_test)            ","979180d8":"rf = RandomForestRegressor()","2b1326f3":"rf.fit(X_train,y_train)","3e7b6755":"y_pred_rf = rf.predict(X_test)","a089432d":"mse_rf = mean_squared_error(y_test, y_pred_rf)\r\nprint(\"RMSE using RF: \", np.sqrt(mse_rf))","6923ee96":"feature_name_list=df1.drop('rating', axis = 1).columns","6b4b8d6f":"rf.feature_names = feature_name_list","d1779870":"plt.barh(rf.feature_names,rf.feature_importances_)\r\nplt.xticks(rotation=90);\r\nplt.title('Feature Importance by Random Forest')\r\nplt.xlabel('Feature Importance (%)')","8245f2e3":"xgb = XGBRegressor(n_estimators=2000, learning_rate=0.01)\nxgb.fit(X_train, y_train) \ny_pred_xgb = xgb.predict(X_test) \nmse_xgb = mean_squared_error(y_pred_xgb, y_test)","080abf16":"xgb.feature_names = feature_name_list","929b8e68":"print(r\"RMSE with RF: {:.3f}\".format(np.sqrt(mse_rf)))\nprint(r\"RMSE with XGBoost: {:.3f}\".format(np.sqrt(mse_xgb)))","6e506445":"plt.barh(rf.feature_names,rf.feature_importances_, alpha=0.4, label='RF', color='red')\nplt.barh(xgb.feature_names,xgb.feature_importances_, alpha=0.4, label='XGBoost', color='blue')\nplt.legend(loc='upper right');\nplt.title('Feature Importance to predict Rating by ML models')\nplt.xlabel('Feature Importance (%)')\nplt.show()","dcca6e07":"Most of the apps installs are relative small compared to the maximum, which is around 1e9 (a billion).","e5574ebd":"We can see that different apps sizes have 'M' which stands for MB (Megabytes).<br>\nMoreover, there is also a size 'Varies with device', we will now investigate using regex if there are other non-numerical sizes.","ad336703":"## App price analysis","1d40a06b":"Mean, Median and Mode can be computed as follows:","b4103a49":"We can see that the category where apps have a higher size are 'game', 'travel and local' (for paid apps only), education (for paid apps only) and family.<br>\r\nIn particular, free apps seems to have a higher size compared to paid apps for almost all categories.","9a85ab69":"## Categorical features Encoding","717f0881":"Are there duplicate values?","1d285d12":"We can see that apps with higher ratings have more possible sizes compared to apps with lower ratings (<3.0), where the size is almost always under 40 MB. ","b9e7f44b":"## Category analysis","ac40aab2":"We will remove 'and up' from every rows.","cd872716":"From this plot we can see a slight positive trend between price and rating: apps with higher prices tends to be slightly higher rated.","d3dbcecb":"There are 1181 duplicated apps apparently. They will be dropped.","7d9023fe":"'Adults only 18+' apps are more dense around 4-4.5 rating, whereas other apps have a higher variance, outliers and have at least some apps with rating=5","02d421ef":"![image.png](attachment:95dca130-c151-4b43-ac18-7bd6ac858cc8.png)","db351c31":"Moreover,can group these android versions by the main number: for example versions 4.0.3 and 4.1 will be labeled as '4' and so on for the different versions","43a70c96":"# Rating prediction Summary","a06cbaf2":"To better visualize the price distribution, we will separately analyze apps with a price lower than 10\\\\$ and apps with a price higher than 10\\\\$","d8b33ce4":"## Current version column analysis","bf486e0e":"## Android version","056283ba":"However, category is still missing and in the dataframe there are over 9000+ apps. For this reason, we will drop this row.","32f9d1a1":"There are some rows with missing values for rating and size. We can impute these quantites by KNNImputer later.","db89272b":"The project can be divided in the following sections:<br>\n- Dataset cleaning + Feature Engineering<br>\n- Exploratory Data Analysis: answering interesting questions about the data<br>\n- Data preparation for ML (encoding, scaling) for Rating prediction<br>\n- ML modeling<br>\n- Results<br>","39047f2e":"# Q3 Which category has more reviews?","9074d1ba":"There is a quite high positive correlation between installs and reviews. This means that apps with higher reviews have more installs.","c9d5638b":"Finally we can impute the missing values in rating and size by KNNImputer!","11a752cd":"# Categorical Features Cleaning and Analysis","d515c722":"What is the distribution of the paid apps?","3f081e6a":"There are a lot of possible current versions among the apps in the store.<br>\r\nTo simplify the further analysis, we will approximate the current version with just the first number of the version.","92f0f71f":"There are no missing values in the price column","8f4518c7":"It looks like they are slightly different","57369146":"The apps with most installs are famous social network apps like Facebook, Instagram and Google apps.","a799de52":"Most of the apps have size lower than 20, and some apps have sizes around 100MB!","d6759afd":"Among these apps, there is still one meme app 'I am rich VIP', while the others looks to be 'serious apps'. However, these apps do not have any reviews or rating.","3bc3a9a7":"We will remove the '+' from the rows and add it to the feature name!","7e3492b9":"From this plot we can see that free apps have more installs compared to paid apps and that apps for Everyone10+ have more installs.","524c3649":"We can see that by considering only apps with a version number lower than 100, we already have lots of outliers.","a8691837":"# Q4 Which category has higher rating?","ebf3a569":"**Thanks for reading my notebook ! Let me know with a comment if you have any questions or if you want me to check out your works ! :)**","5c66a4ec":"Most of the apps have rating around 4.2. We can also see that some apps have 1 star rating, which are those apps?","18124300":"According to the boxplot, we could consider apps with a version higher than 6 as outliers.","91d6d267":"## Reviews column cleaning","e7ea693d":"Moreover, we will define a custom function to get boxplot and histogram for numerical features.","588b2a30":"The following project is about the analysis of a dataset contaning data about google play store in order to find interesting insights and predict the app rating based on some app features.","10577efd":"Most apps have been recently updated recently (wrt dataset publication). There are also apps that have been last updated before 2014.<br>\r\nMoreover, we extract the year from this feature, since it could be interesting to analyze.","74d0ac25":"## App type (free or paid)","e2cc745b":"We can subsitute subversions such as 4.0.3, 2.3.3 and 2.0.1 with 4.0, 2.3 and 2.0 respecitvely.","bcb59686":"We can see that there are quite few apps with just 10 or 100 reviews.","980aecdb":"We will now check if there are other strings or characters besides k, M and 'Varies with device'.","7041a1b5":"For what concerns Content Rating and Genres, we will encode them by label encoder, since OHE will create too many columns.","ad51a950":"We can confirm the great majority of free apps in the store. However, there are some apps with a price over 50\\\\$, and some of them even cost 400\\\\$!","260e75d1":"The most popular categories are family, game and tools","0d27eea3":"It looks like some apps have very high numbers as the version first number... this sounds weird, probably the authors did this a joke.","bef79a50":"It looks like there are some apps with multiple genres as well.","7ad3a811":"Now, we will convert the sizes to KB and MB.","f18791d3":"First, we will label the the size values that corresponds to Varies with device with 'NaN'","d580b50f":"We can clearly see the benefit of the log transform, now it looks more like a normal distrbution.","1bb83511":"## App Rating analysis","f8b3e812":"To improve the ML algorithm prediction performance, we will log-transform the column 'Installs(+)', in order to make it more 'Normal'.\nIn particular, we should transform it with log(x+1) transform, since there are apps with 0 installs.","45a50a2d":"We can see that we still need to do some cleaning on this column.\r\nIn particular we will remove 'varies with device', the 'w' which appears in 4.4w and remove the few data where the android version compatible is within a range such as '5.0 - 7.1.1 '.","2cd07e78":"### Which are the apps with these high numbers of installs?","6bdbdbb4":"This data looks a bit weird, all the columns have apperently wrong entries. It can be corrected as follows:","ef60aa98":"We can see that the lower fence is 0 installs, while the higher fence is 1 million installs.","a1eed683":"## App install","8e12f833":"We will remove apps with a price over 50 dollars, since there are very few of them and make the distribution of price heavily right skewed: they can be considered as outliers.","494241d1":"It is becoming difficult to visualize the box fences! We'll define a function to obtain them","fa2d7f50":"From this plot we can see that in most categories, paid apps have higher rating than free apps. In particular it is also interesint to notice that free apps have lots of outlier values compared to paid apps.","71c5fbfc":"### Is there any difference between the category column and genres?","5f91b104":"The distribution of app size is a right skewed long tail.","f404e777":"Now the review column will be converted into int64 data type","307f8869":"# *Main results Summary*","fa038be2":"From this plot we can see that apps with more installs tends to have more reviews","8c47e7a5":"# Q2 Do apps with high rating have more reviews?","8acd39de":"## Content rating","16b96da4":"OK, the sizes are either in KB (k), MB(M) or Varies with device","8f475044":"# App rating prediction","5036be19":"Before starting the analysis of each feature, we will change the columns names to lower case","6877e485":"# Q7 Is there any relationship between No. Installs and Reviews?","10cd28ca":"## XGBoost","09ce7a3a":"Moreover, we can drop the column 'android ver_main' and keep 'android vers' only.","d8ee50ae":"In this section, some basic cleaning will be performed, then every feature will be analyzed.","1f8b9b8c":"What about the other apps which cost more than 50\\\\$ but less than 350\\\\$?","f182a169":"Are all the reviews actually numbers?","1e831be4":"By considering only apps with version lower than 10 we can start understanding the version feature distribution","cf450b79":"We can also change the type of andoid vers to float64:","1b933b8d":"We can see a positive trend between rating and number of reviews: apps with more reviews tends to have higher rating.","b5913b83":"# Numerical Features Cleaning and Analysis","7b85129a":"We can see that different entries have 'Varies with device' as size. Moreover, some apps have a size in KB (labeled as 'k').","ca385cf3":"In the following, we will try to answer some questions by analyzing the data.","a61f98a5":"There are some apps with a price close to 400$, let's investigate more.","0b357775":"# Q1 Do expensive apps have higher rating?","65125f44":"We can already notice that some columns that should be 'Numerical' are labeled as objects (strings).<br>\r\nWe will work on this and convert these columns into numerical.","0a77329a":"## Last updated","ff7643a7":"We can see that RF and XGBoost gave similar results in terms of RMSE.<br>\nFor what concerns the Feature importance, we can see that RF gave more importance to reviews and size, while XGBoost spreaded more the feature importance among all the features.","64b4af59":"We can better visualize the situation here. We can see that the great majority of apps have been updated recently (2018).","885611fc":"## App size column cleaning and analysis","ffe40f12":"## App Genres column analysis","ba7111f1":"# Q5 Is there any relationship between the category and app size?","5a4b8c57":"By looking at this plot, we decide to only consider apps with a price lower than 20\\\\$. We will drop apps with a price higher than 20\\\\$.","ef70c8c4":"# Q6 Is there any relationship between app rating and size?","63490908":"We can see that most of the apps are free!<br>","8d5f1b6a":"Most of the apps are free, as we saw during the price column analysis","5fab7e77":"Most of the apps are for everyone","ee66b5d4":"First, we replace Free and paid with 0 and 1 respecitvely in the price column.","5a948ed6":"We drop the categorical 'current ver' column, and we consider only apps with a current version lower than 6.","8ff01ae2":"We still have a right skewed distribution, but we can see the median and the IQR in the boxplot now!","89ba5f0a":"We can see that apps with the category game, entertainment, education and photography have more reviews than apps of other categories.<br>\r\nIn particular, free apps seems to have more reviews than paid apps for most categories, with the exception of business and weather, there paid apps have more reviews overall.","b503e3c1":"Moreover, we will define a copy of the original dataframe without eventual outlier called 'df_clean'.","6980108d":"It looks like there is a not numeric review, which is it?","2b52d720":"It looks like these apps are 'meme apps'. They do not do anything. They just cost a lot of money."}}