{"cell_type":{"7bba251f":"code","0c4cf3e1":"code","9dea9eb0":"code","74ad5e22":"code","d603b5c9":"code","e6a2fae1":"code","f0871611":"code","2281d6f5":"code","97d57acd":"code","7b5ee2ed":"code","1dddc33b":"code","9c4a4ee4":"code","bacd8424":"code","e10cbf8c":"code","cfe57efb":"code","f9bee8a3":"code","b9e82bbf":"code","a93d37ba":"code","e734a11e":"code","38c210b9":"code","644fb422":"code","35b213fd":"code","21e0ed5a":"code","3aef6066":"code","b43d9496":"code","bc9d8185":"code","071a0926":"code","113c9528":"code","36e16262":"code","9412d797":"code","cdd7a949":"code","403d9107":"code","76620806":"code","4c625335":"code","abb1f78a":"code","61fca290":"code","9cbe4a53":"code","4c763104":"code","deebf974":"code","3f2053e8":"code","85e506de":"code","b6bdb737":"code","1af9021b":"code","6d915bc2":"code","b38e4fa2":"code","91fe1ab1":"code","2e17c946":"markdown","4c5079c4":"markdown","0a99d74e":"markdown","772fdd9d":"markdown","a2e06b7b":"markdown"},"source":{"7bba251f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n\nimport pandas as pd #data processing\nimport numpy as np #linear algebra\nimport matplotlib.pyplot as plt # Data visualization\nimport seaborn as sns #Data visualization\nimport math\nfrom mpl_toolkits.basemap import Basemap\nimport warnings\nwarnings.filterwarnings('ignore')\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0c4cf3e1":"#Read Data\ngtdata=pd.read_csv(\"\/kaggle\/input\/gtd\/globalterrorismdb_0718dist.csv\",encoding='ISO-8859-1')","9dea9eb0":"#Show top data rows\ngtdata.head()","74ad5e22":"#Renaming the columns\ngtdata.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','provstate':'state',\\\n                       'region_txt':'Region','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed',\\\n                       'nwound':'Wounded','summary':'Summary',\\\n                          'gname':'Group','targtype1_txt':'Target_type',\\\n                          'weaptype1_txt':'Weapon_type','motive':'Motive'},inplace=True)","d603b5c9":"#Read data with new column names\ngtdata=gtdata[['Year','Month','Day','Country','state','Region','city',\\\n               'latitude','longitude','AttackType','Target','Killed','Wounded',\n               'Summary','Group','Target_type','Weapon_type','Motive']]\ngtdata.head()","e6a2fae1":"#Show information about the data \ngtdata.info()","f0871611":"#Show the columns in the data\n\ngtdata.columns","2281d6f5":"#See the no of rows and columns in the data \ngtdata.shape","97d57acd":"#See the null values\n\ngtdata.isnull().sum()","7b5ee2ed":"#See the unique values in Country column\ngtdata.Country.unique()","1dddc33b":"#Show the data types of all the columns\ngtdata.dtypes","9c4a4ee4":"#Terrorist attacks by Year\nsns.set(font_scale=1.5)\nplt.figure(figsize=(20,10))\nsns.countplot(x=\"Year\",data=gtdata)\nplt.xlabel('')\nplt.ylabel('')\nplt.xticks(rotation=45)\nplt.title(\"Terrorist attacks by Year\")\nplt.tight_layout()\n\n","bacd8424":"#Terrorist attacks by Month\nsns.set(font_scale=1.5)\nplt.figure(figsize=(20,10))\nsns.countplot(x=\"Month\",data=gtdata)\nplt.xlabel('')\nplt.ylabel('')\nplt.xticks(rotation=45)\nplt.title(\"Terrorist attacks by Month\")\nplt.tight_layout()\n\n\n","e10cbf8c":"#Top 20 countries with highest crime rate\ntop_countries=gtdata.Country.value_counts(dropna=True)\nt=top_countries.head(20)\n\n","cfe57efb":"sns.set(font_scale=1.5)\nplt.figure(figsize=(16,10))\nsns.barplot(x=t.index,y=t.values,data=gtdata)\nplt.xlabel('Countries')\nplt.ylabel('')\nplt.xticks(rotation=45)\nplt.title(\"Top 20 countries with highest crime rate\",fontsize=20)\nplt.tight_layout()","f9bee8a3":"#Top 20 cities with highest crime rate\ntop_cities=gtdata.city.value_counts(dropna=True)\nt=top_cities.head(20)\nt","b9e82bbf":"#Visualize\nsns.set(font_scale=1.5)\nplt.figure(figsize=(16,10))\nsns.barplot(x=t.index,y=t.values,data=gtdata)\nplt.xlabel('City')\nplt.ylabel('')\nplt.xticks(rotation=45)\nplt.title(\"Top 20 cities with highest crime rate\",fontsize=20)\nplt.tight_layout()","a93d37ba":"#Show unique values of attacktype column\ngtdata.AttackType.unique()","e734a11e":"#Top attacks \ncnt=gtdata.AttackType.value_counts()\nc=cnt.head(10)\nc\n\n","38c210b9":"\nsns.set(font_scale=1.5)\nplt.figure(figsize=(12,10))\nsns.barplot(x=c.values,y=c.index,data=gtdata)\nplt.xlabel('')\nplt.ylabel('Attack Type 1')\nplt.xticks(rotation=45)\nplt.title(\"Top attacks\",fontsize=20)\nplt.tight_layout()\n\n","644fb422":"#Group with the most attacks\nu=gtdata.Group.value_counts()\nt1=u.head()\nprint( \"Group with the most attacks:\", u.index[1],\"and the count is :\", u.values[1])","35b213fd":"sns.set(font_scale=1.5)\nplt.figure(figsize=(10,8))\nsns.barplot(x=t1.values,y=t1.index,data=gtdata)\nplt.xlabel(\"Count\")\nplt.ylabel(\"Most attacks\")\nplt.title(\"Group with the most attacks:\")\nplt.xticks(rotation=45)\nplt.tight_layout()","21e0ed5a":"# Most no of attacks\nprint(\"Most Attack Types:\", gtdata['AttackType'].value_counts().idxmax())\n\n","3aef6066":"#Top 40 Worst Terror Attacks in History from 1982 to 2016\n\n\ngtdata['Wounded']=gtdata['Wounded'].fillna(0).astype(int)\ngtdata['Killed']=gtdata['Killed'].fillna(0).astype(int)\ngtdata['Casualities']=gtdata['Wounded']+ gtdata['Killed']\ngtdata1=gtdata.sort_values(by='Casualities',ascending=False)[:40]\nheat= gtdata1.pivot_table(index='Country',columns='Year',values='Casualities')\nheat.fillna(0,inplace=True)\n\n\n\nimport plotly.offline as py\n\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\ncolorscale = [[0, '#edf8fb'], [.3, '#00BFFF'],  [.6, '#8856a7'],  [1, '#810f7c']]\nheatmap=go.Heatmap(z=heat.as_matrix(), x=heat.columns, y= heat.index, colorscale=colorscale)\ndata=[heatmap]\nlayout=go.Layout(title=\"Top 40 Worst Terror Attacks in History from 1982 to 2016\",xaxis=dict(ticks='',nticks=20),\\\n                yaxis=dict(ticks=''))\nfig=go.Figure(data=data,layout=layout)\npy.iplot(fig, filename='heatmap',show_link=False)\n\n","b43d9496":"sns.set(font_scale=1.5)\nplt.figure(figsize=(18,10))\nsns.barplot(gtdata['Country'].value_counts()[:15].index,gtdata['Country'].value_counts()[:15].values,\\\n           palette='Blues_d')\nplt.xlabel(\"Countries\")\nplt.ylabel(\"Count\")\nplt.title(\"Top countries affected by Attacks\")\nplt.xticks(rotation=45)\nplt.tight_layout()","bc9d8185":"# History of worst terror attacks\n\n\ngtdata['Wounded']=gtdata['Wounded'].fillna(0).astype(int)\ngtdata['Killed']=gtdata['Killed'].fillna(0).astype(int)\ngtdata['Casualities']=gtdata['Wounded']+ gtdata['Killed']\ngtdata1=gtdata.sort_values(by='Casualities',ascending=False)[:40]\nheat= gtdata1.pivot_table(index='Country',columns='Year',values='Casualities')\nheat.fillna(0,inplace=True)\n\n\n\n","071a0926":"#Countries with most no of terror attacks ( not inlcuding Unknown)\ngtdata_bubble=gtdata[(gtdata['Group']!='Unknown')& (gtdata['Casualities']>50)]\ngtdata_bubble.sort_values(by='Casualities',ascending=False).head()","113c9528":"gtdata_bubble=gtdata_bubble.sort_values(['Region','Country'])","36e16262":"gtdata_bubble=gtdata_bubble.drop(['latitude','longitude','Target','Summary','Motive'],axis=1)","9412d797":"gtdata_bubble=gtdata_bubble.dropna(subset=['city'])","cdd7a949":"gtdata_bubble.isnull().sum()","403d9107":"#Top Five country those have suffered most attacks\ngtdata_bubble.Country.value_counts().head()","76620806":"\nhover_text=[]\nfor i,row in gtdata_bubble.iterrows():\n    hover_text.append(('City: {city}<br>'+\n                      'Group: {group}<br>'+\n                      'Casualities: {casualities}<br>'+\n                      'Year: {year}').format(city=row['city'],group=row['Group'],casualities=row['Casualities'],\n                                            year=row['Year']))\ngtdata_bubble['text']=hover_text","4c625335":"trace0=go.Scatter(\n\n    x=gtdata_bubble['Year'] [gtdata_bubble['Country']=='Iraq'],\n    y=gtdata_bubble['Casualities'] [gtdata_bubble['Country']=='Iraq'],\n    mode='markers',\n    name='Iraq',\n    text=gtdata_bubble['text'][gtdata_bubble['Country']=='Iraq'],\n    marker=dict(\n    \n        symbol='circle',\n        sizemode='area',\n        size= gtdata_bubble['Casualities'][gtdata_bubble['Country']=='Iraq'],\n        line=dict(width=2),\n    )\n    \n)\ntrace1=go.Scatter(\n\n    x=gtdata_bubble['Year'] [gtdata_bubble['Country']=='Afghanistan'],\n    y=gtdata_bubble['Casualities'] [gtdata_bubble['Country']=='Afghanistan'],\n    mode='markers',\n    name='Afghanistan ',\n    text=gtdata_bubble['text'][gtdata_bubble['Country']=='Afghanistan'],\n    marker=dict(\n    \n        symbol='circle',\n        sizemode='area',\n        size= gtdata_bubble['Casualities'][gtdata_bubble['Country']=='Afghanistan'],\n        line=dict(width=2),\n    )\n    \n)\ntrace2=go.Scatter(\n\n    x=gtdata_bubble['Year'] [gtdata_bubble['Country']=='Pakistan'],\n    y=gtdata_bubble['Casualities'] [gtdata_bubble['Country']=='Pakistan'],\n    mode='markers',\n    name='Pakistan',\n    text=gtdata_bubble['text'][gtdata_bubble['Country']=='Pakistan'],\n    marker=dict(\n    \n        symbol='circle',\n        sizemode='area',\n        size= gtdata_bubble['Casualities'][gtdata_bubble['Country']=='Pakistan'],\n        line=dict(width=2),\n    )\n    \n)\ntrace3=go.Scatter(\n\n    x=gtdata_bubble['Year'] [gtdata_bubble['Country']=='Nigeria'],\n    y=gtdata_bubble['Casualities'] [gtdata_bubble['Country']=='Nigeria'],\n    mode='markers',\n    name='Nigeria',\n    text=gtdata_bubble['text'][gtdata_bubble['Country']=='Nigeria'],\n    marker=dict(\n    \n        symbol='circle',\n        sizemode='area',\n        size= gtdata_bubble['Casualities'][gtdata_bubble['Country']=='Nigeria'],\n        line=dict(width=2),\n    )\n    \n)","abb1f78a":"data=[trace0,trace1,trace2,trace3]\nlayout=go.Layout(\n         title = 'Top 4 countries',\n         xaxis = dict(\n             title = 'Year',\n             \n             range = [1976,2016],\n             tickmode = 'auto',\n             nticks = 30,\n             showline = True,\n             showgrid = False\n             ),\n         yaxis = dict(\n             title = 'Casualities',\n             type = 'log',\n             range = [1.8,3.6],\n             tickmode = 'auto',\n             nticks = 40,\n             showline = True,\n             showgrid = False),\n         paper_bgcolor='rgb(243, 243, 243)',\n         plot_bgcolor='rgb(243, 243, 243)',\n         )\n\n","61fca290":"fig=go.Figure(data=data, layout=layout)\npy.iplot(fig,filename='Terrorism')","9cbe4a53":"# Which groups have attacked the most\ngtdata.Group.value_counts()[1:15]","4c763104":"gtdata_terror=gtdata[gtdata.Group.isin(['Taliban','Islamic State of Iraq and the Levant (ISIL)','Shining Path'])]\n\n","deebf974":"# In which country 'Taliban','Islamic State of Iraq and the Levant (ISIL)','Shining Path' has attacked the most\ngtdata_terror.Country.unique()","3f2053e8":"# Map countries with terror attacks using folium\n\ngtdata_Group = gtdata.dropna(subset=['latitude','longitude'])","85e506de":"gtdata_Group = gtdata_Group.drop_duplicates(subset=['Country','Group'])\n\n\n","b6bdb737":"terrorist_groups = gtdata.Group.value_counts()[1:8].index.tolist()\n\n","1af9021b":"\ngtdata_Group = gtdata_Group.loc[gtdata_Group.Group.isin(terrorist_groups)]\n\n","6d915bc2":"gtdata_Group.Group.unique()\n\n","b38e4fa2":"import folium\nfrom folium.plugins import MarkerCluster\nm1 = folium.Map(location=[20, 0], tiles=\"Stamenterrain\", zoom_start=2)\nmarker_cluster = MarkerCluster(\n    name='clustered icons',\n    overlay=True,\n    control=False,\n    icon_create_function=None\n)\nfor i in range(0,len(gtdata_Group)):\n    marker=folium.Marker([gtdata_Group.iloc[i]['latitude'],gtdata_Group.iloc[i]['longitude']]) \n    popup='Group:{}<br>Country:{}'.format(gtdata_Group.iloc[i]['Group'],\n                                          gtdata_Group.iloc[i]['Country'])\n    folium.Popup(popup).add_to(marker)\n    marker_cluster.add_child(marker)\nmarker_cluster.add_to(m1)\nfolium.TileLayer('openstreetmap').add_to(m1)\nfolium.TileLayer('Mapbox Bright').add_to(m1)\nfolium.TileLayer('cartodbdark_matter').add_to(m1)\nfolium.TileLayer('stamentoner').add_to(m1)\nfolium.LayerControl().add_to(m1)\nm1.save('Terrorist_Organizations_in_Country_cluster.html')","91fe1ab1":"m1","2e17c946":"**Please upvote if you like this kernel. It motivates me alot !!**","4c5079c4":"# Bubble Plot\n\n","0a99d74e":"# Data Visualization","772fdd9d":"# Data visualization using Plotly","a2e06b7b":"# How Global Terrorism affects the world?"}}