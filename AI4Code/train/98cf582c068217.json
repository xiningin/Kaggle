{"cell_type":{"36752d82":"code","ed2c5b07":"code","672767b8":"code","fd00e18c":"code","0d61cc65":"code","e4f76926":"code","4c50a0a9":"code","95860b0d":"code","2666bb0d":"code","a1636ef6":"code","0e08e030":"code","cf3d098e":"code","73a73e10":"code","d31372ef":"code","02c7e679":"code","2c78cb8d":"code","394e8b45":"code","b2f22edb":"code","8f9567d4":"code","6767da9c":"code","bab08f9a":"code","095aa299":"code","da1503a7":"code","9456dac3":"code","7da2d705":"code","b59b9284":"code","38679865":"code","ad57c4da":"code","db7b6379":"code","0f427b53":"code","618a37fe":"code","18719644":"code","d525c593":"code","443c59bc":"code","f863abee":"code","cbb104f9":"code","22f67a86":"code","e4374340":"code","fd1895a4":"code","c2ecd7a7":"code","5922795e":"code","e2998857":"code","2f97f36a":"code","b7097376":"code","7dea34d4":"code","37a3f93d":"code","5376f0f5":"code","8739dd77":"code","d2e2e289":"code","24e18a1e":"code","bca7d3a6":"code","3fd5c82c":"markdown","23c286f9":"markdown","345757ca":"markdown","6e954bf7":"markdown","c340c1e4":"markdown","73896e6f":"markdown","96cf16b1":"markdown","d65ada00":"markdown","17631968":"markdown","b3345f38":"markdown","7e9102f7":"markdown","5ed4f4ae":"markdown","d9050569":"markdown","beea1f80":"markdown","5c5039be":"markdown","92737a30":"markdown"},"source":{"36752d82":"import pandas as pd \nimport numpy as np","ed2c5b07":"train=pd.read_csv(\"..\/input\/train.csv\")\ntest=pd.read_csv(\"..\/input\/test.csv\")","672767b8":"train.head()","fd00e18c":"train.drop(['Name'],axis=1,inplace=True)","0d61cc65":"train.head()","e4f76926":"train.columns","4c50a0a9":"train.index","95860b0d":"sample_sub=pd.read_csv(\"..\/input\/gender_submission.csv\")","2666bb0d":"sample_sub.head()","a1636ef6":"train.head()","0e08e030":"test.head()","cf3d098e":"test.drop(['Name'],axis=1,inplace=True)","73a73e10":"test.head()","d31372ef":"train.isnull().sum()","02c7e679":"train.index","2c78cb8d":"test.isnull().sum()","394e8b45":"train.drop(['Cabin'],axis=1,inplace=True)\ntest.drop(['Cabin'],axis=1,inplace=True)\ntest.drop(['Ticket'],axis=1,inplace=True)\ntrain.drop(['Ticket'],axis=1,inplace=True)\ntrain.drop(['PassengerId'],axis=1,inplace=True)\ntest.drop(['PassengerId'],axis=1,inplace=True)","b2f22edb":"test.head()","8f9567d4":"train.head()","6767da9c":"import seaborn as sns\nsns.countplot(x='Survived',hue='Sex',data=train)","bab08f9a":"sns.countplot(x='Survived',hue='Parch',data=train)","095aa299":"sns.countplot(x='Survived',hue='SibSp',data=train)","da1503a7":"sns.countplot(x='Survived',hue='Pclass',data=train)","9456dac3":"train.isnull().sum()","7da2d705":"test.isnull().sum()","b59b9284":"train['Age'].mean()","38679865":"train['Age'].fillna((train['Age'].mean()), inplace=True)","ad57c4da":"test['Age'].fillna((test['Age'].mean()), inplace=True)","db7b6379":"test['Fare'].fillna((test['Fare'].mean()), inplace=True)","0f427b53":"train.dropna()","618a37fe":"test.isnull().sum()","18719644":"train.columns","d525c593":"train.head()","443c59bc":"test.head()","f863abee":"Pclass=pd.get_dummies(train['Pclass'],drop_first=True)\nPclass1=pd.get_dummies(test['Pclass'],drop_first=True)\nSex=pd.get_dummies(train['Sex'],drop_first=True)\nSex1=pd.get_dummies(test['Sex'],drop_first=True)\nEmbarked=pd.get_dummies(train['Embarked'],drop_first=True)\nEmbarked1=pd.get_dummies(test['Embarked'],drop_first=True)","cbb104f9":"train=pd.concat([train,Pclass,Sex,Embarked],axis=1)\ntest=pd.concat([test,Pclass1,Sex1,Embarked1],axis=1)","22f67a86":"train.drop(['Sex','Embarked','Pclass'],axis=1,inplace=True)\ntest.drop(['Sex','Embarked','Pclass'],axis=1,inplace=True)","e4374340":"train.head()","fd1895a4":"test.head()","c2ecd7a7":"sample_sub.head()","5922795e":"y=train['Survived']","e2998857":"y.head()","2f97f36a":"X=train.drop('Survived',axis=1)","b7097376":"X.head()","7dea34d4":"from sklearn.preprocessing import StandardScaler\n\nsc = StandardScaler()\nX = sc.fit_transform(X)\ntest = sc.fit_transform(test)","37a3f93d":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense","5376f0f5":"# Initialising the NN\nmodel = Sequential()\n\n# layers\nmodel.add(Dense(9, kernel_initializer = 'uniform', activation = 'relu', input_dim = 9))\nmodel.add(Dense(9, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dense(5, kernel_initializer = 'uniform', activation = 'relu'))\nmodel.add(Dense(1, kernel_initializer = 'uniform', activation = 'sigmoid'))\n\n# summary\nmodel.summary()","8739dd77":"model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","d2e2e289":"model.fit(X, y, batch_size = 32, nb_epoch = 100)","24e18a1e":"y_pred = model.predict(test)\ny_final = (y_pred > 0.5).astype(int).reshape(test.shape[0])","bca7d3a6":"sample_sub['Survived']= y_final\nsample_sub.to_csv(\"submit.csv\", index=False)\nsample_sub.head()","3fd5c82c":"### Dropping columns with too much null values and non required data","23c286f9":"### Joining newly created dummy data columns ","345757ca":"#### Dropping null values from train","6e954bf7":"### Please comment how to improve the accuracy i am new ","c340c1e4":"### Checking for null values","73896e6f":"If anyone is having this project as their first project , i highly recommend to go through my other kernel and upvote if you like , and feel free to ask any questions in comment section :)\n\nhttps:\/\/www.kaggle.com\/iluvmahheart\/simple-beginner-titanic-survival-prediction","96cf16b1":"### Imports","d65ada00":"### Transforming instead of skewing","17631968":"### Dropping old columns","b3345f38":"## Simple Beginner kernel using Neural Network","7e9102f7":"## Creating Neural Network","5ed4f4ae":"### transformation","d9050569":"### Visualization","beea1f80":"#### Separating X and y","5c5039be":"### Replacing null values by mean of the vaues of column data","92737a30":"## Predicting "}}