{"cell_type":{"11c45d44":"code","013fea6f":"code","5d0e13b7":"code","61d7bf43":"code","1844b92a":"code","e6acb444":"code","bcaea4fa":"code","e09003d8":"code","23bceac1":"code","22453b3c":"code","85e2b94f":"code","5b988159":"code","d33f16ab":"code","c1cf1c8d":"code","461a8835":"code","964aa9de":"code","759190b1":"markdown","a34c2a33":"markdown","b59c751a":"markdown","adf378f6":"markdown","c74273c2":"markdown","301f5ab6":"markdown","cb47c104":"markdown"},"source":{"11c45d44":"%matplotlib inline\nimport numpy as np \nimport pandas as pd \nimport os\nimport matplotlib.pyplot as plt\nsize=15\nparams = {'legend.fontsize': 'large',\n          'figure.figsize': (20,8),\n          'axes.labelsize': size,\n          'axes.titlesize': size,\n          'xtick.labelsize': size*0.75,\n          'ytick.labelsize': size*0.75,\n          'axes.titlepad': 25,\n          'font.size':18\n         \n         }\nplt.rcParams.update(params)\n\nplt.style.use('seaborn-whitegrid')\npaths = []\n","013fea6f":"df = pd.read_csv('\/kaggle\/input\/windows-store\/msft.csv')\ndf.dropna(inplace=True)","5d0e13b7":"df.head(10)","61d7bf43":"index = df.index\nnum_of_rows = len(index)\nnum_of_rows","1844b92a":"free_apps=(df[\"Price\"] == 'Free').sum() \/ num_of_rows * 100\npaid_apps = (df[\"Price\"] != \"Free\").sum() \/ num_of_rows*100","e6acb444":"fig, ax = plt.subplots(figsize=(10, 10), subplot_kw=dict(aspect=\"equal\"))\n\n\ndata = [free_apps,paid_apps]\nlabels = [\"Free Apps\",\"Paid Apps\"]\n\ndef func(pct):\n\n    return \"{:.1f}%\".format(pct)\n\n\nwedges, texts, autotexts = ax.pie(data, autopct=lambda pct: func(pct),\n                                  textprops=dict(color=\"w\"))\n\nax.legend(wedges, labels,\n          title=\"Distribution of Apps Price\",\n          loc=\"center\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\nplt.setp(autotexts, size=20, weight=\"bold\")\n\nax.set_title(\"Distribution of Apps Price\")\n\nplt.show()","bcaea4fa":"categories = df[\"Category\"].unique()","e09003d8":"categories","23bceac1":"categories_dict = dict()\nfor item in categories:\n    categories_dict[item]= (df['Category'] == item).sum()","22453b3c":"categories_dict","85e2b94f":"values = list(categories_dict.values())\nlabels = list(categories_dict.keys())\nvalues","5b988159":"fig, ax = plt.subplots(figsize=(12, 10), subplot_kw=dict(aspect=\"equal\"))\n\ndef func(pct):\n\n    return \"{:.1f}%\".format(pct)\n\n\nwedges, texts, autotexts = ax.pie(values, autopct=lambda pct: func(pct),\n                                  textprops=dict(color=\"w\"))\n\nax.legend(wedges, labels,\n          title=\"Distribution of Categories\",\n          loc=\"center\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\nplt.setp(autotexts, size=20, weight=\"bold\")\n\nax.set_title(\"Distribution of  Categories\")\nplt.show()","d33f16ab":"years = [ '2011','2014','2015','2016','2017','2018','2019']","c1cf1c8d":"years_dict =dict()\nfor year in years:\n    years_dict[year] = (df['Date'].str.contains(year)).sum()\n    ","461a8835":"years_dict","964aa9de":"plt.pie(years_dict.values(),labels=years_dict.keys(),autopct=lambda pct: func(pct))\nplt.title(\"Year wise Distribution\")","759190b1":"# Inference\n\n - 97 % of the apps are free apps","a34c2a33":"# Inference\n\n  - Music Category has the nost. number of apps","b59c751a":"## Seeing the bare Data","adf378f6":"# Analysing Windows Store\n\nThis is an EDA on the Data of apps in the **Microsoft Windows Store** reviews are welcome .\n\n![Microsoft Store](https:\/\/cdn.pixabay.com\/photo\/2013\/02\/12\/09\/07\/microsoft-80658_1280.png)                     \n\n\n","c74273c2":"# Importing the necessary libraries","301f5ab6":"# Reading csv","cb47c104":"## Seeing the distribution of Free apps and Paid Apps"}}