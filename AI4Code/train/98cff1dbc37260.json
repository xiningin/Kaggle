{"cell_type":{"21ba8361":"code","699cbba6":"code","275305f6":"code","59aed183":"code","1501fa9b":"code","513790b7":"code","5812303b":"code","cde4ec0d":"code","1842a6da":"code","32582e0a":"code","1a4234fc":"code","6f9826fe":"code","34b468e4":"code","c2b36019":"code","89faaa95":"code","2e3d343c":"code","f96bc7ec":"code","96e6b2b1":"code","a3915676":"code","8ba49a67":"code","2b3b7800":"code","869a6348":"code","e2e5deaf":"code","6026ba7e":"code","897ed2d6":"code","308e429f":"code","38ccdce8":"code","726a6ea5":"code","1789cb8c":"markdown","1daaea4c":"markdown","056e92b4":"markdown","7430d6d6":"markdown","075c1d6c":"markdown","49d0ab9d":"markdown","e6ec8d10":"markdown","ac67d3d8":"markdown","0f6b10dc":"markdown"},"source":{"21ba8361":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","699cbba6":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","275305f6":"path_to_dist_info= \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/districts_info.csv\"\npath_to_prod_info= \"..\/input\/learnplatform-covid19-impact-on-digital-learning\/products_info.csv\"","59aed183":"dist_data= pd.read_csv(path_to_dist_info)\nprod_data= pd.read_csv(path_to_prod_info)","1501fa9b":"dist_data.head()","513790b7":"def range_changer(col_name):\n    '''\n    input: column from the dataset with shape [range[\n    return: the same column with shape [range]\n    '''\n    col = dist_data[col_name]\n    new_col = []\n    for i in range(len(col)):\n        if str(col[i])!= \"nan\":\n            dist_data[col_name].loc[i] = dist_data[col_name].loc[i][:-1]\n            dist_data[col_name].loc[i]= dist_data[col_name].loc[i]+ \"]\"","5812303b":"range_to_change= [\"pct_black\/hispanic\", \"pct_free\/reduced\", \"county_connections_ratio\",\n                     \"pp_total_raw\"]\ndist_data[\"pp_total_raw\"].loc[0]","cde4ec0d":"for change_col in range_to_change:\n    range_changer(change_col)","1842a6da":"dist_data.columns","32582e0a":"dist_data.dtypes","1a4234fc":"obj_data= dist_data.select_dtypes('object')\nfor obj_col in obj_data:\n    print(\"--------------------------------------------------------\")    \n    print(obj_col,\"uniques:\")\n    print(\"--------------------------------------------------------\")    \n    unq= dist_data[obj_col].unique()\n    for j in range(len(unq)):\n        print(unq[j])\n    print(\"\\n\")","6f9826fe":"feature_name= []\nnull_count= []\nfor i in dist_data.columns:\n    feature_name.append(i)\n    null_count.append(dist_data[i].isnull().sum())","34b468e4":"print(feature_name)","c2b36019":"fig = plt.figure()\nax = fig.add_axes([0,0,2,1])\nax.bar(feature_name,null_count)\nplt.title(\"Bar Chart that show how many null values each feature contains \",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#138FBD'})\nplt.show()","89faaa95":"dist_data.groupby(['state','locale'])['locale'].count().sort_values().plot.pie(figsize=(25,25))\nplt.title(\"Pie chart shows the frequance of every Locale in each State \",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#13BD6F'})","2e3d343c":"dist_data.groupby(['state','locale'])['state'].count().plot.barh(figsize=(15,15), color='#55FF06')\nplt.title(\"Bar chart shows the frequance of every Locale in each State \",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#581845'})","f96bc7ec":"dist_data.groupby(['locale','county_connections_ratio'])['locale'].count().plot.pie(figsize=(20,10))\nplt.title(\"Pie chart that show the county connections ration of each locale \",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#AAA119'})","96e6b2b1":"dist_data.groupby(['pct_black\/hispanic'])['locale'].value_counts().sort_index().plot.pie(figsize=(15,15), autopct=\"%1.1f%%\")\nplt.title(\"Pie chart that show the count of the ratio of black or hispanic students in each locale\",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#FFC300'})","a3915676":"dist_data.groupby(['state','locale'])['pct_black\/hispanic'].value_counts().sort_index().plot.bar(figsize=(25,8))\nplt.title(\"Bar chart that show the count of the ratio of black or hispanic students in each locale of each state\",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'blue'})","8ba49a67":"dist_data.groupby(['state','locale'])['pp_total_raw'].value_counts().sort_index().plot.bar(figsize=(20,8), color=\"#FF8606\")\nplt.title(\"Bar chart that show the count of the school expenditure for each locale of each state\",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#FF5733'})","2b3b7800":"prod_data","869a6348":"prod_data.shape","e2e5deaf":"prod_data.isnull().sum()","6026ba7e":"prod_data.dtypes","897ed2d6":"obj_data= ['Sector(s)', 'Primary Essential Function', 'Provider\/Company Name']\nfor obj_col in obj_data:\n    print(\"--------------------------------------------------------\")    \n    print(obj_col,\"uniques:\",(len(prod_data[obj_col].unique())))\n    print(\"--------------------------------------------------------\")    \n    unq= prod_data[obj_col].unique()\n    for j in range(len(unq)):\n        print(unq[j])\n    print(\"\\n\")","308e429f":"PEF_1st=[] #Primary Essential Function first layer\n\n#create a columns that change the values to LC, CM, SDO.\nfor i in prod_data['Primary Essential Function']:\n    if i != i:\n        PEF_1st.append(\"nan\")\n    elif (str(i[0])+str(i[1])) ==\"LC\":\n        PEF_1st.append(\"LC\")\n    elif (str(i[0])+str(i[1])) ==\"CM\":\n        PEF_1st.append(\"CM\")\n    elif (str(i[0])+str(i[1])) ==\"SD\":\n        PEF_1st.append(\"SDO\")\n        \nPEF_1st = np.array(PEF_1st).reshape(372,1) #convert list to array and reshape it.\nPEF_1st = pd.DataFrame(PEF_1st, columns=['PEF_1st']) # convert the array to data frame.\nprod_data=pd.concat([prod_data,PEF_1st],axis=1) #merge the columns to the product dataset","38ccdce8":"prod_data","726a6ea5":"prod_data.groupby(['Sector(s)','PEF_1st'])['PEF_1st'].count().sort_values().plot.barh(figsize=(20,5), color=\"#900C3F\")\nplt.title(\"Bar chart that show the count of the Primary Essential Function's first layer for each Sector\",\n         fontdict={'fontsize': 18, 'fontweight': 'bold', 'color':'#FF5733'})","1789cb8c":"\ud83e\udda0 Import Libraries\ud83d\uddc4 and Data\ud83d\udcbe","1daaea4c":" Districts Data Visualization","056e92b4":"Districts Data Exploration Report \ud83d\udcd1\n| Feature | Datatype | Null count |Uniques | Description | | :------------- | |:----- |:-----------|:-------------:| | district_id |int64 |0 |----------------|The unique identifier of the school district | | state |object |57 |Illinois\nUtah\nWisconsin\nNorth Carolina\nMissouri\nWashington\nConnecticut\nMassachusetts\nNew York\nIndiana\nVirginia\nOhio\nNew Jersey\nCalifornia\nDistrict_Of_Columbia\nMinnesota\nArizona\nTexas\nTennessee\nFlorida\nNorth Dakota\nNew Hampshire\nMichigan|The state where the district resides in\n\n23 states | | locale |object |57 | Suburb\nRural\nCity\nTown|National Center for Education Statistics (NCES) locale classification that categorizes U.S. territory | pct_black\/hispanic |object|57 |[0, 0.2]\n[0.2, 0.4]\n[0.4, 0.6]\n[0.6, 0.8]\n[0.8, 1] |Percentage of students in the districts identified as Black or Hispanic based on 2018-19 by NCES| | pct_free\/reduced |object |85 | [0, 0.2]\n[0.2, 0.4]\n[0.4, 0.6]\n[0.6, 0.8]\n[0.8, 1]|Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 by NCES| |county_connections_ratio |object |71 |[0.18, 1]\n[1, 2]|Percentage of students in the districts eligible for free or reduced-price lunch based on 2018-19 NCES data| |pp_total_raw |object |115 |[4000, 6000]\n[6000, 8000]\n[8000, 10000]\n[10000, 12000]\n[12000, 14000]\n[14000, 16000]\n[16000, 18000]\n[18000, 20000]\n[20000, 22000]\n[22000, 24000]\n[32000, 34000] |The expenditure data of school by school (using median)|","7430d6d6":"Product Data Exploration\ud83d\udd0d and Arrange\ud83e\udde9","075c1d6c":"Feature\tDatatype\tNull count\tUniques\tDescription\nLP ID\tint64\t0\t----------------\tThe unique identifier of the product\nURL\tobject\t0\t----------------\tWeb Link to the product\nProduct Name\tobject\t0\t372 Uniques\tName of the product\nProvider\/Company Name\tobject\t1\t291 Uniques\tName of the product provider\nSector(s)\tobject\t20\tPreK-12\nPreK-12; Higher Ed\nPreK-12; Higher Ed;\nCorporate\nCorporate\nHigher Ed; Corporate\tSector of education where the product is used\nPrimary Essential Function\tobject\t20\t36 Uniques\nLC = Learning & Curriculum\nCM = Classroom Management\nSDO = School & District Operations\tThe basic function of the product","49d0ab9d":"LearnPlatform COVID-19 Impact on Digital Learning\ud83d\ude37","e6ec8d10":"\u2699\ufe0fBuild a function that will change [range[ --> [range]","ac67d3d8":"\ud83e\udda0 Product Data Exploration Report \ud83d\udcd1[<iframe src=\"https:\/\/www.kaggle.com\/embed\/leventoz\/analyze-the-impact-of-covid-19-on-student-learning?cellId=36&cellIds=36&kernelSessionId=72172583\" height=\"300\" style=\"margin: 0 auto; width: 100%; max-width: 950px;\" frameborder=\"0\" scrolling=\"auto\" title=\"Analyze the impact of COVID-19 on student learning\"><\/iframe>](http:\/\/)","0f6b10dc":"\ud83e\udda0 Districts Data Exploration\ud83d\udd0d and Arrange\ud83e\udde9"}}