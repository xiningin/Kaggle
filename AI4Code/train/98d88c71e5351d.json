{"cell_type":{"c8a9131b":"code","8e476b7b":"code","ebef8e1e":"code","ac6c1b65":"code","aec8215b":"code","66f35c32":"code","ca13df93":"code","bb07485d":"code","8dede05b":"code","656d2a94":"code","cc1f4863":"code","2a14d6eb":"code","82ef1f3f":"code","6b3af166":"code","85a4ee27":"code","15fd0b5c":"code","b50f3249":"code","0caa49a9":"code","ba3e9252":"code","87317394":"code","5ae6186d":"code","4a1a700f":"markdown","bc45e550":"markdown","c61299c2":"markdown","e48948e1":"markdown","9e86c800":"markdown","2b21f211":"markdown","9f75b3c7":"markdown","251e3233":"markdown","4d509c20":"markdown","3b40ea33":"markdown","d7ad9c4d":"markdown","3a74ce00":"markdown","58f23a38":"markdown","08289973":"markdown","9184437b":"markdown","742cd138":"markdown","6f56c610":"markdown"},"source":{"c8a9131b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e476b7b":"import matplotlib\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\n%matplotlib inline\nimport statistics","ebef8e1e":"df=pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv',parse_dates=True)\ndf","ac6c1b65":"# information about the dataset\ndf.info()","aec8215b":"#collecting info about null values\ndf.isnull().sum()","66f35c32":"df.rating.unique()","ca13df93":"#Replacing the content of \"rating\" column to it's corresponding fullforms\n\ndf['rating'].replace({\n    'PG-13':'Above 13 years', \n    'TV-MA':'Adult',\n    'PG': 'Parental Guidance:Kids',\n    'TV-14':'Above 13 years',\n    'TV-PG':'Parental Guidance:Kids',\n    'TV-Y': 'Kids',\n    'TV-Y7': 'Kids above 7 years',\n    'R': 'Adult',\n    'TV-G':'Kids',\n    'G':'Kids',\n    'NC-17':'Adult',\n    '74 min':'Adult',\n    '84 min':'Adult',\n    '66 min':'Adult',\n    'UR':'Unrated',\n    'NR':'Unrated',\n    'TV-Y7-FV':'Kids above 7 years'\n},inplace=True)","bb07485d":"df.rating.unique()","8dede05b":"# Null values of \"country\" column replaced by the most common country\ndf.country=df['country'].fillna(df.country.mode())\n\n# Null values of \"duration\", \"director\" , \"cast\" , \"date_added\" replaced by \"Unavailable\"\ndf['date_added']=df['date_added'].fillna('Unavailable')\ndf['cast']=df['cast'].fillna('Unavailable')\ndf['director']=df['director'].fillna('Unavailable')\ndf['duration']=df['duration'].fillna('Unavailable')","656d2a94":"plt.figure(figsize=(10,6), dpi=100)\nplt.pie(df.type.value_counts(),labels=df.type.value_counts().index, autopct='%1.2f%%')\nplt.title('Movie vs TV Show')\nplt.show()","cc1f4863":"df['rating'].unique()","2a14d6eb":"count=pd.DataFrame(df['rating'].value_counts())\nfig,axes=plt.subplots(nrows=1,ncols=2,figsize=(10,6),dpi=100)\naxes[0].pie(df['rating'][df.type=='Movie'].value_counts(),labels=count.index,autopct='%1.2f%%' )\naxes[0].set_title('Movie')\naxes[1].pie(df['rating'][df.type=='TV Show'].value_counts(),labels=count.index,autopct='%1.2f%%' )\naxes[1].set_title('TV Show')\nplt.tight_layout()\nplt.show()","82ef1f3f":"n=df[list(map(lambda x:\"Crime\" in x, df.listed_in))]\nn.country.value_counts()","6b3af166":"df.duration.value_counts()","85a4ee27":"plt.figure(figsize=(10,6), dpi=100)\nplt.subplot(1,2,1)\nsns.barplot(x=df.duration[df.type=='Movie'].value_counts().index[0:10], y=df.duration.value_counts().value_counts().head(10))\nplt.title(\"Movie Duration\")\nplt.xticks(rotation=90)\nplt.subplot(1,2,2)\nsns.barplot(x=df.duration[df.type=='TV Show'].value_counts().index[0:10], y=df.duration.value_counts().value_counts().head(10))\nplt.title(\"TV Show duration\")\nplt.xticks(rotation=90)\nplt.show()","15fd0b5c":"# I have filterd out the year from the \"date_added\" column and stored the value in a new column named \"year_added\"\ndate=df.date_added\nyear=[]\nfor d in date:\n    year.append(d.split(\",\")) # splitting the value w.r.t. \",\" and appending the value in the list named year\nyear=pd.DataFrame(year)\ndf['year_added']=year[1]\ndf.head()","b50f3249":"df_movies=df[df.type=='Movie']\ndf_tv=df[df.type=='TV Show']\nright_movies=pd.DataFrame(df_movies.groupby('year_added').show_id.count())\nright_tv=pd.DataFrame(df_tv.groupby('year_added').show_id.count())\n\nplt.figure(figsize=(15,6), dpi=100)\nsns.lineplot(x=right_movies.index,y=right_movies.show_id, label='Movies', marker='o')\nsns.lineplot(x=right_tv.index,y=right_tv.show_id, label='TV',marker='o' )\nplt.title('Movie and TV Shows in Netflix through Years')\nplt.xlabel('Years')\nplt.ylabel('Totals Shows')\nplt.xticks(rotation=90)\nplt.show()\n","0caa49a9":"plt.figure(figsize=(10,6), dpi=100)\ndf['country'].value_counts().head(10)\nsns.barplot(x=df['country'].value_counts().index[0:10],y=df['country'].value_counts().head(10))\nplt.xticks(rotation=90)\nplt.title('Top 10 Countries')\nplt.xlabel('Country')\nplt.show()","ba3e9252":"# USA\nplt.figure(figsize=(20,20), dpi=100)\nplt.subplot(1,5,1)\nplt.pie(df[df.country=='United States'].type.value_counts(),labels=df[df.country=='United States'].type.value_counts().index, autopct='%1.2f%%')\nplt.title('USA')\n#India\nplt.subplot(1,5,2)\nplt.pie(df[df.country=='India'].type.value_counts(),labels=df[df.country=='India'].type.value_counts().index, autopct='%1.2f%%')\nplt.title('India')\n#United Kingdom\nplt.subplot(1,5,3)\nplt.pie(df[df.country=='United Kingdom'].type.value_counts(),labels=df[df.country=='India'].type.value_counts().index, autopct='%1.2f%%')\nplt.title('United Kingdom')\n#Japan\nplt.subplot(1,5,4)\nplt.pie(df[df.country=='Japan'].type.value_counts(),labels=df[df.country=='India'].type.value_counts().index, autopct='%1.2f%%')\nplt.title('Japan')\n#South Korea\nplt.subplot(1,5,5)\nplt.pie(df[df.country=='South Korea'].type.value_counts(),labels=df[df.country=='India'].type.value_counts().index, autopct='%1.2f%%')\nplt.title('South Korea')\nplt.show()","87317394":"top=df.country.value_counts().index[0:5]\nj=0\nfor i in top:\n    movies=df[(df.country==i)&(df.type=='Movie')]\n    tv_series=df[(df.country==i)&(df.type=='TV Show')]\n    oldest_movie=movies.loc[movies.release_year.idxmin(),:]\n    newest_movie=movies.loc[movies.release_year.idxmax()]\n    oldest_tv_series=tv_series.loc[tv_series.release_year.idxmin()]\n    newest_tv_series=tv_series.loc[tv_series.release_year.idxmax()]\n    print('''             ~~Country: {k}~~\\n\n    Oldest movie in Netflix : {a}(year:{b})\\n\n    Newest movie in Netflix: {c}(year:{d})\\n\n    Oldest TV Series in Netflix: {e}(year:{f})\\n\n    Newest TV Series in Netflix: {g}(year:{h})\\n\n    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    '''.format(a=oldest_movie['title'], b=oldest_movie['release_year'],\n               c=newest_movie['title'], d=newest_movie['release_year'], \n               e=oldest_tv_series['title'], f=oldest_tv_series['release_year'], \n               g=newest_tv_series['title'], h=newest_tv_series['release_year'],k=i ))\n","5ae6186d":"top=df.country.value_counts().index[0:5]\nfor i in top:\n    movies=df[(df.country==i)&(df.type=='Movie')]\n    tv_series=df[(df.country==i)&(df.type=='TV Show')]\n    print('''   ~~~Country: {c}~~~\\n\n    Number of movies in Netflix: {a}\\n\n    Number of TV series in Netflix: {b}\\n\n    '''.format(a=len(movies.title.unique()),b=len(tv_series.title.unique()),c=i))","4a1a700f":"#### Most of the TV series are of 1 season while most of the movies are of 90 minutes","bc45e550":"# Library","c61299c2":"# Analysing top 5 countries","e48948e1":"##### Columns  \"duration\" , \"director\" , \"cast\" , \"date_added\" , \"rating\" , \"country\" have null values ","9e86c800":"#### From the line graph above it is clear that the number of movies in Netflix was maximum on 2019 and for tv shows it was from 2019 to 2020","2b21f211":"### Oldest and newest, movies and tv shows","9f75b3c7":"### Total movies and tv shows of these countries","251e3233":"# Data Cleaning\n* Replaced content of \"rating\" column to it's corresponding fullforms\n* Null values of \"country\" column replaced by the most common country\n* Null values of \"duration\", \"director\" , \"cast\" , \"date_added\" replaced by \"Unavailable\"","4d509c20":"# Table of content:\n* Library\n* Data reading\n* Data cleaning\n* Data visualization \n* Top 5 countries analysis\n  1. Content type\n  2. Oldest & newest\n  3. Total of each content type","3b40ea33":"*In case we need to filter out data w.r.t a particular keyword of category, we can use this code*","d7ad9c4d":"#### Quantity of Movie (around 70%) is higher than TV shows (around 30%)","3a74ce00":"### Content type","58f23a38":"# Visualization of the data","08289973":"# Reading the data","9184437b":"#### The above pie charts clearly show the percentage of different types of content in Netflix w.r.t. the type (Movie & TV Show)","742cd138":"#### From the above figures we can see that in India movies are far more than TV shows, most probably because audiances are more inclined towards movie, while in UK the amount of movies and tv shows are almost same.  ","6f56c610":"I did a detailed exploratory data analysis of the Netflix data and found lot of insights from it.\n\n### Please feel free to comment if you have any suggestion or message for me. "}}