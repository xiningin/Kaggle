{"cell_type":{"1483c65b":"code","246c815a":"code","de6317dc":"code","47d31113":"code","a823eed0":"code","b3acc074":"code","d7e39b63":"code","d1d028b0":"code","1a2d1aae":"code","143ad1d6":"code","bef5692d":"markdown","906a3379":"markdown"},"source":{"1483c65b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","246c815a":"dateparse = lambda x: pd.datetime.strptime(x, '%d-%m-%Y %H:%M')\n\ndf=pd.read_csv(\"..\/input\/temperature-readings-iot-devices\/IOT-temp.csv\",parse_dates=['noted_date'], date_parser=dateparse)\ndf.head(-5)\n","de6317dc":"import matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n%matplotlib inline","47d31113":"print(\"Number of rows and columns in our data set : \",df.shape)\nprint(df.describe(include='all'))","a823eed0":"#print(df.loc[df['out\/in']==\"In\",:])\na=df.groupby('out\/in')\ndf.hist(column='temp')","b3acc074":"sns.countplot(df['out\/in'], palette='Set3')\n\ndf['out\/in'].value_counts()","d7e39b63":"df['out\/in'].value_counts().plot.pie()","d1d028b0":"\nax = sns.scatterplot(x=df.noted_date.dt.month, y=\"temp\", hue=\"out\/in\", data=df)\nplt.gcf().set_size_inches((10, 10)) #useful line to scale our plot    \n","1a2d1aae":"df.boxplot(column='temp',by=df.noted_date.dt.month)\nplt.gcf().set_size_inches((20, 20))","143ad1d6":"df[df[\"out\/in\"] == 'Out']\nout_df = df[df[\"out\/in\"] == 'Out']\n\ndataDailyAv = df.resample('D', how = 'mean',dayfirst=True)\n\n","bef5692d":"# Here is the end of the sheet.\nalthough, i am still working on it trying to plot the daily 'average' temp then show 2 different plots (1:In \/ 2:Out) \n*#any help is appreciated ;)*","906a3379":"# from this discription, we remarque that we have maximum temp = 51\u00b0C and minimum temp = 21\u00b0C !\nAlso, we could use : \n* MAX => print(max(df['temp']))\n* MIN => print(min(df['temp']))"}}