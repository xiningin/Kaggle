{"cell_type":{"f85c0c80":"code","43f43e13":"code","8dcd24d8":"code","66e7b42b":"code","4742ba25":"code","be9e0a21":"code","e2e4303a":"code","e3ca5f07":"code","dae52c3d":"code","26d76bd9":"code","1103f1a9":"code","7088c287":"code","f2f97b9d":"code","bd5b39e9":"code","0c04ff7a":"code","4f1dfaa4":"code","d3b3862a":"code","18254ce6":"code","be35b949":"code","13af282e":"code","8b216ebc":"code","cad44b05":"markdown","f8fb405b":"markdown","e1cb3a2f":"markdown","2cb608a1":"markdown","92773cec":"markdown","06ebb2c2":"markdown","5e181cd8":"markdown","a81370b0":"markdown","abf8d20c":"markdown","1fa3eee5":"markdown","564bd60c":"markdown","3bf47b24":"markdown","b898e0b8":"markdown","da91a6c5":"markdown","2a67ea4f":"markdown","0a6b5733":"markdown","08d8bb5b":"markdown","c4533a97":"markdown","4a580ac5":"markdown","38cacea7":"markdown","58e12252":"markdown","f1a8a959":"markdown"},"source":{"f85c0c80":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_theme()\npd.set_option('max_columns',23)\npd.set_option('max_rows',123)\nimport matplotlib.gridspec as gridspec\nimport warnings\nwarnings.filterwarnings(\"ignore\")","43f43e13":"df = pd.read_csv('\/kaggle\/input\/students-performance-in-exams\/StudentsPerformance.csv')","8dcd24d8":"df.head()","66e7b42b":"df.info()","4742ba25":"df.describe()","be9e0a21":"passing_threshold = 35\n\ndf['Math_Result'] = np.where(df['math score']>=35,'Pass','Fail')\ndf['reading_Result'] = np.where(df['math score']>=35,'Pass','Fail')\ndf['writing_Result'] = np.where(df['math score']>=35,'Pass','Fail')\n\ndf.columns\ndf['Result'] = df.apply(lambda x: 'Passed' if x['Math_Result'] == 'Pass' and x['reading_Result'] == 'Pass' and x['writing_Result'] == 'Pass' else 'Failed'\n                        ,axis=1)","e2e4303a":"#students marks plot\nplt.figure(figsize=(10,7))\nplt.suptitle('Density Plot of Marks',fontsize=18)\n\nsns.kdeplot(x=df['math score'],shade=True,alpha=.3,palette='crest',label='math score',linewidth=0)\nsns.kdeplot(x=df['reading score'],shade=True,alpha=.3,palette='crest',label='reading score',linewidth=0)\nsns.kdeplot(x=df['writing score'],shade=True,alpha=.3,palette='crest',label='writing score',linewidth=0)\n\nplt.legend()\nplt.xlabel('Marks')","e3ca5f07":"fig = plt.figure(figsize=(15,5))\ngrid = gridspec.GridSpec(1,4)\ngrid.update(wspace=0.4)\nlis = ['Math_Result','reading_Result','writing_Result','Result']\nfor indx,i in enumerate(lis):\n    ax=plt.subplot(grid[0,indx])\n    sns.countplot(data=df,x=i,ax=ax)","dae52c3d":"#cats X Result countplot\n\ncats = [col for col in df.columns if df[col].dtype =='object']\nnums = [col for col in df.columns if df[col].dtype =='int64']\n\n\npltcats =  cats[:4]\nfor indx,cat in enumerate(pltcats):\n        \n    rt = sns.countplot(data=df,x=cat,hue='Result')\n\n    text_ln = len(str(rt.get_xticklabels()[0]))\n    if text_ln > 25:\n        rt.set_xticklabels(rt.get_xticklabels(),rotation = 30)\n    else:\n        pass\n    plt.show()","26d76bd9":"df.columns\ndf['Total_marks'] = df['math score'] + df['reading score'] + df['writing score']\ndf['Percentage'] = df['Total_marks']\/3","1103f1a9":"def Grading(per,result):\n    if result=='Failed':\n        return 'F'\n    elif per>90:\n        return 'A1'\n    elif per>83:\n        return 'A2'\n    elif per>75:\n        return 'B1'\n    elif per>67:\n        return 'B2'\n    elif per>59:\n        return 'C1'\n    elif per>51:\n        return 'C2'\n    elif per>43:\n        return 'D1'\n    elif per>35:\n        return 'D2'\n    \ndf['Grading'] = df.apply(lambda x: Grading(x['Percentage'],x['Result']),axis=1)    ","7088c287":"def colorrow(x):\n    length = x.shape[0]\n    if x['Result'] == 'Failed':\n        return [''] * (length-1) + ['background-color: #FF4A35']\n    elif x['Result'] == 'Passed':\n        return [''] * (length-1) + ['background-color: #A6FF57'] \n\ndf.head(20).style.apply(colorrow,axis=1)","f2f97b9d":"def colorrow(x):\n    length = x.shape[0]\n    if x['Result'] == 'Failed':\n        return ['background-color: #FF4A35'] * length\n    elif x['Result'] == 'Passed':\n        return ['background-color: #A6FF57'] * length\n\ndf.head(20).style.apply(colorrow,axis=1)","bd5b39e9":"#grading plot with numeric features\n\nfor i in nums:\n    plt.figure(figsize=(16,8))\n    sns.swarmplot(data=df,x='Grading',y=i)\n    plt.show()","0c04ff7a":"g = sns.FacetGrid(data=df,row='Grading',col='gender')\ng.map(sns.histplot, 'math score')","4f1dfaa4":"useful_cats = cats[:5]\nrow = len(useful_cats)\ncol = len(nums)\n\n#this is my secound EDA dataset and i have gone through the seaborn and matplotlib.pyplot Api and made this code snippet.\nfig, ax = plt.subplots(row,col,figsize=(32,28))\n\nplt.subplots_adjust(wspace=0.2,hspace=0.4)\nplt.suptitle('Strip Plot of Categorical Features with Continuous Features',y=0.9,fontsize=20)\nfor roww,cat in enumerate(useful_cats):\n    for coll,num in enumerate(nums):\n        rt = sns.stripplot(data = df,y=num,x=cat,ax=ax[roww][coll])\n        \n        text_ln = len(str(rt.get_xticklabels()[0]))\n        if text_ln > 25:\n            rt.set_xticklabels(rt.get_xticklabels(),rotation = 30)\n        else:\n            pass","d3b3862a":"fig, ax = plt.subplots(row,col,figsize=(30,32))\n\nplt.subplots_adjust(wspace=0.2,hspace=0.4)\nplt.suptitle('Box Plot of Categorical Features with Continuous Features',y=0.9,fontsize=20)\nfor roww,cat in enumerate(useful_cats):\n    for coll,num in enumerate(nums):\n        rt = sns.boxplot(data = df,y=num,x=cat,ax=ax[roww][coll])\n        \n        text_ln = len(str(rt.get_xticklabels()[0]))\n        if text_ln > 25:\n            rt.set_xticklabels(rt.get_xticklabels(),rotation = 30)\n        else:\n            pass","18254ce6":"fig, ax = plt.subplots(row,col,figsize=(32,32))\n\nplt.subplots_adjust(wspace=0.2,hspace=0.4)\nplt.suptitle('Violin Plot of Categorical Features with Continuous Features',y=0.9,fontsize=20)\nfor roww,cat in enumerate(useful_cats):\n    for coll,num in enumerate(nums):\n        rt = sns.violinplot(data = df,y=num,x=cat,ax=ax[roww][coll])\n        \n        text_ln = len(str(rt.get_xticklabels()[0]))\n        if text_ln > 25:\n            rt.set_xticklabels(rt.get_xticklabels(),rotation = 30)\n        else:\n            pass","be35b949":"fig, ax = plt.subplots(2,3,figsize=(18,8))\n\nplt.subplots_adjust(wspace=0.3,hspace=0.4)\nplt.suptitle('Categorical Count Plot',y=0.93,fontsize=20)\n\nfor col,cat in enumerate(useful_cats):\n    row = 0\n    if col >2:\n        row+=1\n        col-=3\n    rt = sns.countplot(x=df[cat],ax=ax[row][col])\n    \n    text_ln = len(str(rt.get_xticklabels()[0]))\n    if text_ln > 25:\n        rt.set_xticklabels(rt.get_xticklabels(),rotation = 30)\n    else:\n        pass\n","13af282e":"heat = df.corr()","8b216ebc":"\nsns.heatmap(data=heat,annot=True)","cad44b05":"# Student Performance Full Beginner EDA","f8fb405b":"**Making Result Columns Using Student Different Marks Obtain**","e1cb3a2f":"**Categorical Count Plot**","2cb608a1":"**Violin Plot of Categorical Features with Continuous Features**","92773cec":"\n**specifying grades**\n\n* 90-100  A+\n* 83-91   A\n* 75-82   B+\n* 67-74   B\n* 59-66   C\n* 51-58   C+\n* 43-50   D\n* 35-42   D+\n* 0-34    F\n","06ebb2c2":"**Reading Dataset**","5e181cd8":"**Correlation of marks Features**","a81370b0":"**Calculating and adding new features Total_marks and Percentage**","abf8d20c":"**2. Styling DataFrame on the basis of Results (all cells in a row)**","1fa3eee5":"**Swarmplot of Grades with Numemrical features**","564bd60c":"**Visualizing Student Marks using Seaborn KDEPlot**","3bf47b24":"**Ploting Categorical Features**","b898e0b8":"**1. Styling DataFrame on the basis of Results (last cell in a row)**","da91a6c5":"**Box Plot of Categorical Features with Continuous Features**","2a67ea4f":"**HeatMap Plot of Dataset df**","0a6b5733":"**Conditional Plot using seaborn FacetGrid**","08d8bb5b":"> ## **This is my 2nd EDA Kernel please do comment down how you like this kernel and do upvote if you like the work**","c4533a97":"**Mapping this Grades into new feature Grading**","4a580ac5":"**Ploting Categorical Features with Result**","38cacea7":"**Information about dataset**","58e12252":"**Strip Plot of Categorical Features with Continuous Features**","f1a8a959":"# Students Performance in Exams EDA\n![Simpson Studing](https:\/\/c.tenor.com\/rT-ES17CDQwAAAAC\/homer-simpsons.gif)\n>Marks secured by the students in various subjects"}}