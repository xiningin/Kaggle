{"cell_type":{"d227bf61":"code","d28a0c1a":"code","e1f2e5f4":"code","7c58ff34":"code","c550df23":"code","98b2f66f":"code","5a7b2bfe":"code","25bced45":"code","ceb30202":"code","a42f0883":"code","33a36000":"code","5796cd1e":"code","7b903fbe":"code","ab64f787":"code","902d8a9b":"code","372056ae":"code","d8b08ad3":"code","1abfcfb2":"code","207f7ac9":"code","451985fc":"code","eb8093c6":"code","e45bf170":"code","1caae55f":"code","e30b880c":"code","4ec6a7dd":"code","f3cb8b78":"code","b127a2a1":"code","36a731ae":"code","624ec264":"code","2f11b0b8":"code","389a58b8":"code","82dcad36":"code","f1ac554d":"code","d85d4751":"code","47362af4":"code","c7fc2f44":"code","b7510e6a":"code","4b43fc1c":"code","5cdc3dcd":"code","45afcd10":"code","0e996f67":"code","68db01ea":"code","df8a65ef":"code","c77041a5":"code","a5d8cb63":"code","54aec1ba":"code","22db8f3c":"code","09ca568f":"code","a97dbac2":"code","42ce2a11":"code","76ba02d5":"code","ea52e277":"code","8229928f":"code","5f4c5741":"code","e66b322c":"code","bcf845b0":"code","07e25c46":"code","6f047fc2":"code","44a6ffdb":"code","a3558141":"code","2c0a28c2":"code","f7500dbf":"code","ee6f4044":"code","85154bf6":"code","3d3fa62d":"code","492aed9d":"code","ddfbca15":"code","bde7e797":"code","43d32e3f":"code","ef90ea62":"code","99c8b9d2":"code","ec24f07b":"code","a0c2a57b":"code","d0b4fb9e":"code","fba47c91":"markdown","6fc6d107":"markdown","8b572d0e":"markdown","a4540d2a":"markdown","9a3e4e6a":"markdown","af1330a3":"markdown","ab39a868":"markdown","a60f3f93":"markdown","757843b7":"markdown","5d48d4ea":"markdown","5ce0e384":"markdown","f8662533":"markdown","7ef7ef8a":"markdown","c5468c5c":"markdown","ed75075c":"markdown","e22dd7c4":"markdown","84a75778":"markdown","06f4233e":"markdown","1382a6dc":"markdown","dcc3a1c2":"markdown","ff8c4ff8":"markdown","71ebc541":"markdown","f5123abf":"markdown","5a55810d":"markdown","e1761156":"markdown","b75de121":"markdown","d93117d3":"markdown","f0e41cd1":"markdown","7f9ab31a":"markdown","19867a98":"markdown","52451187":"markdown","dba81ba8":"markdown","60adf3e5":"markdown","5cb29271":"markdown","36a3ed71":"markdown","e22f0377":"markdown","354b7df1":"markdown","e7df691d":"markdown","0e29796f":"markdown","f1976cb7":"markdown","57ef2c49":"markdown","7dbb3c19":"markdown","b07707a7":"markdown","133a4f4d":"markdown","b421a811":"markdown","b1daa74d":"markdown","ce6896bf":"markdown","d9f1315d":"markdown","8b57a366":"markdown","9e707f9a":"markdown","e98fddcf":"markdown","46e57cab":"markdown","9f1acbca":"markdown","9f57654e":"markdown","5934af06":"markdown","e5d4d0f7":"markdown","e661242e":"markdown","02325686":"markdown","8b84fe93":"markdown","fecf1451":"markdown","18c74adc":"markdown","c301c1b6":"markdown","0df7aac1":"markdown","9a8ba034":"markdown","94c5f953":"markdown","304c5924":"markdown","cfb9a9ff":"markdown","7f1032cb":"markdown","32bf1f00":"markdown"},"source":{"d227bf61":"# \ub370\uc774\ud130 \ubd84\uc11d \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport numpy as np\nimport pandas as pd\n\n# \uc2dc\uac01\ud654 \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotnine import *\n\n# \ubaa8\ub378\ub9c1 \ub77c\uc774\ube0c\ub7ec\ub9ac\nfrom category_encoders.ordinal import OrdinalEncoder\nfrom sklearn.model_selection import KFold\nfrom lightgbm import LGBMClassifier\n\n# \uae30\ud0c0 \ub77c\uc774\ube0c\ub7ec\ub9ac\nimport random\nimport gc\nimport os\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nsns.set_style(\"whitegrid\")","d28a0c1a":"train = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/test.csv')\nsample_submission = pd.read_csv('\/kaggle\/input\/kakr-4th-competition\/sample_submission.csv')","e1f2e5f4":"train.shape, test.shape, sample_submission.shape","7c58ff34":"train.head()","c550df23":"test.head()","98b2f66f":"train.info()","5a7b2bfe":"train.describe()","25bced45":"train.describe(include='O')","ceb30202":"print(f'income count: {train[\"income\"].count()}')\nprint(f'income not null count(pct): {np.round(train[\"income\"].count()\/len(train)*100, 2)}%')","a42f0883":"num_of_null = train.isnull().sum()\npercent = (train.isnull().sum() \/ train.isnull().count() * 100)\npd.concat([num_of_null, percent], axis=1, keys=['# of null', 'Percent']).sort_values(by='Percent', ascending=False)","33a36000":"num_of_null = test.isnull().sum()\npercent = (test.isnull().sum() \/ test.isnull().count() * 100)\npd.concat([num_of_null, percent], axis=1, keys=['# of null', 'Percent']).sort_values(by='Percent', ascending=False)","5796cd1e":"def get_min_max_avg(df, feature):\n    print('Feature: ', feature)\n    print('--------------------------------------')\n    print('The max value is:',df[feature].max())\n    print('The min value is:',df[feature].min())\n    print('The average value is:',df[feature].mean())\n    print('The median value is:',df[feature].median())","7b903fbe":"def plot_hist(df, feature, max_ylim, bins=10):\n    fig, ax = plt.subplots(1, 1, figsize=(10, 5))\n    ax.hist(df[feature], bins=bins)\n    ax.set_ylim(0, max_ylim)\n    ax.set_title(feature+' distribution (bins='+str(bins)+')')\n    plt.show()","ab64f787":"get_min_max_avg(train, 'age')","902d8a9b":"plot_hist(train, 'age', 4000, 15)","372056ae":"get_min_max_avg(train, 'fnlwgt')","d8b08ad3":"plot_hist(train, 'fnlwgt', 13000, 20)","1abfcfb2":"get_min_max_avg(train, 'education_num')","207f7ac9":"plot_hist(train, 'education_num', 9000, 16)","451985fc":"get_min_max_avg(train, 'capital_gain')","eb8093c6":"plot_hist(train, 'capital_gain', 25000, 20)","e45bf170":"get_min_max_avg(train, 'capital_loss')","1caae55f":"plot_hist(train, 'capital_loss', 25000, 20)","e30b880c":"get_min_max_avg(train, 'hours_per_week')","4ec6a7dd":"plot_hist(train, 'hours_per_week', 15000, 10)","f3cb8b78":"fig = plt.figure()\n\nggplot(train, aes(x='age', fill='income')) + geom_density(alpha=0.7) + ggtitle(\"The age distribution by income\")","b127a2a1":"fig = plt.figure()\nggplot(train, aes(x='fnlwgt', fill='income')) + geom_density(alpha=0.7) + ggtitle('The final weight distribution by income')","36a731ae":"fig = plt.figure()\nggplot(train, aes(x='education_num', fill='income')) + geom_density(alpha=0.7) + ggtitle('The education_num distribution by income')","624ec264":"train[train['income'] == '>50K']","2f11b0b8":"fig = plt.figure()\n\nggplot(train[train['income'] == '>50K'], aes(x='education_num', fill='income')) + geom_density(alpha=0.7) + ggtitle('The education_num distribution by income')","389a58b8":"sns.boxplot(x='income', y='education_num', data=train, palette=\"Set2\", linewidth=2);","82dcad36":"fig = plt.figure()\nggplot(train.loc[train['capital_gain'] > 0], aes(x='capital_gain', fill='income')) + geom_density(alpha=0.7) + ggtitle('The capital loss distribution by income')","f1ac554d":"sns.boxplot(x='income', y='capital_gain', data=train.loc[train['capital_gain'] > 0], palette=\"Set2\", linewidth=2);","d85d4751":"fig = plt.figure();\nggplot(train.loc[train['capital_loss'] > 0], aes(x='capital_loss', fill='income')) + geom_density(alpha=0.7) + ggtitle('The capital loss distribution by income')","47362af4":"sns.boxplot(x='income', y='capital_loss', data=train.loc[train['capital_loss'] > 0], palette=\"Set2\", linewidth=2);","c7fc2f44":"fig = plt.figure()\nggplot(train, aes(x='hours_per_week', fill='income')) + geom_density(alpha=0.7) + ggtitle('The hours per week distribution by income')","b7510e6a":"sns.boxplot(x='income', y='hours_per_week', data=train, palette=\"Set2\", linewidth=2);","4b43fc1c":"for col in train.columns:\n    if train[col].dtype == 'object':\n        all_categories = train[col].unique()\n        print(f'Column \"{col}\" has {len(all_categories)} unique categroies')\n        print('The categories are:', ', '.join(all_categories))\n        print()","5cdc3dcd":"for col in train.columns:\n    if train[col].dtype == 'object':\n        categories = train[col].unique()\n        print(f'The number of unique values in [{col}]: {len(categories)}')","45afcd10":"def get_unique_values(df, feature):\n    all_categories = train[feature].unique()\n    print(f'Column \"{feature}\" has {len(all_categories)} unique categroies')\n    print('------------------------------------------')\n    print('\\n'.join(all_categories))","0e996f67":"get_unique_values(train, 'workclass')","68db01ea":"fig, ax = plt.subplots(1, 1, figsize=(15, 7))\ncol = 'workclass'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\n# bar \uc0c1\ub2e8\uc5d0 count \uc22b\uc790\ub85c \uc785\ub825\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.1, v[col]+150 , v[col])","df8a65ef":"fig, ax = plt.subplots(1, 1, figsize=(15, 7))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","c77041a5":"get_unique_values(train, 'education')","a5d8cb63":"fig, ax = plt.subplots(1, 1, figsize=(20, 7))\ncol = 'education'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\nplt.xticks(rotation=45)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.1, v[col]+150 , v[col])","54aec1ba":"fig, ax = plt.subplots(1, 1, figsize=(15, 7))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","22db8f3c":"train[train['education']=='Preschool']['income'].value_counts()","09ca568f":"get_unique_values(train, 'marital_status')","a97dbac2":"fig, ax = plt.subplots(1, 1, figsize=(20, 7))\ncol = 'marital_status'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.1, v[col]+150 , v[col])","42ce2a11":"fig, ax = plt.subplots(1, 1, figsize=(15, 7))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","76ba02d5":"train.loc[train[col] == 'Married-AF-spouse', 'income']","ea52e277":"get_unique_values(train, 'occupation')","8229928f":"fig, ax = plt.subplots(1, 1, figsize=(20, 7))\ncol = 'occupation'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\nplt.xticks(rotation=45)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.12, v[col]+50 , v[col])","5f4c5741":"fig, ax = plt.subplots(1, 1, figsize=(15, 10))\nvalue_counts = train[col].value_counts()\nsns.countplot(y=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","e66b322c":"get_unique_values(train, 'relationship')","bcf845b0":"fig, ax = plt.subplots(1, 1, figsize=(15, 7))\ncol = 'relationship'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.1, v[col]+150 , v[col])","07e25c46":"fig, ax = plt.subplots(1, 1, figsize=(12, 6))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","6f047fc2":"get_unique_values(train, 'race')","44a6ffdb":"fig, ax = plt.subplots(1, 1, figsize=(12, 6))\ncol = 'race'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.1, v[col]+150 , v[col])","a3558141":"fig, ax = plt.subplots(1, 1, figsize=(12, 6))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","2c0a28c2":"get_unique_values(train, 'sex')","f7500dbf":"fig, ax = plt.subplots(1, 1, figsize=(7, 4))\ncol = 'sex'\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.05, v[col]+150 , v[col])","ee6f4044":"fig, ax = plt.subplots(1, 1, figsize=(7, 4))\nvalue_counts = train[col].value_counts()\nsns.countplot(x=col, hue='income', data=train, palette=\"Set2\", edgecolor='black', order = value_counts.index);","85154bf6":"train['native_country'].value_counts()","3d3fa62d":"fig, ax = plt.subplots(1, 1, figsize=(7, 7))\ntrain_us = train[train['native_country']=='United-States']\ncol = 'native_country'\nsns.countplot(x=col, hue='income', data=train_us, palette=\"Set2\", edgecolor='black');","492aed9d":"fig, ax = plt.subplots(1, 1, figsize=(15, 20))\ntrain_other = train[train['native_country']!='United-States']\nsns.countplot(y=col, hue='income', data=train_other, palette=\"Set2\", edgecolor='black');","ddfbca15":"train.drop(['id'], axis=1, inplace=True)\ntest.drop(['id'], axis=1, inplace=True)","bde7e797":"y = train['income'] != '<=50K'\nX = train.drop(['income'], axis=1)","43d32e3f":"# \ub77c\ubca8 \uc778\ucf54\ub354 \uc0dd\uc131\nLE_encoder = OrdinalEncoder(list(X.columns))\n\n# train, test \ub370\uc774\ud130\uc5d0 \uc778\ucf54\ub529 \uc801\uc6a9\nX = LE_encoder.fit_transform(X, y)\ntest = LE_encoder.transform(test)","ef90ea62":"NFOLDS = 5\nfolds = KFold(n_splits=NFOLDS)\n\ncolumns = X.columns\nsplits = folds.split(X, y)\ny_preds = np.zeros(test.shape[0])\n\nfeature_importances = pd.DataFrame()\nfeature_importances['feature'] = columns","99c8b9d2":"model = LGBMClassifier(objective='binary', verbose=400, random_state=91)\n\n\nfor fold_n, (train_index, valid_index) in enumerate(splits):\n    print('Fold: ', fold_n+1)\n    X_train, X_valid = X.iloc[train_index], X.iloc[valid_index]\n    y_train, y_valid = y.iloc[train_index], y.iloc[valid_index]\n\n    evals = [(X_train, y_train), (X_valid, y_valid)]\n    model.fit(X_train, y_train, eval_metric='f1', eval_set=evals, verbose=True)\n    \n    feature_importances[f'fold_{fold_n + 1}'] = model.feature_importances_\n        \n    y_preds += model.predict(test).astype(int) \/ NFOLDS\n    \n    del X_train, X_valid, y_train, y_valid\n    gc.collect()","ec24f07b":"feature_importances","a0c2a57b":"sample_submission['prediction'] = y_preds\n\nfor ix, row in sample_submission.iterrows():\n    if row['prediction'] > 0.5:\n        sample_submission.loc[ix, 'prediction'] = 1\n    else:\n        sample_submission.loc[ix, 'prediction'] = 0\n\nsample_submission = sample_submission.astype({\"prediction\": int})\nsample_submission.to_csv('submission.csv', index=False)","d0b4fb9e":"fig, ax = plt.subplots(1, 1, figsize=(8, 4))\ncol = 'prediction'\nvalue_counts = sample_submission[col].value_counts()\nsns.countplot(x=col, data=sample_submission, palette=\"Set2\", edgecolor='black', order = value_counts.index)\n\nfor i, v in value_counts.reset_index().iterrows():\n    ax.text(i-0.05, v[col]+150 , v[col])","fba47c91":"## \ub2e4\ubcc0\ub7c9(mulvariate) \ub370\uc774\ud130 \uc2dc\uac01\ud654","6fc6d107":"- `Private`\uc5d0 \ud574\ub2f9\ud558\ub294 workclass\uac00 \uac00\uc7a5 \ub9ce\uc2b5\ub2c8\ub2e4.\n- income\ubcc4\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","8b572d0e":"- \ub9c8\uc9c0\ub9c9\uc73c\ub85c submission\uc758 income \ubd84\ud3ec\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. ","a4540d2a":"- \ub370\uc774\ud130 \uc14b\uc5d0\ub294 \ubc31\uc778\uc774 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\uc2b5\ub2c8\ub2e4.","9a3e4e6a":"# \ubaa8\ub378\ub9c1 (Modeling)","af1330a3":"- \uc608\uc0c1\ub300\ub85c \uc77c\ubc18\uc778 \ubc30\uc6b0\uc790\uc640 \uacb0\ud63c\ud55c \uc0ac\ub78c\uc774 \uac00\uc7a5 \ub9ce\uc73c\uba70, \uc544\uc608 \uacb0\ud63c\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc774 \uadf8 \ub4a4\ub97c \uc787\uc2b5\ub2c8\ub2e4.","ab39a868":"### 1) \ub098\uc774\uc5d0 \ub530\ub978 \uc18c\ub4dd \uc218\uc900 (Age vs income)","a60f3f93":"# \uc81c\ucd9c","757843b7":"- test \ub370\uc774\ud130\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c null\uac12\uc774 \ud558\ub098\ub3c4 \uc5c6\uc2b5\ub2c8\ub2e4.","5d48d4ea":"### 2) Final weight \ub530\ub978 \uc18c\ub4dd \uc218\uc900 (fnlwgt vs income)","5ce0e384":"### 2) Education","f8662533":"- 30~40\uc138 \ubd80\uadfc\uc5d0 \ub9ce\uc740 \uc778\uad6c\uac00 \ubab0\ub824\uc788\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","7ef7ef8a":"- \uad50\uc721\uc744 \uc624\ub7ab\ub3d9\uc548 \ubc1b\uc740 \uc0ac\ub78c\uc758 \uc18c\ub4dd\uc218\uc900\uc774 \ub354 \ub192\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","c5468c5c":"- income\uacfc final weight\ub294 \ud070 \uad00\ub828\uc774 \uc5c6\ub294 \uac83\uc73c\ub85c \ubcf4\uc785\ub2c8\ub2e4.\n- income \uc608\uce21\ud558\ub294\ub370 final weight(fnlwgt) \ubcc0\uc218\ub294 \uace0\ub824\ud558\uc9c0 \uc54a\uaca0\uc2b5\ub2c8\ub2e4.","ed75075c":"### 4) Occupation (\uc9c1\uc5c5)","e22dd7c4":"### 1) Workclass","84a75778":"### \ud568\uc218","06f4233e":"### 5) \uc8fc\ub2f9 \uadfc\ubb34\uc2dc\uac04\uc5d0 \ub530\ub978 \uc18c\ub4dd \uc218\uc900 (hours_per_week vs income)","1382a6dc":"- \uc9c1\uc5c5\uc774 `other-service`\uc778 \uc0ac\ub78c\ub4e4 \uc911 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc774 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\uc2b5\ub2c8\ub2e4.\n- \uc9c1\uc5c5\uc774 `Adm-clerical`\uc778 \uc0ac\ub78c\ub3c4 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.\n- \uc9c1\uc5c5\uc774 `Prof-specialty`, `Exec-managerial`\uc778 \uc0ac\ub78c\ub4e4\uc740 \ub2e4\ub978 \uc9c1\uc5c5\uad70\uc5d0 \ube44\ud574 \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc2b5\ub2c8\ub2e4.\n- \uc9c1\uc5c5\uc774 `Priv-house-serv`\uc778 \uc0ac\ub78c\uc740 \uac70\uc758 \ub2e4 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.","dcc3a1c2":"### 3) \uad50\uc721\uc5d0 \ub530\ub978 \uc18c\ub4dd \uc218\uc900 (education_num vs income)","ff8c4ff8":"### \uc5c5\ub370\uc774\ud2b8 \uc0ac\ud56d\uc774 \uc788\uc73c\uba74 \ub2e4\uc2dc \uacf5\uc720\ud558\uaca0\uc2b5\ub2c8\ub2e4! \uc77d\uc5b4\uc8fc\uc154\uc11c \uac10\uc0ac\ud569\ub2c8\ub2e4.","71ebc541":"### 4) Capital gain","f5123abf":"- train \ub370\uc774\ud130\uc5d0\ub294 26,049\uac1c\uc758 \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud558\uace0, test \ub370\uc774\ud130\uc5d0\ub294 6,512\uac1c\uc758 \ub370\uc774\ud130\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4.\n- train \ub370\uc774\ud130\uc5d0\ub294 target variable\ub3c4 \ud3ec\ud568\ud558\ubbc0\ub85c test \ub370\uc774\ud130\ubcf4\ub2e4 feature \uac1c\uc218\uac00 1\uac1c \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.","5a55810d":"- \uc18c\ub4dd \uc218\uc900\uc774 \ub192\uc740 \uc0ac\ub78c\uc740 \ub300\ubd80\ubd84 `education_num`=8\uc774\uc0c1\uc758 \uad50\uc721\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4.\n- \uad50\uc721\uc744 \uc624\ub798 \ubc1b\uc558\uc74c\uc5d0\ub3c4 \uc18c\ub4dd \uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","e1761156":"- `Private`\uc5d0 \ud574\ub2f9\ud558\ub294 workclass\uc5d0\uc11c\ub294 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc774 \ub192\uc740 \uc0ac\ub78c\uc5d0 \ube44\ud574 3\ubc30 \uc774\uc0c1 \ub9ce\uc2b5\ub2c8\ub2e4.\n- `?`\uc5d0 \ud574\ub2f9\ud558\ub294 workclass\ub294 \ub300\ubd80\ubd84 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.","b75de121":"### 3) education_num","d93117d3":"# \ubc94\uc8fc\ud615 \ub370\uc774\ud130 \ubd84\uc11d","f0e41cd1":"- \ubbf8\uad6d\uc778\uc774 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\uc2b5\ub2c8\ub2e4.\n- \uad6d\uc801\uc758 \ubd88\uade0\ud615\uc774 \uc2ec\ud558\uae30 \ub54c\ubb38\uc5d0, \ubbf8\uad6d\uacfc \ub2e4\ub978 \ub098\ub77c\ub97c \uc11c\ub85c \ub098\ub204\uc5b4 \uc18c\ub4dd\uc218\uc900\uc744 \ube44\uad50\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","7f9ab31a":"# \uc218\uce58\ud615 \ub370\uc774\ud130 \ubd84\uc11d","19867a98":"### 6) Race","52451187":"- \uacb0\ud63c \uc0c1\ud0dc\uac00 `Married-AF-spouse`\uc778 \uacbd\uc6b0 19\uba85\uc758 \ub370\uc774\ud130 \ubc16\uc5d0 \uc5c6\uc5b4\uc11c \uc804\ucc98\ub9ac\ub97c \ud574\uc8fc\ub824\uace0 \ud588\uc73c\ub098, 19\uba85 \uc911 10\uba85\uc774 \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uace0, 9\uba85\ub9cc \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc911\uc694\ud55c \uc9c0\ud45c\uac00 \ub420 \uc218 \uc788\uc744 \uac83 \uac19\uc544 `Married-AF-spouse` \ub370\uc774\ud130\ub294 \uadf8\ub300\ub85c \uc0b4\ub824\ub450\uaca0\uc2b5\ub2c8\ub2e4.","dba81ba8":"- \uac00\uc871\uad00\uacc4\uac00 `Own-child`\uc778 \uc0ac\ub78c\uc740 \uac70\uc758 \ub2e4 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.\n- \uac00\uc871\uad00\uacc4\uac00 `Husband`\uc778 \uc0ac\ub78c\ub4e4 \uc911\uc5d0\ub294 \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc740 \uc0ac\ub78c\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.","60adf3e5":"#### \uc804\uccb4\uc801\uc778 \ub370\uc774\ud130 \ubd84\ud3ec\uc640 \uc778\uc0ac\uc774\ud2b8\ub97c \uc5bb\uae30 \uc704\ud574 \uac04\ub2e8\ud55c EDA\uc640 LGBM\uc744 \ud65c\uc6a9\ud558\uc5ec \ubaa8\ub378\ub9c1\uc744 \ud574\ubd24\uc2b5\ub2c8\ub2e4.\n#### \ub3c4\uc6c0\uc774 \ub418\uc168\ub2e4\uba74 **upvote** \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4 ^^\n#### \ucd94\ud6c4 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uaca0\uc2b5\ub2c8\ub2e4.\n#### \ub370\uc774\ud130\ubd84\uc11d, \uba38\uc2e0\ub7ec\ub2dd\/\ub525\ub7ec\ub2dd \uad00\ub828 \ube14\ub85c\uadf8\ub3c4 \uc6b4\uc601\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uad00\uc2ec\uc774 \uc788\ub294 \ubd84\uc740 \ub180\ub7ec\uc640\uc8fc\uc138\uc694~   \n#### https:\/\/bkshin.tistory.com\/","5cb29271":"#### \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uad6d\uac00:\n- Vietnam\n- Mexico\n- Puerto-Rico\n- Jamaica\n- Guatemala\n- El-Salvador\n- Dominican-Republic\n- Columbia\n\n#### \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc740 \uad6d\uac00:\n- Japan\n- Iran\n- India\n- Germany\n- England\n- Canada\n- United States of America","36a3ed71":"- \uc6b0\uc120, \ub2e8\ubcc0\ub7c9 \ub370\uc774\ud130 \uc2dc\uac01\ud654\ub97c \uc704\ud55c \ud568\uc218\ub97c \ub9cc\ub4ed\ub2c8\ub2e4.","e22f0377":"### 1) Age","354b7df1":"- \ub0a8\uc790 \uc911 \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc740 \uc0ac\ub78c\uc758 \ube44\uc728\uc774 \uc5ec\uc790 \uc911 \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc740 \uc0ac\ub78c\uc758 \ube44\uc728\ubcf4\ub2e4 \ub192\uc2b5\ub2c8\ub2e4.\n- \ub0a8\ub140\uac04 \uc18c\ub4dd\uc218\uc900\uc5d0 \ubd88\uade0\ud615\uc774 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","e7df691d":"- null\uac12\uc774 \ud558\ub098\ub3c4 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","0e29796f":"- ID \uce7c\ub7fc\uc740 \ubd84\uc11d\uc5d0 \ud544\uc694\ud55c \ub370\uc774\ud130\uac00 \uc544\ub2c8\ubbc0\ub85c train, test \ub370\uc774\ud130\uc5d0\uc11c ID \uce7c\ub7fc\uc744 \uc0ad\uc81c\ud574\uc90d\ub2c8\ub2e4.","f1976cb7":"- \uc6b0\uc120 \ub370\uc774\ud130\ub97c \uc804\ubc18\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","57ef2c49":"### 7) Sex","7dbb3c19":"### 5) Capital loss","b07707a7":"### 5) Relationship","133a4f4d":"- feature_importance\ub97c \ud65c\uc6a9\ud558\uc5ec \uac01 \ud3f4\ub4dc(fold)\ubcc4\ub85c \ud53c\uccd0 \uc911\uc694\ub3c4\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \n- \ub2e8, feature_importance\ub294 \ud53c\uccd0 \uc911\uc694\ub3c4\ub97c \ud30c\uc545\ud558\uae30 \uc704\ud55c \uc808\ub300\uc801\uc778 \ubc29\ubc95\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uadf8\ub0e5 \ucc38\uace0\ub9cc \ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.","b421a811":"## Feature\ubcc4 Null \uac12 \ud655\uc778","b1daa74d":"### 2) final weight","ce6896bf":"- \ub0a8\uc790\uac00 \uc5ec\uc790\ubcf4\ub2e4 2\ubc30 \uc774\uc0c1 \ub9ce\uc2b5\ub2c8\ub2e4.","d9f1315d":"- train feature\uc640 target value\ub97c \ubd84\ub9ac\ud569\ub2c8\ub2e4.","8b57a366":"- \uc804\ubb38\uc9c1(prof-specialiy)\uac00 \uac00\uc7a5 \ub9ce\uace0, \uc218\ub9ac\uacf5(craft-repair)\uc774 \uadf8 \ub2e4\uc74c\uc73c\ub85c \ub9ce\uc2b5\ub2c8\ub2e4.","9e707f9a":"# \ub370\uc774\ud130 \uac04\ub2e8\ud788 \ub458\ub7ec\ubcf4\uae30","e98fddcf":"- \ud559\ub825 \uc218\uc900\uc740 \uace0\uc878\uc774 \uac00\uc7a5 \ub9ce\uace0, \uadf8 \ub2e4\uc74c \ub2e8\uacfc\ub300, \ud559\uc0ac \uc21c\uc73c\ub85c \ub9ce\uc2b5\ub2c8\ub2e4.","46e57cab":"### 6) Hours per week","9f1acbca":"- \uacb0\ud63c\uc758 \uc720\ubb34\uac00 \uc18c\ub4dd\uc218\uc900\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- \uacb0\ud63c\uc740 \ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc774\ub098 \uc774\ud63c\ud55c \uc0ac\ub78c, \ub5a8\uc5b4\uc838 \uc0ac\ub294 \uc0ac\ub78c\uc774\ub098 \ubbf8\ub9dd\uc778 \ub4f1\uc740 \ub300\ubd80\ubd84 \uc18c\ub4dd \uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.\n- \ubc18\uba74, \uc18c\ub4dd \uc218\uc900\uc758 \ub192\uc740 \uc0ac\ub78c\uc758 \ub300\ubd80\ubd84\uc740 \uacb0\ud63c\ud588\ub2e4\ub294 \uc0ac\uc2e4\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","9f57654e":"- id\ub97c \uc81c\uc678\ud558\uace0 feature\uc758 \ud0c0\uc785(type)\uc740 int 6\uac1c, object 9\uac1c\uc785\ub2c8\ub2e4. \n- object \ud0c0\uc785\uc740 string \ud0c0\uc785\uc774\ub77c\uace0 \ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.","5934af06":"- \uc8fc\ub2f9 \ud3c9\uade0 \uadfc\ubb34\uc2dc\uac04\uc774 \uae38\uc218\ub85d \uc18c\ub4dd \uc218\uc900\uc774 \ub192\uc2b5\ub2c8\ub2e4.","e5d4d0f7":"- \uc591\ub3c4 \uc18c\ub4dd\uc774 \ub9ce\uc744\uc218\ub85d \uc18c\ub4dd\uc218\uc900\uc774 \ub192\uc2b5\ub2c8\ub2e4.\n- \uc591\ub3c4 \uc18c\ub4dd\uc774 \uad49\uc7a5\ud788 \ub192\uc740 \uc774\uc0c1\uce58\uac00 \uc788\ub124\uc694. \ucd94\ud6c4 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uba74 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.","e661242e":"### 4) \uc591\ub3c4\uc138\uc5d0 \ub530\ub978 \uc18c\ub4dd \uc218\uc900 (capital vs income)","02325686":"- income\uc774 \ub9ce\uc744\uc218\ub85d \ub098\uc774\uac00 \ub9ce\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n- income\uc744 \uc608\uce21\ud558\ub294\ub370 \ub098\uc774\ub294 \uc911\uc694\ud55c \ubcc0\uc218\uc784\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","8b84fe93":"# \ub77c\uc774\ube0c\ub7ec\ub9ac \ud638\ucd9c \ubc0f I\/O","fecf1451":"- \ubbf8\uad6d\uc778 \uc911\uc5d0\uc11c\ub294 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc774 \ub192\uc740 \uc0ac\ub78c\ubcf4\ub2e4 3\ubc30 \uc815\ub3c4 \ub9ce\uc2b5\ub2c8\ub2e4.","18c74adc":"- \uc18c\ub4dd \uc218\uc900\uc774 \ub192\uc740 \uc0ac\ub78c\uc740 \ub300\ubd80\ubd84\uc740 \uc8fc\ub2f9 \uadfc\ubb34\uc2dc\uac04\uc774 25\uc2dc\uac04 \uc774\uc0c1\uc785\ub2c8\ub2e4.","c301c1b6":"- \uc8fc\ub2f9 \ud3c9\uade0 \uadfc\ub85c\uc2dc\uac04\uc740 40\uc2dc\uac04\uc785\ub2c8\ub2e4.","0df7aac1":"- \ubc31\uc778\uc774 \uc555\ub3c4\uc801\uc73c\ub85c \ub9ce\uc544 \ub370\uc774\ud130 \ubd88\uade0\ud615\uc774 \uc788\uc2b5\ub2c8\ub2e4.\n- \ub530\ub77c\uc11c race\ub97c \ud1b5\ud574\uc11c\ub294 \uc5b4\ub5a0\ud55c \uc720\uc6a9\ud55c \uc815\ubcf4\ub97c \uc5bb\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","9a8ba034":"### 8) Native Country","94c5f953":"- \ud559\ub825\uc218\uc900\uc774 `Preschool`\uc778 \uc0ac\ub78c\uc740 \ucd1d 40\uba85\uc778\ub370 40\uba85 \ubaa8\ub450 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.\n- \ud559\ub825\uc218\uc900\uc774 `Compulsory`\uc778 \uc0ac\ub78c\uc758 \ub300\ubd80\ubd84\ub3c4 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc2b5\ub2c8\ub2e4.\n- `Masters`, `Prof-school`, `Doctorate`\uc778 \uc0ac\ub78c\uc740 \uc18c\ub4dd\uc218\uc900\uc774 \ub0ae\uc740 \uc0ac\ub78c\uc5d0 \ube44\ud574 \ub192\uc740 \uc0ac\ub78c\uc774 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.","304c5924":"### 3) Marital Status (\uacb0\ud63c \uc0c1\ud0dc)","cfb9a9ff":"## \ub2e8\ubcc0\ub7c9(Univariate) \ub370\uc774\ud130 \uc2dc\uac01\ud654","7f1032cb":"id\ub97c \uc81c\uc678\ud558\uace0 \ucd1d 15\uac1c\uc758 feature\uac00 \uc788\uc73c\uba70 \uac01 feature\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc758\ubbf8\ub97c \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4. (data description\uc5d0\uc11c \uc81c\uacf5)\n\n- `age` : \ub098\uc774\n- `workclass` : \uace0\uc6a9 \ud615\ud0dc\n- `fnlwgt` : \uc0ac\ub78c \ub300\ud45c\uc131\uc744 \ub098\ud0c0\ub0b4\ub294 \uac00\uc911\uce58 (final weight\uc758 \uc57d\uc790)\n- `education` : \uad50\uc721 \uc218\uc900 (\ucd5c\uc885 \ud559\ub825)\n- `education_num` : \uad50\uc721 \uc218\uc900 \uc218\uce58\n- `marital_status`: \uacb0\ud63c \uc0c1\ud0dc\n- `occupation` : \uc5c5\uc885\n- `relationship` : \uac00\uc871 \uad00\uacc4\n- `race` : \uc778\uc885\n- `sex` : \uc131\ubcc4\n- `capital_gain` : \uc591\ub3c4 \uc18c\ub4dd\n- `capital_loss` : \uc591\ub3c4 \uc190\uc2e4\n- `hours_per_week` : \uc8fc\ub2f9 \uadfc\ubb34 \uc2dc\uac04\n- `native_country` : \uad6d\uc801\n- `income` : **\uc218\uc775 (\uc608\uce21\ud574\uc57c \ud558\ub294 \uac12, target variable)**","32bf1f00":"- \ubc94\uc8fc\ud615 \ub370\uc774\ud130\ub97c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4."}}