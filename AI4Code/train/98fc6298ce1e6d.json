{"cell_type":{"29a93b19":"code","0a93d379":"code","20860212":"code","385e82ce":"code","bda97e04":"code","13b7ded8":"code","800b7e39":"code","5266c7ed":"code","79f57d56":"code","3c185e37":"code","30cd807b":"code","53b466c9":"code","ecd7b033":"code","3f493f71":"code","52881685":"code","95280456":"code","437ff6f6":"code","e4a8e34b":"code","f8090539":"code","56034237":"code","7bb22981":"code","37bd70ae":"code","ba55decd":"code","7e9f9720":"code","5f3a1051":"code","07dd8879":"code","d04c20c7":"code","320690cf":"code","c08b1772":"code","50185921":"code","31ce3f6e":"code","4c7439aa":"code","ca852fae":"code","f994fefa":"code","1ae7990d":"code","faf9be80":"code","a5f7f729":"code","cff3ff99":"code","f423c6e6":"code","05daf639":"code","c66685d7":"code","d6f2a644":"code","6144fe56":"code","333d550a":"markdown","cf81b853":"markdown","b0aadf64":"markdown","f914f619":"markdown","c3a57422":"markdown"},"source":{"29a93b19":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0a93d379":"iris = pd.read_csv(os.path.join(dirname, filename))","20860212":"iris.head()","385e82ce":"# Various Species Classes are:\n\niris['species'].value_counts()","bda97e04":"iris.describe()","13b7ded8":"iris.shape","800b7e39":"iris_df = iris[iris['species'] != 'Iris-virginica']","5266c7ed":"iris_df['species'].value_counts()","79f57d56":"# Converting categorical value to numeric value\n\nfrom sklearn import preprocessing","3c185e37":"flower_class = preprocessing.LabelEncoder()\nflower_class.fit(['Iris-setosa', 'Iris-versicolor'])\niris_df['species'] = flower_class.transform(iris_df['species'])","30cd807b":"iris_df.head()","53b466c9":"iris_df['species'].unique()","ecd7b033":"from sklearn.linear_model import LogisticRegression","3f493f71":"from sklearn.model_selection import train_test_split\n\nx = iris_df[['sepal_length','sepal_width','petal_length','petal_width']]\ny = iris_df['species']","52881685":"x_train , x_test , y_train , y_test = train_test_split(x,y,test_size=0.3,random_state=3)","95280456":"x_train.shape , x_test.shape","437ff6f6":"y_train.shape , y_test.shape","e4a8e34b":"LR = LogisticRegression(C=0.01,solver='liblinear').fit(x_train,y_train)","f8090539":"yhat = LR.predict(x_test)\nyhat","56034237":"y_test","7bb22981":"yhat_prob = LR.predict_proba(x_test)\nyhat_prob","37bd70ae":"from sklearn.metrics import confusion_matrix","ba55decd":"confusion_matrix(y_test,yhat,labels=[0,1])","7e9f9720":"from sklearn.metrics import accuracy_score\n\nscore =accuracy_score(y_test,yhat)\nscore","5f3a1051":"iris.head()","07dd8879":"# Convert categorical values to numeric values","d04c20c7":"iris['species'].value_counts()","320690cf":"iris['species'].unique()","c08b1772":"flowers = preprocessing.LabelEncoder()\nflowers.fit(['Iris-setosa', 'Iris-versicolor', 'Iris-virginica'])\niris['species'] = flowers.transform(iris['species'])","50185921":"iris['species'].unique()","31ce3f6e":"iris.dtypes","4c7439aa":"# Convert the label types to int\n\niris[['sepal_length','sepal_width','petal_length','petal_width']] = iris[['sepal_length','sepal_width','petal_length','petal_width']].astype('int')","ca852fae":"iris.dtypes","f994fefa":"x = iris[['sepal_length','sepal_width','petal_length','petal_width']]\ny = iris['species']","1ae7990d":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3,random_state=3)","faf9be80":"x_train.shape , x_test.shape","a5f7f729":"y_train.shape,y_test.shape","cff3ff99":"from sklearn import svm","f423c6e6":"clf = svm.SVC(kernel='rbf')\nclf.fit(x_train,y_train)\nyhat = clf.predict(x_test)","05daf639":"yhat","c66685d7":"confusion_matrix(y_test,yhat)","d6f2a644":"from sklearn.metrics import f1_score\nf1_score(y_test, yhat, average='weighted') ","6144fe56":"from sklearn.metrics import jaccard_similarity_score\njaccard_similarity_score(y_test, yhat)","333d550a":"### Train-Test Split","cf81b853":"### Removing the third class as we are doing Logistic Regression as a binary classifier","b0aadf64":"# Support Vector Machine","f914f619":"* <b> We dont neeed any more preprocessing in this case <\/b>","c3a57422":"# Logistic Regression"}}