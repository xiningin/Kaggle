{"cell_type":{"278bd410":"code","4a94b53b":"code","d1bba7f9":"code","04536d09":"code","fc7ebf00":"code","a1183c00":"code","b3962d90":"code","ef12a0e1":"code","cc1c28a3":"code","79057d1b":"code","0592182e":"code","159a9747":"code","4a51e2ad":"code","12d685c6":"code","29a65fbb":"code","9761ca06":"code","a382a6ce":"code","4e63f1c9":"code","bc4470db":"code","d6243ea9":"code","a8bd1970":"code","5d9505a1":"code","3d26d408":"code","e036ef40":"code","35f1898f":"code","61629cd6":"code","b78bc1a5":"code","129ac286":"code","ecae5ed3":"code","dcbd2392":"code","9b87d9b6":"code","6ca9fad8":"code","70c3e8bf":"markdown","8e60fc18":"markdown","b0cbbcb3":"markdown","e1a1b017":"markdown","e1433b69":"markdown","a4ed54ed":"markdown","32f33c9d":"markdown","d2c3af40":"markdown","3b19432f":"markdown","b65fba39":"markdown","5280a696":"markdown","456d67ec":"markdown","db8b7eb8":"markdown","c992a897":"markdown","bd4e630a":"markdown","e655c066":"markdown","efff14a9":"markdown","9b341f7f":"markdown","508a4453":"markdown","6ed41ec3":"markdown","478ee06d":"markdown","e32204b7":"markdown","ea8fac4d":"markdown","9352d0d3":"markdown","eb9d8469":"markdown","da1997b8":"markdown","28357dc7":"markdown","1c35f06f":"markdown","7a6baa9e":"markdown","2e87fe9b":"markdown","e70863df":"markdown","e2e01221":"markdown","a452f741":"markdown","b35b4fe5":"markdown","3427df63":"markdown"},"source":{"278bd410":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)","4a94b53b":"df=pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\",low_memory=False)\ndf=df[1:] #Remove first row as i contains longer text\ndf.head()","d1bba7f9":"def country_cleaning(x):\n    '''This Function truncated the longer countries' names to the short names..\n    '''\n    if x=='United States of America':\n        x='USA'\n    elif x=='United Kingdom of Great Britain and Northern Ireland':\n        x='UK'\n    elif x=='Iran, Islamic Republic of...':\n        x='Iran'\n    elif x=='Hong Kong (S.A.R.)':\n        x='Hong Kong'\n    elif x=='I do not wish to disclose my location':\n        x='Other'\n    elif x=='United Arab Emirates':\n        x='UA'\n    elif x=='Viet Nam':\n        x='Vietnam'\n    return x\n\ndef degree_cleaning(x):\n    '''This Function truncated the longer degree' names to the short names..\n    '''\n    if x=='Some college\/university study without earning a bachelor\u2019s degree':\n        x='College without degree'\n    elif x=='I prefer not to answer':\n        x='No-response'\n    elif x=='No formal education past high school':\n        x='After high school'\n    return x\ndef code_cleaning(x):\n    if x=='I have never written code':\n        x='0years'\n    elif x=='I do not use machine learning methods':\n        x='No experience'\n    return x\n#we use map function here to process the countries names\ndf['Q3']=df['Q3'].map(lambda x: country_cleaning(x))\ndf['Q4']=df['Q4'].map(lambda x: degree_cleaning(x))\ndf['Q6']=df['Q6'].map(lambda x: code_cleaning(x))\ndf['Q15']=df['Q15'].map(lambda x: code_cleaning(x))\n#########################################################","04536d09":"#Define the figure size\nfig,ax1=plt.subplots(1,1,figsize=(24,8))\n#drwaing barplot\nsns.barplot(x=df['Q1'].value_counts().index,y=df['Q1'].value_counts().values,color=\"#314a48\",label=\"Age_Distribution\")\n#Mentioning the text in bar plot\nfor index,value in enumerate(df['Q1'].value_counts().values):\n    ax1.annotate(value,xy=(index,value+100),ha=\"center\",va=\"center\",fontsize=18)\n#ploting the mean line\nsns.lineplot(x=df['Q1'].value_counts().index,y=df['Q1'].value_counts().values.mean(),color=\"black\",label=\"Age_Distribution_mean\")\nplt.legend(fontsize=26)\nplt.xlabel(\"Age_Group\",fontsize=20)\nplt.ylabel(\"Age_count\",fontsize=20)\nplt.title(\"Age In 2021\",fontsize=30)\nplt.show()","fc7ebf00":"#create empty dict to store the population regarding age group of man and woman\ngender_dict={}\n#loop through gender column\nfor gender in df['Q2'].value_counts().index:\n    gender_dict[gender]=df[df['Q2']==gender]['Q1'].value_counts()\n#create dataframe from dictionary\nage_df=pd.DataFrame(gender_dict)\n#change the index name\nage_df.index.rename(\"Age_Group\",inplace=True)\n#display the datafarme\ndisplay(age_df)","a1183c00":"#Define the figure size\nfig,ax1=plt.subplots(1,1,figsize=(24,8))\n#Plot the bar chart in same axis\nax1.bar(age_df.index,age_df['Man'],color=\"#2e5f81\",label=\"Man\")\nax1.bar(age_df.index,age_df['Woman'],color=\"#741b47\",label=\"Woman\")\n#Adjust the text in bar chart\nfor index in age_df.index:\n    ax1.annotate(age_df[\"Man\"].loc[index],xy=(index,age_df[\"Man\"].loc[index]+100),ha=\"center\",va=\"center\",fontsize=18)\n    ax1.annotate(age_df[\"Woman\"].loc[index],xy=(index,age_df[\"Woman\"].loc[index]-100),ha=\"center\",va=\"center\",fontsize=18)\nplt.legend(fontsize=26)\nplt.xlabel(\"Age_Group\",fontsize=20)\nplt.ylabel(\"Age_count\",fontsize=20)\nplt.title(\"Age Distribution across gender in 2021\",fontsize=30)\nplt.show()","b3962d90":"#df['Q3'].value_counts()\ndf_=df['Q3'].value_counts().head(10)\n#Draw the pie chart\nlabels=df_.index\nsizes=df_.values\nfig,ax1=plt.subplots(1,1,figsize=(24,8))\nax1.pie(sizes, labels=labels, autopct='%1.1f%%',shadow=True, startangle=90)\nax1.axis(\"equal\")\nplt.title(\"Top 10 Countries\",fontsize=26,color=\"#a52a2a\")\nplt.show()","ef12a0e1":"def gender_across_columns(col_name):\n    '''This function returns the ratio of men and women participation in data science for any column in the data frame.\n    By using this function we can plot a bar chart and can visualize the distribution of men and women.\n    '''\n    #create the dictionary\n    pop={}\n    #iterate through the columns\n    for index in df[col_name].value_counts().index:\n        pop[index]=df[df[col_name]==index]['Q2'].value_counts()\n    _df=pd.DataFrame(pop)\n    #create dataframe which will calculate ratio of men and women\n    new_df=_df.T\n    #select only men and women from 5 categories\n    new_df=new_df[['Man','Woman']]\n    #find the sum=men+women\n    new_df['sum']=new_df.sum(axis=1)\n    #calculate the ratio\n    new_df=new_df.T\/new_df['sum']\n    #remove the sum row from dataframe\n    new_df=new_df[:-1]\n    #adjust the dataframe\n    new_df_ratio=new_df.T\n    return new_df_ratio","cc1c28a3":"df3=gender_across_columns('Q3').head(10)\ndf4=gender_across_columns('Q4')\ndf5=gender_across_columns('Q5').head(10)\ndf6=gender_across_columns('Q6')\n\n\nfig, ax1 = plt.subplots(4,figsize=(20,30))\nax1[0].barh(df3.index,df3['Man'],alpha=0.7,label='Man',color='#001817')\nax1[0].barh(df3.index,df3['Woman'],alpha=0.7,label='Woman',color='#326e6d',left=df3['Man'])\n\nfor index in df3.index:\n    ax1[0].annotate(str(round(df3['Man'].loc[index],2))+'%',xy=(df3['Man'].loc[index]\/2,index),fontsize=12,color='#000000')\n    ax1[0].annotate(str(round(df3['Woman'].loc[index],2))+'%',xy=(df3['Man'].loc[index]+df3['Woman'].loc[index]\/2,index),fontsize=12,color='#000000')\nax1[0].set_xticks([])\nax1[0].set_yticklabels(df3.index,fontsize=18)\nax1[0].set_title(\"Gender Distribution Across Countries\",fontsize=25)\nax1[0].legend(loc ='upper left',fontsize=15)\n\n####################################################################\nax1[1].barh(df5.index,df5['Man'],alpha=0.7,label='Man',color='#0f2953')\nax1[1].barh(df5.index,df5['Woman'],alpha=0.7,label='Woman',color='#530f29',left=df5['Man'])\n\nfor index in df5.index:\n    ax1[1].annotate(str(round(df5['Man'].loc[index],2))+'%',xy=(df5['Man'].loc[index]\/2,index),fontsize=12,color='#000000')\n    ax1[1].annotate(str(round(df5['Woman'].loc[index],2))+'%',xy=(df5['Man'].loc[index]+df5['Woman'].loc[index]\/2,index),fontsize=12,color='#000000')\nax1[1].set_xticks([])\nax1[1].set_yticklabels(df5.index,fontsize=18)\nax1[1].set_title(\"Gender Distribution Across Profession\",fontsize=25)\nax1[1].legend(loc ='upper left',fontsize=15)\n#######################################################################################\nax1[2].barh(df4.index,df4['Man'],alpha=0.7,label='Man',color='#120309')\nax1[2].barh(df4.index,df4['Woman'],alpha=0.7,label='Woman',color='#0f5339',left=df4['Man'])\n\nfor index in df4.index:\n    ax1[2].annotate(str(round(df4['Man'].loc[index],2))+'%',xy=(df4['Man'].loc[index]\/2,index),fontsize=12,color='#000000')\n    ax1[2].annotate(str(round(df4['Woman'].loc[index],2))+'%',xy=(df4['Man'].loc[index]+df4['Woman'].loc[index]\/2,index),fontsize=12,color='#000000')\nax1[2].set_xticks([])\nax1[2].set_yticklabels(df4.index,fontsize=18)\nax1[2].set_title(\"Gender Distribution Across Education\",fontsize=25)\nax1[2].legend(loc ='upper left',fontsize=15)\n#########################################################\n\nax1[3].barh(df6.index,df6['Man'],alpha=0.7,label='Man',color='#663a00')\nax1[3].barh(df6.index,df6['Woman'],alpha=0.7,label='Woman',color='#ffbd66',left=df6['Man'])\n\nfor index in df6.index:\n    ax1[3].annotate(str(round(df6['Man'].loc[index],2))+'%',xy=(df6['Man'].loc[index]\/2,index),fontsize=12,color='#000000')\n    ax1[3].annotate(str(round(df6['Woman'].loc[index],2))+'%',xy=(df6['Man'].loc[index]+df6['Woman'].loc[index]\/2,index),fontsize=12,color='#000000')\nax1[3].set_xticks([])\nax1[3].set_yticklabels(df6.index,fontsize=18)\nax1[3].set_title(\"Gender Distribution Across Coding Experience\",fontsize=25)\nax1[3].legend(loc ='upper left',fontsize=15)\n\nplt.show()","79057d1b":"df_man=df[df['Q2']=='Man']\ndf_woman=df[df['Q2']=='Woman']","0592182e":"import operator\ndef general_practices(question_number,df,df_man,df_woman):\n    gp,gp_man,gp_woman={},{},{}\n    col_list=[]\n    for i in df.columns:\n        if len(question_number)==2:\n            if i[0:2]==question_number:\n                col_list.append(i)\n        else:\n            if i[0:3]==question_number:\n                col_list.append(i)\n    n=len(col_list)\n    for i in range(n-1):\n        index=df[question_number+'_Part_'+str(i+1)].value_counts().index[0]\n        value=df[question_number+'_Part_'+str(i+1)].value_counts().values[0]\n        \n        ####################################################\n        index_man=df_man[question_number+'_Part_'+str(i+1)].value_counts().index[0]\n        value_man=df_man[question_number+'_Part_'+str(i+1)].value_counts().values[0]\n        \n        ######################################################\n        index_woman=df_woman[question_number+'_Part_'+str(i+1)].value_counts().index[0]\n        value_woman=df_woman[question_number+'_Part_'+str(i+1)].value_counts().values[0]\n        \n        \n        gp[index]=value\n        gp_man[index_man]=value_man\n        gp_woman[index_woman]=value_woman\n    return gp,gp_man,gp_woman","159a9747":"def adjust_dataframe(dictionary,question_name,name):\n    data=pd.DataFrame(dictionary.items(),columns=[question_name,name])\n    return data\n\ndef merge_three_dataframe(first_dataframe,second_dataframe,third_dataframe,common_column):\n    return pd.merge(first_dataframe,second_dataframe,on=common_column).merge(third_dataframe,on=common_column)\n\ndef get_final_dataframe(data1,data2,data3,common_column):\n    df_=merge_three_dataframe(data1,data2,data3,common_column)\n    df_.index=df_[common_column]\n    df_.drop(common_column,axis=1,inplace=True)\n    return df_\n\ndf1=adjust_dataframe(general_practices('Q9',df,df_man,df_woman)[0],'IDE','Population')\ndf2=adjust_dataframe(general_practices('Q9',df,df_man,df_woman)[1],'IDE','Man')\ndf3=adjust_dataframe(general_practices('Q9',df,df_man,df_woman)[2],'IDE','Woman')\n\n\ndf_ide=get_final_dataframe(df1,df2,df3,'IDE')\ndf_ide=df_ide[:-1]","4a51e2ad":"df_ide.index=['Jupyter', ' RStudio ',\n       ' Visual Studio ', ' VSCode', ' PyCharm ',\n       '  Spyder  ', '  Notepad++  ', '  Sublime Text  ', '  Vim \/ Emacs  ',\n       ' MATLAB ', ' Jupyter Notebook']","12d685c6":"df_lang=adjust_dataframe(general_practices('Q7',df,df_man,df_woman)[0],'language','Population')\ndf_lang_man=adjust_dataframe(general_practices('Q7',df,df_man,df_woman)[1],'language','Man')\ndf_lang_woman=adjust_dataframe(general_practices('Q7',df,df_man,df_woman)[2],'language','Woman')\n\n\ndf_language=get_final_dataframe(df_lang,df_lang_man,df_lang_woman,'language')\ndf_language=df_language[:-1]","29a65fbb":"fig,(ax1, ax2)=plt.subplots(1,2,figsize=(24,10))\nax1.plot(df_language.index,df_language['Man'],label='Man',color='blue',linestyle='--')\nax1.plot(df_language.index,df_language['Woman'],label='Woman',color='red',linestyle='--')\nax1.plot(df_language.index,df_language['Population'],label='Population',color='green',linestyle='solid')\nax1.set_xticks(df_language.index)\nax1.set_xticklabels(df_language.index,fontsize=18,rotation=90)\nax1.legend(fontsize=12)\nax1.set_title(\"Popular Languages\",fontsize=26)\n\nax2.plot(df_ide.index,df_ide['Man'],label='Man',color='blue',linestyle='--')\nax2.plot(df_ide.index,df_ide['Woman'],label='Woman',color='red',linestyle='--')\nax2.plot(df_ide.index,df_ide['Population'],label='Population',color='green',linestyle='solid')\nax2.set_xticks(df_ide.index)\nax2.set_xticklabels(df_ide.index,fontsize=18,rotation=90)\nax2.legend(fontsize=12)\nax2.set_title(\"Popular Integrated Development IDE's\",fontsize=26)\n\nplt.show()\n\n###########################################################################\ndf_recom=pd.DataFrame(df['Q8'].value_counts(ascending=True))\ntotal=df['Q8'].value_counts(ascending=True).values.sum()\ndf_recom['perc']=df['Q8'].value_counts(ascending=True).values\/total\n####################################################################\nfig,ax2=plt.subplots(figsize=(24,10))\nax2.barh(df['Q8'].value_counts(ascending=True).index,df['Q8'].value_counts(ascending=True).values,color=\"#741b47\",label='Recommend Language')\nfor i, v in enumerate(df_recom['perc']):\n    ax2.text(v, i, str(\"{0:.1f}%\".format(v)), color='black', fontweight='bold', fontsize=14)\nax2.text(6000, 10, \n         'Python is the most popular language recommended to learn first', \n         fontsize=18, fontweight='bold', fontfamily='serif')\nax2.set_xticks([])\nax2.set_yticks(df['Q8'].value_counts(ascending=True).index)\nax2.set_yticklabels(df['Q8'].value_counts(ascending=True).index,fontsize=15)\nax2.legend()\nax2.set_title(\"Data Scientist Recommend Languages\",fontsize=26)\nplt.show()\n","9761ca06":"df_host=adjust_dataframe(general_practices('Q10',df,df_man,df_woman)[0],'HOST','Population')\ndf_host_man=adjust_dataframe(general_practices('Q10',df,df_man,df_woman)[1],'HOST','Man')\ndf_host_woman=adjust_dataframe(general_practices('Q10',df,df_man,df_woman)[2],'HOST','Woman')\n\n\ndf_host_notebooks=get_final_dataframe(df_host,df_host_man,df_host_woman,'HOST')\ndf_host_notebooks=df_host_notebooks.sort_values(by='Population', ascending=True)\ndf_host_notebooks","a382a6ce":"def horizontal_barchart(ax,data,col_name,color,title):\n    total=data[col_name].sum()\n    data['percentage']=round((data[col_name]\/total)*100,2)\n    ax.barh(data.index,data[col_name].values,color=color)\n    for index in data['percentage'].index:\n        ax.annotate(str(data['percentage'].loc[index])+'%',xy=(data['percentage'].loc[index].max(),index),fontsize=15,color='black', fontweight='bold')\n    ax.set_xticks([])\n    ax.set_yticks(data.index)\n    ax.set_yticklabels(data.index,fontsize=20)\n    ax.legend()\n    ax.set_title(title,fontsize=20,fontweight='bold')\n    ax.spines['right'].set_visible(False)  \n    ax.spines['top'].set_visible(False) \n    ax.spines['left'].set_visible(False) \n    ax.spines['bottom'].set_visible(False)\n","4e63f1c9":"\ndef pie_chart(colors,ax,data,col_name,title):\n    '''This function generate pie-chart which is useful to do univariate analysis dataframe columns\n    Parameters:\n        colors:we can pass the colors \n        ax: which axis we want to show pie-chart\n        data: dataframe\n        col_name: pass the column name which we need to analyze\n    '''\n    #Get the labes of dataframe column\n    index=data[col_name].value_counts().index.tolist()\n    #Get the values\n    value=data[col_name].value_counts().values.tolist()\n    #convert in dictionary\n    value_dict = dict(zip(index, value))\n    #if None and Other key are present then we ignore in this case\n    value_dict = {key: value for key, value in value_dict.items() if (key!='None') & (key!='Other')}\n    #set the explode by knowing the len of keys\n    explode=tuple([0.05]*len(value_dict.keys()))\n    #draw pie chart\n    ax.pie(value_dict.values(), explode=explode, colors=colors, startangle=90, labels=value_dict.keys(),\n        autopct='%1.0f%%', pctdistance=0.8,textprops={'fontsize': 16})\n    #fill the center circle of pie-chart\n    centre_circle = plt.Circle((0,0),0.65,fc='white')\n    ax.add_artist(centre_circle)\n    ax.axis('equal')\n    ax.set_title(title,fontsize=20,fontweight='bold')","bc4470db":"fig,(ax1,ax2)=plt.subplots(1,2,figsize=(24,10))\nfig.suptitle(\"- Best Platform-\", size = 26, color =\"#00284b\", weight='bold')\ncolors = [\"#4d0000\",\"#670000\",\"#800000\",\"#9a0000\"]\npie_chart(colors,ax2,df,'Q11',\"Choice of Computing Platform\")\nhorizontal_barchart(ax1,df_host_notebooks,'Population',\"#008080\",\"Choice of Notebooks\")","d6243ea9":"fig,(ax1,ax2)=plt.subplots(1,2,figsize=(24,10))\nfig.suptitle(\"- Best Platform For Man -\", size = 26, color =\"#00284b\", weight='bold')\ncolors = [\"#003366\",\"#194775\",\"#325b84\",\"#4c7093\"]\npie_chart(colors,ax2,df_man,'Q11',\"Choice of Computing Platform\")\nhorizontal_barchart(ax1,df_host_notebooks,'Man',\"#663300\",\"Choice of Notebooks\")","a8bd1970":"\nfig,(ax1,ax2)=plt.subplots(1,2,figsize=(24,10))\nfig.suptitle(\"- Best Platform For Woman -\", size = 26, color =\"#00284b\", weight='bold')\npie_chart(colors,ax2,df_woman,'Q11',\"Choice of Computing Platform\")\nhorizontal_barchart(ax1,df_host_notebooks,'Woman',\"#006633\",\"Choice of Notebooks\")\n","5d9505a1":"df_tool=adjust_dataframe(general_practices('Q14',df,df_man,df_woman)[0],'Tool','Population')\ndf_tool_man=adjust_dataframe(general_practices('Q14',df,df_man,df_woman)[1],'Tool','Man')\ndf_tool_woman=adjust_dataframe(general_practices('Q14',df,df_man,df_woman)[2],'Tool','Woman')\n\n\ndf_vis=get_final_dataframe(df_tool,df_tool_man,df_tool_woman,'Tool')\ndf_vis=df_vis.sort_values(by='Population', ascending=True)\ndf_vis","3d26d408":"df_ml=adjust_dataframe(general_practices('Q16',df,df_man,df_woman)[0],'ML','Population')\ndf_ml_man=adjust_dataframe(general_practices('Q16',df,df_man,df_woman)[1],'ML','Man')\ndf_ml_woman=adjust_dataframe(general_practices('Q16',df,df_man,df_woman)[2],'ML','Woman')\n\n\ndf_machine_learning=get_final_dataframe(df_ml,df_ml_man,df_ml_woman,'ML')\ndf_machine_learning=df_machine_learning.sort_values(by='Population', ascending=True)\ndf_machine_learning","e036ef40":"fig,(ax1,ax2,ax3)=plt.subplots(1,3,figsize=(42,18))\nfig.suptitle(\"- Best Frameworks For Visualization -\", size = 26, color =\"#00284b\", weight='bold')\n\nhorizontal_barchart(ax1,df_vis,'Population',\"#003366\",\"Choice of Population\")\nhorizontal_barchart(ax2,df_vis,'Man',\"#660000\",\"Choice of Man\")\nhorizontal_barchart(ax3,df_vis,'Woman',\"#006633\",\"Choice of Woman\")\n\nfig,(ax1,ax2,ax3)=plt.subplots(1,3,figsize=(44,20))\nfig.suptitle(\"- Best framework For Machine Learning -\", size = 26, color =\"#00284b\", weight='bold')\nhorizontal_barchart(ax1,df_machine_learning,'Population','#bc1e1e',\"Choice of Population\")\nhorizontal_barchart(ax2,df_machine_learning,'Man',\"#407294\",\"Choice of Man\")\nhorizontal_barchart(ax3,df_machine_learning,'Woman',\"#7e1e7e\",\"Choice of Woman\")","35f1898f":"#Plot the bar chart \ndef bar_chart(ax,data,col_name,label,color,y_label):\n    ax.bar(data[col_name].value_counts().index,data[col_name].value_counts().values,color=color,label=label)\n    #Adjust the text in bar chart\n    for index in data[col_name].value_counts().index:\n        ax.annotate(data[data[col_name]==index][col_name].value_counts().values[0],xy=(index,data[data[col_name]==index][col_name].value_counts().values[0]+35),ha=\"center\",va=\"center\",fontsize=18)\n    ax.legend(fontsize=26)\n    ax.set_xticklabels(data[col_name].value_counts().index,rotation=90,fontsize=18,fontweight='bold')\n    ax.set_ylabel(y_label,fontsize=18,fontweight='bold')\n    ax.set_yticks([])\n    ax.spines['right'].set_visible(False)  \n    ax.spines['top'].set_visible(False) \n    ax.spines['left'].set_visible(False) \n    ax.spines['bottom'].set_visible(False)\n","61629cd6":"#Define the figure size\nfig,(ax1,ax2)=plt.subplots(1,2,figsize=(30,10))\nfig.suptitle(\"- Experience With ML Methods -\", size = 26, color =\"#00284b\", weight='bold')\nbar_chart(ax1,df_man,'Q15',\"Man\",\"#2e5f81\",\"Number of years\")\nbar_chart(ax2,df_woman,'Q15',\"Woman\",\"#741b47\",\"Number of years\")\nfig,(ax1,ax2)=plt.subplots(1,2,figsize=(30,10))\nfig.suptitle(\"- Experience With Writing Code -\", size = 26, color =\"#00284b\", weight='bold')\nbar_chart(ax1,df_man,'Q6',\"Man\",\"#2e5f81\",\"Number of years\")\nbar_chart(ax2,df_woman,'Q6',\"Woman\",\"#741b47\",\"Number of years\")\nplt.show()","b78bc1a5":"df_ml=adjust_dataframe(general_practices('Q17',df,df_man,df_woman)[0],'Algo','Population')\ndf_ml_man=adjust_dataframe(general_practices('Q17',df,df_man,df_woman)[1],'Algo','Man')\ndf_ml_woman=adjust_dataframe(general_practices('Q17',df,df_man,df_woman)[2],'Algo','Woman')\n\n\ndf_ml_algo=get_final_dataframe(df_ml,df_ml_man,df_ml_woman,'Algo')\ndf_ml_algo=df_ml_algo.sort_values(by='Population', ascending=True)\ndisplay(df_ml_algo)\n\ndf_cv=adjust_dataframe(general_practices('Q18',df,df_man,df_woman)[0],'cv','Population')\ndf_cv_man=adjust_dataframe(general_practices('Q18',df,df_man,df_woman)[1],'cv','Man')\ndf_cv_woman=adjust_dataframe(general_practices('Q18',df,df_man,df_woman)[2],'cv','Woman')\n\n\ndf_computer_vision=get_final_dataframe(df_cv,df_cv_man,df_cv_woman,'cv')\ndf_computer_vision=df_computer_vision.sort_values(by='Population', ascending=True)\ndisplay(df_computer_vision)\n\ndf_n=adjust_dataframe(general_practices('Q19',df,df_man,df_woman)[0],'nlp','Population')\ndf_n_man=adjust_dataframe(general_practices('Q19',df,df_man,df_woman)[1],'nlp','Man')\ndf_n_woman=adjust_dataframe(general_practices('Q19',df,df_man,df_woman)[2],'nlp','Woman')\n\n\ndf_nlp=get_final_dataframe(df_n,df_n_man,df_n_woman,'nlp')\ndf_nlp=df_nlp.sort_values(by='Population', ascending=True)\ndisplay(df_nlp)","129ac286":"fig,ax1=plt.subplots(figsize=(34,10))\nax1.plot(df_ml_algo.index,df_ml_algo['Man'],label='Man',color='blue',linestyle='--')\nax1.plot(df_ml_algo.index,df_ml_algo['Woman'],label='Woman',color='red',linestyle='--')\nax1.plot(df_ml_algo.index,df_ml_algo['Population'],label='Population',color='green',linestyle='solid')\nax1.set_xticks(df_ml_algo.index)\nax1.set_xticklabels(df_ml_algo.index,fontsize=18,rotation=60)\nax1.legend(fontsize=12)\nax1.set_title(\"Popular Languages\",fontsize=26)","ecae5ed3":"#Data Scientist in Different Countries\ndf_country=df[df['Q5']=='Data Scientist']\ndata_scientist={}\nfor country_name in df_country['Q3'].value_counts().index:\n    data_scientist[country_name]=df_country[df_country['Q3']==country_name]['Q2'].value_counts()\nnew_data=pd.DataFrame(data_scientist).T\nnew_data=new_data[['Man','Woman']]\nnew_data=new_data.T  \nnew_data","dcbd2392":"def salary_of_datasciemtist(Data_Scientist_Data):\n    #Salary of Man and Woman as Data Scientist in different Countries\n    salary={}\n    for name in country:\n        salary[name]={}\n        df1=Data_Scientist_Data[Data_Scientist_Data['Q3']==name]\n        salary[name]['Man']=df1[df1['Q2']=='Man']['Q25'].value_counts()\n        salary[name]['Woman']=df1[df1['Q2']=='Woman']['Q25'].value_counts()\n        salary_df=pd.DataFrame(salary[name]).fillna(0)\n        salary_df['sum']=salary_df.sum(axis=1)\n        salary_df_ratio=salary_df.T\/salary_df['sum']\n        salary_df_ratio=salary_df_ratio[:-1]\n        salary_df_ratio=salary_df_ratio.T\n        salary[name]=salary_df_ratio\n    return salary","9b87d9b6":"def data_scientist_visualization(country_name):\n    fig,(ax1, ax2)=plt.subplots(1,2,figsize=(24,10))\n    ax1.pie(new_data[country_name].values, labels=['Man','Woman'],colors=['#6f0000','#006080'],autopct='%1.1f%%',shadow=True, startangle=90)\n    ax1.axis(\"equal\")\n    ax1.set_title(\"Data Scientist Across Gender in\"+':'+r\"$\\bf{\" + country_name + \"}$\",fontsize=20)\n    ax2.barh(salary_of_datasciemtist(df_country)[country_name].index,salary_of_datasciemtist(df_country)[country_name]['Man'],color='#6f0000',label='Man')\n    ax2.barh(salary_of_datasciemtist(df_country)[country_name].index,salary_of_datasciemtist(df_country)[country_name]['Woman'],left=salary_of_datasciemtist(df_country)[country_name]['Man'],color='#006080',label='Woman')\n\n    for index in salary_of_datasciemtist(df_country)[country_name].index:\n        ax2.annotate(str(round(salary_of_datasciemtist(df_country)[country_name]['Man'].loc[index],3))+'%',xy=(salary_of_datasciemtist(df_country)[country_name]['Man'].loc[index]\/2,index),ha='center',va='center',fontsize=10,color='#000000')\n        ax2.annotate(str(round(salary_of_datasciemtist(df_country)[country_name]['Woman'].loc[index],2))+'%',xy=(salary_of_datasciemtist(df_country)[country_name]['Man'].loc[index]+salary_of_datasciemtist(df_country)[country_name]['Woman'].loc[index]\/2,index),ha='center',va='center',fontsize=10,color='#000000')\n    ax2.set_xticks([])\n    ax2.set_yticklabels(salary_of_datasciemtist(df_country)[country_name].index,fontsize=18)\n    ax2.set_title(\"Salary Distribution Across Gender in\"+':'+r\"$\\bf{\" + country_name + \"}$\",fontsize=20)\n    ax2.legend(loc ='upper left',fontsize=15)\n    plt.show()","6ca9fad8":"country=new_data.columns\nfor name in country[0:10]:\n    if name!='Other':\n        data_scientist_visualization(name)","70c3e8bf":"<h1 id=\"basics\" style=\"font-family:verdana;color:#3F000F;\"> \n    <center>5.Salary-Analysis\n        <a class=\"anchor-link\"><\/a>\n    <\/center>\n<\/h1>","8e60fc18":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        3.2 Gender Participation<i><\/i>\n    <\/h1>\n        <br>\n<\/div>","b0cbbcb3":" \n<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Popular Hosted Noebooks and Computing Plateform\n    <\/h1>\n\n<p>When we started our journey in data science we start thinking about which computing platform to use or how many different kinds of notebooks are available?. So in this analysis, we are going to see which computing platform is famous and what are the choice of man and woman...<\/p>","e1a1b017":"<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana;color:#842f37\">\n    \ud83d\udccc <b>Full Visualization Code:<\/b><br><br>I explained in my youtube channel,please check below link\ud83d\udc47\ud83d\udc47 and if you like then subscribe the channel as well\ud83d\udc4d. Thanks in Advances and please click on Let's Learn Together, it will take you to my youtube channel\n    \n<a href=\"https:\/\/www.youtube.com\/watch?v=7_FzsdsY4Lk&list=PLwceW-ck1usezRrJ-adoYe3yTe3KxYCyK&index=4\" target=\"_blank\">Let's Learn Together!<\/a>\n\n<\/div>\n","e1433b69":"<h1 id=\"basics\" style=\"font-family:verdana;color:#3F000F;\"> \n    <center>1. Load and Read Dataset \n        <a class=\"anchor-link\"><\/a>\n    <\/center>\n<\/h1>","a4ed54ed":"<h1 id=\"basics\" style=\"font-family:verdana;color:#3F000F;\"> \n    <center>2.Age Distribution \n        <a class=\"anchor-link\"><\/a>\n    <\/center>\n<\/h1>","32f33c9d":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Insights:\n    <\/h1>\n    <br><span style=\"color:#000000\n;\">1) Most people are using Jupyter notebooks as Python is very easy to learn and more interesting thing is that any non-technical person can learn python in a few days and we know there are many students who do not have real-world experience so for them Jupyter is the best place to make their hands dirty.<\/span>\n           <br><span style=\"color:#000000\n;\">2) There are old fights between Python user and R user and in 2021 many peoples are more familiar with jupyter compared to R-studio.<\/span>\n           <br><span style=\"color:#000000\n;\">3) I do not think SQL will be the second most used language after python but it's also true we should learn one language which can help us to manage Databases to store data and SQL is really a great language that every Data Scientist should know.<\/span>\n       <br><span style=\"color:#000000\n;\">4) If we put our attention to pycharm and VS code then people are using more VS code in their professional life as it is more compatible with other languages,PyChram is really good and has a good reach in coming years.<\/span>\n<br><span style=\"color:#000000\n;\">5)  Julia and shift are new languages and people are not aware of them much or can say not used to in great extent but they are great in scientific programming due to their speed.<\/span>\n<br><span style=\"color:#000000\n;\">6) Look like Matlab will going to disappear.<\/span>\n    \n    \n<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana;color:#842f37\">\n    \ud83d\udccc <b>Conclusion:<\/b> <br>Jupyter is more famous among development IDE compared to others IDE's and similar python is famous language.<br>\n   \n\n<\/div>","d2c3af40":"\n1. In these graphs, we can see the salary structure of Data scientists in different countries along with the number of participation of men and women.\n               ","3b19432f":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        1.1 Load Library <i><\/i>\n    <\/h1>\n<\/div>","b65fba39":"*  In the below DataFrame we can see the number of participation of men and women working as Data Scientists from different countries\n*   With help of this we can easily track the numbers so like in Nepal, Thailand showing Nan values means there are no participation of women who worked as Data Scientist in 2021\ud83d\ude28","5280a696":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        2.2 Age Distribution Across Gender <i><\/i>\n    <\/h1>\n        <br>Which age group of man and woman are more participating in Data Science?\n<\/div>","456d67ec":"![image.png](attachment:4a0181a2-e40e-4851-8822-f5283761c730.png)","db8b7eb8":"<ol>\n<li>Women from 18-29 are mostly active whereas men from 25-29 are mostly active in 2021.We can conclude that younger women are more interesting to take part in data science which really a good sign\ud83e\uddbe\ud83d\udc69.<br><\/li>\n            <li>As younger women are trying to do more participation but women after 40 years have very less participation..<br><\/li>\n        <\/ol>","c992a897":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Salary-Analysis of Data Scientists\n    <\/h1>","bd4e630a":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        1.2 Read DataSet <i><\/i>\n    <\/h1>\n<\/div>","e655c066":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Across Countries\n    <\/h1>\n    <p>\n        <ol>\n            <ul>\n                <li>\n                    We can easily interpret more number of males are participating from Japan as well as less number of women compared to top 10 countries in Data Science.<br>\n                    <li>\n                     Women from India and the USA showed almost equal number participation.<br>\n                      <li>\n                     Women from Pakistan, Brazil, China, the UK, Nigeria, and Russia also showed less participation in Data Science.<br>\n  \n                          \n","efff14a9":"<h1 id=\"basics\" style=\"font-family:verdana;color:#3F000F;\"> \n    <center>4.Basic Practice of Data Scientists\n        <a class=\"anchor-link\"><\/a>\n    <\/center>\n<\/h1>","9b341f7f":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Popular Frameworks\n    <\/h1>\n\n<p>In this section we are going to perform analysis of Popular Frameworks like what are the visualization tools famous among gender distribution and what kind of machine learning frameworks are popular...<\/p>","508a4453":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        2.1 Age Distribution in 2021 <i><\/i>\n    <\/h1>\n        <br>Let's see first how many peoples are participating from the different age groups in the survey:\n<\/div>","6ed41ec3":"1. Men are choosing Colab and Kaggle notebooks more compared to others' notebooks.\n2. Also, they also prefer to do work on laptops.","478ee06d":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        General Practice of Data Scientist\n    <\/h1>\n    <p> We are always interested to know about other people that how they learn data science and make career transitions in data science. So why not analyze how the man and woman are learning data science and doing great work as well.\n        In this section we are going to analyze,<br><span style=\"color:#331d00;\"> what are the Mooc courses people doing and the enrollment ratio of men and women in different MOOC Courses.<\/span>\n       <br> We also going to analyze <span style=\"color:#331d00;\">which one is the popular IDE people are using to perform the exercise and many more.<\/span>\n     \n        ","e32204b7":"<h1 style=\"font-family:verdana;\"> <center>\ud83d\udc6b Gender-Distribution in Data Science \ud83d\udc69\ud83d\udc68<\/center> <\/h1>\n","ea8fac4d":"<ol>\n<li>Age Group from 18-29 is mostly active in 2021 <br><\/li>\n            <li>40+ age peoples participation is less than mean of the total population<br><\/li>\n        <\/ol>","9352d0d3":"1. I can see similar trends in women same as men.\n\nwhat you think about it?","eb9d8469":"<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana;color:#842f37\">\n    \ud83d\udccc <b>Conclusion:<\/b> <br>Colab and Kaggle Notebooks are more famous and people are preferring to do work on laptop more compared to other's platform.<br>\n   \n\n<\/div>","da1997b8":"<a href=\"https:\/\/www.youtube.com\/watch?v=7_FzsdsY4Lk&list=PLwceW-ck1usezRrJ-adoYe3yTe3KxYCyK&index=4\" target=\"_blank\">Let's Learn Together!<\/a>\n","28357dc7":"<p style=\"font-size:15px; font-family:verdana;\">We will start with the <span style=\"color:#331d00;\">Basic Data Analysis and Visualization<\/span><p>","1c35f06f":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        1.3 Helper Functions <i><\/i>\n    <\/h1>\n<\/div>","7a6baa9e":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 id=\"code\">\n        Popular Integrated Development IDE's\n    <\/h1>\n\n<p>All the beginners in Data Science think about which development environment they should choose to practice the data science techniques.\nwe have many IDE some are beginners friendly and some are useful for the experienced user but which one to choose is a little bit hard to decide. So why not in this exercise we analyze what the kagglers are choosing to practice the best development IDE.\nAlso, we are more interested in seeing how males and females are using different development IDE.\nSo Let's start...<\/p>","2e87fe9b":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h2 id=\"code\">\n        Across Education\n    <\/h2>\n    <p>\n        <ol>\n            <ul>\n                <li>\nMany women are interested in pursuing Professional Doctorate compared to other professions but the same number of women are also not giving responses about their education.<br>\n                   \n                    ","e70863df":"<h1 id=\"basics\" style=\"font-family:verdana;color:#3F000F;\"> \n    <center>3.Countries-Analysis\n        <a class=\"anchor-link\"><\/a>\n    <\/center>\n<\/h1>","e2e01221":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h2 id=\"code\">\n        Across Professsion\n    <\/h2>\n    <p>\n        <ol>\n            <ul>\n                <li>\n Most of the women are currently not employed. It can be a reason for covid-19 as well but now the situation is changing and hope to see more participation next year.<br>\n                    <li>\n                     If we look at the Data Scientist position then we are far away from parity between men and women. This is really not a good sign. we all should help the community to make everyone grow in Data Science.<br>\n                      <li>\n                     I am happy to see the women are working as data analyst.I know the number is less but still good as Data Analyst is the first step to become Data Scientist.<br>","a452f741":"1. Generally peoples are chossing Colab Notebooks and paralley Kaggle notebooks as well because in both of notebooks we can get good amount of RAM and having GPU accelerated with them.\n2. According to me Dekstop are the best but generally, people are going with Laptop more because of compatibility.","b35b4fe5":"<div style=\"font-family:verdana; word-spacing:1.5px;\">\n    <h1 style=\"font-family:verdana;color:#FF7722;\">\n        3.1 Top-10 Countries in 2021 <i><\/i>\n    <\/h1>\n        <br>Let's see first what are the top-10 countries actively participating:\n<\/div>","3427df63":"<div class=\"alert alert-block alert-info\" style=\"font-size:14px; font-family:verdana; line-height: 1.7em;\">\n     &nbsp; In this notebook we are going to see the participation of Man and Woman in Data Science.As Data Science is one of growing filed and its become more important to know how many percenatge of man and woman are participating.Doing this kind of analysis gives us the clear ideas and based on that we can help the comunity to grow by keeping parity.\n<\/div>"}}