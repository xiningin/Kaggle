{"cell_type":{"4d532e5f":"code","3cc39c42":"code","c08cffcd":"code","13ee1a63":"code","09b873cc":"code","f39bf541":"code","7c7f10f3":"code","0e9efb0a":"code","75eb197b":"code","096377f2":"code","9aae9ccb":"code","cb466d89":"code","a5fc1ba1":"code","0ada1a63":"code","4d2a9026":"code","8a72c2b4":"code","79177ae5":"markdown","d7c04529":"markdown","685d09be":"markdown","6fe76089":"markdown","d06cd978":"markdown","4d199f66":"markdown","7bfb0779":"markdown","e19dec13":"markdown","ac85cab6":"markdown","91297a09":"markdown","c3ec8281":"markdown","7a19e49b":"markdown","eac6573e":"markdown"},"source":{"4d532e5f":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\n\nfrom matplotlib import pyplot as plt","3cc39c42":"agri_df = pd.read_csv(filepath_or_buffer='\/kaggle\/input\/all-agriculture-related-datasets-for-india\/csv')\nindia_gdf = gpd.read_file(filename='..\/input\/india-geo-data\/india_geo')","c08cffcd":"agri_df.head()","13ee1a63":"india_gdf.head(2)","09b873cc":"india_gdf.plot()","f39bf541":"india_gdf['statename'] = india_gdf['statename'].apply(\n    func=lambda x : x.replace('&', 'and') if '&' in x else x\n)","7c7f10f3":"from difflib import SequenceMatcher","0e9efb0a":"def get_similar_string(string, string_list):\n    name_ratios = {}\n    \n    for i in string_list:\n        dm = SequenceMatcher(None, string, i).ratio()\n        name_ratios[i] = dm\n    \n    name_ratios = dict(sorted(name_ratios.items(), key=lambda v : v[1], reverse=True))\n    similar_string = list(name_ratios.keys())[0]\n    \n    return similar_string","75eb197b":"state_replacements = {\n    'Andaman and Nicobar Islands' : 'Andaman and Nicobar',\n    'Orissa' : 'Odisha',\n    'Uttarakhand' : 'Uttrakhand',\n    'Chhatisgarh' : 'Chattisgarh'\n}\n\ndistrict_replacements = {\n    'Thrissur': 'Thirssur',\n    'Viluppuram': 'Villupuram',\n    'Kasaragod': 'Kasargod',\n    'Vadodara': 'Vadodara(Baroda)',\n    'Bulandshahr': 'Bulandshahar',\n    'Tarn Taran': 'Tarntaran',\n    'Sundargarh': 'Sundergarh',\n    'Kannauj': 'Kannuj',\n    'Dehradun': 'Dehradoon',\n    'Jalor': 'Jalore',\n    'Sipahijula': 'Sepahijala',\n    'South Twenty Four Parganas': 'Sounth 24 Parganas',\n    'Solapur': 'Sholapur',\n    'Moradabad': 'Muradabad',\n    'Rupnagar': 'Ropar (Rupnagar)',\n    'North Twenty Four Parganas': 'North 24 Parganas',\n    'Lakhimpur': 'Khiri (Lakhimpur)',\n    'Panch Mahals': 'Panchmahals',\n    'Maldah': 'Malda',\n    'Barwani': 'Badwani',\n    'Purba Medinipur': 'Medinipur(W)',\n    'Gautam Buddha Nagar': 'Gautam Budh Nagar',\n    'Chitrakoot': 'Chitrakut',\n    'Rangareddy': 'Ranga Reddy',\n    'Narsimhapur': 'Narsinghpur',\n    'Chittoor': 'Chittor',\n    'Anugul': 'Angul',\n    'Farrukhabad': 'Farukhabad',\n    'Nabarangapur': 'Nowarangpur',\n    'Tiruvannamalai': 'Thiruvannamalai',\n    'Jalaun': 'Jalaun (Orai)',\n    'Bathinda': 'Bhatinda',\n    'Hugli': 'Hooghly',\n    'Hydrabad': 'Hyderabad',\n    'Ahmadnagar': 'Ahmednagar',\n    'Rae Bareli': 'Raebarelli',\n    'Udham Singh Nagar': 'UdhamSinghNagar',\n    'Kanniyakumari': 'Nagercoil (Kannyiakumari)',\n    'Anuppur': 'Anupur',\n    'Chittaurgarh': 'Chittorgarh',\n    'Buldana': 'Buldhana'\n}\n\nagri_dist_replacements = {\n    'Lakhimpur' : 'Khiri (Lakhimpur)',\n    'Mayurbhanja' : 'Mayurbhanj'\n}","096377f2":"for (o, r) in state_replacements.items():\n    india_gdf['statename'].replace(to_replace=o, value=r, inplace=True)\n\nfor (o, r) in district_replacements.items():\n    india_gdf['distname'].replace(to_replace=o, value=r, inplace=True)\n\nfor (o, r) in agri_dist_replacements.items():\n    agri_df['district'].replace(to_replace=o, value=r, inplace=True)","9aae9ccb":"def filter_statewise(state_name, df, gdf, show_plot=False, plot_column=None, show_country=False):\n    country_gdf = gdf\n    available_cols = ['commodity', 'variety', 'min_price', 'max_price', 'modal_price']\n    \n    if plot_column in available_cols:\n        if (plot_column == 'commodity') or (plot_column == 'variety'):\n            aggfunc = 'count'\n        else:\n            aggfunc = 'mean'\n    else:\n        plot_column = 'modal_price'\n        aggfunc = 'mean'\n    \n    df = df[df['state'] == state_name]\n    gdf = gdf[gdf['statename'] == state_name]\n    \n    df = df[['district', 'market', 'commodity', 'variety', \n             'arrival_date', 'min_price', 'max_price', 'modal_price']]\n    gdf = gdf[['distname', 'distarea', 'totalpopul', 'totalhh', \n               'totpopmale', 'totpopfema', 'st_areasha', 'st_lengths', 'geometry']]\n    gdf.columns = ['district', 'dist_area', 'popn', 'total_hh','male_popn', \n                   'female_popn', 'st_areasha', 'st_lengths', 'geometry']\n    \n    state_data = gdf.merge(df, on='district', how='left')\n    \n    if show_plot:\n        if plot_column:\n            state_geometry = state_data['geometry']\n            state_data_dis = state_data.dissolve(by=['district'], aggfunc=aggfunc)\n            \n            if show_country:\n                fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(16, 12))\n                \n                country_gdf_dis = country_gdf.dissolve(by=['statename'], aggfunc='mean')\n                country_gdf_dis.plot(column='totalpopul', legend=True, legend_kwds={'shrink': 0.3}, ax=axes[0])\n                axes[0].set_title('India; Statewise - Popn')\n                \n                ax = state_data_dis.plot(color='white', edgecolor='black', ax=axes[1])\n                state_data_dis.plot(column=plot_column, legend=True, legend_kwds={'shrink': 0.3}, ax=ax)\n                axes[1].set_title('{}; {}'.format(state_name, plot_column))\n                \n                plt.show()            \n            \n            else:\n                ax = state_data_dis.plot(color='white', edgecolor='black', figsize=(10, 6))\n                state_data_dis.plot(column=plot_column, legend=True, legend_kwds={'shrink': 0.3}, ax=ax)\n                ax.set_title('{}; {}'.format(state_name, plot_column))\n                plt.show()\n            \n            # commodities\n            plt.tight_layout()\n            df['commodity'].value_counts().plot(kind='barh')\n            plt.title(state_name + '; Commodities')\n            plt.show()\n            \n            # varieties\n            plt.tight_layout()\n            df['variety'].value_counts().plot(kind='barh')\n            plt.title(state_name + '; Varieties')\n            plt.show()\n            \n            return None\n        \n        return \"Requires `plot_column`\"\n    return state_data","cb466d89":"filter_statewise(\n    state_name='Andhra Pradesh',\n    df=agri_df,\n    gdf=india_gdf,\n    show_plot=True,\n    show_country=True,\n    plot_column='modal_price'\n)","a5fc1ba1":"filter_statewise(\n    state_name='Karnataka',\n    df=agri_df,\n    gdf=india_gdf,\n    show_plot=True,\n    show_country=True,\n    plot_column='modal_price'\n)","0ada1a63":"filter_statewise(\n    state_name='Telangana',\n    df=agri_df,\n    gdf=india_gdf,\n    show_plot=True,\n    show_country=True,\n    plot_column='modal_price'\n)","4d2a9026":"filter_statewise(\n    state_name='Tamil Nadu',\n    df=agri_df,\n    gdf=india_gdf,\n    show_plot=True,\n    show_country=True,\n    plot_column='modal_price'\n)","8a72c2b4":"filter_statewise(\n    state_name='Uttar Pradesh',\n    df=agri_df,\n    gdf=india_gdf,\n    show_plot=True,\n    show_country=True,\n    plot_column='modal_price'\n)","79177ae5":"### Data Replacements (editing)","d7c04529":"**Tamil Nadu**","685d09be":"**Telangana**","6fe76089":"**End**","d06cd978":"**Karnataka**","4d199f66":"**Uttar Pradesh**","7bfb0779":"### `import` Packages","e19dec13":"### Data Manipulation","ac85cab6":"**Andhra Pradesh**","91297a09":"**Districts that didn't match with any:**\n\n* Burdwan\n* Kanpur\n* Balasore\n* Bhadohi(Sant Ravi Nagar)\n* Mau(Maunathbhanjan)\n* Kanker\n* Khandwa","c3ec8281":"### Data Reading","7a19e49b":"### String Sequence Matcher","eac6573e":"### Data Visualization"}}