{"cell_type":{"67f59314":"code","39fc9c67":"code","bcd038f4":"code","2144dc94":"code","04e3fa01":"code","18d79696":"code","e9ebc662":"code","2b485509":"code","c3ebf268":"markdown","c219b31f":"markdown","aa1e6f53":"markdown","c45caf43":"markdown","fcef9155":"markdown","7650038f":"markdown","20c7b06c":"markdown","3f09efc1":"markdown"},"source":{"67f59314":"# Creaci\u00f3n de un GeoDataFrame a partir de un DataFrame con coordenadas\n# Fernando Bordignon - http:\/\/saberesdigitales.unipe.edu.ar\n\n# Carga de librer\u00edas\n\nimport pandas as pd\nimport geopandas\nimport matplotlib.pyplot as plt","39fc9c67":"df = pd.DataFrame(\n    {'City': ['Buenos Aires', 'Brasilia', 'Santiago', 'Bogota', 'Caracas'],\n     'Country': ['Argentina', 'Brazil', 'Chile', 'Colombia', 'Venezuela'],\n     'Latitude': [-34.58, -15.78, -33.45, 4.60, 10.48],\n     'Longitude': [-58.66, -47.91, -70.66, -74.08, -66.86]})","bcd038f4":"gdf = geopandas.GeoDataFrame(\n    df, geometry=geopandas.points_from_xy(df.Longitude, df.Latitude))\n\nprint(gdf.head())","2144dc94":"world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))\n\n# We restrict to South America.\nax = world[world.continent == 'South America'].plot(\n    color='white', edgecolor='black')\n\n# We can now plot our ``GeoDataFrame``.\ngdf.plot(ax=ax, color='red')\n\nplt.show()","04e3fa01":"df = pd.DataFrame(\n    {'City': ['Buenos Aires', 'Brasilia', 'Santiago', 'Bogota', 'Caracas'],\n     'Country': ['Argentina', 'Brazil', 'Chile', 'Colombia', 'Venezuela'],\n     'Coordinates': ['POINT(-58.66 -34.58)', 'POINT(-47.91 -15.78)',\n                     'POINT(-70.66 -33.45)', 'POINT(-74.08 4.60)',\n                     'POINT(-66.86 10.48)']})","18d79696":"from shapely import wkt\n\ndf['Coordinates'] = geopandas.GeoSeries.from_wkt(df['Coordinates'])","e9ebc662":"gdf = geopandas.GeoDataFrame(df, geometry='Coordinates')\n\nprint(gdf.head())","2b485509":"ax = world[world.continent == 'South America'].plot(\n    color='white', edgecolor='black')\n\ngdf.plot(ax=ax, color='red')\n\nplt.show()","c3ebf268":"# Creaci\u00f3n de un GeoDataFrame a partir de un DataFrame con coordenadas\n\nEste ejemplo muestra c\u00f3mo crear un GeoDataFrame cuando se parte de un DataFrame normal que tiene coordenadas en formato WKT (texto conocido), o en dos columnas.","c219b31f":"Por \u00faltimo, trazamos las coordenadas sobre un mapa a nivel de pa\u00eds.","aa1e6f53":"Un GeoDataFrame necesita un objeto shapely (georeferenciado). Utilizamos geopandas points_from_xy() para transformar la Longitud y la Latitud en una lista de objetos shapely.Point y establecerla como geometr\u00eda mientras se crea el GeoDataFrame. (n\u00f3tese que points_from_xy() es una envoltura (wrapper) mejorada para [Point(x, y) for x, y in zip(df.Longitude, df.Latitude)])","c45caf43":"Aqu\u00ed, consideramos un DataFrame que tiene coordenadas en formato WKT.","fcef9155":"El GeoDataFrame se construye como sigue:","7650038f":"**A partir de longitudes y latitudes**\n\nEn primer lugar, consideremos un DataFrame que contiene ciudades y sus respectivas longitudes y latitudes.","20c7b06c":"**Desde el formato WKT**\n\nAqu\u00ed, consideramos un DataFrame que tiene coordenadas en formato WKT.","3f09efc1":"De nuevo, podemos trazar nuestro GeoDataFrame."}}