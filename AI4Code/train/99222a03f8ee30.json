{"cell_type":{"ce676161":"code","63693c9b":"code","003366ee":"code","5a19164f":"code","277738f6":"code","cda1cab0":"code","2e6693fb":"code","efe6887d":"code","a0246170":"code","d7641130":"code","187f4b5b":"code","c68c7a26":"code","d97c2b29":"code","5d094de9":"code","13cd0b52":"code","136afde2":"code","4be14521":"code","8aafe102":"code","c6bf62c9":"code","722b65fe":"code","f791c680":"code","aa546bbb":"code","799a6898":"code","91737807":"markdown","464142f1":"markdown","a1180944":"markdown","fa1401e6":"markdown","5b2210dd":"markdown","01eeffa6":"markdown","71edd6f1":"markdown","5d0ec372":"markdown","0a26514a":"markdown"},"source":{"ce676161":"# [\uc2dc\ud5d8\uc6a9 \ub370\uc774\ud130\uc14b \ub9cc\ub4e4\uae30]\n# (\ub2e8, y_test \ub370\uc774\ud130\ub294 \ud65c\uc6a9\ud574\uc11c\ub294 \uc548\ub428)\n# \uc2dc\ud5d8\ud658\uacbd \uc138\ud305 (\ucf54\ub4dc \ubcc0\uacbd X)\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\ndef exam_data_load(df, target, id_name=\"\", null_name=\"\"):\n    if id_name == \"\":\n        df = df.reset_index().rename(columns={\"index\": \"id\"})\n        id_name = 'id'\n    else:\n        id_name = id_name\n    \n    if null_name != \"\":\n        df[df == null_name] = np.nan\n    \n    X_train, X_test = train_test_split(df, test_size=0.2, shuffle=True, random_state=2021)\n    y_train = X_train[[id_name, target]]\n    X_train = X_train.drop(columns=[id_name, target])\n    y_test = X_test[[id_name, target]]\n    X_test = X_test.drop(columns=[id_name, target])\n    return X_train, X_test, y_train, y_test \n    \ndf = pd.read_csv(\"..\/input\/customer-analytics\/Train.csv\")\nX_train, X_test, y_train, y_test = exam_data_load(df, \n                                                  target='Reached.on.Time_Y.N', \n                                                  id_name='ID')\n\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","63693c9b":"# \uc81c\uacf5\ub41c 3\uac1c \ub370\uc774\ud130 (y_test\ub370\uc774\ud130 \ud65c\uc6a9X)\nX_train.shape, X_test.shape, y_train.shape","003366ee":"# \ub370\uc774\ud130 \ud655\uc778\nprint(X_train.shape)\nX_train.head()","5a19164f":"y_train","277738f6":"# \ub808\uc774\ube14(\ud0c0\uac9f) \ud655\uc778\ny_train['Reached.on.Time_Y.N'].value_counts()","cda1cab0":"# X_train \uacb0\uce21\uce58 \ud655\uc778\nX_train.isnull().sum()","2e6693fb":"# X_test \uacb0\uce21\uce58 \ud655\uc778\nX_test.isnull().sum()","efe6887d":"# \ub370\uc774\ud130 \ud0c0\uc785 \ud655\uc778\nX_train.info()","a0246170":"# object \ud0c0\uc785 \uceec\ub7fc, \uace0\uc720\uac12 \uac1c\uc218 \ud655\uc778\nX_train[['Warehouse_block', 'Mode_of_Shipment', 'Product_importance', 'Gender']].nunique()","d7641130":"# object \uceec\ub7fc \uc0ad\uc81c (\ub610\ub294 \ub77c\ubca8\uc778\ucf54\ub529, \uc6d0\ud56b\uc778\ucf54\ub529)\nX_train = X_train.drop(['Warehouse_block', 'Mode_of_Shipment', 'Product_importance', 'Gender'], axis=1)\nX_test = X_test.drop(['Warehouse_block', 'Mode_of_Shipment', 'Product_importance', 'Gender'], axis=1)\nX_train","187f4b5b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier","c68c7a26":"from sklearn.model_selection import train_test_split\nX_tr,X_val,y_tr,y_val = train_test_split(X_train,y_train['Reached.on.Time_Y.N'],test_size=0.2,random_state=2021)","d97c2b29":"model = LogisticRegression()\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","5d094de9":"model = KNeighborsClassifier()\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","13cd0b52":"model = SVC()\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","136afde2":"model = DecisionTreeClassifier()\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","4be14521":"model = RandomForestClassifier(n_estimators=100)\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","8aafe102":"model = XGBClassifier(eval_metric='mlogloss', use_label_encoder=False)\nmodel.fit(X_tr, y_tr)\nround(model.score(X_val, y_val) * 100, 2)","c6bf62c9":"model = KNeighborsClassifier()\nmodel.fit(X_train, y_train['Reached.on.Time_Y.N'])\npred = model.predict(X_test)\npred","722b65fe":"submission = pd.DataFrame({\n        \"ID\": y_test[\"ID\"],\n        \"Reached.on.Time_Y.N\": pred\n    })","f791c680":"submission.head()","aa546bbb":"submission.to_csv('submission.csv', index=False)  ## \uc218\ud5d8\ubc88\ud638.csv","799a6898":"# \uc870\uae08 \ub5a8\uc5b4\uc9c4 \uc131\ub2a5\uc744 \ubcf4\uc5ec\uc8fc\uace0 \uc788\uc74c\nround(model.score(X_test, y_test['Reached.on.Time_Y.N']) * 100, 2)","91737807":"## EDA","464142f1":"## \uc804\uc790\uc0c1\uac70\ub798 \ubc30\uc1a1 \ub370\uc774\ud130\n### \uc81c\ud488 \ubc30\uc1a1 \uc2dc\uac04\uc5d0 \ub9de\ucdb0 \ubc30\uc1a1\ub418\uc5c8\ub294\uc9c0 \uc608\uce21\ubaa8\ub378 \ub9cc\ub4e4\uae30\n\ud559\uc2b5\uc6a9 \ub370\uc774\ud130 (X_train, y_train)\uc744 \uc774\uc6a9\ud558\uc5ec \ubc30\uc1a1 \uc608\uce21 \ubaa8\ud615\uc744 \ub9cc\ub4e0 \ud6c4, \uc774\ub97c \ud3c9\uac00\uc6a9 \ub370\uc774\ud130(X_test)\uc5d0 \uc801\uc6a9\ud558\uc5ec \uc5bb\uc740 \uc608\uce21\uac12\uc744 \ub2e4\uc74c\uacfc \uac19\uc740 \ud615\uc2dd\uc758 CSV\ud30c\uc77c\ub85c \uc0dd\uc131\ud558\uc2dc\uc624(\uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 ROC-AUC \ud3c9\uac00\uc9c0\ud45c\uc5d0 \ub530\ub77c \ucc44\uc810)\n\n![image.png](attachment:f70c3a4b-9984-4656-af95-dac047a900cb.png)\n\n[\uc2dc\ud5d8\uc6a9 \ub370\uc774\ud130\uc14b \ub9cc\ub4e4\uae30] \ucf54\ub4dc\ub294 \uc608\uc2dc\ubb38\uc81c\uc640 \ub3d9\uc77c\ud55c \ud615\ud0dc\uc758 X_train, y_train, X_test \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uae30 \uc704\ud568\uc784\n\n(\uc720\uc758\uc0ac\ud56d)\n- \uc131\ub2a5\uc774 \uc6b0\uc218\ud55c \uc608\uce21\ubaa8\ud615\uc744 \uad6c\ucd95\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc801\uc808\ud55c \ub370\uc774\ud130 \uc804\ucc98\ub9ac, \ud53c\ucc98\uc5d4\uc9c0\ub2c8\uc5b4\ub9c1, \ubd84\ub958\uc54c\uace0\ub9ac\uc998, \ud558\uc774\ud37c\ud30c\ub77c\ubbf8\ud130 \ud29c\ub2dd, \ubaa8\ud615 \uc559\uc0c1\ube14 \ub4f1\uc774 \uc218\ubc18\ub418\uc5b4\uc57c \ud55c\ub2e4.\n- \uc218\ud5d8\ubc88\ud638.csv\ud30c\uc77c\uc774 \ub9cc\ub4e4\uc5b4\uc9c0\ub3c4\ub85d \ucf54\ub4dc\ub97c \uc81c\ucd9c\ud55c\ub2e4.\n- \uc81c\ucd9c\ud55c \ubaa8\ub378\uc758 \uc131\ub2a5\uc740 ROC-AUC\ud615\ud0dc\ub85c \uc77d\uc5b4\ub4dc\ub9b0\ub2e4.","a1180944":"## [\ucc38\uace0]\uc791\uc5c5\ud6152 \ubb38\uad6c\n- \ucd9c\ub825\uc744 \uc6d0\ud558\uc2e4 \uacbd\uc6b0 print() \ud568\uc218 \ud65c\uc6a9\n- \uc608\uc2dc) print(df.head())\n- getcwd(), chdir() \ub4f1 \uc791\uc5c5 \ud3f4\ub354 \uc124\uc815 \ubd88\ud544\uc694\n- \ud30c\uc77c \uacbd\ub85c \uc0c1 \ub0b4\ubd80 \ub4dc\ub77c\uc774\ube0c \uacbd\ub85c(C: \ub4f1) \uc811\uadfc \ubd88\uac00\n\n### \ub370\uc774\ud130 \ud30c\uc77c \uc77d\uae30 \uc608\uc81c\n- import pandas as pd\n- X_test = pd.read_csv(\"data\/X_test.csv\")\n- X_train = pd.read_csv(\"data\/X_train.csv\")\n- y_train = pd.read_csv(\"data\/y_train.csv\")\n\n### \uc0ac\uc6a9\uc790 \ucf54\ub529\n\n### \ub2f5\uc548 \uc81c\ucd9c \ucc38\uace0\n- \uc544\ub798 \ucf54\ub4dc \uc608\uce21\ubcc0\uc218\uc640 \uc218\ud5d8\ubc88\ud638\ub97c \uac1c\uc778\ubcc4\ub85c \ubcc0\uacbd\ud558\uc5ec \ud65c\uc6a9\n- pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)","fa1401e6":"## \uc0ac\uc6a9\uc790 \ucf54\ub529","5b2210dd":"## \ubaa8\ub378 \ubc0f \ud3c9\uac00","01eeffa6":"## \ud480\uc774","71edd6f1":"## \uacb0\uacfc \ucc44\uc810","5d0ec372":"## \ubaa8\ub378 \uc120\ud0dd \ubc0f \uacb0\uacfc \ucd9c\ub825","0a26514a":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac"}}