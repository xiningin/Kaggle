{"cell_type":{"bd56d6b1":"code","e0c02a46":"code","8cbd2e0f":"code","b1f7bc08":"code","ee8af9d3":"code","db53a383":"code","faa404a5":"code","1f2c314a":"code","c3187518":"code","dce4c45e":"code","aed1372d":"code","1c9e3376":"code","432a7dc2":"code","712f98ab":"code","5cc1bb9d":"code","56218a11":"code","32af94a0":"markdown","f92db3fc":"markdown","9f5daaa1":"markdown","e4bbeb30":"markdown","5dd17ce0":"markdown","42c434cc":"markdown"},"source":{"bd56d6b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom xgboost import XGBRegressor\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e0c02a46":"train = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\")\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\")\ntrain.head()","8cbd2e0f":"test.head()","b1f7bc08":"train.describe()","ee8af9d3":"train.columns ","db53a383":"test.columns\n","faa404a5":"train.isnull().sum()\n","1f2c314a":"test.isnull().sum()\n","c3187518":"category_column = [ col for col in train.columns if train[col].dtypes == \"object\"]\nlabelencoder = LabelEncoder()\nfor column in category_column:\n    train[column] = labelencoder.fit_transform(train[column])\n    test[column] = labelencoder.transform(test[column])\ntrain.head()","dce4c45e":"fig = plt.figure(figsize=(20,20))\nsns.heatmap(train.corr().round(2),annot = True)","aed1372d":"X = train.drop(['id','target'],axis = 1)\ny = train['target']\nX_valid = test.drop(['id'],axis = 1)","1c9e3376":"X.head()","432a7dc2":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.20,random_state=0)","712f98ab":"model = XGBRegressor(n_estimators=1000,\n                           min_child_weight = 1,\n                           max_depth = 4,\n                           gamma = 0.2,\n                           colsample_bytree = 0.5)\nmodel.fit(X_train,y_train,early_stopping_rounds=5,eval_set=[(X_test,y_test)],verbose=False)\ny_predict = model.predict(X_test)","5cc1bb9d":"print(\"MSE: \",mean_squared_error(y_test,y_predict,squared=False))\nprint(\"MAE: \",mean_absolute_error(y_test,y_predict))","56218a11":"predictions = model.predict(X_valid)\nsample_sub = pd.read_csv(\"..\/input\/30-days-of-ml\/sample_submission.csv\")\nsubmission = pd.DataFrame({'Id':sample_sub['id'],'target':predictions.astype(float)})\nsubmission.to_csv('.\/my_submission.csv', index = False)\nprint(\"Your submission was successfully saved!\")","32af94a0":"- ## Feature Selection","f92db3fc":"# Step 2: Load the dataset","9f5daaa1":"# Step 1: Import helpful libraries","e4bbeb30":"# Step 5: Submit to the competition\n","5dd17ce0":"# Step 3: Prepare the data","42c434cc":"# Step 4: Train a model"}}