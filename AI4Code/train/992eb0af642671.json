{"cell_type":{"c8999ea5":"code","0062e08a":"code","a46fd0d0":"code","e5ecf711":"code","61277a42":"code","736359ed":"code","682b4fcc":"code","113b3852":"code","e9aa7fda":"code","7c9897ce":"markdown","fe64c67c":"markdown","d6257b70":"markdown"},"source":{"c8999ea5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0062e08a":"sub = pd.read_csv('..\/input\/tabular-playground-series-jan-2022\/sample_submission.csv')\nsub.sort_values(by=['row_id'], inplace=True)\nsub1 = pd.read_csv('..\/input\/tps-submissions-january-2022\/465284_submission.csv')\nsub1.sort_values(by=['row_id'], inplace=True)\nsub2 = pd.read_csv('..\/input\/tps-submissions-january-2022\/467251_submission.csv')\nsub2.sort_values(by=['row_id'], inplace=True)\nsub3 = pd.read_csv('..\/input\/tps-submissions-january-2022\/474308_submission.csv')\nsub3.sort_values(by=['row_id'], inplace=True)\nsub4 = pd.read_csv('..\/input\/tps-submissions-january-2022\/477890_submission.csv')\nsub4.sort_values(by=['row_id'], inplace=True)\nsub5 = pd.read_csv('..\/input\/tps-submissions-january-2022\/490275_submission.csv')\nsub5.sort_values(by=['row_id'], inplace=True)\nsub6 = pd.read_csv('..\/input\/tps-submissions-january-2022\/492669_submission.csv')\nsub6.sort_values(by=['row_id'], inplace=True)\nsub7 = pd.read_csv('..\/input\/tps-submissions-january-2022\/493924_submission.csv')\nsub7.sort_values(by=['row_id'], inplace=True)\nsub8 = pd.read_csv('..\/input\/tps-submissions-january-2022\/496333_submission.csv')\nsub8.sort_values(by=['row_id'], inplace=True)\nsub9 = pd.read_csv('..\/input\/tps-submissions-january-2022\/500896_submission.csv')\nsub9.sort_values(by=['row_id'], inplace=True)\nsub10 = pd.read_csv('..\/input\/tps-submissions-january-2022\/434469_submission.csv')\nsub10.sort_values(by=['row_id'], inplace=True)\nsub11 = pd.read_csv('..\/input\/tps-submissions-january-2022\/467928_submission.csv')\nsub11.sort_values(by=['row_id'], inplace=True)\nsub12 = pd.read_csv('..\/input\/tps-submissions-january-2022\/491812_submission.csv')\nsub12.sort_values(by=['row_id'], inplace=True)\nsub13 = pd.read_csv('..\/input\/tps-submissions-january-2022\/461163_submission.csv')\nsub13.sort_values(by=['row_id'], inplace=True)\nsub14 = pd.read_csv('..\/input\/tps-submissions-january-2022\/452597_submission.csv')\nsub14.sort_values(by=['row_id'], inplace=True)\nsub15 = pd.read_csv('..\/input\/tps-submissions-january-2022\/424305_submission.csv')\nsub15.sort_values(by=['row_id'], inplace=True)\nsub16 = pd.read_csv('..\/input\/tps-submissions-january-2022\/417724_submission.csv')\nsub16.sort_values(by=['row_id'], inplace=True)\nsub17 = pd.read_csv('..\/input\/tps-submissions-january-2022\/478552_submission.csv')\nsub17.sort_values(by=['row_id'], inplace=True)\nsub18 = pd.read_csv('..\/input\/tps-submissions-january-2022\/414656_submission.csv')\nsub18.sort_values(by=['row_id'], inplace=True)\nsub19 = pd.read_csv('..\/input\/tps-submissions-january-2022\/415147_submission.csv')\nsub19.sort_values(by=['row_id'], inplace=True)\nsub20 = pd.read_csv('..\/input\/tps-submissions-january-2022\/416404_submission.csv')\nsub20.sort_values(by=['row_id'], inplace=True)\nsub21 = pd.read_csv('..\/input\/tps-submissions-january-2022\/416957_submission.csv')\nsub21.sort_values(by=['row_id'], inplace=True)\nsub22 = pd.read_csv('..\/input\/tps-submissions-january-2022\/425169_submission.csv')\nsub22.sort_values(by=['row_id'], inplace=True)\nsub23 = pd.read_csv('..\/input\/tps-submissions-january-2022\/424122_submission.csv')\nsub23.sort_values(by=['row_id'], inplace=True)\nsub24 = pd.read_csv('..\/input\/tps-submissions-january-2022\/421332_submission.csv')\nsub24.sort_values(by=['row_id'], inplace=True)\nsub25 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408376_submission.csv')\nsub25.sort_values(by=['row_id'], inplace=True)\nsub26 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408755_submission.csv')\nsub26.sort_values(by=['row_id'], inplace=True)\nsub27 = pd.read_csv('..\/input\/tps-submissions-january-2022\/409115_submission.csv')\nsub27.sort_values(by=['row_id'], inplace=True)\nsub28 = pd.read_csv('..\/input\/tps-submissions-january-2022\/406456_submission.csv')\nsub28.sort_values(by=['row_id'], inplace=True)\nsub29 = pd.read_csv('..\/input\/tps-submissions-january-2022\/406966_submission.csv')\nsub29.sort_values(by=['row_id'], inplace=True)\nsub30 = pd.read_csv('..\/input\/tps-submissions-january-2022\/402048_submission.csv')\nsub30.sort_values(by=['row_id'], inplace=True)\nsub31 = pd.read_csv('..\/input\/tps-submissions-january-2022\/404812_submission.csv')\nsub31.sort_values(by=['row_id'], inplace=True)\nsub32 = pd.read_csv('..\/input\/tps-submissions-january-2022\/409088_submission.csv')\nsub32.sort_values(by=['row_id'], inplace=True)\nsub33 = pd.read_csv('..\/input\/tps-submissions-january-2022\/409611_submission.csv')\nsub33.sort_values(by=['row_id'], inplace=True)\nsub34 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401879_submission.csv')\nsub34.sort_values(by=['row_id'], inplace=True)\nsub35 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401769_submission.csv')\nsub35.sort_values(by=['row_id'], inplace=True)\nsub36 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408279_submission.csv')\nsub36.sort_values(by=['row_id'], inplace=True)\nsub37 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401776_submission.csv')\nsub37.sort_values(by=['row_id'], inplace=True)\nsub38 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408821_submission.csv')\nsub38.sort_values(by=['row_id'], inplace=True)\nsub39 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408066_submission.csv')\nsub39.sort_values(by=['row_id'], inplace=True)\nsub40 = pd.read_csv('..\/input\/tps-submissions-january-2022\/419426_submission.csv')\nsub40.sort_values(by=['row_id'], inplace=True)\nsub41 = pd.read_csv('..\/input\/tps-submissions-january-2022\/404524_submission.csv')\nsub41.sort_values(by=['row_id'], inplace=True)\nsub42 = pd.read_csv('..\/input\/tps-submissions-january-2022\/405744_submission.csv')\nsub42.sort_values(by=['row_id'], inplace=True)\nsub43 = pd.read_csv('..\/input\/tps-submissions-january-2022\/406528_submission.csv')\nsub43.sort_values(by=['row_id'], inplace=True)\nsub44 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408201_submission.csv')\nsub44.sort_values(by=['row_id'], inplace=True)\nsub45 = pd.read_csv('..\/input\/tps-submissions-january-2022\/405483_submission.csv')\nsub45.sort_values(by=['row_id'], inplace=True)\nsub46 = pd.read_csv('..\/input\/tps-submissions-january-2022\/407247_submission.csv')\nsub46.sort_values(by=['row_id'], inplace=True)\nsub47 = pd.read_csv('..\/input\/tps-submissions-january-2022\/409441_submission.csv')\nsub47.sort_values(by=['row_id'], inplace=True)\nsub48 = pd.read_csv('..\/input\/tps-submissions-january-2022\/405331_submission.csv')\nsub48.sort_values(by=['row_id'], inplace=True)\nsub49 = pd.read_csv('..\/input\/tps-submissions-january-2022\/405132_submission.csv')\nsub49.sort_values(by=['row_id'], inplace=True)\nsub50 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400728_submission.csv')\nsub50.sort_values(by=['row_id'], inplace=True)\nsub51 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400534_submission.csv')\nsub51.sort_values(by=['row_id'], inplace=True)\nsub52 = pd.read_csv('..\/input\/tps-submissions-january-2022\/402944_submission.csv')\nsub52.sort_values(by=['row_id'], inplace=True)\nsub53 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401945_submission.csv')\nsub53.sort_values(by=['row_id'], inplace=True)\nsub54 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401456_submission.csv')\nsub54.sort_values(by=['row_id'], inplace=True)\nsub55 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400294_submission.csv')\nsub55.sort_values(by=['row_id'], inplace=True)\nsub56 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408522_submission.csv')\nsub56.sort_values(by=['row_id'], inplace=True)\nsub57 = pd.read_csv('..\/input\/tps-submissions-january-2022\/414322_submission.csv')\nsub57.sort_values(by=['row_id'], inplace=True)\nsub58 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400289_submission.csv')\nsub58.sort_values(by=['row_id'], inplace=True)\nsub59 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401205_submission.csv')\nsub59.sort_values(by=['row_id'], inplace=True)\nsub60 = pd.read_csv('..\/input\/tps-submissions-january-2022\/406254_submission.csv')\nsub60.sort_values(by=['row_id'], inplace=True)\nsub61 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408876_submission.csv')\nsub61.sort_values(by=['row_id'], inplace=True)\nsub62 = pd.read_csv('..\/input\/tps-submissions-january-2022\/401222_submission.csv')\nsub62.sort_values(by=['row_id'], inplace=True)\nsub63 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408236_submission.csv')\nsub63.sort_values(by=['row_id'], inplace=True)\nsub64 = pd.read_csv('..\/input\/tps-submissions-january-2022\/408091_submission.csv')\nsub64.sort_values(by=['row_id'], inplace=True)\n#sub65 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400286_submission.csv')\n#sub65.sort_values(by=['row_id'], inplace=True)\n#sub66 = pd.read_csv('..\/input\/tps-submissions-january-2022\/400284_submission.csv')\n#sub66.sort_values(by=['row_id'], inplace=True)\nsub67 = pd.read_csv('..\/input\/tps-submissions-january-2022\/403088_submission.csv')\nsub67.sort_values(by=['row_id'], inplace=True)","a46fd0d0":"b = 1000.0\nS = 4.00534\nq = 0.0","e5ecf711":"sub['num_sold'] = sub1['num_sold']*np.exp(b*(S-4.65284))\nq = q + np.exp(b*(S-4.65284))\nsub['num_sold'] = sub['num_sold'] + sub2['num_sold']*np.exp(b*(S-4.67251))\nq = q + np.exp(b*(S-4.67251))\nsub['num_sold'] = sub['num_sold'] + sub3['num_sold']*np.exp(b*(S-4.74308))\nq = q + np.exp(b*(S-4.74308))\nsub['num_sold'] = sub['num_sold'] + sub4['num_sold']*np.exp(b*(S-4.77890))\nq = q + np.exp(b*(S-4.77890))\nsub['num_sold'] = sub['num_sold'] + sub5['num_sold']*np.exp(b*(S-4.90275))\nq = q + np.exp(b*(S-4.90275))\nsub['num_sold'] = sub['num_sold'] + sub6['num_sold']*np.exp(b*(S-4.92669))\nq = q + np.exp(b*(S-4.92669))\nsub['num_sold'] = sub['num_sold'] + sub7['num_sold']*np.exp(b*(S-4.93924))\nq = q + np.exp(b*(S-4.93924))\nsub['num_sold'] = sub['num_sold'] + sub8['num_sold']*np.exp(b*(S-4.96333))\nq = q + np.exp(b*(S-4.96333))\nsub['num_sold'] = sub['num_sold'] + sub9['num_sold']*np.exp(b*(S-5.00896))\nq = q + np.exp(b*(S-5.00896))\nsub['num_sold'] = sub['num_sold'] + sub10['num_sold']*np.exp(b*(S-4.34469))\nq = q + np.exp(b*(S-4.34469))\nsub['num_sold'] = sub['num_sold'] + sub11['num_sold']*np.exp(b*(S-4.67928))\nq = q + np.exp(b*(S-4.67928))\nsub['num_sold'] = sub['num_sold'] + sub12['num_sold']*np.exp(b*(S-4.91812))\nq = q + np.exp(b*(S-4.91812))\nsub['num_sold'] = sub['num_sold'] + sub13['num_sold']*np.exp(b*(S-4.61163))\nq = q + np.exp(b*(S-4.61163))\nsub['num_sold'] = sub['num_sold'] + sub14['num_sold']*np.exp(b*(S-4.52597))\nq = q + np.exp(b*(S-4.52597))\nsub['num_sold'] = sub['num_sold'] + sub15['num_sold']*np.exp(b*(S-4.24305))\nq = q + np.exp(b*(S-4.24305))\nsub['num_sold'] = sub['num_sold'] + sub16['num_sold']*np.exp(b*(S-4.17724))\nq = q + np.exp(b*(S-4.17724))\nsub['num_sold'] = sub['num_sold'] + sub17['num_sold']*np.exp(b*(S-4.78552))\nq = q + np.exp(b*(S-4.78552))\nsub['num_sold'] = sub['num_sold'] + sub18['num_sold']*np.exp(b*(S-4.14656))\nq = q + np.exp(b*(S-4.14656))\nsub['num_sold'] = sub['num_sold'] + sub19['num_sold']*np.exp(b*(S-4.15147))\nq = q + np.exp(b*(S-4.15147))\nsub['num_sold'] = sub['num_sold'] + sub20['num_sold']*np.exp(b*(S-4.16404))\nq = q + np.exp(b*(S-4.16404))\nsub['num_sold'] = sub['num_sold'] + sub21['num_sold']*np.exp(b*(S-4.16957))\nq = q + np.exp(b*(S-4.16957))\nsub['num_sold'] = sub['num_sold'] + sub22['num_sold']*np.exp(b*(S-4.25169))\nq = q + np.exp(b*(S-4.25169))\nsub['num_sold'] = sub['num_sold'] + sub23['num_sold']*np.exp(b*(S-4.24122))\nq = q + np.exp(b*(S-4.24122))\nsub['num_sold'] = sub['num_sold'] + sub24['num_sold']*np.exp(b*(S-4.21332))\nq = q + np.exp(b*(S-4.21332))\nsub['num_sold'] = sub['num_sold'] + sub25['num_sold']*np.exp(b*(S-4.08376))\nq = q + np.exp(b*(S-4.08376))\nsub['num_sold'] = sub['num_sold'] + sub26['num_sold']*np.exp(b*(S-4.08755))\nq = q + np.exp(b*(S-4.08755))\nsub['num_sold'] = sub['num_sold'] + sub27['num_sold']*np.exp(b*(S-4.09115))\nq = q + np.exp(b*(S-4.09115))\nsub['num_sold'] = sub['num_sold'] + sub28['num_sold']*np.exp(b*(S-4.06456))\nq = q + np.exp(b*(S-4.06456))\nsub['num_sold'] = sub['num_sold'] + sub29['num_sold']*np.exp(b*(S-4.06966))\nq = q + np.exp(b*(S-4.06966))\nsub['num_sold'] = sub['num_sold'] + sub30['num_sold']*np.exp(b*(S-4.02048))\nq = q + np.exp(b*(S-4.02048))\nsub['num_sold'] = sub['num_sold'] + sub31['num_sold']*np.exp(b*(S-4.04812))\nq = q + np.exp(b*(S-4.04812))\nsub['num_sold'] = sub['num_sold'] + sub32['num_sold']*np.exp(b*(S-4.09088))\nq = q + np.exp(b*(S-4.09088))\nsub['num_sold'] = sub['num_sold'] + sub33['num_sold']*np.exp(b*(S-4.09611))\nq = q + np.exp(b*(S-4.09611))\nsub['num_sold'] = sub['num_sold'] + sub34['num_sold']*np.exp(b*(S-4.01879))\nq = q + np.exp(b*(S-4.01879))\nsub['num_sold'] = sub['num_sold'] + sub35['num_sold']*np.exp(b*(S-4.01769))\nq = q + np.exp(b*(S-4.01769))\nsub['num_sold'] = sub['num_sold'] + sub36['num_sold']*np.exp(b*(S-4.08279))\nq = q + np.exp(b*(S-4.08279))\nsub['num_sold'] = sub['num_sold'] + sub37['num_sold']*np.exp(b*(S-4.01776))\nq = q + np.exp(b*(S-4.01776))\nsub['num_sold'] = sub['num_sold'] + sub38['num_sold']*np.exp(b*(S-4.08821))\nq = q + np.exp(b*(S-4.08821))\nsub['num_sold'] = sub['num_sold'] + sub39['num_sold']*np.exp(b*(S-4.08066))\nq = q + np.exp(b*(S-4.08066))\nsub['num_sold'] = sub['num_sold'] + sub40['num_sold']*np.exp(b*(S-4.19426))\nq = q + np.exp(b*(S-4.19426))\nsub['num_sold'] = sub['num_sold'] + sub41['num_sold']*np.exp(b*(S-4.04524))\nq = q + np.exp(b*(S-4.04524))\nsub['num_sold'] = sub['num_sold'] + sub42['num_sold']*np.exp(b*(S-4.05744))\nq = q + np.exp(b*(S-4.05744))\nsub['num_sold'] = sub['num_sold'] + sub43['num_sold']*np.exp(b*(S-4.06528))\nq = q + np.exp(b*(S-4.06528))\nsub['num_sold'] = sub['num_sold'] + sub44['num_sold']*np.exp(b*(S-4.08201))\nq = q + np.exp(b*(S-4.08201))\nsub['num_sold'] = sub['num_sold'] + sub45['num_sold']*np.exp(b*(S-4.05483))\nq = q + np.exp(b*(S-4.05483))\nsub['num_sold'] = sub['num_sold'] + sub46['num_sold']*np.exp(b*(S-4.07247))\nq = q + np.exp(b*(S-4.07247))\nsub['num_sold'] = sub['num_sold'] + sub47['num_sold']*np.exp(b*(S-4.09441))\nq = q + np.exp(b*(S-4.09441))\nsub['num_sold'] = sub['num_sold'] + sub48['num_sold']*np.exp(b*(S-4.05331))\nq = q + np.exp(b*(S-4.05331))\nsub['num_sold'] = sub['num_sold'] + sub49['num_sold']*np.exp(b*(S-4.05132))\nq = q + np.exp(b*(S-4.05132))\nsub['num_sold'] = sub['num_sold'] + sub50['num_sold']*np.exp(b*(S-4.00728))\nq = q + np.exp(b*(S-4.00728))\nsub['num_sold'] = sub['num_sold'] + sub51['num_sold']*np.exp(b*(S-4.00534))\nq = q + np.exp(b*(S-4.00534))\nsub['num_sold'] = sub['num_sold'] + sub52['num_sold']*np.exp(b*(S-4.02944))\nq = q + np.exp(b*(S-4.02944))\nsub['num_sold'] = sub['num_sold'] + sub53['num_sold']*np.exp(b*(S-4.01945))\nq = q + np.exp(b*(S-4.01945))\nsub['num_sold'] = sub['num_sold'] + sub54['num_sold']*np.exp(b*(S-4.01456))\nq = q + np.exp(b*(S-4.01456))\n#sub['num_sold'] = sub['num_sold'] + sub55['num_sold']*np.exp(b*(S-4.00294))\n#q = q + np.exp(b*(S-4.00294))\nsub['num_sold'] = sub['num_sold'] + sub56['num_sold']*np.exp(b*(S-4.08522))\nq = q + np.exp(b*(S-4.08522))\nsub['num_sold'] = sub['num_sold'] + sub57['num_sold']*np.exp(b*(S-4.14322))\nq = q + np.exp(b*(S-4.14322))\n#sub['num_sold'] = sub['num_sold'] + sub58['num_sold']*np.exp(b*(S-4.00289))\n#q = q + np.exp(b*(S-4.00289))\nsub['num_sold'] = sub['num_sold'] + sub59['num_sold']*np.exp(b*(S-4.01205))\nq = q + np.exp(b*(S-4.01205))\nsub['num_sold'] = sub['num_sold'] + sub60['num_sold']*np.exp(b*(S-4.06254))\nq = q + np.exp(b*(S-4.06254))\nsub['num_sold'] = sub['num_sold'] + sub61['num_sold']*np.exp(b*(S-4.08876))\nq = q + np.exp(b*(S-4.08876))\nsub['num_sold'] = sub['num_sold'] + sub62['num_sold']*np.exp(b*(S-4.01222))\nq = q + np.exp(b*(S-4.01222))\nsub['num_sold'] = sub['num_sold'] + sub63['num_sold']*np.exp(b*(S-4.08236))\nq = q + np.exp(b*(S-4.08236))\nsub['num_sold'] = sub['num_sold'] + sub64['num_sold']*np.exp(b*(S-4.08091))\nq = q + np.exp(b*(S-4.08091))\n#sub['num_sold'] = sub['num_sold'] + sub65['num_sold']*np.exp(b*(S-4.00286))\n#q = q + np.exp(b*(S-4.00286))\n#sub['num_sold'] = sub['num_sold'] + sub66['num_sold']*np.exp(b*(S-4.00284))\n#q = q + np.exp(b*(S-4.00284))\nsub['num_sold'] = sub['num_sold'] + sub67['num_sold']*np.exp(b*(S-4.03088))\nq = q + np.exp(b*(S-4.03088))\nsub['num_sold'] = sub['num_sold']\/q","61277a42":"pred1 = sub['num_sold']","736359ed":"from math import ceil, floor, sqrt\n\ndef geometric_round(arr):\n    result_array = arr\n    result_array = np.where(result_array < np.sqrt(np.floor(arr)*np.ceil(arr)), np.floor(arr), result_array)\n    result_array = np.where(result_array >= np.sqrt(np.floor(arr)*np.ceil(arr)), np.ceil(arr), result_array)\n\n    return result_array","682b4fcc":"pred2 = geometric_round(pred1)","113b3852":"sub['num_sold'] = pred2","e9aa7fda":"sub.to_csv('submission.csv', index=False)\nsub.head(10)","7c9897ce":"Notebooks used in this ensemble:\n\n[Scaling is better than blending!](https:\/\/www.kaggle.com\/ambrosm\/scaling-is-better-than-blending) by @ambrosm (v2 4.65284; v3 4.17724; v17 4.08755)\n\n[TPSJAN22-03 Linear Model](https:\/\/www.kaggle.com\/ambrosm\/tpsjan22-03-linear-model) by @ambrosm (v8 4.67251; v11 4.34469; v16 submission_linear_model_rounded.csv 4.08376)\n\n[TPS Jan 2022: Automated Ensembling](https:\/\/www.kaggle.com\/sytuannguyen\/tps-jan-2022-automated-ensembling) by @sytuannguyen (v12 4.74308; v21 4.67928; v28 4.24305; v41 4.05744; v48 4.00289; v52 4.00284) (comment out v48 & v52)\n\n[Overfitting Ninja Technique COPIED](https:\/\/www.kaggle.com\/ankitkalauni\/overfitting-ninja-technique-copied) by @ankitkalauni (v3 4.77890)\n\n[TPS Jan 2022 | EDA | PyCaret](https:\/\/www.kaggle.com\/devsubhash\/tps-jan-2022-eda-pycaret) by @devsubhash (v7 4.90275)\n\n[TPS - Jan 2022](https:\/\/www.kaggle.com\/saraswatitiwari\/tps-jan-2022) by @saraswatitiwari (v1 4.92669)\n\n[Tabular Playground Series - Jan 2022](https:\/\/www.kaggle.com\/mfedeli\/tabular-playground-series-jan-2022) by @mfedeli (v6 4.93924, v10 4.91812)\n\n[TPS-22 EDA + Prediction](https:\/\/www.kaggle.com\/meetnagadia\/tps-22-eda-prediction) by @meetnagadia (v2 4.96333)\n\n[TPS Jan 2022](https:\/\/www.kaggle.com\/bernhardklinger\/tps-jan-2022) by @bernhardklinger (v1 5.00896)\n\n[TPSJan22:EDA,baseline,train&submission](https:\/\/www.kaggle.com\/fergusfindley\/tpsjan22-eda-baseline-train-submission) by @fergusfindley (v18 submission.csv 4.61163)\n\n[EnsembleModel with addon GDP & Amazon's Sales Data](https:\/\/www.kaggle.com\/anirudhyadav9784\/ensemblemodel-with-addon-gdp-amazon-s-sales-data) by @anirudhyadav9784 (v4 4.52597)\n\n[Kaggle merchandise EDA with baseline linear model](https:\/\/www.kaggle.com\/lucamassaron\/kaggle-merchandise-eda-with-baseline-linear-model) by @lucamassaron (v20 4.78552; v32 4.07247)\n\n[TPS Jan 2022: Automated Ensembling](https:\/\/www.kaggle.com\/andrej0marinchenko\/tps-jan-2022-automated-ensembling) by @andrej0marinchenko (v5 4.14656)\n\n[Ensembling and rounding techniques comparison](https:\/\/www.kaggle.com\/fergusfindley\/ensembling-and-rounding-techniques-comparison) by @fergusfindley (v4 4.15147)\n\n[TPS2201_Hybrid_Time_Series](https:\/\/www.kaggle.com\/teckmengwong\/tps2201-hybrid-time-series) by @teckmengwong (v18 4.16404; v33 4.09115; v35 4.06966; v36 4.02048; v43 4.01776)\n\n[My homework at AmbrosM School : CAT+LGB+XGB](https:\/\/www.kaggle.com\/pourchot\/my-homework-at-ambrosm-school-cat-lgb-xgb) by @pourchot (v19 submission_cat 4.16957)\n\n[Time Series Transformer Infer](https:\/\/www.kaggle.com\/yamqwe\/time-series-transformer-infer) by @yamqwe (v18 4.25169)\n\n[TPSJAN22-06 LightGBM Quickstart](https:\/\/www.kaggle.com\/ambrosm\/tpsjan22-06-lightgbm-quickstart) by @ambrosm (v4 4.24122)\n\n[Ensemble, again. Maximizing the score metrics](https:\/\/www.kaggle.com\/sabinaabdurakhmanova\/ensemble-again-maximizing-the-score-metrics) by @sabinaabdurakhmanova (v5 submission_median.csv 4.21332)\n\n[notebook2b2e607e95](https:\/\/www.kaggle.com\/andrej0marinchenko\/notebook2b2e607e95) by @andrej0marinchenko (v1 4.06456)\n\n[Time Series Transformer & Linear Model Ensemble](https:\/\/www.kaggle.com\/yamqwe\/time-series-transformer-linear-model-ensemble) by @yamqwe (v4 submission_rounded.csv 4.04812; v11 submission_rounded.csv 4.01769)\n\n[TPS: more is better](https:\/\/www.kaggle.com\/sabinaabdurakhmanova\/tps-more-is-better) by @sabinaabdurakhmanova (v1 submission_rounded.csv 4.09088; v3 submission_rounded.csv 4.08821)\n\n[Tabular Playground Series ' 22](https:\/\/www.kaggle.com\/saraswatitiwari\/tabular-playground-series-22) by @saraswatitiwari (v1 submission_rounded.csv 4.09611)\n\n[tps_01_2022](https:\/\/www.kaggle.com\/andrej0marinchenko\/tps-01-2022) by @andrej0marinchenko (v4 4.01879)\n\n[TPSJAN22-05 Keras Quickstart](https:\/\/www.kaggle.com\/ambrosm\/tpsjan22-05-keras-quickstart\/data) by @ambrosm (v3 submission_keras_rounded.csv 4.08279; v5 submission_keras_rounded.csv 4.08201)\n\n[Delete Feb29th(2016) - FORK[Keras Quickstart]](https:\/\/www.kaggle.com\/mehrankazeminia\/delete-feb29th-2016-fork-keras-quickstart) by @mehrankazeminia (v1 submission_keras_rounded.csv 4.08066)\n\n[For Fun](https:\/\/www.kaggle.com\/rizkykiky\/for-fun) by @rizkykiky (v6 4.19426)\n\n[TPS Jan 2022 CatBoost with PyCaret](https:\/\/www.kaggle.com\/bernhardklinger\/tps-jan-2022-catboost-with-pycaret) by @bernhardklinger (v2 4.04524)\n\n[[TPS Jan 22] - Ridge MultiSplit](https:\/\/www.kaggle.com\/slythe\/tps-jan-22-ridge-multisplit) by @slythe (v6 submission_noSplit 4.06528)\n\n[[TPS Jan 22]-Ridge Muti-Step Recursive Shift Lag](https:\/\/www.kaggle.com\/slythe\/tps-jan-22-ridge-muti-step-recursive-shift-lag) by @slythe (v15 submission_base_full.csv 4.05483, submission_product.csv 4.09441, submission_store.csv 4.05331, submission_country.csv 4.05132)\n\n[TPS Jan 2022 Blend + Stacking models](https:\/\/www.kaggle.com\/hiro5299834\/tps-jan-2022-blend-stacking-models) by @hiro5299834 (v2 4.00534; v4 4.00728)\n\n[TPS-Jan22 | CatBoost using PyCaret](https:\/\/www.kaggle.com\/maxencefzr\/tps-jan22-catboost-using-pycaret\/notebook) by @maxencefzr (v1 4.02944)\n\n[Hybrid_Time_Series 1](https:\/\/www.kaggle.com\/edwardakalarrywelch\/hybrid-time-series-1) by @edwardakalarrywelch (v26 4.01945; v28 4.01456; v42 4.01205; v43 4.01222)\n\n[Tell me the magic number!](https:\/\/www.kaggle.com\/teckmengwong\/tell-me-the-magic-number) by @teckmengwong (v8 4.00294) {comment out)\n\n[TPS_Jan_2022_EDA&Keras](https:\/\/www.kaggle.com\/m1y7k8\/tps-jan-2022-eda-keras) by @m1y7k8 (v1 4.08521; v3 4.08236; v8 4.08091)\n\n[TPS Jan 2022 | ETNA](https:\/\/www.kaggle.com\/chikovalexander\/tps-jan-2022-etna) by @chikovalexander (v2 4.14322; v3 4.06254)\n\n[TPS Jan 22 - quick EDA + Hybrid model](https:\/\/www.kaggle.com\/samuelcortinhas\/tps-jan-22-quick-eda-hybrid-model) by @samuelcortinhas (v29 4.08876)\n\n[Automated Ensembling](https:\/\/www.kaggle.com\/karthikbhandary2\/automated-ensembling) by @karthikbhandary2 (v1 4.00286) (comment out)\n\n[TPS-01\/22 || Catboost w\/ Pycaret](https:\/\/www.kaggle.com\/alexandreayari\/tps-01-22-catboost-w-pycaret) by @alexandreayari (v3 4.03088)","fe64c67c":"Each model represented in the ensemble is weighted by a factor that depends in an exponentially decaying manner on its public LB score. Specifically, each model is given an exponential weight according to\n\nexp(b*(S-x))\n\nwhere x is the public LB score of that model. Larger scores are worse, hence the weights get smaller as x increases and get larger as x decreases. Thus, the best models have the largest weights and make the largest contributions to the ensemble.\n\nThe parameter b is the one meaningfully adjustable parameter of the model, the larger b is then the faster the weights decay as the score gets worse. The models in this ensemble can be thought of as corresponding to quantum states in statistical thermodynamics. Evidently, b is analogous to 1\/kT in statistical thermodynamics and behaves like a reciprocal temperature. In thermodynamics textbooks this parameter is often called beta. \n\nThe LB score x is analogous to energy, since higher LB scores are bad in this competition the weights, which are effectively Boltzmann factors, decrease with increasing x. The opposite sign convention would have been used in a competition where higher LB scores are good. \nS is a calibration parameter defined such that if S is set to the best single model score then the highest weight is 1.0, which is convenient, but not essential.\n\nThe sum of the weights q is analogous to the partition function in statistical thermodynamics, and measures an effective number of contributing models. This is analogous to how the partition function, if calibrated such that the highest weight is 1.0, measures the number of thermally accessible quantum states.","d6257b70":"This ensemble was forked from the main Boltzmann Ensemble notebook at a time when there were 60 contributing models. Models 55 & 58 have a seasonal scaling which seems to be designed to optimise the public rather than the private LB score. Where models have a bias to one part of the year, we should note (from the Data tab of this competition) that the \"Public leaderboard is scored on the first quarter of the test year, and the Private on the remaining.\" Since the seasonal scaling may not be robust, models 55 & 58 are commented out of this version."}}