{"cell_type":{"441105c0":"code","f66c8e0a":"code","37f0065f":"code","de4a5a91":"code","405d4fd8":"markdown","a00c16ca":"markdown"},"source":{"441105c0":"import numpy as np \nimport pandas as pd \nfrom tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nimport warnings\n\nreadability_path = \"..\/input\/commonlitread\/py-readability-metrics\"\nimport sys\nsys.path.append(readability_path)\nfrom readability import Readability\ntqdm.pandas()\n\ntrain = pd.read_csv('..\/input\/commonlitreadabilityprize\/train.csv')\ntrain = train.sort_values(\"target\").reset_index(drop=True)","f66c8e0a":"def read_metric(txt):\n    r = Readability(txt)\n    \n    f = r.flesch_kincaid()\n    print(\"Flesch Kincaid Grade Level\")\n    print(f\"\\t score : {f.score} \\t grade_levels : {f.grade_level}\")\n\n    f = r.flesch()\n    print(\"Flesch Reading Ease\")\n    print(f\"\\t score : {f.score} \\t grade_levels : {f.grade_levels} \\t ease : {f.ease} \")\n\n    # Dale-Chall Score\n    f = r.dale_chall()\n    print(\"Dale Chall Readability\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_levels}\")\n\n    f = r.ari()\n    print(\"Automated Readability Index (ARI)\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_levels}\")\n\n    f = r.coleman_liau()\n    print(\"Coleman Liau Index\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_level}\")\n\n    # Gunning Fog Scale Level\n    f = r.gunning_fog()\n    print(\"Gunning Fog\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_level}\")\n\n    f = r.spache()\n    print(\"Spache\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_level}\")\n\n    f = r.linsear_write()\n    print(\"Linsear Write\")\n    print(f\"\\t score : {f.score}  \\t grade_levels : {f.grade_level}\")\n    \n# https:\/\/github.com\/cdimascio\/py-readability-metrics\ndef get_read_metric(txt):\n    res = {\"fk_score\":0,\"fk_level\":0,\n          \"f_score\":0,\"f_level\":0,\n          \"dc_score\":0,\"dc_level\":0,\n          \"ari_score\":0,\"ari_level\":0,\n          \"cl_score\":0,\"cl_level\":0,\n          \"gf_score\":0,\"gf_level\":0,\n          \"s_score\":0,\"s_level\":0,\n          \"lw_score\":0,\"lw_level\":0,}\n    r = Readability(txt)\n    \n    f = r.flesch_kincaid()\n    res[\"fk_score\"]=f.score\n    res[\"fk_level\"]=f.grade_level\n\n    f = r.flesch()\n    res[\"f_score\"]=f.score\n    res[\"f_level\"]=f.grade_levels\n\n    # Dale-Chall Score\n    f = r.dale_chall()\n    res[\"dc_score\"]=f.score\n    res[\"dc_level\"]=f.grade_levels\n    \n    f = r.ari()\n    res[\"ari_score\"]=f.score\n    res[\"ari_level\"]=f.grade_levels\n    \n    f = r.coleman_liau()\n    res[\"cl_score\"]=f.score\n    res[\"cl_level\"]=f.grade_level\n    \n    # Gunning Fog Scale Level\n    f = r.gunning_fog()\n    res[\"gf_score\"]=f.score\n    res[\"gf_level\"]=f.grade_level\n    \n    f = r.spache()\n    res[\"s_score\"]=f.score\n    res[\"s_level\"]=f.grade_level\n    \n    f = r.linsear_write()\n    res[\"lw_score\"]=f.score\n    res[\"lw_level\"]=f.grade_level\n    \n    return res","37f0065f":"for i in range(0,len(train),1000):\n    print()\n    txt = train.iloc[i].excerpt\n    print(f\"excerpt : {txt[:50]}\")\n    print(f\"target : {train.iloc[i].target}, standard_error : {train.iloc[i].standard_error}\")\n    print()\n    read_metric(txt)\n    print(\"-\"*20)","de4a5a91":"train[\"metric\"] = train.excerpt.progress_apply(get_read_metric)\ntrain = train.join(train[\"metric\"].apply(pd.Series))\ntrain.drop(['url_legal',\"standard_error\",'license',\"excerpt\",\"metric\",\"id\"], axis=1, inplace=True)\ndf_corr = train.corr()\nfig, ax = plt.subplots(figsize=(12, 9)) \nsns.heatmap(df_corr, vmax=1, vmin=-1, center=0)","405d4fd8":"# Flesch\u2013Kincaid grade level\n$$\n    0.39(\\frac{total words}{total sentences}) + 11.8(\\frac{total syllables}{total words})\n$$\n\n# Flesch reading ease\n$$\n    206.835 -1.015(\\frac{total words}{total sentences}) - 84.6(\\frac{total syllables}{total words})\n$$\n\n|Score|School level (US)|Notes|\n|:-|:-|:-|\n|100.00\u201390.00|5th grade|Very easy to read. Easily understood by an average 11-year-old student.|\n|90.0\u201380.0|6th grade|Easy to read. Conversational English for consumers.|\n|80.0\u201370.0|7th grade|Fairly easy to read.|\n|70.0\u201360.0|8th & 9th grade|Plain English. Easily understood by 13- to 15-year-old students.|\n|60.0\u201350.0|10th to 12th grade|Fairly difficult to read.|\n|50.0\u201330.0|College|Difficult to read.|\n|30.0\u201310.0|College graduate|Very difficult to read. Best understood by university graduates.|\n|10.0\u20130.0|Professional|Extremely difficult to read. Best understood by university graduates.|\n\n# Gunning fog \n\n$$\n    0.4 [(\\frac{words}{sentences}) + 100(\\frac{complex words}{words})]\n$$\n\n|Fog Index|Reading level by grade|\n|:-|:-|\n|17|College graduate|\n|16|College senior|\n|15|College junior|\n|14|College sophomore|\n|13|College freshman|\n|12|High school senior|\n|11|High school junior|\n|10|High school sophomore|\n|9|High school freshman|\n|8|Eighth grade|\n|7|Seventh grade|\n|6|Sixth grade|\n\n# SMOG\n$$\n    1.0430\\sqrt{number of polysyllables * \\frac{30}{number of sentences}} + 3.1291\n$$\n\n# Dale Chall Readability\n$$\n    0.1579 [(\\frac{difficult words}{words})*100 + 0.0496(\\frac{sentences}{words})]\n$$\n\n|Score|Notes\n|:-|:-|\n|4.9 or lower|easily understood by an average 4th-grade student or lower|\n|5.0\u20135.9|easily understood by an average 5th or 6th-grade student|\n|6.0\u20136.9|easily understood by an average 7th or 8th-grade student|\n|7.0\u20137.9|easily understood by an average 9th or 10th-grade student|\n|8.0\u20138.9|easily understood by an average 11th or 12th-grade student|\n|9.0\u20139.9|easily understood by an average 13th to 15th-grade (college) student|","a00c16ca":"# readability of text using popular readability formulas and metrics"}}