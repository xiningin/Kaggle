{"cell_type":{"996e1e61":"code","f7c62da0":"code","2039beb2":"code","cb594dfa":"code","679ed1d8":"code","58af6b2f":"code","d99aa71a":"code","316415ca":"code","7d25822e":"code","a3417f27":"code","d50dd344":"code","8bd2229e":"code","9b564c02":"code","f2ccf50d":"code","9db5c0df":"code","def6a055":"code","38ce9534":"code","fc7b1ba7":"code","9b43a8cb":"code","a1e2477f":"markdown","1f0d555d":"markdown","0ff65119":"markdown","81808f82":"markdown","a191b4ef":"markdown","7def6875":"markdown","a0703911":"markdown","72d5854c":"markdown","4d34032f":"markdown","d92e8b0b":"markdown","a8f08399":"markdown","902d1b55":"markdown","209f9515":"markdown","c16f8227":"markdown","f766ea51":"markdown","a153f943":"markdown","7ad1659b":"markdown","d2173a38":"markdown","333abfcd":"markdown","7e9afbf3":"markdown","36e1298a":"markdown","ceba529c":"markdown"},"source":{"996e1e61":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f7c62da0":"df = pd.read_csv('..\/input\/top-play-store-games\/android-games.csv')","2039beb2":"df.info()","cb594dfa":"df = df.drop(labels = ['rank', 'installs', 'total ratings'], axis=1)\ndf.info()","679ed1d8":"df.paid.describe()","58af6b2f":"# To make a dataset that only has price, title and the average rating \nfirst_df = df[['title', 'price', 'average rating']]\nfirst_df['avg_rating'] = (df['5 star ratings']*5 + df['4 star ratings']*4 + df['3 star ratings']*3 + df['2 star ratings']*2 + df['1 star ratings']*1) \/ (df['5 star ratings'] + df['4 star ratings'] + df['3 star ratings'] + df['2 star ratings'] + df['1 star ratings'])\n","d99aa71a":"plt.scatter(first_df['price'], first_df['avg_rating'])\nplt.xlabel('Price of game', fontsize=16)\nplt.ylabel('Average rating of the game', fontsize=16)\nplt.show()","316415ca":"print(df.category.unique())\nprint(df.category.value_counts())","7d25822e":"df_second = pd.concat([df['category'], first_df['avg_rating']], axis=1, join='inner')\n","a3417f27":"df_second_group = df_second.groupby('category').agg({'avg_rating': 'mean'})\ny_pos = np.arange(17)\ndf_second_group = df_second_group.sort_values(by = 'avg_rating', axis = 0, ascending = True)\ncategories = list(df_second_group.index)\n\n\nplt.barh(y_pos, df_second_group['avg_rating'], align='center', alpha=0.5)\nplt.yticks(y_pos, categories)\nplt.xlabel('Average Rating')\nplt.axis(xmin= 4, xmax=4.5)\nplt.title('Game categories\\' average ratings')\nplt.show()\n","d50dd344":"df_third = pd.concat([df[['growth (30 days)', 'growth (60 days)']], first_df['avg_rating']], axis=1, join='inner')\nprint(df_third)","8bd2229e":"plt.scatter(df_third['growth (30 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (30 days)')\nplt.ylabel('Average Rating')\nplt.show()\n","9b564c02":"for i in range(len(df['growth (30 days)'])):\n    if df['growth (30 days)'][i] > 5000:\n        print(df['title'][i])","f2ccf50d":"plt.scatter(df_third['growth (30 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (30 days)')\nplt.ylabel('Average Rating')\nplt.xlim([0, 5000])\nplt.show()","9db5c0df":"plt.scatter(df_third['growth (30 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (30 days)')\nplt.ylabel('Average Rating')\nplt.xlim([0, 100])\nplt.title('Growth from 0% to 100%')\nplt.show()","def6a055":"plt.scatter(df_third['growth (30 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (30 days)')\nplt.ylabel('Average Rating')\nplt.xlim([100, 5000])\nplt.title('Growth from 100% to 5000%')\nplt.show()","38ce9534":"import math\nfrom scipy.optimize import curve_fit \ndf_four = df \nfor i in range(len(df_four['growth (30 days)'])):\n    if df_four['growth (30 days)'][i] > 10:\n        df_four = df_four.drop(labels = i, axis = 0)\ndf_four['avg_rating'] = (df_four['5 star ratings']*5 + df_four['4 star ratings']*4 + df_four['3 star ratings']*3 + df_four['2 star ratings']*2 + df_four['1 star ratings']*1) \/ (df_four['5 star ratings'] + df_four['4 star ratings'] + df_four['3 star ratings'] + df_four['2 star ratings'] + df_four['1 star ratings'])\n\n# Linear fit \nm, b = np.polyfit(df_four['growth (30 days)'], df_four['avg_rating'], 1)\nx = df_four['growth (30 days)']\n\n# Quadratic fit \ndef f_quadratic(t,a,b,c):\n    return a*pow(t,2) +b*t + c \npopt, pcov = curve_fit(f_quadratic, df_four['growth (30 days)'], df_four['avg_rating'])\nquadratic_cp = f_quadratic(np.array(df_four['growth (30 days)']), *popt)\n\n\n# Plotting \nplt.plot(x, m*x + b, color = 'red')\nplt.plot(x, quadratic_cp, color = 'green')\nplt.scatter(df_third['growth (30 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (30 days)')\nplt.ylabel('Average Rating')\nplt.xlim([0, 10])\nplt.title('Growth from 0% to 10%')\nplt.show()","fc7b1ba7":"plt.scatter(df_third['growth (60 days)'], df_third['avg_rating'])\nplt.xlabel('Growth (60 days)')\nplt.ylabel('Average Rating')\nplt.xlim([0,50])\nplt.show()","9b43a8cb":"df_five = df \nfor i in range(len(df_five['growth (60 days)'])):\n    if df_five['growth (60 days)'][i] > 50:\n        df_five = df_five.drop(labels = i, axis = 0)\ndf_five['avg_rating'] = (df_five['5 star ratings']*5 + df_five['4 star ratings']*4 + df_five['3 star ratings']*3 + df_five['2 star ratings']*2 + df_five['1 star ratings']*1) \/ (df_five['5 star ratings'] + df_five['4 star ratings'] + df_five['3 star ratings'] + df_five['2 star ratings'] + df_five['1 star ratings'])\n\n# Quadratic fit \ndef f_quadratic(t,a,b,c):\n    return a*pow(t,2) +b*t + c \npopt, pcov = curve_fit(f_quadratic, df_five['growth (60 days)'], df_five['avg_rating'])\nquadratic_cp = f_quadratic(np.array(df_five['growth (60 days)']), *popt)\nx = df_five['growth (60 days)']\n\n# Plotting \nplt.plot(x, quadratic_cp, color = 'green')\nplt.scatter(df_five['growth (60 days)'], df_five['avg_rating'])\nplt.xlabel('Growth (60 days)')\nplt.ylabel('Average Rating')\nplt.xlim([0, 50])\nplt.title('Growth from 0% to 50%')\nplt.show()","a1e2477f":"#### A growth rate of over 5000% in 30 days seems to be very unusual and pretty unreasonable to achieve for most games. Thus we shall factor out these games to take a look at the scatter plot ","1f0d555d":"#### As shown above, there are 17 unique categories\n#### We shall group the categories together and seek out their average rating and plot a bar graph","0ff65119":"#### We have succesfully trimmed down our dataset to only the necessary attributes that we would be needing \n\n#### Now let us proceed about investigating our first question \n# 1. If there is any correlation between its price and its ratings\n\n#### However, before that, let us see how many paid games there are compared to free ones in this dataset","81808f82":"# As always, let us look at the data information\n#### We would have to \n##### 1. Check for missing data \n##### 2. Deal with missing\/invalid data \n##### 3. See whether all rows are eligible for data analysis ","a191b4ef":"#### Thankfully, with this dataset, we have 0 null values, and 1730 full rows, with 15 attributes in total \n\n#### As mentioned in the first few lines, we only need data regarding the price, ratings, category, growth and title attributes \n* ##### So let us trim the dataset","7def6875":"#### The quadratic curve doesn't seem to different from when growth is limited to 30 days. Thus the conclusion still stands as the same ","a0703911":"# 3. Does rapid growth right after its release generally suggest greater ratings for the game? ","72d5854c":"#### As we can see, there are not much points for paid games. However, from this data, we can roughly tell that the 7 paid games generally all have good ratings, above 4. \n#### However, it is not to say that free games had low ratings. Some of them had higher ratings than all of the paid games. Thus there does not seem to be a clear correlation between paid\/free games with ratings\n\n### Although it would be unwise to draw any conclusions here, we won't be able to progress further than this conclusion due to the lack of unbiased, fair and sufficient data for paid games \n\n#### Now, we'll move onto the next question \n# 2. Which categories showcase the highest ratings","4d34032f":"# Games on phone might not be as elaborate or graphically enticing as computer or console games. \n#### However, nowadays, they are popular more than ever, with **80 billion** mobile game downloads in 2020, with an **18%** YoY growth (*Udonis*)\n\n#### In this article, we would be diving into this publicly available dataset which showcases numerous games on the Google Play Store. We would be doing some exploration with this dataset, checking to see\n\n##### 1. If there is any correlation between its price and its ratings\n##### 2. Which categories showcase the highest ratings\n##### 3. Does rapid growth right after its release generally suggest greater ratings for the game? \n\n##### Let us first import the required dataset ","d92e8b0b":"#### The red line depicts the line of best fit and the green line depicts an attempted quadratic fit. The line of best fit shows a slight gradient, **showing a general trend of higher growth leading to higher average rating**. \n#### Additionally, I have attempted a quadratic fit as the data seemed more complicated than a simple line of best fit. However, most of the data points seems to be consolidated at the higher end of the average rating, thus resulting in a similar quadratic fit compared to the line of best fit. ","a8f08399":"##### There seems to be a few extreme outliers where the growth value is pretty huge. Let us take a look at those data ","902d1b55":"![https:\/\/www.simon-kucher.com\/sites\/default\/files\/styles\/670xh\/public\/2020-10\/GamingStudy_Part2_Blog%20Header.jpg?itok=4S2Gg_fC](http:\/\/)","209f9515":"#### Let us check out the growth for 60 days, but with a higher limit, from 0 to 50% ","c16f8227":"#### By looking at this graph, it does not really show us any relationship. This may be due to the fact that majority of our data is clustered around low growth numbers and thus not showing up properly. So let us divide the graph into two. One with growth ranging from 0 to 100 and the other's growth ranging from 100 to 5000","f766ea51":"# We have looked at all of the three questions that we have set out for this article. We have concluded that basically \n### 1. There does not seem to be a clear correlation between paid\/free games with ratings\n### 2. Casino, Word and Card games are the most favorable and have the highest average ratings \n### 3. It is true that higher growth may predict a higher average rating. However, at higher values of growth levels, the effect seems to wear off","a153f943":"#### Let us first see what the category attribute has in store for us ","7ad1659b":"#### **Therefore, we can conclude that at the lower end of the growth percentage for 30 days, it is true that higher growth may predict a higher average rating. However, at higher values of growth levels, the effect seems to wear off.** ","d2173a38":"#### As we can see, casino games are the most famous, along with word games and the least favorable being music games. \n#### **Through this, we could conclude that game developers designing any of the top games would have a more favorable chance to have a high rating.**\n#### All of the categories have the same amount of data, with at least 100 each and the most being 126, not deviating much from the most common 100. So it would be hard to say this analysis was biased. \n#### Now let us move onto the next question ","333abfcd":"##### We have to keep in mind that the growth values are expressed in percentage(%) \n\n#### Let us first compare the growth for 30 days with the avg_rating","7e9afbf3":"## Thanks for reading my article and hope to hear some valuable feedbacks if you have any! Thank you :) ","36e1298a":"#### As shown above, there are only 7 paid games, so our question might not be fairly answered, as the data is very biased towards free games and very well may not provide a complete and sufficient explanation for paid games\n\n#### However, we'll go ahead with checking for any relation by plotting a scatter diagram ","ceba529c":"#### For growth from 100% to 5000%, the effect of higher growth seems to wear off as most of the games usually lie between 4 and 4.5 in average ratings. \n\n#### However, for growth from 0% to 100%, the effect still doesn't seem to be visible as most of the data is consolidated between 0% and 10%. So let us take a look there"}}