{"cell_type":{"417bbfa8":"code","611c8f34":"code","814bac0b":"code","103aa3c0":"code","fd5d739a":"code","43b88a5e":"code","55d31706":"code","a53c8738":"code","0373ac00":"code","42accd72":"code","d6e27d11":"code","888c6384":"code","9d50d577":"code","9fe63e67":"code","0c000eb5":"code","f741115e":"code","e9bb3154":"code","8f7f60b5":"code","e3ee63eb":"code","8f13ef09":"code","7eb2466d":"code","e98d32b3":"code","395a250a":"code","8f5b9803":"code","8769b3db":"code","e9ada1b8":"code","ca7a3858":"code","ac4db2c2":"code","3ed06739":"code","fade511e":"markdown","7e97ab69":"markdown","bb573252":"markdown","efaee896":"markdown","44097b54":"markdown","5e72d6c1":"markdown","bb03b0c9":"markdown","f9357c79":"markdown","c69f6ecf":"markdown","f3eadd79":"markdown","06cc8b18":"markdown","d53073a7":"markdown","12e84f98":"markdown","644d4490":"markdown","b88a5160":"markdown","6b583c52":"markdown","4cfb66f9":"markdown","93d279a6":"markdown","741c2b5e":"markdown","6e977987":"markdown","e857717b":"markdown","da66b135":"markdown","d0918934":"markdown","c2e48592":"markdown","6555ce96":"markdown","986cd30e":"markdown","7c83f6b9":"markdown","f5f9ca57":"markdown","15a76cd0":"markdown","6440d58b":"markdown","da4b25ff":"markdown"},"source":{"417bbfa8":"import numpy as np\nimport sklearn\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns   \nimport matplotlib.ticker as mticker\n\nplt.style.use('seaborn')","611c8f34":"df = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/train_data.csv\", index_col=['Id'],na_values = '?')\n#df = pd.read_csv(\"input\/train_data.csv\", index_col=['Id'],na_values = '?')","814bac0b":"df.head()","103aa3c0":"df.info()","fd5d739a":"df.isnull().sum()","43b88a5e":"df.describe()","55d31706":"df['workclass'].value_counts().plot(kind = 'barh', title = 'Gr\u00e1fico de n\u00famero de apari\u00e7\u00f5es dos valores da vari\u00e1vel workclass ')","a53c8738":"df['workclass'] = df['workclass'].fillna(\"Private\")","0373ac00":"df['native.country'].value_counts().plot(kind = 'barh', title = 'Gr\u00e1fico de n\u00famero de apari\u00e7\u00f5es dos valores da feature native.country ')","42accd72":"df['native.country'] = df['native.country'].fillna(\"United-States\")","d6e27d11":"df['occupation'].value_counts().plot(kind = 'barh', title = 'Gr\u00e1fico de n\u00famero de apari\u00e7\u00f5es dos valores da vari\u00e1vel occupation ')","888c6384":"df = df.dropna()\ndf.isnull().sum()","9d50d577":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n\ndf['income'] = le.fit_transform(df['income'])\ndf['income'] ","9fe63e67":"male_pop = df[(df.sex=='Male')]\nmale_pop = male_pop.groupby(pd.cut(male_pop['age'], np.arange(0,100,5))).count()\nfemale_pop = df[(df.sex=='Female')]\nfemale_pop = female_pop.groupby(pd.cut(female_pop['age'], np.arange(0,100,5))).count()\n\nage_piramid = sns.barplot( x=female_pop.age.rename('Population'),y=female_pop.index,orient='h', palette='OrRd', lw=0)\nage_piramid = sns.barplot( x=-male_pop.age.rename('Population'), y=male_pop.index,orient='h', palette='PuBu', lw=0)\nage_piramid.invert_yaxis()\nage_piramid.set(title='Dataset age distribution (Male\/Female)')\n","0c000eb5":"for feature in ['workclass', 'education', 'marital.status', 'occupation', 'relationship', 'race', 'native.country']: \n    df[feature].value_counts().plot(kind = 'barh', title = f'Gr\u00e1fico ocorr\u00eancias de {feature}');\n    plt.show()","f741115e":"sns.catplot(y=\"sex\", x=\"income\", kind=\"bar\", data=df);","e9bb3154":"sns.catplot(x=\"income\", y=\"education.num\", kind=\"boxen\", data=df)","8f7f60b5":"sns.catplot(x=\"income\", y=\"age\", kind=\"boxen\", data=df)","e3ee63eb":"sns.catplot(y=\"race\", x=\"income\", kind=\"bar\", data=df)","8f13ef09":"sns.catplot(y=\"native.country\", x=\"income\", kind=\"bar\", data=df)\nsns.catplot(y=\"occupation\", x=\"income\", kind=\"bar\", data=df)\nsns.catplot(y=\"marital.status\", x=\"income\", kind=\"bar\", data=df)","7eb2466d":"mask = np.triu(np.ones_like(df.corr(), dtype=np.bool))\n\nplt.figure(figsize=(10,10))\n\nsns.heatmap(df.corr(), mask=mask, square = True, annot=True, vmin=-1, vmax=1, cmap='summer')\nplt.show()","e98d32b3":"categorical_to_numerical = ['sex', 'race', 'marital.status', 'occupation', 'relationship']\n\nfor feature in categorical_to_numerical:\n    df[feature] = df[feature].astype('category')\n    string_num = feature + '-numerical'\n    df[string_num] = df[feature].cat.codes","395a250a":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score","8f5b9803":"Xtrain = df[['age', 'education.num', 'hours.per.week', 'sex-numerical', 'race-numerical', 'marital.status-numerical', 'capital.gain', 'capital.loss', 'relationship-numerical', 'occupation-numerical']]\nYtrain = df.income","8769b3db":"\nn_neighbors = list(range(1,30))\nscores = {}\nn_folds = 5\n\n\nfor n_viz in n_neighbors:\n    # kNN\n    print(f'Treinando para k = {n_viz}')\n    knn = KNeighborsClassifier(n_neighbors = n_viz)\n    score = cross_val_score(knn, Xtrain, Ytrain, cv = n_folds, scoring = 'accuracy').mean()\n    scores[n_viz] = score\n\nbest_k = max(scores, key=scores.get)\nprint('Best k: ', best_k, ' | Acc: ', '{:.4f}'.format(scores[best_k]))","e9ada1b8":"knn = KNeighborsClassifier(n_neighbors = best_k)\nknn.fit(Xtrain, Ytrain)","ca7a3858":"#Importando os dados de teste:\ntest = pd.read_csv(\"\/kaggle\/input\/adult-pmr3508\/test_data.csv\", index_col=['Id'],\n                   na_values = '?')\n\ntest['workclass'] = test['workclass'].fillna('Private')\ntest['native.country'] = test['native.country'].fillna('United-States')\n\n\nfor feature in categorical_to_numerical:\n    test[feature] = test[feature].astype('category')\n    string_num = feature + '-numerical'\n    test[string_num] = test[feature].cat.codes","ac4db2c2":"# Nova coluna de income no dataset de teste\ntest.income = np.nan\nXtest = test[['age', 'education.num', 'hours.per.week', 'sex-numerical', 'race-numerical', 'marital.status-numerical', 'capital.gain', 'capital.loss', 'relationship-numerical', 'occupation-numerical']]\nYtest = test.income\n\nYtest_classified = knn.predict(Xtest)","3ed06739":"prediction = pd.DataFrame(index = test.index)\nprediction['income'] = Ytest_classified\nprediction['income'] = prediction['income'].replace([0,1],['<=50K','>50K'])\nprediction.head()\n\nprediction.to_csv('submittion.csv')","fade511e":"As **features** com dados faltantes s\u00e3o: \"workclass\", \"occupation\" e \"native.country\". Ou seja, somente features categ\u00f3ricas.","7e97ab69":"Em \"Xtrain\" indicaremos as **features** com as quais queremos treinar o classificador. Em \"Ytrain\" \u00e9 colocada a feature de interesse, a \"income\".","bb573252":"Para determinarmos o melhor \"k\" de kNN, iteraremos entre alguns valores de k e mediremos sua acur\u00e1cia a partir da valida\u00e7\u00e3o cruzada. Determinado o melhor k, utilizaremos o classificador treinado com este k para classificar os dados de teste.","efaee896":"## **2.An\u00e1lise Explorat\u00f3ria**\nNesta se\u00e7\u00e3o, iremos visualizar algumas das **features** e como elas se relacionam entre si, para que entendamos como tais dados interferem na popula\u00e7\u00e3o e como possivelmente podem ser associadas a sua renda.\n\n### **2.1 Dados demogr\u00e1ficos**\nCome\u00e7aremos nossa an\u00e1lise a partir da idade e g\u00eanero da popula\u00e7\u00e3o do dataset.","44097b54":"Verifica-se que n\u00e3o h\u00e1 predomin\u00e2ncia de nenhum valor, logo excluiremos todas as linhas correspondentes, finalizando o tratamento de dados faltantes.","5e72d6c1":"Verifica-se uma clara predominancia do valor \"United-States\". Logo, substituiremos todos os dados faltantes de \"native.country\" com o valor \"United-States\".","bb03b0c9":"A popula\u00e7\u00e3o com maior educa\u00e7\u00e3o, em m\u00e9dia, tem renda superior.","f9357c79":"Aqui atribuimos os valores adquiridos no DataFrame prediction e em seguida estamos prontos para submeter a tentativa.","c69f6ecf":"Mulheres tendem a ter uma renda menor que os homens.","f3eadd79":"Abaixo a an\u00e1lise da vari\u00e1vel **occupation**:","06cc8b18":"Verifica-se uma clara predominancia do valor \"Private\". Logo, substituiremos todos os dados faltantes de \"workclass\" com o valor \"Private\".","d53073a7":"Os dados que ser\u00e3o inseridos no treinamento do classificador kNN devem ser todos num\u00e9ricos, no entanto algumas de nossas vari\u00e1veis de interesse s\u00e3o categ\u00f3ricas. Existem 2 simples abordagens para este problema: a primeira, consiste em transformar os valores das vari\u00e1veis categ\u00f3ricas em valores num\u00e9ricos e a segunda, \u00e9 transformar cada valor da vari\u00e1vel categ\u00f3rica em uma coluna e atribuir valores 0 ou 1 para aus\u00eancia e presen\u00e7a. \n\nDe in\u00edcio aplicaremos a primeira abordagem e mais tarde, caso n\u00e3o obtenhamos resultados satisfat\u00f3rios podemos voltar a este ponto.","12e84f98":"H\u00e1 uma tend\u00eancia das diferentes etnias receberem diferentes rendas, evidenciando uma desigualdade.","644d4490":"\nCom uma breve ideia do que est\u00e1 contido neste *dataset*, vamos verificar se n\u00e3o existem **dados faltantes** ou **outliers**. Verificaremos os dados faltantes com o comando **.isnull().sum()** e a existencia de outliers com o comando **.describe()**, que nos dar\u00e1 alguns dados estat\u00edsticos do dataset. ","b88a5160":"## **1. Introdu\u00e7\u00e3o**\nNeste notebook ser\u00e1 feita a an\u00e1lise dos dados da base Adult e em seguida um uso simples do **classificador supervisionado** KNN. O classificador ser\u00e1 treinado com uma grande base de dados (test_data.csv), na qual primeiramente ser\u00e1 preciso fazer o devido tratamento, com o objetivo final de classificar um conjunto de dados distinto (train_data.csv) em renda **<=50K** ou **>50K**. \n\n### **1.1 Data Preparation**\n\nPrimeiramente, importaremos as seguintes bibliotecas:","6b583c52":"Observando os valores m\u00e1ximos das vari\u00e1veis num\u00e9ricas, vemos que existem **outliers** nas vari\u00e1veis de \"capital.gain\" e \"hours.per.week\".\n\n### **1.2 Lidando com os dados faltantes**\n\nO m\u00e9todo para o tratamento dos dados faltantes\u00b9 ser\u00e1: \n\n* Verificar o n\u00famero de ocorrencias das vari\u00e1veis\n* Caso exista uma vari\u00e1vel predominante, os faltantes ser\u00e3o preenchidos com esta.\n* Caso n\u00e3o exista uma predominancia clara, as linhas correspondentes ser\u00e3o exclu\u00eddas.\n\n\u00b9 Os dados faltantes s\u00e3o somente categ\u00f3ricas\n\nAbaixo est\u00e1 a an\u00e1lise da vari\u00e1vel **workclass**:","4cfb66f9":"Importando os dados:","93d279a6":"Os comandos **.head()** e **.info()** d\u00e3o uma idea b\u00e1sica dos dados com os quais estamos lidando, nos informando grosseiramente sobre as **features** e sobre quais s\u00e3o **num\u00e9ricas** e **categ\u00f3ricas**.","741c2b5e":"### **4.2 Treino**\nEncontrado o melhor K, ajustaremos o classificador.","6e977987":"Na \u00faltima linha do gr\u00e1ficos, observa-se que existe uma correla\u00e7\u00e3o positiva entre **income** e as demais features, exceto pela \"fnlwgt\". \n\n## **3. Pre-processamento**","e857717b":"Por fim, criaremos uma coluna \"income\" nos dados de teste e realizar a classifica\u00e7\u00e3o.","da66b135":"### **4.3 Predi\u00e7\u00e3o**\nCom o classificador treinado, basta agora fazer os mesmos procedimentos de tratamentos de dados e pr\u00e9-processamentos feitos no dataset de treino nos dados de teste.\n","d0918934":"### **1.3 Transforma\u00e7\u00e3o da coluna income**\n\nPara termos uma melhor ideia da renda da popula\u00e7\u00e3o em quest\u00e3o, iremos transformar a **feature** categ\u00f3rica income em uma num\u00e9rica. Apesar de perdermos as propriedades qualitativas da vari\u00e1vel, ganhamos uma poss\u00edvel vari\u00e1vel num\u00e9rica para fazermos an\u00e1lises comparativas. Os novos valores num\u00e9ricos, no entanto, deixar\u00e3o de ter significado e passar\u00e3o a ser somente valores com fins comparativos.\n\nA transforma\u00e7\u00e3o se dar\u00e1 da seguinte forma: \n* os valores \"<=50K\" passar\u00e3o a ter valor 0;\n* os valores \">50K\" passar\u00e3o a ter valor 1;","c2e48592":"Observa-se uma predominancia da popula\u00e7\u00e3o masculina, concentranda principalmente na faixa entre 25 e 45 anos. Em uma breve pesquisa, nota-se que a popula\u00e7\u00e3o dos EUA (pa\u00eds com maior representatividade na base de dados) tem propor\u00e7\u00e3o ao redor de 50% entre homens e mulheres. O que nos leva a suspeitar sobre a metodologia da coleta dos dados devido ao seu alto vi\u00e9s.\n\nA seguir est\u00e3o uma visualiza\u00e7\u00e3o simples das **features** categ\u00f3ricas:","6555ce96":"# **Analysis and Prediction of Adult dataset**\n\n<ul>\n <li>Intrudu\u00e7\u00e3o<\/li>\n    <ul>\n        <li> Data Preparation <\/li>\n        <li> Lidando com dados faltantes<\/li>\n        <li> Transforma\u00e7\u00e3o da coluna income <\/li>\n    <\/ul>\n <li>An\u00e1lise explorat\u00f3ria dos dados<\/li>\n    <ul>\n        <li> Num\u00e9ricas <\/li>\n        <li> Categ\u00f3ricas\n    <\/ul>\n <li>Treino<\/li>\n <\/ul>","986cd30e":"Abaixo a an\u00e1lise da vari\u00e1vel **native.country**:","7c83f6b9":"Nesta se\u00e7\u00e3o ser\u00e3o feitas algumas rela\u00e7\u00f5es entre as diferentes features com a renda. Lembrando que as rendas com valores 0 s\u00e3o \"<=50K\" e com valores 1 s\u00e3o \">50K\", valores intermedi\u00e1rios devem ser entendidos somente como medida comparativa.","f5f9ca57":"Conforme maior a idade, a renda tende a aumentar.","15a76cd0":"## **4. Classificador kNN**\n### **4.1 Determina\u00e7\u00e3o do K**\nImportando bibliotecas:","6440d58b":"Grosso modo, a maioria das **features** parecem ter alguma rela\u00e7\u00e3o com a renda. As linhas pretas, que representam a varia\u00e7\u00e3o de renda em cada grupo, evidenciam que apenas em alguma das **features** n\u00e3o \u00e9 poss\u00edvel afirmar uma rela\u00e7\u00e3o com a renda, como em \"native.country\". Este fen\u00f4meno pode ser explicado pela desproporcionalidade dos dados vindos de americados. \n\n### **2.3 \u00cdndice de correla\u00e7\u00e3o entre as features**\n\nPara completarmos a an\u00e1lise explorat\u00f3ria e passarmos para o treinamento do classificador, verificaremos os \u00edndices de correla\u00e7\u00f5es entre as features num\u00e9ricas.","da4b25ff":"Tiram-se as seguintes conclus\u00f5es dos gr\u00e1ficos de ocorr\u00eancias acima:\n\n* Workclass: predominantemente \"private\";\n* Education: a maior parte da popula\u00e7\u00e3o tem ensino m\u00e9dio completo;\n* Marital Status: para o estado civil, a rela\u00e7\u00e3o de casado para solteiro para divorciado \u00e9 de 7:5:2;\n* Occupation: Diverso;\n* Race: os brancos s\u00e3o quase a totalidade;\n* Native country: os americanos s\u00e3o praticamente a totalidade.\n\n### **2.2 Features vs Renda**"}}