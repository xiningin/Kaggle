{"cell_type":{"1a2d4e6e":"code","74b43dfc":"code","aa70fcc1":"code","450e3d1a":"code","57baec6b":"code","8fb4bee2":"code","9c930e46":"code","071e4965":"code","75a14392":"code","b651c6e3":"code","228d4d10":"code","2283ea78":"code","4b4e77f9":"code","49717e38":"code","8ae90fc5":"code","e9f7b215":"code","756bca78":"code","1be06ab3":"markdown"},"source":{"1a2d4e6e":"a = 2  #  Assignment\nb = 3  #  Assignment\n\nx = a + b  #  Expression and Assignment\ny = a * b  #  Expression and Assignment\n\nprint( x )  #  Print the Result\nprint( y )  #  Print the Result\n","74b43dfc":"print(12 * 12)","aa70fcc1":"example = \"This is 1 example of a text string.\"\ntext = \"ABC\"\nprint(example)","450e3d1a":"quantity = 123\noutput = f\"The quantity is { quantity }.\"\nprint(output)","57baec6b":"#CONCATENATE\noutput = \"ABC\" + \"XYZ\"\nprint(output)\n\nquantity = 123\nprint(\"quantity: \" + str(quantity))","8fb4bee2":"isCool = True\nisTooCool = False\n\nisGreater: bool = 3 < 2\nisSame: bool = 2 + 2 == 5\n    \nprint(isGreater)\nprint(isSame)\n","9c930e46":"# Array of integers\nnumbers = [ 12, 23, 54 ]\nprint(numbers)\n\n# Array of Strings\nnames = [\n    \"Bob\", \n    \"Carol\", \n    \"Ted\", \n    \"Alice\"\n]\nprint(names)","071e4965":"print('I can\\'t even...')\nprint(\"<img src=\\\"file.png\\\">\")\nprint(\"\"\"\nI can't even!!!\n<img src=\"\">\n\"\"\")","75a14392":"# Array of integers\nnumbers = [ 12, 23, 54 ]\n\n# Array of Strings\nnames = [\n    \"Bob\", \n    \"Carol\", \n    \"Ted\", \n    \"Alice\"\n]\nprint(numbers)\nprint(numbers[2]) #54\nprint(numbers[-1]) #54\n\nprint(names[-2]) #Ted","b651c6e3":"# Declare an Array of Strings\nnames: [str] = [] \n    \n# Append two items\nnames.append( \"Bob\" )\nnames.append( \"Carol\" )\nassert(len(names) == 2 ) # Verify\n\n# Print Them Out\nprint( names[ 0 ] )\nprint( names[ 1 ] )\n\n# Remove One Item\nnames.remove( \"Bob\" )\nassert( len(names) == 1 ) # Verify\n","228d4d10":"phrase_book: {str:str} = {\n    \"alpha\" : \"A as in Alpha\",\n    \"bravo\" : \"B as in Bravo\",\n    \"charlie\" : \"C is for Charlie\",\n}\n\nphrase = phrase_book[ \"bravo\" ]\n\nassert(\"B as in Bravo\" == phrase)\nprint( phrase )\n","2283ea78":"oneThroughFive = range(1,6)\n# up to but not including the number on the right.\n# [1,2,3,4,5]\n\nzeroToFour = range(0,5) \n# Up to but not including the number on the right.\n#  [0,1,2,3,4]\nprint(list(oneThroughFive))\nprint(list(zeroToFour))\n\nprint(list(range(10)))","4b4e77f9":"data: [str] = [123, 456, \"ABC\", \"XYZ\"]\nprint(data)","49717e38":"age = 77\n\nif age < 21:\n    print( \"May Not Drink.\" )\nelif age > 50 and age < 70:\n    print(\"Should not drink.\")\nelif age >= 70:\n    print(\"Why not drink.\")\nelse:\n    print( \"May Drink.\" )\n    \nprint(\"All done\")","8ae90fc5":"# Loop through a range 1 to 4:\ndata = range(1,5)\nfor index in data:\n    print(index)\n","e9f7b215":"# Loop through a list of names:\npeople = [ \"Bob\", \"Carol\", \"Ted\", \"Alice\" ]\n\npeople.remove(\"Ted\")\n\nprint(people)\n\nfor x in people:\n    print( x )\n\nprint(\"All done\")\n\n\n# for index in range(0,len(people)):\n#     print(people[index])","756bca78":"count = 10\nwhile count >= 0:\n    print(count)\n    count = count - 1\n#     count -= 1 #shorthand\n#     count-- # not in python\nprint(\"Blastoff!\")","1be06ab3":"get bread from freezer\nget pb from pantry\nget jelly from fridge (close fridge door after)\nget knife from drawer\nget plate from cupboard\nopen each jar\n\nput two slices bread on plate\n\nuse knife to get peanut butter out of jar and apply immediately to bread wioth a back and fort  motion\n\n\nput used untencil in sink\nput jars and bread away\n"}}