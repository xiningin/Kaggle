{"cell_type":{"0c85b064":"code","a7c097c2":"code","f416f73e":"code","0719668a":"code","192f49b4":"code","0f347333":"code","f1236409":"code","00dcb174":"code","96b23695":"code","9364205c":"code","8b0471fb":"code","dff879ee":"code","c40f60f5":"code","01a48c7b":"code","608490c7":"code","57a5d4b7":"code","7f419712":"code","5ddd1ff6":"code","ada05526":"code","63c39514":"code","08515863":"code","a75dfb3d":"code","3afd2a28":"code","da369501":"code","f3b2013c":"code","00ac2f13":"code","e0fe3297":"code","20a9ffbb":"code","6d017f36":"code","479f3308":"code","7c790719":"code","a72d1c9c":"code","f284322e":"code","122bedea":"code","337287bb":"code","f95a2c4c":"code","6cbf5720":"code","9dd35656":"code","3694975f":"markdown","64bd8cbf":"markdown","7a9d13c0":"markdown","e5c800c3":"markdown","832689f4":"markdown","bb25f905":"markdown","5e2d7f0b":"markdown","85150bc3":"markdown","6be57e1e":"markdown","b84b03f5":"markdown","54c8d994":"markdown","fb8eb949":"markdown","f125ae46":"markdown","c7e71567":"markdown","9f5a6f88":"markdown","52317789":"markdown","995bca7f":"markdown","7328a25b":"markdown","caa1e41b":"markdown"},"source":{"0c85b064":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\n\nimport seaborn as sns\n\nfrom collections import Counter\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a7c097c2":"train_df = pd.read_csv(\"\/kaggle\/input\/ml-challenge-tr-is-bankasi\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/ml-challenge-tr-is-bankasi\/test.csv\")\ntest_df.head()\n","f416f73e":"train_df.columns","0719668a":"train_df.head()","192f49b4":"train_df[\"ISLEM_TURU\"].unique()","0f347333":"train_df[\"Record_Count\"].unique()","f1236409":"train_df[\"CUSTOMER\"].unique()","00dcb174":"train_df = train_df.drop([\"Record_Count\"], axis=1)","96b23695":"train_df.info()","9364205c":"def bar_plot(variable):\n    var = train_df[variable]\n    varValue = var.value_counts()\n    \n    # visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index, varValue.index.values, rotation = \"vertical\")\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}\".format(variable,varValue))\n    ","8b0471fb":"category1 = [\"ISLEM_TURU\",\"SEKTOR\"]\nfor c in category1:\n    bar_plot(c)","dff879ee":"train_df[\"ISLEM_ADEDI\"] = train_df[\"ISLEM_ADEDI\"].astype(int)\n","c40f60f5":"train_df[\"ISLEM_TUTARI\"].max()","01a48c7b":"train_df[\"ISLEM_ADEDI\"].max()","608490c7":"\nplt.figure(figsize = (9,3))\nplt.hist(train_df[\"ISLEM_TUTARI\"],range=[0,1000], bins = 50)\nplt.xlabel(\"ISLEM_TUTARI\")\nplt.ylabel(\"Frequency\")\nplt.title(\"{} histogram da\u011f\u0131l\u0131m\u0131\".format(\"ISLEM_TUTARI\"))\nplt.show()","57a5d4b7":"plt.figure(figsize = (9,3))\nplt.hist(train_df[\"ISLEM_ADEDI\"],range=[0,50], bins = 10)\nplt.xlabel(\"ISLEM_ADEDI\")\nplt.ylabel(\"Frequency\")\nplt.title(\"{} histogram da\u011f\u0131l\u0131m\u0131\".format(\"ISLEM_ADEDI\"))\nplt.show()","7f419712":"# ISLEM_TURU vs ISLEM_TUTARI\ntrain_df[[\"ISLEM_TURU\",\"ISLEM_TUTARI\"]].groupby([\"ISLEM_TURU\"], as_index = False).mean().sort_values(by=\"ISLEM_TUTARI\",ascending = False)","5ddd1ff6":"# SEKTOR vs ISLEM_TUTARI\ntrain_df[[\"SEKTOR\",\"ISLEM_TUTARI\"]].groupby([\"SEKTOR\"], as_index = False).mean().sort_values(by=\"ISLEM_TUTARI\",ascending = False)","ada05526":"def detect_outliers(df,features):\n    outlier_indices = []\n    \n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c],25)\n        # 3rd quartile\n        Q3 = np.percentile(df[c],75)\n        # IQR\n        IQR = Q3 - Q1\n        # Outlier step\n        outlier_step = IQR * 1.5\n        # detect outlier and their indeces\n        outlier_list_col = df[(df[c] < Q1 - outlier_step) | (df[c] > Q3 + outlier_step)].index\n        # store indeces\n        outlier_indices.extend(outlier_list_col)\n    \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i, v in outlier_indices.items() if v > 2)\n    \n    return multiple_outliers","63c39514":"train_df.loc[detect_outliers(train_df,[\"ISLEM_ADEDI\", \"ISLEM_TUTARI\"])]","08515863":"train_df.columns[train_df.isnull().any()]\ntrain_df.isnull().sum()","a75dfb3d":"test_df.columns[test_df.isnull().any()]\ntest_df.isnull().sum()","3afd2a28":"train_df[\"YIL_AY\"] = train_df[\"YIL_AY\"].astype(str)","da369501":"year = []\nmonth = []\nfor s in train_df[\"YIL_AY\"]:\n    y = s[0:4]\n    m = s[4:]\n    year.append(y)\n    month.append(m)\ntrain_df[\"YEAR\"] = year\ntrain_df[\"MONTH\"] = month\ntrain_df[\"DAY\"] = 15\npd.to_datetime(train_df[[\"YEAR\", \"MONTH\", \"DAY\"]])","f3b2013c":"train_df.drop(\"YIL_AY\", axis=1, inplace = True)","00ac2f13":"train_df.head()","e0fe3297":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df,test_df],axis = 0).reset_index(drop = True)","20a9ffbb":"train_df.columns[train_df.isnull().any()]\ntrain_df.isnull().sum()\ntrain_df.drop([\"YEAR\", \"MONTH\",\"DAY\",\"ID\",\"YIL_AY\",\"Record_Count\"], axis=1, inplace=True)","6d017f36":"train_df[\"ISLEM_TURU\"] = [0 if i == \"PESIN\" else 1 for i in train_df[\"ISLEM_TURU\"]]","479f3308":"train_df = pd.get_dummies(train_df,columns=[\"ISLEM_TURU\"])\ntrain_df.head()","7c790719":"from sklearn.preprocessing import LabelEncoder \n  \nle = LabelEncoder() \ntrain_df[\"SEKTOR\"] = le.fit_transform(train_df[\"SEKTOR\"])","a72d1c9c":"train_df = pd.get_dummies(train_df,columns=[\"SEKTOR\"])\ntrain_df.head()","f284322e":"from sklearn.model_selection import train_test_split","122bedea":"test = train_df[train_df_len:]\ntest.drop(labels = [\"ISLEM_TUTARI\"],axis = 1, inplace = True)","337287bb":"train = train_df[:train_df_len]\nX_train = train.drop(labels = \"ISLEM_TUTARI\", axis = 1)\ny_train = train[\"ISLEM_TUTARI\"]\nX_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size = 0.33, random_state = 42)\nprint(\"X_train\",len(X_train))\nprint(\"X_test\",len(X_test))\nprint(\"y_train\",len(y_train))\nprint(\"y_test\",len(y_test))\nprint(\"test\",len(test))","f95a2c4c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","6cbf5720":"test_Id = test_df[\"ID\"]","9dd35656":"lin_reg_mod = LinearRegression()\na = lin_reg_mod.fit(X_train, y_train)\ntest_sonu\u00e7 = pd.Series(a.predict(test), name = 'Predicted').astype(int)\nresults = pd.concat([test_Id, test_sonu\u00e7],axis = 1)\nresults.to_csv(\"sampleSubmission.csv\", index = False)","3694975f":"* Dummies for SEKTOR","64bd8cbf":"* Hi\u00e7 outlier yok. Bu durumda \u00e7\u0131kar\u0131lacak sat\u0131rda yok demektir.","7a9d13c0":"* Kategorik verilerin g\u00f6rselle\u015ftirmesini yap\u0131yorum.","e5c800c3":"* Bu durumda taksitli al\u0131nan \u00fcr\u00fcnlerin ortalama fiyat\u0131 pe\u015fin al\u0131nanlara g\u00f6re daha fazla.\n* Fakat unutulmamal\u0131d\u0131r ki taksitle al\u0131nan \u00fcr\u00fcn say\u0131s\u0131 pe\u015fin al\u0131nan \u00fcr\u00fcn say\u0131s\u0131na g\u00f6re %lik olarak \u00e7ok azd\u0131r.","832689f4":"* float64(2) : ISLEM_TUTARI , ISLEM_ADEDI   \n* int64(2) : YIL_AY , CUSTOMER      \n* object(2) : ISLEM_TURU , SEKTOR           ","bb25f905":"* Record_Count s\u00fctununda sadece 19 verisi bulunmakta. Bu nedenle analizime faydas\u0131 bulunmay\u0131p verinin anlaml\u0131l\u0131\u011f\u0131n\u0131 bozabilece\u011fi i\u00e7in bu s\u00fctunu \u00e7\u0131kar\u0131yorum.","5e2d7f0b":"* Buradan hem verilerin da\u011f\u0131l\u0131m\u0131n\u0131 anl\u0131yorum. Hemde \/ i\u00e7eren verileri birden fazla tip verinin birl\u015fimi olmad\u0131\u011f\u0131 kanaatine var\u0131yorum. Yani RESTORAN \/ CATERING heryerde ayn\u0131 RESTORAN \/ KUYUMCULAR gibi bir veri tipi s\u00f6z konusu de\u011fil. \u00d6yle olsayd\u0131 \/ i\u015faretinin \u00f6ncesi ve sonras\u0131 gibi ay\u0131rmak gerekecekti.","85150bc3":"* Baz\u0131 s\u00fctunlardaki verilerin \u00e7ok tekrar i\u00e7erdi\u011fini g\u00f6r\u00fcyorum. Bu verileri ayn\u0131 verilerden olu\u015fup olu\u015fmad\u0131\u011f\u0131n\u0131 kontrol ediyorum.","6be57e1e":"<a id = \"3\"><\/a><br>\n# Univariate Variable Analysis\n* Categorical Variable: ISLEM_TURU , SEKTOR       \n* Numerical Variable: ISLEM_TUTARI  , ISLEM_ADEDI\n\nKategorik ve numerik verileri belirliyorum.","b84b03f5":"<a id = \"5\"><\/a><br>\n## Numerical Variable","54c8d994":"* test datam\u0131zda da missing value bulunmamakta. ISLEM_TUTARI s\u00fctunundaki 130695 zaten predict edece\u011fimiz de\u011ferler oldu\u011fundan bo\u015flar.","fb8eb949":"<a id = \"8\"><\/a><br>\n# Missing Value\n* Find Missing Value\n\n\u00d6nce train datam\u0131zda missing value var m\u0131 inceliyoruz.","f125ae46":"* G\u00f6r\u00fcld\u00fc\u011f\u00fc gibi herhangi bir missing value yok.\n* Ard\u0131ndan test datam\u0131zda missing value var m\u0131 inceliyoruz.","c7e71567":"<a id = \"30\"><\/a><br>\n## MLR","9f5a6f88":"* Buradan anla\u015f\u0131laca\u011f\u0131 gibi MUTEAHHIT ISLERI ortalama 1281.801986 tutar\u0131 ile en fazla tutara sahip sekt\u00f6rd\u00fcr.","52317789":"* Dummies for ISLEM_TURU","995bca7f":"<a id = \"7\"><\/a><br>\n# Outlier Detection","7328a25b":"<a id = \"8\"><\/a><br>\n# YIL\n* Y\u0131l verisini tarih format\u0131na d\u00f6n\u00fc\u015ft\u00fcr\u00fcyoruz.","caa1e41b":"<a id = \"6\"><\/a><br>\n# Basic Data Analysis\n* ISLEM_TURU - ISLEM_TUTARI\n* SEKTOR - ISLEM_TUTARI"}}