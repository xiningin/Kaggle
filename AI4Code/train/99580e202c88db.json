{"cell_type":{"2fa046d0":"code","f68a386f":"code","7be18af7":"code","59365398":"code","862f6e28":"code","f802219b":"code","4eb7ba53":"code","fe5a9028":"code","08106836":"code","446a681c":"markdown","9f9451b8":"markdown","c730df2d":"markdown","7f324f8c":"markdown","c4d283e7":"markdown","0fdb59a2":"markdown"},"source":{"2fa046d0":"print('Hello World')","f68a386f":"print(\"--------LOOK AT ME.... I'M ALIVE------------------\")","7be18af7":"print(2 + 2)\nprint(5-7)\nprint(8\/4)\nprint(9\/2)\nprint(9**(1\/2)) #the double asterisk is the pythonic way to raise some number to a power.  Here, we're doing a square root\n#--order of operations is as expected, no tricks here--\nprint((4*5) + 4)\nprint((8\/2) + 4)\nprint(4*5+4)\nprint(4*(5+4))","59365398":"try:\n    print(sqrt(9))\nexcept:\n    print('This Fails')","862f6e28":"import math\ntry:\n    print(sqrt(9)) #This still fails... why?\nexcept:\n    print('This also fails')","f802219b":"print(math.sqrt(9))","4eb7ba53":"import pandas as pd #note the 'as pd' part of this import.  That's called an Alias.  It allows for short hand references in the code.... a life saver for typing\n\ndata = {'Brand':['NRG','GME','Cirro','EPH'],'BrandID':[2,5,6,1]} #start by creating a dictionary\ndf = pd.DataFrame(data = data) #now we've created a data frame.  Like an excel table.\ndf['Commodity'] = 'Elec' #Adds a new column named 'Commodity' to the data frame\nprint(len(df)) #how many rows\nprint(len(df.columns)) #how many columns\nprint(df.dtypes) #What are the data types","fe5a9028":"import numpy as np\ndf['RandomNUmber'] = np.random.rand(len(df)) #Breakdown... We're creating a column of Random Number with Numpy.  the rand function needs a number for the lenght\n                                             #of the output, so we are saying the length is the number of rows in the data frame... len(df)\n\n#-----Now for loops-----\n#Notice the indent.  This is VERY important in Python.  It's how you group related code.  Improper indenting will crash your code.\nfor i in range(10):\n    print(i)\n\n\ntest = False\nr = 0\nwhile test == False:\n    print(r,test)\n    r+=1\n    if r ==5:\n        test=True\n","08106836":"def NPV(Revenues,Rate,Costs): #We define the name of the function along with the variable it will use\n    Rev = Revenues[:] #Making a copy of the Revenue list... otherwise it will overwrite the input list... stange Python thing\n    Periods = len(Revenues) #figuring out how many periods we have\n    for i in range(Periods): #one of those loop things\n        Rev[i] = Rev[i]\/(1+Rate)**(i+1) #for each Revenue, discount the amount by the period +1 since it starts with 0\n    return(sum(Rev)-Costs) #give us the total revenues, in current dollars, less the investment cost\n\nCash = [100,200,300,400,500] #list of revenues\nDiscountRate = 0.09 #rate percent in decimal form\nInvest = 500 #what's our upfront spend\n\nNPV(Cash,DiscountRate,Invest) #run the formula\n\n#this is also built into numpy\nnp.npv(DiscountRate,Cash) - Invest\n\n#-------A REALLY basic plot----------\n#We'll use the NPV calculation to make a plot of the revenes by year, using pandas and MatPlotLib\ndata = {'Year':[1,2,3,4,5],'CashFlow':[100,400,300,500,900]}\nplotdf = pd.DataFrame(data = data)\nprint(plotdf)\nprint('----------------------')\n#We'll use the Lambda function to discount the years\nplotdf['Discounted'] = plotdf.apply(lambda x: x['CashFlow']\/(1.09**x['Year']),axis = 1)\nprint(plotdf)\nprint('----------------------')\nimport matplotlib.pyplot as plt\nplotdf.plot(kind = 'line', x = 'Year',title = 'Discounted Revenues By Year')\nplt.show()","446a681c":"---Lets try some basic mathmatical operations---","9f9451b8":"#----Your very own function---------\n#We're going to create a basic NPV calculator","c730df2d":"#------Python 101 supplimentary Code--------------\n#lines that have a hashtag in front are comments.  The compilier does not read them.  Very useful to notate\n#what you did, what you mean to do or to provide information to other programmers (or yourself months later)\n\n#---Basic printing---","7f324f8c":"When there is a problem with the code, the IDE kicks out a warning before you run the script.  See the yellow caution icon on the left of the line?\n#You can hover your mouse over the icon and it will tell you what the issue is.\n","c4d283e7":"Lets import a package that's really useful... pandas","0fdb59a2":"--Lets look at what happens if we try to use a function before we bring in the package"}}