{"cell_type":{"8cb288cb":"code","5b5a20b3":"code","29b1ca05":"code","350a10c3":"code","e42bf323":"code","4c93ee4b":"code","5ba985e4":"code","4793be41":"code","8f70c46c":"code","0b03e027":"code","9bd92db1":"code","742dbc3b":"code","86821025":"code","f4e513f0":"code","e500da12":"code","e32c9059":"code","399a4de8":"code","d4517e26":"code","acc6c3be":"markdown","076b0b7a":"markdown","3a21ad0b":"markdown","5c666e71":"markdown","ce3a8aa8":"markdown","3891faa8":"markdown","cdefe96a":"markdown","25ebd2c5":"markdown","7d9c537b":"markdown","583a17a3":"markdown","4480336e":"markdown"},"source":{"8cb288cb":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","5b5a20b3":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","29b1ca05":"df = pd.read_csv('\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\nprint(df.shape)\ndf.head()","350a10c3":"df.rename(columns={'Annual Income (k$)' : 'Income', 'Spending Score (1-100)' : 'Spending_Score'}, inplace = True)\ndf.head()","e42bf323":"df.describe()","4c93ee4b":"#Plot Age, Income and Spending Score Correlation\nsns.pairplot(df[['Age','Income', 'Spending_Score']])","5ba985e4":"df_short =df[['Income','Spending_Score']]\ndf_short","4793be41":"import sklearn.cluster as cluster\nK=range(1,12)\nwcss = []\nfor k in K:\n    kmeans=cluster.KMeans(n_clusters=k,init=\"k-means++\",random_state= 42)\n    kmeans=kmeans.fit(df_short)\n    wcss_iter = kmeans.inertia_\n    wcss.append(wcss_iter)","8f70c46c":"#Storing the wcss for different clusters \nmycenters = pd.DataFrame({'Clusters' : K, 'WCSS' : wcss})\nmycenters","0b03e027":"plt.plot(mycenters[\"Clusters\"], mycenters[\"WCSS\"])\nplt.xlabel(\"Clusters\")\nplt.ylabel(\"WCSS\")","9bd92db1":"import sklearn.metrics as metrics\n\nfor i in range(3,13):\n    labels=cluster.KMeans(n_clusters=i,init=\"k-means++\",random_state=200).fit(df_short).labels_\n    print (\"Silhouette score for k(clusters) = \"+str(i)+\" is \"\n           +str(metrics.silhouette_score(df_short,labels,metric=\"euclidean\",sample_size=1000,random_state=200)))","742dbc3b":"# We will use 2 Variables for this example\nkmeans = cluster.KMeans(n_clusters=5 ,init=\"k-means++\")\nkmeans = kmeans.fit(df[['Spending_Score','Income']])","86821025":"kmeans.cluster_centers_","f4e513f0":"df['Clusters'] = kmeans.labels_","e500da12":"df.head()","e32c9059":"df['Clusters'].value_counts()","399a4de8":"df.to_csv('mallClusters.csv', index = False)","d4517e26":"g=sns.scatterplot(x=\"Spending_Score\", y=\"Income\",hue = 'Clusters',  data=df, palette=['green','orange','brown','dodgerblue','red'])\ng.legend(loc='center left', bbox_to_anchor=(1.25, 0.5), ncol=1)\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 300, c = 'black', label = 'Centroid', marker=\"*\")  ","acc6c3be":"# Import Libraries","076b0b7a":"# Checking Descriptive Statistics","3a21ad0b":"# Attach Clusters to the Original Data ","5c666e71":"# Import Data & Rename Columns","ce3a8aa8":"# Visualizing Clusters ","3891faa8":"# Export Data with Clusters","cdefe96a":"# Silhouette Method to Indentify Clusters","25ebd2c5":"### 5 Clusters are identified as per elbow method","7d9c537b":"# END","583a17a3":"# Elbow Method to Identify the optimal number of Clusters\n","4480336e":"# Perform K-Mean Clustering with 5 Clusters"}}