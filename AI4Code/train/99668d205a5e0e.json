{"cell_type":{"cb54a2a6":"code","7d2ada32":"code","820718b4":"code","b9bcb8f1":"code","2dd107a7":"code","05bb0471":"code","0bfb113b":"code","5a5a089d":"code","ed443820":"code","df8d4124":"code","4aba0b46":"code","b9c6ce3e":"code","2f0880c8":"code","078bb879":"code","4b26e0c3":"code","a0ed5587":"code","e0f4a3ae":"code","b135f59c":"code","e9290e91":"code","ec4c225b":"code","cd9ea2d3":"code","f99c5d9a":"code","4836c3e4":"code","c77e2ace":"code","af0f2ee2":"code","9411a3af":"code","b03f1a65":"code","54151cbd":"code","47f2b5ea":"code","d8a715c1":"code","c36c17c9":"code","3d570aff":"code","4aaee97d":"code","0e783698":"code","9fb97eae":"code","93e53ec1":"code","5634d2d4":"code","75c2f2b7":"code","858838c4":"code","6a108d48":"code","2ef38f0a":"code","3c9cad4a":"code","a7b7202e":"code","a0880e3f":"code","e9a25cf7":"code","26070684":"code","ce765af9":"code","c41d697a":"code","dc6d5321":"markdown","31abf8b8":"markdown","b8302b84":"markdown","691fad01":"markdown","1d8b5373":"markdown","785ff777":"markdown","47b48d8d":"markdown"},"source":{"cb54a2a6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7d2ada32":"df = pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")\ndf.head()","820718b4":"print(\"Data Shape :\", df.shape)\nprint(\"---------------------------------------------------\")\nprint(\"Data Info :\", df.info())","b9bcb8f1":"df.isnull().sum()","2dd107a7":"df_desc = df[\"description\"]","05bb0471":"df_desc","0bfb113b":"df_desc = pd.DataFrame(df_desc, columns = [\"aciklama\"])","5a5a089d":"df_desc","ed443820":"#df_metin = pd.Series(df_desc)","df8d4124":"type(df_metin)","4aba0b46":"df_metin","b9c6ce3e":"df_acik = pd.DataFrame(df_metin)","2f0880c8":"df_acik","078bb879":"df_dacik = df_acik.copy()","4b26e0c3":"df_dacik","a0ed5587":"df_dd = pd.Series(df_metin)","e0f4a3ae":"df_dd = df_dd.apply(lambda x: \" \".join(x.lower() for x in x.split()))","b135f59c":"df_dd","e9290e91":"df_dd = df_dd.str.replace(\"[^\\w\\s]\",\"\")","ec4c225b":"df_dd","cd9ea2d3":"df_dd = df_dd.str.replace(\"\\d\",\"\")","f99c5d9a":"df_dd","4836c3e4":"df_dd = pd.DataFrame(df_dd)","c77e2ace":"df_dd","af0f2ee2":"!pip install nltk","9411a3af":"import nltk","b03f1a65":"from nltk.corpus import stopwords","54151cbd":"sw = stopwords.words(\"english\")","47f2b5ea":"sw","d8a715c1":"df_dd = df_dd[\"description\"].apply(lambda x: \" \".join(x for x in x.split() if x not in sw))","c36c17c9":"type(df_dd)","3d570aff":"df_dd = pd.DataFrame(df_dd, columns = [\"description\"])","4aaee97d":"pd.Series(\" \".join(df_dd[\"description\"]).split()).value_counts()","0e783698":"sil = pd.Series(\" \".join(df_dd[\"description\"]).split()).value_counts()[-11000:]","9fb97eae":"sil","93e53ec1":"df_dd = df_dd[\"description\"].apply(lambda x: \" \".join(i for i in x.split() if i not in sil))","5634d2d4":"df_dd","75c2f2b7":"nltk.download(\"punkt\")","858838c4":"!pip install textblob","6a108d48":"import textblob","2ef38f0a":"from textblob import TextBlob","3c9cad4a":"df_dd = pd.DataFrame(df_dd, columns = [\"description\"])","a7b7202e":"TextBlob(df_dd[\"description\"][0]).words","a0880e3f":"df_dd[\"description\"].apply(lambda x: TextBlob(x).words)","e9a25cf7":"from textblob import Word\nnltk.download(\"wordnet\")","26070684":"df_dd[\"description\"].apply(lambda x: \" \".join([Word(word).lemmatize() for word in x.split()]))","ce765af9":"df_dd.head(5)","c41d697a":"df_metin.head(5)","dc6d5321":"# az ge\u00e7en kelimelerin silinmesi","31abf8b8":"# lemmatization","b8302b84":"# stopwords","691fad01":"# Noktalama i\u015faretlerinin silinmesi","1d8b5373":"# Say\u0131lar\u0131n silinmesi","785ff777":"# Description b\u00fcy\u00fck k\u00fcc\u00fck harf","47b48d8d":"# tokenization"}}