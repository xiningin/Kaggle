{"cell_type":{"af47358d":"code","8c593355":"code","566d1314":"code","3424162e":"code","069e0164":"code","203d359e":"code","ad16a4ca":"code","eae31943":"code","93cc02ec":"code","39e1de36":"code","f2b3af0e":"code","07c5ae05":"code","e2258c3d":"code","0c971f53":"code","b6c20c0f":"code","2c5ac66a":"markdown","4b5cb014":"markdown","b4e8e552":"markdown","13eafd05":"markdown","663f5612":"markdown","78a8422e":"markdown","d7c15aaa":"markdown","9401e127":"markdown","af3f2180":"markdown"},"source":{"af47358d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Dropout, Dense, Flatten\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\n\nprint('Setup completed.')","8c593355":"train_df_path = '..\/input\/train.csv'\ntest_df_path = '..\/input\/test.csv'\ntrain_df = pd.read_csv(train_df_path, index_col='label')\ntest_df  = pd.read_csv(test_df_path)\ntrain_df = train_df \/ 255\ntest_X  = test_df \/ 255\nprint('Import completed.')","566d1314":"print(train_df.shape)\ntrain_df.describe()","3424162e":"fig, ax = plt.subplots(figsize=(10,10))\nsns.barplot(x=np.arange(10), y=train_df.index.value_counts(sort=False), palette='Blues')\nax.set(xlabel='Digit', ylabel='Counts')","069e0164":"plt.figure(figsize=(12,6))\nfor i in range(10):  \n    plt.subplot(2, 5, i+1)\n    plt.imshow(train_df.iloc[i].values.reshape(28,28))\n    plt.title(train_df.index[i])\nplt.show()","203d359e":"train_df.isnull().sum(axis = 0).sum()","ad16a4ca":"train_X, valid_X, train_y, valid_y = train_test_split(train_df.values, train_df.index, test_size=0.75)","eae31943":"train_X = train_X.reshape(train_X.shape[0], 28, 28, 1)\nvalid_X = valid_X.reshape(valid_X.shape[0], 28, 28, 1)\ntest_X = test_X.values.reshape(test_X.shape[0], 28, 28, 1)","93cc02ec":"model = Sequential()\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(28,28,1)))\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10, activation='softmax'))","39e1de36":"model.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","f2b3af0e":"model.fit(train_X, train_y,\n          batch_size=128,\n          epochs=10,\n          verbose=1,\n          validation_data=(valid_X, valid_y))","07c5ae05":"predictions_valid = model.predict(valid_X)","e2258c3d":"num_rows = 5\nnum_cols = 5\nnum_images = num_rows*num_cols\nplt.figure(figsize=(4*num_rows,4*num_cols))\nfor i in range(num_images):  \n    plt.subplot(num_rows, num_cols, i+1)\n    plt.imshow(valid_X[i][:,:,0])\n    plt.title('Predicted: '+str(predictions_valid[i].argmax()))\nplt.show()","0c971f53":"fig, ax = plt.subplots(figsize=(10,10))\nsns.heatmap(confusion_matrix(predictions_valid.argmax(axis=1), valid_y), square=True, annot=True, cmap='Blues')","b6c20c0f":"predictions = model.predict(test_X)\npredictions = predictions.argmax(axis=1)\nsubmission=pd.DataFrame({\"ImageId\": list(range(1,len(predictions)+1)),\n                         \"Label\": predictions})\nsubmission.to_csv(\"submission.csv\", index=False, header=True)","2c5ac66a":"# Submission","4b5cb014":"# Initialization","b4e8e552":"## Import data","13eafd05":"# Exploration","663f5612":"# Modeling","78a8422e":"Are there any null values in the data set?","d7c15aaa":"# Predictions","9401e127":"## Load libraries","af3f2180":"!['MNIST Digits Dataset'](https:\/\/miro.medium.com\/fit\/c\/1838\/551\/1*Riqqoa7vKHXnFHvaGfDFjA.png)"}}