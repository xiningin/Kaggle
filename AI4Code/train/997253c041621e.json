{"cell_type":{"a54f7f17":"code","93338eb5":"code","7ff4ae70":"code","b80f643a":"code","bd08b127":"markdown","321ce0b2":"markdown","6b645132":"markdown","418658bc":"markdown","aa7d4719":"markdown"},"source":{"a54f7f17":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.set(rc={'figure.figsize': [20, 5]}, font_scale=.90)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","93338eb5":"!pip install data-purifier==0.3.0","7ff4ae70":"import datapurifier as dp\nfrom datapurifier import Mleda, MlReport\n\ndf = pd.read_csv(\"..\/input\/fitbit-fitness-summary\/weekDaily_summary.csv\")\ndf1 = Mleda(df)\ndf1","b80f643a":"df = pd.read_csv(\"..\/input\/fitbit-fitness-summary\/weekDaily_summary.csv\")\nreport = MlReport(df)","bd08b127":"#Automated EDA for Machine Learning\n\n\"It gives shape, number of categorical and numerical features, description of the dataset, and also the information about the number of null values and their respective percentage.\"\n\n\"For understanding the distribution of datasets and getting useful insights, there are many interactive plots generated where the user can select his desired column and the system will automatically plot it. Plot includes:\"\n\nCount plot\n\nCorrelation plot\n\nJoint plot\n\nPair plot\n\nPie plot\n\nCode Implementation\n\nhttps:\/\/github.com\/Elysian01\/Data-Purifier","321ce0b2":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #001f3f;\"><b style=\"color:orange;\">Data-Purifier by Abhishek Gupta (Elysian01)<\/b><\/h1><\/center>\n\n\n\"A Python library for Automated Exploratory Data Analysis, Automated Data Cleaning, and Automated Data Preprocessing For Machine Learning and Natural Language Processing Applications in Python.\"\n\nAutomated EDA for NLP\n\nAutomated Data Cleaning for NLP\n\nAutomated EDA for Machine Learning\n\nAutomated Report Generation for Machine Learning\n\nhttps:\/\/github.com\/Elysian01\/Data-Purifier","6b645132":"![](https:\/\/opengraph.githubassets.com\/92e2b2d7d0406f1690ead909e7082b7b4caff448dc3eaa57f26f1dee6d84cf90\/Elysian01\/Data-Purifier)github.com","418658bc":"#Acknowledgment\n\nhttps:\/\/github.com\/Elysian01\/Data-Purifier\n\nOfficial Documentation: https:\/\/cutt.ly\/CbFT5Dw\n\nPython Package: https:\/\/pypi.org\/project\/data-purifier\/","aa7d4719":"#Automated Report Generation for Machine Learning\n\n\"Report contains sample of data, shape, number of numerical and categorical features, data uniqueness information, description of data, and null information.\"\n\nhttps:\/\/github.com\/Elysian01\/Data-Purifier"}}