{"cell_type":{"b2208359":"code","3d0fec92":"code","f0ada337":"code","2423cbe4":"code","6e190c36":"code","ddcb731e":"code","77c5b736":"code","14780a6d":"code","f920b278":"code","e5b133b0":"code","c7581424":"code","8fe298e4":"code","7890500b":"code","9cfb5ba2":"code","06c60c0a":"code","c005a334":"code","3e201746":"code","743dec8a":"code","fe5316f0":"code","323d320c":"code","87582144":"code","44cc6a57":"code","ca673260":"code","927a5f21":"code","a206c95e":"code","dfb8c277":"code","d38523dc":"code","438081b3":"code","7cb415e5":"code","f7afd790":"code","06c9493e":"code","7301f6a1":"code","7cb02ef3":"code","89accbd6":"code","1fc5d740":"code","3e151f67":"code","0e9ec0a2":"code","da80422b":"code","af19c148":"code","84496c69":"code","399cced7":"code","b8438536":"code","559b6c1f":"code","15fee2ce":"markdown","6144d744":"markdown","57ebf484":"markdown","91a2254a":"markdown","fc112d28":"markdown","54549185":"markdown","c53a8e57":"markdown","588c39aa":"markdown","58817004":"markdown","a732b209":"markdown","8d6eb27f":"markdown","5852cc40":"markdown"},"source":{"b2208359":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3d0fec92":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f0ada337":"input_data_dir = \"..\/input\/bangalore-accident-data\"\ninput_data_file = \"bangalore-cas-alerts.csv\"\ninput_data_path = os.path.join(input_data_dir, input_data_file)\ndf = pd.read_csv(input_data_path)","2423cbe4":"df.head()","6e190c36":"df.shape","ddcb731e":"df.dropna(inplace=True) \n# Dropping the missing values","77c5b736":"df.isnull().sum()\n# Checking for null values","14780a6d":"df =df.rename(columns = {'deviceCode_deviceCode':'DeviceCode',\n        'deviceCode_location_latitude':'Latitude',\n        'deviceCode_location_longitude' : 'Longitude',\n        'deviceCode_location_wardName':'WardName',\n        'deviceCode_pyld_alarmType':'AlarmType',\n        'deviceCode_pyld_speed':'Speed',\n        'deviceCode_time_recordedTime_$date':'RecordedDateTime'})","f920b278":"df = df[~df.duplicated()]","e5b133b0":"df.shape","c7581424":"for i in df.columns:\n    print(i,df[i].nunique())\n    \n# getting the unique values in the data","8fe298e4":"plt.figure(figsize=[15,6])\ndf.WardName.value_counts().plot(kind='bar')\nplt.title('No. of Alarms in each ward')\nplt.show()","7890500b":"# We have 2 wards names are other and Other. combining all as one\ndf.WardName = df.WardName.replace({'other':'Other'})","9cfb5ba2":"df.WardName.nunique()","06c60c0a":"Xtrain = df[['Latitude','Longitude']][df.WardName != 'Other']\nytrain = df.WardName[df.WardName != 'Other']","c005a334":"Xtest = df[['Latitude','Longitude']][df.WardName == 'Other']\nytest = df.WardName[df.WardName == 'Other']","3e201746":"Xtrain.shape, ytrain.shape, Xtest.shape, ytest.shape","743dec8a":"from sklearn.neighbors import KNeighborsClassifier","fe5316f0":"knn = KNeighborsClassifier(n_neighbors=1,weights='distance')\nknn.fit(Xtrain,ytrain)\nypred = knn.predict(Xtest)","323d320c":"df.WardName.value_counts().head()","87582144":"df.WardName[df.WardName =='Other'] = ypred\n# the results of knn which is in ypred is assigned to ward names categorized as Other","44cc6a57":"df.WardName.value_counts().head()","ca673260":"plt.figure(figsize=[15,6])\nplt.subplot(1,2,1)\ndf.WardName.value_counts().head(10).plot(kind='bar')\nplt.title('Most Dangerous Wards')\n\nplt.subplot(1,2,2)\ndf.WardName.value_counts().tail(10).plot(kind='bar')\nplt.title('Most Safe Wards')\nplt.show()","927a5f21":"df.AlarmType = df.AlarmType.replace({'UFCW':'FCW','LDWL':'LDW','LDWR':'LDW'})","a206c95e":"df.AlarmType.value_counts()","dfb8c277":"plt.figure(figsize=[15,6])\ndf.AlarmType.value_counts().plot(kind='bar')\nplt.show()","d38523dc":"data = df.WardName.value_counts().head(10)\nward = data.index\nward_top = df[df.WardName.isin(ward)]","438081b3":"plt.figure(figsize=[15,6])\nsns.countplot(x=ward_top.WardName,hue=ward_top.AlarmType)\nplt.title('Distribution of Alarm Type in most dangerous wards')\nplt.show()","7cb415e5":"plt.figure(figsize=[15,6])\nsns.kdeplot(df.Speed,shade=True,color='y')\nplt.axvline(df.Speed.mean(),linestyle='dashed',linewidth='2',color='k',label=df.Speed.mean())\nplt.legend(loc='best')\nplt.title('Average Speed of the buses from 6AM to 6PM')\nplt.show()","f7afd790":"fig, axes = plt.subplots(3, 2, figsize=(20,10))\n\n\nsns.kdeplot(df.Speed[df.AlarmType=='PCW'],shade=True,ax=axes[0][0])\naxes[0][0].axvline(df.Speed[df.AlarmType=='PCW'].mean(),linestyle='dashed',color='k',label='PCW '+str(df.Speed[df.AlarmType=='PCW'].mean()))\naxes[0][0].legend(loc='best')\n\n\n\nsns.kdeplot(df.Speed[df.AlarmType=='FCW'],color='g',shade=True,ax=axes[0][1])\naxes[0][1].axvline(df.Speed[df.AlarmType=='FCW'].mean(),linestyle='dashed',color='k',label='FCW '+str(df.Speed[df.AlarmType=='FCW'].mean()))\naxes[0][1].legend(loc='best')\n\n\n\nsns.kdeplot(df.Speed[df.AlarmType=='Overspeed'],color='y',shade=True,ax=axes[1][0])\naxes[1][0].axvline(df.Speed[df.AlarmType=='Overspeed'].mean(),linestyle='dashed',color='k',label='Overspeed '+str(df.Speed[df.AlarmType=='Overspeed'].mean()))\naxes[1][0].legend(loc='best')\n\n\nsns.kdeplot(df.Speed[df.AlarmType=='HMW'],color='cyan',shade=True,ax=axes[1][1])\naxes[1][1].axvline(df.Speed[df.AlarmType=='HMW'].mean(),linestyle='dashed',color='k',label='HMW '+str(df.Speed[df.AlarmType=='HMW'].mean()))\naxes[1][1].legend(loc='best')\n\n\nsns.kdeplot(df.Speed[df.AlarmType=='LDW'],color='m',shade=True,ax=axes[2][0])\naxes[2][0].axvline(df.Speed[df.AlarmType=='LDW'].mean(),linestyle='dashed',color='k',label='LDW '+str(df.Speed[df.AlarmType=='LDW'].mean()))\naxes[2][0].legend(loc='best')\nplt.show()","06c9493e":"df.RecordedDateTime = df.RecordedDateTime.map(lambda x : pd.Timestamp(x, tz='Asia\/Kolkata'))","7301f6a1":"df['Month'] = df.RecordedDateTime.dt.month_name()\ndf['Year'] = df.RecordedDateTime.dt.year\ndf['Date'] = df.RecordedDateTime.dt.day\ndf['Weekday'] = df.RecordedDateTime.dt.day_name()","7cb02ef3":"df.Month.unique()","89accbd6":"df.Year.unique()","1fc5d740":"df.Date.unique()","3e151f67":"df['Hour'] = df.RecordedDateTime.dt.hour","0e9ec0a2":"df.Hour.unique()","da80422b":"plt.figure(figsize=[15,6])\ndf.Month.value_counts().plot(kind='bar')\nplt.show()","af19c148":"plt.figure(figsize=[15,6])\ndf.Weekday.value_counts().plot(kind='bar')\nplt.show()","84496c69":"hr = df.Hour.value_counts().sort_index()\nhr.index","399cced7":"plt.figure(figsize=[15,6])\nplt.bar(hr.index, hr.values)\nplt.xticks(np.arange(1,25))\nplt.title('No. of Alert on hourly basis')\nplt.show()","b8438536":"df.groupby('WardName')['Hour'].value_counts().sort_values(ascending=False).head(50)","559b6c1f":"df.groupby('WardName')['AlarmType'].value_counts().sort_values(ascending=False).head(50)","15fee2ce":"We need to find the proper wardname for ward names mentioned as Other. Since, the ward name is determined based on Lat and Long, we'll use lat and lon to find the ward names of 'Other' category.\n\nWe are keeping non-Other Ward name as train dataset and Other category Ward name as test.. Using KNN, we are finding the Ward names mentioned as Other.","6144d744":"This graph tells us that more than moving, maximum alert has raised only during slow motion of cars which is during traffic hours. This indicates that not many accidents in bangalore are caused by overspeeding. \n\nPCW alerts is high on Kadugodi, Hagadur which indicates that pedestrians have to be careful when crossing roads \n\nOverspeeding alert are high in Hudi area.","57ebf484":"FCW is the most Alert Type that has been received. LDW is the least which means that turn signals are properly indicated. ","91a2254a":"The most dangerous wards belongs to places (Whitefield, Marathahalli) where IT companies are more. It's obversed that increase in IT parks leads to traffic in bangalore. \n\nFrom the Alarm types, we can combines few alarm types into one. For eg:\n    \n1. FCW and UFCW can be combined into FCW as both belong to collision (FCW-back and UFCW-forward)\n2. LDWL and LDWR can be combined as LDW","fc112d28":"Graph was each type of alert has been drawn and it tells us overspeeding is not a cause for many accidents. On an average the speed of buses comes to around 22km\/hr","54549185":"From the Time stamp, we can see that the date and time is in UTC zone. As the time stamp ends with Z. Lets convert it to IST","c53a8e57":"#### Prescriptions on improving the traffic conditions in Bangalore\n\n1. Minimum 3sec gap between vehicles to avoid collision. Strict rules to fine drivers who violate this rule would result in reducing FCW alerts. \n2. From the hours provided, we can have shift timing work in office so that vehicles are equally distributed on all hours  on roads which will lead to less traffic or we can provide work from home options. \n3. Following the traffic rules such a speed control and traffic signals so that pedestrians can be safe. Fine drivers who violate traffic rules and max speed limit to avoid PCW. Provide foot over bridge for road crossing. ","588c39aa":"The numbers of neighbours is given as 1 because\n\nFrom the data we can see that the ward names are based on latitude and longitude and the range of latitude and longitude is very less and a large number of classes to cluster, a small k value helps us to create boundaries that are more sharper. ","58817004":"55341 rows were dupicated.","a732b209":"Noticable numbers : We have 4 types of Device Code, 50 ward Names, 7 kinds of Alarm Type","8d6eb27f":"Observations\n\n1. Data is provided only for the month of Feb,Mar,Apr,Jun,Jul\n2. Data is only for the year 2018\n3. Data is provided only between the time of 6AM to 6PM.","5852cc40":"#### Prescriptions to passengers based on observations\n\n1. Passengers should try to avoid using the most dangerous wards during the peak times(7-8 and 15-16) on weekdays.\n2. All the vehicles should have a proper gap between them especially duting traffic or slow movements of vehicles so that we can avoid the collision of vehicles for which the maximum alerts are raised.\n3. Pedestrians should be careful while crossing roads mainly in the areas of Kadugodi, Hagadur. \n4. Drivers should have a control on speed in the Hudi area as many alerts has been raised for Overspeeding. "}}