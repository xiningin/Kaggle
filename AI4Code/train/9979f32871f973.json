{"cell_type":{"303933cb":"code","b693fc0a":"code","60f0af5b":"code","88dc5353":"code","ff0240e9":"code","ad1afd02":"code","916aa91d":"code","4881ae7d":"code","de2defbb":"code","c861e7c7":"markdown","f019daf0":"markdown","e7c2ef2d":"markdown","63c0b5f8":"markdown","4e0e814d":"markdown","ddc6e40d":"markdown","c6e0c173":"markdown","f7477eb9":"markdown","13520321":"markdown","6e9e9747":"markdown","a6a28d46":"markdown","f939ec9e":"markdown","8bdb9dbd":"markdown","76c772d1":"markdown","aa58f5b1":"markdown","f0298622":"markdown","2bd3fe03":"markdown"},"source":{"303933cb":"import numpy as np\nimport pandas as pd\nimport os\nfrom datetime import datetime\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.rcParams[\"figure.figsize\"] = [12, 5]\n\ndata = pd.read_csv('..\/input\/events-log\/events_log.csv')\n\n# Parse dates\ndata['timestamp'] = pd.to_datetime(data['timestamp'], format='%Y%m%d%H%M%S')\n\n# Print a sample\ndata.head(1000)","b693fc0a":"# get a collection of unique session_id\nunique_sessions = data.groupby([data['timestamp'].dt.date])['session_id'].unique()\n\n# build list of x and y labels\nx_unique_sessions = [k for k, v in unique_sessions.items()]\ny_unique_sessions = [len(v) for k, v in unique_sessions.items()]\n\n# represent visually\nplt.plot(x_unique_sessions, y_unique_sessions)\nplt.xlabel('\\nFigure 1: Number of unique daily sessions', fontsize=14)\nplt.show()\n","60f0af5b":"# get a collection of unique session_id linked to a click\nunique_sessions_clicked = data[data['action']=='visitPage'].groupby([data['timestamp'].dt.date])['session_id'].unique()\n\n# build list of x and y labels\nx_unique_sessions_clicked = [k for k, v in unique_sessions_clicked.items()]\ny_unique_sessions_clicked = [len(v) for k, v in unique_sessions_clicked.items()]\n\n# represent visually\nplt.plot(x_unique_sessions_clicked, y_unique_sessions_clicked, '.-')\nplt.xlabel('\\nFigure 2: Daily distribution of sessions that led to a click', fontsize=14)\nplt.show()\n","88dc5353":"average_clickthrough_rate = 0\n\n# build list of x and y labels\nx_clickthrough_rate = [i for i in x_unique_sessions]\ny_clickthrough_rate = [(y_unique_sessions_clicked[i]*100)\/y_unique_sessions[i] for i in range(len(y_unique_sessions))]\n\n# get the sum of all clickrates and average it\naverage_clickthrough_rate = sum(y_clickthrough_rate)\/len(y_unique_sessions_clicked)\n\n# represent visually\nplt.plot(x_clickthrough_rate, y_clickthrough_rate, '.-')\nplt.xlabel('\\nFigure 3: Overall daily click through rate is {:.1f}%'.format(average_clickthrough_rate), fontsize=14)\nplt.gca().set_yticklabels(['{:.1f}%'.format(x) for x in plt.gca().get_yticks()]) \nplt.show()\n    \n","ff0240e9":"# get a collection of sessions for each group\nunique_sessions_a = data[(data['action']=='visitPage') & (data['group']=='a')].groupby([data['timestamp'].dt.date])['session_id'].unique()\nunique_sessions_b = data[(data['action']=='visitPage') & (data['group']=='b')].groupby([data['timestamp'].dt.date])['session_id'].unique()\n\n# build list of x and y labels\nx_clickthrough_rate_a = [k for k, v in unique_sessions_a.items()]\ny_clickthrough_rate_a = [(len(unique_sessions_a[i])*100)\/y_unique_sessions[i] for i in range(len(unique_sessions_a))]\ny_clickthrough_rate_b = [(len(unique_sessions_b[i])*100)\/y_unique_sessions[i] for i in range(len(unique_sessions_a))]\n\n# represent visually\nplt.xlabel('\\nFigure 4: Clickthrough rate in Group A and B', fontsize=14)\nplt.plot(x_clickthrough_rate_a, y_clickthrough_rate_a, '.-', label='Group A')\nplt.plot(x_clickthrough_rate_a, y_clickthrough_rate_b, '.-', label='Group B')\nplt.ylabel('Clickthrough rate')\n\n# display percentage\nplt.gca().set_yticklabels(['{:.0f}%'.format(x) for x in plt.gca().get_yticks()]) \nplt.legend()\nplt.show()\n","ad1afd02":"# filter out NaN results and group data by days in Y-m-d format\nsummary = data[(data['action'] == 'checkin') & (~data['result_position'].isnull())]\ngroups = summary.groupby(summary['timestamp'].dt.date)\ndays = [name.strftime('%Y-%m-%d') for name, group in groups]\n\n# Get top 5 popular results\nfor day in days:\n    group = summary[summary['timestamp'].dt.date == datetime.strptime(day, '%Y-%m-%d').date()]\\\n    .groupby(summary['timestamp'].dt.date)['result_position'].value_counts()[:5]\n    plt.title('Top 5 search positions on {}'.format(day))\n    \n    # plot x, y dynamically\n    for x, y in group.items():\n        plt.bar(x[1], y)\n    \n    plt.xlabel('Search positions')\n    plt.ylabel('Count of search position occurences')\n    plt.legend()\n    plt.show()","916aa91d":"# get a collection of sessions for each group\nunique_sessions_a = data[(data['n_results'].isnull()) & (data['group']=='a')].groupby([data['timestamp'].dt.date])['session_id'].unique()\nunique_sessions_b = data[(data['n_results'].isnull()) & (data['group']=='b')].groupby([data['timestamp'].dt.date])['session_id'].unique()\n\n# build list of x and y labels\nx_zero_rate_a = [k for k, v in unique_sessions_a.items()]\ny_zero_rate_a = [(len(unique_sessions_a[i])*100)\/y_unique_sessions[i] for i in range(len(unique_sessions_a))]\ny_zero_rate_b = [(len(unique_sessions_b[i])*100)\/y_unique_sessions[i] for i in range(len(unique_sessions_a))]\n\n# represent visually\nplt.xlabel('\\nFigure 5: Zero results rate in Group A and B', fontsize=14)\nplt.plot(x_zero_rate_a, y_zero_rate_a, '.-', label='Group A')\nplt.plot(x_zero_rate_a, y_zero_rate_b, '.-', label='Group B')\nplt.ylabel('Zero results rate in %')\nplt.legend()\nplt.show()\n\n","4881ae7d":"# Get list of sessions\nsession_ids = data['session_id'].unique()\nsessions_df = []\n\n# Sort dataset by timestamp\ndata = data.sort_values(by='timestamp', ascending=True)\n\n# build new dataset from a 500-long sample, indicate count of each 'action'\nfor session_id in session_ids[:500]:\n    sample = data[data['session_id']== session_id].reset_index()\n    group = sample.groupby('action')\n    last = len(sample)-1\n    for name, actions in group:\n        duration = (sample['timestamp'][last] - sample['timestamp'][0]).seconds\n\n        # duration in minutes\n        sample['duration'] = duration \/ 60\n        sample[name] = len(actions)\n        \n        sessions_df.append(sample.iloc[0])\n\n\nsummary = pd.DataFrame(sessions_df, columns = ['timestamp', 'session_id', 'group', 'duration', 'checkin', 'searchResultPage', 'visitPage'])\nsummary = summary.fillna(0)\n\n# sort by duration\nsummary = summary.sort_values(by='duration', ascending=False).reset_index(drop=True)\nsummary.head(10)","de2defbb":"summary = summary\nlabels = ['{:.0f}'.format(x) for x in summary['duration'][:30]]\n\n# indicate label locations\nx = np.arange(len(labels))  \n\n# set width of the bars\nwidth = 0.35  \n\n# plot only top 10 results\nfig, ax = plt.subplots()\nax.bar(x, summary['searchResultPage'][:30], width, label='searchResultPage')\nax.bar(x, summary['checkin'][:30], width, label='Checkin')\nax.bar(x, summary['visitPage'][:30], width, label='VisitPage')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Action count')\nax.set_xlabel('Duration of sessions in minutes')\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.legend()\nplt.xlabel('\\nFigure 6: Frequent actions during lenghty sessions', fontsize=14)\n\n# represent visually\nplt.show()","c861e7c7":"## Context\nDiscovery (and other teams within the Foundation) rely on event logging (EL) to track a variety of performance and usage metrics to help us make decisions. Specifically, Discovery is interested in:\n- clickthrough rate: the proportion of search sessions where the user clicked on one of the results displayed\n- zero results rate: the proportion of searches that yielded 0 results\nand other metrics outside the scope of this task. EL uses JavaScript to asynchronously send messages (events) to our servers when the user has performed specific actions. In this task, you will analyze a subset of our event logs.","f019daf0":"## Heads up\n*This data analysis exercice is inspired by a take-home task for candidates applying to be a Data Analyst in the Discovery department at Wikimedia Foundation. It was initially published in 2016 and is available here at https:\/\/github.com\/wikimedia-research\/Discovery-Hiring-Analyst-2016*","e7c2ef2d":"## Exploring the data","63c0b5f8":"### What percentage of search sessions yields clicks on a daily basis?\n\nBased on the previous steps, computing the clickthrough is now possible. This number is the ratio between the daily number of sessions with clicks to the daily number ","4e0e814d":"## Task\n**You must create a reproducible report answering the following questions:**\n1. What is our daily overall clickthrough rate? How does it vary between the groups?\n2. Which results do people tend to try first? How does it change day-to-day?\n3. What is our daily overall zero results rate? How does it vary between the groups?\n4. Let session length be approximately the time between the first event and the last event in a session. Choose a variable from the dataset and describe its relationship to session length. Visualize the relationship","ddc6e40d":"### How many search sessions per day?\n\nGrouping the search sessions per day can be helpful to count and picture the daily number of sessions. ","c6e0c173":"## Taks 3: Daily overall zero results rate? How does it vary between the groups?","f7477eb9":"## Task 1: overall daily clickthrough rate and how it varies by groups\n\nAs described earlier, the clickthrough rate is the proportion of search sessions where the user clicked on one of the results displayed. Some prelimnary questions need to be addressed in order to find out the clickthrough rate.","13520321":"The Zero results rate is higher in group A. However, this rate progresses differently from the rate in group B. For instance, while the zero results rate increased in Group B between March 03 and 05, Group B experienced a decrease of this rate during the same period.","6e9e9747":"## Task 2: Which results do people tend to try first? How does it change day-to-day?\nThe most popular search position is 1, followed by, 2, and so on.\nThis does not vary across days. Instead, users appear to stick to that pattern.\n","a6a28d46":"## Task 4: Correlation between session length and user action\nLet session length be approximately the time between the first event and the last event in a session. let's compare the relationship between the `session length` and the type of `action` that visitors tend to take.","f939ec9e":"### Sessions duration and frequency of actions \nThe dataset contains mainly three types of actions: `checkin`, `searchResultPage`, and `visitPage`. Before visualizing the relationship between the duration of sessions and the type of action taken by users, the dataset needs to be rearranged, highlighting how many times each action was triggered during each session. The `duration` will come in handy later to infer conclusions.","8bdb9dbd":"## Data\n\nThe dataset comes from a [tracking schema](https:\/\/meta.wikimedia.org\/wiki\/Schema:TestSearchSatisfaction2) that we use for assessing user satisfaction. Desktop users are randomly sampled to be anonymously tracked by this schema which uses a \"I'm alive\" pinging system that we can use to estimate how long our users stay on the pages they visit. The dataset contains just a little more than a week of EL data.\n\n| Column          | Value   | Description                                                                       |\n|:----------------|:--------|:----------------------------------------------------------------------------------|\n| uuid            | string  | Universally unique identifier (UUID) for backend event handling.                  |\n| timestamp       | integer | The date and time (UTC) of the event, formatted as YYYYMMDDhhmmss.                |\n| session_id      | string  | A unique ID identifying individual sessions.                                      |\n| group           | string  | A label (\"a\" or \"b\").                                     |\n| action          | string  | Identifies in which the event was created. See below.                             |\n| checkin         | integer | How many seconds the page has been open for.                                      |\n| page_id         | string  | A unique identifier for correlating page visits and check-ins.                    |\n| n_results       | integer | Number of hits returned to the user. Only shown for searchResultPage events.      |\n| result_position | integer | The position of the visited page's link on the search engine results page (SERP). |\n\nThe following are possible values for an event's action field:\n\n- **searchResultPage**: when a new search is performed and the user is shown a SERP.\n- **visitPage**: when the user clicks a link in the results.\n- **checkin**: when the user has remained on the page for a pre-specified amount of time.\n\n### Example Session\n\n|uuid                             |      timestamp|session_id       |group |action           | checkin|page_id          | n_results| result_position|\n|:--------------------------------|:--------------|:----------------|:-----|:----------------|-------:|:----------------|---------:|---------------:|\n|4f699f344515554a9371fe4ecb5b9ebc | 20160305195246|001e61b5477f5efc |b     |searchResultPage |      NA|1b341d0ab80eb77e |         7|              NA|\n|759d1dc9966353c2a36846a61125f286 | 20160305195302|001e61b5477f5efc |b     |visitPage        |      NA|5a6a1f75124cbf03 |        NA|               1|\n|77efd5a00a5053c4a713fbe5a48dbac4 | 20160305195312|001e61b5477f5efc |b     |checkin          |      10|5a6a1f75124cbf03 |        NA|               1|\n|42420284ad895ec4bcb1f000b949dd5e | 20160305195322|001e61b5477f5efc |b     |checkin          |      20|5a6a1f75124cbf03 |        NA|               1|\n|8ffd82c27a355a56882b5860993bd308 | 20160305195332|001e61b5477f5efc |b     |checkin          |      30|5a6a1f75124cbf03 |        NA|               1|\n|2988d11968b25b29add3a851bec2fe02 | 20160305195342|001e61b5477f5efc |b     |checkin          |      40|5a6a1f75124cbf03 |        NA|               1|\n\n\nThis user's search query returned 7 results, they clicked on the first result, and stayed on the page between 40 and 50 seconds. (The next check-in would have happened at 50s.)","76c772d1":"### Clickthrough rate distribution across groups?\nAnswering this question will require to examine each group's number of sessions where a user click and compare it against the total number of sessions.","aa58f5b1":"The table hints at a corelation between session `duration` and `action`, especially the `checkin`. Let's represent that relation visually.","f0298622":"### How many search sessions followed by a click?\nA filtering operation can surface the sessions that led to clicks.","2bd3fe03":"### Observations\n- **Search queries are scarce when duration is high**. Generally, the lengthiest sessions are those where users do not perform any search queries.\n- **Very few links are clicked during lenthy sessions**. While some lenghty sessions include `visitPage` actions, it is worth noting that they are generally minimal. This suggests that visitors who spend a long time on the platform tend to come for a single page and remain on it most of the time.  "}}