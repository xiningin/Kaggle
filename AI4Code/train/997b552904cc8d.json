{"cell_type":{"e727a826":"code","0cdd52d0":"code","333a1aa7":"code","4d8a05b9":"code","4f18e5dc":"code","7a19a0cd":"code","d36d3ce9":"code","14c00182":"code","c0c811cc":"code","16d9ec1d":"code","a23b2642":"code","f3283e01":"code","133e63d0":"code","eab461da":"code","0f5146dc":"code","f35f54e1":"code","07faeb6d":"code","e35ef82e":"code","749b7ba7":"code","b612da54":"code","41ab65ff":"code","d716c28e":"code","fddac3e8":"code","5f252670":"code","d2c5553b":"code","c59b7997":"code","c7c1e87d":"code","ed56f38d":"code","897465a3":"code","11f4ded8":"code","0b89421a":"code","1f87a397":"code","962716a3":"code","974d12b8":"code","22a8f679":"code","f29d7911":"code","d125e557":"code","cee7b739":"code","4dff5f6b":"code","18545e03":"code","87ac863c":"code","f8568049":"code","02ac7c43":"code","77164fea":"code","131cf833":"code","149c0731":"code","ddd22d79":"code","f3be51da":"markdown","4e973ecf":"markdown","f565b116":"markdown","1149e322":"markdown","3afac555":"markdown","40e7342d":"markdown","82c94aba":"markdown","c587db3c":"markdown","ef1bd5ac":"markdown"},"source":{"e727a826":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","0cdd52d0":"#getting the data\ncredit = pd.read_csv('\/kaggle\/input\/german-credit\/german_credit_data.csv')","333a1aa7":"#reading te first five rows\ncredit.head(5)","4d8a05b9":"#getting information about all the columns\ncredit.info()","4f18e5dc":"#Checking for duplicates\ncredit.duplicated().sum()","7a19a0cd":"#checking for null values\ncredit.isna().sum()","d36d3ce9":"#Now we'll go through each of the columns one-by-one and understand their structure\n#Unnamed : 0\ncredit['Unnamed: 0'].value_counts() #getting the value counts","14c00182":"#Unnamed: 0 is an index column so we'll drop it from the copy of our original data\ncredit_copy = credit\ncredit_copy.drop(columns = 'Unnamed: 0', inplace =True)\ncredit_copy.info()","c0c811cc":"#We will analyse Age column now.\n#For each of the numerical \/ quantitativ coluns we will try to get their business moments value\ncredit_copy.Age.describe()\nprint('\\n')\nprint(\"credit_copy['Age']_mean\", credit_copy.Age.mean())\nprint(\"credit_copy['Age']_median\", credit_copy.Age.median())\nprint(\"credit_copy['Age']_var\", credit_copy.Age.var())\nprint(\"credit_copy['Age']_skew\", credit_copy.Age.skew())\nprint(\"credit_copy['Age']_kurt\", credit_copy.Age.kurt())\nprint(\"credit_copy['Age']_mode\", credit_copy.Age.mode())\nprint('\\n')","16d9ec1d":"#lets plot histogram, boxplot and Q-Q plot to understand more about this column\nimport seaborn as sn\nsn.histplot(credit_copy.Age)","a23b2642":"#boxplot\nsn.boxplot(credit_copy.Age)","f3283e01":"#Q-Q plot\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport pylab\nstats.probplot(credit_copy.Age, dist = \"norm\", plot = pylab)\nplt.show()","133e63d0":"#We will analyse sex column now.\ncredit_copy.Sex.value_counts()","eab461da":"#plotting bar graph\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy.Sex, palette=\"Set3\")","0f5146dc":"#We will analyse job column now.\ncredit_copy.Job.value_counts()","f35f54e1":"#plotting bar graph\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy.Job, palette=\"Set3\")","07faeb6d":"#We will analyse Housing column now.\ncredit_copy.Housing.value_counts()","e35ef82e":"#plotting bar graph\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy.Housing, palette=\"Set3\")","749b7ba7":"#We will analyse Saving accounts column now.\ncredit_copy['Saving accounts'].value_counts()","b612da54":"#checking for missing values\ncredit_copy['Saving accounts'].isna().sum()","41ab65ff":"#plotting bar graph\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy['Saving accounts'], palette=\"Set3\")","d716c28e":"#We wll do mode imputer since this is a dicrete data\nfrom sklearn.impute import SimpleImputer","fddac3e8":"#mode imputer\nmode_imputer = SimpleImputer(missing_values = np.nan, strategy = 'most_frequent')","5f252670":"credit_copy['Saving accounts'] = mode_imputer.fit_transform(credit_copy[['Saving accounts']])","d2c5553b":"credit_copy['Saving accounts'].value_counts()","c59b7997":"#We will analyse Checking account column now.\ncredit_copy['Checking account'].value_counts()","c7c1e87d":"#checking for missing values\ncredit_copy['Checking account'].isna().sum()","ed56f38d":"#plotting bar graph\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy['Checking account'], palette=\"Set3\")","897465a3":"credit_copy['Checking account'] = mode_imputer.fit_transform(credit_copy[['Checking account']])","11f4ded8":"#We will analyse Checking account column now.\ncredit_copy['Checking account'].value_counts()","0b89421a":"#checking for missing values\ncredit_copy['Checking account'].isna().sum()","1f87a397":"#We will analyse Credit amount column now.\n#For each of the numerical \/ quantitativ coluns we will try to get their business moments value\ncredit_copy.Age.describe()\nprint('\\n')\nprint(\"credit_copy['Credit amount']_mean\", credit_copy['Credit amount'].mean())\nprint(\"credit_copy['Credit amount']_median\", credit_copy['Credit amount'].median())\nprint(\"credit_copy['Credit amount']_var\", credit_copy['Credit amount'].var())\nprint(\"credit_copy['Credit amount']_skew\", credit_copy['Credit amount'].skew())\nprint(\"credit_copy['Credit amount']_kurt\", credit_copy['Credit amount'].kurt())\nprint(\"credit_copy['Credit amount']_mode\", credit_copy['Credit amount'].mode())\nprint('\\n')","962716a3":"#lets plot histogram, boxplot and Q-Q plot to understand more about this column\nimport seaborn as sn\nsn.histplot(credit_copy['Credit amount'])","974d12b8":"#boxplot\nsn.boxplot(credit_copy['Credit amount'])","22a8f679":"#We will analyse Age column now.\n#For each of the numerical \/ quantitativ coluns we will try to get their business moments value\ncredit_copy.Age.describe()\nprint('\\n')\nprint(\"credit_copy['Duration']_mean\", credit_copy.Duration.mean())\nprint(\"credit_copy['Duration']_median\", credit_copy.Duration.median())\nprint(\"credit_copy['Duration']_var\", credit_copy.Duration.var())\nprint(\"credit_copy['Duration']_skew\", credit_copy.Duration.skew())\nprint(\"credit_copy['Duration']_kurt\", credit_copy.Duration.kurt())\nprint(\"credit_copy['Duration']_mode\", credit_copy.Duration.mode())\nprint('\\n')","f29d7911":"#lets plot histogram, boxplot and Q-Q plot to understand more about this column\nimport seaborn as sn\nsn.histplot(credit_copy.Duration)","d125e557":"#boxplot\nsn.boxplot(credit_copy.Duration)","cee7b739":"#We will analyse Checking account column now.\ncredit_copy['Purpose'].value_counts()","4dff5f6b":"#checking for null values\ncredit_copy['Purpose'].isna().sum()","18545e03":"#plotting bar graph\nfig, ax = plt.subplots(figsize=(10, 10))\nsn.set_theme(style=\"darkgrid\")\nax = sn.countplot(credit_copy['Purpose'], palette=\"Set3\")\nplt.xticks(rotation=45)","87ac863c":"pip install feature_engine","f8568049":"#winsorizing \nfrom feature_engine.outliers import Winsorizer\nwinsor = Winsorizer(capping_method ='iqr', tail = 'both', fold = 1.5, variables = ['Age','Credit amount', 'Duration'])","02ac7c43":"credit_winsorized = winsor.fit_transform(credit_copy)","77164fea":"#checking for the success of winsorization\nsn.boxplot(credit_winsorized['Credit amount'])","131cf833":"#checking for the success of winsorization\nsn.boxplot(credit_winsorized['Duration'])","149c0731":"credit_winsorized.describe()","ddd22d79":"credit_winsorized.info()","f3be51da":"**We'll try to resolve the outlier problem through Wisorization method.**","4e973ecf":"***There's outliers as well towards the right tail.***","f565b116":"***There's outliers as well towards the right tail.***","1149e322":"***From histogram we can see the data to be slightly skewed towards right.***","3afac555":"***A normal probability plot, or more specifically a quantile-quantile (Q-Q) plot, shows the distribution of the data against the expected normal distribution. For normally distributed data, observations should lie approximately on a straight line. If the data is non-normal, the points form a curve that deviates markedly from a straight line. Possible outliers are points at the ends of the line, distanced from the bulk of the observations.   In our observation, as we can see that the distribution is not quite normal.***","40e7342d":"***From histogram we can see the data to be slightly skewed towards right.***","82c94aba":"***Now that we have treated the dataset for outliers and null values, we will generate dummy variables for categorical values.***","c587db3c":"***There's outliers as well towards the right tail.***","ef1bd5ac":"***From histogram we can see the data to be slightly skewed towards right.***"}}