{"cell_type":{"6c94680c":"code","6620906d":"code","2c1aad21":"code","f92d8f33":"code","3299f552":"code","caafa316":"code","a72ee34f":"code","65ac2132":"code","e0419d6c":"code","f2ce22a3":"code","ffcf0c4c":"code","afe41fa2":"code","90b67fd9":"code","cecfd123":"code","86fb895a":"code","e4387359":"code","2175cc23":"code","849bd96c":"code","4b41f171":"code","4dc8ac17":"code","709c6afa":"code","d4641fd9":"code","ba9c93f3":"code","65fa61bb":"code","9ab507b8":"code","34c9d78c":"code","82eed2b0":"code","073d09fd":"code","eb87a570":"code","eb82f2ae":"code","6c0bcd73":"code","ca857ea4":"code","ab9cddae":"code","8da5ceac":"code","c922e3c1":"code","e8a8accd":"code","83d013d4":"code","f6c5c934":"code","ff1ea8e7":"code","dee48a61":"code","d44e2942":"code","9a8ccef7":"code","2d8def29":"code","4f9abab7":"code","dfe61238":"code","1df8d27d":"code","6cdfae2d":"code","96f6a618":"code","f859e811":"code","441c4dde":"code","f2411359":"code","9f71cea2":"code","24f69cfd":"code","b713c259":"code","241ebec2":"code","1842ec29":"code","d7f3b4da":"code","3e63daa6":"code","6c605b68":"code","279ed004":"code","f7b67a66":"code","4ce2cf50":"code","0877bb44":"code","fd9727e2":"code","8e222d88":"code","ec8d37de":"markdown"},"source":{"6c94680c":"import pandas as pd\nbank=pd.read_csv(\"..\/input\/cusersmarildownloadsgermancsv\/german.csv\",sep=';' )\nbank.head()","6620906d":"bank.info()","2c1aad21":"bank.Account_Balance.value_counts()*100 \/ len(bank)","f92d8f33":"bank=bank.replace({'Account_Balance' : { 1 : 'No Account', 2 : 'None',3: 'Below 200 DM',4:'200 DM or Above'}})\nbank.Account_Balance.value_counts()*100 \/ len(bank)","3299f552":"bank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","caafa316":"bank=bank.replace({'Payment_Status_of_Previous_Credit' : {0:'Delayed',1 : 'Other Credits', 2 : 'Paid Up',\n                                                          3: 'No Problem with Current Credits',4:'Previous Credits Paid'}})\nbank.Payment_Status_of_Previous_Credit.value_counts()*100 \/ len(bank)","a72ee34f":"bank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","65ac2132":"bank=bank.replace({'Value_Savings_Stocks' : {1 : 'None', 2 : 'Below 100 DM',\n                                                          3: '[100, 500)',4:'[500, 1000)',5:'Above 1000'}})\nbank.Value_Savings_Stocks.value_counts()*100 \/ len(bank)","e0419d6c":"bank.Length_of_current_employment.value_counts()*100 \/ len(bank)","f2ce22a3":"bank=bank.replace({'Length_of_current_employment' : {1 : 'Unemployed', 2 : '<1 Year',\n                                                          3: '[1, 4)',4:'[4, 7)',5:'Above 7'}})\nbank.Length_of_current_employment.value_counts()*100 \/ len(bank)","ffcf0c4c":"bank.Instalment_per_cent.value_counts()*100 \/ len(bank)","afe41fa2":"bank=bank.replace({'Instalment_per_cent' : {1 : 'Above 35%', 2 : '(25%, 35%)',\n                                                          3: '[20%, 25%)',4:'Below 20%'}})\nbank.Instalment_per_cent.value_counts()*100 \/ len(bank)","90b67fd9":"bank.Occupation.value_counts()*100 \/ len(bank)","cecfd123":"bank=bank.replace({'Occupation' : {1 : 'Unemployed, unskilled', 2 : 'Unskilled Permanent Resident',\n                                                          3: 'Skilled',4:'Executive'}})\nbank.Occupation.value_counts()*100 \/ len(bank)","86fb895a":"bank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","e4387359":"bank=bank.replace({'Sex_Marital_Status' : {1 : 'Male, Divorced', 2 : 'Male, Single',\n                                                          3: 'Male, Married\/Widowed',4:'Female'}})\nbank.Sex_Marital_Status.value_counts()*100 \/ len(bank)","2175cc23":"bank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","849bd96c":"bank=bank.replace({'Duration_in_Current_address' : {1 : '<1 Year', 2 : '[1, 4)',\n                                                          3: '[4, 7)',4:'Above 7'}})\nbank.Duration_in_Current_address.value_counts()*100 \/ len(bank)","4b41f171":"bank.Type_of_apartment.value_counts()*100 \/ len(bank)","4dc8ac17":"bank=bank.replace({'Type_of_apartment' : {1 : 'Free', 2 : 'Rented',\n                                                          3: 'Owned'}})\nbank.Type_of_apartment.value_counts()*100 \/ len(bank)","709c6afa":"bank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","d4641fd9":"bank=bank.replace({'Most_valuable_available_asset' : {1 : 'None', 2 : 'Car',\n                                                          3: 'Life Insurance',4:'Real Estate'}})\nbank.Most_valuable_available_asset.value_counts()*100 \/ len(bank)","ba9c93f3":"bank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","65fa61bb":"bank=bank.replace({'No_of_Credits_at_this_Bank' : {1 : '1', 2 : '2 or 3',\n                                                          3: '4 or 5',4:'Above 6'}})\nbank.No_of_Credits_at_this_Bank.value_counts()*100 \/ len(bank)","9ab507b8":"bank.Guarantors.value_counts()*100 \/ len(bank)","34c9d78c":"bank=bank.replace({'Guarantors' : {1 : 'None', 2 : 'Co-applicant',\n                                                          3: 'Guarantor'}})\nbank.Guarantors.value_counts()*100 \/ len(bank)","82eed2b0":"bank.Concurrent_Credits.value_counts()*100 \/ len(bank)","073d09fd":"bank=bank.replace({'Concurrent_Credits' : {1 : 'Other Banks', 2 : 'Dept. Store',\n                                                          3: 'None'}})\nbank.Concurrent_Credits.value_counts()*100 \/ len(bank)","eb87a570":"bank.No_of_dependents.value_counts()*100 \/ len(bank)","eb82f2ae":"bank=bank.replace({'No_of_dependents' : {1 : '3 or More', 2 : 'Less than 3'}})\nbank.No_of_dependents.value_counts()*100 \/ len(bank)","6c0bcd73":"bank.Telephone.value_counts()*100 \/ len(bank)","ca857ea4":"bank=bank.replace({'Telephone' : {1 : 'No', 2 : 'Yes'}})\nbank.Telephone.value_counts()*100 \/ len(bank)","ab9cddae":"bank.Foreign_Worker.value_counts()*100 \/ len(bank)","8da5ceac":"bank=bank.replace({'Foreign_Worker' : {1 : 'No', 2 : 'Yes'}})\nbank.Foreign_Worker.value_counts()*100 \/ len(bank)","c922e3c1":"bank.Purpose.value_counts()*100 \/ len(bank)","e8a8accd":"bank=bank.replace({'Purpose' : {0:'Other',1 : 'New Car', 2 : 'Used Car',\n                               3:'Furniture',4:'Radio\/TV',5:'Appliances',\n                               6:'Repair',8:'Vacation',9:'Retraining',10:'Business'}})\nbank.Purpose.value_counts()*100 \/ len(bank)","83d013d4":"bank.info()","f6c5c934":"bank.nunique()","ff1ea8e7":"!pip install pandas-profiling","dee48a61":"from pandas_profiling import ProfileReport\nProfileReport(bank, title=\"EDA Report\")","d44e2942":"data = bank.sample(frac=0.95, random_state=42)\ndata_unseen = bank.drop(data.index)\ndata.reset_index(inplace=True, drop=True)\ndata_unseen.reset_index(inplace=True, drop=True)\nprint('Data for Modeling: ' + str(data.shape))","9a8ccef7":"print('Unseen Data For Predictions: ' + str(data_unseen.shape))","2d8def29":"!pip install pycaret","4f9abab7":"from pycaret.classification import *","dfe61238":"data.head()","1df8d27d":"def extract_cat_num(data):\n    cat_col=[col for col in data.columns if data[col].dtype=='object']\n    num_col=[col for col in data.columns if data[col].dtype!='object']\n    return cat_col,num_col\ncat_col,num_col=extract_cat_num(data)","6cdfae2d":"for i in cat_col:\n    print(i)\n    print(data[i].value_counts()*100\/len(data))\n    print(\" \")","96f6a618":"data[cat_col].nunique().sort_values(ascending=False)","f859e811":"data.Creditability.value_counts()*100\/len(data)","441c4dde":"data[num_col].nunique()","f2411359":"num_col.remove('Creditability')\nnum_col","9f71cea2":"bank = setup(data = data, target = 'Creditability', \n                  normalize = True, \n                  transformation = True,\n               train_size = 0.8, # training over 80% of available data\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                  numeric_imputation='median',\n                  categorical_imputation='mode',\n            ordinal_features = {'Account_Balance':['No Account','None','Below 200 DM','200 DM or Above'],\n                               'Value_Savings_Stocks':['None','Below 100 DM','[100, 500)','[500, 1000)','Above 1000'],\n                               'Length_of_current_employment':['Unemployed','<1 Year','[1, 4)','[4, 7)','Above 7'],\n                               'Instalment_per_cent':['Below 20%','[20%, 25%)','(25%, 35%)','Above 35%'],\n                               'Occupation':['Unemployed, unskilled','Unskilled Permanent Resident','Skilled','Executive'],\n                                'No_of_Credits_at_this_Bank':['1','2 or 3','4 or 5','Above 6'],\n                                'No_of_dependents':['Less than 3','3 or More']\n                               },\n            fix_imbalance = True,\n            numeric_features=num_col,\n             session_id=1,)","24f69cfd":"best = compare_models()","b713c259":"gbc = create_model('gbc')","241ebec2":"print(gbc)","1842ec29":"tuned_gbc = tune_model(gbc,optimize = 'F1')","d7f3b4da":"plot_model(tuned_gbc, plot = 'auc')","3e63daa6":"plot_model(tuned_gbc, plot = 'pr')","6c605b68":"plot_model(tuned_gbc, plot='feature')","279ed004":"plot_model(tuned_gbc, plot = 'confusion_matrix')","f7b67a66":"evaluate_model(tuned_gbc)","4ce2cf50":"predict_model(tuned_gbc)","0877bb44":"unseen_predictions = predict_model(tuned_gbc, data=data_unseen)\nunseen_predictions.head()","fd9727e2":"print(\"Confidence Score :   {}\".format(round(unseen_predictions.Score.mean(),2)))#Confidence Score","8e222d88":"from pycaret.utils import check_metric\ncheck_metric(unseen_predictions['Creditability'], unseen_predictions['Label'], metric = 'F1')","ec8d37de":"# Mapping of values"}}