{"cell_type":{"1ecfda3f":"code","7c9702ac":"code","791301eb":"code","4c7775f4":"code","9061d54e":"code","8b8205f3":"code","af15e072":"code","3fb4e823":"code","a6de2055":"code","9f5d8b5a":"code","1e227014":"code","2a6b3e28":"code","c361a709":"code","2ccdf1a3":"code","1519242e":"code","0ce831b3":"code","47ce145f":"code","30eb2e58":"code","c9b8ac92":"code","53deb1ef":"code","8e392b71":"code","4b89d755":"markdown","b1b91898":"markdown","00c1ac45":"markdown","f7f7e460":"markdown","d96c363c":"markdown","05fa0d64":"markdown","a31ebca2":"markdown","c9b3ea18":"markdown","81f7bd33":"markdown","f76f7439":"markdown","f74c9c22":"markdown","50a1db1a":"markdown","3e9837fb":"markdown","99d46c3b":"markdown","6e6bff40":"markdown","e3ac4635":"markdown","58e6597b":"markdown","92de408d":"markdown","8b009eeb":"markdown"},"source":{"1ecfda3f":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","7c9702ac":"# list files in directory\n!ls -lh \"..\/input\"","791301eb":"# unzip train.csv, is not needed in the kaggle kernel\n#!unzip train.csv.zip","4c7775f4":"# set chmod to read train.csv, is not needed in the kaggle kernel\n#!chmod +r train.csv","9061d54e":"# read csv data to pandas data frame\ndf_train = pd.read_csv('..\/input\/train.csv')\ndf_test = pd.read_csv('..\/input\/test.csv')","8b8205f3":"# check for missing values\nassert ~df_train.isnull().values.any()\nassert ~df_test.isnull().values.any()\n\n# check for NaN values\nassert ~df_train.isna().values.any()\nassert ~df_test.isna().values.any()","af15e072":"# check column name, non-null values and dtypes\nprint(df_train.info(),'\\n')\nprint(df_test.info())","3fb4e823":"# have a look at the first rows\ndf_train.head()","a6de2055":"df_test.head()","9f5d8b5a":"# cast every column to object and get the unique elements\nprint(df_train.astype('object').describe(include='all').loc['unique', :],'\\n')\nprint(df_test.astype('object').describe(include='all').loc['unique', :])","1e227014":"# get unique values of every column\ncol_values = [col for col in df_train]\nunique_col_values_train = [df_train[col].unique() for col in df_train]\nunique_col_values_test = [df_test[col].unique() for col in df_test]","2a6b3e28":"# check if there are difference in the columns and if print them\nfor i, (c, a, b) in enumerate(zip(col_values, unique_col_values_train, unique_col_values_test)):\n    \n    if i == 0: continue # skip id_code\n        \n    a = set(a)\n    b = set(b)\n    \n    print('\\n'+c+':', a == b)\n    \n    # if the column elements are not equal, check if they are disjoint\n    if not(a == b):\n        print('disjoint:', a.isdisjoint(b))","c361a709":"sns.catplot(x='experiment', kind='count', data=df_train, height=3, aspect=10);","2ccdf1a3":"sns.catplot(x='plate', hue='experiment', kind='count', data=df_train, height=4, aspect=5);","1519242e":"sns.catplot(y='well', kind='count', data=df_train, height=40, aspect=0.25);","0ce831b3":"sns.catplot(y='well', hue='experiment', kind='count', data=df_train, height=150, aspect=0.1);","47ce145f":"sns.catplot(y='sirna', hue='experiment', kind='count', data=df_train, height=400, aspect=0.05);","30eb2e58":"sns.catplot(x='experiment', kind='count', data=df_test, height=3, aspect=10);","c9b8ac92":"sns.catplot(x='plate', hue='experiment', kind='count', data=df_test, height=4, aspect=5);","53deb1ef":"sns.catplot(y='well', kind='count', data=df_test, height=40, aspect=0.25);","8e392b71":"sns.catplot(y='well', hue='experiment', kind='count', data=df_test, height=150, aspect=0.1);","4b89d755":"Based on this result, we can derive that the train and test dataset are based on different experiments.","b1b91898":"Basic EDA of the train and test csv files for the Recursion Cellular Image Classification (RCIC) challenge on kaggle.","00c1ac45":"The experiment count in the train and test set is different. We will look into this in more detail.","f7f7e460":"The data set count for all the experiments is comparable.","d96c363c":"In every experiment we have 4 plates and the count is evenly distributed.","05fa0d64":"In general, the wells are evenly distributed. However, some wells are not present in every experiment, i.e., G3, G4, G11, G12, M08. (Note: If a experiment is not present in the first or the last position it can be tricky to see it in the visualisation due to the white background.)","a31ebca2":"# RCIC - Basic EDA v1","c9b3ea18":"## Unzip data and fix chmod","81f7bd33":"The siRNA data looks also very balanced. Nevertheless, some siRNAs were not used in every experiment.","f76f7439":"In every experiment we have 4 plates. The count is evenly distributed.","f74c9c22":"In general, the wells are evenly distributed. However, some wells are not present in certain experiments.","50a1db1a":"# Conclusion","3e9837fb":"## EDA for train and test dataset","99d46c3b":"## Load data","6e6bff40":"## Visual EDA test dataset","e3ac4635":"The dataset count for all the experiments is comparable.","58e6597b":"The train and test dataset contain different experiments. All in all, the train and test dataset looks very balanced.","92de408d":"## Imports","8b009eeb":"## Visual EDA train data"}}