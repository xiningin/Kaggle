{"cell_type":{"e96f9be9":"code","25995836":"code","458f3a74":"code","9e7ac04b":"code","2316a5ec":"code","ed415d70":"code","358df1a6":"code","f8112472":"code","76b5b9bd":"code","698ea0c5":"code","bd2619e3":"code","f68d9a0b":"code","9fd895b8":"code","64e58e06":"code","9afaa4ce":"code","62de1d92":"code","28806a2b":"code","73cc4eba":"markdown","d017e9e2":"markdown","5d8eef4e":"markdown","129df9a2":"markdown","216b276d":"markdown","a10ce5ac":"markdown"},"source":{"e96f9be9":"import pandas as pd\nfrom sklearn.naive_bayes import MultinomialNB\n# Fitting Random Forest Classification to the Training set\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.feature_extraction.text import TfidfVectorizer","25995836":"df = pd.read_csv(\"..\/input\/jigsaw-toxic-comment-classification-challenge\/train.csv\")\ndf['y'] = (df[['toxic', 'severe_toxic', 'obscene', 'threat', 'insult', 'identity_hate']].sum(axis=1) > 0 ).astype(int)\ndf = df[['comment_text', 'y']].rename(columns={'comment_text': 'text'})\ndf.sample(5)","458f3a74":"vec = TfidfVectorizer()","9e7ac04b":"X = vec.fit_transform(df['text'])\nX","2316a5ec":"classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier.fit(X,df['y'])","ed415d70":"# Predicting the Test set results\ny_pred = classifier.predict(X)\ny_pred","358df1a6":"# Predicting the Test set results\nscore = classifier.score(X,df['y'])\nscore","f8112472":"df_val = pd.read_csv(\"..\/input\/jigsaw-toxic-severity-rating\/validation_data.csv\")","76b5b9bd":"X_less_toxic = vec.transform(df_val['less_toxic'])\nX_more_toxic = vec.transform(df_val['more_toxic'])","698ea0c5":"p1 = classifier.predict_proba(X_less_toxic)\np2 = classifier.predict_proba(X_more_toxic)","bd2619e3":"# Validation Accuracy\n(p1[:, 1] < p2[:, 1]).mean()","f68d9a0b":"df_sub = pd.read_csv(\"..\/input\/jigsaw-toxic-severity-rating\/comments_to_score.csv\")\nX_test = vec.transform(df_sub['text'])\np3 = classifier.predict_proba(X_test)","9fd895b8":"df_sub","64e58e06":"df_sub['score'] = p3[:, 1]","9afaa4ce":"df_sub['score'].count()","62de1d92":"# 9 comments will fail if compared one with the other\ndf_sub['score'].nunique()","28806a2b":"sub=df_sub[['comment_id', 'score']].to_csv(\"submission.csv\", index=False)","73cc4eba":"## Submission","d017e9e2":"## Check Upvote if you Like it.","5d8eef4e":"## Using TF-IDF","129df9a2":"## score","216b276d":"## MakeValidate","a10ce5ac":"## RandomForestClassifie"}}