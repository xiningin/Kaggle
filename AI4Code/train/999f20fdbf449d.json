{"cell_type":{"ad9c6a16":"code","4e02b88d":"code","71b9aefe":"code","c4b99008":"code","6566cf15":"code","ca0430a7":"code","1145fe3d":"code","f7bdf67b":"code","212346f1":"code","db1902ac":"code","bc12ef35":"code","bbf287f6":"code","d6c66e41":"markdown","66b40ce3":"markdown","5344c7e3":"markdown","67f5b21a":"markdown","0458dc1d":"markdown","83337a56":"markdown","4c76d79d":"markdown","2d0f2535":"markdown"},"source":{"ad9c6a16":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \n%matplotlib inline\nimport seaborn as sns \nimport os\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","4e02b88d":"df = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","71b9aefe":"df.info()","c4b99008":"cat_col = [\"sex\",\"exng\",\"caa\",\"cp\",\"fbs\",\"restecg\",\"slp\",\"thall\"]\nnum_col = [\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]","6566cf15":"df[num_col].describe()","ca0430a7":"df_corr = df[num_col].corr()\nprint(df_corr)\nsns.heatmap(df_corr,annot=True,fmt=\"1.1f\",linewidths=.5, cmap='jet')","1145fe3d":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score","f7bdf67b":"df_copy = df","212346f1":"cat_col=[\"sex\",\"exng\",\"caa\",\"cp\",\"fbs\",\"restecg\",\"slp\",\"thall\"]\nnum_col=[\"age\",\"trtbps\",\"chol\",\"thalachh\",\"oldpeak\"]\n\ndf_copy = pd.get_dummies(df_copy, columns = cat_col, drop_first = True)\nX = df_copy.drop(['output'],axis=1)\ny = df_copy[['output']]","db1902ac":"scaler = RobustScaler()\nX[num_col] = scaler.fit_transform(X[num_col])","bc12ef35":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","bbf287f6":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\n\ny_pred_proba = logreg.predict_proba(X_test)\ny_pred = np.argmax(y_pred_proba,axis=1)\n\nprint(\"The test accuracy: \", accuracy_score(y_test, y_pred))","d6c66e41":"* Average age is 54. \n* Min age: 29\n* Max age: 77","66b40ce3":"Create Lists by parameter type","5344c7e3":"Load libraries for modeling","67f5b21a":"* Age: Age of patient\n* Sex : Sex of the patient (1:male, 0:female)\n* exang: exercise induced angina (1 = yes; 0 = no)\n* ca: number of major vessels (0-3)\n* cp : Chest Pain type chest pain type\n    (Value 1: typical angina,\n    Value 2: atypical angina,\n    Value 3: non-anginal pain,\n    Value 4: asymptomatic)\n* trtbps : resting blood pressure (in mm Hg)\n* chol : cholestoral in mg\/dl fetched via BMI sensor\n* fbs : (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n* oldpeak - ST depression induced by exercise relative to rest\n* rest_ecg : resting electrocardiographic results\n* slp: slope - the slope of the peak exercise ST segment (2 = upsloping; 1 = flat; 0 = downsloping)\n* thalach : maximum heart rate achieved\n* thal :2 = normal; 1 = fixed defect; 3 = reversable defect\n* target : 0= less chance of heart attack, 1= more chance of heart attack","0458dc1d":"Describe number columns","83337a56":"Parameter info","4c76d79d":"Confirm the correlations","2d0f2535":"* Total features: 14\n* There are 2 data types: int64 & float64\n* No \"Null-value\" in the data"}}