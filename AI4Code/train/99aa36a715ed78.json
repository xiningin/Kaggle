{"cell_type":{"2e72fede":"code","541660f6":"code","b01da826":"code","fd8a5699":"code","bec3febb":"code","fb476f78":"code","3479e5e3":"code","8e583cf3":"code","dd582fb6":"code","b6ce72fc":"code","6f4109ca":"code","0ad125fa":"code","8da6cbd1":"code","f2b4a311":"code","75802085":"markdown","79257e01":"markdown","712b89bc":"markdown","4f0dfc00":"markdown","bc67e66b":"markdown","86da7844":"markdown","b27fe6b0":"markdown","dc08bd7a":"markdown","aaf628e5":"markdown"},"source":{"2e72fede":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","541660f6":"!pip install -U lightautoml","b01da826":"# Standard python libraries\nimport os\nimport time\nimport re\n\n# Installed libraries\nimport numpy as np\nimport pandas as pd\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import train_test_split\nimport torch\n\n# Imports from our package\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML, TabularUtilizedAutoML\nfrom lightautoml.dataset.roles import DatetimeRole\nfrom lightautoml.tasks import Task\n#from lightautoml.utils.profiler import Profiler","fd8a5699":"#Code by by Alexander Ryzhkov https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-tabulardata-love\/notebook\n\n#Parameters\n\nN_THREADS = 4 # threads cnt for lightautoml\nRANDOM_STATE = 42 # fixed random state for various reasons\nTIMEOUT = 6 * 3600 # Time in seconds for automl run","bec3febb":"#Code by by Alexander Ryzhkov https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-tabulardata-love\/notebook\n\n#Fix torch number of threads and numpy seed\n\nnp.random.seed(RANDOM_STATE)\ntorch.set_num_threads(N_THREADS)","fb476f78":"%%time\n\ntrain_data = pd.read_csv('..\/input\/30-days-of-ml\/train.csv')\ntrain_data.head()","3479e5e3":"test_data = pd.read_csv('..\/input\/30-days-of-ml\/test.csv')\ntest_data.head()","8e583cf3":"submission = pd.read_csv('..\/input\/30-days-of-ml\/sample_submission.csv')\nsubmission.head()","dd582fb6":"%%time\ndef rmse(y_true, y_pred, **kwargs):\n    return mean_squared_error(y_true, y_pred, squared = False, **kwargs)\n\ntask = Task('reg')","b6ce72fc":"%%time\n\nroles = {\n    'target': 'target',\n    'drop': ['id'],\n}","6f4109ca":"%%time \n\nautoml = TabularUtilizedAutoML(task = task, \n                               timeout = TIMEOUT,\n                               cpu_limit = N_THREADS,\n                               reader_params = {'n_jobs': N_THREADS},\n                               general_params = {'use_algos': [['linear_l2', 'lgb', 'lgb_tuned']]}, # Use only linear models and LGBM and no CatBoost\n                               tuning_params = {'max_tuning_time': 25 * 60}, # Set 25 minutes for LGBM params tuning\n                               lgb_params = {'default_params': {'num_trees': 100000, 'learning_rate': 0.005, 'early_stopping_rounds': 1000}, # Set smaller LR and more ES rounds\n                                             'freeze_defaults': True},\n                              )\noof_pred = automl.fit_predict(train_data, roles = roles)\nprint('oof_pred:\\n{}\\nShape = {}'.format(oof_pred[:10], oof_pred.shape))","0ad125fa":"%%time\n\ntest_pred = automl.predict(test_data, n_jobs = N_THREADS)\nprint('Prediction for test data:\\n{}\\nShape = {}'.format(test_pred[:10], test_pred.shape))\n\nprint('Check scores...')\nprint('OOF score: {}'.format(rmse(train_data['target'].values, oof_pred.data[:, 0])))","8da6cbd1":"submission['target'] = test_pred.data[:, 0]\nsubmission.to_csv('lightautoml_sport_mode_util_modified.csv', index = False)","f2b4a311":"submission","75802085":"#Prepare submission","79257e01":"#AutoML preset usage\n\nCreate Task","712b89bc":"#Train LightAutoML model on full data\n\nCreate specific AutoML preset with updated LGBM params to activate Kaggle solver mode:\n\nThat will take some time.","4f0dfc00":"#Load Data","bc67e66b":"#Thank you Alexander Ryzhkov https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-tabulardata-love\/notebook","86da7844":"#Setup columns roles","b27fe6b0":"<center style=\"font-family:verdana;\"><h1 style=\"font-size:200%; padding: 10px; background: #1E90FF;\"><b style=\"color:black;\">LightAutoML<\/b><\/h1><\/center>\n\n\n\"LightAutoML is open-source Python library aimed at automated machine learning. It is designed to be lightweight and efficient for various tasks with tabular, text data. LightAutoML provides easy-to-use pipeline creation, that enables:\"\n\nAutomatic hyperparameter tuning, data processing.\n\nAutomatic typing, feature selection.\n\nAutomatic time utilization.\n\nAutomatic report creation.\n\nGraphical profiling system.\n\nEasy-to-use modular scheme to create your own pipelines.\n\nhttps:\/\/lightautoml.readthedocs.io\/en\/latest\/","dc08bd7a":"#All script by Alexander Ryzhkov https:\/\/www.kaggle.com\/alexryzhkov\/lightautoml-tabulardata-love\/notebook","aaf628e5":"#Predict for test data and check OOF score"}}