{"cell_type":{"2f27a569":"code","114c0b3c":"code","da245f49":"code","22adb9f2":"code","0aead2b6":"code","82b177f0":"code","d0bd7a29":"code","9ee68a9b":"code","d86a4eff":"code","1a040f61":"code","3f966a88":"code","4d5c0ff3":"code","94b4b5f2":"code","7afa8dc4":"code","8e54f409":"code","93a761a7":"code","eb5e2cb1":"code","603a2284":"code","85a51f7c":"code","1ebaedb8":"code","7d794dda":"code","f3e72c95":"code","c4013fc5":"code","d15b755a":"code","c84cd41c":"code","fa730871":"code","3356dec7":"code","d258372a":"code","2b61cbcb":"code","bb7cfdb7":"markdown","2f44724f":"markdown","9040411a":"markdown","aa72e856":"markdown","28f948c4":"markdown","9178777b":"markdown","950b1e89":"markdown","fb42da25":"markdown","a29c9e9b":"markdown","57440b1e":"markdown","5aea5513":"markdown","23b79ed3":"markdown","790df0cf":"markdown","76d0baf8":"markdown","1131f38f":"markdown","8727b76f":"markdown","86e4f35d":"markdown","894b2ae4":"markdown","3a3d79fb":"markdown","7a64a2c2":"markdown","734cefa9":"markdown","3ebdcdc1":"markdown"},"source":{"2f27a569":"# Imports\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Data import\nsurvey_2016 = pd.read_csv(\"..\/input\/mental-health-in-tech-2016\/mental-heath-in-tech-2016_20161114.csv\")\n\n\n# ----------- CLEANING THE DATA -----------\n# Column rename\nrenamed_columns = ['self_empl_flag', 'comp_no_empl', 'tech_comp_flag', 'tech_role_flag', 'mh_coverage_flag',\n                  'mh_coverage_awareness_flag', 'mh_employer_discussion', 'mh_resources_provided', 'mh_anonimity_flag',\n                  'mh_medical_leave', 'mh_discussion_neg_impact', 'ph_discussion_neg_impact', 'mh_discussion_cowork',\n                  'mh_discussion_supervis', 'mh_eq_ph_employer', 'mh_conseq_coworkers', 'mh_coverage_flag2', 'mh_online_res_flag',\n                  'mh_diagnosed&reveal_clients_flag', 'mh_diagnosed&reveal_clients_impact', 'mh_diagnosed&reveal_cowork_flag', 'mh_cowork_reveal_neg_impact',\n                  'mh_prod_impact', 'mh_prod_impact_perc', 'prev_employers_flag', 'prev_mh_benefits', 'prev_mh_benefits_awareness',\n                  'prev_mh_discussion', 'prev_mh_resources', 'prev_mh_anonimity', 'prev_mh_discuss_neg_conseq', 'prev_ph_discuss_neg_conseq',\n                  'prev_mh_discussion_cowork', 'prev_mh_discussion_supervisor', 'prev_mh_importance_employer', 'prev_mh_conseq_coworkers',\n                  'future_ph_specification', 'why\/why_not', 'future_mh_specification', 'why\/why_not2', 'mh_hurt_on_career', 'mh_neg_view_cowork',\n                  'mh_sharing_friends\/fam_flag', 'mh_bad_response_workplace', 'mh_for_others_bad_response_workplace', 'mh_family_hist',\n                  'mh_disorder_past', 'mh_disorder_current', 'yes:what_diagnosis?', 'maybe:whats_your_diag', 'mh_diagnos_proffesional',\n                  'yes:condition_diagnosed', 'mh_sought_proffes_treatm', 'mh_eff_treat_impact_on_work', 'mh_not_eff_treat_impact_on_work',\n                  'age', 'sex', 'country_live', 'live_us_teritory', 'country_work', 'work_us_teritory', 'work_position', 'remote_flag']\nsurvey_2016.columns = renamed_columns\n\n# Sex column needs to be recoded (number of unique values = 70)\nsurvey_2016['sex'].replace(to_replace = ['Male', 'male', 'Male ', 'M', 'm',\n       'man', 'Cis male', 'Male.', 'male 9:1 female, roughly', 'Male (cis)', 'Man', 'Sex is male',\n       'cis male', 'Malr', 'Dude', \"I'm a man why didn't you make this a drop down question. You should of asked sex? And I would of answered yes please. Seriously how much text can this take? \",\n       'mail', 'M|', 'Male\/genderqueer', 'male ',\n       'Cis Male', 'Male (trans, FtM)',\n       'cisdude', 'cis man', 'MALE'], value = 1, inplace = True)\n\nsurvey_2016['sex'].replace(to_replace = ['Female', 'female', 'I identify as female.', 'female ',\n       'Female assigned at birth ', 'F', 'Woman', 'fm', 'f', 'Cis female ', 'Transitioned, M2F',\n       'Genderfluid (born female)', 'Female or Multi-Gender Femme', 'Female ', 'woman', 'female\/woman',\n       'Cisgender Female', 'fem', 'Female (props for making this a freeform field, though)',\n       ' Female', 'Cis-woman', 'female-bodied; no feelings about gender',\n       'AFAB'], value = 2, inplace = True)\n\nsurvey_2016['sex'].replace(to_replace = ['Bigender', 'non-binary', 'Other\/Transfeminine',\n       'Androgynous', 'Other', 'nb masculine',\n       'none of your business', 'genderqueer', 'Human', 'Genderfluid',\n       'Enby', 'genderqueer woman', 'mtf', 'Queer', 'Agender', 'Fluid',\n       'Nonbinary', 'human', 'Unicorn', 'Genderqueer',\n       'Genderflux demi-girl', 'Transgender woman'], value = 3, inplace = True)\n\n# Recode Comp size & country columns (for ease when doing plots)\nsurvey_2016['comp_no_empl'].replace(to_replace = ['More than 1000'], value = '>1000', inplace = True)\nsurvey_2016['country_live'].replace(to_replace = ['United States of America'], value = 'USA', inplace = True)\nsurvey_2016['country_live'].replace(to_replace = ['United Kingdom'], value = 'UK', inplace = True)\nsurvey_2016['country_work'].replace(to_replace = ['United States of America'], value = 'USA', inplace = True)\nsurvey_2016['country_work'].replace(to_replace = ['United Kingdom'], value = 'UK', inplace = True)\n\n# Max age is 323, min age is 3.\n# There are only 5 people that have weird ages (3yo, 15yo, or 99yo or 323 yo.) \n# These people will take the average age of the dataset (the correct calculated one, w\/out outliers)\nmean_age = survey_2016[(survey_2016['age'] >= 18) | (survey_2016['age'] <= 75)]['age'].mean()\nsurvey_2016['age'].replace(to_replace = survey_2016[(survey_2016['age'] < 18) | (survey_2016['age'] > 75)]['age'].tolist(),\n                          value = mean_age, inplace = True)","114c0b3c":"# ----------- MISSING VALUES -----------\n# Missing values visualisation\nplt.figure(figsize = (16,4))\nsns.heatmap(data = survey_2016.isna());","da245f49":"# The survey has 1433 rows, so first we will drop all columns where more than half of the observations have missing values\ncols = (survey_2016.isna().sum() >= survey_2016.shape[0]\/2).tolist()\nto_drop = survey_2016.columns[cols]\nsurvey_2016.drop(labels = to_drop, axis = 1, inplace = True)\n\n# Dealing with other missing values\nfrom sklearn.impute import SimpleImputer\n\n# Impute nan with the most frequent value (mode) on every row\nimp = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\nimp.fit(survey_2016)\nimp_data = pd.DataFrame(data = imp.transform(survey_2016), columns = survey_2016.columns)","22adb9f2":"# ----------- ENCODING -----------\n# Split data into 2 datasets: one that needs to be encoded, one that doesnt need to\ncols = [x for x in imp_data.columns if x not in ['age', 'why\/why_not', 'why\/why_not2', 'country_live',\n       'live_us_teritory', 'country_work', 'work_us_teritory', 'work_position']]\n\ndata_to_encode = imp_data[cols]\ndata_not_encode = imp_data[['why\/why_not', 'why\/why_not2', 'country_live',\n       'live_us_teritory', 'country_work', 'work_us_teritory', 'work_position']]\n\n# Importing OneHotEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.preprocessing import LabelEncoder\n\ndef encode(data):\n    cat_columns = list(data.select_dtypes(include=['category','object']))\n    column_mask = []\n    \n    for column_name in list(data.columns.values):\n        column_mask.append(column_name in cat_columns)\n    \n    le = LabelEncoder()\n    ohe = OneHotEncoder(categorical_features = column_mask)\n    \n    for col in cat_columns:\n        data[col] = le.fit_transform(data[col])\n    data = ohe.fit_transform(data)\n    \n    return data\n\nencode(data_to_encode)\nmatrix = encode(data_to_encode)\nencoded_data = pd.DataFrame(matrix) # to dataframe\nencoded_data.columns = data_to_encode.columns\n\n# Preprocessed data\nprep_data = pd.concat(objs = [encoded_data, data_not_encode], axis = 1)","0aead2b6":"# ----------- OTHER CHANGES -----------\n# There are 53 total countries\n# Out of all, most respondents are in US, UK, Canada, Germany, Netherlands and Australia.\n# Usually, for a sample to be representative enough for the population, the size needs to be by convention >30.\n# Respondents cannot be treated equaly within a response (different background, culture etc.), so we will exclude all nations\n        #with a sample size smaller than 30. Because countries with no. responses > 30 are quite similar (well developed countries\n        #with big economies and similar living standards), some of the analytics will incorporate all countries as one.\n\n# Keep only countries with no. responses > 30.\nimp_data = imp_data[imp_data['country_work'].isin(['USA', 'UK', 'Canada', \n                                                   'Germany', 'Netherlands','Australia'])]\nimp_data = imp_data[imp_data['country_live'].isin(['USA', 'UK', 'Canada', \n                                                   'Germany', 'Netherlands','Australia'])]\n\nprep_data = prep_data[prep_data['country_work'].isin(['USA', 'UK', 'Canada', \n                                                   'Germany', 'Netherlands','Australia'])]\nprep_data = prep_data[prep_data['country_live'].isin(['USA', 'UK', 'Canada', \n                                                   'Germany', 'Netherlands','Australia'])]\n\n# Unfortunatelly, the tech flag that identified if the respondent works\/ doesn't work in tech had a lot of missing values\n# So, we will need to map the 'work_position' column (that didn't have any missing values initially)\n# Create the list with tech work positions\ntech_list = []\ntech_list.append(imp_data[imp_data['work_position'].str.contains('Back-end')]['work_position'].tolist())\ntech_list.append(imp_data[imp_data['work_position'].str.contains('Front-end')]['work_position'].tolist())\ntech_list.append(imp_data[imp_data['work_position'].str.contains('Dev')]['work_position'].tolist())\ntech_list.append(imp_data[imp_data['work_position'].str.contains('DevOps')]['work_position'].tolist())\n\n# Reshape the list (that is a list of lists) and remove duplicates\nflat_list = [item for sublist in tech_list for item in sublist]\nflat_list = list(dict.fromkeys(flat_list))\n\n# Create a new column and recode it\nimp_data['tech_flag'] = imp_data['work_position']\nimp_data['tech_flag'].replace(to_replace = flat_list, value = 1, inplace = True)\n\n# The other items - non tech\nremain_list = imp_data['tech_flag'].unique()[1:].tolist()\n\nimp_data['tech_flag'].replace(to_replace = remain_list, value = 0, inplace = True)\n\n# The same for prep_data\n# Create a new column and recode it\nprep_data['tech_flag'] = prep_data['work_position']\nprep_data['tech_flag'].replace(to_replace = flat_list, value = 1, inplace = True)\n\n# The other items - non tech\nprep_data['tech_flag'].replace(to_replace = remain_list, value = 0, inplace = True)","82b177f0":"import matplotlib as mpl\nsns.set_style('whitegrid')\nsns.set_palette('Set2')\nmpl.rcParams['font.size'] = 16\nimport matplotlib.gridspec as gridspec","d0bd7a29":"# Most respondents are tech and also most of them are in US.\n# Most techs are in medium and large companies\n# For future analysis, we will exclude all people non-tech - as this analysis focuses on mental health in tech\n\nfig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2)\nplt.figure(figsize = (16,4))\nfig.set_figheight(5)\nfig.set_figwidth(20)\nplt.subplots_adjust(wspace = 0)\n# plt.suptitle('Main Title')\n\n# No of respondents by Country\nsns.countplot(x = imp_data['country_live'], hue = imp_data['tech_flag'], ax=ax1)\nax1.set_title('No. of Respondents by Country and tech_flag', fontsize = 20)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=15, ha=\"right\")\nax1.set_xlabel('Country', fontsize = 18)\nax1.set_ylabel('Count', fontsize = 18)\nax1.legend(['Not in Tech', 'In Tech'])\n\n# No of respondents by Company Size\nsns.countplot(x = imp_data['comp_no_empl'], hue = imp_data['tech_flag'], ax=ax2, \n              order = ['1-5', '6-25', '26-100', '100-500', '500-1000', '>1000'])\nax2.set_title('No. of Respondents by Company Size and tech_flag', fontsize = 20)\nax2.set_xticklabels(ax2.get_xticklabels(), rotation=15, ha=\"right\")\nax2.set_xlabel('Company Size', fontsize = 18)\nax2.set_ylabel('Count', fontsize = 18)\nax2.legend(['Not in Tech', 'In Tech']);","9ee68a9b":"# Most respondents are male\n\nplt.figure(figsize = (16,5))\nfig, (ax1, ax2) = plt.subplots(1, 2)\nfig.set_figheight(5)\nfig.set_figwidth(20)\nplt.subplots_adjust(wspace = 0)\nfig.suptitle('Proportions of genders in tech', fontsize = 25, y=1.08)\n\n# Pie Chart\nall_techs = imp_data[imp_data['tech_flag'] == 1]['sex'].count()\nmales = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['sex'] == 1.0)]['sex'].count()\nfemales = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['sex'] == 2.0)]['sex'].count()\nother = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['sex'] == 3.0)]['sex'].count()\n\nlabels = 'Male', 'Female', 'Other'\nsizes = [males\/all_techs, females\/all_techs, other\/all_techs]\ncolors = ['#73C6B6', '#F0B27A', '#7FB3D5']\nexplode = (0.03, 0, 0)  # explode 1st slice\n\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax2.axis('equal')\nax2.set_title('Overall gender prop%', pad = 20, fontsize = 20)\n\n# Barchart\nsns.countplot(x = imp_data[imp_data['tech_flag'] == 1]['country_live'], hue = imp_data['sex'], ax = ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=15, ha=\"right\")\nax1.set_title('Gender by Countries', pad = 20, fontsize = 20)\nax1.set_xlabel('Country', fontsize = 18)\nax1.set_ylabel('Count', fontsize = 18)\nax1.legend(['Male', 'Female', 'Other']);","d86a4eff":"imp_data[imp_data['tech_flag'] == 1]['age'].describe()","1a040f61":"# ----------- NOW -----------\n\nplt.figure(figsize = (16,5))\nfig, (ax1, ax2) = plt.subplots(1, 2)\nfig.set_figheight(5)\nfig.set_figwidth(20)\nplt.subplots_adjust(wspace = 0)\nfig.suptitle('Mental Health Disorder in Tech (in the present)', fontsize = 25, y=1.08)\n\n# Pie Chart (Now)\nall_techs_now = imp_data[imp_data['tech_flag'] == 1]['mh_disorder_current'].count()\nno_now = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_current'] == 'No')]['mh_disorder_current'].count()\nyes_now = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_current'] == 'Yes')]['mh_disorder_current'].count()\nmaybe_now = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_current'] == 'Maybe')]['mh_disorder_current'].count()\n\nlabels = 'No', 'Yes', 'Maybe'\nsizes = [no_now\/all_techs_now, yes_now\/all_techs_now, maybe_now\/all_techs_now]\ncolors = ['#73C6B6', '#F0B27A', '#7FB3D5']\nexplode = (0, 0.03, 0)  # explode 1st slice\n\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax2.axis('equal')\nax2.set_title('Overall MH prop% (NOW)', pad = 20, fontsize = 20)\n\n# Barchart (now)\nsns.countplot(x = imp_data[imp_data['tech_flag'] == 1]['country_live'], hue = imp_data['mh_disorder_current'], ax = ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=15, ha=\"right\")\nax1.set_title('MH by Countries (NOW)', pad = 20, fontsize = 20)\nax1.set_xlabel('Country', fontsize = 18)\nax1.set_ylabel('Count', fontsize = 18)\nax1.legend();","3f966a88":"# ----------- PAST -----------\n\n_ = plt.figure(figsize = (16,5))\nfig, (ax1, ax2) = plt.subplots(1, 2)\nfig.set_figheight(5)\nfig.set_figwidth(20)\nplt.subplots_adjust(wspace = 0)\nfig.suptitle('Mental Health Disorder in Tech (in the past)', fontsize = 25, y=1.08)\n\n# Pie Chart (Past)\nall_techs_past = imp_data[imp_data['tech_flag'] == 1]['mh_disorder_current'].count()\nno_past = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_past'] == 'No')]['mh_disorder_past'].count()\nyes_past = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_past'] == 'Yes')]['mh_disorder_past'].count()\nmaybe_past = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_disorder_past'] == 'Maybe')]['mh_disorder_past'].count()\n\nlabels = 'No', 'Yes', 'Maybe'\nsizes = [no_past\/all_techs_past, yes_past\/all_techs_past, maybe_past\/all_techs_past]\ncolors = ['#73C6B6', '#F0B27A', '#7FB3D5']\nexplode = (0, 0.03, 0)  # explode 1st slice\n\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax2.axis('equal')\nax2.set_title('Overall MH prop% (PAST)', pad = 20, fontsize = 20)\n\n# Barchart (Past)\nsns.countplot(x = imp_data[imp_data['tech_flag'] == 1]['country_live'], hue = imp_data['mh_disorder_past'], ax = ax1)\nax1.set_xticklabels(ax1.get_xticklabels(), rotation=15, ha=\"right\")\nax1.set_title('MH by Countries (PAST)', pad = 20, fontsize = 20)\nax1.set_xlabel('Country', fontsize = 18)\nax1.set_ylabel('Count', fontsize = 18)\nax1.legend();","4d5c0ff3":"mpl.rcParams['font.size'] = 13\n\nfig, ax = plt.subplots(figsize = (16, 12), ncols=2, nrows=3)\nplt.subplots_adjust(left=0.125, right=0.9, bottom=0.1, top = 0.9, wspace=0, hspace = 0.3)\nplt.suptitle('Are the Companies taking seriously mental health?', fontsize = 25, y = 1)\n\n# Does your employer provide mental health benefits as part of healthcare coverage?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_coverage_flag'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_coverage_flag'] == 'No')]['mh_coverage_flag'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_coverage_flag'] == 'Yes')]['mh_coverage_flag'].count()\nnot_know_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_coverage_flag'] == \"I don't know\")]['mh_coverage_flag'].count()\nnot_elig_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_coverage_flag'] == 'Not eligible for coverage \/ N\/A')]['mh_coverage_flag'].count()\n\nlabels = 'No', 'Yes', 'Not Know', 'Not Elig.'\nsizes = [no_\/all_, yes_\/all_, not_know_\/all_, not_elig_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3']\nexplode = (0, 0.03, 0, 0)  # explode 1st slice\n\nax[0][0].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[0][0].axis('equal')\nax[0][0].set_title('MH Coverage Provided', pad = 14, fontsize = 18)\n\n# Does your employer offer resources to learn more about mental health concerns and options for seeking help?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_resources_provided'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_resources_provided'] == 'No')]['mh_resources_provided'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_resources_provided'] == 'Yes')]['mh_resources_provided'].count()\nnot_know_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_resources_provided'] == \"I don't know\")]['mh_resources_provided'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, not_know_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0.03, 0, 0)  # explode 1st slice\n\nax[0][1].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[0][1].axis('equal')\nax[0][1].set_title('MH Resources Provided', pad = 14, fontsize = 18)\n\n# Is your anonymity protected if you choose to take advantage of mental health or substance abuse treatment resources provided by your employer?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_anonimity_flag'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_anonimity_flag'] == 'No')]['mh_anonimity_flag'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_anonimity_flag'] == 'Yes')]['mh_anonimity_flag'].count()\nnot_know_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_anonimity_flag'] == \"I don't know\")]['mh_anonimity_flag'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, not_know_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0, 0, 0.03)  # explode 1st slice\n\nax[1][0].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[1][0].axis('equal')\nax[1][0].set_title('MH Anonimity Provided', pad = 14, fontsize = 18)\n\n# If a mental health issue prompted you to request a medical leave from work, asking for that leave would be:\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_medical_leave'].count()\nveasy_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == 'Very easy')]['mh_medical_leave'].count()\nseasy_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == 'Somewhat easy')]['mh_medical_leave'].count()\nmiddle_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == \"Neither easy nor difficult\")]['mh_medical_leave'].count()\nvdiff_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == \"Very difficult\")]['mh_medical_leave'].count()\nsdiff_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == \"Somewhat difficult\")]['mh_medical_leave'].count()\nnot_know_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_medical_leave'] == \"I don't know\")]['mh_medical_leave'].count()\n\nlabels = 'V Easy', 'S Easy', 'Middle', 'V Difficult', 'S Difficult', 'Not Know'\nsizes = [veasy_\/all_, seasy_\/all_, middle_\/all_, vdiff_\/all_, sdiff_\/all_, not_know_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3', '#ABEBC6', '#F4D03F']\nexplode = (0, 0.03, 0, 0, 0, 0)  # explode 1st slice\n\nax[1][1].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[1][1].axis('equal')\nax[1][1].set_title('MH Medical Leave Request', pad = 14, fontsize = 18)\n\n# Do you feel that your employer takes mental health as seriously as physical health?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_eq_ph_employer'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_eq_ph_employer'] == 'No')]['mh_eq_ph_employer'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_eq_ph_employer'] == 'Yes')]['mh_eq_ph_employer'].count()\nnot_know_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_eq_ph_employer'] == \"I don't know\")]['mh_eq_ph_employer'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, not_know_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0, 0, 0.03)  # explode 1st slice\n\nax[2][0].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[2][0].axis('equal')\nax[2][0].set_title('Mental & Physical Health Equal Importance', pad = 14, fontsize = 18)\n\n# Have you heard of or observed negative consequences for co-workers who have been open about mental health issues in your workplace?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_conseq_coworkers'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_conseq_coworkers'] == 'No')]['mh_conseq_coworkers'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_conseq_coworkers'] == 'Yes')]['mh_conseq_coworkers'].count()\n\nlabels = 'No', 'Yes'\nsizes = [no_\/all_, yes_\/all_]\ncolors = ['#7FB3D5', '#73C6B6']\nexplode = (0.08, 0)  # explode 1st slice\n\nax[2][1].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[2][1].axis('equal')\nax[2][1].set_title('Neg. Conseq for Coworkers with MH Disorders', pad = 14, fontsize = 18);","94b4b5f2":"fig, ax = plt.subplots(figsize = (16, 8), ncols=2, nrows=2)\nplt.subplots_adjust(left=0.125, right=0.9, bottom=0.1, top = 0.9, wspace=0, hspace = 0.3)\nplt.suptitle('Discussing Mental Health at Work', fontsize = 25, y = 1.04)\n\n# Do you think that discussing a mental health disorder with your employer would have negative consequences?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_discussion_neg_impact'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_neg_impact'] == 'No')]['mh_discussion_neg_impact'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_neg_impact'] == 'Yes')]['mh_discussion_neg_impact'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_neg_impact'] == 'Maybe')]['mh_discussion_neg_impact'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, maybe_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0, 0, 0.03)  # explode 1st slice\n\nax[0][0].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[0][0].axis('equal')\nax[0][0].set_title('Neg Consequences after Discussing MH with Employer', pad = 14, fontsize = 14)\n\n# Would you feel comfortable discussing a mental health disorder with your coworkers?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_discussion_cowork'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_cowork'] == 'No')]['mh_discussion_cowork'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_cowork'] == 'Yes')]['mh_discussion_cowork'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_cowork'] == 'Maybe')]['mh_discussion_cowork'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, maybe_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0, 0, 0.03)  # explode 1st slice\n\nax[0][1].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[0][1].axis('equal')\nax[0][1].set_title('Are you relaxed of talking MHD with coworkers?', pad = 14, fontsize = 14)\n\n# Do you think that team members\/co-workers would view you more negatively if they knew you suffered from a mental health issue?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_neg_view_cowork'].count()\nno_t = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_neg_view_cowork'] == \"No, I don't think they would\")]['mh_neg_view_cowork'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_neg_view_cowork'] == \"No, they do not\")]['mh_neg_view_cowork'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_neg_view_cowork'] == 'Maybe')]['mh_neg_view_cowork'].count()\nyes_t = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_neg_view_cowork'] == 'Yes, I think they would')]['mh_neg_view_cowork'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_neg_view_cowork'] == 'Yes, they do')]['mh_neg_view_cowork'].count()\n\nlabels = 'I think no', 'They do not', 'Maybe', 'I think yes', 'They do'\nsizes = [no_t\/all_, no_\/all_, maybe_\/all_, yes_t\/all_, yes_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3', '#ABEBC6']\nexplode = (0, 0, 0.03, 0, 0)  # explode 1st slice\n\nax[1][0].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[1][0].axis('equal')\nax[1][0].set_title('You think coworkers will view you badly after confessing to a MHD?', pad = 14, fontsize = 14)\n\n# Would you feel comfortable discussing a mental health disorder with your direct supervisor(s)?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_discussion_supervis'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_supervis'] == 'No')]['mh_discussion_supervis'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_supervis'] == 'Yes')]['mh_discussion_supervis'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_discussion_supervis'] == 'Maybe')]['mh_discussion_supervis'].count()\n\nlabels = 'No', 'Yes', 'Not Know'\nsizes = [no_\/all_, yes_\/all_, maybe_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A']\nexplode = (0, 0.03, 0)  # explode 1st slice\n\nax[1][1].pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax[1][1].axis('equal')\nax[1][1].set_title('Are you relaxed of talking MHD with supervisors?', pad = 14, fontsize = 14);","7afa8dc4":"fig, (ax1, ax2) = plt.subplots(figsize = (16, 4), ncols=2, nrows=1)\nplt.subplots_adjust(left=0.125, right=0.9, bottom=0.1, top = 0.9, wspace=0, hspace = 0.3)\nplt.suptitle('Is MH having bad consequences on career?', fontsize = 23, y = 1.1)\n\n# Do you feel that being identified as a person with a mental health issue would hurt your career?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_hurt_on_career'].count()\nno_t = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_hurt_on_career'] == \"No, I don't think it would\")]['mh_hurt_on_career'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_hurt_on_career'] == \"No, it has not\")]['mh_hurt_on_career'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_hurt_on_career'] == 'Maybe')]['mh_hurt_on_career'].count()\nyes_t = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_hurt_on_career'] == 'Yes, I think it would')]['mh_hurt_on_career'].count()\nyes_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_hurt_on_career'] == 'Yes, it has')]['mh_hurt_on_career'].count()\n\nlabels = 'I think no', 'It has not', 'Maybe', 'I think yes', 'Yes it has'\nsizes = [no_t\/all_, no_\/all_, maybe_\/all_, yes_t\/all_, yes_\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3', '#ABEBC6']\nexplode = (0, 0, 0.03, 0, 0)  # explode 1st slice\n\nax1.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax1.axis('equal')\nax1.set_title('You think being a person with MHD can hurt your career?', pad = 14, fontsize = 14)\n\n# Have you observed or experienced an unsupportive or badly handled response to a mental health issue in your current or previous workplace?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_bad_response_workplace'].count()\nno_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_bad_response_workplace'] == \"No\")]['mh_bad_response_workplace'].count()\nmaybe_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_bad_response_workplace'] == 'Maybe\/Not sure')]['mh_bad_response_workplace'].count()\nyes_e = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_bad_response_workplace'] == 'Yes, I experienced')]['mh_bad_response_workplace'].count()\nyes_o = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_bad_response_workplace'] == 'Yes, I observed')]['mh_bad_response_workplace'].count()\n\nlabels = 'No', 'Maybe\/Not sure', 'Yes, I experienced', 'Yes, I observed'\nsizes = [no_\/all_, maybe_\/all_, yes_e\/all_, yes_o\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3']\nexplode = (0.03, 0, 0, 0)  # explode 1st slice\n\nax2.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nax2.axis('equal')\nax2.set_title('Have you observed\/experienced badly response to a MHD?', pad = 14, fontsize = 14);","8e54f409":"plt.figure(figsize = (16, 5))\n\n# How willing would you be to share with friends and family that you have a mental illness?\nall_ = imp_data[imp_data['tech_flag'] == 1]['mh_sharing_friends\/fam_flag'].count()\nna_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == \"Not applicable to me (I do not have a mental illness)\")]['mh_sharing_friends\/fam_flag'].count()\nnot_open_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == 'Not open at all')]['mh_sharing_friends\/fam_flag'].count()\nsomewhat_no = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == 'Somewhat not open')]['mh_sharing_friends\/fam_flag'].count()\nneutral_ = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == 'Neutral')]['mh_sharing_friends\/fam_flag'].count()\nsomewhat_o = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == 'Somewhat open')]['mh_sharing_friends\/fam_flag'].count()\nvery_o = imp_data[(imp_data['tech_flag'] == 1) & (imp_data['mh_sharing_friends\/fam_flag'] == 'Very open')]['mh_sharing_friends\/fam_flag'].count()\n\nlabels = 'NA to me', 'Not open at all', 'Somewhat not open', 'Neutral', 'Somewhat open', 'Very open'\nsizes = [na_\/all_, not_open_\/all_, somewhat_no\/all_, neutral_\/all_, somewhat_o\/all_, very_o\/all_]\ncolors = ['#7FB3D5', '#73C6B6', '#F0B27A', '#C39BD3', '#ABEBC6', '#F4D03F']\nexplode = (0, 0, 0, 0, 0.03, 0)  # explode 1st slice\n\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=False, startangle=140)\nplt.axis('equal')\nplt.title('How willing would you be to share with friends\/family that you have a MHD?', pad = 14, fontsize = 20);","93a761a7":"# Preparing the data\n\n# Create the table\ntable0 = imp_data[(imp_data['country_work'] == 'USA') & (imp_data['tech_flag'] == 1)].groupby(by = ['work_us_teritory', 'mh_disorder_current'])['self_empl_flag'].count().reset_index()\ntable1 = table0.pivot(index = 'work_us_teritory', columns = 'mh_disorder_current', values = 'self_empl_flag').reset_index()\n\n# Deal with all NaN (setting them to 0)\ntable1.fillna(0, inplace = True)\n\n# Calculate a prop column\ntable1['prop'] = table1['Yes'] \/ (table1['Maybe'] + table1['No'] + table1['Yes']) * 100\ntable1.rename(columns = {'work_us_teritory' : 'State'}, inplace = True)\n\n# Add State Codes\ncodes = pd.read_csv('..\/input\/usa-information\/states.csv')\ntable2 = pd.merge(left = table1, right=codes, how = 'inner', on = 'State') #we lost none of the data :)\n\n# Final table\ndf = table2[['State', 'Abbreviation', 'prop']]\n\n# Creating the map\n\nimport plotly.graph_objects as go\n\nfig = go.Figure(data=go.Choropleth(\n    locations=df['Abbreviation'], # Spatial coordinates\n    z = df['prop'].astype(float), # Data to be color-coded\n    locationmode = 'USA-states', # set of locations match entries in `locations`\n    colorscale = 'Blues',\n    colorbar_title = \"Percentage(%)\",\n    text = df['State'],\n    marker_line_color='lightgray',\n    marker_line_width=1\n))\n\nfig.update_layout(\n    title_text = 'Percentage of people with MHD in every state (from total respondents)',\n    geo_scope='usa', # limite map scope to USA\n)","eb5e2cb1":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import SGDClassifier, LogisticRegression\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.neural_network import MLPClassifier\nfrom xgboost import XGBClassifier, XGBRFClassifier\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score, roc_auc_score, roc_curve\nfrom sklearn import preprocessing","603a2284":"# Excluding non numeric columns from dataset\nmodel_data = prep_data.copy()\ncol_numeric = [cols for cols in model_data.columns if model_data[cols].dtype in ['int64', 'float64']]\nmodel_data = model_data[col_numeric]\n\n# Model data is our new dataset for predicting variable 'mh_disorder_current'\n\n# Feature variables and target variable\ny = model_data['mh_disorder_current']\n\ncols = [col for col in model_data.columns if col not in ['mh_disorder_current']]\nX = model_data[cols]\n\n# Data Validation\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","85a51f7c":"# Predefined function\ndef model_assess(model, name='Default'):\n    model.fit(X_train, y_train)\n    preds = model.predict(X_test)\n    print('---', name, '---', '\\n',\n          confusion_matrix(y_test, preds), '\\n',\n          'Accuracy:', round(accuracy_score(y_test, preds), 5), '\\n')","1ebaedb8":"# Naive Bayes\nnb = GaussianNB()\nmodel_assess(nb, name='Naive Bayes')\n\n# Stochastic Gradient Descent\nsgd = SGDClassifier(max_iter=5000, random_state=0)\nmodel_assess(sgd, name='SGD')\n\n# KNN\nknn = KNeighborsClassifier(n_neighbors=19)\nmodel_assess(knn, name='KNN')\n\n# Decission trees\ntree = DecisionTreeClassifier()\nmodel_assess(tree, 'Decission Trees')\n\n# Random Forest\nrforest = RandomForestClassifier(n_estimators=1000, max_depth=10, random_state=0)\nmodel_assess(rforest, 'Random Forest')\n\n# Support Vector Machine\nsvm = SVC(decision_function_shape=\"ovo\")\nmodel_assess(svm, 'SVM')\n\n# Logistic Regression\nlg = LogisticRegression(random_state=0, solver='lbfgs', multi_class='multinomial')\nmodel_assess(lg, 'Logistic Regression')\n\n# Neural Nets\nnn = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(150, 10), random_state=1)\nmodel_assess(nn, 'Neural Nets')\n\n# Cross Gradient Booster\nxgb = XGBClassifier(n_estimators=1000, learning_rate=0.05)\nmodel_assess(xgb, 'XGBoost')\n\n# Cross Gradient Booster (Random Forest) <=================== BEST\nxgbrf = XGBRFClassifier(objective= 'multi:softmax')\nmodel_assess(xgbrf, 'XGBoost RF')","7d794dda":"from sklearn.model_selection import GridSearchCV\n\n# Grid Search Function\ndef gridSearch(parameters):\n    gsearch = GridSearchCV(estimator = XGBRFClassifier(learning_rate =0.00001,n_estimators=1000,max_depth=1,min_child_weight=4,\n                                                    gamma=0.3,subsample=0.8,colsample_bytree=0.8,objective= 'multi:softmax',\n                                                    nthread=4,scale_pos_weight=1), \n                        param_grid = parameters, cv=5)\n    gsearch.fit(X_train,y_train)\n    print('best params:', gsearch.best_params_)\n    predictions = gsearch.predict(X_test)\n    print('Accuracy:', round(accuracy_score(y_test, predictions), 5))","f3e72c95":"param_test1 = {\n 'min_child_weight':[1, 2, 3, 4]\n}\n\ngridSearch(param_test1)","c4013fc5":"param_test2 = {\n 'gamma':[i\/10.0 for i in range(0,5)]\n}\n\ngridSearch(param_test2)","d15b755a":"param_test3 = {\n 'subsample':[i\/10.0 for i in range(6,10)],\n 'colsample_bytree':[i\/10.0 for i in range(6,10)]\n}\n\ngridSearch(param_test3)","c84cd41c":"param_test5 = {\n 'learning_rate':[1e-5, 1e-2, 0.1, 1, 100]\n}\n\ngridSearch(param_test5)","fa730871":"# Final Model\nxgbrf_tuned = XGBRFClassifier(objective= 'multi:softmax', learning_rate =0.00001, n_estimators=1000, max_depth=1, \n                              min_child_weight=5,gamma = 0.3, subsample=0.8, colsample_bytree=0.9, \n                              nthread=4, scale_pos_weight=1)\nmodel_assess(xgbrf_tuned)","3356dec7":"# How important is each variable into predicting if the respondent has a current Mental Health Problem?\n\nimport eli5\nfrom eli5.sklearn import PermutationImportance\n\nperm = PermutationImportance(estimator=xgbrf_tuned, random_state=1)\nperm.fit(X_test, y_test)\n\neli5.show_weights(estimator=perm, feature_names = X_test.columns.tolist())","d258372a":"# Creating new train datasets only with features that have an importance bigger than 0.004\nX_train_new = X_train[['mh_disorder_past', 'mh_not_eff_treat_impact_on_work', 'mh_diagnos_proffesional', \n                       'mh_eff_treat_impact_on_work']]\nX_test_new = X_test[['mh_disorder_past', 'mh_not_eff_treat_impact_on_work', 'mh_diagnos_proffesional', \n                       'mh_eff_treat_impact_on_work']]\n\n# Fitting the model to the new train datasets to see if we get a better accuracy\nxgbrf_perm_imp = XGBRFClassifier(objective= 'multi:softmax', learning_rate =0.00001, n_estimators=1000, max_depth=1, \n                              min_child_weight=5,gamma = 0.3, subsample=0.8, colsample_bytree=0.9, \n                              nthread=4, scale_pos_weight=1)\nxgbrf_perm_imp.fit(X_train_new, y_train)\npredictions = xgbrf_perm_imp.predict(X_test_new)\nprint(confusion_matrix(y_test, predictions))\nprint('Accuracy:', accuracy_score(y_test, predictions))","2b61cbcb":"from xgboost import plot_tree, plot_importance\n\nfig, (ax1, ax2) = plt.subplots(figsize = (13, 8), ncols=1, nrows=2)\nplt.subplots_adjust(left=0.125, right=0.9, bottom=0.1, top = 0.9, wspace=0, hspace = 0.5)\n\nplot_importance(xgbrf_tuned, importance_type='gain', ax = ax1)\nax1.set_title('Feature Importance by Information Gain', fontsize = 18)\nax1.set_xlabel('Gain')\n\nplot_importance(xgbrf_tuned, importance_type='weight', ax = ax2)\nax2.set_title('Feature Importance by Weight', fontsize = 18)\nax2.set_xlabel('Weight');","bb7cfdb7":"## Profile of the respondents","2f44724f":"### 2.Models","9040411a":"# II. Visualisation and Insights\n\nNow let's get some learnings from the data:****","aa72e856":"### 3.Age (only techs)\n\nDistribution is skewed to the left, with the age of respondents being around `30-40 years old`, so quite young, but with enough work experience already.","28f948c4":"### 3.Discussing Mental Health at Work\n\n* 67% of respondents do not know or agree that there were `negative consequences about talking of Mental Health` with the Employer. There is also a big percentage of people that do not know if they would be relaxed of talking with the employer about mental health.\n\n* Alarming is the percentage of people that think or actually know that `coworkers will view them badly` after confessing to having a mental health problem.\n\n* Almost half of the respondents are `relaxed talking about mental health` with their supervisor.","9178777b":"### 1.Data Preparing","950b1e89":"The accuracy is slightly worse than the one we got before, but it is very good to know that using only 4 feature columns from the survey out of the 42 it is enough to create a very similar model with almost the same performance.","fb42da25":"# Conclusions\n\nIn my opinion, the openess of companies and people in general to mental health in tech is a bit stronger than I would have anticipated, but there is still lots of room for improvement.\n\nThe amount of people that are not sure or are certain of future negative consequences, in the workplace or at home after talking about their mental health is still too big to be ignored.\n\nThere is also some biast thoughts among the respondents, mental health disorders still being viewed with a stiff mentality, when in reality people are starting to pay much more attention and being more accepting to it.\n\n\n<div class=\"alert alert-block alert-info\">\n<p>If you liked this, please upvote! \ud83d\ude01<p>\n<b>Cheers!<b>\n<\/div>","a29c9e9b":"### 2.Are companies taking seriously Mental Health?\n\n* From the averages in the survey, I would say `yes`, but not as much as it would be necessary. More than half of respondents have a Mental Health Coverage provided, but `not the resorces` of finding more information about this, meaning that most companies address mental health, but do not implicate themselves actively in it.\n\n* More than 70% of respondents `do NOT know if their annonimity would be protected` in the case of talking to a superior about their mental health problems, while half of them are `not sure` that the company would grant them a mental health medical leave.\n\n* Lastly, most respondents do not know if their company is `taking mental health problems as serious as physical health`. What is encouraging is that 94% of respondents do not think that there would be negative consequences for coworkers that experience mental health problems.","57440b1e":"## Insights from Techs \n### 1.Have \/ Had Mental Health Disorder\n\n41% of the respondents confirm that they `have at the moment a mental health disorder`, while more than half of the respondents said that they `had a mental health disorder in the past`.\n\nWhat is worring is the amount of respondents that answered \"maybe\" to this question, meaning a necessity to more support and guidance to identifying and addressing any issue that raised that \"maybe\" response in the first place.","5aea5513":"### 4.Would Mental Health have consequences on my career?\n\nMost people think or are certain that `having a Mental Health Disorder would hurt on your career`, but more than half of respondents `didn't either observed or experienced a bad response` to Mental Health around them.\n\nThese questions still show a `biaseness` about mental health and its actual real consequences on someones life.","23b79ed3":"## US Map\n### Percentages of people with Mental Health Disorders out of all respondents\n\n*The data for each state is fluctuant and quite small, so the following information in the map should be taken with a grain of salt*","790df0cf":"# I. Data and Preprocessing (cleaning, missing values, recoding)\n\nI worked on the `2016 OSMI Mental Health in Tech Survey`. It had 1433 rows and 63 columns, lot's of missing data, lot's of not integrated data (gender for example was left an open question), lot's of countries but not consistent in number of respondents etc.\n\nSumarized, what I did below is:\n* rename columns\n* sex columns & company size recoded\n* removed outliers from age\n* missing value listwise deletion (for variables where missing observations were more than half) and simple imputation\n* column encoding\n* country filtering (remained only with the ones with more than 30 responses)\n* create tech column with flag 1\/0","76d0baf8":"### Plotting feature Importance","1131f38f":"![](https:\/\/i.imgur.com\/Z6lY389.png)\n\n# Introduction\n\nMental Health is a very important matter that only now is starting to arrise in our community. I worked on this dataset on the AINI Datathon in Belfast, but I wanted to take it further and properly take my time and analyse the numbers, hoping to find some interesting insights and also movements that companies take towards this matter.\n \nThat being said, let's get our hands dirty.","8727b76f":"### 5.Being open about Mental Health with friends and family\n\n* 63% of respondents are `open or somewhat open` about talking mental health with friends or family.\n* Almost 20% of respondents are `not that confortable talking about mental health` with close ones, while the rest remain neutral.","86e4f35d":"### 2. Gender (only techs) \nAs expected, most of the respondents are `male`, this happening only because the tech industry is occupied by a big majority by men.\n\n*As a side note, proportion of female in tech in this survey in US is the biggest one out of all countries. You go girl!*","894b2ae4":"# III. Machine Learning - Making Predictions\n## Predicting the \"has_current_mental_health_disorder\" variable\n\n### 0.Imports","3a3d79fb":"### 3.Parameter tunning for Cross Gradient Booster (random Forests)","7a64a2c2":"So the best Accuracy is 0.79784.\n\nWe notice that value 0 (no MH) has the most failed predictions, but values 1 and 2 (yes MH and Maybe) have very high accuracies (for yes is 81% and for Maybe is 91%)\n\nBecause in a future query we would like to assess if the person has (or thinks they have) a MH dissorder, we can confirm that the model is good and we can go further with it.","734cefa9":"## Bonus: Feature Importance","3ebdcdc1":"### 1.Teritory\n\nMost respondents in the survey are in `Tech` (a relief, because only on them we will focus going further).\n \nAlso, most respondents are from the `US` and work in `medium or large companies`."}}