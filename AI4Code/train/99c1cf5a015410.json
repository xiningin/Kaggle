{"cell_type":{"4ffffd9e":"code","47017e7d":"code","240ee856":"code","3410d503":"code","90ecf972":"code","9e60fc84":"code","a62292fa":"code","4e73368a":"code","bec9f046":"code","ab67dc8f":"code","79c5e8f9":"code","c000bf57":"code","63814b70":"code","6ddc2f13":"code","7d383838":"code","a0e05d12":"code","524f03d7":"code","bf1dcea2":"code","bbde52d3":"code","05c9c11a":"code","dca8c20e":"code","25fb0feb":"code","6468ec7d":"code","c946d5ff":"code","79a801f9":"code","9fc36ee6":"code","77bac467":"code","15afae52":"code","84bab1eb":"code","2ba7ae1e":"code","b320b847":"code","901d4e50":"code","f08b5c7a":"code","34d83883":"code","ce89f50b":"code","f37ef873":"code","cc2da7da":"code","c490477e":"code","0b8b1753":"code","3d380b2f":"code","94fba0ba":"code","a3ee0de5":"code","0371d3f2":"code","795bb283":"code","fded59c0":"code","b8fd5325":"code","27361cc0":"code","65b339bb":"code","0782341f":"code","40f2e87a":"code","385dd0d6":"code","22ab2811":"code","55d5e735":"code","94fcf63c":"code","dd30729b":"code","75c502f5":"code","294f71f1":"code","68c8df7d":"code","e4d5eac1":"code","a7f38f29":"code","2fcfae38":"code","68b4aa12":"markdown","27565946":"markdown","afceccac":"markdown","27f75649":"markdown","ddef0345":"markdown","63b8d923":"markdown","67b4ef36":"markdown","638a2987":"markdown","0d9268c6":"markdown","16424b06":"markdown","569ecdda":"markdown","4001c76d":"markdown","c2889e39":"markdown","55ec7f24":"markdown","3aa71980":"markdown","14a28999":"markdown","11496407":"markdown","97d09cc1":"markdown","1a5dc237":"markdown","fba10c5a":"markdown","2fc82736":"markdown","79b9b8d2":"markdown","c84620e0":"markdown","399081f0":"markdown","1d98ce67":"markdown","3a9bd8ce":"markdown","37669e1c":"markdown","bc7b2c8d":"markdown","87a2fd7f":"markdown","3a3aed31":"markdown","d56cdede":"markdown","7f9a8f9d":"markdown","d17a43c9":"markdown","a6f8857f":"markdown","c5e0ccfb":"markdown","b8631d71":"markdown","efad86d2":"markdown","99a9e4c5":"markdown","64931d94":"markdown","30a7667c":"markdown","968ed7ae":"markdown","78f6b0ba":"markdown","0046bced":"markdown","0bcf4f91":"markdown","23352031":"markdown","3b70ac89":"markdown","c6400f71":"markdown","97f615f2":"markdown","896ac2fe":"markdown"},"source":{"4ffffd9e":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom sklearn import metrics","47017e7d":"df=pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","240ee856":"df.head()","3410d503":"df.shape","90ecf972":"df.info()","9e60fc84":"df.describe().transpose()","a62292fa":"df.drop(['id'],axis=1, inplace=True)","4e73368a":"df['date']=pd.to_datetime(df['date'])","bec9f046":"df['year']=df['date'].apply(lambda x: x.year)\ndf['month']=df['date'].apply(lambda x: x.month)","ab67dc8f":"df.drop(['date'], axis=1,inplace=True)","79c5e8f9":"df['zipcode'].nunique()","c000bf57":"le=LabelEncoder()","63814b70":"le.fit(df['zipcode'])","6ddc2f13":"df['zipcode']=le.transform(df['zipcode'])","7d383838":"df['yr_renovated'].value_counts()","a0e05d12":"df['renovated']=df['yr_renovated'].apply(lambda x: 0 if x==0 else 1)","524f03d7":"df.drop(['yr_renovated'], axis=1,inplace=True)","bf1dcea2":"plt.figure(figsize=(10,6))\nplt.hist(x='price', bins=100, data=df, edgecolor='w',color='black')\nplt.title('Price Distribution', fontsize=15)\nplt.xlabel('Price', fontsize=12)\nplt.ylabel('Frequency', fontsize=12)\nplt.show()","bbde52d3":"plt.figure(figsize=(10,6))\nsns.countplot(x='bedrooms',data=df)\nplt.title('Number of Bedrooms', fontsize=15)\nplt.xlabel('Bedrooms', fontsize=12)\nplt.ylabel('Count', fontsize=12)\nplt.show()","05c9c11a":"cor=df.corr()['price'].sort_values(ascending=False).drop(['price', 'zipcode'])","dca8c20e":"plt.figure(figsize=(8,6))\nplt.bar(x=list(cor.index), height=list(cor.values), color='teal')\nplt.xticks(rotation=90)\nplt.xlabel('Feature', fontsize=12)\nplt.ylabel('Correlation', fontsize=12)\nplt.title('Correlation of Features with Price', fontsize=15)\nplt.show()","25fb0feb":"new=sns.PairGrid(df,x_vars=['sqft_living', 'sqft_above'], y_vars=['price'],height=5,aspect=1)\nnew.map(plt.scatter)\nplt.show()","6468ec7d":"plt.figure(figsize=(22,6))\nplt.subplot(1,2,1)\nsns.boxplot(x='bedrooms', y='price', data=df)\nplt.subplot(1,2,2)\nsns.boxplot(x='bathrooms', y='price', data=df)\nplt.show()","c946d5ff":"plt.figure(figsize=(15,6))\nplt.subplot(1,2,1)\nsns.scatterplot( x='lat',y='price', data=df)\nplt.subplot(1,2,2)\nsns.scatterplot( x='long',y='price', data=df)\nplt.ylabel('')\nplt.show()","79a801f9":"plt.figure(figsize=(15,6))\nplt.scatter(x='long',y='lat',data=df, c='price',cmap='RdYlGn')\nplt.xlabel('Longitude', fontsize=12)\nplt.ylabel('Lattitude', fontsize=12)\nplt.title('The Geographical Properties of the Houses', fontsize=15)\nplt.show()","9fc36ee6":"df.shape","77bac467":"21597*0.01","15afae52":"df_new=df.sort_values(by='price', ascending=False).iloc[216:]","84bab1eb":"df_new.head()","2ba7ae1e":"plt.figure(figsize=(15,6))\nplt.scatter(x='long',y='lat',data=df_new, c='price',cmap='RdYlGn')\nplt.xlabel('Longitude', fontsize=12)\nplt.ylabel('Lattitude', fontsize=12)\nplt.title('The Geographical Properties of the Houses with Lower Prices', fontsize=15)\nplt.show()","b320b847":"plt.figure(figsize=(8,6))\nsns.boxplot(x='waterfront', y='price',data=df, palette='winter')\nplt.xlabel('Waterfront', fontsize=12)\nplt.ylabel('Price', fontsize=12)\nplt.title('The Distribution of Prices Versus Waterfront', fontsize=15)\nplt.show()","901d4e50":"plt.figure(figsize=(8,6))\nsns.boxplot(x='month',y='price',data=df)\nplt.xlabel('Month', fontsize=12)\nplt.ylabel('Price', fontsize=12)\nplt.title('The Variation of House Prices Versus Month', fontsize=15)\nplt.show()","f08b5c7a":"plt.figure(figsize=(8,6))\ndf.groupby('month').mean()['price'].plot(color='m')\nplt.xlabel('Month', fontsize=12)\nplt.ylabel('Mean Price', fontsize=12)\nplt.title('The Variation of Mean Prices Versus Month', fontsize=15)\nplt.show()","34d83883":"plt.figure(figsize=(8,6))\nsns.boxplot(x='year',y='price',data=df, palette='cubehelix_r')\nplt.xlabel('Year', fontsize=12)\nplt.ylabel('Price', fontsize=12)\nplt.title('The Variation of House Prices Versus Year', fontsize=15)\nplt.show()","ce89f50b":"plt.figure(figsize=(8,6))\ndf.groupby('year').mean()['price'].plot(color='c')\nplt.xlabel('Month', fontsize=12)\nplt.ylabel('Mean Price', fontsize=12)\nplt.title('The Variation of Mean Prices Versus Year', fontsize=15)\nplt.show()","f37ef873":"X=df.drop(['price'],axis=1).values\ny=df['price'].values","cc2da7da":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","c490477e":"mms=MinMaxScaler()","0b8b1753":"mms.fit(X_train)","3d380b2f":"X_train=mms.transform(X_train)","94fba0ba":"X_test=mms.transform(X_test)","a3ee0de5":"X_test.shape","0371d3f2":"model=Sequential()\n\nmodel.add(Dense(20,activation='relu'))\nmodel.add(Dense(20,activation='relu'))\nmodel.add(Dense(20,activation='relu'))\nmodel.add(Dense(20,activation='relu'))\n\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='adam',loss='mse')","795bb283":"model.fit(X_train,y_train, validation_data=(X_test,y_test), batch_size=128, epochs=400 )","fded59c0":"loss_df=pd.DataFrame(model.history.history)","b8fd5325":"loss_df.plot(figsize=(7,6), colormap='RdBu_r')\nplt.title('Training Loss Per Epoch', fontsize=15)\nplt.xlabel('Epoch', fontsize=12)\nplt.ylabel('Loss', fontsize=12)\nplt.show()","27361cc0":"model.evaluate(X_test,y_test,verbose=0)","65b339bb":"model.evaluate(X_train,y_train,verbose=0)","0782341f":"prediction=model.predict(X_test)","40f2e87a":"plt.figure(figsize=(8,6))\nplt.plot(y_test,y_test, color='b')\nplt.scatter(y_test,prediction,color='r')\nplt.xlabel('Actual Price', fontsize=12)\nplt.ylabel('Predicted Price', fontsize=12)\nplt.title('Predicted Versus Actual Prices', fontsize=15)\nplt.show()","385dd0d6":"print('MAE= ', metrics.mean_absolute_error(y_test,prediction))\nprint('MSE= ', metrics.mean_squared_error(y_test,prediction))\nprint('RMSE= ', np.sqrt(metrics.mean_squared_error(y_test,prediction)))\nprint('R2 Score= ', metrics.r2_score(y_test,prediction))","22ab2811":"df['price'].mean()","55d5e735":"metrics.mean_absolute_error(y_test,prediction)\/df['price'].mean()","94fcf63c":"new=df.drop(['price'],axis=1).iloc[0]","dd30729b":"new.values","75c502f5":"X_train.shape","294f71f1":"new=new.values.reshape(-1,20)","68c8df7d":"new","e4d5eac1":"new=mms.transform(new)","a7f38f29":"model.predict(new)","2fcfae38":"df['price'].iloc[0]","68b4aa12":"##### Evaluation on  the Test Dataset","27565946":"##### Evaluation on  train dataset","afceccac":"# ![1.jpg](attachment:1.jpg)","27f75649":"Now we want to count the Number of Bedrooms for all houses in the dataset.","ddef0345":"It seems in some geographical lattitude and longitudes, the prices of houses are higher.","63b8d923":"We will drop the top %1 of houses with high prices and create a new dataframe.`m","67b4ef36":"#### Evaluation","638a2987":"In this Notebook, we will work on a dataset that contains house sale prices for King County in Seattle. It includes homes sold between May 2014 and May 2015. It is a great dataset for evaluating regression models.\n\nThe purpose of this Kernel is to develop a neural network that is capable of accurately predicting the house prices, given several measurements. For this purpose, first we will analyze this dataset and then build a deep learning regression model with  without early stopping and droupout layers and evaluate the results. Finally, we will implement this model on a brand new data and predict the house prices.","0d9268c6":"From the above plot, it is hard to interpret the data, so we study the mean prices in each month.","16424b06":"#### Training the Model","569ecdda":"Here we visualize the price of the houses.","4001c76d":"We see that if the houses are located at the waterfront, their prices are higher.","c2889e39":"## Conclusion","55ec7f24":"We can see that most of the houses have a price between 0 to 1.5 million dollar.","3aa71980":"### Prediction on Brand New Data","14a28999":"We can see that the square feet of living space has a high correlation with the price of the house.","11496407":"## Predicting the House Price by TensorFlow","97d09cc1":"Now we explore the scatter plots of price with features that have a high correlation with it.","1a5dc237":"### Scaling","fba10c5a":"Then we add the year and month columns to the dataframe.","2fc82736":"Now we convert the zipcode to a categorical column.","79b9b8d2":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Introduction<\/a><\/span><\/li><li><span><a href=\"#Importing-Libraries\" data-toc-modified-id=\"Importing-Libraries-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Importing Libraries<\/a><\/span><\/li><li><span><a href=\"#Loading-Dataset\" data-toc-modified-id=\"Loading-Dataset-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>Loading Dataset<\/a><\/span><\/li><li><span><a href=\"#Feature-Engineering\" data-toc-modified-id=\"Feature-Engineering-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Feature Engineering<\/a><\/span><\/li><li><span><a href=\"#EDA-and-Visualization\" data-toc-modified-id=\"EDA-and-Visualization-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;<\/span>EDA and Visualization<\/a><\/span><\/li><li><span><a href=\"#Predicting-the-House-Price-by-TensorFlow\" data-toc-modified-id=\"Predicting-the-House-Price-by-TensorFlow-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;<\/span>Predicting the House Price by TensorFlow<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Splitting-the-Data\" data-toc-modified-id=\"Splitting-the-Data-6.1\"><span class=\"toc-item-num\">6.1&nbsp;&nbsp;<\/span>Splitting the Data<\/a><\/span><\/li><li><span><a href=\"#Scaling\" data-toc-modified-id=\"Scaling-6.2\"><span class=\"toc-item-num\">6.2&nbsp;&nbsp;<\/span>Scaling<\/a><\/span><\/li><li><span><a href=\"#Model-with-No-Early-Stopping-and-No-Droupout-Layer\" data-toc-modified-id=\"Model-with-No-Early-Stopping-and-No-Droupout-Layer-6.3\"><span class=\"toc-item-num\">6.3&nbsp;&nbsp;<\/span>Model with No Early Stopping and No Droupout Layer<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Creating-the-Model\" data-toc-modified-id=\"Creating-the-Model-6.3.1\"><span class=\"toc-item-num\">6.3.1&nbsp;&nbsp;<\/span>Creating the Model<\/a><\/span><\/li><li><span><a href=\"#Training-the-Model\" data-toc-modified-id=\"Training-the-Model-6.3.2\"><span class=\"toc-item-num\">6.3.2&nbsp;&nbsp;<\/span>Training the Model<\/a><\/span><\/li><li><span><a href=\"#Evaluation\" data-toc-modified-id=\"Evaluation-6.3.3\"><span class=\"toc-item-num\">6.3.3&nbsp;&nbsp;<\/span>Evaluation<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Training-Loss-per-Epoch\" data-toc-modified-id=\"Training-Loss-per-Epoch-6.3.3.1\"><span class=\"toc-item-num\">6.3.3.1&nbsp;&nbsp;<\/span>Training Loss per Epoch<\/a><\/span><\/li><li><span><a href=\"#Evaluation-on--the-Test-Dataset\" data-toc-modified-id=\"Evaluation-on--the-Test-Dataset-6.3.3.2\"><span class=\"toc-item-num\">6.3.3.2&nbsp;&nbsp;<\/span>Evaluation on  the Test Dataset<\/a><\/span><\/li><li><span><a href=\"#Evaluation-on--train-dataset\" data-toc-modified-id=\"Evaluation-on--train-dataset-6.3.3.3\"><span class=\"toc-item-num\">6.3.3.3&nbsp;&nbsp;<\/span>Evaluation on  train dataset<\/a><\/span><\/li><li><span><a href=\"#Further-Evaluations-(MAE,-MSE,-RMSE)\" data-toc-modified-id=\"Further-Evaluations-(MAE,-MSE,-RMSE)-6.3.3.4\"><span class=\"toc-item-num\">6.3.3.4&nbsp;&nbsp;<\/span>Further Evaluations (MAE, MSE, RMSE)<\/a><\/span><\/li><\/ul><\/li><\/ul><\/li><li><span><a href=\"#Prediction-on-Brand-New-Data\" data-toc-modified-id=\"Prediction-on-Brand-New-Data-6.4\"><span class=\"toc-item-num\">6.4&nbsp;&nbsp;<\/span>Prediction on Brand New Data<\/a><\/span><\/li><\/ul><\/li><li><span><a href=\"#Conclusion\" data-toc-modified-id=\"Conclusion-7\"><span class=\"toc-item-num\">7&nbsp;&nbsp;<\/span>Conclusion<\/a><\/span><\/li><\/ul><\/div>","c84620e0":"Now we plot the correlation between price and other features.","399081f0":"According to the above figure, the mean price in the 4th month is maximum.","1d98ce67":"Here we analyze the distribution of prices versus waterfront. ","3a9bd8ce":"### Splitting the Data","37669e1c":"Here we study the variation of price versus month and year.","bc7b2c8d":"## Importing Libraries","87a2fd7f":"##### Further Evaluations (MAE, MSE, RMSE)","3a3aed31":"We see that the mean of price is about $540,000, and the mean absolute percentage error (MAPE) is 18.6%, meaning that our predicted price values are around 18.6% off the mean price values. ","d56cdede":"A vast majority of these houses have 2 to 5 bedrooms.","7f9a8f9d":"### Model with No Early Stopping and No Droupout Layer","d17a43c9":"We can see at the edge of water, the price of houses is higher.","a6f8857f":"## EDA and Visualization","c5e0ccfb":"## Introduction","b8631d71":"## Loading Dataset","efad86d2":"##### Training Loss per Epoch","99a9e4c5":"Here we worked on house sale prices dataset and implemented deep learning to predict the house prices.\n\n- We developed a neural network that was capable of accurately predicting the house prices and built a deep learning regression model without early stopping and dropout layers. \n\n- The obtained RMSE and R2 Score were 161004.45 and 0.815, respectively.","64931d94":"We see that most of the houses were not renovated. So instead of this column, we add a categorical column that shows whether the house was renovated or not.","30a7667c":"Now we explore the geographical properties of the houses.","968ed7ae":"We see the lattitude versus longitude is similar to the map of Seattle, and also the color gradient is not visible enough due to the outliers.","78f6b0ba":"The dataset is pretty clean and does not need Data Cleaning.","0046bced":"The true price is 221900 dollar and the model predicted it 284029.44 dollar, which is reasonable.","0bcf4f91":"# <center> House Price Predictions by Deep Learning with TensorFlow <center>","23352031":"## Feature Engineering","3b70ac89":"#### Creating the Model","c6400f71":"First we drop the id column.","97f615f2":"We also convert the yr_renovated column to a categorical column.","896ac2fe":"It can be observed that the mean price increases between 2014 and 2015."}}