{"cell_type":{"8c5c39da":"code","87d68de7":"code","a18255a0":"code","94a0aebb":"code","40c2bec8":"code","6285f99c":"code","c5cd385c":"code","1bc043f1":"code","d513a281":"code","61eaa025":"code","880f6b35":"code","0d754816":"code","7659448f":"code","35265bb3":"code","b3ed641b":"code","3d2ab699":"code","683e0ded":"code","4d96f7c9":"code","4fc7fe0f":"code","4463c859":"code","364c2c7d":"code","621e164c":"code","02839342":"code","d6945d54":"code","49897beb":"code","cd87d2fa":"code","0a29aa52":"code","e3d2aba8":"code","fbebe26a":"code","0a60058c":"code","29259d15":"code","f949acc8":"code","46e91e9d":"code","3d668ead":"code","c2bd3a09":"code","b1f44e9e":"code","f4f37da2":"code","71a47810":"code","60b1ab7e":"code","dfb25352":"code","12dafe2d":"code","24a100c8":"code","6694693c":"code","685aa14e":"code","1a61d924":"code","ad0fee12":"code","5d458673":"code","ff2e1ec4":"code","d09841ae":"code","efe4d392":"code","f47722a4":"code","81b5dafd":"code","607bfd56":"code","b0c030f6":"code","861b8551":"code","d3fb7325":"code","cb41bf60":"code","d7a9fbe7":"code","ce5475ac":"code","8613958b":"code","fba3dfa1":"code","cbd7f9d2":"code","260cf2ea":"code","cf6f723f":"code","dc8e96ef":"code","2dfae2b3":"code","58ce4aa6":"code","9c7ea828":"code","7724227e":"code","0b98cbcf":"code","1c1877a9":"code","4d7c6bbf":"code","11f5b9f8":"code","d9718331":"code","fe4be9eb":"code","7bab4d66":"code","9e8c5400":"code","1d69732f":"code","cc168fed":"code","3dc4d040":"code","3c2c2e71":"code","80a66d11":"code","7dd9faa1":"code","f01f2fbc":"code","688de0ca":"code","ec108f2d":"markdown","8317975b":"markdown","2b787a7d":"markdown","66012063":"markdown","cecdddda":"markdown","8aed8e71":"markdown","7fd1b330":"markdown","ffae3f88":"markdown","7ac339b5":"markdown","04aedc42":"markdown","8eba6226":"markdown","0879531c":"markdown","709932aa":"markdown","ce31fe4f":"markdown","a288bfe0":"markdown","cdd067d8":"markdown","7dcefc46":"markdown","0b936ecb":"markdown","1f0db127":"markdown","dd94fcaa":"markdown","610ea666":"markdown","cdea039b":"markdown","2b290738":"markdown","fa7f7c95":"markdown","99a398ce":"markdown","4de360c7":"markdown","44895af6":"markdown","6fb4ab09":"markdown","3d3addb6":"markdown","d67ea3b8":"markdown","d2d9dc60":"markdown","d332edd7":"markdown"},"source":{"8c5c39da":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.graph_objects as go\nimport seaborn as sn\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","87d68de7":"import xgboost as xgb\nfrom xgboost import plot_importance\nfrom matplotlib import pyplot as plt\nfrom sklearn.model_selection import train_test_split","a18255a0":"data_app_train = pd.read_csv('\/kaggle\/input\/home-credit-default-risk\/application_train.csv')\ndata_app_train['SK_ID_CURR'] = data_app_train['SK_ID_CURR'].astype(str)","94a0aebb":"import plotly.graph_objects as go\nimport plotly.express as px","40c2bec8":"data_app_test = pd.read_csv('\/kaggle\/input\/home-credit-default-risk\/application_test.csv')\ndata_app_test['SK_ID_CURR'] = data_app_test['SK_ID_CURR'].astype(str)","6285f99c":"data_app_test['EMERGENCYSTATE_MODE'].unique()","c5cd385c":"'XNA' in data_app_test['ORGANIZATION_TYPE'].unique().tolist()","1bc043f1":"pd.set_option('display.max_rows', None)","d513a281":"data_null_value_col = data_app_train.isna().sum()[data_app_train.isna().sum()!=0].reset_index().rename(columns={'index': 'col_name', 0: '#'})\ndata_null_value_col['%'] = data_null_value_col['#'] \/ data_app_train.shape[0]","61eaa025":"data_null_value_col","880f6b35":"pd.set_option('display.max_rows', 60)","0d754816":"def default_rate_cal(df, col, threshold):\n    print('default rate high band: ', df[df[col]>threshold]['TARGET'].sum()\/df[df[col]>threshold].shape[0])\n    print('default rate low band: ', df[df[col]>threshold]['TARGET'].sum()\/df[df[col]<=threshold].shape[0])","7659448f":"default_rate_cal(data_app_train, 'AMT_INCOME_TOTAL', 600000)","35265bb3":"list_cat_col = [\n    'NAME_CONTRACT_TYPE',\n    'CODE_GENDER',\n    'FLAG_OWN_CAR',\n    'FLAG_OWN_REALTY',\n    'NAME_TYPE_SUITE',\n    'NAME_INCOME_TYPE',\n    'NAME_EDUCATION_TYPE',\n    'NAME_FAMILY_STATUS',\n    'NAME_HOUSING_TYPE',\n    'OCCUPATION_TYPE',\n    'ORGANIZATION_TYPE',\n    'FONDKAPREMONT_MODE',\n    'HOUSETYPE_MODE',\n    'WALLSMATERIAL_MODE',\n    'EMERGENCYSTATE_MODE',\n#     'FLAG_MOBIL',\n    'FLAG_EMP_PHONE',\n#     'FLAG_WORK_PHONE',\n#     'FLAG_CONT_MOBILE',\n    'FLAG_PHONE',\n#     'FLAG_EMAIL',\n    'AMT_REQ_CREDIT_BUREAU_HOUR',\n    'AMT_REQ_CREDIT_BUREAU_DAY',\n    'AMT_REQ_CREDIT_BUREAU_WEEK',\n    'AMT_REQ_CREDIT_BUREAU_MON',\n    'AMT_REQ_CREDIT_BUREAU_QRT',\n    'AMT_REQ_CREDIT_BUREAU_YEAR',\n    'REG_REGION_NOT_LIVE_REGION',\n    'REG_REGION_NOT_WORK_REGION',\n#     'LIVE_REGION_NOT_WORK_REGION',\n    'REG_CITY_NOT_LIVE_CITY',\n    'REG_CITY_NOT_WORK_CITY',\n    'LIVE_CITY_NOT_WORK_CITY'\n]\n\nlist_num_col = [\n    'TARGET',\n    'CNT_CHILDREN',\n    'AMT_INCOME_TOTAL',\n    'AMT_CREDIT',\n    'AMT_ANNUITY',\n    'AMT_GOODS_PRICE',\n    'REGION_POPULATION_RELATIVE',\n    'DAYS_EMPLOYED',\n    'DAYS_REGISTRATION',\n    'DAYS_ID_PUBLISH',\n    'OWN_CAR_AGE',\n    'CNT_FAM_MEMBERS',\n    'REGION_RATING_CLIENT',\n    'REGION_RATING_CLIENT_W_CITY',\n    'EXT_SOURCE_1',\n    'EXT_SOURCE_2',\n    'EXT_SOURCE_3',\n    'APARTMENTS_AVG',\n    'BASEMENTAREA_AVG',\n    'YEARS_BEGINEXPLUATATION_AVG',\n    'YEARS_BUILD_AVG',\n    'COMMONAREA_AVG',\n    'ELEVATORS_AVG',\n    'ENTRANCES_AVG',\n    'FLOORSMAX_AVG',\n    'FLOORSMIN_AVG',\n    'LANDAREA_AVG',\n    'LIVINGAPARTMENTS_AVG',\n    'LIVINGAREA_AVG',\n    'NONLIVINGAPARTMENTS_AVG',\n    'NONLIVINGAREA_AVG',\n    'APARTMENTS_MODE',\n    'BASEMENTAREA_MODE',\n    'YEARS_BEGINEXPLUATATION_MODE',\n    'YEARS_BUILD_MODE',\n    'COMMONAREA_MODE',\n    'ELEVATORS_MODE',\n    'ENTRANCES_MODE',\n    'FLOORSMAX_MODE',\n    'FLOORSMIN_MODE',\n    'LANDAREA_MODE',\n    'LIVINGAPARTMENTS_MODE',\n    'LIVINGAREA_MODE',\n    'NONLIVINGAPARTMENTS_MODE',\n    'NONLIVINGAREA_MODE',\n    'APARTMENTS_MEDI',\n    'BASEMENTAREA_MEDI',\n    'YEARS_BEGINEXPLUATATION_MEDI',\n    'YEARS_BUILD_MEDI',\n    'COMMONAREA_MEDI',\n    'ELEVATORS_MEDI',\n    'ENTRANCES_MEDI',\n    'FLOORSMAX_MEDI',\n    'FLOORSMIN_MEDI',\n    'LANDAREA_MEDI',\n    'LIVINGAPARTMENTS_MEDI',\n    'LIVINGAREA_MEDI',\n    'NONLIVINGAPARTMENTS_MEDI',\n    'NONLIVINGAREA_MEDI',\n    'FONDKAPREMONT_MODE',\n    'HOUSETYPE_MODE',\n    'TOTALAREA_MODE',\n    'OBS_30_CNT_SOCIAL_CIRCLE',\n    'DEF_30_CNT_SOCIAL_CIRCLE',\n    'OBS_60_CNT_SOCIAL_CIRCLE',\n    'DEF_60_CNT_SOCIAL_CIRCLE',\n    'DAYS_LAST_PHONE_CHANGE',\n    'FLAG_DOCUMENT_2',\n    'FLAG_DOCUMENT_3',\n    'FLAG_DOCUMENT_4',\n    'FLAG_DOCUMENT_5',\n    'FLAG_DOCUMENT_6',\n    'FLAG_DOCUMENT_7',\n    'FLAG_DOCUMENT_8',\n    'FLAG_DOCUMENT_9',\n    'FLAG_DOCUMENT_10',\n    'FLAG_DOCUMENT_11',\n    'FLAG_DOCUMENT_12',\n    'FLAG_DOCUMENT_13',\n    'FLAG_DOCUMENT_14',\n    'FLAG_DOCUMENT_15',\n    'FLAG_DOCUMENT_16',\n    'FLAG_DOCUMENT_17',\n    'FLAG_DOCUMENT_18',\n    'FLAG_DOCUMENT_19',\n    'FLAG_DOCUMENT_20',\n    'FLAG_DOCUMENT_21'\n]\n\nlist_flag_to_cat = [\n#     'FLAG_MOBIL',\n    'FLAG_EMP_PHONE',\n#     'FLAG_WORK_PHONE',\n#     'FLAG_CONT_MOBILE',\n    'FLAG_PHONE',\n#     'FLAG_EMAIL',\n    'REG_REGION_NOT_LIVE_REGION',\n    'REG_REGION_NOT_WORK_REGION',\n    'REG_CITY_NOT_LIVE_CITY',\n    'REG_CITY_NOT_WORK_CITY',\n    'LIVE_CITY_NOT_WORK_CITY'\n]\n\nlist_to_remove = [\n    'WEEKDAY_APPR_PROCESS_START',\n    'HOUR_APPR_PROCESS_START',\n    'FLAG_MOBIL',\n    'FLAG_CONT_MOBILE',\n    'FLAG_EMAIL',\n    'FLAG_WORK_PHONE',\n    'LIVE_REGION_NOT_WORK_REGION',\n    \n]","b3ed641b":"data_app_train.drop(list_to_remove, axis=1, inplace=True)","3d2ab699":"data_app_train[list_flag_to_cat] = data_app_train[list_flag_to_cat].astype(str)","683e0ded":"df_non_default_ratio = pd.DataFrame(columns=['col_value', 'TARGET', 'count', 'total', 'col_name', 'ratio'])\nfor col in list_cat_col:\n    x_axis = data_app_train[col].unique().tolist()\n    y_axis = data_app_train[[col, 'TARGET', 'SK_ID_CURR']].groupby([col, 'TARGET']).count().reset_index().rename(columns={col: 'col_value', 'SK_ID_CURR': 'count'})\n    df_total = data_app_train[[col, 'SK_ID_CURR']].groupby([col]).count().reset_index().rename(columns={col: 'col_value', 'SK_ID_CURR': 'total'})\n    for col_value in list(set(x_axis).difference(set(y_axis[y_axis['TARGET']==0]['col_value'].values.tolist()))):\n        y_axis.loc[len(y_axis)] = [col_value, 0, 0]\n    for col_value in list(set(x_axis).difference(set(y_axis[y_axis['TARGET']==1]['col_value'].values.tolist()))):\n        y_axis.loc[len(y_axis)] = [col_value, 1, 0]\n    y_axis = y_axis.merge(df_total, on=['col_value'], how='left')\n    y_axis['col_name'] = col\n    y_axis['ratio'] = y_axis['count'] \/ (y_axis['total'] - y_axis['count'])\n    df_non_default_ratio = df_non_default_ratio.append(y_axis)\n","4d96f7c9":"pd.set_option('display.max_rows', None)","4fc7fe0f":"df_non_default_ratio","4463c859":"pd.set_option('display.max_rows', 60)","364c2c7d":"data_app_train.shape","621e164c":"data_app_train = data_app_train[data_app_train['CODE_GENDER']!='XNA']","02839342":"data_app_train.shape","d6945d54":"data_app_train[data_app_train['FLAG_OWN_CAR']=='N']['OWN_CAR_AGE'].unique()","49897beb":"data_app_train[data_app_train['FLAG_OWN_CAR']=='Y']['OWN_CAR_AGE'].unique()","cd87d2fa":"data_app_train['age_when_own_car'] = data_app_train['DAYS_BIRTH'] \/ (-365) - data_app_train['OWN_CAR_AGE']","0a29aa52":"data_app_train = data_app_train[(data_app_train['age_when_own_car'] >= 0) | (data_app_train['age_when_own_car'].isna())]","e3d2aba8":"data_app_train.drop(['OWN_CAR_AGE'], axis=1, inplace=True)","fbebe26a":"data_app_train.shape","0a60058c":"data_app_train.drop(['FLAG_OWN_REALTY'], axis=1, inplace=True)","29259d15":"data_app_train.shape","f949acc8":"data_app_train.dropna(subset=['NAME_TYPE_SUITE'], axis=0, inplace=True)","46e91e9d":"data_app_train.shape","3d668ead":"data_app_train.loc[(data_app_train['NAME_TYPE_SUITE']=='Children') |\n                   (data_app_train['NAME_TYPE_SUITE']=='Family'), 'NAME_TYPE_SUITE_cat'] = 'high'\ndata_app_train.loc[(data_app_train['NAME_TYPE_SUITE']=='Spouse, partner') |\n                   (data_app_train['NAME_TYPE_SUITE']=='Unaccompanied'), 'NAME_TYPE_SUITE_cat'] = 'mid'\ndata_app_train.loc[(data_app_train['NAME_TYPE_SUITE']=='Group of people') |\n                   (data_app_train['NAME_TYPE_SUITE']=='Other_A'), 'NAME_TYPE_SUITE_cat'] = 'low'\ndata_app_train.loc[data_app_train['NAME_TYPE_SUITE']=='Other_B', 'NAME_TYPE_SUITE_cat'] = 'btm'","c2bd3a09":"data_app_train.loc[(data_app_train['NAME_INCOME_TYPE']=='Businessman') |\n                   (data_app_train['NAME_INCOME_TYPE']=='Student'), 'NAME_INCOME_TYPE_cat'] = 'no_default'\ndata_app_train.loc[(data_app_train['NAME_INCOME_TYPE']=='State servant') |\n                   (data_app_train['NAME_INCOME_TYPE']=='Pensioner'), 'NAME_INCOME_TYPE_cat'] = 'high'\ndata_app_train.loc[data_app_train['NAME_INCOME_TYPE']=='Commercial associate', 'NAME_INCOME_TYPE_cat'] = 'mid'\ndata_app_train.loc[data_app_train['NAME_INCOME_TYPE']=='Working', 'NAME_INCOME_TYPE_cat'] = 'low'\ndata_app_train.loc[(data_app_train['NAME_INCOME_TYPE']=='Maternity leave') |\n                   (data_app_train['NAME_INCOME_TYPE']=='Unemployed'), 'NAME_INCOME_TYPE_cat'] = 'high_default'","b1f44e9e":"data_app_train['NAME_EDUCATION_TYPE_cat'] = data_app_train['NAME_EDUCATION_TYPE']\ndata_app_train.loc[(data_app_train['NAME_EDUCATION_TYPE_cat']=='Incomplete higher') |\n                   (data_app_train['NAME_EDUCATION_TYPE_cat']=='Secondary \/ secondary special'), 'NAME_EDUCATION_TYPE_cat'] = 'not_well_edu'","f4f37da2":"data_app_train = data_app_train[data_app_train['NAME_FAMILY_STATUS']!='Unknown']","71a47810":"data_app_train.shape","60b1ab7e":"data_app_train.loc[(data_app_train['NAME_FAMILY_STATUS']=='Civil marriage') |\n                   (data_app_train['NAME_FAMILY_STATUS']=='Single \/ not married'), 'NAME_FAMILY_STATUS_cat'] = 'low'\ndata_app_train.loc[(data_app_train['NAME_FAMILY_STATUS']=='Married') |\n                   (data_app_train['NAME_FAMILY_STATUS']=='Separated'), 'NAME_FAMILY_STATUS_cat'] = 'mid'\ndata_app_train.loc[data_app_train['NAME_FAMILY_STATUS']=='Widow', 'NAME_FAMILY_STATUS_cat'] = 'high'","dfb25352":"data_app_train.loc[(data_app_train['NAME_HOUSING_TYPE']=='Rented apartment') |\n                   (data_app_train['NAME_HOUSING_TYPE']=='With parents'), 'NAME_HOUSING_TYPE_cat'] = 'low'\ndata_app_train.loc[(data_app_train['NAME_HOUSING_TYPE']=='Co-op apartment') |\n                   (data_app_train['NAME_HOUSING_TYPE']=='House \/ apartment') |\n                   (data_app_train['NAME_HOUSING_TYPE']=='Municipal apartment'), 'NAME_HOUSING_TYPE_cat'] = 'mid'\ndata_app_train.loc[data_app_train['NAME_HOUSING_TYPE']=='Office apartment', 'NAME_HOUSING_TYPE_cat'] = 'high'","12dafe2d":"data_app_train.loc[(data_app_train['OCCUPATION_TYPE']=='Accountants')|\n                    (data_app_train['OCCUPATION_TYPE']=='Core staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='HR staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='High skill tech staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='IT staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Managers')|\n                    (data_app_train['OCCUPATION_TYPE']=='Medicine staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Private service staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Realty agents')|\n                    (data_app_train['OCCUPATION_TYPE']=='Secretaries'), 'OCCUPATION_TYPE_cat'] = 'high'\ndata_app_train.loc[(data_app_train['OCCUPATION_TYPE']=='Cleaning staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Cooking staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Drivers')|\n                    (data_app_train['OCCUPATION_TYPE']=='Laborers')|\n                    (data_app_train['OCCUPATION_TYPE']=='Low-skill Laborers')|\n                    (data_app_train['OCCUPATION_TYPE']=='Sales staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Security staff')|\n                    (data_app_train['OCCUPATION_TYPE']=='Waiters\/barmen staff'), 'OCCUPATION_TYPE_cat'] = 'mid'\ndata_app_train.loc[data_app_train['OCCUPATION_TYPE_cat'].isna(), 'OCCUPATION_TYPE_cat'] = 'mid'","24a100c8":"list_modeled_cat = [\n    'NAME_CONTRACT_TYPE',\n    'CODE_GENDER',\n    'FLAG_OWN_CAR',\n    'age_when_own_car',\n    'NAME_TYPE_SUITE_cat',\n    'NAME_INCOME_TYPE_cat',\n    'NAME_EDUCATION_TYPE_cat',\n    'NAME_FAMILY_STATUS',\n    'NAME_HOUSING_TYPE_cat',\n    'OCCUPATION_TYPE_cat',\n    'FLAG_EMP_PHONE',\n    'FLAG_PHONE',\n    'EMERGENCYSTATE_MODE',\n    'REG_CITY_NOT_LIVE_CITY',\n    'REG_CITY_NOT_WORK_CITY',\n    'LIVE_CITY_NOT_WORK_CITY',\n    'REG_REGION_NOT_LIVE_REGION'\n]","6694693c":"data_app_train['NAME_HOUSING_TYPE_cat'].unique()","685aa14e":"\ndata_app_train_train = data_app_train[list_modeled_cat+['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'TARGET']]\ndata_app_train_train['TARGET'] = data_app_train_train['TARGET'].astype(str)\n\ndata_app_train_xgboost = pd.concat([data_app_train_train[['EXT_SOURCE_1', 'EXT_SOURCE_2', 'EXT_SOURCE_3', 'TARGET']], pd.get_dummies(data_app_train_train[list_modeled_cat])], axis=1)\n\n\nX_train, X_test, y_train, y_test = train_test_split(data_app_train_xgboost.drop(['TARGET'], axis=1).values, data_app_train_xgboost['TARGET'].values, test_size=0.2, random_state=1234565)","1a61d924":"params = {\n    'booster': 'dart',\n    'objective': 'binary:logistic',\n    'eval_metric': 'auc',\n    'verbosity': 1,\n    'eta': 0.005,\n    'max_depth':7\n    \n}\n\nplst = params.items()\n\ndtrain = xgb.DMatrix(X_train, y_train)\nnum_rounds = 50\nmodel = xgb.train(list(params.items()), dtrain, num_rounds)\n\n\ndtest = xgb.DMatrix(X_test)\nans = model.predict(dtest)\n\nfrom sklearn.metrics import roc_auc_score\n\n\ncnt1 = 0\ncnt2 = 0\nfor i in range(len(y_test)):\n    if ans[i] == y_test[i]:\n        cnt1 += 1\n    else:\n        cnt2 += 1\n\nprint(\"Accuracy: %.2f %% \" % (100 * cnt1 \/ (cnt1 + cnt2)))\nprint('roc: ', roc_auc_score(y_test, ans))\n\n\nplot_importance(model)\nplt.show()","ad0fee12":"data_app_train = pd.read_csv('\/kaggle\/input\/home-credit-default-risk\/application_train.csv')\ndata_app_train['SK_ID_CURR'] = data_app_train['SK_ID_CURR'].astype(str)","5d458673":"data_app_train['DAYS_BIRTH_year'] = data_app_train['DAYS_BIRTH'] \/ -365\ndata_app_train['DAYS_EMPLOYED_year'] = data_app_train['DAYS_EMPLOYED'] \/ -365\ndata_app_train.loc[data_app_train['DAYS_EMPLOYED']==365243, 'DAYS_EMPLOYED_year'] = 0\ndata_app_train['DAYS_REGISTRATION_year'] = data_app_train['DAYS_REGISTRATION'] \/ -365\ndata_app_train['DAYS_ID_PUBLISH_year'] = data_app_train['DAYS_ID_PUBLISH'] \/ -365\ndata_app_train['DAYS_LAST_PHONE_CHANGE_year'] = data_app_train['DAYS_LAST_PHONE_CHANGE'] \/ -365","ff2e1ec4":"plt.figure(figsize=(40, 30))\ncorrMatrix = data_app_train[list_num_col].corr()\nsn.heatmap(corrMatrix)\nplt.show()","d09841ae":"pd.set_option('display.max_rows', None)","efe4d392":"corrMatrix[['TARGET']].sort_values(by='TARGET', ascending=False)","f47722a4":"pd.set_option('display.max_rows', 60)","81b5dafd":"def colored_and_styled_bar_chart(col, title):\n    x_axis = data_app_train[col].unique().tolist()\n    y_axis = data_app_train[[col, 'TARGET']].groupby([col, 'TARGET']).count().reset_index()\n#     if len(y_axis[y_axis['TARGET']==0][col].values.tolist()) < len(x_axis):\n        \n    y_axis_default = data_app_train[data_app_train['TARGET']==1][[col, 'TARGET']].groupby([col]).count()['TARGET'].values.tolist()\n    y_axis_non_default = data_app_train[data_app_train['TARGET']==0][[col, 'TARGET']].groupby([col]).count()['TARGET'].values.tolist()\n    fig = go.Figure()\n    fig.add_trace(go.Bar(x=x_axis,\n                    y=y_axis_non_default,\n                    name='Not Default',\n                    marker_color='rgb(55, 83, 109)',\n                         texttemplate='%{y:.2s}', textposition='outside'\n#                     text=data_app_train[data_app_train['TARGET']==0][[col, 'TARGET']].groupby([col]).count()['TARGET'].values.tolist(),\n#                     textposition='outside',\n                    ))\n    fig.add_trace(go.Bar(x=x_axis,\n                    y=y_axis_default,\n                    name='Default',\n                    marker_color='rgb(26, 118, 255)',\n                         texttemplate='%{y:.2s}', textposition='outside'\n#                     text=data_app_train[data_app_train['TARGET']==1][[col, 'TARGET']].groupby([col]).count()['TARGET'].values.tolist(),\n#                     textposition='outside',\n                    ))\n\n    fig.update_layout(\n        title=title,\n        xaxis_tickfont_size=14,\n        yaxis=dict(\n            title='Count',\n            titlefont_size=16,\n            tickfont_size=14,\n        ),\n        legend=dict(\n            x=0,\n            y=1.0,\n            bgcolor='rgba(255, 255, 255, 0)',\n            bordercolor='rgba(255, 255, 255, 0)'\n        ),\n        barmode='group',\n        bargap=0.15, # gap between bars of adjacent location coordinates.\n        bargroupgap=0.1 # gap between bars of the same location coordinate.\n    )\n#     fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide')\n#     fig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\n    fig.show()\n#     for i in range(len(x_axis)):\n#         if y_axis_default[i] == 0:\n#             print('Non-default Ratio of ', x_axis[i], ': 1')\n#         else:\n#             print('Non-default Ratio of ', x_axis[i], ': ', y_axis_non_default[i] \/ y_axis_default[i])","607bfd56":"colored_and_styled_bar_chart('NAME_CONTRACT_TYPE', 'Contract Type')","b0c030f6":"colored_and_styled_bar_chart('CODE_GENDER', 'Gender')","861b8551":"colored_and_styled_bar_chart('NAME_INCOME_TYPE', 'Income Type')","d3fb7325":"colored_and_styled_bar_chart('NAME_TYPE_SUITE', 'Suite Type')","cb41bf60":"colored_and_styled_bar_chart('NAME_EDUCATION_TYPE', 'Education Type Defaults')","d7a9fbe7":"colored_and_styled_bar_chart('NAME_FAMILY_STATUS', 'Family Status Defaults')","ce5475ac":"colored_and_styled_bar_chart('NAME_HOUSING_TYPE', 'Housing Defaults')","8613958b":"colored_and_styled_bar_chart('OCCUPATION_TYPE', 'Occupation Type')","fba3dfa1":"colored_and_styled_bar_chart('FLAG_EMP_PHONE', 'Employer Phone')","cbd7f9d2":"colored_and_styled_bar_chart('FLAG_WORK_PHONE', 'Work Phone')","260cf2ea":"colored_and_styled_bar_chart('FLAG_CONT_MOBILE', 'Cont Mobile')","cf6f723f":"\ncolored_and_styled_bar_chart('FLAG_MOBIL', 'Mobile')","dc8e96ef":"colored_and_styled_bar_chart('FLAG_PHONE', 'Phone')","2dfae2b3":"colored_and_styled_bar_chart('FLAG_EMAIL', 'Email')","58ce4aa6":"colored_and_styled_bar_chart('CNT_FAM_MEMBERS', '# of Family')","9c7ea828":"colored_and_styled_bar_chart('REGION_RATING_CLIENT', 'Region Rating')","7724227e":"colored_and_styled_bar_chart('REGION_RATING_CLIENT_W_CITY', 'Region Rating with City')","0b98cbcf":"colored_and_styled_bar_chart('WEEKDAY_APPR_PROCESS_START', 'Process Start Weekday')","1c1877a9":"colored_and_styled_bar_chart('HOUR_APPR_PROCESS_START', 'Process Start Hour')","4d7c6bbf":"colored_and_styled_bar_chart('ORGANIZATION_TYPE', 'Organization Type')","11f5b9f8":"data_app_train['FONDKAPREMONT_MODE'] = data_app_train['FONDKAPREMONT_MODE'].fillna('blank')\ncolored_and_styled_bar_chart('FONDKAPREMONT_MODE', 'FONDKAPREMONT_MODE')","d9718331":"data_app_train['HOUSETYPE_MODE'] = data_app_train['HOUSETYPE_MODE'].fillna('blank')\ncolored_and_styled_bar_chart('HOUSETYPE_MODE', 'HOUSETYPE_MODE')","fe4be9eb":"data_app_train['WALLSMATERIAL_MODE'] = data_app_train['WALLSMATERIAL_MODE'].fillna('blank')\ncolored_and_styled_bar_chart('WALLSMATERIAL_MODE', 'WALLSMATERIAL_MODE')","7bab4d66":"data_app_train['EMERGENCYSTATE_MODE'] = data_app_train['EMERGENCYSTATE_MODE'].fillna('blank')\ncolored_and_styled_bar_chart('EMERGENCYSTATE_MODE', 'EMERGENCYSTATE_MODE')","9e8c5400":"def histagram(col):\n    fig = px.histogram(data_app_train, x=col, color='TARGET')\n    fig.show()","1d69732f":"histagram('REGION_POPULATION_RELATIVE')","cc168fed":"data_app_train['DAYS_BIRTH_year'] = data_app_train['DAYS_BIRTH'] \/ -365\ndata_app_train['DAYS_EMPLOYED_year'] = data_app_train['DAYS_EMPLOYED'] \/ -365\ndata_app_train.loc[data_app_train['DAYS_EMPLOYED']==365243, 'DAYS_EMPLOYED_year'] = 0\ndata_app_train['DAYS_REGISTRATION_year'] = data_app_train['DAYS_REGISTRATION'] \/ -365\ndata_app_train['DAYS_ID_PUBLISH_year'] = data_app_train['DAYS_ID_PUBLISH'] \/ -365\ndata_app_train['DAYS_LAST_PHONE_CHANGE_year'] = data_app_train['DAYS_LAST_PHONE_CHANGE'] \/ -365","3dc4d040":"histagram('DAYS_BIRTH_year')","3c2c2e71":"histagram('DAYS_EMPLOYED_year')","80a66d11":"histagram('DAYS_REGISTRATION_year')","7dd9faa1":"histagram('DAYS_ID_PUBLISH_year')","f01f2fbc":"histagram('OWN_CAR_AGE')","688de0ca":"histagram('DAYS_LAST_PHONE_CHANGE')","ec108f2d":"* Gradually decrease when registration year increase","8317975b":"### FLAG_OWN_REALTY\n* Delete since Non-default ratio very similar","2b787a7d":"### NAME_HOUSING_TYPE\n* Combine values","66012063":"Very few # for those 4 types of income\nState servant and pensioners have similar default rate while working has highest default rate","cecdddda":"* 11.66, 19.41, 7.8\n* Very similar to region rating","8aed8e71":"## Days to Years","7fd1b330":"### NAME_TYPE_SUITE\n* drop na since only 1000+ rows\n* combine some column values","ffae3f88":"* Very similar and normal range","7ac339b5":"* No idea what the column means\n* 11.66, 19.375, 7.9\n* rating 1 => normal range, rating 2 => good range, rating 3 => bad range","04aedc42":"# EDA","8eba6226":"## Flag variable to cat","0879531c":"### NAME_INCOME_TYPE\n* Combine columns values\n","709932aa":"* No obvisous difference","ce31fe4f":"* non-default ratio \\> 10: Laborers, Managers, Drivers, Sales staff, Cleaning staff, Medicine staff, Security staff, High skill tech staff, Waiters\/barmen staff, Lowe-skill Laboreres, Realty agents\n* non-default ratio \\< 10: Core Staff, Accountants, Cooking staff, Private Service staff, secretaries, IT staff","a288bfe0":"* similar non-default ratio","cdd067d8":"* \\> 27, increase a lot\n* from 27 onwards, gradually decrease\n* \\> 65 sudden decrease","7dcefc46":"* Non-default ratio almost 10, except for Other B about 1.15","0b936ecb":"* Unknown has no defaults\n* separated is highly possible to default\n* other status has similar non-default ratio 10:1","1f0db127":"* ND ratio Minor diff","dd94fcaa":"* with employer phone, has increased the ND ratio a lot","610ea666":"### FLAG_OWN_CAR, OWN_CAR_AGE and DAYS_BIRTH\n* Flag own car but no own car age, Flag not own car but has own car age\n* OWN_CAR_AGE > DAYS_BIRTH\n* new feature: age_when_own_car","cdea039b":"## Bar Chart to show ratios","2b290738":"* Does not have obvious trends","fa7f7c95":"* similar trned for defaults and non-defaults\n* heap in 10.6-12.6","99a398ce":"### CODE_GENDER\n* Exclude XNA, which is not in test data and not material","4de360c7":"### NAME_EDUCATION_TYPE\n* combine Incomplete higher\tand Secondary \/ secondary special","44895af6":"### NAME_FAMILY_STATUS\n* drop unknown\n* combine values","6fb4ab09":"* Family with 2 members has the highest non-default ratio\n* Family members with 1, 3, 4, 5 has around 10 non-default ratio\n* \\> 5 does not have enough data points to make decision, set as one category to let the model learn.","3d3addb6":"### OCCUPATION_TYPE\n* Combine values","d67ea3b8":"* ND ratio super close","d2d9dc60":"* Gradually decrease\n* entry = 365243 are either pensioner or unemployed","d332edd7":"## Remove useless columns"}}