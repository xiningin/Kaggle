{"cell_type":{"69180e48":"code","038244f1":"markdown","691d0129":"markdown","84789144":"markdown","c02057dd":"markdown","c8eb8f8c":"markdown","19f1fa32":"markdown","d00cfd03":"markdown","85e7cb53":"markdown","f3640f4f":"markdown","3b792637":"markdown"},"source":{"69180e48":"burger = 0 #Initial value if they don't order\nfries = 0\nsoda = 0\nprint(\"Hi, welcome to Burger Land!\")   #Greeting the user\nprint(\"Burger....$2.00, Fries....$1.00, Soda....$0.50\")  #Showing the user the menu options\norder1 = input(\"Would you like to order anything?\")   #Asking the user IF they want anything\n\n#RT:  Program crashes for an answer of no or No.\n\nwhile order1 == \"Yes\" or order1 == \"yes\" or order2 == \"Yes\" or order2 == \"yes\":  #If they say yes when I ask would you like anything else (order 2) or when I initially ask if they want anything (order3), the loop will keep asking if they want anything else \n    order1 = input(\"What would you like today?\")   #Asking for order\n    if order1 == \"Burger\" or order1 == \"burger\" or order1 == \"Burgers\" or order1 == \"burgers\": #If they ask for a burger, I will ask...\n        serving = int(input(\"How many burgers would you like?\")) #How many they would like\n        burger = serving #The serving is the amount of burgers they want, so I set it equal to the variable \"burger\" so I can differentiate this number from the other numbers the user says. I did this with the fries and soda too\n    elif order1 == \"Fries\" or order1 == \"fries\":  #Same as the burger above\n        serving = int(input(\"How many fries would you like?\"))\n        fries = serving\n    elif order1 == \"Soda\" or order1 == \"soda\" or order1 == \"Sodas\" or order1 == \"sodas\":   #Same as the burger above\n        serving = int(input(\"How many sodas would you like?\"))\n        soda = serving\n\n    order2 = input(\"Would you like anything else?\") #Once they order, I will ask if they want anything else\n    if order2 == \"No\" or order2 == \"no\":  #If they say no after I ask if they want anything else, I will say...\n        print(\"Alright!\") #Alright\n\nburgerCost = burger*2.00 #Math for price times the amount of orders for burger, fries, and soda (next 2 lines as well)\nfriesCost = fries*1.00\nsodaCost = soda*.50\ntotal = burgerCost + friesCost + sodaCost #Cost added together\n\nif burger > 0:\n    print(\"The amount of burgers ordered:\", burger, \"and the total burger cost is $\", burgerCost) #Telling user the burger cost alone\nif fries > 0:\n    print(\"The amount of fries ordered:\", fries, \"and the total fries cost is $\", friesCost) #Telling user the fries cost alone\nif soda > 0:\n    print(\"The amount of sodas ordered:\", soda, \"and the total soda cost is $\", sodaCost) #Telling user the soda cost alone\n    \nprint(\"Your total cost is $\", total) #Telling user the total\nprint(\"Enjoy!\") #Goodbye!\n","038244f1":"The hardest part was figuring out the elif and ifs within the loop, and figuring out how to get the loop to stop. Also figuring out the order number aspect was hard. The easiest part was the math component and the print statements. I utilized my peer feedback because they pointed out that I had forgot to print the number of each item ordered, which was on the rubric. My plan had the burger, fries, and soda as the while loop when I actually changed it to be yes as the while loop. My planning and idea were okay, but the project overall was very hard to figure out with little guidance on the coding part. It took a lot of trial and error, which made my actual code look pretty different from my psuedocode plan. I would add more options to the menu if I had more time.","691d0129":"<table>\n  <tr>\n    <th>Requirement<\/th>\n    <th>Description<\/th>\n    <th>Points<\/th>\n    <th> Earned <\/th>\n  <\/tr>\n  <tr>\n    <td> Originality <\/td>\n    <td> All code is your own. Any code snippets that are not your own are properly cited. No more than 5 lines from any website. <\/td>\n    <td> 10 points <\/td>\n    <td> 0 <\/td>\n  <\/tr>\n  <tr>\n    <td> Planning & Reflection <\/td>\n    <td> The \"make a plan\" section includes a detailed description of how you plan to complete the project. Reflection is thoughtful and answers all required questions. <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n  <tr>\n    <td> Compiles <\/td>\n    <td> Code Compiles <\/td>\n    <td> 10 points <\/td>\n    <td> 5 <\/td>\n  <\/tr>\n  <tr>\n    <td> Comments <\/td>\n    <td> Code is properly commented <\/td>\n    <td> 10 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n    <tr>\n    <td> Conventions <\/td>\n    <td> Naming and style conventions are approriate <\/td>\n    <td> 10 points <\/td>\n    <td>  <\/td>\n  <\/tr>\n        <tr>\n    <td>  <\/td>\n    <td> <\/td>\n    <td><\/td>\n    <td><\/td>\n  <\/tr>\n      <tr>\n    <td> While Loop <\/td>\n    <td> A while loop is used to continually ask the user if they would like to order anything else <\/td>\n    <td> 20 points <\/td>\n    <td> 10 <\/td>\n  <\/tr>\n            <tr>\n    <td> Ordering <\/td>\n    <td> User can order a burger, fries, or soda. They are then asked how many they would like. <\/td>\n    <td> 10 points <\/td>\n    <td> 5 <\/td>\n            <tr>\n    <td> Reciept <\/td>\n    <td> A reciept is printed at the end. It includes the number of each item ordered, the cost of each item, and the total cost. All are accurate. <\/td>\n    <td> 20 points <\/td>\n    <td>10 <\/td>\n  <\/tr>\n\n  <\/tr>\n\n<\/table>\n\n---\n\n\"Final\" Score: 60\/100\n\n---","84789144":"Pseudocode written on paper\n1. Greeting\n2. Print the menu\n3. Ask to take order\n4. Ask how much of each item ordered\n5. While loop asking for anything else\n6. Ask how much of the item ordered\n7. Print receipt w\/ total of each item\n8. Add total and print\n9. Goodbye\n","c02057dd":"**Questions to Consider when Giving Feedback**\n* What is good about this project?\n* What could be better?\n* If the code does not run, why do you think that is?\n* What coding conventions could help make the code more readable?\n* Can you, as the user, input anything that will \u201cbreak\u201d the code?\n* What would be a cool thing to add to this project?","c8eb8f8c":"# Mini Project: Burger Land","19f1fa32":"# Code","d00cfd03":"Here, write a 1 paragraph reflection answering the following questions:\n\n*   What was the hardest part of this project?\n*   What was the easiesy part of this project?\n*   How did you utilize your peer feedback?\n* What was different between your plan and the final project?\n* How well did you plan? Was your idea too easy? Too hard? Just right?\n* If you had unlimited time, what would you add to this project?","85e7cb53":"# Reflection","f3640f4f":"# Make a Plan","3b792637":"## Project Instructions\nWrite a program that will display a final receipt for a customer order at Burger Land. The customer can enter 3 amounts for 3 of the following menu items they select:\n\nFirst, show the user the menu: \n```\nBurger Land Classic    $0.99\nCrinkle Fries          $0.79\nSippin' Soda           $1.09\n```\nThe program will keep track of how many they order of each item and the total price for each item and the total order price.\n\nYou will ask the user whether they would like to order more, which they would like to order, and how many. Print he reciept at the end.\n\n\n**Example Output**\n```\nBurger Land Classic    $0.99\nCrinkle Fries          $0.79\nSippin' Soda           $1.09\n\nWelcome to Burger Land! Would you like to order something? Burger\nHow many burgers? 2\n\nWould you like to order something else? yes\nWhat would you like? Fries\nHow many fries? 3\n\nWould you like to order something else? no\n\n*** Burger Land Reciept ***\n2 burgers: $1.98\n3 fries: $2.37\n0 sodas: $0.00\n\nTotal: $4.35\n```\n\n**Want to make it better?**\n* Use Python output formatting tools to align the reciept\n* Add more options (maybe loaded fries, tater tots, shakes, ...)\n* Add a 6\/% sales tax\n* Allow users to add ingredients (like extra cheese) for an added price\n* Anything else!"}}