{"cell_type":{"55845245":"code","1f4d056e":"code","18afd507":"code","1ecf53bb":"code","7e9bb863":"code","efd036e0":"code","d3dbda58":"code","c3f6fcd3":"code","2dd48ee9":"code","69863b51":"code","147ae3d2":"code","480091ad":"code","99f7ef13":"code","2d3c1a84":"code","e43c28a8":"code","7c0e0610":"code","3e981c53":"markdown","44acd461":"markdown","ee158944":"markdown","ec7c1784":"markdown","ad84cadc":"markdown","638d168f":"markdown","a4dd0bd0":"markdown","b249f2e1":"markdown","c4e2956d":"markdown","c11e9c8b":"markdown"},"source":{"55845245":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1f4d056e":"# import libraries","18afd507":"# load datasets\ntweet_path = '\/kaggle\/input\/datafest-tbilisi-2020\/ghana_nigeria_takedown_tweets.csv'\ntweet_data = pd.read_csv(tweet_path, encoding='utf-8', low_memory=False)\nuser_path = '\/kaggle\/input\/datafest-tbilisi-2020\/ghana_nigeria_takedown_users.csv'\nuser_data = pd.read_csv(user_path, encoding='utf-8', low_memory=False)\n","1ecf53bb":"# your code here\n# Most active retweeter\ntweet_data[tweet_data['is_retweet'] == True]['userid'].value_counts().head(1) # made sure there were no ties","7e9bb863":"# write result\na = 1149814579293241344","efd036e0":"# your code here\ntweet_data[tweet_data['like_count'].isnull()].shape\ntweet_data[tweet_data['quote_count'].isnull()].shape\ntweet_data[tweet_data['reply_count'].isnull()].shape\ntweet_data[tweet_data['retweet_count'].isnull()].shape\ntweet_data['like_count'] = tweet_data['like_count'].fillna(0)\ntweet_data['quote_count'] = tweet_data['quote_count'].fillna(0)\ntweet_data['reply_count'] = tweet_data['reply_count'].fillna(0)\ntweet_data['retweet_count'] = tweet_data['retweet_count'].fillna(0)\ntweet_data['pop'] = tweet_data['like_count'] + tweet_data['quote_count'] + tweet_data['reply_count'] + tweet_data['retweet_count']\ntweet_data['tweetid'].iloc[tweet_data['pop'].idxmax()] # made sure there were no ties","d3dbda58":"b = 1181205733662179328","c3f6fcd3":"# your code here\ntweet_data[tweet_data['is_retweet'] == False]['userid'].value_counts().head(1) # made sure there were no ties","2dd48ee9":"# write result\nc = 1144591876231749632","69863b51":"# your code here\n# first, I need to find the most active account, either original posts or retweets \n# Using boolean algebra, its (original == TRUE | retweet == TRUE) and in every tweet either of them is true\ntweets_from_pop = tweet_data.loc[tweet_data.userid == tweet_data['userid'].value_counts().idxmax()]\nimport ast\nuser_mentions_flat = tweets_from_pop['user_mentions'].apply(lambda arg: ast.literal_eval(arg))\nuser_mentions_df = pd.DataFrame({'mentions' : sum(user_mentions_flat,[])})\nuser_mentions_df['mentions'].value_counts().head(1) # made sure there were no ties","147ae3d2":"d = 'KHGCiIy+FzzobtKolFsF1fS24+dqZx7RmEEXLcNwPjQ='","480091ad":"# your code here\n# I guess something similar with handle of nested objects here\nhashtags_flat = tweet_data['hashtags'].apply(lambda arg: ast.literal_eval(arg))\nhashtags_flat_df = pd.DataFrame({'hash' : sum(hashtags_flat,[])})\nhashtags_flat_df['hash'].value_counts().head(1) # made sure there were no ties","99f7ef13":"e = 'BlackLivesMatter'","2d3c1a84":"# your code here\n# As in a previous task, using boolean algebra, its (original == TRUE | retweet == TRUE) and in every tweet either of them is true\n# So I should take all tweets in consideration\n# Now searching for the 10 most active accounts\ntweet_data['counter'] = 1\ntop_10 = tweet_data.groupby('userid').agg({'counter': sum}) \\\n    .sort_values(by='counter', ascending=False) \\\n    .reset_index() \\\n    ['userid'].loc[:9]\nuser_data[user_data['userid'].isin(top_10)]['user_reported_location'].value_counts()\n","e43c28a8":"f = ['Accra, Ghana', 'Worldwide', 'Washington, USA', 'Florida, USA']","7c0e0610":"results = pd.Series(\n    {\n        'a': a,\n        'b': b,\n        'c': c,\n        'd': d,\n        'e': e,\n        'f': f\n    }, name='results'\n)\n\nresults.index.name = 'key'\nresults.to_csv('\/kaggle\/working\/results.csv')","3e981c53":"*`who posted more original tweets (using the tweets dataset) (2 points)`*","44acd461":"*`identify the hashtag that received the most engagement (number of mentions) (3 points)`*","ee158944":"*`most mentioned author (userid) by the most active account posting either original posts or retweets (3 points)`*","ec7c1784":"*`reading datasets`*","ad84cadc":"*`most active retweeter (user id) (1 points)`*","638d168f":"*`libraries`*","a4dd0bd0":"*`most popular tweet --> return tweet id (1 points)`*","b249f2e1":"*`writing results`*","c4e2956d":"Identify the following cases using data analysis techniques.\n\n- `a` `-->` most active retweeter (user id) (1 points)\n- `b` `-->` most popular tweet --> return tweet id (1 points)\n- `c` `-->` who posted more original tweets (using the tweets dataset) (2 points)\n- `d` `-->` most mentioned author (userid) by the most active account posting either original posts or retweets (3 points)\n- `e` `-->` identify the hashtag that received the most engagement (number of mentions) (3 points)\n- `f` `-->` most common reported location by the top 10 most active accounts posting either original posts or retweets (5 points)","c11e9c8b":"*`most common reported location by the top 10 most active accounts posting either original posts or retweets (5 points)`*"}}