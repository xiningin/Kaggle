{"cell_type":{"b6d0e21f":"code","c8eab5ee":"code","8398985d":"code","ad2c6667":"code","c8d3c492":"code","be7bc1d9":"code","cbb39e9a":"code","f8a66ac2":"code","97f1121d":"code","0d56f39f":"code","b87dbf44":"code","8c07cdc8":"code","4f9dfbf0":"code","4d05a44e":"code","b16cd03a":"code","fade2ce5":"code","daf3b12e":"code","5903d925":"code","3b4d3578":"code","b9b897ae":"code","dd5cde34":"code","7f3f7db1":"code","be1dba5e":"code","d94e7bb6":"code","7cea31d0":"code","ccbc0b92":"code","0cc80f71":"code","6e438c7c":"code","bff2836a":"code","a109c2e9":"code","6a8d8000":"code","47587452":"markdown","32f41500":"markdown"},"source":{"b6d0e21f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport missingno as msno\nfrom pandas.api.types import CategoricalDtype","c8eab5ee":"df = pd.read_csv('\/kaggle\/input\/heart-stroke\/train_strokes.csv')\ndf","8398985d":"df.info()\n# observe missing values in 'bmi' and 'smoking_status'","ad2c6667":"print(df.isna().sum())\nprint(df.duplicated().sum())","c8d3c492":"print(df['age'].min(), df['age'].max())\nmsno.matrix(df.sort_values(by=['age']))","be7bc1d9":"# create a new column, age_group\n# 0-4, 5-12, 13-18, 19-25, 26-40, 41-60, >60\ndef group_age(age):\n    if age <= 4:\n        return '0-4'\n    if 5<=age<=12:\n        return '5-12'\n    if 13<=age<=18:\n        return '13-18'\n    if 19<=age<=25:\n        return '19-25'\n    if 26<=age<=40:\n        return '26-40'\n    if 41<=age<=60:\n        return '41-60'\n    else:\n        return '>60'\n\ndf['group_age'] = df['age'].apply(group_age)\ndf","cbb39e9a":"group_age_cat = ['0-4','5-12','13-18','19-25','26-40','41-60','>60']\n\nage_cat_type = CategoricalDtype(categories=group_age_cat, ordered=True)\ndf['group_age'] = df['group_age'].astype(age_cat_type)","f8a66ac2":"# trying to discover if there's any pattern in people with missing bmi\ndf_bmi_by_groupage = df.groupby('group_age')['bmi'].mean().apply(lambda x: round(x,2))\ndf_bmi_by_groupage","97f1121d":"df.loc[(df['group_age']=='0-4'),'bmi'] = df.loc[(df['group_age']=='0-4'),'bmi'].fillna(df_bmi_by_groupage.loc['0-4'])\ndf.loc[(df['group_age']=='5-12'),'bmi'] = df.loc[(df['group_age']=='5-12'),'bmi'].fillna(df_bmi_by_groupage.loc['5-12'])\ndf.loc[(df['group_age']=='13-18'),'bmi'] = df.loc[(df['group_age']=='13-18'),'bmi'].fillna(df_bmi_by_groupage.loc['13-18'])\ndf.loc[(df['group_age']=='19-25'),'bmi'] = df.loc[(df['group_age']=='19-25'),'bmi'].fillna(df_bmi_by_groupage.loc['19-25'])\ndf.loc[(df['group_age']=='26-40'),'bmi'] = df.loc[(df['group_age']=='26-40'),'bmi'].fillna(df_bmi_by_groupage.loc['26-40'])\ndf.loc[(df['group_age']=='41-60'),'bmi'] = df.loc[(df['group_age']=='41-60'),'bmi'].fillna(df_bmi_by_groupage.loc['41-60'])\ndf.loc[(df['group_age']=='>60'),'bmi'] = df.loc[(df['group_age']=='>60'),'bmi'].fillna(df_bmi_by_groupage.loc['>60'])","0d56f39f":"# ensure there's no more missing value in the column 'bmi'\ndf['bmi'].isna().sum()","b87dbf44":"print(df['smoking_status'].unique())\nprint(df['smoking_status'].value_counts())\n# 13292 NaN","8c07cdc8":"print(df.groupby('group_age')['id'].count())\nplt.bar(group_age_cat,df.groupby('group_age')['id'].count())\nplt.xlabel('Age Group')","4f9dfbf0":"df[df['group_age']=='0-4']['smoking_status'].isna().sum()","4d05a44e":"df[df['group_age']=='5-12']['smoking_status'].isna().sum()","b16cd03a":"# for children below age of 12, we will assume that they never smoked:\ndf.loc[(df['group_age']=='0-4'),'smoking_status'] = df.loc[(df['group_age']=='0-4'),'smoking_status'].fillna('never smoked')\ndf.loc[(df['group_age']=='5-12'),'smoking_status'] = df.loc[(df['group_age']=='5-12'),'smoking_status'].fillna('never smoked')","fade2ce5":"# however for the rest of the missing value, we are unable to make this assumption\n# instead we will accept the flaw and changed it as 'no record'\ndf.loc[:,['smoking_status']] = df.loc[:,['smoking_status']].fillna('no record')\ndf","daf3b12e":"df.dtypes","5903d925":"# there are quite a number of columns with object type\n# look into these columns\ndf_obj = df.select_dtypes(include=['object'])\ndf_obj.describe()","3b4d3578":"df_obj = df_obj.apply(lambda x: x.str.lower())\ndf_obj","b9b897ae":"# converted object datatype to category to reduce memory space\ndf_obj = df_obj.astype('category')\nprint(df_obj.dtypes)","dd5cde34":"df_obj['work_type'].value_counts()","7f3f7db1":"df_obj['smoking_status'].value_counts()","be1dba5e":"df_obj['gender'].value_counts()","d94e7bb6":"df_obj['Residence_type'].value_counts()","7cea31d0":"# looking into columns that is of type int64\ndf_num = df.select_dtypes(include=['int64'])\ndf_num.sample(5)","ccbc0b92":"print(df_num['hypertension'].value_counts())\nprint(df_num['heart_disease'].value_counts())\nprint(df_num['stroke'].value_counts())","0cc80f71":"df_num = df_num[['hypertension','heart_disease','stroke']].astype('category')\nprint(df_num.dtypes)","6e438c7c":"#compare both dataframes\nprint(df_obj.shape)\nprint(df_num.shape)","bff2836a":"# merging into new dataframe\ndf.columns","a109c2e9":"df_new = pd.concat([df[['age','avg_glucose_level','bmi']], df_obj, df_num], axis=1)\ndf_new","6a8d8000":"df_new.info()\n# reducing the memory usage by changing data type","47587452":"### changing column datatypes","32f41500":"### dealing with missing values"}}