{"cell_type":{"ad245ccf":"code","b3f4545e":"code","b868fd50":"code","ba4e4346":"code","1d4abb52":"code","fef23e3e":"code","b07fad26":"code","c5dcba21":"code","494d122c":"code","ef7f1b0c":"code","e3f1682c":"code","2bc6f8ef":"code","a3e9629f":"code","72319368":"code","d524686e":"code","128ab66e":"code","aa1804b6":"code","cafeafc5":"code","0197547f":"code","bd5114b7":"code","3b153a2c":"markdown","ea590d3f":"markdown","8e9cf5bd":"markdown","4a95d3b2":"markdown","98306a89":"markdown","21f542a4":"markdown","d0f56ebf":"markdown","1b1f5d22":"markdown","64250fd1":"markdown","cb8ae064":"markdown"},"source":{"ad245ccf":"# Load some necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","b3f4545e":"# Let's load the data from sklearn sample datasets\nfrom sklearn.datasets import load_breast_cancer","b868fd50":"cancer_data = load_breast_cancer()","ba4e4346":"cancer_data.keys()","1d4abb52":"# Description of cancer data\nprint(cancer_data['DESCR'])","fef23e3e":"# Let's create a dataframe from this data\ndf = pd.DataFrame(data = cancer_data.data, columns = cancer_data.feature_names)","b07fad26":"df.head()","c5dcba21":"# Let's import the preprocessing library\nfrom sklearn import preprocessing","494d122c":"# Let's make a standard scaler object\nscaler = preprocessing.StandardScaler()","ef7f1b0c":"scaler.fit(df)","e3f1682c":"scaled_data = scaler.transform(df)","2bc6f8ef":"# Let's check the scaled data\nscaled_data","a3e9629f":"# Let's import PCA\nfrom sklearn.decomposition import PCA","72319368":"# Let's make a PCA object\npca = PCA()","d524686e":"# Fitting and transforming the scaled data\npca.fit(scaled_data)\n\nx_pca = pca.transform(scaled_data)","128ab66e":"# Compute percentage of variation that each component of principal component accounts for\nper_var = np.round(pca.explained_variance_ratio_ * 100, decimals = 1)","aa1804b6":"# Labels for Principal components\nlabels = ['PC' + str(x) for x in range(1, len(per_var) + 1)]","cafeafc5":"# Let's plot the variation of the principal components\nfig = plt.figure(figsize = (15, 5))\nplt.bar(x = range(1, len(per_var) + 1), height = per_var, tick_label = labels)\nplt.xlabel('Percentage of explained variance')\nplt.ylabel('Principal Component')\nplt.title('Scree Plot')\nplt.tight_layout()\nplt.xticks(rotation = 'vertical')\nplt.show()","0197547f":"pca_df = pd.DataFrame(data = x_pca, index = cancer_data.target, columns = labels)","bd5114b7":"plt.scatter(pca_df.PC1, pca_df.PC2, c = cancer_data.target)\nplt.title('My PCA Graph')\nplt.xlabel(f'PC1 - {per_var[0]} %')\nplt.ylabel(f'PC2 - {per_var[1]} %')\nplt.show()","3b153a2c":"### PCA (Principal Component Analysis)","ea590d3f":"#### Here we are using the breast cancer dataset for PCA.","8e9cf5bd":"### Today, I am going to talk about PCA (Principal Component Analysis) which is a Dimensionality Reduction Technique.\n\n#### Principal Component Analysis, is one of the most useful data analysis methods out there. It can be used to identify patterns in complex datasets (having a large no. of features) and it can tell you what variables in your data are the most important.\n\n#### Learn more about PCA ---> https:\/\/www.youtube.com\/watch?v=FgakZw6K1QQ&list=PLblh5JKOoLUICTaGLRoHQDuF_7q2GfuJF&index=24","4a95d3b2":"#### Here we see that almost all the variation is along first two PC's. So, a 2D graph using PC1 and PC2 will do a good job representing the original data.","98306a89":"#### Let's draw the PC plot","21f542a4":"#### Here we can see that PC1 and PC2 are alone able to separate both target classes.","d0f56ebf":"### Target variable\n{0 : 'Malignant', 1 : 'Benign'}","1b1f5d22":"**** One thing to keep in mind always that you have to scale your data before applying PCA because if you not scale the data then it may happen than the features with higher range of values will dominate over features with lower range of values ****","64250fd1":"Now we have our data scaled. Let's apply PCA on it","cb8ae064":"### If you liked the notebook. Then give an upvote"}}