{"cell_type":{"92abae37":"code","14d010a0":"code","f8141c98":"code","f58aa390":"code","8b8f8428":"code","cfd2eb62":"code","2424c5d3":"code","13bd0ec8":"code","8d1bf3e6":"code","5b512f53":"code","be08b290":"code","28c8ed8a":"code","9c66082d":"code","16f9671e":"code","1d01ee12":"code","b703368b":"markdown","16c11025":"markdown","4477c066":"markdown","e0d0b6ea":"markdown","ad6373c9":"markdown","4e641e18":"markdown","6b556e55":"markdown","982dd9dd":"markdown","337c574c":"markdown","d125a652":"markdown","41ec51d2":"markdown","9361aa43":"markdown","7a255ce0":"markdown","0600cf50":"markdown","b754ee2a":"markdown","4c974a58":"markdown","a6a65f28":"markdown","2f213ce5":"markdown","37fa3647":"markdown","ddabd02e":"markdown","bac1f092":"markdown","4a77fec2":"markdown"},"source":{"92abae37":"#Data Processing\nimport numpy as np\nimport pandas as pd\npd.set_option('display.max_columns', None)\nimport sqlite3 #DBMS\n\n#Visualization\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt \nimport matplotlib.dates as mdates\nimport seaborn as sns\n%matplotlib inline\n\n#Set visualization style\nsns.set(style=\"whitegrid\")\nmpl.rcParams['figure.figsize'] = (6, 6)\n\n# Ignore useless warnings\nimport warnings\nwarnings.filterwarnings('ignore')","14d010a0":"#Run queries\ndef run_query(q):\n    with sqlite3.connect(db) as conn:\n        return pd.read_sql(q, conn)\n\n#Modify the database\ndef run_command(c):\n    with sqlite3.connect(db) as conn:\n        conn.isolation_level = None\n        conn.execute(c)\n\n#Show database structure \ndef show_tables():\n    q = '''\n    SELECT\n        name,\n        type\n    FROM sqlite_master\n    WHERE type IN (\"table\",\"view\");\n    '''\n    return run_query(q)","f8141c98":"db = '..\/input\/chinook\/chinook.db'\n\nshow_tables()","f58aa390":"q = '''\nWITH countries_invoices AS\n    (\n     SELECT\n       (CASE\n           WHEN (SELECT count(*)\n                 FROM customer\n                 WHERE country = c.country\n                ) = 1 THEN \"Other\"\n           ELSE c.country\n           END) AS country,\n       c.customer_id,\n       il.*\n     FROM invoice_line il\n     INNER JOIN invoice inv ON inv.invoice_id = il.invoice_id\n     INNER JOIN customer c ON c.customer_id = inv.customer_id\n    )\n\nSELECT\n    country,\n    COUNT(DISTINCT customer_id) num_customers,\n    ROUND(SUM(unit_price),2) 'total_sales ($)',\n    ROUND(SUM(unit_price) \/ count(distinct customer_id),2) 'avg_customer_lifetime_value ($)',\n    ROUND(SUM(unit_price) \/ count(distinct invoice_id),2) 'avg_order($)'\nFROM countries_invoices\nGROUP BY country\nORDER BY 2 DESC\n;\n'''\n\ncountry_sales = run_query(q)\ncountry_sales","8b8f8428":"#Plot sales information for each Country\ncountry_sales.set_index('country', inplace=True)\nfig, ax = plt.subplots(figsize=(10,10))\ncountry_sales.plot.bar(subplots=True, ax=ax, sharex=True, legend=None)\nplt.show()","cfd2eb62":"q = '''\nSELECT \n    at.name artist_name,\n    SUM(il.quantity) num_tracks_sold\nFROM invoice_line il\nINNER JOIN track t ON t.track_id=il.track_id\nINNER JOIN album al ON al.album_id=t.album_id\nINNER JOIN artist at ON at.artist_id=al.artist_id\nGROUP BY at.artist_id\nORDER BY 2 DESC\n'''\n\nartist_sold = run_query(q)\nartist_sold","2424c5d3":"#Plot Distribution of Tracks Sold per Artist\nax = artist_sold['num_tracks_sold'].hist(bins=np.arange(0,220,20))\nax.set_xticks(np.arange(0,220,20))\nax.set_title('Number of Tracks Sold per Artist \\n Distribution')\nax.set_xlabel('Number of Tracks Sold')\nax.set_ylabel('Number of Artists')\nplt.show()","13bd0ec8":"q = '''\nWITH usa_tracks_sold AS\n     (\n      SELECT \n          il.quantity,\n          g.name genre\n      FROM invoice_line il\n      INNER JOIN track t ON il.track_id=t.track_id\n      INNER JOIN genre g ON t.genre_id=g.genre_id\n      INNER JOIN invoice i ON il.invoice_id=i.invoice_id\n      INNER JOIN customer c ON i.customer_id=c.customer_id\n      WHERE c.country='USA'\n     )\n     \nSELECT \n    genre,\n    COUNT(quantity) tracks_sold,\n    ROUND(CAST(COUNT(*) AS FLOAT)\/(SELECT COUNT (*) FROM usa_tracks_sold)*100,1) percentage_sold\nFROM usa_tracks_sold\nGROUP BY 1\nORDER BY 2 DESC\n'''\n\ntop_genres_usa = run_query(q)\ntop_genres_usa","8d1bf3e6":"#Group least popular genres into 'Other category' and prepare for plotting\nother = top_genres_usa.iloc[10:].sum()\nother['genre']='Other'\nother = pd.DataFrame(other).T\ntop_genres_usa.drop(top_genres_usa.index[10:], inplace=True)\ntop_genres_usa = pd.concat([top_genres_usa, other])\ntop_genres_usa.set_index('genre', inplace=True)","5b512f53":"#Plot most popular genres\nfig, ax = plt.subplots()\ntop_genres_usa['tracks_sold'].iloc[::-1].plot.barh(ax=ax)\nax.set_xlim(0,601)\nax.set_xlabel('Num Tracks Sold')\nax.set_ylabel('Genre')\nax.set_title('Number of Tracks Sold per Genre')\nplt.show()","be08b290":"q = '''\nWITH purchases_0 AS\n    (\n     SELECT\n         inv.invoice_id,\n         t.track_id,\n         a.album_id\n    FROM invoice inv\n    INNER JOIN invoice_line il ON inv.invoice_id=il.invoice_id\n    INNER JOIN track t ON t.track_id=il.track_id\n    INNER JOIN album a ON a.album_id=t.album_id\n    ),\n    \n    album_lengths AS\n    (\n     SELECT\n         al.album_id,\n         COUNT(t.track_id) num_tracks_album\n     FROM track t\n     INNER JOIN album al ON al.album_id=t.album_id\n     GROUP BY 1\n    ),\n    \n    purchases AS\n    (\n     SELECT \n         p.*, \n         a.num_tracks_album\n     FROM purchases_0 p\n     INNER JOIN album_lengths a ON p.album_id=a.album_id\n    ),\n    \n    album_purchases AS\n    (\n     SELECT\n         purchases.invoice_id,\n         CASE\n             WHEN (COUNT(DISTINCT(album_id))=1 AND COUNT(*)=num_tracks_album) THEN 'yes'\n             ELSE 'no'\n     END AS full_album_purchase\n     FROM purchases\n     GROUP BY invoice_id\n    )\n    \nSELECT\n    full_album_purchase,\n    COUNT(invoice_id) num_invoices,\n    ROUND(\n        CAST(COUNT(invoice_id) AS FLOAT) \/ (SELECT COUNT(*) \n                                            FROM album_purchases), 2) percentage_total\nFROM album_purchases\nGROUP BY full_album_purchase\n'''\n\nalbum_purchase = run_query(q)\nalbum_purchase","28c8ed8a":"q = '''\nWITH em_sales AS\n        (\n        SELECT\n            e1.first_name || ' ' || e1.last_name name,\n            e1.title,\n            e2.first_name || ' ' || e2.last_name supervisor_name,\n            e2.title supervisor_title,\n            e1.birthdate,\n            e1.hire_date,\n            c.country country_sale,\n            i.total\n        FROM employee e1\n        LEFT JOIN employee e2 ON e1.reports_to=e2.employee_id\n        INNER JOIN customer c ON e1.employee_id=support_rep_id\n        INNER JOIN invoice i ON c.customer_id=i.customer_id\n        )\nSELECT\n    name, title, supervisor_name, supervisor_title, birthdate, hire_date, country_sale,\n    COUNT(*) number_of_sales,\n    SUM(total) value_sales\n    \nFROM em_sales\nGROUP BY name\nORDER BY value_sales DESC\n'''\nrun_query(q)","9c66082d":"q = '''\nWITH artist_playlists AS(\n    SELECT\n        ar.name artist_name,\n        t.name track_name,\n        p.playlist_id\n    FROM artist ar\n    INNER JOIN album al ON ar.artist_id=al.artist_id\n    INNER JOIN track t ON al.album_id=t.album_id\n    INNER JOIN playlist_track plt ON plt.track_id = t.track_id\n    INNER JOIN playlist p ON p.playlist_id=plt.playlist_id\n    )\nSELECT\n    artist_name,\n    COUNT(*) num_appearances,\n    COUNT(DISTINCT(playlist_id)) num_playlists\nFROM artist_playlists\nGROUP BY artist_name\nORDER BY num_appearances DESC\n'''\n\nrun_query(q)","16f9671e":"q = '''\nWITH tracks_sold AS\n    (\n    SELECT \n        t.track_id, \n        CASE\n            WHEN (COUNT(i.invoice_line_id)>0) THEN 'Yes'\n            ELSE 'No'\n        END AS sold\n\n    FROM track t\n    LEFT JOIN invoice_line i ON t.track_id=i.track_id\n    GROUP BY 1\n    )\n\nSELECT sold, \n       ROUND(\n           CAST(COUNT(*) AS FLOAT) \/ (SELECT COUNT(*) \n                                      FROM tracks_sold) * 100 , 1) percentage_sold\nFROM tracks_sold\nGROUP BY sold\n'''\n\nrun_query(q)","1d01ee12":"q = '''\nWITH tracks_protected AS(\n    SELECT\n        il.invoice_line_id,\n        il.track_id,\n        il.unit_price,\n        il.quantity,\n        CASE\n            WHEN (m.name LIKE 'protected%') THEN 'Yes'\n            ELSE 'No'\n        END AS protected    \n    FROM invoice_line il\n    INNER JOIN track t ON il.track_id=t.track_id\n    INNER JOIN media_type m ON t.media_type_id=m.media_type_id\n    )\nSELECT \n    protected, \n    ROUND(\n        CAST(COUNT(*) AS FLOAT)\/(SELECT COUNT(*) \n                                 FROM tracks_protected)*100, 1) percentage_sold\nFROM tracks_protected\nGROUP BY protected    \n'''\n\nrun_query(q)","b703368b":"# Import Libraries","16c11025":"# 2. Who are the most popular artists worldwide?","4477c066":"In this section we'll group the invoices by country and identify which countries have the most customers and highest volume of sales.","e0d0b6ea":"We can see that most artists have sold less than 20 tracks in total, with just a few who have sold more than 120. The most popular genre seems to be Rock, with Queen, Jimy Hendrix and Red Hot Chili Peppers leading the rankings.","ad6373c9":"There is a 25% difference in the total value of sales between Jane (the top employee) and Steve (the bottom employee). The difference could be due to their different hiring dates.","4e641e18":"# Answering Business Questions using SQL ","6b556e55":"Only less than 20% of invoices were full album purchases. More than 80% of sales were either single tracks, a mix of tracks from several albums or several tracks from a single album (but not the full album).","982dd9dd":"Roughly 50% of all available tracks in the store have been purchased at least once. Let's see wether being protected or not influences if a track is more likely to be sold:","337c574c":"This is quite a small online music store, with only 59 customers in total. We can see that the country with the most customers is the USA. The biggest spenders are in the Czech Republic. However, the sample is not large enough to give us enough confidence.","d125a652":"# 4. What percentage of invoices are full album purchases?","41ec51d2":"There are 10 tables in the database, containing sales information about the company. They are linked through the primary keys shown in yellow on the diagram below. The invoices data is linked with the customer information, which is also linked to the sales representatives' information. It is also linked to the tables that describe the songs' length, artist, album, etc.","9361aa43":"# 5. Which employees sell the most and why?","7a255ce0":"# 3. Which are the most popular music genres in the USA?","0600cf50":"# 1. Analyse Sales by Country","b754ee2a":"In this project we'll pretend we are Data Analysts working for an online music store called Chinook. We are asked several business questions that we need to answer using our knowledge of SQL and Python. The available database is called *chinook.db*. This project is part of the Dataquest Data Scientist Path.","4c974a58":"More than 90% of tracks that are not protected have been sold at least once, whereas for protected track it's less than 10%. There is clearly a correlation, however this could be due to protected tracks belonging to less popular genres or artists so we'd need to further investigate this.","a6a65f28":"# 6. Which artist is used in the most playlists?","2f213ce5":"Iron Maiden has the most number of songs in total across all playlists in the store.","37fa3647":"![image.png](attachment:image.png)","ddabd02e":"# 7. How many tracks have been purchased?","bac1f092":"# Explore the Database","4a77fec2":"Rock is by far the most popular music genre in the USA, representing the majority of the sales, followed by Punk and Metal. This seems to be a store popular with fans of the electric guitar."}}