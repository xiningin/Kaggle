{"cell_type":{"83d03b81":"code","46a3ab01":"code","84babdfd":"code","df9ed50a":"code","5e455c0f":"code","471eb99d":"code","b75f1205":"code","1c393f68":"markdown"},"source":{"83d03b81":"%matplotlib inline","46a3ab01":"from matplotlib import pyplot as plt\nfrom gluoncv import model_zoo, data, utils","84babdfd":"net = model_zoo.get_model('mask_rcnn_fpn_resnet101_v1d_coco', pretrained=True)","df9ed50a":"from PIL import Image\nimport pandas as pd\nimport os\nimport numpy as np","5e455c0f":"image_file = os.listdir(\"..\/input\/test\/\")","471eb99d":"pth = '..\/input\/test\/'+image_file[84822]\nImage.open(pth)","b75f1205":"x, orig_img = data.transforms.presets.rcnn.load_test(pth)\n\nids, scores, bboxes, masks = [xx[0].asnumpy() for xx in net(x)]\n\nwidth, height = orig_img.shape[1], orig_img.shape[0]\nmasks = utils.viz.expand_mask(masks, bboxes, (width, height), scores)\norig_img = utils.viz.plot_mask(orig_img, masks)\n\n# identical to Faster RCNN object detection\nfig = plt.figure(figsize=(20, 20))\nax = fig.add_subplot(1, 1, 1)\nax = utils.viz.plot_bbox(orig_img, bboxes, scores, ids,\n                         class_names=net.classes, ax=ax)\nplt.show()","1c393f68":"# Need to go a long way.\n# see you soon. :)"}}