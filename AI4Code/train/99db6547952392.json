{"cell_type":{"70887b0d":"code","69078f52":"code","984103ef":"code","6eddcb9b":"code","b5c5faec":"code","cc231a6f":"code","253c9e71":"code","0213c11a":"code","4aa54289":"code","3c05ae09":"code","8d3cbc0a":"code","6f3dd20c":"code","6c79d976":"code","ce580433":"code","6dc92365":"code","a8a2db79":"code","f27145aa":"code","0cf76dc6":"code","e56a9a17":"code","ee876ffe":"code","2987ab9f":"code","c1e5db42":"code","f2ca8782":"code","533726d9":"code","8ba740e7":"code","acc96954":"code","0c541739":"code","4b3eb116":"code","a49110ce":"code","57c4d8c9":"code","b9e61e56":"code","982f7df1":"code","d1c359f4":"code","6d120c76":"code","eed5fae4":"code","d64a30b8":"code","5bb2479c":"code","a0ef4c3b":"code","5f2983cd":"code","81b8283a":"code","17363e55":"code","7fc45063":"code","1e1bf82d":"code","66c41a61":"code","d8e33085":"markdown","40fa7edc":"markdown","778c9f36":"markdown","e80854e6":"markdown","02333df0":"markdown","7a91cbe1":"markdown","0d157cdd":"markdown","4efeac5c":"markdown","baf9f46b":"markdown","209b968f":"markdown","bf1eb3da":"markdown","3afe11bc":"markdown","1a09112a":"markdown","a41d836b":"markdown","dffc605a":"markdown","40def038":"markdown","aafddb05":"markdown","9f8d1a73":"markdown","34f5c8dc":"markdown","fc9c90b3":"markdown","3d6c213e":"markdown","08c5cef7":"markdown","115ac56a":"markdown","957ea400":"markdown","461b0c59":"markdown","f3971cd8":"markdown","3674db96":"markdown","2b39050d":"markdown","d9a826ab":"markdown","b39bd6e6":"markdown","3e2b3083":"markdown"},"source":{"70887b0d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport sklearn\nimport scipy","69078f52":"project_data=pd.read_csv('..\/input\/new-york-city-airbnb-open-data\/AB_NYC_2019.csv')\n","984103ef":"project_data.head(5)","6eddcb9b":"# finding Number of rows and columns\nprint(\"Number of data points in resources data\", project_data.shape)\nprint(\"=\"*100)\n","b5c5faec":"# columns\/features in the dataset\nprint(\"Names of features are:- \")\nprint(project_data.columns.values)","cc231a6f":"#to check about the data type of the columns\nproject_data.info()","253c9e71":"#to check for null values\nnp.sum(project_data.isna())","0213c11a":"#Neighbourhood Group\nproject_data.neighbourhood_group.unique()","4aa54289":"# to find the correlation between the features\nproject_data.corr()","3c05ae09":"#to get the details like number of observations, min,max,25%,50%,75% ,mean,std\nproject_data.describe()","8d3cbc0a":"#distribution of price less than 2000\nsns.distplot(project_data[project_data.price<2000].price)\nplt.title('Distribution of price (only where price<2000)')\nplt.show()","6f3dd20c":"#to check the distribution of minimum nights\nsns.distplot(project_data[project_data.minimum_nights<20].minimum_nights)\nplt.title('Distribution of Minimum nights ')\nplt.show()","6c79d976":"# Histograms for univariate Analysis\nplt.hist(project_data['number_of_reviews'])\nplt.show()","ce580433":"sns.distplot(project_data[project_data.number_of_reviews<50].number_of_reviews)\nplt.title('Distribution of number_of_reviews ')\nplt.show()","6dc92365":"# Histograms for univariate Analysis\nplt.hist(project_data['availability_365'])\nplt.show()","a8a2db79":"#https:\/\/www.kaggle.com\/adikeshri\/what-s-up-with-new-york\nsns.countplot(project_data['neighbourhood_group'])\nplt.title('boroughs wise listings in NYC')\nplt.xlabel('boroughs name')\nplt.ylabel('Count')\nplt.show()","f27145aa":"sns.countplot(project_data.sort_values('room_type').room_type)\nplt.title('Room type count')\nplt.xlabel('Room type')\nplt.ylabel('Count')\nplt.show()","0cf76dc6":"# Histograms for univariate Analysis\nplt.hist(project_data['reviews_per_month'])\nplt.show()","e56a9a17":"project_data.plot(kind='scatter', x='price', y='minimum_nights') ;\nplt.show()","ee876ffe":"project_data.plot(kind='scatter', y='price', x='calculated_host_listings_count') ;\nplt.show()","2987ab9f":"project_data.plot(kind='scatter', y='price', x='number_of_reviews') ;\nplt.show()","c1e5db42":"project_data.plot(kind='scatter', y='price', x='availability_365') ;\nplt.show()","f2ca8782":"project_data.plot(kind='scatter', y='price', x='reviews_per_month') ;\nplt.show()","533726d9":"# soure: previous project\nsns.set_style(\"whitegrid\");\nsns.FacetGrid(project_data,hue='room_type',size=5).map(plt.scatter,'price','minimum_nights').add_legend()\nplt.show()","8ba740e7":"# pairwise scatter plot: Pair-Plot.\nplt.close();\nsns.set_style(\"whitegrid\");\nsns.pairplot(project_data,hue='room_type',vars=['price','minimum_nights','availability_365'],size=6,diag_kind='kde');\nplt.legend()\nplt.show() \n# NOTE: the diagnol elements are PDFs for each feature. PDFs are expalined below.","acc96954":"# pairwise scatter plot: Pair-Plot.\nplt.close();\nsns.set_style(\"whitegrid\");\nsns.pairplot(project_data,hue='neighbourhood_group',vars=['price','minimum_nights','availability_365'],size=6,diag_kind='kde');\nplt.legend()\nplt.show() \n# NOTE: the diagnol elements are PDFs for each feature. PDFs are expalined below.","0c541739":"counts,bin_edges=np.histogram(project_data['minimum_nights'],bins=10,density=True)\npdf=counts\/(sum(counts))\ncdf=np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf)\nplt.show()\nprint(np.percentile(project_data['minimum_nights'],95))","4b3eb116":"project_data['price_500']=project_data[project_data.price<500].price\nsns.FacetGrid(project_data,hue='neighbourhood_group',size=5).map(sns.distplot,'price_500').add_legend()\nplt.show()","a49110ce":"project_data.columns","57c4d8c9":"project_data.drop(['id', 'name', 'host_id', 'host_name', 'neighbourhood', 'last_review', 'reviews_per_month','price_500'], axis=1, inplace=True)","b9e61e56":"project_data.head(2)","982f7df1":"from sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\n\nY = project_data['price']\nX = project_data[['neighbourhood_group', 'longitude', 'room_type', 'minimum_nights','availability_365','latitude', 'calculated_host_listings_count']]\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.3)\nX_cv,X_test,Y_cv,Y_test = train_test_split(X_train, Y_train, test_size = 0.3)\nprint(\"Train set shape:\")\nprint(X_train.shape)\nprint(Y_train.shape)\nprint(\"=\"*50)\nprint(\"Test set shape:\")\nprint(X_test.shape)\nprint(Y_test.shape)","d1c359f4":"from sklearn.preprocessing import LabelBinarizer\n\nlb = LabelBinarizer()\nlb_train_ng= lb.fit_transform(X_train['neighbourhood_group'])\nlb_test_ng= lb.transform(X_test['neighbourhood_group'])\n\nlb_train_ng = pd.DataFrame(lb_train_ng, columns=lb.classes_)\nlb_test_ng = pd.DataFrame(lb_test_ng, columns=lb.classes_)\n\nprint(\"After vectorizations\")\nprint(lb_train_ng.shape, Y_train.shape)\nprint(lb_test_ng.shape, Y_test.shape)","6d120c76":"from sklearn.preprocessing import LabelBinarizer\n\nlb = LabelBinarizer()\nlb_train_rt= lb.fit_transform(X_train['room_type'])\nlb_test_rt= lb.transform(X_test['room_type'])\n\nlb_train_rt = pd.DataFrame(lb_train_rt, columns=lb.classes_)\nlb_test_rt = pd.DataFrame(lb_test_rt, columns=lb.classes_)\n\nprint(\"After vectorizations\")\nprint(lb_train_rt.shape, Y_train.shape)\nprint(lb_test_rt.shape, Y_test.shape)","eed5fae4":"#source Kaggle\nfrom sklearn.preprocessing import StandardScaler\nstandard_vec = StandardScaler(with_mean = False)\n# this will rise an error Expected 2D array, got 1D array instead: \n# array=[105.22 215.96  96.01 ... 368.98  80.53 709.67].\n# Reshape your data either using \n# array.reshape(-1, 1) if your data has a single feature \n# array.reshape(1, -1)  if it contains a single sample.\nstandard_vec.fit(X_train['availability_365'].values.reshape(-1,1))\n\nX_train_av_std = standard_vec.transform(X_train['availability_365'].values.reshape(-1,1))\nX_test_av_std = standard_vec.transform(X_test['availability_365'].values.reshape(-1,1))\n\nprint(\"After vectorizations\")\nprint(X_train_av_std.shape, Y_train.shape)\nprint(X_test_av_std.shape, Y_test.shape)\n","d64a30b8":"#source Kaggle\nfrom sklearn.preprocessing import StandardScaler\nstandard_vec = StandardScaler(with_mean = False)\n\nstandard_vec.fit(X_train['calculated_host_listings_count'].values.reshape(-1,1))\n\nX_train_chl_std = standard_vec.transform(X_train['calculated_host_listings_count'].values.reshape(-1,1))\nX_test_chl_std = standard_vec.transform(X_test['calculated_host_listings_count'].values.reshape(-1,1))\n\nprint(\"After vectorizations\")\nprint(X_train_chl_std.shape, Y_train.shape)\nprint(X_test_chl_std.shape, Y_test.shape)\n","5bb2479c":"#source Kaggle\nfrom sklearn.preprocessing import StandardScaler\nstandard_vec = StandardScaler(with_mean = False)\nstandard_vec.fit(X_train['minimum_nights'].values.reshape(-1,1))\n\nX_train_mn_std = standard_vec.transform(X_train['minimum_nights'].values.reshape(-1,1))\n\nX_test_mn_std = standard_vec.transform(X_test['minimum_nights'].values.reshape(-1,1))\n\nprint(\"After vectorizations\")\nprint(X_train_mn_std.shape, Y_train.shape)\nprint(X_test_mn_std.shape, Y_test.shape)\n","a0ef4c3b":"#source Kaggle\nfrom sklearn.preprocessing import StandardScaler\nstandard_vec = StandardScaler(with_mean = False)\n\nstandard_vec.fit(X_train['latitude'].values.reshape(-1,1))\n\nX_train_l_std = standard_vec.transform(X_train['latitude'].values.reshape(-1,1))\nX_test_l_std = standard_vec.transform(X_test['latitude'].values.reshape(-1,1))\n\nprint(\"After vectorizations\")\nprint(X_train_l_std.shape, Y_train.shape)\nprint(X_test_l_std.shape, Y_test.shape)\n","5f2983cd":"#source Kaggle\nfrom sklearn.preprocessing import StandardScaler\nstandard_vec = StandardScaler(with_mean = False)\nstandard_vec.fit(X_train['longitude'].values.reshape(-1,1))\n\nX_train_lo_std = standard_vec.transform(X_train['longitude'].values.reshape(-1,1))\nX_test_lo_std = standard_vec.transform(X_test['longitude'].values.reshape(-1,1))\n\nprint(\"After vectorizations\")\nprint(X_train_lo_std.shape, Y_train.shape)\nprint(X_test_lo_std.shape, Y_test.shape)\n","81b8283a":"# merge two sparse matrices: https:\/\/stackoverflow.com\/a\/19710648\/4084039\nfrom scipy.sparse import hstack\nX_tr = hstack((lb_train_ng,lb_train_rt,X_train_av_std,X_train_chl_std,X_train_mn_std,X_train_l_std,X_train_lo_std)).tocsr()\nX_te = hstack((lb_test_ng,lb_test_rt,X_test_av_std,X_test_chl_std,X_test_mn_std,X_test_l_std,X_test_lo_std)).tocsr()\n\nprint(\"Final Data matrix\")\nprint(X_tr.shape, Y_train.shape)\nprint(X_te.shape, Y_test.shape)\nprint(\"=\"*100)","17363e55":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error,r2_score\n\nlin_model = LinearRegression().fit(X_tr, Y_train)\ny_train_predict = lin_model.predict(X_tr)\nrmse = (np.sqrt(mean_squared_error(Y_train, y_train_predict)))\nr2 = r2_score(Y_train, y_train_predict)","7fc45063":"\nprint(\"The model performance for training set\")\nprint(\"--------------------------------------\")\nprint('R2 score is {}'.format(r2*100))\nprint(\"\\n\")\n\n# model evaluation for testing set\ny_test_predict = lin_model.predict(X_te)\nrmse = (np.sqrt(mean_squared_error(Y_test, y_test_predict)))\nr2 = r2_score(Y_test, y_test_predict)\n\nprint(\"The model performance for testing set\")\nprint(\"--------------------------------------\")\nprint('R2 score is {}'.format(r2*100))","1e1bf82d":"error_frame = pd.DataFrame({'Actual': np.array(Y_test).flatten(), 'Predicted': y_test_predict.flatten()})\nerror_frame.head(10)","66c41a61":"\nprint(\"Actul Vs Predicted\")\nplt.scatter(Y_test, y_test_predict)\nplt.xlabel(\"Prices: $Y_i$\")\nplt.ylabel(\"Predicted prices: $\\hat{Y}_i$\")\nplt.title(\"Prices vs Predicted prices: $Y_i$ vs $\\hat{Y}_i$\")\nplt.show()","d8e33085":"Observations:\n    Almost 95% of them have reviews per month less than 10","40fa7edc":"Obseravtion:\n\n Price of Most of the Listings are 10-200\n","778c9f36":"***Observations:-***            \n1.The average price is 152 dollars                              \n2.There is a 50% chance that the rooms will be available for atleast 45 days                   \n3.75% of people spend 5 nights                                                  \n4.Average Number of Host listings are 7       ","e80854e6":"Distributions plots Source Code:-                                            \n https:\/\/www.kaggle.com\/adikeshri\/what-s-up-with-new-york","02333df0":"Observations:-                                                    \n    There are less than number of listings which has more number of days(<50) of availability","7a91cbe1":"## Histograms for univariate Analysis","0d157cdd":"# Summary","4efeac5c":"observations:-\n    95% of Minimum Number of nights are less than 30days","baf9f46b":"# Data Preprocessing","209b968f":"### from the above analysis it is clear that 'id', 'name', 'host_id', 'host_name', 'neighbourhood', 'last_review', 'reviews_per_month' has no impact or correlation to the price column  so  I am Ignoring the above columns \n","bf1eb3da":"\nObservation:-                                           \nMost of the Listings are Entire Home\/apartments and private rooms ","3afe11bc":"\n1.   Price of Most of the Listings are 10-200\n2.   Price of Shared room is lower than private room and entire house\/ apartment\n3.   price of Rooms in Manhattan and Brooklyn boroughs are more than the rooms in boroughs\n4.   75% of people spend 5 nights\n5.   There is a 50% chance that the rooms will be available for atleast 45 days\n6.Manhattan has Highest number of listings\n7.Brooklyn has more Number of listings after Manhattan\n8.Most of the Listings are Entire Home\/apartments and private rooms\n9.95% of them have reviews per month less than 10\n10.Most(75%) of the host listing count are less than 50\n11.Bronx has less number of night stays as compared to other","1a09112a":"## Encoding Categorical Values","a41d836b":"Observations:                                                   \n\n    price of Rooms in Manhattan and Brooklyn boroughs are more than the rooms in boroughs","dffc605a":"Note:                                                                                                                        \n Positive Value Indicates Positive Relationship(if x increases then y increases)                                                               \n Negative Value Indicates Negative Relationship (if x increases then y Decreases)","40def038":"Inspiration                                                                           \n4.Is there any noticeable difference of traffic among different areas and what could be the reason for it?                                                                                                                                  \nAns:-Yes, there is a huge traffic difference among (Brooklyn , Manhattan) and ( queens staten Island Bronx)\n     \nManhattan has Highest number of listings because \n\nManhattan is the center of theater, visual arts, television, museums, finance, advertising, and much more Which attracts Many Tourits \n\nBrooklyn has  more Number of listings after Manhattan because Brooklyn is Famous for its freak shows and rickety old roller coaster, the legendary beach is also home to the New York Aquarium.","aafddb05":"Observations:\n    Most of the nights stayed are mostly 2-7 days","9f8d1a73":"## Univariate Analysis","34f5c8dc":"## Concatinating features","fc9c90b3":"## Reading the Data","3d6c213e":"Observations:                                             \n  There are More number listings with less Number of reviews(0-10) ","08c5cef7":"##  2-D Scatter Plots","115ac56a":"# Bi-variate Analysis","957ea400":"Observations:\n    Bronx has less number of night stays as compared to other","461b0c59":"Since 2008, guests and hosts have used Airbnb to expand on traveling possibilities and present more unique, personalized way of experiencing the world. This dataset describes the listing activity and metrics in NYC, NY for 2019.\n\nThis data file includes all needed information to find out more about hosts, geographical availability, necessary metrics to make predictions and draw conclusions.\n\n\nInspiration\nWhat can we learn about different hosts and areas?\nWhat can we learn from predictions? (ex: locations, prices, reviews, etc)\nWhich hosts are the busiest and why?\nIs there any noticeable difference of traffic among different areas and what could be the reason for it?\n","f3971cd8":"Observation:                 \nPrice of Shared room is lower than  private room and entire house\/ apartment                  \n   ","3674db96":"Obsevations:\n    Most(75%) of the host listing count are less than 50","2b39050d":"<h2> About The DataSet <\/h2>","d9a826ab":"# EXPLORATORY DATA ANALYSIS (EDA) #","b39bd6e6":"### Columns\n<HTML>\n<ol>\n<li>idlisting ID<\/li>\n<li>namename of the listing<\/li>\n<li>host_idhost ID<\/li>\n<li>host_namename of the host<\/li>\n<li>neighbourhood_grouplocation<\/li>\n<li>neighbourhoodarea<\/li>\n<li>latitudelatitude coordinates<\/li>\n<li>longitudelongitude coordinates<\/li>\n<li>room_typelisting space type<\/li>\n<li>priceprice in dollars<\/li>\n<li>minimum_nightsamount of nights minimum<\/li>\n<li>number_of_reviewsnumber of reviews<\/li>\n<li>last_reviewlatest review<\/li>\n<li>reviews_per_monthnumber of reviews per month<\/li>\n<li>calculated_host_listings_countamount of listing per host<\/li>\n<li>availability_365number of days when listing is available for booking<\/li>\n<\/ol>\n<\/HTML>","3e2b3083":" Firstly We will check weather  the features with null values are usefull or not then if they are usefull then we  will fill those null values else we will discard those"}}