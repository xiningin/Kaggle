{"cell_type":{"9cd36bb0":"code","6f74ece3":"code","77c0cd12":"code","5bf59380":"code","473461d4":"code","a5e756e0":"code","e5dd196e":"code","19b7dc1b":"code","0d5ef0e1":"code","f8fcb187":"code","d28fe24f":"code","b862b3c2":"code","d36e166b":"code","203f056e":"code","fa3b90b7":"code","30cb5ef4":"code","c3483405":"code","f77f4a58":"code","b2901ac4":"code","eb9b32e7":"code","eae4c16c":"code","08717db5":"code","5356f30a":"code","88df598b":"markdown","1ee37b91":"markdown","17b70368":"markdown","44635e33":"markdown","18d97e3a":"markdown","93a0fc0b":"markdown","1c6fb2f4":"markdown","32e22104":"markdown","d592b77f":"markdown","a7251a18":"markdown","4b45a5bd":"markdown","1637e2c9":"markdown","b741b8b9":"markdown","23277eba":"markdown","51f9e7bc":"markdown","4f0d3fd8":"markdown","7f9ded30":"markdown","b5971026":"markdown","8c90ac2b":"markdown","32bbd6cf":"markdown","c9d966ff":"markdown","aef3d447":"markdown","c214bf0c":"markdown","d3bbaaed":"markdown","10be0d1d":"markdown","9c743e34":"markdown","5e813f60":"markdown","2c7f4ed5":"markdown","8f118b59":"markdown","ba1198a8":"markdown"},"source":{"9cd36bb0":"import pandas as pd \n\ndf_orginal= pd.read_csv('..\/input\/us-census-demographic-data\/acs2015_census_tract_data.csv')\ndf_orginal.head()\n\ndf=df_orginal.drop(['IncomeErr','IncomePerCap','IncomePerCapErr'], axis=1)","6f74ece3":"df.head()","77c0cd12":"df.columns ","5bf59380":"df.describe()","473461d4":"df.isnull().sum()","a5e756e0":"df.dropna(axis=0, inplace=True)\ndf.reset_index(drop=True, inplace=True)\ndf.describe()","e5dd196e":"to_percent=['Men','Women','Citizen','Employed']\ndf[to_percent]=df[to_percent].div(df[\"TotalPop\"], axis=\"index\")*100","19b7dc1b":"to_perc_emp=['PrivateWork','PublicWork','SelfEmployed','FamilyWork']\ndf[to_perc_emp]=df[to_perc_emp].multiply(df[\"Employed\"], axis=\"index\")\/100","0d5ef0e1":"cols = list(df.columns.values)\ncols.pop(cols.index('Income')) \ndf = df[cols+['Income']]\ndf.head()","f8fcb187":"import seaborn as sns\nfrom IPython.core.pylabtools import figsize\n\nres=df.corr()['Income'][:-1].abs()\nfigsize(15,6)\nax = sns.barplot(x=res.index.values, y=res.values)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)","d28fe24f":"df[['Poverty','ChildPoverty']].corr()","b862b3c2":"sns.regplot(x=\"Poverty\", y=\"Income\", data=df)","d36e166b":"sns.regplot(x='Professional', y=\"Income\", data=df)","203f056e":"grouped_test1 = df.groupby(['State'],as_index=False)['Income'].mean()\nfigsize(15,6)\nax = sns.barplot(x=grouped_test1['State'].values, y=grouped_test1['Income'].values)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)","fa3b90b7":"dummy_variable = pd.get_dummies(df[\"State\"])\ndummy_variable['Income']=df['Income'].values\nres=dummy_variable.corr()['Income'][:-1].abs()\nfigsize(15,6)\nax = sns.barplot(x=res.index.values, y=res.values)\nax.set_xticklabels(ax.get_xticklabels(), rotation=90)","30cb5ef4":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split\n\nX = df.iloc[:,3:-1].values\ny = df['Income']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=42)\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nmean_squared_error(y_test, y_pred), mean_absolute_error(y_test, y_pred), r2_score(y_test, y_pred)","c3483405":"from sklearn.preprocessing import StandardScaler\n\nX_norm = StandardScaler().fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X_norm, y, test_size = 0.2, random_state=51)\n\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\ny_pred = model.predict(X_test)\n\nmean_squared_error(y_test, y_pred), mean_absolute_error(y_test, y_pred) , r2_score(y_test, y_pred)","f77f4a58":"from sklearn.preprocessing import PolynomialFeatures\n\npoly = PolynomialFeatures(degree = 2) \nX_train, X_test, y_train, y_test = train_test_split(X_norm, y, test_size = 0.2, random_state=51)\nX_train_2 = poly.fit_transform(X_train)\nX_test_2 = poly.transform(X_test)\n\nmodel2 = LinearRegression()\n\nmodel2.fit(X_train_2, y_train)\ny_pred2 = model2.predict(X_test_2)\n\nmean_squared_error(y_test, y_pred2), mean_absolute_error(y_test, y_pred2) , r2_score(y_test, y_pred2)","b2901ac4":"import matplotlib.pyplot as plt\nplt.figure()\nax1 = sns.distplot(y_test, hist=False, color=\"r\", label=\"Actual Value\")\nsns.distplot(y_pred2, hist=False, color=\"b\", label=\"Fitted Values\" , ax=ax1)\n\nplt.title('Actual vs Fitted Values')\nplt.xlabel('Income')\nplt.ylabel('Proportion of CensusTract')\n\nplt.show()\nplt.close()","eb9b32e7":"from sklearn.model_selection import cross_val_score\npoly.fit_transform(X_norm)\nX_norm_p = poly.transform(X_norm)\ncross_val_score(model2, X_norm_p, y, cv=4).mean()","eae4c16c":"from sklearn.pipeline import Pipeline\nInput=[('scale',StandardScaler()), ('polynomial', PolynomialFeatures(degree=2,include_bias=False)), ('model',LinearRegression())]\npipe=Pipeline(Input)\nX = df.iloc[:,3:-1].values\ny = df['Income']\ncross_val_score(pipe, X, y, cv=4).mean()","08717db5":"from sklearn.linear_model import Ridge\nInput=[('scale',StandardScaler()), ('polynomial', PolynomialFeatures(degree=2,include_bias=False)), ('model',Ridge(alpha=100))]\npipe=Pipeline(Input)\ncross_val_score(pipe, X, y, cv=4).mean()","5356f30a":"from sklearn.model_selection import GridSearchCV\nparameters1= [{'alpha': [0.001,0.1,1, 10, 100, 1000, 10000, 100000, 100000]}]\nRR=Ridge()\nGrid1 = GridSearchCV(RR, parameters1,cv=4)\nGrid1.fit(X_norm_p, y)\nBestRR=Grid1.best_estimator_\nBestRR","88df598b":"From above chart, we notice that Professional property isn't enough to predict Income.  \nWe showed before the relation between Income and numerical data. we will check now the relation with State property.","1ee37b91":"We notice that average Income differs between different States. So we will calculate the correlation.","17b70368":"Now we have 72727 enteries.  \nWe want to make the absoulte columns to be percentage columns since the result Income is Median.","44635e33":"So the average R^2 is 0.83.","18d97e3a":"So it's not related to the State. and because of that, it's not related to County also. \n  \n  \n","93a0fc0b":"We notice that the number of missing values is obsolete compared to 74K. so we will delete all missing data.","1c6fb2f4":"# Read the data\nWe are required to work on 2015 census data. We should drop the IncomeErr, IncomePerCap and IncomePerCapErr columns.","32e22104":"We will try pipeline, which make a compination between StandardScaler, polynomial and linear regression.","d592b77f":"Great enhancement! R^2=0.84.  \nWe will visualize how our predicted values are close to actual values by plotting thier distribution.","a7251a18":"\n# Model Development  \nWe will start by linear regression over all numerical properties.","4b45a5bd":"# Trying other models","1637e2c9":"The best R^2 we get is 0.84 which is very good estimation for Income. \nThe model is poly(2) with linear regression. and we found that Income depend mostly on ","b741b8b9":"We also got 0.83.","23277eba":"We notice from data describe below points:  \n  1- Number of Census Tract is 74001.  \n  2- Count of Income is less so there is missing data.  \n  3- Min doesn't make sense in some enteries like it's zero in Men property!.  \n  4- Std value of Income is very big 28663!.  \n\n","51f9e7bc":"Also we notice that the properties 'PrivateWork','PublicWork','SelfEmployed','FamilyWork' are percentage of the emplyed column so we should multiply them with that column.","4f0d3fd8":"# Exploratory Data Analysis  \nFirst, we will find the correlation between all the numerical coulmns and Income.","7f9ded30":"We notice that some data are percentage data like Hispanic. while other data are absolute like Men.\nWe have to mention that Income is Median household income. Therfore we care about percentage of each property more than the absoule value.","b5971026":"# Conclusion","8c90ac2b":"So R^2=0.74. A little enhancement but we need more.  \nSo we will apply poly of degree 2.","32bbd6cf":"# Basic Insight of Dataset","c9d966ff":"We notice that Income is related to properties: 'Poverty', 'ChildPoverty', 'Professional'.  \nWe will check if 'Poverty' is related to 'ChildPoverty'.","aef3d447":"We will make standardization for the properties before making regression.","c214bf0c":"Great! Almost the same distribution.   \nWe will validate our model by checking R^2 value for different training-testing data (k-fold).","d3bbaaed":"By linear regression we got R^2 = 0.73. it's somehow good but there is a room for enhancement.","10be0d1d":"So as we tried alpha=100 is the best.\n\n\n","9c743e34":"So we will consider only 'Poverty', 'Professional' if we have to minimize the number of properties.","5e813f60":"# Data Preprocessing \nFirst thing we will find number of missing data","2c7f4ed5":"As chart above the relation is not linear, it may be square relation.","8f118b59":"Almost the same result as the model before.  \nWe will try the Ridge model also.","ba1198a8":"We will make the target column 'Income' in the last."}}