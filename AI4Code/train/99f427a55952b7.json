{"cell_type":{"efc11449":"code","f33a8f6d":"code","15457aa7":"code","6698f75a":"code","c4a4ec35":"code","5762c68f":"code","54796728":"code","856a817d":"code","4d64008e":"code","249d6d97":"code","d1f7e200":"code","b3f0c16c":"code","8151d3be":"code","cbfdaf4a":"code","0c2063ae":"code","ece2feee":"code","b85d87f9":"markdown","f39529fb":"markdown","8c26e06a":"markdown","5f420862":"markdown","f909599e":"markdown","9bac4049":"markdown","4ab05229":"markdown","d61ad248":"markdown","f21e792d":"markdown","670704f1":"markdown","852a6c0e":"markdown","96fa9881":"markdown","e6d8eecf":"markdown","0c601b82":"markdown","dd246676":"markdown"},"source":{"efc11449":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.ticker as ticker\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set_style('white')","f33a8f6d":"df = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\ndf.head()","15457aa7":"df.info()","6698f75a":"types_df = df.groupby(['type']).size().reset_index(name='counts')\ntypes_df['percent'] = round(types_df ['counts']\/sum(types_df ['counts']),2)*100","c4a4ec35":"types_df['percent'][0]","5762c68f":"plt.figure(figsize=(12,6))\ng = sns.barplot(x='percent',y='type',palette=\"rocket_r\", data=types_df, orient='h')\n\ng.text(0, -0.7, 'Attraction type in Netflix by percent (%)', \n       fontsize=14, fontweight='bold', fontfamily='Ubuntu',color='black')\n\ncol='percent'\nfor i in range(2):\n    g.annotate(f'{int(types_df[col][i])}%', \n                xy=(types_df[col][i]\/2, i),\n                ha = 'center', va='center',fontsize=50, fontweight='bold', \n                fontfamily='Ubuntu', color='white')\n    g.annotate('Movie' if i==0 else 'TV Show', \n                xy=(types_df[col][i]\/2, i+0.2),\n                ha = 'center', va='center',fontsize=12, fontweight='bold', \n                fontfamily='Ubuntu', color='white')\n\nfor i in ['top', 'left', 'right', 'bottom']:\n    g.spines[i].set_visible(False)\n    \ng.set_xlim(0,100)\ng.set(xticklabels=[],yticklabels=[])\nplt.ylabel('')\nplt.xlabel('')","54796728":"plt.figure(figsize=(14,7))\ng =sns.countplot(df['rating'], hue=df['type'],palette=\"rocket_r\")\ng.text(0, 2200, 'Rating by attraction type in Netflix', \n       fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nfor i in ['top', 'left', 'right']:\n    g.spines[i].set_visible(False)\n    \nplt.legend(loc='upper right',frameon=False,prop={'size': 15,'family':'Ubuntu'})\nplt.xlabel('Rating',fontfamily='Ubuntu')\nplt.ylabel('')","856a817d":"movies_df =  df[ df['type'] == 'Movie' ]\ntop5countries_movies = movies_df.groupby(['country']).size().sort_values(ascending=False)[0:5]\n\nplt.figure(figsize = (12,6))\ng = sns.barplot(x=top5countries_movies.index, y=top5countries_movies, palette='rocket')\ng.text(0, 2200, 'Top 5 countries in Netflix movie production', \n       fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nfor i in ['top', 'left', 'right']:\n    g.spines[i].set_visible(False)\n    \nfor i in g.patches:\n    g.text(i.get_x()+i.get_width()\/2.5,\n           i.get_height()+60,\n           round(i.get_height()),\n           fontsize='18',\n           fontfamily='Ubuntu')\n\ng.set(yticklabels=[])\nplt.xlabel('')\nplt.ylabel('')","4d64008e":"tvshows_df =  df[ df['type'] == 'TV Show' ]\ntop5countries_tvshows = tvshows_df.groupby(['country']).size().sort_values(ascending=False)[0:5]\n\nplt.figure(figsize = (12,6))\ng = sns.barplot(x=top5countries_tvshows.index, y=top5countries_tvshows, palette='rocket')\ng.text(0, 900, 'Top 5 countries in netflix TV Show production', \n       fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nfor i in ['top', 'left', 'right']:\n    g.spines[i].set_visible(False)\n    \nfor i in g.patches:\n    g.text(i.get_x()+i.get_width()\/2.5,\n           i.get_height()+60,\n           round(i.get_height()),\n           fontsize='18',\n           fontfamily='Ubuntu')\n\ng.set(yticklabels=[])\nplt.xlabel('')\nplt.ylabel('')","249d6d97":"df['date_added'] = pd.to_datetime(df['date_added'])\ndf['year_added'] = df['date_added'].dt.year\nindex = [2014,2015,2016,2017,2018,2019,2020]\n\nts_df = df[df['year_added']>2013]\nts_df = ts_df[ts_df['year_added']<2021].groupby('type')['year_added'].value_counts().unstack().T\n\nfig, ax = plt.subplots(1,1, figsize=(12,6))\nfig.text(0.15,1,'Amount of Movies and TV Shows added over years', \n         fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\ng1 = sns.lineplot(x=ts_df.index,y=ts_df['Movie'], color='#593262',label='Movie')\ng2 = sns.lineplot(x=ts_df.index,y=ts_df['TV Show'], color='#db6e59',label='TV Show')\n\n    \nfor i in ['top', 'left', 'right']:\n    ax.spines[i].set_visible(False)\n    \nax.legend(loc='upper left',frameon=False,prop={'size': 15, 'family': 'Ubuntu'})\nplt.xlabel('')\nplt.ylabel('')","d1f7e200":"def quarter_expression(i):\n    if i==1:\n        return '1st Quarter'\n    elif i==2:\n        return '2nd Quarter'\n    elif i==3:\n        return '3rd Quarter'\n    else:\n        return '4th Quarter'\n    \ndf['quarter_added'] = df['date_added'].dt.quarter\nqrt_df = df['quarter_added'].value_counts()\nprct_qrt = pd.DataFrame(round(qrt_df\/sum(qrt_df),2)).T\n\nfig, ax = plt.subplots(1,1,figsize=(12, 4))\n\nax.barh(prct_qrt.index, prct_qrt[1.0],color='#593262', alpha=0.9)\nax.barh(prct_qrt.index, prct_qrt[2.0],color='#772b58', alpha=0.9, \n        left=prct_qrt[1.0])\nax.barh(prct_qrt.index, prct_qrt[3.0],color='#b53158', alpha=0.9, \n        left=prct_qrt[1.0]+prct_qrt[2.0])\nax.barh(prct_qrt.index, prct_qrt[4.0],color='#db6e59', alpha=0.9, \n        left=prct_qrt[1.0]+prct_qrt[2.0]+prct_qrt[3.0])\n\nfig.text(0.15,1,'Percentage of attractions added per quarter', \n         fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nsum_list = []\nfor i in range(1,5):\n    ax.annotate(f'{int((prct_qrt[i][prct_qrt.index])*100)}%', \n                   xy=(sum(sum_list)+prct_qrt[i][prct_qrt.index]\/2, prct_qrt.index),\n                   ha = 'center', va='center',fontsize=40, fontweight='bold', \n                   fontfamily='Ubuntu', color='white')\n    ax.annotate(quarter_expression(i), \n                   xy=(sum(sum_list)+prct_qrt[i][prct_qrt.index]\/2, -0.25),\n                   ha = 'center', va='center',fontsize=15, fontweight='bold', \n                   fontfamily='Ubuntu', color='white')\n    \n    sum_list.append(prct_qrt[i][prct_qrt.index])\n\nfor i in ['top', 'left', 'right','bottom']:\n    ax.spines[i].set_visible(False)\n    \nax.set(yticklabels=[],xticklabels=[])\nax.set_xlim(0, 1)","b3f0c16c":"df['genre'] = df['listed_in'].apply(lambda x: x.replace(' TV','').replace('TV ','').replace(' ,',',').replace(', ',',').split(','))\n\nstopwords = set(STOPWORDS)\nstopwords.update(['Shows','Movies','British','International'])\n\nall_summary = ' '.join(' '.join(s) for s in df['genre'])\nwordcloud = WordCloud(stopwords=stopwords,\n                      background_color='white',\n                      colormap='rocket',\n                      width=1600, height=800).generate(all_summary)\n\nfig, ax = plt.subplots(figsize=(10,6))\n\nfig.text(0.15,1,'Word cloud of Netflix attractions genres', \n         fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nax.imshow(wordcloud, interpolation='bilinear')\nax.set_axis_off()\n\nplt.imshow(wordcloud);","8151d3be":"plt.figure(figsize = (12,6))\ng = sns.countplot(df['release_year'],palette='rocket_r')\n\ng.text(0.15,1100,'Release year of Netflix attractions', \n         fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nfor i in ['top', 'left', 'right']:\n    g.spines[i].set_visible(False)\n    \ng.yaxis.tick_right()\ng.xaxis.set_major_locator(ticker.MultipleLocator(9))\nplt.ylabel('')\nplt.xlabel('')","cbfdaf4a":"df[ df['release_year'] == 1925][['title','type']]","0c2063ae":"g1_x = [round(df[ df['type'] == 'TV Show']['release_year'].mean()), \n        round(df[ df['type'] == 'Movie']['release_year'].mean())]\ng2_x = [round(df[ df['type'] == 'TV Show']['year_added'].mean()),\n        round(df[ df['type'] == 'Movie']['year_added'].mean())]\n","ece2feee":"fig, ax = plt.subplots(1,1, figsize=(10,5))\n\ng1 = plt.plot([g1_x[0],g2_x[0]],[1,1],color='gray',linewidth=3)\ng2 = plt.plot([g1_x[1],g2_x[1]],[0.5,0.5],color='gray',linewidth=3)\ng3 = plt.plot(g1_x, [1,0.5], 'o',markersize=20,color='#593262',label='Release year')\ng4 = plt.plot(g2_x, [1,0.5],'o', markersize=20,color='#b53158', label='Year added')\n\n\nfig.text(0.15,0.9,'Comparation of production release year and year added on Netflix', \n         fontsize=18, fontweight='bold', fontfamily='Ubuntu',color='black')\n\nfor i in ['top', 'left', 'right']:\n    ax.spines[i].set_visible(False)\n\nax.annotate('TV Shows', \n            xy=(2020, 1),\n            ha = 'center', va='center',fontsize=15, fontweight='heavy', \n            fontfamily='Ubuntu', color='black')\n\nax.annotate('Movies', \n            xy=(2019.9, 0.5),\n            ha = 'center', va='center',fontsize=15, fontweight='heavy', \n            fontfamily='Ubuntu', color='black')\n\nax.set(yticklabels=[])\nax.xaxis.set_major_locator(ticker.MultipleLocator(1))\nax.legend(bbox_to_anchor=(0.28, 0.8),frameon=False,prop={'size': 17,'family':'Ubuntu'})\nplt.ylim(0,3)\nplt.xlim(2011,2020)","b85d87f9":"### Genres","f39529fb":"The difference between the year movies are added on Netflix and the year they are made is greater than that of TV shows.","8c26e06a":"It looks like we have a 1925 production. Damn, almost a century! Let's see what attraction is this and its type.\n\n","5f420862":"Looks like USA and India are doing a good job. Hollywood and Bollywood ftw?\n\nLooking at the top 5 countries again, but for TV Shows, in the chart below we can notice USA still leads the productions!","f909599e":"Have you ever wondered if over time Netflix invests more in movies or TV shows?\n\nIn the chart below, you'll notice that Netflix was always increasing the amount of movies and TV Shows added over the years. However, in 2020, we got a decreasing number of movie additions, perhaps due to the pandemic or just a decreasing amount of investment in movies, as TV Shows are still increasing.","9bac4049":"## Data Visualization","4ab05229":"### Movies and TV Shows production\nAnd if you wonder which countries have the most movie production on Netflix...","d61ad248":"## Netflix Data Visualization\n\nHi! I did this notebook to get some data visualization training. If you find it helpful, please upvote! :)\n","f21e792d":"## Imports","670704f1":"### Released year\nWe saw some information about adding films and TV shows over time, but maybe (or not) you wondered if they are recent productions.\n\nGiven the year a movie or tv show is produced, how long does Netflix usually take to put it in the catalog?\n\nFirst, let's see a chart representing the release year of productions.","852a6c0e":"### Attractions ratings\nWe can also see the difference between the ratings of each one!","96fa9881":"### Movies vs TV Shows \n\nAs we can see below, movies have a more expressive amount of attractions in Netflix.","e6d8eecf":"We can see an interesting word cloud of movies and tv shows genres! It seems that romantic and comedy productions are very attractive to them, right?","0c601b82":"## Loading data","dd246676":"Well, the title says it all.\n\nContinuing our observations, I think it would be a good idea to look at the (average) year in which the information is produced and the (average) year in which it is posted on Netflix!\n\n"}}