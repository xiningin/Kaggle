{"cell_type":{"68bf1eb0":"code","36286303":"code","bdaaf0b6":"code","6b056da8":"code","0a272d92":"code","edbb21bf":"code","8289de37":"code","378f39b8":"code","7825c14d":"code","736945cc":"code","70a7e50f":"code","6928a04b":"code","f9658794":"code","eaed63d7":"code","7474afa1":"code","7744bd1b":"code","76a5285b":"code","c1161141":"code","e4e27b3b":"code","852b08c4":"code","9fb60603":"code","82cbc753":"code","8db9c195":"code","1ad7a398":"code","c234d6b8":"code","7d4dcd5e":"markdown","6821cda8":"markdown","4c339452":"markdown","1fdb854c":"markdown"},"source":{"68bf1eb0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","36286303":"df_train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ndf_train","bdaaf0b6":"df_train.isnull()","6b056da8":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nsns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","0a272d92":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=df_train)","edbb21bf":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=df_train)","8289de37":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=df_train)","378f39b8":"sns.distplot(df_train['Age'].dropna(),kde=False)","7825c14d":"sns.countplot(x='SibSp',data=df_train)","736945cc":"sns.set_style('whitegrid')\nsns.boxenplot(x='Pclass',y='Age',data=df_train,palette='winter')","70a7e50f":"def calculate_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","6928a04b":"df_train['Age'] = df_train[['Age','Pclass']].apply(calculate_age,axis=1)","f9658794":"sns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","eaed63d7":"df_train.drop('Cabin',inplace=True,axis=1)","7474afa1":"sns.heatmap(df_train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7744bd1b":"sex = pd.get_dummies(df_train['Sex'],drop_first=True)\nembark = pd.get_dummies(df_train['Embarked'],drop_first=True)","76a5285b":"\ndf_train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","c1161141":"df_train.head()","e4e27b3b":"train=pd.concat([df_train,sex,embark],axis=1)","852b08c4":"train.drop('Survived',axis=1).head()","9fb60603":"from sklearn.model_selection import train_test_split","82cbc753":"X_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1), \n                                                    train['Survived'], test_size=0.30, \n                                                    random_state=101)","8db9c195":"from sklearn.ensemble import RandomForestClassifier\nrnd_clf = RandomForestClassifier(n_estimators=500)\nrnd_clf.fit(X_train,y_train)\ny_pred=rnd_clf.predict(X_test)","1ad7a398":"from sklearn import metrics\n\nmetrics.accuracy_score(y_test,y_pred)","c234d6b8":"metrics.confusion_matrix(y_test,y_pred)","7d4dcd5e":"# MODELING","6821cda8":"# APPLY RANDOM FOREST CLASSIFIER","4c339452":"# Testing Accuracy and Confusion Matrix","1fdb854c":"# TRAIN TEST SPLIT"}}