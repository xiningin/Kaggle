{"cell_type":{"4d9d3b0a":"code","8e9275b1":"code","e1d460ad":"code","407939e9":"code","1b696094":"code","08a352ef":"code","f46e8539":"code","942869f0":"code","42c4f519":"code","62fa8d60":"code","06a39c72":"code","f372c7f6":"code","ed76cd0e":"code","b9639ad2":"code","7e64599e":"code","fbdfa70a":"code","94c71641":"code","d9b370c1":"code","ea670a33":"code","54a43bb7":"code","8cdc55c3":"code","958430ad":"code","af76cee3":"code","7b0c36b0":"code","3154232e":"code","6a5a488e":"code","0323745e":"code","73bfdfa0":"code","27c9cf15":"code","4bf001fd":"code","7da1f028":"code","eb22878d":"code","d65e1425":"code","e39163cb":"code","b23ae7ac":"code","481dafe3":"markdown","6b02e7f4":"markdown","a9aa2165":"markdown","05e4fb9a":"markdown","c6f8335c":"markdown","cf6a4656":"markdown","9cd2923d":"markdown","4a862f26":"markdown","f32d7739":"markdown","94434d41":"markdown","6332306d":"markdown","1b2ef805":"markdown","9b59a021":"markdown"},"source":{"4d9d3b0a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport missingno as msno\nimport datetime\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8e9275b1":"# CALISACAGIM DATASET\ntrain_transaction=pd.read_csv('\/kaggle\/input\/ieee-fraud-detection\/train_transaction.csv')\ntest_transaction=pd.read_csv('\/kaggle\/input\/ieee-fraud-detection\/test_transaction.csv')","e1d460ad":"# test_transaction setinde isFraud sutunu bulunmadigindan concat oncesi yeni ekliyoruz ve 2 degerini dolduruyoruz\ntest_transaction['isFraud']=2\n# train_transaction ve test_transaction setlerini concat ediyoruz\ntransaction=pd.concat([train_transaction, test_transaction], ignore_index=True)","407939e9":"transaction['D1'].head(40)","1b696094":"# Column ve Degerlerine genel bakis\nfor col, values in transaction.iteritems():\n    num_uniques = values.nunique()\n    print ('{name}: {num_unique}'.format(name=col, num_unique=num_uniques))\n    print (values.unique())\n    print ('\\n')","08a352ef":"# NE KADAR ROW-COLINM OLDUGU\n\nprint(f'Train Transaction has {transaction.shape[0]} rows and {transaction.shape[1]} columns.')","f46e8539":"#COLUMN ISIMLER\ntransaction.columns","942869f0":"# BENIM KISIM OLAN COLUMNLARI BASKA BIR VARIABLE ATIYORUZ ve CALISMAMIZDA COPYASINI KULLANIYORUZ\ntransaction_mycolumns=transaction.iloc[:,0:55]\nmy_transaction=transaction_mycolumns.copy()","42c4f519":"my_transaction.info()","62fa8d60":"my_transaction.info(memory_usage='deep')","06a39c72":"my_transaction.describe()","f372c7f6":"# kololasyonu anlam ifade eden kisimlari gozlemleyelim\na=my_transaction.corr().abs()<1\nb=my_transaction.corr().abs()>0.5\nmy_transaction.corr().abs()[a&b]\n","ed76cd0e":"# NE KADAR COLUMNDA MISSING VALUE OLDUGU\nprint(f'There are {my_transaction.isnull().any().sum()} columns in my_train transaction dataset with missing values.')","b9639ad2":"# Eksik verileri oransal bar ile gorsellestirme\nmsno.bar(train_Mytransaction);","7e64599e":"msno.matrix(my_transaction);","fbdfa70a":"# degiskenler arasindaki yokluk koralasyonu  -1 demek- birinde null varsa digerinde de null her durumda var\nmsno.heatmap(my_transaction);","94c71641":"emails = {'gmail': 'google', 'att.net': 'att', 'twc.com': 'spectrum', \n          'scranton.edu': 'other', 'optonline.net': 'other', 'hotmail.co.uk': 'microsoft',\n          'comcast.net': 'other', 'yahoo.com.mx': 'yahoo', 'yahoo.fr': 'yahoo',\n          'yahoo.es': 'yahoo', 'charter.net': 'spectrum', 'live.com': 'microsoft', \n          'aim.com': 'aol', 'hotmail.de': 'microsoft', 'centurylink.net': 'centurylink',\n          'gmail.com': 'google', 'me.com': 'apple', 'earthlink.net': 'other', 'gmx.de': 'other',\n          'web.de': 'other', 'cfl.rr.com': 'other', 'hotmail.com': 'microsoft', \n          'protonmail.com': 'other', 'hotmail.fr': 'microsoft', 'windstream.net': 'other', \n          'outlook.es': 'microsoft', 'yahoo.co.jp': 'yahoo', 'yahoo.de': 'yahoo',\n          'servicios-ta.com': 'other', 'netzero.net': 'other', 'suddenlink.net': 'other',\n          'roadrunner.com': 'other', 'sc.rr.com': 'other', 'live.fr': 'microsoft',\n          'verizon.net': 'yahoo', 'msn.com': 'microsoft', 'q.com': 'centurylink', \n          'prodigy.net.mx': 'att', 'frontier.com': 'yahoo', 'anonymous.com': 'other', \n          'rocketmail.com': 'yahoo', 'sbcglobal.net': 'att', 'frontiernet.net': 'yahoo', \n          'ymail.com': 'yahoo', 'outlook.com': 'microsoft', 'mail.com': 'other', \n          'bellsouth.net': 'other', 'embarqmail.com': 'centurylink', 'cableone.net': 'other', \n          'hotmail.es': 'microsoft', 'mac.com': 'apple', 'yahoo.co.uk': 'yahoo', 'netzero.com': 'other', \n          'yahoo.com': 'yahoo', 'live.com.mx': 'microsoft', 'ptd.net': 'other', 'cox.net': 'other',\n          'aol.com': 'aol', 'juno.com': 'other', 'icloud.com': 'apple'}\n\nus_emails = ['gmail', 'net', 'edu']\n\n# https:\/\/www.kaggle.com\/c\/ieee-fraud-detection\/discussion\/100499#latest-579654\nfor c in ['P_emaildomain', 'R_emaildomain']:\n    my_transaction[c + '_bin'] = my_transaction[c].map(emails)\n    my_transaction[c + '_suffix'] = my_transaction[c].map(lambda x: str(x).split('.')[-1])\n    my_transaction[c + '_suffix'] = my_transaction[c + '_suffix'].map(lambda x: x if str(x) not in us_emails else 'us')\n","d9b370c1":"for column_name in ['P_emaildomain', 'R_emaildomain']:\n    my_transaction.drop(column_name, axis=1, inplace=True)","ea670a33":"object_columns_name=my_transaction.select_dtypes(include='object').columns","54a43bb7":"object_columns_name","8cdc55c3":"for kategorik_sutun in object_columns_name:\n    modun_stringdegeri=my_transaction[kategorik_sutun].mode()[0]\n    my_transaction[kategorik_sutun].fillna(modun_stringdegeri,inplace=True)","958430ad":"# Kategorik degerlerin eksik degerlerini doldurma yontemlerinden Frekansi kullanacagiz\ndef frekans(data,columns,n_label=\"NONE\"):\n    \n    for col in columns:\n        #data[col].fillna(n_label,inplace=True)\n        fq_encode = data[col].value_counts(dropna=False).to_dict()   \n        data[col+\"_Fr\"] = data[col].map(fq_encode)\n        data=data.drop(col,axis=1)\n    return data","af76cee3":"my_transaction = frekans(my_transaction,object_columns_name)","7b0c36b0":"my_transaction.head()","3154232e":"my_transaction.info()","6a5a488e":"# Preprocess date column\nSTART_DATE = '2017-12-01'\nmy_transaction = my_transaction.rename(columns={'TransactionDT': 'TransactionDate'})\nstartdate = datetime.datetime.strptime(START_DATE, '%Y-%m-%d')\nmy_transaction['TransactionDate'] = my_transaction['TransactionDate'].apply(lambda x: (startdate + datetime.timedelta(seconds = x)))\n\n\nprint(my_transaction['TransactionDate'].head())\nprint(my_transaction['TransactionDate'].tail())","0323745e":"my_transaction.columns","73bfdfa0":"import seaborn as sns\nmy_transaction_TransactionAmt_Fraud=my_transaction[['isFraud','TransactionAmt']]\nfig, ax = plt.subplots(figsize=(5,5))\nsns.heatmap(my_transaction_TransactionAmt_Fraud.corr(), ax=ax,linewidths=.5,annot=True)\nplt.show()","27c9cf15":"# boxplot\nsns.boxplot(x=my_transaction['TransactionAmt']);","4bf001fd":"# boxplot da esik deger atama\nQ1=my_transaction['TransactionAmt'].quantile(0.25)\nQ3=my_transaction['TransactionAmt'].quantile(0.75)\nIQR=Q3-Q1\nmy_TransactionAmt_Alt_Sinir = Q1-2.5*IQR\nmy_TransactionAmt_Ust_Sinir = Q3 + 2.5*IQR","7da1f028":"Q1, Q3 , IQR,my_TransactionAmt_Alt_Sinir,my_TransactionAmt_Ust_Sinir","eb22878d":"# boxplot ile belirlenen aykiri degerlere erismek\naykiri_TF=(my_transaction['TransactionAmt']<my_TransactionAmt_Alt_Sinir)|(my_transaction['TransactionAmt']>my_TransactionAmt_Ust_Sinir)\nmy_transaction[aykiri_TF].index","d65e1425":"# baskilama ile ust deger sonrasi degerlere ust degeri, alt deger sonrasina ise alt degeri atama\ndef AykiriDegeriBaskila(deger):\n    \n    if deger > my_TransactionAmt_Ust_Sinir:\n       \n        deger=my_TransactionAmt_Ust_Sinir\n    elif deger < my_TransactionAmt_Alt_Sinir:\n       \n        deger=-my_TransactionAmt_Alt_Sinir\n    \n    return deger\n\nmy_transaction['TransactionAmt'] = my_transaction['TransactionAmt'].apply(lambda x: AykiriDegeriBaskila(x))","e39163cb":"my_transaction.card1.describe()","b23ae7ac":"df_train, df_test = df[df['isFraud'] != 'test'], df[df['isFraud'] == 2].drop('isFraud', axis=1)","481dafe3":"# Kategorik De\u011ferleri D\u00f6n\u00fc\u015ft\u00fcrme (Frekans)\n\nDe\u011fi\u015fken Donusumleri -Variable Transformation","6b02e7f4":"\n**dist1:**  59% Nan de\u011feri olan fatura adresi, posta adresi, posta kodu, IP adresi, telefon alan\u0131 vb. aras\u0131ndaki mesafeleri ifade eder.\n\n**dist2:** 94% Nan de\u011feri var silinebilir\n\n**R_emaildomain** al\u0131c\u0131 ki\u015finin mail adresi - ba\u011fz\u0131 i\u015flemlerde al\u0131c\u0131 gerek olmad\u0131\u011f\u0131ndan 76% Nan de\u011feri var.\n\nP_ and (R__) emaildomain: purchaser and recipient email domain\nC1-C14: counting, such as how many addresses are found to be associated with the payment card, etc. The actual meaning is masked.\nD1-D15: timedelta, such as days between previous transaction, etc.d8-d9 float digerleri int degerler\n\nM1-M9: match, such as names on card and address, etc.\n             T F or NaN\nColumn M4 appears to be different with values like M2 and M0\n\nV1-V339: Vesta engineered rich features, including ranking, counting, and other entity relations.\n\nhttps:\/\/www.kaggle.com\/kabure\/extensive-eda-and-modeling-xgb-hyperopt","a9aa2165":"# EKSIKLERI DOLDURMA\n","05e4fb9a":"Company yahoo \/ ymail \/ frontier \/ rocketmail -> Yahoo\n\nhotmail \/ outlook \/ live \/ msn -> Microsoft\n\nicloud \/ mac \/ me -> Appe\n\nprodigy \/ att \/ sbcglobal-> AT&T\n\ncenturylink \/ embarqmail -> Centurylink\n\naim \/ aol -> AOL\n\ntwc \/ charter -> Spectrum\n\ngmail.com \/ gmail -> Google","c6f8335c":"# Ayk\u0131r\u0131\/U\u00e7 Verileri (Outliers) Tespit Etme\n\n# A-Veri Temizleme (Data Cleaning \/ Cleasing)\n## 3- Outlier Detection- Aykiri gozlem Analizi","cf6a4656":"# Seting train and test back","9cd2923d":"-Kategorik degiskenler icin deger atama\n*mod islemine gore-en sik raslanan katogorik degiskene gore deger atama","4a862f26":"![veritablosu](https:\/\/i.pinimg.com\/originals\/6a\/37\/fb\/6a37fbcea9be5ecf69925610576fcc84.png)","f32d7739":"# HAKANIN YONTEMDENEME","94434d41":"\u00a0# 3- KE\u015eIFSEL VERI ANALIZI (EDA) ","6332306d":"# Mapping emails\n\nT\u00fcm e-posta alanlar\u0131n\u0131 ilgili kurulu\u015flara g\u00f6re gruplayaca\u011f\u0131m. 300'den az girdiye sahip t\u00fcm de\u011ferleri \"Other\" olarak ayarlayaca\u011f\u0131m.","1b2ef805":"### 3A-TRANSACTION VE IDENTITY DATASETLERINI TANIYALIM\n\n#### Train Transaction\n 590540 rows ve 394 columns dan olusuyor\n\n**TransactionID :** 590540 islem icin 2987000 3577539 arasinda id verilmistir\n\n**isFraud:**  0 normal \u00a0i\u015flemi 1 ise doland\u0131r\u0131c\u0131l\u0131k i\u015flemini temsil eder.\n\n**TransactionDT:** tam belirli olmayan bir tarih saatinden referansla i\u015flemlerin saniye cinsinden timedelta lar\u0131n\u0131 i\u00e7erir. Daha anlaml\u0131 hale getirmek i\u00e7in zaman dilimlerine ay\u0131r\u0131ld\u0131\u011f\u0131ndan 190 gunl\u00fck i\u015flemleri i\u00e7erdi\u011fi anla\u015f\u0131l\u0131yor.\n\n**TransactionAMT:** USD baz\u0131nda i\u015flem tutarlar\u0131 de\u011ferini i\u00e7erir. noktadan sonra 3 decimal olan de\u011ferlerin ba\u015fka doviz kurlar\u0131nda yap\u0131lan i\u015flemlerin USD ye de\u011fi\u015ftirme yap\u0131ld\u0131\u011f\u0131 anla\u015f\u0131l\u0131yor.\n\n**ProductCD:** her i\u015flem i\u00e7in \u00fcr\u00fcn kodu de\u011ferlerini i\u00e7erir - katogorik de\u011fi\u015fkenler\n                w 71%, c 14%, \u00a0(h,s,r) 15% \n\n**card1, card2, card3, card5 :** kart\u0131n bankas\u0131, \u00fclke vb. gibi \u00f6deme kart\u0131 bilgileri.\n\n**card4**  i\u015flemin yap\u0131ld\u0131\u011f\u0131 kredi kart\u0131 \u015firketidir - katogorik de\u011fi\u015fkenler\n            visa 65% MasterCard 32% (discover, american express) 3%\n            \n**card6** i\u015flemin yap\u0131ld\u0131\u011f\u0131 kart t\u00fcr\u00fcd\u00fcr - katogorik de\u011fi\u015fkenler\n            debit 74% credit 25% (charge card, debit or credit) 1%\n\n\n**addr1** alici faturaland\u0131rma b\u00f6lgesi adresi\n**addr2** alici faturaland\u0131rma \u00fclkesi adresi","9b59a021":"[](http:\/\/)# Yeni \u00d6znitelikler Olu\u015fturma (Feature Extraction)"}}