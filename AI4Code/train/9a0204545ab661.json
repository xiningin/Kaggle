{"cell_type":{"c9055686":"code","9171b0d5":"code","a86e67af":"code","adc4c3ee":"code","f434b354":"code","954e228c":"code","d90ab7f8":"code","878ae603":"code","09758877":"code","28af5202":"code","bacf75ec":"code","e21dacc1":"code","2b45dd2f":"code","d2bce322":"markdown","e3d19b1f":"markdown"},"source":{"c9055686":"from fastai.vision.all import *\nfrom fastai.callback.fp16 import *","9171b0d5":"!tree ..\/input\/ -d","a86e67af":"DATA_DIR = Path('..\/input\/cassava-leaf-disease-classification')\nTRAIN_DIR = DATA_DIR\/'train_images'\nTEST_DIR = DATA_DIR\/'test_images'\ntrain_csv_path = Path('..\/input\/cassava-leaf-disease-classification\/train.csv')\ntrain_df = pd.read_csv(train_csv_path)","adc4c3ee":"def get_y(path):\n    fname = path.name\n    return train_df.query(\"image_id==@fname\").label.values[-1]","f434b354":"cassava_data = DataBlock(blocks = (ImageBlock, CategoryBlock), \n                        get_items = get_image_files, \n                        splitter = RandomSplitter(seed=42),\n                        get_y = get_y, \n                        item_tfms = Resize(460),\n                        batch_tfms = [*aug_transforms(size=224, min_scale=0.75), Normalize.from_stats(*imagenet_stats)])\n\ndls = cassava_data.dataloaders(TRAIN_DIR, batch_size=32)","954e228c":"dls.show_batch()","d90ab7f8":"len(dls.train.dataset), len(dls.valid.dataset)","878ae603":"cassava_learn = cnn_learner(dls, resnet18, metrics=accuracy, loss_func=LabelSmoothingCrossEntropy(), cbs=MixUp(0.4))","09758877":"cassava_learn.unfreeze()\ncassava_learn.lr_find()","28af5202":"learn = cnn_learner(dls, resnet18, metrics=accuracy, loss_func=LabelSmoothingCrossEntropy(), cbs=MixUp(0.4), model_dir='\/tmp\/models').to_fp16()\nlearn.unfreeze()\nlearn.fit_one_cycle(5, lr_max = 1e-3)","bacf75ec":"sample_df = pd.read_csv(DATA_DIR\/'sample_submission.csv')\nsample_df.head()","e21dacc1":"test_data_path = sample_df['image_id'].apply(lambda x: DATA_DIR\/'test_images'\/x)\ntst_dl = learn.dls.test_dl(test_data_path)","2b45dd2f":"predictions = learn.tta(dl = tst_dl, n=10, beta=0)\n\nsample_df['label'] = np.argmax(predictions[0],axis=1)\nsample_df","d2bce322":"# Please Upvote if you liked the work. Thanks :)","e3d19b1f":"![image.jpeg](attachment:45c8b559-01f3-41fd-9275-ccf6174714ad.jpeg)"}}