{"cell_type":{"e1f25313":"code","be4bcd97":"code","25a0712d":"code","a21e919e":"code","be3e9819":"code","a2b67d46":"code","e4cdeb1c":"code","bfe03009":"code","275533ad":"code","689c83f4":"code","b040b3da":"code","1ad4096f":"code","6b6809f3":"code","eb817aaf":"code","9387df92":"code","a43bf361":"code","8ed235ae":"code","57d9a28a":"code","ac81333d":"code","0b258d8e":"code","200eabe3":"code","68efcd9d":"code","cecbaca9":"markdown","696a4c3d":"markdown","623c3c5e":"markdown","23ac4389":"markdown","cd3aff9e":"markdown","5d995879":"markdown","2d2e00ff":"markdown","ae9839a5":"markdown","56d0f8ee":"markdown"},"source":{"e1f25313":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport pickle\n\nfrom sklearn.model_selection import cross_val_score, GridSearchCV, train_test_split, RandomizedSearchCV\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nimport xgboost\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","be4bcd97":"data = pd.read_csv(\"..\/input\/drug-classification\/drug200.csv\")","25a0712d":"data.head()","a21e919e":"data.info()","be3e9819":"data['Na_to_K_gre_fifteen'] = [1 if i >15 else 0 for i in data.Na_to_K]\ndata.head()","a2b67d46":"cholesterol = {\"HIGH\":1, \"NORMAL\":0}\nbp = {\"HIGH\":2, \"LOW\":0, \"NORMAL\":1}\nsex = {\"F\":1, \"M\":0}\ndrug = {\"drugA\":0, \"drugB\":1, \"drugC\":2, \"drugX\":3, \"DrugY\":4}","e4cdeb1c":"# using map\ndata.Cholesterol = data.Cholesterol.map(cholesterol)\ndata.BP = data.BP.map(bp)\ndata.Sex = data.Sex.map(sex)\ndata.Drug = data.Drug.map(drug)\ndata.head()","bfe03009":"X = data.drop('Drug', axis=1)\ny = data['Drug']","275533ad":"Xtrain, xtest, Ytrain,ytest = train_test_split(X,y, test_size=.2, random_state=42, shuffle=True)","689c83f4":"Ytrain = Ytrain.values.reshape(-1,1)\nytest = ytest.values.reshape(-1,1)","b040b3da":"print(\"Shap of the Xtrain is :\", Xtrain.shape)\nprint(\"Shape of the xtest is :\", xtest.shape)\nprint(\"Shape of the Ytrain is :\", Ytrain.shape)\nprint(\"Shape of the ytest is :\", ytest.shape)","1ad4096f":"classifier=xgboost.XGBClassifier()","6b6809f3":"hyperparameter_grid = {\n    'n_estimators': [100, 500, 900, 1100, 1500],\n    'max_depth':[2, 3, 5, 10, 15],\n    'learning_rate':[0.05,0.1,0.15,0.20],\n    'min_child_weight':[1,2,3,4],\n    'booster':['gbtree','gblinear'],\n    'base_score':[0.25,0.5,0.75,1]\n    }","eb817aaf":"random_cv = RandomizedSearchCV(estimator=classifier,\n            param_distributions=hyperparameter_grid,\n            cv=5, \n            n_iter=50,\n            scoring = 'neg_mean_absolute_error',\n            n_jobs = 4,\n            verbose = 5, \n            return_train_score = True,\n            random_state=42)","9387df92":"random_cv.fit(Xtrain,Ytrain)","a43bf361":"random_cv.best_estimator_","8ed235ae":"classifier=xgboost.XGBClassifier(base_score=0.25, booster='gbtree', colsample_bylevel=1,\n              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,\n              importance_type='gain', interaction_constraints='',\n              learning_rate=0.1, max_delta_step=0, max_depth=2,\n              min_child_weight=1,\n              n_estimators=900, n_jobs=0, num_parallel_tree=1,\n              objective='multi:softprob', random_state=0, reg_alpha=0,\n              reg_lambda=1, scale_pos_weight=None, subsample=1,\n              tree_method='exact', validate_parameters=1, verbosity=None)","57d9a28a":"classifier.fit(Xtrain,Ytrain)","ac81333d":"predict = classifier.predict(xtest)\npredict","0b258d8e":"#cross_val_score in train data\ncvs = cross_val_score(classifier, Xtrain,Ytrain,cv=5)\ncvs","200eabe3":"cvs.mean()","68efcd9d":"# save the model to disk\nfilename = 'Drug_Classification.sav'\npickle.dump(classifier, open(filename, 'wb'))","cecbaca9":"I got 99.33 accuracy on my Local Machine(Jupyter Notebook)","696a4c3d":"Label Encoding","623c3c5e":"Loading Necessary Library","23ac4389":"Model Saving","cd3aff9e":"Using Cross_val_score","5d995879":"Loading Dataset","2d2e00ff":"Splitting dataset","ae9839a5":"Feature Engineering","56d0f8ee":"XGBoost Algorithm"}}