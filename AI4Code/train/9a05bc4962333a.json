{"cell_type":{"c20c57b5":"code","f13e1a4c":"code","d4ca728f":"code","a472cd4e":"code","e662fb27":"code","847679f0":"code","cc1acd53":"code","efc4948b":"code","2d835930":"code","998b1fc6":"code","989af36f":"code","69ee7891":"code","6ce13964":"code","2de81cbe":"code","350c4d8c":"code","309c4bf7":"code","6455cd18":"code","2687ea0d":"code","a1e81fc2":"code","87c53c74":"code","866b6903":"code","0e646c55":"markdown","01cb8d78":"markdown","0c0fe5e5":"markdown","476b714b":"markdown","d052b982":"markdown","327c6874":"markdown","11501524":"markdown","d4cf9eb3":"markdown","2123a78f":"markdown","7b1b9a1b":"markdown"},"source":{"c20c57b5":"# data analysis and wrangling\nimport pandas as pd\nimport numpy as np\nimport random as rnd\n\n# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","f13e1a4c":"train_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')","d4ca728f":"train_df.head()","a472cd4e":"cols_to_drop = ['Name', 'Ticket', 'Cabin']\ntrain_df = train_df.drop(cols_to_drop, axis=1)\ntest_df = test_df.drop(cols_to_drop, axis=1)","e662fb27":"train_df = train_df.drop(['PassengerId'], axis=1)\ntrain_df.head()","847679f0":"train_df.describe()","cc1acd53":"train_df.groupby(['Pclass', 'Sex']).describe()","efc4948b":"train_df['Age'] = train_df['Age'].fillna(train_df.groupby(['Sex', 'Pclass'])['Age'].transform('mean'))","2d835930":"train_df = train_df.dropna(axis=0)","998b1fc6":"test_df.describe()","989af36f":"test_df['Age'] = test_df['Age'].fillna(test_df.groupby(['Sex', 'Pclass'])['Age'].transform('mean'))","69ee7891":"train_df.count()","6ce13964":"test_df.count()","2de81cbe":"test_df['Fare'] = test_df['Fare'].fillna(test_df['Fare'].mean())","350c4d8c":"train_df['Sex'] = train_df['Sex'].map( {'female': 1, 'male': 0} ).astype(int)\ntest_df['Sex'] = test_df['Sex'].map( {'female': 1, 'male': 0} ).astype(int)","309c4bf7":"train_df.head()","6455cd18":"train_df['Embarked'] = train_df['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)\ntest_df['Embarked'] = test_df['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","2687ea0d":"X_train = train_df.drop(\"Survived\", axis=1)\nY_train = train_df[\"Survived\"]\nX_test  = test_df.drop(\"PassengerId\", axis=1).copy()\nX_train.shape, Y_train.shape, X_test.shape","a1e81fc2":"model = LogisticRegression()\nmodel.fit(X_train, Y_train)\nY_preds = model.predict(X_test)\nmodel.score(X_train, Y_train)","87c53c74":"submission = pd.DataFrame({\"PassengerId\": test_df[\"PassengerId\"], \"Survived\": Y_preds})","866b6903":"submission.to_csv('preds.csv', index=False)","0e646c55":"Let's see if there are missing values in our dataset","01cb8d78":"We also don't need PassengerId in training data, hence we drop it. We need Passenger Id for submissions so we don't drop it from test data.","0c0fe5e5":"**Logistic Regression for Binary Classification**","476b714b":"feature Age has some missing values which is 891-714 = 177, let's impute these missing values by grouping them by gender and Pclass first and then filling them with relevant mean. Feature Embarked also contains missing values let's drop these rows since it's only few rows.","d052b982":"one row of feature Fare contains missing value let's impute that by mean.","327c6874":"**Now we're ready to train a suitable Machine Learning Model on our training data and then make predicitons on test data.**","11501524":"Loda Data","d4cf9eb3":"Let's one hot encode features Sex and Embarked","2123a78f":"in test dataset,feature Age contains missing values, let's fill it using same method as we used in train data. ","7b1b9a1b":"It's quite obvious that features like Name, Ticket, Cabin and PassengerId doensn't contribute to predictions, hence let's drop these features"}}