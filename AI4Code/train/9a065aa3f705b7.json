{"cell_type":{"c5821ca6":"code","fa8ee714":"code","b237c01e":"code","291c85cc":"code","707c91f2":"code","cc52d2b7":"code","4fa81da5":"code","afaf36ce":"code","4ff64ea7":"code","097be360":"code","546602d8":"code","8a774eab":"code","25f6eed8":"code","852a73a1":"code","30333bb8":"code","c93db6c3":"code","3a073616":"code","54ab94cb":"code","ec18feeb":"code","407c67cf":"code","8b5f572a":"code","c0a880d4":"code","3b5ffd10":"code","bebf02e2":"code","752b43f0":"code","12971f9f":"code","6d565703":"code","bbeedb60":"code","6a9c756a":"code","3f8908b6":"code","0e4da99a":"markdown","7dbc9360":"markdown","87562cf0":"markdown","24155507":"markdown","2573702a":"markdown","277b22e8":"markdown","bd001ef3":"markdown","d4dbd4b4":"markdown","548da7ad":"markdown","19811b9c":"markdown","2f911004":"markdown","127c0441":"markdown","5997f494":"markdown","bba43d31":"markdown","22e22dee":"markdown","6e92680a":"markdown","c5e35db6":"markdown","2c82510e":"markdown","99207d8b":"markdown","22034d3a":"markdown","d94b6034":"markdown","619755c5":"markdown","f6b20dcb":"markdown","3c8dd5ba":"markdown","8f9641ac":"markdown","bfe31e4c":"markdown","9029766b":"markdown","a9eb0874":"markdown"},"source":{"c5821ca6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.cluster.hierarchy import dendrogram, ward\nfrom scipy.cluster.hierarchy import fcluster\nfrom sklearn.metrics import silhouette_samples\nfrom matplotlib import cm","fa8ee714":"data = pd.read_csv('..\/input\/train.csv')","b237c01e":"print(data.shape)\ndata.head()","291c85cc":"data_null = data.isna().sum()\nplt.figure(figsize=(8,8))\ndata_null[data_null!=0].plot(kind='barh');","707c91f2":"data.drop(['Id','Alley','PoolQC','Fence','MiscFeature'],axis=1, inplace=True)","cc52d2b7":"data['FireplaceQu'].fillna('No pool',inplace=True)\ndata[['FireplaceQu','Fireplaces']].head(3)","4fa81da5":"data['LotFrontage'].fillna(data['LotFrontage'].median(),inplace=True)","afaf36ce":"print(round(1-data.dropna().shape[0]\/data.shape[0],4))\ndata.dropna(inplace=True)","4ff64ea7":"data.describe(percentiles=[0.1,0.25,0.5,0.75,0.9])","097be360":"fig, axes = plt.subplots(nrows=3, ncols=3, figsize=(15,10))\nsns.set(font_scale=2)\ndata['BsmtFinSF2'].hist(ax=axes[0,0]);\naxes[0,0].set_title('BsmtFinSF2');\ndata['LowQualFinSF'].hist(ax=axes[0,1]);\naxes[0,1].set_title('LowQualFinSF');\ndata['BsmtHalfBath'].hist(ax=axes[0,2]);\naxes[0,2].set_title('BsmtHalfBath');\ndata['KitchenAbvGr'].hist(ax=axes[1,0]);\naxes[1,0].set_title('KitchenAbvGr');\ndata['EnclosedPorch'].hist(ax=axes[1,1]);\naxes[1,1].set_title('EnclosedPorch');\ndata['3SsnPorch'].hist(ax=axes[1,2]);\naxes[1,2].set_title('3SsnPorch');\ndata['ScreenPorch'].hist(ax=axes[2,0]);\naxes[2,0].set_title('ScreenPorch');\ndata['3SsnPorch'].hist(ax=axes[2,1]);\naxes[2,1].set_title('3SsnPorch');\ndata['PoolArea'].hist(ax=axes[2,2]);\naxes[2,2].set_title('PoolArea');\n#data['MiscVal'].hist(ax=axes[1,4]);\n#axes[1,4].set_title('MisVal');\nplt.tight_layout();\ndata.drop(['BsmtFinSF2','LowQualFinSF','BsmtHalfBath','KitchenAbvGr',\\\n            'EnclosedPorch','3SsnPorch','ScreenPorch','PoolArea','MiscVal'],axis=1,inplace=True)","546602d8":"data.describe(include='all')","8a774eab":"sns.set()\nlst_out = ['Utilities','LandSlope','Condition1','Condition2','BldgType','Street',\\\n           'RoofMatl','ExterCond','BsmtCond','Heating','CentralAir','Electrical',\\\n           'Functional','GarageQual','GarageCond','PavedDrive']#,'MSZoning']\nsns.set(font_scale=2)\nn_row = 4\nn_col = 4\nfig, axes = plt.subplots(nrows=n_row, ncols=n_col, figsize=(20,20))\nfor i in enumerate(lst_out):\n    pd.value_counts(data[i[1]]).plot(kind='barh',ax=axes[i[0]\/\/n_row,i[0]%n_col])\n    axes[i[0]\/\/n_row,i[0]%n_col].set_title(i[1]);\nplt.tight_layout()","25f6eed8":"data_new = data.drop(['Utilities','LandSlope','Condition1','Condition2','BldgType','Street','RoofMatl','ExterCond','BsmtCond',\\\n'Heating','CentralAir','Electrical','Functional','GarageQual','GarageCond','PavedDrive','MSZoning','SaleType','SaleCondition',\\\n                     'LandContour','BsmtFinType2'],axis=1)","852a73a1":"plt.figure(figsize=(25,20))\nsns.set(font_scale=1)\nsns.heatmap(data_new.corr(),annot=True);","30333bb8":"data_new.drop(['TotalBsmtSF','GarageCars','GarageYrBlt','TotRmsAbvGrd'],axis=1,inplace=True)","c93db6c3":"plt.figure(figsize=(10,10))\ndata_new.corr()['SalePrice'].plot(kind='barh');","3a073616":"numer = set(data_new.corr()['SalePrice'].index)\ncateg = list(set(data_new.columns) - set(data_new.corr()['SalePrice'].index))","54ab94cb":"sns.set()\nn_row = 5\nn_col = 5\nfig, axes = plt.subplots(nrows=n_row, ncols=n_col, figsize=(20,20))\nsns.set(font_scale=2)\nfor i in enumerate(categ):\n    pd.value_counts(data[i[1]]).plot(kind='barh',ax=axes[i[0]\/\/n_row,i[0]%n_col])\n    axes[i[0]\/\/n_row,i[0]%n_col].set_title(i[1]);\nplt.tight_layout()","ec18feeb":"fig = plt.figure(figsize=(20,10))\nsns.set(font_scale=2)\nax1 = fig.add_subplot(2,3,1)\nax1.set_title('Most popular apps')\ndata_new['SalePrice'].hist(bins=20);\nax2 = fig.add_subplot(2,3,2)\nax2.set_title('All apps')\nsns.boxplot(data_new['SalePrice'])\nplt.tight_layout()","407c67cf":"print(pd.value_counts(data_new['SalePrice']<350000))\ndata_new = data_new[data_new['SalePrice']<350000]\ntarget_val = data_new['SalePrice'].values","8b5f572a":"cut_value = pd.cut(data_new['SalePrice'],5).values\ndata_new['SalePrice'] = cut_value\nsns.set(font_scale=2)\nn_row = 4\nn_col = 4\ncateg_targ = set(categ) - set(['Exterior2nd','Neighborhood','Exterior1st'])\nfig, axes = plt.subplots(nrows=n_row, ncols=n_col, figsize=(20,20))\nsns.set(font_scale=2)\nsns.axes_style(\"whitegrid\")\n\nfor i in enumerate(categ_targ):\n    qq=sns.countplot(data_new[i[1]],ax=axes[i[0]\/\/n_row,i[0]%n_col],\\\n                     hue=data_new['SalePrice'])\n    qq.legend_.remove()\nplt.legend().set_title('')\nplt.tight_layout()","c0a880d4":"data_new.head(2)","3b5ffd10":"data_targ = data_new.copy()\nfor i in categ:\n    data_targ[i] = data_targ[i].factorize()[0]\ndata_targ.head(3)","bebf02e2":"from sklearn import preprocessing\nfrom sklearn.preprocessing import Normalizer,MinMaxScaler, RobustScaler\ndata_targ.drop(['SalePrice'],axis=1,inplace=True)\nnrm = Normalizer()\nnrm.fit(data_targ)\nnormal_data = nrm.transform(data_targ)","752b43f0":"from sklearn.manifold import TSNE\ntsn = TSNE(random_state=20)\nres_tsne = tsn.fit_transform(normal_data)\nplt.figure(figsize=(8,8))\nsns.scatterplot(res_tsne[:,0],res_tsne[:,1]);","12971f9f":"link = ward(res_tsne)\nvb = fcluster(link,t=300, criterion='distance')\nfig = plt.figure(figsize=(25,25))\nax1 = fig.add_subplot(3,3,1)\npd.value_counts(vb).plot(kind='barh')\nax2 = fig.add_subplot(3,3,2)\naxpl_2 = sns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],hue=vb,palette=\"Set1\");\naxpl_2.legend_.remove()","6d565703":"sns.set(style='white')\nplt.figure(figsize=(10,7))\n#link = ward(res_tsne)\ndendrogram(link)\nax = plt.gca()\nbounds = ax.get_xbound()\nax.plot(bounds, [300,300],'--', c='k')\nax.plot(bounds,'--', c='k')\nplt.show()","bbeedb60":"assign = vb\ncluster_labels=np.unique(assign)\nn_clusters = len(np.unique(assign))\nsilhouette_vals = silhouette_samples(res_tsne, assign, metric='euclidean')\ny_ax_lower, y_ax_upper = 0, 0\nyticks = []\nplt.figure(figsize=(10,8))\nfor i , c in enumerate(cluster_labels):\n        c_silhouette_vals = silhouette_vals[assign==c]\n        c_silhouette_vals.sort()\n        y_ax_upper += len(c_silhouette_vals)\n        color = cm.jet(float(i) \/ n_clusters)\n        plt.barh(range(y_ax_lower,y_ax_upper),\n                c_silhouette_vals,height=1.0,edgecolor='none',color=color)\n        yticks.append((y_ax_lower+y_ax_upper) \/ 2)\n        y_ax_lower += len(c_silhouette_vals)\nsilhouette_avg = np.mean(silhouette_vals)\n\nplt.axvline(silhouette_avg,color=\"red\",linestyle= \"--\")\nplt.yticks(yticks , cluster_labels + 1)\nplt.ylabel ('Cluster')\nplt.xlabel('Silhouette coefficient')","6a9c756a":"plt.figure(figsize=(10,10))\nsns.set(font_scale=1.5)\nsns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],\\\n                     hue=data_new['SalePrice'],s=70,palette=\"hot\");#,palette=\"RdBu\");","3f8908b6":"most_sign = ['OverallQual','GrLivArea','1stFlrSF','FullBath']\nn_row = 2\nn_col = 2\nfig, axes = plt.subplots(nrows=n_row, ncols=n_col, figsize=(15,15))\nsns.set(font_scale=1)\nsns.axes_style(\"whitegrid\")\nfor i in enumerate(most_sign):\n    qq = sns.scatterplot(x=res_tsne[:,0],y=res_tsne[:,1],ax=axes[i[0]\/\/n_row,i[0]%n_col],\\\n                     hue=data_new[i[1]],s=70,palette=\"RdBu\");\nplt.legend().set_title('')\nplt.tight_layout()","0e4da99a":"## 2. Missing values","7dbc9360":"Apply visualization method - TSNE for clustering our data.","87562cf0":"## 5. Corrplot\nLet's consider classic - corrplot. Of course, special attention to target - SalePrice.","24155507":"## 7. Target\nNow consider target hist. We'll find abnormal values, because many ml algorithms don't like abnormal. Plot hist and boxplot together.","2573702a":"Visualize correlation coefficients to target:","277b22e8":"### 9.2 Important features on cluster plot\nIt seems that the choice of 6 clusters is optimal. <br>\nConsider how displayed target with clusters.","bd001ef3":"Let's check the quality of clustering with dendrogram and silhouette plot:","d4dbd4b4":"Here I plot missing values:","548da7ad":"Four features have very few values - drop them for the first analysis. But this is obviously step - we have other missing values.\u0421onsider this problem from different angles (axes).","19811b9c":"### 9.1 Silhouette plot","2f911004":"## 6. Final set of features\nLet's split features to numeric and categorical:","127c0441":"Missing values in column LotFrontage I fill with median values.","5997f494":"After this we can pick out features, which have one dominant value in the whole sample. These signs are not needed.","bba43d31":"## 3. Categorical features\nNow consider categorical features with same method:","22e22dee":"Here I will bring categories into a numerical format:","6e92680a":"Then I choose most import features (by correlation coefficients): <br>\nOverallQual, GrLivArea, 1stFlrSF, FullBath.","c5e35db6":"## Table of contents\n* [1. Data import](#1.-Data-import)\n* [2. Missing values](#2.-Missing-values)\n* [3. Numerical data](#3.-Numerical-data)\n* [4. Categorical features](#4.-Categorical-features)\n* [5. Corrplot](#5.-Corrplot)\n* [6. Final set of features](#6.-Final-set-of-features)\n* [7. Target](#7.-Target)\n* [8. Visualization](#8.-Visualization)\n* [9. Clustering](#9.-Clustering)\n    * [9.1 Silhouette plot](#9.1-Silhouette-plot)\n    * [9.2 Important features on cluster plot](#9.2-Important-features-on-cluster-plot)","2c82510e":"## 3. Numerical data\nConsider numerical data:","99207d8b":"Here we can see that more than 350000 are only 4% of data. So, drop it by first analysis. ","22034d3a":"Thank you for reading! I hope this kernel was useful for you. <br>\nMy other kernels: https:\/\/www.kaggle.com\/nikitagrec\/kernels","d94b6034":"## 9. Clustering\nWe got an interesting result! This plot does not look like a noise. Try to cluster the data:","619755c5":"## 1. Data import","f6b20dcb":"Now, if we drop all NaN values from rows - we drop only 8% of data.","3c8dd5ba":"What about FirelaceQu? There are a lot of missing values with this feature. If we consider this feature along with 'Fireplaces' - we can see that NaN values means lack of pool in this house.","8f9641ac":"Firstly, drop most correlated features:","bfe31e4c":"## House Prices Clustering","9029766b":"Now I will cut target to 5 parts and see to the distribution. So I will check significance of features to the target. <br>\nWe can see that ","a9eb0874":"## 8. Visualization\nWe can see that the scale of the data varies greatly. Therefore normalize it:"}}