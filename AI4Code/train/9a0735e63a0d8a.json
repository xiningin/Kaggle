{"cell_type":{"5967498e":"code","11b8f183":"code","b6b435eb":"code","3dcc6b38":"code","1f219997":"code","6e6dc4cc":"code","2afe73ec":"code","6289a540":"code","185fa1f6":"code","ee0d6605":"code","8f52b3fb":"code","402f79b9":"code","d0a5e15b":"code","1a38f0ed":"markdown","890e8e67":"markdown","f6d83ad5":"markdown","e0a9db6e":"markdown","bb4fba5c":"markdown","480eb426":"markdown"},"source":{"5967498e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","11b8f183":"data = pd.read_csv ('..\/input\/pokemon\/pokemon.csv')\ndata.head()","b6b435eb":"#create a dataset for the number of pokemon in each generation\ngenerations = pd.DataFrame ({'count': data.generation.value_counts().sort_index()})\ngenerations ","3dcc6b38":"#plot a bar chart\nplt.figure (figsize = (20, 8))\nsns.barplot (x = generations.index, y = generations['count'])\nplt.title ('Number of Pokemon in Each Generation', fontdict = {'fontsize': 30})\nplt.xlabel ('Generation', fontdict = {'fontsize': 20})\nplt.ylabel ('Number of pokemon', fontdict = {'fontsize': 20})\nplt.show()","1f219997":"#create a dataset that contains a row for each type each pokemon has\ndata2 = data[data.type2.notna()].copy()\ndata2.type1 = data2.type2\ntype_data = pd.concat ([data, data2])\n\n#get a count for each type\ntype_count = type_data.type1.value_counts()\ntype_count = pd.DataFrame ({'count': type_count})\ntype_count","6e6dc4cc":"#plot a bar chart\nplt.figure (figsize = (20, 8))\nsns.barplot (x = type_count.index, y = type_count['count'])\nplt.title ('Occurrences of pokemon types', fontdict = {'fontsize': 30})\nplt.xlabel ('Type', fontdict = {'fontsize': 20})\nplt.ylabel ('Number of pokemon with type', fontdict = {'fontsize': 20})\nplt.show()","2afe73ec":"#create a dataset that has totals for each pokemon type in each generation\ngenerations_types = type_data.groupby (['generation']).type1.value_counts()\ngenerations_types = pd.DataFrame ({'count': generations_types})\ngenerations_types['generation'] = generations_types.index.get_level_values(0)\ngenerations_types['type'] = generations_types.index.get_level_values(1)\ngenerations_types.reset_index(drop = True, inplace = True)\ngenerations_types","6289a540":"#plot a line graph\nplt.figure (figsize = (20, 8))\nsns.lineplot (x = generations_types['generation'], y = generations_types['count'], hue = generations_types['type'])\nplt.title ('Number of Pokemon of Each Type in Each Generation', fontdict = {'fontsize': 30})\nplt.xlabel ('Generation', fontdict = {'fontsize': 20})\nplt.ylabel ('Total pokemon', fontdict = {'fontsize': 20})\nplt.show()","185fa1f6":"#create a data frame that contains counts of how many times each type combination occurs\ntype_combos = data.groupby (['type1', 'type2']).size().unstack()\nfor col in type_combos.columns:\n    type_combos[col] = type_combos[col].fillna(0)\n    \ntype_combos","ee0d6605":"#plot a heatmap\nplt.figure (figsize = (20, 8))\nsns.heatmap (data = type_combos, annot = True, linewidths = 1, cmap = 'Purples')\nplt.title ('Pokemon Type Combinations', fontdict = {'fontsize': 30})\nplt.xlabel ('Type 1', fontdict = {'fontsize': 20})\nplt.ylabel ('Type 2', fontdict = {'fontsize': 20})\nplt.show()","8f52b3fb":"#plot a scatterplot\nplt.figure (figsize = (20, 10))\nsns.regplot (x = data.attack, y = data.defense)\nplt.title ('Relationship Between Attack and Defence', fontdict = {'fontsize': 30})\nplt.xlabel ('Attack', fontdict = {'fontsize': 20})\nplt.ylabel ('Defence', fontdict = {'fontsize': 20})\nplt.show()","402f79b9":"#plot a scatterplot that also shows generation\nsns.lmplot (data = data, x = 'attack', y = 'defense', hue = 'generation')\nplt.title ('Relationship Between Attack and Defence in Each Generation', fontdict = {'fontsize': 20})\nplt.xlabel ('Attack', fontdict = {'fontsize': 20})\nplt.ylabel ('Defence', fontdict = {'fontsize': 20})\nplt.show()","d0a5e15b":"#plot a histogram\nplt.figure (figsize = (20, 10))\nsns.distplot (a = data.weight_kg, kde = False)\nplt.title ('Distribution of Weight', fontdict = {'fontsize': 30})\nplt.xlabel ('Weight (kg)', fontdict = {'fontsize': 20})\nplt.ylabel ('Number of pokemon', fontdict = {'fontsize': 20})\nplt.show()\n#help (plt.title)","1a38f0ed":"# **Type**","890e8e67":"# **Relationship between attack and defence**","f6d83ad5":"Read in the data","e0a9db6e":"Import the required packages","bb4fba5c":"# **Weight**","480eb426":"# **Generation**"}}