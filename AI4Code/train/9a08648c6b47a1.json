{"cell_type":{"329b5ae6":"code","130067b7":"code","1dcaabfb":"code","6fffc3de":"code","f9bd53f4":"code","81d387b5":"code","b338e263":"code","7cb05041":"code","8def8856":"code","18892c17":"code","43b4e6ac":"code","a4bfed0e":"code","e9619edf":"code","a11bee0d":"code","fd9f7bfe":"code","274e8cbf":"code","0840fc48":"code","ad8973b7":"code","4a23ad70":"code","c63a9c00":"code","f8552ab8":"markdown","0fe482b1":"markdown","a05a7dd1":"markdown","f9190f54":"markdown","17b7026c":"markdown","c772ad66":"markdown","5a17594d":"markdown","dd9a8e44":"markdown","e750db6e":"markdown","f33252aa":"markdown","ee037b6b":"markdown","060e0b74":"markdown","1fae0357":"markdown","85090e2e":"markdown","fcc760d2":"markdown","5fdf450e":"markdown","591709eb":"markdown","281dc916":"markdown","61037e45":"markdown","1f21f870":"markdown","284720c9":"markdown","79f5f6dd":"markdown","778ddc08":"markdown"},"source":{"329b5ae6":"import re\nimport math\nimport os\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport tensorflow as tf\nimport cv2\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom PIL import Image","130067b7":"cols, rows = 4, 3\ndef grid_display(list_of_images, no_of_columns=2, figsize=(15,15), title = False):\n    fig = plt.figure(figsize=figsize)\n    column = 0\n    z = 0\n    for i in range(len(list_of_images)):\n        column += 1\n        #  check for end of column and create a new figure\n        if column == no_of_columns+1:\n            fig = plt.figure(figsize=figsize)\n            column = 1\n        fig.add_subplot(1, no_of_columns, column)\n        if title:\n            if i >= no_of_columns:\n                plt.title(titles[z])\n                z +=1\n            else:\n                plt.title(titles[i])\n        plt.imshow(list_of_images[i])\n        plt.axis('off')","1dcaabfb":"TRAIN = '..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/'\nIMAGE_SIZE = 1024\nn_imgs = 12\nimg_filenames = os.listdir(TRAIN)[:n_imgs]\nimg_filenames[:3]\nimage=[]\nfor file_name in img_filenames:\n    img = cv2.imread(TRAIN +file_name)\n    image.append(img)\ngrid_display(image, 4, (15,15))","6fffc3de":"TRAIN = '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/'\nIMAGE_SIZE = 1024\nn_imgs = 12\nimg_filenames = os.listdir(TRAIN)[:n_imgs]\nimg_filenames[:3]\nimage=[]\nfor file_name in img_filenames:\n    img = cv2.imread(TRAIN +file_name)\n    image.append(img)\ngrid_display(image, 4, (15,15))","f9bd53f4":"TRAIN = '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/'\nIMAGE_SIZE = 1024\nn_imgs = 12\nimg_filenames = os.listdir(TRAIN)[:n_imgs]\nimg_filenames[:3]\nimage=[]\nfor file_name in img_filenames:\n    img = cv2.imread(TRAIN +file_name)\n    image.append(img)\ngrid_display(image, 4, (15,15))","81d387b5":"TRAIN = '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/'\nIMAGE_SIZE = 1024\nn_imgs = 12\nimg_filenames = os.listdir(TRAIN)[:n_imgs]\nimg_filenames[:3]\nimage=[]\nfor file_name in img_filenames:\n    img = cv2.imread(TRAIN +file_name)\n    image.append(img)\ngrid_display(image, 4, (15,15))","b338e263":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    #Reducing Noise\n    result = cv2.fastNlMeansDenoisingColored(img,None,20,10,7,21)\n    image_all.append(result)\ngrid_display(image_all, 4, (15,15), title = True)","7cb05041":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n#     #Gaussian Blur\n    blur_image = cv2.GaussianBlur(img, (7,7), 0)\n    image_all.append(blur_image)\ngrid_display(image_all, 4, (15,15), title = True)","8def8856":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    #Adjusted contrast\n    contrast_img = cv2.addWeighted(img, 2.005, np.zeros(img.shape, img.dtype), 0, 0)\n    image_all.append(contrast_img)\ngrid_display(image_all, 4, (15,15), title = True)","18892c17":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n'..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1603223711-0003-T_R.tif']\nimage_all=[]\ntitles = ['original Falciparum', 'Adaptive thresholding', \"Binary thresholding\"]\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    image_all.append(img)\n    #Adaptive Thresholding..\n    gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n    thresh1 = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)\n    image_all.append(thresh1)\n    #Binary Thresholding...\n    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV) \n    res, thresh = cv2.threshold(hsv[:, :, 0], 20, 255, cv2.THRESH_BINARY_INV)\n    image_all.append(thresh)\ngrid_display(image_all, 3, (15,15), title = True)","43b4e6ac":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0036-S_R.tif',\n'..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['original Vivax Image', 'Adaptive thresholding', \"Binary thresholding\"]\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    image_all.append(img)\n    #Adaptive Thresholding..\n    gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n    thresh1 = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 115, 1)\n    image_all.append(thresh1)\n    #Binary Thresholding...\n    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV) \n    res, thresh = cv2.threshold(hsv[:, :, 0], 125, 255, cv2.THRESH_BINARY_INV)\n    image_all.append(thresh)\ngrid_display(image_all, 3, (15,15), title = True)","a4bfed0e":"img = cv2.imread('..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif', 0)\n# global thresholding\nret1,th1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)\n\n# Otsu's thresholding\nret2,th2 = cv2.threshold(img,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n\n# Otsu's thresholding after Gaussian filtering\nblur = cv2.GaussianBlur(img,(5,5),0)\nret3,th3 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)\n\n# plot all the images and their histograms\nimages = [img, 0, th1,\n          img, 0, th2,\n          blur, 0, th3]\ntitles = ['Original Noisy Image','Histogram','Global Thresholding (v=127)',\n          'Original Noisy Image','Histogram',\"Otsu's Thresholding\",\n          'Gaussian filtered Image','Histogram',\"Otsu's Thresholding\"]\nplt.figure(figsize=(15,10))\nfor i in range(3):\n    plt.subplot(3,3,i*3+1),plt.imshow(images[i*3],'gray')\n    plt.title(titles[i*3]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3,3,i*3+2),plt.hist(images[i*3].ravel(),256)\n    plt.title(titles[i*3+1]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3,3,i*3+3),plt.imshow(images[i*3+2],'gray')\n    plt.title(titles[i*3+2]), plt.xticks([]), plt.yticks([])\nplt.show()","e9619edf":"image_all = []\nimg = cv2.imread('..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0036-S_R.tif', 1)\nimage_all.append(img)\n# Initiate ORB detector\norb = cv2.ORB_create()\n# find the keypoints with ORB\nkp = orb.detect(img,None)\n# compute the descriptors with ORB\nkp, des = orb.compute(img, kp)\n# draw only keypoints location,not size and orientation\nimg2 = cv2.drawKeypoints(img, kp, None, color=(0,255,0), flags=0)\n# plt.imshow(img2)\n# plt.show()\nimg2 = img2[900:1400,1200:1600]\nimage_all.append(img2)\ngrid_display(image_all, 3, (15,15), title = False)","a11bee0d":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    img_neg = 1 - img\n    image_all.append(img_neg)\ngrid_display(image_all, 4, (25,25), title = True)","fd9f7bfe":"import albumentations as alb\nchosen_image = cv2.imread('..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0036-S_R.tif')\nalbumentation_list = [alb.RandomSunFlare(p=1), alb.RandomFog(p=1), alb.RandomBrightness(p=1),\n                      alb.RandomCrop(p=1,height = 512, width = 512), alb.Rotate(p=1, limit=90),\n                      alb.RGBShift(p=1), alb.RandomSnow(p=1),\n                      alb.HorizontalFlip(p=1), alb.VerticalFlip(p=1), alb.RandomContrast(limit = 0.5,p = 1),\n                      alb.HueSaturationValue(p=1,hue_shift_limit=20, sat_shift_limit=30, val_shift_limit=50)]\n\nimg_matrix_list = []\nbboxes_list = []\nfor aug_type in albumentation_list:\n    img = aug_type(image = chosen_image)['image']\n    img_matrix_list.append(img)\n\nimg_matrix_list.insert(0,chosen_image)    \n\ntitles_list = [\"Original\",\"RandomSunFlare\",\"RandomFog\",\"RandomBrightness\",\"RandomCrop\",\"Rotate\", \"RGBShift\", \"RandomSnow\",\"HorizontalFlip\", \"VerticalFlip\", \"RandomContrast\",\"HSV\"]\n\n##reminder of helper function\ndef plot_multiple_img(img_matrix_list, title_list, ncols, main_title=\"\"):\n    fig, myaxes = plt.subplots(figsize=(20, 15), nrows=3, ncols=ncols, squeeze=False)\n    fig.suptitle(main_title, fontsize = 30)\n    fig.subplots_adjust(wspace=0.3)\n    fig.subplots_adjust(hspace=0.3)\n    for i, (img, title) in enumerate(zip(img_matrix_list, title_list)):\n        myaxes[i \/\/ ncols][i % ncols].imshow(img)\n        myaxes[i \/\/ ncols][i % ncols].set_title(title, fontsize=15)\n        plt.axis('off')\n    plt.show()\n    \nplot_multiple_img(img_matrix_list, titles_list, ncols = 4,main_title=\"Different Types of Augmentations\")","274e8cbf":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    kernel = np.ones((5,5),np.uint8)\n    erosion = cv2.erode(img,kernel,iterations = 1)\n    image_all.append(erosion)\ngrid_display(image_all, 4, (15,15), title = True)","0840fc48":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    kernel = np.ones((5,5),np.uint8)\n    dilation = cv2.dilate(img,kernel,iterations = 1)\n    image_all.append(dilation)\ngrid_display(image_all, 4, (15,15), title = True)\n","ad8973b7":"image_list = ['..\/input\/malaria-parasite-image-malaria-species\/Falciparum\/img\/1701151546-0013-R_T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',\n              '..\/input\/malaria-parasite-image-malaria-species\/Ovale\/img\/1707180816-0019-S.tif',\n             '..\/input\/malaria-parasite-image-malaria-species\/Vivax\/img\/1709041080-0014-R.tif']\nimage_all=[]\ntitles = ['Falciparum', 'Malariae', \"Ovale\", 'Vivax']\nfor image_id in image_list:\n    img = cv2.imread(image_id)\n    kernel = np.ones((5,5),np.uint8)\n    gradient = cv2.morphologyEx(img, cv2.MORPH_GRADIENT, kernel)\n    image_all.append(gradient)\ngrid_display(image_all, 4, (20,20), title = True)","4a23ad70":"img = cv2.imread('..\/input\/malaria-parasite-image-malaria-species\/Malariae\/img\/1401080976-0003-T.tif',0)\n\ndft = cv2.dft(np.float32(img),flags = cv2.DFT_COMPLEX_OUTPUT)\ndft_shift = np.fft.fftshift(dft)\n\nmagnitude_spectrum = 20*np.log(cv2.magnitude(dft_shift[:,:,0],dft_shift[:,:,1]))\n\nplt.figure(figsize=(15,10))\nplt.subplot(121),plt.imshow(img, cmap = 'gray')\nplt.title('Input Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(122),plt.imshow(magnitude_spectrum, cmap = 'gray')\nplt.title('Magnitude Spectrum'), plt.xticks([]), plt.yticks([])\nplt.show()","c63a9c00":"rows, cols = img.shape\ncrow,ccol = rows\/2 , cols\/2\n\n# create a mask first, center square is 1, remaining all zeros\nmask = np.zeros((rows,cols,2),np.uint8)\nmask[int(crow-30):int(crow+30), int(ccol-30):int(ccol+30)] = 1\n\n# apply mask and inverse DFT\nfshift = dft_shift*mask\nf_ishift = np.fft.ifftshift(fshift)\nimg_back = cv2.idft(f_ishift)\nimg_back = cv2.magnitude(img_back[:,:,0],img_back[:,:,1])\n\nplt.figure(figsize=(15,10))\nplt.subplot(121),plt.imshow(img, cmap = 'gray')\nplt.title('Input Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(122),plt.imshow(img_back, cmap = 'gray')\nplt.title('Magnitude Spectrum'), plt.xticks([]), plt.yticks([])\nplt.show()","f8552ab8":"## Morphological operations\nMorphological operations are a set of operations that process images based on shapes. They apply a structuring element to an input image and generate an output image.","0fe482b1":"### View the chunk of Ovale Species...","a05a7dd1":"### View the chunk of Falciparum Species...","f9190f54":"## Morphological Gradient\n* It is the difference between dilation and erosion of an image.","17b7026c":"## Apply Image Negative ....","c772ad66":"## Apply Some Image Augmentation....","5a17594d":"# About this notebook....\nMalaria remains a major burden on global health, with roughly 200 million cases worldwide and more than 400,000 deaths per year. Besides biomedical research and political efforts, modern information technology is playing a key role in many attempts at fighting the disease. One of the barriers toward a successful mortality reduction has been inadequate malaria diagnosis in particular. To improve diagnosis, image analysis software and machine learning methods have been used to quantify parasitemia in microscopic blood slides. This article gives an overview of these techniques and discusses the current developments in image analysis and machine learning for microscopic malaria diagnosis\n\nAs always i try my level best to explian each and everything in this, as simple as possible.\n\n### <font color='blue'>If you find this kernal helpfull please Upvote. ;)<font>","dd9a8e44":"### View the chunk of Malariae Species...","e750db6e":"## References...\n* Kernal On melanoma Skin cancer classification.[click here](https:\/\/www.kaggle.com\/saife245\/melanoma-detail-analysis-eda-ip-augmentation-model)\n* Research Paper on malaria cell image.[Click here](https:\/\/www.kaggle.com\/saife245\/malaria-plasmodium-vivax-specie)\n* Opencv Docs for image analysis.[click here](https:\/\/docs.opencv.org\/)\n\n## My Other work on Kaggle...\n* NeuroImaging Detail analysis.[click here](https:\/\/www.kaggle.com\/saife245\/neuroimaging-in-depth-understanding-eda-model)\n* R-challange of 100+ vsualization. [click here](https:\/\/www.kaggle.com\/saife245\/r-challenge-of-100-visualization-in-r)\n* Image Augmentation Techniques.[click here](https:\/\/www.kaggle.com\/saife245\/cutmix-vs-mixup-vs-gridmask-vs-cutout)","f33252aa":"### Writing helper function...","ee037b6b":"## End Notes...\n\n* This kernal is work in progress. \n* This kernal give rough idea about the dataset of Malaria Species.\n* I try my level best to explin and update the kernal\n\n## <font color='red'> If you find this kernal helpfull Please upvote it. ;)<font>","060e0b74":"## Apply some Image Processing...\nIn computer science, digital image processing is the use of a digital computer to process digital images through an algorithm. As a subcategory or field of digital signal processing, digital image processing has many advantages over analog image processing.\n","1fae0357":"## Erosion:\n* Erodes away the boundaries of foreground object\n* Used to diminish the features of an image.","85090e2e":"# Introduction...\nMalaria is caused by protozoan parasites of the genus Plasmodium that are transmitted through the bites of infected female Anopheles mosquitoes and that infect the red blood cells. Most deaths occur among children in Africa, where a child dies almost every minute from malaria, and where malaria is a leading cause of childhood neuro-disability.\n\n## Some Interesting Reports...\n* According to the World Malaria Report 2016,1 an estimated 3.2 billion people in 95 countries and territories are at risk of being infected with malaria and developing disease, and 1.2 billion are at high risk (>1 in 1000 chance of getting malaria in a year).\n* There were about 214 million cases of malaria globally in 2016 and about 438,000 malaria deaths. \n* The burden was heaviest in the African region, where an estimated 92% of all malaria deaths occurred, and in children aged under 5 years, who accounted for more than two thirds of all deaths. \n![grap_malar.JPG](attachment:grap_malar.JPG)\n* Typical symptoms of malaria include fever, fatigue, headaches, and, in severe cases, seizures and coma, leading to death.\n* Hundreds of millions of blood films are examined every year for malaria, which involves manual counting of parasites and infected red blood cells by a trained microscopist.\n* Accurate parasite counts are essential not only for malaria diagnosis. They are also important for testing for drugresistance, measuring drug-effectiveness, and classifying disease severity.","fcc760d2":"## Adaptive Thresholding...\nAdaptive thresholding is a form of thresholding that takes into account spatial variations in illumination.\nWe present a technique for real-time adaptive thresholding using the integral image of the input.\n## Binary Thresholding...\nImage thresholding is a simple, yet effective, way of partitioning an image into a foreground and background.\nThis image analysis technique is a type of image segmentation that isolates objects by converting grayscale images into binary images.\nBinary (Bi-valued) Image means, only bi or two intensity values can be used to represent the whole image.","5fdf450e":"### View the chunk of Vivax Species...","591709eb":"## Dilation:\n* Increases the object area\n* Used to accentuate features","281dc916":"## Applying Fourier Transform...","61037e45":"## Adjusted Contrast...\n* To change the contrast or brightness of an image, the Adjust Contrast tool performs contrast stretching.\n* In this process, pixel values below a specified value are mapped to black and pixel values above a specified value are mapped to white.","1f21f870":"## ORB (Oriented FAST and Rotated BRIEF)...\nORB is basically a fusion of FAST keypoint detector and BRIEF descriptor with many modifications to enhance the performance. First it use FAST to find keypoints, then apply Harris corner measure to find top N points among them. It also use pyramid to produce multiscale-features.\n\nIt computes the intensity weighted centroid of the patch with located corner at center. The direction of the vector from this corner point to centroid gives the orientation.","284720c9":"\n## Use Noise Reduction...\n* Noise means, the pixels in the image show different intensity values instead of true pixel values that are obtained from image.\n* Noise removal algorithm is the process of removing or reducing the noise from the image.","79f5f6dd":"## Use Gaussian Blur...\n* In image processing, a Gaussian blur (also known as Gaussian smoothing) is the result of blurring an image by a Gaussian function (named after mathematician and scientist Carl Friedrich Gauss).\n* It is a widely used effect in graphics software, typically to reduce image noise and reduce detail.\n","778ddc08":"## Otsu\u2019s Binarization....\nIn computer vision and image processing, Otsu's method is used to perform automatic image thresholding.\nIn the simplest form, the algorithm returns a single intensity threshold that separate pixels into two classes, foreground and background."}}