{"cell_type":{"f6da81cd":"code","3f02f21f":"code","61cb9583":"code","9db94f8a":"code","4eee4db9":"code","043cfe46":"code","9fbd8575":"code","3fc949ed":"code","72e43e28":"code","d19817cd":"code","599b234c":"code","765d656f":"markdown","3b64c957":"markdown"},"source":{"f6da81cd":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline","3f02f21f":"train_data_path = \"..\/input\/ex1_train_data.csv\"\ntrain_data = pd.read_csv(train_data_path, delimiter = \";\")\n# Implemente aqui, a leitura dos arquivos csv","61cb9583":"train_data.head(5)","9db94f8a":"def plot_points(data):\n    x = data[\"x\"]\n    y = data[\"y\"]\n    plt.scatter(x, y, color = 'b', alpha = 0.3)\n    plt.title(\"m\u00b2 x $\")\n    plt.xlabel(\"Metragem\")\n    plt.ylabel(\"Custo (Milhares)\")","4eee4db9":"plot_points(train_data)","043cfe46":"def calculate_mse(Y, Y_pred):\n    mse = 1\/len(Y) * (sum( (Y - Y_pred) ** 2 ))\n    \n    return mse","9fbd8575":"best_a = None\nbest_b = None\nbest_error = None","3fc949ed":"# Implemente aqui, sua l\u00f3gica de busca pelo melhores valores de a e b\nfor a in range(1, 100):\n    for b in range(1, 100):\n        Y_pred = train_data['x'] * a + b\n        \n        new_mse = calculate_mse(train_data[\"y\"], Y_pred)\n        \n        if best_error is None or new_mse < best_error:\n            best_error = new_mse\n            best_a = a\n            best_b = b","72e43e28":"print(\"Best mse => {}, Best a => {}, Best b => {}\".format(best_error, best_a, best_b))","d19817cd":"def plot_points_and_lreg(data, a, b):\n    x = data[\"x\"]\n    y = data[\"y\"]\n    plt.scatter(x, y, color = 'b', alpha = 0.3)\n    plt.title(\"m\u00b2 x $\")\n    plt.xlabel(\"Metragem\")\n    plt.ylabel(\"Custo (Milhares)\")\n    plt.plot(x, a * x + b, color = 'r')","599b234c":"plot_points_and_lreg(train_data, best_a, best_b)","765d656f":"# Fa\u00e7a seu algoritmo de aprendizado de m\u00e1quina","3b64c957":"[2 4 6] * 2 + 1 = [5, 9, 13] \/ [2 2 2] - [1 1 1] = [1 1 1]"}}