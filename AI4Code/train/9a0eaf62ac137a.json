{"cell_type":{"73550a62":"code","f24f8de4":"code","061a6eac":"code","82ed0137":"code","54543856":"code","349bb218":"code","0158f470":"code","3cabe526":"markdown","bf48e0ff":"markdown","b0bd046b":"markdown","35ca117d":"markdown","4b50baa5":"markdown"},"source":{"73550a62":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","f24f8de4":"# Load libraries\nimport numpy\nfrom pandas import read_csv\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.preprocessing import PowerTransformer","061a6eac":"# Load dataset\nfilename = \"..\/input\/seeds_dataset.csv\"\nnames = [\"areaA\", \"perimeterP\", \"compactnessC\", \"lengthkernel\", \"widthkernel\",\n         \"asymmetry\", \"lengthkernelgroove\", \"class\"]\ndataset = read_csv(filename, delim_whitespace=True, names=names)","82ed0137":"# Split-out validation dataset\narray = dataset.values\nX = array[:, 0:7]\nY = array[:, 7]\nvalidation_size = 0.30\nseed = 7","54543856":"# make data Gaussian-Like\nbc = PowerTransformer(method=\"box-cox\", standardize=True)\nX_pt = bc.fit_transform(X)","349bb218":"X_train, X_validation, Y_train, Y_validation = \\\n    train_test_split(X_pt, Y, test_size=validation_size, random_state=seed)\nnum_folds = 10\nseed = 7\nscoring = 'accuracy'","0158f470":"# Predictions on validation dataset\n# LinearDiscriminantAnalysis as model\nmodel = LinearDiscriminantAnalysis()\nmodel.fit(X_train, Y_train)\n\n# estimate accuracy on validation dataset\npredictions = model.predict(X_validation)\n\nprint(\"Accuracy score:\")\nprint(accuracy_score(Y_validation, predictions))\nprint(confusion_matrix(Y_validation, predictions))\nprint(classification_report(Y_validation, predictions))","3cabe526":"## Predictions on validation dataset","bf48e0ff":"## Prepare data","b0bd046b":"## Load Dataset","35ca117d":"## Prepare Data for LDA using Box-Cox","4b50baa5":"# Wheat Seed Prediction"}}