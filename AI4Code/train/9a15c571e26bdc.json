{"cell_type":{"491e9a9f":"code","88d0a47f":"code","56d6999a":"code","e030994b":"code","6fc68cb2":"code","7d3ac41a":"code","cf9717ea":"code","46adbca5":"code","bd4c132a":"code","2d1b669b":"code","0fbae001":"code","d9621b5a":"code","6e9d34f7":"code","27ea2807":"code","ec28fa08":"code","92cca404":"code","4a92513e":"code","89b1dd6f":"code","b397614e":"code","8b5e71e8":"code","f28c1b34":"code","969ea645":"code","0898cb09":"code","9dc9c681":"code","9c72d9e1":"code","69a19c19":"code","9c596aee":"code","11e9df75":"code","00b22833":"code","a8064220":"code","df298f8f":"code","8d07353c":"code","676d6031":"code","3522b962":"code","35e75ebb":"code","8dade915":"code","f22f06d9":"code","f2dc4af1":"code","869ae283":"code","1205768a":"markdown","507ac341":"markdown"},"source":{"491e9a9f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","88d0a47f":"#\u5404\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\n#train\u30c7\u30fc\u30bf\u3068test\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3057\uff0call_df\u306b\u4ee3\u5165\n\ntrain_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")\nall_df = pd.concat([train_df, test_df], sort=False).reset_index(drop=True)","56d6999a":"#all_df\u306ePclass\u306b\u3042\u308b\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u3068\u305d\u306e\u51fa\u73fe\u56de\u6570\n\nall_df.Pclass.value_counts()","e030994b":"#Pclass\u306e\u30e6\u30cb\u30fc\u30af\u306a\u8981\u7d20\u306e\u51fa\u73fe\u56de\u6570\u306e\u68d2\u30b0\u30e9\u30d5\n\nall_df.Pclass.value_counts().plot.bar()","6fc68cb2":"#Pclass\u3054\u3068\u306eFare(\u904b\u8cc3)\u306e\u7d71\u8a08\u91cf\n\nall_df[[\"Pclass\",\"Fare\"]].groupby(\"Pclass\").describe()","7d3ac41a":"%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns","cf9717ea":"#Pclass\u3054\u3068\u306eFare\u306e\u7bb1\u30d2\u30b2\u56f3\n\nplt.figure(figsize=(6,5))\nsns.boxplot(x=\"Pclass\", y=\"Fare\", data=all_df)","46adbca5":"#Pclass\u306e\u30ab\u30e9\u30e0\u3092\u30b3\u30d4\u30fc\n\nall_df[\"Pclass2\"] = all_df[\"Pclass\"]","bd4c132a":"#Fare\u304c108\u3088\u308a\u9ad8\u3044\u30af\u30e9\u30b9\u3092\u30af\u30e9\u30b9\"0\"\u3068\u3057\u3066Pclass2\u306b\u4ee3\u5165\n\nall_df.loc[all_df[\"Fare\"]>108, \"Pclass2\"] = 0","2d1b669b":"#Fare\u304c108\u3088\u308a\u9ad8\u3044\u30af\u30e9\u30b9\n\nall_df[all_df[\"Pclass2\"] == 0]","0fbae001":"#Pclass2\uff08\u30c1\u30b1\u30c3\u30c8\u306e\u30af\u30e9\u30b9\uff09\u3054\u3068\u306e\u5e74\u9f62\u306e\u7d71\u8a08\u91cf\n\nall_df[[\"Pclass2\",\"Age\"]].groupby(\"Pclass2\").describe()","d9621b5a":"#Pclass2\uff08\u30c1\u30b1\u30c3\u30c8\u306e\u30af\u30e9\u30b9\uff09\u3054\u3068\u306e\u5e74\u9f62\u306e\u7bb1\u30d2\u30b2\u56f3\n\nplt.figure(figsize=(6,5))\nsns.boxplot(x=\"Pclass2\", y=\"Age\", data=all_df)","6e9d34f7":"#16\u6b73\u4ee5\u4e0a\u306e\u4e57\u5ba2\u306ePclass2\u3054\u3068\u306e\u5e74\u9f62\u306e\u7d71\u8a08\u91cf\n\nall_df[all_df[\"Age\"]>15][[\"Pclass2\",\"Age\"]].groupby(\"Pclass2\").describe()","27ea2807":"#Pclass2\u3054\u3068\u306e\u5e74\u9f62\u306e\u7bb1\u30d2\u30b2\u56f3\n\nplt.figure(figsize=(6,5))\nsns.boxplot(x=\"Pclass2\", y=\"Age\", data=all_df[all_df[\"Age\"]>15])","ec28fa08":"#\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\n\nall_df.plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)","92cca404":"#SibSp(\u5144\u5f1f\uff0c\u914d\u5076\u8005\u306e\u6570)\u3068Parch(\u4e21\u89aa\uff0c\u5b50\u4f9b\u306e\u6570)\u306e\u5408\u8a08\u3092family_num\u3068\u3057\u3066\u65b0\u3057\u3044\u5909\u6570\u306b\u3059\u308b\n\nall_df[\"family_num\"] = all_df[\"SibSp\"] + all_df[\"Parch\"]","4a92513e":"#Pclass2\u3054\u3068\u306efamily_num\u306e\u7d71\u8a08\u91cf\n\nall_df[[\"Pclass2\",\"family_num\"]].groupby(\"Pclass2\").describe()","89b1dd6f":"#Pclass2\u3054\u3068\u306efamily_num\u306e\u7d71\u8a08\u91cf\n\nplt.figure(figsize=(6,5))\nsns.boxplot(x=\"Pclass2\", y=\"family_num\", data=all_df)","b397614e":"#Pclass2,Sex\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\n\nPclass_gender_df = all_df[[\"Pclass2\",\"Sex\", \"PassengerId\"]].dropna().groupby([\"Pclass2\",\"Sex\"]).count().unstack()","8b5e71e8":"#Pclass2,Sex\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u3078\n\nPclass_gender_df.plot.bar(stacked=True)","f28c1b34":"#Pclass_gender_df\u306b\u7537\u6027\u306e\u5272\u5408\u3092\u8ffd\u52a0\n\nPclass_gender_df[\"male_ratio\"] = Pclass_gender_df[\"PassengerId\", \"male\"]\/(Pclass_gender_df[\"PassengerId\",\"male\"] + Pclass_gender_df[\"PassengerId\",\"female\"])","969ea645":"Pclass_gender_df","0898cb09":"#Pclass2,Embarked(\u4e57\u8239\u6e2f)\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\n\nPclass_emb_df = all_df[[\"Pclass2\",\"Embarked\",\"PassengerId\"]].dropna().groupby([\"Pclass2\",\"Embarked\"]).count().unstack()","9dc9c681":"#Pclass2,Embarked(\u4e57\u8239\u6e2f)\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092\u68d2\u30b0\u30e9\u30d5\u306b\n\nPclass_emb_df.plot.bar(stacked=True)","9c72d9e1":"#Pclass_emb_df\u306e\u6b20\u640d\u5024\u30920\u306b.\n\nPclass_emb_df = Pclass_emb_df.fillna(0);","69a19c19":"Pclass_emb_df","9c596aee":"#Pclass2\u3054\u3068\u306e\u5404\u4e57\u8239\u6e2f\u306e\u5272\u5408\n\nPclass_emb_df_ratio = Pclass_emb_df.copy()\nPclass_emb_df_ratio[\"sum\"] = Pclass_emb_df_ratio[\"PassengerId\",\"C\"] + Pclass_emb_df_ratio[\"PassengerId\", \"Q\"] + Pclass_emb_df_ratio[\"PassengerId\", \"S\"]\nPclass_emb_df_ratio[\"PassengerId\", \"C\"] = Pclass_emb_df_ratio[\"PassengerId\", \"C\"] \/ Pclass_emb_df_ratio[\"sum\"]\nPclass_emb_df_ratio[\"PassengerId\", \"Q\"] = Pclass_emb_df_ratio[\"PassengerId\", \"Q\"] \/ Pclass_emb_df_ratio[\"sum\"]\nPclass_emb_df_ratio[\"PassengerId\", \"S\"] = Pclass_emb_df_ratio[\"PassengerId\", \"S\"] \/ Pclass_emb_df_ratio[\"sum\"]\nPclass_emb_df_ratio = Pclass_emb_df_ratio.drop([\"sum\"],axis=1)","11e9df75":"Pclass_emb_df_ratio","00b22833":"#Pclass2\u3054\u3068\u306e\u5404\u4e57\u8239\u6e2f\u306e\u5272\u5408\u3092\u68d2\u30b0\u30e9\u30d5\u306b\n\nPclass_emb_df_ratio.plot.bar(stacked=True)","a8064220":"#\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\uff0c\u5358\u72ec\u306e10\u4ee3\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\n\nC_young10 = all_df[(all_df[\"Embarked\"] == \"C\") & (all_df[\"Age\"] \/\/ 10 == 1) & (all_df[\"family_num\"] == 0)]","df298f8f":"#\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\uff0c\u5358\u72ec\u306e20\u4ee3\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\n\nC_young20 = all_df[(all_df[\"Embarked\"] == \"C\") & (all_df[\"Age\"] \/\/ 10 == 2) & (all_df[\"family_num\"] == 0)]","8d07353c":"#\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\uff0c\u5358\u72ec\u306e10\u4ee3\u306e\u6570\n\nlen(C_young10)","676d6031":"#\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\uff0c\u5358\u72ec\u306e20\u4ee3\u306e\u6570\n\nlen(C_young20)","3522b962":"#\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\uff08\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\u5358\u72ec\u306e10\u4ee3\u3092\u8d64\u304f\u30d7\u30ed\u30c3\u30c8\uff09\n\nax = all_df.plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)\nC_young10.plot.scatter(x=\"Age\", y=\"Fare\", color=\"red\", alpha=0.5, ax=ax)","35e75ebb":"#\u5358\u72ec\u306e\u4e57\u5ba2\u306e\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\uff08\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\u5358\u72ec\u306e10\u4ee3\u3092\u8d64\u304f\u30d7\u30ed\u30c3\u30c8\uff09\n\nax = all_df[all_df[\"family_num\"] == 0].plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)\nC_young10.plot.scatter(x=\"Age\", y=\"Fare\", color=\"red\", alpha=0.5, ax=ax)","8dade915":"#\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\uff08\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\u5358\u72ec\u306e20\u4ee3\u3092\u8d64\u304f\u30d7\u30ed\u30c3\u30c8\uff09\n\nax = all_df.plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)\nC_young20.plot.scatter(x=\"Age\", y=\"Fare\", color=\"red\", alpha=0.5, ax=ax)","f22f06d9":"#\u5358\u72ec\u306e\u4e57\u5ba2\u306e\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\uff08\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\u5358\u72ec\u306e20\u4ee3\u3092\u8d64\u304f\u30d7\u30ed\u30c3\u30c8\uff09\n\nax = all_df[all_df[\"family_num\"] == 0].plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)\nC_young20.plot.scatter(x=\"Age\", y=\"Fare\", color=\"red\", alpha=0.5, ax=ax)","f2dc4af1":"#\u5e74\u9f62\u3068Fare\u306e\u6563\u5e03\u56f3\uff08\u30c1\u30a7\u30eb\u30d6\u30fc\u30eb\u3067\u4e57\u8239\u3057\u305f\u5ba2\u3092\u8d64\u304f\u30d7\u30ed\u30c3\u30c8\uff09\n\nC_all = all_df[(all_df[\"Embarked\"] == \"C\")]\nax = all_df.plot.scatter(x=\"Age\", y=\"Fare\", alpha=0.5)\nC_all.plot.scatter(x=\"Age\", y=\"Fare\", color=\"red\", alpha=0.5, ax=ax)","869ae283":"#\u5358\u72ec\u306e10\u4ee3\u306e\u4e57\u8239\u6e2f\u3054\u3068\u306eFare\u306e\u5e73\u5747\n\nall_df[(all_df[\"Age\"] \/\/ 10 == 1) & (all_df[\"family_num\"] == 0)][[\"Embarked\",\"Fare\"]].groupby(\"Embarked\").mean()","1205768a":"[](http:\/\/)\u300cPython\u3067\u52d5\u304b\u3057\u3066\u5b66\u3076! Kaggle\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580\u300d(\u7be0\u7530 \u88d5\u4e4b (\u8457))\u306b\u3042\u308b\u51e6\u7406\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\uff0e\n\n\u66f8\u7c4dURL:https:\/\/www.amazon.co.jp\/Python\u3067\u52d5\u304b\u3057\u3066\u5b66\u3076\uff01Kaggle\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580-\u7be0\u7530-\u88d5\u4e4b-ebook\/dp\/B08FDHX4PL\/ref=tmm_kin_swatch_0?_encoding=UTF8&qid=&sr=","507ac341":"\u53c2\u8003\uff1a\n\n\u30fb\u300e[Kaggle\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580](https:\/\/www.amazon.co.jp\/Python\u3067\u52d5\u304b\u3057\u3066\u5b66\u3076-Kaggle\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580-AI-TECHNOLOGY-\u7be0\u7530\/dp\/4798165239\/ref=sr_1_1?dchild=1&qid=1615682817&s=books&sr=1-1&text=\u7be0\u7530+\u88d5\u4e4b)\u300f\uff08\u8457\uff1a\u7be0\u7530 \u88d5\u4e4b\uff09\n\n\u203b\u66f8\u7c4d\u306b\u8a18\u8f09\u306e\u3042\u308b\u51e6\u7406\u3068\u540c\u3058\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\uff0e\u81ea\u5206\u306e\u5fa9\u7fd2\u7528\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\uff0e"}}