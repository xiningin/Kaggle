{"cell_type":{"3ed025b1":"code","42b8e63a":"code","4f4243b0":"code","50db0a46":"code","131126a7":"code","d139cc9d":"code","70f8eb1a":"code","3d792ccd":"code","e73d95f4":"code","ca11b8a0":"code","0e6d6f37":"code","9f3f349f":"code","ded02602":"code","c6ee4d60":"code","1c4758bc":"markdown","866e4cc5":"markdown"},"source":{"3ed025b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","42b8e63a":"heart = pd.read_csv(\"\/kaggle\/input\/heart-attack-analysis-prediction-dataset\/heart.csv\")","4f4243b0":"heart.describe()","50db0a46":"heart.head() #Viewing sample from datasheet","131126a7":"heart.dtypes #Checking datatypes","d139cc9d":"X = heart.drop(\"output\",axis=1) #Splitting input X, and output y\ny = heart[\"output\"]","70f8eb1a":"y.value_counts() #Checking no of 1's and 0's in output","3d792ccd":"from sklearn.model_selection import train_test_split #Splitting data into Train and Test\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=42)","e73d95f4":"from sklearn.ensemble import RandomForestClassifier #Using Random Forest Classifier for fitting model\nmodel = RandomForestClassifier()\nmodel.fit(X_train,y_train)","ca11b8a0":"model.score(X_test,y_test) #Checking Prediction Score","0e6d6f37":"y_preds = model.predict(X_test) #Making Predictions","9f3f349f":"from sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nprint(classification_report(y_test, y_preds))","ded02602":"confusion_matrix(y_test,y_preds)","c6ee4d60":"accuracy_score(y_test,y_preds)","1c4758bc":"**Load Data sheet**","866e4cc5":"# Heart Attack Data Analysis"}}