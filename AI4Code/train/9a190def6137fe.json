{"cell_type":{"9733d468":"code","028c7190":"code","2f6e074c":"code","311868c2":"code","8c66fed0":"code","c2942762":"code","7d9c7335":"code","5042c74a":"code","887d56c5":"code","4fe474fc":"code","0f240251":"code","b0fbdfca":"code","76cc647e":"code","b202ce33":"code","dc9845ba":"code","f33888c0":"code","4656b5b0":"code","06876264":"code","32ad5ca7":"code","28a24bde":"code","c8943186":"code","ae5854d8":"code","01786860":"code","f48b13b9":"code","06cbf18e":"code","74895081":"code","4c6a4f93":"code","9937f693":"code","629905d9":"code","d9409e47":"code","cefa61e3":"code","34d52dc8":"code","afc3354f":"code","68ab7c13":"code","a4af7e98":"code","cb5294cb":"code","fedab3c6":"code","47ebef83":"code","5dc91b18":"code","b18b1caa":"code","133d59bf":"code","7f932580":"code","fbcad804":"code","8f15f5db":"code","e57cd9b7":"code","cc07a5a9":"code","2605e147":"markdown","946818ac":"markdown","45463f42":"markdown","64a2eb5a":"markdown","89eecf21":"markdown","140daf7d":"markdown","092d0c29":"markdown","58f4a0f1":"markdown","d1f24a9b":"markdown","e86fdc58":"markdown","c5a039c8":"markdown","d79b628b":"markdown","be622dcf":"markdown","eb210bcc":"markdown","6760a6bc":"markdown","c3e0dcdc":"markdown","be33db0a":"markdown","4e362def":"markdown"},"source":{"9733d468":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","028c7190":"!pip install pyspark","2f6e074c":"from pyspark import SparkContext \nsc = SparkContext.getOrCreate()","311868c2":"from pyspark.sql import SparkSession\nspark = SparkSession(sc)","8c66fed0":"from pyspark.sql import SparkSession\nspark = SparkSession(sc)\nPOSITIVOS_DF =spark.read.load( \"..\/input\/covid-8-peru\/positivos_covid.csv\", format=\"csv\", sep=\";\", header=\"true\",inferSchema=\"true\")\nPOSITIVOS_DF.show(10)","c2942762":"N\u00daMERO_DE_POSITIVOS=POSITIVOS_DF.count()\nprint(\"El n\u00famero de personas que dieron positivo hasta la fecha de corte 29\/05\/2021 es: \\n\",N\u00daMERO_DE_POSITIVOS)","7d9c7335":"POSITIVOS_DF.createOrReplaceTempView( \"users\" )\nspark.sql( \"select count(*) from users\" ).show() ","5042c74a":"POSITIVOS_SEX=POSITIVOS_DF.groupby(\"SEXO\").count()\nPOSITIVOS_SEX.show()","887d56c5":"POSITIVOS_DF.createOrReplaceTempView( \"users\" )\nspark.sql( \"select case when SEXO is null then 'INDETERMINADO'\\\n when SEXO == 'FEMENINO' then 'MUJER' \\\n when SEXO == 'MASCULINO' then 'VAR\u00d3N' end GENERO_REGISTRADO, \\\n count(*) from users group by GENERO_REGISTRADO order by 1\" ).show()","4fe474fc":"POSITIVOS_DEPARTAMENTO=POSITIVOS_DF.groupby(\"DEPARTAMENTO\").count()\nPOSITIVOS_DEPARTAMENTO.show(26)","0f240251":"TIPOS_PRUEBA1=POSITIVOS_DF.groupby(\"METODODX\").count()\nTIPOS_PRUEBA1.show()","b0fbdfca":"TIPOS_PRUEBA2=POSITIVOS_DF.groupby(\"EDAD\").count()\nTIPOS_PRUEBA2.show()","76cc647e":"POSITIVOS_DF.createOrReplaceTempView( \"users\" )\nRANGO=spark.sql( \"select case when EDAD is null then 'Sin_registro'\\\n when EDAD < 0 then 'Registro_negativo' \\\n when EDAD between 0 and 24 then '0-25' \\\n when EDAD between 25 and 39 then '25-40' \\\n when EDAD >= 40 then '40+' end RANGO_EDAD, \\\n count(*) from users group by RANGO_EDAD order by 1\" )\nRANGO.show()","b202ce33":"import pandas as pd\nfrom pandas import Series, DataFrame\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pyspark.sql as sparksql","dc9845ba":"# Casos positivos de personas de g\u00e9nero femeninas y masculinas\n\n#POSITIVOS_SEX = POSITIVOS_DF.groupby(\"SEXO\").count()\nPOSITIVOS_SEX.show()\n\nx1 = POSITIVOS_SEX.toPandas()[\"SEXO\"].values.tolist()\ny1 = POSITIVOS_SEX.toPandas()[\"count\"].values.tolist()\n\nplt.bar(x1,y1)\nplt.show\n","f33888c0":"# N\u00famero de casos positivos por departamento\n\nx2 = POSITIVOS_DEPARTAMENTO.toPandas()[\"DEPARTAMENTO\"].values.tolist()\ny2 = POSITIVOS_DEPARTAMENTO.toPandas()[\"count\"].values.tolist()\n\nplt.bar(x2,y2)\nplt.xticks(x2, rotation='vertical')\nplt.show","4656b5b0":"# Tipo de pruebas empleadas en la detecci\u00f3n y el n\u00famero total de cada una\n\nx3 = TIPOS_PRUEBA1.toPandas()[\"METODODX\"].values.tolist()\ny3 = TIPOS_PRUEBA1.toPandas()[\"count\"].values.tolist()\n\nplt.bar(x3,y3)\nplt.show","06876264":"# N\u00famero de casos por edad\n\nx4 = RANGO.toPandas()[\"RANGO_EDAD\"].values.tolist()\ny4 = RANGO.toPandas()[\"count(1)\"].values.tolist()\n\nplt.bar(x4,y4)\nplt.xticks(x4, rotation='vertical')\nplt.show\n","32ad5ca7":"import math\nimport numpy as np \nimport pandas as pd  \nimport pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import isnan, when, count, col, isnull, asc, desc, mean\n\n'''Create a spark session'''\nspark = SparkSession.builder.master(\"local\").appName(\"DataWrangling\").getOrCreate()\n'''Set this configuration to get output similar to pandas'''\nspark.conf.set('spark.sql.repl.eagerEval.enabled', True)","28a24bde":"df_febrero = spark.read.csv('..\/input\/pruebasmoleculares-covid19-ins-peru\/pm_19feb_2021.csv',header=True)\ndf_febrero.limit(5)","c8943186":"df_marzo = spark.read.csv('..\/input\/covid-8-peru\/pm12Marzo2021.csv',header=True, sep='|')\ndf_marzo.limit(5)","ae5854d8":"df_febrero.describe().show()","01786860":"df_febrero.agg({'FECHATOMAMUESTRA':'max'}).show()","f48b13b9":"from pyspark.sql import functions as F\ndf_febrero.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES')).groupby('MES').count().sort('MES').show()","06cbf18e":"df_marzo.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES')).groupby('MES').count().sort('MES').show()","74895081":"febrero_sex = df_febrero.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('sexopaciente')).groupby('MES').pivot(\"sexopaciente\").count().sort('MES')\nfebrero_sex.show()","4c6a4f93":"df_marzo.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('sexopaciente')).groupby('MES').pivot(\"sexopaciente\").count().sort('MES').show()","9937f693":"df_febrero.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('DepOrigen')).groupby('DepOrigen').pivot(\"MES\").count().sort('DepOrigen').show()","629905d9":"df_marzo.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('DepOrigen')).groupby('DepOrigen').pivot(\"MES\").count().sort('DepOrigen').show()","d9409e47":"df_febrero.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('RESULTADO')).groupby('MES').pivot(\"RESULTADO\").count().sort('MES').show()","cefa61e3":"df_marzo.select('RESULTADO').distinct().show()","34d52dc8":"df_marzo.select(F.col('RESULTADO')).groupby('RESULTADO').count()","afc3354f":"df_marzo = df_marzo.na.fill({'RESULTADO': 'INVALIDO'})","68ab7c13":"df_marzo.select('RESULTADO').distinct().rdd.map(lambda r: r[0]).collect()","a4af7e98":"df_marzo.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('RESULTADO')).groupby('MES').pivot(\"RESULTADO\").count().sort('MES')","cb5294cb":"df_marzo.select(F.date_format('FECHATOMAMUESTRA','MM').alias('MES'), F.col('RESULTADO')).groupby('RESULTADO').pivot(\"MES\").count().sort('RESULTADO').show()","fedab3c6":"import pandas as pd\nfrom pandas import Series, DataFrame\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pyspark.sql as sparksql","47ebef83":"febrero_sex = df_febrero.groupBy('sexopaciente').count()\nfebrero_sex.show()","5dc91b18":"#N\u00famero total de pruebas por g\u00e9nero por mes \n\n## MES: FEBRERO\n\na1 = febrero_sex.toPandas()[\"sexopaciente\"].values.tolist()\nb1 = febrero_sex.toPandas()[\"count\"].values.tolist()\n\nplt.bar(a1,b1)\nplt.show","b18b1caa":"marzo_sex = df_marzo.groupBy('sexopaciente').count()\nmarzo_sex.show()","133d59bf":"df_dep_febrero = df_febrero.groupBy('DepOrigen').count()\ndf_dep_febrero.show(30)","7f932580":"# N\u00famero de pruebas por departamento por mes\n\n##FEBRERO\n\na3 = df_dep_febrero.toPandas()[\"DepOrigen\"].values.tolist()\nb3 = df_dep_febrero.toPandas()[\"count\"].values.tolist()\n\nplt.bar(a3,b3)\nplt.xticks(a3, rotation='vertical')\nplt.show","fbcad804":"result_febrero = df_febrero.groupBy('RESULTADO').count()\nresult_febrero.show()","8f15f5db":"#N\u00famero total de pruebas por resultado por mes \n\n## MES: FEBRERO\n\na4 = result_febrero.toPandas()[\"RESULTADO\"].values.tolist()\nb4 = result_febrero.toPandas()[\"count\"].values.tolist()\n\nplt.bar(a4,b4)\nplt.show","e57cd9b7":"result_marzo = df_marzo.groupBy('RESULTADO').count()\nresult_marzo.show()","cc07a5a9":"#N\u00famero total de pruebas por resultado por mes \n\n## MES: MARZO\n\na5 = result_marzo.toPandas()[\"RESULTADO\"].values.tolist()\nb5 = result_marzo.toPandas()[\"count\"].values.tolist()\n\nplt.bar(a5,b5)\nplt.show","2605e147":"**5 y 6. N\u00daMERO TOTAL DE PRUEBAS POSITIVAS Y NEGATIVAS POR MES**","946818ac":"**7. OPCIONAL: GRAFIQUE LOS RESULTADOS USANDO LAS BIBLIOTECAS ESTUDIADAS**","45463f42":"**4. N\u00daMERO TOTAL DE PRUEBAS POR DEPARTAMENTO POR MES**","64a2eb5a":"**6. EL N\u00daMERO DE CASOS POR EDAD**","89eecf21":"**5. TIPO DE PRUEBAS EMPLEADAS EN LA DETECCI\u00d3N Y EL N\u00daMERO TOTAL DE CADA UNA.**","140daf7d":"# **DATASET 1 : DATA POSITIVO POR COVID-19 (positivos_covid.csv)**","092d0c29":"**7. GR\u00c1FICOS**","58f4a0f1":"**Fuente de datos:**\n\nhttps:\/\/www.kaggle.com\/alexandmax\/covid-8-peru\n\nhttps:\/\/www.kaggle.com\/ppadillah\/pruebasmoleculares-covid19-ins-peru\n\n**Archivos:**\n\n\/\/positivos_covid.csv\n\n\/\/pm_19feb_2021.csv\n\n\/\/pm_ener_2021.csv","d1f24a9b":"**1. CARGAR DATOS AL KAGGLE**","e86fdc58":"# **GRUPO 5:**\n\n* William Araujo \/ DNI: 44526862\n\n* Angel Ramirez \/ DNI: 76594894\n\n* Martina Guillermo \/ DNI: 47485009\n\n* Pierre Padilla \/ DNI: 70254063\n\n* Leonela Tacure \/ DNI: 4569538","c5a039c8":"# **DATASET 2: Pruebas moleculares para COVID-19 - 2021-**\n\n# Fechas: Febrero y Marzo 2021","d79b628b":"**4. N\u00daMERO DE CASOS POSITIVOS POR DEPARTAMENTO**","be622dcf":"**1. CARGAR DATOS AL KAGGLE**","eb210bcc":"**3. N\u00daMERO TOTAL DE PRUEBAS POR G\u00c9NERO POR MES**","6760a6bc":"**3. CU\u00c1NTOS CASOS POSITIVOS DE PERSONAS DE G\u00c9NERO FEMENINAS Y MASCULINAS**","c3e0dcdc":"##### Hay datos distorcionados en la columna Resultados para el mes de Marzo por lo que se tiene que reemplazar los datos","be33db0a":"**2. N\u00daMERO TOTAL DE PRUEBAS POR MES**","4e362def":"**2. CONTABILIZAR CUANTAS PERSONAS DIERON POSITIVO A COVID HASTA LA FECHA**\n"}}