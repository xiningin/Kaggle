{"cell_type":{"41bfee69":"code","3241560c":"code","38f87e84":"code","dfcf9057":"code","0f78365b":"code","9c9c12d2":"code","e07decc9":"code","fddac39d":"code","00ac18cc":"code","a14f2e2f":"code","0b0905f7":"code","04d3b924":"code","ae15baca":"code","9f8401e6":"code","7150fb62":"code","9c9fdf52":"code","0f46ebff":"code","29be574b":"code","f68eea28":"code","9ca43c29":"code","17789afc":"code","47b3a438":"code","fd5e75f8":"code","f6a2383c":"code","7ebc1d4c":"code","3613984c":"markdown","0338ad3f":"markdown","3f1e65f4":"markdown","e67540bb":"markdown","98c6115d":"markdown","3f7facb9":"markdown","ec09ab32":"markdown","ee2dab5d":"markdown"},"source":{"41bfee69":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3241560c":"df = pd.read_csv(\"..\/input\/heart.csv\")","38f87e84":"df.head()","dfcf9057":"df.info()","0f78365b":"df.shape","9c9c12d2":"df.isnull().sum()","e07decc9":"df.describe()","fddac39d":"plt.figure(figsize=(14,14))\nsns.heatmap(df.corr(), annot = True, linewidth = 0.1, cmap='coolwarm')","00ac18cc":"df.target.value_counts()","a14f2e2f":"sns.countplot(x=\"target\",data=df)","0b0905f7":"sns.countplot(x='sex', data=df)\nplt.xlabel(\"Sex (0 = homem, 1= mulher)\")\nplt.show()","04d3b924":"df['age'].hist(bins=30)\nplt.xlabel('Age')","ae15baca":"plot = df[df.target == 1].age.value_counts().sort_index().plot(kind=\"bar\", figsize=(15,4))\nplot.set_title(\"Age distribution\")","9f8401e6":"plot = df[df.target == 0].age.value_counts().sort_index().plot(kind=\"bar\", figsize=(15,4))\nplot.set_title(\"Age distribution\")","7150fb62":"df.cp.value_counts()","9c9fdf52":"sns.countplot(x=\"cp\",data=df)","0f46ebff":"sns.countplot(x='target',hue='cp',data=df)","29be574b":"pd.crosstab(df.cp, df.target).plot(kind='bar')\nplt.title(\"Frequ\u00eancia de doen\u00e7a card\u00edaca em rela\u00e7\u00e3o ao tipo de dor\")\nplt.xlabel(\"Tipo de dor \")\nplt.ylabel(\"tem a doen\u00e7a ou nao\")","f68eea28":"from sklearn.model_selection import train_test_split","9ca43c29":"X_train, X_test, y_train, y_test = train_test_split(df.drop('target',axis=1), df['target'], test_size=0.30, random_state=101)","17789afc":"from sklearn.linear_model import LogisticRegression","47b3a438":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","fd5e75f8":"predictions = logmodel.predict(X_test)","f6a2383c":"from sklearn.metrics import classification_report","7ebc1d4c":"print(classification_report(y_test,predictions))","3613984c":"# construindo um modelo de Regress\u00e3o Log\u00edstica****","0338ad3f":"# Dataset Columns (Features)\n\n   * Age (age in years)\n   * Sex (1 = male; 0 = female)\n   * CP (chest pain type)\n   * TRESTBPS (resting blood pressure (in mm Hg on admission to the hospital))\n   * CHOL (serum cholestoral in mg\/dl)\n   * FPS (fasting blood sugar > 120 mg\/dl) (1 = true; 0 = false)\n   * RESTECH (resting electrocardiographic results)\n   * THALACH (maximum heart rate achieved)\n   * EXANG (exercise induced angina (1 = yes; 0 = no))\n   * OLDPEAK (ST depression induced by exercise relative to rest)\n   * SLOPE (the slope of the peak exercise ST segment)\n   * CA (number of major vessels (0-3) colored by flourosopy)\n   * THAL (3 = normal; 6 = fixed defect; 7 = reversable defect)\n   * TARGET (1 or 0)","3f1e65f4":"# Avalia\u00e7\u00e3o","e67540bb":"# Heart Disease UCI","98c6115d":"# Treinamento e Previs\u00e3o","3f7facb9":"# importando bibliotecas e lendo o arquivo.","ec09ab32":"Neste projeto estaremos trabalhando com o conjunto de dados do Kaggle (HEART DISEASE ANALYSIS). Temos dados que classificam se os pacientes t\u00eam doen\u00e7as card\u00edacas ou n\u00e3o, de acordo com suas caracter\u00edsticas. Vamos tentar usar esses dados para criar um modelo que tente prever se um paciente tem essa doen\u00e7a ou n\u00e3o","ee2dab5d":"# An\u00e1lise de dados explorat\u00f3ria"}}