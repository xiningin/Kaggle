{"cell_type":{"86063461":"code","a9415213":"code","4ea38b72":"code","4d096145":"code","040b1b48":"code","05244ac1":"code","6e4471b2":"code","140a4ddc":"code","afdb86a5":"code","c004b391":"code","8f613dc1":"code","dcb955fa":"code","beb38e5b":"markdown","d62439c7":"markdown","6fcbdf1c":"markdown","00ef86b3":"markdown","8e3ac52f":"markdown","06c1b4b2":"markdown","95396dca":"markdown","d5b32635":"markdown","95794f0a":"markdown"},"source":{"86063461":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport math\nsns.set()\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import StandardScaler","a9415213":"raw_data = pd.read_csv('..\/input\/titanic-preprocessed-data\/train.csv')\ntest_data = pd.read_csv('..\/input\/titanic-preprocessed-data\/test.csv')\nraw_data.head()","4ea38b72":"raw_data.describe(include='all')","4d096145":"test_data.describe(include='all')","040b1b48":"lInterval = math.floor(29.7 - 1.96 * (14.5\/26.7))\nhInterval = math.ceil(29.7 + 1.96 * (14.5\/26.7))\nprint('---Train data---')\nprint('low','high')\nprint(lInterval,hInterval)\n\n# For test data\nlInterval = math.floor(30.3 - 1.96 * (14.2\/18.2))\nhInterval = math.ceil(30.3 + 1.96 * (14.2\/18.2))\nprint('---Test data---')\nprint('low','high')\nprint(lInterval,hInterval)","05244ac1":"preProcessed_data = raw_data.drop(['PassengerId','Name','Ticket','Cabin','Fare'],axis=1)\npreProcessed_data['Sex'] = preProcessed_data['Sex'].map({'male':0,'female':1})\npreProcessed_data['Embarked'] = preProcessed_data['Embarked'].map({'C':0,'Q':1,'S':2})\npreProcessed_data['Embarked'].fillna(1,inplace = True)\n\n\n# For test data \ntest_data = test_data.drop(['Name','Ticket','Cabin','Fare'],axis=1)\ntest_data['Sex'] = test_data['Sex'].map({'male':0,'female':1})\ntest_data['Embarked'] = test_data['Embarked'].map({'C':0,'Q':1,'S':2})\n\npreProcessed_data.describe(include='all')","6e4471b2":"reg = LinearRegression()\nscaler = StandardScaler()\n\nfeatures = preProcessed_data[['Pclass','Sex','Age','SibSp','Parch','Embarked']]\nsurvived = preProcessed_data['Survived']\n\nscaler.fit(features)\nscaled_features = scaler.transform(features)\n\nreg.fit(scaled_features,survived)","140a4ddc":"test_features = test_data[['Pclass','Sex','Age','SibSp','Parch','Embarked']]\ntest_features_scaled = scaler.transform(test_features)\ntest_features_scaled","afdb86a5":"# test_data = pd.DataFrame(data=[[1,1,35,0,0,0],[1,0,19,3,2,2]],columns=['Pclass','Sex','Age','SibSp','Parch','Embarked'])\n# test_data_transformed = scaler.transform(test_data)\n# survived_prediction = reg.predict(test_data_transformed)","c004b391":"survived_prediction = reg.predict(test_features_scaled)\nfor i in range(survived_prediction.size):\n    if(survived_prediction[i] >= 0.6):\n        survived_prediction[i] = 1\n    else:\n        survived_prediction[i] = 0\ntest_data['Survived'] = survived_prediction\ntest_data","8f613dc1":"final_result = test_data.drop(['Pclass','Sex','Age','SibSp','Parch','Embarked'],axis=1)\nfinal_result","dcb955fa":"final_result.to_csv('.\/predictions.csv')\n# Prediction accuracy : 77%","beb38e5b":"## Cleaning data\n1. Cabin feature has too less observations and thus can be removed.\n2. PassengerId, Name, Ticket have unique values and so they won't be contributing substantially to the regression.\n3. Fare can be excluded too as we will be considering Pclass. This will avoid multicolinearity and the PClass is better feature than fare to determine survival of any individual.\n\n# Idea behind choosing features\n1. Sex : It might be possible that males\/females were given preference to board the lifeboats. \n2. Pclass : Depending upon the class of seat preference to board lifeboat could be determined. ( PS. As seen in the movie as well )\n3. Age : Generally, children and elder are given preference in disaster situation and thus makes sense to include the variable.\n4. SibSp \/ Parch : Having dependents to look after will certainly impact the survival of one.\n5. Embarked : The port of boarding might as well play a role in survival, as people who have spent more time on the boat are more accustomed to the exit routes and overall architecture of the boat.","d62439c7":"## Summary of training data","6fcbdf1c":"## Summary of testing data","00ef86b3":"## Load the training and testing data","8e3ac52f":"## Excel Pre-Processing\nI have used the z-score distribution to find the confidence interval of Age. As there are 177 records with missing age values, the missing values have been populated using random number generated between the below interval.\n\nWe cannot exclude 177 records as they are almost 20% of the current data samples. Hard-coded values are used in the below formula as the values are the ones before performing excel pre-processing.","06c1b4b2":"## Prediction !\n\nAs from the test data we can infer that approximately 40% of the people survived. Thus, I have set the condition as, if the predicted value is above 0.6 only then the passenger is considered as survived. ","95396dca":"## For single data frame testing","d5b32635":"## Time to test !\n\nWe are done with the regression part, lets process and transform the test data to make some predictions.","95794f0a":"## Dropping the excess columns and making the final output"}}