{"cell_type":{"dd44e2f6":"code","dce80cfb":"code","b5f3d2e9":"code","0b17398d":"code","7b076feb":"code","c9d39e47":"code","b49289c9":"code","d0c302fb":"code","28f8768e":"code","309a627d":"code","5bf0913b":"markdown","dbac241b":"markdown","76f2ed9d":"markdown"},"source":{"dd44e2f6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dce80cfb":"cartola = pd.read_csv(\"..\/input\/cartola-pre\/cartola_data.csv\", encoding='latin1')\ncartola = cartola[cartola.status == \"Prov\u00e1vel\"]\nprint(f\"DataFrame with 'Prov\u00e1veis' shape: {cartola.shape}\")","b5f3d2e9":"cartola.head()","0b17398d":"#categorical to dummie\nX_dummie = pd.get_dummies(cartola[\"posicao\"]).iloc[:, 1:-1]\n#real variables\nX_real = cartola[[\"preco_antes_rodada\", \"jogando_casa\", \"prop_vitoria\", \"prop_vitoria_adv\"]]","7b076feb":"X = pd.concat([X_dummie, X_real], axis = 1)\ny = cartola[\"pontos\"]","c9d39e47":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.8, random_state = 28)","b49289c9":"from sklearn.neighbors import KNeighborsRegressor as knn_reg\nfrom sklearn.metrics import mean_squared_error as mse","d0c302fb":"nn = range(1, 26)\n\nmse_test_list = []\nmse_train_list = []\n\nfor k in nn:\n    #fitting model with k neighbors\n    knn_model = knn_reg(n_neighbors = k)\n    knn_model.fit(X_train, y_train)\n    #pred for test and train\n    y_pred_test = knn_model.predict(X_test)\n    y_pred_train = knn_model.predict(X_train)\n    #append to list\n    mse_test_list.append(mse(y_test, y_pred_test))\n    mse_train_list.append(mse(y_train, y_pred_train))","28f8768e":"list(zip(mse_test_list, mse_train_list))","309a627d":"import matplotlib.pyplot as plt\n\nplt.figure()\nplt.plot(mse_test_list, label = \"Test\")\nplt.plot(mse_train_list, label = \"Train\")\nplt.legend()\nplt.show()","5bf0913b":"## Train test split","dbac241b":"### Cross val to KNN","76f2ed9d":"## KNN regression"}}