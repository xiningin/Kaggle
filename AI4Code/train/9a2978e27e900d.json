{"cell_type":{"5a475932":"code","777e6e14":"code","d88730e0":"code","b39e5c42":"code","ded42bc4":"code","d4b0615e":"code","c693ebac":"code","a7754fb9":"code","cd2623d1":"code","ee7a1b6e":"code","80909980":"code","327b4f5d":"code","4114f7dc":"code","89c0bf78":"code","dc43ac0a":"code","a7eef690":"code","dccf200f":"code","6df772fa":"code","b4c8b083":"code","0d5ccdad":"code","c01cbe4b":"code","001dfafc":"code","3f92ec5f":"code","4e6266d7":"markdown","c04563a9":"markdown","2d9ee355":"markdown","6a67715e":"markdown","38fd75e9":"markdown","e70c5d2b":"markdown","30a2d21f":"markdown"},"source":{"5a475932":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","777e6e14":"data = pd.read_csv('\/kaggle\/input\/covid19-tweets\/covid19_tweets.csv')","d88730e0":"data.head()","b39e5c42":"data['source_2']=data['source'].str.split(' ').str[-1]","ded42bc4":"data['source_2'].value_counts(normalize=True).head(10)","d4b0615e":"data_2=data[data['source_2']=='iPhone']\ndata_2=data_2[data_2['user_verified'].astype(str)=='True']\ndata_2.dropna(subset=['user_location'],inplace=True)\nlocations=pd.DataFrame(columns=['Location','Coordinates'])\nlocations['Location']=data_2['user_location'].unique()","c693ebac":"from geopandas.tools import geocode\nfrom geopy.geocoders import Nominatim\nlocator = Nominatim(user_agent='myGeocoder')\nfor i in range(locations.shape[0]):\n    if locator.geocode(locations.loc[i]['Location'])!=None:\n        locations.loc[i,'Coordinates'] = locator.geocode(locations.loc[i]['Location'])[1]\n    else:\n        locations.loc[i,'Coordinates'] = None","a7754fb9":"data_2=data_2.merge(locations,how='left',left_on='user_location',right_on='Location')\ndata_2.dropna(subset=['Coordinates'],inplace=True)\ndata_2.reset_index(inplace=True)","cd2623d1":"import folium\nfrom folium.plugins import MarkerCluster\nm = folium.Map(location=[0, 0],zoom_start=2)\nmc = MarkerCluster()\nfor i in range(data_2.shape[0]):\n    mc.add_child(folium.Marker(location=list(data_2.loc[i]['Coordinates']),popup = folium.Popup(data_2.loc[i]['user_name'])))\nm.add_child(mc)","ee7a1b6e":"data_2['date_2'] = data_2['date'].str.split(' ').str.get(0)\nfor i in range(len(data_2['Coordinates'])):\n    data_2.loc[i,'lat']=data_2.loc[i]['Coordinates'][0]\n    data_2.loc[i,'lng']=data_2.loc[i]['Coordinates'][1]\ndates = data_2['date'].str.split(' ').str.get(0).unique().tolist()","80909980":"from folium.plugins import HeatMapWithTime\nheat_data = [[[row['lat'],row['lng']] for index, row in data_2[data_2['date_2'] == i].iterrows()] for i in dates]\nhm = HeatMapWithTime(data=heat_data, name=None, radius=7, min_opacity=0, max_opacity=0.8, \n                     scale_radius=False, gradient=None, use_local_extrema=False, auto_play=True, \n                     display_index=True, index_steps=1, min_speed=0.1, max_speed=10, speed_step=0.1, \n                     position='bottomleft', overlay=True, control=True, show=True)\ndata_2_tweets = folium.Map(tiles='OpenStreetMap', min_zoom=2) \nhm.add_to(data_2_tweets)\ndata_2_tweets","327b4f5d":"data_3=data[data['source_2']=='Android']\ndata_3=data_3[data_3['user_verified'].astype(str)=='True']\ndata_3.dropna(subset=['user_location'],inplace=True)\nlocations_android=pd.DataFrame(columns=['Location','Coordinates'])\nlocations_android['Location']=data_3['user_location'].unique()","4114f7dc":"from geopandas.tools import geocode\nfrom geopy.geocoders import Nominatim\nlocator = Nominatim(user_agent='myGeocoder')\nfor i in range(locations_android.shape[0]):\n    if locator.geocode(locations_android.loc[i]['Location'])!=None:\n        locations_android.loc[i,'Coordinates'] = locator.geocode(locations_android.loc[i]['Location'])[1]\n    else:\n        locations_android.loc[i,'Coordinates'] = None","89c0bf78":"data_3=data_3.merge(locations_android,how='left',left_on='user_location',right_on='Location')\ndata_3.dropna(subset=['Coordinates'],inplace=True)\ndata_3.reset_index(inplace=True)","dc43ac0a":"import folium\nfrom folium.plugins import MarkerCluster\nm = folium.Map(location=[0, 0],zoom_start=2)\nmc = MarkerCluster()\nfor i in range(data_3.shape[0]):\n    mc.add_child(folium.Marker(location=list(data_3.loc[i]['Coordinates']),popup = folium.Popup(data_3.loc[i]['user_name'])))\nm.add_child(mc)","a7eef690":"data_3['date_2'] = data_3['date'].str.split(' ').str.get(0)\nfor i in range(len(data_3['Coordinates'])):\n    data_3.loc[i,'lat']=data_3.loc[i]['Coordinates'][0]\n    data_3.loc[i,'lng']=data_3.loc[i]['Coordinates'][1]\ndates = data_3['date'].str.split(' ').str.get(0).unique().tolist()","dccf200f":"from folium.plugins import HeatMapWithTime\nheat_data = [[[row['lat'],row['lng']] for index, row in data_3[data_3['date_2'] == i].iterrows()] for i in dates]\nhm = HeatMapWithTime(data=heat_data, name=None, radius=7, min_opacity=0, max_opacity=0.8, \n                     scale_radius=False, gradient=None, use_local_extrema=False, auto_play=True, \n                     display_index=True, index_steps=1, min_speed=0.1, max_speed=10, speed_step=0.1, \n                     position='bottomleft', overlay=True, control=True, show=True)\ndata_3_tweets = folium.Map(tiles='OpenStreetMap', min_zoom=2) \nhm.add_to(data_3_tweets)\ndata_3_tweets","6df772fa":"data_4=data[data['source_2']=='App']\ndata_4=data_4[data_4['user_verified'].astype(str)=='True']\ndata_4.dropna(subset=['user_location'],inplace=True)\nlocations_app=pd.DataFrame(columns=['Location','Coordinates'])\nlocations_app['Location']=data_4['user_location'].unique()","b4c8b083":"from geopandas.tools import geocode\nfrom geopy.geocoders import Nominatim\nlocator = Nominatim(user_agent='myGeocoder')\nfor i in range(locations_app.shape[0]):\n    if locator.geocode(locations_app.loc[i]['Location'])!=None:\n        locations_app.loc[i,'Coordinates'] = locator.geocode(locations_app.loc[i]['Location'])[1]\n    else:\n        locations_app.loc[i,'Coordinates'] = None","0d5ccdad":"data_4=data_4.merge(locations_app,how='left',left_on='user_location',right_on='Location')\ndata_4.dropna(subset=['Coordinates'],inplace=True)\ndata_4.reset_index(inplace=True)","c01cbe4b":"import folium\nfrom folium.plugins import MarkerCluster\nm = folium.Map(location=[0, 0],zoom_start=2)\nmc = MarkerCluster()\nfor i in range(data_4.shape[0]):\n    mc.add_child(folium.Marker(location=list(data_4.loc[i]['Coordinates']),popup = folium.Popup(data_4.loc[i]['user_name'])))\nm.add_child(mc)","001dfafc":"data_4['date_2'] = data_4['date'].str.split(' ').str.get(0)\nfor i in range(len(data_4['Coordinates'])):\n    data_4.loc[i,'lat']=data_4.loc[i]['Coordinates'][0]\n    data_4.loc[i,'lng']=data_4.loc[i]['Coordinates'][1]\ndates = data_4['date'].str.split(' ').str.get(0).unique().tolist()","3f92ec5f":"from folium.plugins import HeatMapWithTime\nheat_data = [[[row['lat'],row['lng']] for index, row in data_4[data_4['date_2'] == i].iterrows()] for i in dates]\nhm = HeatMapWithTime(data=heat_data, name=None, radius=7, min_opacity=0, max_opacity=0.8, \n                     scale_radius=False, gradient=None, use_local_extrema=False, auto_play=True, \n                     display_index=True, index_steps=1, min_speed=0.1, max_speed=10, speed_step=0.1, \n                     position='bottomleft', overlay=True, control=True, show=True)\ndata_4_tweets = folium.Map(tiles='OpenStreetMap', min_zoom=2) \nhm.add_to(data_4_tweets)\ndata_4_tweets","4e6266d7":"<h3>Distribution of iPhone tweets<\/h3>","c04563a9":"<h3>Distribution of Web App tweets","2d9ee355":"<h3>An interesting observation to note here is that, there are minimal 'verified_user' (usually official handles of government and media) tweets from China, and the ones which are from China are mostly from 'Web_App', despite a ban","6a67715e":"<h3>Distribution of Android tweets","38fd75e9":"The purpose of this notebook is to understand temporal geographical distribution of COVID related tweets of:\n\n1. Verified users (Typically this includes users in government, politics, religion, journalism, media, sports, business, and other key areas)\n\n2. Categorized by source (Android, iPhone, Web App)","e70c5d2b":"<h3>Sources<\/h3>\n<b>App<\/b> : Twitter Web App, tweet from any browser (both PC or phone)<br>\n<b>Android<\/b> : Twitter for Android<br>\n<b>iPhone<\/b> : Twitter for iPhone<br>\n<b>TweetDeck<\/b> : TweetDeck is a social media manager for Twitter accounts owned by Twitter<br>\n<b>Inc.<\/b> : Hootsuite Inc., a social media management platform<br>\n<b>iPad<\/b> : Twitter for iPad<br>\n<b>Buffer<\/b> : Buffer is a Twitter app that allows to add tweets on a schedule<br>\n<b>Social<\/b> : Sprout social, a social media manager<br>\n<b>Instagram<\/b><br>\n<b>IFTTT<\/b> : If this then that, a task automation service<br>","30a2d21f":"![](https:\/\/upload.wikimedia.org\/wikipedia\/en\/thumb\/4\/47\/Twitter_2010_logo_-_from_Commons.svg\/1920px-Twitter_2010_logo_-_from_Commons.svg.png)"}}