{"cell_type":{"95f2761b":"code","adf9b159":"code","2c50f4cc":"code","aa18844e":"code","0a82ff64":"code","b962d6c5":"code","d8c3caa7":"code","e04537a3":"code","e1099063":"code","2d6218fb":"code","8dc5c432":"code","ff34f932":"code","7352e732":"code","a24ba145":"code","30ffc5c7":"code","d4a577bb":"code","5a725f17":"code","76b1fd7b":"code","a1a8dc69":"code","3fb4e7f8":"code","f4993e52":"code","8abf931b":"markdown","9395dd36":"markdown","f8775224":"markdown","4f1bfa41":"markdown","62578447":"markdown","e4f4bf83":"markdown","1c9ea3b4":"markdown","ae412d7e":"markdown","c2f09ac1":"markdown","36b8080b":"markdown","1339daf0":"markdown","b29dd63e":"markdown","f632db6a":"markdown","4c9ff07a":"markdown"},"source":{"95f2761b":"import warnings\nimport itertools\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')","adf9b159":"data=sm.datasets.co2.load_pandas()\ny=data.data","2c50f4cc":"y","aa18844e":"# The 'Ms' string groups the data in buckets by start of the month\ny=y['co2'].resample('MS').mean()","0a82ff64":"y=y.fillna(y.bfill())","b962d6c5":"print(y)","d8c3caa7":"y.plot(figsize=(15,6))\nplt.show()","e04537a3":"# Define p,d and q parameters to take any value between 0 and 2\np = d = q =range(0,2)\n#Generate all different combinations of p,d and q triplets.\npdq=list(itertools.product(p,d,q))\n\n#Generate all different combinations of seasonal p,d and q triplets.\nseasonal_pdq=[(x[0],x[1],x[2],12) for x in list(itertools.product(p,d,q))]","e1099063":"####(0,0,1) means p,d and q---- non seasonal \n###(0,0,1,12) means p,d,q and seasonal factor----seasonal\n\n\nprint('Examples of parameter combinations for seasonal ARIMA...')\nprint('SARIMAX: {} x {}'.format(pdq[1],seasonal_pdq[1]))\nprint('SARIMAX: {} x {}'.format(pdq[1],seasonal_pdq[2]))\nprint('SARIMAX: {} x {}'.format(pdq[2],seasonal_pdq[3]))\nprint('SARIMAX: {} x {}'.format(pdq[2],seasonal_pdq[4]))","2d6218fb":"## these are the possible value for pdq\npdq","8dc5c432":"warnings.filterwarnings(\"ignore\") ## specify to ignore warning messages\nfor param in pdq:\n    for param_seasonal in seasonal_pdq:\n        try:\n            mod=sm.tsa.statespace.SARIMAX(y,\n                                          order=param,\n                                          seasonal_order=param_seasonal,\n                                          enforce_stationarity=False,\n                                          enforce_invertibility=False)\n            results=mod.fit()\n            print('ARIMA{}x{}12 = AIC:{}'.format(param,param_seasonal,results.aic))\n        except:\n            continue","ff34f932":"mod=sm.tsa.statespace.SARIMAX(y,\n                              order=(1,1,1),\n                              seasonal_order=(1,1,1,12),\n                              enforce_stationary=False,\n                              enforce_invertibility=False)\n\n                              \nresults=mod.fit()\nprint(results.summary().tables[1])\n","7352e732":"results.plot_diagnostics(figsize=(15,12))\nplt.show()","a24ba145":"pred=results.get_prediction(start=pd.to_datetime('1998-01-01'),dynamic=False)\npred_ci=pred.conf_int()","30ffc5c7":"pred_ci","d4a577bb":"ax=y['1990':].plot(label='observed')\npred.predicted_mean.plot(ax=ax,label='one step ahead forecast', alpha=.7)\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:,0],\n                pred_ci.iloc[:,1],color='k',alpha=.2)\nax.set_xlabel('Date')\nax.set_ylabel('Co2 levels')\nplt.legend()\nplt.show()\n\n","5a725f17":"y_forecasted=pred.predicted_mean\ny_truth=y['1998-01-01']\n\n#compute the mean sq error\nmse=((y_forecasted - y_truth) ** 2).mean()\nprint('mean square error of our forecast is {}'.format(round(mse,2)))\n","76b1fd7b":"pred_dynamic=results.get_prediction(start=pd.to_datetime('1998-01-01'),dynamic=True,full_results=True)\npred_dynamic_ci=pred_dynamic.conf_int()","a1a8dc69":"ax=y['1990':].plot(label='observed',figsize=(20,15))\npred_dynamic.predicted_mean.plot(label='Dynamic Forecast', ax=ax)\n\nax.fill_between(pred_dynamic_ci.index,\n                pred_dynamic_ci.iloc[:,0],\n                pred_dynamic_ci.iloc[:,1],color='k',alpha=.25)\n\nax.fill_betweenx(ax.get_ylim(),pd.to_datetime('1998-01-01'),y.index[-1],alpha=.1,zorder=-1)\nax.set_xlabel('Date')\nax.set_ylabel('Co2 levels')\nplt.legend()\nplt.show()","3fb4e7f8":"## you can change no. of steps\npred_uc=results.get_forecast(steps=500)\n\n### get confidence interval of forecast\npred_ci=pred_uc.conf_int()","f4993e52":"ax=y.plot(label='observed',figsize=(20,15))\npred_uc.predicted_mean.plot(label='Forecast', ax=ax)\n\nax.fill_between(pred_ci.index,\n                pred_ci.iloc[:,0],\n                pred_ci.iloc[:,1],color='k',alpha=.25)\n\nax.set_xlabel('Date')\nax.set_ylabel('Co2 levels')\n\nplt.legend()\nplt.show()","8abf931b":"According to the wikipedia, A time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data. For example, stock prices over a fixed period of time, hotel bookings, ecommerce sales, waether cycle reports etc.\n\nTime series analysis comprises methods for analyzing time series data in order to extract meaningful statistics and other characteristics of the data. Time series forecasting is the use of a model to predict future values based on previously observed values.","9395dd36":"# Dynamic forecast","f8775224":"# Get forecast 500 steps ahead in future","4f1bfa41":"# What is a time series?\n","62578447":"In below code you will be able to see ,for every pdq values with seasonality and w\/o seasonality, it will try to print     AIC.\n\n\nOutput (0,0,1)-non seasonal\n\n\n   (0,0,0,12)-seasonal\n   \n   \n And there are so many values it has tested , out of these values i have to choose only 1 value for seasonal and non seasonal. and to choose that 1 value, AIC will help us out. \n \n AIC always try to measure that how well your model fits the data.AIC can be very high and very low. \n \n High AIC means it is trying t build very good model but in a complex way.\n Low AIC means it will gives you best model by using simple relations.\n \n We will choose low AIC value.","e4f4bf83":"Let's discuss a few definitions related to time series first.\n\nDefinitions\n\nLevel: Level is the average of the values of the series.\n\n\n\nTrend: Trend shows a pattern in the data. For example, whether the stock prices are increasing with time(uptrend) or are they decreasing with time(downtrend) or time doesn't have that much effect on the prices(Horizontal trend)\n\n\n\nSeasonality: When the data shows a repetative pattern for over an year, it can be termed as seasonal pattern. For example, the sale of airconditioners will increase every year during summer and the sale will decrease during winter.\n\n\n\nCyclic Patterns: These are the repetative patterns shown over a longer period of time(more than one year). For example, after every five year the share market has some fluctuations due to the general elections.\n\n\n\nNoise: The variations which do not show any pattern.","1c9ea3b4":"In any time series use case first of all we load the dataset and trying to find out that whether we have (weekly,monthly or yearly) dataset. \n\nIn our dataset,you will be able to find out that this is a co2 data which is by default available inside statsmodels library and samples are collected from march 1958 to Dec 2001. Now we have to find out that whether we have monthly dataset or weekly dataset. So after seeing the dataset you will see that all the samples have 7 days difference that means we have weekly dataset. ","ae412d7e":"I am giving starting date '1998-01-01' for prediction.\n\nDynamic=False meas that we are trying to produce a data one step ahead of forecast.\nMeans we are trying to do a forecasting of each and every point by using complete historical data upto that (to generate one point we are using all the point from the past).","c2f09ac1":"Now, somehow we have to find out AutoRegressive Independent MovingAverage(p,d and q). So that we will be able to find relation what after it is going to repeat itself or we can build a model.As we have seasonal data which is going to repeat itself after every 12 months based on that we can find out some parameters.","36b8080b":"# Resampling the data on monthly basis by taking the average of each month.","1339daf0":"In below chart, you will be able to find out that from 1995 to 1999 co2 level is keep on increasing.\nThis dataset having Seasonality pattern.","b29dd63e":"# Calculate mean square error","f632db6a":"# Build Model","4c9ff07a":"# The term bfill means that we use the value before filling in missing values"}}