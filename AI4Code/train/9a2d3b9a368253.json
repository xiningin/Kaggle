{"cell_type":{"1592b0d4":"code","2391ddf0":"code","6c539491":"code","11646aca":"code","054457b7":"code","caff7bf2":"code","41c6590b":"code","8361dc02":"code","8fbc0957":"code","eabe4c93":"code","789f5595":"code","adf5c1dd":"code","d64cc7c8":"code","80474143":"code","57e6d619":"code","5d095fdf":"markdown"},"source":{"1592b0d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2391ddf0":"import pandas as pd\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6c539491":"train = pd.read_csv('\/kaggle\/input\/cat-in-the-dat\/train.csv')\ntest = pd.read_csv(\"\/kaggle\/input\/cat-in-the-dat\/test.csv\")\nprint(\"train and test dataset imported\")","11646aca":"train.info()","054457b7":"#X = train.drop(['id','target'], axis = 1)\n\nX = train[['bin_0','bin_1','bin_2','bin_3','bin_4','nom_0','nom_1','nom_2','nom_3','nom_4']]\ny = train['target']","caff7bf2":"from sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.30,  stratify = y)","41c6590b":"X_train = pd.get_dummies(X_train, drop_first = True)","8361dc02":"X_val = pd.get_dummies(X_val, drop_first = True)","8fbc0957":"from sklearn.linear_model import LogisticRegression","eabe4c93":"clf = LogisticRegression(random_state=0)\nclf.fit(X_train,y_train)","789f5595":"print(f'Train : {clf.score(X_train, y_train):.3f}')\nprint(f'Validation : {clf.score(X_val, y_val):.3f}')","adf5c1dd":"X_test = test[['bin_0','bin_1','bin_2','bin_3','bin_4','nom_0','nom_1','nom_2','nom_3','nom_4']]","d64cc7c8":"X_test = pd.get_dummies(X_test)","80474143":"test_prediciton = clf.predict(X_test[X_train.columns])","57e6d619":"final_sub = pd.DataFrame({'id': test['id'], 'target':test_prediciton })\nfinal_sub.head()","5d095fdf":"# Importing the dataset"}}