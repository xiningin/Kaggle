{"cell_type":{"6cea730e":"code","0b23464a":"code","d31e185e":"code","6f56be44":"code","5176031e":"code","4910af48":"code","76bdbf17":"code","ba9f1b7c":"code","bc07df00":"code","1cd84bd6":"code","6b42124c":"code","7fa04793":"code","73bd4c09":"code","e49558bd":"markdown","12e30c7a":"markdown","c5d8dfcd":"markdown","38cb598e":"markdown","19001dfe":"markdown","c72750db":"markdown"},"source":{"6cea730e":"import os\nfrom PIL import Image\nimport numpy as np\nimport random\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras import models, layers, losses","0b23464a":"train_dir = \"\/kaggle\/input\/gtsrb-german-traffic-sign\/train\"","d31e185e":"train_datagen = ImageDataGenerator(validation_split=0.2, rescale=1.\/255)\n\ntrain_generator = train_datagen.flow_from_directory(\n    train_dir,\n    subset='training',\n    target_size=(32,32),\n    batch_size=32,\n    color_mode='rgb',    \n    shuffle=True,\n    seed=42,\n    class_mode='categorical')","6f56be44":"input_shape = (32,32,3) # img_rows, img_colums, color_channels\nnum_classes = 43","5176031e":"## Build Model\ninputs = layers.Input(shape=input_shape)\n# 1st Conv layer \nx = layers.Conv2D(32, kernel_size = (3, 3), activation = 'relu', padding = 'same')(inputs)\nx = layers.Conv2D(32, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.MaxPool2D(pool_size = (2, 2))(x)\n# 2nd Conv layer        \nx = layers.Conv2D(64, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.Conv2D(64, kernel_size = (3, 3), activation = 'relu', padding = 'same')(x)\nx = layers.MaxPool2D(pool_size = (2, 2))(x)\n# Fully Connected layer        \nx = layers.Flatten()(x)\nx = layers.Dense(256)(x)\nx = layers.Dropout(0.5)(x)\noutputs = layers.Dense(num_classes, activation=\"softmax\")(x)\n\nmodel = models.Model(inputs=inputs, outputs=outputs)\n\nmodel.summary()","4910af48":"# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])","76bdbf17":"STEP_SIZE_TRAIN=train_generator.n\/\/train_generator.batch_size\nnum_epochs = 10","ba9f1b7c":"# Train Model\nhistory = model.fit(train_generator,steps_per_epoch=STEP_SIZE_TRAIN,epochs=num_epochs) #, callbacks=[checkpoint])","bc07df00":"import pandas as pd\ndf = pd.read_csv('\/kaggle\/input\/gtsrb-german-traffic-sign\/Test.csv')\ndf.head()","1cd84bd6":"!mkdir -p Dataset\/Test","6b42124c":"from shutil import copyfile\nsrc_dir  = \"\/kaggle\/input\/gtsrb-german-traffic-sign\/\"\ntest_dir = \".\/Dataset\/Test\/\"\nfor i in range(len(df)):\n    if not os.path.exists(test_dir+str(df.iloc[i].ClassId)):\n        os.makedirs(test_dir+str(df.iloc[i].ClassId))\n    copyfile(src_dir+df.iloc[i].Path, test_dir+str(df.iloc[i].ClassId)+'\/'+df.iloc[i].Path[5:])","7fa04793":"test_datagen = ImageDataGenerator(rescale=1.\/255)\n\ntest_generator = test_datagen.flow_from_directory(\n    test_dir,\n    target_size=(32,32),\n    batch_size=32,\n    color_mode='rgb',    \n    shuffle=True,\n    seed=42,\n    class_mode='categorical')","73bd4c09":"STEP_SIZE_TEST =test_generator.n\/\/test_generator.batch_size\n\nscore = model.evaluate(test_generator, steps=STEP_SIZE_TEST)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])","e49558bd":"## Train Model","12e30c7a":"## Data Augmentation","c5d8dfcd":"# Recognizing traffic signs using Convnets","38cb598e":"## Build Model","19001dfe":"## Dataset from GTSRB\n\n![GTSRB](https:\/\/chsasank.github.io\/assets\/images\/traffic\/classes.jpg)","c72750db":"## Test Model"}}