{"cell_type":{"d2bee534":"code","a42dbc32":"code","1a641137":"code","e16a9e53":"code","98198b78":"code","9a440752":"code","dfbd158c":"code","91c36de1":"code","49761be3":"code","8c65d4da":"code","868c309d":"code","5fb4edbf":"code","7ac65e10":"code","a603d94a":"code","723815c5":"code","fa67d492":"code","9d465916":"code","9d6823d0":"code","56f456b1":"code","3c84ebc4":"code","6520f0f7":"code","74e4535e":"code","bf46587a":"code","7df7e665":"code","ff22f2cd":"code","1fbaf621":"code","aa5ad908":"code","f419edfb":"code","7ae2ed75":"code","634a5039":"code","f9ca08ac":"code","59c701b9":"code","323bbc30":"code","b64179c3":"code","f13469aa":"code","09b18bee":"code","42b89a73":"code","df2f8c37":"code","038efb17":"code","ce200307":"code","b86ecdc1":"code","002a7269":"code","c6eede04":"code","5e999850":"code","b3cad9c3":"code","ef3d5d39":"code","6a89823d":"code","5642f55b":"code","045a652f":"code","055f216c":"code","222fbd5c":"code","be610c07":"code","772475fe":"code","3460e979":"code","901e34cb":"code","9df33178":"code","401a5b80":"code","adb5ba72":"code","f1c71073":"code","d7505e7e":"code","c9336bc0":"code","703998f6":"markdown","1bc12382":"markdown","e85ca742":"markdown","7e1e2ea5":"markdown","7fa16ab0":"markdown","60a9e94e":"markdown","c0f5ef78":"markdown","5c7ef00a":"markdown","ecf7a7f5":"markdown","82bc03b9":"markdown","e6cec3df":"markdown","f408df52":"markdown","5e13b716":"markdown","1fc85ab8":"markdown","3d0f0034":"markdown","2d206b9e":"markdown","41db7a41":"markdown","b536d799":"markdown","5097602f":"markdown","24c8e967":"markdown","1c4d40f4":"markdown","1e7d065e":"markdown","4b6067e3":"markdown","94d4ee4f":"markdown","1ef36ffd":"markdown","6b6eb335":"markdown","5161547b":"markdown","f73a1c67":"markdown","cd7d0fd2":"markdown","3bc88a72":"markdown","ebdc4344":"markdown","6aa0bf7f":"markdown","9116bde6":"markdown","160acf0e":"markdown","2964d868":"markdown","7a103f5f":"markdown","1472cf40":"markdown","ced889f0":"markdown","cc19a786":"markdown","ee1c63ba":"markdown","f64faea7":"markdown","fb316689":"markdown","9c332381":"markdown","0266faa0":"markdown","add1dbdc":"markdown","e036ccd2":"markdown","9e1553aa":"markdown","bf0cbac9":"markdown","59fa60ee":"markdown","f9894c41":"markdown","a3f0f274":"markdown","9a1c4cb7":"markdown","5a6790af":"markdown","89ac8b20":"markdown","4a537e1d":"markdown","b54a0972":"markdown","78390bd2":"markdown","1c6307cc":"markdown","99c322e0":"markdown","819b99c4":"markdown","65151fb5":"markdown","637875ce":"markdown","c9bae1b2":"markdown","c8210a77":"markdown"},"source":{"d2bee534":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# from sklearn.preprocessing import Imputer  # imputer \ub354 \uc774\uc0c1 \uc9c0\uc6d0\uc548\ud568.\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.feature_selection import VarianceThreshold\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.utils import shuffle\nfrom sklearn.ensemble import RandomForestClassifier\n\npd.set_option('display.max_columns', 100)","a42dbc32":"train_df = pd.read_csv(\"..\/input\/porto-seguro-safe-driver-prediction\/train.csv\")\ntrain_df.head(5)","1a641137":"test_df = pd.read_csv(\"..\/input\/porto-seguro-safe-driver-prediction\/test.csv\")\ntest_df.head()","e16a9e53":"train_df.tail()","98198b78":"train_df.info()","9a440752":"test_df.info()","dfbd158c":"train_df.columns","91c36de1":"data = []\nfor f in train_df.columns :\n    # role \uc815\uc758\ud558\uae30\n    if f == \"target\" :\n        role = \"target\"\n    elif f == \"id\" :\n        role = \"id\"\n    else :\n        role = \"input\"\n        \n    # level \uc815\uc758\ud558\uae30\n    if (\"bin\" in f) or (f == \"target\") :\n        level = \"binary\"\n    elif (\"cat\" in f) or f ==\"id\" :\n        level = \"nominal\"\n    elif train_df[f].dtype == float :\n        level = \"interval\"\n    elif train_df[f].dtype == int :\n        level = \"ordinal\"\n        \n    # id\uac12\ub9cc \uc81c\uc678\ud558\uace0 \ubaa8\ub4e0 \uac12\ub4e4\uc5d0 keep \uc744 True\ub85c \uc124\uc815\n    keep = True\n    if f == \"id\" :\n        keep = False\n    \n    # \ub370\uc774\ud130\ud0c0\uc785\uc744 \uc815\uc758\n    dtype = train_df[f].dtype\n    \n    # \uc704\uc5d0\uc11c \uad6c\ud55c \uba54\ud0c0\ub370\uc774\ud130\ub97c \ud558\ub098\uc758 \ub515\uc154\ub108\ub9ac\ub85c \ub2f4\ub294\ub2e4.\n    f_dict = {\n        \"varname\": f,\n        \"role\" : role,\n        \"level\" : level,\n        \"keep\" : keep,\n        \"dtype\" : dtype\n    }\n    data.append(f_dict)\n","49761be3":"meta = pd.DataFrame(data, columns=[\"varname\", \"role\", \"level\", \"keep\", \"dtype\"])\nmeta.set_index(\"varname\", inplace=True)\nmeta","8c65d4da":"meta[(meta.level == \"nominal\") & (meta.keep)].index","868c309d":"pd.DataFrame({\"count\" : meta.groupby([\"role\", \"level\"])[\"role\"].count()})","5fb4edbf":"pd.DataFrame({\"count\" : meta.groupby([\"role\", \"level\"])[\"role\"].count()}).reset_index()","7ac65e10":"v = meta[ (meta.level == \"interval\") & (meta.keep)].index\nv\n# \uad6c\uac04\uac12\uc774 \uc788\ub294 \uce7c\ub7fc\uc758 \uc774\ub984\ub9cc \uad6c\ud588\ub2e4.","a603d94a":"# \uad6c\ud55c \uce7c\ub7fc\ub4e4\uc744 describe()\ud568\uc218\uc5d0 \ub123\ub294\ub2e4.\ntrain_df[v].describe()","723815c5":"v = meta[ (meta.level == \"ordinal\") & (meta.keep) ].index\ntrain_df[v].describe()","fa67d492":"v = meta[ (meta.level == \"binary\") & (meta.keep)].index\ntrain_df[v].describe()","9d465916":"desired_apriori = 0.10\n\n# \ud0c0\uac9f\uc758 \uc778\ub371\uc2a4 \uad6c\ud558\uae30\nidx_0 = train_df.query(\"target == 0\").index\nidx_1 = train_df.query(\"target == 1\").index\n\nidx_0\n","9d6823d0":"idx_1","56f456b1":"# \uac01 \ud589\uc758 \uac2f\uc218 \uc800\uc7a5\nnb_0 = len(idx_0)\nnb_1 = len(idx_1)","3c84ebc4":"# undersampling\uc744 \ud560 \ube44\uc728\nundersample_rate = ((1-desired_apriori) *nb_1) \/ (nb_0 * desired_apriori)\nundersampled_nb_0 = int(undersample_rate * nb_0)\nprint(f\"\uc5b8\ub354\uc0d8\ud50c\uc744 \ud560 \ube44\uc728 : {undersample_rate}\")\nprint(f\"\uc5b8\ub354\uc0d8\ud50c \ud6c4\uc5d0 target 0\uc758 \uac1c\uc218 : {undersampled_nb_0}\")\n","6520f0f7":"# \ubaa9\ud45c priori\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc704\ud574 \uc5b8\ub354\uc0d8\ud50c\ub41c \ub79c\ub364\uc73c\ub85c target=0 \ud589\uc758 \uc778\ub371\uc2a4\uc758 \uc21c\uc11c\ub97c \uc11e\ub294\ub2e4.\nundersampled_idx = shuffle(idx_0, random_state=37, n_samples=undersampled_nb_0)\n\n# \ub450 \uc778\ub371\uc2a4\ub4e4\uc744 \ud569\uccd0 \ud558\ub098\uc758 \ub9ac\uc2a4\ud2b8\ub85c \uc800\uc7a5\nidx_list = list(undersampled_idx) + list(idx_1) \n\n# undersample\ub41c \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \uc0c8\ub86d\uac8c \uc800\uc7a5\ud55c\ub2e4.\ntrain_df = train_df.loc[idx_list].reset_index(drop=True)\ntrain_df","74e4535e":"train_df[\"target\"].value_counts()","bf46587a":"vars_with_missing = []\n\nfor f in train_df.columns :\n    missings = train_df[train_df[f] == -1][f].count()\n    if missings > 0 :\n        vars_with_missing.append(f)\n        missings_perc = missings\/train_df.shape[0]\n        \n        print(f\"{f}\uce7c\ub7fc\uc740 {missings}\uac1c\uc758 \uacb0\uce21\uce58\uac00 \uc788\uc2b5\ub2c8\ub2e4. {missings_perc:.2%}\")\n        \n\nprint(f\"\uc804\uccb4 {len(vars_with_missing)}\uac1c\uc758 \uacb0\uce21\uce58\uac00 \uc788\uc2b5\ub2c8\ub2e4.\")","7df7e665":"# ps_car_03_cat\uacfc ps_car_05_cat \uce7c\ub7fc \uc81c\uac70\ntrain_df.drop([\"ps_car_03_cat\",\"ps_car_05_cat\" ], axis=1, inplace=True)\ntrain_df.head()","ff22f2cd":"# \uba54\ud0c0 \ub370\uc774\ud130\ud504\ub808\uc784 \uc5c5\ub370\uc774\ud2b8\nmeta.loc[[\"ps_car_03_cat\",\"ps_car_05_cat\"], \"keep\"] = False\nmeta","1fbaf621":"from sklearn.impute import SimpleImputer as Imputer","aa5ad908":"# \uc784\ud4e8\ud305 \ud558\uae30 0\nmean_imp = Imputer(missing_values = -1, strategy=\"mean\")\nmode_imp = Imputer(missing_values=-1, strategy=\"most_frequent\")","f419edfb":"# \uacb0\uce21\uce58 \ucc98\ub9ac\ntrain_df[\"ps_reg_03\"] = mean_imp.fit_transform(train_df[[\"ps_reg_03\"]]).ravel()\n","7ae2ed75":"train_df[\"ps_reg_03\"]","634a5039":"train_df[\"ps_car_14\"] = mean_imp.fit_transform(train_df[[\"ps_car_14\"]]).ravel()\ntrain_df[\"ps_car_12\"] = mean_imp.fit_transform(train_df[[\"ps_car_12\"]]).ravel()\ntrain_df[\"ps_car_11\"] = mean_imp.fit_transform(train_df[[\"ps_car_11\"]]).ravel()\ntrain_df","f9ca08ac":"# \uacb0\uce21\uce58 \ub2e4\uc2dc \ud655\uc778\nvars_with_missing = []\n\nfor f in train_df.columns :\n    missings = train_df[train_df[f] == -1][f].count()\n    if missings > 0 :\n        vars_with_missing.append(f)\n        missings_perc = missings\/train_df.shape[0]\n        \n        print(f\"{f}\uce7c\ub7fc\uc740 {missings}\uac1c\uc758 \uacb0\uce21\uce58\uac00 \uc788\uc2b5\ub2c8\ub2e4. {missings_perc:.2%}\")\n        \n\nprint(f\"\uc804\uccb4 {len(vars_with_missing)}\uac1c\uc758 \uacb0\uce21\uce58\uac00 \uc788\uc2b5\ub2c8\ub2e4.\")","59c701b9":"meta","323bbc30":"# \uba54\ud0c0 \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0\uc11c \uce74\ud14c\uace0\ub9ac\ud615 \ub370\uc774\ud130\ub9cc \uac00\uc838\uc634\nv = meta[(meta.level == \"nominal\") & (meta.keep)].index\nv","b64179c3":"for f in v : \n    # cardinality \uad6c\ud558\uae30\n    dist_values = train_df[f].value_counts().shape[0]\n    print(f\"\ubcc0\uc218 {f}\ub294 \ucd1d {dist_values}\uac1c\uc758 \uc885\ub958\ub85c \ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\")","f13469aa":"# add_noise, \uc778\ucf54\ub529 \ud568\uc218 \uc120\uc5b8.\n\n\n# Script by https:\/\/www.kaggle.com\/ogrellier\n# Code: https:\/\/www.kaggle.com\/ogrellier\/python-target-encoding-for-categorical-features\n\ndef add_noise(series, noise_level) :\n    return series * (1 + noise_level * np.random.randn(len(series)))\n\ndef target_encode(train_series = None, test_series= None, target = None, \n                 min_samples_leaf = 1, smoothing = 1, noise_level=0) :\n    '''\n    Smoothing \uacfc\uc815\uc740 Daniele Micchi-Barreca\ub2d8\uc758 \uae00\uc744 \ucc38\uc870\ud574\uc11c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.\n    https:\/\/kaggle2.blob.core.windows.net\/forum-message-attachments\/225952\/7441\/high%20cardinality%20categoricals.pdf\n    \n    train_series : pd.Series\ub85c \uc800\uc7a5\ub41c train\uc758 \uce74\ud14c\uace0\ub9ac\ud615 \uce7c\ub7fc\n    test_series : pd.Series\ub85c \uc800\uc7a5\ub41c test\uc758 \uce74\ud14c\uace0\ub9ac\ud615 \uce7c\ub7fc\n    target : pd.Series\ub85c \uc800\uc7a5\ub41c target \uac12\n    min_samplies_leaf (int) : \uce74\ud14c\uace0\ub9ac \ud3c9\uade0\uc744 \uace0\ub824\ud55c \ucd5c\uc18c \uc0d8\ud50c \uac1c\uc218\n    smoothing (int) : \uce74\ud14c\uace0\ub9ac \ud3c9\uade0\uacfc prior \uc744 \ubc38\ub7f0\uc2f1\ud558\ub294 smoothing effect\n    '''\n    # asserting\ud574\uc900\ub2e4. \n    assert len(train_series) == len(target)\n    assert train_series.name == test_series.name\n    temp = pd.concat([train_series, target], axis=1)\n    \n    # target \ud3c9\uade0 \uacc4\uc0b0\ud558\uae30\n    averages = temp.groupby(by=train_series.name)[target.name].agg([\"mean\", \"count\"])\n    \n    # smoothing \uad6c\ud558\uae30\n    smoothing = 1 \/ (1 + np.exp(-(averages[\"count\"] - min_samples_leaf) \/ smoothing) )\n    \n    # average\ub97c \ubaa8\ub4e0 \ud0c0\uac9f \ub370\uc774\ud0c0\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4.\n    prior = target.mean()\n    # count \uac12\uc774 \ud074 \uc218\ub85d, full_avg\ub294 \uc801\uac8c \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4.\n    averages[target.name] = prior * (1 - smoothing) + averages[\"mean\"] * smoothing\n    averages.drop([\"mean\", \"count\"], axis=1, inplace=True)\n    \n    # \uad6c\ud55c averages\ub97c \ud1b5\ud574 train_series\uc640 test_series\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4.\n    ft_train_series = pd.merge(train_series.to_frame(train_series.name),\n                              averages.reset_index().rename(columns={\"index\" : target.name, \n                                                                    target.name : \"average\"}),\n                              on=train_series.name,\n                              how = \"left\")[\"average\"].rename(train_series.name + \"_mean\").fillna(prior)\n    # pd.merge\ub294 \uc778\ub371\uc2a4\ub97c \uc800\uc7a5\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc778\ub371\uc2a4\ub97c \ub2e4\uc2dc \uc124\uc815\ud574\uc8fc\uc790.\n    ft_train_series.index = train_series.index\n    # fit test_series\n    ft_test_series = pd.merge(test_series.to_frame(test_series.name),\n                             averages.reset_index().rename(columns={\"index\" : target.name,\n                                                                   target.name : \"average\"}),\n                             on=test_series.name, \n                              how=\"left\")[\"average\"].rename(train_series.name + \"_mean\").fillna(prior)\n    # pd.merge\ub294 \uc778\ub371\uc2a4\ub97c \uc800\uc7a5\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \uc778\ub371\uc2a4\ub97c \ub2e4\uc2dc \uc124\uc815\ud574\uc8fc\uc790.\n    ft_test_series.index = test_series.index\n    \n    return add_noise(ft_train_series, noise_level), add_noise(ft_test_series, noise_level)\n\n    ","09b18bee":"# \uc778\ucf54\ub529\ntrain_encoded, test_encoded = target_encode(train_df[\"ps_car_11_cat\"],\n                                           test_df[\"ps_car_11_cat\"],\n                                           target=train_df.target,\n                                           min_samples_leaf=100,\n                                           smoothing=10,\n                                           noise_level=0.01)\n\n# \uc778\ucf54\ub529 \uac12 \uc800\uc7a5\ntrain_df[\"ps_car_11_cat_te\"] = train_encoded\ntrain_df.drop(\"ps_car_11_cat\", inplace=True, axis=1)\nmeta.loc[\"ps_car_11_cat\", \"keep\"] = False  # meta \ub370\uc774\ud130\ud504\ub808\uc784 \uc5c5\ub370\uc774\ud2b8\ntest_df[\"ps_car_11_cat_te\"] = test_encoded\ntest_df.drop('ps_car_11_cat', axis=1, inplace=True)","42b89a73":"# \ud655\uc778\uc791\uc5c5\ntrain_df[\"ps_car_11_cat_te\"]","df2f8c37":"# \uce74\ud14c\uace0\ub9ac\ud615 \ubcc0\uc218\ub4e4 \uc774\ub984 \uac00\uc838\uc624\uae30\nv = meta[(meta.level == \"nominal\") & (meta.keep)].index\nv","038efb17":"for f in v : \n    plt.figure()\n    fig, ax = plt.subplots(figsize = (20, 10))\n    \n    # category\ud615 \uac12 \ub2f9 \uc874\uc7ac\ud558\ub294 \ud0c0\uac9f\uc774 1\uc778 \ud56d\ubaa9\uc758 \ube44\uc728 \uacc4\uc0b0\n    cat_perc = train_df[[f, \"target\"]].groupby([f], as_index=False).mean()\n#     print(cat_perc)\n    # value \uac12\uc73c\ub85c \uc815\ub82c\n    cat_perc.sort_values(by=\"target\", ascending=False, inplace=True)\n#     print(cat_perc)\n    \n    # \ub9c9\ub300\uadf8\ub798\ud504 \uadf8\ub9ac\uae30\n    sns.barplot(ax = ax, x = f, y=\"target\", data=cat_perc, order=cat_perc[f])\n    plt.ylabel(\"% target\", fontsize=18)\n    plt.xlabel(f, fontsize=18)\n    plt.tick_params(axis=\"both\", which=\"major\", labelsize=18)\n    plt.title(f, fontsize=18)\n    plt.show()","ce200307":"# \ud788\ud2b8\ub9f5 \ud568\uc218\ub97c \uc815\uc758\ud55c\ub2e4.\ndef corr_heatmap(v) :\n    correlations = train_df[v].corr()\n    \n    # 2\uac1c\uc758 \uc0c9\uc744 \uac00\uc9c4 \uceec\ub7ec\ub9f5 \uc0dd\uc131\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n    \n    fig, ax = plt.subplots(figsize=(10, 10))\n    sns.heatmap(correlations, cmap=cmap, vmax=1.0, center=0, fmt=\".2f\", square=True, \n                linewidths=0.5, annot=True, cbar_kws={\"shrink\": 0.75})\n    plt.show()","b86ecdc1":"# meta\uc5d0\uc11c interval\uc778\uac83\uc744 \ucd94\ucd9c\nv = meta[ (meta.level == \"interval\") & meta.keep].index\ncorr_heatmap(v)","002a7269":"# \ub370\uc774\ud130\uc758 10%\ub97c \ub79c\ub364\ud558\uac8c \ucd94\ucd9c\ns = train_df.sample(frac=0.1)\ns","c6eede04":"sns.lmplot(x=\"ps_reg_02\", y=\"ps_reg_03\", data=s, hue=\"target\", \n           palette=\"Set1\", scatter_kws={\"alpha\" : 0.3})\nplt.show()","5e999850":"sns.lmplot(x=\"ps_car_12\", y=\"ps_car_13\", data=s, hue=\"target\",\n          palette=\"Set1\", scatter_kws={\"alpha\" : 0.3})\nplt.show()","b3cad9c3":"sns.lmplot(x=\"ps_car_12\", y=\"ps_car_14\", data=s, hue=\"target\", palette=\"Set1\",\n          scatter_kws={\"alpha\" : 0.3})\nplt.show()","ef3d5d39":"sns.lmplot(x=\"ps_car_15\", y=\"ps_car_13\", data=s, hue=\"target\", palette=\"Set1\",\n          scatter_kws={\"alpha\" :0.3})\nplt.show()","6a89823d":"# \uba54\ud0c0\uc5d0\uc11c ordinal\uc778 \uac83\uc744 \uac00\uc838\uc628\ub2e4.\nv = meta[(meta.level == \"ordinal\") & (meta.keep)].index\n# \ud788\ud2b8\ub9f5 \ncorr_heatmap(v)","5642f55b":"v = meta[(meta.level == \"nominal\") & (meta.keep)].index\nprint(f\"\ub354\ubbf8 \ub9cc\ub4e4\uae30 \uc791\uc5c5 \uc804 \ubcc0\uc218 \uac1c\uc218 : {train_df.shape[1]} \")\ntrain_df = pd.get_dummies(train_df, columns=v, drop_first=True)\nprint(f\"\ub354\ubbf8 \ub9cc\ub4e4\uae30 \uc791\uc5c5 \ud6c4 \ubcc0\uc218 \uac1c\uc218 : {train_df.shape[1]} \")\n","045a652f":"# level\uc774 interval\uc778 \uce7c\ub7fc \uac00\uc838\uc624\uae30\nv = meta[ (meta.level == \"interval\") & (meta.keep)].index\n\n# \ucc28\uc218\uac00 2\uac1c\uc778 Polynomial \uac12 \ucd94\uac00\ud558\uae30\npoly = PolynomialFeatures(degree=2, interaction_only=False, include_bias=False)\ninteractions = pd.DataFrame(data=poly.fit_transform(train_df[v]), columns=poly.get_feature_names(v))\ninteractions","055f216c":"# \uae30\uc874\uc758 \uce7c\ub7fc \uc81c\uac70\ud558\uae30\ninteractions.drop(v, inplace=True, axis=1)\nprint(f\"interactions \uc0dd\uc131 \uc804 \uce7c\ub7fc \uc218 : {train_df.shape[1]}\")\ntrain_df = pd.concat([train_df, interactions], axis=1)\nprint(f\"interactions \uc0dd\uc131 \uc804 \uce7c\ub7fc \uc218 : {train_df.shape[1]}\")","222fbd5c":"# VarienceThreshold \uc0dd\uc131\uc790 \uc120\uc5b8\nselector = VarianceThreshold(threshold=0.01)\n# id\uc640 target \uac12 \uc5c6\uc774 \ud559\uc2b5 \uc2e4\ud589\nselector.fit(train_df.drop([\"id\", \"target\"], axis=1))","be610c07":"# x\ub97c not x\ub85c \ub9cc\ub4e4\uc5b4\uc8fc\ub294 \ubca1\ud130 \nf = np.vectorize(lambda x : not x)\n\nv= train_df.drop([\"id\", \"target\"], axis=1).columns[f(selector.get_support())]\nprint(f\"{len(v)}\uac1c\uc758 \uce7c\ub7fc\uc758 variance\uac00 \ub9e4\uc6b0 \ub0ae\ub2e4.\")\nprint(f\"variance\uac00 \ub0ae\uc740 \uce7c\ub7fc :{list(v)}\")","772475fe":"X_train = train_df.drop([\"id\", \"target\"], axis=1)\ny_train = train_df[\"target\"]\n\nfeat_labels = X_train.columns\nfeat_labels","3460e979":"# \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8 \uac1d\uccb4 \uc0dd\uc131\nrf = RandomForestClassifier(n_estimators=1000, random_state=0, n_jobs=-1)\nrf.fit(X_train, y_train)","901e34cb":"importances = rf.feature_importances_","9df33178":"importances","401a5b80":"\nindices = np.argsort(rf.feature_importances_)[::-1]\nindices","adb5ba72":"for f in range(X_train.shape[1]) :\n    print(\"%2d) %-*s %f\" % (f + 1, 30,feat_labels[indices[f]], importances[indices[f]]))","f1c71073":"sfm = SelectFromModel(rf, threshold=\"median\", prefit=True)\nprint(f\"\uc120\ubcc4 \uc804 \ud53c\uccd0\uc758 \uac1c\uc218 : {X_train.shape[1]}\")\nn_features = sfm.transform(X_train).shape[1]\nprint(f\"\uc120\ubcc4 \ud6c4 \ud53c\uccd0\uc758 \uac1c\uc218 : {n_features}\")\nselected_vars = list(feat_labels[sfm.get_support()])","d7505e7e":"train_df = train_df[selected_vars + [\"target\"]]","c9336bc0":"scaler = StandardScaler()\nscaler.fit_transform(train_df.drop([\"target\"], axis=1))","703998f6":"ps_car_11_cat \ubcc0\uc218\uac00 104\uac1c\uc758 \uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc774 \ud0c0\uac9f\uc744 frequency encoding\uc744 \uc774\uc6a9\ud574\uc11c \uc778\ucf54\ub529 \ud574\uc90d\ub2c8\ub2e4.","1bc12382":"Seaborn\uc740 \uc2dc\uac01\ud654\ud558\uac8c \ud3b8\ub9ac\ud55c \ub3c4\uad6c\uac00 \ub9ce\uc544 \ubcc0\uc218\ub4e4\uac04\uc758 \uad00\uacc4(\ud2b9\ud788 \uc120\ud615\uad00\uacc4)\ub97c \uc798 \ud655\uc778\ud560 \uc218 \uc788\ub2e4. \uadf8 \uc911 \ud558\ub098\uc778 pairplot\uc744 \uc0ac\uc6a9\ud558\uba74 \ud55c\ub208\uc5d0 \ubcc0\uc218\ub4e4\uac04\uc758 \uad00\uacc4\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774\ubbf8 \uc6b0\ub9ac\uac00 \ud788\ud2b8\ub9f5\uc5d0\uc11c \ud655\uc778\ud588\ub4ef\uc774, \uc0c1\uad00\uacc4\uc218\uac00 \ub192\uc740 \uce74\ud14c\uace0\ub9ac\ub97c \uc774\ubbf8 \ud655\uc778\ud558\uc600\ub2e4. \uadf8\ub798\uc11c \uc6b0\ub9ac\ub294 \ubc14\ub85c \uac01\uac01\uc758 \ub192\uc740 \uc0c1\uad00\uacc4\uc218\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \ubcc0\uc218\ub97c \uc0b4\ud3b4\ubcf4\ub294\uac8c \uc88b\uaca0\ub2e4.","e85ca742":"ps_car_12\uc640 ps_car_14\uc758 \uad00\uacc4","7e1e2ea5":"\ub9cc\uc57d variance\ub85c \ubcc0\uc218\ub97c \uc120\ud0dd\ud55c\ub2e4\uba74 \uaf64 \ub9ce\uc740 \ubcc0\uc218\ub97c \uc783\uc5b4\uc57c \ud55c\ub2e4. \ud558\uc9c0\ub9cc \ud604\uc7ac \ub370\uc774\ud130 \uc14b\uc740 \ubcc0\uc218\uac00 \uadf8\ub807\uac8c \ub9ce\uc9c0 \uc54a\uc73c\ubbc0\ub85c classifier\uac00 \ub300\uc2e0 \uc120\ud0dd\ud558\uac8c \ud558\uc790. \ub9ce\uc740 \ubcc0\uc218\uac00 \uc788\ub294 \ub370\uc774\ud130 \uc14b\uc5d0\ub294 classifier \ub9cc\ud07c \uc2dc\uac04\uc744 \uc808\uc57d\ud560 \uc218 \uc788\ub294\uac8c \uc5c6\ub2e4. \n","7fa16ab0":"\uce74\ud14c\uace0\ub9ac \ub370\uc774\ud130\uac00 \uc798 \uc778\ucf54\ub529 \ub418\uc5c8\ub2e4.","60a9e94e":"### \uad6c\uac04 \uac12 \ubcc0\uc218","c0f5ef78":"\uc804\uccb4\uc801\uc73c\ub85c, \ubc94\uc704 \ubcc0\uc218\ub4e4\uc758 \ubc94\uc704\uac00 \uc0c1\ub2f9\ud788 \uc791\ub2e4. \uc544\ub9c8\ub3c4 \ub85c\uadf8\ud654\ub098 \ub2e4\ub978 \ub370\uc774\ud130 \ubcc0\ud615 \uc791\uc5c5\uc774 \uc2e4\ud589\ub418\uc5c8\uc744 \uac00\ub2a5\uc131\uc774 \uc788\ub2e4 (\uac1c\uc778\uc815\ubcf4 \ubcf4\ud638\ub97c \uc704\ud574?)\n","5c7ef00a":"target\uc774 0\uc778 \ud589\uc774 573518\uac1c\uc778 \ubc18\uba74, target\uc774 1\uc778 \ud589\uc740 21694\uac1c \ubc16\uc5d0 \ub418\uc9c0 \uc54a\ub294\ub2e4. ","ecf7a7f5":"### \ubd88\uade0\ud615 \ud074\ub798\uc2a4 \uc870\uc815\ud558\uae30 <a class=\"anchor\" id=\"chapter4\"><\/a>\n\uc704\uc5d0\uc11c \uc124\uba85\ud588\ub4ef, \ud0c0\uac9f \uce7c\ub7fc\uc774 1\uc778 \ube44\uc728\uc740 0\uc778 \ube44\uc728\uc5d0 \ube44\ud574 \ud6e8\uc52c \ub0ae\uc740 \uac83\uc744 \uc54c \uc218 \uc788\ub2e4. \uc774 \uacb0\ub860\uc744 \ubc14\ud0d5\uc73c\ub85c \ubaa8\ub378\uc744 \ub9cc\ub4e4\ub54c \uaf64 \uc815\ud655\ud558\uac8c \uc608\uce21\ud558\ub294 \ubaa8\ub378\uc744 \ub9cc\ub4e4 \uc218\ub294 \uc788\uc9c0\ub9cc, \ub2e4\ub978 \ucd94\uac00\ub41c \uac12\uc744 \uc2e4\uc9c8\uc801\uc73c\ub85c \ud3ec\ud568\ud560 \uc218 \uc788\ub2e4. \uc774\uac83\uc744 \ubc14\ud0d5\uc73c\ub85c, 2\uac1c\uc758 \ubc29\ubc95\uc744 \uace0\ub824\ud574\ubcfc\uc218 \uc788\uaca0\ub2e4.\n- target\uc774 1\uc778 \ud56d\ubaa9\uc744 oversampling \ud558\ub294\uac83.\n- target\uc774 0\uc778 \ud56d\ubaa9\uc744 undersampling \ud558\ub294\uac83.\n\n(\uadf8 \uc678\uc5d0\ub3c4 \ub2e4\ub978 \uc5ec\ub7ec \ubc29\ubc95\ub4e4\uc774 \uc788\ub2e4. [MachineLearningMastery.com](https:\/\/www.kaggleusercontent.com\/kf\/1676042\/eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..BpxnVrgBAuCqyykqSJ6rRg.sG9fZig1ih6alTOjfM8BU0n0yWwYUrDMWnn7gAWRUTIPvMBMYoj5yQY1vnnrGEvz5AzBC7BcY5WHrfrYinI9dKs2LGrCtKHzzJOxHn5yjaCIyQOTduufatzf-i-s4az0TBmjzwD_PsCDJ6bLYDB0pl3vc60cq3n_ffCmSnOiqwfGYJbk3dDGN-rSX38ZLPDfPxyIkMAHM2SAzzINip-uDk1PaxzzjkZ5ORN9WnirQOFONaKRnin9SRxJteTfl3wBdC9-1owwSrsSNJrlTUjGMP-bENnhuiZnUfURh5aibHmwm8oaccaREQriYQP3M4ldrdAAwORXoAmVVW1V2KWfpEfe6M0L4DqlXi1X3qcynHj8WBBlxqnLyhAL-PF0EGZeqB_jPkudXq0ZXGdHPbqwsPS_ZkbcUVSVdNhSx-NmwKL_bjlYHUAwrSU0kUdoDMYhye_xj6z4e5rqzxfTgXiiABdXYPCNOXX2lqTzQnnlHOLDhCM4SxbzGzdPklVi1L-LwAzVTz9kYDGzwNuomCn9bcGz6DZkNOVeMOfwzSpQuf8qMDM1-yjbZXdj-iDTDDApybgt8M-ukCLE5Z48K7SPY_rmWdWV75ads1RvRNuJY_i_OeciAZ0GyiruGfrMvXMQ0L2LsW6fREg2-WsIhk11Oc53-xyeOSmH6jl-8KRunbk.ZY90E-09ljdpHL8dqGb6_A\/(https:\/\/machinelearningmastery.com\/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset\/)\n)\n- \ud604\uc7ac \ud2b8\ub808\uc774\ub2dd \ubaa8\ub378\uc5d0 \uc788\ub294 \ub370\uc774\ud130 \uc14b\uc774 \ub9ce\uc73c\ubbc0\ub85c, target\uc774 0\uc778 \ud56d\ubaa9\uc744 undersampling\uc744 \ud558\ub294\uac83\uc73c\ub85c \uacb0\uc815\ud55c\ub2e4.","82bc03b9":"##### NOTE : \ub370\uc774\ud130 \ubd84\uc11d \uacfc\uc815 \uc18d\ub3c4\ub97c \ub0b4\uae30 \uc704\ud574\uc11c train_data\uc758 \uc0d8\ud50c\uc744 \uc0ac\uc6a9\ud558\uc600\ub2e4.","e6cec3df":"### \uacb0\uce21\uce58 \ud655\uc778\n- \uacb0\uce21\uce58\ub294 -1\ub85c \uc800\uc7a5\ub418\uc5b4 \uc788\ub2e4.","f408df52":"### \uc774\uc9c4 \ubcc0\uc218\ub4e4","5e13b716":"\uc774\uc9c4\ubcc0\uc218\uc774\ubbc0\ub85c \ubaa8\ub450 0,1\ub9cc \ub4e4\uc5b4\uc788\ub2e4.\n- target\uc774 \ud3ec\ud568\ub418\uc5b4\uc788\ub294 \uc774\uc9c4 \ubcc0\uc218\ub4e4\uc758 \ud3c9\uade0\uc740 3.645%\ub85c, \ub9e4\uc6b0 \ubd88\uade0\ud615\uc801\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4.\n- \ub0ae\uc740 \ud3c9\uade0\uc744 \uace0\ub824\ud574\ubcf4\uba74 \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \ub300\ubd80\ubd84\uc758 \ud0c0\uac9f\uac12\ub4e4\uc740 0\uc774\ub77c\uace0 \ud560 \uc218 \uc788\ub2e4.","1fc85ab8":"### Table of Contents\n1. [\ub370\uc774\ud130\uc758 \uc804\uccb4\uc801\uc778 \ud2b9\uc9d5](#chapter1)\n2. [\uba54\ud0c0\ub370\uc774\ud130\ud504\ub808\uc784 \ub9cc\ub4e4\uae30](#chapter2)\n3. [\ud1b5\uacc4 \ubd84\uc11d](#chapter3)\n4. [\ub370\uc774\ud130 \uc804\ucc98\ub9ac](#chapter4)\n5. [EDV(Exploratory Data Visualization)](#chapter5)\n6. [Feature Enginering](#chapter6)\n7. [Feature \uace0\ub974\uae30](#chapter7)\n8. [Feature \uc2a4\ucf00\uc77c\ub9c1](#chapter8)","3d0f0034":"* ps_car_03_cat\uc640 ps_car_05_cat \ub294 \uacb0\uce21\uce58\uac00 \uac01\uac01 69%, 44%\ub85c \ub108\ubb34 \ub9ce\ub2e4. \uce7c\ub7fc\uc744 \uc0ad\uc81c\ud558\ub294\uac8c \ub354 \uc88b\uc744 \uac83 \uac19\ub2e4.\n* \ub2e4\ub978 \uce74\ud14c\uace0\ub9ac\ud615 \uce7c\ub7fc\ub4e4\uc740 \uacb0\uce21\uce58\uac00 \ub9e4\uc6b0 \ubbf8\uc18c\ud558\ubbc0\ub85c \uacb0\uce21\uce58 \ubd80\ubd84\ub9cc \uc81c\uac70\ud574\uc8fc\ub3c4\ub85d \ud558\uc790.\n* ps_reg_03 \uce74\ub7fc\uc740 \ucd1d 17%\uc758 \uacb0\uce21\uce58\uac00 \uc788\ub2e4. \uc774 \uce7c\ub7fc\uc740 \uc5f0\uc18d\uc801\uc778 \uac12\uc774\ubbc0\ub85c \ud3c9\uade0\uc744 \uad6c\ud574\uc11c \ucc44\uc6cc\ub123\ub3c4\ub85d \ud558\uc790.\n* ps_car_11\uc740 1\uac1c\uc758 \uacb0\uce21\uce58\uac00 \uc788\ub2e4. \ud3c9\uade0\uac12\uc744 \uad6c\ud574\uc11c \ub123\uc5b4\uc8fc\ub3c4\ub85d \ud558\uc790.\n* ps_car_14\ub294 \uc804\uccb4\uc758 7\ud37c\uc13c\ud2b8\uac00 \uacb0\uce21\uce58\uc774\uace0 \uc5f0\uc18d\uac12\uc774\ubbc0\ub85c \ud3c9\uade0\uc744 \ucc44\uc6cc\uc8fc\ub3c4\ub85d \ud558\uc790.","2d206b9e":"\uc544\ub798\ub294 metadata\ub97c \ubd84\ub958\ud558\ub294 \uc791\uc5c5\uc774\ub2e4. ","41db7a41":"\uc774\uc81c categorical \ub370\uc774\ud130\ub97c \uc815\uc81c\ud574\uc900\ub2e4.","b536d799":"### interaction(\ubc94\uc704) \ubcc0\uc218 \uc0dd\uc131\ud558\uae30","5097602f":"\ucd94\uac00 interaction \uce7c\ub7fc\uc774 train \ub370\uc774\ud130\uc5d0 \ucd94\uac00\ub418\uc5c8\ub2e4. get_feature_names \uba54\uc18c\ub4dc \ub355\ubd84\uc5d0 \uc6b0\ub9ac\ub294 \uce7c\ub7fc \uc774\ub984\ub4e4\uc744 \uc0c8\ub85c\uc6b4 \ubcc0\uc218\uc5d0 \uc9d1\uc5b4\ub123\uc744 \uc218 \uc788\ub2e4.","24c8e967":"\uac1c\uc778\uc801\uc73c\ub85c, \ub098\ub294 classifier \uc54c\uace0\ub9ac\uc998\uc774 \uc54c\uc544\uc11c \uc5b4\ub5a4 \ud53c\uccd0\uac12\uc744 \uc720\uc9c0\ud560 \uac74\uc9c0 \uc120\ud0dd\ud558\ub3c4\ub85d \ud558\ub294\uac78 \ub354 \uc88b\uc544\ud558\ub294\ub370, \uc6b0\ub9ac \uc2a4\uc2a4\ub85c \ud560 \uc218 \uc788\ub294\uac8c \ud558\ub098 \uc788\ub2e4. \uadf8\uac74 \ubc14\ub85c variance\uac00 \ub0ae\uac70\ub098 0\uc778 \ubcc0\uc218\ub97c \uc81c\uac70\ud558\ub294\uac83\uc774\ub2e4. Sklearn\uc740 VarianceThreshold \uac04\ud3b8\ud55c \uba54\uc18c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VarianceThreshold \uba54\uc18c\ub4dc\ub294 variance\uac00 0\uc778 \ubcc0\uc218\ub4e4\uc744 \uc9c0\uc6b4\ub2e4. \uadfc\ub370 \uc774\ubc88 \ub300\ud68c\uc5d0\uc11c\ub294 \uc774\uac83\uc744 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uac83\uc774\ub2e4 \uc65c\ub0d0\ud558\uba74 \uc55e \uacfc\uc815\uc5d0\uc11c variance\uac00 0\uc778 \ubcc0\uc218\ub4e4\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc5c8\uae30 \ub54c\ubb38\uc774\ub2e4. \uadfc\ub370 1% \ubbf8\ub9cc\uc778 variance\ub97c \uc0ad\uc81c\ud55c\ub2e4\uba74 \ucd1d 31\uac1c\uc758 \uce7c\ub7fc\uc744 \uc0ad\uc81c\ud558\uac8c \ub41c\ub2e4.","1c4d40f4":"0.4 ~ 0.6 \uc0ac\uc774\uc5d0 \uac12\uc774 \uc9d1\uc911\ub418\uc5b4 \uc788\uace0 \ud68c\uadc0\uc120\uc774 \uac19\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4.","1e7d065e":"\uc544\ub798\ub294 role\uacfc level\uc774 \ucd1d \uba87\uac1c\uac00 \ub4e4\uc5b4\uc788\ub294\uc9c0\uc5d0 \ub300\ud55c \ub370\uc774\ud130\ud504\ub808\uc784\uc774\ub2e4.","4b6067e3":"### reg \ubcc0\uc218\n- ps_reg_03\uac00 \uacb0\uce21\uce58 \ud3ec\ud568\n- \uac01 \ubcc0\uc218\ub4e4\uc758 \ucd5c\uc18c-\ucd5c\ub300\uac12\uc758 \ubc94\uc704\ub294 \uad49\uc7a5\ud788 \ub2e4\uc591\ud558\ub2e4. \uc815\uaddc\ud654\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc815\uaddc\ud654\ub294 classifier\uc5d0 \ub2ec\ub824\uc788\ub2e4.","94d4ee4f":"### \uc21c\uc11c\ud615 \ub370\uc774\ud130\uc758 \uc0c1\uad00\uacc4\uc218 \ud655\uc778\ud558\uae30","1ef36ffd":"\ubcf8 \uae00\uc740 Bert Carremans \ub2d8\uc758 https:\/\/www.kaggle.com\/bertcarremans\/data-preparation-exploration \uc744 \ucc38\uc870\ud558\uc600\uc74c\uc744 \ubc1d\ud799\ub2c8\ub2e4. \uc88b\uc740 \ucee4\ub110 \uacf5\uc720\uc5d0 \uac10\uc0ac\ub4dc\ub9bd\ub2c8\ub2e4.\n\nThis page is originated from the masterwork of Bert Carremans (https:\/\/www.kaggle.com\/bertcarremans\/data-preparation-exploration). I'm honored to step on the giant's shoulder. I appreciate you, indeed.","6b6eb335":"ps_car_12\uc640 ps_car_13\uc758 \uad00\uacc4","5161547b":"SelectFromModel\uc774 \uc788\uc73c\ubbc0\ub85c \uc6b0\ub9ac\ub294 \uc5b4\ub5a4 \uc885\ub958\uc758 \ubd84\ub958\uae30\ub97c \uc120\ud0dd\ud560\uac83\uc778\uc9c0 \uc815\ud560 \uc218 \uc788\uace0 \ud53c\uccd0 \uc911\uc694\ub3c4\uc5d0 \ub300\ud55c \ud55c\uacc4 \uad6c\uac04\uc744 \uad6c\ubd84\ud560 \uc218 \uc788\ub2e4. get_support \uba54\uc18c\ub4dc\ub294 \uadf8\ub808\uc0ac train_data\uc14b\uc5d0 \uc788\ub294 \ubcc0\uc218\uc758 \uac1c\uc218\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\ub2e4. ","f73a1c67":"\uc608\uc2dc\ub85c, \uc22b\uc790 \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uace0 dropped \ub418\uc9c0 \uc54a\uc740 \uc5f4\uc744 \ubd88\ub7ec\uc628\ub2e4.","cd7d0fd2":"- ps_car_11\uc5d0 \uacb0\uce21\uce58 \ud3ec\ud568\n- \uc774 \uac12\uc5d0 \uc2a4\ucf00\uc77c\ub9c1\uc744 \ub123\uc73c\uba74 \ud45c\uc900\ud654 \uac00\ub2a5","3bc88a72":"### Metadata <a class=\"anchor\" id=\"chapter2\"><\/a>\n\ud6a8\uacfc\uc801\uc73c\ub85c \ub370\uc774\ud130\ud504\ub808\uc784\uc744 \ubd84\uc11d\ud558\uae30 \uc704\ud574\uc11c, \uc6b0\ub9ac\ub294 \ubcc0\uc218\ub4e4\uc5d0 \uad00\ud55c \uba54\ud0c0 \uc815\ubcf4\ub4e4\uc744 \uc0c8\ub86d\uac8c \uc800\uc7a5\ud560 \uac83\uc774\ub2e4. \uba54\ud0c0\ub370\uc774\ud130\ub294 \uc6b0\ub9ac\uac00 \uc0c1\uc138\ud55c \ubd84\uc11d\uc774\ub098 \uc2dc\uac01\ud654, \ubaa8\ub378\ub9c1 \ub4f1\uc5d0 \ud65c\uc6a9\ub420 \uc218 \uc788\ub2e4.\n\uc544\ub798\ub294 \ub370\uc774\ud130\uc758 \ud2b9\uc131\uc5d0 \ub530\ub77c 4\uac00\uc9c0 \ud56d\ubaa9\uc73c\ub85c \ubd84\ub958\ud55c \uac83\uc774\ub2e4. \uc601\uc5b4\ub85c \uc801\ub294\uac8c \ub354 \ud3b8\ud560 \uac83 \uac19\uc544 \ub530\ub85c \ud55c\uae00\ub85c \ubc14\uafb8\uc9c4 \uc54a\uc558\ub2e4,\n* role : input, ID, target\n* level : nominal, interval, ordinal, binary\n* keep : True or False\n* dtype : int, float, str","ebdc4344":"## Feature Enginering <a class=\"anchor\" id=\"chapter6\"><\/a>","6aa0bf7f":"train_df \uc0b4\ud3b4\ubcf4\uc790","9116bde6":"\uba54\ud0c0\ub370\uc774\ud130\ub97c \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0 \uc800\uc7a5\ud55c\ub2e4.","160acf0e":"---","2964d868":"\uc0c1\uad00\uacc4\uc218\uac00 \uc788\ub294 \ubcc0\uc218\ub4e4\uc774 \ub9ce\uc544 \ubcf4\uc774\uc9c0 \uc54a\ub294\ub2e4. \uadf8\ub807\ub2e4\uba74, \ub098\uc911\uc5d0 target\uac12\uc744 \uae30\uc900\uc73c\ub85c grouping \ud588\uc744 \ub54c \ubd84\ud3ec\uac00 \uc5b4\ub5a4\uc9c0 \uc0b4\ud3b4\ubcf4\uba74 \ub418\uaca0\ub2e4.","7a103f5f":"### Feature \uace0\ub974\uae30 <a class=\"anchor\" id=\"chapter7\"><\/a>","1472cf40":"\uc704\uc5d0\uc11c \ubcf8 \uac83\uacfc \uac19\uc774 \uacb0\uce21\uce58\uac00 \ub9ce\uc774 \uc874\uc7ac\ud558\ub294 \ubcc0\uc218\ub4e4\uc774 \uc788\ub2e4. \uadf8\ub807\uae30 \ub584\ubb38\uc5d0 \ub9ce\uc740 \uacb0\uce21\uce58\ub4e4\uc744 \ubcc4\ub3c4\uc758 \uce74\ud14c\uace0\ub9ac \uac12\uc73c\ub85c \ub9cc\ub4dc\ub294\uac83\uc774 mode\ub85c replace\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ubc14\ub78c\uc9c1\ud558\ub2e4. \uacb0\uce21\uce58\ub97c \uac00\uc9c0\uace0 \uc788\ub294 \uace0\uac1d\ub4e4\uc740 \ub354 \ub9ce\uc774 (\ubb3c\ub860 100%\ub294 \uc544\ub2c8\uc9c0\ub9cc) \ubcf4\ud5d8\uc744 \ub4dc\ub294 \uacbd\ud5a5\uc774 \uc788\ub2e4. ","ced889f0":"## EDV(Exploratory Data Visualization)  <a class=\"anchor\" id=\"chapter5\"><\/a>\n### \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ud558\uae30","cc19a786":"\ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\ub3c4 \ud655\uc778\ud574\ubcf4\uc790.","ee1c63ba":"## \ud1b5\uacc4 \ubd84\uc11d <a class=\"anchor\" id=\"chapter3\"><\/a>\n\n\ubcf4\ud1b5 \ud1b5\uacc4 \ubd84\uc11d\uc744 \ud560\ub54c\ub294 describe()\ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc, mean, std, \ub4f1\uc744 \uce74\ud14c\uace0\ub9ac\ub098 id \uac12\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc801\uc808\ud558\uc9c0 \uc54a\ub2e4. \uc6b0\ub9ac\ub294 \uadf8 \ub300\uc2e0 \uc544\uae4c \uad6c\ud55c \uba54\ud0c0 \ub370\uc774\ud130\ub97c \uc774\uc6a9\ud55c\ub2e4. \uba54\ud0c0 \ub370\uc774\ud130 \ub355\ubd84\uc5d0 \uc6b0\ub9ac\ub294 describe()\ub97c \uc0ac\uc6a9\ud558\uace0 \uc2f6\uc740 \uce7c\ub7fc\ub9cc \ub354 \uc27d\uac8c \uad6c\ud560 \uc218 \uc788\ub2e4.","f64faea7":"# \ub370\uc774\ud130 \uc804\ucc98\ub9ac <a class=\"anchor\" id=\"chapter4\"><\/a>","fb316689":"* min\uc744 \uc798 \uc0b4\ud3b4\ubcf4\uc790.\n* min\uc774 -1\uc774 \uc788\ub294 \uce7c\ub7fc\uc744 \ub098\uc5f4\ud55c\ub2e4.\n","9c332381":"### \ud53c\uccd0 scaling <a class=\"anchor\" id=\"chapter8\"><\/a>","0266faa0":"52\uac1c\uc758 \ub354\ubbf8 \uce7c\ub7fc\uc774 \ucd94\uac00 \ub418\uc5c8\ub2e4!","add1dbdc":"### \ubc94\uc704 \ubcc0\uc218\ub4e4\n\uc774\uc81c\ub294 \ubc94\uc704\uac12\uc744 \uac00\uc9c0\uace0 \uc788\ub294 \ubcc0\uc218\ub4e4\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud655\uc778\ud574\ubcf4\ub3c4\ub85d \ud558\uc790. \uc0c1\uad00\uad00\uacc4\ub97c \uc54c\uc544\ubcfc \ub54c \uac00\uc7a5 \uc0ac\uc6a9\ud558\uae30 \uc88b\uc740 \uac83\uc740 \ud788\ud2b8\ub9f5\uc73c\ub85c \uc2dc\uac01\ud654 \ud558\ub294 \ubc29\ubc95\uc774\ub2e4. [Michael Waskom \ub2d8\uc758 \uae00\uc744 \ucc38\uc870\ud558\uc600\ub2e4.](http:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html)","e036ccd2":"#### ps_reg_02\uc640 ps_reg_03\uc758 \uc0c1\uad00\uad00\uacc4 \ud655\uc778\n\uc544\ub798\uc758 \ud68c\uadc0\uc120\uc5d0\uc11c \ubcf4\uc774\ub4ef, \ub450 \ubcc0\uc218\ub4e4\uc5d0 1\ucc28 \ud568\uc218 \ud615\ud0dc\uc758 \ube44\ub840 \uad00\uacc4\uac00 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4. hue \ud30c\ub77c\ubbf8\ud130 \ub355\ubd84\uc5d0 \uc6b0\ub9ac\ub294 target=0\uc758 \ud68c\uadc0\uc120\uacfc target=1\uc758 \ud68c\uadc0\uc120\uc774 \uac19\uc74c\uc744 \uc54c \uc218 \uc788\ub2e4.","9e1553aa":"- ps_reg_02\uc640 ps_reg_03\uc740 \uc0c1\uad00\uacc4\uc218\uac00 0.7\ub85c \ub192\uc740 \uad00\uacc4\uac00 \uc788\ub2e4.\n- ps_car_12\uc640 ps_car_13\uc740 \uc0c1\uad00\uacc4\uc218\uac00 0.67\n- ps_car_12\uc640 ps_car_14\ub294 \uc0c1\uad00\uacc4\uc218\uac00 0.58\n- ps_car_13\uc640 ps_car_15\ub294 \uc0c1\uad00\uacc4\uc218\uac00 0.53\uc774\ub2e4.","bf0cbac9":"595212\uac1c\uc758 \ud589\uc774 \uc874\uc7ac\ud558\uace0, 59\uac1c\uc758 \uce7c\ub7fc\uc774 \uc874\uc7ac\ud55c\ub2e4. \uadf8\uc911 \uc2e4\uc218 \uce7c\ub7fc\uc740 10\uac1c, \uc815\uc218 \uce7c\ub7fc\uc740 49\uac1c\uc774\ub2e4.","59fa60ee":"\uc55e\uc73c\ub85c \uccb4\ud06c\ud574\uc57c \ud560\uac83\n- binary \ubcc0\uc218\ub4e4\n- \uc815\uc218\uac12\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294 \uce74\ud14c\uace0\ub9ac \ubcc0\uc218\ub4e4\n- \uc815\uc218\ub098 \uc2e4\uc218\uac12\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub294 \ubcc0\uc218\ub4e4\n- -1\ub85c \ub418\uc5b4 \uc788\ub294 \uacb0\uce21\uce58\n- \ud0c0\uac9f \ubcc0\uc218\uc640 id \ubcc0\uc218","f9894c41":"892816\uac1c\uc758 \ud589, 58\uac1c\uc758 \uc5f4\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4. test\ub370\uc774\ud130\uc14b\uc740 target\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ubb38\uc81c\uac00 \uc5c6\uc5b4\ubcf4\uc778\ub2e4.","a3f0f274":"### car \ubcc0\uc218\n- ps_car_12, ps_car_14\uac00 \uacb0\uce21\uce58\ub97c \ud3ec\ud568\ud55c\ub2e4.\n- \uc2a4\ucf00\uc77c\ub9c1 \uc0ac\uc6a9\ud560\uac83\uc784","9a1c4cb7":"\uc790, \uc774\uc81c \uc0c1\uad00\uad00\uacc4\ub3c4 \uc0b4\ud3b4\ubcf4\uc558\ub2e4. \uadf8\ub7ec\uba74 \uc774\uc81c \uc0c1\uad00\uad00\uacc4\uac00 \uc788\ub294 \ubcc0\uc218 \uc911 \uc5b4\ub5a4 \uac83\uc744 \uc120\ud0dd\ud574\uc57c \ud560\uae4c? PCA(Principal Component Analysis)\uc5d0 \ub530\ub974\uba74 \ud544\uc694\uc5c6\ub294 \ubcc0\uc218\ub4e4\uc740 \uc81c\uac70\ud558\uc5ec \ucc28\uc6d0\uc744 \uc904\uc5ec\uc57c \ud55c\ub2e4\uace0 \ud55c\ub2e4. \ubcf8\ub798\ub294 \uc81c\uac70\ub97c \ud574\uc57c \ub9c8\ub545\ud558\uc9c0\ub9cc \uc0c1\uad00\uacc4\uc218\uac00 \uc788\ub294 \ud56d\ubaa9\uc774 \ub9ce\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ubaa8\ub378\uc5d0\uc11c heavy-lifting\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uc790.","5a6790af":"Sklearn\uc740 \ub610\ud55c \ub2e4\ub978 feature selection \uba54\uc18c\ub4dc\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\ub294 \ud234\uc774\ub2e4. \uadf8 \uc911 \ud558\ub098\uc778 SelectFromModel \uba54\uc18c\ub4dc\ub294 \ubd84\ub958\uae30\ub85c \ud558\uc5ec\uae08 \ucd5c\uace0\uc758 \ud53c\uccd0\ub97c \uc790\ub3d9\uc73c\ub85c \uace8\ub77c \uadf8\uac83\ub4e4\uc744 \uc0ac\uc6a9\ud558\uac8c \ud55c\ub2e4. \uc544\ub798\uc11c SelectFromModel \uba54\uc18c\ub4dc\ub97c RandomForest\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95\uc744 \uc18c\uac1c\ud55c\ub2e4 ","89ac8b20":"ps_car_13\uacfc ps_car_15\uc758 \uad00\uacc4","4a537e1d":"### \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\uc640 SelectFromModel\uc744 \uc774\uc6a9\ud574\uc11c \ud53c\uccd0 \uc120\ud0dd\ud558\uae30","b54a0972":"### calc \ubcc0\uc218\n- \uacb0\uce21\uce58 \uc5c6\uc74c.\n- \uc138 calc \ucd5c\ub300\uac12\uc774 \ubaa8\ub450 0.9\uc774\ub2e4. \n- \uc138 calc \ubcc0\uc218\ub4e4\uc740 \ube44\uc2b7\ud55c \ubd84\ud3ec\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4.","78390bd2":"#### varience\uac00 \ub0ae\uac70\ub098 0\uc778 \ubcc0\uc218 \uc81c\uac70\ud558\uae30","1c6307cc":"\uc55e\uc11c \ub9d0\ud588\ub4ef\uc774, \uc6b0\ub9ac\ub294 standardScaling\uc744 \uc801\uc6a9\ud574\uc11c \uc2a4\ucf00\uc77c\ub9c1\uc744 \ud560 \uc218 \uc788\ub2e4. \uba87 \ubd84\ub958\uae30\ub4e4\uc740 scaling\uc744 \uc0ac\uc6a9 \uc804\uacfc \ud6c4\uac00 \ud070 \ucc28\uc774\uac00 \ub098\uae30\ub3c4 \ud55c\ub2e4.","99c322e0":"### \uc21c\uc5f4 \ubcc0\uc218\ub4e4","819b99c4":"### \uce74\ud14c\uace0\ub9ac\ud615 \ubcc0\uc218 \ub0b4\uc758 cardinality(\uce74\ud14c\uace0\ub9ac\uc758 \uc885\ub958) \uccb4\ud06c\ud558\uae30\ncardinality\ub294 \ud55c \uce74\ud14c\uace0\ub9ac \ub0b4\uc5d0 \uc788\ub294 \ub2e4\ub978 \uc885\ub958\uc758 \uac12\uc758 \uac1c\uc218\uc785\ub2c8\ub2e4. \ud604\uc7ac\ub294 \uc5c6\uc9c0\ub9cc \ub098\uc911\uc5d0 \uc6b0\ub9ac\uac00 \uac00\uc9dc \ub354\ubbf8 \ubcc0\uc218\ub4e4\uc744 \uce74\ud14c\uace0\ub9ac\ubcc0\uc218\uc5d0\uc11c \uac00\uc838\uc640 \ub9cc\ub4e4\uac74\ub370, \uadf8\ub798\uc11c \uce74\ud14c\uace0\ub9ac \ubcc0\uc218 \ub0b4\uc758 \uc778\uc790\uac12\uc774 \uc5bc\ub9c8\ub098 \uc788\ub294\uc9c0\ub97c \uc54c\uc544\uc57c\ud569\ub2c8\ub2e4. \uac01 \ubcc0\uc218\ub4e4\uc744 \uac01\uac01 \ucc98\ub9ac\ud574\uc57c\ud558\uc9c0 \uc54a\uc73c\uba74 \ub098\uc911\uc5d0 \ub354\ubbf8 \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\ub54c \ubb38\uc81c\uac00 \uc788\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","65151fb5":"#### Dummy \uac12 \uc0dd\uc131\ud558\uae30\n\uce74\ud14c\uace0\ub9ac\uc758 \uac12\uc740 \uadf8\uc800 \ub2e4\ub978 \uc0c1\ud0dc\ub77c\ub294 \uac83\ub9cc\uc744 \uc54c\ub824\uc8fc\uc9c0, \uc11c\ub85c\uac04\uc758 \uc5b4\ub5a4 \uc21c\uc11c\ub098 \ubc30\uc218 \uad00\uacc4\uac00 \uc544\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc790\uba74, \uce74\ud14c\uace0\ub9ac \uac12\uc774 2\ub77c\uace0 \ud574\uc11c \uadf8\uac8c \uce74\ud14c\uace0\ub9ac \uac12 1\uc778 \uac12\uc758 2\ubc30\uac00 \uc544\ub2c8\ub77c\ub294 \uac83\uc774\ub2e4. \uadf8\ub807\uae30 \ub54c\ubb38\uc5d0, \uc774\ub7f0 \uad00\uacc4\ub97c \uc774\uc6a9\ud574\uc11c \uc6b0\ub9ac\ub294 \ub354\ubbf8 \uac12\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub2e4. \ucc98\uc74c \uc0dd\uc131\ub41c \ub354\ubbf8 \ubcc0\uc218\ub97c \ubc84\ub9b0\ub2e4. \uc65c\ub0d0\ud558\uba74 \uccab \ub354\ubbf8 \ubcc0\uc218\ub4e4\uc740 \uc21c\uc218\ud55c \ubcc0\uc218\ub4e4\uc758 \uce74\ud14c\uace0\ub9ac \uac12\uc5d0\uc11c \ub9cc\ub4e4\uc5b4\uc9c4 \ub2e4\ub978 \ub354\ubbf8 \ubcc0\uc218\ub4e4\uc5d0\uc11c \uc624\uae30 \ub584\ubb38\uc774\ub2e4.","637875ce":"### \uce74\ud14c\uace0\ub9ac\ud615 \ubcc0\uc218\n\uce74\ud14c\uace0\ub9ac\ud615 \ubcc0\uc218\ub4e4\uacfc \ud0c0\uac9f\uc774 1\uc778 \uace0\uac1d\uc758 \ube44\uc728\uc744 \uc54c\uc544\ubcf4\uc790.","c9bae1b2":"### \ud574\ub2f9 \ub370\uc774\ud130\uc758 \uc804\uccb4\uc801 \ud2b9\uc9d5 <a class=\"anchor\" id=\"chapter1\"><\/a>\n\ub300\ud68c\ub97c \uc218\ud589\ud558\uae30 \uc704\ud574\uc11c \ud544\uc694\ud55c \ub370\uc774\ud130 \uc0c1\uc138 \ub0b4\uc6a9\uc758 \uc804\uccb4 \uc694\uc57d\uc785\ub2c8\ub2e4.\n- \ube44\uc2b7\ud55c \uadf8\ub8f9\ud551\uc5d0 \ub4e4\uc5b4\uc788\ub294 \ud53c\uccd0\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc\ub418\uc5b4 \uc788\uc74c. (ind, reg, car, calc ...)\n- bin \uc774\ub77c\uace0 \ub418\uc5b4 \uc788\ub294 \uce7c\ub7fc\uc740 binary, cat\uc740 \uace0\uc591\uc774\uac00 \uc544\ub2c8\ub77c \uce74\ud14c\uace0\ub9ac\ud615 \ub370\uc774\ud130\uc774\ub2e4.\n- \uc544\ubb34\ub7f0 \ud45c\uc2dc\uac00 \uc5c6\ub294 \ub370\uc774\ud130 \uce7c\ub7fc\uc740 \uc5f0\uc18d\uc801\uc778 \ub370\uc774\ud130\uc774\ub2e4.\n- \uacb0\uce21\uce58\ub294 NaN\uc774 \uc544\ub2c8\ub77c -1\ub85c \ud45c\uc2dc\ub418\uc5b4 \uc788\ub2e4.\n- Target \uce7c\ub7fc\uc740 0\uc774\uba74 \ub0b4\ub144\ub3c4\uc5d0 \ubcf4\ud5d8\uc5d0 \ub4e4\uc9c0 \uc54a\uc558\uace0, 1\uc774\uba74 \ubcf4\ud5d8\uc744 \ub4e4\uc5c8\ub2e4. ","c8210a77":"\uc5ec\uae30\uc11c \uc6b0\ub9ac\ub294 \ud53c\uccd0 \uc120\ud0dd\uc744 \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8\uc758 feature importances\ub97c \uc774\uc6a9\ud574 \ud560\uac83\uc774\ub2e4. Sklearn\uc758 SelectFromModel\uc744 \uc774\uc6a9\ud558\uba74 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubcc0\uc218\ub4e4\uc744 \uc800\uc7a5\ud560 \uac83\uc778\uc9c0 \ubd84\ub958\ud560 \uc218 \uc788\uac8c \ub41c\ub2e4. \ud53c\uccd0 \uc911\uc694\ub3c4\ub97c \uc218\ub3d9\uc73c\ub85c \uc124\uc815\ud574\uc11c \ud55c\uacc4\ub97c \uc815\ud560 \uc218 \uc788\ub2e4. \uc5ec\uae30\uc11c\ub294 \uac04\ub2e8\ud558\uac8c \uc0c1\uc704 50%\ub9cc \uace0\ub974\ub3c4\ub85d \ud558\uc790.\n    \uc544\ub798\uc758 \ucf54\ub4dc\ub294 Sebastian Raschka\ub2d8\uc758 [\uae43\ud5c8\ube0c Repository](https:\/\/github.com\/rasbt\/python-machine-learning-book\/blob\/master\/code\/ch04\/ch04.ipynb)\uc5d0\uc11c \uac00\uc838\uc628 \uac83\uc774\ub2e4. \ud30c\uc774\uc36c \uba38\uc2e0\ub7ec\ub2dd\uc758 \uc0d8\ud50c \ucf54\ub4dc\uac00 \uc608\uc220\uc774\ub2e4."}}