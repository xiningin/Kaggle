{"cell_type":{"56aa9110":"code","0d175019":"code","409ebe2e":"code","c7c1217c":"code","2b976e95":"code","c8c43f8a":"code","ec811556":"code","a961dfc2":"code","224ddae7":"code","d522b7f5":"code","85c76c38":"code","22ef275d":"code","d0d59f83":"code","55a91ff5":"code","57836697":"code","e72c7680":"code","3a2cc86f":"code","bb69cdeb":"code","e52fa1e6":"code","2394193e":"code","ae6b8126":"markdown","4141646d":"markdown","a3043811":"markdown","0374deb3":"markdown","607c7307":"markdown","8ce96b63":"markdown","f912808d":"markdown","568756ba":"markdown","f827def9":"markdown","389bebcd":"markdown"},"source":{"56aa9110":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","0d175019":"# Read train data\ntrain = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/train.csv')\n\n# Read test data\ntest = pd.read_csv('\/kaggle\/input\/home-data-for-ml-course\/test.csv')\n","409ebe2e":"#looking at the train data\ntrain.head()","c7c1217c":"# Drop the  rows where the target is missing\nTarget = 'SalePrice'\ntrain.dropna(axis=0, subset=[Target], inplace=True)","2b976e95":"#combining train data and test data\ndf =pd.concat([train.iloc[:,:-1],test],axis=0)\n\nprint('train df has {} rows and {} features'.format(train.shape[0],train.shape[1]))\nprint('test df has {} rows and {} features'.format(test.shape[0],test.shape[1]))\nprint('Combined df has {} rows and {} features'.format(df.shape[0],df.shape[1]))","c8c43f8a":"#look at the combined data\ndf.head()","ec811556":"#drop ID column\ndf = df.drop(columns=['Id'],axis=1)","a961dfc2":"def missingValue(df1):\n    total = df1.isnull().sum().sort_values(ascending = False)\n    percent = round(df1.isnull().sum().sort_values(ascending = False)\/len(df)*100, 2)\n    temp = pd.concat([total, percent], axis = 1,keys= ['Total', 'Percent'])\n    return temp.loc[(temp['Total'] > 0)]\n\nmissingValue(train)","224ddae7":"\ndef HandleMissingValues(df):\n    # for Object columns fill using 'UNKNOWN'\n    # for Numeric columns fill using median\n    num_cols = [cname for cname in df.columns if df[cname].dtype in ['int64', 'float64']]\n    cat_cols = [cname for cname in df.columns if df[cname].dtype == \"object\"]\n    values = {}\n    for a in cat_cols:\n        values[a] = 'UNKNOWN'\n\n    for a in num_cols:\n        values[a] = df[a].median()\n        \n    df.fillna(value=values,inplace=True)\n    \n    \nHandleMissingValues(df)\ndf.head()","d522b7f5":"#check if there are any missing values\ndf.isnull().sum().sum()","85c76c38":"\ndef getObjectColumnsList(df):\n    return [cname for cname in df.columns if df[cname].dtype == \"object\"]\n\ndef PerformOneHotEncoding(df,columnsToEncode):\n    return pd.get_dummies(df,columns = columnsToEncode)\n\ncat_cols = getObjectColumnsList(df)\ndf = PerformOneHotEncoding(df,cat_cols)\ndf.head()","22ef275d":"df.shape","d0d59f83":"#split into train and test\ntrain_data=df.iloc[:1460,:]\ntest_data=df.iloc[1460:,:]\nprint(train_data.shape)\ntest_data.shape","55a91ff5":"X=train_data\ny=train.loc[:,'SalePrice']","57836697":"from sklearn.linear_model import RidgeCV\n\nridge_cv = RidgeCV(alphas=(0.01, 0.05, 0.1, 0.3, 1, 3, 5, 10))\nridge_cv.fit(X, y)\nridge_cv_preds=ridge_cv.predict(test_data)","e72c7680":"\npredictions = ( ridge_cv_preds )","3a2cc86f":"import xgboost as xgb\n\nmodel_xgb = xgb.XGBRegressor(n_estimators=340, max_depth=2, learning_rate=0.2)\nmodel_xgb.fit(X, y)\nxgb_preds=model_xgb.predict(test_data)","bb69cdeb":"predictions2 = (xgb_preds)","e52fa1e6":"\nsubmission = {\n    'Id': test.Id.values,\n    'SalePrice': predictions\n}\nsolution = pd.DataFrame(submission)\nsolution.head()","2394193e":"#make the submission data frame\nsubmission = {\n    'Id': test.Id.values,\n    'SalePrice': predictions2\n}\nsolution = pd.DataFrame(submission)\nsolution.head()","ae6b8126":"# Take the best predictions by checking the both on the leader board.\n# Thank you, Upvote the kernel if u like.","4141646d":"# Feature Encoding","a3043811":"**Handling Missing Values**","0374deb3":"# Submission","607c7307":"# EDA and Data Cleaning ","8ce96b63":"**Missing Values**","f912808d":"# Modelling","568756ba":"# Reading the train and test data","f827def9":"# Importing Necessary Libraries","389bebcd":"# Intoduction - *Predicting the future sale price by doing EDA, Data Cleaning , Feature Encoding.*"}}