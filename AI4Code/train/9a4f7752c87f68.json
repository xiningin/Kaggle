{"cell_type":{"399280a3":"code","c1bcfde6":"code","0eb23b9f":"code","b58b19a0":"code","5fcde013":"code","3e649edc":"code","5a372f94":"code","d3f16954":"code","cf85ec4f":"code","33a07e1d":"code","31639670":"code","725f39c0":"code","8ed16a28":"code","f4490c55":"code","ac379a99":"markdown","c3b99ba9":"markdown"},"source":{"399280a3":"#importing necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","c1bcfde6":"#importing dataset\ncol = [ 'Class Name','Left weight','Left distance','Right weight','Right distance']\ndf = pd.read_csv('..\/input\/balancescale\/balance-scale.data',names=col,sep=',')\n","0eb23b9f":"df.head()","b58b19a0":"df.info()","5fcde013":"sns.countplot(df['Class Name'])","3e649edc":"sns.countplot(df['Left weight'],hue=df['Class Name'])","5a372f94":"from sklearn.model_selection import train_test_split\nX = df.drop('Class Name',axis=1)\ny = df[['Class Name']]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state=42)","d3f16954":"from sklearn.tree import DecisionTreeClassifier\nclf_model = DecisionTreeClassifier(criterion=\"gini\", random_state=42,max_depth=3, min_samples_leaf=5)   \nclf_model.fit(X_train,y_train)","cf85ec4f":"y_predict=clf_model.predict(X_test)","33a07e1d":"from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\naccuracy_score(y_test,y_predict)","31639670":"target=list(df['Class Name'].unique())\nfeature_names=list(X.columns)","725f39c0":"from sklearn import tree\nimport graphviz\ndot_data = tree.export_graphviz(clf_model,\n                                out_file=None, \n                      feature_names=feature_names,  \n                      class_names=target,  \n                      filled=True, rounded=True,  \n                      special_characters=True)  \ngraph = graphviz.Source(dot_data)  \n\ngraph","8ed16a28":"from sklearn.tree import export_text\nr = export_text(clf_model, feature_names=feature_names)\nprint(r)","f4490c55":"graph.save('graph1.jpg')","ac379a99":"test accuracy","c3b99ba9":"Training the Decision Tree Classifier"}}