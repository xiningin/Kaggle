{"cell_type":{"b3829ff2":"code","7683440c":"code","ce9844da":"code","7827b340":"code","3943e0fb":"code","ed71b34d":"code","ef7f2960":"code","1246a459":"markdown","2276de2c":"markdown"},"source":{"b3829ff2":"from random import randint\nfrom plotly.graph_objs import Bar, Layout\nfrom plotly import offline","7683440c":"class Die:\n\t\"\"\"A class representing a single die\"\"\"\n\n\tdef __init__(self, num_sides=6):\n\t\t\"\"\"Assume a six-slide die\"\"\"\n\t\tself.num_sides = num_sides\n\n\tdef roll(self):\n\t\t\"\"\"Return a random value between 1 and number of sides.\"\"\"\n\t\treturn randint(1, self.num_sides)\n    ","ce9844da":"# Create a D6\ndie = Die()\n\n# Make some rolls, and store results in a list\nresults = []\nfor roll_num in range(1000):\n\tresult = die.roll()\n\tresults.append(result)\n\nprint(results[:100])","7827b340":"# Analyze the results\nfrequencies = []\nfor value in range(1, die.num_sides + 1):\n\tfrequency = results.count(value)\n\tfrequencies.append(frequency)\n\nprint(frequencies)","3943e0fb":"# Visualize the results\nx_values = list(range(1, die.num_sides+1))\nprint(x_values)","ed71b34d":"data = [Bar(x=x_values, y=frequencies)]\nprint(data)","ef7f2960":"x_axis_config = {'title': 'Result'}\ny_axis_config = {'title': 'Frquency of Result'}\nmy_layout = Layout(title='Results of rolling one D6 1000 times',\n\txaxis=x_axis_config, yaxis=y_axis_config)\n\n# To display the graph in the notebook. To generate the file, uncomment the line below\noffline.iplot({'data':data, 'layout': my_layout})\n#offline.plot({'data':data, 'layout': my_layout}, filename='d6.html')\n","1246a459":"Plotly allows you to generate graphs offline and save them in local machine. The plotly.offline.plot() function creates a standalone HTML that is saved locally and opened inside your web browser. Use plotly.offline.iplot() when working offline in a notebook to display the plot in the notebook.","2276de2c":"# Python Crash Course\nProjects from the book Python Crash Course by Eric Matthes"}}