{"cell_type":{"a133b0c0":"code","4bb4bc8d":"code","ff9df774":"code","f5553f21":"code","4e774431":"code","97b2147d":"code","19b40af8":"code","52e28bd2":"code","80eee4c4":"code","bd1055b4":"code","4706e180":"code","d3dd3c5a":"code","79b47e47":"code","804f9793":"code","129cf040":"code","438e2310":"code","a92ecb9a":"code","b9b36b8f":"code","2de54f56":"code","617dd030":"code","3e32a256":"code","bb1a908f":"markdown","0fbead13":"markdown","cfba59e4":"markdown"},"source":{"a133b0c0":"# install pycaret\n!pip install pycaret","4bb4bc8d":"# import libraries\nimport pandas as pd\nimport numpy as np","ff9df774":"# read csv data\ndata = pd.read_csv('..\/input\/telco-customer-churn\/WA_Fn-UseC_-Telco-Customer-Churn.csv')\ndata.head()","f5553f21":"# check data types\ndata.dtypes","4e774431":"# replace blanks with np.nan\ndata['TotalCharges'] = data['TotalCharges'].replace(' ', np.nan)\ndata.isnull().sum()","97b2147d":"# convert to float64\ndata['TotalCharges'] = data['TotalCharges'].astype('float64')\ndata.info()","19b40af8":"!pip install pandas-profiling","52e28bd2":"from pandas_profiling import ProfileReport\nprofile = ProfileReport(data, title=\"EDA Report\")\nprofile","80eee4c4":"# check missing values\ndata.isnull().sum()","bd1055b4":"round(data.Churn.value_counts()*100 \/ len(data),2)","4706e180":"categorical = []\nfor i in data.columns:\n    if (data[i].dtype=='object'):\n        categorical.append(i)\nprint(\"Categorical Attribute : {}\\n \".format(len(categorical)))\nfor x in range(len(categorical)): \n    print(categorical[x])","d3dd3c5a":"data[categorical].nunique()","79b47e47":"for i in categorical[1:]:\n    print(i)\n    print(data[i].unique())\n    print(\"\\n\")","804f9793":"# init setup\nfrom pycaret.classification import *\ntelecom = setup(data, target = 'Churn', ignore_features = ['customerID'],\n                ordinal_features = {'Contract' : ['Month-to-month' ,'One year', 'Two year']},\n                fix_imbalance = True,\n               transformation = True,#Transformation changes the shape of the distribution such that the transformed data can be represented by normal distribution\n                  normalize = True, #rescale the values of numeric columns\n                  handle_unknown_categorical = True, \n                  unknown_categorical_method = 'most_frequent',\n                  remove_multicollinearity = True, #rop one of the two features that are highly correlated with each other\n                  ignore_low_variance = True,#all categorical features with statistically insignificant variances are removed from the dataset.\n                  combine_rare_levels = True,# all levels in categorical features below the threshold defined in rare_level_threshold param are combined together as a single level\n                numeric_imputation='median',\n                categorical_imputation='mode',)","129cf040":"lda= create_model('lda')","438e2310":"print(lda)","a92ecb9a":"tuned_lda = tune_model(lda,optimize = 'Recall') #tuned on Recall","b9b36b8f":"evaluate_model(tuned_lda) #Graphical plot ","2de54f56":"predict_model(tuned_lda)# Test data evaluation ","617dd030":"final_lda = finalize_model(tuned_lda) # Final model \nfinal_lda","3e32a256":"predict_model(final_lda)#final test model evaluation ","bb1a908f":"# Data Preparation","0fbead13":"# Missing Values","cfba59e4":"# Exploratory Data Analysis"}}