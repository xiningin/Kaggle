{"cell_type":{"fc0407bc":"code","3625fe84":"code","09a01e67":"code","34c34567":"code","555bad3d":"code","3e65d494":"code","1d657214":"code","60154177":"code","e47abd5e":"code","c320bead":"code","6ff7ffe6":"code","7bcb18a4":"code","dccb4f3b":"code","f5efa8ea":"code","d28bcb0d":"code","ef3b6331":"code","12667642":"code","6a1ddb61":"code","9310fd23":"code","d2577bf5":"code","12db45f8":"code","25ba5729":"code","67cac65c":"code","a51e655f":"code","fd528731":"code","bbc45a84":"code","b7158ecd":"markdown"},"source":{"fc0407bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3625fe84":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","09a01e67":"train = pd.read_csv(\"..\/input\/train.csv\")","34c34567":"train.head()","555bad3d":"train.info()","3e65d494":"sns.heatmap(train.isnull(),yticklabels=False,cbar=True,cmap='viridis')","1d657214":"sns.boxplot(x='Pclass',y='Age',data=train)","60154177":"def null_value(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 42\n        elif Pclass == 2:\n            return 27\n        else:\n            return 24\n    else:\n        return Age","e47abd5e":"train['Age'] = train[['Age','Pclass']].apply(null_value,axis=1)","c320bead":"sns.heatmap(train.isnull(),yticklabels=False,cbar=True,cmap='viridis')","6ff7ffe6":"train.drop('Cabin',axis=1,inplace=True)","7bcb18a4":"sns.heatmap(train.isnull(),yticklabels=False,cbar=True,cmap='viridis')","dccb4f3b":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","f5efa8ea":"train = pd.concat([train,sex,embark],axis=1)","d28bcb0d":"train.drop(['Sex','Name','Embarked','Ticket'],axis=1,inplace=True)","ef3b6331":"train.drop('PassengerId',axis=1,inplace=True)","12667642":"train.head()","6a1ddb61":"X = train.drop('Survived',axis=1)\ny = train['Survived']\n","9310fd23":"from sklearn.model_selection import train_test_split","d2577bf5":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","12db45f8":"from sklearn.linear_model import LogisticRegression","25ba5729":"logmodel=LogisticRegression()","67cac65c":"logmodel.fit(X_train,y_train)","a51e655f":"predictions = logmodel.predict(X_test)","fd528731":"from sklearn.metrics import classification_report,confusion_matrix\n","bbc45a84":"print(classification_report(y_test,predictions))\nprint(confusion_matrix(y_test,predictions))","b7158ecd":"train.dropna(inplace=True)"}}