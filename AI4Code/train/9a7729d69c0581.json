{"cell_type":{"2d99484d":"code","19382183":"code","55d05c0a":"code","318fb65d":"code","cb849779":"code","c15f7b25":"code","77034b77":"code","64b2ffab":"code","ace38695":"code","47fe2079":"code","1f0a4495":"code","68bea88f":"code","75ee71e4":"code","e51e6c61":"code","f0765cc5":"code","0af5c0bb":"code","beb5ab85":"code","3a652db7":"code","8bcbf5c0":"code","566d00ac":"code","44b8ec68":"code","ebe752f4":"code","f5d4a050":"markdown","9f716cf8":"markdown"},"source":{"2d99484d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","19382183":"# import libraries\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.rcParams['figure.figsize'] = [8,5]\nplt.rcParams['font.size'] =14\nplt.rcParams['font.weight']= 'bold'\nplt.style.use('seaborn-whitegrid')","55d05c0a":"path = '..\/input\/'\ndf = pd.read_csv('\/kaggle\/input\/insurance\/insurance.csv')\nprint ('\\n number of rows in dataframe are ' , df.shape[0])\nprint ('\\n number of columns or features in dataframe are ' , df.shape[1])\n","318fb65d":"# see few records of data frame \ndf.head()","cb849779":"# seperating out independant variables\nX = df.iloc[:,:-1]\nX","c15f7b25":"y = df.iloc[:,6]\ny","77034b77":"# convert categorical values into numerical \nmale_or_female = pd.get_dummies(X['sex'],drop_first=False)\nmale_or_female","64b2ffab":"smoker_or_nonsmoker = pd.get_dummies(X['smoker'],drop_first=False)\nsmoker_or_nonsmoker","ace38695":"region_ = pd.get_dummies(X['region'],drop_first=False)\nregion_","47fe2079":"# drop sex categorical column from dataset \nX=X.drop('sex',axis=1)\nX[0:3]","1f0a4495":"# similarly drop smoker and region\nX = X.drop('smoker',axis = 1)\nX[0:3]","68bea88f":"# drop region column\nX = X.drop('region', axis = 1)\nX[0:3]","75ee71e4":"# concat the numerical forms of these categorical columns\nX=pd.concat([X,male_or_female],axis=1)\nX[0:3]","e51e6c61":"X=pd.concat([X,smoker_or_nonsmoker],axis=1)\nX[0:3]","f0765cc5":"X=pd.concat([X,region_],axis=1)\nX[0:3]","0af5c0bb":"# Splitting the dataset into the Training set and Test set\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","beb5ab85":"# now create the model and train it over training data\nfrom sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)","3a652db7":"# now predict the values for the test data\ny_pred = model.predict(X_test)\ny_pred","8bcbf5c0":"from sklearn.metrics import r2_score # r2_score is used to compare the values which are predicted by model and actual values\n                                        # so that we can find out accuracy of our model\nscore=r2_score(y_test,y_pred)\nscore","566d00ac":"semifinal = pd.concat([X_test,y_test],axis=1)\nsemifinal","44b8ec68":"# appending predicted values in last column just for comparision\nsemifinal['Predicted Charges']=y_pred \nsemifinal","ebe752f4":"#write it to outpust csv\nsemifinal.to_csv(\"prediction_insurance.csv\")","f5d4a050":"#### For Multiple Linear regression more than one independent variable exit then we will use  xij  to denote indepedent variable and  yi  to denote dependent variable. We have  n  independent variable then  j=1,2,3.....n . The hypothesis function represented as\n\nh\u03b8(xi)=\u03b80+\u03b81xi1+\u03b82xi2+.....\u03b8jxij......\u03b8nxmn\n \n\u03b80,\u03b81,....\u03b8j....\u03b8n  are parameter of hypothesis,  m  Number of training exaples,  n  Number of independent variable,  xij  is  ith  training exaple of  jth  feature.","9f716cf8":"Now we have import dataset. When we look at the shape of dataset it has return as (1338,7).So there are  m=1338  training exaple and  n=7  independent variable. The target variable here is charges and remaining six variables such as age, sex, bmi, children, smoker, region are independent variable. There are multiple independent variable, so we need to fit Multiple linear regression. Then the hypothesis function looks like\n\n#### h\u03b8(xi)=\u03b80+\u03b81age+\u03b82sex+\u03b83bmi+\u03b84children+\u03b85smoker+\u03b86region\n \nThis multiple linear regression equation for given dataset.\n#### If  i=1  then\n#### h\u03b8(x1)=\u03b80+\u03b8119+\u03b82female+\u03b8327.900+\u03b841+\u03b85yes+\u03b86southwest\n \ny1=16884.92400\n #### Similarly \nIf  i=3  then\nh\u03b8(x3)=\u03b80+\u03b8128+\u03b82male+\u03b8333.000+\u03b843+\u03b85no+\u03b86northwest\n \ny3=4449.46200"}}