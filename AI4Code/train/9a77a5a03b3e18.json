{"cell_type":{"e5e390fd":"code","40b3b025":"code","a627bb00":"code","890f6558":"code","1c0b3bf6":"code","cdab9618":"code","850185d4":"code","7e2360d7":"code","9eee10b5":"code","583cdba0":"code","2392a24c":"code","f6f207e5":"code","df7d8d87":"code","9db9102b":"code","4bea8cc4":"code","6c1dc15e":"code","5efcf6a5":"code","edf38254":"code","358b978b":"code","a80b5c43":"code","d04a7dcd":"code","520996ba":"code","595a2c22":"code","693e6551":"code","95f7ffb5":"code","17650bfe":"code","705c54fb":"code","93e35df9":"code","068fedc8":"code","9794f110":"code","3c5b21e2":"code","159fe892":"code","e96e3001":"code","722ae400":"code","50800d44":"code","27d7da4b":"code","b7ec91af":"code","9d248ef0":"code","dd4102c6":"code","fe75cfa1":"code","bd76a667":"code","e8af7971":"code","8bc89cae":"code","ccc5e9de":"code","dcc29371":"markdown","8548f860":"markdown","95cf7a3b":"markdown","954ef3b4":"markdown","5d5ee9a8":"markdown","7c8c4aa0":"markdown"},"source":{"e5e390fd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","40b3b025":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport time\nimport multiprocessing\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom collections import Counter\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\n\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE, ADASYN\nfrom sklearn.metrics import confusion_matrix, r2_score, mean_squared_error\nfrom sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score, accuracy_score, classification_report, precision_recall_curve\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a627bb00":"df = pd.read_csv(\"\/kaggle\/input\/network-anamoly-detection\/Train.txt\",sep=\",\",names=[\"duration\",\"protocoltype\",\"service\",\"flag\",\"srcbytes\",\"dstbytes\",\"land\", \"wrongfragment\",\"urgent\",\"hot\",\"numfailedlogins\",\"loggedin\", \"numcompromised\",\"rootshell\",\"suattempted\",\"numroot\",\"numfilecreations\", \"numshells\",\"numaccessfiles\",\"numoutboundcmds\",\"ishostlogin\",\n\"isguestlogin\",\"count\",\"srvcount\",\"serrorrate\", \"srvserrorrate\",\n\"rerrorrate\",\"srvrerrorrate\",\"samesrvrate\", \"diffsrvrate\", \"srvdiffhostrate\",\"dsthostcount\",\"dsthostsrvcount\",\"dsthostsamesrvrate\", \"dsthostdiffsrvrate\",\"dsthostsamesrcportrate\",\n\"dsthostsrvdiffhostrate\",\"dsthostserrorrate\",\"dsthostsrvserrorrate\",\n\"dsthostrerrorrate\",\"dsthostsrvrerrorrate\",\"attack\", \"lastflag\"])\ndf.head()","890f6558":"df.shape","1c0b3bf6":"df.describe()","cdab9618":"df.drop(['land','urgent','numfailedlogins','numoutboundcmds'],axis=1,inplace=True)","850185d4":"df.isna().sum()","7e2360d7":"df.select_dtypes(exclude=[np.number])","9eee10b5":"df['attack'].loc[df['attack']!='normal']='attack'","583cdba0":"le=LabelEncoder()","2392a24c":"df['protocoltype']=le.fit_transform(df['protocoltype'])\ndf['service']=le.fit_transform(df['service'])\ndf['flag']=le.fit_transform(df['flag'])\ndf['attack']=le.fit_transform(df['attack'])","f6f207e5":"plt.figure(figsize=(20,15))\nsns.heatmap(df.corr())","df7d8d87":"X=df.drop(['attack'],axis=1)\ny=df['attack']","9db9102b":"sns.countplot(df['attack'])","4bea8cc4":"print(\"Class distribution: {}\".format(Counter(y)))","6c1dc15e":"scaler = StandardScaler()\nscaler.fit(X)\nX_transformed = scaler.transform(X)","5efcf6a5":"lr=LogisticRegression()\nlr.fit(X_transformed,y)\nlr_pred=lr.predict(X_transformed)","edf38254":"lr_df=pd.DataFrame()\nlr_df['actual']=y\nlr_df['pred']=lr_pred","358b978b":"lr_df.head()","a80b5c43":"print(accuracy_score(y, lr_pred))","d04a7dcd":"confusion_matrix(y, lr_pred)","520996ba":"print(classification_report(y, lr_pred))","595a2c22":"rf=RandomForestClassifier()\nrf.fit(X_transformed,y)\nrf_pred=rf.predict(X_transformed)","693e6551":"rf_df=pd.DataFrame()\nrf_df['actual']=y\nrf_df['pred']=rf_pred\nrf_df.head()","95f7ffb5":"print(accuracy_score(y, rf_pred))","17650bfe":"confusion_matrix(y, rf_pred)","705c54fb":"print(classification_report(y, rf_pred))","93e35df9":"test_df = pd.read_csv(\"\/kaggle\/input\/network-anamoly-detection\/Test.txt\",sep=\",\",names=[\"duration\",\"protocoltype\",\"service\",\"flag\",\"srcbytes\",\"dstbytes\",\"land\", \"wrongfragment\",\"urgent\",\"hot\",\"numfailedlogins\",\"loggedin\", \"numcompromised\",\"rootshell\",\"suattempted\",\"numroot\",\"numfilecreations\", \"numshells\",\"numaccessfiles\",\"numoutboundcmds\",\"ishostlogin\",\n\"isguestlogin\",\"count\",\"srvcount\",\"serrorrate\", \"srvserrorrate\",\n\"rerrorrate\",\"srvrerrorrate\",\"samesrvrate\", \"diffsrvrate\", \"srvdiffhostrate\",\"dsthostcount\",\"dsthostsrvcount\",\"dsthostsamesrvrate\", \"dsthostdiffsrvrate\",\"dsthostsamesrcportrate\",\n\"dsthostsrvdiffhostrate\",\"dsthostserrorrate\",\"dsthostsrvserrorrate\",\n\"dsthostrerrorrate\",\"dsthostsrvrerrorrate\",\"attack\", \"lastflag\"])\ntest_df.head()","068fedc8":"test_df.select_dtypes(exclude=[np.number])","9794f110":"test_df['attack'].loc[test_df['attack']!='normal']='attack'","3c5b21e2":"test_df['protocoltype']=le.fit_transform(test_df['protocoltype'])\ntest_df['service']=le.fit_transform(test_df['service'])\ntest_df['flag']=le.fit_transform(test_df['flag'])\ntest_df['attack']=le.fit_transform(test_df['attack'])","159fe892":"test_df.drop(['land','urgent','numfailedlogins','numoutboundcmds'],axis=1,inplace=True)","e96e3001":"X_test=test_df.drop(['attack'],axis=1)\ny_test=test_df['attack']","722ae400":"sns.countplot(test_df['attack'])","50800d44":"X_test_transformed = scaler.transform(X_test)","27d7da4b":"test_pred=rf.predict(X_test_transformed)","b7ec91af":"rf_test_df=pd.DataFrame()\nrf_test_df['actual']=y_test\nrf_test_df['pred']=test_pred","9d248ef0":"rf_test_df.head()","dd4102c6":"print(accuracy_score(y_test, test_pred))","fe75cfa1":"target_names=[\"attack\",\"normal\"]","bd76a667":"print(classification_report(y_test, test_pred,target_names=target_names))","e8af7971":"confusion_matrix(y_test, test_pred)","8bc89cae":"tn, fp, fn, tp = confusion_matrix(y_test, test_pred).ravel()","ccc5e9de":"print(\"True Negatives:\",tn)\nprint(\"False Positives:\",fp)\nprint(\"False Negatives:\",fn)\nprint(\"True Positives:\",tp)","dcc29371":"**We can see Random Forest Classifier is giving better accuracy in comparison to Logistic Regression.**","8548f860":"Using Random Forest Classifier Model on test data:","95cf7a3b":"**Using Logistic Regression**","954ef3b4":"As we are focussing on Binomial Classification for this dataset, we can make all other classes other than normal as 'attack'","5d5ee9a8":"As we can see 'land', 'urgent', 'numfailedlogins', 'numoutboundcmds' have mostly zero values so we can drop these columns.","7c8c4aa0":"**Using Random Forest Classifier**"}}