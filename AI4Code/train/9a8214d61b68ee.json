{"cell_type":{"78e06b65":"code","89f677b8":"code","8141f315":"code","fc7b86b2":"code","837edb1b":"code","4affd329":"code","b520deb8":"code","ac6716b6":"code","71f7a5ea":"code","66219ea1":"code","de6eca95":"markdown","cdfb0b70":"markdown","bbf88a77":"markdown","b1085b1d":"markdown","eb03c3df":"markdown","02e85686":"markdown","f701b324":"markdown","a7567d84":"markdown","2e205081":"markdown","0aae88bc":"markdown"},"source":{"78e06b65":"import numpy as np\nimport os\n\nfrom sklearn import datasets\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import LinearSVC\n\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt","89f677b8":"mpl.rc('axes', labelsize=14)\nmpl.rc('xtick', labelsize=12)\nmpl.rc('ytick', labelsize=12)\n\nPROJECT_ROOT_DIR = \".\"\nCHAPTER_ID = \"svm\"\nIMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, \"images\", CHAPTER_ID)\nos.makedirs(IMAGES_PATH, exist_ok=True)\n\nSEED = 42\nnp.random.seed(SEED)","8141f315":"def save_fig(fig_id, tight_layout=True, fig_extension=\"png\", resolution=300):\n    path = os.path.join(IMAGES_PATH, fig_id + \".\" + fig_extension)\n    print(\"Saving figure\", fig_id)\n    if tight_layout:\n        plt.tight_layout()\n    plt.savefig(path, format=fig_extension, dpi=resolution)","fc7b86b2":"from sklearn.datasets import make_moons\nX, y = make_moons(n_samples=100, noise=0.15, random_state=SEED)","837edb1b":"np.unique(y)","4affd329":"X[:5]","b520deb8":"y[:5]","ac6716b6":"def plot_dataset(X, y, axes):\n    plt.plot(X[:, 0][y==0], X[:, 1][y==0], \"bs\")\n    plt.plot(X[:, 0][y==1], X[:, 1][y==1], \"g^\")\n    plt.axis(axes)\n    plt.grid(True, which='both')\n    plt.xlabel(r\"$x_1$\", fontsize=20)\n    plt.ylabel(r\"$x_2$\", fontsize=20, rotation=0)\n\nplot_dataset(X, y, [-1.5, 2.5, -1, 1.5])\nplt.show()","71f7a5ea":"from sklearn.datasets import make_moons\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import PolynomialFeatures\n\npolynomial_svm_clf = Pipeline([\n        (\"poly_features\", PolynomialFeatures(degree=3)),\n        (\"scaler\", StandardScaler()),\n        (\"svm_clf\", LinearSVC(C=10, loss=\"hinge\", random_state=SEED))\n    ])\n\npolynomial_svm_clf.fit(X, y)","66219ea1":"def plot_predictions(clf, axes):\n    x0s = np.linspace(axes[0], axes[1], 100)\n    x1s = np.linspace(axes[2], axes[3], 100)\n    x0, x1 = np.meshgrid(x0s, x1s)\n    X = np.c_[x0.ravel(), x1.ravel()]\n    y_pred = clf.predict(X).reshape(x0.shape)\n    y_decision = clf.decision_function(X).reshape(x0.shape)\n    plt.contourf(x0, x1, y_pred, cmap=plt.cm.brg, alpha=0.2)\n    plt.contourf(x0, x1, y_decision, cmap=plt.cm.brg, alpha=0.5)\n\nplot_predictions(polynomial_svm_clf, [-1.5, 2.5, -1, 1.5])\nplot_dataset(X, y, [-1.5, 2.5, -1, 1.5])\n\nsave_fig(\"moons_polynomial_svc_plot\")\nplt.show()","de6eca95":"# draw dataset","cdfb0b70":"# make data","bbf88a77":"# result data","b1085b1d":"# train data","eb03c3df":"# draw contour","02e85686":"# common variables","f701b324":"# import libraries","a7567d84":"# common function","2e205081":"# input data","0aae88bc":"# input label"}}