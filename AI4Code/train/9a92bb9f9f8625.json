{"cell_type":{"dd42b39b":"code","4ea4be21":"code","d5e1767d":"code","a5d47ded":"code","44e94076":"code","9214417f":"code","5f1ef803":"code","3d2498df":"code","1bf01bc3":"code","a10e4332":"code","66f7d636":"code","43b1a830":"code","8ff588bf":"code","d59649bc":"code","79dc28be":"code","1179c203":"code","492d189d":"code","14535d33":"code","06a099c6":"code","ea607627":"code","db148f3f":"code","e32781c2":"markdown","30114885":"markdown","1bcce5b8":"markdown","34fa8735":"markdown","f9e0a130":"markdown","4a5df63a":"markdown"},"source":{"dd42b39b":"# importing the essential libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split","4ea4be21":"# importing the deep learning libraries\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout","d5e1767d":"# getting the training data from the location\ntrain_data = pd.read_csv('\/kaggle\/input\/Kannada-MNIST\/train.csv')","a5d47ded":"train_data.head()","44e94076":"# Checking the distribution of the labels in the dataset\ntrain_data['label'].value_counts()","9214417f":"# Splitting the training and validating data\nX = train_data.drop(['label'], axis = 1).values\ny = train_data[['label']].values\n\n# scaling the data\nX = X \/ 255.0\n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size = 0.2, random_state = 101)","5f1ef803":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_val.shape)\nprint(y_val.shape)","3d2498df":"# Reshaping the data\nX_train = X_train.reshape(48000, 28, 28, 1)\nX_val = X_val.reshape(12000, 28, 28, 1)","1bf01bc3":"print(X_train.shape)\nprint(y_train.shape)\nprint(X_val.shape)\nprint(y_val.shape)","a10e4332":"plt.imshow(X_train[0][:,:,0])","66f7d636":"# the total number of outputs\noutput_classes = len(set(train_data['label']))","43b1a830":"# preparing the artificial neural network with CNN Layers\ncnn_model = Sequential()\ncnn_model.add(Conv2D(filters = 128, kernel_size = (3, 3), activation = 'relu', input_shape = (28, 28, 1)))\ncnn_model.add(MaxPooling2D(pool_size = (2, 2)))\n# cnn_model.add(Dropout(rate = 0.2))\ncnn_model.add(Conv2D(filters = 64, kernel_size = (3, 3), activation = 'relu'))\ncnn_model.add(MaxPooling2D(pool_size = (2, 2)))\ncnn_model.add(Conv2D(filters = 32, kernel_size = (3, 3), activation = 'relu'))\ncnn_model.add(Flatten())\ncnn_model.add(Dense(units = 128, activation = 'relu'))\n# cnn_model.add(Dropout(rate = 0.2))\ncnn_model.add(Dense(units = 64, activation = 'relu'))\n# cnn_model.add(Dropout(rate = 0.1))\ncnn_model.add(Dense(units = output_classes, activation = 'softmax'))\n\ncnn_model.compile(optimizer = 'adam', loss = 'sparse_categorical_crossentropy', metrics = ['accuracy'])","8ff588bf":"fitted_model = cnn_model.fit(X_train, y_train, epochs = 10, validation_data = (X_val, y_val))","d59649bc":"accuracy = fitted_model.history['acc']\nx_axis = range(len(accuracy))\nplt.plot(x_axis, accuracy, 'o', label = 'accuracy plot')\nplt.legend()","79dc28be":"test_data = pd.read_csv('\/kaggle\/input\/Kannada-MNIST\/test.csv')\ntest_data.head()","1179c203":"X = test_data.drop(['id'], axis = 1)\nX = X \/ 255.0\nprint(X.shape)","492d189d":"X = X.values.reshape(5000, 28, 28, 1)","14535d33":"predictions = cnn_model.predict_classes(X)","06a099c6":"# submission = pd.DataFrame({'id' : test_data['id'], 'label' : predictions})\n# submission.head()","ea607627":"submission = pd.read_csv('\/kaggle\/input\/Kannada-MNIST\/sample_submission.csv')\nsubmission['label'] = predictions\nsubmission.head()","db148f3f":"submission.to_csv(\"submission.csv\",index=False)","e32781c2":"The labels are equally distributed. ","30114885":"We will use Convolutional Neural Networks to classify the Kannada digits. ","1bcce5b8":"Preparing a file for submitting","34fa8735":"Exporting the dataframe","f9e0a130":"Now we can include the test data and test it.","4a5df63a":"Thank you for viewing my kernel and your kind encouragement."}}