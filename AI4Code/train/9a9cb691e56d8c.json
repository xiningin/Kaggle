{"cell_type":{"fd35f9b0":"code","90d0484d":"code","b46948fb":"code","d9bd4011":"code","b5a108d5":"code","e81e7e01":"code","dafa4935":"code","7d471558":"code","3ca362e9":"code","9f6c236d":"code","0f0b7556":"code","c915f752":"code","18446e38":"code","a2600754":"code","4b56227f":"code","c45b289b":"code","4d021792":"code","16cf1c78":"code","2f2d2bd5":"code","529f9828":"code","3d19037b":"code","50c512e1":"code","6a7ecaa6":"code","0694a2fe":"code","d1bb4485":"code","c4db99e4":"code","07e13676":"code","e429ab74":"code","3176ca88":"markdown","0b51f353":"markdown","30b1246c":"markdown","cd52b1fd":"markdown","340c9558":"markdown","3f7cbcf5":"markdown"},"source":{"fd35f9b0":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.metrics import mean_squared_error\n# Make numpy printouts easier to read.\nnp.set_printoptions(precision=3, suppress=True)\n","90d0484d":"%pip install autokeras","b46948fb":"import tensorflow as tf\nimport autokeras as ak\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.layers.experimental import preprocessing\n\nprint(tf.__version__)\n","d9bd4011":"train_data=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest_data=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')\nsubmisssion_data=pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","b5a108d5":"train_data.head()","e81e7e01":"test_data.head()","dafa4935":"train_data.isnull().sum()","7d471558":"test_data.isnull().sum()","3ca362e9":"print(f'Train Shape :  {train_data.shape}')\nprint(f'Test Shape :  {test_data.shape}')","9f6c236d":"train_data = train_data.drop('id', axis=1)\ntest_data = test_data.drop('id', axis=1)","0f0b7556":"# histogramse for all variables with KDE\nplt.figure(figsize=(24, 6*(104\/4)))\nfor i in range(len(train_data.columns.tolist())):\n    plt.subplot(26, 4, i+1)\n    if i <= 99:\n        sns.histplot(train_data[f'f{i}'], kde=True)\n    else:\n        sns.histplot(train_data['loss'], kde=True)\nplt.show()","c915f752":"# correlation matrix with heat map\ncorr = train_data.corr()\nplt.figure(figsize=(20, 20))\nsns.heatmap(corr)\nplt.show()\n","18446e38":"# Top ten highest correlated features for each feature\ncols = train_data.columns.tolist()\nfor col in cols:\n    print(col)\n    print(corr[col].sort_values(ascending=False)[1:11])\n    print('****************************************')\n\n","a2600754":"trainX=train_data.drop([\"loss\"],axis=1)\ntrainy=train_data[\"loss\"]\ntestX=test_data\nfeatures=trainX.columns\nfeatures","4b56227f":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\ntrainX[features] = scaler.fit_transform(trainX[features])\ntestX[features] = scaler.transform(testX[features])","c45b289b":"from sklearn.model_selection import train_test_split\nX_train, X_valid, y_train, y_valid = train_test_split(trainX, trainy, train_size=0.8, test_size=0.2,\n                                                      random_state=0)","4d021792":"normalizer = preprocessing.Normalization(axis=-1)\nnormalizer.adapt(np.array(X_train))\n\n","16cf1c78":"linear_model = tf.keras.Sequential([\n    normalizer,\n      layers.Dense(128, activation='relu'),\n    layers.Dense(64, activation='relu'),\n      layers.Dense(64, activation='relu'),\n      layers.Dense(1)\n])","2f2d2bd5":"linear_model.compile(\n    optimizer=tf.optimizers.Adam(learning_rate=0.05),\n    loss='mean_squared_error')\n","529f9828":"\nhistory = linear_model.fit(\n    X_train, y_train, \n    epochs=40,\n    verbose=1,\n    validation_data=(X_valid, y_valid),\n    batch_size=64)\n","3d19037b":"#plot training and validation loss\ndef plot_loss(history):\n  plt.plot(np.sqrt(history.history['loss']), label='loss')\n  plt.plot(np.sqrt(history.history['val_loss']), label='val_loss')\n  #plt.ylim([63, 64])\n  plt.xlabel('Epoch')\n  plt.ylabel('Error [loss]')\n  plt.legend()\n  plt.grid(True)\n","50c512e1":"prdct1=linear_model.predict(test_data)\nfinal_pred1=pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")\nfinal_pred1[\"loss\"]=prdct1\nfinal_pred1.to_csv('submission_basicnn1.csv',index=False)","6a7ecaa6":"plot_loss(history)\n","0694a2fe":"search = ak.StructuredDataRegressor(max_trials=5, loss='mean_squared_error',objective=\"val_loss\")","d1bb4485":"search.fit(X_train, y_train, verbose=1,validation_data=(X_valid, y_valid),use_multiprocessing=True,epochs=10,)","c4db99e4":"lm=search.predict(test_data)\nfinal_pred=pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv\")\nfinal_pred[\"loss\"]=lm\nfinal_pred.to_csv('submission_basicnn.csv',index=False)","07e13676":"# #save model\n# mdl=search.export_model()\n# try:\n#     mdl.save(\"model_autokeras\", save_format=\"tf\")\n# except Exception:\n#     mdl.save(\"model_autokeras.h5\")","e429ab74":"# import shutil\n# shutil.make_archive('model_autokeras', 'zip', '.\/')","3176ca88":"# Basic Dense NN with tensorflow and keras","0b51f353":"# **Basic Data Exploration:**","30b1246c":"# **TPS- 08 EDA+ Autokeras neural network**","cd52b1fd":"# **Auto keras model tuning**","340c9558":"# Simple EDA","3f7cbcf5":"# **Importing Required Libraries:**"}}