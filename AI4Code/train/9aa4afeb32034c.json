{"cell_type":{"00894c84":"code","8178cfcf":"code","6e726cc0":"code","2afc0baf":"code","cfe44576":"code","d3152b61":"code","857e8b61":"code","d4ec13a8":"code","472c05fb":"code","24237756":"code","a0ee1c31":"code","293c4438":"code","ac98f812":"code","7b86216f":"code","0f02a5d7":"code","23f17a1f":"code","bf87e57b":"code","65a334c3":"code","6fbf37f5":"code","8fe20f24":"code","23bd9419":"code","de612a26":"code","0afe8e6f":"code","33ec852a":"code","53ed87fe":"code","b55de071":"code","f8ab0f3f":"code","fa18ebfd":"code","42574b16":"code","a1e7c801":"code","89b88397":"code","b0b942b4":"code","2b09f5fc":"code","c9c1e8c0":"code","c5197db7":"code","5179b132":"code","507fbe57":"code","cf918328":"code","eb71b152":"code","3de2e32b":"code","db61a7fc":"code","0bbe833e":"code","b949f6f1":"code","72ae3595":"code","ec2e67b4":"code","f8dc7903":"code","b038aa7c":"code","c96101c1":"code","f1fece61":"code","933ec386":"code","689755a7":"code","fd5c7823":"code","9ab9b989":"code","87a3b0ea":"code","f4837001":"code","63d9a1a8":"code","0e1246bc":"code","d9288e6d":"code","875a2ffe":"code","99150bdc":"code","9489d333":"code","a3bbae6f":"code","360f4a3b":"code","3d7c6aba":"code","a76b6c1b":"code","dbdf8203":"code","15dcbcb7":"code","89d79a7b":"code","cc2f3102":"code","5c7d05e9":"code","7414f5f4":"markdown","90ea10d2":"markdown","ae2ca091":"markdown","86ce68de":"markdown","91f4cac7":"markdown","f9a4311e":"markdown","07294e7f":"markdown","8721de9c":"markdown","da8a4c20":"markdown","c3a764b5":"markdown","47e805df":"markdown","ac8c6708":"markdown","bb858aff":"markdown","1ea1465b":"markdown","f406b6c7":"markdown","22e0d326":"markdown","78e7f9e6":"markdown","4a532bfe":"markdown","ec389882":"markdown","915a4f03":"markdown","9dbb09c1":"markdown","a9aa9d63":"markdown","e28acc44":"markdown","1544a030":"markdown","c6d1a5e8":"markdown"},"source":{"00894c84":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport warnings\nwarnings.filterwarnings('ignore') \n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","8178cfcf":"median_house_hold_in_come=pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/MedianHouseholdIncome2015.csv\",encoding=\"windows-1252\")\npercentage_people_below_poverty_level=pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentagePeopleBelowPovertyLevel.csv\",encoding=\"windows-1252\")\npercent_over_25_completed_highSchool=pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PercentOver25CompletedHighSchool.csv\",encoding=\"windows-1252\")\nshare_race_city=pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/ShareRaceByCity.csv\",encoding=\"windows-1252\")\nkill=pd.read_csv(\"\/kaggle\/input\/fatal-police-shootings-in-the-us\/PoliceKillingsUS.csv\",encoding=\"windows-1252\")","6e726cc0":"percentage_people_below_poverty_level.head()","2afc0baf":"percentage_people_below_poverty_level.info()","cfe44576":"percentage_people_below_poverty_level.poverty_rate.value_counts()","d3152b61":"percentage_people_below_poverty_level[\"Geographic Area\"].unique()","857e8b61":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace(['-'],0.0,inplace = True)\npercentage_people_below_poverty_level.poverty_rate = percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list = list(percentage_people_below_poverty_level['Geographic Area'].unique())\narea_poverty_ratio = []\nfor i in area_list:\n    x = percentage_people_below_poverty_level[percentage_people_below_poverty_level['Geographic Area']==i]\n    area_poverty_rate = sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata = pd.DataFrame({'area_list': area_list,'area_poverty_ratio':area_poverty_ratio})\nnew_index = (data['area_poverty_ratio'].sort_values(ascending=False)).index.values\nsorted_data = data.reindex(new_index)\n\n# visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data['area_list'], y=sorted_data['area_poverty_ratio'])\nplt.xticks(rotation= 45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","d4ec13a8":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace([\"-\"],0.0,inplace=True)\npercentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list=percentage_people_below_poverty_level[\"Geographic Area\"].unique()\narea_poverty_ratio = []\nfor i in area_list:\n    x=percentage_people_below_poverty_level[percentage_people_below_poverty_level[\"Geographic Area\"]==i]\n    area_poverty_rate=sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata=pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\nnew_index=(data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)\n\n#Visualization:\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data[\"area_list\"],y=sorted_data[\"area_poverty_ratio\"])\nplt.xticks(rotation=45)\nplt.xlabel('States')\nplt.ylabel('Poverty Rate')\nplt.title('Poverty Rate Given States')","472c05fb":"# Poverty rate of each state\npercentage_people_below_poverty_level.poverty_rate.replace([\"-\"],0.0,inplace=True)\npercentage_people_below_poverty_level.poverty_rate=percentage_people_below_poverty_level.poverty_rate.astype(float)\narea_list=percentage_people_below_poverty_level[\"Geographic Area\"].unique()\narea_poverty_ratio = []\nfor i in area_list:\n    x=percentage_people_below_poverty_level[percentage_people_below_poverty_level[\"Geographic Area\"]==i]\n    area_poverty_rate=sum(x.poverty_rate)\/len(x)\n    area_poverty_ratio.append(area_poverty_rate)\ndata=pd.DataFrame({\"area_list\":area_list,\"area_poverty_ratio\":area_poverty_ratio})\nnew_index=(data[\"area_poverty_ratio\"].sort_values(ascending=False)).index.values\nsorted_data=data.reindex(new_index)\nsorted_data.head()","24237756":"kill.head()","a0ee1c31":"kill.name.value_counts()","293c4438":"seperate=kill.name[kill.name != \"TK TK\"].str.split()\na,b=zip(*seperate)\nname_list=a+b\nname_count=Counter(name_list)\nmost_common_names=name_count.most_common(15)\nx,y=zip(*most_common_names)\nx,y = list(x),list(y)\n\n#Visualization\nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Name or Surname of killed people')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Name or Surname of killed people')","ac98f812":"#split():\n\"mehmet apalan\".split()","7b86216f":"#a+b","0f02a5d7":"#Counter(name_list)  ","23f17a1f":"percent_over_25_completed_highSchool.head()","bf87e57b":"percent_over_25_completed_highSchool.info()","65a334c3":"percent_over_25_completed_highSchool.percent_completed_hs.value_counts()","6fbf37f5":"# High school graduation rate of the population that is older than 25 in states\npercent_over_25_completed_highSchool.percent_completed_hs.replace([\"-\"],0.0,inplace=True)\npercent_over_25_completed_highSchool.percent_completed_hs=percent_over_25_completed_highSchool.percent_completed_hs.astype(float)\narea_list=list(percent_over_25_completed_highSchool[\"Geographic Area\"].unique())\narea_highschool=[]\nfor i in area_list:\n    x=percent_over_25_completed_highSchool[percent_over_25_completed_highSchool[\"Geographic Area\"]==i]\n    area_highschool_rate=sum(x.percent_completed_hs)\/len(x)\n    area_highschool.append(area_highschool_rate)\n#Sorting\ndata=pd.DataFrame({\"area_list\":area_list,\"area_highschool_ratio\":area_highschool})\nnew_index=(data[\"area_highschool_ratio\"].sort_values(ascending=True)).index.values\nsorted_data2=data.reindex(new_index)\n#Visualization\nplt.figure(figsize=(15,10))\nsns.barplot(x=sorted_data2[\"area_list\"],y=sorted_data2[\"area_highschool_ratio\"])\nplt.xticks(rotation=90)\nplt.xlabel(\"States\")\nplt.ylabel(\"High School Graduate Rate\")\nplt.title(\"Percentage of Given State's Population Above 25 that Has Graduated High School\",color=\"r\")\nplt.grid(True)\nplt.show()","8fe20f24":"percent_over_25_completed_highSchool.head(5)","23bd9419":"share_race_city.head()","de612a26":"share_race_city.info()","0afe8e6f":"# Percentage of state's population according to races that are black,white,native american, asian and hispanic\nshare_race_city.replace(['-'],0.0,inplace = True)\nshare_race_city.replace(['(X)'],0.0,inplace = True)\nshare_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']] = share_race_city.loc[:,['share_white','share_black','share_native_american','share_asian','share_hispanic']].astype(float)\narea_list = list(share_race_city['Geographic area'].unique())\nshare_white = []\nshare_black = []\nshare_native_american = []\nshare_asian = []\nshare_hispanic = []\nfor i in area_list:\n    x=share_race_city[share_race_city[\"Geographic area\"]==i]\n    share_white.append(sum(x.share_white)\/len(x))\n    share_black.append(sum(x.share_black)\/len(x))\n    share_native_american.append(sum(x.share_native_american)\/len(x))\n    share_asian.append(sum(x.share_asian)\/len(x))\n    share_hispanic.append(sum(x.share_hispanic)\/len(x))\n#visualization\nf,ax=plt.subplots(figsize=(9,15))\nsns.barplot(x=share_white,y=area_list,color=\"y\",alpha = 0.5,label='White' )\nsns.barplot(x=share_black,y=area_list,color='k',alpha = 0.7,label='African American')\nsns.barplot(x=share_native_american,y=area_list,color='cyan',alpha = 0.6,label='Native American')\nsns.barplot(x=share_asian,y=area_list,color='b',alpha = 0.6,label='Asian')\nsns.barplot(x=share_hispanic,y=area_list,color='g',alpha = 0.6,label='Hispanic')\n\nax.legend(loc='lower right',frameon = True) #frameon=True diyerek sa\u011f alttaki legend\u0131n g\u00f6r\u00fcnmesini sa\u011flad\u0131k, false dersek arkas\u0131 saydam olur,sadece yaz\u0131lar olur.\nax.set(xlabel='Percentage of Races', ylabel='States',title = \"Percentage of State's Population According to Races \")","33ec852a":"sorted_data.head()","53ed87fe":"sorted_data2.head()","b55de071":"x=[1,2,3,4,5]\ny1=[1,2,3,4,5]\ny2=[1000,900,800,700,600]\nplt.plot(x,y1)\nplt.plot(x,y2)\nplt.show()","f8ab0f3f":"plt.plot(x,y1)","fa18ebfd":"# high school graduation rate vs Poverty rate of each state\nsorted_data[\"area_poverty_ratio\"]=sorted_data[\"area_poverty_ratio\"]\/max( sorted_data['area_poverty_ratio']) #normalization\nsorted_data2[\"area_highschool_ratio\"]=sorted_data2[\"area_highschool_ratio\"]\/max( sorted_data2['area_highschool_ratio']) #normalization\ndata2=pd.concat([sorted_data,sorted_data2[\"area_highschool_ratio\"]],axis=1) #columnlar\u0131 yan yana concat ediyoruz.\ndata2.sort_values('area_poverty_ratio',inplace=True) #4area_poverty_ratio'ya g\u00f6re s\u0131ral\u0131yoruz.\n\n#visualize\nf,ax1=plt.subplots(figsize=(20,10))\nsns.pointplot(x=\"area_list\",y=\"area_poverty_ratio\",data=data2,color=\"lime\",alpha=.8) #datam\u0131z\u0131 data e\u015fittir diyerek...\nsns.pointplot(x='area_list',y='area_highschool_ratio',data=data2,color='red',alpha=0.8) #...x y y oradan direkt \u00e7ekiyoruz.\nplt.text(40,0.6,'high school graduate ratio',color='red',fontsize=17,style=\"italic\") # metnin konumunu se\u00e7iyoruz.\nplt.text(40,0.55,'poverty ratio',color='lime',fontsize = 18,style = 'italic')\nplt.xlabel('States',fontsize = 15,color='blue')\nplt.ylabel('Values',fontsize = 15,color='blue')\nplt.title('High School Graduate  VS  Poverty Rate',fontsize = 20,color='blue')\nplt.grid()","42574b16":"data2.head()","a1e7c801":"data2.head()","89b88397":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# joint kernel density\n# pearsonr= if it is 1, there is positive correlation and if it is, -1 there is negative correlation.\n# If it is zero, there is no correlation between variables\n# Show the joint distribution using kernel density estimation \ng=sns.jointplot(data2.area_poverty_ratio, data2.area_highschool_ratio,kind=\"kde\",size=8)\nplt.savefig('graph.png')\nplt.show()","b0b942b4":"data2.head()","2b09f5fc":"# you can change parameters of joint plot\n# kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }\ng=sns.jointplot(\"area_poverty_ratio\", \"area_highschool_ratio\", data=data2,size=5, ratio=5, color=\"r\")","c9c1e8c0":"g=sns.jointplot(data2.area_poverty_ratio, data2.area_highschool_ratio,kind=\"reg\",size=4)\nplt.show()","c5197db7":"g=sns.jointplot(data2.area_poverty_ratio, data2.area_highschool_ratio,kind=\"scatter\",size=4)\nplt.show()","5179b132":"g=sns.jointplot(data2.area_poverty_ratio, data2.area_highschool_ratio,kind=\"resid\",size=4)\nplt.show()","507fbe57":"g=sns.jointplot(data2.area_poverty_ratio, data2.area_highschool_ratio,kind=\"hex\",size=4)\nplt.show()","cf918328":"kill.race.head(10)","eb71b152":"kill.race.value_counts()","3de2e32b":"# Race rates according in kill data \nkill.race.dropna(inplace=True) #i\u00e7i bo\u015f olanlar\u0131 \u00e7\u0131kard\u0131k\nlabels=kill.race.value_counts().index # w,b,h vs.yi index olarak ald\u0131k.\ncolors=[\"grey\",\"b\",\"r\",\"y\",\"g\",\"brown\"]\nexplode=[0,0,0,0,0,0] #burada piechartlaar\u0131n oran\u0131 olacak, sonradan doldurucaz.\nsizes=kill.race.value_counts().values\n# visual\nplt.figure(figsize=(7,7))\nplt.pie(sizes,labels=labels,explode=explode,colors=colors,autopct=\"%1.1f%%\") #autopct virg\u00fclden sonra ka\u00e7 basamak...\nplt.title('Killed People According to Races',color = 'blue',fontsize = 15)\nplt.show()","db61a7fc":"data2.head()","0bbe833e":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# lmplot \n# Show the results of a linear regression within each dataset\nsns.lmplot(x=\"area_poverty_ratio\",y=\"area_highschool_ratio\",data=data2)\nplt.grid()\nplt.show()","b949f6f1":"# Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\n# cubehelix plot\nsns.kdeplot(data2.area_poverty_ratio,data2.area_highschool_ratio,shade=True,cut=5)\nplt.show()","72ae3595":"#shade=False:\nsns.kdeplot(data2.area_poverty_ratio,data2.area_highschool_ratio,shade=False,cut=5)\nplt.show()","ec2e67b4":"#cut???\nsns.kdeplot(data2.area_poverty_ratio,data2.area_highschool_ratio,shade=True,cut=1)\nplt.show()","f8dc7903":"data2.head()","b038aa7c":"# Show each distribution with both violins and points\n# Use cubehelix to get a custom sequential palette\npal=sns.cubehelix_palette(2,rot=-.5,dark=.3)\nsns.violinplot(data=data2,palette=pal,inner=\"points\")\nplt.show()","c96101c1":"data2.corr()","f1fece61":"#correlation map\n#Visualization of high school graduation rate vs Poverty rate of each state with different style of seaborn code\nf,ax=plt.subplots(figsize=(5,5))\nsns.heatmap(data2.corr(),annot=True,linewidths=.5,linecolor=\"r\",fmt=\".1f\",ax=ax)\nplt.show()","933ec386":"kill.head()","689755a7":"kill.manner_of_death.unique()","fd5c7823":"# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\n# Plot the orbital period with horizontal boxes\nf,ax=plt.subplots(figsize=(12,8))\nsns.boxplot(x=\"gender\",y=\"age\",hue=\"manner_of_death\",data=kill,palette=\"PRGn\")\nplt.show()","9ab9b989":"kill.head()","87a3b0ea":"# swarm plot\n# manner of death(olum sekli) : ates edilerek, ates edilerek ve sok tabancasiyla\n# gender cinsiyet\n# age: yas\nf,ax=plt.subplots(figsize=(11,11))\nsns.swarmplot(x=\"gender\",y=\"age\",data=kill,hue=\"manner_of_death\")\nplt.show()","f4837001":"data.head()","63d9a1a8":"sns.pairplot(data)","0e1246bc":"kill.gender.value_counts()","d9288e6d":"kill.head()","875a2ffe":"# kill properties\n# Manner of death\nsns.countplot(kill.gender)\nplt.title(\"gender\",color = 'blue',fontsize=15)","99150bdc":"sns.countplot(kill.manner_of_death)","9489d333":"age25=[\"above25\" if i>25 else \"below25\" if i<25 else \"equal25\"for i in kill.age]\ndf=pd.DataFrame({\"age\":age25})\nsns.countplot(x=df.age)\nplt.ylabel('Number of Killed People')\nplt.title('Age of killed people',color=\"b\",fontsize=15)","a3bbae6f":"sns.countplot(data=kill,x=\"race\")\nplt.title('Race of killed people',color=\"b\",fontsize=15)","360f4a3b":"sns.countplot(kill.signs_of_mental_illness)\nplt.xlabel('Mental illness')\nplt.ylabel('Number of Mental illness')\nplt.title('Having mental illness or not',color = 'blue', fontsize = 15)","3d7c6aba":"sns.countplot(kill.threat_level)\nplt.xlabel('Threat Types')\nplt.title('Threat types',color = 'blue', fontsize = 15)","a76b6c1b":"sns.countplot(kill.flee)\nplt.xlabel('Flee Types')\nplt.title('Flee types',color = 'blue', fontsize = 15)","dbdf8203":"sns.countplot(kill.body_camera)\nplt.xlabel('Having Body Cameras')\nplt.title('Having body cameras or not on Police',color = 'blue',fontsize = 15)","15dcbcb7":"#1\narmed=kill.armed.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=armed[:7].index,y=armed[:7].values)\nplt.ylabel('Number of Weapon')\nplt.xlabel('Weapon Types')\nplt.title('Kill weapon',color = 'blue',fontsize=15)","89d79a7b":"#2\ncity=kill.city.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=city[:12].index,y=city[:12].values)\nplt.xticks(rotation=45)\nplt.title(\"Most dangerous cities\",color=\"r\",fontsize=15)","cc2f3102":"#3\nstate=kill.state.value_counts()\nplt.figure(figsize=(10,7))\nsns.barplot(x=state[:20].index,y=state[:20].values)\nplt.title('Most dangerous state',color = 'r',fontsize=15)","5c7d05e9":"#4\nstate2 = kill.state.value_counts().index[:10]\nplt.figure(figsize=(10,7))\nsns.barplot(x=state2,y = kill.state.value_counts().values[:10])\nplt.title('Kill Numbers from States',color = 'blue',fontsize=15)","7414f5f4":"*Burada figure\u00fcm\u00fcz\u00fc, title\u0131,yaz\u0131lar\u0131 vs.yi matplot librarysi ile \u00e7izdiriyorum ama i\u00e7indeki grafi\u011fi seaborn ile \u00e7izdiriyorum*","90ea10d2":"* data=data2 diyerek data2 i\u00e7indeki say\u0131sal de\u011ferleri direkt olarak al\u0131p \u00e7izdirmesini sa\u011flad\u0131k.\n* inner... diyerek i\u00e7ine de\u011ferleri nokta nokta \u00e7izmesini sa\u011flad\u0131k.\n* palette i\u00e7indeki 2 artarsa renk koyulu\u011fu azal\u0131r.","ae2ca091":"<a id=\"1\"><\/a><br>\n# Introduction","86ce68de":"<a id=\"7\"><\/a><br>\n# Kde Plot(kernel density estimation plot)","91f4cac7":"<a id=\"12\"><\/a><br>\n# Pair Plot","f9a4311e":"<a id=\"10\"><\/a><br>\n# Box Plot","07294e7f":"<a id=\"2\"><\/a><br>\n# Bar Plot","8721de9c":"* [1,2,3,4,5] ve [1000,900,800,700,600] \u015feklinde iki listemiz var ve bunlar\u0131 ayn\u0131 plotta \u00e7izdirmek istiyoruz ama o zamanda grafik \u00fcstteki gibi orant\u0131s\u0131z oluyor. bunun i\u00e7in normalize etme kullan\u0131r\u0131z. bunu ilerde g\u00f6r\u00fccez ama normalize etmek,datadaki her eleman\u0131 max elemana b\u00f6lmek gibi d\u00fc\u015f\u00fcn\u00fclebilir:\n* 0<[1,2,3,4,5]\/5<1\n* 0<[1000,900,800,700,600]\/1000<1","da8a4c20":"<a id=\"4\"><\/a><br>\n# Joint Plot","c3a764b5":"<a id=\"13\"><\/a><br>\n# Count Plot","47e805df":"1. [Introduction](#1)\n1. [Bar Plot](#2)\n1. [Point Plot](#3)\n1. [Joint Plot](#4)\n1. [Pie Chart](#5)\n1. [Lm Plot](#6)\n1. [Kde Plot](#7)\n1. [Violin Plot](#8)\n1. [Heat Map](#9)\n1. [Box Plot](#10)\n1. [Swarm Plot](#11)\n1. [Pair Plot](#12)\n1. [Count Plot](#13)\n1. [Bar Plot Extra Examples](#14)","ac8c6708":"<a id=\"14\"><\/a><br>\n# Bar Plot Extra Examples","bb858aff":"> Swarm Plot bilgisayar\u0131 \u00e7ok yorar ama \u00e7ok kullan\u0131\u015fl\u0131d\u0131r.","1ea1465b":"<a id=\"9\"><\/a><br>\n# Heat Map","f406b6c7":"> cut de\u011feri k\u00fc\u00e7\u00fcl\u00fcr ise plotun i\u00e7indeki \u015fekil b\u00fcy\u00fcr.","22e0d326":"* TK TK diye isim olmaz,bunlar\u0131 alm\u0131yoruz.\n* ilk sat\u0131rda ismi TK TK olmayablar\u0131 ald\u0131k.nokta str diyerek string yapt\u0131k.split ile de isim ve soyisim olarak ay\u0131rd\u0131k.\n* 2de bunlar\u0131 a ve b diyerek ay\u0131rd\u0131k.\n* 3te tekrar birle\u015ftirdik ama farkl\u0131, tuple olarak eklemi\u015f olduk.\n* 5te most_common metodunu da kullanarak en yayg\u0131n 15 ismi ald\u0131k.\n* visualizationda palette = sns.cubehelix_palette(len(x)) diyerek bir renk paleti ald\u0131k ve bunu toplam veri say\u0131m\u0131za g\u00f6re boyamas\u0131n\u0131 istedik.\n","78e7f9e6":"* E\u011fer grafikteki sa\u011f \u00fcstteki pearso de\u011feri 1e yak\u0131nsa positive corr,yani do\u011fru orant\u0131;neagtif ise ters. 0'sa yok.\n* kind=\"kde\" dersek grafi\u011fin \u00fcst ve sa\u011f\u0131ndaki pdf da\u011f\u0131l\u0131m \u015fekli ilkindeki gibi olur, yoksa histogram olur.\n* ratio'yu ne kadar b\u00fcy\u00fct\u00fcrsek grafi\u011fin \u00fcst ve sa\u011f\u0131ndaki pdf da\u011f\u0131l\u0131m \u015fekli o kadar k\u00fc\u00e7\u00fcl\u00fcr.\n* Bu sefer i\u00e7ine size diyerek direkt olarak plotun b\u00fcy\u00fckl\u00fc\u011f\u00fcn\u00fc ayarlayabiliriz.\n* kind i\u00e7i kullanabilece\u011fimiz t\u00fcm t\u00fcrler \u015funlard\u0131r: kind : { \u201cscatter\u201d | \u201creg\u201d | \u201cresid\u201d | \u201ckde\u201d | \u201chex\u201d }","4a532bfe":"> burada x ve y1 sanki d\u00fcz yatay \u00e7izgi gibi g\u00f6r\u00fcn\u00fcyor ama asl\u0131nda do\u011fru orant\u0131l\u0131.","ec389882":"<a id=\"8\"><\/a><br>\n# Violin Plot","915a4f03":"<a id=\"5\"><\/a><br>\n# Pie Chart","9dbb09c1":"**Poverty rate of each state**\n* 1. sat\u0131r:  datadaki poverty_rate teki - leri 0 ile de\u011fi\u015ftirdik ve inplace ile bunu kaydettik.\n* 2. sat\u0131r:  poverty_rate string, bu i\u015fimize yaramaz. o nedenle floata \u00e7evirdik. \u00e7\u00fcnk\u00fc say\u0131lar i\u015fimize yarar.\n* 5. sat\u0131r:  e\u011fer ilk 3 sat\u0131ra g\u00f6re direkt boxplot \u00e7izdirirsek bize yukar\u0131daki arrayin i\u00e7indeki s\u0131rada verir ama biz \u00e7oktan aza do\u011fru \u00e7izdirmesini istiyoruz. o nedenle bunlar\u0131 ekleyece\u011fiz:\n* 6. sat\u0131r:  Filtreleme yapt\u0131k: Geographic Area column\u0131ndaki i i\u00e7eren h\u00fccreleri ald\u0131k,bunu dataframein i\u00e7ine al\u0131p x de\u011fi\u015fkenine atad\u0131k.\n* 7. sat\u0131r:  x teki herbir h\u00fccrenin poverty rate columnlar\u0131ndaki de\u011feri al\u0131p toplad\u0131k ve sonra x toplam ka\u00e7 h\u00fccreden olu\u015fuyorsa ona b\u00f6ld\u00fck.\n* 8. sat\u0131r:  bu rateleri listeye ekledik.\n* 10. sat\u0131r: ascending=False diyerek azalan s\u0131rada s\u0131ralad\u0131k. nokta index diyerek indexleri ald\u0131k ama array olur. biz de values diyerek de\u011ferlerini al\u0131yoruz. ayr\u0131ca, values demesek de \u00e7al\u0131\u015f\u0131r ama diyince numpy'a \u00e7evirir.\n\n**Visualization**\n* 1. sat\u0131r: b\u00fcy\u00fckl\u00fc\u011f\u00fc ayarlad\u0131k.\n* 2. sat\u0131r: x eksenine eyaletleri, y ye oranlar\u0131 yazd\u0131rd\u0131k.\n* 3. sat\u0131r: x eksenindeki eyalet isimlerini 45 derece e\u011fik yazd\u0131k.","a9aa9d63":"<a id=\"3\"><\/a><br>\n# Point Plot","e28acc44":"<a id=\"6\"><\/a><br>\n# Lm Plot","1544a030":"* linewidth(lw) ile kareler aras\u0131ndaki \u00e7izginin kal\u0131nl\u0131\u011f\u0131n\u0131, linecolor ile bu \u00e7izginin rengini belirledik.\n* annot=True diyerek karelerin i\u00e7ini yaz\u0131 ile doldurduk, false olursa yada yazmazsak kareler i\u00e7inin bo\u015f b\u0131rak\u0131r.\n* ax=ax diyerek bu plotu \u00fcst\u00fcndeki koddaki figure'e yerle\u015ftirir.\n* fmt ile virg\u00fclden sonra ka\u00e7 basamak olaca\u011f\u0131n\u0131 yazd\u0131k.","c6d1a5e8":"<a id=\"11\"><\/a><br>\n# Swarm Plot"}}