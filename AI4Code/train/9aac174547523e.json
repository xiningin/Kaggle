{"cell_type":{"3d54ffeb":"code","baa02505":"code","1b225825":"code","ae91e4fd":"code","3503c0cd":"code","f8ecc25f":"code","db0ba070":"code","ec640f09":"code","85656dd5":"code","fb151eca":"code","8dc2f5bc":"code","dabbefbf":"code","f86a5735":"code","6c1d94ea":"code","6ed64f61":"code","138b623c":"code","d9fe572e":"code","4986df58":"code","b26b8f1b":"code","7de19604":"code","d7398a44":"code","1fbd4d8f":"code","2ba89042":"code","f5a261df":"code","57f12407":"code","3b0d368b":"code","61e1ee5c":"code","f9eaf2f9":"code","fe15b0cf":"code","3dcaf8e1":"code","3168875d":"code","ca329c47":"code","8b8734ef":"code","39902122":"code","9c46e8fd":"code","9f5caf8b":"code","a87daf37":"code","7da8a161":"code","938cc721":"code","c497d4bc":"code","2a3d5a52":"code","084fc5ca":"code","d095d79a":"code","a8dc2bc8":"code","dd2dd546":"code","06eab6bf":"code","2f258f4d":"code","334d7cc7":"code","9e63f26f":"code","330b34f5":"code","058afda2":"markdown","a6dbf466":"markdown","ef5b6017":"markdown","ce88a095":"markdown","74cc68d3":"markdown","46782b13":"markdown","85462254":"markdown","9c5481b7":"markdown","cbfc2d8b":"markdown","0d7ba890":"markdown","9289628b":"markdown"},"source":{"3d54ffeb":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","baa02505":"Train= pd.read_csv('..\/input\/titanic\/train.csv')\nTest= pd.read_csv('..\/input\/titanic\/test.csv')","1b225825":"Train.head()","ae91e4fd":"Train.info()","3503c0cd":"Train.shape","f8ecc25f":"Train.describe()","db0ba070":"Train['Survived'].value_counts()","ec640f09":"sns.countplot(data=Train, x='Survived')","85656dd5":"sns.boxplot(data=Train, x='Survived', y='Age')","fb151eca":"sns.scatterplot(data=Train, x='Age', y='Sex', hue='Survived')","8dc2f5bc":"sns.pairplot(Train, hue='Survived')","dabbefbf":"sns.heatmap(Train.corr(), annot=True, cmap=\"BuPu\")","f86a5735":"Train.head()","6c1d94ea":"Train= Train.drop('Name', axis=1)","6ed64f61":"(Train.isnull().sum()\/len (Train))*100","138b623c":"def missing_percent (Train):\n    nan_percent= (Train.isnull().sum()\/len (Train))*100\n    nan_percent= nan_percent[nan_percent>0].sort_values()\n    return nan_percent","d9fe572e":"nan_percent= missing_percent(Train)","4986df58":"nan_percent","b26b8f1b":"plt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)","7de19604":"plt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0, 1)","d7398a44":"Train[Train['Embarked'].isnull()]","1fbd4d8f":"Train= Train.dropna(subset=['Embarked'], axis=0)","2ba89042":"nan_percent= missing_percent(Train)\n\nplt.figure(figsize=(12, 6))\nsns.barplot(x= nan_percent.index, y= nan_percent)\nplt.xticks(rotation=90)\nplt.ylim(0, 1)","f5a261df":"Train[\"Age\"].fillna(Train[\"Age\"].mean(), inplace = True)","57f12407":"Train.drop(\"Cabin\", axis = 1, inplace = True)","3b0d368b":"Train['Sex']= Train['Sex'].replace('male', 0)\nTrain['Sex']= Train['Sex'].replace('female', 1)","61e1ee5c":"Train.drop(['PassengerId', 'Fare', 'Ticket','Embarked'], axis = 1, inplace = True)","f9eaf2f9":"Train.isnull().sum()","fe15b0cf":"X= Train.drop('Survived',axis=1)\ny= Train['Survived']","3dcaf8e1":"from sklearn.model_selection import train_test_split","3168875d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","ca329c47":"from sklearn.tree import DecisionTreeClassifier","8b8734ef":"model= DecisionTreeClassifier()","39902122":"model.fit(X_train, y_train)","9c46e8fd":"y_pred = model.predict(X_test)","9f5caf8b":"from sklearn.metrics import confusion_matrix, classification_report","a87daf37":"confusion_matrix(y_test, y_pred)","7da8a161":"print(classification_report(y_test, y_pred))","938cc721":"model.feature_importances_","c497d4bc":"pd.DataFrame(index=X.columns, data=model.feature_importances_)","2a3d5a52":"from sklearn.tree import plot_tree","084fc5ca":"plt.figure(figsize=(12,8))\nplot_tree(model, filled=True, feature_names= X.columns);","d095d79a":"def report_model(model):\n    model_preds = model.predict(X_test)\n    print(classification_report(y_test,model_preds))\n    print('\\n')\n    plt.figure(figsize=(12,8),dpi=150)\n    plot_tree(model,filled=True,feature_names=X.columns);","a8dc2bc8":"help(DecisionTreeClassifier)","dd2dd546":"pruned_tree = DecisionTreeClassifier(max_depth=2)\npruned_tree.fit(X_train,y_train)","06eab6bf":"report_model(pruned_tree)","2f258f4d":"pruned_tree= DecisionTreeClassifier(max_leaf_nodes=3)\npruned_tree.fit(X_train, y_train)","334d7cc7":"report_model(pruned_tree)","9e63f26f":"pruned_tree= DecisionTreeClassifier(criterion='entropy')\npruned_tree.fit(X_train, y_train)","330b34f5":"report_model(pruned_tree)","058afda2":"# **EVALUATING THE MODEL**","a6dbf466":"# **IMPORT LIBRARIES**","ef5b6017":"# **IMPORT DATASET**","ce88a095":"# **DATA PREPARATION**","74cc68d3":"# **TRAIN & TEST**","46782b13":"# **DATA OVERVIEW**","85462254":"# **EDA**","9c5481b7":"# **TRAIN THE MODEL**","cbfc2d8b":"# **PREDICTING TEST DATA**","0d7ba890":"# **FEATURE & LABEL**","9289628b":"# **VISUALIZING THE TREE**"}}