{"cell_type":{"2833117f":"code","17b6110c":"code","dcc5f030":"code","e7eb8a34":"code","87163f78":"code","04fef6e6":"code","cc2c39fc":"code","375f1d24":"code","69a43222":"code","f999f6cf":"code","cfd7950a":"code","9f812405":"code","3c04b3fd":"code","7edcea37":"code","d4a9335e":"code","6de941f1":"code","b273b5b6":"code","4aee8f01":"code","e01a049e":"code","2a66f314":"code","3906631a":"code","28f6125a":"code","545b7ae5":"code","17b26382":"code","b572f44a":"code","bf56bd48":"code","a556f13a":"code","3e090eef":"markdown","43f222a4":"markdown","47ccb267":"markdown","6221912f":"markdown","2eb075f6":"markdown","bcbbe23c":"markdown","ef60124b":"markdown","35f4f527":"markdown","ad6f8171":"markdown","1924860d":"markdown","a46b7d76":"markdown","ed11dcf3":"markdown"},"source":{"2833117f":"import pandas as pd\nimport numpy as np\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nfrom plotly.subplots import make_subplots\nfrom sklearn.cluster import KMeans\nfrom PIL import Image\nfrom sklearn.utils import shuffle\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler","17b6110c":"credit = pd.read_csv(\"\/kaggle\/input\/german-credit-card\/Credit.csv\")\ncredit.head()","dcc5f030":"credit.shape","e7eb8a34":"credit.isna().sum()","87163f78":"credit.nunique()","04fef6e6":"fig = make_subplots(rows=6, cols=3)\nfig.add_trace(go.Histogram(x=credit['Default'], name='Default'), row=1, col=1)\nfig.add_trace(go.Histogram(x=credit['checkingstatus1'], name='Checking Status'), row=1, col=2)\nfig.add_trace(go.Histogram(x=credit['duration'], name='Duration'), row=1, col=3)\nfig.add_trace(go.Histogram(x=credit['history'], name='History'), row=2, col=1)\nfig.add_trace(go.Histogram(x=credit['purpose'], name='Purpose'), row=2, col=2)\nfig.add_trace(go.Histogram(x=credit['amount'], name='Amount'), row=2, col=3)\nfig.add_trace(go.Histogram(x=credit['savings'], name='Savings'), row=3, col=1)\nfig.add_trace(go.Histogram(x=credit['employ'], name='Employment'), row=3, col=2)\nfig.add_trace(go.Histogram(x=credit['installment'], name='Installment'), row=3, col=3)\nfig.add_trace(go.Histogram(x=credit['sex'], name='sex'), row=4, col=1)\nfig.add_trace(go.Histogram(x=credit['residence'], name='residence'), row=4, col=2)\nfig.add_trace(go.Histogram(x=credit['age'], name='age'), row=4, col=3)\nfig.add_trace(go.Histogram(x=credit['housing'], name='housing'), row=5, col=1)\nfig.add_trace(go.Histogram(x=credit['cards'], name='cards'), row=5, col=2)\nfig.add_trace(go.Histogram(x=credit['liable'], name='liable'), row=5, col=3)\nfig.add_trace(go.Histogram(x=credit['tele'], name='tele'), row=6, col=1)\nfig.add_trace(go.Histogram(x=credit['foreign'], name='foreign'), row=6, col=2)\nfig.show()","cc2c39fc":"data = credit.copy()\ndata","375f1d24":"\ndata['checkingstatus1'] = data['checkingstatus1'].map({\n    \"<DM0\":0, \n    \"DM0-200\":1, \n    \"NoAccount\":2,\n    \"DM200+\":3  \n})\n\ndata['history'] = data['history'].map({\n    \"terrible\":0, \n    \"poor\":1, \n    \"good\":2 \n})\n\ndata['purpose'] = data['purpose'].map({\n    \"goods\/repair\":0, \n    \"edu\":1, \n    \"newcar\":2,\n    \"usedcar\":3 ,\n    \"biz\":4\n})\n\ndata['savings'] = data['savings'].map({\n    \"DM0-100\":0, \n    \"DM100-1000\":1, \n    \"DM1000+\":2 \n})\n\ndata['employ'] = data['employ'].map({\n    \"7+years\":0, \n    \"1-7years\":1, \n    \"unemployed\":2,\n    \"0-1year\":3\n})\n\ndata['sex'] = data['sex'].map({\n    \"male\":0,\n    \"female\":1\n})\n\ndata['housing'] = data['housing'].map({\n    \"own\":0,\n    \"forfree\":1,\n    \"rent\":2\n})\n\ndata['tele'] = data['tele'].map({\n    \"yes\":0,\n    \"no\":1\n})\n\ndata['foreign'] = data['foreign'].map({\n    \"foreign\":0,\n    \"german\":1\n})","69a43222":"data","f999f6cf":"bad_predictors = ['Unnamed: 0', 'Default']\ndata.drop(bad_predictors, axis=1, inplace=True)\ndata","cfd7950a":"minmax_scaler = MinMaxScaler(feature_range=(0,4))\ndata['duration'] = minmax_scaler.fit_transform(data[['duration']])\ndata['amount'] = minmax_scaler.fit_transform(data[['amount']])\ndata['age'] = minmax_scaler.fit_transform(data[['age']])","9f812405":"data","3c04b3fd":"fig = px.imshow(data.corr())\nfig.show()","7edcea37":"kmeans = KMeans(n_clusters=2, random_state=0).fit(data)","d4a9335e":"centroids = kmeans.cluster_centers_\ncentroids","6de941f1":"data","b273b5b6":"clusters = pd.DataFrame(\n    data = centroids,\n    columns = data.columns,\n    index = ['Cluster 1', 'Cluster 2']\n)\nclusters","4aee8f01":"from sklearn.decomposition import PCA\n\npca = PCA(n_components=2).fit(data)\n\nX_pca = pca.fit_transform(data)\n","e01a049e":"centroids_pca = pca.fit_transform(centroids)\ncentroids_pca","2a66f314":"pd.set_option('display.float_format', lambda x: '%.3f' % x)\ndata_pca = pd.DataFrame(\n    data = pca.components_,\n    columns = data.columns,\n    index = ['PC1', 'PC2']\n)\ndata_pca\n","3906631a":"fig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=X_pca[:,0],\n    y=X_pca[:,1],\n    mode='markers',\n    name='data',\n    marker=dict(color=kmeans.predict(data))\n))\n\nfig.add_trace(go.Scatter(\n    x=centroids_pca.T[0],\n    y=centroids_pca.T[1],\n    mode='markers',\n    name='centroids'\n))\nfig.show()","28f6125a":"img = Image.open(\"\/kaggle\/input\/minion\/minion.jpg\")\narr = np.array(img)\nprint(arr.shape)","545b7ae5":"plt.imshow(arr)","17b26382":"fig = px.imshow(arr)\nfig.show()\n","b572f44a":"img_data = np.array(arr, dtype=np.float64) \/ 255\nw, h, d = original_shape = tuple(img_data.shape)\nassert d == 3\nimage_array = np.reshape(img_data, (w * h, d))","bf56bd48":"def recreate_image(codebook, labels, w, h):\n    \"\"\"Recreate the (compressed) image from the code book & labels\"\"\"\n    d = codebook.shape[1]\n    image = np.zeros((w, h, d))\n    label_idx = 0\n    for i in range(w):\n        for j in range(h):\n            image[i][j] = codebook[labels[label_idx]]\n            label_idx += 1\n    return image","a556f13a":"n_colors = 4\nimage_array_sample = shuffle(image_array, random_state=0)[:1000]\nkmeans = KMeans(n_clusters=n_colors, random_state=0).fit(image_array_sample)\nlabels = kmeans.predict(image_array)\n\n\nplt.figure(1)\nplt.clf()\nplt.axis('off')\nplt.title('Original image')\nplt.imshow(arr)\n\nplt.figure(2)\nplt.clf()\nplt.axis('off')\nplt.title('Quantized image (4 colors, K-Means)')\nplt.imshow(recreate_image(kmeans.cluster_centers_, labels, w, h))","3e090eef":"Se pueden cambiar a categor\u00edas num\u00e9ricas los siguientes features: checkingstatus1, history, purpose, savings, employ, sex, housingk, tele, foreign","43f222a4":"Trabajamos con una copia, para no modificar los datos originales, y mapeamos las categorias","47ccb267":"## 3. Explique cuales son las caracter\u00edsticas y su importancia para cada cl\u00faster ","6221912f":"Escog\u00ed K=2 porque necesito que me ayude a tomar una decisi\u00f3n Si o No en cuanto a otorgar un prestamo. Un centroide representaria el Si y el otro el No","2eb075f6":"## Cargar datos","bcbbe23c":"Basado en el ejemplo de:\nhttps:\/\/scikit-learn.org\/stable\/auto_examples\/cluster\/plot_color_quantization.html","ef60124b":"## Ejercicio Opcional\n\nReduzca la cantidad de colores en una im\u00e1gen usando K Means (Color Quantization)","35f4f527":"No existen nulos","ad6f8171":"### Valores \u00fanicos, para determinar categorias","1924860d":"## 2. Escoga un valor de k y ajuste un modelo de k means, explique porque escogi\u00f3 ese valor","a46b7d76":"## 1. Analice y limpie los datos","ed11dcf3":"## 4. Grafique los cl\u00fasters utilizando PCA"}}