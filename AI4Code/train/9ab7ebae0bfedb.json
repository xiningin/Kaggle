{"cell_type":{"583acf07":"code","49aa8ddb":"code","0c714150":"code","039df62b":"code","ce136a11":"code","3837871d":"code","dbbda269":"code","f2278215":"code","6c901ef4":"code","fe6eb4fb":"code","b72cc694":"markdown","eb1e04b2":"markdown"},"source":{"583acf07":"import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nfrom lightgbm import LGBMClassifier\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.simplefilter('ignore')","49aa8ddb":"base_path = \"..\/input\/data-science-spring-osaka-2021\"\ndf_train = pd.read_csv(\"..\/input\/data-science-spring-osaka-2021\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/data-science-spring-osaka-2021\/test.csv\")\ndf_action = pd.read_csv(\"..\/input\/data-science-spring-osaka-2021\/actions.csv\")","0c714150":"sns.countplot(y=\"action_seq\", data=df_train)","039df62b":"def outlier_iqr(df):\n\n    for i in range(len(df.columns)):\n\n        # \u5217\u3092\u62bd\u51fa\u3059\u308b\n        col = df.iloc[:,i]\n\n        # \u56db\u5206\u4f4d\u6570\n        q1 = col.describe()['25%']\n        q3 = col.describe()['75%']\n        iqr = q3 - q1 #\u56db\u5206\u4f4d\u7bc4\u56f2\n\n        # \u5916\u308c\u5024\u306e\u57fa\u6e96\u70b9\n        outlier_min = q1 - (iqr) * 1.5\n#         outlier_max = q3 + (iqr) * 3.0\n\n        # \u7bc4\u56f2\u304b\u3089\u5916\u308c\u3066\u3044\u308b\u5024\u3092\u9664\u304f\n        col[col < outlier_min] = None\n#         col[col > outlier_max] = None\n\n    return df","ce136a11":"train_action = np.sort(df_train[\"action_seq\"].unique())","3837871d":"color = [\"blue\",\"green\",\"red\",\"black\",\"m\"]# \u5404\u30d7\u30ed\u30c3\u30c8\u306e\u8272\nfor label in train_action:\n    file_paths = df_train[df_train[\"action_seq\"] == label][\"file_path\"]\n    fig, ax = plt.subplots()\n    ax.set_xlabel('time')  # x\u8ef8\u30e9\u30d9\u30eb\n    ax.set_title(label) # \u30b0\u30e9\u30d5\u30bf\u30a4\u30c8\u30eb\n    for i,file_path in enumerate(file_paths):\n        if 3 >= i:\n            df_temp = pd.read_csv(base_path + file_path)\n#             scaler = MinMaxScaler()\n#             df_temp.iloc[:] = scaler.fit_transform(df_temp)\n            ax.plot(df_temp[\"Time\"], df_temp[\"ELBOW_R\"], color=color[i],label=\"row\")\n    plt.legend()     \n    plt.show()","dbbda269":"\ncolor = [\"blue\",\"green\",\"red\",\"black\",\"m\"]# \u5404\u30d7\u30ed\u30c3\u30c8\u306e\u8272\nfor label in train_action:\n    file_paths = df_train[df_train[\"action_seq\"] == label][\"file_path\"]\n    fig, ax = plt.subplots()\n    ax.set_xlabel('time')  # x\u8ef8\u30e9\u30d9\u30eb\n    ax.set_title(label) # \u30b0\u30e9\u30d5\u30bf\u30a4\u30c8\u30eb\n    for i,file_path in enumerate(file_paths):\n        if 3 >= i:\n            df_temp = pd.read_csv(base_path + file_path)\n            scaler = MinMaxScaler()\n#             df_temp1 = outlier_iqr(df_temp.copy())\n#             df_temp1 = df_temp1.dropna(how='any', axis=0)\n            df_temp.iloc[:] = scaler.fit_transform(df_temp)\n#             df_temp1.iloc[:] = scaler.fit_transform(df_temp1)\n            ax.plot(df_temp[\"Time\"], df_temp[\"ELBOW_R\"], color=color[i],label=\"row\")\n#             ax.plot(df_temp1[\"Time\"], df_temp1[\"ELBOW_R\"], color=color[i],label=\"filtter\",linestyle = \"dashdot\")\n    plt.legend()     \n    plt.show()","f2278215":"for label in train_action:\n    file_paths = df_train[df_train[\"action_seq\"] == label][\"file_path\"]\n    fig, ax = plt.subplots()\n    ax.set_xlabel('time')  # x\u8ef8\u30e9\u30d9\u30eb\n    ax.set_title(label) # \u30b0\u30e9\u30d5\u30bf\u30a4\u30c8\u30eb\n    for i,file_path in enumerate(file_paths):\n        if 3 >= i:\n            df_temp = pd.read_csv(base_path + file_path)\n            ax.plot(df_temp[\"Time\"], df_temp[\"ACCEL_X\"], color=color[i],label=\"row\")\n    plt.legend()     \n    plt.show()","6c901ef4":"for label in train_action:\n    file_paths = df_train[df_train[\"action_seq\"] == label][\"file_path\"]\n    fig, ax = plt.subplots()\n    ax.set_xlabel('time')  # x\u8ef8\u30e9\u30d9\u30eb\n    ax.set_title(label) # \u30b0\u30e9\u30d5\u30bf\u30a4\u30c8\u30eb\n    for i,file_path in enumerate(file_paths):\n        if 3 >= i:\n            df_temp = pd.read_csv(base_path + file_path)\n            ax.plot(df_temp[\"Time\"], df_temp[\"ACCEL_Y\"], color=color[i],label=\"row\")\n            print(\"mean:\",df_temp[\"ACCEL_Y\"].mean())\n    plt.legend()     \n    plt.show()","fe6eb4fb":"for label in train_action:\n    file_paths = df_train[df_train[\"action_seq\"] == label][\"file_path\"]\n    fig, ax = plt.subplots()\n    ax.set_xlabel('time')  # x\u8ef8\u30e9\u30d9\u30eb\n    ax.set_title(label) # \u30b0\u30e9\u30d5\u30bf\u30a4\u30c8\u30eb\n    for i,file_path in enumerate(file_paths):\n        if 3 >= i:\n            df_temp = pd.read_csv(base_path + file_path)\n            ax.plot(df_temp[\"Time\"], df_temp[\"ACCEL_Z\"], color=color[i],label=\"row\")\n            print(\"mean:\",df_temp[\"ACCEL_Z\"].mean())\n    plt.legend()     \n    plt.show()","b72cc694":"\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306e\u8ef8\u65b9\u5411\u306e\u78ba\u8a8d\u3092\u884c\u3046\uff0e\n\n\u304a\u305d\u3089\u304f\uff0c9.8m\/s\u4ed8\u8fd1\u3067\u63a8\u79fb\u3057\u3066\u3044\u308b\u8ef8\u304c\u3042\u308b\u306f\u305a\n","eb1e04b2":"\u5916\u308c\u5024\u304c\u3042\u308b\u306e\u3067\u5916\u308c\u5024\u306e\u51e6\u7406\u3092\u3059\u308b\n\n\u95a2\u6570\u306f\u4ee5\u4e0b\u3092\u4f7f\u7528\n\nhttps:\/\/qiita.com\/trami\/items\/b501abe7667e55ab2c9f"}}