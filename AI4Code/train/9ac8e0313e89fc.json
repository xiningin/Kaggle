{"cell_type":{"5ad0436f":"code","7bd4f541":"code","277c45a3":"code","e5941e8d":"code","549d715e":"code","2ff3fd48":"code","4aa60409":"code","26306f62":"code","5324fc19":"code","57d1fddc":"code","880d2802":"code","904a85c6":"code","62ddd2c8":"code","d12357f5":"code","19194e34":"code","6085fe4b":"code","ed3b0863":"code","62b5d863":"code","d6dbd660":"code","44611024":"code","2246da88":"code","96a6ba84":"markdown","4cfa618b":"markdown","f437ccc1":"markdown"},"source":{"5ad0436f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7bd4f541":"train = pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\nsubmission = pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')","277c45a3":"print(train.shape)\nprint(test.shape)","e5941e8d":"train.head(10)","549d715e":"test.head(10)","2ff3fd48":"plt.figure(figsize=(10,8))\nsns.set(style=\"whitegrid\")\nsns.countplot(train['label'], linewidth=1.25, edgecolor=sns.color_palette('magma'), palette='Pastel2')\nplt.xlabel('Count of target column');\n\ntrain['label'].value_counts()","4aa60409":"train.isnull().any().describe()","26306f62":"test.isnull().any().describe()","5324fc19":"# Seperating the target column and features column\nx = train.drop(['label'], axis=1).values\ny = train.label.values","57d1fddc":"# Splitting the data in to test & train to make our model learn.\ntrain_x, test_x, train_y, test_y = train_test_split(x,y, test_size=0.2, random_state=42)\ntrain_x.shape, test_x.shape, train_y.shape, test_y.shape","880d2802":"feature_scale = StandardScaler()\ntrain_x = feature_scale.fit_transform(train_x)\ntest_x = feature_scale.transform(test_x)","904a85c6":"# Scaling test data set as well\nscale_test_data = feature_scale.fit_transform(test)","62ddd2c8":"# Finding out the image at a particular index\nplt.figure(figsize=(8,6))\nindex=5\nprint(\"Label: \" + str(train_y[index]))\nplt.imshow(train_x[index].reshape((28,28)),cmap='gray')\nplt.show()","d12357f5":"rf = RandomForestClassifier(n_estimators=50, criterion='entropy', max_depth=10, random_state=42)\nrf.fit(train_x, train_y)","19194e34":"#predict value of label using classifier\nprediction= rf.predict(test_x)","6085fe4b":"print('Random Forest training accuracy: ', rf.score(train_x, train_y))\nprint('Random Forest test accuracy: ' + str(accuracy_score(test_y,prediction)))","ed3b0863":"# Confusion Matrix for Random Forest\n\nplt.figure(figsize=(15,10))\nsns.set(font_scale=1.3)\nsns.heatmap(confusion_matrix(test_y,prediction), annot = True, fmt = '.0f', cmap = 'Oranges_r')\nplt.xlabel('Predicted Values')\nplt.ylabel('Actual Values')\nplt.title('Random Forest Confusion Matrix\\n\\n')\nplt.show()","62b5d863":"#predict test data\nprediction_test = rf.predict(scale_test_data)","d6dbd660":"submission['Label'] = prediction_test","44611024":"submission.head(6)","2246da88":"submission.to_csv(\"Submission-khushboo.csv\", index=False)","96a6ba84":"### So are labels are total 10 numbers i.e; that hand written numbers are from 0 -9. The above mentioned code tells us the count of each number present in the data set","4cfa618b":"### It is important to do feature sclaing for this data set as well as we have integers from 0-255 (the pixel values) & they are not on the same scale. ","f437ccc1":"### Luckily there are no nulls in the data set."}}