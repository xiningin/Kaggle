{"cell_type":{"3abe93a9":"code","44d29c88":"code","c40b1725":"code","aa337b20":"code","55cbd3e5":"code","3eaf3569":"code","4f687fdc":"code","e7fbbf15":"code","da2e3e16":"code","71106a10":"code","dc6f7037":"code","1896ecb8":"code","c15ecaf0":"code","6465f10f":"code","ba0c08ce":"code","e5c9731d":"code","823fb6d4":"code","19e76a34":"code","cb46284a":"code","4e9c715e":"code","47bbff51":"code","7622d5be":"code","36cf153b":"code","5c4e96e3":"code","3978ab73":"code","4c491935":"code","8da105eb":"code","8a7703ef":"code","f386acfc":"code","a33c92c0":"code","cbac3709":"code","2432831f":"code","2402d477":"code","581e67bf":"code","dab37d09":"code","243612d7":"code","f0fdca1d":"markdown"},"source":{"3abe93a9":"import pandas as pd\nfrom fastai.vision import *","44d29c88":"#train = pd.read_csv('train.csv')","c40b1725":"#train.head()","aa337b20":"#y_train = train['label']","55cbd3e5":"#x_train = train.iloc[:,1:].to_numpy() ","3eaf3569":"#plt.imshow(x_train[3].reshape((28,28)), cmap=\"gray\")","4f687fdc":"# x_train,y_train = map(torch.tensor, (x_train,y_train))\n# n,c = x_train.shape\n# x_train.shape, y_train.min(), y_train.max()","e7fbbf15":"class MyDataset(TensorDataset):\n    \"Sample numpy array dataset\"\n    def __init__(self, x, y):\n        self.x, self.y = x, y\n        self.c = 10\n    \n    def __len__(self):\n        return len(self.x)\n    \n    def __getitem__(self, i):\n        return self.x[i], self.y[i]","da2e3e16":"from sklearn.model_selection import train_test_split\n\ndef createTensorDataSet(path):\n  df = pd.read_csv(path)\n  y = df['label'].to_numpy()\n  x = df.iloc[:,1:].to_numpy()\n  x_train, x_valid, y_train, y_valid = train_test_split(x, y, test_size=0.03,random_state=42)\n  x_train,y_train,x_valid,y_valid = map(torch.tensor, (x_train,y_train,x_valid,y_valid))\n  train_ds = MyDataset(x_train, y_train)\n  valid_ds = MyDataset(x_valid, y_valid)\n  tfms = get_transforms(do_flip=False)\n  data = ImageDataBunch.create(train_ds, valid_ds, bs=64)\n  return data","71106a10":"#data = createTensorDataSet('train.csv')\ntfms = get_transforms(do_flip=False)\ndf = pd.read_csv('train.csv')\ndata = ImageDataBunch.from_df('\/root\/', df,  size=26)","dc6f7037":"\"data.show_batch(rows=3, figsize=(5,5))","1896ecb8":"doc(ImageList.from_folder)","c15ecaf0":"class PixelImageItemList(ImageList):\n    def open(self,fn):\n        regex = re.compile(r'\\d+')\n        fn = re.findall(regex,fn)\n        df = self.inner_df[self.inner_df.fn.values == int(fn[0])]\n        df_fn = df[df.fn.values == int(fn[0])]\n        img_pixel = df_fn.drop(labels=['label','fn'],axis=1).values\n        img_pixel = img_pixel.reshape(28,28)\n        img_pixel = np.stack((img_pixel,)*3,axis=-1)\n        return vision.Image(pil2tensor(img_pixel,np.float32).div_(255))","6465f10f":"df_train = pd.read_csv('train.csv')\ndf_train['fn'] = df_train.index\ndf_train.head()","ba0c08ce":"src = (PixelImageItemList.from_df(df_train,'.',cols='fn')\n      .split_by_rand_pct()\n      .label_from_df(cols='label'))","e5c9731d":"data = (src.transform(tfms=(rand_pad(padding=5,size=28,mode='zeros'),[]))\n       .databunch(bs=64)\n       .normalize(imagenet_stats))","823fb6d4":"data.show_batch(rows=3, figsize=(5,5))","19e76a34":"learn = cnn_learner(data, models.resnet34, metrics=accuracy)","cb46284a":"learn.fit_one_cycle(2)","4e9c715e":"learn.lr_find()\nlearn.recorder.plot()","47bbff51":"learn.unfreeze()","7622d5be":"learn.fit_one_cycle(3, max_lr=slice(1e-6,1e-4))","36cf153b":"class CustomImageItemList(ImageList):\n    def open(self, fn):\n        img = fn.reshape(28,28)\n        img = np.stack((img,)*3, axis=-1) # convert to 3 channels\n        return Image(pil2tensor(img, dtype=np.float32))\n\n    @classmethod\n    def from_csv_custom(cls, path:PathOrStr, csv_name:str, imgIdx:int=1, header:str='infer', **kwargs)->'ItemList':\n        df = pd.read_csv(Path(path)\/csv_name, header=header)\n        res = super().from_df(df, path=path, cols=0, **kwargs)\n        # convert pixels to an ndarray\n        res.items = df.iloc[:,imgIdx:].apply(lambda x: x.values \/ 255.0, axis=1).values\n        return res","5c4e96e3":"# note: there are no labels in a test set, so we set the imgIdx to begin at the 0 col\ntest = CustomImageItemList.from_csv_custom(path='.', csv_name='test.csv', imgIdx=0)","3978ab73":"tfms = get_transforms(do_flip=False)\ndata = (CustomImageItemList.from_csv_custom(path='.', csv_name='train.csv')\n                           .split_by_rand_pct(.2)\n                           .label_from_df(cols='label')\n                           .add_test(test, label=0)\n                           .transform(tfms)\n                           .databunch(bs=64)\n                           .normalize(imagenet_stats))","4c491935":"data.show_batch(rows=3, figsize=(5,5))","8da105eb":"learn = cnn_learner(data, models.resnet34, metrics=accuracy)","8a7703ef":"learn.fit_one_cycle(4)","f386acfc":"learn.lr_find()\nlearn.recorder.plot()","a33c92c0":"learn.unfreeze()","cbac3709":"learn.fit_one_cycle(3, max_lr=slice(1e-4,1e-3))","2432831f":"predictions, *_ = learn.get_preds(DatasetType.Test)\nlabels = np.argmax(predictions, 1)\n# output to a file\nsubmission_df = pd.DataFrame({'ImageId': list(range(1,len(labels)+1)), 'Label': labels})\nsubmission_df.to_csv(f'submission.csv', index=False)","2402d477":"submission_df.head()","581e67bf":"from google.colab import files\nfiles.download('submission.csv') ","dab37d09":"!ls","243612d7":"import pandas as pd\nsample_submission = pd.read_csv(\"..\/input\/digit-recognizer\/sample_submission.csv\")\ntest = pd.read_csv(\"..\/input\/digit-recognizer\/test.csv\")\ntrain = pd.read_csv(\"..\/input\/digit-recognizer\/train.csv\")","f0fdca1d":"##Digit recognition"}}