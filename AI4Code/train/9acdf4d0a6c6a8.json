{"cell_type":{"b2ed39f9":"code","a27cee6a":"code","44dfbe69":"code","83663dc2":"code","54860113":"code","d8b3022e":"code","da2feac9":"code","2c6ed940":"code","4a1f60f3":"code","d26e7354":"code","939ce7c1":"code","b3fcc7c9":"code","7538b3aa":"code","455ef484":"code","f34d45fc":"code","c9a551d1":"code","13ebad7c":"code","b41cb75d":"code","e3b45328":"code","472fa5b2":"code","c175c2fa":"code","58f3ed01":"code","62e6fea2":"markdown","b839dc68":"markdown","ed70b1f8":"markdown","15866e0e":"markdown","e8493090":"markdown","c4debb04":"markdown","36ba9363":"markdown"},"source":{"b2ed39f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\nimport matplotlib.pyplot as plt\nimport seaborn as sns","a27cee6a":"df=pd.read_csv('..\/input\/titanic\/train.csv')\ndft=pd.read_csv('..\/input\/titanic\/test.csv')","44dfbe69":"df.head(5)","83663dc2":"dft.head(5)","54860113":"df.isna().sum()","d8b3022e":"df=df.drop(['PassengerId','Cabin','Name','Ticket'],axis=1)\n#Dropping ID, Cabin and using mean to fill NA of age\ndf['Age']=df['Age'].fillna(df['Age'].mean())","da2feac9":"df.describe()","2c6ed940":"plt.figure(figsize=(15,5))\nsns.countplot(x='Pclass',hue='Survived',data=df)","4a1f60f3":"plt.figure(figsize=(15,5))\nsns.countplot(x='Sex',hue='Survived',data=df)","d26e7354":"plt.figure(figsize=(15,5))\nsns.countplot(x='SibSp',hue='Survived',data=df)","939ce7c1":"plt.figure(figsize=(15,5))\nsns.countplot(x='Parch',hue='Survived',data=df)","b3fcc7c9":"# Counting Unique value in each column\nfor col in df:\n    print(col+\" - \"+str(len(df[col].unique())))","7538b3aa":"pclass=pd.get_dummies(df['Pclass'],drop_first=True,prefix=['pclass'])\nSex=pd.get_dummies(df['Sex'],drop_first=True,prefix=['Sex'])\nEmbarked=pd.get_dummies(df['Embarked'],drop_first=True,prefix=['Embarked'])","455ef484":"Y_train=df['Survived']","f34d45fc":"df.drop(['Pclass','Sex','Embarked','Survived'],axis=1,inplace=True)","c9a551d1":"X_train=pd.concat([df,pclass,Sex,Embarked],axis=1)","13ebad7c":"Pass=dft['PassengerId']\ndft=dft.drop(['PassengerId','Cabin','Name','Ticket'],axis=1)\ndft['Age']=dft['Age'].fillna(dft['Age'].mean())\ndft['Fare']=dft['Fare'].fillna(dft['Fare'].median())\npclass=pd.get_dummies(dft['Pclass'],drop_first=True,prefix=['pclass'])\nSex=pd.get_dummies(dft['Sex'],drop_first=True,prefix=['Sex'])\nEmbarked=pd.get_dummies(dft['Embarked'],drop_first=True,prefix=['Embarked'])\ndft.drop(['Pclass','Sex','Embarked'],axis=1,inplace=True)\nX_test=pd.concat([dft,pclass,Sex,Embarked],axis=1)","b41cb75d":"from sklearn.linear_model import LogisticRegression\nreg = LogisticRegression()\nreg.fit(X_train,Y_train)","e3b45328":"Y_pred=pd.DataFrame(reg.predict(X_test))\nY_pred_train=reg.predict(X_train)","472fa5b2":"from sklearn.metrics import accuracy_score\nScore=accuracy_score(Y_train,Y_pred_train)\nScore","c175c2fa":"Result=pd.concat([Pass,Y_pred],axis=1)","58f3ed01":"#Result.to_csv(r'C:\\Users\\abhij\\Desktop\\PROJECT\\Kaggle\\Titanic\\Data\\Results.csv')","62e6fea2":"# Preparing both train and test as dataframe.","b839dc68":"Preparing dummy class for categorical variables","ed70b1f8":"# **Feature Selection And EDA**","15866e0e":"Numerical features:","e8493090":"# **Data Cleaning:**","c4debb04":"# Model building","36ba9363":"# Preparing Test data"}}