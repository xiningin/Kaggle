{"cell_type":{"60842660":"code","72a5362e":"code","77b05742":"code","afa63a9a":"code","17d183bd":"code","725a443f":"code","d26a3178":"code","6fe4d82d":"code","f211e9df":"code","c0f932e3":"code","aa5a8cbe":"code","26308d71":"code","36f38641":"code","d2ae36f7":"code","6274e614":"code","152f4125":"code","99ef8d38":"code","f11272e4":"code","f817a54f":"code","77a1d7f2":"code","4588106d":"code","21fcec91":"code","1a2aa8fe":"code","cc0c7074":"code","647ae9b9":"code","c690ccfc":"code","dcd36030":"code","cd4bce65":"code","34b04923":"code","e182f139":"code","187b42c8":"code","1fb161d3":"code","b33d5f73":"code","911b4032":"code","a4e1521b":"code","affcdf65":"code","05b844f6":"code","8b7203ec":"code","fa3de00f":"code","de2a97da":"code","6dbb3a19":"code","a5885006":"code","68865260":"code","cac51147":"code","243558cf":"code","9e9fdb65":"code","675acfc5":"code","ce09e54a":"code","929d5dc5":"code","3bcc9de1":"code","428a10c0":"code","3830bfaa":"code","aff365da":"code","d151f2fd":"code","1a3440f6":"code","096b6823":"code","684e566b":"code","b911373d":"code","2011ae3a":"code","d8b8c8c4":"code","a076a4bc":"markdown","4f2685c1":"markdown","9646ed5e":"markdown","552f80dc":"markdown","1b760046":"markdown","5410fde4":"markdown","d7532ce2":"markdown","7be2b3e7":"markdown","d05d3231":"markdown","6af06d01":"markdown","14c60d69":"markdown","1d17f24b":"markdown","7bb3efcc":"markdown"},"source":{"60842660":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","72a5362e":"df = pd.read_csv('\/kaggle\/input\/automobile-dataset\/AutoData.csv')","77b05742":"df.head(5)","afa63a9a":"df.info()","17d183bd":"df.isnull().sum()","725a443f":"plt.subplots(figsize=(15,10))\nsns_plot = sns.heatmap(df.corr(),annot =True,cmap='rainbow_r',square=True)\nfig = sns_plot.get_figure()\nfig.savefig(\"corrHeatmap.png\")","d26a3178":"tempdf = df[{'symboling','enginetype','boreratio','horsepower', 'peakrpm', 'citympg', 'highwaympg','enginesize','price'}]","6fe4d82d":"sns.pairplot(tempdf)","f211e9df":"for i in df.columns:\n    plt.title(i)\n    sns.scatterplot(df[i],df['price'])\n    plt.show()","c0f932e3":"bestvar1 = ['wheelbase','carlength','carwidth','curbweigth','enginesize']","aa5a8cbe":"sns.distplot(df['price'])","26308d71":"df.columns","36f38641":"df1 = df.drop({'make','carlength','carwidth','aspiration', 'doornumber','carbody','drivewheel','carheight',\"enginelocation\"},axis=1)","d2ae36f7":"df1.columns","6274e614":"df1","152f4125":"from sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder() \ndf1['fueltype']= label_encoder.fit_transform(df['fueltype']) \ndf1['fueltype'].unique()","99ef8d38":"df1","f11272e4":"df1['enginetype']= label_encoder.fit_transform(df['enginetype']) \ndf1['enginetype'].unique()","f817a54f":"df1['fuelsystem']= label_encoder.fit_transform(df['fuelsystem']) \ndf1['fuelsystem'].unique()","77a1d7f2":"from word2number import w2n","4588106d":"nums = []\nfor i in df1['cylindernumber']:\n    x = w2n.word_to_num(i)\n    nums.append(x)\ndf1['cylindernumber'] = nums","21fcec91":"df1","1a2aa8fe":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\nimport numpy as np\nimport statsmodels.api as sm","cc0c7074":"X = df1[['horsepower']]#.values.reshape(1,-1)\ny = df1[['price']]#.values.reshape(1,-1)","647ae9b9":"X_train,X_test,y_train,y_test = train_test_split(X,y,train_size=.7,random_state=42)","c690ccfc":"LR = LinearRegression()","dcd36030":"LR.fit(X_train,y_train)","cd4bce65":"y_pred = LR.predict(X_test)","34b04923":"r2_score(y_pred,y_test)","e182f139":"print('Coefficient is',LR.coef_[0][0])\nprint('intercept is',LR.intercept_[0])","187b42c8":"g = sns.jointplot(X,y,kind='reg',\n                 joint_kws={'line_kws':{'color':'red'}})\nplt.xlabel('HorsePower')\nplt.ylabel('Price')","1fb161d3":"plt.scatter(X,y)\nplt.plot(X,LR.predict(X))\nplt.xlabel('HorsePower')\nplt.ylabel('Price')\nplt.show","b33d5f73":"model = sm.OLS(y, X)\nresults = model.fit()\nprint(results.summary())","911b4032":"from sklearn.feature_selection import RFE\nfrom sklearn.preprocessing import MinMaxScaler","a4e1521b":"X = df1.drop('price',axis=1)\ny = df1['price']\nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=.7,random_state=42)","affcdf65":"scaler = MinMaxScaler()\nX_train1 = scaler.fit_transform(X_train)","05b844f6":"model = LinearRegression()","8b7203ec":"rfe = RFE(model, 1)","fa3de00f":"rfe.fit(X_train,y_train)","de2a97da":"X_train.columns[rfe.support_]","6dbb3a19":"## Model Building\nX = df[['boreratio']]\ny = df[['price']]\nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=.7,random_state=42)\nLR = LinearRegression()\nLR.fit(X_train,y_train)\ny_pred1 = LR.predict(X_train)\nprint(\"R2 score is\",r2_score(y_pred,y_test))\nprint('Coefficient is',LR.coef_[0][0])\nprint('intercept is',LR.intercept_[0])","a5885006":"plt.scatter(X,y)\nplt.plot(X,LR.predict(X))\nplt.xlabel('Boreratio')\nplt.ylabel('Price')\nplt.show","68865260":"g = sns.jointplot(X,y,kind='reg',\n                 joint_kws={'line_kws':{'color':'red'}})\nplt.xlabel('Boreration')\nplt.ylabel('Price')","cac51147":"model = sm.OLS(y, X)\nresults = model.fit()\nprint(results.summary())","243558cf":"df1.columns","9e9fdb65":"X = df1.drop('price',axis=1)\ny = df1['price']","675acfc5":"X_train,X_test,y_train,y_test = train_test_split(X,y,train_size=.7,random_state=42)","ce09e54a":"LR.fit(X_train.values,y_train)","929d5dc5":"y_pred = LR.predict(X_test)","3bcc9de1":"r2_score(y_pred,y_test)","428a10c0":"print('Coefficient is',LR.coef_)\nprint('intercept is',LR.intercept_)","3830bfaa":"model = sm.OLS(y, X)\nresults = model.fit()\nprint(results.summary())","aff365da":"from sklearn.feature_selection import RFE\nfrom sklearn.preprocessing import MinMaxScaler","d151f2fd":"scaler = MinMaxScaler()\nmodel = LinearRegression()","1a3440f6":"## Selecting Top 7 Features\nrfe = RFE(model, 7)\nX_train1 = scaler.fit_transform(X_train)","096b6823":"rfe.fit(X_train1,y_train)","684e566b":"X_train.columns[rfe.support_]","b911373d":"print(\"Num Features: %s\" % (rfe.n_features_))\nprint(\"Selected Features: %s\" % (rfe.support_))\nprint(\"Feature Ranking: %s\" % (rfe.ranking_))","2011ae3a":"#X = df1[{'symboling', 'fueltype', 'boreratio', 'compressionratio', 'citympg'}]\nX = df1[{'wheelbase', 'enginesize', 'stroke', 'compressionratio', 'horsepower',\n       'peakrpm', 'citympg'}]\ny = df1['price']\nX_train,X_test,y_train,y_test = train_test_split(X,y,train_size=.7,random_state=42)","d8b8c8c4":"LR = LinearRegression()\nLR.fit(X_train,y_train)\ny_pred1 = LR.predict(X_train)\nprint(\"R2 score is\",r2_score(y_pred,y_test))\nprint('intercept is',LR.intercept_)\nprint('Coefficient are',LR.coef_)","a076a4bc":"## Multiple Linear Regression","4f2685c1":"###### We see the Regression LIne is in Best Fit","9646ed5e":"###### CHINTAN CHITRODA","552f80dc":"## AutoMobile Prediction ","1b760046":"##  Linear Regression","5410fde4":"#### RFE Based features","d7532ce2":"### EDA","7be2b3e7":"# The End\n### Please do upvote if you like \u00af\\_(\u30c4)_\/\u00af","d05d3231":"###### we see there are cars highest in price range below !0000 $","6af06d01":"#### RFE selected Feature","14c60d69":"#### Self Analysis based Features","1d17f24b":"## Data PreProcessing","7bb3efcc":"#### Self Analysis based feature"}}