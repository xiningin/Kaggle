{"cell_type":{"fe9eb1f8":"code","cbfa1e09":"code","0be5f4ab":"code","00e3da31":"code","6b273fc5":"code","2ddc07ec":"code","3ebb8264":"code","ad82f508":"code","d1c42ae2":"code","236245fe":"code","0702bef7":"code","486d20c6":"code","dbd61a3b":"code","367ddaee":"code","3ebeff78":"code","6a668d06":"code","43f5f794":"code","e538d755":"code","288cfdde":"code","7717b744":"code","0e03b3f6":"code","823e35a4":"code","c839da01":"code","2f895bea":"code","07a41141":"code","0369f77d":"code","ba2731be":"code","d681b501":"code","5688637a":"code","98621aec":"code","11862fbd":"code","170c2aa3":"code","e5a72a9f":"markdown","d88e18ab":"markdown","ae490422":"markdown","c5a82c85":"markdown","19c4c57c":"markdown","92dd7b44":"markdown","5dff85eb":"markdown","0cac1ff9":"markdown","83ccee21":"markdown","ceedeaf7":"markdown","318a4eae":"markdown","61bab54f":"markdown","0e27ad67":"markdown","26e879eb":"markdown","d8e41660":"markdown","fcdc40cf":"markdown","89b2ab33":"markdown","010beebf":"markdown","d88daa69":"markdown","19009c57":"markdown","31e97270":"markdown","98ea2f13":"markdown"},"source":{"fe9eb1f8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\ndf_train = pd.read_csv(\"..\/input\/train.csv\")\ndf_test = pd.read_csv(\"..\/input\/test.csv\")\n# Any results you write to the current directory are saved as output.","cbfa1e09":"nulls=df_train.isnull().sum()\nprint(nulls)\n\n","0be5f4ab":"length = len(df_train)\npercentage = (nulls\/length)*100\nprint (percentage)","00e3da31":"#plotting\nx = percentage.values\ny = np.array(percentage.index)\n\nplt.figure(figsize=(16, 5))\nsns.set(font_scale=1.2)\nax = sns.barplot(y, x, palette='hls', log=False)\nax.set(xlabel='Feature', ylabel='(Percentage of Nulls)', title='Number of Nulls')","6b273fc5":"df_train.head()","2ddc07ec":"for i in np.array(df_train.columns):\n    print (\"{0} has {1} attributes\".format(i, len(df_train[i].unique())))","3ebb8264":"df = pd.concat([df_train.drop(\"Survived\", axis = 1), df_test])\nlabel = df_train[\"Survived\"]\nindex = df_train.shape[0]","ad82f508":"df[\"Ticket_number\"] = df[\"Ticket\"].apply(lambda x: x.split()[-1])\ndf[\"Ticket_code\"] = df[\"Ticket\"].apply(lambda x: x.split()[0] if len(x.split())!= 1 else \"No Code\")\ndf[\"Ticket_code\"].unique()","d1c42ae2":"df['Ticket_code'].value_counts()","236245fe":"df[\"Ticket_code\"]= df[\"Ticket_code\"].apply(lambda a: a[:-1] if a[-1]==\".\" else a)\ndf['Ticket_code'].value_counts()","0702bef7":"#\/\uc640 . \ubaa8\ub450 \ubd84\ub9ac\nimport re\ncodes= [i for i in df[\"Ticket_code\"].unique() if i!= \"No Code\"]\ndef split_codes(code):\n    return re.split('[^a-zA-Z0-9]+', code)\n    \nnew_codes = []\nfor i in codes:\n    for j in  split_codes(i):\n        new_codes.append(j)\n        \npd.Series(new_codes).value_counts()","486d20c6":"#\/\ub9cc \ubd84\ub9ac\ndef split_codes2(code):\n    return re.split('\/+', code)\n    \nnew_codes2 = []\nfor i in codes:\n    for j in  split_codes2(i):\n        new_codes2.append(j)\n        \npd.Series(new_codes2).value_counts()","dbd61a3b":"#.\ub9cc \ubd84\ub9ac\ndef split_codes3(code):\n    return re.split('\\.+', code)\n    \nnew_codes3 = []\nfor i in codes:\n    for j in  split_codes3(i):\n        new_codes3.append(j)\n        \npd.Series(new_codes3).value_counts()","367ddaee":"df[\"Ticket_code_HEAD\"] = df[\"Ticket_code\"].apply(lambda x: re.split('[^a-zA-Z0-9]+', x)[0])\ndf['Ticket_code_HEAD'].value_counts()","3ebeff78":"df[\"Name\"]\ndf[\"Initial\"] = df.Name.str.extract('([A-Za-z]+)\\.')","6a668d06":"pd.crosstab(df[\"Initial\"], df[\"Sex\"]).T.style.background_gradient(cmap='summer_r')","43f5f794":"df['Initial'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don', 'Dona'],\n                        ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr', 'Mr'],inplace=True)","e538d755":"train = df[:length]\ntrain[\"Survived\"] = label\ntrain.groupby('Initial').mean()[\"Survived\"].plot.bar()","288cfdde":"train.groupby('Initial').mean()","7717b744":"print (\"{} percent of Cabin data is null\".format(df[\"Cabin\"].isnull().sum()\/len(df)*100))","0e03b3f6":"train_cabin = train[train[\"Cabin\"].notnull()]\ntrain_cabin[\"Cabin_Initial\"] = train_cabin[\"Cabin\"].apply(lambda x: x[0])\ntrain_cabin[\"Cabin_Number\"] = train_cabin[\"Cabin\"].apply(lambda x: (x[1:].split(\" \")[0]))\ntrain_cabin[\"Cabin_Number\"].replace(\"\", -1, inplace = True)\ntrain_cabin[\"Cabin_Number\"] = train_cabin[\"Cabin_Number\"].apply(lambda x: int(x))\n\ntrain_cabin[\"Cabin_Initial\"].value_counts()","823e35a4":"train_cabin.groupby(\"Cabin_Initial\").mean()","c839da01":"train_cabin.groupby(\"Cabin_Initial\").mean()[\"Survived\"].plot.bar()","2f895bea":"df_cabin = df[df[\"Cabin\"].notnull()]\ndf_cabin[\"Cabin_Initial\"] = df_cabin[\"Cabin\"].apply(lambda x: x[0])\ndf_cabin[\"Cabin_Number\"] = df_cabin[\"Cabin\"].apply(lambda x: (x[1:].split(\" \")[0]))\ndf_cabin[\"Cabin_Number\"].replace(\"\", -1, inplace = True)\ndf_cabin[\"Cabin_Number\"] = df_cabin[\"Cabin_Number\"].apply(lambda x: int(x))\n\ndf_cabin.groupby(\"Cabin_Initial\").mean()","07a41141":"#Heatmap \uadf8\ub824\ubcf4\uae30\ndf_cabin_heatmap = df_cabin[[\"Pclass\", \"Age\", \"SibSp\", \"Parch\", \"Fare\", \"Cabin_Number\", \"Cabin_Initial\"]]\ndf_cabin_heatmap['Cabin_Initial'] = df_cabin_heatmap['Cabin_Initial'].map({'A': 0, 'B': 1, \"C\":2, \"D\":3, \"E\":4, \"F\":5, \"G\":7, \"H\":8})\n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(14, 12))\nplt.title('Correlation, y=1.05, size=15')\nsns.heatmap(df_cabin_heatmap.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={\"size\": 16})","0369f77d":"df[\"Embarked\"].isnull().sum()","ba2731be":"df_train['Embarked'].fillna('S', inplace=True)","d681b501":"from sklearn import preprocessing\n\ndf[\"Cabin_Initial\"] = df[\"Cabin\"].apply(lambda x: x[0] if pd.notnull(x) else x)\n#Drop non-using columns\ndf = df.drop([\"Name\", \"Ticket\", \"Ticket_code\", \"Cabin\"], axis = 1)\ncategorical = [\"Sex\", \"Embarked\", \"Ticket_code_HEAD\", \"Initial\", \"Cabin_Initial\"] \n\nlbl = preprocessing.LabelEncoder()\nfor col in categorical:\n    df[col].fillna('Unknown')\n    df[col] = lbl.fit_transform(df[col].astype(str))\n","5688637a":"df.groupby(\"Initial\").mean()","98621aec":"#Initial \uc744 \uac00\uc9c0\uace0 Fillna\ndf[\"Age\"] = df.groupby(\"Initial\").transform(lambda x: x.fillna(x.mean()))[\"Age\"]","11862fbd":"df['FamilySize'] = df['SibSp'] + df['Parch'] + 1\ndf= df.drop(\"PassengerId\", axis = 1)\ndf= df.drop(\"Ticket_number\", axis = 1)","170c2aa3":"train = df[:length]\ntest = df[length:]\n\ny = label\n\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split\nX = np.array(train)\ny = np.array(y)\n\ndtest = np.array(test)\n\nX_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.15, random_state=23)\n\ndef score(a, b):\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n           count+=1\n    return count\n\ngbm =xgb.XGBClassifier(max_depth=3,n_eatimators=1000,early_stop_rounds = 100, learning_rate=0.15).fit(X_train,y_train)\nprediction_test = gbm.predict(X_valid)\nscore(prediction_test, y_valid)\n\n\n\nprediction = gbm.predict(dtest)\n\nsubmission=pd.DataFrame({'PassengerId':pd.read_csv(\"..\/input\/test.csv\")['PassengerId'],'Survived':prediction})\nsubmission.to_csv(\"submission.csv\",index=False)","e5a72a9f":"\ud2f0\ucf13 \ubc88\ud638 \uc55e\uc758 \ucf54\ub4dc\ub294 \ucd9c\ubc1c\uc9c0, \ub3c4\ucc29\uc9c0\ub098 \uae30\ud0c0 \ud0d1\uc2b9\uc790\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \ub2f4\uace0\uc788\uc744 \ud655\ub960\uc774 \ud06c\ub2e4.  \ud55c\ubc88 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\ub2e4","d88e18ab":"**\uba3c\uc800 \uac00\uc7a5 Null Value\uac00 \uc801\uc740 embarked\ubd80\ud130. **\ucd1d 2\uac1c\ubfd0\uc774 Null value\uc774\ubbc0\ub85c \uac00\uc7a5 \ub9ce\uc740 \uc218\ub97c \ucc28\uc9c0\ud558\ub294 \"S\" \ub85c \ub2e4\uccb4\ud558\uaca0\ub2e4. ","ae490422":"**Cabin Initial** \uacfc **Fare**\uc758 \uad00\uacc4\uac00 \uc2ec\uc0c1\uce58 \uc54a\uc544\ubcf4\uc778\ub2e4. Cabin number\ub294 \ud638\uc2e4 \ubc88\ud638\uc774\uc9c0\ub9cc Cabin Initial \uc740 \uc120\ubc15 \ub0b4 \uc120\uc2e4\uc758 \uc704\uce58, \ub4f1\uae09 \ub4f1\uacfc \uad00\ub828\uc774 \uc788\uc744 \uac00\ub2a5\uc131\uc774 \ud06c\ubbc0\ub85c Null valu\ub97c \uaf2d \ucc44\uc6cc Attribute\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 \uc88b\uc744 \ub4ef \ud558\ub2e4. ","c5a82c85":"Cabin \uc758 Initial\uc740 \uc774\ud6c4 imputation\uc744 \ud1b5\ud574 \uc608\uce21\ud558\uc5ec \ucc44\uc6cc Attribute\uc73c\ub85c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uaca0\ub2e4.","19c4c57c":"**Ticket**\n\ud2f0\ucf13\uc758 \uc55e\ubd80\ubd84\uc5d0 \ucf54\ub4dc\uba85\uc73c\ub85c \ud45c\uc2dc\ub41c \uac83\uacfc \ud2f0\ucf13 \ubc88\ud638\ub97c \ubd84\ub9ac\ud574 \uc0b4\ud3b4\ubcf4\uaca0\ub2e4.","92dd7b44":"\uc5ec\uae30\uc11c Survived\ub294 label\uc774\uba70\n- **Pclass, Sex, Embarked**\ub294 \ud655\uc2e4\ud788 **Categorical feature**\ub77c \ubcfc \uc218 \uc788\uc74c. \n- **Name** \uacfc **Ticket, Cabin**\uc740 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \ud544\uc694\uac00 \uc788\uc744 \uac83\uc73c\ub85c \ubcf4\uc774\uba70\n- **Age, SibSp, Parch, Fare**\ub294 \uc77c\ub2e8 **numeric value **\ubd10\ub3c4 \ub420 \uac83\uc774\ub77c \ubcf4\uc784. \n\n\uba3c\uc800 Ticket \uacfc Name\uc744 \uc0b4\ud3b4\ubcf8 \ud6c4\n Null value\ub4e4\uc744 \ucd94\uc815\ud558\uc5ec \ucc44\uc6b0\uace0, \ucd94\uac00\uc801\uc73c\ub85c Add\ud560 \uc218 \uc788\ub294 Feature \uac00 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uace0,\nCategorical feature\ub97c encoding \ud55c \ud6c4 \ubaa8\ub378\ub9c1\uc744 \uc9c4\ud589\ud558\ub3c4\ub85d \ud558\uaca0\ub2e4. ","5dff85eb":"\ub2e4\uc74c\uc73c\ub85c, '\/'\uc640 '.' \uac01\uac01, \ub610 \ub458 \ubaa8\ub450\ub97c \uae30\uc900\uc73c\ub85c \ucf54\ub4dc\ub97c \ub098\ub204\uc5c8\uc744 \ub54c \uac1c\ubcc4\uc801\uc73c\ub85c \uc874\uc7ac\ud558\ub294 \ucf54\ub4dc\uac00 \ubb34\uc5c7\uc774 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\ub2e4. (Ex: SC\/A.3  -> SC\uc640 A.3, SC\uc640 A \uc640 3, \ub4f1)\n**\uc774 \ubd80\ubd84\uc744 \ub354 \ud6a8\uc728\uc801\uc774\uace0 \uc815\ud655\ud558\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc544\uc774\ub514\uc5b4\uac00 \uc788\ub2e4\uba74 \uacf5\uc720\ubc14\ub78d\ub2c8\ub2e4**","0cac1ff9":"Null Value\uac00 Cabin\uc758 \uacbd\uc6b0 \uc57d 77\ud504\ub85c\ub85c \uc0c1\ub2f9\ud55c \uc591\uc758 \ub370\uc774\ud130\uac00 \uc720\uc2e4 (\ud639\uc740 \uc5c6\uc74c) \ub418\uc5c8\uc74c\uc744 \uc54c \uc218 \uc788\uace0, age\uc758 \uacbd\uc6b0 \uc57d 20\ud504\ub85c\uc784. Embarked\uc758 \uacbd\uc6b0 0.22\ud504\ub85c\ub85c \ubbf8\ubbf8\ud55c \uc218\uc900\uc784\uc744 \uc54c \uc218 \uc788\uc73c\uba70 \ub098\uba38\uc9c0 column\uc5d4 \ubaa8\ub4e0 \ub370\uc774\ud130\uac00 \uc874\uc7ac. ","83ccee21":"**Cabin \uc0b4\ud3b4\ubcf4\uae30**\n\nCabin\uc740 \ub9ce\uc740 \uc218\uc758 \ub370\uc774\ud130\uac00 \uc5c6\uc9c0\ub9cc, \ud0d1\uc2b9\uc790\uac00 \uc704\uce58\ud574\uc788\ub358 \uc88c\uc11d\/\ud638\uc2e4\uc758 \uc704\uce58\uc640 \uc0dd\uc874 \uc5ec\ubd80\uac00 \uad00\ub828\uc774 \uc788\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uace0, Null Data\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc2e4\ub9c8\ub9ac\ub97c \ucc3e\uc544\ubcf4\ub3c4\ub85d \ud558\uaca0\ub2e4. ","ceedeaf7":"**Categorical Data \ub97c \ub2e4\ub4ec\uace0 Label encoding \ud558\uae30**","318a4eae":"\uc0c1\ub2f9\uc218\uc758 \ub370\uc774\ud130\uac00 Miss \/ Mrs, MR\/Master\uc5d0 \uce58\uc911\ub418\uc5b4\uc788\uc74c\uc744 \ubcfc \uc218 \uc788\uc73c\uba70 \ub098\uba38\uc9c0\uc758 \uacbd\uc6b0\uc5d4 \uadf9\uc18c\uc218\ub85c, \uacb0\uacfc\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uc744 \uac83\uc73c\ub85c \ubcf4\uc784. ","61bab54f":"**\uae30\ud0c0 Atribute \uc0dd\uc131**\n(\ucd94\ud6c4 \ucd94\uac00\uc608\uc815)","0e27ad67":"**Null Value estimation**","26e879eb":"Nans (Null Data)\ucc3e\uc544\ubcf4\uae30","d8e41660":"Modeling","fcdc40cf":"- \ud558\ub098\uc758 \ucf54\ub4dc\ub9cc \uae30\uc7ac\ub41c \uacbd\uc6b0\uc640 \ub458 \uc774\uc0c1\uc758 \ucf54\ub4dc\uac00 \uae30\uc7ac\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0\ub85c \ub098\ub20c \uc218 \uc788\ub2e4. \n- \ub458 \uc774\uc0c1\uc758 \ucf54\ub4dc\uac00 \uae30\uc7ac\ub41c \uacbd\uc6b0, \/ \ud639\uc740 . \ub97c \uae30\uc900\uc73c\ub85c \uc55e\/\ub4a4\ub85c \uc9c0\uba85\uc744 \ub098\ud0c0\ub0b4\ub294 \uac83\uc73c\ub85c \ucd94\uc815\ub418\ub294 \ucf54\ub4dc\uac00 \ub098\ub258\uc5b4 \uc788\uc73c\uba70,  \/ \uc640 . \uac00 \ud63c\uc6a9\ub418\uc5b4 \uc788\ub294 \ub4ef \ubcf4\uc778\ub2e4. \n- \uac19\uc740 \uc9c0\uba85\uc774\ub77c\ub3c4 \ud45c\uae30\uac00 \ub2e4\ub974\uac8c \ub41c \uacbd\uc6b0\uac00 \uc788\ub294 \ub4ef \ud558\ub2e4. SOTON, STON \ub4f1\uc774 \uadf8 \uc608\uc774\uba70, C.A.\uc640 \uac19\uc740 \uacbd\uc6b0 CA \uc640 \uac19\uc740 \ucf54\ub4dc\uc778\uc9c0, \uc544\ub2c8\uba74 C\uc640 A\ub77c\ub294 \ub450 \uac1c\uc758 \ucf54\ub4dc\ub97c '.' \uad6c\ubd84\uc790\ub97c \uc0ac\uc6a9\ud574 \ub098\ub208\uac83\uc778\uc9c0 \uc54c\uae30 \uc5b4\ub835\ub2e4. \n\n\uc123\ubd80\ub978 \ud310\ub2e8\uc744 \ud558\uae30\uc5d0 \uc815\ubcf4\uac00 \ubd80\uc871\ud558\ub2c8 \uc77c\ub2e8 \uba85\ud655\ud558\uac8c **\uc77c\uce58\ud558\ub294 \ucf54\ub4dc\uba85\uc774\ub77c \uc5ec\uaca8\uc9c0\ub294 \uac83\ub4e4\uc744 \ucc98\ub9ac. \uc6b0\uc120 \ucf54\ub4dc\uba85\uc758 \ub9e8 \ub4a4\uc5d0 \ubd99\ub294 '.'\ub294 \uc81c\uac70\ud574\ub3c4 \ub420 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4. **","89b2ab33":"\ubcf8 \ucee4\ub110\uc740 \uacfc\uac70\uc5d0 \uae30\uc874 Kaggle Titanic Competition\uc5d0 \uc5f0\uc2b5\uc744 \uc704\ud574 \uc791\uc131\ud574\ubcf8 \ucee4\ub110\uc744 \ubc14\ud0d5\uc73c\ub85c Building\ud574\uc11c \uc791\uc131\ud588\uc2b5\ub2c8\ub2e4. \n\ud0c0\uc774\ud0c0\ub2c9 competition\uc758 \uacf5\uac1c\ub41c \ucee4\ub110\uc744 \ucc38\uace0\ud55c \ubd80\ubd84\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. ","010beebf":"\uc815\ubcf4\uac00 \ubd80\uc871\ud574 \uc123\ubd88\ub9ac \ud310\ub2e8\ud558\uae30 \uc5b4\ub835\uc9c0\ub9cc, \uc77c\ub2e8 \uac00\uc7a5 \uacf5\ud1b5\uc801\uc73c\ub85c \ub098\ud0c0\ub098\ub294 \ucf54\ub4dc\uac00 \ub9ce\uc740 \ubc29\ubc95\uc744 \ud1b5\ud574 (\/\uc640 . \ubaa8\ub450 \ubd84\ub9ac) Code\ub97c \ubd84\ub9ac\ud574\ubcf4\uaca0\ub2e4. \/ \ub610\ub294 . \ub97c \ud1b5\ud574 \ub450 \uac00\uc9c0 \uc774\uc0c1\uc758 \ucf54\ub4dc\uac00 \uae30\uc7ac\ub418\uc5b4\uc788\ub294 \uacbd\uc6b0 \uccab \ubc88\uc9f8 \ucf54\ub4dc\ub9cc\uc744 \ucd94\ucd9c\ud574 \ud558\ub098\uc758 Attribute\uc73c\ub85c \ub9cc\ub4e4\uc5b4\ubcf4\uaca0\ub2e4. ","d88daa69":"**Name**\n\ub2e4\uc74c\uc73c\ub85c \uc774\ub984\uc5d0 \ud3ec\ud568\ub41c \uc815\ubcf4\ub97c \ucd94\ucd9c\ud574\ubcf4\uaca0\ub2e4. \n\uc0dd\uc874\uacfc \uad00\ub828\ud574\uc11c \uc774\ub984\uc73c\ub85c\ubd80\ud130 \ucd94\ucd9c\ud560 \uc218 \uc788\uc744 \ubc95 \ud55c \uc815\ubcf4\ub294 \uc6b0\uc120 \ud638\uce6d (\uc131\ubcc4 \ub4f1\uc758 \uc815\ubcf4 \ud3ec\ud568 \uac00\ub2a5)\uc774 \uc788\uc744 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.\n*\uc774 \ubd80\ubd84\uc740 Baseine kernal : https:\/\/www.kaggle.com\/youhanlee\/youhan-s-baseline \uc744 \ucc38\uace0\ud558\uc600\uc2b5\ub2c8\ub2e4. ","19009c57":"**\ub9c8\uc9c0\ub9c9\uc73c\ub85c Age \uc758 \uacb0\uce21\uce58\ub97c \ucc44\uc6cc\ubcf4\ub3c4\ub85d \ud558\uaca0\ub2e4. Age\ub97c \uac00\ub2a0\ud560 \uc218 \uc788\ub294 \uc694\uc18c\ub294 \uac00\uc871\uc758 \uc218 \ub610\ub294 Initial\uc774 \uc788\ub2e4. **","31e97270":"\uc774\uc678\uc5d0\ub3c4 SibSp, Parch \ub294 \uc774\ub2c8\uc15c\uacfc \uc5b4\ub290\uc815\ub3c4\uc758 \uad00\uacc4\ub97c \uac00\uc9c0\ub294 \uac83\uc73c\ub85c \ubcf4\uc784","98ea2f13":"\ub2e8, Cabin Initial \uc774 \ud655\ubcf4\ub41c \uc804\uccb4 \ub370\uc774\ud130\uc758 \uc591\uc774 \ud06c\uc9c0 \uc54a\ub2e4\ub294\uc810\uc744 \uace0\ub824\ud574\uc57c \ud568. (\ud2b9\ud788 G, T\uc758 \uacbd\uc6b0)"}}