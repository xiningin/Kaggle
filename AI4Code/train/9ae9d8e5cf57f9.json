{"cell_type":{"f84be419":"code","968997a9":"code","22f4516c":"code","13a41f5a":"code","02b6dd62":"code","74b0c600":"markdown","ad771861":"markdown"},"source":{"f84be419":"import pandas as pd\nimport numpy as np\nimport cv2\n\nimport os\n\nfrom matplotlib import pyplot as plt\n\nfrom tqdm.auto import tqdm\n\nsave_dir = f'\/kaggle\/tmp\/mask'\nsize = 512\n\nos.makedirs(save_dir, exist_ok=True)","968997a9":"train = pd.read_csv('..\/input\/siim-covid19-detection\/train_image_level.csv')\n\nmeta = pd.read_csv('..\/input\/siim-covid19-resized-to-512px-png\/meta.csv')\nmeta = meta[meta.split=='train'].reset_index(drop=True)\n\ntrain['id'] = train.apply(lambda row: row.id.split('_')[0], axis=1)\ntrain = train.rename(columns={'id': 'image_id'})\ntrain_meta = pd.merge(train, meta, how='inner', on='image_id')\ntrain_meta = train_meta.drop(['boxes', 'split', 'StudyInstanceUID'], axis=1)\ntrain_meta.head()","22f4516c":"image_id = '000a312787f2'\ni = int(train_meta[train_meta.image_id==image_id].index.values)\n\nlabel = train_meta.loc[i, 'label'].split()\nif label != 'none':\n    label = label\n    dim0 = train_meta.loc[i, 'dim0']\n    dim1 = train_meta.loc[i, 'dim1']\n\n    mask = np.zeros((size, size), dtype=np.uint8)\n    for j in range(len(label) \/\/ 6):\n        xmin = int(np.round(float(label[6*j+2])*size\/dim1, 4))\n        ymin = int(np.round(float(label[6*j+3])*size\/dim0, 4))\n        xmax = int(np.round(float(label[6*j+4])*size\/dim1, 4))\n        ymax = int(np.round(float(label[6*j+5])*size\/dim0, 4))\n        cv2.rectangle(mask, (xmin, ymin), (xmax, ymax), color=255, thickness=-1)\n\n    plt.imshow(mask)","13a41f5a":"for i in tqdm(range(len(train_meta))):\n    label = train_meta.loc[i, 'label'].split()\n    \n    if label[0] == 'none':\n        continue\n    \n    image_id = train_meta.loc[i, 'image_id']\n    dim0 = train_meta.loc[i, 'dim0']\n    dim1 = train_meta.loc[i, 'dim1']\n    \n    mask = np.zeros((size, size), dtype=np.uint8)\n    for j in range(len(label) \/\/ 6):\n        xmin = int(np.round(float(label[j*6+2])*size\/dim1, 4))\n        ymin = int(np.round(float(label[j*6+3])*size\/dim0, 4))\n        xmax = int(np.round(float(label[j*6+4])*size\/dim1, 4))\n        ymax = int(np.round(float(label[j*6+5])*size\/dim0, 4))\n        cv2.rectangle(mask, (xmin, ymin), (xmax, ymax), color=255, thickness=-1)\n    cv2.imwrite(f'{save_dir}\/{image_id}.png', mask)","02b6dd62":"%%time\n!tar -zcf mask.tar.gz -C \"\/kaggle\/tmp\/mask\/\" .","74b0c600":"# Show one mask image","ad771861":"# Save all mask images"}}