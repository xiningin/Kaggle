{"cell_type":{"35ee4309":"code","15b1f783":"code","e6177144":"code","a204f029":"code","f7bac47b":"code","74fe7097":"code","d0357961":"code","272f1375":"code","1c484c8b":"code","ba11d257":"code","05bb2865":"code","8bd22007":"code","287b1220":"code","ebc7be60":"code","7ba4a526":"code","cd99af5c":"code","85e29c6d":"code","6480340c":"code","fb77c8d3":"code","2bf204f9":"code","5c37f6c1":"code","4c660e97":"code","f5f084d4":"code","188a5bec":"code","e3df1f26":"code","c4cb352d":"code","2aa8f729":"code","f628f6d7":"code","36c06418":"code","456ee566":"code","97737a06":"code","be241868":"code","2f1ad032":"code","2f61bb88":"code","cd6e4766":"code","7b6a68fb":"code","ca3f7df7":"code","0ba8ee4e":"code","d1ee7a5d":"code","24b1dfa0":"code","fc8abab2":"code","4c5bf777":"code","257b9c3d":"code","5a8bdc4e":"code","292a3882":"markdown","ed9e8681":"markdown","d2124be6":"markdown","91607d00":"markdown","90d54fd5":"markdown","cf5a10cd":"markdown","4335da0f":"markdown","1cf31291":"markdown","36f1d970":"markdown","a1b40113":"markdown","d7145341":"markdown","9d127fe9":"markdown","e441968b":"markdown"},"source":{"35ee4309":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","15b1f783":"#imports\nimport seaborn as sns\npd.set_option('max_rows',1000)\nsns.set(rc={'figure.figsize':(15,10)})\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.ensemble import VotingRegressor\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom lightgbm import LGBMRegressor\nfrom catboost import CatBoostRegressor\nfrom sklearn.ensemble import StackingRegressor","e6177144":"df = pd.read_csv('\/kaggle\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head(10)","a204f029":"df.info()","f7bac47b":"df.describe()","74fe7097":"sns.heatmap(df.corr(),annot=True)","d0357961":"df['Author'].value_counts()","272f1375":"df['Genre'].value_counts()","1c484c8b":"sns.distplot(df['User Rating'])","ba11d257":"sns.barplot(x='Genre',y='User Rating',data=df,palette='rocket_r')","05bb2865":"df['Name'].value_counts()","8bd22007":"df.loc[(df['Name']=='Publication Manual of the American Psychological Association, 6th Edition')]","287b1220":"df.loc[(df['Name']==\"Oh, the Places You'll Go!\")]","ebc7be60":"df[\"Author\"].unique()","7ba4a526":"df['Year'].value_counts()","cd99af5c":"sns.barplot(x='Year',y='User Rating',data=df,palette='rocket_r')","85e29c6d":"sns.boxplot(x='Year',y='User Rating',data=df,palette='magma_r')","6480340c":"sns.distplot(df['Reviews'])","fb77c8d3":"sns.barplot(x='Year',y='Reviews',data=df,palette='rocket_r')","2bf204f9":"sns.boxplot(x='Year',y='Reviews',data=df,palette='summer_r')","5c37f6c1":"g1 = df.groupby('Author')[['Reviews','Year','User Rating','Price']].mean()\ng1","4c660e97":"g2 = df.groupby('Genre')[['Reviews','Year','User Rating','Price']].mean()\ng2","f5f084d4":"g3 = df.groupby('Year')[['Reviews','User Rating','Price']].mean()\ng3","188a5bec":"sns.distplot(np.log1p(df['Price']))","e3df1f26":"sns.barplot(x='Year',y='Price',data=df,palette='magma_r')","c4cb352d":"sns.barplot(x='Genre',y='Price',data=df,palette='magma_r')","2aa8f729":"g4 = df.groupby('Name')[['Reviews','Year','User Rating','Price']].mean()\ng4","f628f6d7":"sns.scatterplot(x='Price',y='User Rating',data=df,hue='Year',palette='rocket_r')","36c06418":"enc = LabelEncoder()\ndf['Author_enc'] = enc.fit_transform(df['Author'])\ndf['Genre_enc'] = enc.fit_transform(df['Genre'])\ndf['Name_enc'] = enc.fit_transform(df['Name'])\ndf.head(10)","456ee566":"target = np.log1p(df['Price'])\ntrain = df[['Author_enc','Reviews','Year','User Rating','Genre_enc','Name_enc']]\nprint(train.shape,target.shape)","97737a06":"X_train, X_test, y_train, y_test = train_test_split(train, target, test_size=0.25, random_state=42,shuffle=True)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","be241868":"scaler = StandardScaler()\nscaler.fit_transform(X_train)\nscaler.transform(X_test)\nprint('Done.')","2f1ad032":"#models\nrf = RandomForestRegressor(n_jobs=-1)\nxgb = XGBRegressor()\ngbr = GradientBoostingRegressor( learning_rate=0.01,) \ndtr = DecisionTreeRegressor(criterion='mse',random_state=42,max_depth=35,\n                           max_features='sqrt', min_samples_leaf=15, min_samples_split=10)\nabr = AdaBoostRegressor(dtr,learning_rate=0.01)\ncat =  CatBoostRegressor(learning_rate=0.1,eval_metric = 'RMSE')\nlgb = LGBMRegressor(max_depth=25,num_leaves=120,learning_rate=0.01,n_jobs=-1,boosting_type='gbdt',\n                   objective='regression',mertic='rmse', verbosity=1,bagging_fraction=0.7,\n                   feature_fraction=0.5,bagging_frequency=6,bagging_seed=42,seed=42,\n                   colsample_bylevel=1,colsample_bynode=1, colsample_bytree=1)","2f61bb88":"xgb.fit(X_train,y_train)\nxgb_pred = np.expm1(xgb.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,xgb_pred)),mean_absolute_error(y_test,xgb_pred))","cd6e4766":"rf.fit(X_train,y_train)\nrf_pred = np.expm1(rf.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,rf_pred)),mean_absolute_error(y_test,rf_pred))","7b6a68fb":"dtr.fit(X_train,y_train)\ndtr_pred = np.expm1(dtr.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,dtr_pred)),mean_absolute_error(y_test,dtr_pred))","ca3f7df7":"abr.fit(X_train,y_train)\nabr_pred = np.expm1(abr.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,abr_pred)),mean_absolute_error(y_test,abr_pred))","0ba8ee4e":"gbr.fit(X_train,y_train)\ngbr_pred = np.expm1(gbr.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,gbr_pred)),mean_absolute_error(y_test,gbr_pred))","d1ee7a5d":"cat.fit(X_train,y_train,verbose=0)\ncat_pred = np.expm1(cat.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,cat_pred)),mean_absolute_error(y_test,cat_pred))","24b1dfa0":"lgb.fit(X_train,y_train)\nlgb_pred = np.expm1(lgb.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,lgb_pred)),mean_absolute_error(y_test,lgb_pred))","fc8abab2":"VR = VotingRegressor([('xgb',xgb),('gbr',gbr),('dtr',dtr),('lgb',lgb),('abr',abr)],n_jobs=-1)\nVR.fit(X_train,y_train)\nVR_pred = np.expm1(VR.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,VR_pred)),mean_absolute_error(y_test,VR_pred))","4c5bf777":"level0 = [('xgb',xgb),('gbr',gbr),('dtr',dtr),('lgb',lgb),('abr',abr),('vr',VR)]\nlevel1 = LinearRegression()\nstack = StackingRegressor(estimators=level0, cv=5,n_jobs=-1)\nstack.fit(X_train,y_train)\nstack_pred = np.expm1(stack.predict(X_test))\nprint(np.sqrt(mean_squared_error(y_test,stack_pred)),mean_absolute_error(y_test,stack_pred))","257b9c3d":"output = pd.DataFrame({'Actual':np.expm1(y_test),'Predicted (xgb)':xgb_pred,'Predicted (lgb)':lgb_pred,\n                      'Predicted (abr)':abr_pred,'Predicted (gbr)':gbr_pred,'Predicted (dtr)':dtr_pred,\n                      'Predicted (rf)':rf_pred,'Predicted (cat)':cat_pred,\n                      'Predicted (VR)':VR_pred,'Predicted (stack)':stack_pred})\noutput.head(10)","5a8bdc4e":"output.to_csv('Amazon_bestseller_prediction.csv',index=False)","292a3882":"Some books have been listed multiple times in the dataset, the only differnce being the year in which they were featured as a bestselling book.","ed9e8681":"# MODELLING","d2124be6":"Let us try to Price of books by training several ML models on different features.","91607d00":"User ratings for both Genres are pretty much evened out. Everyone has their taste.","90d54fd5":"Most reviews were recorded in 2014\/2019, least in 2009.","cf5a10cd":"**Doing some groupwise feature analysis**","4335da0f":"# EDA","1cf31291":"Fiction books recorded more reviews and has less mean price.","36f1d970":"Most book prices seems to lie below $40.","a1b40113":"lets see the correlation between features.","d7145341":"Books are becoming cheaper as the years progress, yet becoming more popular, garnering more reviews.\nA Positive trend I believe.","9d127fe9":"Let's do some visualizations.","e441968b":"Again,Books becoming cheaper."}}