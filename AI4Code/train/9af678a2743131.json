{"cell_type":{"ae7cdabe":"code","ddcfce9c":"code","255709fe":"code","77c26b51":"code","3c1a7922":"code","2053f8a5":"markdown","3ce7b3e4":"markdown","51e3d2e0":"markdown","ce70965c":"markdown","5928fd69":"markdown"},"source":{"ae7cdabe":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom IPython.display import display, Markdown, Latex\nfrom bs4 import BeautifulSoup\nimport textwrap\nimport requests\nimport re\nimport ast\nimport json","ddcfce9c":"def scrap(id):\n    try:\n        r = requests.get(\"https:\/\/www.worldometers.info\/coronavirus\/country\/\"+id)\n        soup = BeautifulSoup(r.text)\n        s = soup.find(id=\"graph-active-cases-total\").next_element.next_element\n        x = re.search(\"[\\n\\r].*xAxis:\\s*(.*\\s*categories:\\s*\\[)([^]]*)\", s.text)\n        x = ast.literal_eval('['+x.group(2)+']')\n        y = re.search(\"[\\n\\r].*data:\\s*([\\[])([^]]*)\", s.text)\n        y = ast.literal_eval('['+y.group(2)+']')\n        \n        s = soup.find(id=\"coronavirus-deaths-log\").next_element.next_element.next_element.next_element.next_element.next_element\n        p = re.search(\"[\\n\\r].*xAxis:\\s*(.*\\s*categories:\\s*\\[)([^]]*)\", s.text)\n        p = ast.literal_eval('['+p.group(2)+']')\n        q = re.search(\"[\\n\\r].*data:\\s*([\\[])([^]]*)\", s.text)\n        q = ast.literal_eval('['+q.group(2)+']')\n        return x, y, p, q\n    except:\n        print(\"Error {}\".format(id))","255709fe":"countries = [\n    {\"id\" : \"china\", \"name\" : \"Tiongkok\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"south-korea\", \"name\" : \"Korea Selatan\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"italy\", \"name\" : \"Italia\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"iran\", \"name\" : \"Iran\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"spain\", \"name\" : \"Spanyol\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"germany\", \"name\" : \"Jerman\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"australia\", \"name\" : \"Australia\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"us\", \"name\" : \"Amerika Serikat\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"indonesia\", \"name\" : \"Indonesia\", \"active\" : {}, \"deaths\" :{}}\n]\njsonCountries = [\n    {\"id\" : \"china\", \"name\" : \"Tiongkok\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"south-korea\", \"name\" : \"Korea Selatan\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"italy\", \"name\" : \"Italia\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"iran\", \"name\" : \"Iran\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"spain\", \"name\" : \"Spanyol\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"germany\", \"name\" : \"Jerman\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"australia\", \"name\" : \"Australia\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"us\", \"name\" : \"Amerika Serikat\", \"active\" : {}, \"deaths\" :{}},\n    {\"id\" : \"indonesia\", \"name\" : \"Indonesia\", \"active\" : {}, \"deaths\" :{}}\n]\nfor i,country in enumerate(countries):\n    x, y, p, q = scrap(country[\"id\"])\n    jsonCountries[i][\"active\"][\"x\"] = x\n    jsonCountries[i][\"active\"][\"y\"] = y\n    jsonCountries[i][\"deaths\"][\"x\"] = p\n    jsonCountries[i][\"deaths\"][\"y\"] = q\n    \n    countries[i][\"active\"][\"x\"] = np.array(x)\n    countries[i][\"active\"][\"y\"] = np.array(y)\n    countries[i][\"deaths\"][\"x\"] = np.array(p)\n    countries[i][\"deaths\"][\"y\"] = np.array(q)\n\nwith open('countries.json', 'w') as f:\n    json.dump(jsonCountries, f)","77c26b51":"for i, country in enumerate(countries):\n    x = country[\"active\"]['x']\n    y = country[\"active\"]['y']\n    spacing = 2\n    fig, ax = plt.subplots(figsize=(16, 12))\n    ax.plot(y, 'b-', label=\"Active Cases\")\n    plt.legend(loc=\"lower right\")\n    plt.grid()\n    plt.title(country[\"name\"])\n    plt.xlabel('Date')\n    plt.ylabel('Active Cases')\n    ax.set_xticks(np.arange(len(x)))\n    ax.set_xticklabels(x)\n    plt.xticks(rotation=60)\n    for i,label in enumerate(ax.xaxis.get_ticklabels()[1::spacing]):\n        label.set_visible(False)\n    plt.show()","3c1a7922":"for i, country in enumerate(countries):\n    x = country[\"deaths\"]['x']\n    y = country[\"deaths\"]['y']\n    spacing = 2\n    fig, ax = plt.subplots(figsize=(16,12))\n    ax.plot(y, 'r-', label=\"Death Cases\")\n    plt.legend(loc=\"lower right\")\n    plt.grid()\n    plt.title(country[\"name\"])\n    plt.xlabel('Date')\n    plt.ylabel('Death Cases')\n    ax.set_xticks(np.arange(len(x)))\n    ax.set_xticklabels(x)\n    plt.xticks(rotation=60)\n    for i,label in enumerate(ax.xaxis.get_ticklabels()[1::spacing]):\n        label.set_visible(False)\n    plt.show()","2053f8a5":"# Scrapping Data","3ce7b3e4":"## Total Kematian","51e3d2e0":"## Kasus Aktif","ce70965c":"# Inisialisasi Awal","5928fd69":"# Plot Data"}}