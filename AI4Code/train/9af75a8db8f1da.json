{"cell_type":{"1e661659":"code","a76fca13":"code","db436642":"code","32d96bf9":"code","8dce91ef":"code","5a6573aa":"code","35769427":"code","3895d16f":"code","6508daa9":"markdown","a9124482":"markdown","9ec342e1":"markdown","cb4387b8":"markdown","587fa6eb":"markdown","2b2d3541":"markdown","335e07f3":"markdown","69cdad77":"markdown"},"source":{"1e661659":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport tensorflow.keras\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D\n\nimport os\nimport cv2","a76fca13":"DIR = \"..\/input\/friendshipgoals\/data\/test\"\ntest = pd.read_csv(\"..\/input\/friendshipgoals\/data\/Test.csv\")\ntest['Category'] = -1\ntest['Filename'] = test['Filename'].apply(lambda x: os.path.join(DIR, x))\ntest.head()","db436642":"train_data = ImageDataGenerator()\ntrain = train_data.flow_from_directory(\n    directory=\"..\/input\/friendshipgoals\/data\/train\/\",\n    target_size=(128, 128),\n)","32d96bf9":"model = Sequential()\nmodel.add(Conv2D(128, kernel_size=(3, 3), activation='relu', input_shape=(128, 128, 3)))\nmodel.add(MaxPooling2D())\nmodel.add(Conv2D(128, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu'))\nmodel.add(MaxPooling2D())\nmodel.add(Flatten())\nmodel.add(Dense(512, activation='relu'))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(3, activation='softmax'))\nmodel.summary()","8dce91ef":"model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\nmodel.fit_generator(\n    train,\n    epochs=35\n)","5a6573aa":"model.save(\"friendship_goal_model.h5\")","35769427":"idx2cat = {0:'Adults', 1:'Teenagers', 2:'Toddler'}\ncat = []\nfor img_name in test['Filename']:\n    img = cv2.imread(img_name)\n    img = cv2.resize(img, (128, 128))\n    cls = model.predict_classes(np.array([img])).tolist()[0]\n    cat.append(idx2cat[cls]) ","3895d16f":"new_test = pd.read_csv(\"..\/input\/friendshipgoals\/data\/Test.csv\")\nsubmission = pd.DataFrame({'Filename':new_test['Filename'], 'Category':cat})\nsubmission.to_csv(\"friendship_goals_sub.csv\", index=False)","6508daa9":"# About\nThis was my original and only approach that I submitted to the competition. Initially it got me under #100 (~ #75 rank). I might improve it since we still have 2+ days left at it. I don't know my current rank, it has it's ups and downs, so only private test set analysis will tell. ","a9124482":"Save the model","9ec342e1":"In my initial runs, I achieved complete saturation at about 35 epochs. It may vary for you depending on weights randomness, etc.","cb4387b8":"Append the complete file path to the file name in \"filename\" column so we can make a submission file.","587fa6eb":"Get the predictions and save them into submission file.","2b2d3541":"Simple model, nothing fancy here.","335e07f3":"Save submission to a csv file.","69cdad77":"Make image datagenerator for training files. No validation for now, just training."}}