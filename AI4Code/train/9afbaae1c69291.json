{"cell_type":{"9837a44a":"code","c8065c25":"code","1c260446":"code","c67ccb05":"code","099cb3ff":"code","b408d823":"code","a780ac0f":"code","97084e89":"code","dee87e33":"code","17d87cf6":"code","dfca0d62":"code","8c18a13d":"code","f9424c01":"code","a2afcdfd":"markdown","659aa208":"markdown","04bbaf3e":"markdown","6cacc8e9":"markdown","04c163a3":"markdown","185bbb1f":"markdown","7745bcad":"markdown","4e922f38":"markdown","f644423a":"markdown","28c1dd5a":"markdown"},"source":{"9837a44a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c8065c25":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1c260446":"df=pd.read_csv('..\/input\/usa-cers-dataset\/USA_cars_datasets.csv')\ndf.head()","c67ccb05":"df.drop(['Unnamed: 0','vin'],axis=1,inplace=True)\ndf.head()","099cb3ff":"df.hist()","b408d823":"plt.hist(df['price'], color = 'blue', edgecolor = 'black',bins=10)\n\n# Add labels\nplt.title('Range of prices')\nplt.xlabel('Prices')\nplt.ylabel('No. of cars')","a780ac0f":"plt.hist(df['country'], color = 'peru', edgecolor = 'black',bins=6)","97084e89":"plt.figure(figsize=(12,6))\nsns.scatterplot(x=df['price'], y=df['mileage']);","dee87e33":"sns.jointplot(x=df['price'], y=df['mileage']);","17d87cf6":"plt.figure(figsize=(12,6))\nsorted_nb = df.groupby(['brand'])['price'].median().sort_values()\nsns.boxplot(x=df['brand'], y=df['price'], order=list(sorted_nb.index))\nplt.xticks(rotation=70)\n","dfca0d62":"df['state'].value_counts().head(30).plot(kind='barh', figsize=(6,10))","8c18a13d":"plt.figure(figsize=(15,8))\nsns.countplot(df['color']);\nplt.xticks(rotation=90)","f9424c01":"#correlation map\nf,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(df.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\nplt.show()","a2afcdfd":"(We see that most of the cars, are having the price range of $10k to $20k)","659aa208":"# Now considering, how many cars originate from which country,considering our dataset.","04bbaf3e":"# Now,Lets consider the relation between the prices and the mileage given by the cars,using scatterplot.","6cacc8e9":"# #Plotting a correlation, between No. of cars, and Prices.**","04c163a3":"# The same relation,with just different representation,using Jointplots.","185bbb1f":"# If you, like the work, do upvote,also comment your views,\n# There can be many relations,which can be shown\/plotted within the features using    Matplotlib and seaborn(which I have used), but I have just sticked to basic one's.\n# # Thank-You!","7745bcad":"# Considering, How many cars,come from which state of USA, as well as Canada, we'll just take Top-30 states,for better presentation.","4e922f38":"(96-97% of cars are from Usa, while only 3-4% are from canada)","f644423a":"# Now, Lets see, Price range of various Models of cars,from the given dataset, using Seaborn Boxplot.","28c1dd5a":"# And Lastly, we'll plot the correalation Heatmap of each and every features,using Seaborn."}}