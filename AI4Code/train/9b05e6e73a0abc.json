{"cell_type":{"7384f600":"code","35c7cfc6":"code","411d8f07":"code","c33c620b":"code","a0b77da5":"code","dda48274":"code","dd99310d":"code","ec804f6a":"code","7805a4b8":"code","25553134":"code","2b08f94a":"code","0cc87abc":"code","b7ec15b9":"code","7b27c40a":"code","047b0c6d":"code","b9643c29":"code","0d9494db":"code","53f7a6d8":"code","c04c0192":"code","4f359667":"code","a6d2c2b0":"code","3b9b83ff":"code","daa7abb0":"code","44faaeaa":"code","53927bc2":"code","d1cf9077":"code","1ec66568":"code","d6befac3":"code","fae2dc7a":"code","0a2d2dec":"code","d8e18fcb":"code","642e5e37":"code","ce194019":"code","baeb7f07":"code","c0f614c6":"code","840384e5":"code","49fa7f09":"markdown","a1b74e62":"markdown"},"source":{"7384f600":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","35c7cfc6":"import numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport matplotlib.pyplot as plt\nimport seaborn as sns","411d8f07":"df = pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head(10)","c33c620b":"y = df[\"User Rating\"].value_counts()\ny.plot(kind=\"pie\")","a0b77da5":"fig = px.histogram(df, x=\"User Rating\",labels={'':'The Number of Books'},title=\"User Rating Histogram\")\nfig.show()","dda48274":"authors = df[\"Author\"].value_counts()\nauthor_times = []\nauthor_names = []\nfor i in range(len(authors)):\n    author_names.append(authors.keys()[i])\n    author_times.append(authors[i])","dd99310d":"popular_authors = pd.DataFrame({\"Author\":author_names,\"Number of Times\":author_times})\npopular_authors","ec804f6a":"df[['User Rating','Author','Name']].groupby(by=['Author','Name']).mean().sort_values(by\n=['User Rating'],ascending=False).head(10)","7805a4b8":"df[['Name','User Rating','Year']].groupby(by='Name').mean().sort_values(by=\n'User Rating',ascending=False).head(5)","25553134":"df['Name_len']=df['Name'].str.len()","2b08f94a":"px.scatter(df.sort_values(by='Year'),x='User Rating',y='Price', animation_frame='Year', color='Genre',size='Name_len', \ntitle=\"Over all book Rating & Price by every year\")","0cc87abc":"!pip install sweetviz","b7ec15b9":"import sweetviz as sv\nsweet_report = sv.analyze(df)\nsweet_report.show_html('sweet_report.html')","7b27c40a":"df.Price.plot(kind = 'hist',bins = 50,figsize = (10,4))\nplt.show()","047b0c6d":"year = [2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]\nnum_fic= []\nfor i in year:\n    fic = df[(df[\"Year\"] == i) & (df[\"Genre\"] == \"Fiction\")]\n    num_fic.append(len(fic))\ndf_fict = pd.DataFrame({\"Year\": year,\"numberofFiction\": num_fic})\ndf_fict.head()","b9643c29":"year = [2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019]\nnum_nonfic= []\nfor i in year:\n    nonfic = df[(df[\"Year\"] == i) & (df[\"Genre\"] == \"Non Fiction\")]\n    num_nonfic.append(len(nonfic))\ndf_nonfict = pd.DataFrame({\"Year\": year,\"numberofNonFiction\": num_nonfic})\ndf_nonfict.head()","0d9494db":"df_nonfict[\"numberofFiction\"] = df_fict[\"numberofFiction\"]\ndf_nonfict.head()","53f7a6d8":"df_genre = df_nonfict.copy()\ndf_genre.head()","c04c0192":"plt.style.use(\"ggplot\")\nplt.figure(figsize=(16,5))\nplt.subplot(1,2,1)\nplt.bar(x = df_genre[\"Year\"],height=df_genre[\"numberofNonFiction\"],)\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofNonFiction\"],\"go-\")\n#plt.plot(df_genre[\"Year\"],df_genre[\"numberofFiction\"],\"bo-\")\nplt.title(\"Trend of having NonFiction on BestSeller Books List(2009-2019)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"No. of NonFiction published\")\n\nplt.subplot(1,2,2)\nplt.bar(x = df_genre[\"Year\"],height=df_genre[\"numberofFiction\"],)\nplt.plot(df_genre[\"Year\"],df_genre[\"numberofFiction\"],\"bo-\")\nplt.title(\"Trend of Having Fiction on BestSeller Books List(2009-2019)\")\nplt.xlabel(\"Year\")\nplt.ylabel(\"No. of Fiction published\")\nplt.show()","4f359667":"df.info()","a6d2c2b0":"df.isnull().sum()","3b9b83ff":"#statistics\ndf.describe()","daa7abb0":"#no of rows and columns\ndf.shape","44faaeaa":"df.head()","53927bc2":"#check correlation and plot heatmap \ncorrelation = df.corr()\nplt.figure(figsize = (10,6))\nsns.heatmap(correlation,annot=True)\nplt.show()","d1cf9077":"df['Name'].value_counts()","1ec66568":"from sklearn.preprocessing import LabelEncoder\n\ndf = df.copy(deep = True)\nLE = LabelEncoder()\ndf['Genre'] = LE.fit_transform(df['Genre'])","d6befac3":"df['Author'] = LE.fit_transform(df['Author'])\ndf['Name'] = LE.fit_transform(df['Name'])","fae2dc7a":"df.head()","0a2d2dec":"X=df.drop(['User Rating'],axis=1)\ny=df[['User Rating']]","d8e18fcb":"X.head()","642e5e37":"y.head()","ce194019":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=8)","baeb7f07":"from catboost import CatBoostRegressor\nCB = CatBoostRegressor(iterations=603,\n                          learning_rate=0.35,\n                          depth=8)\nCB.fit(X_train,y_train)","c0f614c6":"y_pred=CB.predict(X_test)","840384e5":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(y_test, y_pred))\nrmse","49fa7f09":"#### Executing SweetViz will save a html file of the Automated visualizations, which you can download from the Kaggle Output files!","a1b74e62":"### Conclusion:\n* About 180 books have a rating of 4.8 or 4.9.\n* In the meantime, the rating of 9 books is less than 4.0."}}