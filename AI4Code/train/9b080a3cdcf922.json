{"cell_type":{"15d427ab":"code","354d9b17":"code","3fd00146":"code","1ac0e530":"code","dfe61953":"code","f88118a2":"code","b7145d80":"code","0bbedec2":"code","4661b5a2":"code","dc0935a5":"code","12a26a88":"code","a725eadc":"code","6b328612":"code","b455edbd":"code","14178044":"code","760639fb":"code","b382d134":"code","7567c4e7":"code","902bc195":"code","3327161c":"code","8fa2148e":"code","e899b967":"code","85f8d42a":"code","432ca18f":"code","5af21378":"code","d8c3eb90":"code","bde5ebfb":"code","d337dd9f":"code","6bd43adf":"code","628af6c5":"code","95f1aa76":"code","e7e61f68":"code","d72771df":"code","943bb409":"code","a55fcd96":"code","2303a4ab":"code","99afc38c":"markdown","b47a82bf":"markdown","73b5b250":"markdown","6d7d0869":"markdown","0560ed1c":"markdown","f12a26fb":"markdown","f22de0d9":"markdown","4ba10b38":"markdown","e02054d7":"markdown","e7ad4431":"markdown"},"source":{"15d427ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","354d9b17":"import pandas as pd\nfrom sklearn.preprocessing import MinMaxScaler\n!pip install openpyxl\n\npd.set_option('display.max_columns', 20)\npd.set_option('display.max_rows', 20)\npd.set_option('display.float_format', lambda x: '%.3f' % x)","3fd00146":"df_ = pd.read_excel(\"\/kaggle\/input\/uci-online-retail-ii-data-set\/online_retail_II.xlsx\", \n                    sheet_name=\"Year 2009-2010\")\ndf = df_.copy()\ndf.head()","1ac0e530":"#boyut bilgisini g\u00f6rme\ndf.count()\n#525K","dfe61953":"#iptal edilen i\u015flemleri g\u00f6rmek\ndf[df[\"Invoice\"].str.contains(\"C\", na=False)].head()","f88118a2":"#iptal edilenlerin say\u0131s\u0131\ndf[df[\"Invoice\"].str.contains(\"C\", na=False)].count() \n#10k","b7145d80":"# cancel-iptal edilen \u00e7\u0131kartal\u0131m.\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\n","0bbedec2":"#iptal edildikten sonraki say\u0131\ndf[\"Invoice\"].count()\n#515K","4661b5a2":"# hediye edilen, \u00fccretz verilen ggenel bir resmi g\u00f6relim.\ndf[(df['Quantity'] <0)].head()","dc0935a5":"# hediye edilen, \u00fccretz verilen \ndf[(df['Quantity'] <0)].count()\n\n# 12 bin","12a26a88":"# miktar\u0131 eksi - olanlar\u0131 \u00e7\u0131kartma\ndf = df[(df['Quantity'] > 0)]\ndf.count()","a725eadc":"# eksik de\u011fer var m\u0131?\n#Eksik verilerin toplam\u0131\ndf.isnull().sum()","6b328612":"# eksik de\u011ferlerin \u00e7\u0131kart\u0131lmas\u0131\ndf.dropna(inplace = True)","b455edbd":"#Eksik veriler kald\u0131 m\u0131?\ndf.isnull().sum()","14178044":"df.head()","760639fb":"# adet * fiyat\u0131= faturadaki toplam bedel.\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\ndf.head()","b382d134":"\ncltv_c = df.groupby('Customer ID').agg({'Invoice': lambda x: x.nunique(),# e\u015fisiz fatura say\u0131s\u0131,  \n                                        'Quantity': lambda x: x.sum(), #miktarlardaki toplam\n                                        'TotalPrice': lambda x: x.sum()}) # fatular\u0131n\u0131n toplam\u0131n\u0131n toplam\u0131\n\ncltv_c.head()","7567c4e7":"# de\u011fi\u015fkenleri yeniden adlard\u0131rd\u0131k. \n# transaction: i\u015flem say\u0131c\u0131, \u00f6nemli olan budur.RFM de recency \ncltv_c.columns = ['total_transaction', 'total_unit', 'total_price']\n\ncltv_c.head()","902bc195":"# i\u015flem ba\u015f\u0131na ortalama kazan\u00e7\ncltv_c['avg_order_value'] = cltv_c['total_price'] \/ cltv_c['total_transaction']\ncltv_c.head()","3327161c":"#i\u015flem bai\u0131na ortalam kazan\u00e7lar\u0131 s\u0131rala\ncltv_c.head().sort_values(\"avg_order_value\", ascending= False)","8fa2148e":"\ncltv_c[\"purchase_frequency\"] = cltv_c['total_transaction'] \/ cltv_c.shape[0]\ncltv_c.head()","e899b967":"# birden fazla i\u015flem yapan oran\n\nrepeat_rate = cltv_c[cltv_c.total_transaction > 1].shape[0] \/ cltv_c.shape[0]  \nrepeat_rate","85f8d42a":"churn_rate = 1 - repeat_rate\nchurn_rate #bazen retention g\u00f6r\u00fcrsen\u00fcz, m\u00fc\u015fteriyi elde tutma oran\u0131","432ca18f":"# bu m\u00fc\u015ftaeri bana ne kadar getirmi\u015f. \n# bana k\u00e2r\u0131 nedir?\ncltv_c['profit_margin'] = cltv_c['total_price'] * 0.10\n\ncltv_c.head()\n","5af21378":"#m\u00fc\u015fterinin de\u011feri nedir?\n\ncltv_c['customer_value'] = cltv_c['avg_order_value'] * cltv_c[\"purchase_frequency\"]\ncltv_c.head()","d8c3eb90":"# customer life time value\ncltv_c['cltv'] = (cltv_c['customer_value'] \/ churn_rate) * cltv_c['profit_margin']\ncltv_c.head()","bde5ebfb":"# standartla\u015ft\u0131rma i\u015flemi, 0-1 aras\u0131nda\n\n#d\u00f6n\u00fc\u015ft\u00fcrme\nscaler = MinMaxScaler(feature_range=(0, 1))\n","d337dd9f":"scaler.fit(cltv_c[[\"cltv\"]])","6bd43adf":"cltv_c[\"scaled_cltv\"] = scaler.transform(cltv_c[[\"cltv\"]])\ncltv_c.head()","628af6c5":"#\ncltv_c.sort_values(by=\"scaled_cltv\", ascending=False).head()\n# standartla\u015ft\u0131rma i\u015flemi yapmayabilirsiniz.\n#kime odaklanacaks\u0131n? hangi y\u00fczde 20 cltv bu i\u015flemlerin %80 olu\u015fturuyor?\n\n#potansiyel getiri, kesin de\u011fil. \n#promosyonu neye g\u00f6re da\u011f\u0131taca\u011f\u0131m?\n# nas\u0131l bir indirim vereyim?\n","95f1aa76":"# k\u00fc\u00e7\u00fck olana D\n# B\u00fcy\u00fck olana A\n# qcut ile otomatik yapt\u0131k.\ncltv_c[\"segment\"] = pd.qcut(cltv_c[\"scaled_cltv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\ncltv_c.head()","e7e61f68":"cltv_c[[\"total_transaction\", \"total_unit\", \"total_price\", \"cltv\", \"scaled_cltv\"]].sort_values(by=\"scaled_cltv\",\n                                                                                              ascending=False).head()","d72771df":"cltv_c.groupby(\"segment\")[[\"total_transaction\", \"total_unit\", \"total_price\", \"cltv\", \"scaled_cltv\"]].agg(\n    {\"count\", \"mean\", \"sum\"})\n# segmentler do\u011fru m\u0131?\n# cltv i\u00e7e\u011fi ka\u00e7ta ka\u00e7\u0131 g\u00f6t\u00fcyor?\n#segmentlere g\u00f6re nas\u0131l  bir pazarlama ayarlyal\u0131m? \n# Neftlix, 60 tl kredi, kart y\u0131ll\u0131k \u00fccreti iadesi, kargo iadesi, \n# puan verilmesi, ek par\u00e7a\u00e7\u0131k, mail g\u00f6nderme, pop-up \u00e7\u0131kmas\u0131","943bb409":"\n\ndef create_cltv_c(dataframe, profit=0.10):\n\n    # Veriyi haz\u0131rlama\n    dataframe = dataframe[~dataframe[\"Invoice\"].str.contains(\"C\", na=False)]\n    dataframe = dataframe[(dataframe['Quantity'] > 0)]\n    dataframe.dropna(inplace=True)\n    dataframe[\"TotalPrice\"] = dataframe[\"Quantity\"] * dataframe[\"Price\"]\n    cltv_c = dataframe.groupby('Customer ID').agg({'Invoice': lambda x: x.nunique(),\n                                                   'Quantity': lambda x: x.sum(),\n                                                   'TotalPrice': lambda x: x.sum()})\n    cltv_c.columns = ['total_transaction', 'total_unit', 'total_price']\n\n    # avg_order_value\n    cltv_c['avg_order_value'] = cltv_c['total_price'] \/ cltv_c['total_transaction']\n\n    # purchase_frequency\n    cltv_c[\"purchase_frequency\"] = cltv_c['total_transaction'] \/ cltv_c.shape[0]\n\n    # repeat rate & churn rate\n    repeat_rate = cltv_c[cltv_c.total_transaction > 1].shape[0] \/ cltv_c.shape[0]\n    churn_rate = 1 - repeat_rate\n\n    # profit_margin\n    cltv_c['profit_margin'] = cltv_c['total_price'] * profit\n\n    # Customer Value\n    cltv_c['customer_value'] = (cltv_c['avg_order_value'] * cltv_c[\"purchase_frequency\"])\n\n    # Customer Lifetime Value\n    cltv_c['cltv'] = (cltv_c['customer_value'] \/ churn_rate) * cltv_c['profit_margin']\n\n    scaler = MinMaxScaler(feature_range=(0, 1))\n    scaler.fit(cltv_c[[\"cltv\"]])\n    cltv_c[\"scaled_cltv\"] = scaler.transform(cltv_c[[\"cltv\"]])\n\n    # Segment\n    cltv_c[\"segment\"] = pd.qcut(cltv_c[\"scaled_cltv\"], 4, labels=[\"D\", \"C\", \"B\", \"A\"])\n\n    return cltv_c","a55fcd96":"df = df_.copy()\ndf.head()","2303a4ab":"cc = create_cltv_c(df)\ncc.head()","99afc38c":"##################################################\n# 3. Purchase Frequency (total_transaction \/ total_number_of_customers)\n##################################################","b47a82bf":"############################################\n# CUSTOMER LIFETIME VALUE\n############################################\n1. Veri Haz\u0131rlama\n2. Average Order Value (average_order_value = total_price \/ total_transaction)\n3. Purchase Frequency (total_transaction \/ total_number_of_customers)\n4. Repeat Rate & Churn Rate (birden fazla al\u0131\u015fveri\u015f yapan m\u00fc\u015fteri say\u0131s\u0131 \/ t\u00fcm m\u00fc\u015fteriler)\n5. Profit Margin (profit_margin =  total_price * 0.10)\n6. Customer Value (customer_value = average_order_value * purchase_frequency)\n7. Customer Lifetime Value (CLTV = (customer_value \/ churn_rate) x profit_margin)\n8. Segmentlerin Olu\u015fturulmas\u0131","73b5b250":"##################################################\n# BONUS: T\u00fcm \u0130\u015flemlerin Fonksiyonla\u015ft\u0131r\u0131lmas\u0131\n##################################################","6d7d0869":"##################################################\n# 4. Repeat Rate & Churn Rate (birden fazla al\u0131\u015fveri\u015f yapan m\u00fc\u015fteri say\u0131s\u0131 \/ t\u00fcm m\u00fc\u015fteriler)\n##################################################","0560ed1c":"##################################################\n# 2. Average Order Value (average_order_value = total_price \/ total_transaction)\n##################################################\n\nfatura ba\u015f\u0131 ortalamam de\u011fer","f12a26fb":"##################################################\n# 8. Segmentlerin Olu\u015fturulmas\u0131\n##################################################","f22de0d9":"##################################################\n# 5. Profit Margin (profit_margin =  total_price * 0.10)\n##################################################","4ba10b38":"##################################################\n# 1. Veri Haz\u0131rlama\n##################################################","e02054d7":"##################################################\n# 7. Customer Lifetime Value (CLTV = (customer_value \/ churn_rate) x profit_margin)\n##################################################\n","e7ad4431":"##################################################\n# 6. Customer Value (customer_value = average_order_value * purchase_frequency)\n##################################################"}}