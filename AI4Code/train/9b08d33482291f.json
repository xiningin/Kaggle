{"cell_type":{"e9d1e918":"code","c776679e":"code","391827c4":"code","9988e395":"code","a85c6c28":"code","9bf1cb1f":"code","746b8598":"code","f6fcd0a5":"code","28276ce0":"code","790e1d32":"code","5ddc5cf4":"code","9f07bbd6":"code","007a4c56":"code","b15f2901":"code","645aae3d":"code","2cf320e5":"code","fa16ec07":"code","444818c5":"code","9e8bf24e":"code","a73364fa":"code","6c6858ec":"code","52cc5c2a":"code","d701563a":"code","bfb34f88":"code","1755328a":"code","deed273c":"code","6efccdba":"code","a61aaf88":"code","6b45d2ee":"code","638835b3":"code","0062eeb3":"code","54f14165":"code","813e4cc9":"code","fce473be":"code","70ed4531":"code","fd355fa3":"code","826e5fc6":"code","da5f15fe":"code","2d36a3d7":"code","2921bee1":"code","eecefcd7":"code","de98051a":"code","1da4fd50":"code","c682b1a0":"code","2fce4198":"code","5d6a68bd":"code","54126a3a":"code","21c1d141":"code","ba8839eb":"code","72f4b467":"code","d5c48691":"code","04b6ebad":"code","91989075":"code","a3aece0a":"code","8d77b7fb":"code","f92fe99d":"code","f466681e":"code","622cbb1f":"code","440402d3":"code","f5ce6dfb":"code","1d064ed0":"code","a2b922e7":"code","a40ab514":"code","56975b50":"code","52565a76":"code","0951d73d":"code","0683f2b4":"code","72bdfad1":"code","8cb048b0":"code","bb9aa1f1":"code","06f25087":"code","f0ba9090":"code","d846ae0f":"code","adc6b116":"code","2a97a68a":"code","e6202dc3":"code","d1efb354":"code","6a8d01cb":"code","18df3fba":"code","eeea4c82":"code","f10c6c1f":"code","e08ad0bf":"code","996ffddc":"code","2b3609cc":"code","53c8f392":"code","72c91267":"code","7f68f6df":"code","edd56181":"code","9315d20d":"code","3a95336f":"code","4dbb14bd":"code","c401e3c1":"code","8342af8d":"code","b0e35dff":"code","4fcc3345":"code","f16e5a5a":"code","8fad7793":"code","b5cb01b5":"code","74efdae6":"code","cb55d20c":"code","1ce22af6":"code","25c43309":"code","b96115ca":"code","ddec484e":"code","b0c5678c":"code","2086f85e":"code","00694534":"code","f0406a5f":"code","d3bc6914":"code","160619b7":"code","53e63829":"code","b0803f26":"code","57f5dc7a":"code","3295c67d":"code","7ebb58c3":"code","91adfc07":"code","c751e54e":"code","f12ad24c":"code","0c62454c":"code","f820f637":"code","d1993ce7":"code","3cb01d5b":"markdown","0e597910":"markdown","9e533acf":"markdown","c61f7be6":"markdown","849b2086":"markdown","f22788f5":"markdown","59f9e179":"markdown","ca3ffd55":"markdown","af682bcc":"markdown","abb35334":"markdown","ec386a6b":"markdown","bfcf4a20":"markdown","b528df58":"markdown","e95d9114":"markdown","0f44f05c":"markdown","a9e4328d":"markdown","4910cacc":"markdown","b20795de":"markdown","f73cc120":"markdown","f4f4e7f7":"markdown","996caa4f":"markdown","85f21e9e":"markdown","252d7031":"markdown","16492ef7":"markdown","8f9ad518":"markdown","2e5353f5":"markdown","c9630d8e":"markdown","3729e959":"markdown","23e1f9f5":"markdown","d1a5ed7a":"markdown","91cdd2b9":"markdown","db1faac7":"markdown","2592703b":"markdown","2bc623ed":"markdown","394afa99":"markdown","2009a107":"markdown","fef9c6cc":"markdown","c999d790":"markdown","15b533c5":"markdown","6fe76e5c":"markdown","fbc2e586":"markdown","ae8d60ad":"markdown","4744c5b2":"markdown","d21464b9":"markdown","a700ca85":"markdown","bda19819":"markdown"},"source":{"e9d1e918":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import linear_model\nfrom sklearn import svm\nfrom sklearn.ensemble import AdaBoostRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom lightgbm import LGBMRegressor\nfrom xgboost import XGBRegressor\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import preprocessing\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.preprocessing import Imputer\nimport seaborn as sns\n\n\n%matplotlib inline","c776679e":"show_holiday=pd.read_excel('..\/input\/holidays.xlsx')","391827c4":"show_holiday.head()","9988e395":"show_promotional=pd.read_csv('..\/input\/promotional_expense.csv')","a85c6c28":"show_promotional.head()","9bf1cb1f":"promo=pd.read_csv('..\/input\/promotional_expense.csv')","746b8598":"data=pd.read_csv('..\/input\/yds_train2018.csv')","f6fcd0a5":"data=data.drop(['S_No'],axis=1)","28276ce0":"data.head()","790e1d32":"data.iloc[1]","5ddc5cf4":"mod_data=data.groupby(['Year','Month','Product_ID','Country'])['Sales'].sum()","9f07bbd6":"mod_data=mod_data.reset_index()","007a4c56":"mod_data.head()","b15f2901":"promo.head()","645aae3d":"new=mod_data.merge(promo,left_on=['Year','Month','Product_ID','Country'],\n                   right_on=['Year','Month','Product_Type','Country'],\n                  how='left')","2cf320e5":"new['Expense_Price'].shape","fa16ec07":"# imp=Imputer(missing_values='NaN',strategy='mean',axis=0)\n# new['Expense_Price']=imp.fit_transform([new['Expense_Price']])\nnew['Expense_Price'].fillna(new['Expense_Price'].mean(),inplace=True)","444818c5":"holidays=pd.read_excel('..\/input\/holidays.xlsx',parse_dates=['Date'])","9e8bf24e":"holidays.head()","a73364fa":"holidays['Date'][0].year","6c6858ec":"holidays['Year']=holidays['Date'].map(lambda x: x.year)","52cc5c2a":"holidays['Month']=holidays['Date'].map(lambda x: x.month)","d701563a":"holidays=holidays.drop(['Date'],axis=1)","bfb34f88":"holidays.head()","1755328a":"holiday_new=holidays.groupby(['Year','Month','Country'])['Holiday'].count()","deed273c":"holiday_new=holiday_new.reset_index()","6efccdba":"new=new.drop(['Product_Type'],axis=1)","a61aaf88":"new.head()","6b45d2ee":"calc=new.merge(holiday_new,on=['Year','Month','Country'],\n              how='left')","638835b3":"calc.head()","0062eeb3":"calc['Holiday'].fillna(0,inplace=True)","54f14165":"calc.shape","813e4cc9":"mod_data=calc","fce473be":"mod_data.head()","70ed4531":"mod_data.columns","fd355fa3":"plt.plot(mod_data['Sales'],mod_data['Expense_Price'])","826e5fc6":"plt.plot(mod_data['Sales'],mod_data['Holiday'])","da5f15fe":"features=['Year', 'Month', 'Product_ID', 'Country', 'Sales', 'Expense_Price',\n       'Holiday']\nsns.heatmap(mod_data[features].corr(), linewidths=0.25, vmax=1.0, square=True, cmap=\"BuGn_r\", linecolor='k', annot=True)","2d36a3d7":"mod_data['Country'].unique()","2921bee1":"argentina=mod_data.loc[mod_data['Country']=='Argentina']\nbelgium=mod_data.loc[mod_data['Country']=='Belgium']\ncolumbia=mod_data.loc[mod_data['Country']=='Columbia']\ndenmark=mod_data.loc[mod_data['Country']=='Denmark']\nengland=mod_data.loc[mod_data['Country']=='England']\nfinland=mod_data.loc[mod_data['Country']=='Finland']","eecefcd7":"argentina.head()","de98051a":"argentina.drop(['Country'],inplace=True,axis=1)\nbelgium.drop(['Country'],inplace=True,axis=1)\ncolumbia.drop(['Country'],inplace=True,axis=1)\ndenmark.drop(['Country'],inplace=True,axis=1)\nengland.drop(['Country'],inplace=True,axis=1)\nfinland.drop(['Country'],inplace=True,axis=1)","1da4fd50":"qalg_ar1=linear_model.LinearRegression() #For Argentina 3 prod id that is 1,2,3\nqalg_ar2=linear_model.LinearRegression()\nqalg_ar3=linear_model.LinearRegression()\n\nqalg_bl2=linear_model.LinearRegression() #For Belgium 1 prod id that is 2\n\nqalg_co1=linear_model.LinearRegression() #for columbia 3 prod id that is 1,2,3\nqalg_co2=linear_model.LinearRegression()\nqalg_co3=linear_model.LinearRegression()\n\nqalg_dn2=linear_model.LinearRegression() #For Denmark 1 prod id that is 2\n\nqalg_fn4=linear_model.LinearRegression() #For Finland 1 prod id that is 4\n\n\nqalg_en4=linear_model.LinearRegression() #For England 2 prod id that is 4,5\nqalg_en5=linear_model.LinearRegression()\n\nAdaBoostRegressor(n_estimators=100)\n","c682b1a0":"walg_ar1=AdaBoostRegressor(n_estimators=100) #For Argentina 3 prod id that is 1,2,3\nwalg_ar2=AdaBoostRegressor(n_estimators=100)\nwalg_ar3=AdaBoostRegressor(n_estimators=100)\n\nwalg_bl2=AdaBoostRegressor(n_estimators=100) #For Belgium 1 prod id that is 2\n\nwalg_co1=AdaBoostRegressor(n_estimators=100) #for columbia 3 prod id that is 1,2,3\nwalg_co2=AdaBoostRegressor(n_estimators=100)\nwalg_co3=AdaBoostRegressor(n_estimators=100)\n\nwalg_dn2=AdaBoostRegressor(n_estimators=100) #For Denmark 1 prod id that is 2\n\nwalg_fn4=AdaBoostRegressor(n_estimators=100) #For Finland 1 prod id that is 4\n\n\nwalg_en4=AdaBoostRegressor(n_estimators=100) #For England 2 prod id that is 4,5\nwalg_en5=AdaBoostRegressor(n_estimators=100)\n\n\n\n","2fce4198":"ealg_ar1=XGBRegressor() #For Argentina 3 prod id that is 1,2,3\nealg_ar2=XGBRegressor()\nealg_ar3=XGBRegressor()\n\nealg_bl2=XGBRegressor() #For Belgium 1 prod id that is 2\n\nealg_co1=XGBRegressor() #for columbia 3 prod id that is 1,2,3\nealg_co2=XGBRegressor()\nealg_co3=XGBRegressor()\n\nealg_dn2=XGBRegressor() #For Denmark 1 prod id that is 2\n\nealg_fn4=XGBRegressor() #For Finland 1 prod id that is 4\n\n\nealg_en4=XGBRegressor() #For England 2 prod id that is 4,5\nealg_en5=XGBRegressor()\n# XGBRegressor()\n\n\n","5d6a68bd":"ralg_ar1=linear_model.Lasso(alpha=0.1) #For Argentina 3 prod id that is 1,2,3\nralg_ar2=linear_model.Lasso(alpha=0.1)\nralg_ar3=linear_model.Lasso(alpha=0.1)\n\nralg_bl2=linear_model.Lasso(alpha=0.1) #For Belgium 1 prod id that is 2\n\nralg_co1=linear_model.Lasso(alpha=0.1) #for columbia 3 prod id that is 1,2,3\nralg_co2=linear_model.Lasso(alpha=0.1)\nralg_co3=linear_model.Lasso(alpha=0.1)\n\nralg_dn2=linear_model.Lasso(alpha=0.1) #For Denmark 1 prod id that is 2\n\nralg_fn4=linear_model.Lasso(alpha=0.1) #For Finland 1 prod id that is 4\n\n\nralg_en4=linear_model.Lasso(alpha=0.1) #For England 2 prod id that is 4,5\nralg_en5=linear_model.Lasso(alpha=0.1)\n\n\n","54126a3a":"argentina['Product_ID'].unique()","21c1d141":"ar_pd1=argentina[argentina['Product_ID']==1]\nar_pd2=argentina[argentina['Product_ID']==2]\nar_pd3=argentina[argentina['Product_ID']==3]\n\n\nar_pd1.drop(['Product_ID'],axis=1,inplace=True)\nar_pd2.drop(['Product_ID'],axis=1,inplace=True)\nar_pd3.drop(['Product_ID','Expense_Price'],axis=1,inplace=True)","ba8839eb":"ar_pd1_feat=ar_pd1.drop(['Sales'],axis=1)\nar_pd2_feat=ar_pd2.drop(['Sales'],axis=1)\nar_pd3_feat=ar_pd3.drop(['Sales'],axis=1)\n\n\nar_pd1_label=ar_pd1['Sales']\nar_pd2_label=ar_pd2['Sales']\nar_pd3_label=ar_pd3['Sales']","72f4b467":"ar_pd1_feat.head()","d5c48691":"qalg_ar1.fit(ar_pd1_feat,ar_pd1_label)\nqalg_ar2.fit(ar_pd2_feat,ar_pd2_label)\nqalg_ar3.fit(ar_pd3_feat,ar_pd3_label)\n\nwalg_ar1.fit(ar_pd1_feat,ar_pd1_label)\nwalg_ar2.fit(ar_pd2_feat,ar_pd2_label)\nwalg_ar3.fit(ar_pd3_feat,ar_pd3_label)\n\nealg_ar1.fit(ar_pd1_feat,ar_pd1_label)\nealg_ar2.fit(ar_pd2_feat,ar_pd2_label)\nealg_ar3.fit(ar_pd3_feat,ar_pd3_label)\n\nralg_ar1.fit(ar_pd1_feat,ar_pd1_label)\nralg_ar2.fit(ar_pd2_feat,ar_pd2_label)\nralg_ar3.fit(ar_pd3_feat,ar_pd3_label)","04b6ebad":"belgium['Product_ID'].unique()","91989075":"belgium=belgium.drop(['Product_ID'],axis=1)","a3aece0a":"belgium.columns","8d77b7fb":"belgium.head()","f92fe99d":"bel_feat=belgium.drop(['Sales'],axis=1)\n\nbel_label=belgium['Sales']","f466681e":"qalg_bl2.fit(bel_feat,bel_label)\nwalg_bl2.fit(bel_feat,bel_label)\nealg_bl2.fit(bel_feat,bel_label)\nralg_bl2.fit(bel_feat,bel_label)","622cbb1f":"columbia['Product_ID'].unique()","440402d3":"co_pd1=columbia[columbia['Product_ID']==1]\nco_pd2=columbia[columbia['Product_ID']==2]\nco_pd3=columbia[columbia['Product_ID']==3]\n\n\nco_pd1.drop(['Product_ID'],axis=1,inplace=True)\nco_pd2.drop(['Product_ID'],axis=1,inplace=True)\nco_pd3.drop(['Product_ID','Expense_Price'],axis=1,inplace=True)","f5ce6dfb":"co_pd1_feat=co_pd1.drop(['Sales'],axis=1)\nco_pd2_feat=co_pd2.drop(['Sales'],axis=1)\nco_pd3_feat=co_pd3.drop(['Sales'],axis=1)\n\n\nco_pd1_label=co_pd1['Sales']\nco_pd2_label=co_pd2['Sales']\nco_pd3_label=co_pd3['Sales']","1d064ed0":"qalg_co1.fit(co_pd1_feat,co_pd1_label)\nqalg_co2.fit(co_pd2_feat,co_pd2_label)\nqalg_co3.fit(co_pd3_feat,co_pd3_label)\n\nwalg_co1.fit(co_pd1_feat,co_pd1_label)\nwalg_co2.fit(co_pd2_feat,co_pd2_label)\nwalg_co3.fit(co_pd3_feat,co_pd3_label)\n\nealg_co1.fit(co_pd1_feat,co_pd1_label)\nealg_co2.fit(co_pd2_feat,co_pd2_label)\nealg_co3.fit(co_pd3_feat,co_pd3_label)\n\nralg_co1.fit(co_pd1_feat,co_pd1_label)\nralg_co2.fit(co_pd2_feat,co_pd2_label)\nralg_co3.fit(co_pd3_feat,co_pd3_label)","a2b922e7":"denmark['Product_ID'].unique()","a40ab514":"denmark.drop(['Product_ID'],axis=1,inplace=True)","56975b50":"denmark.head()","52565a76":"den_pd2_feat=denmark.drop(['Sales'],axis=1)\n\nden_pd2_label=denmark['Sales']","0951d73d":"qalg_dn2.fit(den_pd2_feat,den_pd2_label)\n\nwalg_dn2.fit(den_pd2_feat,den_pd2_label)\n\nealg_dn2.fit(den_pd2_feat,den_pd2_label)\n\nralg_dn2.fit(den_pd2_feat,den_pd2_label)","0683f2b4":"finland['Product_ID'].unique()","72bdfad1":"finland.head()","8cb048b0":"finland=finland.drop(['Product_ID'],axis=1)","bb9aa1f1":"fn_pd4_feat=finland.drop(['Sales'],axis=1)\n\nfn_pd4_label=finland['Sales']","06f25087":"qalg_fn4.fit(fn_pd4_feat,fn_pd4_label)\n\nwalg_fn4.fit(fn_pd4_feat,fn_pd4_label)\n\nealg_fn4.fit(fn_pd4_feat,fn_pd4_label)\n\nralg_fn4.fit(fn_pd4_feat,fn_pd4_label)","f0ba9090":"england['Product_ID'].unique()","d846ae0f":"en_pd4=england[england['Product_ID']==4]\nen_pd4=en_pd4.drop(['Product_ID'],axis=1)\n\nen_pd5=england[england['Product_ID']==5]\nen_pd5=en_pd5.drop(['Product_ID'],axis=1)\n\n","adc6b116":"en_pd4.head()","2a97a68a":"en_pd4_feat=en_pd4.drop(['Sales'],axis=1)\nen_pd5_feat=en_pd5.drop(['Sales'],axis=1)\n\nen_pd4_label=en_pd4['Sales']\nen_pd5_label=en_pd5['Sales']","e6202dc3":"qalg_en4.fit(en_pd4_feat,en_pd4_label)\nqalg_en5.fit(en_pd5_feat,en_pd5_label)\n\nwalg_en4.fit(en_pd4_feat,en_pd4_label)\nwalg_en5.fit(en_pd5_feat,en_pd5_label)\n\nealg_en4.fit(en_pd4_feat,en_pd4_label)\nealg_en5.fit(en_pd5_feat,en_pd5_label)\n\nralg_en4.fit(en_pd4_feat,en_pd4_label)\nralg_en5.fit(en_pd5_feat,en_pd5_label)","d1efb354":"final_jest=pd.read_csv('..\/input\/yds_test2018.csv')\ncombine=pd.read_csv('..\/input\/yds_test2018.csv')","6a8d01cb":"final_jest.head()","18df3fba":"final_jest_new=final_jest.merge(promo,left_on=['Year','Month','Product_ID','Country'],\n                   right_on=['Year','Month','Product_Type','Country'],\n                  how='left')","eeea4c82":"final_jest_new.shape\nfinal_jest_new['Expense_Price'].fillna(final_jest_new['Expense_Price'].mean,inplace=True)","f10c6c1f":"final_jest_update=final_jest_new.merge(holiday_new,on=['Year','Month','Country'],\n              how='left')","e08ad0bf":"final_jest_update['Holiday'].fillna(0,inplace=True)","996ffddc":"final_jest_update.head()","2b3609cc":"# mod_data=data.groupby(['Year','Month','Product_ID','Country'])['Sales'].stes\ntest_data=final_jest_update.drop(['S_No'],axis=1)\n","53c8f392":"# test_data=test_data.reset_index()\ntest_data.head()","72c91267":"test_data['Country'].unique()","7f68f6df":"targentina=test_data.loc[test_data['Country']=='Argentina']\ntbelgium=test_data.loc[test_data['Country']=='Belgium']\ntcolumbia=test_data.loc[test_data['Country']=='Columbia']\ntdenmark=test_data.loc[test_data['Country']=='Denmark']\ntengland=test_data.loc[test_data['Country']=='England']\ntfinland=test_data.loc[test_data['Country']=='Finland']","edd56181":"targentina.head()","9315d20d":"targentina.head()","3a95336f":"targentina.drop(['Country'],inplace=True,axis=1)\ntbelgium.drop(['Country'],inplace=True,axis=1)\ntcolumbia.drop(['Country'],inplace=True,axis=1)\ntdenmark.drop(['Country'],inplace=True,axis=1)\ntengland.drop(['Country'],inplace=True,axis=1)\ntfinland.drop(['Country'],inplace=True,axis=1)","4dbb14bd":"targentina['Product_ID'].unique()","c401e3c1":"tar_pd1=targentina[targentina['Product_ID']==1]\ntar_pd2=targentina[targentina['Product_ID']==2]\ntar_pd3=targentina[targentina['Product_ID']==3]\n\n\ntar_pd1.drop(['Product_ID','Product_Type'],axis=1,inplace=True)\ntar_pd2.drop(['Product_ID','Product_Type'],axis=1,inplace=True)\ntar_pd3.drop(['Product_ID','Expense_Price','Product_Type'],axis=1,inplace=True)","8342af8d":"ar_pd1_feat.shape","b0e35dff":"tar_pd1_feat=tar_pd1.drop(['Sales'],axis=1)\ntar_pd2_feat=tar_pd2.drop(['Sales'],axis=1)\ntar_pd3_feat=tar_pd3.drop(['Sales'],axis=1)\n\n\ntar_pd1_label=0.55*qalg_ar1.predict(tar_pd1_feat)+0.45*walg_ar1.predict(tar_pd1_feat)\ntar_pd2_label=0.55*qalg_ar2.predict(tar_pd2_feat)+0.45*walg_ar2.predict(tar_pd2_feat)\ntar_pd3_label=0.55*qalg_ar3.predict(tar_pd3_feat)+0.45*walg_ar3.predict(tar_pd3_feat)","4fcc3345":"tar_pd1_feat.head()","f16e5a5a":"tar_pd2_feat.head()","8fad7793":"tbelgium['Product_ID'].unique()","b5cb01b5":"tbelgium=tbelgium.drop(['Product_ID','Product_Type'],axis=1)","74efdae6":"tbelgium.columns","cb55d20c":"tbelgium.head()","1ce22af6":"tbel_feat=tbelgium.drop(['Sales'],axis=1)\n\ntbel_label=0.55*qalg_bl2.predict(tbel_feat)+0.45*walg_bl2.predict(tbel_feat)","25c43309":"tbel_label","b96115ca":"tcolumbia['Product_ID'].unique()","ddec484e":"tco_pd1=tcolumbia[tcolumbia['Product_ID']==1]\ntco_pd2=tcolumbia[tcolumbia['Product_ID']==2]\ntco_pd3=tcolumbia[tcolumbia['Product_ID']==3]\n\n\ntco_pd1.drop(['Product_ID','Product_Type'],axis=1,inplace=True)\ntco_pd2.drop(['Product_ID','Product_Type'],axis=1,inplace=True)\ntco_pd3.drop(['Product_ID','Expense_Price','Product_Type'],axis=1,inplace=True)","b0c5678c":"tco_pd1_feat=tco_pd1.drop(['Sales'],axis=1)\ntco_pd2_feat=tco_pd2.drop(['Sales'],axis=1)\ntco_pd3_feat=tco_pd3.drop(['Sales'],axis=1)\n\n\ntco_pd1_label=0.55*qalg_co1.predict(tco_pd1_feat)+0.45*walg_co1.predict(tco_pd1_feat)\n\ntco_pd2_label=0.55*qalg_co2.predict(tco_pd2_feat)+0.45*walg_co2.predict(tco_pd2_feat)\n\ntco_pd3_label=0.55*qalg_co3.predict(tco_pd3_feat)+0.45*walg_co3.predict(tco_pd3_feat)","2086f85e":"tdenmark['Product_ID'].unique()","00694534":"tdenmark.drop(['Product_ID','Product_Type'],axis=1,inplace=True)","f0406a5f":"tdenmark.head()","d3bc6914":"tden_pd2_feat=tdenmark.drop(['Sales'],axis=1)\n\ntden_pd2_label=0.55*qalg_dn2.predict(tden_pd2_feat)+0.45*walg_dn2.predict(tden_pd2_feat)","160619b7":"tfinland['Product_ID'].unique()","53e63829":"tfinland.head()","b0803f26":"tfinland=tfinland.drop(['Product_ID','Product_Type'],axis=1)","57f5dc7a":"tfn_pd4_feat=tfinland.drop(['Sales'],axis=1)\n\ntfn_pd4_label=0.55*qalg_fn4.predict(tfn_pd4_feat)+0.45*walg_fn4.predict(tfn_pd4_feat)","3295c67d":"tengland['Product_ID'].unique()","7ebb58c3":"ten_pd4=tengland[tengland['Product_ID']==4]\nten_pd4=ten_pd4.drop(['Product_ID','Product_Type'],axis=1)\n\nten_pd5=tengland[tengland['Product_ID']==5]\nten_pd5=ten_pd5.drop(['Product_ID','Product_Type'],axis=1)\n\n","91adfc07":"ten_pd4.head()","c751e54e":"ten_pd4_feat=ten_pd4.drop(['Sales'],axis=1)\nten_pd5_feat=ten_pd5.drop(['Sales'],axis=1)\n\nten_pd4_label=0.55*qalg_en4.predict(ten_pd4_feat)+0.45*walg_en4.predict(ten_pd4_feat)\nten_pd5_label=0.55*qalg_en5.predict(ten_pd5_feat)+0.45*walg_en5.predict(ten_pd5_feat)","f12ad24c":"to_place=pd.read_csv('..\/input\/yds_test2018.csv',index_col=0)","0c62454c":"to_place.drop(['Sales'],axis=1,inplace=True)","f820f637":"to_place.loc[(to_place['Country']=='Argentina') & (to_place['Product_ID']==1),'Sales']=tar_pd1_label\nto_place.loc[(to_place['Country']=='Argentina') & (to_place['Product_ID']==2),'Sales']=tar_pd2_label\nto_place.loc[(to_place['Country']=='Argentina') & (to_place['Product_ID']==3),'Sales']=tar_pd3_label\n\n\nto_place.loc[(to_place['Country']=='Columbia') & (to_place['Product_ID']==1),'Sales']=tco_pd1_label\nto_place.loc[(to_place['Country']=='Columbia') & (to_place['Product_ID']==2),'Sales']=tco_pd2_label\nto_place.loc[(to_place['Country']=='Columbia') & (to_place['Product_ID']==3),'Sales']=tco_pd3_label\n\nto_place.loc[(to_place['Country']=='Denmark') & (to_place['Product_ID']==2),'Sales']=tden_pd2_label\n\nto_place.loc[(to_place['Country']=='England') & (to_place['Product_ID']==4),'Sales']=ten_pd4_label\nto_place.loc[(to_place['Country']=='England') & (to_place['Product_ID']==5),'Sales']=ten_pd5_label\n\nto_place.loc[(to_place['Country']=='Belgium') & (to_place['Product_ID']==2),'Sales']=tbel_label\n\nto_place.loc[(to_place['Country']=='Finland') & (to_place['Product_ID']==4),'Sales']=tfn_pd4_label\n\n\n\n","d1993ce7":"#to_place.to_csv('..\/input\/output.csv')","3cb01d5b":"As we can see, we've Date(not in the best format for processing) and then we've country and the Holiday we've for that country on that day. Which might affect the sales price we're to predict for that country","0e597910":"This was ZS data science challenge, on hackerearth. Where I bagged 37 rank out of 18000 people. Here I had to predict sales for a country, based on lots of features and some extra datasets. Details of which are explained below.","9e533acf":"# Importing all libraries and modules","c61f7be6":"#### We've done enough cleaning and aligning holidays dataset, and now we wanna perform merge with the dataset, previously merged with promotional expenses","849b2086":"### Test-Starting with argentina","f22788f5":"#####  Lasso\n","59f9e179":"### TEST Now England","ca3ffd55":"### TEST  Now Belgium","af682bcc":"## Placing Value in TEST DATA","abb35334":"### Starting feature Engineering and creating training and test data sets\n","ec386a6b":"### Designing algo of all Countries with respective Product ID","bfcf4a20":"#### This is our main training dataset, which has following fields as shown in data.head()","b528df58":"##### To be noticed, all the countries don't have expense price in the dataset. So for them we are simply filling them with mean. As they gotta have some expense price after all","e95d9114":"## The last trick I used, was combine various prediction, I used 0.55 of prediction with linear regression and 0.45 with Elastic net, Feel free to try with other combination.","0f44f05c":"#####  Linear Regression","a9e4328d":"## Finally, combine all the distributed dataset in the original test data and export","4910cacc":"co_pd3","b20795de":"### We've to apply same process on the test data set too, divide it by country then product id, then predict using algo trained with same country and product id of training data set. ","f73cc120":"#####  Elastic Net","f4f4e7f7":"## Diving DataSet\n","996caa4f":"### Another one of the tricks, that helped me increase my score. Divide a country wrt product id, then train algorithms, based on each product id","85f21e9e":"###  Now Belgium","252d7031":"It might be a little lengthy, but have patience, it'd be worth it :P","16492ef7":"### TEST Now Finland","8f9ad518":"### Now England","2e5353f5":"## Now this is one of the trick that really helped me increase my score.\n\n#### I divided my dataset, according to the country, and trained my algorithm seperately on each country, it helped my algorithm generalize to a country, better.","c9630d8e":"### We've following datasets to play","3729e959":"### TEST Now Denmark","23e1f9f5":"#### Promotional expenses","d1a5ed7a":"## Our dataset includes, holiday and promotional expenses(more on these datasets later)","91cdd2b9":"## This is final test data set","db1faac7":"### Starting with argentina","2592703b":"##### Ofc, we don't need a country feature explicitly , if our dataframe just contains a feature regarding a country. ","2bc623ed":"co_pd3","394afa99":"### Now Denmark","2009a107":"### Now Columbia","fef9c6cc":"We've expense price, based on country and the product type. Expense price is primarily all the price involving advertisement and labor work. ","c999d790":"### TEST-Designing algo of all Countries with respective Product ID","15b533c5":"### Data has been grouped, as many of the countries had several week for a month , also we don't have Week and merchant ID feature in test data. So taking em out and grouping training data seemed like the best course of action","6fe76e5c":"### TEST Now Columbia","fbc2e586":"#####  XGBoost\n","ae8d60ad":"### Now we wanna merge data, promotional data with Training data. As we simply wanna use all the features we can get. So we merge the data using left join based on common feature of training and promotional data","4744c5b2":"#### Now we wanna import holidays, in order to merge it with training data set. Again, it'll start with processing date of Holidays in appropriate way and performing join based on common feature of holidays and training dataset","d21464b9":"### Final test data is merged, with expense price, NA values filled with mean, same with Holidays, NA values filled with 0","a700ca85":"### Now Finland","bda19819":"#### Holiday"}}