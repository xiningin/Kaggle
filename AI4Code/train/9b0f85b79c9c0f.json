{"cell_type":{"72a5f04b":"code","b27ad9da":"code","4c7c6843":"code","06241e5a":"code","f5c79879":"code","1d733546":"code","2e857a19":"code","1d000f75":"code","fbbbc4bc":"code","9451d976":"code","dae56f1e":"code","11194bf1":"code","44c89022":"code","5ecb38a7":"code","fbb08b7b":"code","eb7e57c4":"code","c90b576c":"code","a9481d4b":"code","cc01a3aa":"code","6601bcbf":"code","847c5a16":"code","efe4fdab":"code","0d4a9c5a":"code","01256eb4":"code","1cbb629e":"code","3f7341d0":"code","86d91e4b":"code","290fc198":"code","9776d09a":"code","ea296e12":"code","0a41bd5b":"code","56a5dfb6":"code","14aa6255":"code","4e736c61":"code","a18d4b41":"code","0999e847":"code","12991bd3":"code","d3958025":"code","79d8164f":"code","ccfd0b2b":"code","a892658b":"code","9ae7bc3f":"code","5117fb5f":"code","bd277eba":"code","b4a27a27":"markdown","96c4b6e4":"markdown","8856a6da":"markdown","96eceb61":"markdown","42f74142":"markdown","12cbbcef":"markdown","3188eac7":"markdown","088c41ec":"markdown","a47c47e5":"markdown","ec529d12":"markdown"},"source":{"72a5f04b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import linear_model\nfrom sklearn.linear_model import LinearRegression\n\n# reading the dataset\ncars = pd.read_csv(\"\/kaggle\/input\/car-data\/CarPrice_Assignment.csv\")\n","b27ad9da":"# summary of the dataset: 205 rows, 26 columns, no null values\nprint(cars.info())","4c7c6843":"# head\ncars.head()","06241e5a":"# target variable: price of car\nsns.distplot(cars['price'])\nplt.show()","f5c79879":"# all numeric (float and int) variables in the dataset\ncars_numeric = cars.select_dtypes(include=['float64', 'int'])\ncars_numeric.head()","1d733546":"# dropping symboling and car_ID \ncars_numeric = cars_numeric.drop(['symboling', 'car_ID'], axis=1)\ncars_numeric.head()","2e857a19":"# correlation matrix\ncor = cars_numeric.corr()\ncor","1d000f75":"# plotting correlations on a heatmap\n\n# figure size\nplt.figure(figsize=(16,8))\n\n# heatmap\nsns.heatmap(cor, cmap=\"YlGnBu\", annot=True)\nplt.show()","fbbbc4bc":"cars_numeric","9451d976":"x = cars_numeric.iloc[:,0:13].values\ny = cars_numeric.iloc[:,13].values\ny","dae56f1e":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0)\nx_train.shape","11194bf1":"x_test.shape","44c89022":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","5ecb38a7":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\ny_pred","fbb08b7b":"y_test","eb7e57c4":"c = model.intercept_\nc","c90b576c":"m = model.coef_\nm","a9481d4b":"model.predict([x_train[10]])","cc01a3aa":"y_train[10]","6601bcbf":"plt.scatter(y_pred,y_test)","847c5a16":"df1 = pd.DataFrame({'Actual':y_test,'Predicted':y_pred})\ndf1","efe4fdab":"import matplotlib.pyplot as plt\ndf2 = df1\ndf2.plot(figsize=(20,8),kind='bar')\nplt.show()","0d4a9c5a":"plt.figure(figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.scatterplot(x=\"Actual\", y=\"Predicted\", data=df1)\n\nplt.subplot(1,2,2)\nsns.regplot(x=\"Actual\", y=\"Predicted\", data=df1)","01256eb4":"# metrics\nfrom sklearn.metrics import r2_score,mean_squared_error\n# Mean Squared Error \nprint(mean_squared_error(y_test,y_pred))\nprint(r2_score(y_true=y_test, y_pred=y_pred))","1cbb629e":"import numpy as np\nMSE = np.square(np.subtract(y_test,y_pred)).mean() \nMSE","3f7341d0":"# Error terms\nc = [i for i in range(len(y_pred))]\nfig = plt.figure()\nplt.plot(c,y_test-y_pred, color=\"blue\", linewidth=2.5, linestyle=\"-\")\nfig.suptitle('Error Terms', fontsize=20)              # Plot heading \nplt.xlabel('Index', fontsize=18)                      # X-label\nplt.ylabel('ytest-ypred', fontsize=16)                # Y-label\nplt.show()","86d91e4b":"cars","290fc198":"# converting symboling to categorical\ncars['symboling'] = cars['symboling'].astype('object')","9776d09a":"# CarName: first few entries\ncars['CarName'][:30]","ea296e12":"# Extracting carname\n\n# Method 1: str.split() by space\ncars['CarName'] = cars['CarName'].apply(lambda x: x.split(\" \")[0])\ncars['CarName'][:30]","0a41bd5b":"# look at all values \ncars['CarName'].value_counts()","56a5dfb6":"\n# volkswagen\ncars.loc[(cars['CarName'] == \"vw\") | \n         (cars['CarName'] == \"vokswagen\")\n         , 'CarName'] = 'volkswagen'\n\n# porsche\ncars.loc[cars['CarName'] == \"porcshce\", 'CarName'] = 'porsche'\n\n# toyota\ncars.loc[cars['CarName'] == \"toyouta\", 'CarName'] = 'toyota'\n\n# nissan\ncars.loc[cars['CarName'] == \"Nissan\", 'CarName'] = 'nissan'\n\n# mazda\ncars.loc[cars['CarName'] == \"maxda\", 'CarName'] = 'mazda'","14aa6255":"y = cars['price']\nx = cars.drop(['price'], axis = 1)","4e736c61":"# creating dummy variables for categorical variables\n\n# subset all categorical variables\ncars_categorical = x.select_dtypes(include=['object'])\ncars_categorical.head()","a18d4b41":"# convert into dummies\ncars_dummies = pd.get_dummies(cars_categorical)\ncars_dummies.head()","0999e847":"x = cars_numeric.iloc[:,0:13]\ny = cars_numeric.iloc[:,13].values","12991bd3":"# concat dummy variables with X\nx = pd.concat([x, cars_dummies], axis=1)","d3958025":"x = x.iloc[:,:].values\nx","79d8164f":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0)\nx_train.shape","ccfd0b2b":"\nscaler = MinMaxScaler()\nx_train = scaler.fit_transform(x_train)\n#.fit_transform first fits the original data and then transforms it\nx_test = scaler.transform(x_test)","a892658b":"y_train","9ae7bc3f":"from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()\nmodel.fit(x_train,y_train)\ny_pred = model.predict(x_test)\ny_pred","5117fb5f":"y_test","bd277eba":"# metrics\nfrom sklearn.metrics import r2_score,mean_squared_error\n# Mean Squared Error \nprint(mean_squared_error(y_test,y_pred))\nprint(r2_score(y_true=y_test, y_pred=y_pred))","b4a27a27":"You can see that the records with prices\/prediction between 5K-20K are fairly close to the prediction line for the most part while values >$20K appear further away. To me this makes sense as the vast majority of prices in the current dataset are in this range while there are fewer cars\/records with higher prices.","96c4b6e4":"Here, although the variable ```symboling``` is numeric (int), we'd rather treat it as categorical since it has only 6 discrete values. Also, we do not want 'car_ID'.","8856a6da":"## Car Price Prediction\n\nThe solution is divided into the following sections: \n- Data understanding and exploration\n- Data cleaning\n- Data preparation\n- Model building and evaluation\n","96eceb61":"#### Data Exploration\n\nTo perform linear regression, the (numeric) target variable should be linearly related to *at least one another numeric variable*. Let's see whether that's true in this case.\n\n\nWe'll first subset the list of all (independent) numeric variables, and then make a **pairwise plot**.","42f74142":"### 1. Data Understanding and Exploration\n\nLet's first have a look at the dataset and understand the size, attribute names etc.","12cbbcef":"## 3. Data Preparation \n\n\n#### Data Preparation\n\nLet's now prepare the data and build the model.","3188eac7":"Not bad, we are getting approx. 83% r-squared with all the variables.","088c41ec":"This is quite hard to read, and we can rather plot correlations between variables. Also, a heatmap is pretty useful to visualise multiple correlations in one plot.","a47c47e5":"The heatmap shows some useful insights:\n\nCorrelation of price with independent variables:\n- Price is highly (positively) correlated with wheelbase, carlength, carwidth, curbweight, enginesize, horsepower (notice how all of these variables represent the size\/weight\/engine power of the car)\n\n- Price is negatively correlated to ```citympg``` and ```highwaympg``` (-0.70 approximately). This suggest that cars having high mileage may fall in the 'economy' cars category, and are priced lower (think Maruti Alto\/Swift type of cars, which are designed to be affordable by the middle class, who value mileage more than horsepower\/size of car etc.)\n\nCorrelation among independent variables:\n- Many independent variables are highly correlated (look at the top-left part of matrix): wheelbase, carlength, curbweight, enginesize etc. are all measures of 'size\/weight', and are positively correlated \n\n\nThus, while building the model, we'll have to pay attention to multicollinearity (especially linear models, such as linear and logistic regression, suffer more from multicollinearity).","ec529d12":"## 2. Data Cleaning\n\nLet's now conduct some data cleaning steps. \n\nWe've seen that there are no missing values in the dataset. We've also seen that variables are in the correct format, except ```symboling```, which should rather be a categorical variable (so that dummy variable are created for the categories).\n\nNote that it *can* be used in the model as a numeric variable also. \n\n"}}