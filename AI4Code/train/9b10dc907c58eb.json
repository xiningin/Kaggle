{"cell_type":{"283e260f":"code","bebcab06":"code","d88fa3ce":"code","201c21fb":"code","72419f0b":"code","6b40b4d9":"code","be274198":"code","b4eaa40c":"code","4000a87a":"code","61d0cc87":"code","91eb84df":"code","024bb734":"code","dd5ab334":"code","dc696d8a":"code","45c74485":"code","b314594e":"code","f0c27f79":"code","d60f2e39":"code","fa72751d":"code","b6eb8691":"markdown","1aba48c6":"markdown","5a933d87":"markdown","1e6e6598":"markdown","cf1386da":"markdown","9aa989ed":"markdown","8f2f0fb8":"markdown","6cb0193c":"markdown","8f2e0c47":"markdown","f2082cd9":"markdown","47820692":"markdown","79043fdf":"markdown","47cacfb8":"markdown","5a8f6d4e":"markdown","763f9d27":"markdown","ea04cd1b":"markdown","5b422ea6":"markdown"},"source":{"283e260f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as datetime\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 cufflinks \u0432 \u043e\u0444\u043b\u0430\u0439\u043d-\u0440\u0435\u0436\u0438\u043c\u0435\nimport cufflinks\ncufflinks.go_offline()\n\n# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u0435\u043c\u044b cufflinks\ncufflinks.set_config_file(world_readable=True, theme='pearl', offline=True)\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bebcab06":"data = pd.read_csv('..\/input\/onlineretail\/OnlineRetail.csv', encoding='ISO-8859-1')\ndata.head()","d88fa3ce":"data.isnull().sum()","201c21fb":"data.info()","72419f0b":"print('Quantity column')\nprint(data.Quantity.describe())\nprint('UnitPrice column')\nprint(data.UnitPrice.describe())","6b40b4d9":"data = data[(data.Quantity>0)&(data.UnitPrice>0)]","be274198":"data['InvoiceDate'] = pd.to_datetime(data['InvoiceDate'])\ndata = data.dropna(subset=['CustomerID'])","b4eaa40c":"from datetime import datetime, date\ndatelist = pd.date_range(start=\"2010-12-01\",end=\"2011-12-09\")\nfor i in data['InvoiceDate']:\n    i = datetime.date(i)\n    if i not in datelist:\n        print(i)","4000a87a":"data['TotalPrice'] = data['Quantity']*data['UnitPrice']\ndata['Year'] = pd.DatetimeIndex(data['InvoiceDate']).year\ndata['Month'] = pd.DatetimeIndex(data['InvoiceDate']).month","61d0cc87":"data.groupby(['Year', 'Month']).InvoiceNo.count().plot(kind='bar', title='Amount of invoices per month')","91eb84df":"data.groupby(['Year', 'Month']).CustomerID.count().plot(kind='bar', title='Amount of customers per month')","024bb734":"px.bar(data[['InvoiceDate','TotalPrice']].set_index('InvoiceDate').resample('M').sum().reset_index(),\n       x='InvoiceDate', y='TotalPrice', title = 'Total Revenue per month')","dd5ab334":"a=data[data.Year==2011].groupby('Month').InvoiceNo.nunique().reset_index()\nb=data[data.Year==2011].groupby('Month').TotalPrice.sum().reset_index()\na=a.merge(b, right_on='Month', left_on='Month', how='inner')\npx.scatter(a, x='InvoiceNo', y='TotalPrice', hover_data=['Month'], title = 'Amount of invoices per month and total revenue distribution')","dc696d8a":"px.pie(data.groupby('Country').TotalPrice.sum().reset_index()[:20], values='TotalPrice', names='Country', \n      title='TOP BEST 20 COUNTRIES BY SALES')","45c74485":"px.pie(data.groupby('Country').TotalPrice.sum().reset_index()[20:], values='TotalPrice', names='Country', \n      title='THE WORST 20 COUNTRIES BY SALES')","b314594e":"px.bar(data[['InvoiceDate','TotalPrice']].set_index('InvoiceDate').resample('W').sum().reset_index(),\n       x='InvoiceDate', y='TotalPrice')","f0c27f79":"data['Hour'] = data['InvoiceDate'].dt.hour\ndata['WeekDay']=data['InvoiceDate'].dt.weekday\ndata['WeekDay'] = data['WeekDay'].replace({0:'Mon', 1:'Thu',2:'Wed', 3:'Thur', 4:'Fri', 5:'Sat', 6:'Sun'})","d60f2e39":"px.bar(data.groupby('WeekDay').TotalPrice.sum().reset_index(), x='WeekDay', y='TotalPrice')","fa72751d":"px.bar(data.groupby('Hour').TotalPrice.sum().reset_index(), x='Hour', y='TotalPrice')","b6eb8691":"### Revenue by week","1aba48c6":"### Data looks like","5a933d87":"### Find the best time for sales. It is 12 o'clock.","1e6e6598":"### Find the best and the worst weekdays by sales. The best is Thursday and the worst is Sunday.","cf1386da":"### TOP worst 20 countries by revenue","9aa989ed":"# Summary\n## * We should continue cooperation with EIRE, Germany, France, Belgium and change relationships with Saudi Aravia and RSA\n## * The best sales moth in 2011 was November\n## * The worst sales month in 2011 were March and May\n## * The best weekday for sales is Thursday and the worst is Sunday\n## * The best time for sales is 12 o'clock and near it","8f2f0fb8":"### Checking missing dates in our sales","6cb0193c":"### Creating column with total revenue of every order.\n### Creating columns for year and month when order is made","8f2e0c47":"### Getting knowledge about Total revenue per month. The best one is November (it is expected, becouse November was the most active month for sales)","f2082cd9":"### Getting knowledge about amount of customers per month. It looks like previous graph.","47820692":"### TOP best 20 countries by revenue ","79043fdf":"### Getting description about data","47cacfb8":"### Looking at Quantity and UnitPrice colimns. There we have negative numbers which can't be used for analysis.","5a8f6d4e":"### Getting rid of negative numbers in Quantity and UnitPrice columns","763f9d27":"### Getting knownledge about amount of invoices per month. The most active month is November.","ea04cd1b":"### Chech how many missing values we have","5b422ea6":"### We transform InvoiceDate to datetime format.\n### And getting rid of rows with missing Customer IDs"}}