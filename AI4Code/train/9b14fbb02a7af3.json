{"cell_type":{"856eb5a5":"code","18ebed82":"code","1711f2bb":"code","69adbd8c":"code","4ac85fee":"code","5104e4df":"code","d617e7a7":"code","af4b96c9":"code","381a30d3":"code","0e429ab3":"code","59789f2f":"code","4f656dc5":"code","8f211f97":"code","58f68c1a":"code","aeedbdbb":"markdown","c9f1c2b2":"markdown","4373fb3d":"markdown","943bd8a3":"markdown","1516e6ce":"markdown","294e7231":"markdown","0f09a119":"markdown","9d9ffdb3":"markdown","71d1d752":"markdown","8f168676":"markdown"},"source":{"856eb5a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","18ebed82":"df = pd.read_csv('\/kaggle\/input\/CORD-19-research-challenge\/2020-03-13\/all_sources_metadata_2020-03-13.csv')\ndf.shape","1711f2bb":"df.head()","69adbd8c":"df.tail()","4ac85fee":"title = df.copy()","5104e4df":"title = title.dropna(subset=['title'])","d617e7a7":"title.head()","af4b96c9":"title['title'] = title['title'].str.replace('[^a-zA-Z]', ' ', regex=True)\ntitle['title'] = title['title'].str.lower()","381a30d3":"title.tail()","0e429ab3":"title['keyword_transmission'] = title['title'].str.find('transmission') ","59789f2f":"title.head()","4f656dc5":"included_transmission = title.loc[title['keyword_transmission'] != -1]\nincluded_transmission","8f211f97":"title['keyword_transmit'] = title['title'].str.find('transmit')\nincluded_transmit = title.loc[title['keyword_transmit'] != -1]\nincluded_transmit","58f68c1a":"title['keyword_incubation'] = title['title'].str.find('incubation')\nincluded_incubation = title.loc[title['keyword_incubation'] != -1]\nincluded_incubation","aeedbdbb":"# Searching from Biorxiv (TBA)\n\nThanks for the notebook about CORD-19: EDA, parse JSON and generate clean CSV by xhlulu. A specific documentation could be found here https:\/\/www.kaggle.com\/xhlulu\/cord-19-eda-parse-json-and-generate-clean-csv . \n\n","c9f1c2b2":"If the result prompt `-1`, then the title doesn't contained the keyword. ","4373fb3d":"## Loading dataset","943bd8a3":"Whoa, there are as much as 624 articles containing transmission!","1516e6ce":"### Remove punctuation and turn to lowercase","294e7231":"# Coronavirus and Covid-19 transmission-related articles\n\nEasiest way, scraping throgh the title whether it contained transmission or transmit.\n\nPros: this method is the easiest way to found focused article. \n\nCons: Cons: Some articles in the tail from medrxiv didn't list the title, and also some articles could be containing the information but didn't include the keyword on title.","0f09a119":"## I hope this notebook could help for another research related to incubation and transmission, primarily on find the articles. ","9d9ffdb3":"We will proceed to the titled articles, and save the medrxiv articles for the next.","71d1d752":"# Coronavirus and Covid-19 incubation-related articles\n\nEasiest way, scraping throgh the title whether it contained incubation.\n\nPros: this method is the easiest way to found focused article. \n\nCons: Some articles in the tail from medrxiv didn't list the title, and also some articles could be containing the information but didn't include the keyword on title.","8f168676":"We will browse the bulk of comprehensive metadata files of COVID-19 research articles"}}