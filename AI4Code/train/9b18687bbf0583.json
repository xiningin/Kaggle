{"cell_type":{"27654143":"code","37532153":"code","00f34286":"code","61a69877":"code","38349493":"code","e8ff1f68":"code","599da42e":"code","052cef0d":"code","0296f7d1":"code","ce6cba72":"code","68dd7799":"code","9a288c56":"code","43bfb86c":"code","ed9fd853":"code","ce94a9aa":"code","acba519a":"code","b382796d":"code","3c51aded":"code","51918bb2":"code","10b9bdb2":"code","2b82429c":"code","3a3d621f":"code","eb1dbb9d":"code","2ad2ceef":"code","362ba9f0":"code","d893288e":"code","7f476233":"code","99d7c622":"code","f820233c":"code","bfc6429b":"code","4378cd18":"code","5d3656b8":"code","40d70051":"code","39002c55":"code","486fdfe4":"code","1b355bba":"code","66f20577":"code","98baf4bb":"code","dd04ca63":"code","0deebf39":"code","36fa54c7":"code","88b67262":"code","5f11339a":"code","87d237ba":"code","4a585b77":"code","61e5c995":"code","e0162ef3":"code","caef7737":"code","8f4fb2da":"code","8d9bb24d":"code","d389d39c":"code","49a7b7b9":"code","74d1b699":"code","6149bc27":"code","48700837":"code","7381420c":"code","344169e0":"code","4d8c2fe5":"code","7debcad6":"code","46d095b3":"code","439af6f1":"code","94dd7615":"code","00189edb":"code","5ad5b38c":"code","0ec435a0":"code","3fb32d9f":"code","3aa7c8b2":"code","9b5981b4":"code","b10419e6":"code","bb59b08d":"code","3303e8ee":"code","dc24f61f":"code","19974a23":"markdown","768c66aa":"markdown","e6878844":"markdown","9d3260e9":"markdown","97060afa":"markdown","e31c00ea":"markdown","6f0770db":"markdown","d34c4a53":"markdown","40ce0b53":"markdown","a00114aa":"markdown","988c83ca":"markdown","85562d2b":"markdown","6fb0977e":"markdown","ebeb28d3":"markdown","e2ea537e":"markdown","74ea1af5":"markdown","c79840a9":"markdown","216796ec":"markdown","8d2ec0fc":"markdown","d83f57a4":"markdown","9c81e3b7":"markdown","b673ff12":"markdown","6780dedd":"markdown","35d9e274":"markdown","9d56521e":"markdown","7b369c9d":"markdown","0d0bbbb5":"markdown","cbfb4001":"markdown","46c235c6":"markdown","982000d5":"markdown","0b5c9579":"markdown","728aceb8":"markdown","75c97ff7":"markdown","e8175c16":"markdown","2a42e1a3":"markdown","9469c585":"markdown","f1cd5e74":"markdown"},"source":{"27654143":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport plotly.offline as py\nfrom plotly.offline import init_notebook_mode, iplot\nimport plotly.graph_objs as go\nfrom plotly import tools\ninit_notebook_mode(connected=True)  \nimport plotly.figure_factory as ff\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","37532153":"players = pd.read_csv('..\/input\/Players.csv')\nplayers.head()","00f34286":"players_data = pd.read_csv('..\/input\/player_data.csv')\nplayers_data.head()","61a69877":"players_data.rename(columns={'name': 'Player'}, inplace=True)","38349493":"players_data= players_data.fillna('No College')","e8ff1f68":"final_df = pd.read_csv('..\/input\/Seasons_Stats.csv')\nfinal_df.head()","599da42e":"from mpl_toolkits.mplot3d import Axes3D\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\ndef plotPerColumnDistribution(df, nGraphShown, nGraphPerRow):\n    nunique = df.nunique()\n    df = df[[col for col in df if nunique[col] > 1 and nunique[col] < 50]] # For displaying purposes, pick columns that have between 1 and 50 unique values\n    nRow, nCol = df.shape\n    columnNames = list(df)\n    nGraphRow = (nCol + nGraphPerRow - 1) \/ nGraphPerRow\n    plt.figure(num = None, figsize = (6 * nGraphPerRow, 8 * nGraphRow), dpi = 80, facecolor = 'w', edgecolor = 'k')\n    for i in range(min(nCol, nGraphShown)):\n        plt.subplot(nGraphRow, nGraphPerRow, i + 1)\n        columnDf = df.iloc[:, i]\n        if (not np.issubdtype(type(columnDf.iloc[0]), np.number)):\n            valueCounts = columnDf.value_counts()\n            valueCounts.plot.bar()\n        else:\n            columnDf.hist()\n        plt.ylabel('counts')\n        plt.xticks(rotation = 90)\n        plt.title(f'{columnNames[i]} (column {i})')\n    plt.tight_layout(pad = 1.0, w_pad = 1.0, h_pad = 1.0)\n    plt.show()","052cef0d":"plotPerColumnDistribution(final_df, 84, 10)","0296f7d1":"import random\ndef random_colors(number_of_colors):\n    color = [\"#\"+''.join([random.choice('0123456789ABCDEF') for j in range(6)])\n                 for i in range(number_of_colors)]\n    return color","ce6cba72":"final_df['ppg'] = final_df.PTS\/final_df.G","68dd7799":"ppg = pd.DataFrame()\nppg['player'] = final_df.groupby('Player').mean()['ppg'].index\nppg['PPG'] = final_df.groupby('Player').mean()['ppg'].values\nppg= ppg.sort_values('PPG', ascending = False).head(10)","9a288c56":"trace0 = go.Bar(\n    x=ppg['player'].head(10),\n    y=ppg['PPG'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high points per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","43bfb86c":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wilt Chamberlain*'],\n    y = final_df.ppg[final_df.Player == 'Wilt Chamberlain*'],\n    name = 'Wilt Chamberlain',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Michael Jordan*'],\n    y = final_df.ppg[final_df.Player == 'Michael Jordan*'],\n    name = 'Michael Jordan',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.ppg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Kevin Durant'],\n    y = final_df.ppg[final_df.Player == 'Kevin Durant'],\n    name = 'Kevin Durant',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Jerry West*'],\n    y = final_df.ppg[final_df.Player == 'Jerry West*'],\n    name = 'Jerry West',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'George Gervin*'],\n    y = final_df.ppg[final_df.Player == 'George Gervin*'],\n    name = 'George Gervin',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Bob Pettit'],\n    y = final_df.ppg[final_df.Player == 'Bob Pettit'],\n    name = 'Bob Pettit',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Oscar Robertson*'],\n    y = final_df.ppg[final_df.Player == 'Oscar Robertson*'],\n    name = 'Oscar Robertson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata1 = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Points per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'PPG'),\n              )\n\nfig = dict(data=data1, layout=layout)\npy.iplot(fig, filename='styled-line')","ed9fd853":"final_df['apg'] = final_df.AST\/final_df.G","ce94a9aa":"apg = pd.DataFrame()\napg['player'] = final_df.groupby('Player').mean()['apg'].index\napg['APG'] = final_df.groupby('Player').mean()['apg'].values\napg= apg.sort_values('APG', ascending = False).head(10)","acba519a":"trace0 = go.Bar(\n    x=apg['player'].head(10),\n    y=apg['APG'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high assists per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","b382796d":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Magic Johnson*'],\n    y = final_df.apg[final_df.Player == 'Magic Johnson*'],\n    name = 'Magic Johnson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'John Stockton*'],\n    y = final_df.apg[final_df.Player == 'John Stockton*'],\n    name = 'John Stockton',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Oscar Robertson*'],\n    y = final_df.apg[final_df.Player == 'Oscar Robertson*'],\n    name = 'Oscar Robertson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Chris Paul'],\n    y = final_df.apg[final_df.Player == 'Chris Paul'],\n    name = 'Chris Paul',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Isiah Thomas*'],\n    y = final_df.apg[final_df.Player == 'Isiah Thomas*'],\n    name = 'Isiah Thomas',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'John Wall'],\n    y = final_df.apg[final_df.Player == 'John Wall'],\n    name = 'John Wall',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Jason Kidd'],\n    y = final_df.apg[final_df.Player == 'Jason Kidd'],\n    name = 'Jason Kidd',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Rajon Rondo'],\n    y = final_df.apg[final_df.Player == 'Rajon Rondo'],\n    name = 'Rajon Rondo',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Assists per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'APG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","3c51aded":"final_df['fgpg'] = final_df['FG']\/final_df.G","51918bb2":"fgpg = pd.DataFrame()\nfgpg['player'] = final_df.groupby('Player').mean()['fgpg'].index\nfgpg['FGPG'] = final_df.groupby('Player').mean()['fgpg'].values\nfgpg= fgpg.sort_values('FGPG', ascending = False).head(10)","10b9bdb2":"trace0 = go.Bar(\n    x=fgpg['player'].head(10),\n    y=fgpg['FGPG'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high field goal per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","2b82429c":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wilt Chamberlain*'],\n    y = final_df.fgpg[final_df.Player == 'Wilt Chamberlain*'],\n    name = 'Wilt Chamberlain',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Michael Jordan*'],\n    y = final_df.fgpg[final_df.Player == 'Michael Jordan*'],\n    name = 'Michael Jordan',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'George Gervin*'],\n    y = final_df.fgpg[final_df.Player == 'George Gervin*'],\n    name = 'George Gervin',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Kareem Abdul-Jabbar*'],\n    y = final_df.fgpg[final_df.Player == 'Kareem Abdul-Jabbar*'],\n    name = 'Kareem Abdul-Jabbar',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.fgpg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James ',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Jerry West*'],\n    y = final_df.fgpg[final_df.Player == 'Jerry West*'],\n    name = 'Jerry West',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Larry Bird*'],\n    y = final_df.fgpg[final_df.Player == 'Larry Bird*'],\n    name = 'Larry Bird',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Bob Pettit*'],\n    y = final_df.fgpg[final_df.Player == 'Bob Pettit*'],\n    name = 'Bob Pettit',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Field Goal average per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","3a3d621f":"final_df['rpg'] = final_df.TRB\/final_df.G","eb1dbb9d":"rpg = pd.DataFrame()\nrpg['player'] = final_df.groupby('Player').mean()['rpg'].index\nrpg['RPG'] = final_df.groupby('Player').mean()['rpg'].values\nrpg= rpg.sort_values('RPG', ascending = False).head(10)","2ad2ceef":"trace0 = go.Bar(\n    x=rpg['player'].head(10),\n    y=rpg['RPG'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high rebounds per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","362ba9f0":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wilt Chamberlain*'],\n    y = final_df.rpg[final_df.Player == 'Wilt Chamberlain*'],\n    name = 'Wilt Chamberlain',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Bill Russell*'],\n    y = final_df.rpg[final_df.Player == 'Bill Russell*'],\n    name = 'Bill Russell',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Maurice Stokes*'],\n    y = final_df.rpg[final_df.Player == 'Maurice Stokes*'],\n    name = 'Maurice Stokes',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Bob Pettit*'],\n    y = final_df.rpg[final_df.Player == 'Bob Pettit*'],\n    name = 'Bob Pettit',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Jerry Lucas*'],\n    y = final_df.rpg[final_df.Player == 'Jerry Lucas*'],\n    name = 'Jerry Lucas ',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Nate Thurmond*'],\n    y = final_df.rpg[final_df.Player == 'Nate Thurmond*'],\n    name = 'Nate Thurmond',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dennis Rodman*'],\n    y = final_df.rpg[final_df.Player == 'Dennis Rodman*'],\n    name = 'Dennis Rodman',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dave Cowens*'],\n    y = final_df.rpg[final_df.Player == 'Dave Cowens*'],\n    name = 'Dave Cowens*',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Rebounds per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","d893288e":"final_df['tpg'] = final_df.TOV\/final_df.G","7f476233":"tpg = pd.DataFrame()\ntpg['player'] = final_df.groupby('Player').mean()['tpg'].index\ntpg['TPG'] = final_df.groupby('Player').mean()['tpg'].values\ntpg= tpg.sort_values('TPG', ascending = False).head(10)","99d7c622":"trace0 = go.Bar(\n    x=tpg['player'].head(10),\n    y=tpg['TPG'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high turnover per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","f820233c":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Russell Westbrook'],\n    y = final_df.tpg[final_df.Player == 'Russell Westbrook'],\n    name = 'Russell Westbrook',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Magic Johnson*'],\n    y = final_df.tpg[final_df.Player == 'Magic Johnson*'],\n    name = 'Magic Johnson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'John Wall'],\n    y = final_df.tpg[final_df.Player == 'John Wall'],\n    name = 'John Wall',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Joel Embiid'],\n    y = final_df.tpg[final_df.Player == 'Joel Embiid'],\n    name = 'Joel Embiid',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Isiah Thomas*'],\n    y = final_df.tpg[final_df.Player == 'Isiah Thomas*'],\n    name = 'Isiah Thomas ',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'George McGinnis'],\n    y = final_df.tpg[final_df.Player == 'George McGinnis'],\n    name = 'George McGinnis',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'DeMarcus Cousins'],\n    y = final_df.tpg[final_df.Player == 'DeMarcus Cousins'],\n    name = 'DeMarcus Cousins',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.tpg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Turnover per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","bfc6429b":"final_df['twoppg'] = final_df['2P']\/final_df.G","4378cd18":"twoppg = pd.DataFrame()\ntwoppg['player'] = final_df.groupby('Player').mean()['twoppg'].index\ntwoppg['twoppg'] = final_df.groupby('Player').mean()['twoppg'].values\ntwoppg= twoppg.sort_values('twoppg', ascending = False).head(10)","5d3656b8":"trace0 = go.Bar(\n    x=twoppg['player'].head(10),\n    y=twoppg['twoppg'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high 2 points average per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","40d70051":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wilt Chamberlain*'],\n    y = final_df.twoppg[final_df.Player == 'Wilt Chamberlain*'],\n    name = 'Wilt Chamberlain',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Kareem Abdul-Jabbar*'],\n    y = final_df.twoppg[final_df.Player == 'Kareem Abdul-Jabbar*'],\n    name = 'Kareem Abdul-Jabbar*',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Michael Jordan*'],\n    y = final_df.twoppg[final_df.Player == 'Michael Jordan*'],\n    name = 'Michael Jordan*',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'George Gervin*'],\n    y = final_df.twoppg[final_df.Player == 'George Gervin*'],\n    name = 'George Gervin',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Jerry West*'],\n    y = final_df.twoppg[final_df.Player == 'Jerry West*'],\n    name = 'Jerry West ',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Elgin Baylor*'],\n    y = final_df.twoppg[final_df.Player == 'Elgin Baylor*'],\n    name = 'Elgin Baylor',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Bob Pettit*'],\n    y = final_df.twoppg[final_df.Player == 'Bob Pettit*'],\n    name = 'Bob Pettit',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Oscar Robertson*'],\n    y = final_df.twoppg[final_df.Player == 'Oscar Robertson*'],\n    name = 'Oscar Robertson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = '2 points average per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","39002c55":"final_df['threeppg'] = final_df['3P']\/final_df.G","486fdfe4":"threeppg = pd.DataFrame()\nthreeppg['player'] = final_df.groupby('Player').mean()['threeppg'].index\nthreeppg['threeppg'] = final_df.groupby('Player').mean()['threeppg'].values\nthreeppg= threeppg.sort_values('threeppg', ascending = False).head(10)","1b355bba":"trace0 = go.Bar(\n    x=threeppg['player'].head(10),\n    y=threeppg['threeppg'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high 3 points average per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","66f20577":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Stephen Curry'],\n    y = final_df.threeppg[final_df.Player == 'Stephen Curry'],\n    name = 'Stephen Curry',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Klay Thompson'],\n    y = final_df.threeppg[final_df.Player == 'Klay Thompson'],\n    name = 'Klay Thompson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Damian Lillard'],\n    y = final_df.threeppg[final_df.Player == 'Damian Lillard'],\n    name = 'Damian Lillard',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Ray Allen'],\n    y = final_df.threeppg[final_df.Player == 'Ray Allen'],\n    name = 'Ray Allen',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'James Harden'],\n    y = final_df.threeppg[final_df.Player == 'James Harden'],\n    name = 'James Harden ',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Ryan Anderson'],\n    y = final_df.threeppg[final_df.Player == 'Ryan Anderson'],\n    name = 'Ryan Anderson',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wesley Matthews'],\n    y = final_df.threeppg[final_df.Player == 'Wesley Matthews'],\n    name = 'Wesley Matthews',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'J.R. Smith'],\n    y = final_df.threeppg[final_df.Player == 'J.R. Smith'],\n    name = 'J.R. Smith',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = '3 points average per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","98baf4bb":"final_df['dpg'] = final_df['DRB']\/final_df.G","dd04ca63":"dpg = pd.DataFrame()\ndpg['player'] = final_df.groupby('Player').mean()['dpg'].index\ndpg['dpg'] = final_df.groupby('Player').mean()['dpg'].values\ndpg= dpg.sort_values('dpg', ascending = False).head(10)","0deebf39":"trace0 = go.Bar(\n    x=dpg['player'].head(10),\n    y=dpg['dpg'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with high dribbles per game',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","36fa54c7":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dave Cowens*'],\n    y = final_df.dpg[final_df.Player == 'Dave Cowens*'],\n    name = 'Dave Cowens',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dwight Howard'],\n    y = final_df.dpg[final_df.Player == 'Dwight Howard'],\n    name = 'Dwight Howard',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Happy Hairston'],\n    y = final_df.dpg[final_df.Player == 'Happy Hairston'],\n    name = 'Happy Hairston',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dave DeBusschere*'],\n    y = final_df.dpg[final_df.Player == 'Dave DeBusschere*'],\n    name = 'Dave DeBusschere*',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Dennis Rodman*'],\n    y = final_df.dpg[final_df.Player == 'Dennis Rodman*'],\n    name = 'Dennis Rodman',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Kevin Love'],\n    y = final_df.dpg[final_df.Player == 'Kevin Love'],\n    name = 'Kevin Love',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'DeMarcus Cousins'],\n    y = final_df.dpg[final_df.Player == 'DeMarcus Cousins'],\n    name = 'DeMarcus Cousins',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Wes Unseld*'],\n    y = final_df.dpg[final_df.Player == 'Wes Unseld*'],\n    name = 'Wes Unseld',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(212, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Dribbles per game for Top players',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'FGPG'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","88b67262":" players_data['career'] = players_data[\"year_end\"] - players_data[\"year_start\"]","5f11339a":"lengthy_career = pd.DataFrame()\nlengthy_career['player'] = players_data.groupby('Player').mean()['career'].index\nlengthy_career['career_length'] = players_data.groupby('Player').mean()['career'].values\nlengthy_career= lengthy_career.sort_values('career_length', ascending = False).head(10)","87d237ba":"trace0 = go.Bar(\n    x=lengthy_career['player'].head(10),\n    y=lengthy_career['career_length'].head(10),\n    marker=dict(\n        color= random_colors(10),\n       \n        \n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Top ten players with lenghty career',\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='text-hover-bar')","4a585b77":"# Create and style traces\ntrace0 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.ppg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James PPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4)\n)\ntrace1 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Stephen Curry'],\n    y = final_df.ppg[final_df.Player == 'Stephen Curry'],\n    name = 'Stephen Curry PPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,)\n)\ntrace2 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.apg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James APG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dash') # dash options include 'dash', 'dot', and 'dashdot'\n)\ntrace3 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Stephen Curry'],\n    y = final_df.apg[final_df.Player == 'Stephen Curry'],\n    name = 'Stephen Curry APG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dash')\n)\ntrace4 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.threeppg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James 3PPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(205, 12, 24)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace5 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Stephen Curry'],\n    y = final_df.threeppg[final_df.Player == 'Stephen Curry'],\n    name = 'Stephen Curry 3PPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(22, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace6 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'LeBron James'],\n    y = final_df.rpg[final_df.Player == 'LeBron James'],\n    name = 'LeBron James RPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(222, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ntrace7 = go.Scatter(\n    x = final_df.Year[final_df.Player == 'Stephen Curry'],\n    y = final_df.rpg[final_df.Player == 'Stephen Curry'],\n    name = 'Stephen Curry RPG',\n    connectgaps=True,\n    line = dict(\n        color = ('rgb(21, 96, 167)'),\n        width = 4,\n        dash = 'dot')\n)\ndata = [trace0, trace1, trace2, trace3, trace4, trace5, trace6, trace7]\n\n# Edit the layout\nlayout = dict(title = 'Has LeBron James remodified himself into Stephen Curry gameplay? ',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'Per Game'),\n              )\n\nfig = dict(data=data, layout=layout)\npy.iplot(fig, filename='styled-line')","61e5c995":"trace1 = go.Bar(\n    x=final_df.Year[final_df.Player == 'LeBron James'],\n    y=final_df['3P%'][final_df.Player == 'LeBron James'],\n    name='LeBron James'\n)\ntrace2 = go.Bar(\n    x=final_df.Year[final_df.Player == 'Stephen Curry'],\n    y=final_df['3P%'][final_df.Player == 'Stephen Curry'],\n    name='Stephen Curry'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title = 'Has LeBron James converted 3 points more than previous years  ? ',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'Three point %')\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","e0162ef3":"trace1 = go.Bar(\n    x=final_df.Year[final_df.Player == 'LeBron James'],\n    y=final_df['3PA'][final_df.Player == 'LeBron James'],\n    name='LeBron James'\n)\ntrace2 = go.Bar(\n    x=final_df.Year[final_df.Player == 'Stephen Curry'],\n    y=final_df['3PA'][final_df.Player == 'Stephen Curry'],\n    name='Stephen Curry'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title = 'Has LeBron James tried shooting for 3 points more than previous years  ? ',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'Three point Attempts')\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","caef7737":"trace1 = go.Bar(\n    x=final_df.Year[final_df.Player == 'LeBron James'],\n    y=final_df['rpg'][final_df.Player == 'LeBron James'],\n    name='LeBron James'\n)\ntrace2 = go.Bar(\n    x=final_df.Year[final_df.Player == 'Stephen Curry'],\n    y=final_df['rpg'][final_df.Player == 'Stephen Curry'],\n    name='Stephen Curry'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title = 'Has Stephen Curry improved rebounds compared to James in previous years  ? ',\n              xaxis = dict(title = 'Year'),\n              yaxis = dict(title = 'Rebounds per game')\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='grouped-bar')","8f4fb2da":"trace1 = go.Scatter3d(\n    x=final_df['dpg'].where(final_df['dpg'] > 8.0),\n    y=final_df['apg'].where(final_df['apg'] > 8.0),\n    z=final_df['ppg'].where(final_df['ppg'] > 25.0),\n    text = final_df.Player,\n    mode='markers',\n    marker=dict(\n        size=12,\n        color=random_colors(50),                # set color to an array\/list of desired values\n        colorscale='Viridis',   # choose a colorscale\n        opacity=0.8\n    )\n)\n\ndata = [trace1]\nlayout=go.Layout(width=800, height=800, title = 'Top players which you can dribble past whole defense and score ',\n              scene = dict(xaxis=dict(title='Dribbling',\n                                      titlefont=dict(color='Orange')),\n                            yaxis=dict(title='Assists',\n                                       titlefont=dict(color='rgb(220, 220, 220)')),\n                            zaxis=dict(title='Points',\n                                       titlefont=dict(color='rgb(220, 220, 220)')),\n                            bgcolor = 'rgb(20, 24, 54)'\n                           )\n             )\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename='3d-scatter-colorscale')","8d9bb24d":"county_count = players['birth_state'].value_counts()\ntrace = go.Pie(labels=county_count.index, values=county_count.values, hole=0.6,textinfo= \"none\")\nlayout = go.Layout(\n    title='Percentage of players by states'\n)\nfig = go.Figure(data=[trace], layout=layout)\niplot(fig, filename=\"plotting-library\")","d389d39c":"college_DA = ' '.join(players_data['college'].tolist())","49a7b7b9":"college_DAA = \"\".join(str(v) for v in college_DA).lower()","74d1b699":"import matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nsns.set(rc={'figure.figsize':(11.7,8.27)})\n\nwordcloud = WordCloud(background_color=\"white\").generate(college_DAA)\nplt.figure()\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.margins(x=0, y=0)\nplt.title('Popular colleges for NBA players',size=24)\nplt.show()","6149bc27":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelBinarizer, StandardScaler\nimport keras\nfrom keras.wrappers.scikit_learn import KerasRegressor\nfrom sklearn.preprocessing import MinMaxScaler\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Activation, Dropout","48700837":"#removal of non relevant columns\ntrain = final_df.drop(['Player','Pos','blanl', 'blank2', 'Tm'], axis=1)","7381420c":"train= train.fillna(0)","344169e0":"#watch the dataset\ntrain.head()","4d8c2fe5":"#splitting the label\nX = train.drop(['ppg'], axis=1).as_matrix()\ny = train['ppg'].as_matrix()\n","7debcad6":"#Test train validation set splitting\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)\nX_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size=0.2, random_state=1)","46d095b3":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\n# Choose the type of regressor. \nRFR = RandomForestRegressor()\n\n# Choose some parameter combinations to try\n#YOU CAN TRY DIFFERENTS PARAMETERS TO FIND THE BEST MODEL\nparameters = {'n_estimators': [5, 10, 100],\n              #'criterion': ['mse'],\n              #'max_depth': [5, 10, 15], \n              #'min_samples_split': [2, 5, 10],\n              'min_samples_leaf': [1,5]\n             }\n\n# Type of scoring used to compare parameter combinations\n#We have to use RandomForestRegressor's own scorer (which is R^2 score)\n\n# Run the grid search\ngrid_obj = GridSearchCV(RFR, parameters,\n                        cv=5, #Determines the cross-validation splitting strategy \/to specify the number of folds in a (Stratified)KFold\n                        n_jobs=-1, #Number of jobs to run in parallel\n                        verbose=1)\ngrid_obj = grid_obj.fit(X_train, y_train)\n\n# Set the clf to the best combination of parameters\nRFR = grid_obj.best_estimator_\n\n# Fit the best algorithm to the data. \nRFR.fit(X_train, y_train)","439af6f1":"from sklearn.metrics import r2_score\nfrom sklearn.metrics import mean_squared_error\n\npredictions = RFR.predict(X_val)\n\n#if we want to Re-scale, use this lines of code :\n#predictions = predictions * (max_train - min_train) + min_train\n#y_validation_RF = y_validation * (max_train - min_train) + min_train\n\n#if not, keep this one:\ny_validation_RF = y_val\n\nprint('R2 score = ',r2_score(y_validation_RF, predictions), '\/ 1.0')\nprint('MSE score = ',mean_squared_error(y_validation_RF, predictions), '\/ 0.0')","94dd7615":"# test data predictions\npredictions = RFR.predict(X_test)\n\ny_test_RF = y_test\n\nprint('R2 score = ',r2_score(y_test_RF, predictions), '\/ 1.0')\nprint('MSE score = ',mean_squared_error(y_test_RF, predictions), '\/ 0.0')","00189edb":"import matplotlib.pyplot as plt","5ad5b38c":"plt.plot(y_validation_RF[0:50], '+', color ='blue', alpha=0.7)\nplt.plot(predictions[0:50], 'ro', color ='red', alpha=0.5)\nplt.title('Prediction vs Real values')\nplt.show()","0ec435a0":"plt.plot(y_test_RF[0:50], '+', color ='blue', alpha=0.7)\nplt.plot(predictions[0:50], 'ro', color ='red', alpha=0.5)\nplt.title('Prediction vs Real values')\nplt.show()","3fb32d9f":"\n\n# Convert data as np.array\nfeatures = np.array(X_train)\ntargets = np.array(y_train.reshape(y_train.shape[0],1))\nfeatures_validation= np.array(X_val)\ntargets_validation = np.array(y_val.reshape(y_val.shape[0],1))\nfeatures_test= np.array(X_test)\ntargets_test = np.array(y_test.reshape(y_test.shape[0],1))\n\nprint(features[:10])\nprint(targets[:10])","3aa7c8b2":"import keras\nfrom keras.models import Sequential\nfrom keras.layers.core import Dense, Dropout, Activation\n\n# Building the model\nmodel = Sequential()\nmodel.add(Dense(200, input_dim=55, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(100, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(50, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(25, kernel_initializer='normal', activation='relu'))\nmodel.add(Dense(1, kernel_initializer='normal'))\n\n# Compiling the model\nmodel.compile(loss = 'mse', optimizer='adam', metrics=['mse']) #mse: mean_square_error\nmodel.summary()","9b5981b4":"# Training the model\nepochs_tot = 1000\nepochs_step = 250\nepochs_ratio = int(epochs_tot \/ epochs_step)\nhist =np.array([])\n\nfor i in range(epochs_ratio):\n    history = model.fit(features, targets, epochs=epochs_step, batch_size=100, verbose=0)\n    \n    # Evaluating the model on the training and testing set\n    print(\"Step : \" , i * epochs_step, \"\/\", epochs_tot)\n    score = model.evaluate(features, targets)\n    print(\"Training MSE:\", score[1])\n    score = model.evaluate(features_validation, targets_validation)\n    print(\"Validation MSE:\", score[1], \"\\n\")\n    hist = np.concatenate((hist, np.array(history.history['mean_squared_error'])), axis = 0)\n    \n# plot metrics\nplt.plot(hist)\nplt.show()","b10419e6":"#prediction and error checking\npredictions = model.predict(features_validation, verbose=0)\n\nprint('R2 score = ',r2_score(y_val, predictions), '\/ 1.0')\nprint('MSE score = ',mean_squared_error(y_val, predictions), '\/ 0.0')\n","bb59b08d":"plt.plot(y_val[0:50], '+', color ='blue', alpha=0.7)\nplt.plot(predictions[0:50], 'ro', color ='red', alpha=0.5)\nplt.title('Prediction vs Real values')\nplt.show()","3303e8ee":"predictions = model.predict(features_test, verbose=0)\n\nprint('R2 score = ',r2_score(y_test, predictions), '\/ 1.0')\nprint('MSE score = ',mean_squared_error(y_test, predictions), '\/ 0.0')\n","dc24f61f":"plt.plot(y_test[0:50], '+', color ='blue', alpha=0.7)\nplt.plot(predictions[0:50], 'ro', color ='red', alpha=0.5)\nplt.title('Prediction vs Real values')\nplt.show()","19974a23":"**Most players age lies into their 20s as that's when they get drafted or hit the prime into NBA. **","768c66aa":"# Points per game \n","e6878844":"**Earvin \"Magic\" Johnson Jr. (born August 14, 1959) is an American retired professional basketball player and current president of basketball operations of the Los Angeles Lakers of the National Basketball Association (NBA). He played point guard for the Lakers for 13 seasons. After winning championships in high school and college, Johnson was selected first overall in the 1979 NBA draft by the Lakers. He won a championship and an NBA Finals Most Valuable Player Award in his rookie season, and won four more championships with the Lakers during the 1980s. Johnson retired abruptly in 1991 after announcing that he had contracted HIV, but returned to play in the 1992 All-Star Game, winning the All-Star MVP Award. After protests from his fellow players, he retired again for four years, but returned in 1996, at age 36, to play 32 games for the Lakers before retiring for the third and final time.**\n\n**Johnson's career achievements include three NBA MVP Awards, nine NBA Finals appearances, twelve All-Star games, and ten All-NBA First and Second Team nominations. He led the league in regular-season assists four times, and is the NBA's all-time leader in average assists per game, at 11.2. Johnson was a member of the 1992 United States men's Olympic basketball team (\"The Dream Team\"), which won the Olympic gold medal in 1992. After leaving the NBA in 1992, Johnson formed the Magic Johnson All-Stars, a barnstorming team that travelled around the world playing exhibition games Johnson was honored as one of the 50 Greatest Players in NBA History in 1996.**","9d3260e9":"**Wilt Chamberlain is regarded as one of the most dominant scorers in the NBA history. Known as the first and only player to score 100 points in a single NBA game, he was a two time NBA Champion(1967,1972) and was a four-time NBA MVP.**\n\n**Chamberlain attended High school at Overbrook and went to college at the University of Kansas. He was selected as a territorial pick in the 1959 NBA Draft by the Philadelphia Warriors and won Rookie of the Year award. He holds numerous NBA records, which are nearly impossible to break.**\n\n**Wilt Chamberlain won seven scoring titles, which is the second most of all time and has an incredible 30.07 points per game average with 31,419 points scored in 1045 games played. He also holds a record for most points scored in a single season with an average of 50.36 points per game.****","97060afa":"# Players career length","e31c00ea":"# College producing more number of NBA players","6f0770db":"# How LeBron James Became Stephen Curry\n\n**He\u2019s shooting more 3-pointers, longer 3-pointers and trickier 3-pointers. The best player in the NBA has adapted to basketball\u2019s evolution.**","d34c4a53":"**The  five basketball positions normally employed by organized basketball teams are the point guard (PG), the shooting guard (SG), the small forward (SF), the power forward (PF), and the center (C).**\n![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/a\/ac\/Basketball_Positions.png)","40ce0b53":"# Players position and age distribution\n<a id=\"analysis\" ><\/a>","a00114aa":"**We can conclude that after a dip in 2012 LeBron james has improved on his 3 points shooting matching his early days 3 points chart. **","988c83ca":"# Field goal per game","85562d2b":"**Chamberlain was known by several nicknames during his basketball playing career. He hated the ones that called attention to his height such as \"Goliath\" and \"Wilt the Stilt\", which was coined during his high school days by a Philadelphia sportswriter. He preferred \"The Big Dipper\", which was inspired by his friends who saw him dip his head as he walked through doorways. After his basketball career ended, Chamberlain played volleyball in the short-lived International Volleyball Association, was president of that organization, and is enshrined in the IVA Hall of Fame for his contributions. He was a successful businessman, authored several books, and appeared in the movie Conan the Destroyer. **","6fb0977e":"**In the year 2017 james excels at everything except 3 point per game of Curry's with James having 1.67 per game to curry's 4.10 which is significantly on the larger side.\nJames is a magician when it comes to rebounds per game, having 8.64 per game to curry's 4.46 per game where as Curry's catching up with points per game of james.\n**","ebeb28d3":"**California has produced more number of NBA players compared to other states as many players birth state belongs to California, is that maybe due to football obsessions in country sides?  **","e2ea537e":"**Despite some critics who felt Cowens was too small to play center, Cowens was selected as the fourth overall pick by the Boston Celtics during the 1970 NBA draft, largely at the recommendation of former Celtics center Bill Russell. During his rookie year, Cowens averaged 17.0 points per game and 15.0 rebounds per game. He was named to the NBA All-Rookie First Team and shared the NBA's Rookie of the Year honors with Portland's Geoff Petrie. He also led the league in personal fouls that same year.**\n\n**In 1973, Cowens averaged 20.5 ppg and 16.2 rpg while helping the Celtics to a league best 68-14 record. He was chosen the NBA MVP as well as MVP of the All-Star Game that same season. Cowens and fellow Celtic Bill Russell both have the distinction of being named MVP of the league but not being included on the All-NBA First Team.**\n\n**Cowens retired in 1980, however, in 1982 he was coaxed out of retirement by the Milwaukee Bucks, who were then coached by his former Celtics teammate Don Nelson. The Celtics still held his rights at the time so the Bucks gave up Quinn Buckner as compensation. Cowens played for the Bucks during the 1982\u201383 season before retiring for good.**\n\n**During his NBA career, Cowens averaged 17.6 points and 13.6 rebounds per game, was selected to eight All-Star Games, was named to the All-NBA Second Team three times, and was named to the All-NBA Defensive First Team in 1976 and All-NBA Defensive Second Team in 1973 and 1980. He was a member of the Celtics' 1974 and 1976 NBA Championship teams.**\n\n**Cowens' playing credo was all-out intensity at both ends of the court, a style that never wavered during his 11-year NBA career.**\n\n**As a testament to his all-around ability, Cowens is one of only five players (Scottie Pippen, Kevin Garnett, LeBron James, and Giannis Antetokounmpo are the others) to lead his team in all five major statistical categories for a season: points, rebounds, assists, blocks, and steals. He accomplished the feat in the 1977\u201378 season.**","74ea1af5":"# 3 points per game","c79840a9":"# Introduction\n<a id=\"introduction\" ><\/a>\n **National Basketball Association (NBA) is a men's professional basketball league in North America; composed of 30 teams (29 in the United States and 1 in Canada). It is widely considered to be the premier men's professional basketball league in the world. The NBA is an active member of USA Basketball (USAB), which is recognized by FIBA (also known as the International Basketball Federation) as the national governing body for basketball in the United States. The NBA is one of the four major professional sports leagues in the United States and Canada. NBA players are the world's best paid athletes by average annual salary per player.**\n\n**The league was founded in New York City on June 6, 1946, as the Basketball Association of America (BAA). The league adopted the name National Basketball Association on August 3, 1949, after merging with the competing National Basketball League (NBL). The league's several international as well as individual team offices are directed out of its head offices located in the Olympic Tower at 645 Fifth Avenue in Manhattan. NBA Entertainment and NBA TV studios are directed out of offices located in Secaucus, New Jersey.**","216796ec":"**Willis is one of fifteen players in NBA history with over 16,000 career points and 11,000 career rebounds. He was named to the NBA Eastern Conference All-Star Team in 1992, when he finished the season with a career-high average of 15.5 rebounds a game. Willis holds career averages of 12.2 ppg, 8.4 rpg, and 0.9 apg while averaging 27 minutes per game in 21 NBA seasons. He shares the record for most seasons played in the NBA with Robert Parish, Kevin Garnett, Vince Carter and Dirk Nowitzki.**","8d2ec0fc":"**We can conclude that ever since 2010 debut Curry has improved on his rebounds per game but he's nowhere close to LeBron james's rebounds per game  **","d83f57a4":"# Which state has produced more NBA players?","9c81e3b7":"# TABLE OF CONTENTS\n\n1. [Introduction](#introduction)\n2. [Players Position and Age distribution of players ](#analysis)\n3.  [Points per game  ](#ppg)\n4.  [Assists per game](#apg)\n5.  [ Field goal average per game ](#fgpg)\n6.  [Rebounds per game ](#rpg)\n7.  [Turnover per game](#tpg)\n8. [2 points average per game](#twoppg)\n9. [3 points average per game](#threeppg)\n10. [Dribbles per game](#dpg)\n11. [Players career length](#lengthycareer)\n12. [Top 10 best players of NBA ](#best)\n13. [State which produced most NBA players ](#state)\n14. [Wordcloud for players colleges](#colleges)\n15. [Deep learning for predicting PPG of players](#keras)\n16.  [Conclusion](#conclusion)","b673ff12":"# Random Forest + GridSearchCV ","6780dedd":"# Rebounds per game","35d9e274":"# Player who can dribble past the defense and score\/assists ","9d56521e":"# Turnover per game","7b369c9d":"**Westbrook III(born November 12, 1988) is an American professional basketball player for the Oklahoma City Thunder of the National Basketball Association (NBA). He is a seven-time NBA All-Star, and a two-time NBA All-Star Game Most Valuable Player, winning consecutive awards in 2015 and 2016. He is also a seven-time All-NBA Team member and led the league in scoring in 2014\u201315 and 2016\u201317. In 2017, Westbrook became one of two players in NBA history to average a triple-double for a season, along with Oscar Robertson in 1962. He also set a record for the most triple-doubles in a season, with 42. He was subsequently named the 2016\u201317 NBA Most Valuable Player. This feat was repeated the following season when he again averaged a triple-double across 80 games. In 2017\u201318, he also led the league in assists for the first time.**\n\n**Westbrook played college basketball for the UCLA Bruins and earned third-team all-conference honors in the Pac-10. He was selected with the fourth overall pick in the 2008 NBA draft by the Seattle SuperSonics, who then relocated to Oklahoma City six days later. Westbrook has represented the United States national team twice, winning gold medals in the 2010 FIBA World Championship and the 2012 Olympics.**","0d0bbbb5":"# Neural network for predicting Points per game of the players","cbfb4001":"** Russell Westbrook is the player who carries Oklahoma thunders on his back, maybe Durant was his only partner until he moved to Warriors, you got to watch this player's dunk and dribbling ability during the game to feel what i feel..**","46c235c6":"# 2 points per game","982000d5":"**From a historical NBA perspective, the rivalry between Chamberlain and his perennial nemesis Bill Russell is cited as the greatest on-court rivalry of all time. There were three NBA Finals matchups in the rivalry between Larry Bird and Magic Johnson, but they played different positions and did not guard each other. Russell's Celtics won seven of eight playoff series against Chamberlain's Warriors, 76ers, and Lakers teams, and went 57\u201337 against them in the regular season and 29\u201320 in the playoffs. Russell's teams won all four seventh games against Chamberlain's\u2014the combined margin was nine points. Chamberlain outscored Russell 30 to 14.2 per game and outrebounded him 28.2 to 22.9 in the regular season, and also in the playoffs, he outscored him 25.7 to 14.9 and outrebounded him 28 to 24.7. The comparison between the two is often simplified to a great player (Chamberlain) versus a player who makes his team great (Russell), an individualist against a team player. In 1961\u201362 when Chamberlain averaged 50.4 points per game, he noted that Boston did not rely on Russell's scoring, and he could concentrate on defense and rebounding. He wished people would understand that their roles were different. Chamberlain said, \"I've got to hit forty points or so, or this team is in trouble. I must score\u2014understand? After that I play defense and get the ball off the boards. I try to do them all, best I can, but scoring comes first.\" Russell won 11 NBA titles in his career while Chamberlain won two. Chamberlain was named All-NBA first team seven times to Russell's three, but Russell was named league MVP\u2014then selected by players and not the press\u2014five times against Chamberlain's four. Russell and Chamberlain were friends in private life. Russell never considered Chamberlain his rival and disliked the term, instead pointing out that they rarely talked about basketball when they were alone. When Chamberlain died in 1999, Chamberlain's nephew stated that Russell was the second person he was ordered to break the news to.The two did not speak for two decades after Russell criticized Chamberlain after Game 7 of the 1969 Finals. Russell apologized privately to him and later publicly.**","0b5c9579":"# Assists per game","728aceb8":". **A six-time NBA All-Star, he has been named the NBA Most Valuable Player (MVP) twice and won three NBA championships with the Warriors. Many players and analysts have called him the greatest shooter in NBA history. He is credited with revolutionizing the game of basketball by inspiring teams to regularly employ the three-point shot as part of their winning strategy.**\n\n**In 2014\u201315, Curry won his first MVP award and led the Warriors to their first championship since 1975. The following season, he became the first player in NBA history to be elected MVP by a unanimous vote and to lead the league in scoring while shooting above 50\u201340\u201390. That same year, the Warriors broke the record for the most wins in an NBA season en route to reaching the 2016 NBA Finals, which they lost to the Cleveland Cavaliers. Curry helped the Warriors return to the NBA Finals in 2017 and 2018, where they won back-to-back titles.**\n\n**During the 2012\u201313 season, Curry set the NBA record for three-pointers made in a regular season with 272. He surpassed that record in 2015 with 286, and again in 2016 with 402. Curry is currently third in all-time made three-pointers in NBA history. The 2012\u201313 season saw Curry and teammate Klay Thompson earn the nickname of the Splash Brothers, with the pair going on to set the NBA record for combined three-pointers in a season with 484 in 2013\u201314, a record they broke the following season (525) and again in the 2015\u201316 season (678).**","75c97ff7":"**Chamberlain holds numerous NBA records in scoring, rebounding, and durability categories. He is the only player to score 100 points in a single NBA game or average more than 40 and 50 points in a season. He won seven scoring, eleven rebounding, nine field goal percentage titles and led the league in assists once. Chamberlain is the only player in NBA history to average at least 30 points and 20 rebounds per game in a season, which he accomplished seven times. He is also the only player to average at least 30 points and 20 rebounds per game over the entire course of his NBA career. Although he suffered a long string of professional losses, Chamberlain had a successful career, winning two NBA championships, earning four regular-season Most Valuable Player awards, the Rookie of the Year award, one NBA Finals MVP award, and was selected to 13 All-Star Games and ten All-NBA First and Second teams. He was subsequently enshrined in the Naismith Memorial Basketball Hall of Fame in 1978, elected into the NBA's 35th Anniversary Team of 1980, and chosen as one of the 50 Greatest Players in NBA History of 1996.**","e8175c16":"# Conclusion","2a42e1a3":"![](https:\/\/cdn.nba.net\/nba-drupal-prod\/2017-08\/SEO-image-NBA-logoman.jpg)","9469c585":"**yet to follow.. \n**","f1cd5e74":"# Dribbles per game"}}