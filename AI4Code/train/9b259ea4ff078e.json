{"cell_type":{"c0c67aec":"code","f11cd39a":"code","62bb4b25":"code","d1ef981c":"code","3ce40e42":"code","65e9027a":"code","75e24a9c":"code","a558819b":"code","f8071b16":"code","b8fa62e7":"code","7cb84537":"code","eb30297d":"code","c57003ae":"code","ee4566e7":"code","52676ba7":"code","443a5f88":"code","c5d42e15":"code","ba519119":"code","56624466":"code","cd54b951":"code","865c28f4":"code","959ede92":"code","7499bb35":"code","0bc35968":"code","9967281e":"code","2f528a6b":"code","e3329769":"code","9c3fc991":"code","6fd62df8":"code","d60ef94d":"code","843432ea":"code","efac91a9":"code","f4245dd2":"code","f28deb30":"code","b62f3026":"code","f97136ac":"code","7859b35e":"code","d31818e5":"code","308ac16f":"code","991a34b9":"code","683c240a":"code","db36eea0":"code","ca744655":"code","a719fbaf":"code","07b8472b":"code","206e6e6f":"code","3c1bf0a6":"code","c615dfa1":"code","bac37138":"code","8e672411":"code","e727e79a":"code","08cfba98":"code","0a11802d":"code","a2e046d0":"code","1bf056d6":"code","732dfa08":"code","d28fe258":"code","664fb9b5":"code","6e2152c1":"code","a2c62069":"code","b19e0da0":"code","0a58a3c2":"code","079f8068":"code","cbd30d22":"code","a37aa2b7":"code","ac28e083":"code","c071d3df":"code","820cd3b8":"code","2e40013c":"code","a327509c":"code","dcfd0c49":"code","f0ca0a37":"code","21b8949e":"code","50946e5f":"code","b6491d82":"code","5d4037b6":"code","b2d7b509":"code","af8b0f06":"code","e0a84f40":"code","6280f2a0":"code","2f69689b":"code","56885121":"code","a9814448":"code","b5a05ea8":"code","a6f53302":"code","9c1df6a0":"code","a94f54b5":"code","85faf06c":"code","cdb6c352":"code","6b0e7bae":"code","d6be0691":"code","2ea73eab":"code","f5aefde9":"code","909fdba4":"code","c010e83d":"code","f58b0536":"code","fbfee056":"code","7e358919":"code","21544736":"code","3239655c":"code","8410787c":"markdown","85c5d2c2":"markdown","74160a33":"markdown","1321a24c":"markdown","53c481e3":"markdown","eaf4d7cd":"markdown","11a3408f":"markdown","e80bf945":"markdown","5035b30b":"markdown","5cf0d931":"markdown","92daed5d":"markdown","5a825c4f":"markdown","efdcb295":"markdown"},"source":{"c0c67aec":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f11cd39a":"#data visualizationship enables us to understand the data and its internal relationships using our visual sense\n#this allows us to engage more effectively with the data as opposed to studying rawnumbers etc \n\n\n\n####purpose of data visualization####\n##by understanding the inter-relationships between the features of a dataset, we can make a more\n##informed decision about how to treat the data and which ml models to use to get \n##the best possible accuracy or prediction.\n\n##without understanding this through visualization tools we will be treating \n##the data in the darkness. ","62bb4b25":"#importing library \n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n%matplotlib inline\n\nplt.figure(figsize=(16, 6))\nfigsize=(20,10)\nsns.set(style='darkgrid')\n","d1ef981c":"#use built in dataset 'tips'\ndf = sns.load_dataset('tips')\ndf.head()","3ce40e42":"df.dtypes\ndf.shape\n","65e9027a":"#relationship plot how one var relates to another \nsns.relplot(x = 'total_bill',y='tip',data=df)","75e24a9c":"#by adding hue we can differentiate based on categorical feature \nsns.relplot(x = 'total_bill',y='tip',data=df,hue='smoker')","a558819b":"#by using style we can differentiate further with another category \n#by adding so many elements to the plot it is possible that the result will be confusing \n\n\nsns.relplot(x = 'total_bill',y='tip',data=df,hue='sex',style='smoker')","f8071b16":"#changing the hue of the plots using size feature intead of sex\nsns.relplot(x = 'total_bill',y='tip',data=df,hue='size',style='time')","b8fa62e7":"#changing the size of the plot mark based on size variable, if size bigger dataplot also bigger \n#influence the size gradient with sizes () input\n\n\n\n\nf = sns.relplot(x = 'total_bill',y='tip',data=df,hue='size',size = 'size',sizes = (45,900),style='time')\n\nf.fig.set_size_inches(9.35,8)","7cb84537":"#rel plot can also be used for line graphs ","eb30297d":"#correlation\n#find inter-relationship between different features \n\ndf.corr()\n#correlation data","c57003ae":"#use heat map to visualize corelation \nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of heatmap \n\nsns.heatmap(df.corr())","ee4566e7":"#using joint joint plot \n\nsns.jointplot(x='tip',y='total_bill',data=df\n              ,kind='reg').fig.set_size_inches(8.25,7.65)","52676ba7":"#pair plot \n#for multiple bi variable relationships \nsns.pairplot(df)","443a5f88":"#separating too graphs based on chosen variable, using 'col' input \n#if vertical arrangement is required 'row' can be used \nf = sns.relplot(height=7,x = 'total_bill',y='tip',data=df,hue='size',size = 'size',sizes = (45,1000),col='time')","c5d42e15":"#if chosen variable for col has many categories, that many graphs will be formed \nf = sns.relplot(x = 'total_bill',y='tip',data=df,hue='size',size = 'size',sizes = (45,1000),col='size',col_wrap=3)\n\n#by choosing size as the input for col, all data points with the same size feature have been grouped \n#col_wrap can be used to arrange the plots ","ba519119":"sns.pairplot(df,hue='smoker').fig.set_size_inches(10,8)","56624466":"#distribution plot \n\nsns.distplot(df['tip'])","cd54b951":"#visualizing categorical data\n##influence size of graph with height input \nsns.catplot(x='day',y='total_bill',data=df,height=7)","865c28f4":"#align datapoints by turning off jitter \nsns.catplot(x='day',y='total_bill',data=df,height=7,jitter=False)","959ede92":"#swarm kind of categorical plot \nsns.catplot(x='day',y='total_bill',data=df,height=8,kind='swarm',hue='size')","7499bb35":"sns.catplot(x='smoker',y='tip',data=df,height=5,hue='sex')","0bc35968":"#manualy setting the order of categorical feature by using order input \nsns.catplot(x='smoker',order=['No','Yes'],y='tip',data=df,height=5,hue='sex')","9967281e":"#change orientation by switching x and y\nsns.catplot(y='day',x='total_bill',data=df,height=7)","2f528a6b":"#count plot\n#graphs the count of categories in a column \nsns.countplot('smoker',data=df)","e3329769":"#for categrorical features ","9c3fc991":"sns.countplot('day',data=df)","6fd62df8":"#x axis is default \nsns.countplot(y='time',data=df)\n","d60ef94d":"#bar plot, similar to count plot but x and y axis both set by us \n\nsns.barplot(x='total_bill',y='sex',data=df)","843432ea":"#box plot\n\nsns.boxplot('smoker','total_bill', data=df)\n\n","efac91a9":"sns.boxplot(x=\"total_bill\", y=\"day\", hue=\"smoker\",data=df)\n\n","f4245dd2":"#using catplot function to create a box plot \n\nsns.catplot(x='day',y='total_bill',kind='box',data=df,hue='smoker',dodge=True).fig.set_size_inches(9.35,8)","f28deb30":"#by using dogde = false ,hue element ie smoker\/nonsmoker can be combined \nsns.catplot(x='day',y='total_bill',kind='box',data=df,hue='sex',dodge=False)","b62f3026":"#boxen plot similar to box plot \nsns.catplot(x='day',y='total_bill',kind='boxen',data=df,dodge=False).fig.set_size_inches(9.35,8)","f97136ac":"\n#violin plot \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.violinplot(y=\"total_bill\", x=\"day\", data=df,palette='rainbow')\n\n","7859b35e":"#violin plot with cat plot , set 'kind' to violin \nsns.catplot(y='day',x='total_bill',kind='violin',hue='time',data=df,height=7,dodge=False)","d31818e5":"#adding inner shading elements ? \nsns.catplot(y='day',x='total_bill',kind='violin',hue='time',data=df,height=7,dodge=False,inner='stick')","308ac16f":"#using split feature for violin plot \n\n\nsns.catplot(y='day',x='total_bill',kind='violin',hue='sex',data=df,height=7,split=True)","991a34b9":"#creating swarm plot on top of violin plot \n#playing with color palette options to get a good colours that can be seen easily \n\nf=sns.catplot(y='day',x='total_bill',kind='violin',data=df,height=10,split=True,palette='OrRd')\nsns.swarmplot(y='day',x='total_bill',size=12,data=df,ax=f.ax,hue='size',palette='Blues_d')","683c240a":"#exploring line plots\n\n#generating a new data set for this \nfrom numpy.random import randn\n \ndf = pd.DataFrame(dict(time = np.arange(500), value = randn(500).cumsum()))\ndf.head()","db36eea0":"\nsns.relplot(x = 'time', y = 'value', kind = 'line', data = df,height=10)","ca744655":"#creating dataset where values are not ordered \n\ndf = pd.DataFrame(randn(250, 2).cumsum(axis = 0), columns = ['time', 'value'])\ndf.head()\n\n","a719fbaf":"#when the values in the dataset are not sorted the line plot will be a chaotic zigzag\nsns.relplot(x = 'time', y = 'value', kind = 'line', data = df, sort = False)","07b8472b":"#sort = true \nsns.relplot(x = 'time', y = 'value', kind = 'line', data = df, sort = True)","206e6e6f":"#visualizing data with confidence interval \n\n#using fmri dataset\ndf = sns.load_dataset('fmri')\ndf.head()\n\n","3c1bf0a6":"\n#without confidence interval \nsns.relplot(x='timepoint',y='signal',estimator=None,kind ='line',data=df)","c615dfa1":"sns.relplot(x='timepoint',y='signal',kind ='line',data=df)","bac37138":"#using standard deviation as confidence interval\nsns.relplot(x='timepoint',y='signal',kind ='line',data=df,ci='sd')","8e672411":"#adding hue element for this plot \nsns.relplot(x='timepoint',y='signal',hue='event',kind ='line',data=df,ci='sd').fig.set_size_inches(9.35,8)","e727e79a":"#adding style element to this plot with a different hue variable\nsns.relplot(x='timepoint',y='signal',hue='region',style='event',kind ='line',data=df,ci='sd')","08cfba98":"#adding markers \nsns.relplot(x='timepoint',y='signal',hue='event',style='event',kind ='line',data=df,markers=True)","0a11802d":"#using units feature set to 'subject'\nsns.relplot(x='timepoint',y='signal',hue='region',data=df,kind='line',estimator=None ,units='subject')","a2e046d0":"df['event'].value_counts()","1bf056d6":"#previous plot looks very confusing \n#using same method to plot only when event is 'stim' in an entry\nsns.relplot(x='timepoint',y='signal',hue='region',data=df.query('event ==\"stim\"'),kind='line',estimator=None ,units='subject')","732dfa08":"#creating a set of plots, split using row and column, using event and subject feature respectively \n\n\n\nsns.relplot(x='timepoint',y='signal',hue='subject',row='event',col='region',kind='line',estimator=None,data=df).fig.set_size_inches(10,8)","d28fe258":"#lineplot\n#error style \n\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n\nsns.lineplot(x='timepoint',y='signal',hue='subject',data=df,err_style='bars')","664fb9b5":"#using units for multiple plots \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n\nsns.lineplot(x = 'timepoint', y = 'signal', hue = 'event', units = 'subject', estimator = None, lw = 1, data = df.query(\"region == 'frontal'\")\n            )","6e2152c1":"df = sns.load_dataset('dots').query(\"align == 'dots'\")\ndf.head()","a2c62069":"#simple line plot \nsns.relplot(x='time',y='firing_rate',kind='line',data = df)","b19e0da0":"#differentiating based on coherence using hue \nsns.relplot(x='time',y='firing_rate',kind='line',data = df,hue='coherence').fig.set_size_inches(10,8)","0a58a3c2":"#adding style with choice category in data\n#\n#arranging the code a little different to include figure size statement \n\nsns.relplot(x='time',y='firing_rate',kind='line',data = df,hue='coherence'\n            ,style='choice').fig.set_size_inches(10.25,6.65)","079f8068":"#influencing the line width with size and sizes input\n\nsns.relplot(x='time',y='firing_rate',kind='line',data = df,hue='coherence'\n            ,size='coherence',sizes=(3,18)).fig.set_size_inches(10.25,6.65)","cbd30d22":"titanic = sns.load_dataset('titanic')\ntitanic.head()","a37aa2b7":"\n#visualizing categorical plot using bar plot \nsns.catplot(y='survived',x='sex',kind='bar',hue='class',data=titanic,height=7)","ac28e083":"#count plot \nsns.catplot(x='deck',kind='count',palette='ch:1.9',data=titanic,height=7)","c071d3df":"#point plot\n\nsns.catplot(x='sex',y='survived',kind='point',hue='class',data=titanic,height=7)","820cd3b8":"#understanding distribution plot \n\n","2e40013c":"#univariate distribution\n#create random variable x, now to chart its distribution \nx=randn(300)\n\nx[:30]","a327509c":"#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.distplot(x)","dcfd0c49":"#printing distribution without the histogram \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.distplot(x,hist=False)","f0ca0a37":"#disable the kernel density estimation line \n\n#adding bins \nsns.distplot(x,kde=False,bins=14\n            )","21b8949e":"#adding rug \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n\nsns.distplot(x,kde=False,bins=30,rug=True)","50946e5f":"#using kde plot method\n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n#adding shading \nsns.kdeplot(x,shade=True)","b6491d82":"#adding bandwidth to kde plot \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.kdeplot(x,shade=True,bw=0.1)","5d4037b6":"#adding bandwidth to kde plot \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.kdeplot(x,shade=True,bw=15)","b2d7b509":"#lower bandwidth produces less smooth plot \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\nsns.kdeplot(x,shade=True,bw=0.04)","af8b0f06":"#using cut to affect the plot \n\n#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n#cut = -3\nsns.kdeplot(x,shade=True,bw=0.5,cut=-3)","e0a84f40":"#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10,7.75))\n#above lines required for changing the size of plot \n\n#cut = 3.25\nsns.kdeplot(x,shade=True,bw=0.5,cut=3.254)","6280f2a0":"#use tips dataset again\ndf = sns.load_dataset('tips')\ndf.head()","2f69689b":"#using joint joint plot \n\nsns.jointplot(x='tip',y='total_bill',data=df\n              ,kind='reg').fig.set_size_inches(8.25,7.65)","56885121":"#hex type joint plot\nsns.jointplot(x='tip',y='total_bill',data=df\n              ,kind='hex').fig.set_size_inches(8.25,7.65)","a9814448":"#kde type joint plot\nsns.jointplot(x='tip',y='total_bill',data=df\n              ,kind='kde').fig.set_size_inches(8.25,7.65)","b5a05ea8":"x=df['tip']\ny=df['total_bill']","a6f53302":"#kde plot with cmap palette \n\nf, ax = plt.subplots(figsize = (6,6))\n\n#x='tip',y='total_bill'\n\ncmap = sns.cubehelix_palette(as_cmap = True, dark = 0, light = 1, reverse= True)\n\nsns.kdeplot(x, y, cmap = cmap, n_levels=60, shade=True)","9c1df6a0":"g = sns.jointplot(x, y, kind = 'kde', color = 'm')","a94f54b5":"iris = sns.load_dataset('iris')\niris.head()","85faf06c":"#pair plot \n#for multiple bi variable relationships \nsns.pairplot(iris)","cdb6c352":"#changing the style for the plotsw \n\ng=sns.PairGrid(iris)#set up grid\n\ng.map_diag(sns.kdeplot)#create plot for graphs on the diagonal\n\ng.map_offdiag(sns.kdeplot,n_levels=10)#create plot for off diagonal girds ","6b0e7bae":"#import matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(7,6))\n#above lines required for changing the size of plot \n\n#regression plot \nsns.regplot(x = 'total_bill', y = 'tip', data = df)","d6be0691":"#linear model plot \n\n\nsns.lmplot(x = 'total_bill', y= 'tip', data = df,height=6)","2ea73eab":"#creating two fit lines based on hue\n\n\ng = sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\", data=df,order=3)","f5aefde9":"\ng = sns.lmplot(x=\"total_bill\", y=\"tip\", hue=\"smoker\",\n               data=df,order=1,col='time',row='sex').fig.set_size_inches(10.25,9.65)","909fdba4":"sns.lmplot(x = 'size', y = 'tip', data = df, x_jitter = 0.05)","c010e83d":"sns.lmplot(x = 'size', y = 'tip', data = df, x_estimator = np.mean)","f58b0536":"data = sns.load_dataset('anscombe')\ndata.head()","fbfee056":"#plot a liner relationship between two variables \n\nsns.lmplot(x = 'x', y = 'y', data = data.query(\"dataset == 'I'\"), \n           ci = None, \n           scatter_kws={'s': 80})","7e358919":"#in this dataset there is no linear relationship \nsns.lmplot(x = 'x', y = 'y', data = data.query(\"dataset == 'II'\"), \n           ci = None, \n           scatter_kws={'s': 80},\n           order=3#change this to get polinomial relationship plot\n          )","21544736":"#the outlier in this data will throw off the fit line \n#dealing with outliers , \n\nsns.lmplot(x = 'x', y = 'y', data = data.query(\"dataset == 'III'\"), \n           ci = None, \n           scatter_kws={'s': 80},\n           order=1\n           \n          )","3239655c":"#making the graph robust \nsns.lmplot(x = 'x', y = 'y', data = data.query(\"dataset == 'III'\"), \n           ci = None, \n           scatter_kws={'s': 80},\n           order=1,\n           robust=True#deals with outliers\n          )","8410787c":"**regression\/linear-regression**\n\n**KDE Kernal Density estimation **\n\n**bins**\n\n**confidence interval**\n\n**outlier**\n\n**quartile**\n\n**interquartile range**\n\n**normal distribution, standard distribution**","85c5d2c2":"#visualizing categorical data \n\nusing titanice dataset","74160a33":"**IMPORTANT, Generating graphics with tabular data**","1321a24c":"*\n\n\n\n\n\n*","53c481e3":"**arranging multiple charts next to each other, as a group can have greater impact **","eaf4d7cd":"#using fmri dataset","11a3408f":"> **visualizing linear regression and relationship**","e80bf945":"**bivariate distribution**\n\nusing two variables","5035b30b":"outside dot is clearly an outlier ","5cf0d931":"**using iris dataset**","92daed5d":"using dots data set","5a825c4f":"**#use .fig.set_size_inches(x,y) to set the figure size **","efdcb295":"**When hue is categorical it will be distict based on categorical, when it is numeric it will be a gradient going from lower to upper limit **"}}