{"cell_type":{"67bfead3":"code","f56d89cb":"code","5c4c4bed":"code","554d5ba4":"code","408b7b55":"code","3520cf8e":"code","642a6f7c":"code","bc5ad7af":"code","701d4998":"code","9c0cfbae":"markdown","617ad2f3":"markdown","e5ac9938":"markdown","df14e173":"markdown","f3947ccc":"markdown","b0a9eb3f":"markdown","9993767c":"markdown"},"source":{"67bfead3":"# import libraries\nimport os\n\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.linear_model import LinearRegression\n","f56d89cb":"# Check data location\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5c4c4bed":"# load data\npath = \"\/kaggle\/input\/house-prices-advanced-regression-techniques\/\"\n\ntrain = pd.read_csv(path + \"train.csv\")\ntest = pd.read_csv(path + \"test.csv\")\n\ntrain.head()","554d5ba4":"# separate target y and features X\n\nX = train.copy()\ny = X.pop(\"SalePrice\")","408b7b55":"# select continuous numeric feature data based on data description\n# excludes dtypes: categorical; ordinal numeric; datetime\n\ncont_feats = [\"LotFrontage\", \"LotArea\", \"MasVnrArea\", \"BsmtFinSF1\", \"BsmtFinSF2\", \"BsmtUnfSF\", \"TotalBsmtSF\", \"1stFlrSF\", \"2ndFlrSF\", \"LowQualFinSF\", \"GrLivArea\", \"GarageArea\", \"WoodDeckSF\", \"OpenPorchSF\", \"EnclosedPorch\", \"3SsnPorch\", \"ScreenPorch\", \"PoolArea\", \"MiscVal\"]\n\nX_cont = X[cont_feats]\ntest_cont = test[cont_feats]\n\nprint(X_cont.info())\nprint(test_cont.info())","3520cf8e":"imputer = SimpleImputer(strategy='mean')\n\nX_cont = imputer.fit_transform(X_cont)\ntest_cont = imputer.transform(test_cont)\n\n# check for null values again\n\nprint(pd.DataFrame(X_cont).info())\nprint(pd.DataFrame(test_cont).info())","642a6f7c":"reg = LinearRegression()\n\n_ = reg.fit(X_cont, y)","bc5ad7af":"y_pred = reg.predict(test_cont)","701d4998":"output = pd.DataFrame({'Id': test.Id,\n                       'SalePrice': y_pred})\noutput.to_csv('submission.csv', index=False)","9c0cfbae":"Continued in [Basic Linear Regression - 2](https:\/\/www.kaggle.com\/hughcowley\/basic-linear-regression-2)","617ad2f3":"### 2) Fit linear model","e5ac9938":"Finally, prepare output and submit to leaderboard:","df14e173":"### What needs doing?\n\n1) fill null values\n\n2) fit linear regression model to training data\n\n3) predict target based on test data","f3947ccc":"### 3) Predict target","b0a9eb3f":"### 1) Fill null values\n\nBasic fill: replace missing data with the mean value of the rest of the data in that feature\n\nMissing test data should use the means calculated from the training data to avoid data leakage","9993767c":"# Basic Linear Regression Model"}}