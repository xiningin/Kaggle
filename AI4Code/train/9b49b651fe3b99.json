{"cell_type":{"33651687":"code","2580f625":"code","105b80d2":"code","79cd0291":"code","529de26d":"code","46500e49":"code","d40cdf06":"code","88c01e41":"code","a790b802":"code","9ed1c6f2":"code","89707838":"code","e84d5da2":"code","b321c6fa":"code","4d5adde3":"code","f06789d1":"code","7b40b1f5":"code","e0170637":"code","aba35275":"code","5f771550":"code","5df89bfb":"code","4d413900":"code","7ff864bd":"code","824730f5":"code","cfa3bcaa":"code","6ee49ce5":"code","07b9b9bf":"code","84db5ce2":"code","874e3532":"code","1d1cb7f7":"code","b9621fdc":"code","2bf84682":"code","31435810":"code","1150d7f8":"code","38bbd81b":"code","8d9ce2dc":"code","b4554481":"code","f50efefd":"code","e21a2e1c":"code","7a451965":"code","0a042384":"code","066317c5":"code","3472ce84":"code","82e262a0":"code","41a7555f":"code","7ceaca63":"code","1a37cf46":"code","cfc4215d":"markdown","ae1ae6d1":"markdown","967f154b":"markdown"},"source":{"33651687":"# Supress Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')","2580f625":"# Imports\n\n# pandas\nimport pandas as pd\nfrom pandas import Series,DataFrame\n\n# numpy, matplotlib, seaborn\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","105b80d2":"# get data to dataframe variables\ntrain_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/test.csv\")\n\n# data visualization\ntrain_df\n","79cd0291":"# data visualization\ntest_df","529de26d":"#inspecting train dataframe\n\ntrain_df.shape\ntrain_df.info()\ntrain_df.isnull().sum()\n","46500e49":"#inspecting test dataframe\n\ntest_df.shape\ntest_df.info()\ntest_df.isnull().sum()","d40cdf06":"train_df.columns","88c01e41":"# drop unnecessary columns: Name, Ticket, Cabin from train and test data\n#Note: Survived is not present in the test data\n\ntrain_df = train_df[['PassengerId', 'Survived', 'Pclass', 'Sex', 'Age', 'SibSp','Parch', 'Fare', 'Embarked']]\ntest_df = test_df[['PassengerId', 'Pclass', 'Sex', 'Age', 'SibSp','Parch', 'Fare', 'Embarked']]","a790b802":"#Checking the name of the columns in the dataframe\nprint(train_df.columns)\ntest_df.columns","9ed1c6f2":"#checking the null value in the train and test data\nprint(train_df.isnull().sum())\nprint(test_df.isnull().sum())","89707838":"#Inspecting the datatype of the data\nprint(train_df.dtypes)\nprint(test_df.dtypes)","e84d5da2":"# Looking at the data distribution\ntrain_df.describe()","b321c6fa":"# Looking at the data distribution\ntest_df.describe()","4d5adde3":"# checking the distribution of the data\ntrain_df.hist()\n","f06789d1":"#Age\ntrain_df['Age'].hist()\ntrain_df['Age'].describe()","7b40b1f5":"# visualizing the data where Age is null\ntrain_df_null_age = train_df[train_df['Age'].isnull()]\ntrain_df_null_age\n\n","e0170637":"#comparing the histograms\ntrain_df_null_age.hist()\n\ntrain_df.hist()","aba35275":"# percentage of the null to the total data of the age\ntrain_df['Age'].isnull().sum()\/len(train_df.index)*100\n","5f771550":"# Want to see the survived vs Age plot\nsns.barplot(x='Survived', y='Age', data=train_df,estimator=np.count_nonzero)\nplt.title(\"Age vs Survived\")","5df89bfb":"sns.boxplot(x='Survived', y='Age', data=train_df)\nplt.title(\"Age vs Survived\")","4d413900":"sns.violinplot(x='Survived', y='Age', data=train_df)\nplt.title(\"Age vs Survived\")","7ff864bd":"randon_age_array = np.random.randint(0,80,177)\ntrain_df['Age'][train_df['Age'].isnull()] = randon_age_array\ntrain_df['Age']\n","824730f5":"train_df['Age'].hist()\ntrain_df['Age'].isnull().sum()","cfa3bcaa":"# coverting float to int\ntrain_df['Age'] = train_df['Age'].astype(int)\n","6ee49ce5":"train_df['Age'].hist(bins=70)","07b9b9bf":"#Sex\ntrain_df.groupby('Sex')['Sex'].count()","84db5ce2":"plt.subplots(1,2,figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.barplot(x='Sex', y='Survived', data=train_df,estimator=np.count_nonzero)\nplt.title(\"Sex\")\n\nplt.subplot(1,2,2)\nsns.barplot(x='Sex', y='Survived', data=train_df)\nplt.title(\"Sex\")","874e3532":"#Embarked\ntrain_df[(train_df.Embarked.isnull())]","1d1cb7f7":"# there is not a significant null value in Embarked\n# Will delete that rows from the train_df dataframe\ntrain_df = train_df[~(train_df.Embarked.isnull())]\ntrain_df['Embarked'].isnull().sum()","b9621fdc":"train_df.groupby('Embarked')['Embarked'].count()","2bf84682":"plt.subplots(1,2,figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.barplot(x='Embarked', y='Survived', data=train_df,estimator=np.count_nonzero)\nplt.title(\"Embarked\")\n\nplt.subplot(1,2,2)\nsns.barplot(x='Embarked', y='Survived', data=train_df)\nplt.title(\"Embarked\")","31435810":"# Pclass\ntrain_df.groupby('Pclass')['Pclass'].count()","1150d7f8":"plt.subplots(1,2,figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.barplot(x='Pclass', y='Survived', data=train_df,estimator=np.count_nonzero)\nplt.title(\"Pclass\")\n\nplt.subplot(1,2,2)\nsns.barplot(x='Pclass', y='Survived', data=train_df)\nplt.title(\"Pclass\")","38bbd81b":"# Parch, SibSp\nplt.subplots(1,2,figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.countplot(x='Parch', data=train_df)\nplt.title('Parch')\n\nplt.subplot(1,2,2)\nsns.countplot(x='SibSp', data=train_df)\nplt.title('SibSp')\n\nplt.show()","8d9ce2dc":"# combining the columns SibSp and Parch and making one column family.\ntrain_df['Family'] = train_df['SibSp'] + train_df['Parch']\ntrain_df[train_df['Family'] > 0]","b4554481":"sns.countplot(x='Family', data=train_df)\nplt.title('Family')","f50efefd":"# replacing non zero value by 1\ndef decode_family(x):\n    if x == 0:\n        return 0\n    else:\n        return 1\n    \n\n\ntrain_df['Family'] = train_df.Family.apply(decode_family)","e21a2e1c":"# drop unnecessary columns SibSp and Parch now\ntrain_df = train_df.drop(['SibSp','Parch'], axis =1)","7a451965":"train_df.info()","0a042384":"plt.subplots(1,2,figsize=(15,5))\n\nplt.subplot(1,2,1)\nsns.barplot(x='Family', y='Survived', data=train_df,estimator=np.count_nonzero)\nplt.title(\"Family\")\n\nplt.subplot(1,2,2)\nsns.barplot(x='Family', y='Survived', data=train_df)\nplt.title(\"Family\")","066317c5":"# Do same operation on test_df\n\n# combining the columns SibSp and Parch and making one column family.\ntest_df['Family'] = test_df['SibSp'] + test_df['Parch']\n\n# drop unnecessary columns SibSp and Parch now\ntest_df = test_df.drop(['SibSp','Parch'], axis =1)\n\ntest_df['Family'] = test_df.Family.apply(decode_family)","3472ce84":"test_df.Age.isnull().sum()","82e262a0":"randon_age_array = np.random.randint(0,80,86)\ntest_df['Age'][test_df['Age'].isnull()] = randon_age_array\ntest_df['Age']","41a7555f":"#Creating train data and test data\nX_train = train_df[['Pclass', 'Sex', 'Age', 'Fare', 'Embarked','Family']]\nY_train = train_df['Survived']\n\nX_test =test_df[['Pclass', 'Sex', 'Age', 'Fare', 'Embarked', 'Family']]","7ceaca63":"print(X_train.columns)\nprint(X_test.columns)\n","1a37cf46":"sns.pairplot(train_df,hue=\"Survived\",size = 3,diag_kind=\"kde\")","cfc4215d":"Since the number of families value is skewed, so number of member of the family, will effect the\nprediction and the predictor will be bias\nso let us change the family column values to 1 for non-zero values.\n","ae1ae6d1":"### Strong relation between sex and survival","967f154b":"### by looking at the boxplot and the violinplot above, we can say that there is no very significant relations between the aga and survival"}}