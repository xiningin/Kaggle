{"cell_type":{"9cc9c8b7":"code","d3b6a3bd":"code","d5b4fb41":"code","cc73d090":"code","f854da22":"code","0166dbeb":"code","1f1a1522":"code","691005b6":"markdown","0428bc0a":"markdown","20357d80":"markdown","80161cc4":"markdown","93736984":"markdown","6a4fa787":"markdown","00763973":"markdown","4b4cea7f":"markdown"},"source":{"9cc9c8b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d3b6a3bd":"from sklearn.datasets import load_breast_cancer\nfrom sklearn import tree","d5b4fb41":"clf=tree.DecisionTreeClassifier()\nbreast=load_breast_cancer()","cc73d090":"clf=clf.fit(breast.data,breast.target)","f854da22":"tree.plot_tree(clf)","0166dbeb":"import graphviz\ndot_data=tree.export_graphviz(clf,out_file=None)\ngraph=graphviz.Source(dot_data)\ngraph.render(\"breast\")","1f1a1522":"dot_data=tree.export_graphviz(clf, out_file=None,\n                              feature_names=breast.feature_names,\n                              class_names=breast.target_names,\n                              filled=True,rounded=True,\n                              special_characters=True)\ngraph=graphviz.Source(dot_data)\ngraph ","691005b6":"# Export \nExport a decision tree in DOT format.This function generates a GraphViz representation of the decision tree, which is then written into out_file. Once exported, graphical renderings can be generated using","0428bc0a":"# A decision tree classifier.\nThe decision tree structure can be analysed to gain further insight on the relation between the features and the target to predict. In this example, we show how to retrieve:\n*  the binary tree structure;\n*  the depth of each node and whether or not it\u2019s a leaf;\n*  the nodes that were reached by a sample using the decision_path method;\n*  the leaf that was reached by a sample using the apply method;\n*  the rules that were used to predict a sample\n*  the decision path shared by a group of sample\n","20357d80":"# Plot_tree\nPlot tree is method plotting of Decision tree . Here we can visualize the decision tree so that we can visulalize the tree \n","80161cc4":"# Visualization:\nHere we can visualize the algorithm of the decision tree . While we see , there are planty of new parameters.\n*  Gini-impurity- Gini Impurity is a measurement of the likelihood of an incorrect classification of a new instance of a random variable, if that new instance were randomly classified according to the distribution of class labels from the data set.\n*  Classes-  Different for  different datasets\n*  Mean texture, radius etc are the feature of breast cancer datset\n","93736984":"# Fitting the model\nFitting the model , the data and feature of the breast cancer ","6a4fa787":"# Decision Tree\nDecision tree is the most powerful and popular tool for classification and prediction. A Decision tree is a flowchart like tree structure, where each internal node denotes a test on an attribute, each branch represents an outcome of the test, and each leaf node (terminal node) holds a class label.\n","00763973":"# Graphviz\nGraphviz is open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks. It has important applications in networking, bioinformatics, software engineering, database and web design, machine learning, and in visual interfaces for other technical domains.\n> https:\/\/graphviz.org\/","4b4cea7f":"> sklearn.datasets.load_breast_cancer(*, return_X_y=False, as_frame=False)\nThe breast cancer dataset is a classic and very easy binary classification dataset.\n\n"}}