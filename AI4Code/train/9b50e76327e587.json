{"cell_type":{"c48dabe6":"code","32685b0e":"code","f24cfbc7":"code","93e40b04":"code","c91b7c14":"code","535e585e":"code","5e73a60c":"code","642a6689":"code","aba0b4a8":"code","a92423f3":"code","70f5ad3e":"code","ebc73f4e":"code","5570ccec":"code","b21b0259":"code","92f936aa":"code","187c8d11":"code","94d0b34c":"code","406c3d88":"code","94df2a74":"code","1bd34ccc":"code","293653b8":"code","df4623a2":"code","82d43fcd":"code","4e06c546":"code","a0ebc2af":"code","a4bcbafb":"code","6ce4d4e6":"code","8f437f84":"code","2efa20da":"code","94c8c8fb":"code","e5afb9a9":"code","5f4d77c7":"code","2d14eb22":"markdown","75d9bebb":"markdown","35700d54":"markdown","f693ddc0":"markdown"},"source":{"c48dabe6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32685b0e":"from matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score","f24cfbc7":"df = pd.read_csv(\"..\/input\/bostonhoustingmlnd\/housing.csv\")","93e40b04":"df.head(10)","c91b7c14":"df.info()","535e585e":"df.count()","5e73a60c":"tabcorr = df.corr()","642a6689":"tabcorr","aba0b4a8":"plt.figure(figsize=(12,12))\nsns.heatmap(abs(tabcorr), cmap=\"coolwarm\")","a92423f3":"sns.clustermap(abs(tabcorr), cmap=\"coolwarm\")","70f5ad3e":"from scipy.cluster import hierarchy as hc\n\ncorr = 1 - df.corr()\ncorr_condensed = hc.distance.squareform(corr)\nlink = hc.linkage(corr_condensed, method='ward')\nplt.figure(figsize=(12,12))\nden = hc.dendrogram(link, labels=df.columns, orientation='left', leaf_font_size=10)","ebc73f4e":"correlations = tabcorr.MEDV\nprint(correlations)","5570ccec":"correlations = correlations.drop(['MEDV'],axis=0)","b21b0259":"print(abs(correlations).sort_values(ascending=False))","92f936aa":"df.columns","187c8d11":"X = df.drop(['MEDV'], axis=1)\ny = df.MEDV\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","94d0b34c":"from sklearn.linear_model import LinearRegression\nlm = LinearRegression()\nlm.fit(X_train, y_train)            \ny_pred = lm.predict(X_test)         ","406c3d88":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_pred)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","94df2a74":"sns.distplot(y_test-y_pred)","1bd34ccc":"print(np.sqrt(mean_squared_error(y_test, y_pred)))","293653b8":"lm.score(X_test,y_test)","df4623a2":"X = df.drop(['MEDV'], axis=1)\ny = df.MEDV\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=1)","82d43fcd":"from sklearn import ensemble\nrf = ensemble.RandomForestRegressor()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)\nprint(rf.score(X_test,y_test))","4e06c546":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_rf)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","a0ebc2af":"sns.distplot(y_test-y_rf)","a4bcbafb":"print(np.sqrt(mean_squared_error(y_test, y_rf)))","6ce4d4e6":"rf.score(X_test,y_test)","8f437f84":"import xgboost as XGB\nxgb  = XGB.XGBRegressor()\nxgb.fit(X_train, y_train)\ny_xgb = xgb.predict(X_test)","2efa20da":"plt.figure(figsize=(12,12))\nplt.scatter(y_test, y_xgb)\nplt.plot([y_test.min(),y_test.max()],[y_test.min(),y_test.max()], color='red', linewidth=3)\nplt.xlabel(\"Prix\")\nplt.ylabel(\"Prediction de prix\")\nplt.title(\"Prix reels vs predictions\")","94c8c8fb":"sns.distplot(y_test-y_xgb)","e5afb9a9":"print(np.sqrt(mean_squared_error(y_test, y_xgb)))","5f4d77c7":"print(xgb.score(X_test,y_test))","2d14eb22":"# Method 1 - MLR","75d9bebb":"# Method 3 - XGBoost","35700d54":"# Method 2 - RFR","f693ddc0":"# Data Process & Analysis"}}