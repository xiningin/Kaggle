{"cell_type":{"1b9eab16":"code","e34ba542":"code","45dc99e4":"code","ad1d728d":"code","bd2fa74b":"code","ed5e7f81":"code","9788cea8":"code","d4ac29df":"code","5da7757f":"code","eaa90981":"code","92e1f167":"code","0417473a":"code","a74505ad":"code","5f80585f":"code","45af7e91":"code","c4c404e9":"code","13517426":"code","a5ff7b12":"code","11ed30d3":"code","a90b62b2":"code","7cd8e542":"code","beee415d":"code","f796224b":"code","64e366af":"code","b6fedea6":"code","890ceb7a":"markdown","3a66493c":"markdown"},"source":{"1b9eab16":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e34ba542":"df_movies=pd.read_csv('\/kaggle\/input\/the-movies-dataset\/movies_metadata.csv')\ndf_movies.head(2)","45dc99e4":"data=df_movies\ndata.status.unique()","ad1d728d":"data.video.unique()","bd2fa74b":"data.spoken_languages.nunique()","ed5e7f81":"data.shape","9788cea8":"missingValues=data.isnull().sum()\nprint(missingValues[missingValues>0])","d4ac29df":"data=data.drop(['belongs_to_collection','homepage','title'],axis=1)\ndata.head(2)","5da7757f":"links=pd.read_csv('\/kaggle\/input\/the-movies-dataset\/links_small.csv')\nlinks.info()\nlinks.head()","eaa90981":"links.isnull().sum()","92e1f167":"links=links[links['tmdbId'].notnull()]\nlinks.shape","0417473a":"data.loc[19730]","a74505ad":"smd=data[data['id'].isin(links)]\nsmd.shape","5f80585f":"data['id'].head()","45af7e91":"links.loc[862]","c4c404e9":"print(missingValues[missingValues>0])","13517426":"missingValues=data.isnull().sum()\nprint(missingValues[missingValues>0])","a5ff7b12":"from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n\nfrom sklearn.metrics.pairwise import linear_kernel, cosine_similarity\ndata['tagline']=data['tagline'].fillna('')\ndata['description']=data['overview']+data['tagline']\ndata['description']=data['description'].fillna('')\ndata=data.sample(10000)\ndata.shape\n","11ed30d3":"tf=TfidfVectorizer(analyzer='word',ngram_range=(1,2),min_df=0,stop_words='english')\ntfidf_matrix=tf.fit_transform(data['description'])\n","a90b62b2":"cosine_sim=linear_kernel(tfidf_matrix,tfidf_matrix)","7cd8e542":"cosine_sim[0]","beee415d":"data.head()","f796224b":"originalTitles=data['original_title']\ndata.index\nindices=pd.Series(data.index,index=data['original_title'])","64e366af":"def get_recommendations(title):\n    idx=indices[title]\n    sim_scores=list(enumerate(cosine_sim[idx]))\n    print('Firtsore-',sim_scores)\n    sim_scores=sorted(sim_scores,key=lambda x:x[1],reverse=True)\n    sim_scores=sim_scores[1:31]\n    movie_indices=[i[0] for i in sim_scores]\n    print('movieindx->',movieindices)\n    return originalTitles.iloc[movie_indices]","b6fedea6":"get_recommendations('Jumanji').head(10)","890ceb7a":"Content Based Filtering.\n\nI will build two Content Based Recommenders based on:\n\n* Movie Overviews and Taglines\n* Movie Cast, Crew, Keywords and Genre","3a66493c":"**DATA Preprocessing**"}}