{"cell_type":{"344468d1":"code","14869baf":"code","dc010701":"code","31f274e4":"code","d3df56ac":"code","fedc8ca7":"code","dc1a7f77":"code","22f8b0cb":"code","bce5bfde":"code","a49f9726":"code","a692501e":"code","86307ead":"markdown","ff178486":"markdown","94eff89c":"markdown"},"source":{"344468d1":"#First of all, we must import libraries.\n\nimport pandas as pd\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.width', 500)\npd.set_option('display.expand_frame_repr', False)\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity","14869baf":"#And then, importing the datas from .csv file.\n\ndf = pd.read_csv(\"..\/input\/netflix-shows\/netflix_titles.csv\")\ndf.shape #Out: (8807, 12)\ndf.head()","dc010701":"#Are there NaN values in Cast columns? If there are, filling the space \" \" instead NaN\ndf[\"cast\"].isna().sum()\ndf[\"cast\"] = df[\"cast\"].fillna(\" \")\ndf[\"cast\"].head(50)","31f274e4":"#Setting up Tf-Idf matrix\n\ntfidf = TfidfVectorizer(stop_words=\"english\")\ntf_idf_matrix = tfidf.fit_transform(df[\"cast\"])\ntype(tf_idf_matrix) #scipy.sparse.csr.csr_matrix\ndf[\"cast\"].shape #(8807,)\ntf_idf_matrix.shape #(8807, 31799)","d3df56ac":"#Creating Cosine Similarity Matrix\n\ncosine_sim = cosine_similarity(tf_idf_matrix)\ncosine_sim.shape #(8807, 8807) We are setting up axa matrix for similarity.\ncosine_sim[1]","fedc8ca7":"#Picking film names\nindices = pd.Series(df.index, index=df[\"title\"])","dc1a7f77":"#Deleting duplicate values in indices\nindices = indices[~indices.index.duplicated(keep=\"last\")]","22f8b0cb":"#Choosing a film in the df for finding its similar.\ndf[df[\"title\"].str.contains(\"Vizon\",na=False)] #Checking Inception is on the list or not.\nmovie_index = indices[\"Vizontele\"]","bce5bfde":"#Converting pandas dataframe similarities between Inception and other films based on casts.\nsimilarity_scores = pd.DataFrame(cosine_sim[movie_index], columns=[\"Score\"])","a49f9726":"#Taking most similar films' index except itself (Vizontele)\nmovie_indices = similarity_scores.sort_values(\"Score\", ascending=False)[1:11].index","a692501e":"#Showing the 10 movies that the casts are most similar\ndf[[\"title\",\"cast\"]].iloc[movie_indices]","86307ead":"***Making recommendation based on similarities***","ff178486":"**Content Based Recommendation by using Actor\/Actress Names on Netflix Movies Data**\n\nPurposes: I aim to find closest movies or tv series based on casts similarity. I use TF-IDF and Cosine Similarity Matris for finding top 10 similar movies.","94eff89c":"We can make recommendations using comments, titles, player names and similar variables in Content Based Filtering. In this analysis, we used the movie Vizontele made in Turkey. \"Vizontele Tuuba\" was the second most similar movie in our analysis based on the similarity of the actors' names.\n\nThanks to Shivam Bansal for the dataset. I would also like to thank my biggest supporters in my self-development, VBO team and Vahit Keskin. I have cited sources and codes from them.\n\nVBO: https:\/\/www.veribilimiokulu.com\/\n\nVahit Keskin: https:\/\/www.linkedin.com\/in\/vahitkeskin\/"}}