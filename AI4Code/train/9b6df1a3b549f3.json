{"cell_type":{"32050421":"code","3f73651a":"code","bca09cb2":"code","ae7cc4c3":"code","f20779eb":"code","d0e0681a":"code","431b3cdf":"code","40bd251c":"code","66aca517":"code","94845f3b":"code","504f1c03":"code","4bcc1517":"code","18ea2f5f":"code","3c3bcb31":"markdown","45aeb22f":"markdown","8904fd92":"markdown"},"source":{"32050421":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3f73651a":"import matplotlib.pyplot as plt \nimport seaborn  as sns \n","bca09cb2":"dataf = pd.read_csv(\"\/kaggle\/input\/world-happiness\/2019.csv\")","ae7cc4c3":"dataf.info","f20779eb":"dataf.columns","d0e0681a":"dataf.corr()","431b3cdf":"f,ax = plt.subplots(figsize=(12,12))\nsns.heatmap(dataf.corr(), annot = True, linewidths = .2, fmt = '.2f', ax= ax)","40bd251c":"for  (key,value) in dataf[0:5].iterrows():\n    print(value)","66aca517":"for key in dataf.columns :\n    dataf.plot(kind = \"scatter\",  color = \"c\",x = key, y =\"Score\", linewidth = 2 )\n\n    \n","94845f3b":"dataf[\"Freedom to make life choices\"].plot(kind = \"hist\", bins= 65,figsize=(12,12) )","504f1c03":"dataf[(dataf[\"Social support\"]>1.5)]","4bcc1517":"dataf[(dataf[\"Social support\"]>1.5)].Score.plot(kind = \"line\",linewidth = 2, grid = True, alpha =0.7 , color= \"orange\", linestyle = \"solid\" )\nplt.xlabel(\"Number of Country\")\nplt.ylabel(\"Score\")\nplt.legend(loc= \"lower left\")","18ea2f5f":"dataf[(dataf[\"Country or region\"]==\"Turkey\")]","3c3bcb31":"Mutluluk ile ilgili correlation map ","45aeb22f":"Bu tablodan anlasilacagi uzere ulkelerdeki insanlarin cogunun ozgurlugu %50 nin altinda","8904fd92":"Bu tablolarda isaretlenmeleri saga yatik olan tablolar mutlulugu olumlu etkilerken sola yatik olanlar ise olumsuz etkilemektedir."}}