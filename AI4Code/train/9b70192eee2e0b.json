{"cell_type":{"8c85b93b":"code","bdebd65b":"code","1c610644":"code","efc1f7c8":"code","31fb31bc":"code","6bd21dfa":"code","85abe84b":"code","62442a13":"code","82e39b62":"code","318030e1":"code","ceab985b":"code","2b5e93be":"code","2604c060":"code","75f19a71":"code","a80d178f":"markdown","2450afc7":"markdown","3af5e9e7":"markdown","5e54e37f":"markdown","96225a42":"markdown","55e33f89":"markdown","0cd509ec":"markdown","cfe18887":"markdown","9cad8a61":"markdown","5e5cd3b0":"markdown","b8543f0d":"markdown","12719350":"markdown"},"source":{"8c85b93b":"import os\nimport re\nimport sys\nimport json\nimport glob\n\nimport numpy as np\nimport pandas as pd\n\nfrom pprint import pprint\nfrom copy import deepcopy\nfrom datetime import datetime\nfrom tqdm.notebook import tqdm","bdebd65b":"root = \"..\/input\/CORD-19-research-challenge\/\"\n\ndesign_list = [\n    'retrospective cohort', 'cross-sectional case-control',\n    'cross sectional case control', 'prevalence survey', 'systematic review ',\n    ' meta-analysis', ' meta analysis', 'matched case-control',\n    'matched case control', 'medical record review',\n    'observational case series', 'time series analysis',\n    'pseudo-randomized controlled trials',\n    'pseudo randomized controlled trial', 'randomized controlled trials',\n    'randomized controlled trial', 'retrospective analysis',\n    'retrospective study', 'retrospective studies'\n]\n\nrisk_factors = [\n    'diabete', 'hypertension', 'heart disease', 'cancer', 'smoking',\n    'history of lung', 'local climate', 'elderly', 'children',\n    'immune compromised ', 'age deciles', 'race', 'ethnicity', 'education',\n    'income', 'insurance', 'housing', 'immigration', 'prison inmate',\n    'mental hospital inpatients', 'long-term care facility resident',\n    'long term care'\n    'health worker', 'first responder', 'hospital staff', 'nursing home',\n    'prison', 'staff', 'pregnancy', 'baby', 'enfant', 'pulm', 'neonates'\n]\n\ncovid_keywords = ['covid-19', 'hcov-19', 'cord-19' ,'2019-ncov', 'wuhan coronavirus', 'sars-cov-2', 'covid']","1c610644":"# Find all .json files in data(they're papers)\npaper_filenames = glob.glob(f'{root}\/**\/*.json', recursive=True)","efc1f7c8":"metadata_df = pd.read_csv(\n    root + 'metadata.csv',\n    parse_dates=['publish_time'],\n    keep_default_na=False,\n    usecols=['title', 'sha', 'abstract', 'publish_time', 'journal'])","31fb31bc":"metadata_df = metadata_df[metadata_df['publish_time'] >= datetime(2019, 1, 1)]","6bd21dfa":"metadata_df = metadata_df[metadata_df['abstract'].apply(\n    lambda x: any(key in x.lower() for key in covid_keywords))]","85abe84b":"metadata_df.shape","62442a13":"relevant_papers = metadata_df['sha'].values","82e39b62":"design_sections = []\n\nfor j  in tqdm(range(len(relevant_papers))):\n    for i in range(0, len(paper_filenames)):\n        paper_filename = os.path.basename(paper_filenames[i])\n        paper_filename = \"\".join(paper_filename.split(\".\")[:-1])\n        if relevant_papers[j] == paper_filename:\n            with open(paper_filenames[i], \"r\") as infile:\n                filetext = infile.read()\n            with open(paper_filenames[i]) as data:\n                data = json.load(data)\n                pattern = r'\"text\": \"([^\"]*(%s)[^\"]*)((?!\"section\").)*\"section\": \"([^\"]*)\"' % \"|\"\\\n                        .join(design_list)\n                regex = re.compile(pattern, re.DOTALL)\n                results = regex.findall(filetext.lower())\n                if len(results) > 0:\n                    combined_results = []\n                    seen = set()\n\n                    for result in results:\n                        if result[3] in seen:\n                            continue\n                        else:\n                            combined_results.append(result)\n                            seen.add(result[3])\n                    for match in results:\n                        design_sections.append(\n                            [data['paper_id'], match[3], match[1], match[0]])","318030e1":"design_df = pd.DataFrame(design_sections, columns = ['doc_id', 'section', 'study_design', 'relevant_section'])\nsec = [sec.lower() for sec in design_df['section']]","ceab985b":"design_df.shape","2b5e93be":"risk_sections = []\nfor i in range(0, len(design_df['relevant_section'])):\n    text = design_df.loc[i, 'relevant_section']\n    risk = risk_factors\n    ri_list = [re.findall(ri.lower(), text) for ri in risk]\n    for ri in ri_list:\n        if ri != []:\n            risk_sections.append([\n                design_df.loc[i, 'doc_id'], ri, text,\n                design_df.loc[i, 'section'],\n                design_df.loc[i, 'study_design']\n            ])","2604c060":"risk_df = pd.DataFrame(risk_sections, columns =['doc_id', 'risk', 'relevant_section', 'section', 'study_design'])\nset(risk_df['study_design'])","75f19a71":"risk_df['study_design'].replace('retrospective analysis','retrospective cohort', inplace = True)\nrisk_df['study_design'].replace(['retrospective studies','retrospective study'],'retrospective cohort', inplace = True)\nrisk_df['study_design'].replace('randomized controlled trial','randomized controlled trials', inplace = True)\n\nset(risk_df['study_design'])","a80d178f":"### Global variables","2450afc7":"# Outline\nHere is an outline for the implementation of our platform:\n- Load metadata.csv on `paper_id`\n- Filter for articles published on 2019 or after\n- Extract papers published on 2019 or after\n- Filter for corona references(covid, cov-2, novel coronavirus, etc.)\n- Obtain and stem list of risk factors(eg. hypertension) and study designs(eg. meta analysis)\n    - List of risk factors and study designs obtained from [crowdsourced medical dictionary](https:\/\/docs.google.com\/spreadsheets\/d\/1t2e3CHGxHJBiFgHeW0dfwtvCG4x0CDCzcTFX7yz9Z2E\/edit#gid=1217643351)\n- Extract sections in paper bodies that have mention the design of the study\n- Extract the sections that have mentions of a risk factor\n- Append each extraction to a dataframe alongside the `paper_id`.\n- Filter out noise:\n    - Any sections that are for references purpose only\n    - Any sections with an extremely high number of hyperlinks","3af5e9e7":"We are a team of data scientists and engineers. While we know our tools, we need help from the epidimiology community. We have started by using regex to look for relevant keywords, so the precision of our extraction might not always be optimal. In order to make improvements, we need feedback from medical professionals.\n\nIn addition, this platform has the potential to be customizable for researchers. We need 10 minutes of your time where you will giving us feedback on our excerpts. All help will be greatly appreciated.","5e54e37f":"# Abstract\n\nWe will be providing a platform with excerpts of papers relevant to Covid-19 risk factors(such as hypertension, elderly age, etc.). While the extraction of succint findings from papers would be helpful in itself, we believe that  context into the methods used to arrive at these findings would also very relevant for researchers.\n\nHere is a screenshot of the platform that we have:","96225a42":"### Investigating mentions of risk factors","55e33f89":"#### Filtering for papers published on 2019 and after","0cd509ec":"### Contact\nIf you have any questions or would like to help, feel free to reach out to any one of us. You can find our emails below:\n- maria.kamali@thomsonreuters.com\n- nbudatho@edu.uwaterloo.ca\n- keshav.Varadachari@thomsonreuters.com","cfe18887":"#### Study Designs Cleanup\nThe next cell will clean up instances where the same study name has beem repeated but with different spellings(Example: `randomized controlled trial` vs `randomized controlled trials`)","9cad8a61":"#### Filtering for papers with references to covid-19","5e5cd3b0":"![Demo](https:\/\/github.com\/mahtablci1\/Kaggle\/blob\/master\/platform_sample.png?raw=true)","b8543f0d":"### Loading metadata ","12719350":"### Extract snippets with mentions of study designs"}}