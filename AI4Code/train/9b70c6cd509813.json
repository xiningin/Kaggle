{"cell_type":{"ef7300b0":"code","e7444e58":"code","b32b781d":"code","575a41a4":"code","f32938e8":"code","536d9d5b":"code","0d2f7663":"code","f7ef4926":"code","ab2c95f3":"code","aa3ab64d":"code","0b4e9d17":"code","b77ce19b":"code","3305aea4":"code","6d8c8b99":"code","352d2722":"code","05b74c77":"code","4ef8cea7":"code","53934559":"code","c50c5e19":"code","238a9b8e":"code","284b77ea":"code","2611d958":"code","1fa5bd1d":"code","0c7fb46e":"code","07e99d3f":"code","ca90fc4d":"code","2f32dda7":"code","389751db":"code","c9e5fa41":"code","0e60e284":"code","21bac66e":"code","01cc74cc":"markdown","bc6f5164":"markdown","9e92aa2c":"markdown","0243bb57":"markdown","91f09c80":"markdown","e247091a":"markdown","db0372cd":"markdown","9b1e1520":"markdown","82e658f7":"markdown","aaf964b3":"markdown","49e87e87":"markdown"},"source":{"ef7300b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport statsmodels.api as sm\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e7444e58":"import matplotlib.pyplot as plt\nimport datetime as dt\nimport scipy.stats as stats\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\n\n\n\ndf = pd.read_csv('..\/input\/musicfeatures\/data.csv', index_col=['filename'])\n\n\n","b32b781d":"df.describe()\n","575a41a4":"plt.style.use('seaborn-poster')","f32938e8":"#Variable Appendix \n\n#filename - Filename as given in original marsyas dataset\n\n#tempo - The speed at which a passage of music is played\n\n#beats - Rythmic unit in music\n\n#chroma_stft - Short Time Fourier Transform\n\n#rmse - Root Mean Square Error\n\n#spectral_centroid - Indicates where the \"center of mass\" of the spectrum is located.\n\n#spectral_bandwidth - It is the Wavelength interval in which a radiated spectral quantity is not less than half its maximum value\n\n#rolloff - Roll-off is the steepness of a transmission function with frequency\n\n#zero_crossing_rate - The rate at which the signal changes from positive to negative or back\n\n#mfcc1 - 20 - Mel-frequency cepstral coefficients (MFCCs) are coefficients that collectively make up an MFC.\n# In the original dataset, the primary researcher said that, in particular, the first 5 coefficients provide the best genre classification performance\n\n#Primary Categories of Features \n\n#Timbtral Texture - means and variances of spectral centroid, rolloff, flux, zerocrossings, spectral bandwidth \n\n#Rhythmic Context - tempo, beats. \n\n#Pitch Content - data not available in dataset","536d9d5b":"#I will take a look at descriptive statistics for each genre using Tempo, Beats, and Mfcc1 - 5","0d2f7663":"#I want to compare the data by label (genre) so I used the groupby function. The describe function gives me access to basic descriptive statistics of the dataframe.\n#I will use this function for all variables in this section.\n\ndf.groupby('label').describe()['tempo']\n#Reggae music has the highest tempo on average, but a fairly high standard deviation so it may be due to outliers shifting the mean upwards\n#Disco has the lowest standard deviation by far, tempo seems to be relatively consistent. \n#Genres with higher overall tempos are reggae, classical, and metal\n#Genres with lower overall tempos are country, pop, and jazz","f7ef4926":"df.groupby('label').describe()['beats']\n#The differences between genres are far less prominent than tempo \n#Reggae has the highest beat count with a middling standard deviation. \n#Classical music again has the highest standard deviation, indicating that beats may not be a good indication of the genre due to the degree of variety\n#Disco again has the lowest standard deviation, indicating a higher level of consistency between songs \n#The genres with the highest beat count are reggae, metal, and disco \n#The genres with the lowest beat count are country, jazz, and pop","ab2c95f3":"df.groupby('label').describe()['mfcc1']\n#There are vast differences in texture of Mel-frequency cepstral coefficient 1\n#Disco, Hip Hop, Metal, and Pop have low standard deviations\n#Classical music also has the highest Mel-frequency cepstral coefficient 1 by far, it also has the highest standard deviation\n#Texture seems to be more distinctive ","aa3ab64d":"df.groupby('label').describe()['mfcc2']","0b4e9d17":"df.groupby('label').describe()['mfcc3']","b77ce19b":"df.groupby('label').describe()['mfcc4']","3305aea4":"df.groupby('label').describe()['mfcc4']","6d8c8b99":"df.groupby('label').describe()['mfcc5']","352d2722":"# I will be exploring Tempo, Beats, and Mfcc1 - 5 to see if there are any major outliers and to see if there are any differences in uniformity","05b74c77":"#Boxplots give me access to the average distribution of a dataset, but also identifies outliers outside of that distribution.\n#I again am looking specifically at genres, so the x axis is \"label\" and the y axis is \"tempo\"\n#I have also increased the linewideth for better visibility\n#I will use this method for each plot in this section.\n\nsns.boxplot( x=df[\"label\"], y=df[\"tempo\"], linewidth=5)\n\n#I was interested in finding outliers and seeing if there were any genres where outliers might be more common and if there were any where it was less common\n#This boxplot shows that certain genres, specifically pop and hip hop have more outliers in general\n#It also shows that genres such as blues, country, metal, and reggae don't have any outliers in tempo","4ef8cea7":"sns.boxplot( x=df[\"label\"], y=df[\"beats\"], linewidth=5)\n\n#Hip Hop has a lot of outliers, with 10, it is far higher than any other genre. ","53934559":"sns.boxplot( x=df[\"label\"], y=df[\"mfcc1\"], linewidth=5)","c50c5e19":"sns.boxplot( x=df[\"label\"], y=df[\"mfcc2\"], linewidth=5)","238a9b8e":"sns.boxplot( x=df[\"label\"], y=df[\"mfcc3\"], linewidth=5)","284b77ea":"sns.boxplot( x=df[\"label\"], y=df[\"mfcc4\"], linewidth=5)","2611d958":"sns.boxplot( x=df[\"label\"], y=df[\"mfcc5\"], linewidth=5)","1fa5bd1d":"#For this next section, Barplots seemed like the best fit since they are highly visible, and I don't need to see outliers.\n#Having the mean and the average distribution will allow me to compare unique factors\n\nsns.barplot(x=df[\"label\"], y=df[\"tempo\"])\n\n#While tempo doesn't seem to be a particularly strong predictor variable, there may be significance in the differences between genres with statistical analysis","0c7fb46e":"sns.barplot(x=df[\"label\"], y=df[\"beats\"])\n#As stated in the first question, there doesn't seem to be too many meaningful differences between genres in beat count ","07e99d3f":"sns.barplot(x=df[\"label\"], y=df[\"mfcc1\"])\n#Mfcc seems to be a much stronger predictor than the variables measuring Rhythmic content. Genres such as Classical, Jazz, and Reggae have distinctively low frequencies.\n#Scores lower than -250hz are exclusively seeen in Classical, and in no other genre","ca90fc4d":"sns.barplot(x=df[\"label\"], y=df[\"mfcc2\"])\n#This measure also provides diverse scores, though maybe less predictive than Mfcc1\n#Classical music is again occupying a unique space where no other genres show up, above about 120 hz","2f32dda7":"sns.barplot(x=df[\"label\"], y=df[\"mfcc3\"])\n#This plot provides two genres that occupy unique spaces. Metal music is exclusively below -25 hz, while Pop music is the only genre consistently with a number over 0 hz.\n","389751db":"sns.barplot(x=df[\"label\"], y=df[\"mfcc4\"])\n#Metal is particularly distinctive, occupying any frequency over 50hz. Pop is also distinctive, with no values over 20hz","c9e5fa41":"sns.barplot(x=df[\"label\"], y=df[\"mfcc5\"])\n#Metal is again distinctive, with no other genre having frequencies below -7hz. Pop is also distinctive, with no other genre having frequencies above 7hz.","0e60e284":"#I found a guide on how to have multiple lines occupying the same line graph. This allowed me to to plot all 5 mfcc at the same time\n#Here are Mfcc 1 - 5 plotted together. You can see distinctive differences when viewed as whole. \n#For some reason, this entire project, I have not been able to get line graphs to show all my labels. So the next two graphs only have 5 of the 10 genres shown.\n\nprint(df[\"label\"].unique())\n\nax = plt.gca()\n\ndf.plot(x='label', y='mfcc1', kind='line', ax=ax)\ndf.plot(x='label', y='mfcc2', kind='line', color='red', ax=ax)\ndf.plot(x='label', y='mfcc3', kind='line', color='yellow', ax=ax)\ndf.plot(x='label', y='mfcc4', kind='line', color='green', ax=ax)\ndf.plot(x='label', y='mfcc5', kind='line', color='orange', ax=ax)\n\n\n\n\nplt.show()","21bac66e":"#When using the same method as above, the differences between genres do exist, but they significantly less prominent. \nax = plt.gca()\n\ndf.plot(x='label', y='tempo', kind='line', ax=ax)\ndf.plot(x='label', y='beats', kind='line', color='red', ax=ax)","01cc74cc":"Due to the amount of variables, I decided to look primarily at Rhythmic data (Tempo, Beats) and Texture data (Mfcc). It is stated in the paper that this data is derived from that the most predictive of the Mel-frequency cepstral coefficients are coefficients 1 through 5 so I will be looking at those in particular. ","bc6f5164":"**Conclusions**\n1. Based on the plots and data, it seems that Timbral Texture data is far more useful for predictive classification than Rhythmic data. Due to distinctive differences in frequency. \n2. Certain genres, however, may benefit from including rhythmic data due to a unique consistency such as Disco, that is not found in other genres.","9e92aa2c":"**How much variation is there within genres? In other words, are certain genres more uniform than others regarding musical characteristics?**","0243bb57":"**What are some general musical qualities that could be ascribed to different genres of music?**","91f09c80":"In this section, I will be looking at descriptive statistics between genres of music using different audio characteristics as dependent variables. By running these analyses I will be able to get a broad overview of basic information regarding each dependent variable. The averages may give some insight into differences between genres of music, and the standard deviation can show how meaningful these averages are. What I wanted to do in this section was to run one-way ANOVAS after running the descriptive statistics so that I could see if the difference between genres was significant or not. I was not able to figure how to use one-way ANOVAS in python so I have just given the descriptive statistics, and my thoughts regarding them.","e247091a":"**Conclusions**\n1. There are many outliers when using Rhythmic content, this lends further to the idea that it may be harder to classify music using these variables. \n2. Certain genres, particularly Hip Hop and Pop are especially prominent in outliers when viewing Rhythic Content \n3. Outliers do still exist when using Timbral Texture content, but they are less common. The only genre with outliers in all 5 coefficients is Reggae.","db0372cd":"In this section, I will be looking at boxplots to see if there are any major outliers using audio characteristics as dependent variables.\nI will also see compare genres and see if certain genres are more consistent with less outliers than others.\nThe rationale for these analyses is that genres with less outliers and more consistency would be easier to predict using the specific dependent variable being measured. Likewise, genres with more outliers would be harder to predict, which may mean that a different dependent variable would be better as a predictor in machine learning.","9b1e1520":"**Final Thoughts**\n1. The biggest takeaway from the project is that certain unique spaces exist that could quickly classify specific genres of music. For future machine learning prospects, this could be very useful.\n2. I would love to do some statistical analysis to further expand my project. While I could see differences in the descriptive statistics, I cannot make inferential claims without doing additional analysis.\n3. Python is very frustrating when trying to visualize data, I would like to practice more. Most of my statistical software background is based in SPSS, so there were many things that I wanted to do, but couldn't figure out the proper syntax.","82e658f7":"**Are there any potential predictive factors that may be useful in further studies for categorizing music?**","aaf964b3":"**Conclusions**\n1. There are definitely differences in Rhythmic content among genres, genres such as Reggae, Classical, and Metal often have a higher tempo and beat count. But it is unknown at this point if those differences are significant.\n2. Certain genres of music occupy \"unique\" areas of the frequency spectrum: Classical, Metal, and Pop in particular. This means that there are certain frequencies that are apparent in these genres that are not found in others. This is extremely interesting and should be further explored. In machine learning, if one of the coefficients being analyzed registers at one of these \"unique\" frequencies, it would both improve the efficiency and accuracy of the prediction.","49e87e87":"In this section, I will be looking at the same factors as before and seeing whether or not any have potential as a predictive factor in categorization of music. Genres with more dramatic differences in frequency, or with unique frequencies that other genres do not occupy, have greater predictive potential. Genres that occupy more average frequencies with less extreme differences will be harder to categorize. "}}