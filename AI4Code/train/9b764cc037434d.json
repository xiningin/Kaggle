{"cell_type":{"ae60fd08":"code","d8c61d3c":"code","106f2cb1":"code","fe91666f":"code","0e271b4c":"code","af6c46e5":"code","34805757":"code","54aaba78":"code","7a76042c":"code","c307a6e1":"code","05b32f14":"code","0081bbc6":"code","875a7d40":"code","98376e37":"code","04b4f197":"code","738369a2":"code","6fac023b":"code","201a66a1":"code","2d396e66":"code","d6e10a38":"code","2f0f8bf4":"code","cd022fe1":"code","f5e17124":"code","4ed4baa1":"code","461757e7":"code","cab60fc9":"code","37b05324":"code","74d444e0":"markdown","221da9f2":"markdown","51e52c0b":"markdown","cbc957ee":"markdown","b0279996":"markdown","179fc06b":"markdown","c97108af":"markdown","c9521840":"markdown","a8f93f98":"markdown","1282cd26":"markdown","06aabaeb":"markdown","a1d875d9":"markdown","23ff2362":"markdown","03fc8aad":"markdown","22bd4a3e":"markdown","91e99f8e":"markdown","3af625c6":"markdown","1630eb64":"markdown"},"source":{"ae60fd08":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport warnings\nwarnings.simplefilter(\"ignore\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d8c61d3c":"data_1=pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv')\ndata_1.head()","106f2cb1":"data=pd.read_csv('\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\ndata.head()","fe91666f":"print(\"The data has following common rows {}\".format(set(data_1.columns).intersection(set(data.columns))))","0e271b4c":"# basic scatter plot\ny=data_1[data_1['Country name']=='India']['Healthy life expectancy at birth']\nx=data_1[data_1['Country name']=='India']['year']\nfig = px.scatter(x=x, y=y , labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in India')\nfig.show()","af6c46e5":"# detailed scatter plot with various classes\ndt=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')|(data_1['Country name']=='Afghanistan')\n         |(data_1['Country name']=='Nepal')|(data_1['Country name']=='Sri Lanka')|(data_1['Country name']=='Bangladesh')]\n\nfig = px.scatter(x=dt['Healthy life expectancy at birth'], y=dt['year'],color=dt[\"Country name\"],\n                 size=dt['Healthy life expectancy at birth'], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","34805757":"# Line Chart\ndt=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')|(data_1['Country name']=='Afghanistan')\n         |(data_1['Country name']=='Nepal')|(data_1['Country name']=='Sri Lanka')|(data_1['Country name']=='Bangladesh')]\n\nfig = px.line(x=dt['Healthy life expectancy at birth'], y=dt['year'],color=dt[\"Country name\"], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","54aaba78":"import plotly.graph_objects as go\nfig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(x=dt[dt['Country name']=='India']['Healthy life expectancy at birth'], y=dt['year'],\n                    mode='markers',\n                    name='India'))\nfig.add_trace(go.Scatter(x=dt[dt['Country name']=='Pakistan']['Healthy life expectancy at birth'], y=dt['year'],\n                    mode='lines+markers',\n                    name='Pakistan'))\nfig.add_trace(go.Scatter(x=dt[dt['Country name']=='Nepal']['Healthy life expectancy at birth'], y=dt['year'],\n                    mode='lines',\n                    name='Nepal'))\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.update_layout(\n    xaxis_title=\"Year\",\n    yaxis_title=\"Healthy life expectancy at birth\",\n    legend_title=\"Country Name\",\n     template = 'plotly_dark'\n)\nfig.show()","7a76042c":"# basic bar chart \nfig = px.bar(data_1, x=data_1[data_1['Country name']=='India']['year'],\n             y=data_1[data_1['Country name']=='India']['Healthy life expectancy at birth'], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","c307a6e1":"l=[]\nfor i in range(data_1.shape[0]):\n    if data_1.iloc[i]['Healthy life expectancy at birth']<40:\n        l.append('less than 40')\n    elif data_1.iloc[i]['Healthy life expectancy at birth']>40 and data_1.iloc[i]['Healthy life expectancy at birth']<50:\n        l.append('Between 40 and 50')\n    elif data_1.iloc[i]['Healthy life expectancy at birth']>50 and data_1.iloc[i]['Healthy life expectancy at birth']<60:\n        l.append('Between 50 and 60')\n    elif data_1.iloc[i]['Healthy life expectancy at birth']>60 and data_1.iloc[i]['Healthy life expectancy at birth']<70:\n        l.append('Between 60 and 70')\n    else:\n        l.append('above 70')\ndata_1['HLE_class']=l\ndata_1.head()","05b32f14":"# bar chart based on labels value\nfig = px.bar(data_1, x=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['year'],\n             y=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['Healthy life expectancy at birth'],\n            color=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['Country name'], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()\n","0081bbc6":"# bar chart based on continuous value\nfig = px.bar(data_1, x=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['year'],\n             y=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['Healthy life expectancy at birth'],\n            color=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['Healthy life expectancy at birth'], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","875a7d40":"# bar chart based on class labels \nfig = px.bar(data_1, x=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['HLE_class'],\n             y=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['Healthy life expectancy at birth'],\n            color=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')]['year'], labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","98376e37":"# bar chart based on continuous value\nfig = go.Figure(data=[\n    go.Bar(name='India', \n           x=data_1[data_1['Country name']=='India']['year'],\n           y=data_1[data_1['Country name']=='India']['Healthy life expectancy at birth']),\n    go.Bar(name='Pakistan',\n           x=data_1[data_1['Country name']=='Pakistan']['year'], \n           y=data_1[data_1['Country name']=='Pakistan']['Healthy life expectancy at birth'])\n\n])\n# Change the bar mode\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.update_layout(barmode='group')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.update_layout(\n    xaxis_title=\"Year\",\n    yaxis_title=\"Healthy life expectancy at birth\",\n    legend_title=\"Country Name\",\n    template = 'plotly_dark'\n)\nfig.show()","04b4f197":"# basic bar chart \nfig = px.bar(data_1, x=data_1[data_1['Country name']=='India']['year'],\n             y=data_1[data_1['Country name']=='India']['Healthy life expectancy at birth'],  orientation='h' , labels={\n                     'x': \"Year\",\n                     'y': \"Healthy life expectancy at birth\",\n                     'color':'Country Name'\n                     \n                 }, template = 'plotly_dark')\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.show()","738369a2":"fig = go.Figure()\nfig.add_trace(go.Bar(\n    y=['giraffes', 'orangutans', 'monkeys'],\n    x=[20, 14, 23],\n    name='SF Zoo',\n    orientation='h',\n    marker=dict(\n        color='rgba(246, 78, 139, 0.6)',\n        line=dict(color='rgba(246, 78, 139, 1.0)', width=3)\n    )\n))\nfig.add_trace(go.Bar(\n    y=['giraffes', 'orangutans', 'monkeys'],\n    x=[12, 18, 29],\n    name='LA Zoo',\n    orientation='h',\n    marker=dict(\n        color='rgba(58, 71, 80, 0.6)',\n        line=dict(color='rgba(58, 71, 80, 1.0)', width=3)\n    )\n))\n\nfig.update_layout(barmode='stack', template = 'plotly_dark')\nfig.show()","6fac023b":"fig = px.pie(data_1,\n             values=data_1['HLE_class'].value_counts(), \n             names=data_1['HLE_class'].value_counts().keys(),\n            color_discrete_sequence=px.colors.sequential.RdBu)\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries',\n    legend_title=\"Healthy life expectancy at birth \",\n    template = 'plotly_dark'\n)\nfig.show()","201a66a1":"# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(labels=data_1['HLE_class'].value_counts().keys(), \n                             values=data_1['HLE_class'].value_counts(), \n                             hole=.5)])\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries',\n    legend_title=\"Healthy life expectancy at birth \",\n    template = 'plotly_dark'\n)\nfig.show()","2d396e66":"fig = go.Figure(data=[go.Pie(labels=data_1['HLE_class'].value_counts().keys(), \n                             values=data_1['HLE_class'].value_counts(), \n                             pull=[0, 0.2, 0, 0, 0.2])])\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries',\n    legend_title=\"Healthy life expectancy at birth\",\n    template = 'plotly_dark'\n)\nfig.show()","d6e10a38":"# sub plot piecharts\nfrom plotly.subplots import make_subplots\n\ndt=data_1[(data_1['Country name']=='India')|(data_1['Country name']=='Pakistan')\n         |(data_1['Country name']=='Nepal')|(data_1['Country name']=='Sri Lanka')|(data_1['Country name']=='Bangladesh')]\n\nlabels = dt['Country name'].unique().tolist()\n\nfig = make_subplots(1, 2, specs=[[{'type':'domain'}, {'type':'domain'}]],\n                    subplot_titles=['2010', '2018'])\n\nfig.add_trace(go.Pie(labels=labels,\n                     values=list(dt[dt['year']==2012]['Healthy life expectancy at birth']),\n                     scalegroup='one',\n                     name=\"Healthy life expectancy in year 2012\"),\n                      1, 1)\n\nfig.add_trace(go.Pie(labels=labels, \n                     values=list(dt[dt['year']==2018]['Healthy life expectancy at birth']), \n                     scalegroup='one',\n                     name=\"Healthy life expectancy in year 2018\"), 1, 2)\n\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries',\n    legend_title=\"Country Name\",\n    template = 'plotly_dark'\n)\nfig.show()","2f0f8bf4":"\nfig = go.Figure(data=[go.Scatter(\n    x=data_1['HLE_class'].value_counts().keys(), \n    y=data_1['HLE_class'].value_counts(),\n    mode='markers',\n    marker_size=data_1['HLE_class'].value_counts(),\n)\n])\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries'\n    , template = 'plotly_dark'\n)\n\nfig.show()","cd022fe1":"\nfig = go.Figure(data=[go.Scatter(\n    x=data_1['HLE_class'].value_counts().keys(), \n    y=data_1['HLE_class'].value_counts(),\n    mode='markers',\n    marker_size=data_1['HLE_class'].value_counts(),\n    marker_sizemode='area',\n    marker_color=['rgb(93, 164, 214)', 'rgb(255, 144, 14)','rgb(44, 160, 101)', 'rgb(255, 65, 54)'],\n)\n])\nfig.update_layout(\n    title='Healthy life expectancy at birth in various countries'\n    , template = 'plotly_dark'\n)\n\nfig.show()","f5e17124":"import plotly.graph_objects as go\nfig = go.Figure()\n\n# Add traces\nfig.add_trace(go.Scatter(x=dt['year'], y=dt[dt['Country name']=='India']['Healthy life expectancy at birth'],\n                    mode='lines',\n                    name='India',\n                         ))\nfig.add_trace(go.Scatter(x=dt['year'], y=dt[dt['Country name']=='Pakistan']['Healthy life expectancy at birth'],\n                    mode='lines',\n                    name='Pakistan',\n                        fill='tonexty',\n                        line_color='indigo',))\nfig.add_trace(go.Scatter(x=dt['year'], y=dt[dt['Country name']=='Nepal']['Healthy life expectancy at birth'],\n                    mode='lines',\n                    name='Nepal',fill='tonexty'))\nfig.update_layout(title='Healthy life expectancy at birth in various countries')\nfig.update_layout(\n    xaxis_title=\"Year\",\n    yaxis_title=\"Healthy life expectancy at birth\",\n    legend_title=\"Country Name\",\n    template = 'plotly_dark'\n)\nfig.show()","4ed4baa1":"\ndf=pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\nimport plotly.express as px\nfig = px.sunburst(df, path=['Regional indicator', 'Country name'], values='Ladder score', color='Healthy life expectancy'\n                 , template = 'plotly_dark')\nfig.show()","461757e7":"import plotly.io as pio\npio.templates","cab60fc9":"df=pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\nimport plotly.express as px\nfig = px.sunburst(df, path=['Regional indicator', 'Country name'], values='Ladder score', color='Healthy life expectancy',\n                template = 'ggplot2')\nfig.show()","37b05324":"df=pd.read_csv('..\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv')\nimport plotly.express as px\nfig = px.sunburst(df, path=['Regional indicator', 'Country name'], values='Ladder score', color='Healthy life expectancy',\n                template = 'simple_white')\nfig.show()","74d444e0":"# Line charts","221da9f2":"We can use a combination of line and scatter charts to highlight details","51e52c0b":"# Bubble Chart","cbc957ee":"# Horizontal bar chart","b0279996":"# Thank You \n\nReference:- https:\/\/plotly.com\/python\/basic-charts\/","179fc06b":"# Bar Charts","c97108af":"# This Notebook is a basic guide to various plots available with the Plotly library\n## For reference do visit plotly's official page:- https:\/\/plotly.com\/python\/basic-charts\/\nIf you like the notebook don't forget to upvote. \ncomments and concerns are most welcome:)","c9521840":"# Fill area plot","a8f93f98":"# Sunburst Plot","1282cd26":"# Pie charts","06aabaeb":"# Plotly Templates","a1d875d9":"# Let's Read in the data","23ff2362":"### Similar rows from the data","03fc8aad":"Let's Make a scatter plot for Healthy life expectancy at birth in India ","22bd4a3e":"Refrence:- https:\/\/plotly.com\/python\/bar-charts\/","91e99f8e":"# Scatter Plots","3af625c6":"Let's add a classifications column to the data","1630eb64":"Well let's tread data as different and try to draw some plots "}}