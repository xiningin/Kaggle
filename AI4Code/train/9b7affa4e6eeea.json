{"cell_type":{"32f6fa4b":"code","3e5bc6dc":"code","96fa554c":"code","0a7fe169":"code","d85afbe8":"code","d17e738b":"code","641b680c":"code","2cd1922d":"code","54b4f1e2":"code","bc28ea1e":"code","270fb734":"code","270ea17d":"code","0a8d15a1":"markdown","fcda9368":"markdown","bfd6fbf4":"markdown","621fe2a7":"markdown","cd624398":"markdown","adf5869a":"markdown"},"source":{"32f6fa4b":"pip install openpyxl","3e5bc6dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","96fa554c":"df = pd.read_excel('\/kaggle\/input\/house-price-data-of-sao-paulo\/Sao paulo.xlsx')\ndf.head()","0a7fe169":"!pip install dataprep","d85afbe8":"from dataprep.eda import plot, plot_correlation, create_report, plot_missing","d17e738b":"plot(df)","641b680c":"plot(df, \"City\")","2cd1922d":"plot(df, \"price\")","54b4f1e2":"plot(df, \"City\",\"price\")","bc28ea1e":"plot(df, \"propertycard__detailvalue\",\"price\")","270fb734":"plot_missing(df)","270ea17d":"from dataprep.eda import create_report\n\ndf = pd.read_excel('\/kaggle\/input\/house-price-data-of-sao-paulo\/Sao paulo.xlsx')\ncreate_report(df)","0a8d15a1":"![](https:\/\/www.ceicdata.com\/Public\/Public00\/DataTalk\/jan_2015\/Brazil\/images\/chart.jpg)ceicdata.com","fcda9368":"DATAPREP: The easiest way to prepare data in Python\n\n\nDataPrep is free, open-source software released under the MIT license. Anyone can reuse DataPrep code for any purpose.\n\nDataPrep is built using Pandas\/Dask DataFrame and can be seamlessly integrated with other Python libraries.\n\nDataPrep is designed for computational notebooks, the most popular environment among data scientists.\n\nDataprep is an initiative by SFU Data Science Research Group to speed up Data Science.\n\nAcknowlegdements\n\nSFU Data Science Research Group - Simon Fraser University\n\nhttps:\/\/sfu-db.github.io\/dataprep\/user_guide\/eda\/plot.html\n\nhttps:\/\/dataprep.ai\/\n\nhttps:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc","bfd6fbf4":"#Analyze missing values","621fe2a7":"#Install OpenPyXl to work with xlsx","cd624398":"#Categorical column computes column statistics, plots a bar chart, pie chart. It has WordCloud, WordFrequency Word Length","adf5869a":"#The relationship between two columns with plot(df, x, y)\n\nWhen x and y are both categorical columns, it plots a nested bar chart, stacked bar chart and heat map."}}