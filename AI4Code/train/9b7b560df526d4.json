{"cell_type":{"7933f81b":"code","f76c5595":"code","828f5391":"code","52889f94":"code","ddd7b50d":"code","16d513ec":"code","40c5626a":"code","6d8f5b64":"code","fab78a98":"code","6ebef87a":"code","ff9fe93e":"code","be950161":"code","8b21d133":"code","df7ae80f":"code","29a2384e":"code","4a601324":"code","898ad23f":"code","2227016a":"code","c9d248be":"code","e5902870":"code","aead1270":"code","79644ddc":"code","73e0000a":"code","a3ca37e5":"code","34f1909c":"code","1cb4111d":"code","31a1b1e9":"code","7f8a5cf8":"code","31e0ebcf":"code","d3d3c8d3":"code","8f577b9d":"code","7073c20b":"code","d19b6cb7":"code","79b7d48e":"code","6171dfa2":"code","ce951671":"code","aadb5de3":"code","6a42b81f":"code","b064a228":"code","20afbc83":"code","3e8ecddc":"code","0954ef0f":"code","0a6e8975":"code","e1fae819":"code","8cef63be":"code","3cedb929":"code","76f55508":"code","7f352d9a":"code","5b5571ca":"code","90b74f59":"markdown","e86f1cf8":"markdown","d9438697":"markdown","8e79cd5f":"markdown","353df50b":"markdown","e6cf8756":"markdown","048798eb":"markdown","6839b078":"markdown","35a1a45a":"markdown","7c9ecede":"markdown","56765b2a":"markdown","1669f50e":"markdown","155cfcee":"markdown","cef1b7f4":"markdown","2cd65be9":"markdown","aefdf9f9":"markdown","c8d957be":"markdown","0adb4e47":"markdown","92fe5632":"markdown","0630d6c0":"markdown","93a51ca0":"markdown","c8946cb6":"markdown","0b7e8805":"markdown","332de511":"markdown","0e833057":"markdown","ee0297fa":"markdown","12122c1d":"markdown","868a9dbb":"markdown","ad7b4499":"markdown","699a2b5d":"markdown","a3d7d334":"markdown","5363a451":"markdown","f0c4b8d8":"markdown","f6864b88":"markdown","3cea345d":"markdown","730d65c9":"markdown","e4883824":"markdown","0c796b48":"markdown","a50f47fb":"markdown","2c85f9c2":"markdown","0cc8d326":"markdown","ce2e2e75":"markdown","4d8186c1":"markdown","d2a29669":"markdown","11f1f3b2":"markdown","aca7f253":"markdown","90db0350":"markdown","251b5a1f":"markdown","ac802859":"markdown","5653240d":"markdown","203dbba4":"markdown","fd3b8d4b":"markdown","28f0c717":"markdown","b5c9c18a":"markdown","6d4e81fa":"markdown","77f23022":"markdown","e75501fe":"markdown","577da08e":"markdown","e2752c3f":"markdown","058b39b6":"markdown"},"source":{"7933f81b":"import pandas as pd\nimport numpy as np\nimport warnings\nwarnings.filterwarnings(\"ignore\")","f76c5595":"df_orig=pd.read_csv('..\/input\/lending-club\/accepted_2007_to_2018Q4.csv.gz',low_memory=False)","828f5391":"df_orig.head()","52889f94":"df = df_orig[(df_orig['loan_status']=='Fully Paid') | (df_orig['loan_status']=='Charged Off')]\ndf.head()","ddd7b50d":"df['loan_status_bin'] = df['loan_status'].map({'Charged Off': 1, 'Fully Paid': 0})","16d513ec":"(df['grade'].value_counts().sort_index()\/len(df)).plot.bar()","40c5626a":"def emp_to_num(term):\n    if pd.isna(term):\n        return None\n    elif term[2]=='+':\n        return 10\n    elif term[0]=='<':\n        return 0\n    else:\n        return int(term[0])\n\ndf['emp_length_num'] = df['emp_length'].apply(emp_to_num)\n(df['emp_length_num'].value_counts().sort_index()\/len(df)).plot.bar()","6d8f5b64":"df.groupby('emp_length_num')['loan_status_bin'].mean().plot.bar()","fab78a98":"df['long_emp'] = df['emp_length'].apply(lambda x: 1*(x=='10+ years'))\ndf['short_emp'] = df['emp_length'].apply(lambda x: 1*(x=='1 year' or x=='< 1 year'))","6ebef87a":"(df['int_rate']\/len(df)).plot.hist(bins=10)","ff9fe93e":"df[df['annual_inc']<200000]['annual_inc'].plot.hist(bins=20, rwidth=0.9)\ndf['annual_inc_log'] = df['annual_inc'].apply(np.log)","be950161":"(df['purpose'].value_counts()\/len(df)).plot.bar()","8b21d133":"df.groupby('grade')['loan_status_bin'].mean().plot.line()","df7ae80f":"df.groupby('grade')['int_rate'].mean().plot.line(color='blue')","29a2384e":"(df['term'].value_counts()\/len(df)).plot.bar(title='value counts')","4a601324":"df.groupby('term')['loan_status_bin'].mean().plot.bar(title='default rate')","898ad23f":"(df['home_ownership'].value_counts()\/len(df)).plot.bar(title='value counts')","2227016a":"df[(df['home_ownership']=='MORTGAGE') | (df['home_ownership']=='OWN')| (df['home_ownership']=='RENT')].groupby('home_ownership')['loan_status_bin'].mean().plot.bar(title='default rate')","c9d248be":"df['fico_range_high'].plot.hist(bins=20, title='FICO-Score', rwidth=0.9)","e5902870":"df['installment'].plot.hist(bins=40, title='installment', rwidth=0.85)","aead1270":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(df.groupby('sub_grade')['loan_status_bin'].mean().values.reshape(-1,1), y=df.groupby('sub_grade')['int_rate'].mean())","79644ddc":"import matplotlib.pyplot as plt\nplt.scatter(df.groupby('sub_grade')['loan_status_bin'].mean(), df.groupby('sub_grade')['int_rate'].mean())\nplt.plot(df.groupby('sub_grade')['loan_status_bin'].mean(), lr.predict(df.groupby('sub_grade')['loan_status_bin'].mean().values.reshape(-1,1)))\nplt.xlabel('default rate')\nplt.ylabel('interest rate')","73e0000a":"print('interest rate = ', lr.intercept_, '+', lr.coef_[0], '* default rate')","a3ca37e5":"columns = ['loan_amnt', 'term', 'int_rate',\n       'installment', 'grade', 'emp_length',\n       'home_ownership', 'annual_inc_log', 'verification_status',\n       'loan_status_bin', 'purpose',\n       'addr_state', 'dti', 'delinq_2yrs',\n       'fico_range_low', 'inq_last_6mths', 'open_acc',\n       'pub_rec', 'revol_bal', 'revol_util', 'total_acc']\ndf = df[columns]","34f1909c":"df.dropna(inplace=True)","1cb4111d":"df['grade']=df['grade'].map({'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5, 'F': 6, 'G': 7})","31a1b1e9":"df_dummies = pd.get_dummies(df)","7f8a5cf8":"drop_columns = df_dummies.columns[(df_dummies.mean()<0.01)]\ndf_dummies.drop(drop_columns, axis=1, inplace=True)","31e0ebcf":"df_dummies['verification_status_Verified_sum'] = df_dummies['verification_status_Source Verified']+df_dummies['verification_status_Verified']\ndf_dummies.drop(['verification_status_Source Verified', 'verification_status_Verified'], axis=1, inplace=True)","d3d3c8d3":"df_dummies.head()","8f577b9d":"X = df_dummies.drop('loan_status_bin', axis=1)\ny = df_dummies['loan_status_bin']","7073c20b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","d19b6cb7":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline\n\nsc = MinMaxScaler()\nclf = LogisticRegression(penalty='l2', C=0.01)\n\npipe_lr = Pipeline([('scaler', sc), ('clf', clf)])","79b7d48e":"pipe_lr.fit(X_train, y_train)","6171dfa2":"y_score = pipe_lr.predict_proba(X_test)[:,1]\nfrom sklearn.metrics import roc_auc_score, roc_curve,precision_score, recall_score, precision_recall_curve\nfpr, tpr, tresholds = roc_curve(y_test, y_score)\nplt.plot(fpr, tpr)\nplt.title('ROC')\nplt.xlabel('FPR')\nplt.ylabel('TPR')\n\nprint('ROC-AUC-score: ', roc_auc_score(y_test, y_score))","ce951671":"for i in np.argsort(-np.abs(pipe_lr.named_steps['clf'].coef_[0])):\n    print(X.columns[i], ': ', round(pipe_lr.named_steps['clf'].coef_[0,i], 4))","aadb5de3":"def plot_precision_recall_curve(y_score, y_test, thresholds):\n    preds = [np.where(y_score > threshold, 1, 0) for threshold in thresholds]\n    precisions = [precision_score(y_test, pred) for pred in preds]\n    recalls = [recall_score(y_test, pred) for pred in preds]\n    precision_recall = pd.DataFrame({'Precision': precisions, 'Recall': recalls, \"Threshold\": thresholds})\n    \n\n    precision_recall.plot(x = 'Threshold')\n    plt.title('Precision, Recall vs. Threshold')\n    plt.show()","6a42b81f":"thresholds = np.arange(0.05, 0.85, 0.1)\nplot_precision_recall_curve(y_score, y_test, thresholds)","b064a228":"business_data_orig=df_orig[df_orig['loan_status'] == 'Current']\nbusiness_data = df_orig[df_orig['loan_status'] == 'Current']\nbusiness_data['emp_length_num'] = business_data['emp_length'].apply(emp_to_num)\nbusiness_data['long_emp'] = business_data['emp_length'].apply(lambda x: 1*(x=='10+ years'))\nbusiness_data['short_emp'] = business_data['emp_length'].apply(lambda x: 1*(x=='1 year' or x=='< 1 year'))\n# print(business_data.shape[0])\nbusiness_data = business_data[business_data['annual_inc']>0]\n# print(business_data.shape[0])\nbusiness_data['annual_inc_log'] = business_data['annual_inc'].apply(np.log)\ncolumns = ['loan_amnt', 'term', 'int_rate',\n       'installment', 'grade', 'emp_length',\n       'home_ownership', 'annual_inc_log', 'verification_status','purpose',\n       'addr_state', 'dti', 'delinq_2yrs',\n       'fico_range_low', 'inq_last_6mths', 'open_acc',\n       'pub_rec', 'revol_bal', 'revol_util', 'total_acc','funded_amnt']\nbusiness_data = business_data[columns]\nbusiness_data.dropna(inplace=True)\nbusiness_data['grade']=business_data['grade'].map({'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5, 'F': 6, 'G': 7})\nbusiness_data_dummies = pd.get_dummies(business_data)\ndrop_columns = business_data_dummies.columns[(business_data_dummies.mean()<0.01)]\nbusiness_data_dummies.drop(drop_columns, axis=1, inplace=True)\nbusiness_data_dummies['annual_inc_log'] = business_data['annual_inc_log']\nbusiness_data_dummies['verification_status_Verified_sum'] = business_data_dummies['verification_status_Source Verified']+business_data_dummies['verification_status_Verified']\nbusiness_data_dummies.drop(['verification_status_Source Verified', 'verification_status_Verified'], axis=1, inplace=True)\nbusiness_data_dummies.drop(['funded_amnt'],axis=1, inplace=True)\n# print(len(business_data_dummies.columns))\n# business_data_dummies['annual_inc_log'].min()","20afbc83":"y_score_business_data = pipe_lr.predict_proba(business_data_dummies)[:, 1]","3e8ecddc":"PD = pd.DataFrame(y_score_business_data.reshape(-1, 1))\nEAD = pd.DataFrame(business_data['funded_amnt'])\n\nExpected_Loss = PD.values * EAD.values\nExpected_Loss","0954ef0f":"business_data['expected_loss'] = Expected_Loss","0a6e8975":"print('We have {} current borrowers totally.'.format(business_data.shape[0]))","e1fae819":"import seaborn as sns\nsns.set(style = 'ticks')\nsns.distplot(business_data['expected_loss'], kde = False)\n# plt.xlim(0, 20000)\nplt.title('Distribution of Expected Loss')\nplt.ylabel(\"Count\")\nplt.show()","8cef63be":"business_data['expected_loss'].describe()","3cedb929":"loss_by_grade = business_data[['grade', 'expected_loss']].groupby('grade').mean() \\\n                                                  .sort_values('expected_loss', ascending = False).head(10)\n\nsns.barplot(loss_by_grade.index, loss_by_grade['expected_loss'])\nplt.title('Grade vs. Expected Loss')\nplt.ylabel(\"Expected Mean Loss\")\nplt.show()","76f55508":"plt.subplot(1,2,1)\nbusiness_data[business_data['term']==' 36 months']['expected_loss'].plot.hist(bins=20,title='term = 36 months')\nplt.subplot(1,2,2)\nbusiness_data[business_data['term']== ' 60 months']['expected_loss'].plot.hist(bins=20,title='term = 60 months')","7f352d9a":"ls_state = business_data[['addr_state', 'expected_loss']].groupby('addr_state', as_index = False).sum() \\\n                                                  .sort_values('expected_loss', ascending = False)\nls_state.columns = ['State', 'Expected Loss']","5b5571ca":"ls_state.groupby('State')['Expected Loss'].mean().plot.bar(title='Expected Loss',figsize=(16, 10))","90b74f59":"Changing the variable to binary classifier","e86f1cf8":"Also looking at the distribution for installment","d9438697":"### Looking at the relationship between grade,default rate and interest rate","8e79cd5f":"California, New York, and Texas are the top three states with the highest expected loss. We would suggest making significant efforts to collect outstanding payments in these state. Also, stronger scrutiny on requests from these states","353df50b":"### Looking at feature employment length","e6cf8756":"### Grade vs. loan loss","048798eb":"### Let's have a look at the distribution of interest rate","6839b078":"**By applying varying classification thresholds, we can trace out explicitly the trade-off between preicision and recall from the PR curve.**","35a1a45a":"# Traning the Logisitic Regression for PD model","7c9ecede":"This seems so be log-normal-distributed so we do a log-transform.","56765b2a":"Seperate features from targets.","1669f50e":"Looking at the number of cutomers accepted in each grade, we can see that the grades with high number of customers are 'B' and 'C'\n\n","155cfcee":"### Let's see which features are most important","cef1b7f4":"# Intial data analysis to look at the structure and understand the features","2cd65be9":"Transform the grade into numerical values.","aefdf9f9":"The transformed dataset looks like this","c8d957be":"# Loan Loss Prediction","0adb4e47":"Train the logisitc regression model.","92fe5632":"### Looking at feature term","0630d6c0":"# Evaluating the logistic regression model","93a51ca0":"Doing the same with homeownership, the distribution among accounts is as follows","c8946cb6":"From the above linear relation, we can see that when even in the same grade, if given a higher interest rate people are more likely to default when compared to a lower interest rate","0b7e8805":"We can see that the default is higher in people who rent or own when compared to mortagage","332de511":"As said before there seems to be a linear connection between the interest rate and the default rate. We will use Linear Regression to calculate the linear function that maps from the default rate to the interest rate.","0e833057":"### Looking at feature grade","ee0297fa":"Add the two different verification status variables that indicate verified to one variable.","12122c1d":"This means that there is also a linear relationship between interest rate and default rate which is an interesting observation, we will look into this later","868a9dbb":"### Looking at feature installment","ad7b4499":"### Looking at feature homeownership","699a2b5d":"The higher the grade, the less the mean loss. We would suggest enhancing scrutiny for borrowers with low grades since they are more likely to have charge offs with the greater amount.","a3d7d334":"### Distribution of Expected Loss","5363a451":"Set up the pipeline. We will use L1 -penalty for built-in feature selection","f0c4b8d8":"* Positive: Charge Off\n* Negative: Fully Paid\n* Precision is defined as True Positive\/(True Positive + False Positive).\n* Recall is defined as True Positive\/(True Positive + False Negative).\nAt the default threshold 0.2, we have a precision 0.3 and recall 0.65, which means we have a significant number of false positives. In other words, many borrowers who paid off are predicted to have a charge off.\n\nIn the business setting, the threshold is set differently by business objectives. For example, if LendingClub wants to minimize the loan loss due to charge offs, they may want to lower the threshold to get a good recall score. This would reduce the likelihood that the positive class(charge off) is missed. However, on the other side, the precision score would go down, resulting in more false positives. That means a growing number of borrowers who paid off are predicted to have a charge off. This would cause the borrowers to have a bad experience with the company. And more importantly, LendingClub would lose the interest income collected from those who are incorrectly classified. Vice versa.","f6864b88":"Reduce the dataset to the following columns that are known to investors **before** the loan is funded.","3cea345d":"Taking a look at the fico score, we can see that most of out customers are in the FICO range 600-750","730d65c9":"### Let's have a look at the distribution of annual income","e4883824":"We could see that most of our current payments are in the 60 month term, and we could also see that most of them are less than 10000 and in 36 months, since the number of loans are low the distribution is deverse","0c796b48":"# Looking at the linear relationship between interest rates and default rates for a particular grade","a50f47fb":"We can see almost a linear relation between default rate and grade","2c85f9c2":"Secondly we are going to use ECL model to calculate the expected loan loss.\n\nExpected Credit Loss = LGD x PD x EAD The expected loss is calculated as a loan\u2019s LGD multiplied by both its probability of default (PD) and the financial institution\u2019s exposure at default (EAD).\n\nLGD(%): the amount unrecovered by the lender after selling the underlying asset if a borrower defaults on a loan. Because there is no collateral requirement for all of loans in the data, LGD equals to 1.\n\nPD: Probability of default, which is the feauture y_score_business_data.\n\nEAD: Remaining outstanding principal, which is the feature 'funded_amnt'.","0cc8d326":"First we run the model with business data, and get the probability of charge off for each borrower.","ce2e2e75":"**Here, to look at the accuracy of the model we are looking at ROC-AUC-score.**\n\nROC is a probability curve and AUC represents the degree or measure of separability. It tells how much the model is capable of distinguishing between classes. Higher the AUC, the better the model is at predicting 0s as 0s and 1s as 1s. A score of 0.73 means that our is good at differentiating","4d8186c1":"### Loan Loss by State","d2a29669":"We can also see an almost linear relation between interest rate and grade","11f1f3b2":"By utilizing the machine learning model, we are trying to predict the loan loss for those current borrowers.\n\nAssume threshold = 0.5.","aca7f253":"One can control the risk of the investments by choosing different tresholds. The higher one chooses the probability where to seperate good from bad loans the higher the default rate will be. We now write a function that transforms default probabilities to predictions. \n\n**<center>y_pred=1 if P(y_pred=1)\u2265\u03b8 else y_pred=0<center>**","90db0350":"For training our pd model, we will only look at default and fully paid loans","251b5a1f":"As we can see there are only two possible values for the term on Lending Club, i.e. 36 months or 60 months.","ac802859":"The mean expected loss is 3282. Over 30% of current borrowers owe less than 2500, while 75% of the population owe less than 5000. But we could also see some substantial loss, says 19000 or beyond.","5653240d":"Plotting the relation between employment length and default rate, we can see that there is no relation,i.e almost 2 to 9 have the same default rate, only <= 1 has a slightly higher and >10 has a slightly lower rate,so we will just divide the employment length into 2 variables 10+ and <=1 year","203dbba4":"### Term vs. loan loss","fd3b8d4b":"### Looking at feature purpose","28f0c717":"The accounts with a higher term have a significant higher default rate.","b5c9c18a":"Get the dummy-variables for categorical features.","6d4e81fa":"We are going to drop all dummy-variables which contain not at least 1% ones. In this case we can simply look at the mean of the features because all non-dummy variables have means greater than 0.01.\n\n","77f23022":"We can see that the most frequent purpose is debt consolidation","e75501fe":"### Looking at feature FICO score","577da08e":"Split the data into training and testing data.","e2752c3f":"Drop all rows that contain null-values.","058b39b6":"Before we can have a look at the distribution of the employment length we need to transform it into numerical values"}}