{"cell_type":{"d4163378":"code","a441cf4e":"code","db075e25":"code","cb2eed82":"code","0efe10ba":"code","5179746e":"code","3ee12efb":"code","3e939a71":"code","ca6f8add":"code","edf2d2e9":"code","486eef80":"code","0f9d213b":"code","13eba7f8":"code","fe447354":"code","fcf88b62":"code","188ea8cc":"code","bec7ffed":"code","d8d14db4":"code","c03a157f":"code","da815472":"code","ef6d8ef6":"markdown","b8167270":"markdown","dbe50b79":"markdown","6b45d6a9":"markdown","aae75670":"markdown","5eb4790c":"markdown","3c1c30a2":"markdown","47566b73":"markdown"},"source":{"d4163378":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","a441cf4e":"df = pd.read_csv(\"\/kaggle\/input\/persona-data\/persona.csv\")\ndf.head()","db075e25":"def check_df(dataframe):\n    print(\"****************** Shape ******************\")\n    print(df.shape)\n    print(\"****************** Head ******************\")\n    print(df.head())\n    print(\"****************** Tail ******************\")\n    print(df.tail())\n    print(\"****************** Dtypes ******************\")\n    print(df.dtypes)\n    print(\"****************** NA ******************\")\n    print(df.isnull().sum())\n    print(\"****************** Quantiles ******************\")\n    print(dataframe.quantile([0, 0.05, 0.50, 0.95, 0.99, 1]).T)","cb2eed82":"check_df(df)","0efe10ba":"num_cols = [col for col in df.columns if df[col].dtype in [int, float]]\ncat_cols = [col for col in df.columns if df[col].dtype == \"O\"]\nprint(f\"Categorical Columns: {cat_cols}\\nNumerical Columns: {num_cols}\")","5179746e":"def cat_summary(dataframe,col_name, plot=False):\n    print(\"Frequency of Categorical Variable:\\n{}\".format(dataframe[col_name].value_counts()))\n    print(\"##############################\")\n    print(pd.DataFrame({col_name: dataframe[col_name].value_counts(),\n                        \"Ratio\": 100 * dataframe[col_name].value_counts() \/ len(dataframe)}))\n    print(\"##############################\")\n    print(f\"Unique Number Of {col_name}: \",dataframe[col_name].nunique(), dataframe[col_name].unique()[:5])       \n    print(\"##############################\")\n \n    if plot:\n        sns.countplot(x=dataframe[col_name], data=dataframe)\n        plt.show()\ndef num_summary(dataframe, col_name, plot=False):\n    quantiles = [0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 0.95, 0.99]\n    print(dataframe[col_name].describe(quantiles).T)\n    print(f\"Unique Number Of {col_name}: \",dataframe[col_name].nunique())\n    if plot:\n        dataframe[col_name].hist(bins=20)\n        plt.xlabel(col_name)\n        plt.title(col_name)\n        plt.show()\n\n","3ee12efb":"cat_summary(df,\"SEX\",plot=True)","3e939a71":"num_summary(df,\"AGE\",plot=True)","ca6f8add":"df.groupby([\"COUNTRY\", \"SOURCE\",\"SEX\",\"AGE\"])[\"PRICE\"].sum().reset_index().head()\n","edf2d2e9":"agg_df = df.groupby([\"COUNTRY\", \"SOURCE\", \"SEX\", \"AGE\"]).agg({\"PRICE\": \"sum\"}).sort_values(\"PRICE\", ascending=False)\nagg_df = agg_df.reset_index()\nagg_df.head()","486eef80":"label_list = ['0_18', '19_23', '24_31', '32_41', '42_70']\nagg_df[\"AGE_CAT\"] = pd.cut(agg_df[\"AGE\"], bins=[0,18,23,31,41,70], labels=label_list)\nagg_df[\"AGE_CAT\"]","0f9d213b":"col_list = [\"COUNTRY\",\"SEX\",\"SOURCE\",\"AGE_CAT\"]\nagg_df[\"customers_level_based\"] = [\"_\".join(i).upper() for i in agg_df[col_list].values]\nagg_df = agg_df.groupby(\"customers_level_based\").agg(\"PRICE\").mean()\nagg_df = agg_df.reset_index()\n","13eba7f8":"agg_df[\"SEGMENT\"] = pd.qcut(agg_df[\"PRICE\"], 4, labels=[\"D\",\"C\",\"B\",\"A\"])\nagg_df.groupby([\"SEGMENT\"]).agg({\"PRICE\": [\"mean\", \"max\", \"sum\"]})\nA = agg_df[agg_df[\"SEGMENT\"] == \"A\"].describe().T\nB = agg_df[agg_df[\"SEGMENT\"] == \"B\"].describe().T\nC = agg_df[agg_df[\"SEGMENT\"] == \"C\"].describe().T\nagg_df.head()","fe447354":"A","fcf88b62":"B","188ea8cc":"C","bec7ffed":"sns.barplot(x=\"SEGMENT\",y=\"PRICE\", data=agg_df).set_title(\"PRICE-SEGMENT\");","d8d14db4":"def user_detection(country, sex, sources, age,dataframe = agg_df, col = \"customers_level_based\" ):\n    if (0 <= age <= 18):\n        age_cat = \"0_18\"\n    if (19 <= age <= 23):\n        age_cat = \"19_23\"\n    if (24 <= age <= 31):\n        age_cat = \"24_31\"\n    if (32 <= age <=41):\n        age_cat = \"32_41\"\n    if (42 <= age <= 70):\n        age_cat = \"42_70\"\n\n    new_user = country.upper()+ \"_\"+ sex.upper() + \"_\" + sources.upper() + \"_\" + age_cat\n    return dataframe[dataframe[col] == new_user]","c03a157f":"user_detection(\"FRA\",\"FEMALE\",\"IOS\",32)","da815472":"user_detection(\"TUR\",\"MALE\",\"ANDROID\",25)","ef6d8ef6":"<a id=\"4\"><\/a>\n## Data Analysis","b8167270":"<a id=\"3\"><\/a>\n## Numerical and Categorical Variables","dbe50b79":"### Segment Creation","6b45d6a9":"### Prediction","aae75670":"### Price Prediction Function","5eb4790c":"<a id=\"1\"><\/a>\n## Import Libraries","3c1c30a2":"<a id=\"2\"><\/a>\n## Load and Check Data","47566b73":"<h1> Level Based Classification <\/h1>\n<font color = \"blue\">\nContent:\n\n1. [Import Libraries](#1) \n2. [Load and Check Data](#2) \n3. [Numerical and Categorical Variables](#3) \n4. [Data Analysis](#4)\n"}}