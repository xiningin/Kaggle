{"cell_type":{"851499ac":"code","ed5caec2":"code","3769c15f":"code","9e7af3dc":"code","30548d1c":"code","8df10ae4":"code","6d8913ff":"code","2ce0a0ed":"code","5ab112be":"code","642ba913":"code","3dd75773":"code","20126f4e":"code","51dfe169":"code","0b81e1d8":"code","9cc3035c":"code","04fbf743":"code","ee9eb29f":"code","7477c0a9":"code","81443c3c":"code","877e40ee":"code","89f7350f":"code","be34fee4":"code","bdb1a9c1":"code","ca8f8f5d":"code","b34a43d8":"code","cd598690":"code","68333972":"code","ff477dfc":"code","0226b406":"markdown","6f71b2af":"markdown","886c1a7d":"markdown","0a50af4e":"markdown"},"source":{"851499ac":"import os\nimport warnings\nwarnings.filterwarnings('ignore')","ed5caec2":"import pandas as pd\nimport numpy as np \nimport matplotlib.pyplot as plt \n%matplotlib inline","3769c15f":"names = ['Vendors','Model_Name','MYCT','MMIN','MMAX','CACH','CHMIN','CHMAX','PRP','ERP']\n\ndata = pd.read_csv('..\/input\/relative-cpu-performance\/machine.csv',names=names)\ndf = pd.DataFrame(data)","9e7af3dc":"#to display maximun columns and rows \npd.set_option('display.expand_frame_repr',False)","30548d1c":"df.head()","8df10ae4":"df= df.drop(columns='Vendors',axis=1)\ndf= df.drop(columns='Model_Name',axis=1)\ndf= df.drop(columns='MYCT',axis=1)\ndf= df.drop(columns='ERP',axis=1)\ndf= df.drop(columns='PRP',axis=1)","6d8913ff":"df.head()","2ce0a0ed":"def minmaxdt(df):\n    df['transformed_MMIN'] = df['MMIN']\n    for i in range(len(df)):\n        df['transformed_MMIN'][i]=np.abs((df['MMIN'][i]-np.min(df['MMIN']))\/np.max(df['MMIN'])-np.min(df['MMIN']))","5ab112be":"minmaxdt(df)\ndf.head()","642ba913":"def minmaxdt(df):\n    df['transformed_MMAX'] = df['MMAX']\n    for i in range(len(df)):\n        df['transformed_MMAX'][i]=np.abs((df['MMAX'][i]-np.min(df['MMAX']))\/np.max(df['MMAX'])-np.min(df['MMAX']))","3dd75773":"minmaxdt(df)\ndf.head()","20126f4e":"def minmaxdt(df):\n    df['transformed_CACH'] = df['CACH']\n    for i in range(len(df)):\n        df['transformed_CACH'][i]=np.abs((df['CACH'][i]-np.min(df['CACH']))\/np.max(df['CACH'])-np.min(df['CACH']))","51dfe169":"minmaxdt(df)\ndf.head()","0b81e1d8":"def minmaxdt(df):\n    df['transformed_CHMIN'] = df['CHMIN']\n    for i in range(len(df)):\n        df['transformed_CHMIN'][i]=np.abs((df['CHMIN'][i]-np.min(df['CHMIN']))\/np.max(df['CHMIN'])-np.min(df['CHMIN']))","9cc3035c":"minmaxdt(df)\ndf.head()","04fbf743":"def minmaxdt(df):\n    df['transformed_CHMAX'] = df['CHMAX']\n    for i in range(len(df)):\n        df['transformed_CHMAX'][i]=np.abs((df['CHMAX'][i]-np.min(df['CHMAX']))\/np.max(df['CHMAX'])-np.min(df['CHMAX']))","ee9eb29f":"minmaxdt(df)\ndf.head()","7477c0a9":"df = df.drop(columns='MMIN',axis=1)\ndf = df.drop(columns='MMAX',axis=1)\ndf = df.drop(columns='CACH',axis=1)\ndf = df.drop(columns='CHMIN',axis=1)\ndf = df.drop(columns='CHMAX',axis=1)","81443c3c":"df.head()","877e40ee":"cov_mat = np.cov(df.T)\ncov_mat","89f7350f":"e_vals,e_vecs=np.linalg.eig(cov_mat)\ne_vals","be34fee4":"print(e_vecs)","bdb1a9c1":"print(e_vecs[1])\ne_vecs[1].shape","ca8f8f5d":"ev=e_vecs[1]","b34a43d8":"pca=np.dot(df,ev)\npca","cd598690":"df['PCA']=pca","68333972":"df.head()","ff477dfc":"df['PCA']","0226b406":"## Load datasets","6f71b2af":"## import requried libraries","886c1a7d":"## importing libraries for handling table like data and matrices ","0a50af4e":"## PCA using built in python function"}}