{"cell_type":{"a58609bb":"code","92becf18":"code","99254694":"code","82c3813d":"code","a5674855":"code","d8f9aee0":"code","77255a49":"code","d86f88b7":"code","591f0e92":"markdown","86392ec4":"markdown","59adb4bd":"markdown","a1ca9194":"markdown","42c9564e":"markdown"},"source":{"a58609bb":"import pandas as pd\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\n\nimport lightgbm as lgb # lightgbm \ubd80\uc2a4\ud305 \uc54c\uace0\ub9ac\uc998 \uc0ac\uc6a9\nfrom lightgbm import LGBMClassifier\n\nfrom sklearn import metrics\nfrom sklearn.metrics import roc_auc_score","92becf18":"redwine = pd.read_csv('..\/input\/wine-changed\/wine2.csv')\n\nredwine['quality'] = [1 if i == 'high rank' else 0 for i in redwine['quality'] ]\nredwine.head()","99254694":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(redwine[ redwine.columns[:-1] ], redwine['quality'], \n                                                    test_size = 0.3, random_state = 2)","82c3813d":"clf = LogisticRegression(random_state=0).fit(X_train, y_train)\n\ny_pred = clf.predict(X_test)\ny_pred2 = y_pred.round(0)\ny_pred2 = y_pred2.astype(int)\nprint('\uc815\ud655\ub3c4 :', metrics.accuracy_score(y_test, y_pred2))\nprint('AUC    :', roc_auc_score(y_pred2, y_test))","a5674855":"model = RandomForestClassifier(random_state = 0)\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\ny_pred2 = y_pred.round(0)\ny_pred2 = y_pred2.astype(int)\nprint('\uc815\ud655\ub3c4 :', model.score(X_test, y_test) )\nprint('AUC    :', roc_auc_score(y_pred2, y_test))","d8f9aee0":"model = RandomForestClassifier(criterion = 'entropy', n_estimators = 100, random_state = 0)\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\ny_pred2 = y_pred.round(0)\ny_pred2 = y_pred2.astype(int)\nprint('\uc815\ud655\ub3c4 :', model.score(X_test, y_test) )\nprint('AUC    :', roc_auc_score(y_pred2, y_test))","77255a49":"lgbm = LGBMClassifier(random_state = 0)\n\nlgbm_clf = lgbm.fit(X_train,y_train) #train the model on 100 epocs\n\ny_pred = lgbm_clf.predict(X_test)\ny_pred2 = y_pred.round(0)\ny_pred2 = y_pred2.astype(int)\n\nprint('\uc815\ud655\ub3c4 :', metrics.accuracy_score(y_test, y_pred2))\nprint('AUC    :', roc_auc_score(y_pred2, y_test))","d86f88b7":"d_train=lgb.Dataset(X_train, label=y_train)\n\nlgbm_param = {'objective':'binary',\n              \"metric\" : \"auc\",\n              'boosting_type': 'gbdt',\n              'random_state':42,\n              'learning_rate':0.075,\n            }\n\nclf = lgb.train(lgbm_param,d_train,100) #train the model on 100 epocs\n\ny_pred = clf.predict(X_test)\ny_pred2 = y_pred.round(0)\ny_pred2 = y_pred2.astype(int)\n\nprint('\uc815\ud655\ub3c4 :', metrics.accuracy_score(y_test, y_pred2))\nprint('AUC    :', roc_auc_score(y_pred2, y_test))","591f0e92":"lgbm \uc77c\ubc18 and \uac1c\uc120","86392ec4":"# \ub2e8\uc21c \ubaa8\ub378\ub9c1 \ube44\uad50","59adb4bd":"LogisticRegression","a1ca9194":"\ud604\uc7ac \ub370\uc774\ud130\ub97c \uc774\ub97c \uace0\ub3c4\ud654\ud558\uace0 \uc77c\ubc18\uc801\uc778 \uacb0\uacfc\ub85c \ub2e4\ub978 \uc0ac\ub78c\ub4e4\uc744 \ub0a9\ub4dd \uc2dc\ud0a4\uae30 \uc704\ud574\uc11c\ub294, \n\ncross validation \uacfc\uc815, \ub354 \ub9ce\uc740 \ub370\uc774\ud130 \uc218\uc9d1,\n\n\uc0c8\ub86d\uac8c \ub9cc\ub4e4 \uc218 \uc788\ub294 \ud30c\uc0dd\ubcc0\uc218, \uc2a4\ud0dc\ud0b9 \ub4f1\uc758 \uace0\ub3c4\ud654\ub41c \ubaa8\ub378\ub9c1 \uad6c\ucd95 \ubc0f \ud558\uc774\ud37c \ud30c\ub77c\ubbf8\ud130 \uc870\uc815\uc774 \ud544\uc694\ud55c \uac83\uc740 \ub2f9\uc5f0\ud558\ub2e4.\n\n\ud558\uc9c0\ub9cc \uc774\ubc88 \ucf54\ub4dc\uc5d0\uc11c\ub294 \ub370\uc774\ud130\ub97c \uac04\ub2e8\ud788 train, test\ub85c \ub098\ub204\ub294 \uacfc\uc815\uacfc\n\n\uadf8 \uc774\ud6c4\uc5d0, \uc815\ub9d0\ub85c \uc544\ubb34\ub7f0 \uacfc\uc815 \uc5c6\uc774 \ubaa8\ub378\ub9c1\ub9cc \ud55c \uc0c1\ud669\uc744 \uac04\ub2e8\ud788 \ucf54\ub4dc\ub85c \ud45c\ud604\ud558\uc600\ub2e4.\n\n\ub370\uc774\ud130 \uc218\ub3c4 \uc801\uace0, \uace0\ub3c4\ud654\ub97c \ud558\ub824\ub294 \ubaa9\uc801\uc774 \uc544\ub2c8\ubbc0\ub85c \uc5b4\ub290 \uc815\ub3c4\uc758 \uc815\ud655\ub3c4\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4\ub9cc \ubcf4\ub294 \uac83\uc774 \uc88b\uc544\ubcf4\uc778\ub2e4.","42c9564e":"RandomForest \uc77c\ubc18 and \uac1c\uc120"}}