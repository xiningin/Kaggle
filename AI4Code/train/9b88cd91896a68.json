{"cell_type":{"82b9a386":"code","5f8faa3c":"code","051db863":"code","f501be5f":"code","066349a4":"code","b8f80835":"code","e77e491d":"code","64698cad":"code","3bbccbf4":"code","2616d04c":"markdown","5cbb1f88":"markdown","66961258":"markdown","de441f08":"markdown","1096c0d7":"markdown","22a562f0":"markdown"},"source":{"82b9a386":"import pandas as pd\nimport warnings\nwarnings.filterwarnings('ignore')","5f8faa3c":"#Load submission\nSub = pd.read_csv('..\/input\/2021-ncaaw-first-step-v-3-visualization-result\/submission.csv')","051db863":"Teams = pd.read_csv('..\/input\/ncaaw-march-mania-2021\/WDataFiles_Stage2\/WTeams.csv')\nSlots = pd.read_csv('..\/input\/ncaaw-march-mania-2021\/WDataFiles_Stage2\/WNCAATourneySlots.csv')\nSeeds = pd.read_csv('..\/input\/ncaaw-march-mania-2021\/WDataFiles_Stage2\/WNCAATourneySeeds.csv')\nSeeds = Seeds.merge(Teams,how = 'left',left_on = ['TeamID'],right_on = ['TeamID'])\nSub['ATeamID'] = Sub['ID'].apply(lambda x: int(x.split('_')[1]))\nSub['BTeamID'] = Sub['ID'].apply(lambda x: int(x.split('_')[2]))\nSub = Sub[['ATeamID','BTeamID','Pred']]\nSub = Sub.merge(Seeds[Seeds['Season']==2021],how= 'left',left_on = 'ATeamID',right_on = 'TeamID').drop(['TeamID','Season'], axis=1)\nSub = Sub.merge(Seeds[Seeds['Season']==2021],how= 'left',left_on = 'BTeamID',right_on = 'TeamID').drop(['TeamID'], axis=1).rename(columns={'Seed_x': 'ASeed','Seed_y': 'BSeed','TeamName_x':'ATeamName','TeamName_y':'BTeamName'})\nSub = Sub.drop(['Season','ATeamID','BTeamID'],axis = 1)\n\nFirstRound = Slots[0:32]\nSecondRound = Slots[32:48]\nSweet16 = Slots[48:56]\nEliteEight = Slots[56:60]\nFinalFour = Slots[60:62]\nFinal = Slots[62:]\nFirstRound['ASeed'] = FirstRound['StrongSeed']\nFirstRound['BSeed'] = FirstRound['WeakSeed']\n\ndef merger(Round,Sub=Sub):  \n    Round = Round.merge(Sub,how = 'left',left_on = ['ASeed','BSeed'],right_on = ['ASeed','BSeed'])\n    for index in Round[Round['Pred'].isna() == True].index:\n            Round.at[index, 'Temp'] = Round.at[index, 'ASeed']\n            Round.at[index, 'ASeed'] = Round.at[index, 'BSeed']\n            Round.at[index, 'BSeed'] = Round.at[index, 'Temp']\n            Round = Round.drop(['Temp'],axis = 1)\n            \n    Round = Round.merge(Sub,how = 'left',left_on = ['ASeed','BSeed'],right_on = ['ASeed','BSeed'])\n    Round = Round.drop(['Pred_x','ATeamName_x','BTeamName_x'],axis = 1).rename(columns={'Pred_y': 'Pred','ATeamName_y':'ATeamName','BTeamName_y':'BTeamName'})\n    Round['Win'] = Round['Pred'] > 0.5\n    Round[['Win_Seed']] = Round[Round['Win'] == True][['ASeed']]\n    Round[['Win_Name']] = Round[Round['Win'] == True][['ATeamName']]\n    Round['Win_Seed'].fillna(value=Round[Round['Win'] == False]['BSeed'], inplace=True)\n    Round['Win_Name'].fillna(value=Round[Round['Win'] == False]['BTeamName'], inplace=True)\n    return Round ","f501be5f":"FirstRound = merger(FirstRound)\nFirstRound_Win = FirstRound[['Slot','Win_Seed']]\nfor game in FirstRound.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","066349a4":"SecondRound = SecondRound.merge(FirstRound_Win,how= 'left', left_on = 'StrongSeed',right_on = 'Slot')\nSecondRound = SecondRound.merge(FirstRound_Win,how= 'left', left_on = 'WeakSeed',right_on = 'Slot').drop(['Slot','Slot_y'],axis=1).rename(columns={'Win_Seed_x': 'ASeed','Win_Seed_y': 'BSeed','Slot_x':'Slot'})\nSecondRound = merger(SecondRound)\nSecondRound_Win = SecondRound[['Slot','Win_Seed']]\nfor game in SecondRound.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","b8f80835":"Sweet16 = Sweet16.merge(SecondRound_Win,how= 'left', left_on = 'StrongSeed',right_on = 'Slot')\nSweet16 = Sweet16.merge(SecondRound_Win,how= 'left', left_on = 'WeakSeed',right_on = 'Slot').drop(['Slot','Slot_y'],axis=1).rename(columns={'Win_Seed_x': 'ASeed','Win_Seed_y': 'BSeed','Slot_x':'Slot'})\nSweet16 = merger(Sweet16)\nSweet16_Win = Sweet16[['Slot','Win_Seed']]\nfor game in Sweet16.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","e77e491d":"EliteEight = EliteEight.merge(Sweet16_Win,how= 'left', left_on = 'StrongSeed',right_on = 'Slot')\nEliteEight = EliteEight.merge(Sweet16_Win,how= 'left', left_on = 'WeakSeed',right_on = 'Slot').drop(['Slot','Slot_y'],axis=1).rename(columns={'Win_Seed_x': 'ASeed','Win_Seed_y': 'BSeed','Slot_x':'Slot'})\nEliteEight = merger(EliteEight)\nEliteEight_Win = EliteEight[['Slot','Win_Seed']]\nfor game in EliteEight.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","64698cad":"FinalFour = FinalFour.merge(EliteEight_Win,how= 'left', left_on = 'StrongSeed',right_on = 'Slot')\nFinalFour = FinalFour.merge(EliteEight_Win,how= 'left', left_on = 'WeakSeed',right_on = 'Slot').drop(['Slot','Slot_y'],axis=1).rename(columns={'Win_Seed_x': 'ASeed','Win_Seed_y': 'BSeed','Slot_x':'Slot'})\nFinalFour = merger(FinalFour)\nFinalFour_Win = FinalFour[['Slot','Win_Seed']]\nfor game in FinalFour.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","3bbccbf4":"Final = Final.merge(FinalFour_Win,how= 'left', left_on = 'StrongSeed',right_on = 'Slot')\nFinal = Final.merge(FinalFour_Win,how= 'left', left_on = 'WeakSeed',right_on = 'Slot').drop(['Slot','Slot_y'],axis=1).rename(columns={'Win_Seed_x': 'ASeed','Win_Seed_y': 'BSeed','Slot_x':'Slot'})\nFinal = merger(Final)\nFinal_Win = Final[['Slot','Win_Seed']]\nfor game in Final.values:\n    print('{:4}({:6.2%}){:^16}{:2}{:^16}({:6.2%}){:>4}'.format(game[3],game[5], game[6],'vs', game[7],1-game[5],game[4]))\n    print('{:>25} {:<} {:<}'.format('WINNER:',game[10],game[9]))\n    print('-'*58)","2616d04c":"# First Round Predict","5cbb1f88":"# Final Predict","66961258":"# Elite Eight Predict","de441f08":"# Second Round Predict","1096c0d7":"# Final Four Predict","22a562f0":"# Sweet 16 Predict"}}