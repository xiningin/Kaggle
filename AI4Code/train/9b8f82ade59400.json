{"cell_type":{"79a27555":"code","a0b6d356":"code","8f2b7908":"code","fdc38ae7":"code","9b7ce378":"code","ebf34730":"code","b12650cd":"code","a7641dcc":"code","9fda16d6":"code","f0a7c83d":"code","6dbe2e90":"code","17bfe9ff":"code","3ef29f0e":"code","525f2054":"code","f39be710":"code","46e486ce":"code","3c693f1f":"code","c4b8ade9":"code","7a9cc011":"code","e21f82b6":"code","ab145f4a":"markdown","66716ab1":"markdown","00dd5054":"markdown","a7d65ae4":"markdown","deb7b22f":"markdown","03d1351b":"markdown","d4ba95b9":"markdown","0c149342":"markdown","4f1a08d9":"markdown","368a7514":"markdown","d4489e6c":"markdown","56a11bc0":"markdown"},"source":{"79a27555":"import pandas as pd","a0b6d356":"train = pd.read_csv(\"..\/input\/train.csv\")\ntest = pd.read_csv(\"..\/input\/test.csv\")","8f2b7908":"Y = train['label']\nX = train.drop(labels=[\"label\"], axis=1)","fdc38ae7":"X = X \/ 255.0\ntest = test \/ 255.0","9b7ce378":"from sklearn.model_selection import train_test_split\nrandom_seed=0\nX_train, X_val, Y_train, Y_val = train_test_split(X, Y, test_size=0.1, random_state=random_seed)","ebf34730":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow import keras","b12650cd":"plt.figure()\nXshow = X_train.values.reshape(-1,28,28,1)\nplt.imshow(Xshow[0][:,:,0])\nplt.colorbar()\nplt.grid(False)","a7641dcc":"X_train.shape","9fda16d6":"plt.figure(figsize=(10,10))\nclass_names = ['0','1','2','3','4','5','6','7','8','9']\nfor i in range(25):\n    plt.subplot(5,5,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    plt.imshow(Xshow[i][:,:,0], cmap=plt.cm.binary)","f0a7c83d":"model = keras.Sequential([\n    keras.layers.Flatten(input_shape=(28,28)),\n    keras.layers.Dense(128, activation=tf.nn.relu),\n    keras.layers.Dense(10, activation=tf.nn.softmax)\n])","6dbe2e90":"model.compile(optimizer=tf.train.AdamOptimizer(), \n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])","17bfe9ff":"X_val = X_val.values.reshape(-1,28,28)\nX_train = X_train.values.reshape(-1,28,28)\ntest = test.values.reshape(-1,28,28)","3ef29f0e":"model.fit(X_train,Y_train, epochs=5)","525f2054":"test_loss, test_acc = model.evaluate(X_val, Y_val)\nprint(\"Test Accuracy: {}\".format(test_acc))","f39be710":"X = X.values.reshape(-1,28,28)","46e486ce":"model.fit(X,Y, epochs=5)","3c693f1f":"predictions = model.predict(test)\npredictions = np.argmax(predictions, axis=1)","c4b8ade9":"submission = pd.read_csv('..\/input\/sample_submission.csv')\nsubmission[\"Label\"] = predictions","7a9cc011":"submission.head()","e21f82b6":"submission.to_csv('.\/simpleMNIST.csv', index=False)","ab145f4a":"### Preprocess the data","66716ab1":"## Overview\n* Today, We will train our first neural network using Tutorial\nhttps:\/\/www.tensorflow.org\/tutorials\/keras\/basic_classification","00dd5054":"## Visualization","a7d65ae4":"### Compile the model","deb7b22f":"## Bulid the model","03d1351b":"# Basic Classification Using Tensorflow Tutorial","d4ba95b9":"## Submission","0c149342":"### Train all of Train dataset","4f1a08d9":"### Train the model","368a7514":"### Setup the layers","d4489e6c":"## Load Dataset","56a11bc0":"### Evaluate accuracy"}}