{"cell_type":{"c5ce72ca":"code","dc7de034":"code","dce19045":"code","803e15eb":"code","b42af27e":"code","7c46de02":"markdown"},"source":{"c5ce72ca":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nfrom scipy import stats\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dc7de034":"train = pd.read_csv('\/kaggle\/input\/petfinder-pawpularity-score\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/petfinder-pawpularity-score\/test.csv')\ntrain = train[(np.abs(stats.zscore(train['Pawpularity']))<1)]","dce19045":"# define data\nx = train.drop(columns='Id').iloc[:,:12]\ny = train['Pawpularity']\n\n# split data\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=210)\n\n# modeling\nliner = LinearRegression()\nliner.fit(x_train,y_train)\n\n# get coef,intercept\n# liner.coef_\n# liner.intercept_\ny_pre = liner.predict(x_test)\ntest_pre = liner.predict(test.iloc[:,1:])\nmse = mean_squared_error(y_test,y_pre)\nrmse = np.sqrt(mse)\nrmse","803e15eb":"test_pre","b42af27e":"test['Pawpularity'] = test_pre\ntest\nsubmission = test.drop(columns=['Subject Focus','Eyes','Face','Action','Accessory','Group','Collage','Human','Occlusion','Info','Blur','Near'],axis=0)\nsubmission.to_csv('submission.csv', index=False)","7c46de02":"# submission"}}