{"cell_type":{"bd269740":"code","23d38736":"code","c11793fc":"code","2d2dfd8a":"code","4deb0467":"code","90644127":"code","0bbb7d0c":"code","3419f0bc":"code","5b9cec56":"code","adcdf3f9":"code","bf83bd88":"code","bc26738b":"code","d4bde38e":"code","61ba36b9":"code","04991309":"code","fe7d53cc":"code","4e21f146":"code","3ce6e604":"code","08e9f5a6":"code","1a4a9238":"code","689ae7a7":"code","578fdda1":"code","c1a709a3":"code","7f43de35":"code","ffa952c1":"code","4e9c3128":"code","70dccca2":"code","0c77cf01":"code","58e6a215":"code","a8980c8b":"code","62f1b2d4":"code","07adad67":"code","70f6ca15":"code","fbb13a2f":"code","0165f91a":"code","7cc0598e":"code","11c7d244":"markdown","96ff790f":"markdown","444b7ab8":"markdown","d61bcbb1":"markdown","0ae4ca2d":"markdown","03c41fcf":"markdown","a4076f57":"markdown","5fb50c96":"markdown","2139127b":"markdown","6095eec1":"markdown","cde6d506":"markdown","0dd393e8":"markdown","bb03bb1e":"markdown","fa17d1a2":"markdown","528aa894":"markdown","b1b57ed4":"markdown","8ac79b09":"markdown","059e0d13":"markdown","c76e4260":"markdown","35b64958":"markdown","711e5531":"markdown","cf15b13a":"markdown","488d0e86":"markdown","0b3629d6":"markdown","74e8255b":"markdown","5f26a624":"markdown","62644b9a":"markdown","b14768be":"markdown","6102c7e3":"markdown","6719f4f7":"markdown","2e21a129":"markdown","7fe7a419":"markdown","2d0658ba":"markdown","ad8ee9ad":"markdown"},"source":{"bd269740":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","23d38736":"from IPython.display import HTML\nf = open(\"..\/input\/ocean2\/ocean.css\").read()\nHTML(f\"<style>{f}<\/style>\")","c11793fc":"df = pd.read_csv(\"..\/input\/fifa19\/data.csv\")\ndf.head()","2d2dfd8a":"df.info()","4deb0467":"df.describe().T","90644127":"df.drop(['Unnamed: 0','Photo','Flag','Club Logo'],axis=1,inplace=True)","0bbb7d0c":"df.isnull().sum().sort_values(ascending=False)","3419f0bc":"missing_height = df[df['Height'].isnull()].index.tolist()\nmissing_weight = df[df['Weight'].isnull()].index.tolist()\nif missing_height == missing_weight:\n    print('They are same')\nelse:\n    print('They are different')","5b9cec56":"df.drop(df.index[missing_height],inplace =True)\ndf.isnull().sum()","adcdf3f9":"df.drop(['Loaned From','Release Clause','Joined'],axis=1,inplace=True)","bf83bd88":"acceleration = df[\"Acceleration\"] \nsprintSpeed = df[\"SprintSpeed\"] \n\n\ndata = pd.DataFrame({'Acceleration':acceleration,'SprintSpeed':sprintSpeed})\n\nsns.pairplot(data)\nplt.show()","bc26738b":"stamina = df[\"Stamina\"]  \nstrength = df[\"Strength\"] \n\n\ndata = pd.DataFrame({'Stamina':stamina,'Strength':strength})\n\nsns.pairplot(data)\nplt.show()","d4bde38e":"standingtackle = df[\"StandingTackle\"]\nslidingtackle = df[\"SlidingTackle\"] \n\n\ndata = pd.DataFrame({'StandingTackle':standingtackle,'SlidingTackle':slidingtackle})\n\nsns.pairplot(data)\nplt.show()","61ba36b9":"sns.set(style =\"dark\", palette=\"colorblind\", color_codes=True)\nx = df.Age\nplt.figure(figsize=(12,8))\nax = sns.distplot(x, bins = 58, kde = False, color='g')\nax.set_xlabel(xlabel=\"Player\\'s age\", fontsize=16)\nax.set_ylabel(ylabel='Number of players', fontsize=16)\nax.set_title(label='Histogram of players age', fontsize=20)\nplt.show()","04991309":"plt.figure(figsize = (9,9))\nsns.boxplot(x=\"Preferred Foot\", y=\"Overall\", hue=\"Skill Moves\", linewidth=2.2, fliersize= 3.2 ,data=df, saturation=1, palette=\"YlOrRd\")\nplt.show()","fe7d53cc":"plt.figure(figsize = (9,9))\nsns.boxplot(x=\"Weak Foot\", y=\"Overall\", linewidth=2.2, fliersize= 3.2 ,data=df, saturation=1, palette=\"YlOrRd\")\nplt.show()","4e21f146":"mappedLines = {\n    \"CB\": \"DEF\",\"CDM\": \"MID\", \"CM\": \"MID\",\"CF\": \"ATT\", \"ST\": \"ATT\"\n}\norderedGeneralPosition = mappedLines.keys()","3ce6e604":"plt.figure(figsize=(20,10))\nax = sns.violinplot(data = df, x = \"Position\", y=\"Overall\", order=orderedGeneralPosition)\nax.set(xlabel=\"Player Position\", ylabel = \"Player Rating\", title = \"Distribution of player's ratings based on their positions\")\nplt.show()","08e9f5a6":"some_clubs = ('Juventus', 'Real Madrid', 'Paris Saint-Germain', 'FC Barcelona', 'Legia Warszawa', 'Manchester United')\ndf_club = df.loc[df['Club'].isin(some_clubs) & df['Age']]\n\nfig, ax = plt.subplots(figsize=(20,10))\nax = sns.violinplot(x=\"Club\", y=\"Age\", data=df_club);\nax.set_title(label='Distribution of age in some famous clubs', fontsize=20)","1a4a9238":"sns.jointplot(x=df['Age'],y=df['Potential'],\n              joint_kws={'alpha':0.1,'s':5,'color':'red'},\n              marginal_kws={'color':'red'})","689ae7a7":"sns.lmplot(data = df, x = 'Age', y = 'SprintSpeed',lowess=True,scatter_kws={'alpha':0.01, 's':5,'color':'orange'},line_kws={'color':'red'})","578fdda1":"sns.lmplot(x = 'BallControl', y = 'Dribbling', data = df,col = 'Preferred Foot',scatter_kws = {'alpha':0.1,'color':'brown'},\n           line_kws={'color':'blue'})","c1a709a3":"sns.clustermap(df.corr(),annot = False)","7f43de35":"df[\"Age_categ\"]=pd.cut(df.Age,[15,20,25,30,35,40,45],labels=[\"15-20\", \"20-25\", \"25-30\", \"30-35\", \"35-40\", \"40-45\"]) ","ffa952c1":"sns.catplot(\"Age_categ\", \"Overall\", data=df, kind=\"violin\", ax=ax, hue= \"Preferred Foot\", split=True,  height=8, aspect=1.2)","4e9c3128":"df['Value'] = df['Value'].str.replace('\u20ac','').str.replace('M',' 1000000').str.replace('K',' 1000')\ndf['Value'] = df['Value'].str.split(' ', expand=True)[0].astype(float) * df['Value'].str.split(' ', expand=True)[1].astype(float)\ndf['Value'] = df['Value'].fillna(0).astype(np.float32)","70dccca2":"df.sort_values(\"Value\", ascending=False)[['Name', \"Age\", \"Value\", \"Overall\"]].head(5)","0c77cf01":"df['Wage'] = df['Wage'].str.replace('\u20ac','').str.replace('M',' 1000000').str.replace('K',' 1000')\ndf['Wage'] = df['Wage'].str.split(' ', expand=True)[0].astype(float) * df['Wage'].str.split(' ', expand=True)[1].astype(float)\ndf['Wage'] = df['Wage'].fillna(0).astype(np.float32)","58e6a215":"df.sort_values(\"Wage\", ascending=False)[['Name', \"Age\", \"Wage\", \"Overall\"]].head(5)","a8980c8b":"drop = [\n    'ID', 'Name', \n    'Potential', 'Special', \n    'Real Face', 'Jersey Number',  'Contract Valid Until',\n    'LS', 'ST', 'RS', 'LW', 'LF', 'CF', 'RF', \n    'RW', 'LAM', 'CAM', 'RAM', 'LM', 'LCM', 'CM', 'RCM', 'RM', 'LWB', 'LDM', 'CDM', \n    'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB'\n]\n\ndf = df.drop(drop, axis=1)","62f1b2d4":"X = df[['Age', 'Overall', 'Value', 'Wage',\n       'International Reputation', 'Weak Foot', 'Skill Moves',\n       'Crossing', 'Finishing',\n       'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', 'Curve',\n       'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration',\n       'SprintSpeed', 'Agility', 'Reactions', 'Balance', 'ShotPower',\n       'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression',\n       'Interceptions', 'Positioning', 'Vision', 'Penalties', 'Composure',\n       'Marking', 'StandingTackle', 'SlidingTackle', 'GKDiving', 'GKHandling',\n       'GKKicking', 'GKPositioning', 'GKReflexes']]\ny = df['Overall']","07adad67":"from sklearn.tree import DecisionTreeRegressor\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 1)\ntree_reg = DecisionTreeRegressor(random_state=0)\ntree_reg.fit(X_train, y_train)\ntree_reg.predict(X_test)","70f6ca15":"from sklearn.model_selection import cross_val_score\ncross_val_score(tree_reg, X, y, cv=10, scoring=\"accuracy\")","fbb13a2f":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nreg = LinearRegression()\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)\nreg.fit(X_train,y_train)\ny_pred = reg.predict(X_test)\ny_pred_train = reg.predict(X_train)\nR_squared = reg.score(X_test, y_test)\nR_squared","0165f91a":"from sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import r2_score\nkRange = range(1,15,1)\n\nscores_list = []\nfor i in kRange:\n    regressor_knn = KNeighborsRegressor(n_neighbors = i)\n    \n    regressor_knn.fit(X_train,y_train)\n    pred = regressor_knn.predict(X_test)\n    \n    scores_list.append(r2_score(y_test,pred))","7cc0598e":"regressor_knn = KNeighborsRegressor(n_neighbors = 3)\n\nregressor_knn.fit(X_train,y_train)\npred = regressor_knn.predict(X_test)\n\nr2_knn = r2_score(y_test,pred)\nprint(r2_knn)","11c7d244":"**Improving Value column so we can use it in Predictive Modelling.**","96ff790f":"**Plotting Joint Plot to show the relationship between Age and Potential of players**","444b7ab8":"**Plotting Violin Plot to show the Distribution of age in some famous clubs.**","d61bcbb1":"**Improving Wage column so we can use it in Predictive Modelling.**","0ae4ca2d":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Decision Tree Regressor <\/h2> ","03c41fcf":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> R2 Score : 1.0 <\/h2> ","a4076f57":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Data Preprocessing <\/h2> ","5fb50c96":"**Plotting Violin Plot to show the Distribution of player's ratings based on their positions.**","2139127b":"**Plotting Cat Plot for showing the relationship between Age Categories and Overall by Preferred Foot of players.**","6095eec1":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Linear Regression (scikit-learn) <\/h2> ","cde6d506":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Checking the basic properties of dataset. <\/h2> ","0dd393e8":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; background-color: #f00758; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Thank You. <\/h2> ","bb03bb1e":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Loading Dataset. <\/h2> ","fa17d1a2":"**Clustermap plotting for an overview.**","528aa894":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:20px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> R2 Score : 0.9191379805416268 <\/h2> ","b1b57ed4":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff  ; text-align: center; border-radius: 5px 5px; padding: 5px\"> Cleaning Dataset. <\/h2> ","8ac79b09":"**Plotting Pairplot for showing the relationship between Stamina and Strength columns of dataset.**","059e0d13":"![fifa19](https:\/\/i.ytimg.com\/vi\/qTz8ZhNrEDA\/maxresdefault.jpg)","c76e4260":"**Plotting LM Plot for showing the relationship between BallControl and Dribbling by Preferred Foot of players.**","35b64958":"As they are same I am assuming it will be same for other all columns too.\n\nWe will see it soon.","711e5531":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> FIFA19 EDA\ud83d\udcca + Predictive Modelling\ud83c\udfae <\/h2> ","cf15b13a":"**Plotting LM Plot to show the relationship between Age and SprintSpeed of players.**","488d0e86":"As the age increases the sprint speed decreases.","0b3629d6":"**Plotting Pairplot for showing the relationship between Acceleration and SprintSpeed columns of dataset.**","74e8255b":"Potential tends to fall as you grow old.","5f26a624":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> KNeighborsRegressor <\/h2> ","62644b9a":"<a id = '1.1'><\/a>\n<h2 style = \"font-size:40px; font-family:Garamond ; font-weight : normal; background-color: #F7CAC9; color :#ffffff   ; text-align: center; border-radius: 5px 5px; padding: 5px\"> EDA\ud83d\udcca <\/h2> ","b14768be":"48 is repeating many times lets check if all of them are same ID or not.","6102c7e3":"**Plotting BoxPlot to plot the relationship between Overall and Preferred Foot by Skill Moves of players.**","6719f4f7":"**Plotting Pairplot for showing the relationship between StandingTackle and SlidingTackle columns of dataset.**","2e21a129":"**Plotting BoxPlot to plot the relationship between Overall and Weak Foot of players.**","7fe7a419":"**Dropping unnecessary columns for better predictions.**","2d0658ba":"**Plotting Histogram to show the number of players for a particular age.**","ad8ee9ad":"As we can see, we guessed right and now we have fewer null values."}}