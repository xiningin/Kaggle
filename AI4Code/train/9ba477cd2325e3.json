{"cell_type":{"1187552e":"code","aac0938f":"code","b19c1e19":"code","cb3dcd7a":"code","b071ba7b":"code","5e60041f":"code","dd32a087":"code","7dc454e5":"code","b3413ff9":"code","dfbe795a":"code","d1036426":"code","40de31ab":"code","6be01347":"code","9c9eb8b1":"markdown","d2d446a8":"markdown","d554ac25":"markdown","e87d7b68":"markdown","b748643c":"markdown","613afae2":"markdown","57021b28":"markdown"},"source":{"1187552e":"import pandas as pd\nimport numpy as np\nimport scipy.stats as stat\nimport matplotlib.pyplot as plt","aac0938f":"cd ..\/input\/","b19c1e19":"data = pd.read_csv(\"SIMPLEPENDULUMOSCILLATIONDATA.txt\", sep=\" \", header=None, names=['x', 'y'])\nprint(data.head())\nprint(data.tail())","cb3dcd7a":"x = data['x'].values\ny = data['y'].values","b071ba7b":"plt.figure(figsize=(12,10))\nplt.plot(x, y)\nplt.show()","5e60041f":"plt.figure(figsize=(12, 10))\nplt.plot(x, y, '*k')\n#plt.plot(x, y)\nplt.show()","dd32a087":"Y = y ** 2","7dc454e5":"plt.figure(figsize=(16,10))\n#plt.plot(x, Y)\nplt.plot(x, Y, '*k')\nplt.show()","b3413ff9":"# Linear regression function:\nm, c, _, _, _ = stat.linregress(x, Y)","dfbe795a":"ylr = m * x + c","d1036426":"plt.figure(figsize=(16,10))\nplt.plot(x, Y, 'k.')\nplt.plot(x, ylr,'blue')\nplt.show()","40de31ab":"plt.figure(figsize=(16,10))\nplt.plot(x, Y, 'k.')\nplt.plot(x, ylr,color='blue')\nplt.plot([x[0], x[-1]], [Y[0], Y[-1]],color='red')\nplt.show()","6be01347":"x1 = np.array(x) # make a copy of all x values\ny1 = np.array(Y) # make a copy of all Y values\n\n# Plot the data\nplt.figure(figsize=(16,10))\nplt.plot(x1, y1, 'k.')\n\n# Plot the original best fit\nplt.plot(x, ylr, color='blue')\n\n# MAKE A SMALL CHANGE TO THE Y value of the 0th data point:\ny1[0] = 2 # we have made a small change\n\n# Find the new best fit line with the outlier\nm1, c1, _, _, _ = stat.linregress(x1, y1)\ny1lr = m1 * x1 + c1 \n\n# Plot the new line, and the point before change (BLUE) and after change (GREEN)\nplt.plot(x1, y1lr, color='green')\nplt.plot(x[0], Y[0], 'bo', markersize=10)\nplt.plot(x1[0], y1[0], 'go', markersize=10)\nplt.show()","9c9eb8b1":"### Seeing the effect of outliers\n    Let us now change the  Y  value of the first point to see how it changes the best fit line:","d2d446a8":"The objective of this experiment is to understand simple linear regression models.\nIn this experiment we will use simple pendulum oscillations dataset.\nWe start by plotting some experimental data and explore the simplest line we can fit.","d554ac25":"Here, $m$ and $c$ are the slope and intercept of a line. Let us plot this line:","e87d7b68":"We see that this is a good linear fit on the data.\n\nWe will plot a few other plausible lines to see visually why this is the *'best'* line.\n\n### Plotting the line between most extreme points:","b748643c":"That does not look too much of a straightline; it may be easier to see if we only plot the points rather than poltting the line that is obtained by connecting th e points in the order of their occurrence.","613afae2":"Definitely the linearity is more pronounced. We will fit the *best* line and see.","57021b28":"This still is not too much like a straightline. That is because it is not one actually! From the domain we know that actually $x$ $\\propto$ $y^2$. We will tell you how, soon!\n\nSo let us instead plot $y^2$ vs $x$:"}}