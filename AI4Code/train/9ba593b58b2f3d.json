{"cell_type":{"9132fd29":"code","933ad5a8":"code","0526774b":"code","b94cf79d":"code","bfb97977":"code","49753040":"code","52fd4382":"code","6fede894":"code","a47d7682":"code","f1087e99":"code","e1b9912c":"code","5f7b5924":"code","88fceb2b":"code","eb176d13":"code","0f5977b1":"code","c157518d":"code","733a33fe":"code","d88f7b92":"code","8bfeb9c1":"code","f611e98d":"code","949937c8":"code","9060fe2a":"code","99ed73b2":"code","b14f326b":"code","09544d2b":"code","eda6db7f":"code","4c257d14":"code","fe4303fb":"code","3f3904fc":"code","37882771":"code","13fa37ac":"code","bd069bec":"code","d5baa16f":"code","4105917a":"code","d9601859":"code","9fef6724":"code","537da68d":"code","8e962d59":"code","0d289b6e":"code","3f959a16":"code","968156a6":"code","8d972341":"code","52e7f48d":"code","85a7a070":"code","bee55931":"code","6be27bbb":"code","435459f7":"code","faefc432":"code","6ce96ceb":"code","64bd07f9":"code","f02dc614":"code","900184df":"code","c3709f3a":"code","70d87f40":"code","145f1a64":"code","1d5ce140":"code","84b41865":"code","e44d0daa":"code","067e96dc":"code","db33bc50":"code","7c46d3ff":"code","a140fe34":"code","e8216058":"code","cc07273b":"code","725b2c2f":"code","f533c213":"code","7dfdb3d4":"code","5ed5dd26":"code","6273fd36":"code","67639bfa":"code","cdce6da4":"code","d08e0454":"code","5ce8c192":"code","eeb060ec":"code","20e1e6a5":"code","18266004":"code","9ec4c245":"code","55625b7d":"code","76a71433":"code","7ee54832":"code","7b845d11":"code","cd107b4f":"markdown","dc51187b":"markdown"},"source":{"9132fd29":"import pandas as pd\nimport matplotlib.pyplot as plt","933ad5a8":"data=pd.read_csv('..\/input\/titanic\/train.csv')\ndata.head(50)","0526774b":"data.info()","b94cf79d":"data.describe()","bfb97977":"data[\"Survived\"].hist(figsize=(5,5))\nplt.show()","49753040":"data.corr()[\"Survived\"]","52fd4382":"data['Embarked'].value_counts()","6fede894":"import seaborn as sns\nsns.countplot(data.Survived)\nplt.show()","a47d7682":"sns.barplot(x='Pclass', y='Survived', data=data)\nplt.show()","f1087e99":"sns.barplot(x='Sex', y='Survived', data=data)\nplt.show()","e1b9912c":"sns.boxplot(x='Survived', y='Age', data=data)\nplt.show()","5f7b5924":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.head()","88fceb2b":"data['Sex_Code'] = data['Sex'].map({'female':1, 'male':0}).astype('int')\n","eb176d13":"test['Sex_Code'] = test['Sex'].map({'female':1, 'male':0}).astype('int')","0f5977b1":"data.head()","c157518d":"test.head()","733a33fe":"whole_data = data.append(test)\nwhole_data['Title'] = whole_data.Name.str.extract(r'([A-Za-z]+)\\.', expand=False)\nwhole_data.Title.value_counts()","d88f7b92":"Common_Title = ['Mr', 'Miss', 'Mrs', 'Master']\nwhole_data['Title'].replace(['Ms', 'Mlle', 'Mme'], 'Miss', inplace=True)\nwhole_data['Title'].replace(['Lady'], 'Mrs', inplace=True)\nwhole_data['Title'].replace(['Sir', 'Rev'], 'Mr', inplace=True)\nwhole_data['Title'][~whole_data.Title.isin(Common_Title)] = 'Others'","8bfeb9c1":"whole_data.head()","f611e98d":"sns.boxplot(x='Title', y='Age', data=whole_data)\nplt.show()","949937c8":"AgeMedian_by_titles = whole_data.groupby('Title')['Age'].median()\nAgeMedian_by_titles","9060fe2a":"for title in AgeMedian_by_titles.index:\n    whole_data['Age'][(whole_data.Age.isnull()) & (whole_data.Title == title)] = AgeMedian_by_titles[title]","99ed73b2":"whole_data.head()","b14f326b":"whole_data['Embarked'].fillna(whole_data.Embarked.mode()[0], inplace=True)","09544d2b":"whole_data['Fare'].fillna(whole_data['Fare'].median(), inplace=True)","eda6db7f":"whole_data.loc[whole_data.Fare>512, 'Fare'] = 263","4c257d14":"whole_data['Embarked_Code'] = whole_data['Embarked'].map({'S':0, 'C':1, 'Q':2}).astype('int')","fe4303fb":"whole_data['AgeBin_5'] = pd.qcut(whole_data['Age'], 5)\n","3f3904fc":"whole_data.head()","37882771":"whole_data['FareBin_5'] = pd.qcut(whole_data['Fare'], 5)","13fa37ac":"from sklearn.preprocessing import LabelEncoder\nlabel = LabelEncoder()\nwhole_data['AgeBin_Code_5'] = label.fit_transform(whole_data['AgeBin_5'])","bd069bec":"whole_data['FareBin_Code_5'] = label.fit_transform(whole_data['FareBin_5'])","d5baa16f":"whole_data.head()","4105917a":"whole_data.corr()[\"Survived\"]","d9601859":"whole_data['Title_Code'] = whole_data.Title.map({'Mr':0, 'Miss':1, 'Mrs':2, 'Master':3, 'Others':4}).astype('int')","9fef6724":"whole_data.head(100)","537da68d":"whole_data['FamilySize'] = whole_data.SibSp + whole_data.Parch + 1\n","8e962d59":"sns.countplot(whole_data.FamilySize)\nplt.show()","0d289b6e":"whole_data['Alone'] = whole_data.FamilySize.map(lambda x: 1 if x == 1 else 0)\nsns.barplot(x='Alone', y='Survived', data=whole_data)\nplt.show()","3f959a16":"whole_data.corr()[\"Survived\"]","968156a6":"whole_data.info()","8d972341":"col=['AgeBin_5','FareBin_5','Cabin','FamilySize','Fare','Parch','Sex','Title','PassengerId','SibSp']\nfor cl in col:\n    whole_data=whole_data.drop([cl], axis=1)","52e7f48d":"whole_data.head()","85a7a070":"col=['Age','Name','Ticket','Embarked']\nfor cl in col:\n    whole_data=whole_data.drop([cl], axis=1)","bee55931":"whole_data.head()","6be27bbb":"whole_data.corr()[\"Survived\"]","435459f7":"col=['AgeBin_Code_5','Embarked_Code']\nfor cl in col:\n    whole_data=whole_data.drop([cl], axis=1)","faefc432":"whole_data.corr()[\"Survived\"]","6ce96ceb":"train_data = whole_data[:len(data)]\ntest_data = whole_data[len(data):]","64bd07f9":"len(whole_data)","f02dc614":"len(train_data)","900184df":"len(data)","c3709f3a":"len(test)","70d87f40":"len(test_data)","145f1a64":"X_train=train_data.drop(['Survived'],axis=1)\ny_train= train_data['Survived']","1d5ce140":"X_train.head()","84b41865":"y_train.head()","e44d0daa":"from sklearn import metrics\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.feature_selection import RFECV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nimport warnings\nwarnings.filterwarnings('ignore')","067e96dc":"final = ['Pclass','Sex_Code','FareBin_Code_5','Title_Code','Alone']","db33bc50":"model = RandomForestClassifier(n_estimators=200, random_state=2)\n","7c46d3ff":"model.fit(X_train,y_train)","a140fe34":"from sklearn.model_selection import cross_val_score, GridSearchCV\ngrid_param = {\n 'n_estimators': [100, 200, 300],\n 'criterion':['gini', 'entropy'],\n 'min_samples_split': [2, 10, 20],\n 'min_samples_leaf': [1, 5],\n 'bootstrap': [True, False],\n}\ngd_sr = GridSearchCV(estimator=model,\n param_grid=grid_param,\n scoring='accuracy',\n cv=5,\n n_jobs=-1)\ngd_sr.fit(X_train[final], y_train)\nbest_parameters = gd_sr.best_params_\nprint(best_parameters)","e8216058":"model = RandomForestClassifier(n_estimators=200, bootstrap=False, criterion= 'gini', min_samples_leaf=5, min_samples_split=2, random_state=2)","cc07273b":"all_accuracies = cross_val_score(estimator=model, X=X_train, y=y_train, cv=5)\nall_accuracies\nall_accuracies.mean()","725b2c2f":"X_test = test_data[final]\nmodel.fit(X_train[final],y_train)\nprediction = model.predict(X_test)\noutput = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': prediction.astype(int)})\noutput.to_csv('my_submission.csv', index=False)","f533c213":"output.head()","7dfdb3d4":"X_train.head()","5ed5dd26":"X_train.corr()['Sex_Code']","6273fd36":"Sex_title=X_train.loc[:,['Sex_Code','Title_Code']]","67639bfa":"from sklearn.decomposition import PCA\np = PCA(n_components=1)\nSex_Title=p.fit_transform(Sex_title)\nprint(Sex_Title)","cdce6da4":"X_train['Sex_Title']=Sex_Title[:,0]","d08e0454":"X_train.head()","5ce8c192":"from sklearn.preprocessing import StandardScaler\nS= StandardScaler()\nXN = S.fit_transform(Sex_Title)","eeb060ec":"X_train=X_train.drop(['Sex_Code'],axis=1)","20e1e6a5":"X_train=X_train.drop(['Title_Code'],axis=1)","18266004":"finale = ['Pclass','FareBin_Code_5','Alone','Sex_Title']","9ec4c245":"model = RandomForestClassifier(n_estimators=200, random_state=2)","55625b7d":"model.fit(X_train,y_train)","76a71433":"grid_param = {\n 'n_estimators': [100, 200, 300],\n 'criterion':['gini', 'entropy'],\n 'min_samples_split': [2, 10, 20],\n 'min_samples_leaf': [1, 5],\n 'bootstrap': [True, False],\n}\ngd_sr = GridSearchCV(estimator=model,\n param_grid=grid_param,\n scoring='accuracy',\n cv=5,\n n_jobs=-1)\ngd_sr.fit(X_train[finale], y_train)\nbest_parameters = gd_sr.best_params_\nprint(best_parameters)","7ee54832":"model = RandomForestClassifier(n_estimators=200, bootstrap=False, criterion= 'gini', min_samples_leaf=5, min_samples_split=2, random_state=2)","7b845d11":"all_accuracies = cross_val_score(estimator=model, X=X_train, y=y_train, cv=5)\nall_accuracies\nall_accuracies.mean()","cd107b4f":"# **Data transformation**","dc51187b":" # **data vizualisation**"}}