{"cell_type":{"81e2f504":"code","67005b91":"code","c90e123b":"code","9671d7c8":"code","0c3881db":"code","1b399535":"code","0ab5c18a":"code","a26bfee8":"code","6a40c9b7":"code","a368762a":"code","20c27075":"code","99fcfc9b":"code","ad1f0376":"code","c41b378e":"code","c6126942":"code","aa943bc8":"code","1fc5163e":"code","e940c5ce":"code","7ace48ad":"code","dfb59f82":"code","dd2323be":"code","b8e2034e":"code","5eb192e3":"code","17856c18":"code","f337c8ca":"code","103e2878":"markdown","e5e58215":"markdown","c2311524":"markdown","1fe08eb7":"markdown","27766142":"markdown","4881f8cb":"markdown","1a3a0a61":"markdown","a9410930":"markdown","90741d3d":"markdown"},"source":{"81e2f504":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","67005b91":"#import dataset\n\ndata=pd.read_csv('..\/input\/biomechanical-features-of-orthopedic-patients\/column_2C_weka.csv')","c90e123b":"data.info()","9671d7c8":"data.head()","0c3881db":"data['class'].unique()","1b399535":"data.describe()","0ab5c18a":"color_list = ['cyan' if i=='Abnormal' else 'orange' for i in data.loc[:,'class']]\npd.plotting.scatter_matrix(data.loc[:, data.columns != 'class'],\n                           c=color_list,\n                           figsize= [17,17],\n                           diagonal='hist',\n                           alpha=0.5,\n                           s = 200,\n                           marker = '*',\n                           edgecolor= \"black\")\n                                        \nplt.show()","a26bfee8":"plt.figure(figsize=(15,15))\nsns.heatmap(data.corr(),annot=True,cmap='RdBu_r')","6a40c9b7":"sns.countplot(x=\"class\", data=data)\nplt.show()","a368762a":"# create data1 and data2 that includes pelvic_incidence that is feature and sacral_slope that is target variable\ndata1 = data[data['class'] =='Abnormal']\ndata2 = data[data['class'] =='Normal']\nx = np.array(data1.loc[:,'pelvic_incidence']).reshape(-1,1)\ny = np.array(data1.loc[:,'sacral_slope']).reshape(-1,1)\nx2=np.array(data2.loc[:,'pelvic_incidence']).reshape(-1,1)\ny2=np.array(data2.loc[:,'sacral_slope']).reshape(-1,1)\n# Scatter\nplt.figure(figsize=[5,5])\nplt.scatter(x=x,y=y,color='cyan',marker=\"*\",label='Abnormal')\nplt.scatter(x=x2,y=y2,color='orange',marker=\"*\",label=\"Normal\")\nplt.xlabel('pelvic_incidence')\nplt.ylabel('sacral_slope')\nplt.legend()\nplt.show()\n","20c27075":"data.loc[:,'class'].value_counts()","99fcfc9b":"data.head()","ad1f0376":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors = 3)\nx,y = data.loc[:,data.columns != 'class'], data.loc[:,'class']\nknn.fit(x,y)\nprediction = knn.predict(x)\nprint('Prediction: {}'.format(prediction))","c41b378e":"# train test split \n#train %70  and test %30 \nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 1)\n\nknn = KNeighborsClassifier(n_neighbors = 5)\nx,y = data.loc[:,data.columns != 'class'], data.loc[:,'class']\n\nknn.fit(x_train,y_train)\nprediction = knn.predict(x_test)\n\n#print('Prediction: {}'.format(prediction))\nprint('With KNN (K=5) accuracy is: ',knn.score(x_test,y_test)) # accuracy","c6126942":"prediction","aa943bc8":"#find k value\nscore_list=[]\ntrain_accuracy = []\nfor each in range (1,25):\n    knn=KNeighborsClassifier(n_neighbors=each)\n    knn.fit(x_train,y_train)\n    score_list.append(knn.score(x_test,y_test))\n    train_accuracy.append(knn.score(x_train, y_train))\nplt.plot(range(1,25),score_list,label=\"Testing Accuracy\",color=\"red\")\nplt.plot(range(1,25), train_accuracy, label = 'Training Accuracy',color=\"green\")\nplt.xlabel(\"Number of Neighbors\")\nplt.ylabel(\"accuracy\")\nplt.title('Value VS Accuracy')\nplt.savefig('graph.png')\nplt.legend()\nplt.show()","1fc5163e":"print(\"Best accuracy is {} with K = {}\".format(np.max(score_list),1+score_list.index(np.max(score_list))))","e940c5ce":"data.head()","7ace48ad":"plt.scatter(data['pelvic_radius'],data['degree_spondylolisthesis'])\nplt.xlabel('pelvic_radius')\nplt.ylabel('degree_spondylolisthesis')\nplt.show()","dfb59f82":"data2=data.loc[:,['degree_spondylolisthesis','pelvic_radius']]\nfrom sklearn.cluster import KMeans\nkmeans=KMeans(n_clusters=2)\nkmeans.fit(data2)\nlabels=kmeans.predict(data2)\nplt.scatter(data['pelvic_radius'],data['degree_spondylolisthesis'],c=labels)\nplt.xlabel('pelvic_radius')\nplt.ylabel('degree_spondylolisthesis')\nplt.show()","dd2323be":"wcss = []\nfor i in range(1,15):\n    kmeans = KMeans(n_clusters=i)\n    kmeans.fit(data2)\n    wcss.append(kmeans.inertia_)\nplt.plot(range(1,15),wcss,'-*')\nplt.xlabel('Number of k (cluster value)')\nplt.ylabel('Wcss')\nplt.show()","b8e2034e":"data3 = data.drop('class',axis = 1)","5eb192e3":"data3.head()","17856c18":"from scipy.cluster.hierarchy import linkage, dendrogram \n\nmerg=linkage(data2,method=\"ward\")\ndendrogram(merg) #hiartical clustring algoritmas\u0131n\u0131 kullan\u0131yorum.\ndendrogram(merg,leaf_rotation=90)\nplt.xlabel(\"data paoints\")\nplt.ylabel(\"euclidean distance\")\nplt.show()","f337c8ca":"from scipy.cluster.hierarchy import linkage,dendrogram\n\nmerg = linkage(data3.iloc[200:220,:],method = 'single')\ndendrogram(merg, leaf_rotation = 90, leaf_font_size = 6)\nplt.show()","103e2878":"## Biomechanical features of orthopedic patients","e5e58215":"<a id=\"5\"><\/a> <br>\n## HIERARCHY","c2311524":"<a id=\"2\"><\/a> <br>\n###  K-NEAREST NEIGHBORS (KNN)","1fe08eb7":"**Content:**\n1. Introduction to Python:\n * [SUPERVISED LEARNING](#1)\n   * [Machine Learning]\n   * [EDA(Exploratory Data Analysis)](#1)\n   * [K-Nearest Neighbors (KNN)](#2)\n  * [UNSUPERVISED LEARNING](#3)\n   * [Kmeans Clustering](#4)\n   * [Hierachy](#5)\n* Machine Learning Logistic Regression (Breast Cancer)\n  *   https:\/\/www.kaggle.com\/yaseraktas\/machine-learning-with-breast-cancer\n* [Conclusion](#6)","27766142":"<a href=\"https:\/\/ibb.co\/1ZQ9Y30\"><img src=\"https:\/\/i.ibb.co\/K6h9cY5\/images.jpg\" alt=\"images\" border=\"0\"><\/a>","4881f8cb":"<a id=\"6\"><\/a> <br>\n## CONCLUSION\n\nThank you for your votes and comments\n\nIf you have any suggest, May you write for me, I will be happy to hear it.","1a3a0a61":"<a id=\"4\"><\/a> <br>\n## KMEANS","a9410930":"<a id=\"3\"><\/a> <br>\n## UNSUPERVISED LEARNING","90741d3d":"<a id=\"1\"><\/a> <br>\n## SUPERVISED LEARNING\n\n### EXPLORATORY DATA ANALYSIS (EDA)"}}