{"cell_type":{"9cf859b9":"code","e82e5f90":"code","725d5f3b":"code","83ed3e47":"code","cb96716d":"code","c92d45b5":"code","960d627f":"code","032d86d4":"code","0c47c155":"code","4f5fa059":"code","6fd8dd0d":"code","a71ae055":"code","6acbf82e":"code","00ae578d":"code","aa73f5ed":"code","00a93643":"code","2da9737c":"code","56d70ce2":"code","8a655587":"code","7ba68821":"code","3e6e6745":"code","40a8225f":"markdown","c9722e6a":"markdown","a860a077":"markdown","ab6a5a4c":"markdown","ebce0639":"markdown","cf7cf5e6":"markdown","442dfdb8":"markdown","4d4dd856":"markdown","104f1b7d":"markdown","33284cbb":"markdown","fa7f4879":"markdown","f577096f":"markdown","a5dafc12":"markdown","b1fb1131":"markdown","beaaef55":"markdown","db4a73a2":"markdown","44df68af":"markdown","107607f7":"markdown","7dad853a":"markdown","44be2338":"markdown","73e2205b":"markdown","b36b6b98":"markdown","8d18cd2b":"markdown","99448f7e":"markdown"},"source":{"9cf859b9":"# Install additional dependencies\n!pip -q install missingno","e82e5f90":"# Load our dependencies\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport os\nimport missingno as msno","725d5f3b":"# Check out the files\nos.listdir('\/kaggle\/input\/song-popularity-prediction')","83ed3e47":"# Declaring separate path variables for each of the csv files so that it is easier to modify the input\/output operations later\npath = r\"\/kaggle\/input\/song-popularity-prediction\/\"\ntrain_path = path + 'train.csv'\ntest_path = path + 'test.csv'\nsample_path = path + 'sample_submission.csv'","cb96716d":"# Reading the training data\ndf = pd.read_csv(train_path, index_col = \"id\")\ndf","c92d45b5":"# General information about the dataset\ndf.info()","960d627f":"# Dataframe Summary Statistics\ndf.describe()","032d86d4":"# Total number of missing values in each column\ndf.isnull().sum()","0c47c155":"# Percentage of missing values in each column\ndf.isnull().mean()*100","4f5fa059":"msno.bar(df, figsize=(12,6), fontsize=12, color=\"tomato\")","6fd8dd0d":"msno.matrix(df,figsize=(18,12), fontsize=12)","a71ae055":"msno.heatmap(df,figsize=(18,12), fontsize=12)","6acbf82e":"msno.dendrogram(df, figsize=(18,12), fontsize=12)","00ae578d":"df.columns.to_list()","aa73f5ed":"fig, axes = plt.subplots(nrows=6, ncols=2, figsize=(18,30))\nsns.set_theme(style=\"darkgrid\")\nfig.suptitle('Distribution for Continuous Features', size = 20)\n\nsns.kdeplot(data = df, x = \"song_duration_ms\", color='red', fill = True, ax = axes[0,0])\nsns.kdeplot(data = df, x = \"acousticness\", color='blue', fill = True, ax = axes[0,1])\nsns.kdeplot(data = df, x = \"danceability\", color='green', fill = True, ax = axes[1,0])\nsns.kdeplot(data = df, x = \"energy\", color='orange', fill = True, ax = axes[1,1])\nsns.kdeplot(data = df, x = \"instrumentalness\", color='chocolate', fill = True, ax = axes[2,0])\nsns.kdeplot(data = df, x = \"key\", color='cyan', fill = True, ax = axes[2,1])\nsns.kdeplot(data = df, x = \"liveness\", color='maroon', fill = True, ax = axes[3,0])\nsns.kdeplot(data = df, x = \"loudness\", color='purple', fill = True, ax = axes[3,1])\nsns.kdeplot(data = df, x = \"speechiness\", color='crimson', fill = True, ax = axes[4,0])\nsns.kdeplot(data = df, x = \"tempo\", color='yellowgreen', fill = True, ax = axes[4,1])\nsns.kdeplot(data = df, x = \"audio_valence\", color='gold', fill = True, ax = axes[5,0])\nplt.show()","00a93643":"fig, axes = plt.subplots(2, 1, figsize=(16,12))\nsns.set_theme(style=\"darkgrid\")\nfig.suptitle('Distribution of Categorical features', size = 20)\n\nsns.countplot(data = df, x = \"time_signature\", color='darkred', fill = True, ax = axes[0])\nsns.countplot(data = df, x = \"audio_mode\", color='darkblue', fill = True, ax = axes[1])\nplt.show()","2da9737c":"fig, axes = plt.subplots(1,1, figsize=(12,6))\nsns.set_theme(style=\"darkgrid\")\nsns.countplot(data = df, x = \"song_popularity\", palette = 'pastel', fill = True, ax = axes)\nplt.show()","56d70ce2":"fig, axes = plt.subplots(nrows=6, ncols=2, figsize=(18,30))\nsns.set_theme(style=\"darkgrid\")\nfig.suptitle('Distribution for Continuous Features w.r.t Output', size = 20)\n\nsns.kdeplot(data = df, x = \"song_duration_ms\", hue ='song_popularity', fill = True, ax = axes[0,0])\nsns.kdeplot(data = df, x = \"acousticness\",hue ='song_popularity', fill = True, ax = axes[0,1])\nsns.kdeplot(data = df, x = \"danceability\", hue ='song_popularity', fill = True, ax = axes[1,0])\nsns.kdeplot(data = df, x = \"energy\", hue ='song_popularity', fill = True, ax = axes[1,1])\nsns.kdeplot(data = df, x = \"instrumentalness\", hue ='song_popularity', fill = True, ax = axes[2,0])\nsns.kdeplot(data = df, x = \"key\", hue ='song_popularity', fill = True, ax = axes[2,1])\nsns.kdeplot(data = df, x = \"liveness\", hue ='song_popularity', fill = True, ax = axes[3,0])\nsns.kdeplot(data = df, x = \"loudness\", hue ='song_popularity', fill = True, ax = axes[3,1])\nsns.kdeplot(data = df, x = \"speechiness\", hue ='song_popularity', fill = True, ax = axes[4,0])\nsns.kdeplot(data = df, x = \"tempo\", hue ='song_popularity', fill = True, ax = axes[4,1])\nsns.kdeplot(data = df, x = \"audio_valence\", hue ='song_popularity', fill = True, ax = axes[5,0])\nplt.show()","8a655587":"fig, axes = plt.subplots(2, 1, figsize=(16,12))\nsns.set_theme(style=\"darkgrid\")\nfig.suptitle('Distribution of Categorical features w.r.t Output', size = 20)\n\nsns.countplot(data = df, x = \"time_signature\", hue=\"song_popularity\", fill = True, ax = axes[0])\nsns.countplot(data = df, x = \"audio_mode\", hue=\"song_popularity\", fill = True, ax = axes[1])\nplt.show()","7ba68821":"fig, axes = plt.subplots(nrows=6, ncols=2, figsize=(18,30))\nsns.set_theme(style=\"darkgrid\")\nfig.suptitle('Box Plots for Continuous Features', size = 20)\n\nsns.boxplot(data = df, x = \"song_duration_ms\", color='red', ax = axes[0,0])\nsns.boxplot(data = df, x = \"acousticness\", color='blue',  ax = axes[0,1])\nsns.boxplot(data = df, x = \"danceability\", color='green',  ax = axes[1,0])\nsns.boxplot(data = df, x = \"energy\", color='orange',  ax = axes[1,1])\nsns.boxplot(data = df, x = \"instrumentalness\", color='chocolate', ax = axes[2,0])\nsns.boxplot(data = df, x = \"key\", color='cyan', ax = axes[2,1])\nsns.boxplot(data = df, x = \"liveness\", color='maroon',  ax = axes[3,0])\nsns.boxplot(data = df, x = \"loudness\", color='purple',  ax = axes[3,1])\nsns.boxplot(data = df, x = \"speechiness\", color='crimson',  ax = axes[4,0])\nsns.boxplot(data = df, x = \"tempo\", color='yellowgreen',  ax = axes[4,1])\nsns.boxplot(data = df, x = \"audio_valence\", color='gold',  ax = axes[5,0])\nplt.show()","3e6e6745":"fig, axes = plt.subplots(1, 1, figsize=(14,7))\nsns.set_theme(style=\"darkgrid\")\nsns.heatmap(df.corr(), cmap='RdBu', center=0, annot=True, ax = axes)\nplt.show()","40a8225f":"<a id = \"part2e\"><\/a>\n#### __Effect of Input Variable on Target Variable__","c9722e6a":"<a id = \"part2g\"><\/a>\n#### __Correlation between input features__","a860a077":"<a id=\"part2b\"><\/a>\n\n#### __Missing Data Analysis__:\n\n- In practical scenarios, we often observe that there is some data missing during the EDA\n- This might occur due to various reasons such as:\n    1. Human Error\n    2. Failure of Sensor\n    3. Improper Data Management\n- Thus it becomes paramount for us to identify these missing values and deal with them appropriately before training the model\n- Missing data can be observed as \"NA\", \"None\", \" \" , \"-\", \"0\", \"-999\",etc depending upon the way of collection of daaset.\n- It is always a good idea to convert it to np.NaN","ab6a5a4c":"__Obseravation__:\n- There are twice as many songs with audio mode = 0 as compared to songs with audio mode = 1\n- Most songs have either a time signature of 3 or 4 and very few songs have time signature 2 or 5","ebce0639":"__Heatmap for Missing Data__:\n- It gives us a visual undestanding of the correlation between the missing data in different columns\n- If the values are closer to +1, it represnts a strong positive correlation, i.e. there presence of null values in one column might also lead to the presence of null values in the other column and vice-versa\n- If the values are closer to -1, it represnts a strong negative correlation, i.e. there presence of null values in one column might lead to the presence of non-null values in the other column and vice-versa\n- If the values are closer to 0, it represnts negligible correleation, i.e. there is no relationship between the presence of null values in two given columns\n","cf7cf5e6":"__Bar Plot for Missing Data__:\n- The left scale (y-axis) is the proportion of data available for each column\n- The right scale (y-axis) is the number of observations for each column\n- The top scale is the count of non-null values in the dataset for each column","442dfdb8":"<a id=\"part2a\"><\/a>\n#### __Data Reading and Basic Exploration__","4d4dd856":"We can observe that:\n- There is no-correlation between any of the 8 columns w.r.t missing values\n","104f1b7d":"<a id = \"part2d\"><\/a>\n#### __Distribution of Target Variable__","33284cbb":"__Observation__:\n\nBased on above KDE plots for popular and upopular songs we can see that in all the numerical features we can see significant overlap.There is no clear separation for any of the numerical feature for popular\/unpopular song.based on this we cannot arrive at which feature is important for us to proceed.\n\n- In the KDE plots, we can observe that there is significant overlap for popuplar and unpopular songs in each of the continuous variables in input. \n- Hence we cannot use any single feature for separation of songs into popular and non-popular\n- We can infer the same about the categorical variables from the count plots","fa7f4879":"![song_popularity.jpg](attachment:68e6e8e4-2181-44ee-b902-f602f780ba9e.jpg)\n\n- [Introduction](#part1)\n- [Exploratory Data Analysis](#part2)\n    - [Data Reading and Basic Exploration](#part2a)\n    - [Missing Data Analysis](#part2b)\n    - [Distribution of Input Variables](#part2c)\n    - [Distribution of Target Variable](#part2d)\n    - [Effect of Input Variable on Target Variable](#part2e)\n    - [Inspecting Outliers](#part2g)\n    - [Correlation between input variables](#part2g)","f577096f":"__Observation__:\n- The data is imbalanced\n- We have fewer observations of songs which are popular as compared to the observations which are not popular","a5dafc12":"__Dendogram for Missing Data__:\n- It clusters the columns together based upon non-nullness","b1fb1131":"__Observation__:\n- The song duration is left skewed around 200000 ms or 200 seconds (~3.3 min)\n- There are a lot of songs which are predominantly acoustic and all other songs have some acoustic\n- Danceability values varies between 0 and 1.","beaaef55":"## Introduction","db4a73a2":"<a id=\"part2\"><\/a>\n## Exploratory Data Analysis","44df68af":"__Obseravation__:\n\n- There is no significant correlation between sond popularity and the input features which was also observed from the distributions plots [above](#part2e)\n- There is a positive correlation between energy and loudness. This is quite evident from a logical perspective since most of the songs which feel energetic (like Rock songs) are louder in comparision to other songs which feel less enegetic (like Breakup songs).\n- There is a negative correlation between energy and acousticness\n- There is a negative correlation between loudness and acousticness","107607f7":"We can observe that:\n- For all the 8 columns, the missing data is uniformly distributed","7dad853a":"<a id = \"part2c\"><\/a>\n#### __Distribution of Input Variables__","44be2338":"__Matrix Plot for Missing Data__:\n- When data is present for a particular index, it is shaded otherwise kept white\n- It provides a better understanding of distribution of missing data across all the columns\n","73e2205b":"__Observations__:\n- For input variables like speechiness, loudness, liveness,etc there seems to a lot of outliers","b36b6b98":"<a id = \"part2f\"><\/a>\n#### __Inspecting Outliers__","8d18cd2b":"In this competiton our goals is to determine whether a given song is popular or not when we are provided with certain features of the song \n\nWe are provided with the following files:\n\n```\n|- train.csv - comprises an id column, the song features, and a target column: song_popularity.\n|- test.csv - consists of everything in train.csv except song_popularity.\n|- sample_submission.csv - a sample submission file in the correct format\n```\n\n__An overview of the input features__:\n\n1. _Song Duration_: length of the track in  milliseconds.\n\n2. _Acousticness_: A confidence measure from 0.0 to 1.0 of whether the track is acoustic. Typically, [acoustic music](https:\/\/en.wikipedia.org\/wiki\/Acoustic_music) is defined as music generated without any electronic amplification.\n\n3. _Danceability_: Describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\n\n4. _Energy_: It indicates a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale.\n\n5. _Instrumentalness_: It indicates the absence of vocals in a track. Hence, songs made completely playing an instrument would have a value of 1 while rap songs without any background music would have a value close to 0. \u201cOoh\u201d and \u201caah\u201d sounds are treated as instrumental in this context. \n\n6. _Key_: It indicates the overall key of the track as an interger which can be mapped using using standard [Pitch Class notation](https:\/\/en.wikipedia.org\/wiki\/Pitch_class) \n\n7. _Liveness_: It indidicates the probability of the track being performed live in front of an audience.\n\n8. _Loudness_: It gives us the relative loudness of the track in decibels(dB) where the values varry between -60 and 0 dB.\n\n9. _Mode_: Indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\n\n10. _Speechiness_: It is a measure of the presence of words (spoken\/sung by humans)in a tracks. A piece of recording of a podcast or audio book would have almost 1.0 value while a song made with only playing instruments would have a value 0. \n\n11. _Tempo_: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\n\n12. _Time Signature_: An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure).\n\n13. _Valence_:  A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)\n\n__Song Popularity__: If the values is 1, it indicates that the song is popular wheras if the value is 0 it indicates that the song is unpopular\n","99448f7e":"We can observe that:\n- 8 columns i.e. Song Duration (in ms), Acousticness, Danceability, Energy, Instrumentalness, Key, Liveness and Loudness have missing values\n- For each of them, around 10% of the data is missing"}}