{"cell_type":{"c4d44e73":"code","c6c78e27":"code","2943071b":"code","5bfb503e":"code","b86be6a2":"code","9adc75c1":"code","2b4e34ee":"code","b1269159":"code","37016e4a":"code","8e39aa92":"code","bdc9c4f5":"code","b08c8116":"code","9e35ff04":"code","b18405a3":"code","61ca1a3d":"code","bd4c7703":"markdown","b274ecea":"markdown","52da2185":"markdown","d1b9d82c":"markdown","35939748":"markdown","40cd8133":"markdown","43429d83":"markdown","5a519b42":"markdown","c4ebfe61":"markdown","d4dabb52":"markdown","ab3c58a3":"markdown","fda84a69":"markdown"},"source":{"c4d44e73":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBRegressor\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score","c6c78e27":"df=pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/tabular-playground-series-jan-2022\/test.csv\")\ndf.head()","2943071b":"df.isna().sum()","5bfb503e":"df.isna().sum()","b86be6a2":"df['date'] = pd.to_datetime(df['date'])\ndf[\"year\"]=df[\"date\"].dt.year\ndf[\"quarter\"]=df[\"date\"].dt.quarter\ndf[\"month\"]=df[\"date\"].dt.month\ndf['week'] = df['date'].dt.isocalendar().week.astype(int)\ndf['dayofyear'] = df['date'].dt.dayofyear\ndf['daysinmonth'] = df['date'].dt.days_in_month\ndf[\"dayofweek\"]=df[\"date\"].dt.dayofweek\ndf[\"day\"]=df[\"date\"].dt.day\ndf['weekend'] = ((df['date'].dt.dayofweek) \/\/ 5 == 1).astype(int)\ndf=df.drop(\"date\",axis=1)","9adc75c1":"df_test['date'] = pd.to_datetime(df_test['date'])\ndf_test[\"year\"]=df_test[\"date\"].dt.year\ndf_test[\"quarter\"]=df_test[\"date\"].dt.quarter\ndf_test[\"month\"]=df_test[\"date\"].dt.month\ndf_test['week'] = df_test['date'].dt.isocalendar().week.astype(int)\ndf_test['dayofyear'] = df_test['date'].dt.dayofyear\ndf_test['daysinmonth'] = df_test['date'].dt.days_in_month\ndf_test[\"dayofweek\"]=df_test[\"date\"].dt.dayofweek\ndf_test[\"day\"]=df_test[\"date\"].dt.day\ndf_test['weekend'] = ((df_test['date'].dt.dayofweek) \/\/ 5 == 1).astype(int)\ndf_test=df_test.drop(\"date\",axis=1)","2b4e34ee":"df.head()","b1269159":"num_columns=df.select_dtypes(include=\"int\").columns.values.tolist()\nnum_columns.remove(\"num_sold\")\ncat_cols = list(set(df.columns) - set(num_columns))\ncat_cols.remove(\"num_sold\")\nprint(num_columns,cat_cols)","37016e4a":"plt.figure(figsize=(10,8))\nsns.heatmap(df.corr(), cmap=\"RdBu\")\nplt.title(\"Correlations Between Variables\", size=15)\nplt.show()","8e39aa92":"X=df.drop(\"num_sold\",axis=1)\ny=df[\"num_sold\"]","bdc9c4f5":"X[\"for_train\"]=True\ndf_test[\"for_train\"]=False\n\n#\u30c7\u30fc\u30bf\u3092\u7d50\u5408\ndf_all_data=pd.concat([X,df_test])\n\nencoded_all_data=pd.get_dummies(df_all_data,columns=cat_cols)\n\nX=encoded_all_data.loc[encoded_all_data[\"for_train\"]]\nX_pred=encoded_all_data.loc[~encoded_all_data[\"for_train\"]]","b08c8116":"scaler = StandardScaler()\nX[num_columns]=scaler.fit_transform(X[num_columns])\nscaler = StandardScaler()\nX_pred[num_columns]=scaler.fit_transform(X_pred[num_columns])","9e35ff04":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","b18405a3":"model=XGBRegressor()\nmodel.fit(X_train,y_train)\nprediction=model.predict(X_test)\nr_squared = r2_score(y_test,prediction)\nprint(f\"r2_score:{r_squared}\")","61ca1a3d":"model=XGBRegressor()\nmodel.fit(X,y)\nsubmit_prediction=model.predict(X_pred)\n\n# ID\u3092\u53d6\u308a\u51fa\u3059\nsub=pd.DataFrame()\nsub[\"row_id\"]=df_test[\"row_id\"]\nsub[\"num_sold\"]=submit_prediction\nsub.to_csv(\"submission.csv\",index=False)","bd4c7703":"### XGBoost TPS Jan 2022(English+\u65e5\u672c\u8a9e)\n---\n### Overview\nXGBoost is used to train it.\nFor 'date', we use *Series.dt()* to convert it.\n\nXGBoost\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u3055\u305b\u307e\u3059\u3002\n'date'\u306b\u95a2\u3057\u3066\u306f*Series.dt()*\u3092\u4f7f\u3063\u3066\u5909\u63db\u3057\u307e\u3059\u3002\n\n> https:\/\/qiita.com\/Takemura-T\/items\/79b16313e45576bb6492 (Japanese)\n\n### data\n* 'row_id'\n* 'date' \u2192 Using Series.dt() (Series.dt()\u3092\u4f7f\u3046)\n* 'country'\n* 'store'\n* 'product'\n* 'num_sold'","b274ecea":"### Verify XGBoost(XGBoost\u3092\u691c\u8a3c)","52da2185":"### Importing modules(\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8)","d1b9d82c":"### Encoding of category variables(\u30ab\u30c6\u30b4\u30ea\u30fc\u5909\u6570\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0)","35939748":"### Create a submission file!(\u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210!)","40cd8133":"### data normalization(\u30c7\u30fc\u30bf\u306e\u6b63\u898f\u5316)","43429d83":"### Load the data(\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f)","5a519b42":"### Check for missing values(\u6b20\u640d\u5024\u3092\u78ba\u8a8d)","c4ebfe61":"### Check for correlation(\u76f8\u95a2\u3092\u78ba\u8a8d)","d4dabb52":"### Convert date(\u65e5\u4ed8\u3092\u5909\u63db)","ab3c58a3":"### Split into train and test data(train,test\u30c7\u30fc\u30bf\u306b\u5206\u5272)","fda84a69":"### Split into X and y(X,y\u306b\u5206\u5272)"}}