{"cell_type":{"8a2bc1cc":"code","ee21a9e9":"code","8b440b8a":"code","c3cd74bd":"code","87818353":"code","3646cc08":"code","c0f132c7":"code","002611b4":"code","53190330":"code","b8b2b35b":"code","46d4176a":"code","a314b1f3":"code","314bb433":"code","61c8da9a":"code","a0563d97":"code","4601ffbc":"code","a75abe3d":"code","620fc6ef":"code","0131c45a":"code","8971cfb8":"code","0b520fcc":"code","bdce8764":"code","e060010f":"code","23479e87":"code","ce5c58cb":"code","91dd9df1":"code","70aa5845":"code","91d99a47":"code","ea29d7fb":"code","b32fe757":"code","31c37959":"code","765d83be":"code","1fb37293":"code","e272bfcb":"code","13263b29":"code","826df211":"code","1082f560":"code","6a1f2b22":"code","f970c24d":"code","453ec4ee":"code","0362f8a7":"code","126a61cf":"code","d2e3f95e":"code","58c2172d":"code","5a32c0e3":"code","19304b33":"code","c61c1d88":"code","634ba36c":"code","3f8490bd":"code","bb23397c":"code","9a6277b7":"code","8682120f":"code","c0882e3f":"code","ad2157b9":"code","acd55e01":"code","450d91a0":"code","2e68b33c":"code","9b8de0e1":"code","f30835e7":"code","b62db691":"code","f6fb53bd":"code","9b4a6530":"code","731d97b2":"code","41931e64":"code","e0c5538a":"code","0bfb105e":"code","9eed51a3":"code","ce1606ce":"code","91761930":"code","a8c04063":"code","f4f04b0c":"code","f6c8436d":"code","9601b5d2":"code","52f5b4cd":"code","1cc8188b":"code","aba92dc9":"code","3a23383e":"code","4f831d97":"code","3509f399":"code","3ab2ebf6":"code","b3565fb6":"code","3349fa3c":"code","19ebd70b":"code","c15be125":"code","a8ae12ea":"code","f640c967":"code","4a0ddad3":"code","9115f1ce":"code","c0ecf710":"code","6860cb29":"code","a9728c1d":"code","4df6a46c":"code","e51632c5":"code","35bb9e1a":"code","62cd9c68":"code","58e237b8":"code","d8a9c8b3":"code","44491f72":"code","f56d13e0":"code","a327b2a3":"markdown","db2285df":"markdown","a8cce297":"markdown","eeafe7fd":"markdown","cd6447c0":"markdown","a65ce53f":"markdown","2336db10":"markdown","621d4749":"markdown","61ce25a0":"markdown","cf9eebe3":"markdown","a0dddf17":"markdown","604c4ae6":"markdown","1ef02c87":"markdown","5bb576bc":"markdown"},"source":{"8a2bc1cc":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","ee21a9e9":"df = pd.read_csv('..\/input\/titanic\/train.csv')","8b440b8a":"df.head()","c3cd74bd":"df.info()","87818353":"len(df.columns)","3646cc08":"df = df.drop('PassengerId', axis=1)","c0f132c7":"len(df.columns)","002611b4":"df.isnull().sum()","53190330":"100 * df.isnull().sum() \/ len(df)","b8b2b35b":"df['Cabin'].value_counts()","46d4176a":"df = df.drop('Cabin', axis = 1)","a314b1f3":"len(df.columns)","314bb433":"df[df['Embarked'].isnull()]","61c8da9a":"len(df)","a0563d97":"df = df.dropna(axis = 0, subset=['Embarked'])","4601ffbc":"len(df)","a75abe3d":"df[df['Age'].isnull()]","620fc6ef":"df[df['Age'].isnull()]['Sex'].value_counts()","0131c45a":"df.groupby('Sex').mean()['Age']","8971cfb8":"df['Age'].mean()","0b520fcc":"df.iloc[878:888]['Age']","bdce8764":"df.groupby('Sex')['Age'].transform(lambda val: val.fillna(val.mean()))","e060010f":"df.groupby('Sex')['Age'].transform(lambda val: val.fillna(val.mean())).iloc[878:888]","23479e87":"df['Age'] = df.groupby('Sex')['Age'].transform(lambda val: val.fillna(val.mean()))","ce5c58cb":"df['Age'].isnull().sum()","91dd9df1":"df.isnull().sum()","70aa5845":"len(df.columns)","91d99a47":"df = df.drop(['Name', 'Ticket'], axis=1)","ea29d7fb":"len(df.columns)","b32fe757":"df.head()","31c37959":"pd.get_dummies(df['Sex'], drop_first=True)","765d83be":"pd.get_dummies(df['Embarked'], drop_first=True)","1fb37293":"pd.get_dummies(df['Pclass'], drop_first=True)","e272bfcb":"df['Pclass'] = df['Pclass'].apply(str)","13263b29":"df_nums = df.select_dtypes(exclude='object')\ndf_objs = df.select_dtypes(include='object')","826df211":"df_objs.info()","1082f560":"df_objs = pd.get_dummies(df_objs,drop_first=True)","6a1f2b22":"final_df = pd.concat([df_nums,df_objs],axis=1)","f970c24d":"final_df.head()","453ec4ee":"final_df.info()","0362f8a7":"final_df.to_csv('train_final.csv')","126a61cf":"df = final_df","d2e3f95e":"sns.heatmap(df.corr())","58c2172d":"df.corr()['Survived'].sort_values()","5a32c0e3":"sns.scatterplot(x='Fare', y='Survived', data=df)","19304b33":"df['Survived'].value_counts()","c61c1d88":"sns.countplot(df['Survived'])","634ba36c":"sns.boxplot(x='Survived', y='Age', data=df)","3f8490bd":"sns.boxplot(x='Survived', y='Fare', data=df)","bb23397c":"sns.boxplot(x='Survived', y='SibSp', data=df)","9a6277b7":"sns.scatterplot(x='Age', y='Fare', data=df, hue='Survived')","8682120f":"sns.pairplot(df[['Age', 'Fare', 'Survived']],hue='Survived')","c0882e3f":"sns.heatmap(df.corr(),annot=True)","ad2157b9":"sns.scatterplot(x='Age',y='Survived',data=df)","acd55e01":"sns.scatterplot(x='Fare',y='Survived',data=df)","450d91a0":"from mpl_toolkits.mplot3d import Axes3D \nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nax.scatter(df['Age'],df['Fare'],df['Survived'],c=df['Survived'])","2e68b33c":"X = df.drop('Survived', axis = 1)\ny = df['Survived']","9b8de0e1":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","f30835e7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=101)","b62db691":"scaler = StandardScaler()","f6fb53bd":"scaled_X_train = scaler.fit_transform(X_train)\nscaled_X_test = scaler.transform(X_test)","9b4a6530":"from sklearn.linear_model import LogisticRegressionCV","731d97b2":"log_model = LogisticRegressionCV()","41931e64":"log_model.fit(scaled_X_train, y_train)","e0c5538a":"log_model.coef_","0bfb105e":"from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, plot_confusion_matrix","9eed51a3":"y_pred = log_model.predict(scaled_X_test)","ce1606ce":"accuracy_score(y_test, y_pred)","91761930":"confusion_matrix(y_test, y_pred)","a8c04063":"plot_confusion_matrix(log_model,scaled_X_test,y_test)","f4f04b0c":"print(classification_report(y_test,y_pred))","f6c8436d":"raw_data = pd.read_csv('..\/input\/titanic\/test.csv')","9601b5d2":"raw_data.head()","52f5b4cd":"data = raw_data.drop('PassengerId', axis=1)","1cc8188b":"data = data.drop('Cabin', axis = 1)","aba92dc9":"data.isnull().sum()","3a23383e":"data['Age'] = data.groupby('Sex')['Age'].transform(lambda val: val.fillna(val.mean()))","4f831d97":"data.isnull().sum()","3509f399":"data['Fare'] = data['Fare'].transform(lambda val: val.fillna(val.mean()))","3ab2ebf6":"data.isnull().sum()","b3565fb6":"data.head()","3349fa3c":"data = data.drop(['Name', 'Ticket'], axis=1)","19ebd70b":"data['Pclass'] = data['Pclass'].apply(str)","c15be125":"data_nums = data.select_dtypes(exclude='object')\ndata_objs = data.select_dtypes(include='object')","a8ae12ea":"data_objs.info()","f640c967":"data_objs = pd.get_dummies(data_objs,drop_first=True)","4a0ddad3":"final_data = pd.concat([data_nums,data_objs],axis=1)","9115f1ce":"final_data.head()","c0ecf710":"scaled_final_data = scaler.transform(final_data)","6860cb29":"data_pred = log_model.predict(scaled_final_data)","a9728c1d":"data_pred","4df6a46c":"len(final_data)","e51632c5":"len(data_pred)","35bb9e1a":"data_pred = pd.DataFrame(data_pred, columns=['Survived'])","62cd9c68":"final = pd.concat([raw_data, data_pred], axis = 1)","58e237b8":"final.head()","d8a9c8b3":"submission = final[['PassengerId', 'Survived']]","44491f72":"submission","f56d13e0":"submission.to_csv('submission.csv', index=False)","a327b2a3":"## Final Prediction","db2285df":"## Check to see if there's an imablance","a8cce297":"## Filling in missing data for age\nUse the mean age for male and female to fill NaN","eeafe7fd":"## Categorical Data\n\n'Pclass', 'Embarked' and 'Sex' are the categorical data columns.","cd6447c0":"## Drop irrelevant columns","a65ce53f":"### Model Performance on Classification Tasks\n","2336db10":"## Logistic Regression Model","621d4749":"## Dealing with Outliers","61ce25a0":"## Train test split and scaling","cf9eebe3":"## Observing NaN Features","a0dddf17":"## Dropping 'Cabin' because it is not a very useful categorial data with lots of missing data","604c4ae6":"## Dropping row data\n'Embarked' - only two rows have this value missing","1ef02c87":"## Removing the PassengerID\nWe already have an index","5bb576bc":"## Import and inspect the data"}}