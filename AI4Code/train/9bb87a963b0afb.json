{"cell_type":{"5fa6fac6":"code","f58ba9d3":"code","9b0f5a47":"code","51677e8c":"code","4d9182dd":"code","1f48bb13":"code","6555f7fb":"code","62846516":"code","7239bab2":"code","59d44e94":"code","d00c8389":"code","ae617610":"code","5b0331d1":"code","561242b7":"code","150a3843":"code","9ea940b9":"code","720df1d4":"code","d636b84f":"code","07feba6e":"code","bf0c700f":"code","54064a15":"code","79e919f4":"code","8540b3dc":"code","da7a1f47":"code","ef4eb597":"code","4bfe8c78":"code","94394eac":"code","5b2b709b":"code","0f096bc5":"code","28cd4154":"code","71c81b45":"code","3b21b9a8":"code","079bb1ef":"code","465c8629":"code","3890dee4":"code","570761f5":"code","1212810e":"code","86ccbd44":"code","f47745c3":"code","793a0a1c":"code","90aec8cb":"code","a5904428":"code","0af26bc4":"code","4e5537a4":"markdown","cc169d44":"markdown","edd8c0eb":"markdown","f1587477":"markdown","6212794f":"markdown","885e10b9":"markdown","bc3dbfd3":"markdown","d145bf6e":"markdown","26982b2f":"markdown","4ea7df0f":"markdown","ee0a9ee4":"markdown","9bfd0737":"markdown","83963dec":"markdown","baa23f5b":"markdown","5413075e":"markdown","6890b1ac":"markdown","3a86d7bf":"markdown","9e8bc790":"markdown","be52d07d":"markdown","08c43138":"markdown","bbf44b07":"markdown","32b5b019":"markdown","6ea1ae66":"markdown","52c2c58a":"markdown","ff2a62f1":"markdown","2df60bf5":"markdown","1d63c32a":"markdown","5529ca1c":"markdown"},"source":{"5fa6fac6":"from IPython.display import YouTubeVideo\nYouTubeVideo('wR9Tsdqgmuk',700,400)","f58ba9d3":"import numpy as np \nimport pandas as pd\nfrom plotly import tools\nimport plotly.plotly as py\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport os\nprint(os.listdir(\"..\/input\"))","9b0f5a47":"df=pd.read_csv('..\/input\/washington-state-home-mortgage-hdma2016\/Washington_State_HDMA-2016.csv')# load the dataset","51677e8c":"df.head()","4d9182dd":"df['action_taken_name'].value_counts()","1f48bb13":"df=df[df['action_taken_name']!=\"Application withdrawn by applicant\"]\ndf=df[df['action_taken_name']!='Loan purchased by the institution']","6555f7fb":"fips=pd.read_excel(\"..\/input\/2016-state-county-fips-codes\/all-geocodes-v2016.xlsx\",converters={'County Code (FIPS)': lambda x: str(x)})\nfips=fips[fips[\"State Code (FIPS)\"]==53]# state code for washington\nfips['county_code']=fips['State Code (FIPS)'].astype(str).str.cat(fips['County Code (FIPS)'].astype(str))\nfips=fips.drop(labels=['Summary Level','State Code (FIPS)','County Code (FIPS)','County Subdivision Code (FIPS)','Place Code (FIPS)','Consolidtated City Code (FIPS)'],axis=1)\nfips.columns=['county_name','county_code']","62846516":"df=pd.merge(df,fips,how=\"left\",on=\"county_name\",sort=False)#merging it into original dataset","7239bab2":"county1=pd.DataFrame(df['county_code'].value_counts())\ncounty1=county1.reset_index()\ncounty1.columns=['county_code','number of loans']#renaming columns","59d44e94":"fips=county1['county_code'].tolist()\nvalues=county1['number of loans'].tolist()\nendpts = list(np.mgrid[min(values):max(values):13j])\n\ncolorscale = [\"#141d43\",\"#15425a\",\"#0a6671\",\"#26897d\",\"#67a989\",\"#acc5a6\",\"#e0e1d2\",\n              \"#f0dbce\",\"#e4ae98\",\"#d47c6f\",\"#bb4f61\",\"#952b5f\",\"#651656\",\"#330d35\"] \n\nfig = ff.create_choropleth(\n    fips=fips, values=values, scope=['Washington'], show_state_data=True,\n    colorscale=colorscale, binning_endpoints=endpts, round_legend_values=True,\n    plot_bgcolor='rgb(229,229,229)',\n    paper_bgcolor='rgb(229,229,229)',\n    legend_title='Number of Loans by county',\n    county_outline={'color': 'rgb(255,255,255)', 'width': 0.2}, exponent_format=False\n)\niplot(fig, filename='loans_washington')","d00c8389":"df['loan_status']=[\"approved\" if x==\"Loan originated\" else \"not approved\" for x in df['action_taken_name']]","ae617610":"df_approved=df[df['loan_status']=='approved']\ndf_notapproved=df[df['loan_status']=='not approved']","5b0331d1":"county2=pd.DataFrame(df_approved['county_code'].value_counts())\ncounty2=county2.reset_index()\ncounty2.columns=['county_code','number of loans approved']\ncounty2=pd.merge(county2,county1,how=\"left\",on=\"county_code\",sort=False)\nl=[]\nfor x in range(county2.shape[0]):\n    l.append(county2['number of loans approved'][x]\/county2['number of loans'][x])\ncounty2['approval rate']=[x*100 for x in l]","561242b7":"fips=county2['county_code'].tolist()\nvalues=county2['approval rate'].tolist()\nendpts = list(np.mgrid[min(values):max(values):13j])\ncolorscale = [\"#141d43\",\"#15425a\",\"#0a6671\",\"#26897d\",\"#67a989\",\"#acc5a6\",\"#e0e1d2\",\n              \"#f0dbce\",\"#e4ae98\",\"#d47c6f\",\"#bb4f61\",\"#952b5f\",\"#651656\",\"#330d35\"]\nfig = ff.create_choropleth(\n    fips=fips, values=values, scope=['Washington'], show_state_data=True,\n    colorscale=colorscale, binning_endpoints=endpts, round_legend_values=True,\n    plot_bgcolor='rgb(229,229,229)',\n    paper_bgcolor='rgb(229,229,229)',\n    legend_title='Number of approved Loans by county',\n    county_outline={'color': 'rgb(255,255,255)', 'width': 0.2},\n    exponent_format=True,\n)\niplot(fig, filename='approved_loans_washington')","150a3843":"df_purpose=pd.crosstab(df['loan_purpose_name'],df['loan_status'])\ndf_purpose=df_purpose.reset_index()\ndf_purpose.columns=['purpose','approved count','not approved count']\nl=[]\nfor x in range(3):\n    l.append(df_purpose['approved count'][x]\/(df_purpose['approved count'][x]+ df_purpose['not approved count'][x]))\ndf_purpose['percent approved']=[x*100 for x in np.array(l)]\ndf_purpose['percent not approved']=[100-x for x in df_purpose['percent approved']]","9ea940b9":"trace1=go.Bar(\nx= df_purpose['purpose'],\ny= df_purpose['approved count'],\nname='approved',\nmarker=dict(\n    color='#009393'))\ntrace2=go.Bar(\nx= df_purpose['purpose'],\ny=df_purpose['not approved count'],\nname='not approved',\nmarker=dict(\n        color='#930000'))\ntrace3=go.Bar(\nx=df_purpose['purpose'],\ny=df_purpose['percent approved'],\nname='percent approved',\nmarker=dict(\n    color='#8eb48b'))\ntrace4=go.Bar(\nx=df_purpose['purpose'],\ny=df_purpose['percent not approved'],\nname=\"percent not approved\",\nmarker=dict(\n        color='#7fc780'))\n\nfig = tools.make_subplots(rows=1, cols=2,subplot_titles=('Approved loans for different purposes','Percent of loans approved for differnet purposes'))\nfig.append_trace(trace1,1,1)\nfig.append_trace(trace2,1,1)\nfig.append_trace(trace3,1,2)\nfig.append_trace(trace4,1,2)\n\nfig['layout'].update(height=600, width=900,barmode='stack')\niplot(fig)","720df1d4":"df_type=pd.crosstab(df['loan_type_name'],df['loan_status'])\ndf_type=df_type.reset_index()\ndf_type.columns=['type','approved count','not approved count']\nl=[]\nfor x in range(4):\n    l.append(df_type['approved count'][x]\/(df_type['approved count'][x]+ df_type['not approved count'][x]))\ndf_type['percent approved']=[x*100 for x in l]\ndf_type['percent not approved']=[100-x for x in df_type['percent approved']]","d636b84f":"trace1 = {\"x\":df_type['percent approved'] ,\n          \"y\": df_type['type'] ,\n          \"marker\": {\"color\": \"rgba(255, 182, 193, .9)\", \"size\": 20},\n          \"mode\": \"markers\",\n          \"name\": \"percent approved\",\n          \"type\": \"scatter\"\n}\n\ntrace2 = {\"x\": df_type['percent not approved'],\n          \"y\": df_type['type'],\n          \"marker\": {\"color\": \"rgba(152, 0, 0, .8)\", \"size\": 20},\n          \"mode\": \"markers\",\n          \"name\": \"percent not approved\",\n          \"type\": \"scatter\",\n}\ndata = [trace1, trace2]\nlayout = go.Layout(title=\"Loan Status for different type of loans\",\n                  height=500,\n                  width=700,\n                  autosize=False,\n                  margin=go.layout.Margin(\n        l=150,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    ))\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)#let's plot","07feba6e":"sns.set(style=\"white\", palette=\"deep\", font_scale=1.2, \n        rc={\"figure.figsize\":(15,9)})\nax = sns.scatterplot(x=\"loan_amount_000s\", y=\"applicant_income_000s\", hue=\"loan_status\",data=df)","bf0c700f":"df_temp=df[df['loan_amount_000s']<20000]\nax = sns.scatterplot(x=\"loan_amount_000s\", y=\"applicant_income_000s\", hue=\"loan_status\",data=df_temp)","54064a15":"df_owner=pd.crosstab(df['owner_occupancy_name'],df['loan_status'])\ndf_owner=df_owner.reset_index()\ndf_owner.columns=['owner_occupancy','approved','not approved']\nl=[]\nfor x in range(3):\n    l.append(df_owner['approved'][x]\/(df_owner['approved'][x]+ df_owner['not approved'][x]))\ndf_owner['percent approved']=[x*100 for x in l]\ndf_owner['percent not approved']=[100-x for x in df_owner['percent approved']]","79e919f4":"df_hoepa=pd.crosstab(df['hoepa_status_name'],df['loan_status'])\ndf_hoepa=df_hoepa.reset_index()\ndf_hoepa.columns=['hoepa_status','approved','not approved']\nl=[]\nfor x in range(2):\n    l.append(df_hoepa['approved'][x]\/(df_hoepa['approved'][x]+ df_hoepa['not approved'][x]))\ndf_hoepa['percent approved']=[x*100 for x in l]\ndf_hoepa['percent not approved']=[100-x for x in df_hoepa['percent approved']]","8540b3dc":"trace1=go.Bar(\nx= df_owner['owner_occupancy'],\ny= df_owner['percent approved'],\nname='percent approved',\nmarker=dict(\n    color='rgb(158,202,225)'))\ntrace2=go.Bar(\nx= df_owner['owner_occupancy'],\ny=df_owner['percent not approved'],\nname='percent not approved',\nmarker=dict(\n        color='rgba(219, 64, 82, 0.7)'))\ntrace3=go.Bar(\nx=df_hoepa['hoepa_status'],\ny=df_hoepa['percent approved'],\nname='percent approved',\nmarker=dict(\n    color='rgba(204,204,204,1)'))\ntrace4=go.Bar(\nx=df_hoepa['hoepa_status'],\ny=df_hoepa['percent not approved'],\nname=\"percent not approved\",\nmarker=dict(\n        color='rgba(222,45,38,0.8)'))\n\nfig = tools.make_subplots(rows=1, cols=2,subplot_titles=('Approval % for owner occupancy','Approval % for HOEPA Status'))\nfig.append_trace(trace1,1,1)\nfig.append_trace(trace2,1,1)\nfig.append_trace(trace3,1,2)\nfig.append_trace(trace4,1,2)\n\nfig['layout'].update(height=600, width=900,barmode='group')\niplot(fig)","da7a1f47":"df['hud_median_family_income_000s']=[x\/1000 for x in df['hud_median_family_income']]\ndf_approved['hud_median_family_income_000s']=[x\/1000 for x in df_approved['hud_median_family_income']]\ndf_notapproved['hud_median_family_income_000s']=[x\/1000 for x in df_notapproved['hud_median_family_income']]\n","ef4eb597":"approved_msamd_diff=df_approved.groupby('msamd_name').mean()\nnot_approved_msamd_diff=df_notapproved.groupby('msamd_name').mean()","4bfe8c78":"trace0 = go.Scatter(\n    x = approved_msamd_diff.index,\n    y = approved_msamd_diff['hud_median_family_income_000s'],\n    mode = 'lines+markers',\n    name = 'Neighbourhood median family income',\n    line = dict(\n        color = \"#009393\")\n)\ntrace1 = go.Scatter(\n    x = approved_msamd_diff.index,\n    y = approved_msamd_diff['applicant_income_000s'],\n    mode = 'lines+markers',\n    name = 'Applicant income',\n    line= dict( color= \"#230405\")\n)\ndata=[trace0,trace1]\nlayout = dict(title = 'Difference in neighborhood median family income and applicant income for approved loans  ',\n              xaxis = dict(title = 'MSA\/MD'),\n              yaxis = dict(title = 'Income'),\n              margin=go.layout.Margin(\n        l=50,\n        r=50,\n        b=200,\n        t=100,\n        pad=4\n    )\n              )\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","94394eac":"trace0 = go.Scatter(\n    x = not_approved_msamd_diff.index,\n    y = not_approved_msamd_diff['hud_median_family_income_000s'],\n    mode = 'lines+markers',\n    name = 'Neighbourhood median family income',\n    line = dict(\n        color = \"#009393\")\n)\ntrace1 = go.Scatter(\n    x = not_approved_msamd_diff.index,\n    y = not_approved_msamd_diff['applicant_income_000s'],\n    mode = 'lines+markers',\n    name = 'Applicant income',\n    line= dict( color= \"#230405\")\n)\ndata=[trace0,trace1]\nlayout = dict(title = 'Difference for the loans not approved',\n              xaxis = dict(title = 'MSA\/MD'),\n              yaxis = dict(title = 'Income'),\n               margin=go.layout.Margin(\n        l=50,\n        r=50,\n        b=200,\n        t=100,\n        pad=4\n    )\n              )\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","5b2b709b":"df_property=pd.crosstab(df['property_type_name'],df['loan_status'])\ndf_property=df_property.reset_index()\n\nl=[]\nfor x in range(df_property.shape[0]):\n    l.append(df_property['approved'][x]\/(df_property['approved'][x]+ df_property['not approved'][x]))\ndf_property['percent approved']=[x*100 for x in l]\ndf_property['percent not approved']=[100-x for x in df_property['percent approved']]\ndf_property['property_type_name']=df_property['property_type_name'].replace(\"One-to-four family dwelling (other than manufactured housing)\",'1-4 Family dwelling')\n","0f096bc5":"trace1 = go.Bar(\n    y=df_property['property_type_name'],\n    x=df_property['percent approved'],\n    name='percent approved',\n    orientation = 'h',\n    marker = dict(\n        color = '#7bc043 '\n        \n    )\n)\ntrace2 = go.Bar(\n    y=df_property['property_type_name'],\n    x=df_property['percent not approved'],\n    name='percent not approved',\n    orientation = 'h',\n    marker = dict(\n        color = '#fdf498 '\n       \n    )\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='stack',\n    title=\"Effect of Property Type\",\n    \n    margin=go.layout.Margin(\n        l=200,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","28cd4154":"trace0 = go.Scatter(\n    x = approved_msamd_diff.index,\n    y = approved_msamd_diff['tract_to_msamd_income'],\n    mode = 'lines+markers',\n    name = 'approved',\n    line = dict(\n        color = \"#a77d5f\")\n)\ntrace1 = go.Scatter(\n    x = not_approved_msamd_diff.index,\n    y = not_approved_msamd_diff['tract_to_msamd_income'],\n    mode = 'lines+markers',\n    name = 'not approved',\n    line= dict( color= \"#930000\")\n)\ndata=[trace0,trace1]\nlayout = dict(title = '',\n              xaxis = dict(title = 'MSA\/MD'),\n              yaxis = dict(title = 'tract_to_msamd_income'),\n              margin=go.layout.Margin(\n        l=50,\n        r=50,\n        b=200,\n        t=100,\n        pad=4\n    )\n              )\n\nfig = dict(data=data, layout=layout)\n\niplot(fig)","71c81b45":"df_lien=pd.crosstab(df['lien_status_name'],df['loan_status'])\ndf_lien=df_lien.reset_index()\ndf_lien.columns=['lien_status','approved','not approved']\nl=[]\nfor x in range(3):\n    l.append(df_lien['approved'][x]\/(df_lien['approved'][x]+ df_lien['not approved'][x]))\ndf_lien['percent approved']=[x*100 for x in l]\ndf_lien['percent not approved']=[100-x for x in df_lien['percent approved']]","3b21b9a8":"trace1 = go.Bar(\n    y=df_lien['lien_status'],\n    x=df_lien['percent approved'],\n    name='percent approved',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(71, 58, 131, 0.8)',\n        line = dict(\n            color = 'rgba(38, 24, 74, 0.8)',\n            width = 3)\n    )\n)\ntrace2 = go.Bar(\n    y=df_lien['lien_status'],\n    x=df_lien['percent not approved'],\n    name='percent not approved',\n    orientation = 'h',\n    marker = dict(\n        color = 'rgba(190, 192, 213, 1)',\n        line = dict(\n            color = 'rgba(164, 163, 204, 0.85)',\n            width = 3)\n    )\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group',\n    title=\"Effect of lien status\",\n    margin=go.layout.Margin(\n        l=200,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","079bb1ef":"df['applicant_income_range'] = np.nan\nl = [df]\nfor col in l:\n    col.loc[col['applicant_income_000s'] <= 100, 'applicant_income_range'] = 'Low'\n    col.loc[(col['applicant_income_000s'] > 100) & (col['applicant_income_000s'] <= 200), 'applicant_income_range'] = 'Medium'\n    col.loc[col['applicant_income_000s'] > 200, 'applicant_income_range'] = 'High'","465c8629":"df_approved=df[df['loan_status']=='approved']\ndf_notapproved=df[df['loan_status']=='not approved']","3890dee4":"trace0 = go.Box(\n    y=df_approved['loan_amount_000s'],\n    x=df_approved['applicant_income_range'],\n    name='approved',\n    marker=dict(\n        color='#3D9970'\n    )\n)\ntrace1 = go.Box(\n    y=df_notapproved['loan_amount_000s'],\n    x=df_notapproved['applicant_income_range'],\n    name='not approved',\n    marker=dict(\n        color='#FF4136'\n    )\n)\ndata = [trace0, trace1]\nlayout = go.Layout(\n    yaxis=dict(\n        title='',\n        zeroline=False\n    ),\n    boxmode='group'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","570761f5":"df_approved1=df_approved[df_approved['loan_amount_000s']<1500]\ndf_notapproved1=df_notapproved[df_notapproved['loan_amount_000s']<1500]","1212810e":"trace0 = go.Box(\n    y=df_approved1['loan_amount_000s'],\n    x=df_approved1['applicant_income_range'],\n    name='approved',\n    marker=dict(\n        color='#3D9970'\n    )\n)\ntrace1 = go.Box(\n    y=df_notapproved1['loan_amount_000s'],\n    x=df_notapproved1['applicant_income_range'],\n    name='not approved',\n    marker=dict(\n        color='#FF4136'\n    )\n)\ndata = [trace0, trace1]\nlayout = go.Layout(\n    yaxis=dict(\n        title='',\n        zeroline=False\n    ),\n    boxmode='group'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","86ccbd44":"df_sex=pd.crosstab(df['applicant_sex_name'],df['loan_status'])\ndf_sex=df_sex.reset_index()\ndf_sex.columns=['sex','approved','not approved']\nl=[]\nfor x in range(df_sex.shape[0]):\n    l.append(df_sex['approved'][x]\/(df_sex['approved'][x]+ df_sex['not approved'][x]))\ndf_sex['percent approved']=[x*100 for x in np.array(l)]\ndf_sex['percent not approved']=[100-x for x in df_sex['percent approved']]\ndf_sex['sex']=df_sex['sex'].replace('Information not provided by applicant in mail, Internet, or telephone application','Info not provided')","f47745c3":"df_ethnicity=pd.crosstab(df['applicant_ethnicity_name'],df['loan_status'])\ndf_ethnicity=df_ethnicity.reset_index()\ndf_ethnicity.columns=['ethnicity','approved','not approved']\nl=[]\nfor x in range(df_ethnicity.shape[0]):\n    l.append(df_ethnicity['approved'][x]\/(df_ethnicity['approved'][x]+ df_ethnicity['not approved'][x]))\ndf_ethnicity['percent approved']=[x*100 for x in np.array(l)]\ndf_ethnicity['percent not approved']=[100-x for x in df_ethnicity['percent approved']]\ndf_ethnicity['ethnicity']=df_ethnicity['ethnicity'].replace('Information not provided by applicant in mail, Internet, or telephone application','Info not provided')","793a0a1c":"df_race=pd.crosstab(df['applicant_race_name_1'],df['loan_status'])\ndf_race=df_race.reset_index()\ndf_race.columns=['race','approved','not approved']\nl=[]\nfor x in range(df_race.shape[0]):\n    l.append(df_race['approved'][x]\/(df_race['approved'][x]+ df_race['not approved'][x]))\ndf_race['percent approved']=[x*100 for x in np.array(l)]\ndf_race['percent not approved']=[100-x for x in df_race['percent approved']]\ndf_race['race']=df_race['race'].replace('Information not provided by applicant in mail, Internet, or telephone application','Info not provided')","90aec8cb":"trace0=go.Bar(\nx=df_ethnicity['ethnicity'],\ny=df_ethnicity['percent approved'],\nname='percent approved',\nmarker=dict(color='#051e3e '))\ntrace1=go.Bar(x=df_ethnicity['ethnicity'],\n              y=df_ethnicity['percent not approved'],\n              name='percent not approved',\n             marker=dict(\n             color='#851e3e '))\ntrace2=go.Bar(x=df_sex['sex'],\n             y=df_sex['percent approved'],\n             name='percent approved',\n             marker=dict(color='#96ceb4  '))\ntrace3=go.Bar(x=df_sex['sex'],\n             y=df_sex['percent not approved'],\n             name='percent not approved',\n             marker=dict(color='#ff6f69  '))\ntrace4=go.Scatter(x=df_race['race'],\n                 y=df_race['percent approved'],\n                 name='percent approved')\ntrace5=go.Scatter(x=df_race['race'],\n                 y=df_race['percent not approved'],\n                 name='percent not approved')\nfig = tools.make_subplots(rows=2, cols=2, specs=[[{}, {}], [{'colspan': 2}, None]],\n                          subplot_titles=('Applicant Race','Applicant sex', 'Applicant ethnicity'))\n\nfig.append_trace(trace0, 1, 1)\nfig.append_trace(trace1, 1, 1)\nfig.append_trace(trace2, 1, 2)\nfig.append_trace(trace3, 1, 2)\nfig.append_trace(trace4, 2, 1)\nfig.append_trace(trace5, 2, 1)\n\nfig['layout'].update( height=900,width=1000,paper_bgcolor = \"rgb(255, 248, 243)\",margin=go.layout.Margin(\n        l=50,\n        r=50,\n        b=200,\n        t=100,\n        pad=4\n    ))\niplot(fig)","a5904428":"df_reason=pd.DataFrame(df_notapproved['denial_reason_name_1'].value_counts())\ndf_reason=df_reason.reset_index()\ndf_reason.columns=['reason','number of loans']","0af26bc4":"trace0 = go.Bar(\n    x=df_reason['reason'],\n    y=df_reason['number of loans'],\n    \n    marker=dict(\n        color='rgb(158,202,225)',\n        line=dict(\n            color='rgb(8,48,107)',\n            width=1.5,\n        )\n    ),\n    opacity=0.6\n)\n\ndata = [trace0]\nlayout = go.Layout(\n    title='Major loan denial reasons',height=500,\n                  width=700,\n                  autosize=False,\n                  margin=go.layout.Margin(\n        l=50,\n        r=50,\n        b=200,\n        t=100,\n        pad=4\n    )\n)\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","4e5537a4":"Multifamily-dwelling is a safe choice when going for house loans.\n\n> Getting a higher residential mortgage on a multifamily dwelling is easier based on the rental income generated, which can cover or reduce the mortgage.\n\nIt's tougher to get a loan for manufactured housing.\n\n> Many manufactured home loan programs have strict guidelines about the property condition and age. That\u2019s because manufactured housing tends to depreciate, while traditional home values tend to increase over time.","cc169d44":"# Which type of loans have a better chance of being approved?\nMany loans are insured or guaranteed by government programs offered by Federal Housing Administration (FHA), the Department of Veterans Affairs (VA), or the Department of Agriculture's Rural Housing Service (RHS) or Farm Service Agency (FSA). All other loans are classified as conventional.","edd8c0eb":"The main aim of this kernel is to answer some very common questions that arise while applying for loans using data.","f1587477":"Most of the home purchase loans are approved while it's less likely for a refinancing loan or a home improvement loan to get approved.","6212794f":"The dataset we have here is for all the mortgages in Washington during the year 2016. I'll analyze this dataset to find patterns in the lending process.It's indeed an interesting dataset, which has so far been left unexplored.","885e10b9":"# Do homes occupied by owners have a higher chance at getting loans?\nowner_occupancy_name represents the owner-occupancy status of the property. Second homes, vacation homes, and rental properties are classified as \"not owner-occupied as a principal dwelling\".","bc3dbfd3":"# Which property type should you apply for?\nThere are basically 3 property types, 1-4 family dwelling, multifamily dwelling and manufactured housing.Manufactured homes are housing that is esentially ready for occupancy upon leaving the factory and being transported to a building site.","d145bf6e":"# Which county has the highest number of loan applications?","26982b2f":"King County has the highest number of loan applications while Garfield County has the lowest.Now, we will add a new feature representing approved for originated loan and not approved for everything else.","4ea7df0f":"This ratio is greater for approved loans than for non-approved loans for all MSAMD. And this difference matters a lot if you are applying in Kennewick or Yakima.\n\n# How does the lien status affect the loan?\nA lien serves to guarantee an underlying obligation of the repayment of a loan. If the underlying obligation is not satisfied, the creditor(lender) may be able to seize the asset that is the subject of the lien.Once executed, a lien becomes the legal right of a creditor to sell the collateral property of a debtor who fails to meet the obligations of a loan or other contract.\n\nMost mortgages are secured by a lien against the property. In the event of a forced liquidation, first lien holders will generally get paid before subordinate lien holders.","ee0a9ee4":"**The Home Mortgage Disclosure Act (HMDA)** in America requires many financial institutions to maintain, report, and publicly disclose loan-level information about mortgages. These public data are important because they help show whether lenders are serving the housing needs of their communities; they give public officials information that helps them make decisions and policies; and they shed light on lending patterns that could be discriminatory.\n\nLet's see a video to get a better view.","9bfd0737":"Each county has a unique FIPS or county code that is useful in plotting the county map. I'll upload an additional dataset to add this feature.","83963dec":"Okay, this is a very compressed view. Loans with very high loan amount are always rejected for the low and medium salary range applicant. While they may get accepted for applicants falling in the high income range. Let's get a zoomed in view by limiting the loan amount to less than 1500000.","baa23f5b":"I use percentage as a measure to avoid any scaling issues.FSA\/RHS loans have a good record of getting approved. And even Conventional Loans not issued by government programmes have good chances.\n\nLet's have a look at the distribution of applicant's income and loan amount.","5413075e":"# What is the effect of tract_to_msamd_income?\ntract_to_msamd_income is the percentage of the median family income for the census tract for which the applicant has applied compared to the median family income for the MSA\/MD, rounded to two decimal places.","6890b1ac":"# Which county has the highest approval rate?","3a86d7bf":"A peak into the data.","9e8bc790":"It's an honor really, that this notebook featured in @headsortails [Hidden Gems series](https:\/\/www.kaggle.com\/general\/232447). I would be happy if you could go through my notebook and leave your honest feedback in the comments. Also, upvote if you liked it!\ud83d\ude04 *Happy Kaggling*","be52d07d":"The HOEPA status tells us whether a loan is subject to the Home Ownership and Equity Protection Act or not. From the above chart it seems like 100% of the HOEPA loans got approved.\n\nHomes occupied by owners as principle dwellings have a slightly better chance of getting aprroved when compared to non -owner occupied homes. But the diffference is very less, we can't make a statement with much confidence.","08c43138":"Mostly applications are denied for high debt-to-income ratio , poor credit history, lack of suitable collateral. The most easily avoidable reason is incomplete credit application. Though a total of 5433 applications are denied because of it.\n\n## Summary :-\nTo increase the chances of getting your loan approved in Washington, you must keep the following points in mind.\n\n* Get a home loan in King County (highest approval rate).\n* Application for a home purchase loan has a better chance at getting approved.\n* Go for a FSA\/RHS guranteed loan. They also have lineant requirements when compared to conventional loans, but this comes at the cost of higher mortgage interest.\n* However, there isn't much difference but owner occupied loans have a better chance.\n* Must go for HOEPA. Loans with HOEPA always get approved .\n* In whichever MSAMD you are buying a home, your income should be greater than or equal to the median family income of that MSAMD.\n* Apply for a multifamily or 1-4 family dwelling.\n* Get your loan secured by a lien preferably by a first lien.\n* Apply for loans proportional to your income. Most loans get rejected for high debt-to-income ratio .\n* I don't think you can change any demographic features.\n\n","bbf44b07":"Loan originated is a widely used term in finance , it means the loan application has been approved. We will remove the rows where the applicant has withdrawn the request for loan. Loan purchased means that the lender bought the loan on a secondary market.\n\n**What is a secondary market ?**\n\n>It happens quite often that after lending the loan , the lender sells the loan and servicing rights to an investor in the secondary market.You might be thinking what is the need of a secondary market.\n\n>When a person takes out a home loan, the loan is underwritten, funded and serviced by a bank. Because the bank has used their own funds to make the loan, they will eventually run out of money to loan, so they will sell the loan to the secondary market to replenish their money available to make more home loans.\n\nSince our analysis only concerns the primary market where borrowers and lenders are involved , I'll remove the rows where the action taken is \"Loan purchased by financial institution\".","32b5b019":"I'm quite amazed by the blue dot in the far-right. A person with a low income gets a loan for a very large amount. However the orange dots in the top-left corner can be justified as applications get rejected for lack of documents or unverifiable credentials.","6ea1ae66":"There isn't much difference between approval rates for females and males, however there seems to be a little discrimination based on ethnicity and race favoring Non-hispanic or Latino Whites and Asians.\n\n# What are the major reasons for loan denial?","52c2c58a":"# Does the neighbourhood family income affect your chances of getting a loan?\nInstead of disclosing the address, lenders disclose the census tract , which is part of the community where the property is located.Each census tract is located in a Metropolitian Statistical Area\/Metropolitian Division (MSA\/MD). The hud_median_family_income is the median family income in dollars for the MSA\/MD in which the tract is located.\n\nNow , you must be expecting that for a loan to be approved the applicant's income must be quite similar or above the neighbourhood median family income . Right?\n\nWell that turns out to be true!","ff2a62f1":"What's very unsettling is that for the loans not approved the applicant's income is still greater than the neighbourhood median family income. Maybe , I did something wrong on this , ***please leave a comment , if you have any idea on what went wrong***.","2df60bf5":"Loans secured by first lien get approved 70% of the time. Loans not secured by any lien has the highest percentage of not getting approved.\n\n# What is the loan amount pattern for people in different income categories?\nTo study this first I'll categorize people as falling in low (for applicant income less than 100k), middle(between 100k and 200k) and high(more than 200k) income range.","1d63c32a":"In all the income ranges the approved loans have requested for loan amount greater than loans not approved. A usual trend, people generally request for loan amount proportionate to their incomes. In most of the cases , applications where the loan amount far exceeds the applicant's income the loans get rejected.\n\n# Is the lending process discriminatory?\nNow, I analyze to know whether one gender or race is prefered over the other or not. Not applicable means the applicant is not a natural person , is an organisation or something.","5529ca1c":"King county has the higgest approval rate of 76.2% , so if you apply for a home loan in this county your chances are pretty better.The Ferry County in Wasington has the lowest approval rate of 52.1%.\n\n# Does your purpose play a role?\nLoan applications are applied for purchasing loans, home improvements or for refinanacing an existing mortage."}}