{"cell_type":{"e25b5c90":"code","d7441a90":"code","07cac0b0":"code","736ebc36":"code","2f7a99ac":"code","61e8d2f7":"code","a39bc228":"markdown"},"source":{"e25b5c90":"import numpy as np\nimport pandas as pd\nimport os\nimport json\nimport glob\nimport sys","d7441a90":"json_filenames = glob.glob(f'\/kaggle\/input\/**\/*.json', recursive=True)","07cac0b0":"def return_corona_df(json_filenames, source):\n    features = {\"doc_id\": [None], \"source\": [None], \"title\": [None], \"authors\": [None],\n                  \"abstract\": [None], \"text_body\": [None], \"bibliography\": [None]}\n    df = pd.DataFrame.from_dict(features)\n    \n    for file_name in json_filenames:\n\n        row = {\"doc_id\": None, \"source\": None, \"title\": None, \"authors\": [None],\n              \"abstract\": None, \"text_body\": None, \"bibliography\": None}\n\n        with open(file_name) as json_data:\n            data = json.load(json_data)\n\n            row['doc_id'] = data['paper_id']\n            row['title'] = data['metadata']['title']\n            \n            authors = \", \".join([author['first'] + \" \" + author['last'] \\\n                                 for author in data['metadata']['authors'] if data['metadata']['authors']])\n            row['authors'] = authors\n\n            abstract_list = [data['abstract'][x]['text'] for x in range(len(data['abstract']) - 1)]\n            abstract = \"\\n \".join(abstract_list)\n\n            row['abstract'] = abstract \n            \n            body_list = [d['text'] for d in data['body_text']]\n            body = \"\\n \".join(body_list)\n            \n            row['text_body'] = body\n            \n            bibliography = \"\\n \".join([bib['title'] + \",\" + bib['venue'] + \",\" + str(bib['year']) \\\n                                      for bib in data['bib_entries'].values()])\n            row['bibliography'] = bibliography\n            \n            if source == 'b':\n                row['source'] = \"BIORXIV\"\n            elif source == \"c\":\n                row['source'] = \"COMMON_USE_SUB\"\n            elif source == \"n\":\n                row['source'] = \"NON_COMMON_USE\"\n            elif source == \"p\":\n                row['source'] = \"PMC_CUSTOM_LICENSE\"\n            \n            df = df.append(row, ignore_index=True)\n    \n    return df","736ebc36":"corona_df = return_corona_df(json_filenames, 'b')","2f7a99ac":"corona_df.shape","61e8d2f7":"corona_out = corona_df.to_csv('kaggle_covid-19_open_csv_format.csv')","a39bc228":"# CoVid-19 papers compilation"}}