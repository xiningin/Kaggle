{"cell_type":{"93657a1e":"code","4635cfd7":"code","26e3dc28":"code","2dc680a9":"code","7cea3bcc":"code","41adbc4f":"code","0fe2989c":"code","bb6c06df":"code","9f777793":"code","0ef00fee":"code","8c634b4f":"code","29b6b210":"code","998d6d8f":"code","9f432127":"code","1f5d1f43":"code","e915ffa3":"code","aef7cb5a":"code","11c46d1b":"code","cde4bb49":"code","26b3197f":"code","2404bc08":"code","f1635eb8":"code","292ca02e":"code","c56cfca4":"code","6b34badb":"markdown","e6458a7f":"markdown","d0ce5f0c":"markdown","91aca45c":"markdown","fab659be":"markdown"},"source":{"93657a1e":"# TFOD instalation and setup","4635cfd7":"# Check NVIDIA System Management Interface\n!nvidia-smi\n\n# If you'd like to see your GPU (maybe to see if it's CUDA compatible)\n!lspci | grep -i nvidia\n\n# If you's like to see the location of CUDA\n!whereis cuda\n\n# If you'd like to see CUDA version\n!nvcc --version\n\n# Check presence of CuDNN \n!whereis cudnn\n\n# Check version of cudnn\n!cat \/usr\/include\/cudnn_version.h","26e3dc28":"# Check is TensorFlow can access GPU\nfrom tensorflow.python.client import device_lib\ndevice_lib.list_local_devices()\n\n\n\n# Alternatively, check device name\nimport tensorflow as tf\ntf.test.gpu_device_name()\n\n# Check for CUDA\ntf.test.is_built_with_cuda()","2dc680a9":"# Download models\n!git clone --depth 1 https:\/\/github.com\/tensorflow\/models\n\n# Compile proto files \n%cd models\/research\n!pip install protobuf\n!protoc object_detection\/protos\/*.proto --python_out=.\n%cd ..\n%cd ..\n\n# Install cocoapi\n!pip install cython \n!git clone https:\/\/github.com\/cocodataset\/cocoapi.git\n%cd cocoapi\/PythonAPI\n!make\n%cd ..\n%cd ..\n!cp -r cocoapi\/PythonAPI\/pycocotools models\/research\/\n\n# Install object detection api\n%cd models\/research\n!cp object_detection\/packages\/tf2\/setup.py .\n!python -m pip install .\n%cd ..\n%cd ..","7cea3bcc":"# View tensorflow installation\n!pip freeze | grep tensorflow\n\n# Uninstall version 2.5\n!pip uninstall tf-models-official --yes\n# Install version 2.4\n!pip install tensorflow==2.4\n!pip install tf-models-official==2.4","41adbc4f":"# View tensorflow installation\n!pip freeze | grep tensorflow","0fe2989c":"# Verify TensorFlow 2 Object Detection API installation (optional)\n%cd models\/research\n!python object_detection\/builders\/model_builder_tf2_test.py\n%cd ..\n%cd ..","bb6c06df":"# Making Directories \n!mkdir workspace\n%cd workspace\n!mkdir annotations\n!mkdir script\n!mkdir csv_files\n!mkdir pre_trained_models\n!mkdir models","9f777793":"# Skip this..........if you already having tf.records generated and uploaded to kaggle\/input\/**tf_records folder\n\n# or else Run this following code\n# make sure you have the necessary kaggle\/input\/folders are uploaded properly\n\n# copy the scripts file uploaded to kaggle\/input\/scripts to kaggle\/...\/workspace\/scripts\/\n%cd script\n!cp \/kaggle\/input\/opacity-files\/generate_tfrecord_csv_to_tfrecord.py .\n!ls  \n%cd ..\n\n# Copy the csv files uploaded to kaggle\/input\/**csv_files to kaggle\/working\/workspace\/csv_files folders\n%cd csv_files\n!cp \/kaggle\/input\/opacity-files\/opacity_train.csv  .\n!cp \/kaggle\/input\/opacity-files\/opacity_test.csv  .\n!ls\n%cd ..\n\n# run this code to generate tfrecords --- if tf records are not present in kaggle input or kaggle\/working\/annotations folders\n%cd script\n! python generate_tfrecord_csv_to_tfrecord.py --csv_input=\/kaggle\/working\/workspace\/csv_files\/opacity_train.csv  --output_path=\/kaggle\/working\/workspace\/annotations\/train.record  --image_dir=\"\"\n! python generate_tfrecord_csv_to_tfrecord.py --csv_input=\/kaggle\/working\/workspace\/csv_files\/opacity_test.csv  --output_path=\/kaggle\/working\/workspace\/annotations\/test.record  --image_dir=\"\"\n\n%cd ..\n%cd annotations\n# copy and move the label_map_file\n!cp \/kaggle\/input\/opacity-files\/label_map.pbtxt   .\n!ls\n%cd ..","0ef00fee":"# Run this only if tf.record file are already uploaded to kaggle\/input\/**tfrecords\/folder\n# copy the available file to appropriate kaggle\/working\/***   folders\n\n# skip this if you are generating tf.records here on the run.....\n%cd annotations\n!cp \/kaggle\/input\/covid-scripts\/covid_label_map.pbtxt . \n!cp \/kaggle\/input\/****\/train.record . \n!cp \/kaggle\/input\/****\/test.record . \n\n!ls\n%cd ..","8c634b4f":"%cd pre_trained_models\n# Choose model of your choice and dpaste the download link kere \n!wget http:\/\/download.tensorflow.org\/models\/object_detection\/tf2\/20200711\/efficientdet_d1_coco17_tpu-32.tar.gz\n!tar -xf efficientdet_d1_coco17_tpu-32.tar.gz\n%cd efficientdet_d1_coco17_tpu-32\n!ls\n%cd ..\n%cd ..","29b6b210":"# copying uploaded config file from kaggle\/input\/**config folder\n%cd models\n!mkdir efficientdet_d1_coco17_tpu-32\n%cd efficientdet_d1_coco17_tpu-32\n!cp \/kaggle\/input\/ednetd1-config\/pipeline.config  . \n!ls\n%cd ..\n%cd ..","998d6d8f":"# Make sure that your are in kaggle\/working\/workspace\n# execute the following commands","9f432127":"!cp  \/kaggle\/working\/models\/research\/object_detection\/model_main_tf2.py  .","1f5d1f43":"# Command line to start Training","e915ffa3":"!python model_main_tf2.py --model_dir=models\/efficientdet_d1_coco17_tpu-32 --pipeline_config_path=models\/efficientdet_d1_coco17_tpu-32\/pipeline.config","aef7cb5a":"!cp \/kaggle\/working\/models\/research\/object_detection\/exporter_main_v2.py  .","11c46d1b":"!mkdir trained_models","cde4bb49":"!python exporter_main_v2.py --input_type image_tensor --pipeline_config_path  models\/efficientdet_d1_coco17_tpu-32\/pipeline.config --trained_checkpoint_dir models\/efficientdet_d1_coco17_tpu-32 --output_directory trained_models","26b3197f":" #! zip \"\/kaggle\/working\/Opacity_model.zip\" \"\/kaggle\/working\/workspace\/trained_models\"","2404bc08":"!pwd\n","f1635eb8":"%cd ..","292ca02e":"!cp -r \/kaggle\/working\/workspace\/trained_models   .","c56cfca4":"import shutil\nshutil.rmtree('\/kaggle\/working\/cocoapi')\nshutil.rmtree('\/kaggle\/working\/models')\nshutil.rmtree('\/kaggle\/working\/workspace')","6b34badb":"**What options do we have?**\n1. We could upgrade to CUDA v11.2. I found this <a href=\"https:\/\/medium.com\/analytics-vidhya\/installing-any-version-of-cuda-on-ubuntu-and-using-tensorflow-and-torch-on-gpu-b1a954500786\">blog<\/a> useful for doing so. But it involves installing 2-3GB CUDA Toolkit from <a href=\"https:\/\/developer.nvidia.com\/cuda-11.2.0-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=runfilelocal\">here<\/a> and other complicated software engineering that's especially difficult on Kaggle.\n2. We can work with an older version of TensorFlow.\n\n**How do we work with an older version?**\n1. Install the latest TF2 OD API (v2.5). You'll also find a directory structure with everything you need.\n2. Uninstall tf-models-official v2.5\n3. Install tensorflow v2.4\n4. Install tf-models-official v2.4 (it is compatible with the hardware\/software configuration)","e6458a7f":"### TensorFlow Object Detection API Installation\n#### 1. Downloading the TensorFlow Model Garden\n>workspace\/\n\n>\u2514\u2500 models\/\n\n>        \u251c\u2500 community\/\n\n>        \u251c\u2500 official\/\n\n>        \u251c\u2500 orbit\/\n\n>        \u251c\u2500 research\/\n\n>        \u2514\u2500\u2500 ...\n#### 2. Protobuf Installation\/Compilation\n#### 3. COCO API installation\n#### 4. Install the Object Detection API","d0ce5f0c":"Clearly, TensorFlow is able access GPU and everything seems normal. What we need to ensure is that the **TensorFlow 2 Object Detection API** is able to access the **GPU**.","91aca45c":"# Don't Run this cell\n\nLook at the instruction belowe before running it","fab659be":"# Exporting the trained model"}}