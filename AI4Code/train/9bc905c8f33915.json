{"cell_type":{"0550105f":"code","ae35181e":"code","6cbacf10":"code","2950d51c":"code","2dbc6b31":"code","ff4f70cd":"code","c8a34680":"code","03382109":"code","1b4b139c":"code","3d46da30":"code","44127ba0":"code","33facc42":"code","7f49e2a2":"code","f4c4e1ae":"code","eb910d12":"code","54e36268":"code","0533d888":"code","883adfd8":"code","080f4b6a":"code","733ebebb":"code","5e46e263":"code","ba1ca17e":"code","a9d81f96":"code","77014f56":"code","d48cd111":"code","75ec9b73":"code","8132298b":"code","e4016dff":"code","feed9c67":"code","79383c2e":"code","a9e7024b":"code","f3a99bc8":"code","2a7e5252":"code","a48d31a3":"code","90bdf91c":"code","a54f84ae":"code","1bb82a07":"code","acdd745e":"code","b7c3db0b":"code","0f2e56ce":"code","3d0510ca":"code","8017ee28":"code","a66e15fc":"code","bc0127ff":"code","4f7a4f9f":"code","ad8cb408":"code","1c192072":"code","661540fc":"code","c5606260":"code","d7a6ddb7":"code","03a8fa89":"code","d7120515":"code","9fc2f4b2":"code","d876776e":"code","f2e4c27e":"code","12203a50":"code","966460b6":"code","25288642":"code","1c304f4d":"code","76bd99b1":"code","a67bcfc1":"code","6a78be27":"code","90ab6b61":"code","fc58d733":"code","ef84f4e3":"code","5e3906a5":"code","0bc77d00":"code","161c5d63":"code","f93f2aa2":"code","d3814d7f":"code","f57e1f11":"code","294cd884":"code","5e82d05f":"code","906ed091":"code","c9aac794":"code","6f8f8902":"code","ebfd4460":"code","2d1ae938":"code","d003581f":"code","0e3a1ba6":"code","eb3a093c":"code","dde811b2":"code","2c503060":"code","765c45df":"code","a1aecdd1":"markdown","543e7551":"markdown","9c9d5986":"markdown","8e8f40ff":"markdown","6260efb9":"markdown","3066fac2":"markdown","b381c3cd":"markdown","4e867f36":"markdown","227d0f1f":"markdown","35e30b83":"markdown","ef5a4556":"markdown","5446573a":"markdown","e730731a":"markdown","bbd297f7":"markdown","7e1abf13":"markdown","330e89fa":"markdown","582fa046":"markdown","f51a984d":"markdown","15010db7":"markdown","feee8a52":"markdown","5159dd12":"markdown","e0f2179e":"markdown","a4089366":"markdown","83419a78":"markdown","3da71758":"markdown","d0fc9d60":"markdown","1f3d9715":"markdown","ed9c2402":"markdown","3160c3a3":"markdown","175f4c93":"markdown","a0d26318":"markdown","a1b4b894":"markdown","9f81eb1a":"markdown","66c1b37d":"markdown","13af6beb":"markdown","3dfaf837":"markdown","1fa1c66a":"markdown","f5b5bbaa":"markdown","d100f937":"markdown","4f7ee7bb":"markdown","165ab35b":"markdown","d7238080":"markdown","2dbfedca":"markdown","ea1bbb0f":"markdown","df9fe609":"markdown","bd559ad3":"markdown","db489c94":"markdown","2343448d":"markdown","6bfbe5a8":"markdown","75ff9e01":"markdown","fe091fe3":"markdown","d2d2cb46":"markdown","ad160d2b":"markdown","c5c62549":"markdown","56a19694":"markdown","51042195":"markdown","3bab0c37":"markdown","c2001a68":"markdown","4869f9ed":"markdown"},"source":{"0550105f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nfrom plotly import tools\nimport plotly.plotly as py\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport tqdm\nimport gc\nimport feather\n\n\nvideo_review = pd.read_csv('..\/input\/video_review.csv')\n\n# Any results you write to the current directory are saved as output.","ae35181e":"game_review = pd.read_csv('..\/input\/game_data.csv')","6cbacf10":"player_role = pd.read_csv('..\/input\/play_player_role_data.csv')","2950d51c":"# Player activity during primary injury causing event\ntemp = video_review[\"Player_Activity_Derived\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, 1]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"Player-Activity during primary injury causing event\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Player activity\",\n                \"x\": 0.5,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')\n","2dbc6b31":"temp = video_review[\"Primary_Impact_Type\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, 1]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"Impacting source that caused the concussion\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 17\n                },\n                \"showarrow\": False,\n                \"text\": \"Primary Impact type\",\n                \"x\": 0.5,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","ff4f70cd":"temp = video_review[\"Primary_Partner_Activity_Derived\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, 1]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"Primary Partner Activity that caused the concussion\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Primary Partner Activity type\",\n                \"x\": 0.5,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","c8a34680":"fig = plt.figure(figsize = (20,10))\nax1 = fig.add_subplot(2,2,1)\nax2 = fig.add_subplot(2,2,2)\nax3 = fig.add_subplot(2,2,3)\nax4 = fig.add_subplot(2,2,4)\ndf = pd.DataFrame(data=video_review)\nsns.heatmap(pd.crosstab(df.Player_Activity_Derived, df.Primary_Partner_Activity_Derived), annot=True, square=True, ax=ax1)\nsns.heatmap(pd.crosstab(df.Player_Activity_Derived, df.Primary_Impact_Type), annot=True, square=True, ax=ax2)\nsns.heatmap(pd.crosstab(df.Player_Activity_Derived, df.Friendly_Fire), annot=True, square=True, ax=ax3)\nsns.heatmap(pd.crosstab(df.Primary_Impact_Type, df.Friendly_Fire), annot=True, square=True, ax=ax4)","03382109":"merged_csv = pd.merge (video_review,player_role)","1b4b139c":"player_punt_data = pd.read_csv('..\/input\/player_punt_data.csv')\nplayer_punt_data = player_punt_data.sort_values('GSISID', ascending=False).drop_duplicates('GSISID').sort_index()","3d46da30":"merged_csv = pd.merge (merged_csv ,player_punt_data[['GSISID','Position']])","44127ba0":"del video_review,player_role,player_punt_data\ngc.collect()","33facc42":"temp = merged_csv[\"Role\"].value_counts()\ntempe = merged_csv[\"Position\"].value_counts()\nfig = {\n    \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, .48]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n      {\n      \"values\": tempe.values,\n      \"labels\": tempe.index,\n      \"domain\": {\"x\": [.52, 1]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    \n    \n    ],\n  \"layout\": {\n        \"title\":\"Player Roles and Punt Positions\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Punt Role\",\n                 \"x\": 0.19,\n                \"y\": 0.5\n            },\n              {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Position\",\n                \"x\": 0.80,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","7f49e2a2":"#temp = video_review[\"Primary_Partner_Activity_Derived\"].value_counts()\ntemp = merged_csv.groupby(['Role','Position']).size()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, 1]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"Player Punt Role and Position Combination\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Position and Punt Role Combined\",\n                \"x\": 0.5,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","f4c4e1ae":"final_csv = pd.merge (merged_csv,game_review)\nplay_information = pd.read_csv('..\/input\/play_information.csv')\nfinal_csv = pd.merge (final_csv ,play_information[['GameKey','Quarter','PlayID','Poss_Team','Score_Home_Visiting']],on=['GameKey','PlayID'],how='left')\nfinal_csv['home_poss'] = np.where(final_csv['HomeTeamCode'] == final_csv['Poss_Team'], 'Yes', 'No')  ","eb910d12":"score_away = []\nscore_home = []\nhome_win_loss = []\n\nfor item in final_csv['Score_Home_Visiting']:\n    scores = item.split('-')\n    temp =  int(scores[1])\n    temp2 = int(scores[0])\n    if(temp<temp2):\n        temp3 = \"Winning\"\n    elif(temp==temp2):\n        temp3 = \"Draw\"\n    else:\n        temp3 = \"Losing\"\n    score_away.append(temp)\n    score_home.append(temp2)\n    home_win_loss.append(temp3)\n\nfinal_csv['home_score'] = score_home  \nfinal_csv['visit_score'] = score_away\nfinal_csv['home_win_loss'] = home_win_loss","54e36268":"poss_win_loss = []\nfor row in final_csv.iterrows():\n    items = row[1]\n    if items['Poss_Team'] == items['HomeTeamCode']:\n        if items['home_score'] < items['visit_score']:\n            poss_win_loss.append('Losing')\n        if items['home_score'] > items['visit_score']:\n            poss_win_loss.append('Winning')\n                \n    elif items['Poss_Team'] == items['VisitTeamCode']:\n        if items['visit_score'] < items['home_score']:\n            poss_win_loss.append('Losing')\n        if items['visit_score'] > items['home_score']:\n            poss_win_loss.append('Winning')\n                \n    if items['home_score'] == items['visit_score']:\n        poss_win_loss.append('Draw')\n    \nfinal_csv['Poss_Team_Status'] = poss_win_loss","0533d888":"temp = final_csv[\"home_win_loss\"].value_counts()\ntempe = final_csv[\"Poss_Team_Status\"].value_counts()\nfig = {\n    \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, .48]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n      {\n      \"values\": tempe.values,\n      \"labels\": tempe.index,\n      \"domain\": {\"x\": [.52, 1]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    \n    \n    ],\n  \"layout\": {\n        \"title\":\"Game Status during the time of Concussion\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Home Team Status\",\n                 \"x\": 0.145,\n                \"y\": 0.5\n            },\n              {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Poss Team Status\",\n                \"x\": 0.858,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","883adfd8":"temp = final_csv[\"Season_Type\"].value_counts()\ntempe = final_csv[\"Quarter\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, .48]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n      {\n      \"values\": tempe.values,\n      \"labels\": tempe.index,\n      \"domain\": {\"x\": [.52, 1]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"Season and Game Quarter for Concussions\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Season\",\n                 \"x\": 0.170,\n                \"y\": 0.5\n            },\n              {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Game Quarter\",\n                \"x\": 0.828,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","080f4b6a":"del merged_csv,game_review,play_information\ngc.collect()","733ebebb":"# Game Wise Analysis of Injuries \n\n# Turf Analysis \n\ntemp = final_csv[\"Turf\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, 1]},\n      \"hole\": .6,\n      \"type\": \"pie\"\n    },\n    \n    ],\n  \"layout\": {\n        \"title\":\"In Which Turf most injuries occured ? \",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 17\n                },\n                \"showarrow\": False,\n                \"text\": \"Turf\",\n                \"x\": 0.5,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","5e46e263":"# Game Wise Analysis of Injuries \n\n# Weather Analysi\ntemp = final_csv[\"OutdoorWeather\"].value_counts()\ntempe = final_csv[\"GameWeather\"].value_counts()\nfig = {\n  \"data\": [\n    {\n      \"values\": temp.values,\n      \"labels\": temp.index,\n      \"domain\": {\"x\": [0, .48]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n      {\n      \"values\": tempe.values,\n      \"labels\": tempe.index,\n      \"domain\": {\"x\": [.52, 1]},\n      \"hole\": .4,\n      \"type\": \"pie\"\n    },\n    \n    \n    ],\n  \"layout\": {\n        \"title\":\"How was the weather during the Match ?\",\n        \"annotations\": [\n            {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Outdoor Weather\",\n                 \"x\": 0.135,\n                \"y\": 0.5\n            },\n              {\n                \"font\": {\n                    \"size\": 12\n                },\n                \"showarrow\": False,\n                \"text\": \"Game Weather\",\n                \"x\": 0.85,\n                \"y\": 0.5\n            }\n            \n        ]\n    }\n}\niplot(fig, filename='donut')","ba1ca17e":"trace = {\"x\": final_csv[\"Stadium\"], \n          \"y\": final_csv[\"Temperature\"], \n          \"marker\": {\"size\": 12}, \n          \"mode\": \"markers\",  \n          \"type\": \"scatter\"\n}\n\n\ndata = [trace]\nlayout = {\"title\": \"Games and Temperatures\", \n          \"xaxis\": {\"title\": \"Stadiums\", }, \n          \"yaxis\": {\"title\": \"Temperature (in Farenheit)\"}}\n\nfig = go.Figure(data=data, layout=layout)\niplot(fig, filename='basic_dot-plot')","a9d81f96":"trace0 = go.Scatter(\n    x=final_csv.Home_Team,\n    y=final_csv.Player_Activity_Derived,\n    mode='markers',\n    marker = dict(\n          color = 'rgb(17, 157, 255)',\n          size = 20,\n          line = dict(\n            color = 'rgb(231, 99, 250)',\n            width = 2\n          ))\n)\nlayout = dict(title='Home Team activity leading to concussion '\n)\nfig = go.Figure(data=[trace0], layout=layout)\niplot(fig, filename='bubblechart-color')","77014f56":"trace0 = go.Scatter(\n    x=final_csv.Visit_Team,\n    y=final_csv.Player_Activity_Derived,\n    mode='markers',\n    marker = dict(\n          color = 'rgb(17, 157, 255)',\n          size = 20,\n          line = dict(\n            color = 'rgb(231, 99, 250)',\n            width = 2\n          ))\n)\nlayout = dict(\n            title='Visit Team activity leading to concussion '\n)\nfig = go.Figure(data=[trace0], layout=layout)\niplot(fig, filename='bubblechart-color')","d48cd111":"x = final_csv.Home_Team\ny = final_csv.Visit_Team\n\ndata = [\n    go.Histogram2d(\n        x=x,\n        y=y\n    )\n]\nlayout = dict(\n            title='Home Team vs Away Team and Concussions ',\n            xaxis=dict(\n                    title='Home Team'\n                        ),\n            yaxis=dict(\n                    title='Away Team',\n                        )\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","75ec9b73":"del temp,tempe,x,y\ngc.collect()","8132298b":"def calculate_speeds(df, dt=None, SI=False):\n    data_selected = df[['Time', 'x','y']]\n    if SI==True:\n        data_selected.x = data_selected.x \/ 1.0936132983\n        data_selected.y = data_selected.y \/ 1.0936132983\n    # Might have used shift pd function ?\n    data_selected_diff = data_selected.diff()\n    if dt==None:\n        # Time is now a timedelta and need to be converted\n        data_selected_diff.Time = data_selected_diff.Time.apply(lambda x: (x.total_seconds()))\n        data_selected_diff['Speed'] = (data_selected_diff.x **2 + data_selected_diff.y **2).astype(np.float64).apply(np.sqrt) \/ data_selected_diff.Time\n    else:\n        # Need to be sure about the time step...\n        data_selected_diff['Speed'] = (data_selected_diff.x **2 + data_selected_diff.y **2).astype(np.float64).apply(np.sqrt) \/ dt\n    #data_selected_diff.rename(columns={'Time':'TimeDelta'}, inplace=True)\n    #return data_selected_diff\n    df['TimeDelta'] = data_selected_diff.Time\n    df['Speed'] = data_selected_diff.Speed\n    return df[1:]","e4016dff":"\ndtypes = {'Season_Year': 'int16',\n         'GameKey': 'int16',\n         'PlayID': 'int16',\n         'GSISID': 'float32',\n         'Time': 'str',\n         'x': 'float32',\n         'y': 'float32',\n         'dis': 'float32',\n         'o': 'float32',\n         'dir': 'float32',\n         'Event': 'str'}\n\ncol_names = list(dtypes.keys())\n\ndf_list = []\n\nbuffer = ['NGS-2017-pre.csv',\n             'NGS-2017-reg-wk1-6.csv',\n             'NGS-2017-reg-wk7-12.csv',\n             'NGS-2017-reg-wk13-17.csv',\n             'NGS-2017-post.csv']\nngs_files = ['NGS-2016-pre.csv',\n             'NGS-2016-reg-wk1-6.csv',\n             'NGS-2016-reg-wk7-12.csv','NGS-2016-reg-wk13-17.csv']\n\nfor i in tqdm.tqdm(ngs_files):\n    df = pd.read_csv(f'..\/input\/'+i, usecols=col_names,dtype=dtypes)\n    date_format = '%Y-%m-%d %H:%M:%S.%f'\n    sortBy = ['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'Time']\n    df.Time = pd.to_datetime(df.Time, format =date_format)\n    df.sort_values(sortBy, inplace=True)\n    df = calculate_speeds(df, SI=True)\n    df_list.append(df)\n    del df\n    gc.collect()\n\nngs = pd.concat(df_list)\n\ndel df_list\ngc.collect()","feed9c67":"#Converting everything to meters and speed to KMPH\nngs['x'] = ngs['x']\/1.0936\nngs['y'] = ngs['y']\/1.0936\nngs['dis'] = ngs['dis']\/1.0936\nngs['Speed'] = ngs['Speed']* 3.6","79383c2e":"ngs = ngs[ngs.replace([np.inf, -np.inf], np.nan).notnull().all(axis=1)] ","a9e7024b":"def remove_wrong_values(df, tested_columns=['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'TimeDelta'], cutspeed=None):\n    dump = df.copy()\n    colums = dump.columns\n    mask = []\n    for col in tested_columns:\n        dump['shift_'+col] = dump[col].shift(-1)\n        mask.append(\"( dump['shift_\"+col+\"'] == dump['\"+col+\"'])\")\n    mask =eval(\" & \".join(mask))\n    # Keep results where next rows is equally space\n    dump = dump[mask]\n    dump = dump[colums]\n    if cutspeed!=None:\n        dump = dump[dump.Speed < cutspeed]\n    return dump","f3a99bc8":"cut_speed=44 # World record 9,857232 m\/s for NFL\nngs = remove_wrong_values(ngs, cutspeed=cut_speed)","2a7e5252":"video_review = pd.read_csv('..\/input\/video_review.csv')\nfinal = pd.merge(final_csv,ngs,on=['Season_Year','GameKey','PlayID','GSISID'])\n","a48d31a3":"def load_layout():\n    \"\"\"\n    Returns a dict for a Football themed Plot.ly layout \n    \"\"\"\n    layout = dict(\n        title = \"Player Pitch Activity\",\n        plot_bgcolor='darkseagreen',\n        showlegend=True,\n        xaxis=dict(\n            autorange=False,\n            range=[0, 120],\n            showgrid=False,\n            zeroline=False,\n            showline=True,\n            linecolor='black',\n            linewidth=1,\n            mirror=True,\n            ticks='',\n            tickmode='array',\n            tickvals=[10,20, 30, 40, 50, 60, 70, 80, 90, 100, 110],\n            ticktext=['Goal', 10, 20, 30, 40, 50, 40, 30, 20, 10, 'Goal'],\n            showticklabels=True\n        ),\n        yaxis=dict(\n            title='',\n            autorange=False,\n            range=[-3.3,56.3],\n            showgrid=False,\n            zeroline=False,\n            showline=True,\n            linecolor='black',\n            linewidth=1,\n            mirror=True,\n            ticks='',\n            showticklabels=False\n        ),\n        shapes=[\n            dict(\n                type='line',\n                layer='below',\n                x0=0,\n                y0=0,\n                x1=120,\n                y1=0,\n                line=dict(\n                    color='white',\n                    width=2\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=0,\n                y0=53.3,\n                x1=120,\n                y1=53.3,\n                line=dict(\n                    color='white',\n                    width=2\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=10,\n                y0=0,\n                x1=10,\n                y1=53.3,\n                line=dict(\n                    color='white',\n                    width=10\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=20,\n                y0=0,\n                x1=20,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=30,\n                y0=0,\n                x1=30,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=40,\n                y0=0,\n                x1=40,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=50,\n                y0=0,\n                x1=50,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=60,\n                y0=0,\n                x1=60,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),dict(\n                type='line',\n                layer='below',\n                x0=70,\n                y0=0,\n                x1=70,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),dict(\n                type='line',\n                layer='below',\n                x0=80,\n                y0=0,\n                x1=80,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=90,\n                y0=0,\n                x1=90,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),dict(\n                type='line',\n                layer='below',\n                x0=100,\n                y0=0,\n                x1=100,\n                y1=53.3,\n                line=dict(\n                    color='white'\n                )\n            ),\n            dict(\n                type='line',\n                layer='below',\n                x0=110,\n                y0=0,\n                x1=110,\n                y1=53.3,\n                line=dict(\n                    color='white',\n                    width=10\n                )\n            )\n        ]\n    )\n    return layout","90bdf91c":"def plot_play(game_df, PlayID, player1=None, player2=None, custom_layout=False):\n    \"\"\"\n    Plots player movements on the field for a given game, play, and two players\n    \"\"\"\n    game_df = game_df[game_df.PlayID==PlayID]\n    finale = final[final.PlayID==PlayID]\n\n    GameKey=str(pd.unique(game_df.GameKey)[0])\n    traces=[]   \n    listb = []\n    \n    list1= list(game_df[game_df.GSISID==player1].Event)\n    list2= list(game_df[game_df.GSISID==player1].Speed)\n    lista = [\"Event: \"+str(list1[i]) +\" + Speed: \"+ str(list2[i]) for i in range(len(list1))]\n    if not lista:\n        lista.append(\"None\")\n    \n    list3= list(game_df[game_df.GSISID==player2].Event)\n    list4= list(game_df[game_df.GSISID==player2].Speed)\n    try:\n        listb = [\"Event: \"+str(list3[i]) +\" + Speed: \"+ str(list4[i]) for i in range(len(list2))]\n    except:\n        listb.append(\"None\")\n        \n    trace0 = go.Scatter(\n                x = game_df[game_df.GSISID==player1].x,\n                y = game_df[game_df.GSISID==player1].y,\n                name='Primary GSISID '+str(player1),\n                mode = 'lines+markers',\n                text = lista,\n                line = dict(width = 6,smoothing=1.1),\n                marker=dict(\n                size=12,\n                line = dict(\n                color= 'rgb(0,0,0)',\n                width = 1),\n                color = game_df[game_df.GSISID==player1].Speed, #set color equal to a variable\n                colorscale='Viridis',\n                colorbar=dict(\n                title='Primary Speed'\n                ),\n                showscale=True\n    )\n            )\n    trace1 = go.Scatter(\n                x = game_df[game_df.GSISID==player2].x,\n                y = game_df[game_df.GSISID==player2].y,\n                name='Partner GSISID '+str(player2),\n                text = listb,\n                line = dict(\n                width = 5),\n                mode = 'lines+markers',\n                marker=dict(\n                size=10,\n                line = dict(\n                color= 'rgb(0,0,0)',\n                width = 1),\n                color = game_df[game_df.GSISID==player2].Speed, #set color equal to a variable\n                colorscale='Portland',\n                colorbar=dict(title='Partner Speed', x =-0.14),\n                showscale= True\n                )\n            )\n    \n    layout = load_layout()\n    layout['title'] = 'Player Activity (Concussion) in GameKey ' + GameKey + ' : ' + str(pd.unique(finale.Home_Team)[0]) +' v\/s ' + str(pd.unique(finale.Visit_Team)[0])\n    layout['legend'] = dict(orientation=\"h\")\n    data = [trace0,trace1]\n    fig = dict(data=data, layout=layout)\n    print(\" Play Information\")\n    print(\" Date :\" + str(pd.unique(finale.Game_Date)[0]))\n    print(\" Home Team :\" + str(pd.unique(finale.Home_Team)[0])+ \", Visiting Team : \" + str(pd.unique(finale.Visit_Team)[0]) )\n    print(\" Player Activity Derived :\" + str(pd.unique(finale.Player_Activity_Derived)[0])+ \", Primary Partner Activity Derived : \" + str(pd.unique(finale.Primary_Partner_Activity_Derived)[0]) )\n    print(\" Primary Impact Type :\" + str(pd.unique(finale.Primary_Impact_Type)[0])+ \", Punt Play Player Role : \" + str(pd.unique(finale.Role)[0]) + \", Player Position : \" + str(pd.unique(finale.Position)[0]))\n    print(\" Quarter of Play :\" + str(pd.unique(finale.Quarter)[0])+ \", Pocession Team : \" + str(pd.unique(finale.Poss_Team)[0]) + \", Score (Home-Visiting) : \" + str(pd.unique(finale.Score_Home_Visiting)[0]))\n    print(\" Home Team Status :\" + str(pd.unique(finale.home_win_loss)[0])+ \", Pocession Team Status : \" + str(pd.unique(finale.Poss_Team_Status)[0]) )\n    print(\" Max Speed :\" + str(game_df.Speed.max())+ \", Avg Speed :\" + str(game_df.Speed.mean()) )\n    print(\" Stadium :\" + str(pd.unique(finale.Stadium)[0])+ \", Turf : \" + str(pd.unique(finale.Turf)[0])+\", GameWeather :\" + str(pd.unique(finale.GameWeather)[0])+ \", Temperature : \" + str(pd.unique(finale.Temperature)[0])  )\n    del finale\n    #print(\"\\n\\n\\t\",play_description)\n    iplot(fig)\n","a54f84ae":"plot_play(game_df=ngs, PlayID=3129, player1=31057, player2=32482 )","1bb82a07":"from IPython.display import HTML\n# Youtube\nHTML('<iframe width=\"950\" height=\"600\" src=\"http:\/\/a.video.nfl.com\/\/films\/vodzilla\/153233\/Kadeem_Carey_punt_return-Vwgfn5k9-20181119_152809972_5000k.mp4\" frameborder=\"0\" allowfullscreen><\/iframe>')\n","acdd745e":"plot_play(game_df=ngs, PlayID=2587, player1=29343, player2=31059 )","b7c3db0b":"plot_play(game_df=ngs, PlayID=538, player1=31023, player2=31941 )","0f2e56ce":"plot_play(game_df=ngs, PlayID=1212, player1=33121, player2=28249 )","3d0510ca":"plot_play(game_df=ngs, PlayID=1045, player1=32444, player2=31756 )","8017ee28":"plot_play(game_df=ngs, PlayID=2342, player1=32410, player2=23259 )","a66e15fc":"plot_play(game_df=ngs, PlayID=3663, player1=28128, player2=29629 )","bc0127ff":"plot_play(game_df=ngs, PlayID=3509, player1=27595, player2=31950 )","4f7a4f9f":"plot_play(game_df=ngs, PlayID=3468, player1=28987, player2=31950)","ad8cb408":"plot_play(game_df=ngs, PlayID=1976, player1=32214, player2=32807 )","1c192072":"HTML('<iframe width=\"950\" height=\"600\" src=\"https:\/\/nfl-vod.cdn.anvato.net\/league\/5691\/18\/11\/25\/284954\/284954_75F12432BA90408C92660A696C1A12C8_181125_284954_huber_punt_3200.mp4\" frameborder=\"0\" allowfullscreen><\/iframe>')","661540fc":"finale = pd.merge(final_csv,ngs,on=['GSISID'])","c5606260":"import plotly.plotly as py\nimport plotly.graph_objs as go\ntemp = finale[\"Event\"].value_counts()\ntempe = final[\"Event\"].value_counts()\n\ntrace1 = go.Bar(\n    x=temp.index,\n    y=temp.values,\n    name='All Games'\n)\ntrace2 = go.Bar(\n    x=tempe.index,\n    y=tempe.values,\n    name='Concussion'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group'\n)\n\nlayout = go.Layout(title='Events over the Games')\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig, filename='grouped-bar')","d7a6ddb7":"speed_during_punt = final.loc[final['Event'].isin(['punt'])]\nspeed_during_puntrec = final.loc[final['Event'].isin(['punt_received'])]\nspeed_during_tackle = final.loc[final['Event'].isin(['tackle'])]\nspeed_during_down = final.loc[final['Event'].isin(['punt_downed'])]\nspeed_during_fumble = final.loc[final['Event'].isin(['fumble'])]\nspeed_during_catch = final.loc[final['Event'].isin(['fair_catch'])]","03a8fa89":"trace0 = go.Box(\n    y=finale.Speed,\n    name = 'During Whole Game',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(165,42,42)',\n    ),\n)\n\ntrace1 = go.Box(\n    y=speed_during_punt.Speed,\n    name = 'During Punt',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(214,12,140)',\n    ),\n)\n\ntrace2 = go.Box(\n    y=speed_during_puntrec.Speed,\n    name = 'During Punt Rec',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(238,130,238)',\n    ),\n)\n\ntrace3 = go.Box(\n    y=speed_during_tackle.Speed,\n    name = 'During Tackle',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(46,139,87)',\n    ),\n)\n\n\ntrace4 = go.Box(\n    y=speed_during_down.Speed,\n    name = 'During Punt Downed',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(255,215,0)',\n    ),\n)\n\ntrace5 = go.Box(\n    y=speed_during_fumble.Speed,\n    name = 'During Fumble',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(0,191,255)',\n    ),\n)\n\ntrace6 = go.Box(\n    y=speed_during_catch.Speed,\n    name = 'During Fair Catch',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(176,48,96)',\n    ),\n)\n\nlayout = go.Layout(\n    width=900,\n    height=500,\n    yaxis=dict(\n        title='Speed of the Concussed Player',\n        zeroline=False\n    ),\n)\ndata = [trace0,trace1,trace2,trace3,trace4,trace5,trace6]\nlayout = go.Layout(title='Speed of the Players and Events 2016')\nfig= go.Figure(data=data, layout=layout)\niplot(fig, filename='alcohol-box-plot')","d7120515":"density_punt = finale.loc[finale['Event'].isin(['punt'])]\ndensity_punts = final.loc[final['Event'].isin(['punt'])]\ndensity_puntrec = finale.loc[finale['Event'].isin(['punt_received'])]\ndensity_puntrecs = final.loc[final['Event'].isin(['punt_received'])]\ndensity_tackle = final.loc[final['Event'].isin(['tackle'])]\ndensity_tackles = finale.loc[finale['Event'].isin(['tackle'])]","9fc2f4b2":"trace = go.Histogram2dContour(\n        x = density_punt.x,\n        y = density_punt.y\n)\n\ntrace0 = go.Scatter(\n    x = density_punts.x,\n    y = density_punts.y,\n    mode = 'markers',\n    name = 'Position of Players (Concussed) during Punts',\n    text = list(density_punts.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(25,25,112)',\n          size = 14)\n)\n\nlayout = load_layout()\nlayout['legend'] = dict(orientation=\"h\")\nlayout['plot_bgcolor'] = 'rgb(220,220,220)'\nlayout['title'] = 'Player Density on field during Punt 2016'\ndata = [trace,trace0]\nfig = dict(data=data, layout=layout)\niplot(fig, filename = \"Basic Histogram2dContour\")","d876776e":"trace = go.Histogram2dContour(\n        x = density_puntrec.x,\n        y = density_puntrec.y\n)\n\n\ntrace0 = go.Scatter(\n    x = density_puntrecs.x,\n    y = density_puntrecs.y,\n    mode = 'markers',\n    name = 'Position of Players (Concussed) during Punt Recs',\n    text = list(density_puntrecs.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(25,25,112)',\n          size = 14)\n)\nlayout = load_layout()\nlayout['plot_bgcolor'] = 'rgb(220,220,220)'\nlayout['legend'] = dict(orientation=\"h\")\nlayout['title'] = 'Player Density on field during Punt Rec 2016'\ndata = [trace,trace0]\nfig = dict(data=data, layout=layout)\niplot(fig, filename = \"Basic Histogram2dContour\")","f2e4c27e":"trace = go.Scatter(\n    x = density_tackle.x,\n    y = density_tackle.y,\n    mode = 'markers',\n    name = 'Concussion',\n    text = list(density_tackle.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(255, 0, 0)',\n          size = 20)\n)\n\ntrace0 = go.Scatter(\n    x = density_tackles.x,\n    y = density_tackles.y,\n    mode = 'markers',\n    name = 'Normal',\n    marker = dict(\n          color = 'rgb(238,221,130)',\n          size = 10)\n)\n\nlayout = load_layout()\nlayout['title'] = 'Tackle Points on field during 2016'\ndata = [trace0,trace]\nfig = dict(data=data, layout=layout)\niplot(fig, filename='basic-scatter')","12203a50":"del density_punt,density_puntrec,ngs,final,finale\ngc.collect()","966460b6":"del speed_during_punt,speed_during_puntrec,speed_during_tackle,speed_during_down,speed_during_fumble\ngc.collect()","25288642":"dtypes = {'Season_Year': 'int16',\n         'GameKey': 'int16',\n         'PlayID': 'int16',\n         'GSISID': 'float32',\n         'Time': 'str',\n         'x': 'float32',\n         'y': 'float32',\n         'dis': 'float32',\n         'o': 'float32',\n         'dir': 'float32',\n         'Event': 'str'}\n\ncol_names = list(dtypes.keys())\n\ndf_list = []\n\nngs_files = ['NGS-2017-pre.csv',\n             'NGS-2017-reg-wk1-6.csv',\n             'NGS-2017-reg-wk7-12.csv','NGS-2017-reg-wk13-17.csv']\n\nfor i in tqdm.tqdm(ngs_files):\n    df = pd.read_csv(f'..\/input\/'+i, usecols=col_names,dtype=dtypes)\n    date_format = '%Y-%m-%d %H:%M:%S.%f'\n    sortBy = ['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'Time']\n    df.Time = pd.to_datetime(df.Time, format =date_format)\n    df.sort_values(sortBy, inplace=True)\n    df = calculate_speeds(df, SI=True)\n    df_list.append(df)\n    del df\n    gc.collect()\n\nngs = pd.concat(df_list)\n\ndel df_list\ngc.collect()","1c304f4d":"#Converting everything to meters and speed to KMPH\nngs['x'] = ngs['x']\/1.0936\nngs['y'] = ngs['y']\/1.0936\nngs['dis'] = ngs['dis']\/1.0936\nngs['Speed'] = ngs['Speed']* 3.6","76bd99b1":"ngs = ngs[ngs.replace([np.inf, -np.inf], np.nan).notnull().all(axis=1)] ","a67bcfc1":"def remove_wrong_values(df, tested_columns=['Season_Year', 'GameKey', 'PlayID', 'GSISID', 'TimeDelta'], cutspeed=None):\n    dump = df.copy()\n    colums = dump.columns\n    mask = []\n    for col in tested_columns:\n        dump['shift_'+col] = dump[col].shift(-1)\n        mask.append(\"( dump['shift_\"+col+\"'] == dump['\"+col+\"'])\")\n    mask =eval(\" & \".join(mask))\n    # Keep results where next rows is equally space\n    dump = dump[mask]\n    dump = dump[colums]\n    if cutspeed!=None:\n        dump = dump[dump.Speed < cutspeed]\n    return dump","6a78be27":"cut_speed=44 # World record 9,857232 m\/s for NFL\nngs = remove_wrong_values(ngs, cutspeed=cut_speed)\nngs.Speed.hist()","90ab6b61":"video_review = pd.read_csv('..\/input\/video_review.csv')\nfinal = pd.merge(final_csv,ngs,on=['Season_Year','GameKey','PlayID','GSISID'])","fc58d733":"plot_play(game_df=ngs, PlayID=3630, player1=30171, player2=29384 )","ef84f4e3":"HTML('<iframe width=\"950\" height=\"600\" src=\"http:\/\/a.video.nfl.com\/\/films\/vodzilla\/153250\/52_yard_Punt_by_Matt_Haack-ENsIvMyf-20181119_161418429_5000k.mp4\" frameborder=\"0\" allowfullscreen><\/iframe>')","5e3906a5":"plot_play(game_df=ngs, PlayID=2764, player1=32323, player2=31930 )","0bc77d00":"plot_play(game_df=ngs, PlayID=183, player1=33813, player2=33841 )","161c5d63":"plot_play(game_df=ngs, PlayID=1088, player1=32615, player2=31999 )","f93f2aa2":"plot_play(game_df=ngs, PlayID=1526, player1=32894, player2=31763 )","d3814d7f":"plot_play(game_df=ngs, PlayID=3312, player1=26035, player2=27442 )","f57e1f11":"plot_play(game_df=ngs, PlayID=1262, player1=33941, player2=27442 )","294cd884":"plot_play(game_df=ngs, PlayID=2792, player1=33838, player2=31317 )","5e82d05f":"plot_play(game_df=ngs, PlayID=2072, player1=29492, player2=33445 )","906ed091":"plot_play(game_df=ngs, PlayID=1683, player1=32820, player2=25503 )","c9aac794":"HTML('<iframe width=\"950\" height=\"600\" src=\"http:\/\/a.video.nfl.com\/\/films\/vodzilla\/153280\/Wing_37_yard_punt-cPHvctKg-20181119_165941654_5000k.mp4\" frameborder=\"0\" allowfullscreen><\/iframe>')","6f8f8902":"finale = pd.merge(final_csv,ngs,on=['GSISID'])","ebfd4460":"import plotly.plotly as py\nimport plotly.graph_objs as go\n\ntemp = finale[\"Event\"].value_counts()\ntempe = final[\"Event\"].value_counts()\n\ntrace1 = go.Bar(\n    x=temp.index,\n    y=temp.values,\n    name='All Games'\n)\ntrace2 = go.Bar(\n    x=tempe.index,\n    y=tempe.values,\n    name='Concussion'\n)\n\ndata = [trace1, trace2]\nlayout = go.Layout(\n    barmode='group'\n)\n\nlayout = go.Layout(title='Events over the Games')\nfig = go.Figure(data=data, layout=layout)\n\niplot(fig, filename='grouped-bar')","2d1ae938":"speed_during_punt = final.loc[final['Event'].isin(['punt'])]\nspeed_during_puntrec = final.loc[final['Event'].isin(['punt_received'])]\nspeed_during_tackle = final.loc[final['Event'].isin(['tackle'])]\nspeed_during_down = final.loc[final['Event'].isin(['punt_downed'])]\nspeed_during_fumble = final.loc[final['Event'].isin(['fumble'])]\nspeed_during_catch = final.loc[final['Event'].isin(['fair_catch'])]","d003581f":"trace0 = go.Box(\n    y=finale.Speed,\n    name = 'During Whole Game',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(165,42,42)',\n    ),\n)\n\ntrace1 = go.Box(\n    y=speed_during_punt.Speed,\n    name = 'During Punt',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(214,12,140)',\n    ),\n)\n\ntrace2 = go.Box(\n    y=speed_during_puntrec.Speed,\n    name = 'During Punt Rec',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(138,43,226)',\n    ),\n)\n\ntrace3 = go.Box(\n    y=speed_during_tackle.Speed,\n    name = 'During Tackle',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(30,144,255)',\n    ),\n)\n\n\ntrace4 = go.Box(\n    y=speed_during_down.Speed,\n    name = 'During Punt Downed',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(214,179,140)',\n    ),\n)\n\ntrace5 = go.Box(\n    y=speed_during_fumble.Speed,\n    name = 'During Fumble',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(254,199,140)',\n    ),\n)\n\ntrace6 = go.Box(\n    y=speed_during_catch.Speed,\n    name = 'During Fair Catch',\n    boxpoints='all',\n    jitter=0.3,\n    marker = dict(\n        color = 'rgb(176,48,96)',\n    ),\n)\n\nlayout = go.Layout(\n    width=900,\n    height=500,\n    title = 'Speed , Concussion and Events',\n    yaxis=dict(\n        title='Speed of the Concussed Player 2017',\n        zeroline=False\n    ),\n)\ndata = [trace0,trace1,trace2,trace3,trace4,trace5,trace6]\nfig= go.Figure(data=data, layout=layout)\niplot(fig, filename='alcohol-box-plot')","0e3a1ba6":"density_punt = finale.loc[finale['Event'].isin(['punt'])]\ndensity_punts = final.loc[final['Event'].isin(['punt'])]\ndensity_puntrec = finale.loc[finale['Event'].isin(['punt_received'])]\ndensity_puntrecs = final.loc[final['Event'].isin(['punt_received'])]\ndensity_tackle = final.loc[final['Event'].isin(['tackle'])]\ndensity_tackles = finale.loc[finale['Event'].isin(['tackle'])]","eb3a093c":"trace = go.Histogram2dContour(\n        x = density_punt.x,\n        y = density_punt.y\n)\n\ntrace0 = go.Scatter(\n    x = density_punts.x,\n    y = density_punts.y,\n    mode = 'markers',\n    name = 'Position of Players (Concussed) during Punts',\n    text = list(density_punts.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(25,25,112)',\n          size = 14)\n)\n\nlayout = load_layout()\nlayout['legend'] = dict(orientation=\"h\")\nlayout['plot_bgcolor'] = 'rgb(220,220,220)'\nlayout['title'] = 'Player Density on field during Punt 2017'\ndata = [trace,trace0]\nfig = dict(data=data, layout=layout)\niplot(fig, filename = \"Basic Histogram2dContour\")","dde811b2":"trace = go.Histogram2dContour(\n        x = density_puntrec.x,\n        y = density_puntrec.y\n)\n\n\ntrace0 = go.Scatter(\n    x = density_puntrecs.x,\n    y = density_puntrecs.y,\n    mode = 'markers',\n    name = 'Position of Players (Concussed) during Punt Recs',\n    text = list(density_puntrecs.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(25,25,112)',\n          size = 14)\n)\nlayout = load_layout()\nlayout['plot_bgcolor'] = 'rgb(220,220,220)'\nlayout['legend'] = dict(orientation=\"h\")\nlayout['title'] = 'Player Density on field during Punt Rec 2017'\ndata = [trace,trace0]\nfig = dict(data=data, layout=layout)\niplot(fig, filename = \"Basic Histogram2dContour\")","2c503060":"trace = go.Scatter(\n    x = density_tackle.x,\n    y = density_tackle.y,\n    mode = 'markers',\n    name = 'Concussion',\n    text = list(density_tackle.Role),\n    marker = dict(\n        symbol='x',\n          color = 'rgb(255, 0, 0)',\n          size = 20)\n)\n\ntrace0 = go.Scatter(\n    x = density_tackles.x,\n    y = density_tackles.y,\n    mode = 'markers',\n    name = 'Normal',\n    marker = dict(\n          color = 'rgb(238,221,130)',\n          size = 10)\n)\n\nlayout = load_layout()\nlayout['title'] = 'Tackle Points on field during 2017'\ndata = [trace0,trace]\nfig = dict(data=data, layout=layout)\niplot(fig, filename='basic-scatter')","765c45df":"del density_punt,density_puntrec,ngs,final,finale,final_csv\ngc.collect()","a1aecdd1":"**Analysis**\n\nOut of around 2659 punts over all games there were 18 punts involving concussions. Out of 1292 \"Punt Received\" , 14 resulted in concussions which is approx 1 concussion occured every 100 Punt Received. Where as in the event of 603 \"Fair Catches\" , there were 1 concussions. So , the rate was pretty less in case of fair catches.","543e7551":"**Players and their Partner Movements which caused Concussion - 2017**\n\nIn this section lets visualize , the player movements during their concussion time game by game. We will analyze all the games of Preseason , Regular Week 1-6 and few games for Regular Week 7-12. ","9c9d5986":"**Analysis of Concussions**","8e8f40ff":"From the above graph its quite evident that most of the player had concussion while the Partner was Tackling or after getting Blocked.  ","6260efb9":"**Pre-Season Game  - 2016 - TEN vs CAR**\n\nK.Redfern punts 36 yards to TEN 9, Center-J.Jansen, downed by CAR-B.Wegher. PENALTY on TEN-M.Huff, Illegal Blindside Block, 5 yards, enforced at TEN 9.","3066fac2":"**Exploring the Data**\n\nData exploration is the most important step in Data Analytics. So in the first section we explore the datasets and try to establish a coorelation between them such that the data makes more sense. \n\nLets get high level view of the data,\n![](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/NFL%20player%20safety%20analytics\/key_variables.jpg)\n\nWe will start with video review as it contains the concussion data.","b381c3cd":"Another reckless challenge, The injured player C Pantale bulldozes the Partner player using his Helmet, to be exact C Pantale makes the contact with opponent at a speed of more than 25 KMPH ! ","4e867f36":"Lets analyze the speed of the players during these injury events,","227d0f1f":"**Pre Season Game - 2017 - KC vs TEN**\n\nB.Kern punts 61 yards to KC 24, Center-R.DiSalvo. J.Chesson for 76 yards, TOUCHDOWN. TEN-R.DiSalvo was injured during the play. ","35e30b83":"We can observe most of the tackles occured in very high speeds and using Helmets.","ef5a4556":"**Pre Season Game - 2017 - SF vs LAC**\n\nT.Baker punts 41 yards to SF 11, Center-M.Windt. D.Carter to SF 14 for 3 yards (J.Perry; D.Brown).","5446573a":"In this section, will make use of **NGS Data** to visualize the injuries in depth. NGS Data contains the each and every player movements during the play.","e730731a":"**Regular Game  - 2016 - IND VS TEN **\n\nB.Kern punts 46 yards to IND 37, Center-B.Brinkley. C.Rogers to IND 39 for 2 yards (W.Woodyard).","bbd297f7":"**Analysis of Game (Game Status and Timing)**\n\nIn this section we will analyze the Game Status and Game Types.","7e1abf13":"**Analysis of Player Roles and Positions**\n\nNow we will explore the **Player Role **  and  **Player Punt Data** to analyze which players receive more concussions. The NFL positions are explained as follows,\n![](http:\/\/www.sportsfy.com\/football-positions.jpg)\n\n**Offensive Positions: ** \n\n* Center (C): The offensive player who snaps the ball to start a play. This player also blocks for the runner on a running play and protects the quarterback on a passing play.\n* Offensive Guard (OG): An offensive lineman who lines up next to the center. An offensive guard's role is to block for the runner on running plays and protect the quarterback on passing plays.\n* Offensive Tackle (OT): An offensive lineman who lines up outside of the offensive guard. An offensive tackle's role is to block for the runner on running plays and protect the quarterback on passing plays.\n* Wide Receiver (WR): An offensive player who often lines up away from the line of scrimmage, and whose primary responsibility is to catch the football on a passing play. On running plays, a wide receiver often blocks for the runner.\n* Tight End (TE): A tight end often lines up at the end of the offensive line. On a running play, the tight end blocks for the runner. On a passing play, the tight end often runs out and becomes a pass target.\n* Quarterback (QB): The quarterback usually lines up behind center and receives the snap. On running plays, the quarterback hands off to the runner. On passing plays, the quarterback throws the pass to a receiver. The quarterback may also gain yards by running.\n* Fullback (FB): A fullback lines up between the quarterback and the halfback, and his primary role is to back for the halfback in a running play and to protect the quarterback on a passing play.\n* Halfback (HB): Also called the tailback. A halfback is usually smaller and quicker than the fullback, and is the primary ball carrier on running plays. On passing plays, a halfback often becomes a passing target.\n* Running Back (RB) \u2013 Also known as the Halfback. This player does it all. Lining up either behind or beside the quarterback, he runs, he catches, he blocks and he\u2019ll even throw a pass from time to time. A running back is normally a player who is a quick runner and thrives on contact.\n\n**Defensive Positions:**\n\n* Nose Tackle (NT): Also called a nose guard. A nose tackle is a defensive lineman who lines up directly across the opponent's center, commonly seen in a 3-4 defense. A nose tackle's primary role is to stop the run.\n* Defensive End (DE): A defensive lineman who lines up at the end of the defensive line. The primary role of the defensive end is to rush the quarterback.\n* Cornerback (CB): A defensive player whose primary responsibility is to defend against the pass.\n* Inside Linebacker (ILB): A defensive player who lines up behind the defensive line and has responsibility to stop plays that take place near the middle of the field.\n* Outside Linebacker (OLB): A linebacker who lines up behind the defensive line and has responsibility to stop plays that goes outside of the tackles. Outside linebackers sometimes rush the quarterback.\n* Strong Safety (SS): A defensive player who lines up on the strong side of the offense (the side where the tight end lines up), usually behind the linebackers. A strong safety supports the run defense on running plays and helps cornerbacks to defend the pass on passing plays.\n* Free Safety (FS): A defensive player who lines up behind the linebackers and the cornerbacks. A free safety should be a sure tackler as he is usually the last line of defense, and is expected to help the cornerback on deep passes.\n* Middle Linebacker (MLB): A linebacker who plays in the middle of the field behind the defensive line. Middle linebacker is a position in a 4-3 defense (not pictured). A middle linebacker is often the \"quarterback\" on defense, as he is the one who calls out defensive plays.\n* Defensive Tackle (DT): A defensive lineman who lines up on the inside of the defensive line in a 4-3 defense. The primary role of the defensive tackle is to stop the run.","330e89fa":"Looks like, most of the injuries tend to occur on Natural Grass or Grass turfs. May be the Grass makes the players slip more and fumble , which cause most of the injuriies.","582fa046":"**Regular Game  - 2016 - BUF vs SF **\n\n\nC.Schmidt punts 54 yards to SF 19, Center-G.Sanborn. J.Kerley to SF 31 for 12 yards (M.Gillislee).","f51a984d":"From the above graph its quite evident that most of the player had concussion while Tackling or after getting Blocked.  ","15010db7":"**Regular Game - 2017 - NYG vs KC**\n\nB.Wing punts 37 yards to KC 29, Center-Z.DeOssie. T.Hill pushed ob at KC 49 for 20 yards (N.Berhe). Penalty on KC-F.Zombo, Offensive Holding, declined. PENALTY on KC-T.Smith, Unnecessary Roughness, 15 yards, enforced at KC 33. Officially, a return for 4 yards.","feee8a52":"** NFL Data Analysis**\n\nThe **National Football League (NFL)** is a professional American football league consisting of 32 teams, divided equally between the National Football Conference (NFC) and the American Football Conference (AFC). The NFL is one of the four major professional sports leagues in North America, and the highest professional level of American football in the world.\n\n![NFL](https:\/\/cdn1.thecomeback.com\/wp-content\/uploads\/sites\/94\/2018\/08\/10497682-832x447.jpg)\n\nThe NFL was formed in 1920 as the American Professional Football Association (APFA) before renaming itself the National Football League for the 1922 season. The NFL agreed to merge with the American Football League (AFL) in 1966, and the first Super Bowl was held at the end of that season; the merger was completed in 1970. Today, the NFL has the highest average attendance (67,591) of any professional sports league in the world and is the most popular sports league in the United States. The Super Bowl is among the biggest club sporting events in the world[6] and individual Super Bowl games account for many of the most watched television programs in American history, all occupying the Nielsen's Top 5 tally of the all-time most watched U.S. television broadcasts by 2015. The NFL's executive officer is the commissioner, who has broad authority in governing the league. The players in the league belong to the National Football League Players Association.\n\nThe team with the most NFL championships is the Green Bay Packers with thirteen (nine NFL titles before the Super Bowl era, and four Super Bowl championships afterwards); the team with the most Super Bowl championships is the Pittsburgh Steelers with six. The current NFL champions are the Philadelphia Eagles, who defeated the New England Patriots in Super Bowl LII, their first Super Bowl championship after winning three NFL titles before the Super Bowl era.\n\n\n**NFL Concussion**\n\nA concussion is a type of traumatic brain injury caused by a blow to the head. Reports show an increasing number of retired NFL players who have suffered concussions have developed memory and cognitive issues such as dementia, Alzheimer's, depression and chronic traumatic encephalopathy (CTE).\n\nIn September 2015, researchers with the Department of Veterans Affairs and Boston University announced that they had identified CTE in 96 percent of NFL players that they had examined and in 79 percent of all football players.\n\nNFL players suffered more concussions in 2017 than in each of the previous five years, according to data released Friday by the league. There were 281 reported concussions this season, including head injuries suffered in preseason games and practices.\n\nYou can learn more  [here](https:\/\/edition.cnn.com\/2013\/08\/30\/us\/nfl-concussions-fast-facts\/index.html).\n\n![](https:\/\/www.playsmartplaysafe.com\/wp-content\/uploads\/2018\/06\/checklist-june-2018-final1-791x1024.png)\n\n![](https:\/\/www.playsmartplaysafe.com\/wp-content\/uploads\/2018\/06\/9.8.18-concussion-protocol-1024x640.png)\n\nImprovements to the Concussion Protocol\n\nFor the 2018 season, the Head, Neck and Spine Committee made additional improvements to the Concussion Protocol:\n\n* Added a third UNC who will monitor the broadcast video and audio feeds of each game from the spotters\u2019 booth, and notify on-field UNCs of possible head, neck or spine injuries.\n* Defined impact seizure and fencing responses as independent signs of potential loss of consciousness, representing \u201cNo-Go\u201d criteria under the current Protocol. Players who display either of these signs at any time shall be removed from play and may not return to the game.\n* Required an evaluation for all players demonstrating gross motor instability (e.g., stumbling or falling to the ground when trying to stand) to determine the cause of the instability. If the team physician, in consultation with the sideline UNC, determines the instability to be neurologically caused, the player is designated a \u201cNo-Go\u201d and may not return to play.\n* Officials, teammates, and coaching staffs have been instructed to take an injured player directly to a member of the medical team for appropriate evaluation, including a concussion assessment, if warranted.\n* Required all players who undergo any concussion evaluation on game day to have a follow-up evaluation conducted the following day by a member of the medical staff.\n\n\n**2018 Rule Changes**\n\n* 4-8-2 | Eliminates the requirement that a team who scores a touchdown at the end of regulation of a game to kick the extra point or go for two-point conversion if it would not affect the outcome of the game.\n* 6-1-3, 6-2-1 | Modifies rules for a free kick formation and for blocking on a free kick. \n* 8-1-3 | Changes standard for a catch.\n* 11-6-3 | Makes permanent the Playing Rule that changes the spot of the next snap after a touchback resulting from a free kick to the 25-yard line. \n* 12-2-8 | Makes lowering the head to initiate contact with the helmet a foul.\n* 12-5-1 | Makes the penalties for Illegal Batting and Kicking the same.\n* 15-2-2 | Authorizes the designated member of the Officiating department to instruct on-field game officials to disqualify a player for a flagrant non-football act when a foul for that act is called on the field.\n* 16-1-3 | Provides that in overtime, if the team that possesses the ball first scores a field goal on its initial possession and the second team loses possession by an interception or fumble, the down will be permitted to run to its conclusion, including awarding points scored by either team during the down\n\nIn the first section we will try to analyze the data and in the second section will propose the rules change.\n\n\n","5159dd12":"**Analysis of Natural Conditions ( Turf , Weather and Temperature)**","e0f2179e":"**Pre-Season Game  - 2016 - NYJ vs NWG**\n\nB.Wing punts 44 yards to NYJ 10, Center-T.Ott. J.Ross to NYJ 38 for 28 yards (O.Darkwa; B.Goodson).","a4089366":"**Regular Game  - 2016 - KC VS JAX **\n\nD.Colquitt punts 54 yards to JAX 31, Center-J.Winchester. B.Walters to JAX 39 for 8 yards (F.Zombo)","83419a78":"Most of the Players who were injured were Punt Returners, PLG and GL (Punt Role wise) and Tight End,Wide Receiver,Inside Line Breaker(Position Wise).\n\nA punt returner (PR) has the job of catching the ball after it is punted and to give his team good field position (or a touchdown if possible) by returning it. Before catching the punted ball, the returner must assess the situation on the field while the ball is still in the air.Punt returners sometimes also return kickoffs and usually play other positions, especially wide receiver, cornerback and running back, although sometimes as backups.\n\nTight End (TE) duties include blocking for both the quarterback and the running backs, but he can also run into the field and catch passes. Tight ends can catch like a receiver, but has the strength and size to dominate on the line.\n\nInside linebackers (ILB) are usually responsible for shadowing RBs, TEs and sometimes WRs; rushing the passer; and tackling ball carriers. Those who are linebackers are likely strong and fast.","3da71758":"**Pre-Season Game  - 2016 - CAR vs PIT **\n\nBerry punts 45 yards to CAR 31, Center-G.Warren. D.Byrd to CAR 46 for 15 yards (S.Davis).","d0fc9d60":"Now lets visualize the player density of field during these specific events,","1f3d9715":"**Analysis**\n\nThe pattern remains similar like 2016 Season. Out of around 2181 punts over all games there were 18 punts involving concussions. Out of 1048 \"Punt Received\" , 16 resulted in concussions which is approx 1.6 concussion occured every 100 Punt Received. Where as in the event of 509 \"Fair Catches\" , there were only 2 concussions. So , data once again shows that fair catches are more safer.","ed9c2402":"Most of the concussions (59% approx) occured when the Possession Team was either Losing or Drawing. ","3160c3a3":"C Brown suffers injury after a high speed Helmet to Helmet collision. Home Team was losing and resulted in desperate challenge on the opponent. ","175f4c93":"This plot shows the coorelation between the Punt Roles and Player Positions.","a0d26318":"**Analysis**\n\n\n* Most of these events were full speed event.\n* Most of these tackles were made at very high speed.\n* Most of these tackles were near the end line.\n*  Most of these tackles were made while running back.\n","a1b4b894":"In the phase phase will only consider data from 2016 , will combine all the data from 2016, combine them , calcualte speeds and visualize. We ignore the NGS data from Post Season as there were no concussions in that period.","9f81eb1a":"Lets, visualize the frequency of events and the concussion events","66c1b37d":"Another unnecessary rough challenge using Helmet.","13af6beb":"**Now lets look at some of the concussions in 2017,**\n\nIn this section we will explore data ","3dfaf837":"We can see from the video K Carey recklessly tackles the opponent using his Helmet. Carey made a hard hit on special teams in the second half of the game against the Broncos and came off wobbling, prompting him to enter the concussion protocol.","1fa1c66a":"Lets analyze the speed of the players during these injury events,","f5b5bbaa":"**Regular Game  - 2016 - NO VS CAR **\n\nT.Morstead punts 54 yards to CAR 39, Center-J.Drescher. T.Ginn to 50 for 11 yards (D.Lasco).","d100f937":"**Regular Game - 2017 - NE vs KC**\n\nD.Colquitt punts 36 yards to KC 47, Center-J.Winchester. D.Amendola to KC 44 for 3 yards (T.Smith). PENALTY on NE-B.Bolden, Running Into the Kicker, 5 yards, enforced at KC 11 - No Play.","4f7ee7bb":"32.4 % concussion occurred in the Pre-season games while around 67.6% occurred in Regular Games. And NO concussions occured during the Post Season Games.\n\nWhile in a game, Quarter 3 experienced most number of concussions followed Quarter 2.","165ab35b":"**Rule Changes:**\n\nHere in this section we will mention the rule changes that may reduce the number of concussions. \n\nLets **summarize **  all the  **observations** that were made in the above sections,\n\n*  Most of the player had concussion while Tackling or after getting Blocked.\n* Most of these injuries were caused due Helmet-to-Body or Helmet-to-Helmet Contacts.  \n* Helmet to body contact while tackling to 8 (22%) of injuries. Which were results of the injured player tackling the other player using their Helmets.\n* Most of the Players who were injured were Punt Returners, PLG and GL (Punt Role wise) and Tight End,Wide Receiver,Inside Line Breaker(Position Wise).\n* Most of the players who were concussed were in Offensive positions.\n* Most of the concussions (59% approx) occured when the Possession Team was either Losing or Drawing.\n* 32.4 % concussion occurred in the Pre-season games while around 67.6% occurred in Regular Games. And NO concussions occured during the Post Season Games.\n* While in a game, Quarter 3 experienced most number of concussions followed Quarter 2.\n* Most of the injuries tend to occur on Natural Grass or Grass turfs. \n* In 2016, Out of around 2659 punts (excluding Post Season) over all games there were 18 punts involving concussions. \n* In 2016, Out of 1292 \"Punt Received\" , 14 resulted in concussions which is approx 1 concussion occured every 100 Punt Received.\n* In 2016, Out of 603 \"Fair Catches\" , there were 1 concussions. So , the rate was pretty less in case of fair catches.\n* Most of these concussion events were full speed events.\n* Most of these tackles were made at very high speed, with player recklessly challenging the partner with the helmet.\n* Most of these tackles were near the end line.\n* Most of these tackles were made while running back.\n\n\n\nNow, Will suggest some rule changes based on these observations\n\n* **Bonus yards for fair catches.**\n\nFrom the observations it is quite evident that Fair Catches are more safer Punt Received, and thus Fair Catches must be encouraged. This may be achieved by awarding bonus yards.\n\n* **Penalty and Ejection for Roughness**\n\nIndividual analysis of lots of concussion footage showed that many of the players were involved in unecessary roughness. They used Helmet to tackle the opponent player. The 2018 Rule Change came up with  **\"lowering the head to initiate contact with the helmet a foul\".** But still its not enough. The foul should be backed up with Soccer like ejections. \n* Players receive \u201cRED card\u201d or ejection for direct helmet to helmet contact and a 10 yrd penalty. The roughness can be judged using any speed  sensors.\n* Players receive \u201cYELLOW card\u201d or ejection for direct helmet to body contact and a 5 yrd penalty. The roughness can be judged using any speed sensors.\n\nInternet of Things has reached to a great level and we have sensors for almost everything. So Sensors can be used to monitor the Helmet Use for tackling other players. \n\n\nOnce, the 2018 data is available we will have more insights and can analyze the impact of 2018 rule changes. \n\nVersion submitted for competition is Version 15. \n\n*Note : I knew nothing about NFL before this competetion, So,Thanks Kaggle and NFL.*\n\n\n","d7238080":"**Regular Game - 2017 - OAK vs BLT**\n\nM.King punts 62 yards to BLT 15, Center-J.Condo. M.Campanaro to BLT 24 for 9 yards (J.Condo, J.Cowser).","2dbfedca":"Weather has nothing to do with concussions.","ea1bbb0f":"**Pre Season Game - 2017 - WAS vs GB**\n\nJ.Vogel punts 43 yards to WAS 48, Center-D.Hart. K.Fuller to GB 40 for 12 yards (J.Hawkins)","df9fe609":"**Players and their Partner Movements which caused Concussion - 2016**\n\nIn this section lets visualize , the player movements during their concussion time game by game. We will analyze all the games of Preseason , Regular Week 1-6 and few games for Regular Week 7-12. \n\nField Layout and Player positions for reference in case you are not aware,\n\n![](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/NFL%20player%20safety%20analytics\/punt_coverage.png)\n\n![](https:\/\/storage.googleapis.com\/kaggle-media\/competitions\/NFL%20player%20safety%20analytics\/punt_return.png)\n\nFootball Plotly Layout taken from [An-Indian-Analysing-American-Football](https:\/\/www.kaggle.com\/piyush1912\/an-indian-analysing-american-football\/)\n\nLets start with some preseason games.","bd559ad3":"**Analysis**\n\n\n* Most of these events were full speed event.\n* Most of these tackles were made at very high speed using their helmets.\n* Most of these tackles were near the end line.\n*  Most of these tackles were made while running back.\n","db489c94":"**Analysis from the above data**\n\n* While player has blocked already the opponent and their primary partner still is trying to do the blocking its lead to 5(15%) of the concussions. .\n* While player is trying to tackle the opponent and their primary partner has already tackled it lead to 8(22%) of the concussions.\n* While player is trying to block the opponent and their primary partner has already blocked lead to 8 (22%) of the concussions.\n* While player has tackled the opponent and their primary partner is still tackling lead to 6 of the concussions.\n* Helmet to body contact while tackling to 8 (22%) of injuries.\n* Helmet to helmet contact while blocked to 4 (11%) of injuries.\n* Most of the injuries were non-friendly fires.\n* Most of the non-friendly injuries were Helmet-to-Helmet (43%)","2343448d":"**Regular Game - 2017 - MIA vs NO**\n\nM.Haack punts 42 yards to NO 30, Center-J.Denney. T.Ginn ran ob at NO 39 for 9 yards (J.Denney).","6bfbe5a8":"So there is not much coorelation between temperature and concussions.","75ff9e01":"Most of these injuries were caused due Helmet-to-Body or Helmet-to-Helmet Contacts. These were the results of Helmet to Player high speed clashes that occurred during tackles or blocks.","fe091fe3":"**Pre Season Game - 2017 - ATL vs JAX**\n\nB.Nortman punts 40 yards to ATL 25, Center-M.Overton. J.Hardy to ATL 32 for 7 yards (B.Brown). JAX-J.Harper was injured during the play.  PENALTY on ATL-J.Keyes, Offensive Holding, 10 yards, enforced at ATL 25.","d2d2cb46":"Now , let watch the original footage from NFL. \n\n*Note: If you are using Google Chrome , please enable unsecure HTTP Content in your Browser by clicking \"Load Unsafe Scripts\". Some of the official NFL Videos are having \"http:\/\/\"  (they don't have SSL Certificate) which cannot be displayed without permissions in Chrome.*","ad160d2b":"**Home and Away Teams Analysis**\n\nLets visualize some co- relation between the Home and Away Teams,","c5c62549":"**Pre-Season Game  - 2016 - WAS vs NYJ**\n\nL.Edwards punts 51 yards to WAS 27, Center-T.Purdum. J.Crowder MUFFS catch, touched at WAS 27, recovered by WAS-Q.Dunbar at WAS 11. Q.Dunbar to WAS 11 for no gain (M.Williams).","56a19694":"**Regular Game - 2017 - DEN vs LAC**\n\nD.Kaser punts 59 yards to DEN 13, Center-M.Windt. I.McKenzie ran ob at DEN 44 for 31 yards.","51042195":"**Regular Game  - 2016 - BLT VS  CIN**\n\nK.Huber punts 58 yards to BLT 14, Center-T.Ott. D.Hester MUFFS catch, and recovers at BLT 12. D.Hester pushed ob at BLT 27 for 15 yards (N.Vigil). CIN-C.Brown was injured during the play. ","3bab0c37":"Now, Lets see the original footage from the game, ","c2001a68":"**Pre-Season Game - 2016 - CHI vs DEN**\n\nP.O'Donnell punts 58 yards to DEN 11, Center-P.Scales. B.Addison to DEN 25 for 14 yards (K.Carey). PENALTY on DEN-S.Sulleyman, Illegal Block Above the Waist, 10 yards, enforced at DEN 25.\n","4869f9ed":"**Pre Season Game  - 2017 - MIA vs BLT**\n\nM.Haack punts 52 yards to BLT 25, Center-W.Chapman. B.Rainey to BLT 34 for 9 yards (D.Morgan). MIA-C.Pantale was injured during the play. His return is Questionable. "}}