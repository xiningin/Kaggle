{"cell_type":{"cd4c836a":"code","938008e9":"code","df65c655":"code","aa032d09":"code","1719b019":"code","05038758":"code","51b23206":"code","456c8085":"code","ef40c723":"code","da18f424":"code","7fafbfc1":"code","15bd56ea":"code","18ff2d09":"code","e04cdd2a":"code","0bc29119":"code","d17a1fee":"code","ae215337":"code","f70f130e":"code","e3f8a4ac":"code","79e3f07c":"code","8c5d7846":"code","1018eaaa":"code","54b1e129":"code","91a410b5":"code","96330e2d":"code","5b6b21bf":"code","454920dc":"markdown","7a47776a":"markdown","c4d9ac71":"markdown","06fa0006":"markdown","01c1c8d3":"markdown","6a2e34aa":"markdown","8d1e43c2":"markdown","4d280c0d":"markdown","1a296fbb":"markdown","aef4987c":"markdown"},"source":{"cd4c836a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics","938008e9":"# Loading the csv data to a Pandas Dataframe\ngold_data = pd.read_csv('..\/input\/gold-price-data\/gld_price_data.csv')","df65c655":"gold_data.head()","aa032d09":"gold_data.tail()","1719b019":"gold_data.shape","05038758":"gold_data.info()","51b23206":"gold_data.isnull().sum()","456c8085":"gold_data.describe()","ef40c723":"gold_data.describe().T","da18f424":"correlation = gold_data.corr()","7fafbfc1":"# Construction a heatmap to undestand the correlation\nplt.figure(figsize= (8,8))\nsns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')","15bd56ea":"# correlation values of Gold\nprint(correlation['GLD'])","18ff2d09":"#checking the distribution of the Gold Price\nsns.distplot(gold_data['GLD'], color='green')","e04cdd2a":"X = gold_data.drop(['Date', 'GLD'], axis=1)\nY = gold_data['GLD']","0bc29119":"print(X)","d17a1fee":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size= 0.2, random_state=2)","ae215337":"regressor = RandomForestRegressor(n_estimators=100)","f70f130e":"regressor","e3f8a4ac":"# training the model\nregressor.fit(X_train, Y_train)","79e3f07c":"# prediction on Test Data\ntest_data_prediction = regressor.predict(X_test)","8c5d7846":"print(test_data_prediction)","1018eaaa":"# R Squared error\nerror_score = metrics.r2_score(Y_test, test_data_prediction)\nprint('R squared error : ', error_score)","54b1e129":"Y_test = list(Y_test)","91a410b5":"plt.plot(Y_test, color='blue', label='Actual Value')\n#plt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","96330e2d":"#plt.plot(Y_test, color='blue', label='Actual Value')\nplt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","5b6b21bf":"plt.plot(Y_test, color='blue', label='Actual Value')\nplt.plot(test_data_prediction, color='green', label='Predicted value')\nplt.title('Actual Price vs Predicted Price')\nplt.xlabel('Number of values')\nplt.ylabel('Golden Price')\nplt.legend()\nplt.show()","454920dc":"## Corretation\n### 1. Positive Correlation\n### 2. Negative Correlation","7a47776a":"## Compare the Actual Values and Predicted Values in a Plot","c4d9ac71":"## Import the Python Libraries","06fa0006":"## Spliting the Features and Target","01c1c8d3":"---","6a2e34aa":"## Model Evalutation","8d1e43c2":"# Golden Price Predction","4d280c0d":"## Spliting into Training data and Test Data","1a296fbb":"## Model Training: Random Forest Regressor","aef4987c":"## Data Collection & Processing"}}