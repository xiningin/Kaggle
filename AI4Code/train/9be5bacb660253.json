{"cell_type":{"60b737a4":"code","8e553319":"code","b3a1a64a":"code","52449b98":"code","a879feb1":"code","a9f6d0fb":"code","9396985a":"code","16d00573":"code","69c2992d":"code","2ddcf6fb":"code","e6772e77":"code","e1936ec2":"code","62c10d2a":"code","f2c8af02":"code","df967a6a":"code","4b8b4320":"code","ebcd6e94":"code","00413b05":"code","ae4674df":"code","5201f226":"code","e46fabce":"code","1554574a":"code","6728cb9d":"code","dae99d31":"code","b427ace3":"code","33cef096":"code","0dc95689":"code","3243663b":"code","80d55b92":"code","89f30cb3":"code","bb47bf4a":"code","6777ba1c":"code","96549813":"code","3f2d1b8d":"code","29c6013d":"code","462828d7":"code","3e6d2f13":"code","a493a332":"code","8c7bfe68":"code","72fbfed5":"code","aaa3999a":"code","42796752":"code","3eec845f":"code","f7fd18ba":"code","33055865":"code","b7be49ed":"code","a76b1a24":"code","6ae520ca":"code","2617ed3e":"code","1ef85767":"code","eac5de82":"code","b49fca9a":"code","abb74c01":"code","cb5c19d9":"code","6848bea1":"code","f8a018e4":"code","575c1c5d":"code","3bc90204":"code","4f433538":"code","f08be3ad":"markdown","edca455c":"markdown","d53ed6a8":"markdown","248adf65":"markdown","e57de735":"markdown","21bc2e00":"markdown","a41c1165":"markdown","5f23e62c":"markdown","47444183":"markdown","fa5b7f51":"markdown","3d2498c0":"markdown","90c79969":"markdown","f6e65659":"markdown","53b5ae6d":"markdown","63989b4b":"markdown","0815c6a8":"markdown"},"source":{"60b737a4":"# Loading necessary packages \n\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\n\n%matplotlib inline\nimport seaborn as sns\nsns.set()\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier, plot_importance\nfrom sklearn.neural_network import MLPClassifier\n\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.metrics import confusion_matrix","8e553319":"# loading dataset\ndataset = pd.read_csv(\"..\/input\/xAPI-Edu-Data.csv\")","b3a1a64a":"# A summary of the dataset\ndataset.info()","52449b98":"# breif description of the numerical valued feature\ndataset.describe()","a879feb1":"plt.subplots(figsize=(20, 8))\ndataset[\"raisedhands\"].value_counts().sort_index().plot.bar()\nplt.title(\"No. of times vs no. of students raised their hands on particular time\", fontsize=18)\nplt.xlabel(\"No. of times, student raised their hands\", fontsize=14)\nplt.ylabel(\"No. of student, on particular times\", fontsize=14)\nplt.show()","a9f6d0fb":"plt.subplots(figsize=(20, 8))\ndataset[\"VisITedResources\"].value_counts().sort_index().plot.bar()\nplt.xlabel(\"No. of times, student visted resource\", fontsize=14)\nplt.ylabel(\"No. of student, on particular visit\", fontsize=14)\nplt.show()","9396985a":"dataset.groupby(\"gender\").count()","16d00573":"def gen_bar(feature, size):\n    highest = dataset[dataset[\"Class\"]==\"H\"][feature].value_counts()\n    medium = dataset[dataset[\"Class\"]==\"M\"][feature].value_counts()\n    low = dataset[dataset[\"Class\"]==\"L\"][feature].value_counts()\n    \n    df = pd.DataFrame([highest, medium, low])\n    df.index = [\"highest\",\"medium\", \"low\"]\n    df.plot(kind='bar',stacked=True, figsize=(size[0], size[1]))","69c2992d":"gen_bar(\"gender\",[6,5])","2ddcf6fb":"# lets map the gender\ngender_map = {\"F\" : 0, \"M\" : 1}\ndataset[\"gender\"] = dataset[\"gender\"].map(gender_map)","e6772e77":"dataset[\"gender\"].value_counts().sort_index().plot.bar()","e1936ec2":"dataset[\"NationalITy\"].describe()","62c10d2a":"plt.subplots(figsize=(15, 5))\ndataset[\"NationalITy\"].value_counts().sort_index().plot.bar()","f2c8af02":"dataset[\"NationalITy\"] = dataset[\"NationalITy\"].replace([\"Jordan\",\"KW\"], \"0\")\ndataset[\"NationalITy\"] = dataset[\"NationalITy\"].replace([\"Iraq\",\"Palestine\"], \"1\")\ndataset[\"NationalITy\"] = dataset[\"NationalITy\"].replace([\"Tunis\",\"lebanon\", \"SaudiArabia\"], \"2\")\ndataset[\"NationalITy\"] = dataset[\"NationalITy\"].replace([\"Syria\",\"Egypt\",\"Iran\",\"Morocco\",\"USA\",\"venzuela\",\"Lybia\"], \"3\")\n\ndataset[\"NationalITy\"] = dataset[\"NationalITy\"].astype(int)","df967a6a":"plt.subplots(figsize=(5, 5))\ndataset[\"NationalITy\"].value_counts().sort_index().plot.bar()","4b8b4320":"del dataset[\"PlaceofBirth\"]","ebcd6e94":"dataset[\"StageID\"].value_counts().sort_index().plot.bar()","00413b05":"stage_map = {\"HighSchool\" : 0, \"MiddleSchool\" : 1, \"lowerlevel\": 2}\ndataset[\"StageID\"] = dataset[\"StageID\"].map(stage_map)","ae4674df":"gen_bar(\"GradeID\",[8,8])","5201f226":"dataset[\"GradeID\"] = dataset[\"GradeID\"].replace([\"G-02\",\"G-08\",\"G-07\"], \"0\")\ndataset[\"GradeID\"] = dataset[\"GradeID\"].replace([\"G-04\",\"G-06\"], \"1\")\ndataset[\"GradeID\"] = dataset[\"GradeID\"].replace([\"G-05\",\"G-11\", \"G-12\",\"G-09\",\"G-10\"], \"2\")\n\ndataset[\"GradeID\"] = dataset[\"GradeID\"].astype(int)","e46fabce":"dataset.groupby(\"SectionID\").count()","1554574a":"section_map = {\"A\":0, \"B\":1, \"C\":2}\ndataset[\"SectionID\"] = dataset[\"SectionID\"].map(section_map)","6728cb9d":"plt.subplots(figsize=(15, 5))\ndataset[\"Topic\"].value_counts().sort_index().plot.bar()","dae99d31":"gen_bar(\"Topic\", [8,10])","b427ace3":"pd.crosstab(dataset[\"Class\"],dataset[\"Topic\"])","33cef096":"topic_map = {\"IT\":0, \"Arabic\":1, \"French\":2, \"English\":3, \"Biology\":4, \"Science\":5, \"Chemistry\":6, \"Quran\":7, \"Geology\":8, \"History\":9,\"Math\":9,\"Spanish\":9}\ndataset[\"Topic\"] = dataset[\"Topic\"].map(topic_map)","0dc95689":"dataset.groupby(\"Topic\").count()","3243663b":"facet = sns.FacetGrid(dataset, hue=\"Class\",aspect=4)\nfacet.map(sns.kdeplot,\"Topic\",shade= True)\nfacet.set(xlim=(0, dataset[\"Topic\"].max()))\nfacet.add_legend()\n\nplt.show()","80d55b92":"dataset.groupby(\"Semester\").count()","89f30cb3":"pd.crosstab(dataset[\"Class\"], dataset[\"Semester\"])","bb47bf4a":"semester_map = {\"F\":0, \"S\":1}\ndataset[\"Semester\"] = dataset[\"Semester\"].map(semester_map)","6777ba1c":"dataset[\"Relation\"].value_counts().sort_index().plot.bar()","96549813":"relation_map = {\"Father\":0, \"Mum\":1}\ndataset[\"Relation\"] = dataset[\"Relation\"].map(relation_map)","3f2d1b8d":"dataset[\"ParentschoolSatisfaction\"].nunique()","29c6013d":"parent_ss_map = {\"Bad\": 0, \"Good\":1}\ndataset[\"ParentschoolSatisfaction\"] = dataset[\"ParentschoolSatisfaction\"].map(parent_ss_map)","462828d7":"dataset.groupby(\"ParentschoolSatisfaction\").count()","3e6d2f13":"gen_bar(\"ParentschoolSatisfaction\", [5,5])","a493a332":"dataset.groupby(\"ParentAnsweringSurvey\").count()","8c7bfe68":"parent_a_s_map = {\"No\":0, \"Yes\":1}\ndataset[\"ParentAnsweringSurvey\"] = dataset[\"ParentAnsweringSurvey\"].map(parent_a_s_map)","72fbfed5":"dataset[\"ParentAnsweringSurvey\"].value_counts().sort_index().plot.bar()","aaa3999a":"dataset.groupby(\"StudentAbsenceDays\").count()","42796752":"student_absn_day_map = {\"Above-7\":0, \"Under-7\":1} \ndataset[\"StudentAbsenceDays\"] = dataset[\"StudentAbsenceDays\"].map(student_absn_day_map)","3eec845f":"dataset.groupby(\"StudentAbsenceDays\").count()","f7fd18ba":"dataset.head()","33055865":"dataset.groupby(\"Class\").count()","b7be49ed":"class_map = {\"H\":0, \"M\":1, \"L\":2}\ndataset[\"Class\"] = dataset[\"Class\"].map(class_map)","a76b1a24":"dataset.groupby(\"Class\").count()","6ae520ca":"dataset.corr()","2617ed3e":"fig, ax = plt.subplots(figsize = (15, 10))\nax = sns.heatmap(dataset.corr(), annot = True, fmt = \".1f\", cmap = \"RdYlBu\")","1ef85767":"X = dataset.iloc[:,0:15]\ny = dataset[\"Class\"]\n\nfeatures_train, features_test, labels_train, labels_test = train_test_split(X, y, test_size = .20, random_state=0)\n","eac5de82":"# model build with SVM.SVC classifier\n\nclf = SVC(gamma='auto', kernel = 'linear')\nclf.fit(features_train, labels_train)\npred = clf.predict(features_test)","b49fca9a":"accuracy_score(pred, labels_test)","abb74c01":"# Random Forest Classifier with 20 subtrees\n\nclf = RandomForestClassifier(n_estimators = 220, random_state=10)\nclf.fit(features_train, labels_train)\npred = clf.predict(features_test)\nrfc_pred = pred\naccuracy_score(pred, labels_test)","cb5c19d9":"# Logistic regression\nfrom sklearn.linear_model import LogisticRegression\n\nclf = LogisticRegression()\nclf.fit(features_train, labels_train)\npred = clf.predict(features_test)\naccuracy_score(pred, labels_test)","6848bea1":"# Multi-layer Perceptron classifier with (10,10,10) hidden layers\n\nclf = MLPClassifier(solver='lbfgs', alpha=1e-5, hidden_layer_sizes=(10,10,10), random_state=1)\nclf.fit(features_train, labels_train)\npred = clf.predict(features_test)\naccuracy_score(pred, labels_test)","f8a018e4":"clf = XGBClassifier(max_depth=5, learning_rate=0.2, n_estimators=20, seed=10)\nclf.fit(features_train, labels_train)\npred = clf.predict(features_test)\nxgb_pred = pred\naccuracy_score(pred, labels_test)","575c1c5d":"fig, ax = plt.subplots(figsize=(12,6))\nplot_importance(clf, ax = ax)","3bc90204":"# Random Forest Classifier confustion Matrix result\nconfusion_matrix(labels_test, rfc_pred, labels=[1, 0]) ","4f433538":"# XGBoost Classifier confusion matric result\nconfusion_matrix(labels_test, xgb_pred, labels=[1, 0]) ","f08be3ad":"### Working with Semester","edca455c":"### Working with Topic","d53ed6a8":"> Theirs a small diffrence between __PlaceofBirth__ and __NationalITy__ values. But we can ignore that! and simply delete the __PlaceofBirth__ feature","248adf65":"### Working with Relation Feature","e57de735":"## Finding correlation","21bc2e00":"### Working with SectionID","a41c1165":"## Data Preprocessing","5f23e62c":"### Lets explore __StageID__","47444183":"### Last but not the least! Working with \"Class\" feature","fa5b7f51":"> From this bar chart we visualize that __male__ students are more on \"medium\" and \"lower\" category compared to __female__ student.","3d2498c0":"### Working with GradeID","90c79969":"### Working with StudentAbsenceDays Feature","f6e65659":"> __`raisedhands`, `VisITedResources`, `AnnouncementsView`, `Discussion` are already in decent form.__\n### Working with \"ParentschoolSatisfaction\"","53b5ae6d":"> We can see that most of the __students__ are from __jordan__ and __kuwait__","63989b4b":"### Working with \"ParentAnsweringSurvey\"","0815c6a8":"> __`gender`__ done, lets moved to `NationaliTy`"}}