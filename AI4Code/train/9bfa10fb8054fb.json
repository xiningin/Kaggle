{"cell_type":{"b5022ab0":"code","a9a14b3b":"code","625ede9d":"code","86ec6db3":"code","87f4765d":"code","9992671f":"code","8c286e4c":"code","48c7e458":"code","d48af67e":"code","c15ce961":"code","adf82488":"code","8e074c34":"code","1629eade":"code","abbb9e32":"code","be6757f6":"code","84e2778a":"code","fba85db1":"code","63f31b9e":"code","5770cada":"code","fe4ddf8d":"code","53a31d44":"code","fd4508bc":"code","d10266f5":"code","f7978b81":"markdown","29929ec2":"markdown","f85f8d1d":"markdown","422b8020":"markdown"},"source":{"b5022ab0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a9a14b3b":"### Table of content\n#### 1)dataset overview\n#### 2)Univariate analysis\n#### 3)bivariate analysis\n#### 4)AutoML to prediction","625ede9d":"#import packages\nimport numpy as np\nimport pandas as pd \n#import matplotlib as mpl\nimport h2o\nfrom h2o.automl import H2OAutoML\nimport seaborn as sns\nimport matplotlib.pyplot as plt","86ec6db3":"train_pd = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest_pd = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/test.csv')","87f4765d":"#dataset information\ntrain_pd.info()","9992671f":"#check the columns of data\ntrain_pd.columns","8c286e4c":"# datatypes of data\ntrain_pd.dtypes","48c7e458":"train_pd.describe()","d48af67e":"#checking Null values\ntrain_pd.isna().sum().sum()\n#there is no null values in dataset.","c15ce961":"fig = plt.subplots(figsize = (15,8))\nsns.countplot(x='loss',data=train_pd)","adf82488":"#loss variable analyis\nsns.boxplot(data=train_pd, x='loss')\nplt.title(\" loss distribution\")\nplt.show()\n# loss traget variable is lest skewed.","8e074c34":"#categorical values\ncat_var= ['f1', 'f16', 'f27', 'f55', 'f60', 'f86', 'loss']","1629eade":"train_pd.corr().unstack().sort_values().drop_duplicates()","abbb9e32":"plt.figure(figsize=(14 , 14))\ncorr = train_pd.corr()\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr, square=True, mask = mask, cmap='coolwarm_r', annot_kws={'size':20})","be6757f6":"#histogram of numeric values.\nnum_col= [col for col in train_pd.columns if (col not in cat_var) ]\nplt.figure(figsize=(100, 100))\ni=1\nfor col in num_col:\n    plt.subplot(10,10,i)\n    sns.histplot(data=train_pd, x=col)\n    plt.title(col+\" distribution\")\n    i=i+1\nplt.show()","84e2778a":"h2o.init()","fba85db1":"#import train test files\ntrain = h2o.import_file('..\/input\/tabular-playground-series-aug-2021\/train.csv')\ntest = h2o.import_file('..\/input\/tabular-playground-series-aug-2021\/test.csv')\nsample_submission = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","63f31b9e":"print(train.shape)\nprint(test.shape)","5770cada":"x = train.columns\ny = \"loss\"\nx.remove(y)\nx.remove(\"id\") #removing id  ","fe4ddf8d":"aml = H2OAutoML(max_runtime_secs=5000, seed=1)\naml.train(x=x, y=y, training_frame=train)","53a31d44":"lb = aml.leaderboard\nlb.head() ","fd4508bc":"preds = aml.predict(test)","d10266f5":"## create submission\n\nsample_submission['loss'] = h2o.as_list(preds)['predict']\nsample_submission.to_csv(\"submission.csv\",index=None)\nsample_submission.head()","f7978b81":"## **TPS - AUG 2021** \n## ***EDA analysis and Prediction using AutoML***","29929ec2":"![image.png](attachment:edcf5f6c-4301-4673-891d-af46234fde59.png)","f85f8d1d":"### Automl","422b8020":"#####  Thank You"}}