{"cell_type":{"5c4c62cc":"code","96428e8a":"code","1d563fcc":"code","23f270a4":"code","2c446e28":"code","881e7106":"code","fe628ac8":"code","de390959":"code","93f275e6":"code","0835292b":"code","64e65d80":"code","1c0cd7d1":"code","b1a91d2a":"code","714d085f":"code","de1b2848":"code","ff698919":"code","7479d9cd":"code","4d230673":"code","5c4bbdc2":"code","deb5f868":"code","ddd4039d":"code","3cd92698":"code","eae0d2c2":"code","1f37fc39":"code","bca5523d":"code","60db7c0b":"code","85993819":"code","0f642d05":"code","ed0cc5cd":"code","5123df08":"code","3cb79a90":"code","ce535058":"code","d5623621":"code","6d77c0d0":"code","708673ae":"code","05c6c2dc":"code","f40bedeb":"code","37864a00":"code","649d2f83":"code","be85141d":"code","b115b0dc":"code","e47a8285":"code","5da13f2d":"code","4d19d7f4":"code","b413dcbe":"code","971977fe":"code","23dc60a0":"code","7375ccd6":"code","47f9c68a":"code","19c91b80":"code","3c4e069e":"code","62176078":"code","f3780893":"code","c36b91d3":"code","7d451133":"code","f1476210":"code","5380fbbb":"code","388e48be":"code","0a4663eb":"code","90c95419":"code","dd6ca40f":"code","dffcb643":"code","0c5de0c4":"code","5b0f54f7":"code","2ef1da9b":"code","30739a00":"markdown","5a942c47":"markdown","7330ca51":"markdown","57a5f8ea":"markdown","30e540e3":"markdown","1444494a":"markdown","ef21cec7":"markdown","35e6b842":"markdown","c8709104":"markdown","fc299a0d":"markdown","b0bfd0e4":"markdown","36fae2fb":"markdown","68521f9c":"markdown"},"source":{"5c4c62cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","96428e8a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom datetime import date\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport sklearn.preprocessing as pre\n\nimport sklearn.model_selection as ms\nfrom sklearn.metrics import mean_squared_error\nimport sklearn.metrics as mt\n\n\nimport sklearn.linear_model as lm\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor\nimport sklearn.neighbors as NN","1d563fcc":"data=pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/train_SJC.csv\",header=1)\nsample=pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/Test_SJC.csv\")","23f270a4":"data.head(3)","2c446e28":"sample.head(3)","881e7106":"data.info()","fe628ac8":"sample.info()","de390959":"data=data.rename(columns={'Unnamed: 2':'DateReported','Unnamed: 7':'DependentsOther','Unnamed: 11':'DaysWorkedPerWeek'})\n","93f275e6":"# Let us drop duplicated rows if any\ndata.drop_duplicates(inplace=True)","0835292b":"data[\"DateTimeOfAccident\"]=pd.to_datetime(data[\"DateTimeOfAccident\"])\nsample[\"DateTimeOfAccident\"]=pd.to_datetime(sample[\"DateTimeOfAccident\"])","64e65d80":"data[\"DateReported\"]=pd.to_datetime(data[\"DateReported\"])\nsample[\"DateReported\"]=pd.to_datetime(sample[\"DateReported\"])","1c0cd7d1":"data.dtypes","b1a91d2a":"#### 2.2 Missing Value Treatment","714d085f":"data.isnull().sum()","de1b2848":"sample.isnull().sum()","ff698919":"sns.boxplot(data[\"WeeklyWages\"])","7479d9cd":"sns.boxplot(data[\"HoursWorkedPerWeek\"])","4d230673":"sns.countplot(data[\"MaritalStatus\"])","5c4bbdc2":"sns.countplot(sample[\"MaritalStatus\"])","deb5f868":"data[\"MaritalStatus\"]=data[\"MaritalStatus\"].fillna(\"U\")","ddd4039d":"sample[\"MaritalStatus\"]=sample[\"MaritalStatus\"].fillna(\"U\")","3cd92698":"data[\"WeeklyWages\"]=data[\"WeeklyWages\"].fillna(data[\"WeeklyWages\"].median())","eae0d2c2":"data[\"HoursWorkedPerWeek\"]=data[\"HoursWorkedPerWeek\"].fillna(data[\"HoursWorkedPerWeek\"].median())","1f37fc39":"data.isnull().sum()","bca5523d":"sample.isnull().sum()","60db7c0b":"data[\"YearAcc\"]=data[\"DateTimeOfAccident\"].dt.year\ndata[\"MonthAcc\"]=data[\"DateTimeOfAccident\"].dt.month\ndata[\"DayAcc\"]=data[\"DateTimeOfAccident\"].dt.day","85993819":"plt.figure(figsize=[12,5])\nsns.lineplot(x=data[\"YearAcc\"],y=data[\"UltimateIncurredClaimCost\"])\nplt.xlabel( \"Year of accident\", size = 12 )\nplt.ylabel( \"Acturial loss paid\", size = 12 )\nplt.title( \"Acturial loss based on year of Accident\", size = 14 )\nplt.show()","0f642d05":"plt.figure(figsize=[12,5])\nsns.lineplot(x=data[\"MonthAcc\"],y=data[\"UltimateIncurredClaimCost\"])\nplt.xlabel( \"Month of accident\", size = 12 )\nplt.ylabel( \"Acturial loss paid\", size = 12 )\nplt.title( \"Acturial loss based on Month\", size = 14 )\nplt.show()","ed0cc5cd":"plt.figure(figsize=[12,5])\nsns.lineplot(x=data[\"DayAcc\"],y=data[\"UltimateIncurredClaimCost\"])\nplt.xlabel( \"Day of accident\", size = 12 )\nplt.ylabel( \"Acturial loss paid\", size = 12 )\nplt.title( \"Acturial loss based on Day of Accident\", size = 14 )\nplt.show()","5123df08":"delay=data[\"DateReported\"]-data[\"DateTimeOfAccident\"]\ndata[\"delay_reported\"]=[x.days for x in delay]","3cb79a90":"delay1=sample[\"DateReported\"]-sample[\"DateTimeOfAccident\"]\nsample[\"delay_reported\"]=[x.days for x in delay1]","ce535058":"data[\"delay_reported\"]","d5623621":"plt.figure(figsize=[12,5])\nsns.scatterplot(x=data[\"delay_reported\"],y=data[\"UltimateIncurredClaimCost\"])\nplt.xlabel( \"Delay in reporting\", size = 12 )\nplt.ylabel( \"Acturial loss paid\", size = 12 )\nplt.title( \"Acturial loss based on delay in reporting\", size = 14 )\nplt.show()","6d77c0d0":"sns.boxplot(data[\"Age\"])","708673ae":"sns.countplot(data['DependentChildren'])","05c6c2dc":"sns.countplot(data['DependentsOther'])","f40bedeb":"data_cat=data.select_dtypes(include='object').columns.tolist()\ndata_num=data.select_dtypes(exclude='object').columns.tolist()","37864a00":"data_num","649d2f83":"sns.distplot(data['InitialIncurredCalimsCost'])","be85141d":"out=[\"Age\",'DependentsOther','DependentChildren','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek','InitialIncurredCalimsCost']","b115b0dc":"def floor_cap(df,x):\n    for i in x:\n        low=df[i].quantile(0.10)\n        top=df[i].quantile(0.90)\n        df[i] = np.where(df[i] <low,low,df[i])\n        df[i] = np.where(df[i] >top,top,df[i])","e47a8285":"floor_cap(data,out)\nfloor_cap(sample,out)","5da13f2d":"data[\"Hourly_wage\"]=data['WeeklyWages']\/data['HoursWorkedPerWeek']\nsample[\"Hourly_wage\"]=sample['WeeklyWages']\/sample['HoursWorkedPerWeek']","4d19d7f4":"data[\"Hourly_wage\"]=data['WeeklyWages']\/data['HoursWorkedPerWeek']\nsample[\"Hourly_wage\"]=sample['WeeklyWages']\/sample['HoursWorkedPerWeek']","b413dcbe":"data[\"hoursworkedperday\"]=data['HoursWorkedPerWeek']\/data[\"DaysWorkedPerWeek\"]\nsample[\"hoursworkedperday\"]=sample['HoursWorkedPerWeek']\/sample[\"DaysWorkedPerWeek\"]","971977fe":"data.describe()","23dc60a0":"data.columns","7375ccd6":"cat=['Gender','MaritalStatus','PartTimeFullTime']","47f9c68a":"var=['Gender','MaritalStatus','PartTimeFullTime','Age','DependentChildren',\n     'DependentsOther','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek',\n     'delay_reported','Hourly_wage','hoursworkedperday','InitialIncurredCalimsCost','UltimateIncurredClaimCost']\nvar1=['Gender','MaritalStatus','PartTimeFullTime','Age','DependentChildren',\n     'DependentsOther','WeeklyWages','HoursWorkedPerWeek','DaysWorkedPerWeek',\n     'delay_reported','Hourly_wage','hoursworkedperday','InitialIncurredCalimsCost']","19c91b80":"correlation=data[data_num].corr()","3c4e069e":"plt.figure(figsize=(10,10))\nsns.heatmap(correlation,square=True)","62176078":"df=data[var]\ndf.info()\n\ndfs=sample[var1]","f3780893":"Y=df[\"UltimateIncurredClaimCost\"]","c36b91d3":"le=LabelEncoder()\nfor x in cat:\n    df[x]=le.fit_transform(df[x])","7d451133":"for x in cat:\n    dfs[x]=le.fit_transform(dfs[x])","f1476210":"X_scale=pre.minmax_scale(df.drop(\"UltimateIncurredClaimCost\",axis=1))","5380fbbb":" X_scale1=pre.minmax_scale(dfs)","388e48be":"x_train,x_test,y_train,y_test=ms.train_test_split(X_scale,Y,test_size=0.3,random_state=1234456)","0a4663eb":"x_train.shape,x_test.shape,y_train.shape,y_test.shape","90c95419":"glm=lm.LinearRegression()\nglm.fit(x_train,y_train)","dd6ca40f":"print(\"Test score :\",glm.score(x_test,y_test))\nprint(\"Train score :\",glm.score(x_train,y_train))\npredictions=glm.predict(x_test)","dffcb643":"np.sqrt(mt.mean_squared_error(y_test,predictions))","0c5de0c4":"pred_glm=glm.predict(X_scale1)","5b0f54f7":"csv = pd.read_csv(\"..\/input\/machine-learning-24-hrs-hackathon\/sample_submission.csv\")\ncsv[\"UltimateIncurredClaimCost\"]=pred_glm","2ef1da9b":"csv.to_csv(\"20BDA27_1.csv\", index = False)","30739a00":"<font size=\"3\" color=Blue >While reading through the head of the dataset, we can see that the columns are not properly named for 3 columns.Let us get the column names right.<\/font>","5a942c47":"##### 2.1 Renaming the columns","7330ca51":"<font size=\"3\" color=Blue > Since the hours worked per week has undesirable values (values>168 which is an extreme case) we would replace them with say 100.<\/font>","57a5f8ea":"<font size=\"3\" color=Blue > Since the \"Hoursworkedperweek\" and \"weeklywages\" has skewed distribution and mean is sensitive to outliers its better not to impute them with mean value.So let us impute using median.\nAnd for MaritalStatus let us impute using \"U\" which stands for unknown.<\/font>","30e540e3":"### Linear Regression","1444494a":"## Model","ef21cec7":"## 2. Data Preprocessing","35e6b842":"## 1. Data loading","c8709104":"##### 2.2 Converting appropriate columns to datetime objects","fc299a0d":"### Outlier treatment","b0bfd0e4":"## 3 EDA","36fae2fb":"<font size=\"3\" color=Blue > Let us do analysis based on year,month and day of the accident <\/font>","68521f9c":"## Feature Engineering"}}