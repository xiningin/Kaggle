{"cell_type":{"b268bcd3":"code","b463619e":"code","9faf617a":"code","a4b87c30":"code","a3df7df2":"code","a581a6d9":"code","24fbf08a":"code","6e83aa0e":"code","f28a708a":"code","bddf0b26":"code","d0a6b7d3":"code","9ab9d185":"code","3be142af":"code","60f3db19":"code","bacd7512":"code","40476018":"markdown","f10e458e":"markdown","84118052":"markdown","939b3f91":"markdown","3394ae7a":"markdown","575b01ff":"markdown","c4e79751":"markdown","364994a2":"markdown","55aaaecd":"markdown","16ab39d3":"markdown","a996350c":"markdown","42095cd0":"markdown","c681a457":"markdown","39c206b1":"markdown","a36796fa":"markdown","adb5a0c3":"markdown","3269f9ed":"markdown","1dc4c52d":"markdown","e345d0cb":"markdown","dcf68b2d":"markdown"},"source":{"b268bcd3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b463619e":"import numpy as np\nimport pandas as pd\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndf = pd.read_csv('\/kaggle\/input\/telecom-users-dataset\/telecom_users.csv')\ndf.info()","9faf617a":"df.shape\ndf.drop(['Unnamed: 0','customerID','PaymentMethod'],axis=1,inplace=True)\ndf.columns","a4b87c30":"def looking_for_not_floats():\n    for i in range(len(df.TotalCharges)):\n        if df.TotalCharges[i] == \" \":\n            print(i)\n        else:\n            None\nlooking_for_not_floats()","a3df7df2":"df.drop(df[df.TotalCharges ==\" \"].index,axis=0,inplace=True)","a581a6d9":"df.TotalCharges = df.TotalCharges.astype(float)","24fbf08a":"sns.barplot(df.Churn.value_counts().index,df.Churn.value_counts().values)\nplt.title(\"distribution churns\")\nplt.show()","6e83aa0e":"sns.histplot(data=df,x=\"gender\",hue=\"Churn\")\nplt.title(\"Gender\/Churn\")","f28a708a":"sns.histplot(data=df,x=\"SeniorCitizen\",hue=\"Churn\",bins=2)\nplt.title(\"SeniorCitizen\/Churn\")","bddf0b26":"sns.histplot(data=df,x=\"Partner\",hue=\"Churn\")\nplt.title(\"Partner\/Churn\")","d0a6b7d3":"sns.histplot(data=df,x=\"Dependents\",hue=\"Churn\")\nplt.title(\"Dependents\/Churn\")","9ab9d185":"sns.histplot(data=df,x=\"tenure\",hue=\"Churn\")\nplt.title(\"Tenure\/Churn\")","3be142af":"df.gender = df.gender.replace([\"Male\",\"Female\"],[1,-1])\ndf.Partner = df.Partner.replace([\"No\",\"Yes\"],[0,1])\ndf.Dependents = df.Dependents.replace([\"No\",\"Yes\"],[0,1])\ndf.PhoneService = df.PhoneService.replace([\"No\",\"Yes\"],[0,1])\ndf.MultipleLines = df.MultipleLines.replace([\"No\",\"No phone service\",\"Yes\"],[0,0,1])\ndf.InternetService = df.InternetService.replace([\"No\",\"DSL\",\"Fiber optic\"],[0,1,2])\n#Online Stuff\ndf.OnlineSecurity = df.OnlineSecurity.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.OnlineBackup = df.OnlineBackup.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.DeviceProtection = df.DeviceProtection.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.TechSupport = df.TechSupport.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.StreamingTV = df.StreamingTV.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.StreamingMovies = df.StreamingMovies.replace([\"No\",\"No internet service\",\"Yes\"],[0,0,1])\ndf.Contract = df.Contract.replace([\"Month-to-month\",\"One year\",\"Two year\"],[1,12,24])\ndf.PaperlessBilling = df.PaperlessBilling.replace([\"No\",\"Yes\"],[0,1])\ndf.Churn = df.Churn.replace([\"No\",\"Yes\"],[0,1])","60f3db19":" X = df.drop(\"Churn\",axis=\"columns\")\ny = df.Churn\ntrain_X, valid_X, train_y, valid_y = train_test_split(X,y, test_size=0.2)\nlm = LogisticRegression()\nlm.fit(train_X,train_y)\nprint(lm.coef_)\nplt.xticks(rotation=90)\nsns.barplot(X.columns,lm.coef_[0])\nprint(\"The R\u00b2-Score is\",+round(lm.score(train_X,train_y)*100,2),\"%\")","bacd7512":"lm.fit(valid_X,valid_y)\nprint(lm.coef_)\nplt.xticks(rotation=90)\nsns.barplot(X.columns,lm.coef_[0])\nprint(\"The R\u00b2-Score is\",+round(lm.score(train_X,train_y)*100,2),\"%\")","40476018":"Now we have to drop useless Data (Unnamed\/ CustomerID\/ PaymentMethod)","f10e458e":"Data contains no missing values.\nLets take a closer look on the data","84118052":"**Data Manipulation**\nBefore we can use the data for a logistic regression , we have to edit the data\nWe have to rewrite some categorial variables, to use them in the regression","939b3f91":"The higher the tenure get, the lower is the probability of a churn","3394ae7a":"# **Logistic Regression**\nNow lets have a look on the probability and how the the different variables impact the chance of a chrun","575b01ff":"We see, that a higher percentage of the senior citizen wants to leave.\nNow the company can use some marketing instruments, to reduce the percentage","c4e79751":"Convert the Data for TotalCharges into float","364994a2":"The Plot shows us, that the users without partner are more likely to leave.","55aaaecd":"The percentage of churns in the group of users without dependents are much higher then in the group with dependents.","16ab39d3":"**Effects, who increace the probability of a churn (positive correlation)**\n* Senior Citizenship\n* Internet Service\n* etc.","a996350c":"# **Evaluation**","42095cd0":"I see,that the gender dont have much impact on the chance of churns","c681a457":"**Effects again a churn (negative correlation)**\n* Partner\n* Dependents\n* Phone Service\n* Tech Support\n* etc.","39c206b1":"Lets see how much Churns are in the dataset","a36796fa":"**Now lets have a closer look, how the different variables impact the probability of churns**","adb5a0c3":"**Lets start the Regression**","3269f9ed":"Drop the Indexes","1dc4c52d":"A R\u00b2-Score of 80% is solid. Now we have to run the Regression with the valid data.","e345d0cb":"Now we have to convert \"TotalCharges\" into float","dcf68b2d":"**That was my first notebook. Please leave construtive criticism. Thanks**"}}