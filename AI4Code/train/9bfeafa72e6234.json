{"cell_type":{"98f760d8":"code","e8d2a1ea":"code","0a162783":"code","fbfe4528":"code","6c6294cb":"code","973d4ba6":"code","30c59ae4":"code","c78ecc00":"code","488e8fb9":"code","a0138d07":"code","4b36c14b":"code","159ae0cd":"code","7f72bc25":"code","057dce63":"code","bd583a46":"code","17c3c017":"code","25b16669":"code","4f0f3a99":"code","7a832345":"code","e1435b9d":"code","de70ed13":"code","becbaa0f":"code","bf83f7ba":"code","d5f809ee":"code","60d0ca48":"code","e2f891c7":"code","6b6171ed":"code","385caf7e":"code","c29f5987":"code","49fea8fb":"code","c20ae2c1":"code","3e820069":"code","bb08b4cc":"code","a770ea9c":"code","f6280943":"code","795a5a02":"code","382ae575":"markdown","3aafb503":"markdown","f903a449":"markdown","8ae9d639":"markdown","249207f0":"markdown","59d71575":"markdown","3ec931ce":"markdown","b1aee75d":"markdown","b1b9352d":"markdown","79e90a42":"markdown","3ceb6878":"markdown","b2393224":"markdown","687be2d1":"markdown","82bd5dc7":"markdown"},"source":{"98f760d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e8d2a1ea":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0a162783":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain.head()","fbfe4528":"test = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest.head()","6c6294cb":"train.isnull()","973d4ba6":"train.isnull().sum()","30c59ae4":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","c78ecc00":"sns.set_style(\"whitegrid\")\nsns.countplot(x=\"Survived\", data=train)","488e8fb9":"sns.set_style(\"whitegrid\")\nsns.countplot(x=\"Survived\", hue=\"Pclass\", data=train, palette=\"rainbow\")","a0138d07":"sns.countplot(x='SibSp',data=train)","4b36c14b":"train['Fare'].hist(color='green',bins=40,figsize=(8,4))","159ae0cd":"plt.figure(figsize=(12, 7))\nsns.boxplot(x=\"Pclass\", y=\"Age\", data=train, palette=\"winter\")","7f72bc25":"# Creating a function to get average of age of passengers class\ndef impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 37\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","057dce63":"train[\"Age\"] = train[[\"Age\", \"Pclass\"]].apply(impute_age, axis = 1)","bd583a46":"# Checking the heatmap again\nsns.heatmap(train.isnull(), yticklabels=False, cbar=False, cmap=\"viridis\")","17c3c017":"train.drop(\"Cabin\", axis=1, inplace=True)","25b16669":"train.head()","4f0f3a99":"train.dropna(inplace=True)","7a832345":"train.info()","e1435b9d":"pd.get_dummies(train[\"Embarked\"], drop_first=True).head","de70ed13":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nembark = pd.get_dummies(train['Embarked'],drop_first=True)","becbaa0f":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)","bf83f7ba":"train.head()","d5f809ee":"train = pd.concat([train, sex, embark], axis=1)","60d0ca48":"train.head()","e2f891c7":"train.drop(\"Survived\", axis=1).head()","6b6171ed":"train[\"Survived\"].head()","385caf7e":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(train.drop('Survived',axis=1), \n                                                    train['Survived'], test_size=0.30, \n                                                    random_state=101)","c29f5987":"from sklearn.linear_model import LogisticRegression\nlogmodel = LogisticRegression()\nlogmodel.fit(X_train, y_train)","49fea8fb":"predictions = logmodel.predict(X_test)","c20ae2c1":"from sklearn.metrics import confusion_matrix\naccuracy=confusion_matrix(y_test,predictions)\naccuracy","3e820069":"from sklearn.metrics import accuracy_score\naccuracy=accuracy_score(y_test,predictions)\naccuracy","bb08b4cc":"predictions","a770ea9c":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,predictions))","f6280943":"submission = pd.DataFrame()\nsubmission['PassengerId'] = test['PassengerId']\nsubmission['Survived'] = y_train\nsubmission.head()","795a5a02":"submission.to_csv('submit.csv', index = False)","382ae575":"# Import Libraries\nLet's import some other libraries to get started!","3aafb503":"We can see the wealthier passengers in the higher classes tend to be older, which makes sense. We'll use these average age values to impute based on Pclass for Age.","f903a449":"# Evaluation","8ae9d639":"# The Data\nLet's start by reading in the titanic_train.csv file into a pandas dataframe.","249207f0":" # Logistic Regression with Python","59d71575":"# Missing Data\nWe can use seaborn to create a simple heatmap to see where we are missing data!","3ec931ce":"# Exploratory Data Analysis\nLet's begin some exploratory data analysis! We'll start by checking out missing data!","b1aee75d":"Checking precision,recall,f1-score using classification report","b1b9352d":"## Training and Predicting","79e90a42":"Here we can can see that we data missing at Age is less compared to Cabin. I'll be dropping Cabin column later. Now I'll be visualizing some more of the data.","3ceb6878":"# Converting Categorical Features\nWe'll need to convert categorical features to dummy variables using pandas! Otherwise our machine learning algorithm won't be able to directly take in those features as inputs.","b2393224":"# Building a Logistic Regression model","687be2d1":"Now lets drop Cabin Column ","82bd5dc7":"# Data Cleaning\nAs there is missing data we can drop this or we can fill this by mean of age of all passengers. But this process can be done by checking the average age of a passenger."}}