{"cell_type":{"010f98b1":"code","7ef3378b":"code","812228ba":"code","692a5e5b":"code","7f3dcb6b":"code","b265c5b9":"code","7f8c41f0":"code","ccba6f9a":"code","fd3f62d9":"code","311ff6e1":"code","73e63c0b":"code","3ef5a5eb":"code","46cff5fc":"code","6c56c25d":"code","c3d6a9eb":"code","132b22d0":"code","3a2caa98":"code","3834cfd5":"code","ed84ee79":"code","22bc7bbc":"code","4ecd77f7":"code","fe5795ea":"code","865c7f8e":"code","c0f4d3b1":"code","aa695bd0":"code","dd0e6474":"code","e0f9eae5":"markdown","631b2f24":"markdown","9b216d7f":"markdown","0a9cd96c":"markdown","7f4318b3":"markdown","fd670dcd":"markdown","0ce24551":"markdown","c826eaba":"markdown","bc02db85":"markdown","027a8a41":"markdown","cae452d3":"markdown"},"source":{"010f98b1":"import pandas as pd\nimport numpy as np\n# visualization, plot\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n# preprocessing\nfrom sklearn.model_selection import train_test_split\n\n# machine learning\nimport lightgbm as lgb\n\n\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error","7ef3378b":"df = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\ndf.head()","812228ba":"df.info()","692a5e5b":"df.isna().sum()\n# there is no null variables in dataset","7f3dcb6b":"px.pie(df['gender'].value_counts(), values='gender', names=pd.Index(['female', 'male']), template='ggplot2')","b265c5b9":"fig, axes = plt.subplots(1, 3, figsize=(30,12))\nfig.suptitle('Scores for gender')\n\n\nfor i, score in enumerate(['math score', 'reading score', 'writing score']):\n\n    sns.histplot(ax=axes[i], x=score, data=df, hue='gender')\n    axes[i].set_title(score)\n    plt.setp(axes[i].get_legend().get_texts(), fontsize='15')\n    plt.setp(axes[i].get_legend().get_title(), fontsize='16') \n","7f8c41f0":"px.pie(df['race\/ethnicity'].value_counts(), values='race\/ethnicity', names=df['race\/ethnicity'].value_counts().index, template='ggplot2')","ccba6f9a":"# PLOTS KDE FOR MATH, READING AND WRITING IN GIVEN HUE\ndef kde_plot_all_scores(title_name, data, hue):\n    fig, axes = plt.subplots(1, 3, figsize=(24,6))\n    fig.suptitle(title_name)\n\n    scores = ['math score', 'reading score', 'writing score']\n    for i, score in enumerate(scores):\n        sns.kdeplot(ax=axes[i], x=score, data=data, hue=hue, linewidth=2, fill=True, alpha=.2)\n        axes[i].set_title(score)  \n        plt.setp(axes[i].get_legend().get_texts(), fontsize='11')\n        plt.setp(axes[i].get_legend().get_title(), fontsize='13') ","fd3f62d9":"kde_plot_all_scores('Scores for gender', df, 'race\/ethnicity')","311ff6e1":"px.pie(df['parental level of education'].value_counts(), values='parental level of education', names=df['parental level of education'].value_counts().index, template='ggplot2')","73e63c0b":"#kde plots for parental level od education for all scores\nfig, axes = plt.subplots(3, 1, figsize=(18,12))\nfig.suptitle('Scores for gender')\n\nscores = ['math score', 'reading score', 'writing score']\nfor i, score in enumerate(scores):\n    sns.kdeplot(ax=axes[i], x=score, data=df, hue='parental level of education', linewidth=2, fill=True, alpha=.2)\n    axes[i].set_title(score)\n    plt.setp(axes[i].get_legend().get_texts(), fontsize='11')\n    plt.setp(axes[i].get_legend().get_title(), fontsize='11')\n    plt.tight_layout()","3ef5a5eb":"df['lunch'].value_counts()","46cff5fc":"kde_plot_all_scores('Scores for lunch', df, 'lunch')","6c56c25d":"px.pie(df['test preparation course'].value_counts(), values='test preparation course', names=df['test preparation course'].value_counts().index, template='ggplot2')","c3d6a9eb":"kde_plot_all_scores('Scores for test preparation course', df, 'test preparation course')","132b22d0":"# add category columns for all columns except target columns(math, reading and writing scores)\ndf = pd.get_dummies(df, columns=['gender','race\/ethnicity', 'parental level of education', 'lunch', 'test preparation course'],\n              prefix=['gender','race\/ethnicity', 'parent_education', 'lunch', 'course'], drop_first=True)","3a2caa98":"df.head()","3834cfd5":"# Average score for target column, then drop the scores\ndf['avg_score'] =  df[['math score', 'reading score', 'writing score']].apply(np.mean, axis=1)\ndf['avg_score'] = df['avg_score'].apply(lambda x : int(x))\ndf.drop(['math score', 'reading score', 'writing score'], inplace=True, axis=1)","ed84ee79":"X = df.drop(['avg_score'], axis=1)\ny = df['avg_score']","22bc7bbc":"# split data to train and test data\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","4ecd77f7":"# to train the model first we need to convert to lgb dataset\ntrain_data = lgb.Dataset(X_train, label=y_train)\nvalid_data = lgb.Dataset(X_test, label=y_test)","fe5795ea":"# parameters for lgb\nparameters = {\n    'objective': 'regression',\n    'metric': 'mse',#mean squared error\n    'is_unbalance': 'true',\n    'boosting': 'gbdt',\n    'num_leaves': 63,\n    'feature_fraction': 0.5,\n    'bagging_fraction': 0.5,\n    'bagging_freq': 20,\n    'learning_rate': 0.01,\n    'verbose': -1\n}","865c7f8e":"model_lgbm = lgb.train(parameters,\n                           train_data,\n                           valid_sets=valid_data,\n                           num_boost_round=1000,\n                           early_stopping_rounds=50)","c0f4d3b1":"lgb.plot_importance(model_lgbm, figsize=(24, 12))","aa695bd0":"predictions = model_lgbm.predict(X_test)","dd0e6474":"print('Mean squared error:', mean_squared_error(y_test, predictions))\nprint('Root Mean squared error:', np.sqrt(mean_squared_error(y_test, predictions)))\nprint('Mean absolute error:', mean_absolute_error(y_test, predictions))","e0f9eae5":"**GENDER COUNT PIE CHART**","631b2f24":"**KDE PLOT FOR RACE\/ETHNICITY FOR ALL SCORES**","9b216d7f":"**Parental level of education pie chart**","0a9cd96c":"**PIE CHART FOR TEST PREPARATION COURSE**","7f4318b3":"**KDE PLOT FOR LUNCH**","fd670dcd":"We can see that, females have more score in writing and reading, males have more score in math but there is no big difference like reading and writing","0ce24551":"**PIE CHART FOR RACE\/ETCHNICITY**","c826eaba":"It seems that students who take standard lunch more successful","bc02db85":"**DATA VISULIZATION**","027a8a41":"**Math, reading, writing scores for gender**","cae452d3":"**LightGBM**"}}