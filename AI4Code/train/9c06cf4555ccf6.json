{"cell_type":{"5fd023ad":"code","502caa4f":"code","d73df223":"code","ad17ff33":"code","469d460a":"code","bbeb684c":"code","bf7ebe1d":"markdown"},"source":{"5fd023ad":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport os\n#print(os.listdir(\"..\/input\"))","502caa4f":"NA2018 = pd.read_csv(\"..\/input\/NA-Results2018 Ver 2.csv\", encoding = \"ISO-8859-1\")\nWinner18 = pd.DataFrame([])\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA18 = NA2018.loc[NA2018['Constituency_Title']==Const, ['Part','Votes','TotalVotes']]\n#    if NA.empty == True:\n    if NA18.empty == False:\n        MAX = (NA18.loc[NA18['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Part'],MAX['Votes'],MAX['TotalVotes']]).T\n        Winner18 = pd.concat([Winner18,temp])\nWinner18 = Winner18.rename(columns = {0:'Constituency', 1:'Part', 2:'Votes', 3:'TotalVotes'})\nParties18 = np.unique(Winner18.loc[:,'Part'])\nNum = pd.DataFrame([])\n\nfor i in range (len(Parties18)):\n    temp = pd.DataFrame([Parties18[i], len(Winner18.loc[Winner18['Part'] == Parties18[i]])\/len(Winner18) ,len(Winner18.loc[Winner18['Part'] == Parties18[i]])]).T\n    Num = pd.concat([Num,temp])\n\nTop_18 = Num.rename(columns = {0: 'Part', 1:'Percentage', 2:'Seats Won'})\nTop_18 = Top_18.sort_values(by = 'Seats Won', ascending= False ) ","d73df223":"NA2013 = pd.read_csv(\"..\/input\/National Assembly 2013.csv\", encoding = \"ISO-8859-1\")\nWinner13 = pd.DataFrame([])\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA13 = NA2013.loc[NA2013['ConstituencyTitle']==Const, ['Party','Votes','TotalVotes']]\n#    if NA.empty == True:\n    if NA13.empty == False:\n        MAX = (NA13.loc[NA13['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['TotalVotes']]).T\n        Winner13 = pd.concat([Winner13,temp])\nWinner13 = Winner13.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes'})\nParties13 = np.unique(Winner13.loc[:,'Party'])\nNum = pd.DataFrame([])\n\nfor i in range (len(Parties13)):\n    temp = pd.DataFrame([Parties13[i], len(Winner13.loc[Winner13['Party'] == Parties13[i]])\/len(Winner13) ,len(Winner13.loc[Winner13['Party'] == Parties13[i]])]).T\n    Num = pd.concat([Num,temp])\n\nTop_13 = Num.rename(columns = {0: 'Party', 1:'Percentage', 2:'Seats Won'})\nTop_13 = Top_13.sort_values(by = 'Seats Won', ascending= False ) \n","ad17ff33":"NA2008 = pd.read_csv(\"..\/input\/National Assembly 2008.csv\", encoding = \"ISO-8859-1\")\nWinner08 = pd.DataFrame([])\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA08 = NA2008.loc[NA2008['ConstituencyTitle']==Const, ['Party','Votes','TotalVotes']]\n#    if NA.empty == True:\n    if NA08.empty == False:\n        MAX = (NA08.loc[NA08['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['TotalVotes']]).T\n        Winner08 = pd.concat([Winner08,temp])\nWinner08 = Winner08.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes'})\nParties08 = np.unique(Winner08.loc[:,'Party'])\nNum = pd.DataFrame([])\nfor i in range (len(Parties08)):\n    temp = pd.DataFrame([Parties08[i], len(Winner08.loc[Winner08['Party'] == Parties08[i]])\/len(Winner08) ,len(Winner08.loc[Winner08['Party'] == Parties08[i]])]).T\n    Num = pd.concat([Num,temp])\n\nTop_08 = Num.rename(columns = {0: 'Party', 1:'Percentage', 2:'Seats Won'})\nTop_08 = Top_08.sort_values(by = 'Seats Won', ascending= False )\n","469d460a":"NA2002 = pd.read_csv(\"..\/input\/National Assembly 2002 - Updated.csv\", encoding = \"ISO-8859-1\")\nWinner02 = pd.DataFrame([])\n\nfor i in range(272):\n    Const = \"NA-%d\"%(i+1)\n    NA02 = NA2002.loc[NA2002['Constituency_title']==Const, ['Party','Votes','TotalVotes']]\n#    if NA.empty == True:\n    if NA02.empty == False:\n        MAX = (NA02.loc[NA02['Votes'].idxmax()])\n        temp = pd.DataFrame([Const,MAX['Party'],MAX['Votes'],MAX['TotalVotes']]).T\n        Winner02 = pd.concat([Winner02,temp])\nWinner02 = Winner02.rename(columns = {0:'Constituency', 1:'Party', 2:'Votes', 3:'TotalVotes'})\nParties02 = np.unique(Winner02.loc[:,'Party'])\nNum = pd.DataFrame([])\nfor i in range (len(Parties02)):\n    temp = pd.DataFrame([Parties02[i], len(Winner02.loc[Winner02['Party'] == Parties02[i]])\/len(Winner02) ,len(Winner02.loc[Winner02['Party'] == Parties02[i]])]).T\n    Num = pd.concat([Num,temp])\n\nTop_02 = Num.rename(columns = {0: 'Party', 1:'Percentage', 2:'Seats Won'})\nTop_02 = Top_02.sort_values(by = 'Seats Won', ascending= False )","bbeb684c":"plt.figure(figsize=(5,5))\nplt.title('Elections 2002')\nlabels02 = Top_02.loc[:,'Party']\nvalues02 = Top_02.loc[:,'Percentage']\nexplode = (0.05, 0, 0, 0, 0 , 0 )  # explode 1st slice\n\nplt.pie(values02[0:6], labels=labels02[0:6],explode=explode, shadow=True, startangle=90, autopct='%1.1f%%')\nplt.show()\n\nplt.figure(figsize=(5,5))\nplt.title('Elections 2008')\nlabels08 = Top_08.loc[:,'Party']\nvalues08 = Top_08.loc[:,'Percentage']\n\n\nplt.pie(values08[0:6], labels=labels08[0:6], explode=explode, shadow=True, startangle=90, autopct='%1.1f%%')\nplt.show()\n\nplt.figure(figsize=(5,5))\nplt.title('Elections 2013')\nlabels13 = Top_13.loc[:,'Party']\nvalues13 = Top_13.loc[:,'Percentage']\n\nplt.pie(values13[0:6], labels=labels13[0:6],explode=explode, shadow=True, startangle=90, autopct='%1.1f%%')\nplt.show()\n\nplt.figure(figsize=(5,5))\nplt.title('Elections 2018')\nlabels18 = Top_18.loc[:,'Part']\nvalues18 = Top_18.loc[:,'Percentage']\nplt.pie(values18[0:6], labels=labels18[0:6],explode=explode, shadow=True, startangle=90, autopct='%1.1f%%')\nplt.show()","bf7ebe1d":"**Added 2018 data in visualization. No other changes to the original contribution from original poster."}}