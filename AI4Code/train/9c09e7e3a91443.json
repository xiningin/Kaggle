{"cell_type":{"dfcbe0c4":"code","1ec6902f":"code","484ba107":"code","85c60e9f":"code","a32eaea1":"code","a1e4ec22":"code","68daa5ce":"code","4d37ca7a":"code","4375c65f":"code","0354890b":"code","38769b18":"code","053696d6":"code","5014a2a6":"code","a47b5f03":"code","da2bdd3e":"code","c7bdcb67":"code","a2ddfb77":"code","49c2ebfd":"code","e4fa05f6":"code","7efbb939":"code","be681434":"code","f1dcca29":"code","0b19529f":"code","6c3f9da3":"code","d7a0f2c5":"code","bdfcb4b0":"code","2bf933d2":"code","37bd26ce":"code","79b51957":"code","917cf89b":"code","c5b98185":"code","325fbc16":"code","f396445e":"code","ba9e7726":"code","6bf8e823":"code","e8e3b270":"code","c5de4c15":"code","a2b97219":"code","9fd0fd79":"code","c9686235":"code","9a6c7a81":"code","76592ca2":"code","69c92cd7":"code","4fc97f15":"code","a45d3360":"code","5bfcc6e7":"code","a83e7b8e":"code","e80926b9":"code","4035a5b5":"code","b2a6ef15":"code","c9680d0f":"code","6b643a4f":"markdown","6c06e001":"markdown","924015f3":"markdown","6e43f431":"markdown","0af2704b":"markdown","f7062ce9":"markdown","f1e329b9":"markdown","150580be":"markdown"},"source":{"dfcbe0c4":"import numpy as np \nimport pandas as pd \nfrom matplotlib import pyplot as pp\n%matplotlib inline\nfrom category_encoders import CountEncoder\nimport itertools\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import mean_absolute_error\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1ec6902f":"population = pd.read_csv('\/kaggle\/input\/world-bank-data-for-nigeria\/Data Science Project\/Population_Stats.csv',\n                         engine = 'python')\npopulation.head()","484ba107":"population = population.drop(population.index[:3])\npopulation.columns = population.iloc[0,:]\npopulation = population.drop(population.index[0])\npopulation.head()","85c60e9f":"population.reset_index(drop = True, inplace = True)\npopulation.head()","a32eaea1":"values = population.columns[4:]\nX = pd.melt(population, id_vars = 'Country Name',value_vars = values, var_name = 'Year', \n            value_name = 'Population' )\nX.head()","a1e4ec22":"population_ng = X.loc[X['Country Name'] == 'Nigeria']\npopulation_ng.reset_index(drop = True, inplace = True)\npopulation_ng.head()","68daa5ce":"labour_force = pd.read_csv('\/kaggle\/input\/world-bank-data-for-nigeria\/Data Science Project\/Labour_Force_Stats.csv', \n                           engine = 'python')\nlabour_force.head()","4d37ca7a":"labour_force = labour_force.drop(labour_force.index[:3])\nlabour_force.columns = labour_force.iloc[0,:]\nlabour_force = labour_force.drop(labour_force.index[0])\nlabour_force.head()","4375c65f":"labour_force.reset_index(drop = True, inplace = True)\nlabour_force.head()","0354890b":"Y = pd.melt(labour_force, id_vars = 'Country Name',value_vars = values, var_name = 'Year', \n            value_name = 'Labour Force' )\nY.head()","38769b18":"labour_force_ng = Y.loc[Y['Country Name'] == 'Nigeria']\nlabour_force_ng.reset_index(drop = True, inplace = True)\nlabour_force_ng.head()","053696d6":"literacy = pd.read_csv('\/kaggle\/input\/world-bank-data-for-nigeria\/Data Science Project\/Adult_Literacy_Stats.csv',\n                       engine = 'python')\nliteracy.head()","5014a2a6":"literacy = literacy.drop(literacy.index[:3])\nliteracy.columns = literacy.iloc[0,:]\nliteracy = literacy.drop(literacy.index[0])\nliteracy.head()","a47b5f03":"literacy.reset_index(drop = True, inplace = True)\nliteracy.head()","da2bdd3e":"Z = pd.melt(literacy, id_vars = 'Country Name',value_vars = values, var_name = 'Year', \n            value_name = 'Literacy')\nZ.head()","c7bdcb67":"literacy_ng = Z.loc[Z['Country Name'] == 'Nigeria']\nliteracy_ng.reset_index(drop = True, inplace = True)\nliteracy_ng.head()","a2ddfb77":"manufacturing = pd.read_csv('\/kaggle\/input\/world-bank-data-for-nigeria\/Data Science Project\/Manufacturing_Stats.csv',\n                            engine = 'python')\nmanufacturing.head()","49c2ebfd":"manufacturing = manufacturing.drop(manufacturing.index[:3])\nmanufacturing.columns = manufacturing.iloc[0,:]\nmanufacturing = manufacturing.drop(manufacturing.index[0])\nmanufacturing.head()","e4fa05f6":"manufacturing.reset_index(drop = True, inplace = True)\nmanufacturing.head()","7efbb939":"A = pd.melt(manufacturing, id_vars = 'Country Name',value_vars = values, var_name = 'Year', \n            value_name = '% of Manufacturing_Value_Added')\nA.head()","be681434":"manufacturing_ng = A.loc[A['Country Name'] == 'Nigeria']\nmanufacturing_ng.reset_index(drop = True, inplace = True)\nmanufacturing_ng.head()","f1dcca29":"unemployment = pd.read_csv('\/kaggle\/input\/world-bank-data-for-nigeria\/Data Science Project\/Unemployment_Stats.csv', \n                           engine = 'python')\nunemployment.head()","0b19529f":"unemployment = unemployment.drop(unemployment.index[:3])\nunemployment.columns = unemployment.iloc[0,:]\nunemployment = unemployment.drop(unemployment.index[0])\nunemployment.head()","6c3f9da3":"unemployment.reset_index(drop = True, inplace = True)\nunemployment.head()","d7a0f2c5":"B = pd.melt(unemployment, id_vars = 'Country Name',value_vars = values, var_name = 'Year', \n            value_name = 'Unemployment Rate')\nB.head()","bdfcb4b0":"unemployment_ng = B.loc[B['Country Name'] == 'Nigeria']\nunemployment_ng.reset_index(drop = True, inplace = True)\nunemployment_ng.head()","2bf933d2":"first_merge = pd.merge(population_ng, labour_force_ng, how = 'outer', on = 'Year')\nsecond_merge = pd.merge(first_merge, literacy_ng, how = 'outer', on = 'Year')\nthird_merge = pd.merge(second_merge, manufacturing_ng, how = 'outer', on = 'Year')\nfinal_merge = pd.merge(third_merge, unemployment_ng, how = 'outer', on = 'Year')\nng_df = final_merge.drop(['Country Name_x', 'Country Name_x', 'Country Name_y', \n                         'Country Name_y', 'Country Name'], axis = 1)\nng_df.head()","37bd26ce":"ng_df.dtypes","79b51957":"ng_df.head()","917cf89b":"ng_df.isna().sum()","c5b98185":"pp.figure(figsize = (10, 8))\npp.plot(ng_df['Year'][-10:], ng_df['Population'][-10:])\npp.xlabel('Year')\npp.ylabel('Population')\npp.title(\"Population Growth Over the last decade\")","325fbc16":"pp.figure(figsize = (10, 8))\npp.plot(ng_df['Year'][-10:], ng_df['Labour Force'][-10:])\npp.xlabel('Year')\npp.ylabel('Labour Force')\npp.title(\"Labour Force Growth Over the last decade\")","f396445e":"pp.figure(figsize=(10.5, 8))\npp.plot(ng_df['Year'][30:58:], ng_df['% of Manufacturing_Value_Added'][30:58])\npp.xlabel('Year')\npp.ylabel('Manufacturing Value Added')\npp.title(\"Manufacturing value created from 1992 to 2016\")","ba9e7726":"updated_unemployment_rate = [3.638, 3.673, 3.743, 3.756, 3.759, 3.77, 3.761, 3.758, 3.793, 3.78,3.778,3.817,3.821,3.786,\n         3.74,3.646, 3.565, 3.539,3.722,3.767,3.77,3.735,3.703,4.562,4.311,7.06,8.389,8.243,8.096]\nng_df['Unemployment Rate'][31:60] = updated_unemployment_rate","6bf8e823":"pp.figure(figsize = (10, 8))\nYears = ['2013', '2014', '2015', '2016', '2017', '2018', '2019']\ny_pos = np.arange(len(Years))\npp.bar(y_pos,ng_df['Unemployment Rate'][53:60])\npp.xticks(y_pos, Years)\npp.title('Unemployment Rate from 2013 to 2019')\npp.show()","e8e3b270":"cols = ['Year', '% of Manufacturing_Value_Added', 'Labour Force', 'Unemployment Rate']\n\n\nng_final_df = ng_df[cols][31:60]\nng_final_df.head()","c5de4c15":"import itertools\n\ndef next_row(data):\n    \n    a, b = itertools.tee(data)\n    next(b, None)\n    return list(zip(a,b))\n\ndef change(data):\n    nextrow = next_row(data['% of Manufacturing_Value_Added'])\n    new_list = [data.iloc[0]['% of Manufacturing_Value_Added']]\n    for i in nextrow:\n        answer = (i[1] - i[0])\/i[0]\n        new_list.append(answer)\n    return new_list","a2b97219":"ng_final_df['% increase in Manufacturing_Value_Added'] = change(ng_final_df)\nng_final_df['% increase in Manufacturing_Value_Added'] = ng_final_df['% increase in Manufacturing_Value_Added'].fillna(0)\nng_final_df.drop(['% of Manufacturing_Value_Added'], axis = 1, inplace = True)\nng_final_df = ng_final_df.drop(ng_final_df.index[0])","9fd0fd79":"interactions_list = list(itertools.combinations(ng_final_df.columns,2))\nfor i in interactions_list:\n    if not 'Unemployment Rate' in i:\n        ng_final_df[i[0] + '_' + i[1]] = ng_final_df[i[0]].astype(str) + '_' + ng_final_df[i[1]].astype(str)\nng_final_df.head()","c9686235":"valid_fraction = 0.1\nng_final_df = ng_final_df.sort_values('Year')\nvalid_rows = int(len(ng_final_df) * valid_fraction)\ntrain = ng_final_df[:-valid_rows]\n# valid size == test size, last two sections of the data\nvalid = ng_final_df[-valid_rows:]\n\ncat_cols = [col for col in ng_final_df.columns if ng_final_df[col].dtype == 'object']\nprint('The categorical columns: \\t')\nprint(cat_cols)","9a6c7a81":"print(train)\nprint('-'*40)\nprint(valid)","76592ca2":"count_enc = CountEncoder(cols = cat_cols)\n\n\ntrain_encoded = count_enc.fit_transform(train[cat_cols])\ntrain = train.join(train_encoded.add_suffix('_count'))\ntrain.drop(cat_cols, axis=1, inplace = True)\n\n\nvalid_encoded = count_enc.fit_transform(valid[cat_cols])\nvalid = valid.join(valid_encoded.add_suffix('_count'))\nvalid.drop(cat_cols, axis=1, inplace = True)\n\nfeatures = [col for col in train.columns if col != 'Unemployment Rate']\n\nmodel = DecisionTreeRegressor(max_depth = 1, random_state = 0)\nmodel.fit(train[features], train['Unemployment Rate'])\n\npreds = model.predict(valid[features])\nerror = mean_absolute_error(preds,valid['Unemployment Rate'])\nerror","69c92cd7":"pp.figure(figsize=(10.5, 8))\npp.plot(ng_final_df['Year'], ng_final_df['% increase in Manufacturing_Value_Added'])\npp.xlabel('Year')\npp.ylabel('Increase Manufacturing Value Added')\npp.title(\"Change in Manufacturing value created from 1992 to 2019\")","4fc97f15":"ng_experiment = pd.DataFrame({'Year': [2020,2021, 2022, 2023, 2024], 'Labour Force':\n                            [61174048,62502776,63860366,65246432,66663615], \n                             '% increase in Manufacturing_Value_Added': [1,1,1,1,1]})\nnew_interactions_list = list(itertools.combinations(ng_experiment.columns,2))\nfor i in new_interactions_list:\n    ng_experiment[i[0] + '_' + i[1]] = ng_experiment[i[0]].astype(str) + '_' + ng_experiment[i[1]].astype(str)\nng_experiment.head()","a45d3360":"X_test = ng_experiment\nX_test_encoded = count_enc.fit_transform(X_test[cat_cols])\nX_test = X_test.join(X_test_encoded.add_suffix('_count'))\nX_test.drop(cat_cols, axis = 1, inplace = True)\n\npreds = model.predict(X_test)\npreds","5bfcc6e7":"final_df = pd.DataFrame({'Year': [2019,2020,2021, 2022, 2023, 2024], 'Labour Force':\n                            [59873566, 61174048, 62502776,63860366,65246432,66663615], \n                             '% increase in Manufacturing_Value_Added': [0,1,1,1,1,1]})\nfinal_df['Unemployment Rate'] = [8.096, 7.7245, 7.7245, 7.7245, 7.7245, 7.7245]\nfinal_df","a83e7b8e":"pp.figure(figsize = (10, 8))\nnew_Years = ['2019', '2020', '2021', '2022', '2023', '2024']\nnew_y_pos = np.arange(len(new_Years))\npp.bar(new_y_pos,final_df['Unemployment Rate'])\npp.xticks(new_y_pos, new_Years)\npp.title('Predicted Unemployment Rate with increase in Manufacturing Value created in Tech Industry')\npp.show()","e80926b9":"power_bi_df = ng_final_df.copy()","4035a5b5":"power_bi_df.columns","b2a6ef15":"power_bi_df.drop(['Year_Labour Force', 'Year_% increase in Manufacturing_Value_Added',\n                 'Labour Force_% increase in Manufacturing_Value_Added'], axis = 1, inplace = True)\npower_bi_df.to_csv('power_bi_df.csv')","c9680d0f":"final_df.to_csv('predicted_df.csv')","6b643a4f":"# Data Reading and Managment","6c06e001":"# Feature Engineering and Machine Learning","924015f3":"***Luckily found updated values for unemployment rate going back to 1991***","6e43f431":"# Final Analysis ","0af2704b":"# Working with extremely small datasets\n\n* Working with extrememly small datasets can be quite tricky and a lot of things come into play\n* In this example, I work with a dataset from the WorldBank website to determine if increasing manufacturing value in the tech industry will help reduce the unemployment rate within the country\n* Some things to note, the model used in this example has an error of approxmiately 0.45 ","f7062ce9":"# Experimenting with the % increase in Manufacturing_Value_Added variable","f1e329b9":"# Let's begin by importing the necessary libraries","150580be":"# Data Exploration and Analysis"}}