{"cell_type":{"845944b7":"code","fe153d4a":"code","7f11557f":"code","cff16ffc":"code","3981aec3":"code","2f7feed9":"code","427dd54e":"code","003908b5":"code","3c7cf67d":"code","681637b0":"markdown","a0d7b3b0":"markdown","069bd203":"markdown","5766083c":"markdown","32a22b65":"markdown","e8cebdcf":"markdown","19f80173":"markdown","75b29463":"markdown"},"source":{"845944b7":"import numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('..\/input\/rsna-intracranial-hemorrhage-detection\/stage_1_train.csv')","fe153d4a":"df.head(10)","7f11557f":"def get_id(s):\n    s = s.split('_')\n    return 'ID_' + s[1]\n\ndef get_hemorrhage_type(s):\n    s = s.split('_')\n    return s[2]\n    \ndf['Image_ID'] = df.ID.apply(get_id)\ndf['Hemhorrhage_Type'] = df.ID.apply(get_hemorrhage_type)\n\ndf.set_index('Image_ID')","cff16ffc":"df.head(10)","3981aec3":"from os import listdir\nfrom os.path import isfile, join\nfrom pathlib import Path\n\n# To read medical images.\nimport pydicom\n\nimport matplotlib.pyplot as plt\n\ntrain_images_dir = Path('..\/input\/rsna-intracranial-hemorrhage-detection\/stage_1_test_images\/')\ntrain_images = [str(train_images_dir \/ f) for f in listdir(train_images_dir) if isfile(train_images_dir \/ f)]","2f7feed9":"train_images[0]","427dd54e":"ds = pydicom.dcmread(train_images[0])\nim = ds.pixel_array\n\nplt.imshow(im, cmap=plt.cm.gist_gray);","003908b5":"fig=plt.figure(figsize=(15, 10))\ncolumns = 5; rows = 4\nfor i in range(1, columns*rows +1):\n    ds = pydicom.dcmread(train_images[i])\n    fig.add_subplot(rows, columns, i)\n    plt.imshow(ds.pixel_array, cmap=plt.cm.gist_gray)\n    fig.add_subplot","3c7cf67d":"import seaborn as sns\n\nsns.countplot(df.Label)","681637b0":"Here is some initial exploratory data analysis I did for [RSNA Intracranial Hemorrhage Detection competition](https:\/\/www.kaggle.com\/c\/rsna-intracranial-hemorrhage-detection).\n\nBits and pieces were taken from [Marco Vasquez's EDA kernel](https:\/\/www.kaggle.com\/marcovasquez\/basic-eda-data-visualization), so give him a shoutout! That said, a vast majority of the code is my own, simply to provide a better understanding of the data. I will likely update this notebook as more insights become apparent.\n\nAs I have no medical expertise, I will avoid discussing medical aspecs of the data. A vast majority of the medical imaging I am unable to read, and I will be using strictly ML methods to detect any anomolies.","a0d7b3b0":"As described in the \"Data\" section of this competition, the column `ID` is broken up as follows:\n\n```\nID_(Patient ID)_(Hemorrhage Type)\n```\n\n* We want to get this in a slightly different form, for ease of lookup","069bd203":"# Statistics\n\nNow, let us get a better idea of some of the data we're working with","5766083c":"As you can see, images are stored in the following format.\n\n```\nstage_1_test_images\/ID_(Patient Id).dcm\n```\n\nThis is percisely the reason why we generated the new columns in the previous section. `.dcm` files, also called DICOM images, is a [specialized format for storing medical images](https:\/\/en.wikipedia.org\/wiki\/DICOM).\n\nWe can load them up using the [pydicom library](https:\/\/pydicom.github.io\/pydicom\/stable\/index.html).","32a22b65":"All I did here is added two new columns. `Image_ID` (which makes loading a medical image in memory relatively easy) and `Hemhorrhage_Type`, which will tell us what we're looking for.","e8cebdcf":"Let us take a look at one image to see what we're dealing with.","19f80173":"# Medical Images\n\nNow let us take a look at our medical images.","75b29463":"# Training Labels\n\nLet us take a look at our training labels."}}