{"cell_type":{"ddce5737":"code","1d72db35":"code","1ee1fc11":"code","98b3f806":"code","814901e3":"code","e781e0e7":"code","728274b2":"code","d8a2f099":"code","22621187":"code","130d5ae2":"code","2a113655":"code","85a87fe6":"code","4f51d341":"code","93d522ad":"code","7a513f05":"code","24cf0cf3":"markdown","91cae62c":"markdown","7a4279d5":"markdown","765647ab":"markdown","e0db6b4e":"markdown","0331b77a":"markdown","a2a65982":"markdown","4615ef1c":"markdown","79c60c18":"markdown"},"source":{"ddce5737":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport geopandas as gpd \nimport geoplot as gplt \nimport geoplot.crs as gcrs \nimport mapclassify as mc\nfrom matplotlib.ticker import MaxNLocator\nimport matplotlib.ticker as mtick\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","1d72db35":"df=pd.read_csv(\"..\/input\/the-fincen-files\/transactions_map.csv\", index_col='id')\nfmt = '${x:,.0f}'\ntick = mtick.StrMethodFormatter(fmt)\nncols=2\ndf['begin_date']=pd.to_datetime(df['begin_date'])\ndf['end_date']=pd.to_datetime(df['end_date'])\ndf['year']=df['begin_date'].dt.year\n##worldmaps of occurrence##\nworld = gpd.read_file(gplt.datasets.get_path('world'))\nworld = world[world.id !='-99']\nworld_points=world.copy()\nworld_points['centroid'] = world_points.centroid\nworld_points = world_points.set_geometry('centroid')","1ee1fc11":"from shapely.geometry import MultiPoint\ncountry_sum=(df.groupby(['originator_iso','beneficiary_iso'])['amount_transactions'].agg(sum)\/100000).reset_index()\nmap_network = world_points.merge(country_sum, left_on=\"id\", right_on=\"originator_iso\")\nmap_network = world_points.merge(map_network, left_on=\"id\", right_on=\"beneficiary_iso\")","98b3f806":"def mapST(df,dire):\n    country_sum=df.groupby([dire+'_iso'])['amount_transactions'].agg(sum)\/100000\n    map_st = world.merge(country_sum, left_on=\"id\", right_on=dire+'_iso')\n    scheme = mc.UserDefined(map_st['amount_transactions'], bins=[2500, 5000, 10000, 50000])\n    gplt.choropleth(\n        map_st, hue='amount_transactions',\n        edgecolor='lightgray', linewidth=1,\n        cmap='rainbow', legend=True, legend_kwargs={'loc': 'lower left', 'fontsize':15},\n        scheme=scheme, figsize=(15,15),\n        legend_labels=['< $2,500 million','$2,500-5,000 million', '$5,000-10,000 million', '$10,000-50,000 million',\n             '>$50,000 million'])\n    plt.title(\"Sum of ST by Country between 2000 and 2017\",fontsize=20)\n    plt.show()","814901e3":"mapST(df,'beneficiary')","e781e0e7":"def CountrySTFlow(df, dire, country, top):\n    df2=df[df[dire+'_iso']==country]\n    df2['multi'] = [MultiPoint([x, y]) for x, y in zip(df2.centroid_y, df2.centroid_x)]\n    df2=df2.set_geometry('multi')\n    df2=df2.nlargest(top, columns=['amount_transactions'])\n    scheme = mc.JenksCaspall(df2['amount_transactions'])\n    lc=[f'${x:,.0f} million' for x in df2['amount_transactions']] \n    ax = gplt.sankey(df2, projection=gcrs.WebMercator(),\n                hue='amount_transactions', scheme=scheme, cmap='Dark2', \n                legend=True,legend_kwargs={'loc': 'lower left', 'fontsize':10},\n                legend_labels=lc, figsize=(12,12), linestyles=':')\n    gplt.polyplot(world, ax=ax, facecolor='lightgray', edgecolor='white')\n    plt.title(f\"Sum of top {top} ST of {country} {dire.title()} between 2000 and 2017\",fontsize=15)\n    plt.show()   \n","728274b2":"CountrySTFlow(map_network, 'beneficiary', 'USA', 5)","d8a2f099":"def SumNumberYearlyST (df):\n    labels_year, frequencies_year = np.unique(df['year'][~np.isnan(df['year'])], return_counts = True)\n    #labels=labels_year.astype(int)\n    plt.figure(figsize = (10,10))\n    plt.plot(labels_year,frequencies_year)\n    plt.title('Number of Suspicious Transactions per Year')\n    plt.xticks(np.arange(min(labels_year), max(labels_year)+2, 2))\n    plt.yticks(np.arange(min(frequencies_year)-1,max(frequencies_year),50))\n    plt.xlabel('Year')\n    plt.ylabel('Number of ST')\n    plt.show()","22621187":"SumNumberYearlyST (df)","130d5ae2":"def NumberST(df, dire, top): \n    labels_org_con, frequencies_org_con =np.unique(df[dire+'_iso'], return_counts = True)\n    count_sort_ind = np.argsort(-frequencies_org_con)\n    plt.figure(figsize = (15,15))\n    plt.bar(labels_org_con[count_sort_ind][:top],frequencies_org_con[count_sort_ind][:top])\n    plt.title(f'Number of Suspicious Transactions in {dire} Country'.title())\n    plt.yticks(np.arange(min(frequencies_org_con[count_sort_ind][:top])-20,max(frequencies_org_con),100))\n    plt.xlabel(f'Top {top} {dire} Country'.title())\n    plt.ylabel('Number of ST')\n    plt.show()","2a113655":"NumberST(df,'originator', 5)  ","85a87fe6":"def HighestST(df, dire, top):\n    df1=(df.groupby([dire +'_iso'])['amount_transactions'].sum()\/1000000).round(0).nlargest(top).reset_index()\n    ax=df1.plot.bar(dire +'_iso', 'amount_transactions', fontsize=15,\n                    figsize = (15,15),title=f'Amount of Suspicious Transactions in {dire} Country'.title(),\n                    xlabel=f'Top {top} {dire} Country'.title(),ylabel='Amound of ST')\n    ax.yaxis.set_major_formatter(tick) ","4f51d341":"HighestST(df,'beneficiary',5 )","93d522ad":"##by transaction amount over year\ndef STyearly(df,dire, top):\n    df1=(df.groupby([dire +'_iso'])['amount_transactions'].sum()\/1000000).round(0).nlargest(top).reset_index()\n    toplist=list(df1[dire+'_iso'])\n    df2=df[['year', dire+'_iso','amount_transactions']].loc[df[dire+'_iso'].isin(toplist)]\n    top_year=(df2.groupby([dire+'_iso','year'])['amount_transactions'].sum()\/1000000).round(2).reset_index()\n    top_year.set_index('year', inplace=True)\n    top_year.index.astype(int)\n    grouped = top_year.groupby(dire+'_iso')\n    nrows = int(np.ceil(grouped.ngroups\/ncols))\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(15,15), sharex=True, sharey=True)\n    for (key, ax) in zip(grouped.groups.keys(), axes.flatten()):\n        grouped.get_group(key).plot(ax=ax)\n        ax.legend([key],loc='upper right', frameon=False)\n        ax.yaxis.set_major_formatter(tick) \n    ax.xaxis.set_major_locator(MaxNLocator(integer=True)) \n    plt.show() ","7a513f05":"STyearly(df,'beneficiary', 10)","24cf0cf3":"\"dire\" is the direction of stranscations, either 'originator' or 'beneficiary', \"top\" (int) is the highest ST occurrence.","91cae62c":"**Top N yearly suspicious transaction countries**","7a4279d5":"**Merge transaction data with map data**","765647ab":"**Number of suspicious transactions per year**","e0db6b4e":"**Rank of suspicious transaction numbers by direction.**","0331b77a":"**Map of suspicious transactions flowing in to\/out of the US**","a2a65982":"**Read transaction data and map data**","4615ef1c":"**Top N countries of suspicious transactions flowing in\/out the US**","79c60c18":"**Rank of suspicious transaction amounts by direction.**"}}