{"cell_type":{"9ba7f101":"code","ba4afeab":"code","75054918":"code","bf80bfb0":"code","d5de2563":"code","4cc6a397":"code","3761d44a":"code","5ad7c261":"code","3101beca":"code","8a7eac90":"code","cf47dffe":"code","b4616584":"code","ffed4c53":"code","d0d220a0":"code","37c8927a":"markdown","ff947a13":"markdown","7087b836":"markdown","6a13ec04":"markdown","223ab7b5":"markdown","899855a1":"markdown"},"source":{"9ba7f101":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nmapbox_access_token='pk.eyJ1IjoiYXFzYXNhZGFmIiwiYSI6ImNrc241ajRubzA3NjYydmswaXJ1bHlrYTMifQ.WHon85sWay7z-RpuQDKX1w'\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ba4afeab":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff\nfrom plotly.subplots import make_subplots\nimport missingno as msno\nfrom urllib.request import urlopen\nimport json\nimport plotly.io as pio\nimport plotly.offline as pyo\npyo.init_notebook_mode()\n","75054918":"fig = go.Figure(go.Scattergeo())\nfig.update_geos(\n    visible=True, resolution=110, scope=\"usa\",\n    showcountries=True, countrycolor=\"Black\",\n    showsubunits=True, subunitcolor=\"steelblue\"\n)\nfig.update_layout(height=300, margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},paper_bgcolor='rgb(248, 248, 255)',\n     plot_bgcolor='rgb(248, 248, 255)',)\nfig.show()","bf80bfb0":"df = pd.read_csv('\/kaggle\/input\/us-cities\/uscities.csv')\ndf.head()","d5de2563":"df.shape","4cc6a397":"df.info()","3761d44a":"df.describe()","5ad7c261":"df.isna().sum()","3101beca":"df['county_fips'] = df['county_fips'].apply(lambda x:str(x) if x>=10000 else '0'+str(x))","8a7eac90":"with urlopen('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/geojson-counties-fips.json') as response:\n    counties = json.load(response)","cf47dffe":"fig = px.scatter_mapbox(df, lat=\"lat\", lon=\"lng\", hover_name=\"city\", hover_data=[\"state_name\", \"population\"], \n                        color=\"population\",\n                        size=\"population\", color_continuous_scale=px.colors.sequential.Rainbow, size_max=40,\n                        zoom=3, height=600, mapbox_style=\"open-street-map\",width=1000,\n                       title='City Population')\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},paper_bgcolor='rgb(248, 248, 255)',\n     plot_bgcolor='rgb(248, 248, 255)',)\nfig.show()","b4616584":"fig = px.scatter_mapbox(df, lat=\"lat\", lon=\"lng\", hover_name=\"city\", hover_data=[\"state_name\", \"density\"], \n                        color=\"density\",\n                        size=\"density\", color_continuous_scale=px.colors.sequential.Sunset, size_max=40,\n                        zoom=3, height=600,width=1000, mapbox_style=\"open-street-map\",\n                       )\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},paper_bgcolor='rgb(248, 248, 255)',\n     plot_bgcolor='rgb(248, 248, 255)',)\nfig.show()","ffed4c53":"fig = go.Figure(go.Choroplethmapbox(geojson=counties, locations=df.county_fips, z=df.ranking,\n                                    colorscale=\"fall\", zmin=1, zmax=3, marker_line_width=0))\nfig.update_layout(mapbox_style=\"light\", mapbox_accesstoken=mapbox_access_token,width=1000,\n                  mapbox_zoom=3, mapbox_center = {\"lat\": 37.0902, \"lon\": -95.7129})\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},paper_bgcolor='rgb(248, 248, 255)',\n     plot_bgcolor='rgb(248, 248, 255)',)\nfig.show()","d0d220a0":"militry_base = df[df['military'] == True]\n\nfig = px.scatter_mapbox(militry_base, lat=\"lat\", lon=\"lng\", hover_name=\"city\", hover_data=[\"state_name\", \"military\"],\n                        color_discrete_sequence=[\"gold\"], zoom=4, height=700,width=1000,)\nfig.update_layout(mapbox_style=\"dark\", mapbox_accesstoken=mapbox_access_token)\nfig.update_layout(margin={\"r\":0,\"t\":0,\"l\":0,\"b\":0},paper_bgcolor='rgb(248, 248, 255)',\n     plot_bgcolor='rgb(248, 248, 255)',)\nfig.show()","37c8927a":"# Ranking Of Cities Of US:","ff947a13":"# About Data:\n\n**City:** The name of the city\/town.\n\n**County Fips:** The 5-digit FIPS code for the primary county. The first two digits correspond to the state's FIPS code.\n\n**Lat:** The latitude of the city\/town.\n\n**Lng:** The longitude of the city\/town.\n\n**Population:** An estimate of the city's urban population.\n\n**Density:** The estimated population per square kilometer.\n\n**Source:** For some cities, our data is generated from a polygon representing the city, for others we simply have a point.\n\n**Military:** TRUE if this place is a military establishment such as a fort or base.\n\n**Incorporated:** TRUE if the place is a city\/town. FALSE if the place is just a commonly known name for a populated area.\n\n**Ranking:** An integer from 1-5 that captures the importance of a city (1 is most important, 5 least important).\n\n**Timezone:** The city's time zone in the tz database format. (e.g. America\/Los_Angeles)\n","7087b836":"# United States","6a13ec04":"# Military:\n\n**Military base across US Cities**","223ab7b5":"# Population:","899855a1":"# Density:"}}