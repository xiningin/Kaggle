{"cell_type":{"9b2afe15":"code","492506c2":"code","aff5fade":"code","cb4bc1ef":"code","ba23b7dd":"code","11342c9e":"code","bbd76c23":"code","0b492b8b":"code","c6dc57ac":"code","05d69398":"code","3e4e3985":"code","0e5607bf":"code","f2dccb37":"code","2cd8ac25":"code","3dd00aa9":"code","07ab1096":"code","c4bc3fc1":"code","25aabfd9":"code","b76874f4":"code","a1dd4c2a":"code","a8c3e7c6":"code","a4061912":"code","bef26809":"code","abd783bc":"code","b42af99c":"code","eac68bc4":"code","9ef3413d":"code","35b02deb":"code","89963022":"code","7046a7f8":"code","8c13135c":"code","f6c82a59":"code","f9c85381":"code","75fbd137":"code","44ad8468":"code","ce6d227f":"code","775c7a08":"markdown","e19bea5e":"markdown","0e329b4a":"markdown","a6f2b525":"markdown","2d0b3d87":"markdown","af00880a":"markdown","4f68bd4a":"markdown","3510f42e":"markdown","faf07cd0":"markdown","f0c987be":"markdown","c278074b":"markdown","357f80bf":"markdown","d01af2da":"markdown","eed510c0":"markdown","8683c843":"markdown","324142cd":"markdown"},"source":{"9b2afe15":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression","492506c2":"df = pd.read_csv('..\/input\/used-car-dataset\/train.csv')","aff5fade":"df.head()\n# As can be seen we have got 12 columns including the vehicle id.","cb4bc1ef":"df = df.drop(['v.id','on road old','on road now','condition', 'economy'], axis = 1)","ba23b7dd":"df.describe()","11342c9e":"df.isnull().sum()","bbd76c23":"sns.histplot(df['current price'], kde = True)","0b492b8b":"sns.histplot(df['torque'], kde = True)","c6dc57ac":"sns.histplot(df['hp'], kde = True)","05d69398":"sns.histplot(df['top speed'], kde = True)","3e4e3985":"sns.histplot(df['years'], kde = True)","0e5607bf":"f, (ax1,ax2,ax3,ax4,ax5,ax6) = plt.subplots(1,6,sharey = True, figsize = (20,4))\nax1.scatter(df['years'], df['current price'])\nax1.set_title('Years and Current Price')\nax2.scatter(df['km'], df['current price'])\nax2.set_title('km and Current Price')\nax3.scatter(df['rating'], df['current price'])\nax3.set_title('Rating and Current Price')\nax4.scatter(df['top speed'], df['current price'])\nax4.set_title('Top Speed and Current Price')\nax5.scatter(df['hp'], df['current price'])\nax5.set_title('Hp and Current Price')\nax6.scatter(df['torque'], df['current price'])\nax6.set_title('Torque and Current Price')","f2dccb37":"from statsmodels.stats.outliers_influence import variance_inflation_factor\nvariables  = df[['years', 'km', 'rating', 'top speed', 'hp', 'torque']]\nvif = pd.DataFrame()\nvif['VIF'] = [variance_inflation_factor(variables.values, i ) for i in range(variables.shape[1])]\nvif['features'] = variables.columns","2cd8ac25":"vif","3dd00aa9":"data_preprocessed = df.drop(['top speed', 'torque'], axis = 1)\ndata_preprocessed","07ab1096":"targets = data_preprocessed['current price']\ninputs = data_preprocessed.drop(['current price'],axis = 1)","c4bc3fc1":"from sklearn.preprocessing import StandardScaler","25aabfd9":"from sklearn.model_selection import train_test_split","b76874f4":"x_train, x_test, y_train, y_test = train_test_split(inputs, targets, test_size = 0.2, random_state = 42)","a1dd4c2a":"scaler = StandardScaler()","a8c3e7c6":"inputs_scaled = scaler.fit_transform(x_train, y_train)","a4061912":"reg = LinearRegression()\nreg.fit(x_train, y_train)","bef26809":"preds = reg.predict(x_train)","abd783bc":"sns.scatterplot(y_train,preds)","b42af99c":"sns.histplot(y_train - preds)\nplt.title('Residuals')","eac68bc4":"reg.score(x_train, y_train)","9ef3413d":"testing = reg.predict(x_test)\nplt.scatter(y_test, testing, alpha = 0.2)\nplt.xlabel('Targets')\nplt.ylabel('Predictions')","35b02deb":"df_pf = pd.DataFrame(testing, columns = ['Prediction'])\ndf_pf","89963022":"y_test = y_test.reset_index(drop = True)\ny_test.head()","7046a7f8":"df_pf['Target'] = y_test","8c13135c":"df_pf","f6c82a59":"df_pf['Residual'] = df_pf['Target'] - df_pf['Prediction']","f9c85381":"df_pf['Difference%'] = np.absolute(df_pf['Residual'] \/ df_pf['Target'] * 100)","75fbd137":"df_pf","44ad8468":"df_pf.describe()","ce6d227f":"pd.options.display.max_rows = 999\ndf_pf.sort_values(by = ['Difference%'])","775c7a08":"I will simply be dropping the features with high variance inflation factors.","e19bea5e":"## Checking the Residuals","0e329b4a":"# Used Cars Price Prediction with Linear Regression","a6f2b525":"We have a very useful function in statsmodel named 'variance_inflation_factor'. We use this function in order to see their potential multicollinearity.","2d0b3d87":"It is safe to say that our data is initially clean and ready to continue for further analysis.","af00880a":"Good news is there appears to be no missing values. This means we won't be doing a comprehensive data munging or feature engineering.","4f68bd4a":"## Model Creation","3510f42e":"Our model is able to explain the 87.2 % of the dataset, which is a good score. Now we will be testing the model's performance.","faf07cd0":"## Checking Linearity","f0c987be":"## Testing","c278074b":"# Multicollinearity","357f80bf":"## Explanatory Data Analysis","d01af2da":"I will be deleting the columns that seem unnecessary and that will not be affecting the result of our prediction.","eed510c0":"Just a few remarks while finishing.. The model is not perfect, but at least we could move away from issues such as multicollinearity and we could reach an accuracy of more than 80%.","8683c843":"This is absolutely the most fun part of the whole ML practice.","324142cd":"We are going to be creating a model that predicts the price of cars based on the provided dataset."}}