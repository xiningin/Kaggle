{"cell_type":{"4bd5b33a":"code","48c6bd03":"code","ba4181d6":"code","43b0d6f8":"code","bb5f04f4":"code","7847b2c6":"code","ac2fb929":"code","2d999de7":"code","ee51cf8d":"code","291bb5df":"code","8d4160fc":"code","1ab7ff2b":"code","33a77332":"code","b996d242":"code","85e94552":"code","143f7960":"code","921c0745":"code","cce2256d":"code","7d4d6c75":"code","b77ce268":"code","7d7a8610":"code","beecca83":"code","04a64e86":"code","1c583c23":"code","ef9a93e8":"code","4aca8bcd":"code","f082de12":"code","e2d8d633":"code","28bd35c5":"code","14d7659d":"code","09edfa4d":"code","7a248dc3":"code","fd46f4d4":"code","2daeac3a":"code","3042500f":"code","3f4ba86a":"code","ab0af776":"code","6fdae0b8":"code","461ca1b1":"code","b359cdff":"code","3002b4b4":"code","16cf30c5":"code","b4dfcc29":"code","a1a4aa0f":"code","f7ebfc72":"code","7c1fa288":"code","2b37ef7b":"code","c39d0ab2":"code","7ab898ee":"code","6d499396":"markdown","5f9237a0":"markdown","a7016765":"markdown","d39fbee0":"markdown","cc610d16":"markdown","c274aa23":"markdown","6d5335f2":"markdown","bd2a2dd8":"markdown","3a708640":"markdown","48ee3843":"markdown","a9a5fc9b":"markdown","cdda5816":"markdown","6369fae7":"markdown","ffc5ad2e":"markdown","11a652c0":"markdown","fb62f5e0":"markdown","2d7e48a7":"markdown","4c58cc9f":"markdown","10094028":"markdown","a2247358":"markdown","46b8c2b5":"markdown","ca046b57":"markdown","0e05e2e6":"markdown","59373399":"markdown","532247a0":"markdown","cd59c972":"markdown","04da6092":"markdown","06ab5108":"markdown","8659dff4":"markdown","12ef0072":"markdown","68a45293":"markdown","f41fa2d8":"markdown"},"source":{"4bd5b33a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n","48c6bd03":"import plotly.express as ply\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n","ba4181d6":"df=pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv')   \n","43b0d6f8":"df.isnull().any().sum()","bb5f04f4":"df.isna().any().sum()","7847b2c6":"df.info()","ac2fb929":"df['model'].unique()","2d999de7":"df['transmission'].unique()","ee51cf8d":"df['fuelType'].unique()","291bb5df":"corr_=df.corr()\nsns.heatmap(corr_,annot=True)","8d4160fc":"plt.figure(figsize=(17,5))\nsns.countplot(df['model'])\nplt.title('Model')","1ab7ff2b":"df_ser_=df.model.value_counts()\ndf_ser=pd.DataFrame(df_ser_)\nlabels=df['model'].unique()\nsizes=df_ser['model']","33a77332":"fig1,ax1=plt.subplots()\nax1.pie(sizes,explode=None,labels=labels,autopct='%1.1f%%',shadow=True,startangle=90)\nax1.axis('equal')\nplt.show()","b996d242":"sns.countplot(df['fuelType'])\nplt.title('Fuel Type')","85e94552":"sns.countplot(df['transmission'])\nplt.title('Transmission type')","143f7960":"sns.countplot(df['engineSize'])\nplt.title('Engine Size')","921c0745":"plt.figure(figsize=(20,10))\nplt.scatter(df['model'],df['price'])\nplt.title('Model Vs Fuel type')\nplt.show()","cce2256d":"plt.figure(figsize=(50,30))\nsns.jointplot(x='engineSize',y='mpg',data=df)\nplt.xlabel('engineSize')\nplt.ylabel('mpg')\nplt.grid()\nplt.show()","7d4d6c75":"plt.figure(figsize=(10,10))\nplt.scatter(df['fuelType'],df['mpg'])\nplt.xlabel('Fuel Type')\nplt.ylabel('MPG')\nplt.title('Fuel type vs MPG')\nplt.show()","b77ce268":"plt.figure(figsize=(20,10))\nplt.scatter(df['model'],df['mpg'])\nplt.xlabel('Model')\nplt.ylabel('MPG')\nplt.title('Model vs MPG')\nplt.show()","7d7a8610":"plt.figure(figsize=(20,10))\nplt.scatter(df['fuelType'],df['transmission'])\nplt.xlabel('Fuel ')\nplt.ylabel('Transmission')\nplt.title('Model vs Transmission')\nplt.show()","beecca83":"plt.figure(figsize=(20,10))\nplt.scatter(df['tax'],df['model'])\nplt.xlabel('Tax')\nplt.ylabel('Model')\nplt.title('Model vs MPG')\nplt.show()","04a64e86":"from sklearn.preprocessing import LabelEncoder\nLE=LabelEncoder()","1c583c23":"df['model']=LE.fit_transform(df['model'])\ndf['fuelType']=LE.fit_transform(df['fuelType'])\ndf['transmission']=LE.fit_transform(df['transmission'])","ef9a93e8":"df.info()","4aca8bcd":"features=['model','year','transmission','mileage','fuelType','tax','mpg','engineSize']","f082de12":"X=df[features]\nY=df['price']","e2d8d633":"from sklearn.model_selection import train_test_split\nX_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=1)","28bd35c5":"from sklearn.linear_model import LinearRegression\nLR=LinearRegression()\nlr=LR.fit(X_train,Y_train)\npred=lr.predict(X_test)","14d7659d":"from sklearn.metrics import r2_score,mean_squared_error","09edfa4d":"print('R-Squared: ',r2_score(Y_test,pred)*100)","7a248dc3":"vals=pd.DataFrame({'Predicted':pred,'Actual':Y_test})\nvals","fd46f4d4":"from sklearn.linear_model import Ridge,ElasticNet\nridge=Ridge(alpha=2,max_iter=1000)","2daeac3a":"ridge.fit(X_train,Y_train)","3042500f":"Ridge_predict=ridge.predict(X_test)","3f4ba86a":"ridge.score(X_test,Y_test)*100 ","ab0af776":"EN=ElasticNet(alpha=1,l1_ratio=1.001,max_iter=1000)\nEN.fit(X_train,Y_train)","6fdae0b8":"EN_pred=EN.predict(X_test)","461ca1b1":"EN.score(X_test,Y_test)*100","b359cdff":"from sklearn.ensemble import GradientBoostingRegressor","3002b4b4":"GB=GradientBoostingRegressor(random_state=0)\nGB.fit(X_test,Y_test)","16cf30c5":"GB_pred=GB.predict(X_test)\nGB_pred","b4dfcc29":"print('Performance Score(GB): ',GB.score(X_test,Y_test)*100)","a1a4aa0f":"from xgboost import XGBRegressor\nXGB=XGBRegressor()\nXGB.fit(X_train,Y_train)","f7ebfc72":"XGB_pred=XGB.predict(X_test)","7c1fa288":"print('performance score(XGB): ',XGB.score(X_test,Y_test)*100) ","2b37ef7b":"#For XGB\nvalues=pd.DataFrame({'Predicted':XGB_pred,'Actual':Y_test})\nvalues","c39d0ab2":"#For GB\nvalues=pd.DataFrame({'Predicted':GB_pred,'Actual':Y_test})\nvalues","7ab898ee":"print('Linear Regression accuracy score: ',r2_score(Y_test,pred)*100)\nprint('Ridge Regression accuracy score: ',ridge.score(X_test,Y_test)*100 )\nprint('Elastic_Net Regression accuracy score: ',EN.score(X_test,Y_test)*100)\nprint('Gradient_Boosting Regression accuracy score: ',GB.score(X_test,Y_test)*100)\nprint('XGB Regression accuracy score: ',XGB.score(X_test,Y_test)*100)","6d499396":"### Cars with different fuel type","5f9237a0":"## Score of Gradient Boosting","a7016765":"Checkong the correlation of all the features using heatmap.","d39fbee0":"Ridge is a L2 norm where it distributes the coefficients across all the features.","cc610d16":"### Gradient Boosting Regression","c274aa23":"As seen we have Model,Transmission type, Fuel type is object for which we have to convert these categorical values into int.We will use Label Encoding technique for this later.For now lets lokk at the unique values in those categorical features.","6d5335f2":"Finally!...We have managed to achive a 95% score with Gradient Boosting and XGB(extreme Gradient Boosting) algorithms.As always my first choise was GB and XGB however to show-up the problem with different regression algorithims I have used 'Linear Regression','Ridge Regression'(ps note: Could have tried with Lasso Regression also),'Elastic Net','Gradient Boosting','XGBoosting'.","bd2a2dd8":"### Cars with different Enigine Size","3a708640":"Even the elastic net haven't given us the good enough result when compared to that of Linear and Ridge Regressions.Lets try with Gradient boosting and  Extreme Gradient Booosting algorithims.","48ee3843":"## Preformance metrics","a9a5fc9b":"Selecting Features i.e Dependent and independent variables for prediction","cdda5816":"As we have seen different graphs explaining relationships between different variables.Let us now Encode the Categorical variable using Label Encode.We can also plot different graphs by taking different parameters from the data.We can dive deep into the data more by using .groupby() method and grouping the models based on years and other parameters\/attributes.","6369fae7":"Ridge havent shown better accuracy than the Linear Regression.Lets try with Elastic Net.","ffc5ad2e":"CHECK for NULL and NAN values","11a652c0":"As one can see that the accuracy is around 74%,it is highly recomended to optimize the parameters or to implement the other regression techniques to get better accuracy.Now I'll with Ridge regression and ElasticNet which is the combination of Ridge and Lasso Regressions.","fb62f5e0":"### Cars with different Transmission type","2d7e48a7":"Bammm!!!!!!! Finally satiisfactory results.Lets check with Extreme Gradient Boosting(XGB) also.","4c58cc9f":"### Model Vs Price","10094028":"Looking at the different models and their values","a2247358":"Print the values for both Gradient Boosting and XGB ","46b8c2b5":"## Score","ca046b57":"Boosting algorithims comes in first place when one think of either regression or classification problems.Since it's introduction in '04 's it has become popular among Data Science enthusiasts and Data Scientists because of its accurate implementations and computing capability od boosting tree algorithms.","0e05e2e6":"Having splited the data into Train and Test categories,we will apply Linear Regression ","59373399":"### Splitting the data","532247a0":"### Model Vs Transmission","cd59c972":"### Fuel type Vs MPG","04da6092":"### Tax Vs Model","06ab5108":"## Exploratory Data Analysis","8659dff4":"### Pie Chart","12ef0072":"### Model Vs MPG","68a45293":"As one can see in the info() the categorical columns have now been encoded and dtype has been changed to int64 from object which makes it easier for us and to the model to perform operations on it.","f41fa2d8":"### Engine size Vs Miles Per Gallon"}}