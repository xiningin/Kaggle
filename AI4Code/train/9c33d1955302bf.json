{"cell_type":{"008565fe":"code","8fedf7d0":"code","f3d6dc34":"code","4b06db1b":"code","d7171ade":"code","854b43dc":"code","827b0c24":"code","ed8b13b1":"code","f01f4c2a":"code","1bdd7bc3":"code","fe4be448":"code","15158d2d":"code","659fb2d5":"code","5aad932e":"code","08f03f95":"code","470b4878":"code","2932f650":"code","224b87d2":"code","a3b11112":"code","01629cbf":"code","1c60cd29":"code","529bac81":"markdown","b99519f9":"markdown","4c829b3b":"markdown","081724e5":"markdown","1a1912ea":"markdown","ae7fb008":"markdown","13720b99":"markdown"},"source":{"008565fe":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8fedf7d0":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","f3d6dc34":"df = pd.read_csv('\/kaggle\/input\/classified-data\/Classified Data')\ndf = df.drop('Unnamed: 0', axis=1)\ndf.head()","4b06db1b":"from sklearn.preprocessing import StandardScaler","d7171ade":"scaler = StandardScaler()","854b43dc":"scaler.fit(df.drop('TARGET CLASS', axis=1))","827b0c24":"scaled_features = scaler.transform(df.drop('TARGET CLASS', axis=1))","ed8b13b1":"df_feat = pd.DataFrame(scaled_features, columns=df.columns[:-1])\ndf_feat.head()","f01f4c2a":"sns.pairplot(df, hue='TARGET CLASS')","1bdd7bc3":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(scaled_features, df['TARGET CLASS'], test_size=0.3)","fe4be448":"from sklearn.neighbors import KNeighborsClassifier","15158d2d":"knn = KNeighborsClassifier(n_neighbors=1)","659fb2d5":"knn.fit(X_train, y_train)","5aad932e":"pred = knn.predict(X_test)","08f03f95":"from sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.model_selection import cross_val_score","470b4878":"print(confusion_matrix(y_test, pred))","2932f650":"print(classification_report(y_test, pred))","224b87d2":"accuracy_rate = []\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    score = cross_val_score(knn, df_feat, df['TARGET CLASS'], cv=10)\n    accuracy_rate.append(score.mean())","a3b11112":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40), accuracy_rate,color='blue',linestyle='dashed',marker='o',markerfacecolor='red',markersize=10)\nplt.title('Accuracy rate Vs K value')\nplt.xlabel('K')\nplt.ylabel('Accuracy Rate')","01629cbf":"# first a quick comparison in k=1 and k=23\nknn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train, y_train)\npred = knn.predict(X_test)\nprint('With K=1')\nprint('\\n')\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test, pred))","1c60cd29":"knn = KNeighborsClassifier(n_neighbors=23)\nknn.fit(X_train, y_train)\npred = knn.predict(X_test)\nprint('With K=23')\nprint('\\n')\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test, pred))","529bac81":"# **Using K=23**","b99519f9":"# **Prediction and Evaluation**","4c829b3b":"# **Pairplot**","081724e5":"# **KNN**","1a1912ea":"# **Train Test Split**","ae7fb008":"# >  **Standardise**","13720b99":"# **Choosing K value**"}}