{"cell_type":{"3aef1e2c":"code","e6467f3a":"code","7ac0cfff":"code","03f2dbaa":"code","46f35e99":"code","5e2a01b3":"code","8ddf67f7":"code","c4cfd49f":"code","dfefb6f7":"code","353de9a5":"code","17b89e38":"code","b4249f02":"code","4738a492":"code","2338c674":"code","e8c41729":"code","5ad835cf":"code","c775c1a3":"code","3357e4b3":"code","0c6654a2":"code","2e13dbe3":"code","fc98c8f2":"code","4bdd178a":"code","6d8e12b3":"code","caf662e7":"code","f72594e3":"markdown","7c2e6480":"markdown","967df19a":"markdown"},"source":{"3aef1e2c":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nfrom sklearn.model_selection import train_test_split\nimport xgboost as xgb\nfrom sklearn.ensemble import BaggingClassifier, RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\nfrom subprocess import check_output\n\nimport warnings\nwarnings.filterwarnings('ignore')","e6467f3a":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","7ac0cfff":"data = pd.concat([train, test], sort=False)","03f2dbaa":"data.isnull().sum()","46f35e99":"data['Sex'].replace(['male','female'], [0, 1], inplace=True)","5e2a01b3":"data['Embarked'].fillna(('S'), inplace=True)\ndata['Embarked'] = data['Embarked'].map( {'S': 0, 'C': 1, 'Q': 2} ).astype(int)","8ddf67f7":"data['Fare'].fillna(np.mean(data['Fare']), inplace=True)\ndata['fare_value']=data['Fare']\/50","c4cfd49f":"age_avg = data['Age'].mean()\nage_std = data['Age'].std()\ndata['Age'].fillna(np.random.randint(age_avg - age_std, age_avg + age_std), inplace=True)\ndata['age_value']=data['Age']\/50","dfefb6f7":"data['family'] = (data['SibSp'] + data['Parch'])\/5 ","353de9a5":"data['isAlone'] = 0\ndata.loc[data['family'] > 0, 'isAlone'] = 1","17b89e38":"delete_columns = ['Name','PassengerId','SibSp','Parch','Ticket','Cabin','Age','Fare']\ndata.drop(delete_columns, axis=1, inplace=True)","b4249f02":"train = data[:len(train)]\ntest = data[len(train):]","4738a492":"y_train0 = train['Survived']\nX_train0 = train.drop('Survived', axis = 1)\nX_test0 = test.drop('Survived', axis = 1)","2338c674":"X_train = np.array(X_train0)\ny_train = np.array(y_train0)\nX_test = np.array(X_test0)","e8c41729":"bagging = BaggingClassifier(KNeighborsClassifier(),max_samples=0.5, max_features=0.5).fit(X_train, y_train)\nmodel1_train = bagging.predict(X_train)\nmodel1_test = bagging.predict(X_test)","5ad835cf":"random_forest=RandomForestClassifier(n_estimators=500, max_depth=10, min_samples_split=2, random_state=0).fit(X_train,y_train)\nmodel2_train = random_forest.predict(X_train)\nmodel2_test = random_forest.predict(X_test)","c775c1a3":"Ada_boost=AdaBoostClassifier(n_estimators=500).fit(X_train,y_train)\nmodel3_train=Ada_boost.predict(X_train) \nmodel3_test=Ada_boost.predict(X_test)","3357e4b3":"from sklearn.ensemble import GradientBoostingClassifier\nGradient_boost = GradientBoostingClassifier(n_estimators=500).fit(X_train, y_train)\nmodel4_train=Gradient_boost.predict(X_train)\nmodel4_test=Gradient_boost.predict(X_test)                 ","0c6654a2":"base_predictions_train = pd.DataFrame( {\n     'Bagging': model1_train.ravel(),\n     'Random_Forest': model2_train.ravel(),\n     'AdaBoost': model3_train.ravel(),\n     'GradientBoost': model4_train.ravel()\n    })\n\nbase_predictions_test = pd.DataFrame( {\n     'Bagging': model1_test.ravel(),\n     'Random_Forest': model2_test.ravel(),\n     'AdaBoost': model3_test.ravel(),\n     'GradientBoost': model4_test.ravel()\n    })\n\nX_new_train = np.array(base_predictions_train)\nX_new_test = np.array(base_predictions_test)\n\nprint(base_predictions_train.head())\nprint(base_predictions_test.head())","2e13dbe3":"xgboost = xgb.XGBClassifier(n_estimators=5,max_depth=10,\n                    min_child_weight=2,gamma=0.9,\n                    subsample=0.8,colsample_bytree=0.8,\n                    objective='binary:logistic',\n                    nthread=-1,scale_pos_weight=1).fit(X_new_train,y_train)","fc98c8f2":"y_train_pred = xgboost.predict(X_new_train)\ny_test_pred = xgboost.predict(X_new_test)","4bdd178a":"train_score = accuracy_score(y_train, y_train_pred)\nprint(\"Train_Score:\",train_score)","6d8e12b3":"gender_submission = pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ngender_submission","caf662e7":"submit = gender_submission\nsubmit['Survived'] = list(map(int, y_test_pred))\nsubmit.to_csv(\"submission.csv\", index=False)\nsubmit","f72594e3":"# Primary Predition Result as New Data for Stacking","7c2e6480":"# Priary Predition Models","967df19a":"# Secondary Prediction (Stacking) using Primary Predition Result "}}