{"cell_type":{"e6e6e50d":"code","cd8026a0":"code","e0826eec":"code","a7605b95":"code","21ae2e7b":"code","9493b7e2":"code","45e70d89":"code","82818b87":"code","ef084c34":"code","e3e61d78":"code","07bf2d8c":"code","dd0a46bb":"code","49aa574e":"code","73c82e5a":"code","8d58abb9":"code","b9ca3825":"code","e2c0fcaf":"code","9c78920f":"code","0c446c7e":"code","94e65318":"code","cc73877e":"code","667997e7":"code","bb3f2869":"code","a8c94e11":"code","9d972ae0":"code","c40e5b09":"code","69902d69":"code","bbb31900":"code","a9cc3054":"code","1bfc025b":"code","3c7f2374":"code","4e81fd61":"code","a4d8a037":"code","4bd970d5":"code","60c4b473":"code","0f82261a":"code","0575f2c6":"code","453e81aa":"code","9ecb31c8":"code","0eb38dc1":"code","51a6c8bb":"code","c2cdf67f":"code","5d1c0d44":"code","623e17b7":"code","2e12f083":"code","96101a1c":"code","e2801bed":"markdown","ae49dbd6":"markdown","86ca58db":"markdown","646e3e3a":"markdown","c548bb4b":"markdown","01144e58":"markdown","60855210":"markdown","4a334292":"markdown","94a4f50f":"markdown","e64f67db":"markdown","1033b36a":"markdown","08ab74c8":"markdown","1fb21740":"markdown","f8b1fde9":"markdown","0ca4b202":"markdown","1dbf0235":"markdown","6ba2a4ac":"markdown","2823ef05":"markdown","fab974fb":"markdown","3437420b":"markdown","7ad46085":"markdown","52af3445":"markdown","cabe18f0":"markdown","1c6602d2":"markdown","76f237c6":"markdown","884feef4":"markdown","9475f49e":"markdown","15c5df30":"markdown","ae59010c":"markdown","2655accf":"markdown","d4b0d68c":"markdown","47e4b93a":"markdown","014c7f98":"markdown","7c8036f9":"markdown"},"source":{"e6e6e50d":"import pandas as pd\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","cd8026a0":"train=pd.read_csv('..\/input\/iris\/Iris.csv')","e0826eec":"train.head()","a7605b95":"train.info()","21ae2e7b":"train.shape","9493b7e2":"train.isnull().sum()","45e70d89":"train.Species.unique()","82818b87":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder = LabelEncoder()","ef084c34":"train.Species=label_encoder.fit_transform(train.Species)","e3e61d78":"train.Species.unique()","07bf2d8c":"train.head()","dd0a46bb":"from sklearn.model_selection import train_test_split","49aa574e":"y=train['Species']\ny.unique()","73c82e5a":"train=train.drop(['Id'],axis=1)","8d58abb9":"X=train.drop(['Species'],axis=1)","b9ca3825":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)","e2c0fcaf":"from sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression(solver='lbfgs',multi_class='auto',max_iter=1000)","9c78920f":"model.fit(X_train,y_train)","0c446c7e":"model.score(X_test,y_test)","94e65318":"print('as we can see above the score of our model on the test data is ' + str(model.score(X_test,y_test)) + ' ie ' + str(model.score(X_test,y_test)*100) +'%'+ \" (which will change if we run the train test split again as the splitting of data is random)\")\n\n\nprint(\"Anyway it's good!!\")","cc73877e":"category=['iris-setosa','iris-versicolor','iris-virginica']","667997e7":"pred=model.predict([[5.2,3.2,1.4,0.3]])\npred","bb3f2869":"category[int(pred)]","a8c94e11":"from sklearn.utils import shuffle","9d972ae0":"#train=shuffle(train)","c40e5b09":"import seaborn as sns\nimport matplotlib.pyplot as plt","69902d69":"sns.countplot(train['Species'])","bbb31900":"plt.scatter(train['SepalLengthCm'],train['Species'])","a9cc3054":"train.loc[(train.SepalLengthCm<5) & (train.Species==2)]","1bfc025b":"train.drop(106,inplace=True)","3c7f2374":"plt.scatter(train['SepalWidthCm'],train['Species'])","4e81fd61":"train.loc[(train.SepalWidthCm<2.3) & (train.Species==2)]","a4d8a037":"train.loc[(train.SepalWidthCm<2.5) & (train.Species==0)]","4bd970d5":"train.drop(119,inplace=True)\ntrain.drop(41,inplace=True)","60c4b473":"plt.scatter(train['PetalLengthCm'],train['Species'])","0f82261a":"train.loc[(train.PetalLengthCm<3.2) & (train.Species==1)]","0575f2c6":"train.drop(98,inplace=True)","453e81aa":"plt.scatter(train['PetalWidthCm'],train['Species'])","9ecb31c8":"plt.subplot(2, 2, 1)\nplt.scatter(train['SepalLengthCm'],train['Species'])\nplt.subplot(2, 2, 2)\nplt.scatter(train['SepalWidthCm'],train['Species'])\nplt.subplot(2, 2, 3)\nplt.scatter(train['PetalLengthCm'],train['Species'])\nplt.subplot(2, 2, 4)\nplt.scatter(train['PetalWidthCm'],train['Species'])","0eb38dc1":"train.info()","51a6c8bb":"train.head()","c2cdf67f":"y=train['Species']\ny.unique()","5d1c0d44":"X=train.drop(['Species'],axis=1)","623e17b7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.10)","2e12f083":"model.fit(X_train,y_train)","96101a1c":"model.score(X_test,y_test)","e2801bed":"#### check the head of the again to see the numeric values in all the columns","ae49dbd6":"### all the 3 target variables are present in equal amount in the dataset.","86ca58db":"## training the model by calling the fit method","646e3e3a":"## loading the training data","c548bb4b":"as we dropped 4 rows from the dataset now we have 146 rows in each feature ,previously we had 150.","01144e58":"## as we have removed some of the data from our dataset .lets plot the scatter plot again.\n","60855210":"## information about the dataset ","4a334292":"more specifically we can write it as ","94a4f50f":"### Please upvote if this kernel was informative.","e64f67db":"lets do some visualisation on the dataset to gain some knowledge about the behaviour of the features with its values.\n\nimporting seaborn and matplotib for visualisation.","1033b36a":"train_test_split will split the data in two parts training data and testing data.\n\ntrain data will contain the dataset with the target variable that we will use to train the model .\n\ntest data will be a dataset that will contain only the features that we will use to predict the target to check the accuracy of our model.","08ab74c8":"after the model is trained now and ready to make preiction we can check the accuracy by testing it with the test data.\n","1fb21740":"splitting of data into four parts.\n\ntest_size denotes the share of data used for testing that is allocated to X_test and y_test.","f8b1fde9":"the categorical-values are converted into numerical-values.\n\ncheck the values using unique() method.","0ca4b202":"as we can see in each category of the species the points are near each other(almost) except some of them which \nare far from the rest.these are the reasons why we cant achieve 100% accuracy  from our models.\nthese values that are different from the rest can be removed to make the model better as they will remove the exceptions \nand will follow the common trend ,but as we have very less data and the model will be getting these kind of values in \nfuture also for prediction we cant just simply ignore them.\n\ncheck the data that is separated from other.\n","1dbf0235":"## check the unique values of the species column","6ba2a4ac":"# importing logistic regression","2823ef05":"## check whether the dataset has null values","fab974fb":"## doing the same thing with all the features in the dataset.","3437420b":"# the score of the model will vary with the dataset as it  splits randomly.","7ad46085":"as the id column in the datset is just for reference(ie for denoting the set of values of the features for a particular flower) and has no impact on the target variable\n\nwe will drop the column from the dataset.","52af3445":"## changing the categorical values in the datasest into numerical  values using labelencoder","cabe18f0":"as we have dropped some of the rows from the dataset, lets check the info about the dataset.","1c6602d2":"Repeating the same procedure of removing the target variable and splitting the dataset into train and test set to check the model.","76f237c6":"storing the target variable in a separate variable y.","884feef4":" check the different types of values(or entries) in any column by the unique() method.\n \n here we are checking the types of values in the species column that is our target.","9475f49e":"okay lets remove the data and see what happens!!","15c5df30":"plotting a scatter plot for every feature with the target variable will give an idea about the variance we have in the dataset.","ae59010c":"dropping the species column to split the dataset into four parts (X_train, X_test, y_train, y_test)\n\nX_train and y_train for training the model and X_test and y_test for testing the model.","2655accf":"this was a very basic model using logistic regression to predict the type of flower with its features.\n\nwe achieved a good accuracy without any changes.","d4b0d68c":"this scatter plot tells us about the relation between sepal length and the species it belongs to.","47e4b93a":"this method will give the information about the columns of the dataset,column name,their datatype ,how many values it have.","014c7f98":"check the model by giving a set of values by your own.(always enter the values in the form of a list)","7c8036f9":"## importing all important modules that we will use."}}