{"cell_type":{"82854e07":"code","46d534c0":"code","378a3895":"code","382edbf6":"code","91448e89":"code","6791137e":"code","420d02ea":"code","0bbdc670":"code","f13b8855":"code","e6dab8bc":"code","4f7612f4":"code","421d7724":"code","da24ec57":"code","2f03daed":"code","fd69b5bc":"code","79de18a6":"code","5a7c0643":"code","e6a93d81":"code","89ba6e48":"code","41039028":"code","72bbb8b9":"code","d32c0a12":"code","b8a76871":"code","14ddc934":"code","fe097b6f":"code","a3797be5":"code","4db115b0":"code","92b28669":"code","d97bd22d":"code","7e3158cb":"code","77122cb5":"markdown","8e64de62":"markdown","8eac43f3":"markdown","5aa22291":"markdown","0034bce5":"markdown","a34a8db1":"markdown"},"source":{"82854e07":"import pandas as pd\nimport numpy as np\nimport re\nimport keras","46d534c0":"dataset = pd.read_csv('..\/input\/insurance\/insurance.csv')","378a3895":"X =  dataset.iloc[:, 0:6].values","382edbf6":"y = dataset.iloc[:, 6].values","91448e89":"X","6791137e":"y","420d02ea":"from sklearn.preprocessing import LabelEncoder","0bbdc670":"label_X = LabelEncoder()\nX[:, -1] = label_X.fit_transform(X[:, -1])\nX[:, 1] = label_X.fit_transform(X[:, 1])\nX[:, 4] = label_X.fit_transform(X[:, 4])\nlabel_y = LabelEncoder()\ny = label_y.fit_transform(y)","f13b8855":"\nX","e6dab8bc":"y","4f7612f4":"from sklearn.ensemble import ExtraTreesClassifier","421d7724":"clf = ExtraTreesClassifier()\nclf.fit(X, y)","da24ec57":"print(clf.feature_importances_)","2f03daed":"X = dataset.iloc[:, [0,2]].values","fd69b5bc":"X","79de18a6":"y = dataset.iloc[:, [6]].values","5a7c0643":"y","e6a93d81":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)","89ba6e48":"from keras import regularizers\nmodel = keras.Sequential([\n    keras.layers.Dense(units = 64, activation = 'relu', input_shape = [2]),\n    keras.layers.Dense(units = 128, activation = 'relu'),\n    keras.layers.Dense(units = 256, activation = 'relu'),\n    keras.layers.Dense(units =1)\n])\n\nmodel.compile(optimizer = 'Adam', loss = 'mean_absolute_percentage_error')\nhistory = model.fit(X_train, y_train, epochs = 200)","41039028":"model.summary()","72bbb8b9":"y_pred_train = model.predict(X_train)","d32c0a12":"y_pred_test = model.predict(X_test)","b8a76871":"y_pred_train","14ddc934":"y_pred_test","fe097b6f":"print(history.history.keys())","a3797be5":"X_train[0]","4db115b0":"y_pred_train[0]","92b28669":"print(\"Train Accuracy : \" , np.mean((y_pred_train \/ y_train) * 100), \"%\")","d97bd22d":"print(\"Test Accuarcy : \" , np.mean((y_pred_test \/ y_test) * 100), \"%\")","7e3158cb":"print(\"Loss value : \" , model.evaluate(X_train, y_train))","77122cb5":"# training of model","8e64de62":"# Categorical data","8eac43f3":"# Feature selection","5aa22291":"# Importing dataset","0034bce5":"# Spilitting of Dataset","a34a8db1":"# Importing Libraries"}}