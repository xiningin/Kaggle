{"cell_type":{"d0c7ea08":"code","33582b53":"code","c61d5825":"code","eec3512f":"code","176cdb89":"code","e7d30aaf":"code","ffce475f":"code","59757e0a":"markdown","2c4120fb":"markdown","8968ee2e":"markdown","c4ec2a37":"markdown","b22837d1":"markdown","b50076d1":"markdown","3b03fbd1":"markdown","647848db":"markdown","8e2d23c2":"markdown"},"source":{"d0c7ea08":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.sql.ex3 import *\nprint(\"Setup Complete\")","33582b53":"from google.cloud import bigquery\n\n# Create a \"Client\" object\nclient = bigquery.Client()\n\n# Construct a reference to the \"hacker_news\" dataset\ndataset_ref = client.dataset(\"hacker_news\", project=\"bigquery-public-data\")\n\n# API request - fetch the dataset\ndataset = client.get_dataset(dataset_ref)\n\n# Construct a reference to the \"comments\" table\ntable_ref = dataset_ref.table(\"comments\")\n\n# API request - fetch the table\ntable = client.get_table(table_ref)\n\n# Preview the first five lines of the \"comments\" table\nclient.list_rows(table, max_results=5).to_dataframe()","c61d5825":"# Query to select prolific commenters and post counts\nprolific_commenters_query = \"\"\"\n        SELECT author, COUNT(id) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY author\n        HAVING COUNT(id) > 10000\n        \"\"\" # Your code goes here\n\n# Set up the query (cancel the query if it would use too much of \n# your quota, with the limit set to 1 GB)\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**9)\nquery_job = client.query(prolific_commenters_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\nprolific_commenters = query_job.to_dataframe()\n\n# View top few rows of results\nprint(prolific_commenters.head())\n\n# Check your answer\nq_1.check()","eec3512f":"#q_1.solution()","176cdb89":"# Write your query here and figure out the answer\ndeleted_lines_query = \"\"\"\n        SELECT COUNT(deleted)\n        FROM `bigquery-public-data.hacker_news.comments`\n        \"\"\"\nsafe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**9)\nquery_job = client.query(deleted_lines_query, job_config=safe_config)\n\n# API request - run the query, and return a pandas DataFrame\ndeleted_lines = query_job.to_dataframe()\n\n# View top few rows of results\nprint(deleted_lines.head())","e7d30aaf":"num_deleted_posts = 227736 # Put your answer here\n\nq_2.check()","ffce475f":"#q_2.solution()","59757e0a":"# Exercises\n\n### 1) Prolific commenters\n\nHacker News would like to send awards to everyone who has written more than 10,000 posts. Write a query that returns all authors with more than 10,000 posts as well as their post counts. Call the column with post counts `NumPosts`.\n\nIn case sample query is helpful, here is a query you saw in the tutorial to answer a similar question:\n```\nquery = \"\"\"\n        SELECT parent, COUNT(1) AS NumPosts\n        FROM `bigquery-public-data.hacker_news.comments`\n        GROUP BY parent\n        HAVING COUNT(1) > 10\n        \"\"\"\n```","2c4120fb":"### 2) Deleted comments\n\nHow many comments have been deleted? (If a comment was deleted, the `deleted` column in the comments table will have the value `True`.)","8968ee2e":"# Introduction\n\nQueries with **GROUP BY** can be powerful. There are many small things that can trip you up (like the order of the clauses), but it will start to feel natural once you've done it a few times. Here, you'll write queries using **GROUP BY** to answer questions from the Hacker News dataset.\n\nBefore you get started, run the following cell to set everything up:","c4ec2a37":"---\n**[SQL Micro-Course Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n","b22837d1":"For the solution, uncomment the line below.","b50076d1":"**[SQL Micro-Course Home Page](https:\/\/www.kaggle.com\/learn\/intro-to-sql)**\n\n---\n","3b03fbd1":"# Keep Going\n**[Click here](https:\/\/www.kaggle.com\/dansbecker\/order-by)** to move on and learn about the **ORDER BY** clause.","647848db":"The code cell below fetches the `comments` table from the `hacker_news` dataset.  We also preview the first five rows of the table.","8e2d23c2":"For the solution, uncomment the line below."}}