{"cell_type":{"5e2c31f0":"code","f8b09745":"code","c31e09c2":"code","f4a267eb":"code","8a15f66a":"code","54d5360e":"code","d4292164":"code","bc09cb21":"code","68373989":"markdown","fc540f6f":"markdown"},"source":{"5e2c31f0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f8b09745":"!pip install lifetimes\n!pip install openpyxl\nimport datetime as dt\nimport pandas as pd\nfrom lifetimes import BetaGeoFitter\nfrom lifetimes import GammaGammaFitter\npd.set_option('display.float_format', lambda x: '%.5f' % x)\npd.set_option(\"display.max_column\",None)\ndf_ = pd.read_excel(\"\/kaggle\/input\/online-retail\/online_retail_II.xlsx\", sheet_name=\"Year 2010-2011\")\ndf = df_.copy()\n","c31e09c2":"df.head()","f4a267eb":"#calculate recency,T,frequency,monetary values\ntoday_date = dt.datetime(2011, 12, 11)\ndf.dropna(inplace=True)\ndf = df[~df[\"Invoice\"].str.contains(\"C\", na=False)]\ndf = df[df[\"Quantity\"] > 0]\ndf = df[df[\"Price\"] > 0]\ndf[\"TotalPrice\"] = df[\"Quantity\"] * df[\"Price\"]\n\ncltv_df = df.groupby('Customer ID').agg({'InvoiceDate': [lambda date: (date.max() - date.min()).days,\n                                                         lambda date: (today_date - date.min()).days],\n                                         'Invoice': lambda num: num.nunique(),\n                                         'TotalPrice': lambda TotalPrice: TotalPrice.sum()})\n\ncltv_df.columns = cltv_df.columns.droplevel(0)\ncltv_df.columns = ['recency', 'T', 'frequency', 'monetary']","8a15f66a":"# monetary\ncltv_df[\"monetary\"] = cltv_df[\"monetary\"] \/ cltv_df[\"frequency\"]\n\n# convert recency ve T values to weekly period\ncltv_df[\"recency\"] = cltv_df[\"recency\"] \/ 7\ncltv_df[\"T\"] = cltv_df[\"T\"] \/ 7\n\n#select more than 1 frequency values\n\ncltv_df = cltv_df[(cltv_df['frequency'] > 1)]\n\n#select more than 0 monetary values\ncltv_df = cltv_df[cltv_df[\"monetary\"] > 0]\n","54d5360e":"#BG-NBD Model\nbgf = BetaGeoFitter(penalizer_coef=0.001)\n\nbgf.fit(cltv_df['frequency'],\n        cltv_df['recency'],\n        cltv_df['T'])\n","d4292164":"#GAMMA-GAMMA Model\n\nggf = GammaGammaFitter(penalizer_coef=0.01)\nggf.fit(cltv_df['frequency'], cltv_df['monetary'])","bc09cb21":"# CLTV prediction for 6 months\n\ncltv = ggf.customer_lifetime_value(bgf,\n                                   cltv_df['frequency'],\n                                   cltv_df['recency'],\n                                   cltv_df['T'],\n                                   cltv_df['monetary'],\n                                   time=6,\n                                   freq=\"W\",\n                                   discount_rate=0.01)\n\ncltv = cltv.reset_index()\n\ncltv_df = cltv_df.merge(cltv, on=\"Customer ID\", how=\"left\")\n\ncltv_df.head()","68373989":"<h2>Customer Lifetime Value Prediction<\/h2>\n\n<h3>Business Problem<\/h3>\n\nPredict customer lifetime value for 6 months using BG-NBD and GAMMA-GAMMA model.\n\n\n<h3>Dataset<\/h3>\n\nThe dataset named Online Retail II is a UK-based online sale.It includes the sales of the store between 01\/12\/2010 and 09\/12\/2011.The product catalog of this company includes souvenirs.\n\n","fc540f6f":"**Import Dataset and Required Libraries**"}}