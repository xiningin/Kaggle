{"cell_type":{"24243c4a":"code","59ccd966":"code","af98502d":"code","fbbfd299":"markdown"},"source":{"24243c4a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59ccd966":"# Create 10000 samples from Normal distributions\nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nsamples_std1 = np.random.normal(20, 1, size=100000)\nsamples_std2 = np.random.normal(20, 3, size=100000)\nsamples_std3 = np.random.normal(20, 10, size=100000)","af98502d":"plt.hist(samples_std1, bins=100, histtype='step')\nplt.hist(samples_std2, bins=100, histtype='step')\nplt.hist(samples_std3, bins=100, histtype='step')\n\n#plt.ylim(0, .42)\nplt.legend(('std=1', 'std=2', 'std =3'))\nplt.show()","fbbfd299":"# NORMAL PDF:\n### Probability Density Function (PDF) returns the probability of a single value of the random variable x. Use this to graph a normal curve."}}