{"cell_type":{"bf8f3998":"code","197bab3d":"code","fcbaf0a6":"code","1ef63189":"code","787d92b7":"code","3d1c3b3e":"code","5d87e9de":"code","f8b90dc5":"code","5646b394":"code","29916a64":"code","7543246e":"code","1d5fce8d":"code","10a293e4":"code","0d4b904f":"code","d225f308":"code","7699171e":"code","9dac6fa7":"code","60733df3":"code","04ba31dc":"code","6b41e6fe":"code","83c84eca":"code","d96d4bf0":"code","c93d16a4":"code","edba5f36":"code","16dee458":"code","91ba0ce9":"code","9dd6a102":"code","635d553a":"code","4e8395f1":"code","2ea9e4f5":"code","83bc5dc4":"code","bf721eca":"code","e2e83154":"code","89d65da4":"code","2d904cae":"code","45313c62":"code","fd2a06f4":"code","e3ea4b23":"code","53c75cc4":"code","3dec37c5":"code","2d405133":"code","38eafd8b":"code","f10e0b59":"code","cf99791c":"code","d9d6fb79":"code","de2c507d":"markdown","c4432aa9":"markdown","4346320c":"markdown","3a55c4a2":"markdown","f1533c42":"markdown","b3a8e90c":"markdown","db845f12":"markdown","b4bfcaca":"markdown","83a55560":"markdown","64f813bf":"markdown","6554074e":"markdown","6d8e4539":"markdown","d8629307":"markdown","1dd40cf1":"markdown","af974e4e":"markdown","dffa9e18":"markdown","ee6fe071":"markdown","02e1dd2e":"markdown","f1b1b3de":"markdown","2f3bad1b":"markdown"},"source":{"bf8f3998":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n#visualization\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport math\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","197bab3d":"#load the dataset\ndata=pd.read_csv('\/kaggle\/input\/datasets_11657_16098_train.csv')","fcbaf0a6":"#check the shape of this dataset\ndata.shape","1ef63189":"data","787d92b7":"data.info()","3d1c3b3e":"data.head()","5d87e9de":"data.tail()","f8b90dc5":"data.describe(include='all')","5646b394":"data.dtypes","29916a64":"data.isnull().sum()","7543246e":"#cleaning the null value\n#As we can see, there are many null values under 'Cabin' column.\n#687 out of 891 data points is a really high amount.and how to replace nan value with nalvale\n# so i droped the Cabin column\ndata.drop(['Cabin'],axis=1,inplace=True)\n","1d5fce8d":"data","10a293e4":"#clean the age column \ndata['Age'].fillna(data['Age'].mean(), inplace=True)","0d4b904f":"data","d225f308":"#clean the Embarked column\n#replace the nan value with the top repeated element 'S'\ndata.Embarked.fillna(value=\"S\",inplace=True)","7699171e":"data","9dac6fa7":"data.isnull().sum()","60733df3":"#drop the unrelevent column \ndata.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","04ba31dc":"#countplot for Survived column\nsns.countplot(data.Survived)\nplt.show()","6b41e6fe":"#Pclass has continous value so i can plot distplt\nsns.distplot(data.Pclass[data.Survived==0])\nsns.distplot(data.Pclass[data.Survived==1])\nplt.legend(['Not Survived','Survived'])\nplt.show()","83c84eca":"data['Pclass'].unique()","d96d4bf0":"sns.boxplot(x=data.Pclass,y=data.Age,data=data)\nplt.show()","c93d16a4":"sns.countplot(data.Sex,hue=data.Survived)\nplt.show()","edba5f36":"sns.swarmplot(x=data.Sex,y=data.Fare,hue=data.Survived)\nplt.show()\n","16dee458":"data['SibSp'].unique()","91ba0ce9":"sns.countplot(data.SibSp,hue=data.Survived)\nplt.show()","9dd6a102":"#not effect in our dataset so i can drop it\ndata.drop(['SibSp'],axis=1,inplace=True)","635d553a":"sns.countplot(data.Parch,hue=data.Survived)\nplt.show()","4e8395f1":"sns.distplot(data.Fare[data.Survived==0])\nsns.distplot(data.Fare[data.Survived==1])\nplt.legend(['Not Survived','Survived'])\nplt.show()","2ea9e4f5":"data[\"Fare\"].plot.hist(figsize=(10,10),rwidth=0.97)\nplt.show()","83bc5dc4":"sns.countplot(data.Embarked,hue=data.Survived)\nplt.show()","bf721eca":"corr=data.corr()\nplt.figure(figsize=(12,5))\nsns.heatmap(corr,annot=True,cmap='coolwarm')\nplt.show()","e2e83154":"from sklearn.preprocessing import LabelEncoder\nlb=LabelEncoder()\ndata.Embarked=lb.fit_transform(data.Embarked)\n\nle1=LabelEncoder()\ndata.Sex=le1.fit_transform(data.Sex)","89d65da4":"data","2d904cae":"#input and output selection\nip=data.drop(['Survived'],axis=1)\nop=data['Survived']","45313c62":"data","fd2a06f4":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nct = ColumnTransformer([('Embarked',OneHotEncoder(),[5])],remainder='passthrough')\n\nip = np.array(ct.fit_transform(ip),dtype = np.str)\n","e3ea4b23":"from sklearn.model_selection import train_test_split\nxtr,xts,ytr,yts=train_test_split(ip,op,test_size=0.4)","53c75cc4":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nsc.fit(xtr)\nxtr=sc.transform(xtr)\nxts=sc.transform(xts)","3dec37c5":"from sklearn.linear_model import LogisticRegression\nalg=LogisticRegression()","2d405133":"#train the algorithm with the training data\nalg.fit(xtr,ytr)\nyp=alg.predict(xts)","38eafd8b":"from sklearn import metrics\ncm=metrics.confusion_matrix(yts,yp)\nprint(cm)","f10e0b59":"\naccuracy=metrics.accuracy_score(yts,yp)\nprint(accuracy)\n","cf99791c":"precission=metrics.precision_score(yts,yp)\nprint(precission)\n\n","d9d6fb79":"\nrecall=metrics.recall_score(yts,yp)\nprint(recall)","de2c507d":"We can see that most of the female passengers are Survived in this train","c4432aa9":"In this dataset age columns has 177 null value,Cabin columns has 687 null values and Embarked has\n2 null value.","4346320c":"# LOGISTIC REGRESSION","3a55c4a2":"check the null value in this dataset","f1533c42":"we can see older passenger are mostly traveling in 1st class,then 2nd and then 3rd class.","b3a8e90c":"# Pearson's Correlation","db845f12":"# checking accuracy of the model","b4bfcaca":"# Scalling our dataset","83a55560":"* Taitanic dataset  contain text or categorical values\n*  To make the data understandable or in human readable form, the training data is often labeled in words.\n* Label Encoding refers to converting the labels into numeric form so as to convert it into the machine-readable form.","64f813bf":"My understanding Logistic regression is a regression model where the dependent variable is categorical.\n****\nThe prediction will be 0 or 1, Yes or No","6554074e":"Above the 2 graphs, we can conclude most of the passengers on titanic are single passengers and \nthe 2nd most are likely couples.","6d8e4539":"The titanic train dataset consists of 891 rows and 12 columns.","d8629307":"Description of the dataset\n\n* PassengerId - Unique Id of each passenger on the ship\n* Survived - '0' for not survived & '1' for survived\n* Pclass - Passenger class: '1' for 1st class, '2' for 2nd class & '3' for 3rd class\n* Name - Passenger name\n* Sex - gender: 'male' or 'female'\n* Age - Passenger age\n* SibSp - No. of siblings or spouses aborded Titanic together with the passenger\n* Parch - No. of parents or children aborded Titanic together with the passenger\n* Ticket - Passenger ticket number\n* Fare - Passenger ticket fare\n* Cabin - Passenger cabin number\n* Embarked - Encoded name of city passenger embarked","1dd40cf1":"Using OheHotencoder,\nWe can convert 'Embarked' feature into 3 columns 'S', 'C', 'Q' with 0 for No & 1 for Yes values.","af974e4e":"So we can see most of the passengers on Titanic are 3rd class passengers.","dffa9e18":"We can see that most of the passsenger are Not Survived in S.","ee6fe071":"* 0-->Not Survived\n* 1-->Survived\n* We can show that only 300 passengers are survived in this train.","02e1dd2e":"After cleaning check the null values","f1b1b3de":"# Train and test dataset","2f3bad1b":"# Analyzing the Dataset"}}