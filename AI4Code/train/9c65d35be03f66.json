{"cell_type":{"dbc2c9da":"code","61763a56":"code","80b1a940":"code","e5079a4b":"code","a87c40c4":"code","964c8d21":"code","7ef07876":"code","0249f4c7":"code","de7efdf9":"code","06b387ab":"code","f0227677":"code","193b896f":"code","296ed1a5":"code","449b8ba6":"code","03ddc7b8":"code","40f8eb00":"markdown","cbbad7c8":"markdown","3c7f8550":"markdown","336f80c1":"markdown","74846e5a":"markdown","88a3d115":"markdown","1a930443":"markdown","2359e022":"markdown","1dd2f0a6":"markdown","c7069135":"markdown","31fdcb79":"markdown","1408abe2":"markdown","1ec624a8":"markdown","ee4242ec":"markdown","183c7e77":"markdown","bc930f24":"markdown","afed4c8d":"markdown","fb810835":"markdown","38ecfbb3":"markdown","679306ef":"markdown","4570a7a3":"markdown","fd7aa29a":"markdown","21fda1c3":"markdown"},"source":{"dbc2c9da":"import pandas as pd\nimport numpy as np\nimport statsmodels.stats.api as sms\nfrom scipy.stats import ttest_1samp, shapiro, levene, f_oneway, kruskal\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', 500)\npd.set_option('display.float_format', lambda x: '%.2f' % x)","61763a56":"data = pd.read_csv(\"..\/input\/fast-food-marketing-campaign-ab-test\/WA_Marketing-Campaign.csv\")\ndf = data.copy()","80b1a940":"def df_summary(df):\n    print(\"############### OBSERVATIONS-COLUMNS COUNTS ###############\")\n    print(\"\\n\")\n    print(df.shape)\n    print(\"############### INDEX ###############\")\n    print(\"\\n\")\n    print(df.index)\n    print(\"############### COLUMNS ###############\")\n    print(\"\\n\")\n    print(df.columns)\n    print(\"############### DATAFRAME INFORMATIONS ###############\")\n    print(\"\\n\")\n    print(df.info())\n    print(\"############### DATAFRAME INFORMATIONS ###############\")\n    print(\"\\n\")\n    print(df.describe().T)\n    print(\"\\n\")\n    print(df.head())\n    \ndf_summary(df)","e5079a4b":"def missing_value_analysis(df):\n    print(\"Is there any missing value on the dataset?\")\n    print(df.isnull().values.any())\n    missing = df.isnull().values.any()\n\n    if (missing == True):\n        print(\"############### MISSING VALUE COUNTS BY VARIABLES ###############\")\n        print(df.isnull().sum())\n        print(\"############### TOTAL MISSING VALUE COUNTS ###############\")\n        print(df.isnull().sum().sum())\n    else:\n        pass\n\nmissing_value_analysis(df)","a87c40c4":"def unique_counts(df, var):\n    return df[var].nunique()\n    \nprint(\"####### UNIQUE VALUE COUNTS BY VARIABLES #######\", \"\\n\")\nfor i in df.columns:\n    if (i == \"SalesInThousands\"):\n        continue\n    else:\n        print( i  + \" = \" + str(unique_counts(df, i)))","964c8d21":"df[\"MarketSize\"].value_counts().plot(kind = \"bar\");","7ef07876":"df.groupby(\"MarketSize\").agg({\"SalesInThousands\": [\"count\", \"mean\", \"sum\"]})","0249f4c7":"df.groupby([\"MarketSize\", \"week\"]).agg({\"SalesInThousands\": [\"count\", \"mean\", \"sum\"]})","de7efdf9":"test_stat, pvalue = shapiro(df.loc[df[\"week\"] == 1, \"SalesInThousands\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 2, \"SalesInThousands\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 3, \"SalesInThousands\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 4, \"SalesInThousands\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","06b387ab":"test_stat, pvalue = kruskal(df.loc[df[\"week\"] == 1, \"SalesInThousands\"],\n                                 df.loc[df[\"week\"] == 2, \"SalesInThousands\"],\n                                df.loc[df[\"week\"] == 3, \"SalesInThousands\"],\n                                df.loc[df[\"week\"] == 4, \"SalesInThousands\"])\n\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","f0227677":"df.groupby([\"week\"]).agg({\"SalesInThousands\": \"mean\"}).plot(kind = \"bar\", rot = 45);","193b896f":"df[\"Score\"] = df[\"SalesInThousands\"] * df[\"AgeOfStore\"] * df[\"Promotion\"]","296ed1a5":"test_stat, pvalue = shapiro(df.loc[df[\"week\"] == 1, \"Score\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 2, \"Score\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 3, \"Score\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))\n\ntest_stat, pvalue = shapiro(df.loc[df[\"week\"] == 4, \"Score\"])\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","449b8ba6":"test_stat, pvalue = kruskal(df.loc[df[\"week\"] == 1, \"Score\"],\n                                 df.loc[df[\"week\"] == 2, \"Score\"],\n                                df.loc[df[\"week\"] == 3, \"Score\"],\n                                df.loc[df[\"week\"] == 4, \"Score\"])\n\nprint('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))","03ddc7b8":"df.groupby([\"week\"]).agg({\"Score\": \"mean\"}).plot(kind = \"bar\", rot = 45);","40f8eb00":"##### H0: M1 = M2 = M3 = M4\n##### H1: At least one group's mean are different","cbbad7c8":"## 2 - A\/B Testing (for \"SalesInThousands\", \"Promotion\" and \"AgeOfStore\")","3c7f8550":"# A\/B TESTING(ANOVA) FOR FAST FOOD MARKETING CAMPAIGN","336f80c1":"### Normality Assumption","74846e5a":"In this section, we will apply a\/b testing just for \"SalesInThousands\" variable according to the weeks","88a3d115":"### ANOVA Testing","1a930443":"##### H0: M1 = M2 = M3 = M4\n##### H1: At least one group's mean are different","2359e022":"We will try to analyze the data to see the story of the dataset and understand whether there is a need to preprocess for our data or not.\n\nAfter that we will apply A\/B Testing to check that our new product is profitable or not.","1dd2f0a6":"### ANOVA Testing","c7069135":"# Final Note","31fdcb79":"# Libraries","1408abe2":"##### We reject H0 \n##### There is no normal distribution","1ec624a8":"##### We reject H0 \n##### There is no normal distribution","ee4242ec":"##### H0: Normally Distributed\n##### H1: Not Normally Distributed","183c7e77":"## 1 - A\/B Testing (just for \"SalesInThousands\")","bc930f24":"#### -----------------------------------------------------------","afed4c8d":"# Getting Data","fb810835":"### Normality Assumption","38ecfbb3":"#### As a result, there is no significant difference among weeks.So we can say that our new item is not more profitable than the other products.If we put the new product to our menu, there might not be big difference.We can try to develop different product.","679306ef":"# Analyzing the Data","4570a7a3":"In this section, I will create new variable which is called as \"Score\".It includes multiplication of these three variables.I want to consider impacts of these variables and compare with A\/B Testing","fd7aa29a":"# Applying A\/B Testing","21fda1c3":"##### H0: Normally Distributed\n##### H1: Not Normally Distributed"}}