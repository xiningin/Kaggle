{"cell_type":{"968359b0":"code","9aec6e44":"code","fa5c32b3":"code","d72588ac":"code","236e7d0b":"code","aeec3863":"code","609dda69":"code","a52449fa":"markdown","c8ae660b":"markdown","d2666884":"markdown","1f80aabf":"markdown","e1551dd7":"markdown"},"source":{"968359b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9aec6e44":"import torch\nfrom transformers import TrOCRProcessor, VisionEncoderDecoderModel\nimport requests \nfrom PIL import Image\n\nmodel_path = \"..\/input\/notebook-2-train-trocr-model\/model\/\"\n\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nprocessor = TrOCRProcessor.from_pretrained(\"microsoft\/trocr-base-handwritten\") \nmodel = VisionEncoderDecoderModel.from_pretrained(model_path).to(device)","fa5c32b3":"%%sh\nrm -rf test\ncp -a ..\/input\/inclass-handwritten-digit-recognition\/SmallTest test\nmogrify -resize x100 -auto-threshold Kapur -format jpg test\/*","d72588ac":"from IPython.display import display, Image as IImage\n\nprint('Before:')\ndisplay(IImage(filename='..\/input\/inclass-handwritten-digit-recognition\/SmallTest\/1a4545ae6128dab578f90fb22b55758a.png'))\nprint('After:')\ndisplay(IImage(filename='test\/1a4545ae6128dab578f90fb22b55758a.jpg'))","236e7d0b":"data_path = 'test\/'\nrs = pd.read_csv(\"..\/input\/inclass-handwritten-digit-recognition\/sample_submission.csv\", dtype={'Id':str, 'Predicted':str})\nrs['file'] = data_path + rs['Id'] + '.jpg'","aeec3863":"for idx, row in rs.iterrows():\n    image = Image.open(row.file).convert(\"RGB\")\n    pixel_values = processor(image, return_tensors=\"pt\").pixel_values \n    generated_ids = model.generate(pixel_values.to(device), max_length=5)\n    generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]\n    rs.loc[idx, 'Predicted'] = generated_text\n    print(f'{idx+1}# Predicted: {generated_text}')\n    display(IImage(filename=row.file))","609dda69":"rs.to_csv('submission.csv', index=False, columns=['Id','Predicted'])\n!cat submission.csv","a52449fa":"## Preprocess SmallTest with ImageMagick (minimal demo)","c8ae660b":"## Write a submission file","d2666884":"## Predict","1f80aabf":"## Prepare submission data (+ path to file)","e1551dd7":"## Load TrOCR Model + our saved model"}}