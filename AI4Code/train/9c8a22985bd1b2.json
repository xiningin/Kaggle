{"cell_type":{"4ff9ceda":"code","913e238d":"code","dd9e416f":"code","a344bf77":"code","227fd36b":"code","059aafcc":"code","fd39849f":"code","b1b96a75":"code","77a9782a":"code","b6f5505a":"code","307dfde7":"code","81219e12":"code","e500d645":"code","cb55d117":"code","f0b419c8":"code","bc9a4f87":"code","e28dcd2a":"code","28ba6e23":"markdown","bf56b6a1":"markdown"},"source":{"4ff9ceda":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","913e238d":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot","dd9e416f":"df=pd.read_csv('..\/input\/hospital\/Dataset.csv' )\ndf","a344bf77":"df.describe()\n","227fd36b":"# get the number of missing data points per column\n\nmissing_values_count = df.isnull().sum()\nmissing_values_count","059aafcc":"df.columns\n","fd39849f":"#index of null rows\nfor column in df.columns:\n    list1=df.loc[df[column].isnull() ].index.tolist()\nlist1","b1b96a75":"#dropped null values\ndf=df.drop(index=31464)\ndf","77a9782a":"missing_values_count = df.isnull().sum()\nmissing_values_count","b6f5505a":"has_Diabetes=df.groupby(['gender','Diabetes']).Diabetes.count()\nhas_Diabetes","307dfde7":"plt.figure(figsize=(10,5))\nsns.set_style('darkgrid')\ngraph=sns.countplot(data=df, x='Diabetes', hue='gender', palette='coolwarm')\nplt.title('The relationship between gender and diabetes  ',loc='right')\nplt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=0.)\n\nfor p in graph.patches:\n             graph.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=11, color='gray', xytext=(0, 5),\n                 textcoords='offset points')","81219e12":"has_Diabetes=df.groupby(['Age','Diabetes']).Diabetes.count()\nhas_Diabetes","e500d645":"df[\"age_groups\"] = pd.cut(df[\"Age\"], bins = [-1, 18, 40,65, 99], labels = [\"kids\", \"adult\",'Middle age stage', \"elderly\"])\n\ndf[\"age_groups\"]","cb55d117":"has_DiabetesbyAge=df.groupby(['age_groups','Diabetes']).Diabetes.count()\nhas_DiabetesbyAge","f0b419c8":"plt.figure(figsize=(10,5))\nsns.set_style('darkgrid')\ngraph=sns.countplot(data=df, x='Diabetes', hue='age_groups', palette='coolwarm')\nplt.title('The relationship between age and diabetes  ',loc='right')\nplt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=5.)\n\nfor p in graph.patches:\n             graph.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=11, color='gray', xytext=(0, 5),\n                 textcoords='offset points')","bc9a4f87":"plt.figure(figsize=(10,5))\nsns.set_style('darkgrid')\ngraph=sns.countplot(data=df, x='Short_Message_Service', hue='No-show', palette='coolwarm')\nplt.title('The relationship between age and diabetes  ',loc='right')\nplt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=5.)\n\nfor p in graph.patches:\n             graph.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=11, color='gray', xytext=(0, 5),\n                 textcoords='offset points')","e28dcd2a":"plt.figure(figsize=(10,5))\nsns.set_style('darkgrid')\ngraph=sns.countplot(data=df, x='Handicap', hue='No-show', palette='coolwarm')\nplt.title('The relationship between Handicap and No-show  ',loc='right')\nplt.legend(bbox_to_anchor=(1.02, 1), loc=2, borderaxespad=5.)\n\nfor p in graph.patches:\n             graph.annotate(\"%.2f\" % p.get_height(), (p.get_x() + p.get_width() \/ 2., p.get_height()),\n                 ha='center', va='center', fontsize=11, color='gray', xytext=(0, 5),\n                 textcoords='offset points')","28ba6e23":"# discover the relationship between gender and diabetes","bf56b6a1":"# Read and describe data"}}