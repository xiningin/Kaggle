{"cell_type":{"4f367e72":"code","ee950109":"code","0858cdad":"code","de2b7a5b":"code","46a0b286":"code","729e5c9a":"code","0272f174":"code","c997d2ea":"code","b2d20316":"code","19d0dcf1":"code","1a05d548":"code","d02e031c":"code","eacaad34":"code","3cfe22d4":"code","b20c61d8":"code","26290e34":"code","37678692":"code","db468a91":"code","baeeeaf0":"code","b8b69033":"code","b325fb9d":"code","25457bb7":"code","20f9c573":"code","8b4b55cc":"code","1ba7f017":"code","4c1011e3":"code","c3f006d5":"code","cf17a1fa":"code","e8de398c":"code","e40c387a":"code","d5b77903":"code","c7847b54":"code","5dc19325":"code","b8b03c66":"code","7b617154":"code","207cf900":"code","5fc6df08":"code","a7b15610":"code","edd35b92":"code","23673f05":"code","6f5d4117":"code","e7330c48":"code","7c86be74":"code","624b6c25":"code","29050da7":"code","fc77c437":"code","53589c3d":"code","97a3fda1":"code","76df3cb2":"code","1905999e":"code","1c0d26c6":"code","f0fb97af":"code","f324537e":"code","0bdd55cb":"code","07f81d9b":"code","2e064dc3":"code","98d5ba13":"code","a3ad2d70":"code","67ba7557":"code","96f63f9e":"code","b77ee7cd":"code","7a62d642":"code","34d4b899":"code","6fc8faa4":"code","2aca49a5":"code","faf02578":"code","eaf6f35d":"code","93642f3c":"code","edf34bf7":"code","d3a97f4c":"code","43c88982":"code","7831cac2":"code","473fb1fb":"markdown","4f72ea00":"markdown","b2d2e269":"markdown","8d2c2f2d":"markdown","47c4d1f1":"markdown","3c82d06a":"markdown","fac489f8":"markdown","ae3a6ad1":"markdown","2a336060":"markdown","8e1f82e2":"markdown","cb1535e6":"markdown","bebcd799":"markdown","fb1df5df":"markdown","372ba462":"markdown","996fbb2c":"markdown","6ec26453":"markdown","e3df4dd6":"markdown","fe5ded5a":"markdown","335fe289":"markdown","50dd1716":"markdown","ccf1e383":"markdown","2be7ac96":"markdown","c59520c8":"markdown","f288e3f6":"markdown","daca0ea1":"markdown","f0c07c3d":"markdown","fb9c8d75":"markdown","9ab1a1b3":"markdown","957d3c0d":"markdown","4e64570e":"markdown","77739339":"markdown","07ef9eb7":"markdown","71796ce3":"markdown","02241f84":"markdown","fc56133c":"markdown","7529da70":"markdown","1c163f23":"markdown"},"source":{"4f367e72":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import QuantileTransformer\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.feature_selection import SelectFromModel\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import matthews_corrcoef\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import classification_report\nfrom sklearn import metrics","ee950109":"data = pd.read_csv(\"..\/input\/predicting-churn-for-bank-customers\/Churn_Modelling.csv\")","0858cdad":"data.corr()","de2b7a5b":"data.shape","46a0b286":"data.head()","729e5c9a":"data[\"Geography\"].unique() #checking for unique values in Geography","0272f174":"data.describe()","c997d2ea":"data.dtypes","b2d20316":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Geography', kind = 'count', data = data, palette = 'pink')\nplt.title('Customers distribution across Countries')\nplt.show()","19d0dcf1":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Gender', kind = 'count', data = data, palette = 'pastel')\nplt.title(\"Males vs Females\")\nplt.show()","1a05d548":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'IsActiveMember', kind = 'count', data = data, palette = 'pink')\nplt.title(\"Active VS Non-Active Members\")\nplt.show()","d02e031c":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'HasCrCard', kind = 'count', palette = 'pastel', data = data)\nplt.title(\"Credit Card VS No Credit Card\")\nplt.show()","eacaad34":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Exited', kind = 'count', hue = 'Gender', palette = 'pink', data = data)\nplt.title(\"Gender and Exited\")\nplt.show()","3cfe22d4":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'HasCrCard', kind = 'count', hue = 'Gender', palette = 'pastel', data = data)\nplt.title(\"Gender and Credit Card\")\nplt.show()","b20c61d8":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'IsActiveMember', kind = 'count', hue = 'Gender', palette = 'pink', data = data)\nplt.title(\"Gender and Active Members\")\nplt.show()","26290e34":"plt.figure(figsize = (15,15))\nsns.catplot(x = \"NumOfProducts\", kind = 'count', palette = 'pastel', data = data )\nplt.title('Number of Products')\nplt.show()","37678692":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Tenure', kind = 'count', palette = 'pastel', data = data)\nplt.title(\"Tenure of Customer\")\nplt.show()","db468a91":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Exited', kind = 'count', hue = 'IsActiveMember', palette = 'pink', data = data)\nplt.title(\"Exited and Active Members\")\nplt.show()","baeeeaf0":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'Exited', kind = 'count', hue = 'HasCrCard', palette = 'pastel', data = data)\nplt.title(\"Exited and Card\")\nplt.show()","b8b69033":"plt.figure(figsize = (15,15))\nsns.catplot(x = 'IsActiveMember', kind = 'count', hue = 'HasCrCard', palette = 'pink', data = data)\nplt.title('Active Member and Card')\nplt.show()","b325fb9d":"plt.figure(figsize = (15,15))\nsns.scatterplot(x = 'Balance', y = 'EstimatedSalary', hue = 'Exited',palette = 'pastel', data = data)\nplt.title(\"Balance vs Estimated Salary\")\nplt.show()","25457bb7":"plt.figure(figsize = (15,15))\nsns.scatterplot(x = 'Balance', y = 'CreditScore', hue = 'Exited',palette = 'pink', data = data)\nplt.title(\"Balance vs Credit Score\")\nplt.show()","20f9c573":"plt.figure(figsize = (15,15))\nsns.scatterplot(x = 'Balance', y = 'EstimatedSalary', hue = 'Gender',palette = 'pastel', data = data)\nplt.title(\"Estimated Salary vs Credit Score\")\nplt.show()","8b4b55cc":"plt.figure(figsize = (15,15))\nsns.scatterplot(x = 'Balance', y = 'EstimatedSalary', hue = 'IsActiveMember',palette = 'pastel', data = data)\nplt.title(\"Estimated Salary vs Credit Score\")\nplt.show()","1ba7f017":"data.drop(['RowNumber', 'CustomerId', 'Surname'], axis = 1, inplace = True)","4c1011e3":"data.isnull().sum() #checking for null values","c3f006d5":"plt.figure(figsize = (15,15))\nsns.distplot(data['Age'])\nplt.title(\"Age\")\nplt.show()","cf17a1fa":"plt.figure(figsize = (15,15))\nsns.distplot(data[\"CreditScore\"])\nplt.title(\"Credit Score\")\nplt.show()","e8de398c":"plt.figure(figsize = (15,15))\nsns.distplot(data[\"EstimatedSalary\"])\nplt.title(\"Estimated Salary\")\nplt.show()","e40c387a":"plt.figure(figsize = (15,15))\nsns.distplot(data[\"Balance\"])\nplt.title(\"Balance\")\nplt.show()","d5b77903":"column = [\"Age\", \"Balance\", \"EstimatedSalary\", \"CreditScore\"]\nfor i in column:\n    plt.figure(figsize = (15,15))\n    sns.boxplot(data[i])\n    plt.title('Box Plot')\n    plt.show()","c7847b54":"data = data[(data[\"Age\"] <60)]\ndata = data[(data[\"CreditScore\"] >400)]","5dc19325":"data.describe()","b8b03c66":"data[\"Balance\"] = QuantileTransformer().fit_transform(data[\"Balance\"].values.reshape(-1,1))\ndata[\"CreditScore\"] = QuantileTransformer().fit_transform(data[\"CreditScore\"].values.reshape(-1,1))\ndata[\"EstimatedSalary\"] = QuantileTransformer().fit_transform(data[\"EstimatedSalary\"].values.reshape(-1,1))\ndata[\"Age\"] = QuantileTransformer().fit_transform(data[\"Age\"].values.reshape(-1,1))","7b617154":"data[\"Balance\"] = StandardScaler().fit_transform(data[\"Balance\"].values.reshape(-1,1))\ndata[\"CreditScore\"] = StandardScaler().fit_transform(data[\"CreditScore\"].values.reshape(-1,1))\ndata[\"EstimatedSalary\"] = StandardScaler().fit_transform(data[\"CreditScore\"].values.reshape(-1,1))\n","207cf900":"data.describe()","5fc6df08":"data[\"Geography\"] = LabelEncoder().fit_transform(data[\"Geography\"])\ndata[\"Gender\"] = LabelEncoder().fit_transform(data[\"Gender\"])","a7b15610":"data.head()","edd35b92":"data.corr()","23673f05":"y = data[\"Exited\"]","6f5d4117":"y.head()","e7330c48":"data.drop([\"Exited\"], axis = 1, inplace = True)","7c86be74":"data.head()","624b6c25":"train_x,test_x,train_y,test_y = train_test_split(data,y, test_size = 0.4, random_state = 50)","29050da7":"logistic = LogisticRegression()\nlogistic.fit(train_x,train_y)\nlog_y = logistic.predict(test_x)\nprint(accuracy_score(log_y,test_y))","fc77c437":"random_parameters = {'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000] ,'penalty':['l1','l2']}\nprint(random_parameters)","53589c3d":"random_para = RandomizedSearchCV(estimator = logistic, param_distributions = random_parameters, n_iter = 50, cv = 10, verbose=2, random_state= 50, n_jobs = -1)\nrandom_para.fit(train_x,train_y)","97a3fda1":"random_para.best_params_","76df3cb2":"logistic2 = LogisticRegression(penalty ='l2', C =1)\nlogistic2.fit(train_x,train_y)\nlog_y = logistic2.predict(test_x)\nprint(accuracy_score(log_y,test_y))","1905999e":"feature = SelectFromModel(LogisticRegression())\nfeature.fit(train_x,train_y)\nfeature_support = feature.get_support()\nfeature_selected = train_x.loc[:,feature_support].columns.tolist()\nprint(str(len(feature_selected)), 'selected features')","1c0d26c6":"print(feature_selected)","f0fb97af":"train_x_feature = train_x[[\"Age\", \"IsActiveMember\"]]\ntrain_x_feature.head()","f324537e":"test_x_feature = test_x[[\"Age\", \"IsActiveMember\"]]\ntest_x_feature.head()","0bdd55cb":"logistic.fit(train_x_feature, train_y)\nlog_y_feature = logistic.predict(test_x_feature)\nprint(accuracy_score(log_y_feature, test_y))","07f81d9b":"random = RandomForestClassifier()\nrandom.fit(train_x,train_y)\nrandom_y = random.predict(test_x)\nprint(accuracy_score(random_y,test_y))","2e064dc3":"n_estimators = [int(x) for x in np.linspace(start = 200, stop = 2000, num = 10)]\nmax_features = ['auto','sqrt']\nmax_depth = [int(x) for x in np.linspace(10,110,num=11)]\nmax_depth.append(None)\nmin_samples_split = [2,5,10]\nmin_samples_leaf = [1,2,4]\nbootstrap = [True, False]\nrandom_grid = {'n_estimators': n_estimators,\n'max_features': max_features,\n'max_depth': max_depth,\n'min_samples_split': min_samples_split,\n'min_samples_leaf': min_samples_leaf,\n'bootstrap': bootstrap\n}\nprint(random_grid)","98d5ba13":"random_para = RandomizedSearchCV(estimator = random, param_distributions = random_grid, n_iter = 100, cv = 3, verbose=2, random_state=42, n_jobs = -1)\nrandom_para.fit(train_x,train_y)","a3ad2d70":"random_para.best_params_","67ba7557":"random_2 = RandomForestClassifier(n_estimators=1400,min_samples_split =10,min_samples_leaf= 2,max_features = 'sqrt',max_depth=80,bootstrap= True)\nrandom_2.fit(train_x,train_y)\nrandom_2_y = random_2.predict(test_x)\nprint(accuracy_score(random_2_y,test_y)) ","96f63f9e":"(tn,fp,fn,tp) = confusion_matrix(random_2_y, test_y).ravel()\n(tn,fp,fn,tp)\nTPR = tp\/(tp+fn)\n# Specificity or true negative rate\nTNR = tn\/(tn+fp) \n# Precision or positive predictive value\nPPV = tp\/(tp+fp)\n# Negative predictive value\nNPV = tn\/(tn+fn)\n# Fall out or false positive rate\nFPR = fp\/(fp+fn)\n# False negative rate\nFNR = fn\/(tp+fn)\n# False discovery rate\nFDR = fp\/(tp+fp)\nprint((TPR,TNR,PPV,NPV,FPR,FNR,FDR))","b77ee7cd":"matthews_corrcoef(test_y,random_2_y)","7a62d642":"print(classification_report(random_2_y,test_y))","34d4b899":"feature = SelectFromModel(RandomForestClassifier(n_estimators=1400,min_samples_split =10,min_samples_leaf= 2,max_features = 'sqrt',max_depth=80,bootstrap= True))\nfeature.fit(train_x,train_y)\nfeature_support = feature.get_support()\nfeature_selected = train_x.loc[:,feature_support].columns.tolist()\nprint(str(len(feature_selected)), 'selected features')","6fc8faa4":"feature_selected","2aca49a5":"train_x_feature = train_x[['Age', 'Balance', 'NumOfProducts']]\ntrain_x_feature.head()","faf02578":"test_x_feature = test_x[['Age', 'Balance', 'NumOfProducts']]\ntest_x_feature.head()","eaf6f35d":"random_2.fit(train_x_feature,train_y)\nrandom_2_feature_y = random_2.predict(test_x_feature)\nprint(accuracy_score(random_2_feature_y,test_y))","93642f3c":"bayes = GaussianNB()\nbayes.fit(train_x,train_y)\nbayes_y = bayes.predict(test_x)\nprint(accuracy_score(bayes_y,test_y))","edf34bf7":"train_x_feature = train_x[[\"Age\", \"Balance\"]] #based on correlation values\ntrain_x_feature.head()","d3a97f4c":"test_x_feature = test_x[[\"Age\", \"Balance\"]] #based on correlation values\ntest_x_feature.head()","43c88982":"bayes.fit(train_x_feature,train_y)\nbayes_feature_y =bayes.predict(test_x_feature)\nprint(accuracy_score(bayes_feature_y, test_y))","7831cac2":"print(str((accuracy_score(random_2_y,test_y)) * 100) + \"%\")","473fb1fb":"**Feature Selection**","4f72ea00":"# Splitting Train and Test Data","b2d2e269":"**Normalizing the data**","8d2c2f2d":"# Model Fitting","47c4d1f1":"**Males are more likely to be active members**","3c82d06a":"For checking skwness in the data","fac489f8":"**Tuning Parameters**","ae3a6ad1":"**But on other hand males are also likely to be non active members**","2a336060":"**Most of the customers have credit card**","8e1f82e2":"# Predicting churn for bank","cb1535e6":"**Most customers have tenure of in between 1-8 years in bank **","bebcd799":"# Random Forest Classifier","fb1df5df":"# Conclusion","372ba462":"**Label Encoding for categorical columns**","996fbb2c":"**Feature Selection**","6ec26453":"But on other hand they are more likely not to have credit cards too","e3df4dd6":"**Importing all the necessary libraries**","fe5ded5a":"# Logistic Regression","335fe289":"# Data Preprocessing","50dd1716":"**When we get time this notebook will be updated**","ccf1e383":"**Customers with credit card are likely to exit more**","2be7ac96":"The highest accuracy we achieved is by hypertuning RandomForestClassifier and using all the features.","c59520c8":"**Tuning the model**","f288e3f6":"# Data Visualization","daca0ea1":"**For detecting outliers in data**","f0c07c3d":"**Most of the customers have 1 or 2 products from bank**","fb9c8d75":"**Let's observer data**","9ab1a1b3":"**Non active members are likely to exit more, quite understandable**","957d3c0d":"If you like my work, please upvote.","4e64570e":"**Feature Selection**","77739339":"**We have more active members**","07ef9eb7":"**For checking correlation between features**","71796ce3":"**Males generally have credit card**","02241f84":"**Maximum customers from France**","fc56133c":"**Females are more likely to exit**","7529da70":"# Naive Bayes","1c163f23":"**We have more male customers**"}}