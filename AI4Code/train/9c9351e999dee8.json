{"cell_type":{"a665253f":"code","718d08c0":"code","24322bec":"code","753ae7aa":"code","37b89d47":"code","2bcd7177":"code","c2f63397":"code","fb7ce7dd":"code","3403fd7e":"code","12dd5b58":"code","6eb06729":"code","6ea2af45":"code","686415be":"code","941d047c":"code","1e61d0de":"code","cc5f7498":"code","3335a063":"code","dfb26326":"code","fffc9995":"code","189b5c2c":"code","f2b909b1":"code","fb6e8251":"code","ccbdaf47":"code","959d3db2":"code","acd8e9dc":"code","6107dbbf":"code","629c1749":"code","872cb2d8":"code","d976711f":"code","ca56b64a":"code","837592a1":"code","b91af64b":"code","ee199b72":"code","f9574f42":"code","016c1626":"code","cb84bdd8":"code","c1e0eca5":"code","12dec209":"code","f27f2821":"code","5262ec52":"code","9b1a0733":"code","5a3801e6":"code","4790433c":"code","1c5fc2a0":"code","c6c2204f":"code","f00baef9":"code","b6969ad4":"code","1428e338":"code","673ad69a":"code","4904ad11":"code","874d16fa":"code","5f7f4b86":"code","cf4d141e":"code","778a36e2":"code","72b1cb7d":"code","d44563ba":"code","8822512a":"code","af3c7ed6":"code","3ab2a1c0":"code","2d7670c6":"code","24217182":"code","09a5e705":"code","ed88655c":"code","17daf238":"code","af65294b":"markdown","318ad810":"markdown","5e620191":"markdown","d1ff9f84":"markdown","5d4d9b99":"markdown","a45d3993":"markdown","a2a7fc1d":"markdown","fe16cae9":"markdown","977b5dde":"markdown","c94bb3c1":"markdown","4aecc03a":"markdown","8bbdd5b4":"markdown","6d1bd761":"markdown","ded35867":"markdown","b711ee53":"markdown","a56c0a59":"markdown","514c69f6":"markdown","3197ac6a":"markdown","96e8b1dc":"markdown","c7140b97":"markdown","5ff2c7b8":"markdown","da7d2f65":"markdown","68d6304a":"markdown","69a0e1b5":"markdown","8f1675f6":"markdown","5920de8a":"markdown","383ab021":"markdown","6b16369f":"markdown","7bb3c5e8":"markdown","d024d7a4":"markdown","8bd67281":"markdown","44932a9c":"markdown","f87b51e2":"markdown","cd23e150":"markdown","131eeb54":"markdown","2a1d62d2":"markdown","609007b4":"markdown","89638f12":"markdown","2011984a":"markdown","38f000f1":"markdown","159d7dea":"markdown","610a6efc":"markdown","d78841da":"markdown","b4799159":"markdown","4f94272d":"markdown","4733013d":"markdown","595103ff":"markdown"},"source":{"a665253f":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport matplotlib.style\nimport matplotlib as mpl\nmpl.style.use('ggplot')\nsns.set_style('whitegrid')\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.base import TransformerMixin\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn import metrics\nfrom sklearn.feature_selection import RFE\nfrom sklearn.linear_model import LinearRegression\nfrom statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom sklearn.metrics import r2_score","718d08c0":"df = pd.read_csv('\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv')","24322bec":"df.head()","753ae7aa":"df.info()","37b89d47":"pd.DataFrame(df.isnull().sum())","2bcd7177":"df = df.drop('car_ID', axis =1)","c2f63397":"df.head()","fb7ce7dd":"df.describe()","3403fd7e":"plt.hist(df['price'] , bins = 20 ,color = 'blue')\nplt.xlabel('price')\nplt.ylabel('no. of cars')\nplt.title('Histogram')","12dd5b58":"df.dtypes","6eb06729":"df['CarName'] = df['CarName'].str.split(' ',expand=True)","6ea2af45":"df['CarName'].unique()","686415be":"\ndf['CarName'] = df['CarName'].replace({'maxda': 'mazda', 'nissan': 'Nissan', 'porcshce': 'porsche', 'toyouta': 'toyota', \n                            'vokswagen': 'volkswagen', 'vw': 'volkswagen'})","941d047c":" df['symboling'] = df['symboling'].astype(str)","1e61d0de":"df.loc[df.duplicated()]","cc5f7498":"categorical = df.select_dtypes(include=['object']).columns\nnumerical = df.select_dtypes(exclude=['object']).columns\ndf_categorical = df[categorical]\ndf_numerical = df[numerical]","3335a063":"df_numerical.head()","dfb26326":"df.corr()['price'].sort_values()","fffc9995":"df_categorical.head()","189b5c2c":"plt.figure(figsize=(20, 15))\nplt.subplot(3,3,1)\nsns.boxplot(x = 'doornumber', y = 'price', data = df)\nplt.subplot(3,3,2)\nsns.boxplot(x = 'fueltype', y = 'price', data = df)\nplt.subplot(3,3,3)\nsns.boxplot(x = 'aspiration', y = 'price', data = df)\nplt.subplot(3,3,4)\nsns.boxplot(x = 'carbody', y = 'price', data = df)\nplt.subplot(3,3,5)\nsns.boxplot(x = 'enginelocation', y = 'price', data = df)\nplt.subplot(3,3,6)\nsns.boxplot(x = 'drivewheel', y = 'price', data = df)\nplt.subplot(3,3,7)\nsns.boxplot(x = 'enginetype', y = 'price', data = df)\nplt.subplot(3,3,8)\nsns.boxplot(x = 'cylindernumber', y = 'price', data = df)\nplt.subplot(3,3,9)\nsns.boxplot(x = 'fuelsystem', y = 'price', data = df)\nplt.show()","f2b909b1":"drop_variables = ['symboling' , 'aspiration' ,'doornumber' ,'carbody' ,'fuelsystem' , 'wheelbase' , 'carheight' ,'boreratio' ,'stroke' , 'compressionratio' , 'peakrpm'  ]","fb6e8251":"df.drop( drop_variables , axis = 1, inplace = True)\ndf.shape","ccbdaf47":"df.head()","959d3db2":"cat = [ 'CarName' , 'fueltype' , 'enginelocation' , 'enginetype' , 'cylindernumber' , 'drivewheel' ]","acd8e9dc":"dummy_variables = pd.get_dummies(df[cat])\ndummy_variables.shape","6107dbbf":"dummy_variables = pd.get_dummies(df[cat], drop_first = True)\ndummy_variables.shape","629c1749":"df = pd.concat([df, dummy_variables], axis = 1)","872cb2d8":"df.head()","d976711f":"df.drop( cat, axis = 1, inplace = True)\ndf.shape","ca56b64a":"df.head()","837592a1":"np.random.seed(0)\ntrain, test = train_test_split(df, train_size = 0.7, test_size = 0.3, random_state = 100)","b91af64b":"train.shape","ee199b72":"test.shape","f9574f42":"train.head()","016c1626":"sc = StandardScaler()","cb84bdd8":"num = ['carlength','carwidth','curbweight','enginesize','horsepower','citympg','highwaympg','price']","c1e0eca5":"import warnings\nwarnings.filterwarnings(\"ignore\")\ntrain[num] = sc.fit_transform(train[num])","12dec209":"train.head()","f27f2821":"plt.figure(figsize = (20, 20))\nsns.heatmap(train.corr(), cmap=\"Blues\")\nplt.show()","5262ec52":"y_train = train.pop('price')\nX_train = train","9b1a0733":"X_train.shape","5a3801e6":"model=LinearRegression()","4790433c":"lr_1 =model.fit(X_train,y_train)","1c5fc2a0":"print(model.intercept_)","c6c2204f":"print(model.coef_)","f00baef9":"lm = LinearRegression()\nlm.fit(X_train, y_train)\n\nrfe = RFE(lm, 15)             \nrfe = rfe.fit(X_train, y_train)","b6969ad4":"list(zip(X_train.columns,rfe.support_,rfe.ranking_))","1428e338":"# Selecting the variables which are in support\n\ncol_sup = X_train.columns[rfe.support_]\ncol_sup","673ad69a":"# Creating X_train dataframe with RFE selected variables\n\nX_train_rfe = X_train[col_sup]","4904ad11":"# Adding a constant variable and Build a first fitted model\nimport statsmodels.api as sm  \nX_train_rfec = sm.add_constant(X_train_rfe)\nlm_rfe = sm.OLS(y_train,X_train_rfec).fit()\n\n#Summary of linear model\nprint(lm_rfe.summary())","874d16fa":"X_train_rfe1 = X_train_rfe.drop('enginetype_rotor', 1,)\n\n# Adding a constant variable and Build a second fitted model\n\nX_train_rfe1c = sm.add_constant(X_train_rfe1)\nlm_rfe1 = sm.OLS(y_train, X_train_rfe1c).fit()\n\n#Summary of linear model\nprint(lm_rfe1.summary())","5f7f4b86":"# Dropping highly correlated variables and insignificant variables\n\nX_train_rfe2 = X_train_rfe1.drop('enginelocation_rear', 1,)\n\n# Adding a constant variable and Build a third fitted model\n\nX_train_rfe2c = sm.add_constant(X_train_rfe2)\nlm_rfe2 = sm.OLS(y_train, X_train_rfe2c).fit()\n\n#Summary of linear model\nprint(lm_rfe2.summary())","cf4d141e":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train_rfe2.columns\nvif['VIF'] = [variance_inflation_factor(X_train_rfe2.values, i) for i in range(X_train_rfe2.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","778a36e2":"# Dropping highly correlated variables and insignificant variables\n\nX_train_rfe3 = X_train_rfe2.drop('fueltype_gas', 1,)\n\n# Adding a constant variable and Build a fourth fitted model\n\nX_train_rfe3c = sm.add_constant(X_train_rfe3)\nlm_rfe3 = sm.OLS(y_train, X_train_rfe3c).fit()\n\n#Summary of linear model\nprint(lm_rfe3.summary())","72b1cb7d":"# Dropping highly correlated variables and insignificant variables\n\nX_train_rfe4 = X_train_rfe3.drop('cylindernumber_six', 1,)\n\n# Adding a constant variable and Build a fifth fitted model\n\nX_train_rfe4c = sm.add_constant(X_train_rfe4)\nlm_rfe4 = sm.OLS(y_train, X_train_rfe4c).fit()\n\n#Summary of linear model\nprint(lm_rfe4.summary())","d44563ba":"# Dropping highly correlated variables and insignificant variables\n\nX_train_rfe5 = X_train_rfe4.drop('cylindernumber_five', 1,)\n\n# Adding a constant variable and Build a sixth fitted model\n\nX_train_rfe5c = sm.add_constant(X_train_rfe5)\nlm_rfe5 = sm.OLS(y_train, X_train_rfe5c).fit()\n\n#Summary of linear model\nprint(lm_rfe5.summary())","8822512a":"# Dropping highly correlated variables and insignificant variables\n\nX_train_rfe6 = X_train_rfe5.drop('cylindernumber_four', 1,)\n\n# Adding a constant variable and Build a seventh fitted model\n\nX_train_rfe6c = sm.add_constant(X_train_rfe6)\nlm_rfe6 = sm.OLS(y_train, X_train_rfe6c).fit()\n\n#Summary of linear model\nprint(lm_rfe6.summary())","af3c7ed6":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train_rfe6.columns\nvif['VIF'] = [variance_inflation_factor(X_train_rfe6.values, i) for i in range(X_train_rfe6.shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","3ab2a1c0":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ntest[num] = sc.transform(test[num])\ntest.shape","2d7670c6":"y_test = test.pop('price')\nX_test = test","24217182":"# Adding constant\nX_test_1 = sm.add_constant(X_test)\n\nX_test1 = X_test_1[X_train_rfe6c.columns]","09a5e705":"y_predictions = lm_rfe6.predict(X_test1)","ed88655c":"# Plotting y_test and y_pred.\nfig = plt.figure()\nplt.scatter(y_test,y_predictions)\nfig.suptitle('y_test vs y_predions', fontsize=20)   \nplt.xlabel('y_test ', fontsize=18)                       \nplt.ylabel('y_predictions', fontsize=16)    ","17daf238":"r2_score(y_test, y_predictions)","af65294b":"* The cars with fueltype as diesel are comparatively expensive than the cars with fueltype as gas.\n* The cars with engine location as rear in very expensive than cars with front engine location.\n* The cars with ohcv enginetype seems to be expensive and have a higher range of prices.\n* The price of the car vary with the no. of cylinders.\n* Expensive cars seem to have rwd drivewheel.\n* No. of doors do not influence the price of the car.\n","318ad810":"Let's draw boxplots for all the categorical variables.","5e620191":"* Dropping cylindernumber_five  beacuse its p-value is 0.495 and we want p-value less than 0.05.","d1ff9f84":"I'm going to drop car_ID column from the dataset","5d4d9b99":"## 1. Import libraries","a45d3993":"## Thank you !! ","a2a7fc1d":"* carlength           0.682920\n* carwidth            0.759325\n* horsepower          0.808139\n* curbweight          0.835305\n* enginesize          0.874145\n* highwaympg         -0.697599\n* citympg            -0.685751\n* carwidth , carlength, curbweight ,enginesize ,horsepower seems to have a poitive correlation with price.\n* citympg , highwaympg seem to have a significant negative correlation with price.","fe16cae9":"Now lets use RFE to select the independent variables which accurately predict the dependent variable price.\n\n## RFE - Recursive feature elimination \nLet's use Recursive feature elimination since we have too many independent variables.","977b5dde":"We generally want a VIF that is less than 5. So let's drop some variables.","c94bb3c1":"Multiple linear regression model is,","4aecc03a":"Let's rebuild the model.","8bbdd5b4":"Let's apply standardization except to dummy variables.","6d1bd761":"So from both of the analysis of numerical and categorical variables I decided to use the below varibales to fit the multiple linear regression model.\n* price , carwidth , carlength, curbweight ,enginesize ,horsepower ,citympg , highwaympg , CarName , fueltype , enginelocation , enginetype , cylindernumber , drivewheel","ded35867":"Then we will add the dummy variables to the original dataframe.","b711ee53":"Running RFE with the output number of the variable equals to 15.","a56c0a59":"## 4. Visualization of data","514c69f6":"* Dropping cylindernumber_four  beacuse its p-value is 0.349 and we want p-value less than 0.05.","3197ac6a":"Check for the duplicates.","96e8b1dc":"## 2. Check out the data","c7140b97":"## 5. Data Preparation","5ff2c7b8":"The R squared value of training set is 0.884 and test set is 0.87.","da7d2f65":"First I'm going to drop the variables which are not going to be used for the model.","68d6304a":"* Dropping enginelocation_rear beacuse its p-value is 0.154 and we want p-value less than 0.05.","69a0e1b5":"There are typing mistakes in Car company names. Let's rename them.","8f1675f6":"## 6. Multiple linear regression model","5920de8a":"### Problem Statement\nA Chinese automobile company Geely Auto aspires to enter the US market by setting up their manufacturing unit there and producing cars locally to give competition to their US and European counterparts.\n\nThey have contracted an automobile consulting company to understand the factors on which the pricing of cars depends. Specifically, they want to understand the factors affecting the pricing of cars in the American market, since those may be very different from the Chinese market. The company wants to know:\n\nWhich variables are significant in predicting the price of a car\nHow well those variables describe the price of a car\nBased on various market surveys, the consulting firm has gathered a large data set of different types of cars across the America market.\n\n### Business Goal\nWe are required to model the price of cars with the available independent variables. It will be used by the management to understand how exactly the prices vary with the independent variables. They can accordingly manipulate the design of the cars, the business strategy etc. to meet certain price levels. Further, the model will be a good way for management to understand the pricing dynamics of a new market.\n","383ab021":"The above will be used to predict the price of cars.","6b16369f":"We are good to go! We don't have any duplicate rows.","7bb3c5e8":"First we'll seperate numerical and categorical variables.","d024d7a4":"Now we have the dummy variables created for the categirical variables. We can drop the original cateorical variables from the dataset.","8bd67281":"* Dropping cylindernumber_six  beacuse its p-value is 0.684 and we want p-value less than 0.05.","44932a9c":"*Price = -0.2346 + 0.557 x horsepower + 0.5820 x Carname_audi + 1.5135 x Carname_bmw + 2.0651 x Carname_buick + 1.8828 X Carname_jaguar + 1.1414 x Carname_porsche + 0.7072 x Carname_volvo - 1.1521 x enginetype_dohcv - 0.9373 x cylindernumber_twelve *","f87b51e2":"According to distribution pf price mean price is around 13276.71. Minimum price of a car is 5118 while maximum price is 45400.","cd23e150":"## 7. Predictions","131eeb54":"## Thank you for opening this notebook!!","2a1d62d2":"Now let's change the datatype of symboling as it is categorical variable as per dictionary file","609007b4":"Let's rebuild the model.","89638f12":"## 3. Cleaning of data","2011984a":"First we will look at the distribution of the price which is our dependent variable.","38f000f1":"### Let's begin!","159d7dea":"First we need to convert the levels of the categorical variables to numeric values. For this we have to use dummy variables.","610a6efc":"## I hope this kernal is helpful for you. Your UPVOTE means alot to me!!","d78841da":"### In this kernel we will try to predict the price of cars. ","b4799159":"Now the VIFs and p-values both are within an acceptable range. Variables are statistically significant.","4f94272d":"* Dropping enginetype_rotor beacuse its p-value is 0.264 and we want p-value less than 0.05.","4733013d":"Next I'm going to check the correlation of price with other variables. Then I'll use the variables with highest correlation to fit our multiple regression model.","595103ff":"R squared value is 0.884"}}