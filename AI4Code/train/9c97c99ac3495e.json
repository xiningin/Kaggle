{"cell_type":{"261c9a59":"code","efa08009":"code","3011c3da":"code","b96a466f":"code","c43241b7":"code","135e438e":"code","cc109903":"code","0792a907":"code","094ca118":"code","142af05c":"code","11ed4cb1":"code","629161ca":"code","81ce6408":"code","01167b8b":"code","99dab6d7":"code","b025ed06":"code","7d20a3ce":"code","9d67a5ea":"code","530625a1":"code","c664ac85":"code","4029d1a8":"code","d5adfeb5":"code","8f83d6f7":"code","acc5eec3":"code","9b688551":"code","446593c8":"code","e5a44b6d":"code","b50d677e":"code","c3a80800":"code","a4f43e0b":"code","ec718997":"code","6bfba604":"markdown","d6ce42a4":"markdown","64d8a538":"markdown","4a615332":"markdown","e990f4df":"markdown","83c99c2a":"markdown","fba638db":"markdown","de848bba":"markdown","560d4236":"markdown","c69be48c":"markdown","43bdccd8":"markdown","917c4fe6":"markdown","84a462b1":"markdown","837bca4e":"markdown","eb1fecb2":"markdown","6bab682c":"markdown","e66af43e":"markdown","5a5d5801":"markdown","0050d364":"markdown","f3708429":"markdown","42f2665c":"markdown","bca4f4e1":"markdown","c70e8e84":"markdown","d0bb4c55":"markdown","16c9a315":"markdown","775e02ca":"markdown","4657e531":"markdown","ee444096":"markdown","bb0b40b3":"markdown"},"source":{"261c9a59":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","efa08009":"import numpy as np \nimport pandas as pd\nimport datetime\nimport seaborn as sns \nimport matplotlib.pyplot as plt\n# Plotly Libraris\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","3011c3da":"Football_Results=pd.read_csv(\"\/kaggle\/input\/womens-international-football-results\/results.csv\")\ndf=Football_Results.copy()\n","b96a466f":"df.head()","c43241b7":"df.info()","135e438e":"df.describe().T","cc109903":"df.isnull().values.any()","0792a907":"df.isnull().sum()","094ca118":"df['date']=pd.to_datetime(df['date'])\ndf['year']=pd.to_datetime(df['date']).dt.year\ndf['month']=pd.to_datetime(df['date']).dt.month\ndf['month_name']=df['date'].dt.strftime('%B')\ndf['total_score']=df['home_score']+df['away_score']\ndf['match_result']=np.where((df['home_score']>df['away_score']),'Home Team Win',\n                np.where(df['home_score']==df['away_score'],'Draw',\nnp.where((df['home_score']<df['away_score']),'Away Team Win',\"Not Specified\")))","142af05c":"df.head()","11ed4cb1":"df.info()","629161ca":"# Pie with custom colors\n\ndf['match_result']=np.where((df['home_score']>df['away_score']),'Home Team Win',np.where(df['home_score']==df['away_score'],'Draw',\nnp.where((df['home_score']<df['away_score']),'Away Team Win',\"Not Specified\")))\n\ndf_result=df.groupby('match_result')['city'].count().reset_index()\n\ncolors=['lightcyan','cyan',\"darkcyan\"]\nfig = go.Figure([go.Pie(labels=df_result['match_result'], values=df_result['city'])])\nfig.update_traces(hoverinfo='label+percent', textinfo='percent+value', textfont_size=15,\n                 marker=dict(colors=colors, line=dict(color='#000000', width=2)))\nfig.update_layout(title=\"Match Result\",title_x=0.5)\nfig.show()","81ce6408":"# Bar Chart - Gradient & Text Position\n\ndf_month=df['month_name'].value_counts().reset_index().rename(columns={'index':'month_name','month_name':'Count'})\n\n#Sort\ncustom_dict ={\"January\":0,\"February\":1,\"March\":2, \"April\":3,\"May\":4,\"June\":5,\"July\":6,\"August\":7,\"September\":8,\"October\":9,\"November\":10,\"December\":11}\ndf_month['month_name'] = pd.Categorical(df_month['month_name'], categories=sorted(custom_dict, key=custom_dict.get), ordered=True)\ndf_month=df_month.sort_values('month_name').reset_index(drop=True)\n\nfig = go.Figure(go.Bar(\n    x=df_month['month_name'],y=df_month['Count'],\n    marker={'color': df_month['Count'], \n    'colorscale': 'Viridis'},  \n    text=df_month['Count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='(1969-2020) Monthly  Match Counter Report',xaxis_title=\"Month\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","01167b8b":"# Bar Chart - Gradient & Text Position\n\ndf_month_score=df.groupby('month_name')['total_score'].sum().reset_index()\ndf_month_score.columns = ['month_name', 'Total_Score']\n\ncustom_dict ={\"January\":0,\"February\":1,\"March\":2, \"April\":3,\"May\":4,\"June\":5,\"July\":6,\"August\":7,\"September\":8,\"October\":9,\"November\":10,\"December\":11}\ndf_month_score['month_name'] = pd.Categorical(df_month_score['month_name'], categories=sorted(custom_dict, key=custom_dict.get), ordered=True)\ndf_month_score=df_month_score.sort_values('month_name').reset_index(drop=True)\n\nfig = go.Figure(go.Bar(\n    x=df_month_score['month_name'],y=df_month_score['Total_Score'],\n    marker={'color': df_month_score['Total_Score'], \n    'colorscale': 'Viridis'},  \n    text=df_month_score['Total_Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='(1969-2020) Monthly Total Score Report',xaxis_title=\"Month\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","99dab6d7":"#  Bubble Plot with Color gradient\n\ndf_tournament=df['tournament'].value_counts().to_frame().reset_index().rename(columns={'index':'Tournament','tournament':'Count'})[0:6]\n\n\nfig = go.Figure(data=[go.Scatter(\n    x=df_tournament['Tournament'], y=df_tournament['Count'],\n    mode='markers',\n    marker=dict(\n        color=df_tournament['Count'],\n        size=df_tournament['Count']*0.05,\n        showscale=True\n    ))])\n\nfig.update_layout(title='(1969-2020) Top Six Tournament Match Count',\n                  xaxis_title=\"Tournament Name\",\n                  yaxis_title=\" Match Count\",\n                  title_x=0.5)\nfig.show()","b025ed06":"# Horizontal Bar Chart\n\ndf_city=df['city'].value_counts().to_frame().reset_index().rename(columns={'index':'City','city':'Count'}).sort_values('Count',ascending=\"False\")\ndf_city=df_city[945:960]\n\nfig = go.Figure(go.Bar(y=df_city['City'], x=df_city['Count'], # Need to revert x and y axis\n                      orientation=\"h\")) # default orentation value is \"v\" - vertical ,we need to change it as orientation=\"h\"\nfig.update_layout(title_text='Top 15 Citys Match Was Played',\n                  xaxis_title=\"Count \",\n                  yaxis_title=\"Citys\",\n                  title_x=0.5)\nfig.show()","7d20a3ce":"# Bar Chart - Gradient & Text Position\n\ndf_country=df['country'].value_counts().to_frame().reset_index().rename(columns={'index':'Country','country':'Count'})[0:15]\n\nfig = go.Figure(go.Bar(\n    x=df_country['Country'],y=df_country['Count'],\n    marker={'color': df_country['Count'], \n    'colorscale': 'Viridis'},  \n    text=df_country['Count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Top 15 Country Match Was Played',xaxis_title=\"Country\",yaxis_title=\"Count\",title_x=0.5)\nfig.show()","9d67a5ea":"# Bar Chart - Gradient & Text Position\n\ndf_score=df['total_score'].value_counts().to_frame().reset_index().rename(columns={'index':'Total_Score','total_score':'Count'}).sort_values('Total_Score',ascending=\"False\")\n\nfig = go.Figure(go.Bar(\n    x=df_score['Total_Score'],y=df_score['Count'],\n    marker={'color': df_score['Count'], \n    'colorscale': 'Viridis'},  \n    text=df_score['Count'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text=' Distribution of Goals ',\n                  xaxis_title=\"Goals\",\n                  yaxis_title=\"Count\",\n                  title_x=0.5)\nfig.show()","530625a1":"# Tables - Cell Colo\n\ndf_max=df[df['total_score']==26][['date','home_team','away_team','home_score','away_score','tournament','total_score']]\ndf_max['date']=\"2006-11-10\"\n\ntab_df=df_max\n\ncolors=['lightblue','lightpink','lightgreen','yellow','lightseagreen']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Date', 'Home Team','Away Team','Home Score','Away Score','Tournament'],\n                                          line_color='white', fill_color='gray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[tab_df['date'], tab_df['home_team'],tab_df['away_team'],tab_df['home_score'],tab_df['away_score'],tab_df['tournament']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='black', size=11))\n                              )])\n                      \nfig.show()","c664ac85":"# Bar Chart - Gradient & Text Position\n\ndf_tournament=df.groupby(['tournament'])['total_score'].agg('sum').to_frame().reset_index().rename(columns={'tournament':'Tournament','total_score':'Total Score'})\ndf_tournament=df_tournament.sort_values(by='Total Score', ascending=False)[0:20]\n\nfig = go.Figure(go.Bar(\n    x=df_tournament['Tournament'],y=df_tournament['Total Score'],\n    marker={'color': df_tournament['Total Score'], \n    'colorscale': 'Viridis'},  \n    text=df_tournament['Total Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Top 20 Tournament Total Score',\n                  xaxis_title=\"Tournament\",\n                  yaxis_title=\"Total Score\",\n                  title_x=0.5)\nfig.show()","4029d1a8":"# Bar Chart - Gradient & Text Position\n\ndf_tournament=df.groupby(['tournament'])['total_score'].agg('mean').to_frame().reset_index().rename(columns={'tournament':'Tournament','total_score':'Total Score'})\ndf_tournament=df_tournament.sort_values(by='Total Score', ascending=False)[0:20]\n\nfig = go.Figure(go.Bar(\n    x=df_tournament['Tournament'],y=df_tournament['Total Score'],\n    marker={'color': df_tournament['Total Score'], \n    'colorscale': 'Viridis'},  \n    #text=df_tournament['Total Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Top 20 Tournament Mean Score',\n                  xaxis_title=\"Tournament\",\n                  yaxis_title=\"Mean Score\",\n                  title_x=0.5)\nfig.show()","d5adfeb5":"# Multiple Bullet\n\ndf_Worl_2019=df[df['tournament']=='FIFA World Cup']\ndf_Worl_2019=df_Worl_2019[df_Worl_2019['year']==2019]\n\nmach_palyed=df_Worl_2019['country'].count()\n\ntotal_score=df_Worl_2019['total_score'].sum()\n\nmean_score=df_Worl_2019['total_score'].mean()\n\nmax_score=df_Worl_2019['total_score'].max()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  max_score,\n    domain = {'x': [0.25, 1], 'y': [0.2, 0.3]},\n    title = {'text': \"Max Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 20]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = total_score,\n    domain = {'x': [0.25, 1], 'y': [0.4, 0.5]},\n    title = {'text': \"Total Score\",'font':{'color': 'black','size':17}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,200]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mean_score,\n    domain = {'x': [0.25, 1], 'y': [0.6, 0.7]},\n    title = {'text' :\"Mean Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"blue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_palyed,\n    domain = {'x': [0.25, 1], 'y': [0.8, 0.9]},\n    title = {'text' :\"Mach Played\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,75]},\n        'bar': {'color': \"blue\"}}\n))\nfig.update_layout(title=\"FIFA World Cup 2019 France \",title_x=0.5)\nfig.show()","8f83d6f7":"\ndf_Worl_2019_home_score=df_Worl_2019.groupby(by =['home_team'])['home_score'].sum().to_frame().reset_index().rename(columns={'home_team':'home_team','home_score':'Score1'})\ndf_Worl_2019_home_score=df_Worl_2019_home_score.sort_values(by='home_team', ascending=False)\ndf_Worl_2019_home_score.columns = ['Team', 'Score']\n\ndf_Worl_2019_away_score=df_Worl_2019.groupby(by =['away_team'])['away_score'].sum().to_frame().reset_index()\ndf_Worl_2019_away_score=df_Worl_2019_away_score.sort_values(by='away_team', ascending=False)\ndf_Worl_2019_away_score.columns = ['Team', 'Score']\n\ndf_World_Cup2019=pd.concat([df_Worl_2019_away_score,df_Worl_2019_home_score],ignore_index=True)\n\ntotal_score_World_Cup_2019=df_World_Cup2019.groupby(by =['Team'])['Score'].sum().to_frame().reset_index()\ntotal_score_World_Cup_2019.columns = ['Team','Total_Score']\ntotal_score_World_Cup_2019=total_score_World_Cup_2019.sort_values(by='Total_Score', ascending=False)\n\nfig = go.Figure(go.Bar(\n    x=total_score_World_Cup_2019['Team'],y=total_score_World_Cup_2019['Total_Score'],\n    marker={'color': total_score_World_Cup_2019['Total_Score'], \n    'colorscale': 'Viridis'},  \n    text=total_score_World_Cup_2019['Total_Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Score FIFA World Cup 2019 France',xaxis_title=\"Country\",yaxis_title=\"Number of Score\",title_x=0.5)\nfig.show()","acc5eec3":"# Tables - Cell Colo\n\n#FIFA World Cup 2019 France  Final Macth\n\ndf_Worl_2019=df[df['tournament']=='FIFA World Cup']\ndf_Worl_2019=df_Worl_2019[df_Worl_2019['year']==2019]\n\ndf_final=df_Worl_2019[df_Worl_2019['date']=='2019-07-07']\n\ntab_df=df_final\n\ncolors=['lightblue','lightpink','lightgreen','yellow','lightseagreen']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Date', 'Home Team','Away Team','Home Score','Away Score','Tournament'],\n                                          line_color='white', fill_color='gray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[tab_df['date'], tab_df['home_team'],tab_df['away_team'],tab_df['home_score'],tab_df['away_score'],tab_df['tournament']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='black', size=11))\n                              )])\n                      \nfig.show()","9b688551":"# Multiple Bullet\n\ndf_UEFA_Euro_2017=df[df['tournament']=='UEFA Euro']\ndf_UEFA_Euro_2017=df_UEFA_Euro_2017[df_UEFA_Euro_2017['year']==2017]\n\nmach_palyed=df_UEFA_Euro_2017['country'].count()\n\ntotal_score=df_UEFA_Euro_2017['total_score'].sum()\n\nmean_score=df_UEFA_Euro_2017['total_score'].mean()\n\nmax_score=df_UEFA_Euro_2017['total_score'].max()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  max_score,\n    domain = {'x': [0.25, 1], 'y': [0.2, 0.3]},\n    title = {'text': \"Max Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 20]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = total_score,\n    domain = {'x': [0.25, 1], 'y': [0.4, 0.5]},\n    title = {'text': \"Total Score\",'font':{'color': 'black','size':17}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,100]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mean_score,\n    domain = {'x': [0.25, 1], 'y': [0.6, 0.7]},\n    title = {'text' :\"Mean Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"blue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_palyed,\n    domain = {'x': [0.25, 1], 'y': [0.8, 0.9]},\n    title = {'text' :\"Mach Played\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,50]},\n        'bar': {'color': \"blue\"}}\n))\nfig.update_layout(title=\"UEFA Euro Cup 2017 Netherlands \",title_x=0.5)\nfig.show()","446593c8":"df_UEFA_Euro_2017_home_score=df_UEFA_Euro_2017.groupby(by =['home_team'])['home_score'].sum().to_frame().reset_index().rename(columns={'home_team':'home_team','home_score':'Score1'})\ndf_UEFA_Euro_2017_home_score=df_UEFA_Euro_2017_home_score.sort_values(by='home_team', ascending=False)\ndf_UEFA_Euro_2017_home_score.columns = ['Team', 'Score']\n\ndf_UEFA_Euro_2017_away_score=df_UEFA_Euro_2017.groupby(by =['away_team'])['away_score'].sum().to_frame().reset_index()\ndf_UEFA_Euro_2017_away_score=df_UEFA_Euro_2017_away_score.sort_values(by='away_team', ascending=False)\ndf_UEFA_Euro_2017_away_score.columns = ['Team', 'Score']\n\ndf_UEFA_Euro_Cup_2017=pd.concat([df_UEFA_Euro_2017_home_score,df_UEFA_Euro_2017_away_score],ignore_index=True)\n\ntotal_score_UEFA_Euro_Cup_2017=df_UEFA_Euro_Cup_2017.groupby(by =['Team'])['Score'].sum().to_frame().reset_index()\ntotal_score_UEFA_Euro_Cup_2017.columns = ['Team','Total_Score']\ntotal_score_UEFA_Euro_Cup_2017=total_score_UEFA_Euro_Cup_2017.sort_values(by='Total_Score', ascending=False)\n\nfig = go.Figure(go.Bar(\n    x=total_score_UEFA_Euro_Cup_2017['Team'],y=total_score_UEFA_Euro_Cup_2017['Total_Score'],\n    marker={'color': total_score_UEFA_Euro_Cup_2017['Total_Score'], \n    'colorscale': 'Viridis'},  \n    text=total_score_UEFA_Euro_Cup_2017['Total_Score'],\n    textposition = \"outside\",\n))\nfig.update_layout(title_text='Score UEFA Euro Cup 2017 Netherlands',xaxis_title=\"Country\",yaxis_title=\"Number of Score\",title_x=0.5)\nfig.show()","e5a44b6d":"# Tables - Cell Colo\n\n#UEFA Euro 2017 Netherlands Final Macth\n\ndf_UEFA_Euro_2017=df[df['tournament']=='UEFA Euro']\ndf_UEFA_Euro_2017=df_UEFA_Euro_2017[df_UEFA_Euro_2017['year']==2017]\n\ndf_final=df_UEFA_Euro_2017[df_UEFA_Euro_2017['date']=='2017-08-06']\n\ntab_df=df_final\n\ncolors=['lightblue','lightpink','lightgreen','yellow','lightseagreen']\n    \nfig = go.Figure(data=[go.Table(header=dict(values=['Date', 'Home Team','Away Team','Home Score','Away Score','Tournament'],\n                                          line_color='white', fill_color='gray',\n                                  align='center',font=dict(color='white', size=12)\n                                          ),\n                               \n                 cells=dict( values=[tab_df['date'], tab_df['home_team'],tab_df['away_team'],tab_df['home_score'],tab_df['away_score'],tab_df['tournament']],\n                           line_color=colors, fill_color=colors,\n                           align='center', font=dict(color='black', size=11))\n                              )])\n                      \nfig.show()","b50d677e":"# Gauge Indicator\n\ndf_United_States_home=df[df['home_team']=='United States']\ndf_United_States_away=df[df['away_team']=='United States']\n\ndf_United_States_home_score=df_United_States_home.groupby(by =['home_team'])['home_score'].sum().to_frame().reset_index()\ndf_United_States_home_score.columns = ['Team', 'Total_Score']\n\ndf_United_States_away_score=df_United_States_away.groupby(by =['away_team'])['away_score'].sum().to_frame().reset_index()\ndf_United_States_away_score.columns = ['Team', 'Total_Score']\n\ndf_United_States_Total_Score=pd.concat([df_United_States_home_score,df_United_States_away_score],ignore_index=True)\n\ndf_United_States_Total_Score2=df_United_States_Total_Score.groupby(by =['Team'])['Total_Score'].sum().to_frame().reset_index()\ndf_United_States_Total_Score2.columns = ['Team','Total_Score']\n\nTotal_Score=df_United_States_Total_Score2['Total_Score'].max()\n\nfig = go.Figure(go.Indicator(\n    mode = \"gauge+number\",\n    gauge = {\n       'axis': {'range': [None, 750]}},\n    value = Total_Score,\n    title = {'text': \"United States Total Score\"},\n    domain = {'x': [0, 1], 'y': [0, 1]}\n))\nfig.show()","c3a80800":"# Multiple Bullet Gauge  \n\ndf_United_States_home=df[df['home_team']=='United States']\n\ndf_United_States_away=df[df['away_team']=='United States']\n\n\nmach_palyed1=df_United_States_home['country'].count()\n\nmach_palyed2=df_United_States_away['country'].count()\n\ntotal_mach_palyed=mach_palyed1+mach_palyed2\n\n\nhome_score=df_United_States_home['home_score'].sum()\n\naway_score=df_United_States_away['away_score'].sum()\n\ntotal_score=home_score+away_score\n\nhome_score_other=df_United_States_home['away_score'].sum()\n\naway_score_other=df_United_States_away['home_score'].sum()\n\nconcede_a_goal=home_score_other+away_score_other\n\nmean_score=total_score\/total_mach_palyed\n\n\nmax_score_home=df_United_States_home['home_score'].max()\n\n\nmax_score_away=df_United_States_away['away_score'].max()\n\n\nmax_score=max_score_home\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  max_score,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Max Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 20]},\n        'bar': {'color': \"blue\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = total_score,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Total Score\",'font':{'color': 'black','size':17}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,750]},\n        'bar': {'color': \"cyan\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mean_score,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text' :\"Mean Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,10]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = total_mach_palyed,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Mach Played\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,250]},\n        'bar': {'color': \"darkcyan\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = concede_a_goal,\n    domain = {'x': [0.25, 1], 'y': [0.9,1]},\n    title = {'text' :\"Concede a Goal\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,200]},\n        'bar': {'color': \"red\"}}\n))\nfig.update_layout(title=\" United States \",title_x=0.5)\nfig.show()","a4f43e0b":"# Multiple Bullet Gauge  \n\ndf_US_home=df[df['home_team']=='United States']\n\nmach_count=df[df['home_team']=='United States'][\"date\"].count()\n\nmach_home_win=df_US_home[df_US_home['match_result']=='Home Team Win'][\"date\"].count()\n\nmach_home_lose=df_US_home[df_US_home['match_result']=='Away Team Win'][\"date\"].count()\n\nmach_home_draw=df_US_home[df_US_home['match_result']=='Draw'][\"date\"].count()\n\nhome_score=df_US_home['home_score'].sum()\n\naway_team_score=df_US_home['away_score'].sum()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  mach_home_win,\n    domain = {'x': [0.25, 1], 'y': [0.9, 1]},\n    title = {'text': \"Home Win\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 150]},\n        'bar': {'color': \"green\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_home_lose,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text': \"Home Lose\",'font':{'color': 'black','size':17}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,20]},\n        'bar': {'color': \"red\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_home_draw,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Draw\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,50]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  home_score,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Home Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 500]},\n        'bar': {'color': \"cyan\"}}))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  away_team_score,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Away Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 100]},\n        'bar': {'color': \"darkcyan\"}}))\n\nfig.update_layout(title=\" Home Match United States \",title_x=0.5)\nfig.show()","ec718997":"# Multiple Bullet Gauge  \n\ndf_US_away=df[df['away_team']=='United States']\n\naway_score=df_US_away['away_score'].sum()\n\nmach_count=df[df['away_team']=='United States'][\"date\"].count()\n\n\nmach_home_win=df_US_away[df_US_away['match_result']=='Home Team Win'][\"date\"].count()\n\n\nmach_home_lose=df_US_away[df_US_away['match_result']=='Away Team Win'][\"date\"].count()\n\n\nmach_home_draw=df_US_away[df_US_away['match_result']=='Draw'][\"date\"].count()\n\n\nhome_score=df_US_away['home_score'].sum()\n\naway_team_score=df_US_away['away_score'].sum()\n\nfig = go.Figure()\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  mach_home_win,\n    domain = {'x': [0.25, 1], 'y': [0.9, 1]},\n    title = {'text': \"Home Win\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 30]},\n        'bar': {'color': \"red\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_home_lose,\n    domain = {'x': [0.25, 1], 'y': [0.5, 0.6]},\n    title = {'text': \"Home Lose\",'font':{'color': 'black','size':17}},\n    number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,100]},\n        'bar': {'color': \"green\"}}))\n\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value = mach_home_draw,\n    domain = {'x': [0.25, 1], 'y': [0.7, 0.8]},\n    title = {'text' :\"Draw\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None,50]},\n        'bar': {'color': \"darkblue\"}}\n))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  home_score,\n    domain = {'x': [0.25, 1], 'y': [0.3, 0.4]},\n    title = {'text': \"Home Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 100]},\n        'bar': {'color': \"cyan\"}}))\nfig.add_trace(go.Indicator(\n    mode = \"number+gauge\", value =  away_team_score,\n    domain = {'x': [0.25, 1], 'y': [0.1, 0.2]},\n    title = {'text': \"Away Score\",'font':{'color': 'black','size':17}},\n     number={'font':{'color': 'black'}},\n    gauge = {\n        'shape': \"bullet\",\n        'axis': {'range': [None, 200]},\n        'bar': {'color': \"darkcyan\"}}))\n\nfig.update_layout(title=\" Away Match United States \",title_x=0.5)\nfig.show()","6bfba604":"# <a id='4'> 3.Match Result<\/a>","d6ce42a4":"# <a id='9'> 8. Top Countrys Match Was Played<\/a>","64d8a538":"* date - date of the match\n\n* home_team - the name of the home team\n\n* away_team - the name of the away team\n \n* home_score - full-time home team score including extra time, not including penalty-shootouts\n \n* away_score - full-time away team score including extra time, not including penalty-shootouts\n\n* tournament - the name of the tournament\n \n* city - the name of the city\/town\/administrative unit where the match was played\n\n* country - the name of the country where the match was played\n\n* neutral - TRUE\/FALSE column indicating whether the match was played at a neutral venue","4a615332":"## <a id='24'> <font color=\"LIGHTSEAGREEN\" size=+2.5><b>End Note<\/b><\/font> <\/a>\n","e990f4df":"# <a id='1'> Dataset Introduction<\/a>","83c99c2a":"# <a id='19'>18.UEFA Euro Cup 2017 Netherlands Final Macth","fba638db":"# <a id='7'> 6.Tournament Match Count<\/a>","de848bba":"# <a id='20'>19.United States Total Score","560d4236":"## <a id='25'> <font size=\"+2\" color=\"LIGHTSEAGREEN\"><b>Reference<\/b><\/font><br>\n\n* https:\/\/plotly.com\/python\/\n* https:\/\/stackoverflow.com (for coding problems)\n","c69be48c":"# <a id='18'>17.Score  UEFA Euro Cup  2017 Netherlands","43bdccd8":"# <a id='17'>16.UEFA Euro 2017 Netherlands","917c4fe6":"# <a id='15'>14.Score FIFA World Cup France 2019","84a462b1":"# <a id='21'>20.United States ","837bca4e":"# <a id='12'>11.Tournament Total Score <\/a>","eb1fecb2":"# <a id='23'>22.Away Match United States","6bab682c":"# <a id='5'> 4.Monthly Match Report<\/a>","e66af43e":"# <a id='14'>13.FIFA World Cup 2019 France <\/a>","5a5d5801":"I hope you enjoyed my kernel.If you like this notebook, an <font color=\"DARKCYAN\"><b>Upvote<\/b><\/font> would be great ! :)\n\nI am new with data science. Please <font color=\"GREEN\"><b>comments<\/b><\/font> me your <font color=\"GREEN\"><b>feedbacks<\/b><\/font> to help me improve myself. \n    \nThanks for your time\n    ","0050d364":"# <a id='13'>12.Tournament Mean Score <\/a>","f3708429":"# <a id='22'>21.Home Match United States","42f2665c":"# <a id='6'> 5.Monthly Total Score Report<\/a>","bca4f4e1":"# <a id='2'> 1. Importing Libraries and Dataset<\/a>","c70e8e84":"# <a id='10'> 9.Distribution of Goals<\/a>","d0bb4c55":"# <a id='16'>15.FIFA World Cup France 2019 Final Macth","16c9a315":"# Table of contents\n- <a href='#1'>  Dataset Introduction <\/a> \n- <a href='#2'>1. Importing Libraries and Dataset <\/a> \n- <a href='#3'>2. Feature Generation<\/a> \n- <a href='#4'>3. Match Result <\/a> \n- <a href='#5'>4. Monthly  Match Counter Report <\/a> \n- <a href='#6'>5. Monthly Total Score Report <\/a>\n- <a href='#7'>6. Tournament Match Count <\/a> \n- <a href='#8'>7. Citys Match Was Played <\/a> \n- <a href='#9'>8. Top Countrys Match Was Played <\/a>\n- <a href='#10'>9. Distribution of Goals <\/a>\n- <a href='#11'>10. Max Score <\/a>\n- <a href='#12'>11. Tournament Total Score <\/a>\n- <a href='#13'>12. Tournament Mean Score <\/a>\n- <a href='#14'>13. FIFA World Cup 2019 France<\/a>\n- <a href='#15'>14. Score FIFA World Cup France 2019 <\/a>\n- <a href='#16'>15.FIFA World Cup France 2019 Final Macth <\/a>\n- <a href='#17'>16.UEFA Euro 2017 Netherland <\/a>\n- <a href='#18'>17.Score UEFA Euro Cup 2017 Netherlands <\/a>\n- <a href='#19'>18.UEFA Euro 2017 Netherlands Final Macth <\/a>\n- <a href='#20'>19.United States Total Score<\/a>\n- <a href='#21'>20.United States <\/a>\n- <a href='#22'>21.Home Match  United States <\/a>\n- <a href='#23'>22.Away Match  United States <\/a>\n- <a href='#24'>23.End Note <\/a>\n- <a href='#25'>24. Reference","775e02ca":"<font size=\"+2\" color=\"LIGHTSEAGREEN\"><b>My Other Kernels<\/b><\/font><br>\n\n\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/us-police-shootings-data-visualisation\" class=\"btn btn-primary\" style=\"color:white;\">Us Police Shootings Data Visualisation<\/a>\n\n<a href=\"https:\/\/www.kaggle.com\/drfrank\/heart-disease-visualization-and-machine-learning\" class=\"btn btn-primary\" style=\"color:white;\">Heart Disease Visualization And Machine Learning<\/a>","4657e531":"# <a id='3'> 2. Feature Generation<\/a>","ee444096":"# <a id='11'>10.Max Score <\/a>","bb0b40b3":"# <a id='8'> 7. Top Citys Match Was Played<\/a>"}}