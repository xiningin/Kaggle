{"cell_type":{"62978928":"code","e6744cb4":"code","3e7b6496":"code","c600ca6f":"code","0c6f4b0c":"code","b9a36406":"code","487cd46c":"code","72fc9eb0":"code","8e2ca685":"code","94854f1e":"code","7da60f13":"code","a535ee80":"code","6ede493b":"code","3314d667":"code","0aec6df1":"code","c927405b":"code","e94d07b9":"code","51bb1adf":"code","524769e5":"code","d062182b":"code","76ece236":"code","6fe0ee07":"code","08bf73c9":"code","05d9130a":"code","a92eae1e":"code","5c190915":"code","6d735072":"code","e8c932a1":"code","478f2442":"code","3e7a8fd5":"markdown","b38d00ed":"markdown","695a3acf":"markdown","e6bb7337":"markdown","b4e61d69":"markdown"},"source":{"62978928":"!pip install umap-learn\n!pip install pydotplus","e6744cb4":"# \u30e9\u30a4\u30d6\u30e9\u30ea\u306eimport\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\nplt.style.use('ggplot')\n%matplotlib inline\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\n#from sklearn.cluster import DBSCAN\nfrom sklearn.cluster import MiniBatchKMeans\nfrom sklearn import tree\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import export_graphviz\nimport pydotplus","3e7b6496":"#import os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))","c600ca6f":"df_train = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard.csv')\ndf_action = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/actions_hard.csv')","0c6f4b0c":"df_train.head(2)","b9a36406":"df_test.head(2)","487cd46c":"df_action.head(10)","72fc9eb0":"df = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard\/test_hard\/0000.csv')","8e2ca685":"df.tail(2)","94854f1e":"scaler = MinMaxScaler()\ndf.iloc[:] = scaler.fit_transform(df)","7da60f13":"df.tail(2)","a535ee80":"DataFrame(df.std()).T","6ede493b":"def add_std_as_feature(df):\n    df_temp = DataFrame()\n    for path in df.file_path:\n        df_sensor = pd.read_csv('\/kaggle\/input\/data-science-spring-osaka-hard-mode\/test_hard\/'+path)\n        df_sensor = DataFrame(df_sensor.std()).T\n        df_temp = pd.concat([df_temp, df_sensor])\n    df_temp.columns = [col+'_std' for col in df_temp.columns]\n    df_temp.index = df.index\n    df = pd.concat([df, df_temp], axis=1)\n    return df","3314d667":"#df_train = add_std_as_feature(df_train)\ndf_test = add_std_as_feature(df_test)","0aec6df1":"X_test = df_test\nX_test.drop(['file_path'],axis=1,inplace=True)","c927405b":"#df_train.head(2)","e94d07b9":"X_test.tail(2)","51bb1adf":"from sklearn.preprocessing import StandardScaler\nimport umap","524769e5":"\nreducer = umap.UMAP(random_state=42)\n\ny_test = reducer.fit_transform(X_test)\n","d062182b":"plt.scatter(y_test[:, 0], y_test[:, 1])","76ece236":"y_test.shape","6fe0ee07":"kmeans = MiniBatchKMeans(n_clusters=8, max_iter=300)\nkmeans_y_test = kmeans.fit_predict(y_test)","08bf73c9":"color=cm.brg(np.linspace(0,1,np.max(kmeans_y_test) - np.min(kmeans_y_test)+1))\nfor i in range(np.min(kmeans_y_test), np.max(kmeans_y_test)+1):\n    plt.plot(y_test[kmeans_y_test == i][:,0],\n             y_test[kmeans_y_test == i][:,1],\n             \".\",\n             color=color[i]\n             )\n    plt.text(y_test[kmeans_y_test == i][:,0][0],\n             y_test[kmeans_y_test == i][:,1][0],\n             str(i), color=\"black\", size=16\n             )","05d9130a":"kmeans_y_test","a92eae1e":"clf = DecisionTreeClassifier( random_state = 0 )","5c190915":"clf.classes_ = np.max(kmeans_y_test) - np.min(kmeans_y_test) + 1\nclf.fit(X_test, kmeans_y_test)","6d735072":"dot_data = export_graphviz(clf,\n                feature_names=X_test.columns, \n                class_names=['0','1','2','3','4','5','6','7'], \n                filled=True, \n                rounded=True)\n\ngraph = pydotplus.graph_from_dot_data( dot_data )\n","e8c932a1":"tree.plot_tree(clf);","478f2442":"graph.write_png( 'hardmode_umap_std.dot.png' )","3e7a8fd5":"***K-means \u3092\u4f7f\u3063\u3066\u3001\uff18\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5206\u985e***","b38d00ed":"\u53ef\u8996\u5316\u3057\u305f\u7d50\u679c\u306b\u5bfe\u3057\u3066\u3001\uff12\u6b21\u5143\u5ea7\u6a19\u3092\u3082\u3068\u306b\u30cf\u30f3\u30c9\u3067\u5404\u30a2\u30af\u30b7\u30e7\u30f3\u30b7\u30fc\u30af\u30a8\u30f3\u30b9\u3092\u5f15\u304d\u5f53\u3066\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u3053\u3053\u306f K-means \u3092\u5229\u7528\u3057\u3066 ML \u3089\u3057\u304f\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3055\u3089\u306b K-means \u306e\u7d50\u679c\u3092\u6c7a\u5b9a\u6728\u306b\u639b\u3051\u3066\u3001\u305d\u306e\u5206\u985e\u304c\u884c\u308f\u308c\u305f\u8981\u56e0\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\u6c7a\u5b9a\u6728\u306e\u7d50\u679c\u306f\u3001output \u306b\u30bb\u30fc\u30d6\u3057\u305f\u30ab\u30e9\u30fc\u306e PNG\u30a4\u30e1\u30fc\u30b8\u304c\u898b\u6613\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u4e0b\u306e\u65b9\u306b\u3042\u308a\u307e\u3059\uff09\n\u6c7a\u5b9a\u6728\u306e\u7d50\u679c\u304b\u3089\u3001imu(\u59ff\u52e2)\u306b\u95a2\u4fc2\u3059\u308b\u7279\u5fb4\u91cf\u304c\u52b9\u3044\u3066\u3044\u308b\u3088\u3046\u306b\u8aad\u307f\u53d6\u308c\u307e\u3059\u3002","695a3acf":"***\u6c7a\u5b9a\u6728\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u7279\u5fb4\u3092\u8abf\u67fb***","e6bb7337":"\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3057\u305f\u30ab\u30e9\u30fc\u306e PNG \u30a4\u30e1\u30fc\u30b8\u306e\u65b9\u304c\u898b\u6613\u3044\u3000\uff08\u66f4\u306b\u4e0b\u306e\u65b9\u306b\u3042\u308a\u307e\u3059\uff09","b4e61d69":"\u6ce8\uff1a\u30b0\u30e9\u30d5\u306e\u756a\u53f7\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u30b7\u30fc\u30af\u30a8\u30f3\u30b9No.\u3068\u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"}}