{"cell_type":{"1f654ad1":"code","56ab622e":"code","d0e35ece":"code","2c45441f":"code","964be063":"code","3b095f15":"code","664abb53":"code","6c54df64":"code","174647fb":"code","eb22a577":"code","40d9e5e6":"code","88de84b7":"code","b28a7d01":"code","ab842ce1":"code","054c0eee":"code","e76d4479":"code","7a493a97":"code","8413bae3":"markdown","174573a2":"markdown","edf2ec2a":"markdown","f476a383":"markdown","26f26579":"markdown","b4949126":"markdown","1a248632":"markdown","a0e5bf75":"markdown","925dec56":"markdown","2a2bffbf":"markdown","904565ad":"markdown","458960f2":"markdown","a32b0cc8":"markdown","12dbd1ad":"markdown","deae3385":"markdown"},"source":{"1f654ad1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","56ab622e":"olympics = pd.read_csv(\"..\/input\/athlete_events.csv\")\nolympics.head()","d0e35ece":"olympics.shape","2c45441f":"sns.distplot(olympics['Height'].dropna())","964be063":"# Changing the figure size using pyplot\nf, ax = plt.subplots(figsize=(15,5))\nsns.distplot(olympics['Weight'].dropna())","3b095f15":"# Changing the figure size using pyplot\nf, ax = plt.subplots(figsize=(15,5))\n# specifying bins and removing KDE\nsns.distplot(olympics['Weight'].dropna(), bins=75, kde=False)","664abb53":"# Just showing KDE and not the histogram\nf, ax = plt.subplots(figsize=(15,5))\nsns.distplot(olympics['Weight'].dropna(), hist=False, kde=True)","6c54df64":"f, ax = plt.subplots(figsize=(15,5))\n# Setting a color for plot\nsns.distplot(olympics['Weight'].dropna(), bins=50, kde=False, color=\"g\")","174647fb":"f, ax = plt.subplots(figsize=(15,5))\n# Setting a color for KDE plot\nsns.kdeplot(olympics['Weight'].dropna(), shade=True, color=\"r\")","eb22a577":"f, ax = plt.subplots(figsize=(15,5))\n# Multiple KDE plots on one graph\nsns.kdeplot(olympics['Weight'].dropna(), color=\"r\", label=\"Weight\")\nsns.kdeplot(olympics['Height'].dropna(), color=\"g\", label=\"Height\")","40d9e5e6":"# A different kind of plot to compare two continuous variables\nsns.jointplot(x=\"Weight\", y=\"Height\", data=olympics)","88de84b7":"# Pairplot\nsns.pairplot(olympics.dropna(), size=4)","b28a7d01":"# Joint plot with controlled limits\nsns.jointplot(x=\"Weight\", y=\"Height\", data=olympics, xlim=(25,175), ylim=(140,200))","ab842ce1":"# Representing a third dimension color in a pairplot\nsns.pairplot(olympics.dropna(), hue=\"Medal\")","054c0eee":"# Representing a regression line in the bivariate relationships in a pairplot\nsns.pairplot(olympics[['Height', 'Weight', 'Age']].dropna(), kind=\"reg\")","e76d4479":"# Representing KDE plots instead of histograms on the diagonal\nsns.pairplot(olympics[['Height', 'Weight', 'Age']].dropna(), diag_kind=\"kde\")","7a493a97":"# Representing correlations between various features in the data as a heatmap\ncorrmat = olympics.dropna().corr()\nf, ax = plt.subplots(figsize=(10,10))\n# annot controls annotations, square=True outputs squares as correlation representing figures, cmap represents color map\nsns.heatmap(corrmat, vmax=.8, square=True, annot=True, fmt=\".2f\", cmap=\"summer\")","8413bae3":"<a id=\"optparam7\"><\/a>\n\n## 7. Multiple density plots on the same graph ","174573a2":"<a id=\"optparam10\"><\/a>\n\n## 10. Controlling axes LIMITS in *jointplot()* if features are at a different scale","edf2ec2a":"<a id=\"optparam13\"><\/a>\n\n## 13. In *pairplot()*, representing KDE plots on the diagonal instead of HISTOGRAM","f476a383":"<a id=\"optparam8\"><\/a>\n\n## 8. Comparing two CONTINUOUS features using *jointplot()*","26f26579":"<a id=\"optparam11\"><\/a>\n\n## 11. Representing a THIRD DIMENSION - COLOR in *pairplot()*","b4949126":"<a id=\"optparam3\"><\/a>\n\n## 3. Setting the number of bins for histogram and not displaying Kernel Density Estimation curve","1a248632":"<a id=\"optparam5\"><\/a>\n\n## 5. Setting the color for histogram","a0e5bf75":"<a id=\"optparam4\"><\/a>\n\n## 4. Plotting just the KDE without histogram","925dec56":"<a id=\"optparam6\"><\/a>\n\n## 6. Just the estimated density function with Shading. No bar histogram","2a2bffbf":"# Goal: Practice different types of plots and scenarios using Python - Seaborn\n\n\n1. [Histogram with NAs dropped](#optparam1)\n2. [ Changing figure size using matplotlib.pyplot](#optparam2)\n3.  [Setting the number of bins for histogram and not displaying Kernel Density Estimation curve](#optparam3)\n4.  [Plotting just the KDE without histogram](#optparam4)\n5.  [Setting the color for histogram](#optparam5)\n6.  [Just the estimated density function with Shading. No bar histogram](#optparam6)\n7.  [7. Multiple density plots on the same graph ](#optparam7)\n8.  [Comparing two CONTINUOUS features using *jointplot()*](#optparam8)\n9.  [Comparing all continuous features using pairplot()](#optparam9)\n10.  [Controlling axes LIMITS in jointplot() if features are at a different scale](#optparam10)\n11.  [Representing a THIRD DIMENSION - COLOR in *pairplot()*](#optparam11)\n12.  [Linear regression line in pairplot()](#optparam12)\n13. [In pairplot(), representing KDE plots on the diagonal instead of HISTOGRAM](#optparam13)\n14. [Correlation Plot - Heatmap](#optparam14)\n ","904565ad":"<a id=\"optparam12\"><\/a>\n\n## 12. Linear regression line in *pairplot()*","458960f2":"<a id=\"optparam14\"><\/a>\n\n## 14. CORRELATION PLOT - Heatmap","a32b0cc8":"<a id=\"optparam2\"><\/a>\n\n## 2. Changing figure size using matplotlib.pyplot","12dbd1ad":"<a id=\"optparam1\"><\/a>\n\n## 1. Histogram with NAs dropped","deae3385":"<a id=\"optparam9\"><\/a>\n\n## 9. Comparing all continuous features using*pairplot()"}}