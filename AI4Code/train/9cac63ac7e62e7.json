{"cell_type":{"d920c994":"code","8a417ceb":"code","9ffffa43":"code","e34a8606":"code","1d8b5b81":"code","a1f40ee7":"code","0f2a6541":"code","f51e3065":"code","14cbade7":"code","91bf1e4c":"code","750b14e6":"code","db26b802":"code","d458ea9a":"code","a5bd0010":"code","1bf0d8d3":"code","c8e2705c":"code","b9c0c5fe":"code","84a83853":"code","30fecb14":"markdown","49c38144":"markdown","37c4ffde":"markdown","9f1b963e":"markdown","94f3d875":"markdown"},"source":{"d920c994":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt #data visualization\nimport seaborn as sns #data visualization\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8a417ceb":"df_movies = pd.read_csv('\/kaggle\/input\/movietweetings\/movies.dat', delimiter='::', engine='python',header=None, names = ['Movie ID', 'Movie Title', 'Genre'])\n\ndf_movies.head()","9ffffa43":"df_rating = pd.read_csv('\/kaggle\/input\/movietweetings\/ratings.dat',delimiter='::', engine='python', header=None, names = ['User ID', 'Movie ID','Ratings', 'Rating Timestamp'])\n\ndf_rating.head()","e34a8606":"df_user = pd.read_csv('\/kaggle\/input\/movietweetings\/users.dat',delimiter='::', engine='python', header=None, names = ['User ID', 'Twitter ID'])\n\ndf_user.head()","1d8b5b81":"df_merge_1 = pd.merge(df_rating, df_movies, on='Movie ID')\n\ndf_merge_1.head()","a1f40ee7":"df_merge = pd.merge(df_user, df_merge_1, on= 'User ID')\n\ndf_merge.head()","0f2a6541":"ratings = pd.DataFrame(df_merge.groupby('Movie ID')['Ratings'].mean())\n\nratings.head()","f51e3065":"ratings['Num of Ratings'] = pd.DataFrame(df_merge.groupby('Movie ID')['Ratings'].count())\n\nratings.head()","14cbade7":"plt.figure(figsize=(10,4))\nratings['Ratings'].hist()","91bf1e4c":"sns.jointplot(x='Ratings',y='Num of Ratings',data=ratings,alpha=0.5)","750b14e6":"total = ratings.groupby(['Movie ID']).sum()\ncount = ratings.groupby(['Movie ID']).count()\n\nsum = total\/count","db26b802":"df_new = pd.merge(df_movies, sum, on='Movie ID')\n\ndf_new.head(20)","d458ea9a":"y=df_new['Ratings'].head(20)\nx=df_new['Movie Title'].head(20)\n\nplt.bar(x,y)\nplt.title('Rating of Movie')\nax = plt.gca()\nax.set_xticklabels(labels=x,rotation=90);","a5bd0010":"df_new['Title'] = df_new['Movie Title'].str.split('(', expand=True)[0]\n\ndf_new.tail()","1bf0d8d3":"def get_name(title):\n  return title.split(' (')[1].split(')')[0]\n  \ndf_new['Year'] = df_new['Movie Title'].apply(lambda x: f\"{get_name(x)}\")\n\ndf_new.drop('Movie Title', axis=1, inplace=True)\ndf_new.tail(10)","c8e2705c":"movie_2021 = df_new.loc[df_new['Year'] == '2021']\n\nmovie_2021.head()","b9c0c5fe":"rating_plot = movie_2021['Ratings']\nmovie_plot = movie_2021['Title'].head(15)\nplt.figure(figsize=(15,8))\nsns.barplot(movie_plot, rating_plot)\nplt.title('Rating Movie 2021')\nplt.ylabel('Ratings', fontsize=18)\nplt.xlabel('Movie Title', fontsize=18)\nplt.xticks(rotation=90)\nplt.show();","84a83853":"y= movie_2021['Num of Ratings']\nx= movie_2021['Title'].head(15)\n\nplt.figure(figsize=(15,8))\nsns.barplot(x, y)\nplt.title('Most Watched Movie in 2021')\nplt.ylabel('Number of Viewers', fontsize=12)\nplt.xlabel('Movie Title', fontsize=12)\nplt.xticks(rotation=90)\nplt.show();","30fecb14":"**Merge the file**","49c38144":"**Drop the movie title**","37c4ffde":"For year condition can be changed by request","9f1b963e":"**Read file**","94f3d875":"**Visualization Data**"}}