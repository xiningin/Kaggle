{"cell_type":{"5d9b1bf9":"code","d85d23eb":"code","8cd5ac57":"code","4ea32165":"code","38b6757f":"code","69e4835f":"code","27cffee9":"code","d59e84e9":"code","d0d2e61d":"code","3f014de5":"code","8ef30777":"code","3506f7fe":"code","4b731bd6":"code","906392b8":"code","5ce5695d":"code","d4737796":"code","d42ac83b":"code","6516c5ba":"code","097e2f18":"code","b6d0a129":"code","08e38fd7":"code","b5fe635b":"code","61f71cb4":"code","cc7f66b9":"code","f5bec4d1":"code","4392d272":"code","7976fd83":"code","1be30b2b":"code","441d3c85":"code","99dae80e":"code","9addb903":"code","d366802c":"code","6603ec58":"markdown","bbc89725":"markdown"},"source":{"5d9b1bf9":"import os, gc\nfrom fastai.text import *\nfrom tqdm import tqdm_notebook as tqdm\nprint(os.listdir(\"..\/input\"))","d85d23eb":"# make training deterministic\/reproducible\ndef seed_everything(seed=2018):\n    random.seed(seed)\n    torch.manual_seed(seed)\n    torch.cuda.manual_seed_all(seed)\n    np.random.seed(seed)\n    os.environ['PYTHONHASHSEED'] = str(seed)\n    torch.backends.cudnn.deterministic = True\nseed_everything()\n\ndef f1_score(y_pred, targets):\n    epsilon = 1e-07\n    \n    y_pred = y_pred.argmax(dim=1)\n    targets = targets.argmax(dim=1)\n\n    tp = (y_pred*targets).float().sum(dim=0)\n    tn = ((1-targets)*(1-y_pred)).float().sum(dim=0)\n    fp = ((1-targets)*y_pred).float().sum(dim=0)\n    fn = (targets*(1-y_pred)).sum(dim=0)\n\n    p = tp \/ (tp + fp + epsilon)\n    r = tp \/ (tp + fn + epsilon)\n\n    f1 = 2*p*r \/ (p+r+epsilon)\n    f1 = torch.where(f1!=f1, torch.zeros_like(f1), f1)\n    return f1.mean()","8cd5ac57":"EMBED_SIZE = 50\nMAX_FEATURES = 60000\nMAX_LENGTH = 100\nEMBEDDING_FILE = '..\/input\/embeddings\/wiki-news-300d-1M\/wiki-news-300d-1M.vec'","4ea32165":"# df = pd.read_csv('..\/input\/train.csv')\n\n# insincere_df = df[df.target==1]\n# sincere_df = df[df.target==0]\n\n# sincere_df = sincere_df.iloc[np.random.permutation(len(sincere_df))]\n# sincere_df = sincere_df[:int(len(insincere_df)*5)]\n\n# del df\n\n# df = pd.concat([insincere_df, sincere_df])\n# df = df.iloc[np.random.permutation(len(df))]\n\n# del insincere_df\n# del sincere_df\n# gc.collect()","38b6757f":"train_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')\ntrain_df.head()","69e4835f":"def truncate(df):\n    df['question_text'] = df.question_text.apply(lambda x: x[:MAX_LENGTH])\n    \ntruncate(train_df)\ntruncate(test_df)","27cffee9":"train_df = train_df.iloc[np.random.permutation(len(train_df))]\ncut = int(0.2 * len(train_df)) + 1\ntrain_df, valid_df = train_df[cut:], train_df[:cut]","d59e84e9":"%%time\ndata = TextDataBunch.from_df(path='.',\n                             train_df=train_df, \n                             valid_df=valid_df,\n                             test_df=test_df,\n                             text_cols='question_text', \n                             label_cols='target',\n                             max_vocab=MAX_FEATURES)\nprint(len(data.vocab.itos))\ndata.save()\ndel train_df\ndel valid_df \ndel test_df \ndel data\ngc.collect()","d0d2e61d":"%%time\ndata = TextLMDataBunch.load(path='.', bs=32)\ndata.show_batch()","3f014de5":"gc.collect()","8ef30777":"learner = language_model_learner(data, drop_mult=0.7, pretrained_model=URLs.WT103) #emb_sz=EMBED_SIZE","3506f7fe":"#learner.lr_find()\n#learner.recorder.plot(skip_start=25)","4b731bd6":"learner.fit_one_cycle(1, 5e-2, moms=(0.8,0.7))","906392b8":"learner.unfreeze()","5ce5695d":"learner.fit_one_cycle(1, 1e-2, moms=(0.8,0.7))","d4737796":"learner.save_encoder('fine_tuned_enc')","d42ac83b":"data = TextClasDataBunch.load(path='.', bs=32)\ndata.show_batch()","6516c5ba":"learner = text_classifier_learner(data, drop_mult=0.3) #emb_sz=EMBED_SIZE\nlearner.load_encoder('fine_tuned_enc')\nlearner.freeze()","097e2f18":"#learner.lr_find()\n#learner.recorder.plot()","b6d0a129":"learner.fit_one_cycle(1, 5e-2, moms=(0.8,0.7))","08e38fd7":"#learner.freeze_to(-2)\n#learner.fit_one_cycle(1, slice(1e-3,1e-1), moms=(0.8,0.7))","b5fe635b":"learner.unfreeze()\nlearner.fit_one_cycle(1, slice(1e-3\/(2.6**4),1e-3), moms=(0.8,0.7))","61f71cb4":"#learner.fit_one_cycle(1, slice(1e-3\/(2.6**4),1e-3), moms=(0.8,0.7))","cc7f66b9":"preds, targets = learner.get_preds()\n\npredictions = np.argmax(preds, axis = 1)","f5bec4d1":"%matplotlib inline\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(font_scale=2)\n#predictions = model.predict(X_test, batch_size=1000)\n\nLABELS = ['Normal','Insincere'] \n\nconfusion_matrix = metrics.confusion_matrix(targets, predictions)\n\nplt.figure(figsize=(5, 5))\nsns.heatmap(confusion_matrix, xticklabels=LABELS, yticklabels=LABELS, annot=True, fmt=\"d\", annot_kws={\"size\": 20});\nplt.title(\"Confusion matrix\", fontsize=20)\nplt.ylabel('True label', fontsize=20)\nplt.xlabel('Predicted label', fontsize=20)\nplt.show()","4392d272":"%time learner.predict(\"How much does a tutor earn in Bangalore?\")","7976fd83":"#preds = learner.get_preds(ds_type=DatasetType.Test)","1be30b2b":"#preds = preds[0].argmax(dim=1)\n#preds.sum()","441d3c85":"test_df = pd.read_csv('..\/input\/test.csv')","99dae80e":"#test_df.drop(['question_text'], axis=1, inplace=True)\n#test_df['prediction'] = preds.numpy()","9addb903":"#test_df.to_csv(\"submission.csv\", index=False)","d366802c":"probs, _ = learner.get_preds(DatasetType.Test)\npreds = np.argmax(probs, axis=1)\n\nsubmission = pd.DataFrame(test_df['qid'])\nsubmission['prediction'] = preds \nsubmission.to_csv('submission.csv',index=False)\nsubmission.head()","6603ec58":"### Classifier","bbc89725":"### Test set"}}