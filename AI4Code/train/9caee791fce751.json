{"cell_type":{"073ac58b":"code","6591318a":"code","10995af5":"code","1d207a9f":"code","bac4f847":"markdown"},"source":{"073ac58b":"import os\nimport json\nimport numpy as np\nimport pandas as pd\nfrom pandas.io.json import json_normalize\n\ndef load_df(csv_path='..\/input\/train.csv', nrows=None):\n    JSON_COLUMNS = ['device', 'geoNetwork', 'totals', 'trafficSource']\n    \n    df = pd.read_csv(csv_path, \n                     converters={column: json.loads for column in JSON_COLUMNS}, \n                     dtype={'fullVisitorId': 'str'}, # Important!!\n                     nrows=nrows)\n    \n    for column in JSON_COLUMNS:\n        column_as_df = json_normalize(df[column])\n        column_as_df.columns = [f\"{column}.{subcolumn}\" for subcolumn in column_as_df.columns]\n        df = df.drop(column, axis=1).merge(column_as_df, right_index=True, left_index=True)\n    print(f\"Loaded {os.path.basename(csv_path)}. Shape: {df.shape}\")\n    return df\n\nprint(os.listdir(\"..\/input\"))","6591318a":"%%time\ndf_small = load_df(nrows=20000)","10995af5":"%%time\ndf_train = load_df()\ndf_test = load_df(\"..\/input\/test.csv\")","1d207a9f":"%%time\ndf_train.to_csv(\"train-flattened.csv\", index=False)\ndf_test.to_csv(\"test-flattened.csv\", index=False)","bac4f847":"## Read csv and flatten json fields"}}