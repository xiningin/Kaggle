{"cell_type":{"de36f5ab":"code","677c1908":"code","44c1df65":"code","87303aa2":"code","3fa525da":"code","3d8dfe54":"code","225e86b0":"code","2d6c4f6d":"code","dc89f2d8":"code","9cb8177f":"code","77c27eec":"code","f7b7aa9c":"code","d68efff8":"code","e41b0522":"code","222e29e4":"code","95de20af":"code","c54d6fc5":"code","7f67cb57":"code","2b204e89":"code","918890e6":"code","ac3d8878":"code","e478c0d6":"markdown","e5a45cb6":"markdown","8ab18d32":"markdown","afb77d20":"markdown","687b0351":"markdown","1f28f82d":"markdown","429e715a":"markdown","24b7da95":"markdown","40046e41":"markdown","9d898d21":"markdown","812ddf30":"markdown","a0883ee5":"markdown","0bd2af22":"markdown"},"source":{"de36f5ab":"import ee\nimport folium \nimport os\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport pickle\nimport numpy as np\nfrom scipy import optimize\nfrom folium.plugins import MarkerCluster,HeatMap\nimport branca\n\n\n%matplotlib inline","677c1908":"plt.style.use('seaborn-whitegrid')\nplt.rcParams['figure.dpi']=200","44c1df65":"#helper functions\n\ndef get_df(img_collection_info,\n           bands):\n    '''get a dataframe of values for the given Bands'''\n    \n    \n    df = pd.DataFrame(img_collection_info)\n\n    # Rearrange the header.\n    headers = df.iloc[0]\n    df = pd.DataFrame(df.values[1:], columns=headers)\n\n    # Remove rows without data inside.\n    df = df[['longitude', 'latitude', 'time', *bands]].dropna()\n\n    # Convert the data to numeric values.\n    for band in bands:\n        df[band] = pd.to_numeric(df[band], errors='coerce')\n\n    # Convert the time field into a datetime.\n    df['datetime'] = pd.to_datetime(df['time'], unit='ms')\n\n    #lat-long of point as location\n    df['location']=df.apply(lambda x : (x['latitude'],x['longitude']),axis=1)\n    \n    \n    # Keep the columns of interest.\n    df = df[['time','datetime','location',  *bands]]\n\n    return df\n    \ndef mean_value(df,band):\n    '''Taking the mean value for a band for each groupby (by date) object for that region,so that we have a mean value of given band for that region'''\n    \n    \n    #mean value for particular instance of time\n    mean_val_df=df.groupby('datetime').agg({f'{band}':['mean','max']})\n    mean_val_df.reset_index(inplace=True)\n    \n    #sortby date\n    mean_val_df.sort_values(by='datetime',inplace=True)\n    \n    return mean_val_df\n\n\ndef get_range_df(df,\n                date_col,\n                start_date,\n                end_date):\n    '''get a dataframe bounded by start and end date'''\n    \n    return df[(df[date_col]>start_date)&(df[date_col]<end_date)]\n\n\n#plotting\n\ndef plot_all_values(df,\n                    df2,\n                    band):\n    '''Plot all the given values,\n    df: Urban Dataset\n    df2:rural Dataset'''\n    \n    fig,ax=plt.subplots(figsize=(16,8))\n    \n    ax.plot(df.datetime,\n            df[band]['mean'],\n            color='r',\n            lw=0.5,\n            label='Urban')\n\n    ax.plot(df2.datetime,\n            df2[band]['mean'],\n            color='b',\n            lw=0.5,\n            label='Rural')\n\n    plt.title(f'{band} in Pune Region')\n    plt.legend()\n    plt.xlabel('Date')\n    plt.ylabel(f'{band} (mol\/m^2)')\n    plt.show()\n    \n    \n    \ndef plot_monthwise(df,\n                  df2,\n                  band):\n    '''plot seasonal trend in concentration of specified band\n    df: urban data points\n    df2: rural data points\n    band : band in question'''\n        \n    #mean band level for each month \n    urban=df.groupby(df.datetime.dt.month).agg({(f'{band}','mean'):'mean'})\n    urban.index.name='Months'\n    urban.reset_index(inplace=True)\n    \n    \n    rural=df2.groupby(df.datetime.dt.month).agg({(f'{band}','mean'):'mean'})\n    rural.index.name='Months'\n    rural.reset_index(inplace=True)\n    \n    \n    \n    comb=urban.merge(rural,on='Months',how='inner')\n    comb.rename(columns={f'{band}_x':'Urban',f'{band}_y':f'Rural'},inplace=True)\n    comb.set_index('Months',inplace=True)\n    comb.plot(figsize=(16,8))\n    \n    \n    plt.title(f'Monthwise mean {band}')\n    plt.xlabel('Month of the year')\n    plt.ylabel(f'Monthwise Mean {band} (mol\/m^2)')\n    plt.show()\n\n    \ndef plot_comparison_plots(df,\n                          df2,\n                          band,\n                          Title):\n    '''PLOT COMPARISON PLOTS for Before and during Pandemic\n    df: NO2 levels during pre Pandemic study period\n    df2:NO2 During Pandemic study period\n    '''\n    fig,ax=plt.subplots(2,1,figsize=(16,8))\n    print(f'{Title}')\n    \n    \n    ax[0].plot(df.datetime,\n            df[band]['mean'],\n            color='r',\n            lw=2)\n    ax[0].set_title('Before Covid-19')\n    ax[0].set_xlabel('Date')\n    ax[0].set_ylabel(f'{band} (mol\/m^2)')\n    \n    \n\n    ax[1].plot(df2.datetime,\n            df2[band]['mean'],\n            color='g',\n            lw=2)\n    ax[1].set_title('During Covid-19')\n    ax[1].set_xlabel('Date')\n    ax[1].set_ylabel(f'{band} (mol\/m^2)')\n    \n    plt.tight_layout()\n    \n    #saving image\n    fig.savefig(f'{Title}.jpg')\n    plt.show()\n    \ndef percent_change(df,df2,band):\n    '''calculate % change in band value for old window and new window '''\n    mean_pre   = df[f'{band}']['mean'].mean()\n    mean_during= df2[f'{band}']['mean'].mean()\n        \n    diff=mean_pre-mean_during\n    percent_change=(diff\/mean_pre)*100\n    \n    return percent_change","87303aa2":"# The dates to be used for study\n\n\npre_pandemic={\n    'start_date':'2019-03-01',\n    'end_date'  :'2019-07-01'\n}\n\npandemic={\n    'start_date':'2020-03-01',\n    'end_date'  :'2020-07-01'\n}","3fa525da":"ee.Authenticate()\nee.Initialize()","3d8dfe54":"# loading area of interest coordinates\n\nwith open('..\/input\/pune-coordinates\/bounding_polygons.pkl','rb') as f:\n    coord_dict=pickle.load(f)\n\naoi=ee.geometry.Geometry.Polygon(list(coord_dict['pune'].values()))\naoi_rural=ee.geometry.Geometry.Polygon(list(coord_dict['pune_rural'].values()))\naoi_urban=ee.geometry.Geometry.Polygon(list(coord_dict['pune_urban'].values()))","225e86b0":"'''Description : Tropospheric HCHO column number density.(mol\/m2)'''\nCO=ee.ImageCollection('COPERNICUS\/S5P\/OFFL\/L3_HCHO').filterBounds(aoi).select('tropospheric_HCHO_column_number_density')\n\nprint('Number of Images in collection  are {}'.format(CO.size().getInfo()))","2d6c4f6d":"# get Image INFO\n\n# sample a few locations for which data is to be queried\n\n#Central Areas of Pune and PCMC\npune_central=CO.getRegion(geometry=aoi_urban,\n                          scale=3000,\n                          ).getInfo()\n\n\n# Some rural areas of Pune\npune_rural=CO.getRegion(geometry=aoi_rural,\n                          scale=5000,\n                          ).getInfo()","dc89f2d8":"df_urban=get_df(pune_central,\n                ['tropospheric_HCHO_column_number_density'])\n\ndf_rural=get_df(pune_rural,\n                ['tropospheric_HCHO_column_number_density'])\n\n\nm1=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=12,min_zoom=9)\n\nHeatMap(data=df_urban['location'],\n                       radius=10,\n                       opacity=.05,\n                       name='Urban').add_to(m1)\n\nHeatMap(data=df_rural['location'],\n                       radius=10,\n                       opacity=.05,\n                       name='rural').add_to(m1)\n\n\nm1","9cb8177f":"\nprint('Number of Data Points in Urban Study {} \\n Number of Data Points in Rural Study {}'.format(len(df_urban),len(df_rural)))","77c27eec":"# Dataset for Urban Pune CO density\n\nurban_hcho=mean_value(df_urban,\n                     band='tropospheric_HCHO_column_number_density')\n#saving urban \nurban_hcho.to_csv('urban_hcho.csv',index=False)\n\n# Rural  Dataset\nrural_hcho=mean_value(df_rural,\n                    band='tropospheric_HCHO_column_number_density')\n#saving \nrural_hcho.to_csv('rural_hcho.csv',index=False)","f7b7aa9c":"plot_all_values(df=urban_hcho,\n               df2=rural_hcho,\n               band='tropospheric_HCHO_column_number_density')","d68efff8":"plot_monthwise(df=urban_hcho,\n               df2=rural_hcho,\n               band='tropospheric_HCHO_column_number_density')","e41b0522":"#PREPANDEMIC URBAN AND RURAL CO DENSITY DATA\n\n#urban\nprepandemic_ur=get_range_df(df=urban_hcho,\n                            date_col='datetime',\n                           start_date=pre_pandemic['start_date'],\n                           end_date=pre_pandemic['end_date'])\n\n#rural\nprepandemic_rur=get_range_df(df=rural_hcho,\n                            date_col='datetime',\n                           start_date=pre_pandemic['start_date'],\n                           end_date=pre_pandemic['end_date'])\n\n\n#PANDEMIC URBAN AND RURAL CO DENSITY DATA\n\n#urban\npandemic_ur=get_range_df(df=urban_hcho,\n                        date_col='datetime',\n                        start_date=pandemic['start_date'],\n                        end_date = pandemic['end_date'])\n\n#rural\n\npandemic_rur=get_range_df(df=rural_hcho,\n                         date_col='datetime',\n                         start_date=pandemic['start_date'],\n                         end_date=pandemic['end_date'])","222e29e4":"# CHange in CO over Urban areas\nplot_comparison_plots(df=prepandemic_ur,\n                     df2=pandemic_ur,\n                     band='tropospheric_HCHO_column_number_density',\n                     Title='Formaldehyde Concentration over Urban Pune')","95de20af":"# CHange in CO over Rural areas\nplot_comparison_plots(df=prepandemic_rur,\n                     df2=pandemic_rur,\n                     band='tropospheric_HCHO_column_number_density',\n                     Title='Formaldehyde Concentration over Rural Pune')","c54d6fc5":"print('Mean % drop in Urban CO level during pandemic restrictions {}'.format(percent_change(df=prepandemic_ur,\n                                                                                             df2=pandemic_ur,\n                                                                                            band='tropospheric_HCHO_column_number_density')))\nprint('Mean % drop in Rural CO level during pandemic restrictions {}'.format(percent_change(df=prepandemic_rur,\n                                                                                             df2=pandemic_rur,\n                                                                                            band='tropospheric_HCHO_column_number_density')))","7f67cb57":"#visualization parameters\nviz_param={\n    'min':0.00001, 'max': 0.0005,\n    'palette':['006633', 'E5FFCC', '662A00', 'D8D8D8', 'F5F5F5']\n}","2b204e89":"def add_ee_layer(self, ee_image_object, vis_params, name):\n    \"\"\"Adds a method for displaying Earth Engine image tiles to folium map.\"\"\"\n    map_id_dict = ee.Image(ee_image_object).getMapId(vis_params)\n    folium.raster_layers.TileLayer(\n        tiles=map_id_dict['tile_fetcher'].url_format,\n        attr='Map Data &copy; <a href=\"https:\/\/earthengine.google.com\/\">Google Earth Engine<\/a>',\n        name=name,\n        overlay=True,\n        control=True\n    ).add_to(self)\n\n# Add Earth Engine drawing method to folium.\nfolium.Map.add_ee_layer = add_ee_layer","918890e6":"M2=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=10,min_zoom=9)\n\n\n#adding NO2 density layer\nM2.add_ee_layer(ee_image_object=ee.Image(CO.filterDate(pre_pandemic['start_date'],pre_pandemic['end_date']).mean()).clip(aoi),\n               vis_params=viz_param,\n               name='HCHO Density (April-June 2019)')\nprint('April 2019 to June 2019')\n\n#add tile control\nM2.add_child(folium.LayerControl())\nM2.save('Prepandemic_HCHO.html')\n\nM2","ac3d8878":"M3=folium.Map(location=[18.5477,73.8384],\n              tiles='Open Street Map',\n              zoom_start=10,min_zoom=9)\n\n\n#adding NO2 density layer\nM3.add_ee_layer(ee_image_object=ee.Image(CO.filterDate(pandemic['start_date'],pandemic['end_date']).mean()).clip(aoi),\n               vis_params=viz_param,\n               name='HCHO Density (April-June 2020)')\nprint('April 2020 to June 2020')\n\n\n#add tile control\nM3.add_child(folium.LayerControl())\n\nM3.save('pandemic_HCHO.html')\n\nM3","e478c0d6":"# **Helper Functions**","e5a45cb6":"# PrePandemic (April 2019 to June 2019)\n","8ab18d32":"**Bounding dates used for study**","afb77d20":"\n# During Pandemic (April 2020 to June 2020)\n","687b0351":"# **Imports**","1f28f82d":"# Getting Timeseries data for CO concentrations\n","429e715a":"# Description\n* **In this notebook, we will see the change in concentration of Formaldehyde(HCHO) for a Region around Pune,India from the time before the covid-19 restrictions, and during the restrictions**","24b7da95":"# Effects of Pandemic restrictions on CO emissions\n","40046e41":"# Visualize Mean change over study period\n","9d898d21":"# **Authenticate and Inititalize Earth Engine**","812ddf30":"**About Formaldehyde**\n* **Formaldehyde is an intermediate gas in almost all oxidation chains of non-methane volatile organic compounds (NMVOC), leading eventually to CO2**\n* **HCHO concentrations in the boundary layer can be directly related to the release of short-lived hydrocarbons, which mostly cannot be observed directly from space.**\n* **The major HCHO source in the remote atmosphere is CH4 oxidation**\n* **The oxidation of higher NMVOCs emitted from vegetation, fires, traffic and industrial sources results in important and localized enhancements of the HCHO levels.**\n","a0883ee5":"# Area under study","0bd2af22":"# Percent change in value of HCHO\n"}}