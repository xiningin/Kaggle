{"cell_type":{"4fa6f0ea":"code","013e6f9d":"code","44efb716":"code","267c642b":"code","c2e49368":"code","9620dccb":"code","497b27a1":"code","1879d885":"code","543c38fb":"code","1b2c76e5":"code","91fa6ecd":"code","997e3b80":"code","9847a6a0":"code","0eefac12":"code","9e9afb7f":"code","056bbbdf":"code","ccceaeae":"code","07b0ab3f":"code","f9fbbcc0":"code","3a2ce1a3":"code","cc54ca7d":"code","d3856789":"code","8ecc90df":"code","a1c8524e":"code","4689fa46":"code","24d0e9dc":"code","b520cbb1":"code","3caef8b9":"code","663bfb49":"code","d20bbd32":"code","e9bc96cf":"code","cc7295cf":"code","74b4e1b8":"code","edbc59c2":"code","94aa50f3":"code","abcbc986":"code","6f68c002":"markdown","bbcd3fba":"markdown","bf72d081":"markdown","53c6003a":"markdown"},"source":{"4fa6f0ea":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns #still don't know what it does reallyyyy \n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n#plotting :\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nplt.rcParams['figure.figsize'] = (10, 6)\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","013e6f9d":"!ls","44efb716":"df=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv')","267c642b":"print(df.shape)","c2e49368":"df=pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')","9620dccb":"df.sample(10)","497b27a1":"df.head(5)","1879d885":"df.columns","543c38fb":"len(df)","1b2c76e5":"#problem of skewed \ndf.SalePrice.plot.hist(bins=100)","91fa6ecd":"#les valeurs correl\u00e9s \n\ncorr_mat = df.corr()\nprice_corr = corr_mat['SalePrice']\ntop_corr_features = price_corr[price_corr.abs() > 0.4].index\n\nsns.heatmap(corr_mat.loc[top_corr_features, top_corr_features])","997e3b80":"price_corr[price_corr.abs() > 0.4].sort_values(ascending=False)","9847a6a0":"sns.violinplot(x='OverallQual', y='SalePrice', data=df)","0eefac12":"df.GrLivArea.plot.hist(bins=100)","9e9afb7f":"df.plot.scatter(x='GrLivArea', y='SalePrice')","056bbbdf":"#log pour eliminer les valeurs extremes \ndf.SalePrice.plot.hist(bins=100)","ccceaeae":"df.SalePrice.apply(np.log).plot.hist(bins=100)","07b0ab3f":"#on va cr\u00e9er notre mod\u00e8le : RQQQQ:on dopit enlever saleprice car c'est pour lui qu'on va faire la prediction\n#on l'a laisser just epour faire le training \ndef preprocess(raw_df):\n  df = raw_df.copy()\n  if 'SalePriceLog'   in df.columns:\n    df['SalePriceLog'] = np.log(df.SalePrice)\n  cat_variables = df.select_dtypes(include=['object']).columns\n  cat_df = pd.get_dummies(df[cat_variables])\n  num_df = df[[c for c in df if c not in cat_variables]].fillna(0.0)\n  #num_df = (num_df - num_df.mean()) \/ num_df.std()\n  return pd.concat([cat_df, num_df], axis=1) ","f9fbbcc0":"train_df = preprocess(df)\ntrain_df.sample(3)","3a2ce1a3":"#on les a enlever tous les deux saleprice et salepricelog\nfrom sklearn.preprocessing import normalize\nfeatures_df = train_df.copy().fillna(0.0)\n#features_df = train_df[['OverallQual', 'GrLivArea', 'SalePriceLog']].copy()\n#features_df['GrLivArea'] = (features_df.GrLivArea - features_df.GrLivArea.mean()) \/ features_df.GrLivArea.std()\n\n#features_df = (features_df - features_df.mean()) \/ features_df.std()\n\ntarget = features_df.pop('SalePriceLog')\ndel features_df['SalePrice']\nfeatures_df.sample(3)","cc54ca7d":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(features_df, target, test_size=0.25, random_state=0)","d3856789":"from sklearn.metrics import mean_squared_error\nfrom sklearn.dummy import DummyRegressor\nbaseline = DummyRegressor('mean')\nbaseline.fit(x_train, y_train)\nnp.sqrt(mean_squared_error(y_test, baseline.predict(x_test)))","8ecc90df":"from sklearn.linear_model import LinearRegression, LassoCV, RidgeCV\nmodel = RidgeCV()\nmodel.fit(x_train, y_train)","a1c8524e":"y_pred = model.predict(x_test)","4689fa46":"y_pred","24d0e9dc":"from sklearn.metrics import mean_squared_error\nnp.sqrt(mean_squared_error(y_test, y_pred))","b520cbb1":"plt.scatter(y_test, y_pred, c='g')\nplt.scatter(y_train, model.predict(x_train), c='r', alpha=0.2)\nplt.xlabel(\"Sale price\")\nplt.ylabel(\"Predicted price\")\n#plt.plot([10., 14.], [10., 14.], '--')","3caef8b9":"features_df = train_df.copy()\ntarget = features_df.pop('SalePriceLog')\ndel features_df['SalePrice']\n\nmodel = RidgeCV()\nmodel.fit(features_df, target)","663bfb49":"raw_test_df = pd.read_csv('\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv')\ntest_df = preprocess(raw_test_df)","d20bbd32":"for c in features_df.columns:\n  if c not in test_df.columns:\n    test_df[c] = 0\n\nfor c in test_df.columns:\n  if c not in features_df.columns:\n    del test_df[c]\n\ntest_df = test_df[features_df.columns]","e9bc96cf":"predicted_price = np.exp(model.predict(test_df))","cc7295cf":"predicted_price","74b4e1b8":"sub_df = pd.DataFrame(dict(Id=test_df.Id, SalePrice=predicted_price))","edbc59c2":"sub_df","94aa50f3":"print(predicted_price)","abcbc986":"sub_df = pd.DataFrame({'Id': test_df.Id, 'SalePrice': predicted_price})\n\nsub_df.to_csv('submission.csv', index=False)","6f68c002":"# Modeling","bbcd3fba":"# Preprecessing","bf72d081":"# 1- data exploration ","53c6003a":"# Petit \u00e0 petit jusqu'\u00e0 la submission giiiirl you can do it \n# * organised work \n**till the end , chase it till you catch it ."}}