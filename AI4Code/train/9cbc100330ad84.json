{"cell_type":{"5a1784df":"code","98fb3114":"code","899e4181":"code","b0e0459f":"code","1e8cf3b8":"markdown","dc527c4f":"markdown","6e88379e":"markdown"},"source":{"5a1784df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","98fb3114":"import cv2\nimport matplotlib.pyplot as plt\n\nimg = cv2.imread('\/kaggle\/input\/pothole\/pothole.jpeg',0) #load image","899e4181":"h,w = img.shape\n\nclahe = cv2.createCLAHE(clipLimit=4.0, tileGridSize=(8,8))\nimClahe = clahe.apply(img)\n\nrow = 1\ncol = 2\nf = plt.figure()\nf.add_subplot(row,col, 1).title.set_text('Gambar Input')\nplt.gray()\nplt.imshow(img)\n\nf.add_subplot(row,col, 2).title.set_text('Gambar Output')\nplt.gray()\nplt.imshow(imClahe)\n\n\nplt.show(block=True)","b0e0459f":"edges = cv2.Canny(imClahe,20,100)\n\nplt.subplot(121),plt.imshow(imClahe,cmap = 'gray')\nplt.title('Gambar Output'), plt.xticks([]), plt.yticks([])\nplt.subplot(122),plt.imshow(edges,cmap = 'gray')\nplt.title('Edge Image'), plt.xticks([]), plt.yticks([])\nplt.show()","1e8cf3b8":"Pertama masukan inputan berupa gambar yang telah tersedia","dc527c4f":"Setelah kabut dari foto di hilangkan saatnya kita mendeteksi lubang di jalan. Pada tahap ini saya memanfaatkan salah satu library dari OpenCV, yaitu Canny Edge Detection","6e88379e":"Selanjutnya untuk mendeteksi lubang jalan, saya menghilangkan kabut dari foto terlebih dahulu"}}