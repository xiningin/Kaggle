{"cell_type":{"664035e4":"code","9a2d2572":"code","f98f3b02":"code","62d1315e":"code","d272944d":"code","689dc7db":"code","a3a639b9":"code","4509dd03":"code","87be0862":"code","55e5bd0a":"code","5f6c39a5":"code","01a0afcd":"code","ef0c4c0d":"markdown","2308eda1":"markdown","e98d5ca4":"markdown"},"source":{"664035e4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a2d2572":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom scipy import misc\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","f98f3b02":"df=pd.read_csv('..\/input\/amazon-top-50-bestselling-books-2009-2019\/bestsellers with categories.csv')\ndf.head()","62d1315e":"df.shape","d272944d":"sns.countplot(x='Genre',data=df)\nplt.show()","689dc7db":"most_frequent_authors=df.Author.value_counts()\n","a3a639b9":"sns.countplot(x='Author',data=df)","4509dd03":"top_5_author=(df.groupby(by='Author',as_index=False)\n              .agg(({'Price':'sum'}))\n              .sort_values('Price', ascending=False))[:5]\nprint(top_5_author)","87be0862":"top_5_user_rating=(df.groupby(by='User Rating',as_index=False)\n              .agg(({'User Rating':'sum'}))\n              .sort_values('User Rating', ascending=False))[:5]\nprint(top_5_user_rating)","55e5bd0a":"minimum_rating = (\n    df.groupby(['Author','Name', 'Price'], as_index=False)\n    .agg({'User Rating':'sum'})\n    .sort_values('User Rating', ascending=True))[:5]\nminimum_rating","5f6c39a5":"maximum_rating = (\n    df.groupby(['Author','Name', 'Price'], as_index=False)\n    .agg({'User Rating':'max'})\n    .sort_values('User Rating', ascending=False))[:5]\nmaximum_rating","01a0afcd":"max_Price= (\n    df.groupby(['Author','Name', 'Price'], as_index=False)\n    .agg({'Price':'max'})\n    .sort_values('Price', ascending=False))[:5]\nmax_Price","ef0c4c0d":"finding the number of rows and colums in the dataframe\n","2308eda1":"**loading the data into the df **","e98d5ca4":"**checking how many fiction and non fiction books are present **"}}