{"cell_type":{"41579605":"code","6fc4fb8e":"code","2a4cad96":"code","f62ba065":"code","17b12a45":"code","016ce82e":"code","4d43cb61":"code","531d7c90":"code","777640e5":"code","0ed3595e":"code","b0ca80d4":"code","fa57ce5e":"code","46a91407":"code","62457a7d":"code","84ad8996":"code","d4f85dba":"code","c513c39a":"code","dc4984c0":"code","86388bb2":"code","decd31d3":"code","bb7d0694":"code","a05671ac":"code","845f32d4":"code","6bb84799":"code","3984390f":"code","89c3451b":"code","014ad802":"code","cdd342d2":"code","ba141c4d":"code","652ebe12":"code","858ee4a6":"code","71e330dc":"code","3e983e22":"code","60a5a70a":"code","0c38300d":"code","668f5830":"markdown","38a8da88":"markdown","3f0f6be0":"markdown","897d0633":"markdown","e35e49d6":"markdown"},"source":{"41579605":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nimport category_encoders as ce\nfrom sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score\nfrom scipy import stats\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6fc4fb8e":"df = pd.read_csv('..\/input\/used-car-dataset-ford-and-mercedes\/merc.csv')","2a4cad96":"df.head()","f62ba065":"df.shape","17b12a45":"df.dtypes","016ce82e":"df.isnull().sum()","4d43cb61":"df.describe()","531d7c90":"sns.countplot(df['transmission'])\nplt.show()","777640e5":"print(df['model'].value_counts()\/len(df))\nplt.figure(figsize=(8,8))\nsns.countplot(y = df['model'])\nplt.show()","0ed3595e":"sns.countplot(df['fuelType'])\nplt.show()","b0ca80d4":"plt.figure(figsize=(15,5),facecolor='w')\nsns.barplot(x= df['year'],y=df['price'])\nplt.show()","fa57ce5e":"sns.barplot(x= df['transmission'],y=df['price'])\nplt.show()","46a91407":"sns.pairplot(df)\nplt.show()","62457a7d":"df_new = df.copy()","84ad8996":"df_new.head()","d4f85dba":"df_new = pd.get_dummies(df)","c513c39a":"df_new.head()","dc4984c0":"df_new.shape","86388bb2":"sns.distplot(df_new.loc[:,'price'],norm_hist=True)\nplt.title('Histogram Before Transformation of data')\nplt.show()\nprint(\"Skewness: \" + str(df_new['price'].skew()))\nprint(\"Kurtosis: \" + str(df_new['price'].kurt()))","decd31d3":"log_df = df_new.copy()","bb7d0694":"log_df['price'] = np.log1p(df_new['price'])","a05671ac":"sns.distplot(log_df.loc[:,'price'],norm_hist=True)\nplt.title('Histogram After transformation of data')\nplt.show()\nprint(\"Skewness: \" + str(log_df['price'].skew()))\nprint(\"Kurtosis: \" + str(log_df['price'].kurt()))","845f32d4":"log_df.head()","6bb84799":"X = log_df.drop('price',axis=1)\ny = log_df['price']","3984390f":"lr = LinearRegression()","89c3451b":"x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=5)","014ad802":"lr.fit(x_train,y_train)","cdd342d2":"lr.score(x_test,y_test)","ba141c4d":"y_pred = lr.predict(x_test)","652ebe12":"mse = mean_squared_error(y_test,y_pred)","858ee4a6":"r2 = r2_score(y_test,y_pred)","71e330dc":"rmse = np.sqrt(mean_squared_error(y_test,y_pred))","3e983e22":"print(\"MSE:- {}\".format(mse))\nprint(\"R2 Score:- {}\".format(r2))\nprint(\"RMSE:- {}\".format(rmse))","60a5a70a":"results = x_test.copy()\nresults['predicted'] = np.expm1(lr.predict(x_test))\nresults['actual'] = np.expm1(y_test)\nresults = results[['predicted','actual']]\nresults['predicted'] = results['predicted'].round(2)","0c38300d":"results","668f5830":"### Feature Engineering ","38a8da88":"Top 3 cars are C Class,A Class,E Class","3f0f6be0":"### Model Training","897d0633":"Most of the cars on the dataset are with automatic and semi-automatic transmission with very few cars in automatic and semi-automatic transmission","e35e49d6":"### Exploratory Data Analysis"}}