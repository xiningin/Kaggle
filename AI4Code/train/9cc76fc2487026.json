{"cell_type":{"613aa67d":"code","f8a22aab":"code","aa04c656":"code","521eb63a":"code","d99ea522":"code","32d5215c":"code","d6139f97":"code","a3691582":"code","a64c0c3c":"code","113b5b6e":"code","b46afc05":"code","7444198d":"code","da5bc665":"code","74ae675a":"code","893fe5d2":"code","9315441e":"code","01f22713":"code","d2a3de07":"code","b28895f5":"code","55677ccc":"code","37410d73":"code","b8753944":"code","1ed833ec":"code","ca7b5de1":"code","2a39547f":"code","010449db":"code","8cc0fe20":"code","ce705e85":"code","61dd7fca":"code","745fb2d2":"code","3c9a503e":"code","b9208524":"code","39958f1c":"code","9d19f0e3":"code","98f8beca":"code","a91f7ccc":"code","8e4ed30d":"code","bc6123cc":"code","1343398b":"code","578b11b2":"code","5b83457a":"code","ed577240":"code","170559a4":"code","073b0aed":"code","5ec12783":"code","385929a7":"code","8b99ffde":"code","b7a4e7d7":"code","08648c54":"code","4edca8ba":"code","376ee049":"code","bca9c19b":"code","6a3f456b":"code","2d1beb94":"code","02891821":"code","a4655252":"code","c25436d5":"code","2b0ddb8f":"code","0f833fff":"code","681fe5a6":"code","a58553f8":"code","231af805":"code","86c706e4":"code","5551edbb":"code","04eb54a8":"code","1b5faa4a":"code","6cbd24e1":"code","2432b8f9":"code","10d69494":"code","1e9407aa":"code","ff48f360":"code","a5800335":"code","cdcaf69e":"code","e485e54c":"code","98e265b7":"code","60c4a1f5":"code","6568f882":"code","ee44b88c":"code","50c0cfb6":"code","6dc85cf5":"code","5c58c262":"code","78a80941":"code","face95df":"code","39c3fb87":"code","2ba81eb4":"markdown"},"source":{"613aa67d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f8a22aab":"train_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest_data = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","aa04c656":"train_data.head(10)","521eb63a":"train_data.tail(9)","d99ea522":"train_data.shape","32d5215c":"train_data.isnull()","d6139f97":"sns.heatmap(train_data.isnull(),yticklabels=False)","a3691582":"train_data.isnull().sum()\n","a64c0c3c":"train_data.info()\n","113b5b6e":"train_data.Pclass.unique()\n","b46afc05":"plt.figure(figsize=(8,6))\nsns.countplot(x='Survived',hue='Pclass',data=train_data,palette='rainbow')","7444198d":"sns.boxplot(x = train_data[\"Survived\"],y = train_data[\"Age\"],hue = train_data[\"Survived\"],palette = 'dark')","da5bc665":"sns.catplot(x=\"Survived\", y=\"Age\", hue=\"Sex\", kind=\"swarm\", data=train_data, aspect=1,height=8);","74ae675a":"train_data.Sex.unique()\n","893fe5d2":"\nplt.figure(figsize=(8,6))\nsns.countplot(x='Survived',hue='Sex',data=train_data)","9315441e":"train_data.Age.unique()\n","01f22713":"sns.distplot(train_data['Age'].dropna(),kde=False,color='darkred',bins=40)","d2a3de07":"train_data.Embarked.unique()\n","b28895f5":"train_data.Name.unique()","55677ccc":"train_data['Title']=0\ntrain_data['Title']=train_data.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations\ntrain_data['Title'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)","37410d73":"train_data['Name_length'] = train_data['Name'].apply(len)","b8753944":"train_data.head(10)\n","1ed833ec":"train_data.loc[(train_data.Age.isnull())&(train_data.Title=='Mr'),'Age']= train_data.Age[train_data.Title==\"Mr\"].mean()\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Title=='Mrs'),'Age']= train_data.Age[train_data.Title==\"Mrs\"].mean()\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Title=='Master'),'Age']= train_data.Age[train_data.Title==\"Master\"].mean()\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Title=='Miss'),'Age']= train_data.Age[train_data.Title==\"Miss\"].mean()\ntrain_data.loc[(train_data.Age.isnull())&(train_data.Title=='Other'),'Age']= train_data.Age[train_data.Title==\"Other\"].mean()","ca7b5de1":"train_data.isnull().sum()","2a39547f":"train_data.Age.unique()","010449db":"train_data.shape","8cc0fe20":"train_data=train_data.dropna(subset=['Age','Embarked'])","ce705e85":"train_data.isnull().sum()","61dd7fca":"train_data.shape","745fb2d2":"xtrain_data = train_data.drop(['Cabin','Ticket','Name'], axis =1 )","3c9a503e":"xtrain_data.Parch.unique()","b9208524":"Ticketclass = {3:\"lower_class\",2:'middle_class',1:'upper_class'}\nxtrain_data['Pclass'] = xtrain_data['Pclass'].map(Ticketclass)","39958f1c":"xtrain_data.Pclass.unique()","9d19f0e3":"train_titan = xtrain_data","98f8beca":"train_titan.head()","a91f7ccc":"train_dummy = pd.get_dummies(train_titan[['Pclass','Sex','Embarked']],)","8e4ed30d":"train_titan=pd.concat([train_titan.drop(['Pclass','Sex','Embarked'],axis=1),train_dummy],axis=1)","bc6123cc":"train_titan.head(12)","1343398b":"train_titan.isnull().sum()","578b11b2":"train_titan.head()","5b83457a":"train_titan.info()","ed577240":"\ntrain_titan.Age.value_counts()","170559a4":"train_titan.Age.unique()","073b0aed":"train_titan.Age = train_titan.Age.astype(int)","5ec12783":"train_titan.Age.unique()","385929a7":"train_titan['Age'].replace({0:1},inplace = True)","8b99ffde":"train_titan['Fare'] = np.round(train_titan.Fare,decimals=3)","b7a4e7d7":"train_titan.head()","08648c54":"train_titan = train_titan.drop('Title',axis = 1)","4edca8ba":"sns.heatmap(train_titan.isnull(),yticklabels=False,cbar=False,cmap='viridis')","376ee049":"\ntrain_titan.head()","bca9c19b":"test_data.head()","6a3f456b":"test_data['Title']=0\ntest_data['Title']=test_data.Name.str.extract('([A-Za-z]+)\\.') #lets extract the Salutations\ntest_data['Title'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)","2d1beb94":"\ntest_data['Name_length'] = test_data['Name'].apply(len)","02891821":"test_data.loc[(test_data.Age.isnull())&(test_data.Title=='Mr'),'Age']= test_data.Age[test_data.Title==\"Mr\"].mean()\ntest_data.loc[(test_data.Age.isnull())&(test_data.Title=='Mrs'),'Age']= test_data.Age[test_data.Title==\"Mrs\"].mean()\ntest_data.loc[(test_data.Age.isnull())&(test_data.Title=='Master'),'Age']= test_data.Age[test_data.Title==\"Master\"].mean()\ntest_data.loc[(test_data.Age.isnull())&(test_data.Title=='Miss'),'Age']= test_data.Age[test_data.Title==\"Miss\"].mean()\ntest_data.loc[(test_data.Age.isnull())&(test_data.Title=='Other'),'Age']= test_data.Age[test_data.Title==\"Other\"].mean()","a4655252":"test_data.head(8)","c25436d5":"test_data.shape\n","2b0ddb8f":"test_data.isnull().sum()","0f833fff":"\nxtest_data = test_data.drop({'Name','Cabin','Title'},axis = 1)","681fe5a6":"\nxtest_data.info()","a58553f8":"Ticketclass = {3:\"lower_class\",2:'middle_class',1:'upper_class'}\nxtest_data['Pclass'] = xtest_data['Pclass'].map(Ticketclass)","231af805":"test_dummies = pd.get_dummies(xtest_data[['Pclass','Sex','Embarked']])","86c706e4":"test_dummies.head()\n","5551edbb":"test_titan = pd.concat([xtest_data.drop(['Pclass','Sex','Embarked'],axis =1),test_dummies],axis = 1)","04eb54a8":"test_titan.head()\n","1b5faa4a":"test_titan.shape\n","6cbd24e1":"test_titan.Fare= np.round(test_titan.Fare,decimals=3)","2432b8f9":"test_titan.isnull().sum()","10d69494":"test_titan['Fare'].fillna(train_data['Fare'].mean(), inplace=True)","1e9407aa":"test_titan.head()","ff48f360":"test_titan.Age = test_titan.Age.astype(int)\n","a5800335":"\ntest_titan.Age.unique()","cdcaf69e":"test_titan.replace({0:1},inplace=True)","e485e54c":"test_titan.Age.unique()","98e265b7":"test_titan = test_titan.drop(['Ticket'],axis =1)","60c4a1f5":"test_titan.shape","6568f882":"test_titan.head()","ee44b88c":"features = ['Age','SibSp','Parch','Fare','Pclass_lower_class','Pclass_middle_class','Pclass_upper_class','Name_length','Sex_female','Sex_male','Embarked_C','Embarked_Q','Embarked_S']\nselected_train_titan = train_titan[features]\nlabels= train_titan.Survived","50c0cfb6":"x_train, x_test, y_train, y_test = train_test_split(selected_train_titan,labels,train_size=0.75,test_size=0.25,random_state=42)","6dc85cf5":"\nmodel =LogisticRegression(max_iter = 10000)\nmodel.fit(x_train, y_train)","5c58c262":"\nprint(model.score(x_train, y_train))","78a80941":"print(model.score(x_test,y_test))","face95df":"selected_test_titan = test_titan[features]\nmodel =LogisticRegression(max_iter=10000)\nmodel.fit(selected_train_titan,labels)\n","39c3fb87":"submission = pd.DataFrame({'PassengerID':test_titan.PassengerId,'Survived':model.predict(selected_test_titan)})\nsubmission.to_csv(\"Submissions.csv\")","2ba81eb4":"# **Testing Data and its Feature Engineering**"}}