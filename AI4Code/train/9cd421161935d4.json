{"cell_type":{"c359a748":"code","646ef8ca":"code","beb3de0a":"code","6a206df4":"code","438df26c":"code","a00e67d2":"code","8c007134":"code","0133a26d":"code","84918bd3":"code","2a508045":"code","4580ea0e":"code","63e92434":"code","00300cb2":"code","8290fa59":"markdown","3dd548d1":"markdown","e0a44a00":"markdown","49f1a100":"markdown","3f1bc64d":"markdown","824d1145":"markdown","ec01675d":"markdown","00ca88b2":"markdown","23ee4521":"markdown"},"source":{"c359a748":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\n\nraw_data = pd.read_csv('..\/input\/iris\/Iris.csv')\nraw_data.head()","646ef8ca":"#valid_data = raw_data.iloc[::3,:]\n#train_data = raw_data.drop(valid_data.index)\n \n#train_X = train_data.drop('Species', axis=1)\n#valid_X = valid_data.drop('Species', axis=1)\n#train_y = train_data.loc[:, 'Species']\n#valid_y = valid_data.loc[:, 'Species']\n\n#OR\n\nX = raw_data.drop('Species', axis=1)\ny = raw_data.loc[:, 'Species']\nfrom sklearn.model_selection import train_test_split\ntrain_X, valid_X, train_y, valid_y = train_test_split(X, y, test_size = 0.33, random_state=42)","beb3de0a":"from sklearn.neighbors import KNeighborsClassifier\n\nknn_model = KNeighborsClassifier(n_neighbors=3)\n\nknn_model.fit(train_X, train_y)","6a206df4":"knn_prediction = knn_model.predict(valid_X)\n\nprint(\"Accuracy:\", metrics.accuracy_score(valid_y, knn_prediction))\nplt.plot(knn_prediction, valid_y)\nplt.title('Knn')\nplt.xlabel('given')\nplt.ylabel('predicton')\nplt.show()","438df26c":"from sklearn.tree import DecisionTreeClassifier\n\ndecision_tree_model = DecisionTreeClassifier()\n\ndecision_tree_model.fit(train_X, train_y)","a00e67d2":"decision_tree_prediction = decision_tree_model.predict(valid_X)\n\nprint(\"Accuracy:\", metrics.accuracy_score(valid_y, decision_tree_prediction))\nplt.plot(decision_tree_prediction, valid_y)\nplt.title('Decision tree')\nplt.xlabel('given')\nplt.ylabel('predicton')\nplt.show()","8c007134":"from sklearn import tree\n#X = raw_data.drop('Species', axis=1)\n#y = raw_data['Species']\n#clf = DecisionTreeClassifier()\n#clf.fit(X,y)\n#tree.plot_tree(clf)\ntree.plot_tree(decision_tree_model)","0133a26d":"from sklearn.ensemble import RandomForestClassifier\n\nrandom_forest_model = RandomForestClassifier(n_estimators = 50, criterion = 'gini', max_depth=2, random_state=42, verbose=1)\nrandom_forest_model.fit(train_X, train_y)\n\nrandom_forest_prediction = random_forest_model.predict(valid_X)","84918bd3":"print(\"Accuracy:\", metrics.accuracy_score(valid_y, random_forest_prediction))\nplt.plot(random_forest_prediction, valid_y)\nplt.title('Random forest')\nplt.xlabel('given')\nplt.ylabel('prediction')\nplt.show()","2a508045":"from sklearn.naive_bayes import CategoricalNB\n\nnaive_bayes_model = CategoricalNB()\nnaive_bayes_model.fit(train_X, train_y)\n\nnaive_bayes_prediction = naive_bayes_model.predict(valid_X)","4580ea0e":"print(\"Accuracy:\", metrics.accuracy_score(valid_y, naive_bayes_prediction))\n#plt.plot(naive_bayes_prediction, valid_y)\nplt.scatter(naive_bayes_prediction, valid_y)\nplt.title('Naive bayes')\nplt.xlabel('given')\nplt.ylabel('prediction')\nplt.show()","63e92434":"from sklearn.svm import SVC\n\nsupport_vector_machine_model = SVC()\nsupport_vector_machine_model.fit(train_X, train_y)\nsupport_vector_machine_prediction = support_vector_machine_model.predict(valid_X)","00300cb2":"print(\"Accuracy:\", metrics.accuracy_score(valid_y, support_vector_machine_prediction))\nplt.plot(support_vector_machine_prediction, valid_y)\nplt.title('Support vector machine')\nplt.xlabel('given')\nplt.ylabel('prediction')\nplt.show()","8290fa59":"---\n## 5. Support Vector Machine","3dd548d1":"\uc800\ud76c\uc758 \uc6d0 \ub370\uc774\ud130\uc14b\uc740 \uc704\uc640 \uac19\uc774 \uc0dd\uacbc\uc2b5\ub2c8\ub2e4.\n\n\ucd1d 6\uac00\uc9c0 \uc5f4\ub85c \uad6c\uc131\ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. `Id, SepalLengthCm, SepalWidthCm, PetalLengthCm, PetalWidthCm, Species`.\n\n\uc774 \ub54c, \uc800\ud76c\uc758 \ubaa9\ud45c\ub294 Species\ub97c \uc608\uce21\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \uc544\ub798\uc640 \uac19\uc774 \uc218\uc815\ud560 \uc218 \uc788\uaca0\uc2b5\ub2c8\ub2e4.","e0a44a00":"---\n## 4. Naive Bayes\n\n>`p(\u0398|X) = p(X|\u0398)p(\u0398) \/ p(X)`","49f1a100":"---\n## 2. Decision Tree","3f1bc64d":"---\n\uc774\uc81c \ubaa8\ub378\uc744 \uacb0\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\n\n> 1. [KNN](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsClassifier.html)\n> 2. [Decision Tree](https:\/\/scikit-learn.org\/stable\/modules\/tree.html#classification)\n> 3. [Random forest](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html)\n> 4. [Naive Bayes](https:\/\/scikit-learn.org\/stable\/modules\/naive_bayes.html#categorical-naive-bayes)\n> 5. [Support Vector Machine](https:\/\/scikit-learn.org\/stable\/modules\/svm.html)\n\n[\uc5ec\uae30](https:\/\/bkshin.tistory.com\/entry\/\uba38\uc2e0\ub7ec\ub2dd-1\ub098\uc774\ube0c-\ubca0\uc774\uc988-\ubd84\ub958-Naive-Bayes-Classification)\ub294 \ub3c4\uc6c0\uc774 \ub420 \ub9cc\ud55c \ud55c\uae00 \ube14\ub85c\uadf8 \ub9c1\ud06c\uc785\ub2c8\ub2e4. \ub098\uc774\ube0c\ubca0\uc774\uc988\uc5d0 \ub300\ud55c \uae00\uc774\uc5d0\uc694.","824d1145":"# Iris Species model\n\n> \uc9c0\ub09c \uc8fc\uc5d0 Iris \ub370\uc774\ud130\uc14b\uc744 \uc0ac\uc6a9\ud558\uc790\uace0 \uacb0\uc815\ud588\uc2b5\ub2c8\ub2e4.\n>\n> \uadfc\ub370, \uac00\ub9cc \uc0dd\uac01\ud574\ubcf4\ub2c8 \uc774\uac74 \ub370\uc774\ud130\uc14b\uc77c \ubfd0\uc774\ub77c\uc11c \uc2a4\ud130\ub514\uc5d0 \ub69c\ub837\ud55c \ubaa9\uc801\uc774 \uc5c6\ub2e4\ub294 \uc0dd\uac01\uc774 \ub4e4\uc5c8\uc2b5\ub2c8\ub2e4.\n>\n> \ub530\ub77c\uc11c, \uc81c\uac00 \uc0dd\uac01\ud574\ubcf8 \uc9c4\ud589\ubc29\uc2dd\uc740 \uc5ec\ub7ec\uac00\uc9c0 \ubd84\ub958 \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud574\uc11c \uac01\uac01\uc758 \uc815\ud655\ub3c4\ub97c \ubd84\uc11d\ud574\ubcf4\uace0 \uc0ac\uc6a9\ud558\uba70 \uc775\ud788\ub294 \uac83\uc5d0 \ucd08\uc810\uc744 \ub450\uba74 \uc88b\uc9c0 \uc2f6\uc2b5\ub2c8\ub2e4.\n> \uadf8\ub798\uc11c \uc774\ub807\uac8c \ub9cc\ub4e4\uc5b4\ubd05\ub2c8\ub2f9\ud83c\udf73","ec01675d":"---\n## 1. KNN","00ca88b2":"---\n## 3. Random forest","23ee4521":"---\n## Conclusion\n\n\ub2e4\ub978 4\uac1c\uc758 \uc54c\uace0\ub9ac\uc998\uacfc \ub2ec\ub9ac naive bayes\uc758 \uacbd\uc6b0 \uc815\ud655\ub3c4\uac00 100%\uac00 \uc544\ub2c8\uc5c8\uc2b5\ub2c8\ub2e4.\n\ubb3c\ub860, naive bayes \uc790\uccb4\ub97c \ucc98\uc74c \uc811\ud558\ub294\uac70\ub77c \uad6c\ud604\uc5d0\uc11c \ubb38\uc81c\uac00 \uc788\uc744 \uc218 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\nI'm just getting started so don't know why, but in my notebook naive bayes model is less accurate than other models.\n\nIf you know why the result is like this and what should I do, please teach me! Then I'll be really appreciate about it."}}