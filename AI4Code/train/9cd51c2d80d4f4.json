{"cell_type":{"5998e1f1":"code","5d417768":"code","93150c9d":"code","e0e708aa":"code","f945cc43":"code","ff045b27":"code","f92b989b":"code","4fafc1e2":"code","bcabcfa7":"code","1bbdab8f":"code","5fd84fee":"code","38894ad9":"code","ccd2b1bf":"code","f94ba5f6":"code","14af2ddf":"code","28bda57c":"code","a542d362":"code","8da2c427":"code","3fa253dd":"code","a5d4f2dd":"code","c78fc2bb":"code","f0b540da":"markdown","1c017272":"markdown"},"source":{"5998e1f1":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LinearRegression","5d417768":"data = pd.read_csv(\"..\/input\/electric-motor-temperature\/measures_v2.csv\")\ndata.head()","93150c9d":"data.shape","e0e708aa":"data.info()","f945cc43":"def preprocessing(df):\n    df = df.copy()\n    df = df.drop('profile_id' , axis =1 )\n    \n    y = df['pm'].copy()\n    X = df.drop('pm' , axis = 1)\n    \n    scaler = StandardScaler()\n    X = pd.DataFrame(scaler.fit_transform(X) , columns=X.columns)\n    \n    return X , y","ff045b27":"X , y = preprocessing(data)","f92b989b":"X","4fafc1e2":"y","bcabcfa7":"eda_df = pd.concat([X, y] , axis = 1).copy()","1bbdab8f":"eda_df.head()","5fd84fee":"eda_df.describe()","38894ad9":"plt.figure(figsize=(16, 12))\nfor i in range(len(eda_df.columns)):\n    plt.subplot(3, 4, i + 1)\n    sns.distplot(eda_df[eda_df.columns[i]])\nplt.show()","ccd2b1bf":"plt.figure(figsize=(16, 12))\nfor i in range(len(eda_df.columns)):\n    plt.subplot(3, 4, i + 1)\n    sns.boxplot(eda_df[eda_df.columns[i]])\nplt.show()","f94ba5f6":"plt.figure(figsize=(16, 12))\nsns.pairplot(eda_df.sample(1000))\nplt.show()","14af2ddf":"corr = eda_df.corr()\n\nplt.figure(figsize=(12, 10))\nsns.heatmap(corr, annot=True, vmin=-1.0, cmap='mako')\nplt.show()","28bda57c":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)","a542d362":"model = LinearRegression()\nmodel.fit(X_train, y_train)","8da2c427":"print(\"Model R^2 Score: {:.4f}\".format(model.score(X_test, y_test)))","3fa253dd":"#fitting Decision Tree regression to DataSet\nfrom sklearn.tree import DecisionTreeRegressor\nregressor = DecisionTreeRegressor(random_state=0)\nregressor.fit(X_train,y_train)\n\nprint(\"Model R^2 Score: {:.4f}\".format(regressor.score(X_test, y_test)))","a5d4f2dd":"#fitting Random Forest regression to DataSet\nfrom sklearn.ensemble import RandomForestRegressor   \nregressor = RandomForestRegressor(n_estimators=300 , random_state=0) #n_estimator - num of trees\nregressor.fit(X_train,y_train)\nprint(\"Model R^2 Score: {:.4f}\".format(regressor.score(X_test, y_test)))","c78fc2bb":"from sklearn.linear_model import Ridge\nrdg = Ridge(alpha = 0.5)\nrdg.fit(X, y)\nprint(\"Model R^2 Score: {:.4f}\".format(rdg.score(X_test, y_test)))","f0b540da":"# Preprocessing","1c017272":"# EDA"}}