{"cell_type":{"2ca0804a":"code","23b95259":"code","3fe34073":"code","412356a1":"code","21b61f63":"code","7c0b5668":"code","28185306":"code","cfbba86a":"code","42813314":"code","1692f55b":"code","9ba026f4":"code","bf86ffe1":"code","f9fc72f4":"code","fd7b30d1":"code","873b507a":"code","dc0eeacb":"code","ccb1de7d":"code","7d0d88cf":"code","325a79e8":"code","4b8966aa":"code","736bc3b4":"code","de1a28a4":"code","6307c382":"code","24126044":"code","f7ac6146":"code","df29a955":"code","dc394a0f":"code","82002142":"code","fd7467e2":"code","174b0555":"code","4783da07":"code","082bc77b":"code","3f74ed20":"code","277da259":"code","3efef6e5":"code","8d95c64e":"code","e006e370":"code","6e878ca0":"code","699b630b":"code","dfa1b522":"code","b414f8e1":"code","7bf75d0f":"code","6c47076c":"code","12581cea":"code","701195e0":"code","e41a823d":"code","642704be":"code","7aa3a915":"code","2ea6965b":"code","18c221e1":"code","e220916b":"code","6cac0f16":"code","790863cb":"code","fc0ce280":"code","7ed18bb0":"code","55384fdd":"code","b20b8cfb":"markdown","707ff55b":"markdown","90dec584":"markdown","ced21c29":"markdown","3ad2d0a8":"markdown","234aa382":"markdown","c92336fa":"markdown","894560d6":"markdown","cb62e079":"markdown","8903f338":"markdown","6dfb5e90":"markdown","e68b98ba":"markdown","be502dcc":"markdown","d91cead5":"markdown","a9f96f7d":"markdown","7c54924a":"markdown","924607e0":"markdown"},"source":{"2ca0804a":"import numpy as np \nimport pandas as pd\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\nfrom plotly.offline import init_notebook_mode,iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport warnings\nwarnings.filterwarnings('ignore')\n","23b95259":"data=pd.read_csv('..\/input\/Loan payments data.csv')","3fe34073":"#first five rows in dataset\ndata.head()","412356a1":"#last five rows in dataset\ndata.tail()","21b61f63":"print('Data Info\\n')\nprint(data.info())","7c0b5668":"print('Data Describe\\n')\nprint(data.describe())","28185306":"print('Data Age Describe\\n')\nprint(data.age.describe())","cfbba86a":"print('Data Age nad terms Describe')\nprint(data[['age','terms']].describe())","42813314":"print('Data shape\\n')\nprint(data.shape)","1692f55b":"print('Data Corr\\n')\nprint(data.corr())","9ba026f4":"print('Data Corr Age Terms\\n')\nprint(data[['age','terms']].corr())","bf86ffe1":"print('Data Dtypes\\n')\nprint(data.dtypes)","f9fc72f4":"print('Data Size\\n')\nprint(data.size)","fd7b30d1":"data.isnull().sum()","873b507a":"print('Data Columns\\n')\nfor col in data.columns:\n    print(col)","dc0eeacb":"print('Rename Data Columns\\n')\ndata=data.rename(columns={'Loan_ID':'Loan_Id','loan_status':'Loan_Status','Principal':'Principal',\n                          'terms':'Terms','effective_date':'Effective_Date','due_date':'Due_Date',\n                          'paid_off_time':'Paid_Of_Time','past_due_days':'Past_Due_Days','age':'Age',\n                          'education':'Education','Gender':'Gender'})\nfor col in data.columns:\n    print(col)","ccb1de7d":"print('Loan_ID States\\n')    \nprint('Loan_ID missing sum\\n')\nprint(data.Loan_Id.isnull().sum())","7d0d88cf":"print('Loan_ID unique value\\n')\nprint(data.Loan_Id.unique())\nprint('Loan_Id unqiue sum\\n')\nprint(sum(data.Loan_Id.value_counts()))","325a79e8":"print('Loan_Status\\n')\nprint('Loan Status Value Counts\\n')\nprint(data['Loan_Status'].value_counts(dropna=False))","4b8966aa":"print('Loan_Status missing sum\\n')\nprint(data.Loan_Status.isnull().sum())","736bc3b4":"print('Loan_ID unqiue value\\n')\nprint(data.Loan_Status.unique())\nloan_status_unique=data.Loan_Status.unique().reshape(-1,1)\nprint(loan_status_unique)","de1a28a4":"paidoff_count=0\ncollection_count=0\ncollection_paidoff_count=0\n\nprint('Loan status with Loan_Id counts\\n')\npaidoff_count=len(data[data.Loan_Status==loan_status_unique[0][0]].Loan_Id)\ncollection_count=len(data[data.Loan_Status==loan_status_unique[1][0]].Loan_Id)\ncollection_paidoff_count=len(data[data.Loan_Status==loan_status_unique[2][0]].Loan_Id)   ","6307c382":"print('Pricipal State\\n')\nprint('Data Principal value counts\\n')\nprint(data.Principal.value_counts())  ","24126044":"print('Paidoff and principal all of them whatever\\n')   \nprint(data.Principal.isnull().sum())\nprint(data.groupby('Loan_Status')['Principal'].value_counts()) ","f7ac6146":"print('Group by every Principal in Data\\n')\nprint(data.groupby('Loan_Status')['Principal'].sum()) ","df29a955":"print('Terms is missing value\\n')\nprint(data.Terms.isnull().sum())\nprint('Terms value unique\\n')\nprint(data.Terms.value_counts())\nprint('Unique Terms Value\\n')\nprint(data.Terms.unique())","dc394a0f":"print('Groupby Terms and Principal in Data\\n')\nprint(data.groupby('Terms')['Principal'].value_counts())\nprint('Group sum every Terms in Data')\nprint(data.groupby('Terms')['Principal'].sum())","82002142":"print('Effective State\\n')\nprint('Effective Date isnull\\n')\nprint(data.Effective_Date.isnull().sum())\nprint('Effective Value Counts\\n')\nprint(data.Effective_Date.value_counts())\nprint('Effective group by Terms nad Principal in every Data\\n')\nprint(data.groupby('Effective_Date')[['Terms','Principal']].count())\nprint('Group sum every Terms and Principal in Data')\nprint(data.groupby('Effective_Date')[['Terms','Principal']].sum())\nprint('Group Mean every Terms and Principal in Data')\nprint(data.groupby('Effective_Date')[['Terms','Principal']].mean())","fd7467e2":"print('Age in Data state\\n')\nprint('Data isnull sum\\n')\nprint(data.Age.isnull().sum())\nprint('Data unique age\\n')\nprint(data.Age.unique())\nprint('Data value counts age\\n')\nprint(data.Age.value_counts())\nprint('Age group by Terms nad Principal in every Data\\n')\nprint(data.groupby('Terms')['Age'].value_counts())\nprint('Group sum every Terms and Principal in Data')\nprint(data.groupby('Age')[['Terms','Principal']].sum())","174b0555":"data_age=data.Age.value_counts().index\nlen(data_age)\ndata_age_list=[]\nfor age in data_age:\n    data_age_list.append(sum(data[data.Age==int(age)].Principal))","4783da07":"print('Education State\\n')\nprint('Education Unique\\n')\nprint(data.Education.unique())\nprint('Education isnull \\n')\nprint(data.Education.isnull().sum())\nprint('Education value counts\\n')\nprint(data.Education.value_counts())\nprint('Education group by Count Education and Age in Data\\n')\nprint(data.groupby('Education')['Age'].count())\nprint('Educaton group by Principal in Data\\n')\nprint(data.groupby('Education')['Principal'].sum())","082bc77b":"print('Gender State\\n')\nprint('Gender Unique\\n')\nprint(data.Gender.unique())\nprint('Gender isnull\\n')\nprint(data.Gender.isnull().sum())\nprint('Value Counts in Data\\n')\nprint(data.Gender.value_counts())\nprint('Gender group by education in Data\\n')\nprint(data.groupby('Education')['Gender'].value_counts())\nprint('Gender and Education group by sum Principal in Data\\n')\nprint(data.groupby(['Education','Gender'])['Principal'].sum())\nprint('Gender group by Principal in Data\\n')\nprint(data.groupby('Gender')['Principal'].sum())\n","3f74ed20":"print('Effeftive Time State\\n')\nprint('Effeftive Time unique\\n')\nprint(data.Effective_Date.unique())\nprint('Effective Time isnull\\n')\nprint(data.Effective_Date.isnull().sum())\nprint('Effective Time value counts\\n')\nprint(data.Effective_Date.value_counts())\nprint('Effective_Date group by sum Principal in Data\\n')\nprint(data.groupby('Effective_Date')['Principal'].sum())","277da259":"print('Due Date State\\n')\nprint('Due Date unique\\n')\nprint(data.Due_Date.unique())\nprint('Due Date isnull\\n')\nprint(data.Due_Date.isnull().sum())\nprint('Due Date value counts\\n')\nprint(data.Due_Date.value_counts())\nprint('Due Date group by sum Principal in Data\\n')\nprint(data.groupby('Due_Date')['Principal'].sum())","3efef6e5":"print('PaidOff Date State\\n')\nprint('PaidOff Date unique\\n')\nprint(data.Paid_Of_Time.unique())\nprint('PaidOff Date isnull\\n')\nprint(data.Paid_Of_Time.isnull().sum())\nprint('PaidOff Date value counts\\n')\nprint(data.Paid_Of_Time.value_counts())\nprint('PaidOff Date group by sum Principal in Data\\n')\nprint(data.groupby('Paid_Of_Time')['Principal'].sum())","8d95c64e":"print('Past_Due_Days Date State\\n')\nprint('Past_Due_Days Date unique\\n')\nprint(data.Past_Due_Days.unique())\nprint('Past_Due_Days Date isnull\\n')\nprint(data.Past_Due_Days.isnull().sum())\nprint('Past_Due_Days Date value counts\\n')\nprint(data.Past_Due_Days.value_counts())\nprint('Past_Due_Days Date group by sum Principal in Data\\n')\nprint(data.groupby('Past_Due_Days')['Principal'].sum())\nprint('Past_Due_Days Date group by Gender in Data\\n')\nprint(data.groupby('Past_Due_Days')['Gender'].count())\nprint('Past_Due_Days Date group by Education in Data\\n')\nprint(data.groupby('Education')['Past_Due_Days'].count())","e006e370":"#Load_id is an ordered value. This value is not very important. To do this, we need to delete this value.\ndata=data.drop('Loan_Id',axis=1)","6e878ca0":"print(data.isnull().sum())\nprint('\\n')\nprint(len(data))","699b630b":"#As it is seen, it is necessary to delete those values because Paid_Of_Time and Past_Due_Days property values are quite missing.\ndata=data.drop(['Paid_Of_Time','Past_Due_Days'],axis=1)","dfa1b522":"data.isnull().sum()","b414f8e1":"#Visualization process of Loan_Status\nsns.countplot(data['Loan_Status'])\nplt.show()","7bf75d0f":"data['Loan_Status'].unique()","6c47076c":"data[data['Loan_Status']=='PAIDOFF'].groupby('Education')['Gender'].count()","12581cea":"sns.barplot(x=data[data['Loan_Status']=='PAIDOFF'].groupby('Education')['Gender'].count().index,\n           y=data[data['Loan_Status']=='PAIDOFF'].groupby('Education')['Gender'].count().values)\nplt.xticks(rotation=90)\nplt.show()","701195e0":"#To better share and understand the Loan_Status process, we need to render it sequentially.\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndata['Loan_Status']=le.fit_transform(data['Loan_Status'])","e41a823d":"data[data['Principal']==1000].Gender.value_counts()","642704be":"plt.figure(figsize=(5,5))\nax=sns.barplot(x=data[data['Principal']==1000].Gender.value_counts().index,\n              y=data[data['Principal']==1000].Gender.value_counts().values,\n              palette=sns.cubehelix_palette(120))\nplt.xlabel('Principal')\nplt.ylabel('Gender')\nplt.title('Show Principal & Gender Bar Plot')\nplt.show()","7aa3a915":"le=LabelEncoder()\ndata['Principal']=le.fit_transform(data['Principal'])","2ea6965b":"labels=data['Terms'].value_counts().index\ncolors=['blue','red','yellow']\nexplode=[0,0,0.1]\nvalues=data['Terms'].value_counts().values\n\n#visualization\nplt.figure(figsize=(7,7))\nplt.pie(values,explode=explode,labels=labels,colors=colors,autopct='%1.1f%%')\nplt.title('Ters According Analysis',color='black',fontsize=10)\nplt.show()","18c221e1":"sns.lmplot(x='Terms',y='Age',data=data)\nplt.xlabel('Terms Values')\nplt.ylabel('Age Values')\nplt.title('Terms vs Age Values')\nplt.show()","e220916b":"sns.kdeplot(data['Age'])\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('Age Kde Plot System Analysis')\nplt.show()","6cac0f16":"sns.kdeplot(data['Age'],shade=True,color='r')\nsns.kdeplot(data['Terms'],shade=True,color='b')\nplt.xlabel('Values')\nplt.ylabel('Frequency')\nplt.title('Agevs Terms Kde Plot System Analysis')\nplt.show()","790863cb":"sns.violinplot(data['Age'])\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.title('Violin Age Score Show')\nplt.show()","fc0ce280":"sns.countplot(data['Gender'],hue=data['Education'])\nplt.show()","7ed18bb0":"plt.figure(figsize=(7,7))\nsns.countplot(y=data['Age'],palette=\"Set2\",hue=data['Gender'])\nplt.legend(loc=4)\nplt.tight_layout()\nplt.show()","55384fdd":"data.head()","b20b8cfb":"lrr=LogisticRegression()\nlrr.fit(x_train,y_train)\n\ny_pred=lrr.predict(x_test)\n\ncm=confusion_matrix(y_pred,y_test)\nprint(cm)\n\n\nprint(\"Logistic Regression Test Accuracy :{:2f}\".format(round(lrr.score(x_test,y_test)*100,2)))\nprint(\"Logistic Regression Train Accuracy :{:2f}\".format(round(lrr.score(x_train,y_train)*100,2)))","707ff55b":"#\n#data_new=(data_new-np.min(data_new))\/(np.max(data_new)-np.min(data_new))\n#\n#from sklearn.preprocessing import StandardScaler\n#sc=StandardScaler()\n#data_new=sc.fit_transform(data_new)\n\n#x_train,x_test,y_train,y_test=train_test_split(data_new,data_new_loan_status,test_size=0.33,random_state=42)","90dec584":"lr=LinearRegression(n_jobs=3)\nlr.fit(x_train,y_train)\n\ny_pred=lr.predict(x_test).astype(int)\n\n\nprint(\"LinearRegression Test Accuracy :{:2f}\".format(round(lr.score(x_test,y_test)*100,2)))\nprint(\"LinearRegressionTrain Accuracy :{:2f}\".format(round(lr.score(x_train,y_train)*100,2)))\n","ced21c29":"data_new_gender=le.fit_transform(data['Gender'])\ndata_new_gender=pd.Series(data_new_gender)\ndata_new_gender=pd.DataFrame(data_new_gender,columns=['Gender'])","3ad2d0a8":"<p id='1'><h2><b>Introduction<\/b><\/h2><\/p>\n<p>This data set includes customers who have paid off their loans, who have been past due and put into collection without paying back their loan and interests, and who have paid off only after they were put in collection. The financial product is a bullet loan that customers should pay off all of their loan debt in just one time by the end of the term, instead of an installment schedule. Of course, they could pay off earlier than their pay schedule.<\/p>\n\n<h3><b>Feature Values<\/b><\/h3>\n\n<ul>\n    <li> Loan_id A unique loan number assigned to each loan customers<\/li>\n     <li>Loan_status Whether a loan is paid off, in collection, new customer yet to payoff, or paid off after the collection efforts<\/li>\n     <li>Principal Basic principal loan amount at the origination<\/li>\n     <li>terms Can be weekly (7 days), biweekly, and monthly payoff schedule<\/li>\n     <li>Effective_date When the loan got originated and took effects<\/li>\n     <li>Due_date Since it\u2019s one-time payoff schedule, each loan has one single due date<\/li>\n     <li>Paidoff_time The actual time a customer pays off the loan<\/li>\n     <li>Pastdue_days How many days a loan has been past due<\/li>\n     <li>Age, education, gender A customer\u2019s basic demographic information<\/li>\n<\/ul>","234aa382":"<h1><b>Loan Payment Analysis & Visualization <\/b><\/h1>\n\n<b><h2>Content<\/h2><\/b>\n<ul>\n    <a href='#1'><li>Introroduction<\/li><\/a>\n    <a href='#2'><li>Import Library<\/li><\/a>\n    <a href='#3'><li>Exploratory Data Analysis<\/li><\/a>\n    <a href='#4'><li>Data Cleaning<\/li><\/a>\n    <a href='#10'><li>References<\/li><\/a>\n    <a href='#11'><li>Conclusion<\/li><\/a>\n<\/ul>\n","c92336fa":"from sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\ndata_new_loan_status=le.fit_transform(data_new['Loan_Status'])\ndata_new_loan_status=pd.Series(data_new_loan_status)\ndata_new_loan_status=pd.DataFrame(data_new_loan_status,columns=['Loan_Status'])","894560d6":"\nfrom sklearn.metrics import confusion_matrix,accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression,LinearRegression\nfrom sklearn.svm import SVC,LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier,RandomForestRegressor\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier","cb62e079":"data_new=data[['Loan_Status','Principal','Terms','Age','Education','Gender']]","8903f338":"\nlsvc=LinearSVC(random_state=0)\nlsvc.fit(x_train,y_train)\n\ny_pred=lsvc.predict(x_test).astype(int)\n\n\nprint(\"LinearSVC Test Accuracy :{:2f}\".format(round(lsvc.score(x_test,y_test)*100,2)))\nprint(\"LinearSVC Train Accuracy :{:2f}\".format(round(lsvc.score(x_train,y_train)*100,2)))","6dfb5e90":"data_new=data_new.drop(['Loan_Status','Education','Gender'],axis=1)\ndata_new=pd.concat([data_new,data_new_loan_status],axis=1)\ndata_new=pd.concat([data_new,data_new_education],axis=1)\ndata_new=pd.concat([data_new,data_new_gender],axis=1)\ndata_new=data_new.drop(['Loan_Status'],axis=1)","e68b98ba":"data_new_education=le.fit_transform(data_new['Education'])\ndata_new_education=pd.Series(data_new_education)\ndata_new_education=pd.DataFrame(data_new_education,columns=['Education'])","be502dcc":"<p id='4'><h2><b>Data Cleaning<\/b><\/h2><\/p>","d91cead5":"<p id='3'><h2><b>Exploratory Data Analysis<\/b><\/h2><\/p>","a9f96f7d":"svc=SVC(random_state=0,kernel='rbf')\nsvc.fit(x_train,y_train)\n\ny_pred=lr.predict(x_test).astype(int)\n\n\nprint(\"SVC Test Accuracy :{:2f}\".format(round(svc.score(x_test,y_test)*100,2)))\nprint(\"SVC Train Accuracy :{:2f}\".format(round(svc.score(x_train,y_train)*100,2)))","7c54924a":"<p id='2'><h2><b>Import Library<\/b><\/h2><\/p>","924607e0":"x_train,x_test,y_train,y_test=train_test_split(data_new,data_new_loan_status,test_size=0.33,random_state=0)"}}