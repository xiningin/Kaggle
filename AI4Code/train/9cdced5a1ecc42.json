{"cell_type":{"b1edaf12":"code","acaaaa98":"code","3d927621":"code","f30d870d":"code","0a9f4927":"code","6c980f10":"code","8c8d29a0":"code","094f0728":"code","227239e2":"code","23840607":"code","2407091d":"code","b474a55c":"markdown","2a45d20c":"markdown","0b15f9be":"markdown","33369955":"markdown","506bf2d4":"markdown","71ca0304":"markdown","31ce4fd3":"markdown","d166ad5c":"markdown","a8520554":"markdown"},"source":{"b1edaf12":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","acaaaa98":"df= pd.read_csv('\/kaggle\/input\/online-class-prediction\/online_class.csv')\ndf","3d927621":"from sklearn import preprocessing\nle= preprocessing.LabelEncoder()\n\nx_1= le.fit_transform(df['sub_code'])\nx_2= le.fit_transform(df['day'])\nx_3= le.fit_transform(df['time_day'])\nx_4= df['attandence']\ny_1= le.fit_transform(df['performed'])","f30d870d":"x=list(zip(x_1,x_2))\ny=y_1\nx","0a9f4927":"p1=list(zip(x_1,x_2,y_1))\np2=x_4\n","6c980f10":"from sklearn.neighbors import KNeighborsClassifier\nmd= KNeighborsClassifier(n_neighbors=3)\nmd.fit(x,y)\npredict= md.predict([[3,1]])\npredict","8c8d29a0":"def call(data):\n    data_name=['sub_code','day']\n    data_x=['x_1','x_2']\n    p=0\n    en=[]\n    gn=[]\n    pn=[]\n    for j in data:\n        for counter, i in enumerate(df[data_name[p]]):\n             if i==j:\n                # print(j,i,counter)\n                 zz=data_x[p]\n                 en.append(zz)\n                 gn.append(counter)\n                 p=p+1\n                 break\n    pn=list(zip(en,gn))\n    #print(pn)\n    return pn","094f0728":"test_data=[]\na=input(\"Enter your class code (ex: eng125): \")\nb=input(\"Enter you class day name (ex: Monday): \")\ntest_data.append(a)\ntest_data.append(b)\nprint(\"Class score:\",md.score(x,y))\nprint(\"\\n# {}  Class News............\".format(test_data[0]))\n","227239e2":"j=0\nfor i in range(0,10):\n    zn=[]\n    pn= call(test_data)\n    for i in range(0,2):\n        q=pn[i][0]\n        r=pn[i][1]\n        #print(q,r )\n        #print(x[r][i])\n        zn.append(x[r][i])\n    #print(zn)\n    predict1= md.predict([zn])\n    if(predict1==1):\n        j=j+1\n#print(j)\n#print(predict1)\n","23840607":"md.fit(p1,p2)\n#print(\"score:\",md.score(p1,p2))\nzn.append(predict1)\nkk=md.predict([zn])\nkk","2407091d":"if j > 7:\n    print(\"yes,\\nClass will be held on online at right time\\n\")\n    print(\"Attendance score:\",md.score(p1,p2))\n    if kk==1:\n        print(\"Possibilities of your attendance will be ok\")\n    else:\n        print(\"Be careful to this class otherwise you will miss\")\nelse:\n    print(\"I am sorry, \\nClass will not be held\")\n","b474a55c":"# preprocessing","2a45d20c":"# output ","0b15f9be":"# function","33369955":"# for attendance","506bf2d4":"# KNN classifier","71ca0304":"# for class prediction","31ce4fd3":"# Data file","d166ad5c":"# input data","a8520554":"# for attendance"}}