{"cell_type":{"6a289621":"code","37ee5d8c":"code","cf540e6d":"code","51693cfe":"code","fc0735bb":"code","d97ff9b7":"code","ecaba786":"code","7c871804":"code","ca11539d":"code","cdb3542f":"code","61cb4209":"code","a3ce4570":"code","10e1ada3":"code","c99554e9":"code","616b1a5b":"code","9fb4a9af":"code","dfd276bc":"code","32a564ff":"markdown","4be99d64":"markdown","b4df3f56":"markdown","9d8f55b9":"markdown","5c261292":"markdown","912ff0fb":"markdown"},"source":{"6a289621":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom tensorflow import keras\nfrom keras.preprocessing.image import ImageDataGenerator as imgen\nfrom keras.models import Model\nfrom keras.layers import GlobalAveragePooling2D,Dense,Dropout,Input\nfrom keras.applications.xception import Xception\nfrom keras.applications.xception import preprocess_input\nfrom keras.callbacks import ModelCheckpoint,EarlyStopping\n\nfrom sklearn.metrics import classification_report,confusion_matrix","37ee5d8c":"traingen = imgen(preprocessing_function=preprocess_input,\n                zoom_range=0.2,\n                 shear_range=0.2,\n                 horizontal_flip=True,\n                 validation_split=0.12\n                )\ntestgen = imgen(preprocessing_function=preprocess_input)","cf540e6d":"trainds = traingen.flow_from_directory(\"..\/input\/animal-faces\/afhq\/train\",\n                                      target_size=(128,128),\n                                       seed = 123,\n                                       batch_size=32,\n                                       class_mode=\"categorical\",\n                                       subset=\"training\"\n                                      )\nvalds = traingen.flow_from_directory(\"..\/input\/animal-faces\/afhq\/train\",\n                                     target_size=(128,128),\n                                      seed =123,\n                                      batch_size = 32,\n                                      class_mode=\"categorical\",\n                                      subset=\"validation\"\n                                     )\ntestds = testgen.flow_from_directory(\"..\/input\/animal-faces\/afhq\/val\",\n                                    target_size=(128,128),\n                                      seed =123,\n                                      batch_size = 32,\n                                      class_mode=\"categorical\",\n                                     shuffle=False\n                                    )","51693cfe":"classes = trainds.class_indices\nclasses = list(classes.keys())\nclasses","fc0735bb":"dist = trainds.classes\nsns.countplot(x=dist);","d97ff9b7":"def showImages(x,y):\n    plt.figure(figsize=[15,11])\n    for i in range(16):\n        plt.subplot(4,4,i+1)\n        plt.imshow(x[i])\n        plt.title(classes[np.argmax(y[i])])\n        plt.axis(\"off\")\n    plt.show()\n    \nx,y = next(trainds)\nshowImages(x,y)","ecaba786":"base_model = Xception(include_top = False,weights=\"imagenet\",pooling=\"avg\",input_shape=(128,128,3))\n\nbase_model.trainable = False","7c871804":"image_input = Input(shape=(128,128,3))\nx = base_model(image_input,training = False)\nx = Dense(128,activation = \"relu\")(x)\nimage_output = Dense(3,activation=\"softmax\")(x)\nmodel = Model(image_input,image_output)","ca11539d":"# compile\nmodel.compile(optimizer=\"adam\",loss=\"categorical_crossentropy\",metrics=[\"accuracy\"])\n\n# callbacks\nmy_calls = [EarlyStopping(monitor=\"val_accuracy\",patience=3),\n            ModelCheckpoint(\"Model.h5\",verbose= 1 ,save_best_only=True)]","cdb3542f":"hist = model.fit(trainds, epochs=15, validation_data=valds, callbacks=my_calls)","61cb4209":"model.evaluate(testds)","a3ce4570":"plt.figure(figsize=(15,6))\n\nplt.subplot(1,2,1)\nplt.plot(hist.epoch,hist.history['accuracy'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_accuracy'],label = 'validation')\n\nplt.title(\"Accuracy\")\nplt.legend()\n\nplt.subplot(1,2,2)\nplt.plot(hist.epoch,hist.history['loss'],label = 'Training')\nplt.plot(hist.epoch,hist.history['val_loss'],label = 'validation')\n\nplt.title(\"Loss\")\nplt.legend()\nplt.show()","10e1ada3":"pred = model.predict(testds,verbose=1)","c99554e9":"pred = [np.argmax(i) for i in pred]","616b1a5b":"y_test = testds.classes","9fb4a9af":"print(classification_report(pred,y_test))","dfd276bc":"sns.heatmap(confusion_matrix(pred,y_test),annot = True, fmt = \"d\", cmap = \"BuPu\");","32a564ff":"**Predictions**","4be99d64":"**Train**","b4df3f56":"**Generating Datasets**","9d8f55b9":"**Test**","5c261292":"### **Model**","912ff0fb":"**Class names and some visualizations**"}}