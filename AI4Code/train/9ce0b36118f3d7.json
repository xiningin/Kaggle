{"cell_type":{"72a96945":"code","98b38f53":"code","deaec0cb":"code","8c0b2a7b":"code","32e6defb":"code","9883dfe6":"code","4af5e08b":"code","03df9d26":"code","d0e21647":"code","9e10e7b3":"code","79f46fe8":"code","833ef6ae":"code","91570f5e":"code","690a1dad":"code","90ba4011":"code","ea80fac4":"code","00430201":"code","bd01fd19":"code","8f19cd16":"code","eebe2be6":"code","09c1ea2f":"code","b1f0500c":"code","04560b8c":"code","840326b5":"code","fe0fdb5d":"code","343898e7":"markdown","9ac2acb1":"markdown","7b078b79":"markdown","61c9c620":"markdown","371bfe56":"markdown","9606da1e":"markdown","9199d223":"markdown","59fb11c5":"markdown","6dfe197d":"markdown","51fcbdd5":"markdown","9b4e3861":"markdown","3622465a":"markdown","30021f16":"markdown","3596b0b5":"markdown","4029e435":"markdown"},"source":{"72a96945":"#import libraies\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport keras\nimport tensorflow\nfrom keras.optimizers import Adam,SGD,Adagrad,Adadelta,RMSprop\nfrom sklearn.model_selection import train_test_split\nfrom keras.datasets import fashion_mnist\nfrom tensorflow.keras import layers, models","98b38f53":"#Spliting the Data into train and test set\n(x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()","deaec0cb":"#Read dataset\ntrain=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_train.csv\")\ntest=pd.read_csv(\"..\/input\/fashionmnist\/fashion-mnist_test.csv\")","8c0b2a7b":"#Examine Dimensions\nprint('train:',train.shape)\nprint('test:', test.shape)","32e6defb":"train.label.unique()","9883dfe6":"#display NaN value of train \ntrain.isna().any().sum()","4af5e08b":"#display NaN value of train\ntest.isna().any().sum()","03df9d26":"print(x_train.shape, y_train.shape)","d0e21647":"class_labels = {0 : 'T-shirt\/top',\n            1 : 'Trouser',\n            2 : 'Pullover',\n            3 : 'Dress',\n            4 : 'Coat',\n            5 : 'Sandal',\n            6 : 'Shirt',\n            7 : 'Sneaker',\n            8 : 'Bag',\n            9 : 'Ankle boot'}","9e10e7b3":"plt.imshow(x_train[0],cmap='Greys')","79f46fe8":"plt.figure(figsize=(16,16))\nj = 1\nfor i in np.random.randint(0,1000,25):\n  plt.subplot(5,5,j); j+=1\n  plt.imshow(x_train[i],cmap = 'Greys')\n  plt.axis('off')\n  plt.title('{} \/ {}'.format(y_train[i],class_labels[y_train[i]]))","833ef6ae":"X = train.iloc[:,1:]\nY = train.iloc[:,0]\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.1, random_state=50)","91570f5e":"# reshape(examples, height, width, channels)\nx_train = x_train.values.reshape((-1, 28, 28, 1))\nx_test = x_test.values.reshape((-1, 28, 28, 1))","690a1dad":"test.drop('label', axis=1, inplace=True)\ntest = test.values.reshape((-1, 28, 28, 1))","90ba4011":"#Normalization\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train \/= 255\nx_test \/= 255\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')","ea80fac4":"#One Hot Encoding\ny_train = keras.utils.to_categorical(y_train, 10)\ny_test = keras.utils.to_categorical(y_test, 10)","00430201":"print(y_train.shape)\nprint(y_test.shape)","bd01fd19":"#Building a ConvNet\nmodel = keras.models.Sequential([\n                         keras.layers.Conv2D(filters = 64 , kernel_size = 3,strides = (1,1), padding = 'valid',activation = 'relu',input_shape = [28,28,1]), # 1st Layer\n                         keras.layers.MaxPooling2D(pool_size = (2,2)),\n\n                         keras.layers.Conv2D(filters = 128 , kernel_size = 3,strides = (2,2), padding = 'same',activation = 'relu',input_shape = [28,28,1]), # 2nd Layer\n                         keras.layers.MaxPooling2D(pool_size = (2,2)),\n\n                         keras.layers.Conv2D(filters = 64 , kernel_size = 3,strides = (2,2), padding = 'same',activation = 'relu',input_shape = [28,28,1]), # 3rd Layer\n                         keras.layers.MaxPooling2D(pool_size = (2,2)),\n\n                         keras.layers.Flatten(),\n                         keras.layers.Dense(units = 128,activation = 'relu'),\n                         keras.layers.Dropout(0.25),\n                         keras.layers.Dense(units = 256,activation = 'relu'),\n                         keras.layers.Dropout(0.5),\n                         keras.layers.Dense(units = 256,activation = 'relu'),\n                         keras.layers.Dropout(0.25),\n                         keras.layers.Dense(units = 128,activation = 'relu'),\n                         keras.layers.Dropout(0.10),\n                         keras.layers.Dense(units = 10,activation = 'softmax')  \n                        \n])","8f19cd16":"#Plot the Neural Netwok Flow_Chart\nkeras.utils.plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True)","eebe2be6":"#Model Summary\nmodel.summary()","09c1ea2f":"#Optimizer\noptimizer = Adam(lr=0.001, beta_1=0.9, beta_2=0.999 )","b1f0500c":"#Compiling the Model\nmodel.compile(optimizer = 'adam', loss = 'categorical_crossentropy',metrics = ['accuracy'])","04560b8c":"#Fitting Model\nhistory=model.fit(x_train,y_train,epochs = 10,batch_size = 64,verbose = 1)","840326b5":"score=model.evaluate(x_test,y_test)\n\nprint('Loss: {:.4f}'.format(score[0]))\nprint('Accuracy: {:.4f}'.format(score[1]))","fe0fdb5d":"y_pred = model.predict(x_test)\n\n# Plot a random sample of 10 test images, their predicted labels and ground truth\nfigure = plt.figure(figsize=(20, 8))\nfor i, index in enumerate(np.random.choice(x_test.shape[0], size=15, replace=False)):\n    ax = figure.add_subplot(3, 5, i + 1, xticks=[], yticks=[])\n    # Display each image\n    ax.imshow(np.squeeze(x_test[index]))\n    y_pred_class = np.argmax(y_pred[index])\n    y_true_class = np.argmax(y_test[index])\n    # Set the title for each image\n    ax.set_title(\"{} ({})\".format(class_labels[y_pred_class], \n                                  class_labels[y_true_class]),\n                                  color=(\"green\" if y_pred_class == y_true_class else \"red\"))","343898e7":"**One Hot Encoding:**\n\nThe labels are given as integers between 0-9. We need to one hot encode them , Eg 8 [0, 0, 0, 0, 0, 0, 0, 0, 1, 0] .\n\nWe have 10 digits [0-9] or classes, therefore we one-hot-encode the target variable with 10 classes","9ac2acb1":"**4. Data Preprocessing**","7b078b79":"** Evaluating the Model**","61c9c620":"****","371bfe56":"Please do share your comments or suggestions and if you like this kernel appreciate to UPVOTE.","9606da1e":"**1. Import libraries**","9199d223":"**5. Training a Convolutional Neural Network(CNN)**","59fb11c5":"**10. Visualizing the Output**","6dfe197d":"# Fashion_MNIST","51fcbdd5":"**Normalization:**\n\nThe Pixel Values are often stored as Integer Numbers in the range 0 to 255, the range that a single 8-bit byte can offer. They need to be scaled down to [0,1] in order for Optimization Algorithms to work much faster. Here, we acheive Zero Mean and Unit Variance.\n\nNormalization is carried out as follows:\n\nx = (x - min) \/ (max - min) ; Here min=0 and max=255","9b4e3861":"**2. Load dataset**","3622465a":"Thus, there is no Null value in both Train and Test data.","30021f16":"Labels :\n* 0 - T-shirt\/top\n* 1 - Trouser\n* 2 - Pullover\n* 3 - Dress\n* 4 - Coat\n* 5 - Sandals\n* 6 - Shirt\n* 7 - Sneaker\n* 8 - Bag\n* 9 - Ankle Boots","3596b0b5":"**3. Plotting Random Image**","4029e435":"Thank you !!! :)"}}