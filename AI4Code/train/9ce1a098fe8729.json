{"cell_type":{"22028853":"code","da77a8b1":"code","9ede00ff":"code","3b960b05":"code","427b5f7b":"code","ef652e2c":"code","f35c3cff":"code","a333ce61":"code","f02fec22":"code","e98f7dde":"code","c2e19ff7":"code","d103045f":"code","bcad8acf":"code","282ef806":"code","83158e87":"code","3be36973":"code","35a059a0":"code","a70d2d5f":"code","386e3b6b":"code","aafd26c7":"code","e3e1353a":"code","b559620f":"code","73678c63":"code","05d8ed3d":"code","58f50a17":"code","29922031":"code","ffcd1bc6":"code","7a143f8b":"code","0c3025d4":"code","8a5a8467":"code","d41bd704":"code","246acdb2":"code","7431d4a0":"code","1880a3e6":"code","ec551e90":"code","ef8d5dc9":"code","e7fc698b":"code","456b424e":"code","f58403a6":"code","f729efed":"code","79a92ed2":"code","2858630b":"code","616e3bc2":"code","b81ba5ed":"code","2959c6a6":"code","d8e4de2c":"code","df81f2a2":"code","5a32db43":"code","98ac007a":"code","79e53b87":"code","0fdea782":"code","fb500688":"code","9d9fdb9b":"code","ea47735a":"code","d4fb2977":"code","eddf550c":"code","9e116a5c":"code","2b3fe884":"code","afcab3b7":"code","62a06866":"code","f7fd6a0b":"code","63302677":"code","7f3b8a6e":"code","9b0a2e46":"code","240aa193":"code","ebd67744":"code","a9ff0355":"code","e66d1706":"code","b81e3424":"code","b59f2ce7":"code","6a6dbd74":"code","ec42eab7":"code","fcaa5a16":"code","461eddd7":"code","ba09b203":"code","be010830":"code","1dd8f1bb":"code","2aec40f2":"code","7abb4574":"code","2283f0d5":"code","afe430ee":"code","9ca9e8ae":"code","37fdfc11":"code","21a3d862":"code","a6f8ce1b":"code","0a577c09":"code","e66843b2":"code","2d798b7d":"code","df6ae9fe":"code","dce869c4":"code","09dbebc0":"code","bd6824b8":"code","7c8b36bc":"code","1620c569":"code","61de6060":"code","c7603a42":"code","2a5ae7d3":"code","d8683058":"code","7d0fd8da":"code","b2ad4399":"code","f6f3f798":"code","38f45134":"code","b03b2276":"code","cb92f23d":"markdown","ef50a383":"markdown","2e51c824":"markdown","252517bb":"markdown","a0bd7e85":"markdown","81ac5681":"markdown","479a06b5":"markdown","d775e1fa":"markdown","496ed6c5":"markdown","639a1393":"markdown","210615a1":"markdown","9fbf03fe":"markdown","50c9f202":"markdown","4d57502a":"markdown","3af8965a":"markdown","9e096571":"markdown","58e9b232":"markdown","f99d277c":"markdown","f509a1c9":"markdown","919281cd":"markdown","10ad44f1":"markdown","17eb896d":"markdown","e0162df0":"markdown","80b550a0":"markdown","ddfd4b3e":"markdown","ca93db95":"markdown","042b218c":"markdown","051f1eaf":"markdown","008cb934":"markdown","3c7cf300":"markdown","120cbc61":"markdown","690339de":"markdown","f1985ecf":"markdown","b842573d":"markdown","ca542e75":"markdown","01398c5c":"markdown","d69ac7af":"markdown","e623f4bc":"markdown","f31e6e5e":"markdown","ac8e1c91":"markdown","d8940094":"markdown"},"source":{"22028853":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","da77a8b1":"t1 = pd.read_csv('..\/input\/dataset-estacao-e-telhado-full1\/Dataset_Telhado_Verde_2019_1.csv', delimiter=';', decimal=',')\nt2 = pd.read_csv('..\/input\/dataset-estacao-e-telhado-full1\/Dataset_Telhado_Verde_2019_2.csv', delimiter=';', decimal=',')\nt3 = pd.read_csv('..\/input\/dataset-estacao-e-telhado-full1\/Dataset_Telhado_Verde_2019_3.csv', delimiter=';', decimal=',')\ntelhado = pd.concat([t1, t2, t3])","9ede00ff":"telhado.head(10)","3b960b05":"clima = pd.read_csv('..\/input\/dataset-estacao-e-telhado-full1\/Dataset_Estacao_01_01_2018_a_13_09_2019.csv', delimiter=',')","427b5f7b":"clima.head(10)","ef652e2c":"telhado = telhado.drop_duplicates(keep='first')","f35c3cff":"telhado = telhado.sort_values(['data','sensor'])","a333ce61":"#Converte coluna data em DateTime\ntelhado['data'] = pd.to_datetime(telhado['data'])\n#Cria novas colunas\ntelhado['Data'] = telhado['data'].dt.strftime('%Y-%m-%d')\ntelhado['Hora'] = telhado['data'].dt.strftime('%H:%M:%S')\ntelhado['hora'] = telhado['data'].dt.strftime('%H')\ntelhado['minuto'] = telhado['data'].dt.strftime('%M')\ntelhado['segundo'] = telhado['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\ntelhado['Data'] = pd.to_datetime(telhado['Data'])\n#Converte colunas hora, minuto e segundo em Integer\ntelhado['hora'] = pd.to_numeric(telhado['hora'], downcast='integer')\ntelhado['minuto'] = pd.to_numeric(telhado['minuto'], downcast='integer')\ntelhado['segundo'] = pd.to_numeric(telhado['segundo'], downcast='integer')","f02fec22":"telhado.head(10)","e98f7dde":"#Converte coluna data em DateTime\nclima['data'] = pd.to_datetime(clima['data'])\n#Cria novas colunas\nclima['Data'] = clima['data'].dt.strftime('%Y-%m-%d')\nclima['Hora'] = clima['data'].dt.strftime('%H:%M:%S')\nclima['hora'] = clima['data'].dt.strftime('%H')\nclima['minuto'] = clima['data'].dt.strftime('%M')\nclima['segundo'] = clima['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\nclima['Data'] = pd.to_datetime(clima['Data'])\n#Converte colunas hora, minuto e segundo em Integer\nclima['hora'] = pd.to_numeric(clima['hora'], downcast='integer')\nclima['minuto'] = pd.to_numeric(clima['minuto'], downcast='integer')\nclima['segundo'] = pd.to_numeric(clima['segundo'], downcast='integer')","c2e19ff7":"clima.head(10)","d103045f":"telhado = telhado[(telhado['temperatura'] > 10) & (telhado['temperatura'] < 45)]","bcad8acf":"telhado","282ef806":"# Verificando a porcetagem de valores faltantes por coluna para definir como contorna-los\natributos_missing = []\n\nfor f in telhado.columns:\n    missings = telhado[f].isnull().sum()\n    if missings > 0:\n        atributos_missing.append(f)\n        missings_perc = missings\/telhado.shape[0]\n        \n        print('Atributo {} tem {} amostras ({:.2%}) com valores faltantes'.format(f, missings, missings_perc))\n\nprint('No total, h\u00e1 {} atributos com valores faltantes'.format(len(atributos_missing)))","83158e87":"telhado_flat = telhado[(telhado['sensor'] == 1) | (telhado['sensor'] == 2)]","3be36973":"telhado_modular = telhado[(telhado['sensor'] == 3) | (telhado['sensor'] == 4)]","35a059a0":"telhado_macdrain = telhado[(telhado['sensor'] == 5) | (telhado['sensor'] == 6)]","a70d2d5f":"# Quantidade de temperaturas por data, hora, minuto, segundo, para verificar quantos sensores est\u00e3o ligados em cada data, hora, minuto, segundo\ndatas_telhado = pd.DataFrame(telhado.groupby(['data'])['temperatura'].count())","386e3b6b":"datas_6_sensores = pd.DataFrame(datas_telhado.loc[datas_telhado['temperatura'] == 6])","aafd26c7":"list_datas_6_sensores = datas_6_sensores.index","e3e1353a":"# Dataset com somente os dias, horas, minutos e segundos com 6 temperaturas capturadas\ntelhado = telhado[telhado['data'].isin(list_datas_6_sensores)]","b559620f":"pivot_table_telhado = telhado.pivot_table('temperatura', ['data'], 'sensor')\n\ntelhado_pivot = pd.DataFrame(pivot_table_telhado.to_records())\ntelhado_pivot.rename(columns={'1': 'temp_sensor1', \n                              '2': 'temp_sensor2',\n                              '3': 'temp_sensor3',\n                              '4': 'temp_sensor4',\n                              '5': 'temp_sensor5',\n                              '6': 'temp_sensor6'}, inplace=True)","73678c63":"#Converte coluna data em DateTime\ntelhado_pivot['data'] = pd.to_datetime(telhado_pivot['data'])\n#Cria novas colunas\ntelhado_pivot['Data'] = telhado_pivot['data'].dt.strftime('%Y-%m-%d')\ntelhado_pivot['Hora'] = telhado_pivot['data'].dt.strftime('%H:%M:%S')\ntelhado_pivot['hora'] = telhado_pivot['data'].dt.strftime('%H')\ntelhado_pivot['minuto'] = telhado_pivot['data'].dt.strftime('%M')\ntelhado_pivot['segundo'] = telhado_pivot['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\ntelhado_pivot['Data'] = pd.to_datetime(telhado_pivot['Data'])\n#Converte colunas hora, minuto e segundo em Integer\ntelhado_pivot['hora'] = pd.to_numeric(telhado_pivot['hora'], downcast='integer')\ntelhado_pivot['minuto'] = pd.to_numeric(telhado_pivot['minuto'], downcast='integer')\ntelhado_pivot['segundo'] = pd.to_numeric(telhado_pivot['segundo'], downcast='integer')","05d8ed3d":"telhado_pivot['Delta_1_2'] = telhado_pivot['temp_sensor1'] - telhado_pivot['temp_sensor2']\ntelhado_pivot['Delta_3_4'] = telhado_pivot['temp_sensor3'] - telhado_pivot['temp_sensor4']\ntelhado_pivot['Delta_5_6'] = telhado_pivot['temp_sensor5'] - telhado_pivot['temp_sensor6']","58f50a17":"telhado_pivot","29922031":"pivot_table_telhado_flat = telhado_flat.pivot_table('temperatura', ['data'], 'sensor')\n\ntelhado_pivot_flat = pd.DataFrame(pivot_table_telhado_flat.to_records())\ntelhado_pivot_flat.rename(columns={'1': 'temp_sensor1', \n                                   '2': 'temp_sensor2'}, inplace=True)","ffcd1bc6":"# Verificando a porcetagem de valores faltantes por coluna para definir como contorna-los\natributos_missing = []\n\nfor f in telhado_pivot_flat.columns:\n    missings = telhado_pivot_flat[f].isnull().sum()\n    if missings > 0:\n        atributos_missing.append(f)\n        missings_perc = missings\/telhado_pivot_flat.shape[0]\n        \n        print('Atributo {} tem {} amostras ({:.2%}) com valores faltantes'.format(f, missings, missings_perc))\n\nprint('No total, h\u00e1 {} atributos com valores faltantes'.format(len(atributos_missing)))","7a143f8b":"telhado_pivot_flat.dropna(inplace=True)","0c3025d4":"#Converte coluna data em DateTime\ntelhado_pivot_flat['data'] = pd.to_datetime(telhado_pivot_flat['data'])\n#Cria novas colunas\ntelhado_pivot_flat['Data'] = telhado_pivot_flat['data'].dt.strftime('%Y-%m-%d')\ntelhado_pivot_flat['Hora'] = telhado_pivot_flat['data'].dt.strftime('%H:%M:%S')\ntelhado_pivot_flat['hora'] = telhado_pivot_flat['data'].dt.strftime('%H')\ntelhado_pivot_flat['minuto'] = telhado_pivot_flat['data'].dt.strftime('%M')\ntelhado_pivot_flat['segundo'] = telhado_pivot_flat['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\ntelhado_pivot_flat['Data'] = pd.to_datetime(telhado_pivot_flat['Data'])\n#Converte colunas hora, minuto e segundo em Integer\ntelhado_pivot_flat['hora'] = pd.to_numeric(telhado_pivot_flat['hora'], downcast='integer')\ntelhado_pivot_flat['minuto'] = pd.to_numeric(telhado_pivot_flat['minuto'], downcast='integer')\ntelhado_pivot_flat['segundo'] = pd.to_numeric(telhado_pivot_flat['segundo'], downcast='integer')","8a5a8467":"telhado_pivot_flat['Delta_1_2'] = telhado_pivot_flat['temp_sensor1'] - telhado_pivot_flat['temp_sensor2']","d41bd704":"telhado_pivot_flat","246acdb2":"pivot_table_telhado_modular = telhado_modular.pivot_table('temperatura', ['data'], 'sensor')\n\ntelhado_pivot_modular = pd.DataFrame(pivot_table_telhado_modular.to_records())\ntelhado_pivot_modular.rename(columns={'3': 'temp_sensor3', \n                                      '4': 'temp_sensor4'}, inplace=True)","7431d4a0":"# Verificando a porcetagem de valores faltantes por coluna para definir como contorna-los\natributos_missing = []\n\nfor f in telhado_pivot_modular.columns:\n    missings = telhado_pivot_modular[f].isnull().sum()\n    if missings > 0:\n        atributos_missing.append(f)\n        missings_perc = missings\/telhado_pivot_modular.shape[0]\n        \n        print('Atributo {} tem {} amostras ({:.2%}) com valores faltantes'.format(f, missings, missings_perc))\n\nprint('No total, h\u00e1 {} atributos com valores faltantes'.format(len(atributos_missing)))","1880a3e6":"telhado_pivot_modular.dropna(inplace=True)","ec551e90":"#Converte coluna data em DateTime\ntelhado_pivot_modular['data'] = pd.to_datetime(telhado_pivot_modular['data'])\n#Cria novas colunas\ntelhado_pivot_modular['Data'] = telhado_pivot_modular['data'].dt.strftime('%Y-%m-%d')\ntelhado_pivot_modular['Hora'] = telhado_pivot_modular['data'].dt.strftime('%H:%M:%S')\ntelhado_pivot_modular['hora'] = telhado_pivot_modular['data'].dt.strftime('%H')\ntelhado_pivot_modular['minuto'] = telhado_pivot_modular['data'].dt.strftime('%M')\ntelhado_pivot_modular['segundo'] = telhado_pivot_modular['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\ntelhado_pivot_modular['Data'] = pd.to_datetime(telhado_pivot_modular['Data'])\n#Converte colunas hora, minuto e segundo em Integer\ntelhado_pivot_modular['hora'] = pd.to_numeric(telhado_pivot_modular['hora'], downcast='integer')\ntelhado_pivot_modular['minuto'] = pd.to_numeric(telhado_pivot_modular['minuto'], downcast='integer')\ntelhado_pivot_modular['segundo'] = pd.to_numeric(telhado_pivot_modular['segundo'], downcast='integer')","ef8d5dc9":"telhado_pivot_modular['Delta_3_4'] = telhado_pivot_modular['temp_sensor3'] - telhado_pivot_modular['temp_sensor4']","e7fc698b":"telhado_pivot_modular","456b424e":"pivot_table_telhado_macdrain = telhado_macdrain.pivot_table('temperatura', ['data'], 'sensor')\n\ntelhado_pivot_macdrain = pd.DataFrame(pivot_table_telhado_macdrain.to_records())\ntelhado_pivot_macdrain.rename(columns={'5': 'temp_sensor5', \n                                       '6': 'temp_sensor6'}, inplace=True)","f58403a6":"# Verificando a porcetagem de valores faltantes por coluna para definir como contorna-los\natributos_missing = []\n\nfor f in telhado_pivot_macdrain.columns:\n    missings = telhado_pivot_macdrain[f].isnull().sum()\n    if missings > 0:\n        atributos_missing.append(f)\n        missings_perc = missings\/telhado_pivot_macdrain.shape[0]\n        \n        print('Atributo {} tem {} amostras ({:.2%}) com valores faltantes'.format(f, missings, missings_perc))\n\nprint('No total, h\u00e1 {} atributos com valores faltantes'.format(len(atributos_missing)))","f729efed":"telhado_pivot_macdrain.dropna(inplace=True)","79a92ed2":"#Converte coluna data em DateTime\ntelhado_pivot_macdrain['data'] = pd.to_datetime(telhado_pivot_macdrain['data'])\n#Cria novas colunas\ntelhado_pivot_macdrain['Data'] = telhado_pivot_macdrain['data'].dt.strftime('%Y-%m-%d')\ntelhado_pivot_macdrain['Hora'] = telhado_pivot_macdrain['data'].dt.strftime('%H:%M:%S')\ntelhado_pivot_macdrain['hora'] = telhado_pivot_macdrain['data'].dt.strftime('%H')\ntelhado_pivot_macdrain['minuto'] = telhado_pivot_macdrain['data'].dt.strftime('%M')\ntelhado_pivot_macdrain['segundo'] = telhado_pivot_macdrain['data'].dt.strftime('%S')\n#Converte coluna Data em DateTime\ntelhado_pivot_macdrain['Data'] = pd.to_datetime(telhado_pivot_macdrain['Data'])\n#Converte colunas hora, minuto e segundo em Integer\ntelhado_pivot_macdrain['hora'] = pd.to_numeric(telhado_pivot_macdrain['hora'], downcast='integer')\ntelhado_pivot_macdrain['minuto'] = pd.to_numeric(telhado_pivot_macdrain['minuto'], downcast='integer')\ntelhado_pivot_macdrain['segundo'] = pd.to_numeric(telhado_pivot_macdrain['segundo'], downcast='integer')","2858630b":"telhado_pivot_macdrain['Delta_5_6'] = telhado_pivot_macdrain['temp_sensor5'] - telhado_pivot_macdrain['temp_sensor6']","616e3bc2":"telhado_pivot_macdrain","b81ba5ed":"def categoriza_SF(s):\n    if s == 1 or s == 2:\n        return 1\n    else:\n        return 0\n    \ndef categoriza_SM(s):\n    if s == 3 or s == 4:\n        return 1\n    else:\n        return 0\n    \ndef categoriza_SMD(s):\n    if s == 5 or s == 6:\n        return 1\n    else:\n        return 0","2959c6a6":"from datetime import datetime\n\ndef categoriza_Dia(hora):\n    if hora > 6 and hora < 18:\n        return 1\n    else:\n        return 0\n    \ndef categoriza_Noite(hora):\n    if (hora >= 0 and hora <= 6) or (hora >= 18 and hora <= 23):\n        return 1\n    else:\n        return 0\n    \ndef categoriza_Verao(data):\n    ano = data.year\n    dt_from_1 = datetime.strptime('2018-12-21', '%Y-%m-%d')\n    dt_to_1 = datetime.strptime('2018-03-19', '%Y-%m-%d')\n    dt_from_2 = datetime.strptime('2019-12-21', '%Y-%m-%d')\n    dt_to_2 = datetime.strptime('2019-03-19', '%Y-%m-%d')\n    if ano == 2018:\n        if data >= dt_from_1:\n            return 1\n        else:\n            if data <= dt_to_1:\n                   return 1\n            else:\n                return 0\n    else:\n        if ano == 2019:\n            if data >= dt_from_2:\n                return 1\n            else:\n                if data <= dt_to_2:\n                       return 1\n                else:\n                    return 0\n        else:\n            return 0\n        \ndef categoriza_Outono(data):\n    ano = data.year\n    dt_from_1 = datetime.strptime('2018-03-20', '%Y-%m-%d')\n    dt_to_1 = datetime.strptime('2018-06-20', '%Y-%m-%d')\n    dt_from_2 = datetime.strptime('2019-03-20', '%Y-%m-%d')\n    dt_to_2 = datetime.strptime('2019-06-20', '%Y-%m-%d')\n    if ano == 2018:\n        if data >= dt_from_1 and data <= dt_to_1:\n            return 1\n        else:\n            return 0\n    else:\n        if ano == 2019:\n            if data >= dt_from_2 and data <= dt_to_2:\n                return 1\n            else:\n                return 0\n        else:\n            return 0\n        \ndef categoriza_Inverno(data):\n    ano = data.year\n    dt_from_1 = datetime.strptime('2018-06-21', '%Y-%m-%d')\n    dt_to_1 = datetime.strptime('2018-09-21', '%Y-%m-%d')\n    dt_from_2 = datetime.strptime('2019-06-21', '%Y-%m-%d')\n    dt_to_2 = datetime.strptime('2019-09-21', '%Y-%m-%d')\n    if ano == 2018:\n        if data >= dt_from_1 and data <= dt_to_1:\n            return 1\n        else:\n            return 0\n    else:\n        if ano == 2019:\n            if data >= dt_from_2 and data <= dt_to_2:\n                return 1\n            else:\n                return 0\n        else:\n            return 0\n        \ndef categoriza_Primavera(data):\n    ano = data.year\n    dt_from_1 = datetime.strptime('2018-09-22', '%Y-%m-%d')\n    dt_to_1 = datetime.strptime('2018-12-20', '%Y-%m-%d')\n    dt_from_2 = datetime.strptime('2019-09-22', '%Y-%m-%d')\n    dt_to_2 = datetime.strptime('2019-12-20', '%Y-%m-%d')\n    if ano == 2018:\n        if data >= dt_from_1 and data <= dt_to_1:\n            return 1\n        else:\n            return 0\n    else:\n        if ano == 2019:\n            if data >= dt_from_2 and data <= dt_to_2:\n                return 1\n            else:\n                return 0\n        else:\n            return 0","d8e4de2c":"telhado['Sistema_FLAT'] = telhado['sensor'].apply(categoriza_SF)\ntelhado['Sistema_Modular'] = telhado['sensor'].apply(categoriza_SM)\ntelhado['Sistema_MacDrain'] = telhado['sensor'].apply(categoriza_SMD)","df81f2a2":"telhado['Verao'] = telhado['Data'].apply(categoriza_Verao)\ntelhado['Outono'] = telhado['Data'].apply(categoriza_Outono)\ntelhado['Inverno'] = telhado['Data'].apply(categoriza_Inverno)\ntelhado['Primavera'] = telhado['Data'].apply(categoriza_Primavera)","5a32db43":"telhado","98ac007a":"telhado['Dia'] = telhado['hora'].apply(categoriza_Dia)\ntelhado['Noite'] = telhado['hora'].apply(categoriza_Noite)","79e53b87":"clima['Verao'] = clima['Data'].apply(categoriza_Verao)\nclima['Outono'] = clima['Data'].apply(categoriza_Outono)\nclima['Inverno'] = clima['Data'].apply(categoriza_Inverno)\nclima['Primavera'] = clima['Data'].apply(categoriza_Primavera)","0fdea782":"clima['Dia'] = clima['hora'].apply(categoriza_Dia)\nclima['Noite'] = clima['hora'].apply(categoriza_Noite)","fb500688":"telhado_pivot['Verao'] = telhado_pivot['Data'].apply(categoriza_Verao)\ntelhado_pivot['Outono'] = telhado_pivot['Data'].apply(categoriza_Outono)\ntelhado_pivot['Inverno'] = telhado_pivot['Data'].apply(categoriza_Inverno)\ntelhado_pivot['Primavera'] = telhado_pivot['Data'].apply(categoriza_Primavera)","9d9fdb9b":"telhado_pivot['Dia'] = telhado_pivot['hora'].apply(categoriza_Dia)\ntelhado_pivot['Noite'] = telhado_pivot['hora'].apply(categoriza_Noite)","ea47735a":"telhado_pivot_flat['Verao'] = telhado_pivot_flat['Data'].apply(categoriza_Verao)\ntelhado_pivot_flat['Outono'] = telhado_pivot_flat['Data'].apply(categoriza_Outono)\ntelhado_pivot_flat['Inverno'] = telhado_pivot_flat['Data'].apply(categoriza_Inverno)\ntelhado_pivot_flat['Primavera'] = telhado_pivot_flat['Data'].apply(categoriza_Primavera)","d4fb2977":"telhado_pivot_flat['Dia'] = telhado_pivot_flat['hora'].apply(categoriza_Dia)\ntelhado_pivot_flat['Noite'] = telhado_pivot_flat['hora'].apply(categoriza_Noite)","eddf550c":"telhado_pivot_modular['Verao'] = telhado_pivot_modular['Data'].apply(categoriza_Verao)\ntelhado_pivot_modular['Outono'] = telhado_pivot_modular['Data'].apply(categoriza_Outono)\ntelhado_pivot_modular['Inverno'] = telhado_pivot_modular['Data'].apply(categoriza_Inverno)\ntelhado_pivot_modular['Primavera'] = telhado_pivot_modular['Data'].apply(categoriza_Primavera)","9e116a5c":"telhado_pivot_modular['Dia'] = telhado_pivot_modular['hora'].apply(categoriza_Dia)\ntelhado_pivot_modular['Noite'] = telhado_pivot_modular['hora'].apply(categoriza_Noite)","2b3fe884":"telhado_pivot_macdrain['Verao'] = telhado_pivot_macdrain['Data'].apply(categoriza_Verao)\ntelhado_pivot_macdrain['Outono'] = telhado_pivot_macdrain['Data'].apply(categoriza_Outono)\ntelhado_pivot_macdrain['Inverno'] = telhado_pivot_macdrain['Data'].apply(categoriza_Inverno)\ntelhado_pivot_macdrain['Primavera'] = telhado_pivot_macdrain['Data'].apply(categoriza_Primavera)","afcab3b7":"telhado_pivot_macdrain['Dia'] = telhado_pivot_macdrain['hora'].apply(categoriza_Dia)\ntelhado_pivot_macdrain['Noite'] = telhado_pivot_macdrain['hora'].apply(categoriza_Noite)","62a06866":"telhado_clima = clima","f7fd6a0b":"lista_excecao = ['Data', 'hora', 'minuto', 'segundo', 'data', 'Hora']\n\ndef inicializar_clima_com_excecao(clima, telhado):    \n    for t in telhado:    \n        if lista_excecao.count(t) == 0:    \n            clima[str(t)] = ''\n    clima.head(1)","63302677":"def addItems(clima, index, rowAdd):    \n    for i, t in rowAdd.items():\n        if i not in lista_excecao:\n            clima[i][index] = t\n    return row","7f3b8a6e":"def addItemsDeitado(climaDeitado, indexRow, row):    \n    for i in range(len(lista_excecao_deitada)):\n        index = climaDeitado.size\n        climaDeitado.loc[index] = 0.0\n        climaDeitado['sensor'][index] = lista_excecao_deitada[i]\n        climaDeitado['temperatura_sensor'][index] = float(clima[lista_excecao_deitada[i]][indexRow])\n        if i == 0 or i == 1:\n            climaDeitado['tipo_sensor'][index] = 0\n        elif i == 2 or i == 3:\n            climaDeitado['tipo_sensor'][index] = 1\n        elif i == 4 or i == 5:\n            climaDeitado['tipo_sensor'][index] = 2\n        for ind, t in row.items(): \n            if ind not in lista_excecao_deitada:\n                climaDeitado[ind][index] = t","9b0a2e46":"inicializar_clima_com_excecao(telhado_clima, telhado_pivot)\ntelhado_clima.head(1)","240aa193":"aux_telhado_pivot = pd.DataFrame()\nfor index, row in telhado_clima.iterrows():\n    aux_telhado_pivot = telhado_pivot.loc[telhado_pivot['Data'] == row['Data']]\n    for indexT, rowR in aux_telhado_pivot.iterrows():\n    #for indexT, rowR in telhado_dia_verao.iterrows():\n        #if (row['Data'] == rowR['Data']) and (row['hora'] == rowR['hora']) and (row['minuto'] == rowR['minuto'] or row['minuto'] < rowR['minuto']):\n        if (row['hora'] == rowR['hora']) and (row['minuto'] == rowR['minuto'] or row['minuto'] < rowR['minuto']):\n            addItems(telhado_clima, index, rowR)\n            break\n        #else:\n            #addItems(clima_dia_verao, index, rowR)\n            #break\ntelhado_clima.head(5)\n#aux_telhado_dia_verao.head(5)","ebd67744":"#telhado_clima_perdidos = clima_dia_verao.loc[clima_dia_verao['Delta_1_2'] = '']\n#telhado_clima = clima_dia_verao.loc[clima_dia_verao['Delta_1_2'] != '']","a9ff0355":"# Um dataset por caracteristica \ndf_telhado_dia = telhado[(telhado['Dia'] == 1)]\ndf_telhado_noite = telhado[(telhado['Noite'] == 1)]\ndf_telhado_FLAT = telhado[(telhado['Sistema_FLAT'] == 1)]\ndf_telhado_Modular = telhado[(telhado['Sistema_Modular'] == 1)]\ndf_telhado_MacDrain = telhado[(telhado['Sistema_MacDrain'] == 1)]\ndf_telhado_Primavera = telhado[(telhado['Primavera'] == 1)]\ndf_telhado_Verao = telhado[(telhado['Verao'] == 1)]\ndf_telhado_Outono = telhado[(telhado['Outono'] == 1)]\ndf_telhado_Inverno = telhado[(telhado['Inverno'] == 1)]","e66d1706":"# Datasets Dia\ndf_telhado_dia_FLAT = df_telhado_dia[(df_telhado_dia['Sistema_FLAT'] == 1)]\ndf_telhado_dia_Modular = df_telhado_dia[(df_telhado_dia['Sistema_Modular'] == 1)]\ndf_telhado_dia_MacDrain = df_telhado_dia[(df_telhado_dia['Sistema_MacDrain'] == 1)]\ndf_telhado_dia_Primavera = df_telhado_dia[(df_telhado_dia['Primavera'] == 1)]\ndf_telhado_dia_Verao = df_telhado_dia[(df_telhado_dia['Verao'] == 1)]\ndf_telhado_dia_Outono = df_telhado_dia[(df_telhado_dia['Outono'] == 1)]\ndf_telhado_dia_Inverno = df_telhado_dia[(df_telhado_dia['Inverno'] == 1)]","b81e3424":"# Datasets Dia\\FLAT\ndf_telhado_dia_FLAT_Primavera = df_telhado_dia_FLAT[(df_telhado_dia_FLAT['Primavera'] == 1)]\ndf_telhado_dia_FLAT_Verao = df_telhado_dia_FLAT[(df_telhado_dia_FLAT['Verao'] == 1)]\ndf_telhado_dia_FLAT_Outono = df_telhado_dia_FLAT[(df_telhado_dia_FLAT['Outono'] == 1)]\ndf_telhado_dia_FLAT_Inverno = df_telhado_dia_FLAT[(df_telhado_dia_FLAT['Inverno'] == 1)]","b59f2ce7":"# Datasets Dia\\Modular\ndf_telhado_dia_Modular_Primavera = df_telhado_dia_Modular[(df_telhado_dia_Modular['Primavera'] == 1)]\ndf_telhado_dia_Modular_Verao = df_telhado_dia_Modular[(df_telhado_dia_Modular['Verao'] == 1)]\ndf_telhado_dia_Modular_Outono = df_telhado_dia_Modular[(df_telhado_dia_Modular['Outono'] == 1)]\ndf_telhado_dia_Modular_Inverno = df_telhado_dia_Modular[(df_telhado_dia_Modular['Inverno'] == 1)]","6a6dbd74":"# Datasets Dia\\MacDrain\ndf_telhado_dia_MacDrain_Primavera = df_telhado_dia_MacDrain[(df_telhado_dia_MacDrain['Primavera'] == 1)]\ndf_telhado_dia_MacDrain_Verao = df_telhado_dia_MacDrain[(df_telhado_dia_MacDrain['Verao'] == 1)]\ndf_telhado_dia_MacDrain_Outono = df_telhado_dia_MacDrain[(df_telhado_dia_MacDrain['Outono'] == 1)]\ndf_telhado_dia_MacDrain_Inverno = df_telhado_dia_MacDrain[(df_telhado_dia_MacDrain['Inverno'] == 1)]","ec42eab7":"# Datasets Noite\ndf_telhado_noite_FLAT = df_telhado_noite[(df_telhado_noite['Sistema_FLAT'] == 1)]\ndf_telhado_noite_Modular = df_telhado_noite[(df_telhado_noite['Sistema_Modular'] == 1)]\ndf_telhado_noite_MacDrain = df_telhado_noite[(df_telhado_noite['Sistema_MacDrain'] == 1)]\ndf_telhado_noite_Primavera = df_telhado_noite[(df_telhado_noite['Primavera'] == 1)]\ndf_telhado_noite_Verao = df_telhado_noite[(df_telhado_noite['Verao'] == 1)]\ndf_telhado_noite_Outono = df_telhado_noite[(df_telhado_noite['Outono'] == 1)]\ndf_telhado_noite_Inverno = df_telhado_noite[(df_telhado_noite['Inverno'] == 1)]","fcaa5a16":"# Datasets Noite\\FLAT\ndf_telhado_noite_FLAT_Primavera = df_telhado_noite_FLAT[(df_telhado_noite_FLAT['Primavera'] == 1)]\ndf_telhado_noite_FLAT_Verao = df_telhado_noite_FLAT[(df_telhado_noite_FLAT['Verao'] == 1)]\ndf_telhado_noite_FLAT_Outono = df_telhado_noite_FLAT[(df_telhado_noite_FLAT['Outono'] == 1)]\ndf_telhado_noite_FLAT_Inverno = df_telhado_noite_FLAT[(df_telhado_noite_FLAT['Inverno'] == 1)]","461eddd7":"# Datasets Noite\\Modular\ndf_telhado_noite_Modular_Primavera = df_telhado_noite_Modular[(df_telhado_noite_Modular['Primavera'] == 1)]\ndf_telhado_noite_Modular_Verao = df_telhado_noite_Modular[(df_telhado_noite_Modular['Verao'] == 1)]\ndf_telhado_noite_Modular_Outono = df_telhado_noite_Modular[(df_telhado_noite_Modular['Outono'] == 1)]\ndf_telhado_noite_Modular_Inverno = df_telhado_noite_Modular[(df_telhado_noite_Modular['Inverno'] == 1)]","ba09b203":"# Datasets Noite\\MacDrain\ndf_telhado_noite_MacDrain_Primavera = df_telhado_noite_MacDrain[(df_telhado_noite_MacDrain['Primavera'] == 1)]\ndf_telhado_noite_MacDrain_Verao = df_telhado_noite_MacDrain[(df_telhado_noite_MacDrain['Verao'] == 1)]\ndf_telhado_noite_MacDrain_Outono = df_telhado_noite_MacDrain[(df_telhado_noite_MacDrain['Outono'] == 1)]\ndf_telhado_noite_MacDrain_Inverno = df_telhado_noite_MacDrain[(df_telhado_noite_MacDrain['Inverno'] == 1)]","be010830":"# Um dataset por caracteristica \ndf_clima_dia = clima[(clima['Dia'] == 1)]\ndf_clima_noite = clima[(clima['Noite'] == 1)]\ndf_clima_Primavera = clima[(clima['Primavera'] == 1)]\ndf_clima_Verao = clima[(clima['Verao'] == 1)]\ndf_clima_Outono = clima[(clima['Outono'] == 1)]\ndf_clima_Inverno = clima[(clima['Inverno'] == 1)]","1dd8f1bb":"# Datasets Dia\ndf_clima_dia_Primavera = df_clima_dia[(df_clima_dia['Primavera'] == 1)]\ndf_clima_dia_Verao = df_clima_dia[(df_clima_dia['Verao'] == 1)]\ndf_clima_dia_Outono = df_clima_dia[(df_clima_dia['Outono'] == 1)]\ndf_clima_dia_Inverno = df_clima_dia[(df_clima_dia['Inverno'] == 1)]","2aec40f2":"# Datasets Noite\ndf_clima_noite_Primavera = df_clima_noite[(df_clima_noite['Primavera'] == 1)]\ndf_clima_noite_Verao = df_clima_noite[(df_clima_noite['Verao'] == 1)]\ndf_clima_noite_Outono = df_clima_noite[(df_clima_noite['Outono'] == 1)]\ndf_clima_noite_Inverno = df_clima_noite[(df_clima_noite['Inverno'] == 1)]","7abb4574":"# Um dataset por caracteristica \ndf_telhado_pivot_dia = telhado_pivot[(telhado_pivot['Dia'] == 1)]\ndf_telhado_pivot_noite = telhado_pivot[(telhado_pivot['Noite'] == 1)]\ndf_telhado_pivot_Primavera = telhado_pivot[(telhado_pivot['Primavera'] == 1)]\ndf_telhado_pivot_Verao = telhado_pivot[(telhado_pivot['Verao'] == 1)]\ndf_telhado_pivot_Outono = telhado_pivot[(telhado_pivot['Outono'] == 1)]\ndf_telhado_pivot_Inverno = telhado_pivot[(telhado_pivot['Inverno'] == 1)]","2283f0d5":"# Datasets Dia\ndf_telhado_pivot_dia_Primavera = df_telhado_pivot_dia[(df_telhado_pivot_dia['Primavera'] == 1)]\ndf_telhado_pivot_dia_Verao = df_telhado_pivot_dia[(df_telhado_pivot_dia['Verao'] == 1)]\ndf_telhado_pivot_dia_Outono = df_telhado_pivot_dia[(df_telhado_pivot_dia['Outono'] == 1)]\ndf_telhado_pivot_dia_Inverno = df_telhado_pivot_dia[(df_telhado_pivot_dia['Inverno'] == 1)]","afe430ee":"# Datasets Noite\ndf_telhado_pivot_noite_Primavera = df_telhado_pivot_noite[(df_telhado_pivot_noite['Primavera'] == 1)]\ndf_telhado_pivot_noite_Verao = df_telhado_pivot_noite[(df_telhado_pivot_noite['Verao'] == 1)]\ndf_telhado_pivot_noite_Outono = df_telhado_pivot_noite[(df_telhado_pivot_noite['Outono'] == 1)]\ndf_telhado_pivot_noite_Inverno = df_telhado_pivot_noite[(df_telhado_pivot_noite['Inverno'] == 1)]","9ca9e8ae":"telhado.to_csv('telhado_verde.csv')","37fdfc11":"clima.to_csv('clima.csv')","21a3d862":"telhado_pivot.to_csv('telhado_verde_pivot.csv')","a6f8ce1b":"telhado_pivot_flat.to_csv('telhado_verde_pivot_flat.csv')","0a577c09":"telhado_pivot_modular.to_csv('telhado_verde_pivot_modular.csv')","e66843b2":"telhado_pivot_macdrain.to_csv('telhado_verde_pivot_macdrain.csv')","2d798b7d":"telhado_clima.to_csv('telhado_clima.csv')","df6ae9fe":"# Um dataset por caracteristica \ndf_telhado_dia.to_csv('df_telhado_dia.csv')\ndf_telhado_noite.to_csv('df_telhado_noite.csv')\ndf_telhado_FLAT.to_csv('df_telhado_FLAT.csv')\ndf_telhado_Modular.to_csv('df_telhado_Modular.csv')\ndf_telhado_MacDrain.to_csv('df_telhado_MacDrain.csv')\ndf_telhado_Primavera.to_csv('df_telhado_Primavera.csv')\ndf_telhado_Verao.to_csv('df_telhado_Verao.csv')\ndf_telhado_Outono.to_csv('df_telhado_Outono.csv')\ndf_telhado_Inverno.to_csv('df_telhado_Inverno.csv')","dce869c4":"# Datasets Dia\ndf_telhado_dia_FLAT.to_csv('df_telhado_dia_FLAT.csv')\ndf_telhado_dia_Modular.to_csv('df_telhado_dia_Modular.csv')\ndf_telhado_dia_MacDrain.to_csv('df_telhado_dia_MacDrain.csv')\ndf_telhado_dia_Primavera.to_csv('df_telhado_dia_Primavera.csv')\ndf_telhado_dia_Verao.to_csv('df_telhado_dia_Verao.csv')\ndf_telhado_dia_Outono.to_csv('df_telhado_dia_Outono.csv')\ndf_telhado_dia_Inverno.to_csv('df_telhado_dia_Inverno.csv')","09dbebc0":"# Datasets Dia\\FLAT\ndf_telhado_dia_FLAT_Primavera.to_csv('df_telhado_dia_FLAT_Primavera.csv')\ndf_telhado_dia_FLAT_Verao.to_csv('df_telhado_dia_FLAT_Verao.csv')\ndf_telhado_dia_FLAT_Outono.to_csv('df_telhado_dia_FLAT_Outono.csv')\ndf_telhado_dia_FLAT_Inverno.to_csv('df_telhado_dia_FLAT_Inverno.csv')","bd6824b8":"# Datasets Dia\\Modular\ndf_telhado_dia_Modular_Primavera.to_csv('df_telhado_dia_Modular_Primavera.csv')\ndf_telhado_dia_Modular_Verao.to_csv('df_telhado_dia_Modular_Verao.csv')\ndf_telhado_dia_Modular_Outono.to_csv('df_telhado_dia_Modular_Outono.csv')\ndf_telhado_dia_Modular_Inverno.to_csv('df_telhado_dia_Modular_Inverno.csv')","7c8b36bc":"# Datasets Dia\\MacDrain\ndf_telhado_dia_MacDrain_Primavera.to_csv('df_telhado_dia_MacDrain_Primavera.csv')\ndf_telhado_dia_MacDrain_Verao.to_csv('df_telhado_dia_MacDrain_Verao.csv')\ndf_telhado_dia_MacDrain_Outono.to_csv('df_telhado_dia_MacDrain_Outono.csv')\ndf_telhado_dia_MacDrain_Inverno.to_csv('df_telhado_dia_MacDrain_Inverno.csv')","1620c569":"# Datasets Noite\ndf_telhado_noite_FLAT.to_csv('df_telhado_noite_FLAT.csv')\ndf_telhado_noite_Modular.to_csv('df_telhado_noite_Modular.csv')\ndf_telhado_noite_MacDrain.to_csv('df_telhado_noite_MacDrain.csv')\ndf_telhado_noite_Primavera.to_csv('df_telhado_noite_Primavera.csv')\ndf_telhado_noite_Verao.to_csv('df_telhado_noite_Verao.csv')\ndf_telhado_noite_Outono.to_csv('df_telhado_noite_Outono.csv')\ndf_telhado_noite_Inverno.to_csv('df_telhado_noite_Inverno.csv')","61de6060":"# Datasets Noite\\FLAT\ndf_telhado_noite_FLAT_Primavera.to_csv('df_telhado_noite_FLAT_Primavera.csv')\ndf_telhado_noite_FLAT_Verao.to_csv('df_telhado_noite_FLAT_Verao.csv')\ndf_telhado_noite_FLAT_Outono.to_csv('df_telhado_noite_FLAT_Outono.csv')\ndf_telhado_noite_FLAT_Inverno.to_csv('df_telhado_noite_FLAT_Inverno.csv')","c7603a42":"# Datasets Noite\\Modular\ndf_telhado_noite_Modular_Primavera.to_csv('df_telhado_noite_Modular_Primavera.csv')\ndf_telhado_noite_Modular_Verao.to_csv('df_telhado_noite_Modular_Verao.csv')\ndf_telhado_noite_Modular_Outono.to_csv('df_telhado_noite_Modular_Outono.csv')\ndf_telhado_noite_Modular_Inverno.to_csv('df_telhado_noite_Modular_Inverno.csv')","2a5ae7d3":"# Datasets Noite\\MacDrain\ndf_telhado_noite_MacDrain_Primavera.to_csv('df_telhado_noite_MacDrain_Primavera.csv')\ndf_telhado_noite_MacDrain_Verao.to_csv('df_telhado_noite_MacDrain_Verao.csv')\ndf_telhado_noite_MacDrain_Outono.to_csv('df_telhado_noite_MacDrain_Outono.csv')\ndf_telhado_noite_MacDrain_Inverno.to_csv('df_telhado_noite_MacDrain_Inverno.csv')","d8683058":"# Um dataset por caracteristica \ndf_clima_dia.to_csv('df_clima_dia.csv')\ndf_clima_noite.to_csv('df_clima_noite.csv')\ndf_clima_Primavera.to_csv('df_clima_Primavera.csv')\ndf_clima_Verao.to_csv('df_clima_Verao.csv')\ndf_clima_Outono.to_csv('df_clima_Outono.csv')\ndf_clima_Inverno.to_csv('df_clima_Inverno.csv')","7d0fd8da":"# Datasets Dia\ndf_clima_dia_Primavera.to_csv('df_clima_dia_Primavera.csv')\ndf_clima_dia_Verao.to_csv('df_clima_dia_Verao.csv')\ndf_clima_dia_Outono.to_csv('df_clima_dia_Outono.csv')\ndf_clima_dia_Inverno.to_csv('df_clima_dia_Inverno.csv')","b2ad4399":"# Datasets Noite\ndf_clima_noite_Primavera.to_csv('df_clima_noite_Primavera.csv')\ndf_clima_noite_Verao.to_csv('df_clima_noite_Verao.csv')\ndf_clima_noite_Outono.to_csv('df_clima_noite_Outono.csv')\ndf_clima_noite_Inverno.to_csv('df_clima_noite_Inverno.csv')","f6f3f798":"# Um dataset por caracteristica \ndf_telhado_pivot_dia.to_csv('df_telhado_pivot_dia.csv')\ndf_telhado_pivot_noite.to_csv('df_telhado_pivot_noite.csv')\ndf_telhado_pivot_Primavera.to_csv('df_telhado_pivot_Primavera.csv')\ndf_telhado_pivot_Verao.to_csv('df_telhado_pivot_Verao.csv')\ndf_telhado_pivot_Outono.to_csv('df_telhado_pivot_Outono.csv')\ndf_telhado_pivot_Inverno.to_csv('df_telhado_pivot_Inverno.csv')","38f45134":"# Datasets Dia\ndf_telhado_pivot_dia_Primavera.to_csv('df_telhado_pivot_dia_Primavera.csv')\ndf_telhado_pivot_dia_Verao.to_csv('df_telhado_pivot_dia_Verao.csv')\ndf_telhado_pivot_dia_Outono.to_csv('df_telhado_pivot_dia_Outono.csv')\ndf_telhado_pivot_dia_Inverno.to_csv('df_telhado_pivot_dia_Inverno.csv')","b03b2276":"# Datasets Noite\ndf_telhado_pivot_noite_Primavera.to_csv('df_telhado_pivot_noite_Primavera.csv')\ndf_telhado_pivot_noite_Verao.to_csv('df_telhado_pivot_noite_Verao.csv')\ndf_telhado_pivot_noite_Outono.to_csv('df_telhado_pivot_noite_Outono.csv')\ndf_telhado_pivot_noite_Inverno.to_csv('df_telhado_pivot_noite_Inverno.csv')","cb92f23d":"## **Telhado e Clima - Criando novas colunas Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno e categorizando os registros**","ef50a383":"## **Fun\u00e7\u00f5es para categorizar os registros entre Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno**","2e51c824":"## **Telhado Verde - Dados obtidos no intervalo entre os dias 01\/01\/2019 e 13\/09\/2019**","252517bb":"## **Telhado Verde Pivot - Criando arquivos .csv **","a0bd7e85":"## **Telhado Verde Pivot MODULAR - Criando coluna Delta_3_4 **","81ac5681":"## **Telhado Verde Pivot - Criando dataset com os sensores como colunas, agrupado por data **","479a06b5":"## **Telhado Verde - Criando datasets separados **","d775e1fa":"## **Telhado Verde - Criando arquivos .csv **","496ed6c5":"## **Clima - Criando datasets separados **","639a1393":"## **Telhado Verde - Verificando e retirando datas que n\u00e3o tem informa\u00e7\u00e3o de pelo menos 6 sensores**","210615a1":"## **Telhado Verde - Fun\u00e7\u00f5es para categorizar os tipos de cobertura do telhado**","9fbf03fe":"## **Telhado Verde - Criando novas colunas Sistema_FLAT\\Sistema_Modular\\Sistema_MacDrain e categorizando os registros**","50c9f202":"## **Telhado Verde Pivot - Criando novas colunas Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno e categorizando os registros**","4d57502a":"## **Clima - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","3af8965a":"## **Telhado Verde - Apagando dados duplicados**","9e096571":"## **Clima - Criando arquivos .csv **","58e9b232":"## **Telhado Verde Pivot MACDRAIN - Criando dataset com os sensores 5 e 6 como colunas, agrupado por data **","f99d277c":"### **Telhado Verde Pivot e Clima - Juntando os registros com datas e horas pr\u00f3ximos entre Telhado Verde Pivot e Clima**","f509a1c9":"## **Telhado Verde - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","919281cd":"## **Telhado Verde Pivot - Criando dataset com os sensores como colunas, agrupado por data **","10ad44f1":"## **Telhado Verde Pivot MACDRAIN - Criando coluna Delta_5_6 **","17eb896d":"## **Telhado Verde Pivot FLAT - Criando coluna Delta_1_2 **","e0162df0":"## **Clima - Dados obtidos no intervalo entre os dias 01\/01\/2018 e 13\/09\/2019**","80b550a0":"## **Telhado Verde Pivot MACDRAIN - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","ddfd4b3e":"## **Telhado Verde Pivot - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","ca93db95":"## **Telhado Verde - Ordenando os registros por Data e Sensor**","042b218c":"## **Telhado Verde Pivot MACDRAIN - Criando novas colunas Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno e categorizando os registros**","051f1eaf":"### **Fun\u00e7\u00f5es Utilit\u00e1rias**","008cb934":"## **Telhado Verde - Verificando e retirando temperaturas extremas**","3c7cf300":"## **Telhado Verde Pivot - Criando colunas Delta_1_2, Delta_3_4, Delta_5_6**","120cbc61":"## **Telhado Verde Pivot FLAT - Criando dataset com os sensores 1 e 2 como colunas, agrupado por data **","690339de":"## **Telhado Verde Pivot MODULAR - Criando dataset com os sensores 3 e 4 como colunas, agrupado por data **","f1985ecf":"## **Telhado Verde Pivot MODULAR - Criando novas colunas Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno e categorizando os registros**","b842573d":"## **Telhado Verde Pivot FLAT - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","ca542e75":"## **Telhado Verde - Somente Sistema MacDrain**","01398c5c":"## **Telhado Verde Pivot FLAT - Criando novas colunas Dia\\Noite, Primavera\\Ver\u00e3o\\Outono\\Inverno e categorizando os registros**","d69ac7af":"## **Telhado Verde - Somente Sistema FLAT**","e623f4bc":"## **Criando arquivos .csv completos**","f31e6e5e":"## **Telhado Verde Pivot MODULAR - Separando coluna data em Data(Dia, M\u00eas, Ano), Hora(Hora, Minuto, Segundo), hora, minuto e segundo**","ac8e1c91":"## **Telhado Verde - Somente Sistema Modular**","d8940094":"## **Telhado Verde Pivot e Clima - Juntando os Datasets Telhado Verde Pivot e Clima**"}}