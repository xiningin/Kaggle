{"cell_type":{"b88a4e2b":"code","b762ee62":"code","e88d61cb":"code","3e793f8f":"code","10bf793e":"code","db7206ef":"code","d2f37859":"code","a1c9db8c":"code","8f50a05a":"code","6ae7e536":"code","47a92f6d":"code","df89f782":"code","6af90571":"code","274750ae":"code","51a5ac43":"code","569e1e8b":"code","f75cb26a":"code","b312f970":"markdown","020acc1c":"markdown","20a2913b":"markdown","143e5338":"markdown","97c1d32a":"markdown","4fea1c22":"markdown","27b356d9":"markdown","5a51a28a":"markdown","f49213e1":"markdown","78bbf389":"markdown","56152233":"markdown","279247f5":"markdown"},"source":{"b88a4e2b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b762ee62":"dataset = pd.read_csv(\"\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv\")","e88d61cb":"dataset.head()","3e793f8f":"dataset.info()","10bf793e":"dataset = dataset.drop([\"id\"], axis = 1)","db7206ef":"dataset = dataset.drop([\"Unnamed: 32\"], axis = 1)","d2f37859":"dataset.head(3)","a1c9db8c":"M = dataset[dataset.diagnosis == \"M\"]","8f50a05a":"M.head(5)","6ae7e536":"B = dataset[dataset.diagnosis == \"B\"]","47a92f6d":"B.head(5)","df89f782":"plt.title(\"Malignant vs Benign Tumor\")\nplt.xlabel(\"Radius Mean\")\nplt.ylabel(\"Texture Mean\")\nplt.scatter(M.radius_mean, M.texture_mean, color = \"red\", label = \"Malignant\", alpha = 0.3)\nplt.scatter(B.radius_mean, B.texture_mean, color = \"lime\", label = \"Benign\", alpha = 0.3)\nplt.legend()\nplt.show()","6af90571":"dataset.diagnosis = [1 if i == \"M\" else 0 for i in dataset.diagnosis]","274750ae":"x = dataset.drop([\"diagnosis\"], axis = 1)\ny = dataset.diagnosis.values","51a5ac43":"# Normalization:\nx = (x - np.min(x)) \/ (np.max(x) - np.min(x))","569e1e8b":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state = 42)","f75cb26a":"from sklearn.ensemble import RandomForestClassifier\n\nrf = RandomForestClassifier(n_estimators = 100 , random_state = 1)\nrf.fit(x_train, y_train)\n\nprint(\"Random forest algorithm result:\" , rf.score(x_test, y_test))","b312f970":"## Content:\n\n1. [Importing Dataset](#1)\n1. [Getting Info About Dataset](#2)\n1. [Dataset Visualization](#3)\n1. [Meaning Of Random Forest Algorithm](#4)\n1. [Random Forest with Sklearn](#5)","020acc1c":"Now, let's get rid of \"id\" and \"Unnamed: 32\" features because we don't need to use them while diagnosing whether the patient has a cancer or not. ","20a2913b":"> <a id = \"2\"><\/a>\n# 2. Getting Info About Dataset","143e5338":"<a id = \"4\"><\/a>\n# 4. Meaning Of Random Forest Algorithm","97c1d32a":"Random forests or random decision forests are an ensemble learning method for classification, regression and other tasks that operate by constructing a multitude of decision trees at training time and outputting the class that is the mode of the classes (classification) or mean prediction (regression) of the individual trees.","4fea1c22":"# <a id = \"1\"><\/a>\n# 1. Importing Dataset:","27b356d9":"Column names and meanings:\n* id: ID number\n* diagnosis: The diagnosis of breast tissues (M = malignant, B = benign)\n* radius_mean: mean of distances from center to points on the perimeter\n* texture_mean: standard deviation of gray-scale values\n* perimeter_mean: mean size of the core tumor\n* area_mean: area of the tumor\n* smoothness_mean: mean of local variation in radius lengths\n* compactness_mean: mean of perimeter^2 \/ area - 1.0\n* concavity_mean: mean of severity of concave portions of the contour\n* concave_points_mean: mean for number of concave portions of the contour\n* symmetry_mean\n* fractal_dimension_mean: mean for \"coastline approximation\" - 1\n* radius_se: standard error for the mean of distances from center to points on the perimeter\n* texture_se: standard error for standard deviation of gray-scale values\n* perimeter_se\n* area_se\n* smoothness_se: standard error for local variation in radius lengths\n* compactness_se: standard error for perimeter^2 \/ area - 1.0\n* concavity_se: standard error for severity of concave portions of the contour\n* concave_points_se: standard error for number of concave portions of the contour\n* symmetry_se\n* fractal_dimension_se: standard error for \"coastline approximation\" - 1\n* radius_worst: \"worst\" or largest mean value for mean of distances from center to points on the perimeter\n* texture_worst: \"worst\" or largest mean value for standard deviation of gray-scale values\n* perimeter_worst\n* area_worst\n* smoothness_worst: \"worst\" or largest mean value for local variation in radius lengths\n* compactness_worst: \"worst\" or largest mean value for perimeter^2 \/ area - 1.0\n* concavity_worst: \"worst\" or largest mean value for severity of concave portions of the contour\n* concave_points_worst: \"worst\" or largest mean value for number of concave portions of the contour\n* symmetry_worst\n* fractal_dimension_worst: \"worst\" or largest mean value for \"coastline approximation\" - 1","5a51a28a":"# Random Forest Implementation on Cancer Dataset","f49213e1":"<a id = \"5\"><\/a>\n# 5. Random Forest with Sklearn","78bbf389":"Dataset information:\n\n* Dataset Characteristics: Multivariate\n* Attribute Characteristics: Real\n* Attribute Characteristics: Classification\n* Number of Instances: 569\n* Number of Attributes: 32\n* Missing Values: No","56152233":"![](https:\/\/cdn.analyticsvidhya.com\/wp-content\/uploads\/2020\/02\/rfc_vs_dt1.png)","279247f5":"<a id = \"3\"><\/a>\n# 3. Dataset Visualization "}}