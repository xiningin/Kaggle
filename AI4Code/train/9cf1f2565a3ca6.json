{"cell_type":{"126be73c":"code","f87fca53":"code","6703b25c":"code","dbe63068":"code","83882954":"code","63dee0ef":"code","1a16ffe1":"code","5dfe40d4":"code","6593a65d":"code","8a6daeab":"code","73082765":"code","4abd9ed8":"code","a04fd1f4":"code","04d83050":"code","0d3bbcf3":"code","06532b6b":"code","b54d0cc9":"code","cf664053":"code","df67eeb0":"code","c0415718":"code","6a69e100":"code","2ad614ca":"code","b16d5a39":"code","50e74e30":"code","bba7d105":"code","7b3252fb":"code","092015f2":"code","dea5df38":"code","15b50f47":"code","48d863de":"code","54f91905":"code","de60a8aa":"code","07983f40":"code","ddbd1f2e":"code","f5222e06":"code","040739d1":"code","bc34a265":"code","a8900382":"code","bb3d4caa":"code","2632a507":"code","e53b58ff":"code","1c649b1e":"code","e14b62ba":"code","3006b924":"code","cd0cec37":"code","e727e0b1":"code","f4fff6cd":"code","30b99a64":"code","a6f4c32a":"code","c044f8ad":"code","f5f11dbf":"code","32fe3d4c":"code","3b1df12b":"code","db69133b":"code","6d4b4393":"code","cc0b5c32":"markdown","ad7c0be2":"markdown","e99b6ed3":"markdown","8ed88207":"markdown","09716790":"markdown","2e385dfc":"markdown","db91fe98":"markdown","edcf5e18":"markdown","4007df0a":"markdown","cf91d15f":"markdown","c6c3ad48":"markdown","68fdd16a":"markdown","d2bd3674":"markdown","4d326e2e":"markdown","fdc06656":"markdown","9f40fd1b":"markdown","f1bb1364":"markdown"},"source":{"126be73c":"!pip install numpy       #To load numpy","f87fca53":"import numpy as np      #import numpy","6703b25c":"x = np.array([4,5,6,7,8])        #initialize an array\nx","dbe63068":"type(x)          #to check type","83882954":"x = np.array([[1,2,3],[4,5,6]], dtype='int32')           #initializing 2d array iwth type int32\nprint(x)","63dee0ef":"x = np.array([(1,2,3),(4,5,6.1)])           #upcasting\nx","1a16ffe1":"x.ndim              # To get Dimension","5dfe40d4":"x.shape               # To Get Shape","6593a65d":"x.dtype            # To Get Type","8a6daeab":"x.size       # To Get number of elements","73082765":"x.size *x.itemsize            #to get total size","4abd9ed8":"np.ones([3,3],dtype=bool)","a04fd1f4":"arr=np.ones([3,3])\nprint(\"Array Shape is: \", arr.shape)\nprint(\"Array dimensions are \", arr.ndim)\nprint(\"Length of each element of array in bytes is \", arr.size)","04d83050":"np.ones(5)","0d3bbcf3":"type(np.ones(5)[0])","06532b6b":"np.ones((5,6), dtype='int32')","b54d0cc9":"np.zeros((2,3))             ","cf664053":"np.empty(4)","df67eeb0":"np.arange(0,10)          #similar to range function in python(only difference is it can take floats also)","c0415718":"np.arange(0,11.5,2) ","6a69e100":"np.arange(0,10).reshape(5,-1)","2ad614ca":"np.linspace(0,10,5)               #from 0 to 10 with 5 elements","b16d5a39":"np.linspace(0,10,endpoint=True,retstep=False)         ","50e74e30":"np.logspace(0,10,base=2)","bba7d105":"np.random.rand(3,3)            ## random array","7b3252fb":"np.random.randn(4,4)","092015f2":"np.random.randint(0,100,8)","dea5df38":"np.random.random_sample((1,5))","15b50f47":"np.identity(5)        #Identity matrix","48d863de":"arr = np.empty([4,2], dtype = 'int32') \nprint(arr)\n\nprint(\"Array Shape is: \", arr.shape)\nprint(\"Array dimensions are \", arr.ndim)\nprint(\"Length of each element of array in bytes is \", arr.size)","54f91905":"#Extract all odd numbers from arr\nx=np.arange(10)\nx[x%2==1]             ","de60a8aa":"a = np.array([[1,2,3,6,8,7.8],[8,9,10,11,3,7]])\nprint(a)                                                            #upcasting","07983f40":"a[0][1]","ddbd1f2e":"a[1, 5]           # To Get a specific element [r, c]","f5222e06":"# Get a specific row \na[0, :]","040739d1":"a","bc34a265":"a[0,1:4]","a8900382":"a[0, 1:-1:2]             #startindex:endindex:stepsize","bb3d4caa":"x=np.arange(6).reshape(2,-1)\nprint(x)\nprint(\"After Swaping\")\nprint(x[[1,0],:])","2632a507":"arr = np.arange(100, 200, 10).reshape(5,2)\narr","e53b58ff":"x=np.arange(6).reshape(2,-1)\nx[:, ::-1]","1c649b1e":"arr=np.array([  1,   2,   3, 100, 100])\nval=2\n\narr[arr<3]","e14b62ba":"np.arange(0,10).reshape(5,2)","3006b924":"a = np.array([1,2,3,4])\nprint(a)","cd0cec37":"a+2             #similarly you can perform division, Multiplication, subtraction, power of,sqrt, log on element-wise ","e727e0b1":"\na ** 2","f4fff6cd":"np.cos(a)","30b99a64":"stats = np.array([[1,2,3],[4,5,6]])\nstats\n","a6f4c32a":"np.min(stats)","c044f8ad":"np.max(stats, axis=1)","f5f11dbf":"np.sum(stats, axis=0)","32fe3d4c":"v1 = np.array([1,2,3,4])\nv2 = np.array([5,6,7,8])\n\nnp.vstack([v1,v2,v1,v2])","3b1df12b":"# Horizontal  stack\nh1 = np.ones((2,4))\nh2 = np.zeros((2,2))\n\nnp.hstack((h1,h2))","db69133b":"x=np.arange(10,25)\nx[(x>15) & (x<22)]\n","6d4b4393":"a = np.arange(10).reshape(2,-1)\nb = np.repeat(1, 10).reshape(2,-1)\nnp.vstack([a,b])","cc0b5c32":"**2) Create an array and print its attribute**","ad7c0be2":"## **9) How to stack two arrays vertically?**","e99b6ed3":"[33]:\n# **# Some useful conditions for Exploratory Data Analysis**","8ed88207":"# **What is Numpy?**\nNumPy is a general-purpose array-processing package package in Python used for Scientific Computing. It provides a high-performance multidimensional array object, and tools for working with these arrays. This can be an alternative to MATLAB. Numpy is a portmanteau of the words NUMerical and Python. \n\n# **Why use Numpy?**\n*   NumPy uses much less memory to store data\n*   It is Fast\n*   Mathematical operations on NumPy are easy to perform\n*   It works very well with SciPy and other Libraries\n*   It has lots of built-in functions\n*   It has universal functions\n\n# **Features of Numpy-**\n*  NumPy stands on CPython, a non optimizing bytecode interpreter.\n*  Multidimensional arrays.\n*  Functions & operators for these arrays\n*  Python alternatives to MATLAB.\n*  ndarray- n-dimensional arrays.\n*  Fourier transforms & shapes manipulation.\n*  Linear algebra & random number generation.\n\n# **How it is used-**\nYou can import NumPy it as-\n>>> import numpy as np\n","09716790":"**5) How to swap two rows in a an array?**","2e385dfc":"# **Statistics and linear algebra **","db91fe98":"# **Maths**","edcf5e18":"# **Numpy**","4007df0a":"**6)  Create a 5X2 integer array from a range between 100 to 200 such that the difference between each element is 10**","cf91d15f":"# 3) Create a 4X2 integer array and Prints its attributes","c6c3ad48":"**7) How to reverse the columns of a an array?**","68fdd16a":"**4)How to extract items that satisfy a given condition from 1D array?**","d2bd3674":"# **The Basics**","4d326e2e":"# **Accessing\/Changing specific elements, rows, columns, etc**","fdc06656":"# **1) How to create a boolean array?**\n\nHint: Create a 3\u00d73 numpy array of all True\u2019s","9f40fd1b":"**8)  How to extract numbers between a given range from a numpy array?**","f1bb1364":"# **Different Types of Arrays**"}}