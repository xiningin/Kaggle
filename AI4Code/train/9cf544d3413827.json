{"cell_type":{"be6757c5":"code","2096b609":"code","fff58850":"code","53c8cdcb":"code","635996ae":"code","459d6624":"code","2b424c79":"code","ef95067c":"code","87bb65c7":"code","e9ae96a4":"code","e2b3499f":"code","ddd38c93":"code","df6e868b":"code","ee67cf31":"code","0213f8f8":"code","f44738c8":"code","b154c629":"code","259492e8":"code","92cde993":"code","10369bae":"code","29883018":"code","b5bec5da":"code","64936c1e":"code","3b8fce47":"code","2665baf7":"code","9927bbae":"markdown","56d024b6":"markdown","9d58a99a":"markdown","cfa337aa":"markdown"},"source":{"be6757c5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2096b609":"#Importing the library\nimport pandas as pd","fff58850":"#Loading the Data Set\nbook = pd.read_csv('..\/input\/book-recommendation-dataset\/Books.csv',low_memory=False)\nrating = pd.read_csv('..\/input\/book-recommendation-dataset\/Ratings.csv',low_memory=False)\nusers = pd.read_csv('..\/input\/book-recommendation-dataset\/Users.csv',low_memory=False)\n\ndf1=book.merge(rating,how=\"left\", on=\"ISBN\")\ndf_=df1.merge(users,how=\"left\", on=\"User-ID\")\n\ndf=df_.copy()\ndf.head()\n","53c8cdcb":"#Size of dataset\ndf.shape","635996ae":"#Deleting missing observations in the dataset\ndf.info()\ndf.dropna(inplace=True)","459d6624":"#Converting User-ID and Age variable types to int\ndf['User-ID'] = df['User-ID'].astype('int')\ndf['Age'] = df['Age'].astype('int')","2b424c79":"#Author of The Da Vinci Code written in two different ways\ndf[\"Book-Author\"]=df[\"Book-Author\"].astype(\"string\")\ndf[\"Book-Author\"]=df[\"Book-Author\"].str.replace(\"DAN BROWN\",\"Dan Brown\")","ef95067c":"#Author of Dreamcatcher book correcting incorrect entries\ndf[\"Book-Author\"]=df[\"Book-Author\"].str.replace(\"Audrey Osofsky\",\"Stephen King\")\ndf[\"Book-Author\"]=df[\"Book-Author\"].str.replace(\"Dinah McCall\",\"Stephen King\")","87bb65c7":"#Extracting Image URL from dataset\ndf.drop(columns=[\"Image-URL-S\",\"Image-URL-M\"],inplace=True)","e9ae96a4":"#Removing books with zero ratings from the data set\ndf=df[df[\"Book-Rating\"]>0]\ndf[\"Book-Rating\"].describe()","e2b3499f":"#Unique reader count\ndf[\"User-ID\"].nunique()","ddd38c93":"#Unique number of books\ndf[\"Book-Title\"].nunique()","df6e868b":"#We found how many books users read\ndf.groupby('User-ID')['Book-Title'].agg('count').sort_values()","ee67cf31":"#How many times have we read which book?\nbook_counts = pd.DataFrame(df[\"Book-Title\"].value_counts())","0213f8f8":"#Most read books\nbook_counts.sort_values(\"Book-Title\", ascending=False)","f44738c8":"#We named the books with less than 100 reads as rare books.\nrare_book = book_counts[book_counts[\"Book-Title\"] <= 100].index","b154c629":"#Number of rarely read books\nrare_book.nunique()","259492e8":"#By removing the rare books from the dataset, we found the widely read books\ncommon_book = df[~df[\"Book-Title\"].isin(rare_book)]\ncommon_book.head()","92cde993":"#User-Book matrix\nuser_book_df = common_book.pivot_table(index=[\"User-ID\"], columns=[\"Book-Title\"], values=\"Book-Rating\")\nuser_book_df\n","10369bae":"#We chose a book\nbook_name=\"The Da Vinci Code\"","29883018":"#We found the points given to the book\nbook_name=user_book_df[book_name]\nbook_name.sort_values(ascending=False)","b5bec5da":"user_book_df.corrwith(book_name).sort_values(ascending=False).head()","64936c1e":"rec_book=user_book_df.corrwith(book_name).sort_values(ascending=False).head()\nrec_book_list=list(rec_book.index)\n\nrec_book_list","3b8fce47":"\n#Authors of 5 books we recommend\ndf_author=df[[\"Book-Title\",\"Book-Author\"]]\ndf_author.head()\n\ndf1 = df_author.loc[df_author[\"Book-Title\"].isin(rec_book_list)]\n\ndf2=df1.drop_duplicates(subset=[\"Book-Author\",\"Book-Author\"], keep=\"first\")\ndf2","2665baf7":"df2.shape","9927bbae":"Preparation of the Data Set","56d024b6":"Collaborative filtering methods are used to determine a user's level of interest in any product and to make recommendations by filtering products accordingly.\n\nProduct-based filtering, on the other hand, is a method that detects product similarities based on user votes. That is to say, for example, there are movies that show a similar liking structure with a movie that the person watches by being removed from being an object of the method. Similar movies can be found by finding similar reactions that other viewers collectively give to different movies. The movies with the highest correlation are selected and presented to the user as a recommendation.","9d58a99a":"**Item-Based Collaborative Filtering**","cfa337aa":"![](https:\/\/www.izmirdergisi.com\/images\/kutuphane1.jpg)"}}