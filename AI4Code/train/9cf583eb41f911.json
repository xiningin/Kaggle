{"cell_type":{"fbeb5cd4":"code","f8897783":"code","e0209e66":"code","48915753":"code","24cea32e":"code","3928efda":"code","8ae0ba30":"code","80216938":"code","21f9a6dd":"code","6d0f6807":"code","c1d33bc6":"code","aa7a2fb5":"code","0348f36f":"code","f306475f":"code","a5ff5399":"code","25620ff5":"code","508694c4":"code","3fccedef":"code","9f60f4a9":"code","30f9f29a":"code","6b2e0733":"code","2208d983":"code","f3d0cf84":"code","2520d8c7":"code","f24a6bb2":"code","6604b20f":"code","e2394d1d":"code","e5b22c47":"code","4a93e844":"code","22500308":"code","b1ef8e75":"code","9ae4baee":"code","766445ba":"code","10bf69e5":"code","d1575346":"code","9c51eeff":"code","0d67eef3":"code","8d014c78":"code","a2df15f2":"code","005b7686":"markdown","6be42f25":"markdown","8ef30382":"markdown","cb65d3ee":"markdown","f9909e50":"markdown","8327fadf":"markdown","25891c55":"markdown","7ca87563":"markdown","214b8ec8":"markdown","a22014b7":"markdown","c223880f":"markdown","be1e75da":"markdown","8c36b5ee":"markdown","2285ac4a":"markdown","883fe26c":"markdown","aef4245a":"markdown","fa2de557":"markdown"},"source":{"fbeb5cd4":"# Data and Visualize\nfrom IPython.display import clear_output\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Preprocesing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report, plot_confusion_matrix\n\n# Modelling\nfrom sklearn.linear_model import RidgeClassifier\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom lightgbm import LGBMClassifier\nfrom xgboost import XGBClassifier\nimport optuna","f8897783":"data = pd.read_csv(\"..\/input\/heart-failure-prediction\/heart.csv\")","e0209e66":"data","48915753":"data.info()","24cea32e":"data[[\"Age\"]].describe().T","3928efda":"fig = px.histogram(data[\"Age\"], x=\"Age\", width=600, height=400)\nfig.show()","8ae0ba30":"data[\"Sex\"].value_counts()","80216938":"fig = px.pie(data[\"Sex\"], names=\"Sex\", width=600, height=400)\nfig.show()","21f9a6dd":"fig = px.histogram(data[\"ChestPainType\"], x=\"ChestPainType\", width=600, height=400)\nfig.show()","6d0f6807":"data[[\"RestingBP\"]].describe().T","c1d33bc6":"fig = px.histogram(data[\"RestingBP\"], x=\"RestingBP\", width=600, height=400)\nfig.show()\n\n# Looks like there are incorrectly entered value ","aa7a2fb5":"data[[\"Cholesterol\"]].describe().T","0348f36f":"fig = px.histogram(data[\"Cholesterol\"], x=\"Cholesterol\", width=600, height=400)\nfig.show()\n\n# Looks like there are incorrectly entered value ","f306475f":"data[[\"FastingBS\"]].value_counts()","a5ff5399":"fig = px.pie(data[\"FastingBS\"], names=\"FastingBS\", width=600, height=400)\nfig.show()","25620ff5":"data[[\"RestingECG\"]].value_counts()","508694c4":"fig = px.histogram(data[\"RestingECG\"], x=\"RestingECG\", width=600, height=400)\nfig.show()","3fccedef":"data[[\"MaxHR\"]].describe().T","9f60f4a9":"fig = px.histogram(data[\"MaxHR\"], x=\"MaxHR\", width=600, height=400)\nfig.show()","30f9f29a":"data[\"ExerciseAngina\"].value_counts()","6b2e0733":"fig = px.pie(data[\"ExerciseAngina\"], names=\"ExerciseAngina\", width=600, height=400)\nfig.show()","2208d983":"data[[\"Oldpeak\"]].describe().T","f3d0cf84":"fig = px.histogram(data[\"Oldpeak\"], x=\"Oldpeak\", width=600, height=400)\nfig.show()","2520d8c7":"data[\"ST_Slope\"].value_counts()","f24a6bb2":"fig = px.pie(data[\"ST_Slope\"], names=\"ST_Slope\", width=600, height=400)\nfig.show()","6604b20f":"data[\"HeartDisease\"].value_counts()","e2394d1d":"fig = px.pie(data[\"HeartDisease\"], names=\"HeartDisease\", width=600, height=400)\nfig.show()","e5b22c47":"plt.figure(figsize=(10,10))\nmatrix = np.triu(data.corr())\nsns.heatmap(data.corr(), annot=True, mask=matrix, cmap=\"twilight\")","4a93e844":"data.loc[data[\"RestingBP\"] < 100, \"RestingBP\"] = 100\ndata.loc[data[\"RestingBP\"] > 170, \"RestingBP\"] = 170\n\ndata.loc[data[\"Cholesterol\"] < 100, \"Cholesterol\"] = 100\ndata.loc[data[\"Cholesterol\"] > 320, \"Cholesterol\"] = 320\n\ndata.loc[data[\"MaxHR\"] < 60, \"MaxHR\"] = 60\ndata.loc[data[\"MaxHR\"] > 202, \"MaxHR\"] = 202\n\ndata.loc[data[\"Oldpeak\"] < 0, \"Oldpeak\"] = 0\ndata.loc[data[\"Oldpeak\"] > 2.5, \"Oldpeak\"] = 2.5","22500308":"# Getting Dummy Variables\ndata = pd.get_dummies(data, columns=[\"Sex\", \"ChestPainType\", \"RestingECG\", \"ExerciseAngina\", \"ST_Slope\"], drop_first=True)","b1ef8e75":"x = data.drop(\"HeartDisease\", axis=1)\ny = data[\"HeartDisease\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.1, random_state=44, shuffle=True)","9ae4baee":"algorithms = [RidgeClassifier, \n              SVC, \n              LinearSVC, \n              RandomForestClassifier,\n              KNeighborsClassifier, \n              DecisionTreeClassifier,\n              LGBMClassifier,\n              XGBClassifier,\n             ]","766445ba":"df_algorithms = pd.DataFrame(columns=[\"Model\", \"Train Accuracy\", \"Test Accuracy\"])","10bf69e5":"def autoML(algorithm): \n    \n    model = algorithm().fit(x_train, y_train)\n    train_acc = model.score(x_train, y_train)\n    model_name = algorithm.__name__\n    \n    y_pred = model.predict(x_test)\n    test_acc = accuracy_score(y_test, y_pred)\n\n    return model_name, train_acc, test_acc","d1575346":"for alg in algorithms:\n    \n    model_name, train_acc, test_acc = autoML(alg)\n    \n    df_algorithms = df_algorithms.append({\"Model\" : model_name,\n                                          \"Train Accuracy\": train_acc,\n                                          \"Test Accuracy\": test_acc}, ignore_index=True)","9c51eeff":"df_algorithms.sort_values(by=[\"Test Accuracy\", \"Train Accuracy\"],ascending=False)","0d67eef3":"model = LGBMClassifier().fit(x_train, y_train)\ny_pred = model.predict(x_test)\naccuracy_score(y_test, y_pred)","8d014c78":"print(classification_report(y_pred, y_test))","a2df15f2":"plot_confusion_matrix(model,\n                      x_test,\n                      y_test,\n                      display_labels=[\"Normal\", \"Heart Disease\"],\n                      cmap=plt.cm.Blues,\n                     )","005b7686":"# Modelling","6be42f25":"## HeartDisease\n*Output class*\n* 1: heart disease,\n* 0: Normal","8ef30382":"## Oldpeak\n*oldpeak = ST [Numeric value measured in depression]*","cb65d3ee":"## ExerciseAngina\n*Exercise-induced angina*\n* Y: Yes\n* N: No","f9909e50":"## Sex\n*Sex of the patient*\n* M: Male\n* F: Female","8327fadf":"## Fasting Blood Sugar\n*Fasting blood sugar*\n* 1: if FastingBS > 120 mg\/dl,\n* 0: otherwise","25891c55":"# Preprocessing","7ca87563":"## Age\n*Age of the patient [years]*","214b8ec8":"## ST_Slope\n*The slope of the peak exercise ST segment*\n* Up: upsloping\n* Flat: flat\n* Down: downsloping","a22014b7":"## Cholesterol\n*Serum cholesterol [mm\/dl]*","c223880f":"## Resting Blood Pressure\n*Resting blood pressure [mm Hg]*","be1e75da":"## MaxHR\n*Maximum heart rate achieved [Numeric value between 60 and 202]*","8c36b5ee":"# Attributes","2285ac4a":"## Attribute Information\n---\n* **Age**: age of the patient [years]\n* **Sex**: sex of the patient \n    * M: Male, \n    * F: Female\n* **ChestPainType**: chest pain type \n    * TA: Typical Angina,\n    * ATA: Atypical Angina,\n    * NAP: Non-Anginal Pain, \n    * ASY: Asymptomatic\n* **RestingBP**: resting blood pressure [mm Hg]\n* **Cholesterol**: serum cholesterol [mm\/dl]\n* **FastingBS**: fasting blood sugar \n    * 1: if FastingBS > 120 mg\/dl, \n    * 0: otherwise\n* **RestingECG**: resting electrocardiogram results \n    * Normal: Normal, \n    * ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV), \n    * LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria\n* **MaxHR**: maximum heart rate achieved [Numeric value between 60 and 202]\n* **ExerciseAngina**: exercise-induced angina \n    * Y: Yes,\n    * N: No\n* **Oldpeak**: oldpeak = ST [Numeric value measured in depression]\n* **ST_Slope**: the slope of the peak exercise ST segment \n    * Up: upsloping, \n    * Flat: flat, \n    * Down: downsloping\n* **HeartDisease**: output class \n    * 1: heart disease,\n    * 0: Normal","883fe26c":"## Chest Pain Type\n*Chest pain type*\n* TA: Typical Angina\n* ATA: Atypical Angina\n* NAP: Non-Anginal Pain\n* ASY: Asymptomatic","aef4245a":"## Outlier Suppression","fa2de557":"## RestingECG: \n*Resting electrocardiogram results*\n* Normal: Normal\n* ST: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n* LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria"}}