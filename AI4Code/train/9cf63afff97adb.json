{"cell_type":{"8e66385c":"code","534429ae":"code","dc1f5532":"code","5e85518a":"code","505ab9c7":"code","b3f39f4c":"code","a8821ccd":"code","2836e1d9":"code","24eddc8b":"code","c66fff09":"code","54de961c":"code","1b199939":"code","19c32a4f":"code","270eeb5a":"code","f42ac3a1":"markdown","a288a119":"markdown","9cdb7f30":"markdown","00e265e9":"markdown","86564794":"markdown"},"source":{"8e66385c":"from sklearn import datasets\nimport numpy as np\nimport pandas as pd\nimport collections\nimport seaborn as sn\nimport matplotlib.pyplot as plt","534429ae":"iris_dataset = datasets.load_iris()","dc1f5532":"x = iris_dataset.data\ny = iris_dataset.target","5e85518a":"def knn(test, train, target, K):\n    num_train = train.shape[0]\n    dist = np.sum((train - np.tile(test, (num_train, 1)))**2, axis=1)\n    idx = sorted(range(len(dist)), key=lambda i: dist[i])[:K]\n    return collections.Counter(target[idx]).most_common(1)[0][0]","505ab9c7":"confusion_matrix = np.zeros((3, 3))","b3f39f4c":"for i in range(len(x)):\n    idx = np.zeros((150))\n    idx[i] = 1\n    \n    x_train = x[idx==0]\n    y_train = y[idx==0]\n    \n    x_test = x[idx==1]\n    true_ = y[idx==1]\n    \n    pred_ = knn(x_test, x_train, y_train, 1)\n    confusion_matrix[pred_][true_] += 1","a8821ccd":"print(confusion_matrix)","2836e1d9":"df = pd.DataFrame(confusion_matrix, index=range(3), columns=range(3))","24eddc8b":"sn.heatmap(df, annot=True, annot_kws={\"size\":15})\nplt.show()","c66fff09":"confusion_matrix = np.zeros((3, 3))","54de961c":"for i in range(len(x)):\n    idx = np.zeros((150))\n    idx[i] = 1\n    \n    x_train = x[idx==0]\n    y_train = y[idx==0]\n    \n    x_test = x[idx==1]\n    true_ = y[idx==1]\n    \n    pred_ = knn(x_test, x_train, y_train, 10)\n    confusion_matrix[pred_][true_] += 1","1b199939":"confusion_matrix","19c32a4f":"df = pd.DataFrame(confusion_matrix, index=range(3), columns=range(3))","270eeb5a":"sn.heatmap(df, annot=True, annot_kws={\"size\":15})\nplt.show()","f42ac3a1":"### 10-NN","a288a119":"### 1-NN","9cdb7f30":"## Load Dataset","00e265e9":"## K-Nearest Neighbor Algorithm","86564794":"## Test"}}