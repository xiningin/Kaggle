{"cell_type":{"1fe77927":"code","de35d745":"code","16666467":"code","2890cb66":"code","846d8ceb":"code","7432e5ee":"code","769f6bd4":"code","b5b3aed2":"code","7d9e5443":"code","a319bfcd":"code","c34ef16d":"code","9c940345":"code","02f16d18":"code","0371884e":"code","1d114773":"code","b2e52ca3":"code","c30bf6c0":"code","9b7b1b23":"code","c95a1d63":"code","5e49dfd5":"code","53e4fd7a":"code","125eed11":"code","76ab1097":"code","62cb22e9":"code","542a9f1a":"code","798ffcd8":"markdown","37933d13":"markdown","478fc371":"markdown","ce8a87b0":"markdown","6a7e787e":"markdown","d52a079c":"markdown","967e4c07":"markdown","7766aa66":"markdown","e02e822e":"markdown","f99dca58":"markdown"},"source":{"1fe77927":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nimport cufflinks as cf\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected = True)\ncf.go_offline()\n%matplotlib inline\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","de35d745":"df = pd.read_excel('\/kaggle\/input\/education-by-county-20142018\/Education 2014-2018.xls')\ndf.head()","16666467":"pip install plotly==4.8.1","2890cb66":"pip install cufflinks","846d8ceb":"from plotly import __version__\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n\nprint(__version__) # requires version atleast>= 4.8.1","7432e5ee":"import cufflinks as cf","769f6bd4":"# For Notebooks\ninit_notebook_mode(connected=True)","b5b3aed2":"# For offline use\ncf.go_offline()","7d9e5443":"df.iplot(kind='scatter',x='State',y='Less than a high school diploma',mode='markers',size=10, title='Less than a high school diploma by State', color= \"#46039f\")","a319bfcd":"df.iplot(kind='bar',x='State',y='High school diploma only', title='High school diploma only by State', color= \"rgb(49,130,189)\")","c34ef16d":"df.columns.tolist()","9c940345":"df.iplot(kind='bar',x='State',y=\"Bachelor's degree or higher\", title=\"Bachelor's degree or higher by State\", color=\"red\")","02f16d18":"df.drop(columns=[\"State\",\"Percent of adults with a bachelor's degree or higher\"]).iplot(kind='box', title=\"Percent of adults with a bachelor's degree or higher by State\")","0371884e":"df.drop(columns=[\"State\",\"Area name\"]).iplot(kind='surface',colorscale='rdylbu', title=\"Area name & State\")","1d114773":"df.iplot(x = 'State', y = \"Bachelor's degree or higher\", color= \"Green\", title=\"Bachelor's degree or higher by State\" )","b2e52ca3":"df.iplot(x = 'State', y = 'Percent of adults with less than a high school diploma', color= \"Red\", title='Percent of adults with less than a high school diploma by State')","c30bf6c0":"df.iplot(x = 'State', y = \"Percent of adults with a bachelor's degree or higher\", color= \"Blue\", title=\"Percent of adults with a bachelor's degree or higher by State\")","9b7b1b23":"df['Area name'].iplot(kind = 'hist',color=\"Purple\", bins = 25, title='Education by Area Name')","c95a1d63":"# Box plot for our dataset \ndf.iplot(kind = 'box', title='Education by State 2014-2018')","5e49dfd5":"df.iplot(title='Education by State 2014 -2018')","53e4fd7a":"# Using a Scatter plot for the confirmedCases and fatalities   \ndf.iplot(kind = 'scatter', x = 'State', y = \"Bachelor's degree or higher\", title=\"Bachelor's degree or higher by State\", mode='markers',symbol='circle-dot',colors=['cyan','teal'], size=20)","125eed11":"df.State.iplot(title='Education by State 2014-2018')","76ab1097":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df[\"State\"], y=df[\"Percent of adults with a bachelor's degree or higher\"],\n                    mode=\"lines+text\",\n                    name=\"Percent of adults with a bachelor's degree or higher\",\n                    marker_color='orange',\n                        ))\nfig.add_annotation(\n            x=\"State\",\n            y=df[\"Percent of adults with a bachelor's degree or higher\"].max(),\n            text=\"Education by State 2014-2018\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n)\n\n\nfig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=\"State\",\n            y0=df[\"Percent of adults with a bachelor's degree or higher\"].max(),\n            x1=\"State\",\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n))\nfig\nfig.update_layout(\n    title='Education by State 2014-2018',\n        template='plotly_dark'\n\n)\n\nfig.show()","62cb22e9":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=df[\"State\"], y=df['Percent of adults with less than a high school diploma'],\n                    mode=\"lines+text\",\n                    name='Percent of adults with less than a high school diploma',\n                    marker_color='black',\n                        ))\nfig.add_annotation(\n            x=\"State\",\n            y=df['Percent of adults with less than a high school diploma'].max(),\n            text=\"Education by State 2014-2018\",\n             font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"red\"\n            ),\n)\n\n\nfig.add_shape(\n        # Line Vertical\n        dict(\n            type=\"line\",\n            x0=\"State\",\n            y0=df['Percent of adults with less than a high school diploma'].max(),\n            x1=\"State\",\n    \n            line=dict(\n                color=\"red\",\n                width=3\n            )\n))\nfig\nfig.update_layout(\n    title='Education by State 2014-2018',\n        template='plotly_white'\n\n)\n\nfig.show()","542a9f1a":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUREhMWFRUXGBgXGBgYGBoWFxgYFxcYGBobGB0aHSggGx0lGxYVIjEhJSkrLy4uFyAzODMsNygtLysBCgoKDg0OGhAQGzckHyUuLzc1KysyLS83NS0tLy8yMi0tNTctNS0vLS0tLSstLSstLS0uKy0rLS0tKy0tNS0tLf\/AABEIAKgBLAMBIgACEQEDEQH\/xAAbAAEAAgMBAQAAAAAAAAAAAAAABAUCAwYHAf\/EAEAQAAEDAgMFBgQEBAUEAwEAAAEAAhEDIQQSMQUiQVFhBhNxgZGxMkKh0RRSwfAjYoLhJENykvEHFVOyVJPCNP\/EABoBAQADAQEBAAAAAAAAAAAAAAADBAUCAQb\/xAAxEQACAgEEAAMGBQQDAAAAAAAAAQIDEQQSITETQVEFFCJhgfAycZGxwUKh0eEjJPH\/2gAMAwEAAhEDEQA\/APY8TimsjOTvEjU8JPPkFo\/7vRjNntr806TEc44aqRVYDq2bnhPErDuG\/kH+3+yyrtVZGxxSf6f6O1FYNJ2xRyl+eQI0LuOnHl+nMLZR2lSc4Ma8EmYEu1GoWYpj8v0RtMDRseSi98u9H+n+j3ajf+9T90\/ep+61yeR9Ek8j6Ln3y\/0f6DajN7oBPIcz919w7jN+XX+Xn4laK05TY6H2W7D\/ABeX6MV\/R3TsT3nMlgkoiK6chERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQEfEVMskhxAAMNkm5MwBcrGo8hmbI4uicgdeeQMxP0XzGOeA7uw0uhsZjA1MzHSVBGJxX\/ip8Pn8ZPtb9gCzYJANxbSTZZZR19T91FwlWoZ7xrWxpDpn7cFIkICu2pUaA3M97N50ZOJvE9Bry52lVJ2gMtsRWNjEUhPAiZ6SOHGYItdY3F92M2Vzrus0X191Hdtlo+SrbXciBxPgP+EBqwznVJayvUGpk0wCLCw4cfrzFpVfAOcB\/GeDABPMgkkwCAJmDHCdDBGFbaoa4NLKpmLhkgSOPLkt1TGQ4NLXwQSCBIkZiRzBhtp1myA0nZj5nv36g+nn5+LW9Q6zlVbtrgRNOrefkmAH5ZPv4KVg8T3jcwDm3iHCD4wgN1Y7rvA+yYf4vL9GrGt8J8D7LLD\/F5foxASkWOcTEieXFZIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiKrbt+gaho5jnBykZTrnDPc6oC0REQBERAQtoCQ4ZzTs3eBAI3jxNunmq0UHf\/MNv9Ft1zb3k3cD4tHgp+1C0NdmYXiG7obmJ3jFuN4Pkqg1sPocPU\/+txEQBIvFxCAvqTrC+a2tr9bLLMoGzMSxwLKbHMDeDmlouXaTrcE+YU2UBFxVAviHuZDnE5eNzY9P2IMEQzsp5EHEVjYg3AmQAfYepiLRs2rBAaWPdLnfBqNdelwfIa6KoDRBIpYo5gbE9BHTmPLjIkC9wmFLCSalR\/RxkDTT0+vhEqVS0MKKjnFza7DvXLsov+WOUmD4qR\/2psZe8qxr8d9A3WNIH1POEBZSkqvr7LpvABLrACZkmJiSQZO8f+CQdT9iUzcl\/Aajhpw\/duTYAsa53XeB9lE73KM3wRJPgAPKIEqVW+F3gfZQMeQ2GkEhxynNbVo+nBRXvFbaO61mRqoYttQkhzSTeGkG3OxOp\/fBS2VnDRx9\/dUHcVaZa6jhqWb+K1x3WkM70OaBD+MuJHO9phXhWTqG4z3Rl38\/8FmGGsNEmnjnzBg\/Q\/vyUOl2rpTDmvHWxH3+i2Uxc+Hv\/wALj8bhzTe5h4aeB0VzRXSnlSZma+2VTTh0dzR29h3aVQPGW+4UylimO+F7T4EFeaCJAJALiGieJJAAHmQhb7AjUWIka30KvlRa2aWZR4PUUXmNPEPb8L3DwJHspDNrVxpVf5uJ90O1r4+aPRkVJR21SBFN1Y94MocIJIJa10u3SAIcDOl1aX\/Mfp9lA9RFdpmgkb0Ud5dB3j9PsqJ+06rhBdryEFFfF9HE5bezpUVO3beks8b\/ANlKG1aUA5o8jbxUinF+YU4vzJyLWysCQBNxMwYhbF2dBERAERRsdjO7y7rnZnBgyiYLtJ5DqgJKpK2z8Q5x36YYajp3QXGiWmG\/D8QfvTKtMFie8Y18FsgHKYlsgEAxoYI9VvQFdj9rNo0W13gwclm3MvI0HGJJ8lp2Ft1uJLwKb6ZafnEZmmYI9LjgqDt08dxQpkgA1nNgz8AzsM9AHD1XP7L26cJUaWhppn4wJneguJJJJIJPiWnmrEKXKPC5ZWneoz5fC\/k9WRRsLjmVKbKjDLXgFvMz0VZsPH4t5jE0qdMBty14O\/LYEZjYgnXoq5ZTyTsfmvk+KG+mYz5xKr21MVMkUonTMdOc+tuqm7VAIIJIEM0E\/PYRxkwI6qpNKnf\/ABjh171vLX0QFjhX1cx7wMAixa4zNuB81Kn9yqzBVabMw7\/Px3ngxqSR6z5KxDpuEBoxVR4O4zPvOneyxr\/wodPGVyDOHggH\/MF3CIjkDJPkrx2HaTMfUj9V8\/DN6+p+6ApPxleR\/hjHGajeukeXr5rb+Kq5gO4MHLLs7d2QJtxiSLflVt+Gb19T90\/DN6+p+6ApauJxAJDaII4HML3jnyv5RxkbKOIrF+V1KGfmzgxadON4Ctvwzevqfun4ZvX1P3QER4sfBUePpllIZoG+42JIuSRdxmTN5MAk8FY7eqd2GBhIJJ4k6Rz8VSVa7nfE4nlN\/pZUNVqYLNTRd02nm8WIjYTFteCWExpN2zci3SQVIbVcNHH1Kj021JGaoDuAHdEl4eCXaWBbLY6zqtqy7lGMvgfBo1ZlH41yXGy3uIJdzsVV9pmuLmnLugRmjiSbT5fVWdXGtpd1TdMvsIiLROpHEjST0W7H4bvKbmc9PEaKxS3VOMn0fP6teMpY4ycdS+Js5YDpJcJLd10FlrHNl8isJJAzRMCY0kAAxyHTgrqn2fdIzOEcYmfqFuf2dHCofMT+q03q6l5mV7vc4bcdHPoVcP7PVODmn1H6LX\/2OqCCcpHGDw810tTU\/wCoi92tXcS3x2CrZy5mHw7iH0ixz2jNlDRnJMzmBjKengVd4QvLGmoAHwMwGgdF481U19qU2VO6c9wda2+bOmDOkWueCm5jzPqVnWWtxW5YN7JPXFbVwVN9SH0s4AqtnegAlu6Q0XDo5fLobx02c8z6qoxU53Tcz+\/ovdPYt3BFdLCTI2GbDGAAiGtsSSRYWJNyRzK34DatGm8ZgSbyYs2OQ1JJ9FprHdMciqJ0z8mWLzmL5gR0uST0yDXNa9SsttlGU5J5WPXk6rGbbLyAwQ0GSJu7oY0HRSz2gGUQwl3Lh5HX6LiV2OwS1tF1UtBLfm1JMXAPK4HjmXDruTzv4\/Lo0NNrKbltcMNfPsnYLaTnHK+k5p4kNdGtrROnHotW2MbiGln4ZjHtMh5eYh0sy5ZcJmXjxhc\/iMQ97y+cv+kkGBaPCPX36X8EyvTpGoDLMrxDiIcIIJAsdOI4pptQrG4948y1qKHXiXWfIsG1ASQCJGom4\/cKPtLDvewtp1DTdfeAngR7kHyWrAbHpUXufTDgXZiZc513uzuNzxdf2We2Mc6jSdUbSfVI+RglxHGAASbcBc8FbKxCoYOpTJfUrl7iym0Q2LsBDiRMEOJmDpJgqt7R9rH4YNHcgudIkuOW0G0C\/G0g2KsqWKdUlzmFkFzQCZ+FxaXC2jiMwPFpabaCm7Z4EVcM48aZDx5WP0JPkqteqXvKhL8Ocff1Irt3hvb2cpt+tVr024mrAJdoJyhrmjKQJMfCVc9lOybS3vsSx3xDIzTN0IPUek8FBdtLDnDspPOYlrGlrdZtx0meq9FZVuMoDnwIaCIY06SRMA8+MWmFpu6yMNmMcv8AT5FOiqNk3OXPR9xFVtGmarwTAAhomASAGtFuJHj7V+xtmYZ1MVKLSGPcx4BtvUSA0gcIyRbhZSsXSe5j+6qMOILTkc67WHSQ28AHxuLzopGBp1A6pnLcpIyNF8oyjN8o+aTx114CsaJo2sbGWZ7M3Ymd48IOmunBVTa1KP8A+R4HLuW8CBoPL0XSVKQOvuR7LD8M3r6n7oCjwraT3Efhi2BMvpNaDBiB1VkBwUr8M3r6n7p+Gb19T90BuREQBERAEREB5j\/1L2q19ZlFn+TJcf5nRYHoAPVczh9r1maVCRydve6uP+opH458CN1k9TEz6EDyXMqnYlJvJ9foq4e7wWPL9zoqHadwjPTB\/wBJj6GVZYPtFQc4ZiWCRMtJ\/wDWVyIw7zcMcRpIBI6\/WVpIVeWmrfkdPT1zTS\/setN2jSqkGlXpmA7dzNmTGU3BIIv6qdh2uDGhxzODQHEWBMXMcJMrxcheiYRpYxrQSIaBYxoIUF6UIpGPqPZShjbL9UdMdR+\/3qoDn4nvCMtMUw5oB1cQcs2zWMOIH+j+YLHZuI1zv5RJ9f0W+pgaTnB3HvBVs6AXtaGAmNd0AQVxVKK7\/Yyra3XLayYsaht6e6yWjHHcPl7hRxWWkRN4WSNicM9zy8Ckb0i0uALhlcS++Q\/KYF7GbiVYKgrOytc4NzENJDRq4gEwOpiPNYYWuX55puYGugZrF1tYiw8yrsqHKK56+\/UiV2VnB0SpNoYtgqOBN7cDyCybUI0JHmqraLT3oLr5o+0LrT0YnyyC+74OCScezmfQqDizTJLmCHGM1tQ0ED0k+pUebSSwzJGQyMpNiOJGozaGBxsvi0I1KLyilZZNNwYXZ7Lw+bAhrYkhx88xMeNoVdgtmUyxrnMgkXElXOBGWm6lTAHK9hmnXjrKr+9Vzbg\/maWk0dlLVjaObBVtsCq41ibnMDmP1B\/TzWFTYzmiS4cNAVjS2ozC5mlr3kgOJa2TFwAGglxuDeIuLrO0kJK1Z48ze1N9cq3jlnT1agaC5xAAuSbAKg2pWpumaoZvNMzvbpBixm8addDote3XF9MzwLSBw1AXKNgta4VC8FogkG4knNMC5zRBvDR+Uk6eVqFmLxhmHqJyq8vI6QbYpMmHOeS5ztDFzYDMbACBblPFZ4yuyvhqoa4SabrEiQYMTyuuXUMbuKouAzlzmtySR8RyzI8Z8uK6hoYyllPlc\/oUYayUniS4ZI2B2VrVXfxGspscz5rvAPzBoFj\/AKiF6BsbYow7AxrzlEDxA4EuJ66RrwUDGwzEMBxJpF4ps7oNcWOLnuIyukb8U6gJ5QSNAbzZ2Op16Yq0nZmEuAcNDlcWmOktN1bstlY8yL1VEa1hFDs3FtplrWYWsCDSpS5sQ15JJkNhzWWBI4+q6dR8ZjadIB1RwaCYkzwaXHTQBrXEnQAErLB4plVgqUzmadDBE+qjJjciIgCIiAIiIAiIgCIiA4L\/AKm7LB7vESBALDzdeW+gz9ehXnZXqPbeiIJL5NnZL7uW5vJaAR8uXM4FwBgmPNMVhXUyA6xN44jjBtyIVe2POT6P2Tfur8Nvrr77LPZjdwvDmaZYE94RmzkG4EAi1jZxGjiDFxez8jXOL5IMRa85TIM6bzv9h52gN5FfCIXDllFyGmlCxyjLCb6wufqSNnUs1Wm3m4ekyV3wk6N+YCdZByehvU\/2DmuO7M0prg\/lBP0j9V1zqILsxLvhcyAREOiTDmkE2\/5VG6UPExL0INfubSibF0OwqQ7qSNXE+w\/Rc8Auo2YyKLRzBPrJ4X4qtQviZna1\/wDGl8yR3TeQWNTCMIgj6n7rnWvpYU941lVxAdTghjd0M73NDWgwYDY58MxcuoaZEq7ZXt5MvhlJtrAsbTIaXNLpbIcZEtN2zoRYg9FVUqcEuzuO6xsEjKMmbeA\/M7NczeAr7bh3W+P6KlqF0boBPAE5Qb8TBjxg+BUtbbWCnbxLaj7mHNa6mF71zWtcGmbE819ouffO2LjL1GVpM3MHNmHprqtkLrmL4IXFdM+N7KPsM1MQ3KIBs0GY8JuscRsM0AKxfnDJcWtbvHKC6G3uTEeav6W0qbWMNR7GEiwLgJidJ6NJ8lKeA9tiCCJDhcX0I5riV1nn0W1pqm1LHP5sqcPWD2teNHAH+x6jTyWvabmihVzPfTGS7mWcN4aac\/qtFXZtUQ04gkhziXZXAkPqB4FqgG63dFj4RLTbYMS48oM+cfZVFGMLE4vJfbbg8ldhtpUmn8IKj6lQZ3ZniSQD3kE9A6I13eUTsrMqF7C14axpJc3LJfLXADNmsASDpwUjH7TpNJp52h0DMIMgOOUacS6AOZsteTqfoV7qJYkpJYz6nlSysEXadQZSybn6X1+ipazWMYS8m3UBoEchx5KZiZzHMLz+\/Jc\/j3MdnY0AhsADO8MLpboGz+Y6cQLGbd6GNk57ItqPngk1ldMalKaTl5Z++iy7P7VpVZYKEPa3NNnAgdToZ0VvgNlUaldleXB7eNrENiHBwNxPiIC81zupv1LbmHCdJIvFwbHwuvQtl1aVfDvrF3eubQaxzWE5jDnG+UEkmGREkZY5rdv0nhT31vC+rMPS2qa2ySz9Dq\/wrX6vL\/8Ab\/8AkDn9Vm3BtFhm8nuGtzYFVXZrZ1KgalOkx7WtDGguuCILoBgTBc7ieF+CvVEXit2tgppO7ukyo8AlrX3GbK4D4rfMRcizj4HTs2lXbUDO7p0sO0bobEnduIB3N4yIkQOZtcIgCIiAIiIDnu2e034ej3lPLmztbvDMIIcTbyWPZDaVTEUBUqMa5xqOaS0BoAAEGDr\/AHUvtF3vd\/wc2bM34JmIdy4aL5sIV+6HeFwdnM59cuW0T\/NH1Xe5bNuOfUr5fjY5xj6E3BuLpz0gyMvWSRcaDRSe7byHooR\/E5P8sP8AONWwf\/b6KwXBYMaWg8AslhS+EeA9lk1wOnggNeJoNe0tcJBBHry5LwjGE53NzF+VzmgkkkgEjivfFz3aLszSxLXFxDHi4qBozAXs78zfFR2Q3Lg0fZ2rjp5Pf0\/7Hjyy1HUeykbSwFShUNKo2HD0IOhB4hRQVWPqE1JJxN9Gu6ndji09LW5fvkplLb9cfOHeLR+kKGylmcRpaTxjy8SAmMw+R0Zg4RMjQ3ItzFrHkvJVqXLRFmpy2P8AFjJb0+09T5mNPgS37rsML2wa1rWmk6wAs4HQRxAXmlAS5o6j3XQGk7Ug8foYPobKpbFQ\/AiG\/S0Twp\/udvT7YUDq2oPIH2KkM7UYY\/OR4td9l56voE25qHxGV5eyqPV\/f0O+2rjqbw3K6deB6dFVYljKjHU3E5XNLTEgwRB+i6n8DS\/8bP8AaPsqjb9BrMuRoBh+lpIAidOKn8SUej59aeqyfnn6EBuUFzpu4gnTgAOA5Dj9oy7wc1FpB5nM0DSIMk85HAzFpPieGS4s1M4yw0TQ9mVzW7cybiMF3jWO\/DirkpvLHZi0ioHHKBDhBvr11EXudjOqd3FSl3JacrW5g\/dAEGQT162VIzG1GUwGU31Pjs1xAENlvq4tHgXH5SrDD1C5rXOBaSAS0mS0kXB8FJO9utNrgj8DbJxT6LDG0rFwFx5WVaXid4iToJ5f8rNx4cDc+X9z9FW7WNB4FOoA4OOUw4jKCWuzS3QhzGGbRGqhilZJL9iRJxRIxDTnaWU2HXMS0ZtJbExG+GHXhwgL5gX18ru9azNIyhptGRk5je\/ed5pwjXUx8Nt+kYDyKZMQCZJOZzY0mYa0+D2qaMfTm+YjoPuljlH4JJfmztVv8SyUR7K1673PqYmM2uUEtAGjdRpOitNndjaVKM1V7rzG60TbSxPAWnguhw78zQWwB0vHosqlMkEODSOo18Qrz1lzjtzx8kkZ\/u9aluxz+bK9nZ3CggmixxAjeGa39VuK+swDRUzUxkIkbgyW4CBuu8wdPFbyXss2X\/yky7ycdR4+o0UbFbVoYchzw7M4OkhsEZcsgi2WcwIOhjXSe6N83uk+DrbFdI17cpuzUmuxbqWZ2QBggvLiMs3t8wnQlzeMAy9g7SZVYGteajmiXuyuaCS5wJAOgzNdAkwIU2k5lVjXZQQRIByu+oJB8QStlLDsaSWta0nUgAE8bx4n1Vw8NiIiAIiIAiIgK3bNLM2LfEDcgcHc1q2dhHZAA\/LDnE5YdMsyiY0gkHyCmYxs6cx7OWttFuU94YAcTMxEsya+Dj6qHL8XGPI8285NuHw7wQX1C4gOGkAyREgWtB9VKULDYVjC12dziAWAudM5nA+stAUwlTHpyfa3a1Wm1tJgLA4A95PxCLtHLULkKL6glzC8TqWkieNyOo+i6XtBhMVlqOe5rqNiJiQBoGiLG58YVBh6YIBtIIdYmZYSG5hIFu8qEf1dFl3Jztw20fQaaUatPmKT557\/AMd\/IsezO1KgxLM9R7g7cOZxIvpqeceq9Ec2bLx9jyCCNQQR4hetYHECpTZUGjmg+oUuhsbTiyv7XpUZRml3\/BzfbbsxUxbqbqTmNLA4HNImS0i4B0g+q4raPY7FUGGq8Nc1uuQlx8YyzC9gRXJVp8laj2jdTFQXSPBMDWa14c8Et4hpgnzVjX2jSeczg5xsCS1pJAZlOptvQ4cvCy9C7QdiqFeXs\/hVObRuk\/zN\/UQvO9q9nMTQdlfScRwcwF7SPEC3gYULjKBsV36fVvLbUvTOCHh4dVkCBLiByFyB7Lom0WOIJySS5xdmyw52bMY6wP8AdwNlz+zWw8zaAdfJdB\/2qvAPc1IMQcpi+l9FTnZKM+Fnj5k+pqrnjdLGOuv5Ijh7DjMGBInjdbsC2atMc3tHq4KS\/YmIH+S\/y3vZbdlbPqivSzU3tAe0klpAsQeXRVMPd0dO6HhvEk+PVeh6OoG08B3kEGC2ddDPhceKnopuz5SMnF5Rx1XYJZlJp5ssx84G+2p9HNaR4LIYSpMZHT\/pK69FzZHf+Jss16pwXCRzOHwxcwtJc2HAkCAbFpEyJ1C2YbAZHuf3tR2bNuuILRmLTugNBEZYF9CtnazGuosY9gEl2W4m0E\/ouXPaGvzaP6Vw5SitifBZq0s9QvESKDtVtHv67vys3G8RY3PmfYKqZTkQBOlgJ4FbNpOPePOpJLj53PupGxzvWLR8JBcSLghwiOMgQtGCWEkbmfCp+FdIhiWnkQfAghehYWpna1w+YA+oXLYzZoc8uDoaQBIAgkBxvfjlA8SOOtlsJ\/8Ah3ZpeKb3QGiTYW4EcTc6TqodTTuxn1Kd2ojZXvj2u1+Z0uBxrqR6HVv6jrCvmYwWdO4\/4TxzflPUkW625TyFEBh7prXw2+Z0kHMDUNyZJl1xwJHl0PZ3DhwfmEtFgOpFz4xlUVNUlZ4b6\/gydQoTh4i78y7oMIknU38By\/fNRtoYes5zDSqZAM+YRObM2Gn+k36qBjMN\/Hb\/AIh85QMgzkHKXOlwa4Q4g20kt4gQrDZW1KeIaXUiSGkAyI1aHD6OC2EklhGcatiYWvTa4YisKpOXKQ3LlAY1pB\/NLg50\/wAyskRegIiIAiIgCIiAiYyplv1Hs5R6lamaZdV0zjSZnd5GY59Jmy+bbrZGzAO8BeRwdyK1YHHAUS8sJ34ytBd+W95\/YVbd\/wBjHyJdj8Pd8zbSq4cZnNi9QB2sl4fyP8xOitFXvx7QHnunktdBGXUyRI5i0+nEqwVkiPOO1LKhql7sxZDQ0lpDQIMDxnN9VU4agaj2saJLjAXp2Pp0TSHf5cgh29pIB9bTZc7gNiOLziKI7sEgUmukEMIgvdxJ4hp5+SzrtK3ZnPZuab2io07WsNLhlXs7szUrML2y0fLnEBw52Mi\/RdTs3DYnD0hThlUNB0Ja65m02IBMahXYC+q1Xp4Q5XZnXa2y5Yl16ffJRbL7QBx7uuBTeLTo0ka6\/Cf3KvGuBEgyDxCg7S2TTrDeEO\/MNbe6k4TDtpsDG\/C2wvKlWV2V5OL5RuRajVOYNyki8utAiNbzeeA4FZMqAzBBgwYvB5HqujjB8qUGu+JoPiAfdZgRYKDXx721m0hRe5romoPhE5rHjO6Om8LqegND25fD2\/si2vbIhaSHaRfnw8f7KlfQ85ijpMyXPU3UW4mo9oq52locAGhhNYtZIBgnLlBzHSX5ZlwXQupkXBJ6GF8BUW11fi8z3s1YSuKjGvAIzCYMSOhgkfVbkXwlQPvg9K3tJRa7DVM1oGYHq24+3mvNA65HIA+s\/ZepYnBurU3MccjXWt8RE9dP3oueb2PpGq6KxicoaYzSBmMGeGY2hSS0tj5SNTQa2umDjNnBN2WTO8SbmzZ\/VYbO2HiKm62k+HbzXFpDYBE35DN9Qu5p9ka7ahDXgMsMwMEtJvYctYJuuowWHqCm1rgA6mQAcxcHiLk2kTLrcDCsUQm8+IWdT7TUUvCaZxeyuxVN9Nr3062YgEtcWtg8eStsLsOlTGSmHMvcEkkn+pTtk4jEteRiq9AhoeHBpAIyspGTYEES5xHAVB0V1h6tKpv0yx8GMzSDB5SON9Oq9s0in\/UzLlr7pPlnPnZrRY5p8vsrPZEM3OB9wL+o9lNxlIFpJ1AJB8lQ1sS4OADTlgHODMFxIENAM6TPCyq+DLT2px5X8HLtdsPiOlLQdQvjWAaADwWvCVczATrx8Rqty1U01lFQIiL0BERAEREAREQFD2srvZSzUxJztHwh9odwIK+dmMTVdQzOaC7vI+EMAG7JgAcJWHbSjiH0Iw2fvM7TuOynLDpvItonY+hiW4cCuXB\/eOJ7w53FkCIOYxfx4+Ki2vxN3yLnw+6+Wd31\/wDC0Zia0waPyAyHD4uLb+6k4dzi1pcAHRccAeixoMeCczgRwAERc\/vyW9SlMh08Cww9wzGBGYzl0+EaN0GimLCl8I8B7LNBkIiIAiIgC0VsKDMS0kzLbGevPzW9EBzrqzX4ptE16gqUgbENDKmZlyYAkw6Y03RHGbXZeA7luXO5\/wAN3En4WNZaSYG7PiTqbrezCsD3VA0ZnRLouYEC\/gty5in5nc3Fv4fthERdHAUciDHA6fZSFhUZPjr+\/qorYb44PUyPiKuUTx0A5k6BZYfCxvOOZxMk8AYiw\/Z1WGIBjQyCDa+hBUxRaavanlcnrYXP46kG4im9uGe8h5\/iZ3wzOIe4NEiIAtxvpx6BFaOSr2RtKrVLhUw7qOXQkyHbzm2sODQf6vCbREQFe\/YlAuLzTGYhzZBcDD2sa4WOhbTYP6QpGEwTKWbu25c7y91yZc7U300FlIRAfHCbFUWMwbmvbchrTmHJ1iIMQZvzgxpqr5YVmNI3gI6qK2veuOzqMsMqdgUjTApZ3PsTLjJJzT9JgdAFcqFg8KWuzEyII05kfoFNXlEZqGJ9ns2m+AiIpjgIiIAiIgCIiAr9qMcRDJmRpyhy0UKFfu91+RwfJzDNLYFuY46L6iAzr0cUTu1GAQLFvEC\/DifpyVjTmBmiYExpPGERAfKXwjwHss0RAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREB\/9k=',width=400,height=400)","798ffcd8":"#Codes Fedi Ben Messaoud https:\/\/www.kaggle.com\/fedi1996\/covid-19-before-and-after-quarantine","37933d13":"#3D","478fc371":"#Codes from Omar Hany https:\/\/www.kaggle.com\/omarhanyy\/using-matplotlib-seaborn-and-plotly\/comments","ce8a87b0":"Das War's, Kaggle Notebook Runner: Mar\u00edlia Prata  @mpwolke ","6a7e787e":"#What Goes Into the Education Score?\n\nHigher Education\n\nThe higher education ranking tracks educational attainment, graduation rates, college debt and tuition costs.\nSee Higher Education Rankings\n\n\n\nPre-K - 12\n\nThis ranking measures enrollment in pre-K, standardized test scores and the public high school graduation rate.\nSee Pre-K - 12 Rankings https:\/\/www.usnews.com\/news\/best-states\/rankings\/education","d52a079c":"The US states were ranked on performance in higher education as well as primary and secondary schooling and pre-K education. The measures included percentages of adults with associate degrees or higher, the rates of students completing public four-year and two-year college programs within 150 percent of the normal time, the average tuition and fees for in-state students at public institutions and the average debt load of graduates from public and private colleges. The states also were ranked on percentages of children enrolled in preschool and compared in national testing of eighth-graders in math and reading, in rates of graduation from high school and readiness for college. https:\/\/www.usnews.com\/news\/best-states\/rankings\/education","967e4c07":"intmath.com","7766aa66":"#Working with columns that have single quotes (as Bachelor's). Use the tolist. \n\nWhenever appears double quotes copy the columns name (including the double quotes) and don't use simple quotes when you write the column name as below i.e.\n\n\"Bachelor's degree or higher\" NOT 'Bachelor's degree or higher'. Therefore, instead of use dytpes it would be better to run tolist below. ","e02e822e":"youtube.com","f99dca58":"![](http:\/\/www.intmath.com\/blog\/wp-content\/images\/2007\/04\/coc.gif)"}}