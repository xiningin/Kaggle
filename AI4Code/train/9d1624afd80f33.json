{"cell_type":{"1dfe34ca":"code","3e89f47d":"code","b103eff6":"code","e95a0abc":"code","bc366b20":"code","896b5fd0":"code","37c9fbdf":"code","5d2539c5":"code","deff694b":"code","d1b65f4e":"code","69feb83c":"code","29a62748":"code","f5e6e589":"code","161721b0":"code","bcca0085":"code","d4d778b8":"code","d5a94019":"code","3b6f2e6d":"code","58dc8d6b":"code","0c3df42e":"code","bb61f696":"code","cbc373f2":"code","7abfe3f3":"code","8201cd14":"code","53121b47":"code","32382256":"code","7f55abaf":"code","ca6dc1e2":"code","f586c8ee":"code","748c0261":"code","1578a99e":"code","f479c864":"markdown","5770a894":"markdown","934dea9c":"markdown","186a85a0":"markdown","240479cd":"markdown","7d58ffc9":"markdown","fd8a5c34":"markdown","5b52b4fd":"markdown","99f76544":"markdown","82056482":"markdown","c4582c91":"markdown","103500f2":"markdown","5dee82d3":"markdown","3159c03d":"markdown","a80e7db8":"markdown","90722854":"markdown","0e9de042":"markdown","ec624ef8":"markdown","5fdc6719":"markdown","495a5756":"markdown","a0acba7c":"markdown","9a37d381":"markdown","50b5f397":"markdown","18b8a069":"markdown","a7fde71a":"markdown"},"source":{"1dfe34ca":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3e89f47d":"# data_c = {'Obs':[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],'Reject':[5,1,0,6,3,2,3,4,5,1,2,2,3,0,5,2,1,0,0,1,2,4,1,3,2,0,1,2,3,1]}\ndc = pd.read_csv('..\/input\/rejectproduct-c\/rejectproduct_c.csv')\nprint(dc)","b103eff6":"cl = sum(dc['Reject']) \/ len(dc['Obs'])\nucl = cl + 3*cl**(1\/2)\nlcl = cl - 3*cl**(1\/2)\nif lcl < 0:\n    lcl = 0\nprint('Center Line : ',cl)\nprint('Upper Control Limit : ',ucl)\nprint('Lower Control Limit : ',lcl)","e95a0abc":"Ucl = []\nLcl = []\nccl = []\nrej = []\nobs = []\n\nfor j in range(len(dc['Obs'])):\n    ccl.append(cl)\n    Ucl.append(ucl)\n    Lcl.append(lcl)\n    rej.append(dc['Reject'][j])\n    obs.append(j+1)\n    j+=1","bc366b20":"d_cl = {'Obs':obs,'UCL':Ucl,'CL':ccl,'REJ':rej,'LCL':Lcl}\ndcl = pd.DataFrame(d_cl)\nprint(dcl)","896b5fd0":"dclc = dcl.plot(title='c-Chart', x='Obs')\ndclc","37c9fbdf":"dcl.to_csv('c-Chart.csv')\nfig = dclc.get_figure()\nfig.savefig('c-Chart.png')","5d2539c5":"# data_u = {'Sample':[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50],'Reject':[4,2,5,3,2,1,3,2,5,4,3,5,5,2,3,2,4,10,4,3,2,5,4,3,4]}\ndu = pd.read_csv('..\/input\/rejectproduct-us\/rejectproduct_us.csv')\nprint(du)","deff694b":"cl = sum(du['Reject']) \/ sum(du['Sample'])\nn_ = sum(du['Sample']) \/ len(du['Sample'])\nprint('Center Line : ',cl)\nprint('Sample Mean : ',n_)","d1b65f4e":"ucl = []\nlcl = []\nccl = []\nrej = []\nobs = []\nfor i in du['Sample']:\n    res_u = cl + 3*(cl\/i)**(1\/2)\n    res_l = cl - 3*(cl\/i)**(1\/2)\n    if res_l < 0:\n        res_l = 0\n    ucl.append(res_u)\n    lcl.append(res_l)\n    \nfor j in range(len(du['Sample'])):\n    res_rej = du['Reject'][j] \/ du['Sample'][j]\n    ccl.append(cl)\n    rej.append(res_rej)\n    obs.append(j+1)\n    j+=1","69feb83c":"d_cl = {'Obs':obs,'UCL':ucl,'CL':ccl,'REJ':rej,'LCL':lcl}\ndcl = pd.DataFrame(d_cl)\nprint(dcl)","29a62748":"dclc = dcl.plot(title='u-Chart Constant Sample Method', x='Obs')\ndclc","f5e6e589":"dcl.to_csv('u-Chart_samesample1.csv')\nfig = dclc.get_figure()\nfig.savefig('u-Chart_samesample1.png')","161721b0":"for k in range(len(dcl['REJ'])):\n    if dcl['UCL'][k]<dcl['REJ'][k]:\n        du.drop([k],inplace=True)\n    elif dcl['LCL'][k]>dcl['REJ'][k]:\n        du.drop([k],inplace=True)\n\ndu = du.reset_index()\nprint(du)","bcca0085":"cl = sum(du['Reject']) \/ sum(du['Sample'])\nn_ = sum(du['Sample']) \/ len(du['Sample'])\nprint('Center Line : ',cl)\nprint('Sample Mean : ',n_)","d4d778b8":"ucl = []\nlcl = []\nccl = []\nrej = []\nobs = []\nfor i in du['Sample']:\n    res_u = cl + 3*(cl\/i)**(1\/2)\n    res_l = cl - 3*(cl\/i)**(1\/2)\n    if res_l < 0:\n        res_l = 0\n    ucl.append(res_u)\n    lcl.append(res_l)\n    \nfor j in range(len(du['Sample'])):\n    res_rej = du['Reject'][j] \/ du['Sample'][j]\n    ccl.append(cl)\n    rej.append(res_rej)\n    obs.append(j+1)\n    j+=1","d5a94019":"d_cl = {'Obs':obs,'UCL':ucl,'CL':ccl,'REJ':rej,'LCL':lcl}\ndcl = pd.DataFrame(d_cl)\nprint(dcl)","3b6f2e6d":"dclc = dcl.plot(title='u-Chart Constant Sample Method (Revision)', x='Obs')\ndclc","58dc8d6b":"dcl.to_csv('u-Chart_samesample2.csv')\nfig = dclc.get_figure()\nfig.savefig('u-Chart_samesample2.png')","0c3df42e":"# data_u = {'Sample':[20,30,25,15,25,10,20,15,15,25,30,25,25,25,10,20,20,10,30,20],'Reject':[5,14,8,8,12,6,20,10,6,10,9,16,12,10,6,8,5,5,14,8]}\ndu = pd.read_csv('..\/input\/rejectproduct-ui\/rejectproduct_ui.csv')\nprint(du)","bb61f696":"cl = sum(du['Reject']) \/ sum(du['Sample'])\nn_ = sum(du['Sample']) \/ len(du['Sample'])\nprint('Center Line : ',cl)\nprint('Sample Mean : ',n_)","cbc373f2":"ucl = []\nlcl = []\nccl = []\nrej = []\nobs = []\nfor i in du['Sample']:\n    res_u = cl + 3*(cl\/i)**(1\/2)\n    res_l = cl - 3*(cl\/i)**(1\/2)\n    if res_l < 0:\n        res_l = 0\n    ucl.append(res_u)\n    lcl.append(res_l)\n    \nfor j in range(len(du['Sample'])):\n    res_rej = du['Reject'][j] \/ du['Sample'][j]\n    ccl.append(cl)\n    rej.append(res_rej)\n    obs.append(j+1)\n    j+=1","7abfe3f3":"d_cl = {'Obs':obs,'UCL':ucl,'CL':ccl,'REJ':rej,'LCL':lcl}\ndcl = pd.DataFrame(d_cl)\nprint(dcl)","8201cd14":"dclc = dcl.plot(title='u-Chart Individual Method', x='Obs')\ndclc","53121b47":"dcl.to_csv('u-Chart_individual1.csv')\nfig = dclc.get_figure()\nfig.savefig('u-Chart_individual1.png')","32382256":"for k in range(len(dcl['REJ'])):\n    if dcl['UCL'][k]<dcl['REJ'][k]:\n        du.drop([k],inplace=True)\n    elif dcl['LCL'][k]>dcl['REJ'][k]:\n        du.drop([k],inplace=True)\n\ndu = du.reset_index()\nprint(du)","7f55abaf":"cl = sum(du['Reject']) \/ sum(du['Sample'])\nn_ = sum(du['Sample']) \/ len(du['Sample'])\nprint('Center Line : ',cl)\nprint('Sample Mean : ',n_)","ca6dc1e2":"ucl = []\nlcl = []\nccl = []\nrej = []\nobs = []\nfor i in du['Sample']:\n    res_u = cl + 3*(cl\/i)**(1\/2)\n    res_l = cl - 3*(cl\/i)**(1\/2)\n    if res_l < 0:\n        res_l = 0\n    ucl.append(res_u)\n    lcl.append(res_l)\n    \nfor j in range(len(du['Sample'])):\n    res_rej = du['Reject'][j] \/ du['Sample'][j]\n    ccl.append(cl)\n    rej.append(res_rej)\n    obs.append(j+1)\n    j+=1","f586c8ee":"d_cl = {'Obs':obs,'UCL':ucl,'CL':ccl,'REJ':rej,'LCL':lcl}\ndcl = pd.DataFrame(d_cl)\nprint(dcl)","748c0261":"dclc = dcl.plot(title='u-Chart Individual Method (Revision)', x='Obs')\ndclc","1578a99e":"dcl.to_csv('u-Chart_individual2.csv')\nfig = dclc.get_figure()\nfig.savefig('u-Chart_individual2.png')","f479c864":"### **Create Data Frame**","5770a894":"### **Discard Data that Lies Outside The Control Limits and Reset The Index**","934dea9c":"## **Constant Sample Method**","186a85a0":"### **Create Data Frame from Previous Lists**","240479cd":"### **Plot the Data Frame with Line Chart**","7d58ffc9":"### **Import Library Packages**","fd8a5c34":"### **Plot the Data Frame with Line Chart**","5b52b4fd":"### **Create Lists of Observation Day, Upper Control Limit, Lower Control Limit, Center Line, and Rejected Product**","99f76544":"### **Create Data Frame from Previous Lists**","82056482":"### **Define Center Line and Sample Mean**","c4582c91":"### **Create Lists of Observation Order, Upper Control Limit, Lower Control Limit, Center Line, and Rejected Product**","103500f2":"## **Individual Method**","5dee82d3":"### **Create Data Frame**","3159c03d":"### **Create Lists of Observation Order, Upper Control Limit, Lower Control Limit, Center Line, and Rejected Product**","a80e7db8":"# **ATTRIBUTE DATA CONTROL CHART**\nAttribute control chart is used to describe the quality profile of a product in general. The characteristics of the attribute control chart are reject or not reject without the need for special specifications.","90722854":"### **Create Data Frame from Previous Lists**","0e9de042":"### **Define Center Line and Sample Mean**","ec624ef8":"# **u-Chart**\n- It is necessary to know the number of errors for one unit of product.\n- Measure non-conformance (specific point) per unit of inspection report in the group (period) of observation.","5fdc6719":"### **Create Data Frame**","495a5756":"# **c-Chart**\n- Used to test the quality of the production process by knowing the number of errors in one product unit as a sample.","a0acba7c":"### **Plot the Data Frame with Line Chart**","9a37d381":"### **Make Revisions Using New Data Frame** ","50b5f397":"### **Define Center Line, Upper Control Limit, and Lower Control Limit**","18b8a069":"### **Discard Data that Lies Outside The Control Limits and Reset The Index**","a7fde71a":"### **Make Revisions Using New Data Frame** "}}