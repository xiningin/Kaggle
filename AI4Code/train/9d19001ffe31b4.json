{"cell_type":{"efc89f91":"code","ef38d5cd":"code","b97e4e8a":"code","5144a572":"code","76ed4c65":"code","17813957":"code","7cff206c":"code","bc37af09":"code","a8f61d83":"code","83b1e0c5":"code","8cf81352":"code","4fec88c4":"code","7a9a2581":"code","7d8cc1c0":"code","45a404c9":"code","d67a6623":"code","63a7bb64":"code","02ec6bca":"code","b8e2422a":"code","144535de":"code","813e357b":"code","c591f3d8":"code","6a4970ec":"code","1d49ecfd":"code","5745c0cc":"code","526356b0":"code","f601359b":"code","688cc5c0":"code","607af791":"code","25b8672a":"code","65c5d1be":"code","30ce4462":"code","f722b284":"code","00bd5bbd":"code","8835b3c9":"code","a919cbf6":"code","1410ae0b":"code","437a0bb5":"code","76845152":"code","03134bc4":"code","a1e6f746":"code","0ee1b27d":"markdown","8a7d8ecf":"markdown","6a661de2":"markdown","63481d7f":"markdown","f10e3cc6":"markdown","80035822":"markdown","650aad67":"markdown","fb295d2c":"markdown","ea397c55":"markdown","d0e2e626":"markdown","d138af72":"markdown","c052c0d8":"markdown","a433d398":"markdown","9cac5521":"markdown","30067a06":"markdown","e0376512":"markdown","c7c09284":"markdown","e6f33f65":"markdown","41038c9f":"markdown","ae8be077":"markdown"},"source":{"efc89f91":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ef38d5cd":"data = pd.read_csv('..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\ndata.head()","b97e4e8a":"data.describe()","5144a572":"data.info()","76ed4c65":"death = data[data['DEATH_EVENT']==1]\ndeath.head()","17813957":"non_heart_death = data[data['DEATH_EVENT']==0]\nnon_heart_death.head()","7cff206c":"import seaborn as sns\nimport matplotlib.pyplot as plt","bc37af09":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',data=data,kind='count')\nplt.title(\"DEATH DISTRIBUTION\")\nplt.show()","a8f61d83":"plt.figure(figsize=(8,8))\nsns.distplot(death['age'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['age'],kde=False,label='No Heart Failure Death')\nplt.title('Age Distribution')\nplt.legend()\nplt.show()","83b1e0c5":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',data=data,kind='count',hue='anaemia')\nplt.title('Amnesia Distibution')\nplt.show()","8cf81352":"label = ['Anaemia Patients','Non Anemia Pateints']\nvalues = [len(death[death['anaemia']==1]),len(death[death['anaemia']==0])]\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=label,startangle=90,autopct='%1.1f%%')\nplt.show()","4fec88c4":"plt.figure(figsize=(12,8))\nsns.distplot(death['creatinine_phosphokinase'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['creatinine_phosphokinase'],kde=False,label='Non Heart Failure Death')\nplt.title('Creatinine Phosphokinase Distibution')\nplt.legend()\nplt.show()","7a9a2581":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',hue='diabetes',data=data,kind='count')\nplt.title('Diabetes Distibution')\nplt.show()","7d8cc1c0":"label = ['Diabetic Patients','Non Diabetic Pateints']\nvalues = [len(death[death['diabetes']==1]),len(death[death['diabetes']==0])]\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=label,startangle=90,autopct='%1.1f%%')\nplt.show()","45a404c9":"plt.figure(figsize=(8,8))\nsns.distplot(death['ejection_fraction'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['ejection_fraction'],kde=False,label='Non Heart Failure Death')\nplt.title('Ejection Fraction  Distibution')\nplt.legend()\nplt.show()","d67a6623":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',data=data,hue='high_blood_pressure',kind='count')\nplt.title('High Blood Pressure Distibution')\nplt.show()","63a7bb64":"label = ['Patient with High Blood Pressure','Patient with Normal Blood Pressure']\nvalues = [len(death[death['high_blood_pressure']==1]),len(death[death['high_blood_pressure']==0])]\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=label,startangle=90,autopct='%1.1f%%')\nplt.show()","02ec6bca":"plt.figure(figsize=(8,8))\nsns.distplot(death['platelets'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['platelets'],kde=False,label='Non Heart Failure Death')\nplt.title('Platelets Distibution')\nplt.legend()\nplt.show()","b8e2422a":"plt.figure(figsize=(8,8))\nsns.distplot(death['serum_creatinine'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['serum_creatinine'],kde=False,label='Non Heart Failure Death')\nplt.title('Serum Creatinine Distibution')\nplt.legend()\nplt.show()","144535de":"plt.figure(figsize=(8,8))\nsns.distplot(death['serum_sodium'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['serum_sodium'],kde=False,label='Heart Failure Death')\nplt.legend()\nplt.title('Serum Sodium Distibution')\nplt.show()","813e357b":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',data=data,hue='sex',kind='count')\nplt.title('Sex Distibution')\nplt.show()","c591f3d8":"label = ['Female ','Male']\nvalues = [len(death[death['sex']==1]),len(death[death['sex']==0])]\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=label,startangle=90,autopct='%1.1f%%')\nplt.show()","6a4970ec":"plt.figure(figsize=(8,8))\nsns.distplot(death['time'],kde=False,label='Heart Failure Death')\nsns.distplot(non_heart_death['time'],kde=False,label='Non Heart Failure Death')\nplt.legend()\nplt.title('Time Distibution')\nplt.show()","1d49ecfd":"plt.figure(figsize=(8,8))\nsns.catplot(y='DEATH_EVENT',data=data,hue='smoking',kind='count')\nplt.title('SMoking vs Death')\nplt.show()","5745c0cc":"label = ['Smoker ','Non-Smoker']\nvalues = [len(death[death['smoking']==1]),len(death[death['smoking']==0])]\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=label,startangle=90,autopct='%1.1f%%')\nplt.show()","526356b0":"from sklearn.model_selection import train_test_split\n\ny = data['DEATH_EVENT']\nX = data.drop('DEATH_EVENT',axis=1)","f601359b":"num_col = ['age','creatinine_phosphokinase','ejection_fraction','platelets','serum_creatinine','serum_sodium','time']\ncat_col = ['anaemia','diabetes','high_blood_pressure','sex','smoking']","688cc5c0":"num_data = data[num_col]\ncat_col = data[cat_col]","607af791":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nnum_data_tf = scaler.fit_transform(num_data)\nnum_data_tf = pd.DataFrame(num_data_tf,columns=num_data.columns)\nnum_data_tf.head()","25b8672a":"data_tf = pd.concat([num_data_tf,cat_col],axis=1)\ndata_tf.head()","65c5d1be":"from sklearn.ensemble import RandomForestClassifier\n\nclassifier = RandomForestClassifier()\nclassifier.fit(X,y)\nfeature_name = X.columns\nimportance_frame = pd.DataFrame()\nimportance_frame['Features'] = X.columns\nimportance_frame['Importance'] = classifier.feature_importances_\nimportance_frame = importance_frame.sort_values(by=['Importance'],ascending=True)\n\nlabels = importance_frame['Features']\nvalues = importance_frame['Importance']\n\nplt.figure(figsize=(8,8))\nplt.pie(values,labels=labels)\nplt.show()","30ce4462":"data_tf = data_tf[['age','ejection_fraction','platelets','serum_creatinine','time','creatinine_phosphokinase','serum_sodium']]","f722b284":"X_np = np.array(data_tf)\ny_np = np.array(y)","00bd5bbd":"from sklearn.model_selection import train_test_split\n\nX_train,X_test,y_train,y_test = train_test_split(X_np,y_np,test_size=0.2)","8835b3c9":"print('Train Data Shape:',X_train.shape)\nprint('Validation Data Shape:',X_test.shape)","a919cbf6":"from sklearn.linear_model import LogisticRegression,SGDClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import accuracy_score","1410ae0b":"models= [['Logistic Regression: ',LogisticRegression()],\n        ['KNearest Neighbor: ',KNeighborsClassifier()],\n        ['Decision Tree Classifier: ',DecisionTreeClassifier()],\n        ['Random Forest Classifier: ',RandomForestClassifier()],\n        ['Ada Boost: ',AdaBoostClassifier()],\n        ['SVM: ',SVC()],\n        ['XG Boost:',XGBClassifier()],\n        ['Cat Boost',CatBoostClassifier(logging_level='Silent')]]\n\nfor name,model in models:\n    model = model\n    model.fit(X_train,y_train)\n    print(name)\n    print('Validation Acuuracy: ',accuracy_score(y_test,model.predict(X_test)))\n    print('Training Accuracy: ',accuracy_score(y_train,model.predict(X_train)))\n    print('############################################')\n","437a0bb5":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout\nfrom tensorflow.keras.callbacks import ModelCheckpoint\nimport matplotlib.pyplot as plt","76845152":"filepath = 'weights_best.h5'\ncheckpoint = ModelCheckpoint(filepath,monitor='val_accuracy',verbose=1,save_best_only=True,mode='max')","03134bc4":"nn = Sequential()\nnn.add(Dense(128,activation='relu',input_shape=(7,)))\nnn.add(Dropout(0.4))\nnn.add(Dense(256,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(512,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(1024,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(512,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(256,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(128,activation='relu'))\nnn.add(Dropout(0.4))\nnn.add(Dense(1,activation='sigmoid'))\n\nnn.compile(optimizer='adam',metrics=['acc'],loss='binary_crossentropy')\n\nhistory = nn.fit(X_train,y_train,\n                epochs=50,\n                validation_data=(X_test,y_test),\n                callbacks=[checkpoint])\n\n","a1e6f746":"train_acc = history.history['acc']\ntest_acc = history.history['val_acc']\nepochs = [i for i in range(1,51)]\n\nplt.figure(figsize=(8,8))\nplt.plot(epochs,train_acc,label='Training Acuracies')\nplt.plot(epochs,test_acc,label='Validation Accuracies')\nplt.legend()\nplt.show()","0ee1b27d":"Most of Heart Failure are in Case of Female.","8a7d8ecf":"It seems being diabeties have no effect on Heart Failure","6a661de2":"Noramlizing the numerical Data","63481d7f":"Let's input our data ","f10e3cc6":"Most of the Heart Failure death have Low Creatine Phosphokinase.","80035822":"# Modelling","650aad67":"As we can see Neural Network also perform vey well having accuracy of around 86%.\nIf you like my work please Upvote. Peace Out.","fb295d2c":"We have 12 Features with some Categorical features like \"anaemia\",\"smoking\". We don't have any Null Value in our data.For further exploration and Visualization let's split our data into Death due to Heart Failure and Non Heart Failure Death.","ea397c55":"Let's see how does an Neural Network performs on our data","d0e2e626":"Most of Heart Failure Death have low follow-up period.","d138af72":"Let's use number of Different Alogorithms for Modelling this Data","c052c0d8":"As we can see, Random Forest  has best accuracy (95%)  followed by XG Boost (91.6%) and Cat Boost (90%)","a433d398":"Most of death due to Heart Failure is in the age between 50 and 60 years.","9cac5521":"It seems there is no correlation between the Having anaemia and Death due to heart failure.","30067a06":"Most of the Heart Failure Deaths have Ejection Fraction in range 30-40","e0376512":"Feature Importace","c7c09284":"About 1\/3 of death in our data is due to Heart Failure.","e6f33f65":"Heart Failure Death patients have lower Serum Sodium.","41038c9f":"Heart Failure Deaths have low platelets count.","ae8be077":"# EDA"}}