{"cell_type":{"e01cc606":"code","e29da825":"code","2a584b4e":"code","594d6a61":"code","61f67898":"code","5566f9a8":"code","bec78b86":"code","9ec85b65":"code","5247424d":"code","486faa27":"code","4ecc459e":"code","994c6223":"code","0b92f4f0":"code","dfe55f57":"code","897a2e76":"code","dab103eb":"code","c2fa1284":"code","d9e20cbe":"code","122844da":"code","4a7ad76f":"code","18794add":"code","1aba6ae2":"code","d40da6e2":"code","87a13315":"code","3145d205":"code","d15cc382":"code","289c7b43":"markdown","70e95f1a":"markdown","75351b60":"markdown","f9726d54":"markdown","431af3bf":"markdown","df1664fb":"markdown","43551881":"markdown","7f6eba20":"markdown","022eddd2":"markdown","ec36a3d4":"markdown","6ce48b94":"markdown","4bcb2c6c":"markdown","47d6505a":"markdown","c2ab64e8":"markdown","afb95a13":"markdown","0b21cc05":"markdown","463379c2":"markdown","5dc800f6":"markdown","e0fa9f84":"markdown","d7659e7a":"markdown","5254fe27":"markdown","fcfa5292":"markdown","7361e690":"markdown","899b9699":"markdown","f2984a92":"markdown","c72fbd6b":"markdown","cbecdabd":"markdown","bdb55ead":"markdown","41cd9407":"markdown","dee6ff09":"markdown","8906e6f2":"markdown","c5338543":"markdown","4c53994e":"markdown","18ca2ac5":"markdown","6d5e7b24":"markdown","1ad9fd58":"markdown","eeab9143":"markdown"},"source":{"e01cc606":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib import dates\nfrom datetime import datetime\nimport sklearn\nimport seaborn as sns","e29da825":"walmart_data = pd.read_csv('..\/input\/retail-analysis-with-walmart-sales-data\/WALMART_SALES_DATA.csv')\nwalmart_data.head()","2a584b4e":"# Convert date to datetime format \nwalmart_data['Date'] =  pd.to_datetime(walmart_data['Date'])\nwalmart_data.info()","594d6a61":"walmart_data.isnull().sum()","61f67898":"walmart_data[\"Day\"]= pd.DatetimeIndex(walmart_data['Date']).day\nwalmart_data['Month'] = pd.DatetimeIndex(walmart_data['Date']).month\nwalmart_data['Year'] = pd.DatetimeIndex(walmart_data['Date']).year\nwalmart_data","5566f9a8":"total_sales= walmart_data.groupby('Store')['Weekly_Sales'].sum().sort_values() \ntotal_sales_array = np.array(total_sales)\nplt.figure(figsize=(15,7))\nplt.xticks(rotation=0)\nplt.ticklabel_format(useOffset=False, style='plain', axis='y')\nplt.title('Total sales for each store')\nplt.xlabel('Store')\nplt.ylabel('Total Sales')\ntotal_sales.plot(kind='bar')","bec78b86":"walmart_data_std = pd.DataFrame(walmart_data.groupby('Store')['Weekly_Sales'].std().sort_values(ascending=False))\nwalmart_data_std.head(1).index[0] , walmart_data_std.head(1).Weekly_Sales[walmart_data_std.head(1).index[0]]","9ec85b65":"# Extracting the sales data for store number 14 and plotting its distribution\nplt.figure(figsize=(15,7))\nsns.distplot(walmart_data[walmart_data['Store'] == walmart_data_std.head(1).index[0]]['Weekly_Sales'])\nplt.title('The Sales Distribution of Store No.'+ str(walmart_data_std.head(1).index[0]))\nimport warnings\nwarnings.filterwarnings('ignore')","5247424d":"#Calculating the coefficient of mean to standard deviation\ncoef = pd.DataFrame(walmart_data.groupby('Store')['Weekly_Sales'].std() \/ walmart_data.groupby('Store')['Weekly_Sales'].mean())\ncoef = coef.rename(columns={'Weekly_Sales':'Coefficient of mean to standard deviation'})\ncoef_max = coef.sort_values(by='Coefficient of mean to standard deviation',ascending=False)\ncoef_max.head(7)","486faa27":"# Distribution of store 35 has maximum coefficient of mean to standard deviation\nplt.figure(figsize=(15,7))\nsns.distplot(walmart_data[walmart_data['Store'] == coef_max.head(1).index[0]]['Weekly_Sales'])\nplt.title('The Sales Distribution of Store No.'+str(coef_max.head(1).index[0]))\nimport warnings\nwarnings.filterwarnings('ignore')","4ecc459e":"# Sales for second and third quarter in 2012\nquarter_2_sales = walmart_data[(walmart_data['Date'] >= '2012-04-01') & (walmart_data['Date'] <= '2012-06-30')].groupby('Store')['Weekly_Sales'].sum()\nquarter_3_sales= walmart_data[(walmart_data['Date'] >= '2012-07-01') & (walmart_data['Date'] <= '2012-09-30')].groupby('Store')['Weekly_Sales'].sum()\n\n# Plotting the difference between sales for second and third quarterly\nplt.figure(figsize=(15,7))\nquarter_2_sales.plot(ax=quarter_3_sales.plot(kind ='bar'),kind='bar',color='g',alpha=0.2,legend=True)\nplt.legend([\"Q3' 2012\", \"Q2' 2012\"])\n","994c6223":"#Calculating Growth rate in Q3'2012\nquarter_2_sales= walmart_data[(walmart_data['Date'] >= '2012-04-01') & (walmart_data['Date'] <= '2012-06-30')].groupby('Store')['Weekly_Sales'].sum()\nquarter_3_sales= walmart_data[(walmart_data['Date'] >= '2012-07-01') & (walmart_data['Date'] <= '2012-09-30')].groupby('Store')['Weekly_Sales'].sum()\nquarterly_growth_rate = ((quarter_3_sales - quarter_2_sales )\/quarter_2_sales)*100\nquarterly_growth_rate.sort_values(ascending=False).head()\n","0b92f4f0":"plt.figure(figsize=(15,7))\nquarterly_growth_rate.sort_values(ascending=False).plot(kind='bar')","dfe55f57":"#Defining holiday dates\nSuper_Bowl =['12-2-2010', '11-2-2011', '10-2-2012']\nLabour_Day =  ['10-9-2010', '9-9-2011', '7-9-2012']\nThanksgiving =  ['26-11-2010', '25-11-2011', '23-11-2012']\nChristmas = ['31-12-2010', '30-12-2011', '28-12-2012']","897a2e76":"#Calculating mean sales on holidays : \nSuper_Bowl_Sales = (pd.DataFrame(walmart_data.loc[walmart_data.Date.isin(Super_Bowl)]))['Weekly_Sales'].mean()\nLabour_Day_Sales = (pd.DataFrame(walmart_data.loc[walmart_data.Date.isin(Labour_Day)]))['Weekly_Sales'].mean()\nThanksgiving_Sales = (pd.DataFrame(walmart_data.loc[walmart_data.Date.isin(Thanksgiving)]))['Weekly_Sales'].mean()\nChristmas_Sales = (pd.DataFrame(walmart_data.loc[walmart_data.Date.isin(Christmas)]))['Weekly_Sales'].mean()\nSuper_Bowl_Sales,Labour_Day_Sales,Thanksgiving_Sales,Christmas_Sales","dab103eb":"#Calculating mean sales on non-holidays :\nNon_Holiday_Sales = walmart_data[walmart_data['Holiday_Flag'] == 0 ]['Weekly_Sales'].mean()\nNon_Holiday_Sales","c2fa1284":"Mean_Sales = {'Super_Bowl_Sales' : Super_Bowl_Sales,\n              'Labour_Day_Sales': Labour_Day_Sales,\n              'Thanksgiving_Sales':Thanksgiving_Sales,\n              'Christmas_Sales': Christmas_Sales,\n              'Non_Holiday_Sales': Non_Holiday_Sales}\nMean_Sales ","d9e20cbe":"#Year-wise Monthly Sales\n\nplt.figure(figsize=(15,7))\nplt.scatter(walmart_data[walmart_data.Year==2010][\"Month\"],walmart_data[walmart_data.Year==2010][\"Weekly_Sales\"])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2010\")\nplt.show()\n\nplt.figure(figsize=(15,7))\nplt.scatter(walmart_data[walmart_data.Year==2011][\"Month\"],walmart_data[walmart_data.Year==2011][\"Weekly_Sales\"])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2011\")\nplt.show()\n\nplt.figure(figsize=(15,7))\nplt.scatter(walmart_data[walmart_data.Year==2012][\"Month\"],walmart_data[walmart_data.Year==2012][\"Weekly_Sales\"])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales in 2012\")\nplt.show()","122844da":"#Overall Monthly Sales\nplt.figure(figsize=(15,7))\nplt.bar(walmart_data[\"Month\"],walmart_data[\"Weekly_Sales\"])\nplt.xlabel(\"Months\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Monthly view of sales\")\nplt.show()","4a7ad76f":"#Yearly Sales\nplt.figure(figsize=(15,7))\nwalmart_data.groupby(\"Year\")[[\"Weekly_Sales\"]].sum().plot(kind='bar',legend=False)\nplt.xlabel(\"Years\")\nplt.ylabel(\"Weekly Sales\")\nplt.title(\"Yearly view of sales\")\nplt.show()","18794add":"#Detecting outliers :\nfig, axis = plt.subplots(4,figsize=(16,16))\nX = walmart_data[['Temperature','Fuel_Price','CPI','Unemployment']]\nfor i,column in enumerate(X):\n    sns.boxplot(walmart_data[column],ax=axis[i])\n    \nimport warnings\nwarnings.filterwarnings('ignore')","1aba6ae2":"# Dropping outliers     \nwalmart_data_clean = walmart_data[(walmart_data['Unemployment']<10) & (walmart_data['Unemployment']>4.5) & (walmart_data['Temperature']>10)]\nwalmart_data_clean","d40da6e2":"#Checking data for outliers\nfig, axis = plt.subplots(4,figsize=(16,16))\nX = walmart_data_clean[['Temperature','Fuel_Price','CPI','Unemployment']]\nfor i,column in enumerate(X):\n    sns.boxplot(walmart_data_clean[column], ax=axis[i])\n\nimport warnings\nwarnings.filterwarnings('ignore')\n    ","87a13315":"# Linear Regression :\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\nfrom sklearn.linear_model import LinearRegression\nX = walmart_data_clean[['Store','Fuel_Price','CPI','Unemployment','Day','Month','Year']]\nY = walmart_data_clean['Weekly_Sales']\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2)","3145d205":"print('Linear Regression:')\nprint()\nreg = LinearRegression()\nreg.fit(X_train, Y_train)\nY_pred = reg.predict(X_test)\nprint('Accuracy:',reg.score(X_train, Y_train)*100)\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))\nsns.scatterplot(Y_pred, Y_test)\n\nimport warnings\nwarnings.filterwarnings('ignore')","d15cc382":"# Random Forest Regressor\nfrom sklearn.ensemble import RandomForestRegressor\nprint('Random Forest Regressor:')\nprint()\nrfr = RandomForestRegressor()        \nrfr.fit(X_train,Y_train)\nY_pred = rfr.predict(X_test)\nprint('Accuracy:',rfr.score(X_test, Y_test)*100)\nprint('Mean Absolute Error:', metrics.mean_absolute_error(Y_test, Y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(Y_test, Y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(Y_test, Y_pred)))\nsns.scatterplot(Y_pred, Y_test)\n\n\nimport warnings\nwarnings.filterwarnings('ignore')","289c7b43":"   \n  ---","70e95f1a":" ### Data Preparation :","75351b60":"\nThis is the historical data that covers sales from 2010-02-05 to 2012-11-01, in which you will find the following fields:\n\n- Store - the store number\n\n- Date - the week of sales\n\n- Weekly_Sales -  sales for the given store\n\n- Holiday_Flag - whether the week is a special holiday week 1 \u2013 Holiday week 0 \u2013 Non-holiday week\n\n- Temperature - Temperature on the day of sale\n\n- Fuel_Price - Cost of fuel in the region\n\n- CPI \u2013 Prevailing consumer price index\n\n- Unemployment - Prevailing unemployment rate","f9726d54":" ### Analysis :","431af3bf":"##### 2) Which store has maximum standard deviation? i.e. the sales vary a lot. Also, find out the coefficient of mean to standard deviation.","df1664fb":"**Here, Linear Regression is not an appropriate model to use which is clear from it's low accuracy. However, Random Forest Regression gives accuracy of over 95% , so, it is the best model to forecast demand.**","43551881":"##### 1 ) Which store has maximum sales ?","7f6eba20":"**Clearly, from the above graph, it is visible that the store which has maximum sales is store number 20 and the store which has minimum sales is the store number 33.**","022eddd2":" \n  ---","ec36a3d4":" \n  ---","6ce48b94":"##### 5) Provide a monthly and semester view of sales in units and give insights.","4bcb2c6c":"**Thus, the store which has maximum coefficient of meanto standard deviation is store number 35.**","47d6505a":"##### Viewing Data Information :","c2ab64e8":"  ### Data Understanding : ","afb95a13":"##### Splitting date column into day, month and year :","0b21cc05":"##### Loading required libraries :","463379c2":" # **RETAIL ANALYSIS WITH WALMART DATA**\n     \n   ######                    **PYHTON PROJECT BY - RUTU PATEL**\n \n---","5dc800f6":"**Clearly, Thanksgiving has higher sales than the mean sales on non-holidays.**","e0fa9f84":"### Summary & Objective :","d7659e7a":"**Here, overall monthly sales are higher in the month of December while the yearly sales in the year 2011 are the highest.**","5254fe27":"**Holiday Events:**\n\n- Super Bowl: 12-Feb-10, 11-Feb-11, 10-Feb-12, 8-Feb-13\n\n- Labour Day: 10-Sep-10, 9-Sep-11, 7-Sep-12, 6-Sep-13\n\n- Thanksgiving: 26-Nov-10, 25-Nov-11, 23-Nov-12, 29-Nov-13\n\n- Christmas: 31-Dec-10, 30-Dec-11, 28-Dec-12, 27-Dec-13","fcfa5292":"**Here, there is no store which has performed better in the 3rd quarter as compared to the 2nd quarter.**","7361e690":"##### 4) Some holidays have a negative impact on sales. Find out holidays which have higher sales than the mean sales in non-holiday season for all stores together.","899b9699":"#####  For Store 1 \u2013 Build  prediction models to forecast demand : Linear Regression \u2013 Utilize variables like date and restructure dates as 1 for 5 Feb 2010 (starting from the earliest date in order). Hypothesize if CPI, unemployment, and fuel price have any impact on sales. Change dates into days by creating new variable. Select the model which gives best accuracy.","f2984a92":" \n  ---","c72fbd6b":"##### Checking for missing values :","cbecdabd":"Historical sales data for 45 Walmart stores located in different regions are available. There are certain events and holidays which impact sales on each day. The business is facing a challenge due to unforeseen demands and runs out of stock some times, due to inappropriate machine learning algorithm. Walmart would like to predict the sales and demand accurately. An ideal ML algorithm will predict demand accurately and ingest factors like economic conditions including CPI, Unemployment Index, etc. The objective is to determine the factors affecting the sales and to analyze the impact of markdowns around holidays on the sales.","bdb55ead":" \n  ---","41cd9407":" \n  ---","dee6ff09":"# ","8906e6f2":"##### 3) Which store\/s has good quarterly growth rate in Q3\u20192012 ?","c5338543":"**Clearly, from the above graph, it is evident that the store which has good quarterly sales in Q3\u20192012 is store no. 4.**","4c53994e":" \n  ---","18ca2ac5":"**Thus, the store which has maximum standard deviation is store number 14.**","6d5e7b24":" \n  ---","1ad9fd58":"##### Importing the dataset :","eeab9143":"\n\n  ---"}}