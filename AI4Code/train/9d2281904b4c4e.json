{"cell_type":{"25a77d11":"code","4760019c":"code","f87b0a86":"code","ce1c3677":"code","05efd036":"code","57d34971":"code","aa7a40b2":"code","cabd6f76":"code","a954e037":"code","34976d05":"code","4ef7b860":"code","3c998d83":"code","72d31292":"code","9e7f3924":"code","a79adf82":"code","63f64661":"code","e407885c":"code","4db0dbbe":"code","a3c1d1ab":"code","ba465dbe":"code","3468c8c1":"code","2fca654c":"code","90616106":"code","93268650":"code","cea8f5ab":"code","0eda0b43":"code","fdf9a2be":"code","4996340a":"code","30505c57":"code","511c35a0":"code","03d3f1b8":"code","6e3d2539":"code","4b4f6de8":"code","518a6afc":"code","868e2c36":"code","35e80dd3":"code","79b27ebe":"code","6deaf0b5":"code","ef83c769":"code","76f38f0d":"code","e53a654f":"code","a8fa1525":"code","8abab2a6":"code","c8745a20":"code","1a5bfc95":"code","e8ba13db":"code","955d37ff":"code","54c185ad":"code","62f04974":"code","1621fc36":"code","ac2c6836":"code","ee560959":"code","0d41752a":"code","79af10e8":"code","e991705d":"code","bcae01d4":"code","734face4":"code","515629bf":"code","4311f4a0":"code","c71c484b":"code","243234aa":"code","286956bd":"code","f9f9d5e8":"code","f7accb44":"code","2749c2b5":"code","0c3ac9c2":"code","89e06a9e":"code","5f4ba73b":"code","35d0640a":"code","75bf40ce":"code","5940f3b1":"code","148923fc":"code","9fcf54c9":"code","aecd61b0":"code","59aba370":"code","86610cb7":"code","311228d6":"code","a440967d":"markdown","0a144036":"markdown","76ce454a":"markdown","549c8635":"markdown","40efa8eb":"markdown","46e248a0":"markdown","55c6795e":"markdown","42817fb7":"markdown","66395209":"markdown","59639823":"markdown","cabfe757":"markdown","f0d900c2":"markdown","c3e48744":"markdown","530cd6ce":"markdown","0f302559":"markdown","05ab6b16":"markdown","738d9359":"markdown","a618fc3c":"markdown","4b74b876":"markdown","804f1c0a":"markdown","80cb5005":"markdown","87ccf01f":"markdown","f7d4edad":"markdown","2a2ea10f":"markdown","e71fd244":"markdown","86360d89":"markdown","9582dbb9":"markdown","39d5cb65":"markdown","2eb84401":"markdown","d70d0a4f":"markdown","dd8a189b":"markdown","cdcb19cf":"markdown","541c15b6":"markdown","a5938131":"markdown","34d5f1c5":"markdown","953f9752":"markdown","2a6f7596":"markdown","313bc8f0":"markdown","1b3bd205":"markdown","9c7579ff":"markdown","0423c3e0":"markdown","4672f424":"markdown","ebe8ca00":"markdown","3816fdb0":"markdown","91d641b7":"markdown","8afd4f6e":"markdown","95afe3a9":"markdown","2eb13756":"markdown","4a96e4fd":"markdown","79298f7e":"markdown","af1c6199":"markdown","a966230c":"markdown","ff911b15":"markdown","c6654d7c":"markdown","c8942866":"markdown","7423ea85":"markdown","b477dd1a":"markdown","b701cfff":"markdown","977e4bb3":"markdown","b6141d7e":"markdown","7a42d57c":"markdown","9a96d527":"markdown","7e81f38e":"markdown","95dc4ffe":"markdown","d4574563":"markdown","eec90265":"markdown","ebd7092f":"markdown","c3da4693":"markdown","b7a14491":"markdown","b5d53809":"markdown","496d66bd":"markdown","28b619b9":"markdown","1d4d4c13":"markdown","1fc0b046":"markdown","9e532527":"markdown","a9610b2b":"markdown","f02cfcb2":"markdown","f05dd6cc":"markdown","3bd2624c":"markdown","48a8f15c":"markdown"},"source":{"25a77d11":"!pip install pmdarima","4760019c":"pip install neuralprophet","f87b0a86":"pip install holidays","ce1c3677":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.metrics import mean_squared_error\n\nimport calendar\n\nimport holidays\n\nimport fbprophet\nfrom fbprophet import Prophet\n\nfrom neuralprophet import NeuralProphet\n\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nimport pmdarima as pm\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\n\nseed=42\n\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True)\nplt.rc(\"axes\", labelweight=\"bold\", labelsize=\"large\", titleweight=\"bold\", titlesize=14, titlepad=10)","05efd036":"def mape(y_true, y_pred): \n    y_true, y_pred = np.array(y_true), np.array(y_pred)\n    return np.mean(np.abs((y_true - y_pred) \/ y_true)) * 100","57d34971":"df = pd.read_csv('https:\/\/raw.githubusercontent.com\/pcm-dpc\/COVID-19\/master\/dati-regioni\/dpc-covid19-ita-regioni.csv', parse_dates=['data'])","aa7a40b2":"df.tail()","cabd6f76":"df.info()","a954e037":"df['data'] = pd.to_datetime(df['data']).dt.normalize()","34976d05":"today = df['data'].iloc[-1]\ntomorrow = today + pd.DateOffset(days=1)","4ef7b860":"df_italy=df.groupby('data').sum()","3c998d83":"plt.figure(figsize=(10,4))\nplt.title('COVID19 new cases in Italy', fontsize=20)\nplt.plot(df_italy['nuovi_positivi'])\nplt.text(df_italy.index[0],np.max(df_italy['nuovi_positivi'])-30000,\n         'Todays new cases:{}'.format(df_italy['nuovi_positivi'].iloc[-1]),\n         fontsize=20,\n         bbox=dict(facecolor='white', alpha=1))\nplt.ylabel('New cases')\nplt.show()","72d31292":"plt.figure(figsize=(13,6))\nplt.title('COVID19 new cases in Italy during the last 4 weeks', fontsize=30)\nplt.plot(df_italy[-28:].index, df_italy[-28:].nuovi_positivi, marker='o', color='red')\nplt.bar(df_italy[-28:].index, df_italy[-28:].nuovi_positivi, color='#000080', alpha=0.8)\nplt.ylabel('New Cases', fontsize=15)\nplt.text(df_italy[-29:].index[0],np.max(df_italy[-28:]['nuovi_positivi'])-5000,\n         'Todays new cases:{}'.format(df_italy['nuovi_positivi'].iloc[-1]),\n         fontsize=20,\n         bbox=dict(facecolor='white', alpha=1))\nplt.grid(visible=None, axis='x')\nplt.show()","9e7f3924":"is_holiday = [1 if x==True else 0 for x in [day in holidays.Italy() for day in df_italy.index]]","a79adf82":"df_italy['holiday'] = is_holiday","63f64661":"day = [calendar.day_name[day.weekday()] for day in df_italy.index]","e407885c":"df_italy['day'] = day","4db0dbbe":"idx=0 #index to move along the rows\ndf_4weeks = pd.DataFrame() #empty dataframe\ndf_italy_small = df_italy.iloc[-34:].iloc[::-1] #consider 34 rows (worst case)\n\nwhile(True):\n    if df_italy_small.iloc[idx:].day[0] == 'Sunday':\n        df_4weeks=df_italy_small.iloc[idx:idx+28]\n        break\n    else:\n        idx+=1","a3c1d1ab":"df_week1=df_4weeks.iloc[:7]\ndf_week1['week']='1 week ago'\n\ndf_week2=df_4weeks.iloc[7:14]\ndf_week2['week']='2 weeks ago'\n\ndf_week3=df_4weeks.iloc[14:21]\ndf_week3['week']='3 weeks ago'\n\ndf_week4=df_4weeks.iloc[21:28]\ndf_week4['week']='4 weeks ago'\n\ndf_4weeks_2 = pd.concat([df_week1, df_week2, df_week3, df_week4])","ba465dbe":"mean_1 = np.round(df_week1.nuovi_positivi.mean(),0)\nmedian_1 = np.round(df_week1.nuovi_positivi.median(),0)\nstd_1 = np.round(df_week1.nuovi_positivi.std(),0)\n\nmean_2 = np.round(df_week2.nuovi_positivi.mean(),0)\nmedian_2 = np.round(df_week2.nuovi_positivi.median(),0)\nstd_2 = np.round(df_week2.nuovi_positivi.std(),0)\n\nmean_3 = np.round(df_week3.nuovi_positivi.mean(),0)\nmedian_3 = np.round(df_week3.nuovi_positivi.median(),0)\nstd_3 = np.round(df_week3.nuovi_positivi.std(),0)\n\nmean_4 = np.round(df_week4.nuovi_positivi.mean(),0)\nmedian_4 = np.round(df_week4.nuovi_positivi.median(),0)\nstd_4 = np.round(df_week4.nuovi_positivi.std(),0)","3468c8c1":"df_stats = pd.DataFrame({'week':['1 week ago','2 weeks ago','3 weeks ago','4 weeks ago'],\n                         'mean':[mean_1,mean_2,mean_3,mean_4],\n                         'median':[median_1,median_2,median_3,median_4],\n                         'std':[std_1,std_2,std_3,std_4]})","2fca654c":"df_stats","90616106":"_, ax = plt.subplots(2,2,figsize=(14,9))\nplt.suptitle('Analysis of weekly COVID19 cases over last 4 weeks', fontsize=32)\n\n##PLOT 1\n\nsns.kdeplot(x='nuovi_positivi', data=df_week4, label='4 weeks ago', shade=1,ax=ax[0,0])\nsns.kdeplot(x='nuovi_positivi', data=df_week3, label='3 weeks ago', shade=1,ax=ax[0,0])\nsns.kdeplot(x='nuovi_positivi', data=df_week2, label='2 weeks ago', shade=1,ax=ax[0,0])\nsns.kdeplot(x='nuovi_positivi', data=df_week1, label='1 week ago', shade=1,ax=ax[0,0])\n\nax[0,0].axvline(mean_1, linewidth=1.5, color='red', linestyle='--')\nax[0,0].axvline(mean_2, linewidth=1.5, color='green', linestyle='--')\nax[0,0].axvline(mean_3, linewidth=1.5, color='orange', linestyle='--')\nax[0,0].axvline(mean_4, linewidth=1.5, color='blue', linestyle='--')\n\nax[0,0].legend(fontsize=13,fancybox=True, shadow=True, frameon=True, loc=\"upper left\")\nax[0,0].set_xlabel('New Cases', fontsize=15)\nax[0,0].set_title('New cases Distribution ', fontsize=20)\n\n##PLOT 2\ng = sns.barplot(y='mean', x='week', data=df_stats.iloc[::-1] ,ax=ax[0,1], ci=False)\ng.bar_label(g.containers[0], padding=2, fontsize=16, color='black')\nsns.lineplot(y='mean', x='week', data=df_stats.iloc[::-1], ax=ax[0,1], ci=False, color='black',linewidth=1, linestyle='--')\nax[0,1].set_ylabel('New Cases', fontsize=15)\nax[0,1].set_xlabel(' ')\nax[0,1].set_title('Mean cases', fontsize=20)\n\n##PLOT 3\ng = sns.barplot(y='median', x='week', data=df_stats.iloc[::-1] ,ax=ax[1,0], ci=False)\ng.bar_label(g.containers[0], padding=2, fontsize=16, color='black')\nsns.lineplot(y='median', x='week', data=df_stats.iloc[::-1], ax=ax[1,0], ci=False, color='black',linewidth=1, linestyle='--')\nax[1,0].set_ylabel('New Cases', fontsize=15)\nax[1,0].set_xlabel(' ')\nax[1,0].set_title('Median cases', fontsize=20)\n\n##PLOT 4\ng = sns.barplot(y='std', x='week', data=df_stats.iloc[::-1] ,ax=ax[1,1], ci=False)\ng.bar_label(g.containers[0], padding=2, fontsize=16, color='black')\nsns.lineplot(y='std', x='week', data=df_stats.iloc[::-1], ax=ax[1,1], ci=False, color='black',linewidth=1, linestyle='--')\nax[1,1].set_ylabel('New Cases', fontsize=16)\nax[1,1].set_xlabel(' ')\nax[1,1].set_title('Weekly Standard Deviation', fontsize=20)\n\n\nplt.show()","93268650":"df = df_italy.copy()","cea8f5ab":"df = df[['nuovi_positivi','holiday']]","0eda0b43":"df.head()","fdf9a2be":"prediction_window = 28 #testing window (4 weeks of data)\nforecast_window = 7 # forecasting window (1 week)\nwindow = prediction_window + forecast_window #prediction + forecasting window","4996340a":"df_p = df['nuovi_positivi'].reset_index().copy()\ndf_p = df_p.rename(columns={'data': 'ds', 'nuovi_positivi': 'y'})","30505c57":"prophet_model = Prophet(n_changepoints=50, # hyperparameter\n                        seasonality_mode='multiplicative',\n                       changepoint_prior_scale=10) # hyperparameter","511c35a0":"prophet_model.add_seasonality('weekly', period = 7, fourier_order = 5)\nprophet_model.add_seasonality('yearly', period = 365, fourier_order = 25)","03d3f1b8":"prophet_model.add_country_holidays(country_name='Italy')","6e3d2539":"prophet_model.fit(df_p)","4b4f6de8":"future = prophet_model.make_future_dataframe(periods=forecast_window)","518a6afc":"forecast = prophet_model.predict(future)","868e2c36":"prophet_model.plot(forecast);\nplt.title(\"COVID19 new cases in Italy with forecasting by Prophet\", fontsize=23)\nplt.ylabel(\"New cases\", fontsize=15)\nplt.xlabel('')\nplt.show()","35e80dd3":"fig = prophet_model.plot_components(forecast)","79b27ebe":"forecast_df = forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']]","6deaf0b5":"forecast_df","ef83c769":"plt.figure(figsize=(15,5))\nplt.title('COVID19 new cases in Italy with forecasting by Prophet', fontsize=22)\n#Actual cases\nplt.plot(df[-prediction_window:].index, df[-prediction_window:]['nuovi_positivi'], label='Actual cases', marker='o')\n\n#PROPHET\nplt.plot(forecast_df[-window:]['ds'],forecast_df[-window:]['yhat'],color='#006400',label='PROPHET', marker='o')\nplt.fill_between(forecast_df[-forecast_window-1:]['ds'], forecast_df[-forecast_window-1:]['yhat_lower'],forecast_df[-forecast_window-1:]['yhat_upper'], color='lightgreen', alpha=0.5)\n\nplt.axvline(today, linewidth=1.5, color='red', linestyle=\"--\")\nplt.legend(loc='upper left', fontsize=14, fancybox=True, shadow=True, frameon=True)\nplt.ylabel('New cases', fontsize=20)\nplt.xticks(forecast_df[-prediction_window-forecast_window:]['ds'], rotation=80, fontsize=14)\nplt.yticks(fontsize=15)\n\nplt.grid(visible=None, axis='x')\nplt.show()","76f38f0d":"mape_prophet = mape(forecast_df[-forecast_window-prediction_window:-forecast_window]['yhat'],df_p[-prediction_window:]['y'])\nrmse_prophet = mean_squared_error(forecast_df[-forecast_window-prediction_window:-forecast_window]['yhat'],df_p[-prediction_window:]['y'], squared=False)\n\nprint('PROPHET RMSE: {:.0f} Cases'.format(rmse_prophet))\nprint('PROPHET MAPE: {:.1f} %'.format(mape_prophet))","e53a654f":"m = NeuralProphet(\n    n_changepoints=50,\n    yearly_seasonality=False,\n    weekly_seasonality=False,\n    daily_seasonality=False,\n    seasonality_mode=\"multiplicative\",\n    n_forecasts=forecast_window,\n    n_lags=forecast_window,\n    learning_rate=1.0,\n)","a8fa1525":"m.add_seasonality('weekly_custom', period = 7, fourier_order = 5)\nm.add_seasonality('yearly_custom', period = 365, fourier_order = 20)","8abab2a6":"m.add_country_holidays(country_name='Italy')","c8745a20":"metrics = m.fit(df_p, freq=\"D\")","1a5bfc95":"future = m.make_future_dataframe(df_p, periods=forecast_window, n_historic_predictions=len(df_p)-forecast_window)\nforecast_df_nn = m.predict(future)","e8ba13db":"forecast_plot = m.plot(forecast_df_nn)\nplt.title(\"COVID19 new cases in Italy with forecasting by Neural Prophet\", fontsize=26)\nplt.xlabel(\"\")\nplt.ylabel(\"New cases\", fontsize=15)\nplt.show()","955d37ff":"fig2 = m.plot_components(forecast_df_nn)","54c185ad":"forecast_plot = m.plot(forecast_df_nn.iloc[-prediction_window:])\nplt.title(\"New COVID cases in Italy by Neural Prophet (last 2 weeks)\", fontsize=20)\nplt.xlabel(\"Date\")\nplt.ylabel(\"New cases\")\nplt.show()","62f04974":"for i in range(7):\n    col = 'yhat' + str(i+1)\n    mape_test = mape(forecast_df_nn.iloc[-window:-forecast_window][col],df_p.iloc[-prediction_window:]['y'])\n    rmse_test = mean_squared_error(forecast_df_nn.iloc[-window:-forecast_window][col],df_p.iloc[-prediction_window:]['y'], squared=False)\n    print('PROPHET RMSE {}: {:.0f} Cases'.format(i+1,rmse_test))\n    print('PROPHET MAPE {}: {:.1f} %'.format(i+1,mape_test))","1621fc36":"forecast_df_nn['yhat_avg'] = forecast_df_nn[['yhat1', 'yhat2', 'yhat3', 'yhat4', 'yhat5', 'yhat6', 'yhat7']].mean(axis=1)","ac2c6836":"plt.figure(figsize=(15,6))\nplt.title('COVID19 new cases in Italy with forecasting by Neural Prophet', fontsize=20)\n\n#Actual cases\nplt.plot(df[-prediction_window:].index, df[-prediction_window:]['nuovi_positivi'], label='Actual cases', marker='o')\n\n#Neural Prophet predicted cases\nplt.plot(forecast_df_nn[-window:]['ds'],forecast_df_nn[-window:]['yhat_avg'],color='purple',label='PROPHET-Forecast', marker='o')\n\nplt.axvline(today, linewidth=1.5, color='red', linestyle=\"--\")\nplt.legend(loc='upper left', fontsize=14, fancybox=True, shadow=True, frameon=True)\nplt.ylabel('New cases', fontsize=20)\nplt.xticks(forecast_df[-prediction_window-forecast_window:]['ds'], rotation=80, fontsize=14)\nplt.yticks(fontsize=15)\n\nplt.grid(visible=None, axis='x')\nplt.show()","ee560959":"mape_prophet_nn = mape(forecast_df_nn.iloc[-window:-forecast_window]['yhat_avg'],df_p.iloc[-prediction_window:]['y'])\nrmse_prophet_nn = mean_squared_error(forecast_df_nn.iloc[-window:-forecast_window]['yhat_avg'],df_p.iloc[-prediction_window:]['y'], squared=False)\nprint('PROPHET RMSE : {:.0f} Cases'.format(rmse_prophet_nn))\nprint('PROPHET MAPE : {:.1f} %:'.format(mape_prophet_nn))","0d41752a":"result=adfuller(df['nuovi_positivi'].dropna())\nprint(f'ADF Statistics:{result[0]}')\nprint(f'p-value:{result[1]}')","79af10e8":"result=adfuller(df['nuovi_positivi'].diff().dropna())\nprint(f'ADF Statistics:{result[0]}')\nprint(f'p-value:{result[1]}')","e991705d":"fig, (ax1, ax2)=plt.subplots(2,1,figsize=(8,8))\n\nplot_acf(df['nuovi_positivi'],lags=30, zero=False, ax=ax1)\nplot_pacf(df['nuovi_positivi'],lags=30, zero=False, ax=ax2)\nplt.show()","bcae01d4":"results=pm.auto_arima(df['nuovi_positivi'], start_p=0, d=None, start_q=0, max_p=3, max_q=3,\n                      seasonal=True, m=7, D=None, test='adf', start_P=0, start_Q=0, max_P=3, max_Q=3,\n                      information_criterion='aic', trace=True, error_action='ignore',\n                      trend=None, exog=df['holiday'],with_intercept=True, stepwise=True)","734face4":"model=SARIMAX(df['nuovi_positivi'], order=(0,1,1), seasonal_order=(2,0,0,7), exog = df['holiday'])\nresults=model.fit()","515629bf":"results.summary()","4311f4a0":"results.plot_diagnostics(figsize=(8,8))\nplt.show()","c71c484b":"prediction = results.get_prediction(start=-prediction_window, exog = df['holiday'])\nmean_prediction = prediction.predicted_mean","243234aa":"confi_int_p = prediction.conf_int()\nlower_limits_p = confi_int_p.iloc[:,0]\nupper_limits_p = confi_int_p.iloc[:,1]","286956bd":"lower_today = np.full([1, prediction_window], np.nan).flatten() #empty list with length = 28 (4 weeks)\nupper_today = np.full([1, prediction_window], np.nan).flatten() #empty list with length = 28 (4 weeks)","f9f9d5e8":"lower_today[-1] = confi_int_p.iloc[:,0][-1] # lower value for prediction of todays value\nupper_today[-1] = confi_int_p.iloc[:,1][-1] # upper value for prediction of todays value","f7accb44":"sarimax_prediction = pd.DataFrame({'yhat':mean_prediction, 'y_lower':lower_today,'y_upper': upper_today})","2749c2b5":"forecast = results.get_forecast(steps=forecast_window, exog = df['holiday'].iloc[-forecast_window:])\nmean_forecast=forecast.predicted_mean","0c3ac9c2":"#Confidence Intervals for forecasting\nconfi_int_f=forecast.conf_int()\nlower_limits_f=confi_int_f.iloc[:,0]\nupper_limits_f=confi_int_f.iloc[:,1]","89e06a9e":"sarimax_forecast = pd.DataFrame({'yhat':mean_forecast, 'y_lower':lower_limits_f,'y_upper':upper_limits_f})","5f4ba73b":"sarimax_results = sarimax_prediction.append(sarimax_forecast)","35d0640a":"plt.figure(figsize=(16,6))\nplt.title('COVID19 new cases in Italy with forecasting by SARIMAX', fontsize=30)\n\n\n#Actual cases\nplt.plot(df[-prediction_window:].index,df[-prediction_window:]['nuovi_positivi'], label='Actual cases', marker='o')\n\n#sarimax\nplt.plot(sarimax_results.index, sarimax_results.yhat,color='purple',label='SARIMAX', marker='o')\nplt.fill_between(sarimax_results[-forecast_window-1:].index, sarimax_results[-forecast_window-1:].y_lower, sarimax_results[-forecast_window-1:].y_upper, color='purple', alpha=0.1)\n\n#text = 'Today\\'s new cases : {:.0f}\\nTomorrows new cases : {:.0f}'.format(float(df['nuovi_positivi'][-1:]),mean_forecast[0])\n#plt.text(today + pd.DateOffset(days=1), np.min(df[-prediction_window:]['nuovi_positivi']), text, bbox=dict(facecolor='white', alpha=1), fontsize=14)\n\n\nplt.axvline(today, linewidth=1.5, color='red', linestyle=\"--\")\n#plt.text(today, np.max(mean_forecast), 'Forecast->', bbox=dict(facecolor='white', alpha=1),fontsize=17)\n\nplt.legend(loc='upper left', fontsize=14, fancybox=True, shadow=True, frameon=True)\nplt.ylabel('New cases', fontsize=20)\nplt.xticks(forecast_df[-prediction_window-forecast_window:]['ds'], rotation=80, fontsize=14)\nplt.yticks(fontsize=15)\nplt.grid(visible=None, axis='x')\nplt.show()","75bf40ce":"mape_sarimax= mape(df[-prediction_window:]['nuovi_positivi'], mean_prediction.values)\nrmse_sarimax = mean_squared_error(df[-prediction_window:]['nuovi_positivi'], mean_prediction.values, squared=False)\n\nprint('SARIMAX RMSE: {:.0f} Cases'.format(rmse_sarimax))\nprint('SARIMAX MAPE: {:.1f} %'.format(mape_sarimax))","5940f3b1":"pd.DataFrame({'Model':['Prophet','Neural Prophet','SARIMAX'],'MAPE': [mape_prophet,mape_prophet_nn,mape_sarimax],'RMSE':[rmse_prophet,rmse_prophet_nn,rmse_sarimax]}).set_index('Model')","148923fc":"plt.figure(figsize=(18,8))\nplt.title('COVID19 new cases in Italy with Forecasted cases by ML models', fontsize=28)\n#Actual cases\nplt.bar(df[-prediction_window:].index, df[-prediction_window:]['nuovi_positivi'], label='Actual cases', color='silver', edgecolor=\"black\", linewidth=2.0, alpha=0.6)\n#PROPHET\nplt.plot(forecast_df[-window:]['ds'],forecast_df[-window:]['yhat'],color='blue',label='Prophet', marker='o',linewidth=3.0)\nplt.fill_between(forecast_df[-forecast_window-1:]['ds'], forecast_df[-forecast_window-1:]['yhat_lower'],forecast_df[-forecast_window-1:]['yhat_upper'], color='blue', alpha=0.1)\n\n#NEURAL PROPHET\nplt.plot(forecast_df_nn[-window:]['ds'],forecast_df_nn[-window:]['yhat_avg'],color='green',label='Neural Prophet', marker='o',linewidth=3.0)\n\n#sarimax\nplt.plot(sarimax_results.index, sarimax_results.yhat,color='red',label='SARIMAX', marker='o',linewidth=3.0)\nplt.fill_between(sarimax_results[-forecast_window-1:].index, sarimax_results[-forecast_window-1:].y_lower, sarimax_results[-forecast_window-1:].y_upper, color='red', alpha=0.1)\n\n\ntext = 'Today\\'s new cases : {:.0f}\\nTomorrow\\'s new cases:\\nProphet : {:.0f}\\nNeural Prophet : {:.0f}\\nSARIMAX : {:.0f}'.format(float(df['nuovi_positivi'][-1:]),forecast_df[forecast_df['ds']==str(tomorrow)]['yhat'].values[0],forecast_df_nn[forecast_df_nn['ds']==str(tomorrow)]['yhat_avg'].values[0],mean_forecast[0])\nplt.text(today + pd.DateOffset(days=1), 180000, text, bbox=dict(facecolor='white', alpha=1), fontsize=17)\n\nplt.axvline(today, linewidth=4, color='black', linestyle=\"--\")\nplt.legend(fontsize=12, bbox_to_anchor=(0.12, 1.0), fancybox=True, shadow=True, frameon=True)\nplt.ylabel('New cases', fontsize=20)\nplt.xticks(forecast_df[-prediction_window-forecast_window:]['ds'], rotation=80, fontsize=14)\nplt.yticks(fontsize=15)\nplt.grid(visible=None, axis='x')\n\nplt.show()","9fcf54c9":"print('Today\\'s new cases : {:.0f}'.format(float(df['nuovi_positivi'][-1:])))\nprint('Tomorrows new cases according to SARIMAX : {:.0f}'.format(mean_forecast[0]))\nprint('Tomorrows new cases according to PROPHET : {:.0f}'.format(forecast_df[forecast_df['ds']==str(tomorrow)]['yhat'].values[0]))\nprint('Tomorrows new cases according to Neural PROPHET : {:.0f}'.format(forecast_df_nn[forecast_df_nn['ds']==str(tomorrow)]['yhat_avg'].values[0]))","aecd61b0":"df_final = pd.DataFrame({'date':forecast_df_nn[-window:]['ds'], 'y_p':forecast_df[-window:]['yhat'], 'y_p_nn':forecast_df_nn[-window:]['yhat_avg'], 'y_s':sarimax_results['yhat'].values})","59aba370":"df_final = df_final.set_index('date')","86610cb7":"df_final['y_avg'] = df_final.mean(axis=1)","311228d6":"plt.figure(figsize=(16,6))\nplt.title('COVID19 new cases in Italy with AVG Forecasted cases', fontsize=30)\n#Actual cases\nplt.bar(df[-prediction_window:].index, df[-prediction_window:]['nuovi_positivi'], label='Actual cases', color='black',alpha=1)\n\n#AVG Forecast\nplt.bar(df_final.index, df_final.y_avg,label='AVG cases by ML models', color='#00FF00',alpha=0.6, edgecolor=\"black\", linewidth=2.0)\n\ntext = 'New Cases:\\nToday: {:.0f}\\nTomorrow {:.0f}'.format(float(df['nuovi_positivi'][-1:]),df_final[-forecast_window:]['y_avg'].values[0])\nplt.text(today + pd.DateOffset(days=3), 7000, text, bbox=dict(facecolor='white', alpha=1), fontsize=17)\n\nplt.axvline(today, linewidth=2.5, color='red', linestyle=\"--\")\nplt.legend(loc='upper right', fontsize=14,  fancybox=True, shadow=True, frameon=True)\nplt.ylabel('New cases', fontsize=20)\nplt.xticks(forecast_df[-prediction_window-forecast_window:]['ds'], rotation=80, fontsize=14)\nplt.yticks(fontsize=15)\nplt.grid(visible=None, axis='x')\n\nplt.show()","a440967d":"# Neural Prophet Forecasting","0a144036":"Now we consider just 2 columns for the time series forecasting: 'new_cases' and 'holiday'.","76ce454a":"# Prophet Forecasting","549c8635":"**All the three algorithms performed well on the last 4 weeks of data compared to the actual values, with similar predicted cases.** <br>\nMoreover, **the forecasted values are also similar**.","40efa8eb":"# Time series modeling and Forecasting ","46e248a0":"We extract also the mean, median and standard deviation of the cases during these weeks.","55c6795e":"The series looks indeed non stationary from these plots, and we cannot easily identify good values of p and q. <br>\nFor this reason we will use the convenient auto *arima module* to find good parameters for the sarimax model.","42817fb7":"Then we call the 'predict()' method of the prophet model, where we specify the dataframe with future days 'future'","66395209":"# Neural Prophet","59639823":"## SARIMAX FORECAST","cabfe757":"In the following, we will define a 'holiday' column to include boolean values to check if a day is a holiday or not. We decided to include this column since, after a first analysis, it looks like that on days after holidays the number of new cases decreases, since on holidays usually less PCR tests are performed. By specifing this information to the prediction models, we can obtain a more accurate forecast.","f0d900c2":"Finally, we will create a final dataframe that will host the average prediction among the three models.","c3e48744":"<img src=\"https:\/\/i.imgur.com\/oycem0Q.png\" width=\"900px\">","530cd6ce":"Now we can define the Prophet model.","0f302559":"# SARIMAX","05ab6b16":"We also define the confidence interval for the prediction of today's new cases: if we dont do so, the following plot will have a 'gap' for the forecast value.","738d9359":"We will create a forecast dataframe similarly how we created the prediction dataframe.","a618fc3c":"And create ad additional dataframe where we include the week and the three statistics.","4b74b876":"Then we create a new column in the dataframe to host this list.","804f1c0a":"After a 1-order difference the p-value is lower than 0.05.","80cb5005":"Then we extract the 4 values for the 4 weeks, and add a column to indicate the week.","87ccf01f":"## ACF AND PACF","f7d4edad":"# Main results Dashboard:","2a2ea10f":"First, we convert the date column to pandas datetime format.","e71fd244":"# Prophet ","86360d89":"Now we need to create a function that select only the last 4 weeks in the dataframe. We decided to create a new dataframe 'df_italy_small' and assign it the last 34 rows of the  dataframe 'df_italy'. Then we check if the current day, and in case it is a Sunday then we can copy 28 rows (4 weeks) of data and assign to a new dataframe 'df_4weeks'","9582dbb9":"### Install necessary libraries: pmdarima, neuralprophet and holidays","39d5cb65":"## AUTO ARIMA","2eb84401":"## Holidays","d70d0a4f":"Overall, we can see that **the average predicted values fit well the last 4 weeks data.**","dd8a189b":"**The following project is about modeling daily COVID19 cases in Italy by Machine Learning algorithms, with the goal of forecasting the cases for future days.<br>\nThe time series modeling will be performed by Prophet by Facebook, Neural Prophet and SARIMAX models.**","cdcb19cf":"Our goal now is to create a dataframe which will host the model test predictions (last 4 weeks of data) and the forecast values (future 7 days).<br>\nWe start by creating the prediction dataset.","541c15b6":"Since we cannot add the holiday column as we defined previously, we add the holidays using the 'add_country_holidays()' method of the prophet model class.","a5938131":"We can fetch the data from the official government github repository, where the data is updated daily at 18:00.","34d5f1c5":"Next, we want to make a custom plot to check the forecasted days. We first create a dataframe including the dates (ds), predicted values (yhat) and confidence intervals( yhat_lower and yhat_upper).","953f9752":"# Data analysis and Forecasting of COVID19 cases in Italy","2a6f7596":"**Overall, we can see that the average predicted values fits well the last 4 weeks data. Moreover, we can see the weekly trend and holiday effect on forecasted values.**","313bc8f0":"To perform the forecasting, we need to first create a forecast dataframe to include future days. As stated before, we will forecast the time series values of the next week.","1b3bd205":"**Neural Prophet seems to fit the data very well and make reasonable predictions for the next days.**","9c7579ff":"<img src=\"https:\/\/i.imgur.com\/7G22LLn.png\" width=\"900px\">","0423c3e0":"## Loading the data","4672f424":"The p-value is higher than 0.05. This means that the time serie is non stationary with a confidence of 95%. Next we will check if with a one step differentiation, the time serie become stationary (in terms of a trendless time series).","ebe8ca00":"**We can clearly see that the number of weekly cases is getting more stable and lower in terms of Mean, Median and Std. Deviation.**","3816fdb0":"Next we will analyze the weekly distribution to check how the mean, median and standard deviation of new cases changed during the weeks.<br>\nFirst, we create a list of the days for each date.","91d641b7":"**NOTE: We can see that the dataframe contains lots of columns. For our analysis we will just focus on the columns 'data' ( 'date' in english) and 'nuovi_positivi' ('new cases' in english).<br>**","8afd4f6e":"Moreover, we get today's and tomorrow's date, since they will be useful for future plots.","95afe3a9":"**The first model we use is Prophet by Facebook Research.**<br>\nThe model requires the dataset to have just 2 columns: 'ds' which host the dates and 'y' which hosts the time series values: for this reason we define a new dataframe 'df_p' which will present just these two columns. The holiday column will be specified by calling a method on the model.","2eb13756":"## <font color='white'><span style='background :black' >The notebook is updated daily. Latest update: <font color='red'>Jan 30th with Jan 30th data.<\/font>","4a96e4fd":"# Results Summary","79298f7e":"Moreover, we also define some time windows which will be useful during the forecasting analysis and plotting.","af1c6199":"We create a list compregension to extract the holidays from the holidays library, and add bolean values to a list is_holiday depending if the date is a holiday (value=1) or not (value=0).","a966230c":"Moreover, it could be interesting to see the components (the trend for example) of the predicted time series by calling the 'plot_components()' method of the prophet model.","ff911b15":"**Overall, we can see that Neural Prophet and SARIMAX predict and forecast similar values, which are higher compared to those predicted and forecasted by Prophet.**<br>","c6654d7c":"**At a first glance, we can see that the predicted time series (in blue) fits well the original data (black dots).**","c8942866":"We add both weekly and yearly seasonality.","7423ea85":"# Weekly case distribution analysis","b477dd1a":"# SARIMAX Forecasting","b701cfff":"To have a better idea of possible the autoregressive parameter (p) and moving average parameter (q) of the SARIMAX model, we can check the auto-correlation function (ACF) and partial auto-correlation function (PACF).","977e4bb3":"Since the data is divided by region for each day, we create a new dataframe 'df_italy' where we group the rows by the column 'data' ( 'date' in english) to get the total daily data in Italy.","b6141d7e":"Moreover, we also get the confidence intervals from the sarimax prediction","7a42d57c":"**Trend and seasionality plots analysis:**\n- Trend: We can see the trends of the 5 covid waves: the steeper one is the current one (Jan 2022).\n- Holidays: We can see the effects of holidays on the number of new cases.\n- Weekly seasonality: We can observe the drop of cases on Monday, since on Sunday less tests are carried, and an overall increase over the week, with the highest number of positive cases found around Friday.\n- Yearly seasonality: We can observe the drop in cases from May to November, seen both in 2020 and 2021","9a96d527":"**SARIMAX seems to have predicted decently last weeks data, with high errors on the previous weeks. Nonetheless, the predicted cases for the next days look reasonable compared to the current week cases.**","7e81f38e":"## Custom defined functions","95dc4ffe":"<img src=\"https:\/\/i.imgur.com\/2NXrfU6.png\" width=\"900px\">","d4574563":"Then we create a new dataframe which will include 3 columns: predicted value 'yhat' and the upper and lower values for yhat (confidence interval)","eec90265":"**We can see that there are 7 different yhat prediction columns.**","ebd7092f":"The components are comparable to those obtained using Prophet.","c3da4693":"Then we assign these values to a new column 'holiday' of the dataframe.","b7a14491":"<img src=\"https:\/\/i.imgur.com\/QuKpBxc.png\" width=\"900px\">","b5d53809":"**Next we will use a model called Neural Prophet, built using PyTorch neural networks on top of the original Prophet model by facebook**.<br>\nThe procedure to make a model by using this algorithm will be very similar to the one seen for Prophet.","496d66bd":"Plots analysis:\n- Trend: We can see the trends of the 5 covid waves: the steeper one is the current one (Jan 2022).\n- Holidays: We can see the effects of holidays on the number of new cases.\n- Weekly seasonality: We can observe the drop of cases on Monday, since on Sunday less tests are carried, and an overall increase over the week, with the highest number of positive cases found around Friday.\n- Yearly seasonality: We can observe the drop in cases from May to November, seen both in 2020 and 2021","28b619b9":"We can clearly see that **the number of weekly cases is getting more stable and lower in terms of Mean, Median and Std. Deviation.**<br>","1d4d4c13":"These plots indicate a good but improvable model. This is probably due to the high variability of the time series among the different waves.<br>","1fc0b046":"<img src=\"https:\/\/i.imgur.com\/pnhV2Ow.png\" width=\"900px\">","9e532527":"## SARIMAX Prediction","a9610b2b":"**The third model we will develop is a SARIMAX model.<br>**\nBefore starting the modeling, we first check the time series' stationarity performing the Augmented Dickey Fuller test (ADF), also to understand the best value for the D parameter of the model (integrative term).","f02cfcb2":"**I will update this notebook daily with the new data and add deeper analysis. Thanks for reading the notebook :)**","f05dd6cc":"Finally we append the forecast dataframe to the prediction dataframe.","3bd2624c":"**Prophet achives a good MAPE during the last 4 weeks of data, but fails to predict weekly extreme values, such as the very low values of cases found on Sundays.**","48a8f15c":"**We will create a new 'yhat_avg' column to host an average prediction of the 7 'yhat' values.**"}}