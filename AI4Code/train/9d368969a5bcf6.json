{"cell_type":{"ec7b8d9f":"code","1b430fe1":"code","6ebcde07":"code","ffd40e8d":"code","73aa4a59":"code","8a5b2501":"code","34314dad":"code","23a2e507":"code","7424c3cd":"code","4afb05a0":"code","f62f2e31":"code","6bdce5a2":"code","3bcb97a6":"code","3f4984ec":"code","4f90725b":"code","93573712":"code","193dea3a":"code","428aa323":"code","68d314b6":"code","0f998c8e":"code","ae141a2a":"code","584de722":"code","937f35a9":"markdown","d7c8c7fc":"markdown","076ce973":"markdown","ea0faee9":"markdown","2da1469e":"markdown","a453d626":"markdown","6129136c":"markdown","4b372739":"markdown","9b3d6e7a":"markdown","1b6aaeae":"markdown"},"source":{"ec7b8d9f":"import pandas as pd\n\nimport seaborn as sns\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import GridSearchCV\n\nfrom sklearn.model_selection import cross_val_score","1b430fe1":"df = pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')","6ebcde07":"df.head()","ffd40e8d":"df = df.drop(columns=['Serial No.']) # because it's absolutely doesn't important","73aa4a59":"df = df.rename(columns={\n    'GRE Score': 'GRE',\n    'TOEFL Score': 'TOEFL',\n    'University Rating': 'UR',\n    'Chance of Admit ': 'Chance',\n    'LOR ': 'LOR'\n})","8a5b2501":"df.head()","34314dad":"df.corr()","23a2e507":"sns.heatmap(df.corr());","7424c3cd":"sns.lineplot(x=\"CGPA\", y=\"Chance\", data=df);","4afb05a0":"sns.lineplot(x=\"TOEFL\", y=\"GRE\", data=df);","f62f2e31":"sns.lineplot(x=\"CGPA\", y=\"GRE\", data=df);","6bdce5a2":"sns.lineplot(x=\"SOP\", y=\"LOR\", data=df);","3bcb97a6":"X, y = df.drop(columns=['Chance']), df['Chance']","3f4984ec":"rfr = RandomForestRegressor(random_state=42)\nlr = LinearRegression()","4f90725b":"params = {\n    'n_estimators': range(10, 51, 10),\n    'max_depth': range(1, 13, 2),\n    'min_samples_leaf': range(1, 8),\n    'min_samples_split': range(2, 10, 2)\n}","93573712":"search = GridSearchCV(rfr, params, cv=10, n_jobs=-1)","193dea3a":"search.fit(X, y)","428aa323":"search.best_params_","68d314b6":"best_rfr = search.best_estimator_","0f998c8e":"imp = pd.DataFrame(best_rfr.feature_importances_, index=X.columns, columns=['importance'])\nimp.sort_values('importance').plot(kind='barh', figsize=(12, 8))","ae141a2a":"cross_val_score(best_rfr, X, y, cv=10).mean()","584de722":"cross_val_score(lr, X, y, cv=10).mean()","937f35a9":"### This is a beginner's guide.","d7c8c7fc":"We can see that CGPA is the most correlated feature. Let's check the graph.","076ce973":"### Hello everyone! In this kernel, I will show that we underestimate linear regression in vain.","ea0faee9":"And now the moment of truth. Let's see the result.","2da1469e":"The **conclusion** is: always look at the dependencies between the features! **We underestimate linear regression!**\n\nThank you for attention!\nGood luck","a453d626":"Also you can see that CGPA is very important feature! Hmm...","6129136c":"That's better! Now let's see the correlation table of features.","4b372739":"If you look at all the dependencies, you will see that basically there is a linear relationship between the features. This suggests the use of linear regression.","9b3d6e7a":"Now let's check how good RandomForestRegressor is compared to linear regression, as RandomForestRegressor shows himself very well in other tasks.","1b6aaeae":"First of all, let's preprocess our data a bit."}}