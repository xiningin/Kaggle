{"cell_type":{"44e5b8c6":"code","1efc5ac0":"code","470731e4":"code","9c37a9ff":"code","29e9b8d8":"code","ecab521e":"code","52e08bc9":"code","288cb63b":"code","44d6ac2d":"code","ab7eb7a6":"code","7c5a3f76":"code","cb03e42e":"code","6d78c6d4":"code","87d8bc64":"code","76e63721":"code","56da5212":"code","fcb5d4da":"code","9019bc0d":"markdown","fabb7c89":"markdown","72d38eca":"markdown","605a56d0":"markdown","79d2dd4f":"markdown","8f1e79b0":"markdown","430d7f7d":"markdown","f3a680fb":"markdown","aeb6cf37":"markdown","d5024e07":"markdown","6958d37c":"markdown","f5d9eb64":"markdown","41243372":"markdown"},"source":{"44e5b8c6":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ndef custom_pallete(custom_colors):\n    customPalette = sns.set_palette(sns.color_palette(custom_colors))\n    sns.palplot(sns.color_palette(custom_colors),size=0.8)\n    plt.tick_params(axis='both', labelsize=0, length = 0)\n\ntableau = [\"#B32636\",\"#DF8A39\",\"#F1F1F1\",\"#688B97\",\"#273C6B\"]\ncustom_pallete(tableau)","1efc5ac0":"df = pd.read_csv(\"..\/input\/movies-on-netflix-prime-video-hulu-and-disney\/MoviesOnStreamingPlatforms_updated.csv\")\ndf = df.iloc[:,1:12]\ndf = df.head(10)\ndf","470731e4":"!pip install IMDbPY\n\nfrom imdb import IMDb\n\nia = IMDb()","9c37a9ff":"mid = ia.search_movie(\"Inception\")\nmid[0]","29e9b8d8":"movie = ia.get_movie('1375666')","ecab521e":"print('Directors:')\nfor director in movie['directors']:\n    print(director['name'])","52e08bc9":"print('Genres:')\nfor genre in movie['genres']:\n    print(genre)","288cb63b":"print('Countries:')\nfor cont in movie['countries']:\n    print(cont)","44d6ac2d":"print('Languages:')\nfor lang in movie['languages']:\n    print(lang)","ab7eb7a6":"print('Runtime:')\nfor run in movie['runtime']:\n    print(run)","7c5a3f76":"i=0\ncount_id=0\ncount_d=0\ncount_g=0\ncount_co=0\ncount_l=0\ncount_r=0\n\nm_director=[]\nm_genre=[]\nm_country=[]\nm_language=[]\nm_runtime=[]\n\nwhile(i<len(df.index)):\n    val_type = df['Type'].values[i]\n    if(val_type==0):\n        val_movie = df['Title'].values[i]\n        movies = ia.search_movie(val_movie)\n        if(len(movies)!=0):\n            movid = movies[0].movieID\n\n            movie = ia.get_movie(movid)\n            print(movie)\n\n            movie_directors=\"\"\n            movie_genres=\"\"\n            movie_country=\"\"\n            movie_language=\"\"\n            movie_runtime=\"\"\n            c1=0\n            c2=0\n            c4=0\n            c5=0\n            c6=0\n            movid=int(movid)\n            if(movid>0):\n                count_id+=1;\n                print(count_id)\n\n                try:\n                    for director in movie['directors']:\n                        if(c1==0):\n                            count_d+=1\n                            movie_directors =director['name']\n\n                        else:\n                            movie_directors = movie_directors+\",\"+ director['name']\n\n                        c1+=1\n                    m_director.append(movie_directors)\n                except:\n                    m_director.append(\"NA\")\n\n                try:\n                    for genre in movie['genres']:\n                        if(c2==0):\n                            count_g+=1\n                            movie_genres = genre\n\n                        else:\n                            movie_genres = movie_genres+\",\" +genre\n\n                        c2+=1\n                    m_genre.append(movie_genres)\n                except:\n                    m_genre.append(\"NA\")\n\n                try:\n                    for countries in movie['countries']:\n                        if(c4==0):\n                            count_co+=1\n                            movie_country = countries\n\n                        else:\n                            movie_country = movie_country+\",\" +countries\n\n                        c4+=1\n                    m_country.append(movie_country)\n                except:\n                    m_country.append(\"NA\")\n\n                try:\n                    for languages in movie['languages']:\n                        if(c5==0):\n                            count_l+=1\n                            movie_language = languages\n\n                        else:\n                            movie_language = movie_language+\",\" +languages\n\n                        c5+=1\n                    m_language.append(movie_language)\n                except:\n                    m_language.append(\"NA\")\n\n                try:\n                    for runtime in movie['runtimes']:\n                        if(c6==0):\n                            count_r+=1\n                            movie_runtime = runtime\n\n                        else:\n                            movie_runtime = movie_runtime+\",\" +runtime\n\n                        c6+=1\n                    m_runtime.append(movie_runtime)\n                except:\n                    m_runtime.append(\"NA\")\n      \n            else:\n                pass\n        else:\n            m_director.append(\"NA\")\n            m_genre.append(\"NA\")\n            m_country.append(\"NA\")\n            m_language.append(\"NA\")\n            m_runtime.append(\"NA\")\n    else:\n        pass\n    i=i+1","cb03e42e":"df['Directors'] = m_director\ndf['Genres'] = m_genre\ndf['Country'] = m_country\ndf['Language'] = m_language\ndf['Runtime'] = m_runtime\n\ndf","6d78c6d4":"%%HTML\n<div class='tableauPlaceholder' id='viz1598629189115' style='position: relative'><noscript><a href='#'><img alt='Average IMDb rating of movies produced in countries ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;AvgIMDbratings&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='path' value='views&#47;Moviesavailableonstreamingplatforms&#47;AvgIMDbratings?:language=en-GB&amp;:embed=y&amp;:display_count=y' \/> <param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;AvgIMDbratings&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1598629189115');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","87d8bc64":"%%HTML\n<div class='tableauPlaceholder' id='viz1598629292160' style='position: relative'><noscript><a href='#'><img alt='Movies produced during a particular year vs streaming platform' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;MovieyearvsPlatform&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Moviesavailableonstreamingplatforms&#47;MovieyearvsPlatform' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;MovieyearvsPlatform&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1598629292160');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","76e63721":"%%HTML\n<div class='tableauPlaceholder' id='viz1598629363727' style='position: relative'><noscript><a href='#'><img alt='Movies recommended for selected age groups vs streaming platform' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;AgevsPlatform&#47;1_rss.png' style='border: none' \/><\/a><\/noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' \/> <param name='embed_code_version' value='3' \/> <param name='site_root' value='' \/><param name='name' value='Moviesavailableonstreamingplatforms&#47;AgevsPlatform' \/><param name='tabs' value='no' \/><param name='toolbar' value='yes' \/><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Mo&#47;Moviesavailableonstreamingplatforms&#47;AgevsPlatform&#47;1.png' \/> <param name='animate_transition' value='yes' \/><param name='display_static_image' value='yes' \/><param name='display_spinner' value='yes' \/><param name='display_overlay' value='yes' \/><param name='display_count' value='yes' \/><param name='language' value='en-GB' \/><\/object><\/div>                <script type='text\/javascript'>                    var divElement = document.getElementById('viz1598629363727');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https:\/\/public.tableau.com\/javascripts\/api\/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                <\/script>","56da5212":"%%HTML\n<iframe width=\"600px\" height=\"200px\" src=\"https:\/\/public.tableau.com\/views\/Moviesavailableonstreamingplatforms\/Movieavailability?:language=en-GB&:display_count=y&:showVizHome=no&:origin=viz_share_link\">\n<\/iframe>","fcb5d4da":"%%HTML\n<iframe width=\"700px\" height=\"894px\" src=\"https:\/\/public.tableau.com\/views\/Moviesavailableonstreamingplatforms\/Moviesavailableonstreamingapplications?:language=en-GB&:display_count=y&:showVizHome=no&:origin=viz_share_link\">\n<\/iframe>","9019bc0d":"# I. Embed Code Method\n> 1)Go to your Tableau Public profile and head to the viz you wish to include in your notebook.\n\n<img src=\"https:\/\/i.imgur.com\/Uz3rZir.png\">\n\n> 2)Scroll to the bottom of the visualization and click on the Share button.\n\n<img src=\"https:\/\/i.imgur.com\/nKMVexi.png\">\n\n> 3)Next, copy the embed code and paste it in your notebook!\n\n<img src=\"https:\/\/i.imgur.com\/7qGtXAP.png\">","fabb7c89":"<div>\n <img src=\"https:\/\/i.imgur.com\/5rQyFAj.png\">\n<\/div>","72d38eca":"Tableau is a visualization tool widely used for Data Science and Analytics owing to it's ease of use and beautiful, interactive charts. <br>There is a drag and drop functionality offered for various options.\n\n**Version: Tableau Public**\n\nWe can include our Tableau data viz in kernels by two methods:","605a56d0":"My go-to [website](https:\/\/coolors.co\/image-picker) for color palettes \ud83c\udfa8","79d2dd4f":"# IMDbPY for Data Collection","8f1e79b0":"> In this kernel, I wanted to showcase how I fetched details about a movie like the directors, genres and languages with the help of IMDbPy.\n> \n> [Documentation](https:\/\/imdbpy.readthedocs.io\/en\/latest\/)","430d7f7d":"# Tableau for Data Visualization","f3a680fb":"Now that we have tested the functions for a single movie, it's time to prepare the dataset!","aeb6cf37":"We can retrieve the data of the movie by using ```get_movie``` method.","d5024e07":"<div>\n    <img src = \"https:\/\/www.tableau.com\/sites\/default\/files\/pages\/tableau_cmyk_2015.png\">\n<\/div>","6958d37c":"If we wish to search for the ID of a particular movie, we can use the ```search_movie``` method.","f5d9eb64":"# II. iFrame method\n>While including some visualizations in our code, we may want more control for customization. In the following example, I've used iframe to define the desired height and width of the viz. \n\n> 1)Go to your Tableau Public profile and head to the viz you wish to include in your notebook.\n\n<img src=\"https:\/\/i.imgur.com\/QatZL6X.png\">\n\n> 2)Scroll to the bottom of the visualization and click on the Share button.\n\n<img src=\"https:\/\/i.imgur.com\/gXKQUNo.png\">\n\n> 3)Next, copy the link and paste it in your notebook as a source link in the iframe tag.\n\n<img src=\"https:\/\/i.imgur.com\/rGOKTO8.png\">","41243372":"# Dataset\ud83d\udcfd\ufe0f\n> The dataset is an amalgamation of:\n> - data that was scraped, which comprised a comprehensive list of movies available on various streaming platforms   \n> - and the IMDb dataset\n\n# Content\ud83d\udcd6\n> - Movie ID \n> - Movie title\n> - The year in which the movie was produced\n> - Viewing audience age\n> - IMDb rating as well as Rotten tomatoes %\n> - The columns for Netflix, Hulu, Prime and Disney+ indicate whether the movie is present or absent on the platform\n> - Other columns include the Directors and genres of the movie, Country it was produced in, the Languages in which a movie is available and lastly, the runtime.\n\n# Methodology\ud83d\udee0\ufe0f\n> The methodology followed for consolidating this dataset involved data scraping from multiple sources using BeautifulSoup4. I fetched details about a movie like the directors, genres and languages with the help of IMDbPy, which is a Python package for retrieving and managing data of the IMDb movie database. Next I went ahead with feature generation to indicate the presence of a particular movie on more than one platform. This is where I dropped duplicate values too. My last step was data visualization for creation of an interactive dashboard using Tableau.\n\n# Motivation\ud83d\udca1\n> My motivation for creating this dataset was to answer questions like:\n> - Which streaming platform(s) could I find a particular movie on?\n> - Average IMDb rating of movies produced in a country?\n> - Target age group movies vs the streaming application they can be found on\n> - The year during which a movie was produced and the streaming platform they can be found on.\n> - Analysis of the popularity of a movie vs directors\n> I\u2019ve included some visualizations here that answer the above questions.\n"}}