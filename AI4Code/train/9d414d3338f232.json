{"cell_type":{"2e3c315a":"code","130b932c":"code","c6ef2844":"code","73a34ec9":"code","1826f3ab":"code","0584a980":"code","02b01f86":"code","8db6b742":"code","21b196b7":"code","0376d6e5":"code","339ff11a":"code","390daf20":"code","f33eef1e":"code","303e58ae":"code","8c914044":"code","7b5d314d":"code","cdf4b35f":"code","ba66f418":"code","4a01c471":"code","adf37ff5":"code","e24b4c57":"code","f21f5e43":"code","62299e9c":"code","eb3d9c1a":"code","f13551fd":"code","a3c017f7":"code","8ef9671e":"code","04d5969e":"code","8abb9332":"code","de7f4470":"markdown","443238ae":"markdown","8ceefe85":"markdown","bfe4e84f":"markdown","24159f22":"markdown","811784b7":"markdown"},"source":{"2e3c315a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","130b932c":"data=pd.read_csv(\"..\/input\/million-headlines\/abcnews-date-text.csv\")","c6ef2844":"data_text=data[:5000][['headline_text']];","73a34ec9":"data_text['index']=data_text.index","1826f3ab":"documents=data_text","0584a980":"print(len(documents))","02b01f86":"documents.head()","8db6b742":"documents.isnull().sum()","21b196b7":"import re\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer","0376d6e5":"corpus=[]\nfor i in range(0,len(documents)):\n    text=re.sub('[^a-zA-z]',' ',documents['headline_text'][i])\n    text=text.lower()\n    text=text.split()\n    text=[PorterStemmer().stem(word) for word in text if not word in stopwords.words('english')]\n    text=' '.join(text)\n    corpus.append(text)\n    ","339ff11a":"for i in range(0,len(corpus)):\n    documents['headline_text'][i]=corpus[i]","390daf20":"documents[[\"headline_text\"]]","f33eef1e":"processed_docs=documents['headline_text']","303e58ae":"processed_docs","8c914044":"import gensim\n","7b5d314d":"dictionary=gensim.corpora.Dictionary(processed_docs)","cdf4b35f":"count=0\nfor k,v in dictionary.iteritems():\n    print(k,v)\n    count+=1\n    if count>20:\n        break","ba66f418":"dictionary.filter_extremes(no_below=15,no_above=0.1,keep_n=1000)","4a01c471":"bow_corpus=[dictionary.doc2bow(doc) for doc in processed_docs]","adf37ff5":"bow_corpus[100]","e24b4c57":"bow_corpus_100=bow_corpus[100]\nfor i in range(len(bow_corpus_100)):\n    print(\"Word {} (\\\"{}\\\") appears {} time.\".format(bow_corpus_100[i][0], \n                                                     dictionary[bow_corpus_100[i][0]], \n                                                     bow_corpus_100[i][1]))","f21f5e43":"from gensim import corpora,models\ntfidf=models.TfidfModel(bow_corpus)","62299e9c":"corpus_tfidf=tfidf[bow_corpus]","eb3d9c1a":"lda_model=gensim.models.LdaMulticore(bow_corpus,\n                                    num_topics=10,\n                                    id2word=dictionary,\n                                    passes=2)","f13551fd":"for idx,topic in lda_model.print_topics(-1):\n    print(\"Topic: {} \\nWords: {}\".format(idx, topic))\n    print(\"\\n\")","a3c017f7":"lda_model_tfidf = gensim.models.LdaMulticore(corpus_tfidf, \n                                             num_topics=10, \n                                             id2word = dictionary, \n                                             passes = 2, \n                                             workers=4)","8ef9671e":"for idx, topic in lda_model_tfidf.print_topics(-1):\n    print(\"Topic: {} Word: {}\".format(idx, topic))\n    print(\"\\n\")","04d5969e":"processed_docs[4310]","8abb9332":"for index, score in sorted(lda_model[bow_corpus[4310]], key=lambda tup: -1*tup[1]):\n    print(\"\\nScore: {}\\t \\nTopic: {}\".format(score, lda_model.print_topic(index, 10)))","de7f4470":"## Performance evaluation by classifying sample document using LDA Bag of Words model","443238ae":"## Bag of words on the dataset","8ceefe85":"## Data Preprocessing","bfe4e84f":"## Running LDA using Bag of Words","24159f22":"## TF-IDF on our document set","811784b7":"## Running LDA using TF-IDF"}}