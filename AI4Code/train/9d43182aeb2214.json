{"cell_type":{"8a64dfc4":"code","57215ef4":"code","f3afe6e8":"code","cd332258":"code","76fc0141":"code","95a9fc2a":"code","d944f53c":"code","7c6c14cc":"markdown","98bf5fee":"markdown","396e91d2":"markdown","3dcfd693":"markdown","ca94cc87":"markdown","c188af24":"markdown","498d78e6":"markdown","959dc8cd":"markdown","dedeed7e":"markdown"},"source":{"8a64dfc4":"import numpy as np\nimport pandas as pd \nfrom sklearn.preprocessing import MinMaxScaler","57215ef4":"data = [[0, 100,0.01], [50, 1000,0.05], [100, 10000,0.001], [500, 100000,0.005],[1000,1000000,0.0001]]\ndf = pd.DataFrame(data=data,columns=[\"col1\",\"col2\",\"col3\"])\ndf.head()","f3afe6e8":"scaler = MinMaxScaler()\nscaler.fit(data)","cd332258":"scaler.scale_","76fc0141":"scaled_data = scaler.transform(data)\nscaled_data","95a9fc2a":"predicted_scaled_data = scaler.transform([[365, 1234567,0.02]])\npredicted_scaled_data","d944f53c":"scaled_df = pd.DataFrame(data=scaled_data,columns=df.columns)\nscaled_df.head()","7c6c14cc":"# transform data using MinMaxScaler","98bf5fee":"# build MinMaxScaler","396e91d2":"# import libraries","3dcfd693":"Transform features by scaling each feature to a given range.\n\nThis estimator scales and translates each feature individually such that it is in the given range on the training set, e.g. between zero and one.","ca94cc87":"# to DataFrame ","c188af24":"## get scale weight by column","498d78e6":"# make data ","959dc8cd":"# MinMaxScaler","dedeed7e":"# transform unseen data using MinMaxScaler"}}