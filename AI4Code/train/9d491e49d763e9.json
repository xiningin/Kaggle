{"cell_type":{"ceb83c6d":"code","78c7af3f":"code","54392bfe":"code","ed1d1278":"code","d0be09ce":"code","d913b80d":"code","4491b53a":"code","db4a85de":"code","f3ddbb00":"code","11229ccf":"code","ff638364":"code","577d8741":"code","773001d3":"code","6ebb5900":"code","93cbd5d0":"code","51092eef":"code","803b43f3":"code","b7f7d5da":"code","44e40424":"code","5005cc00":"code","a9aca7fd":"code","f4408135":"code","a1d3a9a7":"code","35878e1b":"code","38ad7bec":"code","d9a2fd3c":"code","867d6dbb":"code","c7130a28":"code","05576427":"code","d6b15949":"code","8bbc06ed":"code","25ead543":"code","c3a82a32":"markdown","0ee87745":"markdown","e363d13e":"markdown","caa96b99":"markdown","ccc99c11":"markdown","bbab0a08":"markdown","3cd4bcdb":"markdown","397c871a":"markdown","196dea29":"markdown","b6cb6ac4":"markdown","14a07bba":"markdown","5df2c485":"markdown","1d956c75":"markdown","7f3a8c61":"markdown","44d39ec2":"markdown","6d2fe291":"markdown","67f545ce":"markdown","6c166100":"markdown","517b8864":"markdown","62b7e8a0":"markdown","9136df79":"markdown","7b776d70":"markdown","d930977c":"markdown","4f1bb1f2":"markdown","fe5c7fe9":"markdown","96cd1bf0":"markdown","b97cfb41":"markdown","082e1eb7":"markdown","03f329c4":"markdown","d8029301":"markdown","d6200102":"markdown","03c276a5":"markdown","f3397160":"markdown","63c57391":"markdown","e411d0fc":"markdown","429f3457":"markdown","7b4318b4":"markdown","d33dff88":"markdown","2abdc404":"markdown","13c084a2":"markdown","aed2965e":"markdown","5d3ccdb2":"markdown","c635f940":"markdown","a36e87c4":"markdown","7e0114c4":"markdown","941e100b":"markdown","8d63a84c":"markdown","fb5781a1":"markdown","e2e17c9c":"markdown","cc62d644":"markdown","db643b20":"markdown","54c57433":"markdown","c30c95ad":"markdown","06254fbd":"markdown","8de97f3e":"markdown","7158b36c":"markdown","2fab4bb2":"markdown","cfb32b2b":"markdown","5444aafe":"markdown"},"source":{"ceb83c6d":"import pandas as pd\nimport numpy as np\nimport math\nimport cufflinks as cf\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objects as go\n%matplotlib inline\n\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot \ninit_notebook_mode(connected=True)\ncf.go_offline()","78c7af3f":"df_co = pd.read_csv('..\/input\/co2-ghg-emissionsdata\/co2_emission.csv', parse_dates = ['Year'])","54392bfe":"df_co.info()","ed1d1278":"df_co_na = df_co[df_co['Code'].isnull()]\n\ndf_co_na['Entity'].unique()","d0be09ce":"# Create new data frames for Kyrgysztan and Wallis and Futuna Islands and fill their Code column with their codes\n\ndf_kgz = df_co[df_co[\"Entity\"].isin([\"Kyrgysztan\"])]\ndf_kgz.fillna('KGZ', inplace = True)\n\ndf_wlf = df_co[df_co[\"Entity\"].isin([\"Wallis and Futuna Islands\"])]\ndf_wlf.fillna('WLF', inplace = True)","d913b80d":"# Drop the rows containing NaN values in their Code column (including the )\n# Since Code column is the only column containing NaN, we can directly apply dropna method\n\ndf_co.dropna(inplace=True)\ndf_co.info()","4491b53a":"# Append all 3 data frames\ndf = pd.concat([df_co, df_kgz, df_wlf])\n\n# Sort values by Country\ndf.sort_values(['Entity', 'Year'])\n\ndf.reset_index(level=0, inplace=True)\n\ndel df[\"index\"]\n\ndf.head()","db4a85de":"# Read the dataset into a data frame\ndf_inf = pd.read_csv('..\/input\/country-mapping-iso-continent-region\/continents2.csv', usecols=[\"alpha-3\", \"region\", \"sub-region\"])\n\n# Rename the column of data frame\ndf_inf.rename(columns={'alpha-3':'Code', 'region':'Region', 'sub-region':'Sub-Region'}, inplace=True)\n\n# Have a look at the data frame\ndf_inf.head()","f3ddbb00":"df_merged = pd.merge(df, df_inf, how='left', on='Code')\n\ndf_merged.info()","11229ccf":"df_merged_na = df_merged[df_merged['Region'].isnull()]\n\ndf_merged_na['Entity'].unique()","ff638364":"df_merged = df_merged[df_merged['Entity'] != 'World']\n\ndf_merged_na = df_merged[df_merged['Region'].isnull()]\n\ndf_merged_na['Entity'].unique()","577d8741":"df_merged['Region'].fillna('Europe', inplace=True)\n\ndf_merged['Sub-Region'].fillna('Eastern Europe', inplace=True)\n\ndf_merged.info()","773001d3":"df_merged.head()","6ebb5900":"# Plot the choropleth map figure\nfig = px.line(df_merged,\n              x=\"Year\",\n              y=\"Annual CO\u2082 emissions (tonnes )\",\n              hover_name = 'Entity',\n              hover_data=['Entity','Annual CO\u2082 emissions (tonnes )'],\n              color='Entity',\n              labels={'Entity':'Country','Annual CO\u2082 emissions (tonnes )':'CO\u2082 Emission'},\n              height=600)\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Change in CO\u2082 Emission Between Years 1750 and 2017 - Countries\",\n                  title_x=0.50)\n\n# Remove the legend\nfig.update_layout(showlegend = False)\n\n# Make background transparent\n# fig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)', 'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Show color scale axis\nfig.update(layout_coloraxis_showscale = True)\n\n# Show the figure\nfig.show()","93cbd5d0":"# Group the data frame by Code and Entity columns and sum the CO2 emission\ntotal_reg = df_merged.groupby([\"Region\", \"Year\"])[\"Annual CO\u2082 emissions (tonnes )\"].sum()\n\n# Create a data frame from the resulting series\ndf_reg = pd.DataFrame(total_reg)\n\n# Resulting data frame will have 2 index columns: Code and Entity\n# We should reset the index to convert them into columns\ndf_reg.reset_index(level=0, inplace=True)\ndf_reg.reset_index(level=0, inplace=True)\n\ndf_reg.head()","51092eef":"fig = px.area(df_reg,\n              x=\"Year\",\n              y=\"Annual CO\u2082 emissions (tonnes )\",\n              color=\"Region\",\n              facet_col=\"Region\",\n              facet_col_wrap=5,\n              labels={'Entity':'Country','Annual CO\u2082 emissions (tonnes )':'CO\u2082 Emission'},\n              height=350)\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Change in CO\u2082 Emission Between Years 1750 and 2020 - Regions\",\n                  title_x=0.50)\n\n# Remove the legend\nfig.update_layout(showlegend = False)\n\n# Make background transparent\n# fig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)', 'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Show the figure\nfig.show()","803b43f3":"# Group the data frame by Year column and sum the CO2 emission\ntotal_year = df_merged.groupby(\"Year\")[\"Annual CO\u2082 emissions (tonnes )\"].sum()\n\n# Create a data frame from the resulting series\ndf_total_year = pd.DataFrame(total_year)\n\n# Resulting data frame will have Year column as index\n# We should reset the index to convert it into columns\ndf_total_year.reset_index(level=0, inplace=True)\n\ndf_total_year.head()","b7f7d5da":"# Plot the choropleth map figure\nfig = px.area(df_total_year,\n              x=\"Year\",\n              y=\"Annual CO\u2082 emissions (tonnes )\",\n              hover_name = 'Year',\n              hover_data=['Year','Annual CO\u2082 emissions (tonnes )'],\n              #color='Entity',\n              labels={'Year':'Year','Annual CO\u2082 emissions (tonnes )':'CO\u2082 Emission'},\n              height=600)\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Change in CO\u2082 Emission Between Years 1750 and 2017\",\n                  title_x=0.50)\n\n# Remove the legend\nfig.update_layout(showlegend = False)\n\n# Make background transparent\n# fig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)', 'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Show color scale axis\nfig.update(layout_coloraxis_showscale = True)\n\n# Show the figure\nfig.show()","44e40424":"# Group the data frame by Code and Entity columns and sum the CO2 emission\ntotal = df_merged.groupby([\"Code\",\"Entity\"])[\"Annual CO\u2082 emissions (tonnes )\"].sum()\n\n# Create a data frame from the resulting series\ndf_total = pd.DataFrame(total)\n\n# Resulting data frame will have 2 index columns: Code and Entity\n# We should reset the index to convert them into columns\ndf_total.reset_index(level=0, inplace=True)\ndf_total.reset_index(level=0, inplace=True)\n\ndf_total.head()","5005cc00":"# Plot the choropleth map figure\nfig = px.choropleth(df_total,\n                    locations=\"Code\", \n                    locationmode='ISO-3',\n                    color=\"Annual CO\u2082 emissions (tonnes )\", \n                    hover_name=\"Entity\", \n                    hover_data=['Entity','Annual CO\u2082 emissions (tonnes )'],\n                    color_continuous_scale=\"Peach\",\n                    labels={'Entity':'Country','Annual CO\u2082 emissions (tonnes )':'Total CO\u2082 Emission'})\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Total CO\u2082 Emission Between Years 1750 and 2017 - Countries\",\n                  title_x=0.47)\n\n# Make background transparent\nfig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)', 'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Show color scale axis\nfig.update(layout_coloraxis_showscale=True)\n\n# Show the figure\nfig.show()","a9aca7fd":"# Sort data frame by total CO2 emission\ndf_merged_y = df_merged.sort_values(['Entity','Year'], ascending = [True, True])\n\n# Create a Year Only column and convert it to integer type to use it in the animation frame\ndf_merged_y['Year Only'] = pd.DatetimeIndex(df_merged_y['Year']).year\ndf_merged_y['Year'].astype('int')\n\n# Create an aggregated column for CO2 emission with cumsum()\ndf_merged_y['Cumulative CO2 Emission'] = df_merged_y.groupby('Entity')['Annual CO\u2082 emissions (tonnes )'].transform(pd.Series.cumsum)\n\n# Sort the data frame again for the animated map plot\ndf_merged_ys = df_merged_y.sort_values('Year', ascending = True)\n\n# Plot the animated choropleth map figure\nfig = px.choropleth(df_merged_ys,\n                    locations=\"Code\", \n                    locationmode='ISO-3',\n                    color=\"Cumulative CO2 Emission\", \n                    hover_name=\"Entity\", \n                    hover_data=['Cumulative CO2 Emission'],\n                    color_continuous_scale=\"Peach\",\n                    animation_frame=\"Year Only\"\n                   )\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Change in CO\u2082 Emission Between Years 1750 and 2017 - Countries\", \n                  title_x=0.5)\n\n# Show the figure\nfig.show()","f4408135":"# Sort data frame by total CO2 emission\ndf_total_sorted = df_total.sort_values('Annual CO\u2082 emissions (tonnes )', ascending = False)\n\n# Select first 20 rows\ndf_total_sorted = df_total_sorted.iloc[0:19,:]\n\n# Plot the bar figure\nfig = px.bar(df_total_sorted,\n              x = 'Entity',\n              y = 'Annual CO\u2082 emissions (tonnes )',\n              color='Annual CO\u2082 emissions (tonnes )',\n              hover_name = 'Entity',\n              hover_data = ['Annual CO\u2082 emissions (tonnes )'],\n              color_continuous_scale = 'Peach',\n              labels={'Entity':'Country','Annual CO\u2082 emissions (tonnes )':'Total CO\u2082 Emission'},\n              height=500)\n\n# Adjust text label size & angle and the title\nfig.update_layout(uniformtext_minsize = 15,\n                  xaxis_tickangle = -45,\n                  title = 'Total CO\u2082 Emission Between Years 1750 and 2017 - Top 20 Countries',\n                  title_x = 0.5)\n\n# Make background transparent\nfig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)', 'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Hide color scale axis\nfig.update(layout_coloraxis_showscale=False)\n\n# Show the figure\nfig.show()","a1d3a9a7":"# Group the data frame by Code and Entity columns and sum the CO2 emission\ntotal_r = df_merged.groupby(['Region','Entity'])[\"Annual CO\u2082 emissions (tonnes )\"].sum()\n\n# Create a data frame from the resulting series\ndf_total_r = pd.DataFrame(total_r)\n\n# Sort the dataframe\ndf_total_r = df_total_r.sort_values('Annual CO\u2082 emissions (tonnes )', ascending = False)\n\n# Resulting data frame will have 2 index columns: Entity and Region\n# We should reset the index to convert them into columns\ndf_total_r.reset_index(level=0, inplace=True)\ndf_total_r.reset_index(level=0, inplace=True)\n\ndf_total_r.head(5)","35878e1b":"# Plot the bar chart\nfig = px.bar(df_total_r,\n              x = 'Region',\n              y = 'Annual CO\u2082 emissions (tonnes )',\n              color='Annual CO\u2082 emissions (tonnes )',\n              hover_name = 'Entity',\n              hover_data = ['Annual CO\u2082 emissions (tonnes )'],\n              color_continuous_scale = 'Peach',\n              labels={'Entity':'Country','Annual CO\u2082 emissions (tonnes )':'Total CO\u2082 Emission'},\n              height=500)\n\n# Adjust text label size & angle and the title\nfig.update_layout(uniformtext_minsize = 15,\n                  xaxis_tickangle = -45,\n                  title = 'Total CO\u2082 Emission Between Years 1750 and 2017 - Regions',\n                  title_x = 0.5)\n\n# Make bacground transparent\nfig.update_layout({'plot_bgcolor': 'rgba(0, 0, 0, 0)',\n                   'paper_bgcolor': 'rgba(0, 0, 0, 0)'})\n\n# Hide color scale axis\nfig.update(layout_coloraxis_showscale = True)\n\n# Show the figure\nfig.show()","38ad7bec":"# Read the dataset into a data frame\ndf_pop = pd.read_csv('..\/input\/population-by-country-2020\/population_by_country_2020.csv',\n                     usecols=[\"Country (or dependency)\",\n                              \"Population (2020)\",\n                              \"Density (P\/Km\u00b2)\",\n                              \"Land Area (Km\u00b2)\"])\n\n# Rename the column of data frame\ndf_pop.rename(columns={'Country (or dependency)':'Entity'}, inplace=True)\n\n# Have a look at the data frame\ndf_pop.head()","d9a2fd3c":"df_pop.info()","867d6dbb":"df_all = pd.merge(df_total_r, df_pop, how='left', on='Entity')\n\ndf_all.info()","c7130a28":"df_co_na = df_all[df_all['Population (2020)'].isnull()]\n\ndf_co_na['Entity'].unique()","05576427":"df_pop['Entity'].unique()","d6b15949":"# Define the dictionary\nmatches = {\"C\u00f4te d'Ivoire\":\"Cote d'Ivoire\",\n           \"DR Congo\":'Democratic Republic of Republic of the Congo',\n           \"Congo\":'Republic of the Congo', \n           \"Cabo Verde\":'Cape Verde', \n           \"Cura\u00e7ao\":'Curacao', \n           \"Czech Republic (Czechia)\":'Czech Republic', \n           \"Micronesia\":'Micronesia (country)',\n           \"Kyrgyzstan\":'Kyrgysztan', \n           \"Saint Kitts & Nevis\":'Saint Kitts and Nevis', \n           \"North Macedonia\":'Macedonia',\n           \"State of Palestine\":'Palestine', \n           \"R\u00e9union\":'Reunion',\n           \"Saint Pierre & Miquelon\":'Saint Pierre and Miquelon', \n           \"Sao Tome & Principe\":'Sao Tome and Principe', \n           \"Sint Maarten\":'Sint Maarten (Dutch part)', \n           \"Turks and Caicos\":'Turks and Caicos Islands',\n           \"Timor-Leste\":'Timor',\n           \"St. Vincent & Grenadines\":'Saint Vincent and the Grenadines', \n           \"Wallis & Futuna\":'Wallis and Futuna Islands'\n          } \n\n\n# Replace the country names in the population data frame\ndf_pop.replace({\"Entity\": matches}, inplace=True)\n\n# Perform the merge again\ndf_all = pd.merge(df_total_r, df_pop, how='left', on='Entity')\n\n# Since we couldn't find the information about 4 countries and we already covered Czech Republic,\n# we can drop these 5 countries\ndf_all.dropna(inplace=True)\n\n# Check if they are matched\ndf_all.info()","8bbc06ed":"df_all.head()","25ead543":"# Create a Logarithmic Scale for Density column so that we can have a smoother transition in colors\ndf_all['Log Scale'] = df_all['Density (P\/Km\u00b2)'].apply(lambda x : math.log2(x+1))\n\n# Plot the scatter chart\nfig = px.scatter(df_all, \n                 x=\"Annual CO\u2082 emissions (tonnes )\", \n                 y=\"Population (2020)\", \n                 size=\"Land Area (Km\u00b2)\", \n                 color=\"Log Scale\",\n                 color_continuous_scale=\"Temps\",\n                 hover_name=\"Entity\", \n                 hover_data=['Entity','Annual CO\u2082 emissions (tonnes )'],\n                 labels={'Entity':'Country',\n                         'Annual CO\u2082 emissions (tonnes )':'CO\u2082 Emission',\n                         'Population (2020)':'Population',\n                         'Log Scale':'Density'},\n                 log_x=True,\n                 log_y=True, \n                 size_max=40)\n\n# Update the title and adjust its location\nfig.update_layout(title=\"Population v. CO2 Emission, 2020\", \n                  title_x=0.5)\n\n# Show the figure\nfig.show()","c3a82a32":"So we had a look at the change in CO2 emission in time from the mid-18th century, now let's have a look at where we ended up in terms of countries and regions, and their total individual contribution to the total CO2 emitted through almost 250 years, almost 34 billion tonnes.","0ee87745":"For this, we will have a look at all the countries in the population data frame and try to find the countries above manually (Ctrl+F should help in that step).","e363d13e":"#### A better view for comparison\nAlthough it is obvious that the US has the highest share of CO2 emissions, surprisingly, Europe's total CO2 emission is slightly above than the total CO2 emission of the countries in Americas region.\n\n#### What about Asia?\nIn terms of distribution, Asia is somewhere between Americas and Europe. The superpowers of Asia: China, Japan and India generates more than half of the Region's CO2 emission, which is in the 3rd ranking after Europe and Americas regions.","caa96b99":"### Check which rows do not have region (and sub-region)","ccc99c11":"### Append all three data frames together to have the final country dataframe","bbab0a08":"#### Not a surprise!\nJust as expected, all of the most powerful countries in the world are shining orange and have emitted most of the CO2 gas in the world so far. These countries are US, China, Russia, Germany and the UK as we can observe from the map. Let's have a closer look and see a crystal-clear ranking.","3cd4bcdb":"#### Now we have an aggregated data frame and we can visualise the total CO2 emission values for all countries","397c871a":"### Drop the rows that contains World and check again","196dea29":"#### We dealt with all the NaN values in our merged data frame","b6cb6ac4":"Lets see if how the total CO2 emission of a country correlates to its population","14a07bba":"#### Let's have a look at the CO2 emission trend through years for every country","5df2c485":"# Visualising the CO2 Emission","1d956c75":"Now we will merge the data frame we used in Part 3.2, df_total and the population data frame to have the data frame we are going to use to see correlations between different features","7f3a8c61":"#### Now we can plot the line chart to see the total change in CO2 emission in the world from the year 1750","44d39ec2":"In this bubble chart, we put the two feature, that we want to see the correlation of. And the direct correlation between the population and the CO2 emission of the countries can be clearly seen: as population increases, CO2 emission increases as well.\n\n#### Use all functions of the bubble chart\nAnother dimension that can be easily observed from the bubble chart is the size of the bubbles, which represents the land area of every country. It is not easy to say how it correlates to CO2 emission because we have some small countries at the top such as  Japan, Germany and the UK.\n\n#### It is colorful as well!\nColor functionality allows us to see another dimension in the same chart: the density of every country. Again, not to see the correlation, but just to observe the country density along with all other features in just one visual.","6d2fe291":"## Introduction","67f545ce":"### Visualising the correlation of CO2 emission and other country features","6c166100":"#### Finally, have a look at the animated choropleth map to see how countries' CO2 emission have been changed through years\nFor this, we will first create a data frame that contains aggregated CO2 emission values for every country.","517b8864":"Although Europe and Americas are the regions having most of the CO2 emission in total, Asia's CO2 emission has skyrocketed in the last 2 decades.","62b7e8a0":"### Now, drop all rows containing NaN in their Code column\n#### There is no problem with dropping Kyrgysztan and Wallis and Futuna Islands rows since we are going to append their data frames to the main one.","9136df79":"## 3. Visualising the CO2 Emission","7b776d70":"It is pretty obvious that the amount of CO2 released to the atmosphere has been increased significantly in last 70 years, causing a variety of unwanted consequences all over the world: natural disasters such as fires and tornados and glacial meltdown.\n\n### It's never too late!\nSome say that we hit the point 'no-return' for global warming, yet we know that mother nature can heal anything. If we act together now, before losing all the forests, icebergs and infinite number of different species living on earth, we can still heal our world. ","d930977c":"### See which rows do not have ISO Code","4f1bb1f2":"### Have a look at the final data frame","fe5c7fe9":"### 3.1 CO2 Emission Change in Time","96cd1bf0":"![GettyImages-155141288-polar-bear-hero.jpg](attachment:GettyImages-155141288-polar-bear-hero.jpg)","b97cfb41":"#### In top 20, there are countries from every part of the world. Let's have a look at the Region distribution to understand which region emitted most of the CO2 so far.","082e1eb7":"#### It looks like there are only two countries, which don't have their ISO ALPHA-3 code missing. They are Kyrgysztan and Wallis and Futuna Islands. We will add their codes, KGZ and WLF manually.","03f329c4":"#### Guessed it!\nI honestly wrote the countries above before plotting this one, and it looks like I have eagle eyes. The top 5 comprises of US, China, Russia, Germany and the UK (in the exactly same order).","d8029301":"We will replace the unmatched country names in the population data frame and perform the merge again.","d6200102":"### Fill the NaN values in the rows that contain Czechoslovakia in their Entity column","03c276a5":"#### Finally, let's look at the total CO2 emission from all countries in the world.","f3397160":"### A multi-functional bubble chart","63c57391":"#### Since our final data frame contains yearly CO2 emission trend for all countries, we should group the data frame by the countries to have the total CO2 emission","e411d0fc":"### Read the CO2 data frame with necessary columns & parsing the date column","429f3457":"#### Put the same data into a bar chart to see top 20 countries","7b4318b4":"#### Plot the same bar chart for regions with the breakdown of countries","d33dff88":"### Merge the population data frame to the main data frame we used in Part 3.2","2abdc404":"The sudden increase in the CO2 emission has started in 1950 and it continues to increase almost ever year, apart from a couple of exceptions such as the years 1981, 1992 and 2009.","13c084a2":"## 5. Conclusion","aed2965e":"### If you've made it so far in the notebook, first, congratulations! and second, please let me know about your thoughts!\n\n- LinkedIn: https:\/\/www.linkedin.com\/in\/emrecanokten\/\n- Kaggle:https:\/\/www.kaggle.com\/emrecano\n\n### And do not forget the vote the notebook or like the post (whichever is applicable)!\n\n# Thanks a lot!","5d3ccdb2":"For this, we should aggregate the data frame by year column","c635f940":"So far we only played with CO2 emission data, saw its trend in time and distribution among different countries and regions.\n\n### A new dataset for country information \nNow we will introduce a new dataset containing other useful information about countries such as population, density, land area etc.","a36e87c4":"### 3.2 Total CO2 Emission and Its Distribution","7e0114c4":"## 1. Import necessary libraries","941e100b":"### We should replace the name of the countries not matching in two data frames","8d63a84c":"## 4. Relationship Between CO2 Emission and Other Country Info","fb5781a1":"So the unmatched countries in the CO2 data frame and their equivalent in the population data frame are given in the dictionary below: 'matches'","e2e17c9c":"#### Plot the area chart for every region in the same y-axis","cc62d644":"## 2. Data Manipulation on the CO2 Emission Dataset","db643b20":"### Use replace method to correct the country names","54c57433":"## Before closing...","c30c95ad":"#### Now observe the CO2 emission of different regions\nFor this, we need to create an aggregated data frame by Region and Year","06254fbd":"### Investigate what are the 23 countries having null in their recently merged columns","8de97f3e":"### Merge two datasets to have extended region information for all countries","7158b36c":"### Inspect the CO2 emission data frame","2fab4bb2":"### To get the region names for the countries, read the Country Codes dataset into a dataframe","cfb32b2b":"#### This notebook performs exploratory data analysis on multiple datasets and visualises the consolidated data.\n\nThe main objective is to visualise COVID-19 vaccination process globally and monitor its progress.\n\nPlotly is used to visualise the data.\n\n#### Used datasets are:\n\n- CO2_GHG_emissions-data\n- Country Mapping - ISO, Continent, Region\n- Population by Country - 2020\n\n#### Visualisations answer some simple questions:\n\n- How has CO2 release been changed since the year 1750?\n- What are the countries and regions causing most CO2 release?\n- Is there a correlation between a country's CO2 emission and its population?","5444aafe":"### Filling missing code values"}}