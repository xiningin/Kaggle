{"cell_type":{"97b57851":"code","6d0c0453":"code","1442a59e":"code","811e5b53":"code","0bbba2b6":"code","0ce0890c":"code","c75ed556":"code","68023e2c":"code","eee557d7":"code","b3503e23":"code","9cd6648c":"code","e55eaab4":"code","6e01ff64":"code","4fa9c1f8":"code","37966b1b":"code","649db4c2":"code","3abe4150":"code","b742c041":"code","2f9e63bd":"code","3c1c0940":"code","41892108":"code","7af9692e":"code","a7bfa0d6":"code","223cf239":"code","6549d77b":"markdown","d1f1df2c":"markdown","fb58c0b7":"markdown","5acc5314":"markdown","1d3e7ded":"markdown","a3f845d5":"markdown","20d741f1":"markdown","565f9fc5":"markdown","24cc94f9":"markdown","8ddb244c":"markdown","a9208ace":"markdown"},"source":{"97b57851":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","6d0c0453":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","1442a59e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","811e5b53":"train_datagen = ImageDataGenerator(rotation_range=20, # rotate the image 20 degrees\n                               width_shift_range=0.10, # Shift the pic width by a max of 5%\n                               height_shift_range=0.10, # Shift the pic height by a max of 5%\n                               rescale=1\/255, # Rescale the image by normalzing it.\n                               shear_range=0.1, # Shear means cutting away part of the image (max 10%)\n                               zoom_range=0.1, # Zoom in by 10% max\n                               horizontal_flip=True, # Allo horizontal flipping\n                               fill_mode='nearest' # Fill in missing pixels with the nearest filled value\n                              )\ntrain_set = train_datagen.flow_from_directory('\/kaggle\/input\/for-image-classification-of-cheetah-vs-hyena\/train\/', \n                                                    target_size=(200,200),\n                                                      color_mode='rgb',\n                                                    batch_size=8,\n                                                    class_mode='binary',)","0bbba2b6":"test_datagen = ImageDataGenerator(rescale=1\/255)\ntest_set = test_datagen.flow_from_directory('\/kaggle\/input\/for-image-classification-of-cheetah-vs-hyena\/validation\/',\n                                                  target_size=(200,200),\n                                                    color_mode='rgb',\n                                                  batch_size=8,\n                                                  class_mode='binary',\n                                           shuffle=False)","0ce0890c":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Conv2D,MaxPooling2D,Flatten,Dropout","c75ed556":"model = Sequential()\n\nmodel.add(Conv2D(filters=32,kernel_size=(3,3),activation='relu',input_shape=(200,200,3)))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(filters=64,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Conv2D(filters=128,kernel_size=(3,3),activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2,2)))\n\nmodel.add(Flatten())\n\nmodel.add(Dense(256, activation='relu'))\nmodel.add(Dropout(0.5, seed=42))\nmodel.add(Dense(1, activation='sigmoid')) \n\nmodel.compile(optimizer='adam',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])","68023e2c":"from tensorflow.keras.callbacks import EarlyStopping","eee557d7":"early_stop = EarlyStopping(monitor='val_loss',mode='min',verbose=1, patience=10)\nmodel.fit(x=train_set, validation_data=(test_set), batch_size=8, epochs=1000, callbacks=[early_stop])","b3503e23":"losses = pd.DataFrame(model.history.history)\nlosses[['loss','val_loss']].plot()","9cd6648c":"model.evaluate_generator(test_set)","e55eaab4":"from tensorflow.keras.preprocessing import image","6e01ff64":"pred_probabilities = model.predict(test_set)","4fa9c1f8":"test_set.classes","37966b1b":"pred_probabilities","649db4c2":"predictions = pred_probabilities > 0.5","3abe4150":"predictions","b742c041":"test_set.classes","2f9e63bd":"from sklearn.metrics import classification_report,confusion_matrix,roc_auc_score","3c1c0940":"print(classification_report(test_set.classes,predictions))","41892108":"confusion_matrix(test_set.classes,predictions)","7af9692e":"test_set.class_indices","a7bfa0d6":"train_set.class_indices","223cf239":"roc_auc_score(test_set.classes,predictions)","6549d77b":"Going to take the following approach:\n\n1. Problem definition\n2. Data\n3. Evaluation\n4. Features\n5. Modelling\n6. Model Evaluation\n7. Experimentation \/ Improvements","d1f1df2c":"# 4. Features\n\n## inputs \/ features\n\n    image of cheetah or hyena.\n\n## Output \/ labels\n\n    cheetah or hyena","fb58c0b7":"# 2. Data\n\nData from: https:\/\/www.kaggle.com\/singhdatascientist\/for-image-classification-of-cheetah-vs-hyena","5acc5314":"# 5. Modelling","1d3e7ded":"# 1. Problem Definition\n\nHow we can use various python based Machine Learning Model and given an image, can we predict if it's a cheetah or hyena","a3f845d5":"### Preprocessing the Training set","20d741f1":"# 6. Model Evaluation","565f9fc5":"### Preprocessing the Testing set","24cc94f9":"## Standard imports","8ddb244c":"# 3. Evaluation\n\nAs this is a classification problem, we will use the classification metics for evauluting the model","a9208ace":"# Classification of cheetah vs hyena"}}