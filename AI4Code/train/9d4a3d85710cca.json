{"cell_type":{"07af01d6":"code","938bcd72":"code","c0cb65ec":"code","7cfcf7da":"code","ff8dc295":"code","a2c6f72e":"code","bf201baf":"code","43753f30":"code","9bf6f868":"code","468297f7":"code","d73f53c0":"code","efdc71f4":"code","a8d8497f":"code","fdb7234e":"code","9a01bc16":"code","264e7264":"code","0a7393af":"markdown"},"source":{"07af01d6":"import matplotlib.pyplot as plt\nimport numpy as np","938bcd72":"from sklearn.datasets import fetch_lfw_people\npeople = fetch_lfw_people(min_faces_per_person=20,resize=0.7)\nimage_shape = people.images[0].shape","c0cb65ec":"fix,axes = plt.subplots(2,5,figsize=(15,8),subplot_kw={'xticks': (),'yticks':()})\nfor target,image,ax in zip(people.target,people.images,axes.ravel()):\n    ax.imshow(image)\n    ax.set_title(people.target_names[target])","7cfcf7da":"people.images.shape","ff8dc295":"print(\"Number of Classes: {}\".format(len(people.target_names)))","a2c6f72e":"counts = np.bincount(people.target)\nfor i,(count, name) in enumerate(zip(counts, people.target_names)):\n    print(\"{0:25} {1:3}\".format(name,count),end=' ')\n    if(i+1)%3 == 0:\n        print()","bf201baf":"mask = np.zeros(people.target.shape,dtype=np.bool)\nfor target in np.unique(people.target):\n    mask[np.where(people.target == target)[0][:50]] = 1\nX_people = people.data[mask]\ny_people = people.target[mask]\nX_people = X_people\/255","43753f30":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X_people,y_people,stratify = y_people,random_state=0)\nknn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train,y_train)\nprint(\"Test set score of 1-nn: {:.2f}\".format(knn.score(X_test,y_test)))","9bf6f868":"!pip install mglearn\nimport mglearn\nmglearn.plots.plot_pca_whitening()","468297f7":"from sklearn.decomposition import PCA\npca = PCA(n_components=100,whiten=True,random_state=0).fit(X_train)\nX_train_pca = pca.transform(X_train)\nX_test_pca = pca.transform(X_test)","d73f53c0":"print(\"X_train_pca.shape: {}\".format(X_train_pca.shape))","efdc71f4":"knn = KNeighborsClassifier(n_neighbors=1)\nknn.fit(X_train_pca,y_train)","a8d8497f":"print(\"pca.components_.shape: {}\".format(pca.components_.shape))","fdb7234e":"fix,axes = plt.subplots(3,5,figsize=(15,12),subplot_kw={'xticks': (),'yticks': ()})\nfor i,(component,ax) in enumerate(zip(pca.components_,axes.ravel())):\n    ax.imshow(component.reshape(image_shape),cmap = 'viridis')\n    ax.set_title(\"{}. component\".format((i+1)))","9a01bc16":"mglearn.plots.plot_pca_faces(X_train,X_test,image_shape)","264e7264":"plt.figure(figsize=(15,10))\nmglearn.discrete_scatter(X_train_pca[:,0],X_train_pca[:,1],y_train)\nplt.xlabel('First principal component')\nplt.ylabel('Second principal component')","0a7393af":"## Reference taken from Intro to ML by Python"}}