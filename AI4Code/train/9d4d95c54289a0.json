{"cell_type":{"31e5b0b5":"code","8d6df666":"code","595ad95c":"code","22a3335d":"code","21efbdbb":"code","0dad59f0":"code","05a7574f":"code","0d09dcf5":"code","11ddcc45":"code","b18affc1":"code","0ded1632":"code","3183dc3e":"code","34dc1503":"code","962c0a7e":"code","93811a2e":"code","530ad3d6":"code","fc297fa4":"code","0dc56b6d":"markdown","e868e538":"markdown","24b0455a":"markdown","07aaaefb":"markdown"},"source":{"31e5b0b5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n#Libs\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport seaborn as sns\nimport matplotlib.pyplot as plt\npd.set_option('max_columns', None)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\ndir =[]\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        dir.append(os.path.join(dirname, filename))\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d6df666":"per_game_stats = pd.read_csv('\/kaggle\/input\/michael-jordan-kobe-bryant-and-lebron-james-stats\/per_game_stats.csv')\nper_game_stats.head()","595ad95c":"# MP\ndef compare_MP():\n    subset = per_game_stats.loc[:, ['Player','MP']].groupby('Player').median()\n    return subset\n\ncompare_MP()","22a3335d":"#3p%\ndef compare_3P():\n    subset = per_game_stats.loc[:, ['Player','3P%']].groupby('Player').median()\n    return subset\n\ncompare_3P()","21efbdbb":"#2p%\ndef compare_2P():\n    subset = per_game_stats.loc[:, ['Player','2P%']].groupby('Player').median()\n    return subset\n\ncompare_2P()","0dad59f0":"#blks\ndef compare_BLK():\n    subset = per_game_stats.loc[:, ['Player','BLK']].groupby('Player').median()\n    return subset\n\ncompare_BLK()","05a7574f":"#ptskobe\ndef compare_PTS():\n    subset = per_game_stats.loc[:, ['Player','PTS']].groupby('Player').median()\n    return subset\n\ncompare_PTS()","0d09dcf5":"#Pts for MPs\n\ndef compare_PTS_MP():\n\n    subset = per_game_stats.loc[:, ['Player','PTS', 'MP']]\n    subset['PTS\/MP'] = subset['PTS'] \/ subset['MP']\n    subset = subset[['Player','PTS\/MP']].groupby('Player').median()\n    return subset\n\ncompare_PTS_MP()","11ddcc45":"MJ = per_game_stats.loc[per_game_stats['Player'] == 'Michael Jordan', ['PTS']]\nprint(f'Tamanho da amostra {MJ.shape}')\n\nLBJ = per_game_stats.loc[per_game_stats['Player'] == 'Lebron James', ['PTS']]\nprint(f'Tamanho da amostra {LBJ.shape}')\n\nkobe = per_game_stats.loc[per_game_stats['Player'] == 'Kobe Bryant', ['PTS']]\nprint(f'Tamanho da amostra {kobe.shape}')","b18affc1":"# Checking the distributions\nplt.figure(figsize = (12,8))\nsns.distplot(MJ, label='MJ')\nsns.distplot(LBJ, label='LBJ')\nsns.distplot(kobe, label='Kobe')\nplt.legend()","0ded1632":"f, (ax,ax1,ax2) = plt.subplots(1,3, figsize=(12,8))\nax.boxplot(MJ['PTS'])\nax1.boxplot(LBJ['PTS'])\nax2.boxplot(kobe['PTS'])","3183dc3e":"# homoscedasticity - To determine if the variations are different.\n\ndef check_homoscedasticity(obj1, obj2, obj3):\n    return stats.levene(obj1['PTS'].tolist(),obj2['PTS'].tolist(),obj3['PTS'].tolist())\n\ncheck_homoscedasticity(MJ, LBJ, kobe)","34dc1503":"# H-test (kruskal)\n\ndef Kruskal_ANOVA(obj1, obj2, obj3):\n    anova = stats.kruskal(obj1, obj2, obj3)\n    return anova\n\nKruskal_ANOVA(MJ, LBJ, kobe)","962c0a7e":"# Data\nsubset = per_game_stats.loc[:, ['Player','PTS', 'MP']]\nsubset['PTS\/MP'] = subset['PTS'] \/ subset['MP']","93811a2e":"# Checking the distributions\n\nsubset_MJ = subset.loc[subset['Player'] == 'Michael Jordan',['PTS\/MP'] ]\nsubset_LBJ = subset.loc[subset['Player'] == 'Lebron James',['PTS\/MP'] ]\nsubset_kobe = subset.loc[subset['Player'] == 'Kobe Bryant',['PTS\/MP'] ]\n\nplt.figure(figsize = (12,8))\nsns.distplot(subset_MJ, label='MJ')\nsns.distplot(subset_LBJ, label='LBJ')\nsns.distplot(subset_kobe, label='kobe')\nplt.legend()","530ad3d6":"f, (ax,ax1,ax2) = plt.subplots(1,3, figsize=(12,8))\nax.boxplot(subset_MJ['PTS\/MP'])\nax1.boxplot(subset_LBJ['PTS\/MP'])\nax2.boxplot(subset_kobe['PTS\/MP'])","fc297fa4":"def Kruskal_ANOVA(obj1, obj2, obj3):\n    anova = stats.kruskal(obj1, obj2, obj3)\n    return anova\n\nKruskal_ANOVA(subset_MJ,subset_LBJ,subset_kobe)","0dc56b6d":"# Comparing attributes.","e868e538":"# Testing Points Per Minute\n\nWe obtained the same result for the 'PTS' test, with Michael Jordan establishing himself as the best player.","24b0455a":"# Goals:\n\n## Our work will have two phases.\n\n1 - We will compare the three athletes in the following categories MP, 3p%, 2p%, blk, PTS, PTSS for MP, we will analyze the numbers.\n\n2 - We will apply a hypothesis test in the series of the variable PTS, to determine if there is any statistical difference between the numbers of the three athletes.\n\nAnalyze:\n\nThrough the tests carried out, we observed that Lebron James wins the dispute in terms of MP, 3p%, 2p%, but Michael Jordan wins in terms of blk, PTS, PTS per Minute. So we have to crown Mike as the best of all time, remembering that of the three only LBJ is still playing and can turn that game around.","07aaaefb":"# Kruscall-Wallis test\u00b6\n\nTo determine if there is a significant difference between the PTS and PTS \/ MP series.\n\nPoints to consider:\n\nThe samples are different but very close.\nThe variances are different from each other as we can see through the homoscedasticity test\n\nDue to different variance terms and outliers and enough observations I decided to use the Kruskal-wallis test\n\nThe Kruskal test verifies that the null hypothesis, there is no difference between the medians of the samples, should be maintained or rejected. As in the case we obtained a very small number 1.1109457544199316e-05 well below 0.05 (confidence level) we reject the null hypothesis, that is, there is evidence that the medians are different. So in terms of points per game Michael Jordan was the best player."}}