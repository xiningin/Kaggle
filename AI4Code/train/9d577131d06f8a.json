{"cell_type":{"bff7eb5e":"code","9fb3b141":"code","1b2a7ef5":"code","54c08b08":"code","bddc8675":"code","f01bdfd4":"code","144d1d49":"code","4d35887d":"code","d9905a92":"code","4fe6b1f7":"code","bdb74301":"code","618ccdab":"code","42938036":"code","4c386b04":"code","6c242b78":"code","ed8c5ee8":"code","e3d2205a":"code","0bfd289a":"code","65b29d6a":"markdown","c2b8bfc2":"markdown"},"source":{"bff7eb5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9fb3b141":"df = pd.read_json('\/kaggle\/input\/imgwdatarzbiala10\/data10.json')","1b2a7ef5":"print(df.head())","54c08b08":"df.wartosc.skew()\ndata = df['wartosc']","bddc8675":"x = data.index.values\nz = np.polyfit(data.index.values, list(data), 1)\np = np.poly1d(z)\ntrendcolname = 'trend - {}'.format(z[0])\ndf[trendcolname] = p(x)","f01bdfd4":"ax = plt.gca()\ndf.plot(kind='line',x='czas',y='wartosc',ax=ax, figsize=(32,18))\ndf.plot(kind='line',x='czas',y=trendcolname, color='red', ax=ax)\nplt.title('rz. Bia\u0142a - Tarn\u00f3w')\nplt.ylabel('Wysoko\u015b\u0107 lustra wody [cm]')\nplt.show()","144d1d49":"ax = plt.gca()\ndf.plot(kind='line',x='czas',y='wartosc',ax=ax, figsize=(32,18), logy=True)\ndf.plot(kind='line',x='czas',y=trendcolname, color='red', ax=ax, logy=True)\nplt.title('rz. Bia\u0142a - Tarn\u00f3w')\nplt.ylabel('Wysoko\u015b\u0107 lustra wody (logscale) [cm]')\nplt.show()","4d35887d":"p(0) - p(len(data.index.values)-1)","d9905a92":"df['parsed_time'] = df['czas'].apply(pd.to_datetime)","4fe6b1f7":"df['year'] = df['parsed_time'].dt.year \ndf['season'] = df['parsed_time'].dt.dayofyear.map(season) ","bdb74301":"spring = range(80, 172)\nsummer = range(172, 264)\nfall = range(264, 355)\n\ndef season(x):\n    if x in spring:\n       return 'Spring'\n    if x in summer:\n       return 'Summer'\n    if x in fall:\n       return 'Fall'\n    else:\n       return 'Winter'\n","618ccdab":"df[df['wartosc'] < df['p_ostrzegawczy']].hist(column='wartosc', bins=100, by='year', figsize=(32,18))","42938036":"df[df['wartosc'] < 100].hist(column='wartosc', bins=100, by='year', figsize=(32,18))","4c386b04":"df_non_alarm = df[df['wartosc'] < df['p_ostrzegawczy']]","6c242b78":"df_non_alarm['wartosc'].describe()","ed8c5ee8":"df_non_alarm.groupby(['year']).wartosc.describe()","e3d2205a":"df_non_alarm.boxplot(column='wartosc', by='year', figsize=(32,18))","0bfd289a":"df_non_alarm.hist(column='wartosc', bins=100, by='season', figsize=(32,18))","65b29d6a":"R\u00f3\u017cnica mi\u0119dzy pocz\u0105tkiem a ko\u0144cem linii trendu [cm]","c2b8bfc2":"> Markdown elo *pogrubione* \n[link](http:\/\/)\n\nok"}}