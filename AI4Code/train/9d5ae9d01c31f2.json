{"cell_type":{"d17b8dae":"code","8343f0b9":"code","1b0ebd15":"code","df652173":"code","3850e0b6":"code","47894c98":"code","550c34e5":"code","ac384ccc":"code","34cbd783":"code","4b90d976":"code","f4c4eeba":"code","6f67d4f8":"code","07206f24":"code","0f480c96":"code","6a626b12":"code","bc5ec419":"code","0393b7ce":"code","3a819f93":"code","dc87af3c":"code","e4953789":"code","88a3c7e2":"code","4432100c":"code","c2ad2e10":"code","0472c742":"code","0afe08ee":"code","708a33ed":"code","37392623":"code","3753af14":"code","a89052f5":"code","da12a753":"code","36691a84":"code","0b123123":"code","749f7ffa":"code","1bc4be79":"code","3f3594b7":"code","cfc16c92":"code","c11082a7":"code","7ab3baa7":"code","3b24ff7f":"code","3550f400":"code","fe8267c7":"code","4ced1e06":"code","81e75f21":"code","106cabcb":"code","3fa4c27b":"code","8d896728":"code","f53445b0":"code","30d172c6":"code","4e0e6efb":"code","98f14b69":"code","eb813866":"code","d083f990":"code","efeef35b":"code","5060bf98":"code","994ae714":"code","432e6c39":"code","03e2ac95":"code","cfec3d83":"code","212bb970":"markdown","decc4810":"markdown","10315ceb":"markdown","9376f4bc":"markdown","16abc1e3":"markdown","3f8d5d03":"markdown","9424d13c":"markdown","b44df38f":"markdown","d3c10169":"markdown","4dabade9":"markdown","4c1754fd":"markdown","b9ee527d":"markdown","9593aa49":"markdown","65141fb3":"markdown","8e074127":"markdown","308d7341":"markdown","cc108401":"markdown","bb96631b":"markdown","1c793a59":"markdown","316c8fde":"markdown","fea207ee":"markdown","21d71dc4":"markdown","23b0ae44":"markdown","8a150b8d":"markdown","1f0b91b1":"markdown","edd0e82e":"markdown","7b22eaac":"markdown","dfa8fb70":"markdown","4dac2ce8":"markdown","5b420099":"markdown"},"source":{"d17b8dae":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8343f0b9":"data=pd.read_csv(\"..\/input\/vehicle-dataset-from-cardekho\/car data.csv\")","1b0ebd15":"data.head()","df652173":"data.shape","3850e0b6":"data.isnull()","47894c98":"data.isnull().sum()","550c34e5":"data.describe()","ac384ccc":"data.info()","34cbd783":"print(\"Fuel type:-\", data['Fuel_Type'].unique())\nprint(\"Seller:-\", data['Seller_Type'].unique())\nprint(\"Transmission:-\", data['Transmission'].unique())\nprint(\"Owner:-\", data['Owner'].unique())\nprint(\"Year:-\",data['Year'].unique())","4b90d976":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","f4c4eeba":"plt.figure(figsize=[12,8])\nsns.countplot(x='Year',data=data)","6f67d4f8":"data['Vehicle_age']=2021-data['Year']","07206f24":"data.drop(['Year'],axis=1,inplace=True)","0f480c96":"data.head()","6a626b12":"sns.pairplot(data)","bc5ec419":"plt.figure(figsize=[12,7])\nplt.subplot(2,2,1)\nsns.countplot(x='Fuel_Type',data=data)\nplt.subplot(2,2,2)\nsns.countplot(x='Owner',data=data)\n\nplt.subplot(2,2,3)\nsns.countplot(x='Transmission',data=data)\nplt.subplot(2,2,4)\nsns.countplot(x='Seller_Type',data=data)\nplt.show()","0393b7ce":"plt.figure(figsize=[12,7])\nplt.subplot(2,2,1)\nsns.boxplot(x='Selling_Price',data=data)\nplt.subplot(2,2,2)\nsns.boxplot(x='Present_Price',data=data)\n\nplt.subplot(2,2,3)\nsns.boxplot(x='Kms_Driven',data=data)\nplt.subplot(2,2,4)\nsns.boxplot(x='Vehicle_age',data=data)\nplt.show()","3a819f93":"# Cars with  selling price more than 20 lakhs \ndata[data['Selling_Price']>20]","dc87af3c":"# Cars that are driven for more than 1 Lakh Kms.\ndata[data['Kms_Driven']>100000]","e4953789":"# Cars older than 15 years of age.\ndata[data['Vehicle_age']>15]","88a3c7e2":"plt.figure(figsize=[12,8])\nsns.heatmap(data.corr(),annot=True,cmap='PuBuGn')","4432100c":"plt.figure(figsize=[9,6])\nplt.subplot(1,2,1)\nsns.barplot(x='Fuel_Type',y='Selling_Price',data=data)\nplt.subplot(1,2,2)\nsns.stripplot(x='Fuel_Type',y='Selling_Price',data=data)\n","c2ad2e10":"plt.figure(figsize=[9,6])\nplt.subplot(1,2,1)\nsns.barplot(x='Seller_Type',y='Selling_Price',data=data)\nplt.subplot(1,2,2)\nsns.stripplot(x='Seller_Type',y='Selling_Price',data=data)","0472c742":"plt.figure(figsize=[9,6])\nplt.subplot(1,2,1)\nsns.barplot(x='Transmission',y='Selling_Price',data=data)\nplt.subplot(1,2,2)\nsns.stripplot(x='Transmission',y='Selling_Price',data=data)","0afe08ee":"plt.figure(figsize=[9,6])\nplt.subplot(1,2,1)\nsns.barplot(x='Owner',y='Selling_Price',data=data)\nplt.subplot(1,2,2)\nsns.stripplot(x='Owner',y='Selling_Price',data=data)","708a33ed":"plt.figure(figsize=[12,6])\nsns.scatterplot(x='Vehicle_age',y='Selling_Price',data=data)","37392623":"plt.figure(figsize=[12,6])\nsns.scatterplot(x='Kms_Driven',y='Selling_Price',data=data)","3753af14":"data.drop(['Car_Name'],inplace=True,axis=1)\ndata=pd.get_dummies(data,drop_first=True)","a89052f5":"data.head()","da12a753":"x=data.iloc[:,1:]\ny=data.iloc[:,0].values","36691a84":"x.head()","0b123123":"print(y)","749f7ffa":"#Feature Importance\nfrom sklearn.ensemble import ExtraTreesRegressor\netr=ExtraTreesRegressor()\netr.fit(x,y)","1bc4be79":"print(etr.feature_importances_)","3f3594b7":"#plotting important feature\nimp=pd.Series(etr.feature_importances_,index=x.columns)\nimp.nlargest(5).plot(kind='barh')\nplt.show()","cfc16c92":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)","c11082a7":"from sklearn.linear_model import LinearRegression\nlr=LinearRegression()\nlr.fit(x_train,y_train)","7ab3baa7":"# predicting value using linear regression\ny_pred=lr.predict(x_test)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))\n","3b24ff7f":"plt.figure(figsize=[10,6])\nplt.plot(y_pred,label='Predicted')\nplt.plot(y_test,label=\"Actual_test\")\nplt.legend()\nplt.title(\"Linear Regression Model\")","3550f400":"from sklearn.metrics import r2_score\nlr_r2=r2_score(y_test, y_pred)\nprint(lr_r2)","fe8267c7":"# Feature scalling\nfrom sklearn.preprocessing import StandardScaler\nsc_x=StandardScaler()\nsc_y=StandardScaler()\nx_train_scaled=sc_x.fit_transform(x_train)\ny_train=y_train.reshape(len(y_train),1)\ny_train_scaled=sc_y.fit_transform(y_train)","4ced1e06":"print(x_train_scaled)","81e75f21":"print(y_train_scaled)","106cabcb":"from sklearn.svm import SVR\nsvr=SVR(kernel='rbf')\nsvr.fit(x_train_scaled,y_train_scaled)","3fa4c27b":"#predicting values\ny_pred=sc_y.inverse_transform(svr.predict(sc_x.transform(x_test)))\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","8d896728":"plt.figure(figsize=[10,6])\nplt.plot(y_pred,label='Predicted')\nplt.plot(y_test,label=\"Actual_test\")\nplt.legend()\nplt.title(\"Support Vector Regressor Model\")","f53445b0":"svr_r2=r2_score(y_test, y_pred)\nprint(svr_r2)","30d172c6":"from sklearn.ensemble import RandomForestRegressor\nrfr=RandomForestRegressor()\n","4e0e6efb":"from sklearn.model_selection import RandomizedSearchCV\nn_estimators=[100,200,300,400,500,600,700,800,900,1000,1100,1200]\nmax_features=['auto','sqrt']\nmax_depth=[5,10,15,20,25,30]\nmin_samples_split=[2,5,10,15,100]\nmin_samples_leaf=[1,2,5,10,12]","98f14b69":"# creating random grid\nrandom_grid={'n_estimators': n_estimators,'max_features': max_features,\n            'max_depth': max_depth,'min_samples_split': min_samples_split,\n            'min_samples_leaf': min_samples_leaf}\nprint(random_grid)","eb813866":"rfr_random = RandomizedSearchCV(estimator = rfr, param_distributions = random_grid, n_iter = 10, cv = 6, verbose=2, random_state=14, n_jobs = 1)\n","d083f990":"rfr_random.fit(x,y)","efeef35b":"rfr_random.best_params_","5060bf98":"rfr_random.best_score_","994ae714":"y_pred=rfr_random.predict(x_test)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","432e6c39":"plt.figure(figsize=[10,6])\nplt.plot(y_pred,label='Predicted')\nplt.plot(y_test,label=\"Actual_test\")\nplt.legend()\nplt.title(\"Random Forest Regressor Model\")","03e2ac95":"rfr_r2=r2_score(y_test, y_pred)\nprint(rfr_r2)","cfec3d83":"# comparing models R^2 \nmodel=[\"Linear Regression\",\"SupportVectorRegressor\",\"RandomForestRegressor\"]\nvalues=[lr_r2,svr_r2,rfr_r2]\ntable=pd.DataFrame({\"Models\":model,\"R squared\":values})\ndisplay(table)","212bb970":"### support vector regressor\n","decc4810":"### Linear regression ","10315ceb":"### **Model Building**","9376f4bc":"**Plotting countplot for varius features**","16abc1e3":"### Random Forest ","3f8d5d03":"**Train Test Split**","9424d13c":"**Checking relationship between features**","b44df38f":"**Reading the dataset**","d3c10169":"**Cheching for unique values in different coloumns**","4dabade9":"**Importing the libraries**","4c1754fd":"**From the graphs we can infer that the dealers are earning more money than the individual sellers as dealers are getting more selling price.**","b9ee527d":"**Adding a new coloum to our dataset called vehicle_age**","9593aa49":"### **Please upvote**","65141fb3":"**Droping the year coloum from our dataset**","8e074127":"### **Exploratory Data Analysis**","308d7341":"**This is my first Kaggle Kernel. I tried my best to bring out the data insight and present in an easy way. Thank you for going through my notebook. I am open to new suggestions, so please do comment.**","cc108401":"**Plotting boxplots for different features**","bb96631b":"From the above count plots we can get to know various information like:-<br>\ni) How many petrol,disesl and cng cars are there.<br>\nii) Number of cars for different Owners.<br>\niii) How many manual and automatic cars are there.<br>\niv) Count of numbers of sellers type.","1c793a59":"From the above output cell we can see there is no missing\/null values in our dataset","316c8fde":"**Checking for missing\/null values**","fea207ee":"**Having a look on extreme data entry points**","21d71dc4":"**Visualizing selling price relationship with other features**","23b0ae44":"#####  **The above Countplot shows the Number of cars for each year**","8a150b8d":"**Importing libraries for visualization**","1f0b91b1":"The above graphs provides us with the information like Q1,Median,Q3,Minimum,Maximum value and outliers of different features  ","edd0e82e":"**From the above graphs, we can conclude that people prefer Automatic cars over Manual cars hence they have a high selling price.**","7b22eaac":"**Having a look on the dataset**","dfa8fb70":"**Creating dummy variables for categorical features**","4dac2ce8":"# Car Price Prediction using Machine Learning\n\n#### Table of content\n1. Importing libraries\n2. Reading dataset\n3. Data Preprocessing \n      * Checking missing values\n      * Checking for Unique values\n4. Exploratory Data Analysis\n      * Visualization\n      * Looking for extreme high data entry\n      * Understanding relationship between features\n5. Model Building \n      * Creating dummy variables\n      * Feature Importance\n      * Linear Regression\n      * Support Vector Regressor\n      * Random Forest Regressor","5b420099":"**We can say that Diesel cars have higher selling price than Petrol and CNG cars.**"}}