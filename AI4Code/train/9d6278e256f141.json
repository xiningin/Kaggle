{"cell_type":{"c059a39f":"code","e033a439":"code","3db128c4":"code","b3855c96":"code","bfdbb8a9":"code","8363539d":"markdown","7bc4ab33":"markdown"},"source":{"c059a39f":"!pip install kaggle-environments --upgrade -q","e033a439":"%%writefile submission.py\n\nimport random\n\n\nclass CopyLastOpponentMove:\n    def __init__(self):\n        pass\n\n    def __call__(self, obs, conf):\n        return self.agent(obs, conf)\n\n    # observation   {'remainingOverageTime': 60, 'agentIndex': 1, 'reward': 0, 'step': 0, 'lastActions': []}\n    # configuration {'episodeSteps': 2000, 'actTimeout': 0.25, 'runTimeout': 1200, 'banditCount': 100, 'decayRate': 0.97, 'sampleResolution': 100}\n    def agent(self, obs, conf):\n        print('observation', obs)\n        print('configuration', conf)\n        \n        if obs.step > 0 and len(obs.lastActions): \n            opponentIndex = (obs.agentIndex + 1) % len(obs.lastActions)\n            action        = obs.lastActions[opponentIndex]\n        else:\n            action = random.randrange(conf.banditCount) \n        return int(action or 0) % conf.banditCount\n\n    \ninstance = CopyLastOpponentMove()\ndef kaggle_agent(obs, conf):\n    return instance.agent(obs, conf)","3db128c4":"%run submission.py","b3855c96":"import random\ndef random_agent(observation, configuration):\n    return random.randrange(configuration.banditCount)","bfdbb8a9":"from kaggle_environments import make\n\nenv = make(\"mab\", debug=True, configuration={\"episodeSteps\": 10})\n\nenv.reset()\n# env.run([\"submission.py\", random_agent])\nenv.run([\"submission.py\", \"submission.py\"])\nenv.render(mode=\"ipython\", width=500, height=500)","8363539d":"# Rock Paper Candy - Copy Opponent Move\n\nThis is an attempt to copy some of the strategies from Rock Paper Scissors and see how they fare on Candy Cane\n\nIn theory, due to decay, this should be a completely losng strategy","7bc4ab33":"# Further Readining\n\nThis notebook is part of a series exploring the Santa2020 Candy Cane competition\n- [Rock Paper Candy - Copy Opponent Move](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-candy-copy-opponent-move)\n- [Rock Paper Candy - Copy Opponent Move Unless Win](https:\/\/www.kaggle.com\/jamesmcguigan\/rock-paper-candy-copy-opponent-move-unless-win)\n- [Candy Cane - Multi-Armed Bandit](https:\/\/www.kaggle.com\/jamesmcguigan\/candy-cane-multi-armed-bandit)\n- [Candy Cane - Optimized UCB](https:\/\/www.kaggle.com\/jamesmcguigan\/candy-cane-optimized-ucb)\n- [Candy Cane - Random Agent](https:\/\/www.kaggle.com\/jamesmcguigan\/candy-cane-random-agent)\n\nI also created an agents comparison notebook to compare the relative strengths of public agents:\n- [Santa 2020 - Agents Comparison](https:\/\/www.kaggle.com\/jamesmcguigan\/santa-2020-agents-comparison\/)"}}