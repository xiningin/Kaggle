{"cell_type":{"0f1fa1b0":"code","17da55fb":"code","c367a876":"code","612d0051":"code","614a40ba":"code","c8be5bf2":"code","eb20bb3c":"code","9324e368":"code","874f267e":"code","74943ea1":"code","c55c1615":"code","5abb2c57":"code","64d2e456":"code","846b8fa6":"code","10b16ab6":"code","e90061fc":"code","0a48f16d":"code","27448e99":"code","5d03b7fc":"code","4fb85c5d":"code","62af0ad5":"code","61270faf":"code","1c1bbd66":"code","61f75eb5":"code","40951f30":"code","4beb622f":"code","2e06d91f":"code","ad4c9284":"code","fb549fbd":"code","e3af815d":"code","7746db0b":"code","75dd18ca":"code","eb3be679":"code","931ce7a8":"code","78df79fa":"code","b25fb8ce":"code","0fbcf1a5":"code","580edc50":"code","4a66c6e2":"code","b956af43":"code","6b9eb43a":"code","d1f2319a":"code","2c3541d8":"code","5a1ea80e":"code","6ff3454c":"code","6dd0ef42":"code","262c60e2":"code","2c561c02":"code","0c9865d0":"code","2a3c962a":"code","828f9840":"code","a7985819":"code","2cf2303b":"code","a0f245c9":"code","61fb0810":"code","639d647b":"code","9cef906f":"markdown","749d51ce":"markdown","c402ad6c":"markdown","618b0af3":"markdown","55b8b991":"markdown","40e50977":"markdown","28a218a1":"markdown","f45e0d8d":"markdown","e12b1616":"markdown","8aaa1845":"markdown","23aa242f":"markdown","5a1e423e":"markdown"},"source":{"0f1fa1b0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","17da55fb":"import pandas as pd","c367a876":"df_p1=pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Generation_Data.csv')\ndf_p2=pd.read_csv('..\/input\/solar-power-generation-data\/Plant_1_Weather_Sensor_Data.csv')\ndf_p3=pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Generation_Data.csv')\ndf_p4=pd.read_csv('..\/input\/solar-power-generation-data\/Plant_2_Weather_Sensor_Data.csv')","612d0051":"\ndf_p3","614a40ba":"df_p2","c8be5bf2":"df_p1","eb20bb3c":"#columns\ndf_p1.columns\n","9324e368":"df_p2.columns","874f267e":"df_p3.columns\n","74943ea1":"df_p4.columns","c55c1615":"#counts\ndf_p1.nunique()","5abb2c57":"df_p2.nunique()","64d2e456":"\ndf_p3.nunique()","846b8fa6":"\n\n\ndf_p4.nunique()","10b16ab6":"df_p1['SOURCE_KEY']==\"1IF53ai7Xc0U56Y\"","e90061fc":"\n\ndf_p2.sort_values(by='SOURCE_KEY')","0a48f16d":"#basic stats \ndf_p1.describe()\n\n\n","27448e99":"df_p2.describe()","5d03b7fc":"df_p3.describe()","4fb85c5d":"df_p4.describe()","62af0ad5":"#What is the mean value of daily yield?\ndf_p1[\"DAILY_YIELD\"].mean()","61270faf":"mean_p2 = (df_p3[\"DAILY_YIELD\"].mean())\nprint (\"the mean value of daily yield for plant2 is \"+ str(mean_p2) )","1c1bbd66":"\n\n#Convert the DATE_TIME column from string datatype to Datetime datatype\n\n#forplant1\ndf_p2[\"DATE_TIME\"]=pd.to_datetime(df_p2[\"DATE_TIME\"], format='%Y-%m-%d %H:%M:%S')  \n\n","61f75eb5":"#splitiing date_time column into date column\ndf_p2['DATE'] = pd.to_datetime(df_p2['DATE_TIME'],format = '%d-%m-%Y %H:%M').dt.date","40951f30":"p=df_p2.groupby('DATE')[\"IRRADIATION\"].sum()\nprint(p)","4beb622f":"\n#forplant2\ndf_p4[\"DATE_TIME\"]=pd.to_datetime(df_p4[\"DATE_TIME\"], format='%Y-%m-%d %H:%M:%S')  \ndf_p4['DATE'] = pd.to_datetime(df_p4['DATE_TIME'],format = '%d-%m-%Y %H:%M').dt.date\nq=df_p4.groupby('DATE')[\"IRRADIATION\"].sum()\nprint(q)","2e06d91f":"\nprint (\"the max ambient temperature for plant1 is \"+ str(df_p2['AMBIENT_TEMPERATURE'].max()))\n","ad4c9284":"\nprint(\"the max module temperature for plant2 is \"+ str(df_p2['MODULE_TEMPERATURE'].max()))","fb549fbd":"print (\"the max ambient temperature for plant2 is \"+ str(df_p4['AMBIENT_TEMPERATURE'].max()))","e3af815d":"print(\"the max module temperature for plant2 is \"+ str(df_p4['MODULE_TEMPERATURE'].max()))","7746db0b":"#How many inverters are there for each plant? \nprint(\"the number of unique inverters for plant1 is \"+ str(len(df_p1['SOURCE_KEY'].unique())))","75dd18ca":"print(\"the number of unique inverters for plant2 is \"+ str(len(df_p3['SOURCE_KEY'].unique())))","eb3be679":"\n#for plant 1\n#changing datatype\ndf_p1[\"DATE_TIME\"]=pd.to_datetime(df_p1[\"DATE_TIME\"], format='%d-%m-%Y %H:%M')","931ce7a8":"#splitting date_time column into date column\ndf_p1['DATE'] = pd.to_datetime(df_p1['DATE_TIME'],format = '%d-%m-%Y %H:%M').dt.date","78df79fa":"#plant1 min dc_power\na=df_p1.groupby('DATE')[\"DC_POWER\"].min()\nprint (a)","b25fb8ce":"# plant 1 max dcpower\nb=df_p1.groupby('DATE')[\"DC_POWER\"].max()\nprint (b)","0fbcf1a5":"#for plant2\n#max dc power\ndf_p3[\"DATE_TIME\"]=pd.to_datetime(df_p3[\"DATE_TIME\"], format='%Y-%m-%d %H:%M:%S')  \ndf_p3['DATE'] = pd.to_datetime(df_p3['DATE_TIME'],format = '%d-%m-%Y %H:%M').dt.date\nc=df_p3.groupby(\"DATE\")[\"DC_POWER\"].max()\nprint(c)\n","580edc50":"#min dc power\nd=df_p3.groupby(\"DATE\")[\"DC_POWER\"].min()\nprint(d)","4a66c6e2":"#forplant1 \n#MAX AC POWER\ne=df_p1.groupby('DATE')[\"AC_POWER\"].max()\nprint (e)\n","b956af43":"#min ACPOWER \nf=df_p1.groupby('DATE')[\"AC_POWER\"].min()\nprint (f)\n","6b9eb43a":"#forplant2 \n#MAX AC POWER\ng=df_p3.groupby('DATE')[\"AC_POWER\"].max()\nprint (g)\n","d1f2319a":"#min ACPOWER \nh=df_p3.groupby('DATE')[\"AC_POWER\"].min()\nprint (h)","2c3541d8":"#plant1 ACPOWER\ndf_p1[df_p1[\"AC_POWER\"]==df_p1[\"AC_POWER\"].max()][\"SOURCE_KEY\"]\n","5a1ea80e":"#plant2 ACPOWER\ndf_p3[df_p3[\"AC_POWER\"]==df_p3[\"AC_POWER\"].max()][\"SOURCE_KEY\"]","6ff3454c":"#plant1 DCPOWER\ndf_p1[df_p1[\"DC_POWER\"]==df_p1[\"DC_POWER\"].max()][\"SOURCE_KEY\"]\n","6dd0ef42":"#plant2 DCPOWER\ndf_p3[df_p3[\"DC_POWER\"]==df_p3[\"DC_POWER\"].max()][\"SOURCE_KEY\"]","262c60e2":"#forplant1\ns = df_p1.groupby('SOURCE_KEY').sum()\ns[\"AC_POWER\"].sort_values()\n","2c561c02":"#forplant1\nt=df_p1.groupby('SOURCE_KEY').sum()\nt[\"DC_POWER\"].sort_values","0c9865d0":"#for plant2\nu = df_p3.groupby('SOURCE_KEY').sum()\nu[\"AC_POWER\"].sort_values()","2a3c962a":"#for plant 2\nv = df_p3.groupby('SOURCE_KEY').sum()\nv[\"DC_POWER\"].sort_values()","828f9840":"#As the datas were taken  for 34 days , 4 times each hour there should have been \n34*24*4 value","a7985819":"df_p1['SOURCE_KEY'].value_counts()","2cf2303b":"#22Inverters are working for 24 hours,so we must be getting\n22*24*4","a0f245c9":"df_p1['DATE'].value_counts()","61fb0810":"#but we can see not all values are 2112 so this indicates there are missing datas.","639d647b":"df_p1.isnull()","9cef906f":"#What is the max ambient and module temperature?","749d51ce":" Is there any missing data?\n","c402ad6c":"\n4.Explore the data and try to answer questions like - ","618b0af3":"#What is the maximum\/minimum amount of DC\/AC Power generated in a time interval\/day?","55b8b991":"2.Explore each dataset - columns, counts, basic stats","40e50977":"#though it appears false on all these data but it shows only few data from this bigdataset .","28a218a1":"#What is the total irradiation per day?","f45e0d8d":"3.Understand the domain context and explore underlying patterns in the data\n\nAccording to the Plant_1_Generation_Data and Plant_2_Generation_Data ,the mean of DC power in plant 1 is much larger than the mean of DC power inplant 2 which means large amount of solar power were absorbed by plant 1  than compared to  plant 2.Hence, there's difference in ACpower in plant 1 and plant2 because the AC power is the powercoverted from the DC power by the help of inverters\n","e12b1616":" here we can see many values less than 3264.so we can confirm there were missing datas","8aaa1845":"Rank the inverters based on the DC\/AC power they produce","23aa242f":"1.Load the data from the CSV files","5a1e423e":"Which inverter (source_key) has produced maximum DC\/AC power? "}}