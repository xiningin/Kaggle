{"cell_type":{"d8fe48ce":"code","51a9399e":"code","8247084c":"code","5618c61e":"code","31a3968a":"code","e6f33f05":"code","67bf6868":"code","79bccaf9":"code","bc5b6f00":"code","31ab2fe5":"code","840085b3":"code","8a19b1cb":"code","d33b3890":"code","acb970f6":"code","b4412877":"code","9ff44b33":"code","337bf2b4":"code","5858a153":"code","ffd5ffe2":"code","f311a492":"code","052caa25":"code","0cd501e5":"code","9a51f6f9":"code","b14d618e":"markdown","c638363f":"markdown","97fdea4e":"markdown","f2e62db6":"markdown","3c3ad6ba":"markdown","e768693c":"markdown","a82b3581":"markdown","2568740f":"markdown","a0dfc02a":"markdown","4afb56ec":"markdown","db46394e":"markdown"},"source":{"d8fe48ce":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.metrics import classification_report","51a9399e":"seed = pd.read_csv('..\/input\/Seed_Data.csv')","8247084c":"seed.shape","5618c61e":"seed.head()","31a3968a":"seed.describe()","e6f33f05":"seed.info()","67bf6868":"sns.pairplot(seed.drop('target', axis=1))","79bccaf9":"sns.lmplot(x='A', y='C', data=seed, hue='target', aspect=1.5, fit_reg=False)","bc5b6f00":"sns.lmplot(x='A', y='A_Coef', data=seed, hue='target', aspect=1.5, fit_reg=False)","31ab2fe5":"sns.lmplot(x='LK', y='C', data=seed, hue='target', aspect=1.5, fit_reg=False)","840085b3":"dist = {}\n\nfor k in range(1, 10):\n    km = KMeans(n_clusters=k).fit(seed.drop('target', axis=1))\n    \n    dist[k] = km.inertia_  # Sum of squared distances of samples to their closest cluster center.\n\ndist","8a19b1cb":"plt.plot(list(dist.keys()), list(dist.values()), marker='H', markersize=10)\nplt.xlabel('Number of k')\nplt.ylabel('Distances')\nplt.title('Elbow Curve')","d33b3890":"km = KMeans(n_clusters=3, random_state=42)","acb970f6":"km_pred = km.fit_predict(seed.drop('target', axis=1))\nkm_pred","b4412877":"np.array(seed['target'])","9ff44b33":"# Change the labels of prediction\n\nfor i in range(len(km_pred)):\n    if km_pred[i] == 1:\n        km_pred[i] = 0\n    elif km_pred[i] == 0:\n        km_pred[i] = 1\n\nkm_pred","337bf2b4":"print('Accuracy of clustering : ' + str(round(sum(km_pred == seed['target']) \/ seed.shape[0] * 100, 2)) + '%')","5858a153":"print(classification_report(seed['target'], km_pred, target_names=['1', '2', '3'], digits=4))","ffd5ffe2":"centers = km.cluster_centers_\ncenters","f311a492":"seed['klabels'] = km.labels_\nseed.head()","052caa25":"seed.klabels.value_counts()","0cd501e5":"seed.target.value_counts()","9a51f6f9":"f, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, sharey=True, figsize=(12, 8))\n\nax1.set_title('K-Means (k=3)')\nax1.scatter(x=seed['A'], y=seed['A_Coef'], c=seed['klabels'])\nax1.scatter(x=centers[:, 0], y=centers[:, 5], c='r', s=300, alpha=0.5)\n\nax2.set_title('Original')\nax2.scatter(x=seed['A'], y=seed['A_Coef'], c=seed['target'])","b14d618e":"# Clustering with K-Means","c638363f":"## Data\n\n#### - Features :\n\n- A: Area\n- P: Perimeter\n- C: Compactness\n- LK: Length of Kernel\n- WK: Width of Kernel\n- A_Coef: Asymmetry Coefficient\n- LKG: Length of Kernel Groove\n\n#### - Target :\n\n- Target class : 0, 1, 2","97fdea4e":"## Fitting model with sklearn","f2e62db6":"We can check that there is no null data.","3c3ad6ba":"## Data Visualization","e768693c":"## Importing libraries","a82b3581":"Elbow point is 3. Now, we can decide number of clusters should be 3.","2568740f":"## Loading the data","a0dfc02a":"## Showing the centroids","4afb56ec":"## EDA (Exploratory Data Analysis)","db46394e":"## Elbow Curve to check elbow point"}}