{"cell_type":{"5eb5c242":"code","08215476":"code","9587656e":"code","ce90f43e":"code","b51882ff":"code","10703ea0":"code","b329fc72":"code","4dc86aa7":"code","34b0113b":"code","f58a084f":"code","a99f28ff":"code","bac3b3cd":"code","8b3c2604":"code","18daca89":"code","de974490":"code","395b6bcf":"code","cce6d51a":"code","2a4bc220":"code","068a629a":"code","a75735fd":"code","4d378c0d":"code","2d432b47":"code","6c662b3b":"code","a492a53e":"code","49aa7d7e":"code","b41c4e94":"markdown","202cf622":"markdown","23645fe7":"markdown","b9e9fb48":"markdown","95d5b04e":"markdown","110fc5bb":"markdown","1947a828":"markdown","718cd431":"markdown","e12bdef3":"markdown","6384c45c":"markdown","fe6f1d22":"markdown","2cf1638b":"markdown","7e2fdb2a":"markdown","27ef55a6":"markdown","ea42cbcd":"markdown","90f86f2c":"markdown"},"source":{"5eb5c242":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","08215476":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\n\n%matplotlib inline","9587656e":"df_raw=pd.read_csv('\/kaggle\/input\/aus-real-estate-sales-march-2019-to-april-2020\/aus-property-sales-sep2018-april2020.csv')\ndf_raw.head()","ce90f43e":"# Convert date_sold to datetime format\ndf_raw['date_sold']=pd.to_datetime(df_raw.date_sold)","b51882ff":"df_raw.info()","10703ea0":"df_raw.state.value_counts().values==df_raw.city_name.value_counts().values","b329fc72":"print('Number of loc_pid and suburb are not the same')\ndf_raw.loc_pid.value_counts().count()==df_raw.suburb.value_counts().count()","4dc86aa7":"df_raw.suburb.value_counts().index[:10]==df_raw.lga_pid.value_counts().values[:10]","34b0113b":"df=df_raw.copy()\n\n# Add month and year columns\ndf['year']=df['date_sold'].dt.year.astype(int)\ndf['month']=df['date_sold'].dt.month.astype(int)\n\n# Remove State column == city_name column and remove both lga_pid & loc_pid\ndf.drop(columns=['state','lga_pid','loc_pid'],inplace=True)","f58a084f":"data=df.query('lat > 0')\ndata.lat.value_counts().sum()","a99f28ff":"data=df.query('lat < 0')\ndata.lat.value_counts().sum()","bac3b3cd":"df.query('lat > 0')","8b3c2604":"df.loc[232762,'lat']=-31.915194\nprint('Now, positive lat value is corrected.')\ndf.query('city_name==\"Perth\" & lat > 0')","18daca89":"# This is to define color lists and order required for the data\n\n# city_order depending on average price\ncity_order=list(pd.DataFrame(df.groupby('city_name').price.mean()).sort_values(by='price',\n                                                                               ascending=False).index)\n\n# property_order depending on average price\nproperty_order=list(pd.DataFrame(df.groupby('property_type').price.mean()).sort_values(by='price',\n                                                                               ascending=False).index)\nyear_order=[2018,2019,2020]\n\n# Define city_color, property_color and year_color\n\ncity_color= sns.color_palette()[:5]\ncity_color.append(sns.color_palette()[9])  # To exclude brown color\ncity_color=255*city_color\nproperty_color= ['saddlebrown','sandybrown','chocolate']       # Brown colors\nyear_color=['gainsboro','dimgrey','darkgrey']                  # Gray colors\n\n","de974490":"# (x,y) ====> (lon, lat)\nfig, ax = plt.subplots(1,1,figsize=(18,12))\n\nm = Basemap(projection='mill',\n           llcrnrlat = -40,\n           urcrnrlat = -10,\n           llcrnrlon = 110,\n           urcrnrlon = 162,\n           resolution = 'c')\n\nm.drawcoastlines()\n\nm.drawparallels(np.arange(-90,90,10),labels=[True,False,False,False])\nm.drawmeridians(np.arange(-180,180,10),labels=[0,0,0,1])\n\ni=0    # used to change color\nfor city in city_order:\n    data=df.query('city_name==@city')\n    sites_lat_y = data['lat'].tolist()\n    sites_lon_x = data['lon'].tolist()\n    color = city_color[i]\n    i+=1\n    m.scatter(sites_lon_x,sites_lat_y,latlon=True,s=30, color=color, marker='o',\n              alpha=1,edgecolor='k', linewidth=0.3, zorder=2, label=city )\n    # To add text\n    x,y = m(sites_lon_x[0],sites_lat_y[0])\n    plt.text(x+65000,y,'{}, {} suburbs'.format(city,data['suburb'].nunique()),fontsize=14,color=color)\n    plt.text(x+65000,y-70000,'Avg-price: {} K$'.format(int(np.round(data['price'].mean()\/1000,0))),fontsize=13,color=color)\n\nplt.title('Cities distribution with average costs', fontsize=20)\n# Hide the spines\n#ax.spines['left'].set_visible(False)\nplt.legend();\nplt.show();\n\n","395b6bcf":"# Most frequent data in all variables:\nprint ( 'Below is the most frequent data in all variables.')\ndf.drop(columns=['lat','lon']).mode(numeric_only=False)","cce6d51a":"#print('Below is the most frequent data in all variables for each city.')\ndf.drop(columns=['lat','lon']).groupby('city_name').agg(pd.Series.mode)","2a4bc220":"df.drop(columns=['lat','lon']).groupby(['city_name','year']).agg(pd.Series.mode)","068a629a":"fig,(ax1,ax2,ax3)=plt.subplots(1,3,figsize=(16,5))\nplt.suptitle('Fig (1): sold counts',fontsize=16)\nplt.subplot(ax1)\nsns.countplot(data=df,x='city_name',order=city_order,palette=city_color);\nplt.xticks(rotation=90);\n#plt.title('Cities all time sold',fontsize=16);\nplt.xlabel('')\nplt.ylabel('')\n\nplt.subplot(ax2)\nsns.countplot(data=df,x='property_type',order=property_order,palette=property_color);\n#plt.title('Property types all time sold',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');\n\nplt.subplot(ax3)\nsns.countplot(data=df,x='year',order=year_order,palette=year_color);\n#plt.title('Property types all time sold',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');\n\nplt.figure(figsize=(16,6))\nsns.countplot(data=df,x='month',palette=year_color,hue='year');\nplt.title('Fig (2): Monthly sold counts for each year',fontsize=16);\n\nplt.figure(figsize=(16,6))\ni=0\nfor year in year_order:\n    #plt.scatter(data=df.query('year==@year'),x='date_sold',y='price',alpha=1\/20,color=year_color[i]);\n    data=df.query('year==@year')\n    bins=np.arange(data.month.min(),data.month.max()+1)\n    #print(len(bins))\n    plt.hist(data=data,x='date_sold',color=year_color[i],bins=len(bins),rwidth=.9,label='{}'.format(year));\n\n    i+=1\nplt.title('Fig (3): Sold Date distribution for all data',fontsize=16);\nplt.xlabel('Sold date')\nplt.ylabel('frequency');\nplt.legend();","a75735fd":"# Year & city_name\n\nplt.figure(figsize=(14,5))\nsns.countplot(data=df,x='city_name',order=city_order,palette=year_color,hue='year');\nplt.title('Fig (4): Cities yearly sold counts',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');","4d378c0d":"# Year & property_type\n\nplt.figure(figsize=(14,5))\nsns.countplot(data=df,x='property_type',order=property_order,palette=year_color,hue='year');\nplt.title('Fig (5): property type yearly sold counts',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');\n\n# property_type & city_name\n\nplt.figure(figsize=(14,5))\nsns.countplot(data=df,x='property_type',order=property_order,palette=city_color,hue='city_name');\nplt.title('Fig (6): Cities property types sold counts',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');\n\nplt.figure(figsize=(14,5))\nsns.countplot(data=df,x='city_name',order=city_order,palette=property_color,hue='property_type',hue_order=property_order);\n#plt.title('Cities yearly sold counts',fontsize=16);\nplt.xlabel('')\nplt.ylabel('');","2d432b47":"# price distribution\n\nplt.figure(figsize=(16,5))\nplt.hist(data=df,x='price',bins=1000);\n\nx=np.percentile(df['price'].dropna(),75)\nplt.axvline(x=x,color='red')\nplt.text(x+80000,30000,\n         'For available price data 75% of property prices is less than {} Million $'.format(x\/1e6),fontsize=14,\n        color='red',)\n\nx=int(df['price'].dropna().mode())\nplt.axvline(x=x,color='black')\nplt.text(x+400000,25000,\n         'This 75% portion of property prices looks normally distributed about {} Million $'.format(x\/1e6),fontsize=13,\n        color='black',)\n\nplt.title('Fig (7): price distribution for all data',fontsize=16);\nplt.xlim(0,3e6)\nplt.xlabel('price',fontsize=12)\nplt.ylabel('frequency',fontsize=12);\n\n","6c662b3b":"# price and Date distributions\n\nplt.figure(figsize=(17,7))\ndata=df.dropna().query('year==2019')\nbins_x=np.arange(data.price.min(),3e6,100000)\nbins_y=np.arange(1,13)\nh2d=plt.hist2d(data=data,x='price',y='month',cmap = 'viridis_r',cmin=100,bins=[bins_x,bins_y]);\nplt.xlim(0,3e6);\n\nplt.title('Fig (8): Monthly-price distribution for year 2019',fontsize=16)\nplt.xlabel('price distribution',fontsize=12)\nplt.ylabel('Months',fontsize=12);\n\n# Annotations on each cell\ncounts = h2d[0]       # Using h2d =plt.hist2d (......)\n# This counts has all values of each sell with the x,y corredenates\n# to access these counts.\n\n\n# Add text annotation on each cell\n# Loop through the cell counts and add text annotations for each\nfor i in range(counts.shape[0]):\n    for j in range(counts.shape[1]):\n        c = counts[i,j]\n        # Add half of bin step to center the x,y of text \n        \n        if c >= 1500: # increase visibility on darker cells\n            plt.text(bins_x[i]+50000, bins_y[j]+0.5, int(c),\n                     ha = 'center', va = 'center', color = 'white')\n        elif c > 0:\n            plt.text(bins_x[i]+50000, bins_y[j]+0.5, int(c),\n                     ha = 'center', va = 'center', color = 'black')","a492a53e":"plt.figure(figsize=(16,5))\n#sns.boxplot(data=df, y='price', x='city_name',palette=city_color,showfliers = False,order=city_order);\nsns.violinplot(data=df, y='price', x='city_name',palette=city_color,showfliers = False,\n           order=city_order,scale='count',gridsize=150,inner='quartiles',linewidth=2);plt.title('Fig (9): City-price distribution',fontsize=16)\nplt.xlabel('',fontsize=12)\nplt.xticks(fontsize=12)\nplt.ylabel('Price',fontsize=12);\nplt.ylim(0,3e6);\n\nplt.figure(figsize=(16,5))\nsns.violinplot(data=df, y='price', x='property_type',palette=property_color,showfliers = False,\n           order=property_order,scale='count',gridsize=150,inner='quartiles',linewidth=2);\nplt.title('Fig (10): property type-price distribution',fontsize=16)\nplt.xlabel('',fontsize=12)\nplt.xticks(fontsize=12)\nplt.ylabel('Price',fontsize=12);\nplt.ylim(0,3e6);","49aa7d7e":"plt.subplots(1,2,figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(data=df, hue='property_type',palette=property_color,x='bedrooms',hue_order=property_order);\nplt.suptitle('Fig (11): property type counts vs No. of bedrooms',fontsize=16)\nplt.xlabel('No. of bedrooms',fontsize=12)\nplt.xticks(fontsize=12);\nplt.ylabel('Counts',fontsize=12);\n\ncounts=df.groupby(['property_type','bedrooms']).size().reset_index(name='count')\ndf2=pd.DataFrame([['unit',4,0],['unit',5,0]],columns=['property_type','bedrooms','count'])\ncounts=counts.append(df2,ignore_index=True,)\ncounts=counts.pivot(index='property_type',columns='bedrooms',values='count')\nplt.subplot(1,2,2)\nsns.heatmap(counts,cmap = 'viridis_r',annot=True,fmt='d',linewidths=2,cbar=False,annot_kws={\"size\":13});\nplt.xticks(fontsize=12);\nplt.yticks(fontsize=12);\nplt.ylabel('',fontsize=12);\nplt.xlabel('No. of bedrooms',fontsize=12);","b41c4e94":"# 1. Decriptive Summary for data:","202cf622":"- ***Found one record of Perth of lat > 0 out of 320256 lat records, converted to negative to be similar to rest of data***","23645fe7":"#### *We have null values in price, lat and lon columns, these null values will be kept without deletion during analysis, and will  dropp null values for price, when dealing on it.*","b9e9fb48":"> **Fig (8): distribution figures for price and sold date, We see the following:**\n>- **For price distribution** *,For the same price range, sold counts are less in January and Febuary, then increase and has stable value from March to October. After October, sold counts resume increase again and nearly double its value in the end of year.*\n>- **Again,** *we observe higher counts in prices around 0.5 Million Dollars in all months than prices more higher or lower than this range.*","95d5b04e":"# 3. Summary of conclusion:\n> **Data inclused the follwing variables 'date_sold', 'price', 'city_name', 'bedrooms',\n       'property_type'] from which we get the follwing;**\n>- **Regarding to sold date, The year start will the lowest sold movements that increase with time, then stabilize during March to October, then increase again and finally get abouble in sold movements at the end of the year.**\n\n>- **Regarding to price, Most sales exist in prices around 0.5 Million Dollars, this value may be an indication of citizens average savings. While very expensive property types has the least sales, which is logically true as it is related to number of very rich people in these cities which has the low percent.**\n\n>- **Regarding to Cities, Sydney & Melbourne are the most prefered cities in selling property. However, Sydney has higher averge price and less counts comparing with Melbourne.**\n\n>- **Regarding to property_type & bedrooms number, Most sales are in houses with 3 & 4 rooms or units with 1 & 2 rooms. As houses are the most frequent property-type, 3 & 4 rooms are also the most frequent bedrooms number.**","110fc5bb":"> **Figure (4): show annual number of sold occuring in each city, We see the following:**\n>- **Melbourne** *is still the highest in number of sold counts follwed by* **Sydney** *for each year*.","1947a828":"> **Figure (5): show number of sold occuring in each year for each property type, We see the following:**\n>- *still* **houses** *represent the highest in sold counts*, **unit** *is the second in sold counts*, and **townhouse** *is the least in sold counts.*\n\n> **Figure (6): show number of sold occuring in each city for each property type, We see the following:**\n>- **Melbourne** *is still the highest in number of sold counts follwed by* **Sydney** *for house type while for unit type* **Sydney** *take the highest sold counts with slight difference.*\n>- **Sydney & Melbourne** *show highest records in unit type with big difference than other cities and records near other cities house type sold records.*\n\n","718cd431":"- ***city_name and state have the same value counts and seems different representations for the same item, so I dropped state column in analysis below.***\n- ***suburb, lga_pid and loc_pid have different value counts. However, I dropped lga_pid and loc_pid columns in analysis below.***","e12bdef3":"### Below is the most frequent data in all variables for each city in each year.\n","6384c45c":">- ***From above, For all cities the Most frequent year is 2019 and property type is house.***\n>- ***There is two frequent values for months, October or November, and for bedrooms number, 3 or 4.***","fe6f1d22":"> **Figure (1): show number of sold occuring in each city, in each property type, and in each year. We see the following:**\n>- **Sydney** *is the highest in average price and the second in number of sold.*\n>- **Melbourne** *is the second in average price and the highest in number of sold.*\n>- Regarding property types; **houses** *represent the highest in sold counts and sold average price*, **townhouse** *is the second in average price and the least in sold counts*, and **unit** *is the second in sold counts and the least in average price.*\n>- Regarding the sold year, **2019** is the highest, then **2020**, and finally **2018** in yearly graph.\n>- While when we plot monthly counts for each year,found **2019** is represented by all months and that makes it the highest, then **2020**,represented by 4 months only, and **2018**, represented by 7 months only. \n> *And that makes **the yearly records unfair** *and will be excluded in the follwing analyses affected by it.*\n\n> **Figure (2):**\n>- **Year 2019** *has better perfomance than* **year 2018** *in the common months in both of them.*\n>- **Year 2020** *starts with better perfomance than* **year 2019** *in the common months in both of them,\nshowing continue of increase of sold performance, then start to show worse performance* **after March**, *may be this due to CORONA VIRUS appearance.*\n\n> **Figure (3):**\n>- **For year 2019 distribution** ,the only year available with all months records, *we can notice from March to September, sold performance show stability, For october then November, sold performance increases, and then in December sold performance decrease again to reach it lowest performance in January.*","2cf1638b":"> **Fig (9) & Fig (10):**,dotted lines for quartiles and size for counts, **We observe the following:**\n>- **Sydney,** *has half of its price data higher than most of other cities price data.* **Melbourne,** *has average prices not high like* **Sydney** *and not low like the rest of cities, that may be the reason to have higher sold counts,as shown here by size and previously plotted in Fig (4).*\n>- **House,** *property has the dominating prefered property type with average prices little higher than* **townhouse and unit**.","7e2fdb2a":"### Below is the most frequent data in all variables for each city.","27ef55a6":"# 2. Investigating number of sold  versus different variables:","ea42cbcd":"> **Fig (7): distribution figures for price and sold date, We see the following:**\n>- **For price distribution** *,as expected, it is right skewed as very expensive properties has very little frequency. Most of prices, 75% of them are less than 0.92 Million Dollars, this 75% of prices, if separated, it looks normally distributed over 0.6 Million Dollars.*\n\n","90f86f2c":"> **Fig (11), We observe the following:**\n>- **Zero bedrooms properties** *has the least counts, and* **1 or 2 bedrooms properties** *are most frequent  sold in* **unit properties**, while **3, 4 or 5 bedrooms properties** *are most frequent  sold in* **house properties**.\n>- *Maximum sold units contain 2 bedrooms, while maximum sold houses contain 3 then that contain 4 bedrooms.* "}}