{"cell_type":{"e16f010f":"code","59ec7003":"code","60d5d906":"code","6de801cb":"code","ca1ac17e":"code","6291b2aa":"code","02f008b3":"code","96be5a60":"code","adf24154":"code","5297e20a":"code","54621e6b":"code","d1a4037a":"code","74b77898":"code","a667ecd6":"code","8aca658d":"code","fb213969":"code","ad1dc6e9":"code","d74ec998":"code","4a77575a":"code","ac8b52a8":"code","54d8969f":"code","8ae9a9d6":"code","a230e00e":"code","4b974b5d":"code","a79d768e":"code","edfd1cb8":"code","f57e36bd":"code","d89f903d":"code","07de9035":"code","05c5d881":"code","e84103f8":"code","84ee957d":"code","9328a201":"code","18e0079f":"code","efca9e99":"code","84472e50":"code","473a312a":"code","6070b01e":"code","74ed7418":"code","0ce9fba8":"code","80200efb":"code","5dc53292":"code","924f18c2":"code","f29ca8cf":"code","50ecbf38":"markdown"},"source":{"e16f010f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","59ec7003":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom mpl_toolkits.mplot3d import Axes3D\nimport pylab\nimport scipy.stats as stats\nfrom scipy.stats import shapiro\nimport warnings\nimport os\nfrom scipy.cluster import hierarchy \nfrom scipy.spatial import distance_matrix\nwarnings.filterwarnings(\"ignore\")","60d5d906":"df = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')\ndf.head()","6de801cb":"df.rename(columns={'Annual Income (k$)':'AnnualIncome',\n                   'Spending Score (1-100)':'SpendingScore'},inplace=True)","ca1ac17e":"df.describe()","6291b2aa":"print(f'CustomerID :{df.CustomerID.nunique()}')\nprint(f'Gender :{df.Gender.nunique()}')\nprint(f'Age :{df.Age.nunique()}')\nprint(df.shape[0])","02f008b3":"df.isnull().sum()","96be5a60":"df.info()","adf24154":"df2 = df.copy()\ncat_cols = ['Gender']\ncon_cols = ['Age','AnnualIncome','SpendingScore']","5297e20a":"# compute the corr matrix\n\ncorr = df.corr()\n\n# generate a mask for the upper triangle\nmask = np.triu(np.ones_like(corr,dtype=bool))\n\n# set up the matplotlib figure\nf, ax = plt.subplots(figsize=(11,9))\n\n# generate a custom diverging colormap\ncmap = sns.diverging_palette(230,20,as_cmap=True)\n\n#draw the heatpmap with the mask and correct aspect ratio\nsns.heatmap(corr,mask=mask,cmap=cmap,vmax=.3,center=0,square=True,linewidths=.5,cbar_kws={'shrink':.5})","54621e6b":"sns.countplot(data=df,x='Gender');","d1a4037a":"fig = plt.figure(figsize=(8,8))\nax = sns.displot(data=df,x='Age',kde=True,color='blue');","74b77898":"fig = plt.figure(figsize=(8,8))\nsns.displot(data=df,x='AnnualIncome',kde=True,color='green');","a667ecd6":"fig = plt.figure(figsize=(8,8))\nsns.displot(data=df,x='SpendingScore',kde=True,color='red');","8aca658d":"fig = plt.figure(figsize=(12,12))\nsns.pairplot(df.drop('CustomerID', axis=1), hue='Gender', aspect=1.5);","fb213969":"sns.relplot(\n    data=df, x=\"SpendingScore\", y=\"Age\",hue=\"Gender\",\n    palette=[\"b\", \"r\"], sizes=(10, 100)\n);","ad1dc6e9":"ax = sns.relplot(\n    data=df, x=\"AnnualIncome\", y=\"SpendingScore\", col=\"Gender\",\n    hue=\"Gender\", kind=\"line\");","d74ec998":"sns.scatterplot(data=df, y=\"SpendingScore\", x=\"AnnualIncome\", hue=\"Gender\", style=\"Gender\");","4a77575a":"ax = sns.stripplot(x=df[\"SpendingScore\"])","ac8b52a8":"plt.figure(figsize=(19,5))\nsns.set_theme(style='darkgrid')\nplt.subplot(1,3,1)\nsns.violinplot(x='SpendingScore',y='Gender',data=df)\nplt.subplot(1,3,2)\nsns.violinplot(x='AnnualIncome',y='Gender',data=df)\nplt.subplot(1,3,3)\nsns.violinplot(x='Age',y='Gender',data=df)\nplt.show()","54d8969f":"fig = plt.figure(figsize=(20,20))\nax1 = fig.add_subplot(3,3,1)\nsns.boxplot(y='Age',data=df);\nax2 = fig.add_subplot(3,3,2)\nsns.boxplot(y='AnnualIncome',data=df);\nax3 = fig.add_subplot(3,3,3)\nsns.boxplot(y='SpendingScore',data=df);","8ae9a9d6":"shapiro_test = shapiro(df['SpendingScore'])\n\nprint(f'W: {shapiro_test[0]}')\nprint(f'p-Value: {shapiro_test[1]}')\n\n# H0: Distribution is Normal!\n# H1: Distribution is not Normal!\n\n# Fail to Reject H0\n# Reject H0\n    \nif shapiro_test[1] > 0.05:\n  print('Fail to Reject H0 and Distribution is Normal!')\nelse:\n  print('Reject H0 and Distribution is not Normal! ') ","a230e00e":"stats.probplot(df['SpendingScore'],plot=pylab,dist='norm')\npylab.show()","4b974b5d":"shapiro_test = shapiro(df['AnnualIncome'])\n\nprint(f'W: {shapiro_test[0]}')\nprint(f'p-Value: {shapiro_test[1]}')\n\n# H0: Distribution is Normal!\n# H1: Distribution is not Normal!\n\n# Fail to Reject H0\n# Reject H0\n    \nif shapiro_test[1] > 0.05:\n  print('Fail to Reject H0 and Distribution is Normal!')\nelse:\n  print('Reject H0 and Distribution is not Normal! ') ","a79d768e":"stats.probplot(df['AnnualIncome'],plot=pylab,dist='norm')\npylab.show()","edfd1cb8":"shapiro_test = shapiro(df['Age'])\n\nprint(f'W: {shapiro_test[0]}')\nprint(f'p-Value: {shapiro_test[1]}')\n\n# H0: Distribution is Normal!\n# H1: Distribution is not Normal!\n\n# Fail to Reject H0\n# Reject H0\n    \nif shapiro_test[1] > 0.05:\n  print('Fail to Reject H0 and Distribution is Normal!')\nelse:\n  print('Reject H0 and Distribution is not Normal! ') ","f57e36bd":"stats.probplot(df['Age'],plot=pylab,dist='norm')\npylab.show()","d89f903d":"df.head()","07de9035":"df.groupby(df.Gender)['AnnualIncome'].describe()","05c5d881":"df.loc[df['Gender'] == 'Female','Gender'] = 0\ndf.loc[df['Gender'] == 'Male','Gender'] = 1","e84103f8":"df.head()","84ee957d":"kmeans = KMeans()\nelbow = KElbowVisualizer(kmeans,k=(2,10))\nelbow.fit(df)\nelbow.poof()","9328a201":"kmeans = KMeans(n_clusters=4).fit(df)","18e0079f":"result = pd.DataFrame({'Clusters':kmeans.labels_})","efca9e99":"kmeans.labels_","84472e50":"fig = plt.figure(figsize=(8,5))\nax = sns.countplot(data=result,x='Clusters')","473a312a":"resultend = pd.DataFrame({'CustomerID':df.CustomerID,'Clusters':kmeans.labels_+1})","6070b01e":"resultend.head(200).T","74ed7418":"fig = plt.figure(figsize=(9,9))\nax = sns.displot(data=resultend,x='Clusters',kde=True,kind='hist')","0ce9fba8":"kmeans_end = df.drop(['CustomerID', 'Gender'], axis=1)","80200efb":"kmeans = KMeans()\nelbow = KElbowVisualizer(kmeans,k=(2,10))\nelbow.fit(kmeans_end)\nelbow.poof()","5dc53292":"kmeansend = KMeans(n_clusters=5).fit(kmeans_end)","924f18c2":"kmeans_end['Labels'] = kmeansend.labels_\nplt.figure(figsize=(12, 8))\nsns.scatterplot(kmeans_end['AnnualIncome'], kmeans_end['SpendingScore'], hue=kmeans_end['Labels'], \n                palette=sns.color_palette('hls', 5))\nplt.title('KMeans with 5 Clusters')\nplt.show()","f29ca8cf":"# Dendrogram \ndist = distance_matrix(kmeans_end, kmeans_end)\ndendrogram1 = hierarchy.linkage(dist, 'complete')\nplt.figure(figsize=(18, 50))\ndendrogram2 = hierarchy.dendrogram(dendrogram1, leaf_rotation=0, leaf_font_size=12, orientation='right')","50ecbf38":"***Thanks for looking. Please vote.***"}}