{"cell_type":{"505b7055":"code","38a71c66":"code","af8ae26d":"code","c8d13a62":"code","52da79d8":"code","4ca675ab":"code","ab7ac444":"code","0b6eca22":"code","abcb1bdc":"code","fd8d9b5f":"code","ad64cc27":"code","5fc56e07":"code","ed71347c":"code","88011ce9":"code","b6fc2d45":"code","5035427c":"code","5bcb6829":"code","5416d71f":"code","1a866fce":"code","67e47834":"code","1d88c198":"code","1d6855f6":"code","7014ddfa":"code","40f5cded":"code","44e053c3":"code","8c128be2":"code","4745f66d":"code","f5bf3c1f":"code","f4cd1798":"code","c6a78534":"code","7192f5f0":"code","8e998028":"code","400984dd":"code","3dc2baed":"code","cacc7fd7":"code","fea45d61":"code","f01dd484":"code","728475d1":"code","f74d1868":"code","a2beac04":"code","1a43f062":"code","91f2615c":"code","d7439e71":"code","6e25eb74":"code","7d9e4c4a":"code","7e871c42":"code","25f82df8":"code","3d2f45d7":"code","fb8f34e3":"code","593846c8":"code","8f502b58":"code","a154c34f":"code","e1abf527":"code","7fb86f83":"code","743adc1a":"code","535b4d10":"code","b7ad207b":"code","a973f37c":"code","cb4c5f65":"code","f7033329":"code","d54f7991":"code","21242457":"code","ab8240ee":"code","f87e32c4":"code","00f803e7":"code","901613a1":"markdown","7a81641f":"markdown","5b741e75":"markdown","2cb234e4":"markdown","23636b56":"markdown","047e9112":"markdown","ee302eb9":"markdown","a6a9c282":"markdown","136a4e94":"markdown","2d16373a":"markdown","cdab0444":"markdown","1220e372":"markdown","e384eb90":"markdown","129e57ac":"markdown","b6783c14":"markdown","cdee7dd7":"markdown","a888576f":"markdown","f0f32305":"markdown","39290bc9":"markdown","d805c04c":"markdown","f191dae6":"markdown"},"source":{"505b7055":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\npd.set_option('display.max_rows', 500)\nimport warnings\nwarnings.filterwarnings('ignore')","38a71c66":"df=pd.read_csv('..\/input\/hr-analytics\/HR_comma_sep.csv')","af8ae26d":"df.head()","c8d13a62":"df.columns","52da79d8":"df.shape","4ca675ab":"df.info()","ab7ac444":"print('Min of satisfaction_level is {}, Max of satisfaction_level is {}'.format(df['satisfaction_level'].min(),df['satisfaction_level'].max()))\nprint('Min of last_evaluation is {}, Max of last_evaluation is {}'.format(df['last_evaluation'].min(),df['last_evaluation'].max()))\nprint('Min of number_project is {}, Max of number_project is {}'.format(df['number_project'].min(),df['number_project'].max()))\nprint('Min of average_montly_hours is {}, Max of average_montly_hours is {}'.format(df['average_montly_hours'].min(),df['average_montly_hours'].max()))\nprint('Min of time_spend_company is {}, Max of time_spend_company is {}'.format(df['time_spend_company'].min(),df['time_spend_company'].max()))\nprint('Min of Work_accident is {}, Max of Work_accident is {}'.format(df['Work_accident'].min(),df['Work_accident'].max()))\nprint('Min of left is {}, Max of left is {}'.format(df['left'].min(),df['left'].max()))\nprint('Min of promotion_last_5years is {}, Max of promotion_last_5years is {}'.format(df['promotion_last_5years'].min(),df['promotion_last_5years'].max()))","0b6eca22":"df['Department'].value_counts()","abcb1bdc":"df['salary'].value_counts()","fd8d9b5f":"df['number_project'].value_counts()","ad64cc27":"df['time_spend_company'].value_counts()","5fc56e07":"df['Work_accident'].value_counts()","ed71347c":"df['left'].value_counts()","88011ce9":"df['promotion_last_5years'].value_counts()","b6fc2d45":"df.groupby(['promotion_last_5years','time_spend_company','left'])['left'].count()","5035427c":"sns.heatmap(df.corr(),annot=True,cmap='RdYlGn',linewidths=0.2)\nfig=plt.gcf()\nfig.set_size_inches(10,8)\nplt.show()","5bcb6829":"# satisfaction_level vs left\nf, ax = plt.subplots(figsize=(25, 10))\nsns.countplot('satisfaction_level',hue='left',data=df)\nplt.xticks(rotation=-90)","5416d71f":"# feature-engineering\ndf['sat_lvl_band']=0\ndf.loc[(df['satisfaction_level']>=0.0) & (df['satisfaction_level']<=0.1),'sat_lvl_band']=0\ndf.loc[(df['satisfaction_level']>0.1) & (df['satisfaction_level']<=0.2),'sat_lvl_band']=1\ndf.loc[(df['satisfaction_level']>0.2) & (df['satisfaction_level']<=0.3),'sat_lvl_band']=2\ndf.loc[(df['satisfaction_level']>0.3) & (df['satisfaction_level']<=0.4),'sat_lvl_band']=3\ndf.loc[(df['satisfaction_level']>0.4) & (df['satisfaction_level']<=0.5),'sat_lvl_band']=4\ndf.loc[(df['satisfaction_level']>0.5) & (df['satisfaction_level']<=0.6),'sat_lvl_band']=5\ndf.loc[(df['satisfaction_level']>0.6) & (df['satisfaction_level']<=0.7),'sat_lvl_band']=6\ndf.loc[(df['satisfaction_level']>0.7) & (df['satisfaction_level']<=0.8),'sat_lvl_band']=7\ndf.loc[(df['satisfaction_level']>0.8) & (df['satisfaction_level']<=0.9),'sat_lvl_band']=8\ndf.loc[(df['satisfaction_level']>0.9),'sat_lvl_band']=9","1a866fce":"df[['satisfaction_level','sat_lvl_band']].head()","67e47834":"f, ax = plt.subplots(1,2,figsize=(20, 5))\n\ndf['sat_lvl_band'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3','#3366ff','#00ff00','#66ffff'],ax=ax[0])\nax[0].set_title('Number of Employees by Satisfaction Level')\nax[0].set_ylabel('Count')\n\nsns.countplot('sat_lvl_band',hue='left',data=df)\nax[1].set_title('Satisfaction in Company: Left vs Not Left')","1d88c198":"f, ax = plt.subplots(1,2,figsize=(20, 10))\n\ndf['promotion_last_5years'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number of Employees by promotion_last_5years')\nax[0].set_ylabel('Count')\n\nsns.countplot('promotion_last_5years',hue='left',data=df)\nax[1].set_title('Promotion_last_5years in Company: Left vs Not Left')","1d6855f6":"var = df['promotion_last_5years'][(df['promotion_last_5years']==1) & (df['left']==1)].value_counts()\nprint('No. of persons who got promoted in the last 5 years and still left the company is {}'.format(var[1]))","7014ddfa":"# open point - how many persons less than 5 years of time spend in company hasnt got any promotion","40f5cded":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['time_spend_company'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\nax[0].set_title('Number of Employees by Time Spend Company')\nax[0].set_ylabel('Count')\n\nsns.countplot('time_spend_company',hue='left',data=df)\nax[1].set_title('Years Spent in Company: Left vs Not Left')","44e053c3":"df.groupby(['time_spend_company','left'])['left'].count()","8c128be2":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['salary'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\n\nax[0].set_title('Number of Employees by Salary')\nax[0].set_ylabel('Count')\n\nsns.countplot('salary',hue='left',data=df)\nax[1].set_title('Salary:Left vs Not Left')\n\nplt.show()","4745f66d":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['Work_accident'].value_counts().plot.bar(color=['#CD7F32','#FFDF00','#D3D3D3'],ax=ax[0])\n\nax[0].set_title('Number of Employees by Work Accident')\nax[0].set_ylabel('Count')\n\nsns.countplot('Work_accident',hue='left',data=df)\nax[1].set_title('Work Accident:Left vs Not Left')\n\nplt.show()","f5bf3c1f":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['last_evaluation'].value_counts().plot.bar(ax=ax[0])\n\nax[0].set_title('Number of Employees by last_evaluation')\nax[0].set_ylabel('Count')\n\nsns.countplot('last_evaluation',hue='left',data=df)\nax[1].set_title('last_evaluation:Left vs Not Left')\n\nplt.show()","f4cd1798":"# feature-engineering\ndf['evaluation_band']=0\ndf.loc[(df['last_evaluation']>=0.0) & (df['last_evaluation']<=0.1),'evaluation_band']=10\ndf.loc[(df['last_evaluation']>0.1) & (df['last_evaluation']<=0.2),'evaluation_band']=20\ndf.loc[(df['last_evaluation']>0.2) & (df['last_evaluation']<=0.3),'evaluation_band']=30\ndf.loc[(df['last_evaluation']>0.3) & (df['last_evaluation']<=0.4),'evaluation_band']=40\ndf.loc[(df['last_evaluation']>0.4) & (df['last_evaluation']<=0.5),'evaluation_band']=50\ndf.loc[(df['last_evaluation']>0.5) & (df['last_evaluation']<=0.6),'evaluation_band']=60\ndf.loc[(df['last_evaluation']>0.6) & (df['last_evaluation']<=0.7),'evaluation_band']=70\ndf.loc[(df['last_evaluation']>0.7) & (df['last_evaluation']<=0.8),'evaluation_band']=80\ndf.loc[(df['last_evaluation']>0.8) & (df['last_evaluation']<=0.9),'evaluation_band']=90\ndf.loc[(df['last_evaluation']>0.9),'evaluation_band']=100","c6a78534":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['evaluation_band'].value_counts().plot.bar(ax=ax[0])\n\nax[0].set_title('Number of Employees by last_evaluation')\nax[0].set_ylabel('Count')\n\nsns.countplot('evaluation_band',hue='left',data=df)\nax[1].set_title('evaluation_band:Left vs Not Left')\n\nplt.show()","7192f5f0":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['number_project'].value_counts().plot.bar(ax=ax[0])\n\nax[0].set_title('Number of Employees by number_project')\nax[0].set_ylabel('Count')\n\nsns.countplot('number_project',hue='left',data=df)\nax[1].set_title('number_project :Left vs Not Left')\n\nplt.show()","8e998028":"f, ax = plt.subplots(1,2,figsize=(10, 5))\n\ndf['average_montly_hours'].value_counts().plot.bar(ax=ax[0])\n\nax[0].set_title('Number of Employees by average_montly_hours')\nax[0].set_ylabel('Count')\n\nsns.countplot('average_montly_hours',hue='left',data=df)\nax[1].set_title('average_montly_hours :Left vs Not Left')\n\nplt.show()","400984dd":"# feature-engineering\ndf['salary_band']=0\ndf.loc[(df['salary']=='low'),'salary_band']=0\ndf.loc[(df['salary']=='medium'),'salary_band']=1\ndf.loc[(df['salary']=='high'),'salary_band']=2\n","3dc2baed":"df.rename(columns = {'promotion_last_5years':'promotion'}, inplace = True)","cacc7fd7":"# Open Point - Check the satisfaction level and salary, whether low salary people are only not satisfied or high salary also not satisfied.\n# If high salary people not satisfied then check for number of project they are doing and monthly hours spent","fea45d61":"f, ax = plt.subplots(1,1,figsize=(20, 10))\nsns.countplot('sat_lvl_band',hue='salary',data=df)","f01dd484":"df[(df['sat_lvl_band']==0) & (df['salary']=='high')].head(50)","728475d1":"df['work_hours_gtr_expected']='0'\ndf.loc[(df['average_montly_hours']>195.5),'work_hours_gtr_expected']='Yes'\ndf.loc[(df['average_montly_hours']<195.5),'work_hours_gtr_expected']='No'","f74d1868":"sat_lvl_df=df[((df['sat_lvl_band']==0) | (df['sat_lvl_band']==1) | (df['sat_lvl_band']==2) | (df['sat_lvl_band']==3)) & (df['salary']=='high')][['sat_lvl_band','last_evaluation','number_project','average_montly_hours','work_hours_gtr_expected','time_spend_company','promotion','salary_band','left']].head(200).sort_values('sat_lvl_band')","a2beac04":"sat_lvl_df[sat_lvl_df['work_hours_gtr_expected']=='Yes'].head(200)","1a43f062":"# satisfaction_lvl,salary,promotion last 5 years\nnew_df=df[['sat_lvl_band','salary_band','promotion','left']]","91f2615c":"new_df.head()","d7439e71":"new_df[df['left']==0].head()","6e25eb74":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics","7d9e4c4a":"train,test=train_test_split(new_df,test_size=0.3,stratify=new_df['left'])\n\ntrain_X=train[train.columns[:-1]]\ntrain_Y=train[train.columns[-1]]\ntest_X=test[test.columns[:-1]]\ntest_Y=test[test.columns[-1]]\nX=new_df[new_df.columns[:-1]]\nY=new_df['left']","7e871c42":"model=LogisticRegression()\nmodel.fit(train_X,train_Y)\nprediction=model.predict(test_X)","25f82df8":"metrics.accuracy_score(prediction,test_Y)","3d2f45d7":"from sklearn.naive_bayes import GaussianNB","fb8f34e3":"model=GaussianNB()\nmodel.fit(train_X,train_Y)\npredictionNB=model.predict(test_X)\nprint('The accuracy of the Naive Bayes Classifier is ',metrics.accuracy_score(predictionNB,test_Y))","593846c8":"from sklearn.linear_model import SGDClassifier","8f502b58":"modelSGD=SGDClassifier(loss='modified_huber',shuffle=True,random_state=101)\nmodelSGD.fit(train_X,train_Y)\npredictionSGD=modelSGD.predict(test_X)\nprint('The accuracy of the SGD Classifier is ',metrics.accuracy_score(predictionSGD,test_Y))","a154c34f":"from sklearn.neighbors import KNeighborsClassifier","e1abf527":"knn=KNeighborsClassifier(n_neighbors=1)\nknn.fit(train_X,train_Y)\npredictionKNN=knn.predict(test_X)\nprint('The accuracy of the KNN Classifier is ',metrics.accuracy_score(predictionKNN,test_Y))","7fb86f83":"from sklearn.metrics import confusion_matrix\n\ncm=confusion_matrix(test_Y,predictionKNN)\nplt.figure(figsize=(4,4))\nsns.heatmap(cm,annot=True,fmt=\"d\",cmap=\"Blues\")\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","743adc1a":"from sklearn.metrics import classification_report\nprint(classification_report(test_Y,predictionKNN))","535b4d10":"x=list(range(1,40))\na_index=list(range(1,40))\na=pd.Series()\n\nfor i in list(range(1,40)):\n    model_knn=KNeighborsClassifier(n_neighbors=i)\n    model_knn.fit(train_X,train_Y)\n    prediction_knn=model_knn.predict(test_X)\n    a=a.append(pd.Series(metrics.accuracy_score(prediction_knn,test_Y)))\n    \nplt.plot(a_index,a)\nplt.title('Accuracy vs K-value')\nplt.xticks(x)\nfig=plt.gcf()\nfig.set_size_inches(12,6)\nplt.grid()\nplt.show()\nprint('Accuracies for different values of n are:',a.values,'with the max value as ',a.values.max())","b7ad207b":"# erroe-rate vs K-value\nerror_rate=[]\n\nfor i in range(1,40):\n    model_knn=KNeighborsClassifier(n_neighbors=i)\n    model_knn.fit(train_X,train_Y)\n    prediction_knn=model_knn.predict(test_X)\n    error_rate.append(np.mean(prediction_knn!=test_Y))\n    \nplt.figure(figsize=(12,6))\nplt.plot(a_index,error_rate)\nplt.title('Error Rate vs K-value')\nplt.xticks(x)\nplt.gcf()\nplt.grid()\nplt.show()","a973f37c":"knn=KNeighborsClassifier(n_neighbors=23)\nknn.fit(train_X,train_Y)\npredictionKNN=knn.predict(test_X)\nprint('The accuracy of the KNN Classifier is ',metrics.accuracy_score(predictionKNN,test_Y))","cb4c5f65":"from sklearn.metrics import confusion_matrix\n\ncm=confusion_matrix(test_Y,predictionKNN)\nplt.figure(figsize=(4,4))\nsns.heatmap(cm,annot=True,fmt=\"d\",cmap=\"Blues\")\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","f7033329":"from sklearn.tree import DecisionTreeClassifier","d54f7991":"modelDTC=DecisionTreeClassifier()\nmodelDTC.fit(train_X,train_Y)\npredictionDTC=modelDTC.predict(test_X)\nprint('The accuracy of Decision Tree Classifier is ',metrics.accuracy_score(predictionDTC,test_Y))","21242457":"from sklearn.ensemble import RandomForestClassifier","ab8240ee":"modelRFC=RandomForestClassifier(n_estimators=10)\nmodelRFC.fit(train_X,train_Y)\npredictionRFC=modelRFC.predict(test_X)\nprint('The Accuracy of Random Forest Classifier is',metrics.accuracy_score(predictionRFC,test_Y))","f87e32c4":"from sklearn.svm import SVC","00f803e7":"modelSVC=SVC(kernel='rbf')\nmodelSVC.fit(train_X,train_Y)\npredictionSVC=modelSVC.predict(test_X)\nprint(\"Accuracy of SVC is \",metrics.accuracy_score(predictionSVC,test_Y))","901613a1":"#### 5) Decision Tree Classifier","7a81641f":"11428 has not left the company & 3571 has left the company\n##### 0 - Not Left, 1 - Left","5b741e75":"'promotion_last_5years':-\n0 - No Promotion\n1 - Promotion\n\nwe can see that very few of the employees are promoted and those who did not get promoted in the last 5 years have left the company","2cb234e4":"we can infer that satisfaction level with 0-20%,30%-50%,70%-80% has mostly left the company","23636b56":"#### 2) Gaussian Classifier","047e9112":"##### We are getting around 78% of accuracy. Only used Logistic Regression as of now, also have to use other ML Models to check for a better accuracy","ee302eb9":"#### 4) K-Nearest Neighbours","a6a9c282":"wide range of data , so have to set a band","136a4e94":"#### 6) Random Forest Classifier","2d16373a":"##### k=23 would be the correct n_neighbor value since beyond k=23 value the accuracy and error rate is constant","cdab0444":"##### Employees having \"Satisfaction Level\" <= 10% and working more than expected hours have left the company. But Employees with \"Satisfaction Level\" > 10% AND \"Satisfaction Level\" <= 30% and working more than expected hour hasnt left the company. May be they are searching for good opportunities.","1220e372":"#### 7) Support Vector Machine","e384eb90":"##### Satisfaction level valiues are from 0-1. It is a wide range. We have to create some bands like - 0-0.1 ,0.1-0.2,....,0.9-1","129e57ac":"#### 1) Logistic Regression","b6783c14":"##### Lets have a look in the correlation between the variables, then we can start the EDA ","cdee7dd7":"##### Mostly, Employees who have spent 2-6 years have left the company\n##### Detailed information is below","a888576f":"###### No Null values present in dataframe","f0f32305":"##### Employees with low and medium salary has mostly left the company ","39290bc9":"##### let us know why 192 employees are not satisfied (satisfaction level<30%).\n##### 8.5 hrs is mandatory for an employee to work. Lets see who works more than 8.5 hrs a day or (8.5*23 days) =195.5 hrs a month","d805c04c":"#### 3) Stochastic Graident Descent","f191dae6":"##### as per the above EDA - we get to know that there are 3 variables that is affecting employees to leave company  - satisfaction_lvl,salary,promotion last 5 years"}}