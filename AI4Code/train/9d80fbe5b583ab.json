{"cell_type":{"97128ee8":"code","0d39b663":"code","de0d16b2":"code","6fee9736":"code","785b97c7":"code","87d3f076":"code","96086943":"code","9614760c":"code","2e2a75f6":"code","25408424":"code","a45e4418":"code","7f9253ea":"code","76d4ee2a":"code","0b9d8a5e":"code","8de9283e":"code","01cf5af8":"code","db89a3f5":"code","0a4c8ced":"code","36cbf2fa":"code","ed83b754":"code","3e86a8f5":"code","60600d4c":"code","23755afb":"code","6df33e15":"code","8a8a09a4":"markdown","da76a17b":"markdown","34d41734":"markdown","bbd3c670":"markdown","f7159cbd":"markdown","b0483661":"markdown","7c661766":"markdown","ca3595d7":"markdown","401be450":"markdown","dc72618b":"markdown","4d6844db":"markdown","e9c8ebd4":"markdown","65c52361":"markdown","c6049b6a":"markdown","85ff98fe":"markdown","d37445b2":"markdown","4409508c":"markdown","26b57ffa":"markdown","191e8fad":"markdown","f5199bc2":"markdown","34a26e25":"markdown","23fa28f3":"markdown","1467126f":"markdown","ae573c03":"markdown"},"source":{"97128ee8":"import glob, os\nimport gdal\nfrom arcpy import env\nfrom arcpy.sa import *\nfrom arcpy import RasterToNumPyArray\nimport numpy as np\n\nfor file in glob.glob(\"*.tif\"):\n    print(file)\n    break","0d39b663":"np.count_nonzero(np.isnan(RasterToNumPyArray(Raster('s5p_no2_20180917T164548_20180923T182508.tif'))))","de0d16b2":"np.count_nonzero(np.isnan(RasterToNumPyArray(Raster('20180917T164548_20180923T182508.tif.tiff'))))","6fee9736":"\n\nfull_files = []\nextents = []\n\none_extent = '{\"xmin\":-67.324313912888414,\"ymin\":17.90015055109518,\"xmax\":-65.190815113104549,\"ymax\":18.564903861343627,\"spatialReference\":{\"wkid\":4326,\"latestWkid\":4326}}'\nfor file in glob.glob(\"NODATA\/*.tiff\"):  \n    outraster0 = Raster(file)\n    arr0 = RasterToNumPyArray(outraster0)\n    extents.append(outraster0.extent.JSON)\n    if(np.count_nonzero(np.isnan(arr0))==0):\n        full_files.append(file[7:])","785b97c7":"list(set(extents))","87d3f076":"one_extent = '{\"xmin\":-67.324313912888414,\"ymin\":17.90015055109518,\"xmax\":-65.190815113104549,\"ymax\":18.564903861343627,\"spatialReference\":{\"wkid\":4326,\"latestWkid\":4326}}'\nfor file in glob.glob(\"NODATA\/*.tiff\"):\n    filename = os.path.basename(file)[8:]\n    ds = gdal.Translate(\"NODATA_NORM\/\"+filename, file, projWin = [-67.32, 17.90, -65.19, 18.56])\n    if ds is None:\n        print(file + ' failed')","96086943":"outraster0.extent.JSON","9614760c":"# AttributeError: 'NoneType' object has no attribute 'GetMaskBand'","2e2a75f6":"# This saves bands to individual files\n\n\nfrom osgeo import gdal\n\n\nfor i in range(12):\n    os.mkdir(\"output_multibands\/band_\"+str(i+1))\n\nfor file in glob.glob(\"*.tif\"):\n    in_path = file  #input composite raster\n    out_path = 'output_multibands\/' #output directory for individual bands as files\n\n    #Open existing raster ds\n    src_ds = gdal.Open(in_path)\n\n    for i in range(1,src_ds.RasterCount +1): #Save bands as individual files\n        out_ds = gdal.Translate(out_path + '\/band_' + str(i) + \"\/\" + file.split('.')[0]+\".vrt\", src_ds, format='VRT', bandList=[i])\n        out_ds=None\n        \n","25408424":"[\"\\\"C:\/Program Files\/QGIS 3.12\/bin\/python3.exe\\\"\",\"\\\"C:\/Program Files\/QGIS 3.12\/apps\/Python37\/Scripts\/gdal_fillnodata.py\\\"\", \"-md \", \" 10 \", \" -b \", \" 4 \", \"-of\", \"GTiff\", \"C:\/Users\/HR5537\/Downloads\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/s5p_no2_20190629T174803_20190705T194117.tif\", \"C:\/Users\/HR5537\/Downloads\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/OUTPUT4.tif\"]","a45e4418":"\"\\\"C:\/Program Files\/QGIS 3.12\/bin\/python3.exe\\\" \\\"C:\/Program Files\/QGIS 3.12\/apps\/Python37\/Scripts\/gdal_fillnodata.py\\\" -md 10 -b 4 -of GTiff  C:\/Users\/HR5537\/Downloads\/ds4g-environmental-insights-explorer\/eie_data\/s5p_no2\/s5p_no2_20190629T174803_20190705T194117.tif OUTPUT10.tif\"","7f9253ea":"# \"\\\"C:\\Program Files\\QGIS 3.12\\bin\\python3.exe\\\" \\\"C:\\Program Files\\QGIS 3.12\\apps\\Python37\\Scripts\\gdal_fillnodata.py\\\" -md 10 -b 4 -of GTiff  s5p_no2_20180705T163817_20180712T105412.tif OUTPUT.tif","76d4ee2a":"# Risky: shell commands from python.\nfrom subprocess import check_output\n","0b9d8a5e":"# let's analyse by one band at a time,\n# taking first band here\n# Note even when not tif original file is not specified in input, \n# it must be there with the vrt file (for some reason. I don't know why)\n\n\nfor file in glob.glob(\"*.vrt\"):\n    check_output(\"gdalwarp \"+file+\" \"+file.split('.')[0]+\"_warp.tif -dstnodata -9999\", shell=True)","8de9283e":"import glob\n\ninput_builder = []\nos.chdir(\"NODATA_NORM\")\n\nfor file in glob.glob(\"*.tiff\"): #NODATA_NORM\/*.tiff\n    input_builder.append(os.path.basename(file))\ninputs = np.array_split(input_builder, 12)\ninputs = [\" -i \" + \" -i \".join(input) for input in inputs]\ncommands = [\"gpat_gridts \"+input+\" -o spatiotemporalgrid -n\" for input in inputs]\n# check_output(\"gpat_gridts \"+input_files+\" -o spatiotemporalgrid -n\", shell=True)\n","01cf5af8":"check_output(\"gpat_gridts -i s5p_no2_20190612T162549_20190618T180057_warp.tif -i s5p_no2_20190613T160647_20190619T174418_warp.tif -i s5p_no2_20190613T174817_20190619T193125_warp.tif -i s5p_no2_20190614T172915_20190620T191204_warp.tif -i s5p_no2_20190616T165111_20190622T183247_warp.tif -i s5p_no2_20190617T163209_20190623T182116_warp.tif -i s5p_no2_20190618T161307_20190624T180620_warp.tif -i s5p_no2_20190619T173534_20190625T192848_warp.tif -i s5p_no2_20190620T171632_20190626T190833_warp.tif -i s5p_no2_20190621T165729_20190627T185343_warp.tif -i s5p_no2_20190622T163826_20190628T181049_warp.tif -i s5p_no2_20190623T161923_20190629T180700_warp.tif -i s5p_no2_20190624T160021_20190630T174143_warp.tif -i s5p_no2_20190624T174150_20190630T192108_warp.tif -i s5p_no2_20190625T172247_20190701T190612_warp.tif -i s5p_no2_20190626T170344_20190703T114437_warp.tif -i s5p_no2_20190627T164441_20190703T183146_warp.tif -i s5p_no2_20190628T162537_20190704T180917_warp.tif -i s5p_no2_20190629T160634_20190705T174521_warp.tif -i s5p_no2_20190629T174803_20190705T194117_warp.tif -o spatiotemporalgrid -n\", shell=True)","db89a3f5":"commands[1]","0a4c8ced":"check_output(commands[1], shell=True)\n","36cbf2fa":"# df_power_plants = pd.read_csv('gppd_120_pr.csv')\n# import json\n\n# def string_to_dict(dict_string):\n#     # Convert to proper json format (from here: https:\/\/stackoverflow.com\/questions\/39169718\/convert-string-to-dict-then-access-keyvalues-how-to-access-data-in-a-class)\n#     dict_string = dict_string.replace(\"'\", '\"').replace('u\"', '\"')\n#     return json.loads(dict_string)['coordinates']\n\n# df_power_plants['coord'] = df_power_plants['.geo'].apply(string_to_dict)\n# pd.DataFrame(df_power_plants['coord'].values.tolist()).to_csv('latlon.csv', index=False)","ed83b754":"os.chdir(\"NODATA_NORM\")","3e86a8f5":"check_output(\"gpat_pointsts -i spatiotemporalgrid -o stpoints --xy_file=latlon.csv\", shell=True)","60600d4c":"check_output(\"gpat_distmtx -i stpoints -o result.csv -m tsEUC\", shell=True)","23755afb":"# install.packages(\"mapproj\")\n# library(sf)\n# library(tmap)\n# library(tigris)\n# library(rgeopat2)\n# library(mapproj)\n\n# distmatrix = gpat_read_distmtx(\"result.csv\")\n# hclust_result = hclust(d = distmatrix, method = \"ward.D2\")\n# plot(hclust_result, labels = FALSE)\n# sel_points = read.csv(\"latlon.csv\", header = FALSE)\n# sel_points$class = as.factor(cutree(hclust_result, k = 4))\n# sel_points_st = st_as_sf(sel_points, coords = c(\"V1\", \"V2\"))\n\n\n# me = counties(\"PR\", cb = TRUE).\n# tm_shape(me) + tm_borders(alpha=0.5) + tm_shape(sel_points_st) + tm_dots(col = \"class\", size = 0.25, title = \"Class: \")","6df33e15":"# > library(raster)\n# > library(rasterVis)\n# > listFich <- dir(pattern='\\\\.tiff')\n# > stackSIS <- stack(listFich)\n# > idx <- seq(as.Date('2008-07-14'), as.Date('2008-07-17'), 'day')\n# > SISmm <- setZ(stackSIS, idx)\n# > names(SISmm) <- c('07\/14','07\/15','07\/16','07\/18')\n# > levelplot(SISmm)","8a8a09a4":"The gotcha here, is that gpat_gridts is very sensible to missing values, and different environment values in input files, so \nto make it work, we better unify files (impute NODATA, unify extents...)\nAlso, I think gpat_gridts cannot catch long list of files for some reason. so we can iterately run on time oredered batch of files and get clustering results from each, then finally average clustering results. ","da76a17b":"Lets count nan values in our fils","34d41734":"Note: It was hard for me to install gdal and arcpy in this kernel, inside Kaggle, so please take time to install these packages like you can.\nAlso be careful about paths to files, and all should work fine.","bbd3c670":"Lets see if there are different extent coordinates","f7159cbd":"##### Build a z-axis and visualize","b0483661":"### Spatio-temporal feature extraction\n\n#### Unsuppervised learning approach","7c661766":"Let's unify extents","ca3595d7":"I will be running gdal routines using subprocess#check_output","401be450":"![plot.png](attachment:plot.png)","dc72618b":"![plot3.PNG](attachment:plot3.PNG)","4d6844db":"#### Translate .tif to .vrt, extracting bands to different folders \n##### With gdal.Translate","e9c8ebd4":"#### Add nodata value to rasters tif \n##### with gdalwarp","65c52361":"#### Plot!","c6049b6a":"Separatly, we can approximate NODATA points using gdal_fillnodata ","85ff98fe":"Alternatives !!\nApparently, there are many studies in the academia, about spatio-temporal clustering, in most cases I found, it is about clustering a set of datapoints dispersed on a single map area, and polygons need to be present in the map and not for clustering all values without boundaries. Nevertheless, here I share all, to gain perspectives and hopefully other perspectives.\n\nhttps:\/\/github.com\/Kersauson\/ST-DBSCAN\nhttps:\/\/tslearn.readthedocs.io\/en\/latest\/gen_modules\/clustering\/tslearn.clustering.TimeSeriesKMeans.html\n\nz-axis (time):\nhttps:\/\/en.wikipedia.org\/wiki\/Hovm%C3%B6ller_diagram\nhttps:\/\/informatique-mia.inra.fr\/resste\/sites\/informatique-mia.inra.fr.resste\/files\/analyzing-spatio-temporal.pdf\nhttps:\/\/oscarperpinan.github.io\/rastervis\/\n","d37445b2":"Let's build gpat_gridts commands\npart of GeoPAT2 (see https:\/\/usermanual.wiki\/Pdf\/GeoPAT2Manual.703444930\/)","4409508c":"We can export files to there specific separate bands in different files","26b57ffa":"Intro:\n\nThis challenge introduced me to geoprocessing, and Raster file format. Now it became apparent to me that Raster files are really to be treated so! It is not just a 2D image. \n\nFor example:\nA raster image is an image file format that is defined by a pixel that has one or more numbers associated with it.\nIt has environment variables, like Extent, Origin, .. \n(see https:\/\/desktop.arcgis.com\/fr\/arcmap\/10.3\/manage-data\/raster-and-images\/what-is-raster-data.htm)\n\nAs a result, clustering analysis, missing values imputations, and many other analysis, need to take these into consideration. \nHopefully, there are people specilized in these, and the open source community if full of easy and sophisticated tools.\n\nHere I tried to use QGis and ArcGis Pro (see http:\/\/arcgis.com) to ease exploration, but most importantly to export commands and run then from Python on all files (batch mode like). \nMost QGis processing routine call GDAL python library (see https:\/\/www.osgeo.org\/) and also some arcgis tools are also documented giving there equivalent arcpy code (see https:\/\/pro.arcgis.com\/en\/pro-app\/arcpy\/get-started\/what-is-arcpy-.htm)\n","191e8fad":"#### latlon.csv is the list of geo-points to find very similar temporal patterns of a NO2 (NO2_column_number_density).    ","f5199bc2":"The following command is to be run in Windows Bash, I could not use subprocess#check_output to run it for some reason. ","34a26e25":"FOR %i IN (C:\\Users\\HR5537\\Downloads\\ds4g-environmental-insights-explorer\\eie_data\\s5p_no2\\NODATA\\\\*.tif) DO \"C:\/Program Files\/QGIS 3.12\/bin\/python3.exe\" \"C:\/Program Files\/QGIS 3.12\/apps\/Python37\/Scripts\/gdal_fillnodata.py\" -md 10 -b 4 -of GTiff  \"%i\" \"%i.tiff\"","23fa28f3":"FOR %i IN (C:\\Users\\HR5537\\Downloads\\ds4g-environmental-insights-explorer\\eie_data\\s5p_no2\\NODATA\\\\*.tif) DO \"C:\/Program Files\/QGIS 3.12\/bin\/python3.exe\" \"C:\/Program Files\/QGIS 3.12\/apps\/Python37\/Scripts\/gdal_fillnodata.py\" -md 10 -b 4 -of GTiff  \"%i\" \"%i.tif2\"","1467126f":"\n    Title: Spatio Temporal Clustering\n    Author: Benseguane Abderrahim\n    Date: 23\/03\/2020\n    Code version: 0\n    Kaggle team: Data Solution\n    Company: ENGIE IT","ae573c03":"### Calculate spatial signature on out time-serie satellite images\n##### Using: gpat_gridts "}}