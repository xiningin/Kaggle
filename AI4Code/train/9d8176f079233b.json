{"cell_type":{"2a5f7fb4":"code","e7e1d5a9":"code","a3140b52":"code","523da6df":"code","81a98072":"code","94697dfa":"code","f075c8d2":"code","c725251a":"code","efd48ffa":"code","a620f8f9":"code","13744ea5":"code","3ff361df":"code","d3861479":"code","b286735b":"code","6d3552a8":"code","ca8ccd2e":"code","9a729e6b":"code","1f94a9dc":"code","7fa8a78f":"code","9f9b4904":"code","502d7ccb":"code","80e2634e":"code","3ac8d261":"code","fa77fd73":"code","77d23fc7":"code","3a7d35ee":"code","90b3c91d":"code","224a9bfb":"code","48ab6944":"code","1b08eea9":"code","bd3b4710":"code","3e3d4da4":"code","3d72513f":"code","9f0c4074":"code","984d228a":"code","966ce38a":"code","1fbc498f":"code","2489fb56":"code","f8e9c424":"code","d4fc1fb1":"code","0f372c97":"code","943cbae9":"code","0ae60942":"code","b4c37948":"code","b7a95a47":"code","a85a668b":"markdown","6abcc42e":"markdown","f5d3ddff":"markdown","fed5354d":"markdown","a4f0ead6":"markdown","ec3eb5c5":"markdown","209ae803":"markdown","b9f611b3":"markdown","dd76e639":"markdown","8f2b5f0f":"markdown","d0ad7fa0":"markdown","fc67a393":"markdown","65246efc":"markdown","b7b40e91":"markdown","4272dc57":"markdown","ad416c50":"markdown"},"source":{"2a5f7fb4":"import pandas as pd","e7e1d5a9":"country = [\"Spain\",\"France\"]\npopulation = [\"11\",\"12\"]\nlist_label = [\"country\",\"population\"]\nlist_col = [country,population]\nzipped = list(zip(list_label,list_col))\ndata_dict = dict(zipped)\ndf = pd.DataFrame(data_dict)\ndf","a3140b52":"# add new columns\ndf[\"capital\"] = [\"madrid\",\"paris\"]\ndf","523da6df":"# Broadcasting\ndf[\"income\"] = 0\ndf","81a98072":"data = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\ndata1 = data.loc[:,[\"Attack\",\"Defense\",\"Speed\"]] # plotting all data\ndata1.plot();","94697dfa":"import matplotlib.pyplot as plt\ndata1.plot(subplots = True)\nplt.show()","f075c8d2":"# scatter plot\ndata1.plot(kind = \"scatter\", x = \"Attack\", y = \"Defense\");","c725251a":"# Histogram plot\ndata1.plot(kind = \"hist\", y= \"Defense\",bins=30, range=(0,250), density = True);","efd48ffa":"fig, axes = plt.subplots(2,1)\ndata1.plot(kind = \"hist\", y= \"Defense\", bins=30, range=(0,250), density = True, ax=axes[0])\ndata1.plot(kind = \"hist\", y= \"Defense\", bins=30, range=(0,250), density = True, ax=axes[1], cumulative=True)\n# plt.savefig(\"graph.png\") # u can save \nplt;","a620f8f9":"data.describe()","13744ea5":"time_list = [\"1992-03-08\",\"1992-04-12\"]\nprint(type(time_list[1]))\n\ndatatime_object = pd.to_datetime(time_list)\nprint(type(datatime_object))","3ff361df":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\ndata2 = data.head()\ndata_list = [\"1992-01-10\",\"1992-02-10\",\"1992-03-10\",\"1993-03-15\",\"1993-03-25\"]\ndatetimeObject = pd.to_datetime(data_list)\ndata2[\"date\"] = datetimeObject\n\ndata2 = data2.set_index(\"date\")\ndata2","d3861479":"print(data2.loc[\"1993-03-25\"])\nprint(data2.loc[\"1992-03-10\":\"1993-03-25\"])","b286735b":"data2.resample(\"A\").mean()","6d3552a8":"data2.resample(\"M\").mean()","ca8ccd2e":"data2.resample(\"M\").first().interpolate(\"linear\")","9a729e6b":"# read data\ndata = pd.read_csv(\"..\/input\/pokemon\/Pokemon.csv\")\ndf = data.set_index(\"#\")\ndf.head()","1f94a9dc":"# indexing using square brackets\ndf.HP[1] # df[\"HP\"][1]","7fa8a78f":"# using loc accessor\ndf.loc[1,[\"HP\"]]","9f9b4904":"# selecting only some columns\ndf[[\"HP\",\"Attack\"]]","502d7ccb":"print(type(df[\"HP\"])) # series\nprint(type(df[[\"HP\"]])) # dataframes","80e2634e":"# slicing and indexin series\ndf.loc[1:10,\"HP\":\"Defense\"] # from 1 to 10 and from HP to Defense","3ac8d261":"# reverse slicing\ndf.loc[10:1:-1,\"HP\":\"Defense\"] # from 10 to 1 and from Defense to HP","fa77fd73":"# from somthing to and\ndf.loc[1:10,\"Speed\":][:4]","77d23fc7":"# Creating boolean series\nboolean = df.HP > 200 \ndf[boolean]","3a7d35ee":"# Combining filters \nfirst_filter = df.HP > 150\nsecond_filter = df.Speed >35\ndf[first_filter & second_filter]","90b3c91d":"# filtering column based others\ndf.HP[df.Speed<15] # perfect","224a9bfb":"# plain python functions\ndef div(n):\n    return n\/2\n\ndf.HP.apply(div)","48ab6944":"# we can use lambda\ndf.HP.apply(lambda n: n\/2)","1b08eea9":"# defining column using other columns\ndf[\"total_power\"] = df.Attack + df.Defense\ndf.head()","bd3b4710":"# Our index name is this\nprint(df.index.name)\n# lets change it\ndf.index.name = \"index_name\"\ndf.head()","3e3d4da4":"df3 = df.copy()\ndf3.index = range(100,900,1)\ndf3.head()","3d72513f":"data.head()","9f0c4074":"data.head()","984d228a":"# setting index : type 1 is outer type 2 is inner index\ndata1 = data.set_index([\"Type 1\",\"Type 2\"])\ndata1.head(20)","966ce38a":"# pivoting : reshape tool\ndic = {\"treatment\":[\"A\",\"A\",\"B\",\"B\"],\"gender\":[\"F\",\"M\",\"F\",\"M\"],\"response\":[10,45,4,9],\"age\":[15,4,72,65]}\ndfDic = pd.DataFrame(dic)\ndfDic","1fbc498f":"# pivoting\ndfDic.pivot(index=\"treatment\", columns=\"gender\", values=\"response\")","2489fb56":"df1 = dfDic.set_index([\"treatment\",\"gender\"])\ndf1","f8e9c424":"# unstacking\ndf1.unstack(level=0)","d4fc1fb1":"# change inner and outer index position\ndf2 = df1.swaplevel(0,1)\ndf2","0f372c97":"pd.melt(dfDic,id_vars=\"treatment\",value_vars=[\"age\",\"response\"])","943cbae9":"dfDic","0ae60942":"# groupby all dataframe\n# we can use max, min, sum, std, mean\ndfDic.groupby(\"treatment\").mean()","b4c37948":"# groupby only one column\ndfDic.groupby(\"treatment\").age.max()","b7a95a47":"# groupby multiple columns\ndfDic.groupby(\"treatment\")[[\"age\",\"response\"]].min()","a85a668b":"### Transforming Data","6abcc42e":"### Hierarchical Indexing","f5d3ddff":"# Indexing Pandas Time Series","fed5354d":"### Categoricals and Groupby","a4f0ead6":"### Filtering Data Frames","ec3eb5c5":"### Stacking and Unstacking DataFrame","209ae803":"# Visual Exploratory Data Analysis","b9f611b3":"### Melting Data Frames","dd76e639":"### Index Objects and Labeled Data","8f2b5f0f":"# Statistical Exploratory Data Analysis","d0ad7fa0":"### Pivoting Data Frames","fc67a393":"# Review of Pandas","65246efc":"### Indexing Data Frames","b7b40e91":"### Slicing Data Frames","4272dc57":"# Manipulating Data Frames with Pandas","ad416c50":"# Resampling Pandas Time Series"}}