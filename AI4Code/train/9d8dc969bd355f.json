{"cell_type":{"2f27f8f9":"code","5687471f":"code","b82a899c":"code","cfaeaa3f":"code","aa91b187":"code","5c9b960e":"code","af3261ba":"code","d37c8f81":"code","a0c59b7f":"code","adcbedf2":"code","ac1cf0ba":"code","f7ec3d20":"code","15d1cb38":"markdown"},"source":{"2f27f8f9":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5687471f":"PATH = \"\/kaggle\/input\/logistics-shopee-code-league\/\"","b82a899c":"df = pd.read_csv(PATH+'delivery_orders_march.csv')\ndf","cfaeaa3f":"def SLA(origin, dest):\n    if origin == 'manila':\n        if dest == 'manila': return 3\n        elif dest == 'luzon': return 5\n        else: return 7\n    elif origin == 'luzon':\n        if dest == 'manila': return 5\n        elif dest == 'luzon': return 5\n        else: return 7","aa91b187":"buyer = []\nseller = []\npick = []\nst = []\nnd = []\nday = []\n\nbuyer_addr = df['buyeraddress'].values\nseller_addr = df['selleraddress'].values\n\np = df['pick'].values\np1 = df['1st_deliver_attempt'].values\np2 = df['2nd_deliver_attempt'].values\n\nfor i in range(len(df)):\n    buyer.append(buyer_addr[i].lower().split(' ')[-1])\n    seller.append(seller_addr[i].lower().split(' ')[-1])\n    day.append(SLA(seller_addr[i].lower().split(' ')[-1],buyer_addr[i].lower().split(' ')[-1]))\n    pick.append(datetime.datetime.fromtimestamp(p[i]).date())\n    st.append(datetime.datetime.fromtimestamp(p1[i]).date())\n    if np.isnan(p2[i]):\n        nd.append(0)\n    else:\n        nd.append(datetime.datetime.fromtimestamp(p2[i]).date())","5c9b960e":"df_new = pd.DataFrame()\ndf_new['orderid'] = df['orderid'].values\ndf_new['pick'] = pick\ndf_new['SLA'] = day\ndf_new['1st_deliver_attempt'] = st\ndf_new['2nd_deliver_attempt'] = nd\ndf_new['buyeraddress'] = buyer\ndf_new['selleraddress'] = seller","af3261ba":"df_new.head(20)","d37c8f81":"buyer = df_new['buyeraddress'].values\nseller = df_new['selleraddress'].values\npick = df_new['pick'].values\nt1 = df_new['1st_deliver_attempt'].values\nt2 = df_new['2nd_deliver_attempt'].values\nSLA = df_new['SLA'].values","a0c59b7f":"holiday = [datetime.datetime(2020, 3, 1).date(),datetime.datetime(2020, 3, 8).date(),datetime.datetime(2020, 3, 15).date(),datetime.datetime(2020, 3, 22).date(),datetime.datetime(2020, 3, 25).date(),datetime.datetime(2020, 3, 29).date(),datetime.datetime(2020, 3, 30).date(),datetime.datetime(2020, 3, 31).date(),datetime.datetime(2020, 4, 5).date()]\nholiday","adcbedf2":"ans = []\nfor i in range(len(df_new)):\n    is_late = False\n    time = (t1[i] - pick[i]).days\n    for h in holiday:\n        if pick[i]<=h<=t1[i]:\n            time-=1\n    if time>SLA[i]:\n        is_late = True\n    \n    if t2[i]!=0 and is_late!=True:\n        time = (t2[i] - t1[i]).days\n        for h in holiday:\n            if t1[i]<=h<=t2[i]:\n                time-=1\n        if time>3:\n            is_late = True\n    ans.append(is_late)","ac1cf0ba":"df_new['is_late'] = ans\ndf_new['is_late'] = df_new['is_late'].map({False:0,True:1})\ndf_new","f7ec3d20":"df_new[['orderid','is_late']].to_csv('submission.csv',index = False)","15d1cb38":"We decide to release our solution to score 1.0 after the competition for your reference!"}}