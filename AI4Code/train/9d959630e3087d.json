{"cell_type":{"c3a2d401":"code","a202851d":"code","fb90e624":"code","da1c6374":"code","90dca06b":"code","761cdde9":"code","83df4d71":"code","38140bad":"code","cafa6b24":"code","e0186944":"code","f387e1b7":"code","793b6872":"markdown","0d29bcc8":"markdown","6a2ae73c":"markdown","d2bae12c":"markdown","8b19ecc4":"markdown","c92cd30e":"markdown","2a5c071e":"markdown","11256eb1":"markdown","6b9f457b":"markdown","2e01f075":"markdown","d206514d":"markdown","d1870041":"markdown","a1900334":"markdown"},"source":{"c3a2d401":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom scipy.stats import ttest_ind\nimport matplotlib.pyplot as plot\nimport seaborn as sns\nsns.set()\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a202851d":"data = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")\ndisplay(data.head())","fb90e624":"#male vs female\nfdata = data[data[\"gender\"]==\"female\"][\"math score\"]\nmdata = data[data[\"gender\"]==\"male\"][\"math score\"]\n\nprint(fdata.shape)\nprint(mdata.shape)\n\nplot.ylabel(\"Average math score\")\nplot.bar([\"F\", \"M\"], [fdata.mean(), mdata.mean()])\nplot.show()\n\nt,p = ttest_ind(mdata, fdata)\nprint(p\/2)","da1c6374":"#male vs female\nfdata = data[data[\"gender\"]==\"female\"][\"reading score\"]\nmdata = data[data[\"gender\"]==\"male\"][\"reading score\"]\n\nplot.ylabel(\"Average reading score\")\nplot.bar([\"F\", \"M\"], [fdata.mean(), mdata.mean()])\nplot.show()\n\nt,p = ttest_ind(mdata, fdata)\nprint(p\/2)","90dca06b":"#male vs female\nfdata = data[data[\"gender\"]==\"female\"][\"writing score\"]\nmdata = data[data[\"gender\"]==\"male\"][\"writing score\"]\n\nplot.ylabel(\"Average writing score\")\nplot.bar([\"F\", \"M\"], [fdata.mean(), mdata.mean()])\nplot.show()\n\nt,p = ttest_ind(mdata, fdata)\nprint(p\/2)","761cdde9":"avgDat = data[[\"math score\", \"reading score\", \"writing score\"]].mean(axis=1).rename(\"Score\")\ndata = pd.concat([data, avgDat], 1)\ndisplay(data.head())","83df4d71":"slunch = data[data[\"lunch\"]==\"standard\"][\"Score\"]\nflunch = data[data[\"lunch\"]==\"free\/reduced\"][\"Score\"]\n\nprint(slunch.shape)\nprint(flunch.shape)\n\nplot.ylabel(\"Average score\")\nplot.bar([\"standard lunch\", \"free\/reduced lunch\"], [slunch.mean(), flunch.mean()])\nplot.show()\n\nt,p = ttest_ind(slunch, flunch)\nprint(p\/2)","38140bad":"preps = data[\"test preparation course\"].unique()\nprint(preps)","cafa6b24":"noprep = data[data[\"test preparation course\"]==\"none\"][\"Score\"]\nprep = data[data[\"test preparation course\"]==\"completed\"][\"Score\"]\n\nprint(noprep.shape)\nprint(prep.shape)\n\nplot.ylabel(\"Average score\")\nplot.bar([\"no preparation course\", \"completed course\"], [noprep.mean(), prep.mean()])\nplot.show()\n\nt,p = ttest_ind(noprep, prep)\nprint(p\/2)","e0186944":"eth = data[\"race\/ethnicity\"].unique()\nprint(eth)\n\nscores = []\n\nfor e in eth:\n    scores.append(data[data[\"race\/ethnicity\"]==e][\"Score\"].mean())\n\nsrt = np.argsort(scores)\n\nscores = np.array(scores)\nscores = scores[srt]\neth = eth[srt]\n    \nplot.ylabel(\"Average score\")\nplot.bar(eth, scores)\nplot.show()\n\nfor e1 in eth:\n    for e2 in eth:\n        if e1 == e2:\n            continue\n        \n        s1 = data[data[\"race\/ethnicity\"]==e1][\"Score\"]\n        s2 = data[data[\"race\/ethnicity\"]==e2][\"Score\"]\n        \n        if s1.mean() > s2.mean():\n            t,p = ttest_ind(s1, s2)\n\n            if p\/2 < 0.05:\n                print(\"\\\"\"+e1+\"\\\" scores significantly higher than \\\"\"+e2+\"\\\"\\tp\/2=\"+str(p\/2))\n","f387e1b7":"edu = data[\"parental level of education\"].unique()\nprint(edu)\n\nscores = []\n\nfor e in edu:\n    scores.append(data[data[\"parental level of education\"]==e][\"Score\"].mean())\n\nsrt = np.argsort(scores)\n\nscores = np.array(scores)\nscores = scores[srt]\nedu = edu[srt]\n\nplot.ylabel(\"Average score\")\nplot.bar(edu, scores)\nplot.xticks(rotation=45)\nplot.show()\n\nfor e1 in edu:\n    for e2 in edu:\n        if e1 == e2:\n            continue\n        \n        s1 = data[data[\"parental level of education\"]==e1][\"Score\"]\n        s2 = data[data[\"parental level of education\"]==e2][\"Score\"]\n        \n        if s1.mean() > s2.mean():\n            t,p = ttest_ind(s1, s2)\n\n            if p\/2 < 0.05:\n                print(\"\\\"\"+e1+\"\\\" scores significantly higher than \\\"\"+e2+\"\\\"\\tp\/2=\"+str(p\/2))\n","793b6872":"**Question**: Do male students score higher at writing than female students?","0d29bcc8":"**Answer**: Female students score significantly higher at the reading test than male students.","6a2ae73c":"Group E scores signfificantly higher than all other groups.","d2bae12c":"**Question**: Does ethnicity influence the score?","8b19ecc4":"**Question**: Does the education of the parents influence the test results?","c92cd30e":"**Question**: Do male students score higher at math than female students?","2a5c071e":"**Question**: Do male students score higher at reading than female students?","11256eb1":"**Question**: Does test preparation influence the test score?","6b9f457b":"**Question**: Does the lunch influence the test score?","2e01f075":"**Answer**: Students with a standard lunch score significantly higher.","d206514d":"**Answer**: Male students score significantly higher at the math test than female students.","d1870041":"**Answer**: Students with a completed test preparation course score significantly higher.","a1900334":"**Answer**: Female students score significantly higher at the writing test than male students."}}