{"cell_type":{"39da1cc2":"code","85b65352":"code","d9a86642":"code","28dbb541":"code","bc03f6a0":"code","982023b6":"code","42f1b117":"code","488ffba7":"code","ad507026":"code","a4c4a5a1":"code","1e0e8a3c":"code","14ef7919":"code","f545da39":"code","90edb476":"code","6fe8c6b2":"code","e57212c9":"code","f437a2c7":"code","106adb76":"code","b2bad6f3":"code","a94f7ead":"code","08ea8312":"markdown","d150f160":"markdown","233da26c":"markdown","b39311b5":"markdown","8368e01c":"markdown","deabc54c":"markdown","5b2a9c35":"markdown","bf05551d":"markdown","36cd366f":"markdown","ff0cb31e":"markdown","bb95040d":"markdown","45a2a983":"markdown","a6d606fd":"markdown","2c40a0ff":"markdown","b425c5ac":"markdown","fe89e4cf":"markdown","70b316be":"markdown","76d178c9":"markdown"},"source":{"39da1cc2":"import os\nimport pandas as pd","85b65352":"# path = \".\/Sales_Data\"\n# files = [file for file in os.listdir(path) if not file.startswith('.')] # Ignore hidden files\n\n# all_months_data = pd.DataFrame()\n\n# for file in files:\n#     current_data = pd.read_csv(path+\"\/\"+file)\n#     all_months_data = pd.concat([all_months_data, current_data])\n    \n# all_months_data.to_csv(\"all_data_copy.csv\", index=False)\n    ","d9a86642":"all_data = pd.read_csv(\"..\/input\/sales-data-mockup\/input\/sales_all_data.csv\")\nall_data.head()","28dbb541":"# Find NAN\nnan_df = all_data[all_data.isna().any(axis=1)]\ndisplay(nan_df.head())\n\nall_data = all_data.dropna(how='all')\nall_data.head()","bc03f6a0":"all_data = all_data[all_data['Order Date'].str[0:2]!='Or']","982023b6":"all_data['Quantity Ordered'] = pd.to_numeric(all_data['Quantity Ordered'])\nall_data['Price Each'] = pd.to_numeric(all_data['Price Each'])","42f1b117":"all_data['Month'] = all_data['Order Date'].str[0:2]\nall_data['Month'] = all_data['Month'].astype('int32')\nall_data.head()","488ffba7":"all_data['Month 2'] = pd.to_datetime(all_data['Order Date']).dt.month\nall_data.head()","ad507026":"def get_city(address):\n    return address.split(\",\")[1].strip(\" \")\n\ndef get_state(address):\n    return address.split(\",\")[2].split(\" \")[1]\n\nall_data['City'] = all_data['Purchase Address'].apply(lambda x: f\"{get_city(x)}  ({get_state(x)})\")\nall_data.head()","a4c4a5a1":"all_data['Sales'] = all_data['Quantity Ordered'].astype('int') * all_data['Price Each'].astype('float')","1e0e8a3c":"all_data.groupby(['Month']).sum()","14ef7919":"import matplotlib.pyplot as plt\n\nmonths = range(1,13)\nprint(months)\n\nplt.bar(months,all_data.groupby(['Month']).sum()['Sales'])\nplt.xticks(months)\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('Month number')\nplt.show()\n\n","f545da39":"all_data.groupby(['City']).sum()","90edb476":"import matplotlib.pyplot as plt\n\nkeys = [city for city, df in all_data.groupby(['City'])]\n\nplt.bar(keys,all_data.groupby(['City']).sum()['Sales'])\nplt.ylabel('Sales in USD ($)')\nplt.xlabel('Month number')\nplt.xticks(keys, rotation='vertical', size=8)\nplt.show()","6fe8c6b2":"# Add hour column\nall_data['Hour'] = pd.to_datetime(all_data['Order Date']).dt.hour\nall_data['Minute'] = pd.to_datetime(all_data['Order Date']).dt.minute\nall_data['Count'] = 1\nall_data.head()\n","e57212c9":"keys = [pair for pair, df in all_data.groupby(['Hour'])]\n\nplt.plot(keys, all_data.groupby(['Hour']).count()['Count'])\nplt.xticks(keys)\nplt.grid()\nplt.show()\n\n# My recommendation is slightly before 11am or 7pm","f437a2c7":"import warnings\nwarnings.filterwarnings(\"ignore\")\n# https:\/\/stackoverflow.com\/questions\/43348194\/pandas-select-rows-if-id-appear-several-time\ndf = all_data[all_data['Order ID'].duplicated(keep=False)];\n\n# Referenced: https:\/\/stackoverflow.com\/questions\/27298178\/concatenate-strings-from-several-rows-using-pandas-groupby\ndf['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x));\ndf2 = df[['Order ID', 'Grouped']].drop_duplicates();","106adb76":"# Referenced: https:\/\/stackoverflow.com\/questions\/52195887\/counting-unique-pairs-of-numbers-into-a-python-dictionary\nfrom itertools import combinations\nfrom collections import Counter\n\ncount = Counter()\n\nfor row in df2['Grouped']:\n    row_list = row.split(',')\n    count.update(Counter(combinations(row_list, 2)))\n\nfor key,value in count.most_common(10):\n    print(key, value)\n","b2bad6f3":"product_group = all_data.groupby('Product')\nquantity_ordered = product_group.sum()['Quantity Ordered']\n\nkeys = [pair for pair, df in product_group]\nplt.bar(keys, quantity_ordered)\nplt.xticks(keys, rotation='vertical', size=8)\nplt.show()","a94f7ead":"# Referenced: https:\/\/stackoverflow.com\/questions\/14762181\/adding-a-y-axis-label-to-secondary-y-axis-in-matplotlib\n\nprices = all_data.groupby('Product').mean()['Price Each']\n\nfig, ax1 = plt.subplots()\n\nax2 = ax1.twinx()\nax1.bar(keys, quantity_ordered, color='g')\nax2.plot(keys, prices, color='b')\n\nax1.set_xlabel('Product Name')\nax1.set_ylabel('Quantity Ordered', color='g')\nax2.set_ylabel('Price ($)', color='b')\nax1.set_xticklabels(keys, rotation='vertical', size=8)\n\nfig.show()","08ea8312":"#### Read in updated dataframe","d150f160":"#### Question 1: What was the best month for sales? How much was earned that month? ","233da26c":"# Sales Analysis","b39311b5":"## Data Exploration!","8368e01c":"#### Add month column (alternative method)","deabc54c":"#### Add month column","5b2a9c35":"#### Question 4: What products are most often sold together?","bf05551d":"#### Import necessary libraries","36cd366f":"#### What product sold the most? Why do you think it sold the most?","ff0cb31e":"##### Drop rows of NAN","bb95040d":"#### Merge data from each month into one CSV","45a2a983":"### Augment data with additional columns","a6d606fd":"#### Make columns correct type","2c40a0ff":"### Clean up the data!\nThe first step in this is figuring out what we need to clean. I have found in practice, that you find things you need to clean as you perform operations and get errors. Based on the error, you decide how you should go about cleaning the data","b425c5ac":"##### Get rid of text in order date column","fe89e4cf":"#### Question 3: What time should we display advertisements to maximize likelihood of customer's buying product?","70b316be":"#### Add city column","76d178c9":"#### Question 2: What city sold the most product?"}}