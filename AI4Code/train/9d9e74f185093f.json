{"cell_type":{"badd9410":"code","693eb93a":"code","24808585":"code","4219d2f5":"code","038669ca":"code","6bb1c0b4":"code","26d1bf56":"code","28f3bee8":"code","03aeb6c3":"code","5a0ac0bf":"code","00824e72":"code","00dd3613":"code","f7d16d18":"code","b7fdf729":"code","86e5e3a5":"markdown","ffb5274b":"markdown","93b2c79b":"markdown","d5638c45":"markdown","167d5a2d":"markdown","c2852450":"markdown","461079dd":"markdown","ca61a95c":"markdown","cc115b8b":"markdown","f9e42c52":"markdown","045a3ecd":"markdown","ebb33f4d":"markdown","24183f11":"markdown","8f31fcf8":"markdown","718eb79b":"markdown","eb924a67":"markdown","6b02cfbc":"markdown","004a72d3":"markdown","ee7edb69":"markdown","1fd5651a":"markdown","300d51ad":"markdown","199a8b54":"markdown","d830299e":"markdown","4c641d76":"markdown","fa80890c":"markdown"},"source":{"badd9410":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","693eb93a":"survey_raw=pd.read_csv('..\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', encoding='ISO-8859-1', low_memory=False)\n","24808585":"survey=survey_raw.drop(survey_raw.index[0])\n\nsurvey.to_csv('etlsurvey.csv', index=False)","4219d2f5":"import matplotlib.pyplot as plt\n\n\nsurvey_gender=[ \n                survey_raw[survey_raw['Q2']=='Man']['Q2'].count(),\n                survey_raw[survey_raw['Q2']=='Woman']['Q2'].count(),\n                survey_raw[survey_raw['Q2']=='Nonbinary']['Q2'].count(),\n                survey_raw[survey_raw['Q2']=='Prefer not to say']['Q2'].count(),\n                survey_raw[survey_raw['Q2']=='Prefer to self-describe']['Q2'].count()\n             ]\n\n\n\ngenders=['Man','Woman', 'Nonbinary', 'Prefer not to say', 'Prefer to self-describe']\ncolor=['RebeccaPurple','steelblue', 'DarkOrange','red','green']\n\nexplode =(0.2,0,0.5,0,0.4)\n\nfig1,ax1= plt.subplots(figsize = (15,8))\n\nplt.pie(survey_gender, explode=explode, labels=genders, colors=color, autopct='%1.2f%%')\n\nax1.legend(genders, loc = 'upper right')\n\nplt.tight_layout()\n\nplt.savefig('gender_diversity.png')","038669ca":"Country_count=survey['Q3'].value_counts().rename_axis('Country').reset_index(name='counts')\nimport matplotlib.pyplot as plt\n\nimport plotly.graph_objs as go \n\n\nlayout = dict(title = 'Respondent Country',\n              geo = dict(projection = {'type':'mercator'})\n             )\n\n\nchoromap = go.Figure(data =  dict(\n        type = 'choropleth',\n        colorscale = 'Viridis',\n        locations = Country_count['Country'],\n        locationmode = \"country names\",\n        z = Country_count['counts'],\n        autocolorscale=False,\n        text = Country_count['Country'],\n        colorbar = {'title' : 'No. of Respondents'}),\n        layout = layout)\n\n\n\nchoromap.update_layout(template=\"plotly_dark\",\n                        autosize=True,\n                        width=740,\n                        height=500,\n                        margin=dict(l=10, r=20, t=40, b=5),\n                        title={\n                            'y':0.97,\n                            'x':0.45,\n                            'xanchor': 'center',\n                            'yanchor': 'top'}\n\n                    )\n\n\n\nchoromap.show()\n\n","6bb1c0b4":"import seaborn as sns\n\n\nplt.style.use(\"dark_background\")\n\nfig2=plt.subplots(figsize =(10,6))\nfig2=sns.countplot(y=survey['Q5'],palette=\"viridis\");\nfig2.set_xticks([])\nfig2.set_xlabel('')\n\n\nfig2.set_ylabel(\"Professional Role\/Title of Respondent\")\n    \nplt.tight_layout()\n","26d1bf56":"import plotly.express as px\n\n\nfig3 = px.violin(survey, x='Q24', y='Q5',orientation=\"h\").update_traces(side=\"positive\", width=3)\n\n\nfig3.update_layout(template=\"plotly_dark\",\n                    autosize=False,\n                   width=750,height=600,\n                xaxis={'title':'current yearly compensation (approximate $USD)'},\n                  yaxis={'categoryorder':'total ascending','title':'Respodent of respective Role'},\n                  titlefont=dict(size=16),\n                  title_text=\"Respondents with their Yearly Compensation (approximate $USD)\"\n                 )\n\nfig3.update_xaxes(ticktext=(pd.unique(survey['Q24'].dropna())),tickangle=45)\n\nfig3.show()","28f3bee8":"xs=survey[\"Q25\"]\n\n\nxs.replace({\"$100,000 or more ($USD)\": \"100K or more\",\n                       \"$0 ($USD)\": \"0\",\n                        \"$1-$99\":\"1-100\",\n                       \"$10,000-$99,999\": \"10K-100K\",\n                       \"$1000-$9,999\": \"1k-10K\",\n                       \"$100-$999\": \"100-1K\",}, inplace=True)\n\n\nfig4 = px.violin(survey, x=xs, y='Q5',orientation=\"h\").update_traces(side=\"positive\", width=3)\n\n\nfig4.update_layout(template=\"plotly_dark\",\n                    autosize=False,\n                   width=740,height=600,\n                xaxis={'title':'Spending on machine learning and\/or cloud computing services($USD)'},\n                  yaxis={'categoryorder':'total ascending','title':'Respodent of respective Role'},\n                  titlefont=dict(size=16),\n                  title_text=\"Respondents spending on machine learning and\/or cloud computing services\"\n                 )\n\nfig4.update_xaxes(ticktext=xs,tickangle=45)\n\nfig4.show()\n","03aeb6c3":"import plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\n\n#Platform\nplatform20=survey.iloc[:,120:130].count()\n\nplatform22=survey.iloc[:,256:266].count()\n\nlabelplatorm=list(survey.iloc[:,120:130].mode().iloc[0])\n\n#Product\nproduct20=survey.iloc[:,133:140].count()\n\nproduct22=survey.iloc[:,268:278].count()\n\nlabelproduct=list(survey.iloc[:,133:140].mode().iloc[0])\n\n#figure\n\nfig5 = go.Figure(data=[\n                    go.Bar(legendgroup=\"group\",\n                           name='Platforms Regularly Used',\n                           x= platform20,\n                           y= labelplatorm,\n                           marker_color ='steelblue',\n                           orientation='h'),\n    \n                    go.Bar(legendgroup=\"group\",\n                           name='Platforms Getting Familiar in 2022',\n                           x= platform22,\n                           y= labelplatorm,\n                           marker_color ='firebrick',\n                           orientation='h'),\n    \n                    go.Bar(legendgroup=\"group2\",\n                           name='Products Regularly Used',\n                           x= product20,\n                           y= labelproduct,\n                           marker_color ='RebeccaPurple',\n                           orientation='h',\n                           xaxis='x2', yaxis='y2'), \n\n                    go.Bar(legendgroup=\"group2\",\n                           name='Products Getting Familiar in 2022',\n                           x= product22,\n                           y= labelproduct,\n                           marker_color ='Orange',\n                           orientation='h',\n                           xaxis='x2', yaxis='y2'),\n\n\n\n                    ],\n                 layout = go.Layout(\n                   xaxis = dict(domain = [0.0, 0.4]),\n                   xaxis2 = dict(domain = [0.65, 1]),\n                   yaxis2 = dict(anchor = 'free',position = 0.65)\n                )\n                )\n\nfig5.update_layout(template=\"plotly_dark\",\n                    autosize=False,\n                   width=780,height=600 \n                  ,yaxis={'categoryorder':'total ascending'},\n                  titlefont=dict(size=16),\n                  title_text=\"Cloud Computing Platforms & Products\",\n                 font=dict(size=9,color=\"white\"),\n                  legend=dict(orientation=\"h\", yanchor=\"bottom\", y=1.00, xanchor=\"right\",x=0.95)\n\n                 )\n                \n\n\nfig5.show()","5a0ac0bf":"import plotly.graph_objects as go\n\n#Regular\n\nmal20=survey.iloc[:,144:153].count()\nmllabel=list(survey.iloc[:,144:153].mode().iloc[0])\n\n#Familiar\n\nmal22=survey.iloc[:,280:289].count()\nmllabel2=list(survey.iloc[:,280:289].mode().iloc[0])\n\n#Plot\n\nfig6 = go.Figure(data=[\n                    go.Bar(name='Regular Used',x= mllabel,y= mal20,marker_color ='RebeccaPurple'),\n                    go.Scatter(name='Getting Familiar in 2022',x= mllabel2,y= mal22,marker_color ='Orange')\n                    ],layout_title_text=\"Machine Learning Products\"\n                )\n\nfig6.update_layout(\n                  template=\"plotly_dark\",\n                   autosize=True,\n                  width=780,height=700,\n                  yaxis={'categoryorder':'total ascending'},\n                  titlefont=dict(size=20),\n                  font=dict(size=9, color=\"white\"),\n                 legend=dict(orientation=\"h\", yanchor=\"bottom\", y=1.02, xanchor=\"right\",x=1)\n                )\n\nfig6.show();\n","00824e72":"#Regular\nbdmost=(survey['Q30'].value_counts())\nbdlabelmost=list(pd.unique(survey['Q30'].dropna()))\n\n\n#Most\nbdregular20=survey.iloc[:,155:173].count()\nbdlabel20=list(survey.iloc[:,155:173].mode().iloc[0])\nbdlabel20\n\n#Familiar\nbdregular22=survey.iloc[:,291:309].count()\nbdlabel22=list(survey.iloc[:,291:309].mode().iloc[0])\nbdlabel22\n\n#plot\nfig7 = go.Figure(data=[\n                        go.Bar(name='Used Most often',x=bdmost, y=bdlabelmost,marker_color ='orange',orientation='h'),\n                        go.Bar(name='Regularly Used',x= bdregular20,y= bdlabel20,marker_color ='steelblue',orientation='h'), \n                        go.Bar(name='Getting Familiar in 2022',x= bdregular22,y= bdlabel22,marker_color ='RebeccaPurple',orientation='h') \n                    ]\n                )\n\nfig7.update_layout(\n                   template=\"plotly_dark\",\n                   autosize=True,\n                   barmode='stack',\n                  width=750,height=550\n                 ,yaxis={'categoryorder':'total ascending'},\n                  titlefont=dict(size=20),\n                  title_text=\"Big Data Products\",\n                  font=dict(size=10,color=\"white\"),\n                legend=dict(orientation=\"h\", yanchor=\"bottom\",y=1.02,xanchor=\"right\",x=1)\n)\n\nfig7.show()\n","00dd3613":"#regular\naml_regular_tools20=survey.iloc[:,198:208].count()\n\naml_regular_tools_label20=list(survey.iloc[:,198:208].mode().iloc[0])\n\n\n#most\naml_most_tools=survey.iloc[:,190:197].count()\n\naml_most_tools_label=list(survey.iloc[:,190:197].mode().iloc[0])\n\n\n#Familiar\n\naml_familiar_tools22=survey.iloc[:,332:342].count()\n\naml_familiar_tools_label22=list(survey.iloc[:,332:342].mode().iloc[0])\n\n\n#Figure\n\nfig8 = go.Figure(data=[\n                        go.Bar(name='Regularly Used',\n                               x= aml_regular_tools20,\n                               y= aml_regular_tools_label20,\n                               marker_color ='steelblue',\n                               orientation='h',\n                              xaxis='x2', yaxis='y2'), \n    \n                        go.Bar(name='Getting Familiar in 2022',\n                               x= aml_familiar_tools22,\n                               y= aml_familiar_tools_label22,\n                               marker_color ='RebeccaPurple',\n                               orientation='h',\n                              xaxis='x2', yaxis='y2'),\n    \n                        go.Pie(values=aml_most_tools,\n                               labels=aml_most_tools_label,\n                               domain=dict(x=[0, 0.3]),\n                               textinfo='label+percent',insidetextorientation='radial',\n                              showlegend=False)\n                    ],\n                 layout = go.Layout(\n                   xaxis2 = dict(domain = [0.50, 1]),\n                   yaxis2 = dict(anchor = 'free',\n                                 position = 0.5\n                                )\n\n                  )\n                )\n\nfig8.update_layout(template=\"plotly_dark\",\n                  autosize=True,\n                  width=800,height=500,\n                    title_text=\"Automate Machine Learning Tools\",\n                  titlefont=dict(size=20),\n                  font=dict(\n                        size=8,\n                        color=\"white\"\n                 ),\n                  legend=dict(\n                    orientation=\"h\",\n                    yanchor=\"bottom\",\n                    y=1.02,\n                    xanchor=\"right\",\n                    x=1\n                )\n                  )\nfig8.show()\n","f7d16d18":"#regular\nbi_tools20=survey.iloc[:,174:187].count()\n\nbi_tools_label20=list(survey.iloc[:,174:187].mode().iloc[0])\n\n\n#most\nbi_tools=(survey['Q32'][(survey['Q32']!='None') & (survey['Q32']!='Other')].value_counts())\n\nbi_tools_label=list(pd.unique(survey['Q32'][(survey['Q32']!='None') & (survey['Q32']!='Other')].dropna()))\n\n\n#Familiar\n\nbi_tools22=survey.iloc[:,309:322].count()\n\nbi_tools_label22=list(survey.iloc[:,309:322].mode().iloc[0])\n\n#Figure\n\nfig9 = go.Figure(data=[\n                        go.Bar(name='Regularly Used',\n                               x= bi_tools_label20,\n                               y= bi_tools20,\n                               marker_color ='steelblue'\n                              ), \n    \n                        go.Bar(name='Getting Familiar in 2022',\n                               x= bi_tools_label22,\n                               y= bi_tools22,\n                               marker_color ='RebeccaPurple'\n                              ),\n    \n                        go.Scatter(name='Used Most Often',\n                               x= bi_tools_label,\n                               y= bi_tools,\n                               mode='markers',\n                               marker=dict(color='red',symbol=\"diamond\", size=10)\n                                  )\n                        ])\n\n# Plot the chart\n\nfig9.update_layout(\n                  barmode=\"stack\",\n                  template=\"plotly_dark\",  \n                  autosize=True,\n                  width=760,height=550,\n                  title_text=\"Business Intelligence Tools\",\n                  titlefont=dict(size=20),\n                  font=dict(size=9,color=\"white\"),\n                  legend=dict(orientation=\"h\",yanchor=\"bottom\",y=1.02,xanchor=\"right\",x=1)\n                )\n\nfig9.show()\n","b7fdf729":"#Useed on Regular Basis \n\nml_tool=survey.iloc[:,210:219].count()\n\nml_tool_label=list(survey.iloc[:,210:219].mode().iloc[0])\n\n\n#Familiar\n\nml_tool22=survey.iloc[:,344:353].count()\n\nml_tool_label22=list(survey.iloc[:,344:353].mode().iloc[0])\n\n\n\n\n\n# figure component\nfig10 = go.Figure(data=[\n                        go.Pie(\n                                values = ml_tool,\n                                labels = ml_tool_label,\n                                domain=dict(x=[0, 0.4]),\n                             textinfo='label+percent',\n                             insidetextorientation='radial',\n                            title=''\n                               ),\n\n                        go.Scatter(name=\"Getting Familiar in 2022\",\n                               y=ml_tool22, \n                               x=ml_tool_label22,\n                                xaxis='x2', yaxis='y2'\n                               )\n                        ],  layout = go.Layout(xaxis2 = dict(domain = [0.50, 1]),yaxis2 = dict(anchor = 'free',position = 0.5))\n                )\n\n\nfig10.update_layout(\n                  barmode=\"stack\",\n                  template=\"plotly_dark\",  \n                  autosize=True,\n                  width=790,height=500,\n                  title_text=\"Tools Managing Machine Learning Experiments\",\n                  titlefont=dict(size=20),\n                  font=dict(size=8,color=\"white\"),\n                )\n            \n\n\n    \nfig10.show()\n","86e5e3a5":"## 5. Automate Machine Learning Tools\n","ffb5274b":"## 2. Cloud Computing Platforms & Products\n","93b2c79b":"* *Tensor Board * is top choice in **Tools Managing Machine Learning Experiments** and will go on to be till next 2 year.","d5638c45":"## 6. Business Intelligence Tools\n# ","167d5a2d":"* Most of the Most of the Professional Respondent observe to have $0 spending on machine learning and\/or cloud computing services.\n\n* Around 47% of Data Scientist respondent have 1k-10k$ spending on machine learning and\/or cloud computing services.\n\n* And around 26% of Data Scientist respondent have 100k$-more spending on machine learning and\/or cloud computing services.\n","c2852450":"* *Tableau* is regularly used **Business Intelligence Tools** followed by *Microsoft Power BI*, making these two toping other **Business Intelligence Tools** .\n\n* And *Microsoft Power BI* most oftenly used **Business Intelligence Tools**  then comes *Tableau*.\n\n* But *Google Data Studio* seems to enter the scene of **Business Intelligence Tools** will give tough competion *Microsoft Power BI* and *Tableau* in next 2 year.\n","461079dd":"## 3. Machine Learning Products\n","ca61a95c":"*Cloud Computing Platform*\n\n* *Amazon Web Services (AWS)* is in regular use followed by *Google Cloud Platform (GCP)* and *Microsoft Azure*.\n\n* It is observed that the large number of respondent are going to get familiar ,in year 2022, with *Amazon Web Services (AWS)* but also *Google Cloud Platform (GCP)* is nearly gaining on AWS in getting familiar in next 2 years.\n\n\n*Cloud Computing Product*\n\n* *Google Cloud Compute Engine* is in regular use with *AWS Lambda* at second followed by *Azure Cloud Services*.\n\n* In the \"getting familiar in next 2 years\", *Google Cloud Functions* is most favoured Cloud Computing Product followed by *Microsoft Azure Container*.\n","cc115b8b":"### Before going into the EDA of \"Growth of Products, Platforms & Tools in 2022.\", \n### we will going to see the usual routine of Respondent's gender, country of residence and professional role\/status they hold.\n## i. Gender Diversity in this survey","f9e42c52":"* Major Respondent are from India.\n\n* And U.S.A Respondent are second major portion in this Survey.","045a3ecd":"## Conclusion:\n\n* In Cloud Computing Platform & Products *Amazon* and *Google Cloud Platform (GCP)* are doing best in \"getting familiar in next 2 year\" category.\n\n* In Machine Learning Products Google cloud product seems to be topping untill 2022.\n\n* Big Data Product like *MySQL* and *MongoDB* seems to be 2022 most opting product.\n\n* In 2022 the Automate Machine Learning Tool which will get attention most might be Auto-Sklearn.\n\n* As Business Intelligence Tool *Google Data Studio* might come as new rival for *Microsoft Power BI* and *Tableau*.\n\n* For the Tool Managing Machine Learning Experiments, *TensorBoard* will be still going to be 2022 choice with no major competition.","ebb33f4d":"* From the piechart it can be seen that Male Gender is the major portion of respondent in this survey constituting 78.80%.\n\n* Women as second large, constituting upto 19.36%.","24183f11":"**Looks like Respondent are likely to going to opt for Machine Learning products till 2022 in comparison to to their regualr use, which means growth of Machine Product is promising**\n\n* In \"regular use\" *Google Cloud AI Platform\/Google Cloud ML Engine* is top choice.\n\n* And with \"getting familiar till 2022\", *Google Cloud AI Platform\/Google Cloud ML Engine* followed by *Goggle Cloud Vision AI * and *Google Cloud NAtural Language*. Making Google Cloud Machine learning product top choice in next two year.\n","8f31fcf8":"* It shows that Students are major respondent in this survey.\n \n * Data Scientist comes second major repondent.\n \n * And Software Engineer as third major respondent.","718eb79b":"## ii.  Country of Residence","eb924a67":"****In this EDA(Exploratory Data Analysis) we are going to explore how respodent of \"2020 Kaggle Machine Learning & Data Science Survey\" are going to get familiar with the Products, Platforms & Tools ,which are questioned in this survey, in the next 2 years i.e. by 2022.****\n","6b02cfbc":"## 7. Tools Managing Machine Learning Experiments\n","004a72d3":"# Cloud Computing, Machine Learning and Data Science;Products, Platforms & Tools going to be used in 2022.\n","ee7edb69":"## Let Us see EDA of \"Growth of Products, Platforms & Tools in 2022\"\n## 1. Compensation and Spending \n\n\n\n\n**We are going to analyse the yearly compensation (approximate $USD) of the survey respondent according to their Professional Role\/Title.**\n","1fd5651a":"* Looking at the stacked bar chart it can be concluded that *MySQL* gets selected by respondent in large number as **Big Data Product**.\n\n* But *PostgresSQL* is \"Used Most Often\" surpassing both *MySQL* and *Microsoft Azure Data Lake Storage*.\n\n\n* In the category of \"getting familiar till 2022\" *MySQL* tops followed by *MongoDB*.","300d51ad":"## iii. Professional Role\/Status of Respondent\n","199a8b54":"* Most of the Professional Respondent observe to have USD 0-999 USD yearly compensation.\n\n* Around 40% of Data Scientist and Data Engineer have yearly compensation 125K-149K$.\n\n* And around 45% of Product Manger have yearly compensation 125K-149K$.\n","d830299e":"## 4. Big Data Product\n","4c641d76":"<img src=\"https:\/\/images.pexels.com\/photos\/3183153\/pexels-photo-3183153.jpeg?cs=srgb&dl=pexels-fauxels-3183153.jpg&fm=jpg\">\n\n\n\n-Photo by Lukas from Pexels","fa80890c":"* Automate Machine Learning Tools are not used in most oftenly but respondent looks intresetd in getting familiar with them till 2022.\n\n* *Auto-Sklearn* is next choice of Automate Machine Learning Tools to get to know till 2022 followed by *Google Cloud AutoML* and *Auto-Keras*.\n"}}