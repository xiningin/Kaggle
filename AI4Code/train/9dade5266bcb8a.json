{"cell_type":{"ea211b53":"code","60b17825":"code","3d4d52fe":"code","ceeb320c":"code","806b684a":"code","d40a1ba1":"code","06cb74b2":"code","0828fd71":"code","65250fd0":"code","4b21896b":"code","f483ae7d":"code","fff01267":"code","0ef99cc8":"code","93ffe43d":"code","65792c1b":"code","803fcda2":"code","87db841b":"code","ff853d7f":"code","1c1e5b59":"code","b7e1e429":"code","aa3cc9b1":"code","f0ee78ac":"code","ddac89ff":"code","190ccda2":"code","f70faac5":"code","08f39419":"code","e0e9a6d6":"code","6aa2115a":"code","f0255f6a":"markdown","06020ba8":"markdown"},"source":{"ea211b53":"import pandas as pd\nimport numpy as np\nimport os\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.cluster import KMeans\nimport seaborn as sns\nfrom yellowbrick.cluster import SilhouetteVisualizer\nfrom sklearn import metrics\nfrom sklearn.metrics import silhouette_score\nimport matplotlib.pyplot as plt","60b17825":"np.set_printoptions(precision = 3,          # Display upto 3 decimal places\n                    threshold=np.inf        # Display full array\n                    )","3d4d52fe":"df = pd.read_csv(\"..\/input\/fundamentals.csv\")","ceeb320c":"df.columns = df.columns.str.replace(' ', '_')\ndf.columns = df.columns.str.replace(',', '_')\ndf.columns = df.columns.str.replace('\/', '_')\ndf.columns = df.columns.str.replace('___', '_')\ndf.columns = df.columns.str.replace('__', '_')\ndf.columns = df.columns.str.replace('&', '_and_')\ndf.columns","806b684a":"df.drop(columns = ['Unnamed:_0'], inplace = True)","d40a1ba1":"tkrsym = df.groupby(['Ticker_Symbol']).mean()\ntkrsym.head()","06cb74b2":"df.dropna()","0828fd71":"df.describe()","65250fd0":"df[[\"Accounts_Payable\", \"Accounts_Receivable\",  \"Total_Current_Assets\", \"Total_Current_Liabilities\", \"Total_Equity\", \"Total_Liabilities\", \"Total_Liabilities__and__Equity\", \"Total_Revenue\", \"Treasury_Stock\" \n]].describe().plot(kind='line')","4b21896b":"dataset=pd.read_csv(\"..\/input\/prices.csv\")","f483ae7d":"dataset=dataset.sample(5000)","fff01267":"dataset.describe()","0ef99cc8":"x=dataset[[\"high\",\"low\",\"open\",\"volume\"]].values\ny=dataset[\"close\"].values\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state=0)\nregressor = LinearRegression()","93ffe43d":"regressor.fit(x_train,y_train)","65792c1b":"print(regressor.coef_)","803fcda2":"print(regressor.intercept_)","87db841b":"predicted=regressor.predict(x_test)\nprint(predicted)","ff853d7f":"dframe = pd.DataFrame({'Actual':y_test.flatten(),'Predicted':predicted.flatten()})\ndframe.head(25)","1c1e5b59":"graph = dframe.head(25)\ngraph.plot(kind='bar')","b7e1e429":"dframe.describe()","aa3cc9b1":"sns.barplot( data=dframe)\nplt.show()","f0ee78ac":"sns.jointplot(dframe.Actual, dframe.Predicted, kind = 'reg')","ddac89ff":"clf = KMeans(n_clusters = 2)\nclf.fit(x_train)\nvisualizer = SilhouetteVisualizer(clf, colors='yellowbrick')\nvisualizer.fit(x_train)       \nvisualizer.show()    ","190ccda2":"from yellowbrick.cluster import InterclusterDistance\nvisualizer = InterclusterDistance(clf)\nvisualizer.fit(x_train)        # Fit the data to the visualizer\nvisualizer.show()    ","f70faac5":"sns.scatterplot(dframe.Actual, dframe.Predicted, )","08f39419":"dfsec=pd.read_csv(\"..\/input\/securities.csv\")","e0e9a6d6":"df.columns","6aa2115a":"dfsec.columns = dfsec.columns.str.replace(' ', '_')\ndfsec.columns = dfsec.columns.str.replace(',', '_')\ndfsec.columns = dfsec.columns.str.replace('\/', '_')\ndfsec.columns = dfsec.columns.str.replace('___', '_')\ndfsec.columns = dfsec.columns.str.replace('__', '_')\ndfsec.columns = dfsec.columns.str.replace('&', '_and_')\ndfsec.columns","f0255f6a":" # ****Now let us compare the Actual and Predicted values !****","06020ba8":"# See how accurate the predictions ..!"}}