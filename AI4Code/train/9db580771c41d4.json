{"cell_type":{"83d77d02":"code","4a864908":"code","d5c566fe":"code","211754fd":"code","51fabcea":"code","3fad1a89":"code","24683b5d":"code","9bfd6884":"code","090c28ca":"code","ac616b44":"code","070a1c81":"code","dcc3263c":"markdown","ed8a7865":"markdown"},"source":{"83d77d02":"import os\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.datasets import fetch_20newsgroups\nfrom sklearn.datasets.base import get_data_home\n\nfrom sklearn.cluster import KMeans\n\nfrom sklearn.feature_extraction.text import TfidfVectorizer","4a864908":"# for reproducible results\nnp.random.seed(777)","d5c566fe":"data_home = get_data_home()\ntwenty_home = os.path.join(data_home, \"20news_home\")\n\nif not os.path.exists(data_home):\n    os.makedirs(data_home)\n    \nif not os.path.exists(twenty_home):\n    os.makedirs(twenty_home)\n    \n# !cp ..\/input\/20-newsgroup-sklearn\/20news-bydate_py3* \/tmp\/scikit_learn_data\n!cp ..\/input\/20news-bydate_py3* \/tmp\/scikit_learn_data","211754fd":"# http:\/\/qwone.com\/~jason\/20Newsgroups\/\ndataset = fetch_20newsgroups(subset='all', shuffle=True, download_if_missing=False)\n\ntexts = dataset.data # Extract text\ntarget = dataset.target # Extract target","51fabcea":"vectorizer = TfidfVectorizer(stop_words='english')\nX = vectorizer.fit_transform(texts)","3fad1a89":"number_of_clusters = 20\n\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.cluster.KMeans.html\nmodel = KMeans(n_clusters=number_of_clusters, \n               init='k-means++', \n               max_iter=100, # Maximum number of iterations of the k-means algorithm for a single run.\n               n_init=1)  # Number of time the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia.\n\nmodel.fit(X)","24683b5d":"order_centroids = model.cluster_centers_.argsort()[:, ::-1]\nterms = vectorizer.get_feature_names()","9bfd6884":"for i in range(number_of_clusters):\n    print(\"Cluster %d:\" % i),\n    for ind in order_centroids[i, :10]:\n        print(' %s' % terms[ind])","090c28ca":"print (texts[400])","ac616b44":"X = vectorizer.transform([texts[400]])\n\ncluster = model.predict(X)[0]\n\nprint(\"Text belongs to cluster number {0}\".format(cluster))","070a1c81":"for ind in order_centroids[cluster, :10]:\n    print(' %s' % terms[ind])","dcc3263c":"Inspired from https:\/\/towardsdatascience.com\/applying-machine-learning-to-classify-an-unsupervised-text-document-e7bb6265f52","ed8a7865":"This notebook uses Unsupervised Learning to cluster the texts from the \"20 Newsgroup\" dataset."}}