{"cell_type":{"a12da8b6":"code","d358d6cb":"code","100c9c29":"code","f5cc40a4":"code","16dbcd1d":"code","dbf5c0e3":"code","0e659a9d":"code","5d6d0523":"code","c215616c":"code","82053637":"code","446a8179":"code","9723a06a":"code","aff2cbf2":"code","a082edcd":"code","bdac9bcc":"code","a0435708":"code","49993911":"code","f0932b77":"code","659bb3dd":"code","edcd6fe0":"code","20a6bba3":"code","1bd60a8c":"code","3ca7004b":"code","ea6c1a94":"code","d9fbfb8f":"code","9b08f556":"code","acca947f":"code","433282b5":"code","7e7e90e4":"code","0c549f14":"code","50bf3b8d":"code","c2874aee":"code","cf5915d4":"code","ea7bb61f":"code","45ccc717":"code","c88201f4":"markdown","f18743ab":"markdown","5f6a02a4":"markdown","b774e18d":"markdown","aa4ba92c":"markdown","c1748f38":"markdown","4c13b3b7":"markdown","46ae0b02":"markdown","78169ab9":"markdown","9d5843b8":"markdown","d6f3022b":"markdown","0aa29f79":"markdown","d67203f7":"markdown","eacefec2":"markdown","d011f9a3":"markdown","0e48370c":"markdown"},"source":{"a12da8b6":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\npd.set_option('display.max_rows',20000, 'display.max_columns',100)\nimport plotly.express as px\nimport warnings\nwarnings.filterwarnings('ignore')","d358d6cb":"pokemon = pd.read_csv(\"..\/input\/complete-pokemon-dataset-updated-090420\/pokedex_(Update.04.20).csv\")\npokemon.info()","100c9c29":"print(pokemon['generation'].nunique(),pokemon['generation'].unique())\nprint(pokemon['is_sub_legendary'].nunique(),pokemon['is_sub_legendary'].unique())\nprint(pokemon['is_legendary'].nunique(),pokemon['is_legendary'].unique())\nprint(pokemon['is_mythical'].nunique(),pokemon['is_mythical'].unique())\nprint(pokemon['species'].nunique(),pokemon['species'].unique())\nprint(pokemon['type_number'].nunique(),pokemon['type_number'].unique())\nprint(pokemon['type_1'].nunique(),pokemon['type_1'].unique())\nprint(pokemon['type_2'].nunique(),pokemon['type_2'].unique())\nprint(pokemon['height_m'].nunique(),pokemon['height_m'].unique())\nprint(pokemon['weight_kg'].nunique(),pokemon['weight_kg'].unique())\nprint(pokemon['abilities_number'].nunique(),pokemon['abilities_number'].unique())\nprint(pokemon['ability_1'].nunique(),pokemon['ability_1'].unique())\nprint(pokemon['ability_2'].nunique(),pokemon['ability_2'].unique())\nprint(pokemon['ability_hidden'].nunique(),pokemon['ability_hidden'].unique())","f5cc40a4":"print(pokemon[pokemon['species'].isnull()].index.tolist())\nprint(pokemon[pokemon['type_1'].isnull()].index.tolist())\nprint(pokemon[pokemon['height_m'].isnull()].index.tolist())\nprint(pokemon[pokemon['weight_kg'].isnull()].index.tolist())","16dbcd1d":"pokemon.at[240,'height_m']= 2.01\npokemon.at[240,'weight_kg']= 80.0\npokemon.at[240,['species','type_1','type_1']] = ['Royal Pok\u00e9mon','Psychic','Water']\npokemon.at[1027,'weight_kg']= 950.0\npokemon = pokemon.drop(['Unnamed: 0','german_name','japanese_name'],axis=1)","dbf5c0e3":"#Top 50 Pokemon with their heights in meters\npokemon_height = pokemon.groupby('name')['height_m'].sum().reset_index().sort_values('height_m',ascending =False)\nfig = px.bar(pokemon_height[:50], y='height_m', x='name', color='height_m', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their height')\nfig.show()","0e659a9d":"#Top 50 Pokemon with their weights\npokemon_weight = pokemon.groupby('name')['weight_kg'].sum().reset_index().sort_values('weight_kg',ascending =False)\nfig = px.bar(pokemon_weight[:50], y='weight_kg', x='name', color='weight_kg', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their weights')\nfig.show()","5d6d0523":"#Diffrent Species of Pokemon with their Count\nfig = px.treemap(pokemon, path=['species'],hover_data=['species'],color='species')\nfig.update_layout(\n    title='Statewise Urban Population and their Hospital Facilities for Covid19')\nfig.update_layout(\n    title='Diffrent Species of Pokemon with their Count')\nfig.show()","c215616c":"#Diffrent Type of Pokemon with their Name\nfig = px.treemap(pokemon, path=['type_1','name'],hover_data=['generation','type_1','is_sub_legendary','is_legendary','height_m','weight_kg'],color='type_1')\nfig.update_layout(\n    title='Diffrent Type of Pokemon with their Name')\nfig.show()","82053637":"#Sub Legendary Pokemon with their Total Points\npokemon_sub_legendary = pokemon.groupby('name')['is_sub_legendary','total_points'].sum().reset_index().sort_values('total_points',ascending =False)\npokemon_sub_legendary= pokemon_sub_legendary[pokemon_sub_legendary['is_sub_legendary']>0]\nfig = px.bar(pokemon_sub_legendary, y='total_points', x='name', color='total_points', height=600)\nfig.update_layout(\n    title='Sub Legendary Pokemon with their Total Points')\nfig.show()","446a8179":"#Legendary Pokemon with their Total Points\npokemon_legendary = pokemon.groupby('name')['is_legendary','total_points'].sum().reset_index().sort_values('total_points',ascending =False)\npokemon_legendary= pokemon_legendary[pokemon_legendary['is_legendary']>0]\nfig = px.bar(pokemon_legendary, y='total_points', x='name', color='total_points', height=600)\nfig.update_layout(\n    title='Legendary Pokemon with their Total Points')\nfig.show()","9723a06a":"#Mythical Pokemon with their Total Points\npokemon_legendary = pokemon.groupby('name')['is_mythical','total_points'].sum().reset_index().sort_values('total_points',ascending =False)\npokemon_legendary= pokemon_legendary[pokemon_legendary['is_mythical']>0]\nfig = px.bar(pokemon_legendary, y='total_points', x='name', color='total_points', height=600)\nfig.update_layout(\n    title='Mythical Pokemon with their Total Points')\nfig.show()","aff2cbf2":"#Pokemon with Different Type of Ability\nfig = px.histogram(pokemon, x=\"abilities_number\",color ='abilities_number')\nfig.update_layout(\n    title='Pokemon with Different Type of Ability')\nfig.show()","a082edcd":"#Ability of Pokemon\npokemon[['ability_2','ability_hidden']] = pokemon[['ability_2','ability_hidden']].fillna(value='NO INFO')\npokemon_ablity = pokemon.groupby(['name','abilities_number'])['ability_1','ability_2','ability_hidden'].sum().reset_index().sort_values('name',ascending =False)\npokemon_ablity\n#Pokemon with their Abilities\nfig = px.scatter_3d(pokemon_ablity, x=\"ability_1\", y=\"ability_2\", z=\"ability_hidden\", color=\"abilities_number\", size=\"abilities_number\", hover_name=\"name\",\n                  symbol=\"abilities_number\")\nfig.update_layout(coloraxis_colorbar=dict(\n    title=\"Ability of Pokemon\",\n    tickvals=[1,2,3],\n    ticktext=[\"ability_1\",\"ability_2\",\"ability_hidden\"],\n    lenmode=\"pixels\", len=150,\n))\nfig.update_layout(\n    title='Pokemon with Different Type of Ability')\nfig.show()","bdac9bcc":"pokemon_total_points = pokemon.groupby('name')['total_points'].sum().reset_index().sort_values('total_points',ascending =False)\nfig = px.bar(pokemon_total_points[:50], y='total_points', x='name', color='total_points', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their total_points')\nfig.show()","a0435708":"fig = px.box(pokemon_total_points, y=\"total_points\")\nfig.update_layout(\n    title='Range of Pokemon with their Total Points')\nfig.show()","49993911":"#Top 50 Pokemon with their HP\npokemon_HP = pokemon.groupby('name')['hp'].sum().reset_index().sort_values('hp',ascending =False)\nfig = px.bar(pokemon_HP[:50], y='hp', x='name', color='hp', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their HP')\nfig.show()","f0932b77":"fig = px.box(pokemon_HP, y=\"hp\")\nfig.update_layout(\n    title='Range of Pokemon with their HP')\nfig.show()","659bb3dd":"pokemon_attack = pokemon.groupby('name')['attack'].sum().reset_index().sort_values('attack',ascending =False)\nfig = px.bar(pokemon_attack[:50], y='attack', x='name', color='attack', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their Attack')\nfig.show()","edcd6fe0":"fig = px.box(pokemon_attack, y=\"attack\")\nfig.update_layout(\n    title='Range of Pokemon with their Attack')\nfig.show()","20a6bba3":"pokemon_defense = pokemon.groupby('name')['defense'].sum().reset_index().sort_values('defense',ascending =False)\nfig = px.bar(pokemon_defense[:50], y='defense', x='name', color='defense', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their defense')\nfig.show()","1bd60a8c":"fig = px.box(pokemon_defense, y=\"defense\")\nfig.update_layout(\n    title='Range of Pokemon with their Defense')\nfig.show()","3ca7004b":"pokemon_sp_attack = pokemon.groupby('name')['sp_attack'].sum().reset_index().sort_values('sp_attack',ascending =False)\nfig = px.bar(pokemon_sp_attack[:50], y='sp_attack', x='name', color='sp_attack', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their sp_attack')\nfig.show()","ea6c1a94":"fig = px.box(pokemon_sp_attack, y=\"sp_attack\")\nfig.update_layout(\n    title='Range of Pokemon with their SP Attack')\nfig.show()","d9fbfb8f":"pokemon_sp_defense = pokemon.groupby('name')['sp_defense'].sum().reset_index().sort_values('sp_defense',ascending =False)\nfig = px.bar(pokemon_sp_defense[:50], y='sp_defense', x='name', color='sp_defense', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their sp_defense')\nfig.show()","9b08f556":"fig = px.box(pokemon_sp_defense, y=\"sp_defense\")\nfig.update_layout(\n    title='Range of Pokemon with their SP Defense')\nfig.show()","acca947f":"pokemon_speed = pokemon.groupby('name')['speed'].sum().reset_index().sort_values('speed',ascending =False)\nfig = px.bar(pokemon_speed[:50], y='speed', x='name', color='speed', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their speed')\nfig.show()","433282b5":"fig = px.box(pokemon_speed, y=\"speed\")\nfig.update_layout(\n    title='Range of Pokemon with their Speed')\nfig.show()","7e7e90e4":"pokemon_catch_rate = pokemon.groupby('name')['catch_rate'].sum().reset_index().sort_values('catch_rate',ascending =False)\nfig = px.bar(pokemon_catch_rate[:100], y='catch_rate', x='name', color='catch_rate', height=600)\nfig.update_layout(\n    title='Top 100 Pokemon with their Catch Rate')\nfig.show()","0c549f14":"fig = px.box(pokemon_catch_rate, y=\"catch_rate\")\nfig.update_layout(\n    title='Range of Pokemon with their Catch Rate')\nfig.show()","50bf3b8d":"pokemon_base_friendship = pokemon.groupby('name')['base_friendship'].sum().reset_index().sort_values('base_friendship',ascending =False)\nfig = px.bar(pokemon_base_friendship[:50], y='base_friendship', x='name', color='base_friendship', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their Base Friendship')\nfig.show()","c2874aee":"fig = px.box(pokemon_base_friendship, y=\"base_friendship\")\nfig.update_layout(\n    title='Range of Pokemon with their base_friendship')\nfig.show()","cf5915d4":"pokemon_base_experience = pokemon.groupby('name')['base_experience'].sum().reset_index().sort_values('base_experience',ascending =False)\nfig = px.bar(pokemon_base_experience[:50], y='base_experience', x='name', color='base_experience', height=600)\nfig.update_layout(\n    title='Top 50 Pokemon with their Base Experience')\nfig.show()","ea7bb61f":"fig = px.box(pokemon_base_experience, y=\"base_experience\")\nfig.update_layout(\n    title='Range of Pokemon with their Base Experience')\nfig.show()","45ccc717":"#Different Type of Growth Rate\nfig = px.histogram(pokemon.dropna(), x=\"growth_rate\",color ='growth_rate')\nfig.update_layout(\n    title='Different Type of Growth Rate')\nfig.show()","c88201f4":"## Library","f18743ab":"**Total Points**","5f6a02a4":"**HP**","b774e18d":"## Pokedex Data","aa4ba92c":"## Training","c1748f38":"**Base Experience**","4c13b3b7":"## If You Liked this Much Kindly Upvote the Kernel","46ae0b02":"**Growth Rate**","78169ab9":"**Attack**","9d5843b8":"**Catch Rate**","d6f3022b":"**SP Attack**","0aa29f79":"## STATS OF POKEMON","d67203f7":"**Speed**","eacefec2":"**Defense**","d011f9a3":"**SP Defense**","0e48370c":"**Base Friendship**"}}