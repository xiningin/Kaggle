{"cell_type":{"16684805":"code","40958dfb":"code","ab84906a":"code","eff6e741":"code","9cfff590":"code","e34ad006":"code","6a98b25d":"code","47d3c69c":"code","de826e7c":"code","1b41e832":"code","4256ab65":"code","004a170a":"code","7e0ccb85":"code","2ce563f2":"code","214207ac":"code","31951aed":"code","7bbeb902":"code","43058080":"code","835e43e2":"code","1f869d29":"code","65b93acd":"code","87301727":"markdown","f01b5a3d":"markdown","36b4b035":"markdown","4a50f280":"markdown","fd8131bc":"markdown","a8f79772":"markdown","bd5260bf":"markdown","b0ab77d2":"markdown","7d9ba759":"markdown","11dc8ea2":"markdown","ae37b65c":"markdown","88a3d1e7":"markdown","689b37ba":"markdown"},"source":{"16684805":"import numpy as np #\nimport pandas as pd\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objects as go\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport os","40958dfb":"df = pd.read_csv(\"..\/input\/world-happiness-report-2019.csv\") # Import Data\ndf.rename(index=str, columns={\"Country (region)\": \"Country\"}, inplace = True) # To make it easier to write code, we've changed the Country (region) column to Country\ndf.rename(index=str, columns={\"Healthy life\\nexpectancy\": \"Healthy life expectancy\"}, inplace = True) # To make it easier to write code, we've changed Healthy life\\nexpectancy column to Healthy life expectancy","ab84906a":"trace1 = go.Scatter(\n    x = df.Ladder,\n    y = df[\"Positive affect\"],\n    mode = \"lines\",\n    name = \"Positive Affect\",\n    marker = dict(color = 'rgb(230, 96, 38)'),\n    text = df.Country\n)\n\ntrace2 = go.Scatter(\n    x = df.Ladder,\n    y = df.Freedom,\n    mode = \"lines\",\n    name = \"Freedom\",\n    marker = dict(color = 'rgb(53, 137, 183)'),\n    text = df.Country\n)\n\ndata = [trace1, trace2]\n\nlayout = dict(\n    title = \"Freedom vs Positive Affect\",\n    xaxis = dict(title = \"Ladder\"),\n    yaxis = dict(title = \"Values\")\n)\n\nfig = dict(data = data, layout = layout)\niplot(fig)","eff6e741":"trace1 = go.Scatter(\n    x = df.Ladder,\n    y = df[\"Social support\"],\n    mode = \"markers\",\n    name = \"Social Support\",\n    marker = dict(color = \"rgb(41, 192, 92)\"),\n    text = df.Country\n)\ntrace2 = go.Scatter(\n    x = df.Ladder,\n    y = df[\"Healthy life expectancy\"],\n    mode = \"markers\",\n    name = \"Healthy Life Expectancy\",\n    marker = dict(color = \"rgb(41, 192, 207)\"),\n    text = df.Country\n)\n\ndata = [trace1, trace2]\n\nlayout = dict(\n    title = go.layout.Title(\n        text='Social Support vs Healthy life expectancy',\n        font = dict(color = \"red\", size = 20)),\n    xaxis = dict(title = \"Ladder\"),\n    yaxis = dict(title = \"Values\")\n)\n\nfig = dict(data = data, layout = layout)\niplot(fig)","9cfff590":"df.head()","e34ad006":"first_5 = df.iloc[:5]\n\ntrace1 = go.Bar(\n    x = first_5.Country,\n    y = first_5[\"Negative affect\"],\n    name = \"Negative Affect\",\n    marker = dict(color = 'rgb(247, 136, 136)', line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n    text = \"Negative Affect\"\n)\ntrace2 = go.Bar(\n    x = first_5.Country,\n    y = first_5.Corruption,\n    name = \"Corruption\",\n    marker = dict(color = \"rgb(83, 239, 245)\", line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n    text = \"Corruption\"\n)\n\ndata = [trace1,trace2]\n\nlayout = go.Layout(\n    barmode = \"group\",\n    title = go.layout.Title(\n        text = \"Negative Affect vs Corruption\",\n        font = dict(color = \"red\", size = 20)\n    )\n)\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","6a98b25d":"first_5 = df.iloc[:5]\n# Negative affect and Corruption\ntrace1 = {\n    'x' : first_5.Country,\n    'y' : first_5[\"Negative affect\"],\n    'name' : \"Negative Affect\",\n    'marker' : dict(color = 'rgba(255, 255, 128, 0.5)', line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n    'text' : \"Negative Affect\",\n    'type' : 'bar'\n}\ntrace2 = {\n    'x' : first_5.Country,\n    'y' : first_5.Corruption,\n    'name' : \"Corruption\",\n    'marker' : dict(color = \"rgba(255, 174, 255, 0.5)\", line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n    'text' : \"Corruption\",\n    'type' : 'bar'\n}\ndata = [trace1, trace2]\n\nlayout = {\n    'title' : go.layout.Title(\n    text = \"Negative Affect vs Corruption\",\n    font = dict(color = \"red\", size = 20)\n    ),\n    'barmode' : 'relative'\n}\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","47d3c69c":"df.head()","de826e7c":"first_5 = df.iloc[:5]\nvalues = first_5[\"Social support\"]\nlabels = first_5.Country","1b41e832":"fig = {\n    'data' : [\n        {\n            'values' : values,\n            'labels' : labels,\n            \"domain\": {\"x\": [0, .5]},\n            'name' : \"Social Support\",\n            'hoverinfo' : 'label+percent+name',\n            'hole' : .3,\n            'type' : 'pie'\n        },],\n    'layout' : {\n        \"annotations\": [\n            { \"font\": { \"size\": 20, 'color':'red'},\n              \"showarrow\": False,\n              \"text\": \"Social Supports\",\n                \"x\": 0.19,\n                \"y\": 1.15\n            },\n        ]\n    }\n}\n\niplot(fig)","4256ab65":"df = df[np.isfinite(df['Healthy life expectancy'])]\ndf = df[np.isfinite(df['Social support'])]\n\nfirst_25 = df.iloc[:25]\nsocial_support_size = [each for each in first_25[\"Social support\"]]\nhealthy_color = [each for each in first_25[\"Healthy life expectancy\"]]\n\ndata = [\n    {\n        'x' : first_25.Ladder,\n        'y' : first_25[\"Positive affect\"],\n        'mode' : 'markers',\n        'marker' : {\n            'color' : healthy_color,\n            'size' : social_support_size,\n            'showscale': True\n        },\n        'text' : df.Country\n    }\n]\niplot(data)","004a170a":"df.head()","7e0ccb85":"first_50 = df\n\ntrace1 = go.Histogram(\n    x = first_50[\"Freedom\"],\n    opacity = 0.5,\n    name = \"Freedom\",\n    marker = dict(color = 'rgba(12, 50, 196, 0.6)')\n)\ntrace2 = go.Histogram(\n    x = first_50[\"Generosity\"],\n    opacity = 0.5,\n    name = \"Generosity\",\n    marker = dict(color='rgba(171, 50, 96, 0.6)')\n)\ndata = [trace1, trace2]\n\nlayout = dict(\n    title = go.layout.Title(\n        text = \"Negative Affect vs Corruption\",\n        font = dict(size = 20,color = \"red\")\n    )\n)\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","2ce563f2":"trace1 = go.Box(\n    y = df[\"Social support\"],\n    name = \"Soccial Support\",\n    marker = dict(color = \"rgb(56, 112, 255)\")\n)\ntrace2 = go.Box(\n    y = df[\"Healthy life expectancy\"],\n    name = \"Healthy Life Expectancy\",\n    marker = dict(color = \"rgb(170, 56, 252)\")\n)\n\nlayout = dict(\n    title = go.layout.Title(\n        text = \"Soccial Support vs. Healthy Life Expectancy\",\n        font = dict(color = \"red\",size = 20)\n    )\n)\n\ndata = [trace1,trace2]\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","214207ac":"df.head()","31951aed":"import plotly.figure_factory as ff\ndataframe = df.loc[:,[\"Social support\",\"Positive affect\",\"Healthy life expectancy\"]]\ndataframe[\"index\"] = np.arange(1,len(dataframe)+1)\nfig = ff.create_scatterplotmatrix(dataframe,diag = \"box\", index = 'index',colormap = \"Bluered\",colormap_type = \"cat\",height = 700, width = 700)\niplot(fig)","7bbeb902":"df.head()","43058080":"trace1 = go.Scatter(\n    x = df.Ladder,\n    y = df.Freedom,\n    name = \"Freedom\",\n    marker = dict(color = \"rgb(232, 46, 127)\")\n)\ntrace2 = go.Scatter(\n    x = df.Ladder,\n    y = df[\"Positive affect\"],\n    name = \"Positive Affect\",\n    marker = dict(color = \"rgb(36, 139, 242)\"),\n    xaxis = \"x2\",\n    yaxis = \"y2\"\n)\ndata = [trace1,trace2]\n\nlayout = go.Layout(\n    xaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='y2',        \n    ),\n    yaxis2=dict(\n        domain=[0.6, 0.95],\n        anchor='x2',\n    ),\n    title = go.layout.Title(\n        text = \"Freedom vs Positive Affect\",\n        font = dict(color = \"red\",size = 20)\n    )\n)\n\nfig = go.Figure(data = data,layout = layout)\niplot(fig)","835e43e2":"first_100 = df[:100]\ncolors = [each for each in first_100[\"Freedom\"]]\n\ntrace1 = go.Scatter3d(\n    x = first_100[\"Social support\"],\n    y = first_100[\"Positive affect\"],\n    z = first_100[\"Healthy life expectancy\"],\n    mode = \"markers\",\n    marker = dict(color = colors,size = 5)\n)\n\ndata = [trace1]\niplot(data)","1f869d29":"trace1 = go.Scatter(\n    x=df[\"Ladder\"],\n    y=df[\"Social support\"],\n    name = \"research\"\n)\ntrace2 = go.Scatter(\n    x=df[\"Ladder\"],\n    y=df[\"Positive affect\"],\n    xaxis='x2',\n    yaxis='y2',\n    name = \"citations\"\n)\ntrace3 = go.Scatter(\n    x=df[\"Ladder\"],\n    y=df[\"Freedom\"],\n    xaxis='x3',\n    yaxis='y3',\n    name = \"income\"\n)\ntrace4 = go.Scatter(\n    x=df[\"Ladder\"],\n    y=df[\"Healthy life expectancy\"],\n    xaxis='x4',\n    yaxis='y4',\n    name = \"total_score\"\n)\ndata = [trace1,trace2,trace3,trace4]\n\nlayout = go.Layout(\n    xaxis=dict(\n        domain=[0, 0.45]\n    ),\n    yaxis=dict(\n        domain=[0, 0.45]\n    ),\n    xaxis2=dict(\n        domain=[0.55, 1]\n    ),\n    xaxis3=dict(\n        domain=[0, 0.45],\n        anchor='y3'\n    ),\n    xaxis4=dict(\n        domain=[0.55, 1],\n        anchor='y4'\n    ),\n    yaxis2=dict(\n        domain=[0, 0.45],\n        anchor='x2'\n    ),\n    yaxis3=dict(\n        domain=[0.55, 1]\n    ),\n    yaxis4=dict(\n        domain=[0.55, 1],\n        anchor='x4'\n    ),\n    title = 'Research, citation, income and total score VS World Rank of Universities'\n)\nfig = go.Figure(data=data, layout=layout)\niplot(fig)","65b93acd":"plt.subplots(figsize=(8,8))\nwordcloud = WordCloud(\n    background_color='white',\n    width=512,\n    height=384\n    ).generate(\" \".join(df))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('graph.png')\n\nplt.show()","87301727":"<font color='red'>\n# **Extra:**\n## Word Cloud","f01b5a3d":"<font color='red'>\n# Pie Charts\n<font color='blue'>\nVisualize first 5 countries according to their Social support","36b4b035":"<font color='red'>\n# Box Plots\n<font color='blue'>\nVisualize countries according to their Social support and Healthy life expectancy","4a50f280":"<font color='red'>\n# Bar Plot\n<font color='blue'>\nVisualize first 5 countries according to their Negative affect and Corruption","fd8131bc":"<font color='red'>\n# Inset Plots\n<font color='blue'>\nVisualize countries according to their Freedom and Positive affect","a8f79772":"<font color='red'>\n# Histogram\n<font color='blue'>\nVisualize first 50 countries according to their Freedom and Generosity","bd5260bf":"<font color='red'>\n# Line Plot\n<font color='blue'>\nVisualize countries according to their Freedom and Positive affect","b0ab77d2":"<font color='red'>\n# Buble Charts\n<font color='blue'>\nVisualize 25 countries according to their Social support, Positive affect and Healthy life expectancy","7d9ba759":"<font color='red'>\n# 3D Scatter Plot with Colorscaling\n<font color='blue'>\nVisualize 100 countries according to their Social support, Positive affect, Freedom and Healthy life expectancy","11dc8ea2":"<font color='red'>\n# Plotly Visualization Examples\n<font color='blue'>\n- Ignore the comparison of ridiculous data.\n- My only purpose here is practice and come here to look at the syntax quickly when something is forgotten about seaborn.\n- Good work","ae37b65c":"<font color='red'>\n# Scatter Plot\n<font color='blue'>\nVisualize countries according to their Social support and Healthy life expectancy","88a3d1e7":"<font color='red'>\n# Multiple Subplots\n<font color='blue'>\nVisualize 100 countries according to their Social support, Positive affect, Freedom and Healthy life expectancy","689b37ba":"<font color='red'>\n# Scatter Matrix Plots\n<font color='blue'>\nVisualize 25 countries according to their Social support, Positive affect and Healthy life expectancy"}}