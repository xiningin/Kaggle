{"cell_type":{"10dd9af7":"code","61a84252":"code","bc4f64cc":"code","7df332de":"code","80a23b6a":"code","7e9bbd56":"code","381d0838":"code","520661fd":"code","be99ddf2":"code","6e6a1b5f":"code","8aa8916e":"code","a6691cf8":"code","45ffd123":"code","e6215c1c":"code","f62ccdd3":"code","68d737a4":"code","9d6b3e83":"code","7e5ec0ef":"code","75f07879":"code","72f8a3b5":"code","674e725c":"code","42232009":"code","167c301c":"code","96ad4434":"code","304ada6d":"code","a1224a51":"code","c904e3a8":"code","98d0bd18":"code","30fcf7fe":"code","c92c2de1":"code","3f2948a6":"code","417c672e":"code","57fa7551":"code","ad1155f2":"code","acbf26fc":"code","8e29a205":"code","6e8b169e":"code","396d065e":"code","632cbba3":"code","7ec653c0":"code","379721d0":"code","cbb4871e":"code","f34a9476":"code","d2d276f8":"code","bf665535":"code","af843581":"code","1cdda69e":"code","48d58bf0":"code","b0d80292":"code","3d35d572":"code","7ebb5fae":"code","52505432":"code","8333a7da":"code","04987fee":"code","8c2f72b4":"code","58098603":"code","41596b3e":"code","e004332d":"code","0f2defb1":"code","96b54ad6":"code","93293dca":"code","08a9cb7f":"code","5197bde8":"code","f66637ea":"code","112559cb":"code","64ad640a":"code","14b6ac30":"code","4588b410":"code","98f202ee":"code","60a25921":"code","e6e0736c":"code","e4dfb096":"code","b6240a51":"code","d84cd62d":"code","bb214693":"code","46cad531":"code","e55072fd":"code","8c3748cb":"code","c33b9463":"code","9b2fdbae":"code","185fb1db":"code","c5c785f5":"code","e15d0d3e":"code","73342269":"code","108a9cea":"code","383d9fe1":"code","7148ac63":"markdown","c9ec1ce9":"markdown","5a930ed8":"markdown","37c1da6b":"markdown","a3a36085":"markdown","185eaa8a":"markdown","17eb37e3":"markdown","0fceeabd":"markdown","39dd1295":"markdown","8fd4c301":"markdown","fc09acd1":"markdown","57f0bdb1":"markdown","f637c179":"markdown","8e68973e":"markdown","95b1331e":"markdown","a2c6dd0b":"markdown","5f916979":"markdown","8c6694b3":"markdown","2928e56d":"markdown","eef0b1fa":"markdown","ef30cdbd":"markdown","ac15b4ef":"markdown","38d16c60":"markdown"},"source":{"10dd9af7":"import numpy as np\nimport pandas as pd \nfrom sklearn.preprocessing import LabelEncoder\nimport os\nimport gc\nimport warnings\nwarnings.filterwarnings('ignore')\nimport matplotlib.pyplot as plt\nimport seaborn as sns","61a84252":"df_prev = pd.read_csv('..\/input\/home-credit-default-risk\/previous_application.csv')","bc4f64cc":"df_prev.head()","7df332de":"df_prev.columns","80a23b6a":"df_prev.shape","7e9bbd56":"df_prev.index","381d0838":"df_prev.isnull().values.any()","520661fd":"df_prev.isnull().sum()","be99ddf2":"def missing_values_table(df_prev):\n        mis_val = df_prev.isnull().sum()\n        mis_val_percent = 100 * df_prev.isnull().sum() \/ len(df_prev)\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n     \n        print (\"Your selected dataframe has \" + str(df_prev.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        return mis_val_table_ren_columns\nmissing_values_table(df_prev)","6e6a1b5f":"df_prev.dtypes.value_counts()","8aa8916e":"df_prev.info()","a6691cf8":"cat_cols = [col for col in df_prev.columns if df_prev[col].dtypes == 'O']\ncat_cols","45ffd123":"def cat_summary(data, categorical_cols, target, number_of_classes=10):\n    var_count = 0  # How many categorical variables will be reported?\n    vars_more_classes = []  # Variables with more than a certain number of classes will be stored.\n    for var in categorical_cols:\n        if len(df_prev[var].value_counts()) <= number_of_classes:  # Choose by number of classes.\n            print(pd.DataFrame({var: data[var].value_counts(),\n                                \"Ratio\": 100 * data[var].value_counts() \/ len(data),\n                                \"TARGET_MEDIAN\": data.groupby(var)[target].median()}), end=\"\\n\\n\\n\")\n            var_count += 1\n        else:\n            vars_more_classes.append(data[var].name)\n    print('%d categorical variables have been described' % var_count, end=\"\\n\\n\")\n    print('There are', len(vars_more_classes), \"variables have more than\", number_of_classes, \"classes\", end=\"\\n\\n\")\n    print('Variable names have more than %d classes:' % number_of_classes, end=\"\\n\\n\")\n    print(vars_more_classes)\n\n\ncat_summary(df_prev, cat_cols, \"SK_ID_CURR\")","e6215c1c":"# Number of unique classes in each object column\ndf_prev.select_dtypes('object').apply(pd.Series.nunique, axis = 0)","f62ccdd3":"# 1) NAME_TYPE_SUITE : Who was accompanying client when he was applying for the loan?\ndf_prev[\"NAME_TYPE_SUITE\"].value_counts()   ","68d737a4":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_TYPE_SUITE\", data=df_prev)\nplt.show()","9d6b3e83":"# 2) NAME_CLIENT_TYPE: Was the client old or new client when applying for the previous application?\ndf_prev[\"NAME_CLIENT_TYPE\"].value_counts()","7e5ec0ef":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_CLIENT_TYPE\", data=df_prev)\nplt.show()","75f07879":"# 3) NAME_GOODS_CATEGORY: What kind of goods did the client apply for in the previous application?\ndf_prev[\"NAME_GOODS_CATEGORY\"].value_counts()","72f8a3b5":"# 4) NAME_PORTFOLIO: Was the previous application for CASH, POS, CAR?\ndf_prev[\"NAME_PORTFOLIO\"].value_counts()","674e725c":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_PORTFOLIO\", data=df_prev)\nplt.show()","42232009":"# 5) NAME_PRODUCT_TYPE: Was the previous application x-sell o walk-in?\ndf_prev[\"NAME_PRODUCT_TYPE\"].value_counts()","167c301c":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_PRODUCT_TYPE\", data=df_prev)\nplt.show()","96ad4434":"# 6) CHANNEL_TYPE: Through which channel we acquired the client on the previous application?\ndf_prev[\"CHANNEL_TYPE\"].value_counts()","304ada6d":"# 7) NAME_CONTRACT_STATUS: Contract status (approved, cancelled, ...) of previous application.\ndf_prev[\"NAME_CONTRACT_STATUS\"].value_counts()","a1224a51":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"NAME_CONTRACT_STATUS\", data=df_prev)\nplt.show()","c904e3a8":"# 8) WEEKDAY_APPR_PROCESS_START:On which day of the week did the client apply for the loan.\ndf_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","98d0bd18":"# Displaying Categorical Variables with Column Graph\nsns.countplot(x=\"WEEKDAY_APPR_PROCESS_START\", data=df_prev)\nplt.show()","30fcf7fe":"df_prev.describe().T","c92c2de1":"df_prev.describe([0.05, 0.10, 0.25, 0.50, 0.75, 0.80, 0.90, 0.95, 0.99]).T","3f2948a6":"# How many numeric variables are in the data set?\nnum_cols = [col for col in df_prev.columns if df_prev[col].dtypes != 'O']\nprint('Number of numerical variables: ', len(num_cols))","417c672e":"# What are the names of the numeric variables?\nnum_cols","57fa7551":"# Visualization of numeric variables\ndef hist_for_nums(data, numeric_cols):\n    col_counter = 0\n    data = data.copy()\n    for col in numeric_cols:\n        data[col].hist(bins=20)\n        plt.xlabel(col)\n        plt.title(col)\n        plt.show()\n        col_counter += 1\nhist_for_nums(df_prev, num_cols)","ad1155f2":"# Correlation Matrix\ncorrmat = df_prev.corr()\nfig = plt.figure(figsize = (10,7))\nsns.heatmap(corrmat,vmax = 1,square = True,annot = True,vmin = -1)\nplt.show()","acbf26fc":"df_prev['AMT_APPLICATION'].corr(df_prev['AMT_GOODS_PRICE'])","8e29a205":"df_prev['DAYS_FIRST_DUE'].corr(df_prev['DAYS_DECISION'])","6e8b169e":"df_prev['DAYS_FIRST_DUE'].corr(df_prev['DAYS_FIRST_DRAWING'])","396d065e":"# 1) AMT_ANNUITY: Annuity of previous application.\ndf_prev[\"AMT_ANNUITY\"].value_counts()","632cbba3":"# 2)\uf0a7 AMT_APPLICATION: For how much credit did client ask on the previous application.\ndf_prev[\"AMT_APPLICATION\"].value_counts()","7ec653c0":"# 3) Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is \n# the amount for which the client initially applied for, but during our approval process he could have received different amount\ndf_prev[\"AMT_CREDIT\"].value_counts()","379721d0":"# 4) AMT_DOWN_PAYMENT: Down payment on the previous application\ndf_prev[\"AMT_DOWN_PAYMENT\"].value_counts()","cbb4871e":"# 5) AMT_GOODS_PRICE: Goods price of good that client asked for (if applicable) on the previous application.\ndf_prev[\"AMT_GOODS_PRICE\"].value_counts()","f34a9476":"# 6) CODE_REJECT_REASON: Why was the previous application rejected?\ndf_prev[\"CODE_REJECT_REASON\"].value_counts()","d2d276f8":"# 7) SELLERPLACE_AREA: Selling area of seller place of the previous application.\ndf_prev[\"SELLERPLACE_AREA\"].value_counts()","bf665535":"a = ['Family', 'Spouse, partner', 'Children', 'Other_B', 'Other_A', 'Group of people']\ndf_prev[\"NAME_TYPE_SUITE\"] = df_prev[\"NAME_TYPE_SUITE\"].replace(a, 'Accompanied')","af843581":"df_prev[\"NAME_TYPE_SUITE\"].value_counts()","1cdda69e":"b = ['Auto Accessories', 'Jewelry', 'Homewares', 'Medical Supplies', 'Vehicles', 'Sport and Leisure', \n         'Gardening', 'Other', 'Office Appliances', 'Tourism', 'Medicine', 'Direct Sales', 'Fitness', 'Additional Service', \n         'Education', 'Weapon', 'Insurance', 'House Construction', 'Animals'] \ndf_prev[\"NAME_GOODS_CATEGORY\"] = df_prev[\"NAME_GOODS_CATEGORY\"].replace(b, 'others')","48d58bf0":"df_prev[\"NAME_GOODS_CATEGORY\"].value_counts()","b0d80292":"c = ['AP+ (Cash loan)', 'Channel of corporate sales', 'Car dealer']\ndf_prev[\"CHANNEL_TYPE\"] = df_prev[\"CHANNEL_TYPE\"].replace(c, 'Other_Channel')","3d35d572":"df_prev[\"CHANNEL_TYPE\"].value_counts()","7ebb5fae":"df_prev[\"NAME_SELLER_INDUSTRY\"].value_counts()","52505432":"d = ['Auto technology', 'Jewelry', 'MLM partners', 'Tourism']\ndf_prev[\"NAME_SELLER_INDUSTRY\"] = df_prev[\"NAME_SELLER_INDUSTRY\"].replace(d, 'Others')","8333a7da":"e = ['Refusal to name the goal', 'Money for a third person', 'Buying a garage','Gasification \/ water supply',\n     'Hobby','Business development','Buying a holiday home \/ land','Furniture','Car repairs',\n     'Buying a home','Wedding \/ gift \/ holiday']\ndf_prev[\"NAME_CASH_LOAN_PURPOSE\"] = df_prev[\"NAME_CASH_LOAN_PURPOSE\"].replace(e, 'Other_Loan')","04987fee":"df_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","8c2f72b4":"df_prev.groupby([\"WEEKDAY_APPR_PROCESS_START\",\"NAME_CONTRACT_STATUS\"]).agg(\"count\")","58098603":"weekend = [\"SATURDAY\",\"SUNDAY\"]                              \n\ndf_prev[\"WEEKDAY_APPR_PROCESS_START\"] = df_prev[\"WEEKDAY_APPR_PROCESS_START\"].apply(lambda x : \"WEEKEND\" if x in weekend else \"WEEKDAY\")\n\n# For weekday 58-60% and weekend 67% pazar = 71%","41596b3e":"df_prev[\"WEEKDAY_APPR_PROCESS_START\"].value_counts()","e004332d":"df_prev[\"NAME_CASH_LOAN_PURPOSE\"].value_counts()","0f2defb1":"df_prev[\"NAME_SELLER_INDUSTRY\"].value_counts()","96b54ad6":"df_prev[\"DAYS_FIRST_DRAWING\"].value_counts()","93293dca":"# 1) FLAG_LAST_APPL_PER_CONTRACT\ndf_prev[\"FLAG_LAST_APPL_PER_CONTRACT\"].value_counts()\n","08a9cb7f":"# 2) NFLAG_LAST_APPL_IN_DAY\ndf_prev[\"NFLAG_LAST_APPL_IN_DAY\"].value_counts()","5197bde8":"# NaN values: 365.243 -> nan\ndf_prev['DAYS_FIRST_DRAWING'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_FIRST_DUE'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_LAST_DUE_1ST_VERSION'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_LAST_DUE'].replace(365243, np.nan, inplace= True)\ndf_prev['DAYS_TERMINATION'].replace(365243, np.nan, inplace= True)","f66637ea":"#* AMT_APPLICATION: For how much credit did client ask on the previous application.\n#* AMT_CREDIT : Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is the amount for which the client initially applied for, but during our approval process he could have received different amount.\n#* 1) NEW_AMT_CTEDIT_RATE: Received Amount Rate \n\ndf_prev['NEW_APP_CREDIT_RATE'] = df_prev['AMT_APPLICATION'] \/ df_prev['AMT_CREDIT']","112559cb":"#* AMT_CREDIT\n#* AMT_ANNUITY: Annuity of previous application.\n#* 2) NEW_AMT_PAYMENT_RATE: The ratio of the loan received to the monthly payment.\ndf_prev['NEW_AMT_PAYMENT_RATE'] = df_prev['AMT_CREDIT'] \/ df_prev['AMT_ANNUITY']","64ad640a":"# 3) NEW_APP_GOODS_RATE\ndf_prev['NEW_APP_GOODS_RATE'] = df_prev['AMT_APPLICATION'] \/ df_prev['AMT_GOODS_PRICE']","14b6ac30":"# 4) NEW_CREDIT_GOODS_RATE\ndf_prev['NEW_CREDIT_GOODS_RATE'] = df_prev['AMT_CREDIT'] \/ df_prev['AMT_GOODS_PRICE']","4588b410":"# 5) NEW_RETURN_DAY\ndf_prev['NEW_RETURN_DAY'] =  df_prev['DAYS_DECISION'] + df_prev['CNT_PAYMENT'] * 30","98f202ee":"# 6) NEW_DAYS_TERMINATION_DIFF\n# Expected end day - days remaining or how many days are due.\ndf_prev['NEW_DAYS_TERMINATION_DIFF'] = df_prev['DAYS_TERMINATION'] - df_prev['NEW_RETURN_DAY']","60a25921":"# 7) NEW_DAYS_DUE_DIFF\n# (According to the application date of the current application, when was the first due date of the previous application?) - \n#(According to the application date of the current application, when should the first term of the previous application be?)\ndf_prev['NEW_DAYS_DUE_DIFF'] =  df_prev['DAYS_LAST_DUE_1ST_VERSION'] - df_prev['DAYS_FIRST_DUE'] ","e6e0736c":"# 8) NEW_APP_CREDIT_RATE_RATIO\n#If x <= 1, a client got the desired loan or more.\ndf_prev[\"NEW_APP_CREDIT_RATE_RATIO\"] = df_prev[\"NEW_APP_CREDIT_RATE\"].apply(lambda x: 1 if(x<=1) else 0)","e4dfb096":"# 9) NEW_RETURN_DAY\n# the day the loan was issued + the number of loan installments * 30 (the number of days of the loan)\ndf_prev['NEW_RETURN_DAY'] =  df_prev['DAYS_DECISION'] + df_prev['CNT_PAYMENT'] * 30","b6240a51":"# 10) NEW_CNT_PAYMENT\n# classifying the installment numbers of loans as  0-12 short | 12-60 medium | 60-120 long\ndf_prev[\"NEW_CNT_PAYMENT\"]=pd.cut(x=df_prev['CNT_PAYMENT'], bins=[0, 12, 60,120], labels=[\"K\u0131sa\", \"Orta\", \"Uzun\"])","d84cd62d":"# 11) NEW_END_DIFF\n# According to the application date of the current application, when was the expected end of the previous application?\n# According to the application date of the current application, when was the last due date for the previous application?\ndf_prev[\"NEW_END_DIFF\"] = df_prev[\"DAYS_TERMINATION\"] - df_prev[\"DAYS_LAST_DUE\"]","bb214693":"def one_hot_encoder(df_prev, nan_as_category = True):\n    original_columns = list(df_prev.columns)\n    categorical_columns = [col for col in df_prev.columns if df_prev[col].dtype == 'object']\n    df_prev = pd.get_dummies(df_prev, columns= categorical_columns, dummy_na= nan_as_category)\n    new_columns = [c for c in df_prev.columns if c not in original_columns]\n    return df_prev, new_columns","46cad531":"df_prev, cat_cols = one_hot_encoder(df_prev, nan_as_category= True)","e55072fd":"df_prev.head()","8c3748cb":"    num_aggregations = {\n        'AMT_ANNUITY': ['min', 'max', 'mean'],\n        'AMT_APPLICATION': ['min', 'max', 'mean'],\n        'AMT_CREDIT': ['min', 'max', 'mean'],\n        'AMT_DOWN_PAYMENT': ['min', 'max', 'mean'],\n        'AMT_GOODS_PRICE': ['min', 'max', 'mean'],\n        'HOUR_APPR_PROCESS_START': ['min', 'max', 'mean'],\n        'RATE_DOWN_PAYMENT': ['min', 'max', 'mean'],\n        'DAYS_DECISION': ['min', 'max', 'mean'],\n        'CNT_PAYMENT': ['mean', 'sum'],\n        'NEW_APP_CREDIT_RATE': ['min', 'max', 'mean', 'var'],\n        'NEW_AMT_PAYMENT_RATE': ['min', 'max', 'mean'],\n        'NEW_CREDIT_GOODS_RATE': ['min', 'max', 'mean'],\n        'NEW_RETURN_DAY': ['min', 'max', 'mean', 'var'],\n        'NEW_DAYS_TERMINATION_DIFF': ['min', 'max', 'mean'],\n        'NEW_END_DIFF': ['min', 'max', 'mean'],\n        'NEW_RETURN_DAY': ['min', 'max', 'mean'],\n        'NEW_APP_CREDIT_RATE_RATIO': ['min', 'max', 'mean'],\n        'NEW_DAYS_DUE_DIFF': ['min', 'max', 'mean']\n           }","c33b9463":"cat_aggregations = {}\n    \nfor cat in cat_cols:\n    cat_aggregations[cat] = ['mean']","9b2fdbae":" prev_agg = df_prev.groupby('SK_ID_CURR').agg({**num_aggregations, **cat_aggregations})","185fb1db":" prev_agg.columns = pd.Index(['PREV_' + e[0] + \"_\" + e[1].upper() for e in prev_agg.columns.tolist()])","c5c785f5":" prev_agg.columns","e15d0d3e":"'NAME_CONTRACT_STATUS_Approved' in df_prev","73342269":" approved = df_prev[df_prev['NAME_CONTRACT_STATUS_Approved'] == 1]","108a9cea":"approved_agg = approved.groupby('SK_ID_CURR').agg(num_aggregations)\napproved_agg.columns = pd.Index(['APR_' + e[0] + \"_\" + e[1].upper() for e in approved_agg.columns.tolist()])\nprev_agg = prev_agg.join(approved_agg, how='left', on='SK_ID_CURR')","383d9fe1":"refused = df_prev[df_prev['NAME_CONTRACT_STATUS_Refused'] == 1]\nrefused_agg = refused.groupby('SK_ID_CURR').agg(num_aggregations)\nrefused_agg.columns = pd.Index(['REF_' + e[0] + \"_\" + e[1].upper() for e in refused_agg.columns.tolist()])\nprev_agg = prev_agg.join(refused_agg, how='left', on='SK_ID_CURR')\ndel refused, refused_agg, approved, approved_agg, df_prev\ngc.collect()","7148ac63":"# 6. SOME IMPROVEMENTS","c9ec1ce9":"* AMT_DOWN_PAYMENT\t895844(missing)\t53.6(%)","5a930ed8":"# 2. UNDERSTANDING THE DATA-SET","37c1da6b":"1) NAME_TYPE_SUITE  ","a3a36085":"**Aggregation for numeric features**","185eaa8a":"# 5. ANALYSIS of NUMERICAL VARIABLE","17eb37e3":"![](http:\/\/)![image.png](attachment:image.png)","0fceeabd":"* SK_ID_PREV :\"ID of previous credit in Home credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loan applications in Home Credit, previous application could, but not necessarily have to lead to credit) \",hashed\n* SK_ID_CURR:ID of loan in our sample,hashed\n* NAME_CONTRACT_TYPE:\"Contract product type (Cash loan, consumer loan [POS] ,...) of the previous application\",\n* AMT_ANNUITY:Annuity of previous application,\n* AMT_APPLICATION:For how much credit did client ask on the previous application,\n* AMT_CREDIT:\"Final credit amount on the previous application. This differs from AMT_APPLICATION in a way that the AMT_APPLICATION is the amount for which the client initially applied for, but during our approval process he could have received different amount - AMT_CREDIT\",\n* AMT_DOWN_PAYMENT:Down payment on the previous application,\n* AMT_GOODS_PRICE:Goods price of good that client asked for (if applicable) on the previous application,\n* WEEKDAY_APPR_PROCESS_START:On which day of the week did the client apply for previous application,\n* HOUR_APPR_PROCESS_START:Approximately at what day hour did the client apply for the previous application,rounded\n* FLAG_LAST_APPL_PER_CONTRACT:Flag if it was last application for the previous contract. Sometimes by mistake of client or our clerk there could be more applications for one single contract,\n* NFLAG_LAST_APPL_IN_DAY:Flag if the application was the last application per day of the client. Sometimes clients apply for more applications a day. Rarely it could also be error in our system that one application is in the database twice,\n* NFLAG_MICRO_CASH:Flag Micro finance loan,\n* RATE_DOWN_PAYMENT:Down payment rate normalized on previous credit,normalized\n* RATE_INTEREST_PRIMARY:Interest rate normalized on previous credit,normalized\n* RATE_INTEREST_PRIVILEGED:Interest rate normalized on previous credit,normalized\n* NAME_CASH_LOAN_PURPOSE:Purpose of the cash loan,\n* NAME_CONTRACT_STATUS:\"Contract status (approved, cancelled, ...) of previous application\",\n* DAYS_DECISION:Relative to current application when was the decision about previous application made,time only relative to the application\n* NAME_PAYMENT_TYPE:Payment method that client chose to pay for the previous application,\n* CODE_REJECT_REASON:Why was the previous application rejected,\n* NAME_TYPE_SUITE:Who accompanied client when applying for the previous application,\n* NAME_CLIENT_TYPE:Was the client old or new client when applying for the previous application,\n* NAME_GOODS_CATEGORY:What kind of goods did the client apply for in the previous application,\n* NAME_PORTFOLIO:\"Was the previous application for CASH, POS, CAR, \u2026\",\n* NAME_PRODUCT_TYPE:Was the previous application x-sell o walk-in,\n* CHANNEL_TYPE:Through which channel we acquired the client on the previous application,\n* SELLERPLACE_AREA:Selling area of seller place of the previous application,\n* NAME_SELLER_INDUSTRY:The industry of the seller,\n* CNT_PAYMENT:Term of previous credit at application of the previous application,\n* NAME_YIELD_GROUP:Grouped interest rate into small medium and high of the previous application,grouped\n* PRODUCT_COMBINATION:Detailed product combination of the previous application,\n* DAYS_FIRST_DRAWING:Relative to application date of current application when was the first disbursement of the previous application,time only relative to the application\n* DAYS_FIRST_DUE:Relative to application date of current application when was the first due supposed to be of the previous application,time only relative to the application\n* DAYS_LAST_DUE_1ST_VERSION: Relative to application date of current application when was the first due of the previous application,time only relative to the application\n* DAYS_LAST_DUE:Relative to application date of current application when was the last due date of the previous application,time only relative to the application\n* DAYS_TERMINATION:Relative to application date of current application when was the expected termination of the previous application,time only relative to the application\n* NFLAG_INSURED_ON_APPROVAL:Did the client requested insurance during the previous application.\n","39dd1295":"* **Aggregation for categorical features**","8fd4c301":"5) NAME_CASH_LOAN_PURPOSE","fc09acd1":"4) NAME_SELLER_INDUSTRY","57f0bdb1":"1. Checking missing value","f637c179":"# 4. ANALYSIS of CATEGORICAL VARIABLE","8e68973e":"6) WEEKDAY_APPR_PROCESS_START","95b1331e":"# 1. IMPORT SOME NECESSARY LIBRARIES","a2c6dd0b":"# 7. NEW FEATURES","5f916979":"* AMT_GOODS_PRICE\t385515 (missing)\t23.1(%)","8c6694b3":"2) NAME_GOODS_CATEGORY","2928e56d":"# 9. AGGREGATION","eef0b1fa":"3) CHANNEL_TYPE","ef30cdbd":"> Need to drop","ac15b4ef":"# 8. ONE-HOT ENCODING","38d16c60":"# **Previous application data**\n\nprevious_application contains information about all previous applications for Home Credit loans of clients who have loans .\n"}}