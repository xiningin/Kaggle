{"cell_type":{"0ff6d40c":"code","ab8bb6d1":"code","d5aeff0d":"code","53e21865":"code","1ed53b03":"code","5118169a":"code","074a89d3":"code","b6adfea1":"code","67ba8312":"code","9c592ce6":"code","8cac566f":"code","5685a1ab":"code","37d53adf":"markdown"},"source":{"0ff6d40c":"# PT: importando bibliotecas e fun\u00e7\u00f5es\n# importing libs\nimport numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, plot_confusion_matrix\nimport matplotlib.pyplot as plt","ab8bb6d1":"# PT: criando dados\n# creating data\nx = np.arange(20).reshape(-1, 1)\ny = np.array([np.random.randint(0, 2, 1)[0] for x in range(0, 20)])","d5aeff0d":"np.arange(20).shape, np.arange(20).reshape(-1, 1).shape","53e21865":"x, y","1ed53b03":"# PT: criando e treinando o modelo\n# creating the model and fit it\nclmodel = LogisticRegression(solver='liblinear', C=10.0, random_state=42)\nclmodel.fit(x, y)","5118169a":"# PT: validando o modelo\n# evaluating the model\n\nprobabilidade = clmodel.predict_proba(x) #probability\nprevisao = clmodel.predict(x) # prediction\nscore = clmodel.score(x, y)\nmatriz_confusao = confusion_matrix(y, previsao)\nrelatorio = classification_report(y, previsao)","074a89d3":"print('Valores de x')\n[i[0] for i in x]","b6adfea1":"print('Valores de y')\n[i for i in y]","67ba8312":"print('Intercepta\u00e7\u00e3o: ', clmodel.intercept_[0])\nprint('Coeficiente:', clmodel.coef_[0][0])","9c592ce6":"print('Y Real: ', [i for i in y])\nprint('Y Prev: ', [i for i in previsao])","8cac566f":"print('Matriz de confus\u00e3o')\nplot_confusion_matrix(clmodel, x, y)\nplt.show()","5685a1ab":"print('Relat\u00f3rio')\nprint(relatorio, sep='\\n')","37d53adf":"# **Logistic Regression** \n\u00c9 usado em situa\u00e7\u00f5es quando temos uma sa\u00edda binomial, por exemplo se a meta de vendas ser\u00e1 batida ou n\u00e3o"}}