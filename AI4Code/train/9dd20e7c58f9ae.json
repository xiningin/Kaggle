{"cell_type":{"dd80fee7":"code","9eb85aa8":"code","fa5e29c7":"code","607695f1":"code","716be872":"code","cba016bb":"code","1b0f1bca":"code","63207b4c":"code","d6528fef":"code","0543000c":"code","26fdb7a8":"code","61b20fdb":"code","41e21c90":"code","8ea10b71":"code","6160e05e":"code","09e3d061":"code","0baea4ec":"code","f49218fc":"code","73580ff1":"code","681359d7":"code","5261efa0":"code","d5fd1a76":"code","613f1631":"code","42b5b9af":"code","432c4662":"markdown","970e6959":"markdown","e9596442":"markdown","1dfa90eb":"markdown","e0ee958e":"markdown","615d645e":"markdown","1b805920":"markdown","2aaa3f55":"markdown","de5d9333":"markdown"},"source":{"dd80fee7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9eb85aa8":"df = pd.read_csv(r\"\/kaggle\/input\/english-premier-league-results\/results.csv\", encoding  = \"ISO-8859-1\")","fa5e29c7":"df.sample(5)","607695f1":"df.columns","716be872":"rel_columns  = [\"Season\",\"HomeTeam\",\"AwayTeam\",\"FTR\"] \ndf = df[rel_columns]","cba016bb":"man_utd_df = pd.concat([df[df['HomeTeam']=='Man United'], df[df['AwayTeam']==\"Man United\"]]).sort_index()","1b0f1bca":"new_man_utd = man_utd_df[man_utd_df[\"Season\"] >= \"2013\"].reset_index().iloc[:,1:]","63207b4c":"latest_games = pd.DataFrame() \nlatest_games[\"Season\"] = pd.Series(np.zeros(4)).apply(lambda x: \"2021-22\")\nlatest_games[\"HomeTeam\"] = pd.Series([\"Leicester\",\"Man United\",\"Tottenham\",\"Man United\"])\nlatest_games[\"AwayTeam\"] = pd.Series([\"Man United\",\"Liverpool\",\"Man United\",\"Man City\"])\nlatest_games[\"FTR\"] = pd.Series([\"H\",\"A\",\"A\",\"A\"])\nnew_man_utd = new_man_utd.append(latest_games).reset_index().iloc[:,1:]\nnew_man_utd","d6528fef":"def win_loss(x):\n    if(x[1]==\"Man United\"):\n        if(x[3]==\"A\"):\n            return \"L\"\n        elif(x[3]==\"H\"):\n            return \"W\"\n    elif(x[2]==\"Man United\"):\n        if(x[3]==\"A\"):\n            return \"W\"\n        elif(x[3]==\"H\"):\n            return \"L\"\n    return \"D\"","0543000c":"results = new_man_utd.apply(win_loss, axis = 1)\nnew_man_utd['Result'] = results\nnew_man_utd = new_man_utd[rel_columns[:-1]+['Result']]\nnew_man_utd","26fdb7a8":"result_counts = new_man_utd[\"Result\"].value_counts()\nresult_counts","61b20fdb":"result_counts = np.array(result_counts)\nresult_proportions = result_counts\/sum(result_counts)\nresult_proportions_df = pd.DataFrame(result_proportions, columns = [\"proportions\"])\nresult_proportions_df['Result' ] = [\"Win\",\"Draw\",\"Loss\"]\nresult_proportions_df.set_index(\"Result\")","41e21c90":"plt.bar(x = result_proportions_df[\"Result\"], height = result_proportions_df[\"proportions\"])\n\nplt.show()","8ea10b71":"plt.pie(result_proportions_df[\"proportions\"], labels = result_proportions_df[\"Result\"])\nplt.text(2,-0.3,\"proportion of results\")\nplt.show()","6160e05e":"cond_result_counts = np.zeros((3,3))","09e3d061":"results_to_matrix_dict = {\"WW\": (0,0), \"WL\": (0,1), \"WD\": (0,2), \"LW\": (1,0), \"LL\": (1,1), \"LD\": (1,2), \"DW\": (2,0), \"DL\": (2,1), \"DD\": (2,2)}","0baea4ec":"for i in range(1, new_man_utd.shape[0]):\n    prev_res = new_man_utd.iloc[i-1,3]\n    cur_res = new_man_utd.iloc[i,3]\n    cond_result_counts[results_to_matrix_dict[prev_res + cur_res]]+=1","f49218fc":"cond_result_counts","73580ff1":"cond_proportions = np.round(cond_result_counts\/np.sum(cond_result_counts,axis = 1).reshape(3,1),2)","681359d7":"cond_proportions","5261efa0":"cond_prop_df = pd.DataFrame(cond_proportions)\ncond_prop_df.columns = [\"Win\",\"Loss\",\"Draw\"]\ncond_prop_df.index = [\"Win\",\"Loss\",\"Draw\"]\ncond_prop_df","d5fd1a76":"plt.pie(cond_prop_df.iloc[0,], labels = result_proportions_df[\"Result\"])\nplt.text(2,-0.3,\"Proportion of results following a Win\")\nplt.show()","613f1631":"plt.pie(cond_prop_df.iloc[2,], labels = result_proportions_df[\"Result\"])\nplt.text(2,-0.3,\"proportion of results following a Draw\")\nplt.show()","42b5b9af":"plt.pie(cond_prop_df.iloc[1,], labels = result_proportions_df[\"Result\"])\nplt.text(2,-0.3,\"Proportion of results following a Loss\")\nplt.show()","432c4662":"Adding recent games which aren't in the dataset","970e6959":"### Total No of wins, draws and losses and respective proportions","e9596442":"## Filtering out Manchester United Premier League Matches After Alex Ferguson Retired (2013 - )","1dfa90eb":"Will be looking at\n1) Overall proportion of Wins, Losses and Draws\n\n2) Proportion of Wins, Losses, Defeats in the next game when they won the current game.\n\n3) Proportion of Wins, Losses, Defeats in the next game when they lost the current game.\n\n4) Proportion of Wins, Losses, Defeats in the next game when they drew the current game.","e0ee958e":"## Observing Higher Win Percentage After a Loss\nThe Table and Pie Charts clearly show that the win percentage of Manchester United after a Loss is almost 10% higher than what it is after a Win or a Draw","615d645e":"### Generating counts of all 9 combinations of Win\/Loss\/Draw followed by a Win\/Loss\/Draw\n\nFor example, considering all the times Manchester United won, in what proportion of these games did Manchester United win the next game?","1b805920":"# Context and Motivation\n\nAfter Alex Ferguson (arguably the best football manager of all time) retired as Manager of Manchester United after setting standards most other managers can only dream of, Manchester United have tried 4 different managers to bring back Manchester United to their former glory. A lot of money has been invested in getting high profile players. But inconsistency in getting good results is what was lacking under each of these managers. None of them were able to bring out the best in these high profile players unless under scrutiny or put under spotlight after a bad defeat and it seemed like there's a general sense of complacency among players in easy matches.\n\nThis is the motivation behind this and I'm trying to find out if Manchester United \"gets better results\" after a defeat rather than after a win or a draw.","2aaa3f55":"## Loading and Preprocessing Dataset","de5d9333":"## Converting Result column from Away\/Home\/Draw to Win\/Lose\/Draw for Manchester United"}}