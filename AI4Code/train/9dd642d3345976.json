{"cell_type":{"6b43c91c":"code","62398f5b":"code","24189e67":"code","b209e36e":"code","1ff60975":"code","801bd28a":"code","31e86814":"code","72283f50":"code","392e3c66":"code","e13e7150":"code","644e3aa4":"code","8d5415ad":"code","3a8265ab":"code","dcceff4d":"code","333fed49":"code","fd6ed196":"code","a3a186f5":"code","88ac87bf":"code","db36e944":"code","c98dfa10":"code","880a8e10":"markdown","c6cb6d10":"markdown","ecae81cd":"markdown","261006a7":"markdown","3a119b09":"markdown","8b18d308":"markdown","5efb62d5":"markdown","3ab8575a":"markdown","93dcf7e0":"markdown","35fdc3c3":"markdown"},"source":{"6b43c91c":"!pip install scikit-learn-extra","62398f5b":"import pandas as pd\nimport numpy as np\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.cluster import KMeans\nfrom sklearn_extra.cluster import KMedoids # for this library, use pip install scikit-learn-extra to install\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\nimport os\nimport random as rn","24189e67":"SEED = 12345\nos.environ['PYTHONHASHSEED']=str(SEED)\nnp.random.seed(SEED)\nrn.seed(SEED)","b209e36e":"df = pd.read_csv('..\/input\/oranges-vs-grapefruit\/citrus.csv')\ndf.head()","1ff60975":"df.info()","801bd28a":"df.describe()","31e86814":"from pandas_profiling import ProfileReport\n\nprofile = ProfileReport(df)\nprofile","72283f50":"data = df.drop(['weight'], axis = 1)\ndata.info()","392e3c66":"import seaborn as sns\nsns.countplot(x = \"name\", data = data)","e13e7150":"data['name'].value_counts()","644e3aa4":"# Randomizing the rows\ndata = data.sample(frac=1).reset_index(drop=True)\ndata.head()","8d5415ad":"features = data.drop(['name'], axis = 1)\ntarget = data['name']","3a8265ab":"features.columns","dcceff4d":"target.head()","333fed49":"le = preprocessing.LabelEncoder()\ntarget = le.fit_transform(target)","fd6ed196":"X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.3, random_state = 3)","a3a186f5":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\ny_pred1 = knn.predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred1))","88ac87bf":"x = features.values\nError =[]\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i).fit(x)\n    kmeans.fit(x)\n    Error.append(kmeans.inertia_)\nplt.rcParams[\"figure.figsize\"] = (10,7)\nplt.plot(range(1, 11), Error)\nplt.title('Elbow method')\nplt.xlabel('No of clusters')\nplt.ylabel('Error')\nplt.show()","db36e944":"kmeans = KMeans(n_clusters=2)\ny_pred2 = kmeans.fit_predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred2))","c98dfa10":"kmedoids = KMedoids(n_clusters=2, random_state=0).fit(X_test)\ny_pred3 = kmedoids.fit_predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred3))","880a8e10":"# Label Encoding","c6cb6d10":"# Data Report","ecae81cd":"# KMeans Model","261006a7":"# Train and Test Split\n","3a119b09":"# KMedoids Model","8b18d308":"# Loading Dataset","5efb62d5":"# KNN Model","3ab8575a":"# Preparing Data for Model","93dcf7e0":"# Importing Packages\n","35fdc3c3":"# Setting Seed"}}