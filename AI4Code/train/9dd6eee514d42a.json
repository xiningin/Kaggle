{"cell_type":{"e106fab7":"code","086bdded":"code","8eff7271":"code","1db285eb":"code","65e68c7b":"code","c8759258":"code","9e68808e":"code","87b1c773":"code","387f712f":"code","971ca14e":"markdown"},"source":{"e106fab7":"!conda install gdcm -c conda-forge -y","086bdded":"import os\n\nfrom PIL import Image\nimport pandas as pd\nfrom tqdm.auto import tqdm","8eff7271":"import numpy as np\nimport pydicom\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\n\ndef read_xray(path, voi_lut = True, fix_monochrome = True):\n    # Original from: https:\/\/www.kaggle.com\/raddar\/convert-dicom-to-np-array-the-correct-way\n    dicom = pydicom.read_file(path)\n    \n    # VOI LUT (if available by DICOM device) is used to transform raw DICOM data to \n    # \"human-friendly\" view\n    if voi_lut:\n        data = apply_voi_lut(dicom.pixel_array, dicom)\n    else:\n        data = dicom.pixel_array\n               \n    # depending on this value, X-ray may look inverted - fix that:\n    if fix_monochrome and dicom.PhotometricInterpretation == \"MONOCHROME1\":\n        data = np.amax(data) - data\n        \n    data = data - np.min(data)\n    data = data \/ np.max(data)\n    data = (data * 255).astype(np.uint8)\n        \n    return data","1db285eb":"def resize(array, size, keep_ratio=False, resample=Image.LANCZOS):\n    # Original from: https:\/\/www.kaggle.com\/xhlulu\/vinbigdata-process-and-resize-to-image\n    im = Image.fromarray(array)\n    \n    if keep_ratio:\n        im.thumbnail((size, size), resample)\n    else:\n        im = im.resize((size, size), resample)\n    \n    return im","65e68c7b":"train = pd.read_csv('..\/input\/siim-covid19-detection\/train_image_level.csv')","c8759258":"path = '..\/input\/siim-covid19-detection\/train\/ae3e63d94c13\/288554eb6182\/e00f9fe0cce5.dcm'\ndicom = pydicom.read_file(path)","9e68808e":"split = 'train'\nsave_dir = f'\/kaggle\/tmp\/{split}\/'\n\nos.makedirs(save_dir, exist_ok=True)\nsave_dir = f'\/kaggle\/tmp\/{split}\/image\/'\nos.makedirs(save_dir, exist_ok=True)\n\nfor dirname, _, filenames in tqdm(os.walk(f'..\/input\/siim-covid19-detection\/{split}')):\n    for file in filenames:\n        # set keep_ratio=True to have original aspect ratio\n        xray = read_xray(os.path.join(dirname, file))\n        im = resize(xray, size=1024)  \n        im.save(os.path.join(save_dir, file.replace('.dcm', '_image.png')))\n\n","87b1c773":"save_dir = f'\/kaggle\/tmp\/{split}\/study\/'\nos.makedirs(save_dir, exist_ok=True)\n\nfor dirname, _, filenames in tqdm(os.walk(f'..\/input\/siim-covid19-detection\/{split}')):\n    for file in filenames:\n        # set keep_ratio=True to have original aspect ratio\n        xray = read_xray(os.path.join(dirname, file))\n        im = resize(xray, size=1024)  \n        study = dirname.split('\/')[-2] + '_study.png'\n        im.save(os.path.join(save_dir, study))\n","387f712f":"%%time\n!tar -zcf image.tar.gz -C \"\/kaggle\/tmp\/train\/image\/\" .\n!tar -zcf study.tar.gz -C \"\/kaggle\/tmp\/train\/study\/\" .","971ca14e":"Code in this notebook is forked from https:\/\/www.kaggle.com\/h053473666\/512-img-png-600-study-png\/notebook\n\nBut I will convert the DICOM data to size **1024** instead of 512.\n\nI hope to improve LB score by training with bigger image size."}}