{"cell_type":{"3717bdc7":"code","bd0d7fc9":"code","d7f6e9b3":"code","bf7d141a":"code","942c5302":"code","accc56a6":"code","664b7ad2":"code","d6585412":"code","86a030f1":"code","b33bef61":"code","5c788483":"code","6d32a305":"code","45ef6cd6":"code","1f155371":"code","288dfc53":"code","4440d70f":"code","a8bd5dae":"code","9ea0e467":"code","974be265":"code","351867b9":"code","477b777c":"code","45563f25":"code","b60f11a9":"code","76188a6a":"markdown","f2d85432":"markdown","f2bcc046":"markdown","b2de79a2":"markdown","6045209b":"markdown","acd1af24":"markdown","65d5918d":"markdown","6c2d95a5":"markdown","b983bc5e":"markdown","987d3e9c":"markdown","632d4958":"markdown"},"source":{"3717bdc7":"import IPython\nIPython.display.HTML('<div class=\"flourish-embed flourish-bar-chart-race\" data-src=\"visualisation\/1977187\" data-url=\"https:\/\/flo.uri.sh\/visualisation\/1977187\/embed\"><script src=\"https:\/\/public.flourish.studio\/resources\/embed.js\"><\/script><\/div>')","bd0d7fc9":"import pandas as pd\nimport plotly.express as px","d7f6e9b3":"symptoms={'symptom':['Fever',\n        'Dry cough',\n        'Fatigue',\n        'Sputum production',\n        'Shortness of breath',\n        'Muscle pain',\n        'Sore throat',\n        'Headache',\n        'Chills',\n        'Nausea or vomiting',\n        'Nasal congestion',\n        'Diarrhoea',\n        'Haemoptysis',\n        'Conjunctival congestion'],'percentage':[87.9,67.7,38.1,33.4,18.6,14.8,13.9,13.6,11.4,5.0,4.8,3.7,0.9,0.8]}\n\nsymptoms=pd.DataFrame(data=symptoms,index=range(14))\n#symptoms","bf7d141a":"fig = px.pie(symptoms,\n             values=\"percentage\",\n             names=\"symptom\",\n             title=\"Symtoms of Coronavirus\",\n             template=\"seaborn\")\nfig.update_traces(rotation=90, pull=0.05, textinfo=\"value+percent+label\")\nfig.show()","942c5302":"link = \"https:\/\/api.covid19india.org\/csv\/latest\/state_wise.csv\"\ndf = pd.read_csv(link)\ndf = df.drop(df.index[0])\n#df","accc56a6":"Date = df['Last_Updated_Time'].values.tolist()\nState = df['State'].values.tolist()\nConfirmed = df['Confirmed'].values.tolist()\nRecovered = df['Recovered'].values.tolist()\nActive = df['Active'].values.tolist()\nDeaths = df['Deaths'].values.tolist()","664b7ad2":"import plotly.graph_objects as go\n\nfig = go.Figure(data=[\n    go.Bar(name='Active', x=State, y=Active),\n    go.Bar(name='Recovered', x=State, y=Recovered),\n    go.Bar(name='Deaths', x=State, y=Deaths)\n])\nfig.update_layout(\n    autosize=False,\n    width=950,\n    height=700,\n    margin=dict(\n        l=50,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    ),\n    paper_bgcolor=\"LightSteelBlue\",title='Statewise Covid19 Case on '+ str(Date[0][0:10]) + \" Last Update at\"+ str(Date[0][10:])\n)\n# Change the bar mode\nfig.update_layout(barmode='stack')\n#fig.update_layout(barmode='group')\n\nfig.show()","d6585412":"fig = px.pie(df, values=Confirmed, names=State, title='Statewise Confirmed Case')\nfig.show()","86a030f1":"import plotly.express as px\nfig = px.pie(df, values=Active, names=State, title='Statewise Active Case')\nfig.show()","b33bef61":"import plotly.express as px\nfig = px.pie(df, values=Deaths, names=State, title='Statewise Deaths Case')\nfig.show()","5c788483":"import plotly.express as px\nfig = px.pie(df, values=Recovered, names=State, title='Statewise Recovered Case')\n#fig.update_traces(rotation=60, pull=0.01)\nfig.show()","6d32a305":"import requests\nimport re \n\nlink2 = 'https:\/\/api.covid19india.org\/data.json'\nr = requests.get(link2)\nindia_Data = r.json()\n#india_Data.keys()\n#india_Data['cases_time_series'][-1]['date']","45ef6cd6":"india_Confirmed = []\nindia_Recovered = []\nindia_Deseased = []\ntimeStamp = []\nfor index in range(len(india_Data['cases_time_series'])):\n    india_Confirmed.append(int(re.sub(',','',india_Data['cases_time_series'][index]['totalconfirmed'])))\n    india_Recovered.append(int(re.sub(',','',india_Data['cases_time_series'][index]['totalrecovered'])))\n    india_Deseased.append(int(re.sub(',','',india_Data['cases_time_series'][index]['totaldeceased'])))\n    \n    timeStamp.append(india_Data['cases_time_series'][index]['date'])\n    \n\nfig = go.Figure()\n#fig = px.scatter(testingHistory,x=\"time_stamp\", y=\"testing_no\")\n\nfig = fig.add_trace(go.Scatter(x=timeStamp, y=india_Confirmed,\n                    mode='lines+markers',\n                    name='Confirmed Cases'))\nfig = fig.add_trace(go.Scatter(x=timeStamp, y=india_Recovered,\n                    mode='lines+markers',\n                    name='Recoverd Patients'))\nfig = fig.add_trace(go.Scatter(x=timeStamp, y=india_Deseased,\n                    mode='lines+markers',\n                    name='Deseased Patients'))\n\nfig = fig.update_layout(\n    title=\"India COVID-19 cases on  \" + str(india_Data['cases_time_series'][-1]['date']) + \"2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Cases\",\n    \n)\n\n\nfig.show()","1f155371":"link3 = \"https:\/\/api.covid19india.org\/v2\/state_district_wise.json\"\nr = requests.get(link3)\nstates_Data = r.json()\nfor i in range(len(states_Data[:])):\n    print(states_Data[i]['state'], '>>>', i)\n#telangana = 27","288dfc53":"telangana = 27\ndistrict = []\ndistrict_Confirmed = []\ndistrict_Recovered = []\ndistrict_Deseased = []\ndistrict_Active = []\nfor index in range(len(states_Data[telangana]['districtData'])):\n    district.append(str(re.sub(',','',states_Data[telangana]['districtData'][index]['district'])))\n    district_Confirmed.append(int(states_Data[telangana]['districtData'][index]['confirmed']))\n    district_Recovered.append(int(states_Data[telangana]['districtData'][index]['recovered']))\n    district_Deseased.append(int(states_Data[telangana]['districtData'][index]['deceased']))\n    district_Active.append(int(states_Data[telangana]['districtData'][index]['active']))","4440d70f":"import plotly.graph_objects as go\n\nfig = go.Figure(data=[\n    go.Bar(name='Active', x=district, y=district_Active),\n    go.Bar(name='Recovered', x=district, y=district_Recovered),\n    go.Bar(name='Deaths', x=district, y=district_Deseased)\n])\nfig.update_layout(\n    autosize=False,\n    width=950,\n    height=700,\n    margin=dict(\n        l=50,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    ),\n    paper_bgcolor=\"LightSteelBlue\",title='Statewise Covid19 Case on '+ str(Date[0][0:10])\n)\n# Change the bar mode\nfig.update_layout(barmode='stack')\n#fig.update_layout(barmode='group')\n\nfig.show()","a8bd5dae":"link3 = \"https:\/\/api.covid19india.org\/v2\/state_district_wise.json\"\nr = requests.get(link3)\nstates_Data = r.json()\n#states_Data[9]\ngujrat = 13","9ea0e467":"district = []\ndistrict_Confirmed = []\ndistrict_Recovered = []\ndistrict_Deseased = []\ndistrict_Active = []\nfor index in range(len(states_Data[gujrat]['districtData'])):\n    district.append(str(re.sub(',','',states_Data[gujrat]['districtData'][index]['district'])))\n    district_Confirmed.append(int(states_Data[gujrat]['districtData'][index]['confirmed']))\n    district_Recovered.append(int(states_Data[gujrat]['districtData'][index]['recovered']))\n    district_Deseased.append(int(states_Data[gujrat]['districtData'][index]['deceased']))\n    district_Active.append(int(states_Data[gujrat]['districtData'][index]['active']))","974be265":"import plotly.graph_objects as go\n\nfig = go.Figure(data=[\n    go.Bar(name='Active', x=district, y=district_Active),\n    go.Bar(name='Recovered', x=district, y=district_Recovered),\n    go.Bar(name='Deaths', x=district, y=district_Deseased)\n])\nfig.update_layout(\n    autosize=False,\n    width=950,\n    height=700,\n    margin=dict(\n        l=50,\n        r=50,\n        b=100,\n        t=100,\n        pad=4\n    ),\n    paper_bgcolor=\"LightSteelBlue\",title='Gujrat Covid19 statewise Case on '+ str(Date[1][0:10])\n)\n# Change the bar mode\nfig.update_layout(barmode='stack')\n#fig.update_layout(barmode='group')\n\nfig.show()","351867b9":"# 1st Derivative\nimport numpy as np\ntable2 = (np.gradient(india_Confirmed))","477b777c":"fig = go.Figure()\nfig = fig.add_trace(go.Scatter(x=timeStamp, y=table2,\n                    mode='lines+markers',\n                    name='Curve rate'))\n\nfig = fig.update_layout(\n    title=\"India COVID-19 confirm Rate on  \" + str(india_Data['cases_time_series'][-1]['date']) + \"2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Rate\",\n    \n)\n\n\nfig.show()","45563f25":"# 2nd Derivative\nimport numpy as np\ntable3 = np.gradient(np.gradient(india_Confirmed))","b60f11a9":"fig = go.Figure()\nfig = fig.add_trace(go.Scatter(x=timeStamp, y=table3,\n                    mode='lines+markers',\n                    name='Curve rate'))\n\nfig = fig.update_layout(\n    title=\"India COVID-19 confirm Rate on  \" + str(india_Data['cases_time_series'][-1]['date']) + \"2020\",\n    xaxis_title=\"Date\",\n    yaxis_title=\"Rate\",\n    \n)\n\n\nfig.show()","76188a6a":"## Gujrat Districtwise COVID-19 Updates","f2d85432":"## COVID-19 Statewise Update in INDIA","f2bcc046":"## Derivatives","b2de79a2":"## Telangana Districtwise COVID-19 Updates","6045209b":"## Statewise Active Case","acd1af24":"## Daily Update","65d5918d":"## Statewise Recovered Case","6c2d95a5":"# COVID19 Real time Updates INDIA:\n@author: Neeraj Tiwari","b983bc5e":"## Statewise Confirmed Case","987d3e9c":"## Symptoms of Coronavirus","632d4958":"## Statewise Death Case"}}