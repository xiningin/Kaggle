{"cell_type":{"03ff8aad":"code","e3ecfe92":"code","c4abea76":"code","0b170168":"code","f54f044e":"code","c0a3e10f":"code","a48f5825":"code","8af91a74":"code","50e58d90":"code","e9f4bd9a":"code","fbd63eb1":"code","f86d7d62":"code","52067912":"code","744b9454":"code","8bffe0d5":"code","c07309b2":"markdown","c58249a8":"markdown","d92132bc":"markdown","542e8459":"markdown","300567ad":"markdown","ffdd1d72":"markdown","dfaa2da9":"markdown","42093953":"markdown","fc7d02ce":"markdown","8a0a0730":"markdown","3e741f55":"markdown","a623ad36":"markdown","38c84545":"markdown","f06efb47":"markdown","162ac447":"markdown"},"source":{"03ff8aad":"import pandas as pd\nspotify=pd.read_csv('\/kaggle\/input\/top50spotify2019\/top50.csv',encoding='latin_1') #we need the latin encoding for pandas to read it correctly\nspotify.head()","e3ecfe92":"#Basic information\nspotify.info()","c4abea76":"#baisc statistics about the dataset\nspotify.describe()","0b170168":"#features of the dataset\nspotify.columns","f54f044e":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","c0a3e10f":"#plotting the most popular songs\nplt.figure(figsize=(9,25))\nsns.barplot(data=spotify,x='Popularity',y='Track.Name')\nplt.show()","a48f5825":"#plotting the most songs by genre\nsns.catplot(y='Genre',kind='count',\n           edgecolor=\"0.5\",data=spotify)\nplt.show()","8af91a74":"#which artist has the most songs in the Top 50 playlist?\nsns.catplot(y='Artist.Name',kind='count',\n           edgecolor=\"0.6\",data=spotify)\nplt.show()","50e58d90":"#what is the optimal bpm for a song?\nplt.figure(figsize=(25,9))\nsns.countplot(data=spotify,x='Beats.Per.Minute')\nplt.title('Beats\/min')\nplt.show()","e9f4bd9a":"#Energy, Danceability and Loudness\n#2D Plotting\n\n#Energy\nplt.figure(figsize=(8,4))\nsns.distplot(spotify['Energy'],kde=False,bins=15,color='red')\nplt.title('Energy')\nplt.show()\n\n#Danceability\nplt.figure(figsize=(8,4))\nsns.distplot(spotify['Danceability'],kde=False,bins=15,color='blue')\nplt.title('Danceability')\nplt.show()\n\n#Loudness\nplt.figure(figsize=(8,4))\nsns.distplot(spotify['Loudness..dB..'],kde=False,bins=15,color='green')\nplt.title('Loudness')\nplt.xlabel('Loudness(dB)')\nplt.show()\n","fbd63eb1":"#3D Plotting of Energy, Danceability and Loudness (with Plotly)\nimport plotly.graph_objects as go\n\n#generate charts\nfig = go.Figure(data = [go.Scatter3d(\n    x = spotify['Energy'],\n    y = spotify['Danceability'],\n    z = spotify['Loudness..dB..'],\n    text = spotify['Track.Name'],  ## Additional texts which will be shown\n    mode = 'markers',\n    marker = dict(\n    color = spotify['Popularity'],\n    colorbar_title = 'Popularity',\n    colorscale = 'blues'\n    )\n)])\n\n#set variables and size\nfig.update_layout(width=800, height=800, title = 'Energy, Danceability & Loudness of Songs',\n                  scene = dict(xaxis=dict(title='Energy'),\n                               yaxis=dict(title='Danceability'),\n                               zaxis=dict(title='Loudness')\n                               )\n                 )\n\nfig.show()\n","f86d7d62":"#relating speechiness and acousticness with popularity\nplt.figure(figsize=(12,6))\nsns.violinplot(x='Speechiness.',y='Popularity',data=spotify)\nplt.xlabel('Speechiness')\nplt.ylabel('Popularity')\nplt.title('Speechiness vs Popularity')\nplt.show()\n\nplt.figure(figsize=(10,10))\nsns.despine(offset=10,left=True)\nsns.jointplot(data=spotify,\n             x='Acousticness..',\n             y='Popularity',\n             kind='kde',\n             space=1)\n\nplt.title('Acousticness vs Popularity')\nplt.show()","52067912":"#looking at the length of songs\nimport plotly.express as px\n\nfig=px.line(spotify,y='Length.',x='Track.Name',title='Length distribution of songs')\nfig.show()","744b9454":"#plotting correlation between all variables\nplt.figure(figsize=(15,15))\nplt.title('Correlation between all variables')\nsns.heatmap(data=spotify.corr(),\n           annot=True,\n           square=True,\n           linewidths=1)\nplt.show()","8bffe0d5":"#all histograms with data columns\nsns.pairplot(spotify)\nplt.plot()\nplt.show()","c07309b2":"# Most Popular Songs","c58249a8":"# General Information","d92132bc":"# Correlation between all variables","542e8459":"# Optimal BPM","300567ad":"**Inference**: Bad Guy took over people's hearts","ffdd1d72":"# Popularity of Artists","dfaa2da9":"# **Exploratory Data Analysis**","42093953":"![](https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/56\/Spotify_logo_horizontal_black.jpg\/800px-Spotify_logo_horizontal_black.jpg)\n\nFrom the page of 'Top 50 Spotify Songs - 2019':\nThe dataset has several variables about the top 50 listened songs on Spotify in 2019.\n\n**Contents of the dataset**\n* 50 songs\n* 13 variables\n\n**Data Extracted from**\n http:\/\/organizeyourmusic.playlistmachinery.com\/\n\n","fc7d02ce":"# 2D and 3D Plots for Energy,Danceability and Loudness","8a0a0730":"**Inference**: 176 bpm seems to be the most preffered","3e741f55":"# Songs by Genre","a623ad36":"# Length of the songs","38c84545":"# Speechiness and Acousticness","f06efb47":"**Inference**: Ed Sheeran had a great 2019","162ac447":"**Inference**: Dance Pop was on most people's mind in 2019"}}