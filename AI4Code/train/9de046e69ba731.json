{"cell_type":{"ea54d0da":"code","23700563":"code","fceb0544":"code","00c3c542":"code","3388dd55":"code","e8cf56b1":"code","f721a6c4":"code","17fe27c1":"code","532375c5":"code","65bc9f27":"code","1ae11e98":"code","daa29248":"code","27ec1ad1":"code","33b0c54c":"code","101cc8a2":"code","e11fdc25":"code","6074d569":"code","2af0c189":"code","d4bf8547":"code","fe89122a":"code","ae2c813f":"code","4555a127":"code","c2b8a866":"code","37140444":"code","80565b64":"markdown","b14de28f":"markdown","4d142a56":"markdown","dab4a25f":"markdown","322a76bd":"markdown","1fc2e4b8":"markdown","c01f71be":"markdown","f32a0724":"markdown","81b15b57":"markdown","ae83f368":"markdown","76f0919f":"markdown","2a8b44b6":"markdown","18feee34":"markdown","4520506d":"markdown","712a9a5f":"markdown","eaaf707b":"markdown","f7cb8649":"markdown","564b75c1":"markdown","bf57f883":"markdown","030671d3":"markdown","54069289":"markdown"},"source":{"ea54d0da":"\n%reset -f\nfrom sklearn.cluster import KMeans\n#For creating elliptical-shaped clusters\nfrom sklearn.datasets import make_blobs\n#OS related\nimport os\n#Data manipulation\nimport pandas as pd\nimport numpy as np\n\n#for math functions\nimport math\n\n# Data processing \nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import normalize\n\n#Graphing\nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go \nimport plotly.express as px\nfrom matplotlib.colors import LogNorm\nimport seaborn as sns\n#TSNE\nfrom sklearn.manifold import TSNE\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\n\nfrom sklearn.mixture import GaussianMixture\n\nimport scipy","23700563":"os.chdir(\"..\/input\/customer-segmentation-tutorial-in-python\")\nos.listdir()            # List all files in the folder","fceb0544":"dfcust=pd.read_csv('Mall_Customers.csv')\ndfcust.head()\nprint(\"No of Customers:\",dfcust.shape[0])\nprint(\"No of Columns:\",dfcust.shape[1])","00c3c542":"dfcust.columns","3388dd55":"#rename column names\nnew_col_names  = {\n                 'Annual Income (k$)' :  'Annual_Income_k$',\n                 'Spending Score (1-100)' : 'Spending_Score_1_100',\n              }\ndfcust.rename(new_col_names,inplace=True,axis=1)\ndfcust.columns","e8cf56b1":"#Drop CustomerID..No use of This column\ndfcust.drop(columns = ['CustomerID'], inplace = True)\n# Add age_cat\ndfcust[\"age_cat\"] = pd.cut(\n                       dfcust['Age'],\n                       bins = [-1,29,55,110],           \n                       labels= [\"y\", \"m\", \"s\"]\n                      )\n","f721a6c4":"#Check null value\ndfcust.columns[dfcust.isnull().any()]\n#Two columns having Null values\n#Check how many Null Values\nprint(\"Number of Null Values:\\n\",dfcust[dfcust.columns[dfcust.isnull().any()]].isnull().sum())","17fe27c1":"\ndfSummary=dfcust.describe()\ndfSummary\ndfSummary=dfSummary.T\ndfSummary.plot(kind='bar',figsize = (20,8))","532375c5":"#Correlation coefficient : Annual Income Vs Spending Score\ng=sns.jointplot(dfcust['Annual_Income_k$'], dfcust.Spending_Score_1_100, kind = 'reg')\ns = scipy.stats.linregress(x = dfcust['Annual_Income_k$'],y = dfcust.Spending_Score_1_100)\ng.fig.suptitle(\"Correlation coefficient : Annual Income Vs Spending Score : \" + str(s[2]) )\n\n    \n#Observation  correlation coefficient : Not a good linear relation between Annual Income and Spending_Score\n","65bc9f27":"sns.jointplot(x='Age', y='Spending_Score_1_100', data=dfcust, kind='reg')  # reg, resid, kde, hex\n\n#\n#  Observation:  Youger customers are having more scores. Scores drastically decrease after age 40\n#","1ae11e98":"# Gender wise :Age cat Vs Speding Score \ng=sns.catplot(x = 'age_cat',\n            y = 'Spending_Score_1_100', \n              hue='Gender',\n            kind = 'bar',\n             \n              estimator=np.sum,\n            data = dfcust)\ng.fig.set_size_inches(17,15)\n#Spending Score is highest  for Middle Aged Customers\n#Seniors has least spending score\n#In Case of Middle aand Young: Females has more score than Male , but in Seniors Score is more for males\n","daa29248":"# Heat Map:Age,Gender Vs Speding Score\nplt.figure(figsize=(15,10))\ngrouped = dfcust.groupby(['Age','Gender'])\ndf_wq = grouped['Spending_Score_1_100'].sum().unstack()\nsns.heatmap(df_wq, cmap = plt.cm.coolwarm)\n#Most of the customers \n","27ec1ad1":"plt.figure(figsize=(15,4))\n\nsns.distplot(dfcust['Annual_Income_k$'])\nplt.title('Distribution of Annual Income', fontsize = 10)\nplt.xlabel('Annual Income Range')\nplt.ylabel('Count')\n","33b0c54c":"#box plot Gender vs Spending Score\nplt.figure(figsize=(15,4))\nsns.boxplot(x = 'Gender',       \n            y = 'Spending_Score_1_100',                 \n            data = dfcust,\n            \n            )\n","101cc8a2":"#box plot Gender vs Annual_Income_k\nsns.boxplot(x = 'Gender',       \n            y = 'Annual_Income_k$',                 \n            data = dfcust,\n            \n            )","e11fdc25":"#Correlation Map for all features\ndf_corr=dfcust.corr()\nplt.figure(figsize = (15, 9))\nsns.heatmap(df_corr, linecolor = 'black', linewidth = 1, annot = True)\nplt.title('Correlation of customer data\\'s features \\n Co Relation >0  means  poistive  co linear realtion \\n < 0 means opposite Relation ')\nplt.show()","6074d569":"#Drop Age Cat\ndfcust.drop(columns=['age_cat'],inplace=True)","2af0c189":"#Map Gender to numerical values\ndfcust.Gender.unique()\ndfcust['Gender'] = dfcust['Gender'].map({\n                                    'Male' : '0',\n                                    'Female' : '1'\n                                   }\n                               )\n\ndfcust.head()","d4bf8547":"ss =  StandardScaler()\ncc_ss=ss.fit_transform(dfcust)\ndf_out= pd.DataFrame(cc_ss, columns = dfcust.columns.values)\ndf_out","fe89122a":"bic = []\naic = []\nfor i in range(8):\n    gm = GaussianMixture(\n                     n_components = i+1,\n                     n_init = 10,\n                    max_iter = 100)\n    gm.fit(df_out)\n    bic.append(gm.bic(df_out))\n    aic.append(gm.aic(df_out))\nfig = plt.figure()\n\nplt.plot(range(1, 9), aic,marker=\"o\",label=\"aic\")\nplt.plot(range(1, 9), bic,marker=\"o\",label=\"bic\")\nplt.legend()\nplt.show()","ae2c813f":"gm = GaussianMixture(\n                     n_components = 2,\n                     n_init = 10,\n                     max_iter = 50)\ngm.fit(df_out)\n    \ntsne = TSNE(n_components = 2,perplexity=40.0)\ntsne_out = tsne.fit_transform(df_out)\n\n","4555a127":"#draw TSNE\nplt.scatter(tsne_out[:, 0], tsne_out[:, 1],\n            marker='o',\n            s=30,              # marker size\n            linewidths=5,      # linewidth of marker edges\n            c=gm.predict(df_out)   # Colour as per gm\n            )","c2b8a866":"densities = gm.score_samples(df_out)\ndensity_threshold = np.percentile(densities,4)\nanomalies      =     df_out[densities < density_threshold]      # Data of anomalous customers\n# Unanomalous data\nunanomalous =  df_out[densities >= density_threshold]      # Data of unanomalous customers\ndf_anomaly     =  pd.DataFrame(anomalies, columns = df_out.columns.values)\ndf_unanomaly = pd.DataFrame(unanomalous, columns = df_out.columns.values)","37140444":"#@author : Ashok sir \n#a few changes made by me\ndef densityplots(df1,df2, label1 = \"Anomalous\",label2 = \"Normal\"):\n    # df1 and df2 are two dataframes\n    # As number of features are 17, we have 20 axes\n    fig, axes = plt.subplots(nrows=1, ncols=4, figsize=(15,5))\n    ax = axes.flatten()\n    fig.tight_layout()\n   \n    for i,col in enumerate(df1.columns):\n        # https:\/\/seaborn.pydata.org\/generated\/seaborn.distplot.html\n        # For every i, draw two overlapping density plots in different colors\n        sns.distplot(df1[col],\n                     ax = ax[i],\n                     kde_kws={\"color\": \"k\", \"lw\": 3, \"label\": label1},   # Density plot features\n                     hist_kws={\"histtype\": \"step\", \"linewidth\": 2,\"alpha\": 1, \"color\": \"g\"}) # Histogram features\n        sns.distplot(df2[col],\n                     ax = ax[i],\n                     kde_kws={\"color\": \"red\", \"lw\": 3, \"label\": label2},\n                     hist_kws={\"histtype\": \"step\", \"linewidth\": 2,\"alpha\": 1, \"color\": \"b\"})\ndensityplots(df_anomaly, df_unanomaly, label2 = \"Unanomalous\")","80565b64":"* Males are earning more than females.Minimum income in case of males is more than females","b14de28f":"* Spending Score is highest  for Middle age-Cat Customers\n* Seniors has least spending score\n* In Case of Middle and Young age-Cat: Females has more score than Male , but in case of Senior : Score is more for males","4d142a56":"### Plotting of Data : Graphical representation  to find the relation between data","dab4a25f":"* Annual Income: Anamolous has Bi-modal curve. Un-Anamolous has significantly more income\n* Spending Score : Un-Anamolous has slightly more spending score","322a76bd":"### Clustering and Interpretation using Gaussian Mixture Method ","1fc2e4b8":"### Cleansing of Data","c01f71be":"### *Data Processing:* Standardization \n * Standardization : StandardScaler() is for column-wise standardization.","f32a0724":"### Call libraries\n","81b15b57":"### Set Directory","ae83f368":"* ***Data Dictionary for Credit Card dataset***\n * ***CustomerID :*** Identification of Customer\n * ***Gender :***  Male\/Female \n * ***AGE :***  Age of a customer\n * ***Annual Income :***  Annual Income of a Customer\n * ***Spending Score :*** Spending Score is something you assign to the customer based on your defined parameters like customer behavior and purchasing data\n ","76f0919f":"# TSNE Check","2a8b44b6":"#### Median of Spending Score\n * **Females :** 35-75\n * **Males :** 23-70\n * Again We can see females are shopping lovers","18feee34":"#### Find out how many GMM clusters using 'bic' and 'aic'.","4520506d":"### Load Data","712a9a5f":"# Anomalous clients vs Un-anomalous clients","eaaf707b":"* We can say that most of customers are around 30-32 & 35 age ","f7cb8649":"##### *from above graphical representation.we will fix 2 clusters*","564b75c1":"# Clustering of Mall Customer Segmentation Data using Gaussian Mixture Method (GMM)","bf57f883":"* Only few people are earning more than 100USD,Avg earning is 50-75 USD","030671d3":"* ***Dataset summarizes the score of 200 Customers based on 5 behavioral variables***","54069289":"####  Introduction\n\n### ***Gaussian Mixture Method*** : It is a  probabilistic model which is used to represent normally distributed subpopulations within an overall population.In Mixture mode subpopulation assigment is unknown.It allows the model to learn the subpopulation automatically,so we can say it is unsupervised learning.Clusters are elliptical-shaped\n\n### ***About Data Set*** : Dataset has  one notebook which consist customer information.Purpose is to do market basket analysis.So that market team can prepare strategy accordingly\n\n#### Contents of this workbook:\n * **Data Loading:** Load\/Read Data from file\n * **Cleansing of Data:** Rename columns,check Na values,fill\/drop na values\n * **Plotting of Data:** Graphing of data\n * **Data Processing:** Standardization  & Normalization\n * **Clustering and Interpretation using Gaussian Mixture Method :** How many GMM clusters using '*bic' and 'aic'*.Perform clustering\n * **TSNE Check :**  Check if your clusters do not overlap\n * **Anomalous clients vs Un-anomalous clients :** Anomalous clients where density less than 4%\n "}}