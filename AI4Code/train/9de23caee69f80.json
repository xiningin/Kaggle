{"cell_type":{"15857ddd":"code","f482638d":"code","dd10851e":"code","84b9d7b8":"code","6d775396":"code","397cd50a":"code","bd4637a0":"code","4e693066":"code","7357a2eb":"code","25000e46":"code","c75c5216":"code","d07a2eb4":"code","bfcc1556":"code","59a4d619":"code","1866e012":"code","7c37e3d5":"code","ebfea8aa":"code","b87b8263":"code","00fb62c7":"code","2fac01d8":"code","16a7c172":"code","e24725be":"code","0ea3d97f":"code","fddb50e3":"code","9da4ccda":"code","20238503":"code","a13cfbb7":"code","0581708e":"code","ae583ce0":"code","549c27ef":"markdown","189297ec":"markdown","cc3bbfc3":"markdown","3cf0ff61":"markdown","d5d084ac":"markdown","52dba9df":"markdown","62c035fb":"markdown","42d13bf4":"markdown","b3e9d024":"markdown","baaca94e":"markdown","967bad43":"markdown","ae5d3c6e":"markdown","669ef10f":"markdown","2560a96f":"markdown","d31391c7":"markdown","898dace9":"markdown"},"source":{"15857ddd":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn.linear_model import Ridge\nfrom sklearn import metrics\nimport seaborn as sns\nplt.style.use(\"bmh\")","f482638d":"# Load data\nboston_data = pd.read_csv(\"..\/input\/boston\/Boston.csv\")","dd10851e":"boston_data.head(15)","84b9d7b8":"boston_data.shape","6d775396":"boston_data.columns","397cd50a":"# check missing data\nboston_data.isnull().sum()","bd4637a0":"sns.pairplot(boston_data, x_vars=['crim', 'zn', 'indus'], y_vars=[\"medv\"])","4e693066":"sns.pairplot(boston_data, x_vars=['chas', 'nox', 'rm'], y_vars=[\"medv\"])","7357a2eb":"sns.pairplot(boston_data, x_vars=['age', 'dis', 'rad'], y_vars=[\"medv\"])","25000e46":"sns.pairplot(boston_data, x_vars=['tax', 'ptratio', 'black', 'lstat'], y_vars=[\"medv\"])","c75c5216":"sns.distplot(boston_data[\"medv\"])","d07a2eb4":"corrMatrix = boston_data.corr()\nfig, ax = plt.subplots(figsize=(18, 10))\nsns.heatmap(corrMatrix, annot=True)","bfcc1556":"boston_data.dtypes","59a4d619":"boston_data.describe()","1866e012":"# Now I will make all variables range from 0 to 1, because machine learning algorithms work better that way.\n\nfor column in boston_data.columns:\n    maxcolumn = boston_data[column].max()\n    if maxcolumn > 1:\n        boston_data[column] = boston_data[column] \/ maxcolumn","7c37e3d5":"boston_data.describe()","ebfea8aa":"# Split data\nboston_data_X = boston_data.drop(\"medv\", axis=1)\nboston_data_y = boston_data[\"medv\"]","b87b8263":"Xtrain, Xtest, ytrain, ytest = train_test_split(boston_data_X, boston_data_y, test_size=0.3, random_state=32)","00fb62c7":"linearparam = {\"fit_intercept\": [True, False], \"normalize\": [True, False], \"copy_X\": [True, False]}\nlineargrid = GridSearchCV(LinearRegression(), linearparam, cv=10)\nlineargrid.fit(Xtrain, ytrain)\nprint(\"Best Linear Regression estimator:\", lineargrid.best_estimator_)","2fac01d8":"lassoparam = {\"alpha\": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], \n              \"fit_intercept\": [True, False], \"normalize\": [True, False], \"copy_X\": [True, False]}\nlassogrid = GridSearchCV(Lasso(), lassoparam, cv=10)\nlassogrid.fit(Xtrain, ytrain)\nprint(\"Best Lasso Regression estimator:\", lassogrid.best_estimator_)","16a7c172":"ridgeparam = {\"alpha\": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], \n              \"fit_intercept\": [True, False], \"normalize\": [True, False], \"copy_X\": [True, False]}\nridgegrid = GridSearchCV(Ridge(), ridgeparam, cv=10)\nridgegrid.fit(Xtrain, ytrain)\nprint(\"Best Ridge Regression estimator:\", ridgegrid.best_estimator_)","e24725be":"ypredictedlinear = lineargrid.best_estimator_.predict(Xtest)\n\nmae = metrics.mean_absolute_error(ytest, ypredictedlinear)\nmse = metrics.mean_squared_error(ytest, ypredictedlinear)\nr2 = metrics.r2_score(ytest, ypredictedlinear)\n\nprint(\"Linear Regression performance:\")\nprint(\"MAE: {}\".format(mae))\nprint(\"MSE: {}\".format(mse))\nprint(\"R2 score: {}\".format(r2))","0ea3d97f":"ypredictedlasso = lassogrid.best_estimator_.predict(Xtest)\n\nmae = metrics.mean_absolute_error(ytest, ypredictedlasso)\nmse = metrics.mean_squared_error(ytest, ypredictedlasso)\nr2 = metrics.r2_score(ytest, ypredictedlasso)\n\nprint(\"Lasso Regression performance:\")\nprint(\"MAE: {}\".format(mae))\nprint(\"MSE: {}\".format(mse))\nprint(\"R2 score: {}\".format(r2))","fddb50e3":"ypredictedridge = ridgegrid.best_estimator_.predict(Xtest)\n\nmae = metrics.mean_absolute_error(ytest, ypredictedridge)\nmse = metrics.mean_squared_error(ytest, ypredictedridge)\nr2 = metrics.r2_score(ytest, ypredictedridge)\n\nprint(\"Ridge Regression performance:\")\nprint(\"MAE: {}\".format(mae))\nprint(\"MSE: {}\".format(mse))\nprint(\"R2 score: {}\".format(r2))","9da4ccda":"print(lineargrid.best_estimator_.intercept_)","20238503":"coeff_df = pd.DataFrame(lineargrid.best_estimator_.coef_,boston_data.columns[:-1],columns=['Coefficient'])","a13cfbb7":"coeff_df","0581708e":"plt.scatter(ytest, ypredictedlinear)","ae583ce0":"sns.distplot((ytest-ypredictedlinear),bins=50)","549c27ef":"* Houses with lower crime rate are more expensive than those with higher crime rate.\n* The proportion of residential land zoned doesn't seem to affect the price, neither the proportion of non-retail business acres.","189297ec":"Let's see how each characteristic affects the price of the house.","cc3bbfc3":"* Houses by the river can be less expensive.\n* Nitric oxides concentration has no effect on the price.\n* The higher the average number of rooms per dwelling, the higher the price of the house.","3cf0ff61":"There aren't missing values in this dataset.","d5d084ac":"## Data visualization","52dba9df":"# Boston House Price","62c035fb":"All values are numerical in this dataset, so there's no need to modify anything.","42d13bf4":"## Data preprocessing","b3e9d024":"Since this is a supervised learning problem, and the y values are continuous, I will try Linear Regression, Lasso Regression and Ridge Regression.","baaca94e":"The best estimator is Linear Regression.","967bad43":"This dataset contain the details of 506 houses. The details are:\n* **CRIM:**     per capita crime rate by town\n* **ZN:**       proportion of residential land zoned for lots over 25,000 sq.ft.\n* **INDUS:**    proportion of non-retail business acres per town\n* **CHAS:**     Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\n* **NOX:**      nitric oxides concentration (parts per 10 million)\n* **RM:**       average number of rooms per dwelling\n* **AGE:**      proportion of owner-occupied units built prior to 1940\n* **DIS:**      weighted distances to five Boston employment centres\n* **RAD:**      index of accessibility to radial highways\n* **TAX:**      full-value property-tax rate per 10,000 usd\n* **PTRATIO:**  pupil-teacher ratio by town\n* **B:**        1000(Bk - 0.63)^2 where Bk is the proportion of blacks by town\n* **LSTAT:**    % lower status of the population\n* **MEDV:**     Median value of owner-occupied homes in 1000's usd\n","ae5d3c6e":"* A higher full-value property-tax rate reduces the house price.\n* Pupil-teacher ratio by town doesn't relate to the house price.\n* Higher proportion of blacks makes the house more expensive.\n* Higher percentage of lower status of the population reduces the house price.","669ef10f":"Let's see the correlations between the variables.\n* A value near 1.0 indicates a positive correlation.\n* A value near -1.0 indicates a negative correlation.\n* And a value near zero indicates the absence of any correlation.","2560a96f":"## Model building","d31391c7":"* Although the cheapest houses are the ones with higher proportion of owner-occupied units built prior to 1940, age it's not important for the rest of the houses.\n* Houses with lower  distances to  Boston employment centres are expensier.\n* If the index of accessibility to radial highways is high, then the price of the house is low.","898dace9":"The objective of this notebook is to predict the price of a house in Boston considering its characteristics."}}