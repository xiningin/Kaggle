{"cell_type":{"c36f3cae":"code","a2ad7b22":"code","cad9c0b2":"markdown"},"source":{"c36f3cae":"import pandas as pd\nimport numpy as np\nimport glob\n\n\ntrain_book_files = glob.glob('\/kaggle\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/*')\ntrain_trade_files = glob.glob('\/kaggle\/input\/optiver-realized-volatility-prediction\/trade_train.parquet\/*')\n\nwrong_stocks = []\n\nfor book_fname, train_fname in zip(train_book_files, train_trade_files):\n    book_example = pd.read_parquet(book_fname)\n    trade_example = pd.read_parquet(train_fname)\n    if book_example.shape[0] != book_example.merge(trade_example, on=['time_id','seconds_in_bucket'], how='outer').shape[0]:\n        print(\"Shape mismatch found!\")\n        print(\"Stock_id =\", book_fname.partition('=')[-1])\n        print(\"Row num of book =\", book_example.shape[0])\n        print(\"Row num of outer join =\", book_example.merge(trade_example, on=['time_id','seconds_in_bucket'], how='outer').shape[0])\n        wrong_stocks.append(book_fname.partition('=')[-1])\n        \n","a2ad7b22":"for stock_id in wrong_stocks:\n    book_example = pd.read_parquet(f'\/kaggle\/input\/optiver-realized-volatility-prediction\/book_train.parquet\/stock_id={stock_id}')\n    trade_example =  pd.read_parquet(f'\/kaggle\/input\/optiver-realized-volatility-prediction\/trade_train.parquet\/stock_id={stock_id}')\n    merged = book_example.merge(trade_example, on=['time_id','seconds_in_bucket'], how='outer')\n    print(f\"Printing wrong trades for stock {stock_id}:\")\n    print(merged[merged.bid_price1.isna()])","cad9c0b2":"This notebook illustrates that for a given (stock_id, time_id, seconds_in_bucket), there may exist trade data but not book data.\n\nThis is probably a mistake in the data, that sould be accounted for. See more here: https:\/\/www.kaggle.com\/c\/optiver-realized-volatility-prediction\/discussion\/255129\n\n"}}