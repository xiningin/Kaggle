{"cell_type":{"3b19eb10":"code","df859059":"code","14697b94":"code","80724d1f":"code","5a5b28c0":"code","58faf214":"code","c132bc4a":"code","10c065b0":"code","1779668c":"code","e19535e5":"code","e9a1b3da":"markdown"},"source":{"3b19eb10":"# loading packages\n\nimport pandas as pd\nimport numpy as np\n\n#\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\n\n#\n\nimport seaborn as sns\nimport plotly.express as px\n\n#\n\nimport os\nimport random\nimport re\nimport math\nimport time\n\nfrom tqdm import tqdm\nfrom tqdm.keras import TqdmCallback\n\n\nfrom pandas_summary import DataFrameSummary\n\nimport warnings\n\n\nwarnings.filterwarnings('ignore') # Disabling warnings for clearer outputs\n\n\n\nseed_val = 42\nrandom.seed(seed_val)\nnp.random.seed(seed_val)\n","df859059":"# Setting color palette.\norange_black = [\n    '#fdc029', '#df861d', '#FF6347', '#aa3d01', '#a30e15', '#800000', '#171820'\n]\n\n# Setting plot styling.\nplt.style.use('ggplot')","14697b94":"base_path = '\/kaggle\/input\/siim-isic-melanoma-classification'\ntrain_img_path = '\/kaggle\/input\/siim-isic-melanoma-classification\/jpeg\/train\/'\ntest_img_path = '\/kaggle\/input\/siim-isic-melanoma-classification\/jpeg\/test\/'\nimg_stats_path = '\/kaggle\/input\/melanoma2020imgtabular'","80724d1f":"# Loading train and test data.\n\ntrain = pd.read_csv(os.path.join(base_path, 'train.csv'))\ntest = pd.read_csv(os.path.join(base_path, 'test.csv'))\nsample = pd.read_csv(os.path.join(base_path, 'sample_submission.csv'))","5a5b28c0":"train.head()","58faf214":"# Checking train and test columns\/rows.\n\nprint(\n    f'Train data has {train.shape[1]} features, {train.shape[0]} observations and Test data {test.shape[1]} features, {test.shape[0]} observations.\\nTrain features are:\\n{train.columns.tolist()}\\nTest features are:\\n{test.columns.tolist()}'\n)\n\n","c132bc4a":"# Renaming train\/test columns:\n\ntrain.columns = [\n    'img_name', 'id', 'sex', 'age', 'location', 'diagnosis',\n    'benign_malignant', 'target'\n]\ntest.columns = ['img_name', 'id', 'sex', 'age', 'location']","10c065b0":"#Taking Random Sample of Train Data\ntrain.sample(6)","1779668c":"#Taking Random Sample of Test Data\ntest.sample(6)","e19535e5":"#Check How Age and Sex depends upon being benign or maigant.\nsns.boxplot(x=train['sex'],y=train['age'],hue=train['target'],data=train)","e9a1b3da":"\n# Loading the Data\n\nWe'll continue by loading metadata we're given. Train data has 8 features, 33126 observations and Test data 5 features, 10982 observations.\nTrain Dataset Consists Of:\n\n    image name -> the filename of specific image for the train set\n    patient_id -> identifies the unique patient\n    sex -> gender of the patient\n    age_approx -> approx age of the patient at time of scanning\n    anatom_site_general_challenge -> location of the scan site\n    diagnosis -> information about the diagnosis\n    benign_malignant - indicates scan result if it's malignant or benign\n    target -> same as above but better for modelling since it's binary\n\nAnd the next dataset we going to inspect test. It has same features as train set except for scan results, well that's why it's test set right?!\nTest Dataset Consists Of:\n\n    image name -> the filename of specific image for the train set\n    patient_id -> identifies the unique patient\n    sex -> gender of the patient\n    age_approx -> approx age of the patient at time of scanning\n    anatom_site_general_challenge -> location of the scan site\n\n[](http:\/\/)"}}