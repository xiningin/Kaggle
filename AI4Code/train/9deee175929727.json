{"cell_type":{"aaee941b":"code","c0ffc6f4":"code","8473c9b8":"code","5f249b09":"code","a52230ce":"code","239fc37c":"code","2aa31cdd":"code","028f4b1a":"code","a078dbba":"code","aa517f08":"code","4b0a9738":"code","edaa9dc1":"code","88b4a51f":"code","47efa7be":"code","a536c21c":"code","9706a681":"code","4576855d":"code","b910907e":"code","c323c532":"code","da1cf30c":"code","b7db9fe7":"markdown"},"source":{"aaee941b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c0ffc6f4":"def printline(no_of_lines):\n    print('_' * no_of_lines)","8473c9b8":"import plotly\nprint(plotly.__version__)\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nimport seaborn as sns; sns.set()\nimport matplotlib.pyplot as plt\n\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)","5f249b09":"df = pd.read_csv('..\/input\/Admission_Predict.csv')\nprint(df.columns)\nprintline(100)\nprint(df.info())","a52230ce":"df1 = pd.read_csv('..\/input\/Admission_Predict_Ver1.1.csv')\nprint(df1.columns)\nprintline(100)\nprint(df1.info())","239fc37c":"dataset = pd.concat([df,df1])\nprint(dataset.columns)\nprintline(100)\nprint(dataset.describe())","2aa31cdd":"dataset","028f4b1a":"plt.xlabel(\"Student Research record\")\nplt.ylabel(\"No. of Student\")\nsns.barplot( x=[\"Done Research\",\"Not Done Research\"],\n            y=[len(dataset[dataset[\"Research\"] == 1]), len(dataset[dataset[\"Research\"] == 0])])","a078dbba":"print(dataset.columns)\nfig, ax = plt.subplots()\nsns.distplot(dataset[\"CGPA\"], bins=25, color=\"g\", ax=ax)\nplt.show()","aa517f08":"corr_table = dataset.corr()\nplt.figure(figsize=(10,8))\nsns.heatmap(corr_table,annot=True)\nplt.show()","4b0a9738":"X_col = ['GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR ', 'CGPA']\nX_data = dataset[X_col]\ny_data = dataset['Chance of Admit ']","edaa9dc1":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\nfrom sklearn.tree import DecisionTreeRegressor","88b4a51f":"X_train, X_val, y_train, y_val = train_test_split(X_data, y_data, test_size=0.20, random_state=42)","47efa7be":"reg = DecisionTreeRegressor().fit(X_train, y_train)","a536c21c":"y_pred = reg.predict(X_val) ","9706a681":"r2_score(y_val, y_pred)  ","4576855d":"from joblib import dump, load\ndump(reg, 'gre.joblib') ","b910907e":"clf = load('..\/input\/gre.joblib') ","c323c532":"y_pred = clf.predict(X_val) \nr2_score(y_val, y_pred)  ","da1cf30c":"os.chdir(\"\/kaggle\/input\")\npath = os.getcwd()\nprint(path)\nos.chmod(path,777)","b7db9fe7":"## Appying Machine leaning models"}}