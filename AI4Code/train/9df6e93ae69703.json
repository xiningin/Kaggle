{"cell_type":{"2027e3f1":"code","5fc1da9a":"code","a298cbb5":"code","c33ed67a":"code","5c1b3b96":"code","3206aaa1":"code","6198e3a7":"code","cf8dac3d":"code","9e695fce":"code","c50118b0":"code","7a9b77d9":"code","b8842710":"code","20115e7d":"code","f7a62f88":"code","6752ec35":"code","8877a65a":"code","cc2d1076":"code","876c3134":"code","c66f00d1":"code","ac05ac04":"code","2aebec5e":"code","e33eaf75":"code","e4398cd4":"code","c1f686b2":"code","1ecc0ddb":"code","85fb8e0f":"code","047abd9b":"code","3d2a3227":"code","db9be4d8":"code","ce035dfd":"code","7c17d6da":"code","c4f8d82a":"code","beb339c7":"code","4a11a685":"code","744ddd10":"code","43799a87":"code","56e33634":"code","63cdfa7d":"markdown","f14f3189":"markdown","d476e372":"markdown","2a39a10a":"markdown","0b8f94e2":"markdown","3ff03c46":"markdown","4b4f6c61":"markdown","2123f520":"markdown","af3afa69":"markdown","d7367175":"markdown","e32181c7":"markdown","80968f1f":"markdown","abf7fa38":"markdown","d0cf8675":"markdown","1fafb1ee":"markdown","1995e780":"markdown"},"source":{"2027e3f1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5fc1da9a":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nimport warnings \nwarnings.filterwarnings('ignore')\nfrom sklearn.linear_model import SGDRegressor,GammaRegressor,Lasso,GammaRegressor,ElasticNet,Ridge\nfrom sklearn.linear_model import RANSACRegressor,HuberRegressor, BayesianRidge,LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor, BaggingRegressor, AdaBoostRegressor, GradientBoostingRegressor, ExtraTreesRegressor  \nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor # Decision Tree Regression\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.pipeline import Pipeline # Streaming pipelines\nfrom sklearn.model_selection import learning_curve, validation_curve, GridSearchCV # Model evaluation\nfrom sklearn.preprocessing import StandardScaler","a298cbb5":"data=pd.read_csv('\/kaggle\/input\/concrete-compressive-strength\/Concrete Compressive Strength.csv')","c33ed67a":"data","5c1b3b96":"data.columns","3206aaa1":"data.info()","6198e3a7":"data.describe()","cf8dac3d":"data.isnull().sum()","9e695fce":"col=data.columns.to_list()\ncol","c50118b0":"data.hist(figsize=(15,10),color='red')\nplt.show()","7a9b77d9":"\ni=1\nplt.figure(figsize = (15,20))\nfor col in data.columns:\n    plt.subplot(4,3,i)\n    sns.boxplot(x = data[col], data = data)\n    i+=1","b8842710":"i=1\nplt.figure(figsize = (18,18))\nfor col in data.columns:\n    plt.subplot(4,3,i)\n    sns.scatterplot(data=data,x='Concrete compressive strength(MPa, megapascals) ',y=col)\n    i+=1","20115e7d":"plt.figure(figsize=(10,10))\nsns.heatmap(data.corr(),linewidths=1,cmap='PuBuGn_r',annot=True)","f7a62f88":"correlation=data.corr()['Concrete compressive strength(MPa, megapascals) '].sort_values()","6752ec35":"correlation.plot(kind='barh',color='green')","8877a65a":"X=data.drop(columns='Concrete compressive strength(MPa, megapascals) ')\nY=data[['Concrete compressive strength(MPa, megapascals) ']]","cc2d1076":"sc=StandardScaler()\nX_scaled=sc.fit_transform(X)\nX_scaled=pd.DataFrame(X_scaled,columns=X.columns)","876c3134":"x_train,x_test,y_train,y_test=train_test_split(X_scaled,Y,test_size=.30,random_state=0)","c66f00d1":"lr=LinearRegression()\nsgd=SGDRegressor()\nlasso=Lasso()\nridge=Ridge()\nrf=RandomForestRegressor()\ndt=DecisionTreeRegressor()\ngboost=GradientBoostingRegressor()\nbagging=BaggingRegressor()\nadboost=AdaBoostRegressor()\nknn=KNeighborsRegressor()\netr=ExtraTreesRegressor()\ngamma=GammaRegressor()","ac05ac04":"algo=[lr,sgd,lasso,ridge,rf,dt,gboost,bagging,adboost,knn,etr]","2aebec5e":"model=[]\naccuracy_test=[]\naccuracy_train=[]\nfor i in range(len(algo)):\n    algo[i].fit(x_train,y_train)\n    accuracy_train.append(algo[i].score(x_train,y_train))\n    accuracy_test.append(algo[i].score(x_test,y_test))\n    model.append(algo[i])\n    ","e33eaf75":"mod=pd.DataFrame([model,accuracy_train,accuracy_test]).T\nmod.columns=['model','score_train','score_test']\nmod","e4398cd4":"etr1=ExtraTreesRegressor()","c1f686b2":"rs=[]\nscore=[]\nfor i in range(1,200,1):\n    x_train,x_test,y_train,y_test=train_test_split(X_scaled,Y,test_size=.30,random_state=i)\n    etr1.fit(x_train,y_train)\n    score.append(etr1.score(x_test,y_test))\n    rs.append(i)","1ecc0ddb":"plt.figure(figsize=(20,6))\nplt.plot(rs,score)","85fb8e0f":"for i in range(len(score)):\n    print(rs[i],score[i])","047abd9b":"x_train,x_test,y_train,y_test=train_test_split(X_scaled,Y,test_size=.30,random_state=77)\netr2=ExtraTreesRegressor()","3d2a3227":"etr2.fit(x_train,y_train)\netr2.score(x_train,y_train)","db9be4d8":"etr2.score(x_test,y_test)","ce035dfd":"y_test_pred=etr2.predict(x_test)","7c17d6da":"y_test1=y_test.copy()\ny_test1['pred']=y_test_pred","c4f8d82a":"y_test1.corr()","beb339c7":"from sklearn.metrics import  mean_squared_error,r2_score","4a11a685":"mean_squared_error(y_test1[ 'Concrete compressive strength(MPa, megapascals) '],y_test1['pred'])","744ddd10":"rsme=np.sqrt(mean_squared_error(y_test1[ 'Concrete compressive strength(MPa, megapascals) '],y_test1['pred']))\nrsme","43799a87":"r2_score(y_test1[ 'Concrete compressive strength(MPa, megapascals) '],y_test1['pred'])","56e33634":"plt.barh(X.columns,etr2.feature_importances_)","63cdfa7d":"#### we can see that compressive strength is highly correlated with cement","f14f3189":"#### we can see that extra tree regressor has the highest accuracy level =90.7%,so we choose for our final model building","d476e372":"#### here we have found some outliers,but we did't remove it due to getting loss of data","2a39a10a":"### UNIVARIATE ANALYSIS","0b8f94e2":"#### we can see that at random state =77,we get a accuracy=94.39%","3ff03c46":"## MODEL SELECTION","4b4f6c61":"### EXPLORATORY DATA ANALYSIS","2123f520":"#### no missing is present","af3afa69":"#### all the variable are numeric","d7367175":"#### we can see that root mean sqaure error is only 4.15 , which shows that our model is very good","e32181c7":"#### Data Characteristics:\n\nThe actual concrete compressive strength (MPa) for a given mixture under a\nspecific age (days) was determined from laboratory. Data is in raw form (not scaled).\n\nSummary Statistics:\n\nNumber of instances (observations): 1030\nNumber of Attributes: 9\nAttribute breakdown: 8 quantitative input variables, and 1 quantitative output variable\nMissing Attribute Values: None\n\nVariable Information:\n\nGiven is the variable name, variable type, the measurement unit and a brief description.\nThe concrete compressive strength is the regression problem. The order of this listing\ncorresponds to the order of numerals along the rows of the database.\n\nName -- Data Type -- Measurement -- Description\n\nCement (component 1) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nBlast Furnace Slag (component 2) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nFly Ash (component 3) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nWater (component 4) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nSuperplasticizer (component 5) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nCoarse Aggregate (component 6) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nFine Aggregate (component 7) -- quantitative -- kg in a m3 mixture -- Input Variable\n\nAge -- quantitative -- Day (1~365) -- Input Variable\n\nConcrete compressive strength -- quantitative -- MPa -- Output Variable","80968f1f":"#### we can see that cement, superplasticizer,age,are +vely correlated, while water ,fine aggregate are negatively correlated with compressive strength.","abf7fa38":"#### we can also see that age and cement is most important feature ","d0cf8675":"#### we can see here the accuracy is to be 97.17%","1fafb1ee":"### MODEL BUILDING","1995e780":"### BIVARIATE ANALYSIS"}}