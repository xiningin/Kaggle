{"cell_type":{"1ed25200":"code","7e162d76":"code","3caa35a5":"code","25a6ddad":"code","d76c9e26":"code","278e7ac9":"code","47db2e7d":"code","28ca9788":"code","32b934b1":"code","e40d74ac":"code","8482eb14":"code","9eb55995":"code","a672787a":"code","2d6f1ea3":"code","06fd8d43":"code","fe3f1776":"code","c41d8d2d":"code","3fa9b1a5":"code","c06eebd9":"code","ce049fcb":"code","75900d4d":"code","5bf13e0c":"code","87cefb80":"code","069c9cfc":"code","45932404":"code","10d44620":"code","46e3e341":"markdown","aca2880d":"markdown"},"source":{"1ed25200":"# To scrap the code, you must access the URLs and save the html file localy.","7e162d76":"# Import Dependencies\nfrom bs4 import BeautifulSoup\nimport os\nimport json\nimport pandas as pd\nimport numpy as np","3caa35a5":"# Ranking Page\nfilepath = os.path.join(\"..\/input\/world-university-rankings-2021\/World University Rankings - Ranking.html\")\nwith open(filepath, encoding='utf-8') as file:\n    htmlRanking = file.read()","25a6ddad":"# Create BeautifulSoup object; parse with 'html.parser'\nsoupRanking = BeautifulSoup(htmlRanking, 'html.parser')","d76c9e26":"# Retrieve the anchors for all university names\nanchorTitles = soupRanking.find_all('a', class_='ranking-institution-title')\n\n# Create empty list\nuniversitiesNames = []\n\n# loop over results to get the data\nfor title in anchorTitles:\n    name = title.text\n    universitiesNames.append(name)","278e7ac9":"# Retrieve the parent divs for locations\nanchorLocations = soupRanking.find_all('div', class_='location')\n\n# Create empty list\nuniversitiesLocations = []\n\n# Loop over results to get the data\nfor locations in anchorLocations:\n    country = locations.find('a').text\n    universitiesLocations.append(country)","47db2e7d":"# Retrieve the rows for get stats - Number of Students\ntrRole = soupRanking.find_all('td', class_='stats_number_students')\n\n# Create empty list\nnumberStudents = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    number = tr.text\n    numberStudents.append(number)","28ca9788":"# Retrieve the rows for get stats - Student Staff Ratio\ntrRole = soupRanking.find_all('td', class_='stats stats_student_staff_ratio')\n\n# Create empty list\nstudentsStaffRatio = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    ratio = tr.text\n    studentsStaffRatio.append(ratio)","32b934b1":"# Retrieve the rows for get stats - % of international students\ntrRole = soupRanking.find_all('td', class_='stats stats_pc_intl_students')\n\n# Create empty list\npercIntStudents = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    perc = tr.text\n    percIntStudents.append(perc)","e40d74ac":"# Retrieve the rows for get stats - female\/male ratio\ntrRole = soupRanking.find_all('td', class_='stats stats_female_male_ratio')\n\n# Create empty list\ngenderRatio = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    ratio = tr.text\n    genderRatio.append(ratio)","8482eb14":"# Create dictionary\nrankingTable = {\n    'title' : universitiesNames,\n    'location' : universitiesLocations,\n    'number students' : numberStudents,\n    'students staff ratio' : studentsStaffRatio,\n    'perc intl students' : percIntStudents,\n    'gender ratio' : genderRatio\n}","9eb55995":"# Transform dict to dataframe\nranking_df = pd.DataFrame.from_dict(rankingTable)\nranking_df['ranking'] = np.arange(ranking_df.shape[0])+1\nranking_df.set_index(['ranking', 'title', 'location'], inplace=True)\nranking_df","a672787a":"# Export to CSV\nranking_df.to_csv('.\/universities_ranking.csv', header=True, encoding='utf-8-sig')\n\n# Export to JSON\nranking_df.reset_index(inplace=True)\nranking_df.to_json('.\/universities_ranking.json', indent=4, orient=\"records\", index=True)","2d6f1ea3":"# Scores Page\nfilepath = os.path.join(\"..\/input\/world-university-rankings-2021\/World University Rankings - Scores.html\")\nwith open(filepath, encoding='utf-8') as file:\n    htmlScores = file.read()","06fd8d43":"# Create BeautifulSoup object; parse with 'html.parser'\nsoupScores = BeautifulSoup(htmlScores, 'html.parser')","fe3f1776":"# Retrieve the anchors for all university names\nanchorTitles = soupScores.find_all('a', class_='ranking-institution-title')\n\n# Create empty list\nuniversitiesNames = []\n\n# loop over results to get the data\nfor title in anchorTitles:\n    name = title.text\n    universitiesNames.append(name)","c41d8d2d":"# Retrieve the parent divs for locations\nanchorLocations = soupScores.find_all('div', class_='location')\n\n# Create empty list\nuniversitiesLocations = []\n\n# Loop over results to get the data\nfor locations in anchorLocations:\n    country = locations.find('a').text\n    universitiesLocations.append(country)","3fa9b1a5":"# Retrieve the rows for get stats - Overall Score\ntrRole = soupScores.find_all('td', class_='scores overall-score')\n\n# Create empty list\noverallScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    overallScore.append(score)","c06eebd9":"# Retrieve the rows for get stats - Teaching Score\ntrRole = soupScores.find_all('td', class_='scores teaching-score')\n\n# Create empty list\nteachingScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    teachingScore.append(score)","ce049fcb":"# Retrieve the rows for get stats - Research Score\ntrRole = soupScores.find_all('td', class_='scores research-score')\n\n# Create empty list\nresearchScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    researchScore.append(score)","75900d4d":"# Retrieve the rows for get stats - Citations Score\ntrRole = soupScores.find_all('td', class_='scores citations-score')\n\n# Create empty list\ncitationsScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    citationsScore.append(score)","5bf13e0c":"# Retrieve the rows for get stats - Industry Income Score\ntrRole = soupScores.find_all('td', class_='scores industry_income-score')\n\n# Create empty list\nindustryIncomeScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    industryIncomeScore.append(score)","87cefb80":"# Retrieve the rows for get stats - International Outlook Score\ntrRole = soupScores.find_all('td', class_='scores international_outlook-score')\n\n# Create empty list\nintlOutlookScore = []\n\n# Loop over results to get the data\nfor tr in trRole:\n    score = tr.text\n    intlOutlookScore.append(score)","069c9cfc":"# Create dictionary\nscoreTable = {\n    'title' : universitiesNames,\n    'location' : universitiesLocations,\n    'overall score' : overallScore,\n    'teaching score' : teachingScore,\n    'research score' : researchScore,\n    'citations score' : citationsScore,\n    'industry income score' : industryIncomeScore,\n    'intl outlook score' : intlOutlookScore\n}","45932404":"# Transform dict to dataframe\nscore_df = pd.DataFrame.from_dict(scoreTable)\nscore_df['ranking'] = np.arange(score_df.shape[0])+1\nscore_df.set_index(['ranking', 'title', 'location'], inplace=True)\nscore_df","10d44620":"# Export to CSV\nscore_df.to_csv('.\/universities_scores.csv', header=True, encoding='utf-8-sig')\n\n# Export to JSON\nscore_df.reset_index(inplace=True)\nscore_df.to_json('.\/universities_scores.json', indent=4, orient=\"records\", index=True)","46e3e341":"## Scores Page","aca2880d":"### Ranking Page"}}