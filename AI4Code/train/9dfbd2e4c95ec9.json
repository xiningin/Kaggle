{"cell_type":{"d06e8820":"code","c7b1f80e":"code","5638dde2":"code","98439611":"code","a42b3e88":"code","c9f0a0d2":"code","e0178a62":"code","1ee98d23":"code","24110437":"code","441cbe93":"code","15e67fa1":"code","6cb59a44":"code","ff5cc7fa":"code","e043daf1":"code","0b26fc3b":"code","e3236827":"code","86a62063":"code","e21bf71c":"code","b6731f0a":"code","a24ecaa8":"code","9d0c49bd":"code","88356efc":"code","caf1e1f0":"code","8dca094e":"code","c7371903":"markdown","23c7363e":"markdown","951fc793":"markdown","8c85c097":"markdown","597e0e5b":"markdown","972d6ae7":"markdown","1ed55e92":"markdown","14132e6f":"markdown","cd142a7b":"markdown","a62fac03":"markdown","9ce59182":"markdown","a23da822":"markdown","0bafeeff":"markdown","f3ab3b94":"markdown","b7ab9d70":"markdown"},"source":{"d06e8820":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\nimport warnings\n\nimport plotly.offline as py \nimport plotly.graph_objs as go\nfrom plotly import tools\npy.init_notebook_mode(connected=True)\n\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","c7b1f80e":"sp = pd.read_csv('..\/input\/StudentsPerformance.csv')\nsp.head()","5638dde2":"sp.shape","98439611":"sp.info()","a42b3e88":"sp.isnull().sum()","c9f0a0d2":"sp['Percentage'] = sp['math score'] + sp['reading score'] + sp['writing score']\nsp['Percentage'] = sp['Percentage'] \/ 3","e0178a62":"sp.sample(10)","1ee98d23":"sp.describe()","24110437":"sp.loc[(sp[\"math score\"] < 35) | (sp[\"reading score\"] < 35) |  (sp[\"writing score\"] < 35) , \"Result\"] = \"F\"\nsp.loc[(sp[\"math score\"] >= 35) & (sp[\"reading score\"] >= 35) &  (sp[\"writing score\"] >= 35) , \"Result\"] = \"P\"\n\nsp[\"Result\"].value_counts()","441cbe93":"def pie_plot(cnt, colors, text):\n    labels = list(cnt.index)\n    values = list(cnt.values)\n    \n    trace = go.Pie(labels=labels, \n                   values=values, \n                   hoverinfo='value+percent', \n                   title=text, \n                   textinfo='label', \n                   hole=.4, \n                   textposition='inside', \n                   marker=dict(colors = colors,\n                              ),\n                  )\n    return trace\n\n\nresults = sp[\"Result\"].value_counts()\ntrace = pie_plot(results, ['#09efef', '#b70333'], \"Results\")\n\npy.iplot([trace], filename='results')","15e67fa1":"def horizontal_bar_chart(cnt_srs, color):\n    trace = go.Bar(\n        y = cnt_srs.index,\n        x = cnt_srs.values,\n        showlegend = False,\n        orientation = 'h',\n        marker = dict(\n            color = color,\n        ),\n    )\n    return trace\n\ncnt_srs = sp['lunch'][sp['Result'] == 'P'].value_counts()\ntrace_1 = horizontal_bar_chart(cnt_srs, 'rgba(15, 255, 199, 0.6)')\n\ncnt_srs = cnt_srs = sp['gender'][sp['Result'] == 'P'].value_counts()\ntrace_2 = horizontal_bar_chart(cnt_srs, 'rgba(255, 15, 247, 0.6)')\n\ncnt_srs = cnt_srs = sp['race\/ethnicity'][sp['Result'] == 'P'].value_counts()\ntrace_3 = horizontal_bar_chart(cnt_srs, 'rgba(229, 21, 2, 0.6)')\n\ncnt_srs = sp['parental level of education'][sp['Result'] == 'P'].value_counts()\ntrace_4 = horizontal_bar_chart(cnt_srs, 'rgba(242, 255, 0, 0.6)')\n\ncnt_srs = sp['test preparation course'][sp['Result'] == 'P'].value_counts()\ntrace_5 = horizontal_bar_chart(cnt_srs, 'rgba(55, 255, 20, 0.6)')\n\n\nfig = tools.make_subplots(rows=3, cols=2, vertical_spacing=0.04, subplot_titles=[\"Lunch on Result\", \"Gender on Result\", \"Race on Result\", \n                                                                                 \"Parentaledu on Result\", \"Courseprep on Result\"])\n\nfig.append_trace(trace_1, 1, 1)\nfig.append_trace(trace_2, 1, 2)\nfig.append_trace(trace_3, 2, 1)\nfig.append_trace(trace_4, 2, 2)\nfig.append_trace(trace_5, 3, 1)\n\nfig['layout'].update(height=1200, width=1250, paper_bgcolor='rgba(186, 191, 244, 0.6)', title=\"Effect on Result\")\n\npy.iplot(fig, filename='effect')","6cb59a44":"sp[\"parental level of education\"].value_counts()\n#sp['parental level of education'][sp[\"Result\"] == 'P'].count()","ff5cc7fa":"edu = sp['parental level of education'][sp['Result'] == 'P'].value_counts()\n\nedu[\"associate's degree\"] = (edu[\"associate's degree\"]\/971)*100\nedu[\"some college\"] = (edu[\"some college\"]\/971)*100\nedu[\"high school\"] = (edu[\"high school\"]\/971)*100\nedu[\"some high school\"] = (edu[\"some high school\"]\/971)*100\nedu[\"bachelor's degree\"] = (edu[\"bachelor's degree\"]\/971)*100\nedu[\"master's degree\"] = (edu[\"master's degree\"]\/971)*100\n\ntrace = pie_plot(edu, ['rgba(15, 255, 199, 0.6)', \n                       'rgba(255, 15, 247, 0.6)', \n                       'rgba(229, 21, 2, 0.6)', \n                       'rgba(242, 255, 0, 0.6)', \n                       'rgba(55, 255, 20, 0.6)', \n                       'rgba(60, 30, 200, 0.6)'], \n                       \"Grades\")\n\npy.iplot([trace], filename=\"Grades\")","e043daf1":"def Grading(x, y):\n    if y == 'F':\n        return 'F'\n    if x >= 80:\n        return 'A'\n    if x >= 70:\n        return 'B'\n    if x >= 60:\n        return 'C'\n    if x >= 50:\n        return 'D'\n    if x >= 35:\n        return 'E'\n    else:\n        return 'F'\n    \nsp['Grade'] = sp.apply(lambda x : Grading(x['Percentage'], x['Result']), axis=1)","0b26fc3b":"#For annotations\ndef annot(ax, h):\n    for p in ax.patches:\n        plt.text(p.get_x()+0.4*p.get_width(), h+p.get_height(), \"{:1.0f}\".format(p.get_height()), ha=\"center\", va=\"center\")","e3236827":"columns = [\"gender\", \"race\/ethnicity\", \"lunch\", \"test preparation course\"]\n\nplt.figure(figsize=(10,10))\nsubplot = 1\nfor col in columns:\n    plt.subplot(2,2,subplot)\n    ax = sns.countplot(x=col, hue=\"Grade\", data=sp)\n    annot(ax, 2.3)\n    subplot += 1\n    plt.legend(loc=\"upper right\")\nplt.tight_layout()","86a62063":"sp.head()","e21bf71c":"grades = sp[\"Grade\"].value_counts()\n\ntrace = pie_plot(grades, ['rgba(15, 255, 199, 0.6)', \n                          'rgba(255, 15, 247, 0.6)', \n                          'rgba(229, 21, 2, 0.6)', \n                          'rgba(242, 255, 0, 0.6)', \n                          'rgba(55, 255, 20, 0.6)', \n                          'rgba(60, 30, 200, 0.6)'], \n                          \"Grades\")\n\npy.iplot([trace], filename=\"Grades\")","b6731f0a":"sp[\"gender\"].value_counts()\n#sp[\"gender\"][sp[\"Result\"] == \"P\"].count()","a24ecaa8":"gender_wise = sp[\"gender\"][sp[\"Result\"] == \"P\"].value_counts()\n\ngender_wise[\"female\"] = (gender_wise[\"female\"]\/971)*100\ngender_wise[\"male\"] = (gender_wise[\"male\"]\/971)*100\n\ntrace = pie_plot(gender_wise, \n                [\"#ffa8a8\", \"#ff0202\"], \n                \"Gender Pass(%)\")\n\npy.iplot([trace], filename='gender_pass_%')","9d0c49bd":"top_scores = sp.sort_values(by=\"Percentage\", ascending=False)[[\"gender\", \"Percentage\"]].head(10)\ntop_scores[\"gender\"].value_counts()","88356efc":"top_scores.plot(x=\"gender\", y=\"Percentage\", kind=\"bar\")\nplt.ylim([90,100])","caf1e1f0":"low_scores = sp.sort_values(by=\"Percentage\").head(10)\nlow_scores","8dca094e":"sns.countplot(y=\"Percentage\", data=low_scores)","c7371903":"### Lets Look for any null values","23c7363e":"### Lets get the results\n* if a student fails in any of one subject it is considered as fail","951fc793":"### Observations:-\n* Standard Lunch students are performing well\n* Group C and Group D students are performing well\n* Parental Education cannot be interpreted here as master degree parents would be less so it is showing less passing students ","8c85c097":"### lets look at some low scoring students","597e0e5b":"### Who has cleared the exam mostly Male or Female?","972d6ae7":"### Different features that affect Pass Percentage","1ed55e92":"### Lets calculate the grades A,B,C,D,E,F","14132e6f":"* Females lead with big margin","cd142a7b":"* Here we can see parental education is also important feature","a62fac03":"* Females lead with tiny margin","9ce59182":"### Who are most top-scorers Males or Females?","a23da822":"### Lets calculate percentage","0bafeeff":"### This is my first kernel\n### Tried to do some EDA and Visualization","f3ab3b94":"### Conclusions\n* Student's Performance is related with lunch, race, parental level education\n* Females lead in pass percentage and also are top-scorers\n* Student's Performance is not much related with test preparation course","b7ab9d70":"### Lets explore each feature with grades"}}