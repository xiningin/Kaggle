{"cell_type":{"2aa2c046":"code","3bfc04fb":"code","e7d61558":"code","452367ef":"code","68e73916":"code","411facfb":"code","16e7a0d9":"code","93612d0c":"code","1a1bdc3f":"code","5d98271f":"code","7d9676b9":"code","b8a49508":"code","0e6f60bf":"code","763589f8":"code","73e29462":"code","2e2c7417":"code","b87cc5d7":"code","6c1b81cd":"code","5de8518e":"code","b2a0dc02":"code","1ca25908":"code","55884636":"code","c18025ef":"code","dce6a1b5":"code","f8e9c8c2":"code","97a7fa7d":"code","0a1e2ba2":"code","194972e7":"code","18b2d0ed":"code","c603452c":"code","6a84883f":"code","350b7942":"code","746ec842":"code","8b81dc72":"code","10845afd":"code","422bd9d5":"code","f191a32f":"code","dd9fc9e4":"code","b6c8618b":"code","e73f3166":"code","8514aa61":"code","42166e9f":"code","150bb143":"code","0bf84904":"code","9ac2cdee":"code","d0dc12fb":"code","65af7395":"code","1f00b1bb":"markdown"},"source":{"2aa2c046":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport re\nfrom sklearn.cluster import KMeans\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.metrics import silhouette_score\nfrom sklearn.preprocessing import StandardScaler\n\npd.set_option('display.max_rows', 150)\npd.set_option('display.max_columns', 150)","3bfc04fb":"data = pd.read_csv(\"..\/input\/nyse\/fundamentals.csv\")","e7d61558":"data.head()","452367ef":"data.info()","68e73916":"data.columns = data.columns.str.strip()","411facfb":"data.columns = data.columns.str.replace(\"'\", '')","16e7a0d9":"data = data.rename(columns=lambda x: re.sub('[^A-Za-z0-9]+','_',x))","93612d0c":"data.columns","1a1bdc3f":"data.dtypes.value_counts()","5d98271f":"b = data.select_dtypes(include = ['float64'])\nb.head()","7d9676b9":"a = data['Ticker_Symbol']\na.head()","b8a49508":"c = pd.concat([a,b], axis = 1, join = 'inner')\nc.head()","0e6f60bf":"dt = c.groupby('Ticker_Symbol').mean()","763589f8":"dt.info()","73e29462":"dt.isnull().sum()","2e2c7417":"dt.describe()","b87cc5d7":"import plotly.express as px\nimport seaborn as sns","6c1b81cd":"px.scatter(dt, x='Accounts_Payable', y='Accounts_Receivable' ).show()","5de8518e":"px.scatter(dt, x=\"Cash_Ratio\", y=\"Current_Ratio\", marginal_y=\"violin\",\n           marginal_x=\"box\", trendline=\"ols\", template=\"simple_white\", color =\"Capital_Surplus\").show()","b2a0dc02":"df = dt\ndf['err'] = df[\"Cost_of_Revenue\"]\/1000\npx.scatter(df, x=\"Changes_in_Inventories\", y=\"Common_Stocks\", color=\"Cost_of_Revenue\", error_x=\"err\", error_y=\"err\").show()","1ca25908":"_=sns.lineplot(data = dt, x ='Earnings_Before_Interest_and_Tax', y = 'Earnings_Before_Tax')","55884636":"_=sns.lineplot(data = dt, x ='Earnings_Before_Interest_and_Tax', y = 'Earnings_Before_Tax', hue = 'For_Year')","c18025ef":"_= sns.jointplot(\n                 data = dt,\n                 x = 'Fixed_Assets',\n                 y = 'Gross_Profit',\n                 kind = \"kde\",\n                 color = 'seagreen'\n                )","dce6a1b5":"_= sns.jointplot(\n                 data = dt,\n                 x = 'Other_Current_Assets',\n                 y = 'Other_Current_Liabilities',\n                 kind = \"kde\",\n                 color = 'seagreen'\n                )","f8e9c8c2":"dt.shape","97a7fa7d":"dt = dt.dropna(axis = 1)","0a1e2ba2":"dt.isna().sum()","194972e7":"dt.shape","18b2d0ed":"scaler = StandardScaler()\ndt1 = scaler.fit_transform(dt)","c603452c":"dt1 = pd.DataFrame(dt1, index=dt.index, columns=dt.columns)","6a84883f":"dt1.head()","350b7942":"inertia = []\ns_score = []\nn_cluster = []\nfor i in range(2,15):\n    model = KMeans(n_clusters = i, max_iter = 300)\n    model.fit(dt1)     \n\n    # 4.1.3 Store inertia value\n    inertia.append(model.inertia_)\n    \n    # 4.1.4 Calculate silhoutte score\n    t=silhouette_score(dt1, model.labels_)\n    s_score.append(t)\n    n_cluster.append(i)","746ec842":"#Values of inertia\ninertia\n\n#Elbow plot\nplt.figure(figsize=(8,6))\nplt.plot(n_cluster, inertia, marker = '*')\nplt.show()","8b81dc72":"#Values of silhoutte score\ns_score\n\n#Silhoutte score plot\nplt.figure(figsize=(8,6))\nplt.plot(n_cluster, s_score, marker = '*')\nplt.show()","10845afd":"model = KMeans(n_clusters=6)\ncluster = model.fit_predict(dt1.select_dtypes('float64'))\ndt['Clust_No'] = cluster\ndt1['Clust_No'] = cluster\ndt.head()","422bd9d5":"dt['Clust_No'].value_counts()","f191a32f":"_=sns.boxplot(x = 'Clust_No',       \n              y = 'Operating_Income', \n              data = dt,\n              color = 'r'\n              )","dd9fc9e4":"_=sns.boxplot(x = 'Clust_No',       \n              y = 'Liabilities', \n              data = dt,\n              color = 'g'\n              )","b6c8618b":"_=sns.boxplot(x = 'Clust_No',       \n              y = 'Gross_Profit', \n              data = dt,\n              color = 'blue'\n              )","e73f3166":"gmm = GaussianMixture(n_components=6)\ncluster1 = gmm.fit_predict(dt1.select_dtypes('float64'))\ndt['Clust_No_Gmm'] = cluster1\ndt1['Clust_No_Gmm'] = cluster1\ndt.head()","8514aa61":"dt['Clust_No_Gmm'].value_counts()","42166e9f":"#dt.groupby('Clust_No_Gmm')['Ticker_Symbol']","150bb143":"funda = pd.read_csv(\"..\/input\/nyse\/fundamentals.csv\")\nsec = pd.read_csv(\"..\/input\/nyse\/securities.csv\")","0bf84904":"funda.columns = funda.columns.str.strip()\nsec.columns = sec.columns.str.strip()\nfunda = funda.rename(columns=lambda x: re.sub('[^A-Za-z0-9]+','_',x))\nsec = sec.rename(columns=lambda x: re.sub('[^A-Za-z0-9]+','_',x))","9ac2cdee":"df = funda.merge(sec, how ='inner', right_on ='Ticker_symbol' , left_on = 'Ticker_Symbol')\ndf.head()","d0dc12fb":"df.groupby('GICS_Sector').count()","65af7395":"df.groupby('GICS_Sector').agg(\n{'GICS_Sub_Industry' : 'nunique',\n'Security':'nunique',\n 'SEC_filings' : 'nunique',\n'Ticker_symbol':'nunique',\n 'Capital_Surplus':'mean',\n 'Earnings_Before_Interest_and_Tax' : 'mean',\n 'Gross_Profit' : 'mean',\n 'Income_Tax' : 'mean',\n 'Liabilities' : 'mean',\n 'Net_Borrowings' : 'mean',\n 'Net_Income' : 'mean',\n 'Operating_Income' : 'mean'\n})","1f00b1bb":"After combining inertia and silhoutte graph, we can conclude that number of clusters can be taken here is 6."}}