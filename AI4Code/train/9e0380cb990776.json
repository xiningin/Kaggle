{"cell_type":{"9b26321c":"code","f00b4203":"code","8a058da6":"code","20fe07a7":"code","7ccf9514":"code","8d150102":"markdown","67951676":"markdown","9df53624":"markdown","4c0b9f40":"markdown"},"source":{"9b26321c":"import tensorflow as tf","f00b4203":"# Path to the directory\nflowers = '..\/input\/flowers-recognition\/flowers'","8a058da6":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(directory=flowers,\n                                                               labels='inferred',\n                                                               label_mode='int',\n                                                               color_mode='rgb',\n                                                               batch_size=32,\n                                                               image_size=(256,256),\n                                                               shuffle=True,\n                                                               seed=42,\n                                                               validation_split=0.2,\n                                                               subset='training',\n                                                               interpolation='bilinear',)\n\nval_ds = tf.keras.preprocessing.image_dataset_from_directory(directory=flowers,\n                                                               labels='inferred',\n                                                               label_mode='int',\n                                                               color_mode='rgb',\n                                                               batch_size=32,\n                                                               image_size=(256,256),\n                                                               shuffle=True,\n                                                               seed=42,\n                                                               validation_split=0.2,\n                                                               subset='validation',\n                                                               interpolation='bilinear',)","20fe07a7":"class_names = train_ds.class_names\nprint(f'The classes are: {class_names}')","7ccf9514":"import matplotlib.pyplot as plt\n\nplt.figure(figsize=(10, 10))\nfor images, labels in train_ds.take(1):\n    for i in range(9):\n        ax = plt.subplot(3, 3, i + 1)\n        plt.imshow(images[i].numpy().astype(\"uint8\"))\n        plt.title(class_names[labels[i]])\n        plt.axis(\"off\")","8d150102":"# Visulaization\nVisualization is one of the best ways to be **One with the data** as Karpathy has rightly said. In this code block we will visualize the data along with the right labels.","67951676":"Here we are also dividing the data into `train` and `val`. This will usually be of great help when we would be training our model and validating our hyperparameters.","9df53624":"# image_dataset_from_directory\nIn the previous version of the kernel I have used the `ImageDataGenerator` to help in devising the data pipeline. After some amount of searching, I have come across this method that helps in building image tf.data.Dataset on the fly from directories. This does has its own shortcomings, but this is really helpful in converting a directory filled with images into the dataset.","4c0b9f40":"# Introduction\nIn this kernel I would like to show how to speed up the training with the use of `tf.data` API for their data pipeline. This kernel helps in gathering the data and consuming it in one place.\n## Imports\n- tensorflow"}}