{"cell_type":{"735afded":"code","734e40f8":"code","142d0aa0":"code","486d4278":"code","4a9e4185":"code","1566d788":"code","1c135c2d":"code","0af62176":"code","3ec63957":"code","65f48123":"code","e6e89f72":"code","5bc65ead":"code","e2dc2c3d":"code","644540e4":"code","b87b73c9":"code","fae9aafd":"code","44322893":"code","b40bfec0":"code","3efedae2":"code","9a8f1091":"code","41df3ee4":"code","88f9df61":"code","6479acba":"code","ec92c168":"code","33d7863d":"code","12eacb04":"code","1d8776f1":"code","a629620e":"code","d6e22f58":"code","cef16c91":"code","55892667":"code","93b3958d":"markdown","c533edec":"markdown","f9b0341e":"markdown","53b843af":"markdown","35bf3d58":"markdown","e7e1e206":"markdown","afa12499":"markdown","ba0d76ed":"markdown","182c6c8b":"markdown"},"source":{"735afded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","734e40f8":"def weather_data(data=None):\n    \"\"\"\n    param: data a pandas dataframe \n    \n    return\n    data per month\n    \"\"\"\n    \n    cols=data[1].columns # take all columns of first row of list data\n    \n    month = data[2].iloc[0] # take month\n    m_time = data[2].iloc[1:-1] # take all data from this month\n    \n    # We create series pandas for dayofmonth\n    if month[0] == 'Jan':\n        s=pd.date_range(start='2020-01-01', periods= len(m_time) , freq='D')\n    if month[0] == 'Feb':\n        s=pd.date_range(start='2020-02-01', periods= len(m_time) , freq='D')\n        \n    if month[0] == 'Mar':\n        s=pd.date_range(start='2020-03-01', periods= len(m_time) , freq='D')\n        \n    if month[0] == 'Apr':\n        s=pd.date_range(start='2020-03-01', periods= len(m_time) , freq='D')\n        \n        \n        \n    v = [] # initialize\n    v.append(np.array(s)) # append s\n    \n    # take all data for  'Temperature (\u00c2\u00b0 F)', 'Dew Point (\u00c2\u00b0 F)', 'Humidity (%)',\n    #   'Wind Speed (mph)', 'Pressure (Hg)'\n    for i in range(3, 8):\n        c = np.array(data[i].iloc[1:-1,1]) \n        \n        v.append(c)\n        \n    last_feature = np.array(data[8].iloc[1:-1]) # columns precipitation\n    \n    v.append(last_feature)\n    \n    vdt = pd.DataFrame() # initialize \n    for i in range(len(cols)):\n        vdt[cols[i]] = v[i]\n        \n    return vdt # pandas dataframe go below to see a result","142d0aa0":"def read_main_folder(pardir=None):\n    \"\"\"\n    param: pardir: the main path folder\n    \n    return \n    list of file in each folder\n    \n    \"\"\"\n\n    folder_file = []\n    for dirname, _, filenames in os.walk(pardir):\n        gv = []\n        for filename in filenames:\n            gv.append(os.path.join(dirname, filename))\n    \n        if gv == []: # to avoid an empty list\n            pass\n        else:\n            folder_file.append(gv)\n    \n    return folder_file # see the result below","486d4278":"def concatenate_and_save_data(folder=None):\n    \"\"\"\n    param: folder: take a path html file\n    \n    return\n    read each html file after concatenate all data per month and then save to csv file\n    \n    \"\"\"\n    \n    value = []\n    cities = ['milan-italy']\n    for f in folder:\n        dc = pd.read_html(f)\n        bc = weather_data(data=dc)\n    \n        value.append(bc)\n        \n    con_data = pd.concat(value)\n    print(f)\n        \n    for item in cities:\n        if item in f:\n            city = item #input('Give a city name correspond to this data \u00a7\u00a7\\n')\n    \n            datasets = 'data_'\n    \n            save = datasets + city + '_weather.csv'\n        \n            con_data.to_csv(save, index=False)\n            print('Saving data is done for {} !\\n'.format(item))\n    \n    #return con_data","4a9e4185":"# take html file\nhtml_file = '\/kaggle\/input\/milan-italy\/Peschiera Borromeo Italy Weather History _ Weather Underground (2020-04-04 17_44_03).html'","1566d788":"if 'milan' in html_file:\n    print('yes')\nelse:\n    print('no')","1c135c2d":"if 'new-york' in html_file:\n    print('yes')\nelse:\n    print('no')","0af62176":"df = pd.read_html(html_file) # extract unstructured data from html file using pandas for Milan ","3ec63957":"# see the type of our unstructured data\ntype(df)","65f48123":"# size\nlen(df) #","e6e89f72":"# eda\ndf[1].head(3) # the first row ","5bc65ead":"df[1].columns # columns of first row","e2dc2c3d":"df[2].head(3) # the second row that are a month (March?) and many NaN","644540e4":"#see name of month\ndf[2].iloc[0]","b87b73c9":"#see name of month\ndf[2].iloc[0]","fae9aafd":"df[3:] # this is a data for all columns above that contains Max, Avg and Min value. \n#For us, we are taking only Avg value of each columns. To get all this data we need to use weather_data function. \n# Go to create function section above. to explain the function","44322893":"# result for Milan Peschiera Borromeo\nweather_data(data=df).head(3) # this is for weather data function","b40bfec0":"dir_parent = '\/kaggle\/input'\ndocs = read_main_folder(pardir=dir_parent)","3efedae2":"docs # see the last function above","9a8f1091":"dir_parent = '\/kaggle\/input'\ndocs = read_main_folder(pardir=dir_parent)","41df3ee4":"# save data for each subfolders\nfor fk in docs:\n    concatenate_and_save_data(folder=fk)","88f9df61":"Peschiera_List = ['Time', 'Temperature (\u00c2\u00b0 F)', 'Dew Point (\u00c2\u00b0 F)', 'Humidity (%)',\n       'Wind Speed (mph)', 'Pressure (Hg)', 'Precipitation (in)']","6479acba":"from pandas import DataFrame\n\ndf = DataFrame (Peschiera_List,columns=['weather'])\nprint (df)","ec92c168":"df.isnull().sum()","33d7863d":"print ('Peschiera_List: ' + str(type(Peschiera_List)))\nprint ('df: ' + str(type(df)))","12eacb04":"df.dtypes","1d8776f1":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n\nsns.countplot(df['weather'],linewidth=3,palette=\"Set2\",edgecolor='black')\nplt.xticks(rotation=45)\nplt.title(\"Peschiera Borromeo Weather\")\nplt.show()","a629620e":"ax = df['weather'].value_counts().plot.barh(figsize=(14, 6))\nax.set_title('Peschiera Borromeo Weather Distribution', size=18)\nax.set_ylabel('Weather', size=14)\nax.set_xlabel('Count', size=14)","d6e22f58":"# Count Plot\nplt.style.use(\"classic\")\nplt.figure(figsize=(6, 4))\nsns.countplot(df['weather'], palette='Reds', **{'hatch':'\/','linewidth':3})\nplt.xlabel(\"Weather\")\nplt.ylabel(\"Count\")\nplt.title(\"Peschiera Borromeo Weather\")\nplt.xticks(rotation=45, fontsize=8)\nplt.show()","cef16c91":"import plotly.express as px\n\npx.pie(df, 'weather', title='Peschiera Borromeo Weather')","55892667":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#2B3A67','#42a7f5','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here.' )","93b3958d":"#EDA: Test your HTML!","c533edec":"<a id=\"1.1\"><\/a>\n<h3 style=\"background-color:skyblue;font-family:newtimeroman;font-size:200%;text-align:center\">Il Comune di Peschiera Borromeo<\/h3>\n\nEtimologia (origine del nome)\n\nDeriva dal latino piscaria che significa \"mercato del pesce\" ma che riferito al paese assume il significato di \"vivaio di pesci\". La specifica si riferisce alla famiglia milanese che fu proprietaria di una villa rurale in zona.\n\nPopolazione Peschiera Borromeo 1861-2016: Anno 1861\tResidenti 2.696;;\nAnno 2016 -\tResidenti 23.515","f9b0341e":"Peschiera Borromeo\n\nPeschiera Borromeo is a comune (municipality) in the Metropolitan City of Milan in the Italian region Lombardy, located about 12 kilometres (7 mi) southeast of Milan. It received the honorary title of city with a presidential decree on August 6, 1988.\nhttps:\/\/en.wikipedia.org\/wiki\/Peschiera_Borromeo","53b843af":"![](https:\/\/www.wecanjob.it\/moduli\/output_immagine.php?id=9930)wecanjob.it","35bf3d58":"Evoluzione Residenti - Comune di Peschiera Borromeo\n\n![](http:\/\/chart.apis.google.com\/chart?cht=lxy&chs=750x400&chco=0000ff&chm=B,76A4FB,0,0,0&chxt=x,y&chxr=1,0,23515&chd=e:AAEIIQQhUpYxc5e9lKpStaxi1r5z..,HVH-IAH0J0OgIaIxKPNUV6kVyc3J..&chxl=0:|1861|1871|1881|1901|1911|1921|1931|1936|1951|1961|1971|1981|1991|2001|2016&chxp=0,0,7,14,27,34,41,47,51,61,68,74,81,88,95,100)http:\/\/www.comuni-italiani.it\/015\/171\/statistiche\/popolazione.html","e7e1e206":"#It's a List or Object? Make up your mind Pandas!","afa12499":"#HTML script by Lumiere Batalong  https:\/\/www.kaggle.com\/lumierebatalong\/tutorial-extract-data-from-html-file-using-pandas\/notebook","ba0d76ed":"#Now we have a weather data function. we cannot take data for each html file like that we need to #define a function that can read all file to put it in the list. Go above(?)","182c6c8b":"#Converting a List to DataFrame in Python https:\/\/datatofish.com\/list-to-dataframe\/"}}