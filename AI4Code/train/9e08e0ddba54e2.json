{"cell_type":{"c2f336d1":"code","e9bb5703":"code","dca8a0cc":"code","6739feb0":"code","564f9828":"code","0960dbd9":"code","47fb1fe5":"code","bf0e8968":"code","e2c2c2a2":"code","b9466023":"code","d02779ac":"code","eecdc607":"code","028da451":"code","04e6ac9f":"code","efcd005e":"code","76938df7":"code","b41ee630":"code","4a32400a":"code","33a26c79":"code","16202e90":"code","a4c9a180":"code","00d550c9":"code","3e3b4e59":"code","cb1d08be":"code","014644d6":"code","b8fb6c4f":"code","607c8a83":"code","6eac3a0c":"code","151a4a02":"code","73a7cfbf":"code","5b11614b":"code","023aafe6":"code","4c7b2589":"code","bc2bd7d9":"code","44396077":"code","23d76ced":"code","bb63752f":"code","4180da36":"code","d98ca0ce":"code","f246b842":"code","13f57722":"code","13dc3611":"code","1041046f":"code","35ec613f":"code","3f72826d":"code","cde17740":"code","9b6b7e07":"code","28aa2dfb":"code","f1cc4d80":"code","e4b69c7d":"code","5549a346":"code","a6906441":"code","598785b0":"code","42b4d7d1":"code","ca39ffdc":"code","c09d00a6":"code","0a05415f":"code","63a3f539":"code","606bb351":"code","61aa4165":"code","51ae799b":"code","9ac04c61":"code","233d3c9c":"code","06615fcf":"code","6ec80419":"code","9d4e8ca2":"code","5b270b1f":"code","24111a29":"markdown","4075fc8a":"markdown"},"source":{"c2f336d1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","e9bb5703":"x=np.array([6.5,6.8,7.0,8.0,8.5,9.8,10.5,5.5,5.0])\ny=np.array([180,195,210,235,280,350,400,170,160])","dca8a0cc":"sns.scatterplot(x,y)","6739feb0":"b1=((x-np.mean(x))*(y-np.mean(y))).sum()\/((x-np.mean(x))**2).sum()","564f9828":"b1==np.cov(x,y,ddof=1)[1,0]\/np.var(x,ddof=1)","0960dbd9":"b0=np.mean(y)-(b1*np.mean(x))\nb0","47fb1fe5":"y_pred=b0+(b1*x)\ny_pred","bf0e8968":"sum_of_residues= (y-y_pred).sum()\nsum_of_residues","e2c2c2a2":"sse=((y-y_pred)**2).sum()\nsse","b9466023":"mse=sse\/len(x)\nmse","d02779ac":"sns.scatterplot(x,y)\nsns.lineplot(x,y_pred,)","eecdc607":"from sklearn.linear_model import LinearRegression","028da451":"df=pd.DataFrame(x,columns=['x'])","04e6ac9f":"lr=LinearRegression()\nlr.fit(df,y)\nypred=lr.predict(df)","efcd005e":"lr.coef_","76938df7":"lr.intercept_","b41ee630":"ypred,y_pred","4a32400a":"lr.score(df,y)","33a26c79":"1-(((y-ypred)**2).sum()\/((y-y.mean())**2).sum())","16202e90":"(np.corrcoef(y,ypred)[1,0])**2","a4c9a180":"from statsmodels.formula.api import ols","00d550c9":"df['y']=y","3e3b4e59":"df","cb1d08be":"model=ols('y~x',df).fit()","014644d6":"model.params","b8fb6c4f":"model.predict(df.x)","607c8a83":"model.summary()","6eac3a0c":"n,p=df.drop('y',1).shape\nr2=1-(((y-ypred)**2).sum()\/((y-y.mean())**2).sum())\nadjusted_r2= 1 - ((1-r2) * (n-1) \/ (n-p-1))\nadjusted_r2","151a4a02":"df.shape","73a7cfbf":"df=pd.read_csv('..\/input\/learn-ml-datasets\/car-mpg (1).csv')","5b11614b":"df.head()","023aafe6":"df.info()","4c7b2589":"df.describe()","bc2bd7d9":"[(i,v) for i,v in enumerate(df.hp) if not v.isdigit()]","44396077":"df.shape","23d76ced":"df.drop('car_name',1,inplace=True)\ndf.shape","bb63752f":"df.replace('?',np.nan,inplace=True)","4180da36":"df.isnull().sum()","d98ca0ce":"df.info()","f246b842":"df.fillna(df.hp.median(),inplace=True)","13f57722":"df.info()","13dc3611":"df['hp']=df.hp.astype(int)","1041046f":"df.info()","35ec613f":"plt.figure(figsize=(16,8))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm',center=0)","3f72826d":"sns.pairplot(df,diag_kind='kde')","cde17740":"from sklearn.model_selection import train_test_split","9b6b7e07":"x=df.drop(['mpg'],1)\ny=df.mpg","28aa2dfb":"xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=2)","f1cc4d80":"lr=LinearRegression()\nlr.fit(xtrain,ytrain)\nypred=lr.predict(xtest)\nlr.score(xtest,ytest),lr.score(xtrain,ytrain)","e4b69c7d":"from sklearn.metrics import r2_score\nr2_score(ytest,ypred)","5549a346":"r2=1-(((ytest-ypred)**2).sum()\/((ytest-np.mean(y))**2).sum())\nn,p=x.shape\nadj_r2=1-((1-r2)*(n-1)\/(n-p-1))\nr2,adj_r2","a6906441":"#correlation of ytest and ypred as cr\ncr=((ytest-(np.mean(ytest)))*(ypred-(np.mean(ypred)))).sum()\/(((((ytest-(np.mean(ytest)))**2).sum())**0.5)*(((ypred-(np.mean(ypred)))**2).sum())**0.5)\ncr**2","598785b0":"mse=np.mean((ytest-ypred)**2)\nmse","42b4d7d1":"from sklearn.metrics import mean_squared_error\nmean_squared_error(ytest,ypred)","ca39ffdc":"rmse=mse**0.5\nrmse","c09d00a6":"plt.figure(figsize=(16,8))\nsns.scatterplot(ytest,ypred)\nsns.scatterplot(ytest,ytest)","0a05415f":"for i in df.columns:\n  print(i,df[i].nunique())","63a3f539":"for i in ['cyl','origin','car_type']:\n  df[i]=df[i].apply(str)","606bb351":"df.info()","61aa4165":"plt.figure(figsize=(16,8))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm',center=0)","51ae799b":"x=df.drop(['mpg'],1)\nx=pd.get_dummies(x,drop_first=True)\ny=df.mpg","9ac04c61":"xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=2)","233d3c9c":"lr=LinearRegression()\nlr.fit(xtrain,ytrain)\nypred=lr.predict(xtest)\nlr.score(xtest,ytest),lr.score(xtrain,ytrain)","06615fcf":"# We can see how the adjusted_r2 is being affected by increasing the number of features using dummification \nr2=1-(((ytest-ypred)**2).sum()\/((ytest-np.mean(y))**2).sum())\nn,p=x.shape\nadj_r2=1-((1-r2)*(n-1)\/(n-p-1))\nr2,adj_r2","6ec80419":"from statsmodels.stats.outliers_influence import variance_inflation_factor","9d4e8ca2":"for i in range(x.shape[1]):\n  print(x.columns[i],variance_inflation_factor(x.values, i))","5b270b1f":"# we eliminate features to see the change in adj R2. It is our decision to choose inbetween higher r2 and no multicollinearity.\n# Higher r2 means better results, no multicollienarity means stable relationship between y and x variables.\nx=df.drop(['mpg','origin','car_type','acc'],1)\nx=pd.get_dummies(x,drop_first=True)\ny=df.mpg\nxtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=2)\nlr=LinearRegression()\nlr.fit(xtrain,ytrain)\nypred=lr.predict(xtest)\nr2=1-(((ytest-ypred)**2).sum()\/((ytest-np.mean(y))**2).sum())\nn,p=x.shape\nadj_r2=1-((1-r2)*(n-1)\/(n-p-1))\nprint(r2,adj_r2)\nfor i in range(x.shape[1]):\n  print(x.columns[i],variance_inflation_factor(x.values, i))","24111a29":"# Basics","4075fc8a":"# car-mpg"}}