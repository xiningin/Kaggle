{"cell_type":{"64ca36fd":"code","b17deebc":"code","1c7b4420":"code","5ad0d1eb":"code","4f84f74f":"code","5cee25e2":"code","4a64daa0":"code","dd5ae8bd":"code","bdaef877":"code","2374c45f":"code","091ca175":"code","769d5fa7":"code","d9bf09ad":"code","e368a17f":"code","4b8c6db2":"code","c0e5e472":"code","be402501":"code","9971b490":"code","92207962":"code","6f5d93fa":"code","42657515":"code","d5f88d42":"code","5459e0a0":"code","6fb60a9f":"code","84c1c828":"code","2d722cd7":"code","5ce91d78":"code","b9944fd2":"code","86936c6b":"code","37b8c7ae":"code","75e9b497":"code","bb6be554":"code","f45c130d":"code","ddd0c92a":"code","f81ba9ea":"code","80d6aeb0":"code","ccf442e5":"markdown","a905fa56":"markdown","0b6ea0b5":"markdown","9e84a1e3":"markdown","c12aff00":"markdown","ecf234a1":"markdown","cc150f89":"markdown","e98d2583":"markdown","082623b8":"markdown","26aa88b4":"markdown","bb1b8d12":"markdown","3b306309":"markdown","e2cf73a8":"markdown","95d701e6":"markdown","b36a956b":"markdown","c6256f50":"markdown","fc3b7ac2":"markdown","afae2e9c":"markdown","13dff735":"markdown","9c140131":"markdown","519ff1ee":"markdown","28d18c5c":"markdown"},"source":{"64ca36fd":"import numpy as np  # linear algebra\nimport pandas as pd  # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.cluster import KMeans\nimport warnings\nwarnings.filterwarnings(\"ignore\")\nplt.style.use('fivethirtyeight')","b17deebc":"dataset = pd.read_csv('..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv')","1c7b4420":"dataset.head()","5ad0d1eb":"dataset.isna().sum()","4f84f74f":"dataset.shape","5cee25e2":"dataset.info()  #info() is used to check the Information about the data and the datatypes of each respective attribute.","4a64daa0":"dataset.describe().T #The described method will help to see how data has been spread for numerical values.\n              # We can clearly see the minimum value, mean values, different percentile values, and maximum values.","dd5ae8bd":"dataset.isna().sum()","bdaef877":"plt.rcParams['figure.figsize'] = (15, 3)\nsns.countplot(dataset['Age'], palette = 'pink')\nplt.title('Count Plot of Age', fontsize = 20)\nplt.show()","2374c45f":"plt.rcParams['figure.figsize'] = (10, 3)\nsns.countplot(dataset['Gender'], palette = 'pink')\nplt.title('Count Plot of Gender', fontsize = 15)\nplt.show()","091ca175":"def scatters(col1,col2):\n    fig = px.scatter(dataset, x=col1, y=col2 , color=\"Gender\", template = 'plotly_dark')\n    return fig.show()","769d5fa7":"scatters('Annual Income (k$)', 'Spending Score (1-100)')","d9bf09ad":"scatters('Age', 'Spending Score (1-100)')","e368a17f":"scatters('Age', 'Annual Income (k$)')","4b8c6db2":"def kde_plot(feature):\n    grid = sns.FacetGrid(dataset,aspect=4)\n    grid.map(sns.kdeplot, feature)\n    grid.add_legend()","c0e5e472":"kde_plot('Age')","be402501":"kde_plot('Annual Income (k$)')","9971b490":"kde_plot('Spending Score (1-100)')","92207962":"plt.rcParams['figure.figsize'] = (15, 4)\nax = sns.boxplot(x = dataset['Age'], palette = 'inferno')\nax.set_xlabel(xlabel = 'Age', fontsize = 9)\nplt.xticks(rotation = 90)\nplt.grid()\nplt.show()","6f5d93fa":"plt.rcParams['figure.figsize'] = (15, 4)\nax = sns.boxplot(x = dataset['Annual Income (k$)'], palette = 'inferno')\nax.set_xlabel(xlabel = 'Annual Income (k$)', fontsize = 9)\nplt.xticks(rotation = 90)\nplt.grid()\nplt.show()","42657515":"plt.rcParams['figure.figsize'] = (15, 4)\nax = sns.boxplot(x = dataset['Spending Score (1-100)'], palette = 'inferno')\nax.set_xlabel(xlabel = 'Spending Score (1-100)', fontsize = 9)\nplt.xticks(rotation = 90)\nplt.grid()\nplt.show()","d5f88d42":"X = dataset.iloc[:, [3, 4]].values","5459e0a0":"wcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(X)\n    wcss.append(kmeans.inertia_)\nplt.figure(1 , figsize = (15 ,6))\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","6fb60a9f":"kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","84c1c828":"plt.figure(1 , figsize = (15 ,8))\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'yellow', label = 'Cluster 4')\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 400, c = 'black', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","2d722cd7":"Z = dataset.loc[:, ['Age', 'Spending Score (1-100)']].values","5ce91d78":"wcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(Z)\n    wcss.append(kmeans.inertia_)\nplt.figure(1 , figsize = (15 ,6))\nplt.plot(range(1, 11), wcss , marker = '8')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","b9944fd2":"kmeans = KMeans(n_clusters = 4, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(Z)","86936c6b":"plt.figure(1 , figsize = (15 ,8))\nplt.scatter(Z[y_kmeans == 0, 0], Z[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(Z[y_kmeans == 1, 0], Z[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(Z[y_kmeans == 2, 0], Z[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(Z[y_kmeans == 3, 0], Z[y_kmeans == 3, 1], s = 100, c = 'yellow', label = 'Cluster 4')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 400, c = 'black', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Age')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","37b8c7ae":"Y = dataset.loc[:, ['Age', 'Annual Income (k$)']].values","75e9b497":"wcss = []\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)\n    kmeans.fit(Y)\n    wcss.append(kmeans.inertia_)\nplt.figure(1 , figsize = (15 ,6))\nplt.plot(range(1, 11), wcss , marker = '8')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","bb6be554":"kmeans = KMeans(n_clusters = 4, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(Y)","f45c130d":"plt.figure(1 , figsize = (15 ,8))\nplt.scatter(Y[y_kmeans == 0, 0], Y[y_kmeans == 0, 1], s = 100, c = 'red', label = 'Cluster 1')\nplt.scatter(Y[y_kmeans == 1, 0], Y[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')\nplt.scatter(Y[y_kmeans == 2, 0], Y[y_kmeans == 2, 1], s = 100, c = 'green', label = 'Cluster 3')\nplt.scatter(Y[y_kmeans == 3, 0], Y[y_kmeans == 3, 1], s = 100, c = 'yellow', label = 'Cluster 4')\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 400, c = 'black', label = 'Centroids')\nplt.title('Clusters of customers')\nplt.xlabel('Age')\nplt.ylabel('Annual Income (k$)')\nplt.legend()\nplt.show()","ddd0c92a":"A = dataset.iloc[:, 2:]\nwcss = []\nfor n in range(1 , 11):\n    algorithm = (KMeans(n_clusters = n ,init='k-means++', n_init = 10 ,max_iter=300, \n                        tol=0.0001,  random_state= 111  , algorithm='elkan') )\n    algorithm.fit(A)\n    wcss.append(algorithm.inertia_)\nplt.figure(1 , figsize = (15 ,6))\nplt.plot(range(1, 11), wcss , marker = '8')\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","f81ba9ea":"kmeans = KMeans(n_clusters = 6)\nclusters = kmeans.fit_predict(A)\nA['label'] = clusters","80d6aeb0":"fig = px.scatter_3d(A, x=\"Annual Income (k$)\", y=\"Spending Score (1-100)\", z=\"Age\",\n                    color = 'label', size = 'label', template = 'plotly_dark')\nfig.show()","ccf442e5":"### Using the Elbow method to find the optimal number of clusters","a905fa56":"### Count Plot of Gender","0b6ea0b5":"<a id = '4.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Importing dataset <\/strong><\/p>","9e84a1e3":"<a id = '0.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Table of Contents<\/strong><\/p> \n\n* [Importing libraries](#2.0)\n* [Importing dataset](#4.0)\n* [Checking for null values](#3.0)\n* [EDA](#1.0)\n* [Check Outliers](#8.0)\n* [kmeans clustering using `Annual Income (k$)`and `Spending Score` columns](#7.0)\n* [kmeans clustering using `Age` and `Spending Score` columns](#9.0)\n* [kmeans clustering using `Age` and `Annual Income (k$)` columns](#10.0)\n* [Segmentation using`Age` , `Annual Income` and `Spending Score`](#11.0)","c12aff00":"### Count Plot of Age","ecf234a1":"<a id = '10.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong> kmeans clustering using `Age` and `Annual Income (k$)` columns<\/strong><\/p> ","cc150f89":"<a id = '3.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Checking for null values<\/strong><\/p>\n","e98d2583":"#### Importing the dataset","082623b8":"## Training the K-Means model on the dataset","26aa88b4":"## Visualising the clusters","bb1b8d12":"<a id = '12.0'><\/a>\n<p style = \"font-size : 35px; color : black ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong> K-Means Clustering Algorithm<\/strong><\/p> ","3b306309":"## kmeans clustering using `Age` and `Spending Score` columns","e2cf73a8":"### Defining kde_plot plot function","95d701e6":"<p style = \"font-size : 42px; color : \t#D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Customer Segmentation Using (K-Means)<\/strong><\/p>","b36a956b":"<a id = '8.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Check Outliers<\/strong><\/p> ","c6256f50":"<a id = '2.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Importing libraries<\/strong><\/p>\n\n","fc3b7ac2":"# <img src=\"https:\/\/dotcom.nlcdn.com\/wp-content\/uploads\/2019\/10\/Market-Segmentation_Featured-1140x768@2x-80-min.jpg\" alt=\"Market Segmentation: The No-Nonsense Guide (w\/ Examples)\" jsname=\"HiaYvf\" jsaction=\"load:XAeZkd;\" class=\"n3VNCb\" data-noaft=\"1\"  style=\"margin-left: 10%; float: center;  border:5px solid ; width:80%; height : 80%;\">","afae2e9c":"<a id = '11.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>If you found this notebook helpful or you just liked it , some upvotes would be very much appreciated.<\/strong><\/p>","13dff735":"<a id = '1.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>Exploratory Data Analysis (EDA)<\/strong><\/p>","9c140131":"<a id = '7.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong>kmeans clustering using `Annual Income (k$)`and `Spending Score` columns<\/strong><\/p>  ","519ff1ee":"### Defining scatter plot function","28d18c5c":"<a id = '11.0'><\/a>\n<p style = \"font-size : 35px; color : #D2691E ; font-family : 'Comic Sans MS'; text-align : center; background-color : #ffff99; border-radius: 5px 5px;\"><strong> Segmentation using`Age` , `Annual Income` and `Spending Score`<\/strong><\/p> "}}