{"cell_type":{"5f871489":"code","f45a74c4":"code","27d9a920":"code","b2f75399":"code","3bd79ff4":"code","6bd8016a":"code","3b68c7c5":"code","e9e33d5f":"code","23c344c1":"code","5a063ec7":"markdown","71002a71":"markdown","ce103de9":"markdown","30bc0b15":"markdown","ab43d3fc":"markdown","a20215c9":"markdown","290359a6":"markdown","1d1739e7":"markdown"},"source":{"5f871489":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","f45a74c4":"!pip install git+https:\/\/github.com\/WojciechMigda\/PyTsetlini@v0.0.5","27d9a920":"from pytsetlini import TsetlinMachineClassifier # Tsetlin Machine Classifier we will be training","b2f75399":"train_df = pd.read_csv('..\/input\/digit-recognizer\/train.csv', header=0, dtype='uint8')\nprint('Read train data: {}'.format(train_df.shape))\n\ntest_df = pd.read_csv('..\/input\/digit-recognizer\/test.csv', header=0, dtype='uint8')\nprint('Read test data: {}'.format(test_df.shape))\n\ntrain_y = train_df.label.values\ntrain_X = train_df.values[:, 1:]\n\ntest_X = test_df.values","3bd79ff4":"train_X = (train_X > 75).astype('uint8')\ntest_X = (test_X > 75).astype('uint8')","6bd8016a":"clf = TsetlinMachineClassifier(random_state=1234,\n                               clause_output_tile_size=64,\n                               number_of_pos_neg_clauses_per_label=2000,\n                               number_of_states=127,\n                               boost_true_positive_feedback=1,\n                               n_jobs=2,\n                               s=10.,\n                               threshold=50,\n                               verbose=True)\nprint(clf)","3b68c7c5":"NEPOCHS = 1500\nclf.fit(train_X, train_y, n_iter=NEPOCHS)","e9e33d5f":"y_hat = clf.predict(test_X)","23c344c1":"pred = pd.DataFrame(y_hat)\npred.index += 1\npred.index.name = 'ImageId'\npred.columns = ['Label']\npred.to_csv('results_{}.csv'.format(NEPOCHS), header=True)","5a063ec7":"Let's read input datasets","71002a71":"Infer predictions when complete","ce103de9":"Import necessary packages","30bc0b15":"And save results into CSV","ab43d3fc":"##### Tsetlin Machine Classifier requires binarized input data, specifically, each value can be either 0 or 1.\nOur input images have 28x28 pixels, each pixel encoded as an 8-bit integer. We will achieve that comparing individual pixel against a threshold of 75","a20215c9":"Time to build the estimator. For `TsetlinMachineClassifier` I am using parameters from one of the examples used in the original Tsetlin Machine paper.","290359a6":"Now we can train the pipeline classifier using input data. We will train it for N epochs.","1d1739e7":"Install PyTsetlini from github\n(remember to enable 'Internet' access in the notebook's settings)"}}