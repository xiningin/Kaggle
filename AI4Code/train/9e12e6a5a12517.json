{"cell_type":{"58babb8e":"code","ce282e06":"code","85ea9dbd":"code","97739992":"code","281ba7e0":"code","716077a0":"code","83f229ff":"code","8f015963":"code","bee51b05":"code","3d205c81":"code","92b42b9c":"code","ff419641":"code","137bdd32":"code","34399f01":"code","3abfc53b":"code","65422024":"code","8312ed91":"code","b953f01e":"code","d3d288c7":"code","7d752a31":"code","269a9dfb":"code","84f54b18":"code","80d94288":"code","26d79600":"code","2b3285c9":"code","6d99e4dd":"code","6e3b52db":"code","2646011e":"code","04d79644":"code","6032e047":"code","fd9b8370":"code","2fd2379c":"code","92541282":"code","a04bb3a5":"code","236f4233":"code","a3deba14":"code","6cb7550a":"code","f4f3c674":"code","1c5dfb85":"code","e0a9604b":"code","1e7ef6ec":"code","00675982":"code","9acf531e":"code","35c63605":"code","4def16ce":"code","b55e3a45":"code","943eca97":"code","b9edadc1":"code","99d3dd33":"code","900732f8":"markdown","f3fe5390":"markdown","d013a150":"markdown"},"source":{"58babb8e":"import pandas as pd\nimport os\nimport pandas_profiling\nfrom pandas_profiling import ProfileReport\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns \n\nfrom sklearn.metrics import silhouette_score, silhouette_samples\nimport sklearn.metrics\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cluster import KMeans, DBSCAN, AgglomerativeClustering\nfrom sklearn.mixture import GaussianMixture\nfrom sklearn.metrics import accuracy_score, cohen_kappa_score, f1_score, log_loss, confusion_matrix\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.datasets import make_classification\n\nimport scipy\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\n","ce282e06":"df1=pd.read_csv(\"..\/input\/200-financial-indicators-of-us-stocks-20142018\/2014_Financial_Data.csv\")\ndf2=pd.read_csv(\"..\/input\/200-financial-indicators-of-us-stocks-20142018\/2015_Financial_Data.csv\")\ndf3=pd.read_csv(\"..\/input\/200-financial-indicators-of-us-stocks-20142018\/2016_Financial_Data.csv\")\ndf4=pd.read_csv(\"..\/input\/200-financial-indicators-of-us-stocks-20142018\/2017_Financial_Data.csv\")\ndf5=pd.read_csv(\"..\/input\/200-financial-indicators-of-us-stocks-20142018\/2018_Financial_Data.csv\")","85ea9dbd":"df1['Year']=2014\ndf2['Year']=2015\ndf3['Year']=2016\ndf4['Year']=2017\ndf5['Year']=2018","97739992":"df1.columns","281ba7e0":"df1.info()","716077a0":"### Drop the Stock Column\ndf1 = df1.drop(df1.columns[0], axis = 1)\ndf2 = df2.drop(df2.columns[0], axis = 1)\ndf3 = df3.drop(df3.columns[0], axis = 1)\ndf4 = df4.drop(df4.columns[0], axis = 1)\ndf5 = df5.drop(df5.columns[0], axis = 1)","83f229ff":"### Convert Sector to Numeric\n#df1 = pd.get_dummies(df1,columns=['Sector'],dtype= 'int64')\n#df2 = pd.get_dummies(df2,columns=['Sector'],dtype= 'int64')\n#df3 = pd.get_dummies(df3,columns=['Sector'],dtype= 'int64')\n#df4 = pd.get_dummies(df4,columns=['Sector'],dtype= 'int64')\n#df5 = pd.get_dummies(df5,columns=['Sector'],dtype= 'int64')","8f015963":"### Change Data Type\ndf1['Class'] = df1['Class'].astype(object)\ndf2['Class'] = df2['Class'].astype(object)\ndf3['Class'] = df3['Class'].astype(object)\ndf4['Class'] = df4['Class'].astype(object)\ndf5['Class'] = df5['Class'].astype(object)","bee51b05":"df1.rename(columns={\"2015 PRICE VAR [%]\": \"PRICE_VAR\"},inplace=True)\ndf2.rename(columns={\"2016 PRICE VAR [%]\": \"PRICE_VAR\"},inplace=True)\ndf3.rename(columns={\"2017 PRICE VAR [%]\": \"PRICE_VAR\"},inplace=True)\ndf4.rename(columns={\"2018 PRICE VAR [%]\": \"PRICE_VAR\"},inplace=True)\ndf5.rename(columns={\"2019 PRICE VAR [%]\": \"PRICE_VAR\"},inplace=True)\n","3d205c81":"df1.drop(['Sector'], axis=1, inplace=True)\ndf2.drop(['Sector'], axis=1, inplace=True)\ndf3.drop(['Sector'], axis=1, inplace=True)\ndf4.drop(['Sector'], axis=1, inplace=True)\ndf5.drop(['Sector'], axis=1, inplace=True)","92b42b9c":"from sklearn.impute import KNNImputer\nimputer = KNNImputer(n_neighbors=20, weights='distance', metric='nan_euclidean', copy=True)","ff419641":"df1_clean = imputer.fit_transform(df1)\ndf1_clean = pd.DataFrame(df1_clean)\ndf1_clean.columns = list(df1)","137bdd32":"df2_clean = imputer.fit_transform(df2)\ndf2_clean = pd.DataFrame(df2_clean)\ndf2_clean.columns = list(df2)\n","34399f01":"df3_clean = imputer.fit_transform(df3)\ndf3_clean = pd.DataFrame(df3_clean)\ndf3_clean.columns = list(df3)","3abfc53b":"df4_clean = imputer.fit_transform(df4)\ndf4_clean = pd.DataFrame(df4_clean)\ndf4_clean.columns = list(df4)","65422024":"df5_clean = imputer.fit_transform(df5)\ndf5_clean = pd.DataFrame(df5_clean)\ndf5_clean.columns = list(df5)","8312ed91":"\n##### Check Missing Value Again\ndf1_clean.isnull().sum()\ndf2_clean.isnull().sum()\ndf3_clean.isnull().sum()\ndf4_clean.isnull().sum()\ndf5_clean.isnull().sum()","b953f01e":"###### Concatenate\ndata = pd.concat([df1_clean, df2_clean, df3_clean, df4_clean, df5_clean])","d3d288c7":"data.info()","7d752a31":"data.head()","269a9dfb":"# Data missing information \ndata_info=pd.DataFrame(data.dtypes).T.rename(index={0:'column type'})\ndata_info=data_info.append(pd.DataFrame(data.isnull().sum()).T.rename(index={0:'null values (nb)'}))\ndata_info=data_info.append(pd.DataFrame(data.isnull().sum()\/data.shape[0]*100).T.\n                         rename(index={0:'null values (%)'}))\ndisplay(data_info)","84f54b18":"data.dtypes","80d94288":"# Train Year: 2014 - 2016\n# Test Year:  2017 - 2018\nall_year = set(data['Year'].unique())\ntest_year = set(range(2017,2018,1))\ntrain_year = all_year - test_year\n\nlen(train_year), len(test_year), len(all_year)\n\ntrain = data[data['Year'].isin(train_year)]\ntest = data[data['Year'].isin(test_year)]\n\ntrain['Class'].value_counts()\n\nclass_ratio = len(train[train['Class']==1]) \/ len(train.index)\nclass_ratio\n\nlen(test) \/ len(data)\nlen(train) \/ len(data)","26d79600":"#from sklearn.model_selection import train_test_split\n#X_train, X_test, y_train, y_test = train_test_split(data1, data1['Class'], test_size=0.3, random_state=42)\ndata.drop(['Year','PRICE_VAR'], axis=1, inplace=True)\ntrain.drop(['Year','PRICE_VAR'], axis=1, inplace=True)\ntest.drop(['Year','PRICE_VAR'], axis=1, inplace=True)","2b3285c9":"test2=test.copy()","6d99e4dd":"test2.drop('Class', axis=1,inplace=True)","6e3b52db":"test.columns","2646011e":"test2.columns","04d79644":"data.columns","6032e047":"data['Class']= data['Class'].astype('int64')\ntrain['Class']= train['Class'].astype('int64')\ntest['Class']= test['Class'].astype('int64')","fd9b8370":"!pip install pycaret\nfrom pycaret.classification import *\nclassification_setup = setup(data= train, target='Class',remove_outliers=True,normalize=True, remove_multicollinearity=True ,normalize_method='robust',\n                            feature_selection=True ,silent = True,session_id = 6563)","2fd2379c":"compare_models(sort = 'AUC')","92541282":"cb_model = create_model('catboost')","a04bb3a5":"interpret_model(cb_model)","236f4233":"pred_cb = predict_model(cb_model, data=test2)","a3deba14":"best=automl(use_holdout=True)","6cb7550a":"best","f4f3c674":"cb_model","1c5dfb85":"lgbm_model = create_model('lightgbm')","e0a9604b":"evaluate_model(lgbm_model)","1e7ef6ec":"from sklearn.neural_network import MLPClassifier","00675982":"X_train=train.drop('Class', axis=1)","9acf531e":"Y_train=train['Class']","35c63605":"clf = MLPClassifier(random_state=1, hidden_layer_sizes=150,activation='logistic', solver='lbfgs',alpha=0.2, learning_rate='adaptive',max_iter=300).fit(X_train, Y_train)","4def16ce":"pred=clf.predict(test2)","b55e3a45":"confusion_matrix(pred, test['Class'])","943eca97":"from sklearn.metrics import roc_auc_score, classification_report\nroc_auc_score(test['Class'], pred)","b9edadc1":"print(classification_report(pred,test['Class']))","99d3dd33":"#Best Model Catboost Classifier","900732f8":"![](http:\/\/)# Neural Networks since that is not included in pycaret ","f3fe5390":"Impute missing values using KNN Imputer","d013a150":"# Classification modeling approach 2 \n"}}