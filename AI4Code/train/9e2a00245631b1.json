{"cell_type":{"0b77bb64":"code","cc2f4654":"code","7d4d1493":"code","6030b253":"code","fa777133":"code","1f57b5ad":"code","68e09508":"code","e1c6cfa7":"code","decc72a8":"code","247f4656":"code","9b13634d":"code","1af2d422":"code","1d9f76eb":"markdown","e2bdd471":"markdown","2e56a6f2":"markdown","b9ba872d":"markdown","23c188d3":"markdown","a511632f":"markdown"},"source":{"0b77bb64":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cc2f4654":"df = pd.read_csv('\/kaggle\/input\/60k-stack-overflow-questions-with-quality-rate\/data.csv')\ndf.head()","7d4d1493":"df.tail()","6030b253":"df=df.drop(['Id','CreationDate'],axis=1)\ndf","fa777133":"df.isnull().sum()","1f57b5ad":"df.dtypes","68e09508":"x = df.drop(columns=['Y'])\nx","e1c6cfa7":"y = df['Y']\ny","decc72a8":"from sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder()  \nx= x.apply(label_encoder.fit_transform)\nx","247f4656":"y= label_encoder.fit_transform(y)\ny","9b13634d":"from sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=4)","1af2d422":"from sklearn.linear_model import LassoCV\nfrom sklearn.datasets import make_regression\n#x_train, x_test = make_regression(x.all(x,y),noise=4, random_state=0)\nreg = LassoCV(cv=5, random_state=0).fit(x_train, y_train)\nreg.score(x_train, y_train)","1d9f76eb":"# **LassoCV:**\n      \n  ** In statistics and machine learning, lasso (least absolute shrinkage and selection operator; also Lasso or LASSO) is a classification analysis method that performs both variable selection and regularization in order to enhance the prediction accuracy and interpretability of the statistical model it produces.","e2bdd471":"# LassoCV","2e56a6f2":"# Train and Test Split","b9ba872d":"# Label Encoding","23c188d3":"# References\n\n\n[https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LassoCV.html#sklearn.linear_model.LassoCV](http:\/\/)\n[](http:\/\/)","a511632f":"***Pros:***\n* As any regularization method, it can avoid overfitting.\n* It can do feature selection.\n* It is fast in terms of inference and fitting.\n\n***Cons:***\n* The model selected by lasso is not stable.\n* The model selection result is not intuitive to interpret."}}