{"cell_type":{"79ffbcc1":"code","64469351":"code","693c8802":"code","d736ba78":"code","dd1fa549":"code","afb9e1d3":"code","30c27750":"code","0b7b31f6":"code","79b032c0":"code","f0cc9617":"code","8f6876e6":"markdown","4869f6c1":"markdown"},"source":{"79ffbcc1":"import numpy as np\nfrom collections import Counter\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import ListedColormap","64469351":"class KNN():\n    def __init__(self,k=3):\n        self.k = k\n    def euclidean_distance(self,x1,x2):\n        return np.sqrt(np.sum((x1-x2)**2))\n    def prediction(self,x):\n        distance = [self.euclidean_distance(x,x_train) for x_train in self.X ]\n        k_idx = np.argsort(distance)[:self.k]\n        k_label = [self.y[i] for i in k_idx]\n        common = Counter(k_label).most_common(1)\n        return common[0][0]\n    def fit(self,X,y):\n        self.X = X\n        self.y = y\n    def predict(self,X):\n        pred = [self.prediction(x) for x in X]\n        return np.array(pred)\n    \n","693c8802":"iris = datasets.load_iris()\nX,y = iris.data,iris.target","d736ba78":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","dd1fa549":"print(X_train.shape)\nprint(X_train[0])","afb9e1d3":"print(y_train.shape)\nprint(y_train)","30c27750":"cmap = ListedColormap(['#FF0000','#00FF00','#0000FF'])","0b7b31f6":"plt.scatter(X[:,0],X[:,1],c=y,cmap = cmap,edgecolors='k')","79b032c0":"def accuracy(y_true,y_pred):\n    acc = np.sum(y_true == y_pred)\/len(y_true)\n    return acc","f0cc9617":"clf = KNN()\nclf.fit(X_train,y_train)\npredictions = clf.predict(X_test)\nprint('Accuracy:',accuracy(y_test,predictions))","8f6876e6":"# Importing Libraries","4869f6c1":"# Declaring the Model"}}