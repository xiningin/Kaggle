{"cell_type":{"8ea3b263":"code","b6fddb51":"code","b8b2f026":"code","885a1e6a":"code","e2f45b24":"code","bc4c3f02":"code","e254bfc6":"code","66304916":"code","fe39d683":"code","7c73e696":"code","fd91a904":"code","db9ea4de":"code","5060212b":"code","d0e10d86":"code","1575ee05":"code","cea0af07":"code","b2c3897a":"code","e6412cd0":"code","7f796cad":"code","55971468":"code","cc2e8017":"code","a08cfdab":"code","20766d56":"code","3e593e3a":"code","fde48f2a":"code","e5e149d5":"code","bc55f6f0":"code","dd5a290b":"code","e8437d9b":"code","d24cc358":"code","09469d7b":"markdown","6350680e":"markdown","93b69ccb":"markdown","dce4b825":"markdown"},"source":{"8ea3b263":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b6fddb51":"## Reading data as setting id column as index_col\ntrain = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\", index_col=0)\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\", index_col=0)","b8b2f026":"# Shape of train data\ntrain.shape","885a1e6a":"# Preview train data\ntrain.head()","e2f45b24":"# Shape of test data\ntest.shape","bc4c3f02":"# Info on train data\ntrain.info()","e254bfc6":"# Info on test data\ntest.info()","66304916":"# Descriptive statistics for numerical variables\ntrain.describe().transpose()","fe39d683":"y = train['target']\ny","7c73e696":"y.hist()","fd91a904":"X = train.drop(['target'], axis=1)\nX","db9ea4de":"import seaborn as sb\nimport matplotlib.pyplot as plt","5060212b":"# Correlation Plot \nplt.figure(figsize = (16, 12))\nsb.heatmap(X.corr())","d0e10d86":"object_cols = []\nfor column in train.columns.tolist():\n    if train[column].dtype == 'object':\n        object_cols.append(column)\nprint(object_cols)","1575ee05":"from sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split","cea0af07":"X_copy = X.copy()\ntest_copy = test.copy()","b2c3897a":"ordinal_encoder = OrdinalEncoder()\n","e6412cd0":"X_copy[object_cols] = ordinal_encoder.fit_transform(X_copy[object_cols])","7f796cad":"X_copy.head()","55971468":"# Correlation Plot \nplt.figure(figsize = (16, 12))\nsb.heatmap(X_copy.corr())","cc2e8017":"test_copy[object_cols] = ordinal_encoder.fit_transform(test_copy[object_cols])","a08cfdab":"test_copy","20766d56":"X_copy.info()","3e593e3a":"from sklearn.model_selection import KFold","fde48f2a":"# create a KFold object with 5 splits \nfolds = KFold(n_splits = 5, shuffle = True, random_state = 100)","e5e149d5":"X_train, X_valid, y_train, y_valid = train_test_split(X_copy, y, random_state=42)","bc55f6f0":"print(X_train.shape, X_valid.shape, y_train.shape, y_valid.shape)","dd5a290b":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import cross_val_score","e8437d9b":"# Train the model (will take about 10 minutes to run)\nmodel = RandomForestRegressor(random_state=1)\nmodel.fit(X_train, y_train)\npreds_valid = model.predict(X_valid)\nprint(mean_squared_error(y_valid, preds_valid, squared=False))","d24cc358":"predictions = model.predict(test_copy)\n\n# Save the predictions to a CSV file\noutput = pd.DataFrame({'Id': test_copy.index,\n                       'target': predictions})\noutput.to_csv('submission.csv', index=False)","09469d7b":"Following observations can made from the above output-\n\nThere are 300000 rows and 25 columns in training set and in test set there are 200000 rows and 24 columns.\nBoth categorical and numerical varibles are present in the dataset.","6350680e":"Model Building\nWe will begin by building a very basic linear regression model. This will be our baseline model, on which we will keep on improving as we move to experiment with more advanced models.","93b69ccb":"# Check model performance on 5 different splits of data\nlm_scores = cross_val_score(model, X_train, y_train, scoring='neg_root_mean_squared_error', cv=folds)\nlm_scores ","dce4b825":"We have prepared the dataset for modeling and now we can proceed to model building. To check the performance of model on unseen data, we will be using 5 fold cross validation."}}