{"cell_type":{"ec4acc53":"code","d687c00d":"code","7281d2f9":"code","f4fec249":"code","f4708708":"code","66212dbe":"code","f6644723":"code","eb18f751":"code","a04c6d9f":"code","1b8f259c":"code","9cab8514":"code","11e5abcc":"code","02912103":"code","bbb69ea9":"code","a97a833d":"code","76a6d3d6":"code","68c132e5":"code","c77e5e1f":"code","63a167c5":"code","51774155":"code","f486a372":"code","a97a3d27":"code","9a48be7f":"code","1fe472d5":"code","066bf03f":"code","b0cf814f":"code","c84aebb4":"code","ccc87d20":"code","90b0e546":"code","47c7ee86":"code","1f6ea334":"code","ce715232":"code","6ac82a54":"code","bde5c2c3":"code","d8427ba9":"code","21439385":"code","aac60dfa":"code","d788d9fc":"code","ccd8c25d":"code","2d6af70a":"code","2ccffa60":"code","710f81ab":"code","9ffec0e0":"code","87ebf585":"code","0ada4687":"code","74a5393b":"code","fd0501a5":"code","0ae9182e":"markdown","4bf2aaf1":"markdown","11c4d18e":"markdown","9f65564f":"markdown","334cf3b8":"markdown","37727ac6":"markdown","1c59878e":"markdown","903db7ce":"markdown","128e92d0":"markdown","eff5e6bb":"markdown","2a756fa8":"markdown","9f0e60ee":"markdown","fe5b9741":"markdown","7b48117c":"markdown","8568d62d":"markdown","f12bf611":"markdown","658249aa":"markdown"},"source":{"ec4acc53":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d687c00d":"# https:\/\/courses.lumenlearning.com\/suny-socialproblems\/chapter\/6-3-life-expectancy-and-the-graying-of-society\/","7281d2f9":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# to suppress warnings \nfrom warnings import filterwarnings\nfilterwarnings('ignore')","f4fec249":"df = pd.read_csv('\/kaggle\/input\/life-expectancy-who\/Life Expectancy Data.csv')\ndf.head()","f4708708":"df.shape","66212dbe":"df.info()","f6644723":"df.columns","eb18f751":"df.isnull().sum()","a04c6d9f":"df.isnull().sum()","1b8f259c":"df.shape","9cab8514":"# list of columns with missing values\nmis_col = [ 'Life expectancy ', 'Adult Mortality', 'Alcohol', 'Hepatitis B',' BMI ',  'Polio', 'Total expenditure',\n       'Diphtheria ',  'GDP', 'Population',' thinness  1-19 years', ' thinness 5-9 years','Income composition of resources',\n           'Schooling']\n\n# Imputing columns\nfor i in mis_col:\n    df.loc[df.loc[:,i].isnull(),i] = df.loc[:,i].median()\nprint(\"count of NULL values after imputation\")\ndf.isnull().sum()","11e5abcc":"plt.figure(figsize = (20,5))\ndf.boxplot()\nplt.xticks(rotation = 90)\nplt.show()","02912103":"df_1 = df.drop(['Population'], axis=1)","bbb69ea9":"plt.figure(figsize = (20,5))\n\n\ndf_1.boxplot()\nplt.xticks(rotation = 90)\nplt.show()","a97a833d":"df_new = df.drop(['Country','Year','Status'], axis = 1)","76a6d3d6":"fig,ax = plt.subplots(nrows = 5, ncols = 4, figsize = (20,25))\n\nfor variable, subplot in zip(df_new.columns, ax.flatten()):\n    sns.boxplot(df_new[variable], ax = subplot)\nplt.show()","68c132e5":"fig,ax = plt.subplots(nrows = 5, ncols = 4, figsize = (20,25))\n\nfor variable, subplot in zip(df_new.columns, ax.flatten()):\n    sns.distplot(df_new[variable], ax = subplot)\nplt.show()","c77e5e1f":"q1 = df.quantile(0.25)\nq3 = df.quantile(0.75)\n\niqr = q3 - q1\n\nll = q1 - (3 * iqr)\nul = q3 + (3 * iqr)","63a167c5":"df2 = df[~((df < ll) |(df > ul)).any(axis =1)]\ndf2.shape","51774155":"df.describe()","f486a372":"plt.figure(figsize = (15, 10))\n\nsns.heatmap(df.corr(), annot = True)\nplt.show()","a97a3d27":"# Exploratory Data Analysis","9a48be7f":"df.columns","1fe472d5":"sns.barplot(df['Life expectancy '], df['Status'])\nplt.show()","066bf03f":"sort_country = df.groupby('Country')['Life expectancy '].mean().sort_values(ascending = False)\nsort_country.head(10),sort_country.tail(10)","b0cf814f":"plt.scatter(df['Adult Mortality'],df['Life expectancy '])\nplt.xlabel('Adult Mortality')\nplt.ylabel('Life expectancy ')\nplt.show()","c84aebb4":"le_country = df.groupby('Country')['Life expectancy '].mean().sort_values(ascending=False)\nle_country.plot(kind='bar', figsize=(50,15), fontsize=15)","ccc87d20":"gdp_country = df.groupby('Country')['GDP'].mean().sort_values(ascending=True)\ngdp_country.plot(kind='bar', figsize=(50,15), fontsize=20)","90b0e546":"df.columns","47c7ee86":"mort_country = df.groupby('Country')['Adult Mortality'].mean().sort_values(ascending=False)\nmort_country.plot(kind='bar', figsize=(50,15), fontsize=20)","1f6ea334":"imort_country = df.groupby('Country')['infant deaths'].mean().sort_values(ascending=False)\nimort_country.plot(kind='bar', figsize=(50,15), fontsize=20)","ce715232":"df.groupby('Year')['Life expectancy '].mean()","6ac82a54":"df.columns","bde5c2c3":"import statsmodels.api as sm\n\nX = df.iloc[:,[4,5,11]]\ny = df['Life expectancy ']\nXc = sm.add_constant(X)\nmodel = sm.OLS(y,Xc).fit()\nmodel.summary()","d8427ba9":"x = df['Income composition of resources']\ny = df['Life expectancy ']\nXc = sm.add_constant(X)\nmodel = sm.OLS(y,Xc).fit()\nmodel.summary()","21439385":"X = df.iloc[:,4:21]\ny = df['Life expectancy ']","aac60dfa":"from sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.3, random_state= 10)","d788d9fc":"print(X_train.shape)\nprint(Y_train.shape)\nprint(X_test.shape)\nprint(Y_test.shape)","ccd8c25d":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error","2d6af70a":"model = LinearRegression().fit(X_train, Y_train)\npred= model.predict(X_test)","2ccffa60":"print(r2_score(pred, Y_test),mean_squared_error(pred, Y_test),mean_absolute_error(pred, Y_test))","710f81ab":"X = df.iloc[:,4:6]\ny = df['Life expectancy ']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.3, random_state= 10)\n","9ffec0e0":"model = LinearRegression().fit(X_train, Y_train)\npred= model.predict(X_test)","87ebf585":"print(r2_score(pred, Y_test),mean_squared_error(pred, Y_test),mean_absolute_error(pred, Y_test))","0ada4687":"df.columns","74a5393b":"X = df.iloc[:,[8,9,12]]\ny = df['Life expectancy ']\n\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.3, random_state= 10)\n\nmodel = LinearRegression().fit(X_train, Y_train)\npred= model.predict(X_test)","fd0501a5":"print(r2_score(pred, Y_test),mean_squared_error(pred, Y_test),mean_absolute_error(pred, Y_test))","0ae9182e":"- we check for outliers in other columns after dropping the population column to observe the range of outliers.","4bf2aaf1":"- Life expectancy is positively correlated with\n    education, resource income composition, GDP, diphtheria, polio, and percentage spending.\n- Life expectancy is negatively correlated with \n    Adult_mortality, Thinness_1-19_years, Thinness_5-9_years, HIV \/ AIDS, Under_five_deaths, and Infant_deaths.\n- infant deaths is positively correlated with under-five deaths\n- adult mortality is negatively correlated with life expectancy, income compositions of resources, schooling and positive   correlated with HIV\/AIDS \n- GDP is positively correlated with percentage expenditure\n- Diphtheria has a positively with polio","11c4d18e":"- If we choose to treat outliers using Inter Quartile Range we could lose about 50% of data which is not right perspective of looking at data.\n\n- Outliers tell us that the observations of the given data set or how the data points differ significantly from the overall perspective. Simply saying outlier. this would be an error during data collection but in our case its just the way our data is, in that case treating outliers would mean losing data from our dataset.\n\n- In case we treat outlier we will be loosing a large number of data points...","9f65564f":"- Average Life Expectany is about 69.23.\n- Anomalies in the data :-\n- Max infant deaths per 1000 population is beyond 1000 which can be an anomaly.\n- range of Expenditure on health as a percentage of Gross Domestic Product per capita is high\n- Max measles per 1000 population is observed to be as high as 212183\n- BMI above 29 is considered to be obese but our dat has max BMI of 87 which is unrealistic.\n- these values could be anomalies or exceptions","334cf3b8":"- The country with highest life expectancy is Japan\n- The country with lowest life expectancy is Sierra Leone","37727ac6":"- Country- Country\n- Year- Year\n- Status- Developed or Developing status\n- Life Expectancy- Age(years)\n- Adult Mortality- Adult Mortality Rates of both sexes(probability of dying between 15&60 years per 1000 population)\n- Infant Deaths- Number of Infant Deaths per 1000 population\n- Alcohol- Alcohol, recorded per capita (15+) consumption (in litres of pure alcohol)\n- Percent Expenditure- Expenditure on health as a percentage of Gross Domestic Product per capita(%)\n- Hep B- Hepatitis B (HepB) immunization coverage among 1-year-olds(%)\n- Measles- number of reported measles cases per 1000 population\n- BMI- Average Body Mass Index of entire population\n- U-5 Deaths- Number of under-five deaths per 1000 population\n- Polio- Polio(Pol3) immunization coverage among 1-year-olds(%)\n- Total Expenditure- General government expenditure on health as a percentage of total government expenditure(%)\n- Diphtheria- Diphtheria tetanus toxoid and pertussis (DTP3) immunization coverage among 1-year-olds(%)\n- HIV\/AIDS- Deaths per 1000 live births HIV\/AIDS(0-4 years)\n- GDP- Gross Domestic Product per capita(in USD)\n- Population- Population Thinness 10-19- Prevalence of thinness among children and adolescents for Age 10 to 19(%)\n- Thinness 5-9- Prevalence of thinness among children for Age 5 to 9(%)\n- Income Composition- Human Development Index in terms of income composition of resources(0-1)\n- Schooling- Number of years of Schooling","1c59878e":"### Description of Columns","903db7ce":"- the points ahead and after wiskers show presence of outliers\n- each data point does not fall into a single bin in a histogram, but instead contributes a small volume of area to the total distribution. \n- the distribution of the graph represents the distribution of outliers.","128e92d0":"- As we see larger number of missing values\n- we can treat the missing values instead of droping the datapoints\n- fill the missing values with mean or median\n- But considering outliers we prefer using median.","eff5e6bb":"- categorical data - 2 columns","2a756fa8":"#### Treating Outliers","9f0e60ee":"- we can observe maximum outlier in 'Population' column.","fe5b9741":"#### Checking for Outliers","7b48117c":"- Life expectancy in developed country is better when compared to that of developing country.","8568d62d":"#### Checking for Null Values","f12bf611":"#### Correlation","658249aa":"- dataset consist of 2938 rows and 22 columns"}}