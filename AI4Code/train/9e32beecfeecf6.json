{"cell_type":{"ac1c93bc":"code","d67c0ed2":"code","22dec5dd":"code","bc1547e9":"code","efebca3c":"code","3ee2a6d0":"code","dd3e56b0":"code","02c6c543":"code","74459bdf":"code","8e2e2d2b":"code","4f7b5056":"code","28bbdfb3":"code","f40a2c2f":"code","3d7b0cfa":"code","c1da447f":"code","0c246160":"code","381f7dc7":"code","2c167a13":"code","47780c77":"code","932b7ce9":"code","a4159720":"code","77ef9ad8":"code","5c553997":"code","5190042e":"code","64659cf4":"code","84b950d1":"code","af9b1966":"code","b650cafe":"code","391e8446":"code","7cf4bf0d":"code","a297b98a":"code","8d8b750f":"code","f7d88d05":"code","6acd7063":"code","068333a5":"code","6a8ba028":"code","b331d9d4":"code","0e8f7774":"code","e45f89ca":"code","00d688a9":"code","a8dd1be1":"code","37abd193":"code","23224093":"code","257231fa":"code","ac957a62":"code","d0bdc8bd":"code","92fa31bb":"code","1820fda5":"code","86b6dd76":"code","a6dfa568":"code","dcf7e7af":"code","bc8e97a0":"code","bff3ca76":"code","13999a5e":"code","7d70b9bc":"code","9718d731":"code","ef472059":"code","c8655622":"code","ea37c56b":"code","7ed7bc2c":"code","84219c13":"code","c75d081e":"markdown","1b9ed9e6":"markdown","59de91f8":"markdown","057852a0":"markdown","a1a4ad15":"markdown","e3ba7713":"markdown","26059ecd":"markdown","44249b65":"markdown","40c81805":"markdown","3263d34e":"markdown","e2e651b7":"markdown","b1a1b462":"markdown","b2fbdda5":"markdown","c2ed7faa":"markdown","4c815299":"markdown","f5a48205":"markdown","ae434c5c":"markdown","05304640":"markdown","7f6c14a5":"markdown","9e537800":"markdown","98857690":"markdown","f52da57f":"markdown","e404774e":"markdown","8390b8e4":"markdown","0de8644a":"markdown","11fc69a5":"markdown","b8017b7c":"markdown","b879be05":"markdown","c3f55ad9":"markdown","b236e24e":"markdown","5f3baeec":"markdown","2d4eb271":"markdown","f0e870ff":"markdown","f34d6c47":"markdown","3d18a423":"markdown","cd82f512":"markdown","8dfe457c":"markdown","2282f9fe":"markdown","bd87bab7":"markdown","34078dda":"markdown","6d7e3ad0":"markdown","deb59d39":"markdown","3726c9b9":"markdown","f22f60b0":"markdown","212b5fc1":"markdown"},"source":{"ac1c93bc":"import gc\nimport os\nfrom pathlib import Path\nimport random\nimport sys\n\nfrom tqdm.notebook import tqdm\nimport numpy as np\nimport pandas as pd\nimport scipy as sp\n\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom IPython.core.display import display, HTML\n\n# --- plotly ---\nfrom plotly import tools, subplots\nimport plotly.offline as py\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport plotly.figure_factory as ff\nimport plotly.io as pio\npio.templates.default = \"plotly_dark\"\n\n# --- models ---\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import KFold\nimport lightgbm as lgb\nimport xgboost as xgb\nimport catboost as cb\n\n# --- setup ---\npd.set_option('max_columns', 50)","d67c0ed2":"# Input data files are available in the \"..\/input\/\" directory.\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    filenames.sort()\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","22dec5dd":"%%time\ndatadir = Path('\/kaggle\/input\/covid19-global-forecasting-week-2')\n\n# Read in the data CSV files\ntrain = pd.read_csv(datadir\/'train.csv')\ntest = pd.read_csv(datadir\/'test.csv')\nsubmission = pd.read_csv(datadir\/'submission.csv')\n","bc1547e9":"train","efebca3c":"test","3ee2a6d0":"submission","dd3e56b0":"train.rename({'Country_Region': 'country', 'Province_State': 'province', 'Id': 'id', 'Date': 'date', 'ConfirmedCases': 'confirmed', 'Fatalities': 'fatalities'}, axis=1, inplace=True)\ntest.rename({'Country_Region': 'country', 'Province_State': 'province', 'Id': 'id', 'Date': 'date', 'ConfirmedCases': 'confirmed', 'Fatalities': 'fatalities'}, axis=1, inplace=True)\ntrain['country_province'] = train['country'].fillna('') + '\/' + train['province'].fillna('')\ntest['country_province'] = test['country'].fillna('') + '\/' + test['province'].fillna('')","02c6c543":"ww_df = train.groupby('date')[['confirmed', 'fatalities']].sum().reset_index()\nww_df['new_case'] = ww_df['confirmed'] - ww_df['confirmed'].shift(1)\nww_df.tail()","74459bdf":"ww_melt_df = pd.melt(ww_df, id_vars=['date'], value_vars=['confirmed', 'fatalities', 'new_case'])\nww_melt_df","8e2e2d2b":"fig = px.line(ww_melt_df, x=\"date\", y=\"value\", color='variable', \n              title=\"Worldwide Confirmed\/Death Cases Over Time\")\nfig.show()","4f7b5056":"fig = px.line(ww_melt_df, x=\"date\", y=\"value\", color='variable',\n              title=\"Worldwide Confirmed\/Death Cases Over Time (Log scale)\",\n             log_y=True)\nfig.show()","28bbdfb3":"ww_df['mortality'] = ww_df['fatalities'] \/ ww_df['confirmed']\n\nfig = px.line(ww_df, x=\"date\", y=\"mortality\", \n              title=\"Worldwide Mortality Rate Over Time\")\nfig.show()","f40a2c2f":"country_df = train.groupby(['date', 'country'])[['confirmed', 'fatalities']].sum().reset_index()\ncountry_df.tail()","3d7b0cfa":"countries = country_df['country'].unique()\nprint(f'{len(countries)} countries are in dataset:\\n{countries}')","c1da447f":"target_date = country_df['date'].max()\n\nprint('Date: ', target_date)\nfor i in [1, 10, 100, 1000, 10000]:\n    n_countries = len(country_df.query('(date == @target_date) & confirmed > @i'))\n    print(f'{n_countries} countries have more than {i} confirmed cases')","0c246160":"ax = sns.distplot(np.log10(country_df.query('date == \"2020-03-27\"')['confirmed'] + 1))\nax.set_xlim([0, 6])\nax.set_xticks(np.arange(7))\n_ = ax.set_xticklabels(['0', '10', '100', '1k', '10k', '100k'])","381f7dc7":"top_country_df = country_df.query('(date == @target_date) & (confirmed > 1000)').sort_values('confirmed', ascending=False)\ntop_country_melt_df = pd.melt(top_country_df, id_vars='country', value_vars=['confirmed', 'fatalities'])","2c167a13":"fig = px.bar(top_country_melt_df.iloc[::-1],\n             x='value', y='country', color='variable', barmode='group',\n             title=f'Confirmed Cases\/Deaths on {target_date}', text='value', height=1500, orientation='h')\nfig.show()","47780c77":"top30_countries = top_country_df.sort_values('confirmed', ascending=False).iloc[:30]['country'].unique()\ntop30_countries_df = country_df[country_df['country'].isin(top30_countries)]\nfig = px.line(top30_countries_df,\n              x='date', y='confirmed', color='country',\n              title=f'Confirmed Cases for top 30 country as of {target_date}')\nfig.show()","932b7ce9":"top30_countries = top_country_df.sort_values('fatalities', ascending=False).iloc[:30]['country'].unique()\ntop30_countries_df = country_df[country_df['country'].isin(top30_countries)]\nfig = px.line(top30_countries_df,\n              x='date', y='fatalities', color='country',\n              title=f'Fatalities for top 30 country as of {target_date}')\nfig.show()","a4159720":"top_country_df = country_df.query('(date == @target_date) & (confirmed > 100)')\ntop_country_df['mortality_rate'] = top_country_df['fatalities'] \/ top_country_df['confirmed']\ntop_country_df = top_country_df.sort_values('mortality_rate', ascending=False)","77ef9ad8":"fig = px.bar(top_country_df[:30].iloc[::-1],\n             x='mortality_rate', y='country',\n             title=f'Mortality rate HIGH: top 30 countries on {target_date}', text='mortality_rate', height=800, orientation='h')\nfig.show()","5c553997":"fig = px.bar(top_country_df[-30:],\n             x='mortality_rate', y='country',\n             title=f'Mortality rate LOW: top 30 countries on {target_date}', text='mortality_rate', height=800, orientation='h')\nfig.show()","5190042e":"all_country_df = country_df.query('date == @target_date')","64659cf4":"all_country_df['confirmed_log1p'] = np.log10(all_country_df['confirmed'] + 1)\nfig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"confirmed_log1p\", \n                    hover_name=\"country\", hover_data=[\"confirmed\"],\n                    range_color=[all_country_df['confirmed_log1p'].min(), all_country_df['confirmed_log1p'].max()], \n                    color_continuous_scale=\"peach\", \n                    title='Countries with Confirmed Cases')\n\n# I'd like to update colorbar to show raw values, but this does not work somehow...\n# Please let me know if you know how to do this!!\ntrace1 = list(fig.select_traces())[0]\ntrace1.colorbar = go.choropleth.ColorBar(\n    tickvals=[0, 1, 2, 3, 4, 5],\n    ticktext=['1', '10', '100', '1000','10000', '10000'])\nfig.show()","84b950d1":"all_country_df['fatalities_log1p'] = np.log10(all_country_df['fatalities'] + 1)\n\nfig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"fatalities_log1p\", \n                    hover_name=\"country\", range_color=[0, 4], \n                    color_continuous_scale=\"peach\", \n                    title='Countries with fatalities')\nfig.show()","af9b1966":"all_country_df['mortality_rate'] = all_country_df['fatalities'] \/ all_country_df['confirmed']\nfig = px.choropleth(all_country_df, locations=\"country\", \n                    locationmode='country names', color=\"mortality_rate\", \n                    hover_name=\"country\", range_color=[0, 0.12], \n                    color_continuous_scale=\"peach\", \n                    title='Countries with mortality rate')\nfig.show()","b650cafe":"n_countries = 20\nn_start_death = 10\nfatality_top_countires = top_country_df.sort_values('fatalities', ascending=False).iloc[:n_countries]['country'].values\ncountry_df['date'] = pd.to_datetime(country_df['date'])\n\n\ndf_list = []\nfor country in fatality_top_countires:\n    this_country_df = country_df.query('country == @country')\n    start_date = this_country_df.query('fatalities > @n_start_death')['date'].min()\n    this_country_df = this_country_df.query('date >= @start_date')\n    this_country_df['date_since'] = this_country_df['date'] - start_date\n    this_country_df['fatalities_log1p'] = np.log10(this_country_df['fatalities'] + 1)\n    this_country_df['fatalities_log1p'] -= this_country_df['fatalities_log1p'].values[0]\n    df_list.append(this_country_df)\n\ntmpdf = pd.concat(df_list)\ntmpdf['date_since_days'] = tmpdf['date_since'] \/ pd.Timedelta('1 days')","391e8446":"fig = px.line(tmpdf,\n              x='date_since_days', y='fatalities_log1p', color='country',\n              title=f'Fatalities by country since 10 deaths, as of {target_date}')\nfig.add_trace(go.Scatter(x=[0, 21], y=[0, 3], name='Double by 7 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.add_trace(go.Scatter(x=[0, 42], y=[0, 3], name='Double by 14 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.add_trace(go.Scatter(x=[0, 63], y=[0, 3], name='Double by 21 days', line=dict(dash='dash', color=('rgb(200, 200, 200)'))))\nfig.show()","7cf4bf0d":"country_df['prev_confirmed'] = country_df.groupby('country')['confirmed'].shift(1)\ncountry_df['new_case'] = country_df['confirmed'] - country_df['prev_confirmed']\ncountry_df['new_case'].fillna(0, inplace=True)\ntop30_country_df = country_df[country_df['country'].isin(top30_countries)]\n\nfig = px.line(top30_country_df,\n              x='date', y='new_case', color='country',\n              title=f'DAILY NEW Confirmed cases world wide')\nfig.show()","a297b98a":"country_df['date'] = country_df['date'].apply(str)\ncountry_df['confirmed_log1p'] = np.log1p(country_df['confirmed'])\ncountry_df['fatalities_log1p'] = np.log1p(country_df['fatalities'])\n\nfig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"confirmed\", size='confirmed', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['confirmed'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Confirmed cases spread Over Time', color_continuous_scale=\"portland\")\n# fig.update(layout_coloraxis_showscale=False)\nfig.show()","8d8b750f":"fig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"fatalities\", size='fatalities', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['confirmed'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Fatalities growth Over Time', color_continuous_scale=\"portland\")\nfig.show()","f7d88d05":"country_df.loc[country_df['new_case'] < 0, 'new_case'] = 0.\nfig = px.scatter_geo(country_df, locations=\"country\", locationmode='country names', \n                     color=\"new_case\", size='new_case', hover_name=\"country\", \n                     hover_data=['confirmed', 'fatalities'],\n                     range_color= [0, country_df['new_case'].max()], \n                     projection=\"natural earth\", animation_frame=\"date\", \n                     title='COVID-19: Daily NEW cases over Time', color_continuous_scale=\"portland\")\nfig.show()","6acd7063":"for country in countries:\n    province = train.query('country == @country')['province'].unique()\n    if len(province) > 1:       \n        print(f'Country {country} has {len(province)} provinces: {province}')","068333a5":"usa_state_code_df = pd.read_csv('\/kaggle\/input\/usa-state-code\/usa_states2.csv')","6a8ba028":"# Prepare data frame only for US. \n\ntrain_us = train.query('country == \"US\"')\ntrain_us['mortality_rate'] = train_us['fatalities'] \/ train_us['confirmed']\n\n# Convert province column to its 2-char code name,\nstate_name_to_code = dict(zip(usa_state_code_df['state_name'], usa_state_code_df['state_code']))\ntrain_us['province_code'] = train_us['province'].map(state_name_to_code)\n\n# Only show latest days.\ntrain_us_latest = train_us.query('date == @target_date')","b331d9d4":"fig = px.choropleth(train_us_latest, locations='province_code', locationmode=\"USA-states\",\n                    color='confirmed', scope=\"usa\", hover_data=['province', 'fatalities', 'mortality_rate'],\n                    title=f'Confirmed cases in US on {target_date}')\nfig.show()","0e8f7774":"train_us_latest.sort_values('confirmed', ascending=False)","e45f89ca":"fig = px.choropleth(train_us_latest, locations='province_code', locationmode=\"USA-states\",\n                    color='mortality_rate', scope=\"usa\", hover_data=['province', 'fatalities', 'mortality_rate'],\n                    title=f'Mortality rate in US on {target_date}')\nfig.show()","00d688a9":"train_us_march = train_us.query('date > \"2020-03-01\"')\nfig = px.line(train_us_march,\n              x='date', y='confirmed', color='province',\n              title=f'Confirmed cases by state in US, as of {target_date}')\nfig.show()","a8dd1be1":"# Ref: https:\/\/www.kaggle.com\/abhinand05\/covid-19-digging-a-bit-deeper\neurope_country_list =list([\n    'Austria','Belgium','Bulgaria','Croatia','Cyprus','Czechia','Denmark','Estonia','Finland','France','Germany','Greece','Hungary','Ireland',\n    'Italy', 'Latvia','Luxembourg','Lithuania','Malta','Norway','Netherlands','Poland','Portugal','Romania','Slovakia','Slovenia',\n    'Spain', 'Sweden', 'United Kingdom', 'Iceland', 'Russia', 'Switzerland', 'Serbia', 'Ukraine', 'Belarus',\n    'Albania', 'Bosnia and Herzegovina', 'Kosovo', 'Moldova', 'Montenegro', 'North Macedonia'])\n\ncountry_df['date'] = pd.to_datetime(country_df['date'])\ntrain_europe = country_df[country_df['country'].isin(europe_country_list)]\n#train_europe['date_str'] = pd.to_datetime(train_europe['date'])\ntrain_europe_latest = train_europe.query('date == @target_date')","37abd193":"fig = px.choropleth(train_europe_latest, locations=\"country\", \n                    locationmode='country names', color=\"confirmed\", \n                    hover_name=\"country\", range_color=[1, 50000], \n                    color_continuous_scale='portland', \n                    title=f'European Countries with Confirmed Cases as of {target_date}', scope='europe', height=800)\nfig.show()","23224093":"train_europe_march = train_europe.query('date > \"2020-03-01\"')\nfig = px.line(train_europe_march,\n              x='date', y='confirmed', color='country',\n              title=f'Confirmed cases by country in Europe, as of {target_date}')\nfig.show()","257231fa":"fig = px.line(train_europe_march,\n              x='date', y='fatalities', color='country',\n              title=f'Fatalities by country in Europe, as of {target_date}')\nfig.show()","ac957a62":"train_europe_march['prev_confirmed'] = train_europe_march.groupby('country')['confirmed'].shift(1)\ntrain_europe_march['new_case'] = train_europe_march['confirmed'] - train_europe_march['prev_confirmed']\nfig = px.line(train_europe_march,\n              x='date', y='new_case', color='country',\n              title=f'DAILY NEW Confirmed cases by country in Europe')\nfig.show()","d0bdc8bd":"country_latest = country_df.query('date == @target_date')\n\nfig = px.choropleth(country_latest, locations=\"country\", \n                    locationmode='country names', color=\"confirmed\", \n                    hover_name=\"country\", range_color=[1, 50000], \n                    color_continuous_scale='portland', \n                    title=f'Asian Countries with Confirmed Cases as of {target_date}', scope='asia', height=800)\nfig.show()","92fa31bb":"top_asian_country_df = top30_country_df[top30_country_df['country'].isin(['China', 'Indonesia', 'Iran', 'Japan', 'Korea, South', 'Malaysia', 'Philippines'])]\n\nfig = px.line(top_asian_country_df,\n              x='date', y='new_case', color='country',\n              title=f'DAILY NEW Confirmed cases world wide')\nfig.show()","1820fda5":"max_confirmed = country_df.groupby('country')['new_case'].max().reset_index()\ncountry_latest = pd.merge(country_latest, max_confirmed.rename({'new_case': 'max_new_case'}, axis=1))\ncountry_latest['new_case_peak_to_now_ratio'] = country_latest['new_case'] \/ country_latest['max_new_case']","86b6dd76":"recovering_country = country_latest.query('new_case_peak_to_now_ratio < 0.5')\nmajor_recovering_country = recovering_country.query('confirmed > 100')","a6dfa568":"fig = px.bar(major_recovering_country.sort_values('new_case_peak_to_now_ratio', ascending=False),\n             x='new_case_peak_to_now_ratio', y='country',\n             title=f'Mortality rate LOW: top 30 countries on {target_date}', text='new_case_peak_to_now_ratio', height=1000, orientation='h')\nfig.show()","dcf7e7af":"fig = px.choropleth(country_latest, locations=\"country\", \n                    locationmode='country names', color=\"new_case_peak_to_now_ratio\", \n                    hover_name=\"country\", range_color=[0, 1], \n                    # color_continuous_scale=\"peach\", \n                    hover_data=['confirmed', 'fatalities', 'new_case', 'max_new_case'],\n                    title='Countries with new_case_peak_to_now_ratio')\nfig.show()","bc8e97a0":"china_df = train.query('country == \"China\"')\nchina_df['prev_confirmed'] = china_df.groupby('country')['confirmed'].shift(1)\nchina_df['new_case'] = china_df['confirmed'] - china_df['prev_confirmed']\nchina_df.loc[china_df['new_case'] < 0, 'new_case'] = 0.","bff3ca76":"fig = px.line(china_df,\n              x='date', y='new_case', color='province',\n              title=f'DAILY NEW Confirmed cases in China by province')\nfig.show()","13999a5e":"china_df.query('(province == \"Hubei\") & (date > \"2020-03-10\")')","7d70b9bc":"def sigmoid(t, M, beta, alpha, offset=0):\n    alpha += offset\n    return M \/ (1 + np.exp(-beta * (t - alpha)))\n\ndef error(x, y, params):\n    M, beta, alpha = params\n    y_pred = sigmoid(x, M, beta, alpha)\n    loss_mse = np.mean((y_pred - y) ** 2)\n    return loss_mse\n\ndef gen_random_color(min_value=0, max_value=256) -> str:\n    \"\"\"Generate random color for plotly\"\"\"\n    r, g, b = np.random.randint(min_value, max_value, 3)\n    return f'rgb({r},{g},{b})'","9718d731":"def fit_sigmoid(exclude_days=0):\n    target_country_df_list = []\n    pred_df_list = []\n    for target_country in top30_countries:\n        print('target_country', target_country)\n        # --- Train ---\n        target_country_df = country_df.query('country == @target_country')\n\n        #train_start_date = target_country_df['date'].min()\n        train_start_date = target_country_df.query('confirmed > 1000')['date'].min()\n        train_end_date = pd.to_datetime(target_date) - pd.Timedelta(f'{exclude_days} days')\n        target_date_df = target_country_df.query('(date >= @train_start_date) & (date <= @train_end_date)')\n        if len(target_date_df) <= 7:\n            print('WARNING: the data is not enough, use 7 more days...')\n            train_start_date -= pd.Timedelta('7 days')\n            target_date_df = target_country_df.query('(date >= @train_start_date) & (date <= @train_end_date)')\n\n        confirmed = target_date_df['confirmed'].values\n        x = np.arange(len(confirmed))\n\n        lossfun = lambda params: error(x, confirmed, params)\n        res = sp.optimize.minimize(lossfun, x0=[np.max(confirmed), 0.25, len(confirmed) \/ 2.], method='nelder-mead')\n        M, beta, alpha = res.x\n        # sigmoid_models[key] = (M, beta, alpha)\n        # np.clip(sigmoid(list(range(len(data), len(data) + steps)), M, beta, alpha), 0, None).astype(int)\n\n        # --- Pred ---\n        pred_start_date = target_country_df['date'].min()\n        pred_end_date = pd.to_datetime('2020-07-01')\n        days = int((pred_end_date - pred_start_date) \/ pd.Timedelta('1 days'))\n        # print('pred start', pred_start_date, 'end', pred_end_date, 'days', days)\n\n        x = np.arange(days)\n        offset = (train_start_date - pred_start_date) \/ pd.Timedelta('1 days')\n        print('train_start_date', train_start_date, 'offset', offset)\n        y_pred = sigmoid(x, M, beta, alpha, offset=offset)\n        # target_country_df['confirmed_pred'] = y_pred\n\n        all_dates = [pred_start_date + np.timedelta64(x, 'D') for x in range(days)]\n        pred_df = pd.DataFrame({\n            'date': all_dates,\n            'country': target_country,\n            'confirmed_pred': y_pred,\n        })\n\n        target_country_df_list.append(target_country_df)\n        pred_df_list.append(pred_df)\n    return target_country_df_list, pred_df_list","ef472059":"def plot_sigmoid_fitting(target_country_df_list, pred_df_list, title=''):\n    n_countries = len(top30_countries)\n\n    # --- Plot ---\n    fig = go.Figure()\n\n    for i in range(n_countries):\n        target_country = top30_countries[i]\n        target_country_df = target_country_df_list[i]\n        pred_df = pred_df_list[i]\n        color = gen_random_color(min_value=20)\n        # Prediction\n        fig.add_trace(go.Scatter(\n            x=pred_df['date'], y=pred_df['confirmed_pred'],\n            name=f'{target_country}_pred',\n            line=dict(color=color, dash='dash')\n        ))\n\n        # Ground truth\n        fig.add_trace(go.Scatter(\n            x=target_country_df['date'], y=target_country_df['confirmed'],\n            mode='markers', name=f'{target_country}_actual',\n            line=dict(color=color),\n        ))\n    fig.update_layout(\n        title=title, xaxis_title='Date', yaxis_title='Confirmed cases')\n    fig.show()","c8655622":"target_country_df_list, pred_df_list = fit_sigmoid(exclude_days=0)","ea37c56b":"plot_sigmoid_fitting(target_country_df_list, pred_df_list, title='Sigmoid fitting with all latest data')","7ed7bc2c":"target_country_df_list, pred_df_list = fit_sigmoid(exclude_days=7)","84219c13":"plot_sigmoid_fitting(target_country_df_list, pred_df_list, title='Sigmoid fitting without last 7days data')","c75d081e":"When we look into the Europe, its Northern & Eastern areas are relatively better situation compared to Eastern & Southern areas.","1b9ed9e6":"Why mortality rate is different among country? What kind of hint is hidden in this map? Especially mortality rate is high in Europe and US, is there some reasons?\n\nThere is one interesting hypothesis that BCG vaccination<br\/>\nThe below figure shows BCG vaccination policy by country: Advanced countries like Europe & US, especially Italy and US does not take BCG vaccination. We can notice this map is indeed similar to mortality rate map above. Is it just accidental?\n\n![](https:\/\/www.researchgate.net\/profile\/Alice_Zwerling\/publication\/50892386\/figure\/fig2\/AS:277209752326147@1443103363144\/Map-displaying-BCG-vaccination-policy-by-country-A-The-country-currently-has-universal.png)\n\nReference: [If I were North American\/West European\/Australian, I will take BCG vaccination now against the novel coronavirus pandemic.](https:\/\/www.jsatonotes.com\/2020\/03\/if-i-were-north-americaneuropeanaustral.html)\n\n - [Australia's Trialing a TB Vaccine Against COVID-19, And Health Workers Get It First](https:\/\/www.sciencealert.com\/australia-is-trialling-a-tb-vaccine-for-coronavirus-and-health-workers-get-it-first)\n\nOf course this is just one hypothesis but we can notice\/find some hints to tackle Coronavirus like this by carefully analyzing\/comparing the data.","59de91f8":"Especially **Italy, Spain, German, France** are in more serious situation.","057852a0":"Now I noticed that sigmoid fitting tend to **underestimate** the curve, and its actual value tend to be more than sigmoid curve estimation.<br\/>\nTherefore, we need to be careful to see sigmoid curve fitting data, actual situation is likely to be worse than the previous figure trained with all data.","a1a4ad15":"If we believe above curve, confirmed cases is slowing down now and it will be converging **around mid of April** in most of the country.<br\/>\nSome countries, Iran, Belgium, Sweden and Denmark are expected to converge later, **around May**.\n\nHowever I'm not confident how this sigmoid fitting is accurate, it's just an estimation by some modeling.<br\/>\nLet's try validation by excluding last 7 days data.","e3ba7713":"When we see mortality rate on map, we see Europe (especaiily Italy) is high. Also we notice MiddleEast (Iran, Iraq) is high.\n\nWhen we see tropical area, I wonder why Phillipines and Indonesia are high while other countries (Malaysia, Thai, Vietnam, as well as Australia) are low.\n\nFor Asian region, Korea's mortality rate is lower than China or Japan, I guess this is due to the fact that number of inspection is quite many in Korea.\nPlease refer these blogs for detail:\n\n - [South Korea launches 'drive-thru' coronavirus testing facilities as demand soars](https:\/\/www.japantimes.co.jp\/news\/2020\/03\/01\/asia-pacific\/science-health-asia-pacific\/south-korea-drive-thru-coronavirus\/#.XoAmw4j7RPY)\n - [Coronavirus: Why Japan tested so few people](https:\/\/asia.nikkei.com\/Spotlight\/Coronavirus\/Coronavirus-Why-Japan-tested-so-few-people)","26059ecd":"In terms of number of fatalities, Europe is more serious than US now.","44249b65":"How many country has precise province information?<br\/>\nIt seems it's 8 countries: Australia, Canada, China, Denmark, France, Netherlands, US, and UK.","40c81805":"<a id=\"id_us\"><\/a>\n# Zoom up to US: what is happening in US now??\n\nAs we can see, the spread is fastest in US now, at the end of March. Let's see in detail what is going on in US.","3263d34e":"When we see the confirmed cases in world wide, it just look like exponential growth curve. The number is increasing very rapidly especially recently. **the number almost doubled in last 1 week**...\nConfirmed cases reached 593K people, and **27K people already died at March 27**.","e2e651b7":"<a id=\"id_ref\"><\/a>\n# Further reading\n\nThat's all! Thank you for reading long kernel. I hope the world get back peace & usual daily life as soon as possible.\n\nHere are the other information for further reading.\n\nMy other kernels:\n - [COVID-19: Effect of temperature\/humidity](https:\/\/www.kaggle.com\/corochann\/covid-19-effect-of-temperature-humidity)\n - [COVID-19: Spread situation by prefecture in Japan](https:\/\/www.kaggle.com\/corochann\/covid-19-spread-situation-by-prefecture-in-japan)","b1a1b462":"The ratio is 0 for the country with very few confirmed cases are reported.<br\/>\nI choosed the countries with its confirmed cases more than 100, to see only major countries with the ratio is low.\n\nWe can see:\n - Middle East coutnries.\n - South Africa countries.\n - China & Korea from Asia.","b2fbdda5":"The coronavirus hit Asia in early phase, how is the situation now?<br\/>\nChina & Korea is already in decreasing phase.<br\/>\nHowever other countries' daily new confirmed cases are still in increasing, especially Iran.","c2ed7faa":"In Asia, China & Iran have many confirmed cases, followed by South Korea & Turkey. ","4c815299":"The figure showing fatality growth since 10 deaths.\n - Ref: [COVID-19 Deaths Per Capita](https:\/\/covid19dashboards.com\/covid-compare-permillion\/)","f5a48205":"Let's see by map. Yellow countries have high ratio, currently increasing countries. **Blue & purple countries** have low ratio, already decreasing countries from its peak.","ae434c5c":"Now let's see mortality rate by country","05304640":"Let's see some recovering countries.\n\n## China\n\nWhen we check each state stats, we can see Hubei, the starting place, is extremely large number of confirmed cases.<br\/>\nOther states records actually few confirmed cases compared to Hubei.","7f6c14a5":"It looks like `fatalities` curve is just shifted the `confirmed` curve to below in log-scale, which means mortality rate is almost constant.\n\nIs it true? Let's see mortality rate in detail.<br\/>\nWe see that mortality rate is kept almost 3%, however it is slightly **increasing recently to go over 4%** at the end of March.\n\nWhy? I will show you later that Europe & US has more seriously infected by Coronavirus recently, and mortality rate is high in these regions.","9e537800":"<a id=\"id_ww\"><\/a>\n# Worldwide trend","98857690":"<a id=\"id_load\"><\/a>\n# Load Data\n\nLoad data and convert Japanese columns into English so that others can understand :).","f52da57f":"Let's check these major country's growth by date.\n\nAs we can see, Coronavirus hit China at first but its trend is slowing down in March which is good news.<br\/>\nBad news is 2nd wave comes to Europe (Italy, Spain, Germany, France, UK) at March.<br\/>\nBut more sadly 3rd wave now comes to **US, whose growth rate is much much faster than China, or even Europe**. Its main spread starts from middle of March and its speed is faster than Italy. Now US seems to be in the most serious situation in terms of both total number and spread speed.<br\/>\n","e404774e":"Mortality rate in New York seems not high, around 1% for now.","8390b8e4":"What kind of country is in the dataset? How's the distribution of number of confirmed cases by country?","0de8644a":"It is difficult to see all countries so let's check top countries.","11fc69a5":"How about the countries whose mortality rate is low?\n\nBy investigating the difference between above & below countries, we might be able to figure out what is the cause which leads death.<br\/>\nBe careful that there may be a case that these country's mortality rate is low due to these country does not report\/measure fatality cases properly.","b8017b7c":"<a id=\"id_province\"><\/a>\n# Going into province","b879be05":"<a id=\"id_converge\"><\/a>\n# When will it converge? - Estimation by sigmoid fitting\n\nI guess everyone is wondering when the coronavirus converges. Let's estimate it roughly using sigmoid fitting.<br\/>\nI referenced below kernels for original ideas.\n\n - [Sigmoid per country](https:\/\/www.kaggle.com\/group16\/sigmoid-per-country-no-leakage) by @group16\n - [COVID-19 growth rates per country](https:\/\/www.kaggle.com\/mikestubna\/covid-19-growth-rates-per-country) by @mikestubna","c3f55ad9":"**Daily growth**: All state is US got affected from middle of March, and now **growing exponentially**.\nIn New York, less than 1k people are confirmed on March 16, but more than 50k people are confirmed on March 30. **50 times explosion in 2 weeks!**","b236e24e":"## Table of Contents\n\n\n**[Load Data](#id_load)**<br\/>\n**[Worldwide trend](#id_ww)**<br\/>\n**[Country-wise growth](#id_country)**<br\/>\n**[Going into province](#id_province)**<br\/>\n**[Zoom up to US: what is happening in US now??](#id_province)**<br\/>\n**[Europe](#id_europe)**<br\/>\n**[Asia](#id_asia)**<br\/>\n**[Which country is recovering now?](#id_recover)**<br\/>\n**[When will it converge? - Estimation by sigmoid fitting](#id_converge)**<br\/>\n**[Further reading](#id_ref)**<br\/>","5f3baeec":"When we check daily new cases in Europe, we notice:\n\n - Spain & Germany daily growth are more than Italy now, these 2 countries are potentially more dangerous.\n - Italy new cases are not increasing since March 21, I guess due to lock-down policy is started working. That is not a bad news.","2d4eb271":"## Daily NEW confirmed cases trend\n\nHow about **DAILY new cases** trend?<br\/>\nWe find from below figure:\n - China has finished its peak at Feb 14, new confirmed cases are surpressed now.\n - Europe&US spread starts on mid of March, after China slows down.\n - Current US new confirmed cases are the worst speed, recording worst speed at 20k people\/day.","f0e870ff":"<a id=\"id_recover\"><\/a>\n# Which country is recovering now?","f34d6c47":"<a id=\"id_europe\"><\/a>\n# Europe","3d18a423":"We saw that Coronavirus now hits Europe & US, in serious situation. How does it converge?\n\nWe can refer other country where confirmed cases is already decreasing.<br\/>\nHere I defined `new_case_peak_to_now_ratio`, as a ratio of current new case and the max new case for each country.<br\/>\nIf new confirmed case is biggest now, its ratio is 1.\nIts ratio is expected to be low value for the countries where the peak has already finished.  ","cd82f512":"![](https:\/\/www.googleapis.com\/download\/storage\/v1\/b\/kaggle-user-content\/o\/inbox%2F518134%2F485aa04e87e4e45c91815101784c6d95%2Fcorona-4930541_1280.jpg?generation=1585438527494582&alt=media)\n\n# COVID-19: EDA with recent update on March\n\nThe kernel is inspired by the great EDA kernel [COVID-19: Digging a Bit Deeper](https:\/\/www.kaggle.com\/abhinand05\/covid-19-digging-a-bit-deeper) by @abhinand05 in week1.<br\/>\nPlease upvote his kernel as well :)<br\/>\nI will write an EDA including the recent updates.\n\n[Note] It seems JHU has changed the data format, and stopped providing recovered cases. So I could not analyze recovered cases.\n\n\n### Version History\n\nThe data is updated and hence the figure is updated everyday. Below are the version history to see the information until specified date.\n\n - Version 15: Added **Daily NEW confirmed cases** analysis & **Asia** region EDA.\n - [Version 18](https:\/\/www.kaggle.com\/corochann\/covid-19-eda-with-recent-update-on-march?scriptVersionId=31151381): Shows figure as of 2020\/3\/28.\n - Version 19: Added <span style=\"color:red\">**sigmoid fitting to estimate when the coronavirus converge in each country**<\/span>, jump to [When will it converge? - Estimation by sigmoid fitting](#id_converge).","8dfe457c":"Moreover, when we check the growth in log-scale below figure, we can see that the speed of confirmed cases growth rate **slightly increases** when compared with the beginning of March and end of March.<br\/>\nIn spite of the Lockdown policy in Europe or US, the number is still increasing rapidly.","2282f9fe":"Let's see number of confirmed cases on map. Again we can see Europe, US, MiddleEast (Turkey, Iran) and Asia (China, Korea) are red.","bd87bab7":"When we see inside of the US, we can see **only New York, and its neighbor New Jersey** dominates its spread and are in serious situation.\n\nNew York confirmed cases is over 50k, while other states are less than about 5k confirmed cases.","34078dda":"Italy is the most serious situation, whose mortality rate is over 10% as of 2020\/3\/28.<br\/>\nWe can also find countries from all over the world when we see top mortality rate countries.<br\/>\nIran\/Iraq from Middle East, Phillipines & Indonesia from tropical areas.<br\/>\nSpain, Netherlands, France, and UK form Europe etc. It shows this coronavirus is really world wide pandemic.\n\n[UPDATE]: According to the comment by @elettra84, 10% of Italy is due to extreme outlier of Lombardy cluster. Except that mortality rate in Italy is comparable to other country. Refer [Lombardy cluster in wikipedia](https:\/\/en.wikipedia.org\/wiki\/2020_coronavirus_pandemic_in_Italy#Lombardy_cluster).","6d7e3ad0":"<a id=\"id_country\"><\/a>\n# Country-wise growth","deb59d39":"Now US and Italy has more confirmed cases than China, and we can see many Europe countries in the top.\n\nKorea also appears in relatively top despite of its population, this is because Korea execcutes inspection check aggressively.","3726c9b9":"<h3 style=\"color:red\">If this kernel helps you, please upvote to keep me motivated :)<br>Thanks!<\/h3>","f22f60b0":"<a id=\"id_asia\"><\/a>\n# Asia","212b5fc1":"## The situation of Hubei now?\n\nHubei record its new case peak on Feb 14. And finally, new case was not found on March 19.\n\nTo become no new case found, it took **about 2month after confirmed cases occured**, and **1 month after the peak has reached.** <br\/>\nThis term will be the reference for other country to how long we must lock-down the city."}}