{"cell_type":{"7a3aa067":"code","b41935fe":"code","5fc5a750":"code","9a8eac6e":"code","6f75c2c8":"code","9c2f30a7":"code","f6386f73":"code","240e9bd1":"code","826d62ca":"code","e81ab3b9":"code","9035c444":"code","f0846b10":"code","4d2c03d5":"code","94e07ab0":"code","03c7bec4":"code","f27afef0":"code","ca5fda0a":"code","724f49fb":"code","71f31470":"code","db43b22b":"code","a6921333":"markdown"},"source":{"7a3aa067":"\nimport tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","b41935fe":"sale_data = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv', parse_dates=['date'])\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nitem_cat = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n","5fc5a750":"def EDA(df):\n    print(\"-------df.head(5)-------\")\n    print(df.head(5))\n    print(\"-------INFO----------\")\n    print(df.info())\n    print(\"-------describe--------\")\n    print(df.describe())\n    print(\"-------data type-------\")\n    print(df.dtypes)\n    print(\"-------missing num-------\")\n    print(df.isna().sum())","9a8eac6e":"EDA(sale_data)","6f75c2c8":"dataset = sale_data.pivot_table(index=['shop_id', 'item_id'], values=['item_cnt_day'], columns=['date_block_num'],\n                                fill_value=0, aggfunc='sum')","9c2f30a7":"dataset\n","f6386f73":"dataset.reset_index(inplace=True)","240e9bd1":"dataset","826d62ca":"dataset = pd.merge(test, dataset, on=['item_id', 'shop_id'], how='left')","e81ab3b9":"dataset","9035c444":"dataset.fillna(0, inplace=True)","f0846b10":"dataset","4d2c03d5":"dataset.drop(['shop_id', 'item_id', 'ID'], inplace=True, axis=1)\ndataset\n","94e07ab0":"x_train = np.expand_dims(dataset.values[:, :-1], axis=2)\ny = dataset.values[:, -1:]\n\nx_test = np.expand_dims(dataset.values[:, 1:], axis=2)\n\nprint(x_train.shape, y.shape, x_test.shape)","03c7bec4":"model = tf.keras.Sequential([\n    tf.keras.layers.LSTM(64, input_shape=(x_train.shape[1], x_train.shape[2]),\n                         return_sequences=True),\n    tf.keras.layers.LSTM(128, return_sequences=True),\n    tf.keras.layers.LSTM(128, return_sequences=True),\n    tf.keras.layers.LSTM(128, return_sequences=True),\n    tf.keras.layers.LSTM(64,return_sequences=True),\n    tf.keras.layers.LSTM(32),\n    tf.keras.layers.Dropout(0.3),\n    tf.keras.layers.Dense(60, activation='relu'),\n    tf.keras.layers.Dense(30, activation='relu'),\n    tf.keras.layers.Dense(20, activation='relu'),\n    tf.keras.layers.Dense(10, activation='softmax'),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\n","f27afef0":"model.summary()\nmodel.compile(loss='mse', optimizer='SGD', metrics=['mean_squared_error'])","ca5fda0a":"history = model.fit(x_train, y, epochs=50, batch_size=256)\n","724f49fb":"predictions = model.predict(x_test)","71f31470":"import csv\n\nwith open('sample_submission.csv', 'w')as f:\n    writer = csv.writer(f)\n    writer.writerow(['ID', 'item_cnt_month'])\n    for i in range(214200 - 1):\n        writer.writerow([i, predictions[i][0]])","db43b22b":"predictions","a6921333":"### load data"}}