{"cell_type":{"b18ae8f3":"code","96a256ba":"code","1dc5ff4d":"code","54516d15":"code","b0058189":"code","5352f93e":"code","0bce8ecd":"code","86c3bbe2":"code","cfe15c84":"code","e59fa446":"code","8f26dfc8":"markdown","64d4a2e8":"markdown","b6bfd081":"markdown","135789fe":"markdown","07171341":"markdown","5916ca43":"markdown"},"source":{"b18ae8f3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n\nimport os\n        \nos.listdir('..\/input')","96a256ba":"RANDOM_SEED = 42\nnan_replace = -999","1dc5ff4d":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')\nsample_submission = pd.read_csv('..\/input\/gender_submission.csv', index_col='PassengerId')\n\ntrain.head()","54516d15":"train = train[['Survived','Pclass', 'Sex', 'Age', 'SibSp', 'Parch']]\ntest = test[['Pclass', 'Sex', 'Age', 'SibSp', 'Parch']]\n\n# 0\/1 encode sex\ntrain['Sex'] = train['Sex'].map({'female': 1, 'male': 0})\ntest['Sex'] = test['Sex'].map({'female': 1, 'male': 0})\n\n\ntrain.head()","b0058189":"#train = train.dropna()","5352f93e":"train = train.fillna(nan_replace)\ntest = test.fillna(nan_replace)\n\nassert(train.isnull().sum().sum() == 0)\nassert(test.isnull().sum().sum() == 0)","0bce8ecd":"y_train = train['Survived']\ntrain = train.drop(['Survived'], axis=1)","86c3bbe2":"import xgboost as xgb","cfe15c84":"clf = xgb.XGBClassifier(missing=nan_replace) # default parameters for now\nclf.fit(train, y_train)","e59fa446":"pred = clf.predict(test)\n\nsample_submission['Survived'] = pred\n\nsample_submission.to_csv('xgboost_baseline2.csv')","8f26dfc8":"## Fit XGBoost\n* [Docs](https:\/\/xgboost.readthedocs.io\/en\/latest\/parameter.html)","64d4a2e8":"## Drop features\n* Just keep simplest, most obvious features","b6bfd081":"## Import data","135789fe":"# Quick Start with XGBoost\n* Beginner's guide to getting up and running with XGBoost\n* Please leave a like or comment!","07171341":"## Missing values (NaNs)\n* XGBoost handles missing values well, just replace with -999","5916ca43":"## Predict and submit"}}