{"cell_type":{"b2e03409":"code","4ab6ec31":"code","67e3c732":"code","430b5ee5":"code","e75a443a":"code","6d96ccf0":"code","2abbe525":"code","26406bbe":"markdown","ae40f2a1":"markdown","43ad0ac6":"markdown","7ecdedf8":"markdown","3c39e54a":"markdown","0ec35b1d":"markdown"},"source":{"b2e03409":"import pandas as pd\nimport matplotlib.pyplot as plt","4ab6ec31":"data = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\ndata","67e3c732":"x = data.drop('target', axis=1)\ny = data['target']","430b5ee5":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nnum_cols = ['age', 'trestbps', 'chol', 'thalach','oldpeak']\nx[num_cols] = scaler.fit_transform(x[num_cols])\nx","e75a443a":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state=101)\nx_train.shape, x_test.shape, y_train.shape, y_test.shape","6d96ccf0":"from sklearn.linear_model import LogisticRegression\n\nmodel = LogisticRegression()\nmodel.fit(x_train, y_train)\n\npreds = model.predict(x_test)\npreds","2abbe525":"from sklearn.metrics import accuracy_score, plot_confusion_matrix, classification_report\n\nmodel_acc = round(accuracy_score(y_test, preds) * 100, 3)\n\nprint(f'Logistic Regression Accuracy: {model_acc}%')\nplot_confusion_matrix(model, x_test, y_test, cmap=plt.cm.Blues)","26406bbe":"### train test split","ae40f2a1":"### Standard Scaler\nvalue\uac00 number(int, float...)\uc778 columns\uc5d0 \ub300\ud574 scale\uc744 \uc9c4\ud589\ud55c\ub2e4.","43ad0ac6":"## 4. Evaluation\n- Accuracy\n- Confusion Matrix","7ecdedf8":"# Heart Disease UCI\n---\nLogisitc Regression","3c39e54a":"## 2. Model - Logisitc Regression","0ec35b1d":"## 1. Load data"}}