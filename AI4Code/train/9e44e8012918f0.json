{"cell_type":{"3c4bfbd6":"code","c5085723":"code","d2466d6b":"code","443f5f77":"code","0dada63f":"code","2f240839":"code","ffce798d":"code","90c4ba1d":"code","5ac75359":"code","adff6959":"code","98f5b389":"markdown","2dd67bc1":"markdown","2c845738":"markdown","a8d4d770":"markdown","a198c42c":"markdown","e5a710ec":"markdown","ba5d6981":"markdown","aee00659":"markdown","92c60827":"markdown","5d35df7d":"markdown","e93b20cc":"markdown","d3d13e34":"markdown","26962989":"markdown","1edb8b02":"markdown"},"source":{"3c4bfbd6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n!pip install seaborn==0.11.0\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","c5085723":"df = pd.read_csv(\"..\/input\/mushroom-classification\/mushrooms.csv\")\ndf.head()","d2466d6b":"# add some noise to make classifiers perform worse. Helpful for pursuing evaluations <- added by Ian\ndf.loc[df.sample(200).index, 'class'] = 'e'\ndf.loc[df.sample(200).index, 'class'] = 'p'\n","443f5f77":"df['class'] = df['class'].replace({'e':1,'p':0})","0dada63f":"X = df.iloc[:,1:]\nX=pd.get_dummies(X,columns=X.columns,drop_first=True)\nX.head(2)","2f240839":"y = df['class'].values\ny","ffce798d":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","90c4ba1d":"from sklearn.linear_model import LogisticRegression\nlrg = LogisticRegression(max_iter=500)\nlrg.fit(X_train, y_train)","5ac75359":"from sklearn.ensemble import RandomForestClassifier\n\nrfc = RandomForestClassifier(max_depth=2, random_state=0)\nrfc.fit(X_train, y_train)","adff6959":"from xgboost import XGBClassifier\nxgb=XGBClassifier()\nxgb.fit(X_train,y_train)","98f5b389":"# Mushroom Classification using Random Forest Classifier","2dd67bc1":"# Perform Mushroom Classification\n\nClassification of mushrooms into poisonous or non-poisonous","2c845738":"**Load the data**","a8d4d770":"# Additions","a198c42c":"**Understand the data**","e5a710ec":"**1. Logistic Regression**","ba5d6981":"# Mushroom Classification By Xgboost","aee00659":"## ","92c60827":"**2. Random Forest Classifier**","5d35df7d":"We will consider that :\n\n\ne  -->  1\n           \np  -->  0","e93b20cc":"# Machine Learning Models","d3d13e34":"**Split the data into train dataset and test data set**","26962989":"**About this file** :\n\n**Attribute Information**: (classes: edible=e, poisonous=p)\n\n**cap-shape**: bell=b,conical=c,convex=x,flat=f, knobbed=k,sunken=s\n\n**cap-surface**: fibrous=f,grooves=g,scaly=y,smooth=s\n\n**cap-color**: brown=n,buff=b,cinnamon=c,gray=g,green=r,pink=p,purple=u,red=e,white=w,yellow=y\n\n**bruises**: bruises=t,no=f\n\n**odor**: almond=a,anise=l,creosote=c,fishy=y,foul=f,musty=m,none=n,pungent=p,spicy=s\n\n**gill-attachment**: attached=a,descending=d,free=f,notched=n\n\n**gill-spacing**: close=c,crowded=w,distant=d\n\n**gill-size**: broad=b,narrow=n\n\n**gill-color**: black=k,brown=n,buff=b,chocolate=h,gray=g, green=r,orange=o,pink=p,purple=u,red=e,white=w,yellow=y\n\n**stalk-shape**: enlarging=e,tapering=t\n\n**stalk-root**: bulbous=b,club=c,cup=u,equal=e,rhizomorphs=z,rooted=r,missing=?\n\n**stalk-surface-above-ring**: fibrous=f,scaly=y,silky=k,smooth=s\n\n**stalk-surface-below-ring**: fibrous=f,scaly=y,silky=k,smooth=s\n\n**stalk-color-above-ring**: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n**stalk-color-below-ring**: brown=n,buff=b,cinnamon=c,gray=g,orange=o,pink=p,red=e,white=w,yellow=y\n\n**veil-type**: partial=p,universal=u\n\n**veil-color**: brown=n,orange=o,white=w,yellow=y\n\n**ring-number**: none=n,one=o,two=t\n\n**ring-type**: cobwebby=c,evanescent=e,flaring=f,large=l,none=n,pendant=p,sheathing=s,zone=z\n\n**spore-print-color**: black=k,brown=n,buff=b,chocolate=h,green=r,orange=o,purple=u,white=w,yellow=y\n\n**population**: abundant=a,clustered=c,numerous=n,scattered=s,several=v,solitary=y\n\n**habitat**: grasses=g,leaves=l,meadows=m,paths=p,urban=u,waste=w,woods=d","1edb8b02":"**Import the libraries**"}}