{"cell_type":{"23bb3ded":"code","400177e6":"code","6b61ab94":"code","78e27fc3":"code","09d4f70d":"code","b4a5a7cc":"code","8824c59e":"code","0dd73148":"code","ea3fae23":"code","e10540a3":"code","6d486a9f":"code","cbc7fbe5":"code","9ad418d8":"code","bdd3dfe3":"code","e68e824b":"code","c8c8cacb":"code","7eeadb52":"code","cbcf51a3":"code","6f2b85cd":"code","52f101d7":"code","9f82cc14":"code","586e756d":"code","9c81910b":"code","86d20afa":"code","52cda65b":"code","167e2948":"code","db2d5a23":"code","6316018d":"code","25718d36":"code","0e35cd2e":"code","84dd9622":"code","684322ed":"code","e6201bae":"code","725eaacd":"code","1d87577f":"code","9b12143b":"code","e371219a":"code","8582ba82":"code","15ed834c":"code","6a68fc9b":"code","47c2e914":"code","05cbbf50":"code","4ebe44c7":"markdown","5aa114b8":"markdown","260a926f":"markdown","9e2e4786":"markdown","688242d4":"markdown","00fc4f5f":"markdown","b58e97d4":"markdown","4b5b67fd":"markdown","ad1bbe86":"markdown","6c36c9b7":"markdown","340309ce":"markdown","38a42364":"markdown","93fa47b8":"markdown"},"source":{"23bb3ded":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","400177e6":"import pandas as pd\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nimport itertools\n%matplotlib inline","6b61ab94":"df = pd.read_excel('\/kaggle\/input\/covid19\/dataset.xlsx', index_col=0)\n","78e27fc3":"warnings='ignore'","09d4f70d":"df.reset_index(drop=False, inplace=True)","b4a5a7cc":"df.tail()","8824c59e":"df.isnull().sum()","0dd73148":"# o n\u00famero de c\u00e9lulas com valores NaN \u00e9 muito grande. Exposi\u00e7\u00e3o gr\u00e1fica para melhor visualiza\u00e7\u00e3o\nplt.figure(figsize=(14,9))\nsns.heatmap(df.isnull(), cbar=False, yticklabels=False)","ea3fae23":"df.notnull().sum()","e10540a3":"cols=df.columns","6d486a9f":"relevant = df[cols[0:20]]","cbc7fbe5":"relevant['Neutrophils'] = df['Neutrophils']","9ad418d8":"relevant.info()","bdd3dfe3":"col = relevant.columns","e68e824b":"def falta_numero(x):\n      return sum(x.isnull())","c8c8cacb":"relevant.apply(falta_numero, axis=0)","7eeadb52":"relevant.head()","cbcf51a3":"def normaliza (x):\n    y = x + 5\n    return y","6f2b85cd":"relevant[col[6:21]] = relevant[col[6:21]].apply(normaliza)","52f101d7":"relevant[col[6:21]] = relevant[col[6:21]].fillna(9)","9f82cc14":"plt.figure(figsize=(14,9))\nsns.heatmap(relevant.isnull(), cbar=False, yticklabels=False)","586e756d":"## Eliminamos todos os valores nulos ou negativos\nrelevant.notnull().sum()","9c81910b":"covid = relevant","86d20afa":"covid.reset_index(drop=True, inplace=True)","52cda65b":"covid.tail()","167e2948":"covid = covid.drop(['Patient ID'], axis=1, inplace=True)\ncovid = relevant","db2d5a23":"covid = covid.drop(['Patient addmited to regular ward (1=yes, 0=no)'], axis=1, inplace=True)\ncovid = relevant","6316018d":"covid = covid.drop(['Patient addmited to semi-intensive unit (1=yes, 0=no)'], axis=1, inplace=True)\ncovid = relevant","25718d36":"covid = covid.drop(['Patient addmited to intensive care unit (1=yes, 0=no)'], axis=1, inplace=True)\ncovid = relevant","0e35cd2e":"covid.head()","84dd9622":"# Verificando os valores da coluna target\ncovid['SARS-Cov-2 exam result'].value_counts()","684322ed":"# convertendo celulas categ\u00f3ricas em numericas\ncovid['SARS-Cov-2 exam result'] = pd.get_dummies(covid['SARS-Cov-2 exam result'])","e6201bae":"covid['SARS-Cov-2 exam result'].value_counts()","725eaacd":"# verifica\u00e7\u00e3o final\ncovid.tail()","1d87577f":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression","9b12143b":"X_train, X_test, y_train, y_test = train_test_split(covid.drop('SARS-Cov-2 exam result',axis=1), covid['SARS-Cov-2 exam result'], test_size=0.25)","e371219a":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","8582ba82":"predictions = logmodel.predict(X_test)","15ed834c":"from sklearn.metrics import confusion_matrix","6a68fc9b":"reg_cm=confusion_matrix(y_test,predictions)\nprint(reg_cm)","47c2e914":"def matriz_deconfusao(cm, target_names,\n                          title='Matriz de Confus\u00e3o',\n                          cmap=None,\n                          normalize=True):\n    \n    accuracy = np.trace(cm) \/ float(np.sum(cm))\n    misclass = 1 - accuracy\n\n    if cmap is None:\n        cmap = plt.get_cmap('Blues')\n\n    plt.figure(figsize=(8, 6))\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n\n    if target_names is not None:\n        tick_marks = np.arange(len(target_names))\n        plt.xticks(tick_marks, target_names, rotation=45)\n        plt.yticks(tick_marks, target_names)\n\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n\n\n    thresh = cm.max() \/ 1.5 if normalize else cm.max() \/ 2\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        if normalize:\n            plt.text(j, i, \"{:0.4f}\".format(cm[i, j]),\n                     horizontalalignment=\"center\",\n                     color=\"white\" if cm[i, j] > thresh else \"black\")\n        else:\n            plt.text(j, i, \"{:,}\".format(cm[i, j]),\n                     horizontalalignment=\"center\",\n                     color=\"white\" if cm[i, j] > thresh else \"black\")\n\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label\\naccuracy={:0.4f}; misclass={:0.4f}'.format(accuracy, misclass))\n    plt.show()\n","05cbbf50":"matriz_deconfusao(cm = reg_cm, normalize  = False,\n                      target_names = ['Positivo - COVID-19', 'N\u00e3o Infectado'],\n                      title        = \"Matriz de Confus\u00e3o\")","4ebe44c7":"# RESPOSTA TASK 1 - SIM, \u00c9 POSS\u00cdVEL IDENTIFICAR A PRESEN\u00c7A DO COVID-19 ATRAV\u00c9S DA AN\u00c1LISE DOS DADOS DOS EXAMES DE SANGUE COM ACUR\u00c1CIA DE APROXIMADAMENTE 90% ","5aa114b8":"## Eliminando colunas do dataset final que n\u00e3o ser\u00e3o utilizadas na regress\u00e3o log\u00edstica","260a926f":"### Dataset capturado, iniciando EDA","9e2e4786":"# TASK 1\n# \u2022 Predict confirmed COVID-19 cases among suspected cases.\n## Based on the results of laboratory tests commonly collected for a suspected COVID-19 case during a visit to the emergency room, would it be possible to predict the test result for SARS-Cov-2 (positive\/negative)?\n","688242d4":"# Objetivo principal: - fazer o m\u00ednimo de alera\u00e7\u00f5es poss\u00edveis no dataset em um modelo de boa performance, simples e facilmente replic\u00e1vel \n \n","00fc4f5f":"#### Impress\u00e3o da matriz de confus\u00e3o e acur\u00e1cia do modelo","b58e97d4":"### Finalizar tratamento para aplicar regress\u00e3o log\u00edstica","4b5b67fd":"### Fun\u00e7\u00e3o criada para plotar a matriz de confus\u00e3o","ad1bbe86":"## Verifica\u00e7\u00e3o da matriz de confus\u00e3o (Verdadeiro e falso, positivos e negativos)","6c36c9b7":"## A base da an\u00e1lise foi montada usando somente os exames de sangue.\n### Existem muitos valores nulos e negativos. Ser\u00e1 arescido o n\u00famero 5 (cinco) nos valores n\u00e3o-nulos (para eliminar os valores negativos);  e o numero 9 (nove) nos valores nulos.","340309ce":"# Divis\u00e3o treino\/teste e Regress\u00e3o Log\u00edstica com SKlearn","38a42364":"# A TASK 2 N\u00c3O FOI POSS\u00cdVEL DE SER CONCLU\u00cdDA, POIS A AN\u00c1LISE DA EVOLU\u00c7\u00c3O DO QUADRO CL\u00cdNICO ENTRE A EMERG\u00caNCIA AT\u00c9 A UTI REQUER IMAGENS, AVALIA\u00c7\u00d5ES E DADOS. \n## SOMENTE COM OS DADOS \u00c9 IMPOSS\u00cdVEL","93fa47b8":"## A separa\u00e7\u00e3o foi feita at\u00e9 a coluna 40 por relev\u00e2ncia em volume de dados\n\n# (colunas com mais de 95% de valores nulos foram eliminadas)\n\n### A id\u00e9ia \u00e9 usar somente os exames de sangue mais comum para fazer a an\u00e1lise"}}