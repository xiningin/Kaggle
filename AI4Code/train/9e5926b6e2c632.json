{"cell_type":{"8fd18a1e":"code","95415987":"code","9b4c007b":"code","ba0f67be":"code","306335c8":"code","58a6437f":"code","abee43b9":"code","3c9ccf42":"code","cb595ca4":"code","4ef96737":"code","ae9ec893":"code","0410c651":"code","00ac921e":"code","4d42c472":"code","6b47f76d":"code","ec960f23":"code","28e86b2c":"code","e913dcf8":"code","6b2c732c":"code","d03be530":"code","0d9f4560":"code","6e1a5e50":"code","6d6ca42a":"code","232b8fa2":"code","80265bf3":"code","86bd2ab0":"code","bd482b9c":"code","4b3dd694":"code","9d740616":"code","8ca8aea4":"code","dcdde80e":"markdown","20bec900":"markdown","6826cec8":"markdown","f68fcd1c":"markdown","2d17fcff":"markdown","22643e32":"markdown","0accc2f9":"markdown","88dfabf0":"markdown","a562bebd":"markdown","64b33bcb":"markdown","53272174":"markdown","d0b978c4":"markdown","baf1fc20":"markdown","17d3748a":"markdown","3637c8f0":"markdown","2d2ba75d":"markdown"},"source":{"8fd18a1e":"# Libraries Import\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import LabelEncoder\n# from sklearn.preprocessing import MinMaxScaler\nimport seaborn as sns\nimport matplotlib.pyplot as plt \nfrom scipy.stats import pearsonr\nfrom scipy.stats.mstats import winsorize\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error \n","95415987":"# Dataset Import\ndf = pd.read_csv('..\/input\/life-expectancy-who\/Life Expectancy Data.csv')","9b4c007b":"rows, cols = df.shape\nprint(\"Records:\", rows)","ba0f67be":"df.head(rows)                               # view all data","306335c8":"print('\\nLife Expectancy Factors:', cols, list(df.columns))\nprint('\\nNumber of Countries:', len(df['Country'].unique()))\nprint('\\nPeriod: %s - %s'%(min(df['Year']), max(df['Year'])))","58a6437f":"df.info()                                   # dtypes and other info","abee43b9":"df.apply(lambda x: len(x.unique()))         # unique values in dataset","3c9ccf42":"df[df.duplicated()]                         # duplicate rows count","cb595ca4":"# Missing Values Count & Percentage\nnull_vals = df.isna().sum().reset_index()\nnull_vals.columns = ['Factors', 'Missing Values']\nnull_vals[\"Missing %\"] = round(null_vals['Missing Values']\/rows*100, 2)\nnull_vals[ null_vals['Missing %'] > 0 ]","4ef96737":"# Space and Case Correction\ndf.rename(columns={'Life expectancy ': 'Life Expectancy',\n                   'infant deaths': 'Infant Deaths',\n                   'percentage expenditure': 'Percentage Expenditure',\n                   'Measles ': 'Measles',\n                   ' BMI ': 'BMI',\n                   'under-five deaths ': 'Under Five Deaths',\n                   'Diphtheria ': 'Diphtheria Vaccination %',\n                   ' HIV\/AIDS': 'HIV\/AIDS',\n                   ' thinness  1-19 years': 'Thinness 10-19 years',\n                   ' thinness 5-9 years': 'Thinness 5-9 years',\n                   'Income composition of resources': 'Resources Income Composition',\n                   'Total expenditure': 'Total Expenditure',\n                   'Polio': 'Pol3 Vaccination %',\n                   'Hepatitis B': 'HepB Vaccination %', \n                   'Alcohol': 'Alcohol Intake(L)'\n                  },inplace=True)\ndf.columns","ae9ec893":"# Data Formatting\ndf['Country'] = df['Country'].astype('string')\ndf['Status'] = df['Status'].astype('string')\ndf.dtypes","0410c651":"# Dealing with Missing Values (replacing with mean value for the year)\nnull_col = ('Life Expectancy', 'Adult Mortality', 'Alcohol Intake(L)', 'HepB Vaccination %', 'BMI', 'Pol3 Vaccination %', 'Total Expenditure', 'Diphtheria Vaccination %', 'GDP', 'Population', 'Thinness 10-19 years', 'Thinness 5-9 years', 'Resources Income Composition', 'Schooling')\ndata_valid = []\nfor year in list(df.Year.unique()):\n    year_data = df[df.Year == year].copy()\n    for col in null_col:\n        year_data[col] = year_data[col].fillna(year_data[col].dropna().mean()).copy()\n    data_valid.append(year_data)\ndf = pd.concat(data_valid).copy()\ndf.isnull().sum(axis = 0)","00ac921e":"# Label Encoding (transform non-numerical labels to numerical labels)\ndf['Status'] = LabelEncoder().fit_transform(df['Status'])\ndf['Status']","4d42c472":"# Data Normalization\/ Feature Scaling\n#df_scale = df.drop(['Country', 'Status', 'Year'], axis='columns')\n#df_scale = MinMaxScaler().fit_transform(df_scale)\nfor col in df.columns:\n    if col not in ('Country', 'Status', 'Year'):\n        df[col] = df[col] \/ df[col].max()\ndf","6b47f76d":"# Rounding Float Values to 4 Decimals\nfor col in df:\n    if df[col].dtype in (np.int64, np.float64):\n        df[col] = round(df[col], 4)\ndf","ec960f23":"df.describe()                              # Statistical Info","28e86b2c":"# categorical columns & numerical columns\ncateg_cols = ['Country', 'Status']\nnumeric_cols = [] \nfor i in df.columns:\n    if i != 'Status' and df[i].dtype in (np.float64, np.int64):\n        numeric_cols.append(i)","e913dcf8":"# Data Distribution\nplt.rcParams.update({'figure.max_open_warning': 0})\nfor col in categ_cols:                                             \n    sns.countplot(x=col, data=df, dodge=True, palette=\"Set3\")\n    plt.title('%s Data Distribution'%col)\nplt.show()\nfor i,col in enumerate(numeric_cols, 1): \n    sns.displot(x=df[col])\n    plt.title('%s Data Distribution'%col)\nplt.show()","6b2c732c":"# Outliers \nplt.figure(figsize=(20,30))\nfor i,col in enumerate(numeric_cols, 1):\n    plt.subplot(5, 4, i)\n    plt.boxplot(df[col])\n    plt.title(col)\nplt.show()","d03be530":"# Outliers Lower & Upper Bound Percentage\npercent_low = []\npercent_high = []\nfor col in numeric_cols:\n    q1 = df[col].quantile(0.25)\n    q3 = df[col].quantile(0.75)\n    iqr = q3 - q1\n    low = q1 - (iqr*1.5)\n    high = q3 + (iqr*1.5)\n    count_l = len(np.where(df[col] < low)[0])\n    count_h = len(np.where(df[col] > high)[0])\n    percent_low.append(round(count_l\/len(df[col])*100, 2))\n    percent_high.append(round(count_h\/len(df[col])*100, 2))\noutlier_table = pd.DataFrame({'Factor':numeric_cols, 'Lower Bound %':percent_low, 'Upper Bound %':percent_high})\noutlier_table","0d9f4560":"# Handling Outliers as the CORRELATION COEFFICIENT is highly sensitive to outliers","6e1a5e50":"# Effect of Outlier Trimming (remove outlier)\ndf_test = df.drop(['Country'], axis='columns')\ndf_test = df_test[~((df_test<low) | (df_test>high)).any(axis=1)]\ndf_test.shape","6d6ca42a":"# Winzorization \nfor i,col in enumerate(numeric_cols, 1):\n    df[col] = winsorize(df[col], (max(percent_low)\/100, max(percent_high)\/100))      \n ","232b8fa2":"# Life Expectancy Correlation with Other Factors wrt Status\nfor col in df.columns:\n    if col not in ('Life Expectancy', 'Status'):\n        plt.scatter(x=df[col], y=df['Life Expectancy'], c=df['Status'], label=df['Status'])\n        plt.title('Life Expectancy Correlation with %s wrt Status'%col)\n        plt.show()\n","80265bf3":"# Correlation Matrix\nplt.figure(figsize=(20,15))\nsns.heatmap(df.corr(), square=True, annot=True, linewidths=.5, cmap=\"Blues\")\nplt.title(\"Correlation matrix among variables\")\nplt.show()","86bd2ab0":"# Correlation Statistics\np_coef, p_val, rel, res = [], [], [], []\ny = df['Life Expectancy']\nfor col in numeric_cols:\n    #if col == 'Life Expectancy': continue\n    coef, val = pearsonr(df[col], y)\n    p_coef.append(coef)\n    p_val.append(val)\n    if coef > 0:\n        if coef > 0.5: rel.append('Strong Positive')\n        else: rel.append('Weak Positive')\n    elif coef < 0:\n        if coef < -0.5: rel.append('Strong Negative')\n        else: rel.append('Weak Negative')\n    else:\n        rel.append('Nil')\n    if val < 0.001:\n        res.append('Strong')\n    elif val < 0.05:\n        res.append('Moderate')\n    elif val < 0.1:\n        res.append('Weak')\n    else:\n        res.append('Nil')\ncorelation_table = pd.DataFrame({'Factor':numeric_cols, 'Coefficient':p_coef, 'P-value':p_val, 'Relation':rel, 'Result Certainity':res}) \ncorelation_table","bd482b9c":"# Important Variables Extraction\nx = df.drop(['Country', 'Year', 'Life Expectancy', 'Population', 'Total Expenditure', 'Alcohol Intake(L)'], 1)","4b3dd694":"# Dataset Splitting into Training & Test Sets\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=1)","9d740616":"# Model Development\nlm = LinearRegression().fit(x_train, y_train)\npred_train = lm.predict(x_train)\npred_test = lm.predict(x_test)","8ca8aea4":"# Mean Squared Error & Mean Absolute Error\nmse_train = round(mean_squared_error(y_train, pred_train), 4)\nmse_test = round(mean_squared_error(y_test, pred_test), 4)\nmae_train = round(mean_absolute_error(y_train, pred_train), 4)\nmae_test = round(mean_absolute_error(y_test, pred_test), 4)\nprint('Mean Squared Error Training: %s\\nMean Absolute Error Training: %s\\nMean Squared Error Testing: %s\\nMean Absolute Error Testing: %s'\n      %(mse_train, mae_train, mse_test, mae_test))","dcdde80e":"## Model Evaluation","20bec900":"## Data Requirement\nDataset related to life expectancy (health, economic, social and other factors affecting the life expectancy) for different countries ","6826cec8":"## Business Understanding\nGoal: To improve the life expectancy\n\nObjective: To find the factor(s) contributing to lower value of life expectancy","f68fcd1c":"## Analytic Approach: \nPredictive model","2d17fcff":"## Data Collection\nhttps:\/\/www.kaggle.com\/kumarajarshi\/life-expectancy-who\nThe data was collected from WHO and United Nations website for year 2000-2015 for 193 countries for analysis of factors actually affecting the life expectancy. \n","22643e32":"# Life Expectancy (WHO)","0accc2f9":"## Data Preprocessing","88dfabf0":"There are outliers in the data as stats values for some column don't make sense:\n\nInfant deaths min is 0 per 1000 but Under Five Deaths is not 0\n\nBMI min is 0.01 and max is 1 (lower than 10 and greater than 80)\n\nGDP per capita min is 0\n\npopulation min is 0\n\nInfant deaths of 0\n\n\nColumns with outlier % greater than 5: Infant Deaths(11.1), Percentage Expenditure(13.2), HepB Vaccination %(8.9), Measles(18.4), Under Five Deaths(13.5), Pol3 Vaccination %(9.5), HIV\/AIDS(18.4), Diptheria Vaccination %(10.1), GDP(12.4), Population(10)\n\n\nOutliers trimming results in total data loss\n\nUsed winzorization for outlier handling\n\n\nLife Expectancy correlation with other factors:\n\nstrong positive: BMI, Schooling and Resources Income Composition, Diptheria Vaccination %, Pol3 Vaccination %\n\nstrong negative: Adult Mortality, Thiness 5-9 years, HIV\/AIDS, Under Five Deaths, Infant Deaths\n\nweak negative:   HepB Vaccination %, Measles, Thiness 10-19 years, Status(negative because status value 0= developed country and 1=developing)\n\nweak positive:   GDP, Percentage Expenditure, HepB Vaccination %, Alcohol Intake(Positive because alcohol is consumed more in developed countries and developed countries has high life expectancy)\n\nnegligible:      Year, Total Expenditure, Population \n\n\n\nResult certainity is strong for all factors except Population\n\nImportants Factors: BMI, Schooling, Resources Income Composition, Diptheria Vaccination %, Pol3 Vaccination %, Adult Mortality, Thiness 5-9 years, HIV\/AIDS, Under Five Deaths, Infant Deaths\n\nUnimportant Factors: Country, Year, Infant Deaths, Total Expenditure, Population, Alcohol Intake\n","a562bebd":"## Conclusion","64b33bcb":"To improve the Life Expectancy:\n    \nPolio, Hepatitis, Diptheria vaccination coverage should be increased\n\nMeasures should be taken to ensure food security\n\nMeasures should be taken to provide education and reduce the risks of infant mortality\n\nResources should be utilized productively\n\nAIDS awarness campaigns should be organized. \n","53272174":"## Model Development ","d0b978c4":"## Data Understanding","baf1fc20":"## Problem: \nwhat area(s) should be given importance in order to efficiently improve the life expectancy of the population?","17d3748a":"## Exploratory Data Analysis","3637c8f0":"### Observations\nRecords: 2938\n\nPeriod: 2000 - 2015\n\nCountries: 193\n\nDuplicate rows: 0\n\nDuplicate Columns: 0\n\nLife expectancy factors = 22 = ( Country, Year , Status, Life expectancy, Adult Mortality, infant deaths, Alcohol, percentage expenditure, Hepatitis B, Measles, BMI, under-five deaths, Polio, Total expenditure, Diphtheria, HIV\/AIDS, GDP, Population, thinness  1-19 years,  thinness 5-9 years, Income composition of resource, Schooling)\n\nStatus: country status according to WHO standards, Developed or Developing\n\nLife expectancy: life expectancy in age\n\nAdult Mortality: probability of dying between 15 and 60 years per 1000 population\n\nInfant deaths: infant deaths per 1000 population\n\nAlcohol: alcohol consumption rate per capita (15+), measured as liters \n\nPercentage expenditure: expenditure on health as a percentage of GDP per capita(%)\n\nHepatitis B: HepB immunization coverage among 1-year-olds (%)\n\nMeasles: number of reported cases per 1000 population\n\nBMI: average Body Mass Index of entire population\n\nUnder-five deaths: Number of under-five deaths per 1000 population\n\nPolio: Pol3 immunization coverage among 1 year olds (%)\n\nTotal expenditure: government expenditure on health as a percentage of total government expenditure (%)\n\nDiphtheria: diphtheria tetanus toxoid and pertussis (DTP3) immunization coverage among 1-year-olds (%)\n\nHIV\/AIDS: deaths per 1000 live births HIV\/AIDS (0-4 years)\n\nGDP: Gross Domestic Product per capita (in USD)\n\nThinness 1-19 years: rate of thinness among people aged 10-19 \n\nThinness 5-9 years: rate of thinness among people aged 5-9\n\nIncome composition of resources: Human Development Index in terms of income composition of resources\n\nSchooling: average number of years of schooling of a population\n\n\n\nThinness 1-19 years should be renamed to Thinness 10-19 years as it represents thinness in people aged 10-19\n\nPolio, Deptheria, Hepatits B and Alcohol should be renamed to Pol3 Vaccination %, Deptheria Vaccination %, HepB Vaccination % and Alcohol Intake(L) respectively to more accurately represent the variables\n\nColumn name space issue: Life expectancy, Measles, BMI, under-five deaths, HIV\/AIDS, thinness 1-19, thinness 5-9 years, Diphtheria\n\nColumn name case issue: Life expectancy, under-five deaths, thinness 1-19, thinness 5-9 years, infant deaths, percentage expenditure, Total expenditure\n\nColumn type issue: Country(object), Year(int64), Status(object)\n\nColumns with missing values: Life expectancy(10), Adult Mortality(10), Alcohol Intake(194), HepB Vaccination %(553), BMI(34), Pol3 Vaccination %(19), Total expenditure(226), Diphtheria Vaccination %(19), GDP(448), Population(652), thinness 10-19 years(34), thinness 5-9 years(34), Income composition of resources(167), Schooling(163)\n\nData isn't normalized","2d2ba75d":"### Observations"}}