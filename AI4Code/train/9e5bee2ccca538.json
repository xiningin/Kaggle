{"cell_type":{"a7ed7479":"code","73783cef":"code","329f8b24":"code","25657d90":"code","42f5d8ad":"code","443d4ab4":"code","8738b41c":"code","aef1e15b":"code","cc875a1c":"code","65d798d7":"code","f90c9b6b":"code","9dfdd70f":"code","b213d022":"code","dcacc61f":"code","a78929bf":"code","6a97516b":"code","acb8d3e2":"code","44a34019":"code","1b594c3b":"code","9cf52092":"code","54a2312e":"code","5a1ba539":"code","54136b9f":"code","d56a6942":"code","c83a6351":"code","297caee2":"code","741acf1e":"code","78508529":"code","80a954f0":"code","99064ab9":"code","b317ad79":"code","5d9e8551":"code","3c7274e8":"code","a977ec8b":"code","f0d16ed3":"code","a841beea":"code","301b7e37":"code","cc58e9c8":"code","45c8882a":"code","4a9ff738":"code","062e4fcb":"code","77818080":"code","1c6073a0":"code","7a8cc9b2":"code","2212ba63":"code","7fdc44df":"code","53270f13":"code","e4aed552":"code","018e8530":"code","20d90f56":"code","b098991d":"code","8bd65fa5":"code","e90a1f07":"code","41a07be3":"code","7af46f67":"code","805b71e8":"code","1e5a4e65":"code","16d75537":"code","60313b19":"code","333207e4":"code","a81f1699":"code","f865aa0f":"code","9e3a6a40":"code","2f5f7bcd":"code","37b1ebff":"code","352c2b3e":"code","a4b88e4e":"code","1aaa747c":"code","f7d45102":"code","47146a57":"code","b34a6711":"code","50b778f4":"code","7f08cbbb":"code","beb8c8b3":"code","f3df75db":"code","13b09b25":"code","1c958aa4":"code","edc3eaf0":"code","81bcd623":"code","d042f193":"code","11a9eeba":"code","2984fff3":"code","127badec":"code","d99e288e":"code","35dcf8ff":"code","23804c10":"code","07ade5ea":"code","c79c0cc0":"code","87360781":"code","e43213bb":"code","cadee9a9":"code","72638bb1":"code","6f187406":"code","17fcffa3":"code","36888437":"code","7abad7ad":"code","c980fea1":"code","a0f3ba68":"code","936b4636":"code","fb7fa8fd":"code","591fe0d3":"code","da215bf4":"markdown","11b7f541":"markdown","da42df58":"markdown","6f329636":"markdown","1d76bfad":"markdown","2130ec39":"markdown","8f51360f":"markdown","670b9957":"markdown","e7ac9d0d":"markdown","72a5ffe5":"markdown","23872dd5":"markdown","a7c04886":"markdown","c2d57a00":"markdown","fbf35ce6":"markdown","e27f6039":"markdown","d59bb912":"markdown","af342869":"markdown","2aac49c0":"markdown","e3bf94d2":"markdown","8be3cad3":"markdown","4552ad0d":"markdown","ccbd7fa8":"markdown","f831aa58":"markdown","f99eaada":"markdown","51ec7fa7":"markdown","9fb496c1":"markdown","454d1c9f":"markdown","4a21686b":"markdown","699fe02a":"markdown","69e60427":"markdown","5eb217a3":"markdown","1e1afbcd":"markdown","aab0b6e1":"markdown","1de3c177":"markdown","8899b573":"markdown","c30f7dd1":"markdown","0f403f6e":"markdown","c3a4ad57":"markdown","1cecf98d":"markdown","c0ce40c9":"markdown","1824c231":"markdown","a458264a":"markdown","f2c2253f":"markdown","eebe33ce":"markdown","96b9b742":"markdown","9135ec6b":"markdown","1b3cef4c":"markdown","cbe8e65a":"markdown","e2c5eaf9":"markdown","da63bdb8":"markdown"},"source":{"a7ed7479":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nprint(os.listdir(\"..\/input\/heart-disease-uci\"))\n\n# Any results you write to the current directory are saved as output.","73783cef":"import pandas as pd # Data processing\nimport numpy as np # For Linear Algebra Calculation","329f8b24":"heart_disease = pd.read_csv('..\/input\/heart-disease-uci\/heart.csv')\nheart_disease.head()","25657d90":"# Find how many variables and objects in the data set\nheart_disease.shape","42f5d8ad":"# view the type of data in the data set\nheart_disease.info()","443d4ab4":"heart_disease= heart_disease.rename(columns= {'cp': 'chest_pain_type' , 'trestbps': 'resting_blood_pressure' , 'chol' : 'cholesterol',\n                                             'fbs': 'fasting_blood_sugar' , 'restecg' : 'rest_ecg' ,'thalach' : 'max_heart_rate_achieved',\n                                             'exang' : 'exercise_induced_angina' , 'oldpeak' : 'st_depression' , 'slope' : 'st_slope',\n                                             'ca' : 'num_major_vessels' , 'thal' : 'thalassemia'})","8738b41c":"# View the first 10 rows in data set\nheart_disease.head(10)","aef1e15b":"# View the last 10 rows in the data set\nheart_disease.tail(10)","cc875a1c":"heart_disease.isnull().sum()","65d798d7":"# Convert Sex Column data\nheart_disease['sex'][heart_disease['sex'] == 0] = 'Female'\nheart_disease['sex'][heart_disease['sex'] == 1] = 'Male'","f90c9b6b":"# Convert Chest pain type column data\nheart_disease['chest_pain_type'][heart_disease['chest_pain_type'] == 0] = 'typical angina'\nheart_disease['chest_pain_type'][heart_disease['chest_pain_type'] == 1] = 'atypical angina'\nheart_disease['chest_pain_type'][heart_disease['chest_pain_type'] == 2] = 'non-anginal pain'\nheart_disease['chest_pain_type'][heart_disease['chest_pain_type'] == 3] = 'asymptomatic'","9dfdd70f":"# Convert Fast Blood sugar column\nheart_disease['fasting_blood_sugar'][heart_disease['fasting_blood_sugar'] == 0] = 'lower than 120mg\/ml'\nheart_disease['fasting_blood_sugar'][heart_disease['fasting_blood_sugar'] == 1] = 'greater than 120mg\/ml'","b213d022":"# Convert rest_ecg column data\nheart_disease['rest_ecg'][heart_disease['rest_ecg'] == 0] = 'normal'\nheart_disease['rest_ecg'][heart_disease['rest_ecg'] == 1] = 'ST-T wave abnormality'\nheart_disease['rest_ecg'][heart_disease['rest_ecg'] == 2] = 'left ventricular hypertrophy'","dcacc61f":"# Convert exercise_included_angina\nheart_disease['exercise_induced_angina'][heart_disease['exercise_induced_angina'] == 0] = 'no'\nheart_disease['exercise_induced_angina'][heart_disease['exercise_induced_angina'] == 1] = 'yes'","a78929bf":"# Convert solpe column data\nheart_disease['st_slope'][heart_disease['st_slope'] == 1] = 'upsloping'\nheart_disease['st_slope'][heart_disease['st_slope'] == 2] = 'flat'\nheart_disease['st_slope'][heart_disease['st_slope'] == 3] = 'downsloping'","6a97516b":"# convert Thalassemia column data\nheart_disease['thalassemia'][heart_disease['thalassemia'] == 1] = 'normal'\nheart_disease['thalassemia'][heart_disease['thalassemia'] == 2] = 'fixed defect'\nheart_disease['thalassemia'][heart_disease['thalassemia'] == 3] = 'reversable defect'","acb8d3e2":"# View the data set after changing it to Categorical\nheart_disease.head(10)","44a34019":"heart_disease.describe().transpose()","1b594c3b":"# Calaculte on individual column count -Sex\nheart_disease['sex'].value_counts()","9cf52092":"# Calaculte on individual column count -chest_pain_type\nheart_disease['chest_pain_type'].value_counts()","54a2312e":"# Calculate on individual column count - fasting_blood_sugar\nheart_disease['fasting_blood_sugar'].value_counts()","5a1ba539":"# Calculate on individual column count - rest_ecg\nheart_disease['rest_ecg'].value_counts()","54136b9f":"# Calculate on individual column count -exercise_induced_angina\nheart_disease['exercise_induced_angina'].value_counts()","d56a6942":"# Calculate on individual column count -st_slope\nheart_disease['st_slope'].value_counts()","c83a6351":"# Calculate on individual column count -  thalassemia\nheart_disease['thalassemia'].value_counts()","297caee2":"# Import Libraries\nfrom scipy.stats import skew , kurtosis","741acf1e":"# Calculate Skewnes and Kurtosis on individual columns -Sex\nprint(\"skewness of the age\" , skew(heart_disease['age']))\nprint(\"Kurtosis of Age \", kurtosis(heart_disease['age']))\n","78508529":"# Calculate Skewnes and Kurtosis on individual columns - resting_blood_pressure\nprint(\"skewness of the resting_blood_pressure\" , skew(heart_disease['resting_blood_pressure']))\nprint(\"Kurtosis of resting_blood_pressure \", kurtosis(heart_disease['resting_blood_pressure']))","80a954f0":"# Calculate Skewnes and Kurtosis on individual columns - cholesterol\nprint(\"skewness of the cholesterol\" , skew(heart_disease['cholesterol']))\nprint(\"Kurtosis of cholesterol \", kurtosis(heart_disease['cholesterol']))","99064ab9":"# Calculate Skewnes and Kurtosis on individual columns - max_heart_rate_achieved\nprint(\"skewness of the max_heart_rate_achieved\" , skew(heart_disease['max_heart_rate_achieved']))\nprint(\"Kurtosis of max_heart_rate_achieved \", kurtosis(heart_disease['max_heart_rate_achieved']))","b317ad79":"# Calculate Skewnes and Kurtosis on individual columns - st_depression\nprint(\"skewness of the st_depression\" , skew(heart_disease['st_depression']))\nprint(\"Kurtosis of st_depression \", kurtosis(heart_disease['st_depression']))","5d9e8551":"# Import Libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3c7274e8":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['age'])\nplt.show()","a977ec8b":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['sex'])\nplt.show()","f0d16ed3":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['chest_pain_type'])\nplt.show()","a841beea":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['target'])\nplt.show()","301b7e37":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['exercise_induced_angina'])\nplt.show()","cc58e9c8":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['rest_ecg'])\nplt.show()","45c8882a":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['st_slope'])\nplt.show()","4a9ff738":"fig,ax = plt.subplots(figsize=(15,5))\nax = sns.countplot(heart_disease['thalassemia'])\nplt.show()","062e4fcb":"f,ax = plt.subplots(figsize=(15,6))\nax = sns.boxplot(x='age',y='sex',data=heart_disease)\nplt.show()","77818080":"f,ax = plt.subplots(figsize=(15,6))\nax = sns.boxplot(x='age',y='chest_pain_type',data=heart_disease)\nplt.show()","1c6073a0":"f,ax = plt.subplots(figsize=(15,6))\nax = sns.boxplot(x='sex',y='max_heart_rate_achieved',data=heart_disease)\nplt.show()","7a8cc9b2":"f,ax = plt.subplots(figsize=(15,6))\nax = sns.boxplot(x='sex',y='target',data=heart_disease)\nplt.show()","2212ba63":"f,ax = plt.subplots(figsize=(15,6))\nax = sns.boxplot(x='sex',y='cholesterol',data=heart_disease)\nplt.show()","7fdc44df":"sns.distplot(heart_disease['target'])","53270f13":"pd.crosstab(heart_disease.age,heart_disease.target).plot(kind=\"bar\",figsize=(25,8),color=['gold','brown' ])\nplt.title('Heart Disease Frequency for Ages')\nplt.xlabel('Age')\nplt.ylabel('Frequency')\nplt.show()","e4aed552":"pd.crosstab(heart_disease.sex,heart_disease.target).plot(kind=\"bar\",figsize=(10,5),color=['cyan','coral' ])\nplt.xlabel('Sex (0 = Female, 1 = Male)')\nplt.xticks(rotation=0)\nplt.legend([\"Haven't Disease\", \"Have Disease\"])\nplt.ylabel('Frequency')\nplt.show()","018e8530":"sns.pairplot(data=heart_disease)","20d90f56":"plt.figure(figsize=(14,10))\nsns.heatmap(heart_disease.corr(),annot=True,cmap='hsv',fmt='.3f',linewidths=2)\nplt.show()","b098991d":"heart_disease.groupby('chest_pain_type', as_index=False)['target'].mean()","8bd65fa5":"heart_disease.groupby('st_slope',as_index=False)['target'].mean()","e90a1f07":"heart_disease.groupby('thalassemia',as_index=False)['target'].mean()","41a07be3":"heart_disease.groupby('target').mean()","7af46f67":"# Convert the data into categorical data type\nheart_disease.chest_pain_type = heart_disease.chest_pain_type.astype(\"category\")\nheart_disease.exercise_induced_angina = heart_disease.exercise_induced_angina.astype(\"category\")\nheart_disease.fasting_blood_sugar = heart_disease.fasting_blood_sugar.astype(\"category\")\nheart_disease.rest_ecg = heart_disease.rest_ecg.astype(\"category\")\nheart_disease.sex = heart_disease.sex.astype(\"category\")\nheart_disease.st_slope = heart_disease.st_slope.astype(\"category\")\nheart_disease.thalassemia = heart_disease.thalassemia.astype(\"category\")","805b71e8":"# Dummy values\nheart_disease1 = pd.get_dummies(heart_disease, drop_first=True)","1e5a4e65":"heart_disease1.head()","16d75537":"# Import Libraries\nfrom sklearn.preprocessing import scale\nscale(heart_disease1)","60313b19":"np.exp(scale(heart_disease1))","333207e4":"x = heart_disease1.drop(['target'], axis = 1)\ny = heart_disease1.target.values","a81f1699":"# Input values\nx","f865aa0f":"# Output Values\ny","9e3a6a40":"# Import Libraries\nfrom sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.80)","2f5f7bcd":"from sklearn.linear_model import LogisticRegression\nlogmodel = LogisticRegression()","37b1ebff":"# Fit the model\nlogmodel.fit(x_train,y_train)","352c2b3e":"# Predict the model\nLR_pred = logmodel.predict(x_test)\nLR_pred","a4b88e4e":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(LR_pred,y_test))","1aaa747c":"# Accuracy\nfrom sklearn.metrics import accuracy_score\nLR_accuracy = accuracy_score(LR_pred,y_test)\nLR_accuracy","f7d45102":"from sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors=3)\nclassifier","47146a57":"# Fit the Model\nclassifier.fit(x_train,y_train)","b34a6711":"# Predict the Model\nknn_pred = classifier.predict(x_test)\nknn_pred","50b778f4":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(knn_pred,y_test))","7f08cbbb":"# Accuracy Score\nfrom sklearn.metrics import accuracy_score\naccuracy_knn=accuracy_score(knn_pred,y_test)\naccuracy_knn","beb8c8b3":"from sklearn.naive_bayes import GaussianNB\nclassifier2 = GaussianNB()\nclassifier2","f3df75db":"# Fit the model\nclassifier2.fit(x_train,y_train)","13b09b25":"# Predict the model\nNBC_pred = classifier2.predict(x_test)\nNBC_pred","1c958aa4":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(NBC_pred,y_test))","edc3eaf0":"# Accuracy\nfrom sklearn.metrics import accuracy_score\nNBC_accuracy = accuracy_score(NBC_pred,y_test)\nNBC_accuracy","81bcd623":"from sklearn.tree import DecisionTreeClassifier\nclassifier1 = DecisionTreeClassifier(criterion='entropy',random_state=0)\nclassifier1","d042f193":"# Fit the model\nclassifier1.fit(x_train,y_train)","11a9eeba":"# Predict the model\nDT_pred = classifier1.predict(x_test)\nDT_pred","2984fff3":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(DT_pred,y_test))","127badec":"# Accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_DT = accuracy_score(DT_pred,y_test)\naccuracy_DT","d99e288e":"from sklearn.ensemble import RandomForestClassifier\nclassifier3 = RandomForestClassifier(criterion='entropy',random_state=0)\nclassifier3","35dcf8ff":"# Fit the model\nclassifier3.fit(x_train,y_train)","23804c10":"# Predict the model\nRF_pred = classifier3.predict(x_test)\nRF_pred","07ade5ea":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(RF_pred,y_test))","c79c0cc0":"# Accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_RF = accuracy_score(RF_pred,y_test)\naccuracy_RF","87360781":"from sklearn.svm import SVC\nclassifier4 = SVC(kernel = 'linear', random_state = 0)\nclassifier4","e43213bb":"# Fit the model\nclassifier4.fit(x_train,y_train)","cadee9a9":"# Predict the model\nSVC_pred = classifier4.predict(x_test)\nSVC_pred","72638bb1":"# Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(SVC_pred,y_test))","6f187406":"# Accuracy\nfrom sklearn.metrics import accuracy_score\naccuracy_SVC = accuracy_score(SVC_pred,y_test)\naccuracy_SVC","17fcffa3":"from sklearn.ensemble import RandomForestClassifier\nclf= RandomForestClassifier()","36888437":"parameters = {'n_estimators': [4, 6, 9], \n              'max_features': ['log2', 'sqrt','auto'], \n              'criterion': ['entropy', 'gini'],\n              'max_depth': [2, 3, 5, 10], \n              'min_samples_split': [2, 3, 5],\n              'min_samples_leaf': [1,5,8]\n             }\n","7abad7ad":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import make_scorer, accuracy_score\nclassifier5 = GridSearchCV(clf, parameters, cv=5, scoring='accuracy')\nclassifier5","c980fea1":"# Type of scoring used to compare parameter combinations\nacc_scorer = make_scorer(accuracy_score)","a0f3ba68":"# Run the grid search\ngrid_obj = GridSearchCV(clf, parameters, scoring=acc_scorer)\ngrid_obj = grid_obj.fit(x_train, y_train)","936b4636":"# Set the clf to the best combination of parameters\nclf = grid_obj.best_estimator_","fb7fa8fd":"# Fit the best algorithm to the data. \nclf.fit(x_train, y_train)","591fe0d3":"predictions = clf.predict(x_test)\nprint(accuracy_score(y_test, predictions))","da215bf4":"# Data Cleaning on Categorical Data","11b7f541":"There is no  NAN \/ NA values in the given data set","da42df58":"# Bivariate Analysis","6f329636":"# Engineering Featuring","1d76bfad":"# Decision Tree Classifier Accuracy score is : 74%","2130ec39":"# 1. People getting Heart disease of Aged persons","8f51360f":"# Split the data as Training and Testing","670b9957":"# 4. Excercise againist Heart Disease","e7ac9d0d":"# Exploaratory Data Analysis","72a5ffe5":"# 4. Sex Vs target","23872dd5":"# SVM Accuracy Score is : 77%","a7c04886":"# Pairplot","c2d57a00":"# 7. GridSearchCV Algorithm","fbf35ce6":"# IMPORT NECESSARY LIBRARIES TO READING THE DATA","e27f6039":"# We can use Logistic Regression model to predict the heart disease.","d59bb912":"# Univariate Analysis","af342869":"# 2. Most of Male people getting Heart Disease","2aac49c0":"# 6. Support Vector Machine (SVM)","e3bf94d2":"# Build Machine Learning Models","8be3cad3":"# 5. Random Forest","4552ad0d":"# Correlation Diagram","ccbd7fa8":"There is -Ve values in normalized data ,hence we can use exponential of the scaled data","f831aa58":"# Change the Object names as meaningfull","f99eaada":"# Divide the data as input and output","51ec7fa7":"# 4. Target","9fb496c1":"# Accuracy Scores for All ML Models:\n# 1. K-Nearest Neighbor : 65 %\n# 2. Decision Trees : 74 %\n# 3. Support Vector Machine : 77 %\n# 4. Naive Bayes Classifier : 80 %\n# 5. Random Forest : 82 %\n# 6. Logistic Regression : 87 %\n# 7. GridSearch CV : 81 %","454d1c9f":"# 3. Chest Pain  type is more of Typical Angina","4a21686b":"# KNN Accuracy Score is :65 %","699fe02a":"# 3. Sex Vs Heart Rate","69e60427":"# 5. Sex Vs Cholestrol","5eb217a3":"# Skewness and Kurtosis","1e1afbcd":"# 7. Slope of Heart Disease","aab0b6e1":"# 4. Decision Tree","1de3c177":"# 1 . Logistic Regression","8899b573":"# GridSearchCV Accuracy Score is : 81 %","c30f7dd1":"# Distribution of the Target","0f403f6e":"# Check if any missing values in the data","c3a4ad57":"# 6. ECG","1cecf98d":"# Normalize \/ Scale the Data","c0ce40c9":"# 3. Naive Bayes Classifier (NBC)","1824c231":"# Various Graphical Visualizations","a458264a":"# Convert to categorical data using Dummy","f2c2253f":"# 8. Thalassemia","eebe33ce":"# Random Forest Classifier Accuracy score is : 82%","96b9b742":"# 2. Age Vs Chest Pain Type","9135ec6b":"# 1. Age Vs Sex","1b3cef4c":"# 2. K-Nearest Neighbor (KNN)","cbe8e65a":"# NBC Accuracy Score is : 80%","e2c5eaf9":"# Logistic Regression Accuracy Score is : 87%","da63bdb8":"It's a clean, easy to understand set of data. However, the meaning of some of the column headers are not obvious. Here's what they mean,\n\n1.age: The person's age in years\n\n2.sex: The person's sex (1 = male, 0 = female)\n\n3.cp: The chest pain experienced (Value 1: typical angina, Value 2: atypical angina, Value 3: non-anginal pain, Value 4: asymptomatic)\n\n4.trestbps: The person's resting blood pressure (mm Hg on admission to the hospital)\n\n5.chol: The person's cholesterol measurement in mg\/dl\n\n6.fbs: The person's fasting blood sugar (> 120 mg\/dl, 1 = true; 0 = false)\n\n7.restecg: Resting electrocardiographic measurement (0 = normal, 1 = having ST-T wave abnormality, 2 = showing probable or definite left ventricular hypertrophy by Estes' criteria)\n\n8.thalach: The person's maximum heart rate achieved\n\n9.exang: Exercise induced angina (1 = yes; 0 = no)\n\n10.oldpeak: ST depression induced by exercise relative to rest ('ST' relates to positions on the ECG plot. See more here)\n\n11.slope: the slope of the peak exercise ST segment (Value 1: upsloping, Value 2: flat, Value 3: downsloping)\n\n12.ca: The number of major vessels (0-3)\n\n13.thal: A blood disorder called thalassemia (3 = normal; 6 = fixed defect; 7 = reversable defect)\n\n14.target: Heart disease (0 = no, 1 = yes)\n"}}