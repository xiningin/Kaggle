{"cell_type":{"424ec425":"code","07bdcfcf":"code","4d15cca3":"code","c6573a7b":"code","eda90bab":"code","4c33cbb0":"code","788b1c35":"code","fae1c363":"code","729dc14b":"code","c622c788":"code","1e57da63":"code","3181fb70":"code","06c5fe96":"code","05972c84":"code","f5fbced8":"code","8c344f18":"code","24cbaef0":"markdown"},"source":{"424ec425":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","07bdcfcf":"data=pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv\")\ndata.head()","4d15cca3":"#correlation map\nf,ax = plt.subplots(figsize=(15, 15))\nsns.heatmap(data.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)\n#korekasyon haritas\u0131nda, variable'lar\u0131n birbiriyle olan alakas\u0131n\u0131 g\u00f6r\u00fcyoruz. En alakal\u0131 olan variable'lar i\u00e7in\n#'ladder score' ve 'upperwhisker' g\u00f6sterilebilir. Korelasyonu en d\u00fc\u015f\u00fck olan variable'lar ise 'perceptions of corruption'\n#ve 'explained by: perceptions of corruption' g\u00f6sterilebilir. (neden oldu\u011funu ben de bilmiyorum.)","c6573a7b":"#Line plot for upperwhisker & lowerwhisker columns.\ndata.upperwhisker.plot(kind='line', color = 'b',label = 'upperwhisker',linewidth=1,alpha = 0.5,grid = True,linestyle = ':')\ndata.lowerwhisker.plot(kind='line', color = 'r',label = 'lowerwhisker',linewidth=1,alpha = 0.5,grid = True,linestyle = '-.')\nplt.legend(loc='upper right')     \nplt.xlabel('x axis')             \nplt.ylabel('y axis')\nplt.title('Line Plot')\n#line plot'ta de\u011ferler artt\u0131k\u00e7a bir d\u00fc\u015f\u00fc\u015f g\u00f6r\u00fcyoruz her iki variable i\u00e7in de. Bu a\u00e7\u0131dan do\u011fru orant\u0131l\u0131lar,\n#hatta en son geldikleri nokta bile ayn\u0131. sadece 40'a yakla\u015f\u0131rken ters orant\u0131l\u0131 bir hareket i\u00e7erisinde\n#olmu\u015flar.","eda90bab":"#scatter plot\ndata.plot(kind='scatter', x='upperwhisker', y='lowerwhisker',alpha = 0.5,color = 'orange')\nplt.xlabel('upperwhisker')\nplt.ylabel('lowerwhisker')\nplt.title('upperwhisker & lowewhisker Scatter Plot')\n#upperwhisker oran\u0131 belirli bir orana kadar artt\u0131k\u00e7a lowerwhisker oran\u0131 da art\u0131\u015f g\u00f6stermi\u015f, fakat bu orandan\n#uzakla\u015f\u0131ld\u0131k\u00e7a bu korelasyon yo\u011funlu\u011fu azalmaya ba\u015flam\u0131\u015f.","4c33cbb0":"#histogram\ndata.upperwhisker.plot(kind='hist', bins = 50,figsize = (12,12))","788b1c35":"#Filtering:\nx=data['Generosity']\nx>0.2 #it will return true's and false's one by one.\ny=data['Generosity']>0.2\ndata[y] #it will return only the values which satisfy that condition.","fae1c363":"#Filtering for two conditions:\ndata[np.logical_and(data['Generosity']>0.2, data['upperwhisker']<7)]","729dc14b":"#Scop:\nx=19\ndef func():\n    x=9\n    return x\nfunc() #it will return local variable.\ndef func1():\n    y=9\n    s=x+y\n    return s\nfunc1() #it will take x from its' global value.\n","c622c788":"#Nested functions:\nx=10\ny=9\ndef mult():\n    def sub():\n        return x-9\n    return x*y\nmult()","1e57da63":"#Iterators:\nname=\"seyma\"\nit=iter(name)\nprint(next(it)) #it will iterate first digit.\nprint(next(it)) #does same operation for second.\nprint(*it) #it will iterate rest.","3181fb70":"#DEFAULT ARGUMENTS\ndef f(x,y=2,z=3):\n    return x+y+z\nprint(f(1))\nprint(f(10,20,30))\n#FLEXIBLE ARGUMENTS!!! PROBLEMS HERE\ndef a(*args):\n    return x*3\na(1,2,3,4,5) #it returns same value, i can't understand why.\ndef b(*kwargs):\n    for key, value in kwargs.items():\n        print(key, \":\", values)\nprint(f(clothes=\"tshirt\", color=\"blue\", size=\"medium\")) #it gives unexpected argument error.","06c5fe96":"#ANONYMOUS FUNCTION\nnums=[10,20,30,40,50]\ny=map(lambda x:x**2, nums)\nprint(list(y)) #it will apply the operation to all items of the nums list.","05972c84":"#ZIP & UNZIP #PROBLEM HERE!!!!\nl1=[9,8,7,6,5]\nl2=[4,3,2,1,0]\nz=zip(l1,l2)\nprint(z)\nlisted_form=list(z)\nprint(listed_form)\nun_zip=(*listed_form)\nun_zipped1, un_zipped2= list(un_zip)\nprint(un_zipped1)\nprint(un_zipped2) #it gives error here.","f5fbced8":"#LIST COMPREHENSION\nnum1=[10,20,30]\nnum2=[i*10 for i in num1] #for i in num1 is for loop syntax. #i*10 list comprehension syntax\nprint(num2)               #i is iterator. #num1 is iterable object.\n#CONDITIONALS ON ITERATOR\nnum1=[10,20,43,23,43,57]\nnum2=[i\/10 if 9<i<21 else i+7 if i<45 else i+43 for i in num1]\nprint(num2)\n#comprehension in the database\navg= sum(data.upperwhisker)\/len(data.upperwhisker)\ndata[\"levels\"]= [\"high\" if i>avg else \"low\" for i in data.upperwhisker]\ndata.loc[:10,[\"levels\",\"upperwhisker\"]] #it will print values for first 10.","8c344f18":"data.head()","24cbaef0":"SECOND HOMEWORK:"}}