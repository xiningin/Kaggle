{"cell_type":{"5c05102f":"code","60acf4d8":"code","bcb50cee":"code","a1d2eaf3":"code","9b857690":"code","75dccf84":"code","ab574655":"code","665e42fd":"code","c45e3642":"code","e408109e":"code","c3a10e90":"code","fad6f608":"code","d6cb1da4":"code","8dd461de":"code","9f91c072":"code","2c32498b":"code","bc605f5e":"code","b5313094":"code","8b6bf3c6":"code","d7b0e481":"code","c25df9d7":"code","56a69301":"code","6810c464":"code","a30e8782":"code","6ca9a928":"code","74e98ec7":"code","e1f3de2e":"code","08008ed9":"markdown"},"source":{"5c05102f":"# importing train and test data into train_df and test_df dataframes\nimport pandas as pd\ntrain_df = pd.read_csv('\/kaggle\/input\/sce-data-science-2020-course\/train.csv')\ntest_df = pd.read_csv('\/kaggle\/input\/sce-data-science-2020-course\/test.csv')","60acf4d8":"# dataframe deep copy\ndata = train_df.copy(deep = True)","bcb50cee":"# dataframe column names\ntrain_df.columns.values","a1d2eaf3":"# preview the n first rows of dataframe\ntrain_df.head(n = 4)","9b857690":"# preview the n last rows of dataframe\ntrain_df.tail(n=7)","75dccf84":"# dataframe types\ntrain_df.info()","ab574655":"# dataframe numerical features distribution\ntrain_df.describe()","665e42fd":"# dataframe categorical features distribution\ntrain_df.describe(include=['O'])","c45e3642":"# dataframe missing data information\ntrain_df.isnull().sum()","e408109e":"# get table of frequency counts for items in a dataframe column\ntrain_df['Pclass'].value_counts()","c3a10e90":"# get table of frequency counts for items in a dataframe column\ntrain_df['Embarked'].value_counts()","fad6f608":"# rename column in dataframe\nd = train_df.copy(deep = True)\nd.rename(columns = {'Survived':'S'}, inplace = True)\nd.head(1)","d6cb1da4":"# selecting a subset of dataframe\ndf_subset = train_df[(train_df.Age > 50) & (train_df.Pclass == 2)] \ndf_subset.describe()","8dd461de":"# selecting a subset of dataframe\ndf_subset = train_df[((train_df.Pclass == 1) | (train_df.Pclass == 2)) & (train_df.Survived == 'T')] \ndf_subset.describe()","9f91c072":"# selecting a subset of dataframe by range of indexes and column index\ndf_subset = train_df.iloc[0:100, 5]\ndf_subset.describe()","2c32498b":"# group data by dataframe subset\ngrouped_data = train_df.groupby(['Sex', 'Pclass','Age'])\ngrouped_data['Survived'].describe()","bc605f5e":"# missing values replacement for numerical column\ndata = train_df.copy(deep = True)\nc = 'Age'\nm = data[c].dropna().mean()\ndata[c].fillna(m, inplace=True)\ndata.info()","b5313094":"# missing values replacement for categorical column\ndata = train_df.copy(deep = True)\nc = 'Cabin'\nm = data[c].dropna().mode()[0]\ndata[c].fillna(m, inplace=True)\ndata.info()","8b6bf3c6":"# columns transformation - way 1\ndata = train_df.copy(deep = True)\nc = {'T':1,'F':0}\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].map(c)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","d7b0e481":"# columns transformation - way 2\ndata = train_df.copy(deep = True)\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].apply(lambda x: 1 if x == 'T' else 0)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","c25df9d7":"# columns transformation - way 3\n# http:\/\/queirozf.com\/entries\/one-hot-encoding-a-feature-on-a-pandas-dataframe-an-example\ndata = train_df.copy(deep = True)\ncols = pd.get_dummies(data['Survived'],prefix='Survived_', drop_first=False)\ndata = pd.concat([data,cols],axis=1)\ndata.head(10)","56a69301":"# label encoder","6810c464":"# grouping data and aggregating columns\npd = train_df.groupby('Sex').agg('sum')[['Survived', 'Died']]\nprint(pd.head())","a30e8782":"# plotting data\npd.plot(kind='bar', figsize=(25, 7), stacked=False, color=['g', 'r'])","6ca9a928":"# add a column with constant value\ndata = train_df.copy(deep = True)\ndata['Test'] = 'Test'\ndata.head(10)","74e98ec7":"# add a column and bin to intervals\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.4\/generated\/pandas.cut.html\ndata = train_df.copy(deep = True)\ndata['Age_Intervals'] = pd.cut(data['Age'], 4)\ndata.head(10)","e1f3de2e":"#drop a column\ndata = train_df.copy(deep = True)\ndata = data.drop(['Age'], axis=1)\ndata.info()","08008ed9":"Manipulating dataframe\nhttps:\/\/gist.github.com\/agalea91\/545e2337b94d965be788f7db18b1f497"}}