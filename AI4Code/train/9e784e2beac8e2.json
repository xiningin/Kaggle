{"cell_type":{"f56a7b89":"code","23160fa0":"code","9e329264":"code","8c971ece":"code","ddbe62d9":"code","ecda3e85":"code","9a76b691":"code","e1dd68b2":"code","98872620":"code","c3458f6a":"code","73448c4b":"code","3269d2e1":"code","536fe3cd":"code","b7c5d817":"code","e831253f":"code","abf861ca":"code","3db0d943":"code","7255bd50":"code","d1f98e91":"code","70a75526":"code","85fa67d8":"code","e5dcd9f2":"code","e50f1cca":"code","033f3dbd":"code","b41f4844":"code","2076f319":"code","20f126e9":"code","9e34f8da":"code","18dd529e":"code","3cd2a89a":"code","177c8978":"code","072f7fc3":"code","76c48395":"code","93cf89f1":"code","efd98802":"code","2d6e908a":"code","e981bc7f":"markdown","07a1ce86":"markdown","138bfd87":"markdown","3a970dbd":"markdown","baf6de69":"markdown","2039087a":"markdown","c3486348":"markdown","6f0594d4":"markdown","3b72bc37":"markdown","0dc683cc":"markdown"},"source":{"f56a7b89":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n#from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import RandomForestRegressor\n\nimport warnings\n\nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\"))\n","23160fa0":"Ntrain = pd.read_csv('..\/input\/train_V2.csv')\ntest = pd.read_csv('..\/input\/test_V2.csv')","9e329264":"Ntrain.head()","8c971ece":"Ntrain[Ntrain['winPlacePerc'].isnull()]","ddbe62d9":"Ntrain.drop(2744604,inplace = True)","ecda3e85":"Ntrain['playerJoined'] = Ntrain.groupby('matchId')['matchId'].transform('count')","9a76b691":"plt.figure(figsize = (15,10))\nsns.countplot(Ntrain[Ntrain['playerJoined']>= 60]['playerJoined'])\nplt.show()","e1dd68b2":"Ntrain['killsNorm'] = Ntrain['kills']*((Ntrain['playerJoined'] - 1)\/(100-1))\n#maxPlaceNorm\n#damageDealtNorm\nNtrain['damageDealtNorm'] = Ntrain['damageDealt'] * ((Ntrain['playerJoined'] - 1)\/99)\n#matchDurationNorm","98872620":"Ntrain[['kills','killsNorm','damageDealt','damageDealtNorm','playerJoined']][:11]","c3458f6a":"Ntrain['totalDistance'] = Ntrain['rideDistance'] + Ntrain['swimDistance'] + Ntrain['walkDistance']","73448c4b":"Ntrain['totalDistance'].head(11)","3269d2e1":"Ntrain['killWithoutMove'] = ((Ntrain['kills'] > 0) & (Ntrain['totalDistance'] == 0))","536fe3cd":"np.shape(Ntrain[Ntrain['killWithoutMove'] == True])","b7c5d817":"Ntrain.drop(Ntrain[Ntrain['killWithoutMove'] == True].index,inplace = True)","e831253f":"plt.figure(figsize=(12,4))\nsns.distplot(Ntrain['boosts'], bins=10)\nplt.show()","abf861ca":"print(np.shape(Ntrain))\nNtrain.drop(Ntrain[Ntrain['boosts'] >11].index,inplace = True)\nprint(np.shape(Ntrain))","3db0d943":"plt.figure(figsize=(12,4))\nsns.distplot(Ntrain['weaponsAcquired'], bins=10)\nplt.show()","7255bd50":"print(np.shape(Ntrain))\nNtrain.drop(Ntrain[Ntrain['weaponsAcquired'] >20].index,inplace = True)\nprint(np.shape(Ntrain))","d1f98e91":"train = Ntrain[:200000]\nnp.shape(train)","70a75526":"train.head(10)","85fa67d8":"train = train.drop(['Id','groupId','matchId','matchType','killWithoutMove','kills','damageDealt','numGroups','swimDistance','playerJoined'],axis = 1)","e5dcd9f2":"Y_train = train['winPlacePerc']\nX_train = train.drop(['winPlacePerc'],axis = 1)\nX_train.head(21)","e50f1cca":"Y_train.head()","033f3dbd":"X_train.shape,Y_train.shape","b41f4844":"# Metric used for the PUBG competition (Mean Absolute Error (MAE))\nfrom sklearn.metrics import mean_absolute_error","2076f319":"m1 = RandomForestRegressor(n_estimators=80, min_samples_leaf=3, max_features=0.5,\n                          n_jobs=-1)\nm1.fit(X_train, Y_train)\nmean_absolute_error(m1.predict(X_train), Y_train)","20f126e9":"X_test = test.copy()","9e34f8da":"X_test.head(11)","18dd529e":"X_test['playerJoined'] = X_test.groupby('matchId')['matchId'].transform('count')\nX_test['killsNorm'] = X_test['kills']*((X_test['playerJoined'] - 1)\/(100-1))\n#maxPlaceNorm\n#damageDealtNorm\nX_test['damageDealtNorm'] = X_test['damageDealt'] * ((X_test['playerJoined'] - 1)\/99)\nX_test['totalDistance'] = X_test['rideDistance'] + X_test['swimDistance'] + X_test['walkDistance']","3cd2a89a":"X_test.head(11)","177c8978":"X_test = X_test.drop(['Id','groupId','matchId','matchType','kills','damageDealt','numGroups','swimDistance','playerJoined'],axis = 1)","072f7fc3":"X_test.head(11)\nnp.shape(X_test),np.shape(test[\"Id\"])","76c48395":"I = np.clip(a = m1.predict(X_test), a_min = 0.0, a_max = 1.0)","93cf89f1":"I.shape","efd98802":"submission = pd.DataFrame({\n        \"Id\": test[\"Id\"],\n        \"winPlacePerc\": I\n    })\nsubmission.to_csv('submission.csv', index=False)","2d6e908a":" submission.head(10)","e981bc7f":" ## preparation for test","07a1ce86":"* ### find the cheaters that kill without move a inch,and drop them","138bfd87":"## normolizing","3a970dbd":"## weaponsAcquired","baf6de69":"* ###  player-joined number for each game","2039087a":"## 200000 for training","c3486348":"## delete NAN","6f0594d4":"##  boosts","3b72bc37":"* ### totalDistance","0dc683cc":"* ### clear the data"}}