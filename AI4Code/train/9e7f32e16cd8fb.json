{"cell_type":{"5a1d1009":"code","cdd2d02d":"code","70ca7023":"code","c264d964":"code","c75059de":"code","479c8448":"code","9d5141db":"code","6da1ad38":"code","5a640953":"code","45a7dea7":"code","b20eca66":"code","bfe68a10":"code","3f8462cb":"code","5b0b429f":"code","27182b77":"code","5f7290c4":"code","a3b56ba3":"code","61f505e6":"markdown","f3b74fd3":"markdown"},"source":{"5a1d1009":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport os\nimport shutil\nimport pathlib\nimport PIL\nimport PIL.Image\nimport tensorflow as tf\nimport tensorflow_datasets as tfds\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom keras.preprocessing import image\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\n\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cdd2d02d":"if os.path.exists('.\/train_lables') == True:\n    shutil.rmtree('.\/train_lables')\n    \ntrain_images_folder = '..\/input\/shopee-product-matching\/train_images'\ntrain = pd.read_csv('..\/input\/shopee-product-matching\/train.csv')\n\nprint('train shape is', train.shape )\ntrain.head()","70ca7023":"label_names = train['label_group'].unique().tolist()\n\nlabel_class_dict = {}\n\nfor i,label in enumerate(label_names):\n    label_class_dict.update({label:i})\n\ntrain['label_class'] = train['label_group'].copy()\n\ntrain.replace({'label_class' :label_class_dict},inplace=True)\n\nprint('train shape is', train.shape )\ntrain.head()","c264d964":"train['class_name_temp_fmt'] = 'class_'\n\nprint('train shape is', train.shape )\ntrain.head()","c75059de":"train_labels_group_count_dict  = train.groupby('label_class').image.count().to_dict()\ntrain_labels_group_dict        = train.groupby('label_class').image.agg('unique').to_dict()\n","479c8448":"train['image_group'] =  train.label_class.map(train_labels_group_dict)\ntrain['image_group_count'] =  train.label_class.map(train_labels_group_count_dict)\n\ntrain['sub_folder'] = train['class_name_temp_fmt'] + train['image_group_count'].astype('str') + '_' + train['label_class'].astype('str') + '_'+ train['label_group'].astype('str')\n\nprint('train shape is', train.shape )\ntrain.head()","9d5141db":"train.drop('class_name_temp_fmt',axis=1,inplace=True)\n\nprint('train shape is', train.shape )\ntrain.head()","6da1ad38":"plt.figure(figsize=(25,25))\nfor i in range(20):\n    plt.subplot(5,4,i+1)\n    plt.xticks([])\n    plt.yticks([])\n    plt.grid(False)\n    img = image.load_img(train_images_folder+'\/'+train['image'][i])\n    plt.imshow(img, cmap=plt.cm.binary)\n    plt.xlabel(train['sub_folder'][i])\nplt.show()","5a640953":"# Parent Directory path\nparent_dir          = \"\/kaggle\/working\"\nmain_data_directory = \"train_lables\"\n\n# Path\npath = os.path.join(parent_dir, main_data_directory)\n\n# Create the directory\nos.mkdir(path)\n\ntarget_data_dir = path\n","45a7dea7":"#create sub folders and copy image files from source (\/train_images) to target (\/kaggle\/working\/train_lables)\n\nclass_sub_dir_unique = []\n\nfor i in train[['sub_folder','image_group','image_group_count']][train.image_group_count>0].sub_folder:\n    #copy the unique classes and image files\n    if i not in class_sub_dir_unique:\n        class_sub_dir_unique.append(i)\n        path = os.path.join(target_data_dir, i)\n        #if os.path.exists(path) == False:\n        os.mkdir(path)\n        for k,j in enumerate((train.image_group[train.sub_folder==i].iloc[:1]).to_list()[0]):\n            img_src = train_images_folder + '\/' +j\n            #if os.path.exists(img_src) == False:\n            shutil.copy(img_src, path)\n","b20eca66":"data_dir = \"\/kaggle\/working\/train_lables\"\n\ndata_dir = pathlib.Path(data_dir)\n\nimage_count = len(list(data_dir.glob('*\/*.jpg')))\nprint(image_count)","bfe68a10":"class_5_18_2098400894 = list(data_dir.glob('class_5_18_2098400894\/*'))\nPIL.Image.open(str(class_5_18_2098400894[0]))","3f8462cb":"PIL.Image.open(str(class_5_18_2098400894[1]))","5b0b429f":"batch_size = 32\nimg_height = 224\nimg_width = 224","27182b77":"train_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  data_dir,\n  validation_split=0.2,\n  subset=\"training\",\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)\n\nval_ds = tf.keras.preprocessing.image_dataset_from_directory(\n  data_dir,\n  validation_split=0.2,\n  subset=\"validation\",\n  seed=123,\n  image_size=(img_height, img_width),\n  batch_size=batch_size)","5f7290c4":"class_names = train_ds.class_names\nprint(class_names)","a3b56ba3":"#Visualize the data\n\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(10, 10))\nfor images, labels in train_ds.take(1):\n  for i in range(9):\n    ax = plt.subplot(3, 3, i + 1)\n    plt.imshow(images[i].numpy().astype(\"uint8\"))\n    plt.title(class_names[labels[i]])\n    plt.axis(\"off\")","61f505e6":"**Next**, We will create the new train**['sub_folder'] **column.\n\nsub_folder **data format **: **'class_5_18_2098400894'**\n\nHow to read **'sub_folder'** data format ?\n\n**1-6 Positions**                        -  'class_'   (default)  - (train['class_name_temp_fmt'])\n**Next Position (image_group_count)**    -  '1' or '21 (variable) -(train['image_group_count'].astype('str'))\n**Next Position **                       -  '_'\n**Next Position ('label_class')**        -  '0' or '1'...'11013'    train['label_class'].astype('str')\n**Next Position**                        -  '_'\n**Next Position ('label_group')**        -  label_group id provided by the shopee dataset ","f3b74fd3":"**Next, ** \n\nWe will create the follwoing data directory staructure, \n\n                  1. -- parent dirctory   ('..\/input\/shopee-product-matching\/)\n                   1.1 -- Main_data_directory (\/train_labels)\n                     1.1.1 -- Sub directory   (**name format **: **'class_5_18_2098400894'**)\n                        1.1.1.1 -- similar image files (Ground Truth)** (>1 images)"}}