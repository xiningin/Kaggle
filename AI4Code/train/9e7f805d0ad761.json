{"cell_type":{"05c67977":"code","c4083757":"code","61e36661":"code","ec723550":"code","9daf3c91":"code","112e9177":"code","44ddc8d0":"code","c97ef61f":"code","6d42c2c3":"code","65a5b554":"code","2b639402":"code","c01399c3":"code","2bb62d50":"code","83cfc42d":"code","c41e22f3":"code","903aaa63":"code","2019d788":"code","fe4800bd":"code","2de79253":"code","4fea05ec":"code","a0f94c4f":"code","93052934":"code","2c6694c9":"code","cc84f47e":"code","45ee162f":"code","73ad110a":"code","a9d73c87":"code","4ac6bdfa":"code","c07a526e":"code","afe3034d":"code","b6a9a1e4":"code","1f690a7d":"markdown"},"source":{"05c67977":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport warnings \nwarnings.filterwarnings(\"ignore\")\nimport seaborn as sns\n\n# to see all the comands result in a single kernal \n%load_ext autoreload\n%autoreload 2\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c4083757":"train = pd.read_csv(\"\/kaggle\/input\/crosssell\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/crosssell\/test.csv\")","61e36661":"train.shape\ntest.shape","ec723550":"train.info()\ntest.info()","9daf3c91":"df = pd.concat([train,test])","112e9177":"df.head()","44ddc8d0":"df.shape","c97ef61f":"df.isnull().sum()","6d42c2c3":"#converting object to int type\ndf['Vehicle_Age']=df['Vehicle_Age'].replace({'< 1 Year':0,'1-2 Year':1,'> 2 Years':2})\ndf['Gender']=df['Gender'].replace({'Male':1,'Female':0})\ndf['Vehicle_Damage']=df['Vehicle_Damage'].replace({'Yes':1,'No':0})\n","65a5b554":"df.head(10)","2b639402":"df.columns","c01399c3":"df['Age_Mean'] = df.groupby(['Region_Code'])['Age'].mean()","2bb62d50":"df.groupby('Age')['Previously_Insured'].count()","83cfc42d":"df['Age'].describe()","c41e22f3":"# #df['Age_Band'] = df['Age'].replace({'Yes':1,'No':0})\n# ### handling age columns and creating brackets\n\n# df.loc[(df['Age']<=25),'Age'] = 0\n# df.loc[(df['Age']>25) & (df['Age']<=36) ,'Age'] = 1\n# df.loc[(df['Age']>36) & (df['Age']<=50) ,'Age'] = 2\n# df.loc[(df['Age']>50),'Age'] = 3\ndf['Vintage'] = df['Vintage'] \/ 365","903aaa63":"df.info()","2019d788":"col1 = ['Gender', 'Age', 'Driving_License', 'Region_Code', 'Previously_Insured', 'Vehicle_Age', 'Vehicle_Damage', 'Annual_Premium', 'Policy_Sales_Channel', 'Vintage']","fe4800bd":"cat_cols = ['Gender','Driving_License', 'Region_Code', 'Previously_Insured', 'Vehicle_Age', 'Vehicle_Damage','Policy_Sales_Channel']","2de79253":"#df.drop('Age',axis=1,inplace=True)","4fea05ec":"# changing data type because cat_feature in catboost cannot be float\ndf['Region_Code']=df['Region_Code'].astype(int)\n\ndf['Policy_Sales_Channel']=df['Policy_Sales_Channel'].astype(int)\n","a0f94c4f":"df.head()","93052934":"train = df[:381109]\ntest = df[381109:]","2c6694c9":"test = test.drop('Response',axis=1)","cc84f47e":"X = train[col1]\ny = train['Response']","45ee162f":"# lets start model building\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=.25,random_state=150303,stratify=y,shuffle=True)","73ad110a":"!pip install catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import accuracy_score\ncatb = CatBoostClassifier(boosting_type='Ordered',max_depth=8)\ncatb = catb.fit(X_train,y_train,cat_features = cat_cols,eval_set = (X_test,y_test),plot=True,early_stopping_rounds=50,verbose=100)\ny_cat = catb.predict(X_test)\npred_cat= catb.predict_proba(test[col1])[:, 1]   ##predict on test data\nprobs_cat_train = catb.predict_proba(X_train)[:,1]\nprobs_cat_test = catb.predict_proba(X_test)[:,1]\nroc_auc_score(y_train,probs_cat_train)\nroc_auc_score(y_test,probs_cat_test)","a9d73c87":"feat_importances = pd.Series(catb.feature_importances_, index=X_train.columns)\nfeat_importances.nlargest(15).plot(kind='barh')\n#feat_importances.nsmallest(20).plot(kind='barh')\nplt.show()","4ac6bdfa":"# Training on full train data\nfrom lightgbm import LGBMClassifier\n\nLGB=LGBMClassifier(boosting_type='gbdt', max_depth=8, learning_rate=0.01, objective='binary',\n                  reg_lambda=8, n_jobs=-1, n_estimators=1243,reg_alpha=2.2)\n                 \n\nmodel = LGB.fit(X,y)\n\npred_lgb = model.predict_proba(test[col1])[:, 1]\n","c07a526e":"# Training on full train data\nfrom xgboost import XGBClassifier\n\n#XGB=XGBClassifier(n_estimators=1243,learning_rate=0.01,reg_lambda=8)\n\nXGB = XGBClassifier(learning_rate=0.01, max_depth=8,\n                                                          missing=None, n_estimators=1450, nthread=15,\n                                                           objective='binary:logistic', reg_alpha=2.2, reg_lambda=8,\n                                                      scale_pos_weight=2.5,  silent=True, subsample=.7)   #.7 best\n                 \n## estimators 1500 is best till now with these parms\nmodel_xgb = XGB.fit(X,y)\n\npred_xgb = model_xgb.predict_proba(test[col1])[:, 1]","afe3034d":"mix_pred = (pred_cat*0.7 + pred_lgb*0.1 + pred_xgb*0.2)\n#mix_pred = (pred_cat*0.8 + pred_xgb*0.2)\n#mix_pred = (pred_xgb*1)","b6a9a1e4":"sample_submmission = pd.read_csv(\"\/kaggle\/input\/crosssell\/sample_submission.csv\")\nsample_submmission['Response']=mix_pred\nsample_submmission.to_csv(\"cat.csv\", index = False)","1f690a7d":"**Problem statement Analytics Vidhya-**\n\nYour client is an Insurance company that has provided Health Insurance to its customers now they need your help in building a model to predict whether the policyholders (customers) from past year will also be interested in Vehicle Insurance provided by the company.\n\nAn insurance policy is an arrangement by which a company undertakes to provide a guarantee of compensation for specified loss, damage, illness, or death in return for the payment of a specified premium. A premium is a sum of money that the customer needs to pay regularly to an insurance company for this guarantee.\n\nFor example, you may pay a premium of Rs. 5000 each year for a health insurance cover of Rs. 200,000\/- so that if, God forbid, you fall ill and need to be hospitalised in that year, the insurance provider company will bear the cost of hospitalisation etc. for upto Rs. 200,000. Now if you are wondering how can company bear such high hospitalisation cost when it charges a premium of only Rs. 5000\/-, that is where the concept of probabilities comes in picture. For example, like you, there may be 100 customers who would be paying a premium of Rs. 5000 every year, but only a few of them (say 2-3) would get hospitalised that year and not everyone. This way everyone shares the risk of everyone else.\n\nJust like medical insurance, there is vehicle insurance where every year customer needs to pay a premium of certain amount to insurance provider company so that in case of unfortunate accident by the vehicle, the insurance provider company will provide a compensation (called \u2018sum assured\u2019) to the customer.\n\nBuilding a model to predict whether a customer would be interested in Vehicle Insurance is extremely helpful for the company because it can then accordingly plan its communication strategy to reach out to those customers and optimise its business model and revenue. \n\nNow, in order to predict, whether the customer would be interested in Vehicle insurance, you have information about demographics (gender, age, region code type), Vehicles (Vehicle Age, Damage), Policy (Premium, sourcing channel) etc.\n\nhttps:\/\/datahack.analyticsvidhya.com\/contest\/janatahack-cross-sell-prediction\/#LeaderBoard\n\n**Private Leader Board Rank: 25**\n**Public Leader Board Rank: 27**\n\nReferred Jassi Bro's Notebook and improved it further    \nhttps:\/\/www.kaggle.com\/jassican\/stater-notebook-cross-sell-prediction"}}