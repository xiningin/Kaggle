{"cell_type":{"3ef05dd5":"code","f877366d":"code","221e50cb":"code","341e7290":"code","6006a1a8":"code","eccf4bdd":"code","63833ae9":"code","ef5fface":"code","720e1dbd":"code","f1fe2b2e":"code","17763fb9":"code","f8cef0b4":"code","a9003ddb":"code","147bc8f1":"code","7d421b8b":"code","d2362af7":"code","5c2029d4":"code","bf68e378":"code","90da7407":"code","f2c7bd1e":"code","9f2846e5":"code","e56e9d9e":"code","16badf0c":"markdown","d208ed1f":"markdown","ea53ebb6":"markdown","b238efe4":"markdown","c30f41c9":"markdown"},"source":{"3ef05dd5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f877366d":"import numpy.fft as fft \nimport numpy as np\nfrom PIL import Image\nimport matplotlib.pyplot as plt","221e50cb":"img = Image.open(\"\/\/kaggle\/input\/squirrelimagesmall\/squirrel-small.jpg\")","341e7290":"# basic image in RGB\nimg","6006a1a8":"type(img)","eccf4bdd":"np_img = np.array(img)\nnp_img","63833ae9":"np_img.shape","ef5fface":"f = fft.fft2(np.asarray(img))\nImage.fromarray(f, \"RGB\")","720e1dbd":"f = fft.fft2(np.asarray(img))\nf[0:400,8:427,:]=0\nImage.fromarray(f, \"RGB\")","f1fe2b2e":"f.shape","17763fb9":"f = fft.fft2(np.asarray(img))\nf[0:427,0:640,2:]=0\ndisplay(Image.fromarray(f, \"RGB\"))\ndisplay(Image.fromarray(fft.ifft2(f).astype(dtype=np.uint8),\"RGB\"))","f8cef0b4":"f = fft.fft2(np.asarray(img))\nf[0:427,0:640,:1]=0\ndisplay(Image.fromarray(f, \"RGB\"))\ndisplay(Image.fromarray(fft.ifft2(f).astype(dtype=np.uint8),\"RGB\"))","a9003ddb":"f = fft.fft2(np.asarray(img))\nf[10:300,20:540,:1]=600000\n\ndisplay(Image.fromarray(f, \"RGB\"))\ndisplay(Image.fromarray(fft.ifft2(f).astype(dtype=np.uint8),\"RGB\"))","147bc8f1":"f = fft.fft2(np.asarray(img))\nf[0:400,8:427,:]=0\n\ndisplay(Image.fromarray(f, \"RGB\"))\ndisplay(Image.fromarray(fft.ifft2(f).astype(dtype=np.uint8),\"RGB\"))","7d421b8b":"f = fft.fft2(np.asarray(img))\nf[0:427,1:640,:2]=0\ndisplay(Image.fromarray(f, \"RGB\"))\ndisplay(Image.fromarray(fft.ifft2(f).astype(dtype=np.uint8),\"RGB\"))","d2362af7":"def draw(f):\n    image = f.copy()\n    x,y,z = f.shape\n    display(Image.fromarray(image, \"RGB\"))\n    image[:x\/\/5,:y\/\/5,:]=100\n    image[x\/\/5:,:y\/\/5,1:]=100\n    display(Image.fromarray(image, \"RGB\"))\n    display(Image.fromarray(fft.ifft2(image).astype(dtype=np.uint8),\"RGB\"))\n","5c2029d4":"def inverse(f):\n    image = f.copy()\n    display(Image.fromarray(image, \"RGB\"))\n    image = -image\n    display(Image.fromarray(image, \"RGB\"))\n    display(Image.fromarray(fft.ifft2(image).astype(dtype=np.uint8),\"RGB\"))","bf68e378":"path1 = \"\/kaggle\/input\/bearimage\/kids-4967808_640.jpg\"\nimage_bear = Image.open(path1)","90da7407":"f_bear = fft.fft2(np.asarray(image_bear))\n\n# display fft and as image (Ort vs Frequenz)\ndraw(f_bear)","f2c7bd1e":"# display inverse of bear\ninverse(f_bear)","9f2846e5":"path2 = \"\/\/kaggle\/input\/squirrelimagesmall\/squirrel-small.jpg\"\nimage_squirrel = Image.open(path2)\n\nf_squirrel = fft.fft2(np.asarray(image_squirrel))\n\n# display fft and as image (Ort vs Frequenz)\ndraw(f_squirrel)","e56e9d9e":"# display inverse of bear\ninverse(f_squirrel)","16badf0c":"## Load Images","d208ed1f":"## Testing FFT","ea53ebb6":"## Execute Examples","b238efe4":"## Inverse of FFT","c30f41c9":"## FFT2 Full Vis"}}