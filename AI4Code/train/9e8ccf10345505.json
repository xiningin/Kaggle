{"cell_type":{"20c141c6":"code","88a46576":"code","546ea57e":"code","5b58d4a9":"code","cfd29c20":"code","87486a27":"code","dd4b5095":"code","9d9e8437":"code","55297112":"code","e0b96cc9":"code","d485173a":"code","ad1e4a0c":"code","ccb73610":"code","a01b1ca3":"code","52b70dcf":"code","5a237ce1":"code","6ca18796":"code","108d1c50":"code","ca9af7c8":"code","7b33779d":"code","3043849f":"code","b6e0f821":"code","37568c50":"code","401db6bf":"code","d8cf3286":"code","f054d4df":"code","f44404a9":"code","bff6d81e":"code","7481665f":"code","175370fc":"code","09575615":"code","91429aa6":"code","ab507adf":"code","dc07ba9b":"code","24d624ba":"code","aaa11de6":"code","00db7857":"code","c123fbb8":"code","af69d0f7":"code","f508c2b6":"code","fb060ae3":"code","68af497a":"code","5500a6c1":"code","ef8b79b2":"code","9feeb50b":"code","cdad4579":"code","0b2ecb79":"code","6a402d0e":"code","4db32994":"code","d3ddf5e9":"code","0e8098be":"code","83f31a1b":"code","54451641":"code","e2760cff":"code","5554e8ee":"code","8d7ac327":"code","a4bb359f":"code","aa4a2797":"code","a0bc1bde":"code","514cad86":"code","0260577d":"code","516b1566":"code","7277e71c":"code","51c40f26":"code","b04e0c2d":"code","f46b416d":"code","aa4da107":"code","65f05150":"code","30de1c04":"code","1f2085f6":"code","bbd9792f":"code","c22f9b3b":"code","79682a73":"code","0cb63525":"code","846ae4a5":"code","f76eef66":"code","cf7a5754":"code","bb27a5b4":"code","70f08781":"code","35e77e5c":"code","10d4a3ad":"code","7d0edea2":"code","be110e16":"code","f46d9c81":"code","d142beab":"code","6383bf4c":"code","16409f51":"code","4067b3ab":"code","7b4e752b":"code","f955a2a5":"code","0f7ddeb6":"code","cd0fc9eb":"code","5cad8c6a":"code","2f9640e2":"code","bd6c9419":"code","34a46f38":"code","f1d55aa1":"code","74b64167":"code","7dfac95b":"code","4e653cf5":"code","807b8adf":"code","32e12ab7":"markdown","90aac4f3":"markdown","1cd24455":"markdown","ed94c666":"markdown","24fa876a":"markdown","9980caad":"markdown","ed799d6e":"markdown","37f09ede":"markdown","a06d8d4f":"markdown","a475f562":"markdown","75894520":"markdown","c3165e7a":"markdown","9dc8b01d":"markdown","01376be2":"markdown","0c3a6ba0":"markdown","62cb2d72":"markdown","211b2538":"markdown","04ad2335":"markdown","fdc8ccf3":"markdown","8f0d3a1d":"markdown","eca63902":"markdown","d27b8eb9":"markdown","e2376ce6":"markdown","76aaf488":"markdown","d339ec7e":"markdown","2ee24ae1":"markdown","6b347ef1":"markdown","e75a9b0a":"markdown","459bee39":"markdown","980ce2af":"markdown","189510a0":"markdown"},"source":{"20c141c6":"#Let's Import the Packages...\n%matplotlib inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","88a46576":"import warnings\nwarnings.filterwarnings('ignore')","546ea57e":"#Let's Read csv file Train!!!\nBike_T= pd.read_csv('..\/input\/bike-sharing-demand\/train.csv')","5b58d4a9":"## EDA and Prepare Data","cfd29c20":"type(Bike_T) ","87486a27":"# See head of the dataset\nBike_T.head()","dd4b5095":"Bike_T.index","9d9e8437":"Bike_T.info()","55297112":"Bike_T.shape","e0b96cc9":"Bike_T.columns ","d485173a":"Bike_T.dtypes","ad1e4a0c":"# Check for missing values\nBike_T.isnull().sum()","ccb73610":"# Identifying the unique number of values in the dataset\nBike_T.nunique()","a01b1ca3":"# Viewing the data statistics\nBike_T.describe()","52b70dcf":"# Finding out the correlation between the features\ncorr = Bike_T.corr()\ncorr.shape","5a237ce1":"# Plotting the heatmap of correlation between features\nplt.figure(figsize=(25,25))\nsns.heatmap(corr, cbar=True, square= True, fmt='.1f', annot=True, annot_kws={'size':15}, cmap='YlGnBu')","6ca18796":"corr","108d1c50":"pd.crosstab(Bike_T.temp,Bike_T.season,normalize = \"index\" )","ca9af7c8":"pd.crosstab(Bike_T.holiday,Bike_T.season,normalize = \"index\" )","7b33779d":"pd.crosstab(Bike_T.workingday,Bike_T.season,normalize = \"index\" )","3043849f":"pd.crosstab(Bike_T.weather,Bike_T.season,normalize = \"index\" )","b6e0f821":"print('seaborn: %s' % sns.__version__)","37568c50":"# number of total rentals\nsns.displot(Bike_T, x=\"count\",kind=\"kde\") ","401db6bf":"#season - 1 = spring, 2 = summer, 3 = fall, 4 = winter\nsns.displot(Bike_T, x=\"count\",hue ='season',kind ='kde', fill=\"True\")","d8cf3286":"#weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy \n#          2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist \n#          3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds \n#          4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog\nsns.displot(Bike_T, x=\"count\",hue ='weather',kind ='kde', fill=\"True\")","f054d4df":"#holiday - whether the day is considered a holiday\nsns.displot(Bike_T, x=\"count\",hue ='holiday',kind ='kde')","f44404a9":"#workingday - whether the day is neither a weekend nor holiday\nsns.displot(Bike_T, x=\"count\",hue ='workingday',kind ='kde')","bff6d81e":"sns.catplot(x=\"weather\", y=\"count\",kind=\"swarm\", data=Bike_T)","7481665f":"sns.catplot(x=\"season\", y=\"count\",hue ='weather',kind=\"violin\", data=Bike_T)","175370fc":"# Strong relationship \nsns.relplot(x=\"count\", y=\"registered\", data=Bike_T)","09575615":"# Strong relationship \nsns.relplot(x=\"count\", y=\"casual\", data=Bike_T)","91429aa6":"#Good relationship\nsns.relplot(x=\"count\", y=\"atemp\", data=Bike_T)","ab507adf":"#Poor relationship\nsns.relplot(x=\"count\", y=\"humidity\", data=Bike_T)","dc07ba9b":"#Poor relationship\nsns.relplot(x=\"count\", y=\"windspeed\", data=Bike_T)","24d624ba":"sns.set_theme(style=\"darkgrid\")\nsns.relplot(x=\"count\", y=\"registered\", hue=\"season\", style=\"season\", data=Bike_T)","aaa11de6":"sns.relplot(x=\"count\", y=\"registered\", hue=\"temp\", style=\"season\",data=Bike_T)","00db7857":"sns.relplot(x=\"count\", y=\"registered\", hue=\"windspeed\", col=\"season\",data=Bike_T)","c123fbb8":"sns.regplot(x=\"count\", y=\"registered\",data=Bike_T,marker=\"+\",scatter_kws={\"color\": \"g\"}, line_kws={\"color\": \"red\"})","af69d0f7":"sns.regplot(x=\"count\", y=\"casual\", data=Bike_T,marker=\"*\",scatter_kws={\"color\": \"g\"}, line_kws={\"color\": \"red\"})","f508c2b6":"sns.regplot(x=\"count\", y=\"atemp\", data=Bike_T,marker=\"*\",scatter_kws={\"color\": \"g\"}, line_kws={\"color\": \"red\"})","fb060ae3":"sns.regplot(x=\"count\", y=\"windspeed\", data=Bike_T,marker=\"*\",scatter_kws={\"color\": \"b\"}, line_kws={\"color\": \"red\"})","68af497a":"sns.regplot(x=\"count\", y=\"season\", data=Bike_T,marker=\"*\",scatter_kws={\"color\": \"y\"}, line_kws={\"color\": \"red\"})","5500a6c1":"g = sns.FacetGrid(Bike_T, col=\"season\", height=3.5, aspect=.65)\ng.map(sns.histplot, \"count\")","ef8b79b2":"## Simple Linear Regression (SLR) by registered (Strong relationship )\nX = Bike_T[['registered']]\ny = Bike_T['count']","9feeb50b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size =0.25, random_state = 4)","cdad4579":"# Import library for Linear Regression\nfrom sklearn.linear_model import LinearRegression\n\n# Create a Linear regressor\nSimple_LR = LinearRegression()\n\n# Train the model using the training sets \n\nSimple_LR.fit(X_train, y_train)","0b2ecb79":"# y = ax+b this is            a: y= 1.1x +b\nSimple_LR.coef_ ","6a402d0e":"# y= ax + b :                 y =1.1x+10.44\nSimple_LR.intercept_","4db32994":"y_pred=Simple_LR.predict(X_test)","d3ddf5e9":"X_test","0e8098be":"y_test","83f31a1b":"y_pred","54451641":"sns.histplot(y_test-y_pred)","e2760cff":"from sklearn import metrics\nprint('R^2:',metrics.r2_score(y_test, y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","5554e8ee":"# Visualizing the differences between actual count and predicted count\nplt.scatter(y_test, y_pred , color = 'r')\nplt.xlabel(\"count\")\nplt.ylabel(\"Predicted count\")\nplt.title(\"Prices vs Predicted count\")\nplt.show()","8d7ac327":"## Simple Linear Regression (SLR) by atemp (good relationship )\nX = Bike_T[['atemp']]\ny = Bike_T['count']","a4bb359f":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size =0.25, random_state = 4)\n# Import library for Linear Regression\nfrom sklearn.linear_model import LinearRegression\n\n# Create a Linear regressor\nSimple_LR_atemp = LinearRegression()\n\n# Train the model using the training sets \n\nSimple_LR_atemp.fit(X_train, y_train)","aa4a2797":"# y = ax+b this is            a: y= 8.2x +b\nSimple_LR_atemp.coef_","a0bc1bde":"#                          a: y= 8.2x -2.9\nSimple_LR_atemp.intercept_  ","514cad86":"y_pred=Simple_LR_atemp.predict(X_test)","0260577d":"sns.histplot(y_test-y_pred)","516b1566":"from sklearn import metrics\nprint('R^2:',metrics.r2_score(y_test, y_pred))\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","7277e71c":"plt.scatter(y_test, y_pred ,marker = '*', color = 'r')\nplt.xlabel(\"count\")\nplt.ylabel(\"Predicted count\")\nplt.title(\"Prices vs Predicted count\")\nplt.show()","51c40f26":"data_test = pd.read_csv('..\/input\/bike-sharing-demand\/test.csv')","b04e0c2d":"X_test =data_test[[\"atemp\"]]","f46b416d":"X_test","aa4da107":"y_pred=Simple_LR_atemp.predict(X_test)","65f05150":"y_pred\ntype(y_pred)","30de1c04":"y_pred = y_pred.astype(int) # convert float to int\ny_pred ","1f2085f6":"count  = pd.DataFrame(y_pred,columns=['count'])\ncount[count < 0] = 0\ncount","bbd9792f":"csv_input = pd.read_csv('..\/input\/bike-sharing-demand\/sampleSubmission.csv')\ncsv_input['count'] = count\ncsv_input.to_csv('Simple_LR.csv', index=False)","c22f9b3b":"Bike_T = pd.read_csv('..\/input\/bike-sharing-demand\/train.csv')\nX = Bike_T.drop([\"count\",\"datetime\",\"casual\",\"registered\"],axis = 1)\ny = Bike_T[\"count\"]\ntype(y)","79682a73":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.25, random_state = 4)","0cb63525":"from sklearn.linear_model import LinearRegression\nMulti_LR = LinearRegression()\nMulti_LR.fit(X_train, y_train)","846ae4a5":"Multi_LR.intercept_","f76eef66":"Multi_LR.coef_","cf7a5754":"coeffcients = pd.DataFrame([X_train.columns,Multi_LR.coef_]).T\ncoeffcients = coeffcients.rename(columns={0: 'Attribute', 1: 'Coefficients'})\ncoeffcients","bb27a5b4":"y_pred = Multi_LR.predict(X_test)","70f08781":"print(\"R^2 : \"  ,metrics.r2_score(y_test,y_pred))\nprint(\"MSE  :\"  ,metrics.mean_squared_error(y_test,y_pred))\nprint(\"MAE : \"  ,metrics.mean_absolute_error(y_test,y_pred))\nprint(\"RMSE : \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","35e77e5c":"# Visualizing the differences between actual acount and predicted acount\nplt.scatter(y_test, y_pred)\nplt.xlabel(\"acount\")\nplt.ylabel(\"Predicted acount\")\nplt.title(\"acount vs Predicted acount\")\nplt.show()","10d4a3ad":"sns.displot(y_test-y_pred)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","7d0edea2":"data_test = pd.read_csv('..\/input\/bike-sharing-demand\/test.csv')","be110e16":"X_test =data_test[[\"season\",\"holiday\",\"workingday\",\"weather\",\"temp\",\"atemp\",\"humidity\",\"windspeed\"]]\nX_test\n","f46d9c81":"y_pred=Multi_LR.predict(X_test)\ny_pred","d142beab":"y_pred = y_pred.astype(int) # convert float to int","6383bf4c":"count = pd.DataFrame(y_pred, columns = ['count'])\ncount[count < 0] = 0\n","16409f51":"csv_input = pd.read_csv('..\/input\/bike-sharing-demand\/sampleSubmission.csv')\ncsv_input['count'] = count\ncsv_input.to_csv('Multi_LR.csv', index=False)","4067b3ab":"Bike_T = pd.read_csv('..\/input\/bike-sharing-demand\/train.csv')\nX = Bike_T.drop([\"count\",\"datetime\",\"casual\",\"registered\"],axis = 1)\ny = Bike_T[\"count\"]\ntype(X)\ntype(y)","7b4e752b":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.25, random_state = 4)","f955a2a5":"from sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression","0f7ddeb6":"\"Creates a polynomial regression model for the given degree\"\npoly_features = PolynomialFeatures(degree=2)\n   \n# transform the features to higher degree features.\nX_train_biquadratic = poly_features.fit_transform(X_train)\n   \n# fit the transformed features to Linear Regression\nbiquadratic = LinearRegression()\n\nbiquadratic.fit(X_train_biquadratic, y_train)\n     \n# predicting on training data-set\ny_train_predicted = biquadratic.predict(X_train_biquadratic)\n   \n# predicting on test data-set\ny_test_predicted = biquadratic.predict(poly_features.fit_transform(X_test))\nprint(y_test_predicted)","cd0fc9eb":"metrics.r2_score(y_train, y_train_predicted)","5cad8c6a":"metrics.r2_score(y_test, y_test_predicted)","2f9640e2":"# Visualizing the differences between actual acount and predicted acount\nplt.scatter(y_test, y_test_predicted)\nplt.xlabel(\"acount\")\nplt.ylabel(\"Predicted acount\")\nplt.title(\"acount vs Predicted acount\")\nplt.show()","bd6c9419":"sns.displot(y_test-y_test_predicted)\nplt.title(\"Histogram of Residuals\")\nplt.xlabel(\"Residuals\")\nplt.ylabel(\"Frequency\")\nplt.show()","34a46f38":"test_data = pd.read_csv('..\/input\/bike-sharing-demand\/test.csv')","f1d55aa1":"X_test = data_test[[\"season\",\"holiday\",\"workingday\",\"weather\",\"temp\",\"atemp\",\"humidity\",\"windspeed\"]]\ntype(X_test)","74b64167":"y_test = biquadratic.predict(poly_features.fit_transform(X_test))","7dfac95b":"y_test = y_test.astype(int)","4e653cf5":"count = pd.DataFrame(y_test,columns = ['count'])\ncount[count < 0] = 0\n","807b8adf":"input = pd.read_csv('..\/input\/bike-sharing-demand\/sampleSubmission.csv')\ncsv_input['count'] = count\ncsv_input.to_csv('Poly_LR.csv', index=False)\n","32e12ab7":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Visualizing regression models <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> \n<\/div>","90aac4f3":"# Polynomial regression ","1cd24455":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Visualizing statistical relationships <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> \n<\/div>","ed94c666":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Importing the libraries <\/span><\/strong>\n\n<\/div>","24fa876a":"## Load ","9980caad":"# Visualizing *regression* models","ed799d6e":"## Evaluation this Multi_RL   --> to test.csv","37f09ede":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Evaluation  <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">  \n<\/div>","a06d8d4f":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Load data <\/span><\/strong>\n \n<\/div>","a475f562":"## Strorytelling - Visualization","75894520":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Train your Model <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> strong regression\n<\/div>","c3165e7a":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Polynomial regression  <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">    \n<\/div>","9dc8b01d":"## Model (SLR) Evaluation","01376be2":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Train your Model <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> Model linear_ regression  by atemp(this good relationship)\n<\/div>","0c3a6ba0":"## Multiple Linear Regression (MLR)","62cb2d72":"## Train your model (Regression)","211b2538":"## Test Result","04ad2335":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Strorytelling - Visualization <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">  \n<\/div>","fdc8ccf3":"## Evaluation this SimpleRL_atemp   --> to test.csv","8f0d3a1d":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Evaluation  <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">  ","eca63902":"## Result save in Simple_LR.csv","d27b8eb9":"## Evaluation this Multi_RL   --> to test.csv","e2376ce6":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Multi Linear Regression  <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">   \n<\/div>","76aaf488":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Prepare Data and EDA <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> \n<\/div>","d339ec7e":"# Visualizing *statistical* relationships","2ee24ae1":"<img src = \"https:\/\/storage.googleapis.com\/kaggle-competitions\/kaggle\/3948\/media\/bikes.png\" width=80%>","6b347ef1":"## Model(MLR) Evaluation","e75a9b0a":"<div class=\"alert alert-block alert-success\">\n    <h1 align=\"center\">Machine Learning in Python<\/h1>\n    <h3 align=\"center\">Bike Sharing<\/h3>\n<\/div>","459bee39":"<div class=\"alert alert-block alert-info\" dir=\"ltr\" style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\">Evaluation  <\/span><\/strong>\n<p style=\"text-align: center;\"><strong><span style=\"font-family: courier new, courier; font-size: 18pt;\"> \n<\/div>","980ce2af":"## Data Preprocessing","189510a0":"## Importing the libraries"}}