{"cell_type":{"a2b660d0":"code","e9dffb7e":"code","4aa0775e":"code","fd7f7094":"code","54295dfd":"code","22f1e0f9":"code","94bf4fe4":"code","e047d3e9":"code","d6d2e3d3":"code","843b5899":"code","d3e409ca":"code","12dd94b1":"code","9f02260b":"code","bdb62bee":"code","b3e668b3":"code","2b59e012":"code","19926375":"code","7fe54eb2":"code","9307e2ed":"code","4e56b5e0":"code","8ee09085":"code","165f8820":"code","f8c04dbf":"code","fcf8be73":"code","9d45fae2":"code","5d27c8f3":"code","3a5f187d":"code","3c8f551e":"code","108c54a8":"code","08ea3e44":"code","e7fab61b":"code","94747180":"code","d9e90be0":"code","5443dd7b":"code","e25f47f8":"code","ee4b2210":"code","9604ffdd":"code","1d7b862c":"code","69816d7d":"code","a0456087":"code","281f4f21":"code","94eb3260":"code","779a466d":"code","0f651ec1":"code","b83e2e93":"code","285cf631":"code","4d730cfd":"code","39c15565":"code","fde8e154":"code","7a36cb73":"code","246e35b4":"code","eeb39add":"code","2c1f9e44":"code","a3965241":"code","17d218c2":"code","24f0e462":"code","331b1abc":"code","992b5638":"code","03a6e883":"code","df37bf3c":"code","86a07346":"code","9ef0618e":"code","6c865086":"code","0f57fa4a":"code","2a0b8d37":"code","0fdf668b":"code","a09b7e0e":"code","de87b970":"code","ace83586":"code","cce423eb":"code","c5c0f021":"code","dd28478e":"code","1a0bceaf":"code","027db2fd":"code","3b35f457":"code","16a27981":"code","bb6e0505":"code","158cb86f":"code","f0fa324c":"code","7b0227e6":"code","1385e3c3":"code","7f2bc1db":"code","f5197aeb":"code","4d94c1bd":"code","f888af73":"code","b391f6aa":"code","c2e43ecb":"code","9cf00bcd":"code","60bc474c":"code","de597b63":"code","46127a29":"code","7584c058":"code","c4f2d8d6":"code","83b5a4bc":"code","8fb42ccf":"code","9dac4c75":"code","d8b4600e":"code","f8550dc1":"markdown","2d3729d2":"markdown","42810992":"markdown","bfe5688e":"markdown","9bb20717":"markdown","c9398513":"markdown","98aa2e37":"markdown","3aa1427d":"markdown","cede2757":"markdown","2113e5ca":"markdown","57b38d44":"markdown","b0c3a48d":"markdown","398a462b":"markdown","6d74158a":"markdown","577045cc":"markdown","15b6f040":"markdown","2a71eea3":"markdown","ae4c1ec7":"markdown","2a3b767c":"markdown","c64511b0":"markdown","346cb047":"markdown","fcf1f066":"markdown","44336ffe":"markdown","18cf3b9e":"markdown","cec30860":"markdown","e8747918":"markdown","a07f36ca":"markdown","be4ed4f8":"markdown","a2a36b94":"markdown","c40ca9dc":"markdown","4939ceb2":"markdown","f19a9519":"markdown"},"source":{"a2b660d0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\n%matplotlib inline","e9dffb7e":"train = pd.read_csv('..\/input\/train.csv')\ntest = pd.read_csv('..\/input\/test.csv')","4aa0775e":"train.head(2)","fd7f7094":"test.head(2)","54295dfd":"data = train.copy()","22f1e0f9":"data.head()","94bf4fe4":"data.isnull().sum()","e047d3e9":"sns.barplot(x='Sex',y='Survived',data=data,hue='Pclass')","d6d2e3d3":"data['FmemOnboard'] = data['SibSp'] + data['Parch']","843b5899":"sns.barplot(x='FmemOnboard',y='Survived',data=data)","d3e409ca":"sns.distplot(data[(data['Age'].isnull()==False)]['Age'])","12dd94b1":"sns.countplot(x='Sex',data=data)","9f02260b":"sns.countplot(x='Sex',data=data[data['Survived']==1])","bdb62bee":"sns.barplot(x=data['Embarked'],y=data['Survived'])","b3e668b3":"passengerId = test['PassengerId']\ntitanic = train.append(test,ignore_index=True)\ndf = titanic.copy()","2b59e012":"df.info()","19926375":"train_count = train.shape[0]\ntest_count = test.shape[0]","7fe54eb2":"df.head()","9307e2ed":"embarked_freq = df['Embarked'].value_counts()","4e56b5e0":"most_freq_embarked = embarked_freq[embarked_freq==embarked_freq.max()].index[0]","8ee09085":"most_freq_embarked","165f8820":"df['Embarked'] = df['Embarked'].fillna(most_freq_embarked)","f8c04dbf":"df.info()","fcf8be73":"x = df.groupby(['Pclass'])","9d45fae2":"x.mean()","5d27c8f3":"class_of_missing_fare = df[df['Fare'].isnull()]['Pclass'].iloc[0]\nclass_of_missing_fare","3a5f187d":"x.mean()","3c8f551e":"to_fill_in_missing_fare = x.mean().loc[class_of_missing_fare,'Fare']\nto_fill_in_missing_fare","108c54a8":"df['Fare'].fillna(to_fill_in_missing_fare,inplace=True)","08ea3e44":"df.info()","e7fab61b":"age_dict = dict(df.groupby(['Pclass','Sex']).mean()['Age'])","94747180":"age_dict[(1,'female')]","d9e90be0":"age_dict","5443dd7b":"type(list(age_dict.keys())[0])","e25f47f8":"type((df.loc[0]['Pclass'],df.loc[0]['Sex']))","ee4b2210":"def fill_age(row):\n    if np.isnan(row['Age']):\n        tp = (row['Pclass'],row['Sex'])\n        return age_dict[tp]\n    else:\n        return row['Age']","9604ffdd":"np.isnan(df.iloc[0]['Age'])","1d7b862c":"df['Age'] = df.apply(fill_age,axis=1)","69816d7d":"df.info()","a0456087":"df['Age'] = df['Age'].apply(round)","281f4f21":"df.head()","94eb3260":"df['Sex'] = df['Sex'].map({'male':0,'female':1})","779a466d":"df.head()","0f651ec1":"df['Cabin'].nunique()","b83e2e93":"type(df['Cabin'][0])","285cf631":"df['Cabin'].value_counts()","4d730cfd":"df['Cabin'].apply(lambda x : 'Unknown' if type(x)==float else x).astype(str)","39c15565":"df['Cabin'] = (df['Cabin'].apply(lambda x : 'Unknown' if type(x)==float else x).astype(str)).apply(lambda x : x.split()[0][0])","fde8e154":"df.head()","7a36cb73":"df.drop(['Ticket'],axis=1,inplace=True)","246e35b4":"df.head()","eeb39add":"df.info()","2c1f9e44":"cabin_dummies = pd.get_dummies(df['Cabin'])","a3965241":"cabin_dummies.drop('U',axis=1,inplace=True)","17d218c2":"embarked_dummies = pd.get_dummies(df['Embarked'])","24f0e462":"embarked_dummies.drop('S',axis=1,inplace=True)","331b1abc":"pclass_dummies = pd.get_dummies(df['Pclass'])\npclass_dummies","992b5638":"pclass_dummies.drop(3,axis=1,inplace=True)","03a6e883":"pclass_dummies.head()","df37bf3c":"cabin_dummies.columns = 'Cabin ' + cabin_dummies.columns","86a07346":"cabin_dummies.head()","9ef0618e":"embarked_dummies.columns = 'Embark ' + embarked_dummies.columns","6c865086":"embarked_dummies.head()","0f57fa4a":"(list(pclass_dummies.columns))","2a0b8d37":"pclass_dummies.columns = ['Pclass 1','Pclass 2']","0fdf668b":"pclass_dummies.head()","a09b7e0e":"df.head()","de87b970":"df.drop(['Cabin','Embarked'],axis=1,inplace=True)","ace83586":"df.head()","cce423eb":"df.drop(['PassengerId','Name','Pclass'],axis=1,inplace=True)","c5c0f021":"df.head()","dd28478e":"df_dummies = pd.concat([df, pclass_dummies, cabin_dummies, embarked_dummies], axis=1)","1a0bceaf":"df_dummies.head()","027db2fd":"train = df_dummies.iloc[:train_count]\ntest = df_dummies.iloc[train_count:]","3b35f457":"train.info()","16a27981":"test.info()","bb6e0505":"X = train.drop('Survived',axis=1)\ny = train['Survived'].astype(int)","158cb86f":"X_to_predict = test.drop('Survived',axis=1)\nX_to_predict.head()","f0fa324c":"X_to_predict.shape[0]","7b0227e6":"X.head()","1385e3c3":"y.head()","7f2bc1db":"from sklearn.model_selection import train_test_split","f5197aeb":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15)","4d94c1bd":"from sklearn.linear_model import LogisticRegression","f888af73":"logreg = LogisticRegression()","b391f6aa":"logreg.fit(X_train,y_train)","c2e43ecb":"from sklearn.metrics import classification_report,confusion_matrix","9cf00bcd":"print('For logistic regression model')\nprint('Confusion Matrix')\nprint(confusion_matrix(y_test,logreg.predict(X_test)))","60bc474c":"print('For logistic regression model')\nprint('Classification Report')\nprint(classification_report(y_test,logreg.predict(X_test)))","de597b63":"logreg_predictions = logreg.predict(X_to_predict)","46127a29":"from sklearn.ensemble import RandomForestClassifier","7584c058":"clf = RandomForestClassifier(n_estimators=4)","c4f2d8d6":"clf.fit(X_train,y_train)","83b5a4bc":"print('For decision tree classifier')\nprint('Confusion Matrix')\nprint(confusion_matrix(y_test,clf.predict(X_test)))","8fb42ccf":"print('For decision tree classifier')\nprint('Classification Report')\nprint(classification_report(y_test,clf.predict(X_test)))","9dac4c75":"kaggle = pd.DataFrame({'PassengerId':passengerId,'Survived':logreg.predict(X_to_predict)})","d8b4600e":"kaggle.to_csv('submit.csv',index=False)","f8550dc1":"We will be filling missing age values with average age of that Pclass and Sex","2d3729d2":"## Data preprocessing\nFor being able to preprocess the train and test data simultanously, I have merged them info one dataframe named titanic","42810992":"storing number of examples of train and test","bfe5688e":"Concatening df with dummy values","9bb20717":"Number of Males and females onboard","c9398513":"Distribution of age among passengers","98aa2e37":"Our dataframe has lot of missing values, we have to remove missing values or fill suitable values in them before feeding the data into Logistic regression model","3aa1427d":"How many null values are there in each column","cede2757":"Creating dummies for each categorical feature","2113e5ca":"Is place embarked significant ?","57b38d44":"We have 891 train examples have have survived value for each of them\nTherefore we don't have to do anything with Survived column","b0c3a48d":"Filling missing cabin values with 'Unknown'","398a462b":"###### Creating a barplot of Survived vs Sex with Pclass as hue","6d74158a":"Here you can see passengers travelling alone have less chances of surviving","577045cc":"Here you can see among survived passenger more have embarked at C ","15b6f040":"#### Training on random forest classifier","2a71eea3":"Obtain X and y i.e. input features and label","ae4c1ec7":"Survived males and females","2a3b767c":"##### Now to visualize how having a family member onboard affects the chances of survival\nCreating a new column to get count of family members onboard","c64511b0":"What are the attributes present in the dataframe ?","346cb047":"Dropping unnecessary columns","fcf1f066":"Filling two missing embarked values with most frequent embarked value","44336ffe":"Recollecting train and test Dataframes","18cf3b9e":"#### Training on logistic regression model","cec30860":"## Exploratory data analysis","e8747918":"### Importing the model libraries and training the model","a07f36ca":"#### Splitting the data","be4ed4f8":"# Importing relevant libraries","a2a36b94":"Dropping ticket number column","c40ca9dc":"You can see in the above barplot how a persons survival depends on sex and the class in which he\/she is travelling","4939ceb2":"Filling missing values of Fare with the respective Pclass averages","f19a9519":"##### The chances of survival of females are significantly more than that of males"}}