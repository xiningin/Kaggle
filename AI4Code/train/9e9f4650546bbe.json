{"cell_type":{"a690ce9f":"code","57edb1cd":"code","a1a5b542":"code","32498e2f":"code","7a143c9e":"code","59059708":"code","e3484d1f":"code","b293574c":"code","904ae912":"code","81b7f6d8":"code","5eb2cbe6":"code","098d4043":"code","e6171c0f":"code","36f9b52f":"code","583a31c2":"code","9c5450c8":"code","f7d9692c":"code","336a4df6":"code","40e991d8":"code","1542b75f":"code","89ac3ab4":"code","d448f2e6":"code","333c7f53":"code","ac0ebb8f":"code","1dd0d7ea":"code","64135be9":"code","64a3d48a":"code","88d22349":"code","d42c107d":"code","63a0dbd9":"markdown","3ad637d0":"markdown","ae87e70f":"markdown","d15f08f8":"markdown","e2790571":"markdown","cd906ca4":"markdown","88a43ab3":"markdown","17e61d9a":"markdown","ecdd665d":"markdown","0f8acc68":"markdown","c3834d8a":"markdown","b0aaf8a5":"markdown","ac2e7917":"markdown","5b56c89d":"markdown","458d9fb3":"markdown","e71505e2":"markdown","f82f06ee":"markdown","152e6b5f":"markdown","11afe561":"markdown","faf8e00e":"markdown","c3997c18":"markdown","70b75bfd":"markdown","31744b8c":"markdown","d96ef534":"markdown","69af3657":"markdown","38c1657d":"markdown","57720dad":"markdown"},"source":{"a690ce9f":"!pip install calplot","57edb1cd":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport calplot\n\nimport seaborn as sns\n\n\nimport plotly.offline as ply\nimport plotly.graph_objs as go\nfrom plotly.tools import make_subplots\nimport colorlover as cl\n\nchosen_colors=cl.scales['5']['qual']['Paired']\nply.init_notebook_mode(connected=True)\n\npd.set_option('display.float_format', lambda x: '%.3f' % x)","a1a5b542":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","32498e2f":"item_cat = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/item_categories.csv')\nitems = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/items.csv')\nsales_train = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sales_train.csv')\nshops = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/shops.csv')\n\nsample_subs = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/sample_submission.csv')\ntest = pd.read_csv('..\/input\/competitive-data-science-predict-future-sales\/test.csv')","7a143c9e":"print(f'there are {sales_train.shape[0]} rows and {sales_train.shape[1]} columns')\nsales_train","59059708":"print(f'there are {item_cat.shape[0]} rows and {item_cat.shape[1]} columns')\nitem_cat.head(5)","e3484d1f":"print(f'there are {items.shape[0]} rows and {items.shape[1]} columns')\nitems.head(5)","b293574c":"print(f'there are {shops.shape[0]} rows and {shops.shape[1]} columns')\nshops.head(5)","904ae912":"print('---' * 10)\nprint('sales_train check\\n')\nprint(sales_train.isna().sum())\nprint('---' * 10)\nprint('item_cat check\\n')\nprint(item_cat.isna().sum())\nprint('---' * 10)\nprint('item check\\n')\nprint(items.isna().sum())\nprint('---' * 10)\nprint('shops check\\n')\nprint(shops.isna().sum())","81b7f6d8":"sales_train.describe()","5eb2cbe6":"# outliner\nsales_train[sales_train.item_cnt_day > 900]","098d4043":"sales_train[sales_train.item_price > 100000]","e6171c0f":"sales_train[sales_train.item_price < 0]","36f9b52f":"sales_train[sales_train.item_cnt_day < 0]","583a31c2":"## Drop item_price and item_cnt_day too high\nsales_train = sales_train[sales_train.item_price<100000] # drop 1\nsales_train = sales_train[sales_train.item_cnt_day<1000] # drop 2\n\n## Drop negative price \nsales_train = sales_train[sales_train.item_price > 0].reset_index(drop=True) # drop 1\n\n## The item has been returned \nsales_train.loc[sales_train.item_cnt_day < 0, 'item_cnt_day'] = 0","9c5450c8":"shops.drop(0,axis=0,inplace=True)\nshops.drop(1,axis=0,inplace=True)\nshops.drop(11,axis=0,inplace=True)\nshops.drop(40,axis=0,inplace=True)\n\nsales_train.loc[sales_train.shop_id == 0, 'shop_id'] = 57\nsales_train.loc[sales_train.shop_id == 1, 'shop_id'] = 58\nsales_train.loc[sales_train.shop_id == 11, 'shop_id'] = 10\nsales_train.loc[sales_train.shop_id == 40, 'shop_id'] = 39","f7d9692c":"# Merge data\nitems = pd.merge(items, item_cat, on = 'item_category_id')\nsales_train = pd.merge(sales_train, shops, on='shop_id')\nsales_train = pd.merge(sales_train, items, on = 'item_id')","336a4df6":"# extract feature\nsales_train['total_sales'] = sales_train.item_price * sales_train.item_cnt_day\n\nsales_train['date'] = pd.to_datetime(sales_train.date)\nsales_train['Month'] = sales_train['date'].dt.month\nsales_train['Year'] = sales_train['date'].dt.year\nsales_train['day_of_week'] = sales_train['date'].dt.day_name()","40e991d8":"# Dtype of dataset\nsales_train.info()","1542b75f":"temp_df = sales_train.groupby('date_block_num')[['item_cnt_day','total_sales']].sum().reset_index()\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=temp_df.date_block_num, y=temp_df.item_cnt_day,\n                    mode='lines',\n                    line= dict(color='royalblue', width=2)))\n\nfig.update_layout(title='Monthly Sales',\n                   xaxis_title='Month',\n                   yaxis_title='Total item sold')\n\nfig.show()\n\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=temp_df.date_block_num, y=temp_df.total_sales,\n                    mode='lines',\n                    line= dict(color='royalblue', width=2)))\n\nfig.update_layout(title='Monthly Revenue',\n                   xaxis_title='Month',\n                   yaxis_title='?')\n\nfig.show()","89ac3ab4":"years_item_cnt = sales_train.groupby('Year')['item_cnt_day'].sum().reset_index()\n\ntrace1 = go.Bar(\n    x=years_item_cnt.Year,\n    y=years_item_cnt.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='Annual Sales',\n    xaxis_type='category',\n    xaxis=dict(\n        title='Years'\n    ),\n    yaxis=dict(\n        title='Total Item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()","d448f2e6":"temp_df = sales_train.groupby('day_of_week').sum()\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=temp_df.index.values, y=temp_df.item_cnt_day,\n                    mode='lines',\n                    line= dict(color='royalblue', width=2)))\n\nfig.update_layout(title='Daily Sales',\n                   xaxis_title='Days',\n                   yaxis_title='Total item sold')\n\nfig.show()","333c7f53":"calender = sales_train[['date','item_cnt_day']]\ncalender.set_index('date', inplace = True)\ncalender  = calender.resample(\"D\")[\"item_cnt_day\"].sum()\n\ncalplot.calplot(calender,\n               figsize=(20,12),\n               suptitle= 'Total sales')","ac0ebb8f":"temp = len(sales_train.shop_name.unique())\nprint(f'there are {temp} store in dataset')","1dd0d7ea":"shop_revenue = sales_train.groupby(['shop_name'])['total_sales'].sum().sort_values(ascending=False).reset_index()\nshop_revenue_H = shop_revenue.head(7)\nshop_revenue_L = shop_revenue.tail(7)\n\ntrace1 = go.Bar(\n    x=shop_revenue_H.shop_name,\n    y=shop_revenue_H.total_sales,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The highest shop revenue',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total revenue'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()\n\ntrace1 = go.Bar(\n    x=shop_revenue_L.shop_name,\n    y=shop_revenue_L.total_sales,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The lowest shop revenue',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total revenue'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()","64135be9":"shop_sell = sales_train.groupby(['shop_name'])['item_cnt_day'].sum().sort_values(ascending=False).reset_index()\nshop_sell_H = shop_sell.head(7)\nshop_sell_L = shop_sell.tail(7)\n\ntrace1 = go.Bar(\n    x=shop_sell_H.shop_name,\n    y=shop_sell_H.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The highest-selling shop',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()\n\ntrace1 = go.Bar(\n    x=shop_sell_L.shop_name,\n    y=shop_sell_L.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The lowest-selling shop',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()","64a3d48a":"temp = len(sales_train.item_name.unique())\ntemp1 = len(sales_train.item_category_name.unique())\nprint(f'there are {temp} unique item and {temp1} unique item category in store')","88d22349":"items_cat_cnt = sales_train.groupby(['item_category_name'])['item_cnt_day'].sum().sort_values(ascending=False).reset_index()\nitems_cat_cnt_H = items_cat_cnt.head(7)\nitems_cat_cnt_L = items_cat_cnt.tail(7)\n\ntrace1 = go.Bar(\n    x=items_cat_cnt_H.item_category_name,\n    y=items_cat_cnt_H.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The Most popular item category',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()\n\ntrace1 = go.Bar(\n    x=items_cat_cnt_L.item_category_name,\n    y=items_cat_cnt_L.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The Worst item Category',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()","d42c107d":"item_name_sales = sales_train.groupby(['item_name'])['item_cnt_day'].sum().sort_values(ascending=False).reset_index()\nitem_name_sales_H = item_name_sales.head(7)\nitem_name_sales_L = item_name_sales.tail(7)\n\ntrace1 = go.Bar(\n    x=item_name_sales_H.item_name,\n    y=item_name_sales_H.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The most popular item',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()\n\ntrace1 = go.Bar(\n    x=item_name_sales_L.item_name,\n    y=item_name_sales_L.item_cnt_day,\n    textposition='outside',\n    marker=dict(\n        color=chosen_colors[0]\n    )\n)\n\ndata=[trace1]\n\nlayout = go.Layout(\n    title='The worst selling items',\n    xaxis_type='category',\n    yaxis=dict(\n        title='Total item sold'\n    )\n)\n\nfigure = go.Figure(data=data, layout=layout)\n\nfigure.show()","63a0dbd9":"### which item category is the most popular and the worst?","3ad637d0":"<h1><center>Thank you for reading my notebook, upvote if you like this notebook :)<\/center><\/h1>\n\n****\n","ae87e70f":"## Load Data","d15f08f8":"### Daily Sales\n> which days is the most selling ?","e2790571":"Based on this data, it seems like there is no data missing, let's examine it deeper","cd906ca4":"merge data into one dataframe and extract feature from date colomn","88a43ab3":"there is an outliner in the item price and item_cnt_day columns. The minus value on item_cnt_day can be from the returned item ([notebook](https:\/\/www.kaggle.com\/c\/competitive-data-science-predict-future-sales\/discussion\/50591)). let's check it out","17e61d9a":"### which shop is the highest and lowest revenue ?","ecdd665d":"![98e886c01b66c66d90a7b0bbc0975205.jpg](attachment:98e886c01b66c66d90a7b0bbc0975205.jpg)","0f8acc68":"![Untitled-3.jpg](attachment:Untitled-3.jpg)","c3834d8a":"## Import necessary libraries","b0aaf8a5":"<h1><center> TIME <\/center><\/h1>\n\n****","ac2e7917":"### Monthly Sales and Revenue","5b56c89d":"### which shop is the most popular and lowest ?","458d9fb3":"### Anual Sales\n> which years are the most selling ?","e71505e2":"we are given daily historical sales data from several stores in 33 months ( January 2013 to October 2015 )","f82f06ee":"<h1><center> Store <\/center><\/h1>\n\n****","152e6b5f":"### which item name is the most popular and the worst?","11afe561":"![Untitled-1.png](attachment:Untitled-1.png)","faf8e00e":"<h2>Information<\/h2>\n \nbased on this [notebook](http:\/\/www.kaggle.com\/tristanleclercq\/predict-future-sales-full-solution-xgboost) it can be concluded\n\n> *  Shop 0-57, 1-58, 10-11, are the same, but different time periods\n> *  Shop 40 is likely to be an antenna of shop 39, so we aggregate their sales together\n> *  There is data leaked in test data ( shop 40 )\n\nso, i will change and drop some shop name to solved that problem","c3997c18":"<h1> Introduction <\/h1>\n\n****\n\nIn this competition, we have to predict the total sales for each product and store in the next month. To solved this problem, we are given daily historical sales data from several stores in 33 months ( January 2013 to October 2015 ). In this notebook, I will explore existing data to help in prediction models.","70b75bfd":"<h1><center> Items <\/center><\/h1>\n\n****","31744b8c":"## File descriptions\n\n> * sales_train.csv - the training set. Daily historical data from January 2013 to October 2015.\n> * test.csv - the test set. You need to forecast the sales for these shops and products for November 2015.\n> * sample_submission.csv - a sample submission file in the correct format.\n> * items.csv - supplemental information about the items\/products.\n> * item_categories.csv  - supplemental information about the items categories.\n> * shops.csv- supplemental information about the shops.\n\n## Data fields\n\n> * ID - an Id that represents a (Shop, Item) tuple within the test set\n> * shop_id - unique identifier of a shop\n> * item_id - unique identifier of a product\n> * item_category_id - unique identifier of item category\n> * item_cnt_day - number of products sold. You are predicting a monthly amount of this measure\n> * item_price - current price of an item\n> * date - date in format dd\/mm\/yyyy\n> * date_block_num - a consecutive month number, used for convenience. January 2013 is 0, February 2013 is 1,..., October 2015 is 33\n> * item_name - name of item\n> * shop_name - name of shop\n> * item_category_name - name of item category","d96ef534":"<h1><center> Predict Future Sales - Exploring Data <\/center><\/h1>\n\n****","69af3657":"![7a477ed936d18a1a320b41d4f9394859.jpg](attachment:7a477ed936d18a1a320b41d4f9394859.jpg)","38c1657d":"Check missing value from data","57720dad":"<h1><center>  DATA EXPLORATION <\/center><\/h1>\n\n****"}}