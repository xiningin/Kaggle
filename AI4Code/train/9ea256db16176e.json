{"cell_type":{"9b902ffd":"code","2ccb5e23":"code","b787f62c":"code","aa27d533":"code","05a88e55":"code","184d3263":"code","ab9c8526":"code","75afc3fd":"code","e0e72b54":"code","4b49b180":"code","1d98d427":"code","9ac9cea9":"code","c0e38e7c":"code","4c59c1ef":"code","0a816138":"code","78e4d8b6":"code","56d434a1":"code","b78e4840":"code","2c2d0362":"code","afba30ba":"code","c301dd10":"code","9bbeb717":"markdown","6fca82d3":"markdown","7d9db301":"markdown"},"source":{"9b902ffd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2ccb5e23":"train_df = pd.read_csv('..\/input\/commonlitreadabilityprize\/train.csv')","b787f62c":"train_df.head()","aa27d533":"filter_train_df=train_df[['excerpt','url_legal','license','target']]","05a88e55":"filter_train_df.head()","184d3263":"filter_train_df.excerpt.iloc[0]","ab9c8526":"pip install textstat","75afc3fd":"import textstat","e0e72b54":"text=filter_train_df.excerpt.iloc[0]","4b49b180":"#Returns the number of syllables present in the given text.\n\ntextstat.syllable_count(text)","1d98d427":"#Calculates the number of words present in the text. Optional removepunct specifies whether we need to take punctuation symbols into account while counting lexicons. Default value is True, \n#which removes the punctuation before counting lexicon items.\n\ntextstat.lexicon_count(text, removepunct=True)","9ac9cea9":"#Returns the number of sentences present in the given text.\n\ntextstat.sentence_count(text)","c0e38e7c":"#Returns the Flesch Reading Ease Score.\nRef: https:\/\/en.wikipedia.org\/wiki\/Flesch%E2%80%93Kincaid_readability_tests#Flesch_reading_ease\n        \ntextstat.flesch_reading_ease(text)","4c59c1ef":"#Returns the Flesch-Kincaid Grade of the given text. \n#This is a grade formula in that a score of 9.3 means that a ninth grader would be able to read the document.\ntextstat.flesch_kincaid_grade(text)","0a816138":"#Returns the FOG index of the given text. This is a grade formula in that a score of 9.3 means that a ninth grader would be able to read the document.\ntextstat.gunning_fog(text)","78e4d8b6":"#Returns the SMOG index of the given text. This is a grade formula in that a score of 9.3 means that a ninth grader would be able to read the document.\ntextstat.smog_index(text)\n","56d434a1":"#Returns the ARI (Automated Readability Index) which outputs a number that approximates the grade level needed to comprehend the text.\ntextstat.automated_readability_index(text)\n","b78e4840":"#Returns the grade level of the text using the Coleman-Liau Formula. This is a grade formula in that a score of 9.3 means that a ninth grader would be able to read the document.\ntextstat.coleman_liau_index(text)","2c2d0362":"#Returns the grade level using the Linsear Write Formula. This is a grade formula in that a score of 9.3 means that a ninth grader would be able to read the document.\ntextstat.linsear_write_formula(text)\n","afba30ba":"#Different from other tests, since it uses a lookup table of the most commonly used 3000 English words. Thus it returns the grade level using the New Dale-Chall Formula.\n#ref: https:\/\/en.wikipedia.org\/wiki\/Dale%E2%80%93Chall_readability_formula\ntextstat.dale_chall_readability_score(text)\n","c301dd10":"#Based upon all the above tests, returns the estimated school grade level required to understand the text.\n#Optional float_output allows the score to be returned as a float. Defaults to False.\ntextstat.text_standard(text, float_output=False)\n","9bbeb717":"# **List of Functions that we can use from Teststat**","6fca82d3":"# **Get the train data**","7d9db301":"**Ref: https:\/\/pypi.org\/project\/textstat\/**"}}