{"cell_type":{"87c2402a":"code","8aa0549b":"code","d3c23e43":"code","1f15d019":"code","9d5eccc5":"code","b2e188dd":"code","c5504de5":"code","d12ca1d6":"code","7719f31d":"code","2a74187d":"code","40454d6d":"code","21459f64":"code","3243c6ba":"code","ae021284":"code","e0ca890e":"code","b3ddae1b":"code","9e5b2840":"code","e1cf417b":"code","1f59e0b4":"code","699b4d11":"code","85db11e9":"code","3208e6a7":"markdown"},"source":{"87c2402a":"!pip install efficientnet-pytorch","8aa0549b":"import glob\nimport numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom fastai import *\nfrom fastai.vision import *\nfrom efficientnet_pytorch import EfficientNet","d3c23e43":"train_df = pd.read_csv('..\/input\/siim-isic-melanoma-classification-jpeg512\/train.csv')\ntest_df = pd.read_csv('..\/input\/extrafiles\/test.csv')\nsubmission_df = pd.read_csv('..\/input\/extrafiles\/sample_submission.csv')","1f15d019":"tfrm = get_transforms(do_flip = True, flip_vert = True, max_rotate = 20, max_zoom = 1.5, max_lighting = 0.5, max_warp = 0.5, p_affine = 0.75, p_lighting = 0.75)","9d5eccc5":"train_df.image_name = train_df.image_name.apply(lambda file : file+'.jpg')","b2e188dd":"test_df.image_name = test_df.image_name.apply(lambda file : file+'.jpg')","c5504de5":"test_imgs = ImageList.from_df(test_df, path = '..\/input\/siim-isic-melanoma-classification-jpeg512', folder = 'test512')","d12ca1d6":"np.random.seed(42)\nsrc = ImageList.from_df(train_df, path = '..\/input\/siim-isic-melanoma-classification-jpeg512', folder = 'train512')\\\n                      .split_by_rand_pct(0.2)\\\n                      .label_from_df(cols = -1)\\\n                      .add_test(test_imgs)","7719f31d":"src","2a74187d":"data = src.transform(tfrm, padding_mode = 'reflection', size = 128, resize_method = ResizeMethod.SQUISH).databunch(bs = 32, device = torch.device('cuda:0'))\\\n          .normalize(imagenet_stats)\n          #.databunch(bs = 32, device = torch.device('cuda:0'))\\","40454d6d":"data.show_batch(3)","21459f64":"model = EfficientNet.from_name('efficientnet-b5')\nmodel._fc = nn.Linear(2048, data.c)","3243c6ba":"learn = Learner(data, model)","ae021284":"learn.summary()","e0ca890e":"learn.model_dir = '\/kaggle\/output\/'","b3ddae1b":"for obj in gc.get_objects():\n    if torch.is_tensor(obj):\n        del obj\ngc.collect()\ntorch.cuda.empty_cache()","9e5b2840":"learn.fit_one_cycle(4)","e1cf417b":"learn.save('efficient_baseline')","1f59e0b4":"learn.lr_find()\nlearn.recorder.plot(suggestion=True)","699b4d11":"learn.unfreeze()\nlearn.fit_one_cycle(4, 1e-5)","85db11e9":"test = os.listdir(Path('..\/input\/siim-isic-melanoma-classification-jpeg512\/test512'))\ntest.sort(key=lambda f: int(re.sub('\\D', '', f)))\n\nwith open('\/kaggle\/working\/submission.csv', 'w', newline='') as file:\n    writer = csv.writer(file)\n    writer.writerow(['image_name', 'target'])\n    \n    for image_file in test:\n        image = os.path.join(Path('..\/input\/siim-isic-melanoma-classification-jpeg512\/test512'), image_file) \n        image_name = Path(image).stem\n\n        img = open_image(image)\n        pred_class,pred_idx,outputs = learn.predict(img)\n        target = float(outputs[1])\n\n        \n        writer.writerow([image_name, target])","3208e6a7":"This notebook's purpose is to show how to use EfficientNet for Skin Cancer Melonama competition. It needs to be tuned 'efficiently' to achieve good LB score"}}