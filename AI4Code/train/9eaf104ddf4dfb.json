{"cell_type":{"62b380e5":"code","aeb26cd9":"code","99135117":"code","5a24d062":"code","6b1703bc":"code","1371d01b":"code","ff44d261":"code","bd37a942":"code","2d55c097":"code","2df64186":"code","18e872dd":"code","a02c98da":"code","7dfb3d67":"code","4c82f798":"code","57310114":"code","0329f9fb":"code","6fe17d93":"code","da64f309":"code","afec7166":"code","79dc49e6":"code","784a920f":"code","ff908656":"code","b5aa8a58":"code","ff8afa56":"code","9c52ee60":"code","9fd17173":"code","6fe9ce1f":"code","037dfd29":"code","25e80ad2":"code","7e7bcc69":"code","4eda1239":"code","17d234c3":"code","d532d22c":"code","c35a2181":"code","009c966a":"markdown","bfb0e2bb":"markdown","43b34b49":"markdown","35873d55":"markdown","e61b5a51":"markdown","3be1a248":"markdown","10711201":"markdown","7fe6e9b1":"markdown","ed3d35ae":"markdown","1274b1da":"markdown","14cae806":"markdown","90ada872":"markdown","14e48b4d":"markdown","2fc0ac6b":"markdown","89cddf5b":"markdown","88a4b0cd":"markdown","6630b00f":"markdown"},"source":{"62b380e5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aeb26cd9":"import pandas as pd\nimport numpy as np\nimport seaborn as sns","99135117":"df=pd.read_csv('..\/input\/air-quality-data-in-india\/city_day.csv')\ndf.head()","5a24d062":"# data for 2020\ndf=df[df['Date'] >= ('2020-01-01')]\nprint(df.shape)\ndf.head()","6b1703bc":"df.reset_index(drop=True,inplace=True)\ndf.head()","1371d01b":"df.isnull().sum()","ff44d261":"df.info()","bd37a942":"for i in df.columns:\n    print('column name:{}    unique values:{}'.format(i,len(df[i].unique())))","2d55c097":"df['PM2.5']=df['PM2.5'].fillna(df['PM2.5'].mean())\ndf['PM10']=df['PM10'].fillna(df['PM10'].mean())\ndf['NO']=df['NO'].fillna(df['NO'].mean())\ndf['NO2']=df['NO2'].fillna(df['NO2'].mean())\ndf['NOx']=df['NOx'].fillna(df['NOx'].mean())\ndf['NH3']=df['NH3'].fillna(df['NH3'].mean())\ndf['CO']=df['CO'].fillna(df['CO'].mean())\ndf['SO2']=df['SO2'].fillna(df['SO2'].mean())\ndf['O3']=df['O3'].fillna(df['O3'].mean())\ndf['Benzene']=df['Benzene'].fillna(df['Benzene'].mean())\ndf['Toluene']=df['Toluene'].fillna(df['Toluene'].mean())\ndf['Xylene']=df['Xylene'].fillna(df['Xylene'].mean())\ndf['AQI']=df['AQI'].fillna(df['AQI'].mode()[0])\ndf['AQI_Bucket']=df['AQI_Bucket'].fillna('Moderate')","2df64186":"df.head()","18e872dd":"# how much is the average amount of pollution in each city stations\nmost_polluted = df[['City', 'AQI', 'PM10', 'CO']].groupby(['City']).mean().sort_values(by = 'AQI', ascending = False)\nmost_polluted","a02c98da":"import matplotlib.pyplot as plt\n\nplt.style.use('seaborn-whitegrid')\nf, ax_ = plt.subplots(1, 3, figsize = (15,15))\n\nbar1 = sns.barplot(x = most_polluted.AQI,\n                   y = most_polluted.index,\n                   palette = 'Reds_r',\n                   ax = ax_[0]);\n\nbar1 = sns.barplot(x = most_polluted.PM10,\n                   y = most_polluted.index,\n                   palette = 'RdBu',\n                   ax = ax_[1]);\n\nbar1 = sns.barplot(x = most_polluted.CO,\n                   y = most_polluted.index,\n                   palette = 'RdBu',\n                   ax = ax_[2]);\n\ntitles = ['AirQualityIndex', 'ParticulateMatter10', 'CO']\nfor i in range(3) :\n    ax_[i].set_ylabel('')   \n    ax_[i].set_yticklabels(labels = ax_[i].get_yticklabels(),fontsize = 14);\n    ax_[i].set_title(titles[i])\n    f.tight_layout()","7dfb3d67":"df1=df.copy()\ndf1['Vehicle_Pollution_content']=df1['PM2.5']+df1['PM10']+df1['NO']+df1['NOx']+df1['NH3']+df1['CO']\ndf1['Industry_pollutants']=df1['SO2']+df1['O3']+df1['Benzene']+df1['Toluene']+df1['Xylene']\ndf1.drop(['PM2.5','PM10','NO','NO2','NOx','NH3','CO','SO2','O3','Benzene','Toluene','Xylene'],axis=1,inplace=True)\ndf1.head()","4c82f798":"df1['Day_date']=pd.to_datetime(df1['Date'],format='%Y\/%m\/%d').dt.day\ndf1['month_date']=pd.to_datetime(df1['Date'],format='%Y\/%m\/%d').dt.month\ndf1.drop(['Date'],axis=1,inplace=True)\ndf1.head()","57310114":"df1.describe()","0329f9fb":"outliers=df1.loc[df1['Vehicle_Pollution_content'] > (1000)]\noutliers","6fe17d93":"outliers=df1.loc[df1['Industry_pollutants']>(800)]\noutliers","da64f309":"sns.pairplot(data=df1)","afec7166":"df1.drop(['AQI_Bucket'],axis=1,inplace=True)\ndf1.head()","79dc49e6":"pd.set_option('display.max_columns',None)\npd.set_option('display.max_rows',None)","784a920f":"df1=pd.get_dummies(df1,drop_first=True)\nprint(df1.shape)\ndf1.head()","ff908656":"X=df1.drop(['AQI'],axis=1)\ny=df1['AQI']\nprint(X.shape)\nprint(y.shape)","b5aa8a58":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","ff8afa56":"from sklearn.metrics import classification_report,accuracy_score\nfrom sklearn.ensemble import RandomForestRegressor\nmodel3=RandomForestRegressor()\nmodel3.fit(X_train,y_train)\nmodel3.score(X_test,y_test)","9c52ee60":"from sklearn.ensemble import GradientBoostingRegressor\nmodel3=GradientBoostingRegressor()\nmodel3.fit(X_train,y_train)\nmodel3.score(X_test,y_test)","9fd17173":"from sklearn.ensemble import ExtraTreesRegressor\nmodel3=ExtraTreesRegressor()\nmodel3.fit(X_train,y_train)\nmodel3.score(X_test,y_test)","6fe9ce1f":"from sklearn.model_selection import RandomizedSearchCV,GridSearchCV\nfrom scipy.stats import randint as sp_randint\nfrom sklearn.metrics import mean_squared_error,make_scorer\n\nclf = ExtraTreesRegressor(random_state=12)\nparam_dist = {\"n_estimators\": [5, 10],\n              \"max_depth\": [3, None],\n              \"max_features\": sp_randint(1, 11),\n              \"min_samples_split\": sp_randint(1, 11),\n              \"min_samples_leaf\": sp_randint(1, 11),\n              \"bootstrap\": [True, False]}\n# rmse = make_scorer(mean_squared_error, greater_is_better=False)\nr = RandomizedSearchCV(clf, param_distributions=param_dist,\n                       cv=10,\n                       scoring='r2',\n                       n_iter=3,\n                       n_jobs=2)\nr.fit(X, y)","037dfd29":"print(r.best_params_)\nr.score(X_test,y_test)","25e80ad2":"n_estimators = [int(x) for x in np.linspace(start = 200, stop = 1000, num = 5)]\nmax_features = ['auto', 'sqrt']\nmax_depth = [int(x) for x in np.linspace(10, 110, num = 11)]\nmax_depth.append(None)\nmin_samples_split = [2, 5, 10]\nmin_samples_leaf = [1, 2, 4]\nbootstrap = [True, False]\nrandom_grid = {'n_estimators': n_estimators,\n               'max_features': max_features,\n               'max_depth': max_depth,\n               'min_samples_split': min_samples_split,\n               'min_samples_leaf': min_samples_leaf,\n               'bootstrap': bootstrap}","7e7bcc69":"rf = RandomForestRegressor()\nrf_random = RandomizedSearchCV(estimator = rf, param_distributions = random_grid, n_iter = 100, cv = 3, verbose=2, random_state=42, n_jobs = -1)\nrf_random.fit(X_train,y_train)","4eda1239":"rf_random.best_params_","17d234c3":"rf_random.score(X_test,y_test)","d532d22c":"prediction=rf_random.predict(X_test)","c35a2181":"sns.distplot(y_test-prediction)","009c966a":"**TO CHECK THE NULL VALUES IN OUR 2020 DATATSET**","bfb0e2bb":"**RANDOM FOREST REGRESSOR**","43b34b49":"AS INDEX IS MIXED WE NEED TO FIX THE INDEX ","35873d55":"**EXTRA TREE REGRESSOR**","e61b5a51":"**DISTRIBUTING DATE INTO DAY AND MONTH COLUMNS**","3be1a248":"**HYPERTUNING OF RANDOM FOREST REGRESSOR**","10711201":"**AS AQI IS DEPENDENT VARIABLE WE DROPING IT FROM DATASET AND PUTING IT IN Y**","7fe6e9b1":"**HYPERTUNING OF EXTRA TREE REGRESSOR**","ed3d35ae":"**WE ARE FILLING MISSING VALUES IN 2 DIFFERENT CATEGORIES**\n\n\n**FOR NUMERIC VALUES : MEAN()**\n\n\n**FOR CATEGORICAL VALUES : MODE()**","1274b1da":"**AIR QUALITY INDEX**\n\n\nThe air quality index (AQI) is an index for reporting air quality on a daily basis. It is a measure of how air pollution affects one's health within a short time period. The purpose of the AQI is to help people know how the local air quality impacts their health. The Environmental Protection Agency (EPA) calculates the AQI for five major air pollutants, for which national air quality standards have been established to safeguard public health.\n \n1. Ground-level ozone\n2. Particle pollution\/particulate matter (PM2.5\/pm 10)\n3. Carbon Monoxide\n4. Sulfur dioxide\n5. Nitrogen dioxide\n \nThe higher the AQI value, the greater the level of air pollution and the greater the health concerns. The concept of AQI has been widely used in many developed countries for over the last three decades. AQI quickly disseminates air quality information in real-time.","14cae806":"**IDENTIFYING OUTLIERS**","90ada872":"**GRADIENT BOSSTING REGRESSOR**","14e48b4d":"**AS THERE ARE MANY POLUTANTS IN THE AIR WE ARE CLASSIFYING THEM INTO 2 CATEGORIES**\n\n**VEHICLE_POLUTANTS : PM2.5 , PM10 , NO , NOx , NH3 , CO**\n\n**INDUSTRY_POLUTANT : SO2 , O3 , BENZENE , TOLUENE , XYLENE**","2fc0ac6b":"**IN ORDER TO SEE EVERY COLUMN IN THE DATASET**","89cddf5b":"**CREATING DUMMIES FOR CITY COLUMN**","88a4b0cd":"**DEALING WITH MISSING VALUES**","6630b00f":"As we are only taking 2020 data for predicting AQI "}}