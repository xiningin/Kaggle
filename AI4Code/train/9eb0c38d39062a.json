{"cell_type":{"83813e62":"code","49dddba5":"code","e4ced436":"code","c238cce3":"code","611394a3":"code","41f1e3ee":"code","c2849e4b":"code","b8f1a3a2":"code","03dc7be1":"code","3c7a2ca0":"code","0786c0aa":"code","2b32e072":"code","637e9101":"code","d4a999f6":"code","ab1177ac":"code","a156a0e9":"code","5ff006e6":"markdown","3954c912":"markdown","34f68725":"markdown","c38160c2":"markdown","b8faa603":"markdown","5d1ced9c":"markdown","9f1dbf11":"markdown","17ad24d2":"markdown","93b15af0":"markdown","2ee2fde5":"markdown","aebff9f0":"markdown","46f0a419":"markdown","0cac22f3":"markdown"},"source":{"83813e62":"# Set up feedback system\nfrom learntools.core import binder\nbinder.bind(globals())\nfrom learntools.ethics.ex3 import *\n\nimport numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\n\n# Get the same results each time\nnp.random.seed(0)\n\n# Load the (full) training data\nfull_data = pd.read_csv(\"..\/input\/jigsaw-unintended-bias-in-toxicity-classification\/train.csv\")\n\n# Work with a small subset of the data: if target > 0.7, toxic.  If target < 0.3, non-toxic\nfull_toxic = full_data[full_data[\"target\"]>0.7]\nfull_nontoxic = full_data[full_data[\"target\"]<0.3].sample(len(full_toxic))\ndata = pd.concat([full_toxic, full_nontoxic], ignore_index=True)\ncomments = data[\"comment_text\"]\ntarget = (data[\"target\"]>0.7).astype(int)\n\n# Break into training and test sets\ncomments_train, comments_test, y_train, y_test = train_test_split(comments, target, test_size=0.30, stratify=target)\n\n# Get vocabulary from training data\nvectorizer = CountVectorizer()\nvectorizer.fit(comments_train)\n\n# Get word counts for training and test sets\nX_train = vectorizer.transform(comments_train)\nX_test = vectorizer.transform(comments_test)\n\n# Preview the dataset\nprint(\"Data successfully loaded!\\n\")\nprint(\"Sample toxic comment:\", comments_train.iloc[18])\nprint(\"Sample not-toxic comment:\", comments_train.iloc[3])","49dddba5":"print(full_data.shape, full_toxic.shape, full_nontoxic.shape, data.shape, comments_train.shape, comments_test.shape)","e4ced436":"print(type(comments_train))\ncomments_train[:10]","c238cce3":"print(type(X_train), X_train.shape)\nprint(len(X_train[0].toarray()[0]))","611394a3":"print(len(X_train[0,:].toarray()[0]))\nX_train[0,:].toarray()[0]","41f1e3ee":"print(len(X_train[:,0].toarray()))\nX_train[:,0].toarray()","c2849e4b":"from sklearn.linear_model import LogisticRegression\n\n# Train a model and evaluate performance on test dataset\nclassifier = LogisticRegression(max_iter=2000)\nclassifier.fit(X_train, y_train)\nscore = classifier.score(X_test, y_test)\nprint(\"Accuracy:\", score)\n\n# Function to classify any string\ndef classify_string(string, investigate=False):\n    prediction = classifier.predict(vectorizer.transform([string]))[0]\n    if prediction == 0:\n        print(\"NOT TOXIC:\", string)\n    else:\n        print(\"TOXIC:\", string)","b8f1a3a2":"# Comment to pass through the model\nmy_comment = \"I love apples\"\n#my_comment = comments_train.iloc[np.random.randint(0,100,1)[0]]\n\n# Do not change the code below\nclassify_string(my_comment)\nq_1.check()","03dc7be1":"coefficients = pd.DataFrame({\"word\": sorted(list(vectorizer.vocabulary_.keys())), \"coeff\": classifier.coef_[0]})\ncoefficients","3c7a2ca0":"coefficients.sort_values(by=['coeff']).tail(10)","0786c0aa":"# Check your answer (Run this code cell to get credit!)\nq_2.check()","2b32e072":"# Set the value of new_comment\nnew_comment = \"I have a christian friend\"\nnew_comment = \"I have a good friend\"\n\n# Do not change the code below\nclassify_string(new_comment)\ncoefficients[coefficients.word.isin(new_comment.split())]\nq_3.check()","637e9101":"# Check your answer (Run this code cell to get credit!)\nq_4.check()","d4a999f6":"# Check your answer (Run this code cell to get credit!)\nq_5.check()","ab1177ac":"# Check your answer (Run this code cell to get credit!)\nq_6.check()","a156a0e9":"# Check your answer (Run this code cell to get credit!)\nq_7.check()","5ff006e6":"Roughly 93% of the comments in the test data are classified correctly!\n\n# 1) Try out the model\n\nYou'll use the next code cell to write your own comments and supply them to the model: does the model classify them as toxic?  \n\n1. Begin by running the code cell as-is to classify the comment `\"I love apples\"`.  You should see that was classified as \"NOT TOXIC\".\n\n2. Then, try out another comment: `\"Apples are stupid\"`.  To do this, change only `\"I love apples\"` and leaving the rest of the code as-is.  Make sure that your comment is enclosed in quotes, as below.\n```python\nmy_comment = \"Apples are stupid\"\n```\n3. Try out several comments (not necessarily about apples!), to see how the model performs: does it perform as suspected?","3954c912":"# 6) Test your understanding, part 2\n\nWe'll continue with the same hypothetical scenario, where you're trying to train a model to classify online comments as toxic.\n\nYou take any comments that are not already in English and translate them to English with a separate tool.  Then, you treat all posts as if they were originally expressed in English.  What type of bias will your model suffer from?\n\nOnce you have answered the question, run the next code cell to see the official answer.","34f68725":"# 3) A closer investigation\n\nWe'll take a closer look at how the model classifies comments.\n1. Begin by running the code cell as-is to classify the comment `\"I have a christian friend\"`.  You should see that was classified as \"NOT TOXIC\".  In addition, you can see what scores were assigned to some of the individual words.  Note that all words in the comment likely won't appear.\n2. Next, try out another comment: `\"I have a muslim friend\"`.  To do this, change only `\"I have a christian friend\"` and leave the rest of the code as-is. Make sure that your comment is enclosed in quotes, as below.\n```python\nnew_comment = \"I have a muslim friend\"\n```\n3. Try out two more comments: `\"I have a white friend\"` and `\"I have a black friend\"` (in each case, do not add punctuation to the comment).\n4. Feel free to try out more comments, to see how the model classifies them.","c38160c2":"**This notebook is an exercise in the [AI Ethics](https:\/\/www.kaggle.com\/learn\/ai-ethics) course.  You can reference the tutorial at [this link](https:\/\/www.kaggle.com\/alexisbcook\/identifying-bias-in-ai).**\n\n---\n","b8faa603":"# 4) Identify bias\n\nDo you see any signs of potential bias in the model?  In the code cell above,\n- How did the model classify `\"I have a christian friend\"` and `\"I have a muslim friend\"`?  \n- How did it classify `\"I have a white friend\"` and `\"I have a black friend\"`?    \n\nOnce you have an answer, run the next code cell.","5d1ced9c":"# Learn more\n\nTo continue learning about bias, check out the [Jigsaw Unintended Bias in Toxicity Classification](https:\/\/www.kaggle.com\/c\/jigsaw-unintended-bias-in-toxicity-classification\/overview) competition that was introduced in this exercise.  \n- Kaggler [Dieter](https:\/\/www.kaggle.com\/christofhenkel) has written a helpful two-part series that teaches you how to preprocess the data and train a neural network to make a competition submission.  [Get started here](https:\/\/www.kaggle.com\/christofhenkel\/how-to-preprocessing-for-glove-part1-eda).\n- Many Kagglers have written helpful notebooks that you can use to get started.  [Check them out](https:\/\/www.kaggle.com\/c\/jigsaw-unintended-bias-in-toxicity-classification\/notebooks?sortBy=voteCount&group=everyone&pageSize=20&competitionId=12500) on the competition page.\n\nAnother Kaggle competition that you can use to learn about bias is the [Inclusive Images Challenge](https:\/\/www.kaggle.com\/c\/inclusive-images-challenge), which you can read more about in [this blog post](https:\/\/ai.googleblog.com\/2018\/09\/introducing-inclusive-images-competition.html).  The competition focuses on **evaluation bias** in computer vision.\n\n# Keep going\n\nHow can you quantify bias in machine learning applications?  Continue to **[learn how to measure fairness](https:\/\/www.kaggle.com\/alexisbcook\/ai-fairness)**.","9f1dbf11":"---\n\n\n\n\n*Have questions or comments? Visit the [Learn Discussion forum](https:\/\/www.kaggle.com\/learn-forum\/230765) to chat with other Learners.*","17ad24d2":"# 7) Test your understanding, part 3\n\nWe'll continue with the same hypothetical scenario, where you're trying to train a model to classify online comments as toxic.\n\nThe dataset you're using to train the model contains comments primarily from users based in the United Kingdom.  \n\nAfter training a model, you evaluate its performance with another dataset of comments, also primarily from users based in the United Kingdom -- and it gets great performance!  You deploy it for a company based in Australia, and it does not perform well, because of differences between British and Australian English.  What types of bias does the model suffer from?\n\nOnce you have answered the question, run the next code cell to see the official answer.","93b15af0":"Once you're done with testing comments, we'll move on to understand how the model makes decisions.  Run the next code cell without changes.\n\nThe model assigns each of roughly 58,000 words a coefficient, where higher coefficients denote words that the model thinks are more toxic.  The code cell outputs the ten words that are considered most toxic, along with their coefficients.  ","2ee2fde5":"In the tutorial, you learned about six different types of bias.  In this exercise, you'll train a model with **real data** and get practice with identifying bias.  Don't worry if you're new to coding: you'll still be able to complete the exercise!\n\n# Introduction\n\nAt the end of 2017, the [Civil Comments](https:\/\/medium.com\/@aja_15265\/saying-goodbye-to-civil-comments-41859d3a2b1d) platform shut down and released their ~2 million public comments in a lasting open archive. Jigsaw sponsored this effort and helped to comprehensively annotate the data.  In 2019, Kaggle held the [Jigsaw Unintended Bias in Toxicity Classification](https:\/\/www.kaggle.com\/c\/jigsaw-unintended-bias-in-toxicity-classification\/overview) competition so that data scientists worldwide could work together to investigate ways to mitigate bias.\n\nThe code cell below loads some of the data from the competition.  We'll work with thousands of comments, where each comment is labeled as either \"toxic\" or \"not toxic\".\n\nBegin by running the next code cell.  \n- Clicking inside the code cell.\n- Click on the triangle (in the shape of a \"Play button\") that appears to the left of the code cell.\n\nThe code will run for approximately 30 seconds.  When it finishes, you should see as output a message saying that the data was successfully loaded, along with two examples of comments: one is toxic, and the other is not.\n\n> **Optional** note: The original competition data uses a toxicity score ranging from 0 to 1.  We've simplified this score to either 0 or 1 by thresholding the value: scores > 0.7 are assigned \"1\", scores < 0.3 are assigned \"0\", and comments with scores between 0.3 and 0.7 are dropped from the dataset.  Additionally, to reduce runtime, we have reduced the size of the dataset with subsampling. To preprocess the comments, we use a \"bag of words\" approach with `CountVectorizer()`.  Note that this is a simple approach, and in practice you'll want to spend time cleaning up the data.  Here's a great example for how to do that: https:\/\/www.kaggle.com\/christofhenkel\/how-to-preprocessing-for-glove-part1-eda","aebff9f0":"# 2) Most toxic words\n\nTake a look at the most toxic words from the code cell above.  Are you surprised to see any of them?  Are there any words that seem like they should not be in the list?","46f0a419":"# 5) Test your understanding\n\nWe'll step away from the Jigsaw competition data and consider a similar (but hypothetical!) scenario where you're working with a dataset of online comments to train a model to classify comments as toxic.\n\nYou notice that comments that refer to Islam are more likely to be toxic than comments that refer to other religions, because the online community is islamophobic.  What type of bias can this introduce to your model?\n\nOnce you have answered the question, run the next code cell to see the official answer.","0cac22f3":"Run the next code cell without changes to use the data to train a simple model.  The output shows the accuracy of the model on some test data."}}