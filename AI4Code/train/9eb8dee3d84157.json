{"cell_type":{"b4cef703":"code","865124b1":"code","06f4c2db":"code","f8c404b5":"code","e6aeb2f7":"code","c311f9be":"code","be659f1d":"code","0430b6ad":"code","e75358ad":"code","2d379c36":"code","9f728c65":"code","4bbf34f5":"code","682cd299":"markdown","7528e8aa":"markdown","eab0ee03":"markdown","6d3f5ef2":"markdown"},"source":{"b4cef703":"x = list(range(0,10))\nx","865124b1":"every_third = x[::3]\nevery_third","06f4c2db":"x_dup = x\ny = [10,11,12,13]\nx_dup.extend(y) #  incplace concatination","f8c404b5":"x_dup","e6aeb2f7":"x_dup = x + [100,101,102,103]     #temporary concatination\nx_dup","c311f9be":"def sum_and_product(x,y):\n    return (x+y),(x*y)     #returning sum and product as tuple","be659f1d":"sp = sum_and_product(2,3)\nprint(type(sp))\nprint(sp)\ns,p = sum_and_product(5,10)\nprint(type(s))\nprint(type(p))\nprint(s,p)","0430b6ad":"from collections import Counter\nmy_str = \"Welcome to Guru99 Tutorials!\"\nword_count = Counter(my_str)\nprint(word_count)\nword_count[\"o\"]","e75358ad":"for items in word_count:\n    print(f\"{items} : {word_count[items]}\")","2d379c36":"for word,count in word_count.most_comon(5):\n    print(f\"{word} : {count}\")","9f728c65":"set1 = {1,2,3,4,5}\nprint(set1)\nprint(type(set1))","4bbf34f5":"mystr = set(my_str)\nprint(mystr)","682cd299":"# Tuple Operations","7528e8aa":"# Counter","eab0ee03":"# List Operations","6d3f5ef2":"# Set Operations"}}