{"cell_type":{"c0968cad":"code","3e53a7fe":"code","cc1c1b92":"code","b65b28d3":"code","56c4e1f3":"code","521ca5b5":"code","0dd3156e":"code","45c42a8e":"code","1bf685fe":"code","1c0bf140":"code","9bcf8f87":"code","64d0b226":"markdown","df5c7b27":"markdown","87144fa2":"markdown","c13f9d22":"markdown","666f83d1":"markdown","4ce08c55":"markdown","8b3cedce":"markdown"},"source":{"c0968cad":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","3e53a7fe":"train_data = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain_data.head()","cc1c1b92":"test_data = pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest_data.head()","b65b28d3":"train_data.describe()","56c4e1f3":"train_data.isnull().sum()","521ca5b5":"train_data.dtypes","0dd3156e":"women = train_data.loc[train_data.Sex == 'female'][\"Survived\"]\nrate_women = sum(women)\/len(women)\n\nprint(\"% of women who survived:\", rate_women)","45c42a8e":"men = train_data.loc[train_data.Sex == 'male'][\"Survived\"]\nrate_men = sum(men)\/len(men)\n\nprint(\"% of men who survived:\", rate_men)","1bf685fe":"import seaborn as sns\nsns.countplot(x = 'Sex', data = train_data)","1c0bf140":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\n\n\n","9bcf8f87":"predictions = model.predict(X_test)\npredictions\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")\n","64d0b226":"Testing Data","df5c7b27":"Description Of Data","87144fa2":"**EXPLORATORY DATA ANALYSIS**","c13f9d22":"**IMPORT THE DATASETS**","666f83d1":"Training Data","4ce08c55":"**RANDOM FOREST CLASSIFIER MODEL**","8b3cedce":"**PREDICTION**"}}