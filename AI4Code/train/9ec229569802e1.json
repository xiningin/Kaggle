{"cell_type":{"a63ddbbc":"code","b9ceace8":"code","e0aa99f6":"code","2d66ddd3":"code","2b69f812":"code","10a432ca":"code","b3ee377d":"code","b8f80ce3":"code","1fe2ce3f":"code","c070a845":"code","fe8e1724":"code","77b56254":"code","9c16f912":"code","0cc7f7f1":"code","a2374562":"code","bd17afd6":"code","eafa28c6":"code","664b1732":"code","92402287":"code","e95682e2":"code","c72ad671":"code","f77a24f7":"code","e107929c":"code","3c0d5daa":"code","d2a00695":"code","b40624e2":"code","749d196a":"code","7f407b76":"code","85f8c807":"markdown","595a733c":"markdown","594c2e76":"markdown","d4b02720":"markdown","0e253d15":"markdown","34dcddbd":"markdown","51737a1f":"markdown","40f93915":"markdown","dc519d06":"markdown","65662f1a":"markdown","de51556b":"markdown","f33311c8":"markdown"},"source":{"a63ddbbc":"\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","b9ceace8":"train_data = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\")\ntrain_data.head()\ntest_data = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\")\ntest_data.head()","e0aa99f6":"train_data.shape","2d66ddd3":"train_data.corr()","2b69f812":"x = train_data._get_numeric_data() ","10a432ca":"X_ = x.drop(\"SalePrice\", axis = 1)\nX = X_[[\"OverallQual\",\"TotalBsmtSF\",\"GrLivArea\"]]","b3ee377d":"X.isnull().values.any()","b8f80ce3":"y = x[\"SalePrice\"]","1fe2ce3f":"y[0:3]","c070a845":"from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict#Train test ayr\u0131m\u0131","fe8e1724":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size = 0.20, random_state= 42)","77b56254":"X_train.shape\n","9c16f912":"X_valid.shape","0cc7f7f1":"y_train.shape","a2374562":"y_valid.shape","bd17afd6":"##Statsmodels\nimport statsmodels.api as sm ","eafa28c6":"model = sm.OLS(y_train, X_train).fit()\n","664b1732":"model.summary()","92402287":"#scikit-learn model\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error","e95682e2":"lm = LinearRegression()\nmodel = lm.fit(X_train, y_train)","c72ad671":"model.intercept_  ","f77a24f7":"model.coef_","e107929c":"new_data = [[6],[926],[1604]]\nnew_data = pd.DataFrame(new_data).T","3c0d5daa":"model.predict(new_data)","d2a00695":"rmse =np.sqrt(mean_squared_error(y_train,model.predict(X_train)))","b40624e2":"rmse","749d196a":"rmse =np.sqrt(mean_squared_error(y_valid,model.predict(X_valid)))","7f407b76":"rmse","85f8c807":"**INTORDUCTION**\n\nHi , my first work in Kaggle . I try predict PriceSale with multiple linear regression . \n\nPlease leave your comment.","595a733c":"And remove all categorical data ","594c2e76":"other coefficients","d4b02720":"I only worked on the train set.","0e253d15":"Missing value control","34dcddbd":"**equation formula\n**\n\nSalePrice = -98427.32987875215 + OverallQual*28203.61010365 + TotalBsmtSF*33.17354342 + GrLivArea*47.13601888\n\n\n","51737a1f":"1464 prediction","40f93915":"model fitting","dc519d06":"I chose the 3 variables with the most correlation . ( i predict GarageCars and GarageArea have missing value and i don't want deal with this in this project ) \n","65662f1a":"First of all i looked correlation between sale price  variables .","de51556b":"Statsmodels","f33311c8":"constant coefficient\n"}}