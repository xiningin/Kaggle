{"cell_type":{"fd6b58bb":"code","43e96d1f":"code","21a2150e":"code","7c3c31f3":"code","7d953a74":"code","a50e312d":"code","1c481f2a":"code","3427b99e":"code","6633880d":"code","60beeaaf":"code","829a03ae":"code","5e731544":"code","92d4a058":"code","6aaf61e3":"code","7dbd29b4":"code","ffc8ea31":"code","508003d3":"code","16a760a1":"code","0136ecd0":"code","a210b076":"code","910dea1b":"code","6e3bda53":"code","4276abb1":"code","8eeaa22a":"code","720eb676":"code","23bf7f15":"code","80a4622e":"code","85ef4666":"code","214a3741":"code","e16c9a61":"code","1dd38403":"code","53adc82c":"code","32a2ef95":"code","31d5e737":"code","bf927b87":"code","488c6171":"code","398c2735":"code","7decaaec":"code","0d988ba7":"code","dc258660":"code","70c147bb":"code","fecd7399":"code","942a96a3":"code","2bfc80e8":"code","b84f7758":"code","f9fcd2b1":"code","6abab2c2":"code","52e16b2f":"code","362d5570":"code","f0b5edbc":"code","4b3b6727":"code","51df15d3":"code","d7709c06":"code","a49c37b2":"code","ff93a77e":"code","10c7eff6":"code","00a6c7e8":"code","be572fdd":"code","5ddaf2b2":"markdown","178ed6eb":"markdown","6b6cd7a4":"markdown","de8f9481":"markdown","784c4038":"markdown","bbe44d9c":"markdown","bd1dcac8":"markdown","d1c4a5a3":"markdown","dad77cc3":"markdown","51fb4a5d":"markdown","ba195529":"markdown","0dce8570":"markdown","35d1ba38":"markdown","83e06a99":"markdown","23f36a06":"markdown","14e76d0f":"markdown","dc0c190e":"markdown","fb5d30a3":"markdown","91c07e42":"markdown","3825f0a4":"markdown","0149cd00":"markdown","6ada9820":"markdown","5f3f3954":"markdown","ab134670":"markdown","e14610d0":"markdown","8b8a5500":"markdown","813a01c3":"markdown","2929a1ec":"markdown","b8e9d721":"markdown","0f523d07":"markdown","52b980e1":"markdown","41e50d07":"markdown","9d2346bc":"markdown","efe943b3":"markdown","71c171f6":"markdown","47182140":"markdown","6789b7fe":"markdown","9cd34790":"markdown"},"source":{"fd6b58bb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nfrom warnings import filterwarnings\nfilterwarnings('ignore')\n\ndf=pd.read_csv('..\/input\/hotel-booking-demand\/hotel_bookings.csv')\ndf.head()","43e96d1f":"df.shape","21a2150e":"# Check for null values\ndf.isnull().sum()","7c3c31f3":"df.iloc[0]","7d953a74":"df.customer_type.value_counts()","a50e312d":"df.dtypes","1c481f2a":"df.company.value_counts()","3427b99e":"#Notice that adults and children and babies can not be zero at the same time \n#So, we need to check that\nprint(df.adults.unique())\nprint(df.children.unique())\nprint(df.babies.unique())\n","6633880d":"df.columns","60beeaaf":"df_copy=df.copy()","829a03ae":"df_copy.isnull().sum()","5e731544":"df_copy.agent.fillna('0',inplace=True)\ndf_copy.drop('company',axis=1,inplace=True)\ndf_copy.country.fillna('not mentioned',inplace=True)\ndf_copy.children.fillna(df.children.median(),inplace=True)\n","92d4a058":"df_copy.isnull().sum()","6aaf61e3":"Filter= (df_copy.adults==0) & (df_copy.children==0) & (df_copy.babies==0) \ndf_copy[Filter]","7dbd29b4":"df=df[~Filter]","ffc8ea31":"df_copy[Filter]","508003d3":"df_copy.is_canceled=df_copy.is_canceled.astype('category')\ndf_copy.agent=df_copy.agent.astype(str)\ndf_copy.drop('arrival_date_week_number',axis=1,inplace=True)","16a760a1":"df_copy.info()","0136ecd0":"df_copy.dtypes","a210b076":"df_copy['hotel'].value_counts().index.tolist()","910dea1b":"df_copy['hotel'].value_counts().plot(kind='pie',figsize=(6,6),fontsize=13,autopct='%1.1f%%',explode=(0, 0.1));","6e3bda53":"#This package imports definitions for all of Plotly's graph objects.\n#the module graph_objs is to provide a clearer API for users.\nimport plotly.graph_objs as go \n\n#Plotly Offline allows you to create graphs offline and save them locally.\n#Instead of saving the graphs to a server, your data and graphs will remain in your local system.\nfrom plotly.offline import plot, iplot, init_notebook_mode\ninit_notebook_mode(connected=True)\n#Plotly Express is the easy-to-use, high-level interface to Plotly\nimport plotly.express as px \n    ","4276abb1":"#Reset the index of the DataFrame, and use the default one instead.\ncountries_data=df_copy[df_copy['is_canceled']==0]['country'].value_counts().reset_index()\ncountries_data.columns=['country','no of guests']\ncountries_data.head()","8eeaa22a":"#A Choropleth Map is a map composed of colored polygons. \n#It is used to represent spatial variations of a quantity\n\npx.choropleth(countries_data,locations=countries_data['country'],\n              color=countries_data['no of guests'],\n             hover_name=countries_data['country'],\n             title='Home country of guests')","720eb676":"df_copy['hotel'].value_counts()","23bf7f15":"Resort=df_copy[(df_copy['hotel']=='Resort Hotel') & (df_copy['is_canceled']== 0)]\nCity=df_copy[(df_copy['hotel']=='City Hotel') & (df_copy['is_canceled']== 0)]\nprint(Resort.shape)\nprint(City.shape)","80a4622e":"Resort['country'].value_counts()[:15].plot(kind='bar');","85ef4666":"City['country'].value_counts()[:15].plot(kind='bar') \n","214a3741":"plt.figure(figsize=(12,8))\nsns.boxplot(x='reserved_room_type',y='adr',\n            data=df_copy[df_copy.is_canceled == 0] ,hue='hotel')\nplt.title('Price of the room per night',fontsize=15)\nplt.xlabel('Room type',fontsize=12)\nplt.ylabel('price in Euro',fontsize=12)\n","e16c9a61":"!pip install sort-dataframeby-monthorweek\n","1dd38403":"!pip install sorted-months-weekdays\n","53adc82c":"Resort.head()","32a2ef95":"City.head()","31d5e737":"Resort_Hotel=Resort.groupby('arrival_date_month')['adr'].mean().reset_index()\nCity_Hotel=City.groupby('arrival_date_month')['adr'].mean().reset_index()","bf927b87":"Resort_Hotel.head()","488c6171":"City_Hotel.head()","398c2735":"final=Resort_Hotel.merge(City_Hotel,on='arrival_date_month')\nfinal.columns=['month','resort_price','city_price']\nfinal","7decaaec":"# now we need to sort the months \nimport sort_dataframeby_monthorweek as sd\n\nfinal=sd.Sort_Dataframeby_Month(final,'month')\nfinal.head()","0d988ba7":"#A line chart is a graphical representation of an asset's historical price\n#action that connects a series of data points with a continuous line. \npx.line(final,x='month',y=['resort_price','city_price'],title='Room price per night over the year')","dc258660":"df_copy['meal'].value_counts()","70c147bb":"px.pie(df_copy,values=df_copy['meal'].value_counts(),names=df_copy['meal'].value_counts().index)","fecd7399":"df_copy.total_of_special_requests","942a96a3":"# countplot() method is used to Show the counts of observations\n#in each categorical bin using bars\nsns.countplot(df_copy['total_of_special_requests']);","2bfc80e8":"rush_resort=Resort.arrival_date_month.value_counts().reset_index()\nrush_resort.columns=['month','no of guests']\nrush_resort.head()","b84f7758":"rush_city=City.arrival_date_month.value_counts().reset_index()\nrush_city.columns=['month','no of guests']\nrush_city.head()","f9fcd2b1":"final_rush=rush_resort.merge(rush_city,on='month')\nfinal_rush.columns=['month','num of Resort guests','num of City guests']\nfinal_rush.head()","6abab2c2":"# now we nedd to sort the months \nimport sort_dataframeby_monthorweek as sd\n\nfinal_rush=sd.Sort_Dataframeby_Month(final_rush,'month')\nfinal_rush.head()","52e16b2f":"px.line(final_rush,x='month',y=['num of Resort guests','num of City guests'])","362d5570":"the_filter=df_copy['is_canceled']==0\nclean_data=df_copy[the_filter]","f0b5edbc":"clean_data.is_canceled.unique()","4b3b6727":"#to get the total numbers of days of the week\nclean_data['Total_nights']=clean_data['stays_in_weekend_nights']+ clean_data['stays_in_week_nights']","51df15d3":"clean_data.market_segment.value_counts()","d7709c06":"px.pie(clean_data,values=clean_data.market_segment.value_counts(),\n       names=clean_data.market_segment.value_counts().index,\n      title='bookings by market segment')","a49c37b2":"df_copy['customer_type'].value_counts()","ff93a77e":"df_copy['is_canceled'].value_counts()","10c7eff6":"#barplot shows the relationship between a numeric and a categoric variable. \nsns.barplot(x=df_copy['customer_type'],y=df_copy['is_canceled'].astype('int64'))","00a6c7e8":"sns.barplot(y=df_copy['days_in_waiting_list'],x=df_copy['is_canceled'].astype('int64'))","be572fdd":"sns.barplot(x=df_copy['deposit_type'],y=df_copy['is_canceled'].astype('int64'))","5ddaf2b2":"**City Hotel has more guests during spring and autumn althought the prices are high also**\n\n**in Resort hotel there are a slightly decrease in vistors in june and september and the highest months in vistors are Augest and july**\n\n**Augest is the highest month in vistors and in prices in both hotels**","178ed6eb":"**Booking with Non Refund deposit type are more likely to cancel the booking**","6b6cd7a4":"## Code","de8f9481":"- there are null values \n- is_canceled column should be categorial not integer\n- arrival_date_week_number column needed to be removed as it's not important\n- agent should be a string not integer\n- adults and children and babies can not be zero at the same time                          ","784c4038":"## Test","bbe44d9c":"This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and\/or babies, and the number of available parking spaces, among other things.\n\nAll personally identifying information has been removed from the data.","bd1dcac8":"**from the map above and the bar plots we can conclude that most of the guests comes from Europe especially in PRT(Portugal)** ","d1c4a5a3":"**we can conclude that most of the customers ( nearly 50% ) doesn't have special request**","dad77cc3":"## Gathering","51fb4a5d":"**Transient customer type are more likely to cancel the booking more than the other types**","ba195529":"# Cleaning","0dce8570":"**as days in waiting list increase the booking is more likely to be cancelled**","35d1ba38":"# Description","83e06a99":"**we can conclude that the type A room has the highest price among all other room types ( as it has the highest outlier) and in type G room it's obvious that this type of room are more costly than the others**","23f36a06":"## bookings by market segment","14e76d0f":"## Define\n\nthere are null values in country and agent and company columns\n\n- when agent data is null this means that booking is done without the help of a travel agency\n- when company is null this means that it may be private and since 90% of the data is null we will drop the column\n- The null values in company will be changed to not mentioned\n","dc0c190e":"## Test","fb5d30a3":"**we can conclude from here that most of the customers prefer BB (Bed & Breakfast)**","91c07e42":"- is_canceled column should be categorial not integer\n- arrival_date_week_number column needed to be removed as it's not important\n- agent should be a string not integer","3825f0a4":"## Code","0149cd00":"## Define","6ada9820":"## Define","5f3f3954":"**it's obvious that the room price in Resort hotel is at it's peak in Auguest while the City hotel room price is at it's peak in Auguest and may**","ab134670":"## Assessing Results","e14610d0":"## Analysing Preference of guests, what they basically prefer?","8b8a5500":"## Where do the guests come from?","813a01c3":"## Test","2929a1ec":"## What is the most busy month?","b8e9d721":"## Code","0f523d07":"## What type of Hotel has more bookings?","52b980e1":"## How much guests pay for a room per night?","41e50d07":"#### it's obvious that City hotels contains the majority of bookings","9d2346bc":"- adults and children and babies can not be zero at the same time                          ","efe943b3":"## Analysis of cancellation","71c171f6":"# Analysis","47182140":"## Assessing","6789b7fe":"## How does price of hotel vary across the year?","9cd34790":"**we conclude that about of 47.5% of customers make bookings by online TA (Travel Agents)**"}}