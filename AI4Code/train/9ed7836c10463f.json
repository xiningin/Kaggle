{"cell_type":{"acf983de":"code","ae946379":"code","adfaf999":"code","6b763af1":"code","ac5f2bc7":"code","82007b96":"code","c00ccd26":"code","2120de6c":"code","f6d13c26":"code","d545adcb":"code","49d494c0":"code","273a8839":"code","149a81bb":"code","8b3caf57":"code","4a5e9926":"code","c91c35ed":"code","6ecc272e":"code","661e46f7":"code","3ca8fd57":"code","86a7944f":"code","982e69db":"code","b767c1d9":"code","d403a090":"code","81853f4c":"code","1a46be91":"code","0145655f":"markdown","287b6ab1":"markdown","23284f56":"markdown","804cb354":"markdown","baff9b93":"markdown","75b50bcc":"markdown","651876f7":"markdown","a37afa5a":"markdown","4d6ea2f1":"markdown","91c3d000":"markdown","3399cb6d":"markdown","791d2102":"markdown","867d9f46":"markdown","203b32eb":"markdown","baf7461d":"markdown","514cb8af":"markdown","b7eac3dd":"markdown","0b82ab71":"markdown","52193147":"markdown","549e5c27":"markdown","b363504e":"markdown","1cc8c792":"markdown","417b82a8":"markdown","a1bda9af":"markdown","1f38ff9a":"markdown","e1d3c52c":"markdown","5fa893f8":"markdown"},"source":{"acf983de":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option('display.max_colwidth', -1)","ae946379":"data = pd.read_csv('\/kaggle\/input\/unemloyment\/UNRATE.csv', header = None)\ndata.columns = ['Month','Unemployment']\ndata['Month'] = pd.to_datetime(data['Month'], format='%d-%m-%Y')\ndata = data.set_index('Month')\ndata.head(12)","adfaf999":"data.plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='best')\nplt.title('Unemployment')\nplt.show(block=False)","6b763af1":"import seaborn as sns\nfig = plt.subplots(figsize=(20, 5))\nax = sns.boxplot(x=data['Unemployment'],whis=1.5)","ac5f2bc7":"fig = data.Unemployment.hist(figsize = (20,5))","82007b96":"from pylab import rcParams\nimport statsmodels.api as sm\nrcParams['figure.figsize'] = 20, 10\ndecomposition = sm.tsa.seasonal_decompose(data.Unemployment, model='additive') # additive seasonal index\nfig = decomposition.plot()\nplt.show()","c00ccd26":"decomposition = sm.tsa.seasonal_decompose(data.Unemployment, model='multiplicative') # multiplicative seasonal index\nfig = decomposition.plot()\nplt.show()","2120de6c":"train_len = 612\ntrain = data[0:train_len] # first 612 months as training set\ntest = data[train_len:] # last 255 months as out-of-time test set","f6d13c26":"data['Unemployment'].plot(figsize=(20, 5))\nplt.grid()\nplt.legend(loc='Unemployment')\nplt.title('Unemployment')\nplt.show(block=False)","d545adcb":"from statsmodels.tsa.stattools import adfuller\nadf_test = adfuller(data['Unemployment'])\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","49d494c0":"from statsmodels.tsa.stattools import kpss\nkpss_test = kpss(data['Unemployment'])\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","273a8839":"from scipy.stats import boxcox\ndata_boxcox = pd.Series(boxcox(data['Unemployment'], lmbda=0), index = data.index)\n\ndata['Unemployment'].plot(figsize=(20, 5))\nplt.grid()\nplt.plot(data_boxcox, label='After Box Cox tranformation')\nplt.legend(loc='best')\nplt.title('After Box Cox transform')\nplt.show()","149a81bb":"data_boxcox_diff = pd.Series(data_boxcox - data_boxcox.shift(), data.index)\nplt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(data_boxcox_diff, label='After Box Cox tranformation and differencing')\nplt.legend(loc='best')\nplt.title('After Box Cox transform and differencing')\nplt.show()","8b3caf57":"data_boxcox_diff.dropna(inplace=True)","4a5e9926":"data_boxcox_diff.tail()","c91c35ed":"adf_test = adfuller(data_boxcox_diff)\n\nprint('ADF Statistic: %f' % adf_test[0])\nprint('Critical Values @ 0.05: %.2f' % adf_test[4]['5%'])\nprint('p-value: %f' % adf_test[1])","6ecc272e":"kpss_test = kpss(data_boxcox_diff)\n\nprint('KPSS Statistic: %f' % kpss_test[0])\nprint('Critical Values @ 0.05: %.2f' % kpss_test[3]['5%'])\nprint('p-value: %f' % kpss_test[1])","661e46f7":"from statsmodels.graphics.tsaplots import plot_acf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_acf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","3ca8fd57":"from statsmodels.graphics.tsaplots import plot_pacf\nplt.figure(figsize=(20,5))\nplt.grid()\nplot_pacf(data_boxcox_diff, ax=plt.gca(), lags = 30)\nplt.show()","86a7944f":"train_data_boxcox = data_boxcox[:train_len]\ntest_data_boxcox = data_boxcox[train_len:]\ntrain_data_boxcox_diff = data_boxcox_diff[:train_len-1]\ntest_data_boxcox_diff = data_boxcox_diff[train_len-1:]","982e69db":"train_data_boxcox_diff[:5]","b767c1d9":"from statsmodels.tsa.arima_model import ARIMA\nmodel = ARIMA(train_data_boxcox_diff, order=(0, 0, 1)) \nmodel_fit = model.fit()\nprint(model_fit.params)","d403a090":"y_hat_ma = data_boxcox_diff.copy()\ny_hat_ma['ma_forecast_boxcox_diff'] = model_fit.predict(data_boxcox_diff.index.min(), data_boxcox_diff.index.max())\ny_hat_ma['ma_forecast_boxcox'] = y_hat_ma['ma_forecast_boxcox_diff'].cumsum()\ny_hat_ma['ma_forecast_boxcox'] = y_hat_ma['ma_forecast_boxcox'].add(data_boxcox[0])\ny_hat_ma['ma_forecast'] = np.exp(y_hat_ma['ma_forecast_boxcox'])","81853f4c":"plt.figure(figsize=(20,5))\nplt.grid()\nplt.plot(data['Unemployment'][:train_len], label='Train')\nplt.plot(data['Unemployment'][train_len:], label='Test')\nplt.plot(y_hat_ma['ma_forecast'][test.index.min():], label='Moving average forecast')\nplt.legend(loc='best')\nplt.title('Moving Average Method')\nplt.show()","1a46be91":"from sklearn.metrics import mean_squared_error\nrmse = np.sqrt(mean_squared_error(test['Unemployment'], y_hat_ma['ma_forecast'][test.index.min():])).round(2)\nmape = np.round(np.mean(np.abs(test['Unemployment']-y_hat_ma['ma_forecast'][test.index.min():])\/test['Unemployment'])*100,2)\n\nresults =  pd.DataFrame({'Method':['Moving Average (MA) method'], 'RMSE': [rmse],'MAPE': [mape] })\nresults = results[['Method', 'RMSE', 'MAPE']]\nresults","0145655f":"### Recover original time series","287b6ab1":"# Time series analysis","23284f56":"## Import time series data: Unemployment","804cb354":"## Partial autocorrelation function (PACF)","baff9b93":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","75b50bcc":"### Box plot and interquartile range","651876f7":"### Multiplicative seasonal decomposition","a37afa5a":"### Augmented Dickey-Fuller (ADF) test","4d6ea2f1":"### Box Cox transformation to make variance constant","91c3d000":"## Plot time series data","3399cb6d":"# Build and evaluate time series forecast","791d2102":"## Autocorrelation function (ACF)","867d9f46":"# Auto Regressive methods","203b32eb":"# Initial setup","baf7461d":"## Split time series data into training and test set","514cb8af":"## Stationarity vs non-stationary time series","b7eac3dd":"### Differencing to remove trend","0b82ab71":"### Histogram plot","52193147":"### Augmented Dickey-Fuller (ADF) test","549e5c27":"### Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test","b363504e":"## Import required packages","1cc8c792":"## Moving average method (MA)","417b82a8":"### Calculate RMSE and MAPE","a1bda9af":"## Outlier detection","1f38ff9a":"## Time series Decomposition","e1d3c52c":"### Plot train, test and forecast","5fa893f8":"### Additive seasonal decomposition"}}