{"cell_type":{"b9c9a014":"code","94c05bd4":"code","06f86381":"code","b66b5677":"code","1859e8c3":"code","a5fcfa47":"code","923bced2":"markdown","3f5ec91a":"markdown","df72b139":"markdown","da913123":"markdown","678f1ee6":"markdown","611cb923":"markdown","4f08faf0":"markdown","5b6a10d6":"markdown","310bb7fb":"markdown","3ebfc966":"markdown"},"source":{"b9c9a014":"import pandas as pd\n\ndf = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","94c05bd4":"%%time\n\nfor index, row in df.iterrows():\n    # Something\n    _ = index\n    _ = row[\"PassengerId\"]","06f86381":"!pip install df4loop","b66b5677":"%%time\n\nfrom df4loop import DFIterator\n\ndf_iterator = DFIterator(df)","1859e8c3":"%%time\n\nfor index, row in df_iterator.iterrows():\n    # Something\n    _ = index\n    _ = row[\"PassengerId\"]","a5fcfa47":"df_iterator = DFIterator(df)\nfor row in df_iterator.iterrows(return_indexes=False):\n    # Something\n    _ = row[\"PassengerId\"]","923bced2":"## Abstract\n\n[df4loop](https:\/\/pypi.org\/project\/df4loop\/) makes \"df.iterrows()\" users happy! \nSpecifically, using a library called df4loop speeds up the processing you want to execute in `df.iterrows()` by 194 times!!!!!!!!!!","3f5ec91a":"## Appendix","df72b139":"## Background\n\nHave you ever written or wanted to write the following code? This is the code to get a dataframe values by row. Great code that is intuitive and easy to understand. \n\n```python\n%%time\n\nfor index, row in df.iterrows():\n    # Something\n    _ = index\n    _ = row[\"PassengerId\"]\n```\n\nBut when I was working on \"something\", I needed to do something faster. Therefore, I will introduce a library \"df4loop\" that speeds up processing while keeping the description easy to understand to some extent.","da913123":"There are some cases in \"df.iterrows()\" users that do not require index. \nIf you do not need to output the index, set `return_indexes=False`.\n","678f1ee6":"### Preparation","611cb923":"If you want to process the data and regenerate Df, you can do it by using DFGenerator in df4loop.\n\nSee below for more information.\n\n- https:\/\/pypi.org\/project\/df4loop\/\n- https:\/\/github.com\/daikikatsuragawa\/df4loop","4f08faf0":"### Processing using df4loop","5b6a10d6":"The execution time of the loop itself was 75.5 ms for \"df.iterrows()\" and 389 \u00b5s for \"df4loop\". It's much faster to use df4loop. \n\n**df4loop has succeeded in speeding up processing by about 194 times!!!!!!!!!!**\n\nImporting the library takes time, but it's still fast. It is worth considering the use of df4loop.","310bb7fb":"### Processing to compare (df.iterrows())","3ebfc966":"## df4loop introduction and performance experiment"}}