{"cell_type":{"2c489f90":"code","6f319504":"code","ec24bcf7":"code","371d8e16":"code","98d71a80":"code","51a96c6e":"code","41956bcf":"code","4148c81e":"code","53d5f82d":"code","6d4821a6":"markdown","9bf31d57":"markdown","b6eeb4be":"markdown"},"source":{"2c489f90":"import numpy as np \nimport pandas as pd ","6f319504":"# Read files\nfile = open('\/kaggle\/input\/melanoma-skin-lesion-id-ph2-data\/PH2_dataset.txt')\ndata1 = file.read()","ec24bcf7":"# Fix header\nhead = data1.split('\\n')[0].split('|')\nprint(f'Original: len({len(head)})\\n',head)\n\n\nhead = [val.strip() for val in head if len(val) > 2]\nprint(f'\\nClean: len({len(head)})\\n',head)","371d8e16":"# Extract data \ndf = pd.DataFrame(columns=head) # make new dataframe\n\ndata_lines = data1.split('\\n')[1:-25] # remove head and remove \"Legends for data\" in the end\n\nfor line in data_lines:\n    # extract data\n    line = line.split('|')\n    row = [val.strip() for val in line if len(val) > 2]\n    \n    # make a new row for dataframe\n    new_row = dict(zip(head, row))\n    \n    # add row to dataframe\n    df = df.append(new_row, ignore_index=True)\ndf","98d71a80":"df.to_csv('PH2_metainfo_1.csv')","51a96c6e":"# read xlsx file\ndata2 = pd.read_excel('\/kaggle\/input\/melanoma-skin-lesion-id-ph2-data\/PH2_dataset.xlsx')\n\n# extract head row\nhead = data2.iloc[11].values\n\n# drop \"Legends for data\"\nbroken_df = data2.drop(np.arange(12))\nbroken_df.columns = head\n\n# make new dataframe\ndf = pd.DataFrame(columns=head)\ndf = pd.concat([df, broken_df], ignore_index=True)\ndf","41956bcf":"df.to_csv('PH2_metainfo_2.csv')","4148c81e":"print('Legends for metadata-1:\\n')\ndata1.split('\\n')[-25:]","53d5f82d":"print('Legends for metadata-2:')\nprint('not really interpretable =(')\ndata2[:11]","6d4821a6":"## Translate txt to csv","9bf31d57":"## Fix xlsx ","b6eeb4be":"## Store legends separately "}}