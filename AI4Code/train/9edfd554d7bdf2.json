{"cell_type":{"b503ed83":"code","71768630":"code","8a5bf6be":"code","f32c740d":"code","109646a6":"code","deabab23":"code","52336783":"code","e994f516":"code","3271d3b6":"code","8f72055e":"code","8d61b146":"code","debc460f":"code","9accf432":"code","e1bf0bb9":"code","087b4598":"code","2404207a":"code","b79cf96b":"code","8a40f8d5":"code","ef8a2beb":"code","b99e9626":"code","ce298658":"code","2d7ae4c3":"code","690dece1":"code","f2f5ec83":"code","d3e44e44":"code","7334eb52":"code","62748f4e":"code","d2750f26":"code","ec0f886b":"code","35b906f2":"code","9c5b9d8f":"code","1261d211":"code","797811a4":"code","3f4afd8d":"code","6b0ae236":"code","23883f7c":"code","76c7a2f5":"code","00e21632":"code","8fcc63b5":"code","dd7310d5":"code","9c6da8c5":"code","2ae7893f":"code","05fced5c":"code","f03c04d2":"markdown","eabaf501":"markdown","1f2eb0af":"markdown","62e2f314":"markdown","2b720a70":"markdown","3fbb8052":"markdown","8d03454c":"markdown","29606813":"markdown","6fcb8c92":"markdown","32033cc4":"markdown","81374ae7":"markdown","ffbdc4c4":"markdown","84f58d13":"markdown","d48f269b":"markdown","040dfcee":"markdown","7344ac11":"markdown","b1c87d21":"markdown","b7b0017d":"markdown","38e7d5e8":"markdown","4c804448":"markdown","e416c388":"markdown","3296ae04":"markdown","47174656":"markdown","1d0dce9f":"markdown","9f460065":"markdown","c9641828":"markdown","b1d13160":"markdown","530c10cb":"markdown","a037197d":"markdown","b116fb59":"markdown","1fefb349":"markdown","93697a4d":"markdown","44e583c0":"markdown","f0e7ef93":"markdown","6a535afb":"markdown","6221061e":"markdown","5766e22f":"markdown","1e411799":"markdown","b3b2028c":"markdown","601916ff":"markdown","517adcbd":"markdown","b127a251":"markdown","69a53716":"markdown","380703f2":"markdown","17d3d4a3":"markdown","77da73ca":"markdown"},"source":{"b503ed83":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","71768630":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nfrom xgboost import XGBClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom imblearn.over_sampling import SMOTE\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\ninit_notebook_mode(connected=True)","8a5bf6be":"df = pd.read_csv(\"\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv\")\ndf.drop('id',axis=1,inplace=True)\ndf.head()","f32c740d":"df.shape","109646a6":"print(f'We have {df.shape[0]} instance with the {df.shape[1]-1} features and 1 output variable')","deabab23":"df.info()","52336783":"y = df.stroke\nprint(y.value_counts())","e994f516":"print(f'Percentage of patient had a stroke: {round(y.value_counts(normalize=True)[1]*100,2)} % --> ({y.value_counts()[1]} patient)\\nPercentage of patient did not have a stroke: {round(y.value_counts(normalize=True)[0]*100,2)} % --> ({y.value_counts()[0]} patient)')\n","3271d3b6":"px.histogram(df, x=\"stroke\", title='Stroke', width=400, height=400)","8f72055e":"# missing values\ndf.isnull().sum()","8d61b146":"categorical = ['gender', 'hypertension', 'heart_disease', 'ever_married',\n'work_type', 'Residence_type', 'smoking_status']\n\nnumerical = ['age','avg_glucose_level', 'bmi']","debc460f":"df[numerical].describe()","9accf432":"#skewness\ndf[numerical].skew()","e1bf0bb9":"df[numerical].hist(figsize=(8,6));","087b4598":"fig = px.histogram(df, x=\"gender\", title='Gender', width=400, height=400)\nfig.show()","2404207a":"fig = px.histogram(df, x=\"hypertension\", title='hypertension', width=400, height=400)\nfig.show()","b79cf96b":"print (f'{round(df[\"hypertension\"].value_counts(normalize=True)*100,2)}')","8a40f8d5":"print (f'{round(df[\"heart_disease\"].value_counts(normalize=True)*100,2)}')\nfig = px.histogram(df, x=\"heart_disease\", title='Heart disease', width=400, height=400)\nfig.show()","ef8a2beb":"print (f'{round(df[\"ever_married\"].value_counts(normalize=True)*100,2)}')\nfig = px.histogram(df, x=\"ever_married\", title='Ever married', width=400, height=400)\nfig.show()","b99e9626":"print (f'{round(df[\"work_type\"].value_counts(normalize=True)*100,2)}')\nfig = px.histogram(df, x=\"work_type\", title='Work type', width=400, height=400)\nfig.show()","ce298658":"print (f'{round(df[\"smoking_status\"].value_counts(normalize=True)*100,2)}')\nfig = px.histogram(df, x=\"smoking_status\", title='smoking_status', width=400, height=400)\nfig.update_layout(xaxis={'categoryorder':'total descending'})\nfig.show()","2d7ae4c3":"\nprint (f'A person with hypertension has a probability of {round(df[df[\"hypertension\"]==1][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person without hypertension has a probability of  {round(df[df[\"hypertension\"]==0][\"stroke\"].mean()*100,2)} % get a stroke')","690dece1":"fig = px.histogram(df, x=\"hypertension\", color=\"stroke\",width=400, height=400)\nfig.show()","f2f5ec83":"\nprint (f'A female person has a probability of {round(df[df[\"gender\"]==\"Female\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A male person has a probability of {round(df[df[\"gender\"]==\"Male\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person from  the other category of gender has a probability of {round(df[df[\"gender\"]==\"Other\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nfig = px.histogram(df, x=\"gender\", color=\"stroke\",width=400, height=400)\nfig.show()","d3e44e44":"print (f'A person with heart disease has a probability of {round(df[df[\"heart_disease\"]==1][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person without heart disease has a probability of {round(df[df[\"heart_disease\"]==0][\"stroke\"].mean()*100,2)} % get a stroke')\n\nfig = px.histogram(df, x=\"heart_disease\", color=\"stroke\",width=400, height=400)\nfig.show()","7334eb52":"\nprint (f'A person married (or married before) has a probability of {round(df[df[\"ever_married\"]==\"Yes\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person never married has a probability of {round(df[df[\"ever_married\"]==\"No\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nfig = px.histogram(df, x=\"ever_married\", color=\"stroke\",width=400, height=400)\nfig.show()","62748f4e":"print (f'A formerly smoked person has a probability of {round(df[df[\"smoking_status\"]==\"formerly smoked\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person never smoked has a probability of {round(df[df[\"smoking_status\"]==\"never smoked\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person smokes has a probability of {round(df[df[\"smoking_status\"]==\"smokes\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\nprint (f'A person whom smoking history is not known,has a probability of {round(df[df[\"smoking_status\"]==\"Unknown\"][\"stroke\"].mean()*100,2)} % get a stroke')\n\nprint()\n\n\nfig = px.histogram(df, x=\"smoking_status\", color=\"stroke\",width=600, height=600)\nfig.show()","d2750f26":"df[numerical].corr()","ec0f886b":"fig = px.scatter(df,x=\"age\",y=\"bmi\",title=\"Age & BMI\",color=\"stroke\")\nfig.show()","35b906f2":"enc = LabelEncoder()","9c5b9d8f":"gender=enc.fit_transform(df['gender'])\nsmoking_status=enc.fit_transform(df['smoking_status'])\nwork_type=enc.fit_transform(df['work_type'])\nResidence_type=enc.fit_transform(df['Residence_type'])\never_married=enc.fit_transform(df['ever_married'])","1261d211":"df['ever_married']=ever_married\ndf['Residence_type']=Residence_type\ndf['smoking_status']=smoking_status\ndf['gender']=gender\ndf['work_type']=work_type","797811a4":"df.head()","3f4afd8d":"#lets fill the missing values in \"bmi\" column\ndf['bmi'] = df['bmi'].fillna(df['bmi'].mean())","6b0ae236":"df.isnull().sum()","23883f7c":"#lets make age column int\ndf['age']=df['age'].astype('int')","76c7a2f5":"df.info()","00e21632":"X = df.drop('stroke',axis=1)\ny = df[\"stroke\"]","8fcc63b5":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=123)","dd7310d5":"sc = StandardScaler()","9c6da8c5":"X_train = sc.fit_transform(X_train)\nX_test = sc.transform(X_test)","2ae7893f":"\nprint(\"Before OverSampling, counts of label '1': {}\".format(sum(y_train==1)))\nprint(\"Before OverSampling, counts of label '0': {} \\n\".format(sum(y_train==0)))\n\nsm = SMOTE(random_state=2)\nX_train_res, y_train_res = sm.fit_resample(X_train, y_train.ravel())\n\nprint('After OverSampling, the shape of train_X: {}'.format(X_train_res.shape))\nprint('After OverSampling, the shape of train_y: {} \\n'.format(y_train_res.shape))\n\nprint(\"After OverSampling, counts of label '1': {}\".format(sum(y_train_res==1)))\nprint(\"After OverSampling, counts of label '0': {}\".format(sum(y_train_res==0)))","05fced5c":"xgb_model = XGBClassifier()\nxgb_model.fit(X_train_res, y_train_res)\nprint('Training Score: {}'.format(xgb_model.score(X_train_res, y_train_res)))\n\nprint('Test Score: {}'.format(xgb_model.score(X_test, y_test)))","f03c04d2":"# Handeling imbalance data","eabaf501":"<ul>\n    <li>Based on the result, age has slight left skew, other two features have right tail, positively skewed shape distribution.<\/li>","1f2eb0af":"<ul>\n    <li>In \"bmi\" column we have 201 datapoints missing","62e2f314":"<ul>\n    <li>We have 276 patients with heart disease which is 5.4% of the sample.<\/li>","2b720a70":"<li>There are differeneces based on the smoking habits.<\/li>\n<li>A formerly smoked person has a probability to get stroke 1.66 times more than person never smoked.<\/li>\n<li>A person smokes has a a probability to get stroke 1.11 times more than person never smoked.<\/li>\n<li>It is smal difference between who smokes and who does not smoke in regard to probability of getting stroke.<\/li>","3fbb8052":"<h4>Data is now balanced ;) <\/h4>","8d03454c":"<ul>\n  <li>As we can see , in our dataset we have both Numarical as we as categorical variables<\/li>\n  <li>\"Stroke\" is our target variable<\/li>\n  <li>In target variable 1 is for positive cases(has stroke),0 for negative case(doesn't have stroke)<\/li>\n    <li>We have to encode categorical variables into numerical variable.<\/li>\n    <li>In dataset in \"bmi\" column we have null values<\/li>\n<\/ul>","29606813":"<h4>Smoking<\/h4>","6fcb8c92":"<ul>\n    <li>We have 2994 female and 2115 male and 1 other gender people<\/li>","32033cc4":"<li>As we have seen, stroke probability for those who has hypertension are quite different than for those who don't.<\/li>\n<li>%13.2 and %3.9 respectively<\/li>\n<li>It means that person with hypertension are almost 3.3 time more likely to get stroke than the ones who don't have hypertension.<\/li>","81374ae7":"# Stroke Prediction Dataset","ffbdc4c4":"<li>3353 people have been married and 1757 people are not married before.<\/li>","84f58d13":"<h4>Gender & Stroke<\/h4>","d48f269b":"<h4>Heart Disease<\/h4>","040dfcee":"<ul style=\"list-style-type:square;\">\n  <li>Let's separate numarical and categorical features <\/li>\n<\/ul>\n","7344ac11":"<h4>Age & BMI<\/h4>","b1c87d21":"<li>There is very small positive correlaation between numerical features<\/li>","b7b0017d":"<h4> We will be using SMOTE technique to handle the imbalance data<\/h4>","38e7d5e8":"<ul>\n    <li>Almost 95% of the instance of our target variable is 'No stroke',that is 4861 patients does not have a stroke<\/li>\n    <li>5% of instance of out target variable is \"Stroke\",that is 249 patients have Stroke.<\/li>\n    <li>This is imbalance data<\/li>","4c804448":"<h4>Hypertension<\/h4>","e416c388":"# Modeling","3296ae04":"1. id :unique identifier\n\n2. gender: \"Male\", \"Female\" or \"Other\"\n\n3. age: age of the patient\n\n4. hypertension: 0 if the patient doesn't have hypertension, 1 if the patient has hypertension\n\n5. heart_disease: 0 if the patient doesn't have any heart diseases, 1 if the patient has a heart disease\n\n6. ever_married: \"No\" or \"Yes\"\n\n7. work_type: \"children\", \"Govt_jov\", \"Never_worked\", \"Private\" or \"Self-employed\"\n\n8. Residence_type: \"Rural\" or \"Urban\"\n\n9. avg_glucose_level: average glucose level in blood\n\n10. bmi: body mass index\n\n11. smoking_status: \"formerly smoked\", \"never smoked\", \"smokes\" or \"Unknown\"*\n\n12. stroke: 1 if the patient had a stroke or 0 if not\n\n","47174656":"<li>1892 people are 'never smoked'<\/li>\n<li>789 people are 'smoke'<\/li>\n","1d0dce9f":"<h4>Smoking & Stroke<\/h4>","9f460065":"<h4>Married<\/h4>","c9641828":"<li>From this view , we can say that the patient having age more than 40 and bmi between 15-60 are likely to have stroke.<\/li>","b1d13160":"<ul>\n    <li>we have 4612 patients who don't have hypertension<\/li>\n    <li> and 498 patients who have hypertension<\/li>\n    <\/ul>","530c10cb":"# EDA","a037197d":"<h4>Heart Disease & Stroke<\/h4>","b116fb59":"# Bivariate Analysis","1fefb349":"As we can see :-\n<ul>\n  <li>Slightly left skew on the 'age' (mean: 43.22 & median: 45)\n<\/li>\n  <li>Slightly right skew on the 'bmi' (mean: 28.89 & median: 28.10)\n<\/li>\n  <li>And right skew distribution on the 'avg_glucose_level' (mean: 106.14 & median: 91.88)\n\n<\/li>\n<\/ul>","93697a4d":"<li>2925 people work in the private sector.<\/li>\n<li>819 people are self-employed<\/li>\n<li>657 people work at the government job.<\/li>","44e583c0":"# Splitting the data into training and testing","f0e7ef93":"# Correlation matrix & Scatter Plot","6a535afb":" <h2>Let's work on Numerical Features<\/h2>","6221061e":"## Standard scalar ","5766e22f":"<li>Male compare to female are more likelyto get stroke, but difference between female and male is very small.<\/li>","1e411799":"## Thanks for reading!! Please upvote if you like it ;)","b3b2028c":"## Label Encoder","601916ff":"# Context\n\n    According to the World Health Organization (WHO) stroke is the 2nd leading cause of death globally, responsible for approximately 11% of total deaths. This dataset is used to predict whether a patient is likely to get stroke based on the input parameters like gender, age, various diseases, and smoking status. Each row in the data provides relavant information about the patient.\n","517adcbd":"## importing the libraries","b127a251":"<Li>As we have seen, stroke probability for those who has heart disease are quite different than for those who don't.<\/li>\n<li>17.03% and 4.18% respectively<\/li>\n<li>It means that person with heart diease are 4.07 times more likely to get stroke than the ones who don't have heart disease.<\/li>","69a53716":"<h4>Married & Stroke<\/h4>","380703f2":"<li>person is married(or married before) are 5.7 times more likely to get stroke than the ones who don't have marriage history.<\/li>","17d3d4a3":"\n<h2>Let's work on Categorical Features<\/h2>","77da73ca":"# Attribute information"}}