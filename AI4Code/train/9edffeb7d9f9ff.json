{"cell_type":{"620a347d":"code","fb4ad042":"code","f46f0470":"code","4a8b5e98":"code","0a772bd3":"code","7b486649":"code","1fcdc3f1":"code","29c2abd1":"code","9d044566":"code","232a6164":"code","fc128bcd":"code","93578303":"code","8e1208d0":"code","24276c8e":"code","b721561e":"code","30d0f4e8":"code","ba8c616a":"code","c7bb16bc":"code","ffdc556a":"code","6de826d9":"code","741babeb":"code","ce5dc938":"code","f2b89070":"code","132f425e":"code","fea5ff48":"code","513b83ae":"code","495b07e3":"code","efb2e328":"code","92a0e008":"code","c11fb605":"code","46d2e0ed":"code","65463120":"code","cb1baf32":"code","8e2f0dd4":"code","97ef083a":"code","83ef7550":"code","09e21e8f":"code","8ae00e32":"code","980e06f1":"code","fb58a04c":"code","7655b4f6":"code","b0964b02":"code","f4abf5de":"code","54104c4b":"code","552eed54":"code","6fb1aea4":"code","be8bb746":"code","79fd011a":"code","02d74eef":"code","8087faf2":"code","74b7de2b":"code","10facccb":"code","068db620":"code","0244aaea":"code","15e443a4":"code","ffaab921":"code","e25fb9e2":"code","cedcdfdd":"code","2ffe03b8":"code","86e26489":"code","98c840d7":"code","911fe130":"code","7b1c4669":"code","a109fe66":"code","c2fd2964":"code","d56cb5ff":"code","082f900e":"code","62c081fd":"code","c4e39c53":"code","007ee433":"markdown","7555f4ee":"markdown","b9f22a62":"markdown","296501fa":"markdown","43915424":"markdown","5c0b01d0":"markdown","79505fdc":"markdown","100bc5b0":"markdown","a052fc37":"markdown","3eddb5d0":"markdown","1ad08106":"markdown","b5666333":"markdown","72bd6389":"markdown","86b05d63":"markdown","bc0abd01":"markdown","e257fe99":"markdown","2a4508e3":"markdown","0b0137f1":"markdown","cd601b44":"markdown","74657023":"markdown","a87d7d4c":"markdown","2e08865d":"markdown","f170c55c":"markdown","9bba5991":"markdown","18cb7345":"markdown","3109e722":"markdown","b571c2a4":"markdown","1705bcc4":"markdown","0c773352":"markdown","cc4cb295":"markdown","9a2afd8f":"markdown","6e9dd515":"markdown","53f7f59e":"markdown","66660e2c":"markdown","d6613f06":"markdown","12f02ff5":"markdown","579890ff":"markdown","4f4e772e":"markdown","a2b2e9bc":"markdown","d04f57e1":"markdown","e63f4ec0":"markdown","73ea1c45":"markdown","e00fa8d6":"markdown","8be16fd2":"markdown","00b1c985":"markdown","b502264b":"markdown","7db496d5":"markdown","47d86224":"markdown","4141785e":"markdown","86548610":"markdown","954bea16":"markdown","e007f3e4":"markdown","231242b9":"markdown","afb403f4":"markdown","027394c9":"markdown","91ac1fb7":"markdown","6ce1404e":"markdown"},"source":{"620a347d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport json\n\nfrom bokeh.io import output_notebook, show\nfrom bokeh.plotting import figure\nfrom bokeh.models.tools import HoverTool\nfrom bokeh.models import GeoJSONDataSource\nfrom bokeh.layouts import row\noutput_notebook()\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","fb4ad042":"# Plots Format\npd.options.display.float_format = '{:.4f}'.format\nsns.set(style=\"whitegrid\")","f46f0470":"# Import CSV\ndf = pd.read_csv(\"\/kaggle\/input\/us-police-shootings\/shootings.csv\")\ndf.head()","4a8b5e98":"df.info()","0a772bd3":"def eda_categ_feat_desc_plot(series_categorical, title = \"\"):\n    \"\"\"Generate 2 plots: barplot with quantity and pieplot with percentage. \n       @series_categorical: categorical series\n       @title: optional\n    \"\"\"\n    series_name = series_categorical.name\n    val_counts = series_categorical.value_counts()\n    val_counts.name = 'quantity'\n    val_percentage = series_categorical.value_counts(normalize=True)\n    val_percentage.name = \"percentage\"\n    val_concat = pd.concat([val_counts, val_percentage], axis = 1)\n    val_concat.reset_index(level=0, inplace=True)\n    val_concat = val_concat.rename( columns = {'index': series_name} )\n    \n    fig, ax = plt.subplots(figsize = (12,4), ncols=2, nrows=1) # figsize = (width, height)\n    if(title != \"\"):\n        fig.suptitle(title, fontsize=18)\n        fig.subplots_adjust(top=0.8)\n\n    s = sns.barplot(x=series_name, y='quantity', data=val_concat, ax=ax[0])\n    for index, row in val_concat.iterrows():\n        s.text(row.name, row['quantity'], row['quantity'], color='black', ha=\"center\")\n\n    s2 = val_concat.plot.pie(y='percentage', autopct=lambda value: '{:.2f}%'.format(value),\n                             labels=val_concat[series_name].tolist(), legend=None, ax=ax[1],\n                             title=\"Percentage Plot\")\n\n    ax[1].set_ylabel('')\n    ax[0].set_title('Quantity Plot')\n\n    plt.show()","7b486649":"def eda_categ_feat_desc_df(series_categorical):\n    \"\"\"Generate DataFrame with quantity and percentage of categorical series\n    @series_categorical = categorical series\n    \"\"\"\n    series_name = series_categorical.name\n    val_counts = series_categorical.value_counts()\n    val_counts.name = 'quantity'\n    val_percentage = series_categorical.value_counts(normalize=True)\n    val_percentage.name = \"percentage\"\n    val_concat = pd.concat([val_counts, val_percentage], axis = 1)\n    val_concat.reset_index(level=0, inplace=True)\n    val_concat = val_concat.rename( columns = {'index': series_name} )\n    return val_concat","1fcdc3f1":"def eda_numerical_feat(series, title=\"\"):\n    \"\"\"\n    Generate series.describe(), bosplot and displot to a series\n    \"\"\"\n    f, (ax1, ax2) = plt.subplots(ncols=2, figsize=(15, 5), sharex=False)\n    print(series.describe())\n    if(title != \"\"):\n        f.suptitle(title, fontsize=18)\n    sns.distplot(series, ax=ax1)\n    sns.boxplot(series, ax=ax2)\n    plt.show()","29c2abd1":"from bokeh.io import show\nfrom bokeh.plotting import figure\nfrom bokeh.models import LinearColorMapper, HoverTool, ColorBar\nfrom bokeh.palettes import magma,viridis,cividis, inferno\n\ndef eda_us_states_geo_plot(geosource, df_in, title, column, state_column, low = -1, high = -1, palette = -1):\n    \"\"\"\n    Generate Bokeh Plot to Brazil States:\n        geosource: GeoJSONDataSource of Bokeh\n        df_in: DataSet before transformed in GeoJSONDataSource\n        title: title of plot\n        column: column of df_in to be placed values in geoplot\n        state_column: indicate column with names of States\n        low = (optional) min value of range of color spectre\n        high = (optional) max values of range of color spectre\n        palette: (optional) can be magma, viridis, civis, inferno e etc.. (with number os colors)\n            Example: cividis(8) (8 colors to classify), cividis(256)  (256, more colors to clasify)\n    \"\"\"\n    if high == -1:\n        high = max(df_in[column])\n    if low == -1:\n        low = min(df_in[column])\n    if palette == -1:\n        palette = inferno(32)\n        \n    palette = palette[::-1]\n    color_mapper = LinearColorMapper(palette = palette, low = low, high = high)\n    \n    hover = HoverTool(tooltips = [ ('State','@{'+'name'+'}'), (column, '@{'+column+'}{%.2f}')],\n                  formatters={'@{'+column+'}' : 'printf'})\n\n    color_bar = ColorBar(color_mapper=color_mapper, label_standoff=8, width = 450, height = 20, \n                         border_line_color=None, location = (0,0),  orientation = 'horizontal')\n\n    p = figure(title = title, plot_height = 400, plot_width = 500, tools = [hover])\n\n    p.xgrid.grid_line_color = None\n    p.ygrid.grid_line_color = None\n    p.xaxis.visible = False\n    p.yaxis.visible = False\n\n    p.patches('xs','ys', source = geosource, line_color = 'black', line_width = 0.25,\n              fill_alpha = 1, fill_color = {'field' : str(column), 'transform' : color_mapper})\n\n    p.add_layout(color_bar, 'below')\n    return p   \n\nfrom bokeh.palettes import Turbo256 \nfrom bokeh.models import ColumnDataSource\nfrom bokeh.transform import factor_cmap\nfrom bokeh.palettes import magma,viridis,cividis, inferno\n\ndef eda_bokeh_horiz_bar_ranked(df, column_target, title = '', int_top = 3, second_target = 'state'):\n    \"\"\"\n    Generate Bokeh Plot ranking top fists and last value:\n        df: data_frame\n        column_targe: a column of df inputed\n        title: title of plot\n        int_top: number of the tops\n        column: column of df_in to be placed values in geoplot\n        second_targe = 'state'\n    \"\"\"\n    ranked = df.sort_values(by=column_target).reset_index(drop = True)\n    top_int = int_top\n    top = ranked[:top_int].append(ranked[-top_int:])\n    top.index = top.index + 1\n    source = ColumnDataSource(data=top)\n    list_second_target = source.data[second_target].tolist()\n    index_label = list_second_target[::-1] # reverse order label\n\n    p = figure(plot_width=500, plot_height=400, y_range=index_label, \n                toolbar_location=None, title=title)   \n\n    p.hbar(y=second_target, right=column_target, source=source, height=0.85, line_color=\"#000000\",\n          fill_color=factor_cmap(second_target, palette=inferno(16)[::-1], factors=list_second_target))\n    p.x_range.start = 0  # start value of the x-axis\n\n    p.xaxis.axis_label = \"value of '\" + column_target + \"'\"\n\n    hover = HoverTool()  # initiate hover tool\n    hover.tooltips = [(\"Value\",\"@{\" + column_target + \"}{%.2f}\" ),   \n                       (\"Ranking\",\"@index\u00b0\")]\n    hover.formatters={'@{'+column_target+'}' : 'printf'}\n\n    hover.mode = 'hline' # set the mode of the hover tool\n    p.add_tools(hover)   # add the hover tooltip to the plot\n\n    return p # show in notebook\n\ndef eda_geplot_state_rank_plot(my_df, primary_column, target_column, first_title, second_title, int_top = 8, location_column = 'state'):\n    \"\"\"\n    Execute and show all together:\n    @ primary_columns must to be a float to join to make a GeoSource\n    generate_GeoJSONSource_to_districts()\n    eda_seoul_districts_geo_plot()\n    eda_bokeh_horiz_bar_ranked()\n    \"\"\"\n    my_df = my_df.rename({primary_column: target_column}, axis = 1)\n\n    geo_source = generate_GeoJSONSource_to_states(my_df)\n\n    geo = eda_us_states_geo_plot(geo_source, my_df, first_title,\n                                       target_column, location_column, palette = inferno(32))\n    \n    my_df['name_state'] = my_df['state'].map(lambda x: mapping_abrev_to_name[x])\n\n    rank = eda_bokeh_horiz_bar_ranked(my_df, target_column, second_title,\n                                      int_top = int_top, second_target = 'name_state')\n\n    show( row( geo, rank ))","9d044566":"def eda_horiz_plot(df, x, y, title, figsize = (8,5), palette=\"Blues_d\", formating=\"int\"):\n    \"\"\"Using Seaborn, plot horizonal Bar with labels\n    !!! Is recomend sort_values(by, ascending) before passing dataframe\n    !!! pass few values, not much than 20 is recommended\n    \"\"\"\n    f, ax = plt.subplots(figsize=figsize)\n    sns.barplot(x=x, y=y, data=df, palette=palette)\n    ax.set_title(title)\n    for p in ax.patches:\n        width = p.get_width()\n        if(formating == \"int\"):\n            text = int(width)\n        else:\n            text = '{.2f}'.format(width)\n        ax.text(width + 1, p.get_y() + p.get_height() \/ 2, text, ha = 'left', va = 'center')\n    plt.show()","232a6164":"def eda_numerical_feat(series, title=\"\", with_label=True, number_format=\"\"):\n    \"\"\" Generate series.describe(), bosplot and displot to a series\n    @with_label: show labels in boxplot\n    @number_format: \n        integer: \n            '{:d}'.format(42) => '42'\n            '{:,d}'.format(12855787591251) => '12,855,787,591,251'\n        float:\n            '{:.0f}'.format(91.00000) => '91' # no decimal places\n            '{:.2f}'.format(42.7668)  => '42.77' # two decimal places and round\n            '{:,.4f}'.format(1285591251.78) => '1,285,591,251.7800'\n            '{:.2%}'.format(0.09) => '9.00%' # Percentage Format\n        string:\n            ab = '$ {:,.4f}'.format(651.78) => '$ 651.7800'\n    def swap(string, v1, v2):\n        return string.replace(v1, \"!\").replace(v2, v1).replace('!',v2)\n    # Using\n        swap(ab, ',', '.')\n    \"\"\"\n    f, (ax1, ax2) = plt.subplots(ncols=2, figsize=(18, 5), sharex=False)\n    print(series.describe())\n    if(title != \"\"):\n        f.suptitle(title, fontsize=18)\n    sns.distplot(series, ax=ax1)\n    sns.boxplot(series, ax=ax2)\n    if(with_label):\n        describe = series.describe()\n        labels = { 'min': describe.loc['min'], 'max': describe.loc['max'], \n              'Q1': describe.loc['25%'], 'Q2': describe.loc['50%'],\n              'Q3': describe.loc['75%']}\n        if(number_format != \"\"):\n            for k, v in labels.items():\n                ax2.text(v, 0.3, k + \"\\n\" + number_format.format(v), ha='center', va='center', fontweight='bold',\n                         size=8, color='white', bbox=dict(facecolor='#445A64'))\n        else:\n            for k, v in labels.items():\n                ax2.text(v, 0.3, k + \"\\n\" + str(v), ha='center', va='center', fontweight='bold',\n                     size=8, color='white', bbox=dict(facecolor='#445A64'))\n    plt.show()\n    \n# eda_numerical_feat(df['age'], \"Distribution of 'age'\", number_format=\"{:.0f}\")","fc128bcd":"# Check number of rows with null values\n\ndf.isnull().sum().max()","93578303":"df['date'] = pd.to_datetime(df['date'])\ndf['date'].dtypes","8e1208d0":"print(list(df.columns))","24276c8e":"print(\"fist record:\", df['date'].min(), \"| Last Record:\",  df['date'].max())\ndf['date'].describe()","b721561e":"eda_categ_feat_desc_plot(df['manner_of_death'], \"Frequency of values for 'manner_of_death'\")","30d0f4e8":"eda_categ_feat_desc_df(df['armed'])","ba8c616a":"eda_numerical_feat(df['age'], \"Distribution of 'age'\", number_format=\"{:.0f}\")","c7bb16bc":"eda_categ_feat_desc_plot(df['gender'], \"Frequency by 'gender'\")","ffdc556a":"eda_categ_feat_desc_plot(df['race'], \"Frequency per 'race'\")","6de826d9":"eda_horiz_plot(eda_categ_feat_desc_df(df['city']).head(10),\n               'quantity', 'city', 'Ranking of the 10 cities with the most deaths in USA')","741babeb":"eda_horiz_plot(eda_categ_feat_desc_df(df['state']).head(10),\n               'quantity', 'state', 'Ranking of the 10 states with the most deaths in USA')","ce5dc938":"eda_categ_feat_desc_plot(df['signs_of_mental_illness'], \"Count values to 'signs_of_mental_illness'\")","f2b89070":"eda_categ_feat_desc_plot(df['threat_level'], \"Count values to 'threat_level'\")","132f425e":"eda_categ_feat_desc_plot(df['flee'], \"Count values to 'flee'\")","fea5ff48":"eda_categ_feat_desc_plot(df['body_camera'], \"Count values to 'body_camera'\")","513b83ae":"eda_categ_feat_desc_df(df['arms_category'])","495b07e3":"import geopandas as gpd\n\n# import geojson\nus_geojson_re = gpd.read_file('..\/input\/us-state-better-view\/us-all.geo.json')\n\n# delete useless columns\nlist_to_delete = ['id', 'hc-group', 'hc-middle-x', 'hc-middle-y', 'hc-key', 'hc-a2',\n       'labelrank', 'hasc', 'woe-id', 'state-fips', 'fips', 'country' , 'longitude',\n       'woe-name', 'latitude', 'woe-label', 'type' ]\nus_geojson_re = us_geojson_re.drop(list_to_delete, axis = 1)\n\n# remove useless trace to separate Alaska and Havai\nus_geojson_re = us_geojson_re.dropna()\n\nus_geojson_re.head(1)","efb2e328":"def generate_GeoJSONSource_to_states(my_df):\n    \"\"\"Function to generetae GeoJSONSource to generate plots\"\"\"\n    global us_geojson\n    geo_source = us_geojson_re.merge(my_df, left_on = 'postal-code', right_on = 'state')\n    return GeoJSONDataSource( geojson = geo_source.to_json())","92a0e008":"mapping_us_states = {\n 'Alabama' : 'AL',\n 'Alaska' : 'AK',\n 'Arizona' : 'AZ',\n 'Arkansas' : 'AR',\n 'California' : 'CA',\n 'Colorado' : 'CO',\n 'Connecticut' : 'CT',\n 'Delaware' : 'DE',\n 'Florida' : 'FL',\n 'Georgia' : 'GA',\n 'Hawaii' : 'HI',\n 'Idaho' : 'ID',\n 'Illinois' : 'IL',\n 'Indiana' : 'IN',\n 'Iowa' : 'IA',\n 'Kansas' : 'KS',\n 'Kentucky' : 'KY',\n 'Louisiana' : 'LA',\n 'Maine' : 'ME',\n 'Maryland' : 'MD',\n 'Massachusetts' : 'MA',\n 'Michigan' : 'MI',\n 'Minnesota' : 'MN',\n 'Mississippi' : 'MS',\n 'Missouri' : 'MO',\n 'Montana' : 'MT',\n 'Nebraska' : 'NE',\n 'Nevada' : 'NV',\n 'New Hampshire' : 'NH',\n 'New Jersey' : 'NJ',\n 'New Mexico' : 'NM',\n 'New York' : 'NY',\n 'North Carolina' : 'NC',\n 'North Dakota' : 'ND',\n 'Ohio' : 'OH',\n 'Oklahoma' : 'OK',\n 'Oregon' : 'OR',\n 'Pennsylvania' : 'PA',\n 'Rhode Island' : 'RI',\n 'South Carolina' : 'SC',\n 'South Dakota' : 'SD',\n 'Tennessee' : 'TN',\n 'Texas' : 'TX',\n 'Utah' : 'UT',\n 'Vermont' : 'VT',\n 'Virginia' : 'VA',\n 'Washington' : 'WA',\n 'West Virginia' : 'WV',\n 'Wisconsin' : 'WI',\n 'Wyoming' : 'WY',\n 'District of Columbia': 'DC'\n}\n\n# reverse dict: key => values to values => key\nmapping_abrev_to_name = {v: k for k, v in mapping_us_states.items()}","c11fb605":"df['state_name'] = df['state'].map(lambda state: mapping_abrev_to_name[state])\ndf['city_state'] = df['city'] + ', ' + df['state']\ndf['semester'] = ((pd.DatetimeIndex(df['date']).month.astype(int) - 1) \/\/ 6) + 1\ndf['year'] = pd.DatetimeIndex(df['date']).year\ndf.head(3)","46d2e0ed":"df_teen = df.query('age < 18')\ndf_teen.shape","65463120":"eda_horiz_plot(eda_categ_feat_desc_df(df_teen['arms_category']).head(10),\n               'quantity', 'arms_category', 'Ranking of the 10 arms category used by for minors')","cb1baf32":"eda_categ_feat_desc_plot(df_teen['signs_of_mental_illness'], \"Count values to 'signs_of_mental_illness' for minors\")","8e2f0dd4":"eda_categ_feat_desc_plot(df_teen['race'], \"Count values to 'race' for minors\")","97ef083a":"primary_column = 'date'\ntarget_column = 'count_occurrences'\n\ndf1 = df.groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df1, primary_column, target_column,\n                           \"Total occurrences by state\", \"The first and last 8 on occurrences count\")","83ef7550":"top_number = 10\n\ndf_california = df.query(\"state == 'CA'\").groupby(['city']).count()['date'].sort_values(ascending = False).reset_index().rename({'date': 'count'}, axis = 1)\n\nlist_cities_CA = list(df_california.head(top_number)['city']) # Guard 'top_number' cities\n\neda_horiz_plot(df_california.head(top_number), 'count', 'city', 'Ranking of the 10 cities with the most deaths in CA')","09e21e8f":"print(\"Count Cities with deaths in CA:\", len(df_california), ' cities \\n')\n\neda_numerical_feat(df_california['count'], \"Distribution of ocorrencies in California cities\", with_label=False)","8ae00e32":"# Plot evolution of bigges 'top_int' city in california\n\ndf_california_re = df.query(\"state == 'CA'\")\ndf_california_re = df.query(\"city in \" + str(list_cities_CA))\n\nfig, ax = plt.subplots(figsize=(15,5))\n\ndf_CA = df_california_re.groupby(['year','semester','city']).count()['id'].unstack()\ndf_CA.plot(ax=ax)\n\nax.set_ylabel(\"Count\")\nax.set_title(\"Evolution of the death count over the years in Top 10 Cities of CA\")\n\nx_axis = list(df_CA.index)\nax.set_xticks(range(0,len(x_axis)))\nax.set_xticklabels(x_axis)\n\nplt.legend(bbox_to_anchor=(0, 1), loc='upper left', ncol=2)\nplt.grid(True)\nplt.show()","980e06f1":"top_number = 10\n\ndf_tops = df.groupby(['city_state']).count()['date'].sort_values(ascending = False).reset_index().rename({'date': 'count'}, axis = 1)\n\nlist_cities_tops = list(df_tops.head(top_number)['city_state']) # guard 'top_number' biggers count number\n\neda_horiz_plot(df_tops.head(top_number), 'count', 'city_state', 'the top 10 cities with the most deaths in USA')","fb58a04c":"df_california_re = df.query(\"city_state in \" + str(list_cities_tops))\n\nfig, ax = plt.subplots(figsize=(18,6))\n\ndf_CA = df_california_re.groupby(['year','semester','city_state']).count()['id'].unstack()\ndf_CA.plot(ax=ax)\nx_axis = list(df_CA.index)\n\nax.set_ylabel(\"Count\")\nax.set_title(\"Evolution Top 10 Biggest Ocorrences cities in USA\")\n\n# Set more labels (sem isso so vai mostrar os semestre 1 e nao o 2)\nax.set_xticks(range(0,len(x_axis)))\nax.set_xticklabels(x_axis)\n\nplt.legend(bbox_to_anchor=(0, 1), loc='upper left', ncol=2)\nplt.show()","7655b4f6":"# generate df to plot\n\ndf['year'] = pd.DatetimeIndex(df['date']).year\ndf_re = df.groupby(['year','state_name']).count()['id'].unstack() #unstack is important to make easy make line plot\ndf_re = df_re.fillna(0) # case dont exist data in this time\n# df_re","b0964b02":"# get top and bototm 10 in ranking\n\nint_ranking = 5 \ndf_top_count = df.groupby(['state_name']).count()['id'].reset_index().sort_values(by=\"id\", ascending=False)\ntop_10_state = list(df_top_count['state_name'][:int_ranking])\nbottom_10_state = list(df_top_count['state_name'][-int_ranking:])\nprint(top_10_state, \"\\n\", bottom_10_state)","f4abf5de":"from bokeh.palettes import Turbo256\nfrom bokeh.models import Legend\n\n# define pallets of colors\nturbo_pallete = Turbo256[0:256:int(256\/ (len(top_10_state) + len(bottom_10_state)) )][::-1]\n\n# define x axis\nx_axis = np.array([2015,2016,2017,2018,2019,2020])\n\nfig = figure(title=\"Evolution of the first and last 10 state per total count occorrencies\",\n             plot_width=800, plot_height=450, x_axis_type=\"linear\")\n\n# is necessary generate a list to put state name in each circle plot with \"soruce_re\"\ndef g_list(desc, length):\n    l = []\n    for i in range(length):\n        l.append(desc)\n    return l\n\n# Plot Lines\ncount = 0\n\nfor d in top_10_state:\n    source_re = ColumnDataSource(dict(x=x_axis, y=np.array(df_re[d]), name=g_list(d, len(x_axis))))\n    line = fig.line('x', 'y', legend_label=d, color=turbo_pallete[count] ,line_width=3, source = source_re)\n    fig.circle('x', 'y', legend_label=d, color=turbo_pallete[count], fill_color='white', size=7, source = source_re)\n    count += 1\n    \nfor d in bottom_10_state:\n    source_re = ColumnDataSource(dict(x=x_axis, y=np.array(df_re[d]), name=g_list(d, len(x_axis))))\n    line = fig.line('x', 'y', legend_label=d, color=turbo_pallete[count] ,line_width=3, source = source_re)\n    fig.circle('x', 'y', legend_label=d, color=turbo_pallete[count], fill_color='white', size=7, source = source_re)\n    count += 1\n\n# plot title\nfig.legend.title = 'State'\n# Relocate Legend\nfig.legend.location = 'bottom_left'\n# Click to hide\/show lines\nfig.legend.click_policy = 'hide'\n# Add Hover\nfig.add_tools(HoverTool(tooltips=[('State', '@name'),('Year', '@x'),('Count', '@y{%.1f}')], formatters={'@y' : 'printf'} ))\n\nshow(fig)","54104c4b":"primary_column = 'race'\ntarget_column = 'number_of_occurrences'\n\ndf_plot = df.query(\"race == 'Black'\").groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df_plot, primary_column, target_column,\n                           \"Total number of Black deaths by state\", \"The first and last 8 on total death count to black race\")","552eed54":"primary_column = 'race'\ntarget_column = 'number_of_occurrences'\n\ndf_plot = df.query(\"race == 'Hispanic'\").groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df_plot, primary_column, target_column,\n                           \"Total number of Hispanic deaths by state\", \"The first and last 8 on total death count to hispanic race\")","6fb1aea4":"primary_column = 'race'\ntarget_column = 'number_of_occurrences'\n\ndf_plot = df.query(\"race == 'White'\").groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df_plot, primary_column, target_column,\n                           \"Total number of White deaths by state\", \"The first and last 8 on total death count to white race\")","be8bb746":"primary_column = 'race'\ntarget_column = 'number_of_occurrences'\n\ndf_plot = df.query(\"race == 'Asian'\").groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df_plot, primary_column, target_column,\n                           \"total occurrences by state asian\", \"The first and last 8 on ocorrencies count:asian\")","79fd011a":"# import census dataset\ndf_census = pd.read_csv(\"..\/input\/us-census-demographic-data\/acs2017_county_data.csv\")\n# delete 'Puerto Rico' cuz dont have data in US shooting dataset\nlist_indexs = df_census[ df_census['State'] == 'Puerto Rico'].index \ndf_census = df_census.drop(list_indexs)\n# map states to abreviations\ndf_census['state'] = df_census['State'].map(lambda x: mapping_us_states[x])\ndf_census.head(1)","02d74eef":"print(list(df_census.columns))","8087faf2":"# Feature Engineering to census\n\ndf_census[\"BlackPopulation\"] = ((df_census[\"TotalPop\"]\/100) * df_census[\"Black\"]).astype('int')\ndf_census[\"HispanicPopulation\"] = ((df_census[\"TotalPop\"]\/100) * df_census[\"Hispanic\"]).astype('int')\ndf_census[\"WhitePopulation\"] = ((df_census[\"TotalPop\"]\/100) * df_census[\"White\"]).astype('int')\ndf_census[\"AsianPopulation\"] = ((df_census[\"TotalPop\"]\/100) * df_census[\"Asian\"]).astype('int')\ndf_census[\"NativePopulation\"] = ((df_census[\"TotalPop\"]\/100) * df_census[\"Native\"]).astype('int')","74b7de2b":"primary_column = 'TotalPop'\ntarget_column = 'population'\n\ntotal_pop = df_census.groupby(['state']).sum()['TotalPop'].reset_index().sort_values(by=\"TotalPop\", ascending=False)\n\neda_geplot_state_rank_plot(total_pop, primary_column, target_column,\n                           \"Population by 2017 census\", \"The first and last 8 on ocorrencies count: tasered casses\")","10facccb":"primary_column = 'BlackPopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\n\neda_geplot_state_rank_plot(df3, primary_column, target_column,\n                           \"Total Black per states by the 2017 census\", \"The first and last 8 on total black population\")","068db620":"primary_column = 'HispanicPopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\n\neda_geplot_state_rank_plot(df3, primary_column, target_column,\n                           \"Total Hispanics per states by the 2017 census\", \"The first and last 8 on total hispanic population\")","0244aaea":"primary_column = 'WhitePopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\n\neda_geplot_state_rank_plot(df3, primary_column, target_column,\n                           \"Total white per states by the 2017 census\", \"The first and last 8 on total white population\")","15e443a4":"primary_column = 'AsianPopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\n\neda_geplot_state_rank_plot(df3, primary_column, target_column,\n                           \"Total asian per states by the 2017 census\", \"The first and last 8 on total asian population\")","ffaab921":"primary_column = 'NativePopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\n\neda_geplot_state_rank_plot(df3, primary_column, target_column,\n                           \"Total native per states by the 2017 census\", \"The first and last 8 on total native population\")","e25fb9e2":"primary_column = 'HispanicPopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\ndf4 = df3.merge(total_pop, left_on = 'state', right_on = 'state')\ndf4['percentage_hispanic'] = df4['HispanicPopulation'] \/ df4['TotalPop']\ndf4 = df4.sort_values(by='percentage_hispanic', ascending=False)\n\nprimary_column = 'percentage_hispanic'\neda_geplot_state_rank_plot(df4, primary_column, target_column,\n                           \"Percentage of Hispanics by state\", \"The first and last 8 in % Hipanics by state\")","cedcdfdd":"primary_column = 'BlackPopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\ndf4 = df3.merge(total_pop, left_on = 'state', right_on = 'state')\ndf4['percentage_black'] = df4['BlackPopulation'] \/ df4['TotalPop']\ndf4 = df4.sort_values(by='percentage_black', ascending=False)\n\nprimary_column = 'percentage_black'\neda_geplot_state_rank_plot(df4, primary_column, target_column,\n                           \"Percentage of Black by state\", \"The first and last 8 in % Black by state\")","2ffe03b8":"primary_column = 'WhitePopulation'\ntarget_column = 'population'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\ndf4 = df3.merge(total_pop, left_on = 'state', right_on = 'state')\ndf4['percentage_White'] = df4['WhitePopulation'] \/ df4['TotalPop']\ndf4 = df4.sort_values(by='percentage_White', ascending=False)\n\nprimary_column = 'percentage_White'\neda_geplot_state_rank_plot(df4, primary_column, target_column,\n                           \"Percentage of White by state\", \"The first and last 8 in % White by state\")","86e26489":"primary_column = 'AsianPopulation'\npercentage_column = '%_asian_pop'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\ndf4 = df3.merge(total_pop, left_on = 'state', right_on = 'state')\ndf4[percentage_column] = df4[primary_column] \/ df4['TotalPop']\ndf4 = df4.sort_values(by=percentage_column, ascending=False)\n\neda_geplot_state_rank_plot(df4, percentage_column, percentage_column,\n                           \"Percentage of Asian by state\", \"The first and last 8 in % Asian by state\")","98c840d7":"primary_column = 'NativePopulation'\npercentage_column = '%_native_pop'\n\ndf3 = df_census.groupby(['state']).sum()[primary_column].reset_index().sort_values(by=primary_column, ascending=False)\ndf4 = df3.merge(total_pop, left_on = 'state', right_on = 'state')\ndf4[percentage_column] = df4[primary_column] \/ df4['TotalPop']\ndf4 = df4.sort_values(by=percentage_column, ascending=False)\n\neda_geplot_state_rank_plot(df4, percentage_column, percentage_column,\n                           \"Percentage of Native by state\", \"The first and last 8 in % Native by state\")","911fe130":"df_total_population = df_census.groupby(['state']).sum()['TotalPop'].reset_index().sort_values(by='TotalPop', ascending=False)\ndf_total_population.head()","7b1c4669":"column_name = 'death_ratio'\n\ndf1 = df.groupby(['state']).count()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\")\n\ndf1[column_name] = (df1['count'] * 100000) \/ df1['TotalPop']\ndf1.head()\n\neda_geplot_state_rank_plot(df1, column_name, column_name,\n                           \"death rate per 100 thousand inhabitants\", \"The first and last 8 on death rate\")","a109fe66":"column_name = 'black_death_ratio'\n\ndf1 = df.query(\"race == 'Black'\").groupby(['state']).count()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\n# df1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\")\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\", how=\"right\")\ndf1 = df1.fillna(0.0)\ndf1[column_name] = (df1['count'] * 100000) \/ df1['TotalPop']\ndf1.head()\n\neda_geplot_state_rank_plot(df1, column_name, column_name,\n                           \"black death rate per 100 thousand inhabitants\", \"The first and last 8 on black death rate\")","c2fd2964":"column_name = 'hispanic_death_ratio'\n\ndf1 = df.query(\"race == 'Hispanic'\").groupby(['state']).count()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\n# df1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\")\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\", how=\"right\")\ndf1 = df1.fillna(0.0)\ndf1[column_name] = (df1['count'] * 100000) \/ df1['TotalPop']\n\neda_geplot_state_rank_plot(df1, column_name, column_name,\n                           \"hispanic death rate per 100 thousand inhabitants\", \"The first and last 8 on hispanic death rate\")","d56cb5ff":"column_name = 'white_death_ratio'\n\ndf1 = df.query(\"race == 'White'\").groupby(['state']).count()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\")\n\ndf1[column_name] = (df1['count'] * 100000) \/ df1['TotalPop']\n\neda_geplot_state_rank_plot(df1, column_name, column_name,\n                           \"white death rate per 100 thousand inhabitants\", \"The first and last 8 on white death rate\")","082f900e":"column_name = 'black_death_ratio'\n\ndf1 = df.query(\"race == 'Black'\").query('year == 2020').groupby(['state']).count()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\", how=\"right\")\ndf1 = df1.fillna(0.0)\ndf1[column_name] = (df1['count'] * 100000) \/ df1['TotalPop']\ndf1.head()\n\neda_geplot_state_rank_plot(df1, column_name, column_name,\n                           \"black death rate per 100 thousand inhabitants in 2020\", \"The first and last 8 on black death rate in 2020\")","62c081fd":"df1 = df.query(\"race == 'Black'\").query('state == \"MN\"')\ndf1 = df1.sort_values('date', ascending=False)\ndf1.head(1) # Max date to Black case in Minnesota . Dont have cases REGISTED in 2020","c4e39c53":"df1 = df.query(\"race == 'Black'\").query('state == \"MN\"')\ndf1 = df1.groupby(['year','semester','state']).sum()['id'].reset_index().rename({\"id\": \"count\"}, axis=1)\ndf1 = df1.merge(df_total_population, left_on=\"state\", right_on=\"state\")\ndf1['black_death_ratio'] = (df1['count'] * 100000) \/ df1['TotalPop']\ndf1['year_semester'] = df1['year'].astype(str) + \" | \" + df1['semester'].astype(str)\ndf1.head()\n\nfig, ax = plt.subplots(figsize=(15,5))\nax = sns.barplot(x=\"year_semester\", y=\"black_death_ratio\", data=df1)\nax.set_title('Evolution death rate of Minnesota')\ndf1","007ee433":"###  Total white population per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nranking by the top 3 states with the largest population.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nranking pelo top 3 estados com maior popula\u00e7\u00e3o.","7555f4ee":"### Evolution of black death rate in Minnesota\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nIt presents missing data in some periods. But considering, the cases have increased over the years\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAprecsenta dados faltantes em alguns periodos. Mas considerando, os casos tem aumentado com o decorrer dos anos","b9f22a62":"### Age","296501fa":"## Race","43915424":"### Total deaths by state <a id ='index08'><\/a>\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nCalifornia is the state with the highest number of deaths, followed by Texas, Florida and Arizona. It is clear that most of the deaths are in the south of the country. Ahead of the notebbok we will see that one of the reasons is that these states are very populous.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nCalifornia \u00e9 o estado com maior n\u00famero de mortos, em sequida Texas, Florida e Arizona. Percebe-se q eu a maior parte das mortes est\u00e1 no sul do pa\u00eds. Mais a frente do notebbok vamos ver que um dos motivos \u00e9 por esses estados serem bem populosos.","5c0b01d0":"### Total population per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe top 3 states with the most people are California (CA), Texas (TX) and Florida (FL). States that usually appear in the ranking of everything seen so far, a big reason must be this, the number of people is greater in these states.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nOs top 3 estados com mais pessoas s\u00e2o california (CA), Texas (TX) e Florida (FL). Estados esses que costumam aparecer no ranking de tudo visto at\u00e9 agora, um grande motivo deve ser esse, a quantidade de pessoas \u00e9 maior nesses estados.","79505fdc":"### Feature Engineering","100bc5b0":"### death ratio for black per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nsoutheastern states and around Arkansas has a high black death rate. This also coincides with the states with the highest percentage of blacks in the population\n\n**\ud83c\udde7\ud83c\uddf7**\n\nestados ao sudeste e ao redor de Arkansas tem grande taxa de mortes de negro. Isso coincide tamb\u00e9m com os estados com maior porcentagem de negros na popula\u00e7\u00e3o","a052fc37":"## Underage cases\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe distribution of 'arms_category' is the same as for adults.\n\nAs for the distribution by race: It can be observed that for minors, more blacks end up dying (39% black, 32% white and 23% Hispanic) while in adults, whites are the biggest deaths (50% white, 26 % black and 18% Hispanic).\n\nIn terms of the sign of mental illness, it is slightly less than adults.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nA distribui\u00e7\u00e3o de 'arms_category' \u00e9 a mesma de adultos.\n\nQuanto a distribui\u00e7\u00e3o por ra\u00e7as: Pode-se obervar que para menores de idade acaba-se morrendo mais negros (39% negros, 32% brancos e 23% hispanicos) enquanto que nos adultos s\u00e3o os brancos as maiores mortes (50% brancos, 26% negros e 18% hispanicos).\n\nNa quest\u00e3o de sinal de doen\u00e7a mental \u00e9 umpouco menor do que adultos.\n\n","3eddb5d0":"## Manner of Death ","1ad08106":"### date \n","b5666333":"## Ratio 100,000 habitants\n\n**calculus: number of cases * 100,000 \/ total population**\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe goal is to allow comparison between locations with different population sizes. Without it, California ends up being the leader of chaos for having the largest population. Without this type of evaluation, the following error could occur:\n\nHypothetically: 1000 homicides in California and 1000 homicides in Maine would have the same weight, considering that at a rate of 100,000 inhabitants, as CA has 38 million, and WY has half a million:\n\n+ Wyoming: `1000 * 100000\/500000 = 200 homicides per 100 thousand inhabitants`\n+ California: `1000 * 100000\/38000000 = 2.63157894737 homicides per 100 thousand inhabitants`\n\nThat is, this number of homicides in Wyoming has a greater impact than in California even though it has the same number of homicides\n\n**\ud83c\udde7\ud83c\uddf7**\n\nO objetivo \u00e9 permitir a compara\u00e7\u00e3o entre locais com diferentes tamanhos de popula\u00e7\u00e3o. Sem isso California acaba sendo o lidere de caos por ter  a maior popula\u00e7\u00e2o. Sem esse tipo de avalia\u00e7\u00e3o poderia-se ocorrer os seguinte erro:\n\nHipoteticamente: 1000 homicidios na California e 1000 homicidios no Maine teriam o mesmo peso, sendo que, considerando em taxa de 100.000 habitantes,  como CA tem 38 milhoes, e WY tem meio milhao:\n\n+ Wyoming: `1000*100000\/500000 = 200 homicidios por 100 mil habitantes`\n+ California: `1000*100000\/38000000 = 2.63157894737 homicidios por 100 mil habitantes`\n\nOu seja, Essa quantidade de homicidios em Wyoming tem maior impacto que na California mesmo tendo o mesmo numero de homicidos","72bd6389":"### Percentage of Hispanics by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe most southern and southwestern states have the highest percentage of Hispanics. Realize that now the top is no longer California, but New Mexico\n\n**\ud83c\udde7\ud83c\uddf7**\n\nOs estados mais ao sul e sudoeste tem as maiores porcentagem de hispanicos. Perceba que agora o top n\u00e2o \u00e9 mais Califnornia, e sim New Mexico","86b05d63":"### Some Conclusions\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nAlaska is a place with a high death rate.\nNew Mexico has a high rate probably due to the death rate of Hispanics, which is high\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAlaska \u00e9 um lugar com grande taxa de morte.\n\nNovo Mexico tem uma grande taxa provavelmente por conta da taxa de mortes de hispanicos, que \u00e9 alta","bc0abd01":"### Analyzing the state of California CA","e257fe99":"<h1 align=\"center\"> US Police Shooting \ud83d\udc6e\ud83d\udd2b with US 2017 demographic Census. <\/h1>\n<h2 align=\"center\"> EDA oriented to visualization by maps \ud83d\uddfa of the US states <\/h2>\n\n<img src=\"https:\/\/cdn.athlonoutdoors.com\/wp-content\/uploads\/sites\/8\/2018\/04\/leo-shots18-lead.jpg\" width=\"50%\" \/>\n\nCreated: 2020-08-11\n\nLast updated: 2020-09-014\n\nKaggle Kernel made by \ud83d\ude80 <a href=\"https:\/\/www.kaggle.com\/rafanthx13\"> Rafael Morais de Assis<\/a>\n\nMade in English (**\ud83c\uddfa\ud83c\uddf8**) and Portugues (**\ud83c\udde7\ud83c\uddf7**). Is in progess...\n\n\n## Kaggle Description\n\n[Kaggle DataSet: US Police Shooting](https:\/\/www.kaggle.com\/ahsen1330\/us-police-shootings)\n\n**\ud83c\uddfa\ud83c\uddf8**\n\n**Context**\n\nIn the recent killings, a hot topic came into being, \"Racism\".\nSo, I chose to gather some data to take out some insights and analyze the story around racism in America.\nI downloaded the raw data from kaggle and prepared it for visualization while correcting values, handling missing content, normalization and categorization\n\n**Content !!!**\n\nIt contains basic data about people like their name, age, gender and race. Along with it, is the shooting\/killing information, like date of event, where it happened? how they were shot? did they attack? Were they holding weapons? Did they show any mental illness? Was the policeman wearing a camera\/was the incident recorded? Did the suspect flee? Apart from that, a category column holds type of weapon used by the suspect\n\n**\ud83c\udde7\ud83c\uddf7**\n\n**Contexto**\n\nNos recentes assassinatos, surgiu um tema quente, \"Racismo\".\nEnt\u00e3o, eu escolhi reunir alguns dados para extrair alguns insights e analisar a hist\u00f3ria em torno do racismo na Am\u00e9rica.\nEu baixei os dados brutos do kaggle e os preparei para visualiza\u00e7\u00e3o enquanto corrigia valores, gerenciava o conte\u00fado ausente, normaliza\u00e7\u00e3o e categoriza\u00e7\u00e3o\n\n**Conte\u00fado !!!**\n\nEle cont\u00e9m dados b\u00e1sicos sobre pessoas, como nome, idade, sexo e ra\u00e7a. Junto com ele, as informa\u00e7\u00f5es de tiro \/ assassinato, como a data do evento, s\u00e3o onde aconteceu? como eles foram baleados? eles atacaram? Eles estavam segurando armas? Eles mostraram alguma doen\u00e7a mental? O policial estava usando uma c\u00e2mera para gravar \/ o incidente foi registrado? O suspeito fugiu? Al\u00e9m disso, uma coluna de categoria cont\u00e9m o tipo de arma usada pelo suspeito.\n\n## Others DataSets\n\n**GeoJSON**\n\n+ [HighCharts GeoJSON Maps](http:\/\/code.highcharts.com\/mapdata\/)\n - [direct lick to US States GeoJSON](http:\/\/code.highcharts.com\/mapdata\/countries\/us\/us-all.geo.json)\n\n**US Census 2017**\n\n+ [US Census 2017](https:\/\/www.kaggle.com\/muonneutrino\/us-census-demographic-data)\n\n## Brief summary of the data set \n\nThe dataset is 4000 rows (records) and 15 columns (features) between 01\/2015 and 06\/2020.\n\nfeatures = `['id', 'name', 'date', 'manner_of_death', 'armed', 'age', 'gender',\n 'race', 'city', 'state', 'signs_of_mental_illness', 'threat_level', 'flee',\n 'body_camera', 'arms_category']`\n\n## Table of Contents\n\nin progess... \n\n+ [Import Libs and DataSet](#index1)\n+ [Snippets](#index02)\n+ [Handle data: convert and missing data](#index03)\n\n## Import Libs and DataSet <a id ='index01'><\/a>\n","2a4508e3":"## Deep analysis on features <a id ='index06'><\/a>\n\n````\n**Analisar casos mesnores de 18 anos** e quais as ramra usadas\n\nOnde \u00e9 mais gravado?\n\nAnalisar disposit\u00e7ao de genero com idade\n````\n","0b0137f1":"### City and State\n\n2.258 (Big 3: Los Angeles (CA), Phoenix, Houston) city to 51 states (Big 3: CA, TX, FL) all states + DC (Washington, D.C.)","cd601b44":"### armed ","74657023":"### death ratio for white per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe death rate for whites is quite diverse, covering several states in very different regions.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nA taxa de morte para brancos \u00e9 bem diversificada, cobrindo varios estados de regioes bem distinstas.","a87d7d4c":"###  Total hispanic population per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nranking by the top 3 states with the largest population.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nranking pelo top 3 estados com maior popula\u00e7\u00e3o.","2e08865d":"### signs_of_mental_illness","f170c55c":"## Evolution of total deaths by top 10 Cities in USA\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nAfter Los Angeles (CA), Phoenix (AR) has a large number of occurrences. Chicago (IL) and Houston (TX) have had great numbers and have been decreasing since counting began\n\n**\ud83c\udde7\ud83c\uddf7**\n\nDepois de Los Angeles (CA), Phonenix (AR) tem um grande n\u00famero de ocorencias. Chicago (IL) e Houston (TX) j\u00e1 tiveram grandes numero e tem diminuindo desde que come\u00e7ou a contagem","9bba5991":"## Import and prepare GeoJSON to generate visual map graphs of US states <a id ='index05'><\/a>","18cb7345":"### flee\n","3109e722":"## Snippets <a id ='index02'><\/a>","b571c2a4":"**\ud83c\uddfa\ud83c\uddf8**\n\nNotes: \n\nWe can say that: as a percentage of the race population by state, Hispanics are in the south of the west, blacks in the south east and whites in the north.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nObserva\u00e7\u00f5es:\n\n\n\nPodemos dizer que: em quest\u00e3o de porcentagem da popula\u00e7\u00e3o de ra\u00e7as por estados, os hispanicos estao no sul do oeste, os negros no suldeste e os brancos no norte.","1705bcc4":"### Total Black death by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nAn interesting fact is that blacks appear to suffer a lot of violence near DC and NY, that is, in the northeast, something that does not happen so much with any other race\n\n**\ud83c\udde7\ud83c\uddf7**\n\nUm dado interessante \u00e9 que os negros aparecem sofrer bastante violencia perto de DC e NY, ou seja, no nordeste, algo que nao acontece tanto com qualquer outra ra\u00e7a","0c773352":"### Percentage of Asians per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nFar East (Hawaii and California) and Far East (New York and New Jersey)\n\n**\ud83c\udde7\ud83c\uddf7**\n\nExtremo leste (Havai e California) e extremo leste (Nova york e new Jersey)","cc4cb295":"#### Distribution of ocorrencies in CA\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe 10 cities with the most deaths end up representing a huge part of the deaths in california.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAs 10 cidade com mais mortes acabam representando uma enorme parte das mortes na california.","9a2afd8f":"## Evolution of total deaths per state \n\nEvolution in the number of deaths per state over the years (Interactive plot with Bokeh). To Top 10 and Bottom 10 states\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nNot much can be said about 2020 as it is not over, but we can see that in general cases have fallen in recent years\n\n**\ud83c\udde7\ud83c\uddf7**\n\nN\u00e3o se pode dizer muita coisa sobre 2020 pois n\u00e3o acabou, mas podemos perceber que em geral os caso tem caido nos \u00faltimos anos","6e9dd515":"## Questions on US states <a id ='index07'><\/a>","53f7f59e":"## Understand each feature of DataSet  <a id ='index04'><\/a>\n","66660e2c":"###  Total asian population per state","d6613f06":"### Death ratio per states","12f02ff5":"### Total White death by state","579890ff":"###  Total native population per state\n","4f4e772e":"### Total black population per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nIt is curious that California, which is always at the top of the rankings, now ranks fourth, losing to the states of Texas, Georgia, Floria and New York in terms of black population.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nCurioso que California, que costuma ficar sempre no topo dos rankings agora fica em quarto, perdendo para os estados de Texas, Georgia, Floria e New York em quantidade de popula\u00e7\u00e3o negra.","a2b2e9bc":"### threat_level\n","d04f57e1":"### Percentage of Black by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nBefore, one of the states that had more blacks was Florida Now, looking at percentages, we see that blacks have more people in proportion in the southeastern states.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAntes um dos estados que mais tinha negros era a FLorida Agora, olhando por porcentagem, vemos que os negros tem mais pessoas em propor\u00e7\u00e2o nos estados suldestes.","e63f4ec0":"#### Evolution of Death in CA Top 10 Cities\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nIn California, most cities have up to 6 events per year. Los Angeles is an outilier having about twice as much or more than any other city in California each year. It is necessary to remember that in 2020 the records cover until June 2020, that is, it does not cover the entire year\n\n**\ud83c\udde7\ud83c\uddf7**\n\nNa California a maioria das cidade tem at\u00e9 cerca de 6 ocorrencias por ano. Los Angeles \u00e9 um outilier tendo cerca do dobro ou mais de qualquer outras cidade da California a cada ano. \u00c9 necess\u00e1rio lembrar que em 2020 os registros cobrem at\u00e9 Junho de 2020, ouse seja, n\u00e3o cobre o ano inteiro\n","73ea1c45":"### body_camera","e00fa8d6":"## Brief Summary of DataSet to each feature\n\n**\ud83c\uddfa\ud83c\uddf8**\n\n+ `id`: \n  - There is no useful information to be analyzed\n+ `name`: \n  - There is no useful information to be analyzed\n+ `date`: \n  - 1792 different dates. The most frequent date is January 4th, 2018 with 9 occurrences. Period between 01\/02\/2015 and 06\/15\/2020.\n+ `manner_of_death`:\n  -  About 95% per shot and 5% per shot and taser\n+ `armed`:\n  - There are 89 categories: gun (56%), knife (14%), unknown (8%), unarmed (7%), the others are less than 4% each and together they are 15%.\n+ `age`:\n  -  In general, between 20 to 40 years. Maximum: 91; minimum 6.\n+ `gender`:\n  -  95% male and 5% female\n+ `race`:\n  - Mostly 50% white, 25% black, 18% Hispanic\n+ `city` and `state`:\n  - 2,258 cities were registered (The 3 largest in occurrences: Los Angels (CA), Phoenix (AR) and Houston (TX)) of the 51 states (including Washington, D.C.). The 3 largest states are CA (California), TX (Texas) and FL (Florida).\n+ `signs_of_mental_illness`:\n  -  77% False (without mental illness) and 22% True (mentally ill)\n+ `threat_level`:\n  - 64% \"attack\", 31% \"other\", 4% \"underteminded\"\n+ `flee`:\n  - Not flee 62%, car 16%, Foot 13%, others 7% \n+ `body_camera`:\n  - About 88% of the cases the police were not using the police body camera, in 12% they were using it.\n+ `arms_category`:\n  - Weapon category: 11 types. The ones with the highest amount per category were weapons (56%), sharp objects (16%), unknown (8%), without weapons (7%) and the rest each with less than 4% each.\n  \n\n\ud83c\udde7\ud83c\uddf7 \n\n+ `id`: \n - N\u00e3o h\u00e1 informa\u00e7\u00e3o \u00fatil a ser analisada\n+ `name`: \n - N\u00e3o h\u00e1 informa\u00e7\u00e3o \u00fatil a ser analisada\n+ `date`: \n  - 1792 datas diferentes. A data com maior frequencia \u00e9 04 de janiero de 2018 sendo 9 ocorrencias. Periodo entre 02\/01\/2015 e 15\/06\/2020. \n+ `manner_of_death` (Forma que ocorreu a mortes)\n  - Cerca 95% de tiro e 5% de tiro e taser (arma el\u00e9trica)\n+ `armed` (Armado?):\n  -  H\u00e1 89 categoricas: arma (56%), faca (14%), desconhecido (8%), sem arma (7%), as outras s\u00e3o menos de 4% cada e juntas sao 15%.\n+ `age`:\n  -  Em geral, entre 20 a 40 anos. Max\u00edmo: 91; m\u00ednimo 6.\n+ `gender`:\n  - 95% masculino e 5% feminino\n+ `race`:\n  - Em sua maioria 50% branco, 25% negro, 18% hisp\u00e2nico\n+ `city` e `state`\n  - Foram registrados 2.258 cidades (As 3 maiores em ocorr\u00eancias: Los Angels (CA), Phoenix (AR) e Houston (TX)) dos 51 estado (incluindo Washington, D.C.). Os 3 maiores estados s\u00e3o CA (California),  TX (Texas) e FL (Florida).\n+ `signs_of_mental_illness` (apresenta doen\u00e7a mental):\n  -  77% Falso (sem doen\u00e7a mental) e 22% Verdadeiro (doente mental)\n+ `threat_level`: (n\u00edvel de amea\u00e7a)\n  - 64% \"attack\", 31% \"other\", 4% \"underteminded\"\n+ `flee` (fuga):\n  - N\u00e3o fogiu 62%, de carro 16%, a P\u00e9 13%, outros 7%\n+ `body_camera` (uso de camero corporal pela policia)\n  - Cerca de 88% dos casos os policiais n\u00e3o estavam usando a c\u00e2mera corporal da policia, em 12% estavam usando.\n+ `arms_category`:\n  - Categoria das armas: 11 tipos. As com maiores quantidade por categoria foram arma (56%), objeto pontiagudos (16%), desconhecido (8%), Sem arma (7%) e o restante cada um com menos de 4% cada.","8be16fd2":"<!-- \n# ATEN\u00c7\u00c2O: EM V\u00c1RIOS GR\u00c1FICOS COM ESTAOD, PODMEOS PERCEBER QUE QUE A QUANTIDADE DE CASOS EST\u00c1 RELACIONADA A QUANTIDADE DE POPUL\u00c7\u00c2O, QUANTO MAIOR, HAVERA MAIS CASOS PARA TODOS OS TIPOS DE OCOREENCIAS QUE PODEM.\n\nSERIA MAIS INTERRESSANTE FAZER ALGO COMO Casos por 100k habitantes ou algo do tipo parapodemos comprara com mais honestidade os estado: ex: Compara DC com o estado da CA em n\u00famero de mortos, nao importa o caos CA vai ser sempre maior pois \u00e9 o mais populoso do pais. Ent\u00e2o, ffa\u00e7a isso\n\n````\nprimary_column = 'race'\ntarget_column = 'number_of_occurrences'\n\ndf_plot = df.query(\"manner_of_death == 'shot and Tasered'\").groupby(['state']).count()[primary_column].reset_index()\n\neda_geplot_state_rank_plot(df_plot, primary_column, target_column,\n                           \"total occurrences by state in tasered casses\", \"The first and last 8 on ocorrencies count: tasered casses\")\n\n````\n-->\n\n## Prepare 2017 US Demographic Census Data Set","00b1c985":"### Total Asian death by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nFor the cases of Asian Asians, the curious was the states of Washington and Hawaii, thus characterizing states further east, perhaps because it is closer to Asia.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nPara os casos de asiaticos asiaticos o curioso foi os estados de Washington e Havai, caracterizando assim estados mais ao leste, talvez por estar mais perto da asia.","b502264b":"## Handle data: convert and missing data <a id ='index03'><\/a>\n\n**Missing Data**","7db496d5":"## Total number of deaths by race to each state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nIn the total count of cases by deaths for all races, we observe that the top 3 are CA, TX and FL very populous states.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nNa contagem total de casos por mortes para todas as ra\u00e7as, observamos que os top 3 s\u00e2o CA, TX e FL estados bastante populosos.","47d86224":"#### Top 10 Cities in CA per deaths","4141785e":"No Missing Data\n\n**Convert Date to `datetime`**","86548610":"### arms_category\n","954bea16":"## Gender","e007f3e4":"### Total Hispanic death by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nHispanics have more cases in the southwest and Florida. Whereas blacks have more on the east coast and there is no chaos among Hispanics with the exception of the populous states mentioned before (CA, TX, FL).\n\n**\ud83c\udde7\ud83c\uddf7**\n\nOs hispanicos tem mais casos no sudoeste  e Florida. Enquanto que os negros  tem mais na costa leste e nao tem no caos dos hispanicos com exe\u00e7\u00e2o dos estados populosos mensionados antse (CA, TX, FL).","231242b9":"## black death rate in 2020\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nApparently several do not present data in that year yet\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAparentemente varios n\u00e2o apresentam dados nesse ano ainda","afb403f4":"### Percentage of White by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nNorthernmost states in the United States have a higher prevalence of whites compared to other races.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nEstados mais ao norte dos estados unidos tem maior prevalencia de brancos em compara\u00e7\u00e3o as outra ra\u00e7as.","027394c9":"### death ratio for hispanic per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nThe highest rates coincide with the states and regions where there is a population with a higher percentage of Hispanics.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAs maiores taxa Coincide  com os estados e regioes onde se uma popula\u00e7\u00e2o com maior porcentagem de hispanicos.","91ac1fb7":"###  Total native population per state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nAlaska and north and south of the central united states\n\n**\ud83c\udde7\ud83c\uddf7**\n\nAlaska e norte e sul do centro dos estados unidos","6ce1404e":"## Percentage of races by state\n\n**\ud83c\uddfa\ud83c\uddf8**\n\nLet's look at where there are more people by race over the population.\n\n**\ud83c\udde7\ud83c\uddf7**\n\nVamos analisar onde tem mais pessoas por ra\u00e7a sobre a popula\u00e7\u00e3o. \n"}}