{"cell_type":{"9087aba0":"code","7f780850":"code","ffc8f10f":"code","ae3b0b76":"code","9888eca0":"code","db0ff2e6":"code","3614799e":"code","1f1a3c15":"code","3b1fad88":"code","955095f2":"code","5fa82c7c":"code","cb559f5d":"code","20e7fc90":"code","c188bb24":"markdown","7d9e950e":"markdown","977b5e67":"markdown","7d4d87d9":"markdown","2811ddd1":"markdown","48e95378":"markdown","61113d1d":"markdown","bae2d074":"markdown","a7a24718":"markdown","2f848cc9":"markdown"},"source":{"9087aba0":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.express as px\nimport warnings \nwarnings.simplefilter(\"ignore\")","7f780850":"data = pd.read_csv(\"..\/input\/basketball-players-stats-per-season-49-leagues\/players_stats_by_season_full_details.csv\")\ndata.head()","ffc8f10f":"data.shape","ae3b0b76":"values = data['League'].value_counts().tolist()\nnames = list(dict(data['League'].value_counts()).keys())\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(238, 103, 48, 0.85)',\n                         line=dict(color='rgb(25, 20, 20)',width=1.0)))\n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='Basketball Leagues')\n\nfig.show()","9888eca0":"values = data['Stage'].value_counts().tolist()\nnames = list(dict(data['Stage'].value_counts()).keys())\n\npx.pie(data, values=values, names=names, title=\"Basketball Match Stages\", \n       color_discrete_sequence=[\"#ee6730\", \"#1d428a\", \"#c8102e\"])","db0ff2e6":"values = data['Season'].value_counts().tolist()\nnames = list(dict(data['Season'].value_counts()).keys())\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(29, 66, 138, 0.75)',   \n                         line=dict(color='rgb(25, 20, 20)',width=1.25)))\n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='Basketball Seasons')\n\nfig.show()","3614799e":"values = data['Team'].value_counts().tolist()[:10]\nnames = list(dict(data['Team'].value_counts()).keys())[:10]\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(85, 37, 130, 0.85)',\n                         line=dict(color='rgb(253, 185, 39)',width=1.25)))\n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='Top-10 Teams')\n\nfig.show()","1f1a3c15":"values = data['Player'].value_counts().tolist()[:10]\nnames = list(dict(data['Player'].value_counts()).keys())[:10]\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(206, 17, 65, 0.85)', \n                         line=dict(color='rgb(6, 25, 34)',width=1.25))) \n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='Top-10 Players')\n\nfig.show()","3b1fad88":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(2,1, figsize=(20,15)) \n\nfig.suptitle(\"Height and Weight Distribution of the Players\", fontsize=25, y=0.93)\n\nsns.histplot(x = data[\"height_cm\"], kde=True, ax=ax[0], color=\"navy\", bins=20);\nax[0].set_xlabel(\"Player Height in cm.\",fontsize=15);\n\nsns.histplot(x = data[\"weight_kg\"], kde=True, ax=ax[1], color=\"darkred\", bins=20);\nax[1].set_xlabel(\"Player Weight in kg.\",fontsize=15);","955095f2":"values = data['high_school'].value_counts().tolist()[:215]\nnames = list(dict(data['high_school'].value_counts()).keys())[:15]\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(0, 101, 58, 0.85)', \n                         line=dict(color='rgb(255, 194, 32)',width=1.5))) \n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='High Schools of the Players')\n\nfig.show()","5fa82c7c":"values = data['nationality'].value_counts().tolist()[:20]\nnames = list(dict(data['nationality'].value_counts()).keys())[:20]\n\nfig = go.Bar(x = names,\n             y = values,\n             marker = dict(color = 'rgba(255, 194, 32, 0.85)',  \n                         line=dict(color='rgb(134, 0, 56)',width=1.75))) \n\nlayout = go.Layout()\n\nfig = go.Figure(data = fig, layout = layout)\n\nfig.update_layout(title_text='Nationality of the Players')\n\nfig.show()","cb559f5d":"plt.style.use(\"seaborn\")\nfig, ax =plt.subplots(1,2, figsize=(20,7)) \n\nfig.suptitle(\"Field Goals Made vs. Field Goals Attempted\", fontsize=25, y=1.0)\n\nsns.histplot(x = data[\"FGM\"], kde=True, ax=ax[0], color=\"navy\", bins=20);\nax[0].set_xlabel(\"Field Goals Made\",fontsize=15);\n\nsns.histplot(x = data[\"FGA\"], kde=True, ax=ax[1], color=\"darkred\", bins=20);\nax[1].set_xlabel(\"Field Goals Attempt\",fontsize=15);","20e7fc90":"sns.set_palette(sns.color_palette(\"Reds_r\"))\n\nsns.pairplot(data=data[['FGM', 'FGA', '3PM', '3PA', 'FTM', 'FTA', 'TOV', 'PF', 'ORB', 'DRB', 'REB', 'AST', 'STL', 'BLK']], \n             corner=True);","c188bb24":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Player High Schools<\/span>","7d9e950e":"# <span style=\"color:#ee6730;\">Importing Libraries<\/span>","977b5e67":"# <span style=\"color:#ee6730;\">Loading up the data \ud83c\udfc0<\/span>","7d4d87d9":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Seasons<\/span>","2811ddd1":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Match Stages<\/span>","48e95378":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Player Nationality<\/span>","61113d1d":"#### If you like my work, It will be really great of you to upvote this notebook!\n#### If not then you leaving a comment on what do I need to work on and improve will be really helpful!","bae2d074":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Leagues<\/span>","a7a24718":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Top Players<\/span>","2f848cc9":"# <span style=\"color:#ee6730;\">\ud83c\udfc0 Top Teams<\/span>"}}