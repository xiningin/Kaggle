{"cell_type":{"8fbc2180":"code","e563bbd7":"code","c7478b72":"code","6da72d55":"code","26616240":"code","4556ad72":"code","e7766926":"code","9b784199":"code","db0f2706":"code","a4eaa91c":"code","28a8226c":"code","1f355a80":"code","41d39243":"code","3bb22916":"code","a939921f":"code","213f8b13":"code","23a671a4":"code","bb2d3bd8":"code","dfb51ce0":"code","de4fca90":"code","b1984a74":"code","89423477":"code","43077da5":"code","7530eb21":"code","419c178a":"code","0204078c":"code","0370dbe4":"code","29d6740f":"code","fd00f741":"code","4fbbfde7":"code","1c63112a":"markdown","e5874b03":"markdown","4af3c5c1":"markdown","0dd946b0":"markdown","d89a9c93":"markdown","beb7a26d":"markdown","d61a67a2":"markdown","60c63edd":"markdown","13fe6c54":"markdown","a33d08b5":"markdown","c858b220":"markdown","56ba3e27":"markdown","5c027c52":"markdown","26e3eba6":"markdown","629d5603":"markdown"},"source":{"8fbc2180":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom matplotlib.image import imread\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e563bbd7":"path='..\/input\/asian-vs-african-elephant-image-classification\/dataset'","c7478b72":"os.listdir(path)","6da72d55":"test_path=path+'\/test\/'\ntrain_path=path+'\/train\/'","26616240":"os.listdir(test_path+'African\/')[0]","4556ad72":"plt.imshow(imread(test_path+'\/African\/af_te43.jpg'))","e7766926":"dim1=[]\ndim2=[]\n\nfor pic in os.listdir(train_path+'Asian'):\n    img=imread(train_path+'Asian'+'\/'+pic)\n    d1,d2,d3=img.shape\n    dim1.append(d1)\n    dim2.append(d2)","9b784199":"import seaborn as sns\nsns.set_style('darkgrid')\nsns.jointplot(dim1,dim2)","db0f2706":"image_size=(100,100,3)","a4eaa91c":"from tensorflow.keras.preprocessing.image import ImageDataGenerator","28a8226c":"test=os.listdir(test_path+'Asian\/')[0]\ntest=plt.imread(test_path+'Asian\/as_te87.jpg')","1f355a80":"image_gen=ImageDataGenerator(rotation_range=20,\n                            width_shift_range=0.2,\n                            height_shift_range=0.2,\n                            rescale=1\/255,\n                             shear_range=0.1,\n                             zoom_range=0.1,\n                             horizontal_flip=True,\n                             vertical_flip=True,\n                             fill_mode='nearest'\n                            )","41d39243":"plt.imshow(image_gen.random_transform(test))","3bb22916":"image_gen.flow_from_directory(train_path)","a939921f":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dropout, MaxPool2D, Conv2D, Dense, Flatten","213f8b13":"model= Sequential([\n    Conv2D(64, kernel_size=(3,3),activation='relu',input_shape=image_size),\n    MaxPool2D((2,2)),\n    \n    Conv2D(128, kernel_size=(3,3),activation='relu'),\n    MaxPool2D((2,2)),\n    \n    Conv2D(128, kernel_size=(3,3),activation='relu'),\n    MaxPool2D((2,2)),\n    \n    Flatten(),\n    \n    Dense(256, activation='relu'),\n    Dropout(0.5),\n    \n    Dense(1, activation='sigmoid')\n])","23a671a4":"model.compile(loss='binary_crossentropy',metrics=['accuracy'],optimizer='adamax')","bb2d3bd8":"from tensorflow.keras.callbacks import EarlyStopping\ncall=EarlyStopping(patience=5, min_delta=0.0001,monitor='val_loss')","dfb51ce0":"train_img=image_gen.flow_from_directory(train_path,\n                                     target_size=image_size[:2],\n                                     color_mode='rgb',\n                                     batch_size=16,\n                                     class_mode='binary')","de4fca90":"test_img=image_gen.flow_from_directory(test_path,\n                                     target_size=image_size[:2],\n                                     color_mode='rgb',\n                                     batch_size=8,\n                                     class_mode='binary',\n                                      shuffle=False)","b1984a74":"results=model.fit_generator(train_img,\n                           callbacks=[call],\n                           validation_data=test_img,\n                           epochs=40)","89423477":"loss=pd.DataFrame(model.history.history)","43077da5":"loss[['accuracy','val_accuracy']].plot()","7530eb21":"loss[['loss','val_loss']].plot()","419c178a":"model.evaluate_generator(test_img)","0204078c":"pred=model.predict_generator(test_img)","0370dbe4":"predd=pred>0.5","29d6740f":"from sklearn.metrics import classification_report, confusion_matrix","fd00f741":"print(classification_report(test_img.classes,predd))","4fbbfde7":"confusion_matrix(test_img.classes, predd)","1c63112a":"# Fitting the model","e5874b03":"### Visualizing the dimensions of dataset","4af3c5c1":"# Generating more data to generalize the model\n### using *ImageDataGenerator*","0dd946b0":"# Evaluating the model's performance","d89a9c93":"### Picking best dimension","beb7a26d":"# Exploring the datasets ","d61a67a2":"## Generating Classification report and Confusion Matrix","60c63edd":"# Generating more train and test images","13fe6c54":"### First image in African folder","a33d08b5":"### Listing the test and training datasets","c858b220":"# Deciding the dimensions for our input data\n\n### Use the average dimension out from all of the images","56ba3e27":"# Creating CNN Model\n### using Convolution, MaxPooling, Dense, Dropout and Flatten layers","5c027c52":"### Random image after transformation","26e3eba6":"# Approach to solve this problem will include:\n\n### 1. Selecting the best dimensions for the images\n### 2. Generate more sample images out of sample data to generalize the model\n### 3. Apply Random image transformations\n### 4. Feed the data into model\n### 5. Hope for the best results!","629d5603":"# Visualizing the loss and Accuracy of CNN model"}}