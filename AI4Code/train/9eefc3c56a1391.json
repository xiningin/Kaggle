{"cell_type":{"230ace35":"code","06cb030d":"code","88175eda":"code","7499b93c":"code","a02a2545":"code","960cfd2e":"code","f78e322c":"code","77d471a0":"code","6028c48a":"code","fdf6c9c6":"code","ba3697e3":"code","50e8c483":"code","645866e1":"code","7179616d":"code","92769a4f":"code","26eb5b0d":"code","72eec35d":"markdown","75bbf6eb":"markdown","31e4eca2":"markdown","204c7b5b":"markdown","ba2b677c":"markdown","484f35a4":"markdown"},"source":{"230ace35":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","06cb030d":"rating = pd.read_csv(\"\/kaggle\/input\/movielens-20m-dataset\/rating.csv\")\nmovie =  pd.read_csv(\"\/kaggle\/input\/movielens-20m-dataset\/movie.csv\")\n","88175eda":"rating.head()","7499b93c":"movie.head()","a02a2545":"#I must lower and edit titles of movies\nimport re \ndef edit(string):\n    stg = re.sub(\"[^a-zA-Z]\",\" \",string)\n    stg = stg.lower()\n    stg = stg.replace(\" \",\"\")\n    return stg","960cfd2e":"#try\nedit(\"Toy Story (1995)\")","f78e322c":"#lets replace\nfor each in movie.title:\n    new_title = edit(each)\n    movie.title.replace(to_replace = each , value = new_title, inplace= True)\n    ","77d471a0":"#lets see\nmovie.head()","6028c48a":"rating = rating.iloc[:1000000,:]","fdf6c9c6":"rating.shape","ba3697e3":"#now replace in rating dataframe\nrating.movieId = [movie.title[movie.movieId == each].values[0:1][0] for each in rating.movieId]\n    ","50e8c483":"rating.head()","645866e1":"last_data = pd.pivot_table(rating,index = [\"userId\"],columns = [\"movieId\"],values = \"rating\")","7179616d":"last_data.head()","92769a4f":"#Now its the time for our recommendation system\nlast_data = last_data.fillna(0)\ndef result(variable):\n    movie = last_data[variable]\n    similarity  = last_data.corrwith(movie)\n    similarity  = similarity.sort_values(ascending  = False)\n    return similarity","26eb5b0d":"\ndef program(): \n    inp = str(input(\"Please enter your movie's name\"+\" T\u00fcrk\u00e7e: L\u00fctfen filminizin ismini giriniz:\"))\n    string = edit(inp)\n    try:\n        last= result(string).iloc[1:2].index[0]\n        print(\"I can recommend you that movie, im sure you love it : {}\"+\"T\u00fcrk\u00e7e: Sana \u015fu filmi \u00f6neriyorum, eminim seviceksin : {}\".format(last,last))\n    except KeyError:\n        print(\"Movie name is wrong please enter correct name of movie!\"+ \"T\u00fcrk\u00e7e: Film ismi yanl\u0131\u015f l\u00fctfen filmin do\u011fru ismini giriniz!\")\n    \n    \n    \n","72eec35d":"<a id = \"2\" \/><\/a>\n#### Correlation System","75bbf6eb":"<font color = \"green\">\n\n### INTRODUCTION\n<br>\n    \n    \n<font color = \"orange\">\n    \n#### What Will We Do ?\n\n<font color = \"black\">\n\n* ##### I will do a recommendation system for confused people. \n* ##### Firstly, i must import and tidy my data i think this is the hardest part because of our datasets. \n* ##### Then i will set my machine learning system. \n* ##### Finally  i will set a program for users so that they can input their 'watched movies'. \n* ##### Yeah, That is it!\n<br>\n    \n<font color = \"orange\">\n\n#### Steps :\n\n    \n<font color = \"black\" > \n \n* ##### [EDITING DATA](#1)\n* ##### [CORRELATION](#2)\n* ##### [PROGRAMMING](#3)   ","31e4eca2":"<font color = \"green\">\n    \n ##### I will establish lots of correlation so best way to do this = function ","204c7b5b":"<font color = \"red\"> \n\n* ##### Now its time for our input","ba2b677c":"<a id  = \"1\" ><\/a>\n\n### Importing Data","484f35a4":"<a id =\"3\" \/><\/a>\n#### Programming\n\n<font color = \"red\"> \n \n"}}