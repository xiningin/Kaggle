{"cell_type":{"99e73061":"code","2b79fd25":"code","4b39b354":"code","21446362":"code","0328a684":"code","d13f8740":"code","55816721":"code","34e5cefc":"code","0b764e4f":"code","6c4d81a3":"code","6cb2d558":"code","03d97ed1":"code","d30e6715":"code","26684cb1":"code","8b03504a":"code","a2d93454":"code","4375aa93":"code","145829bb":"code","8bfc8c26":"code","d28f9e79":"code","98b71421":"markdown","a0147f57":"markdown","1cf26773":"markdown","469051be":"markdown","4473ac4b":"markdown","d091608c":"markdown","a5791f6c":"markdown","3d811f23":"markdown","979f8099":"markdown"},"source":{"99e73061":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2b79fd25":"df = pd.read_csv(\"\/kaggle\/input\/student-marks-dataset\/Student.csv\")","4b39b354":"df.head()","21446362":"df.tail()","0328a684":"df.sample(10)","d13f8740":"df.info()","55816721":"df['Result'].value_counts()","34e5cefc":"df.isnull().sum()","0b764e4f":"sns.pairplot(df)","6c4d81a3":"sns.set_theme(style=\"darkgrid\")\nax = sns.countplot(x=\"Maths\", data=df) ","6cb2d558":"ax = sns.countplot(x=\"Chemistry\", data=df) ","03d97ed1":"ax = sns.countplot(x=\"Physics\", data=df) ","d30e6715":"df.corr()","26684cb1":"label=df[\"Result\"]\ndata=df.drop('Result',axis=1)\n\nfrom sklearn.linear_model import LogisticRegression\nmodel=LogisticRegression()\nmodel.fit(data,label)","8b03504a":"model.score(data, label)","a2d93454":"from sklearn.metrics import accuracy_score\naccuracy_score(label, model.predict(data)) ","4375aa93":"from sklearn.metrics import mean_squared_error\nmean_squared_error(label, model.predict(data)) ","145829bb":"df1 = pd.DataFrame({'Actual': label, 'Predicted': model.predict(data), 'Difference': round( (label - model.predict(data)),2 ) }) \ndf1.head(10)","8bfc8c26":"model.predict([[90,90,80]])  ","d28f9e79":"model.predict([[70,70,70]])","98b71421":"- The Result have 0 and 1 values only. ","a0147f57":"- In General Term the 0 means Fail and 1 means Pass ","1cf26773":"# Accuracy Score","469051be":"- There are no Null Values in the dataset.","4473ac4b":"# The value of MSE is near to 0 and not more. So, It have less errors. ","d091608c":"# Model Score","a5791f6c":"# Mean Square Error","3d811f23":"# Applying Model","979f8099":"# Let's Check Null Values in the Data"}}