{"cell_type":{"65c40de4":"code","b66100ff":"code","15f840c7":"code","aa939f94":"code","cee852de":"code","5c1dbdfa":"code","6b7bcaf5":"code","086edf63":"code","45875466":"code","d9d55272":"code","bdc81a60":"code","11640df9":"code","a8acb754":"code","5dee4f1a":"markdown","047e79bb":"markdown","05d2896c":"markdown","83aac864":"markdown","4c533013":"markdown"},"source":{"65c40de4":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom autofeat import AutoFeatRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import explained_variance_score","b66100ff":"df = pd.read_csv(\"..\/input\/Concrete_Data_Yeh.csv\")","15f840c7":"df.head()","aa939f94":"X = df[['cement','slag','flyash','water','superplasticizer','coarseaggregate','fineaggregate','age']]\ny = df[['csMPa']]","cee852de":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","5c1dbdfa":"model = AutoFeatRegression()\nmodel","6b7bcaf5":"X_train_feature_creation = model.fit_transform(X_train.to_numpy(), y_train.to_numpy().flatten())","086edf63":"X_test_feature_creation = model.transform(X_test.to_numpy())","45875466":"X_test_feature_creation.head()","d9d55272":"X_train_feature_creation.head()","bdc81a60":"X_train_feature_creation.shape[1] - X_train.shape[1]","11640df9":"model_1 = LinearRegression().fit(X_train,y_train.to_numpy().flatten())\nmodel_2 = LinearRegression().fit(X_train_feature_creation, y_train.to_numpy().flatten())","a8acb754":"explained_variance_score(y_test, model_1.predict(X_test)), explained_variance_score(y_test, model_2.predict(X_test_feature_creation))","5dee4f1a":"We can check our new dataframe ! ","047e79bb":"A big improvement ! A good question would be to know if we could find this kind of improvements with more complex models.","05d2896c":"Now let's see what results we get with Autofeat ! ","83aac864":"**27 features** have been added by autofeat\n\nWe will train 2 logistic regression : \n    - One with the initial X_train\n    - One with X_train_feature_creation\n    \n","4c533013":"### Conclusions : "}}