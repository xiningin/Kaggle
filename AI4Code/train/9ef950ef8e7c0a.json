{"cell_type":{"7916611a":"code","d4b08215":"code","ea22cc44":"code","6d0a84de":"code","98fef604":"code","f2eed154":"code","8d72ea82":"code","e0963b48":"code","19d2c17f":"code","87ff9764":"code","5ed65466":"code","7634059b":"code","136f6753":"code","bad175d0":"code","88917968":"code","68be2e92":"code","494de422":"code","a79ab842":"code","ceab5381":"code","da0aed0c":"code","871177bc":"code","d5f8e842":"code","9c1a872e":"code","87661314":"code","1d884129":"code","ff50bbab":"code","dba72668":"code","a8597886":"code","f1aca1d4":"code","0195a38e":"code","e66bd555":"code","708e41f6":"code","d9bdbd67":"code","c4029887":"code","3376a70d":"code","495f5592":"code","c88ed6fe":"code","eb2ebd7a":"code","a78baf4e":"code","35e0195c":"code","d6ba198a":"code","8fab62a2":"code","2a74022a":"code","29f362ac":"code","eb3954e7":"code","27347f47":"code","afc262ab":"code","24980106":"code","6ab3b885":"code","f629515e":"code","c442ca28":"code","52baaaa4":"code","9b41ae9e":"code","9fa7ebce":"code","1d41d1a5":"code","c42fd597":"code","00d5929a":"markdown","2087f17e":"markdown","41f01189":"markdown","1eca6c3f":"markdown","fc518976":"markdown","39d8ecde":"markdown","486c4693":"markdown","cb0521a6":"markdown","a110901f":"markdown","5afa6227":"markdown","123431a3":"markdown","f2c77ece":"markdown","955f08f7":"markdown","4274c795":"markdown","c0537133":"markdown","eb120339":"markdown","394db40f":"markdown","db521a27":"markdown","24751da4":"markdown"},"source":{"7916611a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d4b08215":"import pandas as pd\nfrom collections import defaultdict","ea22cc44":"df=pd.read_csv(\"\/kaggle\/input\/gufhtugu-publications-dataset-challenge\/GP Orders - 5.csv\",encoding='utf-8')","6d0a84de":"df.shape","98fef604":"df.describe()","f2eed154":"df.info()","8d72ea82":"df.head()","e0963b48":"df[\"City\"].replace(np.NaN, '', inplace=True)","19d2c17f":"df['City'].unique()","87ff9764":"df['City'].nunique()","5ed65466":"df['City'] = df['City'].str.lower()","7634059b":"df['City'].nunique()","136f6753":"def get_digits(str1):\n    try:\n        c = \"\"\n        for i in str1:\n            if i.isdigit():\n                c += i\n        return c\n    except:\n        print(str1)","bad175d0":"for city in df['City'].unique():\n    if(len(get_digits(city))):\n        print(city)","88917968":"char_array=['\u0614',\n '\u0622',\n '\u0624',\n '\u0626',\n '\u0627',\n '\u0628',\n '\u062a',\n '\u062b',\n '\u062c',\n '\u062d',\n '\u062e',\n '\u062f',\n '\u0630',\n '\u0631',\n '\u0632',\n '\u0633',\n '\u0634',\n '\u0635',\n '\u0636',\n '\u0637',\n '\u0638',\n '\u0639',\n '\u063a',\n '\u0641',\n '\u0642',\n '\u0644',\n '\u0645',\n '\u0646',\n '\u0648',\n '\u0679',\n '\u067e',\n '\u0686',\n '\u0688',\n '\u06a9',\n '\u06af',\n '\u06ba',\n '\u06be',\n '\u06c1',\n '\u06cc',\n '\u06d2']\ndef get_urdu(str1):\n    try:\n        c = \"\"\n        for i in str1:\n            if i in char_array:\n                c += i\n        return c\n    except:\n        print(str1)","68be2e92":"urdu_cities=[]\nfor city in df['City'].unique():\n    if(len(get_urdu(city))):\n        print(city)\n        urdu_cities.append(city)","494de422":"len(urdu_cities)","a79ab842":"df_unique_city=pd.DataFrame()","ceab5381":"df_unique_city['city']=df['City']","da0aed0c":"df_unique_city['o_city']=df['City']","871177bc":"df_unique_city.nunique()","d5f8e842":"df_unique_city","9c1a872e":"def stripcityname(str_segment):\n    str_segment = str_segment.strip() \n    str_segment = \" \".join(str_segment.split())\n    return str_segment","87661314":"df_unique_city.city=df_unique_city.city.apply(lambda x: stripcityname(x))","1d884129":"df_unique_city","ff50bbab":"df_unique_city.nunique()","dba72668":"def remove_all_digit_cities(str_segment):\n    str_segment = str_segment.strip()\n    str_len=len(str_segment)\n    c = \"\"\n    for i in str_segment:\n        if i.isdigit():\n            c += i\n    if len(c)==len(str_segment):\n        print(str_segment)\n        return ''\n    else:\n        return str_segment\n    ","a8597886":"df_unique_city.city=df_unique_city.city.apply(lambda x: remove_all_digit_cities(x))","f1aca1d4":"df_unique_city.nunique()","0195a38e":"df_unique_city.sort_values(by='city', inplace=True)","e66bd555":"df_unique_city","708e41f6":"eng_city_names=pd.read_csv('\/kaggle\/input\/pakistan-cities\/pk.csv')\nengcity_names=eng_city_names['city'].tolist()\nengcity_names_lower=[]\nfor engcity_name in engcity_names:\n    engcity_names_lower.append(engcity_name.lower())\nfor index,engcity_name in enumerate(engcity_names_lower):\n    if 'city' in engcity_name:\n        engcity_names_lower[index]=engcity_name.split()[0]    ","d9bdbd67":"engcity_names_lower","c4029887":"popularcitieslist=defaultdict(lambda: defaultdict(lambda: defaultdict(set)))","3376a70d":"def hello(list):\n    return 'hello'","495f5592":"for city in engcity_names_lower:\n    hello(popularcitieslist[city]['eng']['assigned_original'])\n    hello(popularcitieslist[city]['eng']['available_original_as_it_is'])\n    hello(popularcitieslist[city]['eng']['available_original_in_str'])\n    hello(popularcitieslist[city]['eng']['assigned_original_single_token_variant'])\n    hello(popularcitieslist[city]['eng']['available_original_in_multi_token'])\n    hello(popularcitieslist[city]['eng']['assigned_original_in_multi_token_variant'])\n    hello(popularcitieslist[city]['urdu']['assigned_original'])\n    hello(popularcitieslist[city]['urdu']['available_original_as_it_is'])\n    hello(popularcitieslist[city]['urdu']['available_original_in_str'])\n    hello(popularcitieslist[city]['urdu']['assigned_original_single_token_variant'])\n    hello(popularcitieslist[city]['urdu']['available_original_in_multi_token'])\n    hello(popularcitieslist[city]['urdu']['assigned_original_in_multi_token_variant'])\n    ","c88ed6fe":"for city in engcity_names_lower:\n    popularcitieslist[city]['eng']['assigned_original'].add(city)","eb2ebd7a":"def find_if_cityname_in_str(str_segment):\n    for city in engcity_names_lower:    \n        if city in str_segment:\n            popularcitieslist[city]['eng']['available_original_in_str'].add(city)\n            if city==str_segment:\n                popularcitieslist[city]['eng']['available_original_as_it_is'].add(city)\n            if str_segment != city:\n                popularcitieslist[city]['eng']['available_original_in_multi_token'].add(str_segment)\n    return str_segment","a78baf4e":"df_unique_city.city=df_unique_city.city.apply(lambda x: find_if_cityname_in_str(x))","35e0195c":"eng_available_original_as_it_is=set()\nfor city in engcity_names_lower:\n    if len(popularcitieslist[city]['eng']['available_original_as_it_is']):\n        eng_available_original_as_it_is.add(city)\nlen(eng_available_original_as_it_is)","d6ba198a":"eng_available_original_as_it_is","8fab62a2":"englishtourducities=defaultdict(set,\n            {'karachi': {'\u06a9\u0631\u0627\u0686\u06cc'},\n             'lahore': {'\u0644\u0627\u06c1\u0648\u0631', '\u0644\u0627\u06be\u0648\u0631'},\n             'sialkot': {'\u0633\u06cc\u0627\u0644\u06a9\u0648\u0679'},\n             'faisalabad': {'\u0641\u06cc\u0635\u0644 \u0622\u0628\u0627\u062f'},\n             'rawalpindi':{ '\u0631\u0627\u0648\u0644\u067e\u0646\u0688\u06cc'},\n             'peshawar': {'\u067e\u0634\u0627\u0648\u0631'},\n             'saidu sharif':{ '\u0633\u06cc\u062f\u0648 \u0634\u0631\u06cc\u0641'},\n             'multan':{ '\u0645\u0644\u062a\u0627\u0646'},\n             'gujranwala':{ '\u06af\u0648\u062c\u0631\u0627\u0646\u0648\u0627\u0644\u06c1'},\n             'islamabad': {'\u0627\u0633\u0644\u0627\u0645 \u0622\u0628\u0627\u062f'},\n             'quetta':{ '\u06a9\u0648\u0626\u0679\u06c1'},\n             'bahawalpur': {'\u0628\u06c1\u0627\u0648\u0644\u067e\u0648\u0631'},\n             'sargodha':{ '\u0633\u0631\u06af\u0648\u062f\u06be\u0627'},\n             'chiniot':{ '\u0686\u0646\u06cc\u0648\u0679'},\n             'jhang': {'\u062c\u06be\u0646\u06af'},\n             'rahimyar khan': {'\u0631\u062d\u06cc\u0645 \u06cc\u0627\u0631 \u062e\u0627\u0646'},\n             'gujrat':{ '\u06af\u062c\u0631\u0627\u062a'},\n             'kasur': {'\u0642\u0635\u0648\u0631'},\n             'mardan': {'\u0645\u0631\u062f\u0627\u0646'},\n             'mingaora':{ '\u0645\u06cc\u0646\u06af\u0648\u0631\u06c1'},\n             'nawabshah':{ '\u0646\u0648\u0627\u0628\u0634\u0627\u06c1', '\u0646\u0648\u0627\u0628 \u0634\u0627\u06c1'},\n             'okara' :{ '\u0627\u0648\u06a9\u0627\u0691\u0627','\u0627\u0648\u06a9\u0627\u0691\u06c1'},\n             'haripur' : {'\u06be\u0631\u06cc \u067e\u0648\u0631','\u06c1\u0631\u06cc\u067e\u0648\u0631'},\n             'shekhupura':{ '\u0634\u06cc\u062e\u0648\u067e\u0648\u0631\u06c1'},\n             'attock' : {'\u0627\u0679\u06a9'},\n             'mandi bahauddin':{'\u0645\u0646\u0688\u06cc \u0628\u06c1\u0627\u0648\u0627\u0644\u062f\u06cc\u0646'},\n             'dera ismail khan':{'\u0688\u06cc\u0631\u06c1 \u0627\u0633\u0645\u0627\u0639\u06cc\u0644 \u062e\u0627\u0646'},\n             'sukkur': {'\u0633\u06a9\u06c1\u0631','\u0633\u06a9\u06be\u0631'}\n            })","2a74022a":"for key, value in englishtourducities.items():\n    for urd_city in value:\n        popularcitieslist[key]['urdu']['assigned_original'].add(urd_city)\n","29f362ac":"def find_if_urducityname_in_str(str_segment):\n    for city in engcity_names_lower:\n        for urdu_city in popularcitieslist[city]['urdu']['assigned_original']:\n            if urdu_city in str_segment:\n                popularcitieslist[city]['urdu']['available_original_in_str'].add(urdu_city)\n                if urdu_city==str_segment:\n                    popularcitieslist[city]['urdu']['available_original_as_it_is'].add(urdu_city)\n                if str_segment != urdu_city:\n                    popularcitieslist[city]['urdu']['available_original_in_multi_token'].add(str_segment)\n    return str_segment","eb3954e7":"df_unique_city.city=df_unique_city.city.apply(lambda x: find_if_urducityname_in_str(x))","27347f47":"popularcitieslist.keys()","afc262ab":"!pip install fuzzywuzzy python-Levenshtein","24980106":"import fuzzywuzzy\nfrom fuzzywuzzy import fuzz\nfrom fuzzywuzzy import process","6ab3b885":"def similarwords_f(str_segment):\n    for city in engcity_names_lower:\n        for asgncity_name in popularcitieslist[city]['eng']['assigned_original']:\n            if fuzz.ratio(str_segment,asgncity_name)>85:\n                if str_segment != asgncity_name:\n                    popularcitieslist[city]['eng']['assigned_original_single_token_variant'].add(str_segment)\n        for asgncity_name in popularcitieslist[city]['urdu']['assigned_original']:\n            if fuzz.ratio(str_segment,asgncity_name)>85:\n                if str_segment != asgncity_name:\n                    popularcitieslist[city]['urdu']['assigned_original_single_token_variant'].add(str_segment)            \n    return str_segment","f629515e":"df_unique_city.city=df_unique_city.city.apply(lambda x: similarwords_f(x))","c442ca28":"df_unique_city.nunique()","52baaaa4":"df_unique_city.sort_values(by='city', inplace=True)","9b41ae9e":"def replace_with_popularcitieslist(str_segment):\n    for city in engcity_names_lower:\n        if str_segment == city:\n            return city\n        for city_name in popularcitieslist[city]['eng']['assigned_original']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['eng']['available_original_as_it_is']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['eng']['available_original_in_multi_token']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['eng']['assigned_original_single_token_variant']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['eng']['assigned_original_in_multi_token_variant']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['urdu']['assigned_original']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['urdu']['available_original_as_it_is']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['urdu']['available_original_in_multi_token']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['urdu']['assigned_original_single_token_variant']:\n            if str_segment == city_name:\n                return city\n        for city_name in popularcitieslist[city]['urdu']['assigned_original_in_multi_token_variant']:\n            if str_segment == city_name:\n                return city\n    return str_segment","9fa7ebce":"df_unique_city.city=df_unique_city.city.apply(lambda x: replace_with_popularcitieslist(x))","1d41d1a5":"df_unique_city.nunique()","c42fd597":"df_unique_city","00d5929a":"## lets find out how many cities have urdu characters","2087f17e":"find available_original city name and update popularcitieslist ","41f01189":"## get standard city names in english","1eca6c3f":"## popular cities available as it is, they must be included in final list","fc518976":"Cities with digits","39d8ecde":"## lets find out how man cities contain digit in their name","486c4693":"## strip extra spaces in city names","cb0521a6":"## total number of orders and columns","a110901f":"## build a dictionary for all unique names in df_unique_city.o_city\n### This is a dictionary we can use to map original city name to standard city name","5afa6227":"## lets create a new dataframe for cities only so that we can reduce it","123431a3":"## see null elements if any","f2c77ece":"## the number of unique cities all lowercase is 3600 which is very high","955f08f7":"## assigned_original is city name as assigned as standard name as in engcity_names_lower\n## available_original_as_it_is is as available in df\n## available_original_in_str if city name is available in string in df\n## assigned_original_single_token_variant is a single token variant of assigned_original in df\n## available_original_in_multi_token is if any word in df matches exactly with assigned_original\n## assigned_original_in_multi_token_variant is if any word in df matches approxximately with assigned_original","4274c795":"## remove city if it has all digits only","c0537133":"normalize the city name in new dataframe","eb120339":"city names in urdu","394db40f":"# A notebook trying to clean the city column in the dataset\n## the goal is to reduce the number of unique cities to minimum","db521a27":"## describe numeric data in dataset","24751da4":"# so we reduce 3600 cities to 1809\n# we will reduce more in future"}}