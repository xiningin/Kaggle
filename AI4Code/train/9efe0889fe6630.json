{"cell_type":{"8285bb73":"code","387b7ada":"code","04a9ac3f":"code","8358d3c3":"code","432f18ff":"code","bdc236de":"code","3927a47c":"code","15b978e9":"code","07539972":"code","df738eca":"code","c4a9759c":"code","b720d784":"code","bcc76612":"code","a109ad8f":"code","d3d3945c":"code","58e4563d":"code","4112ec40":"code","13c0c11b":"code","592d0a46":"code","e5e88bf6":"code","54644461":"code","95476290":"code","38019513":"code","2d2d57b3":"markdown","f63bd89d":"markdown","60492326":"markdown","609ac621":"markdown","3fe3ec80":"markdown","680afc38":"markdown","e97b9a83":"markdown","02506762":"markdown","ef98ea7e":"markdown","badd5446":"markdown","3f89f516":"markdown","2db28a1a":"markdown","54c949c8":"markdown"},"source":{"8285bb73":"!pip install git+https:\/\/github.com\/ssut\/py-googletrans.git","387b7ada":"\nimport tensorflow as tf\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\n\n# \u0e40\u0e23\u0e32 import HuggingFace GPT2 \u0e17\u0e35\u0e48\u0e19\u0e35\u0e48\u0e04\u0e23\u0e31\u0e1a , TF \u0e02\u0e49\u0e32\u0e07\u0e2b\u0e19\u0e49\u0e32 GPT2 \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07 Tensorflow-Keras\nfrom transformers import GPT2Tokenizer, TFGPT2LMHeadModel","04a9ac3f":"# \u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48 version 2.0 \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19\u0e21\u0e32 Tensorflow \u0e44\u0e14\u0e49\u0e1c\u0e19\u0e27\u0e01\u0e01\u0e31\u0e1a Keras \u0e42\u0e14\u0e22\u0e2a\u0e21\u0e1a\u0e39\u0e23\u0e13\u0e4c\n# \u0e42\u0e21\u0e40\u0e14\u0e25\u0e2b\u0e25\u0e31\u0e01\u0e46 \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e02\u0e2d\u0e07 Tensorflow \u0e08\u0e30\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e23\u0e39\u0e1b Keras \u0e42\u0e21\u0e40\u0e14\u0e25\u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\ntf.__version__","8358d3c3":"tokenizer = GPT2Tokenizer.from_pretrained('gpt2-large')\ntokenizer.vocab_size","432f18ff":"# Encode a text inputs\ntext = \"Who was Jim Henson ? Jim Henson was a\"\nindexed_tokens = tokenizer.encode(text, add_special_tokens=True)\nprint(indexed_tokens, len(indexed_tokens), len(text.split()))","bdc236de":"## \u0e19\u0e35\u0e48\u0e04\u0e37\u0e2d fast_tokenizer\nfrom tokenizers import ByteLevelBPETokenizer\n\ntokenizer.save_pretrained('.')\n# Reload it with the huggingface tokenizers library\n# using lowercase=True making fast_tokenizer different from the original one\nfast_tokenizer = ByteLevelBPETokenizer(\".\/vocab.json\", \".\/merges.txt\", lowercase=True) \n\noutput = fast_tokenizer.encode(text, \n#                                add_special_tokens=True # this option does not exist\n                              )\nprint(output)\nprint(output.ids)\nprint(output.tokens)\nprint(output.attention_mask)\nprint(output.special_tokens_mask)\nprint(output.original_str)\nprint(output.normalized_str)","3927a47c":"model = TFGPT2LMHeadModel.from_pretrained('gpt2-large')\nmodel.summary()","15b978e9":"\nids = tokenizer.encode(\"My name is James and I am your doctor\", \n                       return_tensors='tf') # \u0e23\u0e30\u0e1a\u0e38\u0e43\u0e2b\u0e49 tokenizer \u0e2a\u0e48\u0e07\u0e04\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19 tensor \u0e02\u0e2d\u0e07 tensorflow\ngreedy_output = model.generate(ids, max_length=60)\n\nprint(\"Output:\\n\" + 100 * '-')\nprint(tokenizer.decode(greedy_output[0], skip_special_tokens=False))","07539972":"%%time\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, # \u0e2a\u0e23\u0e49\u0e32\u0e07 texts \u0e08\u0e33\u0e19\u0e27\u0e19 100 \u0e04\u0e33\n    top_k=55, \n    top_p=0.925, \n    num_return_sequences=5 # \u0e43\u0e2b\u0e49\u0e2a\u0e23\u0e49\u0e32\u0e07 5 \u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\n)\n\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n  print(\"\\n\"+\"===\"*10)\n  print(\"{}: {}\".format(i, tokenizer.decode(sample_output, skip_special_tokens=False)))","df738eca":"from googletrans import Translator\n\ntranslator = Translator()","c4a9759c":"## \u0e25\u0e2d\u0e07 Greedy \u0e01\u0e31\u0e19\u0e01\u0e48\u0e2d\u0e19 \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e44\u0e14\u0e49\u0e04\u0e33\u0e0b\u0e49\u0e33\u0e46 \u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e14\u0e34\u0e21\norig_input=\"\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a \u0e1c\u0e21\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e08\u0e21\u0e2a\u0e4c \u0e41\u0e25\u0e30\u0e1c\u0e21\u0e08\u0e30\u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e21\u0e2d\u0e14\u0e39\u0e41\u0e25\u0e04\u0e38\u0e13\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\ngreedy_output = model.generate(ids, max_length=60)\n\nprint(\"Output:\\n\" + 100 * '-')\norig_output = tokenizer.decode(greedy_output[0], skip_special_tokens=True)\nnew_output = translator.translate(orig_output, dest='th').text\nprint(new_output)","b720d784":"%%time\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=50, \n    top_p=0.925, \n    num_return_sequences=5\n)\n\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","bcc76612":"%%time\norig_input=\"\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e2a\u0e32\u0e22\u0e1e\u0e31\u0e19\u0e18\u0e38\u0e4c\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e2d\u0e2d\u0e01\u0e0b\u0e34\u0e40\u0e08\u0e19\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.95, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","a109ad8f":"%%time\norig_input=\"\u0e17\u0e35\u0e21\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e0a\u0e32\u0e27\u0e40\u0e22\u0e2d\u0e23\u0e21\u0e31\u0e19\u0e41\u0e25\u0e30\u0e0d\u0e35\u0e48\u0e1b\u0e38\u0e48\u0e19\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e22\u0e32\u0e17\u0e35\u0e48\u0e08\u0e30\u0e21\u0e32\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23 Corona Virus\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.925, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","d3d3945c":"%%time\norig_input=\"\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e23\u0e32\u0e04\u0e32\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e15\u0e01\u0e15\u0e48\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e2b\u0e38\u0e49\u0e19\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1e\u0e25\u0e31\u0e07\u0e07\u0e32\u0e19\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.95, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","58e4563d":"%%time\norig_input=\"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e18\u0e2d\u0e40\u0e14\u0e34\u0e19\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32\u0e17\u0e35\u0e48\u0e2b\u0e49\u0e2d\u0e07 \u0e2b\u0e31\u0e27\u0e43\u0e08\u0e02\u0e2d\u0e07\u0e1c\u0e21\u0e01\u0e47\u0e40\u0e15\u0e49\u0e19\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e31\u0e07\u0e2b\u0e27\u0e30\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.95, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","4112ec40":"%%time\norig_input=\"\u0e17\u0e35\u0e48\u0e2b\u0e21\u0e39\u0e48\u0e1a\u0e49\u0e32\u0e19\u0e41\u0e2b\u0e48\u0e07\u0e44\u0e1f \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e19\u0e32\u0e23\u0e38\u0e42\u0e15\u0e30 \u0e40\u0e2b\u0e47\u0e19\u0e0b\u0e32\u0e2a\u0e38\u0e40\u0e01\u0e30\u0e16\u0e37\u0e2d\u0e21\u0e35\u0e14\u0e40\u0e1b\u0e37\u0e49\u0e2d\u0e19\u0e04\u0e23\u0e32\u0e1a\u0e40\u0e25\u0e37\u0e2d\u0e14\u0e43\u0e19\u0e21\u0e37\u0e2d \u0e41\u0e25\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e0b\u0e32\u0e01\u0e38\u0e23\u0e30\u0e19\u0e2d\u0e19\u0e01\u0e2d\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e01\u0e31\u0e1a\u0e1e\u0e37\u0e49\u0e19 \u0e01\u0e47\u0e15\u0e30\u0e42\u0e01\u0e19\u0e2d\u0e2d\u0e01\u0e44\u0e1b\u0e27\u0e48\u0e32\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.925, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","13c0c11b":"%%time\norig_input=\"\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e23\u0e48\u0e18\u0e32\u0e15\u0e38\u0e43\u0e2b\u0e21\u0e48 vibranium \u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e17\u0e19\u0e17\u0e32\u0e19\u0e2a\u0e39\u0e07\u0e01\u0e27\u0e48\u0e32\u0e40\u0e1e\u0e0a\u0e23 \u0e04\u0e27\u0e32\u0e21\u0e1d\u0e31\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e22\u0e2d\u0e14\u0e21\u0e19\u0e38\u0e29\u0e22\u0e4c \u0e01\u0e47\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48\u0e04\u0e27\u0e32\u0e21\u0e1d\u0e31\u0e19\u0e2d\u0e35\u0e01\u0e15\u0e48\u0e2d\u0e44\u0e1b \"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=60, \n    top_p=0.925, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","592d0a46":"%%time\norig_input=\"\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e22\u0e39\u0e19\u0e34\u0e04\u0e2d\u0e23\u0e4c\u0e19\u0e41\u0e25\u0e30\u0e21\u0e31\u0e07\u0e01\u0e23\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07\u0e42\u0e25\u0e01\u0e43\u0e19\u0e1b\u0e48\u0e32\u0e25\u0e36\u0e01\u0e2d\u0e40\u0e21\u0e0b\u0e2d\u0e19!!\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.95, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","e5e88bf6":"%%time\norig_input=\"\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e49\u0e19\u0e1b\u0e35\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19\u0e21\u0e32 \u0e40\u0e23\u0e32\u0e40\u0e08\u0e2d\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e27\u0e34\u0e01\u0e24\u0e15\u0e2b\u0e25\u0e32\u0e22\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e19\u0e31\u0e1a\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e44\u0e2b\u0e21\u0e49\u0e04\u0e23\u0e31\u0e49\u0e07\u0e43\u0e2b\u0e0d\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e43\u0e19\u0e2d\u0e2d\u0e2a\u0e40\u0e15\u0e23\u0e40\u0e25\u0e35\u0e22 \u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e04\u0e27\u0e31\u0e19\u0e1e\u0e34\u0e29\u0e43\u0e19\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22 \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14\u0e44\u0e27\u0e23\u0e31\u0e2a\u0e42\u0e04\u0e42\u0e23\u0e19\u0e48\u0e32\u0e17\u0e33\u0e43\u0e2b\u0e49\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.9, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","54644461":"%%time\norig_input=\"\u0e19\u0e1e.\u0e17\u0e27\u0e35\u0e28\u0e34\u0e25\u0e1b\u0e4c \u0e27\u0e34\u0e29\u0e13\u0e38\u0e42\u0e22\u0e18\u0e34\u0e19 \u0e42\u0e06\u0e29\u0e01\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e1a\u0e23\u0e34\u0e2b\u0e32\u0e23\u0e2a\u0e16\u0e32\u0e19\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e23\u0e48\u0e23\u0e30\u0e1a\u0e32\u0e14\u0e02\u0e2d\u0e07\u0e42\u0e23\u0e04\u0e15\u0e34\u0e14\u0e40\u0e0a\u0e37\u0e49\u0e2d virus corona \u0e01\u0e25\u0e48\u0e32\u0e27\u0e16\u0e36\u0e07\u0e41\u0e19\u0e27\u0e42\u0e19\u0e49\u0e21\u0e01\u0e32\u0e23\u0e1c\u0e48\u0e2d\u0e19\u0e04\u0e25\u0e32\u0e22\u0e21\u0e32\u0e15\u0e23\u0e01\u0e32\u0e23\u0e2b\u0e25\u0e31\u0e07\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e1c\u0e39\u0e49\u0e15\u0e34\u0e14\u0e40\u0e0a\u0e37\u0e49\u0e2d\u0e42\u0e04\u0e27\u0e34\u0e14-19 \u0e25\u0e14\u0e25\u0e07\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.95, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","95476290":"%%time\norig_input=\"\u0e04\u0e38\u0e13\u0e01\u0e33\u0e25\u0e31\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e42\u0e25\u0e01\u0e17\u0e35\u0e48\u0e40\u0e2d\u0e40\u0e25\u0e35\u0e48\u0e22\u0e19\u0e44\u0e14\u0e49\u0e1a\u0e34\u0e19\u0e40\u0e02\u0e49\u0e32\u0e21\u0e32 \u0e17\u0e27\u0e48\u0e32\u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07\u0e41\u0e25\u0e49\u0e27\u0e40\u0e2d\u0e40\u0e25\u0e35\u0e48\u0e22\u0e19\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\u0e21\u0e32\u0e02\u0e2d\u0e43\u0e2b\u0e49\u0e04\u0e38\u0e13\u0e0a\u0e48\u0e27\u0e22\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e14\u0e32\u0e27\u0e02\u0e2d\u0e07\u0e1e\u0e27\u0e01\u0e40\u0e02\u0e32\u0e17\u0e35\u0e48\u0e01\u0e33\u0e25\u0e31\u0e07\u0e08\u0e30\u0e16\u0e39\u0e01\u0e17\u0e33\u0e25\u0e32\u0e22!\"\nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=55, \n    top_p=0.925, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","38019513":"%%time\norig_input=\"==\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e32==\\n \u0e17\u0e32\u0e19\u0e38\u0e01\u0e34\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e21\u0e35\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e25\u0e31\u0e1a\u0e0b\u0e48\u0e2d\u0e19\u0e44\u0e27\u0e49\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22 \u0e04\u0e27\u0e32\u0e21\u0e08\u0e23\u0e34\u0e07\u0e01\u0e47\u0e04\u0e37\u0e2d\u0e1e\u0e27\u0e01\u0e21\u0e31\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e23\u0e48\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e31\u0e15\u0e27\u0e4c\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e2d\u0e37\u0e48\u0e19\u0e44\u0e14\u0e49  \" \nnew_input = translator.translate(orig_input, dest='en').text\n\nids = tokenizer.encode(new_input, return_tensors='tf')\n\nsample_outputs = model.generate(\n    ids,\n    do_sample=True, \n    max_length=100, \n    top_k=50, \n    top_p=0.90, \n    num_return_sequences=5\n)\nprint(\"Input: %s\\n\\n\" % orig_input)\nprint(\"Output:\\n\" + 100 * '-')\nfor i, sample_output in enumerate(sample_outputs):\n    out = tokenizer.decode(sample_output, skip_special_tokens=True)\n    new_out = translator.translate(out, dest='th').text\n    print(\"\\n\"+\"===\"*10)\n    print(\"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48{}: {}\\n\".format(i, new_out))","2d2d57b3":"# \u0e42\u0e2b\u0e25\u0e14\u0e42\u0e21\u0e40\u0e14\u0e25\u0e41\u0e25\u0e30\u0e15\u0e31\u0e27\u0e15\u0e31\u0e14\u0e04\u0e33\u0e02\u0e2d\u0e07 GPT-2\n\n\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e42\u0e21\u0e40\u0e14\u0e25 GPT-2 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 HuggingFace library \u0e21\u0e35\u0e41\u0e04\u0e48\u0e2a\u0e2d\u0e07\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\u0e04\u0e37\u0e2d\u0e42\u0e2b\u0e25\u0e14\u0e15\u0e31\u0e27\u0e15\u0e31\u0e14\u0e04\u0e33 \u0e41\u0e25\u0e30\u0e42\u0e2b\u0e25\u0e14\u0e42\u0e21\u0e40\u0e14\u0e25\u0e04\u0e23\u0e31\u0e1a \u0e08\u0e1a \u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\n\n\u0e01\u0e48\u0e2d\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e42\u0e2b\u0e25\u0e14\u0e15\u0e31\u0e27\u0e15\u0e31\u0e14\u0e04\u0e33\u0e02\u0e2d\u0e07 GPT-2 \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e21\u0e35\u0e04\u0e33\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 50257 \u0e0b\u0e36\u0e48\u0e07\u0e04\u0e33\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e17\u0e35\u0e48 GPT2 \u0e43\u0e0a\u0e49\u0e40\u0e1b\u0e47\u0e19 sub-words \u0e2b\u0e23\u0e37\u0e2d\u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e33\u0e44\u0e14\u0e49 \u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e15\u0e47\u0e21\u0e04\u0e33 (\u0e43\u0e19\u0e17\u0e32\u0e07\u0e40\u0e17\u0e04\u0e19\u0e34\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 Byte Pair Encoding)","f63bd89d":"# \u0e40\u0e01\u0e23\u0e34\u0e48\u0e19\u0e19\u0e33\n\n\n> \u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e0a\u0e19\u0e34\u0e14\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e1b\u0e23\u0e32\u0e28\u0e08\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e0b\u0e34\u0e40\u0e08\u0e19 \u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\u0e21\u0e35\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 Bacteroides lactis \u0e1e\u0e1a\u0e44\u0e14\u0e49\u0e43\u0e19\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a\u0e41\u0e21\u0e48\u0e19\u0e49\u0e33\u0e41\u0e25\u0e30\u0e2b\u0e19\u0e2d\u0e07\u0e19\u0e49\u0e33\u0e17\u0e31\u0e48\u0e27\u0e42\u0e25\u0e01 \u0e19\u0e31\u0e01\u0e27\u0e34\u0e08\u0e31\u0e22\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 B. lactis \u0e2d\u0e32\u0e08\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e42\u0e25\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e27\u0e25\u0e32 2 \u0e25\u0e49\u0e32\u0e19\u0e1b\u0e35 \u0e1e\u0e27\u0e01\u0e40\u0e02\u0e32\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32\u0e19\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e2a\u0e34\u0e48\u0e07\u0e21\u0e35\u0e0a\u0e35\u0e27\u0e34\u0e15\u0e17\u0e35\u0e48\u0e40\u0e01\u0e48\u0e32\u0e41\u0e01\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e23\u0e39\u0e49\u0e08\u0e31\u0e01\u0e1a\u0e19\u0e42\u0e25\u0e01 \u0e41\u0e21\u0e49\u0e27\u0e48\u0e32\u0e2a\u0e34\u0e48\u0e07\u0e21\u0e35\u0e0a\u0e35\u0e27\u0e34\u0e15\u0e43\u0e2b\u0e21\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e1c\u0e25\u0e34\u0e15\u0e0b\u0e49\u0e33\u0e2b\u0e23\u0e37\u0e2d\u0e27\u0e34\u0e27\u0e31\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23\u0e43\u0e19\u0e21\u0e2b\u0e32\u0e2a\u0e21\u0e38\u0e17\u0e23\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e08\u0e38\u0e25\u0e34\u0e19\u0e17\u0e23\u0e35\u0e22\u0e4c\u0e2d\u0e37\u0e48\u0e19 \u0e46 \u0e41\u0e15\u0e48\u0e21\u0e31\u0e19\u0e01\u0e47\u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e23\u0e23\u0e1e\u0e1a\u0e38\u0e23\u0e38\u0e29\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e38\u0e25\u0e34\u0e19\u0e17\u0e23\u0e35\u0e22\u0e4c\u0e2d\u0e37\u0e48\u0e19 \u0e46 \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e28\u0e31\u0e22\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e42\u0e25\u0e01\n\n> \u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07\u0e09\u0e31\u0e19\u0e04\u0e37\u0e2d\u0e40\u0e08\u0e21\u0e2a\u0e4c\u0e41\u0e25\u0e30\u0e09\u0e31\u0e19\u0e08\u0e30\u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e21\u0e2d\u0e14\u0e39\u0e41\u0e25\u0e04\u0e38\u0e13 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e38\u0e02\u0e20\u0e32\u0e1e\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e04\u0e38\u0e13\u0e15\u0e49\u0e2d\u0e07\u0e16\u0e2d\u0e14\u0e41\u0e08\u0e47\u0e04\u0e40\u0e01\u0e47\u0e15\u0e41\u0e25\u0e30\u0e2b\u0e21\u0e27\u0e01\u0e2d\u0e2d\u0e01 \u0e21\u0e35\u0e1b\u0e37\u0e19\u0e2d\u0e22\u0e39\u0e48\u0e02\u0e49\u0e32\u0e07\u0e41\u0e02\u0e19\u0e0b\u0e49\u0e32\u0e22\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13 \u0e14\u0e39\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e01\u0e25\u0e49\u0e0a\u0e34\u0e14\u0e41\u0e25\u0e30\u0e04\u0e38\u0e13\u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e27\u0e48\u0e32\u0e21\u0e31\u0e19\u0e16\u0e39\u0e01\u0e42\u0e2b\u0e25\u0e14 \u0e21\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e23\u0e21\u0e34\u0e07\u0e15\u0e31\u0e19 641 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e17\u0e35\u0e48 \u0e44\u0e21\u0e48\u0e21\u0e35\u0e43\u0e04\u0e23\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e1b\u0e37\u0e19\u0e2b\u0e23\u0e37\u0e2d\u0e1e\u0e01\u0e2d\u0e32\u0e27\u0e38\u0e18\u0e40\u0e25\u0e22 \u0e16\u0e49\u0e32\u0e04\u0e38\u0e13\u0e17\u0e33\u0e04\u0e38\u0e13\u0e08\u0e30\u0e16\u0e39\u0e01\u0e22\u0e34\u0e07\u0e17\u0e31\u0e19\u0e17\u0e35 \u0e2d\u0e22\u0e48\u0e32\u0e41\u0e15\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e1b\u0e37\u0e19\n> \n\n\n\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35\u0e04\u0e23\u0e31\u0e1a \u0e27\u0e31\u0e19\u0e19\u0e35\u0e49\u0e40\u0e23\u0e32\u0e40\u0e1b\u0e34\u0e14\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e01\u0e31\u0e19\u0e14\u0e49\u0e27\u0e22\u0e19\u0e34\u0e22\u0e32\u0e22\u0e0b\u0e36\u0e48\u0e07\u0e2d\u0e32\u0e08\u0e08\u0e30\u0e14\u0e39\u0e41\u0e1b\u0e25\u0e01\u0e1b\u0e23\u0e30\u0e2b\u0e25\u0e32\u0e14\u0e44\u0e1b\u0e2a\u0e31\u0e01\u0e2b\u0e19\u0e48\u0e2d\u0e22 \u0e41\u0e15\u0e48\u0e19\u0e34\u0e22\u0e32\u0e22\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\u0e16\u0e39\u0e01\u0e41\u0e15\u0e48\u0e07\u0e41\u0e1a\u0e1a\u0e2a\u0e38\u0e48\u0e21\u0e46 \u0e42\u0e14\u0e22\u0e42\u0e21\u0e40\u0e14\u0e25 Deep Learning \u0e17\u0e35\u0e48\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 GPT-2 !!  \n\n\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49 \u0e02\u0e2d\u0e15\u0e49\u0e2d\u0e19\u0e23\u0e31\u0e1a\u0e40\u0e02\u0e49\u0e32\u0e2a\u0e39\u0e48 ThaiKeras Workshop -- GPT-2 Playground \u0e17\u0e35\u0e48\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30\u0e1b\u0e25\u0e14\u0e1b\u0e25\u0e48\u0e2d\u0e22\u0e08\u0e34\u0e19\u0e15\u0e19\u0e32\u0e01\u0e32\u0e23 \u0e41\u0e25\u0e30\u0e41\u0e15\u0e48\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e19\u0e34\u0e22\u0e32\u0e22\u0e2b\u0e23\u0e37\u0e2d\u0e02\u0e48\u0e32\u0e27\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e14\u0e49\u0e27\u0e22\u0e1e\u0e25\u0e31\u0e07\u0e02\u0e2d\u0e07 GPT-2 \u0e41\u0e25\u0e30 Google Translate \u0e04\u0e23\u0e31\u0e1a :D :D \n\n\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e46 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e39 Workshop \u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e07\u0e32\u0e19\u0e14\u0e49\u0e32\u0e19 Computer Vision, NLP, Fashion, Medical Images \u0e1e\u0e37\u0e49\u0e19\u0e10\u0e32\u0e19 Numpy \u0e41\u0e25\u0e30\u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e2d\u0e35\u0e01\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e1a\u0e19 Kaggle \u0e44\u0e14\u0e49\u0e17\u0e35\u0e48\u0e19\u0e35\u0e35\u0e48\u0e04\u0e23\u0e31\u0e1a https:\/\/thaikeras.com\/category\/workshop\/ \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e46 \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e40\u0e04\u0e22\u0e21\u0e35 Kaggle account \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 set up \u0e44\u0e14\u0e49\u0e14\u0e49\u0e27\u0e22\u0e15\u0e31\u0e27\u0e40\u0e2d\u0e07\u0e15\u0e32\u0e21\u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a https:\/\/thaikeras.com\/2018\/setup-kaggle-workshop\/\n\n## \u0e27\u0e48\u0e32\u0e14\u0e49\u0e27\u0e22 GPT2\n\n\u0e43\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e1b\u0e35\u0e17\u0e35\u0e48\u0e1c\u0e48\u0e32\u0e19\u0e21\u0e32 1 \u0e43\u0e19\u0e02\u0e48\u0e32\u0e27\u0e1a\u0e31\u0e19\u0e25\u0e37\u0e2d\u0e42\u0e25\u0e01\u0e02\u0e2d\u0e07\u0e27\u0e07\u0e01\u0e32\u0e23 AI \u0e41\u0e25\u0e30 DeepLearning \u0e01\u0e47\u0e04\u0e37\u0e2d \u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e0a\u0e37\u0e48\u0e2d GPT-2 \u0e02\u0e2d\u0e07\u0e17\u0e35\u0e21 OpenAI \u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e41\u0e15\u0e48\u0e07\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e44\u0e14\u0e49\u0e23\u0e32\u0e27\u0e01\u0e31\u0e1a\u0e21\u0e19\u0e38\u0e29\u0e22\u0e4c (\u0e43\u0e19\u0e41\u0e07\u0e48\u0e02\u0e2d\u0e07\u0e44\u0e27\u0e22\u0e32\u0e01\u0e23\u0e13\u0e4c) \u0e1a\u0e19\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 \"\u0e2d\u0e30\u0e44\u0e23\u0e01\u0e47\u0e44\u0e14\u0e49\" \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e41\u0e19\u0e27\u0e19\u0e34\u0e22\u0e32\u0e22\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c \u0e19\u0e34\u0e22\u0e32\u0e22\u0e42\u0e23\u0e41\u0e21\u0e19\u0e15\u0e34\u0e01 \u0e19\u0e34\u0e22\u0e32\u0e22\u0e2a\u0e22\u0e2d\u0e07\u0e02\u0e27\u0e31\u0e0d \u0e2a\u0e32\u0e23\u0e32\u0e19\u0e38\u0e01\u0e23\u0e21\u0e41\u0e1a\u0e1a Wikipedia \u0e02\u0e48\u0e32\u0e27\u0e1a\u0e19\u0e2a\u0e37\u0e48\u0e2d\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e2f\u0e25\u0e2f \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01 GPT-2 \u0e19\u0e31\u0e49\u0e19\u0e16\u0e39\u0e01\u0e1d\u0e36\u0e01\u0e2a\u0e2d\u0e19\u0e1a\u0e19 texts \u0e23\u0e30\u0e14\u0e31\u0e1a\u0e21\u0e2b\u0e32\u0e28\u0e32\u0e25\u0e1a\u0e19 internet \u0e0a\u0e19\u0e34\u0e14\u0e17\u0e35\u0e48\u0e21\u0e19\u0e38\u0e29\u0e22\u0e4c\u0e43\u0e0a\u0e49\u0e40\u0e27\u0e25\u0e32\u0e2d\u0e48\u0e32\u0e19\u0e17\u0e31\u0e49\u0e07\u0e0a\u0e35\u0e27\u0e34\u0e15\u0e01\u0e47\u0e44\u0e21\u0e48\u0e08\u0e1a\u0e44\u0e21\u0e48\u0e2a\u0e34\u0e49\u0e19 \u0e41\u0e1f\u0e19\u0e1e\u0e31\u0e19\u0e18\u0e38\u0e4c\u0e41\u0e17\u0e49\u0e02\u0e2d\u0e07\u0e27\u0e07\u0e01\u0e32\u0e23 AI \u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e21\u0e35\u0e43\u0e04\u0e23\u0e44\u0e21\u0e48\u0e23\u0e39\u0e49\u0e08\u0e31\u0e01 GPT-2 \u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19 \n\n\u0e2d\u0e31\u0e19 GPT-2 \u0e19\u0e31\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e43\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e02\u0e2d\u0e07\u0e15\u0e23\u0e30\u0e01\u0e39\u0e25 Transformers \u0e17\u0e35\u0e48\u0e40\u0e01\u0e48\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 \"\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\" \u0e2a\u0e48\u0e27\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e43\u0e19\u0e15\u0e23\u0e30\u0e01\u0e39\u0e25 Transformer \u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e17\u0e35\u0e48\u0e14\u0e31\u0e07\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e42\u0e25\u0e01 \u0e2d\u0e32\u0e17\u0e34\u0e40\u0e0a\u0e48\u0e19 BERT, ROBERTA, BART, T5 \u0e19\u0e31\u0e49\u0e19\u0e15\u0e48\u0e32\u0e07\u0e01\u0e47\u0e40\u0e01\u0e48\u0e07\u0e01\u0e32\u0e08\u0e14\u0e49\u0e32\u0e19\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19\u0e2d\u0e2d\u0e01\u0e44\u0e1b \u0e40\u0e0a\u0e48\u0e19 \u0e07\u0e32\u0e19\u0e15\u0e35\u0e04\u0e27\u0e32\u0e21\u0e2b\u0e21\u0e32\u0e22\u0e02\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04 \u0e07\u0e32\u0e19\u0e22\u0e48\u0e2d\u0e04\u0e27\u0e32\u0e21 \u0e07\u0e32\u0e19\u0e41\u0e1b\u0e25\u0e20\u0e32\u0e29\u0e32 \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e14\u0e35\u0e43\u0e19 Workshop \u0e19\u0e35\u0e49\u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e32\u0e40\u0e25\u0e48\u0e19 GPT-2 \u0e01\u0e31\u0e19\u0e04\u0e23\u0e31\u0e1a\n\n\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07 GPT-2 \u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e01\u0e32\u0e23\u0e19\u0e31\u0e49\u0e19\u0e07\u0e48\u0e32\u0e22\u0e21\u0e32\u0e01\u0e04\u0e23\u0e31\u0e1a \u0e40\u0e23\u0e32\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e43\u0e2a\u0e48\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e44\u0e1b\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e08\u0e49\u0e32 GPT-2 \u0e21\u0e31\u0e19\u0e01\u0e47\u0e08\u0e30\u0e44\u0e1b\u0e41\u0e15\u0e48\u0e07\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e15\u0e48\u0e2d\u0e02\u0e36\u0e49\u0e19\u0e21\u0e32\u0e40\u0e2d\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e48\u0e32\u0e21\u0e2b\u0e31\u0e28\u0e08\u0e23\u0e23\u0e22\u0e4c!!! \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e0a\u0e48\u0e19 \u0e43\u0e19\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e02\u0e49\u0e32\u0e07\u0e15\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e43\u0e2a\u0e48\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e27\u0e48\u0e32 *\"\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e0a\u0e19\u0e34\u0e14\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e1b\u0e23\u0e32\u0e28\u0e08\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e0b\u0e34\u0e40\u0e08\u0e19\"*  \u0e2a\u0e48\u0e27\u0e19\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e40\u0e08\u0e49\u0e32 GPT-2 \u0e01\u0e47\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e1c\u0e39\u0e49\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e08\u0e34\u0e19\u0e15\u0e19\u0e01\u0e32\u0e23\u0e15\u0e48\u0e2d\u0e40\u0e2d\u0e07\u0e04\u0e23\u0e31\u0e1a \u0e41\u0e25\u0e30\u0e17\u0e35\u0e48\u0e40\u0e08\u0e4b\u0e07\u0e2a\u0e38\u0e14\u0e46 \u0e01\u0e47\u0e04\u0e37\u0e2d\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e2b\u0e49\u0e21\u0e31\u0e19\u0e41\u0e15\u0e48\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e49\u0e2d\u0e22\u0e41\u0e1a\u0e1a\u0e17\u0e35\u0e48\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19\u0e08\u0e32\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e14\u0e35\u0e22\u0e27\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e01\u0e47\u0e22\u0e31\u0e07\u0e44\u0e14\u0e49 \u0e41\u0e1a\u0e1a\u0e07\u0e48\u0e32\u0e22\u0e46 !! \u0e40\u0e0a\u0e48\u0e19\n\n> \u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e0a\u0e19\u0e34\u0e14\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e1b\u0e23\u0e32\u0e28\u0e08\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e0b\u0e34\u0e40\u0e08\u0e19 \u0e08\u0e38\u0e25\u0e34\u0e19\u0e17\u0e23\u0e35\u0e22\u0e4c\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19\u0e21\u0e2b\u0e32\u0e2a\u0e21\u0e38\u0e17\u0e23\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\u0e21\u0e35\u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e2a\u0e35\u0e22\u0e07\u0e43\u0e19\u0e14\u0e49\u0e32\u0e19\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2d\u0e22\u0e39\u0e48\u0e23\u0e2d\u0e14\u0e43\u0e19\u0e2a\u0e20\u0e32\u0e27\u0e30\u0e17\u0e35\u0e48\u0e23\u0e38\u0e19\u0e41\u0e23\u0e07\u0e40\u0e0a\u0e48\u0e19\u0e0a\u0e48\u0e2d\u0e07\u0e23\u0e30\u0e1a\u0e32\u0e22\u0e2d\u0e32\u0e01\u0e32\u0e28\u0e43\u0e15\u0e49\u0e17\u0e30\u0e40\u0e25\u0e25\u0e36\u0e01\u0e41\u0e25\u0e30\u0e2d\u0e38\u0e13\u0e2b\u0e20\u0e39\u0e21\u0e34\u0e2a\u0e39\u0e07\n\n> \u0e17\u0e35\u0e21\u0e19\u0e31\u0e01\u0e27\u0e34\u0e08\u0e31\u0e22\u0e19\u0e33\u0e42\u0e14\u0e22\u0e14\u0e23. Danyel Wiercinski \u0e41\u0e2b\u0e48\u0e07\u0e21\u0e2b\u0e32\u0e27\u0e34\u0e17\u0e22\u0e32\u0e25\u0e31\u0e22\u0e2e\u0e32\u0e23\u0e4c\u0e27\u0e32\u0e23\u0e4c\u0e14\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e35\u0e49\u0e43\u0e19\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e08\u0e32\u0e01\u0e1e\u0e37\u0e49\u0e19\u0e21\u0e2b\u0e32\u0e2a\u0e21\u0e38\u0e17\u0e23\u0e19\u0e2d\u0e01\u0e0a\u0e32\u0e22\u0e1d\u0e31\u0e48\u0e07\u0e02\u0e2d\u0e07\u0e2d\u0e2d\u0e2a\u0e40\u0e15\u0e23\u0e40\u0e25\u0e35\u0e22 \u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e34\u0e08\u0e31\u0e22\u0e17\u0e35\u0e48\u0e15\u0e35\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e19 PNAS \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27\u0e17\u0e35\u0e21\u0e44\u0e14\u0e49\u0e04\u0e49\u0e19\u0e1e\u0e1a\u0e2a\u0e32\u0e22\u0e1e\u0e31\u0e19\u0e18\u0e38\u0e4c\u0e0a\u0e37\u0e48\u0e2d Oligophaga melan\n\n\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e04\u0e27\u0e32\u0e21\u0e40\u0e08\u0e4b\u0e07\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32\u0e21\u0e31\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e2a\u0e32\u0e22\u0e1e\u0e31\u0e19\u0e18\u0e38\u0e4c\u0e41\u0e1a\u0e04\u0e17\u0e35\u0e40\u0e23\u0e35\u0e22 \u0e0a\u0e37\u0e48\u0e2d\u0e19\u0e31\u0e01\u0e27\u0e34\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e32\u0e23\u0e2a\u0e32\u0e23\u0e27\u0e34\u0e0a\u0e32\u0e01\u0e32\u0e23\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e41\u0e19\u0e1a\u0e40\u0e19\u0e35\u0e22\u0e19\u0e2a\u0e38\u0e14\u0e46 \u0e2d\u0e35\u0e01\u0e14\u0e49\u0e27\u0e22  GPT-2 \u0e22\u0e31\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e41\u0e15\u0e48\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e2d\u0e35\u0e01\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e01\u0e31\u0e19\u0e44\u0e14\u0e49\u0e40\u0e1e\u0e25\u0e34\u0e14\u0e40\u0e1e\u0e25\u0e34\u0e19\u0e43\u0e08\u0e44\u0e1b\u0e40\u0e25\u0e22!! \n\n## HugggingFace \u0e2e\u0e35\u0e42\u0e23\u0e48\u0e1c\u0e39\u0e49\u0e17\u0e25\u0e32\u0e22\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e14\u0e49\u0e32\u0e19\u0e20\u0e32\u0e29\u0e32\u0e02\u0e2d\u0e07 Deep NLP\n\n\u0e16\u0e36\u0e07\u0e41\u0e21\u0e49\u0e15\u0e2d\u0e19\u0e41\u0e23\u0e01\u0e08\u0e30\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e16\u0e01\u0e40\u0e16\u0e35\u0e22\u0e07\u0e01\u0e31\u0e19\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e27\u0e48\u0e32\u0e01\u0e32\u0e23\u0e1b\u0e25\u0e14\u0e1b\u0e25\u0e48\u0e2d\u0e22 GPT-2 \u0e19\u0e31\u0e49\u0e19\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e15\u0e23\u0e32\u0e22\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e04\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e44\u0e1b\u0e0a\u0e48\u0e27\u0e22\u0e2a\u0e23\u0e49\u0e32\u0e07 Fake News \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e44\u0e14\u0e49 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e14\u0e35\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e17\u0e35\u0e21 OpenAI \u0e44\u0e14\u0e49\u0e28\u0e36\u0e01\u0e29\u0e32\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e02\u0e49\u0e2d\u0e14\u0e35\u0e02\u0e49\u0e2d\u0e40\u0e2a\u0e35\u0e22\u0e23\u0e48\u0e27\u0e21\u0e01\u0e31\u0e1a\u0e17\u0e35\u0e21 AI \u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e2d\u0e35\u0e01\u0e2b\u0e25\u0e32\u0e22\u0e17\u0e35\u0e21 \u0e27\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e14\u0e35\u0e19\u0e31\u0e49\u0e19\u0e21\u0e35\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e40\u0e2a\u0e35\u0e22 \u0e17\u0e35\u0e21 OpenAI \u0e01\u0e47\u0e40\u0e25\u0e22\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\u0e40\u0e1c\u0e22\u0e41\u0e1e\u0e23\u0e48\u0e42\u0e21\u0e40\u0e14\u0e25 GPT-2 \u0e43\u0e2b\u0e49\u0e04\u0e19\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \n\n\u0e42\u0e14\u0e22 GPT-2 \u0e19\u0e31\u0e49\u0e19\u0e44\u0e14\u0e49\u0e16\u0e39\u0e01\u0e40\u0e1c\u0e22\u0e41\u0e1e\u0e23\u0e48\u0e21\u0e32\u0e2a\u0e31\u0e01\u0e1e\u0e31\u0e01\u0e41\u0e25\u0e49\u0e27 \u0e42\u0e14\u0e22\u0e21\u0e35\u0e2b\u0e25\u0e32\u0e22\u0e02\u0e19\u0e32\u0e14\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48 GPT-2 \u0e08\u0e34\u0e4b\u0e27 \u0e01\u0e25\u0e32\u0e07 \u0e43\u0e2b\u0e0d\u0e48 \u0e08\u0e19\u0e16\u0e36\u0e07 GPT-2 \"\u0e22\u0e31\u0e01\u0e29\u0e4c\" \u0e17\u0e35\u0e48\u0e40\u0e01\u0e48\u0e07\u0e01\u0e32\u0e08\u0e02\u0e36\u0e49\u0e19\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46 \u0e41\u0e15\u0e48\u0e01\u0e47\u0e17\u0e33\u0e07\u0e32\u0e19\u0e0a\u0e49\u0e32\u0e25\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46 \u0e40\u0e0a\u0e48\u0e19\u0e01\u0e31\u0e19\n\n\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e14\u0e35 \u0e42\u0e04\u0e49\u0e14\u0e02\u0e2d\u0e07\u0e17\u0e35\u0e21 OpenAI \u0e19\u0e31\u0e49\u0e19\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e22\u0e32\u0e01 \u0e41\u0e25\u0e30\u0e17\u0e35\u0e21\u0e07\u0e32\u0e19 ThaiKeras \u0e40\u0e23\u0e32\u0e40\u0e2d\u0e07\u0e01\u0e47\u0e2b\u0e32\u0e42\u0e04\u0e49\u0e14 version Keras \u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e2a\u0e31\u0e01\u0e17\u0e35 \u0e40\u0e23\u0e32\u0e40\u0e25\u0e22\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e21\u0e35\u0e42\u0e2d\u0e01\u0e32\u0e2a\u0e25\u0e2d\u0e07\u0e40\u0e25\u0e48\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e21\u0e32\u0e01\u0e19\u0e31\u0e01 \u0e08\u0e19\u0e01\u0e23\u0e30\u0e17\u0e31\u0e48\u0e07\u0e21\u0e35\u0e17\u0e35\u0e21 AI \u0e2e\u0e35\u0e42\u0e23\u0e48\u0e02\u0e2d\u0e07\u0e42\u0e25\u0e01\u0e17\u0e35\u0e48\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 ***HuggingFace*** \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e17\u0e33 API Opensource \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a transformer \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 (\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48\u0e41\u0e04\u0e48 GPT-2) \u0e17\u0e31\u0e49\u0e07\u0e43\u0e19\u0e40\u0e27\u0e2d\u0e23\u0e4c\u0e0a\u0e31\u0e48\u0e19 Tensorflow+Keras \u0e41\u0e25\u0e30 Pytorch \u0e0b\u0e36\u0e48\u0e07\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e14\u0e49\u0e2a\u0e30\u0e14\u0e27\u0e01\u0e41\u0e25\u0e30\u0e2a\u0e38\u0e14\u0e22\u0e2d\u0e14\u0e21\u0e32\u0e01\u0e46\u0e46\u0e46\u0e46\n\n\u0e14\u0e49\u0e27\u0e22\u0e1e\u0e25\u0e31\u0e07\u0e02\u0e2d\u0e07 HuggingFace \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 Transformer \u0e15\u0e48\u0e32\u0e07\u0e46 \u0e01\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e07\u0e48\u0e32\u0e22\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e40\u0e0a\u0e37\u0e48\u0e2d \u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e2a\u0e34\u0e1a\u0e01\u0e27\u0e48\u0e32\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 :D \u0e41\u0e25\u0e30\u0e22\u0e31\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e0b\u0e1e\u0e42\u0e2b\u0e25\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 Pytorch \u0e2a\u0e25\u0e31\u0e1a\u0e44\u0e1b\u0e21\u0e32\u0e01\u0e31\u0e1a Keras \u0e44\u0e14\u0e49\u0e2d\u0e35\u0e01\u0e14\u0e49\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e17\u0e33\u0e25\u0e32\u0e22\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e04\u0e27\u0e32\u0e21\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e17\u0e32\u0e07\u0e20\u0e32\u0e29\u0e32\u0e02\u0e2d\u0e07\u0e27\u0e07\u0e01\u0e32\u0e23 DeepNLP \u0e44\u0e1b\u0e42\u0e14\u0e22\u0e2a\u0e34\u0e49\u0e19\u0e40\u0e0a\u0e34\u0e07\n\n\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e19\u0e35\u0e49\u0e01\u0e32\u0e23 Generate texts \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e18\u0e23\u0e23\u0e21\u0e0a\u0e32\u0e15\u0e34\u0e19\u0e31\u0e49\u0e19\u0e22\u0e31\u0e07\u0e22\u0e32\u0e01\u0e40\u0e17\u0e04\u0e19\u0e34\u0e01\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e40\u0e0a\u0e48\u0e19 Greedy \u0e2b\u0e23\u0e37\u0e2d Beam Search \u0e19\u0e31\u0e49\u0e19\u0e1e\u0e1a\u0e27\u0e48\u0e32\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e18\u0e23\u0e23\u0e21\u0e0a\u0e32\u0e15\u0e34\u0e41\u0e25\u0e30\u0e21\u0e31\u0e01\u0e43\u0e2b\u0e49\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e0b\u0e49\u0e33\u0e46 \u0e21\u0e35\u0e07\u0e32\u0e19\u0e27\u0e34\u0e08\u0e31\u0e22\u0e43\u0e2b\u0e21\u0e48\u0e46 \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e43\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e1b\u0e35 2019 \u0e41\u0e25\u0e30 Team HuggingFace \u0e19\u0e35\u0e49\u0e22\u0e31\u0e07 implement 2 \u0e27\u0e34\u0e18\u0e35\u0e2a\u0e23\u0e49\u0e32\u0e07 texts \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e22\u0e2d\u0e21\u0e23\u0e31\u0e1a\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e43\u0e19\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 (Top-K & Top-P sampling) \u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e01\u0e23\u0e30\u0e14\u0e34\u0e01\u0e19\u0e34\u0e49\u0e27 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e46 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e40\u0e23\u0e35\u0e22\u0e19\u0e23\u0e39\u0e49\u0e27\u0e34\u0e18\u0e35\u0e43\u0e19 Workshop \u0e19\u0e35\u0e49\u0e14\u0e49\u0e27\u0e22\u0e04\u0e23\u0e31\u0e1a\n\n\u0e08\u0e36\u0e07\u0e15\u0e49\u0e2d\u0e07\u0e02\u0e2d\u0e01\u0e23\u0e32\u0e1a\u0e02\u0e2d\u0e1a\u0e1e\u0e23\u0e30\u0e04\u0e38\u0e13\u0e17\u0e35\u0e21 HuggingFace https:\/\/huggingface.co\/ \u0e07\u0e32\u0e21\u0e46 \u0e21\u0e32 \u0e13 \u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e14\u0e49\u0e27\u0e22\u0e04\u0e23\u0e31\u0e1a \n\n## Google Translation Python Library\n\u0e17\u0e49\u0e32\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e02\u0e2d\u0e1e\u0e39\u0e14\u0e16\u0e36\u0e07 library \u0e08\u0e34\u0e4b\u0e27\u0e41\u0e15\u0e48\u0e41\u0e08\u0e4b\u0e27 https:\/\/github.com\/ssut\/py-googletrans \u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e43\u0e0a\u0e49 google translate \u0e44\u0e14\u0e49\u0e07\u0e48\u0e32\u0e22\u0e46 \u0e40\u0e1e\u0e35\u0e22\u0e07\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\n\n\u0e43\u0e19 Workshop \u0e19\u0e35\u0e49\u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e43\u0e0a\u0e49 GPT-2 \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e2a\u0e2d\u0e19\u0e1a\u0e19 \"\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\" \u0e42\u0e14\u0e22\u0e15\u0e23\u0e07 (\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e32\u0e01\u0e23\u0e2a\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e21\u0e2b\u0e32\u0e28\u0e32\u0e25\u0e21\u0e32\u0e01) \u0e41\u0e15\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30 \"\u0e25\u0e31\u0e01\u0e44\u0e01\u0e48\" \u0e14\u0e49\u0e27\u0e22\u0e01\u0e32\u0e23 \"\u0e41\u0e1b\u0e25\u0e44\u0e1b \u0e41\u0e1b\u0e25\u0e01\u0e25\u0e31\u0e1a\" \u0e41\u0e17\u0e19 \u0e19\u0e31\u0e49\u0e19\u0e04\u0e37\u0e2d \u0e40\u0e23\u0e32\u0e08\u0e30\u0e41\u0e1b\u0e25 \"\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\" \u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29\u0e41\u0e25\u0e49\u0e27\u0e43\u0e2b\u0e49 GPT-2 \u0e44\u0e1b\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e15\u0e48\u0e2d \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e41\u0e15\u0e48\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e08\u0e30 \"\u0e41\u0e1b\u0e25\u0e01\u0e25\u0e31\u0e1a\" \u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e2d\u0e35\u0e01\u0e23\u0e2d\u0e1a\u0e01\u0e31\u0e19 :D \n\n\u0e16\u0e49\u0e32\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e40\u0e23\u0e34\u0e48\u0e21\u0e01\u0e31\u0e19\u0e40\u0e25\u0e22\u0e04\u0e23\u0e31\u0e1a","60492326":"\u0e25\u0e2d\u0e07\u0e15\u0e31\u0e14\u0e04\u0e33\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29\u0e14\u0e39\u0e04\u0e23\u0e31\u0e1a \u0e08\u0e30\u0e44\u0e14\u0e49 output \u0e40\u0e1b\u0e47\u0e19 index \u0e02\u0e2d\u0e07\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e17\u0e35\u0e48\u0e15\u0e31\u0e14\u0e04\u0e33\u0e40\u0e23\u0e35\u0e22\u0e1a\u0e23\u0e49\u0e2d\u0e22\u0e41\u0e25\u0e49\u0e27","609ac621":"# GPT-2 \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22!!!\n\u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e32\u0e25\u0e31\u0e01\u0e44\u0e01\u0e48\u0e41\u0e15\u0e48\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e14\u0e49\u0e27\u0e22\u0e01\u0e32\u0e23 \"\u0e41\u0e1b\u0e25\u0e44\u0e1b\" (\u0e41\u0e1b\u0e25\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19 eng) \"\u0e41\u0e1b\u0e25\u0e01\u0e25\u0e31\u0e1a\" (\u0e41\u0e1b\u0e25 texts \u0e08\u0e32\u0e01 GPT-2 \u0e40\u0e1b\u0e47\u0e19\u0e44\u0e17\u0e22) \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e19\u0e38\u0e01\u0e01\u0e31\u0e19\u0e04\u0e23\u0e31\u0e1a","3fe3ec80":"\u0e14\u0e39\u0e04\u0e23\u0e48\u0e32\u0e27\u0e46 \u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e27\u0e48\u0e32\u0e17\u0e31\u0e49\u0e07 5 \u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e2b\u0e25\u0e32\u0e01\u0e2b\u0e25\u0e32\u0e22\u0e1e\u0e2d\u0e2a\u0e21\u0e04\u0e27\u0e23 \u0e41\u0e25\u0e30\u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e1e\u0e2d\u0e43\u0e08 \u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e31\u0e48\u0e07\u0e23\u0e31\u0e19\u0e43\u0e2b\u0e21\u0e48\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e43\u0e2b\u0e49\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e46 \u0e44\u0e14\u0e49\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e14\u0e35\u0e40\u0e23\u0e32\u0e23\u0e35\u0e1a\u0e44\u0e1b\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e19\u0e17\u0e35\u0e48\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e25\u0e22\u0e14\u0e35\u0e01\u0e27\u0e48\u0e32","680afc38":"\u0e42\u0e2b\u0e25\u0e14 model GPT-2 \u0e02\u0e19\u0e32\u0e14 large \u0e21\u0e32\u0e43\u0e0a\u0e49\u0e14\u0e49\u0e27\u0e22\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14!!\n\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38 GPT-2 \u0e15\u0e31\u0e27 large \u0e19\u0e35\u0e49\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 \u0e15\u0e31\u0e27\u0e17\u0e35\u0e48\u0e41\u0e15\u0e48\u0e07\u0e40\u0e01\u0e48\u0e07\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e41\u0e15\u0e48\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e2b\u0e22\u0e31\u0e14\u0e40\u0e27\u0e25\u0e32\u0e43\u0e19\u0e01\u0e32\u0e23\u0e42\u0e2b\u0e25\u0e14\u0e41\u0e25\u0e30\u0e17\u0e33\u0e19\u0e32\u0e22","e97b9a83":"# \u0e40\u0e23\u0e34\u0e48\u0e21\u0e01\u0e31\u0e19\u0e40\u0e25\u0e22\n\n\u0e01\u0e48\u0e2d\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e40\u0e23\u0e32 install \u0e2b\u0e23\u0e37\u0e2d\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07 library \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a Google Translate \u0e01\u0e31\u0e19\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e25\u0e22\u0e04\u0e23\u0e31\u0e1a","02506762":"\u0e43\u0e19\u0e0a\u0e48\u0e27\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e1b\u0e35 2018 \u0e40\u0e23\u0e32\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e41\u0e01\u0e49\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e0b\u0e49\u0e33\u0e46 \u0e14\u0e49\u0e27\u0e22\u0e40\u0e17\u0e04\u0e19\u0e34\u0e01\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 Beam Search \u0e41\u0e15\u0e48\u0e19\u0e31\u0e01\u0e27\u0e34\u0e08\u0e31\u0e22\u0e01\u0e47\u0e1e\u0e1a\u0e27\u0e48\u0e32\u0e21\u0e31\u0e19\u0e22\u0e31\u0e07\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e18\u0e23\u0e23\u0e21\u0e0a\u0e32\u0e15\u0e34\u0e21\u0e32\u0e01\u0e19\u0e31\u0e01\n\n\u0e43\u0e19\u0e07\u0e32\u0e19\u0e27\u0e34\u0e08\u0e31\u0e22\u0e43\u0e2b\u0e21\u0e48\u0e46 \u0e43\u0e19\u0e1b\u0e35 2018-2019 \u0e44\u0e14\u0e49\u0e40\u0e2a\u0e19\u0e2d\u0e27\u0e34\u0e18\u0e35\u0e2a\u0e38\u0e48\u0e21\u0e04\u0e33\u0e14\u0e49\u0e27\u0e22\u0e04\u0e27\u0e32\u0e21\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e32\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22\u0e0b\u0e36\u0e48\u0e07 2 \u0e40\u0e17\u0e04\u0e19\u0e34\u0e01\u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e22\u0e2d\u0e21\u0e23\u0e31\u0e1a\u0e04\u0e37\u0e2d 2 \u0e40\u0e17\u0e04\u0e19\u0e34\u0e01\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 top-p \u0e01\u0e31\u0e1a top-k sampling \u0e04\u0e23\u0e31\u0e1a \u0e42\u0e14\u0e22\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e07\u0e48\u0e32\u0e22\u0e46 \u0e44\u0e14\u0e49\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49\n\n### Top-K Sampling\n\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2a\u0e38\u0e48\u0e21\u0e04\u0e33\u0e08\u0e32\u0e01\u0e04\u0e33\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 K \u0e04\u0e33\u0e41\u0e23\u0e01 (\u0e40\u0e0a\u0e48\u0e19 K = 50)\n\n### Top-P Sampling\n\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2a\u0e38\u0e48\u0e21\u0e04\u0e33\u0e08\u0e32\u0e01 N \u0e04\u0e33\u0e41\u0e23\u0e01 \u0e42\u0e14\u0e22\u0e04\u0e33\u0e17\u0e35\u0e48 1 \u0e16\u0e36\u0e07 N \u0e19\u0e31\u0e49\u0e19\u0e23\u0e27\u0e21\u0e41\u0e25\u0e49\u0e27\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 \"\u0e04\u0e33\u0e15\u0e48\u0e2d\u0e44\u0e1b\" \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e19\u0e49\u0e2d\u0e22 P (\u0e40\u0e0a\u0e48\u0e19 P = 95%)\n\nHuggingFace \u0e2d\u0e19\u0e38\u0e0d\u0e32\u0e15\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e43\u0e0a\u0e49\u0e17\u0e31\u0e49\u0e07 Top-P \u0e41\u0e25\u0e30 Top-K \u0e2a\u0e2d\u0e07\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e19\u0e44\u0e14\u0e49\u0e07\u0e48\u0e32\u0e22\u0e46 \u0e2d\u0e35\u0e01\u0e14\u0e49\u0e27\u0e22 (\u0e02\u0e2d\u0e01\u0e23\u0e32\u0e1a\u0e2d\u0e35\u0e01\u0e04\u0e23\u0e31\u0e49\u0e07) \u0e42\u0e14\u0e22\u0e04\u0e33\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e48\u0e21\u0e21\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e31\u0e49\u0e07 top-p \u0e41\u0e25\u0e30 top-k \u0e04\u0e23\u0e31\u0e1a\n\n\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e46 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e38\u0e48\u0e21\u0e04\u0e33\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e17\u0e35\u0e48\u0e19\u0e35\u0e48\u0e04\u0e23\u0e31\u0e1a https:\/\/huggingface.co\/blog\/how-to-generate\n\noption \u0e2a\u0e38\u0e14\u0e1e\u0e34\u0e40\u0e28\u0e29\u0e2d\u0e35\u0e01\u0e2d\u0e31\u0e19\u0e17\u0e35\u0e48 HuggingFace \u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e01\u0e47\u0e04\u0e37\u0e2d `num_return_sequences` \u0e0b\u0e36\u0e48\u0e07\u0e23\u0e30\u0e1a\u0e38\u0e43\u0e2b\u0e49\u0e42\u0e21\u0e40\u0e14\u0e25\u0e41\u0e15\u0e48\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e32\u0e01\u0e35\u0e48\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e01\u0e47\u0e44\u0e14\u0e49\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e23\u0e30\u0e1a\u0e38\u0e07\u0e48\u0e32\u0e22\u0e46 \u0e14\u0e49\u0e27\u0e22 option \u0e19\u0e35\u0e49\u0e04\u0e23\u0e31\u0e1a (\u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e40\u0e23\u0e32\u0e43\u0e2b\u0e49\u0e41\u0e15\u0e48\u0e07\u0e21\u0e32 5 \u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07)\n\n\u0e40\u0e27\u0e25\u0e32\u0e41\u0e15\u0e48\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e23\u0e31\u0e49\u0e07\u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e14\u0e49\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19\u0e2d\u0e2d\u0e01\u0e44\u0e1b \u0e40\u0e23\u0e32\u0e25\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e07\u0e0b\u0e49\u0e33\u0e46 \u0e08\u0e19\u0e01\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e08\u0e2d\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e43\u0e08\u0e04\u0e23\u0e31\u0e1a \u0e41\u0e25\u0e30\u0e25\u0e2d\u0e07\u0e1b\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32 top-p top-k \u0e40\u0e25\u0e48\u0e19\u0e14\u0e39\u0e01\u0e47\u0e44\u0e14\u0e49\u0e04\u0e23\u0e31\u0e1a ;D","ef98ea7e":"# \u0e40\u0e21\u0e37\u0e48\u0e2d translation \u0e41\u0e1b\u0e25\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\n\u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e14\u0e49\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e42\u0e23\u0e41\u0e21\u0e19\u0e15\u0e34\u0e01 \u0e01\u0e47\u0e44\u0e14\u0e49\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2e\u0e32\u0e46 \u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e22\u0e2d\u0e07\u0e21\u0e32\u0e41\u0e17\u0e19 :D :p ;D","badd5446":"### \u0e25\u0e2d\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 Fantasy \u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e2b\u0e15\u0e38\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e43\u0e19\u0e1a\u0e49\u0e32\u0e19\u0e40\u0e23\u0e32\u0e40\u0e25\u0e48\u0e19\u0e46 \u0e04\u0e23\u0e31\u0e1a ","3f89f516":"# \u0e17\u0e14\u0e25\u0e2d\u0e07\u0e41\u0e15\u0e48\u0e07\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29\u0e40\u0e25\u0e47\u0e01\u0e19\u0e49\u0e2d\u0e22\n\nGPT-2 \u0e41\u0e17\u0e49\u0e08\u0e23\u0e34\u0e07\u0e41\u0e25\u0e49\u0e27\u0e40\u0e1b\u0e47\u0e19\u0e42\u0e21\u0e40\u0e14\u0e25\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e41\u0e15\u0e48\u0e07\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04 \u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e23\u0e32\u0e27\u0e40\u0e1b\u0e47\u0e19\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e25\u0e2d\u0e07\u0e43\u0e2a\u0e48\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e43\u0e19\u0e17\u0e35\u0e48\u0e19\u0e35\u0e49\u0e1c\u0e21\u0e25\u0e2d\u0e07\u0e43\u0e2a\u0e48\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e27\u0e48\u0e32 \"My name is James and I am your doctor\" \u0e41\u0e25\u0e30\u0e25\u0e2d\u0e07\u0e14\u0e39\u0e27\u0e48\u0e32 GPT-2 \u0e08\u0e30\u0e41\u0e15\u0e48\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e15\u0e48\u0e2d\n\n\u0e42\u0e14\u0e22 HuggingFace \u0e19\u0e31\u0e49\u0e19\u0e44\u0e14\u0e49\u0e17\u0e33\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19 generate text \u0e44\u0e27\u0e49\u0e2a\u0e38\u0e14\u0e22\u0e2d\u0e14 \u0e42\u0e14\u0e22\u0e02\u0e31\u0e49\u0e19\u0e1e\u0e37\u0e49\u0e19\u0e10\u0e32\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23 generate \u0e41\u0e1a\u0e1a greedy \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e33\u0e15\u0e48\u0e2d\u0e44\u0e1b \"\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\" (\u0e43\u0e19\u0e17\u0e32\u0e07\u0e2a\u0e16\u0e34\u0e15\u0e34\u0e17\u0e35\u0e48\u0e42\u0e21\u0e40\u0e14\u0e25\u0e40\u0e01\u0e47\u0e1a\u0e44\u0e27\u0e49)\n\n\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e44\u0e23\u0e01\u0e47\u0e14\u0e35 \u0e43\u0e19\u0e17\u0e32\u0e07\u0e1b\u0e0f\u0e34\u0e1a\u0e31\u0e15\u0e34\u0e19\u0e31\u0e49\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e19\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e41\u0e1a\u0e1a greedy \u0e19\u0e31\u0e49\u0e19 \u0e21\u0e31\u0e01\u0e08\u0e30\u0e44\u0e14\u0e49\u0e04\u0e33\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e18\u0e23\u0e23\u0e21\u0e0a\u0e32\u0e15\u0e34  \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e40\u0e23\u0e34\u0e48\u0e21\u0e22\u0e32\u0e27 \u0e08\u0e30\u0e1e\u0e39\u0e14\u0e0b\u0e49\u0e33\u0e44\u0e1b\u0e0b\u0e49\u0e33\u0e21\u0e32 (\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e2a\u0e16\u0e34\u0e15\u0e34\u0e17\u0e35\u0e48\u0e42\u0e21\u0e40\u0e14\u0e25\u0e40\u0e01\u0e47\u0e1a\u0e44\u0e27\u0e49\u0e19\u0e31\u0e49\u0e19\u0e44\u0e21\u0e48\u0e2a\u0e21\u0e1a\u0e39\u0e23\u0e13\u0e4c\u0e41\u0e1a\u0e1a\u0e43\u0e19\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e22\u0e32\u0e27\u0e46)","2db28a1a":"\u0e40\u0e0b\u0e25\u0e25\u0e4c\u0e02\u0e49\u0e32\u0e07\u0e25\u0e48\u0e32\u0e07\u0e19\u0e35\u0e49\u0e40\u0e23\u0e32\u0e25\u0e2d\u0e07 tokenizer \u0e0a\u0e19\u0e34\u0e14\u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e17\u0e32\u0e07 HuggingFace \u0e40\u0e1e\u0e34\u0e48\u0e07\u0e40\u0e1c\u0e22\u0e41\u0e1e\u0e23\u0e48\u0e2a\u0e14\u0e46 \u0e23\u0e49\u0e2d\u0e19\u0e46 \u0e04\u0e23\u0e31\u0e1a \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32\u0e27\u0e48\u0e32 fast_tokenizer \u0e0b\u0e36\u0e48\u0e07\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e40\u0e23\u0e47\u0e27\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 Tokenizer \u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e42\u0e2b\u0e25\u0e14\u0e21\u0e32\u0e02\u0e49\u0e32\u0e07\u0e15\u0e49\u0e19\u0e21\u0e32\u0e01\u0e46 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e14\u0e39\u0e28\u0e31\u0e1e\u0e17\u0e4c\u0e02\u0e2d\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e15\u0e31\u0e14\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27\u0e44\u0e14\u0e49\u0e14\u0e49\u0e27\u0e22 \u0e27\u0e48\u0e32 index \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e43\u0e19\u0e40\u0e0b\u0e25\u0e25\u0e4c\u0e02\u0e49\u0e32\u0e07\u0e1a\u0e19\u0e19\u0e31\u0e49\u0e19\u0e41\u0e17\u0e19\u0e04\u0e33\u0e27\u0e48\u0e32\u0e2d\u0e30\u0e44\u0e23\u0e1a\u0e49\u0e32\u0e07 \u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e04\u0e33\u0e27\u0e48\u0e32 jim \u0e16\u0e39\u0e01\u0e15\u0e31\u0e14\u0e40\u0e1b\u0e47\u0e19 \"j\" \u0e01\u0e31\u0e1a \"im\" , \"henson\" \u0e16\u0e39\u0e01\u0e15\u0e31\u0e14\u0e40\u0e1b\u0e47\u0e19 \"hen\" \u0e01\u0e31\u0e1a \"son\" \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e19\u0e04\u0e23\u0e31\u0e1a\n\n\u0e43\u0e19 fast_tokenizer \u0e21\u0e35\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e02\u0e2d\u0e07\u0e04\u0e33\u0e17\u0e35\u0e48\u0e15\u0e31\u0e14\u0e41\u0e25\u0e49\u0e27\u0e21\u0e32\u0e01\u0e21\u0e32\u0e22 \u0e40\u0e0a\u0e48\u0e19 attention_mask, offset, special_tokens_mask \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e43\u0e0a\u0e49\u0e43\u0e19 notebook \u0e19\u0e35\u0e49\n\n\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e19\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e40\u0e0b\u0e25\u0e25\u0e4c\u0e02\u0e49\u0e32\u0e07\u0e25\u0e48\u0e32\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e42\u0e0a\u0e27\u0e4c\u0e44\u0e2a\u0e49\u0e02\u0e49\u0e32\u0e07\u0e43\u0e19 tokenzier \u0e41\u0e25\u0e49\u0e27 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e01\u0e25\u0e31\u0e1a\u0e44\u0e1b\u0e43\u0e0a\u0e49 tokenizer \u0e15\u0e31\u0e27\u0e40\u0e01\u0e48\u0e32 (\u0e0b\u0e36\u0e48\u0e07\u0e0a\u0e49\u0e32\u0e01\u0e27\u0e48\u0e32 \u0e41\u0e15\u0e48\u0e44\u0e21\u0e48\u0e21\u0e35\u0e1c\u0e25\u0e21\u0e32\u0e01\u0e01\u0e31\u0e1a playground \u0e19\u0e35\u0e49) \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e46 \u0e08\u0e30\u0e25\u0e2d\u0e07\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e25\u0e48\u0e19\u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e15\u0e31\u0e27 fast_tokenizer \u0e01\u0e47\u0e22\u0e48\u0e2d\u0e21\u0e44\u0e14\u0e49\u0e04\u0e23\u0e31\u0e1a","54c949c8":"## \u0e25\u0e2d\u0e07\u0e43\u0e2b\u0e49\u0e41\u0e15\u0e48\u0e07\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e04\u0e27\u0e32\u0e21\u0e23\u0e39\u0e49\u0e40\u0e09\u0e1e\u0e32\u0e30\u0e17\u0e32\u0e07\n\u0e40\u0e0a\u0e48\u0e19 \u0e43\u0e2b\u0e49\u0e41\u0e15\u0e48\u0e07\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e19\u0e32\u0e23\u0e38\u0e42\u0e15\u0e30\u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e31\u0e1b\u0e15\u0e31\u0e19\u0e2d\u0e40\u0e21\u0e23\u0e34\u0e01\u0e32 \u0e1e\u0e1a\u0e27\u0e48\u0e32 GPT-2 \u0e23\u0e39\u0e49\u0e08\u0e31\u0e01\u0e15\u0e31\u0e27\u0e25\u0e30\u0e04\u0e23\u0e1e\u0e2d\u0e2a\u0e21\u0e04\u0e27\u0e23 \u0e41\u0e15\u0e48\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e42\u0e22\u0e07\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e31\u0e21\u0e1e\u0e31\u0e19\u0e18\u0e4c\u0e41\u0e25\u0e30\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e44\u0e14\u0e49 \u0e17\u0e33\u0e43\u0e2b\u0e49\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e34\u0e48\u0e2d\u0e07\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e21\u0e31\u0e48\u0e27 \u0e2d\u0e32\u0e08\u0e21\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e38\u0e14\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e02\u0e2d\u0e07\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e23\u0e23\u0e04\u0e4c\u0e41\u0e25\u0e30\u0e2d\u0e32\u0e08\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e25\u0e2d\u0e07 generate \u0e2b\u0e25\u0e32\u0e22\u0e23\u0e2d\u0e1a\u0e2b\u0e23\u0e37\u0e2d\u0e43\u0e0a\u0e49\u0e04\u0e19\u0e21\u0e32\u0e0a\u0e48\u0e27\u0e22\u0e1b\u0e23\u0e31\u0e1a\u0e40\u0e19\u0e37\u0e49\u0e2d\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2d\u0e35\u0e01\u0e41\u0e23\u0e07"}}