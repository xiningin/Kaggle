{"cell_type":{"7d5274d3":"code","5e9ce824":"code","17532c23":"code","c366000d":"code","b7fa2590":"code","e345fac0":"code","0054c839":"code","cf4786ce":"code","66b73901":"code","4c7250d8":"code","92c57799":"code","09946ca5":"code","47ba6264":"code","d2ae4441":"code","c516ca49":"code","f081bf4c":"code","8908281d":"code","fb951031":"markdown","4e670ef1":"markdown","86d288ea":"markdown","59d108ac":"markdown","6693ee64":"markdown"},"source":{"7d5274d3":"import pandas as pd","5e9ce824":"product=pd.DataFrame({\n    'Product_ID':[101,102,103,104,105,106,107],\n    'Product_name':['Watch','Bag','Shoes','Smartphone','Books','Oil','Laptop'],\n    'Category':['Fashion','Fashion','Fashion','Electronics','Study','Grocery','Electronics'],\n    'Price':[299.0,1350.50,2999.0,14999.0,145.0,110.0,79999.0],\n    'Seller_City':['Delhi','Mumbai','Chennai','Kolkata','Delhi','Chennai','Bengalore']\n})","17532c23":"product","c366000d":"customer=pd.DataFrame({\n    'id':[1,2,3,4,5,6,7,8,9],\n    'name':['Olivia','Aditya','Cory','Isabell','Dominic','Tyler','Samuel','Daniel','Jeremy'],\n    'age':[20,25,15,10,30,65,35,18,23],\n    'Product_ID':[101,0,106,0,103,104,0,0,107],\n    'Purchased_Product':['Watch','NA','Oil','NA','Shoes','Smartphone','NA','NA','Laptop'],\n    'City':['Mumbai','Delhi','Bangalore','Chennai','Chennai','Delhi','Kolkata','Delhi','Mumbai']\n})","b7fa2590":"customer","e345fac0":"pd.merge(product,customer,on='Product_ID')","0054c839":"# if the column names are different\npd.merge(product,customer,left_on='Product_name',right_on='Purchased_Product')","cf4786ce":"## seller and customer both belong to the same city.\npd.merge(product,customer,how='inner',left_on=['Product_ID','Seller_City'],right_on = ['Product_ID','City'])","66b73901":"pd.merge(product,customer,on='Product_ID',how='outer')","4c7250d8":"pd.merge(product,customer,on='Product_ID',how='outer',indicator=True)","92c57799":"pd.merge(product,customer,on='Product_ID',how='left')","09946ca5":"pd.merge(product,customer,on='Product_ID',how='right')","47ba6264":"# Dummy dataframe with duplicate values\n\nproduct_dup=pd.DataFrame({'Product_ID':[101,102,103,104,105,106,107,103,107],\n                          'Product_name':['Watch','Bag','Shoes','Smartphone','Books','Oil','Laptop','Shoes','Laptop'],\n                          'Category':['Fashion','Fashion','Fashion','Electronics','Study','Grocery','Electronics','Fashion','Electronics'],\n                          'Price':[299.0,1350.50,2999.0,14999.0,145.0,110.0,79999.0,2999.0,79999.0],\n                          'Seller_City':['Delhi','Mumbai','Chennai','Kolkata','Delhi','Chennai','Bengalore','Chennai','Bengalore']})","d2ae4441":"product_dup","c516ca49":"pd.merge(product_dup,customer,on='Product_ID',how='inner')","f081bf4c":"# Drop duplicates\npd.merge(product_dup.drop_duplicates(),customer,on='Product_ID',how='inner')","8908281d":"# \"Validate\" to keep the duplicates\npd.merge(product_dup,customer,on=\"Product_ID\",how='inner',validate='many_to_many')","fb951031":"## 3. Left Join","4e670ef1":"## 4. Right Join","86d288ea":"## 2. Full Join","59d108ac":"#### Handling Redundancy\/Duplicates in Joins","6693ee64":"## 1. Inner Join"}}