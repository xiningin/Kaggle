{"cell_type":{"d6655da6":"code","3899ddf1":"code","a85c96b3":"code","2f8bef26":"code","b7851474":"code","f952630c":"code","70798c68":"code","b3dbb46b":"code","06a92d29":"code","0a7d6603":"code","150865f7":"code","de4bd487":"code","13351572":"code","6dee99b5":"code","345815f4":"code","e16809f1":"code","ab669639":"code","12697887":"code","30002412":"code","852416e2":"code","68b62c61":"code","471beb63":"code","c3c4a24a":"code","db2ad5d0":"code","8cba0e56":"code","5c9c8b11":"code","5f1477a8":"code","79721381":"code","217fb33b":"code","6386c667":"code","e2cc2fef":"code","4651b002":"code","2d2142f9":"code","44405874":"code","c3b9107d":"code","e71b2018":"code","d75dd30d":"code","e4ce0fb4":"code","b1b8f2ad":"code","4f1dd7a9":"code","268977ba":"code","5198c70f":"markdown","c3b5f1cf":"markdown","6a842679":"markdown","18a2487b":"markdown","07f126d4":"markdown","5755510f":"markdown","f3757bfb":"markdown","a46bb6f2":"markdown","75f8a788":"markdown","89145043":"markdown","c051c06f":"markdown","e8d77e4c":"markdown","3b05249e":"markdown","08dde659":"markdown","78ca8df9":"markdown","d3d93f55":"markdown","82e3b478":"markdown","a3ec23a8":"markdown"},"source":{"d6655da6":"import requests\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom ipywidgets import interact, interactive, fixed, interact_manual\nimport ipywidgets as widgets\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3899ddf1":"shootings = pd.read_csv('..\/input\/us-police-shootings\/shootings.csv')","a85c96b3":"shootings.head()","2f8bef26":"shootings.isna().any()","b7851474":"shootings.gender.unique()","f952630c":"shootings['gender'].replace(['M', 'F'], ['Male', 'Female'], inplace = True)","70798c68":"sns.countplot('gender', data = shootings)\nplt.title('Male to Female Ratio of people shot by Police')\nplt.xlabel('Gender')\nplt.ylabel('Count')\nplt.show()","b3dbb46b":"race_distri = shootings['race'].value_counts().reset_index()\nrace_distri.columns = ['race', 'Count']\nrace_distri.sort_values('Count', ascending = False, inplace = True)","06a92d29":"sns.barplot(x = 'race', y = 'Count', data = race_distri)\nplt.title(\"Victim's race wise distribution\")\nplt.xlabel(\"Victim's Race\")\nplt.ylabel('Count')\nplt.show()","0a7d6603":"state_distri = shootings['state'].value_counts().reset_index()\nstate_distri.columns = ['state', 'Count']\nstate_distri.sort_values('Count', ascending = False, inplace = True)","150865f7":"plt.figure(figsize = (15,8))\nsns.barplot(x='state', y = 'Count', data = state_distri)\nplt.title('State wise count of victims shot by Police')\nplt.xlabel('State')\nplt.ylabel('Count')\nplt.show()","de4bd487":"web = requests.get('https:\/\/www.infoplease.com\/state-abbreviations-and-state-postal-codes')\n\ndfs = pd.read_html(web.text)","13351572":"for df in dfs:\n    print(df.head())","6dee99b5":"#we only want the State\/District territories so,\nstate_abbv = dfs[0]\nstate_abbv.head()","345815f4":"state_abbv.set_index('Postal Code', inplace = True)\nstate_abbv.head()","e16809f1":"abbv_dict = state_abbv[['State\/District']].to_dict()\n\nabbv_dict = abbv_dict['State\/District']","ab669639":"abbv_dict","12697887":"shootings['state'] = [abbv_dict[c] for c in shootings.state]","30002412":"shootings.head()","852416e2":"state_race_count = shootings[['state', 'race']]\nstate_race_count.head()","68b62c61":"state_race_count_1 = pd.DataFrame(state_race_count.groupby('state')['race'].value_counts())\nstate_race_count_1","471beb63":"state_race_count_1.rename(columns = {'race' : 'Count'}, inplace = True)","c3c4a24a":"state_race_count_2 = state_race_count_1.reset_index()\nstate_race_count_2.rename(columns = {'race' : 'Race'}, inplace = True)\nstate_race_count_2.sort_values('state', ascending= False, inplace = True)\n\nfig_state = px.bar(state_race_count_2, x=\"Count\", y=\"state\", color='Race', orientation='h',\n             hover_data=[\"Race\", \"Count\"], height=1200, width = 800)\n\nfig_state.update_layout(title = {'text': \"State wise distribution of victim's race\",'y':0.99,\n            'x':0.54, 'xanchor':'center', 'yanchor':'top'},  xaxis_title=\"Count\",\n        yaxis_title=\"state\",\n                     font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"RebeccaPurple\"\n        ))\nfig_state.show()","db2ad5d0":"shootings.head()","8cba0e56":"shootings['Year'] = shootings['date'].str.split('-', n = 1,expand = True).drop(1, axis = 1)","5c9c8b11":"shootings.head()","5f1477a8":"shootings.drop('date', axis = 1, inplace = True)","79721381":"shootings = shootings[['id', 'name', 'Year', 'manner_of_death', 'armed', 'age', 'gender',\n       'race', 'city', 'state', 'signs_of_mental_illness', 'threat_level',\n       'flee', 'body_camera', 'arms_category']]","217fb33b":"year_race_count = shootings[['Year', 'race']]\nyear_race_count.head()","6386c667":"year_race_count_1 = pd.DataFrame(year_race_count.groupby('Year')['race'].value_counts())\nyear_race_count_1.rename(columns = {'race' : 'Count'}, inplace = True)","e2cc2fef":"year_race_count_2 = year_race_count_1.reset_index()\nyear_race_count_2.rename(columns = {'race' : 'Race'}, inplace = True)\nyear_race_count_2.sort_values('Year', ascending = True, inplace = True)\nfig_year = px.bar(year_race_count_2, x=\"Count\", y=\"Year\", color='Race', orientation='h',\n             hover_data=[\"Race\", \"Count\"],\n             height=600, width = 700,\n             title=\"Victim's Race distribution in the year \")\n\nfig_year.update_layout(title = {'text': \"Year wise distribution of victim's race\",'y':0.95,\n            'x':0.5, 'xanchor':'center', 'yanchor':'top'},  xaxis_title=\"Count\",\n        yaxis_title=\"Year\",\n                     font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"RebeccaPurple\"\n        ))\nfig_year.show()","4651b002":"city_race_count = shootings[['city','race']]\ncity_race_count.head()","2d2142f9":"city_race_count_3 = city_race_count.groupby('city')['race'].count().reset_index().sort_values('race', ascending=False).head(10)\ncity_race_count_3.rename(columns = {'race' : 'Count'}, inplace = True)\n\nfig_city = px.bar(city_race_count_3, x=\"Count\", y=\"city\", color='city', orientation='h',\n             hover_data=[\"Count\", \"city\"],\n             height=430, width = 700,\n             )\n\nfig_city.update_layout(title = {'text': \"Top 10 cities with highest victims\",'y':0.95,\n            'x':0.5, 'xanchor':'center', 'yanchor':'top'},  xaxis_title=\"Count\",\n        yaxis_title=\"City\",\n                     font=dict(\n            family=\"Courier New, monospace\",\n            size=16,\n            color=\"RebeccaPurple\"\n        ))\nfig_city.show()","44405874":"mental_ill = shootings['signs_of_mental_illness'].value_counts().reset_index()\nmental_ill.columns = ['Signs of mental illness', 'Count']","c3b9107d":"fig_ill = px.pie(mental_ill, values='Count', names='Signs of mental illness', title='Signs of Mental Illness in victims', \n             width=500, height=500)\nfig_ill.show()","e71b2018":"type_of_flee = shootings['flee'].value_counts().reset_index()\ntype_of_flee.columns = ['Flee', 'Count']","d75dd30d":"fig_flee = px.pie(type_of_flee, values='Count', names='Flee', title=\"Victim's fleeing distribution\", \n             width=500, height=500)\nfig_flee.show()","e4ce0fb4":"type_of_arm = shootings['armed'].value_counts().reset_index()\ntype_of_arm.columns = ['Armed with', 'Count']\ntype_of_arm = type_of_arm[type_of_arm['Armed with'] != 'unknown']","b1b8f2ad":"fig_arm = px.bar(type_of_arm.head(5), x = 'Count', y = 'Armed with', color = 'Armed with',\n                 width = 700, height = 350,hover_name= 'Armed with', orientation= 'h')\n\nfig_arm.update_layout(title = {'text':\"Victim's Top 5 Armed weapon distribution \",'y':0.95,\n            'x':0.5, 'xanchor':'center', 'yanchor':'top'},  xaxis_title=\"Armed with\",\n        yaxis_title=\"Count\",\n                     font=dict(\n            family=\"Courier New, monospace\",\n            size=15,\n            color=\"RebeccaPurple\"\n        ))\nfig_arm.show()","4f1dd7a9":"shootings = shootings[shootings['age'] != 37.11793090137039]","268977ba":"fig_age = px.histogram(shootings, x=\"age\", color=\"age\", width = 700, height = 350)\nfig_age.update_layout(title = {'text':\"Age wise distribution of victim\",'y':0.95,\n            'x':0.5, 'xanchor':'center', 'yanchor':'top'},  xaxis_title=\"Victim's Age\",\n        yaxis_title=\"Count\",\n                     font=dict(\n            family=\"Courier New, monospace\",\n            size=15,\n            color=\"RebeccaPurple\"\n        ))\nfig_age.show()","5198c70f":"# In this last visualization we can see that the histogram is right skewed and most of the victims are in the age group of 20 to 40.","c3b5f1cf":"<a id=\"sections-age\"><\/a>\n# Age-wise distribution of victims","6a842679":"**Checking for any null values in the dataset**","18a2487b":"# If you guys like my data analysis and vizualizations, don't forget to upvote :)","07f126d4":"# We see here that around 2755 victims were armed with a gun which the cops might have found threatening, hence,some of these shootings could be self defence.","5755510f":"<a id=\"section-armed\"><\/a>\n# Top 5 weapons with which the victims were armed with","f3757bfb":"<a id=\"section-mf\"><\/a>\n# Creating a countplot of the Male & Female ratio of victims of Police shootings","a46bb6f2":"<a id=\"section-flee\"><\/a>\n# Fleeing\/Not-fleeing distribution of victims","75f8a788":"<a id=\"section-state-race\"><\/a>\n# Now we're gonna create statewise race distribution of victims","89145043":"# Police Shooting Data Analysis\n\n![image.png](attachment:image.png)\n\n**Violent encounters with the police have profound effects on health, neighborhoods, life chances, and politics. Policing plays a key role in maintaining structural inequalities between people of color and white people in the United States. Police in the United States kill far more people than do police in other advanced industrial democracies.**\n\n**In this task I'm gonna do basic EDA and visualizations on this dataset based on multiple factors such as racial bias, age and locations.**\n\n\n**Table of Content:-**\n* [Countplot of Male to Female victims ratio](#section-mf)\n* [Race-wise distribution of victims of police shooting](#section-race)\n* [State-wise distribution of victims of police shooting](#section-state)\n* [Scraping and Mapping of full names of States (basic data manipulation)](#section-scraping)    \n     \n* [State-wise Race distribution of victims](#section-state-race) \n* [Year-wise Race distribution of victims](#section-year-race)\n* [Cities with highest victims](#section-cities-high)\n* [Victims Mental stability Piechart](#section-metal)\n* [Fleeing\/Not-fleeing distribution of victims](#section-flee)\n* [Top 5 weapons with which victims were armed with](#section-armed)\n* [Age-wise distribution of victims](#sections-age)\n\n\n\nFirst, let's start with importing the required libraries","c051c06f":"<a id=\"section-scraping\"><\/a>\n**We see here that instead of the full name of the states, abbreviations are present. \nI'm gonna scrape the full names of the state with postal code from the infoplease webpage and then I'm gonna map them with the shootings dataframe**","e8d77e4c":"<a id=\"section-state\"><\/a>\n# Creating State wise plot of the victims of Police shootings","3b05249e":"<a id=\"section-metal\"><\/a>\n# We're gonna check how many of the victims were mentally ill","08dde659":"<a id=\"section-year-race\"><\/a>\n**We're gonna do the same thing as above for Year wise race distribution of the victims**","78ca8df9":"\n# It seems like most of the victims were of sound mind","d3d93f55":"<a id=\"section-race\"><\/a>\n# Creating Race wise plot of the victims of Police shootings","82e3b478":"# Most of them were not fleeing either","a3ec23a8":"<a id=\"section-cities-high\"><\/a>\n# Cities with highest victims of Police Shootings"}}