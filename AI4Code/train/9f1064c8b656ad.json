{"cell_type":{"91e9232c":"code","b38c892e":"code","11d28a11":"code","5e9b65ea":"code","1c747312":"code","3c3e0256":"code","33215a08":"code","02985c1f":"code","759a9ed0":"code","c49dd8a7":"code","fee01042":"code","5ae0be69":"code","24d2cebc":"code","1220b6e9":"code","3652a1ad":"code","653d1080":"code","bf7583c0":"code","0d8a61e1":"code","0a8b389b":"code","526cf907":"code","ebdbaaa7":"code","5aa5a2b7":"code","a7c3e09b":"code","1e9728e6":"code","388b25e0":"code","d5984592":"code","74bf0ec2":"code","4d1e04db":"code","3b282287":"code","ab7a97f1":"code","e4fbe8d6":"code","b53b92ea":"code","d74733b7":"code","bd3de4f2":"code","d7abb7e9":"code","56e1add1":"code","5c94e2c9":"code","ecb59b1e":"code","262ac392":"markdown","26bf5bb0":"markdown","868d9e75":"markdown","823164b0":"markdown","b299e3f2":"markdown","e1f5aaad":"markdown","a823ecc6":"markdown","b9ee4339":"markdown","815cbd86":"markdown","b82affa9":"markdown","7d202a4f":"markdown","9f5eff5f":"markdown","99fbcb2c":"markdown","94d2ff08":"markdown","0c866d4a":"markdown","a492835e":"markdown","85ccdec3":"markdown","e4468415":"markdown","21c1817b":"markdown","0de16440":"markdown","b22b7156":"markdown","df45f710":"markdown","7f41cead":"markdown","5fac2a13":"markdown","827dd54c":"markdown","e5dd308c":"markdown","bad0958e":"markdown","8bb88d13":"markdown","48a8bb4f":"markdown","dec52237":"markdown","34599123":"markdown","16776a4f":"markdown","6e690cdf":"markdown","2d4ddc01":"markdown","444f9af7":"markdown","966897ee":"markdown","26e3c373":"markdown","7a4afb87":"markdown","f7a23534":"markdown","ec3e3c80":"markdown","e9dd88c0":"markdown"},"source":{"91e9232c":"import os\n#print(os.listdir(\"..\/input\"))\nimport warnings\nwarnings.filterwarnings('ignore')","b38c892e":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n%matplotlib inline","11d28a11":"df = pd.read_csv('..\/input\/googleplaystore.csv')\ndf.head(3)","5e9b65ea":"print('Different types of App Categories as present in the dataset are: ')\nprint('--------------------------------------------------------------------')\n\ncount = 1\nfor i in df['Category'].unique():\n    print(count,': ',i)\n    count = count + 1","1c747312":"df[df['Category'] == '1.9']","3c3e0256":"df.drop(df.index[[10472]],inplace = True)     #Removing the app on row 10472","33215a08":"sns.set_style('whitegrid')\nplt.figure(figsize=(16,8))\nplt.title('Number of apps on the basis of category')\nsns.countplot(x='Category',data = df)\nplt.xticks(rotation=90)\nplt.show()","02985c1f":"category = pd.DataFrame(df['Category'].value_counts())        #Dataframe of apps on the basis of category\ncategory.rename(columns = {'Category':'Count'},inplace=True)","759a9ed0":"plt.figure(figsize=(15,6))\nsns.barplot(x=category.index[:10], y ='Count',data = category[:10],palette='hls')\nplt.title('Top 10 App categories')\nplt.xticks(rotation=90)\nplt.show()","c49dd8a7":"family_category = len(df[df['Category'] == 'FAMILY'])\/len(df)*100\ngames_category = len(df[df['Category'] == 'GAME'])\/len(df)*100\nbeauty_category = len(df[df['Category'] == 'BEAUTY'])\/len(df)*100\nprint('Percentage of Apps in the family category: {}%'.format(round(family_category,2)))\nprint('Percentage of Apps in the games category: {}%'.format(round(games_category,2)))\nprint('Percentage of Apps in the beauty category: {}%'.format(round(beauty_category,2)))","fee01042":"plt.figure(figsize=(15,8))\nsns.countplot(x='Rating',data = df)\nplt.xticks(rotation =90)\nplt.title('Countplot for ratings')             \nplt.show()","5ae0be69":"rating_greater_4 = len(df[df['Rating'] >= 4])\/len(df)*100\nprint('Percentage of Apps having ratings of 4 or greater: {}%'.format(round(rating_greater_4,2)))","24d2cebc":"df['Size'] = df['Size'].apply(lambda x: str(x).replace('M',''))\ndf['Size'] = df['Size'].apply(lambda x: str(x).replace('k','e-3'))","1220b6e9":"#Converting the data type of Size category to float wherever possible\ndef convert(val):\n    try:\n        return float(val)\n    except:\n        return val\ndf['Size'] = df['Size'].apply(lambda x: convert(x))","3652a1ad":"#Seperate the apps whose size is given from those whose size varies with the device.\nsized = df[df['Size'] != 'Varies with device'].copy()","653d1080":"sized['Size'] = pd.to_numeric(sized['Size'])","bf7583c0":"plt.figure(figsize=(12,6))\nplt.title('Distribution of App Sizes')\nsns.distplot(sized['Size'],bins = 30,rug=True)\nplt.show()","0d8a61e1":"size_less_20 = len(sized[sized['Size'] <= 50 ])\/len(sized)*100\nprint('Percentage of Apps in the beauty category: {}%'.format(round(size_less_20,2)))","0a8b389b":"order = ['0','0+','1+','5+','10+','50+','100+','500+','1,000+','5,000+','10,000+','50,000+','100,000+','500,000+','1,000,000+',\n         '5,000,000+','10,000,000+',\n         '50,000,000+','100,000,000+','500,000,000+','1,000,000,000+']\nsns.set_style('whitegrid')\nplt.figure(figsize=(22,8))\nplt.title('Number of apps on the basis of Installs')\nsns.countplot(x='Installs',data = df,palette='hls',order = order)\nplt.xticks(rotation = 90)\n\nplt.show()","526cf907":"print('{}% apps in the play store having more than 1,000,000 installs and {}% apps have more than 10,000,000+ downloads' .format(round(len(df[df['Installs'] == '1,000,000+'])\/len(df)*100,2),round(len(df[df['Installs'] == '10,000,000+'])\/len(df)*100,2)))","ebdbaaa7":"print('Apps on the basis of Type are classified as')\nprint('--------------------------------------------------------------------')\n\ncount = 1\nfor i in df['Type'].unique():\n    print(count,': ',i)\n    count = count + 1","5aa5a2b7":"plt.figure(figsize=(10,6))\n\n# Data to plot\nlabels = ['Free','Paid']\nsizes = [len(df[df['Type'] == 'Free']),len(df[df['Type'] == 'Paid'])]\ncolors = ['skyblue', 'yellowgreen','orange','gold']\nexplode = (0.1, 0)  # explode 1st slice\n \n# Plot\nplt.title('Percentage of Free and paid apps in playstore')\nplt.pie(sizes, labels=labels,\nautopct='%1.1f%%', startangle=380,colors=colors,explode=explode)\n\nplt.axis('equal')\nplt.show()","a7c3e09b":"df['Price'] = df['Price'].apply(lambda x: str(x).replace('$',''))\ndf['Price'] = pd.to_numeric(df['Price'])","1e9728e6":"paid_apps = df[df['Price'] != 0]","388b25e0":"plt.figure(figsize=(8,6))\nplt.title('Distribution of Paid App Prices')\nsns.distplot(paid_apps['Price'],bins=50)\nplt.show()","d5984592":"price_less_10 = len(paid_apps[paid_apps['Price'] <= 10])\/len(paid_apps)*100\nprint('Percentage of Apps having price less than 10$: {}%'.format(round(price_less_10,2)))","74bf0ec2":"paid_apps[paid_apps['Price'] >= 350]\n","4d1e04db":"print('Apps on the basis of Content Rating are classified as')\nprint('-------------------------------------------------------------------')\n\ncount = 1\nfor i in df['Content Rating'].unique():\n    print(count,': ',i)\n    count = count + 1","3b282287":"plt.figure(figsize=(12,6))\nsns.countplot(x=df['Content Rating'],palette='hls')\nplt.show()","ab7a97f1":"print('Percentage of Apps having content rating as everyone: {}%'.format(round(len(df[df['Content Rating'] == 'Everyone'])\/len(df)*100,2)))","e4fbe8d6":"plt.figure(figsize=(22,8))\nplt.title('Number of Apps on the basis of Genre')\nsns.countplot(x='Genres',data = df,palette='hls')\nplt.xticks(rotation = 90)\nplt.show()","b53b92ea":"print('Total Number of Genres: ',df['Genres'].nunique())","d74733b7":"plt.figure(figsize=(22,8))\nplt.title('Number of Apps on the basis of Android version required to run them')\nsns.countplot(x='Android Ver',data = df.sort_values(by = 'Android Ver'),palette='hls')\nplt.xticks(rotation = 90)\n\nplt.show()","bd3de4f2":"#function to convert columns to numeric data type from object data type\nfor i in df.columns:\n    try:\n        df[i] = pd.to_numeric(df[i])\n    except:\n        pass","d7abb7e9":"plt.figure(figsize=(20,6))\nsns.boxplot(x='Category',y='Rating',data = df)\nplt.xticks(rotation=90)\nplt.title('App ratings across different categories')\nplt.show()","56e1add1":"rating = pd.DataFrame(df['Rating'].describe()).T\nrating","5c94e2c9":"sns.set_style('whitegrid')\nplt.figure(figsize=(15,8))\nsns.scatterplot(y='Category',x='Reviews',data = df,hue='Category',legend=False)\nplt.xticks(rotation=90)\nplt.title('Number of reviews on the basis of Category')\nplt.show()","ecb59b1e":"#Number of apps having 0 reviews\nlen(df[df['Reviews'] == 0])\nreview_0_category = pd.DataFrame(df[df['Reviews'] == 0]['Category'].describe())\n#App having maximum reviews.\nmax_review_app = df[df['Reviews'] == max(df['Reviews'])]","262ac392":"There are 34 different app categories present in the Google Playstore.<br>\nThe 34th category(1.9) is some what different from other app categories.Checking it","26bf5bb0":"The data set contains following featues","868d9e75":"I have created a seperate dataset for paid apps from the whole playstore dataset","823164b0":"####  **1. Rating vs. Category**","b299e3f2":"Checking apps having price greater than 350$","e1f5aaad":"There are 119 Genres in the app store with the Tools Genre having the highest number of apps followed by Entertainment.","a823ecc6":"**Findings**","b9ee4339":"####  **7. Content Rating**","815cbd86":"#### **1. Category**","b82affa9":"#### **2. Rating**","7d202a4f":"The minimum and maximum rating an app can have are 1 and 5 respectively across all categories.<br>\nThe **mean** rating of apps across all categories is **4.2** with a **standard** deviation of **0.51**. Also, the **median** rating of apps across all categories is **4.3**.","9f5eff5f":"####  **Countplot of Number of Apps on the basis of category**","99fbcb2c":"#### **10. Current Version**","94d2ff08":"####  **Category vs. Reviews**","0c866d4a":"We found that 16 apps by the name **I am rich** or having similar names have a price tage of 399$ and most of them even have 10,000+ downloads.","a492835e":"**Seperating paid apps from free apps**","85ccdec3":"#### **Reading the dataset**","e4468415":"Most of the apps in the app store are free.Only a small percentage of apps are paid apps.","21c1817b":"#### **3.Size**","0de16440":"Majority of apps in the playstore have a rating 4 or above","b22b7156":"#### **4. Installs**","df45f710":"22.6% of the apps out of 10840 apps require android version 4.1 or greater version to work.","7f41cead":"**1. App:** Application name<br>\n**2. Category:** Category the app belongs to<br>\n**3. Rating:** Overall user rating of the app (as when scraped)<br>\n**4. Reviews:** Number of user reviews for the app (as when scraped)<br>\n**5. Size:** Size of the app (as when scraped)<br>\n**6. Installs**: Number of user downloads\/installs for the app (as when scraped)<br>\n**7. Type:** Paid or Free<br>\n**8. Price:** Price of the app (as when scraped)<br>\n**9. Content Rating**: Age group the app is targeted at - Children \/ Mature 21+ \/ Adult<br>\n**10.Genres:** An app can belong to multiple genres (apart from its main category). For eg, a musical family game will belong to Music, Game, Family genres.<br>\n**11. Last Updated**: Date when the app was last updated on Play Store (as when scraped)<br>\n**12. Current Ver**: Current version of the app available on Play Store (as when scraped)<br>\n**13. Android Ver:** Min required Android version (as when scraped)<br>","5fac2a13":"I hope you find this kernel helpful and some **<font color='red'>UPVOTES<\/font>** would be very much appreciated","827dd54c":"#### **6. Price**","e5dd308c":"**Findings**","bad0958e":"####  **8. Genres**","8bb88d13":"89% apps in the play store have a price tag of 10\\\\$ or less. Although some apps have price greater than 350\\\\$","48a8bb4f":"#### **5. Type**","dec52237":"### **Checking features of each column given in the dataset**","34599123":"In the Size columns either the size is given in MB or kB or it's written that the size varies with the device.<br>\nI have converted all the app sizes given in kB and MB to MB. Also 1 have used 1kB = 1000MB","16776a4f":"In this kernel I have performed Exploratory Data Analysis on the Google Play Store App Dataset and tried to identify relationsips between  various app featues. Also I have tried to figure out ongoing trends in the playstore.","6e690cdf":"### **Importing Required Libraries**","2d4ddc01":"**1.** Most of the apps across different categories have less than 10,000,000 reviews.<br>\n**2.** 596 apps have **0** reviews with most of the apps belonging to **BUSINESS** category.<br>\n**3.** The app having the maximum number of reviews(78158306) is **Facebook** which belong to the **SOCIAL** category.\n","444f9af7":"**Family** category has the most number of apps with 18% of apps belonging to it followed by **Games** category which has 11% of the apps.Least number of apps belong to the **Beauty** category with less than 1% of the total apps belonging to it.","966897ee":"It seems that data was not correctly entered for this app.I will remove this app from the data set, removing one app will not affect the dataset much.","26e3c373":"### **Relationships between different features**","7a4afb87":"In the dataset majority(88%) of the apps whose size are given have app size less than or equal to 50MB","f7a23534":"#### **Top 10 App Categories**","ec3e3c80":"Most of the apps in the playstore belong to the **Family** category followed by **Games** category.","e9dd88c0":"The EDA is currently not complete and I will add more findings in the future.<br>\n**Suggestions are welcome**"}}