{"cell_type":{"1fc71152":"code","a3350d2e":"code","c11a5b15":"code","6795ded3":"code","6275ba24":"code","11ca8b37":"code","49df05a0":"code","2a8df006":"code","3c581d84":"code","7594163e":"code","b7e900aa":"code","a64e6d8b":"code","ebfdbfc2":"code","43396a59":"markdown","a80a218e":"markdown","ac1baddb":"markdown","c7929c7d":"markdown","01291923":"markdown","b1fe6afe":"markdown"},"source":{"1fc71152":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\n\nimport tensorflow as tf\n\nfrom sklearn.metrics import confusion_matrix, classification_report","a3350d2e":"data = pd.read_csv('..\/input\/eeg-brainwave-dataset-feeling-emotions\/emotions.csv')","c11a5b15":"data","6795ded3":"sample = data.loc[0, 'fft_0_b':'fft_749_b']\n\nplt.figure(figsize=(16, 10))\nplt.plot(range(len(sample)), sample)\nplt.title(\"Features fft_0_b through fft_749_b\")\nplt.show()","6275ba24":"data['label'].value_counts()","11ca8b37":"label_mapping = {'NEGATIVE': 0, 'NEUTRAL': 1, 'POSITIVE': 2}","49df05a0":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    df['label'] = df['label'].replace(label_mapping)\n    \n    y = df['label'].copy()\n    X = df.drop('label', axis=1).copy()\n    \n    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)\n    \n    return X_train, X_test, y_train, y_test","2a8df006":"X_train, X_test, y_train, y_test = preprocess_inputs(data)","3c581d84":"X_train","7594163e":"inputs = tf.keras.Input(shape=(X_train.shape[1],))\n\nexpand_dims = tf.expand_dims(inputs, axis=2)\n\ngru = tf.keras.layers.GRU(256, return_sequences=True)(expand_dims)\n\nflatten = tf.keras.layers.Flatten()(gru)\n\noutputs = tf.keras.layers.Dense(3, activation='softmax')(flatten)\n\n\nmodel = tf.keras.Model(inputs=inputs, outputs=outputs)\nprint(model.summary())","b7e900aa":"model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n)\n\nhistory = model.fit(\n    X_train,\n    y_train,\n    validation_split=0.2,\n    batch_size=32,\n    epochs=50,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(\n            monitor='val_loss',\n            patience=5,\n            restore_best_weights=True\n        )\n    ]\n)","a64e6d8b":"model_acc = model.evaluate(X_test, y_test, verbose=0)[1]\nprint(\"Test Accuracy: {:.3f}%\".format(model_acc * 100))","ebfdbfc2":"y_pred = np.array(list(map(lambda x: np.argmax(x), model.predict(X_test))))\n\ncm = confusion_matrix(y_test, y_pred)\nclr = classification_report(y_test, y_pred, target_names=label_mapping.keys())\n\nplt.figure(figsize=(8, 8))\nsns.heatmap(cm, annot=True, vmin=0, fmt='g', cbar=False, cmap='Blues')\nplt.xticks(np.arange(3) + 0.5, label_mapping.keys())\nplt.yticks(np.arange(3) + 0.5, label_mapping.keys())\nplt.xlabel(\"Predicted\")\nplt.ylabel(\"Actual\")\nplt.title(\"Confusion Matrix\")\nplt.show()\n\nprint(\"Classification Report:\\n----------------------\\n\", clr)","43396a59":"# Getting Started","a80a218e":"# Modeling","ac1baddb":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/IAQdqaoHrfE","c7929c7d":"# Task for Today  \n\n***\n\n## EEG Emotion Prediction  \n\nGiven *EEG data from subjects who were watching movies*, let's try to predict the **emotional state** of a subject during a given movie.  \n  \nWe will use a TensorFlow recurrent neural network to make our predictions.","01291923":"# Results","b1fe6afe":"# Preprocessing"}}