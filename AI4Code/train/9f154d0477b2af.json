{"cell_type":{"5a982b2d":"code","ccdc3df3":"code","fdc66b4a":"code","22e2c9a9":"code","2fd12b82":"code","fa78d936":"code","d7e1bd0b":"code","278c11e3":"code","7cdb47d9":"code","5012fe6c":"code","74ef7a5a":"code","7bcf11a6":"code","4980e8e3":"code","802cd710":"code","c9cab29c":"code","6afa5dc6":"code","312bd4da":"code","910a5506":"code","0b85c984":"code","03516b00":"markdown","40ed2b24":"markdown","6f66d9d3":"markdown","41094cf8":"markdown","737afdad":"markdown","50e1833c":"markdown","2fbe4146":"markdown","a000911d":"markdown","c615a9df":"markdown","d3c94063":"markdown","69d3f4d6":"markdown","409d61d5":"markdown","9591e776":"markdown","6bd4c95b":"markdown","730d7ccc":"markdown","a305893f":"markdown","d4b7d7ee":"markdown","d4d72bf6":"markdown","0b50fd5a":"markdown","f8915db9":"markdown","a33e60a6":"markdown","f0ffb337":"markdown","43e84714":"markdown","1f4dd9ec":"markdown"},"source":{"5a982b2d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n#Load haberman.csv into a pandas dataFrame.\nhaberman = pd.read_csv(\"..\/input\/haberman.csv\/haberman.csv\")\n","ccdc3df3":"# (Q) how many data-points and features?\nprint (haberman.shape)","fdc66b4a":"#(Q) What are the column names in our dataset?\nprint (haberman.columns)","22e2c9a9":"print(haberman.head(3))","2fd12b82":"#(Q) How many data points for each class are present? \n\n\nhaberman[\"status\"].value_counts()\n# balanced-dataset vs imbalanced datasets\n#haberman is a imbalanced dataset as the number of data points are 225 and 81.","fa78d936":"#2-D scatter plot:\n#ALWAYS understand the axis: labels and scale.\n\nhaberman.plot(kind='scatter', x='nodes', y='age') ;\nplt.title('2-D scatter plot')\n\nplt.show()\n\n#cannot make much sense out it. ","d7e1bd0b":"# Here 'sns' corresponds to seaborn. \nsns.set_style(\"whitegrid\");\nsns.FacetGrid(haberman, hue=\"status\", height=4) \\\n   .map(plt.scatter, \"nodes\", \"age\") \\\n   .add_legend();\nplt.title('2-D scatter plot with different colour')\n\n\nplt.show();\n","278c11e3":"sns.set_style(\"whitegrid\");\nsns.pairplot(haberman, hue=\"status\", height=3,vars=['age','year','nodes']);\nplt.suptitle('Pair plot', fontsize = 21)\nplt.show()\n","7cdb47d9":"# What about 1-D scatter plot using just one feature?\n#1-D scatter plot of nodes\nimport numpy as np\nhaberman_1 = haberman.loc[haberman[\"status\"] ==1];\nhaberman_2 = haberman.loc[haberman[\"status\"] == 2];\n\nplt.plot(haberman_1[\"nodes\"], np.zeros_like(haberman_1['nodes']), 'o')\nplt.plot(haberman_2[\"nodes\"], np.zeros_like(haberman_2['nodes']), 'o')\nplt.title('1-D scatter plot with different colour')\n\nplt.show()\n#Disadvantages of 1-D scatter plot: Very hard to make sense as points \n#are overlapping a lot.\n","5012fe6c":"#PDF (Probability Density Function):\nsns.FacetGrid(haberman, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"age\") \\\n   .add_legend();\nplt.title('PDF for age')\n\nplt.show();\n\n","74ef7a5a":"sns.FacetGrid(haberman, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"year\") \\\n   .add_legend();\nplt.title('PDF of year')\n\nplt.show();","7bcf11a6":"sns.FacetGrid(haberman, hue=\"status\", height=5) \\\n   .map(sns.distplot, \"nodes\") \\\n   .add_legend();\nplt.title('PDF of nodes')\n\nplt.show();","4980e8e3":"\n# Need for Cumulative Distribution Function (CDF)\n#CDF will give the cumulative plot of PDF so that you can calculate what are the exact percentage of  survival status\n\ncounts, bin_edges = np.histogram(haberman_1['nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges);\n\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf);\nplt.plot(bin_edges[1:], cdf)\nplt.title('PDF of long survival')\n\n\n","802cd710":"\ncounts, bin_edges = np.histogram(haberman_2['nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\nprint(pdf);\nprint(bin_edges)\n\n#compute CDF\ncdf = np.cumsum(pdf)\nplt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:], cdf)\nplt.title('PDF of Short survival')\n\n\nplt.show();","c9cab29c":"#Mean, Variance, Std-deviation,  \nprint(\"Means:\")\nprint(np.mean(haberman_1[\"nodes\"]))\n#Mean with an outlier.\nprint(np.mean(np.append(haberman_1[\"nodes\"],50)));\nprint(np.mean(haberman_2[\"nodes\"]))\n\n\nprint(\"\\nStd-dev:\");\nprint(np.std(haberman_1[\"nodes\"]))\nprint(np.std(haberman_2[\"nodes\"]))\n\n\n\n\n","6afa5dc6":"#Median, Quantiles, Percentiles, IQR.\nprint(\"\\nMedians:\")\nprint(np.median(haberman_1[\"nodes\"]))\n#Median with an outlier\nprint(np.median(np.append(haberman_1[\"nodes\"],50)));\nprint(np.median(haberman_2[\"nodes\"]))\n\n\n\nprint(\"\\nQuantiles:\")\nprint(np.percentile(haberman_1[\"nodes\"],np.arange(0, 100, 25)))\nprint(np.percentile(haberman_2[\"nodes\"],np.arange(0, 100, 25)))\n\n\nprint(\"\\n90th Percentiles:\")\nprint(np.percentile(haberman_1[\"nodes\"],90))\nprint(np.percentile(haberman_2[\"nodes\"],90))\n\n\nfrom statsmodels import robust\nprint (\"\\nMedian Absolute Deviation\")\nprint(robust.mad(haberman_1[\"nodes\"]))\nprint(robust.mad(haberman_2[\"nodes\"]))\n\n","312bd4da":"\n#Box-plot with whiskers: another method of visualizing the  1-D scatter plot more intuitivey.\n# The Concept of median, percentile, quantile.\n# How to draw the box in the box-plot?\n# How to draw whiskers: [no standard way] Could use min and max or use other complex statistical techniques.\n# IQR like idea.\n\n#NOTE: IN the plot below, a technique call inter-quartile range is used in plotting the whiskers. \n#Whiskers in the plot below donot correposnd to the min and max values.\n\n#Box-plot can be visualized as a PDF on the side-ways.\n\nsns.boxplot(x='status',y='nodes', data=haberman)\nplt.title('Box plot and Whiskers')\nplt.show()","910a5506":"# A violin plot combines the benefits of the previous two plots \n#and simplifies them\n\n# Denser regions of the data are fatter, and sparser ones thinner \n#in a violin plot\n\nsns.violinplot(x=\"status\", y=\"nodes\", data=haberman, height=7)\nplt.title('Violin plots')\nplt.show()","0b85c984":"#2D Density plot, contour-plot\n\nsns.jointplot(x=\"age\", y=\"nodes\", data=haberman_1, kind=\"kde\");\nplt.title('contour plot',loc='center',fontsize='20')\nplt.show();\n","03516b00":"#  (3.3) Pair-plot","40ed2b24":"# (3.11) Multivariate probability density, contour plot.\n","6f66d9d3":"# (3.7) Box plot and Whiskers","41094cf8":"Observation:\n\n1. Here you can see the data of short survive is mostly overlapping on long survive data.So we are unable to conclude on 1D scatter plot","737afdad":"# (3.1) Basic Terminology","50e1833c":"Observation:\n\n1. 2D density plot for long survival using x-axis as age and y-axis as nodes \n\n2. In long survival the age between 45 to 60 nodes from 0 to 2 \n\n3.the dark area have major density as the area is getting lighter ","2fbe4146":"## 3D Scatter plot\n\n","a000911d":"Observation:\n\n1.In long survive box 25th% and 50th% are same and threshold is 0 to 7 nodes\n\n2. short survive of 50th% of nodes same as 75th% of long survive\n\n3.threshold for short survive is 0 to 25 nodes and 25th% is 1 node and 75th% is 12 nodes\n\n4.So,if nodes between 0\u20137 have chances of error as short survival plot is also lies in it.\nThat is 50% error for Short survival status\n5.most of short survivals are above 12 nodes\n","c615a9df":"Observation:\n\nHere we observed that people survived long if they have less nodes. But it is still hard to classify but it is best data among all ","d3c94063":"Observation:\n\n1.Here you can observe long survive mean is 2.79 and the mean of short survive is 7.45. \n\n2.So the probability of less survive is more in data.\n\n3.standard deviation of long survive is less compared to standard deviation of short survive is more, means the spread of short survive is more","69d3f4d6":"* What is EDA?\n* Data-point\/vector\/Observation\n* Data-set.\n* Feature\/Variable\/Input-variable\/Dependent-varibale\n* Label\/Indepdendent-variable\/Output-varible\/Class\/Class-label\/Response label\n* Vector: 2-D, 3-D, 4-D,.... n-D\n\nQ. What is a 1-D vector: Scalar\n\n","409d61d5":"# (3.8) Violin plots","9591e776":"Observation:\n\n1.There is 85% of long survival chances if nodes are <5. If nodes increases > 40 100% of people have less chance of survive.\ntherefore if number of nodes increases survival chances also decreases","6bd4c95b":"# (3.5) Mean, Variance and Std-dev","730d7ccc":"# (3.6) Median, Percentile, Quantile, IQR, MAD","a305893f":"# (3.2) 2-D Scatter Plot","d4b7d7ee":"Observation:\n\n1.In violin plot we observed that for long survive density is more near to 0 node and in violin2 short survival density more from 0 to 20","d4d72bf6":"# (3.4) Histogram, PDF, CDF","0b50fd5a":"**Observations**\n1. Here we can see age and nodes ploting are better than other plots because the remaining plots are mostly overlapping on each other.\n","f8915db9":"CONCLUSION:\n\nyou can diagnose the Cancer using Haberman\u2019s Data set with the help of  data analysis techniques and by using various Python libraries.","a33e60a6":"Observation:\n\n1.median shows that the average nodes in long survival is 0 and for short survival  is 4. ie, Patients who have average 4 nodes have short survival \n\n2.In long survival 50th% of nodes are 0. and 75th% of people have less than 3 nodes.\n\n3.In short survival 25th% of people have 1 nodes and 50th% of people have 4 nodes and 75th% of people have minimum 11 nodes.\n\n4.At 90th% the long survival have 8 nodes and short survival have 20 nodes ","f0ffb337":"# 3. Plotting for Exploratory data analysis (EDA)","43e84714":"**Observation:**\n1.In this scatter plot we can see blue dots represent survival more than 5 years and orange dots represent survival less than 5 years.","1f4dd9ec":"Observation:\n\n1.In short survival nearly 55% of people are less than 5 nodes.  If nodes increases > 40 100% of people have less chance of survive."}}