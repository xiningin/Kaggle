{"cell_type":{"ce5b0f5f":"code","f96f626e":"code","4ed251ea":"code","efe692fc":"code","5c29e017":"code","4aa18c41":"code","830e6642":"code","636a4429":"code","0d170482":"code","df983723":"code","0cb968e4":"code","30247287":"code","2e0d59e9":"code","b5688b91":"code","7b254285":"code","bd9be724":"code","afdf965a":"code","3df73149":"code","904598da":"code","61a33fe4":"code","9d054970":"code","dc9155ae":"code","dd10bdf0":"code","3feaa1e4":"code","5d816298":"code","d53428cd":"code","cd710348":"code","7299f731":"code","81e2e4b6":"code","8e85582f":"code","fd90733d":"code","8312e18e":"code","07344319":"code","0b86d43d":"code","caf491cd":"code","d56cf497":"code","4b282c0a":"code","75943d16":"code","46ff5593":"code","665b3f58":"code","9a623688":"code","8f25f23b":"code","7d6494f7":"code","231ccaca":"code","1187ee78":"code","7ab6974c":"code","bc7516fc":"code","736081df":"markdown","f00a1644":"markdown","3791696f":"markdown","03cd9134":"markdown","471aa40b":"markdown","d8a8c950":"markdown","f4c269df":"markdown","56f11f14":"markdown","6dd5d8f6":"markdown"},"source":{"ce5b0f5f":"%reload_ext autoreload\n%autoreload 2\n%matplotlib inline","f96f626e":"# FOR non-FASTAI LIBRARIES\nimport numpy as np \nimport pandas as pd\nimport os\nimport random\n\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","4ed251ea":"from fastai.vision import *\nfrom fastai.metrics import *\n\n\n# make sure CUDA is available and enabled\nprint(torch.cuda.is_available(), torch.backends.cudnn.enabled)","efe692fc":"path = Path(\"..\/input\/digit-recognizer\")\nos.listdir(path)","5c29e017":"train_df = pd.read_csv(path\/\"train.csv\")\ntrain_df.head()","4aa18c41":"test_df = pd.read_csv(path\/\"test.csv\")\ntest_df.head()","830e6642":"TRAIN = Path(\"..\/train\")\nTEST = Path(\"..\/test\")","636a4429":"#make directories folders for train\nfor i in range(10):    \n    try:         \n        os.makedirs(TRAIN\/str(i))       \n    except:\n        pass\n\n#see directory\nprint(os.listdir(TRAIN))","0d170482":"#make directories folders for test\ntry:\n    os.makedirs(TEST)\nexcept:\n    pass\n\n#see directory\nprint(os.listdir(TEST))","df983723":"# os.listdir(TEST)\nif os.path.isdir(TRAIN):\n    print('Train directory has been created')\nelse:\n    print('Train directory creation failed.')\n\nif os.path.isdir(TEST):\n    print('Test directory has been created')\nelse:\n    print('Test directory creation failed.')","0cb968e4":"from PIL import Image","30247287":"def pix2img(pix_data, filepath):\n    img_mat = pix_data.reshape(28,28)\n    img_mat = img_mat.astype(np.uint8())\n    \n    img_dat = Image.fromarray(img_mat)\n    img_dat.save(filepath)","2e0d59e9":"# save training images\nfor idx, data in train_df.iterrows():\n    \n    label, data = data[0], data[1:]\n    folder = TRAIN\/str(label)\n    \n    fname = f\"{idx}.jpg\"\n    filepath = folder\/fname\n    \n    img_data = data.values\n    \n    pix2img(img_data,filepath)","b5688b91":"# save test images\nfor idx, data in test_df.iterrows():\n    folder = TEST\n    \n    fname = f\"{idx}.jpg\"\n    filepath = folder\/fname\n    \n    img_data = data.values\n    \n    pix2img(img_data,filepath)","7b254285":"tfms = get_transforms(do_flip = False)","bd9be724":"print('test : ',TEST)\nprint('train: ', TRAIN)\nprint(type(TEST))","afdf965a":"path = (\"..\/train\")\n# test = (\"..\/test\")","3df73149":"np.random.seed(42)\ndata = ImageDataBunch.from_folder(path, train=\".\", test = (\"..\/test\"), valid_pct=0.2,\n        ds_tfms=get_transforms(), size=28, num_workers=0).normalize(imagenet_stats)","904598da":"data.classes","61a33fe4":"data.show_batch(rows=3, figsize=(5,5))","9d054970":"mnist_stats","dc9155ae":"learn = cnn_learner(data, base_arch = models.resnet34, metrics = accuracy,model_dir=\"\/tmp\/models\", callback_fns=ShowGraph )","dd10bdf0":"# learn.lr_find()\n# learn.recorder.plot()","3feaa1e4":"learn.fit_one_cycle(5, 1e-03)","5d816298":"learn.save('model1')","d53428cd":"learn.unfreeze()","cd710348":"# learn.lr_find()\n# learn.recorder.plot()","7299f731":"learn.fit_one_cycle(5 , 1e-04)","81e2e4b6":"learn.fit_one_cycle(5 , slice(1e-05,1e-04))","8e85582f":"learn.fit_one_cycle(5 , slice(1e-06,1e-05))","fd90733d":"np.random.seed(42)\ndata = ImageDataBunch.from_folder(path, train=\".\", test = (\"..\/test\"), valid_pct=0.2,\n        ds_tfms=get_transforms(), size=69, num_workers=0).normalize(imagenet_stats)\n\nlearn.data = data\ndata.train_ds[0][0].shape","8312e18e":"learn.freeze()","07344319":"lr=1e-03","0b86d43d":"learn.fit_one_cycle(5, slice(lr))","caf491cd":"learn.save('stage-4')","d56cf497":"learn.unfreeze()","4b282c0a":"learn.fit_one_cycle(5, slice(1e-5, lr\/5))","75943d16":"learn.fit_one_cycle(10, 1e-05, wd=0.5)","46ff5593":"learn.show_results(3, figsize= (7,7))","665b3f58":"class_score , y = learn.get_preds(DatasetType.Test)","9a623688":"probabilities = class_score[0].tolist()\n[f\"{index}: {probabilities[index]}\" for index in range(len(probabilities))]","8f25f23b":"class_score = np.argmax(class_score, axis=1)","7d6494f7":"class_score[1].item()","231ccaca":"import pandas as pd\nsample_submission =  pd.read_csv('\/kaggle\/input\/digit-recognizer\/sample_submission.csv')\nsample_submission.head()","1187ee78":"# remove file extension from filename\nImageId = [os.path.splitext(path)[0] for path in os.listdir(TEST)]\n# typecast to int so that file can be sorted by ImageId\nImageId = [int(path) for path in ImageId]\n# +1 because index starts at 1 in the submission file\nImageId = [ID+1 for ID in ImageId]","7ab6974c":"submission  = pd.DataFrame({\n    \"ImageId\": ImageId,\n    \"Label\": class_score\n})\n\nsubmission.to_csv(\"submission.csv\", index=False)","bc7516fc":"submission.head()","736081df":"# Importing data","f00a1644":"### Since FastAI only takes data in as images, not pixel values, we will have to convert this data into images for which we will use the PIL library. \n\nWe will have to reshape this into 28x28 matrices. To do this, I will use the PIL library in Python ","3791696f":"# Prepare train\/test set","03cd9134":"A great thanks to [Sanwal Yousaf](https:\/\/www.kaggle.com\/sanwal092), of which I got more of the fundamental code like making the directories. And some of the code is commented '#' because it would take longer to submit the notebook if it werent.","471aa40b":"# Submission","d8a8c950":"# CNN for MMIST","f4c269df":"# Train model","56f11f14":"# Prediction","6dd5d8f6":"# Make directories"}}