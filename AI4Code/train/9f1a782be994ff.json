{"cell_type":{"6c2aa08f":"code","701ef304":"code","cf121f99":"code","30e494b8":"code","914f614b":"code","39eccd45":"code","7715f9db":"code","d10b2836":"code","3f0adecf":"code","29deb43f":"markdown","41f5fcad":"markdown","8bd06232":"markdown","7892233d":"markdown","14a474a4":"markdown","0f2034c6":"markdown","957b2863":"markdown","3a16b21b":"markdown","d66db065":"markdown","e95b42b2":"markdown","646261d7":"markdown","54da1e2d":"markdown"},"source":{"6c2aa08f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n\nimport numpy as np # linear algebra\nimport random as rnd \nimport matplotlib.pyplot as plt  \n ","701ef304":"a = 2;\nb = 15;\nnoise = np.random.normal(0, 1, 200); # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f 200 \u0437\u043d\u0430\u0447\u0435\u043d\u044c \u0437 \u0433\u0430\u0443\u0441\u0456\u0432\u0441\u044c\u043a\u043e\u0433\u043e \u0440\u043e\u0437\u043f\u043e\u0434\u0456\u043b\u0443 \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 (0,1)\nx = np.random.uniform(0, 10, 200); # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f 200 \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u044f\u043a\u0456 \u0440\u0456\u0432\u043d\u043e\u043c\u0456\u0440\u043d\u043e \u0440\u043e\u0437\u043f\u043e\u0434\u0456\u043b\u0435\u043d\u0456 \u0432 \u043c\u0435\u0436\u0430\u0445 \u0432\u0456\u0434 0 \u0434\u043e 10 \n\ny = a*x+b+noise; \n    \nplt.scatter(x, y, marker = '.', color = 'g') # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a \nplt.plot(x, a*x+b,color = 'r')# \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u043f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u043e\u0457 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 ","cf121f99":"def MSEda(y,x,a,b): #\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430 \u043f\u043e\u0445\u0456\u0434\u043d\u0430 \u043f\u043e a \n    f = np.array([a*i+b for i in x]);\n    return -2*np.dot((y-f).T,x);\n\ndef MSEdb(y,x,a,b): #\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430 \u043f\u043e\u0445\u0456\u0434\u043d\u0430 \u043f\u043e b \n    f = np.array([a*i+b for i in x]);\n    return -2*(y-f).sum();\n\nl1 = 0.0001; #\u043a\u0440\u043e\u043a \u0437\u0431\u0456\u0436\u043d\u043e\u0441\u0442\u0456 \u0434\u043b\u044f a\nl2 = 0.001; #\u043a\u0440\u043e\u043a \u0437\u0431\u0456\u0436\u043d\u043e\u0441\u0442\u0456 \u0434\u043b\u044f b\na0 = 0; #\u043f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 a\nb0 = 0; #\u043f\u043e\u0447\u0430\u0442\u043a\u043e\u0432\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 b\nN = 100; #\u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0439 \u0434\u043b\u044f \u043f\u043e\u0448\u0443\u043a\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \n\nfor i in range(N): #\u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442\u043d\u0438\u0439 \u0441\u043f\u0443\u0441\u043a\n    a0=a0-l1*MSEda(y,x,a0,b0);\n    b0=b0-l2*MSEdb(y,x,a0,b0);\n\nprint(\"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438, \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0456 \u0437\u0430 \u0434\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u043e\u0434\u0443 \u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0443\u0441\u043a\u0443: \");    \nprint(\"a =\", a0);    \nprint(\"b = \",b0);   ","30e494b8":"#y = a*x+b+noise; \ny0 = a*x+b; #\u0442\u0435\u043e\u0440\u0435\u0442\u0438\u0447\u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0456\u044f\ny1 = a0*x+b0; #\u0444\u0443\u043d\u043a\u0446\u0456\u044f \u0437\u0456 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\n# plt.scatter(x, y, marker = '.', color = 'g') # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a      \nplt.plot(x, y0,color = 'r')# \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0435\u043e\u0440\u0435\u0442\u0438\u0447\u043d\u043e\u0457 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 - \u0447\u0435\u0440\u0432\u043e\u043d\u0438\u043c \u043a\u043e\u043b\u044c\u043e\u0440\u043e\u043c \nplt.plot(x, y1,color = 'b')# \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0437\u0456 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 - \u0441\u0438\u043d\u0456\u043c","914f614b":"m1 = [2,5];\ncov1 = [[3, 0], [0, 3]];\nx_1 = np.random.multivariate_normal(m1, cov1, 100); # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f 100 \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u0437 \u0433\u0430\u0443\u0441\u0456\u0432\u043a\u044c\u043a\u0438\u043c \u0440\u043e\u0437\u043f\u043e\u0434\u0456\u043b\u043e\u043c \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 N(m1,cov1)\nplt.scatter(x_1[:, 0], x_1[:, 1], marker = '*', color='midnightblue'); # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a  \n\n\nm2 = [0, 0];\ncov2 = [[1, 0], [0, 1]];\nx_2 = np.random.multivariate_normal(m2, cov2, 100); # \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f 100 \u0437\u043d\u0430\u0447\u0435\u043d\u044c, \u0437 \u0433\u0430\u0443\u0441\u0456\u0432\u043a\u044c\u043a\u0438\u043c \u0440\u043e\u0437\u043f\u043e\u0434\u0456\u043b\u043e\u043c \u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 N(m2,cov2)\nplt.scatter(x_2[:, 0], x_2[:, 1], marker = 'p', color='r'); # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0437\u0433\u0435\u043d\u0435\u0440\u043e\u0432\u0430\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a\n\n\nX = np.concatenate([x_1, x_2]); # \u043e\u0431'\u0454\u0434\u043d\u0443\u0454\u043c\u043e \u0434\u0432\u0430 \u043d\u0430\u0431\u043e\u0440\u0438 \u0441\u0438\u043d\u0442\u0435\u0442\u0438\u0447\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a \u0432 \u043e\u0434\u0438\u043d \n\nY = np.array([0] * 100 + [1] * 100); #\u043f\u0440\u0438\u0437\u043d\u0430\u0447\u0430\u0454\u043c\u043e \u043c\u0456\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0441\u0456\u0432: \u0434\u043b\u044f  x_1 - 0, \u0434\u043b\u044f x_2 - 1\n","39eccd45":"#\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u0432\u0438\u0431\u0456\u0440\u043a\u0438 \u0434\u043b\u044f \u0442\u0440\u0435\u043d\u0443\u0432\u0430\u043d\u043d\u044f \u043c\u043e\u0434\u0435\u043b\u0456\nx_train = np.concatenate([X[0:70,:], X[130:200,:]]);\ny_train = np.concatenate([Y[0:70], Y[130:200]]);\n\n#\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0456\u0440\u043a\u0438 \nx_test = X[70:130,:];\ny_test = Y[70:130];\n","7715f9db":"def sigmoida(x):\n    return 1 \/ (1 + np.exp(-x));\n  \ndef train(x, y, l = 0.005, N=1000):\n    w = np.random.randn(2, 1) * 0.001;\n    b = np.random.randn() * 0.001;\n    dw = np.zeros((2, 1));\n    db = 0;\n    for i in range(N):\n        z = x.reshape(140, 2).dot(w) + b;\n        p = sigmoida(z);\n        dw = np.sum(x.reshape(x.shape[0], x.shape[1]) * (p.reshape(x.shape[0], 1) - y.reshape(x.shape[0], 1)), axis=0) \/ len(x);\n        db = np.sum((p.reshape(x.shape[0], 1) - y.reshape(x.shape[0], 1)), axis=0) \/ len(x);\n\n        #\u043a\u0440\u043e\u043a \u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0443\u0441\u043a\u0443\n        w = w - l * dw.reshape(2, 1);\n        b = b - l * db;\n \n    return w,b;\n\ndef predict(x, w, b):\n    p = np.zeros(x.shape[0]);\n    z = sigmoida(x.reshape(x.shape[0], 2).dot(w) + b);\n    for i in range(x.shape[0]):\n        if(z[i] >= 0.5):\n            p[i] = 1\n    return p;\n        ","d10b2836":"w,b = train(x_train, y_train); # \u043d\u0430\u0432\u0447\u0430\u043d\u043d\u044f \u043c\u043e\u0434\u0435\u043b\u0456 \u043d\u0430 \u0442\u0440\u0435\u043d\u0443\u0432\u0430\u043b\u044c\u043d\u0438\u0445 \u0434\u0430\u043d\u0438\u0445 \ny_test_predict = predict(x_test, w, b); # \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0438 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0438\u0445 \u0434\u0430\u043d\u043d\u0438\u0445 \n\nTP=0; \nTN=0; \nFP=0; \nFN=0; \n\nfor i in range(len(y_test)): #\u043e\u0431\u0447\u0438\u0441\u043b\u044e\u0432\u0430\u043d\u043d\u044f \u043f\u043e\u0445\u0438\u0431\u043e\u043a, \u0430 \u0442\u0430\u043a\u043e\u0436 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0438\u0445 \u043a\u043b\u0430\u0441\u0430\u0444\u0456\u043a\u0430\u0446\u0456\u0439 \n    if(y_test[i]==1):\n        if(y_test_predict[i]==1):\n            TP+=1;\n        else: #y_test_predict[i] == 0 \n            FN+=1;        \n    else: # ---------------------y_test[i]==0\n        if(y_test_predict[i]==0):\n            TN+=1;\n        else: #y_test_predict[i] == 1 \n            FP+=1;\n\naccuracy = (TP+TN)\/(TP+TN+FN+FP);\nprint(\"\u0422\u043e\u0447\u043d\u0456\u0441\u0442\u044c \u043f\u043e\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u043e\u0457 \u043c\u043e\u0434\u0435\u043b\u0456: \", accuracy); \n","3f0adecf":"x0 = [];\ny0 = [];\nx1 = [];\ny1 = [];\nj = 0  \n\nfor i in y_test_predict: #\u043f\u043e\u0434\u0456\u043b \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0456\u0440\u043a\u0438 \u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u0438 \u0437\u0430 \u043c\u0456\u0442\u043a\u0430\u043c\u0438, \u044f\u043a\u0456 \u0431\u0443\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0435\u043d\u0456 \u043c\u043e\u0434\u0435\u043b\u043b\u044e\n    if i == 0:\n        x0.append(x_test[j][0])\n        y0.append(x_test[j][1])\n    else:\n        x1.append(x_test[j][0])\n        y1.append(x_test[j][1])\n    j = j + 1\n\nplt.scatter(x_test[0:30, 0], x_test[0:30, 1], marker = 'o', color='c'); # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0440\u0456\u043a\u0438 \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 0 \nplt.scatter(x_test[30:60, 0], x_test[30:60, 1], marker = 'o', color='k'); # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0440\u0456\u043a\u0438 \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 1 \n\nplt.scatter(x0, y0, marker = \".\", color='c'); # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0440\u0456\u043a\u0438 \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 0(\u0437\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043e\u043c \u043c\u043e\u0434\u0435\u043b\u0456)  \nplt.scatter(x1, y1, marker = \".\", color='k'); # # \u0432\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0457 \u0432\u0438\u0431\u0440\u0456\u043a\u0438 \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 1(\u0437\u0430 \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u043e\u043c \u043c\u043e\u0434\u0435\u043b\u0456)  ","29deb43f":"## 1. \u041b\u0456\u043d\u0456\u0439\u043d\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f (1D)","41f5fcad":"## 2. \u041b\u043e\u0433\u0456\u0441\u0442\u0438\u0447\u043d\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f (2D)","8bd06232":"### 3. \u041f\u043e\u0431\u0443\u0434\u043e\u0432\u0430 \u043c\u043e\u0434\u0435\u043b\u0456 \u043b\u043e\u0433\u0456\u0441\u0442\u0438\u0447\u043d\u043e\u0457 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457:","7892233d":"\u0412\u0440\u0430\u0445\u043e\u0432\u0443\u044e\u0447\u0438 \u0442\u0435, \u0449\u043e \u0434\u0430\u043d\u0456 \u0440\u0456\u0437\u043d\u0438\u0445 \u043a\u043b\u0430\u0441\u0456\u0432 \u0439\u0434\u0443\u0442\u044c \u043f\u043e \u0447\u0435\u0440\u0437\u0456 (\u043f\u0435\u0440\u0448\u0456 100 - \u0434\u0430\u043d\u0456 \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 0, \u0456\u043d\u0448\u0456 100 - \u0437 \u043c\u0456\u0442\u043a\u043e\u044e 1) \u0433\u0435\u043d\u0435\u0440\u0443\u0454\u043c\u043e \u0442\u0440\u0435\u043d\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0442\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0443 \u0432\u0438\u0431\u0456\u0440\u043a\u0438: ","14a474a4":"### 2. \u041f\u043e\u0434\u0456\u043b \u0434\u0430\u043d\u0438\u0445 \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0443 \u0442\u0430 \u0442\u0440\u0435\u043d\u0443\u0432\u0430\u043b\u044c\u043d\u0443 \u0432\u0438\u0431\u0456\u0440\u043a\u0438:","0f2034c6":"### 4. \u0412\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f:","957b2863":"### 2. \u041f\u043e\u0431\u0443\u0434\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0443 \u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0443\u0441\u043a\u0443 \u0434\u043b\u044f \u0434\u0432\u043e\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 $(a,b)$:\n\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u0437\u043d\u0430\u0439\u0442\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 $a$ \u0442\u0430 $b$, \u0431\u0443\u0434\u0435\u043c\u043e \u043c\u0456\u043d\u0456\u043c\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u0441\u0435\u0440\u0435\u0434\u044c\u043d\u043e \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u0443 \u043f\u043e\u043c\u0438\u043b\u043a\u0443, \u044f\u043a\u0430 \u0434\u043e\u0440\u0456\u0432\u043d\u044e\u0454:\n$$MSE(a,b) = \\sum_{i=i}^{n} \\left( y_i -  ax_i - b \\right)^2$$\n\n\u0429\u043e\u0431, \u043c\u0456\u043d\u0456\u043c\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u043f\u043e\u043c\u0438\u043b\u043a\u0443 - \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u0437\u044f\u0442\u0438 \u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0443 \u043f\u043e\u0445\u0456\u0434\u043d\u0443 \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c $a$ \u0442\u0430 $b$:\n\n$$\\left\\{\\begin{matrix}\n\\frac{\\partial MSE(a,b) }{\\partial a} = 2 \\sum_{i=i}^{n} \\left( y_i -  ax_i - b \\right) \\cdot x_i\n\\\\ \n\\frac{\\partial MSE(a,b) }{\\partial b} = 2 \\sum_{i=i}^{n} \\left( y_i -  ax_i - b \\right) \n\\end{matrix}\\right.$$\n\n\u0417\u0432\u0456\u0434\u043a\u0438 \u043c\u0430\u0454\u043c\u043e: \n$$\\left\\{\\begin{matrix}\n a_{n+1} =  a_n - \\lambda_1 \\cdot \\frac{\\partial MSE(a_n,b_n) }{\\partial a}\n\\\\ \nb_{n+1} = b_n - \\lambda_2\\frac{\\partial MSE(a_n,b_n) }{\\partial b}\n\\end{matrix}\\right.$$\n\n\u0414\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 $\\lambda_1$ \u0442\u0430 $\\lambda_2$ - \u043a\u0440\u043e\u043a\u0438 \u0437\u0431\u0456\u0436\u043d\u043e\u0441\u0442\u0456.","3a16b21b":"\u0414\u043b\u044f \u0442\u043e\u0433\u043e, \u0449\u043e\u0431 \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0438\u0442\u0438 \u043c\u0456\u0442\u043a\u0443 \u043a\u043b\u0430\u0441\u0441\u0443 \u0434\u043b\u044f $x_i \\in \\mathbb{R}^2 $, \u0442\u0440\u0435\u0431\u0430 \u043c\u0456\u043d\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u044e \u0432\u0442\u0440\u0430\u0442, \u044f\u043a\u0430 \u043c\u0430\u0454 \u0432\u0438\u0433\u043b\u044f\u0434: \n$$J(p) = - \\frac{1}{m} \\sum_{i=1}^{m} ( y_ilog(p_i) + (1-y_i)log(1-p_i) )$$\n\n\u0414\u0435, $y_i \\in \\{0,1\\}$, \u0430 $p_i = \\sigma (z_i)$, \u0434\u0435: $$\\sigma(x) = \\frac{1}{1+ e^{-x}},$$ \u0430 $z_i = w^Tx_i+b$.\n\n\u0412\u0435\u043a\u0442\u043e\u0440 \u0432\u0430\u0433\u0456\u0432  $w \\in \\mathbb{R}^2 $ \u0442\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 $b \\in \\mathbb{R}$\n\n\u0429\u043e\u0431, \u043c\u0456\u043d\u0456\u043c\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u043f\u043e\u043c\u0438\u043b\u043a\u0443 - \u043d\u0435\u043e\u0431\u0445\u0456\u0434\u043d\u043e \u0432\u0437\u044f\u0442\u0438 \u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0443 \u043f\u043e\u0445\u0456\u0434\u043d\u0443 \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c $w$ \u0442\u0430 $b$:\n\n$$\\left\\{\\begin{matrix}\n\\frac{\\partial J(p(z(w,b))) }{\\partial w} = -\\frac{1}{m} \\sum_{i=i}^{m}  \\frac{\\partial J }{\\partial p } \\frac{\\partial p }{\\partial z } \\frac{\\partial z }{\\partial w } =  \\frac{1}{m} \\sum_{i=i}^{m} \\frac{p - y_i}{ p(1 - p )} \\cdot p(1 - p)\\cdot x_i = \\frac{1}{m} \\sum_{i=i}^{m} (p - y_i)\\cdot x_i\n\\\\ \n\\frac{\\partial J(p(z(w,b))) }{\\partial b} = -\\frac{1}{m} \\sum_{i=i}^{m}  \\frac{\\partial J }{\\partial p } \\frac{\\partial p }{\\partial z } \\frac{\\partial \\sigma }{\\partial b } = \\frac{1}{m} \\sum_{i=i}^{m} \\frac{p - y_i}{ p(1 - p )} \\cdot p(1 - p)\\cdot 1 = \\frac{1}{m} \\sum_{i=i}^{m} (p - y_i) \n\\end{matrix}\\right.$$\n","d66db065":"### 3. \u041f\u043e\u0440\u0456\u0432\u043d\u044f\u043d\u043d\u044f \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0456\u0432 \u0437 \u0442\u0435\u043e\u0440\u0435\u0442\u0438\u0447\u043d\u0438\u043c\u0438: ","e95b42b2":"### 1. \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f \u0442\u043e\u0447\u043e\u043a $(x,y)$ \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u0457: $y=ax+b+noise$. \u041d\u0435\u0445\u0430\u0439 $a = 2, b = 15$, $noise - \\text{\u0432\u0438\u043f\u0430\u0434\u043a\u043e\u0432\u0435 \u0447\u0438\u0441\u043b\u043e \u0432\u0456\u0434} \\; 0 \\; \\text{\u0434\u043e} \\; 1$ :\n","646261d7":"# \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430 \u21161 \u041c\u0430\u0437\u0443\u0440 \u0410. \u0424\u0406-12\u043c\u043d\n\n**1. \u041b\u0456\u043d\u0456\u0439\u043d\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f (1D)**\n\n\u0417\u0433\u0435\u043d\u0435\u0440\u0443\u0439\u0442\u0435 \u0441\u0438\u043d\u0442\u0435\u0442\u0438\u0447\u043d\u0438\u0439 \u043d\u0430\u0431\u0456\u0440 \u0442\u043e\u0447\u043e\u043a \u0432\u0438\u0434\u0443 y = ax + b + noise. \u0412\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0443\u0439\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e $(matplotlib)$. \u0412\u0438\u0440\u0456\u0448\u0456\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u043b\u0456\u043d\u0456\u0439\u043d\u043e\u0457 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457 \u0434\u043b\u044f \u0442\u0430\u043a\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0443 \u0442\u043e\u0447\u043e\u043a. \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u043c\u043e\u0434\u0435\u043b\u0456 \u0437\u043d\u0430\u0439\u0434\u0456\u0442\u044c \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u0433\u0440\u0430\u0434\u0456\u0454\u043d\u0442\u043d\u043e\u0433\u043e \u0441\u043f\u0443\u0441\u043a\u0443. \u041f\u043e\u0440\u0456\u0432\u043d\u044f\u0439\u0442\u0435 \u0437\u043d\u0430\u0439\u0434\u0435\u043d\u0456 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438 \u0456\u0437 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f\u043c\u0438 $(a, b)$.\n\n**2. \u041b\u043e\u0433\u0456\u0441\u0442\u0438\u0447\u043d\u0430 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u044f (2D)**\n\n\u0417\u0433\u0435\u043d\u0435\u0440\u0443\u0439\u0442\u0435 \u0434\u0432\u0430 \u0441\u0438\u043d\u0442\u0435\u0442\u0438\u0447\u043d\u0438\u0445 \u043d\u0430\u0431\u043e\u0440\u0438 \u0442\u043e\u0447\u043e\u043a \u043d\u0430 \u043f\u043b\u043e\u0449\u0438\u043d\u0456, \u0434\u043e\u0434\u0430\u0439\u0442\u0435 \u0456\u043c \u043c\u0456\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0456\u0432 ($0$ \u0456 $1$). \u0412\u0456\u0437\u0443\u0430\u043b\u0456\u0437\u0443\u0439\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e $(matplotlib)$. \u0420\u043e\u0437\u0434\u0456\u043b\u0456\u0442\u044c \u0434\u0430\u043d\u0456 \u043d\u0430 \u043a\u043b\u0430\u0441\u0438 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043b\u043e\u0433\u0456\u0441\u0442\u0438\u0447\u043d\u043e\u0457 \u0440\u0435\u0433\u0440\u0435\u0441\u0456\u0457. \u041f\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u044f\u043a\u0456\u0441\u0442\u044c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043c\u0435\u0442\u0440\u0438\u043a\u0438 accuracy (\u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u0438\u0445 \u0434\u0430\u043d\u0438\u0445).","54da1e2d":"### 1. \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0456\u044f 2 \u043d\u0430\u0431\u043e\u0440\u0456\u0432 \u0441\u0438\u043d\u0442\u0435\u0442\u0438\u0447\u043d\u0438\u0445 \u0442\u043e\u0447\u043e\u043a $(x,y)$ \u0437 \u043c\u0456\u0442\u043a\u0430\u043c\u0438 $0$ \u0442\u0430 $1$: "}}