{"cell_type":{"52826962":"code","d693999e":"code","b43f16e4":"code","2f820721":"code","927d9e3d":"code","f976c6ba":"code","8b121041":"code","50f135d8":"code","ac67ce97":"code","833ef3f7":"code","3c5801bf":"code","f13cd087":"code","b8e48e99":"code","cbe426b4":"code","46394dd2":"code","c62cfe1c":"code","2ac0302b":"code","34dcf8ef":"code","8f435111":"markdown","74ab0b8f":"markdown","c462b05e":"markdown","7b6437e1":"markdown","f7eca674":"markdown","a2138601":"markdown","3ce84cf6":"markdown","f3b5f4b2":"markdown","3ccc9714":"markdown","73b5af47":"markdown"},"source":{"52826962":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","d693999e":"dataset = pd.read_csv('\/kaggle\/input\/creditcardfraud\/creditcard.csv')","b43f16e4":"# Let's check out the data\ndataset.head()","2f820721":"dataset.info()","927d9e3d":"# Create independent and dependent features\nX = dataset.drop('Class', axis = 1)\ny = dataset['Class']","f976c6ba":"print(X.shape)\nprint(y.shape)","8b121041":"# Let's check for null values\ndataset.isnull().values.any()","50f135d8":"# Plot the count of imbalanced classes \nclass_counts = pd.value_counts(dataset['Class'])\n\nclass_counts.plot.bar(rot = 0)   ## This rot = 0 stops the rotation of the xticks\n\nplt.title(\"Transaction Class Distribution\")\nplt.xticks(range(2), ['Normal','Fraud'])\nplt.xlabel(\"Class\")\nplt.ylabel(\"Frequency\")","ac67ce97":"# Get the fraud and normal data\nfraud = dataset[dataset['Class'] == 0]\nnormal = dataset[dataset['Class'] == 1]","833ef3f7":"print(fraud.shape)\nprint(normal.shape)","3c5801bf":"# Import the library to do undersampling\nfrom imblearn.under_sampling import NearMiss ","f13cd087":"# Implementing undersampling for handling imbalanced classes\nnm = NearMiss()\nX_res,y_res=nm.fit_sample(X,y)","b8e48e99":"print(X_res.shape)\nprint(y_res.shape)","cbe426b4":"from collections import Counter\nprint(f\"Original data shape : {Counter(y)}\")\nprint(f\"Resampled data shape : {Counter(y_res)} \")","46394dd2":"from imblearn.combine import SMOTETomek","c62cfe1c":"# Implementing oversampling to handle imbalanced classes\nsmk = SMOTETomek(random_state = 42)\nX_res,y_res=smk.fit_sample(X,y)","2ac0302b":"print(X_res.shape)\nprint(y_res.shape)","34dcf8ef":"print(f\"Original data shape : {Counter(y)}\")\nprint(f\"Resampled data shape : {Counter(y_res)} \")","8f435111":"## Importing necessary libraries","74ab0b8f":"So, as you can see clearly this whole data is really messed up i.e. it is unbalanced","c462b05e":"To read more about sampling techniques, visit the below link \n\nhttps:\/\/imbalanced-learn.readthedocs.io\/en\/stable\/generated\/imblearn.combine.SMOTETomek.html","7b6437e1":"\nSo, clearly our dataset has 31 columns including target variable and 284807 rows","f7eca674":"### Oversampling","a2138601":"## Welcome all to my notebook\n##### Here I will show how to handle imbalanced datasets. Basically imbalanced datasets are those datasets in which the there are a more no. of records for a one class as compare to other class ( Say 80-20).\n\n#### Clearly there are two ways of handling imbalanced datasets :\n#### 1. Undersampling which consists in down-sizing the majority class by removing observations until         the dataset is balanced\n#### 2. Oversampling which consists in over-sizing the minority class by adding observations\n","3ce84cf6":"### If you liked this notebook then give an upvote and if you want to suggest something then suggestions are open.","f3b5f4b2":"## Let's perform undersampling and oversampling on this data","3ccc9714":"## Exploratory Data Analysis","73b5af47":"### Undersampling"}}