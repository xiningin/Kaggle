{"cell_type":{"46db507d":"code","888f6290":"code","144df62c":"code","f588a83f":"code","2ed9d97d":"code","80fb51cb":"code","83893b44":"code","12d614f7":"code","77cff64a":"code","e528ba11":"code","0c7d0c77":"code","995ec947":"code","dbbe2eb5":"code","6ce55881":"code","5a4a055d":"code","e94969ad":"code","0107255a":"code","06e475ff":"code","b9cabece":"code","d7b175aa":"code","7fa1f497":"code","dbe9994f":"code","c599531f":"code","2c9e69a8":"code","2e8f2895":"code","d4555680":"code","6ee1389f":"code","85c31928":"code","3ca68d2c":"code","085a292d":"markdown","4ea70792":"markdown","723fc1dd":"markdown","f0a8afa7":"markdown","30afdda3":"markdown","b0210761":"markdown","00a1ec38":"markdown","2c835793":"markdown","903bb3ef":"markdown","3a89bdb1":"markdown"},"source":{"46db507d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","888f6290":"import matplotlib.pyplot as plt\nimport tensorflow as tf\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler","144df62c":"import warnings \nwarnings.filterwarnings('ignore')","f588a83f":"df = pd.read_csv('\/kaggle\/input\/glass\/glass.csv')","2ed9d97d":"df.head()","80fb51cb":"df.shape","83893b44":"df.info()","12d614f7":"df.describe().T","77cff64a":"df.isna().sum()","e528ba11":"i = 1\nplt.figure(figsize=(20,15))\nfor x in df.columns:\n  plt.subplot(4,4,i)\n  plt.title(x)\n  sns.distplot(df[x])\n  i+=1","0c7d0c77":"X = df.drop('Type',axis=1)\nX = np.cbrt(X) # Cube root transformation to handle skewness","995ec947":"Y = df.Type","dbbe2eb5":"X","6ce55881":"Y.value_counts()","5a4a055d":"Y = Y.map({1:0,2:1,3:2,5:3,6:4,7:5})","e94969ad":"X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state=1,stratify=Y)","0107255a":"ss = StandardScaler()\nX_train_ss = ss.fit_transform(X_train)\nX_test_ss = ss.transform(X_test)","06e475ff":"X.shape[1]","b9cabece":"Y.value_counts()","d7b175aa":"X_test_ss.shape","7fa1f497":"y_train.value_counts()","dbe9994f":"y_test.value_counts()","c599531f":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout","2c9e69a8":"model = Sequential()\nmodel.add(Dense(45, activation=\"relu\", input_dim=9))\nmodel.add(Dense(30, activation=\"relu\"))\nmodel.add(Dense(25, activation=\"relu\"))\nmodel.add(Dense(22, activation=\"relu\"))\nmodel.add(Dense(18, activation=\"relu\"))\nmodel.add(Dense(15, activation=\"relu\"))\nmodel.add(Dense(10, activation=\"relu\"))\nmodel.add(Dense(8, activation=\"relu\"))\nmodel.add(Dense(6, activation=\"softmax\")) ","2e8f2895":"model.compile(optimizer=\"adam\", loss=\"sparse_categorical_crossentropy\")","d4555680":"model.fit(X_train_ss,y_train,epochs=300, batch_size=2)","6ee1389f":"y_pred = model.predict(X_test_ss)","85c31928":"y_pred = y_pred.argmax(axis=1)","3ca68d2c":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","085a292d":"# Scaling","4ea70792":"# Data Inspection","723fc1dd":"# Label Encoding Y","f0a8afa7":"# CHecking Skweness","30afdda3":"# Import Libraries","b0210761":"# Checking Null Values","00a1ec38":"# Read data","2c835793":"# Neural Network","903bb3ef":"# Do upvote if you liked it.","3a89bdb1":"# Create X and Y"}}