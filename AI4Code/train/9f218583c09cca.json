{"cell_type":{"bf14a2f1":"code","21e962aa":"code","bd2bac73":"code","56fe9a45":"code","f4e63aa4":"code","f6e829dd":"code","2b8a2727":"code","1b4f6f28":"code","d413f2da":"code","3e192113":"code","4898b26e":"code","f0b7af5f":"code","4a553f83":"code","375f1e90":"code","2a4bc6b3":"code","a275b11d":"code","79a52be7":"code","e79b6f12":"code","ae4d858b":"code","2f53f205":"code","c46710be":"code","daa0007b":"code","2f55bf5b":"code","d9c750a4":"code","75b3319d":"code","ba7a6b08":"code","e7c0b8f7":"code","64236fb6":"code","b30b363c":"code","7d18dbbd":"code","67e23f4b":"code","d99d9931":"code","336da8bf":"code","3d29448f":"code","172166cf":"code","a443ebea":"markdown","0a7ac0f1":"markdown","058b05ad":"markdown","b1003558":"markdown","d7613031":"markdown","6a9ba80b":"markdown","a00a278e":"markdown"},"source":{"bf14a2f1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","21e962aa":"# Loading Training Dataset and Test Dataset\ntrain_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/test.csv\")","bd2bac73":"train_df.head()","56fe9a45":"# Some NaN values in Age column, Cabin nearly useless (too many NaNs)\ntrain_df.info()","f4e63aa4":"train_df.describe()","f6e829dd":"# Number of Males and Females on the board\nsns.countplot(x=\"Sex\", data=train_df, palette=\"pastel\")","2b8a2727":"# Did they survived? With distinction between males and females\nsns.countplot(x=\"Survived\", hue=\"Sex\", data=train_df, palette=\"pastel\")","1b4f6f28":"# Distributions of Ages - dropped NaNs\nsns.distplot(train_df[\"Age\"].dropna(), kde=False, bins=20, color=\"red\")","d413f2da":"# Most people Embarked in?\nsns.countplot(x=\"Embarked\", data=train_df, palette=\"pastel\")","3e192113":"# Distribution between classes\nsns.countplot(x=\"Pclass\", data=train_df, palette=\"pastel\")","4898b26e":"train_df.head()","f0b7af5f":"# Preparing Training dataset - Dropping ID, Name, Ticket, Cabin\ntrain_df.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\"], axis=1, inplace=True)","4a553f83":"train_df.head()","375f1e90":"# Dummy Pclass\npclass_dummy = pd.get_dummies(train_df[\"Pclass\"], drop_first=True)\npclass_dummy.head()","2a4bc6b3":"# Dummy Sex\nsex_dummy = pd.get_dummies(train_df[\"Sex\"], drop_first=True)\nsex_dummy.head()","a275b11d":"# Dummy Embark\nembarked_dummy = pd.get_dummies(train_df[\"Embarked\"], drop_first=True)\nembarked_dummy.head()","79a52be7":"train_df.head()","e79b6f12":"# Dropping original Pclass, Sex, Embarked columns\ntrain_df.drop([\"Pclass\", \"Sex\", \"Embarked\"],axis=1, inplace=True)","ae4d858b":"# Concatenating rest of dataset with newly created dummy variables\ntrain_df = pd.concat([train_df, pclass_dummy, sex_dummy, embarked_dummy], axis=1)","2f53f205":"train_df.head()","c46710be":"# Replacing NaNs with mean of whole Age column\ndef age_nan(age_number):\n    if np.isnan(age_number):\n        return round(np.mean(train_df[\"Age\"]))\n    else:\n        return age_number\n\nage_none_nan = train_df[\"Age\"].apply(age_nan)","daa0007b":"# Rewriting old Age column with Age Series with no NaN values\ntrain_df[\"Age\"] = age_none_nan","2f55bf5b":"# Splitting data into Dependent Variables and Independent Variable\ny_train = train_df[\"Survived\"]\nX_train = train_df[train_df.columns[1:]]","d9c750a4":"# Fitting LogisticRegression on Training dataset\nfrom sklearn.linear_model import LogisticRegression\n\nclassifier = LogisticRegression()\nclassifier.fit(X_train, y_train)","75b3319d":"test_df.head()","ba7a6b08":"# Dropping columns - PassengerId, Name, Ticket, Cabin\ntest_df.drop([\"PassengerId\", \"Name\", \"Ticket\", \"Cabin\"], axis=1, inplace=True)\ntest_df.head()","e7c0b8f7":"# Dummy variables - Pclass, Sex, Embarked\ndummy_pclass = pd.get_dummies(test_df[\"Pclass\"], drop_first=True)\ndummy_sex = pd.get_dummies(test_df[\"Sex\"], drop_first=True)\ndummy_embarked = pd.get_dummies(test_df[\"Embarked\"], drop_first=True)","64236fb6":"# Dropping old columns\ntest_df.drop([\"Pclass\", \"Sex\", \"Embarked\"], axis=1, inplace=True)","b30b363c":"# Concatenating rest of dataset with newly created dummy variables\ntest_df = pd.concat([test_df, dummy_embarked, dummy_pclass, dummy_sex], axis=1)","7d18dbbd":"test_df.head()","67e23f4b":"# Removing NaN and replacing with mean of Age column\ndef age_nan(age_number):\n    if np.isnan(age_number):\n        return round(np.mean(test_df[\"Age\"]))\n    else:\n        return age_number\n\nage_none_nan = test_df[\"Age\"].apply(age_nan)\ntest_df[\"Age\"] = age_none_nan","d99d9931":"# Removing NaN and replacing with mean of Fare column\ndef fare_nan(fare_number):\n    if np.isnan(fare_number):\n        return round(np.mean(test_df[\"Fare\"]))\n    else:\n        return fare_number\n\nfare_none_nan = test_df[\"Fare\"].apply(fare_nan)\ntest_df[\"Fare\"] = fare_none_nan","336da8bf":"# Test for other NaN values in Dataframe\ntest_df.isna().any()","3d29448f":"# Make predictions from our model\ny_pred = classifier.predict(test_df)","172166cf":"# Graphic results, if passengers from test_df would be dead or not\nsns.countplot(y_pred)","a443ebea":"#### Part 1 - Exploring the data, visualizations, choosing right model","0a7ac0f1":"##  Welcome to Titanic Disaster - we will explore that a bit","058b05ad":"In this part I am going to explore the data, make some graphs, see some correlations among independent variables, choosing right model for Classification and so on.\n\nFeatures:\n- PassengerId - ID of passenger\n- Survived - 0 dead, 1 alive - (dependent variable)\n- Pclass - class in which were passengers - 1st best, 3rd worst\n- Name - clear enough\n- Sex - clear enough\n- SibSp - Amount of siblings or spouses\n- Parch - Amount of parents or children\n- Ticket - Name\/ID of passenger's ticket\n- Fare - Ticket price\n- Cabin - Name of cabin\n- Embarked - City of embarkation - (C = Cherbourg, Q = Queenstown, S = Southampton)","b1003558":"- Prediction target - pretty obvious - Survived column\n- Predictors - Pclass, Sex, Age, SibSp, Parch, Fare, Embarked\n- Handling missing values - Inject mean of Age column to every NaN, Cabin column will be dropped\n- Dummy variables - Sex, Pclass, Embarked","d7613031":"## Graph section","6a9ba80b":"#### Part 2 - Choosing prediction target, choosing predictors, handling missing values, dummy variables, etc.","a00a278e":"### I would be pleased if you would give me some feedback :) "}}