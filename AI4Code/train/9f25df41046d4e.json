{"cell_type":{"ebac3e31":"code","385126e7":"code","20334140":"code","0234b06c":"code","88e89b14":"code","152b7c90":"code","9fd604b5":"code","71e3cce9":"code","ce8bf61f":"code","cf9d764b":"code","2260ed02":"code","ca741c30":"code","f75c9326":"code","702e2448":"code","a8eb9ad5":"code","19177ea2":"code","11a77dc0":"code","46cf450e":"code","52e0cafa":"code","bea0594d":"code","3f079407":"code","414ec9a1":"code","b1289a43":"code","7e65ea7d":"code","ced93bd0":"code","5dad492d":"code","f3657dd5":"code","8c5788d5":"code","bfc6a1b7":"code","85799fe7":"code","52fb088e":"markdown","f84e1cb8":"markdown","7e41cf5b":"markdown","444c9063":"markdown","ad5757cf":"markdown","89528e14":"markdown","efba3685":"markdown","f915269c":"markdown","f52fb38b":"markdown","aaa368b1":"markdown","88df8bb1":"markdown","4f2336e9":"markdown","1922d610":"markdown","654e2c95":"markdown","894b7af4":"markdown","ae218bca":"markdown","ee6d69de":"markdown","b5a31148":"markdown","9438c636":"markdown","05371dd0":"markdown","175491b8":"markdown","2ade8bb0":"markdown","512d2795":"markdown","4c6d86c0":"markdown","c126dc32":"markdown","1da9c209":"markdown","74c5daf4":"markdown","ad0b4236":"markdown","4e46e4b4":"markdown","d4a7b91d":"markdown","b1bb96da":"markdown","c1350b51":"markdown","6e27fcbc":"markdown"},"source":{"ebac3e31":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('white')\n\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","385126e7":"# Downloading pyspark library\n! pip install pyspark","20334140":"# Importing pyspark libraries\nimport pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.conf import SparkConf\nfrom pyspark import SparkContext\n\n# Configuration of Spark Session\nspark = SparkSession.builder.master(\"local\").appName(\"wind_turbine_project\").getOrCreate()\nsc = spark.sparkContext\nsc","0234b06c":"# Reading the dataset as Spark DataFrame\nspark_df = spark.read.csv('..\/input\/wind-turbine-scada-dataset\/T1.csv', header=True, inferSchema=True)\n\n# Caching the dataset\nspark_df.cache()\n\n# Converting all the column names to lower case\nspark_df = spark_df.toDF(*[c.lower() for c in spark_df.columns])\n\nprint('Show the first 5 rows')\nprint(spark_df.show(5))\nprint()\nprint('What are the variable data types?')\nprint(spark_df.printSchema())\nprint()\nprint('How many observations do we have?')\nprint(spark_df.count())","88e89b14":"# Extracting a substring from columns to create month and hour variables\n\nfrom pyspark.sql.functions import substring\nspark_df = spark_df.withColumn(\"month\", substring(\"date\/time\", 4,2))\nspark_df = spark_df.withColumn(\"hour\", substring(\"date\/time\", 12,2))\n\n# Converting string month and hour variables to integer\nfrom pyspark.sql.types import IntegerType\nspark_df = spark_df.withColumn('month', spark_df.month.cast(IntegerType()))\nspark_df = spark_df.withColumn('hour', spark_df.hour.cast(IntegerType()))\n\nprint(spark_df.show(5))","152b7c90":"pd.options.display.float_format = '{:.2f}'.format\nspark_df.select('wind speed (m\/s)', 'theoretical_power_curve (kwh)', 'lv activepower (kw)').toPandas().describe()","9fd604b5":"# Taking a random sample from the big data\nsample_df = spark_df.sample(withReplacement=False, fraction=0.1, seed=42).toPandas()\n\n# Visualizing the distributions with the sample data\ncolumns = ['wind speed (m\/s)', 'wind direction (\u00b0)', 'month', 'hour', 'theoretical_power_curve (kwh)', 'lv activepower (kw)']\ni=1\nplt.figure(figsize=(10,12))\nfor each in columns:\n    plt.subplot(3,2,i)\n    sample_df[each].plot.hist(bins=12)\n    plt.title(each)\n    i += 1","71e3cce9":"# Average power production by month\nmonthly = spark_df.groupby('month').mean('lv activepower (kw)').sort('avg(lv activepower (kw))').toPandas()\nsns.barplot(x='month', y='avg(lv activepower (kw))', data=monthly)\nplt.title('Months and Average Power Production');","ce8bf61f":"# Average power production by hour\nhourly = spark_df.groupby('hour').mean('lv activepower (kw)').sort('avg(lv activepower (kw))').toPandas()\nsns.barplot(x='hour', y='avg(lv activepower (kw))', data=hourly)\nplt.title('Hours and Average Power Production');","cf9d764b":"display(sample_df[columns].corr())\nsns.pairplot(sample_df[columns], markers='*');","2260ed02":"# Finding average power production for 5 m\/s wind speed increments\nwind_speed = []\navg_power = []\nfor i in [0,5,10,15,20]:\n    avg_value = spark_df.filter((spark_df['wind speed (m\/s)'] > i) \n                                & (spark_df['wind speed (m\/s)'] <= i+5))\\\n                                .agg({'lv activepower (kw)':'mean'}).collect()[0][0] \n    avg_power.append(avg_value)\n    wind_speed.append(str(i) + '-' + str(i+5))\n\nsns.barplot(x=wind_speed, y=avg_power, color='orange')\nplt.title('Avg Power Production for 5 m\/s Wind Speed Increments')\nplt.xlabel('Wind Speed')\nplt.ylabel('Average Power Production');","ca741c30":"# Creating the polar diagram\nfrom math import radians\n\nplt.figure(figsize=(8,8))\nax = plt.subplot(111, polar=True)\n# Inside circles are the wind speed and marker color and size represents the amount of power production\nsns.scatterplot(x=[radians(x) for x in sample_df['wind direction (\u00b0)']], \n                y=sample_df['wind speed (m\/s)'],\n                size=sample_df['lv activepower (kw)'],\n                hue=sample_df['lv activepower (kw)'],\n                alpha=0.7, legend=None)\n# Setting the polar diagram's top represents the North \nax.set_theta_zero_location('N')\n# Setting -1 to start the wind direction clockwise\nax.set_theta_direction(-1)\n# Setting wind speed labels in a better position to see\nax.set_rlabel_position(110)\nplt.title('Wind Speed - Wind Direction - Power Production Diagram')\nplt.ylabel(None);","f75c9326":"plt.figure(figsize=(10,6))\nsns.scatterplot(x='wind speed (m\/s)', y='lv activepower (kw)', color='orange', label='Real Production', alpha=0.5, data=sample_df)\nsns.lineplot(x='wind speed (m\/s)', y='theoretical_power_curve (kwh)', color='blue', label='Theoritical Production', data=sample_df)\nplt.title('Wind Speed and Power Production Chart')\nplt.ylabel('Power Production (kw)');","702e2448":"# Filter the big data where the real and theoritical power productions are equal to 0\nzero_theo_power = spark_df.filter((spark_df['lv activepower (kw)'] == 0)\n                                  & (spark_df['theoretical_power_curve (kwh)'] == 0)).toPandas()\n\ndisplay(zero_theo_power[['wind speed (m\/s)', 'theoretical_power_curve (kwh)', 'lv activepower (kw)']].sample(5))\n\n# Let's see the wind speed distribution for 0 power production\nzero_theo_power['wind speed (m\/s)'].hist()\nplt.title('Wind Speed Distribution for 0 Power Production')\nplt.xlabel('Wind speed (m\/s)')\nplt.ylabel('Counts for 0 Power Production');","a8eb9ad5":"# Observations for the wind speed > 3m\/s and power production = 0, \n# While theoritically there should be power production\nzero_power = spark_df.filter((spark_df['lv activepower (kw)'] == 0)\n                            & (spark_df['theoretical_power_curve (kwh)'] != 0)\n                            & (spark_df['wind speed (m\/s)'] > 3)).toPandas()\ndisplay(zero_power.head())\nprint('No of Observations (while Wind Speed > 3 m\/s and Power Production = 0): ', len(zero_power))","19177ea2":"zero_power['wind speed (m\/s)'].plot.hist(bins=8)\nplt.xlabel('Wind Speed (m\/s)')\nplt.ylabel('Counts for Zero Production')\nplt.title('Wind Speed Counts for Zero Power Production')\nplt.xticks(ticks=np.arange(4,18,2));","11a77dc0":"sns.countplot(zero_power['month']);","46cf450e":"# Excluding the observations meeting the filter criterias \nspark_df = spark_df.filter(~((spark_df['lv activepower (kw)'] == 0)\n                            & (spark_df['theoretical_power_curve (kwh)'] != 0)\n                            & (spark_df['wind speed (m\/s)'] > 3)))","52e0cafa":"columns = ['wind speed (m\/s)', 'wind direction (\u00b0)', 'theoretical_power_curve (kwh)', 'lv activepower (kw)']\ni=1\nplt.figure(figsize=(20,3))\nfor each in columns:\n    df = spark_df.select(each).toPandas()\n    plt.subplot(1,4,i)\n    sns.boxplot(df)\n    plt.title(each)\n    i += 1","bea0594d":"# Create a pandas df for visualization\nwind_speed = spark_df.select('wind speed (m\/s)').toPandas()\n\n# Defining the quantiles and interquantile range\nQ1 = wind_speed['wind speed (m\/s)'].quantile(0.25)\nQ3 = wind_speed['wind speed (m\/s)'].quantile(0.75)\nIQR = Q3-Q1\n# Defining the lower and upper threshold values\nlower = Q1 - 1.5*IQR\nupper = Q3 + 1.5*IQR\n\nprint('Quantile (0.25): ', Q1, '  Quantile (0.75): ', Q3)\nprint('Lower threshold: ', lower, ' Upper threshold: ', upper)","3f079407":"# Fancy indexing for outliers\noutlier_tf = (wind_speed['wind speed (m\/s)'] < lower) | (wind_speed['wind speed (m\/s)'] > upper)\n\nprint('Total Number of Outliers: ', len(wind_speed['wind speed (m\/s)'][outlier_tf]))\nprint('--'*15)\nprint('Some Examples of Outliers:')\nprint(wind_speed['wind speed (m\/s)'][outlier_tf].sample(10))","414ec9a1":"spark_df.select('wind speed (m\/s)', 'lv activepower (kw)')\\\n.filter(spark_df['wind speed (m\/s)'] >= 19)\\\n.agg({'lv activepower (kw)':'mean'}).show()","b1289a43":"from pyspark.sql import functions as F\nspark_df = spark_df.withColumn('wind speed (m\/s)', \n                               F.when(F.col('wind speed (m\/s)') > 19.447, 19)\n                               .otherwise(F.col('wind speed (m\/s)')))\nspark_df.count()","7e65ea7d":"# High level power production\nspark_df.filter(((spark_df['month'] == 3) | (spark_df['month'] == 8) | (spark_df['month'] == 11)) \n                & ((spark_df['hour'] >= 16) | (spark_df['hour'] <= 24)) \n                & ((spark_df['wind direction (\u00b0)'] > 0) | (spark_df['wind direction (\u00b0)'] < 90))\n                & ((spark_df['wind direction (\u00b0)'] > 180) | (spark_df['wind direction (\u00b0)'] < 225))\n               ).agg({'lv activepower (kw)':'mean'}).show()","ced93bd0":"# Low level power production\nspark_df.filter((spark_df['month'] == 7) \n                & ((spark_df['hour'] >= 9) | (spark_df['hour'] <= 11)) \n                & ((spark_df['wind direction (\u00b0)'] > 90) | (spark_df['wind direction (\u00b0)'] < 160))\n               ).agg({'lv activepower (kw)':'mean'}).show()","5dad492d":"# Preparing the independent variables (Features)\nfrom pyspark.ml.feature import VectorAssembler\n\n# Converting lv activepower (kw) variable as label\nspark_df = spark_df.withColumn('label', spark_df['lv activepower (kw)'])\n\n# Defining the variables to be used\nvariables = ['month', 'hour', 'wind speed (m\/s)', 'wind direction (\u00b0)']\nvectorAssembler = VectorAssembler(inputCols = variables, outputCol = 'features')\nva_df = vectorAssembler.transform(spark_df)\n\n# Combining features and label column\nfinal_df = va_df.select('features', 'label')\nfinal_df.show(10)","f3657dd5":"splits = final_df.randomSplit([0.8, 0.2])\ntrain_df = splits[0]\ntest_df = splits[1]\n\nprint('Train dataset: ', train_df.count())\nprint('Test dataset : ', test_df.count())","8c5788d5":"from pyspark.ml.regression import GBTRegressor\n\n# Creating the gbm regressor object\ngbm = GBTRegressor(featuresCol='features', labelCol='label')\n\n# Training the model with train data\ngbm_model = gbm.fit(train_df)\n\n# Predicting using the test data\ny_pred = gbm_model.transform(test_df)\n\n# Initial look at the target and predicted values\ny_pred.select('label', 'prediction').show(20)","bfc6a1b7":"# Initial model success\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\nevaluator = RegressionEvaluator(predictionCol='prediction', labelCol='label')\n\nprint('R2 SCORE : ', evaluator.evaluate(y_pred, {evaluator.metricName: 'r2'}))\nprint('MAE      : ', evaluator.evaluate(y_pred, {evaluator.metricName: 'mae'}))\nprint('RMSE     : ', evaluator.evaluate(y_pred, {evaluator.metricName: 'rmse'}))","85799fe7":"# Converting sample_df back to Spark dataframe\neva_df = spark.createDataFrame(sample_df)\n\n# Converting lv activepower (kw) variable as label\neva_df = eva_df.withColumn('label', eva_df['lv activepower (kw)'])\n\n# Defining the variables to be used\nvariables = ['month', 'hour', 'wind speed (m\/s)', 'wind direction (\u00b0)']\nvectorAssembler = VectorAssembler(inputCols = variables, outputCol = 'features')\nvec_df = vectorAssembler.transform(eva_df)\n\n# Combining features and label column\nvec_df = vec_df.select('features', 'label')\n\n# Using ML model to predict\npreds = gbm_model.transform(vec_df)\npreds_df = preds.select('label','prediction').toPandas()\n\n# Compining dataframes to compare\nframes = [sample_df[['wind speed (m\/s)', 'theoretical_power_curve (kwh)']], preds_df]\nsample_data = pd.concat(frames, axis=1)\n\n# Visualizing real, theoritical and predicted power production\nplt.figure(figsize=(10,7))\nsns.scatterplot(x='wind speed (m\/s)', y='label',alpha=0.5, label= 'Real Power', data=sample_data)\nsns.scatterplot(x='wind speed (m\/s)', y='prediction', alpha=0.7, label='Predicted Power', marker='o', data=sample_data)\nsns.lineplot(x='wind speed (m\/s)', y='theoretical_power_curve (kwh)', label='Theoritical Power',color='purple', data=sample_data)\nplt.title('Wind Turbine Power Production Prediction')\nplt.ylabel('Power Production (kw)')\nplt.legend();","52fb088e":"### Question: Does the manufacturer's theoritical power production curve fit well with the real production?","f84e1cb8":"### Question: What are the distributions of the variables?\n\n**For creating visualization we need to either use aggregated data or use a sample from the big data.**\n\n**So I will get a random sample from my big data.**","7e41cf5b":"### Question: What are the general criterias for power production?\n\n**It is important to understand the pattern in the data. We should learn the data before the machine.**\n\n**1. We saw from the graph that in March, August and November, the average power production is higher.**\n\n**2. The average power production is higher daily between 16:00 and 24:00.**\n\n**3. The power production is higher when the wind blows from the directions between 000-090 and 180-225 degrees.**\n\n**So let's try to predict a high and low level of power production from the criterias above before ML algorithm.**","444c9063":"### Question: Is there any other outliers?","ad5757cf":"# Wind Turbine Power Prediction\n\nIn this study I am going to predict a wind turbine power production by using the wind speed, wind direction, month and hour data.\n\nThe dataset consists of 50530 observations. In order to demonstrate my data science skills with big data, I am going to use Pyspark library.\n\nThe dataset contains:\n\n* Date\/Time (for 10 minutes intervals)\n* LV ActivePower (kW): The power generated by the turbine for that moment\n* Wind Speed (m\/s): The wind speed at the hub height of the turbine (the wind speed that turbine use for electricity generation)\n* TheoreticalPowerCurve (KWh): The theoretical power values that the turbine generates with that wind speed which is given by the turbine manufacturer\n* Wind Direction (\u00b0): The wind direction at the hub height of the turbine (wind turbines turn to this direction automaticly)\n\nTo see my Tableau dashboard:\n\nhttps:\/\/public.tableau.com\/views\/WindTurbineProject\/Dashboard1?:language=en&:display_count=y&:origin=viz_share_link\n\nDataset Resource: \n\nhttps:\/\/www.kaggle.com\/berkerisen\/wind-turbine-scada-dataset\n","89528e14":"## Exploratory Data Analysis","efba3685":"**From the graphs above I can see there are some outliers in the wind speed data.**\n\n**I will find the upper and lower threshold values for the wind speed data, and I will analyze the outliers.**","f915269c":"**We can see that the wind turbine produces more power if the wind blows from the directions between 000-090 and 180-225 degrees.**","f52fb38b":"### Question: What is the power production for different wind directions and speeds? \n\n**Let's create a polar diagram with wind speed, wind direction and power production from the sample data.**","aaa368b1":"**We can see from above, limit for the theoritical power curve is 3 m\/s wind speed. If the wind speed is below 3 m\/s model doesn't expect any power production.**\n\n**But there are some observations for 0 power production even the wind speed is more than 3 m\/s.**\n\n### Question: Why there aren't any power production in some observations while the wind speed is higher than 3 m\/s?","88df8bb1":"**R2 score means, real power production's 97% variability can be explained by the ML model.**\n\n**MAE is the mean absolute difference between the real and predicted power production.**\n\n**RMSE is the square root of mean squared difference between the real and predicted values.**\n\n**Even though the R2 is high, we should also check the MAE and RMSE values with the real value's summary statistics.**\n\n**One can tune the hyperparameters to increase the model success. But I this look good enough for me.**","4f2336e9":"**From the graph above, we can see the theoritical power production curve generally fits well with the real production.**\n\n**We can see the power production reaches a maximum level and continues in a straight line if the wind speed reaches to 15 m\/s.**\n\n**Also we can see there are some 0 power production, even the wind speed is higher than 5 m\/s. I want to investigate the reason.**\n\n**But before what is the minimum wind speed for theoritical power production curve?**\n\n### Question: What is the wind speed threshold value for zero theorical power?","1922d610":"**From the graph above we can see the power production reaches near a maximum level after the wind speed reaches 15 m\/s.**","654e2c95":"**So instead of erasing the outliers, I am going to set the wind speed as 19 m\/s for those observations.**","894b7af4":"### Question: Is there any difference between the months for average power production ?","ae218bca":"**There are 3497 observations where theoritically there should be power production. From the dataset we cannot see the reason, it might be caused by maintenance. But let's see if we can see any information from the wind speed, direction and month?**","ee6d69de":"## Reading the Dataset","b5a31148":"## Comparing Real, Theoritical and Predicted Power Productions","9438c636":"## Train Test Split\n\n**Now we can split our dataset into train and test datasets.**","05371dd0":"## Creating the Initial Model\n\n**I am going to use GBT regressor for this study.**","175491b8":"## Data Preparation for ML Algorithms\n\n**After analysing and understanding the dataset, we can build a ML regression model to predict wind turbine power production by using the wind speed, wind direction, month of the year and hour of the day.**\n\n**Using ML algorithms with Spark is a bit different from well known Sckitlearn library.**\n\n**We need to feed the model with a dataframe made of variables compressed in vectors called as 'features', and target variable as 'label'. For these convertions I am going to use VectorAssembler method from Pyspark.**","2ade8bb0":"**It is usually in December and January when the wind turbine doesn't produce production.**\n\n**Because I cannot decide if these zero power productions are caused by maintenance periods or something else, I am going to accept those 3497 observations as outliers and remove them from the dataset.**","512d2795":"**It looks like theoritically wind speed threshold should be 4 m\/s. But there are also other observations with zero power production while the wind speed is higher.**\n\n**Let's see the monthly distribution for zero power production.**","4c6d86c0":"### Question: What is the average power production level for different wind speeds?","c126dc32":"### Question: Is there any correlation between the wind speed, wind direction and power production?","1da9c209":"**It is a rare event for wind speed to be over 19 m\/s in our dataset.**\n\n**Out of 47033, there is only 407 observations while the wind speed is over 19 m\/s.**\n\n**Now I want to see average power production for these high wind speed.**","74c5daf4":"**Wind speed and power production is highly correlated as one would expect.**\n\n**We can see there are lower level power production for some wind directions.**","ad0b4236":"**Let's evaluate our model's success.**","4e46e4b4":"### Question: Is there any difference between the hours for average power production?","d4a7b91d":"**From the graph above, the model fits better to the real power productions, than the theoritical power production curve.**","b1bb96da":"**I am going to use sample_df for comparing the actual, theoritical and the model power productions.**","c1350b51":"## Aim of the Study:\n\n**My aim is to predict wind turbine power production from the wind speed, wind direction, month of the year and the hour of the day.** ","6e27fcbc":"## Importing Libraries and Spark Configuration"}}