{"cell_type":{"5ddec47f":"code","28fea39f":"code","b1ac9278":"code","ad1676b5":"code","1fb6b55f":"code","9edce1af":"code","79c286c7":"code","0d4b3504":"code","b779af85":"code","a34f36d2":"code","7c6954d6":"code","b47c4dce":"code","a15a8ad1":"code","2d4aca96":"code","5ec14023":"code","073b8fbc":"code","02c44cbc":"code","57f74e87":"code","54e2092c":"code","1e30222a":"code","e52a42bd":"code","c71fbec9":"code","172042c1":"code","a9e4b4c7":"code","ba6706d2":"markdown","ef9e8287":"markdown","64bd37d7":"markdown","bd16e211":"markdown","b76f2d38":"markdown","c22d592d":"markdown","54aa619f":"markdown","9fed2dfb":"markdown","e0106503":"markdown","273c188f":"markdown","428d673d":"markdown","430f0a6c":"markdown","f6a1a3a4":"markdown","3515aa69":"markdown","dd2391e5":"markdown","ba603ebd":"markdown","44e6bd81":"markdown","f544ad22":"markdown","85a27346":"markdown","84cb0a49":"markdown"},"source":{"5ddec47f":"# imports\r\nimport pandas as pd\r\nimport numpy as np\r\nimport sklearn as sk\r\nfrom pandas_profiling import ProfileReport\r\nfrom sklearn.preprocessing import StandardScaler, RobustScaler, OrdinalEncoder\r\nfrom sklearn.metrics import accuracy_score\r\nfrom sklearn.neighbors import KNeighborsClassifier\r\nfrom sklearn.model_selection import cross_val_score\r\n\r\nnp.set_printoptions(linewidth=400)","28fea39f":"#imports database\r\ntrain_data = pd.read_csv(r'..\/input\/adult-pmr3508\/train_data.csv',na_values=\"?\")\r\ntest_data = pd.read_csv(r'..\/input\/adult-pmr3508\/test_data.csv', na_values=\"?\")","b1ac9278":"train_data.head()","ad1676b5":"test_data.head()","1fb6b55f":"#analysing data type and non-null count\r\ntrain_data.info()","9edce1af":"#full data analysis \r\nProfileReport(train_data)","79c286c7":"#filling missing variables with feature maodes\r\ndef fill_with_mode(data):\r\n    mode = data.mode().iloc[0]\r\n    data.fillna(mode, inplace=True)\r\n\r\nfill_with_mode(train_data)\r\nfill_with_mode(test_data)","0d4b3504":"train_data.count()","b779af85":"train_data.drop(columns=['education'], inplace=True)\r\ntest_data.drop(columns=['education'], inplace=True)","a34f36d2":"def capital_reduce(data):\r\n    #creating column capital\r\n    capital = data['capital.gain']-data['capital.loss']\r\n    data.insert(loc=13, column='capital', value=capital)\r\n\r\n    #excluding columns capital.loss and capital.gain\r\n    data.drop(columns=[\"capital.gain\", \"capital.loss\"], inplace=True)\r\n\r\ncapital_reduce(train_data)\r\ncapital_reduce(test_data)","7c6954d6":"train_data.head()","b47c4dce":"categorical = [\"workclass\", \"marital.status\", \"occupation\", \"relationship\", \"race\", \"sex\", \"native.country\", \"income\"]\r\ntest_cat = np.delete(categorical, -1)\r\n\r\ntrain_data[categorical] = OrdinalEncoder().fit_transform(train_data[categorical]).astype(float)\r\ntest_data[test_cat] = OrdinalEncoder().fit_transform(test_data[test_cat]).astype(float)","a15a8ad1":"train_data.head()","2d4aca96":"X_train = train_data.drop(columns=['Id', 'fnlwgt', 'income', 'race', 'native.country'])\r\nY_train = train_data[['income']]\r\n\r\nX_test = test_data.drop(columns=['Id', 'fnlwgt', 'race', 'native.country'])","5ec14023":"#analysing standard deviation in features to evaluate outliar presence\r\nX_train.std()","073b8fbc":"#normalizing features\r\ndef normalize(data):\r\n    #selecting features without outliars\r\n    features = np.array(data.columns)\r\n    index = np.where(features=='capital')\r\n    standard_features = np.delete(features, index)\r\n\r\n    standard_sca = StandardScaler()\r\n    data[standard_features]=standard_sca.fit_transform(data[standard_features])\r\n\r\n    robust_sca = RobustScaler()\r\n    data[['capital']]=robust_sca.fit_transform(data[['capital']])\r\n\r\nnormalize(X_train)\r\nnormalize(X_test)","02c44cbc":"X_train.head()","57f74e87":"X_test.head()","54e2092c":"k_values = np.arange(5,31,5)\r\nscores = []\r\n\r\ndef cross_validate_knn(k):\r\n    knn = KNeighborsClassifier(n_neighbors=k)\r\n    score = cross_val_score(knn, np.array(X_train), np.array(Y_train).ravel(), cv=10).mean()\r\n    return score\r\n\r\nfor k in k_values:\r\n    score = cross_validate_knn(k)\r\n    scores.append(score)","1e30222a":"max_score = max(scores)\r\nmax_index = np.where(scores == max_score)\r\nk = k_values[max_index][0]\r\nprint(\"Best mean cross validation score: \",max_score)\r\n","e52a42bd":"knn = KNeighborsClassifier(n_neighbors=k)\r\nknn.fit(X_train, np.array(Y_train).ravel())","c71fbec9":"Y_test_prediction = knn.predict(X_test)","172042c1":"prediction = np.array(['>50K' if target else \"<=50K\" for target in Y_test_prediction])\r\nprediction = pd.DataFrame(prediction, columns=[\"income\"])\r\nprint(prediction)","a9e4b4c7":"prediction.to_csv('submission.csv',index = True, index_label=\"Id\")","ba6706d2":"### Missing Values","ef9e8287":"## **Data Prep**\r\n\r\nIn this section missing values, outliars, leaky featrures and redundant features are handled. Furthermore the categorical data is transformed into numeric variables.","64bd37d7":"Training classifier for best scoring k","bd16e211":"Focusing on the alert section of the profile generated above we can conclude that the following features have missing values:\r\n- workclass\r\n- occupation\r\n- native.country\r\n\r\nAlso, the section alerts for correlation between features which will be handled in te feature.\r\n\r\nThe variable analisys doesn't indicate any outliars or leaky features.\r\n\r\nFurthermore, based in the Phik coeficient in the correlation section, the fnwgt, native.country and race features have low correlation whith the target variable (income)","b76f2d38":"### Selecting Features","c22d592d":"The correlation between education and education.num can be resolved by dropping the education column, since both features refer to the same information with diferent data types","54aa619f":"Training the KNN classifier for different k values","9fed2dfb":"## **KNN Cross Validation**","e0106503":"## **Prediction**","273c188f":"From the analysis above we can observe that 9 out of the 16 variables are of the type 'object', while the other 7 (6+id) are 'int64'. Data typed as 'int64' are numeric, and variables of type 'object' are categoric (usualy 'strings', possibly being a combination of data types). ","428d673d":"The remaining can not be easily resolved or do not represent redundant data","430f0a6c":"### Normalizing Features","f6a1a3a4":"## Index\r\n1. Data import and visualization\r\n2. Data prep\r\n3. KNN cross validation\r\n4. Prediction\r\n5. Evaluation\r\n","3515aa69":"### Categorical to Numeric Values","dd2391e5":"# Adult Dataset Prediction\r\n\r\nProject proposed on class PMR3508 - \"Machine Learning and Pattern Recognition\" for the study of the `Adult Dataset`. This notebook presents a kNN classifier for the variable Target (income <=50K or >50K).","ba603ebd":"The features capital.loss and capital.gain refer to the same information: capital, which can be reduced to capital.gain-capital.los","44e6bd81":"As shown above the missing cells have been filled, thus leaving no missing variables in the dataset ","f544ad22":"### Correlated Values","85a27346":"The capital feature has the higher std, so it will be normalized with a scaler that is less affected by outliars","84cb0a49":"## **Data Import and Visualization**\r\nIn this section the training data is imported and explored before data prep"}}