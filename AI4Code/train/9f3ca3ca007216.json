{"cell_type":{"fd1d5812":"code","7f54e27e":"code","427dbdba":"code","0d625ad1":"code","40147b9f":"code","d08ecebb":"code","555d4a36":"code","9061f18e":"code","656d2846":"code","9fe44e45":"code","9e61cf24":"code","de56315c":"code","3202ce94":"code","3334a5d9":"code","ea90ba09":"code","fad293ca":"code","5e5daf2e":"code","e02a1e84":"code","a036729b":"code","86f9cf99":"code","c3b0ca5f":"code","8d0c5c31":"code","ad957dcd":"code","c39e2aaf":"code","df6400d4":"code","ade0b5f8":"code","b41945ef":"code","c3794488":"code","4c7ced28":"code","de9ea3de":"code","f84e436f":"code","66291318":"code","31966d08":"code","a3532349":"code","8630c6c0":"code","005fdefb":"code","031272cd":"code","509fb223":"code","3d62fb62":"code","5f1105a1":"code","692ffe50":"code","25dbcc64":"code","7dff4d51":"code","6d577cf8":"code","65a80632":"code","71cb27d2":"code","3b9291f5":"code","e6b46393":"code","e810e09c":"code","18259e77":"code","1e2435c7":"code","997bf2e9":"code","b086ca3f":"code","9691a1c8":"code","c11ffa96":"code","05872b0a":"code","30b6cf65":"code","caa7f972":"code","3b6acd7e":"code","8024f4d6":"code","9d6d4984":"code","a50d67bd":"code","31603d6d":"code","ab23c1a5":"code","37e745c9":"code","bd1a6794":"code","a3402e42":"code","72472f13":"code","9b9d55b5":"code","ac687c0e":"code","b13243d0":"code","4360a1d4":"code","0e1ce7c2":"code","dd52969b":"code","bd9402b3":"code","7d9caad5":"code","50e8e48c":"code","679cbf06":"code","975e9f5b":"code","075dfa82":"code","27f55670":"code","8929bee0":"code","c6583fd2":"code","11694b54":"markdown","2a6c5594":"markdown","873c2615":"markdown","cf62aebf":"markdown","3e785f42":"markdown","b4aac8d9":"markdown"},"source":{"fd1d5812":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7f54e27e":"\n# Import libraries\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","427dbdba":"\ndf=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')","0d625ad1":"\ndf.head()","40147b9f":"\ndf['MSZoning'].value_counts()","d08ecebb":"df.columns","555d4a36":"sns.heatmap(df.isnull(),yticklabels=False,cbar=True)","9061f18e":"df.shape","656d2846":"df.info()","9fe44e45":"\ndf.describe()\n","9e61cf24":"g = df.columns.to_series().groupby(df.dtypes).groups\nprint(g)","de56315c":"#YrSold: Year Sold\ndf['YrSold'].value_counts().plot(kind='bar')","3202ce94":"#MoSold: Month Sold\ndf['MoSold'].value_counts().plot(kind='bar')","3334a5d9":"#MiscVal: $Value of miscellaneous feature\ndf['MiscVal'].value_counts().plot(kind='bar')","ea90ba09":"#PoolArea: Pool area in square feet\ndf['PoolArea'].value_counts().plot(kind='bar')","fad293ca":"#3SsnPorch: Three season porch area in square feet\ndf['3SsnPorch'].value_counts().plot(kind='bar')","5e5daf2e":"df.Fireplaces.value_counts().plot(kind='bar')","e02a1e84":"#TotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\ndf.TotRmsAbvGrd.value_counts().plot(kind='bar')","a036729b":"df.KitchenAbvGr.value_counts().plot(kind='bar')","86f9cf99":"df.BedroomAbvGr.value_counts().plot(kind='bar')","c3b0ca5f":"#HalfBath: Half baths above grade\ndf.HalfBath.value_counts().plot(kind='bar')","8d0c5c31":"#FullBath: Full bathrooms above grade\ndf.FullBath.value_counts().plot(kind='bar')","ad957dcd":"#BsmtHalfBath: Basement half bathrooms\ndf.BsmtHalfBath.value_counts().plot(kind='bar')","c39e2aaf":"#BsmtFullBath: Basement full bathrooms\ndf.BsmtFullBath.value_counts().plot(kind='bar')","df6400d4":"#MSSubClass: The building class\n\ndf.MSSubClass.value_counts().plot(kind='bar')","ade0b5f8":"#LowQualFinSF: Low quality finished square feet (all floors)\ndf.LowQualFinSF.value_counts().plot(kind='bar')","b41945ef":"#OverallCond: Overall condition rating\ndf.OverallCond.value_counts().plot(kind='bar')","c3794488":" df.isnull().sum()","4c7ced28":"null_counts = df.isnull().sum()\nplt.figure(figsize=(16,8))\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical')\nplt.ylabel('fraction of rows with missing data')\nplt.bar(np.arange(len(null_counts)),null_counts)","de9ea3de":"## Fill Missing Values\n\ndf['LotFrontage']=df['LotFrontage'].fillna(df['LotFrontage'].mean())","f84e436f":"df['BsmtCond']=df['BsmtCond'].fillna(df['BsmtCond'].mode()[0])\ndf['BsmtQual']=df['BsmtQual'].fillna(df['BsmtQual'].mode()[0])","66291318":"\ndf['FireplaceQu']=df['FireplaceQu'].fillna(df['FireplaceQu'].mode()[0])\ndf['GarageType']=df['GarageType'].fillna(df['GarageType'].mode()[0])","31966d08":"df['GarageFinish']=df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual']=df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond']=df['GarageCond'].fillna(df['GarageCond'].mode()[0])","a3532349":"\ndf['MasVnrType']=df['MasVnrType'].fillna(df['MasVnrType'].mode()[0])\ndf['MasVnrArea']=df['MasVnrArea'].fillna(df['MasVnrArea'].mode()[0])","8630c6c0":"#Droping variable who is having more number of missing values\ndf.drop(['Alley'],axis=1,inplace=True)\n\ndf.drop(['GarageYrBlt'],axis=1,inplace=True)\n\ndf.drop(['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","005fdefb":"\ndf.drop(['Id'],axis=1,inplace=True)","031272cd":"df.shape","509fb223":"s=df.isnull().sum()","3d62fb62":"s.plot.pie(subplots=True, figsize=(18, 8))","5f1105a1":"df['BsmtFinType2'].isnull().sum()","692ffe50":"df['BsmtExposure'].isnull().sum()\n","25dbcc64":"df['BsmtFinType1'].isnull().sum()","7dff4d51":"df['Electrical'].isnull().sum()","6d577cf8":"df['BsmtExposure']=df['BsmtExposure'].fillna(df['BsmtExposure'].mode()[0])\n\n","65a80632":"df['BsmtFinType2']=df['BsmtFinType2'].fillna(df['BsmtFinType2'].mode()[0])","71cb27d2":"df['BsmtFinType1']=df['BsmtFinType1'].fillna(df['BsmtFinType1'].mode()[0])","3b9291f5":"df['Electrical']=df['Electrical'].fillna(df['Electrical'].mode()[0])","e6b46393":"\nsns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='coolwarm')","e810e09c":"df.dropna(inplace=True)","18259e77":"df.shape","1e2435c7":"df.head()","997bf2e9":"##HAndle Categorical Features\n\ncolumns=['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig','LandSlope','Neighborhood',\n         'Condition2','BldgType','Condition1','HouseStyle','SaleType',\n        'SaleCondition','ExterCond',\n         'ExterQual','Foundation','BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2',\n        'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','Heating','HeatingQC',\n         'CentralAir',\n         'Electrical','KitchenQual','Functional',\n         'FireplaceQu','GarageType','GarageFinish','GarageQual','GarageCond','PavedDrive']","b086ca3f":"len(columns)","9691a1c8":"def category_onehot_multcols(multcolumns):\n    df_final=final_df\n    i=0\n    for fields in multcolumns:\n        \n        print(fields)\n        df1=pd.get_dummies(final_df[fields],drop_first=True)\n        \n        final_df.drop([fields],axis=1,inplace=True)\n        if i==0:\n            df_final=df1.copy()\n        else:\n            \n            df_final=pd.concat([df_final,df1],axis=1)\n        i=i+1\n       \n        \n    df_final=pd.concat([final_df,df_final],axis=1)\n        \n    return df_final","c11ffa96":"main_df=df.copy()","05872b0a":"main_df.shape","30b6cf65":"test_df=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","caa7f972":"test_df.shape\n","3b6acd7e":"test_df.head()","8024f4d6":"\n#check null values\ntest_df.isnull().sum()","9d6d4984":"null_counts = test_df.isnull().sum()\nplt.figure(figsize=(16,8))\nplt.xticks(np.arange(len(null_counts))+0.5,null_counts.index,rotation='vertical')\nplt.ylabel('fraction of rows with missing data')\nplt.bar(np.arange(len(null_counts)),null_counts)","a50d67bd":"\n## Fill Missing Values\ntest_df['LotFrontage']=test_df['LotFrontage'].fillna(test_df['LotFrontage'].mean())\ntest_df['MSZoning']=test_df['MSZoning'].fillna(test_df['MSZoning'].mode()[0])\ntest_df['BsmtCond']=test_df['BsmtCond'].fillna(test_df['BsmtCond'].mode()[0])\ntest_df['BsmtQual']=test_df['BsmtQual'].fillna(test_df['BsmtQual'].mode()[0])\n\ntest_df['FireplaceQu']=test_df['FireplaceQu'].fillna(test_df['FireplaceQu'].mode()[0])\ntest_df['GarageType']=test_df['GarageType'].fillna(test_df['GarageType'].mode()[0])\ntest_df['GarageFinish']=test_df['GarageFinish'].fillna(test_df['GarageFinish'].mode()[0])\ntest_df['GarageQual']=test_df['GarageQual'].fillna(test_df['GarageQual'].mode()[0])\ntest_df['GarageCond']=test_df['GarageCond'].fillna(test_df['GarageCond'].mode()[0])\n\ntest_df['MasVnrType']=test_df['MasVnrType'].fillna(test_df['MasVnrType'].mode()[0])\ntest_df['MasVnrArea']=test_df['MasVnrArea'].fillna(test_df['MasVnrArea'].mode()[0])\n\ntest_df['BsmtExposure']=test_df['BsmtExposure'].fillna(test_df['BsmtExposure'].mode()[0])","31603d6d":"##Droping variable who is having more number of missing values\ntest_df.drop(['Alley'],axis=1,inplace=True)\ntest_df.drop(['GarageYrBlt'],axis=1,inplace=True)\ntest_df.drop(['Id'],axis=1,inplace=True)\ntest_df.drop(['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","ab23c1a5":"s = test_df.isnull().sum()\ns.plot.pie(subplots=True, figsize=(18, 8))","37e745c9":"test_df['Utilities']=test_df['Utilities'].fillna(test_df['Utilities'].mode()[0])\ntest_df['Exterior1st']=test_df['Exterior1st'].fillna(test_df['Exterior1st'].mode()[0])\ntest_df['Exterior2nd']=test_df['Exterior2nd'].fillna(test_df['Exterior2nd'].mode()[0])\ntest_df['BsmtFinType1']=test_df['BsmtFinType1'].fillna(test_df['BsmtFinType1'].mode()[0])\ntest_df['BsmtFinSF1']=test_df['BsmtFinSF1'].fillna(test_df['BsmtFinSF1'].mean())\ntest_df['BsmtFinSF2']=test_df['BsmtFinSF2'].fillna(test_df['BsmtFinSF2'].mean())\ntest_df['BsmtUnfSF']=test_df['BsmtUnfSF'].fillna(test_df['BsmtUnfSF'].mean())\ntest_df['TotalBsmtSF']=test_df['TotalBsmtSF'].fillna(test_df['TotalBsmtSF'].mean())\ntest_df['BsmtFullBath']=test_df['BsmtFullBath'].fillna(test_df['BsmtFullBath'].mode()[0])\ntest_df['BsmtHalfBath']=test_df['BsmtHalfBath'].fillna(test_df['BsmtHalfBath'].mode()[0])\ntest_df['KitchenQual']=test_df['KitchenQual'].fillna(test_df['KitchenQual'].mode()[0])\ntest_df['Functional']=test_df['Functional'].fillna(test_df['Functional'].mode()[0])\ntest_df['GarageCars']=test_df['GarageCars'].fillna(test_df['GarageCars'].mean())\ntest_df['GarageArea']=test_df['GarageArea'].fillna(test_df['GarageArea'].mean())\ntest_df['SaleType']=test_df['SaleType'].fillna(test_df['SaleType'].mode()[0])","bd1a6794":"s = test_df.isnull().sum()\ns.plot.pie(subplots=True, figsize=(18, 8))","a3402e42":"test_df['BsmtFinType2'].isnull().sum()","72472f13":"test_df['BsmtFinType2']=test_df['BsmtFinType2'].fillna(test_df['BsmtFinType2'].mode()[0])\n","9b9d55b5":"sns.heatmap(test_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","ac687c0e":"test_df.shape","b13243d0":"df.shape","4360a1d4":"final_df=pd.concat([df,test_df])","0e1ce7c2":"final_df.shape","dd52969b":"final_df['SalePrice']","bd9402b3":"\nfinal_df=category_onehot_multcols(columns)\n","7d9caad5":"final_df.shape","50e8e48c":"\nfinal_df =final_df.loc[:,~final_df.columns.duplicated()]","679cbf06":"final_df.shape","975e9f5b":"final_df.head()","075dfa82":"\ndf_Train=final_df.iloc[:1422,:]\ndf_Test=final_df.iloc[1422:,:]","27f55670":"df_Train.head()","8929bee0":"df_Test","c6583fd2":"\nX_train=df_Train.drop(['SalePrice'],axis=1)\ny_train=df_Train['SalePrice']","11694b54":"# Working Test dataset","2a6c5594":" # As per question we need to build regression model.","873c2615":"# Goal\nIt is your job to predict the sales price for each house. For each Id in the test set, you must predict the value of the SalePrice variable.","cf62aebf":"# Working Training dataset","3e785f42":"# Click on right and extend.","b4aac8d9":"# Data fields\nHere's a brief version of what you'll find in the data description file.\n\nSalePrice - the property's sale price in dollars. This is the target variable that you're trying to predict.\n\nMSSubClass: The building class\n\nMSZoning: The general zoning classification\n\nLotFrontage: Linear feet of street connected to property\n\nLotArea: Lot size in square feet\n\nStreet: Type of road access\n\nAlley: Type of alley access\n\nLotShape: General shape of property\n\nLandContour: Flatness of the property\n\nUtilities: Type of utilities available\n\nLotConfig: Lot configuration\n\nLandSlope: Slope of property\n\nNeighborhood: Physical locations within Ames city limits\n\nCondition1: Proximity to main road or railroad\n\nCondition2: Proximity to main road or railroad (if a second is present)\n\nBldgType: Type of dwelling\n\nHouseStyle: Style of dwelling\n\nOverallQual: Overall material and finish quality\n\nOverallCond: Overall condition rating\n\nYearBuilt: Original construction date\n\nYearRemodAdd: Remodel date\n\nRoofStyle: Type of roof\n\nRoofMatl: Roof material\n\nExterior1st: Exterior covering on house\n\nExterior2nd: Exterior covering on house (if more than one material)\n\nMasVnrType: Masonry veneer type\n\nMasVnrArea: Masonry veneer area in square feet\n\nExterQual: Exterior material quality\n\nExterCond: Present condition of the material on the exterior\n\nFoundation: Type of foundation\n\nBsmtQual: Height of the basement\n\nBsmtCond: General condition of the basement\n\nBsmtExposure: Walkout or garden level basement walls\n\nBsmtFinType1: Quality of basement finished area\n\nBsmtFinSF1: Type 1 finished square feet\n\nBsmtFinType2: Quality of second finished area (if present)\n\nBsmtFinSF2: Type 2 finished square feet\n\nBsmtUnfSF: Unfinished square feet of basement area\n\nTotalBsmtSF: Total square feet of basement area\n\nHeating: Type of heating\n\nHeatingQC: Heating quality and condition\n\nCentralAir: Central air conditioning\n\nElectrical: Electrical system\n\n1stFlrSF: First Floor square feet\n\n2ndFlrSF: Second floor square feet\n\nLowQualFinSF: Low quality finished square feet (all floors)\n\nGrLivArea: Above grade (ground) living area square feet\n\nBsmtFullBath: Basement full bathrooms\n\nBsmtHalfBath: Basement half bathrooms\n\nFullBath: Full bathrooms above grade\n\nHalfBath: Half baths above grade\n\nBedroom: Number of bedrooms above basement level\n\nKitchen: Number of kitchens\n\nKitchenQual: Kitchen quality\n\nTotRmsAbvGrd: Total rooms above grade (does not include bathrooms)\n\nFunctional: Home functionality rating\n\nFireplaces: Number of fireplaces\n\nFireplaceQu: Fireplace quality\n\nGarageType: Garage location\n\nGarageYrBlt: Year garage was built\n\nGarageFinish: Interior finish of the garage\n\nGarageCars: Size of garage in car capacity\n\nGarageArea: Size of garage in square feet\n\nGarageQual: Garage quality\n\nGarageCond: Garage condition\n\nPavedDrive: Paved driveway\n\nWoodDeckSF: Wood deck area in square feet\n\nOpenPorchSF: Open porch area in square feet\n\nEnclosedPorch: Enclosed porch area in square feet\n\n3SsnPorch: Three season porch area in square feet\n\nScreenPorch: Screen porch area in square feet\n\nPoolArea: Pool area in square feet\n\nPoolQC: Pool quality\n\nFence: Fence quality\n\nMiscFeature: Miscellaneous feature not covered in other categories\n\nMiscVal: $Value of miscellaneous feature\n\nMoSold: Month Sold\n\nYrSold: Year Sold\n\nSaleType: Type of sale\n\nSaleCondition: Condition of sale"}}