{"cell_type":{"791d5214":"code","c7408e25":"code","2594c852":"code","480452ac":"code","4d8a3aef":"code","98a63ef9":"markdown","0793ed8c":"markdown"},"source":{"791d5214":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# for graphic \nimport matplotlib.pyplot as plt \n\n# for model \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c7408e25":"data = pd.read_csv ('..\/input\/column_2C_weka.csv')\ndata.head()","2594c852":"# set claass  as number\ndata['class'].unique()\ndata['class'] = [1 if each == 'Abnormal' else 0 for each in data['class']]\ndata.head()","480452ac":"# train test split\n\ny = data['class']\nX = data.drop(['class'], axis=1)\nX_train,  X_test , y_train, y_test = train_test_split(X, y, test_size = 0.3,random_state=1)\nprint('X_train shape : ', X_train.shape)\nprint('y_train shape : ', y_train.shape)\nprint('X_test shape : ', X_test.shape)\nprint('y_test shape : ', y_test.shape)\n","4d8a3aef":"# find best n value for knn\nneig= range(1,25) \ntrain_accuracy_list =[]\ntest_accuracy_list =[]\n\nfor each in neig:\n    knn = KNeighborsClassifier(n_neighbors =each)\n    knn.fit(X_train,  y_train)\n    train_accuracy_list.append( knn.score(X_train, y_train))    \n    test_accuracy_list.append( knn.score(X_test, y_test))    \n    \n        \nprint( 'best k for Knn : {} , best accuracy : {}'.format(test_accuracy_list.index(np.max(test_accuracy_list))+1, np.max(test_accuracy_list)))\nplt.figure(figsize=[13,8])\nplt.plot(neig, train_accuracy_list,label = 'Train Accuracy')\nplt.plot(neig, test_accuracy_list,label = 'Test Accuracy')\nplt.title('Neighbors vs accuracy ')\nplt.xlabel('Number of Neighbors')\nplt.ylabel('Accuracy')\nplt.legend()\nplt.grid()\nplt.xticks(neig)\nplt.show()","98a63ef9":"# KNN Algorithmasi\n* Import dataset\n* Recognize Dataset\n* Visualize Dataset \n* Knn with sklearn ","0793ed8c":"# Conclusion\n\nbest k for Knn : 13 , best accuracy : 0.8709677419354839\n"}}