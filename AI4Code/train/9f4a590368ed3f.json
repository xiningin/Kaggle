{"cell_type":{"b40fb757":"code","7b5f1afb":"code","3279a5cf":"code","af85b391":"code","0f480fe7":"code","771ce451":"code","0f1f9a04":"code","f993a386":"code","824a2359":"code","3ff23a52":"code","e8a51792":"code","93a1703c":"code","4a520f3e":"code","86b2b917":"code","308301d0":"code","084dba6b":"code","6a951f28":"code","08eea07a":"code","9c9810b3":"markdown","07abea2a":"markdown","24ddd70f":"markdown","a08d49ae":"markdown","4d539120":"markdown","9fd50df2":"markdown","52be22b2":"markdown","3c035abe":"markdown","ea917e6c":"markdown","a0d3b76a":"markdown","e8ca9ca5":"markdown","d9778a46":"markdown","f4e2c51c":"markdown","b9854a18":"markdown","abf25823":"markdown","aa5c482f":"markdown","715269a6":"markdown","b58b1151":"markdown","5d20f7b1":"markdown","051b0aac":"markdown","b835b9d8":"markdown","ab33f6be":"markdown","e3287acd":"markdown","9a6c98cd":"markdown","2cb65292":"markdown","d8753ed6":"markdown","df7fe7bd":"markdown","97d046a2":"markdown"},"source":{"b40fb757":"# \u5b89\u88c5WFDB\uff0c\u4e00\u4e2a\u7528\u4e8e\u8bfb\u53d6\uff0c\u5199\u5165\u548c\u5904\u7406WFDB\u4fe1\u53f7\u548c\u6ce8\u91ca\u7684\u5de5\u5177\u5e93\uff0c\u88ab\u9879\u76ee\u4e2d\u7528\u4e8e\u8bfb\u53d6.dat\u6587\u4ef6\n!pip install wfdb","7b5f1afb":"# \u5bfc\u5165\u4f7f\u7528\u5230\u7684\u7c7b\u5e93\nimport numpy as np\nimport pandas as pd\nimport os\nimport wfdb\nimport matplotlib.pyplot as plt\nimport math\nimport seaborn as sns","3279a5cf":"# \u8bfb\u53d6\u539f\u751f\u7269\u4fe1\u53f7\nall_signal=[]\nmeta_data=[]\nfor file in sorted(os.listdir(\"\/kaggle\/input\/stress-recognition-in-automobile-drivers\/physionet.org\/files\/drivedb\/1.0.0\/\")):\n    if file.endswith(\".dat\"):\n        # \u4f7f\u7528 wfdb.rdsamp \u8bfb\u53d6wfdb\u6570\u636e\u3002signals\uff0c \u4e00\u4e2a2d numpy\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u8bb0\u5f55\u4e2d\u7684\u7269\u7406\u4fe1\u53f7\uff1bfields\uff0c\u5305\u542b\u8bfb\u53d6\u8bb0\u5f55\u7684\u51e0\u4e2a\u5173\u952e\u5c5e\u6027\u7684\u5b57\u5178\uff08fs|units|sig_name|comments\uff09\n        signals, fields = wfdb.rdsamp(\"\/kaggle\/input\/stress-recognition-in-automobile-drivers\/physionet.org\/files\/drivedb\/1.0.0\/\" + os.path.splitext(file)[0])\n        # \u4fe1\u53f7\u6570\u636e\uff0c\u5305\u542b18\u6b21\u9a7e\u9a76\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u751f\u7269\u4fe1\u53f7\n        all_signal.append(signals)\n        # \u5a92\u4f53\u6570\u636e\uff0c\u4fe1\u53f7\u6570\u636e\u7ed3\u6784\u3001\u6570\u636e\u5355\u4f4d\u7b49\n        meta_data.append(fields)","af85b391":"# \u5c55\u793a\u5404\u4e2a\u53f8\u673a\u7684\u9a7e\u9a76\u603b\u65f6\u95f4\u3001\u91c7\u96c6\u4fe1\u53f7\u4e2a\u6570\u3001\u5404\u4fe1\u53f7\u540d\u79f0\ni=1\nfor item in meta_data:\n    print(\"driver\",i)\n    i=i+1\n    print(\"total time(min):\", round(item['sig_len']\/15.5\/60, 2))\n    print(\"sigal number:\",item['n_sig'])\n    print(\"sigal name:\",item['sig_name'])\n    print(\"--------------------\")","0f480fe7":"# \u8fd0\u884c\u6b64\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230meta_data\u91cc\u9762\u7684\u4fe1\u606f\uff0c\u7528\u6765\u7ed9all_signal\u751f\u7269\u7535\u4fe1\u53f7\u8fdb\u884c\u89e3\u91ca\u7684\nmeta_data","771ce451":"# \u8fd0\u884c\u6b64\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230all_signal\u7ed3\u6784\nall_signal","0f1f9a04":"# \u7ed8\u5236\u7b2c\u4e94\u4e2a\u53f8\u673a\u7684\u5168\u7a0b\u5404\u4f20\u611f\u5668\u6570\u636e\u56fe\nmy_colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#8c564b\"]\nplt.style.use('ggplot')\nplt.figure(figsize=(50, 40))\nplt.suptitle(\"Driver 5\", fontsize=40)\nfor i in range(all_signal[4].shape[1]):\n    plt.subplot(4, 2, i + 1)\n    plt.ylabel(meta_data[4]['units'][i], fontsize=18)\n    plt.xlabel(\"samples (fs = 15.5)\", fontsize=18)\n    plt.plot(all_signal[4].T[i], color=my_colors[i])\n    plt.title(meta_data[4]['sig_name'][i],fontsize=26)","f993a386":"# \u7ed8\u5236\u7b2c\u4e94\u4e2a\u53f8\u673a\u7684\u524d60s\u5404\u4f20\u611f\u5668\u6570\u636e\u56fe\nmy_colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#8c564b\"]\nplt.style.use('ggplot')\nplt.figure(figsize=(50, 40))\nplt.suptitle(\"Driver 5 - first 60 seconds\", fontsize=40)\nfor i in range(all_signal[4].shape[1]):\n    plt.subplot(4, 2, i + 1)\n    plt.ylabel(meta_data[4]['units'][i], fontsize=18)\n    plt.xlabel(\"samples (fs = 15.5)\", fontsize=18)\n    plt.plot(all_signal[4].T[i][0:int(15.5 * 60)], color=my_colors[i])\n    plt.title(meta_data[4]['sig_name'][i],fontsize=26)","824a2359":"# \u6bcf\u6b21\u9a7e\u9a76\u7684\u4e03\u4e2a\u65f6\u6bb5\u7684\u65f6\u95f4\u95f4\u9694\u4fe1\u606f\uff0c\u8be5\u65f6\u95f4\u7531\u539f\u59cb\u6570\u636e\u7684marker\u8bfb\u51fa\uff0c\u8bb0\u5f55\u5728sriadintervals\/time_intervals.csv\u6587\u4ef6\u4e2d\uff0c\u7531pd\u8bfb\u51fa\ndf_time_intervals = pd.read_csv('\/kaggle\/input\/sriadintervals\/time_intervals.csv',sep = ',')","3ff23a52":"df_time_intervals","e8a51792":"# \u66f4\u6539\u5217\u540d\uff0c\u65b9\u4fbf\u64cd\u4f5c\ndf_time_intervals.columns = ['Drive', 'Rest1', 'City1', 'Hwy1', 'City2', 'Hwy2', 'City3', 'Rest2', 'Total']\n# \u521b\u5efa\u6bcf\u6bb5\u8d77\u59cb\u65f6\u95f4\u7684Dataframe\ndf_time_start = df_time_intervals.copy()\ndf_time_start['Rest1'] = 0\ndf_time_start['City1'] = df_time_start['Rest1'] + df_time_intervals['Rest1']\ndf_time_start['Hwy1'] = df_time_start['City1'] + df_time_intervals['City1']\ndf_time_start['City2'] = df_time_start['Hwy1'] + df_time_intervals['Hwy1']\ndf_time_start['Hwy2'] = df_time_start['City2'] + df_time_intervals['City2']\ndf_time_start['City3'] = df_time_start['Hwy2'] + df_time_intervals['Hwy2']\ndf_time_start['Rest2'] = df_time_start['City3'] + df_time_intervals['City3']\ndf_time_start","93a1703c":"# \u8ba1\u7b97\u91c7\u6837\u7684\u65f6\u95f4\u70b9\uff0c\u901a\u5e38\u5728\u6bcf\u6bb5\u5f00\u59cb\u540e\u7684\u4e94\u5206\u949f\uff08\u8bba\u6587\u4e2d\u65b9\u6848\uff09\ndf_time_sample = df_time_start.drop(['Drive', 'Total'], axis=1)\n# Rest1\u5728\u5f00\u59cb\u540e\u768410\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['Rest1'] += 10\n# City1\u5728\u5f00\u59cb\u540e\u76845\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['City1'] += 5\n# Hwy1\u5728\u5f00\u59cb\u540e\u76844\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['Hwy1'] += 4\n# City2\u5728\u5f00\u59cb\u540e\u76843\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['City2'] += 3\n# Hwy2\u5728\u5f00\u59cb\u540e\u76844\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['Hwy2'] += 4\n# City3\u5728\u5f00\u59cb\u540e\u76845\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['City3'] += 5\n# Rest2\u5728\u5f00\u59cb\u540e\u76845\u5206\u949f\u8fdb\u884c\u91c7\u6837\ndf_time_sample['Rest2'] += 5\n# Driver09\u4e0eDriver16\u7684Rest2\u8bb0\u5f55\u65e0\u6548\uff0c\u8fd9\u91cc\u8d4b\u503c\u4e3a\u7a7a\ndf_time_sample.loc[4, 'Rest2'] = None\ndf_time_sample.loc[9, 'Rest2'] = None\ndf_time_sample","4a520f3e":"# \u6839\u636e\u9009\u53d6\u7684\u9a7e\u9a76\u65f6\u6bb5\uff0c\u5bf9all_signal\u4fe1\u53f7\u8fdb\u884c\u63d0\u53d6\nsignal_1 = all_signal[4:12]\nsignal_2 = all_signal[14:16]\nsignal = signal_1 + signal_2","86b2b917":"# \u7ed8\u5236\u5404\u53f8\u673a\u7684\u5168\u7a0b\u624b\u5bfc\u7535\u7387\u4f20\u611f\u5668\u6570\u636e\u56fe\nplt.style.use('ggplot')\nplt.figure(figsize=(50, 60))\nplt.suptitle(\"Drivers\", fontsize=40)\nfor i in range(0, 10):\n    plt.subplot(5, 2, i + 1)\n    plt.xlabel(\"samples (fs = 15.5)\", fontsize=18)\n    plt.plot(signal[i].T[3])\n    plt.title(\"Driver %d\" % (i + 1),fontsize=26)","308301d0":"# \u91c7\u6837\u5904\u7406\u6570\u636e\ndef smaple_data(Drive_num, sample_time):\n    result_list = []\n    loc_start = int(sample_time * 15.5 * 60)\n    # print(\"         \", Drive_num + 1, loc_start)\n    loc_end = int(loc_start + 60 * 15.5)\n    # mhGSR_data\n    mhGSR_data = round(sum(signal[Drive_num].T[3][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(mhGSR_data)\n    # mfGSR\n    mfGSR_data = round(sum(signal[Drive_num].T[2][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(mfGSR_data)\n    # mEMG\n    mEMG_data = round(sum(signal[Drive_num].T[1][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(mEMG_data)\n    # rEMG\n    rEMG_data = round(math.sqrt(sum([x ** 2 for x in signal[Drive_num].T[1][loc_start:loc_end]]) \/ (60 * 15.5)), 2)\n    # rEMG_data = round(sum(signal[Drive_num].T[1][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(rEMG_data)\n    # RR\n    RR_data = round(sum(signal[Drive_num].T[6][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(RR_data)\n    # mHR\n    mHR_data = round(sum(signal[Drive_num].T[4][loc_start:loc_end])\/(60 * 15.5), 2)\n    result_list.append(mHR_data)\n    return result_list\n    \n# \u521b\u5efa\u8bad\u7ec3\u7279\u5f81\u4e0e\u6807\u7b7e\u7684Dataframe\uff0cstress\uff1a1\u30013\u30015 \u5206\u522b\u4ee3\u8868 \u4f4e\u3001\u4e2d\u3001\u9ad8 \u4e09\u4e2d\u538b\u529b\ndf = pd.DataFrame(columns=['mhGSR', 'mfGSR', 'mEMG', 'rEMG', 'RR', 'mHR', 'stress'])\nfor Drive_num in range(0,10):\n    # \u91c7\u6837Rest1\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'Rest1'])\n    result.append(1)\n    df.loc[len(df)] = result\n    # \u91c7\u6837City1\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'City1'])\n    result.append(5)\n    df.loc[len(df)] = result\n    # \u91c7\u6837Hwy1\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'Hwy1'])\n    result.append(3)\n    df.loc[len(df)] = result\n    # \u91c7\u6837City2\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'City2'])\n    result.append(5)\n    df.loc[len(df)] = result\n    # \u91c7\u6837Hwy2\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'Hwy2'])\n    result.append(3)\n    df.loc[len(df)] = result\n    # \u91c7\u6837City3\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'City3'])\n    result.append(5)\n    df.loc[len(df)] = result\n    # \u91c7\u6837Rest2\n    if((Drive_num == 4) or (Drive_num == 9)):\n        continue\n    result = smaple_data(Drive_num, df_time_sample.loc[Drive_num, 'Rest2'])\n    result.append(1)\n    df.loc[len(df)] = result\n\n# \u5f3a\u5236\u663e\u793a\u6240\u6709\u6570\u636e\uff0c\u540e\u671f\u7528\u6765\u53bb\u9664\u5f02\u5e38\u6570\u636e    \npd.set_option('display.max_rows', None)    \ndf","084dba6b":"sns.set_style(\"dark\")\n\nplt.figure(figsize = (10,8))\ncolnm = df.columns.tolist()\n# \u8ba1\u7b97\u76f8\u5173\u7cfb\u6570\u77e9\u9635\nmcorr = df[colnm].corr()\n# \u6784\u9020\u4e00\u4e2a\u4e0e mcorr \u540c\u7ef4\u7684\u5e03\u5c14\u578b\u96f6\u77e9\u9635 mask\uff1a\u906e\u7f69\nmask = np.zeros_like(mcorr, dtype=np.bool)\n# np.triu_indices_from(mask)\uff1a\u8fd4\u56de\u4e0a\u4e09\u89d2\u77e9\u9635\u7684\u7d22\u5f15   \u5e76\u5c06\u4e0a\u4e09\u89d2\u8bbe\u7f6e\u4e3aTRUE\nmask[np.triu_indices_from(mask)] = True\n# \u521b\u5efa\u5206\u6563\u989c\u8272, 200\u8d77\u59cb\u989c\u8272  20\u7ec8\u6b62\u989c\u8272   \ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n# \u753b\u70ed\u529b\u56fe\ng = sns.heatmap(mcorr, mask=mask, cmap=cmap, square=True, annot=True, fmt='0.2f')\nprint(\"\\nFigure 8: Pairwise Correlation Plot\")   ","6a951f28":"# \u5bfc\u5165\u4e0e\u673a\u5668\u5b66\u4e60\u6709\u5173\u7684\u7c7b\u5e93\nfrom imblearn.over_sampling import SMOTE    #SMOTE Technique\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score","08eea07a":"    # \u63d0\u53d6\u7279\u5f81\u4e0e\u6807\u7b7e\n    X = df.drop(columns=['stress'])\n    y = df['stress']\n    \n    # \u5206\u5272\u8bad\u7ec3\u96c6\u4e0e\u6d4b\u8bd5\u96c6\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)\n    \n    # csdn \u6570\u636e\u4e0d\u5e73\u8861\u95ee\u9898\u2014\u2014SMOTE\u7b97\u6cd5\u8d4f\u6790\n    # transform the dataset\n    oversample = SMOTE(k_neighbors=2)\n    X_train, y_train = oversample.fit_resample(X_train, y_train)\n    scaler = StandardScaler()\n    X_train = scaler.fit_transform(X_train)\n    X_test = scaler.fit_transform(X_test)\n        # \u53ef\u4ee5\u4f18\u5316\n    \n    k = 1\n    # \u8bad\u7ec3\u5668\n    knn = KNeighborsClassifier(n_neighbors=k)\n    # \u8bad\u7ec3\n    knn.fit(X_train, y_train)\n    # \u9884\u6d4b\n    y_pred = knn.predict(X_test)\n    print(y_pred)\n    # \u51c6\u786e\u7387\n    print('\u6a21\u578b\u51c6\u786e\u7387\uff1a', accuracy_score(y_pred, y_test), '\\n')\n    # \u51c6\u786e\u7387\u4e00\u822c\u572840%-60%\n    ","9c9810b3":"|Attribute No.|Feature\/Attrubute Name|\u89e3\u91ca|\n|:--:|:--:|:--:|\n|1|Mean Hand GSR(in one minute)|\u624b\u5bfc\u7535\u7387\u5e73\u5747\u503c\uff08\u4e00\u5206\u949f\u5185\uff09|\n|2|Mean Foot GSR(in one minute)|\u811a\u5bfc\u7535\u7387\u5e73\u5747\u503c|\n|3|Mean EMG(in one minute)|\u808c\u7535\u4fe1\u53f7\u5e73\u5747\u503c|\n|4|rms EMG(in one minute)|\u808c\u7535\u4fe1\u53f7\u5747\u65b9\u6839|\n|5|RR(in one minute)|\u547c\u5438\u5e73\u5747\u503c|\n|6|Mean HR(in one minute)|\u5fc3\u7387\u5e73\u5747\u503c|","07abea2a":"# <center>Stress Recognition in Automobile - Driver 1<\/center>","24ddd70f":"* \u8be5notebook\u8c03\u7814\u62a5\u544a\u5b9e\u73b0\u4e86\u5229\u7528\u9a7e\u9a76\u4e2d\u7684\u751f\u7406\u4fe1\u53f7\u5b9e\u73b0\u4e86\u538b\u529b\u7684\u4e09\u5206\u7c7b\u9884\u6d4b\n* \u8c03\u7814\u62a5\u544a\u4f7f\u7528KNN\u5206\u7c7b\u9884\u6d4b\u6a21\u578b\uff0c\u5b9e\u73b0\u538b\u529b\u4e09\u5206\u7c7b\u8bc6\u522b\u6b63\u786e\u738740%-60%\uff0c\u540c\u7c7b\u8bba\u658760%-80%\n* \u7531\u4e8e\u65f6\u95f4\u548c\u91c7\u6837\u6570\u636e\u4e2a\u6570\u6240\u9650\uff0c\u9884\u6d4b\u51c6\u786e\u6027\u4e0d\u9ad8\uff0c\u540e\u671f\u53ef\u4ee5\u5145\u5206\u5206\u6790\u6570\u636e\u7279\u5f81\uff08\u53bb\u9664\u5f02\u5e38\u70b9\uff1b\u591a\u91c7\u6837\uff1b\u63d0\u53d6\u6709\u6548\u7279\u5f81\u7b49\uff09\uff0c\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\uff0c\u53ef\u4ee5\u8fbe\u523080%\u4ee5\u4e0a\u7684\u6b63\u786e\u7387","a08d49ae":"### 2\u3001drivedb\u6570\u636e\u5e93","4d539120":"### 5\u3001\u9884\u6d4b\u51c6\u786e\u6027","9fd50df2":"## \u4e00\u3001\u9a7e\u9a76\u4e2d\u7684\u538b\u529b\u8bc6\u522b\u4ecb\u7ecd","52be22b2":"### 1\u3001\u6570\u636e\u5c55\u793a","3c035abe":"## \u4e8c\u3001Notebook\u5b9e\u73b0","ea917e6c":"***\n***","a0d3b76a":"### 2\u3001\u5904\u7406\u6570\u636e","e8ca9ca5":"### 3\u3001\u76f8\u5173\u6027\u5206\u6790","d9778a46":"##### 1.3 \u672c\u7bc7notebook\u6982\u8981\u4ecb\u7ecd","f4e2c51c":"### 4\u3001\u5206\u7c7b\u9884\u6d4b","b9854a18":"* \u8bba\u6587\u7814\u7a76\u5728\u5b9e\u9645\u9a7e\u9a76\u4efb\u52a1\u671f\u95f4\u6536\u96c6\u548c\u5206\u6790\u751f\u7406\u6570\u636e\u4ee5\u786e\u5b9a\u9a7e\u9a76\u5458\u76f8\u5bf9\u538b\u529b\u6c34\u5e73\n* \u4f5c\u8005\u91c7\u96c6\u5f00\u653e\u9053\u8def\u4e2d\uff0c\u4e8c\u5341\u56db\u6b21\u9a7e\u9a76\u8fc7\u7a0b\u4e2d\u7684\u5fc3\u7535\u56fe\u3001\u808c\u7535\u56fe\u3001\u76ae\u80a4\u7535\u5bfc\u3001\u547c\u5438\u7b49\u751f\u7269\u4fe1\u53f7\n* \u4f5c\u8005\u4f7f\u7528\u91c7\u96c6\u5230\u7684\u751f\u7269\u4fe1\u53f7\u8fdb\u884c\u4e86\u4e24\u79cd\u5206\u6790\u3002\u7b2c\u4e00\u79cd\u4f7f\u7528112\u4e2a\u4e0d\u540c\u65f6\u523b\u7684\u751f\u7269\u4fe1\u53f7\uff0c\u5206\u6790\u538b\u529b\u7a0b\u5ea6\uff0c\u5206\u7c7b\u9884\u6d4b\u538b\u529b\u7a0b\u5ea6\uff1b\u7b2c\u4e8c\u79cd\u4f7f\u7528\u8fde\u7eed\u751f\u7269\u7535\u4fe1\u53f7\u5b9e\u65f6\u9884\u6d4b\u538b\u529b\u7a0b\u5ea6\n* \u8bba\u6587\u4e2d\u6ca1\u6709\u7ed9\u51fa\u5177\u4f53\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u548c\u6a21\u578b\uff0c\u6545\u8be5\u7bc7\u8c03\u7814\u62a5\u544a\u4e3b\u8981\u53c2\u8003\u4e86\u5176\u4ed6\u6587\u732e\u7684\u6a21\u578b","abf25823":"|\u540d\u79f0|\u6807\u5fd7|\u6837\u503c|\n|--|--|--|\n|\u91c7\u6837\u9891\u7387|fs|15.5|\n|\u4fe1\u53f7\u957f\u5ea6|sig_len|61499|\n|\u4fe1\u53f7\u6570\u91cf|n_sig|5|\n|\u57fa\u65e5\u671f|base_date|None|\n|\u57fa\u65f6\u95f4|base_time|None|\n|\u5355\u4f4d|units|['mV', 'mV', 'bpm', 'mV', 'mV']|\n|\u4fe1\u53f7\u540d\u79f0|sig_name|['ECG', 'foot GSR', 'HR', 'marker', 'RESP']|\n|\u5907\u6ce8|comments|[]|","aa5c482f":"##### 1.1 \u8bba\u6587\u89e3\u6790","715269a6":"##### 1.2 \u5176\u4ed6\u53c2\u8003\u6587\u732e","b58b1151":"\u4f7f\u7528KNN\u5206\u7c7b\u9884\u6d4b\uff0c\u51c6\u786e\u6027\u5728\u51c6\u786e\u7387\u572840%-60%","5d20f7b1":"## \u4e09\u3001\u8c03\u7814\u7ed3\u8bba","051b0aac":"|\u6807\u5fd7|\u540d\u79f0|\n|--|--|\n|ECG|\u5fc3\u7535\u56fe|\n|EMG|\u808c\u7535\u56fe|\n|foot GSR|\u811a\u5bfc\u7535\u7387|\n|hand GSR|\u624b\u5bfc\u7535\u7387|\n|HR|\u5fc3\u7387|\n|RESP|\u547c\u5438|\n|marker|\u6807\u8bb0\uff08\u7528\u6765\u5206\u9694\u9a7e\u9a76\u65f6\u6bb5\u7684\uff09|","b835b9d8":"\u4ece\u4ee5\u4e0a\u6570\u636e\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u53f8\u673a5\u30016\u30017\u30018\u30019\u300110\u300111\u300112\u300115\u300116\u5341\u4f4d\u4fe1\u606f\u662f\u8bb0\u5f55\u5b8c\u6574\u7684\uff08\u5168\u90e8\u4e03\u6761\u4fe1\u53f7\u548c\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff09\uff0c\u4e4b\u540e\u7684\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u5c31\u91c7\u7528\u8fd9\u5341\u4f4d\u53f8\u673a\u7684\u751f\u7269\u6570\u636e\uff08\u540e\u7eed\u7684\u53c2\u8003\u8bba\u6587\u5927\u591a\u5747\u4f7f\u7528\u8fd9\u5341\u6b21\u9a7e\u9a76\u4fe1\u606f\uff09","ab33f6be":"\u53ef\u4ee5\u770b\u5230\u538b\u529b\u7a0b\u5ea6\u4e0e\u811a\u7535\u5bfc\u7387\u3001\u808c\u7535\u4fe1\u53f7\u5747\u65b9\u6839\u6709\u4e2d\u7b49\u76f8\u5173\u7a0b\u5ea6\n\uff08\u82e5\u80fd\u4ed4\u7ec6\u53bb\u9664df\u4e2d\u7684\u5f02\u5e38\u6570\u636e\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u5f3a\u7684\u76f8\u5173\u6027\uff09","e3287acd":"\u76f8\u5173\u7cfb\u6570 0.8-1.0 \u6781\u5f3a\u76f8\u5173 \u3000 0.6-0.8 \u5f3a\u76f8\u5173 \u3000\u30000.4-0.6 \u4e2d\u7b49\u7a0b\u5ea6\u76f8\u5173 \u3000\u3000 0.2-0.4 \u5f31\u76f8\u5173 0.0-0.2 \u6781\u5f31\u76f8\u5173\u6216\u65e0\u76f8\u5173","9a6c98cd":"\u4ee5\u4e0b\u6570\u636e\u662f\u7b2c\u4e00\u7bc7\u53c2\u8003\u6587\u732e\u4e2d\u63d0\u53d6\u7684\u91cd\u8981\u53c2\u6570","2cb65292":"* \u300a[A Novel Method of Stress Detection using Physiological Measurements of Automobile Drivers](http:\/\/www.csjournals.com\/IJEE\/PDF5-2\/3.pdf)\u300b \u91cd\u70b9\n* \u300a[Correlation between Physiological Parameters of Automobile](http:\/\/csjournals.com\/IJEE\/PDF5-2\/2.pdf)\u300b\n* \u300a[Evaluation of Statistical Metrics by Using Physiological Data to Identify the Stress Level of Drivers](http:\/\/www.ipcbee.com\/vol78\/022-ICECB2014-S0007.pdf)\u300b\n* \u300a[Evaluation of the physiological data indicating the dynamic stress level of drivers](https:\/\/academicjournals.org\/journal\/SRE\/article-full-text-pdf\/6FF671320750)\u300b\n* \u5176\u4ed6","d8753ed6":"### 1\u3001notebook\u6982\u8981","df7fe7bd":"* [Stress Recognition in Automobile Drivers](https:\/\/www.physionet.org\/content\/drivedb\/1.0.0\/#files-panel) \uff0c\u5373 drivedb \u6570\u636e\u96c6\uff0c\u662f\u539f\u6587\u4f5c\u8005\u4e0a\u4f20\u5230PhysioNet\u7f51\u7ad9\u4e0a\u7684\u4e00\u4e2a\u6570\u636e\u96c6\u3002\u603b\u5171\u8bb0\u5f55\u4e8618\u6b21\u9a7e\u9a76\u4fe1\u606f\uff0c\u91cc\u9762\u8bb0\u5f55\u4e86\u6bcf\u6b21\u9a7e\u9a76\u7684\uff08\u5fc3\u7535\u56fe\u3001\u808c\u7535\u56fe\u3001\u624b\u5bfc\u7535\u7387\u3001\u811a\u5bfc\u7535\u7387\u3001\u5fc3\u7387\u3001\u547c\u5438\u3001\u5206\u6bb5\u6807\u8bb0\uff09\u4e03\u79cd\u4fe1\u606f\u3002\u4f46\u90e8\u5206\u6570\u636e\u7f3a\u5931\uff0c\u540e\u6839\u636e\u5206\u6790\u5904\u7406\u4ee5\u540e\uff0c\u9009\u53d6\u4e8610\u6b21\u6709\u6548\u7684\u9a7e\u9a76\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u3002","97d046a2":"* \u672c\u7bc7notebook\u7740\u91cd\u8fdb\u884c\u8bba\u6587\u4e2d\u7b2c\u4e00\u79cd\u5206\u6790\u7684\u5de5\u4f5c\uff0c\u5373\u6839\u636e\u751f\u7406\u6570\u636e\u5bf9\u538b\u529b\u7a0b\u5ea6\u8fdb\u884c\u4e09\u5206\u7c7b\uff08\u7b2c\u4e8c\u79cd\u5206\u6790\uff0c\u7f3a\u5c11\u6807\u8bb0\u96c6\uff09\n* \u9996\u5148\uff0c\u4ece[PhysioNet](https:\/\/www.physionet.org\/content\/drivedb\/1.0.0\/#files-panel)\u7f51\u7ad9\u4e0a\u4e0b\u8f7d\u8bba\u6587\u6570\u636e\u96c6\n* \u5bf9\u6570\u636e\u96c6\u7ed3\u6784\u548c\u6570\u636e\u5185\u5bb9\u8fdb\u884c\u5206\u6790\u5c55\u793a\n* \u5206\u6790\u6570\u636e\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u6e05\u6d17\uff0c\u63d0\u53d6\u8bad\u7ec3\u7279\u5f81\u548c\u6807\u7b7e\n* \u7279\u5f81\u7684\u76f8\u5173\u6027\u5206\u6790\uff0c\u9009\u53d6\u91cd\u70b9\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\n* \u4f7f\u7528KNN\u5206\u7c7b\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\n* \u5c55\u793a\u9884\u6d4b\u51c6\u786e\u5ea6\n* \u7ed3\u8bba\u603b\u7ed3"}}