{"cell_type":{"50650951":"code","620603b1":"code","a57ffa50":"code","09e11abe":"code","ec0154f5":"code","10bc05a6":"code","80b8b761":"code","6e69db57":"code","62ffb113":"code","4cfb2a75":"code","2f866a72":"code","958391ed":"code","1c985933":"code","60b4367a":"code","cf533665":"code","0fc284aa":"code","e69e0b91":"code","570d0265":"code","47be1643":"code","14c7f1e1":"code","45f79592":"code","3ff45833":"code","4a97eac9":"code","0c3cb122":"code","84f0d65e":"code","8c4be09e":"code","67bdb5f3":"code","02854837":"markdown","8098ca72":"markdown","5d592f8c":"markdown","777e1e1c":"markdown","6b111f57":"markdown"},"source":{"50650951":"# Imports","620603b1":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.feature_selection import mutual_info_classif, SelectKBest\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, confusion_matrix","a57ffa50":"# reading the spam data file \ndf = pd.read_csv('\/kaggle\/input\/spambase\/spambase_csv.csv')\ndf.head()","09e11abe":"df.shape","ec0154f5":"df.columns","10bc05a6":"df.info()","80b8b761":"# all dtypes are of type float or int (only numerical values)","6e69db57":"df.describe()","62ffb113":"df.isnull().sum() ","4cfb2a75":"# No null values..","2f866a72":"# scaling down the values using Standard Scalar","958391ed":"scaler = StandardScaler()\nscaled_df = pd.DataFrame(data = scaler.fit_transform(df.drop('class',axis=1)), columns=df[df.drop('class', axis=1).columns].columns)\nscaled_df.head()","1c985933":"# I have scaled down all values except target variable ('class') since its value is either 0 or 1","60b4367a":"X = scaled_df\ny = df['class']","cf533665":"# train_test_split before feature selection to avoid data leakage(overfitting)\n\nX_train, X_test, y_train , y_test = train_test_split(X, y ,test_size=0.2, random_state=42)","0fc284aa":"# for featuere selction I am using mutual_info_classif since it is a Classification problem.. ","e69e0b91":"mutual_info = mutual_info_classif(X_train, y_train) \nmutual_info","570d0265":"mutual_info = pd.Series(mutual_info)\nmutual_info.index = scaled_df.columns\nmutual_info.sort_values(ascending=False)","47be1643":"mutual_info.sort_values(ascending=False).plot.bar(figsize=(14,8))\nplt.tight_layout()","14c7f1e1":"# Selecting the top 40 feature ","45f79592":"sel_thirty_cols = SelectKBest(mutual_info_classif, k=40) \nsel_thirty_cols.fit(X_train, y_train)\nsel_thirty_cols.get_support()","3ff45833":"selected_features = scaled_df.columns[sel_thirty_cols.get_support()]\nselected_features","4a97eac9":"data = pd.DataFrame(data=scaled_df[selected_features], columns=selected_features)\ndata","0c3cb122":"x = data\ny = df['class']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","84f0d65e":"lr = LogisticRegression()\nlr.fit(X_train, y_train)","8c4be09e":"y_pred = lr.predict(X_test)","67bdb5f3":"print(f'The Accuracy score is {accuracy_score(y_test, y_pred)}')","02854837":"## Feature Selection ","8098ca72":"## Thank you","5d592f8c":"# Spam Classifier","777e1e1c":"## Feature Engineering","6b111f57":"# Model Creation "}}