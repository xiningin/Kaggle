{"cell_type":{"84786812":"code","4bf975db":"code","eac5b3a8":"code","241d5f6c":"code","9f1ad544":"code","a525db89":"code","f8b3145c":"code","e94af0ea":"code","24d48091":"code","53d49f9d":"code","7838584c":"code","10f5458d":"code","893246d8":"code","091932d1":"code","ff5282fb":"code","7a8a40c0":"code","d501fbec":"code","c9a6d974":"code","1edf7576":"code","4b91992c":"markdown","5907fe1d":"markdown","0d47cbb1":"markdown","2746d95d":"markdown","dd7c987b":"markdown"},"source":{"84786812":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4bf975db":"#reading the data\ndf= pd.read_csv('\/kaggle\/input\/iris-flower-dataset\/IRIS.csv')\ndf.head()","eac5b3a8":"df.info()","241d5f6c":"df.shape","9f1ad544":"df.isnull().sum()","a525db89":"df1=df['species']\ndf1.head()","f8b3145c":"df['species'].value_counts()","e94af0ea":"X= df.drop(['species'],axis='columns')\nX.head()","24d48091":"from sklearn.preprocessing import LabelEncoder\nlabel_encoder=LabelEncoder()","53d49f9d":"y=label_encoder.fit_transform(df1)\ny","7838584c":"X.shape","10f5458d":"y.shape","893246d8":"from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(solver='liblinear')","091932d1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=30)","ff5282fb":"model.fit(X_train, y_train)","7a8a40c0":"accuracy= model.score(X_test, y_test)\nprint('Accuracy of the model is {}'.format(accuracy))","d501fbec":"y_predicted = model.predict(X_test)\ny_predicted","c9a6d974":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_predicted)\ncm","1edf7576":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(6,4))\nsns.heatmap(cm, annot=True)\nplt.xlabel('Predicted')\nplt.ylabel('Truth')","4b91992c":"**here, only 1 time the value 1(Iris-versicolor) is predicted as 2(Iris-virginica)**\n\n**hence, accuracy 9.6**","5907fe1d":"# **Training and testing the model**","0d47cbb1":"# Multiclass Classification","2746d95d":"**no null values**","dd7c987b":"**Encoding categorical values**"}}