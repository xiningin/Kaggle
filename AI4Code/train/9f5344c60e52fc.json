{"cell_type":{"9c7b4ad5":"code","c4a397c7":"code","ff26f717":"code","89a29091":"code","04f007b5":"code","7ac50601":"code","bad6ec7a":"code","63a12a44":"code","9b4f7898":"code","f074819a":"code","eb2b8f27":"code","4758d1ce":"code","2add57f4":"code","4b4043ef":"code","5e520f4d":"code","712138b9":"code","566e3da3":"code","2e39f4fb":"code","3439c905":"code","1668b847":"code","adf4a1af":"code","9d886bec":"code","6a380fce":"code","eaec1223":"markdown","7bd6832f":"markdown","5b426760":"markdown","080b7b79":"markdown","35a6e660":"markdown","5c4ebe3e":"markdown","52b4fb55":"markdown","203bf221":"markdown"},"source":{"9c7b4ad5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c4a397c7":"import matplotlib.pyplot as plt\nimport seaborn as sns","ff26f717":"train=pd.read_csv(\"\/kaggle\/input\/sf-crime\/train.csv.zip\")\ntest=pd.read_csv(\"\/kaggle\/input\/sf-crime\/test.csv.zip\")\ntrain.head(3)","89a29091":"#\ub370\uc774\ud130\ud0c0\uc785\ud655\uc778\ntrain.info()\n#null\uac12 \uccb4\ud06c\ntrain.isnull().sum()","04f007b5":"#\uc885\uc18d\ubcc0\uc218 \ud0d0\uc0c9\nplt.figure(figsize=(10,5))\ntrain['Category'].value_counts().plot(kind='bar')\n# plt.xticks(rotation=-45)","7ac50601":"train[train['Category']=='NON-CRIMINAL'].head()\n#\ubc94\uc8c4\ub97c \uc800\uc9c0\ub978\uac8c \uc544\ub2cc \uacbd\uc6b0\ub3c4 \uc874\uc7ac\ud568. \uacbd\ucc30\uc11c \ubc29\ubb38 \ub370\uc774\ud130\uac00 \ub2e4 \uc788\ub294\ub4ef \ud568.\ntrain[train['Category']=='MISSING PERSON'].tail()","bad6ec7a":"# \ubc94\uc8c4 \uc885\ub958 \ud655\uc778\nprint(set(train['Category']))\nprint(len(set(train['Category'])))","63a12a44":"#object\ub9cc \ubf51\uae30\ncategory_feature=[col for col in train.columns if train[col].dtypes == 'object']\ncategory_feature.remove('Category')\ncategory_feature.remove('Descript')\ncategory_feature","9b4f7898":"import warnings \nwarnings.filterwarnings(action='ignore') #\uacbd\uace0 \uc81c\uac70\n\n#\uce7c\ub7fc\ubcc4\ub85c \ubc94\uc8c4\uc218 \uc0b4\ud3b4\ubcf4\uae30 - \uc694\uc77c, \uad00\ud560\uacbd\ucc30, \ud574\uacb0 \uc720\ubb34\nplt.figure(figsize=(20,10))\nfor i, col in enumerate(category_feature[1:4]) :\n    plt.subplot(1,3,i+1)\n    plt.title('{}'.format(col)) #\ud0c0\uc774\ud2c0\uc744 \ubcc0\uc218\uba85\uc73c\ub85c \uc9c0\uc815\n    plt.xticks(rotation=-90) #x\ucd95\uc774\ub984 \ud68c\uc804\n    ft=train[col].value_counts()\n    sns.barplot(ft.index,ft.values)","f074819a":"set(train['PdDistrict'])","eb2b8f27":"# \uad00\ud560\uad6c\uc5ed\ubcc4 \ubc94\uc8c4 pie chart \npd_list=list(set(train['PdDistrict']))\nplt.figure(figsize=(15,25))\nfor i ,col in enumerate(pd_list):\n    pd1=train.loc[train['PdDistrict']==col,:]\n    plt.subplot(5,2,i+1)\n    pd1['Category'].value_counts().plot.pie(autopct='%.1f %%')  #autopct='%.2f %%'\n    plt.title('{}'.format(col)) #\ud0c0\uc774\ud2c0\uc744 \ubcc0\uc218\uba85\uc73c\ub85c \uc9c0\uc815\n","4758d1ce":"#\ub144\ub3c4 \uc6d4 \uc77c\ubcc4 \ucc28\uc774 \ud655\uc778\ntrain2=train \ntrain2['year']=pd.to_datetime(train2[\"Dates\"]).dt.year  #to_datetime : \ub0a0\uc9dc\ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\ntrain2['month']=pd.to_datetime(train2[\"Dates\"]).dt.month\ntrain2['day']=pd.to_datetime(train2[\"Dates\"]).dt.day\ntrain2['hour']=pd.to_datetime(train2[\"Dates\"]).dt.hour","2add57f4":"#\ub144\ub3c4\ubcc4 \ubc94\uc8c4\uc218\nsns.countplot(train2['year'])","4b4043ef":"#\uc6d4\ubcc4 \ubc94\uc8c4\uc218\nsns.countplot(train2['month'])","5e520f4d":"#\uc6d4\ubcc4 \ubc94\uc8c4\uc218\nsns.countplot(train2['hour'])","712138b9":"train3=train2 \ntrain3_category=[col for col in train3.columns if train3[col].dtypes == 'object']\ntrain3=train3.drop(['Category','Descript'],axis=1)\ntrain3.head(3)","566e3da3":"test.head(3)","2e39f4fb":"print(len(train3))\nprint(len(test))","3439c905":"# \ubc94\uc8fc\ud615 \ub77c\ubca8\uc778\ucf54\ub529\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\npd_total=pd.concat([train3[['DayOfWeek','PdDistrict','Address']],test[['DayOfWeek','PdDistrict','Address']]],axis=0)","1668b847":"pd_total['le_week']=le.fit_transform(pd_total['DayOfWeek'])\npd_total['le_dstt']=le.fit_transform(pd_total['PdDistrict'])\npd_total['le_addr']=le.fit_transform(pd_total['Address'])","adf4a1af":"train4=pd_total.iloc[:874049,:]\ntest4=pd_total.iloc[874049:,:]","9d886bec":"train4=train4.drop(['DayOfWeek','PdDistrict','Address'],axis=1)","6a380fce":"sub=pd.read_csv('\/kaggle\/input\/sf-crime\/sampleSubmission.csv.zip')\nsub.head()","eaec1223":"\uc0c8\ubcbd\uc2dc\uac04\uc5d0\ub294 \ubc94\uc8c4\uc728\uc774 \uac10\uc18c\ud568. \uc0c8\ubcbd~\uc624\uc804\uc740 \ube44\uad50\uc801 \ubc94\uc8c4\uac74\uc218\uac00 \ub0ae\ub2e4","7bd6832f":"\ub531\ud788 \uc2dc\uac04\uc774 \uc9c0\ub0a0\uc218\ub85d \ubc94\uc8c4\uc218\uac00 \uc99d\uac00\ud55c\ub2e4\uac70\ub098 \uac10\uc18c\ud558\ub294 \uac70 \uac19\uc9c0\ub294 \uc54a\ub2e4.","5b426760":"# 1.EDA","080b7b79":"\uad00\ud560 \uad6c\uc5ed\ubcc4\ub85c \ubc94\uc8c4\uc885\ub958\uc758 \ube44\uc728\ub3c4 \ub2e4\ub984 \ud655\uc778","35a6e660":"# 2. \ubcc0\uc218\uc0dd\uc131\n","5c4ebe3e":"\uae08\uc694\uc77c\uc5d0 \uac74\uc218\uac00 \uac00\uc7a5 \ub9ce\uace0, \uc77c\uc694\uc77c\uc5d0 \uc801\uc74c. \uad00\ud560\uacbd\ucc30\uc11c\ubcc4\ub85c\ub3c4 \ucc28\uc774\ub098\ub294\uac83 \ud655\uc778. \ud574\uacb0 ","52b4fb55":"# 3.\ubaa8\ub378\ub9c1\n","203bf221":"## KNN\n"}}