{"cell_type":{"d64230c9":"code","e620abed":"code","813ad54e":"code","413d9118":"code","5803625b":"code","181e9b30":"code","acfac689":"code","a640f976":"code","bdef39e6":"code","18a8aabe":"markdown","59f8a744":"markdown","37fbfaf3":"markdown","3055179f":"markdown","38c1c022":"markdown","6bf55b7f":"markdown"},"source":{"d64230c9":"import pandas as pd\nimport numpy as np\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfrom IPython.core.display import display, HTML, Javascript\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\n## add custom css fonts \nstyling = \"\"\"@import url('https:\/\/fonts.googleapis.com\/css2?family=Bebas+Neue&family=Oswald:wght@500');@font-face { font-family: 'Bebas Neue, cursive'}\"\"\"\nHTML(\"<style>\"+styling+\"<\/style>\")\n\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"marvel\")","e620abed":"df_d = pd.read_csv('..\/input\/disney-movies-and-tv-shows\/disney_plus_titles.csv')","813ad54e":"# lower casing the title \ndf_d['title'] = df_d['title'].str.lower()\n\n# Removing punctuations\ndf_d['title'] = df_d['title'].str.replace('[^\\w\\s]','')\n\n# exploding country column\ndf_d = df_d.assign(country=df_d['country'].str.split(',')).explode('country')\ndf_d['country'] = df_d['country'].str.lstrip()\n\n# converting into proper date time format\ndf_d[\"date_added\"] = pd.to_datetime(df_d['date_added'])\ndf_d['year_added'] = df_d['date_added'].dt.year\ndf_d['month_added'] = df_d['date_added'].dt.month\n\n# finding and separating seasons from durations\ndf_d['season_count'] = df_d.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" in x['duration'] else \"\", axis = 1)\ndf_d['duration'] = df_d.apply(lambda x : x['duration'].split(\" \")[0] if \"Season\" not in x['duration'] else \"\", axis = 1)\n\n# renaming the listed_in column to genre\ndf_d = df_d.rename(columns={\"listed_in\":\"genre\"})\ndf_d['genre'] = df_d['genre'].apply(lambda x: x.split(\",\")[0])\n\ndf_d['Counter']=1","413d9118":"# Finding Marvel Entertainment Movies and making a Marvel_Y_N for Yes or No\nmarvel_keywords = ['marvel', 'xmen', 'shangchi', 'black widow']\npattern = '|'.join(marvel_keywords)\n\ndf_d['Marvel_Y_N'] = df_d['title'].str.contains(pattern)\ndf_d['Marvel_Y_N'] = df_d['Marvel_Y_N'].replace([True,False],['Yes','No'])\n\n# Marvel & Non Marvel Movie\ndf_d_y_mar = df_d[df_d['Marvel_Y_N']=='Yes']\ndf_d_n_mar = df_d[df_d['Marvel_Y_N']=='No']","5803625b":"# data\nfig = px.scatter(x=[2,2.1], y=[0,0], color_discrete_sequence=['#fff'])\n# styling\nfig.update_xaxes(visible=False) \nfig.update_yaxes(visible=False) \nfig.update_traces(textposition='top center')\nfig.update_layout(height=350, width=700, \n                  plot_bgcolor='#fafafa', paper_bgcolor='#fafafa',\n                  margin=dict(b=0,r=50,l=50,t=125),\n                  title={'text': \"<span style='font-size:45px; color=#444; font-family:Times New Roman'>Marvel Entertainment Movies<\/span><br>The movies produced by Marvel Entertainmnet in percentage\",\n                         'y':0.8, 'x':0.5, \n                         'xanchor': 'center', 'yanchor': 'top'},\n                  font=dict(size=9, color='#666'),\n                 )\nfig.add_layout_image(\n    dict(\n        source=\"https:\/\/i.imgur.com\/lBXEnoj.jpg\",\n        xref=\"paper\", yref=\"paper\",\n        x=0.42, y=0.6,\n        sizex=0.3, sizey=0.35,\n        xanchor=\"right\", yanchor=\"bottom\", sizing= \"contain\",\n    )\n)\nfig.add_layout_image(\n    dict(\n        source=\"https:\/\/i.imgur.com\/Q1frx0O.png\",\n        xref=\"paper\", yref=\"paper\",\n        x=0.91, y=0.28,\n        sizex=0.6, sizey=1,\n        xanchor=\"right\", yanchor=\"bottom\", sizing= \"contain\",\n    )\n)\nfig.add_annotation(dict(x=0.3, y=0.4, ax=0, ay=0,\n                    xref = \"paper\", yref = \"paper\", \n                    text= \"<span style='font-size:23px'><b>95.5%<\/b><\/span><br><br><span style='font-size:13px'>(Shows other than<br>Marvel Entertainment)<\/span>\"\n                  ))\nfig.add_annotation(dict(x=0.72, y=0.4, ax=0, ay=0,\n                    xref = \"paper\", yref = \"paper\", \n                    text= \"<span style='font-size:23px'><b>4.46%<\/b><\/span><br><br><span style='font-size:13px'>(Shows by Marvel<br>Entertainment)<\/span>\"\n                  ))\n","181e9b30":"# data\ndf_y_t = pd.DataFrame(df_d_y_mar['type'].value_counts()).reset_index()\ndf_n_t = pd.DataFrame(df_d_n_mar['type'].value_counts()).reset_index()\n#chart\nfig = make_subplots(rows=1, cols=2, \n                    specs=[[{\"type\": \"pie\"}, {\"type\": \"pie\"}]])\n\nfig.append_trace(go.Pie(labels=df_y_t['index'], values=df_y_t['type'], hole=0.7,\n                        marker_colors=['#3c6086','#6f93b9'],\n                        hoverinfo='label+percent+value', textinfo='label+percent',\n                        text=df_y_t['type'], name='Marvel'), 1, 1)\nfig.append_trace(go.Pie(labels=df_n_t['index'], values=df_n_t['type'], hole=0.7, \n                        rotation=345, marker_colors=['#446d6a','#5b928e'],\n                        hoverinfo='label+percent+value', textinfo='label+percent',\n                        text=df_n_t['type'], name='Not Marvel'), 1, 2)\nfig.update_layout(height=300, width=900, showlegend=False,\n                  margin=dict(t=100, b=20,r=20,l=20), \n                  title={'text': \"<span style='font-size:45px; color=#555; font-family:Times New Roman'>Marvel Vs Non Marvel Shows\",\n                         'y':0.85, 'x':0.5, \n                         'xanchor': 'center', 'yanchor': 'top'},\n                  font=dict(color='#666'), \n                  plot_bgcolor='#fafafa', paper_bgcolor='#fafafa',\n                  hoverlabel=dict(bgcolor=\"#333\", font_size=13, font_family=\"Lato, sans-serif\"))\nfig.add_annotation(dict(x=0.175, y=0.5,  align='center',\n                        xref = \"paper\", yref = \"paper\",\n                        showarrow = False, font_size=17,\n                        text=\"<span style='color:#2d4864'><b>Marvel<br>Shows<\/b><\/span>\"))\nfig.add_annotation(dict(x=0.855, y=0.5,  align='center',\n                        xref = \"paper\", yref = \"paper\",\n                        showarrow = False, font_size=16.5,\n                        text=\"<span style='color:#446d6a'><b>Non Marvel<br>Shows<\/b><\/span>\"))\n\nfig.show()","acfac689":"# data\ndf_d_r = df_d_y_mar['rating'].value_counts().reset_index()\n# chart\nfig = make_subplots(rows=1, cols=2, horizontal_spacing=0.04,\n    specs=[[{\"type\": \"table\"}, {\"type\": \"bar\"}]])\n\nfig.add_trace(\n    go.Table(\n        header=dict(\n            values=['Year','Titles','Ratings'],\n            font=dict(size=10),\n            align=\"left\"\n        ),\n        cells=dict(\n            values=[df_d_y_mar['release_year'].values.tolist(), df_d_y_mar['title'].values.tolist(), \n                    df_d_y_mar['rating'].values.tolist(),],\n            align = \"left\")\n    ),\n    row=1, col=1)\nfig.add_trace(go.Bar(x=df_d_r['index'], y=df_d_r['rating'], name='Ratings', \n                    marker_color=['#3c6086','#6f93b9','#6f93b9','#6f93b9','#6f93b9',\n                                  '#6f93b9','#6f93b9','#6f93b9']), row=1, col=2)\n# styling\nfig.update_xaxes(showgrid=False) \nfig.update_yaxes(visible=False) \nfig.update_layout(height=350,  \n                  plot_bgcolor='#fafafa', paper_bgcolor='#fafafa',\n                  margin=dict(b=20,r=50,l=70,t=115),\n                  title={'text': \"<span style='font-size:45px; color=#444; font-family:Times New Roman'>Marvel Entertainment Movies<\/span><br>The Movies Names & it's Ratings for <b><span style='color:#6D83AA'>Disney<\/span><\/b>\",\n                         'y':0.85, 'x':0.5, \n                         'xanchor': 'center', 'yanchor': 'top'},\n                  font=dict(color='#666'),\n                 )","a640f976":"# data\ndf_d_y_g = df_d_y_mar['genre'].value_counts().reset_index()\ndf_d_n_g = df_d_n_mar['genre'].value_counts().reset_index()[:7]\n\n# chart\nfig = make_subplots(rows=1, cols=2, vertical_spacing=0.04, horizontal_spacing=0.15) \nfig.add_trace(go.Bar(x=df_d_y_g['genre'], y=df_d_y_g['index'],\n                     marker_color=['#2d4864','#3c6086','#4c78a8','#4c78a8','#4c78a8','#4c78a8','#4c78a8'],\n                     name='Marvel', orientation='h'), \n                     row=1, col=1)\nfig.add_trace(go.Bar(x=df_d_n_g['genre'], y=df_d_n_g['index'], \n                     marker_color= ['#446d6a','#5b928e','#5b928e','#5b928e','#72b7b2','#72b7b2','#72b7b2'],\n                     name='Non Marvel', orientation='h'), \n                     row=1, col=2)\n# styling\nfig.update_xaxes(visible=False)\nfig.update_yaxes(showgrid=False, ticksuffix=' ', categoryorder='total ascending')\nfig.update_layout(height=370,  \n                  plot_bgcolor='#fafafa', paper_bgcolor='#fafafa',\n                  margin=dict(b=20,r=50,l=180,t=125),\n                  title={'text': \"<span style='font-size:45px; color=#555; font-family:Times New Roman'>Top 7 Geners<\/span><br>For Marvel Shows & Non Marvel Shows\",\n                         'y':0.85, 'x':0.5, \n                         'xanchor': 'center', 'yanchor': 'top'},\n                  font=dict(color='#666'),\n                  hovermode='y unified',\n                  hoverlabel=dict(bgcolor=\"#333\", font=dict(color='#888', size=13, family=\"Lato, sans-serif\")),\n                  legend=dict(title=\"\", orientation=\"h\", yanchor=\"bottom\", xanchor=\"center\",\n                              x=0.45, y=1.08, font_size=13))","bdef39e6":"# data\ndf_d_t = df_d_y_mar.groupby(['release_year','type']).agg({\"Counter\" : \"count\"}).reset_index() \ndf_d_y19 = df_d_t[df_d_t['release_year']<=1999]\ndf_d_y20 = df_d_t[df_d_t['release_year']>=2000]\n\n# chart\nfig = px.area(df_d_y20, x='release_year', y='Counter', color='type',\n        color_discrete_sequence=['#3c6086','#6f93b9'])\nfig.update_xaxes(showgrid=False)\nfig.update_yaxes(visible=False, showline=False)\nfig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig.update_layout(height=350, bargap=0.2, barnorm='percent', xaxis_title=\" \",\n                  plot_bgcolor='#fafafa', paper_bgcolor='#fafafa',\n                  title={'text': \"<span style='font-size:40px; color=#444; font-family:Times New Roman'>Updation Of Content For Marvel Shows<\/span><br>For 20's\",\n                         'y':0.85},\n                  font=dict(color='#666'), hovermode='x unified',\n                  margin=dict(b=20,r=70,l=70,t=120), xaxis=dict(tickmode='linear'),\n                  legend=dict(title=\"\", orientation=\"h\", yanchor=\"bottom\", xanchor=\"center\",\n                              x=0.45, y=1, font_size=13))","18a8aabe":"<div align=\"center\"><p style=\"font-family: 'Bebas Neue, cursive';font-size:32px;color:#555\">Cleaning Data<\/p><\/div>","59f8a744":"<div align=\"center\"><p style=\"font-family: 'Bebas Neue, cursive';font-size:40px;color:#555\">Data Summary<\/p><\/div>\n<br>\n\nThis notebook compares the shows produced by Marvel Entertainment in Disney dataset with other shows. \nI added some columns such as ```year_added```, ```month_added```, ```season_count``` & ```Marvel_Y_N``` for gaining insights.\n* year_added, month_added: Added Year & Month\n* season_count: Separating season from duration col\n* Marvel_Y_N: Yes or No for containing movies from Marvel Entertainment","37fbfaf3":"<div align=\"center\"><p style=\"font-family: 'Bebas Neue, cursive';font-size:40px;color:#555\">Data Visualization<\/p><\/div>","3055179f":"<div align=\"center\"><p style=\"font-family: 'Bebas Neue, cursive';font-size:40px;color:#555\">Marvel Entertainment<\/p><\/div>\n\n![image.png](attachment:dc8658d1-7aab-44c3-9227-39cd394b2744.png)\n<br><br>\n2019, November 12 is the Disney+ Day! Disney+ will offer thousands of family-friendly movies and TV shows from Disney proper, Pixar, Marvel and the Star Wars franchise, along with new Fox acquisitions, National Geographic and The Simpsons. \nAt an initial cost of dollar 6.99 per month or dollar 69.99 per year\u2014for a subscription that will allow simultaneous streaming on up to. There will be Four devices, with the option to download content for offline viewing and no additional charge for 4K video\u2014the service easily undercuts Netflix, whose monthly options range from dollar 8.99 to dollar 15.99.","38c1c022":"## Importing Library\n<hr>","6bf55b7f":"### Notebook is still in progress.\n\nRefrence:<br>\n[Introduction to Disney+](https:\/\/time.com\/5662647\/disney-plus-streaming-tv-launch\/)"}}