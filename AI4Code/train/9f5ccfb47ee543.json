{"cell_type":{"2c24c728":"code","cf90a169":"code","b4a44f77":"code","7797e607":"code","1cb334d4":"code","da332dfa":"code","94108af2":"code","f1875422":"code","bf7dd42b":"code","4dc985b7":"code","08951896":"code","107c0053":"code","35a90bb8":"code","3b9ff843":"code","adb0aa69":"code","487f73b3":"code","718e9cb7":"code","97800836":"code","55ee5ac6":"code","1459ab0d":"code","e1e16ba2":"code","ffac2505":"code","f31bf863":"code","0f03e91f":"code","5c8c1ffa":"code","5757b1af":"code","90e42b97":"code","4a59f229":"code","70f284b3":"code","9800c530":"code","abe33053":"code","29aab58f":"code","37d63bee":"markdown","730469f5":"markdown","ea7fc8cf":"markdown","edcf846e":"markdown","73a5e694":"markdown","edee19a8":"markdown","d3d8ae8d":"markdown","c2739a56":"markdown","b7c97ac4":"markdown","ad7799af":"markdown","15a475c3":"markdown"},"source":{"2c24c728":"import pandas as pd\nimport numpy as np\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt   \n\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\n\n\nimport tensorflow as tf\n\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import Model\nfrom tensorflow.keras.utils import to_categorical","cf90a169":"wine_data = datasets.load_wine()","b4a44f77":"print(wine_data['DESCR'])","7797e607":"data = pd.DataFrame(data = wine_data['data'], columns = wine_data['feature_names'])\n\ndata['target'] = wine_data['target']\n\ndata.sample(5)","1cb334d4":"data.shape","da332dfa":"data.describe().T","94108af2":"data.isna().sum()","f1875422":"data['target'].value_counts()","bf7dd42b":"sns.distplot(data['alcohol'],kde=1)","4dc985b7":"plt.figure(figsize=(8, 6))\n\nsns.boxplot('target', 'alcohol', data = data)\n\nplt.xlabel('class', fontsize = 20)\nplt.ylabel('alcohol', fontsize = 20)\n\nplt.show()","08951896":"plt.figure(figsize=(8, 6))\n\nsns.boxplot('target', 'magnesium', data = data)\n\nplt.xlabel('class', fontsize = 20)\nplt.ylabel('magnesium', fontsize = 20)\n\nplt.show()","107c0053":"features = data.drop('target', axis=1)\n\ntarget = data[['target']]","35a90bb8":"features.columns","3b9ff843":"target.sample(5)","adb0aa69":"target = to_categorical(target, 3)\n\ntarget","487f73b3":"standardScaler = StandardScaler()\n\nprocessed_features = pd.DataFrame(standardScaler.fit_transform(features), \n                                columns=features.columns,\n                                index=features.index)\n\nprocessed_features.describe().T","718e9cb7":"from sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(processed_features, \n                                                    target, \n                                                    test_size = 0.2, \n                                                    random_state=1)","97800836":"x_train.shape, y_train.shape","55ee5ac6":"x_test.shape, y_test.shape","1459ab0d":"class WineClassificationModel(Model):\n    \n    def __init__(self, input_shape):\n        \n        super(WineClassificationModel, self).__init__()\n\n        self.d1 = layers.Dense(128, activation = 'relu', input_shape = [input_shape])\n        self.d2 = layers.Dense(64, activation = 'relu')\n        \n        self.d3 = layers.Dense(3, activation = 'softmax')\n\n    def call(self, x):\n        \n        x = self.d1(x)\n        x = self.d2(x)\n\n        x = self.d3(x)\n        \n        return x","e1e16ba2":"model = WineClassificationModel(x_train.shape[1])\n\nmodel.compile(optimizer = keras.optimizers.SGD(lr = 0.001),\n             loss = tf.keras.losses.CategoricalCrossentropy(),\n             metrics = ['accuracy'])","ffac2505":"num_epochs = 100","f31bf863":"training_history = model.fit(x_train.values, \n                             y_train, \n                             validation_split = 0.2, \n                             epochs = num_epochs,\n                             batch_size = 48)","0f03e91f":"training_history.history.keys()","5c8c1ffa":"train_acc = training_history.history['accuracy']\ntrain_loss = training_history.history['loss']\n\nprecision = training_history.history['val_accuracy']\nrecall = training_history.history['val_loss']\n\nepochs_range = range(num_epochs)\n\nplt.figure(figsize=(14, 8))\n\nplt.subplot(1, 2, 1)\n\nplt.plot(epochs_range, train_acc, label='Training Accuracy')\nplt.plot(epochs_range, train_loss, label='Training Loss')\n\nplt.title('Training')\nplt.legend()\n\nplt.subplot(1, 2, 2)\n\nplt.plot(epochs_range, precision, label='Validation Accuracy')\nplt.plot(epochs_range, recall, label='Validation Loss')\n\nplt.title('Validation')\nplt.legend()","5757b1af":"score = model.evaluate(x_test, y_test)\n\nscore_df = pd.Series(score, index = model.metrics_names)\n\nscore_df","90e42b97":"y_pred = model.predict(x_test)\n\ny_pred[:10]","4a59f229":"y_pred = np.where(y_pred>=0.5, 1, y_pred)\n\ny_pred = np.where(y_pred<0.5, 0, y_pred)","70f284b3":"y_pred[:10]","9800c530":"y_test[:10]","abe33053":"accuracy_score(y_test, y_pred)","29aab58f":"#End of Code","37d63bee":"### Visualisation","730469f5":"### Predicting the model","ea7fc8cf":"### Splitting the data","edcf846e":"### Building the model","73a5e694":"### Model evaluation","edee19a8":"Alcohol content in each class ","d3d8ae8d":"### To dataframe","c2739a56":"Score","b7c97ac4":"### Importing libraries","ad7799af":"### Splitting dataset","15a475c3":"### Loading the dataset"}}