{"cell_type":{"62188b9b":"code","98c20bf1":"code","56438e8a":"code","8a41cfe3":"code","48507e94":"code","0ddc229d":"code","cf1501cb":"code","d765dbbb":"code","f0f8ec1c":"code","6836f04a":"code","3bb2d8f5":"code","d03752fa":"code","e18d5ac1":"code","c52ab850":"code","056cf336":"code","0e0aff97":"code","d9c77e37":"code","1a5b0b32":"code","30d6a2f5":"code","697ae4b4":"code","593c26db":"markdown","6d408122":"markdown","1721bfba":"markdown","fc923331":"markdown","55304072":"markdown","62998316":"markdown","a3c32754":"markdown","bdd9218e":"markdown","82d1fa18":"markdown","3a0ca14d":"markdown","802d54d9":"markdown","976a2e28":"markdown","3044cf29":"markdown","f78eabd5":"markdown","712400b1":"markdown","8b846c4b":"markdown","669d4f4d":"markdown","6177c99a":"markdown","665ccb78":"markdown","c17db6e1":"markdown","db1dd6df":"markdown","5507d719":"markdown","eb929352":"markdown","2085bf65":"markdown","777c1f97":"markdown"},"source":{"62188b9b":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nplt.style.use('seaborn')","98c20bf1":"submission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","56438e8a":"fig,ax = plt.subplots(1,2,figsize=(10,5))\ntrain.isnull().sum().plot.barh(rot=0,ax=ax[0],title='Number of missing values in the train dataset');\ntest.isnull().sum().plot.barh(rot=0,ax=ax[1], title='Number of missing values in the test dataset');\nplt.tight_layout()","8a41cfe3":"full_data = pd.concat([train,test],ignore_index=False)\nfull_data[:3]","48507e94":"missing_age_map = full_data.groupby(['Sex','Pclass','Parch','Embarked'],as_index=False).agg({'Age':'mean'})\n\ntrain_age_merge = train.loc[train.Age.isnull(),:].drop(['Age'],axis=1).merge(missing_age_map,on=['Sex','Pclass','Parch','Embarked'],how='inner')\ntrain_age_merge.index = train.loc[train.Age.isnull(),:].index\ntrain.loc[train.Age.isnull(),'Age'] = train_age_merge['Age']\n\ntest_age_merge = test.loc[test.Age.isnull(),:].drop(['Age'],axis=1).merge(missing_age_map,on=['Sex','Pclass','Parch','Embarked'],how='inner')\ntest_age_merge.index = test.loc[test.Age.isnull(),:].index\ntest.loc[test.Age.isnull(),'Age'] = test_age_merge['Age']\n\ntrain.Age.fillna(full_data.Age.mean(),inplace=True)\ntest.Age.fillna(full_data.Age.mean(),inplace=True)","0ddc229d":"train['Has_Cabin'] = train[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)\ntest['Has_Cabin'] = test[\"Cabin\"].apply(lambda x: 0 if type(x) == float else 1)","cf1501cb":"train['Embarked'].fillna('S',inplace=True)\ntest['Embarked'].fillna('S',inplace=True)","d765dbbb":"fig,ax = plt.subplots(1,2,figsize=(10,5))\ntrain.isnull().sum().plot.barh(rot=0,ax=ax[0],title='Number of missing values in the train dataset');\ntest.isnull().sum().plot.barh(rot=0,ax=ax[1], title='Number of missing values in the test dataset');\nplt.tight_layout()","f0f8ec1c":"f = pd.concat([train,test],ignore_index=False).copy()\nbins = [0,4,8,16,32,48,64,75,120]\nbins_labels = ['1-4','4-8','8-16','16-32','32-48','48-64','64-75','75+']\nf['AgeGroup'] = pd.cut(f.Age,bins=bins,labels=bins_labels)\nf[:3]","6836f04a":"pd.crosstab(f.Sex,f.AgeGroup).plot.bar(rot=0,cmap='Paired',figsize=(12,7));","3bb2d8f5":"sns.heatmap(f[['Pclass','Sex','Age','Parch','Fare','Embarked','Has_Cabin']].corr(),annot=True);","d03752fa":"import xgboost as xgb\nfrom sklearn import metrics\nfrom sklearn.model_selection import GridSearchCV","e18d5ac1":"grid_params = {\n        'min_child_weight': [1, 5, 10],\n        'gamma': [0.5, 1, 1.5, 2, 5],\n        'subsample': [0.6, 0.8, 1.0],\n        'colsample_bytree': [0.6, 0.8, 1.0],\n        'max_depth': [3, 4, 5],\n        'n_estimators': [100,300,600,1000]\n        }","c52ab850":"x_cols = [\n    'Pclass',\n    'Sex',\n    'Age',\n    'Parch',\n    'Fare',\n    'Embarked',\n    'Has_Cabin'\n]","056cf336":"encoding_maps = dict()\nfor col,tp in zip(x_cols,train[x_cols].dtypes):\n    if tp == 'object':\n        encoding_maps[col] = dict(zip(full_data[col].unique(),list(range(full_data[col].nunique()+1))))\n        train[col] = train[col].replace(encoding_maps[col])\n        test[col] = test[col].replace(encoding_maps[col])\n        \nprint('Encoding Done')","0e0aff97":"xgc = xgb.XGBClassifier()\ngrid = GridSearchCV(xgc,grid_params,cv=5,verbose=10)\ngrid.fit(train[x_cols],train[['Survived']])","d9c77e37":"grid.best_params_","1a5b0b32":"results = test.copy()\nresults['y_pred'] = grid.best_estimator_.predict(test[x_cols])","30d6a2f5":"xgb.plot_importance(grid.best_estimator_);","697ae4b4":"results[['PassengerId','y_pred']].rename(columns={'y_pred':'Survived'}).to_csv('submission.csv',index=False)","593c26db":"![https:\/\/img.ti-media.net\/wp\/uploads\/sites\/46\/2019\/02\/New-Project-86-920x518.jpg](https:\/\/img.ti-media.net\/wp\/uploads\/sites\/46\/2019\/02\/New-Project-86-920x518.jpg)","6d408122":"**Grid Search**","1721bfba":"**Number of Missing Values**","fc923331":"**Fill missing values for Age**","55304072":"## EDA","62998316":"**Training Columns**","a3c32754":"**Feature Importance**","bdd9218e":"## Pre-Processing","82d1fa18":"**Manual One hot encoding**","3a0ca14d":"**Results**","802d54d9":"**Defining age groups**","976a2e28":"# Titanic","3044cf29":"**Total number of passangers by sex and age group**","f78eabd5":"**Feature Correlation**","712400b1":"**Check missing values, again**","8b846c4b":"**Merge of train & test**","669d4f4d":"**Grid Search Params**","6177c99a":"## Modelling","665ccb78":"**Submission**","c17db6e1":"## Imports","db1dd6df":"## Data","5507d719":"![https:\/\/i.pinimg.com\/originals\/35\/69\/38\/3569386ba199ae77a8bf71f7ed99ed32.jpg](https:\/\/i.pinimg.com\/originals\/35\/69\/38\/3569386ba199ae77a8bf71f7ed99ed32.jpg)","eb929352":"**Flags for Cabin**","2085bf65":"**Fill missing Embarked**","777c1f97":"**Best Params**"}}