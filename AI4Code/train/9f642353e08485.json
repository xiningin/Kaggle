{"cell_type":{"b784ed2e":"code","c2af83da":"code","ccaca4d2":"code","20d3ba85":"code","7dbfb7f0":"code","92928eae":"code","2dcaa635":"code","d9863cd4":"code","28cc8d3d":"code","a819547e":"code","24d0fb9a":"code","622b8171":"code","8b90fb41":"code","1649506e":"code","4e2b2200":"code","a97d1727":"code","49c1ba3f":"code","3c0e6585":"code","1c7fd443":"code","41d1488b":"code","3676649e":"code","c16f0e04":"code","71cd677f":"code","1fa91856":"code","6a72aa53":"code","dd5fb647":"code","27bb5b1c":"code","29b0b769":"code","2753f874":"code","ee7db853":"code","cf40813f":"code","cb8efa89":"code","4d1f7fa8":"code","e2f9d68e":"code","2c0eeeb4":"code","b81ad979":"code","297e7a34":"code","5e71f7de":"code","79ce353b":"code","dc080d20":"code","f487daba":"code","b1e35913":"code","5a3dde62":"markdown","df7432ef":"markdown","486aa588":"markdown","6e3d66a7":"markdown","ee8733b1":"markdown","223138df":"markdown","5decd397":"markdown","ae115bdb":"markdown","d1a492d8":"markdown","32f59c60":"markdown","250c04c6":"markdown","4a0b6486":"markdown","780907c1":"markdown","1e1002c4":"markdown","55b7797e":"markdown","a855890a":"markdown","a22f307c":"markdown"},"source":{"b784ed2e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom google.cloud import bigquery\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c2af83da":"GB = 1000**3\nCSA = 'CRIM SEXUAL ASSAULT'\nCLSA = 'CRIMINAL SEXUAL ASSAULT'\nviolent_crimes = ('BATTERY', 'ROBBERY', 'WEAPONS VIOLATION', 'OFFENSE INVOLVING CHILDREN', 'SEX OFFENSE',\n                 'CRIM SEXUAL ASSAULT', 'ARSON', 'KIDNAPPING', 'CRIMINAL SEXUAL ASSAULT', 'HOMICIDE', 'HUMAN TRAFFICKING')\n\ndry_run_config = bigquery.QueryJobConfig(dry_run = True)\nsafe_conifg = bigquery.QueryJobConfig(maximum_bytes = 3*GB)\n\ndef get_bytes(query):\n    dry_run_job = client.query(query, job_config = dry_run_config)\n    print(f'This query will take {dry_run_job.total_bytes_processed \/ GB}')\n    \n    \ndef crimify(df, aux = []):\n    if aux:\n            df = df.replace({'crime' : {'CRIMINAL SEXUAL ASSAULT' : 'CRIM SEXUAL ASSAULT'}}).groupby(by = ['year', 'crime', *aux]).sum().reset_index()\n    else:\n        df = df.replace({'crime' : {'CRIMINAL SEXUAL ASSAULT' : 'CRIM SEXUAL ASSAULT'}}).groupby(by = ['year', 'crime']).sum().reset_index()\n    return df\n\ndef pad(df):\n    yr = pd.DataFrame({'year': range(2001, 2022)})\n    crimes = pd.DataFrame({'crime' : df.crime.unique()})\n    merge = pd.merge(left = yr, right = crimes, how = 'cross')\n    df = pd.merge(left = df, right = merge, on = ['year', 'crime'], how = 'right')\n    df = df.fillna(0)\n    return df","ccaca4d2":"client = bigquery.Client()\ndataset_ref = client.dataset('chicago_crime', project = 'bigquery-public-data')\ndataset = client.get_dataset(dataset_ref)\ntables = list(client.list_tables(dataset))\nfor table in tables:\n    print(table.table_id)","20d3ba85":"database = '`bigquery-public-data.chicago_crime.crime`'\ntable_ref = dataset_ref.table('crime')\ntable = client.get_table(table_ref)\ndf = client.list_rows(table, max_results = 5).to_dataframe()\ndf","7dbfb7f0":"table.schema","92928eae":"cardinality = f'''\n            SELECT year, primary_type as crime, COUNT(1) as total\n            FROM {database}\n            group by year, primary_type\n            ORDER BY year DESC, total DESC\n            '''\nget_bytes(cardinality)","2dcaa635":"cardinalty_query = client.query(cardinality)\ncardinality_df = cardinalty_query.to_dataframe()\ncardinality_df","d9863cd4":"cardinality_df['crime'].value_counts()","28cc8d3d":"dv = f'''\n            SELECT year, primary_type as crime, description\n            FROM {database}\n            WHERE primary_type = 'DOMESTIC VIOLNECE'\n            OR (description like '%DOMESTIC%')\n            group by year, crime, description\n            '''\nget_bytes(dv)","a819547e":"dv_query = client.query(dv)\ndv_df = dv_query.to_dataframe()\ndv_df = dv_df.sort_values(by = 'year')\ndv_df","24d0fb9a":"dv_df.loc[dv_df['crime'] == 'OTHER OFFENSE']","622b8171":"violent_year_q = f'''\n            SELECT DISTINCT year, primary_type as crime, count(primary_type) OVER (Partition by primary_type, year) as offenses,\n            100.0 * count(primary_type) OVER (partition by primary_type, year) \/ count(primary_type) OVER (partition by year) as ratio\n            FROM {database}\n            WHERE primary_type in {violent_crimes}\n            ORDER BY year DESC, offenses DESC\n            '''\nget_bytes(violent_year_q)","8b90fb41":"violent_year_query = client.query(violent_year_q)\nviolent_year = violent_year_query.to_dataframe()\nviolent_year","1649506e":"fig, axis = plt.subplots(1, 2, figsize = (20, 10))\naxis = axis.flatten()\nsns.barplot(x = 'year', y = 'offenses', hue = 'crime', data = violent_year, ax = axis[0])\naxis[0].legend(ncol = 2)\naxis[0].set_ylim(0, 110000)\naxis[0].set_title('Violent Crime Totals Over the Years')\naxis[0].set_xticklabels(labels = axis[0].get_xticklabels(), rotation = 60)\n\nsns.barplot(x = 'year', y = 'ratio', hue = 'crime',  data = violent_year, ax = axis[1])\naxis[1].legend(ncol = 2)\nplt.ylim(0, 100)\naxis[1].legend(ncol = 2)\naxis[1].set_ylim(0, 100)\naxis[1].set_title('Percentage of All Violent Crimes')\naxis[1].set_xticklabels(labels = axis[1].get_xticklabels(), rotation = 60);","4e2b2200":"violent_year.columns","a97d1727":"#plotly has some issues with missing categorical data: DV is missing in all years but 2001, which will cause animation issues, such as bars shifting to places they should not be, and the like.\nviolent_year = violent_year.drop(violent_year.loc[violent_year['crime'] == 'DOMESTIC VIOLENCE'].index)\nviolent_year = violent_year.dropna()\nviolent_year_update = crimify(violent_year)\nviolent_year = pad(violent_year)\nviolent_year_update = violent_year_update.sort_values(by = ['year', 'offenses'], ascending = [True, False])\n","49c1ba3f":"y_limit = max(violent_year['offenses']) * 1.1\ncrime_counts = px.bar(violent_year_update, x = 'crime', y = 'offenses', color = 'crime', animation_frame = 'year', title = 'Number of Offenses for Each Crime', width = 1000, height = 500)\ncrime_counts.update_layout(\n                        yaxis_range = (0, y_limit),\n                        title = {'x' : 0.5},\n                        xaxis_title = 'Crime',\n                        sliders = [{'yanchor' : 'bottom', 'y' : -0.4}])\ncrime_counts.show()","3c0e6585":"violent_location_q = f'''\n            SELECT DISTINCT year, primary_type,  location_description as location,\n            count(primary_type) OVER (Partition by year, location_description, primary_type) as offenses,\n            100.0 * COUNT(primary_type) OVER (PARTITION by year, location_description, primary_type) \/ COUNT(primary_type) OVER (PARTITION by year, primary_type) as ratio\n            FROM {database}\n            WHERE primary_type in {tuple(violent_crimes)}\n            ORDER BY year DESC, offenses DESC\n            '''\nget_bytes(violent_location_q)","1c7fd443":"violent_location_query = client.query(violent_location_q)\nviolent_location = violent_location_query.to_dataframe()\nviolent_location.head()","41d1488b":"violent_location.rename(columns = {'primary_type' : 'crime'}, inplace = True)\nviolent_location['location'].value_counts()","3676649e":"#Initially this was a loop much like the previous iteration for crime rates, however that took 11s to execute. Profiling told me that masking took up a while, so I moved the appropriate masks out of the loops I could, and then that took 5s.\n#Replace + groupby is significantly faster\nviolent_location = violent_location.copy()\nviolent_location = violent_location.replace({'crime' : {CLSA: CSA}}).groupby(by = ['year', 'location', 'crime'], sort = False).sum().reset_index()\nright = violent_location.groupby(by = ['year', 'crime'], sort = False).sum().reset_index()\n\n#I wonder if there's any easier way to do this\nviolent_location = pd.merge(left = violent_location, right = right,\n                                  on = ['year', 'crime'])\nviolent_location['ratio'] = violent_location['offenses_x'] \/violent_location['offenses_y'] * 100\nviolent_location.drop(columns = ['offenses_y', 'ratio_x', 'ratio_y'], inplace = True)\nviolent_location.rename(columns = {'offenses_x' : 'offenses'}, inplace = True)\nviolent_location.loc[violent_location.crime == CSA]\n","c16f0e04":"def location_update(df, contains, new_value):\n    if type(contains) == set:\n        df.loc[df.query('(location in @contains)').index, 'location'] = new_value\n    else:\n        df.loc[df['location'].str.contains(contains), 'location'] = new_value\n    return df","71cd677f":"#Preparing a df for plotly, which requires having all categoricals at all stages, it will also prevent some wonky animations, such as parts of barplots flying ontop of other barplots\nviolent_location = violent_location.drop(index = violent_location.loc[violent_location.crime == 'DOMESTIC VIOLENCE'].index)\nviolent_location = location_update(violent_location, 'HOSPITAL', 'HOSPITAL')\nviolent_location = location_update(violent_location, 'CTA ', 'CTA RELATED')\nviolent_location = location_update(violent_location, 'CHA ', 'CHA RELATED')\nviolent_location = location_update(violent_location, 'VEHICLE', 'VEHICLE')\nviolent_location = location_update(violent_location, 'TRUCK', 'VEHICLE')\nviolent_location = location_update(violent_location, 'TAXI', 'VEHICLE')\nviolent_location = location_update(violent_location, 'AUTO', 'VEHICLE')\nviolent_location = location_update(violent_location, 'SCHOOL', 'SCHOOL')\nviolent_location = location_update(violent_location, 'COLLEGE', 'SCHOOL')\nviolent_location = location_update(violent_location, 'RESIDENTIAL', 'HOME\/RESIDENCE')\nviolent_location = location_update(violent_location, 'HOUSE', 'HOME\/RESIDENCE')\nviolent_location = location_update(violent_location, {'HOME', 'APARTMENT', 'RESIDENCE'}, 'HOME\/RESIDENCE')\nviolent_location = location_update(violent_location, 'RESIDENCE', 'HOME\/RESIDENCE')\nviolent_location = location_update(violent_location, 'HOTEL', 'HOTEL\/MOTEL')\nviolent_location = location_update(violent_location, 'MOTEL', 'HOTEL\/MOTEL')\nviolent_location = location_update(violent_location, {'HOME', 'APARTMENT', 'RESIDENCE'}, 'HOME\/RESIDENCE')\nviolent_location = location_update(violent_location, 'CHURCH', 'FAITH RELATED')\nviolent_location = location_update(violent_location, 'CEMETARY', 'FAITH RELATED')\nviolent_location = location_update(violent_location, 'FUNERAL', 'FAITH RELATED')\nviolent_location = location_update(violent_location, 'OTHER', 'OTHER')\nviolent_location = location_update(violent_location, 'ALLEY', 'STREET')\nviolent_location = location_update(violent_location, 'SIDEWALK', 'STREET')\n\nviolent_location = violent_location.groupby(by = ['year', 'crime', 'location']).sum().reset_index()\nviolent_location = location_update(violent_location, 'AIRPORT', 'AIRPORT RELATED')\n\nviolent_location['location'].nunique()\nviolent_location.loc[(violent_location.crime == 'KIDNAPPING') & (violent_location.location == 'SCHOOL')]","1fa91856":"violent_location = violent_location.groupby(by = ['year', 'crime', 'location']).sum().reset_index()","6a72aa53":"def get_locations(df, crimes, min_ratio):\n    df = df.copy() #Copy here prevents overriding the value by the next line\n    locs = set(df.query('(crime in @crimes) & (ratio >= @min_ratio)').location.unique())\n    df.loc[df.query('location not in @locs').index, 'location'] = 'OTHER'\n    df = df.groupby(by = ['year', 'location', 'crime']).sum().reset_index()\n    temp = df.query('(crime in @crimes)')\n    yr_df = pd.DataFrame({'year': range(2001, 2022)})\n    crime_df = pd.DataFrame({'crime' : temp['crime'].unique()})\n    loc_df = pd.DataFrame({'location' : temp['location'].unique()})\n    merged = pd.merge(left = yr_df, right = crime_df, how = 'cross')\n    merged = pd.merge(left = merged, right = loc_df, how = 'cross')\n    temp2 = pd.merge(left = temp, right = merged, on = ['year', 'crime', 'location'], how = 'right')\n    temp2 = temp2.fillna(0)\n    return temp2","dd5fb647":"not_battery_mask = (violent_location.crime != 'BATTERY') & (violent_location.crime != 'HOMICIDE') \nnot_sex_mask = (violent_location.crime != 'HUMAN TRAFFICKING') & (violent_location.crime != 'CRIM SEXUAL ASSAULT') & (violent_location.crime != 'SEX OFFENSE')\nvl_plot = get_locations(violent_location, violent_location['crime'].loc[not_battery_mask & not_sex_mask].unique(), min_ratio = 5)\n#vl_plot.loc[(vl_plot.crime == 'KIDNAPPING') & (vl_plot.location == 'SCHOOL')]","27bb5b1c":"location_counts = px.density_heatmap(vl_plot, x = 'crime', y = 'location', z = 'ratio', animation_frame = 'year', animation_group = 'crime', range_color = (0, 30), labels = {'location': 'Location of Offenses','crime': 'Crime'}, title = '<b>Distribution of Offenses<\/b> <br>(min 5%)', height = 750)\nlocation_counts.update_layout(title = {'x': 0.5})\nlocation_counts.show()","29b0b769":"vl_plot_bat = get_locations(violent_location, violent_location.loc[~not_battery_mask, 'crime'].unique(), min_ratio = 5)\nvl_plot_bat = vl_plot_bat.fillna(0)","2753f874":"location_counts_bat = px.density_heatmap(vl_plot_bat, x = 'crime', y = 'location', z = 'ratio', animation_frame = 'year', animation_group = 'crime', range_color = (0, 50), labels = {'location': 'Location of Offenses','crime': 'Crime'}, title = 'Number of offenses in each location \\n (min 5%)')\nlocation_counts_bat.update_layout(title = {'x': 0.5})\nlocation_counts_bat.show()","ee7db853":"vl_plot_sex = get_locations(violent_location, violent_location.loc[~not_sex_mask, 'crime'].unique(), min_ratio = 5)\nvl_plot_sex = vl_plot_sex.fillna(0)\nlocation_counts_sex = px.density_heatmap(vl_plot_sex, x = 'crime', y = 'location', z = 'ratio', animation_frame = 'year', animation_group = 'crime', range_color = (0, 50), labels = {'location': 'Location of Offenses','crime': 'Crime'}, title = 'Number of offenses in each location (min 5%)')\nlocation_counts_sex.update_layout(title = {'x': 0.5})\nlocation_counts_sex.show()","cf40813f":"crim_hotel_query = f'''\n                    SELECT primary_type, description\n                    FROM {database}\n                    WHERE ((location_description LIKE '%HOTEL%')\n                    OR (location_description LIKE '%MOTEL%'))\n                    AND (primary_type LIKE 'CRIM% SEXUAL%')\n                    '''\nget_bytes(crim_hotel_query)","cb8efa89":"crim_hotel = client.query(crim_hotel_query)\ncrim_hotel_des = crim_hotel.to_dataframe()","4d1f7fa8":"crim_hotel_des['description'].value_counts()","e2f9d68e":"crim_hospital_query = f'''\n                    SELECT primary_type, description\n                    FROM {database}\n                    WHERE (location_description LIKE '%HOSPITAL%')\n                    AND (primary_type LIKE 'CRIM% SEXUAL%')\n                    '''\ncrim_hospital = client.query(crim_hospital_query)\ncrim_hospital_df = crim_hospital.to_dataframe()","2c0eeeb4":"crim_hospital_df.value_counts()","b81ad979":"lat_long_query = f'''\n                WITH x AS\n                    (SELECT year, primary_type as crime, ROUND(latitude, 3) as latitude, ROUND(longitude, 3) as longitude,\n                    COUNT(primary_type) as offenses\n                    FROM {database}\n                    WHERE primary_type IN {violent_crimes}\n                    AND latitude IS NOT NULL\n                    AND longitude IS NOT NULL\n                    GROUP BY year, crime, latitude, longitude),\n                y AS\n                    (SELECT  x.*, DENSE_RANK() OVER (PARTITION BY x.year, x.crime\n                    ORDER BY offenses DESC) as rank\n                    FROM x)\n                SELECT y.*\n                FROM y\n                WHERE y.rank <= 15\n                AND y.offenses >= 2\n                AND latitude IS NOT NULL\n                AND longitude IS NOT NULL\n                ORDER BY year DESC, offenses DESC, latitude, longitude\n                '''\n\nlat_long_gun_query = f'''\n                WITH x AS\n                    (SELECT year, primary_type as crime, ROUND(latitude, 3) as latitude, ROUND(longitude, 3) as longitude,\n                    COUNT(primary_type) as offenses\n                    FROM {database}\n                    WHERE primary_type IN {violent_crimes}\n                    AND latitude IS NOT NULL\n                    AND longitude IS NOT NULL\n                    AND description LIKE '%GUN%'\n                    GROUP BY year, crime, latitude, longitude),\n                y AS\n                    (SELECT  x.*, DENSE_RANK() OVER (PARTITION BY x.year, x.crime\n                    ORDER BY offenses DESC) as rank\n                    FROM x)\n                SELECT y.*\n                FROM y\n                WHERE ((y.rank <= 10\n                AND y.offenses >= 3)\n                OR (y.crime LIKE 'CRIM% SEXUAL ASSAULT'))\n                AND latitude IS NOT NULL\n                AND longitude IS NOT NULL\n                ORDER BY year DESC, offenses DESC, latitude, longitude\n                '''\nget_bytes(lat_long_query), get_bytes(lat_long_gun_query)\n#The second query takes more memory than the first, despite having an additional constraint, probably due to scanning another column","297e7a34":"lat_long = client.query(lat_long_query)\nlat_long_df = lat_long.to_dataframe()\n\nlat_long_gun = client.query(lat_long_gun_query)\nlat_long_gun_df = lat_long_gun.to_dataframe()","5e71f7de":"lat_long_df = crimify(lat_long_df, ['latitude', 'longitude'])\nlat_long_gun_df = crimify(lat_long_gun_df, ['latitude', 'longitude'])\nlat_long_df = lat_long_df.sort_values(by = 'year')\nlat_long_gun_df = lat_long_gun_df.sort_values(by = 'year')","79ce353b":"not_battery_mask_lat_long = (lat_long_df.crime != 'BATTERY') & (lat_long_df.crime != 'HOMICIDE') \nnot_sex_mask_lat_long = (lat_long_df.crime != 'HUMAN TRAFFICKING') & (lat_long_df.crime != 'CRIM SEXUAL ASSAULT') & (lat_long_df.crime != 'SEX OFFENSE')\n\nnot_battery_mask_lat_long_gun = (lat_long_gun_df.crime != 'BATTERY') & (lat_long_gun_df.crime != 'HOMICIDE') \nnot_sex_mask_lat_long_gun = (lat_long_gun_df.crime != 'HUMAN TRAFFICKING') & (lat_long_gun_df.crime != 'CRIM SEXUAL ASSAULT') & (lat_long_gun_df.crime != 'SEX OFFENSE')\n\nnormal_crime_lat_long = pad(lat_long_df[not_battery_mask_lat_long & not_sex_mask_lat_long])\nnormal_crime_lat_long_gun = pad(lat_long_gun_df[not_battery_mask_lat_long_gun & not_sex_mask_lat_long_gun])\nnormal_crime_lat_long_gun = normal_crime_lat_long_gun.replace({'ROBBERY': 'ROBBERY WITH GUN', 'WEAPONS VIOLATION' : 'WEAPONS VIOLATION WITH GUN'})\nncll = pd.merge(left = normal_crime_lat_long, right = normal_crime_lat_long_gun, on = ['year', 'latitude', 'longitude', 'offenses', 'crime'], how = 'outer')\n\nbat_lat_long = pad(lat_long_df[~not_battery_mask_lat_long])\nbat_lat_long_gun = pad(lat_long_gun_df[~not_battery_mask_lat_long_gun])\nbat_lat_long_gun = bat_lat_long_gun.replace({'BATTERY': 'BATTERY WITH GUN', 'HOMICIDE' : 'HOMICIDE WITH GUN'})\nbll = pd.merge(left = bat_lat_long, right = bat_lat_long_gun, on = ['year', 'latitude', 'longitude', 'offenses', 'crime'], how = 'outer')\n\n\nsex_lat_long = pad(lat_long_df[~not_sex_mask_lat_long])\nsex_lat_long_gun = pad(lat_long_gun_df[~not_sex_mask_lat_long_gun])\nsex_lat_long_gun = sex_lat_long_gun.replace({'SEX OFFENSE': 'SEX OFFENSE WITH GUN', 'CRIM SEXUAL ASSAULT' : 'CRIM SEXUAL ASSAULT WITH GUN', 'HUMAN TRAFFICKING' : 'HUMAN TRAFFICKING WITH GUN'})\nsll = pd.merge(left = sex_lat_long, right = sex_lat_long_gun, on = ['year', 'latitude', 'longitude', 'offenses', 'crime'], how = 'outer')\n\nncll.loc[ncll.offenses == 0, 'offenses'] = 0.001 #Arson, for example, is 0 until 2003, and thus would not show on plotly correctly, unless you manually stopped on 2003, and disabled\/reenabled it. This solves that headache\nbll.loc[ncll.offenses == 0, 'offenses'] = 0.001\nsll.loc[ncll.offenses == 0, 'offenses'] = 0.001","dc080d20":"ncll_count = px.scatter(ncll, x = 'longitude', y = 'latitude', color = 'crime',\n                        color_discrete_map = {'WEAPONS VIOLATION' : 'blue', 'ROBBERY' : 'red', 'WEAPONS VIOLATION WITH GUN' : 'black', 'ROBBERY WITH GUN': 'black', 'ARSON' : 'orange'},\n                        size = 'offenses', animation_frame = 'year', title = 'Location of Violent Crimes', width = 1000, height = 750)\nncll_count.update_layout(title = {'x': 0.5},\n                        xaxis_range = (-87.95, -87.55),\n                        yaxis_range = (41.65, 42),\n                         transition = {'duration' : 6000}\n                        )\nncll_count.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 10000\nncll_count.show()","f487daba":"bll_count = px.scatter(bll, x = 'longitude', y = 'latitude', color = 'crime',\n                        color_discrete_map = {'BATTERY WITH GUN' : 'black', 'HOMICIDE WITH GUN': 'black', 'ARSON' : 'orange'},\n                        size = 'offenses', animation_frame = 'year', title = 'Location of Violent Crimes', width = 1000, height = 750)\nbll_count.update_layout(title = {'x': 0.5},\n                        xaxis_range = (-87.95, -87.55),\n                        yaxis_range = (41.65, 42),\n                         transition = {'duration' : 6000}\n                        )\nbll_count.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 3000\nbll_count.show()","b1e35913":"sll_count = px.scatter(sll, x = 'longitude', y = 'latitude', color = 'crime',\n                        color_discrete_map = {'CRIM SEXUAL ASSAULT WITH GUN' : 'black'},\n                        size = 'offenses', animation_frame = 'year', title = 'Location of Violent Crimes', width = 1000, height = 750)\nsll_count.update_layout(title = {'x': 0.5},\n                        xaxis_range = (-87.95, -87.55),\n                        yaxis_range = (41.65, 42),\n                         transition = {'duration' : 6000}\n                        )\nsll_count.layout.updatemenus[0].buttons[0].args[1][\"frame\"][\"duration\"] = 3000\nsll_count.show()","5a3dde62":"The above graph is for nonbattery\/robbery\/sex crimes. Interestingly arson has percentage of offenses being on the street or related to vehicles. Offenses involving children mostly occuring in the home is no surprise, however most kidnapped children are kidnapped off the street (>50%) according to this data, with hardly any being kidnapped from school (most years < 5%)? In the cases of child kidnappings, I tend to think of it as a parent taking the child running away from the other parent, or in cases of divorce, or a relative kidnapping them by arriving at their school and taking them without permission\/knowledge of their parent. This certainly is an interesting statistic.\n\nWEAPONS VIOLATIONS mostly occur on the street, probably due to an illegal carrying, however, a lot of ROBBERY and KIDNAPPING also occur on the street, so perhaps they are related? One description for a WEAPONS VIOLATION charge is unlawful use of a weapon, which happened in a school, so to get more information, I'd have to go through the descriptions which may involve a lot of data cleaning, and not too interested in doing for the time being.","df7432ef":"So for the more 'violent' of the violent crimes, HOMICIDE and BATTERY, guns were not recorded as being used for HOMICIDE which I find to be off, and HOMICIDE is very rare to begin with, although the numbers seem too low to me, and no other category would cover it. On the other hand, locations of high battery offenses are pretty divorced from where the battery's commited with guns are. Surprisingly, the number of guns used in ROBBERY is higher than that of BATTERY despite BATTERY having a significanlty higher number of offenses.","486aa588":"There are over 200 location types where crime has occured, with several having only one crime ever having occured there, implying that the specificity of the locations is not necessarily consistent. Although, I could easily see places like KENNEL having only one recorded crime in 20 yrs.\n\nTo adress this issue, I'm going to have two graphs, one in which I address BATTERY, ROBBERY, ARSON, HOMICIDE - crimes where somebody is more likely to get hurt, and another with SEX OFFENSES and CRIM SEXUAL ASSAULT. Once again, I need to modify the CRIM SEXUAL ASSAULT due to it being the same (but split) as CRIMINAL SEXUAL ASSAULT.","6e3d66a7":"While the data for the non-black points are cut off after a certain threshold, it doesn't seem to effect the conclusion: the amount of crimes at a location does not seem to directly effect the amount of guns used in that location. For example, in 2012, there are a lot of locations with more ROBBERY without guns, while the gun use is usedmore in areas with less ROBBERY (this is a micro picture). For example, at LAT = 41.751, LONG = -87.625, there are 4 ROBBERY WITH GUN, and 36 total ROBBERY. North of that, at Lat > 41.85, LONG >87.675 there is hardly any ROBBERY WITH GUN.\n\nThe other thing to notice, is that crime is mostly confined into two areas, the first is around LAT (41.85 -> 41.9), LONG(-87.7 -> -87.8) and Lat (41.7 -> 41.9), LONG (-87.55 -> -87.7)","ee8733b1":"Now I'm going to see where (physically), these crimes occur. While querying the ward\/community center could give a general idea, the lat\/long coordinates could map out the specifics of what area is 'bad'","223138df":"I couldn't think of an easy group by  to work with my query, so a parition function works nicely","5decd397":"This is also unhelpful. The hospital query contains locations like building, grounds, which could perhaps shed some more light to the victims identities, but not much. The fact that most of these are non-aggravated makes sense to me, however it doesn't really reveal what happens, ie the doctor in charge of an interned patient, vs random person assaulting an interned patient, etc. I would assume that the aggravated charges are against nurses\/other hospital staff, but again, there's not a lot of information to go off of. ","ae115bdb":"Ok, now we have all the categories, however CRIM SEXUAL ASSAULT and CRIMINAL SEXUAL ASSUALT should be the same. I need to keep both in the violent_crimes in order to get both from bigquery. I'm going to combine the two together.","d1a492d8":"Domestic violence only reported in one year? This seems highly suspicious, perhaps DV is filled under the OTHER OFFENSE category?","32f59c60":"Here we go, the DV crime was only reported in 2001, whereas all other crimes were reported in all other years. In the other years, it's reported under BATTERY. It also seems to be reported under BATTERY for 2001, with only one incidence of it being reported as 'DOMESTIC VIOLENCE'. Interestingly, there seems to be DOMESTIC VIOLENCE related crimes that are not DOMESTIC VIOLENCE, all ocuring in 2020 - 2021, perhaps suggesting the changing of laws, or beginning to enforece a previously established law, or that the incidences are rare.\n\nThe table also has a field called Domestic, as it relates to the definition used by their Domestic Violence law. If you queried with domestic = True, then you get other offenses, such as CRIM SEX ASSAULT, which definitly would seem to fit my understanding of DV. However, you will also get criems such as narcotics use, or the theft of \\$300. For my purposes, the domestic column seems to be unhelpful.\n\nNow let's look at the 'Violent Crimes' for an EDA analysis. \nThings I\"m interested in:\n1. Crimes (types) over the years\n2. 'Most Dangerous X', X = ward, community, area\n3. Distribution of crimes: Longitude, latitutde\n\nThis dataset is fairly small, so I could do this all in a single query, convert to pd, do some math in pds to plot my data. I'll refrain from doing so for two reasons:\n1. I'm practicing bigquery, and doing everything in pd defeats the purpose.\n2. Let's say that I'm working on a dataset with signicantly more classes. The total number of rows for a query is going to be multiplicative with the number of classes per row (to an approximation, for example, if there are 50 classes in col A and 20 in col B, there should be 50*20 returned rows. However, if 10 of the classes in col B are only associated with one class in col A, then there would be 10 * 50 + 10 rows, which is slightly more than half). Therefore, if this were a larger dataset, then I might need to do multiple queries in order to actually fit inside a pd df.","250c04c6":"Anywho, most crimes seem to be decreasing with time, as noted with the sns plot, however, the WEAPONS VIOLATION shows an increase in 2019 and 2020 compared to 2001 (by about 50%), even overtaking ROBBERY. The increase in the WEAPONS VIOLATION : ROBBERY ratio may have to do with Covid 19. With increased unemployment, more people will remain home, which would deter potential thieves? We'll have to look at the locations of the crimes. However that would seem to contradict the rise in WEAPONS VIOLATIONS.","4a0b6486":"As expected, this wasn't too helpful. Most of the CRIM SEXUAL ASSAULT in hotels is non-aggravated, which could mean a variety of things such as a couple on holiday, and one spouse assaults the other, if somebody assaults a coworker during a business trip, etc. The aggravated cases I would imagine that the perpatrator drags the victim to a hotel they are already staying at, or the perpatrator breaking into the hotel room.","780907c1":"Battery dominates the  violent crimes, being around 5x more numerous than the next highest, Robbery. Violent crime drastically descreased from 2001 - 2013, while remaining steady from 2013 -> 2018. There's a noticeable drop in 2020, probbaly due to covid, and 2021 still has 25% of the months to go. You'd need a lawyer to go through any possible changes in the laws, how the government is changing their approach to some law enforcement to get a better picture, look at socioecomic changes [this one clearly doesn't require a lawyer], etc..\n\nThis graph is a little to unweildy for my tastes, so let's try to make a dynamic plot using plotly.","1e1002c4":"There are other things this dataset can explore, and I could probably clean up my code a bit, however I was using this as training and have no desire for it to be perfect. Instead, I'm going to work on a more complicated dataset, with more tables, and hopefully a target I could apply bigquery's machine learning to.","55b7797e":"The locations tag has over 200 entries, some of which I would consider degenerate. For example, RESIDENCE, RESIDENTIAL-GARAGE, APARTMENT, etc, I would characterize as RESIDENCE. (SCHOOL, BUILDING, PUBLIC), (SCHOOL, GROUNDS, PUBLIC), I would also consider the same. For some thresholds, combining these wouldn't matter, although for the RESIDENCE example, RESIDENCE and APARTMENT are hotspots for violent crimes, so combining them together helps to focus the trends, and a similar issue happens with the SCHOOLs categories. I'm going to take a few categories, which I believe are similar and give the same tag. A group by, followed by an index reset should update the DF as expected. I'm going to also have a function where it will set categories under the desired plotting threshold to other.","a855890a":"Most BATTERY occuring at home is congruent with the fact that this includes DOMESTIC VIOLENCE. However, most HOMOCIDE occurs in the street (> 50% most years), whereas I would typically expect them to occur at home. However, the homicides occuring in vehicles occur at nearly the same rate as that occuring at homes. The high rate for STREET HOMICIDES makes me think that these may be gang\/crime related, which could be supported by most weapons violation charges also occuring on the streets. Again, this would involve looking more into the description, and I suspect that field is too sparse to draw any conclusions. Finally, let's look at the sex crimes.","a22f307c":"HUMAN TRAFFICKING is a relatively rare crime, which is why it's absent most years. I believe that Atlantla, Georgia is a hotspot due to its airport.\n\nThe deal with SEXUAL ASSAULT is that it's underreported. We can see that most of the cases occur at home, which isn't too surprising. Around 12% occur in the street, and around 6-7% occur in hospitals and hotels. However, I suspect that these ratios are off for the following reason. If somebody is assaulted on the streets, the assailant is most likely unknown to the victim, and thus there is a lower barrier to reporting the crime. Offenses that occur at home are more likely to be done by a family member\/friend, which has a larger barrier to report, especially if the victim is reliant on financial support of the perpatrator, and then there are other issues such as the victim's other family members not believing the victim, etc. I have no insight on the offenses occuring hospitals\/hotels. The situation with hospitals is tricky, especially if the perpetrator is the doctor\/in charge of the victim's health, where reporting the crime could potentially be dangeorus towards the victim. However, if the perpatrator is unknown, then the victim would be more likely to report. "}}