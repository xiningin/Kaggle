{"cell_type":{"9d44f423":"code","1c5ba5da":"code","1609d6a2":"code","7040c735":"code","548f8a62":"code","e295d817":"code","852f2bb8":"code","5687662f":"code","525a612a":"code","12c0131a":"code","89be7d23":"code","ba4653c4":"code","d4d34558":"code","ae469f0d":"code","a108056e":"code","55134f89":"code","4014ffd4":"code","61a617b4":"code","e25216c5":"code","e27f9b10":"code","1903d805":"code","f2537626":"code","7c8df67e":"code","d9a7ce1f":"code","7c54b9cc":"code","ba49f58a":"code","9a826ab4":"code","9d1411da":"code","86ed9d15":"code","81d93915":"code","4965116c":"markdown","b98f9394":"markdown","324a1391":"markdown","8e2b7c56":"markdown","51e2360f":"markdown","683738db":"markdown","0b673ef9":"markdown","06d1c3c5":"markdown","18742a8d":"markdown","06fd332c":"markdown","91578e88":"markdown","e9d06999":"markdown","f026b852":"markdown","54539f9a":"markdown","29cd80de":"markdown","746bbcb8":"markdown","fed76066":"markdown","be3d556a":"markdown","34e81375":"markdown","217b078a":"markdown","a1b1ec5c":"markdown","0ba75f34":"markdown","0bbaee09":"markdown","a3b3895c":"markdown","eb0f553a":"markdown","6671d406":"markdown","cd5870bd":"markdown","2490ed48":"markdown"},"source":{"9d44f423":"import numpy as np \nimport pandas as pd \nimport matplotlib\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\n\n!pip install konlpy\nimport re\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \nfrom wordcloud import WordCloud\n","1c5ba5da":"df = pd.read_csv('\/kaggle\/input\/bookingcom-hotel-review\/booking.com_hotel_review.csv')","1609d6a2":"df.head()","7040c735":"!pip install missingno\nimport missingno as msno\n\nmsno.matrix(df.sample(250))","548f8a62":"df['hotel_review'].head()","e295d817":"df.info()","852f2bb8":"df['positive'], df['negative'] = df['hotel_review'].str.split(\"\uc544\uc26c\uc6e0\ub358 \uc810\", 1).str","5687662f":"df['positive'] = df['positive'].str.replace(\"\uc88b\uc558\ub358 \uc810|\\n\", \"\")\ndf['negative'] = df['negative'].str.replace(\"\\n\", \"\")","525a612a":"df['positive'].head()","12c0131a":"df['negative'].head()","89be7d23":"df['hotel_name'].nunique()","ba4653c4":"def preprocessing(review, okt, remove_stopwords = False, stop_words = []):\n    review_text = re.sub(\"[^\uac00-\ud7a3\u3131-\u314e\u314f-\u3163\\\\s]\", \"\", review)\n    word_review = okt.morphs(review_text, stem = True)\n    if remove_stopwords:\n        word_review = [token for token in word_review if not token in stop_words]\n        \n    return word_review","d4d34558":"from konlpy.tag import Okt","ae469f0d":"stop_words = set(['\uc740', '\ub294', '\uc774', '\uac00', '\ud558', '\uc544', '\uac83', '\ub4e4', '\uc758', '\uc788', '\ub418', '\uc218', '\ubcf4', '\uc8fc', '\ub4f1', \n                  '\ud55c', 'n', '\uc219\uc18c', '\uc544\uc8fc', '\ub108\ubb34', '\ub3c4', '\uc88b\ub2e4', '\uc788\ub2e4', '\ud558\ub2e4', '\uc5d0', '\uc744', '\uc5d0\uc11c', '\uc73c\ub85c', \n                  '\uc774\ub2e4', '\uc640', '\uacfc', '\uc801', '\uc73c\ub85c', '\ub97c', '\uc778', '\uac00\ub2e4', '[]'])\nokt = Okt()\nclean_positive_review = [ ]\n\nfor review in df['positive']:\n    if type(review) == str:\n        clean_positive_review.append(preprocessing(review, okt, remove_stopwords = True, stop_words = stop_words))\n    else:\n        clean_positive_review.append([])\n        \ndf['positive_text'] = clean_positive_review","a108056e":"stop_words = set(['\uc740', '\ub294', '\uc774', '\uac00', '\ud558', '\uc544', '\uac83', '\ub4e4', '\uc758', '\uc788', '\ub418', '\uc218', '\ubcf4', '\uc8fc', \n                  '\ub4f1', '\ud55c', 'n', '\uc219\uc18c', '\uc544\uc8fc', '\ub108\ubb34', '\ub3c4', '\uc788\ub2e4', '\ud558\ub2e4', '\uc5d0', '\uc744', '\uc880', '\uc744',\n                  '\ub97c', '\uc548', '\uc778', '\ub54c', '[]', '\uac19\ub2e4', '\uc5c6\ub2e4', '\uc774\ub2e4', '\uc544\ub2c8\ub2e4', '\uc54a\ub2e4'])\nokt = Okt()\nclean_negative_review = [ ]\n\nfor review in df['negative']:\n    if type(review) == str:\n        clean_negative_review.append(preprocessing(review, okt, remove_stopwords = True, stop_words = stop_words))\n    else:\n        clean_negative_review.append([])\n        \ndf['negative_text'] = clean_negative_review","55134f89":"df['positive_text2'] = df['positive_text'].astype('str').apply(lambda x: x.split(','))\ndf['negative_text2'] = df['negative_text'].astype('str').apply(lambda x: x.split(','))","4014ffd4":"positive_list = df.apply(lambda x: pd.Series(x['positive_text2']), axis=1).stack().reset_index(level=1, drop=True)\nnegative_list = df.apply(lambda x: pd.Series(x['negative_text2']), axis=1).stack().reset_index(level=1, drop=True)","61a617b4":"positive_list = positive_list.value_counts().head(50)\nprint(positive_list)","e25216c5":"plt.rcParams['font.family'] = 'NanumBarunGothic'\n\nplt.figure(figsize=(20, 20))\nplt.title(\"\uc88b\uc558\ub358 \uc810\")\nsns.barplot(y=positive_list.index, x=positive_list)","e27f9b10":"wc = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', width=800, height=600).generate(\" \".join(df['positive_text'].astype(str)))\nplt.figure(figsize=(20, 15))\nplt.imshow(wc)\nplt.axis('off')","1903d805":"negative_list = negative_list.value_counts().head(50)\nprint(negative_list)","f2537626":"plt.rcParams['font.family'] = 'NanumBarunGothic'\n\nplt.figure(figsize=(20, 30))\nplt.title(\"\uc548 \uc88b\uc558\ub358 \uc810\")\nsns.barplot(y=negative_list.index, x=negative_list)","7c8df67e":"wc2 = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', width=800, height=600).generate(\" \".join(df['negative_text'].astype(str)))\nplt.figure(figsize=(20, 15))\nplt.imshow(wc2)\nplt.axis('off')","d9a7ce1f":"condition=[df['hotel_name'].str.contains('Hotel|hotel|\ud638\ud154',na=False),\n           df['hotel_name'].str.contains('Guesthouse|guest|\uac8c\uc2a4\ud2b8\ud558\uc6b0\uc2a4',na=False),\n           df['hotel_name'].str.contains('Resort|resort|\ub9ac\uc870\ud2b8',na=False)]\nchoices=['Hotel', 'Guesthouse', 'Resort']\ndf['Hotel_rename']=np.select(condition,choices,default='others')","7c54b9cc":"df['Hotel_rename'].value_counts()","ba49f58a":"data = df[['Hotel_rename', 'positive_text', 'negative_text']]\n\ndata_hotel = data[data['Hotel_rename'] == 'Hotel']\ndata_resort = data[data['Hotel_rename'] == 'Resort']\ndata_guest = data[data['Hotel_rename'] == 'Guesthouse']\ndata_others = data[data['Hotel_rename'] == 'others']","9a826ab4":"plt.subplots_adjust(right=1.5)\nplt.subplot(1,2,1)\nax1 = WordCloud(font_path='\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', \n                width=600,height=600).generate(\" \".join(data_hotel['positive_text'].astype(str)))\nplt.imshow(ax1)\nplt.axis('off')\nplt.title('Positive review about Hotel')\n\nplt.subplot(1,2,2)\nax2 = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf',\n                width=600,height=600).generate(\" \".join(data_hotel['negative_text'].astype(str)))\nplt.imshow(ax2)\nplt.axis('off')\nplt.title('Negative review about Hotel')","9d1411da":"plt.subplots_adjust(right=1.5)\nplt.subplot(1,2,1)\nax1 = WordCloud(font_path='\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', \n                width=600,height=600).generate(\" \".join(data_resort['positive_text'].astype(str)))\nplt.imshow(ax1)\nplt.axis('off')\nplt.title('Positive review about Resort')\n\nplt.subplot(1,2,2)\nax2 = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf',\n                width=600,height=600).generate(\" \".join(data_resort['negative_text'].astype(str)))\nplt.imshow(ax2)\nplt.axis('off')\nplt.title('Negative review about Resort')","86ed9d15":"plt.subplots_adjust(right=1.5)\nplt.subplot(1,2,1)\nax1 = WordCloud(font_path='\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', \n                width=600,height=600).generate(\" \".join(data_guest['positive_text'].astype(str)))\nplt.imshow(ax1)\nplt.axis('off')\nplt.title('Positive review about Guesthouse')\n\nplt.subplot(1,2,2)\nax2 = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf',\n                width=600,height=600).generate(\" \".join(data_guest['negative_text'].astype(str)))\nplt.imshow(ax2)\nplt.axis('off')\nplt.title('Negative review about Guesthouse')","81d93915":"plt.subplots_adjust(right=1.5)\nplt.subplot(1,2,1)\nax1 = WordCloud(font_path='\/kaggle\/input\/font-list\/NanumBarunGothic.ttf', \n                width=600,height=600).generate(\" \".join(data_others['positive_text'].astype(str)))\nplt.imshow(ax1)\nplt.axis('off')\nplt.title('Positive review about Others')\n\nplt.subplot(1,2,2)\nax2 = WordCloud(font_path = '\/kaggle\/input\/font-list\/NanumBarunGothic.ttf',\n                width=600,height=600).generate(\" \".join(data_others['negative_text'].astype(str)))\nplt.imshow(ax2)\nplt.axis('off')\nplt.title('Negative review about Others')","4965116c":"In the meantime, I looked through null by using 'missingno'. Overall the row in dataset seems OK. ","b98f9394":"As for the list of negative reviews, I still can read many expletives. There seem 'incovenience', 'breakfast', 'employee', 'stink' as their negative reviews. ","324a1391":"Here below, I made some wordclouds for each positive and negative.\n\nFor positives, 'employees', 'location' and also 'value for money' are standing out. ","8e2b7c56":"WordCloud displays negative feedback in a good looking way. There are 'room', 'breakfast', 'bathroom', 'reservation' and 'bathtube' for their negative feedbacks. ","51e2360f":"# Conclusion","683738db":"Finnaly, other type of hotel was said to have 'Great breakfast' as the positive. ","0b673ef9":"Regarding Resort, 'Location', 'Value for money' and 'Clean' are mentioned for 'Pros'. It is mainly because the resorts are located in the best outdoot activity area such as good looking mountain or river, thus people do activites and spend enjoyable time with their family. I guess 'Location' is regared in this context.  ","06d1c3c5":"# Tokenization ","18742a8d":"The Data frame actually included only 'hotel_name' and 'hotel_review'. I decided not to use 'cleaned_review' becuase this has been cleaned from 'hotel review', but the problem is this doesn't include whether this is 'positive' or 'negative'. The original column from 'hotel_review' could provide both 'positive' and 'negative' feedbacks from the customers. Thus this is good to use 'hotel_review' instead of 'cleaned_review'","06fd332c":"'Clean' is the most positive for Guesthouse. But people regarded 'Small(room\/space)' as negative. ","91578e88":"After splitting the columns, checking to see if they are ok. ","e9d06999":"# Review by Type","f026b852":"Again, as I explained above, the column includes both 'positive' and 'negative' reviews. Positive reviews start from '\uc88b\uc558\ub358 \uc810(Pros)' while Negative reviews start from '\uc544\uc26c\uc6e0\ub358 \uc810(Cons)'. So we can separate the columns by its sentiment. ","54539f9a":"I installed 'konlpy' for Korean text mining and also 'wordcloud'. Due to Koreans, I set-up the Korean font location as well.","29cd80de":"First is the hotel review. The most 'Pros' is 'Employees' followed by 'Value for money' and 'Location'. \n\nAs for 'Cons' 'Inconvenience' and 'Room\/Bathroom' looks a little standing out while nothing is standing out. ","746bbcb8":"The most positive reveiws are \"kind\" followed \"Employees\", \"Location\" and \"Clean\"","fed76066":"I tried to analyze by its type. There are 4 values under hotel type. Thus I am trying to separate the reviews by its type. ","be3d556a":"# Explorering Dataset","34e81375":"# World Cloud ","217b078a":"I found this dataset a couple of days before while I was tracking the data for me to do analyze. I chose this datase because the dataset looked easy with small columns, and I thought I could do by myself as my first notebook here. \n\nOne thing I concerened was this was written in Korean for reviews sine these are about the hotel reviews at booking.com website in Korea. I really sorry about this, but hope this helps for those begginners like me.   ","a1b1ec5c":"Font problem happens again. ","0ba75f34":"I have put some 'stop-words' after running tokennization. In Koreans, there are some expletives which actually do not mean, but just support the sentences. We do not need them just in case we token the sentences and translate them into meaning.","0bbaee09":"This step is tricky. I tried to plot the list of positive reviews, but faced problems plotting in Koreans. Although I set-up the font location, it didn't work. For those who well know about this, please let me know how I can solve. ","a3b3895c":"Thus I split the colum from the text with '\uc544\uc26c\uc6e0\ub358 \uc810(Cons)'.","eb0f553a":"Hellow. I am a novice here in Kaggle. This is my first Notebook. I know my analysis is quite low level which needs to develop further. Since this is my first step I will further add my deep analysis based on your feedback. Please leave any comments so that I can add more. Highly appreciaed, if you encourage me by vote to do this. Thanks in advance. ","6671d406":"It was nice to analyze the reviews by hotel type, and each type showed the different 'Pros' and 'Cons'. It could be better if we can have more detailed dataset such as demographic or hotel location added into the current one. \n\nThe sad thing is lack of my ability on Pythong. If I could have more experience, then the above analysis could be much more better. But I swear I will visit Kaggle more frequently and develop the skills. \n\nThanks for reading this. ","cd5870bd":"Most comes from hote. Resort and Guesthouse have smaller samples than hotel as below. But we can try to see what is difference. ","2490ed48":"#  Consumer reviews on hotel in Korea at Booking.Com"}}