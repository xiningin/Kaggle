{"cell_type":{"8b411ade":"code","f2ddd4d2":"code","78657559":"code","2d1eec95":"code","13931aa9":"code","bd2d3655":"code","02a0788e":"code","8a99f0b3":"code","292d2a3d":"code","d335e50b":"code","dd32529d":"code","8fc7bce1":"code","25b8a7c7":"code","8f051edf":"code","f35d5499":"code","688c2490":"code","201a2ff2":"code","77993796":"code","1f16085e":"code","8262b3d6":"code","7f6ef1c6":"code","e54ae3cc":"code","10c86d0a":"code","7c0b005a":"code","93aa4a43":"code","a952cda9":"code","af64982c":"code","58070bec":"code","5dcdc23e":"code","ce56118d":"code","00d52a84":"code","215acdc0":"code","71f03927":"code","87fd37ba":"code","f7a0b910":"code","2ca054a1":"code","9fae890e":"code","ec244889":"code","6d0c33f9":"code","c5eb72fa":"markdown","40c7b857":"markdown","0ee31e70":"markdown","d7969f7e":"markdown","2f61293d":"markdown","87a5d8b6":"markdown","2f0d09e7":"markdown","f9684f01":"markdown","da7f3457":"markdown","c5401a83":"markdown","413ca4ba":"markdown","28366e2c":"markdown","80ab9b37":"markdown","7a49a363":"markdown","6dc9d1ae":"markdown","3aeac58d":"markdown","511154d5":"markdown","f5ada58e":"markdown","8460d4f9":"markdown","66e4a9a6":"markdown","35cb15c3":"markdown","417e066f":"markdown","6af9ff49":"markdown","1c773276":"markdown","69162d1f":"markdown","3055de77":"markdown","7e2959bd":"markdown","982759b8":"markdown","c935602d":"markdown","b1fdcb6d":"markdown","70d54f92":"markdown","69f9a598":"markdown","ba24c3e0":"markdown","27217cde":"markdown","a8ffa82a":"markdown","bc4111b9":"markdown","1d26ad8e":"markdown","08d65cd8":"markdown"},"source":{"8b411ade":"from IPython.display import Image\nImage(filename='..\/input\/lol-map\/map.jpg') ","f2ddd4d2":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","78657559":"df = pd.read_csv(\"..\/input\/league-of-legends-diamond-ranked-games-10-min\/high_diamond_ranked_10min.csv\")\npd.set_option(\"display.max_columns\", None)","2d1eec95":"df.head()","13931aa9":"df.shape","bd2d3655":"df.isnull().sum()","02a0788e":"df.info()","8a99f0b3":"df[\"whoWins\"] = df.blueWins.map({0:\"RedWins\", 1:\"BlueWins\"})","292d2a3d":"columns = [\"redGoldPerMin\", \"blueGoldPerMin\", \"redCSPerMin\", \"blueCSPerMin\"]\ndf = df.drop(columns,axis=1)","d335e50b":"palette=['#FF3500',\"#0059FF\"]","dd32529d":"plt.figure(figsize=(4,3), dpi=200)\nsns.countplot(data=df, x=\"whoWins\", palette=palette);","8fc7bce1":"df.whoWins.value_counts()","25b8a7c7":"# Same win rate for both teams.\nprint(f'Blue Team has %{round(len(df[df[\"blueWins\"]==1]) \/ len(df),2) * 100} win rate.')\nprint(\"-\"*27)\nprint(f'Red Team has %{round(len(df[df[\"blueWins\"]==0]) \/ len(df),2) * 100} win rate.')","8f051edf":"fig, ax = plt.subplots(ncols=2, figsize=(12,4), dpi=200)\nsns.barplot(x=df[df[\"blueGoldDiff\"]>0][\"blueWins\"].replace({1:\"Win\", 0:\"Lose\"}).value_counts().index, y=df[df[\"blueGoldDiff\"]>0][\"blueWins\"].replace({1:\"Win\", 0:\"Lose\"}).value_counts().values, ax=ax[0], palette=palette[::-1])\nsns.barplot(x=df[df[\"redGoldDiff\"]>0][\"blueWins\"].replace({0:\"Win\", 1:\"Lose\"}).value_counts().index, y=df[df[\"redGoldDiff\"]>0][\"blueWins\"].replace({0:\"Win\", 1:\"Lose\"}).value_counts().values, ax=ax[1], palette=palette)\n\nax[0].set_title(\"Blue Win When Blue Has Gold Advantage\")\nax[1].set_title(\"Red Win When Red Has Gold Advantage\")\n\nplt.tight_layout()","f35d5499":"print(f'When Blue Team has a gold advantage into the 10 minutes of the game, Blue Team has %{round(len(df[(df[\"blueGoldDiff\"]>0) & (df[\"blueWins\"]==1)]) \/ len(df[df[\"blueGoldDiff\"]>0]),2) * 100} win rate.')\nprint(\"-\"*98)\nprint(f'When Red Team has a gold advantage into the 10 minutes of the game, Red Team has %{round(len(df[(df[\"redGoldDiff\"]>0) & (df[\"blueWins\"]==0)]) \/ len(df[df[\"redGoldDiff\"]>0]),2) * 100} win rate.')","688c2490":"df[\"whoFirstBlood\"] = df.blueFirstBlood.map({0:\"Red\", 1:\"Blue\"})\nplt.figure(figsize=(12,8), dpi=200)\ng = sns.countplot(data=df, x=\"whoFirstBlood\", hue=\"whoWins\", palette=palette)","201a2ff2":"print(f'When Blue Team got first blood, their win rate is %{round(len(df[(df[\"blueFirstBlood\"]==1) & df[\"blueWins\"]==1]) \/ len(df[df[\"blueFirstBlood\"]==1]) * 100,2)}')\nprint(f'When Red Team got first blood, their win rate is %{round(len(df[(df[\"redFirstBlood\"]==1) & (df[\"blueWins\"]==0)]) \/ len(df[df[\"redFirstBlood\"]==1]) * 100,2)}')\n","77993796":"fig, ax = plt.subplots(ncols=2, figsize=(12,4), dpi=200)\nsns.countplot(data=df, x=\"blueDragons\", hue=\"whoWins\", ax=ax[0], palette=palette)\nsns.countplot(data=df, x=\"redDragons\",hue=\"whoWins\", ax=ax[1], palette=palette)\nplt.suptitle(\"Dragon's Impact On The Game\")\n\nax[0].set_title(\"Blue Team\")\nax[1].set_title(\"Red Team\")\n\nplt.tight_layout()","1f16085e":"print(f\"In {len(df)} games, {df.redDragons.value_counts()[1]} times Red Team got dragon. When Red Team got the dragon their win rate is %{round(len(df[(df['redDragons'] == 1) & (df['blueWins'] == 0)]) \/ df.blueDragons.value_counts()[1] * 100,2)}\")\nprint(f\"In {len(df)} games, {df.blueDragons.value_counts()[1]} times Blue Team got dragon. When Blue Team got the dragon their win rate is %{round(len(df[(df['blueDragons'] == 1) & (df['blueWins'] == 1)]) \/ df.blueDragons.value_counts()[1] * 100,2)}\")\nprint(f\"In {len(df)} games, {len(df[(df['blueDragons'] == 0) & (df['redDragons'] == 0)])} times neither team got dragon. In those game both team has %{round(len(df[(df['redDragons'] == 0) & (df['blueDragons'] == 0) & (df['blueWins'] == 1)]) \/ len(df[(df['blueDragons'] == 0) & (df['redDragons'] == 0)]) * 100,2)} win rate.\")","8262b3d6":"fig, ax = plt.subplots(ncols=2, figsize=(12,4), dpi=200)\nsns.countplot(data=df, x=\"blueHeralds\", hue=\"whoWins\", ax=ax[0], palette=palette)\nsns.countplot(data=df, x=\"redHeralds\",hue=\"whoWins\", ax=ax[1], palette=palette)\nplt.suptitle(\"Herald's Impact On The Game\")\n\nax[0].set_title(\"Blue Team\")\nax[1].set_title(\"Red Team\")\n\nplt.tight_layout()","7f6ef1c6":"print(f\"Out of {len(df)} games, Blue Team got herald {len(df[(df['blueHeralds'] == 1)])} times. In those games Blue Team's win rate is {round(len(df[(df['blueHeralds'] == 1) & (df['blueWins'] == 1)]) \/ len(df[(df['blueHeralds'] == 1)]) * 100,2)}.\")\nprint(f\"Out of {len(df)} games, Red Team got herald {len(df[(df['redHeralds'] == 1)])} times. In those games Red Team's win rate is {round(len(df[(df['redHeralds'] == 1) & (df['blueWins'] == 0)]) \/ len(df[(df['redHeralds'] == 1)]) * 100,2)}\")\nprint(f\"Out of {len(df)} games, neither team got herald {len(df[(df['redHeralds'] == 0) & (df['blueHeralds'] == 0)])} times. In those games both team's win rate is {round(len(df[(df['redHeralds'] == 0) & (df['blueHeralds'] == 0) & (df['blueWins'] == 1)]) \/ len(df[(df['redHeralds'] == 0) & (df['blueHeralds'] == 0)]), 2) * 100}.\")","e54ae3cc":"fig, ax = plt.subplots(ncols=2, figsize=(12,4), dpi=200)\nsns.countplot(data=df, x=\"blueEliteMonsters\", hue=\"whoWins\", ax=ax[0], palette=palette)\nsns.countplot(data=df, x=\"redEliteMonsters\",hue=\"whoWins\", ax=ax[1], palette=palette)\nplt.suptitle(\"Elite Monsters' Impact On The Game\")\n\nax[0].set_title(\"Blue Team\")\nax[0].set_xlabel(\"Number of elite monster blue team got\")\n\nax[1].set_title(\"Red Team\")\nax[1].set_xlabel(\"Number of elite monster red team got\")\n\nplt.tight_layout()","10c86d0a":"print(f\"Out of {len(df)} games, Blue Team got both herald and dragon for {len(df[df['blueEliteMonsters'] == 2])} times. In those games Blue Team's win rate is %{round(len(df[(df['blueEliteMonsters'] == 2) & (df['blueWins'] == 1)]) \/ len(df[df['blueEliteMonsters'] == 2]) * 100,2)}\")\nprint(f\"Out of {len(df)} games, Red Team got both herald and dragon for {len(df[df['redEliteMonsters'] == 2])} times. In those games Red Team's win rate is %{round(len(df[(df['redEliteMonsters'] == 2) & (df['blueWins'] == 0)]) \/ len(df[df['redEliteMonsters'] == 2]) * 100,2)}\")","7c0b005a":"print(f\"When both teams got no elite monsters, Blue Team's win rate is %{round(len(df[(df['redEliteMonsters'] == 0) & (df['blueEliteMonsters'] == 0) & (df['blueWins'] == 1)]) \/len(df[(df['redEliteMonsters'] == 0) & (df['blueEliteMonsters'] == 0)]) * 100,2)}.\")","93aa4a43":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueTotalMinionsKilled\", bins=25, ax=ax[0], color=\"b\")\nsns.histplot(data=df, x=\"redTotalMinionsKilled\", bins=25, ax=ax[1], color=\"r\")\n\nplt.suptitle(\"Total Minions Killed\")\n\nax[0].set_title(\"Blue Team\")\nax[1].set_title(\"Red Team\")\n\nplt.tight_layout()","a952cda9":"print(f\"When Blue Team wins, their average minion score is {round(df[df['blueWins']==1]['blueTotalMinionsKilled'].mean(),2)}\")\nprint(f\"When Blue Team loses, their average minions score is {round(df[df['blueWins']==0]['blueTotalMinionsKilled'].mean(),2)}\")\nprint(\"-\"*70)\nprint(f\"When Red Team wins, their average minion score is {round(df[df['blueWins']==0]['redTotalMinionsKilled'].mean(),2)}\")\nprint(f\"When Red Team loses, their average minions score is {round(df[df['blueWins']==1]['redTotalMinionsKilled'].mean(),2)}\")","af64982c":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueTotalJungleMinionsKilled\", bins=25, ax=ax[0], color=\"b\")\nsns.histplot(data=df, x=\"redTotalJungleMinionsKilled\", bins=25, ax=ax[1], color=\"r\")\n\nplt.suptitle(\"Total Minions Killed\")\n\nax[0].set_title(\"Blue Team\")\nax[1].set_title(\"Red Team\")\n\nplt.tight_layout()","58070bec":"print(f'When Blue Team wins, their average jungle minion score is {round(df[df[\"blueWins\"]==1][\"blueTotalJungleMinionsKilled\"].mean(),2)}')\nprint(f'When Blue Team loses, their average jungle minion score is {round(df[df[\"blueWins\"]==0][\"blueTotalJungleMinionsKilled\"].mean(),2)}')\nprint(\"-\"*65)\nprint(f'When Red Team wins, their average jungle minion score is {round(df[df[\"blueWins\"]==0][\"redTotalJungleMinionsKilled\"].mean(),2)}')\nprint(f'When Red Team loses, their average jungle minion score is {round(df[df[\"blueWins\"]==1][\"redTotalJungleMinionsKilled\"].mean(),2)}')","5dcdc23e":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueTotalExperience\", bins=25, ax=ax[0], color=\"b\")\n\nsns.histplot(data=df, x=\"redTotalExperience\", bins=25, ax=ax[1], color=\"r\")\n\nplt.tight_layout()","ce56118d":"print(f'When Blue Team wins, their average total experince is {round(df[df[\"blueWins\"] == 1].blueTotalExperience.mean(),2)}')\nprint(f'When Blue Team loses, their average total experince is {round(df[df[\"blueWins\"] == 0].blueTotalExperience.mean(),2)}')\nprint(\"-\"*70)\nprint(f'When Red Team wins, their average total experince is {round(df[df[\"blueWins\"] == 0].redTotalExperience.mean(),2)}')\nprint(f'When Red Team loses, their average total experince is {round(df[df[\"blueWins\"] == 1].redTotalExperience.mean(),2)}')","00d52a84":"print(f'When Blue Team wins, their average level is {round(df[df[\"blueWins\"]==1].blueAvgLevel.mean(),2)}')\nprint(f'When Blue Team loses, their average level is {round(df[df[\"blueWins\"]==0].blueAvgLevel.mean(),2)}')\nprint(\"-\"*50)\nprint(f'When Red Team wins, their average level is {round(df[df[\"blueWins\"]==0].redAvgLevel.mean(),2)}')\nprint(f'When Red Team loses, their average level is {round(df[df[\"blueWins\"]==1].redAvgLevel.mean(),2)}')","215acdc0":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueWardsPlaced\", bins=25, ax=ax[0], color=\"b\")\nax[0].set_xlim(0,120)\n\nsns.histplot(data=df, x=\"redWardsPlaced\", bins=25, ax=ax[1], color=\"r\")\nax[1].set_xlim(0,120)\nplt.tight_layout()","71f03927":"print(f\"When Blue Team wins, their average ward score is {round(df[df['blueWins'] == 1]['blueWardsPlaced'].mean(),2)}\")\nprint(f\"When Blue Team loses, their average ward score is {round(df[df['blueWins'] == 0]['blueWardsPlaced'].mean(),2)}\")\nprint(\"-\"*60)\nprint(f'When Red Team wins, their average ward score is {round(df[df[\"blueWins\"] == 0][\"redWardsPlaced\"].mean(),2)}0')\nprint(f'When Red Team loses, their average ward score is {round(df[df[\"blueWins\"] == 1][\"redWardsPlaced\"].mean(),2)}')\nprint(\"-\"*60)\nprint(f'When Blue Team wins, they destroyed {round(df[df[\"blueWins\"] == 1][\"blueWardsDestroyed\"].mean(),2)} wards per game.')\nprint(f'When Red Team wins, they destroyed {round(df[df[\"blueWins\"] == 0][\"redWardsDestroyed\"].mean(),2)} wards per game.')","87fd37ba":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueWardsDestroyed\", bins=25, ax=ax[0], color=\"b\")\nax[0].set_xlim(0,30)\n\nsns.histplot(data=df, x=\"redWardsDestroyed\", bins=25, ax=ax[1], color=\"r\")\nax[1].set_xlim(0,30)\nplt.tight_layout()","f7a0b910":"fig, ax = plt.subplots(ncols=2, figsize=(8,4), dpi=200)\n\nsns.histplot(data=df, x=\"blueKills\", bins=25, ax=ax[0], color=\"b\")\n\nsns.histplot(data=df, x=\"redKills\", bins=25, ax=ax[1], color=\"r\")\nplt.tight_layout()","2ca054a1":"print(f'KDA means Kills\/Deaths\/Assists. Lets chech KDAs of each team when win and lose.')\nprint(f'When Blue Team Wins, their average KDA is {round(df[df[\"blueWins\"] == 1].blueKills.mean(),1)}\/{round(df[df[\"blueWins\"] == 1].blueAssists.mean(),1)}\/{round(df[df[\"blueWins\"] == 1].blueDeaths.mean(),1)}')\nprint(f'When Blue Team loses, their average KDA is {round(df[df[\"blueWins\"] == 0].blueKills.mean(),1)}\/{round(df[df[\"blueWins\"] == 0].blueAssists.mean(),1)}\/{round(df[df[\"blueWins\"] == 0].blueDeaths.mean(),1)}')\nprint(\"-\"*60)\nprint(f'When Red Team Wins, their average KDA is {round(df[df[\"blueWins\"] == 0].redKills.mean(),1)}\/{round(df[df[\"blueWins\"] == 0].redAssists.mean(),1)}\/{round(df[df[\"blueWins\"] == 0].redDeaths.mean(),1)}')\nprint(f'When Red Team Wins, their average KDA is {round(df[df[\"blueWins\"] == 1].redKills.mean(),1)}\/{round(df[df[\"blueWins\"] == 1].redAssists.mean(),1)}\/{round(df[df[\"blueWins\"] == 1].redDeaths.mean(),1)}')","9fae890e":"corr = df.corr()[\"blueWins\"].sort_values(ascending=False).drop(\"blueWins\")","ec244889":"plt.figure(figsize=(12,8), dpi=200)\nsns.barplot(x=corr.index, y=corr.values)\nplt.xticks(rotation=90);","6d0c33f9":"corr","c5eb72fa":"# Glossary\n\n- Warding totem: An item that a player can put on the map to reveal the nearby area. Very useful for map\/objectives control.\n- Minions: NPC that belong to both teams. They give gold when killed by players.\n- Jungle minions: NPC that belong to NO TEAM. They give gold and buffs when killed by players.\n- Elite monsters: Monsters with high hp\/damage that give a massive bonus (gold\/XP\/stats) when killed by a team.\n- Dragons: Elite monster which gives team bonus when killed. The 4th dragon killed by a team gives a massive stats bonus. The 5th dragon (Elder Dragon) offers a huge advantage to the team.\n- Herald: Elite monster which gives stats bonus when killed by the player. It helps to push a lane and destroys structures.\n- Towers: Structures you have to destroy to reach the enemy Nexus. They give gold.\n- Level: Champion level. Start at 1. Max is 18.","40c7b857":"# Exploratory Data Analysis","0ee31e70":"# Wards","d7969f7e":"### Ban Yasuo Please!!!","2f61293d":"League of Legends' famous Summoner's Rift! As you can see, Blue Team's base is on the lower left corner whereas Red Team's base is on the upper right corner. In order to win, you have to destroy enemy team's base. As a Blue Team, in early game, you have easier acces to Herald but on the other hand Red Team has easier acces to Dragons all game long. After 20 minutes into the game, Baron Nashor is landing to the Rift! Unfortunately, our data contains 10 minutes of the games so I won't be able to study Baron Nashor's impact in the game which is, as an ex Diamond 2 player, I think one of the most important, if not the most important object in the game.","87a5d8b6":"# Total Minions Killed","2f0d09e7":"#### Again, jungle minion score is close too.","f9684f01":"# Content\n\nThis dataset contains the first 10min. stats of approx. 10k ranked games (SOLO QUEUE) from a high ELO (DIAMOND I to MASTER). Players have roughly the same level.\n\nThere are 19 features per team (38 in total) collected after 10min in-game. This includes kills, deaths, gold, experience, level etc.","da7f3457":"#### Experince alone does not mean much to most players. Let's look into level difference between teams when they win or lose.","c5401a83":"# Dragon","413ca4ba":"# Correlation","28366e2c":"#### Almost identical average level.","80ab9b37":"# Experience","7a49a363":"#### When neither team got dragon, both team has %50 win rate.","6dc9d1ae":"####\u00a0Great! No missing values! Now, for readibility, let's create new column from `blueWins`.","3aeac58d":"#### If a team has taken 2 elite monsters within 10 minutes, the probability of winning the game is very high.\n\n#### If neither team none of dragon and herald, win rate is almost the same. \n\n#### At the end of 10 minutes, the probability of winning the game is very low, whichever team has not yet got an elite monster. ","511154d5":"# Impact of the First Blood","f5ada58e":"#### Ward scores for both team when they are both winning or losing is so close. As I said before, all those players are really good in this game and wards is accepted as one of the most important thing in the game. I wonder how correlated is warding and winning given almost all games really close in terms of ward score.","8460d4f9":"# Context\n\nLeague of Legends is a MOBA (multiplayer online battle arena) where 2 teams (blue and red) face off. There are 3 lanes, a jungle, and 5 roles. The goal is to take down the enemy Nexus to win the game","66e4a9a6":"#### Just like dragon, when neither of the teams got herald, win rate is %50 for both of them.","35cb15c3":"#### Both teams winrate is identical when has a gold advantage. Let's look into first blood's impact.","417e066f":"#### Data has 38 features and 9879 rows. Let's check if there is any missing values. ","6af9ff49":"# Win Rate When Has a Gold Advantage\n\n#### Let's check win rate when team has a gold advantage.","1c773276":"# Average Level","69162d1f":"#### Let's look at distribution of winning sides.","3055de77":"#### Minion scores are close to each other when teams wins or loses.","7e2959bd":"#### KDA's almost identical. \n\n#### Now let's check correlation between winning game and other features.","982759b8":"# Kills","c935602d":"#### Given this data contains just the first 10 minutes of the game, getting herald is hard for both of the games, especially given the map location, Red Team got herald less times compared to Blue Team. Let's look into herald's impact on the game.","b1fdcb6d":"### We can clearly see from the bar plot of correlation that, Gold Difference between the team is the most important feature in terms of winning the game. It is followed by Experience Difference, Total Gold, Total Experience, KDA's. Wonderfull! Let's make conclusions by those findings.","70d54f92":"# Jungle minions killed","69f9a598":"#### Let's start with importing esential libraries.","ba24c3e0":"As I said in the beginning of the analysis, myself is an ex Diamond 2 League of Legends player. This data contains top %0.4 players which are called as 'High-Elo Players' among League players. When you are in high-elo in League, you usually play with the same players most of the time because there is not much high-elo players. That means, most of players know their opponents in the game, their gamestyle, their warding times, their reactions to repeated ganks from junglers, etc. It is so much different from low-elo games where you play with different people every game. Knowing you opponent really impacts the playstyle of players. In League of Legends, there are so many little things to consider beyond our analysis here which contains so little information to begin with. \n\n\nLet's consider correlation table. It says, gold difference between people is the single most important thing in winning the game. That is of course true, because if you have more golds then you can buy more items and become more powerfull than your enemies. But how can you get more golds from your opponents? By krilling you enemies is one answer, especially in low-elo games, most of the players will tell you this. What about high-elo players? In high-elo unlike low-elo, players play the game more macro style, which means seeing the big picture. They don't try to kill their enemies, of course if they can they do, they try to gain advantage with little wins rather than killing enemies. What are those little wins? You can get better base timing by manipulating minions better than your opponent and by winning those 30-40 seconds can help your team secure first dragon. If you are in bot lane, pushing your lane means your jungler can have enemy team's bot side jungle. etc. Those little victories over your enemy helps you win the game.\n\n\nI am not trying to explain League of Legends' macro gameplan or make you understand how you win the game. I haven't played the game for months actually. What I am trying to say is *DOMAIN KNOWLEDGE IS MORE IMPORTANT THAN YOU THINK*. If I wasn't a League player myself, I would just say 'Look at the correlation plot. Warding has 0.000087 correlation with Blue Team winning the game. It means nothing.'. Although seems like it has very little correlation with winning, I know that it is one of the most important thing in game. Because I know that, without warding, you can't get herald or dragons and getting elite monsters has a huge impact on winning the game. Maybe great data scientist who has long time experince would still understand this without domain knowledge, but junior data scientists like me, most of the time, wouldn't understand the importance of warding. This EDA really made me understand how important to have domain knowledge. From now on, when I am working on a dataset what I have little to no domain knowledge, before getting to work, I will try to learn about dataset's domain.\n\n\nThis EDA was really great experince for me. I really enjoyed it and I hope you enjoyed it too. I will be waiting for your feedback which is really important for my improvement. Thank you very much.","27217cde":"#### All this data is 10 min data so per min datas kind of useless. I will drop those.","a8ffa82a":"# Conclusion","bc4111b9":"#### For high-elo players, warding is really important. It secures you from dying to a jungle gank or it gives importank information such as if enemy team getting drake or herald. Let's check if warding has really a huge impact on the games.","1d26ad8e":"# Herald","08d65cd8":"# Elite monsters"}}