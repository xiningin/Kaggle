{"cell_type":{"625b4b14":"code","6e15803d":"code","e8a03c5a":"code","ac1cab52":"code","e4258e33":"code","29af788c":"code","6bb8c129":"code","49787b7f":"code","7c1da168":"code","9ddda5ca":"code","86ca58c5":"code","a646af9a":"code","489bf731":"code","ddbb5daa":"code","8b514482":"code","300c7b29":"code","ae0c6518":"markdown","6488b4c4":"markdown","9ede1717":"markdown","b8cdda67":"markdown","799873de":"markdown","114ca55b":"markdown","eea2b656":"markdown"},"source":{"625b4b14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6e15803d":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nimport statsmodels.formula.api as smf\n%matplotlib inline","e8a03c5a":"data = pd.read_csv(\"\/kaggle\/input\/simplelinearregression\/2nd\/delivery_time.csv\") #Loading\ndata.head()","ac1cab52":"data.info() #data has No null values","e4258e33":"data_1 = data.copy() # Making copy of data so original data sholud not lose\ndata_1 = data.rename(columns={\"Delivery Time\":\"DT\",\"Sorting Time\":\"ST\"})\ndata_1.head()","29af788c":"sns.scatterplot(x=data_1[\"ST\"],y=data_1[\"DT\"]) # Some Lenearity is there between ST & DT","6bb8c129":"data_1.corr()  ","49787b7f":"plt.figure(figsize=(15,5))\nplt.subplot(121)\nsns.histplot(x=data_1[\"DT\"],kde=True) #to check How data is Distributed\nplt.subplot(122)\nsns.histplot(x=data_1[\"ST\"],kde=True) #to check How data is Distributed","7c1da168":"# Creating the Model\n\nmodel = smf.ols(\"DT~ST\",data=data_1) #Create the model\nmodel = model.fit() #Train the model","9ddda5ca":"sns.regplot(x=\"ST\",y=\"DT\",data=data_1) #Regrestion Line \nplt.show()","86ca58c5":"model.summary()","a646af9a":"model.rsquared # Model can explain upto 68%, to be good model 0.85 is recommended ","489bf731":"model.params #to check coef of Intercept(Bita0) & coeff of DT (Bita1) ","ddbb5daa":"model.pvalues # as pvalue is almost 0 DT is good predictor for ST","8b514482":"new_st = pd.DataFrame(pd.Series([11,7]),columns=[\"ST\"])","300c7b29":"model.predict(new_st)","ae0c6518":"Build a simple linear regression model by performing EDA and do necessary transformations and \nselect the best model using R or Python.\n1) Delivery_time -> Predict delivery time using sorting time","6488b4c4":"Checking Correlation","9ede1717":"# Prediction for new ST","b8cdda67":"Rename the data_set as they are having space in the column name","799873de":"* For 11 Sorting time , 24.72 will be the Delivery time\n* For 7 Sorthing time, 18.12 will be the Delivery time","114ca55b":"check the lenearality between DT & ST","eea2b656":"r = 0.82 tells some what good relation of lenearity "}}