{"cell_type":{"558e02dc":"code","4e507535":"markdown"},"source":{"558e02dc":"import numpy as np\nimport pandas as pd\n\nimport plotly.plotly as py\nimport plotly.graph_objs as go\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\n\nmy_style = 'mapbox:\/\/styles\/jonleon\/cjpwcy37n21mx2rnzxq5uob4i'\nmapbox_access_token = 'pk.eyJ1Ijoiam9ubGVvbiIsImEiOiJjanB1eGJjYzYwYmZpNGFsZW9oa2hxZGJzIn0.Bs58Ngdyl3BZ4CTCXTJ0BA'\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\ncollisions = pd.read_csv('..\/input\/nypd-motor-vehicle-collisions.csv')\n\n# Convert to datetime format\ncollisions['date_parsed'] = pd.to_datetime(collisions['DATE'], format=\"%Y-%m-%d\")\ncollisions_by_month = collisions['date_parsed'].value_counts().resample('m').sum()\n\nlocations = go.Scattermapbox(\n    lat=collisions['LATITUDE'][:10001],\n    lon=collisions['LONGITUDE'][:10001],\n    mode='markers',\n    marker=dict(\n        size=4,\n        color='gold',\n        opacity=0.8\n    ),\n    text=('Date: '+collisions['date_parsed'][:10001].astype(str)+\n          '<\/br>Injured: '+collisions['NUMBER OF PERSONS INJURED'][:10001].astype(str)+\n          '<\/br>Killed: '+collisions['NUMBER OF PERSONS KILLED'][:10001].astype(str)\n    ),\n    name='locations'\n)\n\ndates = go.Scatter(\n    x=collisions_by_month.index,\n    y=collisions_by_month.values,\n    line=dict(color='gold'),\n    name='dates'\n)\n\ndata = [locations, dates]\n\nlayout = dict(\n    title='NYPD Motor Vehicle Collisions',\n    titlefont=dict(\n        size=20,\n        family=\"Raleway, Roman, Arial\"\n    ),\n    autosize=True,\n    hovermode='closest',\n    mapbox=dict(\n        domain=dict(x = [0, 0.55],\n#                     y= [0, 0.9]\n        ),\n        accesstoken=mapbox_access_token,\n        bearing=0,\n        center=dict(\n            lat=40.7,\n            lon=-73.9\n        ),\n        pitch=0,\n        zoom=8.5,\n        style=my_style,\n    ),\n    xaxis = dict(\n        domain = [0.6, 1]\n    ),\n#     yaxis = dict(\n#         domain = [0, 0.9]\n#     )\n)\n\nannotations =  [\n    {\n      \"x\": 0.3, \n      \"y\": 1.0, \n      \"font\": {\"size\": 12, \"family\":\"Raleway, Roman, Arial\"}, \n      \"showarrow\": False, \n      \"text\": \"10K Most Recent\", \n      \"xanchor\": \"center\", \n      \"xref\": \"paper\", \n      \"yanchor\": \"bottom\", \n      \"yref\": \"paper\"\n    }, \n    {\n      \"x\": 0.8, \n      \"y\": 1.0, \n      \"font\": {\"size\": 12, \"family\":\"Raleway, Roman, Arial\"}, \n      \"showarrow\": False, \n      \"text\": \"By Month\", \n      \"xanchor\": \"center\", \n      \"xref\": \"paper\", \n      \"yanchor\": \"bottom\", \n      \"yref\": \"paper\"\n    }\n]\n\nlayout['annotations'] = annotations\n\nfig = dict(data=data, layout=layout)\nfig['layout'].update(showlegend=False, plot_bgcolor='black', paper_bgcolor='black', font=dict(color= 'white'))\n\niplot(fig)","4e507535":"# Notes\n\nThis is an excercise following Kaggle Dashboarding with Notebooks: [Day 2](https:\/\/www.kaggle.com\/rtatman\/dashboarding-with-notebooks-day-2-python\/notebook).\n\n### Links\n* Interactive plots made with Plot.ly and Mapbox ([reference](https:\/\/plot.ly\/python\/scattermapbox\/))\n* Official NYPD Motor Vehicle [Dashboard](https:\/\/data.cityofnewyork.us\/NYC-BigApps\/NYPD-Motor-Vehicle-Collisions-Summary\/m666-sf2m)"}}