{"cell_type":{"534f9539":"code","2c5e8356":"code","165222da":"code","68240cf7":"code","86b11390":"code","372bd74d":"code","1532e043":"code","81b3c477":"markdown","6df16ed7":"markdown","681be991":"markdown","79bb12b0":"markdown","39a7e9d2":"markdown","677d87ee":"markdown","d8692f57":"markdown"},"source":{"534f9539":"import numpy as np\nimport pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\ndf = pd.read_csv(\"\/kaggle\/input\/na-lcs-summer-2020-player-proximities\/proximities.csv\")\ndf.drop(\"Unnamed: 0\", inplace=True, axis=1)\nteams = df['game_won'].drop_duplicates().tolist()","2c5e8356":"df.head()","165222da":"df_sup = df[df['player_role']==\"support\"]","68240cf7":"df3 = pd.DataFrame(index=teams)\n\nfor role in ['top', 'jgl', 'mid', 'adc']:\n    df3[role] = df_sup[df_sup['teammate_role']==role].groupby('team').mean()['proximity'].tolist()\n\n    \nfor role in ['top','jgl','mid','adc']:\n    df3[role] -= df3[role].min()\n    df3[role] \/= df3[role].max()\ndf3","86b11390":"means = [0.0]*4\nfor i,role in enumerate(['top','jgl','mid','adc']):\n    means[i] = (df3[role].mean() - df3[role].min()) \/ (df3[role].max() - df3[role].min())","372bd74d":"n = 2\n\nnums = df3.iloc[n].tolist()\nnums.append(nums[0])\nmeans.append(means[0])\n\nfig = go.Figure()\n\n\nfig.add_trace(go.Scatterpolar(r = means, \n                    theta = ['Top','  Jungle','Mid  ','ADC', 'Top'],\n                             name = \"League average\"))\n\nfig.add_trace(go.Scatterpolar(r = nums, \n                    theta = ['Top','  Jungle','Mid  ','ADC', 'Top'],\n                             fill = \"toself\",\n                             name = \"%s Support\" % df3.index[n].upper()))\n\n\nfig.update_layout(title=\"%s: Support proximities\" % df3.index[n].upper())\nfig.update_layout(\n  polar=dict(\n    radialaxis=dict(\n      visible=True,\n    range = [0,1],\n        tickfont_size = 9,\n        nticks=3,\n        angle=180,\n        tickangle=-180\n    ),\n  ),\n  showlegend=True\n)\n\n\nfig.show()","1532e043":"for n in range(10):\n    nums = df3.iloc[n].tolist()\n    nums.append(nums[0])\n\n    fig = go.Figure()\n\n\n    fig.add_trace(go.Scatterpolar(r = means, \n                        theta = ['Top','  Jungle','Mid  ','ADC', 'Top'],\n                                 name = \"League average\"))\n\n    fig.add_trace(go.Scatterpolar(r = nums, \n                        theta = ['Top','  Jungle','Mid  ','ADC', 'Top'],\n                                 fill = \"toself\",\n                                 name = \"%s Support\" % df3.index[n].upper()))\n\n\n    fig.update_layout(title=\"%s: Support proximities\" % df3.index[n].upper())\n    fig.update_layout(\n      polar=dict(\n        radialaxis=dict(\n          visible=True,\n        range = [0,1],\n            tickfont_size = 9,\n            nticks=3,\n            angle=180,\n            tickangle=-180\n        ),\n      ),\n      showlegend=True\n    )\n\n\n    fig.show()","81b3c477":"# Method\n\nFirst I'll take all the entries for Support players. The dataset includes entries for Junglers too, but that's not needed for this","6df16ed7":"Next I'll calculate the mean proximities between the Support and their teammates for every team. Seeing as there will be different value ranges for each role, I'll normalise them to fall between 0 and 1","681be991":"This can then be repeated for the entire league","79bb12b0":"Next step is to find a way to graph these statistics that will show how each player compares across their role. A good way is a radar chart, which will clearly show how each team's Support compares across the league. This example shows how Golden Guardian's Support player compares. You can see that he plays around his ADC and his Toplaner more than average, but not so much around his Midlaner and Jungler","39a7e9d2":"# Comparing NA LCS Support Proximities\n\n## Introduction\n\nOne important statistic in professional League of Legends is proximity. That is to say, how often one player is near one of their teammates. This can be useful to figure out the playstyle of certain teams. If your opposing team's *Support* player doesn't play around their *Midlaner* a lot, that's a pattern that may be abused. Similarly, if their *Jungler* tends to play around his *Toplaner*, then it may be a good idea to provide extra support for your own *Toplaner*. In this notebook I'll try to compare the Supports of the North American League of Legends Championship Series (NA LCS) and attempt to graph the patterns in their play through proximities\n\n## Proximity data\n\nThe data was gathered using [this](https:\/\/github.com\/Steeeephen\/loltracker) program, which tracks the locations of players over time from Youtube videos. To get the proximity stat, the distance between players is calculated at every second and the proportion of time spent within 50 units of each other is returned. This proportion then denotes how often any two players are in 'close proximity', with higher values meaning more time spent in each other's vicinity.\n\nThe data was gathered using a subset of 75 games from the Summer split of the NA LCS. \n","677d87ee":"This can be used to see the trends in how certain teams play. While it's not a complete game changer in League of Legends analysis, it can prove useful to quickly analyse an opposing team and get an idea of how they play.","d8692f57":"This shows how each proximity value compares across the league. 0 being the lowest value and 1 the highest, with the rest of the values scaled along this range.\n\nFor comparison's sake, I'll also gather the average values across each role. This will allow me to see how each support compares to the average"}}