{"cell_type":{"9a4b2b3b":"code","5e34738b":"code","af29410f":"code","a5a40faf":"code","05bfd6f9":"code","30d6493c":"code","aa3312c8":"code","6c6e970f":"code","6ca67e86":"code","20d31090":"code","27e6f4db":"markdown","e5ed9c83":"markdown","0f610d63":"markdown","db038fc9":"markdown","825a011d":"markdown","6c001c1e":"markdown","6c3dc850":"markdown","59d576d0":"markdown","866068c0":"markdown"},"source":{"9a4b2b3b":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5e34738b":"import pandas as pd\ndf = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv\", header=0, delimiter=',')\ntest = pd.read_csv(\"\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv\", header=0, delimiter=',')","af29410f":"df.head()","a5a40faf":"test.head()","05bfd6f9":"df = df.fillna(0)\ntest = test.fillna(0)\ndf = pd.get_dummies(df)\ntest = pd.get_dummies(test)\ndf.head()","30d6493c":"trainingSize = int(df.shape[0]*3\/4)\n\nx_train = df.loc[0:trainingSize, df.columns != 'SalePrice']\ny_train = df.loc[0:trainingSize, df.columns == 'SalePrice']\n\nx_val = df.loc[trainingSize:, df.columns != 'SalePrice']\ny_val = df.loc[trainingSize:, df.columns == 'SalePrice']\n","aa3312c8":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.optimizers import Adam\n\nfrom numpy.random import seed\nseed(1)\n\nmodel = Sequential(name='my_model')\nmodel.add(Dense(x_train.shape[1], activation='relu',input_dim=x_train.shape[1],name=\"dense_input\"))\nmodel.add(Dense(1, activation='relu',name=\"dense_output\",use_bias=True))\n\nmodel.compile(loss='mean_squared_error', optimizer=\"adam\")\n\nmodel.summary()","6c6e970f":"import matplotlib.pyplot as plt\n\nhistory = model.fit(x_train,y_train,epochs=25)\n\nplt.plot(history.history['loss'], label='loss')\nplt.suptitle('Model training', fontsize=20)\nplt.xlabel('Epochs', fontsize=18)\nplt.ylabel('Loss', fontsize=16)\nplt.show()","6ca67e86":"import matplotlib.pyplot as plt\n\ny_pred = model.predict(x_val.values)\n\nplt.suptitle('Scatter of predicitons on validation data', fontsize=20)\nplt.xlabel('True value', fontsize=18)\nplt.ylabel('Predicted value', fontsize=16)\nplt.scatter(y_val, y_pred)\nplt.show()","20d31090":"import numpy as np\n\ndifference = y_val-y_pred\n\nplt.suptitle('Difference between predicitons and validation data', fontsize=20)\nplt.ylabel('Number', fontsize=16)\nplt.xlabel('Difference', fontsize=18)\ncounts, bins = np.histogram(difference, bins = 100)\nplt.hist(bins[:-1], bins, weights=counts)\nplt.show()\n\nprint(\"Mean: \" + str(difference[\"SalePrice\"].mean()) + \"; Standard deviation: \" + str(difference[\"SalePrice\"].std()))","27e6f4db":"Watch the data:","e5ed9c83":"Create training and validation:","0f610d63":"Transform object into categorical:","db038fc9":"### Creating a model:\n\nHere we just need to find a coeeficient to each column, and the result should be somewhat satisfactory.","825a011d":"Importing:","6c001c1e":"## Importing the data","6c3dc850":"See the result with our validation datas:","59d576d0":"### My first Kaggle work\n## Exploring the files","866068c0":"Training:"}}