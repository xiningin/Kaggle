{"cell_type":{"dc6ccb42":"code","c74ebfff":"code","08e5daf9":"code","0edbd473":"code","2aae1ed2":"code","5d53e347":"code","4a87e1a6":"code","e5e13fc0":"code","fa360553":"code","2a17b974":"code","a9604f6d":"code","a657fc84":"code","b45e6cbe":"code","e3425b1c":"code","fd5d74ca":"markdown","92adcbc1":"markdown","1df29a1f":"markdown","479aaba8":"markdown","b32142a3":"markdown","54a1f3e0":"markdown","d6d40988":"markdown","7c8ead61":"markdown","be34f5c6":"markdown","5aec317e":"markdown","06c165db":"markdown","e1a86fef":"markdown","b8591e99":"markdown","8c475f63":"markdown","f57c3846":"markdown","3c03220e":"markdown"},"source":{"dc6ccb42":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n#for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#    for filename in filenames:\n#        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c74ebfff":"import librosa\nimport IPython.display as ipd\nimport matplotlib.pyplot as plt\nimport librosa.display\nfrom matplotlib import gridspec\nfrom PIL import Image\nimport warnings\nwarnings.filterwarnings(\"ignore\")","08e5daf9":"data, sr = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/brdowl\/XC413729.mp3\",sr=None)\nprint(type(data))\nprint(len(data))\nprint(type(sr))\nprint(sr)","0edbd473":"ipd.Audio(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/brdowl\/XC413729.mp3\")","2aae1ed2":"plt.figure(figsize=(14, 5))\nlibrosa.display.waveplot(data, sr=sr)","5d53e347":"#display Spectrogram\nX = librosa.stft(data)\nXdb = librosa.amplitude_to_db(abs(X))\nplt.figure(figsize=(14, 5))\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='hz') \nplt.colorbar()","4a87e1a6":"# log of frequencies \nplt.figure(figsize=(14, 5))\nplt.title=\"Log Spectrom\",\nlibrosa.display.specshow(Xdb, sr=sr, x_axis='time', y_axis='log')\nplt.colorbar()","e5e13fc0":"# Zooming in Zero Crossing Rate\nn0 = 10000\nn1 = 10100\nplt.figure(figsize=(14, 5))\nplt.plot(data[n0:n1])\nplt.grid()","fa360553":"zero_crossings = librosa.zero_crossings(data[n0:n1], pad=False)\nprint(sum(zero_crossings))","2a17b974":"#spectral centroid -- centre of mass -- weighted mean of the frequencies present in the sound\nimport sklearn\n\nspectral_centroids = librosa.feature.spectral_centroid(data, sr=sr)[0]\nprint(spectral_centroids.shape)\n\n# Computing the time variable for visualization\nframes = range(len(spectral_centroids))\nt = librosa.frames_to_time(frames)\n\n# Normalising the spectral centroid for visualisation\ndef normalize(x, axis=0):\n    return sklearn.preprocessing.minmax_scale(x, axis=axis)\n\n#Plotting the Spectral Centroid along the waveform\nplt.figure(figsize=(14, 5))\nlibrosa.display.waveplot(data, sr=sr, alpha=0.4)\nplt.plot(t, normalize(spectral_centroids), color='r')","a9604f6d":"plt.figure(figsize = (14,5))\nspectral_rolloff = librosa.feature.spectral_rolloff(data, sr=sr)[0]\nlibrosa.display.waveplot(data, sr=sr, alpha=0.4)\nplt.plot(t, normalize(spectral_rolloff), color='r')","a657fc84":"mfccs = librosa.feature.mfcc(data, sr=sr)\nprint(mfccs.shape)\n#Displaying  the MFCCs:\nplt.figure(figsize = (14,5))\nlibrosa.display.specshow(mfccs, sr=sr, x_axis='time')","b45e6cbe":"fig = plt.figure(figsize=(18, 18)) \ngs = gridspec.GridSpec(5, 2, width_ratios=[2, 6]) \nax0 = plt.subplot(gs[0])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/bkbwar.jpg\")\nax0.axis('off')\nax0.imshow(img)\nax1 = plt.subplot(gs[1])\ny, sr = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/bkbwar\/XC101580.mp3\")\nC = librosa.feature.chroma_cqt(y=y, sr=sr)\nlibrosa.display.specshow(C, y_axis='chroma', x_axis='time')\nax1.plot()\n\nax2 = plt.subplot(gs[2])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/clanut.jpg\")\nax2.axis('off')\nax2.imshow(img)\nax3 = plt.subplot(gs[3])\ny1, sr1 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/clanut\/XC391597.mp3\")\nC1 = librosa.feature.chroma_cqt(y=y1, sr=sr1)\nlibrosa.display.specshow(C1, y_axis='chroma', x_axis='time')\nax3.plot()\n   \nax4 = plt.subplot(gs[4])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/whcspa.jpg\")\nax4.axis('off')\nax4.imshow(img)\nax5 = plt.subplot(gs[5])\ny2, sr2 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/whcspa\/XC478423.mp3\")\nC2 = librosa.feature.chroma_cqt(y=y2, sr=sr2)\nlibrosa.display.specshow(C2, y_axis='chroma', x_axis='time')\nax5.plot()\n\nax6 = plt.subplot(gs[6])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/prawar.jpg\")\nax6.axis('off')\nax6.imshow(img)\nax7 = plt.subplot(gs[7])\ny3, sr3 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/prawar\/XC444966.mp3\")\nC3 = librosa.feature.chroma_cqt(y=y3, sr=sr3)\nlibrosa.display.specshow(C3, y_axis='chroma', x_axis='time')\nax7.plot()\n\nax8 = plt.subplot(gs[8])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/rebwoo.jpg\")\nax8.axis('off')\nax8.imshow(img)\nax9 = plt.subplot(gs[9])\ny4, sr4 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/rebwoo\/XC145839.mp3\")\nC4 = librosa.feature.chroma_cqt(y=y4, sr=sr4)\nlibrosa.display.specshow(C4, y_axis='chroma', x_axis='time')\nax9.plot()","e3425b1c":"fig = plt.figure(figsize=(15, 13)) \ngs = gridspec.GridSpec(5, 2, width_ratios=[2, 6]) \nax0 = plt.subplot(gs[0])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/bkbwar.jpg\")\nax0.axis('off')\nax0.imshow(img)\nax1 = plt.subplot(gs[1])\ny, sr = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/bkbwar\/XC101580.mp3\")\nlibrosa.display.waveplot(y, sr)\nax1.plot()\n\nax2 = plt.subplot(gs[2])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/clanut.jpg\")\nax2.axis('off')\nax2.imshow(img)\nax3 = plt.subplot(gs[3])\ny1, sr1 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/clanut\/XC391597.mp3\")\nlibrosa.display.waveplot(y1, sr1)\nax3.plot()\n   \nax4 = plt.subplot(gs[4])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/whcspa.jpg\")\nax4.axis('off')\nax4.imshow(img)\nax5 = plt.subplot(gs[5])\ny2, sr2 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/whcspa\/XC478423.mp3\")\nlibrosa.display.waveplot(y2, sr2)\nax5.plot()\n\nax6 = plt.subplot(gs[6])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/prawar.jpg\")\nax6.axis('off')\nax6.imshow(img)\nax7 = plt.subplot(gs[7])\ny3, sr3 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/prawar\/XC444966.mp3\")\nlibrosa.display.waveplot(y3, sr3)\nax7.plot()\n\nax8 = plt.subplot(gs[8])\nimg = Image.open(\"\/kaggle\/input\/osic-bird-image\/rebwoo.jpg\")\nax8.axis('off')\nax8.imshow(img)\nax9 = plt.subplot(gs[9])\ny4, sr4 = librosa.load(\"\/kaggle\/input\/birdsong-recognition\/train_audio\/rebwoo\/XC145839.mp3\")\nlibrosa.display.waveplot(y4, sr4)\nax9.plot()","fd5d74ca":"## Spectral Rolloff\nits a <font color = 'orange'>specified percentage of the total spectral energy<\/font> in the Frequency of an Audio","92adcbc1":"## Linear-frequency power spectrogram comparision","1df29a1f":"Calculated <font color = 'orange'>MFCC: 20, Frames: 7492<\/font>\n\nMFCC: you can count and check the y-axis ![image.png](attachment:image.png)","479aaba8":"## Spectral Centroid","b32142a3":"Sample files\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/brdowl\/XC413729.mp3\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/pilwoo\/XC451058.mp3\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/semplo\/XC337236.mp3\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/ruckin\/XC131957.mp3\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/linspa\/XC475289.mp3\n\n\/kaggle\/input\/birdsong-recognition\/train_audio\/ribgul\/XC151285.mp3","54a1f3e0":"## Frequncy vs Time\nIn Audio, the sound is generated by the <font color= 'orange'>frequncy<\/font>. there are different ranges in frequncy. each sound has its own frequncy. you can see the <font color= 'orange'>Orange color strips in Spectrom and Log Spectrom charts<\/font>. that is the place the sound was in high frequncy.","d6d40988":"## MFCC - Mel-Frequency Cepstral Coefficients\nits about a small set of features (usually about 10\u201320) which concisely describe the <font color = 'orange'>overall shape of a spectral envelope<\/font>.","7c8ead61":"# Audio Feature Extraction","be34f5c6":"The <font color='red'>Red<\/font> line shows the spectrol centroid of this audio. It ends with above <font color = 'green'>0.75<\/font>. so the sound is good.","5aec317e":"## Amplitude Comparision","06c165db":"If you <font color = 'orange'>like<\/font> this kernel and want to <font color = 'orange'>fork<\/font> plz <font color = 'red'>UPVOTE.<\/font>\n\nIf you have suggestions to improve this kernel plz <font color = 'red'>COMMENT.<\/font>\n\n<font color = 'blue'>************************ Notebook is under construction ************************<\/font>","e1a86fef":"It indicates where the <font color = 'orange'>center of mass of the spectrum<\/font> is located. its the <font color = 'orange'>measure of the brightness of a sound<\/font>","b8591e99":"## Amplitude vs Time\nThis waveplot represents the <font color= 'orange'>amplitude<\/font> from the audio\nyou can see the listen the sound while seeing this chart, whenever the sound is high the spread of chart is also high especially beginning and <font color= 'orange'>from 8 to 27 seconds.<\/font>","8c475f63":"you can count the signal line crossed the 0 line, as I did ![image.png](attachment:image.png)","f57c3846":"## Zero Crossing Rate\n\nWe need to measure this <font color = 'orange'>Zero Crossing Rate<\/font> to understand the Smoothness of the sound if its a kind of voice. this is about <font color = 'orange'>counting how many number of times the signal is crossing the 0 line in a specific time period<\/font>. if its low like the below chart, its nice to hear, if its high like 1000 times its very difficult to listen.","3c03220e":"![image.png](attachment:image.png)"}}