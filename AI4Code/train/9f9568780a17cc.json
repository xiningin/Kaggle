{"cell_type":{"7c501d41":"code","3f7fa5c4":"code","c059bb18":"code","7cc9ae90":"code","ca0cf34b":"code","8e5ebe69":"code","223e04a0":"code","66017871":"markdown"},"source":{"7c501d41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","3f7fa5c4":"# Show some images\nfrom glob import glob\ntrain_fns = sorted(glob('..\/input\/siim-train-test-2\/dicom-images-train\/*\/*\/*.dcm'))\ntest_fns = sorted(glob('..\/input\/siim-train-test-2\/dicom-images-test\/*\/*\/*.dcm'))\n\nprint(len(train_fns))\nprint(len(test_fns))","c059bb18":"# show some images\nfrom matplotlib import pyplot as plt\nimport pydicom\n\nfor k in range(10):\n    fn = np.random.choice(test_fns)\n    img = pydicom.read_file(fn).pixel_array\n    plt.imshow(img, cmap='bone')\n    plt.axis('off')\n    plt.show()","7cc9ae90":"# load rle-encoded masks\nimport pandas as pd\nfrom collections import defaultdict\nrles = pd.read_csv('..\/input\/siim-train-test-2\/train-rle.csv')\n# images can have multiple annotations\nrles_ = defaultdict(list)\nfor image_id, rle in zip(rles['ImageId'], rles[' EncodedPixels']):\n    rles_[image_id].append(rle)\nrles = rles_\nannotated = {k: v for k, v in rles.items() if v[0] != '-1'}\nprint(\"%d of %d images are annotated\" % (len(annotated), len(rles)))","ca0cf34b":"print(\"Missing: \", len(train_fns) - len(rles))\n# This was discussed here: https:\/\/www.kaggle.com\/c\/siim-acr-pneumothorax-segmentation\/discussion\/96993#latest-560352","8e5ebe69":"# check the test images\nmeans = []\nfrom tqdm import tqdm_notebook as tqdm\nfor fn in tqdm(test_fns):\n    img = pydicom.read_file(fn).pixel_array\n    means.append(img.mean())\nprint(\"Test mean: \", np.mean(means))","223e04a0":"# check the train images\nmeans = []\nfor fn in tqdm(train_fns):\n    img = pydicom.read_file(fn).pixel_array\n    means.append(img.mean())\nprint(\"Train mean: \", np.mean(means))","66017871":"# Purpose\n\nShow the **full** dataset. This format might be easier and more accesible for participants. Have fun!"}}