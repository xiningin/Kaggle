{"cell_type":{"95994dac":"code","5060523e":"code","883f3101":"code","2be71572":"code","3cc4d32c":"code","6b28e68f":"code","ca6acb5f":"code","976dfdcc":"code","bdb0bfe2":"code","75379f3e":"code","94416f1b":"code","d1a9c8be":"code","d3dea0d7":"code","1b27b130":"code","3c22c523":"code","696fe846":"code","fea558a1":"code","77f9acc7":"code","b59e57e9":"code","6a420626":"markdown","f6865e67":"markdown","a31c58c3":"markdown","d1f47e95":"markdown","6dae7a9c":"markdown","66436ed1":"markdown","8738bbbb":"markdown","bb0646f3":"markdown","a1c1beb0":"markdown","94591347":"markdown"},"source":{"95994dac":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5060523e":"import cv2 as cv\nimport matplotlib.pyplot as plt","883f3101":"IMG_PATH = \"..\/input\/cusersmarildownloadstigerjpg\/tiger.jpg\"\n\nimgArray = cv.imread(IMG_PATH)","2be71572":"plt.imshow(imgArray)\n\nplt.show()","3cc4d32c":"convertedArray = cv.cvtColor(imgArray, cv.COLOR_BGR2RGB)\n\nplt.subplots(figsize=(15,10))\nplt.imshow(convertedArray);plt.show()","6b28e68f":"fig, ((ax1,ax2), (ax3,ax4)) =plt.subplots(2,2,figsize=(14,10))\n\nax1.imshow(convertedArray[:,:,0], cmap=\"Reds_r\"); ax1.set_title(\"R\", size=20) \nax2.imshow(convertedArray[:,:,1], cmap=\"Greens_r\"); ax2.set_title(\"G\", size=20)\nax3.imshow(convertedArray[:,:,2], cmap=\"Blues_r\"); ax3.set_title(\"B\", size=20)\n\nax4.axis(\"off\"); plt.tight_layout(); plt.show()\n","ca6acb5f":"fig, (ax1,ax2,ax3) = plt.subplots(1,3,figsize=(15,4))\n\nax1.hist(convertedArray[:,:,0].flatten(), color=\"R\", bins=200); ax1.set_title(\"R\", size=20)\nax2.hist(convertedArray[:,:,1].flatten(), color=\"G\", bins=200); ax1.set_title(\"G\", size=20)\nax3.hist(convertedArray[:,:,2].flatten(), color=\"B\", bins=200); ax1.set_title(\"B\", size=20)\n\nplt.tight_layout();plt.show()","976dfdcc":"type(convertedArray) #numpy.ndarray","bdb0bfe2":"convertedArray.dtype #dtype('uint8')","75379f3e":"convertedArray.min() #0\nconvertedArray.max() #255","94416f1b":"convertedArray.shape  #(845, 1200, 3)","d1a9c8be":"crop1 = convertedArray[:200, :300, :]\ncrop1.shape # (200,300, 3)\nplt.imshow(crop1);plt.show()","d3dea0d7":"#In case you want to select from row 600 to 900, column 350 to 1250 and all channels:\n\ncrop2 = convertedArray[600:900,350:1250,:]\nplt.figure(figsize=(15,8))\nplt.imshow(crop2); plt.show()","1b27b130":"#If you want to crop only one channel (the first one). Just write:\n\nplt.figure(figsize=(15,8))\nplt.imshow(convertedArray[600:900,350:1250,0], cmap=\"rainbow\");plt.show()","3c22c523":"convertedArray.shape #(845, 1200,3)\nconvertedArray.shape[0]*convertedArray.shape[1] #1014000","696fe846":"plt.subplots(figsize=(15,10))\nplt.imshow(convertedArray)\nplt.axvline(1000, color=\"yellow\")\nplt.axhline(600, color=\"orange\")\n\nplt.show()","fea558a1":"#If you want to extract these two profiles. Proceed this way for the horizontal section at row 600\n\nhorSection = convertedArray[600,:,:]\nplt.figure(figsize=(16,5))\nplt.plot(horSection[:,0], label=\"R\", color=\"#e74c3c\")\nplt.plot(horSection[:,1], label=\"G\", color=\"#16a085\")\nplt.plot(horSection[:,2], label=\"B\", color=\"#3498db\")\n\nplt.xlabel(\"X\"); plt.legend(); plt.show()\n","77f9acc7":"#Extract from the vertical one at column 1000\n\nverSection = convertedArray[:,1000,:]\nplt.figure(figsize=(16,5))\n\nplt.plot(verSection[:,0], label=\"R\", color=\"#e74c3c\")\nplt.plot(verSection[:,1], label=\"G\", color=\"#16a085\")\nplt.plot(verSection[:,2], label=\"B\", color=\"#3498db\")\n\nplt.xlabel(\"X\"); plt.legend();plt.show()","b59e57e9":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke war Hier' )","6a420626":"Codes by Praveen Kumar https:\/\/www.kaggle.com\/penchalaiah123\/11-steps-to-start-with-image-processing\/notebook\n\nAnd Miro Medium https:\/\/miro.medium.com\/max\/875\/1*0HQXgG-MujyKswo2eaBmGA.png\nhttps:\/\/miro.medium.com\/max\/875\/1*3bc5wRuYAWk-O7bM9LwN4Q.png\nhttps:\/\/miro.medium.com\/max\/875\/1*9_QH0aEIQMhymYmGeeZZOg.png","f6865e67":"#Dissecting an image\n\nSuppose you want to extract a vertical and a horizontal section from the image.","a31c58c3":"#Histograms","d1f47e95":"#Extract bit depth","6dae7a9c":"#Rearrange channels: from BGR to RGB","66436ed1":"#Where is my Tigress?? Be aware,she is hidden and could catch you while you don't expect. Just warning.","8738bbbb":"#Crop","bb0646f3":"Above, the tuple tells us that the image has 845 rows, 1200 columns and 3 channels (RGB). To crop the image we can simply use numpy indexing methods.\n\nTake the first 200 rows and the first 300 columns (of all channels) and write like this below:","a1c1beb0":"#Number of pixels","94591347":"#Show the channels separately"}}