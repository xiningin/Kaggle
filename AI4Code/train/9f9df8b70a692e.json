{"cell_type":{"98b86da4":"code","b9188120":"code","6c05e44f":"code","c706af4f":"code","5217675f":"code","a67d26ff":"code","21eeef1e":"code","a77f27e4":"code","4bdd8570":"code","5d8ff269":"code","1fe9ca6b":"code","042c3bd9":"code","5da0c4df":"code","65042844":"code","85cf5d20":"code","14cbb7cc":"code","aa26701b":"code","d8377437":"code","ceedc477":"code","8eab7424":"code","926e25a7":"code","f798e647":"code","0448362b":"code","8863e1c6":"code","c9a7de31":"code","c71c06d9":"code","75839d3e":"code","9e7bca0f":"code","392d6df6":"markdown","32fc7541":"markdown","81cd836e":"markdown","8c2c420f":"markdown","e2e893a3":"markdown","9a33991c":"markdown","69c84ebb":"markdown","fa4ac10b":"markdown","43e63e2e":"markdown","1fa201ae":"markdown","0feddec2":"markdown","a18f29a2":"markdown","f16771d6":"markdown","b10315d6":"markdown"},"source":{"98b86da4":"# numerical analysis\nimport numpy as np\n# storing and processing in dataframes\nimport pandas as pd\n# simple plotting\nimport matplotlib.pyplot as plt\n# advanced plotting\nimport seaborn as sns\n\n# splitting dataset into train and test\nfrom sklearn.model_selection import train_test_split\n# scaling features\nfrom sklearn.preprocessing import StandardScaler\n# selecting important features\nfrom sklearn.feature_selection import RFECV\n# k nearest neighbors model\nfrom sklearn.neighbors import KNeighborsClassifier\n# accuracy\nfrom sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, auc","b9188120":"# plot style\nsns.set_style('whitegrid')\n# color palettes\npal = ['#0e2433', '#ff007f']","6c05e44f":"# read data\ndf = pd.read_csv('..\/input\/breast-cancer-wisconsin-data\/data.csv')\n\n# first few rows\ndf.head()","c706af4f":"# no. of rows and columns\ndf.shape","5217675f":"# columns names\ndf.columns","a67d26ff":"# random rows\n# df.sample(5)","21eeef1e":"# descriptive statistics\n# df.describe(include='all')","a77f27e4":"# consise summary of dataframe\n# df.info()","4bdd8570":"# no. of na values in each columns\n# df.isna().sum()","5d8ff269":"# no of values in each class\nprint(df['diagnosis'].value_counts())\n\n# plot class distribution\nsns.countplot(df['diagnosis'], palette=pal, alpha=0.8)\nplt.show()","1fe9ca6b":"fig, ax = plt.subplots()\nm = ax.hist(df[df[\"diagnosis\"] == \"M\"]['radius_mean'], bins=20, range=(0, 30), \n            label = \"Malignant\", alpha=0.7, color='#232121')\nb = ax.hist(df[df[\"diagnosis\"] == \"B\"]['radius_mean'], bins=20, range=(0, 30), \n            label = \"Benign\", alpha=0.7, color='#df2378')\nplt.xlabel(\"Radius\")\nplt.ylabel(\"Count\")\nplt.title(\"Mean Radius\")\nplt.legend()\nplt.show()","042c3bd9":"print('Min radius of benign cancer :', df[df['diagnosis']=='B']['radius_mean'].min())\nprint('Max radius of benign cancer :', df[df['diagnosis']=='B']['radius_mean'].max())\nprint('Min radius of malignant cancer :', df[df['diagnosis']=='M']['radius_mean'].min())\nprint('Min radius of malignant cancer :', df[df['diagnosis']=='M']['radius_mean'].max())","5da0c4df":"# figure size\nplt.figure(figsize=(25, 12))\n# plot heatmap\nsns.heatmap(df.corr(), annot=True, fmt='.2f', cmap='RdGy')\n# show figure\nplt.show()","65042844":"# # figure size\n# plt.figure(figsize=(6, 6))\n# # plot pairplot\n# sns.pairplot(df, hue=\"diagnosis\", palette=pal)\n# # show figure\n# plt.plot()","85cf5d20":"sns.boxplot(data=df, x)","14cbb7cc":"sns.boxplot?","aa26701b":"# Equalize class distribution","d8377437":"# Drop unwanted columns\n\ndf.drop(['Unnamed: 32', 'id'], axis=1, inplace=True)\nprint(df.shape)","ceedc477":"# encoding diagnosis data\n\ndf['diagnosis'] = df['diagnosis'].apply(lambda x: 1 if x=='M' else 0)","8eab7424":"# scale features\n# scaler = StandardScaler()\n# df_trans = pd.DataFrame(scaler.fit_transform(X))","926e25a7":"# pca","f798e647":"# plt.figure(figsize=(18, 6))\n# sns.swarmplot(x=\"features\", y=\"value\", hue=\"diagnosis\", data=df_melt)\n# plt.show()","0448362b":"# plt.scatter_matrix(df)","8863e1c6":"# features and labels\nX = df.drop(['diagnosis'], axis=1)\ny = df['diagnosis']","c9a7de31":"# train test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)","c71c06d9":"# model initialization\nmodel = KNeighborsClassifier()\n\n# model fitting\nmodel.fit(X_train, y_train)\n\n# predict using the model\npred = model.predict(X_test)\n\n# model validation\nprint(accuracy_score(pred, y_test))\nprint(confusion_matrix(pred, y_test))\nprint(classification_report(pred, y_teset))","75839d3e":"sns.heatmap(confusion_matrix(pred, y_test), annot=True, fmt=\"d\")","9e7bca0f":"# # random forest classifier\n# model = RandomForestClassifier() \n\n# # recursive feature elimination with cross validation\n# rfecv = RFECV(estimator=model, step=1, cv=5, scoring='accuracy')\n# rfecv = rfecv.fit(X_train, y_train)\n\n# # predict using the model\n# pred = model.predict(X_test)\n\n# print(rfecv.n_features_)\n# print(X_train.columns[rfecv.support_])\n\n# plt.figure()\n# plt.xlabel(\"Number of features selected\")\n# plt.ylabel(\"Cross validation score of number of selected features\")\n# plt.plot(range(1, len(rfecv.grid_scores_) + 1), rfecv.grid_scores_)\n# plt.show()\n\n# # model validation\n# print(accuracy_score(pred, y_test))\n# print(confusion_matrix(pred, y_test))\n# sns.heatmap(confusion_matrix(pred, y_test), annot=True, fmt=\"d\")\n\n# # roc-auc\n# probs = model.predict_proba(X_test)\n# preds = probs[:,1]\n# fpr, tpr, threshold = roc_curve(y_test, preds)\n# roc_auc = auc(fpr, tpr)\n\n# # roc-auc plot\n# plt.title('ROC')\n# plt.plot(fpr, tpr, 'b--', label='AUC = %0.2f' % roc_auc)\n# plt.plot([0, 1], [0, 1],'r--')\n# plt.xlim([0, 1])\n# plt.ylim([0, 1])\n# plt.ylabel('True Positive Rate')\n# plt.xlabel('False Positive Rate')\n# plt.legend(loc='lower right')\n# plt.show()","392d6df6":"# Visual Exploration","32fc7541":"# Data","81cd836e":"### Theme","8c2c420f":"### Is the mean radius of malignant and benign cancers the same?","e2e893a3":"* It looks like mean radius of benign is on the smaller than malignant\n* we can see benign is of the range 5-17 and malignant is of the range 10-28\n* mean_radius looks like good feature that can help us to distiguish between benign and malignant cancers","9a33991c":"### Data properties","69c84ebb":"# Exploring the data","fa4ac10b":"# Libraries","43e63e2e":"* There is an inbalance in no. of observations in each class.\n* This will possibley lead to a biased model.\n* Idealy we want to have approximatly equal no. of observation all the classes.\n  \n* In this case we can bring down the no. of observation in the 'B' class to no. of obeservation in the 'M'","1fa201ae":"# Preprocessing","0feddec2":"# ML Model","a18f29a2":"### Pairplot","f16771d6":"### Class distribution","b10315d6":"### Correlation heatmap"}}