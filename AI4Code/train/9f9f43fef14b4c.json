{"cell_type":{"13e893be":"code","2b0da82d":"code","2ea68bcd":"code","3b448b3a":"markdown"},"source":{"13e893be":"!pip install --quiet --no-index --find-links ..\/input\/pip-download-dcmstack\/ --requirement ..\/input\/pip-download-dcmstack\/requirements.txt","2b0da82d":"import os # directory operations\nimport dcmstack # convert .dcm to .nii.gz\nfrom pathlib import Path # directory operations\n\n# Parameters to limit the processing power needed.\ndemo  = False # if True limits to 10 patients\nscan_types    = ['FLAIR','T1w','T1wCE','T2w'] # uses all scan types","2ea68bcd":"# Preprocess data \ndata_dir   = '\/kaggle\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/'\nout_dir    = '\/kaggle\/working\/processed'\n\nfor dataset in ['train','test']:\n    dataset_dir = f'{data_dir}{dataset}'\n    patients = os.listdir(dataset_dir)\n    if demo:\n        patients = patients[:10]\n    \n    # Remove cases the competion host said to exclude \n    # https:\/\/www.kaggle.com\/c\/rsna-miccai-brain-tumor-radiogenomic-classification\/discussion\/262046\n    if '00109' in patients: patients.remove('00109')\n    if '00123' in patients: patients.remove('00123')\n    if '00709' in patients: patients.remove('00709')\n    \n    print(f'Total patients in {dataset} dataset: {len(patients)}')\n\n    count = 0\n    for patient in patients:\n        count = count + 1\n        print(f'{dataset}: {count}\/{len(patients)}')\n\n        for scan_type in scan_types:\n            scan_src  = f'{dataset_dir}\/{patient}\/{scan_type}\/'\n            scan_dest = f'{out_dir}\/{dataset}\/{patient}\/{scan_type}\/'\n            Path(scan_dest).mkdir(parents=True, exist_ok=True)\n            !dcmstack {scan_src} --dest-dir {scan_dest} -o {scan_type}","3b448b3a":"This notebook converts the DICOM images in the [rsna-miccai-brain-tumor-radiogenomic-classification](https:\/\/www.kaggle.com\/c\/rsna-miccai-brain-tumor-radiogenomic-classification) dataset to Nifti images using [dcmstack](https:\/\/dcmstack.readthedocs.io\/en\/v0.6.1\/).\n\nThen see this [example](https:\/\/keras.io\/examples\/vision\/3D_image_classification\/) of how to do 3D image classifcation with Nifti images."}}