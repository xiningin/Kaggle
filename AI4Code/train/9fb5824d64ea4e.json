{"cell_type":{"6903591f":"code","a25753e7":"code","cac673fe":"code","d87945ae":"code","bfd6b0fa":"code","19d72fcf":"code","56ce7d5c":"code","7fe7ec45":"code","98b7303a":"code","639f7bb5":"code","88273e9a":"code","44b8eacd":"code","bf413588":"code","732fbb4b":"code","7f3c142e":"code","0c25091d":"code","5856dbe5":"code","f1a791e5":"code","a27d522e":"code","a6b99659":"code","e08672b7":"code","4df07ea3":"code","660358ae":"code","237e3c25":"code","fc8b22a2":"code","2f376ab9":"code","1e4e2e82":"code","d4aabb05":"code","82efd30f":"code","6c15e5ab":"code","eee2e642":"code","a2e06ca3":"code","b85a203a":"code","690c39a2":"code","607a34a5":"code","f9938ed6":"code","82f9f89a":"code","6fbbcb5c":"code","73e3dbcb":"code","53eb3145":"code","57f8bbfb":"code","96184013":"code","8bfd7fe0":"code","a5c12570":"code","9730ba4f":"code","a3eac729":"code","174a15d2":"code","38b27059":"code","9960f1c4":"markdown","74d90326":"markdown","d6af52d4":"markdown","3650234b":"markdown","1766737c":"markdown","6b2e6006":"markdown","14cf16c1":"markdown","1c532c76":"markdown","e5748d2a":"markdown","0e5d18c3":"markdown","058e1367":"markdown","d02bb4e8":"markdown","94b7688e":"markdown","ba2f4d79":"markdown","2e58be3e":"markdown","9779bcb9":"markdown","c7f0314e":"markdown","c2eadc9f":"markdown","98c3c7af":"markdown","4d4c36fa":"markdown","b8dcb119":"markdown","43023411":"markdown","8b3781fa":"markdown","b18208f9":"markdown","3854955c":"markdown","8de849ce":"markdown","400b3237":"markdown","2e08bce7":"markdown","7a680256":"markdown","5df92362":"markdown","247c2280":"markdown","8a684b77":"markdown","b23de8cb":"markdown","7276edd5":"markdown","a8f238b2":"markdown","5269ac98":"markdown","d119ff72":"markdown","60f143da":"markdown","52d559a5":"markdown","341022ef":"markdown","9a34f6b4":"markdown","63040af3":"markdown","93455351":"markdown","5b07c250":"markdown","b8cb8a62":"markdown","1b73a57a":"markdown","0a47ace5":"markdown","fb9ae8eb":"markdown","d22f9c56":"markdown","eecd533e":"markdown","f2f61d4b":"markdown","47d55739":"markdown","b4f5d04c":"markdown","9c972ecd":"markdown","a8566402":"markdown","63dfeb18":"markdown","2b4cce3e":"markdown","9dfa270c":"markdown","a90c9817":"markdown","cc1d8a4d":"markdown","313b756c":"markdown","e73f19b1":"markdown","3de75efa":"markdown","c33cab3f":"markdown"},"source":{"6903591f":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom matplotlib.gridspec import GridSpec\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a25753e7":"train_df = pd.read_csv('..\/input\/wallmart-sales-forecast-datasets\/train.csv')\ntest_df = pd.read_csv('..\/input\/wallmart-sales-forecast-datasets\/test.csv')\nfeatures_df=pd.read_csv('..\/input\/wallmart-sales-forecast-datasets\/features.csv')\nstores_df = pd.read_csv('..\/input\/wallmart-sales-forecast-datasets\/stores.csv')\n","cac673fe":"train_df.head()","d87945ae":"train_df.info()","bfd6b0fa":"train_df.describe()","19d72fcf":"train_df.isnull().sum()","56ce7d5c":"test_df.head()","7fe7ec45":"test_df.columns","98b7303a":"test_df.describe()","639f7bb5":"test_df.isnull().sum()","88273e9a":"features_df.head()","44b8eacd":"features_df.info()","bf413588":"\nfeatures_df.describe()","732fbb4b":"features_df.isnull().sum()","7f3c142e":"stores_df.head()","0c25091d":"stores_df.describe()","5856dbe5":"stores_df.isnull().sum()","f1a791e5":"dataset_m = features_df.merge(stores_df, how= 'inner', on = 'Store')\ndataset_m.head()","a27d522e":"dataset_m.info()","a6b99659":"from datetime import datetime\n#converting date to date time object\ndataset_m['Date'] = pd.to_datetime(dataset_m['Date'])\ntrain_df['Date'] = pd.to_datetime(train_df['Date'])\ntest_df['Date'] = pd.to_datetime(test_df['Date'])\n#Extract week and year from the date and make them into new columns.\ndataset_m['week'] = dataset_m.Date.dt.isocalendar().week\ndataset_m['year'] = dataset_m.Date.dt.isocalendar().year","e08672b7":"dataset_m.tail()","4df07ea3":"train_df_1 = train_df.merge(dataset_m, how='inner', on=['Store', 'Date', 'IsHoliday']).sort_values(by=['Store','Dept','Date']).reset_index(drop=True)","660358ae":"train_df_1.head()","237e3c25":"def scatter(train_df_1, column):\n    #plot the figure\n    plt.figure()\n    #plot the scatter plot with data from the specified column in x axis and weekly sales in y axis\n    plt.scatter(train_df[column], train_df['Weekly_Sales'])\n    #give y label as weekly_sales\n    plt.ylabel('Weekly_Sales')\n    #Give the xlabel as the column specified as parameter in the function\n    plt.xlabel(column)","fc8b22a2":"#plot a scatter plot using the scatter function a scatter plot of weekly sales with respect to Store\nscatter(train_df_1, 'Store')\n#plot a scatter plot using the scatter function a scatter plot of weekly sales with respect to Department\nscatter(train_df_1, 'Dept')","2f376ab9":"#Filtering out mean weekly sales for the year 2011\nweekly_sales_2011 = train_df_1[train_df_1['year'] ==  2011]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis\nsns.lineplot(weekly_sales_2011.index, weekly_sales_2011.values,color='red')","1e4e2e82":"#Filtering out mean weekly sales for the year 2010\nweekly_sales_2010 = train_df_1[train_df_1['year'] ==  2010]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis\nsns.lineplot(weekly_sales_2010.index, weekly_sales_2010.values)\n","d4aabb05":"#Filtering out mean weekly sales for the year 2012\nweekly_sales_2012 = train_df_1[train_df_1['year'] ==  2012]['Weekly_Sales'].groupby(train_df_1['week']).mean()\n#Plot a line plot with week on x axis and sales for that particular week of the filtered year in y axis\nsns.lineplot(weekly_sales_2012.index, weekly_sales_2012.values,color='green')","82efd30f":"#plotting a figure \nplt.figure(figsize= (20, 10))\n#Plotting three line plots for weekly sales for each year\nsns.lineplot(weekly_sales_2010.index, weekly_sales_2010.values)\nsns.lineplot(weekly_sales_2011.index, weekly_sales_2011.values)\nsns.lineplot(weekly_sales_2012.index, weekly_sales_2012.values)\nplt.grid()\n#plot labels and legends\nplt.xticks(np.arange(1,60, step= 1))\nplt.title('Average Weekly Sales Per Year', fontsize = 20)\nplt.xlabel('Week', fontsize = 16)\nplt.ylabel('Sales', fontsize = 16)\nplt.legend(['2010', '2011','2012'], loc = 'best', fontsize = 16)\nplt.show()","6c15e5ab":"f, ax = plt.subplots(figsize=(8, 6))\n#Creating a distribution for weekly sales in the dataframe train_df\nsns.distplot(train_df['Weekly_Sales'],color='g')","eee2e642":"#Skewness is a measure of symmetry, or more precisely, the lack of symmetry. A distribution, or data set, is symmetric if it looks the same to the left and right of the center point.\nprint(\"Skewness: \", train_df['Weekly_Sales'].skew()) #skewness\n#Kurtosis is a measure of whether the data are heavy-tailed or light-tailed relative to a normal distribution. That is, data sets with high kurtosis tend to have heavy tails, or outliers. Data sets with low kurtosis tend to have light tails, or lack of outliers\nprint(\"Kurtosis: \", train_df['Weekly_Sales'].kurt()) #kurtosis","a2e06ca3":"#concatinating the type and column from store_df together to find the relation between stores falling under each type and size.\ndata = pd.concat([stores_df['Type'], stores_df['Size']], axis=1)\nf, ax = plt.subplots(figsize=(8, 6))\n#Plot a box plot to understand the relation between type and size of stores.\nfig = sns.boxplot(x='Type', y='Size', data=data)","b85a203a":"weekly_sales_store = train_df['Weekly_Sales'].groupby(train_df['Store']).mean()","690c39a2":"weekly_sales_store.head()","607a34a5":"weekly_sales_store_df=pd.DataFrame(weekly_sales_store)","f9938ed6":"weekly_sales_store_df.sort_values(\"Weekly_Sales\",ascending=False).style.bar(align='left',width=98,color='#FFD200')","82f9f89a":"weekly_sales_store_df.sort_values(\"Weekly_Sales\").style.bar(align='left',width=98,color='#ff00bf')","6fbbcb5c":"#Plotting the figure.\nplt.figure(figsize= (25, 12))\n#Creating a barplot with stores in x axis and mean weekly sales for each store as y values.\nsns.barplot(weekly_sales_store.index, weekly_sales_store.values,palette='dark')\n#plot a grid\nplt.grid()\n#Give title,x and y labels for the plot\nplt.title('Average Weekly Sales Per Store', fontsize = 20)\nplt.xlabel('Store Number', fontsize = 16)\nplt.ylabel('Sales Per Store ', fontsize = 16)\nplt.show()","73e3dbcb":"weekly_sales_Dept = train_df['Weekly_Sales'].groupby(train_df['Dept']).mean()","53eb3145":"weekly_sales_Dept_df= pd.DataFrame(weekly_sales_Dept)","57f8bbfb":"weekly_sales_Dept_df","96184013":"weekly_sales_Dept_df.sort_values(\"Weekly_Sales\",ascending=False).style.bar(align='left',width=98,color='#d65f5f')","8bfd7fe0":"weekly_sales_Dept_df.sort_values(\"Weekly_Sales\").style.bar(align='left',width=98,color='#bfff00')","a5c12570":"#Plot a figure\nplt.figure(figsize= (25, 12))\n#Creating a barplot with department in x axis and mean weekly sales for each store as y values.\nsns.barplot(weekly_sales_Dept.index, weekly_sales_Dept.values)\n#plot a grid\nplt.grid()\n#Give title,x and y labels for the plot\nplt.title('Average Weekly Sales Per Department', fontsize = 20)\nplt.xlabel('Department', fontsize = 16)\nplt.ylabel('Sales', fontsize = 16)\nplt.show()","9730ba4f":"#Creating a data frame grouped by grouping the train_df on department and date.\ngrouped=train_df.groupby(['Dept','Date']).mean().reset_index()\n\n#Filtering out Department, Date, Weekly sales from the new data frame grouped.\ndata=grouped[['Dept','Date','Weekly_Sales']]\n\n#Finding out unique values in the department column.\ndept=train_df['Dept'].unique()\n#Sort the unique values in the column\ndept.sort()\n#Divide the departments into 4 batches\ndept_1=dept[0:20]\ndept_2=dept[20:40]\ndept_3=dept[40:60]\ndept_4=dept[60:]\n\n#Create subplots with 2 rows and 2 columns and adjusting the spacing between the subplots.\nfig, ax = plt.subplots(2,2,figsize=(20,10))\nfig.subplots_adjust(wspace=0.5, hspace=0.5)\nfig.subplots_adjust(left=0.1, right=0.9, bottom=0.1, top=0.9)\n\n\n#For each batch containg departments and for each department in each batch plot the weekly sales in accordance with date.\nfor i in dept_1 :\n    data_1=data[data['Dept']==i]\n    ax[0,0].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')\n\nfor i in dept_2 :\n    data_1=data[data['Dept']==i]\n    ax[0,1].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')\n    \nfor i in dept_3 :\n    data_1=data[data['Dept']==i]\n    ax[1,0].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')    \n\nfor i in dept_4 :\n    data_1=data[data['Dept']==i]\n    ax[1,1].plot(data_1['Date'], data_1['Weekly_Sales'],label='Dept_1_mean_sales')        \n    \n    \n#Give each subplot a suitable title    \nax[0,0].set_title('Mean sales record by department (0-19)')\nax[0,1].set_title('Mean sales record by department (20-39)')\nax[1,0].set_title('Mean sales record by department (40-59)')\nax[1,1].set_title('Mean sales record by department (60-)')\n\n#Give each Subplot y and x labels\nax[0,0].set_ylabel('Mean sales With Respect To Specified Departments')\nax[0,0].set_xlabel('Date')\nax[0,1].set_ylabel('Mean sales With Respect To Specified Departments')\nax[0,1].set_xlabel('Date')\nax[1,0].set_ylabel('Mean sales With Respect To Specified Departments')\nax[1,0].set_xlabel('Date')\nax[1,1].set_ylabel('Mean sales With Respect To Specified Departments')\nax[1,1].set_xlabel('Date')\n\n\nplt.show()","a3eac729":"#Data for sales over zero\ntrain_over_zero_sales=train_df[train_df['Weekly_Sales']>0]\n#Data for sales less than zero\ntrain_below_zero_sales=train_df[train_df['Weekly_Sales']<=0]\n#Natural log of data for sales over zero\nsales_over_zero_sales = np.log1p(train_over_zero_sales['Weekly_Sales'])\n#plotting a histogram and normal distribution for data with sales over zero.\nf, ax = plt.subplots(figsize=(8, 6))\nsns.distplot(sales_over_zero_sales)","174a15d2":"print(\"Skewness: \", sales_over_zero_sales.skew()) #skewness\nprint(\"Kurtosis: \", sales_over_zero_sales.kurt()) #kurtosis","38b27059":"sns.set(style = 'white')\n\n\nfig, ax = plt.subplots(figsize= (25, 15))\nsns.heatmap(train_df_1.corr(), cmap = 'icefire', vmax = 0.3, center = 0, square = True, linewidth= 0.5, cbar_kws = {'shrink': 0.5}, annot = True)","9960f1c4":"Line plots between week and weekly sales is a good way to compare sales for each year.","74d90326":"##### Creating a new df by merging (inner) the train_df and the new data frame dataset_m on  store, date and IsHoliday columns and sorting the values by Store, department and date.","d6af52d4":"### 9)Bar graph fpr mean weekly sales for each Department.","3650234b":"### 12) Heatmap","1766737c":"##### Convering date to date time object.","6b2e6006":"### 6) Bar Chart On Data Frame","14cf16c1":"We can see scatter plots of weekly sales with respect to stores and department, we can see that departments between 60 and 80 are performing better.","1c532c76":"#### Defining a function scatter to plot the scatter plot with the data of the column specified as the function parameter in x axis and weekly sales as the y values.","e5748d2a":"##### Finding out about the null values in each column.","0e5d18c3":"### 2) Three line plots for weekly sales for eact year","058e1367":"##### Viewing the stores data frame.","d02bb4e8":"#### Sorting the data frame with respect to weekly sales in Descending order and plotting a var graph on the data frame itself to get a idea about the data.","94b7688e":"This is the line plot for weekly sales in the year 2012","ba2f4d79":"### 5) Box Plot","2e58be3e":"## Plotting a bar graph with store number as x values and mean weekly sales for that store as the y values.","9779bcb9":"###### Describe the data in train_df, that is mean count etc of the numerical columns in the data frame.","c7f0314e":"###### Viewing the test_df","c2eadc9f":"## DATA ANALYSIS AND VIUALIZATION ","98c3c7af":"From the above box plots we can see that Type A plots are the largest, ie has the largest size","4d4c36fa":"#### Grouping the train_df by Department and computing the mean of weekly_sales for each Department.","b8dcb119":"##### Task is to analyze  the sales of  walmart with the data given. (eg: anaglysing weekly sales, which store or department sells most etc.)","43023411":"##### Viewing the features dataframe.","8b3781fa":"### 8) Bar chart on Data Frame.","b18208f9":"#### Converting the data to a pandas dataframe","3854955c":"#### Creating line plots of mean weekly sales for each department in the dataframe.","8de849ce":"We can see that there are various column that have very week correlation and thus its always better to drop these columns before modelling since that columns dosent contribute much to the process.\n\n-------------------------------------------------------------------------------------------------------------------------------\n\nAlso,some columns are strongly correlated . One of them must be dropped else they would carry similar information to the model. ","400b3237":"####  Sorting the data frame with respect to weekly sales in Ascending order and plotting a var graph on the data frame itself to get a idea about the data.","2e08bce7":"### 10) Series of line plots for mean sales with respect to Departments.","7a680256":"#### We can see from the combined line lot that on week 51 of 2010 we have the maximum sale ","5df92362":"### 11) Histogram \/ Normal Distribution","247c2280":"### We can see that Store number 5 has the least weekly sales (5053.415813)","8a684b77":"1)We can see that this plot is a great way to analyse how each store is performing sales wise.\n\n2)From the plot we can see that store number 20 has the highesst mean weekly sales, followed by store 4 and then store 14.\n\n","b23de8cb":"converting it to a pandas dataframe\n","7276edd5":"### We can see that Store number 20 has the highest weekly sales (20508.301592)","a8f238b2":"###### We can see that the dataframe has weekly  sales data in accordance with store department and date.","5269ac98":"The above code is to determine the skew and kurtosis of the normal distribution.","d119ff72":"###### Describing the data in the test dataframe.","60f143da":"##### Gathering info regarding the columns of the new data frame.","52d559a5":"This is the line plot for weekly sales in the year 2011","341022ef":"##### Create a new data frame by merging (inner) features data frame to stores data frame  on Store for analysis purpose.","9a34f6b4":"#### Plotting the weekly sales for years 2010,2011,2012 on a single plot to compare the sales values with respect to week on each of these specified year for comparing the weekly sales in each year.","63040af3":"### 3) Combined line plots for each year (2010,2011,2012)","93455351":"We can see that weekly sales is highest for department 92.","5b07c250":"#### Plotting a bar graph with Department number as x values and mean weekly sales for that store as the y values.","b8cb8a62":"### 7) Bar graph fpr mean weekly sales for each store.","1b73a57a":"##### We can see that department 47 has a cumulative negative value for weekly sales followed by department 43 which has a very low weekly sale of 1.193333","0a47ace5":"### Plotting a heatmap to determine the correlation between columns in the data frame.","fb9ae8eb":"#### Walmart Inc. is an American multinational retail corporation that operates a chain of hypermarkets, discount department stores, and grocery stores from the United States, headquartered in Bentonville, Arkansas.","d22f9c56":"# VISUALIZATIONS ","eecd533e":"#### Sorting the data frame with respect to weekly sales in Descending order and plotting a var graph on the data frame itself to get a idea about the data.","f2f61d4b":" We can see that Department number 92 has the largest weekly sales.","47d55739":"##### Viewing the Info of each column in the features dataframe.","b4f5d04c":"1)The sales level is different by department \n\n\n2)There is some peaked points around January and May, thus indicating high sales during those times.\n\nWe can see that departments and date are good features to predict the sales.\n","9c972ecd":"### Plotting the normal distribution where sales is greator than zero.","a8566402":"### 4) Histogram \/ Normal Distribution ","63dfeb18":"-------------------------------------------------------------------------------------------------------------------------------","2b4cce3e":"This is the line plot for weekly sales in the year 2010","9dfa270c":"#### Grouping the train_df by store and computing the mean of weekly_sales for each store.","a90c9817":"##### Finding the null values in each column.","cc1d8a4d":"###### This shows how many null values each column in the data frame has, we can see that there are no null values in any columns of the data frame.","313b756c":"##### Analysing null values in each column.","e73f19b1":"#### Sorting the data frame with respect to weekly sales in Ascending order and plotting a var graph on the data frame itself to get a idea about the data.","3de75efa":"#### Reading all the csv files as dataframes using pd.read_csv method.","c33cab3f":"### 1) scatter plot"}}