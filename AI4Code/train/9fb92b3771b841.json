{"cell_type":{"37b142ac":"code","de7a0f94":"code","69bea8d7":"code","578910e5":"code","8957197b":"code","7417e43d":"code","b675e193":"code","93d9b93c":"code","d9c70bc3":"code","024bd854":"code","15b3d40f":"code","031572aa":"code","c0099399":"code","9a14c76b":"code","08577c38":"code","1243dbf9":"code","0147de5b":"code","89ce230a":"code","243b7c69":"code","08880c1c":"code","eefd9e1b":"code","fb970401":"code","0bfb438a":"code","7b6d7a3b":"code","d7760130":"code","bb2564fa":"code","bf64a8aa":"code","1fb5c78f":"code","0d23c846":"code","c3998514":"code","24954c81":"code","b24570b4":"code","774feba4":"code","f7f6cc6b":"code","70e48297":"code","e36e77a6":"code","32497927":"code","bc30cb14":"code","5335373a":"code","d2abbb0a":"code","24f50080":"code","df2241b5":"code","7cd7fae3":"code","25a1db51":"code","4bd80f31":"code","465617b1":"code","5087e208":"code","99fc7e47":"code","ac40e81d":"code","108cd6ee":"code","2da43765":"code","246416b8":"code","2fc6039b":"markdown","46288995":"markdown","ad7f39c5":"markdown","1dff801a":"markdown","b40677f7":"markdown","e315e6e8":"markdown"},"source":{"37b142ac":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n","de7a0f94":"df=pd.read_csv(\"..\/input\/av-jobathon-sep2021\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/av-jobathon-sep2021\/test.csv\")","69bea8d7":"df_test.head()","578910e5":"df.head()","8957197b":"print(df.columns)\nprint(len(list(df.columns)))","7417e43d":"df.isnull().sum()","b675e193":"df.info()","93d9b93c":"df.dtypes","d9c70bc3":"df.shape","024bd854":"df.describe()","15b3d40f":"print(\"**** Min and Max date in training dataset ****\")\nprint(df[\"Date\"].min())\nprint(df[\"Date\"].max())","031572aa":"print(\"**** Min and Max date in test dataset ****\")\nprint(df_test[\"Date\"].min())\nprint(df_test[\"Date\"].max())","c0099399":"sns.set_theme(style='darkgrid')\n\nfig,ax=plt.subplots(nrows=1,ncols=2,figsize=(20,8))\n\nplt.figure(figsize=(20,10))\n\nsns.countplot(data=df,x=\"Store_Type\",ax=ax[0])\nsns.stripplot(data=df,x='Store_Type',y=\"Sales\",ax=ax[1])\nplt.show()","9a14c76b":"fig,ax=plt.subplots(nrows=1,ncols=2,figsize=(20,8))\n\nplt.figure(figsize=(20,10))\n\nsns.countplot(data=df,x=\"Location_Type\",ax=ax[0])\nsns.stripplot(data=df,x='Location_Type',y=\"Sales\",ax=ax[1])\nplt.show()","08577c38":"fig,ax=plt.subplots(nrows=1,ncols=2,figsize=(20,8))\n\nplt.figure(figsize=(20,10))\n\nsns.countplot(data=df,x=\"Region_Code\",ax=ax[0])\nsns.stripplot(data=df,x='Region_Code',y=\"Sales\",ax=ax[1])\nplt.show()","1243dbf9":"fig,ax=plt.subplots(nrows=2,ncols=2,figsize=(20,10))\n\nplt.figure(figsize=(20,10))\n\nsns.countplot(data=df,x=\"Discount\",ax=ax[0][0])\nsns.stripplot(data=df,x='Discount',y=\"Sales\",ax=ax[0][1])\n\nsns.countplot(data=df,x=\"Holiday\",ax=ax[1][0])\nsns.stripplot(data=df,x='Holiday',y=\"Sales\",ax=ax[1][1])\n\nplt.show()","0147de5b":"fig,ax=plt.subplots(nrows=1,ncols=2,figsize=(10,5))\n\nsns.histplot(data=df,x=\"Sales\",ax=ax[0],kde=True)\nsns.histplot(data=df,x='#Order',ax=ax[1],kde=True)\n","89ce230a":"df[\"Date\"]=pd.to_datetime(df[\"Date\"],format=\"%Y-%m-%d\")\n\ndf[\"Day\"]=df['Date'].dt.day\ndf[\"Month\"]=df[\"Date\"].dt.month\ndf['Weekday']=df['Date'].dt.weekday","243b7c69":"df1=df.copy()\nfrom sklearn.preprocessing import LabelEncoder , OneHotEncoder","08880c1c":"#LabelEncoding\ncat_feat=['Store_Type','Location_Type','Region_Code',\"Discount\"]\nle=LabelEncoder()\nfor i in cat_feat:\n    df1[i]=le.fit_transform(df1[i])","eefd9e1b":"#cat_feat=['Store_Type','Location_Type','Region_Code',\"Discount\"]\n#df1=pd.get_dummies(df1,columns=cat_feat,drop_first=True)\n\n#df1=pd.get_dummies(df1,columns=[\"Store_Type\",\"Location_Type\",\"Region_Code\",\"Weekday\",\"Discount\"])","fb970401":"df1.head()","0bfb438a":"'''df_zero=df1[df1['Sales']==0]\n\nprint(df_zero.shape)\ndf_zero\n\nmedian_sales=df1['Sales'].median()\nprint(median_sales)\n\ndf1[df1[\"Sales\"]==0]=median_sales\n'''","7b6d7a3b":"cols= ['Store_id','Store_Type','Location_Type','Region_Code','Holiday','Discount',\"Month\",'Weekday',\"Day\"]","d7760130":"for i in cols:\n    print(i)\n    print()\n    print(df1[i].value_counts())\n    print()\n    print(\"------------------\")","bb2564fa":"cols1=cols+[\"Sales\"]","bf64a8aa":"print(cols1)","1fb5c78f":"df2_train=df1.copy()","0d23c846":"df2_train.columns","c3998514":"#df2_train=df2_train.drop(['Weekday'],axis=1)","24954c81":"df2_train.head()\ny=df2_train['Sales']\nx=df2_train.drop([\"Sales\",\"#Order\",\"ID\",\"Date\"],axis=1)","b24570b4":"df2_train.corr()","774feba4":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import Lasso\nfrom sklearn.ensemble import GradientBoostingRegressor\nimport lightgbm\nimport xgboost as xgb\nfrom sklearn.model_selection import train_test_split , cross_val_score","f7f6cc6b":"#ss=StandardScaler()\n\n#x[[\"Store_id\"]]=ss.fit_transform(x[['Store_id']])","70e48297":"x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42)","e36e77a6":"#Random Forest\nmodel=RandomForestRegressor(n_estimators=200)\nmodel.fit(x_train,y_train)\n\n#XG Boost\nmodel_x=xgb.XGBRegressor(n_estimators=200)\nmodel_x.fit(x_train,y_train)\n\n#Linear Regression\nmodel_LR= LinearRegression()\nmodel_LR.fit(x_train,y_train)\n\n#Lasso\nmodel_lasso=Lasso()\nmodel_lasso.fit(x_train,y_train)\n\n#Decision Tree Regressor\nmodel_DT=DecisionTreeRegressor()\nmodel_DT.fit(x_train,y_train)\n\n#Gradient Boosting\nmodel_GB=GradientBoostingRegressor(n_estimators=200)\nmodel_GB.fit(x_train,y_train)\n\n#LIGHT GBM\nmodel_lgb=lightgbm.LGBMRegressor(m_estimators=200)\nmodel_lgb.fit(x_train,y_train)","32497927":"pred=model.predict(x_test)\n\npred_x=model_x.predict(x_test)\npred_LR=model_LR.predict(x_test)\npred_lasso=model_lasso.predict(x_test)\npred_DT=model_DT.predict(x_test)\npred_GB=model_GB.predict(x_test)\npred_lgbm=model_lgb.predict(x_test)\n","bc30cb14":"from sklearn.metrics import mean_squared_log_error\n\nprint(mean_squared_log_error(y_test,pred)*1000)\n#print(mean_squared_log_error(y_test,pred_x))\nprint(mean_squared_log_error(y_test,pred_LR)*1000)\nprint(mean_squared_log_error(y_test,pred_lasso)*1000)\nprint(mean_squared_log_error(y_test,pred_DT)*1000)\nprint(mean_squared_log_error(y_test,pred_GB)*1000)\nprint(mean_squared_log_error(y_test,pred_lgbm)*1000)\n","5335373a":"model=RandomForestRegressor(n_estimators=200)\nmodel.fit(x,y)","d2abbb0a":"#model=RandomForestRegressor(n_estimators=200)\n#model_GB=GradientBoostingRegressor()\n\n#model_GB.fit(x,y)\n\n\n#model_DT=DecisionTreeRegressor()\n\n#model_DT.fit(x,y)\n\n#model_x=xgb.XGBRegressor()\n#model_x.fit(x,y)\n","24f50080":"df_test1=df_test.copy()","df2241b5":"df_test1[\"Date\"]=pd.to_datetime(df_test1[\"Date\"],format=\"%Y-%m-%d\")\n\ndf_test1[\"Day\"]=df_test1['Date'].dt.day\ndf_test1[\"Month\"]=df_test1[\"Date\"].dt.month\ndf_test1['Weekday']=df_test1['Date'].dt.weekday","7cd7fae3":"#df_test1=pd.get_dummies(df_test1,columns=[\"Store_Type\",\"Location_Type\",\"Region_Code\",\"Weekday\",\"Discount\"])","25a1db51":"df_test1.head()","4bd80f31":"cat_feat=['Store_Type','Location_Type','Region_Code',\"Discount\"]\nle=LabelEncoder()\nfor i in cat_feat:\n    df_test1[i]=le.fit_transform(df_test1[i])","465617b1":"df_test1=df_test1.drop([\"ID\",\"Date\"],axis=1)","5087e208":"df_test1.shape","99fc7e47":"pred=model.predict(df_test1)","ac40e81d":"pred","108cd6ee":"dataframe=pd.DataFrame({\"ID\":df_test['ID'], \"Sales\":pred})","2da43765":"dataframe.head()","246416b8":"dataframe.to_csv(\"Output_F.csv\",index=False)","2fc6039b":"**Splitting date in to day(0-30) , month(0-12) , weekday(0-6)**","46288995":"## **Preprocessing**","ad7f39c5":"## **READING TEST AND TRAIN FILES**","1dff801a":"## **Basic Overview**","b40677f7":"**Random Foest can be perform better**","e315e6e8":"## **Modelling**"}}