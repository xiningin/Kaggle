{"cell_type":{"10ba03ee":"code","38b092cd":"code","419319ff":"code","7ea642c0":"code","75b03f2b":"code","aabbc08c":"code","bda24f0e":"code","8b441456":"code","150c527c":"code","6eb0bf0a":"code","96979b58":"code","5cc5e438":"code","5913b419":"code","37019a28":"code","8b8f6ecd":"code","e247f07a":"code","4effb11c":"code","c2c805c1":"code","d57e2a9c":"code","9c14e14d":"code","6b74fe80":"code","66ee0afe":"code","2a258d1d":"code","e1021a48":"code","25adbac6":"code","e5a82e80":"code","0723231e":"code","d6db28e0":"code","1dc3c7ce":"code","a13ae0e2":"code","30d41ba2":"code","8e6c91e0":"code","4bdb97d0":"code","41aa2358":"code","a5ef61e6":"code","95e4ec28":"code","e4bd368b":"code","824d90cc":"code","0233f366":"code","04b4dd93":"code","ca12fb6e":"code","e47a784b":"code","07dd715e":"code","f963c7c4":"code","223ef41a":"code","c63a6554":"code","1e51248a":"code","4a5fa8fc":"code","94824c38":"code","22120f36":"code","edacee62":"code","de74279a":"code","686830fa":"code","cdd88578":"code","ead7914c":"code","d402b592":"code","578cc507":"code","3385e41a":"code","56c99a94":"code","3d0a5a37":"code","bdfce0d4":"code","da56504c":"code","a62705d0":"markdown","f3cbc13b":"markdown","1ac9c117":"markdown","f9fc8025":"markdown","7a6a0d20":"markdown","77a54964":"markdown","3c34bd10":"markdown","f00bacaf":"markdown","a7adeb44":"markdown","65e4b171":"markdown","61813e7e":"markdown","7c11c8a7":"markdown","0cb1d023":"markdown","e8f250cc":"markdown","8c57a292":"markdown","c5ae067b":"markdown","e57cb0f6":"markdown","a71d9017":"markdown","b7cc1643":"markdown","45709375":"markdown","9b8839ad":"markdown","2bfeb474":"markdown","79452bd1":"markdown","d73a69d7":"markdown","2a8a2edf":"markdown","af809f6f":"markdown","df2ff7e8":"markdown","2a68925a":"markdown","53ecb070":"markdown","79fa40e7":"markdown","64b8169b":"markdown","97ed7bf5":"markdown","ce71d889":"markdown","56d67111":"markdown","79024d93":"markdown","2318b785":"markdown","7a586d0f":"markdown","2cc28bf6":"markdown"},"source":{"10ba03ee":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","38b092cd":"import matplotlib.pyplot as plt\nimport warnings\nimport seaborn as sns\nfrom colorama import Fore, Back, Style \nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfrom mlxtend.plotting import plot_confusion_matrix\nfrom plotly.offline import plot, iplot, init_notebook_mode\nimport plotly.graph_objs as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nfrom statsmodels.formula.api import ols\nimport plotly.graph_objs as gobj\n\ninit_notebook_mode(connected=True)\nwarnings.filterwarnings(\"ignore\")\nimport plotly.figure_factory as ff\n\n%matplotlib inline\n\nimport xgboost\nimport lightgbm\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom catboost import CatBoostClassifier","419319ff":"heart_data = pd.read_csv('\/kaggle\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv')\nheart_data.head()","7ea642c0":"# age distribution\n\nhist_data =[heart_data[\"age\"].values]\ngroup_labels = ['age'] \n\nfig = ff.create_distplot(hist_data, group_labels)\nfig.update_layout(title_text='Age Distribution plot')\n\nfig.show()","75b03f2b":"fig = px.box(heart_data, x='sex', y='age', points=\"all\")\nfig.update_layout(\n    title_text=\"Gender wise Age Spread - Male = 1 Female =0\")\nfig.show()","aabbc08c":"male = heart_data[heart_data[\"sex\"]==1]\nfemale = heart_data[heart_data[\"sex\"]==0]\n\nmale_survi = male[heart_data[\"DEATH_EVENT\"]==0]\nmale_not = male[heart_data[\"DEATH_EVENT\"]==1]\nfemale_survi = female[heart_data[\"DEATH_EVENT\"]==0]\nfemale_not = female[heart_data[\"DEATH_EVENT\"]==1]\n\nlabels = ['Male - Survived','Male - Not Survived', \"Female -  Survived\", \"Female - Not Survived\"]\nvalues = [len(male[heart_data[\"DEATH_EVENT\"]==0]),len(male[heart_data[\"DEATH_EVENT\"]==1]),\n         len(female[heart_data[\"DEATH_EVENT\"]==0]),len(female[heart_data[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Survival - Gender\")\nfig.show()","bda24f0e":"surv = heart_data[heart_data[\"DEATH_EVENT\"]==0][\"age\"]\nnot_surv = heart_data[heart_data[\"DEATH_EVENT\"]==1][\"age\"]\nhist_data = [surv,not_surv]\ngroup_labels = ['Survived', 'Not Survived']\nfig = ff.create_distplot(hist_data, group_labels, bin_size=0.5)\nfig.update_layout(\n    title_text=\"Analysis in Age on Survival Status\")\nfig.show()","8b441456":"fig = px.violin(heart_data, y=\"age\", x=\"sex\", color=\"DEATH_EVENT\", box=True, points=\"all\", hover_data=heart_data.columns)\nfig.update_layout(title_text=\"Analysis in Age and Gender on Survival Status\")\nfig.show()","150c527c":"fig = px.violin(heart_data, y=\"age\", x=\"smoking\", color=\"DEATH_EVENT\", box=True, points=\"all\", hover_data=heart_data.columns)\nfig.update_layout(title_text=\"Analysis in Age and Smoking on Survival Status\")\nfig.show()","6eb0bf0a":"fig = px.violin(heart_data, y=\"age\", x=\"diabetes\", color=\"DEATH_EVENT\", box=True, points=\"all\", hover_data=heart_data.columns)\nfig.update_layout(title_text=\"Analysis in Age and Diabetes on Survival Status\")\nfig.show()","96979b58":"fig = px.histogram(heart_data, x=\"creatinine_phosphokinase\", color=\"DEATH_EVENT\", marginal=\"violin\", hover_data=heart_data.columns)\nfig.show()","5cc5e438":"fig = px.histogram(heart_data, x=\"ejection_fraction\", color=\"DEATH_EVENT\", marginal=\"violin\", hover_data=heart_data.columns)\nfig.show()","5913b419":"fig = px.histogram(heart_data, x=\"platelets\", color=\"DEATH_EVENT\", marginal=\"violin\", hover_data=heart_data.columns)\nfig.show()","37019a28":"fig = px.histogram(heart_data, x=\"serum_creatinine\", color=\"DEATH_EVENT\", marginal=\"violin\", hover_data=heart_data.columns)\nfig.show()","8b8f6ecd":"fig = px.histogram(heart_data, x=\"serum_sodium\", color=\"DEATH_EVENT\", marginal=\"violin\",hover_data=heart_data.columns)\nfig.show()","e247f07a":"surv = heart_data[heart_data['DEATH_EVENT']==0]['serum_sodium']\nnot_surv = heart_data[heart_data['DEATH_EVENT']==1]['serum_sodium']\nhist_data = [surv,not_surv]\ngroup_labels = ['Survived', 'Not Survived']\nfig = ff.create_distplot(hist_data, group_labels, bin_size=0.5)\nfig.update_layout(\n    title_text=\"Analysis in Serum Sodium on Survival Status\")\nfig.show()","4effb11c":"surv = heart_data[heart_data['DEATH_EVENT']==0]['serum_creatinine']\nnot_surv = heart_data[heart_data['DEATH_EVENT']==1]['serum_creatinine']\nhist_data = [surv,not_surv]\ngroup_labels = ['Survived', 'Not Survived']\nfig = ff.create_distplot(hist_data, group_labels, bin_size=0.5)\nfig.update_layout(\n    title_text=\"Analysis in Serum Creatinine on Survival Status\")\nfig.show()","c2c805c1":"surv = heart_data[heart_data['DEATH_EVENT']==0]['ejection_fraction']\nnot_surv = heart_data[heart_data['DEATH_EVENT']==1]['ejection_fraction']\nhist_data = [surv,not_surv]\ngroup_labels = ['Survived', 'Not Survived']\nfig = ff.create_distplot(hist_data, group_labels, bin_size=0.5)\nfig.update_layout(\n    title_text=\"Analysis in Ejaction Fraction on Survival Status\")\nfig.show()","d57e2a9c":"labels = ['No Diabetes','Diabetes']\ndiabetes_yes = heart_data[heart_data['diabetes']==1]\ndiabetes_no = heart_data[heart_data['diabetes']==0]\nvalues = [len(diabetes_no), len(diabetes_yes)]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Diabetes\")\nfig.show()","9c14e14d":"fig = px.pie(heart_data, values='diabetes',names='DEATH_EVENT', title='Diabetes Death Event Ratio')\nfig.show()","6b74fe80":"diabetes_yes_survi = diabetes_yes[heart_data[\"DEATH_EVENT\"]==0]\ndiabetes_yes_not_survi = diabetes_yes[heart_data[\"DEATH_EVENT\"]==1]\ndiabetes_no_survi = diabetes_no[heart_data[\"DEATH_EVENT\"]==0]\ndiabetes__no_not_survi = diabetes_no[heart_data[\"DEATH_EVENT\"]==1]\n\nlabels = ['Diabetes Yes - Survived','Diabetes Yes - Not Survived', 'Diabetes NO - Survived', 'Diabetes NO - Not Survived']\nvalues = [len(diabetes_yes[heart_data[\"DEATH_EVENT\"]==0]),len(diabetes_yes[heart_data[\"DEATH_EVENT\"]==1]),\n         len(diabetes_no[heart_data[\"DEATH_EVENT\"]==0]),len(diabetes_no[heart_data[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Survival - Diabetes\")\nfig.show()","66ee0afe":"anaemia_yes = heart_data[heart_data['anaemia']==1]\nanaemia_no = heart_data[heart_data['anaemia']==0]\n\nlabels = ['No Anaemia', 'Anaemia']\nvalues = [len(anaemia_no), len(anaemia_yes)]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on - Anaemia\")\nfig.show()","2a258d1d":"fig = px.pie(heart_data, values='anaemia',names='DEATH_EVENT', title='Anaemia Death Event Ration')\nfig.show()","e1021a48":"anaemia_yes_survi = anaemia_yes[heart_data[\"DEATH_EVENT\"]==0]\nanaemia_yes_not_survi = anaemia_yes[heart_data[\"DEATH_EVENT\"]==1]\nanaemia_no_survi = anaemia_no[heart_data[\"DEATH_EVENT\"]==0]\nanaemia_no_not_survi = anaemia_no[heart_data[\"DEATH_EVENT\"]==1]\n\nlabels = ['Anaemia Yes - Survived','Anaemia Yes - Not Survived', 'Anaemia No - Survived', 'Anaemia NO - Not Survived']\nvalues = [len(anaemia_yes[heart_data[\"DEATH_EVENT\"]==0]),len(anaemia_yes[heart_data[\"DEATH_EVENT\"]==1]),\n         len(anaemia_no[heart_data[\"DEATH_EVENT\"]==0]),len(anaemia_no[heart_data[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Survival - Anaemia\")\nfig.show()","25adbac6":"hbp_yes = heart_data[heart_data['high_blood_pressure']==1]\nhbp_no = heart_data[heart_data['high_blood_pressure']==0]\n\nlabels = [\"No High BP\",\"High BP\"]\nvalues = [len(hbp_no), len(hbp_yes)]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on - High Blood Pressure\")\nfig.show()","e5a82e80":"fig = px.pie(heart_data, values='high_blood_pressure',names='DEATH_EVENT', title='High Blood Pressure Death Event Ratio')\nfig.show()","0723231e":"hbp_yes_survi = hbp_yes[heart_data[\"DEATH_EVENT\"]==0]\nhbp_yes_not_survi = hbp_yes[heart_data[\"DEATH_EVENT\"]==1]\nhbp_no_survi = hbp_no[heart_data[\"DEATH_EVENT\"]==0]\nhbp_no_not_survi = hbp_no[heart_data[\"DEATH_EVENT\"]==1]\n\nlabels = ['HBP Yes - Survived','HBP Yes - Not Survived', 'HBP No - Survived', 'HBP NO - Not Survived']\nvalues = [len(hbp_yes[heart_data[\"DEATH_EVENT\"]==0]),len(hbp_yes[heart_data[\"DEATH_EVENT\"]==1]),\n         len(hbp_no[heart_data[\"DEATH_EVENT\"]==0]),len(hbp_no[heart_data[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Survival - HBP(high blood pressure)\")\nfig.show()","d6db28e0":"smoking_yes = heart_data[heart_data['smoking']==1]\nsmoking_no = heart_data[heart_data['smoking']==0]\n\nlabels = ['No Smoking','Smoking']\nvalues = [len(smoking_no), len(smoking_yes)]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on - Smoking\")\nfig.show()","1dc3c7ce":"fig = px.pie(heart_data, values='smoking',names='DEATH_EVENT', title='Smoking Death Event Ratio')\nfig.show()","a13ae0e2":"smoking_yes_survi = smoking_yes[heart_data[\"DEATH_EVENT\"]==0]\nsmoking_yes_not_survi = smoking_yes[heart_data[\"DEATH_EVENT\"]==1]\nsmoking_no_survi = smoking_no[heart_data[\"DEATH_EVENT\"]==0]\nsmoking_no_not_survi = smoking_no[heart_data[\"DEATH_EVENT\"]==1]\n\nlabels = ['Smoking Yes - Survived','Smoking Yes - Not Survived', 'Smoking No - Survived', 'Smoking NO- Not Survived']\nvalues = [len(smoking_yes[heart_data[\"DEATH_EVENT\"]==0]),len(smoking_yes[heart_data[\"DEATH_EVENT\"]==1]),\n         len(smoking_no[heart_data[\"DEATH_EVENT\"]==0]),len(smoking_no[heart_data[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(\n    title_text=\"Analysis on Survival - Smoking\")\nfig.show()","30d41ba2":"plt.figure(figsize=(10,10))\nsns.heatmap(heart_data.corr(), vmin=-1, cmap='coolwarm', annot=True);","8e6c91e0":"Features = ['time','ejection_fraction','serum_creatinine']\nx = heart_data[Features]\ny = heart_data[\"DEATH_EVENT\"]\nx_train,x_test,y_train,y_test = train_test_split(x,y, test_size=0.2, random_state=2)","4bdb97d0":"accuracy_list = []","41aa2358":"# logistic regression\n\nlog_reg = LogisticRegression()\nlog_reg.fit(x_train, y_train)\nlog_reg_pred = log_reg.predict(x_test)\nlog_reg_acc = accuracy_score(y_test, log_reg_pred)\naccuracy_list.append(100*log_reg_acc)","a5ef61e6":"print(Fore.GREEN + \"Accuracy of Logistic Regression is : \", \"{:.2f}%\".format(100* log_reg_acc))","95e4ec28":"cm = confusion_matrix(y_test, log_reg_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"Logistic Regression Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","e4bd368b":"# svc\n\nsv_clf = SVC()\nsv_clf.fit(x_train, y_train)\nsv_clf_pred = sv_clf.predict(x_test)\nsv_clf_acc = accuracy_score(y_test, sv_clf_pred)\naccuracy_list.append(100* sv_clf_acc)","824d90cc":"print(Fore.GREEN + \"Accuracy of SVC is : \", \"{:.2f}%\".format(100* sv_clf_acc))","0233f366":"cm = confusion_matrix(y_test, sv_clf_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"SVC Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","04b4dd93":"# K Neighbors Classifier\n\nkn_clf = KNeighborsClassifier(n_neighbors=6)\nkn_clf.fit(x_train, y_train)\nkn_pred = kn_clf.predict(x_test)\nkn_acc = accuracy_score(y_test, kn_pred)\naccuracy_list.append(100*kn_acc)","ca12fb6e":"print(Fore.GREEN + \"Accuracy of K Neighbors Classifier is : \", \"{:.2f}%\".format(100* kn_acc))","e47a784b":"cm = confusion_matrix(y_test, kn_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"K Neighbors Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","07dd715e":"# Decision Tree Classifier\n\ndt_clf = DecisionTreeClassifier(max_leaf_nodes=3, random_state=0, criterion='entropy')\ndt_clf.fit(x_train, y_train)\ndt_pred = dt_clf.predict(x_test)\ndt_acc = accuracy_score(y_test, dt_pred)\naccuracy_list.append(100*dt_acc)","f963c7c4":"print(Fore.GREEN + \"Accuracy of Decision Tree Classifier is : \", \"{:.2f}%\".format(100* dt_acc))","223ef41a":"cm = confusion_matrix(y_test, dt_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"Decision Tree Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","c63a6554":"# RandomForestClassifier\n\nr_clf = RandomForestClassifier(max_features=0.5, max_depth=15, random_state=1)\nr_clf.fit(x_train, y_train)\nr_pred = r_clf.predict(x_test)\nr_acc = accuracy_score(y_test, r_pred)\naccuracy_list.append(100*r_acc)","1e51248a":"print(Fore.GREEN + \"Accuracy of Random Forest Classifier is : \", \"{:.2f}%\".format(100* r_acc))","4a5fa8fc":"cm = confusion_matrix(y_test, r_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"Random Forest Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","94824c38":"# GradientBoostingClassifier\n\ngradientboost_clf = GradientBoostingClassifier(max_depth=2, random_state=1)\ngradientboost_clf.fit(x_train,y_train)\ngradientboost_pred = gradientboost_clf.predict(x_test)\ngradientboost_acc = accuracy_score(y_test, gradientboost_pred)\naccuracy_list.append(100*gradientboost_acc)","22120f36":"print(Fore.GREEN + \"Accuracy of Gradient Boosting is : \", \"{:.2f}%\".format(100* gradientboost_acc))","edacee62":"cm = confusion_matrix(y_test, gradientboost_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"Gredient Boosting Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","de74279a":"# xgbrf classifier\n\nxgb_clf = xgboost.XGBRFClassifier(max_depth=3, random_state=1)\nxgb_clf.fit(x_train,y_train)\nxgb_pred = xgb_clf.predict(x_test)\nxgb_acc = accuracy_score(y_test, xgb_pred)\naccuracy_list.append(100*xgb_acc)","686830fa":"print(Fore.GREEN + \"Accuracy of XGBRFClassifier is : \", \"{:.2f}%\".format(100* xgb_acc))","cdd88578":"cm = confusion_matrix(y_test, xgb_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"XGBRFClassifier Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","ead7914c":"#  lightgbm \n\nlgb_clf = lightgbm.LGBMClassifier(max_depth=2, random_state=4)\nlgb_clf.fit(x_train,y_train)\nlgb_pred = lgb_clf.predict(x_test)\nlgb_acc = accuracy_score(y_test, lgb_pred)\naccuracy_list.append(100*lgb_acc)","d402b592":"print(Fore.GREEN + \"Accuracy of LGBMClassifier is : \",\"{:.2f}%\".format(100* lgb_acc))","578cc507":"cm = confusion_matrix(y_test, lgb_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"LGBMClassifier Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","3385e41a":"# CatBoostClassifier\n\ncat_clf = CatBoostClassifier()\ncat_clf.fit(x_train,y_train)\ncat_pred = cat_clf.predict(x_test)\ncat_acc = accuracy_score(y_test, cat_pred)\naccuracy_list.append(100*cat_acc)","56c99a94":"print(Fore.GREEN + \"Accuracy of CatBoostClassifier is : \",\"{:.2f}%\".format(100* cat_acc))","3d0a5a37":"cm = confusion_matrix(y_test, cat_pred)\nplt.figure()\nplot_confusion_matrix(cm, figsize=(12,8), hide_ticks=True, cmap=plt.cm.Blues)\nplt.title(\"Cat Boost Classifier Model - Confusion Matrix\")\nplt.xticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.yticks(range(2), [\"Heart Not Failed\",\"Heart Fail\"], fontsize=16)\nplt.show()","bdfce0d4":"model_list = ['Logistic Regression', 'SVC','KNearestNeighbours', 'DecisionTree', 'RandomForest',\n              'GradientBooster', 'XGBRF','LGBM', 'CatBoostClassifier']","da56504c":"plt.rcParams['figure.figsize']=20,8\nsns.set_style('darkgrid')\nax = sns.barplot(x=model_list, y=accuracy_list, palette = \"husl\", saturation =2.0)\nplt.xlabel('Classifier Models', fontsize = 20 )\nplt.ylabel('% of Accuracy', fontsize = 20)\nplt.title('Accuracy of different Classifier Models', fontsize = 20)\nplt.xticks(fontsize = 12, horizontalalignment = 'center', rotation = 8)\nplt.yticks(fontsize = 12)\nfor i in ax.patches:\n    width, height = i.get_width(), i.get_height()\n    x, y = i.get_xy() \n    ax.annotate(f'{round(height,2)}%', (x + width\/2, y + height*1.02), ha='center', fontsize = 'x-large')\nplt.show()","a62705d0":"**Decision Tree Classifier**","f3cbc13b":"# **Import Libraries**","1ac9c117":"* The Survival is high for not smoking person 55 to 65, while for smoking person it is between 50 to 60\n* Death event for smoking person is high than not smoking person","f9fc8025":"**Logistic Regression**","7a6a0d20":"# If you found this kernel helpful, please upvote it","77a54964":"From the above pie chart we can conclude that in our dataset 58.2% (174) pepole are No Diabetes Person and 41.8% (125) are Diabetes Person.","3c34bd10":"* Age wise 40 to 80 the spread is High\n* less than 40 age and higher than 80 age people are very low","f00bacaf":"# **Other Factors**","a7adeb44":"From the above pie chart we can conclude that in our dataset 64.9%(194) pepoles are Non High BP pepoles, while 35.1%(105) are High BP pepoles.","65e4b171":"***Pie Charts***","61813e7e":"**Gradient Boosting Classifier**","7c11c8a7":"**K Neighbors Classifier**","0cb1d023":"**Train Test Split**","e8f250cc":"# Is Age and Sex an indicator for Death Event?","8c57a292":"* From above pie charts we can conclude that in our dataset diabetes from 170 of Non Anaemic person 120 are survived and 50 are not survived and\n* From 129 Anaemic person 83 are survived, while 46 are not survived.","c5ae067b":"* From above pie charts we can conclude that in our dataset diabetes from 194 of Non High BP person 137 are survived and 57 are not survived and\n* From 105 High BP person 66 are survived, while 39 are not survived.","e57cb0f6":"* From above pie charts we can conclude that in our dataset diabetes from 203 of Non Smoking person 137 are survived and 66 are not survived and\n* From 96 Smoking person 66 are survived, while 30 are not survived.","a71d9017":"# **Lets Explore the data**","b7cc1643":"* From above pie charts we can conclude that in our dataset diabetes from 174 of Non Diabetes person 118 are survived and 56 are not survived and\n* From 125 Diabetes person 85 are survived, while 40 are not survived.","45709375":"* Sex - Gender of patient Male = 1, Female =0\n* Age - Age of patient\n* Diabetes - 0 = No, 1 = Yes\n* Anaemia - 0 = No, 1 = Yes\n* High_blood_pressure - 0 = No, 1 = Yes\n* Smoking - 0 = No, 1 = Yes\n* DEATH_EVENT - 0 = No, 1 = Yes","9b8839ad":"* Survival is high on 40 to 70\n* The spread of Not survival is going through all ages.","2bfeb474":"# **Data Modeling**","79452bd1":"From the above pie chart we can conclude that in our dataset 67.9%(203) pepoles are Non Smoking pepoles, while 32.1%(96) are Smoking pepoles.","d73a69d7":"# Gender factor Analysis","2a8a2edf":"**xgbrf classifier**","af809f6f":"**Heatmap**","df2ff7e8":"![](http:\/\/www.mydr.com.au\/wp-content\/uploads\/2019\/04\/heart_failure_750.jpeg)","2a68925a":"From the above pie chart we can conclude that in our dataset 56.9%(170) pepoles are Non anaemic pepoles, while 43.1%(129) are anaemic pepoles.","53ecb070":"# **ABOUT DATA**","79fa40e7":"**Cat Boost Classifier**","64b8169b":"**Hist Plots**","97ed7bf5":"**Distribution plots Survived and Not-Survived**","ce71d889":"* Gradient Booster Classifier: 93.33%\n* XGBRFClassifier: 93.33%\n* KNeighborsClassifier: 91.67%\n* LGBMClassifier: 91.67%\n* Cat Boost Classifier: 91.67%\n* Random Forest Classifier: 90.00%\n* DecisionTreeClassifier: 90.00%\n* SVC: 90.00%\n* Logistic Regression: 90.00%","56d67111":"**Random Forest Classifier**","79024d93":"There are some factors that affects Death Event. This dataset contains person's information like age ,sex , blood pressure, smoke, diabetes,ejection fraction, creatinine phosphokinase, serum_creatinine,  serum_sodium, time and we have to predict their DEATH EVENT.","2318b785":"**Support Vector**","7a586d0f":"Age Report\n\n* Survival spread is high in age's flow of 40 to 70\n* The Survival is high for both male between 50 to 60 and female's age between 60 to 70 respectively","2cc28bf6":"**LGBMClassifier**"}}