{"cell_type":{"fa6fce66":"code","754a40b9":"code","1318b33f":"code","da87bda8":"code","d1888dea":"code","502b52a0":"code","c8b0ad21":"code","8d9b17f1":"code","a4f93534":"code","f1dcbec7":"code","b4268986":"code","1fd3055c":"code","64c1d222":"code","673961ce":"code","dc1983b8":"code","b498746d":"code","950ce0a0":"code","699a4088":"code","7570fa42":"code","7e81f9b8":"markdown"},"source":{"fa6fce66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","754a40b9":"\nUS_data_nyt = pd.read_csv('\/kaggle\/input\/us-counties-covid-19-dataset\/us-counties.csv')\n\nUS_data_nyt = US_data_nyt.sort_values(by=['state'],ascending=True).reset_index(drop=True)\n\nUS_data_nyt","1318b33f":"US_data_nyt_state = US_data_nyt.groupby(['state','county','date'])['deaths','cases'].apply(lambda x: x.sum())\n\nUS_data_nyt_state = US_data_nyt_state.reset_index()\n\nUS_data_nyt_state = US_data_nyt_state.sort_values(by='date',ascending=False)\n\nUS_data_nyt_state = US_data_nyt_state.reset_index(drop=True)\n\nUS_data_nyt_state","da87bda8":"state_date = US_data_nyt_state.groupby(['state','date'])['deaths','cases'].apply(lambda x: x.sum())\n\nstate_date = state_date.reset_index()\n\nstate_date","d1888dea":"state_total = state_date.groupby('state')['cases'].sum()\n\nstate_total = state_total.reset_index()\n\nstate_total = state_total.sort_values(by=['cases'],ascending=False)\n\nstate_total","502b52a0":"import plotly.express as px\nfig = px.line(state_date,x='date',y='deaths',color='state')\n\nfig.show()","c8b0ad21":"fig = px.line(state_date,x='date',y='cases',color='state')\n\nfig.show()","8d9b17f1":"state_date = state_date.query('state != \"New York\"')\n\nstate_date","a4f93534":"fig = px.line(state_date,x='date',y='deaths',color='state')\n\nfig.show()","f1dcbec7":"#US_data_nyt = US_data_nyt_state.query('state != \"New York\"')\n\nstate_date = state_date.query('deaths >= 20')\n\nfig = px.scatter(state_date,x='date',y='deaths',color='state',size='deaths')\n\nfig.show()","b4268986":"\n\nor_county = US_data_nyt_state.groupby(['state','county'])['deaths'].max()\n\n\n\n\nor_county = or_county.reset_index()\n\nor_county = or_county.sort_values(by='deaths',ascending=False)\n\nor_county = or_county.reset_index(drop=True)\n\n                                  \nor_county","1fd3055c":"or_county = or_county.query('state == \"Oregon\"')\n\nor_county","64c1d222":"import plotly.express as px","673961ce":"fig = px.scatter(or_county,x=or_county['county'],y=or_county['deaths'],size=or_county['deaths'],color=or_county['deaths'])\n\nfig.show()","dc1983b8":"#US_data_high_death = US_data_nyt.query('deaths >= 100')\n\nstate_date = state_date.sort_values(by=['deaths'],ascending=False).reset_index(drop=True)\n\nfig = px.scatter(state_date,x=state_date['state'],y=state_date['deaths'],size=state_date['deaths'],color=state_date['deaths'])\n\nfig.show()","b498746d":"#state_date = state_date.query('cases >= 2000')\n\nstate_date = state_date.sort_values(by=['cases'],ascending=False).reset_index(drop=True)\n\nfig = px.scatter(state_date,x=state_date['state'],y=state_date['cases'],size=state_date['deaths'],color=state_date['cases'])\n\nfig.show()","950ce0a0":"state_date","699a4088":"US_data_nyt_date = US_data_nyt.loc[:,['date','state','deaths']]\n\nUS_data_nyt_date = US_data_nyt_date.sort_values(by='deaths',ascending = False)\n\nUS_data_nyt_date = pd.DataFrame(data=US_data_nyt_date).reset_index(drop=True)\n\n\nUS_data_nyt_date","7570fa42":"fig = px.scatter(state_total,x='state',y='cases',color='state',size='cases')\n\nfig.show()","7e81f9b8":"* I wanted to look at my home state (Oregon)"}}