{"cell_type":{"a2b56e8d":"code","65dde364":"code","42f5c1ba":"code","e85b8fe4":"code","f0ea886a":"code","6d5f00c9":"code","d59986c8":"code","92d19436":"code","ba0b87d5":"code","c56c4858":"code","81108773":"code","75b6e7e4":"code","3428832d":"code","0fc9306e":"code","bfc7aa54":"code","c3e83f14":"code","ced37783":"code","a5a9ab06":"code","ea2ef115":"code","0af2447b":"code","4bd2b1fa":"code","661d65d1":"code","fec6f8fc":"code","b9cbf747":"code","2abc304c":"code","86e71aa6":"code","58d5660b":"code","4e4da084":"code","3021c51a":"code","dc69c138":"code","fc9be2a7":"code","1d6384ea":"code","876800bc":"code","2512705e":"code","7875ecfe":"code","664af6e9":"code","a740da31":"code","c58da7cf":"code","60fd95c3":"code","7d608b1a":"code","b5893c14":"code","0d662d55":"code","e66ae43d":"code","578777a7":"code","0f2fa025":"code","207ea8d0":"code","a4357e8e":"code","d3e233e5":"code","254d6811":"code","d069e478":"code","849ce062":"code","7c8df1d3":"code","8844c4ce":"code","4e98af32":"code","a23fa1c8":"code","82a71389":"code","1d225c61":"code","8f742d69":"code","822760ff":"code","c8726521":"code","3d062ef3":"code","cb0dd5f4":"code","fbd13949":"code","9b99705a":"code","0c789622":"code","3e670a5c":"code","1311d798":"code","6543d11b":"code","77156ad7":"code","df677b7a":"code","1a3afe6f":"code","6e1ddff8":"code","dd3654c6":"code","cfe1e3fb":"code","545114c2":"code","7b1df9b6":"markdown","274681b8":"markdown","585bc283":"markdown","2e091bc8":"markdown","387f31ec":"markdown","99bc0a3e":"markdown","9a840b61":"markdown","0ba3973d":"markdown","32a4d989":"markdown","d4433bf2":"markdown","9904c553":"markdown","107398af":"markdown","3eba3bf6":"markdown","139a1026":"markdown","4e69f698":"markdown","845dabb0":"markdown","c927284c":"markdown","eccce049":"markdown","efe9c0d4":"markdown","49c36a8f":"markdown","c09520f9":"markdown","ad6b7e5a":"markdown","e9976245":"markdown","0ee527be":"markdown","a41ea898":"markdown","a3d6ff88":"markdown","48d62e6a":"markdown","5e8e7f52":"markdown","d585f881":"markdown","0da9f5c9":"markdown","3a922dfd":"markdown","999ea5f1":"markdown","dfb6c29d":"markdown","17155a3e":"markdown","08d1fdc4":"markdown","3ec0d9be":"markdown","f19e6e1b":"markdown","d9d8b733":"markdown","2ccc3cf4":"markdown","73540bef":"markdown","60c9a9db":"markdown","2e4a74b4":"markdown","d7d45f13":"markdown","163be08b":"markdown","dccc661a":"markdown","267d7f9c":"markdown","0a1cbe25":"markdown","7b5ed80d":"markdown","0f7d61bc":"markdown","1c546ec9":"markdown","168ab886":"markdown","103938d7":"markdown","fe32cce9":"markdown","bea159dd":"markdown","cc8021e2":"markdown","8897357b":"markdown","45fdf368":"markdown","34ecc8da":"markdown","0075345b":"markdown","49f5d0a8":"markdown","030d2e2b":"markdown","b603df44":"markdown"},"source":{"a2b56e8d":"from IPython.display import HTML\nHTML('<center><iframe width=\"560\" height=\"315\" src=\"https:\/\/www.youtube.com\/embed\/AfK9LPNj-Zo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe><\/center>')","65dde364":"import os\nfrom os import listdir\nimport pandas as pd\nimport numpy as np\nimport glob\nimport tqdm\nfrom typing import Dict\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# plotly\n!pip install chart_studio\nimport plotly.express as px\nimport chart_studio.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\ncufflinks.set_config_file(world_readable=True, theme='pearl')\n\n# color\nfrom colorama import Fore, Back, Style\n\nimport seaborn as sns\nsns.set(style=\"whitegrid\")\n\n# pydicom\nimport pydicom\n\n# \u8b66\u544a\u306e\u6291\u5236 \nimport warnings\nwarnings.filterwarnings('ignore')\n\n# \u30d7\u30ed\u30c3\u30c8\u306e\u8a2d\u5b9a\nplt.style.use('fivethirtyeight')\nplt.show()","42f5c1ba":"# \u5229\u7528\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\nlist(os.listdir(\"..\/input\/osic-pulmonary-fibrosis-progression\"))","e85b8fe4":"IMAGE_PATH = \"..\/input\/osic-pulmonary-fibrosis-progressiont\/\"\n\ntrain_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntest_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')\n\nprint(Fore.YELLOW + 'Training data shape: ',Style.RESET_ALL,train_df.shape)\ntrain_df.head(5)","f0ea886a":"train_df.groupby(['SmokingStatus']).count()['Sex'].to_frame()","6d5f00c9":"# NULL\u5024\u3068\u30c7\u30fc\u30bf\u578b\nprint(Fore.YELLOW + 'Train Set !!',Style.RESET_ALL)\nprint(train_df.info())\nprint('-------------')\nprint(Fore.BLUE + 'Test Set !!',Style.RESET_ALL)\nprint(test_df.info())","d59986c8":"train_df.isnull().sum()","92d19436":"test_df.isnull().sum()","ba0b87d5":"# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u308b\u60a3\u8005\u306e\u7dcf\u6570(train+test)\n\nprint(Fore.YELLOW +\"Total Patients in Train set: \",Style.RESET_ALL,train_df['Patient'].count())\nprint(Fore.BLUE +\"Total Patients in Test set: \",Style.RESET_ALL,test_df['Patient'].count())","c56c4858":"print(Fore.YELLOW + \"\u60a3\u8005ID\u306e\u7dcf\u6570\u306f\",Style.RESET_ALL,f\"{train_df['Patient'].count()},\", Fore.BLUE + \"\u3053\u308c\u3089\u306e\u4e2d\u304b\u3089\u4e00\u610f\u306e ID \u306f\", Style.RESET_ALL, f\"{train_df['Patient'].value_counts().shape[0]}.\")","81108773":"train_patient_ids = set(train_df['Patient'].unique())\ntest_patient_ids = set(test_df['Patient'].unique())\n\ntrain_patient_ids.intersection(test_patient_ids)","75b6e7e4":"columns = train_df.keys()\ncolumns = list(columns)\nprint(columns)","3428832d":"train_df['Patient'].value_counts().max()","0fc9306e":"test_df['Patient'].value_counts().max()","bfc7aa54":"np.quantile(train_df['Patient'].value_counts(), 0.75) - np.quantile(test_df['Patient'].value_counts(), 0.25)","c3e83f14":"print(np.quantile(train_df['Patient'].value_counts(), 0.95))\nprint(np.quantile(test_df['Patient'].value_counts(), 0.95))","ced37783":"files = folders = 0\n\npath = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\"\n\nfor _, dirnames, filenames in os.walk(path):\n  # ^ \u3053\u308c\u306e\u610f\u5473\u306f \u300c\u3053\u306e\u5024\u306f\u4f7f\u308f\u306a\u3044\u300d\n    files += len(filenames)\n    folders += len(dirnames)\n#print(Fore.YELLOW +\"Total Patients in Train set: \",Style.RESET_ALL,train_df['Patient'].count())\nprint(Fore.YELLOW +f'{files:,}',Style.RESET_ALL,\"files\/images, \" + Fore.BLUE + f'{folders:,}',Style.RESET_ALL ,'folders\/patients')","a5a9ab06":"files = []\nfor _, dirnames, filenames in os.walk(path):\n  # ^ \u3053\u308c\u306e\u610f\u5473\u306f \u300c\u3053\u306e\u5024\u306f\u4f7f\u308f\u306a\u3044\u300d\n    files.append(len(filenames))\n\nprint(Fore.YELLOW +f'{round(np.mean(files)):,}',Style.RESET_ALL,'average files\/images per patient')\nprint(Fore.BLUE +f'{round(np.max(files)):,}',Style.RESET_ALL, 'max files\/images per patient')\nprint(Fore.GREEN +f'{round(np.min(files)):,}',Style.RESET_ALL,'min files\/images per patient')","ea2ef115":"patient_df = train_df[['Patient', 'Age', 'Sex', 'SmokingStatus']].drop_duplicates()\npatient_df.head()","0af2447b":"# \u30e6\u30cb\u30fc\u30af\u306a\u60a3\u8005\u30ea\u30b9\u30c8\u3068\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f5c\u6210\u3059\u308b\ntrain_dir = '..\/input\/osic-pulmonary-fibrosis-progression\/train\/'\ntest_dir = '..\/input\/osic-pulmonary-fibrosis-progression\/test\/'\n\npatient_ids = os.listdir(train_dir)\npatient_ids = sorted(patient_ids)\n\n#\u65b0\u3057\u3044\u884c\u306e\u4f5c\u6210\nno_of_instances = []\nage = []\nsex = []\nsmoking_status = []\n\nfor patient_id in patient_ids:\n    patient_info = train_df[train_df['Patient'] == patient_id].reset_index()\n    no_of_instances.append(len(os.listdir(train_dir + patient_id)))\n    age.append(patient_info['Age'][0])\n    sex.append(patient_info['Sex'][0])\n    smoking_status.append(patient_info['SmokingStatus'][0])\n\n#\u60a3\u8005\u60c5\u5831\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u6210    \npatient_df = pd.DataFrame(list(zip(patient_ids, no_of_instances, age, sex, smoking_status)), \n                                 columns =['Patient', 'no_of_instances', 'Age', 'Sex', 'SmokingStatus'])\nprint(patient_df.info())\npatient_df.head()","4bd2b1fa":"patient_df['SmokingStatus'].value_counts()","661d65d1":"patient_df['SmokingStatus'].value_counts().iplot(kind='bar',\n                                              yTitle='Counts', \n                                              linecolor='black', \n                                              opacity=0.7,\n                                              color='blue',\n                                              theme='pearl',\n                                              bargap=0.5,\n                                              gridcolor='white',\n                                              title='Distribution of the SmokingStatus column in the Unique Patient Set')","fec6f8fc":"train_df['Weeks'].value_counts().head()","b9cbf747":"train_df['Weeks'].value_counts().iplot(kind='barh',\n                                      xTitle='Counts(Weeks)', \n                                      linecolor='black', \n                                      opacity=0.7,\n                                      color='#FB8072',\n                                      theme='pearl',\n                                      bargap=0.2,\n                                      gridcolor='white',\n                                      title='Distribution of the Weeks in the training set')","2abc304c":"train_df['Weeks'].iplot(kind='hist',\n                              xTitle='Weeks', \n                              yTitle='Counts',\n                              linecolor='black', \n                              opacity=0.7,\n                              color='#FB8072',\n                              theme='pearl',\n                              bargap=0.2,\n                              gridcolor='white',\n                              title='Distribution of the Weeks in the training set')","86e71aa6":"fig = px.scatter(train_df, x=\"Weeks\", y=\"Age\", color='Sex')\nfig.show()","58d5660b":"train_df['FVC'].value_counts()","4e4da084":"train_df['FVC'].iplot(kind='hist',\n                      xTitle='Lung Capacity(ml)', \n                      linecolor='black', \n                      opacity=0.8,\n                      color='#FB8072',\n                      bargap=0.5,\n                      gridcolor='white',\n                      title='Distribution of the FVC in the training set')","3021c51a":"fig = px.scatter(train_df, x=\"FVC\", y=\"Percent\", color='Age')\nfig.show()","dc69c138":"fig = px.scatter(train_df, x=\"FVC\", y=\"Age\", color='Sex')\nfig.show()","fc9be2a7":"fig = px.scatter(train_df, x=\"FVC\", y=\"Weeks\", color='SmokingStatus')\nfig.show()","1d6384ea":"patient = train_df[train_df.Patient == 'ID00228637202259965313869']\nfig = px.line(patient, x=\"Weeks\", y=\"FVC\", color='SmokingStatus')\nfig.show()","876800bc":"train_df['Percent'].value_counts()","2512705e":"train_df['Percent'].iplot(kind='hist',bins=30,color='blue',xTitle='Percent distribution',yTitle='Count')","7875ecfe":"df = train_df\nfig = px.violin(df, y='Percent', x='SmokingStatus', box=True, color='Sex', points=\"all\",\n          hover_data=train_df.columns)\nfig.show()","664af6e9":"plt.figure(figsize=(16, 6))\nax = sns.violinplot(x = train_df['SmokingStatus'], y = train_df['Percent'], palette = 'Reds')\nax.set_xlabel(xlabel = 'Smoking Habit', fontsize = 15)\nax.set_ylabel(ylabel = 'Percent', fontsize = 15)\nax.set_title(label = 'Distribution of Smoking Status Over Percentage', fontsize = 20)\nplt.show()","a740da31":"fig = px.scatter(train_df, x=\"Age\", y=\"Percent\", color='SmokingStatus')\nfig.show()","c58da7cf":"patient = train_df[train_df.Patient == 'ID00228637202259965313869']\nfig = px.line(patient, x=\"Weeks\", y=\"Percent\", color='SmokingStatus')\nfig.show()","60fd95c3":"patient_df['Age'].iplot(kind='hist',bins=30,color='red',xTitle='Ages of distribution',yTitle='Count')","7d608b1a":"patient_df['SmokingStatus'].value_counts()","b5893c14":"plt.figure(figsize=(16, 6))\nsns.kdeplot(patient_df.loc[patient_df['SmokingStatus'] == 'Ex-smoker', 'Age'], label = 'Ex-smoker',shade=True)\nsns.kdeplot(patient_df.loc[patient_df['SmokingStatus'] == 'Never smoked', 'Age'], label = 'Never smoked',shade=True)\nsns.kdeplot(patient_df.loc[patient_df['SmokingStatus'] == 'Currently smokes', 'Age'], label = 'Currently smokes', shade=True)\n\n# \u30d7\u30ed\u30c3\u30c8\u306e\u30e9\u30d9\u30eb\u4ed8\u3051\nplt.xlabel('Age (years)'); plt.ylabel('Density'); plt.title('Distribution of Ages');","0d662d55":"plt.figure(figsize=(16, 6))\nax = sns.violinplot(x = patient_df['SmokingStatus'], y = patient_df['Age'], palette = 'Reds')\nax.set_xlabel(xlabel = 'Smoking habit', fontsize = 15)\nax.set_ylabel(ylabel = 'Age', fontsize = 15)\nax.set_title(label = 'Distribution of Smokers over Age', fontsize = 20)\nplt.show()","e66ae43d":"plt.figure(figsize=(16, 6))\nsns.kdeplot(patient_df.loc[patient_df['Sex'] == 'Male', 'Age'], label = 'Male',shade=True)\nsns.kdeplot(patient_df.loc[patient_df['Sex'] == 'Female', 'Age'], label = 'Female',shade=True)\nplt.xlabel('Age (years)'); plt.ylabel('Density'); plt.title('Distribution of Ages');","578777a7":"patient_df['Sex'].value_counts()","0f2fa025":"patient_df['Sex'].value_counts().iplot(kind='bar',\n                                          yTitle='Count', \n                                          linecolor='black', \n                                          opacity=0.7,\n                                          color='blue',\n                                          theme='pearl',\n                                          bargap=0.8,\n                                          gridcolor='white',\n                                          title='Distribution of the Sex column in Patient Dataframe')","207ea8d0":"plt.figure(figsize=(16, 6))\na = sns.countplot(data=patient_df, x='SmokingStatus', hue='Sex')\n\nfor p in a.patches:\n    a.annotate(format(p.get_height(), ','), \n           (p.get_x() + p.get_width() \/ 2., \n            p.get_height()), ha = 'center', va = 'center', \n           xytext = (0, 4), textcoords = 'offset points')\n\nplt.title('Gender split by SmokingStatus', fontsize=16)\nsns.despine(left=True, bottom=True);","a4357e8e":"fig = px.box(patient_df, x=\"Sex\", y=\"Age\", points=\"all\")\nfig.show()","d3e233e5":"# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u306e\u60a3\u8005ID\u3092\u62bd\u51fa\nids_train = train_df.Patient.values\n# \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30bb\u30c3\u30c8\u306e\u60a3\u8005ID\u3092\u62bd\u51fa\nids_test = test_df.Patient.values\n#print(Fore.YELLOW +\"Total Patients in Train set: \",Style.RESET_ALL,train_df['Patient'].count())\n# \u30e6\u30cb\u30fc\u30af\u306aID\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u3001\u5b66\u7fd2\u30bb\u30c3\u30c8ID\u306e\u300c\u30bb\u30c3\u30c8\u300d\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u6210\nids_train_set = set(ids_train)\nprint(Fore.YELLOW + \"There are\",Style.RESET_ALL,f'{len(ids_train_set)}', Fore.BLUE + 'unique Patient IDs',Style.RESET_ALL,'in the training set')\n# \u30e6\u30cb\u30fc\u30af\u306aID\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u3001\u691c\u8a3c\u30bb\u30c3\u30c8ID\u306e\u300c\u30bb\u30c3\u30c8\u300d\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u6210\nids_test_set = set(ids_test)\nprint(Fore.YELLOW + \"There are\", Style.RESET_ALL, f'{len(ids_test_set)}', Fore.BLUE + 'unique Patient IDs',Style.RESET_ALL,'in the test set')\n\n# \u30bb\u30c3\u30c8\u9593\u306e\u4ea4\u70b9\u3092\u898b\u3066\u3001\u60a3\u8005\u306e\u91cd\u8907\u3092\u8b58\u5225\npatient_overlap = list(ids_train_set.intersection(ids_test_set))\nn_overlap = len(patient_overlap)\nprint(Fore.YELLOW + \"There are\", Style.RESET_ALL, f'{n_overlap}', Fore.BLUE + 'Patient IDs',Style.RESET_ALL, 'in both the training and test sets')\nprint('')\nprint(Fore.CYAN + 'These patients are in both the training and test datasets:', Style.RESET_ALL)\nprint(f'{patient_overlap}')","254d6811":"corrmat = train_df.corr() \nf, ax = plt.subplots(figsize =(9, 8)) \nsns.heatmap(corrmat, ax = ax, cmap = 'RdYlBu_r', linewidths = 0.5) ","d069e478":"print(Fore.YELLOW + 'Train .dcm number of images:',Style.RESET_ALL, len(list(os.listdir('..\/input\/osic-pulmonary-fibrosis-progression\/train'))), '\\n' +\n      Fore.BLUE + 'Test .dcm number of images:',Style.RESET_ALL, len(list(os.listdir('..\/input\/osic-pulmonary-fibrosis-progression\/test'))), '\\n' +\n      '--------------------------------', '\\n' +\n      'There is the same number of images as in train\/ test .csv datasets')","849ce062":"def plot_pixel_array(dataset, figsize=(5,5)):\n    plt.figure(figsize=figsize)\n    plt.grid(False)\n    plt.imshow(dataset.pixel_array, cmap='gray') # cmap=plt.cm.bone)\n    plt.show()","7c8df1d3":"# https:\/\/www.kaggle.com\/schlerp\/getting-to-know-dicom-and-the-data\ndef show_dcm_info(dataset):\n    print(Fore.YELLOW + \"Filename.........:\",Style.RESET_ALL,file_path)\n    print()\n\n    pat_name = dataset.PatientName\n    display_name = pat_name.family_name + \", \" + pat_name.given_name\n    print(Fore.BLUE + \"Patient's name......:\",Style.RESET_ALL, display_name)\n    print(Fore.BLUE + \"Patient id..........:\",Style.RESET_ALL, dataset.PatientID)\n    print(Fore.BLUE + \"Patient's Sex.......:\",Style.RESET_ALL, dataset.PatientSex)\n    print(Fore.YELLOW + \"Modality............:\",Style.RESET_ALL, dataset.Modality)\n    print(Fore.GREEN + \"Body Part Examined..:\",Style.RESET_ALL, dataset.BodyPartExamined)\n    \n    if 'PixelData' in dataset:\n        rows = int(dataset.Rows)\n        cols = int(dataset.Columns)\n        print(Fore.BLUE + \"Image size.......:\",Style.RESET_ALL,\" {rows:d} x {cols:d}, {size:d} bytes\".format(\n            rows=rows, cols=cols, size=len(dataset.PixelData)))\n        if 'PixelSpacing' in dataset:\n            print(Fore.YELLOW + \"Pixel spacing....:\",Style.RESET_ALL,dataset.PixelSpacing)\n            dataset.PixelSpacing = [1, 1]\n        plt.figure(figsize=(10, 10))\n        plt.imshow(dataset.pixel_array, cmap='gray')\n        plt.show()\nfor file_path in glob.glob('..\/input\/osic-pulmonary-fibrosis-progression\/train\/*\/*.dcm'):\n    dataset = pydicom.dcmread(file_path)\n    show_dcm_info(dataset)\n    break # \u3059\u3079\u3066\u3092\u898b\u308b\u306b\u306f\u3001\u3053\u308c\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002","8844c4ce":"# https:\/\/www.kaggle.com\/yeayates21\/osic-simple-image-eda\n\nimdir = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00123637202217151272140\"\nprint(\"total images for patient ID00123637202217151272140: \", len(os.listdir(imdir)))\n\n# \u6700\u521d\u306e\u753b\u50cf\u3092\u9806\u306b\u8868\u793a\nfig=plt.figure(figsize=(12, 12))\ncolumns = 4\nrows = 5\nimglist = os.listdir(imdir)\nfor i in range(1, columns*rows +1):\n    filename = imdir + \"\/\" + str(i) + \".dcm\"\n    ds = pydicom.dcmread(filename)\n    fig.add_subplot(rows, columns, i)\n    plt.imshow(ds.pixel_array, cmap='gray')\nplt.show()","4e98af32":"# https:\/\/www.kaggle.com\/yeayates21\/osic-simple-image-eda\n\nimdir = \"\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00123637202217151272140\"\nprint(\"total images for patient ID00123637202217151272140: \", len(os.listdir(imdir)))\n\n# \u6700\u521d\u306e\u753b\u50cf\u3092\u9806\u306b\u8868\u793a\nfig=plt.figure(figsize=(12, 12))\ncolumns = 4\nrows = 5\nimglist = os.listdir(imdir)\nfor i in range(1, columns*rows +1):\n    filename = imdir + \"\/\" + str(i) + \".dcm\"\n    ds = pydicom.dcmread(filename)\n    fig.add_subplot(rows, columns, i)\n    plt.imshow(ds.pixel_array, cmap='jet')\nplt.show()","a23fa1c8":"apply_resample = False\n\ndef load_scan(path):\n    slices = [pydicom.read_file(path + '\/' + s) for s in os.listdir(path)]\n    slices.sort(key = lambda x: float(x.ImagePositionPatient[2]))\n    try:\n        slice_thickness = np.abs(slices[0].ImagePositionPatient[2] - slices[1].ImagePositionPatient[2])\n    except:\n        slice_thickness = np.abs(slices[0].SliceLocation - slices[1].SliceLocation)\n        \n    for s in slices:\n        s.SliceThickness = slice_thickness\n        \n    return slices","82a71389":"def load_scan(path):\n    slices = [pydicom.read_file(path + '\/' + s) for s in os.listdir(path)]\n    slices.sort(key = lambda x: float(x.ImagePositionPatient[2]))\n    try:\n        slice_thickness = np.abs(slices[0].ImagePositionPatient[2] - slices[1].ImagePositionPatient[2])\n    except:\n        slice_thickness = np.abs(slices[0].SliceLocation - slices[1].SliceLocation)\n        \n    for s in slices:\n        s.SliceThickness = slice_thickness\n        \n    return slices","1d225c61":"def get_pixels_hu(slices):\n    image = np.stack([s.pixel_array for s in slices])\n    # int16\u306b\u5909\u63db \n    # \u5e38\u306b\u4f4e\u3044\u5024\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 (<32k)\n    image = image.astype(np.int16)\n\n    # \u30b9\u30ad\u30e3\u30f3\u5916\u30d4\u30af\u30bb\u30eb\u3092 0 \u306b\u8a2d\u5b9a\n    # \u5207\u7247\u306f\u901a\u5e38-1024\n    image[image == -2000] = 0\n    \n    # \u30cf\u30a6\u30f3\u30ba\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30e6\u30cb\u30c3\u30c8\uff08HU\uff09\u306b\u5909\u63db\n    for slice_number in range(len(slices)):\n        \n        intercept = slices[slice_number].RescaleIntercept\n        slope = slices[slice_number].RescaleSlope\n        \n        if slope != 1:\n            image[slice_number] = slope * image[slice_number].astype(np.float64)\n            image[slice_number] = image[slice_number].astype(np.int16)\n            \n        image[slice_number] += np.int16(intercept)\n    \n    return np.array(image, dtype=np.int16)","8f742d69":"def set_lungwin(img, hu=[-1200., 600.]):\n    lungwin = np.array(hu)\n    newimg = (img-lungwin[0]) \/ (lungwin[1]-lungwin[0])\n    newimg[newimg < 0] = 0\n    newimg[newimg > 1] = 1\n    newimg = (newimg * 255).astype('uint8')\n    return newimg","822760ff":"scans = load_scan('..\/input\/osic-pulmonary-fibrosis-progression\/train\/ID00007637202177411956430\/')\nscan_array = set_lungwin(get_pixels_hu(scans))","c8726521":"# 1mm\u3078\u306e\u518d\u30b5\u30f3\u30d7\u30eb\uff08\u4efb\u610f\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3001z\u8ef8\u306e\u30b9\u30e9\u30a4\u30b9\u539a\u304c\u5927\u304d\u3044\u305f\u3081\u3001\u672c\u5927\u4f1a\u306b\u306f\u95a2\u4fc2\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09\n\nfrom scipy.ndimage.interpolation import zoom\n\ndef resample(imgs, spacing, new_spacing):\n    new_shape = np.round(imgs.shape * spacing \/ new_spacing)\n    true_spacing = spacing * imgs.shape \/ new_shape\n    resize_factor = new_shape \/ imgs.shape\n    imgs = zoom(imgs, resize_factor, mode='nearest')\n    return imgs, true_spacing, new_shape\n\nspacing_z = (scans[-1].ImagePositionPatient[2] - scans[0].ImagePositionPatient[2]) \/ len(scans)\n\nif apply_resample:\n    scan_array_resample = resample(scan_array, np.array(np.array([spacing_z, *scans[0].PixelSpacing])), np.array([1.,1.,1.]))[0]","3d062ef3":"import imageio\nfrom IPython.display import Image\n\nimageio.mimsave(\"\/tmp\/gif.gif\", scan_array, duration=0.0001)\nImage(filename=\"\/tmp\/gif.gif\", format='png')","cb0dd5f4":"import matplotlib.animation as animation\n\nfig = plt.figure()\n\nims = []\nfor image in scan_array:\n    im = plt.imshow(image, animated=True, cmap=\"Greys\")\n    plt.axis(\"off\")\n    ims.append([im])\n\nani = animation.ArtistAnimation(fig, ims, interval=100, blit=False,\n                                repeat_delay=1000)\n","fbd13949":"HTML(ani.to_jshtml())","9b99705a":"HTML(ani.to_html5_video())","0c789622":"def extract_dicom_meta_data(filename: str) -> Dict:\n    # \u30a4\u30e1\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\n    \n    image_data = pydicom.read_file(filename)\n    img=np.array(image_data.pixel_array).flatten()\n    row = {\n        'Patient': image_data.PatientID,\n        'body_part_examined': image_data.BodyPartExamined,\n        'image_position_patient': image_data.ImagePositionPatient,\n        'image_orientation_patient': image_data.ImageOrientationPatient,\n        'photometric_interpretation': image_data.PhotometricInterpretation,\n        'rows': image_data.Rows,\n        'columns': image_data.Columns,\n        'pixel_spacing': image_data.PixelSpacing,\n        'window_center': image_data.WindowCenter,\n        'window_width': image_data.WindowWidth,\n        'modality': image_data.Modality,\n        'StudyInstanceUID': image_data.StudyInstanceUID,\n        'SeriesInstanceUID': image_data.StudyInstanceUID,\n        'StudyID': image_data.StudyInstanceUID, \n        'SamplesPerPixel': image_data.SamplesPerPixel,\n        'BitsAllocated': image_data.BitsAllocated,\n        'BitsStored': image_data.BitsStored,\n        'HighBit': image_data.HighBit,\n        'PixelRepresentation': image_data.PixelRepresentation,\n        'RescaleIntercept': image_data.RescaleIntercept,\n        'RescaleSlope': image_data.RescaleSlope,\n        'img_min': np.min(img),\n        'img_max': np.max(img),\n        'img_mean': np.mean(img),\n        'img_std': np.std(img)}\n\n    return row","3e670a5c":"train_image_path = '\/kaggle\/input\/osic-pulmonary-fibrosis-progression\/train'\ntrain_image_files = glob.glob(os.path.join(train_image_path, '*', '*.dcm'))\n\nmeta_data_df = []\nfor filename in tqdm.tqdm(train_image_files):\n    try:\n        meta_data_df.append(extract_dicom_meta_data(filename))\n    except Exception as e:\n        continue","1311d798":"# dict \u304b\u3089 pd.DataFrame \u3078\u306e\u5909\u63db\nmeta_data_df = pd.DataFrame.from_dict(meta_data_df)\nmeta_data_df.head()","6543d11b":"# \u30bd\u30fc\u30b9: https:\/\/www.kaggle.com\/c\/siim-isic-melanoma-classification\/discussion\/154658\nfolder='train'\nPATH='..\/input\/osic-pulmonary-fibrosis-progression\/'\n\nlast_index = 2\n\ncolumn_names = ['image_name', 'dcm_ImageOrientationPatient', \n                'dcm_ImagePositionPatient', 'dcm_PatientID',\n                'dcm_PatientName', 'dcm_PatientSex'\n                'dcm_rows', 'dcm_columns']\n\ndef extract_DICOM_attributes(folder):\n    patients_folder = list(os.listdir(os.path.join(PATH, folder)))\n    df = pd.DataFrame()\n    \n    i = 0\n    \n    for patient_id in patients_folder:\n   \n        img_path = os.path.join(PATH, folder, patient_id)\n        \n        print(img_path)\n        \n        images = list(os.listdir(img_path))\n        \n        #df = pd.DataFrame()\n\n        for image in images:\n            image_name = image.split(\".\")[0]\n\n            dicom_file_path = os.path.join(img_path,image)\n            dicom_file_dataset = pydicom.read_file(dicom_file_path)\n                \n            '''\n            print(dicom_file_dataset.dir(\"pat\"))\n            print(dicom_file_dataset.data_element(\"ImageOrientationPatient\"))\n            print(dicom_file_dataset.data_element(\"ImagePositionPatient\"))\n            print(dicom_file_dataset.data_element(\"PatientID\"))\n            print(dicom_file_dataset.data_element(\"PatientName\"))\n            print(dicom_file_dataset.data_element(\"PatientSex\"))\n            '''\n            \n            imageOrientationPatient = dicom_file_dataset.ImageOrientationPatient\n            #imagePositionPatient = dicom_file_dataset.ImagePositionPatient\n            patientID = dicom_file_dataset.PatientID\n            patientName = dicom_file_dataset.PatientName\n            patientSex = dicom_file_dataset.PatientSex\n        \n            rows = dicom_file_dataset.Rows\n            cols = dicom_file_dataset.Columns\n            \n            #print(rows)\n            #print(columns)\n            \n            temp_dict = {'image_name': image_name, \n                                    'dcm_ImageOrientationPatient': imageOrientationPatient,\n                                    #'dcm_ImagePositionPatient':imagePositionPatient,\n                                    'dcm_PatientID': patientID, \n                                    'dcm_PatientName': patientName,\n                                    'dcm_PatientSex': patientSex,\n                                    'dcm_rows': rows,\n                                    'dcm_columns': cols}\n\n\n            df = df.append([temp_dict])\n            \n        i += 1\n        \n        if i == last_index:\n            break\n            \n    return df\n","77156ad7":"extract_DICOM_attributes('train')","df677b7a":"import pandas_profiling as pdp","1a3afe6f":"train_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/train.csv')\ntest_df = pd.read_csv('..\/input\/osic-pulmonary-fibrosis-progression\/test.csv')","6e1ddff8":"profile_train_df = pdp.ProfileReport(train_df)","dd3654c6":"profile_train_df","cfe1e3fb":"profile_test_df = pdp.ProfileReport(test_df)","545114c2":"profile_test_df","7b1df9b6":"# 4. <a id='basic'>\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u306e\u63a2\u7d22 \ud83c\udfd5\ufe0f<\/a> ","274681b8":"### \u3042\u308b\u60a3\u8005\u306b\u304a\u3051\u308bFVC\u3068\u9031\u306e\u6bd4\u8f03","585bc283":"## **\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u753b\u50cf\u30d5\u30a9\u30eb\u30c0\u306e\u60a3\u8005\u6570\u3068\u753b\u50cf\u6570**\n* https:\/\/www.kaggle.com\/yeayates21\/osic-simple-image-eda","2e091bc8":"## \u9031\u306e\u5e74\u9f62\u5206\u5e03","387f31ec":"# 2. <a id='importing'>\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\ud83d\udcd7<\/a> ","99bc0a3e":"dcom\u30d5\u30a1\u30a4\u30eb\u306emeta\u8981\u7d20\u306f\u30d5\u30a1\u30a4\u30eb\u3054\u3068\u306b\u5fae\u5999\u306b\u9055\u3046\u3088\u3046\u3067\u3059\u3002\u305d\u306e\u305f\u3081Exception\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n- \u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\uff01","9a840b61":"\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u3001\u300cgif\u3092\u4f7f\u3063\u305f\u53ef\u8996\u5316\u300d\u3067\u7528\u3044\u305fscan_array\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002","0ba3973d":"\u30bf\u30d0\u30b3\u3092\u5438\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u4eba\u306f\u3001\u55ab\u7159\u8005\u3088\u308a\u3082FVC\u304c\u4f4e\u3044\u3002\u5143\u55ab\u7159\u8005\u306e\u4e2d\u306b\u306f\u975e\u5e38\u306b\u9ad8\u3044FVC\u3092\u6301\u3064\u4eba\u3082\u3044\u307e\u3059\u3002","32a4d989":"### \u60a3\u8005\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u304a\u3051\u308b\u5e74\u9f62\u3068\u55ab\u7159\u72b6\u614b\u306e\u6bd4\u8f03","d4433bf2":"`118` : \u5143\u55ab\u7159\u8005\n\n`49` : \u4e00\u5ea6\u3082\u5438\u3063\u305f\u3053\u3068\u304c\u306a\u3044\n\n`9` : \u55ab\u7159\u8005","9904c553":"## FVC - \u5f37\u5236\u7684\u306a\u751f\u547d\u7dad\u6301\u80fd\u529b","107398af":"### FVC\u3068\u30d1\u30fc\u30bb\u30f3\u30c8\u306e\u6bd4\u8f03","3eba3bf6":" \u5f37\u5236\u30d0\u30a4\u30bf\u30eb\u5bb9\u91cf\uff08FVC\uff09\u3001\u3059\u306a\u308f\u3061\u5410\u304f\u7a7a\u6c17\u306e\u91cf\u3002\n - \u8a18\u9332\u3055\u308c\u305f\u80ba\u6d3b\u91cf\uff08ml)","139a1026":"\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u307e\u3060\u610f\u5473\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002","4e69f698":"## \u60a3\u8005\u306e\u91cd\u306a\u308a","845dabb0":"\u3053\u3061\u3089\u3092\u5229\u7528\u3067\u304d\u307e\u3059:\n- https:\/\/www.kaggle.com\/redwankarimsony\/pulmonary-fibrosis-progression-interactive-eda","c927284c":"# \u53c2\u8003\n- https:\/\/www.kaggle.com\/tarunpaparaju\/siim-isic-melanoma-eda-pytorch-baseline\n- https:\/\/www.kaggle.com\/andradaolteanu\/siim-melanoma-competition-eda-augmentations\n- https:\/\/www.kaggle.com\/parulpandey\/melanoma-classification-eda-starter\n- https:\/\/www.kaggle.com\/yeayates21\/osic-simple-image-eda\n- https:\/\/www.kaggle.com\/aviralpamecha\/osic-in-depth-and-advanced-analysis\n- https:\/\/www.kaggle.com\/danpresil1\/dicom-basic-preprocessing-and-visualization","eccce049":"### FVC\u3068\u5e74\u9f62\u306e\u6bd4\u8f03","efe9c0d4":"### \u60a3\u8005\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u304a\u3051\u308b\u5e74\u9f62\u3068\u6027\u5225\u306e\u6bd4\u8f03","49c36a8f":"## 'SmokingStatus' \u30ab\u30e9\u30e0\u306e\u63a2\u7d22","c09520f9":"FVC \u306f Percent \u3068\u76f4\u7dda\u7684\u306a\u95a2\u4fc2\u304c\u3042\u308b\u3088\u3046\u3067\u3001\u7406\u306b\u304b\u306a\u3063\u3066\u3044\u307e\u3059\u3002","ad6b7e5a":"`5`\u306e\u60a3\u8005\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4e21\u65b9\u306b\u5b58\u5728\u3059\u308b\u3002","e9976245":"\u7537\u6027\u306f\u5e74\u9f62\u306b\u95a2\u4fc2\u306a\u304f\u5973\u6027\u3088\u308a\u3082FVC\u304c\u9ad8\u3044\u3067\u3059\u3002","0ee527be":"### **\u60a3\u8005\u6570**","a41ea898":"\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u306f\u30011\u3064\u306ePatient\u304c\u8868\u793a\u3055\u308c\u3001Patient id\u304c\u4e00\u610f\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\u3002","a3d6ff88":"## \u9031\u306e\u5206\u5e03","48d62e6a":"## <font size='5' color='blue'>\u76ee\u6b21<\/font> \n\n\n\n* [\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790\u306e\u57fa\u790e](#1)  \n    * [\u306f\u3058\u3081\u306b - \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8]()\n    * [train.csv\u306e\u8aad\u307f\u8fbc\u307f]()\n    \n \n* [\u30c7\u30fc\u30bf\u306e\u63a2\u7d22](#2)   \n     * [\u8a13\u7df4\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30c1\u30a7\u30c3\u30af]()\n     * [\u30e6\u30cb\u30fc\u30af\u306a\u60a3\u8005(ID)]()\n     * ['SmokingStatus' \u30ab\u30e9\u30e0\u306e\u8aac\u660e]()\n     * [\u9031\u306e\u5206\u5e03]()\n     * [FVC - \u5f37\u5236\u7684\u306a\u751f\u547d\u7dad\u6301\u80fd\u529b]()\n     * [\u30d1\u30fc\u30bb\u30f3\u30c8\u5217\u306e\u63a2\u7d22]()\n     * [\u6027\u5225\u306e\u5206\u5e03]()\n     * [\u60a3\u8005\u306e\u91cd\u306a\u308a]()\n     \n \n* [\u753b\u50cf\u306e\u53ef\u8996\u5316 : DECOM](#3)    \n     * [\u4e00\u3064\u306eDECOM\u753b\u50cf\u3068\u60c5\u5831\u3092\u53ef\u8996\u5316]()\n     * [\u8907\u6570\u306eDECOM\u753b\u50cf\u3068\u60c5\u5831\u3092\u53ef\u8996\u5316]()\n     * [gif\u3092\u7528\u3044\u3066\u53ef\u8996\u5316]()\n     \n     \n* [DIOCOM\u30d5\u30a1\u30a4\u30eb\u306e\u62bd\u51fa Info.](#4)\n\n\n* [Pandas \u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0](#5)\n     * [Train.csv\u306b\u5bfe\u3059\u308bPandas\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u30ec\u30dd\u30fc\u30c8]()\n     * [Test.csv\u306b\u5bfe\u3059\u308bPandas\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u30ec\u30dd\u30fc\u30c8]()\n","5e8e7f52":"DICOM\u306e\u753b\u50cf\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002","d585f881":"# gif\u3092\u4f7f\u3063\u305f\u53ef\u8996\u5316\n* https:\/\/www.kaggle.com\/danpresil1\/dicom-basic-preprocessing-and-visualization","0da9f5c9":"## \u30e6\u30cb\u30fc\u30af\u306a\u60a3\u8005(ID)","3a922dfd":"`1` \u306e\u60c5\u5831\u3092\u542b\u3080\u753b\u50cf\u306e\u7a2e\u985e:\n\n- `.dcm` \u30d5\u30a1\u30a4\u30eb: [DICOM files](https:\/\/en.wikipedia.org\/wiki\/DICOM). \u533b\u7642\u306b\u304a\u3051\u308b\u30c7\u30b8\u30bf\u30eb\u753b\u50cf\u901a\u4fe1\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8d85\u97f3\u6ce2\u3084MRI\u306a\u3069\u306e\u30e1\u30c7\u30a3\u30ab\u30eb\u30b9\u30ad\u30e3\u30f3\u306e\u753b\u50cf\uff0b\u60a3\u8005\u306e\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002","999ea5f1":"###  1.2 OSIC Pulmonary Fibrosis Progression \u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3068\u306f?\n- \u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u3067\u306f\u3001\u80ba\u306eCT\u30b9\u30ad\u30e3\u30f3\u306b\u57fa\u3065\u3044\u3066\u60a3\u8005\u306e\u80ba\u6a5f\u80fd\u306e\u4f4e\u4e0b\u306e\u91cd\u75c7\u5ea6\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002\u5438\u3044\u8fbc\u3093\u3060\u7a7a\u6c17\u3068\u5410\u3044\u305f\u7a7a\u6c17\u306e\u91cf\u3092\u6e2c\u5b9a\u3059\u308b\u30b9\u30d4\u30ed\u30e1\u30fc\u30bf\u30fc\u306e\u51fa\u529b\u306b\u57fa\u3065\u3044\u3066\u80ba\u6a5f\u80fd\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\u8ab2\u984c\u306f\u3001\u753b\u50cf\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3001\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3FVC\u3092\u5165\u529b\u3068\u3057\u3066\u3001\u6a5f\u68b0\u5b66\u7fd2\u6280\u8853\u3092\u7528\u3044\u3066\u4e88\u6e2c\u3092\u884c\u3046\u3053\u3068\u3067\u3059\u3002\n    \n    \n###  1.3 \u6211\u3005\u306f\u4f55\u3092\u3059\u3079\u304d\u304b?\n\u80ba\u306eCT\u30b9\u30ad\u30e3\u30f3\u306b\u57fa\u3065\u3044\u3066\u3001\u60a3\u8005\u3055\u3093\u306e\u80ba\u6a5f\u80fd\u306e\u4f4e\u4e0b\u306e\u91cd\u75c7\u5ea6\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u5404\u60a3\u8005\u3055\u3093\u306e\u6700\u7d42\u7684\u306a3\u56de\u306eFVC\u6e2c\u5b9a\u5024\u3068\u3001\u305d\u306e\u4e88\u6e2c\u306e\u4fe1\u983c\u5024\u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002\n    \n- \u672c\u5927\u4f1a\u306e\u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u306f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d041%->15%\u3067\u7b97\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u4ed6\u306e99%->85%\u3067\u8a08\u7b97\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u6700\u7d42\u7684\u306a\u9806\u4f4d\u306f\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n    \n###  1.4 \u30e1\u30c8\u30ea\u30c3\u30af:\u30e9\u30d7\u30e9\u30b9\u5bfe\u6570\u5c24\u5ea6\n![](https:\/\/i.imgur.com\/tEIZvli.png)\n- \u753b\u50cf\u30af\u30ec\u30b8\u30c3\u30c8: https:\/\/en.wikipedia.org\/wiki\/Laplace_distribution\n    \n- \u3053\u306e\u30b3\u30f3\u30da\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u8a55\u4fa1\u6307\u6a19\u306f\u3001\u30e9\u30d7\u30e9\u30b9\u5bfe\u6570\u5c24\u5ea6\u3092\u4fee\u6b63\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\u4e88\u6e2c\u5024\u306f\u3001\u30e9\u30d7\u30e9\u30b9\u5bfe\u6570\u5c24\u5ea6\u306e\u4fee\u6b63\u7248\u3067\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u5404\u6a19\u672c\u306b\u3064\u3044\u3066\u3001`FVC` \u3068 `Confidence` \u306e\u5c3a\u5ea6 (\u6a19\u6e96\u504f\u5dee\u03c3) \u3092\u4e88\u6e2c\u3057\u307e\u3059\u3002\n\n    70\u3088\u308a\u5c0f\u3055\u3044`Confidence`\u5024\u306f\u5207\u308a\u53d6\u3089\u308c\u307e\u3059\u3002\n\n    $\\large \\sigma_{clipped} = max(\\sigma, 70),$\n\n    \u307e\u305f\u30011000\u3092\u8d85\u3048\u308b\u30a8\u30e9\u30fc\u306f\u3001\u5927\u304d\u306a\u30a8\u30e9\u30fc\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u5207\u308a\u53d6\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n    $\\large \\Delta = min ( |FVC_{true} - FVC_{predicted}|, 1000 ),$\n\n    \u30e1\u30c8\u30ea\u30c3\u30af\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n    $\\Large metric = -   \\frac{\\sqrt{2} \\Delta}{\\sigma_{clipped}} - \\ln ( \\sqrt{2} \\sigma_{clipped} ).$\n\n\n\u305d\u308c\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f [Evaluation Page](https:\/\/www.kaggle.com\/c\/osic-pulmonary-fibrosis-progression\/overview\/evaluation)\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u3082\u3057\u3053\u308c\u304c\u65b0\u9bae\u306a\u3082\u306e\u3067\u3001\u3042\u306a\u305f\u306b\u3068\u3063\u3066\u4fa1\u5024\u306e\u3042\u308b\u3082\u306e\u3060\u3063\u305f\u3068\u611f\u3058\u305f\u3089\u3001<font color='orange'>upvoting<\/font>\u3092\u691c\u8a0e\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \ud83d\ude04","dfb6c29d":"### \u60a3\u8005\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u304a\u3051\u308b\u6027\u5225\u3068\u55ab\u7159\u72b6\u614b\u306e\u6bd4\u8f03","17155a3e":"# 6. <a id='visual'>\u753b\u50cf\u306e\u53ef\u8996\u5316 : DECOM \ud83d\uddfa\ufe0f<\/a>  ","08d1fdc4":"# \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u305f\u53ef\u8996\u5316\n* https:\/\/www.kaggle.com\/pranavkasela\/animating-the-lung-ct-scan","3ec0d9be":"### FVC\u3068\u9031\u306e\u6bd4\u8f03","f19e6e1b":"# 5. <a id='details'>\u30c7\u30fc\u30bf\u63a2\u7d22\u306e\u8a73\u7d30 \ud83c\udfa0<\/a> ","d9d8b733":"\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u306f\u3059\u3067\u306b `5` \u306e\u60a3\u8005\u304c\u5b58\u5728\u3057\u3066\u304a\u308a\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u3082\u540c\u69d8\u306b\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002","2ccc3cf4":" `5` : \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u60a3\u8005\u6570","73540bef":"* https:\/\/www.kaggle.com\/trsekhar123\/nb-to-extract-metadata-and-resize-images-train","60c9a9db":"## \u30d1\u30fc\u30bb\u30f3\u30c8","2e4a74b4":"## train.csv\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7","d7d45f13":"\u60a3\u8005\u306eFVC\u3092\u3001\u985e\u4f3c\u3057\u305f\u7279\u5fb4\u3092\u6301\u3064\u4eba\u306e\u5178\u578b\u7684\u306aFVC\u306e\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u3068\u3057\u3066\u8fd1\u4f3c\u3057\u305f\u8a08\u7b97\u30d5\u30a3\u30fc\u30eb\u30c9\u3002","163be08b":"## \u6027\u5225\u306e\u5206\u5e03","dccc661a":"Percent\u30ab\u30e9\u30e0\u306e\u578b\u306ffloat64\u3067\u3059\u3002","267d7f9c":"### \u3042\u308b\u60a3\u8005\u306b\u304a\u3051\u308bFVC\u3068\u9031\u306e\u6bd4\u8f03","0a1cbe25":"### \u6b20\u640d\u5024","7b5ed80d":"`139` : \u7537\u6027\n\n`37` : \u5973\u6027","0f7d61bc":"dcom\u30d5\u30a1\u30a4\u30eb\u306emeta\u8981\u7d20\u306f\u30d5\u30a1\u30a4\u30eb\u3054\u3068\u306b\u5fae\u5999\u306b\u9055\u3046\u3088\u3046\u3067\u3059\u3002\n- \u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044!","1c546ec9":"### \u60a3\u8005\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u304a\u3051\u308b\u30d1\u30fc\u30bb\u30f3\u30c8\u3068\u55ab\u7159\u72b6\u614b\u306e\u6bd4\u8f03","168ab886":"Weeks\u306b\u306f\u30de\u30a4\u30ca\u30b9\u306e\u5024\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u306a\u305c\u306a\u3089\u3001Weeks\u306f\u30d9\u30fc\u30b9\u30e9\u30a4\u30f3CT\u306e\u524d\u5f8c\u306e\u76f8\u5bfe\u7684\u306a\u9031\u6570\u3060\u304b\u3089\u3067\u3059\u3002","103938d7":"# 3. <a id='reading'>train.csv\u306e\u8aad\u307f\u8fbc\u307f \ud83d\udcda<\/a>","fe32cce9":"train_df\u3068test_df\u306b\u306f\u6b20\u640d\u5024\u306f\u3042\u308a\u307e\u305b\u3093\u3002","bea159dd":"## \u3053\u306e\u30ab\u30fc\u30cd\u30eb\u304c\u5f79\u306b\u7acb\u3063\u305f\u3089\u3001<font color='orange'>please upvote<\/font>!\n- \u307e\u305f\u6b21\u56de\u304a\u4f1a\u3044\u3057\u307e\u3057\u3087\u3046!","cc8021e2":"\u4ee5\u524d\u306e\u53ef\u8996\u5316\u60c5\u5831\u3068\u6bd4\u8f03\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u4ee5\u4e0b\u306ePandas Profiling\u3068\u6bd4\u8f03\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002","8897357b":"# <a id='etc'>\u88dc\u8ad6 - Pandas \u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0 \ud83c\udf24\ufe0f<\/a>","45fdf368":"## \u500b\u3005\u306e\u60a3\u8005\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u6210\n\n`175` \u306e\u30e6\u30cb\u30fc\u30af\u306a\u60a3\u8005\u306b\u5bfe\u3057\u3066\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nThanks [@wjdanalharthi](https:\/\/www.kaggle.com\/wjdanalharthi)","34ecc8da":"\u8a13\u7df4\u30c7\u30fc\u30bf\u3067\u306f\u30011\u3064\u306e\u300cPatient\u300d\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u884c\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089Patient\u306f\u9031\u6570\u3001FVC\u3001Percent\u304c\u7570\u306a\u308b\u305f\u3081\u3067\u3059\u3002","0075345b":"## \u30e6\u30cb\u30fc\u30af\u306a\u60a3\u8005\u306e\u5e74\u9f62\u5206\u5e03","49f5d0a8":"# 7. <a id='extract'>\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u5185\u306eDIOCOM\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u62bd\u51fa \ud83c\udf0a<\/a>","030d2e2b":"## **\u4e00\u822c\u7684\u306a\u60c5\u5831**","b603df44":"<img src='https:\/\/www.osicild.org\/uploads\/1\/2\/2\/7\/122798879\/editor\/kaggle-v01-clipped.png?1569346633'>\n<h1><center>OSIC Pulmonary Fibrosis Progression - EDA<\/center><h1>\n\n# 0.\u6ce8\u91c8\n  \u672c\u8a18\u4e8b\u306f https:\/\/www.kaggle.com\/piantic\/osic-pulmonary-fibrosis-progression-basic-eda \u3092\u65e5\u672c\u8a9e\u306b\u8a33\u3057\u305f\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002<br>\n  \u5185\u5bb9\u306e\u8aa4\u308a\u3084\u8aa4\u8a33\u306b\u3064\u3044\u3066\u306f\u4e88\u3081\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n    \n# 1. <a id='Introduction'>\u5c0e\u5165 \ud83c\udccf <\/a>\n    \n###  1.1 \u80ba\u7dda\u7dad\u75c7\u3068\u306f?\n* [\u80ba\u7dda\u7dad\u75c7\u3068\u306f\u3001\u80ba\u306e\u7d44\u7e54\u304c\u50b7\u3064\u3044\u3066\u7622\u75d5\u5316\u3059\u308b\u3053\u3068\u3067\u8d77\u3053\u308b\u80ba\u306e\u75c5\u6c17\u3067\u3059\u3002](https:\/\/www.mayoclinic.org\/diseases-conditions\/pulmonary-fibrosis\/symptoms-causes\/syc-20353690)  <br>\u3053\u306e\u80a5\u539a\u3057\u3066\u786c\u304f\u306a\u3063\u305f\u7d44\u7e54\u306f\u3001\u3042\u306a\u305f\u306e\u80ba\u304c\u6b63\u5e38\u306b\u50cd\u304f\u3053\u3068\u3092\u3088\u308a\u56f0\u96e3\u306b\u3057\u307e\u3059\u3002<br>\u3042\u306a\u305f\u304c\u3053\u306e\u30bf\u30a4\u30d7\u306e\u80ba\u306e\u75c5\u6c17\u306b\u3064\u3044\u3066\u3055\u3089\u306b\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u6709\u76ca\u306a\u30d3\u30c7\u30aa\u3092\u4e0b\u306b\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u3002"}}