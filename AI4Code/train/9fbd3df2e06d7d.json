{"cell_type":{"024b0380":"code","c1bdd952":"code","6195a659":"code","808f2497":"code","9bdd9991":"code","8911c735":"code","3ab85c82":"code","e940dcc9":"code","db7caf09":"markdown","e3ab0731":"markdown","072b0fbe":"markdown","de9ae7a9":"markdown","e4c95915":"markdown","baede2d5":"markdown","1c0fc97b":"markdown","88ee4966":"markdown","d4697454":"markdown","d296d43e":"markdown"},"source":{"024b0380":"from IPython.display import clear_output\n\n!pip3 install -U lazypredict\n!pip3 install -U pandas==1.3.4  #Upgrading pandas\n\nclear_output()","c1bdd952":"import pandas as pd\nimport xgboost as xgb\nimport numpy as np\nimport plotly.express as px\n\n\nimport lazypredict\nfrom lazypredict.Supervised import LazyClassifier\n\n\nfrom sklearn.base import TransformerMixin\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split","6195a659":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv('..\/input\/titanic\/test.csv')\n\ndrop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)\ntest = test.drop(drop_elements, axis = 1)\n\ndef checkNull_fillData(df):\n    for col in df.columns:\n        if len(df.loc[df[col].isnull() == True]) != 0:\n            if df[col].dtype == \"float64\" or df[col].dtype == \"int64\":\n                df.loc[df[col].isnull() == True,col] = df[col].mean()\n            else:\n                df.loc[df[col].isnull() == True,col] = df[col].mode()[0]\n                \ncheckNull_fillData(train)\ncheckNull_fillData(test)\n\nstr_list = [] \nnum_list = []\nfor colname, colvalue in train.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)\n        \ntrain = pd.get_dummies(train, columns=str_list)\ntest = pd.get_dummies(test, columns=str_list)\n\ntrain_X = train.drop(\"Survived\" , axis =1 )\ntrain_y = train[\"Survived\"]\n\nX_train , X_test , y_train , y_test = train_test_split(train_X , train_y, random_state = 12 ,test_size =0.30)","808f2497":"clf = LazyClassifier(verbose=0,\n                     ignore_warnings=True,\n                     custom_metric=None,\n                     predictions=False,\n                     random_state=12,\n                     classifiers='all')\n\nmodels, predictions = clf.fit(X_train , X_test , y_train , y_test)\nclear_output()","9bdd9991":"models","8911c735":"line = px.line(data_frame= models ,y =[\"Accuracy\"] , markers = True)\nline.update_xaxes(title=\"Model\",\n              rangeslider_visible = True)\nline.update_yaxes(title = \"Accuracy\")\nline.update_traces(line_color=\"red\")\nline.update_layout(showlegend = True,\n    title = {\n        'text': 'Accuracy vs Model',\n        'y':0.94,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nline.show()","3ab85c82":"line = px.line(data_frame= models ,y =[\"ROC AUC\" , \"F1 Score\"] , markers = True)\nline.update_xaxes(title=\"Model\",\n              rangeslider_visible = True)\nline.update_yaxes(title = \"ROC AUC SCORE\")\nline.update_layout(showlegend = True,\n    title = {\n        'text': 'ROC AUC and F1 Score vs Model',\n        'y':0.94,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nline.show()\n","e940dcc9":"line = px.line(data_frame= models ,y =[\"Time Taken\"] , markers = True)\nline.update_xaxes(title=\"Model\",\n              rangeslider_visible = True)\nline.update_yaxes(title = \"Time(s)\")\nline.update_traces(line_color=\"purple\")\nline.update_layout(showlegend = True,\n    title = {\n        'text': 'TIME TAKEN vs Model',\n        'y':0.94,\n        'x':0.5,\n        'xanchor': 'center',\n        'yanchor': 'top'})\n\nline.show()\n","db7caf09":"# Data Preprocessing","e3ab0731":"# Imports","072b0fbe":"# <center> TITANIC: 27 DIFFERENT MODELS COMPARISON <\/center>","de9ae7a9":"# Visualizing Results","e4c95915":"# Installing LazyPredict ","baede2d5":"**Created by Sanskar Hasija**\n\n**Titanic: 27 Different Models Comparison**\n\n**20 OCTOBER 2021**\n","1c0fc97b":"# Training 27 Different Classifiers","88ee4966":"### Note : All the 27 Classifiers were trained on default parameters and were passed only random state. If you wish to train a model on a particular set of parameters you can access the using this line of code - ```lazypredict.Supervised.CLASSIFIERS```\n\n### For more information check the official documentation of LazyPredict here:  https:\/\/lazypredict.readthedocs.io","d4697454":"### Check the offical Documentation of LazyPredict here : https:\/\/lazypredict.readthedocs.io","d296d43e":"<h1><center>If you find this notebook useful, support with an upvote\ud83d\udc4d<\/center><\/h1>"}}