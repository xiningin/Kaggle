{"cell_type":{"50e2c66f":"code","d888f5f6":"code","07d37500":"code","9452b2f8":"code","c65193dd":"code","525dea3d":"code","83f62885":"markdown","fba460cb":"markdown","13b7074d":"markdown","c605aa66":"markdown"},"source":{"50e2c66f":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os, gc, warnings,re \nwarnings.filterwarnings(\"ignore\")\n\n# Plot\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nimport plotly.express as px","d888f5f6":"# Load Data\nurl = '..\/input\/hospitals-count-in-india-statewise\/Hospitals count in India - Statewise.csv'\ndf = pd.read_csv(url, header='infer')\n\n# Total Record\nprint(\"Total Records: \", df.shape[0])\n\n# Renaming Columns\ndf.rename(columns={\"States\/UTs\":\"States\",\n                   \"Number of hospitals in public sector\": \"Public\",\n                   \"Number of hospitals in private sector\": \"Private\",\n                   \"Total number of hospitals (public+private)\":\"Total\"\n                  }, inplace=True)\n\n\n# Drop Columns with Null\/Missing Values\ndf.dropna(inplace=True)\n\n# Helper Function to Clean the Numeric Values\ndef clean (num):\n    return re.sub(\"[^\\d\\.]\", \"\", num)\n\n\n# Cleaning & Converting the Data Type\ncols = ['Public','Private','Total']\n\nfor col in cols:\n    df[col] = df[col].apply(lambda x: clean(x))\n    df[col] = pd.to_numeric(df[col])\n\n\n#Inspect\ndf.head()","07d37500":"'''Stat Summary'''\ndf.describe().T","9452b2f8":"fig = px.bar(df, x=\"States\", y=[\"Public\",\"Private\"], title=\"Statewise Hospital Count\",text='Total',\n             color_discrete_sequence = ['lightslategray','lightsteelblue'])\nfig.update_traces(texttemplate='%{text:.2s}', textposition='outside')\nfig.update_layout(uniformtext_minsize=8.5, uniformtext_mode='hide')\nfig.show()","c65193dd":"def eda():\n\n    # Plot Config\n    fig, axes = plt.subplots(3, 2, figsize=(25,15))\n    fig.suptitle('Hospital Count - EDA', fontsize=20)\n    axes = axes.flatten()\n    \n    ### Public Hospital EDA\n    temp = df[['States','Public']]\n    \n    # Highest\n    tempL = temp.nlargest(5, columns=['Public'])\n    tempL.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[0], x=tempL.States.values, y=tempL.Public.values, palette=\"mako_r\")\n    axes[0].set_title(\"Top 5 States with Highest Public Hospitals\")\n    \n    # Lowest\n    tempS = temp.nsmallest(5, columns=['Public'])\n    tempS.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[1], x=tempS.States.values, y=tempS.Public.values, palette=\"mako_r\")\n    axes[1].set_title(\"Top 5 States with Lowest Public Hospitals\")\n    \n    \n    ### Private Hospital EDA\n    temp = df[['States','Private']]\n    \n    # Highest\n    tempL = temp.nlargest(5, columns=['Private'])\n    tempL.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[2], x=tempL.States.values, y=tempL.Private.values, palette=\"mako_r\")\n    axes[2].set_title(\"Top 5 States with Highest Private Hospitals\")\n    \n    # Lowest\n    tempS = temp.nsmallest(5, columns=['Private'])\n    tempS.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[3], x=tempS.States.values, y=tempS.Private.values, palette=\"mako_r\")\n    axes[3].set_title(\"Top 5 States with Lowest Private Hospitals\")    \n\n\n    ### Total Hospital EDA\n    temp = df[['States','Total']]\n    \n    # Highest\n    tempL = temp.nlargest(5, columns=['Total'])\n    tempL.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[4], x=tempL.States.values, y=tempL.Total.values, palette=\"mako_r\")\n    axes[4].set_title(\"Top 5 States with Highest Number of Hospitals\")\n    \n    # Lowest\n    tempS = temp.nsmallest(5, columns=['Total'])\n    tempS.reset_index(drop=True, inplace=True)\n    \n    sns.barplot(ax=axes[5], x=tempS.States.values, y=tempS.Total.values, palette=\"mako_r\")\n    axes[5].set_title(\"Top 5 States with Lowest Number of Hospitals\")    \n    \n\n# Execute Function\neda ()","525dea3d":"gc.collect()","83f62885":"## Data","fba460cb":"## EDA","13b7074d":"## EDA of the number of hospitals (public\/private) in Indian States\/UT. \n\n#### Please do consider to UPVOTE if this notebook has been insightful :)\n","c605aa66":"## Libraries"}}