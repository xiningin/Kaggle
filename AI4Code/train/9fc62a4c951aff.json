{"cell_type":{"f2daebc4":"code","7cdb7e4a":"code","12456cd2":"code","24592c93":"code","c98f00fe":"code","78fca77c":"code","fa4b3880":"code","17aae001":"code","b1f285e3":"code","1184cc43":"code","48004425":"code","d514b337":"code","6a3cebd3":"code","b54e9135":"code","58c010c4":"code","38ee135a":"code","8856b775":"code","88c138f3":"code","3a8db6b7":"code","a3fb2707":"code","da116b52":"code","07de8318":"code","64f117e7":"code","8fe3a312":"code","dc5674a9":"code","244d0a0c":"code","01b401f9":"code","2c0ae04d":"code","402b09a2":"code","0e1519d1":"code","8bcc3f47":"code","a90adc35":"code","47cef418":"code","544745b8":"code","4fa967f6":"code","29208501":"code","d1f74102":"code","658cf118":"code","3d7b222f":"code","cd08e39d":"code","6fec792c":"code","f888f554":"markdown","9d733f97":"markdown"},"source":{"f2daebc4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7cdb7e4a":"# Directive pour afficher les graphiques dans Jupyter\n%matplotlib inline","12456cd2":"# Pandas : librairie de manipulation de donn\u00e9es\n# NumPy : librairie de calcul scientifique\n# MatPlotLib : librairie de visualisation et graphiques\n# SeaBorn : librairie de graphiques avanc\u00e9s\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport matplotlib.pyplot as plt","24592c93":"# Lecture des donn\u00e9es d'apprentissage et de test\nt = pd.read_csv(\"..\/input\/pima-indians-diabetes-database\/diabetes.csv\")","c98f00fe":"t.head(10)","78fca77c":"plt.hist(t.Glucose, bins=80)","fa4b3880":"plt.hist(t.Insulin, bins=80)","17aae001":"plt.hist(t.SkinThickness, bins=80)","b1f285e3":"plt.hist(t.BMI, bins=80)","1184cc43":"def replace_0(df,col) :\n    df1 = df.copy()\n    n = df.shape[0]\n    m = df[col].mean()\n    s = df[col].std()\n    for i in range(768) :\n        if df.loc[i,col]==0 :\n            df1.loc[i,col] = np.random.normal(m,s)\n    return df1","48004425":"t.count()[0]","d514b337":"t = replace_0(t,'Glucose')","6a3cebd3":"t.Insulin = t.Insulin.replace(to_replace = 0, value = t.Insulin.mean())","b54e9135":"t.SkinThickness = t.SkinThickness.replace(to_replace = 0, value = t.SkinThickness.mean())","58c010c4":"t.BloodPressure = t.BloodPressure.replace(to_replace = 0, value = t.BloodPressure.mean())","38ee135a":"t.BMI = t.BMI.replace(to_replace = 0, value = t.BMI.mean())","8856b775":"plt.hist(t.Glucose, bins=80)","88c138f3":"plt.hist(t.Insulin, bins=80)","3a8db6b7":"plt.hist(t.SkinThickness, bins=80)","a3fb2707":"plt.hist(t.BMI, bins=80)","da116b52":"sns.distplot(t.BMI, color='blue')","07de8318":"X = t.drop(['Outcome'], axis=1)\ny = t.Outcome","64f117e7":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)","8fe3a312":"print(X_train.shape)\nprint(X_test.shape)","dc5674a9":"from sklearn.linear_model import LogisticRegression","244d0a0c":"lr = LogisticRegression(max_iter = 10000)\nlr.fit(X_train,y_train)","01b401f9":"y_lr = lr.predict(X_test)","2c0ae04d":"from sklearn.metrics import classification_report, confusion_matrix, roc_curve, roc_auc_score,auc, accuracy_score","402b09a2":"print(\"Score de pr\u00e9cision: \" + str(accuracy_score(y_test,y_lr)))","0e1519d1":"print(confusion_matrix(y_test,y_lr))","8bcc3f47":"print(classification_report(y_test, y_lr))","a90adc35":"from sklearn import ensemble\nrf = ensemble.RandomForestClassifier()\nrf.fit(X_train, y_train)\ny_rf = rf.predict(X_test)","47cef418":"print(accuracy_score(y_test, y_rf))","544745b8":"print(classification_report(y_test, y_rf))","4fa967f6":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","29208501":"from sklearn import model_selection","d1f74102":"param_grid = {\n              'n_estimators': [10, 100, 500],\n              'min_samples_leaf': [1, 20, 50]\n             }\nestimator = ensemble.RandomForestClassifier()\nrf_gs = model_selection.GridSearchCV(estimator, param_grid)","658cf118":"rf_gs.fit(X_train, y_train)","3d7b222f":"print(accuracy_score(y_test, y_rf))","cd08e39d":"cm = confusion_matrix(y_test, y_rf)\nprint(cm)","6fec792c":"print(classification_report(y_test, y_rf))","f888f554":"On met 768 car :","9d733f97":"On remarque que certaines colonne sont fauss\u00e9 par le manque de data, ici elles sont mises a 0. \nOn va alors utiliser la fonction replace_0 qui calcul la moyenne et la variance afin de remplacer les 0 par une valeur random en fonction de la loi normale."}}