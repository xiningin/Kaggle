{"cell_type":{"6c99745e":"code","d8466aff":"code","5c9a6ba4":"code","963b2712":"code","ad64adcf":"code","e091e9ec":"code","bfe2311c":"code","62167a1c":"code","ffabe7ea":"code","41dcf76d":"code","64e48843":"code","9ef1a801":"code","adf77e43":"code","229b5a83":"code","0adda5d5":"code","0e9cc6d7":"code","67e68a17":"code","75b030ea":"code","334b371c":"code","1eb0c782":"code","88b8bfa8":"code","c875895a":"code","ed2700b3":"code","c9ee94e8":"code","2dac9119":"code","8f263271":"code","fb0686ef":"code","ef4d62c2":"code","903bc3bf":"code","fe9136fa":"code","2d2be3fe":"code","10fa64ff":"code","cfb721ae":"code","78bfadd4":"code","92b2452c":"code","c0d07553":"code","9e65febf":"code","70dd6704":"code","5829af77":"code","94e28533":"code","1de0e086":"code","be40a7ae":"code","1b20d5c6":"code","4fe9bbb2":"code","c30f4eee":"code","9045c6b8":"code","907ea153":"code","f59c8f9a":"code","a8bd653d":"code","adabf014":"code","176166f9":"code","e53520e4":"code","79e6c133":"code","9988e4d2":"code","61c4a167":"code","7ab85afa":"code","643b0a6f":"code","d3376a14":"code","fbb21f52":"code","a585c455":"code","7a962a41":"code","c4e56055":"code","e58e820d":"code","8f3c7231":"code","b41ea629":"code","39d4a86a":"code","1d80898c":"code","7328464b":"code","a85a9fc1":"code","d733c956":"code","9ad7bd75":"code","7d594922":"code","169cb6ff":"code","90fe76a6":"code","2dc35367":"code","6484b991":"code","063b1555":"code","14144e6f":"markdown","1aa5d160":"markdown","7fe8fa67":"markdown","cd5f2396":"markdown","674d642e":"markdown","60af8b63":"markdown","58911c47":"markdown","37f84dac":"markdown","8cfc8d73":"markdown","b9ddafa2":"markdown","e36bb8c9":"markdown","e1292292":"markdown","50c6cf68":"markdown","4ddcc131":"markdown","4774f417":"markdown","23ca9b23":"markdown","55bbfa33":"markdown","7e5b23ce":"markdown","c1263156":"markdown","a4ac5fe9":"markdown","03fedcdb":"markdown","c388d5cc":"markdown","30a978b9":"markdown","5701fb25":"markdown","b6894d88":"markdown","e4ed3b70":"markdown","6f47e688":"markdown","8dd29d9b":"markdown","456f9f0b":"markdown","ae764bdd":"markdown","60293516":"markdown","9656b76a":"markdown","2dbe6105":"markdown","b3d9a663":"markdown","e46b510b":"markdown","81dd7dd1":"markdown","251416cf":"markdown","6ba82300":"markdown","ab547383":"markdown","4c9b40e6":"markdown","829fc90e":"markdown","abf61991":"markdown","ef651cb6":"markdown","7e158d23":"markdown","c5ab8872":"markdown","497144bf":"markdown","ddf85882":"markdown","016b58ce":"markdown","eaf6767f":"markdown","85300fa2":"markdown","de68566b":"markdown","46b57ecd":"markdown","c7058a0a":"markdown","2b2a7fb9":"markdown","0d67d04e":"markdown","3d82def1":"markdown","ef195cf7":"markdown","4fe9a515":"markdown","9cb00d3f":"markdown","9db78672":"markdown","9e67b077":"markdown","1b36d65c":"markdown","c701147e":"markdown","f5d181d9":"markdown","387c4fe6":"markdown","e05d486e":"markdown","e940ac85":"markdown","9d9b9f00":"markdown","2daa7c0b":"markdown","3afdd868":"markdown","844ec066":"markdown","51d2e425":"markdown","df1b2aba":"markdown","54dd5deb":"markdown","4d085124":"markdown","3c3b7604":"markdown","d380162a":"markdown","61ffc651":"markdown","1b509e7f":"markdown"},"source":{"6c99745e":"#imports\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n%matplotlib inline\nimport matplotlib.pyplot as plt  # Matlab-style plotting\nimport seaborn as sns\ncolor = sns.color_palette()\nsns.set_style('darkgrid')\nimport warnings\ndef ignore_warn(*args, **kwargs):\n    pass\nwarnings.warn = ignore_warn #ignore annoying warning (from sklearn and seaborn)\nimport re # RegEx for string manipulaion\nfrom matplotlib import rc\nfrom scipy import stats\nfrom scipy.stats import norm, skew #for some statistics\nfrom collections import Counter #for making frequency tables\nfont = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 15}\n\nrc('font', **font)\n\npd.set_option('display.float_format', lambda x: '{:.3f}'.format(x)) #Limiting floats output to 3 decimal points\n\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\")) #check the files available in the directory","d8466aff":"#loading data set\ngoogleplaystore = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore.csv\")\ngoogleplaystore_user_reviews = pd.read_csv(\"..\/input\/google-play-store-apps\/googleplaystore_user_reviews.csv\")","5c9a6ba4":"print(\"Dataset: Google Play Store\")\nprint(\"Columns: \", list(googleplaystore.columns))\nprint(\"Top five entries: \\n\", googleplaystore.head(5))\nprint(\"Total entries: \", len(googleplaystore))\nprint(\"\\nDataset: Google Play Store user user reviews\")\nprint(\"Columns: \", list(googleplaystore_user_reviews.columns))\nprint(\"Top five entries: \\n\", googleplaystore_user_reviews.head(5))\nprint(\"Total entries: \", len(googleplaystore_user_reviews))","963b2712":"googleplaystore.iloc[10472]","ad64adcf":"googleplaystore = googleplaystore.drop(index = 10472)","e091e9ec":"for app_id in range(len(googleplaystore)):\n    name = googleplaystore.iloc[app_id][0]\n    if name == 'Instagram':\n        print(googleplaystore.iloc[app_id])","bfe2311c":"reviews_max = {}\n\nfor app_id in range(len(googleplaystore)):\n    app = googleplaystore.iloc[app_id]\n    name = app[0]\n    n_reviews = float(app[3])\n\n    if name in reviews_max and reviews_max[name] < n_reviews:\n        reviews_max[name] = n_reviews\n\n    elif name not in reviews_max:\n        reviews_max[name] = n_reviews","62167a1c":"[(i, reviews_max[i]) for i in list(reviews_max.keys())[:10]]","ffabe7ea":"print(\"Length of reviews_max dict: \", len(reviews_max))\nprint(\"Total number of duplicate entries:\", len(googleplaystore) - len(reviews_max))","41dcf76d":"googleplaystore_clean = []\nalready_added = []\n\nfor app_id in range(len(googleplaystore)):\n    app = googleplaystore.iloc[app_id]\n    name = app[0]\n    n_reviews = float(app[3])\n\n    if (reviews_max[name] == n_reviews) and (name not in already_added):\n        googleplaystore_clean.append(app)\n        already_added.append(name)","64e48843":"len(googleplaystore_clean)","9ef1a801":"print(googleplaystore_clean[529][0])\nprint(googleplaystore_clean[1206][0])\nprint(googleplaystore_clean[3279][0])\nprint(googleplaystore_clean[4412][0])","adf77e43":"def is_English(string):\n    non_ascii = 0\n\n    for character in string:\n        if ord(character) > 127:\n            non_ascii += 1\n\n    if non_ascii > 3:\n        return False\n    else:\n        return True\n\nprint(is_English('Docs To Go\u2122 Free Office Suite'))\nprint(is_English('Instachat <img draggable=\"false\" class=\"emoji\" alt=\"<img draggable=\"false\" class=\"emoji\" alt=\"<img draggable=\"false\" class=\"emoji\" alt=\"<img class=\"emoji\" alt=\"\ud83d\ude1c\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">\" src=\"https:\/\/s.w.org\/images\/core\/emoji\/11.2.0\/svg\/1f61c.svg\">'))\nprint(is_English('\u4e2d\u56fd\u8a9e AQ\u30ea\u30b9\u30cb\u30f3\u30b0'))","229b5a83":"googleplaystore_english = []\n\n\n### android ###\nfor app in googleplaystore_clean:\n    name = app[0]\n    if is_English(name):\n        googleplaystore_english.append(app)\n","0adda5d5":"### These two lists will store the new data sets ###\ngoogleplaystore_final = []\n\n### android ###\nfor app in googleplaystore_english:\n    price = app[7]\n    if price == '0':\n        googleplaystore_final.append(app)\n\n### Checking number of entries left ###\nprint(len(googleplaystore_final))","0e9cc6d7":"train = pd.DataFrame(googleplaystore_final, columns = googleplaystore.columns)","67e68a17":"train.drop('Price', axis=1, inplace=True)","75b030ea":"train[[\"Reviews\"]] = train[[\"Reviews\"]].astype(np.int32)","334b371c":"train.columns","1eb0c782":"train.describe(include =['object', 'float', 'int32'] )","88b8bfa8":"train.describe(include =['float', 'int32'] )","c875895a":"train.describe(include =['object'] )","ed2700b3":"Installs_set = list(set(train['Installs']))\nInstalls_set","c9ee94e8":"'''\nHow to get Category_set:\nCategory_set = list(set(train['Category']))\n#Due to change of hashing keys of set indeces, the output list is changing. \n'''\nCategory_set =  ['PRODUCTIVITY',\n                 'SPORTS',\n                 'LIFESTYLE',\n                 'FOOD_AND_DRINK',\n                 'NEWS_AND_MAGAZINES',\n                 'HOUSE_AND_HOME',\n                 'GAME',\n                 'COMMUNICATION',\n                 'HEALTH_AND_FITNESS',\n                 'ENTERTAINMENT',\n                 'BEAUTY',\n                 'WEATHER',\n                 'AUTO_AND_VEHICLES',\n                 'SOCIAL',\n                 'EVENTS',\n                 'BUSINESS',\n                 'SHOPPING',\n                 'TOOLS',\n                 'PARENTING',\n                 'COMICS',\n                 'BOOKS_AND_REFERENCE',\n                 'MEDICAL',\n                 'PHOTOGRAPHY',\n                 'VIDEO_PLAYERS',\n                 'ART_AND_DESIGN',\n                 'FINANCE',\n                 'FAMILY',\n                 'PERSONALIZATION',\n                 'TRAVEL_AND_LOCAL',\n                 'EDUCATION',\n                 'MAPS_AND_NAVIGATION',\n                 'DATING',\n                 'LIBRARIES_AND_DEMO']","2dac9119":"freq_counter = dict(Counter(train[\"Category\"]))\nfreq_counter_pair = list(zip(freq_counter.keys(), freq_counter.values()))\nfreq_counter_pair.sort(key=lambda x: x[1], reverse = True)\nx = []\ny = []\nCategory_set_ = []\ni = 0\nfor x_, y_ in freq_counter_pair:\n    x.append(i)\n    i += 1\n    Category_set_.append(x_)\n    y.append(y_)\nfreq_table = pd.DataFrame(columns=[\"Category\", \"Number of apps\"])\nfreq_table[\"Category\"] = Category_set_\nfreq_table[\"Number of apps\"] = y\nfreq_table","8f263271":"font = {'family' : 'normal',\n        'weight' : 'bold',\n        'size'   : 15}\n\nrc('font', **font)\nf, ax = plt.subplots(figsize=(16, 12))\nfig = sns.barplot(x=x, y=y)\nax.title.set_text(\"Category vs Total Number of Apps (Most common apps by Category)\")\nax.set_xlabel(\"Category\")\nax.set_ylabel(\"Total Number of Apps\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Category_set)), Category_set_)\nprint()","fb0686ef":"# xs and ys were created above and using it here\ny_tmp = []\nfor i in y:\n    y_tmp.append(i\/len(train)*100)\nf, ax = plt.subplots(figsize=(16, 12))\nfig = sns.barplot(x=x, y=y_tmp)\nax.title.set_text(\"Category vs Total Number of Apps (Most common apps by Category)\")\nax.set_xlabel(\"Category\")\nax.set_ylabel(\"Total Number of Apps (in %)\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Category_set)), Category_set_)\nprint()","ef4d62c2":"var = 'Category'\ndata = pd.concat([train['Installs'].map(lambda x:float(re.sub('[,+]', '', x))), train[var].map(lambda x: Category_set.index(x))], axis=1)\nresult = data.groupby([\"Category\"])['Installs'].aggregate(np.mean).reset_index().sort_values('Installs', ascending=False)\nnew_mapping = list(result['Category'])\nnew_list = []\nfor i in data['Category']:\n    new_list.append(new_mapping.index(i))\ndata['Category'] = new_list\nCategory_set_ = []\nfor i in new_mapping:\n    Category_set_.append(Category_set[i])\nf, ax = plt.subplots(figsize=(16, 12))\nfig = sns.barplot(x=var, y=\"Installs\", data=data)\nax.title.set_text(\"Category vs Average Number of Installers (Most popular apps by Category)\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Category_set)), Category_set_)\nprint()","903bc3bf":"var = Category_set[7] #var = 'COMMUNICATION'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","fe9136fa":"var = Category_set[7]\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","2d2be3fe":"var = Category_set[7]\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","10fa64ff":"var = Category_set[23]# var = \"VIDEO_PLAYERS\"\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","cfb721ae":"var = Category_set[23]# var = \"VIDEO_PLAYERS\"\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","78bfadd4":"var = Category_set[23]# var = \"VIDEO_PLAYERS\"\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","92b2452c":"var = Category_set[13]# var = \"SOCIAL\"\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","c0d07553":"var = Category_set[13]# var = \"SOCIAL\"\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","9e65febf":"var = Category_set[13]# var = \"SOCIAL\"\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","70dd6704":"var = Category_set[22] #var = 'PHOTOGRAPHY'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","5829af77":"var = Category_set[22] #var = 'PHOTOGRAPHY'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","94e28533":"var = Category_set[0] #var = 'PRODUCTIVITY'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","1de0e086":"var = Category_set[0] #var = 'PRODUCTIVITY'\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","be40a7ae":"var = Category_set[0] #var = 'PRODUCTIVITY'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","1b20d5c6":"var = Category_set[6] #var = 'GAME'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","4fe9bbb2":"var = Category_set[6] #var = 'GAME'\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","c30f4eee":"var = Category_set[6] #var = 'GAME'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","9045c6b8":"var = Category_set[28] #var = 'TRAVEL_AND_LOCAL'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","907ea153":"var = Category_set[28] #var = 'TRAVEL_AND_LOCAL'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","f59c8f9a":"var = Category_set[28] #var = 'TRAVEL_AND_LOCAL'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","a8bd653d":"var = Category_set[9] #var = 'ENTERTAINMENT'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","adabf014":"var = Category_set[17] #var = 'TOOLS'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","176166f9":"var = Category_set[17] #var = 'TOOLS'\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","e53520e4":"var = Category_set[17] #var = 'TOOLS'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","79e6c133":"var = Category_set[4] #var = 'NEWS_AND_MAGAZINES'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","9988e4d2":"var = Category_set[4] #var = 'NEWS_AND_MAGAZINES'\ntrain[(train['Installs'] == '500,000,000+') & (train['Category'] == var)]","61c4a167":"var = Category_set[4] #var = 'NEWS_AND_MAGAZINES'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","7ab85afa":"var = Category_set[20] #var = 'BOOKS_AND_REFERENCE'\ntrain[(train['Installs'] == '1,000,000,000+') & (train['Category'] == var)]","643b0a6f":"var = Category_set[20] #var = 'BOOKS_AND_REFERENCE'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","d3376a14":"var = Category_set[16] #var = 'SHOPPING'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","fbb21f52":"var = Category_set[11] #var = 'WEATHER'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","a585c455":"var = Category_set[26] #var = 'FAMILY'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","7a962a41":"var = Category_set[26] #var = 'FAMILY'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","c4e56055":"var = Category_set[27] #var = 'PERSONALIZATION'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","e58e820d":"var = Category_set[27] #var = 'PERSONALIZATION'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","8f3c7231":"var = Category_set[30] #var = 'MAPS_AND_NAVIGATION'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","b41ea629":"var = Category_set[30] #var = 'MAPS_AND_NAVIGATION'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","39d4a86a":"var = Category_set[30] #var = 'MAPS_AND_NAVIGATION'\ntrain[(train['Installs'] == '1,000,000+') & (train['Category'] == var)]","1d80898c":"var = Category_set[8] #var = 'HEALTH_AND_FITNESS'\ntrain[(train['Installs'] == '100,000,000+') & (train['Category'] == var)]","7328464b":"var = Category_set[8] #var = 'HEALTH_AND_FITNESS'\ntrain[(train['Installs'] == '50,000,000+') & (train['Category'] == var)]","a85a9fc1":"var = Category_set[8] #var = 'HEALTH_AND_FITNESS'\ntrain[(train['Installs'] == '1,000,000+') & (train['Category'] == var)]","d733c956":"Genres_set = []\nfor Genre in train['Genres']:\n    if Genre not in Genres_set:\n        Genres_set.append(Genre)\n","9ad7bd75":"freq_counter = dict(Counter(train[\"Genres\"]))\nfreq_counter_pair = list(zip(freq_counter.keys(), freq_counter.values()))\nfreq_counter_pair.sort(key=lambda x: x[1], reverse = True)\nx = []\ny = []\nGenres_set_ = []\ni = 0\nfor x_, y_ in freq_counter_pair:\n    x.append(i)\n    i += 1\n    Genres_set_.append(x_)\n    y.append(y_)\nfreq_table = pd.DataFrame(columns=[\"Genres\", \"Number of apps\"])\nfreq_table[\"Genres\"] = Genres_set_\nfreq_table[\"Number of apps\"] = y\nfreq_table","7d594922":"font2 = dict(font)\nfont2['size'] = 20\nrc('font', **font2)\nf, ax = plt.subplots(figsize=(32, 30))\nfig = sns.barplot(x=x, y=y)\nax.title.set_text(\"Genres vs Total Number of Apps (Most common apps by Genres)\")\nax.set_xlabel(\"Genres\")\nax.set_ylabel(\"Total Number of Apps\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Genres_set)), Genres_set_)\nprint()","169cb6ff":"# xs and ys were created above and using it here\ny_tmp = []\nfor i in y:\n    y_tmp.append(i\/len(train)*100)\nfont2 = dict(font)\nfont2['size'] = 20\nrc('font', **font2)\nf, ax = plt.subplots(figsize=(32, 30))\nfig = sns.barplot(x=x, y=y_tmp)\nax.title.set_text(\"Genres vs Total Number of Apps (Most common apps by Genres) (in %)\")\nax.set_xlabel(\"Genres\")\nax.set_ylabel(\"Total Number of Apps\")\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nplt.xticks(range(len(Genres_set)), Genres_set_)\nprint()","90fe76a6":"font2 = dict(font)\nfont2['size'] = 18\nrc('font', **font2)\nvar = 'Genres'\ndata = pd.concat([train['Installs'].map(lambda x:float(re.sub('[,+]', '', x))), train[var].map(lambda x: Genres_set.index(x))], axis=1)\nresult = data.groupby([var])['Installs'].aggregate(np.mean).reset_index().sort_values('Installs', ascending=False)\nnew_mapping = list(result['Genres'])\nnew_list = []\nfor i in data['Genres']:\n    new_list.append(new_mapping.index(i))\ndata['Genres'] = new_list\nGenres_set_ = []\nfor i in new_mapping:\n    Genres_set_.append(Genres_set[i])\nf, ax = plt.subplots(figsize=(32, 40))\nax.title.set_text(\"Genres vs Average Number of Installers (Most popular apps by Genres)\")\nfig = sns.barplot(x=var, y=\"Installs\", data=data)\nfor tick in ax.xaxis.get_major_ticks():\n    tick.label.set_rotation('vertical')\nGenres_set_temp = list(map(lambda x: x +\" \"*(4-len(str(Genres_set.index(x)))) + str(Genres_set.index(x)), Genres_set_))\nplt.xticks(range(len(Genres_set)), Genres_set_temp)\nprint()","2dc35367":"print(\"Genres of \\'FITNESS\\' (HEALTH_AND_FITNESS) category:\")\nfor i in Genres_set:\n    if 'fitness' in i.lower():\n        print(\"\\t\", Genres_set.index(i), i)\nprint(\"\\n\\nGenres of \\'GAME\\'  category\")\nfor i in Genres_set:\n    if 'game' in i.lower():\n        print(\"\\t\", Genres_set.index(i), i)","6484b991":"print(\"Genres of \\'COMMUNICATION\\' category:\")\nfor i in Genres_set:\n    if 'communication' in i.lower():\n        print(\"\\t\", Genres_set.index(i), i)\nprint(\"\\n\\nGenres of \\'TOOLS\\'  category\")\nfor i in Genres_set:\n    if 'tools' in i.lower():\n        print(\"\\t\", Genres_set.index(i), i)","063b1555":"#From the graph:\nselected_set_1 = [8, 28, 30, 32, 54, 57, 64, 68, 80, 82, 83, 88, 94]\nselected_set_2 = [4, 26, 29, 36, 37, 39, 41, 45, 50, 62, 75, 85, 86, 97, 104, 108, 109]\nselected_set_3 = [12, 14, 15, 17, 18, 22, 31, 34, 38, 40, 42, 47, 48, 53, 55, 58, 61, 63, 81, 87, 93, 94, 95, 96, 98]\nselected_set_4 = [11, 27, 33, 35, 65, 66, 73, 76, 77, 78, 101]\n#Set 5 is else so not included\nprint('Set1: Most Downloaded\\n')\nfor i in selected_set_1:\n    print(i, Genres_set[i], sep='\\t')\nprint('\\nSet2: Higher number of Downloads\\n')\nfor i in selected_set_2:\n    print(i, Genres_set[i], sep='\\t')\nprint('\\nSet3: Average number of Downloads pt.1\\n')\nfor i in selected_set_3:\n    print(i, Genres_set[i], sep='\\t')\nprint('\\nSet4: Average number of Downloads pt.2\\n')\nfor i in selected_set_4:\n    print(i, Genres_set[i], sep='\\t')","14144e6f":"Here we can see that LOCAL part is strongly dominated by Google products, but online travel agencies is 'under construction'. So we can try to make such app. But our main goal is to get more installers. For that the app must be neutral, this apps are like neutral, but online travel agencies and shops are part of another market too, so their marketing stretegies can give a huge impact upon Google Play Store by having more installers. Again this is a risk because here, to capture another market, companies invest on this market, so this is constrained by number of large or medium industries. Or it requires a lot of investment for company's market's infrastucture (Physical Outlets for Online Shops).","1aa5d160":"Here we can see that App, Category, Installs, content rating, Genres, Last Updated, Current Ver, Android version and size will be in string format. So let's see the discription of the whole dataset.","7fe8fa67":"**Part 3:** Analysing features more deeply and determining entries that are more acceptable for our final answer which is to determine the entry or entries that attract more users (or that have more downloads).\nHere we have two features to analyze i.e. category and genres.","cd5f2396":"Here we can see that the most popular apps by category are the apps with \"COMMUNICATION\" because the 7th entry shows the installs of apps which are in category \"COMMUNICATION\". So let's check their top market holders. Below is the code to get apps which are in \"COMMNUNICATION\" category and have more than 1 Billion installers.","674d642e":"Our fourth task is to remove paid apps as paid apps are more diverse and create more confusion because of their unique features which are not described in the dataset. Below is the code for selecting the apps which are free. googleplaystore_final list contains the apps that are free.","60af8b63":"Let's check the first ten entries of reviews_max dictionary.","58911c47":"**Conclusion:**\n\nIn this project our task was to determine profitable app profiles for the Google Play Market. Here we've done ananlysis of apps that are availale in the Google Play Store and determined the profitable app profiles. \n* In the part 1, we did preprocessing on the dataset to clean the data as the dataset has some problems which are 1. Invalid entries, 2. Duplicates & nan entries, 3. Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis and 4. Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features).\n* After getting the preprocessed dataset for the analysis(in part 2), we determined the features which are important for analysis which are 'Category' and 'Genres' in the dataset. \n* After getting features which are important for the analysis, we analysed those features more deeply and determined entries that are more acceptable for our final answer which was to determine the entry or entries that attract more users (or that have more downloads). In this part , we devided the process into two parts, part A (for Category) and part B (for Genre).\n    * In part A, we have determined most common apps by category, most popular app by category, analyzed top 17 categories.\n    * In part B, we have determined most common apps by genre, most popular app by genre, analyzed top all the genres by deviding it into five sets according to their popularity.\n* After analyzing 'Category' and 'Genres' features, we determined the final answer which is the app profiles that are more profitable (attract more users) which is as below.\nAns:\nApps which belongs to the category 'BOOKS_AND_REFERENCE' and genre 'Books & Referance' are the apps which are the most profitable to the Google Play Market. In this hierarchy, the second most profitable app profile is category 'HEALTH_AND_FITNESS' and genre 'Health & Fitness', the third most profitable app profile is genres\/category related to PHOTOGRAPHY or PRODUCTIVITY or TOOLS or PERSONALIZATION or GAME or FAMILY.\nIn part 2 we have also discussed about rating, content rating and reviews. In part A of part 3, I've used many times that the app must have uniqueness and people must like their uniqueness in order to have more installers. Combining these two sentences we can also see that uniqueness and people's review can have strong correlation with ratings and reviews. It implies that all of these apps from these categories\/genres must have uniqueness and people must like their uniqueness (interesting features) in order to have more installers.\nAn example can be given as: we create an app which is in category\/genre \"BOOKS_AND_REFERENCE\" that shows us not only books but also takes quizzes and shows quotes. This such app profiles are most profitable for the Google Play Store market.\n\nHope you enjoyed this analysis! Thank you.","37f84dac":"But this division is not the same amongst all the categories. we can see that genres related to game and family category are more than genres related to communication and tools. And their apps division is also inequal. We can see that tools has got maximum apps but tools;education has got a few apps.","8cfc8d73":"Now this is the end of preprocessing and we have got a list of entries which are appropriate for the analysis. Now we need to convert that list into a dataframe for further use.","b9ddafa2":"Ok, Here we have a big question about how a developer can make an app which lies in this category and is able to dominate the market.\nFirstly we can see from the data that all the apps in this category is from a very big companies like Google, Motorola, MX Player etc, and it has only two exceptions which are video editors. So making an app which shows you a movie or a video will have a lot of struggles because their opposition has more power as well as popolarity. But here we can suggest an app maker to make an app which can edit videos which are never existed before and which the people like the most. Again this is possible but a bit harder, so I would put this at the end of my priority list. (We can include it in tools market too.)","e36bb8c9":"We can see that there are a lot of games, and the market for exciting games is too volatile and popular. So making a game may be a good but risky decision. But to play safe move it is not. Because the likelyhood of a game to become popluar may be high, but due to it's volatile nature, it may fall.","e1292292":"**Part 1: Preprocessing on the dataset to clean the data and make it appropriate for further analysis**\n\nIn this part I've done preprocessing on the dataset to clean the data as the dataset has some problems which are mentioned below\n* Invalid entries\n* Duplicates & nan entries\n* Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis.\n* Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features)\nThe below are the steps to clean the dataset.","50c6cf68":"As we can see that TOOLS market is dominated by the apps mantioned above, and from frequency chart, there many apps in TOOLS. Again similar to PHOTOGRAPHY and PERSONALIZATION categories, it requires uniqueness and must be liked by people but in this case it is too difficult because of having a large number.","4ddcc131":"Here, the Social Apps seems to have dominated by Facebook, Instagram, Pinterest. So the situation is similar to what we've seen in COMMUNICATION field. The same constraints are applied here too.","4774f417":"First we need to import libraries and set some parameters that are required for the analysis. Below is the code for that.","23ca9b23":"Let's analyze the 15th most popular category which is PERSONALIZATION.","55bbfa33":"Here the field PHOTOGRAPHY seems to have lesser dominators, lesser competitions. But the important thing is that if you are making an app which lies in this category but cotradicts among other apps by its features, then it may face hard to be installed by users in a large numbers. The previous sentence states that this category requires uniqueness as well as popularity, the app must by unique and the feature must be liked by people hence popular. The similar situation seems to be in PRODUCTIVITY category but it has more competitors than PHOTOGRAPHY as we see from above data.","7e5b23ce":"Let's analyze the sixth most popular app category in Google Play Store. (i.e. GAME)","c1263156":"Let's analyze the 17th most popular category i.e. HEALTH_AND_FITNESS.","a4ac5fe9":"Now our final task is to handle nan data. Let's see the columns header first.","03fedcdb":"Let's take a look at our datasets.","c388d5cc":"**Part 4:** After getting the answers of each features, determine the final answer which is the app profiles that are more profitable (attract more users).\nThe final answer is again from part A and part B, is as below:\n\n(the most profitable app profiles by genres\/category)\n\n1. Books & Reference\n2. Health & Fitness\n3. genres\/category related to PHOTOGRAPHY or PRODUCTIVITY or TOOLS or PERSONALIZATION or GAME or FAMILY","30a978b9":"Loading the dataset: ","5701fb25":"So we've got 10841 apps in googleplastore dataframe and 64295 reviews in the other dataframe. In this project we need only the first dataframe which is googleplaystore dataframe. Let's start our preprocessing.","b6894d88":"These apps are not in english language and tell us that these apps are ment to be for some specific people or communities. These needs to be removed from our dataframe. Below is the function (is_English) to detect whether the give string is in english or not. This function will return false if the string has more than three non english characters (Emojis, characters from languages other than english) and true elsewhere.","e4ed3b70":"Let's analyze TOOLS category which is the ninth most popular category.","6f47e688":"Again this field is less bias towards top marketers and have great potential towards installers. So I must include it in the list of profitable app markets but here is a constraint, whatever the top markets we see in the above list; Hotstar, IMDb, Netflix have their own prodcasts, and have high domination over it. This is similar to the T.V. shows that we see. So any ordinary app may lie on the average user part, but that is too low and to capture this market, we need more investment to make such a unique series or shows that make people install this app, because to make this unique those must be seen in this app only. It requires more investment.","8dd29d9b":"**Conclusion part A:** \n\nFrom the above analysis we can conclude that though communication, social apps have more number of users, it is strongly dominated by some apps which make average go heigher. Our task is to get the app profiles wihch attract more users, so these such categories can not give profit to the Google Play Store. Similarly marketing or organizations or weather forcasting or newspaper and magazines can not be included in the list of profitable app profiles as they are constrained by other parameters (other markets). Books and reference, tutorials and other similar apps have the highest potential to give more installers. Health care and fitness apps have the second highest potential to give more profit to the Google Play Store. And the last choice I would give to photography, productivity, tools, persolnalization, games, family apps which require uniqueness and interesting features (people must like their uniqueness) more than books or health or fitness apps but have more potential to have more installers. So the final answer is as below: (the most profitable app profiles by category)\n\n1. BOOKS_AND_REFERENCE\n2. HEALTH_AND_FITNESS\n3. PHOTOGRAPHY or PRODUCTIVITY or TOOLS or PERSONALIZATION or GAME or FAMILY","456f9f0b":"Let's analyze the 14th most popular category which is FAMILY.","ae764bdd":"**From the give discription we can determine most common apps by category as well as genres.\nMost common apps by category are the apps with \"FAMILY\" category (1676 apps) and most common apps by the genre are the apps with \"Tools\" as genre (749 apps).**","60293516":"Let's analyze the 11th most popular category which is BOOKS_AND_REFERENCE.","9656b76a":"Let's analyze the third most popular app by category in the googleplaystore. (i.e. \"SOCIAL\" category)","2dbe6105":"**Most popular apps by Category:**\n\nFor that we need to plot bargraph between 'Installs' (y) and 'Category' (x). But as we can see that installs are not numeric values. So I've converted it into numberic values e.g. \"1,000,000+\" => 1000000.00 , because it says that the value is greater than 1Million but that can be one less than the next largest one, so for simplicity we are converting it into their respective floats.\nBelow is the code for  ploting category vs average number of installers.","b3d9a663":"Ok, Now look at the apps which are in \"COMMNUNICATION\" category and have more than half a billion installers and 100 million installers.","e46b510b":"**Part 2:**\nPart 2 is to determine the features which are important for analysis because some features like current version, last update might not correlate with the feature like installs except for some exceptional cases. Here from the columns we can see that rating, reviews, content rating, category and genre are the features that are important for analysis. Out of these reviews, content rating and ratings are too obvious, more rated and good reviewed and appropriate content rating app will get more installers. There are a few exceptions for example, we can see in the first five entry that app id two has more rating than app id three. (But reviews are more in app id 3 than app id 2. Some of the app's internal features also matters in counting their effectiveness for getting more users. And from the name it can be justified) So here I've decide 'Category' and 'Genres' features for our analysis. So our profitable app profiles will be consisting categories and genres only.","81dd7dd1":"First let's make a frequency table.","251416cf":"For simplicity I've devided the genres into five sets.\n\n* Set1: The most popular genres\n* Set2: Highly popular genres\n* Set3: Genres having average number of downloads pt.1\n* Set4: Genres having average number of downloads pt.2\n* Set5: Else part (Negligible downloads)","6ba82300":"let's see the discription of the columns that are numbers or floats.","ab547383":"Ok, from the above data and the graph we can conclude that this category is strongly dominated by these top holders. So now if we add a new app in this field, we may not get more users or end up having more competition with the opponents. I would suggest the developers not to make such app because now if they want to make such app that make more money, they would have to work very hard and would need to get deeper into the concepts of communication to the get market dominating app with more users. Of course this will require more time and money.","4c9b40e6":"Here 'Instagram' has got four duplicate entries, not completely duplictes but number of reviews are different except for the name. Those entries might be taken in different time periods but here we don't need all of them. So we need to decide which entry should be taken for analysis and removing others. From the example of the app 'Instagram' we can see that number of reviews may change in each and every duplicate. As more reviews implies more accuracy (excluding exceptional cases), I've selected the most reviewed entry. Below is the code to determine app with maximum reviewed entry which is a dictionary named as reviws_max (app name - highest number of reviews -> key-value pair).","829fc90e":"Let's analyze the eightth most popular category in Google Play Store i.e. ENTERTAINMENT.","abf61991":"Here we can see that this entry is invalid and can cause many errors in analysis, we don't need this entry so I am droping it out.","ef651cb6":"Now, let's see the second most popular category which is \"VIDEO_PLAYERS\" (23rd entry in graph). Let's see the most popular apps in this category which has 1 billion, 0.5 billion, 100 million downloaders.","7e158d23":"**Most popular apps by genre:**\n\nFor that we need to plot bargraph between 'Installs' (y) and 'Genres' (x). But as we can see that installs are not numeric values. So I've converted it into numberic values e.g. \"1,000,000+\" => 1000000.00 , because it says that the value is greater than 1Million but that can be one less than the next largest one, so for simplicity we are converting it into their respective floats.\nBelow is the code for  ploting genres vs average number of installers.","c5ab8872":"Our second task is to find duplicates in the dataframe. First let's check how many duplicates of 'Instagram' exists.","497144bf":"This category has same contstraints as ENTERTAINMENT. But this field has more dominators and the average is too low, means this field is also strongly dominated by the apps mantioned above.","ddf85882":"In games there more than what we see above, eg. 'Action; Action & Adventure', 'Action', 'Trivia', 'Board', 'Arcade', 'Sports', 'Casual', 'Puzzle' etc. And some genres of FAMILY category is also merged here.","016b58ce":"**Profitable App Profiles for the Google Play Market**\n\nBelow is an advanced analysis of apps that are availale in the Google Play Store and determined the profitable app profiles. Here I've used googleplaystore dataset available in kaggle ([click here](http:\/\/www.kaggle.com\/lava18\/google-play-store-apps)). The profitable app profile is determined by the features and attributes (category, genre, etc.) that attract more users to download or buy such app. The prime goal of an app to be in the Google Play Store is to have more users. I have determined why such app could attracts more users, what are the categories that attract people the most, what genres give more profit to the Google Play Store by attracting more users (or installers).\n\n**Over View**\n1. In the begining I've done preprocessing on the dataset to clean the data as the dataset has some problems which are mentioned below\n    * Invalid entries\n    * Duplicates & nan entries\n    * Apps that target local people or specific communities or have language other than English are invalid and can cause more confusion in analysis.\n    * Paid apps (We need only free apps because paid apps are more diverse and create more confusion because of the unique features)\n2. After getting the cleaned dataset for the analysis, I've determined the features which are important for analysis because some features like current version, last update might not correlate with the feature like installs except for some exceptional cases.  (Category & Genres)\n3. After getting features that are important for the analysis, analysing those features more deeply and determining entries that are more acceptable for our final answer which is to determine the entry or entries that attract more users (or that have more downloads).\n4. After getting the answers of each features, I've determined the final answer which is the app profiles that are more profitable (attract more users).","eaf6767f":"This field seems to have the highest potential to be the most profitable profile because only one app with 1B, none with 500M, and only 4 with 100M installers. It has less competiton, the number of competitors is less. Can be made unique by adding simple features, which is easy. Uniqueness and interesting features (people must like their uniqueness) can be made easily. But showing books wont give more installers (excluding exceptions like kindle) because there are many apps that have world's highest number of books available online. But again to make it unique and people frieldly, we need to add some more features like adding quizzes, quotes, etc. ","85300fa2":"**Most common apps by genre:**\n\nFrom the description of 'Genres' column we can see that the most common apps by Category is \"Tools\", below is the code for ploting genre and the number of apps belong to that genre.","de68566b":"We've got a new list of apps (named googleplaystore_clean) after removing duplicates, lets check its size.","46b57ecd":"**Conclusion part B:**\n\nSimilar trend to the part 1 analisis can be seen here. We can see the set 1 genres in our top 5 categories, and others too. But in all of these, we see a variety of genres related to GAMES and FAMILY in all the four sets. But as we've discussed in the previous part that apps that belongs to set 1 is highly dominated by a fewer apps which increase the average. And due to similar trend. So here the conclusion is the same as part A which is as below: (the most profitable app profiles by genres)\n\n1. Books & Reference\n2. Health & Fitness\n3. genres related to PHOTOGRAPHY or PRODUCTIVITY or TOOLS or PERSONALIZATION or GAME or FAMILY\n","c7058a0a":"In this field, we need to rely on the whether forcasting agencies, but they already have their application. We can not give more uniqueness as we can in BOOKS_AND_REFERENCE field. Here the number is constrained by the whether forcasting agencies and in today's time every one's smart phone has this type of apps. So this category seems to be saturated and can not have more growth so we can exclude this.","2b2a7fb9":"Our third task is to remove apps that target local people or specific communities or have language other than English. Because they can cause more confusion in the analysis. This task can easily be done if we remove apps that are in languages other than English because most of the apps that target specific community have the name in the local language. Below are the examples of such apps","0d67d04e":"Let's analyze the seventh most popular category i.e. TRAVEL_AND_LOCAL.","3d82def1":"From the above data we can see that the above field (MAPS) is dominated by Google Maps and Waze app. The same situation like in TRAVEL_AND_LOCAL. ","ef195cf7":"Below is the code for finding what entries which are in 'Installs' column and 'Category' column","4fe9a515":"Let's analyze the family PHOTOGRAPHY which is the fourth most popular family in the list. Here competiton is less as we can see (There less apps with 1B or 100M and there is no app with 500M installers).\nAlso analyze the family PRODUCTIVITY which is the fifth most popular family in the list. Same as before, here cometition is less too(There is no app with 1B installers and fewer apps with 100M, 500M installers).","9cb00d3f":"**Most common apps by Category:**\n\nFrom the description of 'Category' column we can see that the most common apps by Category is \"FAMILY\", below is the code for ploting category and the number of apps belong to that category.","9db78672":"After converting it into a dataframe, we don't need 'Price' column so I am droping it. Here, reviews columns datatype is object instead of int so converting it into ","9e67b077":"This has similar situation as the category GAME has, but there are more apps in Google Play Store with FAMILY category and average number of insatllers is lesser. So the situation may be worse th the GAME category.","1b36d65c":"First let's make a frequency table","c701147e":"Let's analyze the 16th most popular category which is MAPS_AND_NAVIGATION.","f5d181d9":"PERSONALIZATION apps has less competitons and less number of dominaters but have less number of installers (Average), so making such app can be considered as safe move. But it has the similar situation as PHOTOGRAPHY, TOOLS, PRODUCTIVITY. It requires uniqueness and people must like their uniqueness (interesting features).","387c4fe6":"This category has the same constraints as TRAVEL_AND_LOCAL. But have less compition, but in order to attract more installers, we need to rely on the marketing strategies which is a risk.","e05d486e":"As we can see a similar pattern as we have analyzed in category. But here number of genres are more than the number of categories because some categories are devide into multipla genres, below is an example of 'FITNESS' (HEALTH_AND_FITNESS) and 'GAME' category.","e940ac85":"Let's analyze the 12th most popular category i.e. SHOPPING","9d9b9f00":"Here there is only one app with 100M installers. So less competition, but it requires uniqueness and people must like their uniqueness (interesting features) as in BOOKS_AND_REFERANCES and lesser average number of installers. \nSo we have analized top 17 categories.","2daa7c0b":"For handling nan values we need to explore the dataset and it is done in later part.","3afdd868":"**Part A:** Analysis of Categories (Effect of Categories on Installers)","844ec066":"Our first task is to remove invalid entries from the dataframe. I've seen in many discussions that there is an entry at index 10472 which is invalid, so let's check it out.","51d2e425":"Now let's clean the dataset by creating a new list of most reviewed entries of an app. Here some complete duplicates with the same reviews may exist, so we need to keep track of which apps we've already added, now if a duplicate comes then we can ignore (or exclude) that. Below is the code for removing duplicates using reviews_max dictionary and storing it in googlplaystore_clean list.","df1b2aba":"**Part B:** Analysis of Genres (Effect of Genres on Installers)","54dd5deb":"Using the function above, I've created a new list of apps that are in english language. If the name passed to the is_English return true then we include it in the list.","4d085124":"Here googleplaystore_english list is the list of all the apps that are in english language.","3c3b7604":"let's see the discription of the columns that are objects (strings).","d380162a":"Let's check how may duplicates we've got.","61ffc651":"Let's analyze the tenth most popular category i.e. NEWS_AND_MAGAZINES","1b509e7f":"Let's analyze the 13th most popular category in the Google Play Store which is WEATHER."}}