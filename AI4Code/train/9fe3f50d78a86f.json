{"cell_type":{"eee6abe8":"code","5328c083":"code","cb753e9e":"code","6ac38731":"code","47ebca9f":"code","8416c005":"code","d1d3e886":"code","e7afc33b":"code","fac79ee5":"code","48adbafb":"code","c1414ccb":"code","99baa01d":"code","66359dcb":"code","5f499617":"code","4207d383":"markdown","917e4aea":"markdown","b9314642":"markdown","60195a53":"markdown","284e933b":"markdown"},"source":{"eee6abe8":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import model_selection\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_report\nimport pandas as pd\nimport seaborn as sns","5328c083":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cb753e9e":"df = pd.read_csv('\/kaggle\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\r\ndf.sample(10)\r\n","6ac38731":"print(df['quality'].unique())","47ebca9f":"def reviews(row):\r\n    if row.quality > 6.5:\r\n        return 1\r\n    else: \r\n        return 0\r\ndf['reviews'] = df.apply(reviews, axis=1)\r\ndf['reviews'].value_counts()","8416c005":"ax = sns.countplot(data=df, x='reviews')\r\nax.set(xticklabels=['Good','Bad'], title=\"Reviews Distribution\")\r\nax.tick_params(bottom=False)","d1d3e886":"df.columns","e7afc33b":"for column in df:\r\n    plt.figure()\r\n    df.boxplot([column])","fac79ee5":"## Model","48adbafb":"X = df.drop(['quality', 'reviews'], axis=1)\r\ny = df.reviews","c1414ccb":"X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=1\/3)\r\nneigh = KNeighborsClassifier()\r\nneigh.fit(X_train, y_train)\r\ny_pred = neigh.predict(X_test)","99baa01d":"accuracy_score = accuracy_score(y_test, y_pred)\r\nprint(\"accuracy score: {}\".format(accuracy_score))","66359dcb":"confusion_matrix(y_test, y_pred)","5f499617":"print(classification_report(y_test, y_pred))","4207d383":"**Hi. I am studying computer science. This is my first post on data analytics! Surely the article is flawed! Please read and comment below. I sincerely thank you**","917e4aea":"**Holdout Method**\n<p>Traditionally, 2\/3 of the dataset is used for training, 1\/3 for testing.<\/p>\n","b9314642":"We can see in the quality column there are 6 labels representing the quality of the red wine, in the data it is mentioned that quality above 6.5 is good and below 6.5 is bad from here we can add 1 column and store good or bad quality","60195a53":"Almost all features have outliers. but the data set is quite small, so I will evaluate the case without removing the outlier","284e933b":"**Detect outliers**"}}