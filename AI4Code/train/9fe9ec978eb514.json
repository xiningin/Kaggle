{"cell_type":{"63635d61":"code","0226f069":"code","964dfc49":"code","a0de9c18":"code","28486c86":"code","fbf598f4":"code","9c338dca":"code","bfaafcf2":"code","0334eaf2":"code","d2c81728":"code","5ec54be4":"code","334e4a9f":"code","40b029be":"markdown","9decae5a":"markdown","595f1db3":"markdown","81f4c564":"markdown","e685b1d9":"markdown"},"source":{"63635d61":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\n\nfrom sklearn.model_selection import train_test_split\n# from sklearn.svm import SVC\nfrom sklearn.svm import LinearSVC","0226f069":"train = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","964dfc49":"drop_elements = ['PassengerId', 'Name', 'Ticket', 'Cabin', 'SibSp','Parch']\ntrain = train.drop(drop_elements, axis = 1)","a0de9c18":"train.head()","28486c86":"train.columns","fbf598f4":"def getColumnsExceptOneColumn(df,col):\n    return train.loc[:, train.columns != col].columns.tolist()","9c338dca":"target_col = \"Survived\"\ny = train[target_col]\n\nfeatures = getColumnsExceptOneColumn(train,target_col)\n\n\nX = train[features]\nX_test = test[features]","bfaafcf2":"str_list = [] # empty list to contain columns with strings\nnum_list = []\nfor colname, colvalue in X.iteritems():\n    if type(colvalue[1]) == str:\n        str_list.append(colname)\n    else:\n        num_list.append(colname)","0334eaf2":"str_list","d2c81728":"num_list","5ec54be4":"from sklearn.preprocessing import PolynomialFeatures","334e4a9f":"numeric_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='median')),\n    (\"poly_features\", PolynomialFeatures(degree=3)),\n    ('scaler', StandardScaler())])\n\ncategorical_transformer = Pipeline(steps=[\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, num_list),\n        ('cat', categorical_transformer, str_list)])\nclf = Pipeline(steps=[('preprocessor', preprocessor),  (\"svm_clf\", LinearSVC(C=10, loss=\"hinge\", random_state=42))])\nclf.fit(X, y)\n\npredictions = clf.predict(X_test)\n\nsubmission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsubmission['Survived'] = predictions\nsubmission.to_csv('submission_titanic.csv', index=False)","40b029be":"# Delete Columns","9decae5a":"# Devide Column ","595f1db3":"# Load Data","81f4c564":"# Set Train data and target \/ Set Test data","e685b1d9":"# SVC Pipeline Modeling ,Predict and Submit"}}