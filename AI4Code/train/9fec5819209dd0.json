{"cell_type":{"90b617a5":"code","7aa48fb2":"code","d8e89a5f":"code","e1da1c36":"code","919c4ccb":"code","04f823c6":"code","f7029ac8":"code","b9ea4091":"code","f590531e":"code","49fc9865":"code","992a16a6":"code","9efe2c78":"code","bc83c9e1":"code","201f8c89":"code","b5b7004b":"code","120098a5":"code","5f618a9e":"code","5e495f51":"code","d5abe877":"code","f1b9c299":"code","6f99096d":"code","1ffaa1cf":"code","6a6cd75a":"code","406b5ad5":"code","f52dd9d8":"markdown","770ac6df":"markdown","9db3b945":"markdown","eb0a4d26":"markdown","b4ef6798":"markdown","34d3b959":"markdown"},"source":{"90b617a5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\n\nimport seaborn as sns\n\n# word cloud library\n\n\n# matplotlib\nimport matplotlib.pyplot as plt\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","7aa48fb2":"heart_df=pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")","d8e89a5f":"heart_df.head(10)","e1da1c36":"heart_df.info()","919c4ccb":"f,ax = plt.subplots(figsize=(10, 10))\nsns.heatmap(heart_df.corr(), annot=True, linewidths=0.5,linecolor=\"red\", fmt= '.1f',ax=ax)\nplt.show()","04f823c6":"g = sns.catplot(x = \"exang\", y = \"age\", data = heart_df, kind = \"bar\")\ng.set_ylabels(\"Age\")\ng.set_xlabels(\"Exang(exercise induced angina)\")\nplt.show()","f7029ac8":"# Creating trace1\ndata = go.Scatter(\n                    x = heart_df.age,\n                    y = heart_df.thalach,\n                    mode = \"markers\",\n                    name = \"Max Heart Rate\",\n                    marker = dict(color = 'rgba(16, 112, 2, 0.8)'),\n                    text= heart_df.target)\n\nlayout = dict(title = 'Max Heart Rate vs Age',\n              xaxis= dict(title= 'Age',ticklen= 5,zeroline= False)\n             )\nfig = dict(data = data, layout = layout)\niplot(fig)","b9ea4091":"g = sns.FacetGrid(heart_df, col = \"fbs\", row = \"target\", height = 2)\ng.map(plt.hist, \"age\", bins = 25)\ng.add_legend()\nplt.show()","f590531e":"heart_df.sex.replace([1],[\"male\"],inplace = True)\nheart_df.sex.replace([0],[\"female\"],inplace = True)\nsns.swarmplot(x=\"sex\", y=\"chol\",hue=\"target\", data=heart_df)\nplt.show()","49fc9865":"g=sns.factorplot(x=\"cp\", y=\"exang\",data=heart_df, kind = \"bar\", height = 6)\nplt.show()","992a16a6":"g = sns.jointplot(heart_df.age, heart_df.trestbps, kind=\"kde\", height=7)\nplt.savefig('graph.png')\nplt.show()","9efe2c78":"g=sns.factorplot(x=\"exang\", y=\"target\",data=heart_df, kind = \"bar\", height = 6)\nplt.show()","bc83c9e1":"g = sns.FacetGrid(heart_df, col = \"cp\", row = \"exang\", size = 2)\ng.map(sns.barplot,\"target\")\nplt.show()","201f8c89":"g = sns.jointplot(heart_df.oldpeak, heart_df.slope, kind=\"kde\", height=7)\nplt.savefig('graph.png')\nplt.show()","b5b7004b":"g = sns.FacetGrid(heart_df, col = \"slope\", row = \"target\", size = 2)\ng.map(sns.barplot,\"oldpeak\")\nplt.show()","120098a5":"g = sns.catplot(x = \"target\", y = \"oldpeak\", data = heart_df, kind = \"bar\")\ng.set_ylabels(\"oldpeak\")\nplt.show()","5f618a9e":"g = sns.FacetGrid(heart_df, col = \"ca\", row = \"target\", size = 2)\ng.map(sns.barplot,\"age\")\nplt.show()","5e495f51":"g = sns.catplot(x = \"target\", y = \"thalach\", data = heart_df, kind = \"bar\")\ng.set_ylabels(\"thalach\")\nplt.show()","d5abe877":"for i in heart_df.target:\n    if i == 1:\n        heart1_index = list((heart_df[heart_df[\"target\"]==i]).index)\n    else:\n        heart0_index = list((heart_df[heart_df[\"target\"]==i]).index)\nheart1_df = heart_df.iloc[heart1_index,:]\nheart0_df = heart_df.iloc[heart0_index,:]\n\n","f1b9c299":"trace1 =go.Scatter(\n                    x = heart0_df.thalach,\n                    y = heart0_df.chol,\n                    mode = \"markers\",\n                    name=\"Target = 0\",\n                    marker = dict(color = 'rgba(255, 128, 255, 0.8)'),\n                    text= heart_df.age)\ntrace2 =go.Scatter(\n                    x = heart1_df.thalach,\n                    y = heart1_df.chol,\n                    mode = \"markers\",\n                    name=\"Target=1\",\n                    marker = dict(color = 'rgba(255, 1, 10, 255.8)'),\n                    text= heart_df.age)\n\nlayout = dict(title = 'Chol vs Thalac'\n              \n             )\ndata=[trace1,trace2]\nfig = dict(data = data, layout = layout)\niplot(fig)","6f99096d":"x = heart_df[\"oldpeak\"].values.reshape(-1,1)\ny = heart_df[\"thalach\"].values.reshape(-1,1)\n\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\n\nlr.fit(x,y)\n\nplt.scatter(x,y,color=\"red\")\n\ny_head=lr.predict(x)\nplt.plot(x,y_head,color=\"green\")\n\nplt.show()\n\nfrom sklearn.metrics import r2_score\n\nprint(\"R score =\",r2_score(y,y_head))","1ffaa1cf":"from sklearn.preprocessing import PolynomialFeatures\npf = PolynomialFeatures(degree=14)\n\nx_poly = pf.fit_transform(x)\n\nlr2 = LinearRegression()\n\nlr2.fit(x_poly,y)\n\ny_head2 = lr2.predict(x_poly)\n\nplt.scatter(x,y,color=\"red\")\n\nplt.plot(x,y_head2,color=\"green\")\n\nplt.show()\n\nfrom sklearn.metrics import r2_score\n\nprint(\"R score =\",r2_score(y,y_head2))","6a6cd75a":"from sklearn.tree import DecisionTreeRegressor\ndt = DecisionTreeRegressor()\n\ndt.fit(x,y)\nx_new = np.arange(min(x),max(x),0.01).reshape(-1,1)\ny_head3_ = dt.predict(x_new)\n\nplt.scatter(x,y,color=\"red\")\n\nplt.plot(x_new,y_head3_,color=\"green\")\n\nplt.show()\n\nfrom sklearn.metrics import r2_score\ny_head3 = dt.predict(x)\nprint(\"R score =\",r2_score(y,y_head3))","406b5ad5":"from sklearn.ensemble import RandomForestRegressor\n\nrfg = RandomForestRegressor(n_estimators=100,random_state=42)\n\nrfg.fit(x,y)\n\nx_new = np.arange(min(x),max(x),0.01).reshape(-1,1)\ny_head4_ = rfg.predict(x_new)\n\nplt.scatter(x,y,color=\"red\")\n\nplt.plot(x_new,y_head4_,color=\"green\")\n\nplt.show()\n\nfrom sklearn.metrics import r2_score\ny_head4 = rfg.predict(x)\nprint(\"R score =\",r2_score(y,y_head4))\n","f52dd9d8":"<a id=\"2\"><\/a><br>\n# Correlation of Data","770ac6df":"<a id=\"1\"><\/a><br>\n# Looking Data ","9db3b945":"<a id=\"4\"><\/a><br>\n# Regression Models for Oldpeak and Thalach","eb0a4d26":"* trestbps = resting blood pressure (in mm Hg on admission to the hospital)","b4ef6798":"1. [Looking Data](#1)\n2. [Correlation of Data](#2)\n3. [Visualization of Data](#3)\n4. [Regression Models for Oldpeak and Thalach](#4)","34d3b959":"<a id=\"3\"><\/a><br>\n# Visualization of Data"}}