{"cell_type":{"5ad1ee9d":"code","a2678eb9":"code","fb4b4f7b":"code","138cadf2":"code","da182b9e":"code","a12fe4b8":"code","fd490768":"code","450e4fef":"code","70487d0d":"code","acc67fc7":"code","fda46155":"code","222ef5ce":"code","7af2c302":"code","4f269cb9":"code","c92c7ac4":"code","91632595":"code","a2e81d7e":"code","2e0910e2":"code","8393b376":"code","c598843e":"code","2df68e0a":"code","3eb8b78f":"code","c1458c18":"code","9668c53d":"code","e4bc4d62":"code","b1ac8410":"code","4af9670f":"code","72b71f23":"markdown","fd465e0a":"markdown","07e488d7":"markdown","608587f9":"markdown","095c1925":"markdown","d6ab189b":"markdown","59a4205e":"markdown","0b03e487":"markdown","14160b61":"markdown","922e2f28":"markdown"},"source":{"5ad1ee9d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a2678eb9":"import seaborn as sns\nimport matplotlib as mat\nimport matplotlib.pyplot as plt\n%matplotlib inline","fb4b4f7b":"#Abrindo o dataset\nfile_name='\/kaggle\/input\/housesalesprediction\/kc_house_data.csv'\ndf=pd.read_csv(file_name)\ndf.head()","138cadf2":"df.columns","da182b9e":"print(df.shape[0]) #N\u00famero de linhas\nprint(df.shape[1]) #N\u00famero de colunas","a12fe4b8":"df.info()","fd490768":"#Descri\u00e7\u00e3o do dataset\ndf.describe()","450e4fef":"df.dtypes","70487d0d":"#Valores NaN\ndf.isnull().sum()","acc67fc7":"med_bed = df['bedrooms'].mean()\nmed_bath = df['bathrooms'].mean()\n\n#Arredondando valores\nimport math\nmed_bed = math.floor(med_bed)\nmed_bath = math.floor(med_bath)\n\nprint(med_bed)\nprint(med_bath)","fda46155":"df['bedrooms'].fillna(med_bed, inplace=True)\ndf['bathrooms'].fillna(med_bath, inplace=True)\n\n\n#Agora n\u00e3o h\u00e1 nenhum valor nulo no dataset\ndf.isnull().sum()","222ef5ce":"#N\u00e3o h\u00e1 valores duplicados no dataset\ndf.duplicated().sum()","7af2c302":"#Analisando os outliers. \u00c9 poss\u00edvel ver que n\u00e3o existe nenhum valor absurdo que possa comprometer a an\u00e1lise do dataset \nplt.figure(figsize=(12,6))\ndf.boxplot()\nplt.xticks(rotation = 90);","4f269cb9":"plt.figure(figsize=(25,12))\ndf_corr = df.corr()\nsns.heatmap(df_corr, annot = True)\nprint()","c92c7ac4":"#Salvando o dataset\ndf.to_csv('kc_house.csv')","91632595":"from datetime import datetime\nnow = datetime.now()\nyear = now.year\nyear","a2e81d7e":"df['yr_dif'] = year - df['yr_renovated']\nhx1 = df[['yr_dif','grade']]\nhx1","2e0910e2":"hx1 = hx1[hx1['yr_dif']!= 2020]\nplt.figure(figsize=(18,12))\nplt.title('M\u00e9dia de nota por reforma', fontsize=33)\nplt.ylabel('',fontsize=22)\nplt.xlabel('',fontsize=22)\nsns.barplot(x='yr_dif', y='grade',data=hx1)\nplt.xticks(rotation = 90);","8393b376":"#Eliminei toda a bagun\u00e7a que estava na coluna date e peguei apenas os dados que me interessavam: m\u00eas e ano.\ndf['date']=[x[:6] for x in df['date']]\ndf.head()","c598843e":"plt.figure(figsize=(15,12))\nplt.title('M\u00e9dia de pre\u00e7o em 1 ano', fontsize=33)\nplt.ylabel('',fontsize=22)\nplt.xlabel('',fontsize=22)\nh02 = df[['date','price']].groupby('date').mean().reset_index()\nh02['growth_price'] = 100*h02['price'].pct_change()\nsns.barplot(x='date', y='growth_price',data=h02)\nplt.xticks(rotation = 45);","2df68e0a":"h02['growth_price']","3eb8b78f":"#H\u00e1 uma casa com 33 quartos. Poder ser um outlier e por isso, foi retirado.\ndf=df[df['bedrooms']!=33]\nh03 = df[['bedrooms','price']].groupby('bedrooms').mean().reset_index()","c1458c18":"plt.figure(figsize=(15,10))\nplt.title('M\u00e9dia de pre\u00e7o por n\u00famero de quartos', fontsize=33)\nplt.ylabel('',fontsize=22)\nplt.xlabel('',fontsize=22)\nsns.barplot(x='bedrooms', y='price',data=h03);","9668c53d":"plt.figure(figsize=(15,8))\nplt.title('M\u00e9dia de pre\u00e7o por avalia\u00e7\u00e3o', fontsize=33)\nplt.ylabel('',fontsize=22)\nplt.xlabel('',fontsize=22)\nh04 = df[['grade', 'price']].groupby('grade').mean().reset_index()\nh04['growth'] = 100*h04['price'].pct_change()\nsns.barplot(x='grade', y='growth',data=h04);","e4bc4d62":"print(h04)","b1ac8410":"plt.figure(figsize=(17,12))\nplt.title('M\u00e9dia de avalia\u00e7\u00e3o por regi\u00e3o', fontsize=33)\nh05 = df[['zipcode', 'grade']].groupby('zipcode').mean().reset_index() #Criando a tabela\nplot_order = h05.sort_values(by='grade', ascending=False).zipcode      #Ordenando a tabela\nsns.barplot(x='zipcode', y='grade',data=h05, order=plot_order)         #Plotando a tabela\nplt.ylabel('',fontsize=22)\nplt.xlabel('',fontsize=22)\nplt.xticks(rotation = 90);","4af9670f":"h05.sort_values(by=['grade'],ascending=False).head()","72b71f23":"# Limpando os dados","fd465e0a":"# H01 - As casas que passaram por renova\u00e7\u00e3o recentemente possuem as melhores notas?\n\n* Falso. Casas que passaram por reformas mais antigas t\u00eam boas notas, assim como as que passaram por reformas recentemente.","07e488d7":"# H05 - As casas mais bem avaliadas est\u00e3o na orla da cidade ?\n\n* Verdadeiro. A regi\u00e3o com o zipcode 98039, no distrito de Medina, na ba\u00eda de Seattle, possui uma avalia\u00e7\u00e3o m\u00e9dia de 9.56 de 11 e fica \u00e0 beira do Lago Washington.\n\n","608587f9":"# H04 - As casas mais bem avaliadas, s\u00e3o em geral, 20% mais caras do que as menos bem avaliadas?\n\n* Falso. Casas com avalia\u00e7\u00e3o 3 s\u00e3o mais caras do que casas com avalia\u00e7\u00e3o 4, assim como casas com avalia\u00e7\u00e3o 9 s\u00e3o mais caras que casa com avalia\u00e7\u00e3o 10.","095c1925":"# Hip\u00f3teses\n\n* 1 - As casas que passaram por renova\u00e7\u00e3o recentemente possuem as melhores notas?\n* 2 - O pre\u00e7o m\u00e9dio das casas subiu 2% ao m\u00eas em 1 ano?\n* 3 - O n\u00famero de quartos influencia no pre\u00e7o m\u00e9dio das casas?\n* 4 - As casas mais bem avaliadas, s\u00e3o em geral, 20% mais caras do que as menos bem avaliadas?\n* 5 - As casas mais bem avaliadas est\u00e3o na orla da cidade?","d6ab189b":"# H02 - O pre\u00e7o m\u00e9dio das casas subiu 2% ao m\u00eas em 1 ano?\n\n* Falso. O pre\u00e7o m\u00e9dio das casas variou de m\u00eas para m\u00eas no per\u00edodo de 1 ano","59a4205e":"# H03 - O n\u00famero de quartos influencia no pre\u00e7o m\u00e9dio das casas?\n\n* Falso. H\u00e1 casas com 11 quartos que s\u00e3o mais baratas do que casas com 4 quartos, por exemplo.","0b03e487":"#### Substituindo valores nulos das colunas bedrooms e bathrooms pela m\u00e9dia de cada coluna","14160b61":"* id :- It is the unique numeric number assigned to each house being sold.\n* date :- It is the date on which the house was sold out.\n* price:- It is the price of house which we have to predict so this is our target variable and aprat from it are our features.\n* bedrooms :- It determines number of bedrooms in a house.\n* bathrooms :- It determines number of bathrooms in a bedroom of a house.\n* sqft_living :- It is the measurement variable which determines the measurement of house in square foot.\n* sqft_lot : It is also the measurement variable which determines square foot of the lot.\n* floors: It determines total floors means levels of house.\n* waterfront : This feature determines whether a house has a view to waterfront 0 means no 1 means yes.\n* view : This feature determines whether a house has been viewed or not 0 means no 1 means yes.\n* condition : It determines the overall condition of a house on a scale of 1 to 5.\n* grade : It determines the overall grade given to the housing unit, based on King County grading system on a scale of 1 to 11\n* sqft_above : It determines square footage of house apart from basement.\n* sqft_basement : It determines square footage of the basement of the house.\n* yr_built : It detrmines the date of building of the house.\n* yr_renovated : It detrmines year of renovation of house.\n* zipcode : It determines the zipcode of the location of the house.\n* lat : It determines the latitude of the location of the house.\n* long : It determines the longitude of the location of the house.\n* sqft_living15 : Living room area in 2015(implies-- some renovations)\n* sqft_lot15 : lotSize area in 2015(implies-- some renovations)","922e2f28":"# Analisando os dados"}}