{"cell_type":{"a0d9942d":"code","9ca0f31f":"code","f0c49b51":"code","fcc28d8c":"code","0364d34a":"code","522d37d5":"code","ba083208":"code","e8ecff7c":"code","dc8c4561":"code","2fe81724":"code","80741c08":"code","fac55fd1":"code","73b68d1a":"code","72dfe32e":"code","29fb553f":"code","8b9656a5":"code","1583c1c0":"code","b8362318":"code","fc476649":"code","31b56cfa":"code","26288889":"code","8c03abf7":"code","834aa153":"code","fafeffd1":"code","5f0e94fc":"code","0eddc563":"code","1b95214a":"code","243f7113":"code","a15d7b25":"code","81f07108":"code","0896eda7":"code","0a04ad9b":"code","f87c71b6":"code","498ca022":"code","de9b369c":"code","dafb70cf":"code","6b219d11":"code","dcf53625":"code","c4e922fe":"code","872cbe3f":"code","047378d3":"code","7ba5a137":"code","0d90e31d":"code","8fd550d7":"code","7bb1c997":"markdown","2bcc6e09":"markdown"},"source":{"a0d9942d":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","9ca0f31f":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")","f0c49b51":"test=pd.read_csv('..\/input\/titanic\/test.csv')","fcc28d8c":"corr=train.corr()\ntop_co=corr.index\nplt.figure(figsize=(20,20))\ng=sns.heatmap(train[top_co].corr(),annot=True,cmap=\"RdYlGn\")","0364d34a":"sns.heatmap(train.isnull(),yticklabels=False,cbar=False,cmap='viridis')","522d37d5":"train['Age']=train['Age'].median()","ba083208":"train.drop(['PassengerId', 'Ticket'], axis=1, inplace=True)\ntest.drop(['PassengerId', 'Ticket'], axis=1, inplace=True)","e8ecff7c":"train.isna().sum()","dc8c4561":"train['Embarked'].mode()","2fe81724":"test.isna().sum()","80741c08":"test['Age']=test['Age'].median()","fac55fd1":"train.drop(['Cabin'], axis=1, inplace=True)\ntest.drop(['Cabin'], axis=1, inplace=True)","73b68d1a":"# Get Title from Name for train\ntrain_title = [i.split(\",\")[1].split(\".\")[0].strip() for i in train[\"Name\"]]\ntrain[\"Title\"] = pd.Series(train_title)\ntrain[\"Title\"].head()","72dfe32e":"g = sns.countplot(x=\"Title\",data=train)\ng = plt.setp(g.get_xticklabels(), rotation=45) ","29fb553f":"#Convert to categorical values Title \ntrain[\"Title\"] = train[\"Title\"].replace(['Lady', 'the Countess','Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\ntrain[\"Title\"] = train[\"Title\"].map({\"Master\":0, \"Miss\":1, \"Ms\" : 1 , \"Mme\":1, \"Mlle\":1, \"Mrs\":1, \"Mr\":2, \"Rare\":3})\ntrain[\"Title\"] = train[\"Title\"].astype(int)\n\n","8b9656a5":"# Get Title from Name for train\ntest_title = [i.split(\",\")[1].split(\".\")[0].strip() for i in test[\"Name\"]]\ntest[\"Title\"] = pd.Series(test_title)\ntest[\"Title\"].head()","1583c1c0":"g = sns.countplot(x=\"Title\",data=test)\ng = plt.setp(g.get_xticklabels(), rotation=45) ","b8362318":"#Convert to categorical values Title \ntest[\"Title\"] = test[\"Title\"].replace(['Col', 'Dr', 'Rev', 'Dona'], 'Rare')\ntest[\"Title\"] = test[\"Title\"].map({\"Master\":0, \"Miss\":1, \"Ms\" : 1  ,\"Mrs\":1, \"Mr\":2, \"Rare\":3})\ntest[\"Title\"] = test[\"Title\"].astype(int)","fc476649":"train.isna().sum()","31b56cfa":"test.isna().sum()","26288889":"train['Embarked'].fillna('S',inplace=True)","8c03abf7":"test.Fare = test['Fare'].fillna(train['Fare'].median())","834aa153":"train=train.drop('Name',axis=1)","fafeffd1":"test=test.drop('Name',axis=1)","5f0e94fc":"train['FamilySize'] = train['Parch'] + train['SibSp'] + 1 ","0eddc563":"test['FamilySize'] = test['Parch'] + test['SibSp'] + 1 ","1b95214a":"# drop the variable 'SibSp' as we have already created a similar variable FamilySize\ntrain = train.drop(['SibSp'], axis = 1)\ntest  = test.drop(['SibSp'], axis = 1)","243f7113":"train.head()","a15d7b25":"test.head()","81f07108":"train['Sex']=train[\"Sex\"].replace({'male':0,'female':1})\ntest['Sex']=test[\"Sex\"].replace({'male':0,'female':1})","0896eda7":"train['Embarked']=train[\"Embarked\"].replace({'C':0,'S':1,'Q':3})","0a04ad9b":"test['Embarked']=test[\"Embarked\"].replace({'C':0,'S':1,'Q':3})","f87c71b6":"# seperate the feature set and the target set\nY_train = train[\"Survived\"]\nX_train = train.drop(labels = [\"Survived\"],axis = 1)\nX_test = test","498ca022":"from sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score","de9b369c":"model = RandomForestClassifier(n_estimators=250, min_samples_leaf=4, n_jobs=-1)\nmodel.fit(X_train, Y_train)\nmodel.score(X_train, Y_train)","dafb70cf":"X_test=test\ny_predi=model.predict(X_test)","6b219d11":"gn=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","dcf53625":"Y_test=gn['Survived'].values","c4e922fe":"accuracy_score(Y_test,y_predi)","872cbe3f":"confusion_matrix(Y_test,y_predi)","047378d3":"test1=pd.read_csv('..\/input\/titanic\/test.csv')","7ba5a137":"data_to_submit = pd.DataFrame({\n    'PassengerId':test1['PassengerId'],\n    'Survived':y_predi\n})\ndata_to_submit.to_csv('finalsub4.csv', index = False)","0d90e31d":"data_to_submit.head()","8fd550d7":"data_to_submit.count()","7bb1c997":"Creating Family Size for train and test data","2bcc6e09":"#model Creation "}}