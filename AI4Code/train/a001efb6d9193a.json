{"cell_type":{"4ed9095b":"code","5d0f4e04":"code","920530fe":"code","23b724d4":"code","441543b4":"code","b33ad8d3":"code","38eaf6c8":"code","40744910":"code","66570f3f":"markdown","51fc3800":"markdown","ff131ee5":"markdown","81712b04":"markdown","4eb2e1e2":"markdown","4d3a4680":"markdown","5f650b20":"markdown"},"source":{"4ed9095b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.cluster import MeanShift\nfrom sklearn.naive_bayes import GaussianNB\nimport seaborn as sns\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\npd.options.mode.chained_assignment=None\npd.set_option('display.max_columns', None)\ndf=pd.read_csv('..\/input\/ks-projects-201801.csv')\nprint(df.head(5))\n\n# Any results you write to the current directory are saved as output.","5d0f4e04":"df.info()  #to see columns and datetypes.","920530fe":"df.corr() #to see correlations","23b724d4":"print(df.groupby('category').size())\ncategories = df.category.value_counts()\nplt.figure(figsize=(15, 5))\nsns.barplot(x=categories[:15].index, y=categories[:15].values)\nplt.ylabel('number of projects')\nplt.xlabel('categories')\nplt.title('main categories')","441543b4":"print(df.groupby('state').size())\ncategories2=df.state.value_counts()\nplt.figure(figsize=(15, 5))\nsns.barplot(x=categories2[:6].index, y=categories2[:6].values)\nplt.ylabel('number')\nplt.xlabel('state')\nplt.title('state of projects')","b33ad8d3":"print(df.groupby('country').size())\ncategories3=df.country.value_counts()\nplt.figure(figsize=(15, 5))\nsns.barplot(x=categories3[:23].index, y=categories3[:23].values)\nplt.ylabel('number')\nplt.xlabel('countries')\nplt.title('number of countries in data')","38eaf6c8":"lab_en=LabelEncoder()#turns object to number.  it is easier to deal with number for machine learning.\ndf['main_category']=lab_en.fit_transform(df['main_category'].fillna('0'))\nX=df['main_category']\ndf['state']=lab_en.fit_transform(df['state'].fillna('0'))\nY=df['state']\nX=np.array(X).reshape(len(X), 1)\nY=np.array(Y).reshape(len(Y), 1)\nx_train, x_test, y_train, y_test=train_test_split(X, Y, test_size=0.2)\nknc=KNeighborsClassifier()\nknc.fit(x_train, y_train)\nscore=knc.score(x_train, y_train)\nprint(score)\n#X2=knc.predict(x_test)\n#print(\"real: \", x_test,\"predicted:\", X2)\n\n","40744910":"gaus=GaussianNB()\ngaus.fit(x_train, y_train)\nscr=gaus.score(x_train, y_train)\nprint(scr)\n","66570f3f":"Lets try gaussian naive bayes","51fc3800":"Lets try knc to see how succesful it is on our data.","ff131ee5":"Now lets check which countries join to kickstart mostly","81712b04":"We want to see number of categories in kickstar and as you can see it is mostly film&video and music.","4eb2e1e2":"Now lets the state of projects.","4d3a4680":"As you see we got bad scores. Since i am new at this i am open to suggestions and you can do something better and show me too. I tried some other models what i actually want was make some prediction with categories and states but i just could not find a good model for this kind of data so if you any ideas please comment below.\nThanks..","5f650b20":"Lets firstly  see our data. We should understand what is look like and what can we do for EDA."}}