{"cell_type":{"46eedc96":"code","4671874a":"code","ead08889":"code","8024fb37":"code","93783b41":"code","1799e501":"code","1bf33876":"code","60309711":"markdown","d7dead73":"markdown","4f856a41":"markdown","2bd8b218":"markdown","15e0d410":"markdown","6ad0410e":"markdown","86aa7af8":"markdown","14930fe2":"markdown","4a4257a0":"markdown","ed58386e":"markdown","0c23ec99":"markdown","2ab58d32":"markdown","3988351d":"markdown"},"source":{"46eedc96":"import numpy as np \nimport pandas as pd \nimport os\ndata = pd.read_csv(\"..\/input\/train.csv\")\ndata.drop(columns = ['Name','Ticket','Fare','Cabin','SibSp','Parch','Age','PassengerId','Survived','Pclass'], inplace=True)\ndata['Embarked'].fillna('S',inplace=True)\ndata.head(10)","4671874a":"print('Unique Values of Columns')\nprint('\\tSex \\t\\t: ',data.Sex.unique())\nprint('\\tEmbarked \\t: ',data.Embarked.unique())","ead08889":"columnsToEncode = ['Sex','Embarked']\nOne_Hot_encoded = pd.get_dummies(data,columns= columnsToEncode)\nOne_Hot_encoded.head()","8024fb37":"data.head()","93783b41":"# import labelencoder\nfrom sklearn.preprocessing import LabelEncoder\n# instantiate labelencoder object\nle = LabelEncoder()\n\ndata_for_Label_Encoding = data.copy()\ndata_for_Label_Encoding['Sex'] = le.fit_transform(data_for_Label_Encoding[['Sex']])\ndata_for_Label_Encoding['Embarked'] = le.fit_transform(data_for_Label_Encoding[['Embarked']])","1799e501":"data_for_Label_Encoding.head()","1bf33876":"data_for_Label_Encoding = data.copy()\ndata_for_Label_Encoding['Sex'].replace(['male','female'],[1,2],inplace=True)\ndata_for_Label_Encoding['Embarked'].replace(['S','C','Q'],[0,1,2],inplace=True)\ndata_for_Label_Encoding.head()","60309711":"## Initial data frame","d7dead73":"# Objectives\n### Hello Kaggler!, <span style=\"color:PURPLE\">Objective of this short kernal is to<\/span> <span style=\"color:red\">demonstrate simple ways you could use to convert Categorical Features<\/span>\n\nCurerntly this kernel demonstrates following encoding techniques,\n* One-Hot-Encoding (OHE) (dummy encoding)\n* Label Encoding\n\nIf you have ideas on improving this kernel please comment!\n\nTo make this very easy to grasp I have used infamouse Titanic data set to train the ML model.\n\n\n\n\n### Let's Start!","4f856a41":"## Using pandas.DataFrame.replace","2bd8b218":"Learn on Label Encoding : https:\/\/www.geeksforgeeks.org\/ml-label-encoding-of-datasets-in-python\/\n\nlets lable encode columns 'Sex' and 'Embarked'","15e0d410":"Learn on One-Hot-Encoding :https:\/\/www.geeksforgeeks.org\/ml-one-hot-encoding-of-datasets-in-python\/\n\n#### Code & Output","6ad0410e":"# Credits\n\n* https:\/\/machinelearningmastery.com\/why-one-hot-encode-data-in-machine-learning\/\n* https:\/\/towardsdatascience.com\/benchmarking-categorical-encoders-9c322bd77ee8\n* https:\/\/chrisalbon.com\/machine_learning\/preprocessing_structured_data\/convert_pandas_categorical_column_into_integers_for_scikit-learn\/\n* https:\/\/www.geeksforgeeks.org\/ml-label-encoding-of-datasets-in-python\/\n* https:\/\/www.geeksforgeeks.org\/ml-one-hot-encoding-of-datasets-in-python\/","86aa7af8":"## Thank you!\n### If you like the notebook and think that it helped you..PLEASE UPVOTE. It will keep me motivated :) :)","14930fe2":"# Method 2: Label Encoding","4a4257a0":"## Using sklearn.preprocessing.LabelEncoder","ed58386e":"### Preparing Example Dataset for demonstration","0c23ec99":"# Why do we need to convert categorical features?\n\n* Because Many machine learning tools will only accept numbers as input.","2ab58d32":"# Learn more on Categorical Feature Encoding\n* https:\/\/machinelearningmastery.com\/why-one-hot-encode-data-in-machine-learning\/\n* https:\/\/towardsdatascience.com\/benchmarking-categorical-encoders-9c322bd77ee8\n* https:\/\/www.geeksforgeeks.org\/ml-label-encoding-of-datasets-in-python\/\n* https:\/\/www.geeksforgeeks.org\/ml-one-hot-encoding-of-datasets-in-python\/","3988351d":"# Method 1: One-Hot-Encoding (OHE) (dummy encoding) "}}