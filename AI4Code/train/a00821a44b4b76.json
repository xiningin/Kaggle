{"cell_type":{"7f0e3cda":"code","20c1649d":"code","890fb867":"code","1b29ce39":"code","b46bd794":"code","e612a355":"code","024d9cb7":"code","269f37f5":"code","f14ab3dd":"code","e1a77cc2":"code","96e39626":"code","ca24da31":"code","7f0f5a09":"code","733d339f":"code","432fff3d":"code","2ebc0f5f":"code","9986a046":"code","20fa1329":"code","f96206e8":"code","ba622fb1":"code","daf936f8":"code","977c0192":"code","bb89ab41":"code","84738dae":"code","54c7a59d":"code","58dc4076":"code","04782925":"code","5cadcaa0":"code","a53239e9":"code","b8af514f":"code","2711c693":"code","db81a3a7":"code","5581678b":"code","9b256ca8":"code","d7304ff3":"code","90cb5b38":"code","a109efe0":"code","6c604ea8":"code","e5a2e06e":"code","7336cc19":"code","17b34ff6":"code","79fcf06d":"code","5bad8e88":"code","c12ee32b":"code","5c5f5e77":"code","a6244e56":"code","53549a3c":"code","fd508b1c":"code","ce7f8e67":"code","f6baa5f3":"code","3a131e2e":"code","92810100":"code","edd8298f":"code","db8a738d":"code","bf69924e":"code","90891ea4":"markdown","ea3cee26":"markdown","9dd941dd":"markdown","7ebb5b67":"markdown","18a7ba63":"markdown","d169db5a":"markdown","49ce373e":"markdown","6ef8b68c":"markdown","52db1154":"markdown","cbd3914c":"markdown","39cf0603":"markdown","7a8dae37":"markdown","9053b1bf":"markdown","cbceffd9":"markdown","f494633d":"markdown","d63006dc":"markdown","323c3540":"markdown"},"source":{"7f0e3cda":"## define configuration\nPATH_TRAIN = '..\/input\/tabular-playground-series-mar-2021\/train.csv'\nPATH_TEST = '..\/input\/tabular-playground-series-mar-2021\/test.csv'\n\nPATH_AUTOGLUON_SUBMISSION = 'submission_autogluon.csv'\nPATH_EVALML_SUBMISSION = 'submission_evalml.csv'\nPATH_FLAML_SUBMISSION = 'submission_flaml.csv'\nPATH_H2OAML_SUBMISSION = 'submission_h2oaml.csv'\nPATH_LAML_SUBMISSION = 'submission_laml.csv'\nPATH_MLJAR_SUBMISSION = 'submission_mljar.csv'\nPATH_TPOT_SUBMISSION = 'submission_tpot.csv'\n\nMAX_MODEL_RUNTIME_MINS = 10\nMAX_MODEL_RUNTIME_SECS = MAX_MODEL_RUNTIME_MINS * 60","20c1649d":"## prepare data\nimport gc\nimport os\nimport shutil\nimport datatable as dt\nfrom pathlib import Path\n\ntrain = dt.fread(PATH_TRAIN)\ntest = dt.fread(PATH_TEST)\n\ntarget = train['target'].to_numpy().ravel()\ntest_ids = test['id']\n\ndel train[:, ['id', 'target']]\ntest = test[:, train.names]","890fb867":"## install packages\n!python3 -m pip install -q \"mxnet<2.0.0\"\n!python3 -m pip install -q autogluon\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","1b29ce39":"## import packages\nfrom autogluon.tabular import TabularPredictor","b46bd794":"## run model\ntrain['target'] = dt.Frame(target)\n\nmodel_autogluon = TabularPredictor(label='target', eval_metric='roc_auc')\nmodel_autogluon.fit(train_data=train.to_pandas(), excluded_model_types=['KNN'], time_limit=MAX_MODEL_RUNTIME_SECS)\n\ndel train['target']","e612a355":"## check leaderboard\nmodel_autogluon.leaderboard()","024d9cb7":"## generate predictions\npreds_autogluon = model_autogluon.predict_proba(test.to_pandas())[True]","269f37f5":"## create submission\nsubmission = dt.Frame(id=test_ids, claim=dt.Frame(preds_autogluon))\nsubmission.head()","f14ab3dd":"## save submission\nsubmission.to_csv(PATH_AUTOGLUON_SUBMISSION)","e1a77cc2":"## clear memory\nshutil.rmtree('AutogluonModels')\ndel model_autogluon\n\ngc.collect()","96e39626":"## install packages\n!python3 -m pip install -q evalml==0.28.0","ca24da31":"## import packages\nfrom evalml.automl import AutoMLSearch","7f0f5a09":"## run model\nmodel_evalml = AutoMLSearch(X_train=train.to_pandas(), y_train=target, problem_type='binary', max_time=MAX_MODEL_RUNTIME_SECS)\nmodel_evalml.search()","733d339f":"## check leaderboard\nmodel_evalml.rankings","432fff3d":"## generate predictions\npreds_evalml = model_evalml.best_pipeline.predict_proba(test.to_pandas())[True]","2ebc0f5f":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_evalml))\nsubmission.head()","9986a046":"## save submission\nsubmission.to_csv(PATH_EVALML_SUBMISSION)","20fa1329":"## clear memory\nos.remove('evalml_debug.log')\ndel model_evalml\n\ngc.collect()","f96206e8":"## install packages\n!python3 -m pip install -q flaml==0.5.0\n!python3 -m pip install -q -U graphviz\n!python3 -m pip install -q -U scikit-learn","ba622fb1":"## import packages\nfrom flaml import AutoML","daf936f8":"## run model\nmodel_flaml = AutoML()\nmodel_flaml.fit(X_train=train.to_pandas(), y_train=target, metric='roc_auc', time_budget=MAX_MODEL_RUNTIME_SECS)","977c0192":"## generate predictions\npreds_flaml = model_flaml.predict_proba(test.to_pandas())[:, 1]","bb89ab41":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_flaml)\nsubmission.head()","84738dae":"## save submission\nsubmission.to_csv(PATH_FLAML_SUBMISSION)","54c7a59d":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\nos.remove('default.log')\ndel model_flaml\n\ngc.collect()","58dc4076":"## import packages\nimport h2o\nfrom h2o.automl import H2OAutoML","04782925":"## prepare data\nh2o.init()\n\nh2o_train = h2o.H2OFrame(train.to_pandas())\nh2o_test = h2o.H2OFrame(test.to_pandas())\n\nh2o_train['target'] = h2o.H2OFrame(target).asfactor()","5cadcaa0":"## run model\nfeatures = [x for x in h2o_train.columns if x != 'target']\n\nmodel_h2oaml = H2OAutoML(stopping_metric='AUC', sort_metric='AUC', max_runtime_secs=MAX_MODEL_RUNTIME_SECS)\nmodel_h2oaml.train(x=features, y='target', training_frame=h2o_train)","a53239e9":"## check leaderboard\nmodel_h2oaml.leaderboard","b8af514f":"## generate predictions\npreds_h2oaml = model_h2oaml.leader.predict(h2o_test).as_data_frame()['True']","2711c693":"## create submission\nsubmission = dt.Frame(id=test_ids, target=dt.Frame(preds_h2oaml))\nsubmission.head()","db81a3a7":"## save submission\nsubmission.to_csv(PATH_H2OAML_SUBMISSION)","5581678b":"## clear memory\nh2o.cluster().shutdown()\ndel features, model_h2oaml\n\ngc.collect()","9b256ca8":"## install packages\n!python3 -m pip install -q lightautoml\n!python3 -m pip install -q -U torch\n!python3 -m pip install -q -U torchvision","d7304ff3":"## import packages\nfrom lightautoml.automl.presets.tabular_presets import TabularAutoML\nfrom lightautoml.tasks import Task","90cb5b38":"## run model\ntrain['target'] = dt.Frame(target)\n\nmodel_laml = TabularAutoML(task = Task('binary'), timeout = MAX_MODEL_RUNTIME_SECS)\nmodel_laml.fit_predict(train_data=train.to_pandas(), roles={'target': 'target'})\n\ndel train['target']","a109efe0":"## generate predictions\npreds_laml = model_laml.predict(test.to_pandas()).data.ravel()","6c604ea8":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_laml)\nsubmission.head()","e5a2e06e":"## save submission\nsubmission.to_csv(PATH_LAML_SUBMISSION)","7336cc19":"## clear memory\nif Path('catboost_info').exists():\n    shutil.rmtree('catboost_info')\n\ndel model_laml\n\ngc.collect()","17b34ff6":"## install packages\n!python3 -m pip install -q mljar-supervised\n!python3 -m pip install -q -U graphviz","79fcf06d":"## import packages\nfrom supervised import AutoML","5bad8e88":"## run model\nmodel_mljar = AutoML(eval_metric='auc', total_time_limit=MAX_MODEL_RUNTIME_SECS, results_path='.\/model_mljar')\nmodel_mljar.fit(X=train.to_pandas(), y=target)","c12ee32b":"## check leaderboard\nmodel_mljar.get_leaderboard()","5c5f5e77":"## generate predictions\npreds_mljar = model_mljar.predict_proba(test.to_pandas())[:, 1]","a6244e56":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_mljar)\nsubmission.head()","53549a3c":"## save submission\nsubmission.to_csv(PATH_MLJAR_SUBMISSION)","fd508b1c":"## clear memory\nshutil.rmtree('model_mljar')\ndel model_mljar\n\ngc.collect()","ce7f8e67":"## import packages\nfrom tpot import TPOTClassifier\nfrom sklearn.preprocessing import LabelEncoder","f6baa5f3":"## run model\ntrain_test = dt.rbind(train, test)\n\nfor i in range(19):\n    le = LabelEncoder()\n    train_test[f'cat{i}'] = le.fit_transform(train_test[f'cat{i}'])\n\ntrain_tpot = train_test[:train.nrows, :]\ntest_tpot = train_test[train.nrows:, :]\n\nmodel_tpot = TPOTClassifier(scoring='roc_auc', n_jobs=-1, max_time_mins=MAX_MODEL_RUNTIME_MINS)\nmodel_tpot.fit(features=train_tpot.to_pandas(), target=target)","3a131e2e":"## check pipeline\nprint(model_tpot.fitted_pipeline_)","92810100":"## generate predictions\npreds_tpot = model_tpot.predict_proba(test_tpot.to_pandas())[:, 1]","edd8298f":"## create submission\nsubmission = dt.Frame(id=test_ids, target=preds_tpot)\nsubmission.head()","db8a738d":"## save submission\nsubmission.to_csv(PATH_TPOT_SUBMISSION)","bf69924e":"## clear memory\ndel train_tpot, test_tpot, model_tpot\n\ngc.collect()","90891ea4":"## LightAutoML\n<img src='https:\/\/github.com\/sberbank-ai-lab\/LightAutoML\/blob\/master\/imgs\/LightAutoML_logo_small.png?raw=true' width='150px'>\n\n[LightAutoML](https:\/\/github.com\/sberbank-ai-lab\/LightAutoML) is a framework for automatic classification and regression model creation open sourced by [Sberbank](https:\/\/www.sberbank.com) AI Lab.","ea3cee26":"## Similar Tutorials\nSimilar tutorials on other Kaggle TPS competitions are published here:\n\n* [AutoML Tutorial: TPS (January 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-january-2021)\n* [AutoML Tutorial: TPS (February 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-february-2021)\n* [AutoML Tutorial: TPS (April 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-april-2021)\n* [AutoML Tutorial: TPS (May 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-may-2021)\n* [AutoML Tutorial: TPS (June 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-june-2021)\n* [AutoML Tutorial: TPS (July 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-july-2021)\n* [AutoML Tutorial: TPS (August 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-august-2021)\n* [AutoML Tutorial: TPS (September 2021)](https:\/\/www.kaggle.com\/rohanrao\/automl-tutorial-tps-september-2021)","9dd941dd":"Read more in [Documentation of LightAutoML](https:\/\/lightautoml.readthedocs.io\/en\/latest\/index.html)","7ebb5b67":"Read more in [Documentation of MLJAR](https:\/\/supervised.mljar.com)","18a7ba63":"**Auto**mated **M**achine **L**earning (**AutoML**) has become widely adopted for building, experimenting and productionizing various types of machine learning models across business use-cases.\n\nThere are different open source solutions available and this notebook explores a simple baseline solution for some of them on the [Kaggle TPS (March 2021) competition](https:\/\/www.kaggle.com\/c\/tabular-playground-series-mar-2021).\n\n* [AutoGluon](#AutoGluon)\n* [EvalML](#EvalML)\n* [FLAML](#FLAML)\n* [H2O AutoML](#H2O-AutoML)\n* [LightAutoML](#LightAutoML)\n* [MLJAR](#MLJAR)\n* [TPOT](#TPOT)","d169db5a":"## TPOT\n<img src='https:\/\/raw.githubusercontent.com\/EpistasisLab\/tpot\/master\/images\/tpot-logo.jpg' width='150px'>\n\n[TPOT](http:\/\/epistasislab.github.io\/tpot) is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming","49ce373e":"<div align='center'>\n    <h1>AutoML Tutorial<\/h1>\n    <img src='https:\/\/github.com\/vopani\/fortyone\/blob\/main\/images\/automl_banner_530_x_455.png?raw=true'>\n<\/div>","6ef8b68c":"## MLJAR\n<img src='https:\/\/mljar.com\/images\/logo\/mljar_circle3.svg' width='150px'>\n\n[MLJAR](https:\/\/mljar.com) is an automated machine learning tool for tabular data","52db1154":"Read more in [Documentation of H2O AutoML](https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/automl.html)","cbd3914c":"## FLAML\n<img src='https:\/\/github.com\/microsoft\/FLAML\/raw\/main\/docs\/images\/FLAML.png' width='150px'>\n\n[FLAML](https:\/\/microsoft.github.io\/FLAML) is a fast and light automl library open sourced by [Microsoft](https:\/\/opensource.microsoft.com)","39cf0603":"Read more in [Documentation of AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html)","7a8dae37":"Read more in [Documentation of TPOT](http:\/\/epistasislab.github.io\/tpot)","9053b1bf":"## H2O AutoML\n<img src='https:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/_images\/h2o-automl-logo.jpg' width='150px'>\n\n[H2O AutoML](https:\/\/www.h2o.ai\/products\/h2o-automl) is an automated machine learning library open sourced by [H2O.ai](https:\/\/h2o.ai)","cbceffd9":"## EvalML\n<img src='https:\/\/evalml.alteryx.com\/en\/stable\/_images\/evalml_horizontal.svg' width='250px'>\n\n[EvalML](https:\/\/evalml.alteryx.com\/en\/stable) is an automl library open sourced by [Alteryx](http:\/\/www.alteryx.com)","f494633d":"Read more in [Documentation of FLAML](https:\/\/microsoft.github.io\/FLAML)","d63006dc":"## AutoGluon\n<img src='https:\/\/user-images.githubusercontent.com\/16392542\/77208906-224aa500-6aba-11ea-96bd-e81806074030.png' width='250px'>\n\n[AutoGluon](https:\/\/auto.gluon.ai\/stable\/index.html) is an automl library open sourced by [Amazon](http:\/\/amazon.com\/aws)","323c3540":"Read more in [Documentation of EvalML](https:\/\/evalml.alteryx.com)"}}