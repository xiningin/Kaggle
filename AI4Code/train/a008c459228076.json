{"cell_type":{"b7ffb955":"code","68272691":"code","ce8a5caa":"code","e09633a2":"code","2f14c749":"code","83913289":"code","9590453f":"code","13af45bb":"code","a90f4e10":"code","907bf005":"code","908d0f63":"code","a53c21d6":"code","225346c0":"code","aaab66af":"code","82372563":"code","0336f6c3":"code","4610677a":"code","8a644a9c":"code","e01fffcb":"code","e97555f5":"code","87c71aed":"code","edb573a8":"code","368a66e0":"code","d4bca6d0":"code","9282b439":"code","e2b1a759":"code","81e340fb":"code","6cc5de94":"code","dc39db09":"code","73b65543":"code","6c5a5de4":"code","1905d284":"code","e0f3e6e0":"code","acee1701":"code","703f1e62":"code","acafa457":"code","f737be92":"code","6100ccf0":"code","0718d290":"code","8ac5ec4e":"code","d51b476a":"code","bf08d16f":"code","1f607e3e":"code","f685218e":"code","612a49fb":"code","3fe10571":"code","eebb1fca":"code","a79183e3":"code","d67cb3d1":"code","29780c82":"code","eb228116":"code","deba702f":"code","8e477e2e":"code","f289b2c5":"code","8bc8f91d":"code","ef6c6831":"code","b567a5e2":"code","a0290089":"code","f70826d2":"markdown","953ca5fd":"markdown","0fed1d8c":"markdown","70c8f17b":"markdown","0f5b8412":"markdown","ae47d344":"markdown","201bbb37":"markdown","4b0efbb5":"markdown","5e23a22a":"markdown","1a65161e":"markdown","fab5c652":"markdown","523ec9ed":"markdown"},"source":{"b7ffb955":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","68272691":"import matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ce8a5caa":"from sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport warnings\nwarnings.filterwarnings('ignore')","e09633a2":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","2f14c749":"print(train.shape)\nprint(test.shape)","83913289":"train.head()","9590453f":"train.info()","13af45bb":"sns.heatmap(train.isnull())","a90f4e10":"sns.countplot(x='Survived',data=train)","907bf005":"sns.countplot(x='Survived',hue='Sex',data=train)","908d0f63":"sns.countplot(x='Survived',hue='Pclass',data=train)","a53c21d6":"sns.distplot(train['Age'].dropna(),kde=False, bins=30)","225346c0":"sns.countplot(x='SibSp', data=train)","aaab66af":"train['Fare'].hist(figsize=(10,4),bins=40)","82372563":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass',y='Age', data=train)","0336f6c3":"train.groupby('Pclass')['Age'].mean()","4610677a":"def impute_age(cols):\n    Age  = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 38\n        elif Pclass == 2:\n            return 30\n        else:\n            return 25\n    else:\n        return Age","8a644a9c":"train['Age'] = train[['Age','Pclass']].apply(impute_age,axis=1)","e01fffcb":"sum(train['Age'].isnull())","e97555f5":"sns.heatmap(train.isnull(), yticklabels=False, cbar=False, cmap='viridis')","87c71aed":"# too many mising values for cabin column, so drop it\ntrain.drop('Cabin',axis=1,inplace=True)\ntrain.head()","edb573a8":"train.isna().sum()","368a66e0":"# Only 2 missing values in Embarked column\ntrain.loc[train['Embarked'].isna(),'Embarked'] = 'S'","d4bca6d0":"train.isna().sum()","9282b439":"sex = pd.get_dummies(train['Sex'],drop_first=True)\nsex.head()","e2b1a759":"embark = pd.get_dummies(train['Embarked'],drop_first=True)\nembark.head(5)","81e340fb":"train = pd.concat([train,sex,embark],axis=1)\ntrain.head()","6cc5de94":"train.drop(['Sex','Embarked','Name','Ticket'],axis=1, inplace=True)","dc39db09":"train.head()","73b65543":"train.drop('PassengerId',axis=1,inplace=True)","6c5a5de4":"X = train.drop('Survived',axis=1)\ny = train['Survived']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","1905d284":"logmodel = LogisticRegression()\nlogmodel.fit(X_train, y_train)","e0f3e6e0":"predictions = logmodel.predict(X_test)","acee1701":"print(classification_report(y_test, predictions))\nprint('\\n')\nconfusion_matrix(y_test,predictions)","703f1e62":"np.mean(cross_val_score(LogisticRegression(),X,y,cv=5))","acafa457":"np.mean(cross_val_score(SVC(),X,y,cv=5))","f737be92":"np.mean(cross_val_score(RandomForestClassifier(n_estimators=50),X,y,cv=5))","6100ccf0":"rf = RandomForestClassifier(n_estimators=50)\nrf.fit(X_train,y_train)","0718d290":"pred = rf.predict(X_test)","8ac5ec4e":"print(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","d51b476a":"test.isna().sum()","bf08d16f":"test['Fare'].mean()","1f607e3e":"test['Age'] = test[['Age','Pclass']].apply(impute_age,axis=1)","f685218e":"test.drop('Cabin',axis=1,inplace=True)","612a49fb":"test.loc[test['Fare'].isna(),'Fare'] = test['Fare'].mean()","3fe10571":"Tsex = pd.get_dummies(test['Sex'],drop_first=True)","eebb1fca":"Tembark = pd.get_dummies(test['Embarked'],drop_first=True)","a79183e3":"test = pd.concat([test,Tsex,Tembark],axis=1)","d67cb3d1":"test.drop(['Sex','Embarked','Name','Ticket'],axis=1, inplace=True)","29780c82":"test.drop('PassengerId',axis=1,inplace=True)","eb228116":"test.shape","deba702f":"pred_test = rf.predict(test)","8e477e2e":"tt = pd.read_csv('..\/input\/titanic\/test.csv')","f289b2c5":"df_submit = pd.DataFrame(tt['PassengerId'])","8bc8f91d":"df_submit['Survived']=pd.DataFrame(pred_test)","ef6c6831":"df_submit.head()","b567a5e2":"df_submit['Survived'].value_counts()","a0290089":"df_submit.to_csv(\"submission2.csv\", index=False)","f70826d2":"- Lets start with filling in missing values","953ca5fd":"1. Introduction\n    This is my first kernel at Kaggle. I chose Titanic competition which is a good way to get started with Kaggle competitions.\n    I have done basic feature encoding, predicting with simple algoriths and later tried with 1st Ensemble attempt.","0fed1d8c":"- Check survived distribution based on gender","70c8f17b":"- Check label (Survived) distribution","0f5b8412":"- Load train and test data","ae47d344":"- Check missing values heatmap again","201bbb37":"- Accuracy of Logistic model is 79%","4b0efbb5":"- Convert Categorical features into columns","5e23a22a":"- show heatmap of null values, Missing data","1a65161e":"- Basic Logistic Regression Model","fab5c652":"- Chek Survived ditribution based on Class","523ec9ed":"- Now try different algorithms using cross validation"}}