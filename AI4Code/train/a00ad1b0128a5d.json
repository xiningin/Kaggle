{"cell_type":{"a7725a9c":"code","ad9d336b":"code","e77489dc":"code","9016ca02":"code","8c2faa37":"code","8c4ea4d7":"code","7ddcfc35":"code","973322cd":"code","52b59b34":"code","10d20f61":"code","d1f3f0e4":"code","2835df9e":"code","6cb6c88a":"code","7d1d48cb":"code","85d8c843":"code","0b866a19":"code","74044e45":"code","18606d7a":"code","6d692482":"code","3c31b4a4":"code","f7528208":"code","38e73974":"code","bb862f53":"code","b6270f5b":"code","012bc2bb":"code","ab15532a":"code","68ed47d9":"code","8565d714":"code","7ed7b36f":"code","f69d1d7d":"code","c9e78722":"code","b987b919":"code","163b82d4":"code","313e8dcc":"code","394e1947":"code","c335b7f9":"code","babf7897":"code","355a49ce":"code","7614f042":"code","0a5c9a63":"code","9b9102f1":"code","6be77516":"code","65a02f53":"code","cd7dfd0f":"code","765e5318":"code","ed133d15":"code","9c0ebcdd":"code","21e92303":"code","6b5f2eac":"code","be5791dd":"code","77b2a5c2":"code","30651103":"code","d50e41ce":"code","f165d761":"code","69864194":"code","b5524483":"code","565df4cb":"code","5390d0a9":"code","3afcab11":"code","2006d11f":"code","50a61b25":"code","458b04a1":"code","bec63163":"code","cfaefe2d":"code","3cadb56b":"code","f29ad224":"code","e3f9a34a":"code","d9508828":"code","ab75ea99":"code","c480bdaf":"code","1a9abeb4":"code","ece6d50a":"code","cde23b8b":"code","5bf7da1a":"code","ed0b19d5":"code","39ee4616":"code","f2763db0":"code","d939db01":"code","59ddfcd1":"code","7dd327c5":"code","a5661513":"code","f73ef2dd":"code","116c466d":"code","32f7ded6":"code","d7b9ea81":"code","72089edb":"code","1dda0894":"code","0d62dbbf":"code","2ec04f3f":"code","975a6949":"code","bf9ae2b2":"code","11cb7ef8":"code","c49ccbea":"code","438daa94":"code","5ab20802":"code","1ca3f2e3":"code","9d702747":"code","cb3c4e97":"code","37fe54b5":"code","fa1622e5":"code","c9164a7b":"code","e94fae4e":"code","7c52e9b8":"code","6406aa8b":"markdown","4d3871bc":"markdown","0d300a11":"markdown","860f858b":"markdown","c404cb8c":"markdown","6dda6bf6":"markdown","8ca4c5cc":"markdown","9d8eb468":"markdown","e974918b":"markdown","99f57979":"markdown","4602465c":"markdown","e96c26e2":"markdown","cee42f23":"markdown","c7197cb1":"markdown","87801554":"markdown","b53f17e8":"markdown","df15fbcc":"markdown","486e4bda":"markdown","fc31beae":"markdown","87cf0d96":"markdown","bd615e83":"markdown","0882e3b0":"markdown","1f6e0501":"markdown","53dc61eb":"markdown","ad3f38f5":"markdown","8e4fb178":"markdown","a4af0083":"markdown","9d8f1d47":"markdown","4251e4b0":"markdown","45133713":"markdown","b021e607":"markdown","221a1084":"markdown","62ff3388":"markdown","1190a655":"markdown","edd63a87":"markdown","8e894720":"markdown","9d8b6141":"markdown","6fa05077":"markdown","0362a158":"markdown","487baf38":"markdown","f2d14d07":"markdown","af89df7a":"markdown","433b569f":"markdown","cf8f47e2":"markdown","d8c49295":"markdown","29f546ad":"markdown","81c50f23":"markdown","1b409911":"markdown","b077dcf5":"markdown","39fce01f":"markdown","a95f14c9":"markdown","c469519f":"markdown","85894a30":"markdown","45622ee9":"markdown","ae039381":"markdown","c7230ab6":"markdown","1d725f12":"markdown","ee717903":"markdown","46816ee7":"markdown","f02e3c9f":"markdown","42d7d1f9":"markdown","23ab7f9c":"markdown","bd605963":"markdown","fe519bd3":"markdown","bdaf6627":"markdown","8654961b":"markdown","12338cb8":"markdown","87566f72":"markdown","dffd0cb3":"markdown","21e2f7c2":"markdown","11118b19":"markdown","4b911768":"markdown","23621655":"markdown","695808e0":"markdown","414c91b9":"markdown","88d60231":"markdown","c2247fd8":"markdown","2a8f5524":"markdown","c83ac9e5":"markdown","751206f6":"markdown","c912043e":"markdown","67c7e96a":"markdown","6a01d910":"markdown","93268bde":"markdown","a547d6f7":"markdown","a52b6e3e":"markdown","24797fbd":"markdown","f7b2d05d":"markdown","fea0ed44":"markdown","c10edeba":"markdown","38c16852":"markdown","71eee847":"markdown","7d6b5803":"markdown","204cfaac":"markdown","bcdf4d1d":"markdown","e7122d4b":"markdown","cd79916b":"markdown","1248025b":"markdown","3b04f44a":"markdown"},"source":{"a7725a9c":"'''\nAs bibliotecas usadas s\u00e3o:\nrandom\nstatistic\nnumpy.random\nscipy.stats\npandas\nmatplotlib\nstatsmodels\npandas-profiling\n'''\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport math\nimport random\nimport pandas as pd\nimport scipy.stats as stat\n\nimport os\n\npath = os.environ['PATH']\n\nif path.startswith('C'):\n    IN_KAGGLE = False\nelse:\n    IN_KAGGLE = True","ad9d336b":"# Para uso com fun\u00e7\u00f5es da biblioteca standard (ex random.randint)\nrandom.seed(1)\n# Para uso com fun\u00e7\u00f5es da biblioteca numpy (ex np.random.randint)\nnp.random.seed(1)\n\n# Quando for passada como par\u00e2metro a seed\nrandom_state = 1","e77489dc":"# Permuta\u00e7\u00e3o: possibilidades de coloca\u00e7\u00e3o de n objetos em n posi\u00e7\u00f5es = n!\ndef permutacao (n):\n    return math.factorial(n)\n\n# Arranjo: p objetos em n posi\u00e7\u00f5es, ordem importa = n!\/(n-p)!\ndef arranjo (n,p):\n    return math.factorial(n)\/math.factorial(n-p)\n\n# Combina\u00e7\u00e3o: p objetos em n posi\u00e7\u00f5es, ordem n\u00e3o importa = n!\/(n-p)!p!\ndef combinacao (n,p):\n    return math.factorial(n)\/(math.factorial(n-p)*math.factorial(p))\n\n# Varia\u00e7\u00f5es poss\u00edveis havendo n slots e p possibilidades para cada um\ndef possibilidades(n,p):\n    return p**n","9016ca02":"# Para qualquer valor de F podemos determinar precisamente qual ser\u00e1 a acelera\u00e7\u00e3o do corpo\n\nm = 1\nF = np.arange(0.0,10.0,1)\na = F\/m\n\nfig, ax = plt.subplots(figsize=(10,6))\nplt.plot(F,a,'*')\nplt.plot(F,a)\n\nplt.xlabel('For\u00e7a')\nplt.ylabel('Acelera\u00e7\u00e3o')\nplt.title('For\u00e7a X Acelera\u00e7\u00e3o')\nplt.grid(True)\n\nplt.show()","8c2faa37":"# No lan\u00e7amento da moeda n\u00e3o podemos prever qualquer resultado espec\u00edfico, \n# mas podemos determinar a probabilidade de cada resultado\n\n# Inicializa\u00e7\u00e3o de vari\u00e1veis\nescolhas = ['Cara','Coroa']\nlancamentos = 100\n# Executa 100 lan\u00e7amentos da moeda com probabilidade 6\/10 de Cara e 4\/10 de Coroa\nresultados = random.choices(population=escolhas, weights=[6\/10,4\/10], k=lancamentos)\n\nfig, ax = plt.subplots(figsize=(10,6))\nind = range(1,len(escolhas)+1)\n# Calcula o percentual de Caras e Coroas\nproporcoes = [resultados.count('Cara')\/lancamentos*100,resultados.count('Coroa')\/lancamentos*100]\nplt.bar(ind,proporcoes,align='center')\nax.set_xticks(ind)\nax.set_xticklabels(escolhas)\n\n\nplt.xlabel('Resultado')\nplt.ylabel('Propor\u00e7\u00e3o')\nplt.title('Resultados de lan\u00e7amentos de moeda n\u00e3o equilibrada')\nplt.grid(True)\nplt.show()","8c4ea4d7":"# exemplo: 3 vari\u00e1veis de entrada com relacionamento n\u00e3o linear entre elas\n\n# Cria tr\u00eas vari\u00e1veis com valores aleat\u00f3rios uniformemente distribu\u00eddos no intervalo [0,0 1,0)\nx = np.random.random_sample(size=1000)\ny = np.random.random_sample(size=1000)\nz = np.random.random_sample(size=1000)\n\n# Cria uma vari\u00e1vel formada pela combina\u00e7\u00e3o n\u00e3o linear das tr\u00eas anteriores\nw = x**2-y**2+z**3\n# Escalona w para que fique no intervalo [-1 1]\nw = w\/np.max(np.abs(w))\n\n\n","7ddcfc35":"plt.subplots(figsize=(14,6))\nplt.plot(x,w,'.')\nplt.xlabel('x')\nplt.ylabel('w')\nplt.title('w = x**2-y**2+z**3')\nplt.grid(True)\nplt.show()\n\nplt.subplots(figsize=(14,6))\nplt.xlabel('w')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o de probabilidade de W')\nplt.grid(True)\nn, bins, patches = plt.hist(w, density=True, facecolor='g', alpha=0.75, bins=50)\nplt.show()\n\n\nprint('Matriz de correla\u00e7\u00f5es entre as vari\u00e1veis')\nprint(np.corrcoef([x,y,z,w]))\n\nprint(\"\\nAn\u00e1lise estat\u00edstica\/probabil\u00edstica\")\nprint(\"M\u00e9dia de w {}, desvio padr\u00e3o de w {}\".format(np.mean(w),np.std(w)))","973322cd":"from sklearn.neural_network import MLPRegressor\n\n# Cria uma matriz de 3 colunas com as vari\u00e1veis de entrada x, y e z\nx_ = np.concatenate((np.reshape(x,(-1,1)),np.reshape(y,(-1,1)),np.reshape(z,(-1,1))), axis=1)\n# Cria uma matriz de 1 coluna com a vari\u00e1vel w\ny_ = np.reshape(w,(-1,1))\n\n# Treina o modelo com 900 valores e testa com 100 valores\nx_train = x_[0:900,:]\ny_train = y_[0:900,:]\nx_test = x_[900:1000,:]\ny_test = y_[900:1000,:]\n\nestimator = MLPRegressor(\n                              learning_rate = 'adaptive',\n                              random_state = random_state,\n                              verbose=True,\n                                max_iter = 200,\n                            hidden_layer_sizes = [100,50,40,30,20,10],   \n                    solver = 'adam',\n                    alpha = 0.0001,\n                    activation = 'relu'\n                            )\n\nestimator.fit(x_train,y_train)\n","52b59b34":"pd.DataFrame(estimator.loss_curve_).plot(figsize=(14,6))","10d20f61":"# Testa o modelo com os 100 exemplos reservados para teste (n\u00e3o usados no treinamento), \n# de forma a verificar a capacidade de generaliza\u00e7\u00e3o\n\nplt.subplots(figsize=(14,6))\nplt.plot(y_test,'r.')\nplt.plot(estimator.predict(x_test),'b*')\nplt.xlabel('Amostra de teste')\nplt.ylabel('w')\nplt.title('w = x**2-y**2+z**3  -  Vermelho = valor real, Azul = previs\u00e3o da rede neural')\nplt.grid(True)\nplt.show()","d1f3f0e4":"# C\u00e1lculo anal\u00edtico baseado em contagem \n# N\u00famerador = n\u00famero poss\u00edvel de 15 caras em 30 lan\u00e7amentos, denominador = total de resultados poss\u00edveis em 30 lan\u00e7amentos da moeda\ncombinacao(30,15)\/possibilidades(30,2)","2835df9e":"# C\u00e1lculo anal\u00edtico baseado na probabilidade b\u00e1sica\nprobabilidades = np.zeros((31,1))\nfor i in range(0,31,1):\n    probabilidades[i]=combinacao(30,i)*((1\/2)**(i))*((1\/2)**(30-i))\n\nplt.bar(range(0,31,1),probabilidades[:,0], facecolor='black', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()","6cb6c88a":"print('Soma das probabilidades {}'.format(sum(probabilidades)))","7d1d48cb":"# C\u00e1lculo por simula\u00e7\u00e3o - usando probabilidade b\u00e1sica\nCara = 1\nCoroa = 0\nMoeda = [Cara,Coroa]\nEquilibrio = [1\/2,1\/2]\nlancamentos = 30\nrepeticoes = 100\nnp.random.seed(1)\nresultado = np.random.choice(a=Moeda, p=Equilibrio, replace=True, size=(repeticoes,lancamentos))\nresultado=np.sum(resultado, axis=1)\nprobabilidades,_ = np.histogram(a=resultado, density=True, bins=range(0,31,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,30,1),probabilidades, facecolor='black', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()\n\nprint (np.sum(probabilidades))","85d8c843":"# C\u00e1lculo por simula\u00e7\u00e3o - usando probabilidade b\u00e1sica\nCara = 1\nCoroa = 0\nMoeda = [Cara,Coroa]\nEquilibrio = [1\/2,1\/2]\nlancamentos = 30\nrepeticoes = 1000\nnp.random.seed(1)\nresultado = np.random.choice(a=Moeda, p=Equilibrio, replace=True, size=(repeticoes,lancamentos))\nresultado=np.sum(resultado, axis=1)\nprobabilidades,_ = np.histogram(a=resultado, density=True, bins=range(0,31,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,30,1),probabilidades, facecolor='g', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probability')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()","0b866a19":"# C\u00e1lculo por simula\u00e7\u00e3o - usando probabilidade b\u00e1sica\nCara = 1\nCoroa = 0\nMoeda = [Cara,Coroa]\nEquilibrio = [1\/2,1\/2]\nlancamentos = 30\nrepeticoes = 10000\nnp.random.seed(1)\nresultado = np.random.choice(a=Moeda, p=Equilibrio, replace=True, size=(repeticoes,lancamentos))\nresultado=np.sum(resultado, axis=1)\nprobabilidades,_ = np.histogram(a=resultado, density=True, bins=range(0,31,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,30,1),probabilidades, facecolor='black', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()","74044e45":"# C\u00e1lculo por simula\u00e7\u00e3o - usando probabilidade b\u00e1sica\nCara = 1\nCoroa = 0\nMoeda = [Cara,Coroa]\nEquilibrio = [1\/2,1\/2]\nlancamentos = 30\nrepeticoes = 100000\nnp.random.seed(1)\nresultado = np.random.choice(a=Moeda, p=Equilibrio, replace=True, size=(repeticoes,lancamentos))\nresultado=np.sum(resultado, axis=1)\nprobabilidades,_ = np.histogram(a=resultado, density=True, bins=range(0,lancamentos+1,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,lancamentos,1),probabilidades, facecolor='g', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()","18606d7a":"probabilidades","6d692482":"Dado = [1,2,3,4,5,6]\nEquilibrio = [1\/6,1\/6,1\/6,1\/6,1\/6,1\/6]\nlancamentos = 2\nrepeticoes = 100000\nnp.random.seed(1)\n#Simula 100000 lan\u00e7amentos de dois dados e soma, em cada um dos 100000 lan\u00e7amentos, os resultados obtidos pelos 2 dados\nresultado = np.random.choice(a=Dado, p=Equilibrio, replace=True, size=(repeticoes,lancamentos))\nresultado=np.sum(resultado, axis=1)\nprobabilidades,_ = np.histogram(a=resultado, density=True, bins=range(1,14,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(1,13,1),probabilidades, facecolor='g', alpha=0.75)\n\nplt.xlabel('Soma dois dados')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Dado')\nplt.grid(True)\nplt.show()","3c31b4a4":"# Usando scipy\n\nfrom scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pmf(range(0,31,1))\n\nplt.bar(range(0,31,1),resultado)\n\nplt.xlabel('# Cara')\nplt.ylabel('Probability')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()\n\nprint('Valor da PMF em 15: {}, correspondente \u00e0 probabilidade de 15 caras em 30 lan\u00e7amentos'.format(rv.pmf(15)))\nprint('Valor da PMF em 0: {}, correspondente \u00e0 probabilidade de 0 caras em 30 lan\u00e7amentos'.format(rv.pmf(0)))\nprint('Soma das probabilidades {}'.format(sum(resultado)))","f7528208":"# Usando scipy\n\nfrom scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\n# calcula probabilide de obter 0,1,2,...30 ou menos caras em 30 lan\u00e7amentos\nresultado = rv.cdf(range(0,31,1))\n\nplt.bar(range(0,31,1),resultado)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()\n\nprint('Probabilidade de conseguirmos 15 ou menos caras {}'.format(rv.cdf(15)))\n","38e73974":"# Usando scipy\n\nfrom scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\nresultado = rv.cdf(range(0,31,1))\n\n# Calcula o interval, em n\u00famero de caras, para o qual intervalo temos 95% de certeza de acertar o resultado\nintervalo = rv.interval(0.95)\n\nprint('Com 95% de chance teremos entre {} e {} caras em 30 lan\u00e7amentos'.format(intervalo[0],intervalo[1]))\n","bb862f53":"from scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\nmedia = rv.mean()\n\nprint('M\u00e9dia {}'.format(media))\n\nvariancia = rv.var()\n\nprint('Vari\u00e2ncia {}'.format(variancia))\n\ndesvio_padrao = rv.std()\n\nprint('Desvio padr\u00e3o {}'.format(desvio_padrao))\n\nprob_media = rv.pmf(media)\n\nprint('Probabilidade da m\u00e9dia {} \u00e9 {}'.format(media,prob_media))\n\ndesv = (rv.cdf(media+desvio_padrao)-rv.cdf(media-desvio_padrao))\n\nprint('Probabilidade do resultado estar afastado at\u00e9 1 desvio padr\u00e3o da m\u00e9dia \u00e9 {}'.format(desv))","b6270f5b":"from scipy.stats import chi2\ngraus = 3\nrv = chi2(graus)\nx = np.linspace(0,15,1000)\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(x)\nplt.subplots(figsize=(14,6))\nplt.plot(x,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Qui-Quadrado com 3 graus de liberdade')\nplt.grid(True)\nplt.show()","012bc2bb":"from scipy.stats import cauchy\ntentativas = 30\nrv = cauchy()\nx = np.linspace(-10,10,1000)\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(x)\nplt.subplots(figsize=(14,6))\nplt.plot(x,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Cauchy [0 1]')\nplt.grid(True)\nplt.show()","ab15532a":"from scipy.stats import uniform\ntentativas = 30\nrv = uniform()\nx = np.linspace(0,2,1000)\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(x)\nplt.subplots(figsize=(14,6))\nplt.plot(x,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Uniforme [0 1]')\nplt.grid(True)\nplt.show()","68ed47d9":"from scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pmf(range(0,31,1))\nplt.subplots(figsize=(14,6))\nplt.plot(range(0,31,1),resultado, color='black')\n\nplt.xlabel('N\u00famero de caras')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Binomial')\nplt.grid(True)\nplt.show()","8565d714":"from scipy.stats import binom\ntentativas = 30\nrv = binom(tentativas, 1\/2)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pmf(range(0,31,1))\nplt.subplots(figsize=(14,6))\nplt.bar(range(0,31,1),resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Binomial (30, 0,5)')\nplt.grid(True)\nplt.show()","7ed7b36f":"# Poisson\n\nfrom scipy.stats import bernoulli\n\nrv = bernoulli(0,4)\n\n","f69d1d7d":"# Poisson\n\nfrom scipy.stats import gengamma\ngraus = 30\na, c = 4.42, -3.12\nrv = gengamma(a, c)\nvariacao = np.linspace(0,2,1000)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(variacao)\nplt.subplots(figsize=(14,6))\nplt.plot(variacao,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Gama (alfa 4,4 - beta -3,1)')\nplt.grid(True)\nplt.show()","c9e78722":"# t-Student\n\nfrom scipy.stats import t\ngraus = 30\nrv = t(graus)\nvariacao = np.linspace(-10,10,1000)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(variacao)\nplt.subplots(figsize=(14,6))\nplt.plot(variacao,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o t-Student (Graus de liberdade 30)')\nplt.grid(True)\nplt.show()","b987b919":"# Poisson\n\nfrom scipy.stats import poisson\ntaxa = 10\nrv = poisson(taxa)\nvariacao = range(0,50,1)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pmf(variacao)\nplt.subplots(figsize=(14,6))\nplt.bar(variacao,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Poisson (taxa 10)')\nplt.grid(True)\nplt.show()","163b82d4":"# Exponencial\n\nfrom scipy.stats import expon\nlambda_ = 1 # taxa\nrv = expon( scale=lambda_)\n\n\nvariacao = np.linspace(0,5,1000)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(variacao)\nplt.subplots(figsize=(14,6))\nplt.plot(variacao,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Exponencial(lambda 1)')\nplt.grid(True)\nplt.show()","313e8dcc":"# Poisson\n\nfrom scipy.stats import norm\nmean = 0\nstd = 1\nrv = norm(loc=mean, scale=std)\n\n\nvariacao = np.linspace(-5,5,1000)\n\n# calcula probabilide de obter 0,1,2,...30 caras em 30 lan\u00e7amentos\nresultado = rv.pdf(variacao)\nplt.subplots(figsize=(14,6))\nplt.plot(variacao,resultado, color='black')\n\nplt.xlabel('x')\nplt.ylabel('Probabilidade')\nplt.title('Distribui\u00e7\u00e3o Normal(0,1)')\nplt.grid(True)\nplt.show()","394e1947":"# Normal\n# https:\/\/docs.scipy.org\/doc\/scipy\/reference\/generated\/scipy.stats.norm.html#scipy.stats.norm\n\n\nfrom scipy.stats import norm\nfrom scipy.stats import kstest\n\nmean = 0\nstd = 1\nrv = norm(loc=mean, scale=std)\nnp.random.seed(1)\nresultado = rv.rvs(size=1000)\n\nn, bins, patches = plt.hist(resultado, density=True, facecolor='black', alpha=0.75, bins=50)\nintervalo = np.linspace(mean-5*std,mean+5*std, num=50)\n\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\nplt.xlabel('Valores')\nplt.ylabel('Probabilidade')\n\nplt.title('Distribui\u00e7\u00e3o normal')\nplt.grid(True)\nplt.show()","c335b7f9":"print('Probabilidade do valor 0: {}'.format(rv.pdf(0)))\nprint('Probabilidade de valor menor ou igual a 0: {}'.format(rv.cdf(0)))\nprint('M\u00e9dia: {}'.format(rv.mean()))\nprint('Mediana: {}'.format(rv.median()))\nprint('Vari\u00e2ncia: {}'.format(rv.var()))\nprint('Desvio padr\u00e3o: {}'.format(rv.std()))\n","babf7897":"fig1, ax1 = plt.subplots()\nax1.set_title('Box Plot')\nax1.boxplot(resultado)","355a49ce":"\ntamanho_amostra = (len(resultado))\n\ntamanho_amostra_entre_1_desvios = sum( (resultado>(mean-1*std)) & (resultado<(mean+1*std)) )\ntamanho_amostra_entre_2_desvios = sum( (resultado>(mean-2*std)) & (resultado<(mean+2*std)) )\ntamanho_amostra_entre_3_desvios = sum( (resultado>(mean-3*std)) & (resultado<(mean+3*std)) )\n\nprint('Percentual dos dados entre {} desvios: {}'.format(1,tamanho_amostra_entre_1_desvios*100\/tamanho_amostra))\nprint('Percentual dos dados entre {} desvios: {}'.format(2,tamanho_amostra_entre_2_desvios*100\/tamanho_amostra))\nprint('Percentual dos dados entre {} desvios: {}'.format(3,tamanho_amostra_entre_3_desvios*100\/tamanho_amostra))","7614f042":"# Determina\u00e7\u00e3o de par\u00e2metros baseado nos dados\n\nmedia, desvio = norm.fit(resultado)","0a5c9a63":"#https:\/\/plot.ly\/python\/normality-test\/\n\n# Teste de normalidade\n    \nkstest(resultado, 'norm')\n","9b9102f1":"\ns = 0.3\nrepeticoes = 100000\n\nrv = stat.lognorm(s=s)\n\npopulacao = rv.rvs(size=repeticoes, random_state=random_state)\n\nprint('M\u00e9dia: {}'.format(rv.mean()))\nprint('Mediana: {}'.format(rv.median()))\nprint('Vari\u00e2ncia: {}'.format(rv.var()))\nprint('Desvio padr\u00e3o: {}'.format(rv.std()))","6be77516":"n, bins, patches = plt.hist(populacao, density=True, facecolor='black', alpha=0.75, bins=50)\n\n\nplt.title('Distribui\u00e7\u00e3o logonormal')\nplt.xlabel('Valores')\nplt.ylabel('Probabilidade')\nplt.grid(True)\nplt.show()","65a02f53":"fig1, ax1 = plt.subplots()\nax1.set_title('Box Plot')\nax1.boxplot(populacao)","cd7dfd0f":"n, bins, patches = plt.hist(np.log(populacao), density=True, facecolor='g', alpha=0.75, bins=50)\n\n\nplt.title('O log da var aleat\u00f3ria logonormal tem distribui\u00e7\u00e3o normal')\nplt.xlabel('Valores')\nplt.ylabel('Probabilidade')\nplt.grid(True)\nplt.show()","765e5318":"plt.plot(populacao,'.')\n\nplt.xlabel('Amostra')\nplt.ylabel('Valor')\nplt.title('Distribui\u00e7\u00e3o logonormal')\nplt.grid(True)\nplt.show()","ed133d15":"# Gera\u00e7\u00e3o da popula\u00e7\u00e3o, esta parte \u00e9 desconhecida para o estat\u00edstico\n\nlancamentos = 30\nrepeticoes = 100000\nnp.random.seed(1)\npopulacao = np.random.binomial(30, 1\/4, size=repeticoes)\n\n","9c0ebcdd":"# Estat\u00edstica descritiva da popula\u00e7\u00e3o\n\nprobabilidades,_ = np.histogram(a=populacao, density=True, bins=range(0,31,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,30,1),probabilidades, facecolor='g', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()\n\nprint('M\u00e9dia: {}'.format(np.mean(populacao)))\nprint('Probabilidade Cara: {}'.format(np.mean(populacao)\/lancamentos))","21e92303":"# Amostra de 1% da popula\u00e7\u00e3o\namostra = populacao[np.random.randint(0, len(populacao),int(0.01*repeticoes))]","6b5f2eac":"# Estat\u00edstica descritiva da amostra\n\nprobabilidades,_ = np.histogram(a=amostra, density=True, bins=range(0,31,1))\n\n#n, bins, patches = plt.hist(resultado, density=True, facecolor='g', alpha=0.75, bins=range(0,31,1))\nplt.bar(range(0,30,1),probabilidades, facecolor='g', alpha=0.75)\n\nplt.xlabel('# Caras')\nplt.ylabel('Probability')\nplt.title('Histogram Moeda')\nplt.grid(True)\nplt.show()\n\nprint('M\u00e9dia: {}'.format(np.mean(amostra)))\nprint('Probabilidade Cara: {}'.format(np.mean(amostra)\/lancamentos))","be5791dd":"\nrepeticoes = 100000\nmean = 5\nnp.random.seed(1)\n\n# Popula\u00e7\u00e3o lognormal\ns = 0.8\nrv_lognorm = stat.lognorm(s=s,loc=mean-1.3)\npopulacao_lognorm = rv_lognorm.rvs(size=repeticoes, random_state=random_state)\n\n# Popula\u00e7\u00e3o normal\nstd = 1.3\nrv_norm = stat.norm(loc=mean, scale=std)\npopulacao_norm = rv_norm.rvs(size=repeticoes, random_state=random_state)\n\n","77b2a5c2":"\n\n\n\nfig, axs = plt.subplots(1, 2, figsize=(14,6))\n\naxs[0].plot(populacao_lognorm,'.')\naxs[0].grid(True)\naxs[0].set_title('populacao_lognorm')\n\naxs[1].plot(populacao_norm,'.')\naxs[1].grid(True)\naxs[1].set_title('populacao_norm')\n\nplt.show()","30651103":"print('\\nPopula\u00e7\u00e3o lognormal: \\nm\u00e9dia {}, \\ndesvio padr\u00e3o {}, \\nmoda {}, \\nmediana {}, \\nCurtose {}, \\nSimetria {}'.format(\n    np.mean(populacao_lognorm), \n    np.std(populacao_lognorm),\n    stat.mode(populacao_lognorm),\n    np.median(populacao_lognorm),\n    stat.kurtosis(populacao_lognorm),\n    stat.skew(populacao_lognorm)\n))","d50e41ce":"print('\\nPopula\u00e7\u00e3o normal: \\nm\u00e9dia {}, \\ndesvio padr\u00e3o {}, \\nmoda {}, \\nmediana {}, \\nCurtose {}, \\nSimetria {}'.format(\n    np.mean(populacao_norm), \n    np.std(populacao_norm),\n    stat.mode(populacao_norm),\n    np.median(populacao_norm),\n    stat.kurtosis(populacao_norm),\n    stat.skew(populacao_norm)\n))","f165d761":"fig, axs = plt.subplots(1, 2, figsize=(14,6))\n\naxs[0].hist(populacao_lognorm, density=True, facecolor='black', alpha=0.75, bins=50)\naxs[0].grid(True)\naxs[0].set_title('populacao_lognorm')\naxs[0].set_xlabel('Idade')\naxs[0].set_ylabel('Propor\u00e7\u00e3o')\n\naxs[1].hist(populacao_norm, density=True, facecolor='black', alpha=0.75, bins=50)\naxs[1].grid(True)\naxs[1].set_title('populacao_norm')\naxs[1].set_xlabel('Idade')\naxs[1].set_ylabel('Propor\u00e7\u00e3o')\n\nplt.show()","69864194":"dados = np.concatenate((populacao_lognorm, populacao_norm), 0)\ndados = np.reshape(dados,(2,repeticoes))\ndados = dados.T\n","b5524483":"fig, axs = plt.subplots(1, 1, figsize=(10,6))\n_ = plt.boxplot(dados,vert =False, labels =['lognorm','norm'], meanline =True)\nplt.title('Boxplot')","565df4cb":"from statsmodels.graphics.gofplots import qqplot\n\nfig, axs = plt.subplots(1, 2, figsize=(14,6))\n\nqqplot(populacao_lognorm, line='s', ax=axs[0])\naxs[0].set_title('populacao_lognorm')\n\nqqplot(populacao_norm, line='s', ax=axs[1])\naxs[1].set_title('populacao_norm')\n\nplt.show()\n\n","5390d0a9":"repeticoes = 100000\nmean = 5\n\n# Popula\u00e7\u00e3o lognormal\ns = 0.8\nrv_lognorm = stat.lognorm(s=s,loc=mean-1.3)\npopulacao_lognorm = rv_lognorm.rvs(size=repeticoes, random_state=random_state)\n\namostra_1000 = populacao_lognorm[np.random.randint(0, len(populacao_lognorm),1000)]\namostra_100 = populacao_lognorm[np.random.randint(0, len(populacao_lognorm),100)]\namostra_10 = populacao_lognorm[np.random.randint(0, len(populacao_lognorm),10)]\n\nprint('Desvios real {}\\n'.format(rv_lognorm.std()))\n\nprint('\\nDesvios amostra 1000 sem corre\u00e7\u00e3o {}'.format(np.std(amostra_1000)))\nprint('Desvios amostra 1000 com corre\u00e7\u00e3o {}'.format(np.std(amostra_1000, ddof =1)))\n\nprint('\\nDesvios amostra 100 sem corre\u00e7\u00e3o {}'.format(np.std(amostra_100)))\nprint('Desvios amostra 100 com corre\u00e7\u00e3o {}'.format(np.std(amostra_100, ddof =1)))\n\nprint('\\nDesvios amostra 10 sem corre\u00e7\u00e3o {}'.format(np.std(amostra_10)))\nprint('Desvios amostra 10 com corre\u00e7\u00e3o {}'.format(np.std(amostra_10, ddof =1)))","3afcab11":"# Vamos criar uma popula\u00e7\u00e3o distribu\u00edda de forma lognormal\n\n\nrepeticoes = 100000\nmean = 50\n\n# Popula\u00e7\u00e3o lognormal\ns = 0.9\nnp.random.seed(1)\nrv_lognorm = stat.lognorm(s=s,loc=mean)\npopulacao_lognorm = rv_lognorm.rvs(size=repeticoes, random_state=random_state)\n\nescolhas = [0,1]\nsexo_doadores = random.choices(population=escolhas, weights=[6\/10,4\/10], k=repeticoes)\nsexo_doadores = np.asarray(sexo_doadores, dtype=np.int)\n\n\n","2006d11f":"\n\n\nprint('M\u00ednimo {}'.format(np.min(populacao_lognorm)))\nprint('M\u00e1ximo {}'.format(np.max(populacao_lognorm)))\nprint('M\u00e9dia {}'.format(np.mean(populacao_lognorm)))\nprint('Desvio {}'.format(np.std(populacao_lognorm)))\nprint('Var {}'.format(np.var(populacao_lognorm)))\n\nfig, axs = plt.subplots(1, 1, figsize=(14,6))\n\naxs.hist(populacao_lognorm, density=False, facecolor='black', alpha=0.75, bins=100)\naxs.set_xlabel('Valor doa\u00e7\u00e3o')\naxs.set_ylabel('Quantidade')\naxs.grid(True)\naxs.set_title('Doa\u00e7\u00f5es')\n\n\nplt.show()","50a61b25":"\np = np.sum(sexo_doadores)\/repeticoes\np","458b04a1":"p*(1-p)","bec63163":"np.var(sexo_doadores)","cfaefe2d":"tamanho_amostra = 1000\nselecionados = np.random.randint(0, len(populacao_lognorm),tamanho_amostra)\n","3cadb56b":"\namostra_sexo_doadores = sexo_doadores[selecionados]\nnp.sum(amostra_sexo_doadores)\/tamanho_amostra","f29ad224":"\namostra = populacao_lognorm[selecionados]\nprint('M\u00ednimo {}'.format(np.min(amostra)))\nprint('M\u00e1ximo {}'.format(np.max(amostra)))\nprint('M\u00e9dia {}'.format(np.mean(amostra)))\nprint('Desvio {}'.format(np.std(amostra)))\nprint('Desvio {}'.format(np.std(amostra, ddof =1)))\nprint('Var {}'.format(np.var(amostra, ddof =1)))\n\nprint('Raiz tamanho {}'.format(np.sqrt(tamanho_amostra)))\nprint('Desvio \/ Raiz tamanho {}'.format(np.std(amostra, ddof =1)\/np.sqrt(tamanho_amostra)))","e3f9a34a":"# Vamos extrair 1000 amostras e calcular suas m\u00e9dias\namostras = 1000\ntamanho_amostra = 300\nnp.random.seed(1)\nmedias = np.zeros((amostras,1))\nvariancias= np.zeros((amostras,1))\nqtd_sexo_masculino= np.zeros((amostras,1))\npercentuais = np.zeros((amostras,1))\nfor i in range(0,amostras,1):\n    medias[i]=np.mean(populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\n    percentuais[i] = np.sum(sexo_doadores[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\/tamanho_amostra\n    qtd_sexo_masculino[i] = np.sum(sexo_doadores[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\n    variancias[i]=np.var(populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\n","d9508828":"# A distribui\u00e7\u00e3o das m\u00e9dias aproxima-se de uma Normal, independente da distribui\u00e7\u00e3o original que gerou as amostras\nfrom scipy.stats import norm\nn, bins, patches = plt.hist(medias, density=True, facecolor='black', alpha=0.75, bins=50)\n\nmean_ = np.mean(medias)\nstd_ = np.std(medias)\nprint('M\u00e9dia das m\u00e9dias das amostras {}'.format(mean_))\nprint('Desvio das m\u00e9dias das amostras {}'.format(std_))\n\nrv = norm(loc=mean_, scale=std_)\n\nintervalo = np.linspace(mean_-3*std_,mean_+3*std_, num=50)\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\n\nplt.xlabel('M\u00e9dia da amostra')\nplt.ylabel('Probabilidade')\nplt.title('Histogram de m\u00e9dias')\nplt.grid(True)\nplt.show()","ab75ea99":"def calcula_Z_normal(confianca):\n    mean = 0\n    std = 1\n    rv = norm(loc=mean, scale=std)\n    return rv.interval(confianca)[1]\n\ndef calcula_Z_tstudent(confianca, tamanho_amostra):\n    mean = 0\n    std = 1\n    rv = t(df=(tamanho_amostra-1))\n    return rv.interval(confianca)[1]\n\ncalcula_Z_normal(0.99)","c480bdaf":"from scipy.stats import norm\nn, bins, patches = plt.hist(variancias, density=True, facecolor='black', alpha=0.75, bins=50)\n\nmean_ = np.mean(variancias)\nstd_ = np.std(variancias)\nprint('M\u00e9dia das variancias {}'.format(mean_))\nprint('Desvio das variancias {}'.format(std_))\n\nrv = norm(loc=mean_, scale=std_)\n\nintervalo = np.linspace(mean_-3*std_,mean_+3*std_, num=50)\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\n\nplt.xlabel('Variancias')\nplt.ylabel('Probabilidade')\nplt.title('Histogram de m\u00e9dias')\nplt.grid(True)\nplt.show()","1a9abeb4":"# A distribui\u00e7\u00e3o das m\u00e9dias aproxima-se de uma Normal, independente da distribui\u00e7\u00e3o original que gerou as amostras\nfrom scipy.stats import norm\nn, bins, patches = plt.hist(percentuais, density=True, facecolor='black', alpha=0.75, bins=50)\n\nmean_ = np.mean(percentuais)\nstd_ = np.std(percentuais)\nprint('M\u00e9dia das propor\u00e7\u00f5es das amostras {}'.format(mean_))\nprint('Desvio das propor\u00e7\u00f5es das amostras {}'.format(std_))\n\nrv = norm(loc=mean_, scale=std_)\n\nintervalo = np.linspace(mean_-3*std_,mean_+3*std_, num=50)\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\n\nplt.xlabel('Propor\u00e7\u00f5es nas amostras')\nplt.ylabel('Probabilidade')\nplt.title('Histogram de propor\u00e7\u00f5es')\nplt.grid(True)\nplt.show()","ece6d50a":"from scipy.stats import norm\nn, bins, patches = plt.hist(qtd_sexo_masculino, density=True, facecolor='black', alpha=0.75, bins=50)\n\nmean_ = np.mean(qtd_sexo_masculino)\nstd_ = np.std(qtd_sexo_masculino)\nprint('M\u00e9dia das qtd_sexo_masculino {}'.format(mean_))\nprint('Desvio das qtd_sexo_masculino {}'.format(std_))\n\nrv = norm(loc=mean_, scale=std_)\n\nintervalo = np.linspace(mean_-3*std_,mean_+3*std_, num=50)\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\n\nplt.xlabel('qtd_sexo_masculino')\nplt.ylabel('Probabilidade')\nplt.title('Histogram de propor\u00e7\u00f5es')\nplt.grid(True)\nplt.show()","cde23b8b":"mean_ = np.mean(medias)\nstd_ = np.std(medias)\nprint('M\u00e9dia das m\u00e9dias das amostras {}'.format(mean_))\nprint('Desvio das m\u00e9dias das amostras {}'.format(std_))\nprint('Dois desvios {}'.format(2*std_))\n\nprint('Intervalo de 95,45% de confian\u00e7a {} - {}'.format(mean_-2*std_,mean_+2*std_))","5bf7da1a":"np.random.seed(1)\nfor i in range(0,10,1):\n    print('M\u00e9dia da amostra {}: {}'.format(i,\n                                np.mean(populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])))","ed0b19d5":"np.random.seed(1)\ntamanho_amostra = 1000\nstd_ = np.std(populacao_lognorm)\/np.sqrt(tamanho_amostra)\nprint('Tamanho amostra {}, margem de erro considerando dois desvios {}, m\u00e9dia real da popula\u00e7\u00e3o {}'.format(tamanho_amostra,2*std_, np.mean(populacao_lognorm)))\n# Vamos capturar 10 amostras da popula\u00e7\u00e3o\nfor i in range(0,10,1):\n    # Para cada amostra i calculamos a m\u00e9dia\n    media_i = np.mean(populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\n    print('Amostra {}, m\u00e9dia {}, com margem de erro de dois desvios, a m\u00e9dia da popula\u00e7\u00e3o estar\u00e1 entre {} e {} com 95% de chance'.format(i,\n                                                                    media_i,\n                                                                   media_i-2*std_,\n                                                                   media_i+2*std_))","39ee4616":"np.random.seed(1)\ntamanho_amostra = 100\nstd_ = np.std(populacao_lognorm)\/np.sqrt(tamanho_amostra)\nprint('Tamanho amostra {}, margem de erro considerando dois desvios {}, m\u00e9dia real da popula\u00e7\u00e3o {}'.format(tamanho_amostra,2*std_, np.mean(populacao_lognorm)))\n# Vamos capturar 10 amostras da popula\u00e7\u00e3o\nfor i in range(0,10,1):\n    # Para cada amostra i calculamos a m\u00e9dia\n    media_i = np.mean(populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)])\n    print('Amostra {}, m\u00e9dia {}, com margem de erro de dois desvios, a m\u00e9dia da popula\u00e7\u00e3o estar\u00e1 entre {} e {} com 95% de chance'.format(i,\n                                                                    media_i,\n                                                                   media_i-2*std_,\n                                                                   media_i+2*std_))","f2763db0":"np.random.seed(1)\ntamanho_amostra = 100\namostra_100_elementos = populacao_lognorm[np.random.randint(0, len(populacao_lognorm),tamanho_amostra)]\nprint('M\u00e9dia amostra (estima a m\u00e9dia da popula\u00e7\u00e3o) {}'.format(np.mean(amostra_100_elementos)))\nprint('Desvio amostra (estima o desvio da popula\u00e7\u00e3o) {}'.format(np.std(amostra_100_elementos)))\nprint('Desvio estimado da m\u00e9dia das amostras (desvio da popula\u00e7\u00e3o\/raiz(tamanho amostra)) {}'.format(np.std(amostra_100_elementos)\/np.sqrt(tamanho_amostra)))\nprint('Margem erro (considerando dois desvios para a confian\u00e7a de 95%) {}'.format(2*np.std(amostra_100_elementos)\/np.sqrt(tamanho_amostra)))\n\n\n# o desvio padr\u00e3o das m\u00e9dias das amostras \u00e9 desvio da popula\u00e7\u00e3o \/ sqrt(samples)\n","d939db01":"from scipy.stats import norm\n\n\ndef calcula_numero_desvios_normal_para_confianca(confianca):\n    mean = 0\n    std = 1\n    rv = norm(loc=mean, scale=std)\n    return rv.interval(confianca)[1]","59ddfcd1":"calcula_numero_desvios_normal_para_confianca(0.9545)","7dd327c5":"calcula_numero_desvios_normal_para_confianca(0.99)","a5661513":"from scipy.stats import t\n\n\ndef calcula_numero_desvios_tstudent_para_confianca(confianca, tamanho_amostra):\n    mean = 0\n    std = 1\n    rv = t(df=(tamanho_amostra-1))\n    return rv.interval(confianca)[1]","f73ef2dd":"calcula_numero_desvios_tstudent_para_confianca(0.9545, 100)","116c466d":"calcula_numero_desvios_tstudent_para_confianca(0.99, 100)","32f7ded6":"from scipy.stats import norm\n\n\nmean = 16\nstd = 4\nrvNordeste = norm(loc=mean, scale=std)\n\nmean = 31\nstd = 4\nrvSudeste = norm(loc=mean, scale=std)\n\n\nproporcao_Nordeste = 28\/(28+42)\npopulacaoNordeste = rvNordeste.rvs(size=int(proporcao_Nordeste*100000), random_state=random_state)\nprint('M\u00e9dia {}'.format(np.mean(populacaoNordeste)))\nprint('Desvio {}'.format(np.std(populacaoNordeste)))\nprint('Tamanho {}'.format(len(populacaoNordeste)))\n\n\nproporcao_Sudeste = 42\/(28+42)\npopulacaoSudeste = rvSudeste.rvs(size=int(proporcao_Sudeste*100000), random_state=random_state)\nprint('M\u00e9dia {}'.format(np.mean(populacaoSudeste)))\nprint('Desvio {}'.format(np.std(populacaoSudeste)))\nprint('Tamanho {}'.format(len(populacaoSudeste)))\n\npopulacaoBrasil = np.concatenate((populacaoNordeste,populacaoSudeste))\nnp.random.shuffle(populacaoBrasil)\n\nfig, axs = plt.subplots(1, 1, figsize=(14,6))\n\naxs.hist(populacaoBrasil, density=True, facecolor='g', alpha=0.75, bins=100)\naxs.grid(True)\naxs.set_title('Distribui\u00e7\u00e3o Brasil')\n\n\nplt.show()\n\nprint('M\u00e9dia {}'.format(np.mean(populacaoBrasil)))\nprint('Desvio {}'.format(np.std(populacaoBrasil)))\nprint('Tamanho {}'.format(len(populacaoBrasil)))","d7b9ea81":"amostras = 1000\ntamanho_amostra = 100\nnp.random.seed(1)\nmedias = np.zeros((amostras,1))\nfor i in range(0,amostras,1):\n    medias[i]=np.mean(populacaoBrasil[np.random.randint(0, len(populacaoBrasil),tamanho_amostra)])","72089edb":"# A distribui\u00e7\u00e3o das m\u00e9dias aproxima-se de uma Normal, independente da distribui\u00e7\u00e3o original que gerou as amostras\n\nn, bins, patches = plt.hist(medias, density=True, facecolor='g', alpha=0.75, bins=50)\n\nmean_ = np.mean(medias)\nstd_ = np.std(medias)\nprint('M\u00e9dia {}'.format(mean_))\nprint('Desvio {}'.format(std_))\n\nrv = norm(loc=mean_, scale=std_)\n\nintervalo = np.linspace(mean_-3*std_,mean_+3*std_, num=50)\nplt.plot(intervalo, rv.pdf(intervalo), 'k-', label='pdf')\n\nplt.xlabel('M\u00e9dia')\nplt.ylabel('Probabilidade')\nplt.title('Histogram de m\u00e9dias')\nplt.grid(True)\nplt.show()","1dda0894":"np.random.seed(1)\namostra_1 = populacaoBrasil[np.random.randint(0, len(populacaoBrasil),tamanho_amostra)]\nmedia_1 =np.mean(amostra_1)\nstd_1 =np.std(amostra_1)\n\nprint('M\u00e9dia {}'.format(media_1))\nprint('Desvio {}'.format(std_1))\nprint('Desvio corrigido {}'.format(std_1\/np.sqrt(tamanho_amostra)))\nprint('O valor real estar\u00e1 entre {} e {}'.format(media_1-2*std_1\/np.sqrt(tamanho_amostra),\n                                                media_1+2*std_1\/np.sqrt(tamanho_amostra)))","0d62dbbf":"np.random.seed(2)\namostra_Nordeste = populacaoNordeste[np.random.randint(0, len(populacaoNordeste),40)]\nmedia_Nordeste =np.mean(amostra_Nordeste)\nstd_Nordeste =np.std(amostra_Nordeste)\n\nprint('M\u00e9dia {}'.format(media_Nordeste))\nprint('Desvio {}'.format(std_Nordeste))\nprint('Desvio corrigido {}'.format(std_Nordeste\/np.sqrt(40)))\nmin_Nordeste = media_Nordeste-2*std_Nordeste\/np.sqrt(40)\nmax_Nordeste = media_Nordeste+2*std_Nordeste\/np.sqrt(40)\nprint('O valor real estar\u00e1 entre {} e {}'.format(min_Nordeste,max_Nordeste\n                                                ))","2ec04f3f":"np.random.seed(2)\namostra_Sudeste = populacaoSudeste[np.random.randint(0, len(populacaoSudeste),60)]\nmedia_Sudeste =np.mean(amostra_Sudeste)\nstd_Sudeste =np.std(amostra_Sudeste)\n\nprint('M\u00e9dia {}'.format(media_Sudeste))\nprint('Desvio {}'.format(std_Sudeste))\nprint('Desvio corrigido {}'.format(std_Sudeste\/np.sqrt(60)))\nmin_Sudeste = media_Sudeste-2*std_Sudeste\/np.sqrt(60)\nmax_Sudeste = media_Sudeste+2*std_Sudeste\/np.sqrt(60)\nprint('O valor real estar\u00e1 entre {} e {}'.format(min_Sudeste,max_Sudeste\n                                                ))","975a6949":"print(min_Nordeste*proporcao_Nordeste + min_Sudeste*proporcao_Sudeste)\nprint(max_Nordeste*proporcao_Nordeste + max_Sudeste*proporcao_Sudeste)","bf9ae2b2":"repeticoes = 1000\n\n# Popula\u00e7\u00e3o normal\nmean = 5\nstd = 1.3\nrv_norm = stat.norm(loc=mean, scale=std)\npopulacao_norm = rv_norm.rvs(size=repeticoes, random_state=random_state)\n\nfig, axs = plt.subplots(1, 1, figsize=(10,6))\n_ = plt.boxplot(populacao_norm,vert =False, meanline =True)","11cb7ef8":"media = np.mean(populacao_norm)\nstd = np.std(populacao_norm)\n\nprint('M\u00e9dia {}, STD {}'.format(media,std))\n\noutliers1 = np.where(populacao_norm > (media+3*std))\noutliers2 = np.where(populacao_norm < (media-3*std))\n\noutliers = np.concatenate( (outliers1,outliers2), axis=1)\n\npopulacao_norm[outliers]","c49ccbea":"q25, q75 = np.percentile(populacao_norm, 25), np.percentile(populacao_norm, 75)\n\niqr= q75 - q25\n\noutliers1 = np.where(populacao_norm > (q75+1.5*iqr))\noutliers2 = np.where(populacao_norm < (q25-1.5*iqr))\n\noutliers = np.concatenate( (outliers1,outliers2), axis=1)\n\npopulacao_norm[outliers]","438daa94":"if IN_KAGGLE:\n    df_original = pd.read_csv(\"..\/input\/2017.csv\")\nelse:\n    df_original = pd.read_csv(\"2017.csv\")\n    \n\ndf_original.head(2)","5ab20802":"df = df_original.loc[:,[  'Happiness.Score',  'Economy..GDP.per.Capita.', 'Family',\n       'Health..Life.Expectancy.', 'Freedom', 'Generosity',\n       'Trust..Government.Corruption.','Dystopia.Residual']]","1ca3f2e3":"fig, axs = plt.subplots(1, 1, figsize=(10,6))\n_ = plt.boxplot(df.T,vert =False, meanline =True)","9d702747":"populacao_norm = df.Family.values\n\nq25, q75 = np.percentile(populacao_norm, 25), np.percentile(populacao_norm, 75)\n\niqr= q75 - q25\n\noutliers1 = np.where(populacao_norm > (q75+1.5*iqr))\noutliers2 = np.where(populacao_norm < (q25-1.5*iqr))\n\noutliers = np.concatenate( (outliers1,outliers2), axis=1)\n\ndf_original.Country[outliers[0]]","cb3c4e97":"media = np.mean(populacao_norm)\nstd = np.std(populacao_norm)\n\nprint('M\u00e9dia {}, STD {}'.format(media,std))\n\noutliers1 = np.where(populacao_norm > (media+3*std))\noutliers2 = np.where(populacao_norm < (media-3*std))\n\noutliers = np.concatenate( (outliers1,outliers2), axis=1)\n\ndf_original.Country[outliers[0]]","37fe54b5":"# Gerando int - biblioteca python standard\nprint(random.randrange(100, 1000, 2))\nprint(random.randint(100, 1000))\n\n# Gerando int - biblioteca numpy\nprint(np.random.randint(100, 1000,2))\n\n# Gerando float - biblioteca python standard\nprint(random.random())\nprint(random.uniform(100, 1000))\nprint(random.normalvariate(1, 1))\n\n# Gerando float - biblioteca numpy\nprint(np.random.random(5))\nprint(np.random.randn(5))\n\nnp.random.random_sample(size=100)","fa1622e5":"print(np.linspace(0.0,1.0,11))\nprint(np.arange(0.0,10.0,3))\nprint(np.logspace(0.0,10.0,3))\n","c9164a7b":"# Escolha com reposi\u00e7\u00e3o\n# usando numpy np.random.choice(10,size=10,replace=True)\n\n\nfaces = list(range(1,7))\nlancamentos = 600\npesos = [1\/6,1\/6,0.5\/6,0.5\/6,2\/6,1\/6]\nresultados = random.choices(population=faces, weights=pesos, k=lancamentos)\n#print(resultados)\nfor i in faces:\n    print('Face {}, peso {}, vezes {}'.format(i,pesos[i-1],resultados.count(i)))","e94fae4e":"# Escolha sem reposi\u00e7\u00e3o\n# usando numpy np.random.choice(10,size=10,replace=False)\n\n\nlista = list(range(1,7))\nrandom.sample(population=lista, k=len(lista))\n","7c52e9b8":"# Embaralhamento\n# usando numpy np.random.choices\n\nlista = list(range(1,7))\nrandom.shuffle(lista)\nlista","6406aa8b":"<font size=\"6\" color=\"red\">Conceitos de estat\u00edstica<\/font>","4d3871bc":"# Poisson","0d300a11":"## Teste de normalidade\n\nMuitos m\u00e9todos em estat\u00edstica partem do princ\u00edpio que a distribui\u00e7\u00e3o dos dados \u00e9 normal.\n\nPara que sejam usados com seguran\u00e7a \u00e9 importante testar os dados quanto \u00e0 normalidade.\n\nUma das formas mais efetivas \u00e9 o qqplot.\n\nFonte: https:\/\/machinelearningmastery.com\/a-gentle-introduction-to-normality-tests-in-python\/","860f858b":"<b>Popula\u00e7\u00e3o<\/b> \u00e9 o conjunto de dados representando todas as observa\u00e7\u00f5es poss\u00edveis, <b>amostra<\/b> \u00e9 o conjunto de dados representando apenas uma parte dessas observa\u00e7\u00f5es. \n\nValores calculados a partir da popula\u00e7\u00e3o s\u00e3o chamados par\u00e2metros populacionais. Quando esses mesmos valores s\u00e3o calculados a partir da amostra denominam-se estat\u00edsticas amostrais.\n\n<b>Infer\u00eancia estat\u00edstica<\/b> significa inferir fatos acerca de uma popula\u00e7\u00e3o a partir de resultados observados na amostra. \n\nQuando inferimos fatos sobre a popula\u00e7\u00e3o normalmente n\u00e3o apresentamos simplesmente o valor, informamos tamb\u00e9m nosso grau de certeza e o intervalo de confian\u00e7a (ex. pesquisa eleitoral)","c404cb8c":"<font size=\"6\" color=\"red\">Infer\u00eancia Estat\u00edstica<\/font>","6dda6bf6":"# Bernoulli","8ca4c5cc":"\n\nO teorema estabelece que a distribui\u00e7\u00e3o da soma de vari\u00e1veis aleat\u00f3rias <b>iid (independentes e identicamente distribu\u00eddas)<\/b> tende para uma distribui\u00e7\u00e3o normal, independente da distribui\u00e7\u00e3o original das vari\u00e1veis. (Fonte: https:\/\/en.wikipedia.org\/wiki\/Central_limit_theorem)\n\nPara compreender melhor o significado do teorema, vamos a um exemplo:","9d8eb468":"<font size=\"6\" color=\"red\">Conceito de Incerteza<\/font>","e974918b":"## Gerando n\u00fameros aleat\u00f3rios\n","99f57979":"## Probabilidade - Solu\u00e7\u00e3o anal\u00edtica - Probabilidades simples\n\nO c\u00e1lculo das probabilidades de eventos complexos pode ser feito de maneira anal\u00edtica, considerando as probabilidades simples.\n\nNo exemplo do lan\u00e7amento de moedas, a probabilidade de obtermos m caras em n lan\u00e7amentos (considerando uma moeda honesta) \u00e9 dada por:\n\nP(n,m) = Combina\u00e7\u00e3o(n,m) x 0,5^m x 0,5^(n-m)\n\nConsiderando 30 lan\u00e7amentos (n=30), vamos calcular a probabilidade de obtermos m caras: ","4602465c":"A an\u00e1lise do gr\u00e1fico n\u00e3o permite visualizar o relacionamento entre as vari\u00e1veis (no caso w e x).\n\nA matriz de correla\u00e7\u00e3o sugere a exist\u00eancia de depend\u00eancia entre as vari\u00e1veis de entrada (x,y,z) e sa\u00edda (w).\n\nPor\u00e9m, a defini\u00e7\u00e3o correta das rela\u00e7\u00f5es \u00e9 de dif\u00edcil concep\u00e7\u00e3o sem uso de machine learning.\n\nUsando somente probabilidade, podemos caracterizar a distribui\u00e7\u00e3o de probabilidade dos valores de w como uma normal de m\u00e9dia 0,1 e desvio padr\u00e3o de 0,3","e96c26e2":"# Distribui\u00e7\u00f5es cont\u00ednuas\n\nExponencial - tempo decorrido entre chamadas de um call center, com taxa de chamadas constante.\n\nWeibull - tempo at\u00e9 falha, quando a taxa de falha n\u00e3o \u00e9 constante no tempo.\n\nChi2 - soma de quadrados de valores normalmente distribu\u00eddos\n\nGama - tempo at\u00e9 n eventos ocorrerem\n\nNormal (Gaussiana) - soma de vari\u00e1veis aleat\u00f3rias\n\nLog-normal - utilizada quando o logar\u00edtmo dos valores \u00e9 distribu\u00eddo segundo a normal. Produto de vari\u00e1veis aleat\u00f3rias\n\nUniform","cee42f23":"<font size=\"6\" color=\"red\">Outliers<\/font>\n\nOutliers s\u00e3o medidas que se afastam das demais medidas de um conjunto.\n\nPodem derivar de erros de medi\u00e7\u00e3o ou se tratar de eventos raros.\n\nEm ambos os caso merecem aten\u00e7\u00e3o, ou para que sejam corrigidos, no caso de erro, ou para verificar a origem de tais eventos raros.\n\nResumidamente podemos usar duas t\u00e9cnicas para localiza\u00e7\u00e3o de Outliers: desvio padr\u00e3o e percentis.\n\nIndependente da t\u00e9cnica, a plotagem de um gr\u00e1fico boxplot \u00e9 \u00fatil para verificarmos sua presen\u00e7a.\n","c7197cb1":"# Probabilidade - Conceitos\n\nEvento \u00e9 um sub conjunto qualquer do espa\u00e7o amostral, por exemplo, o resultado do lan\u00e7amento do dado der valores 1 ou 2.\n\nA probabilidade do evento \u00e9 a soma das probabilidades dos pontos do conjunto\n\nA probabilidade da uni\u00e3o de dois eventos (OU), ex. probabilidade do dado dar resultado maior que 5 OU menor que 2, \u00e9 a soma das probabilidades dos dois eventos menos a probabilidade da interse\u00e7\u00e3o. Se os eventos s\u00e3o independentes, basta somar as probabilidades.\n\nA probabilidade da interse\u00e7\u00e3o de dois eventos (E), ex. probabilidade do dado dar resultado maior que 5 E menor que 2, \u00e9 a probabilidade do evento A, dado que B ocorreu, vezes a probabilidade do evento B Se os eventos s\u00e3o independentes, basta multiplicar as probabilidades.\n\n","87801554":"## Utilizando quartis","b53f17e8":"A an\u00e1lise das distribui\u00e7\u00f5es de frequ\u00eancia permite uma vis\u00e3o muito mais clara da configura\u00e7\u00e3o das popula\u00e7\u00f5es.","df15fbcc":"H\u00e1 processos estoc\u00e1sticos sobre os quais conhecemos as <b>probabilidades b\u00e1sicas<\/b>. \n\nComo exemplo temos o lan\u00e7amento de uma moeda, que, caso seja equilibrada, tem probabilidade de 0,5 para Cara e Coroa.\n\nNeste caso, usando as probabilidades b\u00e1sicas, podemos inferir o comportamento de eventos complexos. Por exemplo, a probabilidade de obtermos m caras em n lan\u00e7amentos.\n\nNessas condi\u00e7\u00f5es, utilizamos ferramentas de <font color=\"red\">an\u00e1lise probabil\u00edstica<\/font>.\n\nH\u00e1 situa\u00e7\u00f5es em que temos apenas dados gerados pelo processo estoc\u00e1stico (toda a popula\u00e7\u00e3o ou somente uma amostra), sem conhecer as probabilidades b\u00e1sicas que conduzem o processo. Por exemplo, temos o resultado de pesquisas eleitorais com pequenas parcelas da popula\u00e7\u00e3o. \n\nNesta situa\u00e7\u00e3o, usamos <font color=\"red\">an\u00e1lise estat\u00edstica<\/font> para analisar os dados (estat\u00edstica descritiva) e inferir as caracter\u00edsticas do processo (infer\u00eancia estat\u00edstica).\n\n","486e4bda":"Com base na amostra, calculamos que a probabilidade de Cara \u00e9 0,253, bem pr\u00f3xima da probabilidade real de 0,25.\n\nA quest\u00e3o a ser definida \u00e9 o quanto a informa\u00e7\u00e3o obtida na amostra est\u00e1 pr\u00f3xima da informa\u00e7\u00e3o da popula\u00e7\u00e3o e qual tamanho da amostra \u00e9 necess\u00e1rio para termos confi\u00e2n\u00e7a sobre nossas conclus\u00f5es. Para isso, temos que entender o <b>Teorema do Limite Central<\/b>.\n\nAntes, por\u00e9m, vamos estudar a estat\u00edstica descritiva. Ap\u00f3s, no estudo da infer\u00eancia estat\u00edstica, veremos o teorema.","fc31beae":"### BoxPlot\n\nO BoxPlot traz as seguintes marcas:\n\n-Caixa definida pelo primeiro quartil, mediana e terceiro quartil\n\n-Fios alongados para al\u00e9m da caixa na dist\u00e2ncia 1,5 X (Q3 - Q1). Para distribui\u00e7\u00f5es n\u00e3o sim\u00e9tricas, as medidas inferior e superior do fio s\u00e3o ajustadas, com multiplicadores distintos da rela\u00e7\u00e3o anterior. Nesses casos, os fios n\u00e3o s\u00e3o sim\u00e9tricos em rela\u00e7\u00e3o \u00e0 caixa (Detalhes em https:\/\/en.wikipedia.org\/wiki\/Box_plot).\n\n-Outliers marcados al\u00e9m da extens\u00e3o do fio","87cf0d96":"Os exemplos acima consideraram uma amostra de 1000, correspondente a 1% da popula\u00e7\u00e3o, uma amostra relativamente grande.\n\nVamos diminuir nossa amostra para 100 e ver o impacto no grau de confi\u00e2n\u00e7a e margem de erro:\n","bd615e83":"## Intervalo de confian\u00e7a\n\nConforme previsto pelo teorema do limite central, a distribui\u00e7\u00e3o das m\u00e9dias das amostras (considerando que a m\u00e9dia \u00e9 uma soma de vari\u00e1veis aleat\u00f3rias dividida pelo n\u00famero de elementos) tende para a distribui\u00e7\u00e3o normal.\n\nAl\u00e9m disso, a m\u00e9dia dessa distribui\u00e7\u00e3o tende para a m\u00e9dia da popula\u00e7\u00e3o.\n\nPerceba que, apesar da distribui\u00e7\u00e3o original das amostras ter distribui\u00e7\u00e3o completamente diferente da normal, as m\u00e9dias das amostras tendem \u00e0 normal.\n\nUma consequ\u00eancia extremamente importante do teorema \u00e9 que, dada a distribui\u00e7\u00e3o normal, tem-se que, com 95,45% de certeza, a m\u00e9dia de qualquer amostra estar\u00e1 a dois desvios padr\u00e3o da m\u00e9dia da popula\u00e7\u00e3o.\n\nNo exemplo em quest\u00e3o, teremos:","0882e3b0":"Se voc\u00ea tem um processo determin\u00edstico com regras **conhecidas**, n\u00e3o usar\u00e1.\n\nSe voc\u00ea tem um processo determin\u00edstico cujas regras n\u00e3o conhece, pode usar estat\u00edstica descritiva para conhecer melhor o processo e depreender suas regras.\n\nPode ser tamb\u00e9m que o processo seja determin\u00edstico, mas a obten\u00e7\u00e3o das regras seja t\u00e3o complexa que seja prefer\u00edvel trat\u00e1-lo como um processo estoc\u00e1stico.\n\nSe voc\u00ea tem um processo estoc\u00e1stico (aleat\u00f3rio), com certeza usar\u00e1.\n","1f6e0501":"## Probabilidade - Solu\u00e7\u00e3o num\u00e9rica - Simula\u00e7\u00e3o\n\nO c\u00e1lculo das probabilidades de eventos complexos pode ser bastante dif\u00edcil considerando a solu\u00e7\u00e3o anal\u00edtica. Solu\u00e7\u00f5es anal\u00edticas envolvem o conhecimento de an\u00e1lise combinat\u00f3ria e probabilidade.\n\nEm casos em que n\u00e3o sabemos ou n\u00e3o queremos recorrer \u00e0 solu\u00e7\u00e3o anal\u00edtica, podemos usar simula\u00e7\u00f5es computacionais para chegarmos aos mesmos resultados. Tais c\u00e1lculos s\u00e3o chamados simula\u00e7\u00f5es de Monte-Carlo.\n\nNeste caso, a probabilida \u00e9 estimada pela frequ\u00eancia de ocorr\u00eancias.\n\nVamos resolver o problema anterior (n\u00famero de caras em 30 lan\u00e7amentos) simplesmente simulando e estimando as probabilidades:","53dc61eb":"H\u00e1 processos que s\u00e3o descritos de forma precisa, por equa\u00e7\u00f5es anal\u00edticas.\n\nExemplo: acelera\u00e7\u00e3o de um corpo submetido a uma for\u00e7a\na = F\/m\n\nConseguimeos determinar precisamente a acelera\u00e7\u00e3o do corpo de acordo com F e m\n\nNeste caso n\u00e3o h\u00e1 necessidade de utilizar probabilidade ou estat\u00edstica\n\nVamos ao exemplo:","ad3f38f5":"## Gerando n\u00fameros n\u00e3o aleat\u00f3rios","8e4fb178":"## Embaralhamento","a4af0083":"## Mantendo a reprodutibilidade dos resultados\n\nAntes da gera\u00e7\u00e3o de n\u00fameros aleat\u00f3rios \u00e9 importante inicializar o gerador de n\u00fameros para que os resultados sejam os mesmos","9d8f1d47":"## Probabilidade - Contagem\n\nO c\u00e1lculo das probabilidades de eventos complexos pode ser feito de maneira anal\u00edtica em sua forma mais simples: contagem.\n\nNo exemplo do lan\u00e7amento de moedas, a probabilidade de obtermos 15 caras em 30 lan\u00e7amentos pode ser calculada dividindo o n\u00famero de eventos favor\u00e1veis pelo total de eventos poss\u00edveis. Para isso calculamos de quantas maneiras podemos obter 15 caras em 30 lan\u00e7amentos, dividindo pelo n\u00famero total de eventos poss\u00edveis em 30 lan\u00e7amentos:\n","4251e4b0":"Para obtermos o mesmo n\u00edvel de confian\u00e7a de 95.45%, a margem de erro cresce de 0.13 (1000 amostras) para 0,43 (100 amostras)","45133713":"## Fun\u00e7\u00f5es gerais usadas nos exemplos","b021e607":"\n\nEstat\u00edstica \u00e9 a ci\u00eancia que se dedica \u00e0 coleta, an\u00e1lise e interpreta\u00e7\u00e3o de dados (https:\/\/pt.wikipedia.org\/wiki\/Estat\u00edstica)\n\n\u00c9 utilizada quando n\u00e3o conhecemos as probabilidades b\u00e1sicas do processo estoc\u00e1stico em an\u00e1lise, temos apenas os dados gerados na execu\u00e7\u00e3o do processo.\n\nPor exemplo, no lan\u00e7amento de moeda n\u00e3o honesta, sobre a qual n\u00e3o conhecemos as probabilidades de Cara e Coroa, podemos registrar o resultado de n lan\u00e7amentos e realizar an\u00e1lise estat\u00edstica sobre esses dados.\n\nO ramo da estat\u00edstica que analisa, descreve e sumariza um conjunto de dados \u00e9 a **<b>estat\u00edstica descritiva<\/b>**.\n\n","221a1084":"## Mas n\u00e3o sabemos o desvio da popula\u00e7\u00e3o...\n\nComo, em geral, n\u00e3o sabemos o desvio padr\u00e3o da popula\u00e7\u00e3o, vamos aproxim\u00e1-lo com o desvio da amostra. Como o desvio da amostra aproxima o desvio da popula\u00e7\u00e3o, devemos, da mesma forma, dividi-la pela raiz(tamanho_amostra).\n\nAssim, a margem de erro ser\u00e1 calculada, para 95% de confian\u00e7a, como (2xdesvio_amostra\/raiz(tamanho_amostra))\n\nUm exemplo:","62ff3388":"### 1000 simula\u00e7\u00f5es","1190a655":"## Distribui\u00e7\u00e3o Log-Normal\n\nEm que pese a import\u00e2ncia da normal, muitos processos seguem distribui\u00e7\u00f5es exponenciais ou lognormais\n\nA log-normal \u00e9 particularmente interessante por duas propriedades:\n\n-Representa a distribui\u00e7\u00e3o da multiplica\u00e7\u00e3o de vari\u00e1veis aleat\u00f3rias\n\n-Representa a distribui\u00e7\u00e3o de vari\u00e1veis cujo log tem distribui\u00e7\u00e3o normal","edd63a87":"# Distribui\u00e7\u00f5es discretas\n\nBernoulli - distribui\u00e7\u00e3o que representa uma escolha bin\u00e1ria, com probabilidades p e 1-p. Como exemplo um lan\u00e7amento de uma moeda.\n\nBinomial - representa a soma de sucessos em n execu\u00e7\u00f5es de um processo bin\u00e1rio. Como exemplo o n\u00famero de caras em n lan\u00e7amentos de uma moeda. Outro exemplo \u00e9 o n\u00famero de bolas pretas retiradas de um cesto contendo bolas brancas e pretas (com reposi\u00e7\u00e3o).\n\nHipergeom\u00e9trica - representa a soma de bolas pretas retiradas de um cesto contendo bolas brancas e pretas (sem reposi\u00e7\u00e3o).\n\nPoisson - n\u00famero de chamdas recebidas num intervalo de tempo.\n\nDiscrete Uniform - cada ponto do espa\u00e7o tem igual probabilidade. Como exemplo o lan\u00e7amento de um dado.\n\nGeom\u00e9trica - n\u00famero de fracassos antes de um sucesso. Por exemplo, no lan\u00e7amento de moeda, o n\u00famero de coroas antes de uma cara.\n\nBinomial negativa - n\u00famero de fracassos antes de n sucessos\n\nUniform","8e894720":"# Exponencial","9d8b6141":"<font size=\"3\" color=\"blue\">Exerc\u00edcio: Vamos testar o efeito da segmenta\u00e7\u00e3o de uma popula\u00e7\u00e3o heterog\u00eanea no c\u00e1lculo da margem de erro<\/font>\n\nConsiderando o Brasil dividido somente em duas regi\u00f5es, vamos arbitrar a seguinte distribui\u00e7\u00e3o populacional: Sudeste 60% e Nordeste 40%\n\nSupondo que a distribui\u00e7\u00e3o de votos para candidatos seja normal.\n\nNo Sudeste o candidato X tem 31% dos votos com desvio 4. No Nordeste tem 16% com desvio tamb\u00e9m 4.\n\nConsidere a popula\u00e7\u00e3o total 100.000 pessoas.\n\nCrie duas distribui\u00e7\u00f5es normais representando a vota\u00e7\u00e3o do candidato em cada regi\u00e3o. Crie exemplos das distribui\u00e7\u00f5es at\u00e9 o total de 100.000 (respeitando as propor\u00e7\u00f5es das regi\u00f5es).\n\nCrie a populacao Brasil unindo as duas popula\u00e7\u00f5es e embaralhando.\n\nPlote o histograma dessa popula\u00e7\u00e3o calcul\u00e2ndo m\u00e9dia e desvio.\n\nObtenha uma amostra de 100 elementos. Calcule, com base na amostra, a margem de erro considerando o n\u00edvel de confi\u00e2n\u00e7a de 95,45%.\n\nObtenha uma amostra de 40 elementos da popula\u00e7\u00e3o do Nordeste e uma com 60 elementos da popula\u00e7\u00e3o do Sudeste. Calcule, com base nas amostras, a margem de erro considerando o n\u00edvel de confi\u00e2n\u00e7a de 95,45%. Una as duas amostras e calcule a margem de erro de toda a popula\u00e7\u00e3o.\n\nVerifique que, utilizando a pesquisa segmentada, a margem de erro \u00e9 menor que a da popula\u00e7\u00e3o sem segmenta\u00e7\u00e3o.","6fa05077":"## Distribui\u00e7\u00e3o t de Student\n\nQuando utilizado o desvio padr\u00e3o da amostra no lugar do desvio da popula\u00e7\u00e3o, o correto \u00e9 usar a distribui\u00e7\u00e3o t de Student no lugar da distribui\u00e7\u00e3o Normal para c\u00e1lculo do intervalo de confian\u00e7a.\n\nEntretanto, a distribui\u00e7\u00e3o t aproxima-se da Normal para amostras com mais de 30 elementos, por isso mantivemos a distribui\u00e7\u00e3o Normal nos c\u00e1lculos acima.\n\nNo exemplo seguinte, para 100 elementos na amostra (graus de liberdade = amostras-1), os valores s\u00e3o muito semelhantes aos obtidos para a Normal no exemplo acima.","0362a158":"<font size=\"6\" color=\"red\">Diferen\u00e7a entre estat\u00edstica e probabidade na pr\u00e1tica<\/font>","487baf38":"## Exemplo: An\u00e1lise estat\u00edstica sobre o n\u00famero de caras em n lan\u00e7amentos de Moeda\n\nO processo estoc\u00e1stico \u00e9 o lan\u00e7amento da moeda e a contagem no n\u00famero de caras em 30 lan\u00e7amentos\n\nSupomos que n\u00e3o conhecemos os par\u00e2metros do processo (qual probabilidade de cara\/coroa), temos apenas amostras","f2d14d07":"# Gama","af89df7a":"# Distribui\u00e7\u00e3o binomial","433b569f":"### 10000 simula\u00e7\u00f5es","cf8f47e2":"A rede neural conseguiu capturar corretamente o relacionamento n\u00e3o linear entre as vari\u00e1veis.\n","d8c49295":"### 100 simula\u00e7\u00f5es","29f546ad":"Neste exemplo n\u00e3o podemos garantir o resultado de nenhum lan\u00e7amento espec\u00edfico, podemos, por\u00e9m, verificar que temos aproximadamente 0,6 de probabilidade de cara e 0,4 de coroa. \n\nEmbora haja incerteza, conseguimos quantific\u00e1-la de alguma forma.\n\nNote que as propor\u00e7\u00f5es encontradas n\u00e3o s\u00e3o exatamente 60% e 40%. Isso porque, apesar de estabelecermos probabilidades para cara e coroa de 0,4 e 0,6, n\u00e3o h\u00e1 certeza em rela\u00e7\u00e3o a cada lan\u00e7amento. \u00c9 isso, justamente, que caracteriza um processo estoc\u00e1stico e o diferencia de um processo determin\u00edstico.\n\n","81c50f23":"Teoria matem\u00e1tica para c\u00e1lculo de probabilidade de eventos complexos considerando as probabilidades de eventos simples que formam o evento complexo.\n\nPor exemplo, o lan\u00e7amento de uma moeda \u00e9 um evento simples, com probabilidades conhecidas. O n\u00famero de caras obtidas em n  lan\u00e7amentos da mesma moeda \u00e9 um evento complexo, cujas probabilidades podem ser deduzidas levando-se em conta as probabilidades dos eventos simples. ","1b409911":"<font size=\"10\" color=\"black\">Introdu\u00e7\u00e3o \u00e0 Probabilidade e Estat\u00edstica<\/font>\n\nEduardo Chaves Ferreira","b077dcf5":"## Efeito da vari\u00e2ncia da popula\u00e7\u00e3o na margem de erro","39fce01f":"# t-Student","a95f14c9":"<font size=\"6\" color=\"red\">Anexo I - Fun\u00e7\u00f5es \u00dateis<\/font>","c469519f":"Analisando a popula\u00e7\u00e3o, conclu\u00edmos que a probabilidade b\u00e1sica da moeda gerar uma cara \u00e9 0,25.\n\nNormalmente n\u00e3o possu\u00edmos dados sobre toda a popula\u00e7\u00e3o (pode ser caro obter tais dados, o processo de amostragem ser destrutivo, n\u00e3o haver tempo para captura, etc). Neste caso temos que extrair uma amostra da popula\u00e7\u00e3o e, com base na an\u00e1lise da amostra, inferir conclus\u00f5es sobre toda a popula\u00e7\u00e3o:\n","85894a30":"## Margem de erro\n\nOutra conclus\u00e3o importante que podemos chegar \u00e9 a margem de erro.\n\nAntes est\u00e1vamos trabalhando com v\u00e1rias amostras, calculando a m\u00e9dia de cada uma, e conclu\u00edmos que qualquer amostra, com 95% de chande, ter\u00e1 sua m\u00e9dia entre dois desvios padr\u00e3o da m\u00e9dia real da popula\u00e7\u00e3o.\n\nMas, na vida real, n\u00e3o fazemos v\u00e1rias amostras, temos apenas uma para trabalhar. Com os valores dessa amostra precisamos inferir um valor para a popula\u00e7\u00e3o. Por exemplo, calculando a m\u00e9dia da amostra quero inferir a m\u00e9dia da popula\u00e7\u00e3o.\n\nAssim, dado o valor da m\u00e9dia de uma amostra, podemos estabelecer a margem de erro com 2 desvios padr\u00e3o para o n\u00edvel de confian\u00e7a de 95%. Melhor explicando, dada a m\u00e9dia calculada na amostra, se estabelecemos um intervalo com dois desvios padr\u00e3o, para mais e para menos da m\u00e9dia da amostra, podemos afirmar, com 95% de chance, que a m\u00e9dia real da popula\u00e7\u00e3o estar\u00e1 nesse intervalo.\n\nVamos analisar os resultados obtidos acima, considerando a margem de erro e a m\u00e9dia real da popula\u00e7\u00e3o (50.36):\n","45622ee9":"## Outras fun\u00e7\u00f5es de probabilidade\n\nAl\u00e9m da PMF, PDF e CDF, podemos citar:\n\n-Survival function: 1-CDF\n\n-Interval: pontos da PMF que delimitam um percentual das probabilidades (ver exemplo a seguir)","ae039381":"<img src=\"http:\/\/blog.cloudera.com\/wp-content\/uploads\/2015\/12\/distribution.png\" height=\"800\" width=\"800\"> ","c7230ab6":"Com o aumento do n\u00famero de simula\u00e7\u00f5es o resultado num\u00e9rico converge para o resultado anal\u00edtico","1d725f12":"### 100000 simula\u00e7\u00f5es","ee717903":"## Generalizando o resultado\n\nFixado o n\u00edvel de confi\u00e2n\u00e7a, estabelecemos a quantidade de desvios padr\u00e3o.\nPara 95,45%, temos dois desvios padr\u00e3o.\n\nDada uma amostra, para 95% de confian\u00e7a, a margem de erro ser\u00e1 2x(desvio_populacao\/raiz(tamanho_amostra))\n\n","46816ee7":"De toda a \"popula\u00e7\u00e3o\" de doa\u00e7\u00f5es, vamos retirar v\u00e1rias amostras para estudar seu comportamento.\n\nObserva\u00e7\u00e3o: Numa situa\u00e7\u00e3o real, seria extra\u00edda apenas uma amostra.","f02e3c9f":"# Probabilidade - Vari\u00e1veis aleat\u00f3rias\n\nVari\u00e1vel aleat\u00f3ria (X) \u00e9 o resultado de <font color=\"red\">uma execu\u00e7\u00e3o<\/font> de um processo estoc\u00e1stico. Por exemplo, o resultado de um lan\u00e7amento de um dado \u00e9 uma vari\u00e1vel aleat\u00f3ria. Cada lan\u00e7amento representa uma vari\u00e1vel aleat\u00f3ria X.\n\nA vari\u00e1vel aleat\u00f3ria pode assumir um conjunto de valores (xi), que formam o <font color=\"red\">espa\u00e7o amostral<\/font> da vari\u00e1vel X. No lan\u00e7amento do dado, os valores poss\u00edveis s\u00e3o os n\u00fameros de 1 a 6. A esse espa\u00e7o amostral, representado por todos os valores poss\u00edveis de serem assumidos pela vari\u00e1vel aleat\u00f3ria, designamos, geralmente, pela letra Omega,\n\nA cada valor poss\u00edvel da vari\u00e1vel aleat\u00f3ria, ou seja, a cada ponto do espa\u00e7o amostral, podemos associar uma probabilidade, que \u00e9 a frequ\u00eancia, no longo prazo, que a vari\u00e1vel assumir\u00e1 tal valor. No lan\u00e7amento do dado (honesto), cada valor poss\u00edvel no espa\u00e7o amostral tem probabilidade 1\/6. \n\nAo conjunto de probabilidades associadas aos valores poss\u00edveis, chamamos de <font color=\"red\">distribui\u00e7\u00e3o de probabilidade<\/font> da vari\u00e1vel aleat\u00f3ria X.\n\nQuando o espa\u00e7o amostral \u00e9 finito ou infinito enumer\u00e1vel \u00e9 chamado espa\u00e7o discreto (vari\u00e1vel aleat\u00f3ria discreta), por exemplo o lan\u00e7amento de um dado.\n\nSe o espa\u00e7o amostral \u00e9 infinito n\u00e3o-enumer\u00e1vel, \u00e9 chamado espa\u00e7o n\u00e3o-discreto ou cont\u00ednuo (vari\u00e1vel aleat\u00f3ria cont\u00ednua), por exemplo a temperatura medida em cada dia do ano.\n\n","42d7d1f9":"\n\nConforme j\u00e1 descrito, a infer\u00eancia estat\u00edstica busca estender para a popula\u00e7\u00e3o informa\u00e7\u00f5es obtidas na amostra.\n\nPara tratarmos de infer\u00eancia, \u00e9 preciso primeiro estudar o teorema do limite central.","23ab7f9c":"# Qui-Quadrado","bd605963":"Refor\u00e7ando a conclus\u00e3o acima: podemos garantir com 95,45% de confian\u00e7a que qualquer amostra ter\u00e1 sua m\u00e9dia entre 50,22 e 50,49.\n\nEssa conclus\u00e3o \u00e9 v\u00e1lida somente para a popula\u00e7\u00e3o em an\u00e1lise, considerando uma amostra com tamanho 1000.\n\nPara testarmos tal conclus\u00e3o, vamos verificar a m\u00e9dia de dez amostras aleat\u00f3rias:\n","fe519bd3":"Como ser\u00e1 apresentado, a estat\u00edstica descritiva, juntamente com a visualiza\u00e7\u00e3o de dados, permite descobrir informa\u00e7\u00f5es relevantes sobre cada vari\u00e1vel analisada, bem como rela\u00e7\u00f5es entre elas.\n\nEntretanto, quando a quantidade de vari\u00e1veis em an\u00e1lise \u00e9 grande e\/ou seu relacionamento complexo, normalmente n\u00e3o linear, n\u00e3o conseguimos inferir corretamente as rela\u00e7\u00f5es existentes, seja por limita\u00e7\u00e3o de nossa capacidade de avalia\u00e7\u00e3o, seja pela limita\u00e7\u00e3o dos m\u00e9todos estat\u00edsticos.\n\nNesse momento s\u00e3o usadas t\u00e9cnicas de <font color=\"red\">aprendizado de m\u00e1quina<\/font> para tentar descobrir as rela\u00e7\u00f5es complexas presentes nos dados.\n\nAmbas as t\u00e9cnicas (estat\u00edstica e aprendizado de m\u00e1quina) atuam sobre dados, buscando extrair informa\u00e7\u00f5es. \n\nA principal diferen\u00e7a \u00e9 at\u00e9 onde vai nossa capacidade de interpreta\u00e7\u00e3o e a partir de onde delegamos a interpreta\u00e7\u00e3o para a m\u00e1quina.\n\nT\u00e9cnicas estat\u00edsticas t\u00eam a vantagem de apresentar resultados com margem de erro e n\u00edvel de confi\u00e2n\u00e7a. Aprendizado de m\u00e1quina tem a vantagem de conseguir tratar relacionamentos complexos.\n","bdaf6627":"## O que n\u00e3o ser\u00e1 tratado no curso\n\nMatem\u00e1tica pura\n\nDemonstra\u00e7\u00f5es\n\nConceitos aprofundados de probabilidade e estat\u00edstica","8654961b":"## Medidas de tend\u00eancia, dispers\u00e3o e depend\u00eancia para vari\u00e1veis aleat\u00f3rias\n\nS\u00e3o medidas baseadas nos pontos do espa\u00e7o amostral e na probabilidade de cada ponto.\n\nEm estat\u00edstica descritiva temos medidas semelhante, s\u00f3 que, como n\u00e3o h\u00e1 informa\u00e7\u00f5es sobre as probabilidades b\u00e1sicas, os c\u00e1lculos ser\u00e3o diferentes, n\u00e3o tomando como base as probabilidades (podem usar frequ\u00eancias).\n\nEsperan\u00e7a ou m\u00e9dia de X, E(X) - \u00e9 uma medida de tend\u00eancia calculada como a soma dos produtos de cada x do espa\u00e7o amostral pela probabilidade p(x)\n\nVari\u00e2ncia de X - \u00e9 uma medida de dispers\u00e3o calculada como a esperan\u00e7a do quadrado da diferen\u00e7a entre x e a m\u00e9dia\n\nDesvio padr\u00e3o de X - \u00e9 uma medida de dispers\u00e3o calculada como a raiz quadrada da vari\u00e2ncia. \u00c9 mais usada como medida de dispers\u00e3o por estar na mesma unidade da vari\u00e1vel X\n\nDadas duas vari\u00e1veis aleat\u00f3rias X e Y, define-se como medida de depend\u00eancia entre elas a covari\u00e2ncia e o coeficiente de correla\u00e7\u00e3o, que ser\u00e3o estudadas na estat\u00edstica descritiva.","12338cb8":"\n\nConforme j\u00e1 definido, \u00e9 o ramo da estat\u00edstica que analisa, descreve e sumariza um conjunto de dados.\n\n<b>Os dados capturados podem ser calssificados como:<\/b>\n\n-Qualitativos nominais (n\u00e3o num\u00e9ricos, sem ordem) - ex. sexo\n\n-Qualitativos ordinais (n\u00e3o num\u00e9ricos, com ordem) - ex. grau de instru\u00e7\u00e3o\n\n-Quantitativos cont\u00ednuos (num\u00e9ricos n\u00e3o intervalados) - ex. sal\u00e1rio\n\n-Quantitativos discretos (num\u00e9ricos intervalados) - ex. n\u00famero de filhos\n\n\n<br>Da mesma forma que na an\u00e1lise probabil\u00edstica, dados qualitativos ordinais (representados como quantitativos) e dados quantitativos podem ser analisados segundo medidas de posi\u00e7\u00e3o e dispers\u00e3o, que podem ser aplicadas tanto \u00e0 popula\u00e7\u00e3o (par\u00e2metros populacionais) como \u00e0 amostra (estat\u00edsticas amostrais).\n\n<b>S\u00e3o medidas de posi\u00e7\u00e3o: <\/b>\n\nModa (valor mais frequente - n\u00e3o funciona corretamente em distribui\u00e7\u00f5es cont\u00ednuas), \n\nM\u00e9dia (soma de m valores dividida por m), \n\nMediana (valor na posi\u00e7\u00e3o central de um conjunto ordenado) e \n\nQuartis (reqpresentam as posi\u00e7\u00f5es 25%-Q1, 50%-Q2 e 75%-Q3)\n\n\n<b>S\u00e3o medidas de dispers\u00e3o: <\/b>\n\nAmplitude (m\u00e1ximo-m\u00ednimo), \n\nIntervalo-Interquartil (Q3-Q1), \n\nVari\u00e2ncia (m\u00e9dia dos quadrados das diferen\u00e7as entre a vari\u00e1vel e a m\u00e9dia), \n\nDesvio Padr\u00e3o (raiz da vari\u00e2ncia) e \n\nCoeficiente de Varia\u00e7\u00e3o (desvio padr\u00e3o dividido pela m\u00e9dia)\n\n\n<b>S\u00e3o medidas de forma: <\/b>\n\nCurtose (achatamento, onde 0 caracteriza a normal, maior que 0 representa afunilamento e menor que 0 achatamento) e \n\nAssimetria (skewness, onde 0 caracteriza simetria, maior que 0 caracteriza maior distribui\u00e7\u00e3o \u00e0 direira e menor que 0 caracteriza maior distribui\u00e7\u00e3o \u00e0 esquerda)\n\n<br><b>IMPORTANTE<\/b>: mediadas de posi\u00e7\u00e3o e dispers\u00e3o s\u00e3o relevantes para entendermos os dados em an\u00e1lise, por\u00e9m, a melhor forma de termos uma vis\u00e3o completa \u00e9 atrav\u00e9s das distribui\u00e7\u00f5es de frequ\u00eancias, obtidas atrav\u00e9s do histograma.\n\n<br><b>IMPORTANTE<\/b>: para ter uma vis\u00e3o consolidade das mediadas de posi\u00e7\u00e3o e dispers\u00e3o usar o boxplot.","87566f72":"Vamos considerar 100.000 doa\u00e7\u00f5es feitas para um candidato, cujo valor m\u00ednimo de doa\u00e7\u00e3o foi estabelecido em R$ 48.\n\nO comportamento esperado \u00e9 que a grande maioria fa\u00e7a a contribui\u00e7\u00e3o m\u00ednima.\n\nHaver\u00e1, por\u00e9m, contribui\u00e7\u00f5es acima do m\u00ednimo, em valores diversos e quantidades reduzidas.\n\nCom isso, temos uma distribui\u00e7\u00e3o semelhante a uma log-normal ou exponencial, veja o gr\u00e1fico.","dffd0cb3":"<font size=\"3\" color=\"blue\">Exerc\u00edcio: Outliers no \u00edndice de felicidade<\/font>\n\n\nPlotar o boxplot com os indicadores do \u00edndice de felicidade\n\nVerificar se h\u00e1 indicadores com outliers\n\nEscolher um dos indicadores com outliers e verificar quais s\u00e3o os pa\u00edses que s\u00e3o outliers usando quartis e desvio padr\u00e3o.","21e2f7c2":" A PMF da distribui\u00e7\u00e3o mostra que, em 14,45% das vezes que lan\u00e7armos 30 vezes uma moeda, obteremos 15 caras.\n \n Mostra tamb\u00e9m que, em 0,0000000931% das vezes, obteremos zero caras. Um evento pouco prov\u00e1vel, mas poss\u00edvel.","11118b19":"<font size=\"6\" color=\"red\">Quando usar probabilidade\/estat\u00edstica?<\/font>","4b911768":"<font size=\"6\" color=\"red\">Distribui\u00e7\u00f5es de probabilidade<\/font>\n\n## Probability Mass Function (PMF) e Probability Density Function (PDF)\n\nConforme exposto, \u00e9 a fun\u00e7\u00e3o que associa a cada valor poss\u00edvel de uma vari\u00e1vel aleat\u00f3ria uma probabilidade.\n\nCaso a vari\u00e1vel seja discreta, teremos uma <b>PMF<\/b>, caso a vari\u00e1vel seja cont\u00ednua, teremos uma <b>PDF<\/b>.\n\nATEN\u00c7\u00c3O: a PMF d\u00e1 a probabilidade de um ponto do espa\u00e7o amostral, a PDF d\u00e1 a probabilidade num intervalo, considerando que, para vari\u00e1veis cont\u00ednuas, a probabilidade de cada ponto \u00e9 zero. Entretanto, as fun\u00e7\u00f5es em python que implementam a PDF estimam a probabilidade do ponto pela probabilidade do intervalo infinitesimal.\n\nTomando como exemplo a vari\u00e1vel aleat\u00f3ria que representa o n\u00famero de caras obtidas em 30 lan\u00e7amentos de uma moeda honesta (vari\u00e1vel discreta), sua PMF \u00e9 demonstrada a seguir:","23621655":"Probabilidade trata do mundo \"te\u00f3rico\", quando as probabilidades b\u00e1sicas s\u00e3o bem definidas e seguidas pelos processos, ou seja, quase nunca ocorre no mundo real.\n\nEstat\u00edstica trata do mundo \"real\", como as coisas acontecem de verdade. Os eventos s\u00e3o afetados por muitas vari\u00e1veis, dificilmente seguem regras probabil\u00edsticas precisas, ou melhor, seguem regras muito complexas, de dif\u00edcil determina\u00e7\u00e3o.\n\nProbabilidade traz muitos conceitos que fundamentam a an\u00e1lise estat\u00edstica, principalmente a infer\u00eancia estat\u00edstica.\n","695808e0":"<font size=\"6\" color=\"red\">Teorema do limite central<\/font>","414c91b9":"# Probabilidade - Teoria\n\nProbabilidade \u00e9 a frequ\u00eancia, no longo prazo, de determinado resultado de um processo estoc\u00e1stico.\n\nPor exemplo, o lan\u00e7amento de uma moeda \"honesta\", realizado v\u00e1rias vezes, produzir\u00e1 um n\u00famero de caras e coroas id\u00eantico, ou seja, a frequ\u00eancia de caras ser\u00e1 igual \u00e0 de coroas (50%), que corresponde \u00e0 probabilidade de obter uma cara ou uma coroa em qualquer lan\u00e7amento (0,5). \n\nProbabilidade \u00e9, ent\u00e3o, a medida de certeza com que podemos esperar a ocorr\u00eancia de determinado evento, resultado de um experimento aleat\u00f3rio. \n\nA probabilidade recebe um n\u00famero no intervalo de zero a um. J\u00e1 a frequ\u00eancia e apresentada como percentual, variando de 0 a 100.\n\nA probabilidade n\u00e3o d\u00e1 certeza alguma sobre um evento espec\u00edfico, apenas garante que, no longo prazo, a frequ\u00eancia se aproximar\u00e1 da probabilidade.\n\nConforme demonstrado no exemplo anterior, quanto maior o n\u00famero de experimentos, mais a frequ\u00eancia ir\u00e1 se aproximar da probabilidade real. ","88d60231":"# Cauchy","c2247fd8":"## E se o intervalo de confian\u00e7a desejado for diferente do fornecido por um desvio padr\u00e3o?\n\nUtilizar a fun\u00e7\u00e3o interval para localizar os pontos exatos (n\u00famero de desvios) que indicar\u00e3o os limites para alcan\u00e7ar a probabilidade indicada.\n\nNo caso de desejar 99% de confi\u00e2n\u00e7a, ser\u00e3o 2,58 desvios, n\u00e3o 2 como no caso de 95% de confian\u00e7a.","2a8f5524":"## Observa\u00e7\u00e3o sobre o c\u00e1lculo da vari\u00e2ncia (corre\u00e7\u00e3o de bessel)\n\nSendo a vari\u00e2ncia uma m\u00e9dia, o esperado seria a divis\u00e3o por n (n\u00famero de elementos na amostra)\n\nEntretanto, tal divis\u00e3o torna o estimador tendencioso, sendo correto dividir por n-1.\n\nCaso n seja muito grande, tal diferen\u00e7a \u00e9 impercept\u00edvel, para amostras menores o valor fica evidente.\n\nEm numpy usar o par\u00e2metro ddof=1.\n\nVamos ao exemplo:","c83ac9e5":"<font size=\"6\" color=\"red\">Diferen\u00e7a entre an\u00e1lise estat\u00edstica (descritiva e infer\u00eancia) e an\u00e1lise probabil\u00edstica<\/font>","751206f6":"<font size=\"6\" color=\"red\">Estat\u00edstica Descritiva - Conceitos b\u00e1sicos<\/font>","c912043e":"# Uniforme","67c7e96a":"## RESUMINDO\n\nDada uma amostra, para calcular a margem de erro para dado grau de confi\u00e2n\u00e7a, fa\u00e7a o seguinte:\n\n1-Calcule a m\u00e9dia da amostra ex. media_amostra = np.mean(amostra)\n\n2-Calcule o desvio da amostra ex. desvio_amostra = np.std(amostra)\n\n3-Calcule quantos desvios precisar\u00e1 para seu grau de confi\u00e2n\u00e7a ex. numero_desvios = calcula_numero_desvios_tstudent_para_confianca(confian\u00e7a, tamanho_amostra)\n\n4-Calcule o desvio das amostras ex. desvio_amostras = desvio_amostra\/np.sqrt(tamanho_amostra)\n\n5-Calcule a margem de erro ex. margem_erro = numero_desvios*desvio_amostras\n\n6-Calcule o intervalo ex. inferior = media_amostra-margem_erro, superior = media_amostra+margem_erro","6a01d910":"# Distribui\u00e7\u00f5es de probabilidade\n\nFonte: http:\/\/blog.cloudera.com\/blog\/2015\/12\/common-probability-distributions-the-data-scientists-crib-sheet\/","93268bde":"<font size=\"3\" color=\"blue\">Exerc\u00edcio: Se quis\u00e9ssemos simular o lan\u00e7amento de dois dados para verificar as probabilidades da soma dos valores, como ficaria o c\u00f3digo acima?<\/font>","a547d6f7":"## Onde estamos no processo de minera\u00e7\u00e3o de dados?\n\n[--Extra\u00e7\u00e3o e limpeza--]\n\n           [--Estat\u00edstica--]\n           \n                   [--Regras determin\u00edsticas--]\n                   \n                              [--Minera\u00e7\u00e3o de dados--]","a52b6e3e":"## Fun\u00e7\u00e3o de probabilidade acumulada: Cumulative Distribution Function (CDF)\n\n\u00c9 a probabilidade da vari\u00e1vel aleat\u00f3ria assumir um valor menor ou igual \u00e0 x.\n\nTomando como exemplo a vari\u00e1vel aleat\u00f3ria que representa o n\u00famero de caras obtidas em 30 lan\u00e7amentos de uma moeda honesta (vari\u00e1vel discreta), sua CDF \u00e9 demonstrada a seguir:","24797fbd":"<font size=\"6\" color=\"red\">Introdu\u00e7\u00e3o \u00e0 probabilidade<\/font>\n\n","f7b2d05d":" A CDF da distribui\u00e7\u00e3o mostra que h\u00e1 57,22% de probabilidade da moeda produzir 15 ou menos caras em 30 lan\u00e7amentos.","fea0ed44":"H\u00e1 processos cujo resultado n\u00e3o \u00e9 determin\u00edstico, ou seja, seu resultado pode variar entre execu\u00e7\u00f5es.\n\nTais processos s\u00e3o chamados <b>estoc\u00e1sticos<\/b>.\n\nUm exemplo \u00e9 o lan\u00e7amento de uma moeda.\n\nNeste caso podemos usar probabilidade\/estat\u00edstica para quantificar a incerteza do resultado.","c10edeba":"## Escolha","38c16852":"## O que ser\u00e1 tratado no curso\n\nConceito de incerteza\n\nDiferen\u00e7a entre an\u00e1lise estat\u00edstica e an\u00e1lise probabil\u00edstica\n\nDiferen\u00e7a entre probabilidade\/estat\u00edstica e aprendizado de m\u00e1quina\n\nIntrodu\u00e7\u00e3o \u00e0 probabilidade\n\nDistribui\u00e7\u00f5es de probabilidade\n\nConceitos de estat\u00edstica\n\nEstat\u00edstica Descritiva - Conceitos b\u00e1sicos \n\nInfer\u00eancia Estat\u00edstica\n\nTeorema do limite central\n\nGrau de certeza e intervalo de confi\u00e2n\u00e7a\n\nOutliers\n\n","71eee847":"Observa-se que, apesar de termos uma solu\u00e7\u00e3o anal\u00edtica, continuamos sem certeza quanto aos resultados.\n\nA solu\u00e7\u00e3o anal\u00edtica informa as probabilidades do evento, n\u00e3o o resultado em si.","7d6b5803":"## Importa\u00e7\u00e3o de bibliotecas usadas nos exemplos","204cfaac":"## Utilizando desvio padr\u00e3o","bcdf4d1d":"<font size=\"6\" color=\"red\">Diferen\u00e7a entre probabilidade\/estat\u00edstica e aprendizado de m\u00e1quina<\/font>\n","e7122d4b":"## Distribui\u00e7\u00e3o Normal (Gaussiana)\n\nPela import\u00e2ncia, vamos estudar algumas propriedades da normal","cd79916b":"Observe que os dois conjuntos de dados possuem m\u00e9dias e desvios muito parecidos, apesar de serem totalmente diferentes.\n\nPor isso a simples an\u00e1lise dos par\u00e2metros populacionais n\u00e3o \u00e9 suficiente para se ter uma ideia precisa da popula\u00e7\u00e3o em an\u00e1lise.","1248025b":"<font size=\"6\" color=\"red\">Anexo II - Refer\u00eancias<\/font>\n\nTutoriais\n\nhttps:\/\/www.youtube.com\/watch?v=Iq9DzN6mvYA\n\nhttps:\/\/machinelearningmastery.com\/how-to-generate-random-numbers-in-python\/\n\nhttp:\/\/nbviewer.jupyter.org\/url\/norvig.com\/ipython\/Probability.ipynb\n\nhttps:\/\/www.youtube.com\/watch?v=KhAUfqhLakw\n\nhttps:\/\/www.analyticsvidhya.com\/blog\/2017\/09\/6-probability-distributions-data-science\/\n\nhttps:\/\/www.datacamp.com\/community\/tutorials\/python-statistics-data-science\n\nhttps:\/\/machinelearningmastery.com\/\n\n\nDistribui\u00e7\u00f5es de probabilidade\n\nhttp:\/\/blog.cloudera.com\/blog\/2015\/12\/common-probability-distributions-the-data-scientists-crib-sheet\/\n\nhttp:\/\/www.math.wm.edu\/~leemis\/chart\/UDR\/UDR.html\n\nCursos\n\nhttps:\/\/courses.edx.org\/courses\/course-v1:UCSanDiegoX+DSE210x+1T2018\/course\/#block-v1:UCSanDiegoX+DSE210x+1T2018+type@chapter+block@c1c0e5a497924a40b800bf69e96b4004\n\nDocumenta\u00e7\u00e3o bibliotecas Python\n\nhttps:\/\/docs.python.org\/3\/library\/statistics.html\n\nhttps:\/\/docs.python.org\/3\/library\/random.html\n\nDocumenta\u00e7\u00e3o bibliotecas SciPy\n\nhttps:\/\/docs.scipy.org\/doc\/scipy\/reference\/stats.html\n\nDocumenta\u00e7\u00e3o bibliotecas NumPy\n\nhttps:\/\/docs.scipy.org\/doc\/numpy\/reference\/routines.random.html\n\nhttps:\/\/docs.scipy.org\/doc\/numpy\/reference\/routines.statistics.html\n\nDataframe\n\nhttp:\/\/pandas.pydata.org\/pandas-docs\/version\/0.13\/visualization.html\n","3b04f44a":"## Compara\u00e7\u00e3o do desvio das amostras com o desvio da popula\u00e7\u00e3o\n\nO desvio padr\u00e3o das m\u00e9dias das amostras \u00e9 igual ao desvio da popula\u00e7\u00e3o dividido pela raiz do tamanho da amostra.\n\nComo a margem de erro \u00e9 proporcional ao desvio das m\u00e9dias, conclui-se que:\n\n-A margem de erro crece conforme for maior o desvio padr\u00e3o da popula\u00e7\u00e3o\n\n-A margem de erro crece com a diminui\u00e7\u00e3o do tamanho da amostra"}}