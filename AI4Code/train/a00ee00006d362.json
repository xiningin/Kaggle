{"cell_type":{"fc587ee6":"code","aee8617b":"code","0f4a81d2":"code","44793c29":"code","25f54501":"code","8be07912":"code","7857a877":"code","14484f51":"code","1ee411d7":"code","72c93485":"code","635ea1a5":"code","46258876":"code","a5850421":"code","5bfd91a5":"code","739aaa7d":"code","3450424e":"code","ab3bcc82":"code","229f3f43":"code","8916cb90":"code","84117f67":"markdown","c5833ad7":"markdown","8f8b8034":"markdown","0c3aee8d":"markdown","9d48185f":"markdown","9d14c85f":"markdown","364e5bea":"markdown","69418fb1":"markdown","45f0ea66":"markdown"},"source":{"fc587ee6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aee8617b":"messages = pd.read_csv(\"\/kaggle\/input\/sms-spam-collection-dataset\/spam.csv\", encoding='latin-1')\nmessages.dropna(how=\"any\", inplace=True, axis=1)\nmessages.columns = ['label', 'message']\nmessages.head()","0f4a81d2":"import re\nimport nltk\nnltk.download('stopwords')","44793c29":"from nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer","25f54501":"ps=PorterStemmer()\ncorpus=[]\nfor i in range(0,len(messages)):\n    review=re.sub('[^a-zA-Z]',' ',messages['message'][i])\n    review=review.lower()\n    review=review.split()\n    review=[ps.stem(word) for word in review if not word in stopwords.words('english')]\n    review=' '.join(review)\n    corpus.append(review)\ncorpus","8be07912":"from sklearn.feature_extraction.text import CountVectorizer\ncv=CountVectorizer(max_features=2500)\nx=cv.fit_transform(corpus).toarray()\nx","7857a877":"y=pd.get_dummies(messages['label'])\ny=y.iloc[:,1].values\ny","14484f51":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)","1ee411d7":"from sklearn.naive_bayes import MultinomialNB\nspam_detect_model=MultinomialNB().fit(X_train,y_train)\ny_pred=spam_detect_model.predict(X_test)\ny_pred","72c93485":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,y_pred))","635ea1a5":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred))","46258876":"from nltk.stem import WordNetLemmatizer","a5850421":"lemmetizer=WordNetLemmatizer()\ncorpus=[]\nfor i in range(0,len(messages)):\n    review=re.sub('[^a-zA-Z]',' ',messages['message'][i])\n    review=review.lower()\n    review=review.split()\n    review=[lemmetizer.lemmatize(word) for word in review if not word in stopwords.words('english')]\n    review=' '.join(review)\n    corpus.append(review)\ncorpus","5bfd91a5":"from sklearn.feature_extraction.text import TfidfVectorizer\ncv=TfidfVectorizer(max_features=2000)\nx=cv.fit_transform(corpus).toarray()\nx[0]","739aaa7d":"y=pd.get_dummies(messages['label'])\ny=y.iloc[:,1].values\ny","3450424e":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)","ab3bcc82":"from sklearn.naive_bayes import MultinomialNB\nspam_detect_model=MultinomialNB().fit(X_train,y_train)\ny_pred=spam_detect_model.predict(X_test)\ny_pred","229f3f43":"from sklearn.metrics import confusion_matrix\nprint(confusion_matrix(y_test,y_pred))","8916cb90":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test,y_pred))","84117f67":"### **Model Selection**","c5833ad7":"### **TF-IDF**","8f8b8034":"# **Stemming**","0c3aee8d":"# **Lemmatization**","9d48185f":"### **Train-Test Split**","9d14c85f":"### **Bag of Words**","364e5bea":"### **Train test Split**","69418fb1":"### **Model Selection**","45f0ea66":"### **Reading of CSV file**"}}