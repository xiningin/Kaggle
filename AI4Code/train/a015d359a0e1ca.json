{"cell_type":{"41bc1633":"code","ec5234bb":"code","391b2a88":"code","cfaa2d37":"code","13a869a3":"code","94bdb9f4":"code","98b77175":"code","a9a7edf2":"code","06a76146":"code","11d29dc8":"code","5080e069":"code","8de7c018":"code","fcc9820d":"code","529c310b":"code","f37a62e0":"code","3d7e39c5":"code","e3de6baa":"code","95d71405":"code","7df640b7":"code","75e8f506":"code","a6ab19cc":"code","d07f9112":"code","3a195f35":"code","3f30936e":"code","92cb57da":"code","42044895":"code","06b67766":"code","7c664856":"code","fb6a07c0":"code","f19ea961":"code","335f8370":"code","d0de09e5":"markdown","667e49fd":"markdown","99cef3c8":"markdown"},"source":{"41bc1633":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","ec5234bb":"df=pd.read_csv(\"\/kaggle\/input\/tvradionewspaperadvertising\/Advertising.csv\")","391b2a88":"df.info()","cfaa2d37":"df.shape","13a869a3":"df.head(5)","94bdb9f4":"df.isnull().sum().sum()","98b77175":"sns.pairplot(df, kind=\"reg\")","a9a7edf2":"fig, ax = plt.subplots(1, 3, figsize=(25, 5))\nsns.regplot(df['TV'], df['Sales'], ax=ax[0])\nsns.regplot(df['Radio'], df['Sales'], ax=ax[1])\nsns.regplot(df['Newspaper'], df['Sales'], ax=ax[2])","06a76146":"from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.model_selection import train_test_split, GridSearchCV","11d29dc8":"X=df.drop('Sales', axis=1)\nY=df[['Sales']]","5080e069":"x_train, x_test, y_train, y_test=train_test_split(X, Y, test_size=0.2, random_state=32)","8de7c018":"results={'Model':[], 'rmse':[], 'r2score':[]}","fcc9820d":"def metrics(y_true, y_pred):\n    mse=mean_squared_error(y_true, y_pred)\n    r2=np.round(r2_score(y_true, y_pred), 3)\n    print(f'Root Mean squared error: {np.sqrt(mse)}')\n    print(f'R2 score: {r2}')\n    return mse, r2","529c310b":"def dict_append(dict_, model, error, r2):\n    dict_['Model'].append(type(model).__name__)\n    dict_['rmse'].append(error)\n    dict_['r2score'].append(r2)\n    return dict","f37a62e0":"lr=LinearRegression()\nlr.fit(x_train, y_train)\ny_test_pred=lr.predict(x_test)\nlr_rmse, lr_r2=metrics(y_test, y_test_pred)\ndict_append(results, lr, lr_rmse, lr_r2)","3d7e39c5":"rg=Ridge()\nrg.fit(x_train, y_train)\ny_test_pred=rg.predict(x_test)\nrg_rmse, rg_r2=metrics(y_test, y_test_pred)\ndict_append(results, rg, rg_rmse, rg_r2)","e3de6baa":"ls=Lasso()\nls.fit(x_train, y_train)\ny_test_pred=ls.predict(x_test)\nls_rmse, ls_r2=metrics(y_test, y_test_pred)\ndict_append(results, ls, ls_rmse, ls_r2)","95d71405":"el=ElasticNet()\nel.fit(x_train, y_train)\ny_test_pred=el.predict(x_test)\nel_rmse, el_r2=metrics(y_test, y_test_pred)\ndict_append(results, el, el_rmse, el_r2)","7df640b7":"result_frame=pd.DataFrame(results)\nresult_frame","75e8f506":"tuning_rmse=[]\ntuning_score=[]\ntuning_params=[]","a6ab19cc":"def gridsearch(model, params, l1=tuning_rmse, l2=tuning_score, l3=tuning_params, x=X, y=Y):\n    X_train, X_test, Y_train, Y_test=train_test_split(x, y, test_size=0.2, random_state=32)\n    m=GridSearchCV(model, params, cv=10, return_train_score=True)\n    m.fit(X_train, Y_train)\n    Y_test_pred=m.predict(X_test)\n    rmse, r2 = metrics(Y_test, Y_test_pred)\n    l1.append(rmse)\n    l2.append(r2)\n    l3.append(m.best_params_)\n    print(m.best_params_)\n    return rmse, r2","d07f9112":"linear_parameters= {'fit_intercept': [True , False]}","3a195f35":"lr_rmse_, lr_r2_ = gridsearch(LinearRegression(), linear_parameters)","3f30936e":"ridge_parameters={'alpha': [0.1, 0.01, 0.005, 0.05, 0.001 ,0.2, 0.3, 0.5, 0.6, 0.8, 0.9, 1, 2, 3, 4],\n                  'solver': ['auto', 'svd', 'cholesky']}","92cb57da":"rg_rmse_, rg_r2_ = gridsearch(Ridge(), ridge_parameters)","42044895":"lasso_parameters={'selection': ['cyclic', 'random'],\n                  'alpha': [0.1, 0.01, 0.005, 0.05, 0.001 ,0.2, 0.3, 0.5, 0.6, 0.8, 0.9, 1, 2, 3, 4]}","06b67766":"ls_rmse_, ls_r2_ = gridsearch(Lasso(), lasso_parameters)","7c664856":"elastic_net_parameters={'alpha': [0.1, 0.01, 0.005, 0.05, 0.001 ,0.2, 0.3, 0.5, 0.6, 0.8, 0.9, 1, 2, 3, 4],\n                        'selection': ['cyclic', 'random']}","fb6a07c0":"el_rmse_, el_r2_ = gridsearch(ElasticNet(), elastic_net_parameters)","f19ea961":"tuning_frame=pd.DataFrame({'Model':['Linear', 'Ridge', 'Lasso', 'ElasticNet'],\n                           'RMSE': tuning_rmse,\n                           'Score': tuning_score,\n                           'Best Params': tuning_params})","335f8370":"tuning_frame","d0de09e5":"## Model","667e49fd":"## Model Tuning","99cef3c8":"## EDA"}}