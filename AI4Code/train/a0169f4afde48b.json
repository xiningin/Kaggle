{"cell_type":{"7eb6b141":"code","5fa0984b":"code","e158ddfc":"code","debbfedb":"code","ff9cecc4":"code","630e3eb5":"code","31f714bb":"code","03af9403":"markdown","b841d2c5":"markdown"},"source":{"7eb6b141":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5fa0984b":"import torch\nimport torchvision\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom PIL import Image, ImageDraw\nimport xml.etree.ElementTree as ET\n\nimages_dir = '\/kaggle\/input\/datasetdentifricio\/images\/'\nannotations_dir = '\/kaggle\/input\/datasetdentifricio\/annotations\/xmls\/'","e158ddfc":"sample_image = Image.open('\/kaggle\/input\/datasetdentifricio\/images\/400097200042_349720.jpg')\n\nsample_image","debbfedb":"with open('\/kaggle\/input\/datasetdentifricio\/annotations\/400097200042_349720.xml') as annot_file:\n    print(''.join(annot_file.readlines()))","ff9cecc4":"tree = ET.parse('\/kaggle\/input\/datasetdentifricio\/annotations\/400097200042_349720.xml')\nroot = tree.getroot()\n\nsample_annotations = []\n\nfor neighbor in root.iter('bndbox'):\n    xmin = int(neighbor.find('xmin').text)\n    ymin = int(neighbor.find('ymin').text)\n    xmax = int(neighbor.find('xmax').text)\n    ymax = int(neighbor.find('ymax').text)\n    \n#     print(xmin, ymin, xmax, ymax)\n    sample_annotations.append([xmin, ymin, xmax, ymax])\n    \nprint(sample_annotations)","630e3eb5":"sample_image_annotated = sample_image.copy()\n\nimg_bbox = ImageDraw.Draw(sample_image_annotated)\n\nfor bbox in sample_annotations:\n    print(bbox)\n    img_bbox.rectangle(bbox, outline=\"green\") \n    \nsample_image_annotated","31f714bb":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was here' )","03af9403":"#Draw Image With Annotations","b841d2c5":"#Codes from Mateusz Kwasniak https:\/\/www.kaggle.com\/mtszkw\/reading-sample-image-and-bounding-boxes-from-xml"}}