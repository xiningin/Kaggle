{"cell_type":{"0b92a922":"code","66212cf7":"code","c4feebaf":"code","31fabd9c":"code","715d8346":"code","a7ae97e5":"code","cecf0e05":"code","f3245126":"code","3091e36c":"code","7ac4fc41":"code","44f2b4ef":"code","c10d5c2f":"code","ada9c4f3":"code","98701a96":"code","ec79a881":"code","ccdcb49a":"code","2da99a2c":"code","80753bbb":"code","1804ba01":"code","ed1442e1":"code","fd0b803e":"code","01ac1b95":"code","1a9de99e":"code","2a172387":"code","42fb626e":"code","9c1a5ce6":"code","458dba14":"code","25131382":"code","b3556b2e":"code","8e59d0f5":"code","334711f0":"code","8feee427":"code","b4a905f7":"code","757a26e4":"code","aa7c1648":"code","26cfa0ee":"code","a56072ec":"code","f4395e61":"code","bef4db1f":"code","44265622":"markdown","ba0ac8c9":"markdown","d627856b":"markdown","39cbfba9":"markdown","18580e06":"markdown","2776d55b":"markdown","f24598a3":"markdown","bb24a2a5":"markdown","7aa9f1d6":"markdown","372f3b1d":"markdown","8d06b94f":"markdown","b29185fd":"markdown","85264551":"markdown","1649e8ed":"markdown","502d7f79":"markdown","1e820af2":"markdown","3c135ca3":"markdown","c4eebbc7":"markdown","77567a30":"markdown","7d7f7c97":"markdown","52b82077":"markdown","b512d1a7":"markdown"},"source":{"0b92a922":"import tensorflow as tf\nimport numpy as np\n# \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043d\u043e\u0443\u0442\u0431\u0443\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 eager execution \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b\n#tf.executing_eagerly()\nprint(tf.__version__)","66212cf7":"a = tf.add(3, 5)\n\nprint(a)","c4feebaf":"mammal = tf.Variable(\"Cat\", tf.string)\nignition = tf.Variable(451, tf.int16)\nfloating = tf.Variable(3.14159265359, tf.float64)\nits_complicated = tf.Variable(12.3 - 4.85j, tf.complex64)","31fabd9c":"ignition","715d8346":"mystr = tf.Variable([\"Hello\"], tf.string)\ncool_numbers  = tf.Variable([3.14159, 2.71828], tf.float32)\nmy_vector = tf.Variable([2, 3, 5, 7, 11], tf.int32)\nits_very_complicated = tf.Variable([12.3 - 4.85j, 7.5 - 6.23j], tf.complex64)","a7ae97e5":"cool_numbers","cecf0e05":"my_matrix = tf.Variable([[7, 2, 3],[11, 21, 8]], tf.int16)\nmyxor = tf.Variable([[False, True],[True, False]], tf.bool)\nlinear_squares = tf.Variable([[4], [9], [16], [25]], tf.int32)\nsquarish_squares = tf.Variable([ [4, 9], [16, 25] ], tf.int32)\nrank_of_squares = tf.rank(squarish_squares)\nmymatC = tf.Variable([[7],[11]], tf.int32)","f3245126":"rank_of_squares","3091e36c":"my_image = tf.zeros([10, 299, 299, 3]) \nr = tf.rank(my_image)\nr","7ac4fc41":"my_vector","44f2b4ef":"my_vector[2:4]","c10d5c2f":"my_matrix","ada9c4f3":"my_matrix[1, 1]","98701a96":"my_row_vector = my_matrix[1]\nmy_row_vector","ec79a881":"my_column_vector = my_matrix[:, 1]\nmy_column_vector","ccdcb49a":"tf.zeros(my_matrix.shape[1])","2da99a2c":"rank_three_tensor = tf.ones([3, 4, 5])\nmatrix = tf.reshape(rank_three_tensor, [6, 10])  # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n                                                 # \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0443 6x10 \nmatrixB = tf.reshape(matrix, [3, -1])  # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \n                                       # \u043c\u0430\u0442\u0440\u0438\u0446\u0443 3x20. -1 \u0433\u043e\u0432\u043e\u0440\u0438\u0442 reshape \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e\n                                       # \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u044d\u0442\u043e\u0433\u043e \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f.\nmatrixAlt = tf.reshape(matrixB, [4, 3, -1])  # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\n                                             # \u0442\u0435\u043d\u0437\u043e\u0440 4x3x5\n\n# \u041e\u0442\u043c\u0435\u0442\u0438\u043c, \u0447\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0442\u0435\u043d\u0437\u043e\u0440\u0430\u0445  \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c\n# \u0441 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u043e\u0440\u043e\u0434\u0438\u0442\n# \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043d\u0435\u0442 \u0442\u0430\u043a\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f\n# \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u043e\u0432\u043f\u0430\u0434\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n#yet_another = tf.reshape(matrixAlt, [13, 2, -1])  # ERROR!","80753bbb":"matrixB","1804ba01":"tf.compat.v1.disable_eager_execution()","ed1442e1":"constant = tf.constant([1, 2, 3])","fd0b803e":"tensor = constant * constant","01ac1b95":"tensor","1a9de99e":"with tf.compat.v1.Session() as sess:\n    print(tensor.eval())","2a172387":"# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u043b\u0435\u0439\u0445\u043e\u043b\u0434\u0435\u0440, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043c\u0435\u0449\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\np = tf.compat.v1.placeholder(tf.float32)\nt = p + 1.0\nwith tf.compat.v1.Session() as sess:\n    #t.eval()  # \u042d\u0442\u043e \u043d\u0435 \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e  placeholder \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043b \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n    print(t.eval(feed_dict={p:2.0}))  # \u042d\u0442\u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043a\u0430\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 p\n                           # c \u043f\u043e\u043c\u043e\u0449\u044c\u044e feed_dict","42fb626e":"x = tf.compat.v1.placeholder(dtype=tf.float32, shape=[2])\n\n# \u0438 \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0443\ny = tf.constant(value=[3., 6.], dtype=tf.float32)\nt=x+y\nwith tf.compat.v1.Session() as sess:\n    print(t.eval(feed_dict={x: [1, 3]}))","9c1a5ce6":"# \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438 \u043d\u043e\u0443\u0442\u0431\u0443\u043a\n\nimport tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\n\nprint(tf.__version__)","458dba14":"imdb = keras.datasets.imdb\n\nvocab_size = 10000\n\n(train_data, train_labels), (test_data, test_labels) = imdb.load_data(num_words=vocab_size)\n\nprint(\"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435: {}\".format(len(train_data)))","25131382":"# \u041d\u0430\u0437\u043d\u0430\u0447\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0441\u043b\u043e\u0432\u0430 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\nword_index = imdb.get_word_index()","b3556b2e":"word_index","8e59d0f5":"# \u0417\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u0443\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439\nword_index = {k: (v+3) for k,v in word_index.items()} \nword_index[\"<PAD>\"] = 0\nword_index[\"<START>\"] = 1\nword_index[\"<UNK>\"] = 2  # \u0412\u043c\u0435\u0441\u0442\u043e \u0440\u0435\u0434\u043a\u0438\u0445 \u0441\u043b\u043e\u0432, \u043d\u0435 \u0432\u043e\u0448\u0435\u0434\u0448\u0438\u0445 \u0432 \u043d\u0430\u0431\u043e\u0440 \u0438\u0437 10000, \u0431\u0443\u0434\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043e UNK\nword_index[\"<UNUSED>\"] = 3\n\nreverse_word_index = dict([(value, key) for (key, value) in word_index.items()])\n\n# \u0444\u0443\u043d\u043a\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\ndef decode_review(text):\n    return ' '.join([reverse_word_index.get(i, '?') for i in text])","334711f0":"train_data[22]","8feee427":"# \u043f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0444\u0438\u043b\u044c\u043c\n\ndecode_review(train_data[22])","b4a905f7":"train_data = keras.preprocessing.sequence.pad_sequences(train_data,\n                                                        value=word_index[\"<PAD>\"],\n                                                        padding='post',\n                                                        maxlen=60)\n\ntest_data = keras.preprocessing.sequence.pad_sequences(test_data,\n                                                       value=word_index[\"<PAD>\"],\n                                                       padding='post',\n                                                       maxlen=60)","757a26e4":"print('Data shapes:')\n\ntrain_data.shape, test_data.shape","aa7c1648":"# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u043e\u0434\u0435\u043b\u044c\n\ndef train_input_fn(features=train_data, labels=train_labels, batch_size=128, num_epochs=5):\n    dataset = tf.data.Dataset.from_tensor_slices((features, labels))\n\n    dataset = dataset.shuffle(1000)\n    dataset = dataset.repeat(num_epochs)\n    dataset = dataset.batch(batch_size)\n    # \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u0435\u0440\u043d\u0443\u0442\u044c Tuple[dict (string to tensor), tensor]\n    # (features, labels)\n    dataset = dataset.map(lambda x, y: ({'x': x}, y))\n\n    return dataset","26cfa0ee":"# sparse bag-of-words representation\ncat_column = tf.feature_column.categorical_column_with_identity('x', vocab_size)\n\n# mean of embeddings\nemb_column = tf.feature_column.embedding_column(categorical_column=cat_column, dimension=300, combiner='mean')\n\n# two classifiers\nclassifier1 = tf.estimator.LinearClassifier(\n    model_dir='linear',\n    feature_columns=[cat_column],\n    n_classes=2)\n\nclassifier2 = tf.estimator.DNNClassifier(\n    model_dir='dnn',\n    feature_columns=[emb_column],\n    hidden_units=[128, 64],\n    activation_fn=tf.nn.relu,\n    n_classes=2)","a56072ec":"def train_evaluate(estimator):\n    \"\"\"\n    \u041e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u044d\u0441\u0442\u0438\u043c\u0430\u0442\u043e\u0440\u0430\n    \"\"\"\n    _ = estimator.train(input_fn=train_input_fn)\n\n    metrics = estimator.evaluate(lambda: train_input_fn(test_data, test_labels))\n\n    for key, val in metrics.items():\n        print(f'{key} = {val}')","f4395e61":"# \u041e\u0431\u0443\u0447\u0430\u0435\u043c \u043b\u0438\u043d\u0435\u0439\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c\n\ntrain_evaluate(classifier1)","bef4db1f":"# \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u0434\u0432\u0443\u0445\u0441\u043b\u043e\u0439\u043d\u0443\u044e fully-connected \u043d\u0435\u0439\u0440\u043e\u043d\u043a\u0443\n\ntrain_evaluate(classifier2)","44265622":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044f $f(p) = p + 1$. \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u043d $p$, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0435, \u043e\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0412 \u043c\u0438\u0440\u0435 TensorFlow \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 $p$ \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u044e\u0442 \u043f\u043b\u0435\u0439\u0441\u0445\u043e\u043b\u0434\u0435\u0440\u044b.\n\n\u0412 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435\u0435 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0446\u0435\u043d\u0438\u0442\u044c `tf.Tensor` \u0431\u0435\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430, \n\u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0432\u0438\u0441\u0435\u0442\u044c \u043e\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430. ","ba0ac8c9":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0433\u0440\u0430\u0444\u044b tf.enable_eager_execution(). TensorFlow \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u0445\u043e\u0436 \u043d\u0430 numpy.","d627856b":"### tf.Variable (\u0420\u0430\u043d\u0433 1)\n\u0414\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 tf.Tensor \u0440\u0430\u043d\u0433\u0430 1, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:","39cbfba9":"### tf.placeholder","18580e06":"<img src=\"http:\/\/www.freelogovectors.net\/wp-content\/uploads\/2018\/07\/tensorflow-logo.png\" width=\"300\">\n\nTensorFlow --- \u043e\u0442\u043a\u0440\u044b\u0442\u0430\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u0435\u0439\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0442\u0435\u0439, \u0437\u0430\u0440\u043e\u0434\u0438\u0432\u0448\u0430\u044f\u0441\u044f \u0432 \u043d\u0435\u0434\u0440\u0430\u0445 **Google Brain**.\n\n\u0421\u0435\u0433\u043e\u0434\u043d\u044f \u043c\u044b \u0443\u0437\u043d\u0430\u0435\u043c:\n\n1. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0433\u0440\u0430\u0444\n2. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0442\u0435\u043d\u0437\u043e\u0440\n3. \u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u0441\u0435\u0441\u0441\u0438\u0438\n\n\n\u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438:\n\n* [\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b](https:\/\/www.tensorflow.org\/guide\/low_level_intro)\n* [cs224n: Introduction to TensorFlow](https:\/\/youtu.be\/PicxU81owCs)","2776d55b":"# \u0422\u0435\u043d\u0437\u043e\u0440\u044b \u0432 TensorFlow\n\n\u0412 Tensorflow \u0432\u0441\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0438 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0442\u0435\u043d\u0437\u043e\u0440\u0430\u043c\u0438 (\u043c\u043d\u043e\u0433\u043e\u043c\u0435\u0440\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b)\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b TensorFlow \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442,\n\u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u0433\u0440\u0430\u0444 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 `tf.Tensor` \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044f, \u043a\u0430\u043a \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u0436\u0434\u044b\u0439 \n\u0442\u0435\u043d\u0437\u043e\u0440  \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0434\u0440\u0443\u0433\u0438\u0445 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432, \u0430 \u0437\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u0438 \u044d\u0442\u043e\u0433\u043e \n\u0433\u0440\u0430\u0444\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.\n\n\u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b \u0433\u0440\u0430\u0444\u044b?\n\n1. \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439. \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0447\u0430\u0441\u0442\u0438 \u0433\u0440\u0430\u0444\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n2. \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043d\u0430 CPU, GPU, TPU\n\n`tf.Tensor` \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438:\n\n * \u0442\u0438\u043f \u0434\u0430\u043d\u043d\u044b\u0445 (`float32`, `int32`, \u0438\u043b\u0438 `string`, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440)\n * \u0440\u0430\u0437\u043c\u0435\u0440\u044b (shape)","f24598a3":"\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 `tf.Tensor`, \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e placeholder.\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u043e\u0433\u0443\u0442 \u0443\u0441\u043b\u043e\u0436\u043d\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u043d\u0438\u0435 `tf.Tensor`. \nTensorFlow \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e `tf.Tensor` \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0432\u043d\u0443\u0442\u0440\u0438\n\u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438\u043b\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043f\u043e\u0442\u043e\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0415\u0441\u043b\u0438 `tf.Tensor` \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438, \u043e\u0446\u0435\u043d\u043a\u0430 `tf.Tensor` \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0433\u0434\u0430 \u0447\u0442\u043e-\u0442\u043e \u043f\u043e\u043c\u0435\u0441\u0442\u044f\u0442 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c; \n\u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043e\u0446\u0435\u043d\u043a\u0430 \u0442\u0435\u043d\u0437\u043e\u0440\u0430 \u0437\u0430\u0432\u0438\u0441\u043d\u0435\u0442. \u041f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u043e\u0447\u0435\u0440\u0435\u0434\u044f\u043c\u0438, \u043d\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0439\u0442\u0435\n\u0432\u044b\u0437\u0432\u0430\u0442\u044c `tf.train.start_queue_runners` \u043f\u0435\u0440\u0435\u0434 \u043e\u0446\u0435\u043d\u043a\u043e\u0439 \u043b\u044e\u0431\u043e\u0433\u043e `tf.Tensor`.","bb24a2a5":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0438\u0434\u044b \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435:\n\n  * `tf.Variable`\n  * `tf.constant`\n  * `tf.placeholder`\n  * `tf.SparseTensor`\n  \n\u0417\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c `tf.Variable`, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043d\u0437\u043e\u0440\u0430 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c\u043e, \u0442.\u0435.\n\u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043d\u0437\u043e\u0440 \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u043d\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n\u041e\u0434\u043d\u0430\u043a\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0438 \u0442\u043e\u0433\u043e \u0436\u0435 \u0442\u0435\u043d\u0437\u043e\u0440\u0430 \u0434\u0432\u0430\u0436\u0434\u044b \u043c\u043e\u0436\u0435\u0442 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f;\n\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e\u0442 \u0436\u0435 \u0442\u0435\u043d\u0437\u043e\u0440 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0447\u0442\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0434\u0438\u0441\u043a\u0430, \u0438\u043b\u0438 \n\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430.\n\n### \u0420\u0430\u043d\u0433\n**\u0420\u0430\u043d\u0433** \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `tf.Tensor` \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0433\u043e \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439. \u0421\u0438\u043d\u043e\u043d\u0438\u043c\u0430\u043c\u0438 \u0440\u0430\u043d\u0433\u0430\n\u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f **\u043f\u043e\u0440\u044f\u0434\u043e\u043a**, **\u0441\u0442\u0435\u043f\u0435\u043d\u044c**, **\u0440\u0430\u0437\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u044c**.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0440\u0430\u043d\u0433 \u0432 TensorFlow \u044d\u0442\u043e \u043d\u0435 \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u0447\u0442\u043e \n\u0438 \u0440\u0430\u043d\u0433 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u0432 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0435.\n\u041a\u0430\u043a \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u043d\u0433 \u0432 Tensorflow \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438:\n\n\u0420\u0430\u043d\u0433 | \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c\n--- | ---\n0 | \u0421\u043a\u0430\u043b\u044f\u0440 (\u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430)\n1 | \u0412\u0435\u043a\u0442\u043e\u0440 (\u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0430 \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435)\n2 | \u041c\u0430\u0442\u0440\u0438\u0446\u0430 (\u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0447\u0438\u0441\u0435\u043b)\n3 | 3-\u0422\u0435\u043d\u0437\u043e\u0440 (\u043a\u0443\u0431 \u0447\u0438\u0441\u0435\u043b)\nn | n-\u0422\u0435\u043d\u0437\u043e\u0440 (\u043d\u0443 \u0432\u044b \u043f\u043e\u043d\u044f\u043b\u0438 \u0438\u0434\u0435\u044e)\n","7aa9f1d6":"\u0417\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0421\u0442\u0440\u043e\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0435\u0434\u0438\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c \u0432 TensorFlow, \u0430 \u043d\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438\u043c\u0435\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0441\u043a\u0430\u043b\u044f\u0440\u044b, \u0432\u0435\u043a\u0442\u043e\u0440\u044b \u0441\u0442\u0440\u043e\u043a \u0438 \u0442.\u0434.","372f3b1d":"### tf.data\n\n\u041a\u0440\u0443\u0442\u0430\u044f \u0444\u0438\u0447\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0434\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043c\u043e\u0434\u0435\u043b\u044c. \u041c\u044b \u043f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043e \u043d\u0435\u0439 \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0430\u0437.\n\n[\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b](https:\/\/www.tensorflow.org\/guide\/datasets)","8d06b94f":"### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `tf.Tensor`\n\n\u0415\u0441\u0442\u044c \u0434\u0432\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u044b `tf.Tensor`. \u041f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \n\u0433\u0440\u0430\u0444\u0430 \u0447\u0430\u0441\u0442\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0441\u043f\u0440\u043e\u0441\u0438\u0442\u044c, \u0447\u0442\u043e \u0443\u0436\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e \u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430\u0445 \u0442\u0435\u043d\u0437\u043e\u0440\u0430. \n\u042d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0432 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e `shape` \u043e\u0431\u044a\u0435\u043a\u0442\u0430 `tf.Tensor`. \n\u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 `TensorShape`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u0434\u043e\u0431\u043d\u044b\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \n\u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 (\u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0438 \u0433\u0440\u0430\u0444\u0430 \n\u043d\u0435 \u0432\u0441\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b).\n\n\u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c `tf.Tensor` \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435\n\u0440\u0430\u0437\u043c\u0435\u0440\u044b \u0434\u0440\u0443\u0433\u043e\u0433\u043e `tf.Tensor` \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u0437\u043e\u0432\u043e\u043c\n\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 `tf.shape`. \u042d\u0442\u0438\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0433\u0440\u0430\u0444, \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n\u043c\u0430\u043d\u0438\u043f\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u0430\u043c\u0438 \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432 \u0441\u0442\u0440\u043e\u044f \u0434\u0440\u0443\u0433\u0438\u0435 \u0442\u0435\u043d\u0437\u043e\u0440\u044b \u0437\u0430\u0432\u0438\u0441\u044f\u0449\u0438\u0435 \u043e\u0442 \n\u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 `tf.Tensor`.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u0435\u043a\u0442\u043e\u0440 \u043d\u0443\u043b\u0435\u0439 \u0442\u043e\u0433\u043e \u0436\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u0430,\n\u0447\u0442\u043e \u0438 \u0447\u0438\u0441\u043b\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u044b:","b29185fd":"### tf.Variable & tf.constant (\u0420\u0430\u043d\u0433 0)\n\n\u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435? \u0412 \u0447\u0435\u043c \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 tf.constant?\n\n\u041c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0445 \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u0442\u043b\u0438\u0447\u043d\u043e \u043f\u043e\u0434\u043e\u0439\u0434\u0443\u0442 \u0432\u0435\u0441\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 $W$ \u0432 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0438 $y = Wx$.","85264551":"### tf.estimators\n\nTensorFlow \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0441\u0442, \u043a\u0430\u043a \u0438 sklearn.\n\n[\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b](https:\/\/www.tensorflow.org\/guide\/estimators)\n\n\u0413\u043e\u0442\u043e\u0432\u044b\u0435 \u044d\u0441\u0442\u0438\u043c\u0430\u0442\u043e\u0440\u044b:\n\n* DNNClassifier (deep neural network)\n* BoostedTreesClassifier\n* LinearClassifier\n* RNNClassifier\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0440\u0430\u0437 \u043c\u044b \u043d\u0430\u0443\u0447\u0438\u043c\u0441\u044f \u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u044d\u0441\u0442\u0438\u043c\u0430\u0442\u043e\u0440\u044b.","1649e8ed":"\u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435 \u0447\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0439 \u0432 `[]` \u043c\u043e\u0436\u0435\u0442 \u0441\u0430\u043c \u0431\u044b\u0442\u044c \u0441\u043a\u0430\u043b\u044f\u0440\u043e\u043c `tf.Tensor`, \u0435\u0441\u043b\u0438\n\u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u0432\u0435\u043a\u0442\u043e\u0440\u0430.\n\n\u0414\u043b\u044f \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432 \u0440\u0430\u043d\u0433\u0430 2 \u0438\u043b\u0438 \u0432\u044b\u0448\u0435 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044f \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0435\u0435. \u0414\u043b\u044f\n`tf.Tensor` \u0440\u0430\u043d\u0433\u0430 2, \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0430\u043a \u0438 \u043e\u0436\u0438\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043a\u0430\u043b\u044f\u0440:","502d7f79":"\n## \u041e\u0446\u0435\u043d\u043a\u0430 \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432\n\n\u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u044b\u043b \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0433\u0440\u0430\u0444, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \n\u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 `tf.Tensor` \u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u044c \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u043d\u043e\u0435 \u0435\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u0447\u0430\u0441\u0442\u043e \n\u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u043e\u0442\u043b\u0430\u0434\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 TensorFlow. \n\n\u0421\u0430\u043c\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u0446\u0435\u043d\u0438\u0442\u044c Tensor - \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `Tensor.eval`. \n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:","1e820af2":"### tf.Variable (\u0420\u0430\u043d\u0433 2 \u0438 >2)\n\u0420\u0430\u043d\u0433 2 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 tf.Tensor \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u0430:\n\n","3c135ca3":"### \u0421\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0441\u0440\u0435\u0437\u044b `tf.Tensor`\n\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 `tf.Tensor` \u044d\u0442\u043e n-\u043c\u0435\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u044f\u0447\u0435\u0435\u043a, \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043e\u0434\u043d\u043e\u0439 \u044f\u0447\u0435\u0439\u043a\u0435\n\u0432 `tf.Tensor` \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c n \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.\n\n\u0414\u043b\u044f \u0442\u0435\u043d\u0437\u043e\u0440\u043e\u0432 \u0440\u0430\u043d\u0433\u0430 0 (\u0441\u043a\u0430\u043b\u044f\u0440\u043e\u0432), \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043d\u0435 \u043d\u0443\u0436\u043d\u044b, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u0442\u043e \u0443\u0436\u0435\n\u043f\u0440\u043e\u0441\u0442\u043e \u0447\u0438\u0441\u043b\u043e.\n\n\u0414\u043b\u044f \u0442\u0435\u043d\u0437\u043e\u0440\u0430 \u0440\u0430\u043d\u0433\u0430 1 (\u0432\u0435\u043a\u0442\u043e\u0440), \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0434\u0430\u0441\u0442 \u0432\u0430\u043c \u0434\u043e\u0441\u0442\u0443\u043f\n\u043a \u0447\u0438\u0441\u043b\u0443:","c4eebbc7":"\u041f\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u043e\u0434\u043d\u0430\u043a\u043e, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0432\u0435\u043a\u0442\u043e\u0440 \u043c\u0430\u0442\u0440\u0438\u0446\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:","77567a30":"\u0414\u0430\u0442\u0430\u0441\u0435\u0442 IMDB \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0441\u0440\u0430\u0437\u0443 \u0432 TensorFlow \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 load_data. \u041e\u043d \u0443\u0436\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u043e\u0431\u0437\u043e\u0440\u044b (\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u043b\u043e\u0432) \u0431\u044b\u043b\u0438 \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0441\u043b\u043e\u0432\u043e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435.\n\n\u041d\u0430\u043f\u0438\u0448\u0435\u043c \u043f\u0430\u0440\u0443 \u0441\u0442\u0440\u043e\u0447\u0435\u043a \u043a\u043e\u0434\u0430 \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0434\u0430\u0442\u0430\u0441\u0435\u0442.","7d7f7c97":"\u041c\u0435\u0442\u043e\u0434 `eval` \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0433\u0434\u0430 \u0430\u043a\u0442\u0438\u0432\u043d\u0430\u0441\u0435\u0441\u0441\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `tf.Session` \n (\u0441\u043c. [\u0413\u0440\u0430\u0444\u044b \u0438 \u0441\u0435\u0441\u0441\u0438\u0438](.\/graphs.md) \u0434\u043b\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438).\n\n`Tensor.eval` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 numpy \u0441 \u0442\u0435\u043c \u0436\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\u043c \u0447\u0442\u043e \u0438 \u0442\u0435\u043d\u0437\u043e\u0440.\n","52b82077":"### \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 `tf.Tensor`\n\n**\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432** \u0442\u0435\u043d\u0437\u043e\u0440\u0430 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0435\u0433\u043e\n\u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u0439. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043a\u0430\u043b\u044f\u0440\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0440\u0430\u0432\u043d\u043e `1`. \u0422\u0430\u043a \u043a\u0430\u043a \u043c\u043d\u043e\u0433\u043e\n\u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u043c\u043e\u0433\u0443\u0442 \u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u043e \u0438 \u0442\u043e \u0436\u0435 \u0447\u0438\u0441\u043b\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432\n\u0447\u0430\u0441\u0442\u043e \u0443\u0434\u043e\u0431\u043d\u043e \u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u044b `tf.Tensor`, \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u044f \u0435\u0433\u043e \n\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `tf.reshape`.\n\n\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u0442\u0435\u043d\u0437\u043e\u0440\u0430:","b512d1a7":"## \u041f\u0440\u043e\u0441\u0442\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 TF\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c TensorFlow \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432."}}