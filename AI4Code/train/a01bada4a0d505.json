{"cell_type":{"91914da8":"code","89e89a2d":"code","4c80d2ec":"code","1e6ad4c9":"code","d20a3aed":"code","5467c068":"code","fea06701":"code","fe9533b9":"code","ecda6bc6":"code","6d5ca959":"code","b628c647":"code","e0e8a7c1":"code","eb7f6056":"markdown","b212e075":"markdown","76e94db6":"markdown","92b8bbb3":"markdown","1c12a62a":"markdown","60881989":"markdown"},"source":{"91914da8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","89e89a2d":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error, r2_score, accuracy_score, confusion_matrix\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom warnings import filterwarnings\nfrom sklearn.metrics import confusion_matrix, accuracy_score\nfilterwarnings(\"ignore\")","4c80d2ec":"data=pd.read_csv(\"..\/input\/brain-tumor\/data.csv\")","1e6ad4c9":"data.head()","d20a3aed":"data.info","5467c068":"data.size","fea06701":"data.describe().T","fe9533b9":"X = data.iloc[:,1:-1]\ny=data.iloc[:,-1]\n","ecda6bc6":"y = [1 if i.strip()  ==\"tumor\" else 0  for i in y]","6d5ca959":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=1)","b628c647":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nx_train = scaler.fit_transform(x_train)\nx_test = scaler.transform(x_test)","e0e8a7c1":"from xgboost import XGBClassifier\n\nmodel =XGBClassifier().fit(x_train,y_train)\ny_pred =model.predict(x_test)\nac = accuracy_score(y_test,y_pred)\ncon = confusion_matrix(y_test, y_pred)\naccuracies = []\naccuracies.append(ac)\nprint(\"Xgboost model accuary\",ac)\nprint(con)","eb7f6056":"# Importing Libraries And Importing Data","b212e075":"# Build Model And Accurcy Value","76e94db6":"# X,Y Data","92b8bbb3":"# Data Review","1c12a62a":"# Split Data","60881989":"# Standardize"}}