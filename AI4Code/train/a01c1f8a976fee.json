{"cell_type":{"7335f79e":"code","dab3e0dc":"code","4aa7a14f":"code","0042c626":"code","9df4db81":"code","bb0a5e63":"code","d7a98e1c":"code","798d39d2":"code","e5d3ebc1":"code","7c6cff52":"code","6593340f":"code","a62a3318":"code","fec8eda1":"code","126e8060":"code","a2560425":"code","c4b2b6a3":"code","6a1e8450":"code","6d6c3299":"code","d47de7ee":"code","59f7cb7b":"code","0e872278":"code","4559b07a":"code","267f5a94":"code","b53bc8e0":"code","36119b13":"markdown","0009148d":"markdown","2aa74ce3":"markdown"},"source":{"7335f79e":"import seaborn as sns","dab3e0dc":"iris = sns.load_dataset('iris')\niris.head()","4aa7a14f":"# attribute matrix(X)(numpySeries or pandas DataFrame)\n# target variable (y)(dependent variable)","0042c626":"X_iris = iris.drop('species', axis=1) # attribute matrix(X)\nX_iris.shape","9df4db81":"y_iris = iris['species'] # target variable (y)(dependent variable)\ny_iris.shape\n","bb0a5e63":"import matplotlib.pyplot as plt\nimport numpy as np","d7a98e1c":"rng = np.random.RandomState(42) # we fix the data","798d39d2":"# we produce random independent variable and dependent variable\nx = 10*rng.rand(50)\ny = 2*x-1+rng.randn(50)\nplt.scatter(x,y);","e5d3ebc1":"from sklearn.linear_model import LinearRegression","7c6cff52":"model = LinearRegression(fit_intercept=True) # model sampling OOP\nmodel # model sampling","6593340f":"X = x[:,np.newaxis] #two dimensional attribute matrix\nX.shape","a62a3318":"model.fit(X,y) # model have created","fec8eda1":"model.coef_ # coefficient of X","126e8060":"model.intercept_ #intercept","a2560425":"x_fit = np.linspace(-1,11,50) #we divide 50 point, between 1, 11 \nX_fit = x_fit[:,np.newaxis]  # we set this values to one dimensional array\ny_fit =model.predict(X_fit) # we predicted this values","c4b2b6a3":"plt.scatter(x,y)\nplt.plot(x_fit,y_fit)","6a1e8450":"from sklearn.model_selection import train_test_split","6d6c3299":"X_train, X_test, y_train, y_test = train_test_split(X_iris, y_iris, random_state=1)\n# we split the dataset into train and test","d47de7ee":"from sklearn.naive_bayes import GaussianNB","59f7cb7b":"model = GaussianNB() # OOP sampling","0e872278":"model.fit(X_train, y_train) # we set the model","4559b07a":"y_model = model.predict(X_test) # we predict the X_test values","267f5a94":"from sklearn.metrics import accuracy_score\n# we import this to find out the model accuracy proport\u015fon","b53bc8e0":"accuracy_score(y_test, y_model)\n# accuracy proportion\n# Using this model, we can predict a new iris flower tag 97% accurately.","36119b13":"### model operations","0009148d":"![image.png](attachment:97685e37-d725-45bb-aa54-e9a018d86caf.png)","2aa74ce3":"## What is the Scikit-Learn and how to use it ?\n"}}