{"cell_type":{"d32cb473":"code","55ca0036":"code","136d5d12":"code","5542bc65":"code","90ecc651":"code","e8b5c703":"code","ddcda0a4":"code","f43e1b9f":"code","59976f3e":"code","427d2cd4":"code","8e90276f":"code","22680170":"code","4a49935f":"code","03486549":"code","aef806df":"markdown","b016f0a4":"markdown","5141acaa":"markdown","c948c93b":"markdown","a02e2593":"markdown","72939e48":"markdown","0fa4c396":"markdown","fe3fbee8":"markdown"},"source":{"d32cb473":"import tensorflow as tf\nprint(tf.__version__)","55ca0036":"import os\nprint(os.listdir('\/kaggle\/input\/fer2013'))","136d5d12":"train_dir = '\/kaggle\/input\/fer2013\/train'\ntest_dir  = '\/kaggle\/input\/fer2013\/test'","5542bc65":"labels = sorted(os.listdir(train_dir))\nprint(labels)","90ecc651":"from tensorflow.keras.preprocessing.image import ImageDataGenerator ","e8b5c703":"batch_size = 64\ntarget_size = (48,48)\n\ntrain_datagen = ImageDataGenerator(rescale=1.\/255)\ntest_datagen  = ImageDataGenerator(rescale=1.\/255)\n\ntrain_generator = train_datagen.flow_from_directory(\n        train_dir,\n        target_size=target_size,\n        batch_size=batch_size,\n        color_mode=\"grayscale\",\n        class_mode='categorical',\n        shuffle=True)\n\ntest_generator = test_datagen.flow_from_directory(\n        test_dir,\n        target_size=target_size,\n        batch_size=batch_size,\n        color_mode=\"grayscale\",\n        class_mode='categorical',\n        shuffle=False)","ddcda0a4":"from tensorflow.keras import models, layers","f43e1b9f":"input_shape = (48,48,1) # img_rows, img_colums, color_channels\nnum_classes = len(labels) # 7","59976f3e":"# Build Model\nmodel = models.Sequential()\n\nmodel.add(layers.Conv2D(32, kernel_size=(3, 3), activation='relu', padding='same', input_shape=input_shape))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.Conv2D(32, kernel_size=(3, 3), activation='relu', padding='same'))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(layers.Conv2D(64, kernel_size=(3, 3), activation='relu', padding='same'))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.Conv2D(64, kernel_size=(3, 3), activation='relu', padding='same'))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(layers.Conv2D(128, kernel_size=(3, 3), activation='relu', padding='same'))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.Conv2D(128, kernel_size=(3, 3), activation='relu', padding='same'))\nmodel.add(layers.BatchNormalization())\nmodel.add(layers.MaxPooling2D(pool_size=(2, 2)))\n\nmodel.add(layers.Flatten())\nmodel.add(layers.Dense(512, activation='relu'))\nmodel.add(layers.Dense(64, activation='relu'))  \nmodel.add(layers.Dense(num_classes, activation='softmax'))\n\nmodel.summary()","427d2cd4":"# Compile Model\nmodel.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy']) ","8e90276f":"num_epochs = 30\nSTEP_SIZE_TRAIN = train_generator.n\/\/train_generator.batch_size\nSTEP_SIZE_TEST  = test_generator.n\/\/test_generator.batch_size","22680170":"# Train Model\nhistory = model.fit(train_generator, steps_per_epoch=STEP_SIZE_TRAIN, epochs=num_epochs, verbose=1, validation_data=test_generator, validation_steps=STEP_SIZE_TEST)","4a49935f":"# Save Model\nmodels.save_model(model, 'fer2013_cnn.h5') ","03486549":"# Evaluate Model\nscore = model.evaluate(test_generator, steps=STEP_SIZE_TEST) \nprint('Test loss: ', score[0])\nprint('Test accuracy: ', score[1])","aef806df":"## Evaluate Model","b016f0a4":"### To match tensorflow version on your PC\n#### !pip install tensorflow==2.4.1","5141acaa":"## Data Generator","c948c93b":"## Save Model","a02e2593":"## Build Model","72939e48":"## Dataset : [FER-2013](https:\/\/www.kaggle.com\/msambare\/fer2013)\n![fer2013](https:\/\/miro.medium.com\/max\/602\/1*slyZ64ftG12VU4VTEmSfBQ.png)","0fa4c396":"# Facial Expression Recognition (Emotion Detection)","fe3fbee8":"## Train Model"}}