{"cell_type":{"0293d832":"code","f55eddca":"code","008067d3":"code","aacd3459":"code","b97e136e":"code","1e3c7ced":"code","7420443c":"code","05619dc1":"code","600e8a16":"code","ec65795c":"code","e74a450b":"code","10f5ca46":"code","15cc35e8":"code","5b4a21c9":"code","e64349dd":"code","a39b144b":"code","d4c518ad":"code","20a2a299":"markdown","0a52f101":"markdown","1c81e7fc":"markdown","f6700a46":"markdown","55720931":"markdown","9240b546":"markdown","1b3d3ec6":"markdown","5197ad00":"markdown","be9bff05":"markdown"},"source":{"0293d832":"from fastai.vision.all import *\nset_seed(999)","f55eddca":"!pip install wwf timm -qqq","008067d3":"from wwf.vision.timm import *","aacd3459":"df = pd.read_csv('..\/input\/cassava-leaf-disease-classification\/train.csv')","b97e136e":"idx2lbl = {0:\"Cassava Bacterial Blight (CBB)\",\n          1:\"Cassava Brown Streak Disease (CBSD)\",\n          2:\"Cassava Green Mottle (CGM)\",\n          3:\"Cassava Mosaic Disease (CMD)\",\n          4:\"Healthy\"}\n\ndf['label'].replace(idx2lbl, inplace=True)","1e3c7ced":"data_path = Path('..\/input\/cassava-leaf-disease-classification\/')","7420443c":"blocks = (ImageBlock, CategoryBlock)\nsplitter = RandomSplitter(0.2, seed=999)\ndef get_x(row): return data_path\/'train_images'\/row['image_id']\ndef get_y(row): return row['label']\nitem_tfms = RandomResizedCrop(460, min_scale=0.75, ratio=(1.,1.))\nbatch_tfms = [*aug_transforms(size=224, max_warp=0), Normalize.from_stats(*imagenet_stats)]","05619dc1":"block = DataBlock(blocks = blocks,\n                 get_x = get_x,\n                 get_y = get_y,\n                 splitter = splitter,\n                 item_tfms = item_tfms,\n                 batch_tfms = batch_tfms)","600e8a16":"dls = block.dataloaders(df, bs=32)","ec65795c":"learn = timm_learner(dls, 'efficientnet_b3', loss_func=LabelSmoothingCrossEntropy(), metrics=[accuracy], opt_func=ranger)\nlearn.to_native_fp16()","e74a450b":"learn.lr_find()","10f5ca46":"learn.fit_flat_cos(1,1e-2, cbs=[GradientAccumulation(), MixUp(), ReduceLROnPlateau()])","15cc35e8":"learn.recorder.plot_loss()","5b4a21c9":"learn.unfreeze()\nlearn.lr_find()","e64349dd":"learn.fit_flat_cos(10,1e-3, cbs=[GradientAccumulation(), MixUp(), ReduceLROnPlateau()])","a39b144b":"learn.to_native_fp32()","d4c518ad":"learn.save('b3')","20a2a299":"# fastai Efficientnet B3 with Ranger\n\nThis kernel will train a model that can achieve a score of ~83.5%","0a52f101":"We're going to use the `wwf` library with `timm` integrated\n\n> Note: this is a training *only* kernel","1c81e7fc":"Next we'll train our model:","f6700a46":"We'll read in our data similar to the original kernel I made [here](https:\/\/www.kaggle.com\/muellerzr\/cassava-fastai-starter)","55720931":"## Inference\n\nThis should be adapted in a seperate kernel, but here is a general guideline for submitting your code I have been doing:\n\n\n1. Create a dataset with your saved model\n2. Follow [this](https:\/\/www.kaggle.com\/muellerzr\/submission-notebook) notebook for generating your submission.","9240b546":"Finally you can save and export your model","1b3d3ec6":"1e-2 works fairly well here, in the future I want to play with weight-decay some to see if it can improve the performance. We'll train with Gradient Accumulation, MixUp, and ReduceLROnPlateu","5197ad00":"We'll unfreeze and see how the lr plot looks","be9bff05":"Based on emprical work I've done, 1e-3 will be stable enough for what we want. While the metric does get a bit funky here notice the train and valid loss mostly just keep going down together"}}