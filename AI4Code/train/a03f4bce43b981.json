{"cell_type":{"20ae8fb6":"code","df16c0fb":"code","d90d5fe6":"code","ea109932":"code","9b5ba92c":"code","e8b05630":"code","37020bff":"code","8102c4b0":"code","e3f955e5":"code","984b8ee6":"code","6612ea0a":"code","7888404f":"code","1d30b298":"code","f04b4c46":"code","4048f1dc":"code","e9f4d8c0":"code","e75bfe81":"code","285fd533":"code","7486f7bb":"code","15983cd0":"code","0dc44655":"code","1d659164":"code","8cb3b586":"code","25814c36":"code","f33a59b6":"code","20e74163":"code","1b391482":"code","81206093":"markdown","2dda5fc2":"markdown","2d322c58":"markdown","5551e0cb":"markdown","cbbef2d2":"markdown","6686ee1e":"markdown","b8a97e7e":"markdown","930aef62":"markdown","94a9abd6":"markdown","d56d429a":"markdown","a7c899a5":"markdown","7508f036":"markdown","9a0f7cfd":"markdown","734ef7ae":"markdown","34d4a13d":"markdown","8288fe6e":"markdown","1da50963":"markdown","d1cbf0d0":"markdown","24ef2fc6":"markdown","50d90efa":"markdown","360e99b3":"markdown","18fb7fa5":"markdown","e72b2be6":"markdown","d2ac5b16":"markdown","68f15262":"markdown","ba0a81a0":"markdown","69e8eb11":"markdown","d9d109af":"markdown"},"source":{"20ae8fb6":"import pandas as pd\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nfrom PIL import Image\n%matplotlib inline\nimport requests\nimport re","df16c0fb":"netflix = pd.read_csv('..\/input\/netflix-shows\/netflix_titles.csv')\nnetflix.head(3)","d90d5fe6":"netflix.info()","ea109932":"netflix.columns","9b5ba92c":"netflix.nunique()","e8b05630":"def missing_value_table(df):\n    missing_value = df.isna().sum().sort_values(ascending=False)\n    missing_value_percent = 100 * df.isna().sum()\/\/len(df)\n    missing_value_table = pd.concat([missing_value, missing_value_percent], axis=1)\n    missing_value_table_return = missing_value_table.rename(columns = {0 : 'Missing Values', 1 : '% Value'})\n    cm = sns.light_palette(\"green\", as_cmap=True)\n    missing_value_table_return = missing_value_table_return.style.background_gradient(cmap=cm)\n    return missing_value_table_return\n  \nmissing_value_table(netflix)","37020bff":"netflix['rating'] = netflix['rating'].fillna(netflix['rating'].mode()[0])\nnetflix['country'] = netflix['country'].fillna(netflix['country'].mode()[0])\nnetflix[['rating','country']].isna().sum()","8102c4b0":"netflix['date_added']=netflix['date_added'].fillna('January 1, {}'.format(str(netflix['release_year'].mode()[0])))\nnetflix['date_added'].isna().sum()","e3f955e5":"netflix.drop(['director','cast'],axis = 1,inplace = True)","984b8ee6":"netflix.isna().sum()","6612ea0a":"netflix['duration'] = netflix['duration'].map(lambda x : re.sub('[^0-9]','',x))\nnetflix['duration'] = pd.to_numeric(netflix['duration'])\nnetflix.head(3)","7888404f":"plt.figure(figsize= (8,5))\nsns.set_style(style = 'darkgrid')\n\nax = sns.countplot(x = 'type',data  = netflix, palette = 'Set2')\nplt.title('Movie Vs TV Show')","1d30b298":"sns.set_style(style = 'darkgrid')\nplt.figure(figsize = (10,3))\nax = sns.countplot(x ='rating', data = netflix,palette = 'Set2')\nplt.title('Count of Content Ratings',fontsize = 15)\nplt.xticks(rotation =90)\nplt.xlabel('Ratings',fontsize = 15)\nplt.ylabel('Total Count',fontsize = 15)","f04b4c46":"sns.set_style(style = 'darkgrid')\nplt.figure(figsize = (10,8))\nax = sns.countplot(data = netflix, x= 'rating',hue = 'type', palette='Set2' )\nplt.xticks(rotation = 90)\nplt.title('Content Ratings TV Shows vs Movie', fontsize = 15)\nplt.xlabel('Ratings',fontsize = 15)\nplt.ylabel('Total Count',fontsize = 15)","4048f1dc":"plt.figure(figsize = (10,5))\nax = sns.countplot(x = 'country',data= netflix, palette ='gist_rainbow', order = netflix['country'].value_counts().index[0:15])\nplt.xlabel('Country')\nplt.xticks(rotation = 90)\nplt.title('Countries with most content(Top 15)')\nplt.ylabel('Number of Movies and TV Shows')","e9f4d8c0":"netflix['release_month'] = netflix['date_added'].apply(lambda x: x.lstrip().split(' ')[0])\n\nsns.countplot(y = 'release_month',data = netflix,palette ='Pastel1', order = netflix['release_month'].value_counts().index)\nplt.title('Movies\/Tv show releases by month')\nplt.ylabel('Release Month')\nplt.xlabel('No. of Releases')","e75bfe81":"plt.figure(figsize= (10,5))\ntv_show = netflix[netflix['type']== 'TV Show']\n\nsns.countplot(x = 'duration',data = tv_show,palette = 'Oranges_r', order = tv_show['duration'].value_counts().index)\nplt.xticks(rotation = 90)\nplt.xlabel(\"Seasons\",fontsize = 15)\nplt.ylabel(\"Total count\",fontsize = 15)\nplt.title(\"Total Tv Show Season wise\",fontsize = 15)\n","285fd533":"movie_duration = netflix.loc[netflix['type']=='Movie']\n\nplt.figure(figsize=(12,10))\n\nax = sns.histplot(data = movie_duration,x = 'duration',bins = 50,kde = True,color = 'red')\nplt.title('Movie Duration',fontsize = 15)\nplt.xlabel('Total Duration(In Mins)',fontsize = 15)\nplt.ylabel('Total Movie Count',fontsize = 15)","7486f7bb":"tv_shows = netflix.loc[netflix['type']=='TV Show']\n\ntop10_shows = tv_shows.sort_values(by=['duration'])[-1:-11:-1]\ntop10_shows[['title','duration']]\nplt.figure(figsize=(8,10))\nsns.barplot(y = top10_shows['title'], x = top10_shows['duration'])\nplt.title('Top 10 TV Shows',fontsize = 15)\nplt.xlabel('No.of Seasons',fontsize = 15)\nplt.ylabel('TV Shows',fontsize = 15)","15983cd0":"movie = netflix.loc[netflix['type']=='Movie']\nmovie_trends = movie[movie['release_year']>=2016]\ndf = movie_trends.groupby(['release_year','rating']).size().reset_index(name = 'Total')\ndf1 = df[df['Total'] >= 10]\n\nplt.figure(figsize = (10,8))\nsns.set_style('darkgrid')\nsns.barplot(data = df1,x = 'release_year', y = 'Total',hue = 'rating',palette = 'Set1')\nplt.title('Movies released by rating since 2016 and beyond(more than 10 releases per year)')\nplt.xlabel('Year')\nplt.ylabel('Total Count')\n","0dc44655":"df = netflix[(netflix['type'] == 'TV Show') & (netflix['country'] == 'India') ]\ntv_show_India = df.groupby(['release_year','rating']).size().reset_index(name = 'Total')\n\nplt.figure(figsize = (12,10))\nsns.set_style('darkgrid')\nsns.barplot(data = tv_show_India,x = 'release_year', y = 'Total',hue = 'rating',palette = 'Set1')\nplt.title('TV shows released by India by ratings',fontsize = 15)\nplt.xlabel('Year',fontsize = 15)\nplt.ylabel('No.of Shows',fontsize = 15)","1d659164":"tv_show_USA= netflix[(netflix['type'] == 'TV Show') & (netflix['country'] == 'United States') ]\n\ntv_show_USA = tv_show_USA[tv_show_USA['release_year']>=2010]\n\ndf = tv_show_USA.groupby(['release_year','rating']).size().reset_index(name = 'Total')\n\nplt.figure(figsize = (12,10))\nsns.set_style('darkgrid')\nsns.barplot(data = df,x = 'release_year', y = 'Total',hue = 'rating',palette = 'Set1')\nplt.title('TV shows released by United States by ratings')","8cb3b586":"movie_genre = netflix.loc[netflix['type'] == 'Movie']\nplt.figure(figsize=(12,6))\nax = sns.countplot(y='listed_in',data = movie_genre,order = movie_genre[\"listed_in\"].value_counts().index[0:10],palette=\"Set2\")\nplt.title('Top Ten Movie Genre',fontsize = 15)\nplt.xlabel('Total Count',fontsize = 15)\nplt.ylabel('Genre',fontsize = 15)","25814c36":"Tv_Show_genre = netflix.loc[netflix['type'] == 'TV Show']\nplt.figure(figsize=(12,6))\nax = sns.countplot(y='listed_in',data = Tv_Show_genre,order = Tv_Show_genre[\"listed_in\"].value_counts().index[0:10],palette=\"Set2\")\nplt.title('Top Ten Tv Show Genre',fontsize = 15)\nplt.xlabel('Total Count',fontsize = 15)\nplt.ylabel('Genre',fontsize = 15)","f33a59b6":"df = netflix[netflix['type'] == 'TV Show'].groupby('release_year').count()[-25:-1]\ndf1 = netflix[netflix['type'] == 'Movie'].groupby('release_year').count()[-25:-1]\ndf2 = netflix.groupby('release_year').count()[-25:-1]\n\n\nplt.figure(figsize = (15,8))\nsns.set_style('darkgrid')\nsns.lineplot(data = df['show_id'],palette = 'Set1')\nsns.lineplot(data = df1['show_id'],palette = 'Set1')\nsns.lineplot(data = df2['show_id'],palette = 'Set1')\nplt.title('Year over Year Content Released',fontsize = 15)\nplt.xlabel('Year',fontsize = 15)\nplt.ylabel('No.of Shows',fontsize = 15)\nplt.legend(['TV', 'Movie','Total'], fontsize='large')","20e74163":"stopwords = set(STOPWORDS)\nwordcloud = WordCloud(background_color='white',\n                          stopwords=stopwords,\n                          max_words=200,\n                          max_font_size=40, \n                          random_state=42\n                         ).generate(str(netflix['listed_in']))\n\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.show()\n","1b391482":"words = (str(netflix['description']))\nmask = np.array(Image.open(requests.get('https:\/\/i.stack.imgur.com\/B0AAW.png',stream=True).raw))\n\n\ndef create_wordcloud(words, mask):\n    wc = WordCloud(width =500, height =800, background_color='white', \n                   stopwords=STOPWORDS, mask=mask,max_font_size =40,\n                  repeat=True,max_words = 300).generate(words)\n\n    plt.figure(figsize=(15,15))\n    plt.imshow(wc)\n    plt.axis('off')\n    plt.show()\n    \n\ncreate_wordcloud(words, mask)\n","81206093":"##### Total number of Tv Shows and Movies by Ratings","2dda5fc2":"### Findings\n1. Netflix has more movies than Tv shows\n2. Netflix has TV-MA ratings the most\n3. USA is by far the top contributer followed by India\n4. December is the busiest month for contents release followed by October\n5. Most of the contents has only 1 season\n6. Grey's Anatomy tops the list with most seasons(16) followed by NCIS. Cheers is number 10 with 10 seasons\n7. Since 2016 TV-MA has been released the most\n8. India has shifted towards TV-MA ratings after 2017. Before that it was mostly TV-14 ratings\n9. Same with USA, TV-MA content has increased since 2017.","2d322c58":"##### TOP 10 TV Show","5551e0cb":"### Trends of content released Year over Year","cbbef2d2":"# Exploratory Data Analysis","6686ee1e":"##### Top Ten Movie genre","b8a97e7e":"# Data visualization\n\n##### Movies vs TV Show","930aef62":"### Load the Dataset","94a9abd6":"###  Word Cloud\n\n##### Count of most used words in 'listed in' ","d56d429a":"##### Count of most used word in 'Description'","a7c899a5":"#####  Trend of movie ratings that has been released over the last five years\n","7508f036":"##### Number of Contents by Ratings","9a0f7cfd":"##### Tv Shows India has by rating","734ef7ae":"### Check for Missing Values","34d4a13d":" verify dataset has no missing values","8288fe6e":"<h1><center>Netflix TV Shows And Movie Analysis<\/center><\/h1>\n\n![Netflixloading.jpg](attachment:Netflixloading.jpg)\n\n\n#####  Image credit:https:\/\/streamdiag.com\/netflix-is-stuck-on-loading-screen-fix\/","1da50963":"##### Top Ten TV Show genre","d1cbf0d0":" Convert duration to numeric","24ef2fc6":"Netflix was founded in 1997 by Reed Hastings and Marc Randolph\nThe company's primary business is a subscription-based streaming service offering online streaming.\nNetflix is headquartered in Los Gatos, California.\nIn this Analysis we will answer the following questions through visualistions\n\n### Questions\n1. What contents Neflix has most\n2. Top contents by ratings\n3. Countries with most content\n4. Busiest month for content release\n5. Total contents by Season\n6. Top ten TV shows\n7. Movie released by ratings since 2016\n8. Tv Shows India has by ratings\n9. Tv Shows USA has by ratings\n10. Top 10 Movie genre","50d90efa":" ### Import Necessary Libraries ","360e99b3":"Replace nan values in data_added with January 1","18fb7fa5":"### Handling Missing Values\n\nReplace missing values with mode for ratings and country  column","e72b2be6":"##### Contries with most contents","d2ac5b16":"##### Count of TV Shows by number of seasons","68f15262":"##### Busiest Month for Content Release","ba0a81a0":"##### Movie Duration","69e8eb11":" Drop missing value rows from director and cast columns","d9d109af":"##### Tv Shows USA has by rating"}}