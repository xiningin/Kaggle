{"cell_type":{"49cf3375":"code","2fa35124":"code","42daccc3":"code","8d6a54ef":"code","09eebd21":"code","24dddc89":"code","0b5542a5":"code","688cf3d7":"code","4272ed66":"code","a6484283":"code","c245300f":"code","21bd5f2b":"code","af09abc1":"code","d908c29a":"code","86ce0436":"code","c0ac3fe0":"code","c18a6bee":"code","f6cae0bf":"code","94036906":"code","e620f8ad":"code","6b838e4d":"code","a31008cb":"code","1c0fe9c8":"code","f2ecd709":"code","0255465f":"code","9905120f":"code","ebd9842e":"code","66d4a522":"code","f57af49c":"markdown"},"source":{"49cf3375":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt \n%matplotlib inline\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","2fa35124":"data = pd.read_csv('..\/input\/train.csv')\ndata.head()","42daccc3":"data.info()\n","8d6a54ef":"sns.distplot(data['SalePrice'])","09eebd21":"data['SalePrice'].skew()","24dddc89":"data['SalePrice'].kurt()","0b5542a5":"var = 'GrLivArea'\nsns.scatterplot(data[var], data['SalePrice'], marker='o')","688cf3d7":"var = 'TotalBsmtSF'\nsns.scatterplot(data[var], data['SalePrice'], marker='o')","4272ed66":"sns.boxplot(data['OverallQual'], data['SalePrice'])","a6484283":"var = 'YearBuilt'\nsns.scatterplot(data[var], data['SalePrice'])","c245300f":"corr_mat = data.corr()\nplt.subplots(figsize=(12,12))\nsns.heatmap(corr_mat, cmap='YlGnBu')","21bd5f2b":"#saleprice correlation matrix\nk = 10 #number of variables for heatmap\ncols = corr_mat.nlargest(k, 'SalePrice')['SalePrice'].index\ncm = np.corrcoef(data[cols].values.T)\nsns.set(font_scale=1.25)\nhm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': k}, yticklabels=cols.values, xticklabels=cols.values)\nplt.show()","af09abc1":"cols = corr_mat.nlargest(k, 'SalePrice')\ncols","d908c29a":"sns.set()\ncols = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'TotalBsmtSF', 'FullBath', 'YearBuilt']\nsns.pairplot(data[cols], height = 2.5)\nplt.show();\n","86ce0436":"df_null = data.isnull().sum()\ndf_null = df_null[df_null != 0].sort_values(ascending = False)\ndf_null = df_null\/len(data)*100\ndf_null\n# Percentage of missing\/null values","c0ac3fe0":"cols_drop = list(df_null.index[:6].values)\nfor col in cols_drop:\n    data = data.drop(col, axis=1)","c18a6bee":"#Electrical remove one missing value\nind = data.loc[data['Electrical'].isnull()].index\ndata = data.drop(ind)","f6cae0bf":"cols_drop","94036906":"# Fixing skewness\nfrom scipy.stats import norm\nfrom scipy import stats\ndata.head()\n# sns.distplot(, fit=norm);\n# fig = plt.figure()\n# res = stats.probplot(data['SalePrice'], plot=plt)","e620f8ad":"#applying log transformation\ndata['SalePrice'] = np.log(data['SalePrice'])\nsns.distplot(data['SalePrice'], fit=norm);\nfig = plt.figure()\nres = stats.probplot(data['SalePrice'], plot=plt)","6b838e4d":"df = pd.get_dummies(data[cols[1:]])\ndf.head()","a31008cb":"from sklearn.ensemble import RandomForestRegressor\nrf = RandomForestRegressor()\nrf.fit(df, data['SalePrice'])\nrf.score(df, data['SalePrice'])","1c0fe9c8":"data_test = pd.read_csv('..\/input\/test.csv')\n# df_test.isnull().sum().sort_values(ascending=False)","f2ecd709":"df_test = pd.get_dummies(df_test[cols[1:]])\ndf_test.head()","0255465f":"df_test.loc[df_test['GarageCars'].isnull(), 'GarageCars'] = 1.0\ndf_test.loc[df_test['TotalBsmtSF'].isnull(), 'TotalBsmtSF'] = 896","9905120f":"df_test.isnull().sum()","ebd9842e":"prices = rf.predict(df_test)\nprices = np.exp(prices)\nresult = pd.DataFrame()\nresult['Id'] = data_test['Id']\nresult['SalePrice'] = prices","66d4a522":"result.head()","f57af49c":"# Features that look promising\n- OverallQual\n- YearBuilt\n- TotalBsmtSF\n- 1stFlrSF\n- GrLivArea\n- FullBath\n- TotRmsAbvGrd\n- GarageCars\n- GarageArea\n"}}