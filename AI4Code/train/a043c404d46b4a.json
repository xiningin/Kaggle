{"cell_type":{"c61e85d7":"code","5d3463d1":"code","c490539a":"code","96ee2774":"code","5e30e074":"code","76ecc615":"code","056bd397":"code","3d948659":"code","d7c3bf7b":"code","76b05974":"code","b20a9a4c":"code","73e7e018":"code","681a94da":"code","106a181e":"code","948906e7":"code","b9dd118f":"code","5a10bd27":"code","858215bf":"code","2bb234ee":"code","8152ef72":"code","c768f9dd":"code","a1342916":"code","df046c6b":"code","367891b8":"code","d1b98724":"code","99ca9182":"code","98418230":"code","7453c7fd":"code","beb3dbc3":"code","55db1871":"code","7cb3fbf7":"markdown","b9a19b65":"markdown","f957bfcc":"markdown","1408a8b5":"markdown","0dd666c2":"markdown","64fb0362":"markdown","69d1dc41":"markdown","dd400130":"markdown"},"source":{"c61e85d7":"!pip install xlrd\n!pip install openpyxl","5d3463d1":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport warnings\n\nwarnings.filterwarnings(action='ignore')","c490539a":"data = pd.read_excel('..\/input\/predict-a-doctors-consultation-fee\/train.xlsx',sheet_name='Sheet1', na_values='NaN')","96ee2774":"def pre_func(df):\n    df['Qualification'] = df['Qualification'].str.split('-')\n    df['Experience'] = df['Experience'].str.split(' ')\n    df['Place'] = df['Place'].str.split(',')\n    \n    df.drop(['Rating','Miscellaneous_Info'], axis=1, inplace=True)\n    df.dropna(axis='rows', inplace=True)\n    df = df.reset_index(drop=True)\n    \n    for i in range(df.shape[0]):\n        df.loc[i,'Experience'] = df.loc[i,'Experience'][0]\n        df.loc[i,'Qualification'] = df.loc[i,'Qualification'][0]\n        if len(df.loc[i,'Place']) > 1:\n            df.loc[i,'Place'] = df.loc[i,'Place'][1]\n        else:\n            df.loc[i,'Place'] = df.loc[i,'Place'][0]\n        \n    df['Place'] = df['Place'].str.strip()\n    df = df[~((df.Place == 'e') | (df.Place == 'Sector 5'))].reset_index(drop=True)\n    df['Experience'] = df['Experience'].astype('int64')\n    df['Qualification'] = df['Qualification'].str.split(',')\n    \n    for i in range(df.shape[0]):\n        df.loc[i,'Qualification'] = df.loc[i,'Qualification'][0]\n        \n    return df","5e30e074":"def outlier_iqr(data):\n    q1,q3 = np.percentile(data,[25,75])\n    iqr = q3-q1\n    lower_bound = q1 - (iqr*1.5)\n    upper_bound = q3 + (iqr*1.5)\n    \n    return np.where((data>upper_bound) | (data<lower_bound))","76ecc615":"df = pre_func(data)\ndf.head(100)","056bd397":"FeesbyPlace = df[['Place','Fees']].groupby('Place').agg('mean').sort_values('Fees')\nFeesbyPlace","3d948659":"plt.rcParams['figure.figsize'] = [20, 6]\nplt.bar(FeesbyPlace.index, FeesbyPlace.Fees)","d7c3bf7b":"FeesbyProfile = df[['Profile','Fees']].groupby('Profile').agg('mean').sort_values('Fees')\nFeesbyProfile","76b05974":"plt.rcParams['figure.figsize'] = [20, 6]\nplt.bar(FeesbyProfile.index, FeesbyProfile.Fees)","b20a9a4c":"train_x = df.iloc[:,1:-1]\ntrain_y = df.iloc[:,-1]","73e7e018":"print(outlier_iqr(train_y))\nplt.boxplot(train_y)","681a94da":"train_x = pd.get_dummies(train_x)","106a181e":"from sklearn.preprocessing import MinMaxScaler","948906e7":"mc = MinMaxScaler()\nmc.fit(train_x['Experience'].values.reshape(-1,1))","b9dd118f":"train_x['Experience'] = mc.transform(train_x['Experience'].values.reshape(-1,1))","5a10bd27":"train_x","858215bf":"from sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor","2bb234ee":"lr = LinearRegression()\nrfr = RandomForestRegressor()","8152ef72":"lr.fit(train_x, train_y)\nrfr.fit(train_x, train_y)","c768f9dd":"lr_pred = lr.predict(train_x)\nrfr_pred = rfr.predict(train_x)","a1342916":"from sklearn.metrics import mean_squared_error","df046c6b":"print(\"LinearRegression : \", mean_squared_error(train_y,lr_pred))\nprint(\"RandomForestRegression : \", mean_squared_error(train_y,rfr_pred))","367891b8":"from sklearn.model_selection import GridSearchCV","d1b98724":"rfr_cv = RandomForestRegressor()\n\nrfr_cv_param_grid = {'max_depth': [10,15,20,25,30,35,40], 'bootstrap' : [True,False], 'random_state' : [123], 'warm_start' : [True,False]}\nrfr_grid = GridSearchCV(estimator=rfr_cv, param_grid=rfr_cv_param_grid, scoring='neg_mean_squared_log_error', n_jobs=-1, cv=5, refit=True, return_train_score=True)\n\nrfr_grid.fit(train_x, train_y)","99ca9182":"rfr_grid_df = pd.DataFrame(rfr_grid.cv_results_)\nrfr_grid_df","98418230":"rfr_grid_df[rfr_grid_df['rank_test_score']==1]","7453c7fd":"rfr_grid_df.loc[rfr_grid_df['rank_test_score']==1, 'params'][1]","beb3dbc3":"rfr = RandomForestRegressor(bootstrap=True, max_depth=10, random_state=123, warm_start=False)","55db1871":"rfr.fit(train_x, train_y)\nrfr_pred = rfr.predict(train_x)\nprint(\"RandomForestRegression : \", mean_squared_error(train_y,rfr_pred))","7cb3fbf7":"## 5.Train model and prediction","b9a19b65":"## 3. Data EDA","f957bfcc":"#### Installation packages for reading 'xlsx' format","1408a8b5":"## 6. Check MSE","0dd666c2":"## 7. GridSearchCV","64fb0362":"## 4. Data split and apply MinMaxScaler","69d1dc41":"## 1. Load package and Read Excel file","dd400130":"## 2. Preprocessing\n#### - Divide 'Qualification'\n#### - Change Experience data to 'int' type\n#### - Change Place"}}