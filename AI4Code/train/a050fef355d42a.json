{"cell_type":{"02263970":"code","0822a201":"code","4b154588":"code","274ff0c1":"code","f85ab35b":"code","43767034":"code","307ace37":"code","ab2b33b4":"code","5bdc82ec":"code","098bbb6c":"code","66da933e":"code","88ff47b1":"code","75d8e377":"code","670362e4":"code","aa17c7f0":"code","09df03a0":"markdown","7de10744":"markdown","1905cd18":"markdown","2c40c486":"markdown","895ffb3f":"markdown","d2a19da4":"markdown","129ad174":"markdown","d77cca5f":"markdown"},"source":{"02263970":"# Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches   \nfrom matplotlib import cm","0822a201":"# Reading data in a dataframe\ndf = pd.read_csv(\"..\/input\/indian-women-in-defense\/WomenInDefense.csv\")\ndf.head()","4b154588":"# Rename column\ndf.rename({'Army Medical Corps, Dental Corps & Military Nursing Service (Common for three forces)':\"Others\"}, axis=1, inplace=True)","274ff0c1":"# Setting index and Transpose\ndf=df.set_index('Year').T","f85ab35b":"# creating a column named Total for sum of all women officers commissioned in respective forces from 2016-2018\ndf['Total'] =  df.sum (axis = 1)\ndf","43767034":"total_values = sum(df['Total'])\nprint(\"total values=\",total_values)\neach_prop = [(float(val) \/ total_values) for val in df['Total']]\n\nfor i, j in enumerate(each_prop):\n    print (df.index.values[i] + ': ' + str(j))","307ace37":"width = 40 \nheight = 5 \n\nnum_cells = width * height \nnum_cells","ab2b33b4":"cells_each = [round(p * num_cells) for p in each_prop]\n\nfor i, cells in enumerate(cells_each):\n    print (df.index.values[i] + ': ' + str(cells))","5bdc82ec":"chart = np.zeros((height, width))\n\nitem_index = 0\ncell_index = 0\n\nfor col in range(width):\n    for row in range(height):\n        cell_index += 1\n\n        if cell_index > sum(cells_each[0:item_index]):\n            # ...proceed to the next category\n            item_index += 1       \n            \n        # set the class value to an integer, which increases with class\n        chart[row, col] = item_index\n        \nprint ('Waffle chart populated!')","098bbb6c":"fig = plt.figure()\nplt.matshow(chart)","66da933e":"fig = plt.figure()\ncolormap=plt.cm.plasma\nplt.matshow(chart, cmap=colormap)\n\n# get the axis\nax = plt.gca()\n\n# set minor ticks\nax.set_xticks(np.arange(-.5, (width), 1), minor=True)\nax.set_yticks(np.arange(-.5, (height), 1), minor=True)\n    \n# add gridlines based on minor ticks\nax.grid(which='minor', color=\"white\")","88ff47b1":"values_cumsum = np.cumsum(df['Total'])\nprint(values_cumsum)","75d8e377":"colormap(float(values_cumsum[0])\/total_values)","670362e4":"for i, item in enumerate(df.index.values):\n    label_str = item + ' (' + str(df['Total'][i]) + ')'\n    color_val = colormap(float(values_cumsum[i])\/total_values)\n    print(label_str)\n    print(color_val)","aa17c7f0":"fig = plt.figure()\ncolormap= plt.cm.viridis\nplt.matshow(chart, cmap= colormap)\nax = plt.gca()\nax.set_xticks(np.arange(-.5, (width), 1), minor=True)\nax.set_yticks(np.arange(-.5, (height), 1), minor=True)\nax.grid(which='minor', color='w')\nplt.colorbar()\n\nvalues_cumsum = np.cumsum(df['Total'])\ntotal_values = values_cumsum[len(values_cumsum) - 1]\n\n# create legend\nlegend_handles = []\nfor i, item in enumerate(df.index.values):\n    label_str = item + ' (' + str(df['Total'][i]) + ')'\n    color_val = colormap(float(values_cumsum[i])\/total_values)\n    legend_handles.append(mpatches.Patch(color=color_val,label=label_str))\n\n# add legend to chart\nplt.legend(handles=legend_handles,\n           bbox_to_anchor=(0, -0.5, 1, 0),\n           loc='lower center', \n           ncol=len(df.index.values)\n          )\nplt.title(\"Women Officers Commissioned in the Defence Forces from 2016 to 2018\",y=1.3)","09df03a0":"creating a matrix that resembles the waffle chart and populating it.","7de10744":"Prettify the chart.","1905cd18":"using the proportion of each category to determe it respective number of cells used for the category.","2c40c486":"Map the waffle chart matrix into a visual.","895ffb3f":"**Waffle chart:** Waffle chart is an interesting plot mainly used to display progress towards the goal. Github uses it to display daily efforts by its users. It has cells structure and can be used to display proportions as well ( as in the case of this visualization).<br><br>\n**About Data:** \n* Year-wise Women Officers Commissioned in the Defence Forces from 2016 to 2018\n* Data Source: https:\/\/community.data.gov.in\/women-officers-commissioned-in-the-defence-forces-during-2016-to-2018\/\n","d2a19da4":"Define size of waffle chart,num_cells represents total number of cells in chart.","129ad174":"Adding legend.","d77cca5f":"creating Waffle Chart: Starts here...<br>\n* Calculate total women commissioned\n* find proportion of different categories wrt total value\n"}}