{"cell_type":{"981d48aa":"code","85744997":"code","b0aa4f30":"code","19da1e5e":"code","a5da4555":"code","1fb9dead":"code","a9a68027":"code","ed98a07e":"code","5d5a687a":"code","24790b4e":"code","bd1ed23c":"code","958cf6ef":"code","8ee0a4a3":"code","20e1daad":"code","f774ac91":"code","822cadde":"code","54679673":"code","f69826c8":"code","4f06fac8":"code","041a3459":"code","476f4a9e":"code","53b1f178":"code","01dbe01b":"code","2ecd7ee3":"code","391608fd":"code","ed00ff1c":"code","f298464e":"markdown","a97c97b2":"markdown"},"source":{"981d48aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in 3\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n","85744997":"data = pd.read_csv(\"\/kaggle\/input\/diabetic-retinopathy-resized\/trainLabels.csv\")\ndata.head()","b0aa4f30":"data.head()","19da1e5e":"data['image_name'] = [i+\".jpeg\" for i in data['image'].values]\ndata.head()","a5da4555":"data['level'].hist()\ndata['level'].value_counts()","1fb9dead":"from sklearn.model_selection import train_test_split","a9a68027":"train, val = train_test_split(data, test_size=0.15)","ed98a07e":"train.shape, val.shape","5d5a687a":"from keras.preprocessing.image import ImageDataGenerator","24790b4e":"import cv2\ndef load_ben_color(image):\n    IMG_SIZE = 224\n    sigmaX=10\n    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))\n    image=cv2.addWeighted ( image,4, cv2.GaussianBlur( image , (0,0) , sigmaX) ,-4 ,128)\n    return image","bd1ed23c":"data_gen = ImageDataGenerator(rescale=1\/255.,\n                              zoom_range=0.15,\n                              fill_mode='constant',\n                              cval=0.,\n                              horizontal_flip=True,\n                              vertical_flip=True,\n                              preprocessing_function=load_ben_color)","958cf6ef":"# batch size\nbs = 32\n\ntrain_gen = data_gen.flow_from_dataframe(train, \n                                         \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                         x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                         batch_size=bs,\n                                         target_size=(224, 224))\nval_gen = data_gen.flow_from_dataframe(val,\n                                       \"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\",\n                                       x_col=\"image_name\", y_col=\"level\", class_mode=\"raw\",\n                                       batch_size=bs,\n                                       target_size=(224, 224))","8ee0a4a3":"from keras.applications.resnet50 import ResNet50\nimport keras.layers as L\nfrom keras.models import Model","20e1daad":"base_model = ResNet50(weights='..\/input\/keras-pretrained-models\/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5',\n                   include_top=False,\n                   input_shape=(224, 224, 3))\nx = base_model.output\nx = L.GlobalMaxPooling2D()(x)\nx = L.BatchNormalization()(x)\nx = L.Dropout(0.2)(x)\nx = L.Dense(1024, activation=\"relu\")(x)\nx = L.Dropout(0.1)(x)\nx = L.Dense(64, activation=\"relu\")(x)\npredictions = L.Dense(5, activation='softmax')(x)","f774ac91":"model = Model(inputs=base_model.input, outputs=predictions)","822cadde":"for layer in base_model.layers[:-20]: layer.trainable = False","54679673":"model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])","f69826c8":"model.summary()","4f06fac8":"from keras.callbacks import ModelCheckpoint, ReduceLROnPlateau\nmodel_chk = ModelCheckpoint(\"vgg16_model.h5\", save_best_only=True, monitor=\"val_accuracy\")\nreduce_lr = ReduceLROnPlateau()","041a3459":"model.fit_generator(train_gen, train_gen.n \/\/ bs,\n                    validation_data=val_gen, validation_steps=val_gen.n \/\/ bs,\n                    epochs=30, workers=4, callbacks=[model_chk])","476f4a9e":"model.evaluate_generator(val_gen, steps=val_gen.n\/bs, verbose=1)","53b1f178":"from keras.models import load_model\nmodel = load_model(\"vgg16_model.h5\")","01dbe01b":"from PIL import Image\nim = Image.open(\"..\/input\/diabetic-retinopathy-resized\/resized_train\/resized_train\/\" + val.iloc[0].image_name)\nim = np.array(im.resize((224, )*2, resample=Image.LANCZOS))\nim.shape","2ecd7ee3":"import matplotlib.pyplot as plt\nplt.imshow(im)","391608fd":"plt.imshow(load_ben_color(im))","ed00ff1c":"print(\"predicted:\", np.argmax(model.predict(load_ben_color(im).reshape(1, *im.shape))[0]))\nprint(\"actual:\", val.iloc[0].level)","f298464e":"test some instances","a97c97b2":"### ResNet50"}}