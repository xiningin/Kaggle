{"cell_type":{"ebd74244":"code","42c38172":"code","c8866307":"code","7d4da000":"code","255529e0":"code","dc764ea4":"code","b6978a8a":"code","0b6a1bfc":"code","c0260f8f":"code","de6f8b1a":"code","cdfc59a9":"code","17d9abdf":"code","5bec9070":"code","5f26128d":"code","adba72b0":"code","0a58aa6c":"code","29c95c97":"code","c6106046":"code","d37a772d":"code","18eb288b":"code","de5aba30":"code","40be676d":"code","95eecb27":"markdown","e2d4f5da":"markdown","677ac06d":"markdown"},"source":{"ebd74244":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","42c38172":"\n\nimport matplotlib.pyplot as plt\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import accuracy_score\n\nfrom sklearn.model_selection import (KFold, StratifiedKFold,\n                                     cross_val_predict, cross_val_score,\n                                     train_test_split)\n\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.naive_bayes import GaussianNB\n\nfrom sklearn.tree import DecisionTreeClassifier","c8866307":"df = pd.read_csv(\"..\/input\/banknote-authentication-uci\/BankNoteAuthentication.csv\")\ndf.head()","7d4da000":"df.describe()","255529e0":"\n\n# Count the number of observations of each class\nprint('Observations per class: \\n', df['class'].value_counts())\n\n","dc764ea4":"# Import seaborn\nimport seaborn as sns\n#import matplotlib\nimport matplotlib.pyplot as plt\n# Use pairplot and set the hue to be our class\nsns.pairplot(df, hue='class') \n\n# Show the plot\nplt.show()","b6978a8a":"df.isin([0]).any()","0b6a1bfc":"X = df.drop('class', axis=1)   # input feature vector\ny = df['class']                # labelled target vector","c0260f8f":"X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.20, random_state=10, stratify=y)\nX_train.head()","de6f8b1a":"kfold = KFold(n_splits=4, random_state=100)","cdfc59a9":"clf_g = DecisionTreeClassifier(criterion=\"gini\",random_state = 10)\n\nclf_g.fit(X_train, y_train)","17d9abdf":"scores = cross_val_score(clf_g, X_train, y_train, cv=kfold)\nscores.mean()","5bec9070":"y_pred = clf_g.predict(X_valid)\ny_pred","5f26128d":"cfm = confusion_matrix(y_pred, y_valid)\ncfm\n","adba72b0":"# accuracy score\nprint('accuracy using gini index: ',accuracy_score(y_pred,y_valid))","0a58aa6c":"clf_e = DecisionTreeClassifier(criterion=\"entropy\",random_state = 10)\nclf_e.fit(X_train,y_train)","29c95c97":"scores = cross_val_score(clf_e, X_train, y_train, cv=kfold)\nscores.mean()","c6106046":"y_pred_e = clf_g.predict(X_valid)\ny_pred_e","d37a772d":"cfm_e = confusion_matrix(y_pred_e, y_valid)\ncfm_e","18eb288b":"# accuracy score\nprint('accuracy using entropy: ',accuracy_score(y_pred_e,y_valid))","de5aba30":"# generate the tree\n\nfrom sklearn import tree\ntree.export_graphviz(clf_g, out_file=\"tree_gini.dot\")","40be676d":"# display the tree \n\nfrom graphviz import Source\nSource.from_file('tree_gini.dot') ","95eecb27":"### entropy","e2d4f5da":"### Gini","677ac06d":"Decision Tree classifier performed very well on bank note authentication classification problem using gini index and entropy parameters."}}