{"cell_type":{"ff2b3ec3":"code","7da227ff":"code","a544fe1c":"code","66eca52a":"code","8e56e436":"code","4c791b20":"code","632c82ee":"code","b8c8c4aa":"code","bc6955d4":"code","7fa79acc":"code","046e3feb":"code","03517c0d":"code","57796961":"code","34c63270":"code","18975cbc":"code","e7bdf05e":"code","10b09ce9":"code","76b2e30f":"code","f8ca2c0f":"code","d3af7b22":"code","ebeac62a":"code","cf64a683":"code","34b083d2":"code","0def4b3c":"code","da448216":"markdown","b07aae29":"markdown","dbc06cfb":"markdown","d3e16eb2":"markdown","9d12d3d4":"markdown","f6b7bf6f":"markdown"},"source":{"ff2b3ec3":"import numpy as np \nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression as LinReg","7da227ff":"data = pd.read_csv(\"\/kaggle\/input\/marathon-time-predictions\/MarathonData.csv\")","a544fe1c":"data","66eca52a":"data['Category'].value_counts()","8e56e436":"data.loc[data['Category'] == 'MAM', 'MaxGroupAge'] = 40\ndata.loc[data['Category'] == 'M40', 'MaxGroupAge'] = 45\ndata.loc[data['Category'] == 'M45', 'MaxGroupAge'] = 50\ndata.loc[data['Category'] == 'M50', 'MaxGroupAge'] = 55\ndata.loc[data['Category'] == 'M55', 'MaxGroupAge'] = 60\ndata.loc[data['Category'] == 'WAM', 'MaxGroupAge'] = 40\ndata['pace4week'] = 60 \/ data['sp4week']","4c791b20":"data = data.drop(columns=['Marathon','Name','CATEGORY','CrossTraining','sp4week'])","632c82ee":"data[ (data['pace4week'] > 7) | (data['pace4week'] < 4) | (data['Category'] == 'WAM') ]","b8c8c4aa":"data[data.isna().any(axis=1)]","bc6955d4":"idx = data[ (data['pace4week'] > 7) | (data['pace4week'] < 4) | (data['Category'] == 'WAM') | (data['MaxGroupAge'].isna()) ].index\ndata.drop(idx , inplace=True)","7fa79acc":"data = data.drop(columns=['Category'])","046e3feb":"data","03517c0d":"focus_group = data.loc[data['MarathonTime'] < 3]\nfocus_group = focus_group.loc[data['MaxGroupAge'] == 40]\nfocus_group = focus_group[['km4week','pace4week','Wall21','MarathonTime']]","57796961":"focus_group['koef'] = data['km4week'] \/ data['pace4week']","34c63270":"focus_group","18975cbc":"focus_group.plot(x='koef', y='MarathonTime', style='o')","e7bdf05e":"data","10b09ce9":"X = data[['km4week','pace4week', 'MaxGroupAge']].values\ny = data[['MarathonTime']].values.reshape(-1)","76b2e30f":"res = LinReg().fit(X, y)","f8ca2c0f":"res.coef_","d3af7b22":"res.intercept_","ebeac62a":"plan = []","cf64a683":"# Day 1: easy running\nplan.append(np.array([15, 5]))\n\n# Day 2: intervals\nplan.append(np.array([8, 4]))\n\n# Day 3: tempo\nplan.append(np.array([10, 4.25]))\n\n# Day 4: rest\n\n# Day 6: tempo\nplan.append(np.array([10, 4.25]))\n\n# Day 5: recovery\nplan.append(np.array([15, 5]))\n\n# Day 7: long distance\nplan.append(np.array([20, 4.75]))","34b083d2":"plan = np.array(plan)\ntotal_distance = sum(plan[:,0])\navg_pace = sum(plan[:,0] * plan[:,1]) \/ total_distance\n\nprint(total_distance)\nprint(avg_pace)","0def4b3c":"km = total_distance\npace = avg_pace\nage = 32\n\ntime = res.predict(np.array([[km, pace, age]]))[0] * 60\n\nint(time)","da448216":"# Build a model\n**Linear regression**","b07aae29":"outliers and 4 female runners can be deleted because it is not representative","dbc06cfb":"The following code is for sub3 male runners under 40 y.o.","d3e16eb2":"**Finding outliers**","9d12d3d4":"Overall **koef** means how prepared you are considering an average pace and total distance per week\n\n**koef = distance \/ pace**\n\nlonger distance and faster pace get better koef ","f6b7bf6f":"# Sub 3 hours plan"}}