{"cell_type":{"3c75d90d":"code","78d17409":"code","5b843af2":"code","8d2b9fcc":"code","ebe623e1":"code","b4b83a94":"code","dc20f40c":"code","f21602f9":"code","21092f7e":"code","42fce160":"code","8cdea94c":"code","629c5ff1":"markdown","68637274":"markdown","dbb38f8c":"markdown","41237452":"markdown","3fd79c87":"markdown","396d18f4":"markdown","e1b96132":"markdown"},"source":{"3c75d90d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom pandas import DataFrame as DF\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","78d17409":"path = '\/kaggle\/input\/netflix-shows\/netflix_titles.csv'","5b843af2":"netflix = pd.read_csv(path)\nraw = netflix\n\n\nnetflix.head()","8d2b9fcc":"print('The dataset consists of: \\n {} features.' .format(netflix.shape[1]))\nprint('{} observations.'.format(netflix.shape[0]))","ebe623e1":"netflix.info()","b4b83a94":"netflix.isna().sum()","dc20f40c":"netflix.dropna(subset=['rating','date_added'] , axis= 'index', inplace=True)\n\nnetflix.info()","f21602f9":"plt.figure(figsize=(14,5))\n\nsns.histplot(x=netflix.release_year)\nplt.xlim(1920, None)\nplt.show()\n\n\nprint('Most of the content was released in the year : {}'.format(netflix.release_year.value_counts().idxmax()))\nprint('For that release year, a total of {} contents is present on Netflix'. format(netflix.release_year.value_counts().max()))","21092f7e":"data = data.dropna()\ncountry= pd.DataFrame(columns=['country'])\nfor i in data['country']:\n    for j in i.split(', '):\n        country=country.append({'country':j},ignore_index=True)","42fce160":"from sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\nresultado = []\nfor kernel in ['linear', 'poly', 'rbf']:\n    clf = SVC(kernel=kernel)\n    clf.fit(x_netflix, y_country)\n    \n   null_select = netflix.country.isna()\nacc = round(accuracy_score(x_netflix, y_country) * 100, 2)\n    resultado.append(acc)","8cdea94c":"print(f'teste - Kernel[linear]: {resultado[0]}%')\n\nteste - Kernel[linear]: 50.04%","629c5ff1":"**5 - Quebrar os dados em conjunto de treino e conjunto de teste**","68637274":"\n**3 - Descritivo e explora\u00e7\u00e3o de dados com pandas**","dbb38f8c":"**6-Treinar um estimador do scikit-learn de aprendizagem supervisionada (regressor ou classificador) no conjunto de treino**","41237452":"**4 - Figuras que mostrem insights sobre os dados com pandas e matplotlib**","3fd79c87":"\n**7 - Verificar o desempenho do estimador do scikit-learn no conjunto de teste**","396d18f4":"**2 - Manipula\u00e7\u00e3o e limpeza de dados com pandas**","e1b96132":"**1 - Leitura dos dados**"}}