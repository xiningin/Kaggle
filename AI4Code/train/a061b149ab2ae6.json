{"cell_type":{"4080f247":"code","fa3ac93d":"code","0af5c127":"code","e315c021":"code","ee27db1e":"code","d05b466f":"code","dca3dbff":"code","b842a729":"code","6d5f50fa":"code","e6ab8519":"code","6fe09984":"code","01802de7":"code","2a32ac83":"code","1c102e24":"code","eaee594a":"code","b33cee1a":"code","1d3d93c0":"code","31b1787c":"code","ae3faaee":"code","fdd29b50":"code","50b6e32a":"code","d8d6dd53":"code","976c366f":"code","4b47f7d0":"code","a4046da1":"code","2d296b6a":"code","93c73b8a":"code","f4fd1d9f":"code","48bf3687":"markdown","e0148237":"markdown","f616bf42":"markdown","95f2270b":"markdown"},"source":{"4080f247":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","fa3ac93d":"import pandas as pd","0af5c127":"df=pd.read_csv('..\/input\/drug-classification\/drug200.csv')","e315c021":"df.head()","ee27db1e":"df['Drug'].value_counts()","d05b466f":"df['Drug'].replace('DrugY', 'drugY', inplace=True)","dca3dbff":"df.info()","b842a729":"df.describe()","6d5f50fa":"import seaborn as sns","e6ab8519":"sns.pairplot(df, hue='Drug')","6fe09984":"sns.countplot(x=df['Drug'], data=df)","01802de7":"sns.countplot(x='Sex', hue='Drug', data=df)","2a32ac83":"df.groupby('Drug')['BP'].value_counts().unstack().plot.bar()\ndf.groupby('Drug')['Cholesterol'].value_counts().unstack().plot.bar()\ndf.groupby('Drug')['Sex'].value_counts().unstack().plot.bar()","1c102e24":"sns.swarmplot(x='Drug', y='Na_to_K', data=df)","eaee594a":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\ncols = ['Sex', 'BP', 'Cholesterol', 'Drug']\nfor features in cols:\n    df[features] = le.fit_transform(df[features])","b33cee1a":"from sklearn.model_selection import train_test_split\nX = df.drop('Drug', axis=1)\ny = df['Drug']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)","1d3d93c0":"from sklearn.linear_model import LogisticRegression\nlr = LogisticRegression(max_iter=10000)\nlr.fit(X_train, y_train)","31b1787c":"lr_pred = lr.predict(X_test)","ae3faaee":"from sklearn.metrics import accuracy_score\nprint(accuracy_score(y_test, lr_pred)*100,'%')","fdd29b50":"from sklearn.ensemble import GradientBoostingClassifier\ngbc = GradientBoostingClassifier()\ngbc.fit(X_train,y_train)","50b6e32a":"gbc_pred = gbc.predict(X_test)","d8d6dd53":"print(accuracy_score(y_test,gbc_pred)*100,'%')","976c366f":"from sklearn.tree import DecisionTreeClassifier\ndtc = DecisionTreeClassifier()\ndtc.fit(X_train, y_train)","4b47f7d0":"dtc_pred = dtc.predict(X_test)","a4046da1":"print(accuracy_score(y_test, dtc_pred)*100,'%')","2d296b6a":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier(n_estimators=100, criterion = 'entropy', random_state=22)\nrfc.fit(X_train, y_train)","93c73b8a":"rfc_pred = rfc.predict(X_test)","f4fd1d9f":"print(accuracy_score(y_test, rfc_pred)*100,'%')","48bf3687":"**Random Forest Classifier:**","e0148237":"**Logistic Regression:**","f616bf42":"**Gradient Booster Classifier:**","95f2270b":"**Decision tree Classifier:**"}}