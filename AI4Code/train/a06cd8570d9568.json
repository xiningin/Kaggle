{"cell_type":{"fa2b5098":"code","bbe45d1e":"code","5ebfd479":"code","7e2b44bd":"code","11999607":"code","efcc4f48":"code","5f035045":"code","9e27e5b4":"code","1506bc31":"code","4b8645a1":"code","476bf68e":"code","a111a2d5":"code","99e234fe":"code","800b7b2e":"code","9aa9aa60":"code","d35f0e8c":"markdown","6724ab41":"markdown"},"source":{"fa2b5098":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bbe45d1e":"import matplotlib.pyplot as plt\nimport seaborn as sns","5ebfd479":"df = pd.read_csv(\"\/kaggle\/input\/fortune-global-2000-companies-till-2021\/fortune_2000_in_2021.csv\")","7e2b44bd":"df= df.dropna(axis=0)\ndf.isnull().sum()","11999607":"#Looking at the data\ndf.shape","efcc4f48":"df.info()","5f035045":"import re\ndef cleaning(text):\n    text =str(text).replace(\"$\",\"\")\n    text =str(text).replace(\"B\",\"\")\n    text =str(text).replace(\",\",\"\")\n    if(\"M\" in text):\n        text =str(text).replace(\"M\",\"\")\n        text =str(float(text)\/1000)\n    return text\n\ndef country_name(text):\n    text =str(text).replace(\"United Arab Emirates\",\"UAE\")\n    text =str(text).replace(\"United States\",\"US\")\n    text =str(text).replace(\"United Kingdom\",\"UK\")\n    text =str(text).replace(\"Czech Republic\",\"CR\")\n    return text","9e27e5b4":"for columns in ['Sales','Profit','Assets','Market Value']:\n    df[columns]= df[columns].apply(lambda x:cleaning(x)).astype(float)\n    \ndf['Country']= df['Country'].apply(lambda x:country_name(x))","1506bc31":"#Checking null values\ndf.isnull().sum()","4b8645a1":"#Dropping na value\ndf= df.dropna()","476bf68e":"#Top companies\nplt.figure(figsize=(16,10))\nsns.barplot(x='Name',y='Market Value',data=df.sort_values(by=['Market Value'],ascending=False).head(10))\nplt.xticks(rotation =90,fontsize=12)\nplt.yticks(fontsize=12)\nplt.title(\"Top Companies in Maket\",fontsize=30)\nplt.xlabel('Company Name',fontsize=26)\nplt.ylabel('Market Value in Billions',fontsize=26)\nplt.show()\n","a111a2d5":"#Countries with most fortune companies\ndf_Country = df[['Country','Name']].groupby(by=['Country'],as_index=False).count()\ndf_Country.rename(columns={'Name':'Number of Companies'},inplace = True)\ndf_Country.sort_values(by=['Number of Companies'],inplace = True,ascending=False )\nplt.figure(figsize=(16,10))\nsns.barplot(x='Country',y='Number of Companies',data=df_Country.head(10))\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.title(\"Countries having maximum fortune companies\",fontsize=30)\nplt.xlabel('Country',fontsize=26)\nplt.ylabel('Number of Companies',fontsize=26)\nplt.show()","99e234fe":"df_Country = df[['Country','Sales']].groupby(by=['Country'],as_index=False).sum()\ndf_Country.rename(columns={'Sales':'Total Sales'},inplace = True)\ndf_Country.sort_values(by=['Total Sales'],inplace = True,ascending=False )\nplt.figure(figsize=(16,10))\nsns.barplot(x='Country',y='Total Sales',data=df_Country.head(10))\nplt.title(\"Total Sales\",fontsize=30)\nplt.xticks(fontsize=12)\nplt.yticks(fontsize=12)\nplt.xlabel(\"Countries\",fontsize=26)\nplt.ylabel(\"Sales in Billions\",fontsize=26)\nplt.show()","800b7b2e":"df.head()","9aa9aa60":"plt.figure(figsize=(36,20))\nsns.barplot(x='Country',y='Profit',data = df[['Country','Profit']].groupby(by=['Country'],as_index=False).mean())\nplt.title(\"Profit by Countries\",fontsize=30)\nplt.xticks(rotation = 65,fontsize=18)\nplt.yticks(fontsize=18)\nplt.xlabel(\"Countries\",fontsize=26)\nplt.ylabel(\"Profit in Billions\",fontsize=26)\nplt.show()","d35f0e8c":"![numbers_on_podium.jpg](attachment:1e4ae0a8-bb1d-41ad-8f44-9b9ce4f37847.jpg)","6724ab41":"Welcome to my notebook, please give and upvote if you like it and feel free to share any feedback in the comments.In this notebook we are going to analyze fortune companies dataset using different visualizations "}}