{"cell_type":{"d3f0b9cc":"code","0ad5c597":"code","d41b84e9":"code","3ed56d67":"code","2c0013f6":"code","d86375d3":"code","4d72e1a2":"code","50778e80":"code","c074bf36":"code","ee1bf2b1":"code","c47dda07":"code","0ec712e9":"code","75507afb":"code","d087c556":"code","0c6a77fb":"code","db980d6e":"markdown","a95533d6":"markdown","ac896784":"markdown","45e431d8":"markdown","da87d4f2":"markdown","6d706331":"markdown","6639062a":"markdown","cbd40e25":"markdown"},"source":{"d3f0b9cc":"!rm -r \/opt\/conda\/lib\/python3.7\/site-packages\/lightgbm\n!git clone --recursive https:\/\/github.com\/Microsoft\/LightGBM","0ad5c597":"!apt-get install -y -qq libboost-all-dev","d41b84e9":"%%bash\ncd LightGBM\nrm -r build\nmkdir build\ncd build\ncmake -DUSE_GPU=1 -DOpenCL_LIBRARY=\/usr\/local\/cuda\/lib64\/libOpenCL.so -DOpenCL_INCLUDE_DIR=\/usr\/local\/cuda\/include\/ ..\nmake -j$(nproc)","3ed56d67":"!cd LightGBM\/python-package\/;python3 setup.py install --precompile","2c0013f6":"!mkdir -p \/etc\/OpenCL\/vendors && echo \"libnvidia-opencl.so.1\" > \/etc\/OpenCL\/vendors\/nvidia.icd\n!rm -r LightGBM","d86375d3":"import catboost\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.model_selection import GridSearchCV\n\nimport xgboost as xgb\nimport lightgbm as lgb","4d72e1a2":"train_data = pd.read_csv(\"..\/input\/enconder-do-catboost-playmar21\/train_enconded.csv\").drop(\"Unnamed: 0\", axis = 1)\n\ntrain_data","50778e80":"test_data = pd.read_csv(\"..\/input\/enconder-do-catboost-playmar21\/test_enconded.csv\").drop(\"Unnamed: 0\", axis = 1)\n\ntest_data","c074bf36":"cv_dataset = catboost.Pool(data = train_data.drop([\"target\"], axis = 1), label = train_data[\"target\"])\n\ncat_model = catboost.CatBoostClassifier(\n    eval_metric = \"AUC\",\n    loss_function = \"Logloss\",\n    task_type = \"GPU\",\n    depth = 8,\n    iterations = 1500,\n    random_seed = 1,\n    learning_rate = 0.1\n)","ee1bf2b1":"lgb_model = lgb.LGBMClassifier(\n    learning_rate = 0.1,\n    n_estimators = 50,\n    num_leaves = 16,\n    boosting_type = \"gbdt\",\n    objective = \"binary\",\n    random_state = 501,\n    colsample_bytree = 0.65,\n    subsample = 0.75,\n    reg_alpha = 1.2,\n    reg_lambda = 1.2,\n    device = \"gpu\",\n    gpu_platform_id = 0,\n    gpu_device_id = 0\n)","c47dda07":"xgd_model = xgb.XGBClassifier(\n    n_estimators = 50,\n    max_depth = 6,\n    objective = \"binary:logistic\",\n    eval_metric = \"auc\",\n    tree_method = \"gpu_hist\",\n    use_label_enconder = False\n)","0ec712e9":"voting_model = VotingClassifier(estimators = [(\"cat\", cat_model), (\"lgb\", lgb_model), (\"xgd\", xgd_model)], voting = \"hard\")\n\nvoting_model.fit(train_data[train_data.columns[:-1]], train_data[\"target\"])","75507afb":"preds = voting_model.predict(test_data.drop(\"id\", axis = 1))\n\npreds","d087c556":"submission = test_data[[\"id\"]]\nsubmission[\"target\"] = preds\n\nsubmission","0c6a77fb":"submission.to_csv(\"sub.csv\", index = False)","db980d6e":"### LightGBM","a95533d6":"# Importa os dados","ac896784":"## .fit e faz as predi\u00e7\u00f5es","45e431d8":"### CatBoost","da87d4f2":"# Lightgbm com GPU","6d706331":"# Fita os modelos","6639062a":"## Os Modelos","cbd40e25":"### XGDBoost"}}