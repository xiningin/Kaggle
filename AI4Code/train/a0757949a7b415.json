{"cell_type":{"4429bdb9":"code","d55b148e":"code","0fcc1b01":"code","3d12c65e":"code","5b50e61f":"code","5620fed0":"code","06b11789":"code","eb956d6d":"code","10f4680f":"code","29035f5d":"code","44d2fb27":"code","f0b63752":"code","e21fd4b2":"code","d89eb5cb":"code","a36b4d92":"code","91778559":"code","a7e6454c":"markdown","eb043209":"markdown","2aa34b58":"markdown","3ee8f293":"markdown","a2b2decd":"markdown","b516b84c":"markdown","665be756":"markdown"},"source":{"4429bdb9":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","d55b148e":"data = pd.read_csv('..\/input\/Indicators.csv')\nprint(\"Columns:\", data.shape[0])\nprint(\"Rows:\", data.shape[1])\ndata.head()","0fcc1b01":"# list countries for visual inspection\ndata['CountryName'].unique().tolist()","3d12c65e":"exclude_list = ['Arab World', 'Caribbean small states', 'Central Europe and the Baltics',\n 'East Asia & Pacific \\(all income levels',\n 'East Asia & Pacific \\(developing only', 'Euro area',\n 'Europe & Central Asia \\(all income levels',\n 'Europe & Central Asia \\(developing only', 'European Union',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries \\(HIPC', 'High income',\n 'High income: nonOECD', 'High income: OECD',\n 'Latin America & Caribbean \\(all income levels',\n 'Latin America & Caribbean \\(developing only',\n 'Least developed countries: UN classification', 'Low & middle income',\n 'Low income', 'Lower middle income',\n 'Middle East & North Africa \\(all income levels',\n 'Middle East & North Africa \\(developing only', 'Middle income',\n 'North America' 'OECD members' ,'Other small states',\n 'Pacific island small states', 'Small states', 'South Asia',\n 'Sub-Saharan Africa \\(all income levels',\n 'Sub-Saharan Africa \\(developing only' ,'Upper middle income' ,'World', 'North America', 'OECD members']","5b50e61f":"# list all education indicators\ndata.loc[data['IndicatorName'].str.contains('education|student|enrolment'),\\\n         'IndicatorName'].unique().tolist()","5620fed0":"# select education indicators for further analysis:\ned_indicators_list = ['Pupil-teacher ratio in primary education (headcount basis)',\\\n                     'Pupil-teacher ratio in secondary education (headcount basis)',\\\n                     'Theoretical duration of primary education (years)',\\\n                     'Theoretical duration of secondary education (years)',\\\n                      'Official entrance age to lower secondary education (years)',\\\n                     'Official entrance age to primary education (years)',\\\n                     'Primary to secondary general education transition rate, both sexes (%)',\\\n                     'Expenditure on primary as % of government expenditure on education (%)',\\\n                     'Expenditure on secondary as % of government expenditure on education (%)',\\\n                     'Expenditure on tertiary as % of government expenditure on education (%)',\\\n                     'Gross enrolment ratio, pre-primary, female (%)',\\\n                     'Gross enrolment ratio, pre-primary, male (%)',\\\n                     'Gross enrolment ratio, primary, female (%)',\\\n                     'Gross enrolment ratio, primary, male (%)',\\\n                     'Gross enrolment ratio, secondary, female (%)',\\\n                     'Gross enrolment ratio, secondary, male (%)',\\\n                     'Gross enrolment ratio, tertiary, female (%)',\\\n                     'Gross enrolment ratio, tertiary, male (%)',\\\n                     'All education staff compensation, primary (% of total expenditure in primary public institutions)',\\\n                     'All education staff compensation, secondary (% of total expenditure in secondary public institutions)',\\\n                     'All education staff compensation, total (% of total expenditure in public institutions)']","06b11789":"# list all GDP indicators to select the appropriate GDP metric\n# data.loc[data['IndicatorName'].str.contains('GDP'),'IndicatorName'].unique().tolist()","eb956d6d":"# remove country names that aren't countries:\ncountry_pattern = '|'.join(exclude_list)\ncountries_filtered_2000 = data[(~data['CountryName'].str.match(country_pattern)) & (data['Year']==2000)]\n\n# set up DataFrame to receive indicators by country\ncountry_ed_indicators_2000 = pd.DataFrame(countries_filtered_2000['CountryName'].unique())\ncountry_ed_indicators_2000.rename(columns={0:'CountryName'},inplace=True)\n\nfor n in ed_indicators_list:\n    temp = countries_filtered_2000.loc[(countries_filtered_2000['IndicatorName'] == n),('CountryName','Value')]\n    temp.rename(columns={'Value':str(n)},inplace=True)\n    country_ed_indicators_2000=country_ed_indicators_2000.merge(temp, on='CountryName', how='left')\n\n# Get GDP data from 2010 (the objective is to compare indicators from 2000 with GDP in 2010)\ncountries_filtered_2010 = data[(~data['CountryName'].str.match(country_pattern)) & (data['Year']==2010)]\ngdp_2010 = countries_filtered_2010.loc[(countries_filtered_2010['IndicatorName'] == 'GDP per capita (current US$)'),\\\n                                       ('CountryName','Value')]\ngdp_2010.rename(columns={'Value':'GDP per capita (current US$)'},inplace=True)\ncountry_ed_indicators_2000 = country_ed_indicators_2000.merge(gdp_2010, on='CountryName', how='left')\n","10f4680f":"# rename indicators with shorter names to make graphs a little more readable\nlong_keys = country_ed_indicators_2000.keys().tolist()\nshort_keys = ['CountryName',\\\n              'Pupil:Teacher primary ed (headcount)',\\\n                     'Pupil:Teacher secondary ed (headcount)',\\\n                     'Primary ed duration (years)',\\\n                     'Secondary ed duration (years)',\\\n                     'Secondary entrance age (years)',\\\n                     'Primary entrace age (years)',\\\n                     'Primary to secondary transition rate (%)',\\\n                     'Spend on primary as % of govt ed spend (%)',\\\n                     'Spend on secondary as % of govt ed spend (%)',\\\n                     'Spend on tertiary as % of govt ed spend (%)',\\\n                     'Gross enrol ratio, pre-primary, female (%)',\\\n                     'Gross enrol ratio, pre-primary, male (%)',\\\n                     'Gross enrol ratio, primary, female (%)',\\\n                     'Gross enrol ratio, primary, male (%)',\\\n                     'Gross enrol ratio, secondary, female (%)',\\\n                     'Gross enrol ratio, secondary, male (%)',\\\n                     'Gross enrol ratio, tertiary, female (%)',\\\n                     'Gross enrol ratio, tertiary, male (%)',\\\n                     'Ed staff comp, primary (% of spend in primary)',\\\n                     'Ed staff comp, secondary (% of spend in secondary)',\\\n                     'Ed staff comp, total (% of total spend)']\n\nfor i in range(0,len(short_keys)):\n    country_ed_indicators_2000.rename(columns={str(long_keys[i]): str(short_keys[i])}, inplace=True)","29035f5d":"# calculate pairwise correlations among all indicators:\ncorr_2000 = country_ed_indicators_2000.corr()\n\n# Generate a mask for the upper triangle\nmask = np.zeros_like(corr_2000, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\n# Set up the matplotlib figure\nplt.subplots(figsize=(12, 12))\nplt.title('Correlation Matrix', fontsize=14)\nplt.yticks(fontsize=12)\nplt.xticks(fontsize=12)\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(20, 200, n=13)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr_2000, mask=mask, cmap=cmap, vmax=.75, vmin=-.6, center=0,\n            square=True, linewidths=8, cbar_kws={\"shrink\": .5}, robust=True)\n\nplt.show()","44d2fb27":"# extract correlation between each education indicator and GDP:\ngdp_corr_2000 = corr_2000.iloc[:20,21].sort_values(ascending=True)\n\n# set up the color map to diverge betwen positive and negative:\ncol_pos = np.asarray(sns.diverging_palette(200,220,n=32))\ncol_pos = col_pos[17:]\n# sns.palplot(col_pos)\ncol_neg = np.asarray(sns.diverging_palette(20,30,n=12))\ncol_neg = col_neg[:5]\n# sns.palplot(col_neg)\ncol_diverge = np.concatenate((col_neg,col_pos), axis=0)\n# sns.palplot(col_diverge)\n\n# plot\nplt.figure(figsize=(4,10))\nplt.barh(gdp_corr_2000.keys(),gdp_corr_2000, align='center', height = 0.75, color=col_diverge)\nplt.yticks(fontsize=12)\nplt.xlabel('Correlation', fontsize=12)\nplt.title('Correlation between Education Indicators and GDP', fontsize =12)\nplt.plot([0., 0.], [-0.25, 19.25], \"k-\", linewidth=0.3)\n\nplt.show()","f0b63752":"# create new DataFrame with Gross enrol ratio in tertiary for males\nmale_ratios = pd.DataFrame(columns=['Gross enrol ratio, tertiary (%)',\\\n                                   'GDP per capita (current US$)','sex'])\nmale_ratios['Gross enrol ratio, tertiary (%)'] = \\\ncountry_ed_indicators_2000['Gross enrol ratio, tertiary, male (%)']\nmale_ratios['GDP per capita (current US$)'] = country_ed_indicators_2000['GDP per capita (current US$)']\nmale_ratios['sex'] = 'Male'\n\n# create new DataFrame with Gross enrol ratio in tertiary for females\nfemale_ratios = pd.DataFrame(columns=['Gross enrol ratio, tertiary (%)',\\\n                                   'GDP per capita (current US$)','sex'])\nfemale_ratios['Gross enrol ratio, tertiary (%)'] = \\\ncountry_ed_indicators_2000['Gross enrol ratio, tertiary, female (%)']\nfemale_ratios['GDP per capita (current US$)'] = country_ed_indicators_2000['GDP per capita (current US$)']\nfemale_ratios['sex'] = 'Female'\n\n# combine the male and female DataFrames\nall_ratios = pd.concat([male_ratios,female_ratios])\n\n# plot\nax = sns.scatterplot(all_ratios['Gross enrol ratio, tertiary (%)'],all_ratios['GDP per capita (current US$)'],\\\n                hue=all_ratios['sex'], palette=\"Blues\")","e21fd4b2":"#plots added by me(ML)\n#Show the pairwise plot to tell about relationship between Gross enrol rate and GDP per capital in % of Male\n\nax = sns.scatterplot(male_ratios['Gross enrol ratio, tertiary (%)'],male_ratios['GDP per capita (current US$)'], hue=male_ratios['sex']) ","d89eb5cb":"#plots added by me(ML)\n#Show the pairwise plot to tell about relationship between Gross enrol rate and GDP per capital in % of Female\n\nax = sns.scatterplot(female_ratios['Gross enrol ratio, tertiary (%)'],female_ratios['GDP per capita (current US$)'], hue=female_ratios['sex'],palette=\"Greens\")","a36b4d92":"ax = sns.scatterplot(country_ed_indicators_2000['Spend on primary as % of govt ed spend (%)'],\\\n           country_ed_indicators_2000['GDP per capita (current US$)'], palette=\"gist_gray_r\")","91778559":"# create new DataFrame with Pupil:Teacher primary\nprimary_ratios = pd.DataFrame(columns=['Pupil:Teacher (headcount)',\\\n                                   'GDP per capita (current US$)','Grade level'])\nprimary_ratios['Pupil:Teacher (headcount)'] = \\\ncountry_ed_indicators_2000['Pupil:Teacher primary ed (headcount)']\nprimary_ratios['GDP per capita (current US$)'] = country_ed_indicators_2000['GDP per capita (current US$)']\nprimary_ratios['Grade level'] = 'Primary'\n\n# create new DataFrame with Pupil:Teacher secondary\nsecondary_ratios = pd.DataFrame(columns=['Pupil:Teacher (headcount)',\\\n                                   'GDP per capita (current US$)','Grade level'])\nsecondary_ratios['Pupil:Teacher (headcount)'] = \\\ncountry_ed_indicators_2000['Pupil:Teacher secondary ed (headcount)']\nsecondary_ratios['GDP per capita (current US$)'] = country_ed_indicators_2000['GDP per capita (current US$)']\nsecondary_ratios['Grade level'] = 'Secondary'\n\n# combine the primary and secondary DataFrames\npupil_teacher = pd.concat([primary_ratios,secondary_ratios])\n\nax = sns.scatterplot(pupil_teacher['Pupil:Teacher (headcount)'], pupil_teacher['GDP per capita (current US$)'],\\\n                                   hue=pupil_teacher['Grade level'], palette=\"Blues\")","a7e6454c":"### Visual inspection of the data set","eb043209":"### Now plot only the correlation with GDP","2aa34b58":"#### Remove country labels that are not countries\n(thanks https:\/\/www.kaggle.com\/smondal93\/exploring-global-inequality-and-growth)","3ee8f293":"### Calculate pairwise correlations and plot\nSource: https:\/\/seaborn.pydata.org\/examples\/many_pairwise_correlations.html","a2b2decd":"### Create scatter plots for the indicators with the largest correlations","b516b84c":"# Which Education Indicators are Related to GDP?\nData Source: https:\/\/www.kaggle.com\/worldbank\/world-development-indicators","665be756":"### Set up a new DataFrame that contains all education indicators and GDP per capita for each country"}}