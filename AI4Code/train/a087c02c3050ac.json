{"cell_type":{"097b1a27":"code","5ffe98ff":"code","e145d194":"code","0ad86c69":"code","4771c0d0":"code","e8b791ed":"code","774ffd2b":"code","8e919743":"code","08d9300b":"code","399ab913":"code","7e17472c":"code","55df03fd":"code","f7e25da1":"code","21f975b6":"code","62bd54f9":"markdown","0210ad28":"markdown","648f2334":"markdown","712cae16":"markdown","3cd09e7f":"markdown","3507d22f":"markdown"},"source":{"097b1a27":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ffe98ff":"from torch import load\nimport tensorflow as tf","e145d194":"! mkdir my-train-data\nimport zipfile\nwith zipfile.ZipFile('..\/input\/rsnabraintumorclassification-64-256-256\/1MS8S5qFadxAqPCrd0MtKts4ciGH5W1L-', 'r') as zip_ref:\n    zip_ref.extractall('my-train-data')\n","0ad86c69":"! rm my-train-data\/00109.pt my-train-data\/00123.pt my-train-data\/00709.pt","4771c0d0":"from time import time\nstart = time()\npatient_228 = tf.convert_to_tensor(load('.\/my-train-data\/00000.pt').numpy())\nprint(f'time taken to load and convert to tf : {time() - start}')","e8b791ed":"patient_228.shape","774ffd2b":"def plot_slices(image):\n    \n    fig, axes = plt.subplots(8, 8, figsize=(50,50))\n    i = 0\n    for row in axes:\n        for col in row:\n            col.imshow(image[i, :, :], cmap='gray')\n            i += 1","8e919743":"files = os.listdir('my-train-data')\n\nfrom random import choice\nimport os\n\nfile_to_show = os.path.join('my-train-data', choice(files)) ","08d9300b":"random_scans = load(file_to_show)\nrandom_scans.size()","399ab913":"img_arr = [ scan.squeeze().numpy() for scan in random_scans]","7e17472c":"plot_slices(img_arr[0])","55df03fd":"plot_slices(img_arr[1])","f7e25da1":"plot_slices(img_arr[2])","21f975b6":"plot_slices(img_arr[3])","62bd54f9":"If you want to use pytorch, you can just use torch.load","0210ad28":"# Visualizaion","648f2334":"# Remove error data","712cae16":"# Load data into tensorflow tensor","3cd09e7f":"make sure data is valid","3507d22f":"# Unzipping Data"}}