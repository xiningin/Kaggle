{"cell_type":{"aa86c74c":"code","32072bab":"code","e346cb11":"code","950706c5":"code","4d810393":"code","84cc5ae1":"code","5847eebb":"code","df3618c4":"code","56694a65":"code","c906876c":"code","6cef2e85":"code","4c02aad3":"code","f4376aa7":"code","caa330ca":"code","a71b845d":"code","5463c45e":"code","2a799650":"code","53ba2a05":"code","c87246e5":"code","a4317062":"code","f048c9ba":"code","e5167adb":"markdown","c74b4e52":"markdown","2c824afb":"markdown","a2c7a0c9":"markdown","54649cfc":"markdown","695a1c27":"markdown","f59cf5d9":"markdown","db243eeb":"markdown","78fe31d7":"markdown","c39597d9":"markdown","eaf6f9ac":"markdown"},"source":{"aa86c74c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","32072bab":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","e346cb11":"\nshot = pd.read_csv(\"..\/input\/nba-shotlog-16-17\/NBA shotlog_16_17.csv\")\npd.set_option('display.max_columns', 100)\nprint(shot.columns.tolist())\nshot.describe()","950706c5":"shot.head()","4d810393":"x = shot['location_x']\ny = shot['location_y']\nplt.scatter(x,y, s=.005,c='b', marker= '.')","84cc5ae1":"# A simple plot of coordinates, scaled for court dimensions and with grid added.\n\nplt.figure(figsize=(94\/6,50\/6))\nplt.scatter(x,y, s=.1,c='b', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linestyle='-', linewidth='.5', color='black')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='red')","5847eebb":"plt.figure(figsize=(94\/12,50\/6))\nplt.scatter(x,y, s=.1,c='b', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linewidth='.5', color='black')\nplt.grid(which='minor', linewidth='.5', color='blue')\nplt.xlim(933\/2, 933)","df3618c4":"shot['halfcourt_x'] =np.where(shot['location_x'] < 933\/2, 933 - shot['location_x'],shot['location_x'])\nshot['halfcourt_y'] =np.where(shot['location_x'] < 933\/2, 500 - shot['location_y'],shot['location_y'])\nshot.describe()","56694a65":"# all shots shown on a half court\n\nhx = shot['halfcourt_x']\nhy = shot['halfcourt_y']\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hx,hy, s=.01,c='b', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linestyle='-', linewidth='.5', color='black')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='blue')\nplt.title(\"Shots\", fontsize = 15)","c906876c":"# Comparing players\n\n# We use a pivot table here to list players by shots\n\nplayersn = shot.groupby('shoot_player')['current_shot_outcome'].describe().reset_index()\nplayersn.sort_values(by = 'count', ascending = False)","6cef2e85":"# Scoring shots\n\nScored = shot[shot.current_shot_outcome == 'SCORED']\nhxs = Scored['halfcourt_x']\nhys = Scored['halfcourt_y']\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxs,hys, s=.01,c='g', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linestyle='-', linewidth='.5', color='black')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='red')\nplt.title(\"Scored\", fontsize = 15)","4c02aad3":"# Missed Shots\n\nMissed = shot[shot.current_shot_outcome == 'MISSED']\n\nhxm = Missed['halfcourt_x']\nhym = Missed['halfcourt_y']\n\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxm,hym, s=.01,c='b', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linestyle='-', linewidth='.5', color='black')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='red')\nplt.title(\"Missed\", fontsize = 15)","f4376aa7":"# Blocked shots\n\nBlocked = shot[shot.current_shot_outcome == 'BLOCKED']\n\nhxb = Blocked['halfcourt_x']\nhyb = Blocked['halfcourt_y']\n\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxb,hyb, s=1,c='m', marker= '.')\nplt.minorticks_on()\nplt.grid(which='major', linestyle='-', linewidth='.5', color='black')\nplt.grid(which='minor', linestyle=':', linewidth='0.5', color='red')\nplt.title(\"Blocked\", fontsize = 15)","caa330ca":"LeBron = shot[shot['shoot_player']=='LeBron James']\nhxL = LeBron['halfcourt_x']\nhyL = LeBron['halfcourt_y']\ncolors = np.where(LeBron['current_shot_outcome']=='SCORED','r',np.where(LeBron['current_shot_outcome']=='MISSED','b','g'))\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxL,hyL, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"LeBron James\", fontsize = 15)","a71b845d":"Curry = shot[shot['shoot_player']=='Stephen Curry']\nhxC = Curry['halfcourt_x']\nhyC = Curry['halfcourt_y']\ncolors = np.where(Curry['current_shot_outcome']=='SCORED','r',np.where(Curry['current_shot_outcome']=='MISSED','b','g'))\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxC,hyC, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Steph Curry\", fontsize = 15)","5463c45e":"# LeBron James and Steph Curry side by side\n\nf = plt.figure(figsize=(94\/6,50\/6))\nax = f.add_subplot(121)\ncolors = np.where(LeBron['current_shot_outcome']=='SCORED','r',np.where(LeBron['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxL,hyL, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"LeBron James\", fontsize = 15)\nax = f.add_subplot(122)\ncolors = np.where(Curry['current_shot_outcome']=='SCORED','r',np.where(Curry['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxC,hyC, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Steph Curry\", fontsize = 15)# LeBron James and Steph Curry side by side\n\n","2a799650":"westbrook = shot[shot['shoot_player']=='Russell Westbrook']\nhxL = westbrook['halfcourt_x']\nhyL = westbrook['halfcourt_y']\ncolors = np.where(westbrook['current_shot_outcome']=='SCORED','r',np.where(westbrook['current_shot_outcome']=='MISSED','b','g'))\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxL,hyL, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"westbrook\", fontsize = 15)","53ba2a05":"\ndurant = shot[shot['shoot_player']=='Kevin Durant']\nhxC = durant['halfcourt_x']\nhyC = durant['halfcourt_y']\ncolors = np.where(durant['current_shot_outcome']=='SCORED','r',np.where(durant['current_shot_outcome']=='MISSED','b','g'))\nplt.figure(figsize=(94\/12,50\/6))\nplt.scatter(hxC,hyC, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Kevin Durant\", fontsize = 15)","c87246e5":"f = plt.figure(figsize=(94\/6,50\/6))\nax = f.add_subplot(121)\ncolors = np.where(westbrook['current_shot_outcome']=='SCORED','r',np.where(westbrook['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxL,hyL, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Westbrook\", fontsize = 15)\nax = f.add_subplot(122)\ncolors = np.where(durant['current_shot_outcome']=='SCORED','r',np.where(durant['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxC,hyC, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Durant\", fontsize = 15)\nplt.xlim(500,950)\nplt.ylim(0,500)","a4317062":"jordan = shot[shot['shoot_player']=='DeAndre Jordan']\nhoward = shot[shot['shoot_player']=='Dwight Howard']","f048c9ba":"f = plt.figure(figsize=(94\/6,50\/6))\nax = f.add_subplot(121)\nhxj = jordan ['halfcourt_x']\nhyj = jordan['halfcourt_y']\ncolors = np.where(jordan['current_shot_outcome']=='SCORED','r',np.where(jordan['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxj,hyj, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"DeAndre Jordan\", fontsize = 15)\nax = f.add_subplot(122)\nhxh = howard['halfcourt_x']\nhyh = howard['halfcourt_y']\ncolors = np.where(howard['current_shot_outcome']=='SCORED','r',np.where(howard['current_shot_outcome']=='MISSED','b','g'))\nax = plt.scatter(hxh,hyh, s=10, c= colors, marker= '.')\nplt.grid(True)\nplt.title(\"Dwight Howard\", fontsize = 15)\nplt.xlim(500,950)\nplt.ylim(0,500)","e5167adb":"We now breakdown shots into three categories: scored, missed and blocked. To do this we simply create subsets of the shot df based on shot outcome.","c74b4e52":"From the print() command we have a good deal of information on each shot, including the name of the player, the type of shot, team names, time in the game and so on. From the .describe() we can see that there are over 210,000 shots in the data although there is a small number of shots with missing coordinates (around 400). Also note that the x-axis location variable (this is the sideline) ranges from 0 to 993, while the y-axis variable (this is the baseline) runs from 0 to 500.\n\nWe can generate a simple plot as follows:","2c824afb":"This was Westbrooks MVP season .","a2c7a0c9":"Rather than look at both ends of the court, we can just look at one half of the court by fixing the range of the x axis using plt.xlim, which we set to cover the right hand half court. \nNote that to maintain the same dimensions we also need to halve the x axis on figsize (to 94\/12 rather than 94\/6)","54649cfc":"The last plot just shows us one half of the court. To include both halves but show only the half court, we can convert the coordinates from the left hand half court so that they have the same relative location on the right hand half court (of course, there should be no real difference in performance based on which end of the court the player is attacking, and the two halves are mirror images of each other).\n\nWe can convert the plot to show shots from both ends on a half court if we adjust the coordinates. The x-axis runs from 0 to 933, so if we want to just show the right hand half court with all shots, we can recode the location_x variables, where x is less the 933\/2 (the left had half court) as equal to \"933 - location_x\". This produces a mirror image of the x coordinate in the right hand half of the court. However, since the direction toward the basket is the reverse of the other half court, we need to take the mirror image of the y coordinate for shots in the left had half court - that is \"500 - location_y\"","695a1c27":"These simple plots make clear some of the differences between the two players. It is clearly visible that Curry shoots more from the three-point line than LeBron, while LeBron is more active on the paint. Some more subtle differences are also visible. LeBron is more active on the left hand side of the court, while Curry is equally active on both sides. Curry also shoots more thre-pointers from the corners.","f59cf5d9":"WestBrook Durant Comparision","db243eeb":"## Jordan - Howard Comparision","78fe31d7":"One point to note about the data is that it does not include free throws - otherwise there would be a deep red concentration at the center of the free throw line.\n\nThe plot above gives us a very clear picture of the location of shots, notably from under the basket and from the three point line. However, the plot does not take account of the proportions of the court. Moreover, it would be useful to add a grid to identify more clearly the different locations.\n\nThe dimensions of the court defined by the NBA are 94 feet by 50 feet. We can specify that ratio using figsize = (a,b). Note that we can also scale this to control the size of the plot in our window (we divide both the x and y figsize by 6)","c39597d9":"While informative, the location of shots by shot type is not that surprising. There has been a lot of interest in recent years in the rise of the 3-point shot with evidence suggesting that in the past there were more more shots from distance inside the three-point line, and that these have tended to die out since the payoff is much lower than a shot from just outside the three-point. We don't have past data here to make the comparison.\n\nProbably the greatest interest lies in comparing individual players. We can do this easily by taking subsets as we did above.","eaf6f9ac":"# Visualizing sports data: basketball\n\nIn this notebook we're going to look at ways of visualizing performance in basketball. \n\nOur analysis here is going to focus on the where the ball was thrown from, which is recorded using (x, y) co-ordinates. This data is  easy to graph and illuminating. \n\nWe choose three different ways to look at the data\n\n1. shot outcome: scored, missed or blocked\n2. shot types by player\n3. narrowing the focus to a particular region of the court"}}