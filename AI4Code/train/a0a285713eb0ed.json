{"cell_type":{"e15cc0ae":"code","96ae6d8d":"code","184f7293":"code","8037aa57":"code","25723a89":"code","780c42a8":"code","4dd2edc0":"code","34d5f51c":"code","e243c8f2":"code","dad5ca81":"code","94c32095":"code","f4f0e6d8":"code","696e7661":"code","45fff4ac":"code","1f66c1df":"code","739e3fde":"code","1d32719b":"code","b8763b6f":"code","b626c053":"code","a92b4053":"code","c8d62c8b":"code","2444d6bf":"code","c8ebb1f1":"code","ba06a40a":"code","8975e23b":"code","ad535023":"code","2ff3df92":"code","a87842d8":"code","a388073c":"code","9829308f":"code","2c50338c":"code","90c20b56":"code","3e0d573d":"code","632bdb08":"code","cde8d0f8":"code","88288a13":"code","f1217397":"code","08d49b9a":"code","235b7fcf":"code","69672735":"code","3d166dbe":"code","c78bdb77":"code","c3c40871":"code","04d237d0":"code","245d5f44":"code","5312bf37":"code","75f27b24":"code","774df194":"code","2b3b8dd7":"code","0778ee88":"code","506ec9db":"code","2b495ad5":"code","3cdeeee6":"code","4c3d372c":"markdown","024f317e":"markdown","3c304526":"markdown","970a658a":"markdown","955737a2":"markdown","60cfa0f3":"markdown","10584d06":"markdown","c9859a62":"markdown","def2d2aa":"markdown","b010a9dc":"markdown","273ebcd4":"markdown","b4e610af":"markdown","c9ca375c":"markdown","80f26a1e":"markdown","3857b3f3":"markdown","fb18e498":"markdown","ff90fcd6":"markdown","e236da23":"markdown","c9199779":"markdown","63965eca":"markdown","06339399":"markdown","429e0434":"markdown","f8cec940":"markdown","9cb08a6c":"markdown","9af0cc29":"markdown","d8d331a4":"markdown","06a09857":"markdown","849e219d":"markdown","da15f5e4":"markdown","bb458653":"markdown","9b0cd299":"markdown","5fefaefc":"markdown","b94d2329":"markdown","779e3658":"markdown","ccecdf4f":"markdown","b4a9bbfc":"markdown","1ddef845":"markdown","09719351":"markdown","b1aa608b":"markdown","235f713e":"markdown","d879ad99":"markdown","bef6994c":"markdown"},"source":{"e15cc0ae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split","96ae6d8d":"test_scores = pd.read_csv('..\/input\/predict-test-scores-of-students\/test_scores.csv')\ntest_scores = test_scores.sample(frac=1, random_state=0).reset_index(drop=True) # shuffling ordered data\ndata_train, data_test = train_test_split(test_scores,test_size=.2,random_state=0)\ndata = data_train # the set we'll explore\ndata.head()","184f7293":"data.info()","8037aa57":"data.describe()","25723a89":"data[data.posttest == 100].shape[0]","780c42a8":"sns.pairplot(data)","4dd2edc0":"plt.pie(data.gender.value_counts())","34d5f51c":"data.school.value_counts().shape[0]","e243c8f2":"data.school[data.school_type == 'Public'].value_counts().shape[0]","dad5ca81":"data.school[data.school_type == 'Non-public'].value_counts().shape[0]","94c32095":"data.school[data.school_setting == 'Suburban'].value_counts().shape[0]","f4f0e6d8":"data.school[data.school_setting == 'Urban'].value_counts().shape[0]","696e7661":"data.school[data.school_setting == 'Rural'].value_counts().shape[0]","45fff4ac":"plt.subplots(figsize=(14, 6))\nsns.histplot(data, x='school', hue=\"gender\", multiple=\"dodge\", shrink=.8).tick_params(labelsize=8.1)","1f66c1df":"data[['school','classroom']].groupby(['school']).count()","739e3fde":"data[['school','classroom','n_student']].groupby(['school'], as_index=False).mean()","1d32719b":"plt.subplots(figsize=(14, 6))\nsns.barplot(data=data[['school','classroom','n_student']].groupby(['school'], as_index=False).mean(),\n            x='school', y='n_student').tick_params(labelsize=8.1)","b8763b6f":"plt.subplots(figsize=(14, 6))\nsns.boxplot(data=data, x='school', y='pretest').tick_params(labelsize=8.1)","b626c053":"sns.histplot(data, x='school_setting', hue='gender', multiple='dodge', shrink=.8)","a92b4053":"sns.boxplot(data=data, x='school_setting', y='pretest')","c8d62c8b":"sns.histplot(data, x='school_type', hue='gender', multiple='dodge', shrink=.8)","2444d6bf":"sns.boxplot(data=data, x='school_type', y='pretest')","c8ebb1f1":"sns.histplot(data, x='school_type', hue='school_setting', multiple='dodge', shrink=.8)","ba06a40a":"sns.catplot(data=data, x='school_type', y='pretest', hue='school_setting', alpha=0.7)","8975e23b":"sns.histplot(data, x='teaching_method', hue='school_setting', multiple='dodge', shrink=.8)","ad535023":"sns.boxplot(data=data, x='teaching_method', y='pretest')","2ff3df92":"data.lunch.value_counts()","a87842d8":"sns.catplot(data=data,x='lunch',y='pretest')","a388073c":"data_public = data[data.school_type == 'Public']\ndata_public[data_public.lunch == 'Qualifies for reduced\/free lunch'].shape[0] \/ data_public.shape[0]","9829308f":"data_non_public = data[data.school_type == 'Non-public']\ndata_non_public[data_non_public.lunch == 'Qualifies for reduced\/free lunch'].shape[0] \/ data_non_public.shape[0]","2c50338c":"lunch_percentage = data.school[data.lunch == 'Qualifies for reduced\/free lunch'].value_counts() \/ data.school.value_counts()\nlunch_percentage.sort_values(ascending=True)","90c20b56":"data_nf = data.copy()\nfor student in range(data_nf.shape[0]):\n    data_nf.iloc[student,0] = data_nf.pretest[data_nf.school == data_nf.iloc[student,0]].mean()\ndata_nf.school = data_nf.school.astype('float')\n\nfor student in range(data_nf.shape[0]):\n    data_nf.iloc[student,3] = data_nf.pretest[data_nf.classroom == data_nf.iloc[student,3]].mean()\ndata_nf.classroom = data_nf.classroom.astype('float')\n\ndata_nf.drop('student_id',axis=1,inplace=True)\ndata_nf.rename(columns={'school':'school_pretest_mean','classroom':'classroom_pretest_mean'}, inplace=True)\ndata_nf","3e0d573d":"data_nf.corr()['posttest']","632bdb08":"test_nf = data.copy()\nfor student in range(test_nf.shape[0]):\n    test_nf.iloc[student,0] = test_nf.pretest[test_nf.school == test_nf.iloc[student,0]].mean()\ntest_nf.school = test_nf.school.astype('float')\n\nfor student in range(test_nf.shape[0]):\n    test_nf.iloc[student,3] = test_nf.pretest[test_nf.classroom == test_nf.iloc[student,3]].mean()\ntest_nf.classroom = test_nf.classroom.astype('float')\n\ntest_nf.drop('student_id',axis=1,inplace=True)","cde8d0f8":"data_nf_dummy = pd.get_dummies(data_nf, columns=['school_setting','school_type','teaching_method','gender','lunch'], drop_first=True)\ndata_nf_dummy","88288a13":"test_nf_dummy = pd.get_dummies(test_nf, columns=['school_setting','school_type','teaching_method','gender','lunch'], drop_first=True)","f1217397":"sns.heatmap(data_nf_dummy.corr())","08d49b9a":"from sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import MinMaxScaler, StandardScaler\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_absolute_error","235b7fcf":"y_train = data_nf_dummy.posttest\nX_train = data_nf_dummy.drop(['posttest'],axis=1)","69672735":"y_test = test_nf_dummy.posttest\nX_test = test_nf_dummy.drop(['posttest'],axis=1)","3d166dbe":"pipeline_linear = Pipeline([('scaler',MinMaxScaler()),('linear_model',LinearRegression())])\nparam_grid_linear = [{'linear_model':[LinearRegression()],'scaler':[MinMaxScaler(),StandardScaler(),None]},\n {'linear_model':[Ridge()],'linear_model__alpha':[0.001,0.003,0.01,0.03,0.1,0.3,1,3,10,30,100,300],\n  'scaler':[MinMaxScaler(),StandardScaler(),None]},\n {'linear_model':[Lasso()],'linear_model__alpha':[0.001,0.003,0.01,0.03,0.1,0.3,1,3,10,30,100,300],\n  'scaler':[MinMaxScaler(),StandardScaler(),None]}]\ngrid_linear = GridSearchCV(pipeline_linear, param_grid_linear)\ngrid_linear.fit(X_train,y_train)","c78bdb77":"grid_linear.best_params_","c3c40871":"grid_linear.best_score_","04d237d0":"pred_linear = grid_linear.best_estimator_.predict(X_test)\nmean_absolute_error(y_test, pred_linear)","245d5f44":"weights = grid_linear.best_estimator_.named_steps['linear_model'].coef_\nlasso_weights = pd.DataFrame({'feature':X_train.columns.to_list(),'weight':weights})\nlasso_weights","5312bf37":"pipeline_svm = Pipeline([('scaler',MinMaxScaler()),('svm',SVR())])\nparam_grid_svm = {'scaler':[MinMaxScaler(),StandardScaler(),None],'svm__C':[0.001,0.003,0.01,0.03,0.1,0.3,1,3,10,30,100,300],\n                 'svm__gamma':[0.001,0.003,0.01,0.03,0.1,0.3,0,1,3,10,30,100,300]}\ngrid_svm = GridSearchCV(pipeline_svm, param_grid_svm)\ngrid_svm.fit(X_train, y_train)","75f27b24":"grid_svm.best_params_","774df194":"grid_svm.best_score_","2b3b8dd7":"pred_svm = grid_svm.best_estimator_.predict(X_test)\nmean_absolute_error(y_test, pred_svm)","0778ee88":"pipeline_knn = Pipeline([('scaler',MinMaxScaler()),('knn',KNeighborsRegressor())])\nparam_grid_knn = {'scaler':[MinMaxScaler(),StandardScaler(),None],\n                  'knn__n_neighbors':[5,10,15,20,25,50,100]}\ngrid_knn = GridSearchCV(pipeline_knn, param_grid_knn)\ngrid_knn.fit(X_train, y_train)","506ec9db":"grid_knn.best_params_","2b495ad5":"grid_knn.best_score_","3cdeeee6":"pred_knn = grid_knn.best_estimator_.predict(X_test)\nmean_absolute_error(y_test, pred_knn)","4c3d372c":"Splitting data 80\/20 for final evaluation","024f317e":"Every student in KZKKE qualifies for reduced\/free lunch. In IDGFP, LAYPA and UKPGS, no one qualifies.","3c304526":"In public schools, more students are qualified for reduced\/free lunch. ","970a658a":"2133 samples, 11 features (1 target) and no missing data. ","955737a2":"15 public and 8 non-public, and...","60cfa0f3":"<h4>SVM<\/h4>","10584d06":"Final evaluation:","c9859a62":"<h4>Lunch<\/h4>","def2d2aa":"Lunch - school:","b010a9dc":"7 in suburban, 9 in urban, and 7 in rural.","273ebcd4":"<h4>k-Nearest Neighbors<\/h4>","b4e610af":"Final evaluation:","c9ca375c":"<h3>Exploratory Data Analysis<\/h3>","80f26a1e":"Pretest scores:","3857b3f3":"Lunch - school type:","fb18e498":"Pretest scores (their correlation is -0.6):","ff90fcd6":"Pretest scores:","e236da23":"Gender distribution is not skewed.","c9199779":"<h4>School<\/h4>","63965eca":"Pretest scores:","06339399":"Final evaluation:","429e0434":"<h4>Linear models<\/h4>","f8cec940":"<h3>Building models<\/h3>","9cb08a6c":"<h3>Feature Engineering & Preprocessing<\/h3>","9af0cc29":"Some features have ambigous definitions, so let me explain them: <br>\nn_student: number of students per <u>classroom<\/u> <br>\nteaching_method: teaching method of <u>classroom<\/u>","d8d331a4":"School setting - school type:","06a09857":"Number of classrooms and average number of students per classroom in a school:","849e219d":"Student population and school setting: ","da15f5e4":"Students did better at posttest. 75% of students scored less than or equal to 64 at pretest and 77 at posttest. No one scored 100 at pretest, and...","bb458653":"Student population and gender distribution:","9b0cd299":"UKPGS is the school with highest pretest average, and KZKKE with the lowest.","5fefaefc":"Therea are 23 schools in total:","b94d2329":"<h2>Data Analysis and Machine Learning on Test Scores Dataset<\/h2>","779e3658":"Pretest scores:","ccecdf4f":"Feature selection done by L1 regularization:","b4a9bbfc":"<h4>Teaching method<\/h4>","1ddef845":"<h4>School type<\/h4>","09719351":"Student population and gender distribution:","b1aa608b":"<h4>School setting<\/h4>","235f713e":"7 students scored 100 at posttest.","d879ad99":"Student population and gender distribution:","bef6994c":"pretest and posttest are highly correlated and n_student seem to have negative correlation with pretest & posttest."}}