{"cell_type":{"0f3b9b87":"code","1d7fc1ca":"code","a67065ab":"code","119424c6":"code","d7635c2e":"code","10b21fbc":"code","f9c1eefc":"code","af650e26":"code","21f298a2":"code","3add31d0":"code","9ac4c248":"code","a8ad1b7f":"code","2e1b692c":"code","ca6e08b9":"code","1cc27871":"code","ca75b26e":"code","a406bf27":"code","1dd56cc9":"code","12b13913":"code","e5bb1275":"code","ad9f44ea":"code","9136884a":"markdown","ad932998":"markdown","74880da9":"markdown","7e3f338b":"markdown","ea1122f2":"markdown","ba95924d":"markdown","abbbb98e":"markdown"},"source":{"0f3b9b87":"import numpy as np\nimport pandas as pd\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"","1d7fc1ca":"emp1= pd.DataFrame({'empid':['E90','E87'],\n                   'Name':['Asif','Basit']})\nemp1\n\n\nemp2= pd.DataFrame({'empid':['E22','E74','E90'],\n                   'Name':['Minil','Akash','Asif']})\nemp2\n\n\naddress= pd.DataFrame({'empid':['E87','E22','E49'], \n                   'City':['Mumbai','Banglore','Pune'] , \n                   'State':['Maharashtra','Karnataka','Maharashtra']})\naddress","a67065ab":"#Concat Dataframes\n# Method-1\nemployees = pd.concat([emp1,emp2])\nemployees\nemployees=employees.reset_index(drop=True)\nemployees","119424c6":"#Concat Dataframe\n# Method-2\nemployees1 = emp1.append(emp2)\nemployees1\nemployees1=employees1.reset_index(drop=True)\nemployees1","d7635c2e":"employees2= pd.concat([emp1,emp2],ignore_index=True)\nemployees2","10b21fbc":"# Check for duplicates after concatenation\nduplicates = employees[employees.duplicated()]\nduplicates","f9c1eefc":"# Remove duplicates\nemployees.drop_duplicates(keep='last',inplace=True)\nemployees","af650e26":"employees.reset_index(drop=True,inplace=True)\nemployees","21f298a2":"employees\naddress","3add31d0":"# Inner Join\ninner = pd.merge(employees,address,on='empid')\ninner","9ac4c248":"# Inner Join\ninner = pd.merge(employees,address,on='empid',how='inner')\ninner","a8ad1b7f":"# Left Outer Join\nleft = pd.merge(employees,address,on='empid',how='left')\nleft","2e1b692c":"# Right Outer Join\nright = pd.merge(employees,address,on='empid',how='right')\nright","ca6e08b9":"employees\naddress","1cc27871":"#Full outer join\nfull = pd.merge(employees,address,how='outer',on='empid')\nfull","ca75b26e":"# Salary Data\nsal = pd.DataFrame({'empid':['E87','E22','E74','E90','E49'],\n                    'salary':['$10,000','$30,000','$20,000','$60,000','$90,000']})\nsal","a406bf27":"# Add Salary details ( Merge sal & full dataframes)\nemployee_details = pd.merge(full,sal,how='inner',on='empid')\nemployee_details","1dd56cc9":"# Employee experience\nexp = pd.DataFrame({'employee_id':['E87','E22','E74','E90','E49'],\n                    'experience':['5 years','3 years','7 years','2 years','10 years']})\nexp ","12b13913":"# Add employee experinece using merge()\n# As column names are different (empid , employee_id) we have to use left_on & right_on parameter\npd.merge(employee_details,exp,left_on=['empid'],right_on=['employee_id'],how='inner')","e5bb1275":"# Add employee experinece using merge() and drop the duplicate column (employee_id)\npd.merge(employee_details,exp,left_on=['empid'],right_on=['employee_id'],how='inner').drop('employee_id',axis=1)","ad9f44ea":"#Save the dataframe\nemployee_details=pd.merge(employee_details,exp,\n                          left_on=['empid'],\n                          right_on=['employee_id'],\n                          how='inner').drop('employee_id',axis=1)\nemployee_details","9136884a":"#### Right Outer Join","ad932998":"### Merging Dataframes","74880da9":"<!DOCTYPE html>\n<html>\n<body>\n<div align=\"center\">\n<h2>Prepared by Asif Bhat<\/h2>\n<h1>Merging Dataframes<\/h1>\n<\/div>\n    \n<\/body>\n<\/html>","7e3f338b":"#### Inner Join","ea1122f2":"#### Left Outer Join","ba95924d":"# End","abbbb98e":"#### Full Outer Join"}}