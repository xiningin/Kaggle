{"cell_type":{"9fafee84":"code","249b0399":"code","98470405":"code","3de4cf55":"code","ce3615c4":"code","30a95f78":"code","82388cdd":"code","a88e9f16":"code","27fdeefb":"code","769e06c9":"markdown","24f0da71":"markdown","5068bf9f":"markdown","f4cd7301":"markdown","617264c9":"markdown","ec5db9eb":"markdown","77904853":"markdown","7901861d":"markdown","c1b5fce7":"markdown","4c795d4b":"markdown","ca6ac1e3":"markdown","ab7ea4af":"markdown","992d4680":"markdown","c5c25aca":"markdown","6e2ac9e8":"markdown","0f5fe933":"markdown","14b1b751":"markdown","c39b6932":"markdown","1ff57282":"markdown","5a126cdb":"markdown","e73c2196":"markdown","3a2f76b5":"markdown","d9e6fcc5":"markdown","8a0cae40":"markdown","d896afd9":"markdown"},"source":{"9fafee84":"!pip install AutoViz","249b0399":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport datetime as dt\nfrom typing import Tuple, List, Dict\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport plotly.express as px\nimport plotly.offline\n\n\n# read data\nin_kaggle = True\n\ndef get_data_file_path(is_in_kaggle: bool) -> Tuple[str, str, str]:\n    train_path = ''\n    test_path = ''\n    sample_submission_path = ''\n\n    if is_in_kaggle:\n        # running in Kaggle, inside the competition\n        train_path = '..\/input\/tabular-playground-series-dec-2021\/train.csv'\n        test_path = '..\/input\/tabular-playground-series-dec-2021\/test.csv'\n        sample_submission_path = '..\/input\/tabular-playground-series-dec-2021\/sample_submission.csv'\n    else:\n        # running locally\n        train_path = 'data\/train.csv'\n        test_path = 'data\/test.csv'\n        sample_submission_path = 'data\/sample_submission.csv'\n\n    return train_path, test_path, sample_submission_path","98470405":"# main flow\nstart_time = dt.datetime.now()\nprint(\"Started at \", start_time)","3de4cf55":"%%time\n# get the training set and labels\ntrain_set_path, test_set_path, sample_subm_path = get_data_file_path(in_kaggle)\n\ndf_train = pd.read_csv(train_set_path)\ndf_test = pd.read_csv(test_set_path)\n\nsubm = pd.read_csv(sample_subm_path)","ce3615c4":"df_train.info()","30a95f78":"cols = df_train.columns\nfor f in cols:\n    dist_value = df_train[f].value_counts().shape[0]\n    print('Variable {:>40} has {} distinct values'.format(f, dist_value))","82388cdd":"features_to_drop = ['Soil_Type15', 'Soil_Type7']\ndf_train = df_train.drop(features_to_drop, axis=1)","a88e9f16":"# uncomment the block below to run it on your premise\n'''from autoviz.AutoViz_Class import AutoViz_Class\n\nAV = AutoViz_Class()\ndftc = AV.AutoViz(\n    filename='', \n    sep='' , \n    depVar='Cover_Type', \n    dfte=df_train, \n    header=0, \n    verbose=1, \n    lowess=False, \n    chart_format='png', \n    max_rows_analyzed=400000, \n    max_cols_analyzed=55\n)'''\n","27fdeefb":"print('We are done. That is all, folks!')\nfinish_time = dt.datetime.now()\nprint(\"Finished at \", finish_time)\nelapsed = finish_time - start_time\nprint(\"Elapsed time: \", elapsed)","769e06c9":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Express EDA Analysis with AutoViz<\/div>\n\nWe are going to invoke *AutoViz*, one of the prominent freeware Pythonic Rapid EDA tools, to quickly draw the basic insights about the data","24f0da71":"Based on the charts above, we find that \n- the target class labels are seriously imbalanced, with labels *4* and *5* to be neglactibely small relative to other class labels (it may justify exclusing the observations with such class labels from the training set, to improve the ML model accuracy)\n- it will be required to use one of the industrial techniques to handle inbalanced target class problem iin ML modelling experiments down the road (see below)","5068bf9f":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Detecting Cardinality of the Variables in Training Set<\/div>","f4cd7301":"****# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">Tackling Imbalanced Target Class Labels<\/div>\n\nSince we detected extremely imbanalced target class labels, we should take it into account when building ML models down the road. We can choose from one of the conventional methods below\n\n- undersampling\n- oversampling (like using SMOTE etc.)\n- assigning the differnt class label weights in the ML model training\n- Etc.\n\n**Note:** In a nice discussion thread per [Imbalanced classes vs. imbalanced cost](https:\/\/www.kaggle.com\/c\/tabular-playground-series-dec-2021\/discussion\/294305) it is presented with the arguments on why resampling methods are not likely to work in a less efficient manner vs. class weightening and other model-level tweaks.","617264c9":"# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">Introduction<\/div>\n\nThis notebook is intended to extract useful insights for the datasets of \u2018Tabular Playground Series - Dec 2021\u2019 competition in Kaggle. \n\nFor this competition, you will be predicting a categorical target based on a number of feature columns given in the data. \n\nThe data is synthetically generated by a GAN that was trained on a the data from the [Forest Cover Type Prediction](https:\/\/www.kaggle.com\/c\/forest-cover-type-prediction\/overview). This dataset is (a) much larger, and (b) may or may not have the same relationship to the target as the original data.\n\n**Note:** Please refer to this [data page](https:\/\/www.kaggle.com\/c\/forest-cover-type-prediction\/data) for a detailed explanation of the features.\n\nWe are going to perform the complete and comprehensive EDA as follows\n-\tAutomate the generic aspects of EDA with AutoViz, one of the leading freeware Rapid EDA tools in Pythonic Data Science world\n-\tDeep into the problem-specific advanced analytical questions\/discoveries with the custom manual EDA routines programmed on top of standard capabilities of conventional Python visualization libraries","ec5db9eb":"# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">Benefits<\/div>\n\nThis notebook provides a real-world example of how **AutoViz**, one of the best freeware Rapid EDA tools, can save your time on routinous steps in EDA while allowing you to spend more time on drawing the real insights from your data, using the auto-generated charts producted by **AutoViz**.\n\nThe contribution in this notebook expands on the research to prove **AutoViz** to be a good automation tool for Data Analysts\/Data Scientists. Previous EDA experiments with **AutoViz** could be reviewed below\n\n- [Using AutoViz to Build a Comprehensive EDA](https:\/\/www.kaggle.com\/gvyshnya\/using-autoviz-to-build-a-comprehensive-eda)\n- [Express EDA with AutoViz](https:\/\/www.kaggle.com\/gvyshnya\/mar-21-tpc-express-eda-with-autoviz)\n- [EDA and Feature Importance Findings](https:\/\/www.kaggle.com\/c\/lish-moa\/discussion\/190647#1047649)","77904853":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Relations Between Numeric Feature and Target<\/div>","7901861d":"# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">Call for Action: Let's get the hands dirty<\/div>\n\nThe sections below demonstrate the source code of the express EDA experiment that lead to the insights collected above.\n\nExecuting the source code in the sections below will lead to generating the charts used as images in the previous chapter.","c1b5fce7":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Pair Associations Between Features by Target<\/div>","4c795d4b":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Initial Preparations<\/div>\n\nWe are going to start with the essential pre-requisites as follows\n\n- installing *AutoViz* into this notebook\n- importing the standard Python packages we need to use down the road\n- programming the useful automation routines for repeatable data visualizations we are going to draw in the Advance Analytical EDA trials down the road","ca6ac1e3":"<img src=\"https:\/\/raw.githubusercontent.com\/gvyshnya\/tab-dec-21\/main\/AutoViz_Plots\/Cover_Type\/Heat_Maps.png\">","ab7ea4af":"<img src=\"https:\/\/raw.githubusercontent.com\/gvyshnya\/tab-dec-21\/main\/AutoViz_Plots\/Cover_Type\/Box_Plots.png\">","992d4680":"<img src=\"https:\/\/raw.githubusercontent.com\/gvyshnya\/tab-dec-21\/main\/AutoViz_Plots\/Cover_Type\/Scatter_Plots.png\">","c5c25aca":"<img src=\"https:\/\/raw.githubusercontent.com\/gvyshnya\/tab-dec-21\/main\/AutoViz_Plots\/Cover_Type\/Pair_Scatter_Plots.png\">","6e2ac9e8":"Reviewing the box plots above reveals a lot of interesting insights\n- There are certain numeric features that have strong association with the target variable (*Cover_Type*) and thus they are going to be quite good predictors (for instance, *Elevation*, *Horizontal_Distance_to_Hydrology*, *Vertical_Distance_to_Hydrology*, *Hillshade_9am*, *'Horizontal_Distance_to_Fire_Points'*)\n- Other features seem to be less strong predictors in terms of their association with the target class labels (howerver, it  does not equally justify excluding such features from the model training in ML Experiments)","0f5fe933":"Although many numeric features in this dataset are often categories with numeric discrete values, looking at the Pearson correlation between such variables can still bring some more insights on highly associated\/'correlated' features. From that standpoint, we observe that\n\n- *'Wilderness_Area1'* and *'Wilderness_Area3'* are highgly correlated, and one of such features can be removed from the training set withough compromising the model accuracy","14b1b751":"When we review the associations between the feature variables (factored by the distribution of the target class labels in the training set observations), we see *Elevation* to separate the target class labels quite solidly, in the interactions with other feature variables.","c39b6932":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Training Set Overview<\/div>","1ff57282":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Target Class Label Distribution<\/div>\n\nOne of the plots auto-generated by *AutoViz* displays the bar chats to visualize the distribution of the class labels of target variable.","5a126cdb":"# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">EDA Findings in Training Set<\/div>\n\nThis section will be focused on the discoveries and insights we obtained from the *AutoViz*-automated EDA for the contest dataset.\n\n**Note:** The diagrams used in the subsecctions have been automatically generated by running the code in the next chapter. The charts were generated in a matter of minutes thus exposing you to spend time on more thinking-intensive activities and drawing insights from your data.","e73c2196":"# <div style=\"color:white;background-color:#1d1545;padding:3%;border-radius:50px 50px;font-size:1em;text-align:center\">References<\/div>\n\n- https:\/\/www.kaggle.com\/damagejun\/tps-dec-2021-eda\n- https:\/\/towardsdatascience.com\/heres-what-i-ve-learnt-about-sklearn-resample-ab735ae1abc4\n- https:\/\/towardsdatascience.com\/how-to-handle-imbalance-data-and-small-training-sets-in-ml-989f8053531d\n","3a2f76b5":"As a result, we see that *'Soil_Type15'*, and *'Soil_Type7'* have just one value in every training records. Therefore it won't make any sense to use such features in the model training down the road.\n\n'Id' feature is also a nominal identifier, and therefore it should be excluded from the training set in the model training time down the road. ","d9e6fcc5":"The pair scatter plots above further detail the insights on the feature variables-to-target class label relations.","8a0cae40":"<img src=\"https:\/\/raw.githubusercontent.com\/gvyshnya\/tab-dec-21\/main\/AutoViz_Plots\/Cover_Type\/Dist_Plots_target.png\">","d896afd9":"## <div style=\"font-size:20px;text-align:center;color:black;border-bottom:5px #0026d6 solid;padding-bottom:3%\">Pair Correlations Between Features<\/div>"}}