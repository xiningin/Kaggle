{"cell_type":{"919dcbba":"code","f2f6123a":"code","93a7c366":"code","8db5f38d":"code","84c07b82":"code","bc3dd497":"code","ef70eefe":"code","fa3fdd45":"code","61a5e9c1":"code","20b797fc":"code","c9eaf7c3":"code","b9aff625":"code","bacdbf61":"code","caf821ec":"code","4927064d":"code","04f06880":"code","d4dab40d":"code","94667c54":"code","016d132a":"code","1a05f5bc":"code","20732845":"code","7006150f":"code","ace94d6e":"code","98b122bd":"markdown","cf32398e":"markdown","b5c6e2a9":"markdown","fcef870f":"markdown","04b43e89":"markdown","99840a0b":"markdown"},"source":{"919dcbba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f2f6123a":"train = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/train.csv',index_col=0)\ntest_data  = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/test.csv', index_col=0)\nsample     = pd.read_csv('..\/input\/tabular-playground-series-apr-2021\/sample_submission.csv')","93a7c366":"!pip install ptitprince","8db5f38d":"from ptitprince import RainCloud\nfrom ptitprince import PtitPrince as pt","84c07b82":"train.head()","bc3dd497":"import seaborn as sns\nimport matplotlib.pyplot as plt\nsns.barplot(x=\"Pclass\", y=\"Fare\", data=train, capsize= .1);","ef70eefe":"# plotting the clouds\nf, ax = plt.subplots(figsize=(7, 5))\ndy=\"Pclass\"\ndx=\"Fare\"\nort=\"h\"\npal = sns.color_palette(n_colors=1)\n\nax=pt.half_violinplot(x=dx, y=dy, data=train, palette=pal, bw=.2, cut=0.,\n                      scale=\"area\", width=.6, inner=None, orient=ort)","fa3fdd45":"# adding the rain\nf, ax = plt.subplots(figsize=(7, 5))\ndy=\"Pclass\"\ndx=\"Fare\"\nort=\"h\"\npal = sns.color_palette(n_colors=1)\n\nax=pt.half_violinplot(x=dx, y=dy, data=train, palette=pal, bw=.2, cut=0.,\n                      scale=\"area\", width=.6, inner=None, orient=ort)\nax=sns.stripplot(x=dx, y=dy, data=train, palette=pal, edgecolor=\"white\",\n                 size=3, jitter=0, zorder=0, orient=ort)","61a5e9c1":"# adding jitter to the rain\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.half_violinplot(x=dx, y=dy, data=train, palette=pal, bw=.2, cut=0.,\n                      scale=\"area\", width=.6, inner=None, orient=ort)\nax=sns.stripplot(x=dx, y=dy, data=train, palette=pal, edgecolor=\"white\",\n                 size=3, jitter=1, zorder=0, orient=ort)","20b797fc":"#adding the boxplot with quartiles\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.half_violinplot(x=dx, y=dy, data=train, palette=pal, bw=.2, cut=0.,\n                      scale=\"area\", width=.6, inner=None, orient=ort)\nax=sns.stripplot(x=dx, y=dy, data=train, palette=pal, edgecolor=\"white\",\n                 size=3, jitter=1, zorder=0, orient=ort)\nax=sns.boxplot(x=dx, y=dy, data=train, color=\"black\", width=.15, zorder=10,\n               showcaps=True, boxprops={'facecolor': 'none', \"zorder\": 10},\n               showfliers=True, whiskerprops={'linewidth': 2, \"zorder\": 10},\n               saturation=1, orient=ort)","c9eaf7c3":"pal = \"Set2\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.half_violinplot(x=dx, y=dy, data=train, palette=pal, bw=.2, cut=0.,\n                      scale=\"area\", width=.6, inner=None, orient=ort)\nax=sns.stripplot(x=dx, y=dy, data=train, palette=pal, edgecolor=\"white\",\n                 size=3, jitter=1, zorder=0, orient=ort)\nax=sns.boxplot(x=dx, y=dy, data=train, color=\"black\", width=.15, zorder=10,\n               showcaps=True, boxprops={'facecolor': 'none', \"zorder\": 10},\n               showfliers=True, whiskerprops={'linewidth': 2, \"zorder\": 10},\n               saturation=1, orient=ort)","b9aff625":"#same thing with a single command: now x **must** be the categorical value\nsigma = .2\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\nf, ax = plt.subplots(figsize=(7, 5))\n\npt.RainCloud(x=dx, y=dy, data=train, palette=pal, bw=sigma,\n             width_viol=.6, ax=ax, orient=ort);","bacdbf61":"#moving the rain below the boxplot\nsigma = .2\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\nf, ax = plt.subplots(figsize=(7, 5))\n\npt.RainCloud(x=dx, y=dy, data=train, palette=pal, bw=sigma,\n             width_viol=.6, ax=ax, orient=ort, move=.2);","caf821ec":"# Changing orientation\n#moving the rain below the boxplot\nsigma = .2\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"v\"\nf, ax = plt.subplots(figsize=(7, 5))\n\npt.RainCloud(x=dx, y=dy, data=train, palette=pal, bw=sigma,\n             width_viol=.6, ax=ax, orient=ort, move=.2);","4927064d":"#changing cloud smoothness\n#moving the rain below the boxplot\nsigma = .5\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\nf, ax = plt.subplots(figsize=(7, 5))\n\npt.RainCloud(x=dx, y=dy, data=train, palette=pal, bw=sigma,\n             width_viol=.6, ax=ax, orient=ort, move=.2);","04f06880":"#adding a red line connecting the groups' mean value (useful for longitudinal data)\nsigma = .5\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\nf, ax = plt.subplots(figsize=(7, 5))\n\npt.RainCloud(x=dx, y=dy, data=train, palette=pal, bw=sigma,\n             width_viol=.6, ax=ax, orient=ort, move=.2, pointplot=True);","d4dab40d":"# Rainclouds with FacetGrid\ng = sns.FacetGrid(train, col=\"Survived\", height=6)\ng = g.map_dataframe(pt.RainCloud, x=\"Pclass\", y=\"Fare\", data=train,\n                    orient=\"h\")\n\ng.fig.subplots_adjust(top=0.75)","94667c54":"dy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\ndhue = \"Survived\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.RainCloud(x=dx, y=dy, hue=dhue, data=train, palette=pal, bw=sigma,\n                 width_viol=.7, ax=ax, orient=ort)","016d132a":"dy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\ndhue = \"Survived\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.RainCloud(x=dx, y=dy, hue=dhue, data=train, palette=pal, bw=sigma,\n                 width_viol=.7, ax=ax, orient=ort, alpha=0.65)","1a05f5bc":"#The Doge Flag\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\ndhue = \"Survived\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.RainCloud(x=dx, y=dy, hue=dhue, data=train, palette=pal, bw=sigma,\n                 width_viol=.7, ax=ax, orient=ort, alpha=0.65, dodge=True)","20732845":"#same, with dodging and line\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\ndhue = \"Survived\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.RainCloud(x=dx, y=dy, hue=dhue, data=train, palette=pal, bw=sigma,\n                 width_viol=.7, ax=ax, orient=ort, alpha=0.65, dodge=True, pointplot=True)","7006150f":"#moving the rain under the boxplot\n\ndy = \"Fare\"\ndx = \"Pclass\"\nort = \"h\"\ndhue = \"Survived\"\nf, ax = plt.subplots(figsize=(7, 5))\nax=pt.RainCloud(x=dx, y=dy, hue=dhue, data=train, palette=pal, bw=sigma,\n                 width_viol=.7, ax=ax, orient=ort, alpha=0.65, dodge=True, pointplot=True, move=0.2)","ace94d6e":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Thank you CurryPurin for the Petit Prince script')","98b122bd":"![](http:\/\/respirefrances.com\/wp-content\/uploads\/2016\/09\/Petit-Prince.jpg)respirefrances.com","cf32398e":"#PtitPrince by CurryPurin https:\/\/www.kaggle.com\/currypurin\/titanic-raincloud-tutorial\/notebook\n\n#https:\/\/github.com\/pog87\/PtitPrince\n\n#https:\/\/github.com\/pog87\/PtitPrince\/blob\/master\/tutorial_python\/raincloud_tutorial_python.ipynb","b5c6e2a9":"![](https:\/\/i.ytimg.com\/vi\/GoioIAjRE_8\/maxresdefault.jpg)youtube.com","fcef870f":"#PtitPrince tutorial by CurryPurin https:\/\/www.kaggle.com\/currypurin\/titanic-raincloud-tutorial\/notebook\n\n#https:\/\/github.com\/pog87\/PtitPrince\n\n#https:\/\/github.com\/pog87\/PtitPrince\/blob\/master\/tutorial_python\/raincloud_tutorial_python.ipynb","04b43e89":"![](https:\/\/lh3.googleusercontent.com\/proxy\/O35T5B7WHUaLERFNhDYzfeTIWmdkjeCp3rEpKx7t8JGu6FUVscm_nOvFaah08_fuGqkVlrsblirC8q-EPM-lclPvgtb3b1Ly0cqh2w-mkyhQNq9UxvNMb6zh8cTE8A)jenliujenliu.com","99840a0b":"![](https:\/\/i.pinimg.com\/originals\/27\/17\/71\/2717719c2acfbed8868838c91f826e3b.jpg)pinterest.com"}}