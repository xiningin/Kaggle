{"cell_type":{"5865bdc1":"code","8e84c8b9":"code","c1b89a96":"code","7e66559d":"code","b8529d24":"code","5175a615":"code","bade7c5d":"code","1ba20e98":"code","9c812db6":"code","944e35e1":"code","1387f9ee":"code","e5803845":"code","29fd3a98":"code","5f9ea404":"code","1cdd65ab":"code","0df069fe":"code","9edd6a07":"code","7f91c9d0":"code","f09406ae":"code","c2c5e692":"code","bb6aeb4b":"code","79f4a783":"code","6c98783f":"code","a6bda2fc":"code","1e2d0ddb":"code","b806d654":"code","1de9c976":"code","18201873":"code","4b575246":"code","5afa3a6e":"code","a3b458a1":"code","cbc0401a":"code","d183eafb":"code","1d23aa6b":"code","b36b31d5":"code","7d121735":"code","f822a53a":"code","c3bd378e":"code","e3cdff76":"code","f1401a92":"code","0507a842":"code","85bcadb3":"markdown","15f4aa39":"markdown","93ff52c6":"markdown","d38316ea":"markdown","7d184e8c":"markdown","de718eb0":"markdown","20ef3787":"markdown","d96c68be":"markdown","c25b0ef3":"markdown","de691f65":"markdown","04e780a1":"markdown","e30fbe73":"markdown","01c034f5":"markdown","d4be5356":"markdown","2cc35f62":"markdown","aec6fffe":"markdown","1dc908ec":"markdown","403bdd93":"markdown","17383e67":"markdown","3669f814":"markdown","f110ed24":"markdown","3b68a620":"markdown","cf967a66":"markdown","7b338557":"markdown","8efebc5a":"markdown","ac6a0a56":"markdown"},"source":{"5865bdc1":"!pip install googlemaps","8e84c8b9":"import numpy as np\nimport pandas as pd\nimport googlemaps\nimport plotly_express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport datetime as dt\nimport warnings\nwarnings.filterwarnings(\"ignore\")","c1b89a96":"#Values used throughout the kernel\ncolorscale = ['#77DD77','#33AF13','#F6D20E','#F17700','#FE6B64','#F12424']\nPAPER_BGCOLOR = '#f5f2d0'\nBGCOLOR = 'LightSteelBlue'","7e66559d":"fig = go.Figure(data=[go.Table(\n    columnorder = [1,2,3,4],\n    columnwidth = [50,70,60,400],\n    \n    header=dict(values=['<b>AQI<\/b>', '<b>Remark<\/b>','<b>Colour Code<\/b>','<b>Possible Health Effects<\/b>'],\n                line_color='darkslategray',\n                fill_color='skyblue',\n                align='left'),\n    cells=dict(values=[['0-50','51-100','101-200','201-300','301-400','401-500'],\n                       ['Good','Satisfactory','Moderate','Poor','Very Poor','Severe'],\n                       ['','','','','',''],\n                       ['Minimal impact','Minor breathing discomfort to sensitive people',\\\n                       'Breathing discomfort to the people with lungs, asthma and heart diseases',\\\n                       'Breathing discomfort to most people on prolonged exposure',\\\n                       'Respiratory illness on prolonged exposure','Affects healthy people and seriously impacts those with existing diseases']],\n               line_color='darkslategray',\n               fill_color=['rgb(255,255,255)',\n                           'rgb(255,255,255)',\n                            [color for color in colorscale],\n                           'rgb(255,255,255)'],\n               align='left'))\n])\n\nfig.update_layout(height=180,paper_bgcolor='LightSteelBlue',margin=dict(l=5,r=5,t=5,b=5))\nfig.show()","b8529d24":"df_cd = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/city_day.csv')\ndf_ch = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/city_hour.csv')\ndf_sd = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/station_day.csv')\ndf_sh = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/station_hour.csv')\ndf_st = pd.read_csv('\/kaggle\/input\/air-quality-data-in-india\/stations.csv')\ndf_temp = pd.read_csv('\/kaggle\/input\/daily-temperature-of-major-cities\/city_temperature.csv')","5175a615":"from kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\nsecret_value_0 = user_secrets.get_secret(\"gmaps\")\nsecret_value_1 = user_secrets.get_secret(\"mapboxtoken\")\ngmaps = googlemaps.Client(key=secret_value_0)\n\n#This is the logic used to fetch the coordibates of stations\n# d = {}\n# stations = df_st.StationName.unique().tolist()\n# for station in stations:\n#     add = station.split('-')[0].strip()\n#     data = gmaps.geocode(add)\n#     d[station] = data[0]['geometry']['location']\n\ndef get_coords(state):\n    lat = d[state]['lat']\n    lng = d[state]['lng']\n    return (lat,lng)\n#This dictionary is derived using above commented code\nd = { 'Adarsh Nagar, Jaipur - RSPCB': {'lat': 26.9018769, 'lng': 75.8271749},\n    'Airoli, Navi Mumbai - MPCB': {'lat': 19.159014, 'lng': 72.9985686},\n    'Alandur Bus Depot, Chennai - CPCB': {   'lat': 12.9956231,\n                                             'lng': 80.18900219999999},\n    'Alipur, Delhi - DPCC': {'lat': 28.7972263, 'lng': 77.13313629999999},\n    'Anand Kala Kshetram, Rajamahendravaram - APPCB': {   'lat': 17.0082015,\n                                                          'lng': 81.77145949999999},\n    'Anand Vihar, Delhi - DPCC': {'lat': 28.650218, 'lng': 77.30270589999999},\n    'Anand Vihar, Hapur - UPPCB': {'lat': 28.7222506, 'lng': 77.7537913},\n    'Ardhali Bazar, Varanasi - UPPCB': {   'lat': 25.3476918,\n                                           'lng': 82.98088609999999},\n    'Arya Nagar, Bahadurgarh - HSPCB': {'lat': 28.6771177, 'lng': 76.9282948},\n    'Asansol Court Area, Asansol - WBPCB': {   'lat': 23.6871984,\n                                               'lng': 86.9461361},\n    'Ashok Nagar, Udaipur - RSPCB': {   'lat': 24.5886328,\n                                        'lng': 73.70218009999999},\n    'Ashok Vihar, Delhi - DPCC': {'lat': 28.6909791, 'lng': 77.17652389999999},\n    'Aya Nagar, Delhi - IMD': {'lat': 28.4720443, 'lng': 77.1329417},\n    'BTM Layout, Bengaluru - CPCB': {'lat': 12.9165757, 'lng': 77.6101163},\n    'BWSSB Kadabesanahalli, Bengaluru - CPCB': {   'lat': 12.9603881,\n                                                   'lng': 77.71899309999999},\n    'Ballygunge, Kolkata - WBPCB': {   'lat': 22.5280352,\n                                       'lng': 88.36590830000002},\n    'Bandhavgar Colony, Satna - Birla Cement': {   'lat': 24.5798734,\n                                                   'lng': 80.8557684},\n    'Bandra, Mumbai - MPCB': {'lat': 19.0595596, 'lng': 72.8295287},\n    'Bapuji Nagar, Bengaluru - KSPCB': {   'lat': 12.95678,\n                                           'lng': 77.53972929999999},\n    'Bawana, Delhi - DPCC': {'lat': 28.793229, 'lng': 77.0483355},\n    'Belur Math, Howrah - WBPCB': {'lat': 22.6280889, 'lng': 88.35176380000001},\n    'Bhopal Chauraha, Dewas - MPPCB': {'lat': 22.9687824, 'lng': 76.0635763},\n    'Bidhannagar, Kolkata - WBPCB': {'lat': 22.5796842, 'lng': 88.414312},\n    'Bollaram Industrial Area, Hyderabad - TSPCB': {   'lat': 17.5432727,\n                                                       'lng': 78.3514088},\n    'Borivali East, Mumbai - MPCB': {   'lat': 19.2297814,\n                                        'lng': 72.86085589999999},\n    'Burari Crossing, Delhi - IMD': {'lat': 28.72852, 'lng': 77.199327},\n    'CRRI Mathura Road, Delhi - IMD': {'lat': 28.5517202, 'lng': 77.2750344},\n    'Central School, Lucknow - CPCB': {   'lat': 43.957268,\n                                          'lng': -81.50915069999999},\n    'Central University, Hyderabad - TSPCB': {   'lat': 17.4567372,\n                                                 'lng': 78.32638399999999},\n    'Chandrapur, Chandrapur - MPCB': {'lat': 19.9615398, 'lng': 79.2961468},\n    'Chhatrapati Shivaji Intl. Airport (T2), Mumbai - MPCB': {   'lat': 19.0974373,\n                                                                 'lng': 72.8745017},\n    'Chhoti Gwaltoli, Indore - MPPCB': {'lat': 22.7152096, 'lng': 75.8700466},\n    'Chikkaballapur Rural, Chikkaballapur - KSPCB': {   'lat': 13.4290654,\n                                                        'lng': 77.73304739999999},\n    'City Center, Gwalior - MPPCB': {'lat': 26.2035227, 'lng': 78.1920664},\n    'City Railway Station, Bengaluru - KSPCB': {   'lat': 12.9781291,\n                                                   'lng': 77.5695295},\n    'Civil Line, Jalandhar - PPCB': {'lat': 31.3208006, 'lng': 75.5793401},\n    'Civil Lines, Ajmer - RSPCB': {'lat': 26.4726871, 'lng': 74.6415071},\n    'Colaba, Mumbai - MPCB': {'lat': 18.9067031, 'lng': 72.8147123},\n    'Collector Office, Yadgir - KSPCB': {   'lat': 16.751388,\n                                            'lng': 77.13632969999999},\n    'Collectorate, Gaya - BSPCB': {'lat': 24.7914917, 'lng': 85.006337},\n    'Collectorate, Jodhpur - RSPCB': {'lat': 26.2918067, 'lng': 73.0366998},\n    'DRM Office Danapur, Patna - BSPCB': {   'lat': 25.5856237,\n                                             'lng': 85.04429929999999},\n    'DTU, Delhi - CPCB': {'lat': 28.7451463, 'lng': 77.1169907},\n    'Deen Dayal Nagar, Sagar - MPPCB': {'lat': 23.8641966, 'lng': 78.806407},\n    'Deshpande Nagar, Hubballi - KSPCB': {'lat': 15.3547598, 'lng': 75.1384848},\n    'Dr. Karni Singh Shooting Range, Delhi - DPCC': {   'lat': 28.4997268,\n                                                        'lng': 77.2670954},\n    'Dwarka-Sector 8, Delhi - DPCC': {   'lat': 28.570709,\n                                         'lng': 77.072722},\n    'East Arjun Nagar, Delhi - CPCB': {   'lat': 28.65617319999999,\n                                          'lng': 77.29474669999999},\n    'F-Block, Sirsa - HSPCB': {'lat': 37.032551, 'lng': -95.6242631},\n    'Fort William, Kolkata - WBPCB': {'lat': 22.5542459, 'lng': 88.3358744},\n    'GIDC, Ankleshwar - GPCB': {'lat': 21.6143446, 'lng': 73.01155969999999},\n    'GIDC, Nandesari - Nandesari Ind. Association': {   'lat': 22.4089434,\n                                                        'lng': 73.0962447},\n    'GM Office, Brajrajnagar - OSPCB': {   'lat': 21.8546923,\n                                           'lng': 83.92479949999999},\n    'GVM Corporation, Visakhapatnam - APPCB': {   'lat': 17.6868159,\n                                                  'lng': 83.2184815},\n    'Ganga Nagar, Meerut - UPPCB': {'lat': 29.0009035, 'lng': 77.7599208},\n    'Gangapur Road, Nashik - MPCB': {'lat': 20.0168226, 'lng': 73.735682},\n    'General Hospital, Mandikhera - HSPCB': {   'lat': 27.9001526,\n                                                'lng': 76.993775},\n    'Ghusuri, Howrah - WBPCB': {'lat': 22.6114858, 'lng': 88.35401449999999},\n    'Gobind Pura, Yamuna Nagar - HSPCB': {'lat': 30.1501492, 'lng': 77.2850239},\n    'Golden Temple, Amritsar - PPCB': {   'lat': 31.61998029999999,\n                                          'lng': 74.8764849},\n    'Gole Bazar, Katni - MPPCB': {'lat': 23.8327424, 'lng': 80.3978186},\n    'Gomti Nagar, Lucknow - UPPCB': {'lat': 26.8496217, 'lng': 81.0072193},\n    'Govt. High School Shikarpur, Patna - BSPCB': {   'lat': 25.5931871,\n                                                      'lng': 85.2272598},\n    'H.B. Colony, Bhiwani - HSPCB': {'lat': 28.8082043, 'lng': 76.1361016},\n    'Haldia, Haldia - WBPCB': {'lat': 22.0627164, 'lng': 88.0832934},\n    'Hardev Nagar, Bathinda - PPCB': {'lat': 30.2420588, 'lng': 74.9175889},\n    'Hebbal 1st Stage, Mysuru - KSPCB': {'lat': 12.3500813, 'lng': 76.6209903},\n    'Hebbal, Bengaluru - KSPCB': {'lat': 13.0353557, 'lng': 77.59878739999999},\n    'Hombegowda Nagar, Bengaluru - KSPCB': {   'lat': 12.9375448,\n                                               'lng': 77.5948946},\n    'Huda Sector, Fatehabad - HSPCB': {'lat': 29.5030525, 'lng': 75.4737974},\n    'ICRISAT Patancheru, Hyderabad - TSPCB': {   'lat': 17.5110595,\n                                                 'lng': 78.27519389999999},\n    'IDA Pashamylaram, Hyderabad - TSPCB': {   'lat': 17.5324702,\n                                               'lng': 78.1849427},\n    'IGI Airport (T3), Delhi - IMD': {'lat': 28.5550838, 'lng': 77.0844015},\n    'IGSC Planetarium Complex, Patna - BSPCB': {   'lat': 25.6107873,\n                                                   'lng': 85.131507},\n    'IHBAS, Dilshad Garden, Delhi - CPCB': {   'lat': 28.6811689,\n                                               'lng': 77.3047121},\n    'ITO, Delhi - CPCB': {'lat': 28.6293713, 'lng': 77.2413201},\n    'Ibrahimpur, Vijayapura - KSPCB': {'lat': 16.8028639, 'lng': 75.726973},\n    'Indira Colony Vistar, Pali - RSPCB': {   'lat': 25.7731026,\n                                              'lng': 73.3502377},\n    'Indirapuram, Ghaziabad - UPPCB': {'lat': 28.6460176, 'lng': 77.3695166},\n    'Industrial Area, Hajipur - BSPCB': {   'lat': 25.6927811,\n                                            'lng': 85.24011639999999},\n    'Jadavpur, Kolkata - WBPCB': {'lat': 22.4954988, 'lng': 88.3709008},\n    'Jahangirpuri, Delhi - DPCC': {'lat': 28.7296171, 'lng': 77.16663129999999},\n    'Jai Bhim Nagar, Meerut - UPPCB': {   'lat': 28.9579131,\n                                          'lng': 77.75951309999999},\n    'Jawaharlal Nehru Stadium, Delhi - DPCC': {   'lat': 28.5828456,\n                                                  'lng': 77.2343665},\n    'Jayanagar 5th Block, Bengaluru - KSPCB': {   'lat': 12.920789,\n                                                  'lng': 77.5841502},\n    'Kacheripady, Ernakulam - Kerala PCB': {   'lat': 9.988280099999999,\n                                               'lng': 76.28121949999999},\n    'Kalal Majra, Khanna - PPCB': {'lat': 30.7406085, 'lng': 76.20523779999999},\n    'Kalyana Nagara, Chikkamagaluru - KSPCB': {   'lat': 13.3230247,\n                                                  'lng': 75.7967371},\n    'Kariavattom, Thiruvananthapuram - Kerala PCB': {   'lat': 8.5678435,\n                                                        'lng': 76.8908318},\n    'Karve Road, Pune - MPCB': {'lat': 18.5033095, 'lng': 73.8197888},\n    'Khadakpada, Kalyan - MPCB': {'lat': 19.2592249, 'lng': 73.12792689999999},\n    'Knowledge Park - III, Greater Noida - UPPCB': {   'lat': 34.925234,\n                                                       'lng': -81.0260196},\n    'Knowledge Park - V, Greater Noida - UPPCB': {   'lat': 34.925234,\n                                                     'lng': -81.0260196},\n    'Kurla, Mumbai - MPCB': {'lat': 19.0726295, 'lng': 72.8844721},\n    'Lajpat Nagar, Moradabad - UPPCB': {'lat': 28.8253591, 'lng': 78.7830383},\n    'Lal Bahadur Shastri Nagar, Kalaburagi - KSPCB': {   'lat': 17.3203897,\n                                                         'lng': 76.8194767},\n    'Lalbagh, Lucknow - CPCB': {'lat': 26.8459624, 'lng': 80.9415089},\n    'Lodhi Road, Delhi - IMD': {'lat': 28.5910626, 'lng': 77.2280791},\n    'Loni, Ghaziabad - UPPCB': {'lat': 28.7333526, 'lng': 77.2986264},\n    'Lumpyngngad, Shillong - Meghalaya PCB': {   'lat': 25.5585941,\n                                                 'lng': 91.89848649999999},\n    'MD University, Rohtak - HSPCB': {   'lat': 28.8768269,\n                                         'lng': 76.62110799999999},\n    'MIDC Khutala, Chandrapur - MPCB': {   'lat': 19.9756764,\n                                           'lng': 79.24229559999999},\n    'Mahakaleshwar Temple, Ujjain - MPPCB': {   'lat': 23.1827177,\n                                                'lng': 75.7682178},\n    'Mahape, Navi Mumbai - MPCB': {'lat': 19.1182937, 'lng': 73.0275875},\n    'Major Dhyan Chand National Stadium, Delhi - DPCC': {   'lat': 28.6125465,\n                                                            'lng': 77.2373351},\n    'Manali Village, Chennai - TNPCB': {'lat': 13.1779289, 'lng': 80.2700737},\n    'Manali, Chennai - CPCB': {'lat': 13.1779289, 'lng': 80.2700737},\n    'Mandir Marg, Delhi - DPCC': {'lat': 28.6341752, 'lng': 77.20047459999999},\n    'Maninagar, Ahmedabad - GPCB': {'lat': 22.995165, 'lng': 72.604097},\n    'Marhatal, Jabalpur - MPPCB': {'lat': 23.1670639, 'lng': 79.9339608},\n    'Model Town, Patiala - PPCB': {'lat': 30.3448377, 'lng': 76.3708347},\n    'More Chowk Waluj, Aurangabad - MPCB': {   'lat': 19.8406027,\n                                               'lng': 75.2466299},\n    'Moti Doongri, Alwar - RSPCB': {'lat': 27.5515817, 'lng': 76.6080554},\n    'Mundka, Delhi - DPCC': {'lat': 28.6823144, 'lng': 77.034937},\n    'Municipal Corporation Office, Dharuhera - HSPCB': {   'lat': 28.2068002,\n                                                           'lng': 76.7996532},\n    'Muradpur, Patna - BSPCB': {'lat': 25.6194928, 'lng': 85.14663999999999},\n    'Murthal, Sonipat - HSPCB': {'lat': 29.0315896, 'lng': 77.0723807},\n    'Muzaffarpur Collectorate, Muzaffarpur - BSPCB': {   'lat': 26.1235085,\n                                                         'lng': 85.3812437},\n    'NISE Gwal Pahari, Gurugram - IMD': {'lat': 28.4235473, 'lng': 77.1489412},\n    'NSIT Dwarka, Delhi - CPCB': {'lat': 28.610273, 'lng': 77.0378818},\n    'Najafgarh, Delhi - DPCC': {'lat': 28.6090126, 'lng': 76.9854526},\n    'Narela, Delhi - DPCC': {'lat': 28.8548818, 'lng': 77.08921509999999},\n    'Nathu Colony, Ballabgarh - HSPCB': {   'lat': 28.3426369,\n                                            'lng': 77.31772459999999},\n    'Nehru Nagar, Delhi - DPCC': {'lat': 28.5638667, 'lng': 77.2608101},\n    'Nehru Nagar, Kanpur - UPPCB': {'lat': 26.4715909, 'lng': 80.3237548},\n    'Nerul, Navi Mumbai - MPCB': {'lat': 19.0338457, 'lng': 73.0195871},\n    'New Collectorate, Baghpat - UPPCB': {   'lat': 28.9427827,\n                                             'lng': 77.22760699999999},\n    'New Industrial Town, Faridabad - HSPCB': {   'lat': 28.3922002,\n                                                  'lng': 77.301675},\n    'New Mandi, Muzaffarnagar - UPPCB': {'lat': 29.4676905, 'lng': 77.7115687},\n    'Nishant Ganj, Lucknow - UPPCB': {   'lat': 26.8669313,\n                                         'lng': 80.94980149999999},\n    'North Campus, DU, Delhi - IMD': {'lat': 28.6876514, 'lng': 77.2102816},\n    'Okhla Phase-2, Delhi - DPCC': {'lat': 28.5625518, 'lng': 77.2913729},\n    'Opp GPO Civil Lines, Nagpur - MPCB': {   'lat': 21.1523552,\n                                              'lng': 79.0692636},\n    'PWD Grounds, Vijayawada - APPCB': {'lat': 16.5061942, 'lng': 80.6313553},\n    'Padmapukur, Howrah - WBPCB': {'lat': 22.5707053, 'lng': 88.3008448},\n    'Palayam, Kozhikode - Kerala PCB': {   'lat': 11.2488252,\n                                           'lng': 75.78389949999999},\n    'Pallavpuram Phase 2, Meerut - UPPCB': {   'lat': 29.0641002,\n                                               'lng': 77.7151616},\n    'Patparganj, Delhi - DPCC': {'lat': 28.6347308, 'lng': 77.30457109999999},\n    'Patti Mehar, Ambala - HSPCB': {'lat': 30.3778718, 'lng': 76.7733263},\n    'Peenya, Bengaluru - CPCB': {'lat': 13.0285133, 'lng': 77.5196763},\n    'Phase-1 GIDC, Vapi - GPCB': {'lat': 34.1832613, 'lng': -84.2182962},\n    'Phase-4 GIDC, Vatva - GPCB': {'lat': 34.1832613, 'lng': -84.2182962},\n    'Phool Bagh, Gwalior - Mondelez Ind. Food': {   'lat': 26.2103607,\n                                                    'lng': 78.16926889999999},\n    'Pimpleshwar Mandir, Thane - MPCB': {   'lat': 19.1890822,\n                                            'lng': 72.96224939999999},\n    'Plammoodu, Thiruvananthapuram - Kerala PCB': {   'lat': 8.5140567,\n                                                      'lng': 76.9477422},\n    'Polayathode, Kollam - Kerala PCB': {   'lat': 8.878704899999999,\n                                            'lng': 76.6073332},\n    'Police Commissionerate, Jaipur - RSPCB': {   'lat': 26.9164092,\n                                                  'lng': 75.80167879999999},\n    'Police Lines, Jind - HSPCB': {'lat': 29.3069655, 'lng': 76.3478097},\n    'Powai, Mumbai - MPCB': {'lat': 19.1175993, 'lng': 72.9059747},\n    'Punjab Agricultural University, Ludhiana - PPCB': {   'lat': 30.9010281,\n                                                           'lng': 75.8071228},\n    'Punjabi Bagh, Delhi - DPCC': {'lat': 28.66197529999999, 'lng': 77.1241557},\n    'Pusa, Delhi - DPCC': {'lat': 28.6376724, 'lng': 77.1571443},\n    'Pusa, Delhi - IMD': {'lat': 28.6376724, 'lng': 77.1571443},\n    'R K Puram, Delhi - DPCC': {'lat': 28.5660075, 'lng': 77.1767435},\n    'RIICO Ind. Area III, Bhiwadi - RSPCB': {   'lat': 28.2123547,\n                                                'lng': 76.85410739999999},\n    'RIMT University, Mandi Gobindgarh - PPCB': {   'lat': 30.6510104,\n                                                    'lng': 76.32925200000001},\n    'Rabindra Bharati University, Kolkata - WBPCB': {   'lat': 22.5844542,\n                                                        'lng': 88.3593841},\n    'Rabindra Sarobar, Kolkata - WBPCB': {'lat': 22.5121451, 'lng': 88.3636952},\n    'Railway Colony, Guwahati - APCB': {   'lat': 26.1795873,\n                                           'lng': 91.78431499999999},\n    'Rajbansi Nagar, Patna - BSPCB': {'lat': 25.603603, 'lng': 85.1119721},\n    'Ratanpura, Rupnagar - Ambuja Cements': {   'lat': 31.0293638,\n                                                'lng': 76.5733862},\n    'Rishi Nagar, Kaithal - HSPCB': {   'lat': 29.8029465,\n                                        'lng': 76.41436639999999},\n    'Rohini, Delhi - DPCC': {'lat': 28.73826769999999, 'lng': 77.0822151},\n    'SFTI Kusdihra, Gaya - BSPCB': {'lat': 24.7625227, 'lng': 84.9804538},\n    'SIDCO Kurichi, Coimbatore - TNPCB': {'lat': 10.9438095, 'lng': 76.9772675},\n    'Sahilara, Maihar - KJS Cements': {   'lat': 24.2609738,\n                                          'lng': 80.71866969999999},\n    'Samanpura, Patna - BSPCB': {'lat': 25.6074609, 'lng': 85.08456749999999},\n    'Sanathnagar, Hyderabad - TSPCB': {'lat': 17.4562544, 'lng': 78.4439295},\n    'Sanegurava Halli, Bengaluru - KSPCB': {   'lat': 12.9715987,\n                                               'lng': 77.5945627},\n    'Sanjay Nagar, Ghaziabad - UPPCB': {'lat': 28.6939957, 'lng': 77.4549679},\n    'Sanjay Palace, Agra - UPPCB': {'lat': 27.1986569, 'lng': 78.0059814},\n    'Secretariat, Amaravati - APPCB': {'lat': 16.5045615, 'lng': 80.5235168},\n    'Sector - 125, Noida - UPPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector - 62, Noida - IMD': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector 11, Faridabad - HSPCB': {'lat': 28.3704165, 'lng': 77.3220128},\n    'Sector 30, Faridabad - HSPCB': {'lat': 28.4425186, 'lng': 77.3223915},\n    'Sector- 16A, Faridabad - HSPCB': {   'lat': 36.18213,\n                                          'lng': -95.78742079999999},\n    'Sector-1, Noida - UPPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-10, Gandhinagar - GPCB': {   'lat': 36.18213,\n                                         'lng': -95.78742079999999},\n    'Sector-116, Noida - UPPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-12, Karnal - HSPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-18, Panipat - HSPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-2 IMT, Manesar - HSPCB': {   'lat': 36.18213,\n                                         'lng': -95.78742079999999},\n    'Sector-2 Industrial Area, Pithampur - MPPCB': {   'lat': 36.18213,\n                                                       'lng': -95.78742079999999},\n    'Sector-25, Chandigarh - CPCC': {   'lat': 36.18213,\n                                        'lng': -95.78742079999999},\n    'Sector-51, Gurugram - HSPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-6, Panchkula - HSPCB': {'lat': 36.18213, 'lng': -95.78742079999999},\n    'Sector-7, Kurukshetra - HSPCB': {   'lat': 36.18213,\n                                         'lng': -95.78742079999999},\n    'Sector-D Industrial Area, Mandideep - MPPCB': {   'lat': 36.18213,\n                                                       'lng': -95.78742079999999},\n    'Shadipur, Delhi - CPCB': {'lat': 28.651027, 'lng': 77.1562196},\n    'Shasthri Nagar, Ratlam - IPCA Lab': {'lat': 23.3312468, 'lng': 75.0432032},\n    'Shastri Nagar, Jaipur - RSPCB': {'lat': 26.9503102, 'lng': 75.8009833},\n    'Shastri Nagar, Narnaul - HSPCB': {'lat': 28.0636597, 'lng': 76.1116997},\n    'Shrinath Puram, Kota - RSPCB': {'lat': 25.136387, 'lng': 75.8246657},\n    'Shrivastav Colony, Damoh - MPPCB': {'lat': 23.8184923, 'lng': 79.4338188},\n    'Shyam Nagar, Palwal - HSPCB': {   'lat': 28.1482612,\n                                       'lng': 77.33316040000001},\n    'Sidhu Kanhu Indoor Stadium, Durgapur - WBPCB': {   'lat': 23.5404352,\n                                                        'lng': 87.2914112},\n    'Sikulpuikawn, Aizawl - Mizoram PCB': {   'lat': 23.7173952,\n                                              'lng': 92.7181174},\n    'Silk Board, Bengaluru - KSPCB': {'lat': 12.9164812, 'lng': 77.6219055},\n    'Sion, Mumbai - MPCB': {'lat': 19.0390214, 'lng': 72.86189519999999},\n    'Sirifort, Delhi - CPCB': {'lat': 28.5505827, 'lng': 77.214799},\n    'Solapur, Solapur - MPCB': {'lat': 17.6599188, 'lng': 75.9063906},\n    'Sonia Vihar, Delhi - DPCC': {'lat': 28.7332472, 'lng': 77.2495891},\n    'Sri Aurobindo Marg, Delhi - DPCC': {'lat': 28.5563099, 'lng': 77.2063378},\n    'T T Nagar, Bhopal - MPPCB': {'lat': 23.2357524, 'lng': 77.39864709999999},\n    'Talcher Coalfields,Talcher - OSPCB': {'lat': 20.9501027, 'lng': 85.216816},\n    'Talkatora District Industries Center, Lucknow - CPCB': {   'lat': 26.8332171,\n                                                                'lng': 80.8965834},\n    'Tata Stadium, Jorapokhar - JSPCB': {'lat': 23.7082799, 'lng': 86.4127228},\n    'Teri Gram, Gurugram - HSPCB': {   'lat': 28.4275348,\n                                       'lng': 77.14645829999999},\n    'Thavakkara, Kannur - Kerala PCB': {   'lat': 11.8701516,\n                                           'lng': 75.36905949999999},\n    'Tirumala, Tirupati - APPCB': {'lat': 13.6807357, 'lng': 79.3508975},\n    'Udyogamandal, Eloor - Kerala PCB': {'lat': 10.0737878, 'lng': 76.3014896},\n    'Urban Estate-II, Hisar - HSPCB': {   'lat': 41.885003,\n                                          'lng': -87.61686399999999},\n    'Urban, Chamarajanagar - KSPCB': {'lat': 11.9271328, 'lng': 76.9326167},\n    'Vasai West, Mumbai - MPCB': {'lat': 19.3664631, 'lng': 72.8155136},\n    'Vasundhara, Ghaziabad - UPPCB': {'lat': 28.6623758, 'lng': 77.37344},\n    'Velachery Res. Area, Chennai - CPCB': {   'lat': 12.9517854,\n                                               'lng': 80.2112303},\n    'Victoria, Kolkata - WBPCB': {'lat': 22.5448082, 'lng': 88.3425578},\n    'Vidayagiri, Bagalkot - KSPCB': {'lat': 16.1756049, 'lng': 75.6586295},\n    'Vijay Nagar, Ramanagara - KSPCB': {   'lat': 12.7324268,\n                                           'lng': 77.29022660000001},\n    'Vikas Sadan, Gurugram - HSPCB': {   'lat': 28.4501238,\n                                         'lng': 77.02849379999999},\n    'Vile Parle West, Mumbai - MPCB': {'lat': 19.1071283, 'lng': 72.8367535},\n    'Vindhyachal STPS, Singrauli - MPPCB': {   'lat': 24.0886334,\n                                               'lng': 82.6477523},\n    'Vivek Vihar, Delhi - DPCC': {'lat': 28.6712458, 'lng': 77.3176541},\n    'Vyttila, Kochi - Kerala PCB': {'lat': 9.968199, 'lng': 76.3182346},\n    'Ward-32 Bapupara, Siliguri - WBPCB': {   'lat': 37.123889,\n                                              'lng': -95.80261019999999},\n    'Wazirpur, Delhi - DPCC': {'lat': 28.69754439999999, 'lng': 77.1604397},\n    'Worli, Mumbai - MPCB': {'lat': 18.9986406, 'lng': 72.8173599},\n    'Yamunapuram, Bulandshahr - UPPCB': {'lat': 28.4088401, 'lng': 77.8295809},\n    'Zoo Park, Hyderabad - TSPCB': {'lat': 17.3537182, 'lng': 78.4399255}}","bade7c5d":"df_st['Latitude'] = df_st.apply(lambda x: get_coords(x['StationName'])[0],axis=1)\ndf_st['Longitude'] = df_st.apply(lambda x: get_coords(x['StationName'])[1],axis=1)\ndf_st.Status.fillna('NA',inplace=True)\npx.set_mapbox_access_token(secret_value_1)\nfig = px.scatter_mapbox(df_st,\n                        lat=\"Latitude\",\n                        lon=\"Longitude\",\n                        color='Status',\n                        color_discrete_sequence=['rgb(119, 221, 119)','rgb(254, 107, 100)','rgb(119, 158, 203)'],\n                        mapbox_style='carto-positron',\n                        hover_name='StationId',\n                        center={\"lat\": 20.5937, \"lon\": 78.9629},\n                        zoom=3.5,\n                        hover_data=['StationName','City','State'],\n                        title= 'AQI Stations in India',\n#                         width = 300,\n#                         height = 500\n                       )\nfig.update_geos(fitbounds=\"locations\", visible=True)\nfig.update_geos(projection_type=\"orthographic\")\nfig.update_layout(height=500,width=500,margin=dict(l=20,r=20,t=40,b=20), paper_bgcolor=BGCOLOR)\nfig.update_layout(\n    legend=dict(\n        x=0,\n        y=1,\n        traceorder=\"normal\",\n        font=dict(\n            family=\"sans-serif\",\n            size=12,\n            color=\"black\"\n        ),\n        bgcolor=\"LightSteelBlue\",\n        bordercolor=\"Black\",\n        borderwidth=0\n    )\n)\nfig.show()","1ba20e98":"group = df_st.groupby(['State','Status'],as_index=False)['StationId'].count()\ngroup.sort_values(['StationId'],inplace=True,ascending=False)\nfig = go.Figure()\nactive = group[group['Status']=='Active']\nfig.add_trace(go.Bar(x=active.State,y=active.StationId,name='Active',\n                     marker_color='rgb(119, 221, 119)',\n                     marker_line_color='black',\n                     marker_line_width=1.5, \n                     opacity=0.9\n                    ))\nna = group[group['Status']=='NA']\nfig.add_trace(go.Bar(x=na.State,y=na.StationId,name='NA',\n                     marker_color='rgb(119, 158, 203)',\n                     marker_line_color='black',\n                     marker_line_width=1.5, \n                     opacity=0.9\n                    ))\ninactive = group[group['Status']=='Inactive']\nfig.add_trace(go.Bar(x=inactive.State,y=inactive.StationId,name='Inactive',\n                     marker_color='rgb(254, 107, 100)',\n                     marker_line_color='black',\n                     marker_line_width=1.5, \n                     opacity=0.9\n                    ))\nfig.update_xaxes(showgrid=False)\nfig.update_layout(height=300,template='ggplot2',barmode='stack',title='AQI Stations per City',\n                  hovermode='x',\n                  paper_bgcolor=BGCOLOR,plot_bgcolor='lightgray',margin=dict(l=20,r=20,t=40,b=20))\nfig.show()","9c812db6":"df_ind = df_sd.copy()\ndf_ind['Date'] = pd.to_datetime(df_ind['Date'],format='%Y-%m-%d')\ndf_ind['Period'] = df_ind.apply(lambda x: 'Before' if (x['Date'] < dt.datetime(2020, 3, 23)) else 'After',axis=1)\ndf_ind = df_ind.query('Date>=\"2020-01-01\"')\ndf_ind = df_ind.groupby(['Period','StationId'],as_index=False)['AQI','PM2.5','PM10','O3','CO','SO2','NO2'].mean()\ndf_ind = df_ind.merge(df_st[['StationId','StationName','State','Latitude','Longitude']],how='inner',on='StationId')","944e35e1":"def scale(aqiSeries):\n    cmax = aqiSeries.max()\n    cmin = aqiSeries.min()\n    dt = 1e-5\n    good = min((50-cmin)\/(cmax-cmin)+dt,1.0)\n    satisfactory = min((100-cmin)\/(cmax-cmin)+dt,1.0)\n    moderate = min((200-cmin)\/(cmax-cmin)+dt,1.0)\n    poor = min((300-cmin)\/(cmax-cmin)+dt,1.0)\n    very_poor = min((400-cmin)\/(cmax-cmin)+dt,1.0)\n    severe = min((500-cmin)\/(cmax-cmin)+dt,1.0)\n\n    colorcode = [good,satisfactory,moderate,poor,very_poor,severe]\n    colorcode = [0.0 if c<0 else c for c in colorcode]\n    colors = ['#77DD77','#33AF13','#F6D20E','#F17700','#FE6B64','#F12424']\n    scl = []\n    prev = 0\n    for i in range(len(colorcode)):\n        scl.extend([[prev,colors[i]],[colorcode[i],colors[i]]])\n        prev=colorcode[i]\n        if colorcode[i]==1.0: break\n    if scl[-1][0]!=1.0:\n        scl[-1][0]=1.0\n    \n    return scl","1387f9ee":"dict_center_zoom={\n    'India':[(20.5937,78.9629),2.5],\n    'Bengaluru':[(12.9716,77.5946),9],\n    'Delhi':[(28.7041,77.1025),8],\n    'Mumbai':[(19.0760,72.8777),8],\n    'Hyderabad':[(17.3850,78.4867),8],\n    'Chennai':[(13.0827,80.2707),9]\n}\n\ndef draw_aqi_map(df,city):\n    if city=='India':\n        df0 = df\n    else:\n        if city=='Bengaluru':\n            state='Karnataka'\n        elif city=='Mumbai':\n            state='Maharashtra'\n        elif city=='Hyderabad':\n            state='Telangana'\n        elif city=='Chennai':\n            state='Tamil Nadu'\n        else:\n            state=city\n        df0 = df[df['State']==state]\n    \n\n    fig = go.Figure()\n\n    df1=df0[df0['Period']=='Before']\n    fig.add_trace(go.Scattermapbox(name='Before Lockdown',\n        lat=df1.Latitude,\n        lon=df1.Longitude,\n        mode='markers',\n        marker=go.scattermapbox.Marker(\n            size=17,\n            color=df1.AQI,\n            colorscale=scale(df1.AQI),\n            opacity=0.7\n        ),\n        text=df1.StationId.astype(str)+'<br><b>Station<\/b>: '+df1.StationName+'<br><b>AQI<\/b>: '+np.round(df1.AQI).astype(str),\n        hoverinfo='text',\n        subplot='mapbox'\n    ))\n\n    df2=df0[df0['Period']=='After']\n    fig.add_trace(go.Scattermapbox(name='After Lockdown',\n        lat=df2.Latitude,\n        lon=df2.Longitude,\n        mode='markers',\n        marker=go.scattermapbox.Marker(\n            size=17,\n            color=df2.AQI,\n            colorscale=scale(df2.AQI),\n            opacity=0.7\n        ),\n        text=df2.StationId.astype(str)+'<br><b>Station<\/b>: '+df2.StationName+'<br><b>AQI<\/b>: '+np.round(df2.AQI).astype(str),\n        hoverinfo='text',\n        subplot='mapbox2'\n    ))\n\n    fig.update_layout(\n        height=300,width=600,\n        title=city + ': Before & After Lockdown',\n        paper_bgcolor=BGCOLOR,\n        margin=dict(l=20,r=20,t=40,b=20),\n        showlegend=False,\n        autosize=True,\n        hovermode='closest',\n        mapbox=dict(accesstoken=secret_value_1,\n            style='carto-positron',\n            domain={'x': [0, 0.48], 'y': [0, 1]},\n                bearing=0,\n                center=dict(\n                lat=dict_center_zoom[city][0][0],\n                lon=dict_center_zoom[city][0][1]\n            ),\n        pitch=0,\n        zoom=dict_center_zoom[city][1]\n        ),\n        mapbox2=dict(accesstoken=secret_value_1,\n            style='carto-positron',\n            domain={'x': [0.52, 1.0], 'y': [0, 1]},\n            bearing=0,\n            center=dict(\n                lat=dict_center_zoom[city][0][0],\n                lon=dict_center_zoom[city][0][1]\n            ),\n            pitch=0,\n            zoom=dict_center_zoom[city][1],\n        ),\n    )\n    return fig","e5803845":"draw_aqi_map(df_ind,'India')","29fd3a98":"draw_aqi_map(df_ind,'Delhi')","5f9ea404":"draw_aqi_map(df_ind,'Bengaluru')","1cdd65ab":"draw_aqi_map(df_ind,'Mumbai')","0df069fe":"draw_aqi_map(df_ind,'Hyderabad')","9edd6a07":"draw_aqi_map(df_ind,'Chennai')","7f91c9d0":"df_temp_all = pd.read_csv('\/kaggle\/input\/daily-temperature-of-major-cities\/city_temperature.csv')\ndf_temp = df_temp_all[df_temp_all['Country']=='India']\n#Rename some values\ndf_temp.loc[df_temp['City']=='Bombay (Mumbai)','City']='Mumbai'\ndf_temp.loc[df_temp['City']=='Calcutta','City']='Kolkata'\ndf_temp.loc[df_temp['City']=='Chennai (Madras)','City']='Chennai'\n#Create a date column\ndf_temp['Date']=df_temp.apply(lambda x: str(dt.date(x.Year,x.Month,x.Day)),axis=1)\n#Convert from fahrenheit to celsius (\u00b0F - 32) x 5\/9 = \u00b0C \ndf_temp['AvgTemperature'] = df_temp['AvgTemperature'].apply(lambda x: np.round(((x-32)*5)\/9))\ndf_temp = df_temp[['Date','City','AvgTemperature']]\ndf_temp.rename(columns={'AvgTemperature':'Temp'},inplace=True)\n#Merge the data\ndf_metro = pd.merge(df_cd,df_temp,how='inner',on=['City','Date'])\ndf_metro = df_metro[['City','Date','PM2.5','PM10','O3','NO2','SO2','CO','Temp']]\ndf_metro = df_metro.melt(id_vars=['City','Date'], var_name='Metric', value_name='Value')\ndf_metro.columns.name=''\ndf_metro.loc[df_metro['Value']==-73,'Value'] = np.float('nan')","f09406ae":"fig = go.Figure()\ncities=df_metro.City.unique()\nmetric_color={\n    'PM2.5':'rgb(66, 133, 244)',\n    'PM10':'rgb(234, 67, 53)',\n    'O3':'rgb(173, 100, 100)',\n    'NO2':'rgb(110, 27, 9)',\n    'SO2':'rgb(57, 58, 60)',\n    'CO':'rgb(240, 114, 73)',\n    'Temp':'rgb(52, 168, 83)'\n}\n#create the dropdown\nbuttons=[]\nmetrics = ['Temp','CO','SO2','NO2','O3','PM10','PM2.5']\nfor i,city in enumerate(cities):\n    if i == 0:\n        visible=True\n    else:\n        visible=False\n    group_city = df_metro[df_metro['City']==city]\n    for idx,metric in enumerate(metrics):\n        group_city_metric = group_city[group_city['Metric']==metric]\n        fig.add_trace(go.Scatter(name=metric,\n                                 x=group_city_metric['Date'],\n                                 y=group_city_metric['Value'],\n                                 fill='tozeroy',\n                                 visible=visible,\n                                 line_color=metric_color[metric],\n                                 yaxis='y'+str(idx+1) if idx+1!=1 else 'y'))\n    dic = dict(label='',\n               method=\"update\",\n               args=[{\"visible\": [False]*len(cities)},{\"title\": ''}])\n    dic['label']=city\n    dic['args'][0]['visible'][i] = True\n    dic['args'][1]['title'] = 'Condition of '+city\n    buttons.append(dic)\nfig.update_layout(paper_bgcolor=BGCOLOR,plot_bgcolor='lightgray',\n                      updatemenus=[dict(\n                          active=0,\n                          bgcolor='rgb(250, 250, 255)',\n                          buttons=buttons,\n                      )])\nfig.update_layout(\n        xaxis=dict(\n        #autorange=True,\n        range = ['2015-01-01','2020-05-01'],\n        rangeselector=dict(\n            buttons=list([\n                dict(count=1,\n                     label=\"1m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(count=6,\n                     label=\"6m\",\n                     step=\"month\",\n                     stepmode=\"backward\"),\n                dict(count=1,\n                     label=\"YTD\",\n                     step=\"year\",\n                     stepmode=\"todate\"),\n                dict(count=1,\n                     label=\"1y\",\n                     step=\"year\",\n                     stepmode=\"backward\"),\n                dict(count=2,\n                     label=\"2y\",\n                     step=\"year\",\n                     stepmode=\"backward\"),\n                dict(count=3,\n                     label=\"3y\",\n                     step=\"year\",\n                     stepmode=\"backward\"),\n                dict(count=4,\n                     label=\"4y\",\n                     step=\"year\",\n                     stepmode=\"backward\"),\n                dict(step=\"all\")\n            ])\n        ),\n        rangeslider=dict(\n            autorange=True,\n        ),\n        type=\"date\"\n    ),\n    yaxis=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[0:2],\n        mirror=True,\n        showline=True,\n        side=\"right\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks=\"\",\n        title='Temp.',\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=False\n    ),\n    yaxis2=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[1:3],\n        mirror=True,\n        showline=True,\n        side=\"left\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks=\"\",\n        title = 'CO',\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=False\n    ),\n    yaxis3=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[2:4],\n        mirror=True,\n        showline=True,\n        side=\"right\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks='',\n        title=\"SO2\",\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=False\n    ),\n    yaxis4=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[3:5],\n        mirror=True,\n        showline=True,\n        side=\"left\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks='',\n        title=\"NO2\",\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=True\n    ),\n    yaxis5=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[4:6],\n        mirror=True,\n        showline=True,\n        side=\"right\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks='',\n        title=\"O3\",\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=True\n    ),\n    yaxis6=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[5:7],\n        mirror=True,\n        showline=True,\n        side=\"left\",\n        tickfont={\"size\":10},\n        tickmode=\"auto\",\n        ticks='',\n        title=\"PM10\",\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=True\n    ),\n    yaxis7=dict(\n        anchor=\"x\",\n        autorange=True,\n        domain=np.linspace(0,1,8).tolist()[6:8],\n        mirror=True,\n        showline=True,\n        side=\"right\",\n        tickfont={\"size\":10},\n        tickmode='array',\n        ticks='',\n        title=\"PM2.5\",\n        titlefont={\"size\":20},\n        type=\"linear\",\n        zeroline=True\n    )\n    )\nfig.update_layout(margin=dict(l=20,r=20,t=70,b=20),template='seaborn', \n                  title='Condition of Chennai',showlegend=False)\nfig.show()","c2c5e692":"def build_city_plot(city):\n    df = df_cd[df_cd['City']==city]\n    fig = go.Figure()\n    cols = ['PM2.5', 'PM10', 'NO', 'NO2', 'NOx', 'NH3', 'CO', 'SO2','O3', 'Benzene', 'Toluene', 'Xylene', 'AQI']\n    buttons = []\n    for idx,col in enumerate(cols): \n        fig.add_trace(go.Scatter(name=col,x=df['Date'],y=df[col]))\n        dic = dict(label='',\n                   method=\"update\",\n                   args=[{\"visible\": [False]*len(cols)},{\"title\": ''}])\n        dic['label']=col\n        dic['args'][0]['visible'][idx] = True\n        dic['args'][1]['title'] = city +' ('+col+')'\n        buttons.append(dic)\n\n    #Add one case to display all the metrics at once\n    all_params = dict(label='All',\n                      method=\"update\",\n                      args=[{\"visible\": [True]*len(cols)},{\"title\": city +' (All)'}])\n    buttons.append(all_params)\n\n    fig.update_layout(paper_bgcolor=BGCOLOR,\n                      updatemenus=[dict(\n                          active=13,\n                          bgcolor='rgb(31, 119, 180)',\n                          buttons=buttons,\n                          direction='right',\n                          font=dict(color='black')\n                      )])\n    fig.update_xaxes(rangeslider_visible=True,\n                 rangeselector=dict(buttons=list([\n            dict(count=1, label=\"1m\", step=\"month\", stepmode=\"backward\",),\n            dict(count=6, label=\"6m\", step=\"month\", stepmode=\"backward\"),\n            dict(count=1, label=\"YTD\", step=\"year\", stepmode=\"todate\"),\n            dict(count=1, label=\"1y\", step=\"year\", stepmode=\"backward\"),\n            dict(step=\"all\")\n        ]),bgcolor='rgb(31, 119, 180)',font=dict(color='black')))\n    fig.update_layout(title= city+' (All)',height=500,margin=dict(b=20))\n    fig.show()","bb6aeb4b":"def build_calmap(df,city=''):\n    if city:\n        df = df[df['City']==city]\n    else:\n        city = 'India'\n    df.drop(df[pd.isnull(df['AQI'])].index,axis=0,inplace=True)\n    df['Date'] = pd.to_datetime(df['Date'],format='%Y-%m-%d')\n    df['Year'] = df.Date.dt.year\n    df['Day'] = df.Date.dt.day_name()\n    df['Week'] = df.Date.dt.week\n    df['avg_AQI'] = df.groupby(['Year','Week','Day'])['AQI'].transform('mean')\n    years = df.Year.unique().tolist()\n    fig = make_subplots(rows=len(years),cols=1,shared_xaxes=True, vertical_spacing=0.005)\n    r = 1\n    for year in years:\n        df_year = df[df['Year']==year]\n        fig.add_trace(go.Heatmap(\n            name=year,\n            z=df_year['avg_AQI'],\n            x=df_year.Week,\n            y=df_year.Day,\n            coloraxis = 'coloraxis'\n        ),r,1)\n        fig.update_yaxes(title_text=year,tickfont=dict(size=5),row=r,col=1)\n        r+=1\n    fig.update_xaxes(range=[0,53],tickfont=dict(size=10), nticks=53)\n    fig.update_layout(coloraxis = {'colorscale':scale(df['avg_AQI'])})\n    fig.update_layout(paper_bgcolor=BGCOLOR,plot_bgcolor='lightgrey',title='<b>'+city+'<\/b>' + ': Variation of AQI over the years',\n                      margin=dict(t=35, b=20))\n    return fig","79f4a783":"fig = build_calmap(df_cd)\nfig.show()","6c98783f":"fig = build_calmap(df_cd,city='Delhi')\nfig.show()","a6bda2fc":"fig = build_calmap(df_cd,city='Bengaluru')\nfig.show()","1e2d0ddb":"fig = build_calmap(df_cd,city='Chennai')\nfig.show()","b806d654":"fig = build_calmap(df_cd,city='Mumbai')\nfig.show()","1de9c976":"fig = build_calmap(df_cd,city='Kolkata')\nfig.show()","18201873":"def build_calmap_month(df,city=''):\n    if city:\n        df = df[df['City']==city]\n    else:\n        city = 'India'\n    df.drop(df[pd.isnull(df['AQI'])].index,axis=0,inplace=True)\n    df['Date'] = pd.to_datetime(df['Date'],format='%Y-%m-%d')\n    df['Year'] = df.Date.dt.year\n    df['Month'] = df.Date.dt.month_name()\n    df['Day'] = df.Date.dt.day\n    df['avg_AQI'] = df.groupby(['Year','Month','Day'])['AQI'].transform('mean')\n    years = df.Year.unique().tolist()\n    fig = make_subplots(rows=len(years),cols=1,shared_xaxes=True, vertical_spacing=0.005)\n    r = 1\n    for year in years:\n        df_year = df[df['Year']==year]\n        fig.add_trace(go.Heatmap(\n            z=df_year['avg_AQI'],\n            x=df_year.Day,\n            y=df_year.Month,\n            coloraxis = 'coloraxis'\n        ),r,1)\n        fig.update_yaxes(title_text=year,tickfont=dict(size=5),row=r,col=1)\n        r+=1\n    fig.update_xaxes(range=[0,31],tickfont=dict(size=10), nticks=31)\n    fig.update_layout(coloraxis = {'colorscale':scale(df['avg_AQI'])})\n    fig.update_layout(paper_bgcolor=BGCOLOR,plot_bgcolor='lightgrey',title='<b>'+city+'<\/b>' + ': Variation of AQI monthly over the years',\n                      margin=dict(t=35, b=20))\n    return fig","4b575246":"fig = build_calmap_month(df_cd)\nfig.show()","5afa3a6e":"fig = build_calmap_month(df_cd,'Delhi')\nfig.show()","a3b458a1":"fig = build_calmap_month(df_cd,'Bengaluru')\nfig.show()","cbc0401a":"fig = build_calmap_month(df_cd,'Chennai')\nfig.show()","d183eafb":"fig = build_calmap_month(df_cd,'Mumbai')\nfig.show()","1d23aa6b":"fig = build_calmap_month(df_cd,'Kolkata')\nfig.show()","b36b31d5":"def build_calmap_hourly(df,city=''):\n    if city:\n        df = df[df['City']==city]\n    else:\n        city = 'India'\n    df.drop(df[pd.isnull(df['AQI'])].index,axis=0,inplace=True)\n    df['Datetime'] = pd.to_datetime(df['Datetime'])\n    df['Year'] = df.Datetime.dt.year\n    df['Hour'] = df.Datetime.dt.hour\n    df['Dayofyear'] = df.Datetime.dt.dayofyear\n    df['avg_AQI'] = df.groupby(['Year','Dayofyear','Hour'])['AQI'].transform('mean')\n    years = df.Year.unique().tolist()\n    fig = make_subplots(rows=len(years),cols=1,shared_xaxes=True, vertical_spacing=0.005)\n    r = 1\n    for year in years:\n        df_year = df[df['Year']==year]\n        fig.add_trace(go.Heatmap(\n            z=df_year['avg_AQI'],\n            x=df_year.Dayofyear,\n            y=df_year.Hour,\n            coloraxis = 'coloraxis'\n        ),r,1)\n        fig.update_yaxes(range=[0,23], nticks=12,title_text=year,tickfont=dict(size=5),row=r,col=1)\n        r+=1\n    fig.update_xaxes(range=[0,366],tickfont=dict(size=5), nticks=180)\n    fig.update_layout(coloraxis = {'colorscale':scale(df['avg_AQI'])})\n    fig.update_layout(paper_bgcolor=BGCOLOR,plot_bgcolor='lightgrey',title='<b>'+city+'<\/b>' + ': Variation of AQI monthly over the years',\n                      margin=dict(t=35, b=20))\n    return fig","7d121735":"fig=build_calmap_hourly(df_ch)\nfig.show()","f822a53a":"fig=build_calmap_hourly(df_ch,'Delhi')\nfig.show()","c3bd378e":"fig=build_calmap_hourly(df_ch,'Bengaluru')\nfig.show()","e3cdff76":"fig=build_calmap_hourly(df_ch,'Chennai')\nfig.show()","f1401a92":"fig=build_calmap_hourly(df_ch,'Mumbai')\nfig.show()","0507a842":"fig=build_calmap_hourly(df_ch,'Kolkata')\nfig.show()","85bcadb3":"- Delhi is in a spot of bother. The air quality is poor or very poor with patches of severe air quality throughout the year.\n- Looks like Delhites enjoy moderate air quality in the summers and rainy season. But most of it is poor only.","15f4aa39":"# <a id='metro'>4. Condition of Metropolitans<\/a>\nLet's study the Air Quality among major cities of India. I am using area plots to show the data from year 2015-2020 for all the major pollutants along with the temperature. The plot contain a dropdown to toggle between the metroplitans of India. The default setting is for Chennai. Also, a time slider and a range selector is added for convenience.","93ff52c6":"<a id=\"h\" class=\"btn btn-primary btn-lg btn-block active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Hourly<\/a>\n<a href='#year'><span class=\"label label-info\">Go back<\/span><\/a>\n\nThis section will show yearly analysis of India and other major cities on a monthly basis. By looking at the heatmap you can get to know what was the average AQI on that hour of the day for a particular year. Also, pay attention to the colour scheme. It's same throughout this notebook.","d38316ea":"# <a id='year'>5. Yearly Analysis<\/a>\nIn this yearly analysis section, I will be using heatmaps to showcase the AQI trend accross the major cities in India. The same code can be used to analyse it for other cities as well. But, I'm only showing it for India as a whole, Delhi, Bengaluru, Mumbai, Chennai and Kolkata. The yearly analysis is further broken down into daily, monthly and hourly analysis.\n\n<a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#d\" role=\"tab\" aria-controls=\"profile\">Daily<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#m\" role=\"tab\" aria-controls=\"messages\">Monthly<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\"  data-toggle=\"list\" href=\"#h\" role=\"tab\" aria-controls=\"settings\">Hourly<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n<br>","7d184e8c":">A little bit of improvement in Hyderabad. But, the air quality was already pretty good.","de718eb0":"Let's see how much impact the lockdown has had in my hometown.","20ef3787":"Looks like cities on the coast are doing fine with respect to air quality. Good air quality here can be attributed to the strong sea breeze which helps to move the particulate matter.","d96c68be":"> In the below analysis for various time granularities, I have used the same colorscale as for AQI to make it look more real.You can hover on the plot to know the exact avg. AQI for that particular year, month, week, day, e.t.c.","c25b0ef3":"> The air quality in Bangalore was already pretty good before the lockdown but after the lockdown, it has also shown some improvement.","de691f65":"<a id=\"m\" class=\"btn btn-primary btn-lg btn-block active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Monthly<\/a>\n<a href='#year'><span class=\"label label-info\">Go back<\/span><\/a>\n\nThis section will show yearly analysis of India and other major cities on a monthly basis. By looking at the heatmap you can get to know what was the average AQI on that day of the month for a particular year. Also, pay attention to the colour scheme. It's same throughout this notebook.","04e780a1":"# <a id='covid'>3. Impact of Coronavirus on India's AQI<\/a>\nThe first ever nationwide lockdown to curb the spread of coronavirus was imposed from 23rd March. A lockdown restricts or almost stops the movement of people i.e they have to stay in their houses and can come out only to purchase essential items, which meant almost 0 movement of vehicles, restricted movements of trucks, no construction, no industries running or no construction. So, all the things that contribute to pollution were put to a full stop. As a result, the environment starts to heal.\n\n<img src='https:\/\/static.boredpanda.com\/blog\/wp-content\/uploads\/2020\/04\/pollution-india-gate-new-delhi-coronavirus-lockdown-coverimage.png' width=500 height=300\/>","e30fbe73":"# <a id='stat'>2. AQI Stations in India<\/a>\nThe Air Quality Index is based on measurement of particulate matter (PM2.5 and PM10), Ozone (O3), Nitrogen Dioxide (NO2), Sulfur Dioxide (SO2) and Carbon Monoxide (CO) emissions. Most of the stations on the map are monitoring both PM2.5 and PM10 data, but there are few exceptions where only PM10 is available.","01c034f5":"Through the below plot, I'll try to analyse that if the air quality has really improved beacuse of the lockdown. Left part of the plot will show the *Before Lockdown* Scenario and the right part will show the *After Lockdown* Scenario. The colorscale used is in accordance with the standard Indian AQI calculation scale.\n\n> - **Before Lockdown** - Avg. AQI from 1st January till 22nd March \n- **After Lockdown** - Avg. AQI from 23rd March","d4be5356":"> Quite an improvement in Mumbai. See the transition from almost all yellows to all greens. That's substantial!","2cc35f62":"> Wow!! As you can see from the above plot, the lockdown has worked wonders to reduce the pollution in Delhi. Also, the air quality improves in summers a bit, but this is something substantial.\n\nLet's see how other major cities are faring such as Bengaluru, Mumbai, Hyderabad and Chennai.","aec6fffe":"- India's average air quality is pretty bad throughout the year. Just a few patches of greens meaning just a small proportion of days having satisfactory air quality.\n- Air quality is better in the summers as compared to the winters.\n- India has moderate air quality throughout the year. Yellow patches tell the story.","1dc908ec":"Chennai is not bad either. Chennai people also enjoy fresh air throughout the year. Looks like a close second to Bengaluru","403bdd93":"**I will be using the same colour codes as in the above table for all the graphs in this kernel for showing AQI levels.**","17383e67":"\n## Analysing India's air quality using Plotly\n<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n  <h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\"  role=\"tab\" aria-controls=\"home\">Table of Contents<\/h3>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#aqi\" role=\"tab\" aria-controls=\"profile\">What is AQI?<span class=\"badge badge-primary badge-pill\">1<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#stat\" role=\"tab\" aria-controls=\"messages\">AQI Stations in India<span class=\"badge badge-primary badge-pill\">2<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\"  data-toggle=\"list\" href=\"#covid\" role=\"tab\" aria-controls=\"settings\">Impact of Coronavirus on India's AQI<span class=\"badge badge-primary badge-pill\">3<\/span><\/a>\n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#metro\" role=\"tab\" aria-controls=\"settings\">Condition of Metropolitans<span class=\"badge badge-primary badge-pill\">4<\/span><\/a> \n  <a class=\"list-group-item list-group-item-action\" data-toggle=\"list\" href=\"#year\" role=\"tab\" aria-controls=\"settings\">Yearly Analysis<span class=\"badge badge-primary badge-pill\">5<\/span><\/a>","3669f814":"> Not many AQI stations in Chennai but still the air quality is almost perfect after the lockdown. Not that it was bad before the lockdown but still an improvement :p.","f110ed24":"> It's apparant that the lockdown has worked in favour of reducing the air pollution in India as Air Quality is at most \"Satisfactory\" level across all the measuring stations.","3b68a620":"# Thanks for reading this far. Do consider leaving an upvote in case you liked my work :) ","cf967a66":"# <a id='aqi'>1. What is AQI?<\/a>\n<img src='https:\/\/media.giphy.com\/media\/b5xDLakZRxJ6M\/giphy.gif' width=500px height=300px>\n\nThink of the AQI as a yardstick that runs from 0 to 500. The higher the AQI value, the greater the level of air pollution and the greater the health concern. For example, an AQI value of 50 or below represents good air quality, while an AQI value over 300 represents hazardous air quality.\n\nFor each pollutant an AQI value of 100 generally corresponds to an ambient air concentration that equals the level of the short-term national ambient air quality standard for protection of public health. AQI values at or below 100 are generally thought of as satisfactory. When AQI values are above 100, air quality is unhealthy: at first for certain sensitive groups of people, then for everyone as AQI values get higher.\n\nThe AQI is divided into six categories. Each category corresponds to a different level of health concern. Each category also has a specific color. The color makes it easy for people to quickly determine whether air quality is reaching unhealthy levels in their communities.","7b338557":"Bengaluru Rocks!! Just take a look at the air quality. I think this city has the cleanest air in all of India.","8efebc5a":"Summers are just fine Kolkata. Winters are not that pleasent in terms of air quality.","ac6a0a56":"<a id=\"d\" class=\"btn btn-primary btn-lg btn-block active\" role=\"button\" aria-pressed=\"true\" style=\"color:white;\">Daily<\/a>\n<a href='#year'><span class=\"label label-info\">Go back<\/span><\/a>\n\nThis section will show yearly analysis of India and other major cities on a daily basis. By looking at the heatmap you can get to know what was the average AQI on that day of the week for a particular year. Also, pay attention to the colour scheme. It's same throughout this notebook."}}