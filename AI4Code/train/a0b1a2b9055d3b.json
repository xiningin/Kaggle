{"cell_type":{"ebcdd4e5":"code","fa15a766":"code","be761a45":"code","f52c137f":"code","2088c54d":"code","8b9c7e0d":"code","457ed778":"code","9498a2a9":"code","3280baef":"code","e4d2cd25":"code","1158fb23":"code","83ada517":"code","448bfbb2":"code","27620297":"markdown","730710aa":"markdown","ab69fb3c":"markdown","14983470":"markdown","4f53f771":"markdown","9b7c6e5a":"markdown","6033ac83":"markdown"},"source":{"ebcdd4e5":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolor = sns.color_palette()\n%matplotlib inline\nimport plotly.offline as py\nfrom plotly import tools\npy.init_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.express as px\npd.options.mode.chained_assignment = None\nimport datetime\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","fa15a766":"import string\nimport nltk\nfrom nltk.corpus import stopwords\n\ncovid_19_df = pd.read_csv(\"\/kaggle\/input\/covid19-in-india\/IndividualDetails.csv\")\n\ndef lower_text(text):\n    return text.lower()\n\ncovid_19_df['notes'] = covid_19_df['notes'].astype(str)\ncovid_19_df['notes'] = covid_19_df.apply(lambda x: lower_text(x['notes']),axis=1)\n\n\nindex_india = covid_19_df['notes'].value_counts().index\nvalues_india = covid_19_df['notes'].value_counts().values\n\ndata = {'index_india':index_india ,'values_india':values_india } \ndf = pd.DataFrame(data) \ndf = df.dropna()\ndf [df['values_india'] > 10]","be761a45":"def text_process(mess):\n    # Check characters to see if they are in punctuation\n    nopunc = [char for char in mess if char not in string.punctuation]\n    # Join the characters again to form the string.\n    nopunc = ''.join(nopunc)\n    # Now just remove any stopwords\n    return [word for word in nopunc.split() if word.lower() not in stopwords.words('english')]","f52c137f":"from nltk import FreqDist\ndf['index_india'] = df['index_india'].apply(text_process)\ncovid_19_df['notes'] = covid_19_df['notes'].apply(text_process)","2088c54d":"list_all_word = []\ndelhi_occur = 0\ntravel_occur = 0\ncontact_occur = 0\nawaited_occur = 0\nfor list_word, occur in zip(df['index_india'] , df['values_india']) :\n    for word_list in list_word :\n        if word_list == 'delhi':\n           #print(word_list)\n           #print(occur)  \n           delhi_occur = occur + delhi_occur\n        elif word_list == 'travelled':\n            travel_occur = occur + travel_occur\n        elif word_list == 'contact':\n            contact_occur = occur + contact_occur\n        elif word_list == 'awaited':\n            awaited_occur = occur + awaited_occur        \n        list_all_word.append(word_list)\n#print(delhi_occur)\n#print(travel_occur)\n#print(contact_occur)\n#print(awaited_occur)","8b9c7e0d":"list_all_word = []\nfor list_word in covid_19_df['notes'] :\n    for word_list in list_word :        \n        list_all_word.append(word_list)","457ed778":"reason = []\nreason_occr =[]\nfreq = FreqDist(list_all_word)\nfor x in freq :\n   reason.append(x)\n   reason_occr.append(freq[x])\n\ndata = {'reason':reason ,'reason_occr':reason_occr } \ndf_reason = pd.DataFrame(data)\ndf_reason = df_reason[df_reason['reason_occr'] > 50]\ndf_reason","9498a2a9":"fig = px.bar(df_reason.sort_values('reason_occr', ascending=False).sort_values('reason_occr', ascending=True), \n             x=\"reason_occr\", y=\"reason\", \n             title='Frequency of words in notes of Corona patients', \n             text='reason_occr', \n             orientation='h', \n             width=800, height=700, range_x = [0, max(df_reason['reason_occr'])])\nfig.update_traces(marker_color='#46cdfb', opacity=0.8, textposition='inside')\n\nfig.update_layout(plot_bgcolor='rgb(250, 242, 242)')\nfig.show()","3280baef":"#covid_19_df['detected_state'].value_counts()\ncovid_19_df['diagnosed_date'] = pd.to_datetime(covid_19_df['diagnosed_date'],format='%d\/%m\/%Y')\n\ncount_ss = 0\ncovid_19_df['no'] = 1\ncovid_19_df['Delhi_SS'] = 0\nfor list_word in covid_19_df['notes'] :\n   covid_19_df['Delhi_SS'][count_ss] = 0\n   for  word_list in list_word :\n        if word_list == 'delhi' :\n          covid_19_df['Delhi_SS'][count_ss] = 1\n   count_ss = count_ss + 1","e4d2cd25":"covid_19_df = covid_19_df[covid_19_df['diagnosed_date'] > '2020-02-27']\ncovid_19_df_ss = covid_19_df[covid_19_df['Delhi_SS'] == 1]","1158fb23":"def gen_xaxis(title):\n    \"\"\"\n    Creates the X Axis layout and title\n    \"\"\"\n    xaxis = dict(\n            title=title,\n            titlefont=dict(\n                color='#AAAAAA'\n            ),\n            showgrid=False,\n            color='#AAAAAA',\n            )\n    return xaxis\n\n\ndef gen_yaxis(title):\n    \"\"\"\n    Creates the Y Axis layout and title\n    \"\"\"\n    yaxis=dict(\n            title=title,\n            titlefont=dict(\n                color='#AAAAAA'\n            ),\n            showgrid=False,\n            color='#AAAAAA',\n            )\n    return yaxis\n\n\ndef gen_annotations(annot):\n    \"\"\"\n    Generates annotations to insert in the chart\n    \"\"\"\n    if annot is None:\n        return []\n    \n    annotations = []\n    # Adding labels\n    for d in annot:\n        annotations.append(dict(xref='paper', x=d['x'], y=d['y'],\n                           xanchor='left', yanchor='bottom',\n                           text= d['text'],\n                           font=dict(size=13,\n                           color=d['color']),\n                           showarrow=False))\n    return annotations","83ada517":"annotations = [{'x': \"2020-03-28\", 'y': 500, 'text': 'Overall Count','color': 'gray'},\n              {'x': \"2020-03-28\", 'y': 200, 'text': 'Contribution of superspread','color': 'mediumaquamarine'}]\n\ntitle_text = ['<b>Patient count per day with Contribution of Super Spreader <\/b>', 'Date', 'Count per day']","448bfbb2":"fig = go.Figure(data=[\n    go.Bar(name='Overall', x=covid_19_df['diagnosed_date'].value_counts().index, y=covid_19_df['diagnosed_date'].value_counts().values,marker={'color': 'gray'}),\n    go.Bar(name='Delhi Incident', x=covid_19_df_ss['diagnosed_date'].value_counts().index, y=covid_19_df_ss['diagnosed_date'].value_counts().values,marker={'color': 'mediumaquamarine'})\n])\n# Change the bar mode\n#fig.update_layout(barmode='group',showlegend=False,plot_bgcolor='rgb(240, 240, 240)',annotations = gen_annotations(annotations))\nfig.update_layout(barmode='group',\n                  showlegend=True,plot_bgcolor='rgb(240, 240, 240)',\n                  title='<b>Overall count of patient per day with Contribution from Delhi Incident<\/b>',\n                  xaxis=gen_xaxis('Date'),yaxis=gen_yaxis('Count per day'))\nfig.show()","27620297":"### As we see not all the notes follow same descirption so lets take help of NLP techniques and look for the frequency of the important words which appeared  in the notes of Patient data","730710aa":"#### Note:- In the next version I will cover which states are affected due this incident","ab69fb3c":"### We see Delhi religious meet contributed almost 20% to 30% from March 30 onwards and and this number may change as we are still waiting for description for patients who are found positive during this time.\n","14983470":"## Lets visualize the effect of Delhi religious meet on the Corona spread ","4f53f771":"\n<p><img src=\"https:\/\/cdn5.vectorstock.com\/i\/1000x1000\/71\/94\/social-cloud-infection-spread-concept-vector-19817194.jpg\" align=\"left\" height=\"200\" width=\"300\" margin=\"0 auto\" \/> <br> <br>As the coronavirus spreads and cases continues to rise scientists are concerned about super spreader making the pandemic even harder to control. Super spreader those who are corona postive can infect many other and can sabotage the efforts taken by any government to control the situation. In this article I will put focus on understanding the main reasons behind the spread of Coronavirus in India.<\/p>\n<br> <br>\n","9b7c6e5a":"1. Details awaited for around 900 patients. \n1. Around 500 cases are related to religious congregation which took place in Delhi and India saw a massive increase in number of cases after revealation of this event.\n1. Close to 500 cases related to foreign travel or related to travel within India. (I limited my analysis to words with frequency of 50).\n1. around 200 cases are related to contact transmission.","6033ac83":"### Lets use the Dataset '\/kaggle\/input\/covid19-in-india\/IndividualDetails.csv' which has notes on the each and every patient who were found to be corona postive."}}