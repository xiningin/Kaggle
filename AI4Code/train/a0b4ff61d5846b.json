{"cell_type":{"01fa947e":"code","ddcdebee":"code","bfb780a7":"code","4b5fcd20":"code","35901590":"code","0c42a7e3":"code","a79ed9d4":"code","0556ebed":"code","3a822483":"code","c32f084a":"code","cf42bae0":"code","7ae1f470":"code","83f91e96":"code","4bccefe2":"code","820160d0":"code","6a30c195":"code","6554745c":"code","fe5f591f":"code","57d7f477":"code","df87ec25":"code","f22eed9b":"code","b7be40ec":"code","da5d4a44":"code","f7298eb9":"code","2f60c1cb":"code","c9b73167":"code","838aeea3":"code","498429d5":"code","c1dbc379":"code","3422ee7b":"code","ac9443e0":"code","b69f7f0a":"code","4bf7928a":"code","1ce4e186":"code","a7c70949":"code","53b2a8a3":"code","d531ea7f":"code","4c896a78":"code","8177d42e":"code","a42f656f":"code","cdc9c013":"code","05731608":"code","13cb9022":"code","ca720845":"code","390451e8":"code","2bd7d4ee":"code","cff0e368":"code","ed0a354f":"code","bffcb68b":"code","a07e96c4":"code","4eb294cc":"code","c78b74f5":"code","7e9b1368":"code","75faa843":"code","dda8bfb3":"code","b6da1e8c":"code","9bb5314a":"code","47eb0b63":"code","46ec3d7d":"markdown","9e79fba5":"markdown","748fab12":"markdown","e975a9fa":"markdown","f8140b0d":"markdown","12514f17":"markdown","b3b102e6":"markdown","19a1d62d":"markdown","f259bc60":"markdown","a14bf101":"markdown","cf381d65":"markdown","ddd373c6":"markdown","b22c164e":"markdown","91c1d6cb":"markdown","8235d485":"markdown","1b19db6a":"markdown","e10b2ff8":"markdown","15c34ac1":"markdown","e63a7486":"markdown","2eb5365a":"markdown","216a539e":"markdown","7778c1b8":"markdown","0021dedb":"markdown","07049f07":"markdown","46bc1066":"markdown","64739b7c":"markdown","be4fcb89":"markdown","8777b2bf":"markdown","72d208c5":"markdown","46a2dffe":"markdown","04618174":"markdown","43d4cdf8":"markdown","592ef38d":"markdown","cec37547":"markdown","4666344a":"markdown","ba599f5f":"markdown","f7e76d19":"markdown","081fdadf":"markdown","d7c5e189":"markdown","7b6104b5":"markdown","9127b818":"markdown","f81b49ce":"markdown","aad2d885":"markdown","453ae817":"markdown","d5b5c92f":"markdown","1819e932":"markdown","e4d007a3":"markdown"},"source":{"01fa947e":"import numpy as np \nimport pandas as pd \nimport math\n\nimport matplotlib.pyplot as plt \nimport seaborn as sb\nfrom matplotlib import style\n# style.use('fivethirtyeight')\nstyle.use('ggplot')\n\nimport plotly.express as px\nimport plotly.graph_objects as go\n\nimport os ","ddcdebee":"DATADIR = '..\/input\/summer-products-and-sales-in-ecommerce-wish'\nos.listdir(DATADIR)","bfb780a7":"df = pd.read_csv(DATADIR + '\/summer-products-with-rating-and-performance_2020-08.csv')","4b5fcd20":"df.info()","35901590":"df.iloc[1]","0c42a7e3":"df.isna().sum()","a79ed9d4":"def plot_missing_data(df):\n    columns_with_null = df.columns[df.isna().sum() > 0]\n    null_pct = (df[columns_with_null].isna().sum() \/ df.shape[0]).sort_values(ascending=False) * 100\n    plt.figure(figsize=(8,6));\n    sb.barplot(y = null_pct.index, x = null_pct, orient='h')\n    plt.title('% Na values in dataframe by columns');","0556ebed":"plot_missing_data(df)","3a822483":"df['merchant_profile_picture'].value_counts()","c32f084a":"print(\"Unique values: \", df['has_urgency_banner'].unique())\nprint(\"Value counts: \", df['has_urgency_banner'].value_counts())","cf42bae0":"df['has_urgency_banner'] = df['has_urgency_banner'].replace(np.nan,0)\nprint(\"Unique values: \", df['has_urgency_banner'].unique())\nprint(\"Value counts: \", df['has_urgency_banner'].value_counts())","7ae1f470":"df['urgency_text'].unique()","83f91e96":"df['urgency_text']=df['urgency_text'].replace({'Quantit\u00e9 limit\u00e9e !':'QuantityLimited',\n                                               'R\u00e9duction sur les achats en gros':'WholesaleDiscount',\n                                               np.nan:'noText'})\nprint(df['urgency_text'][:5])\nprint(df['urgency_text'].value_counts())","4bccefe2":"rating_columns = ['rating_one_count','rating_two_count','rating_three_count','rating_four_count','rating_five_count']\ndf[rating_columns] = df[rating_columns].fillna(value=-1)","820160d0":"df.loc[df['rating_five_count']==-1,'rating_count'].value_counts()","6a30c195":"df[rating_columns]=df[rating_columns].replace(-1,0)","6554745c":"print(df['origin_country'].unique())\nprint(df['product_color'].unique())\nprint(df['product_variation_size_id'].unique())\nprint(df['merchant_name'].unique())\nprint(df['merchant_info_subtitle'].unique())","fe5f591f":"nan_cat_cols = ['origin_country','product_color','product_variation_size_id','merchant_name','merchant_info_subtitle']\ndf[nan_cat_cols] = df[nan_cat_cols].replace(np.nan,'Unknown')","57d7f477":"df.columns[df.isna().sum()>0]","df87ec25":"df.duplicated().sum()","f22eed9b":"df= df.drop_duplicates()\ndf.duplicated().sum()","b7be40ec":"print(\"Duplicate product_id :\",df['product_id'].duplicated().sum())","da5d4a44":"df.describe().T","f7298eb9":"plt.figure(figsize=(12,6))\nsb.distplot(df['price'], color='red', label='Price')\nsb.distplot(df['retail_price'], color='blue', label='Retail price')\nplt.legend();","2f60c1cb":"kwargs = {'cumulative':True}\nf, axes = plt.subplots(1,2, figsize=(14,6))\nf.suptitle('CDF of Price and Retail Price')\nsb.distplot(df['price'].values,kde_kws=kwargs, hist_kws=kwargs, color='red', label='Price', ax=axes[0]);\nsb.distplot(df['retail_price'].values,kde_kws=kwargs, hist_kws=kwargs, color='blue', label='Retail Price', ax=axes[1]);\naxes[0].set(xlabel='Price');\naxes[1].set(xlabel='Retail Price');","c9b73167":"fig = go.Figure()\nfig.add_trace(go.Box(x=df['retail_price'], name='Retail Price'))\nfig.add_trace((go.Box(x=df['price'], name='Price')))\nfig['layout']['title'] = 'Distribution of Price and Retail Price'\nfig.show()","838aeea3":"df_outliers = df[df['price'] > 18]\nprint(\"Number of outliers: \",df_outliers.shape[0])\nprint(\"Outlier: \", df_outliers[df_outliers['price']==49])","498429d5":"px.scatter(df, x='units_sold', y='price',marginal_x='box', title='Price vs Units Sold')","c1dbc379":"#range for units sold\nsorted(df['units_sold'].unique())","3422ee7b":"from sklearn.cluster import KMeans\n\nclusters = {}\nfor i in range(1,8):\n    kmeans = KMeans(n_clusters=i).fit(df[['units_sold']])\n    clusters[i] = kmeans.inertia_\n    \nplt.plot(list(clusters.keys()), list(clusters.values()));\nplt.xlabel('no. of clusters');\nplt.ylabel('kmeans inertia');   ","ac9443e0":"\n#order cluster method\ndef order_cluster(cluster_field_name, target_field_name,df,ascending):\n    new_cluster_field_name = 'new_' + cluster_field_name\n    df_new = df.groupby(cluster_field_name)[target_field_name].mean().reset_index()\n    df_new = df_new.sort_values(by=target_field_name,ascending=ascending).reset_index(drop=True)\n    df_new['index'] = df_new.index\n    df_final = pd.merge(df,df_new[[cluster_field_name,'index']], on=cluster_field_name)\n    df_final = df_final.drop([cluster_field_name],axis=1)\n    df_final = df_final.rename(columns={\"index\":cluster_field_name})\n    return df_final","b69f7f0a":"df['units_sold_cluster'] = KMeans(n_clusters=3).fit(df[['units_sold']]).predict(df[['units_sold']])\ndf = order_cluster('units_sold_cluster','units_sold',df,True)\ndf.groupby(['units_sold_cluster'])['units_sold'].describe()","4bf7928a":"px.scatter(df,x='units_sold',y='rating', color='units_sold_cluster', marginal_y ='box',title='Rating vs units sold')","1ce4e186":"px.scatter(df,x='rating',y='merchant_rating', color='units_sold_cluster', marginal_y ='box',title='Merchant Rating vs units sold', opacity=0.7)","a7c70949":"px.scatter(df,x='rating', y='product_variation_inventory', color='units_sold_cluster', title='Product variation vs Rating')","53b2a8a3":"fig = px.scatter(df,x='rating_count',y='rating', color='units_sold_cluster', title='Rating vs Rating count')\nfig.add_trace(go.Scatter(x=np.ones((len(df)))*1103,y=df['rating'],name='Threshold 1'))\nfig.add_trace(go.Scatter(x=np.ones((len(df)))*7773, y=df['rating'],name='Threshold 2'))\nfig.update_layout(showlegend=False)","d531ea7f":"px.scatter(df,x='retail_price', y='price',color='units_sold_cluster',marginal_y='box')","4c896a78":"px.scatter(df, x='price', y='shipping_option_price', color= 'units_sold_cluster', title='Shipping price vs Price')","8177d42e":"features= ['price','retail_price','units_sold','rating','rating_count','shipping_option_price','product_variation_inventory','merchant_rating','merchant_rating_count']\ncorr = df[features].corr(method='spearman')","a42f656f":"plt.figure(figsize=(15,8));\nsb.heatmap(corr,annot=True);","cdc9c013":"df['uses_ad_boosts'].value_counts()","05731608":"df.groupby(['uses_ad_boosts'])['units_sold'].describe()","13cb9022":"data = df.query('uses_ad_boosts == 0')['units_sold'].values, df.query('uses_ad_boosts == 1')['units_sold'].values","ca720845":"# calculating the effect size \n\ndef EffectSize(group1, group2):\n    diff = group1.mean()- group2.mean() \n    var1 = group1.var()\n    var2 = group2.var()\n    n1,n2 = len(group1), len(group2)\n    pooled_var = (n1 * var1 + n2 * var2) \/ (n1 + n2)\n    d = diff\/math.sqrt(pooled_var)\n    return d","390451e8":"g1,g2 = data\nprint(\"Difference in means: \",g1.mean()-g2.mean())\nEffectSize(g1,g2)","2bd7d4ee":"class HypothesisTest(object):\n    \n    def __init__(self, data):\n        self.data = data\n        self.MakeModel()\n        self.actual = self.TestStatistic(data)\n        \n    def PValue(self, iters=1000):\n        self.test_stats = [self.TestStatistic(self.RunModel()) for _ in range(iters)]\n        \n        count = sum(1 for x in self.test_stats if x > self.actual)\n        return count\/iters\n    \n    def TestStatistic(self, data):\n        raise UnimplementedMethodException()\n    def MakeModel(self):\n        pass\n    def RunModel(self):\n        raise UnimplementedMethodException()","cff0e368":"class DiffMeans(HypothesisTest):\n    def TestStatistic(self, data):\n        group1,group2 =data\n#         test_stat = abs(group1.mean() - group2.mean())\n        test_stat = abs(EffectSize(group1, group2))\n        return test_stat\n    def MakeModel(self):\n        group1, group2 = self.data\n        self.n, self.m = len(group1), len(group2)\n        self.pool = np.hstack((group1,group2))\n        \n    def RunModel(self):\n        np.random.shuffle(self.pool)\n        data = self.pool[:self.n], self.pool[self.n:]\n        return data\n    ","ed0a354f":"test = DiffMeans(data)\ntest.PValue()","bffcb68b":"df['difference'] = df['retail_price'] - df['price']\ndf['discount'] = df['difference']\/df['retail_price'] *100\nplt.figure(figsize=(12,6))\nsb.distplot(df['discount']);\nplt.title('Distribution of Discount');","a07e96c4":"px.scatter(df,x='discount', y='rating_count', color='units_sold_cluster')","4eb294cc":"df['rating_score'] = df['rating']*df['rating_count']\ndf['rating_score'] =df['rating_score']\/df['rating_score'].max()\nplt.figure(figsize=(12,6))\nsb.distplot(df['rating_score']);\nplt.title('Distribution of Rating Score');","c78b74f5":"px.scatter(df,x='rating_score',y='units_sold', color='units_sold', title='Units Sold vs Rating score')","7e9b1368":"def make_clusters(df,column):\n    clusters = {}\n    for i in range(1,8):\n        kmeans = KMeans(n_clusters=i).fit(df[[column]])\n        clusters[i] = kmeans.inertia_\n\n    plt.plot(list(clusters.keys()), list(clusters.values()));\n    plt.title(f'{column} clusters')\n    plt.xlabel('no. of clusters');\n    plt.ylabel('kmeans inertia');   ","75faa843":"make_clusters(df,'rating_score')","dda8bfb3":"kmeans = KMeans(n_clusters=3).fit(df[['rating_score']])\ndf['rating_score_cluster'] = kmeans.predict(df[['rating_score']])\ndf= order_cluster(df=df,cluster_field_name='rating_score_cluster',target_field_name='rating_score',ascending=True)\ndf.groupby('rating_score_cluster')[['rating','rating_count','units_sold']].describe().T","b6da1e8c":"df['overall_score'] = df['rating_score_cluster'] + df['units_sold_cluster']\nmake_clusters(df,'overall_score');","9bb5314a":"kmeans= KMeans(n_clusters=2).fit(df[['overall_score']])\ndf['overall_score_cluster'] = kmeans.predict(df[['overall_score']])\ndf = order_cluster(df=df,target_field_name='overall_score', cluster_field_name='overall_score_cluster', ascending=True)\ndf.groupby('overall_score_cluster')[['rating_score','price','units_sold']].describe().T","47eb0b63":"df[['title_orig','units_sold','price','rating_score','units_sold_cluster','rating_score_cluster','overall_score_cluster']].sample(frac=.25).head(30)","46ec3d7d":"merchant_profile_picture contains the url to merchants profile picture where more than 80% of data is missing, for now let's check the others","9e79fba5":"## Data cleaning","748fab12":"* Here we can there are some products which were sold at discount of 95%(thats some crazy sale going on)\n* There are products which were sold at price more than the retail price, must some products with huge demand as people are buying it at greater prices","e975a9fa":"There seems to be no specific relation between units sold and discount provided ","f8140b0d":"# Step by step EDA and statistical analysis","12514f17":"If there are any questions, comments, suggestions feel free to point out :)","b3b102e6":"Now we can check if we handled the nan values properply","19a1d62d":"all values in the rating_count column are 0 where there are na values in other rating count columns so lets fill 0 in place of the na values","f259bc60":"Checking how big the effect is between two groups","a14bf101":"'Quantit\u00e9 limit\u00e9e !' translates to 'Quantity Limited' and 'R\u00e9duction sur les achats en gros' means 'discount on wholesale purchases' rest are all nan, let's make them right","cf381d65":"CDFs are more useful inorder to visualize the data more efficiently.\n* CDF of price reveals that 97% of products are listed for less than aproximate price 19-20\n* CDF of Price closely represents the CDF curve of Normal distribution which can be summarized efficiently except for the 3% data\n* Incase of Retail price the distribution is not very much smooth and contains price gaps","ddd373c6":"Let's check for identical rows and eliminated them for the dataframe","b22c164e":"here 2 clusters seems to be optimal ","91c1d6cb":"Let's take a look at other binary attributes which might affect the sales of product","8235d485":"With Boxplots we can easily spot the outliers and quartiles\n* The Upper fence of Price is at 18 i.e most of the data is priced less tha 18\n* There an item wiht price of 49 i.e clearly an oulier as it is far away from the Inter Quartile Range (Q3 - Q1) \n* Box plot of Retail price is much more spread out,  there is huge difference of 195 between the upper fence and max data point","1b19db6a":"By performing clustering we can see that units_sold can be clustered in 3 categories (optimal) as the inertia curve smooths out after 3 clusters","e10b2ff8":"Now for products a unique identifier is product_id and same goes for merchant_id ","15c34ac1":"Now we have an even more clear picture of whats selling, liked by people and what are some below average products","e63a7486":"has_urgency_banner is a binary column which tells us whether the product has an urgency banner or not, so we can replace nan's with 0's to get rid of the nan's ","2eb5365a":"## Exploratory data analysis","216a539e":"![Cohen's d](https:\/\/tien-nguyen.github.io\/images\/cohen-d.png)","7778c1b8":"Most of the top selling products seems be concentrated to the left where the price difference is much siginificant","0021dedb":"Theme, crawl month contains only one unique value","07049f07":"## Importing libraires","46bc1066":"People always prefer paying less shipping charges \nwe can see that most selling products has low shipping charges","64739b7c":"Consider these two groups of products one uses ad boost other dosen't\n* There is very small difference between the means of the two groups\n* Does using ad boost results in more success of products\n* How big the difference is bwetween these two two groups?\n* Is the effect statistically significant?","be4fcb89":"Let's move to the remaining columns product_variation_size_id, merchant_name, merchant_name_info_subtitle, origin_country","8777b2bf":"**Lets take a look at the columns with more than 50% null values and check whether they are useful or not**","72d208c5":"All data is categorical, so we can replace the nan values with an unknown token 'Unknown'","46a2dffe":"Let's now explore these outliers","04618174":"This represents that even after removing identical values still there duplicates of 'product_id' are present, this is because same product can be soold by different merchants on different price, hence this seems to a clear indicator that merchant_id influences the price of product","43d4cdf8":"* By combining the product rating and rating count we defined a metric rating score which seems to be very useful to understand the sales of a product","592ef38d":"The plot indicates a right skewed distribution but not very Clear.","cec37547":"There a clear relationship of price and units sold.\n* Higher the price lesser the units sold\n* There are some cases where the price is low still the units sold are below average, possible reasons the product might not be upto the mark as per the buyers or there are some other factors affecting the price we haven't touched yet\n* units sold seems be a range not continous values \n* median of units sold is 1000, by this we can consider that products with units sold below 1000 (inclusive) were below average and products with units sold are very successfull.\n* It totally depends on your business goals which price range you want to focus on, for now I will take the unsupervised approach","4666344a":"Let's define a null hypothesis that there is no effect of using ad boosting on units sold with threshold of 0.05","ba599f5f":"From above visualization we can conclude that products sold by merchants belonging to cluster 2 and 1 are Top selling,most liked and trusted by buyers\n* There's some kind of thresholding that can be done on rating and rating count to separate the 3 categories of products\n* still there are few overlapping data points","f7e76d19":"This is work in progress...","081fdadf":"now we have a clear picture of top selling, and price range of products","d7c5e189":"* Median for rating is 3.85 and the products in top selling cluster has rating between 3.35 to 4.1 seems very reasonable\n* Rating is very important to determine the potential of product\n* Still there are some products with 5 star rating yet unable to cross the 100-1000 unit sold line\n* there are some really bad performing products with rating below 3","7b6104b5":"The effect size is too small to make any difference","9127b818":"* With this overall score we have identified the groups of top selling, most liked products which are the ones generating high revenue and products performing below average\n* There 213 successfull products with range of units sold from 10K to 100K at a mean price of 8.45\n* In the other cluster the mean price is 8.34 but mean units sold are much low\n* another thing to notice is that people prefer a reasonable price as in successfull cluster the max price is 19, products in this cluster must be worth the price.","f81b49ce":"3 clusters for rating score will be optimal","aad2d885":"Now let's process the columns with ratings, all the rating count columns has same number of values missing i.e. 45 missing values but the rating_count column has no na values, lets check the ratin_count where values are mising in other rating count columns","453ae817":"This one is a premium item with price much higher than the average price and number of units sold are very low compared to average units sold (4422), with an above average rating of 4.67 and rating density of 6% as only 6 poeple posted a review out of 100","d5b5c92f":"Lets see discount applied","1819e932":"All null values were handled except for the 'merchant_profile_picture' which we will look after later","e4d007a3":"* The resulting P-value is much greater than the threshold we set hence we accept the null hypothesis that there is no statistically significant effect of ad boosting\n* It is possible that there might be an significant effect but we didn't see it here because of less amount of data"}}