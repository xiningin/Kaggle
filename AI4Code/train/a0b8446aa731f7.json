{"cell_type":{"c4cbdd73":"code","6e7b4764":"code","35518728":"code","d5e13b77":"code","26525dc5":"code","720a0655":"code","6f634e7f":"code","6b314e76":"code","ca387f23":"code","5c5e55ed":"code","c5003e6a":"code","22fa923d":"markdown","7ca0cc16":"markdown","312a14d8":"markdown","1a540ab0":"markdown","d0f290c1":"markdown","941e51b0":"markdown","ceba93fa":"markdown","64044e6b":"markdown","4a981a83":"markdown","1bdbed6e":"markdown","6d60ce88":"markdown","159ef159":"markdown"},"source":{"c4cbdd73":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nimport tensorflow as tf\nimport matplotlib.pyplot as plt","6e7b4764":"df = pd.read_csv(\"\/kaggle\/input\/dont-overfit-ii\/train.csv\", index_col=\"id\")","35518728":"df.info()","d5e13b77":"X = df.drop(columns=[\"target\"])\ny = df.filter([\"target\"])\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X.values, y.values, test_size=0.2, random_state=42\n)","26525dc5":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","720a0655":"input_layer = tf.keras.Input(shape=(300,))\n\nhidden_layer_1 = tf.keras.layers.Dense(1024, activation='relu')(input_layer)\n\nhidden_layer_2 = tf.keras.layers.Dense(512, activation='relu')(hidden_layer_1)\n\nhidden_layer_3 = tf.keras.layers.Dense(256, activation='relu')(hidden_layer_2)\n\noutput_layer = tf.keras.layers.Dense(1, activation='sigmoid')(hidden_layer_3)\n\nmodel = tf.keras.Model(inputs=input_layer, outputs=output_layer)","6f634e7f":"model.summary()","6b314e76":"model.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=['accuracy']\n)\n\nhistory = model.fit(\n    X_train, y_train,\n    batch_size=64,\n    epochs=100,\n    validation_split=0.25\n)","ca387f23":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Loss')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Accuracy')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.show()","5c5e55ed":"input_layer = tf.keras.Input(shape=(300,))\n\nhidden_layer_1 = tf.keras.layers.Dense(32, activation='relu')(input_layer)  # Simplifying model: less layers, less neurons\nhidden_layer_1 = tf.keras.layers.Dropout(rate=0.2)(hidden_layer_1)  # Adding dropout layers\n\nhidden_layer_2 = tf.keras.layers.Dense(16, activation='relu')(hidden_layer_1)  # Simplifying model: less layers, less neurons\nhidden_layer_2 = tf.keras.layers.Dropout(rate=0.2)(hidden_layer_2)  # Adding dropout layers\n\noutput_layer = tf.keras.layers.Dense(1, activation='sigmoid')(hidden_layer_2)\n\nmodel = tf.keras.Model(inputs=input_layer, outputs=output_layer)\n\nmodel.compile(\n    optimizer='adam',\n    loss='binary_crossentropy',\n    metrics=['accuracy']\n)\n\nes_callback = tf.keras.callbacks.EarlyStopping(\n    monitor='val_loss',\n    patience=3\n)\n\nhistory = model.fit(\n    X_train, y_train,\n    batch_size=64,\n    epochs=100,\n    callbacks=[es_callback],  # Stop training process earlier\n    validation_split=0.25\n)","c5003e6a":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Loss')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.show()\n\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Accuracy')\nplt.legend(['Train', 'Validation'], loc='upper left')\nplt.show()","22fa923d":"This is the example of overfitting.","7ca0cc16":"## Train-test split","312a14d8":"## Train","1a540ab0":"80% train, 20% test","d0f290c1":"You can see that these methods decrease overfitting. But ofcourse not enough because this train set is too small to make this competition harder.","941e51b0":"# Example for my blog post [How To Avoid Overfitting](https:\/\/medium.com\/@gokhang1327\/how-to-avoid-overfitting-for-beginners-deep-learning-ed2817a7e65)","ceba93fa":"## Model","64044e6b":"## How To Avoid Overfitting","4a981a83":"## Evaluation","1bdbed6e":"There is not any missing value situation in this data.","6d60ce88":"## Checking missing values","159ef159":"## Reading data into a pandas dataframe"}}