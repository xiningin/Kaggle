{"cell_type":{"599297bd":"code","2569fc09":"code","fde61b82":"code","48424389":"code","c5b4588a":"code","e827091b":"code","7044b250":"code","f7924821":"code","a1d40df9":"code","88b3cdf2":"code","7574d90e":"code","51f74000":"code","1eeb3fe8":"code","f3b3aebd":"code","08026b3f":"code","ad260ad8":"code","f4681ac1":"code","dc6be31f":"code","2162de1b":"code","14cd6ac7":"code","1d05e9fe":"code","54904ecc":"code","b25b9df2":"code","a754016d":"code","11ddda73":"code","73625fb5":"code","a2220fd0":"code","aa32de85":"code","7f8edb8a":"code","300e44f9":"code","a5d0a969":"code","6fef0ded":"code","0dfb909f":"code","68a3c170":"code","3e48f5d2":"code","e2fe546e":"code","8e3a9719":"code","e74aadb6":"code","160547d5":"code","6c2ebb43":"code","a23ddbbb":"code","5ea08f00":"code","a2ea13dd":"code","c8f82a13":"code","c7f9ad33":"code","fbb26b49":"code","b579edb3":"code","378d9030":"code","a67686c4":"code","fcca4e81":"code","fb75c4fd":"code","a8a5bb9c":"code","8663a6b4":"code","6f417118":"code","9037581c":"code","47eb8fba":"code","dd073364":"code","918d244d":"code","5b4d0a06":"code","02f58f25":"code","e21b16e6":"code","7fc0c94d":"code","cdc0003e":"code","58a34817":"code","20018d6d":"code","ae35b121":"code","77dc8f5d":"code","676ceb19":"code","22ede01c":"markdown","21719aab":"markdown","c7084faa":"markdown","181e690b":"markdown","ff7eb812":"markdown","ee9c5cba":"markdown","655ac8be":"markdown","64d5a109":"markdown","a23e866f":"markdown","daefe2ae":"markdown","2ccf855e":"markdown","845c47e6":"markdown","50ffd0be":"markdown","49144148":"markdown","fce2b56d":"markdown","092c403c":"markdown","80d0dd9e":"markdown","a95c7ab1":"markdown","ace12fd5":"markdown","0e91aa46":"markdown","a304f0ca":"markdown","9ee40c73":"markdown","cdd20c4e":"markdown","6d1880a6":"markdown","a0461506":"markdown","b652787d":"markdown","3d7f2c8b":"markdown","0319fbf9":"markdown","98ff6c07":"markdown","5cbc1d9c":"markdown","0a9724b8":"markdown","79837031":"markdown","c3d14a1e":"markdown","170bb5a9":"markdown","81842a71":"markdown","bc5b2067":"markdown","b085b275":"markdown","a0ca28fe":"markdown","2b4cfc2b":"markdown","03f6dd66":"markdown","2ab64e44":"markdown","bfccf7fa":"markdown","15fd46f0":"markdown","2a959701":"markdown","23334496":"markdown","4ff85538":"markdown","95c2bde1":"markdown","160b9dd4":"markdown","1b8ab5ed":"markdown","7572813b":"markdown","58bb2381":"markdown","7c68b9ee":"markdown","0f79d830":"markdown","ef53d8fc":"markdown","a6e4e76e":"markdown","e0bdd632":"markdown","d237abcb":"markdown","54046fbf":"markdown"},"source":{"599297bd":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport re\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set(style=\"darkgrid\")\n%matplotlib inline","2569fc09":"#from google.colab import drive\n#drive.mount('\/content\/drive')","fde61b82":"#df = pd.concat(pd.read_excel('\/content\/drive\/MyDrive\/Colab Notebooks\/online_retail_II.xlsx', sheet_name=None), ignore_index=True)\ndf = pd.concat(pd.read_excel('..\/input\/online-retail-ii\/online_retail_II.xlsx', sheet_name=None), ignore_index=True)","48424389":"df.head()","c5b4588a":"df.shape\n","e827091b":"df.info()","7044b250":"plt.subplots(figsize=(10, 8))\nsns.heatmap(df.isnull(), yticklabels = False,cbar = False, cmap='cubehelix')\nplt.show()","f7924821":"print(\"Unique customers IDs:\", len(df['Customer ID'].unique().tolist()))","a1d40df9":"df.describe()","88b3cdf2":"cancelledOrder = df[df['Invoice'].astype(str).str.contains('C')]\ncancelledOrder.head(20)\n","7574d90e":"cancelledOrder[cancelledOrder['Quantity']>0]","51f74000":"print(\"CancelledOrder transactions:\", len(cancelledOrder))\nprint(\"Total transaction with negative quantity:\", df[df['Quantity'] <= 0 ]['Quantity'].count())","1eeb3fe8":"df[df['Price'] == 0].head()","f3b3aebd":"df[df['Price'] < 0].head()","08026b3f":"d = df[~df['Invoice'].astype(str).str.contains('C')]  \ndf_QP = d[[ 'Quantity', 'Price']]\nQP= df_QP.apply(lambda x:x['Quantity'] <= 0 and x['Price'] <= 0, axis=1)\ndf_QP = df_QP[QP].reset_index()\ndf_QP.head(10)","ad260ad8":"print(\"% of cancelledOrder transactions:\" , round(len(cancelledOrder)\/len(df)*100, 2),\"%\")\nprint(\"% of transactions with zero or negative price\" ,round(len(df[df['Price']<=0])\/len(df)*100, 2),\"%\")","f4681ac1":"data = df[(df['Price'] > 0) & (df['Quantity']>0)]","dc6be31f":"data.info()","2162de1b":"print(\"duplicated transactions:\", len(data[data.duplicated()]))","14cd6ac7":"data.drop_duplicates(inplace = True)","1d05e9fe":" data = data.dropna(subset=['Customer ID'])","54904ecc":"data['Description'] = data['Description'].str.lower()","b25b9df2":"print(\"unique descriptions:\", len(data['Description'].unique().tolist()))","a754016d":"data.head()","11ddda73":"data['Description'] = data['Description'].replace(to_replace=r'[^\\w\\s]', value='', regex=True) ","73625fb5":"data.head(10)","a2220fd0":"print(\"Number of unique descriptions:\", len(data['Description'].unique().tolist()))","aa32de85":"data['month'] = data['InvoiceDate'].dt.month\ndata['year'] = data['InvoiceDate'].dt.year","7f8edb8a":"data['WeekDay'] = data['InvoiceDate'].dt.day_name()","300e44f9":"data['month_year'] = pd.to_datetime(data[['year', 'month']].assign(Day=1))","a5d0a969":"data['hour'] = data['InvoiceDate'].dt.hour","6fef0ded":"data.head()","0dfb909f":"data['revenue'] = data['Price'] * data['Quantity']","68a3c170":"plot = pd.DataFrame(data.groupby(['month_year'])['Invoice'].count()).reset_index()\nplot2 = pd.DataFrame(data.groupby(['WeekDay'])['Invoice'].count().reset_index())\nplot3 = pd.DataFrame(data.groupby(['hour'])['Invoice'].count()).reset_index()\nplot4 = pd.DataFrame(data.groupby(['month_year'])['revenue'].mean()).reset_index()\nplot5 = pd.DataFrame(data.groupby(['month_year'])['revenue'].sum()).reset_index()","3e48f5d2":"plot2 \n","e2fe546e":"figsize=(20, 8)\nf, ax = plt.subplots(1, 1, figsize=figsize)\nax = sns.lineplot(ax = ax,x=\"month_year\", y=\"Invoice\", data = plot, label=\"Number of Invoices\").set_title('No of Order wrt Months')","8e3a9719":"figsize=(20, 8)\nf, ax = plt.subplots(1, 1, figsize=figsize)\nax = sns.barplot(ax = ax, x=\"WeekDay\", y=\"Invoice\", data = plot2).set_title('No of Invoices wrt Weekdays')","e74aadb6":"figsize=(20, 8)\nf, ax = plt.subplots(1, 1, figsize=figsize)\nax = sns.barplot(ax = ax, x=\"hour\", y=\"Invoice\", data = plot3).set_title('No of Invoices wrt Time of the day')","160547d5":"figsize=(20, 8)\nf, ax = plt.subplots(1, 1, figsize=figsize)\nax = sns.lineplot(ax= ax, x = 'month_year', y='revenue', data = plot5).set_title('No of Invoices wrt Months')","6c2ebb43":"pd.DataFrame(data['Price'].describe())","a23ddbbb":"data[data['Price']>50]['Description'].unique().tolist()","5ea08f00":"plt.subplots(figsize=(20, 5))\nsns.distplot(data[data['Price']>50]['Price'], kde=True, rug=True).set_title('Price Density Distribution')\n#linspace using for bar chart, conditional quantile distruibution vizualization","a2ea13dd":"customer_country=data[['Country','Customer ID']].drop_duplicates()\ncustomer_country.groupby(['Country'])['Customer ID'].aggregate('count').reset_index().sort_values('Customer ID', ascending=False)","c8f82a13":"fig1, ax1 = plt.subplots(figsize=(20, 20))\ncc = customer_country.groupby(['Country'])['Customer ID'].aggregate('count')\nax1 = cc.plot.pie(x='Country', y='Customer ID',autopct='%1.1f%%', textprops={'fontsize': 10})","c7f9ad33":"\nprint(\"Transactions were made in\", len(data['Country'].unique().tolist()), \"different countries\")","fbb26b49":"print(\"Number of transactions where country is unspecified:\", len(data[data['Country']=='Unspecified']))","b579edb3":"plot6 = pd.DataFrame(data.groupby(['Country'])['revenue'].sum()).reset_index()\nplot6 = plot6.sort_values(['revenue']).reset_index(drop=True)\nplot7 = pd.DataFrame(data.groupby(['Country'])['revenue'].count()).reset_index()\nplot7 = plot7.sort_values(['revenue']).reset_index(drop=True)","378d9030":"%matplotlib inline\nfig, ax = plt.subplots()\nfig.set_size_inches(20, 11.5)\nax=sns.barplot(x='Country', y='revenue',data=plot6.tail(10),estimator=max,ax=ax).set_title('Revene Generated from Countries')\n\nplt.show()","a67686c4":"%matplotlib inline\nfig, ax = plt.subplots()\nfig.set_size_inches(13, 11.5)\nax=sns.barplot(x='Country', y='revenue',data=plot7.tail(10),estimator=max,ax=ax)\nax.set_xticklabels(ax.get_xticklabels(), rotation=47, ha=\"right\")\nplt.show()","fcca4e81":"data['freq'] = data.groupby('Customer ID')['Customer ID'].transform('count')","fb75c4fd":"customer  = pd.DataFrame(data.groupby(['Customer ID'])['revenue'].sum().sort_values(ascending=False)).reset_index().head(10)","a8a5bb9c":"customer['Customer ID'].tolist()","8663a6b4":"top_customer = data[data['Customer ID'].isin(customer['Customer ID'].tolist())][['Customer ID', 'Country', 'revenue', 'Quantity', 'freq']]","6f417118":"top_customer['Country'].unique().tolist()","9037581c":"df_uk = data[data['Country'] == \"United Kingdom\"]\ndf_uk.head()","47eb8fba":"print(df_uk['InvoiceDate'].min())\nprint(df_uk['InvoiceDate'].max())","dd073364":"import datetime as dt\npresence = dt.datetime(2011,12,10)\ndf_uk['InvoiceDate'] = pd.to_datetime(df_uk['InvoiceDate'])","918d244d":"rfm = df_uk.groupby('Customer ID').agg({'InvoiceDate': lambda x: (presence - x.max()).days, 'Invoice': lambda x: len(x), 'revenue': lambda x: x.sum()})\nrfm['InvoiceDate'] = rfm['InvoiceDate'].astype(int)\nrfm.rename(columns={'InvoiceDate': 'recency', \n                         'Invoice': 'frequency', \n                         'revenue': 'monetary_value'}, inplace=True)","5b4d0a06":"rfm.head()","02f58f25":"quantiles = rfm.quantile(q=[0.25,0.50,0.75])\nquantiles = quantiles.to_dict()","e21b16e6":"rfm_segments= rfm","7fc0c94d":"# Arguments (x = value, p = recency, monetary_value, frequency, k = quartiles dict)\ndef RClass(x,p,d):\n    if x <= d[p][0.25]:\n        return 1\n    elif x <= d[p][0.50]:\n        return 2\n    elif x <= d[p][0.75]: \n        return 3\n    else:\n        return 4\n    \n# Arguments (x = value, p = recency, monetary_value, frequency, k = quartiles dict)\ndef FMClass(x,p,d):\n    if x <= d[p][0.25]:\n        return 4\n    elif x <= d[p][0.50]:\n        return 3\n    elif x <= d[p][0.75]: \n        return 2\n    else:\n        return 1","cdc0003e":"rfm_segments['R_Quartile'] = rfm_segments['recency'].apply(RClass, args=('recency',quantiles,))\nrfm_segments['F_Quartile'] = rfm_segments['frequency'].apply(FMClass, args=('frequency',quantiles,))\nrfm_segments['M_Quartile'] = rfm_segments['monetary_value'].apply(FMClass, args=('monetary_value',quantiles,))","58a34817":"rfm_segments['RFMClass'] = rfm_segments.R_Quartile.map(str) \\\n                            + rfm_segments.F_Quartile.map(str) \\\n                            + rfm_segments.M_Quartile.map(str)","20018d6d":"rfm_segments.head(10)","ae35b121":"rfm_segments['RFMClass'].unique()","77dc8f5d":"rfm_segments.head(10)","676ceb19":"print(\"Always Returing Customers: \",len(rfm_segments[rfm_segments['RFMClass']=='111']),\n      \"(\", round(len(rfm_segments[rfm_segments['RFMClass']=='111'])\/len(rfm_segments)*100,2), \"%)\") \nprint('Loyal Customers: ',len(rfm_segments[rfm_segments['F_Quartile']==1]),\n      \"(\", round(len(rfm_segments[rfm_segments['F_Quartile']==1])\/len(rfm_segments)*100,2), \"%)\")\nprint(\"Customer with Higher Power of Purchase: \",len(rfm_segments[rfm_segments['M_Quartile']==1]), \n      \"(\", round(len(rfm_segments[rfm_segments['M_Quartile']==1])\/len(rfm_segments)*100,2), \"%)\")\nprint('Potiential Churners: ', len(rfm_segments[rfm_segments['RFMClass']=='322']),\n      \"(\", round(len(rfm_segments[rfm_segments['RFMClass']=='322'])\/len(rfm_segments)*100,2), \"%)\")\nprint('Churners: ',len(rfm_segments[rfm_segments['RFMClass']=='444']), \n      \"(\", round(len(rfm_segments[rfm_segments['RFMClass']=='444'])\/len(rfm_segments)*100,2), \"%)\")\n","22ede01c":"# 1. Mouting the Drive and Reading the data","21719aab":"There are also transactions with zero price. Transactions with zero price doesn't bring usefull information to analysis, moreover mainly there are not any description for such transactions. This transactions could be deleted.","c7084faa":"## 2.1 Descriptions","181e690b":"It should be taken into accoun that the same description could be written in different cases, let's convert all description into lowercase.","ff7eb812":"Interesting fact is that there were not any transaction on Saturday during the whole period. \nOne of the explanations colud be some filter during the data collection process. Number of buyings are not significantly differ according to the day of the week.","ee9c5cba":"Dataframe for plots:","655ac8be":"This means, they got orders for the low\/empty stock qunatity and they received the order but not shipped the order neither accepted the payment of those items. This should be indicated to Development Team to add the functionality in the system that if:\n1. The item become out of stock, it should shows to the customer out of stock in the front-end so the customer cannot place the order and there would be no messy data should generate for those items in the database.\n2. Out of stock notification should be shown to relavent vendors and CRM monitoring units.","64d5a109":"Define quartiles for rfm score:","a23e866f":"After this there are less unqiue descriptions:","daefe2ae":"As it was mentioned before there are some negative quantity transactions wich are not cancelledOrder, hovewer all these transactions have 0 price.","2ccf855e":"## The most sales makes United Kingdom","845c47e6":"The highest sales are also during the November, as the number of purchasing is the highest.","50ffd0be":"From descriptive statistics of quantitative variables (Quantity and Price), we could see that there are negative values in these variables, which are only possible in retail industry if:\n###Price:\n The order\/item was returened and payment is reimbursed. which can be used to indicate the quality of customer stisfaction and can be the triggering point for Quality Assurance Unit to take actions to minimize the order return rate\n\n####Qunatity:\nSelling items with insufficient stock in store If you then sell more quantity than you currently have in stock to a customer, the item will have a negative quantity on hand (QOH) and appear in the Negative inventory report.","49144148":"Select only UK customers:","fce2b56d":"Based on RFM analysis several customers segments from UK could be defined. There are quite big precantage of loyal customers or customers who tend to spned big amount of money while buying. Also there are groups of customers who are already lost and who are going to be lost in near future. Stopping them to be chunking with some targeting campaignes.","092c403c":"Percentage of transactions which will be deleted:\nso that the actual inventory and price will be accumulated for Analysis","80d0dd9e":"There are problems in data collections and data integration processes which should be solved, for more effective data analysis and more clear sollutions.","a95c7ab1":"Adding columns with calculation of sales:","ace12fd5":"There are some Adjusted bad bedts, bad debt means taking a customer's balance in the receivables ledger and transferring it to the statement of profit or loss as an expense, because the balance has proved irrecoverable. And it is accumulated as negative values to balance the ledhger as they were not able to collected till now date.","0e91aa46":"## 3.2 RFM analysis","a304f0ca":"There are more purchasing made at the end of the year. The highest number of transactions were made during November. Probably reason could be the fact, that people tend to prepare for Christmas during November and it also indicate the numbers of customers in geographical and religious boundries . Other than November number of byuings during the year is quite similar.","9ee40c73":"removing white space and character symbols","cdd20c4e":"Drop rows with missing customers IDs","6d1880a6":"Dataframes for plots:","a0461506":"Filtering transaction with invoice number started with letter 'C':","b652787d":"Check and delete duplicate transactions:","3d7f2c8b":"## 2.3 Dates","0319fbf9":"Let's have a closer look on the reason of negative values in these variables. In the description of dataset it is written that there are some canceled transactions presented in dataset. Canceled transactions is indicated by invoice number which starts with letter 'c'. Probably transactions with negative values of quantity are canceled.","98ff6c07":"Hovewer some transactions with negative quantity doesn't belong to cancelledOrder:","5cbc1d9c":" Among cancelledOrder transactions there is only one any transaction with positive quantity","0a9724b8":"## Countries by number of orders:","79837031":"## 4. Recommendations","c3d14a1e":"Calculate recency, frequency and monetary values:","170bb5a9":"1. Missing customer ID -  this column could be made not nullable, On Develpment side, they should be bound to make customer to register, don't be able to shop as a guest.\n2. Not valid Stock Codes (contains different letters\/some words) - some checking constraints for stock codes.\n3. Duplicate transasctions - probably data were collected from multiple sources, which caused some duplictities.\n4. To each stock code should belong only one product description, this rule is not kept in dataset. The reason could be again absence of constraints or wrong joins of the tables, if the dataset were constricted from multiple tables.","81842a71":"getting information about datatypes of the columns and number of non-null rows in each column.\nFrom the information bellow we can conclude that column Description and CustomerID columns contains some missing values. This fact will be examined in further steps.","bc5b2067":"Calculate the top 500 customers who brings the highest revenue ","b085b275":"Removing punctuations for the description:","a0ca28fe":"# 2. Preprocessing ","2b4cfc2b":"## Price distribution of expensive goods :","03f6dd66":"Adding features as year, month, month_year, day of week, hour:","2ab64e44":"Calculate how often did particular customer make purchase during the year:","bfccf7fa":"### dimension of data set","15fd46f0":"Description of products, which cost more than 50 (Assumption: same currency for retails in different countries.)\n","2a959701":"All rows with missing descriptions are gone after deleting problematic transactiones.","23334496":"The biggest number of orders are made in United Kingdom, which is expected, because the store is UK-based.\n","4ff85538":"The most unique customers are from United Kingdom, for this reason it is better to concetrate on UK for customer segmentation.","95c2bde1":"From the descriptive statistics for price variable, we could see that most ot the sold products are quite cheap.\nProbably retail sells some small items, as office supplies, small decorations etc.","160b9dd4":"Countries where the top customers resides\n\n\n","1b8ab5ed":"## How many orders per day?","7572813b":"## 2.3 Price","58bb2381":"## 2.3 Transactions by countries","7c68b9ee":"# 3. Analysis","0f79d830":"## How many orders per month?","ef53d8fc":"## 3.1 Top Customers","a6e4e76e":"## Which month brings the highest revenue?","e0bdd632":"## How many orders per hour?","d237abcb":"The most number of transactions is done between 12 a.m. and 2 p.m., people tend to make there purchase during the lunch time.\nThere aren't any transactions after 8 p.m. till 6 a.m.","54046fbf":"Recency (R) as days since last purchase: How many days ago was their last purchase? Deduct most recent purchase date from today to calculate the recency value. 1 day ago? 14 days ago? 500 days ago?\n\nFrequency (F) as total number of transactions: How many times has the customer purchased from our store? For example, if someone placed 10 orders over a period of time, their frequency is 10.\n\nMonetary (M) as total money spent: How much has this customer spent? Again limit to last two years \u2013 or take all time. Simply totaling up the money from all transactions to get the M value."}}