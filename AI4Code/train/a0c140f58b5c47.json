{"cell_type":{"662802ba":"code","1ba61652":"code","e64e5d1a":"code","c92b2a3c":"code","63590dc8":"code","c58065d0":"code","029c2fd3":"code","19001e64":"code","9d32b3ea":"markdown","46bc55cb":"markdown"},"source":{"662802ba":"from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC \nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nscaler = StandardScaler()\nX, y = load_breast_cancer(return_X_y=True)\nX = scaler.fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, test_size=0.1)\nclf1 = KNeighborsClassifier()\nclf2 = SVC(gamma='auto', probability=True) #need to specify probability=True for soft voting\nclf3 = RandomForestClassifier(n_estimators=50, random_state=1)","1ba61652":"eclf1 = VotingClassifier(estimators=[('knn', clf1), ('svm', clf2), ('rf', clf3)], voting='hard')\neclf1.fit(X_train, y_train)\ny_pred1 = eclf1.predict(X_test)\nprint(\"Hard Voting\\n\", classification_report(y_test, y_pred1))","e64e5d1a":"# Now try Soft Voting","c92b2a3c":"eclf2 = VotingClassifier(estimators=[('knn', clf1), ('smv', clf2), ('rf', clf3)], voting='soft')\neclf2.fit(X_train, y_train)\ny_pred2 = eclf2.predict(X_test)\nprint(\"Soft Voting\\n\", classification_report(y_test, y_pred2))","63590dc8":"# Now try Soft Voting with Weights specified","c58065d0":"eclf3 = VotingClassifier(estimators=[('knn', clf1), ('svm', clf2), ('rf', clf3)],\n       voting='soft', weights=[1,1,2], flatten_transform=True)\neclf3.fit(X_train, y_train)\ny_pred3 = eclf3.predict(X_test)\nprint(\"Soft Voting with Weights\\n\", classification_report(y_test, y_pred3))","029c2fd3":"from sklearn.model_selection import GridSearchCV\n#Parameters:\n#KNN, n_neighbors\n#SVM, kernel\n#Random forest, n_estimators\nclf = VotingClassifier(estimators=[('knn', clf1), ('svm', clf2), ('rf', clf3)], voting='soft')\n#naming: name of the estimator + '__' + paramater\nparams = {'knn__n_neighbors':[5, 10], 'svm__kernel':['linear', 'poly', 'rbf'], 'rf__n_estimators':[20, 50, 100, 150, 200, 500]}\ngrid = GridSearchCV(estimator=clf, param_grid=params, cv=5)\ngrid = grid.fit(X_train, y_train)","19001e64":"print(\"Best parameters selected by GridSearchCV\", grid.best_params_)","9d32b3ea":"# Using the breast cancer dataset to demonstrate the application of Voting Classifier\n## For B565@IU","46bc55cb":"# Now try hard voting"}}