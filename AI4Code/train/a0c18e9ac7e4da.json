{"cell_type":{"428937cf":"code","4b6c568e":"code","573f3f6b":"code","a5814378":"code","5d08b3a5":"code","d926ee66":"code","7a90a3d8":"code","96016436":"code","f5451878":"code","83fab97f":"code","fd905c07":"code","aefe479a":"code","c74a04c6":"code","74a676b8":"code","44a8a00a":"code","bd0fa392":"code","a7fec969":"code","66f5fc23":"code","be7e0ced":"code","2f2036d8":"code","fba2cf7b":"code","6b78b1cc":"code","4bfa02f8":"code","3df15943":"code","6197228f":"code","423e1010":"code","4d252f33":"code","0c7d2d0d":"code","8774bca2":"code","09d0484d":"code","09ac5a7f":"code","52a9e6d5":"code","e43a9147":"code","99fd9fee":"code","fbb81e96":"code","c89b9455":"code","072123d3":"code","950c1263":"markdown"},"source":{"428937cf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4b6c568e":"import time\nimport pickle\nfrom collections import OrderedDict\nfrom datetime import datetime, timedelta\nfrom dateutil import rrule","573f3f6b":"datetime.fromtimestamp(1583138397) - timedelta(hours=4)","a5814378":"df = pd.read_csv('..\/input\/logistics-shopee-code-league\/delivery_orders_march.csv')\nsla = pd.read_excel('..\/input\/logistics-shopee-code-league\/SLA_matrix.xlsx')","5d08b3a5":"df.head()","d926ee66":"first = list(map(datetime.fromtimestamp, df['1st_deliver_attempt'].tolist()))\npick = list(map(datetime.fromtimestamp, df['pick'].tolist()))","7a90a3d8":"df","96016436":"df['1st_deliver_attempt'] = first","f5451878":"df['pick'] = pick","83fab97f":"df.head()","fd905c07":"second_list = []\nfor idx,row in df.iterrows():\n    second = row['2nd_deliver_attempt']\n    if np.isnan(second):\n        second_list.append(second)\n    else:\n        second_list.append(datetime.fromtimestamp(second))\nsecond_list[0:5]","aefe479a":"df['2nd_deliver_attempt'] = second_list","c74a04c6":"df['pick'] = pd.to_datetime(df['pick']).dt.date\ndf['1st_deliver_attempt'] = pd.to_datetime(df['1st_deliver_attempt']).dt.date\ndf['2nd_deliver_attempt'] = pd.to_datetime(df['2nd_deliver_attempt']).dt.date","74a676b8":"df.head(5)","44a8a00a":"import datetime\ndef date_diff(a,b):\n\n    diff_business_days = len(list(rrule.rrule(rrule.DAILY,\n                                              dtstart=a,\n                                              until=b - datetime.timedelta(days=1),\n                                              byweekday=(rrule.MO, rrule.TU, rrule.WE, rrule.TH, rrule.FR,rrule.SA))))\n    \n    \n    wed_holi = datetime.datetime.strptime('2020-03-25', '%Y-%m-%d').date()\n    mon_holi = datetime.datetime.strptime('2020-03-30', '%Y-%m-%d').date()\n    tue_holi = datetime.datetime.strptime('2020-03-31', '%Y-%m-%d').date()\n    \n    if a <= wed_holi <= b:\n        diff_business_days = diff_business_days - 1\n    \n    if a <= mon_holi <= b:\n        diff_business_days = diff_business_days - 1\n        \n    if a <= tue_holi <= b:\n        diff_business_days = diff_business_days - 1\n\n    return diff_business_days","bd0fa392":"date_diff(df[1284078:1284079]['pick'][1284078],df[1284078:1284079]['1st_deliver_attempt'][1284078])","a7fec969":"date_diff_1 = df.apply(lambda x: date_diff(x['pick'], x['1st_deliver_attempt']), axis=1)","66f5fc23":"df['date_diff_1'] = date_diff_1","be7e0ced":"df.head()","2f2036d8":"Address = {'metro manila','luzon','visayas','mindanao'}\nAddress_dict = {('metro manila','metro manila'):3,('metro manila','luzon'):5,('metro manila','visayas'):7,('metro manila','mindanao'):7,\n                ('luzon','metro manila'):5,('luzon','luzon'):5,('luzon','visayas'):7,('luzon','mindanao'):7,\n                ('visayas','metro manila'):7,('visayas','luzon'):7,('visayas','visayas'):7,('visayas','mindanao'):7,\n                ('mindanao','metro manila'):7,('mindanao','luzon'):7,('mindanao','visayas'):7,('mindanao','mindanao'):7\n               }","fba2cf7b":"# output only address we want\ndef last_12(x):\n    s = x[-12:].strip(' ').lower()\n    for a in Address:\n        if a in s:\n            return a\n    return 0","6b78b1cc":"df.selleraddress = df.selleraddress.apply(lambda x:last_12(x))","4bfa02f8":"df.buyeraddress = df.buyeraddress.apply(lambda x:last_12(x))","3df15943":"def agg(x):\n    t = (x['buyeraddress'],x['selleraddress'])\n    #print(t)\n    return Address_dict[t]","6197228f":"df['working_days'] = df.apply(agg,axis=1)\ndf.head()","423e1010":"df['2nd_deliver_attempt'] = pd.to_datetime(df['2nd_deliver_attempt'])\ndf['1st_deliver_attempt'] = pd.to_datetime(df['1st_deliver_attempt'])\ndf['pick'] = pd.to_datetime(df['pick'])","4d252f33":"date_diff_2 = df.apply(lambda x: date_diff(x['1st_deliver_attempt'], x['2nd_deliver_attempt']) \n                             if not pd.isnull(x['2nd_deliver_attempt']) else 999\n                             , axis=1)","0c7d2d0d":"date_diff_2","8774bca2":"df['date_diff_2'] = date_diff_2","09d0484d":"def get_answer(date_diff_1,date_diff_2,working_days):\n    if date_diff_1 > working_days:\n        return 1\n    elif date_diff_2 == 999:\n        return 0\n    else:\n        if date_diff_2 > 3:\n            return 1\n    return 0","09ac5a7f":"answer = df.apply(lambda x: get_answer(x['date_diff_1'], x['date_diff_2'], x['working_days']), axis=1)","52a9e6d5":"answer","e43a9147":"df['is_late'] = answer","99fd9fee":"df_submit = df[['orderid','is_late']]","fbb81e96":"df_submit.to_csv('submission.csv',index = False)","c89b9455":"df_submit['is_late'].value_counts()","072123d3":"pd.isnull(df['2nd_deliver_attempt'][0])","950c1263":"# Get SLA"}}