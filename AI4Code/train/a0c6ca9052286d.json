{"cell_type":{"d211637d":"code","d33e579a":"code","c0bdcba7":"code","1cabda3a":"code","1ed5b226":"code","1d963b08":"code","abd44e92":"code","e4506eaf":"code","fadc0b53":"code","83677bd0":"code","b028e5e0":"code","233c4b43":"code","48d494af":"code","fa0b5771":"code","27aece30":"code","c1413ad0":"code","16f88a7c":"code","984d8837":"code","124911eb":"code","368fc59f":"code","4d8a6d20":"code","1f6005f8":"markdown"},"source":{"d211637d":"import numpy as np\nimport pandas as pd\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.neighbors import KNeighborsClassifier\nimport matplotlib.pyplot as plt","d33e579a":"df = pd.read_csv('..\/input\/wine-whitered\/Wine_red.csv',sep=';')\nprint(df.shape)\ndf.head(3)","c0bdcba7":"df['rating'] = pd.qcut(df.quality,2,labels=['bad','good'])\ndf.head(3)","1cabda3a":"(df_train,df_test) = train_test_split(df,train_size=0.8,test_size=0.2,shuffle=True,stratify=df.rating,random_state=0)","1ed5b226":"df_train.rating.value_counts()","1d963b08":"round(1-1105\/(1105+174),3)","abd44e92":"df_test.rating.value_counts()","e4506eaf":"round(1-277\/(277+43),3)","fadc0b53":"#select features and target\nfeatures_train = df_train.iloc[:,0:-2]\nfeatures_test = df_test.iloc[:,0:-2]\ntargets_train = df_train.iloc[:,-1]\ntargets_test = df_test.iloc[:,-1]","83677bd0":"# standardization\nstnd = StandardScaler()\nstnd.fit(features_train)\nfeatures_train = stnd.transform(features_train)\nfeatures_test = stnd.transform(features_test)","b028e5e0":"features_test.std(axis=0)","233c4b43":"features_train.std(axis=0)","48d494af":"knn = KNeighborsClassifier()","fa0b5771":"K = np.arange(100)+1\ngrid = {'n_neighbors':K}","27aece30":"knnCV = GridSearchCV(knn,\n                     cv=5,\n                     param_grid=grid,\n                     return_train_score=True\n                     ,n_jobs=-1)","c1413ad0":"knnCV.fit(features_train,targets_train)","16f88a7c":"knnCV.best_params_","984d8837":"1-knnCV.best_score_.round(3)","124911eb":"# plot results\nresults = pd.DataFrame()\nresults['neighbors'] = K\nresults['train error'] = 1 -knnCV.cv_results_['mean_train_score']\nresults['valid error'] = 1 -knnCV.cv_results_['mean_test_score']\naxl = results.plot.line(x='neighbors',y='train error')\nresults.plot.line(x='neighbors',y='valid error',ax=axl)","368fc59f":"results.plot.line(x='neighbors',y='valid error')","4d8a6d20":"#compute test result\n\nerror_test = 1- knnCV.score(features_test,targets_test)\nerror_test.round(3)","1f6005f8":"## Example (Cross-Valldation for Red Wine)"}}