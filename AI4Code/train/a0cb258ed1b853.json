{"cell_type":{"94dad2ef":"code","55f436d6":"code","9b6aa1f9":"code","b03662e8":"code","471bd968":"code","3f37c477":"code","b32386d8":"code","5e73b175":"code","4317ea36":"code","3acb7df9":"code","4e3bfc82":"code","38311254":"code","9d8fd712":"code","ea17ad8d":"code","9bf42004":"code","fb378569":"code","22192d84":"code","c55df867":"code","96630652":"markdown","547d805d":"markdown","2b006a31":"markdown","aeb06001":"markdown","272ae987":"markdown","ec44865f":"markdown","a7ce8ce5":"markdown","9ea34a49":"markdown"},"source":{"94dad2ef":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nimport os\n","55f436d6":"vaccination_data = pd.read_csv(\"\/kaggle\/input\/covid-world-vaccination-progress\/country_vaccinations.csv\")\n\nvaccination_data = vaccination_data.set_index(\"country\")\nvaccination_data = vaccination_data.drop([\"England\", \"Gibraltar\", \"Wales\",\"Northern Cyprus\", \"Northern Ireland\", \"Scotland\"],axis=0)\n","9b6aa1f9":"world_pop = pd.read_csv(\"\/kaggle\/input\/population-by-country-2020\/population_by_country_2020.csv\")\nworld_pop = world_pop.loc[:,[\"Country (or dependency)\",\"Population (2020)\"]]\nworld_pop = world_pop.set_index(\"Country (or dependency)\")\nworld_pop.loc[\"Algeria\",:]","b03662e8":"vaccination_data.shape","471bd968":"vaccination_data.head()","3f37c477":"vaccination_data.isna().sum()","b32386d8":"\n# extracte the vaccines indeces\nvaccine_index = vaccination_data.vaccines.unique()","5e73b175":"# construct a database containing vaccines used in countries and total vaccine doses used from each vaccine.\n\nvaccines = vaccination_data.groupby(\"vaccines\")\n\ntotal_vaccine = pd.DataFrame()\nvaccine_use = pd.DataFrame()\n\nfor col, group in vaccines:\n    total_vaccine.loc[col,\"total_vaccination\"] = group[\"daily_vaccinations\"].sum()\n\n# Sort the data frame from the most used vaccine to the less used ( this estimation can be false because of the tuples of vaccines).\ntotal_vaccine= total_vaccine.sort_values(by=[\"total_vaccination\"], ascending= False)\ntotal_vaccine","4317ea36":"plt.rcParams[\"figure.figsize\"]=[7,5]\nplt.title(\"Total vaccines used per type\")\nsns.barplot(x=total_vaccine.iloc[:10,:].index, y = total_vaccine.iloc[:10,:][\"total_vaccination\"])\nplt.xticks(rotation = \"vertical\")\nplt.draw()\n\n","3acb7df9":"\nfig = px.choropleth(vaccination_data[vaccination_data[\"vaccines\"].isin(total_vaccine.iloc[:10,:].index)], locations=\"iso_code\", color='vaccines',\n                     hover_name=vaccination_data[vaccination_data[\"vaccines\"].isin(total_vaccine.iloc[:10,:].index)].index,\n                     projection=\"natural earth\", title=\"Distribution of the most 10 used vaccines all over the word\")\nfig.show()","4e3bfc82":"# extracte data by country\ncountry_data = vaccination_data.groupby(\"country\")\nvaccines.describe()","38311254":"# constrcut a data frame for the total vaccination\n\ntotal_vaccination_per_country = pd.DataFrame()\n\n# constrcut a data frame for the people vaccinated\ntotal_people_vaccinated = pd.DataFrame()\n# constrcut a data frame for the people fully vaccinated\ntotal_people_fully_vaccinated = pd.DataFrame()\n# iso code of countries for mapviz\niso = []\n\n\nfor ctr,group in country_data:\n    total_vaccination_per_country.loc[ctr, [\"total_vaccinations\",\"country\",\"iso_code\"]] = [group[\"total_vaccinations\"].max(),ctr, group.loc[ctr,\"iso_code\"][0]]\n    total_people_vaccinated.loc[ctr, \"people_vaccinated\"] = group[\"people_vaccinated\"].max()\n    total_people_fully_vaccinated.loc[ctr, [\"people_fully_vaccinated\",\"iso_code\"]] = [group[\"people_fully_vaccinated\"].max(), group.loc[ctr,\"iso_code\"][0]]\n    \n\ntotal_people_fully_vaccinated = total_people_fully_vaccinated.fillna(0)\ntotal_people_vaccinated = total_people_vaccinated.fillna(0)\n\nfor ctr,group in country_data:\n    if ctr in world_pop.index:\n        total_people_fully_vaccinated.loc[ctr,['percent_people_vaccination',\"country\"]] = [(total_people_fully_vaccinated.loc[ctr,\"people_fully_vaccinated\"]\/ world_pop.loc[ctr,\"Population (2020)\"])*100,ctr]\n\n\n        \n# sort the data frame in non-ascending sort\ntotal_vaccination_per_country = total_vaccination_per_country.sort_values(by = \"total_vaccinations\", ascending = False)\n\ntotal_people_fully_vaccinated = total_people_fully_vaccinated.sort_values(by = \"people_fully_vaccinated\", ascending = False)\ntotal_people_vaccinated = total_people_vaccinated.sort_values(by = \"people_vaccinated\", ascending = False)\n\n","9d8fd712":"\nplt.rcParams[\"figure.figsize\"] = [14,7]\nplt.subplot(2,2,1)\nsns.barplot(x= total_vaccination_per_country.iloc[:20,:].index, y = total_vaccination_per_country.iloc[:20,0])\nplt.xticks(rotation = \"vertical\")\nplt.title(\"Top20 Total Vaccination per Country\")\n\nplt.subplot(2,2,2)\nsns.barplot(x= total_people_vaccinated.iloc[:20,:].index, y = total_people_vaccinated.iloc[:20,0])\nplt.xticks(rotation = \"vertical\")\nplt.title(\"Top20 Country People Vaccinated\")\n\nplt.subplot(2,2,3)\nsns.barplot(x= total_people_fully_vaccinated.iloc[:20,:].index, y = total_people_fully_vaccinated.iloc[:20,0])\nplt.xticks(rotation = \"vertical\")\nplt.title(\"Top20 Country People fully Vaccinated\")\n\nplt.subplot(2,2,4)\nsns.barplot(x= total_people_fully_vaccinated.iloc[:20,:].index, y = total_people_fully_vaccinated.iloc[:20,2])\nplt.xticks(rotation = \"vertical\")\nplt.title(\"percent of People fully Vaccinated\")\n\nplt.tight_layout()\n\nplt.draw()","ea17ad8d":"fig = px.choropleth(total_vaccination_per_country, locations=\"iso_code\", color='total_vaccinations',\n                    hover_name=\"country\",\n                     projection=\"natural earth\", title=\"Total Vaccinaton by country\",\n                   color_continuous_scale = \"YlGn\")\nfig.show()","9bf42004":"fig = px.choropleth(total_people_fully_vaccinated, locations=\"iso_code\", color='percent_people_vaccination',\n                    hover_name=\"country\",\n                     projection=\"natural earth\", title=\"Prcent of people fully vaccinated in world\",\n                   color_continuous_scale = \"Redor\")\nfig.show()","fb378569":"country_use_vaccine = pd.DataFrame(columns=[\"country\", \"vaccines\", ])\niso_codes = []\n\ncountry_use_vaccine.columns\n\nfor vac,group in vaccines:\n    for ctr in group.index.unique():\n        for vac_list_iter in vac.split(\", \"):\n            country_use_vaccine.loc[country_use_vaccine.shape[0],:] = [ctr,vac_list_iter]\n            iso_codes.append(group[\"iso_code\"][0])\n\n","22192d84":"country_use_vaccine.head()","c55df867":"plt.rcParams[\"figure.figsize\"]=[10,16]\nsns.scatterplot(data = country_use_vaccine, x=\"vaccines\",y=\"country\",hue=\"vaccines\", markers = 'P')\nplt.xticks(rotation = 45)\nplt.draw()\n\n","96630652":"the bars plot on the upper side show the top 20 of total number of doses used by the countries and the number of population vaccinated. The two following graphics shows the most 20 countries that vaccinated the most people and the poucentage of the vaccination in thous countries.","547d805d":"# Country vaccination:\n\nIn this section we will study the progress of vaccination in countries.","2b006a31":"This figure show the most 10 used vaccines in the word. we can see that Moderna and Pfizer\/BioNTech is the most used in the world.","aeb06001":"# Vaccines used in the world.\n\nWe check her the total number of vaccine used allover the word, and the ditrubution of the most ten vaccines used ( this visualization uses tuples of vaccines which do not give us a good istesmation on the exact number of vaccines used as example the Oxford\/AstraZeneca and Pfizer\/BioNTech)\n","272ae987":"This figure show the distribution of the most used vaccines all over the word.","ec44865f":"## Missing Values","a7ce8ce5":"# Preparing data","9ea34a49":"### *which country use which vaccine ?*"}}