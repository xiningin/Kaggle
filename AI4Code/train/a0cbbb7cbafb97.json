{"cell_type":{"deee24f8":"code","91985039":"code","02f9da4c":"code","09d7c57d":"code","52606d08":"code","d40766e2":"code","ff9e5608":"code","ac1f1b8f":"code","abb7eced":"code","086bc32a":"code","5016039e":"code","bb1818d1":"code","e2018b27":"code","d7fb6cba":"code","adba100b":"code","a352d75e":"code","8dba7eb6":"code","d4248140":"code","e9214c3a":"code","4ed0b7d4":"code","68d8e264":"code","1de3a331":"code","dbebe13b":"code","84c28605":"code","d54f5961":"code","8aecdaca":"code","e6f814f0":"code","8a4ac5c8":"code","995af22a":"code","2a837d56":"code","c5f02f08":"code","34041790":"code","22a919f6":"code","c908bc28":"code","640bee25":"code","db52b789":"code","3e8462ae":"code","5142f337":"code","635efeb5":"code","11ec32f1":"code","3f9baf64":"code","6e238c0c":"code","1bc17b09":"code","5c220dd9":"code","58238bbf":"code","40b96ffd":"code","f4f538ea":"code","c99665a1":"code","402e5603":"code","b51ea0d1":"code","f5f9daea":"code","512ed5c6":"markdown","94454bbd":"markdown","2dd6f4e0":"markdown","1c930134":"markdown","e12707fd":"markdown","a04b2d19":"markdown","e0ee5b8c":"markdown","7fe74586":"markdown","cfa2a977":"markdown","66a34f24":"markdown","eccabffb":"markdown","1f391c60":"markdown","44786c61":"markdown","632cbbec":"markdown","844a3f28":"markdown","51caac24":"markdown","0ab9f77b":"markdown","81a720b2":"markdown","d3869354":"markdown","71885759":"markdown","ceb72610":"markdown","af3afe8d":"markdown","d9e28f08":"markdown","1e81ee4c":"markdown","144afca1":"markdown","6a8075c8":"markdown","310edd4f":"markdown","548933ae":"markdown"},"source":{"deee24f8":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport seaborn as sns\nfrom wordcloud import WordCloud","91985039":"data=pd.read_csv('..\/input\/data-analyst-jobs\/DataAnalyst.csv')","02f9da4c":"data.head(2)","09d7c57d":"data.drop(['Unnamed: 0'], axis=1,inplace=True)","52606d08":"def missing_values_table(df):\n        # Total missing values\n        mis_val = df.isnull().sum()\n        \n        # Percentage of missing values\n        mis_val_percent = 100 * df.isnull().sum() \/ len(df)\n        \n        # Make a table with the results\n        mis_val_table = pd.concat([mis_val, mis_val_percent], axis=1)\n        \n        # Rename the columns\n        mis_val_table_ren_columns = mis_val_table.rename(\n        columns = {0 : 'Missing Values', 1 : '% of Total Values'})\n        \n        # Sort the table by percentage of missing descending\n        mis_val_table_ren_columns = mis_val_table_ren_columns[\n            mis_val_table_ren_columns.iloc[:,1] != 0].sort_values(\n        '% of Total Values', ascending=False).round(1)\n        \n        # Print some summary information\n        print (\"Your selected dataframe has \" + str(df.shape[1]) + \" columns.\\n\"      \n            \"There are \" + str(mis_val_table_ren_columns.shape[0]) +\n              \" columns that have missing values.\")\n        \n        # Return the dataframe with missing information\n        return mis_val_table_ren_columns\n","d40766e2":"missing_values_table(data)","ff9e5608":"data['Easy Apply'].value_counts()","ac1f1b8f":"data['Competitors'].value_counts()","abb7eced":"data['Rating'].value_counts()[:5]","086bc32a":"data=data.replace(-1,np.nan)\ndata=data.replace(-1.0,np.nan)\ndata=data.replace('-1',np.nan)","5016039e":"missing_values_table(data)","bb1818d1":"data['Company Name'],_=data['Company Name'].str.split('\\n', 1).str","e2018b27":"data['Job Title'],data['Department']=data['Job Title'].str.split(',', 1).str","d7fb6cba":"data['Salary Estimate'],_=data['Salary Estimate'].str.split('(', 1).str","adba100b":"data['Min_Salary'],data['Max_Salary']=data['Salary Estimate'].str.split('-').str\ndata['Min_Salary']=data['Min_Salary'].str.strip(' ').str.lstrip('$').str.rstrip('K').fillna(0).astype('int')\ndata['Max_Salary']=data['Max_Salary'].str.strip(' ').str.lstrip('$').str.rstrip('K').fillna(0).astype('int')","a352d75e":"data.drop(['Salary Estimate'],axis=1,inplace=True)","8dba7eb6":"data['Easy Apply']=data['Easy Apply'].fillna(False).astype('bool')","d4248140":"df_easy_apply=data[data['Easy Apply']==True]\ndf=df_easy_apply.groupby('Company Name')['Easy Apply'].count().reset_index()\ncompany_opening_df=df.sort_values('Easy Apply',ascending=False).head(10)","e9214c3a":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=company_opening_df,\n    x='Company Name',\n    y='Easy Apply',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n\n)","4ed0b7d4":"data_analyst = data[data['Job Title']=='Data Analyst']\n\n\nsns.set(style=\"white\", palette=\"muted\", color_codes=True)\n\n\nf, axes = plt.subplots(1, 2, figsize=(15, 8), sharex=True)\nsns.despine(left=True)\n\n#Plot a histogram and kernel density estimate\n\nsns.distplot(data_analyst['Min_Salary'], color=\"b\", ax=axes[0])\n\nsns.distplot(data_analyst['Max_Salary'], color=\"r\",ax=axes[1])\n\nplt.setp(axes, yticks=[])\nplt.tight_layout()","68d8e264":"df=data.groupby('Location')[['Max_Salary','Min_Salary']].mean().sort_values(['Max_Salary','Min_Salary'],ascending=False).head(20)","1de3a331":"\nfig = go.Figure()\n\nfig.add_trace(go.Bar(x=df.index,y=df['Min_Salary'],name='Minimum salary'))\nfig.add_trace(go.Bar(x=df.index,y=df['Max_Salary'],name='Maximum Salary'))\n\nfig.update_layout(title='Top 20 cities with their minimum and maximum salaries',barmode='stack')\n\nfig.show()","dbebe13b":"df=data.groupby('Job Title')[['Max_Salary','Min_Salary']].mean().sort_values(['Max_Salary','Min_Salary'],ascending=False).head(20)","84c28605":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=df.index,y=df['Min_Salary'],name='Minimum salary'))\nfig.add_trace(go.Bar(x=df.index,y=df['Max_Salary'],name='Maximum Salary'))\n\nfig.update_layout(title='Top 20 Roles with their minimum and maximum salaries',barmode='stack')\n\nfig.show()","d54f5961":"df=data['Size'].value_counts()","8aecdaca":"df=pd.DataFrame(df)\ndf['employee_size']=df.index","e6f814f0":"df.reset_index(inplace=True)\ndf.drop(['index'],axis=1,inplace=True)","8a4ac5c8":"df=df.rename(columns={\"Size\": \"No_of_companies\"})","995af22a":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='employee_size',\n    y='No_of_companies',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)","2a837d56":"def filter_revenue(x):\n    revenue=0\n    if(x== 'Unknown \/ Non-Applicable' or type(x)==float):\n        revenue=0\n    elif(('million' in x) and ('billion' not in x)):\n        maxRev = x.replace('(USD)','').replace(\"million\",'').replace('$','').strip().split('to')\n        if('Less than' in maxRev[0]):\n            revenue = float(maxRev[0].replace('Less than','').strip())\n        else:\n            if(len(maxRev)==2):\n                revenue = float(maxRev[1])\n            elif(len(maxRev)<2):\n                revenue = float(maxRev[0])\n    elif(('billion'in x)):\n        maxRev = x.replace('(USD)','').replace(\"billion\",'').replace('$','').strip().split('to')\n        if('+' in maxRev[0]):\n            revenue = float(maxRev[0].replace('+','').strip())*1000\n        else:\n            if(len(maxRev)==2):\n                revenue = float(maxRev[1])*1000\n            elif(len(maxRev)<2):\n                revenue = float(maxRev[0])*1000\n    return revenue\n        ","c5f02f08":"data['Max_revenue']=data['Revenue'].apply(lambda x: filter_revenue(x))","34041790":"df=data.groupby('Sector')[['Max_revenue']].mean().sort_values(['Max_revenue'],ascending=False).head(20)","22a919f6":"df.reset_index(inplace=True)","c908bc28":"df","640bee25":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='Sector',\n    y='Max_revenue'\n)\nchart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\nchart.axes.yaxis.label.set_text(\"Revenue(Million dollars)\")\n","db52b789":"df=data.groupby('Industry')[['Max_revenue']].mean().sort_values(['Max_revenue'],ascending=False).head(20)","3e8462ae":"df.reset_index(inplace=True)","5142f337":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='Industry',\n    y='Max_revenue',\n    palette='Set1'\n)\nchart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\nchart.axes.yaxis.label.set_text(\"Revenue(Million dollars)\")","635efeb5":"job_title=data['Job Title'][~pd.isnull(data['Job Title'])]\nwordCloud = WordCloud(width=450,height= 300).generate(' '.join(job_title))\nplt.figure(figsize=(19,9))\nplt.axis('off')\nplt.title(data['Job Title'].name,fontsize=20)\nplt.imshow(wordCloud)\nplt.show()","11ec32f1":"count=data.groupby('Rating')['Company Name'].count()","3f9baf64":"df=pd.DataFrame(count).rename(columns={'Company Name': 'Count'}).reset_index()","6e238c0c":"df=df.sort_values('Rating',ascending=False).head(20)","1bc17b09":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='Rating',\n    y='Count',\n    palette='Set1'\n)\nchart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\nchart.axes.yaxis.label.set_text(\"No. of companies\")","5c220dd9":"df=data.groupby('Industry')[['Min_Salary','Max_Salary']].mean().rename(columns={'Min_Salary':'Avg_min_salary','Max_Salary':'Avg_max_salary'})","58238bbf":"df=df.reset_index()","40b96ffd":"df=df.sort_values(['Avg_max_salary','Avg_max_salary'],ascending=False)","f4f538ea":"fig = go.Figure()\n\nfig.add_trace(go.Bar(x=df.Industry,y=df['Avg_min_salary'],name='Average Minimum salary'))\nfig.add_trace(go.Bar(x=df.Industry,y=df['Avg_max_salary'],name='Average Maximum Salary'))\n\nfig.update_layout(title='Industries with their Average minimum and maximum salaries',barmode='stack')\n\nfig.show()","c99665a1":"df=pd.DataFrame(data[data['Easy Apply']==True]['Job Title'].value_counts()).rename(columns={'Job Title':'No_of_openings'})","402e5603":"df=df.reset_index().rename(columns={'index':'Job Title'})","b51ea0d1":"df=df.head(10)","f5f9daea":"plt.figure(figsize=(10,5))\nchart = sns.barplot(\n    data=df,\n    x='Job Title',\n    y='No_of_openings',\n    palette='Set1'\n)\nchart=chart.set_xticklabels(\n    chart.get_xticklabels(), \n    rotation=65, \n    horizontalalignment='right',\n    fontweight='light',\n \n)\n","512ed5c6":"As some of the columns contains -1 or '-1.0' or '-1' etc . We need to clean this(This is kind of null values)","94454bbd":"Now you can see there are lots of missing values in the dataset. 'Easy Apply' and 'Competitors' has maximum number of missing values (> 50%)\n\nMost companies has null values in easy apply because they are not hiring .","2dd6f4e0":"**maximum companies having size 1-200 or 5000**","1c930134":"#### Split salary into two columns min salary and max salary.","e12707fd":"As you can see from the graph **highest revenue** is from **Art,Entertainment and recreation**","a04b2d19":"# Revenue of different sectors","e0ee5b8c":"Replace -1 or -1.0 or '-1' to NaN","7fe74586":"# Top 20 cities with their minimum and maximum salaries ","cfa2a977":"# Revenue of different Industries","66a34f24":"# Import Libraries and dataset","eccabffb":"# Ratings ","1f391c60":"# Word Cloud of job Title","44786c61":"# Data cleaning ","632cbbec":"### Check for missing values","844a3f28":"### Remove the unnamed column","51caac24":"![image.png](attachment:image.png)","0ab9f77b":"# If you like my work do UPVOTE ","81a720b2":"# Salary Distribution of Data Analyst","d3869354":"#          *Data Analyst jobs visualization*","71885759":"**Data includes job title , salary estimation , job description , rating ,company name , location and many more ...**","ceb72610":"**These are the top 10 companies hiring for Data analyst roles**","af3afe8d":"# Industries with their Average minimum and maximum salaries","d9e28f08":"# Size of Employees Vs No of Companies","1e81ee4c":"# About Dataset\n\nThis dataset was created by picklesueat and contains more than 2000 job listing for data analyst positions, with features such as:\n\n* Salary Estimate\n* Location\n* Company Rating\n* Job Description\n  and more.\n","144afca1":"# Lets explore the data","6a8075c8":"# Top 20 Roles with their minimum and maximum salaries","310edd4f":"# Jobs with Openings","548933ae":"# Current openings "}}