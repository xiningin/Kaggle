{"cell_type":{"87a84f41":"code","c30a08a8":"code","023235d6":"code","3346cf3b":"code","a2f6a237":"code","e7a0e283":"code","8e55132e":"code","3b311650":"code","782f7aed":"code","cef60a2e":"code","508efaac":"code","c6c64153":"code","8557db5c":"code","f9924780":"code","5fc5959d":"code","5288662a":"code","9de2d84a":"code","6814ae7f":"code","7ed97322":"code","d8c32add":"code","263dabe3":"code","4fd1827d":"code","018bd671":"code","d3bbf71a":"code","fbb0beb6":"markdown","592069c8":"markdown","4ad1aab9":"markdown","ef84d887":"markdown","58127b2d":"markdown","a5ff944e":"markdown","544a1041":"markdown"},"source":{"87a84f41":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom scipy.io import wavfile\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c30a08a8":"frequency_sampling, audio_signal = wavfile.read(\"..\/input\/deam-songs\/content\/songs\/1003\/vocals.wav\")","023235d6":"print('\\nSignal shape:', audio_signal.shape)\nprint('Signal Datatype:', audio_signal.dtype)\nprint('Signal duration:', round(audio_signal.shape[0] \/ \nfloat(frequency_sampling), 2), 'seconds')","3346cf3b":"audio_signal = audio_signal \/ np.power(2, 15)","a2f6a237":"audio_signal = audio_signal [:100]\ntime_axis = 1000 * np.arange(0, len(audio_signal), 1) \/ float(frequency_sampling)","e7a0e283":"plt.plot(time_axis, audio_signal, color='blue')\nplt.xlabel('Time (milliseconds)')\nplt.ylabel('Amplitude')\nplt.title('Input audio signal')\nplt.show()","8e55132e":"length_signal = len(audio_signal)\nhalf_length = np.ceil((length_signal + 1) \/ 2.0).astype(np.int)","3b311650":"signal_frequency = np.fft.fft(audio_signal)","782f7aed":"signal_frequency = abs(signal_frequency[0:half_length]) \/ length_signal\nsignal_frequency **= 2","cef60a2e":"len_fts = len(signal_frequency)","508efaac":"if length_signal % 2:\n   signal_frequency[1:len_fts] *= 2\nelse:\n   signal_frequency[1:len_fts-1] *= 2","c6c64153":"signal_power = 10 * np.log10(signal_frequency)","8557db5c":"x_axis = np.arange(0, half_length, 1) * (frequency_sampling \/ length_signal) \/ 1000.0","f9924780":"plt.figure()\nplt.plot(x_axis, signal_power, color='red')\nplt.xlabel('Frequency (kHz)')\nplt.ylabel('Signal power (dB)')\nplt.show()","5fc5959d":"!pip install SpeechRecognition","5288662a":"import speech_recognition as sr\nsr.__version__","9de2d84a":"r = sr.Recognizer()","6814ae7f":"deam = sr.AudioFile('..\/input\/deam-songs\/content\/songs\/1003\/vocals.wav')","7ed97322":"with deam as source:\n    audio = r.record(source)","d8c32add":"type(audio)","263dabe3":"#using google web speech API\nr.recognize_google(audio)","4fd1827d":"import librosa\nimport librosa.display\nimport json\nimport tensorflow as tf\nfrom matplotlib.pyplot import specgram\nimport glob \nimport os\nfrom tqdm import tqdm\nimport pickle\nimport IPython.display as ipd  # To play sound in the notebook","018bd671":"# Use one audio file in previous parts again\nfname = '\/kaggle\/input\/deam-songs\/content\/songs\/1003\/vocals.wav'  \ndata, sampling_rate = librosa.load(fname)\nplt.figure(figsize=(15, 5))\nlibrosa.display.waveplot(data, sr=sampling_rate)\n\n# Paly it again to refresh our memory\nipd.Audio(data, rate=sampling_rate)","d3bbf71a":"#Code by Olga Belitskaya https:\/\/www.kaggle.com\/olgabelitskaya\/sequential-data\/comments\nfrom IPython.display import display,HTML\nc1,c2,f1,f2,fs1,fs2=\\\n'#eb3434','#eb3446','Akronim','Smokum',30,15\ndef dhtml(string,fontcolor=c1,font=f1,fontsize=fs1):\n    display(HTML(\"\"\"<style>\n    @import 'https:\/\/fonts.googleapis.com\/css?family=\"\"\"\\\n    +font+\"\"\"&effect=3d-float';<\/style>\n    <h1 class='font-effect-3d-float' style='font-family:\"\"\"+\\\n    font+\"\"\"; color:\"\"\"+fontcolor+\"\"\"; font-size:\"\"\"+\\\n    str(fontsize)+\"\"\"px;'>%s<\/h1>\"\"\"%string))\n    \n    \ndhtml('Be patient. Mar\u00edlia Prata, @mpwolke was Here' )","fbb0beb6":"#Recognizer class","592069c8":"#\"The knot count your blessing and connect your call rain when the pain in my ball and chain\"\n\nI simply didn't get that lyrics:  Connect your call rain? The pain in my ball? And Chain?","4ad1aab9":"#Code by Salman Ibne Eunus https:\/\/www.kaggle.com\/salmaneunus\/a-basic-guide-to-speech-recognition-2","ef84d887":"![](https:\/\/www.fastmetrics.com\/support\/wp-content\/uploads\/2014\/06\/wav-file-image.jpg)fastmetrics.com","58127b2d":"#Now I have the lyrics working perfectly.","a5ff944e":"#Characterizing the audio signal","544a1041":"#Loading an audio file"}}