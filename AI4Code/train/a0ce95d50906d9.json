{"cell_type":{"4f7a8c55":"code","4659b6ab":"code","4b8cdfcd":"code","65e8419d":"code","b2b1b284":"code","b566f374":"code","54208b23":"code","baca215e":"markdown","34a4ced8":"markdown","6d4793b5":"markdown","5fb28e1a":"markdown","0c26e7ae":"markdown","e0ec8c77":"markdown","30d75b90":"markdown","316a4833":"markdown","4aa10b7f":"markdown"},"source":{"4f7a8c55":"import numpy as np\nimport pandas as pd\nimport itertools\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.metrics import accuracy_score, confusion_matrix","4659b6ab":"#Read the data\ndf=pd.read_csv('..\/input\/textdb3\/fake_or_real_news.csv')\n\n#Get shape and head\ndf.shape\ndf.head()","4b8cdfcd":"#DataFlair - Get the labels\nlabels=df.label\nlabels.head()","65e8419d":"#DataFlair - Split the dataset\nx_train,x_test,y_train,y_test=train_test_split(df['text'], labels, test_size=0.2, random_state=7)","b2b1b284":"##DataFlair - Initialize a TfidfVectorizer\ntfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df =0.9)\n## DataFlair - fit and transform train set, transform test set\ntfidf_train = tfidf_vectorizer.fit_transform(x_train)\ntfidf_test = tfidf_vectorizer.transform(x_test)","b566f374":"#DataFlair - Initialize a PassiveAggressiveClassifier\npac=PassiveAggressiveClassifier(max_iter=50)\npac.fit(tfidf_train,y_train)\n\n#DataFlair - Predict on the test set and calculate accuracy\ny_pred=pac.predict(tfidf_test)\nscore=accuracy_score(y_test,y_pred)\nprint(f'Accuracy: {round(score*100,2)}%')","54208b23":"#DataFlair - Build confusion matrix\nconfusion_matrix(y_test,y_pred, labels=['FAKE','REAL'])","baca215e":"### Now, fit and transform the vectorizer on the train set, and transform the vectorizer on the test set.","34a4ced8":"## Make necessary imports ","6d4793b5":"We got an accuracy of 92.82% with this model. Finally, let\u2019s print out a confusion matrix to gain insight into the number of false and true negatives and positives.","5fb28e1a":"## And get the labels from the DataFrame","0c26e7ae":"## Now, let\u2019s read the data into a DataFrame, and get the shape of the data and the first 5 records.","e0ec8c77":"Summary\n\nToday, we learned to detect fake news with Python. We took a political dataset, implemented a TfidfVectorizer, initialized a PassiveAggressiveClassifier, and fit our model. We ended up obtaining an accuracy of 92.82% in magnitude.\n\nHope you enjoyed the fake news detection python project. Keep visiting DataFlair for more interesting python, data science, and machine learning projects.","30d75b90":"### Split the dataset into training and testing sets.","316a4833":"#### Then, we\u2019ll predict on the test set from the TfidfVectorizer and calculate the accuracy with accuracy_score() from sklearn.metrics.","4aa10b7f":"Thanks to DataFlair I learn a lot from it."}}