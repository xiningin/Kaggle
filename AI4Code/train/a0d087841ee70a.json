{"cell_type":{"10133fda":"code","dc9780d8":"code","c59dd7ef":"code","780bff90":"code","29a36a69":"code","777a5f73":"code","3e43768f":"code","41833b0b":"code","4772e7ee":"code","62f9bc2f":"code","9d49ba99":"code","7a016fb9":"code","70a1db20":"code","62007922":"code","7cd5941c":"code","3e9e5d73":"code","22038807":"code","e084e272":"code","d03a51a3":"markdown","ba18774a":"markdown","89f080e2":"markdown"},"source":{"10133fda":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSD8B3RhJpkZ-tjogV3-8g3r-uBPFrbQMWrbs6QjuQYKDrYgKtz&usqp=CAU',width=400,height=400)","dc9780d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn import feature_extraction, linear_model, model_selection, preprocessing\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\nfrom plotly.offline import iplot\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","c59dd7ef":"nRowsRead = 1000 # specify 'None' if want to read whole file\ndf = pd.read_csv('..\/input\/datasettransformcsv\/datasetTransform1.CSV', delimiter=';', encoding = \"ISO-8859-1\", nrows = nRowsRead)\ndf.dataframeName = 'datasetTransform1.CSV'\nnRow, nCol = df.shape\nprint(f'There are {nRow} rows and {nCol} columns')","780bff90":"df.head()","29a36a69":"fig,axes = plt.subplots(1,1,figsize=(20,5))\nsns.heatmap(df.isna(),yticklabels=False,cbar=False,cmap='viridis')\nplt.show()","777a5f73":"plot_data = df.groupby(['SARS-Cov-2 exam result BIN'], as_index=False).Hematocrit.sum()\n\nfig = px.line(plot_data, x='SARS-Cov-2 exam result BIN', y='Hematocrit')\nfig.show()","3e43768f":"plot_data = df.groupby(['Patient addmited to regular ward (1=yes, 0=no)'], as_index=False).Platelets.sum()\n\nfig = px.line(plot_data, x='Patient addmited to regular ward (1=yes, 0=no)', y='Platelets')\nfig.show()","41833b0b":"cnt_srs = df['Patient age quantile'].value_counts().head()\ntrace = go.Bar(\n    y=cnt_srs.index[::-1],\n    x=cnt_srs.values[::-1],\n    orientation = 'h',\n    marker=dict(\n        color=cnt_srs.values[::-1],\n        colorscale = 'Purples',\n        reversescale = True\n    ),\n)\n\nlayout = dict(\n    title='Patient age quantile ',\n    )\ndata = [trace]\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig, filename=\"Patient age quantile\")","4772e7ee":"# Grouping it by age and province\nplot_data = df.groupby(['Patient age quantile', 'SARS-Cov-2 exam result BIN'], as_index=False).Hematocrit.sum()\n\nfig = px.bar(plot_data, x='Patient age quantile', y='Hematocrit', color='SARS-Cov-2 exam result BIN')\nfig.show() ","62f9bc2f":"dfcorr=df.corr()\ndfcorr","9d49ba99":"plt.figure(figsize=(10,4))\nsns.heatmap(df.corr(),annot=False,cmap='vlag')\nplt.show()","7a016fb9":"cat = []\nnum = []\nfor col in df.columns:\n    if df[col].dtype=='O':\n        cat.append(col)\n    else:\n        num.append(col)  \n        \n        \nnum ","70a1db20":"plt.style.use('dark_background')\ng = (sns.jointplot(\"Hematocrit\", \"Leukocytes\",data=df, color=\"r\").plot_joint(sns.kdeplot, zorder=0, n_levels=6))","62007922":"fig=sns.lmplot(x=\"Hematocrit\", y=\"Platelets\",data=df)","7cd5941c":"sns.barplot(x=df['Hematocrit'].value_counts().index,y=df['Hematocrit'].value_counts())","3e9e5d73":"    plt.figure(figsize=(18,9))\n    sns.factorplot(x=col,y='Hematocrit',data=df)\n    plt.tight_layout()\n    plt.show()","22038807":"fig = px.pie( values=df.groupby(['Hematocrit']).size().values,names=df.groupby(['Hematocrit']).size().index)\nfig.update_layout(\n    title = \"Hematocrit  distribution \",\n    font=dict(\n        family=\"Arial, monospace\",\n        size=15,\n        color=\"#7f7f7f\"\n    )\n    )   \n    \npy.iplot(fig)","e084e272":"#codes from Rodrigo Lima  @rodrigolima82\nfrom IPython.display import Image\nImage(url = 'https:\/\/encrypted-tbn0.gstatic.com\/images?q=tbn%3AANd9GcSTbA1xa9yfFJBgPE6hFD3LF1vhxtoNmxrjjrTHSjirr0saZtjq&usqp=CAU',width=400,height=400)","d03a51a3":"Kaggle Notebook runner: Mar\u00edlia Prata  @mpwolke","ba18774a":"docs.h2o.ai","89f080e2":"theobjects.com"}}