{"cell_type":{"94e0c35f":"code","37fdb573":"code","17898284":"code","df3d5570":"code","0006e5f4":"code","d731f748":"code","d461b51d":"code","d06c7e07":"code","c7a22229":"code","4d9ded21":"code","dee316af":"code","4059a4d9":"code","00192004":"code","fcb9ada8":"code","c801003c":"code","2b006225":"code","f64945eb":"code","e330cd75":"code","f3ee915f":"code","3cf7db1f":"code","a1c2f183":"code","971d6001":"code","fbe267ab":"code","5e321afa":"code","a5522518":"code","12f572c8":"code","84e6f6f1":"code","c2f1c9e8":"code","836ae171":"code","26764ca4":"code","f5085de1":"code","130f7d38":"code","90056728":"code","fe8bfb90":"code","eda2df1b":"code","75226d32":"code","223da78a":"code","cbe1e8b4":"code","27493803":"code","882765c0":"code","e2a6b6bd":"code","4b44e9b3":"code","f7d96b37":"code","29dfcbac":"code","1088da20":"code","af6af860":"code","6173fd21":"code","b97f816a":"code","6520b63a":"code","c0356aa2":"code","f0566d7b":"code","ce4a8783":"code","31ca9ef7":"code","860f62d6":"code","2409d7ba":"code","a410496a":"code","341249b5":"code","b675a834":"code","f0bf38ff":"code","665b534d":"code","2711f314":"code","26d53f76":"code","8ba3ed34":"code","03dc2ee1":"code","5aa3a7c1":"code","c7a106e8":"code","e2ec6b06":"code","c63a7eeb":"code","86814373":"code","504f6964":"code","3c69f15d":"markdown","34d0f39f":"markdown","10819d5b":"markdown","10f4f4cb":"markdown","a70b613a":"markdown","e4347878":"markdown","8bb161d8":"markdown","44253bf3":"markdown","17b9f5a5":"markdown","cf7f7d24":"markdown","4fc3ee9a":"markdown"},"source":{"94e0c35f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","37fdb573":"train=pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest=pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","17898284":"train.head()","df3d5570":"test","0006e5f4":"train.shape","d731f748":"train.isnull().sum()","d461b51d":"test.isnull().sum()","d06c7e07":"train.Embarked.mode()","c7a22229":"train[\"Embarked\"].fillna(value=\"S\",inplace=True)\ntrain.isnull().sum()","4d9ded21":"train.drop([\"Cabin\"],axis=1,inplace=True)","dee316af":"train.head()","4059a4d9":"test.drop([\"Cabin\"],axis=1,inplace=True)","00192004":"test.head()","fcb9ada8":"train.describe()","c801003c":"test.describe()","2b006225":"import re\ndef split_it(data):\n    result = re.search('^.*,(.*)\\.\\s.*$', data)\n    if result.group(1) not in [' Mr', ' Miss', ' Mrs', ' Master']:\n        return ' Misc'\n    else:\n        return result.group(1)\n\ntrain['Title'] = train['Name'].apply(split_it)","f64945eb":"train","e330cd75":"test","f3ee915f":"test['Title'] = test['Name'].apply(split_it)\ntest","3cf7db1f":"train[\"Age\"].fillna(train.groupby(\"Title\")[\"Age\"].transform(\"median\"),inplace=True)\ntest[\"Age\"].fillna(test.groupby(\"Title\")[\"Age\"].transform(\"median\"),inplace=True)","a1c2f183":"train.drop(['Fare','PassengerId','Ticket','Name','Title'],axis=1,inplace=True)\ntest.drop(['Fare','PassengerId','Ticket','Name','Title'],axis=1,inplace=True)","971d6001":"train.isnull().sum()","fbe267ab":"test.isnull().sum()","5e321afa":"import matplotlib.pyplot as plt\nimport seaborn as sns","a5522518":"x=train[\"Survived\"].value_counts()\nlabel=[\"Not Survived(0)\",\"Survived(1)\"]\ncurrent_palette = sns.color_palette(\"pastel\")\nplt.figure(figsize=(12,6))\nplt.pie(x,labels=label,autopct=\"%1.1f%%\",colors=current_palette)\nplt.show()","12f572c8":"sns.countplot(x='Sex',hue=\"Survived\",data=train,palette=sns.color_palette(\"pastel\"))\nplt.gcf().set_size_inches(6,5)","84e6f6f1":"Pclass=['class1','class2','class3']\nplt.style.use('seaborn-whitegrid')\nax=sns.countplot(data=train,x='Pclass',hue='Survived',palette= sns.color_palette(\"pastel\"))\nplt.legend(loc='upper left',labels=[\"Percentage not survived or unknown\",\"Percentage of survived\"])\nhue_order = ['Third', 'Second', 'First']\nplt.gcf().set_size_inches(8,6)\nplt.show()","c2f1c9e8":"Y=train[\"Embarked\"].value_counts()\nplt.style.use(\"seaborn\")\nmylabel=['Southampton','Cherbourg','Queenstown']\ncolors =sns.color_palette(\"pastel\")\nplt.pie(Y,labels=mylabel,autopct=\"%1.1f%%\",startangle=15,colors=colors)\nplt.gcf().set_size_inches(12,6)\nplt.show()","836ae171":"sns.countplot(x=train['Survived'],hue=pd.cut(train['Age'],5),palette=sns.color_palette(\"Set2\"))\nplt.style.use(\"seaborn-whitegrid\")\nplt.gcf().set_size_inches(8,6)","26764ca4":"dum=pd.get_dummies(train.Embarked)\ndum1=pd.get_dummies(test.Embarked)","f5085de1":"merged= pd.concat([train,dum],axis=1)\nmerged1= pd.concat([test,dum1],axis=1)","130f7d38":"dum2= pd.get_dummies(merged.Sex)\ndum3= pd.get_dummies(merged1.Sex)\n","90056728":"Train= pd.concat([merged,dum2],axis=1)\nTest= pd.concat([merged1,dum3],axis=1)","fe8bfb90":"Train.drop(['Sex','female','Embarked','S'],axis=1,inplace=True)\nTest.drop(['Sex','female','Embarked','S'],axis=1,inplace=True)","eda2df1b":"Train.head()","75226d32":"Test.head()","223da78a":"Train.isnull().sum()","cbe1e8b4":"Test.isnull().sum()","27493803":"Train.head()","882765c0":"#spliting train and test\nfrom sklearn.model_selection import train_test_split","e2a6b6bd":"X=Train.drop(\"Survived\",axis=\"columns\")","4b44e9b3":"X","f7d96b37":"y=Train[\"Survived\"]\ny","29dfcbac":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)","1088da20":"print(len(X_train),len(y_train),len(X_test),len(y_test))","af6af860":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression()","6173fd21":"lr.fit(X_train,y_train)","b97f816a":"lr.predict(X_test)","6520b63a":"lr.score(X_test,y_test)","c0356aa2":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier()","f0566d7b":"rfc.fit(X_train,y_train)","ce4a8783":"rfc.predict(X_test)","31ca9ef7":"rfc.score(X_test,y_test)","860f62d6":"from sklearn.tree import DecisionTreeClassifier\ndtc=DecisionTreeClassifier()","2409d7ba":"dtc.fit(X_train,y_train)","a410496a":"dtc.predict(X_test)","341249b5":"dtc.score(X_test,y_test)","b675a834":"from sklearn.neighbors import KNeighborsClassifier\nknc=KNeighborsClassifier()","f0bf38ff":"knc.fit(X_train,y_train)","665b534d":"knc.predict(X_test)","2711f314":"knc.score(X_test,y_test)","26d53f76":"from sklearn.svm import SVC\nsvc=SVC()","8ba3ed34":"svc.fit(X_train,y_train)","03dc2ee1":"svc.predict(X_test)","5aa3a7c1":"svc.score(X_test,y_test)","c7a106e8":"rfc.fit(X,y)","e2ec6b06":"final=rfc.predict(Test)\nfinal.sum()","c63a7eeb":"gender_submission=pd.read_csv(\"..\/input\/titanic\/gender_submission.csv\")\ngender_submission","86814373":"submission=pd.DataFrame({\"PassengerId\":gender_submission[\"PassengerId\"],\"Survived\":final})\nsubmission","504f6964":"submission.to_csv('submission.csv',index=False)","3c69f15d":"# **Roadmap:**\n* Importing dataset \n* Handling missing values\n* Data visualization\n* Handling Categorical values\n* Machine Learning\n* Logistic Regression\n* Decision Tree Classifier\n* K Neighbors Classifier\n* Support Vector Classifier\n* Final Model","34d0f39f":"# Decision Tree Classifier","10819d5b":"# Logistic Regression","10f4f4cb":"# Handling missing values","a70b613a":"# Support Vector Classifier","e4347878":"# Importing dataset","8bb161d8":"# Final Model","44253bf3":"# Data Visualization","17b9f5a5":"# Handling Categorical values","cf7f7d24":"# Machine Learning","4fc3ee9a":"# K Neighbors Classifier"}}