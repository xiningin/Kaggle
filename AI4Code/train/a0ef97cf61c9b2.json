{"cell_type":{"8d9308f4":"code","48a73d43":"code","4cf3724f":"code","d2f37e95":"code","18b066d0":"code","03cb715e":"code","a2358f6d":"code","585b8ec4":"code","8d4fb133":"code","cfc2c464":"code","1bad0a51":"code","40f1e180":"code","25c49ef9":"code","62ea75a4":"code","ec257f54":"code","0d94c2eb":"code","6190ba0d":"code","c10eeb68":"code","7fd14418":"code","6136cd49":"code","4b5bdb0b":"code","b0f4be69":"code","bf116754":"code","ef544ab1":"code","486283d7":"code","7e1ca77b":"code","84a905c7":"code","086c4aba":"code","7cf88c87":"code","94c85c11":"code","405c949e":"code","a9ded23d":"code","90128b21":"code","5c1c3c36":"code","246d2b40":"markdown","8bb523e5":"markdown","86fe2573":"markdown","b6ce455b":"markdown","efef0f86":"markdown","3fbb9ae5":"markdown","42c6e00d":"markdown","5504de8f":"markdown","c61eac1f":"markdown","c83fae85":"markdown","8f9427f3":"markdown","75815e1a":"markdown","72b00277":"markdown","5c8509c5":"markdown","891bb1d3":"markdown","d0ff7e05":"markdown","9dfbe336":"markdown","e27f62c2":"markdown","2f0f9f32":"markdown","996f826c":"markdown","0216ee20":"markdown"},"source":{"8d9308f4":"import numpy as np\nimport pandas as pd\n\n# data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport nltk\nfrom PIL import Image\nfrom wordcloud import WordCloud,STOPWORDS\nfrom nltk.corpus import stopwords\n\nimport re\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","48a73d43":"data = pd.read_csv('..\/input\/data-science-youtube-video-meta-data\/data-science-youtube-channel-videos-metadata.csv')","4cf3724f":"data.head(2)","d2f37e95":"data.tail(2)","18b066d0":"print('='*50)\nprint(\"Columns in data\")\nprint('='*50)\nprint(data.columns.values)","03cb715e":"print(f\"Total number of samples in data are : {data.shape[0]}\")\nprint('='*50)\nprint(f\"Total number of features in data are : {data.shape[1]}\")","a2358f6d":"data.info()","585b8ec4":"data.describe()","8d4fb133":"data.isna().sum()","cfc2c464":"data['viewCount'] = data['viewCount'].astype(float)","1bad0a51":"publish_time = pd.to_datetime(data['publishedAt'], format='%Y-%m-%dT%H:%M:%S%fZ')\ndata['publish_date'] = publish_time.dt.date\ndata['publish_time'] = publish_time.dt.time\ndata['publish_hour'] = publish_time.dt.hour","40f1e180":"# Clean the data\ndef clean_text(text):\n    text = str(text).lower()\n    text = re.sub(r'[^(a-zA-Z)\\s]','', text)\n    return text\ndata['videoTitle'] = data['videoTitle'].apply(clean_text)","25c49ef9":"data['videoDescription'] = data['videoDescription'].apply(clean_text)","62ea75a4":"data.head(2)","ec257f54":"publish_h = [0] * 24\n\nfor index, row in data.iterrows():\n    publish_h[row[\"publish_hour\"]] += 1\n    \nvalues = publish_h\nind = np.arange(len(values))\n\n\n# Creating new plot\nfig = plt.figure(figsize=(20,10))\nax = fig.add_subplot(111)\nax.yaxis.grid()\nax.xaxis.grid()\nbars = ax.bar(ind, values)\n\n# Sampling of Colormap\nfor i, b in enumerate(bars):\n    b.set_color(plt.cm.viridis((values[i] - min(values))\/(max(values)- min(values))))\n    \nplt.ylabel('Number of published videos', fontsize=20)\nplt.xlabel('Time of publishing', fontsize=20)\nplt.title('When most of the videos are published?', fontsize=35, fontweight='bold')\nplt.xticks(np.arange(0, len(ind), len(ind)\/6), [0, 4, 8, 12, 16, 20])\n\nplt.show()","0d94c2eb":"plt.figure(figsize = (12,6))\n\nplt.subplot(221)\ng1 = sns.distplot(data['viewCount'])\ng1.set_title(\"VIEWS DISTRIBUITION\", fontsize=16)\n\nplt.subplot(224)\ng2 = sns.distplot(data['likeCount'],color='green')\ng2.set_title('LIKES DISTRIBUITION', fontsize=16)\n\nplt.subplot(223)\ng3 = sns.distplot(data['dislikeCount'], color='r')\ng3.set_title(\"DISLIKES DISTRIBUITION\", fontsize=16)\n\nplt.subplot(222)\ng4 = sns.distplot(data['commentCount'])\ng4.set_title(\"COMMENTS DISTRIBUITION\", fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.show()","6190ba0d":"data['viewCount_log'] = np.log(data['viewCount'] + 1)\ndata['likeCount_log'] = np.log(data['likeCount'] + 1)\ndata['dislikeCount_log'] = np.log(data['dislikeCount'] + 1)\ndata['commentCount_log'] = np.log(data['commentCount'] + 1)","c10eeb68":"plt.figure(figsize = (12,6))\n\nplt.subplot(221)\ng1 = sns.distplot(np.log(data['viewCount_log'] + 1))\ng1.set_title(\"VIEWS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(222)\ng2 = sns.distplot(np.log(data['likeCount_log']+ 1),color='green')\ng2.set_title('LIKES LOG DISTRIBUITION', fontsize=16)\n\nplt.subplot(223)\ng3 = sns.distplot(np.log(data['dislikeCount_log']+ 1), color='r')\ng3.set_title(\"DISLIKES LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplot(224)\ng4 = sns.distplot(np.log(data['commentCount_log']+ 1))\ng4.set_title(\"COMMENTS LOG DISTRIBUITION\", fontsize=16)\n\nplt.subplots_adjust(wspace = 0.2, hspace = 0.4,top = 0.9)\n\nplt.show()","7fd14418":"plt.figure(figsize = (14,9))\n\nplt.subplot(211)\ng = sns.countplot('videoCategoryLabel', data=data, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Counting the Video Category's \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Count\", fontsize=12)\n\nplt.subplot(212)\ng1 = sns.boxplot(x='videoCategoryLabel', y='viewCount_log', data=data, palette=\"Set1\")\ng1.set_xticklabels(g.get_xticklabels(),rotation=45)\ng1.set_title(\"Views Distribuition by Category Names\", fontsize=20)\ng1.set_xlabel(\"\", fontsize=15)\ng1.set_ylabel(\"Views(log)\", fontsize=15)\n\nplt.subplots_adjust(hspace = 0.9, top = 0.9)\n\nplt.show()","6136cd49":"plt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='videoCategoryLabel', y='likeCount_log', data=data, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Likes Distribuition by Category Names \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Likes(log)\", fontsize=12)\nplt.show()","4b5bdb0b":"plt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='videoCategoryLabel', y='dislikeCount_log', data=data, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Dislikes Distribuition by Category Names \", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Dislikes(log)\", fontsize=12)\nplt.show()","b0f4be69":"plt.figure(figsize = (14,6))\n\ng = sns.boxplot(x='videoCategoryLabel', y='commentCount_log', data=data, palette=\"Set1\")\ng.set_xticklabels(g.get_xticklabels(),rotation=45)\ng.set_title(\"Comments Distribuition by Category Names\", fontsize=15)\ng.set_xlabel(\"\", fontsize=12)\ng.set_ylabel(\"Comments Count(log)\", fontsize=12)\n\nplt.show()","bf116754":"data.info()","ef544ab1":"data['like_rate'] =  data['likeCount'] \/ data['viewCount'] * 100\ndata['dislike_rate'] =  data['dislikeCount'] \/ data['viewCount'] * 100\ndata['comment_rate'] =  data['commentCount'] \/ data['viewCount'] * 100","486283d7":"data = data.replace([np.inf, -np.inf], np.nan)","7e1ca77b":"plt.figure(figsize = (9,6))\n\ng1 = sns.distplot(data['dislike_rate'], color='red',hist=False, label=\"Dislike\")\ng1 = sns.distplot(data['like_rate'], color='green',hist=False, label=\"Like\")\ng1 = sns.distplot(data['comment_rate'],hist=False,label=\"Comment\")\ng1.set_title('CONVERT RATE DISTRIBUITION', fontsize=16)\nplt.xlabel('rate')\nplt.legend()\nplt.show()","84a905c7":"plt.figure(figsize = (10,8))\n\n#Let's verify the correlation of each value\nsns.heatmap(data.corr(), annot=True)\nplt.show()","086c4aba":"publish_h = [0] * 24\n\nfor index, row in us_videos_first.iterrows():\n    publish_h[row[\"publish_hour\"]] += 1\n    \nvalues = publish_h\nind = np.arange(len(values))\n\n\n# Creating new plot\nfig = plt.figure(figsize=(20,10))\nax = fig.add_subplot(111)\nax.yaxis.grid()\nax.xaxis.grid()\nbars = ax.bar(ind, values)\n\n# Sampling of Colormap\nfor i, b in enumerate(bars):\n    b.set_color(plt.cm.viridis((values[i] - min(values))\/(max(values)- min(values))))\n    \nplt.ylabel('Number of videos that got trending', fontsize=20)\nplt.xlabel('Time of publishing', fontsize=20)\nplt.title('Best time to publish video', fontsize=35, fontweight='bold')\nplt.xticks(np.arange(0, len(ind), len(ind)\/6), [0, 4, 8, 12, 16, 20])\n\nplt.show()","7cf88c87":"sns.distplot(data['like_rate'])","94c85c11":"sns.countplot('videoCategoryId', data=data)\nplt.show()","405c949e":"data['videoCategoryId'].value_counts()","a9ded23d":"def build_wordcloud(data, title):\n    wordcloud = WordCloud(\n        background_color='gray', \n        stopwords=set(STOPWORDS), \n        max_words=500, \n        max_font_size=40, \n        random_state=666\n    ).generate(str(data))\n\n    fig = plt.figure(1, figsize=(10,10))\n    plt.axis('off')\n    fig.suptitle(title, fontsize=16)\n    fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()","90128b21":"build_wordcloud(data['videoTitle'], 'Prevalent words in title')","5c1c3c36":"build_wordcloud(data['videoDescription'], 'Prevalent words in video description')","246d2b40":"If you like this notebook, please make sure to give an upvote, it helps a lot and motivates me to make much more good-quality content\n\nIf you don't like my work, please leave a comment on what can I do to make it better!","8bb523e5":"# Data Visulization","86fe2573":"Let's have look at example samples.","b6ce455b":"About dataset.","efef0f86":"## Engagement features\nI will create some new variables to us analyse the percent of likes, dislikes, comment by each category to discover what category have the highest engagement","3fbb9ae5":"## Missing Value","42c6e00d":"Work in Progress... \u23f3","5504de8f":"![](https:\/\/img.etimg.com\/thumb\/width-640,height-480,imgsize-92141,resizemode-1,msid-72456247\/industry\/media\/entertainment\/youtube-in-india-has-over-265-mn-monthly-active-users-1200-channels-with-1-mn-subs\/untitled-8.jpg)\n\n<font size=1><center><a href='https:\/\/economictimes.indiatimes.com\/industry\/media\/entertainment\/youtube-in-india-has-over-265-mn-monthly-active-users-1200-channels-with-1-mn-subs\/articleshow\/72456212.cms?from=mdr'>Source: economictimes.indiatimes.com <\/a><\/center><\/font>","c61eac1f":"# Loading libraries","c83fae85":"<font color='blue' size=6>\n    <center>\n        60+ Data Science YouTube Channel Video metadata\n    <\/center>\n<\/font>\n<hr\/>\n<font color='red' size=3> - Durgesh Samariya | TheMLPhDStudent","8f9427f3":"best time to publish video","75815e1a":"# Exploring Data","72b00277":"Let's have look at the distribution of likes, dislikes, votes and comments.","5c8509c5":"Convert dtype of columns.","891bb1d3":"Replacing infinity values","d0ff7e05":"# Wordcloud","9dfbe336":"# Text Pre-processing","e27f62c2":"## New Fetures","2f0f9f32":"> YouTube is an American online video-sharing platform headquartered in San Bruno, California. Three former PayPal employees\u2014Chad Hurley, Steve Chen, and Jawed Karim\u2014created the service in February 2005. Google bought the site in November 2006 for US$1.65 billion; YouTube now operates as one of Google's subsidiaries. \n> [Source: YouTube, Wikipedia](https:\/\/en.wikipedia.org\/wiki\/YouTube)","996f826c":"# Reading data","0216ee20":"Let's check number of samples and features in data."}}