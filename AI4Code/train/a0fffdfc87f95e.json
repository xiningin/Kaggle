{"cell_type":{"6fcc8cbe":"code","14c87931":"code","aedf1870":"code","6bde5c58":"code","4f2ec08e":"code","13f71c3f":"code","24144876":"code","1f2d95b7":"code","ab293f89":"code","45109ba0":"code","594e4a2b":"code","c6cf266c":"code","67f65ae1":"code","20044bea":"code","122c775d":"code","8c0da7ca":"code","a29b4280":"code","75691011":"code","cf2177e9":"code","6ef8151e":"code","af361a8c":"markdown","164fd563":"markdown","93496503":"markdown","c8d060a4":"markdown","8027c627":"markdown","8553c44c":"markdown","2a84fee6":"markdown","19f600e2":"markdown","6b71e5aa":"markdown","b8f5f4bc":"markdown"},"source":{"6fcc8cbe":"import matplotlib.pyplot as plt\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 20, 10\nimport requests, pandas as pd, numpy as np\nfrom pandas import DataFrame\nfrom io import StringIO\nimport time, json\nfrom datetime import date\nimport statsmodels\nfrom statsmodels.tsa.stattools import adfuller, acf, pacf\nfrom statsmodels.tsa.arima_model import ARIMA\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nfrom sklearn.metrics import mean_squared_error","14c87931":"\ndataset = pd.read_csv()\ndataset.head()","aedf1870":"from datetime import datetime\ndataset['Month']=pd.to_datetime(dataset['Month'],infer_datetime_format=True)\nindexedDataset=dataset.set_index(['Month'])\nindexedDataset.head()","6bde5c58":"plt.xlabel('Date')\nplt.ylabel('Total_Usage')\nplt.plot(indexedDataset)","4f2ec08e":"rolmean=indexedDataset.rolling(window=12).mean()\nrolstd=indexedDataset.rolling(window=12).std()\nprint(rolmean,rolstd)","13f71c3f":"orig=plt.plot(indexedDataset,color='blue',label='Original')\nmean= plt.plot(rolmean,color='red',label='mean')\nstd = plt.plot(rolstd,color='black',label='std')\nplt.legend(loc='best')\nplt.title('Rolling Mean vs Rolling std')\nplt.show(block=False)","24144876":"print('Result of Dickey-Fuller Test: ')\ndftest=adfuller(indexedDataset['Total Gallons'],autolag='AIC')\ndfoutput= pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\nfor key,value in dftest[4].items():\n    dfoutput['Critical Value (%s)'%key] = value\n\nprint (dfoutput)","1f2d95b7":"indexedDataset_logScale=np.log(indexedDataset)\nplt.plot(indexedDataset_logScale)","ab293f89":"movingAverage=indexedDataset_logScale.rolling(window=12).mean()\nmovingSTD=indexedDataset_logScale.rolling(window=12).std()\nplt.plot(indexedDataset_logScale)\nplt.plot(movingAverage,color='red')","45109ba0":"datasetminusMovingAvg=indexedDataset_logScale-movingAverage\ndatasetminusMovingAvg.head()\n\n#Remove the NaN value\ndatasetminusMovingAvg.dropna(inplace=True)\ndatasetminusMovingAvg.head(10)","594e4a2b":"def test_stationary(timeseries):\n    \n    #Determine rolling Statistics\n    movingAverage=timeseries.rolling(window=12).mean()\n    movingStd=timeseries.rolling(window=12).std()\n    \n    #plotting the rolling statistics\n    orig=plt.plot(indexedDataset,color='blue',label='Original')\n    mean= plt.plot(rolmean,color='red',label='mean')\n    std = plt.plot(rolstd,color='black',label='std')\n    plt.legend(loc='best')\n    plt.title('Rolling Mean vs Rolling std')\n    plt.show(block=False)\n    \n    #performing the Dickey-Fuller Test\n    dftest=adfuller(indexedDataset['Total Gallons'],autolag='AIC')\n    dfoutput= pd.Series(dftest[0:4], index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n    for key,value in dftest[4].items():\n        dfoutput['Critical Value (%s)'%key] = value\n    print (dfoutput)\n    ","c6cf266c":"test_stationary(datasetminusMovingAvg)","67f65ae1":"exponentialDecayWeightedAverage=indexedDataset_logScale.ewm(halflife=12,min_periods=0,adjust=True).mean()\nplt.plot(indexedDataset_logScale)\nplt.plot(exponentialDecayWeightedAverage,color='red')","20044bea":"decomposition=seasonal_decompose(indexedDataset_logScale)\n\ntrend=decomposition.trend\nseasonal=decomposition.seasonal\nresidual=decomposition.resid\n\nplt.subplot(411)\nplt.plot(indexedDataset_logScale, label='Original')\nplt.legend(loc='best')\nplt.subplot(412)\nplt.plot(trend,label='Trend')\nplt.legend(loc='best')\nplt.subplot(413)\nplt.plot(seasonal,label='Seasonal')\nplt.legend(loc='best')\nplt.subplot(414)\nplt.plot(residual,label='Residual')\nplt.legend(loc='best')\nplt.tight_layout()\n\n\ndecomposedLogData=residual\ndecomposedLogData.dropna(inplace=True)\ntest_stationary(decomposedLogData)","122c775d":"#ACF and PACF plots:\n\nlag_acf = acf(datasetLogDiffShifting, nlags=10)\nlag_pacf = pacf(datasetLogDiffShifting, nlags=10, method='ols')\n\n#Plot ACF: \nplt.subplot(121) \nplt.plot(lag_acf)\nplt.axhline(y=0,linestyle='--',color='black')\nplt.axhline(y=-1.96\/np.sqrt(len(datasetLogDiffShifting)),linestyle='--',color='black')\nplt.axhline(y=1.96\/np.sqrt(len(datasetLogDiffShifting)),linestyle='--',color='black')\nplt.title('Autocorrelation Function')\n\n#Plot PACF:\nplt.subplot(122)\nplt.plot(lag_pacf)\nplt.axhline(y=0,linestyle='--',color='black')\nplt.axhline(y=-1.96\/np.sqrt(len(datasetLogDiffShifting)),linestyle='--',color='black')\nplt.axhline(y=1.96\/np.sqrt(len(datasetLogDiffShifting)),linestyle='--',color='black')\nplt.title('Partial Autocorrelation Function')\nplt.tight_layout()","8c0da7ca":"model =ARIMA(indexedDataset_logScale, order=(2,1,2))\nresults_ARIMA=model.fit(disp=-1)\nplt.plot(datasetLogDiffShifting)\nplt.plot(results_ARIMA.fittedvalues,color='red')\nplt.title('RSS: %4f'% sum((results_ARIMA.fittedvalues-datasetLogDiffShifting['Total Gallons'])**2))\nprint('Plotting the ARIMA Model')","a29b4280":"prediction_ARIMA_diff=pd.Series(results_ARIMA.fittedvalues,copy=True)\nprediction_ARIMA_diff.head()","75691011":"prediction_ARIMA_diff_cumsum=prediction_ARIMA_diff.cumsum()\nprediction_ARIMA_diff_cumsum.head()","cf2177e9":"prediction_ARIMA_log=pd.Series(indexedDataset_logScale['Total Gallons'].ix[0], index=indexedDataset_logScale.index)\nprediction_ARIMA_log=prediction_ARIMA_log.add(prediction_ARIMA_diff_cumsum,fill_value=0)\nprediction_ARIMA_log.head()","6ef8151e":"prediction_ARIMA=np.exp(prediction_ARIMA_log)\nplt.plot(indexedDataset)\nplt.plot(prediction_ARIMA)","af361a8c":"# **Loading the Dataset**","164fd563":"# **Parsing the dataset from the string to the DateTime**","93496503":"# **Performing the Dickey-Fuller Test**","c8d060a4":"# **ARIMA Model**","8027c627":"# **Function for the Stationary Test**","8553c44c":"# **ACF and PACF plots**","2a84fee6":"# **Determining the Rolling Statistics**","19f600e2":"# **Estimating the Trends**","6b71e5aa":"# **Estimating the Moving Average**","b8f5f4bc":"# **Loading the Libraries**"}}