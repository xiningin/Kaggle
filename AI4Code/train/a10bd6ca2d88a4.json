{"cell_type":{"30ee665f":"code","dee7ca6a":"code","4d77b084":"code","e6803609":"code","9a0fb6ee":"code","5650779b":"code","32cfbde4":"code","c5abdf11":"code","d311c70a":"code","2e11d33a":"code","b5ed488b":"code","c063fe2a":"code","b2f68f0e":"code","527ea588":"code","158bfdf0":"code","fee7dd9e":"code","be93f032":"code","049e0bef":"code","c9619b50":"code","1bfacb09":"code","ab32707f":"code","6971327d":"code","20f3a6ea":"code","a7d36cd7":"code","875ac77b":"code","1c684530":"code","c8b232e9":"code","1a6edd8f":"code","7ad7b279":"code","2b21fb25":"code","80d65c3e":"code","2daf1ee1":"code","d9222319":"code","2869f4fd":"code","09fdcc38":"code","ee015c83":"code","4dde2376":"code","2b90b56d":"code","a90e7071":"code","ac09ae4e":"code","906ade08":"code","30867875":"code","7c540d69":"code","533913ab":"code","c1e56b25":"markdown","adbfa530":"markdown","8ee6a9cd":"markdown","9994471a":"markdown","4076ac89":"markdown","1f3acf6e":"markdown","a339d06b":"markdown","c5451ebf":"markdown","35501884":"markdown","cf851740":"markdown","be841c99":"markdown","4f541df4":"markdown","afc4c3f0":"markdown","0e0fddd5":"markdown","b72313b5":"markdown","1638a67f":"markdown","15e828bf":"markdown","0a6e6e3b":"markdown","5cef122b":"markdown","392705f0":"markdown","14400e35":"markdown","5db71700":"markdown","9076c77b":"markdown","1dbc106a":"markdown","139647a4":"markdown","b45c039a":"markdown","b557242a":"markdown","56a89e41":"markdown","3efad0f8":"markdown","ea39ded8":"markdown","e6d11735":"markdown","9d3470d6":"markdown","bd975139":"markdown","3d902801":"markdown","3625b530":"markdown","62ee1cd2":"markdown","fd4c123a":"markdown","0dbeb2d0":"markdown","1578191e":"markdown","7348f7ff":"markdown","0c529ca7":"markdown","a6d5daa6":"markdown","7463d795":"markdown","bbf79d23":"markdown","b8f15433":"markdown","bc62ee56":"markdown","be52d95a":"markdown","1a93210c":"markdown","42883ecc":"markdown","b383c4d7":"markdown","4a516b50":"markdown","a6b7ef32":"markdown"},"source":{"30ee665f":"import numpy as np \nimport pandas as pd \nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report","dee7ca6a":"df=pd.read_csv('..\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndf","4d77b084":"df.info()","e6803609":"df.describe()","9a0fb6ee":"fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 10))\ndf.plot(kind=\"hist\", y=\"age\", bins=70, color=\"b\", ax=axes[0][0])\ndf.plot(kind=\"hist\", y=\"bmi\", bins=100, color=\"r\", ax=axes[0][1])\ndf.plot(kind=\"hist\", y=\"heart_disease\", bins=6, color=\"g\", ax=axes[1][0])\ndf.plot(kind=\"hist\", y=\"avg_glucose_level\", bins=100, color=\"orange\", ax=axes[1][1])\nplt.show()","5650779b":"print (\"Rows     : \" , df.shape[0])\nprint (\"Columns  : \" , df.shape[1])\nprint (\"\\nFeatures : \\n\" , df.columns.tolist())\nprint (\"\\nMissing values :  \", df.isnull().sum().values.sum())\nprint (\"\\nUnique values :  \\n\",df.nunique())","32cfbde4":"\nlabels =df['stroke'].value_counts(sort = True).index\nsizes = df['stroke'].value_counts(sort = True)\n\ncolors = [\"lightblue\",\"red\"]\nexplode = (0.05,0) \n \nplt.figure(figsize=(7,7))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=90,)\n\nplt.title('Customer Churn Breakdown')\nplt.show()","c5abdf11":"plt.figure(figsize=(10,5))\nsns.countplot(data=df,x='gender');","d311c70a":"fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(15, 5))\ndf.plot(kind='scatter', x='age', y='avg_glucose_level', alpha=0.5, color='green', ax=axes[0], title=\"Age vs. avg_glucose_level\")\ndf.plot(kind='scatter', x='bmi', y='avg_glucose_level', alpha=0.5, color='red', ax=axes[1], title=\"bmi vs. avg_glucose_level\")\nplt.show()","2e11d33a":"sns.set(style=\"ticks\");\npal = [\"#FA5858\", \"#58D3F7\"]\n\nsns.pairplot(df, hue=\"stroke\", palette=pal);\nplt.title(\"stroke\");","b5ed488b":"plt.figure(figsize=(15,7))\nsns.heatmap(df.corr(),annot=True);","c063fe2a":"plt.figure(figsize=(10,7))\nsns.boxplot(data=df,x=df[\"bmi\"],color='green');","b2f68f0e":"bmi_outliers=df.loc[df['bmi']>50]\nbmi_outliers['bmi'].shape","527ea588":"# mean with outliers \nprint(bmi_outliers['stroke'].value_counts())","158bfdf0":"df[\"bmi\"] = df[\"bmi\"].apply(lambda x: 50 if x>50 else x)\ndf[\"bmi\"] = df[\"bmi\"].fillna(28.4)","fee7dd9e":"print (\"\\nMissing values :  \", df.isnull().sum().values.sum())","be93f032":"cat_df = df[['gender','Residence_type','smoking_status','stroke']]\nsummary = pd.concat([pd.crosstab(cat_df[x], cat_df.stroke) for x in cat_df.columns[:-1]], keys=cat_df.columns[:-1])\nsummary","049e0bef":"plt.figure(figsize=(10,5))\nstrok=df.loc[df['stroke']==1]\nsns.countplot(data=strok,x='ever_married',palette='inferno');","c9619b50":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='work_type',palette='cool');","1bfacb09":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='smoking_status',palette='autumn');","ab32707f":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='Residence_type',palette='Greens');","6971327d":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='heart_disease',palette='Reds');","20f3a6ea":"plt.figure(figsize=(10,5))\nsns.countplot(data=strok,x='hypertension',palette='Pastel2');","a7d36cd7":"df[\"Residence_type\"] = df[\"Residence_type\"].apply(lambda x: 1 if x==\"Urban\" else 0)\ndf[\"ever_married\"] = df[\"ever_married\"].apply(lambda x: 1 if x==\"Yes\" else 0)\ndf[\"gender\"] = df[\"gender\"].apply(lambda x: 1 if x==\"Male\" else 0)\n\n \ndf = pd.get_dummies(data=df, columns=['smoking_status'])\ndf = pd.get_dummies(data=df, columns=['work_type'])\n","875ac77b":"df","1c684530":"std=StandardScaler()\ncolumns = ['avg_glucose_level','bmi','age']\nscaled = std.fit_transform(df[['avg_glucose_level','bmi','age']])\nscaled = pd.DataFrame(scaled,columns=columns)\ndf=df.drop(columns=columns,axis=1)","c8b232e9":"df=df.merge(scaled, left_index=True, right_index=True, how = \"left\")\ndf","1a6edd8f":"df=df.drop(columns='id',axis=1)","7ad7b279":"df[df.isnull().any(axis=1)]","2b21fb25":"X = df.drop(['stroke'], axis=1).values \ny = df['stroke'].values","80d65c3e":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)","2daf1ee1":"#create adaboost classification obj\nab_clf = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=100, \n                            learning_rate=0.5, random_state=100)\n\n#training via adaboost classficiation model\nab_clf.fit(X_train, y_train)\nprint(\"training....\\n\")\n\n#make prediction using the test set\nab_pred_stroke= ab_clf.predict(X_train)\nprint('prediction: \\n', ab_pred_stroke)\n\nprint('\\nparms: \\n', ab_clf.get_params)\n\n#score\nab_clf_score = ab_clf.score(X_test, y_test)\nprint(\"\\nmean accuracy: %.2f\" % ab_clf.score(X_test, y_test))\n\n\n","d9222319":"\nxgboost = GradientBoostingClassifier(random_state=0)\nxgboost.fit(X_train, y_train)\n#== \n#Score \n#== \nxgboost_score = xgboost.score(X_train, y_train)\nxgboost_test = xgboost.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = xgboost.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',xgboost_score)\nprint('Testing Score \\n',xgboost_test)\n\n#=== \n#Confusion Matrix \nplt.figure(figsize=(14,5))\n\nconf_matrix = pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"Greens\");\nprint(accuracy_score(y_test,y_pred))","2869f4fd":"\nsvc = SVC(random_state=0)\nsvc.fit(X_train, y_train)\n#== \n#Score \n#== \nsvc_score = svc.score(X_train, y_train)\nsvc_test = svc.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = svc.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',svc_score)\nprint('Testing Score \\n',svc_test)\nprint(cm)","09fdcc38":"forest = RandomForestClassifier(n_estimators = 100)\n#== \nforest.fit(X_train, y_train)\n#== \n#Score \n#== \nforest_score = forest.score(X_train, y_train)\nforest_test = forest.score(X_test, y_test)\n#== \n#testing model \n#== \ny_pred = forest.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',forest_score)\nprint('Testing Score \\n',forest_test)\nprint(cm)","ee015c83":"model = LogisticRegression()\nmodel.fit(X_train, y_train)\n\nscore = model.score(X_test, y_test)\nprint('Testing Score \\n',score)\nlogistic_score = model.score(X_train, y_train)\nlogistic_test = model.score(X_test, y_test)\n#== \ny_pred= model.predict(X_test)\nprint(classification_report(y_test, y_pred))\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint(cm)","4dde2376":"coef = model.coef_[0]\ncoef = [abs(number) for number in coef]\nprint(coef)","2b90b56d":"cols = list(df.columns)\ncols.index('stroke')\n#== \n#Delete target label \n#== \ndel cols[5]\ncols","a90e7071":"sorted_index = sorted(range(len(coef)), key = lambda k: coef[k], reverse = True)\nfor idx in sorted_index:\n    print(cols[idx])","ac09ae4e":"X = df.drop(['stroke','gender','bmi','Residence_type','work_type_Never_worked','smoking_status_Unknown'], axis=1).values \n#X = df.drop(['stroke','bmi'], axis=1).values \ny = df['stroke'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\n","906ade08":"# mlp = MLPClassifier(hidden_layer_sizes=(1000,300, 300, 300), solver='adam', shuffle=False, tol = 0.0001)\nmlp=MLPClassifier(hidden_layer_sizes=(300,300,300), max_iter=1000, alpha=0.00001,\n                     solver='adam', verbose=10,  random_state=21)\nmlp.fit(X_train, y_train)\nmlp_pred= mlp.predict(X_test)\n\nmlp_score = mlp.score(X_train, y_train)\nmlp_test = mlp.score(X_test, y_test)\n\n\ny_pred =mlp.predict(X_test)\n#== \n#evaluation\n#== \ncm = confusion_matrix(y_test,y_pred)\nprint('Training Score',mlp_score)\nprint('Testing Score \\n',mlp_test)\nprint(cm)","30867875":"plt.figure(figsize=(14,5))\ncm = confusion_matrix(y_test,y_pred)\nconf_matrix = pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"Reds\");","7c540d69":"TN=cm[0,0]\nTP=cm[1,1]\nFN=cm[1,0]\nFP=cm[0,1]\nsensitivity=TP\/float(TP+FN)\nspecificity=TN\/float(TN+FP)","533913ab":"print('The acuuracy of the model = TP+TN\/(TP+TN+FP+FN) =       ',(TP+TN)\/float(TP+TN+FP+FN),'\\n',\n\n'The Missclassification = 1-Accuracy =                  ',1-((TP+TN)\/float(TP+TN+FP+FN)),'\\n',\n\n'Sensitivity or True Positive Rate = TP\/(TP+FN) =       ',TP\/float(TP+FN),'\\n',\n\n'Specificity or True Negative Rate = TN\/(TN+FP) =       ',TN\/float(TN+FP),'\\n')","c1e56b25":"* Residence Type has nothing to do with stroke, We cannot take it as a standard\n","adbfa530":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Double Check for missing values<\/h1>","8ee6a9cd":"* Although BMI is considered an indicator for recognizing strokes, there are a large number of values \u200b\u200bin the normal range and not a high rate that indicates a stroke.","9994471a":"* Avg glucose level is high with old people \n* BMI >40 have low avg glucose","4076ac89":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">XGboost <\/h1>","1f3acf6e":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Variance features Distribution<\/h1>\n","a339d06b":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Smoking Status<\/h1>","c5451ebf":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Data Summary ( Check for missing values ) \n<\/h1>\n","35501884":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Work Type<\/h1>","cf851740":"* There is no correlation between stroke and BMI ","be841c99":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Scaling The variance in Features<\/h1>","4f541df4":"* Being a smoker or a formerly smoker increases your risk of having a stroke","afc4c3f0":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Drop ID feature and check for nulls<\/h1>","0e0fddd5":"<h1 style=\"font-family:Arial;font-size:175%;text-align:center\">That was expected, wasn't it \ud83d\udc40<\/h1> \n\n![](https:\/\/media.giphy.com\/media\/AIGA5rzzs4ygo\/giphy.gif)","b72313b5":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">MLP NN Classifier<\/h1>","1638a67f":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">adaboost classification <\/h1>","15e828bf":"![](https:\/\/i.makeagif.com\/media\/11-12-2015\/kxoOxr.gif)","0a6e6e3b":"* Private work exposes you to more stroke","5cef122b":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Encoding Categorical Features<\/h1>","392705f0":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Target & Features <\/h1>","14400e35":"* We have good distribution for age \n* I think we have outliers in bmi \n* Avg glucose distribution is reasonable because the normal avg of blood in sugar is less than 140 , that may be not good this feature will not be helpful to know if diabetes have correlation between diabetes and strokes","5db71700":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Introduction<\/h1>\n<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Through this data we will try to know more about strokes and Make a model to try to predict strokes<\/h1>\n<h1 style=\"font-family:Georgia;font-size:150%;text-align:left\">first what is a stroke?<\/h1>\n\n*  Stroke is a medical emergency. A stroke occurs when blood flow to a part of your brain is interrupted or reduced, preventing brain tissue from getting oxygen and nutrients. Brain cells begin to die within minutes \n\n<h1 style=\"font-family:Georgia;font-size:150%;text-align:left\">Risk factors for having a stroke include:<\/h1>\n\n* Age: People aged 55 years and over\n\n* Hypertension: if the systolic pressure is 140 mm Hg or more, or the diastolic pressure is 90 mm Hg or more\n\n* Hypercholesterolemia: If the cholesterol level in the blood is 200 milligrams per deciliter\n\n* Smoking\n\n* Diabetes\n\n* Obesity: if the body mass index (BMI) is 30 or more\n\n","9076c77b":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">SVM <\/h1>","1dbc106a":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Splitting <\/h1>","139647a4":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Heatmap Correlation<\/h1>","b45c039a":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke or not in Categorical Features<\/h1>","b557242a":"![](https:\/\/i.postimg.cc\/7L8qgPqB\/main-qimg-4e6846605de48c4b372265b47e32ac15.jpg)\n","56a89e41":"- From the above statistics it is clear that the model is **more highly specific than sensitive**. The negative cases are predicted more accurately than the positives.","3efad0f8":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Import<\/h1>\n","ea39ded8":"<h1 style=\"color:white;background-color:black;font-family:Georgia;font-size:350%;text-align:center\">BMI<\/h1>\n\n\n* Body mass index is a value derived from the mass and height of a person\n\n\n\n![](https:\/\/i.postimg.cc\/kgd3LTBT\/ae4498b42e31d75d05e764105a9e981a.jpg)\n","e6d11735":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">BMI Boxplot<\/h1>","9d3470d6":"\n<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Correlation with avg glucose level<\/h1>\n\n* Visualize some features which maybe have correlation with avg glucose level\n\n","bd975139":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke Or not Pair Grid<\/h1>","3d902801":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Heart Disease<\/h1>","3625b530":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Sensitivity & Specificity<\/h1>","62ee1cd2":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke Pie Chart<\/h1>\n","fd4c123a":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Gender<\/h1>\n","0dbeb2d0":"* Only 5% percent of people have Stroke ! \n","1578191e":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Stroke\/Ever Married<\/h1>","7348f7ff":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Residence Type<\/h1>","0c529ca7":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Logistic Regression<\/h1>","a6d5daa6":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Random Forest Classifier<\/h1>","7463d795":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:center\">Data Visualization<\/h1>\n","bbf79d23":"* There is about 1000 diffrence between Female and Male in the data ","b8f15433":"* Most people who have had a stroke do not have any heart disease, but that does not prevent it being an influential factor ","bc62ee56":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Notes<\/h1>\n\n* Avg glucose level is high with old people \n* BMI >40 have low avg glucose\n* Being unmarried reduces your risk of a stroke\n* Being a smoker or a formerly smoker increases your risk of having a stroke\n* more than 25% of strok cases They had hypertension","be52d95a":"* we have many outliers but before we fix this we must study BMI first ","1a93210c":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Read & Explore<\/h1>\n","42883ecc":"* more than 25% of strok cases They had hypertension","b383c4d7":"<h1 style=\"font-family:Georgia;font-size:175%;text-align:left\">Feature Importance using Logistic Regression<\/h1>","4a516b50":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Classification Models<\/h1>","a6b7ef32":"<h1 style=\"background-color:skyblue;font-family:Georgia;font-size:350%;text-align:center\">Data preprocessing<\/h1>"}}