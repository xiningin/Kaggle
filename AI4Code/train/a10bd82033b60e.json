{"cell_type":{"c675ab4e":"code","6363227e":"code","b3f5cf1b":"code","fc9db7ed":"code","dea78107":"code","cc33adca":"code","c76fd1f5":"code","369abdea":"code","bb870d02":"code","dd983165":"code","631644d4":"code","4a4fb73a":"code","2ef9d9d6":"code","47d447aa":"code","c30c95b0":"code","b5fa7eea":"markdown","c4a3212d":"markdown","397abee9":"markdown","56095c5c":"markdown","3aa6023f":"markdown","94d279c2":"markdown","402a468d":"markdown","c4a730fc":"markdown","5671a371":"markdown","68b32a5f":"markdown","a53d8800":"markdown","5b4331ad":"markdown","feb24a31":"markdown","a525d567":"markdown","f84873d8":"markdown","d795907c":"markdown"},"source":{"c675ab4e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6363227e":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","b3f5cf1b":"df= pd.read_csv(\"\/kaggle\/input\/mba-admission\/Admission.csv\")","fc9db7ed":"df.head()","dea78107":"#getting info about the data\ndf.info()","cc33adca":"# how many rows and columns in the data\ndf.shape","c76fd1f5":"#Decision column unique values\ndf['Decision'].unique()","369abdea":"#checking for null values \ndf.isnull().sum()","bb870d02":"# checking for na values\ndf.isna().sum()","dd983165":"df.describe()","631644d4":"sns.relplot(x=\"Decision\", y=\"GPA\", data=df)","4a4fb73a":"sns.relplot(x=\"Decision\", y=\"GMAT\", data=df)","2ef9d9d6":"sns.relplot(x=\"GPA\", y=\"GMAT\",hue = \"Decision\",  data=df)","47d447aa":"sns.relplot(x=\"GPA\", y=\"GMAT\", hue=\"Decision\", kind=\"line\", data=df)","c30c95b0":"#heatmap to show correlation between data\nndf = df.copy()\nndf[\"Decision\"] = ndf[\"Decision\"].astype(\"category\")\nndf[\"Decision\"] = ndf[\"Decision\"].cat.codes\n\nsns.heatmap(ndf.corr()**2 ,annot=True,square=True, cbar_kws= {'orientation': 'horizontal'} )","b5fa7eea":"# Setting the environment and loading the dataset","c4a3212d":"# Summary statistics of the data","397abee9":"You can see that the **Decision** is highly correlated with **GPA**","56095c5c":"There are no Na values","3aa6023f":"# Insights from the data","94d279c2":"you can clearly see that the higher both GPA and GMAT the more admit, the lower both GPA and GMAT the more nonadmit.\n\n","402a468d":"I hope this notebook be helpful to you","c4a730fc":"# Thank you","5671a371":"There are no Null vaalues","68b32a5f":"# How the data looks like","a53d8800":"We can say from above plots that the **GPA** is crucial and the Decision for getting an admit highly is dependant on it.","5b4331ad":"# Understanding the data","feb24a31":"# Welcome all","a525d567":"the data contains 3 columns and 85 rows","f84873d8":"we can see that points have high GPA and low GMAT  still get admit,and points with high GMAT and low GPA get nonadmit!!!","d795907c":"There are three values in this column(Decision)\n* admit\n* notadmit\n* border"}}