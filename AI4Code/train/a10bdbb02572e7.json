{"cell_type":{"b5f74b4c":"code","7cccdb28":"code","07ed39cb":"code","ea1bb414":"code","d849243f":"code","a0bfeb55":"code","013d436a":"code","837838e0":"code","6c347f8c":"code","ee3e101e":"code","ff8a4ad1":"code","1241a8ae":"code","054dde40":"code","a50c3f9f":"markdown"},"source":{"b5f74b4c":"\nimport numpy as np\nimport pandas as pd \nfrom sklearn import model_selection","7cccdb28":"df_train = pd.read_csv(\"..\/input\/tabular-playground-series-sep-2021\/train.csv\")","07ed39cb":"df_train","ea1bb414":"#create a new column called kfold and fill it with -1\ndf_train[\"kfold\"] = -1","d849243f":"df_train","a0bfeb55":"#randomize the rows of the data\ndf_train = df_train.sample(frac=1).reset_index(drop=True)","013d436a":"#fetch targets(here it is \"claim\")\ny = df_train.claim.values","837838e0":"#initiate the kfold class from model_selection module\nkf = model_selection.StratifiedKFold(n_splits=5)","6c347f8c":"#fill the new kfold column\nfor fold, (trn_indices, vld_indices) in enumerate(kf.split(X=df_train, y=y)):\n    df_train.loc[vld_indices, 'kfold'] = fold","ee3e101e":"df_train","ff8a4ad1":"# df_train.kfold.value_counts()","1241a8ae":"df_train.kfold.unique()","054dde40":"df_train.to_csv(\"train_folds.csv\", index=False)","a50c3f9f":"# Stratified k-fold is used because the dataset is binary classification"}}