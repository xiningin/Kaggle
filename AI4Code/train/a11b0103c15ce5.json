{"cell_type":{"61279966":"code","b3e487ad":"code","1993bc13":"code","a327c8f5":"code","5787e51d":"code","3520be98":"code","980b780b":"code","9cd90f6a":"code","0c1a9ae4":"code","137a3e89":"code","6e4cc271":"code","d8f98632":"code","043ff158":"code","be62d848":"code","a3a7d5fe":"code","eec049a3":"markdown","715d220b":"markdown","c978a8bc":"markdown","914469f1":"markdown","0ef16835":"markdown","cc5a8b81":"markdown","0adef98f":"markdown","5990e603":"markdown","e8385ddd":"markdown","b49d50c4":"markdown","766c0167":"markdown","43b7cd0f":"markdown","830236aa":"markdown","2cfed1b4":"markdown","9a770b0f":"markdown","61dbda8d":"markdown"},"source":{"61279966":"!pip install https:\/\/s3-us-west-2.amazonaws.com\/ai2-s2-scispacy\/releases\/v0.2.4\/en_core_sci_sm-0.2.4.tar.gz\n!pip install scispacy","b3e487ad":"!git clone https:\/\/github.com\/epfml\/sent2vec.git","1993bc13":"cd sent2vec","a327c8f5":"!pip install .","5787e51d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport spacy\nimport en_core_sci_sm\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport glob\nimport json\nimport pandas as pd\nfrom tqdm import tqdm\nimport re\nimport spacy\nimport os\n\npd.options.mode.chained_assignment = None  # default='warn'","3520be98":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nroot_path = '\/kaggle\/input\/CORD-19-research-challenge\/'\nall_json = glob.glob(f'{root_path}\/**\/*.json', recursive=True)\nprint(len(all_json))\nmetadata_path = f'{root_path}metadata.csv'\nmeta_df = pd.read_csv(metadata_path, dtype={\n    'pubmed_id': str,\n    'Microsoft Academic Paper ID': str,\n    'doi': str\n})\nmeta_df.head()","980b780b":"class FileReader:\n    def __init__(self, file_path):\n        with open(file_path) as file:\n            content = json.load(file)\n            self.paper_id = content['paper_id']\n            self.abstracts = []\n            self.body_texts = []\n            d={}\n            # Abstract\n            if \"abstract\" in content:\n                for idx, entry in enumerate(content['abstract']):\n                    if not isinstance(entry['text'], str):\n                        continue\n\n                    d[\"idx\"] = idx\n                    d[\"section\"] = entry['section']\n                    d[\"para\"] = entry['text']\n                    self.abstracts.append(d)\n\n            # Body text\n            for idx,entry in enumerate(content['body_text']):\n                if not isinstance(entry['text'], str):\n                    continue\n                d = {}\n                d[\"idx\"] = idx\n                d[\"section\"] = entry['section']\n                d[\"para\"] = entry['text']\n                self.body_texts.append(d)\n                \n    def __repr__(self):\n        return f'{self.paper_id}: {self.abstracts[:]}... {self.body_texts[:]}...'\n","9cd90f6a":"# Keyword patterns to search for\nkeywords = [r\"2019[\\-\\s]?n[\\-\\s]?cov\", \"2019 novel coronavirus\", \"coronavirus 2019\", r\"coronavirus disease (?:20)?19\",\n            r\"covid(?:[\\-\\s]?19)?\", r\"n\\s?cov[\\-\\s]?2019\", r\"sars-cov-?2\", r\"wuhan (?:coronavirus|cov|pneumonia)\",\n            r\"rna (?:coronavirus|cov|pneumonia)\", r\"mers (?:coronavirus|cov|pneumonia)\", r\"influenza (?:coronavirus|cov|pneumonia)\",\n            r\"sars (?:coronavirus|cov|pneumonia)\", r\"sars\", r\"mers\", r\"pandemic\", r\"pandemics\"]\n\n# Build regular expression for each keyword. Wrap term in word boundaries\nregex = \"|\".join([\"\\\\b%s\\\\b\" % keyword.lower() for keyword in keywords])\n\ndef tags(text):\n    if re.findall(regex, str(text).lower()):\n        tags = \"COVID-19\"\n    else:\n        tags=\"NON COVID\"\n    return tags","0c1a9ae4":"dict_ = {'paper_id': [], 'section': [], 'sub_section': [], 'paragraph': [], 'authors': [], 'title': [],\n         'journal': [],\n         'source_x': [], 'publish_time': [],'diseases':[],'tags':[]}\n\nfor idx, entry in enumerate(all_json):\n    if idx % (len(all_json) \/\/ 10) == 0:\n        print(f'Processing index: {idx} of {len(all_json)}')\n    content = FileReader(entry)\n    meta_data = meta_df.loc[meta_df['sha'] == content.paper_id]\n    # no metadata, skip this paper\n    if len(meta_data) == 0:\n         continue\n    \n    authors = meta_data['authors'].values[0]\n    title = meta_data['title'].values[0]\n    journal = meta_data['journal'].values[0]\n    publish_time = meta_data['publish_time'].values[0]\n    source_x = meta_data.source_x.values[0]\n    \n    metadata_abstract = meta_data.abstract.values[0]\n    if isinstance(metadata_abstract, str):\n        dict_['paper_id'].append(content.paper_id)\n        dict_['section'].append('Metadata Abstract')\n        dict_['sub_section'].append('Metadata Abstract')\n        dict_['tags'].append(tags(metadata_abstract))\n        dict_['paragraph'].append(metadata_abstract)\n        dict_['publish_time'].append(publish_time)\n        dict_['source_x'].append(source_x)\n        dict_['authors'].append(authors)\n        dict_['title'].append(title)\n        dict_['journal'].append(journal)\n          \n    for items in content.abstracts:\n        dict_['paper_id'].append(content.paper_id)\n        dict_['section'].append('JSON Abstract')\n        dict_['sub_section'].append(items['section'])\n        #dict_['diseases'].append(items['diseases'])\n        dict_['paragraph'].append(items['para'])\n        dict_['publish_time'].append(publish_time)\n        dict_['source_x'].append(source_x)\n        dict_['authors'].append(authors)\n        dict_['title'].append(title)\n        dict_['journal'].append(journal)\n        dict_['tags'].append(tags(str(items['para'])))\n        \n    for items in content.body_texts:\n        dict_['paper_id'].append(content.paper_id)\n        dict_['section'].append('Body')\n        dict_['sub_section'].append(items['section'])\n        #dict_['diseases'].append(items['diseases'])\n        dict_['paragraph'].append(items['para'])\n        dict_['publish_time'].append(publish_time)\n        dict_['source_x'].append(source_x)\n        dict_['authors'].append(authors)\n        dict_['title'].append(title)\n        dict_['journal'].append(journal)\n        dict_['tags'].append(tags(str(items['para'])))\n","137a3e89":"import os.path\ndef extract_covid_abstracts_body(dict_):\n    df_covid = pd.DataFrame(dict_,\n                        columns=['paper_id', 'section', 'sub_section', 'paragraph', 'authors', 'title',\n                                     'source_x', 'publish_time', 'journal','tags'])\n    print(len(df_covid))\n    \n    # Extract only Covid articles\n    df_covid_content = df_covid.loc[df_covid['tags'] == 'COVID-19']\n    print(\"Total Covid19 paragraphs : \", len(df_covid_content))\n    \n    df_metadata_abstracts = df_covid_content.loc[df_covid_content['section']==\"Metadata Abstract\"]\n    df_metadata_abstracts.to_csv('\/kaggle\/working\/covid_abstracts.csv', index=False)\n    \n    df_body = df_covid_content.loc[df_covid_content['section']==\"Body\"]\n    df_body.to_csv('\/kaggle\/working\/covid_body.csv', index=False)\n    return df_metadata_abstracts, df_body\n\ndf_abstracts, df_body = extract_covid_abstracts_body(dict_)\npaper_bodies = df_body.groupby(['paper_id'])\nprint(\"Metadata uniques abstracts : \", df_abstracts['paper_id'].nunique())\nprint(\"# of paragraphs in body : \", len(df_body))\nprint(\"# of unique papers : \", df_body['paper_id'].nunique())","6e4cc271":"import gc\ngc.collect()","d8f98632":"import sent2vec\n#model_path = \"\/kaggle\/input\/biosentvec\/BioSentVec_CORD19-bigram_d700.bin\"\nmodel_path = \"\/kaggle\/input\/covid-sent2vec-ver2\/BioSentVec_CORD19-bigram_d700_v2.bin\"\nmodel = sent2vec.Sent2vecModel()\ntry:\n    model.load_model(model_path)\nexcept Exception as e:\n    print(e)\nprint(\"model successfully loaded\")","043ff158":"vector_dict = {}\nabstracts_list = []\nfor sha, abstract in tqdm(df_abstracts[[\"paper_id\",\"paragraph\"]].values):\n    if isinstance(abstract, str):\n        vector_dict[sha] = model.embed_sentence(abstract)\n        abstracts_list.append(abstract)\n\nkeys = list(vector_dict.keys())\nvectors = np.array(list(vector_dict.values()))\n\nnsamples, x, y = vectors.shape\nvalues_array = vectors.reshape((nsamples,x*y))\nprint(values_array.shape)","be62d848":"sub_tasks = [\n    'Risks factors for COVID-19 virus that lead to morbidity.',\n    'Risk COVID-19 virus poses for daily smokers or is smoking a potential risk for COVID 19?',\n    'Pre-existing pulmonary disease as a risk factor for COVID-19 or the 2019 novel coronavirus.',\n    'Does co-existing respiratory or viral infections and other co-morbidities make the COVID-19 virus more transmissible or virulent.',\n    'What risk does the COVID-19 virus have for neonates and pregnant women?',\n    'Socio-economic and behavioral factors to understand the economic impact of the COVID-19 virus and whether there were differences.',\n    'Transmission dynamics of the COVID-19 virus, including the basic reproductive number, incubation period, serial interval, modes of transmission and environmental factors.',\n    'Severity of disease, including risk of fatality among symptomatic hospitalized patients, and high-risk patient groups.',\n    'Susceptibility of populations to the COVID-19 virus.',\n    'Public health mitigation measures that could be effective for control of COVID-19 virus.'\n]\nsub_tasks","a3a7d5fe":"from sklearn.metrics.pairwise import cosine_similarity\nfrom scipy.spatial import distance\nfrom IPython.display import display, Markdown\nno_of_docs = 20\n\nmedical = en_core_sci_sm.load()\nfor sub_task_id, sub_task in enumerate(sub_tasks):\n    \n    query_statement = sub_task\n    query_vector = model.embed_sentence(query_statement)\n\n    cosine_sim_matrix_query = cosine_similarity(values_array, query_vector.reshape(1,-1))\n    query_sim_indexes = np.argsort(cosine_sim_matrix_query.reshape(1,-1)[0])[::-1][:no_of_docs]\n    \n    df_paragraphs = pd.DataFrame()\n    body_para_list = []\n    for index in query_sim_indexes:\n        paper_id = keys[index]\n        try:\n            body = paper_bodies.get_group(paper_id)\n        except:\n            continue\n        body[\"section_id\"] = (pd.RangeIndex(stop=body.shape[0])+1)\/len(body)*100\n        df_paragraphs = df_paragraphs.append(body, ignore_index = True) \n        body_paras = body[\"paragraph\"].values\n        body_para_list.extend(body_paras)\n    \n    para_dict = {}\n    para_list = []\n    p = 0\n    for para in body_para_list:\n        para_dict[p] = model.embed_sentence(para)\n        para_list.append(para)\n        p += 1\n\n    # Para level vectors\n    p_vectors = np.array(list(para_dict.values()))\n    nsamples, x, y = p_vectors.shape\n    para_vectors = p_vectors.reshape((nsamples,x*y))\n\n    para_matrix_query = cosine_similarity(para_vectors, query_vector.reshape(1,-1))\n    para_similarities_array = para_matrix_query.reshape(1,-1)[0]\n    df_paragraphs[\"cosine_similarity\"] = para_similarities_array*100\n    df_paragraphs = df_paragraphs.loc[df_paragraphs['cosine_similarity']>60]\n    df_paragraphs[\"Relevance\"] = (df_paragraphs['cosine_similarity']+df_paragraphs['section_id'])\/2\n    df_paragraphs = df_paragraphs.sort_values(by='Relevance', ascending=False)\n    df_paragraphs = df_paragraphs.loc[df_paragraphs['Relevance']>=50]\n    \n    if len(df_paragraphs) > 10:\n        df_paragraphs = df_paragraphs.head(10)\n    df_paragraphs = df_paragraphs.drop(['section', 'tags', 'section_id'], axis = 1)  # \n    \n    shortlisted_body_paras = df_paragraphs[\"paragraph\"].values\n    entities_list = []\n    para_summ = []\n    for para in shortlisted_body_paras:\n        doc = medical(para)\n        \n        sent_dict = {}\n        sent_list = []\n        for sent in doc.sents:\n            sent_dict[sent.text] = model.embed_sentence(sent.text)\n            sent_list.append(sent.text)\n            \n        s_vectors = np.array(list(sent_dict.values()))\n        nsamples, x, y = s_vectors.shape\n        sent_vectors = s_vectors.reshape((nsamples,x*y))\n        cosine_sim_matrix_sents = cosine_similarity(sent_vectors, query_vector.reshape(1,-1))\n        \n        if len(sent_list) > 30:\n            no_of_sents_summ = int(len(sent_list) * 0.1)\n        elif len(sent_list) > 20:\n            no_of_sents_summ = int(len(sent_list) * 0.2)\n        elif len(sent_list) > 10:\n            no_of_sents_summ = int(len(sent_list) * 0.3)\n        elif len(sent_list) > 5:\n            no_of_sents_summ = int(len(sent_list) * 0.4)\n        else:\n            no_of_sents_summ = len(sent_list)\n            \n        sent_sim_indexes = np.argsort(cosine_sim_matrix_sents.reshape(1,-1)[0])[::-1][:no_of_sents_summ]\n        sents_summ = [sent_list[j] for j in sent_sim_indexes]\n        para_summ.append(\" \".join(sents_summ))\n        entities = [ent.text for ent in doc.ents]\n        entities_list.append(\", \".join(entities))\n    \n    df_paragraphs[\"para_summary\"] = para_summ\n    df_paragraphs[\"entities\"] = entities_list\n    df_paragraphs.to_csv(\"\/kaggle\/working\/subtask_\"+str(sub_task_id+1)+\"_answers.csv\", index=False)\n    \n    pd.set_option('display.max_columns', None)\n    pd.set_option('display.max_colwidth', -1)\n    \n    display(Markdown(\"**Query : \"+sub_task+\"**\"))\n    \n    if len(df_paragraphs) == 0:\n        display(Markdown(\"**Answer : No answers.**\"))\n    else:\n        display(Markdown(\"**Answer : **\"))\n        display(Markdown(\"**\"+ df_paragraphs['para_summary'].values[0] +\"**\"))\n        display(df_paragraphs[['paper_id', 'para_summary', 'paragraph', 'Relevance']].head(5))","eec049a3":"# **Approach:**\n\nWe have trained the sent2vec model on the most recent dump of CORD-19 corpus to generate sentence embeddings. This model is trained on 14658255 sentences and 864320 words. **Fasttext embeddings are huge in size so we could not generate this in the working directory of the kernel.** We trained our model on AWS and uploaded the same as additional dataset.","715d220b":"# Run task sub-queries and generate summarized results in tabular format along with CSV files generated reporting response for each sub-task query containing more details:","c978a8bc":"# Install and set-up sent2vec repository from GitHub","914469f1":"# **Goal: ** \n\nRound One Submission answers on the following questions:\n\n# Pre-existing pulmonary disease as a risk factor for COVID-19 or the 2019 novel coronavirus.\n\n**Building a COVID-19 Vulnerability Index (3\/21\/2020):**\n> The risk of death has been difficult to calculate, but a small study of people who contracted COVID-19 in Wuhan suggests that the risk of death increases with age, and is also higher for those who have diabetes, heart disease, blood clotting problems, or have shown signs of sepsis. The risk of severe complications from COVID-19 is higher for certain vulnerable populations, particularly people who are elderly, frail, or have multiple chronic conditions. With an average death rate of 1%, the death rate rose to 6% for people with cancer, high blood pressure, or chronic respiratory disease, 7% for people with diabetes, and 10% for people with heart disease. There was also a steep age gradient; the death rate among people age 80 and over was 15%.\n\n# Does co-existing respiratory or viral infections and other co-morbidities make the COVID-19 virus more transmissible or virulent.\n\n**New Respiratory Viruses and the Elderly (7\/6\/2011):**\n> The new respiratory viruses or viral strains include influenza A virus H5N1 and H1N1, MPV, SARS-, NL63and HKU1-CoV, HBoV, HRV-C and -D and the possible respiratory pathogens, KI-and, WU-PyV and TTV. The elderly often have partial immunity and chronic illnesses; these circumstances modify their responses to viruses and thus respiratory viral infections may manifest themselves as atypical symptoms or as exacerbation of chronic illnesses. The ultimate clinical significance of the new respiratory viruses is still poorly unknown in the elderly population but probably these infections are greatly underestimated.\n\n# What risk does the COVID-19 virus have for neonates and pregnant women?\n\n**COVID-19 infection during pregnancy: a systematic review to summarize possible symptoms, treatments, and pregnancy outcomes (4\/3\/2020):**\n> hydroxychloroquine for the infected people are not applicable for the pregnant women because of their potential adverse affect on the fetus and newborn, therefore supportive and symptomatic treatment are given to them. Healthcare providers may consider these for effective management of COVID-19 infected pregnant women, which would reduce pregnancy-related adverse consequences including maternal and newborn morbidity and mortality . The COVID-19 infection during pregnancy also increase risks of several adverse outcomes, including higher rates of C-section delivery, low birth weight, and preterm birth. CC-BY-NC-ND 4.0 International license It is made available under a author\/funder, who has granted medRxiv a license to display the preprint in perpetuity.\n\n**Prophylaxis and Treatment of Pregnant Women for Emerging Infections and Bioterrorism Emergencies (11\/10\/2006):**\n> Planning for a future influenza pandemic must include specific considerations for pregnant women (33) . Because pregnancy has been shown to increase the risk for influenza-associated complications (34) , pregnant women are considered a high-risk group and are recommended to receive influenza vaccination during interpandemic years (35) . This vaccine is inactivated and is considered safe for pregnant women. It is reformulated each year to include the anticipated viral strains of the upcoming influenza season.\n\n**COVID-19 infection during pregnancy: a systematic review to summarize possible symptoms, treatments, and pregnancy outcomes (4\/3\/2020):**\n> Several questions have been aroused on maternal and neonatal safety if women were infected with the COVID-19 during pregnancy. The causes are complications following getting infected and evidence of higher adverse consequences if it has happened with existing morbidity, and these could be added to the usual pregnancy and delivery-related complications. Though majority of the symptoms are almost similar, pregnant infected women had some additional symptoms, including sore throat, myalgia, and poor appetite.\n\n# Transmission dynamics of the COVID-19 virus, including the basic reproductive number, incubation period, serial interval, modes of transmission and environmental factors.\n\n**COVID-19 pandemic: Impact of lockdown, contact and non-contact transmissions on infection dynamics (4\/7\/2020):**\n> Therefore, not incorporating this route of transmission in the model will underestimate the strength of COVID-19 transmission and spread. Indirect transmission via non-contact route can increase the basic reproduction number significantly.\n\n**Aerosol-Transmitted Infections: New Consideration for Public Health and Infection Control Teams (7\/23\/2015):**\n> Over the past 12 years, since the SARS-CoV outbreaks in 2003 followed by the emergence and reemergence of various novel human and animal influenza and coronaviruses, there has been much research into the role of the aerosol transmission route. As a result of this, now, the concept of aerosol transmission for various infectious agents that cause respiratory symptoms is now firmly established in the minds of clinical infectious diseases, public health, microbiology and virology specialists, worldwide. Infection control guidelines, including the use of negative pressure rooms and how personal protective equipment is used, need to take into account these findings-particularly where a strong precautionary principle is being advocated when dealing with infectious agents of high lethality.\n\n**On predicting the novel COVID-19 human infections by using Infectious Disease modelling method in the Indian State of Tamil Nadu during 2020 (4\/7\/2020):**\n> Therefore, local government authorities and public health departments should emphasise their efforts on controlling the source of infection and delink the maximum possible transmission chains, such as increasing the sample number of testing which leads to the early detection of the infected person, screening of the latent humans which finds its way to early isolation, and early preparedness for treating the infected humans expected to come, to highly cut down the gathering of large groups of people, and to regularly and completely ban the use of public toilets and public utility areas. From the previous news articles and the managements reports, China's response to the epidemic can be seen in three stages: first stage is to control the primary source of infection and discard the transmission chains around all the areas in Hubei Province; second stage is to vigorously treat infected patients and reduce mortality; and the third stage is to control the epidemic condition, thoroughly contain the disease epidemic, and drastically reduce the contact ratio between human population. The model prediction shows that without any governmental policies or control measures, the peak of infected human will reach about 25, 81, 190 when the average daily number of contacts per infected person is = 5.\n\n# Severity of disease, including risk of fatality among symptomatic hospitalized patients, and high-risk patient groups.\n\n**Clinical features and outcomes of 221 patients with COVID-19 in Wuhan, China (3\/6\/2020):**\n> 44 (80%) of them received ICU care, and 52.3% of them transferred to the general wards due to relieved symptoms, and the mortality rate of severe patients in ICU was 20.5%. Older and male patients with higher APACHE II & SOFA scores, elevated PCT level, excessive fluid volume input, as well as the delayed use of corticosteroid might increase the risk of death. In this single-center case series of 221 hospitalized patients with confirmed COVID-19 in Wuhan, China, 55 severe patients (24.9%) with elder age and chronic comorbidities, developed more than one complication. Of the 166 non-severe patients, 21.1% of them were cured and discharged and no patients died.\n\n**Clinical characteristics of 101 non-surviving hospitalized patients with COVID-19: A single center, retrospective study (3\/6\/2020):**\n> Elevated high sensitivity troponin, neutrophils and depressed oxygen saturation predicted the rapid death of patients with COVID-19. The findings of our study suggested that older patients (>70 years) with comorbidities had a steeply increased risk of death with COVID-19. Besides, respiratory failure, acute cardiac and kidney injury played a crucial role in the death of patients. P<0.05 was considered statistically significant.\n\n**Clinical characteristics and durations of hospitalized patients with COVID-19 in Beijing: a retrospective cohort study (3\/17\/2020):**\n> Bilateral pneumonia on CT scan, shorter period of illness onset to admission, lymphopenia, severity of disease are the risk factors for longer hospitalization duration of COVID-19. In conclusion, the average hospital length of stay is 13 days for discharged patients with COVID-19; average time of clinical course is 23 days. There findings might be useful for the countries or territories facing the threat of COVID-19 to well prepare and rebalance their medical resource. Both are significantly shorter than SARS.\n\n**Kidney impairment is associated with in-hospital death of COVID-19 patients (2\/20\/2020):**\n> The prevalence of kidney impairment (abnormal urine analysis and kidney dysfunction) in hospitalized COVID-19 patients was high. After adjustment for confounders, kidney impairment was associated with higher risk of in-hospital death. the author\/funder, who has granted medRxiv a license to display the preprint in perpetuity.\n\n**History of Coronary Heart Disease Increases the Mortality Rate of Coronavirus Disease 2019 (COVID-19) Patients: A Nested Case-Control Study Based on Publicly Reported Confirmed Cases in Mainland China (3\/27\/2020):**\n> Based on our findings, close monitoring, extra care, and early medical intervention are needed for patients with pre-existing CHD, to reduce the mortality risk associated with COVID-19. In conclusion, our findings provided preliminary yet strong evidence supporting the association between pre-existing CHD and mortality risk for patients with COVID-19.\n\n# Susceptibility of populations to the COVID-19 virus.\n\n**Is home isolation appropriate for preventing the spread of COVID-19? (4\/8\/2020):**\n> Therefore, home isolation poses significant risks to the population. The entire country is actively trying to prevent the spread of the epidemic. The only way to control this disease is to cut-off the route of transmission. However, patients with COVID-19 under home isolation will transmit the virus to other people in the house via human-to-human transmission.\n\n**Fundamental principles of epidemic spread highlight the immediate need for large-scale serological surveys to assess the stage of the SARS-CoV-2 epidemic (3\/26\/2020):**\n> Overall, these results underscore the dependence of the inferred epidemic curve on the assumed fraction of the population vulnerable to severe disease ( ) showing significant \u00cf\u0081 population level immunity accruing by mid March in the UK as is decreased to plausible \u00cf\u0081 values ( Figure 3 ). They also suggest a way of determining this fraction by measuring the proportion of the population already exposed to SARS-CoV-2.\n\n# Public health mitigation measures that could be effective for control of COVID-19 virus.\n\n**The epidemiology and pathogenesis of coronavirus disease (COVID-19) outbreak (2\/26\/2020):**\n> There are some basic questions that would provide a framework for which more specific and detailed public health measures can be implemented. The early death cases of COVID-19 outbreak occurred primarily in elderly people, possibly due to a weak immune system that permits faster progression of viral infection [8, 12] . Future directions to control the spread of the disease Extensive measures to reduce person-to-person transmission of COVID-19 are required to control the current outbreak. China and other countries including the US have implemented major prevention and control measures including travel screenings to control further spread of the virus [13] .\n\n**Mitigation Strategies for Pandemic Influenza A: Balancing Conflicting Policy Objectives (2\/10\/2011):**\n> The aims of a public health intervention policy must therefore be clearly defined, so that in the early phase of a pandemic sufficient resources can be put into characterizing the virus strain and measuring key epidemiological parameters as an essential template for decisions on what is the optimal mitigation strategy. This flexibility implies that a broad range of more complex strategies could be envisaged, for example implementing and lifting a hierarchy of controls in response to the dynamics of the epidemic and importation of cases. The optimum intervention in terms of minimising peak logistical pressures (peak prevalence or incidence), may not be the same as one which minimises total epidemic size, and will almost certainly not be the one minimising direct social or economic impact from the intervention itself. However, the simple scenarios illustrated here highlight the complexities in selecting the best intervention policy, in terms of magnitude, timing and duration of interventions.\n\n**Evaluation of Border Entry Screening for Infectious Diseases in Humans (2\/10\/2015):**\n> Modeling and observational studies have indicated that border screening is likely to be unsuccessful in preventing or delaying the entry of such diseases into a country. Instead, the less costly measure of providing information to arriving travelers is recommended, together with effective communication with local clinicians and more effective disease control measures in the community.","0ef16835":"# Load the Input JSON & metadata.csv from kaggle input directory","cc5a8b81":"# Loading the custom trained sent2vec model:","0adef98f":"![image.png](attachment:image.png)","5990e603":"# JSON file reader to load individual JSON files extracting their abstract and body sections","e8385ddd":"# **About Us:**\nWe are a group of AI and NLP scientists with experience across NLP, image processing and computer vision. Covid-19 Kaggle challenge has provided us with a unique opportunity to help humanity fight the corona virus pandemic collectively by utilizing benefits of AI and NLP. We have focused on creating NLP solution to enable users to ask questions and get the most accurate results from the vast corpus of medical journals.\n","b49d50c4":"# Creating the abstract embeddings:","766c0167":"![sent2vec.PNG](attachment:sent2vec.PNG)","43b7cd0f":"Iterate JSON directories to load all the paragraphs from abstracts and body of different papers. Abstracts if available in metadata.csv is also loaded separately.","830236aa":"# Loading the task queries and summary text:","2cfed1b4":"# Regex to filter out non-covid content:","9a770b0f":"# Benefits of this approach:\n\n* Very simple and straightforward approach without complex indexing and other dependencies which need to be set up\n* Based on FastText Sent2Vec embeddings trained on CORD-19 corpus - embeddings are contextually relevant to the queries\n* Filtering helps remove lots of non-covid content\n* Text summarization helps to summarize longer paragraphs\n\n# Further Improvements possible:\n* Embeddings are currently computed on entire paragraphs rather than at sentence level. Aggregating sentence level embeddings at paragraph level would be more relevant\n* Currently only looks for answers in papers which have abstracts available in the metadata.csv. Approach needs to be further scaled to entire literature\n* Disease names can be further extracted using spacy medical NER models that can add further structure to the response","61dbda8d":"# Filtering only COVID-19 related papers  - metadata abstracts & body paragraphs"}}