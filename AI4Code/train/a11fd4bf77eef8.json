{"cell_type":{"db4ab2b3":"code","f094cde7":"code","5ceedc48":"code","112d3514":"code","addf4c3f":"code","20d476b6":"code","2ede7cc2":"code","ef046096":"code","04f4594c":"code","322a7d7b":"code","abb54540":"code","fe9cf608":"code","da97b0e6":"code","a1817f82":"code","8f6bd992":"markdown","01b994da":"markdown","52c8ac7d":"markdown","93783dc2":"markdown","8ee531c2":"markdown","4c0ac1cb":"markdown","1d7dbd36":"markdown","eab89a0b":"markdown","33ec4405":"markdown","b41306f5":"markdown","0ad94a43":"markdown","6d9d2a88":"markdown","58c0684d":"markdown"},"source":{"db4ab2b3":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport keras\nfrom keras import Sequential\nfrom keras.layers import Conv2D,MaxPool2D,Dropout,Flatten,Dense,BatchNormalization\nfrom keras.preprocessing.image import ImageDataGenerator\n\nfrom PIL import Image\n\nimport os\nprint(os.listdir(\"..\/input\/cell-images-for-detecting-malaria\/cell_images\"))","f094cde7":"width = 128\nheight = 128","5ceedc48":"infected_folder = '..\/input\/cell-images-for-detecting-malaria\/cell_images\/Parasitized\/'\nuninfected_folder  = '..\/input\/cell-images-for-detecting-malaria\/cell_images\/Uninfected\/'","112d3514":"print(len(os.listdir(infected_folder)))\nprint(len(os.listdir(uninfected_folder)))","addf4c3f":"# Infected cell image\nrand_inf = np.random.randint(0,len(os.listdir(infected_folder)))\ninf_pic = os.listdir(infected_folder)[rand_inf]\n\n#Uninfected cell image\nrand_uninf = np.random.randint(0,len(os.listdir(uninfected_folder)))\nuninf_pic = os.listdir(uninfected_folder)[rand_uninf]\n\n# Load the images\ninf_load = Image.open(infected_folder+inf_pic)\nuninf_load = Image.open(uninfected_folder+uninf_pic)","20d476b6":"# Let's plt these images\nf = plt.figure(figsize= (10,6))\n\na1 = f.add_subplot(1,2,1)\nimg_plot = plt.imshow(inf_load)\na1.set_title('Infected cell')\n\na2 = f.add_subplot(1, 2, 2)\nimg_plot = plt.imshow(uninf_load)\na2.set_title('Uninfected cell')","2ede7cc2":"datagen = ImageDataGenerator(rescale=1\/255.0, validation_split=0.2)","ef046096":"trainDatagen = datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/',\n                                           target_size=(width,height),\n                                           class_mode = 'binary',\n                                           batch_size = 16,\n                                           subset='training')","04f4594c":"valDatagen = datagen.flow_from_directory(directory='..\/input\/cell-images-for-detecting-malaria\/cell_images\/cell_images\/',\n                                           target_size=(width,height),\n                                           class_mode = 'binary',\n                                           batch_size = 16,\n                                           subset='validation')","322a7d7b":"model = Sequential()\nmodel.add(Conv2D(16,(3,3),activation='relu',input_shape=(128,128,3)))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.2))\n\nmodel.add(Conv2D(32,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.3))\n\nmodel.add(Conv2D(64,(3,3),activation='relu'))\nmodel.add(MaxPool2D(2,2))\nmodel.add(Dropout(0.3))\n\nmodel.add(Flatten())\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1,activation='sigmoid'))","abb54540":"model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])","fe9cf608":"cnn_model = model.fit_generator(generator = trainDatagen,\n                             steps_per_epoch = len(trainDatagen),\n                              epochs =20,\n                              validation_data = valDatagen,\n                              validation_steps=len(valDatagen))","da97b0e6":"plt.plot(cnn_model.history['accuracy'])\nplt.plot(cnn_model.history['val_accuracy'])\nplt.title('Model Accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Training set', 'Validation set'], loc='upper left')\nplt.show()","a1817f82":"plt.plot(cnn_model.history['val_loss'])\nplt.plot(cnn_model.history['loss'])\nplt.title('Model Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Training set', 'Test set'], loc='upper left')\nplt.show()","8f6bd992":"We will create a CNN model where we will put 128x128 image with 3 channels(RGB) and will get a result as Infected or Uninfected.","01b994da":"# Malaria Cell Images Dataset","52c8ac7d":"## Model","93783dc2":"## Content\n\nThe dataset contains 2 folders\n\n* Infected\n* Uninfected\nAnd a total of 27,558 images.\n\n## Acknowledgements\nThis Dataset is taken from the official NIH Website: https:\/\/ceb.nlm.nih.gov\/repositories\/malaria-datasets\/\nAnd uploaded here, so anybody trying to start working with this dataset can get started immediately, as to download the\ndataset from NIH website is quite slow.\nPhoto by \u0415\u0433\u043e\u0440 \u041a\u0430\u043c\u0435\u043b\u0435\u0432 on Unsplash\nhttps:\/\/unsplash.com\/@ekamelev\n\n## Inspiration\nSave humans by detecting and deploying Image Cells that contain Malaria or not!","8ee531c2":"### Let's have a look at our data","4c0ac1cb":"## Let's have a look at our data","1d7dbd36":"### Set image size","eab89a0b":"## Dividing data in train and test","33ec4405":"## Compile Model","b41306f5":"#### Loss","0ad94a43":"### Train Data","6d9d2a88":"### Validation Data","58c0684d":"#### Accuracy"}}