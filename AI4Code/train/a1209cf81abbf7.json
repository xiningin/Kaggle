{"cell_type":{"9f6c0520":"code","7d40652f":"code","f80884e0":"code","5efaa6aa":"code","7dfe181b":"code","eec57915":"code","5ff1ce04":"code","0801812a":"markdown"},"source":{"9f6c0520":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path\n","7d40652f":"train = pd.DataFrame(np.round(np.random.uniform(-40, 40, (200000, 200)), 4), columns=[\"var_\" + str(i) for i in range(200)])\ntest = pd.DataFrame(np.round(np.random.uniform(-40, 40, (200000, 200)), 4), columns=[\"var_\" + str(i) for i in range(200)])","f80884e0":"x = train['var_0'].value_counts()\nx = x[x==1].reset_index(drop=False)\nx.head()","5efaa6aa":"candidates = []\nfor c in train.columns[1:-1]:\n    if(train[train[c] == x['index'][0]].shape[0]==1):\n        candidates.append(c)\nindexes = []\nfor c in candidates:\n    indexes.append(train[train[c] == x['index'][0]].index.values[0])\ny = train.iloc[indexes][candidates]\ny.head(y.shape[0])","7dfe181b":"candidates = []\nfor c in test.columns[1:-1]:\n    if(test[test[c] == x['index'][0]].shape[0]==1):\n        candidates.append(c)\nindexes = []\nfor c in candidates:\n    indexes.append(test[test[c] == x['index'][0]].index.values[0])\ny = test.iloc[indexes][candidates]\ny.head(y.shape[0])","eec57915":"candidates = []\nfor c in train.columns[1:-1]:\n    if(train[train[c] == x['index'][1]].shape[0]==1):\n        candidates.append(c)\nindexes = []\nfor c in candidates:\n    indexes.append(train[train[c] == x['index'][1]].index.values[0])\ny = train.iloc[indexes][candidates]\ny.head(y.shape[0])","5ff1ce04":"candidates = []\nfor c in test.columns[1:-1]:\n    if(test[test[c] == x['index'][1]].shape[0]==1):\n        candidates.append(c)\nindexes = []\nfor c in candidates:\n    indexes.append(test[test[c] == x['index'][1]].index.values[0])\ny = test.iloc[indexes][candidates]\ny.head(y.shape[0])","0801812a":"The purpose of this kernel is to show that the findings in Scirpus' kernel (https:\/\/www.kaggle.com\/scirpus\/weird-data-structure) is the result of the dataset being limited in range and rounded to 4 decimal places and as a result the \"diagonals\" can be replicated with completely random data with similar properties. "}}