{"cell_type":{"81b05d5b":"code","39bb1286":"code","370e23dd":"code","704d256b":"code","bd9b9e4a":"code","6d9ed41f":"code","0dd97f66":"code","369638e9":"code","8cab37c5":"code","5e691173":"code","26ee1833":"code","740be8f5":"code","655994bb":"code","8ef375f3":"markdown","a4de860e":"markdown","07536c03":"markdown"},"source":{"81b05d5b":"## Importing Libraries\nimport pandas as pd\nimport numpy as np  \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn import metrics","39bb1286":"## Loading dataset\ndata = pd.read_csv(\"..\/input\/logistic-regression\/Iris.csv\")\ndata.head()","370e23dd":"## Checking Size of the data\ndata.shape","704d256b":"## Checking the datatype \ndata.info()","bd9b9e4a":"## Checking if there any null values exists\ndata.isnull().sum()","6d9ed41f":"## Descriptive statistics of the data\ndata.describe()","0dd97f66":"## Count of each group of species\ndata['Species'].value_counts()","369638e9":"temp = data.drop('Id', axis=1)\nvisual = sns.pairplot(temp, hue='Species', markers='+')\nplt.show()","8cab37c5":"X = data.drop(['Id', 'Species'], axis=1)\ny = data['Species']\n\n\nprint(X.head())\nprint(X.shape)\n\n\nprint(y.head())\nprint(y.shape)","5e691173":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=5)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","26ee1833":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)    # fit the model\ny_pred = logreg.predict(X_test)   # predict the model\ny_pred","740be8f5":"## Accuracy score\nprint(metrics.accuracy_score(y_test, y_pred))","655994bb":"## Predicting with manual values\nlogreg.predict([[5,1,3,2]])[0]","8ef375f3":"### Data Modelling :","a4de860e":"### Data Visualization","07536c03":"Split the dataset into a training set and a testing set"}}