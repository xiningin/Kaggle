{"cell_type":{"6cc9a991":"code","e8ea7b2a":"code","de53017f":"code","24c664bf":"code","d5325e03":"code","1abf7679":"code","fb806ec4":"code","1091b290":"markdown","937b8848":"markdown","bf9df4f3":"markdown","e09eccd0":"markdown","f5770694":"markdown","f3a533ea":"markdown","ed356284":"markdown"},"source":{"6cc9a991":"import numpy as np\nimport pandas as pd\n\nimport os\nimport seaborn as sns\nimport json\nimport ast\nimport glob\nfrom tqdm import tqdm\nimport gc\n\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\nimport pydicom\nimport cv2\nfrom pydicom.pixel_data_handlers.util import apply_voi_lut\n\nimport random","e8ea7b2a":"train_csv = pd.read_csv(\"..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv\")\ndisplay(train_csv.head())","de53017f":"KAGGLE_DIR = '..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/'\nIMG_PATH_TRAIN = KAGGLE_DIR + 'train\/'\n\ndef read_dicom(path):\n    dicom = pydicom.read_file(path)\n    data = dicom.pixel_array\n    data = data - np.min(data)\n    if np.max(data) != 0 :\n        data = data\/np.max(data)\n    data = (data*255.0).astype(np.uint8)\n    return data\n\ndef visualize_sample(brats21id, slice_i,mgmt_value,types=(\"FLAIR\", \"T1w\", \"T1wCE\", \"T2w\")):\n    plt.figure(figsize=(16, 5))\n    patient_path = os.path.join(IMG_PATH_TRAIN,str(brats21id).zfill(5),)\n    print(\"patient_path\",patient_path)\n    for i, t in enumerate(types, 1):\n#         print(\"glob data = \", glob.glob(os.path.join(patient_path, t, \"*\")))\n        t_paths = sorted(\n            glob.glob(os.path.join(patient_path, t, \"*\")), \n            key=lambda x: int(x[:-4].split(\"-\")[-1]),\n        )\n#         print(\"image full path=\",os.path.join(patient_path, t, \"*\"))\n#         print(\"t_paths=\",t_paths)\n        data = read_dicom(t_paths[int(len(t_paths) * slice_i)])\n        plt.subplot(1, 4, i)\n        plt.imshow(data, cmap=\"gray\")\n        plt.title(f\"{t}\", fontsize=16)\n        plt.axis(\"off\")\n\n    plt.suptitle(f\"MGMT_value: {mgmt_value}\", fontsize=16)\n    plt.savefig('plot.png')\n    plt.show()","24c664bf":"brats21id = train_csv.iloc[0][\"BraTS21ID\"] \nmgmt_value = train_csv.iloc[0][\"MGMT_value\"] # and tumor class\npatient_path = os.path.join(IMG_PATH_TRAIN,str(brats21id).zfill(5),)\nx = glob.glob(os.path.join(patient_path, \"FLAIR\", \"*\"))\nx[:5]","d5325e03":"t_paths = sorted(x,key=lambda x: int(x[:-4].split(\"-\")[-1]))\nt_paths[:5]","1abf7679":"x[0][:-4].split(\"-\")[-1]","fb806ec4":"_brats21id = train_csv.iloc[0][\"BraTS21ID\"] \n_mgmt_value = train_csv.iloc[0][\"MGMT_value\"] # and tumor class\nprint(\"BraTS21ID=\",_brats21id)\nprint(\"MGMT_value=\",_mgmt_value)\nvisualize_sample(brats21id=_brats21id, mgmt_value=_mgmt_value, slice_i=0.5) # visualize samples","1091b290":"## split filepath -> distinct filename  ","937b8848":"## glob.glob -> not sorted ","bf9df4f3":"## draw sample","e09eccd0":"# sort by filename  ","f5770694":"## sorted (path,sort by last filename) ","f3a533ea":"## 1.glob.glob -> get image path \n## 2.sorted (data,sorting creteria)\n## 3.pydicom -> read image\n## 4.plt.imshow -> draw image","ed356284":"# draw .dcm image function"}}