{"cell_type":{"a5b2fe46":"code","fd37c275":"code","6ba3b8aa":"code","3d9948d0":"code","364d7dfa":"code","badde706":"code","fe7cf116":"markdown","c5405b28":"markdown","94721169":"markdown","1f0b9ab7":"markdown","298aeb60":"markdown","4d003a70":"markdown","a446beaa":"markdown","c9cc9664":"markdown","66888641":"markdown","4c29096f":"markdown"},"source":{"a5b2fe46":"pip install -q transformers","fd37c275":"import tensorflow as tf\nfrom transformers import TFGPT2LMHeadModel, GPT2Tokenizer\n","6ba3b8aa":"tokenizer = GPT2Tokenizer.from_pretrained(\"gpt2\")","3d9948d0":"model = TFGPT2LMHeadModel.from_pretrained(\"gpt2\", pad_token_id=tokenizer.eos_token_id)","364d7dfa":"text = \"The war might be over anytime now. The Germans have no way that suggests that they could turn this around. Only a miracle could save the Nazis\"","badde706":"input = tokenizer.encode(text, return_tensors = 'tf')\n\ntf.random.set_seed(0)\n\nsample_output = model.generate(\n    input, \n    do_sample=True, \n    max_length=97, \n    top_p=0.78, \n    top_k=0)\n\nprint(tokenizer.decode(sample_output[0], skip_special_tokens=True))","fe7cf116":"Importing:","c5405b28":"## Sampling\n\n### So, what is sampling and why is it relevant here?\n\nGPT2 is a transformer model, lets dive into some stuff prehand. \n\nWhile calling the model to generate a few characters I put in do_sample as **True**. What does that mean?\n\nIn here we are choosing the predict the word that the model could generate. In the simplest terms, randomly the picking the word according to its probabilty.\n\n\n### What's the top_k being Zero in there?\n\nIn layman's language, it is a seperate sampling scheme where the K most likely words are filtered and the probability mass is redistributed among the next K words. \n\n![](https:\/\/i.imgur.com\/OYY4VcP.gif)\n\nSince we are using Sampling method here, so bye-bye top_k!\n\n\n### What's up with top_p?\n\nLets say that the model has a lot to say but you want it to be precise with its words, so what do you do?\nYou call in top_p. \n\nIt works by choosing the words who's cumulative probability immediately exceeds stated the probability. Also, it tries to choose the least number of words that can guarantee the max probability.\n\nHere's a visualisation I stole:\n\n![](https:\/\/huggingface.co\/blog\/assets\/02_how-to-generate\/top_p_sampling.png)\n","94721169":"\n[![](https:\/\/www.coolfreecv.com\/images\/icon\/in0C53A4.png)](https:\/\/www.linkedin.com\/in\/vyom-bhatia-40ba79181\/) \n\n[![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAADdElEQVR4Xu2bS8hOQRjHf58ksbBQcr9fk40SsiCEUhQilNuGEgsrEhtSFiKSkiJKsnCJoiQkC8TCpSiXKJRSbgm59a9R3+J9z5xz5syZ6f3m2XxfvTPnff6\/Zy7PPHPeNjq4tXVw\/SQAjiNgOLAf6NbgOe+BZcAvx+\/w2t11BKwEjmV4KEDPvSpwfLgrgFXA0QwfRgDPHH302j0BcMSbRkCaAmkNSItg2gXSNticQMoDUiKUMsGUCqezgGO67bV7Ogw54k2HoXQY8ncY6gIMgaZ1y7\/AK+C7yyiOdQ0YDVwCBlvEHQA2thqAkcB1oI9F2BtgBvC0lQDo7CDxfS2iNPSnAy9cxKtvTFNAFWSJ72cRpcRKkX\/tKj4mAEOBG0B\/i6gnRvzbKsTHAkArvSI\/0CLqITAT0IVLZRZ6CgwykdffLLsPzAI+VKbcPCgkAEVcw9621d0G5gAfqxYfcgoMMMNecz\/LbgJzgS8+xIcCoIVOc36YRdRVYB7wzZf4EAC0v2vYa8vLMmWBC1zT3Dzg6lwDlNkp8sr0suw8sBj4mUeAa5u6APQ24kdZHD4NLK\/znYI6AGgBuwaMsYg\/AawGfrtGtUh\/3wCmAIeBsRanjgBrgT9FnK+irW8A73Kc6g4CGwCd72s33wBsgn6Y0RHsNZrQAAToETAZ+Gqj5ePzGABI1xlgUYhpEAsAQdgG7PQR5axnxgRAO8B84GKdEOoEcBJYaqlCfQImutb5igCsA4C2t\/XAIWAXsMXioKo+gvC5iJCybX0DUFa3BjhuHOxkyt0qbmTZBTMdvOcGvgGsAJTitreewD3AVgXaAWwvG9m8\/XwDaPaKzHjgFtA1w1FFfyFwNq+YMu1CAZCvtotVtVFyNAl4XEZcnj4hAcg\/LYzrLI7qHmBCq9UE\/2vWBagqRIpyll02tcHKT4uhR4BE6yZIZe9eFgi7gc15hnWRNjEAkL\/TgCtAZ4vzSwBVjSqzWABI0CZgj0WZKsQ6OT6oikBMAKTpFKAoZ9lLsyhWcksUG4DugG6CbCU03RnMrqJ+GBsARV5l8ztAD8tI2GumjdNsiBGABOlG6FyO9xcapdqFgLgC8PmzORVHtlrU6AWpcS4vZLsC0OXmvowfTipCZX84qZOjqkRTAf3fyHTaVG5wt1DY2zV2BVD2e6PplwBEE4pAjvwDAErZQSAIaAEAAAAASUVORK5CYII=)](https:\/\/www.kaggle.com\/vyombhatia)\n\n[![](data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAASRElEQVR4XtVba3RUVZbe+9zKA5JAkkpVMMhTokgEbJ+DrS1g26KMQzcOGR+Ji8daQyuCDwK2otM16tKWiDYoSLeKo0C3BFHsQRBaEIfuSNMtNMOE5hFI5J1UQgIJBFJ19p51zq3HrVsVqyrmR8xaWfW49557zrf3\/va397mF0Im\/Xw7Z3suX3n4LAAyWDugPIPozQj9GzGIBBiM6CMERfA8IDkI0SIADzGP6HHWcEIEFSEb0M4Ze\/WygZAA\/qe9Dx9FPAiQitPgBj4LgI2SII8BwuM1I37ZhZeHZZJeDiV7guWyj24DUUjJwPAPczAJSGBEIAVggsHpVi0EAsn4W4e\/1+bbPLAACIISu1+MEv48Y3xyrgzF8bPCfGMSn7KDlHy8fWZ\/I2uIC8GKf9S6RkjaXER5mgT0Z1II7nnTMCVpBUeDoMWKAZVlsGJQYwNrGUGNpQwQMwALPM\/ASZDl\/9eprvN8GxLcC8Gv3phKJsJQFZnTKwsFFBiwamqDls+lB3+IlCYwR5XVhwM8R4PQPPxyxsiMQYgJQARVGfXavl1nAbG0Jm5tHub1lAdHuH\/CW0BjBcOk4VKLGAIvbJxRCNg8V+MrQ4SOe9HiQ7EBEAeABj+iTPfIjBmMCgwAGAxgsMd6x+zMJbFXExQL9hJqs\/NIkMT8jSlCkJtQ\/mqRnvgcEcJAQDgY2pECHIk0WaLB6VWSpSFQIg5GDnzNZIIbcXoMS8KJQOERyEyGsvfwHV99jByEKgLdzfl\/OLMrMhSsArP8qfg11s0YSuAEEbwGG2osi5ch5V+NRT1VxeyLE813P8RRVpTb2bu4nU4z+DDAQEMYyijsZwRlFqJYQIuTyFeuunWu9fwQAy3KWlSAYy5kDC40CQBwgFM\/nNV38fTEUK4t2m79JkyqM\/FMD75OC\/4MRC4O8ojIGWEKIEEre23BtiBNCACzLXORKSUmtITAy1AUhy7MZBgCw+GhzwWMeGOPvNquOMRHP6C8cDf4eCxnx4RAIkRx2TjrEoHc3mNkhBMDKnNfKAYwytXAIWT4ABIqyyaenLejOC7fPbdao7WUsoNyavULZRnD5bzbfqENBA\/BRfrnb56MaZtEzvPhg7OPikqZHHvk+LT4419k3frVYAiv9YiFJTZbnBacMfH3bNV4NwJrc\/5zNgK9YCU8DQcaB\/OaWojHg6XZuXz5iY0Zre\/ozjDCOEdIJcVuKYTzj+d8fhhSgCofWltS9LKDQqkFMXoDZiypHvaoBWJvz9BZGMUalO7Vw0jGvA6f0X5vmrehu1vcUVaQ62vK+YsRrbLL4pEh1XG0F4amR20oJ8f0IsWQqyS2v7bjpNlyfO7OXxNQGZpFiS3uN\/tP78othdbdie2WMly\/9fBYJXBgZ3wFpjfhbz8HR04NGU9nh8n\/0qSNEp01x+rAHO\/GzvIfGExvrwos3rc+AK\/6lsby0u1lfzWdB\/ucfkeCfxYhtFev75tWMvdI6718O\/WIFoXjArmhB4Hj8o3PqTALHIq32QspPALEx9e7Tr73b1QBUuBZntvkzBxNSAUmjLyhhZeBxZjjR7nAcnuEtbo13z4V5G1cS4v32GkIXaYC7fnHstmusYzw3eMtUNvAdey0CiDNxc96D5cyo018ECaIxdlzDki\/iTSaR4xWu+X2kP+0eYmMCoxjNgPZwA2atPH0IuFWi+MThMNZM8RafijX+4pyNDxDwirD8DdcbIOCl2Sd\/8rT1upcGbB5LiJutgCkJDgjluDWveBWDKI4UPgKEwUNuq3\/vUCIL7Oiclb1fykkx4CkGMRNApLMWVTGktR18nYHwAgvxumDfi1OapzRb78HA+Gb2f3\/IYEzUpI16MSq97UxLa79l+om7z1vPn99v82XMXB2jb7EK\/8c1oRLYGGVOLCSBuaHBl14Mqzut7T92zitlNhYyiJyo9KruFQVGWIAFs1DguiZg8eiU5geX20F4K+fj+4nFnQSiB4LxpbP53NJiiK5HVNbIasy5wAho61dUYqXrzj3M4ipbCLTc2rCmV2esXwGTjB55A+Yz4RPhgsrkl0iRFSy20AaG+b1djRKLVzOas+Z2tgZZmLfxLCNkmcVSMGPAHvyLa+xeBnGlBiCg+xmw6eaGdbnJAqAWn+V0rTFLaQupBqyti5KAxoiuNgPepwI1uggLEvQnh5tOTPSAJ6qujzfXxdmfNRFCtq2xsxf\/5rr5AIMoDE9YFz\/eUd5N7niD2o9vypu6AFg8EV1Gh+MeQJwFFusZcY8E44TKAgSiABiHM4i7GESv4PUaCE2OEcXZgpLmR8qSndvS7LVeBiMvPDcthg7gLtf1hxnEoMgDxqkbvF9eksxNNjvvLQU03tdpTZfTdsITtQDGsy2NeRXF4InJLRXgSU3JkcWM4nkGMdCalk0PDYQSOx68r\/nRCE6IN9e3sledYjDybfM6jLvdI77Rbe2w+yuLHLvOu71fvEGDx7f1Hp\/DKemHGDBAeNb41hZc6svJeuyu6tcvJjLmepiZ1u7s9Wti8fMOwqEplVIH\/6z58Yjs8G1jL8tefoxB9LUB8A1Wua84ziAKImKSRe3V3p2DEpmsOqcy7675BGKOSV5RzZQ5Yxo+eCXRsazn\/SH3yTIGLLeq1FC2QjF\/UuMzTyY67ns579QSiAF6fgFjE4jjuM89sI7AcNuQrh5eX1WYyOA7XKP7EBg1DCLdjNmw6xOIpT9q+OShRMbp6JxPnY+\/SWD8PEaX6oLfEIOKvZ6YYsk+3vKcJdUA4rIID2BRhwfzC1Qh5LQJlP3D6g8NTWTiX7tGzSAw3rCzOgDWNvU2ht5VvSEht+\/oXuuHzEyDJtjPIAbYu1TMMOOnTb9aksg8f5f92n5AcblNYzTgofy8ZgbRO9QGMyVp1RX1R65KZOBdrus2MeDtQQBCnoSi9Ib6rV1SSm9yTi8hwOUxiHXT3Y2v3pHIPFfl\/qoKwBgWKcCwGWvzs1oBRIZ1cAKxu7Cu7up4A1e5ijIlitMMIsU6MIA4Q16\/6zr42hdvjESOV8Ck1BxnlpcBe0WKK8PXQ1DuGO+SuAXUh7nP72bAERGhzqIVj+antimdrlwjRGIsdg6qb7423uT2ua8YIQF2h2W0Gf\/Axgcjvbvui3d9Mse35D3wAYP4N7uE9hOOGN\/02z3xxvrYOW8ns\/iBTY224fFLU31A7ABiK4Ht6F93\/sZ4g+5zXToO0LEhUuurfTpj3vC6vS\/Guz6Z41+6Js1jxhdCGzVBwmVj3O2n390Yb6w\/5M7ZwSCuj1SjDh+eKMwkkIRABEwMIAmAuLLvSf8P4w16MD9\/GoB4O2wVU7UBiylXeg\/9V7zrkzn+Z9c\/TyE2lkVJaDSmjfWuXBZvrPXOmZUEZtFnyVaMJ4fnRAMgubKgti0uALX5vacRGG9H5GlddIspl3uPdikA2113TCEWy6KIEMW0W71r4gLwmXN6JYMYZe5xhJQq46kbXGYISAZW1jc9YMcl\/zgbNwSOujLGqS0y+6QIjHmFdXVdGgJ\/cY2ex2C8EM5W5oYNChh3U\/2ncUPgj87JOgQisxX6sO5HBW1AnK44QC2eJQNK2pm\/qzEuCR51p45A5AAJRhQ8HwysO9OlJPhX100foCJB26YNCRxxU93ncUlwc979OwECJMiq861DoQ29PxnQysQZIQA0ELw7v\/Jk3DRY74JMf7pxmglSgEB1cYK7yWdb8i64iqqg0w0Va0xXQVFquyvdC5ZKUQOBor0nG84i79a4afDLvHuUoUZEErbRig0ThjQzcW8VApoIJQFKrnJtOZqQEDpRaGwCCbdrAFQDXVXqKooklParl10ihPa4h5UwCC2EwtWmKqNx07XeHQkJoT\/l3V3FIIaFS23NA83YeO+wBpbkDIeAWgnvd607nJAUPlkkZgDhG8GFcwAAIKg9lyKHFlbDd5LCB4cMSfOdhf0AGJbC4a37GSPr\/56QFP7Kdcd+ZrzcxlcN2Dh5ZB1IcivrW0CozltzIKFiqP566EN+owYkpJthEPYClrC04JD8TsXQAXffpQxieqTrar65AOwYVOStSqgY2uG6tZotxZBuprJRh00PXXccJBXoDBAiQqp1rqxKuBz23uiYT8xz7GFghgTPuWQfdaocPuzOLWMUgXJYNVqC5bYGYP7Q+tqEy+Gv8\/6pljFYUIUe\/jiOzY+P+gYk9beIIMUDx3Lf3pVwQ6T5ZshpR+MQEOSAVBEEoF6DHsEES1vPy8cSDYeDQyAtrSV9IYMxPaz8Ip5YaXJcTB88qLk24YbI313XBBoi4X4FsPgGzzx1y2EgHqSlsNYBOh2eyn5jR1ItsYbbjVKW\/L56Xk2HgQWAAD\/Ugh+ebfDLio6yQ1URpOacMYqZ4AUgGNBR65wYHxxc35xUS2yPuyjQEgt3oQHEYTz73NgDILlQA6B4wATA27v8z0k3Rb3jxAJkeCLMBRiRGXRIMJxFgg1EvIclntDn+rkACYcDwJ0soZcGTHmSlU90ilWpDxf0P3Ux6aboXnehl0HYmqLiALaU37EXJF+plaAGQHNBU6\/ntibdFudJYDRdxDVMOCE0+dBC1MN7gUVFe0d4sVELj\/CmtQXH5D3mSMn97Xf3b2IQ2bYssBdbX797D0i6KhwCCgBqyXr6805tjLAHRPP\/iflMMDuoC6z6IGxVm3cErd0RABIX9Kn2z+3M4hVU1fn5ZxlEVmThJvbgubcmVoKkUToDBIQQSOaMsxnp6On81ljTvUYpEy\/UxGhNjzEXGOCNAAg2wE4jwWP5u2VSMR+hJIsgtWdD9gUGgVZSJRaV2Lbi3lUsZXHA9UMlseHDIemz1n6nzdGmyZDNPvEUEMwCMnVCdGwHdEN0qFxAiYscqf6XcrZCwmwfKzCOuNMuAzSUDojcAQexCi98WFLORGUaAM0DZlGERGN7TPuoS7bHWydDH0lioiSegIRjWJq1g9qaCVnbBEBVpl8A4SfUTh+5t0JCIiceGxzr6xiLEjab7h+xy1SOF9ZNngnEizQArFKhfkpfzWZqj\/tXdfkDEvUPQ6bjPAwypKOAiPsqjyDC48j+E36AGvdqiFvYxFuw\/fjxwT2nIvM7ljSvtQqjMRP9W\/59vPTTuiAHBLMBSlqRNnFFt3xEJlkATl2VvYIlPWBJ89rQRDweefvMXn6fv4Elp+h6IJwOG1NbW\/OxuPs9JJUMACo119W4VL3jNEk+RPa+FEh36sfk\/H+dtYWJx5gABE5Sr0SlaT9+u0tK2mQm3ZXn1t3atxQkvW9t+AQMvaXP7tO3aQDkntmzmfiVYEVoaY0ddLS7h+GY7vegZCIg8ejRjoa02r0sSSvdkAdosUez87fXmw9KcnWZm8moYUk9IztDOiQWO25Y9L18VLZh4hWLgejhEPmFO9\/nZbtv4CXbTpmPymovOPBkOQKENLa1OgRJZcbVr32vHpZuLLmqDJjLw52uUMsfmGS5a11N+GFp7QUHn3IxUw0AZNjdi1XOkLRE1GU+2t3DgT2jHWdOtSxk4kjLa7dXlqZz7ewbdMnq6sjH5U0Qnixhho4lJ8IBBH4BhtT8DrF7ZQeeNMk4O+jk\/SzpWQjEfGTaU9pGASBLct\/bE\/2DiY5CoQOyaWTAzwTCFr\/01zp8+A2IjKNYFPvRl0QIK5lz2DMp9UzP1n6GlAOYYCCSHMvE44DYGSLwYDq3tPtZUnnum3\/r+Ccz2gvYI7i6bQ0w\/DSZSelLmVtBkgTJfiaWIMkPRH7zs\/oe1KvfPIf8LFkdV+W3gyU5wE8GADuY1Hs2QAbeS7V3KQ2W4EBJBhNnKvkYJLdQOy\/Y1An2NUJNHp3S1\/bOqLwHPZGldMyfzSkQ6GDby1ZSTBIMfXrQGkHxYWaY8A6UJtqg+Ar2JCPFWER9ElmyB8YJWji8r2ne13ovovIsuPUX6Il+vO5bfzjJB+c+wIy\/iUWMyQIStlJYaIUWZHHTGFokpN5C4IVACjC7Em0mUYcB1uDyOSCenlm2IbkfTloXp7IDsZyDgDMAoGeyC491foTlg5bTyjOGRwS\/D+xbRjRv1fmqcAu18wLvJZ1HSYtle2p51qzVnf\/pbAQQ1WVukEYJCxgPDOqX4yldAYYOFb2IsE63NWgtwATPsQOlLe9j4m0s5afS374i68GPu+bH0zEtuG9uFqBxC4AcTAj9AaE\/EvYDAVnmli04gNU\/GoDsAAD1r\/alY73X5UjgX5okyZoomdSrJkrJmlDVe6m+aQGioyzhCEt5BFgeTmsX23DCspZkjfL\/nuCeedXC46sAAAAASUVORK5CYII=)](https:\/\/www.instagram.com\/vyombhatia\/)","1f0b9ab7":"Getting the Tokenizer:","298aeb60":"<center>That's it!\nThis notebook wouldn't have been possible without this post.<br>\n<a href='https:\/\/huggingface.co\/blog\/how-to-generate'>GO CHECK IT OUT FOR MORE!<\/a><br>\nThank you for checking this notebook out.<br>If you want to talk about this more, come lets have a conversation.<\/center>","4d003a70":"# Importing Stuff","a446beaa":"# Getting the Tokenizer + Model","c9cc9664":"Getting the model:","66888641":"Installing Libraries:","4c29096f":"# Making Sense"}}