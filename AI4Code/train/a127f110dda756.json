{"cell_type":{"677e12dc":"code","3d007389":"code","7a6c0bbe":"code","39f810d9":"code","2364ad0e":"code","db389fd6":"code","6888457a":"code","2ba7b109":"code","36bfb482":"code","d76e8f96":"code","1e078df7":"code","0ce8e093":"code","fe87edf6":"code","608b15d0":"markdown"},"source":{"677e12dc":"#helping hands\nimport os\nfrom tqdm import tqdm\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure, imshow, axis\nfrom matplotlib.image import imread\n\nfrom mpl_toolkits.axes_grid1 import ImageGrid\n\nimport re","3d007389":"shapes = [\"cushion\", \"emerald\", \"heart\", \"oval\", \"radiant\", \"round\"]\nimage_path = \"..\/input\/natural-diamonds-prices-images\/Diamonds2\/images\/\"","7a6c0bbe":"cushion_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_cushion.csv\")\nemerald_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_emerald.csv\")\nheart_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_heart.csv\")\nmarquise_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_marquise.csv\")\npear_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_pear.csv\")\nprincess_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_princess.csv\")\noval_data = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_oval.csv\")\nround_diamonds = pd.read_csv(\"..\/input\/natural-diamonds-prices-images\/Diamonds2\/data_round.csv\")","39f810d9":"data = dict()\n\ncushion_data = cushion_data.drop_duplicates()\ncushion_data.dropna()\n\nemerald_data = emerald_data.drop_duplicates()\nemerald_data.dropna()\n\nheart_data = heart_data.drop_duplicates()\nheart_data.dropna()\n\noval_data = oval_data.drop_duplicates()\noval_data.dropna()\n\nround_diamonds_data = round_diamonds.drop_duplicates()\nround_diamonds_data.dropna()\n\npear_data = pear_data.drop_duplicates()\npear_data.dropna()\n\nmarquise_data = marquise_data.drop_duplicates()\nmarquise_data.dropna()\n\nprincess_data = princess_data.drop_duplicates()\nprincess_data.dropna()\n\n\ndata[\"cushion\"] = cushion_data\ndata[\"emerald\"] = emerald_data\ndata[\"heart\"] = heart_data\ndata[\"oval\"] = oval_data\ndata[\"round\"] = round_diamonds_data\ndata[\"pear\"] = pear_data\ndata[\"marquise\"] = marquise_data\ndata[\"princess\"] = princess_data","2364ad0e":"data[\"cushion\"] = data[\"cushion\"].astype({\"Id\":str})\ndata[\"round\"] = data[\"round\"].astype({\"Id\":str})\ndata[\"emerald\"] = data[\"emerald\"].astype({\"Id\":str})\ndata[\"heart\"] = data[\"heart\"].astype({\"Id\":str})\ndata[\"oval\"] = data[\"oval\"].astype({\"Id\":str})\ndata[\"pear\"] = data[\"pear\"].astype({\"Id\":str})\ndata[\"marquise\"] = data[\"marquise\"].astype({\"Id\":str})\ndata[\"princess\"] = data[\"princess\"].astype({\"Id\":str})","db389fd6":"def usefulImageName(image_path, shape):\n    files = []\n    imageIds = []\n    \n    for (dirpath, dirnames, files) in os.walk(os.path.join(image_path, shape)):\n        for filename in files:\n            pattern = r\".jpg$\"\n            fileSplited = re.split(pattern, str(filename))\n            if(len(fileSplited) > 1):\n                imageIds.append(str(fileSplited[0]))\n\n        return imageIds","6888457a":"cushionImageIds = usefulImageName(image_path, \"cushion\")\nroundImageIds = usefulImageName(image_path, \"round\")\npearImageIds = usefulImageName(image_path, \"pear\")\nheartImageIds = usefulImageName(image_path, \"heart\")\nemeraldImageIds = usefulImageName(image_path, \"emerald\")\novalImageIds = usefulImageName(image_path, \"oval\")\nmarquiseImageIds = usefulImageName(image_path, \"marquise\")\nprincessImageIds = usefulImageName(image_path, \"princess\")","2ba7b109":"data[\"heart\"].query(\"Id in @heartImageIds\")","36bfb482":"def uniqueColourImages(shape):\n    shape_data = data[shape].copy(deep=True)\n    shape_data = shape_data.query(\"Id in @\"+shape+\"ImageIds\")\n    shape_data = shape_data.drop_duplicates(subset=[\"Colour\"], keep=\"last\")\n    shape_data = shape_data.sort_values(by=\"Colour\", ascending=True)\n    \n    \n    \n    ids = list(shape_data[\"Id\"])\n    colours = list(shape_data[\"Colour\"])\n    \n    fig = figure(figsize=(50,50))\n    number_of_images = len(ids)\n    \n    count = 0\n    images_arr = []\n    for i in range(number_of_images):\n        images_arr.append(imread(os.path.join(image_path,shape,str(ids[i])+\".jpg\")))\n    \n    grid = ImageGrid(fig, 111, nrows_ncols=(3, 5),axes_pad=0.5)\n\n    for i,(ax, im) in enumerate(zip(grid, images_arr)):\n        ax.imshow(im)\n        ax.set_title(colours[i], fontdict = {\"fontsize\":25})\n        ax.axis(\"off\")\n    plt.show()\n\n    \n    ","d76e8f96":"uniqueColourImages(\"round\")","1e078df7":"uniqueColourImages(\"princess\")","0ce8e093":"uniqueColourImages(\"oval\")","fe87edf6":"uniqueColourImages(\"emerald\")","608b15d0":"# How to Detect Low Color Variation"}}