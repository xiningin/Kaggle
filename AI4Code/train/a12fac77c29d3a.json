{"cell_type":{"29835184":"code","3061491c":"code","273a4acf":"code","77fe1e2e":"code","7a3ab46d":"code","8523122c":"code","25c2a97d":"code","f6e746a6":"code","547b9597":"code","a0eb3a86":"code","ba3cfef1":"markdown","69325b99":"markdown","1e996e69":"markdown","4fe9347d":"markdown","95e8b061":"markdown","d401f566":"markdown","2b186d08":"markdown","496d608b":"markdown"},"source":{"29835184":"import matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport sklearn","3061491c":"#loading data\noecd_bli = pd.read_csv('..\/input\/life-satisfaction-dataset\/oecd_bli_2015.csv', thousands=',')\ngdp_per_capita = pd.read_csv('..\/input\/life-satisfaction-dataset\/gdp_per_capita.csv', thousands=',', delimiter='\\t', encoding='latin1', na_values=\"n\/a\")","273a4acf":"# Checking the life satisfaction datsummary\noecd_bli.info()\noecd_bli.head(5)","77fe1e2e":"# checking the gdp data summary\ngdp_per_capita.info()\ngdp_per_capita.head(5)","7a3ab46d":"def prepare_country_stats(oecd_bli, gdp_per_capita):\n    oecd_bli = oecd_bli[oecd_bli[\"INEQUALITY\"] == \"TOT\"]\n    oecd_bli = oecd_bli.pivot(\n        index=\"Country\", columns=\"Indicator\", values=\"Value\")\n    gdp_per_capita.rename(columns={\"2015\": \"GDP per capita\"}, inplace=True)\n    gdp_per_capita.set_index(\"Country\", inplace=True)\n    full_country_stats = pd.merge(left=oecd_bli, right=gdp_per_capita,\n                                  left_index=True, right_index=True)\n    full_country_stats.sort_values(by=\"GDP per capita\", inplace=True)\n    remove_indices = [0, 1, 6, 8, 33, 34, 35]\n    keep_indices = list(set(range(36)) - set(remove_indices))\n \n    return full_country_stats[[\"GDP per capita\", 'Life satisfaction']].iloc[keep_indices]","8523122c":"country_stats = prepare_country_stats(oecd_bli, gdp_per_capita)\nX = np.c_[country_stats[\"GDP per capita\"]]\ny = np.c_[country_stats[\"Life satisfaction\"]]","25c2a97d":"# plotting life satisfaction against GDP per capita\ncountry_stats.plot(kind='scatter', x=\"GDP per capita\", y='Life satisfaction')\nplt.show()","f6e746a6":"from sklearn.linear_model import LinearRegression\n\n# selecting a liner model\nlin_reg_model = LinearRegression()\nlin_reg_model.fit(X, y)","547b9597":"# and now for making a prediction for cyprus\nX_new = [[22587]]\nprint(lin_reg_model.predict(X_new))","a0eb3a86":"from sklearn.neighbors import KNeighborsRegressor\nclf = KNeighborsRegressor(n_neighbors=3)\nclf.fit(X, y)\nX_new = [[22587]]\nprint(clf.predict(X_new))","ba3cfef1":"This is a beginner's kernel to get introduced to the scikit- learn library which is very useful for prototyping and applying Machine Learning models.\n**Importing the Dependencies**","69325b99":"**Data Visualization**","1e996e69":"**Predicting based on the linear model**","4fe9347d":"If you liked the kernel, please cast an upvote to support me which helps us stay motivated.","95e8b061":"**Fitting a clustering Model and Prediction**","d401f566":"**Data preparation**","2b186d08":"**Fitting a linear Model**","496d608b":"**Loading the data**"}}