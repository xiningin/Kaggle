{"cell_type":{"c1d60135":"code","2df9913e":"code","86db09bc":"code","4b4d285c":"code","216f8991":"code","a43bae27":"code","fafa760a":"code","27c791f1":"code","422d30f8":"code","89f48dbc":"code","edc8e7da":"code","f266601c":"code","a39eebe3":"code","2e1659f5":"code","35ef08d7":"code","31ae81e9":"code","325b3051":"markdown","27afa35e":"markdown","8b983e14":"markdown","15b78de7":"markdown"},"source":{"c1d60135":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2df9913e":"df = pd.read_csv(\"\/kaggle\/input\/women-representation-in-city-property-sanfrancisco\/WomenRepresentaionInCityProperty-SanFrancisco.csv\")","86db09bc":"df.head()","4b4d285c":"df.describe","216f8991":"df.shape","a43bae27":"df.isna().sum()","fafa760a":"del df['Comments']\ndel df['Reference']","27c791f1":"df.head()","422d30f8":"df.isna().sum()","89f48dbc":"df = df.fillna(\"anonymous\")","edc8e7da":"df.isna().sum()","f266601c":"u_dept = df['Department\/Source'].unique()\nu_gender = df['Gender'].unique()\nu_curr_police_dist = df['Current Police Districts'].unique()\nu_curr_sup_dist = df['Current Supervisor Districts'].unique()\nu_ana_neigh = df['Analysis Neighborhoods'].unique()\nu_neigh = df['Neighborhoods'].unique()\nu_sf_find_neigh = df['SF Find Neighborhoods'].unique()\n\n\nprint(\"u_dept:\" ,u_dept)\nprint(\"u_gender:\" ,u_gender)\nprint(\"u_curr_police_dist:\" ,u_curr_police_dist)\nprint(\"u_curr_sup_dist:\" ,u_curr_sup_dist)\nprint(\"u_ana_neigh:\" ,u_ana_neigh)\nprint(\"u_neigh:\" ,u_neigh)\nprint(\"u_sf_find_neigh:\" ,u_sf_find_neigh)","a39eebe3":"del df['Current Police Districts']\ndel df['Current Supervisor Districts']\ndel df['Analysis Neighborhoods']\ndel df['Neighborhoods']\ndel df['SF Find Neighborhoods']\ndel df['Name']\ndel df['Person']","2e1659f5":"m = 0\nf = 0\nf_m = 0\nm_f = 0\nm_m = 0\n\nfor i,row in df.iterrows():\n    if row['Gender'] == 'M':\n        m+=1 \n    \n    elif row['Gender'] == 'F':\n        f+=1\n    \n    elif row['Gender'] == 'F & M':\n        f_m+=1\n    \n    elif row['Gender'] == 'M & F':\n        m_f+=1\n    \n    elif row['Gender'] == 'M & M':\n        m_m+=1\n\n        \nprint(\"m:\" , m , \"f:\" ,f ,  \"f_m:\" ,f_m  , \"m_f:\" , m_f ,  \"m_m:\" , m_m  )","35ef08d7":"sns.countplot(x = \"Gender\" , data = df)","31ae81e9":"sns.countplot(y = \"Department\/Source\" ,hue =\"Gender\", data = df)","325b3051":"### Analytical results\n\n### Gender gap in Administrator Dept b\/w men and women is huge.\n\n\n### Airports,PUC,SFMTA are not having any females.\n\n\n### Port and Library are having gender equality.\n\n\n#### I believe the depts where lots of physical work is involved is not having female staff\n","27afa35e":"## Nice joke ! no unique values in all columns... \n\n## so ?\n\n## Analysis:\n\n## Gender is directly related to department !!!\n ","8b983e14":"## Data Cleaning","15b78de7":"## Visualization"}}