{"cell_type":{"49cea65c":"code","b8ef3e15":"code","8e005bf8":"code","42cddc19":"code","a985e942":"code","ccc86342":"code","3f1c7951":"code","f98588df":"code","183997e9":"code","d165cedd":"code","bd258903":"code","b2032382":"code","1d876fc0":"code","4bf636f1":"code","4a24359d":"code","25e50c09":"code","e943c39b":"code","ee82d11a":"code","1618f94e":"code","9ae81630":"markdown"},"source":{"49cea65c":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.ensemble import RandomForestClassifier\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\nsns.set_palette(\"Set2\")","b8ef3e15":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","8e005bf8":"train_data.info()","42cddc19":"train_data.head()","a985e942":"test_data.head()","ccc86342":"train_data.pivot_table(index='Pclass', values='Survived', aggfunc=['count', 'mean']).style.background_gradient(vmin=0)","3f1c7951":"plt.subplots(figsize=(10, 5))\ng = sns.heatmap(train_data.pivot_table(index='Pclass', columns='Sex', values='Survived'), annot=True, cmap=\"YlGnBu\")\ng.set_title(\"Survived ratio by Pclass and sex\", weight='bold', size=15)\ng.set_xlabel('sex', weight='bold', size=13)\ng.set_ylabel('Pclass', weight='bold', size=13)\nplt.show()","f98588df":"f, ax=plt.subplots(1,2, figsize=(20,5))\nsns.distplot(train_data['Age'], ax=ax[0])\n# sns.distplot(train_data.loc[train_data.Survived == 0, 'Age'], ax=ax[1])\n# sns.distplot(train_data.loc[train_data.Survived == 1, 'Age'], ax=ax[1])\nsns.histplot(data=train_data, x='Age', hue='Survived', ax=ax[1], element='step')\n\nfor i in range(2):\n    ax[i].spines[['top','right']].set_visible(False)\n    ax[i].set_xlabel('Age', weight='bold', size=15)\n    ax[i].set_ylabel('Density', weight='bold', size=15)\n    ax[i].set_facecolor('#f6f5f5')\nf.suptitle(\"Age' distribution\", weight='bold', size=20)\nplt.show()","183997e9":"from ipywidgets import interactive\ndata=train_data\ndef size_widget(width=15, height=5, Y='Age', X='Survived'):\n    f, ax = plt.subplots(1, 3, figsize=(width, height))\n    sns.violinplot(x=data[X], y=data[Y], ax=ax[0], edgecolor='black')\n    sns.boxplot(x=data[X], y=data[Y], ax=ax[1])\n    sns.stripplot(x=data[X], y=data[Y], ax=ax[2])\n    for i in range(3):\n        ax[i].spines[['top','right']].set_visible(False)\n        ax[i].set_xlabel(X, size=10)\n        ax[i].set_ylabel(Y, size=10)\n        ax[i].set_facecolor('#f6f5f5')\n    f.suptitle(f\"{Y}'s distribution by {X}\", weight='bold', size=15)\n    plt.show()","d165cedd":"interactive(size_widget, X = ['Pclass', 'Sex', 'Survived'], Y = ['Age'],  height=(3, 7, 1), width=(10, 25, 5))","bd258903":"for i in range(6):\n    train_data.loc[(train_data.Age >= 10*i) & (train_data.Age < 10*(i + 1)), 'AgeBin'] = i","b2032382":"women = train_data.loc[train_data.Sex == \"female\"][\"Survived\"]\nrate_women = sum(women)\/len(women)\nrate_women","1d876fc0":"men = train_data.loc[train_data.Sex == \"male\"][\"Survived\"]\nrate_men = sum(men)\/len(men)\nrate_men","4bf636f1":"target = train_data[\"Survived\"]","4a24359d":"features = [\"Pclass\", \"Sex\", \"SibSp\", \"Parch\"]\ntrain_data[features]","25e50c09":"# Automatically performs one-hot encoding for you\nx = pd.get_dummies(train_data[features])\nx","e943c39b":"xtest = pd.get_dummies(test_data[features])\nxtest","ee82d11a":"model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(x, target)\npredictions = model.predict(xtest)\npredictions","1618f94e":"output = pd.DataFrame({'PassengerId':test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submmision.csv', index=False)\noutput.head()","9ae81630":"<h1 align='center'> Exploratory Data Analysis <\/h1>"}}