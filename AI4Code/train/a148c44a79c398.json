{"cell_type":{"d3cfc058":"code","7ed264eb":"code","d1fb2d70":"code","2fe3193a":"code","ad4d7310":"code","0774d2c0":"code","b2f409c6":"code","d9a49910":"code","68d9db3a":"code","81f700c8":"code","5647c3e1":"code","45b76b61":"markdown","40125087":"markdown","496be8e0":"markdown","9667203b":"markdown","3e307f21":"markdown","f0885b9e":"markdown","122449c1":"markdown","069d6565":"markdown","494c5a16":"markdown","af5f27c4":"markdown","87c9dddc":"markdown","fd5f5b3f":"markdown","892ab924":"markdown","c7fca351":"markdown","ecffdb61":"markdown","149a99a7":"markdown","58e31868":"markdown","eba94e20":"markdown","670a303b":"markdown","b2496928":"markdown"},"source":{"d3cfc058":"import pandas as pd\nimport numpy as np\nimport os\nimport sys\nfrom gensim.summarization import summarize \nfrom gensim.summarization import keywords\nimport re","7ed264eb":"print(os.listdir(\"..\/input\"))\nPATH = \"..\/input\/\"","d1fb2d70":"answers = pd.read_csv(PATH + 'answers.csv')\ncomments = pd.read_csv(PATH + 'comments.csv')\nemails = pd.read_csv(PATH + 'emails.csv')\ngroup_memberships = pd.read_csv(PATH + 'group_memberships.csv')\ngroups = pd.read_csv(PATH + 'groups.csv')\nmatches = pd.read_csv(PATH + 'matches.csv')\nprofessionals = pd.read_csv(PATH + 'professionals.csv')\nquestions = pd.read_csv(PATH + 'questions.csv')\nschool_memberships = pd.read_csv(PATH + 'school_memberships.csv')\nstudents = pd.read_csv(PATH + 'students.csv')\ntag_questions = pd.read_csv(PATH + 'tag_questions.csv')\ntag_users = pd.read_csv(PATH + 'tag_users.csv')\ntags = pd.read_csv(PATH + 'tags.csv')","2fe3193a":"answers.head()","ad4d7310":"answers['answers_body'].head()","0774d2c0":"Professionals_ID = pd.merge(professionals[['professionals_id','professionals_industry','professionals_headline']], answers[['answers_author_id','answers_id','answers_body']], left_on='professionals_id', right_on='answers_author_id', how='inner')\nProfessionals_ID.sort_values('professionals_id')\n\nProfessionals_ID.head()","b2f409c6":"len(Professionals_ID.answers_body)","d9a49910":"Professionals_ID[\"answers_keywords\"] = \"\"\n\nProfessionals_ID.head()","68d9db3a":"Professionals_ID['answers_body'].fillna(\"No Answer\", inplace = True)\nfor num in range(len(Professionals_ID.answers_body)):\n    Answers_Text = Professionals_ID['answers_body'][num]\n    Answers_Text = re.sub('<.+?>', '', Answers_Text, 0, re.I|re.S)\n    Answers_Text = re.split('\\n', Answers_Text)\n    for n in Answers_Text:\n        if (n.startswith('http')):\n            del Answers_Text[Answers_Text.index(n)]\n    \n    result = \"\"\n    for n in Answers_Text:\n        result += n + \". \"\n    \n    if (num%1000 == 0 ):\n        try:\n            print(\"iteration : \" + str(num))\n            print(\"1. Summarizing :\", '\\n', summarize(str(result)), '\\n')\n            print(\"######################################################################################################\", '\\n')\n            print(\"2. Keywords :\", '\\n', keywords(str(result)))\n        except ValueError:\n            pass  # do nothing!\n    \n    keywords1 = re.split('\\n', keywords(str(result)))\n    \n    Professionals_ID[\"answers_keywords\"][num] = keywords1","81f700c8":"Professionals_ID[['professionals_id','answers_body','answers_keywords']].tail(10)","5647c3e1":"Professionals_ID.to_csv(\"Professinals_kewords\", sep='\\t', encoding='utf-8')","45b76b61":"Add \"answers_keywords\" column","40125087":"It's quite simple model, but I'am assured that it makes sense.","496be8e0":"Copyright [jeeu] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.","9667203b":"<b> Check the length.","3e307f21":"Check this Dataframe.","f0885b9e":"### About Professional Recognition","122449c1":"At this time, We can see that there are 10,000 differences.(If you use to pd.merge option \"how=outer\", you can see 60,000)<br>\n<b> We're going to rule out 10,000 ghost users.","069d6565":"## Mechanism","494c5a16":"We execute to preprocess 'answers_body' (Remove Na\/NaN, Sub, etc..)","af5f27c4":"If I have more time, I'll try to something below.","87c9dddc":"Use Jaccard similarity, then compare to new questions that have new keywords","fd5f5b3f":"<b> First of all, What we need to do is identify experts.<\/b> <br>\nAnalyze the answers on each post to identify the keywords of the expert who gave the answers.","892ab924":"## Abstract","c7fca351":"<b> As you can see below, you need to pre-process answer. <\/b>","ecffdb61":"<b> Merge 'Professionals' and 'answers' <\/b>","149a99a7":"### Make Model","58e31868":"### Make similarities","eba94e20":"# Simple Solution in CareerVilage","670a303b":"## What's Next?","b2496928":"<b> This is a very simple solution that uses similarities to recommend the appropriate professionals. <\/b>"}}