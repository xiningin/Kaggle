{"cell_type":{"93feb605":"code","cd1b0a6e":"code","ccb816ac":"code","2176d15b":"code","0c1a45e5":"code","f3e08771":"code","97bc58d4":"markdown","25a89881":"markdown","a18f1697":"markdown"},"source":{"93feb605":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interactive\nsns.set()\ninit_notebook_mode(connected=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","cd1b0a6e":"data15=pd.read_csv('..\/input\/2015.csv')\ndata16=pd.read_csv('..\/input\/2016.csv')\ndata17=pd.read_csv('..\/input\/2017.csv')\ndata17=data17.rename(columns={'Happiness.Rank':'Happiness Rank','Happiness.Score':'Happiness Score'})\ndata17.head()\n","ccb816ac":"dataall=[data15,data16,data17]\nfig=[]\nscl = [[0.0, '#7d899c'],\n       [0.2, '#637082'],\n       [0.4, '#4d5765'],\n       [0.6, '#373e48'],\n       [0.8, '#21252b'],\n       [1.0, '#0b0c0e']]\n","2176d15b":"for d in dataall:\n    data = [go.Choropleth(\n        colorscale = scl,\n        autocolorscale = False,\n        locations = d['Country'],\n        z = d['Happiness Rank'],\n        locationmode = 'country names',\n        marker = go.choropleth.Marker(\n            line = go.choropleth.marker.Line(\n                color = 'rgb(255,255,255)',\n                width = 1\n            )),\n        colorbar = go.choropleth.ColorBar(\n            title = 'Rank')\n    )]\n    layout = go.Layout(\n        width=750,\n        height=700,\n        title = go.layout.Title(\n            text = 'World Happiness Ranking'\n        ),\n        geo = go.layout.Geo(\n            scope = 'world',\n            projection = go.layout.geo.Projection(),\n            showlakes = False),\n    )\n    f = go.Figure(data = data, layout = layout)\n    fig.append(f)\ncount=2015\nfor i in fig:\n    print(str(count)+' Ranking')\n    count+=1\n    iplot(i)\n","0c1a45e5":"x=[2015,2016,2017]\ny=[]\ntop=[]\nworst=[]\navg=[]\nfor d in dataall:\n    y.append(d[d['Country']=='India']['Happiness Score'].item())\n    top.append(d[d['Happiness Score']==np.max(d['Happiness Score'])]['Happiness Score'].item())\n    worst.append(d[d['Happiness Score']==np.min(d['Happiness Score'])]['Happiness Score'].item())\n    avg.append(np.average(d['Happiness Score']))\nprint(x,y,top,worst,avg)\n","f3e08771":"layout = go.Layout(\n    xaxis=dict(\n        title='Year',\n        titlefont=dict(\n            family='Arial, sans-serif',\n            size=18,\n            color='black'\n        ),\n        nticks=3,\n        showticklabels=True,\n        tickangle=45,\n        tickfont=dict(\n            family='Old Standard TT, serif',\n            size=14,\n            color='black'\n        ),\n        exponentformat='e',\n        showexponent='all'\n    ),\n    yaxis=dict(\n        title='Happiness score',\n        titlefont=dict(\n            family='Arial, sans-serif',\n            size=18,\n            color='black'\n        ),\n        showticklabels=True,\n        tickangle=45,\n        tickfont=dict(\n            family='Old Standard TT, serif',\n            size=14,\n            color='black'\n        ),\n        exponentformat='e',\n        showexponent='all'\n    )\n)\ndata=[go.Scatter(x=x,y=y,name='India'),go.Scatter(x=x,y=top,mode='markers',name='Best score',marker = dict(\n        size = 5,\n        color = 'lightgreen',\n        line = dict(\n            width = 2,\n        )\n    )),go.Scatter(x=x,y=worst,mode='markers',name='Worst Score',marker = dict(\n        size = 5,\n        color = 'red',\n        line = dict(\n            width = 2,\n        )\n    )),go.Scatter(x=x,y=avg,mode='markers+lines',name='Average Score',marker = dict(\n        size = 5,\n        color = 'purple',\n        line = dict(\n            width = 2,\n        )\n    ))]\nfig=go.Figure(data=data,layout=layout)\niplot(fig)","97bc58d4":"<center><b><font size=4>Plotting every country's happiness-rank as Choropleth Map<\/font><\/b><\/center>","25a89881":"<center><b><font size=4>Preparing data for top, worst, average & India's happiness score<\/font><\/b><\/center>","a18f1697":"<center><b><font size=4>India's Happiness Scorecard<\/font><\/b><\/center>"}}