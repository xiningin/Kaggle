{"cell_type":{"a0c7ac6f":"code","69eee5fe":"code","7600947c":"code","950f2873":"code","4c3793b8":"code","667de93f":"code","79cdf126":"code","5f988b0d":"code","533a3d37":"markdown","98cc639f":"markdown","d380e501":"markdown","c77fdbe2":"markdown"},"source":{"a0c7ac6f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","69eee5fe":"#clone YOLOv5 and \n!git clone https:\/\/github.com\/ultralytics\/yolov5  # clone repo\n%cd yolov5\n%pip install -qr requirements.txt # install dependencies\n%pip install -q roboflow\n\nimport torch\nimport os\nfrom IPython.display import Image, clear_output  # to display images\n\nprint(f\"Configura\u00e7\u00e3o conclu\u00edda. Usando torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})\")","7600947c":"from roboflow import Roboflow\nrf = Roboflow(notebook=\"ultralytics\")","950f2873":"# set up environment\nos.environ[\"DATASET_DIRECTORY\"] = \"\/content\/datasets\"","4c3793b8":"rf = Roboflow(api_key=\"DY74HeHlf8VR0r6wjEaw\")\nproject = rf.workspace().project(\"safety-equipment-hcvje\")\ndataset = project.version(2).download(\"yolov5\")","667de93f":"!python train.py --img 416 --batch 16 --epochs 150 --data {dataset.location}\/data.yaml --weights yolov5s.pt --cache","79cdf126":"!python detect.py --weights runs\/train\/exp\/weights\/best.pt --img 416 --conf 0.1 --source {dataset.location}\/test\/images --augment","5f988b0d":"import glob\nimport os\nfrom IPython.display import Image, display\n\n#for imageName in glob.glob('\/content\/datasets\/Safety-Equipment-2\/test\/images\/*.jpg'): #assuming JPG\nfor imageName in glob.glob('runs\/detect\/exp\/*.jpg'): #assuming JPG\n    print(imageName)\n    display(Image(filename=imageName))\n    print(\"\\n\")","533a3d37":"# Treinar o modelo YOLOv5","98cc639f":"# Infer\u00eancia com Pesos Treinados","d380e501":"# Requisitos de instala\u00e7\u00e3o","c77fdbe2":"# Montar nosso conjunto de dados"}}