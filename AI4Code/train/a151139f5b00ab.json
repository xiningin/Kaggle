{"cell_type":{"b4c6da5e":"code","6d405b3c":"code","70bed6f1":"code","e6b554e7":"code","bc358ab3":"code","6951015c":"code","19fa6678":"code","4d87979c":"code","2d6468b8":"code","96e8d62b":"code","0ed53a91":"code","ec9d743f":"code","f62f3b6a":"code","e3d2f92e":"code","ba08e1be":"code","0f952ef5":"code","23c6c752":"code","e1a24c74":"code","10dc6a06":"code","fe7bc69b":"code","6dccfb17":"code","561f1fb5":"code","988528f4":"code","08b74659":"code","998ad5a4":"code","e19cb84b":"code","ddbca252":"code","9fb3c0f2":"code","462fba90":"code","928c5033":"code","474b320b":"code","41ce5dd9":"code","fb2c36a4":"code","7da14ad4":"code","96d8a237":"code","8095c4cc":"code","1264622b":"code","5648bdd1":"code","bc731272":"code","c0f6b980":"code","a75bf3a0":"code","8f448325":"code","4c68f73d":"code","32d0a5dd":"code","0201112a":"code","965f0eb8":"code","f7d056a8":"code","2dfea0b6":"code","464bf48a":"code","9999e288":"code","5f802524":"code","0d93ed0f":"code","2bd6005b":"code","65eaf5eb":"code","bde9eae6":"code","aa8afd2a":"code","00616b9b":"code","c21b7b8f":"code","42283de6":"code","8e80c921":"code","8745e302":"markdown","b3fe43b3":"markdown"},"source":{"b4c6da5e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6d405b3c":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import classification_report, confusion_matrix","70bed6f1":"df=pd.read_csv('..\/input\/titanic\/train.csv')","e6b554e7":"df_test=pd.read_csv('..\/input\/titanic\/test.csv')","bc358ab3":"df.head()","6951015c":"df.isnull().sum()","19fa6678":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","4d87979c":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',data=df)","2d6468b8":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Sex',data=df,palette='RdBu_r')","96e8d62b":"sns.set_style('whitegrid')\nsns.countplot(x='Survived',hue='Pclass',data=df,palette='rainbow')","0ed53a91":"sns.distplot(df['Age'].dropna(),kde=False,color='darkred',bins=40)","ec9d743f":"df['Age'].hist(bins=30,color='darkred',alpha=0.3)","f62f3b6a":"sns.countplot(x='SibSp',data=df)","e3d2f92e":"df['Fare'].hist(color='green',bins=40,figsize=(8,4))","ba08e1be":"import cufflinks as cf\ncf.go_offline()","0f952ef5":"df['Fare'].iplot(kind='hist',bins=30,color='green')","23c6c752":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=df,palette='winter')","e1a24c74":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","10dc6a06":"df['Age'] = df[['Age','Pclass']].apply(impute_age,axis=1)","fe7bc69b":"df.drop('Cabin',axis=1,inplace=True)","6dccfb17":"df.head()","561f1fb5":"df['Embarked'].value_counts()","988528f4":"df['PassengerId'].value_counts()","08b74659":"df.dropna(inplace=True)","998ad5a4":"df.info()","e19cb84b":"df.drop(['PassengerId','Name','Ticket'],axis=1,inplace=True)","ddbca252":"df.head()","9fb3c0f2":"df.info()","462fba90":"cat=df.select_dtypes(include=['object'])\nnum=df.select_dtypes(include=['int64','float64'])","928c5033":"from sklearn import preprocessing \nle = preprocessing.LabelEncoder()\ncat=cat.apply(le.fit_transform)","474b320b":"num.drop('Survived',axis=1,inplace=True)","41ce5dd9":"num.corr()","fb2c36a4":"def outlier_capping(x):\n    x = x.clip(upper=x.quantile(0.99))\n    x = x.clip(lower=x.quantile(0.01))\n    return x\nnum=num.apply(lambda x: outlier_capping(x))","7da14ad4":"num.isnull().sum()","96d8a237":"final=pd.concat([num,cat],axis=1)","8095c4cc":"final","1264622b":"X=final.iloc[:,0:7]\ny=df['Survived']","5648bdd1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.30, \n                                                    random_state=101)","bc731272":"from sklearn.ensemble import RandomForestClassifier\nclf=RandomForestClassifier(n_estimators=100,max_depth=3,random_state=123,min_samples_split=2)\nclf.fit(X_train,y_train)","c0f6b980":"clf.score(X_train,y_train)","a75bf3a0":"clf.score(X_test,y_test)","8f448325":"predictions = clf.predict(X_test)","4c68f73d":"from sklearn.metrics import confusion_matrix\npd.DataFrame(confusion_matrix(predictions,y_test))","32d0a5dd":"from sklearn.metrics import classification_report\nprint(classification_report(predictions,y_test))","0201112a":"df_test","965f0eb8":"X.columns","f7d056a8":"a=['Pclass', 'Age', 'SibSp', 'Parch', 'Fare', 'Sex', 'Embarked']","2dfea0b6":"top_feature=pd.DataFrame()\ntop_feature=df_test.loc[:,df_test.columns.isin(a)]\n#top_feature = top_feature.reindex(sorted(top_feature.columns), axis=1)","464bf48a":"top_feature","9999e288":"top_feature['Age'] = top_feature[['Age','Pclass']].apply(impute_age,axis=1)","5f802524":"cat_test=top_feature.select_dtypes(include=['object'])\nnum_test=top_feature.select_dtypes(include=['int64','float64'])","0d93ed0f":"cat_test=cat_test.apply(le.fit_transform)","2bd6005b":"num_test.isnull().sum()","65eaf5eb":"def outlier_capping(x):\n    x = x.clip(upper=x.quantile(0.99))\n    x = x.clip(lower=x.quantile(0.01))\n    return x\nnum_test=num_test.apply(lambda x: outlier_capping(x))","bde9eae6":"num_test.fillna(0,inplace=True,axis=0)","aa8afd2a":"final_test=pd.concat([num_test,cat_test],axis=1)","00616b9b":"prediction_test=clf.predict(final_test)","c21b7b8f":"prediction_test","42283de6":"prediction_test=pd.DataFrame(prediction_test)\na=['predicton_survived']\nprediction_test.columns=a\noutput=pd.concat([df_test,prediction_test],axis=1)","8e80c921":"output.to_csv(\"prediction_results.csv\")","8745e302":"**we drop these below 3 columns because they have many distinct values**","b3fe43b3":"**as we can see that in age there is missing value so we create a missing value imputation function by  plotting age range for each class and taking mean for each class to fill missing values **"}}