{"cell_type":{"c5687dbe":"code","c2f4cc94":"code","35c37377":"code","20226961":"code","294976ec":"code","99a972ef":"code","52bd994d":"code","c7d01f2f":"code","6fc61606":"code","99d4986f":"code","cfa8780c":"code","c59e3d2b":"code","8377a598":"code","69072b9c":"code","5cf8f958":"code","e4cdc293":"code","3e05a445":"code","2d1afa64":"code","6da98d91":"code","59fef587":"code","26695ac4":"code","b6b6357d":"code","a6f15cc0":"code","f170e7ee":"code","03675673":"code","527ac339":"code","a5a308e2":"markdown","6b9f2714":"markdown","a2a202ed":"markdown","624db7b5":"markdown","f03334d3":"markdown","cb697acf":"markdown","a61b8a0f":"markdown","fae59a14":"markdown","4de8d1b4":"markdown","d71b1b97":"markdown"},"source":{"c5687dbe":"from typing import Any, Union\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nimport re\nfrom statistics import mode\nfrom pandas import DataFrame, Series\nfrom pandas.io.parsers import TextFileReader\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.compose import make_column_selector, make_column_transformer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.impute import SimpleImputer\nimport seaborn as sns\nwarnings.filterwarnings('ignore')\nplt.style.use('fivethirtyeight')\n","c2f4cc94":"# X data\nX_train = pd.read_csv('..\/input\/titanic\/train.csv')\nX_test = pd.read_csv('..\/input\/titanic\/test.csv')\n\n# y data\ny_train = X_train['Survived']\n# y_test = pd.read_csv(\"..\/data\/gender_submission.csv\")","35c37377":"def display_heatmap_na(df, mode=1):\n    if mode == 1:\n        plt.style.use('seaborn')\n        plt.figure()\n        sns.heatmap(df.isnull(), yticklabels = False, cmap='plasma')\n        plt.title('Null Values in Training Set')\n    else:\n        print(X_train.isnull().sum())","20226961":"X_train.head()","294976ec":"print(f'Unique Values in Pclass :{X_train.Pclass.unique()}')","99a972ef":"print(f'Unique Values in SibSp :{X_train.SibSp.unique()}')","52bd994d":"print(f'Unique Values in Embarked :{X_train.Embarked.unique()}')","c7d01f2f":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(X_train.Survived)\nplt.title('Number of passenger Survived');\n\nplt.subplot(1,2,2)\nsns.countplot(x=\"Survived\", hue=\"Sex\", data=X_train)\nplt.title('Number of passenger Survived');","6fc61606":"display_heatmap_na(X_train)","99d4986f":"display_heatmap_na(X_test)","cfa8780c":"plt.figure(figsize=(15,5))\nplt.style.use('fivethirtyeight')\n\nplt.subplot(1,2,1)\nsns.countplot(X_train['Pclass'])\nplt.title('Count Plot for PClass');\n\nplt.subplot(1,2,2)\nsns.countplot(x=\"Survived\", hue=\"Pclass\", data=X_train)\nplt.title('Number of passenger Survived');","c59e3d2b":"pclass1 = X_train[X_train.Pclass == 1]['Survived'].value_counts(normalize=True).values[0]*100\npclass2 = X_train[X_train.Pclass == 2]['Survived'].value_counts(normalize=True).values[1]*100\npclass3 = X_train[X_train.Pclass == 3]['Survived'].value_counts(normalize=True).values[1]*100\n\nprint(\"Lets look at some satistical data!\\n\")\nprint(\"Pclaas-1: {:.1f}% People Survived\".format(pclass1))\nprint(\"Pclaas-2: {:.1f}% People Survived\".format(pclass2))\nprint(\"Pclaas-3: {:.1f}% People Survived\".format(pclass3))","8377a598":"X_train['Age'].plot(kind='hist')","69072b9c":"# outliers detected\n\nX_train['Age'].hist(bins=40)\nplt.title('Age Distribution');","5cf8f958":"# set plot size\nplt.figure(figsize=(15, 3))\n\n# plot a univariate distribution of Age observations\nsns.distplot(X_train[(X_train[\"Age\"] > 0)].Age, kde_kws={\"lw\": 3}, bins = 50)\n\n# set titles and labels\nplt.title('Distribution of passengers age',fontsize= 14)\nplt.xlabel('Age')\nplt.ylabel('Frequency')\n# clean layout\n# plt.tight_layout()","e4cdc293":"plt.figure(figsize=(15, 3))\n\n# Draw a box plot to show Age distributions with respect to survival status.\nsns.boxplot(y = 'Survived', x = 'Age', data = X_train,\n     palette=[\"#3f3e6fd1\", \"#85c6a9\"], fliersize = 0, orient = 'h')\n\n# Add a scatterplot for each category.\nsns.stripplot(y = 'Survived', x = 'Age', data = X_train,\n     linewidth = 0.6, palette=[\"#3f3e6fd1\", \"#85c6a9\"], orient = 'h')\n\nplt.yticks( np.arange(2), ['drowned', 'survived'])\nplt.title('Age distribution grouped by surviving status (train data)',fontsize= 14)\nplt.ylabel('Passenger status after the tragedy')\nplt.tight_layout()","3e05a445":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(X_train['SibSp'])\nplt.title('Number of siblings\/spouses aboard');\n\nplt.subplot(1,2,2)\nsns.countplot(x=\"Survived\", hue=\"SibSp\", data=X_train)\nplt.legend(loc='right')\nplt.title('Number of passenger Survived');","2d1afa64":"plt.figure(figsize=(15,5))\nplt.subplot(1,2,1)\nsns.countplot(X_train['Embarked'])\nplt.title('Number of Port of embarkation');\n\nplt.subplot(1,2,2)\nsns.countplot(x=\"Survived\", hue=\"Embarked\", data=X_train)\nplt.legend(loc='right')\nplt.title('Number of passenger Survived');","6da98d91":"sns.heatmap(X_train.corr(), annot=True)\nplt.title('Corelation Matrix');","59fef587":"corr = X_train.corr()\nsns.heatmap(corr[((corr >= 0.3) | (corr <= -0.3)) & (corr != 1)], annot=True, linewidths=.5, fmt= '.2f')\nplt.title('Configured Corelation Matrix');","26695ac4":"sns.catplot(x=\"Embarked\", y=\"Fare\", kind=\"violin\", inner=None,\n            data=X_train, height = 6, order = ['C', 'Q', 'S'])\nplt.title('Distribution of Fare by Embarked')\nplt.tight_layout()","b6b6357d":"sns.catplot(x=\"Pclass\", y=\"Fare\", kind=\"swarm\", data=X_train, height = 6)\n\nplt.tight_layout()","a6f15cc0":"sns.catplot(x=\"Pclass\", y=\"Fare\",  hue = \"Survived\", kind=\"swarm\", data=X_train,\n                                    palette=[\"#3f3e6fd1\", \"#85c6a9\"], height = 6)\nplt.tight_layout()","f170e7ee":"X_train['Fare'].nlargest(10).plot(kind='bar', title = '10 largest Fare', color = ['#C62D42', '#FE6F5E']);\nplt.xlabel('Index')\nplt.ylabel('Fare')","03675673":"X_train['Age'].nlargest(10).plot(kind='bar', color = ['#5946B2','#9C51B6']);\nplt.title('10 largest Ages')\nplt.xlabel('Index')\nplt.ylabel('Ages');","527ac339":"X_train['Age'].nsmallest(10).plot(kind='bar', color = ['#A83731','#AF6E4D'])\nplt.title('10 smallest Ages')\nplt.xlabel('Index')\nplt.ylabel('Ages');","a5a308e2":"**Let's look at Number of siblings\/spouses aboard**","6b9f2714":"**Fare vs Pclass**","a2a202ed":"## EDA - Exploratory Data Analysis","624db7b5":"**Look in to relationships among dataset**","f03334d3":"**It's Time to look at the Age column!**","cb697acf":"**Fare vs Embarked**","a61b8a0f":"**Configure the heatmap**","fae59a14":"**Let's look at target feature first**\n","4de8d1b4":"**Let's analysize Pclass**","d71b1b97":"**Now Looking at Port of embarkation**"}}