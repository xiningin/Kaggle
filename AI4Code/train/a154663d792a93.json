{"cell_type":{"65cfd2a1":"code","583facad":"code","e8028f39":"code","0d690ee8":"code","8f56fb80":"code","244d33d3":"code","d8551794":"code","3b37521e":"code","0a072ae2":"code","a6ef32da":"code","9991aaf7":"code","2ec65615":"code","54f30a11":"code","ecb4c3ee":"code","67c0811b":"code","c4a5a349":"code","f9232c9e":"code","64cd448d":"code","5ff7b043":"code","c3d8e351":"code","10b4a505":"code","a0581014":"code","ffb80c4b":"code","ecd48672":"code","79f27c71":"code","2605c280":"code","e5cf10ac":"code","f7c252de":"code","29408039":"code","30434f23":"code","527e8baf":"code","5059cc7d":"code","45074cc7":"code","dc4f5dcd":"code","7891afa6":"code","c2561c04":"markdown","aa9bdba2":"markdown","d5c67528":"markdown","24a086d7":"markdown","c5e21f6d":"markdown","acacde80":"markdown","3358f658":"markdown","dc326a19":"markdown","3bdc03ed":"markdown","5dbaade9":"markdown","4b318817":"markdown"},"source":{"65cfd2a1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","583facad":"import warnings\nwarnings.filterwarnings('ignore')\n\nimport matplotlib.pyplot as plt, seaborn as sns\n\nimport statsmodels.api as sm\n\nfrom sklearn.model_selection import train_test_split, KFold, cross_val_score,\\\nRandomizedSearchCV, GridSearchCV\nfrom sklearn.feature_selection import RFE\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.ensemble import RandomForestRegressor, StackingRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.metrics import r2_score, mean_squared_error","e8028f39":"csv = []\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        csv.append(os.path.join(dirname, filename))\n        \ncsv = [i for i in csv if i not in ['\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/unclean cclass.csv',\n          '\/kaggle\/input\/used-car-dataset-ford-and-mercedes\/unclean focus.csv']]\n\ncsv","0d690ee8":"df = pd.read_csv(csv[0])\ndf['company'] = csv[0].split('\/')[-1][:-4]\nfor i in csv[1:]:\n    new = pd.read_csv(i)\n    new['company'] = i.split('\/')[-1][:-4]\n    df = pd.concat([df,new], axis=0)\n    \ndf.head()","8f56fb80":"100*df.isnull().sum()\/len(df)","244d33d3":"df = df.drop('tax(\u00a3)', axis=1)","d8551794":"100*df.isnull().sum()\/len(df)","3b37521e":"# Missing value imputation\nfor i in ['tax','mpg']:\n    df[i] = df[i].fillna(df[i].median())\n    \n100*df.isnull().sum()\/len(df)  ","0a072ae2":"# Categorical features\ncat_vars = df.select_dtypes(include=['object']).columns.to_list() + ['year']\ncat_vars","a6ef32da":"for i in cat_vars:\n    print(df[i].value_counts(),'\\n\\n')","9991aaf7":"for i in cat_vars:\n    target = pd.DataFrame(df[i].value_counts())\n    entries = target[target.iloc[:,0]<0.3*len(target)].index\n    df = df[~df[i].isin(entries)]","2ec65615":"for i in cat_vars:\n    print(df[i].value_counts(),'\\n\\n')","54f30a11":"# Dummy variable creation\ndf = pd.get_dummies(data=df, columns=cat_vars, drop_first=True, prefix=cat_vars)\ndf.head()","ecb4c3ee":"num_vars = df.select_dtypes(include=['int64','float64']).columns\nnum_vars","67c0811b":"df[num_vars].plot(kind='box', subplots=True, layout=(2,3), figsize=(20,8))\nplt.show()","c4a5a349":"for i in num_vars:\n    Q1 = df[i].quantile(0.25)\n    Q3 = df[i].quantile(0.75)\n    IQR = Q3-Q1\n    upper = Q3 + (1.5*IQR)\n    lower = Q1 - (1.5*IQR)\n    df = df[(df[i]>=lower) & (df[i]<=upper)]\n    \ndf[num_vars].plot(kind='box', subplots=True, layout=(2,3), figsize=(20,8))\nplt.show()","f9232c9e":"mask = np.triu(df[num_vars].corr(),1)\nsns.heatmap(df[num_vars].corr(), mask=mask, annot=True)\nplt.show()","64cd448d":"sns.pairplot(df[num_vars])\nplt.show()","5ff7b043":"train,test = train_test_split(df, train_size=0.7, random_state=100)","c3d8e351":"scaler = MinMaxScaler()\ntrain[num_vars] = scaler.fit_transform(train[num_vars])\ntest[num_vars] = scaler.transform(test[num_vars])","10b4a505":"X_train = train.drop('price', axis=1)\ny_train = train.price\n\nX_test = test.drop('price', axis=1)\ny_test = test.price","a0581014":"X_add_const = sm.add_constant(X_train)\nmodel = sm.OLS(y_train,X_add_const).fit()\nmodel.summary()","ffb80c4b":"folds = KFold(n_splits=5, shuffle=True, random_state=42)\n\nlr = LinearRegression()\ncv_score = cross_val_score(lr, X_train, y_train, cv=folds, scoring='r2')\ncv_score.mean()","ecd48672":"ridge = Ridge()\ncv_score = cross_val_score(ridge, X_train, y_train, cv=folds, scoring='r2')\ncv_score.mean()","79f27c71":"hyp = {'alpha':[0.0001,0.001,0.01,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.5,0.7]}\ngrid_ridge = GridSearchCV(estimator=ridge, param_grid=hyp, cv=folds, n_jobs=-1,\n                    scoring='r2', verbose=3, return_train_score=True)\ngrid_ridge.fit(X_train,y_train)","2605c280":"grid_df = pd.DataFrame(grid_ridge.cv_results_)\n\nplt.plot(grid_df.param_alpha, grid_df.mean_train_score)\nplt.plot(grid_df.param_alpha, grid_df.mean_test_score)\nplt.grid(alpha=0.7)\nplt.show()","e5cf10ac":"grid_ridge.best_score_, grid_ridge.best_estimator_","f7c252de":"rf = RandomForestRegressor()\ncv_score = cross_val_score(rf, X_train, y_train, cv=folds, scoring='r2')\ncv_score.mean()","29408039":"lr = LinearRegression()\nmodels = [('ridge',grid_ridge.best_estimator_),\n         ('rf',rf)]\nst = StackingRegressor(estimators=models, final_estimator=lr)","30434f23":"cv_score = cross_val_score(st, X_train, y_train, cv=folds, scoring='r2')\ncv_score.mean()","527e8baf":"st.fit(X_train,y_train)\ny_train_pred = st.predict(X_train)\ny_test_pred = st.predict(X_test)\nr2_score(y_test, y_test_pred)","5059cc7d":"print('R2 =',r2_score(y_test, y_test_pred))","45074cc7":"residual_train = y_train - y_train_pred\nresidual_test = y_test - y_test_pred\nplt.figure(figsize=(20,8))\nsns.histplot(residual_train,element='poly',color='crimson',kde=True)\nsns.histplot(residual_test,element='poly',color='green',kde=True)\nplt.title('Errors distrobution',fontsize=20)\nplt.show()\n\n\n\nplt.figure(figsize=(20,8))\nplt.axhline(y=0, linewidth=3, color='red')\nplt.scatter(residual_train[:500].index,residual_train[:500],label='train residuals')\nplt.scatter(residual_test[:500].index,residual_test[:500],label='test residuals')\nplt.xlabel('Index', fontsize=16)\nplt.ylabel('Error', fontsize=16)\nplt.legend(fontsize=15)\nplt.show()","dc4f5dcd":"preds = pd.DataFrame({'actual':y_test, 'pred':y_test_pred})\npreds = preds.sort_index().reset_index(drop=True)\n\nplt.figure(figsize=(20,8))\nplt.plot(preds.index[:200],preds.actual[:200],label='actual values')\nplt.plot(preds.index[:200],preds.pred[:200],label='predicted values')\nplt.xlabel('Index',fontsize=16)\nplt.ylabel('Price',fontsize=16)\nplt.legend(fontsize=15)\nplt.show()","7891afa6":"RMSE = (mean_squared_error(y_test,y_test_pred))**0.5\nprint('RMSE =',RMSE)","c2561c04":"## Stacking Regressor","aa9bdba2":"## Ridge Regression","d5c67528":"## Scaling and splitting of data","24a086d7":"## Random Forest","c5e21f6d":"### There is no such high multicollinearity","acacde80":"## Treating outliers","3358f658":"## Skewness Treatment","dc326a19":"## Linear Regression","3bdc03ed":"### Error terms are randomly distributed","5dbaade9":"## Combining all the datasets to one and other data manipulations","4b318817":"## Model Building\n## Statsmodels Linear Regression"}}