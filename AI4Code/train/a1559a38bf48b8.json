{"cell_type":{"603bf3a7":"code","b707e219":"code","bfb2dbf5":"code","b3e3082d":"code","8435ca02":"code","09a08f52":"code","3fce1985":"code","8fc900de":"code","a2d4af33":"code","cbcf7176":"code","debb52a3":"code","b532385c":"code","e3ee1024":"code","ab825e05":"code","f7b89426":"code","20f1de5f":"code","c3552320":"markdown","4ea8830c":"markdown","6ce73f34":"markdown","ca8825c6":"markdown","ef7c93a6":"markdown","f26b3443":"markdown","dac697a6":"markdown","c2ee81f6":"markdown","d9922aed":"markdown","d970deaa":"markdown","35dbe3d7":"markdown"},"source":{"603bf3a7":"!pip install selenium","b707e219":"from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys","bfb2dbf5":"import pandas as pd","b3e3082d":"import time\nimport datetime","8435ca02":"import smtplib\nfrom email.mime.multipart import MIMEMultipart","09a08f52":"import sys\nsys.path.append(r\"C:\\Users\\Noah\\Desktop\\zzz\\chromedriver.exe\")","3fce1985":"driver = webdriver.Chrome(executable_path=r\"C:\\Users\\Noah\\Desktop\\zzz\\chromedriver.exe\")","8fc900de":"from IPython.display import Image\nImage(\"..\/input\/1.png\")","a2d4af33":"stocks_gainers='\/\/*[@id=\"SecondaryNav-0-SecondaryNav-Proxy\"]\/div\/ul\/li[5]\/a'\nstocks_losers='\/\/*[@id=\"SecondaryNav-0-SecondaryNav-Proxy\"]\/div\/ul\/li[6]\/a'","cbcf7176":"# clicking on the losers,gainers\ndef market_chooser(market_product):\n    \n    try:\n        market_product_type = driver.find_element_by_xpath(market_product)\n        market_product_type.click()\n    except Exception as e:\n        pass","debb52a3":"df = pd.DataFrame()\ndef compile_data():\n    global df\n    global top_of_the_list\n    \n    top_of_the_list = driver.find_elements_by_xpath('\/\/*[@id=\"scr-res-table\"]\/div[1]\/table\/tbody\/tr[1]\/td[2]')\n    top_of_the_list_list = [value.text for value in top_of_the_list]\n\n   \n\n    for i in range(len(top_of_the_list_list)):\n        try:\n            df.loc[\"Characteristics\", i] = top_of_the_list_list[i]\n        except Exception as e:\n            pass\n    print('Excel Sheet Created!')","b532385c":"username = 'noahweber@gmail.com'\npassword = 'xxxxxxxxxxxxxxxxxxx'","e3ee1024":"def connect_mail(username, password):\n    global server\n    server = smtplib.SMTP('smtp.gmail.com', 587)\n    server.ehlo()\n    server.starttls()\n    server.login(username, password)","ab825e05":"def create_msg():\n    global msg\n    msg = '\\nInformation: {}\\n'.format(current_values)","f7b89426":"def send_email(msg):\n    global message\n    message = MIMEMultipart()\n    message['Subject'] = 'Yahoo Finance'\n    message['From'] = 'noahweber@gmail.com'\n    message['to'] = 'noahweber@gmail.com'\n\n    server.sendmail('noahweber@gmail.com', 'noahweber@gmail.com', msg)","20f1de5f":"for i in range(8):    \n    link = 'https:\/\/finance.yahoo.com\/'\n    driver.get(link)\n    #wait for the page to load\n    time.sleep(10)\n\n    markets_button_yfinance = driver.find_element_by_xpath('\/\/*[@id=\"Nav-0-DesktopNav\"]\/div\/div[3]\/div\/div[1]\/ul\/li[4]\/a')\n    markets_button_yfinance.click()\n    market_chooser(stocks_gainers)\n    \n    \n    compile_data()\n    \n    #save values for email\n    current_values = df.iloc[0]\n    \n    print('Number of iterations: {}'.format(i))\n    create_msg()\n    connect_mail(username,password)\n    send_email(msg)\n    print('Email sent')\n    \n    df.to_excel('best_worst_stock.xlsx')\n    \n    time.sleep(60)","c3552320":"### Now email characteristics. Again reader should change the details himself","4ea8830c":"![](https:\/\/cdn-images-1.medium.com\/max\/2000\/1*f2-zeAOSNB4RGlqH9emTlQ.jpeg)","6ce73f34":"# Goal of this kernel is to **AUTOMATICALLY** surf the website [Yahoo finance](https:\/\/finance.yahoo.com), extract the information in **REAL** time and send it back via E-mail to desired adress\n\nInformation will be the biggest daily gainers, i.e. the stock that gained the most value that day. Or the biggest losers, depending on the choice of the user.\n","ca8825c6":"After we can access the web searcher of our choice, let us find the xpath of the desired web-elements. In other words in order to access all of the elements of the desired web-page we need to direct it in a way. Underneath, the defined function replaces that for us. We just need to inspect the web element and copy the xpath of the html tag as follows","ef7c93a6":"WE will need selenium to access the web-site but one of the problems is that importing specific libraries on kaggle is still buggy according to admins. Hence it is not possible to run it on kaggle directly. I assure you downloading this notebook with some changes where I indicated them works like a charm on one owns PC.","f26b3443":"Now we define a data frame to store these values, which is going to be executed with the **compile_data()** function.","dac697a6":"We have to add chromedriver to the PATH in order to open it and surf it automatically. 2 cells are user-specific and should be changed.","c2ee81f6":"Finally use the time library to specify how long we are going to run the script. Since yahoo page is renewed every few minutes we should scrape it every few minutes. And than wait for 60 minutes until running the for loop again and calling the functions again and sending a new email.","d9922aed":"## NOTES:\n* Code **WILL NOT FUNCTION** on kaggle for multiple reasons, the biggest ones are problems with including the path and not beeing able to import web_driver package. It is no problem. Reader can download the ipython notebook change some aspects of it that are compliant to one owns specifications and it should run with no problem. (dependent on the operative system, path, receiving and sending email adress etc...)\n\n* I will also try to comment the code generated so that the reader can slightly update it and extract some other **dynamical** infomation from the website automatically himself.\n\n\n*  There are certain guidelines when doing web-scraping. Please do check [Safe-scraping](https:\/\/www.scrapehero.com\/how-to-prevent-getting-blacklisted-while-scraping\/) and be responsible. Regarding Yahoo Finance it says [in summary](https:\/\/finance.yahoo.com\/robots.txt) tread carefully, do not burden the system!","d970deaa":"Possibly using hotmail, or comapny email adress","35dbe3d7":"Massage to be sent:"}}