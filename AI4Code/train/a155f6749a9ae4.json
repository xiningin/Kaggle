{"cell_type":{"9211191d":"code","d7492f31":"code","67c7ff72":"code","16e76141":"code","d5319f1c":"code","f2dc3c20":"code","4c8cb827":"code","51a4f343":"code","b9a37b89":"code","47b6277f":"code","b013dd8d":"code","afce7151":"code","b0725d69":"code","56bab445":"markdown","19d60a76":"markdown"},"source":{"9211191d":"# Code you have previously used to load data\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeRegressor\n\n\n# Path of the file to read\niowa_file_path = '..\/input\/home-data-for-ml-course\/train.csv'\n\nhome_data = pd.read_csv(iowa_file_path)\n# Create target object and call it y\ny = home_data.SalePrice\n# Create X\nfeatures = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\nX = home_data[features]\n\n# Split into validation and training data\ntrain_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)","d7492f31":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error\n\n","67c7ff72":"rf  = RandomForestRegressor(n_estimators=100,random_state=1)\nrf.fit(train_X,train_y)","16e76141":"error = mean_absolute_error(val_y ,y_pred)\nerror","d5319f1c":"train_X","f2dc3c20":"train_y","4c8cb827":"val_X","51a4f343":"val_y","b9a37b89":"train.info()","47b6277f":"file_path = '..\/input\/home-data-for-ml-course\/test.csv'\nhome_test_data = pd.read_csv(file_path)\n\nhome_test_data = home_test_data[features]","b013dd8d":"home_test_data.head()\n","afce7151":"test_pred = rf.predict(home_test_data)","b0725d69":"test_pred","56bab445":"import numpy as np\nimport pandas as pd\nfrom sklearn.tree import DecisionTreeRegressor\ntrain = pd.DataFrame(\nnp.random.rand(100, 3),\ncolumns=['X1','X2','y'])\nX = train[['X1','X2']]\ny = train[['y']]\nmodel = DecisionTreeRegressor().fit(X,y)\nprint(\"The first 5 predictions:\",model.predict(X.head(5)))","19d60a76":"### Random Forests Regression\n\nYou'll see more about what this algorithm actually is in Part III (of course, if you're reading this after Part III, you already know).  Look up the code for how to use Random Forests Regression in Python (the package necessary is already imported in the second cell, so you can just look that up).  You have to create the model, train it on `train_X` and `train_Y`, and then find and print the mean absolute error using the imported function, the model's predicted values on `val_X`, and `val_y`.\n\nOf course, much like in the real world, if you can find the exact code you need online without having to write it yourself, I wouldn't blame you for doing so - I might actually recommend it, although being familiar with the code has its own benefits.  So if you can find the rest of this code online, use it.  But do try to understand what it is you're copying too."}}