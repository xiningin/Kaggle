{"cell_type":{"ea35962a":"code","9606700e":"code","6c298b3c":"code","cb215605":"code","2e29c9e7":"code","6985853c":"code","90adadfb":"code","5a85d279":"code","d0accc88":"code","c9e478ac":"code","f01c3868":"code","d77755ee":"code","0dddf8cf":"code","ac557aee":"code","f2155ab9":"code","df998859":"code","cfdb4151":"code","7fcbf1a7":"code","bddbb4dc":"code","95f6bcdf":"code","dda054af":"code","90a11b93":"code","ad651a06":"code","c70c9e73":"code","6d688e2a":"code","a48d5ac6":"code","3e6ff273":"code","0f435cac":"code","3d882a3a":"code","dd902f43":"code","d663693a":"code","9356ba1a":"code","9bb1029a":"code","b8be3bf7":"code","e928115f":"code","56b6f4e1":"code","186d796e":"code","2125ba4a":"code","35ef9666":"code","41a366b6":"markdown","f408a75f":"markdown","565456b3":"markdown","2f3fd279":"markdown","a60f8298":"markdown","7d5d5a8e":"markdown"},"source":{"ea35962a":"%matplotlib inline\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns","9606700e":"df = pd.read_csv('..\/input\/bmw_pricing_challenge.csv')\ndf.head()","6c298b3c":"df.info()","cb215605":"df.describe()","2e29c9e7":"sns.set(style='darkgrid')\nsns.countplot(x='fuel',data=df,palette='Set2')","6985853c":"df['fuel'].value_counts()","90adadfb":"sns.set(style='darkgrid')\nsns.countplot(x='car_type',data=df,palette='Set2')","5a85d279":"plt.figure(figsize=(20,10))\nsns.boxplot('car_type','engine_power',data=df)","d0accc88":"plt.figure(figsize=(20,10))\nsns.boxplot('car_type','price',data=df)","c9e478ac":"sns.catplot(x='car_type',y='mileage',hue='fuel',data=df,kind='swarm',split=True)","f01c3868":"df_sold_at = df.groupby(['sold_at']).first()\ndf_sold_at","d77755ee":"df_sold_at.count()","0dddf8cf":"df_estate = df[df.car_type=='estate']\ndf_sedan = df[df.car_type=='sedan']\ndf_suv = df[df.car_type=='suv']","ac557aee":"df_estate.head()","f2155ab9":"plt.figure(figsize=(20,10))\nsns.countplot('model_key',data=df_estate,palette='bright')","df998859":"plt.figure(figsize=(20,10))\nsns.countplot('engine_power',data=df_estate,palette='bright')","cfdb4151":"sns.countplot('paint_color',data=df_estate,palette='bright')","7fcbf1a7":"plt.figure(figsize=(20,10))\nsns.barplot('model_key','price',data=df_estate)","bddbb4dc":"plt.figure(figsize=(20,10))\nsns.boxplot('model_key','mileage',data=df_estate)","95f6bcdf":"plt.scatter('mileage','price',data=df_estate)\nplt.xlabel('mileage of estate')\nplt.ylabel('price of estate')","dda054af":"plt.figure(figsize=(20,10))\nd = sns.countplot('model_key',data=df_sedan,palette='bright')\n_ = plt.setp(d.get_xticklabels(),rotation=90)","90a11b93":"plt.figure(figsize=(20,10))\nsns.countplot('engine_power',data=df_sedan,palette='bright')","ad651a06":"plt.figure(figsize=(20,10))\nd = sns.barplot('model_key','price',data=df_sedan)\n_ = plt.setp(d.get_xticklabels(),rotation=90)","c70c9e73":"plt.figure(figsize=(20,10))\nd = sns.boxplot('model_key','mileage',data=df_sedan)\n_ = plt.setp(d.get_xticklabels(),rotation=90)","6d688e2a":"plt.scatter('mileage','price',data=df_sedan)\nplt.xlabel('mileage of sedan')\nplt.ylabel('price of sedan')","a48d5ac6":"d = sns.countplot('model_key',data=df_suv,palette='bright')","3e6ff273":"plt.figure(figsize=(20,10))\nsns.countplot('engine_power',data=df_suv,palette='bright')","0f435cac":"d = sns.barplot('model_key','price',data=df_suv)","3d882a3a":"d = sns.boxplot('model_key','mileage',data=df_suv)","dd902f43":"plt.scatter('mileage','price',data=df_suv)\nplt.xlabel('mileage of suv')\nplt.ylabel('price of suv')","d663693a":"df['car_type'] =df.car_type.map(lambda x:1.0 if x =='convertible' else x)\ndf['car_type'] =df.car_type.map(lambda x:2.0 if x =='coupe' else x)\ndf['car_type'] =df.car_type.map(lambda x:3.0 if x =='estate' else x)\ndf['car_type'] =df.car_type.map(lambda x:4.0 if x =='hatchback' else x)\ndf['car_type'] =df.car_type.map(lambda x:5.0 if x =='sedan' else x)\ndf['car_type'] =df.car_type.map(lambda x:6.0 if x =='suv' else x)\ndf['car_type'] =df.car_type.map(lambda x:7.0 if x =='van' else x)\ndf['car_type'] =df.car_type.map(lambda x:8.0 if x =='subcompact' else x)\ndf['car_type'] = df['car_type'].astype(int)","9356ba1a":"df['feature_1'] =df.feature_1.map(lambda x:1 if x ==True else 0)\ndf['feature_2'] =df.feature_2.map(lambda x:1 if x ==True else 0)\ndf['feature_3'] =df.feature_3.map(lambda x:1 if x ==True else 0)\ndf['feature_4'] =df.feature_4.map(lambda x:1 if x ==True else 0)\ndf['feature_5'] =df.feature_5.map(lambda x:1 if x ==True else 0)\ndf['feature_6'] =df.feature_6.map(lambda x:1 if x ==True else 0)\ndf['feature_7'] =df.feature_7.map(lambda x:1 if x ==True else 0)\ndf['feature_8'] =df.feature_8.map(lambda x:1 if x ==True else 0)\ndf.head()","9bb1029a":"df.info()","b8be3bf7":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor \nfrom sklearn.metrics import r2_score\nfrom sklearn import metrics","e928115f":"x = df[['mileage','engine_power','feature_1','feature_2','feature_3','feature_4','feature_5','feature_6','feature_7','feature_8','car_type']]\ny = df['price']\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=36)","56b6f4e1":"lr =LinearRegression()\nlr.fit(x_train,y_train)\npredict_lr = lr.predict(x_test)\nprint('real value y_test[1]:'+str(y_test[1])+'  predict:'+str(lr.predict(x_test.iloc[[1],:])))\nprint('scort:',lr.score(x_test,y_test))\nprint('r2 score:',r2_score(y_test,predict_lr))","186d796e":"rfr = RandomForestRegressor()\nrfr.fit(x_train,y_train)\npredict_rfr = rfr.predict(x_test)\nprint('real value y_test[1]:'+str(y_test[1])+'  predict:'+str(rfr.predict(x_test.iloc[[1],:])))\nprint('scort:',rfr.score(x_test,y_test))\nprint('r2 score:',r2_score(y_test,predict_rfr))","2125ba4a":"dtr = DecisionTreeRegressor()\ndtr.fit(x_train,y_train)\npredict_dtr = dtr.predict(x_test)\nprint('real value y_test[1]:'+str(y_test[1])+'  predict:'+str(dtr.predict(x_test.iloc[[1],:])))\nprint('scort:',dtr.score(x_test,y_test))\nprint('r2 score:',r2_score(y_test,predict_dtr))","35ef9666":"y = np.array([r2_score(y_test,predict_lr),r2_score(y_test,predict_rfr),r2_score(y_test,predict_dtr)])\nx = ['Linear','RandomForest','DecisionTree']\nplt.bar(x,y)\nplt.xlabel('Regressor')\nplt.ylabel('r2 score')","41a366b6":"## I try to do better to my visualiztion and machine learning. I hope it good for you\n## And I very happy to get your suggestions","f408a75f":"# we can see the information about three top populous car type","565456b3":"I want to use machine learning to predict the price","2f3fd279":"car type:estate comparision","a60f8298":"car type:sedan comparision","7d5d5a8e":"car type:suv comparision"}}