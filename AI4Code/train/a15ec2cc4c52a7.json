{"cell_type":{"74ce8b80":"code","b130639f":"code","4bc95dd3":"code","0b3bd35c":"code","425b31ad":"code","23b6c6fc":"markdown"},"source":{"74ce8b80":"import ipywidgets as widgets\nfrom ipywidgets import interact\nimport pydicom as dcm\nfrom pathlib import Path\nimport numpy as np\nimport pandas as pd\nimport plotly.express as px\n\nPath.ls = lambda p: list(p.iterdir())","b130639f":"p_data = Path(\"\/kaggle\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\")\np_train_labels = p_data\/\"train_labels.csv\"\np_train = p_data\/\"train\"","4bc95dd3":"label_df = pd.read_csv(p_train_labels)","0b3bd35c":"type_idx = 0\npatient_idx = 0\npatient = None\n\nmodalities = [\"T2w\", \"T1wCE\", \"T1w\", \"FLAIR\"]\ntrain_patients = label_df[\"BraTS21ID\"].values\n\ndcm_images = None\n\n@interact\ndef selections(Modality=modalities, BraTS21ID=train_patients):\n    global type_idx, patient_idx, patient, dcm_images\n    \n    patient_idx = np.where(label_df[\"BraTS21ID\"].values == BraTS21ID)[0]\n    \n    assert len(patient_idx) < 2, f\"{BraTS21ID}\\n{patient_idx}\"\n    patient_idx = patient_idx[0]\n    \n    patient = sorted(p_train.ls(), key=lambda p: int(p.stem))[patient_idx]\n    m2i = {p.stem: i for i, p in enumerate(patient.ls())}\n    type_idx = m2i[Modality]\n    \n    dcm_images = (patient.ls()[type_idx]).ls()\n    dcm_images = sorted(dcm_images, key = lambda p: int(p.stem.split(\"-\")[-1]))\n    dcm_images = [dcm.dcmread(p).pixel_array for p in dcm_images]","425b31ad":"# Rerun this cell everytime you change the values above\n\npatient_label = label_df[label_df[\"BraTS21ID\"] == int(patient.name)][\"MGMT_value\"].values[0]\n\ndef viewer(image_idx):\n    print(f\"BraTS21ID: {patient.name}\\tMGMT_value: {patient_label}\\tModality: {patient.ls()[type_idx].stem}\")\n    fig = px.imshow(dcm_images[image_idx], binary_string=True)\n    fig.show()\n\ninteract(viewer, \n         image_idx=widgets.IntSlider(min=0, max=len(dcm_images)-1, step=1, value=0));","23b6c6fc":"# Simple Dicom Visualizer\n\nThis is a little visualizer to easily and quickly look at the training data. This should come in handy during this competition, when a quick look at the images of a specific patient is needed. Feel free to use and change this to your heart's content :)"}}