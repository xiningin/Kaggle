{"cell_type":{"7524e458":"code","fbc5567c":"code","f15cf601":"code","44341a21":"code","c85a3f61":"code","c62500f4":"code","f61f02b2":"code","58284cfa":"code","f1f2defe":"code","be343215":"code","9ba9bcc3":"code","6b1d5889":"code","895a82b2":"code","c8c056e7":"code","71dabc87":"code","5731950e":"code","ceac3331":"code","b0c2364d":"markdown","6e9258cc":"markdown","286f43ce":"markdown","9d6fc615":"markdown","bd3b80d9":"markdown","cc679c1a":"markdown","06d0eea8":"markdown","b78f756a":"markdown","6214d341":"markdown","d873b707":"markdown","da576771":"markdown"},"source":{"7524e458":"from pathlib import Path\n\nif Path.cwd() == Path('\/kaggle\/working'):\n    # Kaggle\n    import sys\n    LIB_PATH = (Path.cwd()\/\"..\"\/\"input\"\/\"feedback-prize-2021-lib\").resolve()\n    assert LIB_PATH.is_dir(), (\"Use the '+ Add data' feature to add the 'Notebook Output Files' from the 'sentinel1\/feedback-prize-2021-lib' \"\n                               \"in order to make some utilities importable from that library (one time restart is required after adding).\")\n    sys.path.insert(0, str(LIB_PATH))\nelse:\n    # Local machine\n    assert (Path.cwd()\/\"lib\"\/\"feedback_util.py\").is_file(), (\"Run the 'sentinel1\/feedback-prize-2021-lib' notebook locally \"\n                                                             \"in order to generate the importable library on your machine\")","fbc5567c":"from lib.feedback_util import color_print_essay, read_train_csv, calc_PII_offsets, get_train_df_with_fixed_PII_offsets","f15cf601":"from IPython.display import display\n\nRUN_OPTIONALS = True","44341a21":"train_df = read_train_csv()\ntrain_df.head(2)","c85a3f61":"%%time\n\nif RUN_OPTIONALS:\n    df_with_offsets = calc_PII_offsets(train_df, self_test=True)","c62500f4":"%%time\n\nif RUN_OPTIONALS:\n    df_with_offsets = calc_PII_offsets(train_df)","f61f02b2":"if RUN_OPTIONALS:\n    display(df_with_offsets[df_with_offsets['discourse_start_PII_offset'] > 2].head(1))","58284cfa":"print(\"\\n(1) *BEFORE* fixing PII offsets:\\n\")\ncolor_print_essay('3A5D35053D40', train_df)","f1f2defe":"if RUN_OPTIONALS:\n    display(df_with_offsets[df_with_offsets['discourse_start_PII_offset'] > 7].head(1))","be343215":"print(\"\\n(2) *BEFORE* fixing PII offsets:\\n\")\ncolor_print_essay('1F20005BEBB6', train_df)","9ba9bcc3":"%%time\n\nif RUN_OPTIONALS:\n    #NOTE: in order to save time passing the optional `df_with_offsets` argument as we have already computed it anyway:\n    train_df = get_train_df_with_fixed_PII_offsets(df_with_offsets)\nelse:\n    train_df = get_train_df_with_fixed_PII_offsets()\ntrain_df.head()","6b1d5889":"print(\"\\n(1) AFTER fixing PII offsets:\\n\")\ncolor_print_essay('3A5D35053D40', train_df)","895a82b2":"print(\"\\n(2) AFTER fixing PII offsets:\\n\")\ncolor_print_essay('1F20005BEBB6', train_df)","c8c056e7":"train_df_orig = read_train_csv()\n\ndef print_stats(feature):\n    num_changed = sum(train_df_orig[feature] != train_df[feature])\n    num_total = len(train_df_orig)\n    percent_changed = num_changed \/ num_total * 100\n    feature = '\"' + feature + '\"'\n    print(f\"Out of total {num_total} discourses the {feature:<17} has been changed for the {num_changed:<3} discourse(s), which make {percent_changed:.2f}% of the training data.\")","71dabc87":"num_essays = len(train_df_orig.groupby('id'))\nnum_essays_affected = (\n    train_df_orig[['id', 'discourse_text', 'discourse_start', 'discourse_end']]\n    .join(train_df[['discourse_text', 'discourse_start', 'discourse_end']], rsuffix='_changed')\n    .groupby('id')\n    .apply(lambda group:\n           any((group['discourse_text'] != group['discourse_text_changed']) |\n               (group['discourse_start'] != group['discourse_start_changed']) |\n               (group['discourse_end'] != group['discourse_end_changed']))\n          )\n    .sum()\n)\npercent_essays_affected = num_essays_affected \/ num_essays * 100","5731950e":"for feature in ['discourse_text', 'discourse_start', 'discourse_end']:\n    print_stats(feature)","ceac3331":"print(f\"Out of total {num_essays} essays the {num_essays_affected} essays are affected, which make {percent_essays_affected:.2f}% of the training data.\")","b0c2364d":"### Essay  `3A5D35053D40` BEFORE","6e9258cc":"## Reading original train.csv","286f43ce":"## Print two essays BEFORE and AFTER fixing the PII masking offsets    ","9d6fc615":"## Example\/test of `get_train_df_with_fixed_PII_offsets()` and `calc_PII_offsets()`    \n\n\nNOTES:\n- Part of examples for the `feedback-prize-2021-lib` [library](https:\/\/www.kaggle.com\/sentinel1\/feedback-prize-2021-lib)\n- For details of PII masking see the [discussion](https:\/\/www.kaggle.com\/c\/feedback-prize-2021\/discussion\/297688)","bd3b80d9":"### Essay  `3A5D35053D40` AFTER","cc679c1a":"### Essay  `1F20005BEBB6` BEFORE","06d0eea8":"## Run the self_test of the `calc_PII_offsets()` function (optional)","b78f756a":"### Essay  `1F20005BEBB6` AFTER","6214d341":"## Some Statistics of PII masking offsets","d873b707":"## Compute PII offsets using the `calc_PII_offsets()` (optional)","da576771":"## Fix the PII masking offsets using `get_train_df_with_fixed_PII_offsets()`"}}