{"cell_type":{"7b8dc0e7":"code","6e5732be":"code","2cfffb11":"code","27612316":"code","878e503e":"code","f849eb02":"code","bc058a57":"code","93022856":"code","361dbf10":"code","a7f9f037":"code","eb92e350":"code","a6379ea7":"code","98b107a1":"code","ed8ce6e5":"code","9b0b2c7e":"code","d8d608d3":"code","8ca61027":"code","6eaa649b":"markdown","a5c78e18":"markdown","66eae30e":"markdown","c25fde37":"markdown","a2de6587":"markdown","ca53df0d":"markdown","2f3ef9af":"markdown","6ac54ee0":"markdown"},"source":{"7b8dc0e7":"import pandas as pd\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)","6e5732be":"df = pd.read_csv(r'..\/input\/2021-olympics-medals-in-tokyo\/Tokyo Medals 2021.csv')\ndf.head()","2cfffb11":"# sorting of data by rank\ndf = df.sort_values(by = [\"Rank By Total\"], ascending = True)\n\n# replacing country name \ndf['Country'] = df['Country'].replace({'United States of America': 'USA', \"People's Republic of China\": 'china'})\ndf.head()","27612316":"df.info()","878e503e":"df.isnull().sum()","f849eb02":"df.describe()","bc058a57":"import plotly.figure_factory as ff\n# Heatmap\n# Correlation between the feature show with the help of visualisation\n\ncorrs = df.corr()\nfig_heatmap = ff.create_annotated_heatmap(\n    z=corrs.values,\n    x=list(corrs.columns),\n    y=list(corrs.index),\n    annotation_text=corrs.round(2).values,\n    showscale=True)\nfig_heatmap.update_layout(title= 'Correlation of whole Data',  \n                 plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                        title_font=dict(size=25, color='#a5a7ab', family=\"Muli, sans-serif\"),\n                        font=dict(color='#8a8d93'))","93022856":"df1 = df[['Gold Medal', 'Silver Medal', 'Bronze Medal']]\nunique_count = []\nfor x in df1.columns:\n    unique_count.append([x,df1[x].sum()])\n    \ndf1 = pd.DataFrame(unique_count, columns=[\"Medals\",\"Count\"]).set_index(\"Medals\").reset_index()\ndf1['perc']= round((df1['Count']\/df1['Count'].sum())*100, 2)\ndf1","361dbf10":"fig = px.bar(df1, x='Medals', y='Count', height=200, text='Count',\n             title='Distibution of Medals', \n             color_discrete_sequence=['#DB6574'])\nfig.update_yaxes(visible=False)\nfig.update_xaxes(categoryorder='total descending')\nfig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig.update_layout(margin=dict(t=80, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","a7f9f037":"dff = df[['Total','Country']].sort_values(by='Total', ascending=False)\nfig = px.bar(dff[:10], x='Total', y='Country', height=400, color='Total',\n             title='Top 10 countries reciving Highest medals',\n             text='Total',\n             color_discrete_sequence= px.colors.qualitative.T10)\nfig.update_xaxes(showgrid=False)\nfig.update_yaxes(categoryorder='total ascending', ticksuffix='  ')\nfig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig.update_layout(margin=dict(t=110, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  hovermode=\"y unified\",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","eb92e350":"df_total = df[:5]\ndf_total = df_total[['Country','Gold Medal','Silver Medal', 'Bronze Medal']]\ndf_total","a6379ea7":"trace1 = go.Bar(x=df_total[\"Country\"], y=df_total['Gold Medal'],\n                name=\"Gold Medal\", marker=dict(color=\"#DB6574\"))\ntrace2 = go.Bar(x=df_total[\"Country\"], y=df_total['Silver Medal'],\n                name=\"Silver Medal\", marker=dict(color=\"#03DAC5\"))\ntrace3 = go.Bar(x=df_total[\"Country\"], y=df_total['Bronze Medal'],\n                name=\"Silver Medal\", marker=dict(color=\"blue\"))\ndata = [trace1, trace2, trace3]\nfig_line = go.Figure(data)\n\nfig_line.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig_line.update_xaxes(showgrid=False)\nfig_line.update_yaxes(showgrid=False)\nfig_line.update_layout(title='Top 5 countries Rank vs Different Medals  \ud83e\udd49',\n                       margin=dict(t=100, b=0, l=70, r=40), height=350, \n                       hovermode=\"x unified\", barmode='stack',\n                       xaxis_title=' ', yaxis_title=\" \",\n                       plot_bgcolor='#333', paper_bgcolor='#333',\n                       title_font=dict(size=25, color='#8a8d93', family=\"Lato, sans-serif\"),\n                       font=dict(color='#8a8d93'),\n                       legend=dict(orientation=\"h\", yanchor=\"bottom\", y=1, xanchor=\"center\", x=0.5))","98b107a1":"df_gold = df[['Country','Gold Medal']].sort_values(by='Gold Medal', ascending=False)\nfig = px.funnel(df_gold[:10], y='Country', x='Gold Medal',\n                height=400, width=650,\n                title='Top 10 countries with Gold Medal',\n                color_discrete_sequence=['#DB6574'])\nfig.update_traces(textposition='auto', textfont=dict(color='#fff'))\nfig.update_layout(margin=dict(t=80, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","ed8ce6e5":"df_silver = df[['Country','Silver Medal']].sort_values(by='Silver Medal', ascending=False)\nfig = px.bar(df_silver[:10], x='Country', y='Silver Medal',\n             title='Top 10 countries with Silver Medal',\n             height=400, text='Silver Medal',\n             color_discrete_sequence=['#DB6574'])\nfig.update_yaxes(visible=False, categoryorder='total ascending')\nfig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig.update_layout(margin=dict(t=80, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","9b0b2c7e":"df_bronze = df[['Country','Bronze Medal']].sort_values(by='Bronze Medal', ascending=False)\nfig = px.bar(df_bronze[:10], y='Country', x='Bronze Medal',\n            title='Top 10 countries with Bronze Medal',\n            height=400, text='Bronze Medal',\n            color_discrete_sequence=['#DB6574'])\nfig.update_yaxes(categoryorder='total ascending', showgrid=False, ticksuffix='  ')\nfig.update_xaxes(visible=False)\nfig.update_traces(hovertemplate=None, marker=dict(line=dict(width=0)))\nfig.update_layout(margin=dict(t=80, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","d8d608d3":"fig = px.funnel(df[:10], x='Rank By Total', y='Country',\n                title='Top 10 countries vs Rank By Total  \ud83e\uddff',\n                color_discrete_sequence=['#DB6574'],\n                height=400, width=650)\nfig.update_traces(textposition='auto', textfont=dict(color='#fff'))\nfig.update_layout(margin=dict(t=110, b=50, l=70, r=40),\n                  xaxis_title=' ', yaxis_title=\" \",\n                  plot_bgcolor='#2d3035', paper_bgcolor='#2d3035',\n                  title_font=dict(size=25, color='#a5a7ab',\n                                  family=\"Lato, sans-serif\"),\n                  font=dict(color='#8a8d93'))","8ca61027":"# Indias Rank is 33\ndf_india = df[df['Country']=='India']\ndf_india","6eaa649b":"## Distibution of Medals","a5c78e18":"## Data \ud83d\udcc1","66eae30e":"## Top 10 countries reciving Highest medals","c25fde37":"## If you find this kernel useful kindly upvote.\n","a2de6587":"## Top 10 countries vs Rank By Total  \ud83e\uddff","ca53df0d":"## Top 5 countries Rank vs Different Medals  \ud83e\udd49","2f3ef9af":"## Top 10 countries with Gold Medal, Silver Medal and Bronze Medal \ud83c\udfc5\ud83e\udd48\ud83e\udd49","6ac54ee0":"# **Tokyo 2020 Olympics Medals**\n\nIf you find this kernel useful kindly upvote."}}