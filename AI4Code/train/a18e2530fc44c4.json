{"cell_type":{"cdfb7c6b":"code","80ea51a8":"markdown","c3b54452":"markdown","2708f2bc":"markdown","6c07c0b5":"markdown"},"source":{"cdfb7c6b":"import os\nimport pandas as pd\nimport numpy as np\n\ntta = None\nroot_folder = '\/kaggle\/input\/kakr3-csv\/infer_final\/'\n\ndef make_submission_in_ensemble(df_test):\n    records = []\n    for Id, row in df_test.iterrows():\n        one_row=[]\n        probs = list(row.values)\n\n        final_pred = np.argmax(probs, axis=-1) + 1\n        one_row.append(Id)\n        one_row.append(final_pred)\n\n        records.append(one_row)\n    test_df = pd.read_csv('\/kaggle\/input\/2019-3rd-ml-month-with-kakr\/sample_submission.csv')\n    labels = test_df.columns[1:].tolist()\n    columns = ['img_file'] + [label for label in labels]\n    df_output = pd.DataFrame.from_records(records, columns=columns)\n    df_output = df_output.set_index('img_file')\n    return df_output\n\ndef ensemble():\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n    print('make submission')\n\n    test_filenames = [\n                    \n\n                      root_folder+'resnet50_0.final_tta_2.csv',\n                      root_folder+'resnet50_1.final_tta_2.csv',\n                      root_folder+'resnet50_2.final_tta_2.csv',\n                      root_folder+'resnet50_3.final_tta_2.csv',\n                      root_folder+'resnet50_4.final_tta_2.csv',\n                      root_folder+'resnet50_5.final_tta_2.csv',\n                      root_folder+'resnet50_6.final_tta_2.csv',\n                      root_folder+'resnet50_7.final_tta_2.csv',\n                      root_folder+'resnet50_8.final_tta_2.csv',\n                      root_folder+'resnet50_9.final_tta_2.csv',\n\n                      root_folder+'resnet50_0.final_tta_3.csv',\n                      root_folder+'resnet50_1.final_tta_3.csv',\n                      root_folder+'resnet50_2.final_tta_3.csv',\n                      root_folder+'resnet50_3.final_tta_3.csv',\n                      root_folder+'resnet50_4.final_tta_3.csv',\n                      root_folder+'resnet50_5.final_tta_3.csv',\n                      root_folder+'resnet50_6.final_tta_3.csv',\n                      root_folder+'resnet50_7.final_tta_3.csv',\n                      root_folder+'resnet50_8.final_tta_3.csv',\n                      root_folder+'resnet50_9.final_tta_3.csv',\n\n                      root_folder+'resnet50_0.final_tta_4.csv',\n                      root_folder+'resnet50_1.final_tta_4.csv',\n                      root_folder+'resnet50_2.final_tta_4.csv',\n                      root_folder+'resnet50_3.final_tta_4.csv',\n                      root_folder+'resnet50_4.final_tta_4.csv',\n                      root_folder+'resnet50_5.final_tta_4.csv',\n                      root_folder+'resnet50_6.final_tta_4.csv',\n                      root_folder+'resnet50_7.final_tta_4.csv',\n                      root_folder+'resnet50_8.final_tta_4.csv',\n                      root_folder+'resnet50_9.final_tta_4.csv',\n\n                      ]\n\n    weights = [1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,\n               1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,\n               1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10,1\/10]\n\n\n    output_filename = '\/kaggle\/working\/submission.csv'\n    os.makedirs(os.path.dirname(output_filename), exist_ok=True)\n\n    df_test_list = [pd.read_csv(f, index_col='img_file') for f in test_filenames]\n\n    print('ensemble..')\n    df_test = sum([df * w for df, w in zip(df_test_list, weights)]) \/ sum(weights)\n\n    df_submission = make_submission_in_ensemble(df_test)\n\n    df_submission.to_csv(output_filename)\n\n\n\ndef getColumns():\n    return ['img_file'] + ['P{:02d}'.format(l) for l in range(196)]\n\n\ndef make_submission(df_infer, output_filename):\n    records = []\n    for Id, row in df_infer.iterrows():\n        one_row=[]\n        probs = list(row.values)\n        one_row.append(Id)\n        one_row.extend(probs)\n        records.append(one_row)\n    columns = getColumns()\n    df_output = pd.DataFrame.from_records(records, columns=columns)\n    df_output = df_output.set_index('img_file')\n    print('save {}'.format(output_filename))\n    df_output.to_csv(output_filename)\n\n\nif __name__ == '__main__':\n    ensemble()\n","80ea51a8":"\uc81c\uac00 \ud55c \ud559\uc2b5\ubc95\uc5d0 \ub300\ud55c \uc815\ub9ac\uc785\ub2c8\ub2e4.","c3b54452":"- model: se_resnext50_32x4d \n- loss : focal_loss\n- optimizer: adam\n- lr: 0.001\n- batch_size: 16\n- scheduler: cosine (t_max 10 \/ eta_min 0.00001)\n- input size (height 320 \/ width: 592) \/ bounding box cropped\n- split: StratifiedKFold 10 fold\n- transform\n  1. train : horizontalflip, randomresize, randomrotation\n  2. validation : none\n  3. test: tta2 + tta3 + tta4\n     \n     (1) tta2 : original + horizontalflip\n     (2) tta3 : original + horizontalflip + rnadomsizecrop\n     (3) tta4 : original + rnadomsizecrop + randomrotation \n","2708f2bc":"## TTA Ensemble\n\uc704\uc5d0\uc11c \uc5bb\uc740 \uac01 Fold(10fold)\uc758 inference\uc2dc\uc5d0 TTA\ub97c 2,3,4\ub97c Ensemble\ud558\uc5ec\uc11c \ucd5c\uc885 \uacb0\uacfc\ubb3c\uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. TTA\ub07c\ub9ac\ub3c4 Ensemble\uc744 \ud1b5\ud574\uc11c \uc810\uc218\ud5a5\uc0c1\uc744 \ud560 \uc218 \uc788\uc5c8\ub2e4\ub294 \uac83\uc744 \ubc30\uc6b8 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. ","6c07c0b5":"\uc774\ubc88 \ub300\ud68c\ub97c \ud1b5\ud574\uc11c Classification \uc810\uc218 \ud5a5\uc0c1\uc5d0 \ub300\ud55c \ubc29\ubc95\uc73c\ub85c TTA Ensemble\uc744 \uc9d1\uc911\uc801\uc73c\ub85c \ud14c\uc2a4\ud2b8\ud588\uace0 \uc774\uc744 \ud1b5\ud55c \uc810\uc218 \ud5a5\uc0c1 \ubc29\ubc95\uc744 \uc775\ud790 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \uc88b\uc740 \ub300\ud68c\ub97c \uc8fc\ucd5c\ud574 \uc8fc\uc154\uc11c \uac10\uc0ac\ub4dc\ub9bd\ub2c8\ub2e4. "}}