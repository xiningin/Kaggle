{"cell_type":{"71c6705c":"code","60c8132a":"code","9d601f06":"code","23560e9c":"code","018a8773":"code","ca33789d":"code","15ace5f3":"code","90d25a8e":"code","84cbc4c1":"code","d93f0c66":"code","0d25736e":"code","f4557801":"code","45dba6bd":"code","a707384c":"code","b8fc18fe":"code","b7b85ebb":"code","a7825477":"code","206e563b":"code","3d5be0b6":"code","d04e0c51":"code","a7e2822e":"code","a3a5b465":"code","9d1c3fd6":"code","88985e33":"markdown","5bcec9bd":"markdown","1d2dac7b":"markdown","2500f017":"markdown"},"source":{"71c6705c":"!pip install -Uqq fastai","60c8132a":"from fastai.vision.all import *\nfrom fastai.text.all import *","9d601f06":"import pandas as pd\nimport numpy as np\nfrom fastai.tabular.all import *","23560e9c":"!unzip ..\/input\/movie-review-sentiment-analysis-kernels-only\/test.tsv.zip -d test\n!unzip ..\/input\/movie-review-sentiment-analysis-kernels-only\/train.tsv.zip -d train","018a8773":"#kernals only = use the kaggle version of notebooks (like their version of colab)\ndf_train = pd.read_csv(\"train\/train.tsv\", sep='\\t', header=0, low_memory=False) #tell them that tab separaters + tell them it has headers\ndf_test = pd.read_csv(\"test\/test.tsv\", sep='\\t', header=0, low_memory=False)\n\n#look more carefully at the problem description and see why they're giving us phrases and such","ca33789d":"df_train_sample = df_train.sample(frac = 1.0)\ndf_test_sample = df_test.sample(frac = 1.0)","15ace5f3":"df_combined_sample = pd.concat([df_train_sample, df_test_sample], ignore_index=True)","90d25a8e":"del df_train_sample['PhraseId']\ndel df_train_sample['SentenceId']","84cbc4c1":"df_test_sample","d93f0c66":"dls_lm = TextDataLoaders.from_df(df_train_sample, label_col = 1, text_col = 0, valid_pct=0.1, is_lm=True, seed = 5)","0d25736e":"learn = language_model_learner(dls_lm, AWD_LSTM, drop_mult=0.5, metrics=accuracy)","f4557801":"lr_para = learn.lr_find(num_it=100)\nmin_grad_lr = lr_para.lr_min\nprint(min_grad_lr)","45dba6bd":"learn.fit_one_cycle(5, lr_max = min_grad_lr, cbs = SaveModelCallback()) ","a707384c":"learn.save_encoder('finetuned')","b8fc18fe":"dls = TextDataLoaders.from_df(df_train_sample, label_col = 1, text_col = 0, valid_pct=0.1, is_lm=False, seed = 5, bs = 4)","b7b85ebb":"learn = text_classifier_learner(dls, AWD_LSTM, metrics=accuracy, cbs = SaveModelCallback)\nlearn = learn.load_encoder('finetuned')","a7825477":"learn.fit_one_cycle(1, 2e-2)","206e563b":"learn.freeze_to(-2)\nlearn.fit_one_cycle(1, slice(1e-2\/(2.6**4),1e-2))","3d5be0b6":"learn.freeze_to(-3)\nlearn.fit_one_cycle(1, slice(5e-3\/(2.6**4),5e-3))","d04e0c51":"learn.unfreeze()\nlearn.fit_one_cycle(10, slice(1e-3\/(2.6**4),1e-3))","a7e2822e":"prediction_list_model = []\n\nfor i in range(len(df_test_sample)):\n  sentiment = learn.predict(df_test_sample.iloc[i]['Phrase'])[0]\n  prediction_list_model.append(sentiment)","a3a5b465":"df_test_results = pd.DataFrame({'PhraseID': df_test_sample['PhraseId'], 'Sentiment': prediction_list_model})","9d1c3fd6":"df_test_results.to_csv('.\/submission.csv', index=False)\n\n#FOR SUBMISSION:\n#https:\/\/www.kaggle.com\/dansbecker\/submitting-from-a-kernel","88985e33":"# Beginning Stuff","5bcec9bd":"# Train","1d2dac7b":"Language model stuff","2500f017":"# Test"}}