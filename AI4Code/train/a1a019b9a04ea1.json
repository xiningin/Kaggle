{"cell_type":{"841a8944":"code","d886e919":"code","42c761dc":"code","756c634a":"code","df70f4cc":"code","da559b04":"code","5cc08bb5":"code","3d167371":"code","39cc0b38":"code","19b34e48":"code","2e57ebc4":"code","c8480bea":"code","f0824ce0":"code","d6fbb4a5":"code","64689ed4":"code","4f7103c7":"code","2702918c":"code","0f13bb97":"code","5b1d6acb":"code","457755ea":"code","51a79e6d":"code","63056b30":"code","520dad88":"code","8e2aac08":"code","c49663b3":"code","37011bd5":"code","5dedf9e5":"code","431b429f":"code","c66c6d68":"code","7d802db2":"code","c0e7157e":"code","6daddd67":"code","7d935ff0":"code","c134e8ab":"code","0e49a732":"code","5b75dfc2":"code","7cac7f5b":"code","c5cb9c7f":"code","ac1358c8":"code","a2460284":"code","ad3a7018":"code","8a229a57":"code","f278d70f":"code","7eb2a859":"code","1eaca88c":"code","7d4d89cc":"code","61e8557c":"code","688a83f5":"code","5f407940":"code","8e9b1d6c":"code","e1c52394":"code","05ccb7d9":"code","85438da4":"code","744b67ae":"code","6b3e23fa":"code","5e357e77":"code","77804633":"code","b4f74229":"code","378e5cf8":"code","6765027a":"code","99449f2a":"code","4c2d069f":"code","b7f3b7a7":"code","7a055aa4":"code","dba619aa":"code","da75c3a6":"code","be1b14e6":"code","0e01b21f":"code","02e8fbb1":"code","c9dd82ae":"code","7597d0fc":"code","40de4a44":"code","f8bb125d":"code","567aefa9":"code","9674f062":"code","c1159d07":"code","f4d1701d":"code","923932df":"code","867788a4":"code","75babc63":"code","66c7e0e5":"code","94f9f00e":"code","c4e6b173":"code","70ec9713":"code","fd66504d":"code","1010a5ab":"code","03a9a83d":"code","4075b07e":"code","9e418eb9":"code","cd8e3558":"code","84a838dc":"code","1eab1c35":"code","685e2e1e":"code","33128d10":"code","c9a9c682":"code","2f3b1703":"code","74be8abe":"code","cd7f4f17":"code","2b87fa87":"code","1531204f":"code","072d7247":"code","9bf7cb5f":"markdown","324c6dfe":"markdown","b015a01a":"markdown","406d5781":"markdown","7a944c20":"markdown","231bdd9b":"markdown","0ac54914":"markdown","9f85a9d9":"markdown","d6f8aca6":"markdown","10842d78":"markdown","baed7498":"markdown","d7cb7671":"markdown","9431aa07":"markdown","f06d25a4":"markdown","6f2090fe":"markdown","f2293e02":"markdown","d5c8525c":"markdown","e179e08c":"markdown","4ed33a3e":"markdown","813f5d90":"markdown","418064ec":"markdown","18bbd145":"markdown","e1053765":"markdown","4024f1e8":"markdown","c123b0da":"markdown","32cacde3":"markdown","70d1b72c":"markdown","02b7e9ec":"markdown","be97117f":"markdown","3dee26f3":"markdown","5905b59c":"markdown"},"source":{"841a8944":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport datetime","d886e919":"data = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')\n","42c761dc":"#Percentage of NAN Values \nNAN = [(c, data[c].isna().mean()*100) for c in data]\nNAN = pd.DataFrame(NAN, columns=[\"column_name\", \"percentage\"])\nNAN","756c634a":"data[\"Province\/State\"]= data[\"Province\/State\"].fillna('Unknown')\n","df70f4cc":"data.head()","da559b04":"data[[\"Confirmed\",\"Deaths\",\"Recovered\"]] =data[[\"Confirmed\",\"Deaths\",\"Recovered\"]].astype(int)","5cc08bb5":"data['Country\/Region'] = data['Country\/Region'].replace('Mainland China', 'China')","3d167371":"data['Active_case'] = data['Confirmed'] - data['Deaths'] - data['Recovered']\ndata.head()","39cc0b38":"Data = data[data['ObservationDate'] == max(data['ObservationDate'])].reset_index()\n","19b34e48":"!ls ..\/input\/covid19-complete-twitter-dataset-daily-updates\/dailies\/2020-03-22\/","2e57ebc4":"bp = '..\/input\/covid19-complete-twitter-dataset-daily-updates\/dailies\/'\n\ndef check_for_date(d):\n    tw1 = pd.read_csv(bp + d + '\/{}-dataset.tsv'.format(d))\n    tw2 = pd.read_csv(bp + d + '\/{}_clean-dataset.tsv'.format(d))\n    tw3 = pd.read_csv(bp + d + '\/{}_top1000bigrams.csv'.format(d))\n    tw4 = pd.read_csv(bp + d + '\/{}_top1000terms.csv'.format(d),  header=None)\n    tw4.columns = ['term', 'count']\n    tw5 = pd.read_csv(bp + d + '\/{}_top1000trigrams.csv'.format(d))\n    return tw1, tw2,tw3, tw4, tw5","c8480bea":"tw1, tw2,tw3, tw4, tw5 = check_for_date('2020-03-22')\nprint('top terms')\ndisplay(tw4.head(10))\nprint('top bi-grams')\ndisplay(tw3.head(7))\nprint('top tri-grams')\ndisplay(tw5.head(7))","f0824ce0":"tw1, tw2,tw3, tw4, tw5 = check_for_date('2020-08-22')\nprint('top terms')\ndisplay(tw4.head(10))\nprint('top bi-grams')\ndisplay(tw3.head(7))\nprint('top tri-grams')\ndisplay(tw5.head(7))","d6fbb4a5":"Data_world = Data.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index()","64689ed4":"labels = [\"Last Update\",\"Confirmed\",\"Active cases\",\"Recovered\",\"Deaths\"]\nfig = go.Figure(data=[go.Table(header=dict(values=labels),\n                 cells=dict(values=Data_world.loc[0,[\"ObservationDate\",\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]]))\n                     ])\nfig.update_layout(\n    title='Coronavirus in the word : ',\n)\nfig.show()\n","4f7103c7":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_world.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\nfig = px.pie(Data_world, values=values, names=labels,color_discrete_sequence=['rgb(77,146,33)','rgb(69,144,185)','rgb(77,77,77)'],hole=0.7)\nfig.update_layout(\n    title='Total cases : '+str(Data_world[\"Confirmed\"][0]),\n)\nfig.show()","2702918c":"data_over_time= data.groupby([\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index().sort_values(\"ObservationDate\",ascending=True).reset_index(drop=True)\n\n","0f13bb97":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in the word',\n        template='plotly_white',\n      yaxis_title=\"Confirmed cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()","5b1d6acb":"fig = go.Figure()\n\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Active_case'],\n                    mode='lines',marker_color='yellow',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Active cases over time in the world',\n        template='plotly_dark',\n      yaxis_title=\"Active cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()\n\n","457755ea":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in the world',\n        template='plotly_white',\n      yaxis_title=\"Recovered cases\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()\n\n","51a79e6d":"\nfig = go.Figure()\n\nfig.add_trace(go.Scatter(x=data_over_time.index, y=data_over_time['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\n\nfig.update_layout(\n    title='Evolution of Deaths over time in the world',\n        template='plotly_white',\n     yaxis_title=\"Deaths\",\n    xaxis_title=\"Days\",\n\n)\n\nfig.show()","63056b30":"\nfig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Confirmed'],\n           ))\nfig.update_layout(\n    title='Confirmed Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","520dad88":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Active_case'],\n    marker_color='rgb(253,187,132)'\n           ))\nfig.update_layout(\n    title='Active Cases In Each Day',\n    template='plotly_dark',\n     xaxis_title=\"Active Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","8e2aac08":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Recovered'],\n    marker_color='rgb(178,24,43)'\n           ))\nfig.update_layout(\n    title='Recovered Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","c49663b3":"fig = go.Figure(go.Bar(\n            x=data_over_time['ObservationDate'],\n            y=data_over_time['Deaths'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","37011bd5":"Data_per_country = Data.groupby([\"Country\/Region\"])[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","5dedf9e5":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Confirmed Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n      \n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Data_per_country['Country\/Region'],\n      Data_per_country['Confirmed'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n)\nfig.show()","431b429f":"\nfig = go.Figure(go.Bar(\n            x=Data_per_country['Confirmed'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h'))\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","c66c6d68":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Active_case'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='#DC3912',))\nfig.update_layout(\n    title='Active Cases In Each Country',\n    template='plotly_white',\n    xaxis_title=\"Active Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","7d802db2":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Recovered'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='#2CA02C',))\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Countries\",\n)\nfig.show()","c0e7157e":"fig = go.Figure(go.Bar(\n            x=Data_per_country['Deaths'],\n            y=Data_per_country['Country\/Region'],\n            orientation='h',\n            marker_color='black',))\nfig.update_layout(\n    title='Deaths In Each Country',\n    template='plotly_white',\n    xaxis_title=\"Deaths\",\n    yaxis_title=\"Countries\",\n)\n\nfig.show()","6daddd67":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Confirmed'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark', )\nfig.update_layout(\n    title='Confirmed Cases In Each Country',\n)\nfig.show()","7d935ff0":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Active_case'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_white', )\nfig.update_layout(\n    title='Active Cases In Each Country',\n)\nfig.show()","c134e8ab":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Recovered'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_white', )\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n)\nfig.show()","0e49a732":"fig = px.choropleth(Data_per_country, locations=Data_per_country['Country\/Region'],\n                    color=Data_per_country['Deaths'],locationmode='country names', \n                    hover_name=Data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark', )\nfig.update_layout(\n    title='Deaths In Each Country',\n)\nfig.show()","5b75dfc2":"data_per_country = data.groupby([\"Country\/Region\",\"ObservationDate\"])[[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"]].sum().reset_index().sort_values(\"ObservationDate\",ascending=True).reset_index(drop=True)\n","7cac7f5b":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Confirmed'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.deep,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n\n    title='Evolution of confirmed cases In Each Country',\n)\nfig.show()","c5cb9c7f":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Active_case'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n\n    title='Evolution of active cases In Each Country',\n    template='plotly_dark'\n)\nfig.show()","ac1358c8":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Recovered'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.deep,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n    title='Evolution of recovered cases In Each Country',\n)\nfig.show()","a2460284":"fig = px.choropleth(data_per_country, locations=data_per_country['Country\/Region'],\n                    color=data_per_country['Deaths'],locationmode='country names', \n                    hover_name=data_per_country['Country\/Region'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,\n                    animation_frame=\"ObservationDate\")\nfig.update_layout(\n    title='Evolution of deaths In Each Country',\n    template='plotly_dark'\n)\nfig.show()","ad3a7018":"fig = go.Figure(data=[go.Bar(\n            x=Data_per_country['Country\/Region'][0:10], y=Data_per_country['Confirmed'][0:10],\n            text=Data_per_country['Confirmed'][0:10],\n            textposition='auto',\n            marker_color='black',\n            \n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Confirmed Cases\",\n        template='plotly_white'\n\n)\nfig.show()","8a229a57":"fig = go.Figure(data=[go.Scatter(\n    x=Data_per_country['Country\/Region'][0:10],\n    y=Data_per_country['Confirmed'][0:10],\n    mode='markers',\n    \n    marker=dict(\n        color=100+np.random.randn(500),\n        size=(Data_per_country['Confirmed'][0:10]\/25000),\n        showscale=True\n        )\n)])\n\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Confirmed Cases\",\n    template='plotly_dark'\n)\nfig.show()","f278d70f":"Recovered_per_country = Data.groupby([\"Country\/Region\"])[\"Recovered\"].sum().reset_index().sort_values(\"Recovered\",ascending=False).reset_index(drop=True)\n","7eb2a859":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Recovered Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Recovered_per_country['Country\/Region'],\n      Recovered_per_country['Recovered'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Recovered Cases In Each Country',\n)\nfig.show()","1eaca88c":"fig = px.pie(Recovered_per_country, values=Recovered_per_country['Recovered'], names=Recovered_per_country['Country\/Region'],\n             title='Recovered cases',\n            )\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.update_layout(\n    template='plotly_white'\n)\nfig.show()","7d4d89cc":"fig = go.Figure(data=[go.Bar(\n            x=Recovered_per_country['Country\/Region'][0:10], y=Recovered_per_country['Recovered'][0:10],\n            text=Recovered_per_country['Recovered'][0:10],\n            textposition='auto',\n            marker_color='green',\n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Recovered Cases\",\n    template='plotly_white'\n)\nfig.show()\n","61e8557c":"fig = go.Figure(data=[go.Scatter(\n    x=Recovered_per_country['Country\/Region'][0:10],\n    y=Recovered_per_country['Recovered'][0:10],\n    mode='markers',\n    marker=dict(\n        color=100+np.random.randn(500),\n        size=(Data_per_country['Recovered'][0:10]\/20000),\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Recovered Cases\",\n    template='plotly_white'\n\n)\nfig.show()","688a83f5":"Active_per_country = Data.groupby([\"Country\/Region\"])[\"Active_case\"].sum().reset_index().sort_values(\"Active_case\",ascending=False).reset_index(drop=True)\n","5f407940":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Active Cases<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Active_per_country['Country\/Region'],\n      Active_per_country['Active_case'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Active Cases In Each Country',\n)\nfig.show()","8e9b1d6c":"fig = go.Figure(data=[go.Bar(\n            x=Active_per_country['Country\/Region'][0:10], y=Active_per_country['Active_case'][0:10],\n            text=Active_per_country['Active_case'][0:10],\n           \n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Active Cases\",\n    template='plotly_white'\n)\nfig.show()\n","e1c52394":"fig = go.Figure(data=[go.Scatter(\n    x=Active_per_country['Country\/Region'][0:10],\n    y=Active_per_country['Active_case'][0:10],\n    mode='markers',\n    marker=dict(\n        color=10+np.random.randn(200),\n\n        size=Active_per_country['Active_case'][0:10]\/15000,\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Active Cases\",\n        template='plotly_white'\n\n)\nfig.show()","05ccb7d9":"Deaths_per_country = Data.groupby([\"Country\/Region\"])[\"Deaths\"].sum().reset_index().sort_values(\"Deaths\",ascending=False).reset_index(drop=True)\n","85438da4":"headerColor = 'grey'\nrowEvenColor = 'lightgrey'\nrowOddColor = 'white'\n\nfig = go.Figure(data=[go.Table(\n  header=dict(\n    values=['<b>Country<\/b>','<b>Deaths<\/b>'],\n    line_color='darkslategray',\n    fill_color=headerColor,\n    align=['left','center'],\n    font=dict(color='white', size=12)\n  ),\n  cells=dict(\n    values=[\n      Deaths_per_country['Country\/Region'],\n      Deaths_per_country['Deaths'],\n      ],\n    line_color='darkslategray',\n    # 2-D list of colors for alternating rows\n    fill_color = [[rowOddColor,rowEvenColor,rowOddColor, rowEvenColor,rowOddColor]*len(Data_per_country)],\n    align = ['left', 'center'],\n    font = dict(color = 'darkslategray', size = 11)\n    ))\n])\nfig.update_layout(\n    title='Deaths In Each Country',\n)\nfig.show()","744b67ae":"fig = go.Figure(data=[go.Bar(\n            x=Deaths_per_country['Country\/Region'][0:10], y=Deaths_per_country['Deaths'][0:10],\n            text=Deaths_per_country['Deaths'][0:10],\n            textposition='auto',\n            marker_color='black'\n\n        )])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Deaths\",\n        template='plotly_white'\n\n)\nfig.show()\n\n","6b3e23fa":"fig = go.Figure(data=[go.Scatter(\n    x=Deaths_per_country['Country\/Region'][0:10],\n    y=Deaths_per_country['Deaths'][0:10],\n    mode='markers',\n    marker=dict(\n        color=[145, 140, 135, 130, 125, 120,115,110,105,100],\n        size=Deaths_per_country['Deaths'][0:10]\/1000,\n        showscale=True\n        )\n)])\nfig.update_layout(\n    title='Most 10 infected Countries',\n    xaxis_title=\"Countries\",\n    yaxis_title=\"Deaths\",\n        template='plotly_white'\n\n)\nfig.show()","5e357e77":"Data_China = data [(data['Country\/Region'] == 'China') ].reset_index(drop=True)\nData_China.head()","77804633":"Data_china_last = Data_China[Data_China['ObservationDate'] == max(Data_China['ObservationDate'])].reset_index()\nData_china_last.head()","b4f74229":"Data_china_per_state= Data_china_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Active_case\",\"Recovered\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","378e5cf8":"fig = px.pie(Data_china_per_state, values=Data_china_per_state['Confirmed'], names=Data_china_per_state['Province\/State'],\n             title='Confirmed cases in China',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","6765027a":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Active_case'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='#DC3912',))\nfig.update_layout(\n    title='Active Cases In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Active Cases\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","99449f2a":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Recovered'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='green',))\nfig.update_layout(\n    title='Active Cases In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","4c2d069f":"fig = go.Figure(go.Bar(\n            x=Data_china_per_state['Deaths'],\n            y=Data_china_per_state['Province\/State'],\n            orientation='h',\n            marker_color='black',))\nfig.update_layout(\n    title='Deaths In Each Province\/State',\n    template='plotly_white',\n    xaxis_title=\"Deaths\",\n    yaxis_title=\"Province\/State\",\n)\nfig.show()","b7f3b7a7":"Data_china_total= Data_china_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","7a055aa4":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_china_total.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_china_total, values=values, names=labels, color_discrete_sequence=['green','royalblue','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in China : '+str(Data_china_total[\"Confirmed\"][0]),\n)\nfig.show()","dba619aa":"Data_china_op= Data_China.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","da75c3a6":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Active_case'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Deaths'],name='Deaths',\n                                   marker_color='black',mode='lines',line=dict( dash='dot') ))\nfig.add_trace(go.Scatter(x=Data_china_op['ObservationDate'], y=Data_china_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of cases over time in China',\n        template='plotly_white'\n\n)\n\nfig.show()\n","be1b14e6":"Data_US = data [(data['Country\/Region'] == 'US') ].reset_index(drop=True)\n","0e01b21f":"Data_us_last = Data_US[Data_US['ObservationDate'] == max(Data_US['ObservationDate'])].reset_index()","02e8fbb1":"Data_us_total= Data_us_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","c9dd82ae":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_us_total.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_us_total, values=values, names=labels, color_discrete_sequence=['royalblue','darkblue','green'], hole=0.5)\nfig.update_layout(\n    title='Total cases in United States : '+str(Data_us_total[\"Confirmed\"][0]),\n)\nfig.show()","7597d0fc":"Data_us_per_state= Data_us_last.groupby([\"Province\/State\"])[\"Confirmed\",\"Active_case\",\"Deaths\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","40de4a44":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Confirmed'], names=Data_us_per_state['Province\/State'],\n             title='Confirmed cases in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","f8bb125d":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Active_case'], names=Data_us_per_state['Province\/State'],\n             title='Active cases in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","567aefa9":"fig = px.pie(Data_us_per_state, values=Data_us_per_state['Deaths'], names=Data_us_per_state['Province\/State'],\n             title='Deaths in United States',\n            hole=.2)\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()","9674f062":"Data_US_op= Data_US.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","c1159d07":"\nfig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases'))\n\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()\n","f4d1701d":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Active_case'],\n                    mode='lines',\n                    name='Active cases',line=dict( dash='dot')))\n\nfig.update_layout(\n    title='Evolution of Acitive cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()","923932df":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases',marker_color='green'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in US',\n        template='plotly_white'\n\n)\n\nfig.show()\n","867788a4":"fig = go.Figure()\n\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Deaths'],name='Deaths',\n                                   marker_color='white',mode='lines',line=dict( dash='dot') ))\n\nfig.update_layout(\n    title='Evolution of Deaths over time in US',\n        template='plotly_dark'\n\n)\n\nfig.show()","75babc63":"Data_Spain = data [(data['Country\/Region'] == 'India') ].reset_index(drop=True)\n","66c7e0e5":"Data_spain = Data_Spain[Data_Spain['ObservationDate'] == max(Data_Spain['ObservationDate'])].reset_index()\nData_spain_last= Data_spain.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","94f9f00e":"labels = [\"Active cases\",\"Recovered\",\"Deaths\"]\nvalues = Data_spain_last.loc[0, [\"Active_case\",\"Recovered\",\"Deaths\"]]\ndf = px.data.tips()\nfig = px.pie(Data_spain_last, values=values, names=labels, color_discrete_sequence=['royalblue','green','darkblue'], hole=0.5)\nfig.update_layout(\n    title='Total cases in India: '+str(Data_spain_last[\"Confirmed\"][0]),\n)\nfig.show()","c4e6b173":"Data_spain_per_state= Data_spain.groupby([\"Province\/State\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().sort_values(\"Confirmed\",ascending=False).reset_index(drop=True)\n","70ec9713":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Confirmed'], height=700,\n                 title='Confirmed cases in India', color_discrete_sequence = px.colors.qualitative.Dark2)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","fd66504d":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Recovered'], height=700,\n                 title='Recovered cases in India', color_discrete_sequence = px.colors.qualitative.Dark2)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","1010a5ab":"\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Active_case'], height=700,\n                 title='Active cases in India', color_discrete_sequence = px.colors.sequential.deep)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","03a9a83d":"\n\nfig = px.treemap(Data_spain_per_state, path=['Province\/State'], values=Data_spain_per_state['Deaths'], height=700,\n                 title='Deaths in India', color_discrete_sequence = px.colors.sequential.deep)\nfig.data[0].textinfo = 'label+text+value'\nfig.show()\n\n","4075b07e":"Data_spain_op= Data_Spain.groupby([\"ObservationDate\",\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","9e418eb9":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Confirmed'],\n           ))\nfig.update_layout(\n    title='Confirmed Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Confirmed Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","cd8e3558":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Active_case'],\n    marker_color='rgb(253,187,132)'\n           ))\nfig.update_layout(\n    title='Active Cases In Each Day',\n    template='plotly_dark',\n     xaxis_title=\"Active Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","84a838dc":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Recovered'],\n    marker_color='rgb(178,24,43)'\n           ))\nfig.update_layout(\n    title='Recovered Cases In Each Day',\n    template='plotly_white',\n     xaxis_title=\"Recovered Cases\",\n    yaxis_title=\"Days\",\n)\nfig.show()","1eab1c35":"fig = go.Figure(go.Bar(\n            x=Data_spain_op['ObservationDate'],\n            y=Data_spain_op['Deaths'],\n    marker_color='rgb(13,48,100)'\n           ))\nfig.update_layout(\n    title='Deaths In Each Day India',\n    template='plotly_white',\n     xaxis_title=\"Deaths\",\n    yaxis_title=\"Days\",\n)\nfig.show()","685e2e1e":"\nData_Word = data [(data['Country\/Region'] != 'US') ].reset_index(drop=True)\nData_WORD_last = Data_Word[Data_Word['ObservationDate'] == max(Data_Word['ObservationDate'])].reset_index()\nData_us_total= Data_us_last.groupby([\"Country\/Region\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\nData_word_total= Data_WORD_last.groupby([\"ObservationDate\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n\nData_Word_op= Data_Word.groupby([\"ObservationDate\"])[\"Confirmed\",\"Deaths\",\"Recovered\",\"Active_case\"].sum().reset_index().reset_index(drop=True)\n","33128d10":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Confirmed\"]], Data_word_total.loc[0, [\"Confirmed\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(251,121,114)','rgb(128,177,211)'])\nfig.update_layout(\n    title='Confirmed cases in US and The Rest Of The World : ',\n)\nfig.show()","c9a9c682":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Active_case\"]], Data_word_total.loc[0, [\"Active_case\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(204,235,197)','rgb(222,203,228)'],hole=0.6)\nfig.update_layout(\n    title='Active cases in US and The Rest Of The World : ',\n)\nfig.show()","2f3b1703":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Recovered\"]], Data_word_total.loc[0, [\"Recovered\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(253,205,172)','rgb(179,226,205)'],hole=0.4)\nfig.update_layout(\n    title='Recovered cases in US and The Rest Of The World : ',\n)\nfig.show()","74be8abe":"labels = [\"US\",\"The rest of the world\"]\nvalues = [Data_us_total.loc[0, [\"Deaths\"]], Data_word_total.loc[0, [\"Deaths\"]]]\ndf = px.data.tips()\nfig = px.pie(data, values=values, names=labels, color_discrete_sequence=['rgb(229,196,148)','rgb(179,226,205)'])\nfig.update_layout(\n    title='Deaths in US and The Rest Of The World : ',\n)\nfig.show()","cd7f4f17":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Confirmed'],\n                    mode='lines',\n                    name='Confirmed cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Confirmed cases over time in US and The Rest Of The Word',\n        template='plotly_white'\n\n)\n\nfig.show()\n","2b87fa87":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Active_case'],\n                    mode='lines',\n                    name='Active cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Active_case'],\n                    mode='lines',\n                    name='Active cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Active cases over time in US and The Rest Of The Word',\n        template='plotly_dark'\n\n)\n\nfig.show()\n","1531204f":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Recovered'],\n                    mode='lines',\n                    name='Recovered cases in The Rest Of The Word'))\n\nfig.update_layout(\n    title='Evolution of Recovered cases over time in US and The Rest Of The Word',\n        template='plotly_dark'\n\n)\n\nfig.show()\n","072d7247":"fig = go.Figure()\nfig.add_trace(go.Scatter(x=Data_US_op.index, y=Data_US_op['Deaths'],\n                    mode='lines',\n                    name='Deaths in US'))\n\n\nfig.add_trace(go.Scatter(x=Data_Word_op.index, y=Data_Word_op['Deaths'],\n                    mode='lines',\n                    name='Deathsin The Rest Of The Word'))\nfig.update_layout(\n    title='Evolution of Deaths over time in US and The Rest Of The Word',\n        template='plotly_white'\n\n)\n\nfig.show()\n","9bf7cb5f":"Confirmed cases in every Province\/State in china","324c6dfe":"# **Please UPVOTE to keep this going**\n","b015a01a":"Get last update in India\n\n","406d5781":"Change Data Type for \"Confirmed\",\"Deaths\" and \"Recovered\"  columns to int","7a944c20":"\n<a id='prep'><\/a>\n#  <font color='black'> Preprations <\/font>","231bdd9b":"Cases in every Province\/State in US\n\n","0ac54914":"Evolution of cases over time in China","9f85a9d9":"<a id='us'><\/a>\n#  <font color='black'> **Coronavirus in the United States of America** <\/font>\n![image.png](attachment:image.png)","d6f8aca6":"<a id='ind'><\/a>\n#  <font color='black'> **Coronavirus in India** <\/font>\n\n![ind](https:\/\/upload.wikimedia.org\/wikipedia\/en\/thumb\/4\/41\/Flag_of_India.svg\/1200px-Flag_of_India.svg.png)","10842d78":"**Active cases in each Country **","baed7498":"* **Lets start with good news :  **\n**Recorvered cases in each Country **","d7cb7671":"Evolution of coronavirus over time.","9431aa07":"\n<a id='word'><\/a>\n#  <font color='black'> **Covid-19 In the world** <\/font>","f06d25a4":"**Deaths cases in each Country **","6f2090fe":"\n<font color='black'> 34 % of Province\/State are unknown we will fill nan values with Unknown. <\/font>\n","f2293e02":"# <font color='black'> Table of Contents <\/font>\n1. <a href='#prep'>Preprations<\/a>\n1. <a href='#twitter'>Covid-19 Twitter Dataset<\/a>\n1. <a href='#word'>Covid-19 In the world<\/a>\n1. <a href='#chi'>Covid-19 in China<\/a>\n1. <a href='#us'>Covid-19 in US<\/a>\n1. <a href='#ind'>Covid-19 in India<\/a>\n1. <a href='#usw'>US X The rest of the word<\/a>\n","d5c8525c":"Get total cases in China","e179e08c":"Get last update in china","4ed33a3e":"Get Last update","813f5d90":"Evolution of coronavirus over time","418064ec":"### Tweets at 2020\/03\/22","18bbd145":"<font color='black'> Calculating the percentage of missing values of each feature <\/font>\n","e1053765":"Get last update in US\n\n","4024f1e8":"<a id='usw'><\/a>\n\n#  <font color='black'> **US X The rest of the word** <\/font>\n","c123b0da":"\n<a id='twitter'><\/a>\n#  <font color='black'> **Covid-19 Twitter Dataset** <\/font>","32cacde3":"Replacing \"Mainland China\" with \"China\" ","70d1b72c":"\n### <font color='black'> Welcome everyone! <\/font>\n\nIn this notebook, I tried to show you some samples of analysis, charts and datasets. You can try to check out other dates of Twitter stream, combine methods or use different analytical methods.\n\n#### Please <font color='green'> UPVOTE <\/font> to keep this going.\n\n#### <font color='blue'> #StayHomeAndCode <\/font>","02b7e9ec":"<a id='chi'><\/a>\n#  <font color='black'> **Coronavirus in China** <\/font>\n![image.png](attachment:image.png)","be97117f":"* Creating new feature \"Active_case\" \n* Active_case = Confirmed - Deaths - Recovered","3dee26f3":" **Confirmed cases in each Country**","5905b59c":"# Tweets at 2020\/08\/22\n\n5 Months later"}}