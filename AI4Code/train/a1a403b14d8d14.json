{"cell_type":{"800316b5":"code","09b4b692":"code","b7b76fe7":"code","cfe0b99f":"code","395d8829":"code","d8c8449c":"code","da7a7e36":"code","670e0022":"code","09e3dfab":"code","8798a8f0":"code","04976c8b":"code","5cf594fa":"code","80a93ef1":"code","4d985b39":"code","e1523c00":"code","a13c37d2":"code","e078f5bf":"code","34712549":"code","6b6609f0":"code","25b5f129":"code","e7747613":"code","6cdb189e":"code","76e2de9f":"code","85d4d609":"code","ca162e7f":"markdown","00910861":"markdown","0b4f2e3e":"markdown","a09e22a5":"markdown","9c5351ae":"markdown"},"source":{"800316b5":"import numpy as np \nimport pandas as pd \n\nimport matplotlib.pyplot as plt\nimport seaborn as sns","09b4b692":"df = pd.read_csv('\/kaggle\/input\/rwallstreetbets-comments-1120-till-1130\/comments_2020-11-1_2020-11-30_new.csv')\ndf.head(5)","b7b76fe7":"df.shape","cfe0b99f":"df.dropna(inplace=True)","395d8829":"df.drop('Unnamed: 0', inplace=True, axis=1)","d8c8449c":"df.head(5)","da7a7e36":"df['Date']=pd.to_datetime(df['Date'])","670e0022":"df['day'] = pd.DatetimeIndex(df.Date).day","09e3dfab":"df.day.value_counts()","8798a8f0":"#Removing November 26th as it's Thahnksgiving\ndf = df[df.day != 26]\ndf = df[df.day != 30]","04976c8b":"sns.set(rc={'figure.figsize':(11, 4)})\nsns.lineplot(data=df.day.value_counts())","5cf594fa":"#As exact time of a comment we would like to use letter, for now we don't need it\ndf.drop('Time', inplace=True, axis=1)","80a93ef1":"#repeat the same for update with december comments\ndf_1 = pd.read_csv('\/kaggle\/input\/rwallstreetbets-comments-1120-till-1130\/comments_2020-12-1_2020-12-31_new.csv')\ndf_1.drop('Unnamed: 0', inplace=True, axis=1)\ndf_1['Date']=pd.to_datetime(df_1['Date'])\ndf_1['day'] = pd.DatetimeIndex(df_1.Date).day\ndf_1.drop('Time', inplace=True, axis=1)","4d985b39":"df_1.head()","e1523c00":"!pip install yfinance\nimport yfinance as yf\n\n\ndef get_ticker_data(symbol, start_date, end_date):\n\n    \"\"\"\n    Get daily ticker data for 'symbol' between 'start_date' and 'end date', return as a\n    pandas dataframe.\n    \"\"\"\n\n    ticker = yf.Ticker(symbol)\n\n    df_fin = ticker.history(period=\"1d\", start=start_date, end=end_date)\n    df_fin = df_fin[[\"Open\", \"High\", \"Low\", \"Close\", \"Volume\"]]\n\n    return df_fin\n\n\n\nsymbol = \"PLTR\"\ndf_fin = get_ticker_data(symbol, \"2020-11-1\", \"2020-11-30\")","a13c37d2":"df_fin.head()","e078f5bf":"df_fin['day'] = pd.DatetimeIndex(df_fin.index).day\n##Removing November 26th as it's Thahnksgiving\ndf_fin = df_fin[df_fin.day != 26]\n","34712549":"sns.lineplot(data=df_fin, x=\"day\", y=\"Close\")","6b6609f0":"pltr_df = df[df['Body'].str.contains(\"PLTR\")]","25b5f129":"pltr_df.day.value_counts()","e7747613":"fig, axs = plt.subplots(ncols=2)\nsns.lineplot(data=pltr_df.day.value_counts(), ax=axs[0])\nsns.lineplot(data=df_fin, x=\"day\", y=\"Close\", ax=axs[1])\n\naxs[0].set(xlabel='Day', ylabel='Number of mentions', title='r\/WSB November')\naxs[1].set(xlabel='Day', ylabel='Close Price', title='PLTR November')\n\nfig.show()","6cdb189e":"symbol = \"PLTR\"\ndf_fin_1 = get_ticker_data(symbol, \"2020-12-1\", \"2020-12-30\")\ndf_fin_1['day'] = pd.DatetimeIndex(df_fin_1.index).day\n\npltr_df_1 = df_1[df_1['Body'].str.contains(\"PLTR\", na=False)]\nfig, axs = plt.subplots(ncols=2)\nsns.lineplot(data=pltr_df_1.day.value_counts(), ax=axs[0])\nsns.lineplot(data=df_fin_1, x=\"day\", y=\"Close\", ax=axs[1])\n\naxs[0].set(xlabel='Day', ylabel='Number of mentions', title='r\/WSB December')\naxs[1].set(xlabel='Day', ylabel='Close Price', title='PLTR December')\n\nfig.show()","76e2de9f":"def build_comparison(ticker, start_date, end_date):\n    wsb_ticker = df[df['Body'].str.contains(ticker)]\n    yfinance_ticker = get_ticker_data(ticker, start_date, end_date)\n    \n    yfinance_ticker['day'] = pd.DatetimeIndex(yfinance_ticker.index).day\n    ##Removing November 26th as it's Thahnksgiving\n    yfinance_ticker = yfinance_ticker[yfinance_ticker.day != 26]\n    \n    fig, axs = plt.subplots(ncols=2)\n    sns.lineplot(data=wsb_ticker.day.value_counts(), ax=axs[0])\n    sns.lineplot(data=yfinance_ticker, x=\"day\", y=\"Close\", ax=axs[1])\n\n    axs[0].set(xlabel='Day', ylabel='Number of mentions', title='r\/WSB')\n    axs[1].set(xlabel='Day', ylabel='Close Price', title=ticker+'')\n\n    fig.show()\n    \nbuild_comparison('TSLA', \"2020-11-1\", \"2020-11-30\")","85d4d609":"build_comparison('NIO', \"2020-11-1\", \"2020-11-30\")","ca162e7f":"# It draws my attention to the wsb's mentions spike and then spikes on the PLTR graph","00910861":"Scaping finance data","0b4f2e3e":"Analyze pltr, tsla, baba mentioning and price change","a09e22a5":"1. Call to put ratio daily","9c5351ae":"Let's create a function to set a ticker once and then get 2 lineplots like in a previous case"}}