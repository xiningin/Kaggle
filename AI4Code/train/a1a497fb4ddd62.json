{"cell_type":{"4dd90caf":"code","7c2cf847":"code","337ac45f":"code","88d692c9":"code","2903a59f":"code","7eb842c9":"code","8da9dc71":"markdown","e7ba5569":"markdown","670a3bc9":"markdown","b3248427":"markdown","5a729a56":"markdown","cc51f3e0":"markdown","731e2bc3":"markdown"},"source":{"4dd90caf":"import pytesseract\nfrom pytesseract import Output\nimport cv2\nimport matplotlib.pyplot as plt\nplt.rcParams[\"figure.figsize\"] = (20,30)","7c2cf847":"img = cv2.imread(\"..\/input\/invoice\/invoice-sample.jpg\")\nplt.imshow(img)","337ac45f":"d = pytesseract.image_to_data(img, output_type=Output.DICT)\nprint(d.keys())","88d692c9":"for i in range(100, 105):\n    print(f\"Left Distance:{d['left'][i]}\",\n          f\"Top Distance:{d['top'][i]}\",\n          f\"Width:{d['width'][i]}\",\n          f\"Height:{d['height'][i]}\",\n          f\"Text:{d['text'][i]}\",\n          f\"Conf:{d['conf'][i]}\\n\")","2903a59f":"img = cv2.imread(\"..\/input\/invoice\/invoice-sample.jpg\")\n\nn_boxes = len(d['text'])\nfor i in range(n_boxes):\n    if int(d['conf'][i]) > 60:\n        (x, y, w, h) = d[\"left\"][i], d[\"top\"][i], d[\"width\"][i], d[\"height\"][i] \n        img = cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 2) #Plotting bounding box\n        img = cv2.putText(img, d['text'][i], (x, y-5), cv2.FONT_HERSHEY_SIMPLEX, 0.3, 1) #Plotting texts on top of box\n        \nplt.imshow(img)","7eb842c9":"import re\n\nemail_pattern = '\\S+@\\S+'\n\nimg = cv2.imread(\"..\/input\/invoice\/invoice-sample.jpg\")\n\nd = pytesseract.image_to_data(img, output_type=Output.DICT)\n\nn_boxes = len(d['text'])\nfor i in range(n_boxes):\n    if int(d['conf'][i]) > 60:\n        if re.match(email_pattern, d['text'][i]):\n            (x, y, w, h) = d[\"left\"][i], d[\"top\"][i], d[\"width\"][i], d[\"height\"][i] \n            img = cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 2) #Plotting bounding box\n            print(f\"Email: {d['text'][i]}\")\n        \nplt.imshow(img)","8da9dc71":"This is an introductory notebook to help you get started with Optical Character Recognition (OCR) using Python-tesseract which is a python wrapper for [Google\u2019s Tesseract-OCR Engine](https:\/\/github.com\/tesseract-ocr\/tesseract). In this notebook we will cover the basics to help you get started with OCR:\n* Getting Boxes around texts\n* Text Template Matching","e7ba5569":"Among the data returned by pytesseract.image_to_data():\n* text are the words detected\n* left is the distance from the upper-left corner of the bounding box, to the left border of the image.\n* top is the distance from the upper-left corner of the bounding box, to the top border of the image.\n* width and height are the width and height of the bounding box.\n* conf is the model's confidence for the prediction for the word within that bounding box. If conf is -1, that means that the corresponding bounding box contains a block of text, rather than just a single word.\n\nLet us see some random data inside the dict.","670a3bc9":"## 1. Getting boxes around text","b3248427":"Now, we will try to find some particular text in the invoice by matching it to a template. In this example, we will try to locate the email adress in the invoice and draw a bounding box around the email address. For this, we will use the image_to_data function to extract all the texts and then use regular expression to find email address. If any match is found, we will simply draw a bounding box around it as perviously done.","5a729a56":"## 2. Text Template Matching","cc51f3e0":"We can pass an image into pytesseract.image_to_data() function that will detect words in our document and return useful information regarding the detected words into a dictionary.","731e2bc3":"Now let us actually draw boxes around the detected texts."}}