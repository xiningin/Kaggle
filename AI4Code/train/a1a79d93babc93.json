{"cell_type":{"6bd9c708":"code","f1666a40":"code","b0737f4f":"code","2708edc8":"code","d0aa155b":"code","1e20ed3d":"code","e58a21f7":"code","6f0625c3":"code","7a6b4633":"code","7892cf86":"code","877a070e":"code","c4d957ae":"code","7ba1bbf8":"markdown","54153a86":"markdown","53b5c631":"markdown","5c40a15e":"markdown","fc50aa77":"markdown","3ff11b21":"markdown","42361430":"markdown","68a8f068":"markdown","db32abcc":"markdown"},"source":{"6bd9c708":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f1666a40":"from sklearn.svm import SVC\nimport nltk\nfrom nltk.corpus import stopwords\nimport numpy as np\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfTransformer\nfrom sklearn.model_selection import train_test_split\n\nimport pandas as pd\nimport string\nimport seaborn as sns","b0737f4f":"df = pd.read_csv('\/kaggle\/input\/sms-spam-collection-dataset\/spam.csv', encoding = 'ISO-8859-1')\n","2708edc8":"df","d0aa155b":"\ndf = df.drop(df.columns[[2,3,4]],axis=1)\ndf","1e20ed3d":"df.columns = ['label','message']\ndf","e58a21f7":"df.info()\ndf.describe()","6f0625c3":"X = df['message']\ny = df['label']","7a6b4633":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state = 0)","7892cf86":"cv = CountVectorizer()\nX_train = cv.fit_transform(X_train)\nX_test = cv.transform(X_test)\n","877a070e":"model = SVC(kernel = 'rbf', random_state = 10)\nmodel.fit(X_train,y_train)\nprint(f'model fitted with accuracy {round((model.score(X_test,y_test))*100,2)}%')#for printing the accuracy","c4d957ae":"def predict(x):\n    val = model.predict(cv.transform([x]))\n    return ''.join(val)\n# testing the model\nprint(predict('i love it ')) #this is ham\nprint(predict('complimentary 4 STAR Ibiza Holiday or \u00c2\u00a310,000 cash needs your URGENT collection. 09066364349 NOW from Landline not to lose out! Box434SK38WP150PPM18+')) #this is spam","7ba1bbf8":"# function for predicting new input","54153a86":"# splitting X and y ","53b5c631":"# train the model (with svm)","5c40a15e":"# reading dataset","fc50aa77":"# Converting a collection of text documents to a matrix of token counts to make data able to train with ml model","3ff11b21":"# rename columns","42361430":"# splitting X_train,X_test,y_train,y_test","68a8f068":"# removing unwanted columns","db32abcc":"# importing modules"}}