{"cell_type":{"09c9ad94":"code","2f6802d7":"code","c5639a2e":"code","a69507f3":"code","31d1d3f7":"code","adda248a":"code","f6f8c3a5":"code","e4e72d54":"code","756d6870":"code","32ee3507":"code","a34428f5":"code","38f8bcff":"code","ff85561f":"code","ece1207f":"code","85006a2a":"code","0f500e7c":"markdown","9b703524":"markdown","0c49ede6":"markdown","8b0202d8":"markdown","8119e42a":"markdown","ee3e69ca":"markdown","a49c4ed0":"markdown","20573987":"markdown","efa6c53e":"markdown","1e7da767":"markdown","d1b47752":"markdown","d4d717f5":"markdown","aef6eb1e":"markdown"},"source":{"09c9ad94":"pip install openpyxl","2f6802d7":"import os\nimport warnings\nimport numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nwarnings.simplefilter('ignore')","c5639a2e":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path = os.path.join(dirname, filename)\n        \ncl = [\"Country\", \"Year\", \"Wine production\"]\ndf = pd.read_excel(path, 'Sheet2', names=cl, engine='openpyxl')\ndf.head()","a69507f3":"df.describe()","31d1d3f7":"df.info()","adda248a":"df.isnull().sum()","f6f8c3a5":"df.columns","e4e72d54":"producers = df.groupby('Country')['Wine production'].sum()\nproducers.head()","756d6870":"producers.sort_values(ascending=False)","32ee3507":"pd.DataFrame(producers.sort_values(ascending=False)).mean()","a34428f5":"sample = df.sample(frac=0.005, random_state=1)","38f8bcff":"plt.scatter(df.Year, df['Country'])","ff85561f":"plt.boxplot(df['Wine production'])\nplt.title('Box plot')\nplt.xlabel('Wine Production')\nplt.savefig('bplt.png')","ece1207f":"wine = df['Wine production']\nmedian = []\nfor i in range(wine.shape[0]):\n    median.append(wine.mean())\nplt.plot(wine, label='wine production')\nplt.plot(median, color='r', linewidth=3, label='Average')\nplt.legend(loc=2)","85006a2a":"Q1 = np.percentile(wine, 25, interpolation='midpoint')\nQ3 = np.percentile(wine, 75, interpolation='midpoint')\nIQR = Q3 - Q1\n\nupper = np.where(wine>=(Q3+1.5*IQR))\nlower = np.where(wine<=(Q1-1.5*IQR))\nnew = pd.DataFrame(wine)\nnew.drop(upper[0], inplace=True)\nnew.drop(lower[0], inplace=True)\n\nplt.plot(new, label='wine production, dropped outliers')\nplt.plot(wine, label='wine production, with outliers', c='r', alpha=0.3)\nplt.legend()","0f500e7c":"## Sampling","9b703524":"## Production average of the country","0c49ede6":"Hopefuly there is no null value in this entry.","8b0202d8":"<h4> What do you think about the outliers?! <\/h4>","8119e42a":"Let's take a look at the relationship between the Year of production and producer country","ee3e69ca":"# Calling libs","a49c4ed0":"# Importing dataset","20573987":"**By the way, the answer to the task is \nITALY**","efa6c53e":"# Exploring the dataset\nKnowing more about the dataset\n","1e7da767":"We have three features, namely Country, Year of production, Wine product. The first column is a categorical attribute, the rests are int and float64, respectively. The memory usage has shown, it would be better to convert it to CSV.","d1b47752":"<hr>\n**As we can see, Italy had produced most of the world's wines.**","d4d717f5":"As we can observe there is no meaningful relationship between these two features","aef6eb1e":"> As I barely find enough free time to do some Kaggling, I worked about half an hour on this dataset, but you can do more with it as it has a good feature in terms of learning fundamental statistic elements\n<br>\n> Seyedsaman Emami"}}