{"cell_type":{"a13b92c8":"code","8dd2d1fc":"code","d517dac2":"code","d6a46d78":"code","b865c478":"code","ac2d9267":"code","61b1d76b":"code","16171c6d":"code","d5895f3a":"code","3d04af7a":"code","b2b5a148":"code","498acfe5":"code","511eed47":"code","d54548fe":"code","691c03de":"code","adab0580":"code","99ddfded":"markdown","e7779e12":"markdown","859fa1ea":"markdown","f718b7ec":"markdown","45a01fb0":"markdown","2f3f61a5":"markdown","fd824aa0":"markdown","2fa06b32":"markdown","9dd1221c":"markdown","2e02d8d0":"markdown"},"source":{"a13b92c8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom lightgbm import LGBMRegressor #Model Selection\nfrom sklearn.preprocessing import LabelEncoder","8dd2d1fc":"plt.rcParams['axes.unicode_minus']=False","d517dac2":"train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\ntest = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv')","d6a46d78":"pd.set_option('display.max_columns',None)\ntrain.head(5)","b865c478":"plt.figure(figsize=(15,15))\nsns.heatmap(train.isna(),cbar=False)","ac2d9267":"train.drop({'PoolQC','Alley','MiscFeature','Fence','LotFrontage','FireplaceQu'},axis=1,inplace=True)\ntest.drop({'PoolQC','Alley','MiscFeature','Fence','LotFrontage','FireplaceQu'},axis=1,inplace=True)","61b1d76b":"mask=np.zeros_like(train.corr(),dtype=bool)\nmask[np.triu_indices_from(mask)]=True\n\nplt.figure(figsize=(20,20))\nsns.heatmap(train.corr(),annot=True,mask=mask,cmap='Blues')","16171c6d":"test.isna().sum()","d5895f3a":"plt.figure(figsize=(15,15))\nsns.heatmap(test.isna(),cbar=False)","3d04af7a":"le=LabelEncoder()\nfor i in range(0,len(train.columns)):\n    if (train['{0}'.format(train.columns[i])].dtype == object):\n        train['{0}'.format(train.columns[i])]=le.fit_transform(train['{0}'.format(train.columns[i])].astype(str))\nfor i in range(0,len(test.columns)):\n    if (test['{0}'.format(test.columns[i])].dtype == object):\n        test['{0}'.format(test.columns[i])]=le.fit_transform(test['{0}'.format(test.columns[i])].astype(str))        ","b2b5a148":"train.head()","498acfe5":"test.head()","511eed47":"features=['MSSubClass', 'MSZoning', 'LotArea', 'Street', 'LotShape',\n       'LandContour', 'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood',\n       'Condition1', 'Condition2', 'BldgType', 'HouseStyle', 'OverallQual',\n       'OverallCond', 'YearBuilt', 'YearRemodAdd', 'RoofStyle', 'RoofMatl',\n       'Exterior1st', 'Exterior2nd', 'MasVnrType', 'MasVnrArea', 'ExterQual',\n       'ExterCond', 'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure',\n       'BsmtFinType1', 'BsmtFinSF1', 'BsmtFinType2', 'BsmtFinSF2', 'BsmtUnfSF',\n       'TotalBsmtSF', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical',\n       '1stFlrSF', '2ndFlrSF', 'LowQualFinSF', 'GrLivArea', 'BsmtFullBath',\n       'BsmtHalfBath', 'FullBath', 'HalfBath', 'BedroomAbvGr', 'KitchenAbvGr',\n       'KitchenQual', 'TotRmsAbvGrd', 'Functional', 'Fireplaces', 'GarageType',\n       'GarageYrBlt', 'GarageFinish', 'GarageCars', 'GarageArea', 'GarageQual',\n       'GarageCond', 'PavedDrive', 'WoodDeckSF', 'OpenPorchSF',\n       'EnclosedPorch', '3SsnPorch', 'ScreenPorch', 'PoolArea', 'MiscVal',\n       'MoSold', 'YrSold', 'SaleType', 'SaleCondition']\ntarget='SalePrice'","d54548fe":"X_train=train[features]\nX_test=test[features]\nY_train=train[target]","691c03de":"lgb=LGBMRegressor()\nlgb.fit(X_train,Y_train)\nresult=lgb.predict(X_test)","adab0580":"submission=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/sample_submission.csv')\nresult_sub=submission.copy()\nresult_sub['SalePrice']=result\nresult_sub.to_csv(\"HousePrice.csv\",index=False)","99ddfded":"<strong>Use Scikit-learn's LabelEncoder to change object to unique int<strong>","e7779e12":"## 1.Project Data Load","859fa1ea":"<strong>Use seaborn's heatmap to see NaN<strong>","f718b7ec":"## 4. Model Selection and fit - LGBMRegressor","45a01fb0":"## 2. Data EDA","2f3f61a5":"## 3.Data Preprocessing","fd824aa0":"<strong>Heatmap of correlation between the features<strong>","2fa06b32":"## 5. Submission","9dd1221c":"<strong>Dropping columns that have many NaN<strong>","2e02d8d0":"# Prediction House Prices using LGBMRegressor"}}