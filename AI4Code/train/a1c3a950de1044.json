{"cell_type":{"a59df830":"code","cf119c8a":"code","ebbab13d":"code","fab398c5":"code","1c9567be":"code","62d46fc3":"code","74b2dce7":"code","c80baf8b":"code","8e7203f8":"code","1342fdb3":"code","1fd603e3":"code","c9d5c913":"code","967e9d25":"code","c7a44e50":"code","39d5c3d3":"code","3c51e950":"code","359fcc89":"code","cd76798d":"code","f3b8eb2a":"code","91cd778f":"code","d2cdfa6e":"code","023ca3e1":"code","647c335d":"code","d6f15f56":"code","969b1b94":"code","26801f9d":"code","b1e0abad":"code","d822d716":"code","1eea2595":"code","0b6bccd8":"code","a29353a9":"code","04003ec2":"code","f3b598ba":"code","22575ac5":"code","dc95fc0e":"code","e0dda4bd":"code","3b3732b2":"code","41c8579b":"markdown","98c3a83a":"markdown","841fcaa2":"markdown","77d3e263":"markdown","ea6edb1e":"markdown","5b3ad367":"markdown","a0ff3248":"markdown","1eb23712":"markdown","80ec1ae3":"markdown","1d741ef4":"markdown","d5cdd482":"markdown","78e652f5":"markdown","a668f1c1":"markdown","3ed456c5":"markdown"},"source":{"a59df830":"# essentials for getting the input files\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","cf119c8a":"# importing the essentials libraries \nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","ebbab13d":"# looks like we have only one dataset. \n# importing the dataset into the code\ndf = pd.read_csv(\"\/kaggle\/input\/hotel-booking-demand\/hotel_bookings.csv\")","fab398c5":"# checking the dimensions of dataset\ndf.shape","1c9567be":"df.dtypes","62d46fc3":"df.describe()","74b2dce7":"df.corr(method = 'pearson')","c80baf8b":"sns.heatmap(df.corr())","8e7203f8":"# removing missing values\ndf.isnull().sum()","1342fdb3":"df = df.drop([\"company\", \"agent\"], axis = 1)","1fd603e3":"df = df.dropna()","c9d5c913":"df.isnull().sum()","967e9d25":"df.head()","c7a44e50":"df.shape","39d5c3d3":"# importing the label encoder from sklearn\nfrom sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\ndef encoding(df_column):\n    if (df_column.dtype == 'O'):\n        return encoder.fit_transform(df_column)\n    return df_column\ndf_encoded = df.apply(encoding)","3c51e950":"df_encoded.head()","359fcc89":"df_encoded = df_encoded.drop(['lead_time', 'arrival_date_year', 'reservation_status_date', 'adr'], axis = 1)","cd76798d":"df_encoded.corr(method = 'pearson')['is_repeated_guest']","f3b8eb2a":"input_features = df_encoded.drop([\"is_repeated_guest\"], axis = 1)\ntarget_feature = df_encoded[[\"is_repeated_guest\"]]","91cd778f":"input_features.info(), target_feature.info()","d2cdfa6e":"input_features.describe()","023ca3e1":"# importing the SelectKBest feature selection\nfrom sklearn.feature_selection import SelectKBest, chi2\nbest_features = SelectKBest(score_func = chi2, k = 'all')\nnew_best = best_features.fit(input_features, target_feature)","647c335d":"scores_df = pd.DataFrame(new_best.scores_)\ncolumns_df = pd.DataFrame(input_features.columns)\nfinal_dataframe = pd.concat([columns_df, scores_df], axis = 1)\nfinal_dataframe.columns = ['features', 'scores']\nfinal_dataframe","d6f15f56":"# sorting them in descending order\nfinal_dataframe.sort_values(by = 'scores', ascending = False)","969b1b94":"input_features = df_encoded.drop(['arrival_date_month', \n                                  'customer_type', \n                                  'babies', \n                                  'total_of_special_requests', \n                                  'arrival_date_day_of_month', \n                                  'booking_changes',\n                                  'is_repeated_guest'], axis = 1)\ntarget_feature = df_encoded[[\"is_repeated_guest\"]]","26801f9d":"input_features.info()","b1e0abad":"# converting the children feature from float to int\nprint(input_features['children'].dtype)\ninput_features['children'] = pd.to_numeric(input_features['children'].values, downcast = 'integer')\nprint(input_features['children'].dtype)","d822d716":"input_features.info(), target_feature.info()","1eea2595":"from sklearn.model_selection import train_test_split\ntrain_X, test_X, train_y, test_y = train_test_split(input_features, target_feature, test_size = 0.2, random_state = 101)","0b6bccd8":"print(train_X.shape)\nprint(train_y.shape)\nprint(test_X.shape)\nprint(test_y.shape)","a29353a9":"# let us use KNN classification\nfrom sklearn.neighbors import KNeighborsClassifier\nclassifier = KNeighborsClassifier(n_neighbors = int(np.sqrt(input_features.shape[0]).round()))","04003ec2":"classifier.fit(train_X, train_y.values)","f3b598ba":"predicted_classes = classifier.predict(test_X)","22575ac5":"# let us check the accuracy of the model\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report\nprint(confusion_matrix(test_y, predicted_classes))","dc95fc0e":"(22987 + 131) \/ (22987 + 21 + 641 + 131)","e0dda4bd":"print(classification_report(test_y, predicted_classes))","3b3732b2":"print(accuracy_score(test_y, predicted_classes))","41c8579b":"Let us get rid of categorical data for now","98c3a83a":"We can find whether a particular guest return or not to a particular hotel with an accuracy of 97%. :) ","841fcaa2":"We need to pick only the essential features. Not everything ! \n\nLet us get the features that might be related to the feature \"is_repeated_guest\".","77d3e263":"f1 scores are good !!!","ea6edb1e":"We can remove\n1. lead_time\n2. arrival_date_year\n3. reservation_status_date\n4. adr","5b3ad367":"Splitting the training and testing dataset","a0ff3248":"Let us use statistical tests for selecting features that contribute the most for the target feature.","1eb23712":"We can generate a lot of hypothesis. \n\nRight now, let us try to find whether a guest is repeated guest or not. In other words, **let us find whether a guest will come again to the particular hotel or not**.","80ec1ae3":"We are interested about this particular feature \"is_repeated_guest\"","1d741ef4":"Seems like we have a dataset with numerical, categorical as well as date datatypes","d5cdd482":"Let us pick the features that return th highest scores for our final dataset to model","78e652f5":"Perfect !!! Now we can play !","a668f1c1":"Creative ideas and Comments are welcome !!! ","3ed456c5":"We can remove the field \"company\" and \"agent\" for now. We shall add it and play with it later on. "}}