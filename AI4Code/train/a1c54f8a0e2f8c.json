{"cell_type":{"e359d997":"code","7d397526":"code","1e6e350b":"code","c5cce239":"code","e95ac810":"code","15c73c02":"code","9c1a34e7":"code","e3ab475a":"code","aac8f4ca":"code","3addeb8d":"code","7a0bf0be":"code","32dd1e98":"code","fb8f82fc":"code","54b5b63f":"code","511fad52":"code","8716efd5":"code","bdbb551e":"code","9d447041":"markdown","53063d41":"markdown","128e96b1":"markdown","f369458b":"markdown","e1f13fcd":"markdown"},"source":{"e359d997":"import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nfrom sklearn.cluster import KMeans\nfrom sklearn.linear_model import LinearRegression","7d397526":"# Get list of reversed questions: https:\/\/ipip.ori.org\/new_ipip-50-item-scale.htm\nreversed_items = [\"EXT2\", \"EXT4\", \"EXT6\", \"EXT8\", \"EXT10\", \"EST1\", \"EST3\", \"EST6\", \"EST7\", \"EST8\", \"EST9\", \"EST10\", \"AGR1\", \"AGR3\", \"AGR5\", \"AGR7\", \"CSN2\", \"CSN4\", \"CSN6\", \"CSN8\", \"OPN2\", \"OPN4\", \"OPN6\"]","1e6e350b":"raw_responses = pd.read_csv(\"..\/input\/big-five-personality-test\/IPIP-FFM-data-8Nov2018\/data-final.csv\", sep=\"\\t\")\nresponses = raw_responses.filter(regex='^(EXT|EST|AGR|CSN|OPN)[0-9]+$')\nresponses = responses.dropna(how='all')\nresponses = responses.replace(0, np.nan).dropna(how='any') # Note to Self: Try averaging the 0\nresponses[reversed_items] = 6 - responses[reversed_items] # Reverse Code the Reverse Coded Items\nfor cat in ['EXT', 'EST', 'AGR', 'CSN', 'OPN']:\n    responses[cat] = responses[[cat + str(i) for i in range(1,11)]].sum(1)","c5cce239":"mini_responses = responses.filter([\"EXT\", \"EST\", \"AGR\", \"CSN\", \"OPN\"])","e95ac810":"responses_array = np.array(mini_responses)\n\nkmeans_kwargs = {\n    \"init\": \"random\",\n    \"n_init\": 5,\n    \"max_iter\": 300,\n    \"random_state\": 42,\n}","15c73c02":"# A list holds the SSE values for each k\nsse = []\nfor k in range(2, 11):\n    kmeans = KMeans(n_clusters=k, **kmeans_kwargs)\n    kmeans_fit = kmeans.fit(responses_array)\n    sse.append(kmeans_fit.inertia_)","9c1a34e7":"sil","e3ab475a":"plt.plot(range(2, 11), sse)\nplt.xticks(range(2, 11))\nplt.xlabel(\"Number of Clusters\")\nplt.ylabel(\"SSE\")\nplt.show()","aac8f4ca":"kmeans_model = KMeans(n_clusters = 5, **kmeans_kwargs)\nkmeans_predictions = kmeans_model.fit_predict(responses_array)","3addeb8d":"kmeans_predictions","7a0bf0be":"mini_responses[\"category\"] = kmeans_predictions","32dd1e98":"mini_responses","fb8f82fc":"fig, axs = plt.subplots(5, 5, figsize=(20,20))\n\ncols = [\"EXT\", \"EST\", \"AGR\", \"CSN\", \"OPN\"]\n\nfor i in range(0,5):\n    for j in range(0,5):\n        x = mini_responses.loc[mini_responses.category == i, cols[j]]\n        axs[i, j].hist(x, label=j)\n        \n        # Set a title, so we know which features we're looking at\n        axs[i, j].set_title(f'Group {i} x {cols[j]}')","54b5b63f":"\"Extraversion\",\"Agreeableness\",\"Conscientiousness\",\"Emotional Stability\",\"Openess\"","511fad52":"mini_responses.groupby([\"category\"]).mean().reset_index()","8716efd5":"target_summary = mini_responses.groupby([\"category\"]).mean().reset_index().melt(id_vars=\"category\")\ntarget_summary","bdbb551e":"target_summary.groupby([\"category\"]).plot.bar(x = \"variable\", y = \"value\")","9d447041":"# There are K types of people in the world","53063d41":"## Clean Data","128e96b1":"# Categorize","f369458b":"## Load Libraries","e1f13fcd":"## Identify Reasonable Number of Clusters with KMeans"}}