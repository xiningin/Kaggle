{"cell_type":{"9301e57e":"code","2625af51":"code","f5810cc9":"code","49ddaa34":"code","e04999ee":"code","2f12de46":"code","11ba2de6":"code","b8298cf1":"code","26ac855d":"code","15f17286":"code","c3f4d4fe":"code","acd9c6a1":"code","09694149":"code","a84f8e13":"code","a2150a63":"code","6066b4bb":"code","51f065db":"code","d9ae8110":"code","dde2b796":"code","8bb75ab1":"code","56d3e857":"code","84d5feca":"code","2c80bf57":"code","c1797472":"code","a73258ba":"code","27c57df7":"code","907ac270":"code","693f2113":"code","f5cfb7b7":"code","9131a771":"code","49a5d125":"code","44ab4da8":"code","f7839491":"code","17fe25ae":"code","d16479ff":"code","04f0e252":"code","40802db6":"code","d6ef00ee":"code","a6786969":"code","c89ef988":"code","e9c68518":"code","524a41d9":"code","d4b3ac4f":"code","dd180fd5":"code","eab9a13d":"code","07ade11b":"code","90aad243":"code","54d03a53":"code","bb787241":"code","d3479e67":"code","0964df70":"code","88c388f3":"code","cee6e465":"code","f6d5e8e7":"code","de37bfca":"code","dbd2c957":"code","fd680807":"code","3ac87f7a":"code","f8d8f8be":"code","10adde6b":"code","1c0fdc79":"code","53e0dd5b":"code","2bc683af":"code","8da8c625":"code","8f90c0cd":"code","67f51b8a":"code","bc28a9c1":"code","c05e5025":"code","239ac3dc":"code","08419990":"markdown","87dcb647":"markdown","f06e155f":"markdown","cad9aac4":"markdown","33286df8":"markdown","de53596b":"markdown","1642cf9e":"markdown","81d57516":"markdown","1e709db1":"markdown","3c91437e":"markdown","c3099f38":"markdown","18764540":"markdown","2a897b88":"markdown","1e347f96":"markdown","b3ae59f7":"markdown","bf97f3e1":"markdown","7d90e780":"markdown","a0eab79c":"markdown","5037c3e9":"markdown","6e8ffcfc":"markdown","465010c2":"markdown","a2103be2":"markdown"},"source":{"9301e57e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2625af51":"import pandas as pd\nimport numpy as np\nimport datetime as dt\nimport matplotlib.pyplot as plt\nimport seaborn as sns","f5810cc9":"train_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2022\/train.csv\")\ntrain_df.shape","49ddaa34":"train_df.head(20) # each row corresponds to combination of {date,country,store,product} and {the numbers of that product sold}","e04999ee":"train_df.tail(2)","2f12de46":"train_df = train_df.drop(\"row_id\", axis=1)","11ba2de6":"test_df = pd.read_csv(\"\/kaggle\/input\/tabular-playground-series-jan-2022\/test.csv\")\ntest_df.shape","b8298cf1":"test_df.head()","26ac855d":"test_df=test_df.drop(\"row_id\",axis=1)","15f17286":"train_df.dtypes","c3f4d4fe":"train_df.columns","acd9c6a1":"train_df.info()","09694149":"train_df.describe()","a84f8e13":"train_df.describe(include=np.object)","a2150a63":"train_df.store.unique()","6066b4bb":"train_df.store.value_counts()","51f065db":"train_df.country.unique()","d9ae8110":"train_df.country.value_counts()","dde2b796":"train_df['product'].unique()","8bb75ab1":"train_df['product'].value_counts()","56d3e857":"sum(train_df.num_sold==0)","84d5feca":"sum(train_df.num_sold <= 0)","2c80bf57":"train_df.loc[:,'date'] = pd.to_datetime(train_df.date)\ntrain_df.dtypes","c1797472":"train_df['Year'] = train_df.date.dt.year","a73258ba":"train_df['Month'] = train_df.date.dt.month","27c57df7":"train_df.head()","907ac270":" train_df_Sweden = train_df[train_df.country == \"Sweden\"]\n train_df_Finland = train_df[train_df.country == \"Finland\"]\n train_df_Norway = train_df[train_df.country == \"Norway\"]","693f2113":"train_df_Sweden","f5cfb7b7":"sns.set(rc={'figure.figsize': (15, 5)}, style='white')\nax = sns.lineplot(data=train_df_Sweden, x='Year', y='num_sold', hue='store')\nax.set_title(\"Products sold in Sweden\")\nplt.show()","9131a771":"sns.set(rc={'figure.figsize': (20, 10)},style='white', font_scale=2)\ng = sns.FacetGrid(train_df_Finland, col='product', height=10)\ng = g.map(plt.plot, 'date', 'num_sold')\ng.set_titles(size=25)\ng.set_xticklabels(rotation=45)\nplt.show()","49a5d125":"sns.set(rc={'figure.figsize': (15, 5)}, style='white')\nax = sns.lineplot(data=train_df_Finland, x='Year', y='num_sold', hue='store')\nax.set_title(\"Products sold in Sweden\")\nplt.show()","44ab4da8":"sns.set(rc={'figure.figsize': (18, 5)}, style='white')\nax = sns.lineplot(data=train_df_Sweden, x='Year', y='num_sold', hue='product')\nax.set_title(\"Products sold in Sweden\")\nplt.show()","f7839491":"train_df_Norway2018 = train_df_Norway[train_df_Norway['Year']==2018]\ntrain_df_Norway2017 = train_df_Norway[train_df_Norway['Year']==2017]","17fe25ae":"sns.set(rc={'figure.figsize': (15, 5)}, style='white')\nax = sns.lineplot(data=train_df_Norway2018, x='Month', y='num_sold',style='store',hue='store')\nax.set_title(\"Products sold in Norway for the year 2018\")\nplt.show()","d16479ff":"sns.set(rc={'figure.figsize': (15, 5)}, style='white')\nax = sns.lineplot(data=train_df_Norway2017, x='Month', y='num_sold',style='store',hue='store')\nax.set_title(\"Products sold in Norway for the year 2017\")\nplt.show()","04f0e252":"train_df[(train_df.store == 'KaggleRama') & (train_df.country==\"Sweden\")].nlargest(n=10, columns='num_sold') # highest sale in december ","40802db6":"train_df[(train_df.store == 'KaggleMart') & (train_df.country==\"Sweden\")].nlargest(n=10, columns='num_sold') # december doing good in sale across all the years","d6ef00ee":"train_df[(train_df.store == 'KaggleRama') & (train_df.country==\"Finland\")].nlargest(n=10, columns='num_sold')","a6786969":"train_df[(train_df.store == 'KaggleMart') & (train_df.country==\"Finland\")].nlargest(n=10, columns='num_sold')","c89ef988":"train_df[(train_df.store == 'KaggleRama') & (train_df.country==\"Norway\")].nlargest(n=10, columns='num_sold')","e9c68518":"train_df[(train_df.store == 'KaggleMart') & (train_df.country==\"Norway\")].nlargest(n=10, columns='num_sold')","524a41d9":" train_df[train_df.duplicated()].shape[0]","d4b3ac4f":"new_df = train_df.pivot_table(\nindex='date',\ncolumns='country',\nvalues='num_sold'\n).rolling(7).mean()","dd180fd5":"new_df ## average sale for window of 7 days we can see Norway doing better among the three countries","eab9a13d":"fig, axes = plt.subplots(1, 3, figsize=(15, 5))\nnew_df[['Finland']].plot(ax=axes[0], style='-.c')\nnew_df[['Sweden']].plot(ax=axes[1], style=['-', '--'], title='7-day rolling average of new ')\nnew_df[['Norway']].plot(ax=axes[2], style=['--', ':', '-'])","07ade11b":"new_df = train_df.pivot_table(\nindex='date',\ncolumns='product',\nvalues='num_sold'\n).rolling(7).mean()","90aad243":"new_df ## average sale for window of 7 days we can see product Kaggle Hat doing better among the three products","54d03a53":"fig, axes = plt.subplots(1, 3, figsize=(15, 5))\nnew_df[['Kaggle Hat']].plot(ax=axes[0], style='-.c')\nnew_df[['Kaggle Mug']].plot(ax=axes[1], style=['-', '--'], title='7-day rolling average of new ')\nnew_df[['Kaggle Sticker']].plot(ax=axes[2], style=['--', ':', '-'])","bb787241":"new_df = train_df.pivot_table(\nindex='date',\ncolumns='store',\nvalues='num_sold'\n).rolling(7).mean()","d3479e67":"new_df #### KaggleRama doing better in the sales","0964df70":"fig, axes = plt.subplots(1, 2, figsize=(15, 5))\nnew_df[['KaggleMart']].plot(ax=axes[0], style='-.c')\nnew_df[['KaggleRama']].plot(ax=axes[1], style=['-', '--'], title='7-day rolling average of new ')","88c388f3":"train_df.num_sold.plot(kind='hist')","cee6e465":"train_df[['num_sold',\"country\"]].groupby('country').boxplot(figsize=(15,8), subplots=False)","f6d5e8e7":"train_df[['num_sold',\"store\"]].groupby('store').boxplot(figsize=(15,8), subplots=False)","de37bfca":"train_df[['num_sold',\"product\"]].groupby('product').boxplot(figsize=(15,8), subplots=False)","dbd2c957":"sns.stripplot(\nx='product', \ny='num_sold', \nhue='store',\ndata=train_df\n)","fd680807":"sns.stripplot(\nx='country', \ny='num_sold', \nhue='store',\ndata=train_df\n)","3ac87f7a":"sns.stripplot(\nx='country', \ny='num_sold', \nhue='product',\ndata=train_df\n)","f8d8f8be":"train_df.groupby('country').agg({'num_sold': ['mean', 'min', 'max']})","10adde6b":"train_df.groupby('Year').agg({'num_sold': ['mean', 'min', 'max']})","1c0fdc79":"train_df.groupby('store').agg({'num_sold': ['mean', 'min', 'max']})","53e0dd5b":"train_df.groupby('product').agg({'num_sold': ['mean', 'min', 'max']})","2bc683af":"train_df.groupby(['Year','country']).agg({'num_sold': ['mean', 'min', 'max']})","8da8c625":"train_df.groupby(['Year','country','store']).agg({'num_sold': ['mean', 'min', 'max']})","8f90c0cd":"train_df.groupby(['Year','country','store','product']).agg({'num_sold': ['mean', 'min', 'max']}).head(36)","67f51b8a":"train_df.groupby(['Year','country','store','product']).agg({'num_sold': ['mean', 'min', 'max']}).tail(36)","bc28a9c1":"sns.swarmplot(\nx='product', \ny='num_sold', \nhue='store',\ndata=train_df_Norway2018\n)","c05e5025":"sns.swarmplot(\nx='product', \ny='num_sold', \nhue='store',\ndata=train_df_Norway2017\n)","239ac3dc":"sns.swarmplot(\nx='product', \ny='num_sold', \nhue='store',\ndata=train_df_Sweden\n)","08419990":"#### The above three plots, we can say that KaggleRama store and the number of Kaggle Hat sold is high","87dcb647":"#### The line plot below shows an upward trend for both the store from the year 2015 to year 2018. The products sold higher for KaggleRama then KaggleMart","f06e155f":"#### For Norway same except one in April 2018.","cad9aac4":"#### 2018 --> Norway --> KaggleRama\n#### 2017 --> Norway --> KaggleRama","33286df8":"#### 2017 --> Norway --> KaggleRama --> Kaggle Hat.","de53596b":"#### Across the year Norway has done good","1642cf9e":"#### The sale increased from 2015 --> 2018. average sale same for the year 2015 and 2016 but then increased to 2017 and 2018","81d57516":"#### Kaggle Hat highest in sale","1e709db1":"#### Rolling 7 day mean","3c91437e":"#### 3 country, 2 store and 3 products in the training data","c3099f38":"#### Same for Finland","18764540":"#### Kaggle Hat product is doing good.","2a897b88":"#### 3 products Kaggle Mug', 'Kaggle Hat', 'Kaggle Sticker'\n#### country Sweden, Finland and Norway\n#### Store KaggleMart and KaggleRama","1e347f96":"#### 2018 --> Norway --> KaggleRama --> Kaggle Hat.","b3ae59f7":"#### KaggleRama --> KaggleMart","bf97f3e1":"#### For Finland below the Kaggle Hat sold more. We can see there is Trend, Seasonality and Noise in the data below.","7d90e780":"#### KaggleRama doing well","a0eab79c":"#### Max items sold is 2884. Average products sold is 388","5037c3e9":"# Data","6e8ffcfc":"#### Norway --> Sweden --> Finland in sale","465010c2":"# Libraries","a2103be2":"#### From the above plots we can see Norway doing good in terms of products sale. KaggleRama store is doing good. The product Kaggle Hat is doing good."}}