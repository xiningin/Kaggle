{"cell_type":{"a2642d2e":"code","b64011b6":"code","67bbb925":"code","ee8d33ca":"code","3e012ae4":"code","b74796e5":"code","7f90b7f4":"code","118d87e9":"code","c6c50e94":"code","7aabd8c5":"code","1deb4cab":"code","c197d02a":"code","46ee7c22":"code","0f0819b9":"code","81bc61cf":"code","86ff0b7d":"code","34e71b41":"code","8a23eae3":"code","d7a6701b":"code","3ed419ad":"code","b0cebb5b":"markdown","89a58809":"markdown","4f8a856d":"markdown","42920125":"markdown","31643743":"markdown","2f90f85a":"markdown","79e75776":"markdown","5c9eb8f1":"markdown","5280cfa2":"markdown"},"source":{"a2642d2e":"import pandas as pd\nimport numpy as np","b64011b6":"# Get data from Kaggle\n\ndrug_csv = pd.read_csv('..\/input\/drug-classification\/drug200.csv')\ndrug_csv.head()","67bbb925":"#Load python librarys\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","ee8d33ca":"drug_csv.info()","3e012ae4":"#Create summary counts for plots\n\ncnt_sex = drug_csv.groupby(['Drug', 'Sex'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_bp = drug_csv.groupby(['Drug', 'BP'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_cholesterol = drug_csv.groupby(['Drug','Cholesterol'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_drug = drug_csv[['Drug','Na_to_K']].groupby('Drug').count().sort_values('Na_to_K')\n\n#Set plot field\nfig, ax = plt.subplots(1,4)\n\ncnt_sex.plot(x='Drug', kind='bar', stacked=True, ax=ax[0])\nax[0].set_title('Sex')\nax[0].set_ylabel('')\n\ncnt_bp.plot(x='Drug', kind='bar', stacked=True, ax=ax[1])\nax[1].set_title('BP')\nax[1].set_ylabel('')\n\ncnt_cholesterol.plot(x='Drug', kind='bar', stacked=True, ax=ax[2])\nax[2].set_title('Cholesterol')\nax[2].set_ylabel('')\n\ncnt_drug.plot(kind='barh', ax=ax[3] ,legend=None)\nax[3].set_title('Drug')\nax[3].set_ylabel('')\n\n\n\n\n# set the spacing between subplots\nplt.subplots_adjust(left=0.01,\n                    bottom=0.05, \n                    right=2.5, \n                    top=0.9, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","b74796e5":"#Set plot field\nfig, ax = plt.subplots(1,2)\n\n#Create boxplots, no outliers\ndrug_csv.boxplot('Age', by = 'Drug', showfliers = False, showmeans = True, ax=ax[0])  \ndrug_csv.boxplot('Na_to_K', by = 'Drug', showfliers = False, showmeans = True, ax=ax[1])  \n\nplt.xticks(rotation=90)\nplt.grid(linestyle='dotted')\nplt.suptitle('')\n\nax[0].set_title('Age')\nax[0].set_xlabel('')\nax[1].set_title('Na to K')\nax[1].set_xlabel('')\n\n# set the spacing between subplots\nplt.subplots_adjust(left=0.01,\n                    bottom=0.05, \n                    right=2.5, \n                    top=0.9, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","7f90b7f4":"from sklearn.preprocessing import StandardScaler, OneHotEncoder","118d87e9":"#Recode categorical variables\n\ndrug_csv_copy = drug_csv.copy()\n\ncategorical_cols = drug_csv_copy.select_dtypes(include=object).columns\ncategorical_cols = categorical_cols.drop(['Drug']).tolist()\n\n# One-hot encode categorical columns\nencoder = OneHotEncoder(sparse=False, handle_unknown='ignore').fit(drug_csv_copy[categorical_cols].fillna('Unknown'))\nencoded_cols = list(encoder.get_feature_names(categorical_cols))\ndrug_csv_copy[encoded_cols] = pd.DataFrame(encoder.transform(drug_csv_copy[categorical_cols].fillna('Unknown')))","c6c50e94":"#Define numeric columns\nnumeric_cols = drug_csv_copy.select_dtypes(include=np.number).columns\nscaler = StandardScaler().fit(drug_csv_copy[numeric_cols])\ndrug_csv_copy[numeric_cols] = scaler.transform(drug_csv_copy[numeric_cols])\n","7aabd8c5":"dataset = drug_csv_copy[numeric_cols].fillna(0)\ndataset.head()","1deb4cab":"from sklearn.cluster import KMeans","c197d02a":"#Check correlation\n\ncorr = dataset.corr()\nax = sns.heatmap(\n    corr, \n    vmin=-1, vmax=1, center=0,\n    cmap=sns.diverging_palette(20, 220, n=200),\n    square=True\n)\nax.set_xticklabels(\n    ax.get_xticklabels(),\n    rotation=45,\n    horizontalalignment='right'\n);","46ee7c22":"#Get optimal number of clusters\n\noptions = range(2,11)\ninertias = []\n\nfor n_clusters in options:\n    model = KMeans(n_clusters, random_state=42).fit(dataset)\n    inertias.append(model.inertia_)\n    \nplt.title(\"No. of clusters vs. Inertia\")\nplt.plot(options, inertias, '-o')\nplt.xlabel('No. of clusters (K)')\nplt.ylabel('Inertia');","0f0819b9":"model = KMeans(n_clusters=5, random_state=42)\nmodel.fit(dataset)\nmodel.cluster_centers_","81bc61cf":"#Get predicted values\n\npreds = model.predict(dataset)\npreds","86ff0b7d":"sns.scatterplot(data=dataset, x='Age', y='Na_to_K', hue=preds);\ncenters_x, centers_y = model.cluster_centers_[:,0], model.cluster_centers_[:,5]\nplt.plot(centers_x, centers_y, 'xb')","34e71b41":"model.inertia_","8a23eae3":"#Merge cluster predictions to original dataset\n\ndrug_pred = drug_csv.copy()\ndrug_pred['preds'] = pd.DataFrame(preds)\ndrug_pred.head()","d7a6701b":"#Check characteristics of each cluster\n\ncnt_drug = drug_pred.groupby(['preds','Drug'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_sex = drug_pred.groupby(['preds', 'Sex'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_bp = drug_pred.groupby(['preds', 'BP'])['Na_to_K'].count().unstack().reset_index().fillna(0)\ncnt_cholesterol = drug_pred.groupby(['preds','Cholesterol'])['Na_to_K'].count().unstack().reset_index().fillna(0)\n\n#Set plot field\nfig, ax = plt.subplots(1,4)\n\ncnt_drug.plot(x='preds', kind='bar', stacked=True, ax=ax[0])\nax[0].set_title('Drug')\nax[0].set_ylabel('')\n\ncnt_sex.plot(x='preds', kind='bar', stacked=True, ax=ax[1])\nax[1].set_title('Sex')\nax[1].set_ylabel('')\n\ncnt_bp.plot(x='preds', kind='bar', stacked=True, ax=ax[2])\nax[2].set_title('BP')\nax[2].set_ylabel('')\n\ncnt_cholesterol.plot(x='preds', kind='bar', stacked=True, ax=ax[3])\nax[3].set_title('Cholesterol')\nax[3].set_ylabel('')\n\n\n# set the spacing between subplots\nplt.subplots_adjust(left=0.01,\n                    bottom=0.05, \n                    right=2.5, \n                    top=0.9, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","3ed419ad":"#Set plot field\nfig, ax = plt.subplots(1,2)\n\n#Create boxplots, no outliers\ndrug_pred.boxplot('Age', by = 'preds', showfliers = False, showmeans = True, ax=ax[0])  \ndrug_pred.boxplot('Na_to_K', by = 'preds', showfliers = False, showmeans = True, ax=ax[1])  \n\nplt.xticks(rotation=90)\nplt.grid(linestyle='dotted')\nplt.suptitle('')\n\nax[0].set_title('Age')\nax[0].set_xlabel('')\nax[1].set_title('Na to K')\nax[1].set_xlabel('')\n\n# set the spacing between subplots\nplt.subplots_adjust(left=0.01,\n                    bottom=0.05, \n                    right=2.5, \n                    top=0.9, \n                    wspace=0.4, \n                    hspace=0.4)\nplt.show()","b0cebb5b":"It seems like our cluster groups doesn't differentiate by Age & Na to K","89a58809":"## 5. Conclusion","4f8a856d":"It seems like the clusters formed are not differentiated by their drug assignment although there are definitely patterns among them.\n\nFor instance, Drug C are generally given to Cluster 1 & 2 who are (1) low BP, older ,males; (2) females w high cholesterol. Drug B & A are mostly in Cluster 4 who are older males w\/ Normal BP. Drug Y is highest in Clusters 2 & 0 who are (0) young females w normal cholesterol w\/ high Na to K. Drug X is given to clusters 0 to 3 but is highest in Cluster 3 who are males w  normal BP & Low Na to K","42920125":"# 1. Explore Data","31643743":"## 4. Post Cluster Analysis","2f90f85a":"## 2. Prepare Data","79e75776":"# Course Project - Real-World Machine Learning Model","5c9eb8f1":"## 0. Import Data","5280cfa2":"## 3. Cluster Analysis"}}