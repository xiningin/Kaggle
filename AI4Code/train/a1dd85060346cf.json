{"cell_type":{"31935432":"code","9acdce7e":"code","abbb5802":"code","0b6df479":"code","d55fd740":"code","baa345bc":"code","ae125cc5":"code","f6c71d14":"code","30554dab":"code","bccff875":"code","749cbe37":"code","e3b11867":"code","a4d324c6":"code","f3a935f6":"code","e57f171a":"code","3e8919ab":"code","69271a46":"code","652cdafa":"code","b5066b93":"code","debcf38a":"code","df451ff0":"code","06a61492":"code","506b8e82":"code","37eac1d6":"markdown","73932f53":"markdown","a590116e":"markdown","cb3e8c9e":"markdown"},"source":{"31935432":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9acdce7e":"import numpy as np \nimport pandas as pd\nimport seaborn as sns \nimport matplotlib.pyplot as plt","abbb5802":"train_data = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/train.csv\")\ntest_data = pd.read_csv(\"..\/input\/tabular-playground-series-aug-2021\/test.csv\")","0b6df479":"train_data.head()","d55fd740":"test_data.head()","baa345bc":"train_data.describe()","ae125cc5":"test_data.describe()","f6c71d14":"train_data = train_data.drop('id', axis=1)","30554dab":"test_data = test_data.drop('id', axis=1)","bccff875":"train_data[\"loss\"].value_counts()","749cbe37":"#check for missing values\ntrain_data.isnull().sum().any()","e3b11867":"#Check for duplicate rows\ntrain_data.duplicated().sum()","a4d324c6":"x_train = train_data.drop('loss', axis=1)\ny_train = train_data['loss']\nx_test = test_data\ny_test = pd.read_csv('..\/input\/tabular-playground-series-aug-2021\/sample_submission.csv')","f3a935f6":"id_loc = np.array(y_test['id'])","e57f171a":"y_test = y_test.drop('id', axis=1)","3e8919ab":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)","69271a46":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA\nlda = LDA(n_components = 10)\nx_train = lda.fit_transform(x_train, y_train)\nx_test = lda.transform(x_test)","652cdafa":"from xgboost import XGBRegressor\nregressor = XGBRegressor()\nregressor.fit(x_train, y_train)","b5066b93":"y_pred = regressor.predict(x_test)","debcf38a":"len(y_pred)\ntype(y_pred)","df451ff0":"output = pd.DataFrame({'id':id_loc, 'loss':y_pred})","06a61492":"output.head()","506b8e82":"output.to_csv('my_submission2.csv', index=False)\nprint(\"Your submission was successfully saved!\")","37eac1d6":"Feature Scaling","73932f53":"Dimentionality reduction","a590116e":"***MACHINE LEARNING MODEL*** ","cb3e8c9e":"XGBoost Model"}}