{"cell_type":{"e66265ab":"code","cfe5a7fb":"code","37cb47ea":"code","ac5bb42b":"code","3dd9fcff":"code","d594bcc9":"code","473fdb4f":"code","dc72623a":"code","f39141b1":"code","1c22be0e":"code","9a4ca4dc":"code","43b82efa":"code","9c1ddd68":"code","ba17a2e2":"code","837ae8bc":"code","77407fb7":"code","945a9383":"code","48a81058":"code","3eaafac9":"code","ec95668b":"code","a408bd1a":"code","a1a75972":"code","6015e664":"code","ac513264":"code","4ff9a93d":"code","3b8af815":"code","5974463e":"code","b9f45184":"code","5511c4ee":"code","311aa35f":"code","2e5f36ec":"markdown","0c79ab4d":"markdown","bc8e38c5":"markdown","0fa7df92":"markdown"},"source":{"e66265ab":"##Import Libraries","cfe5a7fb":"import pandas as pd\nimport numpy as np\nimport sklearn as sc\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport missingno as mnso\n\nfrom sklearn.preprocessing import LabelEncoder","37cb47ea":"pd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 100)\npd.set_option('display.width', None)\npd.set_option('display.max_colwidth', None)\nnp.set_printoptions(threshold=np.inf)","ac5bb42b":"df_train = pd.read_csv(\"\/kaggle\/input\/train.csv\")","3dd9fcff":"df_test = pd.read_csv(\"\/kaggle\/input\/test.csv\")","d594bcc9":"df_train.head()","473fdb4f":"#Check all unique column data types\ndf_train.dtypes.unique()","dc72623a":"## 'O' in above list signifies the Object i.e categorical column and 'int64','float64' are numeric columns\n## Lets get the list of the numeric and categorical columns\n\nl_num_col = df_train.select_dtypes(exclude='O').columns\nl_cat_col = df_train.select_dtypes(include='O').columns\nprint(\"Numeric Columns : \", l_num_col)\nprint(\"Non Numeric Columns : \", l_cat_col)","f39141b1":"# Numeric columns stats \ndf_train.select_dtypes(exclude='O').describe()\n\n","1c22be0e":"## Observations from Describe : \n# 1. Outliers present in some columns like LotArea, BsmtFinSF1 etc. - Outliers doesnot mean that its a junk value, it can be junk but it can be useful as well.\n# So before dropping off or modify these outliers. It need more analysis\n# 2. Featrue scaling is required - Some larger value columns  can override the effect of small value column.\n# 3. There are missing values - From count we can easily observe that.\n","9a4ca4dc":"#####Understanding Sale Pattern\nsns.distplot(df_train['SalePrice'])\n##Skewness and kurtosis\nprint(\"Skewness: %f\" % df_train['SalePrice'].skew())\nprint(\"Kurtosis: %f\" % df_train['SalePrice'].kurt())","43b82efa":"###Observation : \n# 1. Positive Skewness = Means trail on the right side\n# 2. High Kurtosis = Peak on the top\n","9c1ddd68":"#sns.histplot(df_train[l_num_col])\ndf_train[l_num_col].hist(figsize=(25,25))\nplt.suptitle(\"Numeric feature distribution\")\nplt.show()","ba17a2e2":"\n# Compare with dependent varaible i.e sale price\n\n#Check correlation\ncorrelation = df_train.corr()\ncorrelation['SalePrice']","837ae8bc":"plt.figure(figsize=(25,12))\nsns.heatmap(correlation, annot = True)\nplt.plot","77407fb7":"### Check the correlation of sales with independent variable\n# 1. OveGrallQual, TotalBsmtSF, 1stFlrSF  are highly correlated with sale price.\n# 2. GarageCars and Garage area seems to interlinked with each other that is the case of multicollinearity i.e. check 88% correlation between both\n\n\n####Analyse collinearity of these variables with sale prize ","945a9383":"columns = ['SalePrice','OverallQual','TotalBsmtSF','GrLivArea','GarageArea','FullBath','YearBuilt','YearRemodAdd']\nsns.pairplot(df_train[columns],height = 2 ,kind ='scatter',diag_kind='kde')\nplt.show()","48a81058":"## Observation\n# We can see the correlation of these shortlisted independent varaibles with sale price.","3eaafac9":"## Let check for outliers \n\nfig, axes = plt.subplots(len(columns), figsize=(12,len(columns)*5))\ncount = 0\n\nfor i in columns:\n    df_train.boxplot(column=i, ax=axes[count]) \n    count=count+1\n\nplt.show()","ec95668b":"## Observation\n# There are some outliers which doesnot lie between Q1-1.5*IQR and Q3+1.5*IQR","a408bd1a":"#Missing number matrix\n# mnso is the good tool to get the missing numbers\n# In below graph, white line shows missing values\nmnso.matrix(df_train[l_num_col])","a1a75972":"# Check on shortlisted columns\nmnso.matrix(df_train[columns])","6015e664":"#Missing number bar graph\nmnso.bar(df_train[l_num_col])","ac513264":"#Missing number bar graph on shortlisted values\nmnso.bar(df_train[columns])","4ff9a93d":"#Skewness Graph for numeric variables\nsns.distplot(df_train[l_num_col].skew(),color = 'blue', axlabel= 'Skewness')","3b8af815":"# Graph for numeric variables\nplt.figure(figsize = (12,8))\nsns.distplot(df_train[l_num_col].kurt(),color = 'orange', axlabel= 'Kurtosis')","5974463e":"l_cat_col","b9f45184":"##Check number of unique values in each feature\ndf_train[l_cat_col].nunique()","5511c4ee":"## Categorical Variable analysis\n\nfig, axes = plt.subplots(len(l_cat_col), figsize=(8,len(l_cat_col)*5))\ncount = 0\n\nfor i in l_cat_col:\n    sns.countplot(df_train[i], ax=axes[count])\n    count=count+1\n\nplt.show()","311aa35f":"sns.barplot(x= \"MSZoning\",y=\"SalePrice\", data = df_train)\n\n## Categorical Variable analysis\n\nfig, axes = plt.subplots(len(l_cat_col), figsize=(8,len(l_cat_col)*5))\ncount = 0\n\nfor i in l_cat_col:\n    sns.barplot(x= i,y=\"SalePrice\", data = df_train, ax = axes[count])\n    count=count+1\n\nplt.show()","2e5f36ec":"# Bivariate analysis","0c79ab4d":"Exploratory Data Analysis","bc8e38c5":"**Hope this will help in understanding the data set through visualization.\n\nThis is really helpful when we have small set of features**","0fa7df92":"Univaraite analysis"}}