{"cell_type":{"88eef39b":"code","67f0f7c3":"code","baed32b2":"code","c7d1b86b":"code","5381777e":"code","f8eee44b":"code","7a014425":"code","a3d9a637":"code","caba05a6":"code","bef34cc5":"code","be248782":"code","bf48a034":"code","ed6028a6":"code","f5f19a3c":"code","a25e93f7":"code","d358d5ce":"code","d71fe135":"code","57e94fcf":"code","a61b4a88":"code","3850e154":"code","84791843":"code","ce703b77":"code","7148cf08":"code","e18028b9":"code","4acf0238":"code","54e2dfe8":"code","3620bed0":"code","9765a201":"code","76fdf0e0":"code","c1175f80":"code","f53a07eb":"code","892241ea":"code","536706e4":"code","cfddb434":"code","8cfd63ca":"code","7ef58d87":"code","1d84e710":"code","89e5637b":"code","fa4f6393":"code","74630c16":"code","d4d73754":"code","6026b7c7":"code","4b32f9fb":"markdown","7df145d2":"markdown","6fa26ba8":"markdown","61a51902":"markdown","79a890ac":"markdown","2567b564":"markdown","2cf6c45e":"markdown","f7f42cfb":"markdown","3fcfd481":"markdown","106934ae":"markdown","4ff870c2":"markdown","40feaca2":"markdown","5c5c2140":"markdown","76933f90":"markdown","85be9651":"markdown","fd20f123":"markdown","49a7b0c4":"markdown","d652de8a":"markdown","7fa0ddab":"markdown","8b53957c":"markdown","e83e4c81":"markdown","9a67ab4b":"markdown","85365969":"markdown","0e51f17a":"markdown","55cffa00":"markdown","56482561":"markdown"},"source":{"88eef39b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","67f0f7c3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import FunctionTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.metrics import plot_roc_curve\nfrom sklearn.inspection import permutation_importance\n\nfrom imblearn.pipeline import Pipeline\nfrom imblearn.over_sampling import SMOTE","baed32b2":"train_df = pd.read_csv('\/kaggle\/input\/hr-analytics-job-change-of-data-scientists\/aug_train.csv')","c7d1b86b":"train_df.head()","5381777e":"train_df.info()","f8eee44b":"train_df.describe(include='all')","7a014425":"train_df.isnull().mean()*100","a3d9a637":"train_df.drop('enrollee_id', axis=1, inplace=True)","caba05a6":"sns.pairplot(train_df)\nplt.show()","bef34cc5":"def bar_plot(data, col, title=None, display_pct=False, hue=None):\n    ax = sns.countplot(data=data, x=col, order=data[col].value_counts().index, hue=hue)\n    if title is None:\n        plt.title('Distribution of ' + col)\n    else:\n        plt.title(title)\n    plt.xlabel(col)\n    if display_pct == True:\n        labels = (data[col].value_counts())\n        for i, v in enumerate(labels):\n            ax.text(i, v + 10, str(v), horizontalalignment='center', size=14)\n    plt.show()","be248782":"plt.figure(figsize=(10, 3))\nsns.boxplot(data=train_df, x='city_development_index', y='target', orient='h')\nplt.title('Relation of city development index with target feature')\nplt.show()","bf48a034":"bar_plot(train_df, 'gender', hue='target')","ed6028a6":"bar_plot(train_df, 'relevent_experience', hue='target')","f5f19a3c":"no_relevant_exp = train_df[train_df['relevent_experience'] == 'No relevent experience']\nbar_plot(no_relevant_exp, 'experience', 'No relevent experience')","a25e93f7":"relevant_exp = train_df[train_df['relevent_experience'] != 'No relevent experience']\nbar_plot(relevant_exp, 'experience', 'Relevent experience')","d358d5ce":"looking_for_job = train_df[train_df['target'] == 1]\nnot_looking = train_df[train_df['target'] == 0]","d71fe135":"def pieplot(data, col, title):\n    plt.figure(figsize=(6, 6))\n    piedata = data[col].value_counts()\n    plt.pie(x=piedata, autopct=\"%.1f%%\", labels=piedata.index)\n    plt.title(title)\n    plt.show()\n    ","57e94fcf":"pieplot(looking_for_job, 'enrolled_university', 'Looking for jobs')","a61b4a88":"pieplot(not_looking, 'enrolled_university', 'Not looking for jobs')","3850e154":"pieplot(looking_for_job, 'education_level', 'Looking for jobs')","84791843":"pieplot(not_looking, 'education_level', 'Not looking for jobs')","ce703b77":"size_by_type = train_df.groupby(['company_size'])['company_type'].value_counts(normalize=True).unstack()\nsize_by_type = size_by_type.sort_values(by='Pvt Ltd', ascending=False)\nsize_by_type.plot(kind='bar', stacked=True)\nplt.legend(loc=(1.04, 0))\nplt.xticks(rotation=45, horizontalalignment='right', fontweight='light')\nplt.title('Distribution of company size by company type')\nplt.show()","7148cf08":"bar_plot(train_df, 'company_size', hue='target')","e18028b9":"bar_plot(train_df, 'last_new_job', hue='target')","4acf0238":"train_df.dropna(subset=['enrolled_university', 'education_level', 'experience', 'last_new_job'], inplace=True)","54e2dfe8":"train_df.isnull().mean()*100","3620bed0":"X = train_df.drop('target', axis=1)\ny = train_df['target']","9765a201":"mode_imputer = SimpleImputer(strategy=\"most_frequent\")\nmode_imputer.fit(X)\nX_imp = mode_imputer.transform(X)\nX_pd = pd.DataFrame(X_imp, columns=X.columns, index=X.index)","76fdf0e0":"rel_exp_idx, edu_idx, comp_size_idx = [list(X_pd.columns).index(col) for col in ['relevent_experience', 'education_level', 'company_size']]","c1175f80":"def label_encode(X):\n    X.iloc[:, rel_exp_idx] = X.iloc[:, rel_exp_idx].map({'No relevent experience': 0,\n                          'Has relevent experience': 1}).astype(int)\n    X.iloc[:, edu_idx] = X.iloc[:, edu_idx].map({'Primary School': 0,\n                                                        'High School': 1,\n                                                        'Graduate': 2,\n                                                        'Masters': 3,\n                                                        'Phd': 4}).astype(int)\n    X.iloc[:, comp_size_idx] = X.iloc[:, comp_size_idx].map({'<10': 0,\n                                                             '10\/49': 1,\n                                                             '50-99': 2,\n                                                             '100-500': 3,\n                                                             '500-999': 4,\n                                                             '1000-4999': 5,\n                                                             '5000-9999': 6,\n                                                             '10000+': 7}).astype(int)\n    X.loc[(X['experience'] == '>20'), 'experience'] = 21\n    X.loc[(X['experience'] == '<1'), 'experience'] = 0\n    X.loc[(X['last_new_job'] == 'never'), 'last_new_job'] = 0\n    X.loc[(X['last_new_job'] == '>4'), 'last_new_job'] = 5\n    return X\n\nmy_encoder = FunctionTransformer(label_encode)\nencoded = my_encoder.fit_transform(X_pd)","f53a07eb":"X_pd['experience'] = X_pd['experience'].astype(int)\nX_pd['last_new_job'] = X_pd['last_new_job'].astype(int)\nX_pd['city_development_index'] = X_pd['city_development_index'].astype(float)\nX_pd['training_hours'] = X_pd['training_hours'].astype(int)","892241ea":"X_pd.drop(['city'], axis=1, inplace=True)","536706e4":"X_pd.info()","cfddb434":"num_attribs = ['city_development_index', 'training_hours']\ncat_attribs = ['gender', 'enrolled_university', 'major_discipline', 'company_type']","8cfd63ca":"preprocessing = ColumnTransformer([\n    (\"num\", StandardScaler(), num_attribs),\n    (\"cat\", OneHotEncoder(drop='first', sparse=False), cat_attribs)\n], remainder=\"passthrough\")\n\nhr_processed = preprocessing.fit_transform(X_pd)\nhr_processed.shape","7ef58d87":"col_names = []\nfor transformer_tuple in preprocessing.transformers_[:-1]:\n    cols = transformer_tuple[2]\n    transformer = transformer_tuple[1]\n    try:\n        cols = transformer.get_feature_names(cols)\n    except AttributeError:\n        cols = cols\n        \n    col_names += list(cols)\n    \ncol_names += list(X_pd.columns[preprocessing.transformers_[2][2]])","1d84e710":"X_train, X_test, y_train, y_test = train_test_split(hr_processed, y, test_size=0.2, shuffle=True, stratify=y)","89e5637b":"def evaluate_model(model, X, y):\n    \n    clf = Pipeline([\n        ('passthrough', SMOTE()),\n        ('model', model)\n    ])\n    \n    clf.fit(X, y)\n    \n    auc = cross_val_score(clf, X, y, cv=5, scoring='roc_auc')\n    print(\"AUC score of \" + model.__class__.__name__ + \" = \" + str(auc.mean()))\n    \n    return clf\n    ","fa4f6393":"clf_Log_reg = evaluate_model(LogisticRegression(max_iter=1000), X_train, y_train)\nclf_SGD = evaluate_model(SGDClassifier(early_stopping=True, warm_start=True), X_train, y_train)\nclf_KNN = evaluate_model(KNeighborsClassifier(), X_train, y_train)\nclf_RF = evaluate_model(RandomForestClassifier(), X_train, y_train)\nCLF_ADA = evaluate_model(AdaBoostClassifier(n_estimators=200), X_train, y_train)\nCLF_XGB = evaluate_model(XGBClassifier(), X_train, y_train)","74630c16":"ax = plt.gca()\nplot_roc_curve(clf_Log_reg, X_test, y_test, ax=ax, alpha=0.8, name=\"Logistic Regression\")\nplot_roc_curve(clf_SGD, X_test, y_test, ax=ax, alpha=0.8, name=\"SGD Classifier\")\nplot_roc_curve(clf_KNN, X_test, y_test, ax=ax, alpha=0.8, name=\"KNN Classifier\")\nplot_roc_curve(clf_RF, X_test, y_test, ax=ax, alpha=0.8, name=\"Random Forest Classifier\")\nplot_roc_curve(CLF_ADA, X_test, y_test, ax=ax, alpha=0.8, name=\"AdaBoost Classifier\")\nplot_roc_curve(CLF_XGB, X_test, y_test, ax=ax, alpha=0.8, name=\"XGBoost Classifier\")\nplt.show()","d4d73754":"importances = permutation_importance(CLF_XGB, X_test, y_test, n_repeats = 30)","6026b7c7":"importances_df = pd.DataFrame(importances.importances_mean)\nimportances_df['Features'] = col_names\nimportances_df = importances_df.rename(columns={0 : 'Average Importance'})\n\nfig = px.bar(importances_df, x='Features', y='Average Importance')\nfig.show()","4b32f9fb":"### Questions for data\n\n1. Does city development mean that employees will have more options and thus more chance to look for other jobs.\n2. We have features as relevant experience and experience. Are these features related to each other?\n3. Does a particular education level have more employees willing to look for other jobs.\n4. Companay size and its relation with whether an employee is looking for other jobs.","7df145d2":"Retreiving column names after transformation","6fa26ba8":"City has many unique values and city development index has the information for city. So we can drop city feature.","61a51902":"## Conclusion and model inference","79a890ac":"Label encoding relevant_experience, education_level, company_size, experience and last_new_job features","2567b564":"Does an experience of more than some years count as relevant or are the unrelated and relevant experience depicts some other information.","2cf6c45e":"Looking at some other columns","f7f42cfb":"## Training models","3fcfd481":"False alarm! Looks like they both are unrelated as there are employees with more than 20 years of experience in distribution of both employees with relevant experience and no relevant experience","106934ae":"Looks like they are not much related. Although we can see a few relations like startups do not have size more than 5000 employees","4ff870c2":"## Quick look at the data","40feaca2":"Looks like enrollee_id column is just a unique id for each employee and hence has no contribution in predicting the target feature. Lets drop it.","5c5c2140":"Well the observations are quite contrary to what we assumed. It turns out majority of people looking for job are in cities with low city development index. Now if you think about it, it makes more sense as people in lesser developed cities will like to look for jobs and move to more developed cities.","76933f90":" Looking for null values","85be9651":"Since enrolled_university, education_level, experience and last_new_job features have less than 3% missing values, we can drop these rows and still not lose much data.","fd20f123":"Looks like data is missing at random. So let's use the mode to replace missing values","49a7b0c4":"Creating pipeline for transformation","d652de8a":"### To conclude\n\n* As we visualized city developement plays the most important role is determining whether an employee is looking for jobs.\n* Looks like our model is not accurate and hence I will think twice before using it in actual hr department. Yes we can do hyperparameter tuning and increase the accuracy of model but at best this model can be used to validate the findings of hr department than to replace them.\n* Also looking at the model inference tells us that we can still do some feature selection to improve performance of our model.\n* On a lighter note, feels good to see that gender has least role in determining whether employee can look for other jobs. Seems like everyone has equal opportunities these days.","7fa0ddab":"Proportion of employees looking for jobs is more for full time course.\n\nWe can also see that the proportion of employees not looking for jobs is more for no enrolment in an university.\n\nProportion of employees having part time course doesn't change much.","8b53957c":"## EDA","e83e4c81":"Is company size and company type related. Can a Pvt. Ltd. company be as small as <10 employees","9a67ab4b":"Does having a full time course in an university mean the employee has more chances of looking for other jobs.\n","85365969":"Looks like XGBoost Classifier is performing on good on both our training set and test set.","0e51f17a":"Let's check out the relation of city development index with the target feature","55cffa00":"## Please do upvote if you like this notebook, it encourages me to share more notebooks and suggestions are always welcomed.","56482561":"## Cleaning Data"}}