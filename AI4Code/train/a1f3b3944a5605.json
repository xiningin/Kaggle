{"cell_type":{"b0d39aa6":"code","849685a3":"code","78d907c5":"code","67dffda9":"code","f6752416":"code","63e26ea3":"code","74acc79e":"code","bfe290c1":"code","5c23a05a":"code","6b43f37a":"code","1fea9375":"code","c16e0772":"code","33a2770c":"code","0053bf19":"code","dd11371f":"code","a8456dd2":"code","4bc08bab":"code","7160e85b":"code","55c19600":"code","26f8a414":"code","c80a9312":"code","9248087e":"code","fc4ec79b":"code","21a58f74":"code","bc42b185":"code","ece1de19":"code","f4870e05":"code","9f1ac640":"code","5f6e4840":"code","7b630276":"code","5a23e79e":"code","6bf58c58":"code","e2f2c303":"code","356e35c5":"code","8889c70a":"code","2b62d323":"code","557d95fa":"code","d202a254":"code","256bfd59":"code","a516e7e1":"code","0b6509fc":"code","af50f7fa":"code","82bead04":"code","401b1d70":"code","664aeecf":"code","d6e55e83":"markdown","ab7b0dcd":"markdown","1c1d42c1":"markdown","8b8cf276":"markdown","fbb98c1c":"markdown","edfc4074":"markdown","2ba57997":"markdown","8901441c":"markdown","91ae8305":"markdown"},"source":{"b0d39aa6":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","849685a3":"dfTitanicTrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndfTitanicTest = pd.read_csv(\"..\/input\/titanic\/test.csv\")","78d907c5":"dfTitanicTrain.head()","67dffda9":"dfTitanicTrain.shape","f6752416":"dfTitanicTrain.info()","63e26ea3":"dfTitanicTrain.isnull().sum()","74acc79e":"dfTitanicTrain = dfTitanicTrain.drop(columns = ['Cabin'], axis = 1) # Drop cabin column (too many missing values)","bfe290c1":"dfTitanicTrain['Age'].fillna(dfTitanicTrain['Age'].mean(), inplace = True) # Replacing missing values with mean age","5c23a05a":"embarkedMode = dfTitanicTrain['Embarked'].mode()[0]\ndfTitanicTrain['Embarked'].fillna(embarkedMode, inplace = True) # Replacing missing values with the mode of embarked column","6b43f37a":"dfTitanicTrain.head()","1fea9375":"dfTitanicTrain.isnull().sum()","c16e0772":"dfTitanicTrain.shape","33a2770c":"dfTitanicTrain.describe()","0053bf19":"dfTitanicTrain['Survived'].value_counts()","dd11371f":"sns.set(style = 'darkgrid')","a8456dd2":"sns.countplot('Survived', data = dfTitanicTrain)","4bc08bab":"sns.countplot('Sex', data = dfTitanicTrain)","7160e85b":"labels = dfTitanicTrain['Sex'].value_counts().index.tolist()\nvalues = dfTitanicTrain['Sex'].value_counts().tolist()\nplt.figure(figsize = (5,5))\nplt.pie(values, labels = labels, autopct = '%1.1f%%', shadow = True, explode = [0.1,0.1])","55c19600":"# number of people who survived genderwise\nsns.countplot('Sex', hue = 'Survived', data = dfTitanicTrain)","26f8a414":"survivedSex = dfTitanicTrain[dfTitanicTrain.Survived == 1]['Sex']\nnot_survivedSex = dfTitanicTrain[dfTitanicTrain.Survived == 0]['Sex']\n\nfig, (ax1,ax2) = plt.subplots(1,2,figsize = (10,4))\n\nlabels = survivedSex.value_counts().index.tolist()\nvalues = survivedSex.value_counts().tolist()\nax1.pie(values, labels = labels, autopct = '%1.1f%%', shadow = True, explode = [0.1,0.1])\nax1.set_title('Survived')\n\nlabels = not_survivedSex.value_counts().index.tolist()\nvalues = not_survivedSex.value_counts().tolist()\nax2.pie(values, labels = labels, autopct = '%1.1f%%', shadow = True, explode = [0.1, 0.1])\nax2.set_title('Died')","c80a9312":"print(dfTitanicTrain['Pclass'].value_counts())\nsns.countplot('Pclass', hue = 'Survived', data = dfTitanicTrain)","9248087e":"labels = dfTitanicTrain['Pclass'].value_counts().index.tolist()\nvalues = dfTitanicTrain['Pclass'].value_counts().tolist()\nplt.figure(figsize = (5,5))\nplt.pie(values, labels = labels, autopct = '%1.1f%%')","fc4ec79b":"dfTitanicTrain.groupby('Pclass').sum()[['Survived']]","21a58f74":"bins = [0, 20, 40, 60, 80]\nlabels = ['0 - 20', '20 - 40', '40 - 60', '60 - 80']\ndfTitanicTrain['AgeGroup'] = pd.cut(dfTitanicTrain['Age'], bins, labels = labels, include_lowest = True)\nsns.countplot('AgeGroup', hue = 'Survived', data = dfTitanicTrain)","bc42b185":"dfTitanicTrain.head()","ece1de19":"X = dfTitanicTrain.drop(columns = ['Name', 'Ticket', 'Fare','AgeGroup','PassengerId','Survived'],axis = 1)\nX = pd.get_dummies(X,drop_first = True)\ny = dfTitanicTrain['Survived']","f4870e05":"from sklearn.ensemble import RandomForestClassifier\nrfc = RandomForestClassifier()","9f1ac640":"n_estimators = [int(x) for x in np.linspace(100,1200,12)]\n\nmax_features = ['auto', 'sqrt']\n\nmax_depth = [int(x) for x in np.linspace(5,30,6)]\n\nmin_samples_split = [2,5,10,15,100]\n\nmin_samples_leaf = [1,2,5,10]","5f6e4840":"randomGrid = {'n_estimators' : n_estimators, 'max_features' : max_features, 'max_depth' : max_depth,\n              'min_samples_split' : min_samples_split, 'min_samples_leaf' : min_samples_leaf}","7b630276":"from sklearn.model_selection import RandomizedSearchCV\nrfc_randomized = RandomizedSearchCV(estimator = rfc, param_distributions = randomGrid, scoring = 'accuracy'\n                              , n_iter = 10, cv = 5, verbose = 2, n_jobs = 1)","5a23e79e":"rfc_randomized.fit(X, y)","6bf58c58":"dfTitanicTest.isnull().sum()","e2f2c303":"dfTitanicTest['Age'].fillna(dfTitanicTest['Age'].mode()[0], inplace = True)","356e35c5":"dfTitanicTest[dfTitanicTest['Fare'].isna()]","8889c70a":"meanFare3 = dfTitanicTest.groupby('Pclass').mean().loc[3,'Fare']","2b62d323":"dfTitanicTest['Fare'].fillna(meanFare3, inplace = True)","557d95fa":"dfTitanicTest.drop('Cabin', axis = 1, inplace = True)","d202a254":"dfTitanicTest.isnull().sum()","256bfd59":"Xtest = dfTitanicTest.drop(columns = ['Name', 'Ticket', 'Fare','PassengerId'],axis = 1)\nXtest = pd.get_dummies(Xtest,drop_first = True)","a516e7e1":"Xtest.shape, X.shape","0b6509fc":"Yhat = rfc_randomized.predict(Xtest)","af50f7fa":"Yhat = pd.DataFrame(Yhat)\nYhat.shape","82bead04":"dfTitanicTest['PassengerId'].shape","401b1d70":"Yhat['PassengerId'] = dfTitanicTest['PassengerId']\nYhat.set_index('PassengerId')\nYhat['Survived'] = Yhat[0]\nYhat = Yhat.drop(0, axis = 1).set_index('PassengerId')","664aeecf":"Yhat.value_counts()","d6e55e83":"### **Some More Data Cleaning**","ab7b0dcd":"since the missing value is the fare of a class 3 ticket, we replace it with the mean of class 3 ticket fares","1c1d42c1":"# **Handling Missing Values**","8b8cf276":"### Predicting values for Test Dataset","fbb98c1c":"# **EDA And Data Visualization**","edfc4074":"This plot shows the number of people who survived in contrast with those who died","2ba57997":"Number of females who survived is more than males because when things like the titanic crash happens, women and children are given priority for safety.","8901441c":"## Random Forest Classifier And Hyperparameter Tuning using Randomized Search CV","91ae8305":"## Cleaning and predicting Test Dataset"}}