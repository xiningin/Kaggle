{"cell_type":{"ddff3a7e":"code","25b27286":"code","a170fc77":"code","e254e829":"code","0a986d47":"code","9b2a8f31":"code","4f419c4c":"code","b65e8591":"code","9b3f4565":"code","cdbb1eb7":"code","b650dc9b":"code","3c67af7c":"code","3bf4682e":"code","4fe161c4":"code","c6fea36a":"code","8593b054":"code","c0c731a8":"code","4d53d4d3":"code","ede96e65":"code","2ee17c64":"code","15487e41":"code","6344646b":"code","1050849e":"code","9a081f8f":"code","397177f5":"code","98ddcf1a":"code","3fad4c75":"code","67b10f9d":"markdown","4152adf9":"markdown","8154d604":"markdown","48f834b2":"markdown","58ced61e":"markdown","1e76d2d7":"markdown","9b7b6dcb":"markdown","2a519e41":"markdown","0593e80d":"markdown","600a0e93":"markdown","05ecea44":"markdown","a2117dde":"markdown","4b5fd66c":"markdown"},"source":{"ddff3a7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import norm, skew #for some statistics\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","25b27286":"pip install openpyxl","a170fc77":"\nimport pandas_datareader.data as web\n# web.DataReader ile Dolar-TRY kur de\u011ferlerini \u00e7ekiyoruz\ncurr=web.DataReader(['USDTRY=X'],'yahoo')['Adj Close'].rename(columns={'USDTRY=X':'USD'}).reset_index() \ndum=pd.date_range(\"2016-10-23\",'2021-10-21', freq=\"d\")\ndum=pd.DataFrame(dum,columns=['Date'])\n\ncurr=dum.merge(curr,on='Date',how='left').ffill().dropna()\ncurr=curr.set_index(curr.Date)\ncurr.drop('Date',axis=1,inplace=True)\ndolar=curr.reset_index().rename(columns={'Date':'tarih'})\n\ntrain=pd.read_csv('\/kaggle\/input\/dogus-teknoloji-zingat\/zingat_usecase_trainset.csv').rename(columns={'br\u00fctm\u00b2':'br\u00fctm', 'netm\u00b2':'netm'})\ntest=pd.read_csv('\/kaggle\/input\/dogus-teknoloji-zingat\/zingat_usecase_testset_null.csv').rename(columns={'br\u00fctm\u00b2':'br\u00fctm','netm\u00b2':'netm'})\n\ntrain=train[test.columns]\ndata=pd.concat([train,test],axis=0)\ndata.replace('-',np.nan,inplace=True)\ndata.replace('_',np.nan,inplace=True)\ndata.reset_index(drop=True,inplace=True)\ndata.odasay\u0131s\u0131=data.odasay\u0131s\u0131.astype('O')\ndata.g\u00fcncel_fiyat=data.g\u00fcncel_fiyat.map(lambda x :  int(x.split()[0]) if pd.notna(x)  else x)\ndata.tarih=pd.to_datetime(data.tarih)\n\n# path\n#baz\u0131 path de\u011ferlerinde ilce ve semt de\u011ferleri yok bunlara nan atarak 3 tana il-ilce-sem de\u011fi\u015fkni olu\u015fturuyorum\ndata['il']=data.path.map(lambda x : x.split('\/')[0] )\ndata['ilce']=data.path.map(lambda x : x.split('\/')[1]  if len(x.split('\/'))>1 else np.nan)\ndata['semt']=data.path.map(lambda x : x.split('\/')[2]  if len(x.split('\/'))>2 else np.nan)\ndata.drop(['path'],axis=1,inplace=True)\n\n# data=pd.concat([data[data.g\u00fcncel_fiyat.notnull()].drop_duplicates(subset=data.columns.difference(['tarih','Ilan_ID']),keep='first'),data[data.g\u00fcncel_fiyat.isnull()]])  \n# data.drop(data[(data.binaya\u015f\u0131.isna() ) & (data.bulundu\u011fukat.isna()) & (data.binadakikatsay\u0131s\u0131.isna())&(data.is\u0131tmatipi.isna()) & (data.g\u00fcncel_fiyat.notnull())].index,inplace=True)\n# data.drop(data[(data.g\u00fcncel_fiyat.notnull()) & (data.ilce.isnull())].index,inplace=True)\ndata=data.merge(dolar,how='left',on='tarih').set_index(data.index) #dolar kuru ile datam\u0131z\u0131 merge ediyoruz.\ndata.drop(['otopark','manzara'],axis=1,inplace=True)","e254e829":"data.netm=data.apply(lambda x :  x.br\u00fctm if x.netm>x.br\u00fctm  else x.netm,axis=1) #netm e\u011fer br\u00fctm den b\u00fcy\u00fckse br\u00fctm yi netm ye e\u015fitliyorum\ndata.loc[data.odasay\u0131s\u0131=='1149+0','odasay\u0131s\u0131']=np.nan # odasay\u0131s\u0131 de\u011fi\u015fkninde bulunan '1149+0' de\u011ferine nan at\u0131yorum\ndata.odasay\u0131s\u0131=data.odasay\u0131s\u0131.map(lambda x:  sum(  int(i) for i in x.split('+')) if pd.notna(x) else x) #odasay\u0131s\u0131 de\u011fi\u015fkenimizi object de\u011ferden int de\u011fere \u00e7eviriyoruz \u00f6rne\u011fin '2+1'=3 gibi\n \ndata.netm=data.apply(lambda x:   x.br\u00fctm  if (x.netm*3<x.br\u00fctm) & (x.netm<25) else x.netm ,axis=1) #br\u00fctm de\u011feri netm de\u011ferinden 3 kat fazla ve netm de\u011feri 25 den k\u00fc\u00e7\u00fck olan netm de\u011ferlerini br\u00fctm de\u011ferine e\u015fitliyorum\ndata.loc[data.br\u00fctm>data.netm*4,'br\u00fctm']=data.netm*2 #br\u00fctm de\u011f\u011feri netm de\u011feriin 4 kat\u0131ndan b\u00fcy\u00fck br\u00fctm de\u011ferlerini netm*2 ye e\u015fitliyorum\n\ndata.loc[(data.netm\/data.odasay\u0131s\u0131)>80,'netm']=data.loc[(data.netm\/data.odasay\u0131s\u0131)>80].odasay\u0131s\u0131*35\ndata.loc[(data.br\u00fctm\/data.odasay\u0131s\u0131)>150,'br\u00fctm']=data.loc[(data.br\u00fctm\/data.odasay\u0131s\u0131)>150].netm*2\ndata.loc[data.netm<12,'netm']=data.loc[data.netm<12].odasay\u0131s\u0131*35\ndata.loc[data.br\u00fctm<12,'br\u00fctm']=data.loc[data.br\u00fctm<12].netm*2\n\ndata.drop(data[data.g\u00fcncel_fiyat.notnull()&data.odasay\u0131s\u0131.isnull()].index,axis=0,inplace=True)\ndata.odasay\u0131s\u0131=data.odasay\u0131s\u0131.map(lambda x: 10 if x>10 else x)   #odasay\u0131s\u0131 10  dan fazla olan de\u011ferleri 10 a e\u015fitiliyorum\ndata.loc[data.odasay\u0131s\u0131.isnull(),'odasay\u0131s\u0131']=data[data.odasay\u0131s\u0131.isnull()].netm\/\/35\ndata.loc[data.odasay\u0131s\u0131>10,'netm']=10*35\ndata.odasay\u0131s\u0131=data.odasay\u0131s\u0131.map(lambda x: 10 if x>10 else x)\ndata.odasay\u0131s\u0131=data.odasay\u0131s\u0131.map(lambda x: 1 if x==0 else x)\ndata.loc[(data.emlaktipi!='Daire')&(data.emlaktipi!='Prefabrik Ev'),'br\u00fctm']=data.loc[(data.emlaktipi!='Daire')&(data.emlaktipi!='Prefabrik Ev'),'netm']*2\n\nplt.figure(figsize=(20,5))\nplt.subplot(1,2,1)\nsns.boxplot(x=data.netm)\nplt.subplot(1,2,2)\nsns.boxplot(x=data.br\u00fctm)\nset({'figure.figsize':(10,8)});","0a986d47":"dum=data[(data.g\u00fcncel_fiyat.notnull()) &(data.g\u00fcncel_fiyat>80000)].groupby(['il','ilce','emlaktipi']).agg({'br\u00fctm':'sum','g\u00fcncel_fiyat':'sum'})\ndum['br\u00fctm_fiyat']=dum.g\u00fcncel_fiyat\/dum.br\u00fctm\ndata.g\u00fcncel_fiyat=data.apply(lambda x :  dum.loc[x.il,x.ilce,x.emlaktipi].br\u00fctm_fiyat*x.br\u00fctm if (x.g\u00fcncel_fiyat<100000) & (x.emlaktipi !='Prefabrik Ev')&((x.il,x.ilce,x.emlaktipi) in dum.index)  else x.g\u00fcncel_fiyat, axis=1)\ndata.drop(data[ (data.g\u00fcncel_fiyat<100000) & (data.emlaktipi !='Prefabrik Ev')].index,axis=0,inplace=True)\n\n\n#baz\u0131 il\u00e7elerde ortalamdan \u00e7ok y\u00fcksekte olan  emlak de\u011ferlerini d\u00fc\u015f\u00fcrd\u00fcm\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Ba\u011fc\u0131lar')].index,axis=0,inplace=True)   \ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Beylikd\u00fcz\u00fc')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Pendik')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Bal\u00e7ova')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Bornova')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Torbal\u0131')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Seferihisar')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='Kar\u015f\u0131yaka')].index,axis=0,inplace=True)\ndata.drop(data[(data.g\u00fcncel_fiyat>10000000) & (data.ilce=='G\u00fczelbah\u00e7e')].index,axis=0,inplace=True)\n\ndata.drop(data.where( (data.g\u00fcncel_fiyat>250000000.0)).dropna(how='all').index,inplace=True)\nsns.set(rc = {'figure.figsize':(10,5)})\nsns.boxplot(x='g\u00fcncel_fiyat',y='emlaktipi',data=data); ","9b2a8f31":"#emlaktipine g\u00f6re netm ve g\u00fcncelfiyat kar\u015f\u0131la\u015ft\u0131malar\u0131\nplt.figure(figsize=(15,5))\nsns.scatterplot(x='netm',y='g\u00fcncel_fiyat',hue='emlaktipi',data=data)","4f419c4c":"#emlaktipine g\u00f6re netm ve g\u00fcncelfiyat kar\u015f\u0131la\u015ft\u0131malar\u0131\nsns.lmplot(x='g\u00fcncel_fiyat',y='netm',hue='emlaktipi',data=data, height=7, aspect=2);","b65e8591":"# Daire\ndata.loc[(data.emlaktipi=='Daire')&((data.binaya\u015f\u0131.isnull())|(data.binaya\u015f\u0131=='0')),'binaya\u015f\u0131']='0'\ndata.loc[(data.emlaktipi=='Daire')&(data.bulundu\u011fukat.isnull()),'bulundu\u011fukat']='2'\ndata.loc[(data.emlaktipi=='Daire')&((data.binadakikatsay\u0131s\u0131.isnull())),'binadakikatsay\u0131s\u0131']=3\ndata.loc[(data.emlaktipi=='Daire')&((data.is\u0131tmatipi.isnull())|(data.is\u0131tmatipi=='Yok')),'is\u0131tmatipi']='Kombi (Do\u011falgaz)'\ndata.loc[(data.emlaktipi=='Daire')&((data.banyosayisi.isnull())|(data.banyosayisi=='0')),'banyosayisi']='1'\n\nplt.figure(figsize=(30,15))\nplt.title('Daire');\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Daire'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Daire'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Daire'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Daire'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Daire'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Daire'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Daire'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Daire'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Daire'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Daire'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Daire'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Daire'].\u0130nterkom);","9b3f4565":"# prefabirk ev\ndata.drop(data[data.Ilan_ID==27392].index,axis=0,inplace=True)\ndata.loc[data.emlaktipi=='Prefabrik Ev','bulundu\u011fukat']='Prefabrik'\ndata.loc[data.emlaktipi=='Prefabrik Ev','binaya\u015f\u0131']='Prefabrik'\ndata.loc[(data.emlaktipi=='Prefabrik Ev') & (data.binadakikatsay\u0131s\u0131.isnull()),'binadakikatsay\u0131s\u0131']='1'\ndata.loc[(data.emlaktipi=='Prefabrik Ev') & (data.is\u0131tmatipi.isnull()),'is\u0131tmatipi']='Soba (Do\u011falgaz)'\ndata.loc[(data.emlaktipi=='Prefabrik Ev') & (data.banyosayisi.isnull()),'banyosayisi']='1'\ndata.loc[(data.emlaktipi=='Prefabrik Ev'),'binadakikatsay\u0131s\u0131']='1'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Prefabrik Ev'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Prefabrik Ev'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Prefabrik Ev'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Prefabrik Ev'].\u0130nterkom)","cdbb1eb7":"# 'Prefabrik Ev' hari\u00e7 de\u011feri 100000 TL alt\u0131nda olan ilanlar drop edildi \n# daha sonra emlaktipi 'M\u00fcstakil Ev' olan ilanlar daire olarak de\u011fi\u015ftirildi\ndata.drop(data[ (data.g\u00fcncel_fiyat<100000) & (data.emlaktipi !='Prefabrik Ev')].index,axis=0,inplace=True)\ndata.loc[(data.emlaktipi=='M\u00fcstakil Ev'),'emlaktipi']='Daire'\n#binadakikatsay\u0131s\u0131 normalde kategorikten  n\u00fcmerik de\u011fere cevirdim.\ndata.binadakikatsay\u0131s\u0131=data.binadakikatsay\u0131s\u0131.map(lambda x :   x if pd.isna(x) else (  15 if (x =='10-20 aras\u0131') else ( 21 if (x =='20 ve \u00fczeri') else float(x))))\ndata.binadakikatsay\u0131s\u0131=data.binadakikatsay\u0131s\u0131.astype('float')\n","b650dc9b":"data.loc[(data.emlaktipi=='Villa'),'bulundu\u011fukat']='M\u00fcstakil'\ndata.loc[(data.emlaktipi=='Villa')&(data.binadakikatsay\u0131s\u0131>5),'binadakikatsay\u0131s\u0131']=5\ndata.loc[(data.emlaktipi=='Villa')&(data.binadakikatsay\u0131s\u0131.isnull()),'binadakikatsay\u0131s\u0131']=3\ndata.loc[(data.emlaktipi=='Villa')&(data.is\u0131tmatipi.isnull()),'is\u0131tmatipi']='Klima'\ndata.loc[(data.emlaktipi=='Villa')&((data.banyosayisi.isnull()) |(data.banyosayisi=='0')),'banyosayisi']='3'\ndata.loc[(data.emlaktipi=='Villa')&(data.binaya\u015f\u0131.isnull()),'binaya\u015f\u0131']='0'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Villa'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Villa'].netm)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Villa'].g\u00fcncel_fiyat)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Villa'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Villa'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Villa'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Villa'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Villa'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Villa'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Villa'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Villa'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Villa'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Villa'].\u0130nterkom)\n\n","3c67af7c":"data.loc[((data.emlaktipi=='Rezidans')&(data.binadakikatsay\u0131s\u0131<6)),'emlaktipi']='Daire'\ndata.loc[(data.emlaktipi=='Rezidans')&(data.is\u0131tmatipi.isnull()),'is\u0131tmatipi']='Merkezi Sistem (Is\u0131 Pay\u0131 \u00d6l\u00e7er)'\ndata.loc[(data.emlaktipi=='Rezidans')&(data.binadakikatsay\u0131s\u0131.isnull()),'binadakikatsay\u0131s\u0131']='21.0'\ndata.loc[(data.emlaktipi=='Rezidans')&(data.binaya\u015f\u0131.isnull()),'binaya\u015f\u0131']='0'\ndata.loc[(data.emlaktipi=='Rezidans')&(data.bulundu\u011fukat.isnull()),'bulundu\u011fukat']='20 ve \u00fczeri'\ndata.loc[(data.emlaktipi=='Rezidans')&((data.banyosayisi.isnull()) |(data.banyosayisi=='0')),'banyosayisi']='2'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Rezidans'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Rezidans'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Rezidans'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Rezidans'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Rezidans'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Rezidans'].\u0130nterkom)","3bf4682e":"data.binadakikatsay\u0131s\u0131=data.binadakikatsay\u0131s\u0131.astype('float')\ndata.loc[(data.emlaktipi=='Yazl\u0131k')&(data.binaya\u015f\u0131.isnull()),'binaya\u015f\u0131']='0'\ndata.loc[(data.emlaktipi=='Yazl\u0131k')&(data.bulundu\u011fukat.isnull()),'bulundu\u011fukat']='M\u00fcstakil'\ndata.loc[(data.emlaktipi=='Yazl\u0131k')&((data.binadakikatsay\u0131s\u0131.isnull())|(data.binadakikatsay\u0131s\u0131>5)),'binadakikatsay\u0131s\u0131']=5\ndata.loc[(data.emlaktipi=='Yazl\u0131k')&((data.is\u0131tmatipi.isnull())|(data.is\u0131tmatipi=='Yok')),'is\u0131tmatipi']='Klima'\ndata.loc[(data.emlaktipi=='Yazl\u0131k')&(data.banyosayisi.isnull()),'banyosayisi']='2'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Yazl\u0131k'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Yazl\u0131k'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Yazl\u0131k'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Yazl\u0131k'].\u0130nterkom)\n","4fe161c4":"data.loc[(data.emlaktipi=='\u00c7iftlik Evi')&(data.binaya\u015f\u0131.isnull()),'binaya\u015f\u0131']='0'\ndata.loc[(data.emlaktipi=='\u00c7iftlik Evi')&(data.bulundu\u011fukat .isnull()),'bulundu\u011fukat']='\u00c7iftlik Evi'\ndata.loc[(data.emlaktipi=='\u00c7iftlik Evi')&((data.binadakikatsay\u0131s\u0131.isnull())|(data.binadakikatsay\u0131s\u0131>3)),'binadakikatsay\u0131s\u0131']=1\ndata.loc[(data.emlaktipi=='\u00c7iftlik Evi')&((data.is\u0131tmatipi.isnull())|(data.is\u0131tmatipi=='Yok')),'is\u0131tmatipi']='Soba (K\u00f6m\u00fcr)'\ndata.loc[(data.emlaktipi=='\u00c7iftlik Evi')&(data.banyosayisi.isnull()),'banyosayisi']='1'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='\u00c7iftlik Evi'].\u0130nterkom)","c6fea36a":"data.loc[(data.emlaktipi=='Yal\u0131 Dairesi')&(data.binaya\u015f\u0131.isnull()),'binaya\u015f\u0131']='0'\ndata.loc[(data.emlaktipi=='Yal\u0131 Dairesi')&(data.bulundu\u011fukat.isnull()),'bulundu\u011fukat']='2'\ndata.loc[(data.emlaktipi=='Yal\u0131 Dairesi')&((data.binadakikatsay\u0131s\u0131.isnull())|(data.binadakikatsay\u0131s\u0131<3)),'binadakikatsay\u0131s\u0131']=3\ndata.loc[(data.emlaktipi=='Yal\u0131 Dairesi')&((data.is\u0131tmatipi.isnull())|(data.is\u0131tmatipi=='Yok')),'is\u0131tmatipi']='Kombi (Do\u011falgaz)'\ndata.loc[(data.emlaktipi=='Yal\u0131 Dairesi')&(data.banyosayisi.isnull()),'banyosayisi']='1'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='Yal\u0131 Dairesi'].\u0130nterkom)","8593b054":"data.loc[(data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131')&((data.binaya\u015f\u0131.isnull())|(data.binaya\u015f\u0131=='0')),'binaya\u015f\u0131']='36-40 aras\u0131'\ndata.loc[(data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131')&(data.bulundu\u011fukat.isnull()),'bulundu\u011fukat']='K\u00f6\u015fk \/ Konak \/ Yal\u0131'\ndata.loc[(data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131')&((data.binadakikatsay\u0131s\u0131.isnull())),'binadakikatsay\u0131s\u0131']=3\ndata.loc[(data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131')&((data.is\u0131tmatipi.isnull())|(data.is\u0131tmatipi=='Yok')),'is\u0131tmatipi']='Kombi (Do\u011falgaz)'\ndata.loc[(data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131')&((data.banyosayisi.isnull())|(data.banyosayisi=='0')),'banyosayisi']='2'\n\nplt.figure(figsize=(30,15))\nplt.subplot(4,4,1)\nsns.histplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].netm,bins=60)\nplt.subplot(4,4,2)\nsns.boxplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].netm)\nplt.subplot(4,4,3)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].odasay\u0131s\u0131)\nplt.subplot(4,4,4)\nsns.boxplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].g\u00fcncel_fiyat)\nplt.subplot(4,4,5)\ng=sns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].binaya\u015f\u0131)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,6)\ng=sns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].is\u0131tmatipi)\ng.set_xticklabels(g.get_xticklabels(),rotation=90);\nplt.subplot(4,4,7)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].asans\u00f6r)\nplt.subplot(4,4,8)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].\u00c7ocukoyunalan\u0131)\nplt.subplot(4,4,9)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].giyinmeodas\u0131)\nplt.subplot(4,4,10)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].ebeveynbanyosu)\nplt.subplot(4,4,11)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].depremy\u00f6netmeli\u011fineuygun)\nplt.subplot(4,4,12)\nsns.countplot(x=data[data.emlaktipi=='K\u00f6\u015fk \/ Konak \/ Yal\u0131'].\u0130nterkom)","c0c731a8":"# NAN olan ilce ve semt de\u011ferlerine atamalar yap\u0131ld\u0131 burda en s\u0131k olan ilce ve semtler dikkate al\u0131nd\u0131\ndata.loc[data.ilce.isnull(),'ilce']='Kar\u015f\u0131yaka'\ndata.loc[data.semt.isnull(),'semt']='Bostanl\u0131'\ndata.loc[data.ilce.isin(['Beyda\u011f','K\u0131n\u0131k','Kiraz']),'ilce']='Kar\u015f\u0131yaka'\ndata.loc[data.ilce.isin(['Beyda\u011f','K\u0131n\u0131k','Kiraz']),'semt']='Bostanl\u0131'","4d53d4d3":"# il_ilce_semt olarak yeni bir 'konum' de\u011fi\u015fkeni olu\u015fturuldu\ndata['konum']=data.apply(lambda x:  x.il+'_'+x.ilce+'_'+x.semt,axis=1 )\n","ede96e65":"# elimizde bulunan g\u00fcncel_fiyat de\u011ferlerini  'il','ilce','semt','emlaktipi' g\u00f6re gruplay\u0131p  dolar kuru cinsinden o g\u00fcnk\u00fc m2 fiyat\u0131 hesapland\u0131 daha sonra hesaplanan bu m2 de\u011ferlei br\u00fctm m2 ile \u00e7arp\u0131larak b\u00fct\u00fcn ilanlar i\u00e7in yeni bir 'usd_fiyat' de\u011fi\u015fkeni olu\u015fturuldu  bu de\u011fi\u015fkenimiz fiyat ile korelasyonu y\u00fcksek bir de\u011fi\u015fken oldu\ndata['fiyat_usd']=data.g\u00fcncel_fiyat\/data.USD\ndum=data[(data.g\u00fcncel_fiyat.notnull())].groupby(['il','ilce','semt','emlaktipi']).agg({'br\u00fctm':'sum','fiyat_usd':'sum'})\ndum['br\u00fctm_fiyat_usd']=dum.fiyat_usd\/dum.br\u00fctm\ndata['usd_fiyat']=data.apply(lambda x: dum.loc[x.il,x.ilce,x.semt,x.emlaktipi].br\u00fctm_fiyat_usd*x.br\u00fctm *x.USD  if ((x.il,x.ilce,x.semt,x.emlaktipi) in dum.index) else np.nan,axis=1)\ndata['usd_fiyat']=data['usd_fiyat'].fillna(data.usd_fiyat.mode()[0])\ndata.drop('fiyat_usd',axis=1,inplace=True)\n#tarih de\u011fi\u015fkeninde g\u00fcnleri 1 yapt\u0131m asl\u0131nda burda y\u0131l ve ay'a g\u00f6re gruplama yapm\u0131\u015f gibi oldum 2019-01 2019-02 2020-01 gibi her ay\u0131 ayr\u0131 temsil etmi\u015f olduk\ndata['y\u0131l_ay']=data.tarih.map(lambda x : x.replace(day=1))\ndata['y\u0131l_ay']=data['y\u0131l_ay'].astype('O') ","2ee17c64":"# g\u00fcncel_fiyat de\u011fi\u015fkenine g\u00f6re konumlar\u0131m\u0131z\u0131 grupluyorum fiyat olarak birbirine yak\u0131n olan konumlar ayn\u0131 gruplara al\u0131n\u0131yor.\nfrom sklearn.cluster import KMeans\ndff=data[data.g\u00fcncel_fiyat.notnull()].groupby('konum')['g\u00fcncel_fiyat'].mean().reset_index()\ndff.set_index(dff.konum,inplace=True)\ndff.drop('konum',axis=1,inplace=True)\nKmean = KMeans(n_clusters=40)\nKmean.fit(dff)\ndff['semt_label']=Kmean.labels_\ndff=dff.reset_index()\ndff=dff[['konum','semt_label']]\ndff=dff.drop_duplicates()\n\n#Bu noktadan sonra data dataframe de\u011fi\u015fmesin diye yeni bir data2 frame i olu\u015fturup devam ediyorum.\ndata2=data.merge(dff,how='left',on='konum')\ndata2.semt_label=data2.semt_label.map(lambda x :  'bilinmiyor' if pd.isna(x) else x)\n\n# -------------------------------------------------------------------------------------------------------------------------------------------------------------\n# geli\u015fmi\u015flik skorlar\u0131na g\u00f6re yine konumlar\u0131 grupluyorum\ngeli\u015fmi\u015flik=pd.read_excel('\/kaggle\/input\/gelimilik2\/gelimilik_dzey.xlsx')#d\u0131\u015f veri\n#birtak\u0131m \u00f6ni\u015fleme i\u015flemleri \ngeli\u015fmi\u015flik.ilce=geli\u015fmi\u015flik.ilce.str.strip()\ngeli\u015fmi\u015flik.skor=geli\u015fmi\u015flik.skor.str.strip()\ngeli\u015fmi\u015flik.kademe=geli\u015fmi\u015flik.kademe.str.strip()\ngeli\u015fmi\u015flik=geli\u015fmi\u015flik.set_index(geli\u015fmi\u015flik.ilce)\ngeli\u015fmi\u015flik.drop(['ilce','kademe'],axis=1,inplace=True)\nKmean = KMeans(n_clusters=40)\nKmean.fit(geli\u015fmi\u015flik)\ngeli\u015fmi\u015flik['skor_label']=Kmean.labels_\ngeli\u015fmi\u015flik['skor_label']=geli\u015fmi\u015flik.skor_label.astype('O')\ngeli\u015fmi\u015flik=geli\u015fmi\u015flik.reset_index()\n\ndata2=data2.merge(geli\u015fmi\u015flik[['ilce','skor','skor_label']],how='left',on='ilce').set_index(data.index)\ndata_sub=data2[data2.g\u00fcncel_fiyat.isnull()]\ndata2.drop(['tarih',\n            'Ilan_ID',\n            'il',\n#             'ilce',\n            'semt',\n#             'usd_fiyat',\n#             'br\u00fctm',\n#             'netm',\n            'konum',\n#               'bulundu\u011fukat',\n#              'binadakikatsay\u0131s\u0131',\n             'USD',\n             'skor',\n#              'odasay\u0131s\u0131',\n#             'skor_label',\n#             'semt_label',\n#             'y\u0131l_ay'\n            ],axis=1,inplace=True)\n","15487e41":"#dummies dataframe olu\u015fturuldu\ndata_dummies=pd.get_dummies(data2,prefix=None, prefix_sep='_', drop_first=False)\ntarget=data2[data2.g\u00fcncel_fiyat.notnull()].g\u00fcncel_fiyat.values.copy()\ndata_dummies.drop(['g\u00fcncel_fiyat'],axis=1,inplace=True)\ndata_dummies","6344646b":"from sklearn.model_selection import train_test_split,KFold\nfrom sklearn.metrics import mean_squared_error,r2_score,mean_absolute_error\nfrom sklearn.preprocessing import StandardScaler\nimport optuna\nimport xgboost as xgb\nsc=StandardScaler()\ndata_dummies=sc.fit_transform(data_dummies)\ndata_end=data_dummies[:len(target)]\n# target_2=np.log1p(target)\nx_train,x_valid,y_train,y_valid=train_test_split(data_end,target,test_size=0.1,random_state=4)\n\n\ndef objective(trial,data=data_end,target=target):\n    \n    train_x, test_x, train_y, test_y = train_test_split(data, target, test_size=0.1,random_state=4)\n    param = {\n        'tree_method':'gpu_hist',  # this parameter means using the GPU when training our model to speedup the training process\n        'lambda': trial.suggest_loguniform('lambda', 1e-3, 10.0),\n        'alpha': trial.suggest_loguniform('alpha', 1e-3, 10.0),\n        'colsample_bytree': trial.suggest_categorical('colsample_bytree', [0.3,0.4,0.5,0.6,0.7,0.8,0.9, 1.0]),\n        'subsample': trial.suggest_categorical('subsample', [0.4,0.5,0.6,0.7,0.8,1.0]),\n        'learning_rate': trial.suggest_categorical('learning_rate', [0.008,0.009,0.01,0.012,0.014,0.016,0.018, 0.02]),\n        'n_estimators': 1000,\n        'max_depth': trial.suggest_categorical('max_depth', [5,7,9,11,13,15,17,20]),\n        'random_state': trial.suggest_categorical('random_state', [24, 48,2020]),\n        'min_child_weight': trial.suggest_int('min_child_weight', 1, 300),\n    }\n    model = xgb.XGBRegressor(**param)  \n    \n    model.fit(train_x,train_y,eval_set=[(test_x,test_y)],early_stopping_rounds=100,verbose=False)\n    \n    preds = model.predict(test_x)\n    \n    rmse = mean_squared_error(test_y, preds,squared=False)\n    \n    return rmse\n\nstudy = optuna.create_study(direction='minimize')\nstudy.optimize(objective, n_trials=50)\nprint('Number of finished trials:', len(study.trials))\nprint('Best trial:', study.best_trial.params)","1050849e":"import torch\nbest_params=study.best_trial.params\nbest_params.update({\n                    'n_estimators': 2500,\n                    'max_depth': 15,\n                     'min_child_weight': 1,})\n\nif torch.cuda.is_available()==True :\n    best_params.update({'tree_method':'gpu_hist'})\nbest_params","9a081f8f":"\nparams= {'lambda': 0.17577008330073987, \n         'alpha': 0.0018481875717251614,\n         'colsample_bytree': 0.7, \n         'subsample': 0.8,\n         'learning_rate': 0.02, \n         'max_depth': 15, \n         'random_state': 2,\n         'min_child_weight': 1,\n         'n_estimators':1000,\n         'tree_method':'gpu_hist'\n         }\n\nimport xgboost  as xgb\nxgb_tuned=xgb.XGBRegressor(\n    **best_params\n#      **params\n                          ).fit(x_train,y_train,verbose=True) \n#model train\nprint('Model train')\nprint('rmse: ',np.sqrt(mean_squared_error(y_train,xgb_tuned.predict(x_train))))\nprint('r2: ',r2_score(y_train,xgb_tuned.predict(x_train)))\n\n\nprint('Model test')\nprint('rmse :',np.sqrt(mean_squared_error(y_valid,xgb_tuned.predict(x_valid))))\nprint('r2 :',r2_score(y_valid,xgb_tuned.predict(x_valid)))\nprint('-----------------------------------------------------------------------')\nsubmission_dum=data_dummies[-len(data[data.g\u00fcncel_fiyat.isnull()]):]\n# subb_m=sc.transform(subb_dum)\nxgb_pred=xgb_tuned.predict(submission_dum)\nprint(xgb_pred.min())\nprint(xgb_pred.max())","397177f5":"submission=pd.read_csv('\/kaggle\/input\/dogus-teknoloji-zingat\/sample_submission_zingat.csv')\nsubmission.Expected=xgb_pred\nson=submission.rename(columns={'Id':'Ilan_ID'}).merge(data_sub,on='Ilan_ID')\nprint('min:',submission.Expected.min())\nprint('max:',submission.Expected.max())\nson.sort_values('Expected')[:50]\n","98ddcf1a":"from sklearn import model_selection           \n\ncv=model_selection.KFold(n_splits=10,shuffle=True,random_state=1) \nRMSE=[]\nxgb_tuned=xgb.XGBRegressor(**params)\n\nscore=np.sqrt(-1*model_selection.cross_val_score(xgb_tuned,data_end,\n                                                     target,\n                                                     cv=cv,\n                                                     scoring='neg_mean_squared_error').mean())\nprint(score)\n    ","3fad4c75":"submission.set_index('Id').to_csv('\/kaggle\/working\/submission.csv')","67b10f9d":"# Yal\u0131 Dairesi\n","4152adf9":"# Daire","8154d604":"# Villa","48f834b2":"# Prefabirk Ev\n","58ced61e":"# Cross Validation","1e76d2d7":"# Data preprocessing,Visualization and Feature Engineering","9b7b6dcb":"# Rezidans\n","2a519e41":"# \u00c7iftlik Evi\n","0593e80d":"# K\u00f6\u015fk \/ Konak \/ Yal\u0131\n","600a0e93":"# Yazl\u0131k\n","05ecea44":"# Parametre Tuning","a2117dde":"## XGBOOST MODEL","4b5fd66c":"# netm ve br\u00fctm "}}