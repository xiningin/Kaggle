{"cell_type":{"25cc91ba":"code","2a20bc57":"code","cb5faacf":"code","1b1e6c2a":"code","bad82baf":"code","2a0bc170":"code","e0910565":"code","e01815a6":"code","de1987fd":"code","da96a4b6":"code","c72aac56":"code","4abdc84d":"code","bee5301b":"code","257bc791":"code","a0ebb554":"code","af3c752b":"code","20e6afe0":"code","e2d547db":"code","93745492":"code","9517d40a":"code","35637c94":"code","a33ae748":"code","126ec160":"code","49fff75b":"code","3241fcb7":"code","e3f8d07f":"code","e7979be7":"code","ad32d5e9":"code","5245709e":"code","9392246d":"code","d1a0b4a5":"code","ee90a792":"markdown","eb42a897":"markdown","37e2b190":"markdown","22929735":"markdown","40792498":"markdown","851fbb54":"markdown","810e4651":"markdown","8a1ead90":"markdown","e964048a":"markdown","551a7bf5":"markdown","fbe97940":"markdown","802ce085":"markdown","f1a6886c":"markdown","94f41462":"markdown","bc915c70":"markdown","14b984bc":"markdown","cced9ddc":"markdown","800fb418":"markdown","32e21bcf":"markdown","2986dc37":"markdown","659a9e6c":"markdown","d571d0ce":"markdown","6f629a53":"markdown"},"source":{"25cc91ba":"import os\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as mpl","2a20bc57":"titanic = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntitanic","cb5faacf":"df = titanic.copy()\ndf.head(10)","1b1e6c2a":"# it is important to know what kind of data we are working with\n\nprint(df.shape)\nprint(df.dtypes)","bad82baf":"# it is also important to know the no. of NaN values and where they lie\n\ndf.isnull().sum()","2a0bc170":"# we drop the 'PassengerId' column right at the beginning\n\ndf.drop('PassengerId', axis = 1, inplace = True)\ndf.head(10)","e0910565":"# let us check the survival rate of the passengers\n\ndf['Survived'].mean()","e01815a6":"# we can group data by class and view the averages for each column\n\ndf.groupby('Pclass').mean()","de1987fd":"# let us see what these nos. actually mean\n\nclass_grouping = df.groupby('Pclass').mean()\nclass_grouping['Survived'].plot.bar(width = 0.2, color = 'red')\nmpl.ylabel(\"Survival Chances\")\nmpl.show()\nclass_grouping['Age'].plot.bar(width = 0.2)\nmpl.ylabel(\"Age\")\nmpl.show()","da96a4b6":"# we drop the 'Name' column\n\ndf.drop('Name', axis = 1, inplace = True)\ndf.head(10)","c72aac56":"# now we group the data by sex\n\nsex_grouping = df.groupby('Sex').mean()\nsex_grouping","4abdc84d":"sex_grouping['Survived'].plot.bar(width = 0.5, color = 'green')\nmpl.ylabel(\"Sex\")\nmpl.show()","bee5301b":"# drawing a pie chart for number of males and females aboard\n\nmales = (df['Sex'] == \"male\").sum()\nfemales = (df['Sex'] == \"female\").sum()\n\nprint(males)\nprint(females)\np = [males, females]\nmpl.pie(p,    #giving array\n       labels = ['Male', 'Female'], #Correspndingly giving labels\n       colors = ['blue', 'red'],   # Corresponding colors\n       explode = (0.10, 0),    #How much the gap should me there between the pies\n       startangle = 0)  #what start angle should be given\nmpl.axis('equal') \nmpl.show()","257bc791":"# let us see how the \"female\" across all \"Pclass\" fared\n\nclass_sex_grouping = df.groupby(['Pclass','Sex']).mean()\nclass_sex_grouping","a0ebb554":"class_sex_grouping['Survived'].plot.bar()\nmpl.ylabel(\"Survival Chances\")\nmpl.show()","af3c752b":"# changing Value for \"male, female\" string values to numeric values ; male=1 and female=2\n\ndef getNumber(str):\n    if str==\"male\":\n        return 1\n    else:\n        return 2\ndf[\"Gender\"] = df[\"Sex\"].apply(getNumber)\n\n#We have created a new column called 'Gender' and \n#filling it with values 1 ,2 based on the values of 'Sex' column\n\ndf.head()","20e6afe0":"# we drop the 'Sex' column, since we have no use of it now\n\ndf.drop('Sex', axis = 1, inplace = True)\ndf.head(10)","e2d547db":"df['Age'].describe()","93745492":"group_age_split = pd.cut(df['Age'], np.arange(0, 80, 15))\nage_grouping = df.groupby(group_age_split).mean()\nage_grouping['Survived'].plot.bar(color = 'red')\nmpl.ylabel(\"Survival Chances\")\nmpl.show()","9517d40a":"#finding mean survived age\nmeanS= titanic[titanic.Survived==1].Age.mean()\nprint(meanS)\n\n# finding the mean not survived age\nmeanNS=titanic[titanic.Survived==0].Age.mean()\nprint(meanNS)","35637c94":"df['age'] = np.where(pd.isnull(df['Age']) & df['Survived']==1  , meanS, df['Age'])\ndf.head(10)","a33ae748":"df['age'].fillna(meanNS, inplace=True)\ndf","126ec160":"# checking if 'age' column is devoid of NaN values\n\ndf.isnull().sum()","49fff75b":"# we can safely delete the 'Age' column now\n\ndf.drop('Age', axis = 1, inplace = True)\ndf.head(10)","3241fcb7":"# we drop the above columns\ndf.drop(['Ticket','Cabin'], axis = 1, inplace = True)\ndf.head(10)","e3f8d07f":"# applying statistical approach on the above dataframe to analyse \n# which feature or column is affecting the survival rate and which is useless column\n\ndf.describe()","e7979be7":"df.groupby('Embarked').mean()","ad32d5e9":"embark_grouping = df.groupby('Embarked').mean()\nembark_grouping['Survived'].plot.bar(width = 0.2, color = 'brown')\nmpl.ylabel(\"Survival Chances\")\nmpl.show()","5245709e":"df.isnull().sum()","9392246d":"df.dropna(inplace = True)\ndf.isnull().sum()","d1a0b4a5":"df","ee90a792":"##### As we can clearly see the number of male passnegers far exceeded the number of female passengers.\n\n##### While the Titanic was sinking, the officers famously prioritized who was allowed in a lifeboat with the strict maritime tradition of evacuating women and children first. Our statistical results clearly reflect the first part of this policy.","eb42a897":"### Now as we can clearly observe, survival rate of female passengers is much higher than male passengers. This can happen under two circumstances:\n### first, no. of female passengers was much higher than male passengers, or\n### second, when the Titanic was sinking there was some policy\/scheme in place that allowed more female passengers to survive.\n\n### We'll try to find out which of the above was it.","37e2b190":"### The column heading variables have the following meanings:\n\n### __PassengerId__: Serial numbers given to the passengers\n### __Survived__: Survival (0 = no; 1 = yes)\n### __Pclass__: Passenger class (1 = first; 2 = second; 3 = third)\n### __Name__: Name\n### __Sex__: Sex\n### __Age__: Age\n### __SibSp__: Number of siblings\/spouses aboard\n### __Parch__: Number of parents\/children aboard\n### __Ticket__: Ticket number\n### __Fare__: Passenger fare\n### __Cabin__: Cabin\n### __Embarked__: Port of embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)","22929735":"### moving on to the next column i.e 'Name'\n\n### It's quite clear that the name of the passenger cannot possibly play any part in their survival, hence is considered redundant. As for the purpose of identification of a passenger we already have a \"passenger id\" for that purpose.","40792498":"### Here we can see that children were indeed the most likely age group to survive at 60%.","851fbb54":"### now we take a look at the columns 'Ticket' and 'Cabin'. \n### we can consider these redundant as the attribute 'Ticket' is a set of random string\/numbers and majority of the values in 'Cabin' attribute are NaN.","810e4651":"### now we're curious about analyzing whether the embark points  i.e the port  the passengers board the ship, played any role in deciding the survivors","8a1ead90":"### We can start drawing some interesting insights from this data. \n### Firstly, passengers in first class had a 62% chance of survival, compared to a 25.5% chance for those in 3rd class; with the middle class' chance of survival predictably lying in between these two, as it should.\n### Secondly, the lower classes generally consisted of younger people. \n### And thirdly, the ticket prices for first class were predictably much higher than those for second and third class.","e964048a":"### Now the 'age' column contains null entries in the places where \"survived\" is equal to zero\n### Filling those null values in one go with meanNS","551a7bf5":"### as we saw earlier there are quite a few NaN values in the 'Age' column of the dataframe. We cannot remove all these columns as it would result in loss of a significant amount of data\n### so, we fill the null values of the 'Age' column i.e  fill \"mean survived age\" (mean age of the survived people) in the column where the person has survived and \"mean not survived age\" (mean age of the people who have not survived) in the column where person has not survived","fbe97940":"## TITANIC DATASET","802ce085":"### moving on to the next column i.e 'Age'\n\n### The effectiveness of the second part of this \u201cWomen and children first\u201d policy can be deduced by breaking down the survival rate by age.","f1a6886c":"### Here we interestingly observe, that the embark point might actually have played some part in deciding the survivors","94f41462":"### we start with the second column i.e 'Survived' now","bc915c70":"### here, we create a new 'age' column , filling values in it with a condition (given inside), which if True then given values (here meanS) is put in place of last values else nothing happens i.e. simply the values are copied from the \"Age\" column of the dataframe","14b984bc":"### by now we have a rough idea of the structure and meaning of the data in our dataframe, now we proceed in analysing it to make it more comprehensible\n\n### for this we need to analyze the different columns and the contribution of each towards the survival of the passenger","cced9ddc":"### clearly first column i.e 'PassengerId' is of no use to us, as it is just serially allotted numbers to all the passengers.","800fb418":"### Also, across all classes, women were much more likely to survive than the men.","32e21bcf":"### for analysis purposes it is better if we have the values of all attributes as similar datatypes and the 'Sex' attribute is fairly binary in nature. Hence, we assign specific numerical values to each sex i.e male or female.","2986dc37":"### moving on to the next column i.e 'Pclass'\n\n### looking at just the dataset we cannot tell if \"passenger class\" plays a role in their survival, hence we try to analyse the data with respect to the given attribute","659a9e6c":"### The calculation shows that only 38% of the passengers survived. It seems unlikely that all of the passengers would have had equal chances at survival, so we will continue breaking down the data to further examine how each column contributed to survival.","d571d0ce":"### moving on to the next column i.e 'Sex'","6f629a53":"### now, the only NaN value that exist, are 2 values in embark column\n### 2 null values among total entries of 891 rows, and hence we can safely say that deleting two rows from 891 rows will not affect the result. So rather than trying to fill those null values with some vales. We can simply remove them. "}}