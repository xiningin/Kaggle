{"cell_type":{"13747322":"code","c29eb603":"code","885d2156":"code","f5d2e279":"code","c296a83b":"code","d2a81ebe":"code","b872ce6e":"code","c9029c65":"code","fe678fe4":"code","040800d9":"markdown","dad35ab4":"markdown"},"source":{"13747322":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.express as px\n\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c29eb603":"!pip install openpyxl","885d2156":"df = pd.read_excel('\/kaggle\/input\/korean-morpheme-dictionary-niadic\/NIADic.xlsx')\ndf.head(2)","f5d2e279":"df.isnull().sum()","c296a83b":"df[\"term\"].value_counts()","d2a81ebe":"#Code by Lucas Abrah\u00e3o https:\/\/www.kaggle.com\/lucasabrahao\/trabalho-manufatura-an-lise-de-dados-no-brasil\n\ndf[\"tag\"].value_counts().plot.barh(color='#f5005a', title='Tags');","b872ce6e":"#Code by Seungbum Lim https:\/\/www.kaggle.com\/seungbumlim\/20-21-ml-ds-survey-pandas-filter-custom-function\n\nplt.figure(figsize = (8, 4))\nax = sns.countplot(data = df,\n                   x = 'tag',\n                   palette = 'Oranges_r')\n\nax.bar_label(ax.containers[0])\nax.set_ylim(0, 4500)\nax.set_title('Tags', pad = 20)\nplt.xticks(rotation=45)\n\nplt.show()","c9029c65":"df[\"category\"].value_counts()","fe678fe4":"#word cloud\nfrom wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.category)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200,colormap='Set3', background_color=\"black\").generate(text)\nplt.figure(figsize=(10,6))\nplt.figure(figsize=(15,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='Bilinear')\nplt.axis(\"off\")\nplt.figure(1,figsize=(12, 12))\nplt.show()","040800d9":"Since I have no clue how to work with Korean characters, I will stop here. That's all for now.","dad35ab4":"#NIA(National Information Society Agency) Dictionary\n\n\"The Korean dictionary for morphological analysis, NIADic, was compiled as an enhancement of the original KoNLP, to help users get more accurate and stable result from text analysis. With the unstinted support from MSIP(Ministry of Science, ICT and Future Planning), NIADic was developed by NIA (National Information Society Agency) with the leading contribution from the original developer, Heewon Jeon. NIA also greatly acknowledges National Institute of the Korean Language (NIKL) as providing generously the source of Korean word dictionary.\"\n\nhttps:\/\/github.com\/haven-jeon\/NIADic"}}