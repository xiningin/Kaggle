{"cell_type":{"15a53b80":"code","fee1d1db":"code","a12861a7":"code","79865bfd":"code","fda0d6ef":"code","bb69a123":"code","24a91c0f":"code","dac79d61":"code","6569a1db":"code","4ab751be":"code","1571e09e":"code","190e24b6":"markdown","bd7b89ab":"markdown","22e8897e":"markdown","ff7b25b6":"markdown","3f27fdc5":"markdown","a5d035aa":"markdown","fc9daef3":"markdown","0bca339d":"markdown","38cf0a90":"markdown","9dddbaf2":"markdown","f8a70584":"markdown","0cf88262":"markdown","9c5d44a9":"markdown","a9c3f7ad":"markdown","7d789ba5":"markdown","a8f53426":"markdown","91e81be6":"markdown","9172f2fc":"markdown","4c5f3d53":"markdown"},"source":{"15a53b80":"# name = \"C:\/Users\/flyhi\/OneDrive\/Desktop\/india\/Covid19_India_datasets-main\/data-Andaman and Nicobar Islands.csv\"\n# csv_file = Path(name)\n\n# f_to_start = pd.read_csv(csv_file)\n# #print(os.listdir())\n\n# #directory = \"C:\\Users\"+ \"'\\'\" +  \"flyhi\" + \"'\\'\" + \"OneDrive\" + \"'\\'\" + 'Desktop' + \"'\\'\" + 'india' + \"'\\'\" + \"Covid19_India_datasets-main\"\n# directory = \"C:\/Users\/flyhi\/OneDrive\/Desktop\/india\/Covid19_India_datasets-main\"\n# thing = \"C:\/Users\/flyhi\/OneDrive\/Desktop\/india\/Covid19_India_datasets-main\/\"\n# directory = Path(directory)\n# #thing = Path(thing)\n# for filename in os.listdir(directory):\n#     view = thing + filename\n#     new = Path(view)\n#     isDirectory = os.path.isdir(new)\n#     if isDirectory == True:\n#         os.chdir(new)\n#         csv_file_name =os.listdir()[0]\n#         df_to_concat = pd.read_csv(csv_file_name)\n#         f_to_start = f_to_start.append(df_to_concat)\n#         os.chdir(directory)","fee1d1db":"from itertools import count\nimport os\nfrom pathlib import Path\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom pandas._libs import missing \nfrom sklearn import preprocessing, model_selection, svm\nfrom sklearn.linear_model import LinearRegression \nimport numpy as np \nimport seaborn as sns\nimport missingno as msno","a12861a7":"#Reading in data\ndf = pd.read_csv(\"..\/input\/combinedcsv\/combined.csv\")","79865bfd":"#Dropping bad columns\nprint(df.head())\ndf = df.drop(['Unnamed: 0', 'Unnamed: 0.1'], axis=1)\ndf['Time'] = pd.to_datetime(df['Time'])\n","fda0d6ef":"#Dropping rows with Nan values\nprint(df.info())\nmsno.bar(df)\nplt.show()\n\nmissing_set = df[df['New Cases'].notnull()]","bb69a123":"plt.scatter(x=df['Time'], y=df['Deaths'])\nplt.xlabel('Date')\nplt.ylabel('Population')\nplt.title('Death vs Time')\nplt.show()","24a91c0f":"# Average case count by country\n\nfig, ax = plt.subplots() \n\n#Grouping\nvz = missing_set.groupby('State')['New Cases'].agg(['sum', 'count'])\nvz['average'] = vz['sum'] \/ vz['count']\n\n\n#Setting size of plot\n\nfig.set_size_inches(18.5, 10.5, forward=True)\n\n# Setting Parameters\nstates = list(vz.index)\n\n# Setting Parameters\ny_pos = np.arange(len(list(missing_set['State'].unique())))\n\n# Setting Parameters\nperformance =  vz['average']\n\n# Setting Parameters\nerror = np.random.rand(len(y_pos)) \n\n#Graphing\nax.barh(y_pos, performance, align='center')\nax.set_yticks(y_pos)\nax.set_yticklabels(list(missing_set['State'].unique()))\nax.invert_yaxis()  \nax.set_xlabel('Average Case Count')\nax.set_title('Average Case Count by State')\n\nplt.show()","dac79d61":"fig, ax = plt.subplots() \nlast_row = pd.DataFrame()\nfor i in missing_set['State'].unique():\n    new_df = missing_set[missing_set['State'] == i]\n    last_row=last_row.append(new_df.iloc[[0, -1]], ignore_index=True)\n    \n\n#Setting size of the figure\nfig.set_size_inches(18.5, 10.5, forward=True)\n\n#Setting Parameters\nstates = list(missing_set['State'].unique())\n\n# setting the y-pos\ny_pos = np.arange(len(list(missing_set['State'].unique())))\n\n#Preformance is the values of the actual thing\nnew_df = last_row.iloc[lambda x: x.index % 2 == 1]\n\nnew_df['deaths_to_confirmed'] = new_df['Deaths'] \/ new_df['Confirmed']\n\nperformance = new_df['deaths_to_confirmed']\n\n\n\n\n#Idk error to account for (its that black bar on top of the)\nerror = np.random.rand(len(y_pos)) \n\n\n#Graphing\nax.barh(y_pos, performance, align='center')\nax.set_yticks(y_pos)\nax.set_yticklabels(list(missing_set['State'].unique()))\nax.invert_yaxis()  \nax.set_xlabel('Deaths per confirmed case')\nax.set_title('Deaths per confirmed case by each state')\n\nplt.show()","6569a1db":"\nfig, ax = plt.subplots() \nlast_row = pd.DataFrame()\nfor i in missing_set['State'].unique():\n    new_df = missing_set[missing_set['State'] == i]\n    last_row=last_row.append(new_df.iloc[[0, -1]], ignore_index=True)\n    \n# Setting Figure Size\nfig.set_size_inches(18.5, 10.5, forward=True)\n\n# Setting Parameters\nstates = list(missing_set['State'].unique())\n\ny_pos = np.arange(len(list(missing_set['State'].unique())))\n\nnew_df = last_row.iloc[lambda x: x.index % 2 == 1]\n\nnew_df['recoveries_to_confirmed'] = new_df['Recovered'] \/ new_df['Confirmed']\n\nperformance = new_df['recoveries_to_confirmed']\n\nerror = np.random.rand(len(y_pos)) \n\n\n# Graphing\nax.barh(y_pos, performance, align='center')\nax.set_yticks(y_pos)\nax.set_yticklabels(list(missing_set['State'].unique()))\nax.invert_yaxis()  \nax.set_xlabel('Recoveries per Confirmed Case by each state')\nax.set_title('Recoveries per Confirmed')\n\nplt.show()","4ab751be":"#Selecting and processing features\n\nplt.figure(figsize=(15,8))\nsns.heatmap(missing_set.corr(), annot=True, linewidths=1)\nplt.show()","1571e09e":"forecast_out = 10\nx = np.array(missing_set[['Confirmed', 'Active', 'New Cases']])\n#x = preprocessing.scale(x)\nx= x[:-forecast_out]\nx_predict = x[-forecast_out:]\ny = np.array(missing_set['Deaths'])\ny = y[:-forecast_out]\n\n\n#Trainig\nx_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, test_size=0.2)\n\n\n#Our linear classifier\nclf = LinearRegression()\nclf.fit(x_train, y_train)\n\n#Accuracy\naccuracy = clf.score(x_test, y_test)\nprint(\"Accuracy: \" + str(100*accuracy) + \"%\")","190e24b6":"\n\n## Exploratory data analysis","bd7b89ab":"### Concatenating the dataframes from the directories (Commented for runtime)","22e8897e":"### 1. India's death rate is increasing at a linear rate, greater for states that have a higher population.\n### 2. Maharashtra is the fastest growing in case count perday on average.\n### 3. Punjab is having the greatest deaths per confirmed case. It is over 2.5%, meanining that it is likely that 1\/40 people with a confirmed case will die! \n### 4. Rajasthan has the best recovery\/confirmed case. meaning, approximately, for every 1 confirmed case about 1 person recovers from covid.","ff7b25b6":"Viewing the death rate overtime","3f27fdc5":"# Predicting deaths in India  ","a5d035aa":"Point 3:\n\n![Synop_final.png](attachment:Synop_final.png)\nlink: https:\/\/economictimes.indiatimes.com\/news\/india\/not-more-than-2-to-be-allowed-in-cars-negative-covid-test-report-must-for-entering-punjab\/articleshow\/82359030.cms","fc9daef3":"Recoveries per confirmed case (double click to enlarge graph)","0bca339d":"## Conclusion:","38cf0a90":"## Introduction\n\nThis is a Covid-19 dataset which contains state data stored in multiple directories. Each state's dataset contains \na \"Time\", \"State\", \"Confirmed\", \"Recovered\", \"Deaths\", \"Active\" and \"New Cases\" column.","9dddbaf2":"## Understanding Data and Preprocessing before analysis ","f8a70584":"<p>&nbsp;<\/p>\n\nHere are two articles which validated my analysis:\n\n\n\nPoint 2:\n![Synop_for_point_2.png](attachment:Synop_for_point_2.png)\nlink: https:\/\/economictimes.indiatimes.com\/news\/india\/maha-mortality-rate-less-than-punjab-ukhand-nagaland-goa\/articleshow\/83351837.cms","0cf88262":"\nDeaths per confirmed case (double click to enlarge graph)","9c5d44a9":"### Necessary Imports and Preprocessing Data","a9c3f7ad":"<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>","7d789ba5":"![india_image.jpg](attachment:india_image.jpg)","a8f53426":"### Quick description of the columns:\n\nTime: in format of Year\/Month\/Day Hours\/Minutes\/Seconds\n\nState: State in india\n\nConfirmed: Confirmed corona cases\n\nRecovered: The amount of people recovered covid \n\nDeaths: Deaths from covid (Can only be assumed from confirmed) \n\nActive: N\/A \n\nNew Cases: New cases of Covid-19 per day ","91e81be6":"\nViewing average case count by state (double click to enlarge graph)","9172f2fc":"To account for multicollinearity, I will omit the \"Recovered\" column as one of the features as its not only redundant but also doesnt make sense as a feature for predicting and also due to its high VIF value.","4c5f3d53":"## Modeling and predicting "}}