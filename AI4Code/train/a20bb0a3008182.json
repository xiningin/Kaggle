{"cell_type":{"0a44cfbe":"code","e5cc9d77":"code","5ec62474":"code","b47a674a":"code","2e48ef5d":"code","13abea3c":"code","c8f9ea7a":"code","e23ef03d":"code","c97d19c5":"code","de8ca5f5":"code","62668bc9":"code","c5f538cc":"code","56ee7f10":"code","dc570d78":"code","613247f5":"code","93c53fa3":"markdown","7f965106":"markdown","12cf7a0f":"markdown","3715187f":"markdown","aa59b724":"markdown"},"source":{"0a44cfbe":"from __future__ import absolute_import, division, print_function\nimport sys\nprint(\"Python version:\", sys.version)\n\nimport tensorflow as tf\nprint(\"TensorFlow version:\", tf.__version__)","e5cc9d77":"# TEMPORARY: enable control flow for @tf.function decorators\nfrom tensorflow.python.ops import control_flow_util\ncontrol_flow_util.ENABLE_CONTROL_FLOW_V2 = True","5ec62474":"@tf.function\ndef print_1(should_print):\n    print('print_1:', should_print)\n    assert should_print == True\n    for x in range(10):\n        if x >= 5:\n            print(x)\n            for y in range (10):\n                if y < 5:\n                    print('\\t', y)","b47a674a":"print(tf.autograph.to_code(print_1.python_function,  experimental_optional_features=None))","2e48ef5d":"# check with correct condition\nprint_1(True)","13abea3c":"# check without passing value which will give us TypeError\ntry:\n    print_1()\nexcept TypeError as e:\n    print('TypeError as expected:', e)","c8f9ea7a":"# Now let's add a default value so that we don't get a TypeError\n@tf.function\ndef print_2(should_print=False):\n    print('print_2:', should_print)\n    assert should_print == True\n    for x in range(10):\n        if x >= 5:\n            print(x)\n            for y in range (10):\n                if y < 5:\n                    print('\\t', y)\n","e23ef03d":"print(tf.autograph.to_code(print_2.python_function,  experimental_optional_features=None))","c97d19c5":"print_2(True)","de8ca5f5":"try:\n    print_2()\nexcept AssertionError as e:\n    print('Assertion Error as expected:', e)","62668bc9":"# Let's try catching AssertionError in our function\n@tf.function\ndef print_3(should_print=False):\n    try:\n        assert should_print == False\n        print('print_3:', should_print)\n        for x in range(10):\n            if x >= 5:\n                print(x)\n                for y in range (10):\n                    if y < 5:\n                        print('\\t', y)\n    except AssertionError as e:\n        print('Should print assertion failed', e)","c5f538cc":"try:\n    print(tf.autograph.to_code(print_3.python_function,  experimental_optional_features=None))\nexcept NotImplementedError as e:\n    print('NotImplementedError as expected:', e)","56ee7f10":"# let's try with reverting our assertion and not passing any value\n@tf.function\ndef print_4(should_print=False):\n    assert should_print == False\n    print('print_4:', should_print)\n    for x in range(10):\n        if x >= 5:\n            print(x)\n            for y in range (10):\n                if y < 5:\n                    print('\\t', y)\n","dc570d78":"print(tf.autograph.to_code(print_4.python_function,  experimental_optional_features=None))","613247f5":"print_4()\n# works as expected, even though it seems like the converted code set the default value to None","93c53fa3":"### **NOTE**: Sadly exceptions are not yet supported by autograph","7f965106":"# AutoGraph Playground\n\n[AutoGraph](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/python\/autograph\/) helps you write complicated graph code using normal Python. AutoGraph automatically transforms your code into equivalent [TensorFlow graph code](https:\/\/www.tensorflow.org\/guide\/graphs).\n\nFor a list of supported Python language features, see the [AutoGraph capabilities and limitations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/python\/autograph\/LIMITATIONS.md) ","12cf7a0f":"More autograph fun here: https:\/\/www.kaggle.com\/vikramtiwari\/tf2-tf-function-and-autograph","3715187f":"Let's start with a basic function to check for conditions, assertion, multi-level loops, print statements and functions without return and default values","aa59b724":"Now convert it to autograph"}}