{"cell_type":{"31493a71":"code","500efc7d":"code","83bf6fa2":"code","61a40d7f":"code","dd459208":"code","64606b1a":"code","ebd1d97a":"code","36f0af1f":"code","d839ab7a":"code","4bdce3e2":"code","bf48b45e":"code","75a11cf0":"code","d85fdfc1":"code","ac34c9c4":"code","fd6c321f":"code","d5949c59":"code","790a4d1a":"code","14c5efcd":"code","8c997547":"code","43d2af35":"code","7172c575":"code","ea2e097e":"code","89ae398c":"code","394aa226":"code","8e505898":"code","11034ab2":"code","d5e8d95a":"code","a1e6c304":"code","5b08e56e":"code","23d8c5ee":"code","86842d8f":"code","5369213c":"code","33065ef2":"code","9bbf9145":"code","e4c37cd0":"code","6a69b2ca":"code","a2661ebb":"code","0c873c82":"code","809d1885":"code","7bc93551":"code","511fabc4":"code","dea71c3d":"code","de015424":"code","62751c21":"code","e744ecf9":"code","b56bd353":"code","c0baa4f2":"code","4baee91f":"code","6223a76c":"code","8cc802df":"code","9fcd98f2":"code","44b653b6":"code","865f4d4b":"code","1317ab71":"code","e5b31fac":"code","9af91e89":"code","d41c8416":"code","aacd5982":"code","ae115fee":"code","da697f2b":"code","29d62bec":"markdown","445da1e2":"markdown","bbeca18e":"markdown","5481429a":"markdown","a3987fe2":"markdown","0e6f4ff4":"markdown","298e0891":"markdown","175f6070":"markdown","e787ec08":"markdown","df9ceb43":"markdown","2822af36":"markdown","294a1673":"markdown","7a320485":"markdown","0e6a80a2":"markdown","7fc82cf0":"markdown","88f9ad25":"markdown","fdbb0e25":"markdown","d905342a":"markdown","63d813a5":"markdown","4495195f":"markdown","3c293814":"markdown","e9b76a82":"markdown","4304db8d":"markdown","979aaaca":"markdown","79ce3395":"markdown","b5c74314":"markdown","a37e4c28":"markdown","22c0f5df":"markdown","5209857c":"markdown","5d29d1c7":"markdown","fc181867":"markdown"},"source":{"31493a71":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set()\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression","500efc7d":"raw_data = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\npd.set_option(\"display.max_columns\",0)\nraw_data","83bf6fa2":"raw_data.shape","61a40d7f":"numeric = raw_data.select_dtypes({'int64','float64'}).columns\nnumeric","dd459208":"categorical = raw_data.select_dtypes({'object'}).columns\ncategorical","64606b1a":"#Number of numeric columns\nraw_data.select_dtypes({'int64','float64'}).shape","ebd1d97a":"#Number of categorical columns\nraw_data.select_dtypes({'object'}).shape","36f0af1f":"raw_data['SalePrice'].describe()","d839ab7a":"sns.distplot(raw_data['SalePrice'])","4bdce3e2":"raw_data['SalePrice'].skew()","bf48b45e":"raw_data['SalePrice'].kurt()","75a11cf0":"#correlation matrix\ncorrmat = raw_data.corr()\nplt.subplots(figsize=(10, 10))\nsns.heatmap(corrmat, square=True);","d85fdfc1":"k = 10\nmost_correlated = corrmat.nlargest(k, 'SalePrice')['SalePrice'].index\nprint(most_correlated)","ac34c9c4":"factors = ['SalePrice', 'OverallQual', 'GrLivArea', 'GarageCars', 'GarageArea',\n            'TotalBsmtSF', '1stFlrSF', 'FullBath', 'TotRmsAbvGrd', 'YearBuilt']","fd6c321f":"#Checking for duplicate values:\ndup_data = raw_data[raw_data.duplicated()]\ndup_data.shape[0]","d5949c59":"total = pd.isnull(raw_data).sum().sort_values(ascending=False)\npercentage = ((pd.isnull(raw_data).sum() \/ pd.isnull(raw_data).count()).sort_values(ascending=False))*100\nno_values = pd.concat([total,percentage],axis = 1, keys = ['Total', 'Percent'])","790a4d1a":"no_values.head(19)","14c5efcd":"raw_data_without_null = raw_data.drop((no_values[no_values['Total'] > 1]).index,1)","8c997547":"raw_data_without_null = raw_data_without_null.dropna()","43d2af35":"pd.isnull(raw_data_without_null).sum().max()","7172c575":"raw_data_without_null.shape","ea2e097e":"sns.boxplot(raw_data_without_null['OverallQual'])\nq1 = raw_data_without_null['OverallQual'].quantile(.25)\nq3 = raw_data_without_null['OverallQual'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['OverallQual'] > floor) & (raw_data_without_null['OverallQual'] < cap)]","89ae398c":"sns.boxplot(raw_data_without_null['GrLivArea'])\nq1 = raw_data_without_null['GrLivArea'].quantile(.25)\nq3 = raw_data_without_null['GrLivArea'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['GrLivArea'] > floor) & (raw_data_without_null['GrLivArea'] < cap)]","394aa226":"sns.boxplot(raw_data_without_null['GarageCars'])\nq1 = raw_data_without_null['GarageCars'].quantile(.25)\nq3 = raw_data_without_null['GarageCars'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['GarageCars'] > floor) & (raw_data_without_null['GarageCars'] < cap)]","8e505898":"sns.boxplot(raw_data_without_null['GarageArea'])\nq1 = raw_data_without_null['GarageArea'].quantile(.25)\nq3 = raw_data_without_null['GarageArea'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['GarageArea'] > floor) & (raw_data_without_null['GarageArea'] < cap)]","11034ab2":"sns.boxplot(raw_data_without_null['TotalBsmtSF'])\nq1 = raw_data_without_null['TotalBsmtSF'].quantile(.25)\nq3 = raw_data_without_null['TotalBsmtSF'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['TotalBsmtSF'] > floor) & (raw_data_without_null['TotalBsmtSF'] < cap)]","d5e8d95a":"sns.boxplot(raw_data_without_null['1stFlrSF'])\nq1 = raw_data_without_null['1stFlrSF'].quantile(.25)\nq3 = raw_data_without_null['1stFlrSF'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['1stFlrSF'] > floor) & (raw_data_without_null['1stFlrSF'] < cap)]","a1e6c304":"sns.boxplot(raw_data_without_null['FullBath'])\nq1 = raw_data_without_null['FullBath'].quantile(.25)\nq3 = raw_data_without_null['FullBath'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['FullBath'] > floor) & (raw_data_without_null['FullBath'] < cap)]","5b08e56e":"sns.boxplot(raw_data_without_null['TotRmsAbvGrd'])\nq1 = raw_data_without_null['TotRmsAbvGrd'].quantile(.25)\nq3 = raw_data_without_null['TotRmsAbvGrd'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['TotRmsAbvGrd'] > floor) & (raw_data_without_null['TotRmsAbvGrd'] < cap)]","23d8c5ee":"sns.boxplot(raw_data_without_null['YearBuilt'])\nq1 = raw_data_without_null['YearBuilt'].quantile(.25)\nq3 = raw_data_without_null['YearBuilt'].quantile(.75)\niqr = q3 - q1\nfloor = q1 - 3*iqr\ncap = q3 + 3*iqr\nprint('Floor = {}, Capping = {}'.format(floor,cap))\nraw_data_without_null = raw_data_without_null[(raw_data_without_null['YearBuilt'] > floor) & (raw_data_without_null['YearBuilt'] < cap)]","86842d8f":"raw_data_without_null.shape","5369213c":"data_cleaned = raw_data_without_null.copy()","33065ef2":"data_use = data_cleaned[factors].copy()","9bbf9145":"f, (ax1,ax2,ax3,ax4,ax5,ax6,ax7,ax8,ax9) = plt.subplots(1,9, sharey = True, figsize = (30,5))\nax1.scatter(data_use['OverallQual'],data_use['SalePrice'])\nax1.set_title('OverallQual and SalePrice')\n\nax2.scatter(data_use['GrLivArea'],data_use['SalePrice'])\nax2.set_title('GrLivArea and SalePrice')\n\nax3.scatter(data_use['GarageCars'],data_use['SalePrice'])\nax3.set_title('GarageCars and SalePrice')\n\nax4.scatter(data_use['GarageArea'],data_use['SalePrice'])\nax4.set_title('GarageArea and SalePrice')\n\nax5.scatter(data_use['TotalBsmtSF'],data_use['SalePrice'])\nax5.set_title('TotalBsmtSF and SalePrice')\n\nax6.scatter(data_use['1stFlrSF'],data_use['SalePrice'])\nax6.set_title('1stFlrSF and SalePrice')\n\nax7.scatter(data_use['FullBath'],data_use['SalePrice'])\nax7.set_title('FullBath and SalePrice')\n\nax8.scatter(data_use['TotRmsAbvGrd'],data_use['SalePrice'])\nax8.set_title('TotRmsAbvGrd and SalePrice')\n\nax9.scatter(data_use['YearBuilt'],data_use['SalePrice'])\nax9.set_title('YearBuilt and SalePrice')","e4c37cd0":"data_use['logPrice'] = np.log(data_use['SalePrice'])","6a69b2ca":"before = raw_data['SalePrice'].skew()\nafter = data_use['logPrice'].skew()\nprint('Skewness before : {}, Skewness after : {}'.format(before,after))","a2661ebb":"sns.distplot(data_use['logPrice'])","0c873c82":"f, (ax1,ax2,ax3,ax4,ax5,ax6,ax7,ax8,ax9) = plt.subplots(1,9, sharey = True, figsize = (30,5))\nax1.scatter(data_use['OverallQual'],data_use['logPrice'])\nax1.set_title('OverallQual and logPrice')\n\nax2.scatter(data_use['GrLivArea'],data_use['logPrice'])\nax2.set_title('GrLivArea and logPrice')\n\nax3.scatter(data_use['GarageCars'],data_use['logPrice'])\nax3.set_title('GarageCars and logPrice')\n\nax4.scatter(data_use['GarageArea'],data_use['logPrice'])\nax4.set_title('GarageArea and logPrice')\n\nax5.scatter(data_use['TotalBsmtSF'],data_use['logPrice'])\nax5.set_title('TotalBsmtSF and logPrice')\n\nax6.scatter(data_use['1stFlrSF'],data_use['logPrice'])\nax6.set_title('1stFlrSF and logPrice')\n\nax7.scatter(data_use['FullBath'],data_use['logPrice'])\nax7.set_title('FullBath and logPrice')\n\nax8.scatter(data_use['TotRmsAbvGrd'],data_use['logPrice'])\nax8.set_title('TotRmsAbvGrd and logPrice')\n\nax9.scatter(data_use['YearBuilt'],data_use['logPrice'])\nax9.set_title('YearBuilt and logPrice')","809d1885":"location = data_cleaned[['Neighborhood','Condition1']].copy()\ndata = data_cleaned[factors]\ndata_with_cat = data.join(location)\ndata_with_cat","7bc93551":"data_with_cat['logPrice'] = np.log(data_with_cat['SalePrice'])\ndata_with_cat = data_with_cat.drop(['SalePrice'],axis=1)","511fabc4":"data_with_dummies = pd.get_dummies(data_with_cat, drop_first = True)","dea71c3d":"cols = ['logPrice','OverallQual', 'GrLivArea', 'GarageCars', 'GarageArea',\n       'TotalBsmtSF', '1stFlrSF', 'FullBath', 'TotRmsAbvGrd', 'YearBuilt',\n        'Neighborhood_Blueste', 'Neighborhood_BrDale',\n       'Neighborhood_BrkSide', 'Neighborhood_ClearCr',\n       'Neighborhood_CollgCr', 'Neighborhood_Crawfor',\n       'Neighborhood_Edwards', 'Neighborhood_Gilbert',\n       'Neighborhood_IDOTRR', 'Neighborhood_MeadowV',\n       'Neighborhood_Mitchel', 'Neighborhood_NAmes',\n       'Neighborhood_NPkVill', 'Neighborhood_NWAmes',\n       'Neighborhood_NoRidge', 'Neighborhood_NridgHt',\n       'Neighborhood_OldTown', 'Neighborhood_SWISU',\n       'Neighborhood_Sawyer', 'Neighborhood_SawyerW',\n       'Neighborhood_Somerst', 'Neighborhood_StoneBr',\n       'Neighborhood_Timber', 'Neighborhood_Veenker', 'Condition1_Feedr',\n       'Condition1_Norm', 'Condition1_PosA', 'Condition1_PosN',\n       'Condition1_RRAe', 'Condition1_RRAn', 'Condition1_RRNe',\n       'Condition1_RRNn']","de015424":"data_preprocessed = data_with_dummies[cols]","62751c21":"data_preprocessed","e744ecf9":"inputs = data_preprocessed.drop(['logPrice'], axis = 1)\ntarget = data_preprocessed['logPrice']","b56bd353":"scaler = StandardScaler()\nscaler.fit(inputs)","c0baa4f2":"scaled_input = scaler.transform(inputs)","4baee91f":"x_train, x_test, y_train, y_test = train_test_split(scaled_input, target, test_size = 0.4, random_state = 365)","6223a76c":"linReg = LinearRegression()\nlinReg.fit(x_train, y_train)","8cc802df":"y_pred = linReg.predict(x_test)","9fcd98f2":"plt.scatter(y_test,y_pred,alpha = 0.5)\nplt.xlabel('y_train')\nplt.ylabel('y_pred')","44b653b6":"sns.distplot(y_pred - y_test)","865f4d4b":"linReg.score(x_test,y_test)","1317ab71":"df_pred = pd.DataFrame(np.exp(y_pred), columns = ['Predictions'])","e5b31fac":"y_test = y_test.reset_index(drop=True)","9af91e89":"df_pred['Target'] = np.exp(y_test)","d41c8416":"df_pred['Residual'] = df_pred['Target'] - df_pred['Predictions']","aacd5982":"df_pred['Difference %'] =np.absolute((df_pred['Residual']\/df_pred['Target'])*100)","ae115fee":"df_pred","da697f2b":"df_pred.describe()","29d62bec":"OUTLIER DETECTION","445da1e2":"As we saw above there was skewness in the SalePrice, which can be treated using the logarithmic transformation. Let's verify the skewness before and after the transformation.","bbeca18e":"Before we dive into exploring datasets and deploying ML algorithms, it would be nice to look into the SalePrice variable as it's the reason of our quest.","5481429a":"The data consists of 1460 rows and 81 columns","a3987fe2":"If not perfectly linear, we are still able to see some improvement in linearity after applying log transformation.","0e6f4ff4":"To my knowledge and the variables present in the dataset. I classify the variables into 4 categories which one looks upon while deciding a house to buy.\n1. SIZE\/AREA - LotArea, TotalBsmntSF, Bedroom, GrLivArea\n2. LOCATION - Neighborhood, Condition1 ( Proximity to main road )\n3. BUILT - YearBuilt\n4. QUALITY - OverallQual","298e0891":"We got close in estimating the price correctly (min being 0.02% and third quartile of data being under 7.46%), but you can see the maximum difference % to 97%, which is clearly off the mark.","175f6070":"Looking from the about scatter plots some factors need to be treated for linearity before applying the regression model.\n1. OverallQual\n2. GarageArea\n3. TotalBsmtSF\n4. 1stFlrSF\n5. YearBuilt","e787ec08":"Going by the definition, positve skewness implies that more number of houses are being sold for price less than the average value.","df9ceb43":"# Step 1 : Analysing 'SalePrice'","2822af36":"Looking at the heatmap, the factors having a strong correlation with SalePrice I could see are : OverallQual, GrLivArea, GarageCars, GarageArea. We should also consider mild correlated factors which could be : YearBuilt, 1stFlrSF, TotalBsmntSF.\nAnyways, let's just take the top 10 factors depending upon the correlation with SalePrice.","294a1673":"Thus, we dont have any duplicate value in the data set.","7a320485":"# Step 3 : Checking conditions for Linear Model","0e6a80a2":"This probability density graph verifies the Normality assumption ( If error terms are not normal, then the standard errors of OLS estimates won\u2019t be reliable. ) for LinearRegression as the error terms are normally distributed.","7fc82cf0":"See, by mere applying the log transformation the skewness got reduced to near 0 i.e. close to Normally Distributed Graph. Also, let's check the density plot for same.","88f9ad25":"Let's read our data into raw_data as a dataset and examine the contents and shape ","fdbb0e25":"Our dataset is almost ready, but before we dive into modelling and predictions let's include the dummy variables for categorical data that we haven't used till now. At the initial stage we included location as a factor determinig the SalePrice of a house.  I'll add the 'Neighborhood' and 'Condition1' columns and create dummy variables.","d905342a":"Now coming to homoscedasticity, we already implemented the log transformation which is the best fix for heteroscedasticity. Thus, we don't need any other fix or tansformation.","63d813a5":"For other columns, it's upto you how you treat your data. If you have expertise in the concerned field, you could treat the missing values accordingly, else (my case here): None of these columns have a strong correlation with SalePrice. Thus, could remove the entire column.\nAlso, for the 'Electrical' column we can just remove the row containing missing value, as only a single value is missing.","4495195f":"Autocorrelation needs to checked when the data is a time series. Observations here are not coming from a time series or a panel data. These are just the snapshot of current situation, where it's different for each customer.","3c293814":"This is not simply a linear regression but a log linear regression as our dependent variable is logarithmic of SalePrice","e9b76a82":"# Intuitive parameters affecting SalePrice","4304db8d":"I'll be using the box and whisker plot method to detect the outliers.\n1. I used the flooring and capping techique to mark the boundary.\n2. I used the outer boundary to remove the confirmed outliers and not the suspected outliers. If you wish you can try removing the suspected outliers as well.","979aaaca":"# Linear Regression Model","79ce3395":"Best way to check the correlation between parameters is i guess, HeatMap. Let's check whether our intuition about factors affecting SalePrice is correct or does it differs in actual.","b5c74314":"It seems that the data for columns with more than 15% null values i.e. PoolQC, MiscFeatur, Alley, Fence, FireplaceQu, LotFrontage is missing a lot. Trying to replace these values by mean\/median\/mode would definitely mean changing the distribution of the dataset. For example if we try to replace the missing values by mean value, it would imply that we have deviated the dataset toward mean.","a37e4c28":"# Step 2 : Data Cleaning","22c0f5df":"1. Linearity - Check using scatter plots\n2. No Endogeneity\n3. Homoscedasticity\n4. No autocorrelation","5209857c":"Kurtosis : The measure of outliers. Leptokurtic (positive kurtosis) implies that our dataset has heavy outliers","5d29d1c7":"The minimum price isn't negative. Thus, one less thing to worry.","fc181867":"Let's try to visualize whether our predicted values form a linear relationship with our training data. We create a scatter plot between y-pred and y-train."}}