{"cell_type":{"6fc9e96a":"code","d0145e95":"code","511ca1d2":"code","e97219ec":"code","42c35214":"code","8d87b54e":"code","a1876ca6":"code","840ee631":"code","89d82c30":"code","c91c3d70":"code","da28b90b":"code","77011493":"code","99c1ce97":"code","ebbfa9c9":"code","75503c8c":"code","4fbc7dcd":"code","c9611903":"code","31dfed4c":"code","57123a5a":"code","f792a0da":"code","0d64f418":"code","b9b8cf52":"code","19d171d3":"markdown"},"source":{"6fc9e96a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","d0145e95":"import tensorflow as tf\nfrom tensorflow import keras\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.layers import Dense, Flatten,Conv2D, MaxPooling2D, Dropout\nfrom tensorflow.keras.models import Sequential\n\nimport pandas as pd\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns","511ca1d2":"(train_images, train_labels), (test_images, test_labels) = keras.datasets.fashion_mnist.load_data()","e97219ec":"class_name = [\"T-shirt\",\"Trouser\",\"Pullover\",\"Dress\",\"Coat\",\"Sandal\", \"Shirt\",\"Sneaker\",\"Bag\",\"Boot\"]","42c35214":"#6000 images of pixel 28,28\nprint(\"train images shape\",train_images.shape)\nprint(\"test images shape\",test_images.shape)","8d87b54e":"#create validation set\ntrain_images = train_images[5000:]\ntrain_labels = train_labels[5000:]\n\nval_images = train_images[:5000]\nval_labels = train_labels[:5000]","a1876ca6":"train_images.shape","840ee631":"for i in range(0,5):\n   plt.imshow(val_images[i], cmap='Greys')\n   plt.title(class_name[val_labels[i]]) \n   plt.axis('off')\n   plt.show()","89d82c30":"sns.countplot(train_labels)","c91c3d70":"sns.countplot(val_labels)","da28b90b":"sns.countplot(test_labels)","77011493":"train_images = train_images.reshape(55000,28,28,1)\nval_images= val_images.reshape(5000,28,28,1)\ntest_images = test_images.reshape(10000,28,28,1)\ntrain_images = train_images\/255\nval_images = val_images\/255\ntest_images = test_images\/255","99c1ce97":"model = Sequential()\nmodel.add(Conv2D(64,7,activation='relu', padding='same',input_shape=[28,28,1]))\nmodel.add(MaxPooling2D(2))\nmodel.add(Conv2D(128,3,activation='relu', padding='same'))\nmodel.add(Conv2D(128,3,activation='relu', padding='same'))\nmodel.add(MaxPooling2D(2))\nmodel.add(Conv2D(256,3,activation='relu', padding='same'))\nmodel.add(Conv2D(256,3,activation='relu', padding='same'))\nmodel.add(MaxPooling2D(2))\nmodel.add(Flatten())\nmodel.add(Dense(128,activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(64,activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(10,activation='softmax'))","ebbfa9c9":"model.summary()","75503c8c":"model.layers","4fbc7dcd":"model.layers[1].name","c9611903":"model.compile(loss='sparse_categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])\nhistory = model.fit(train_images,train_labels,epochs=30,validation_data=(val_images,val_labels))","31dfed4c":"pd.DataFrame(history.history).plot(figsize=(8,5))\nplt.grid(True)\nplt.gca().set_ylim(0,1)\nplt.show()","57123a5a":"pd.DataFrame(history.history).boxplot()","f792a0da":"model.evaluate(test_images,test_labels, verbose=0)","0d64f418":"y_preds = model.predict_classes(test_images)","b9b8cf52":"confusion_matrix(test_labels,y_preds)","19d171d3":"val_images.shape"}}