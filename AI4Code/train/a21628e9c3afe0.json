{"cell_type":{"af5620d3":"code","25728844":"code","f6773fdb":"code","f0883376":"code","ac28696e":"code","65de71ca":"code","56869215":"code","5b4dae05":"code","a15fc346":"code","9d2a60b8":"code","e5681374":"code","ae962b22":"code","5594f822":"code","83a0211b":"code","62af5854":"code","60edd1eb":"code","9fef72d3":"code","2ad8ec7c":"code","3b51e09a":"markdown"},"source":{"af5620d3":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nimport os\nimport re","25728844":"print(os.listdir('..\/input'))","f6773fdb":"train_df=pd.read_csv('..\/input\/titanic\/train.csv')","f0883376":"gender_sub_df=pd.read_csv('..\/input\/titanic\/gender_submission.csv')","ac28696e":"gender_sub_df.head(10)","65de71ca":"train_df.head()","56869215":"train_df.shape","5b4dae05":"train_df.info()","a15fc346":"#finding the total number of null values for each column\ntrain_df.isnull().sum()","9d2a60b8":"#finding survival rate\n\ndf=(train_df.groupby('Survived')['PassengerId'].nunique()*100\/train_df['PassengerId'].nunique()).to_frame(name='percent').reset_index()\ndef func(x):\n    if x['Survived']==0:\n        return 'dead'\n    elif x['Survived']==1:\n        return 'alive'\ndf['status']=df.apply(func,axis=1)\ndf.pivot(index='Survived',columns='status',values='percent').plot.bar()\nplt.ylabel('percent')\nplt.title('Survival rate of passengers')\nplt.show()","e5681374":"#checking for the categorical,non-categorical columns in train_dataset\ntrain_df.nunique().sort_values()\n#only survived,sex,pclass,embarked columns are categorical columns","ae962b22":"#percent of males and females who lived\ndf1=(train_df.groupby(['Sex','Survived'])['PassengerId'].nunique()*100\/train_df.groupby('Sex')['PassengerId'].nunique()).to_frame(name='percentage').reset_index()\n\ndf2=df1.pivot(index='Sex',columns='Survived',values='percentage')\ndf2.plot.bar()\nplt.xlabel('status')\nplt.ylabel('%measure')\nplt.title('Survival rate\\nmales v\/s females')\nplt.show()","5594f822":"#Age distribution to show survived v\/s dead\nx1=train_df.loc[train_df['Survived']==0,'Age']\nx2=train_df.loc[train_df['Survived']==1,'Age']\nplt.hist(x1,bins=10,alpha=0.5,label='dead')\nplt.hist(x2,bins=10,alpha=0.5,color='green',label='alive')\nplt.legend()\nplt.show()","83a0211b":"#drawing bar graphs to find the survival rate for different age group\ndef func(x):\n    var='0'\n    if x['Age']<=10:\n        var='(0,10)'\n    elif x['Age']>10 and x['Age']<=20:\n        var='(11,20)'\n    elif x['Age']>20 and x['Age']<=30:\n        var='(21,30)'\n    elif x['Age']>30 and x['Age']<=40:\n        var='(31,40)'\n    elif x['Age']>40 and x['Age']<=50:\n        var='(41,50)'\n    elif x['Age']>50 and x['Age']<=60:\n        var='(51,60)' \n    elif x['Age']>60 and x['Age']<=70:\n        var='(61,70)'\n    elif x['Age']>70 and x['Age']<=80:\n        var='(71,80)'\n    return var\ntrain_df1=train_df.loc[train_df['Age'].notna(),['PassengerId','Age','Survived']]\ntrain_df1['age_group']=train_df1.apply(func,axis=1)\ndf=(train_df1.groupby(['Survived','age_group'])['PassengerId'].nunique()*100\/train_df1.groupby('age_group')['PassengerId'].nunique()).to_frame(name='percent').reset_index()\ndf.pivot(index='age_group',columns='Survived',values='percent').plot.bar()\nplt.ylabel('percent_measure')\nplt.title('Survival rate by age_group')\nplt.show()","62af5854":"#finding all the unique titles\npattern='(\\w+\\.)'\ndef func(x):\n    if re.search(pattern,x['Name']):\n        return re.search(pattern,x['Name']).group()\n    else:\n        return None\ntrain_df['title']=train_df.apply(func,axis=1)\ntrain_df['title'].unique()\n    ","60edd1eb":"#survival rate depending upon the number of siblings\ndf1=(train_df.groupby(['SibSp','Survived'])['PassengerId'].nunique()*100\/train_df.groupby('SibSp')['PassengerId'].nunique()).to_frame(name='percent').reset_index()\ndf1.pivot(index='SibSp',columns='Survived',values='percent').plot.bar()\nplt.xlabel('Number of siblings')\nplt.ylabel('percent_measure')\nplt.title('Survival rate by total siblings')\nplt.show()","9fef72d3":"#finding the average price per class\ndf1=train_df.groupby('Pclass')['Fare'].mean().to_frame(name='avgfare').reset_index()\ndf2=train_df.groupby('Pclass')['PassengerId'].nunique().to_frame(name='totalpassengers').reset_index()\ndf3=pd.merge(df1,df2,on='Pclass',how='inner')\ndf3","2ad8ec7c":"#dividing the fare into 4 ranges(low,mid,mid_high,premium) and finding the survival rate of the passengers belonging to\n#these 4 groups\ndef func(x):\n    if x['Fare']<=10:\n        return 'low'\n    elif x['Fare']>10 and x['Fare']<=20:\n        return 'mid'\n    elif x['Fare']>20 and x['Fare']<=50:\n        return 'mid_high'\n    else:\n        return 'premium'\ntrain_df['farecat']=train_df.apply(func,axis=1)\ndf=(train_df.groupby(['Survived','farecat'])['PassengerId'].nunique()*100\/train_df.groupby('farecat')['PassengerId'].nunique()).to_frame(name='percent').reset_index()\ndf.pivot(index='farecat',columns='Survived',values='percent').plot.bar()\nplt.xlabel('farecategory')\nplt.ylabel('percent_measure')\nplt.title('Survival rate by fare categories')\nplt.show()","3b51e09a":"## df1=(train_df.groupby('Pclass')['PassengerId'].nunique()).to_frame(name='totalpaassengers').reset_index()\n(train_df.groupby('Pclass').mean('Fare')).to_frame(name='avgfare').reset_index()\n"}}