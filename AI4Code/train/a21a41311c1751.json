{"cell_type":{"f3e7a732":"code","dc6c8409":"code","82de18f7":"code","8a2e259f":"code","749ee68b":"code","0e55cabf":"code","78828641":"code","d63ef72d":"code","8bb0f5b0":"code","c460c11f":"code","8aca416d":"code","c3b8bb99":"code","4c436a26":"code","b3204deb":"markdown","f08e7ff6":"markdown","fc642420":"markdown","4d978715":"markdown","32dea5a6":"markdown","fe0c008f":"markdown","53db7bb5":"markdown","55eba095":"markdown","e1aa4352":"markdown","ac02a3a9":"markdown","4feb4ef1":"markdown"},"source":{"f3e7a732":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","dc6c8409":"dataset = pd.read_csv(\"..\/input\/50-startup-companies\/50_Startups.csv\")","82de18f7":"dataset.head()","8a2e259f":"X = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, -1].values","749ee68b":"print(X)","0e55cabf":"print(y)","78828641":"#This code will change the categorical column into binary column\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')\nX = np.array(ct.fit_transform(X))","d63ef72d":"print(X)","8bb0f5b0":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","c460c11f":"from sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(X_train,y_train)","8aca416d":"y_pred = regressor.predict(X_test)\nnp.set_printoptions(precision=2)#This is used to only get values in 2 decimals.","c3b8bb99":"print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","4c436a26":"from sklearn.metrics import r2_score\nr2_score(y_test, y_pred)","b3204deb":"Now we are going to vertically concatinate Predicted Results with Test Results","f08e7ff6":"Please note that, there is no need to apply **Feature Scaling** here because in the Multi Linear Regression we have coefficients that will multiply with each feature, therefore it does not matter that some features\nhave higher values than others because coefficients will put every feature on scale.","fc642420":"Splitting the dataset into Training set and Test set","4d978715":"The dataset we have here belongs to 50 startups companies. Companies are going to be in a venture capitalist fund \nchallenge. We have 5 columns in dataset (R&D Spend,Administration, Marketing Spend, Profit & State). \nIn data we have information regarding how much the company in financial year has spend on different departments \nwith respective profit and state in which companies are operational.\nThe challenge here is that, all data is totally anonomous so we do not know the companies but we have to analyze \nthese 50 companies and create model that will help venture capitalists in which type of company they should \ninvest to maximize the profit.\n\nFeatures: R&D Spend, Administration, Marketing Spend, State\nTarget Variable: Profit","32dea5a6":"Splitting data into (X contains Features and y contains dependent variable)","fe0c008f":"As you can see that there are multiple descriptive values appearing in State Column. we have to apply **OneHotEncoding**, that will\nconvert descriptve values of State Column into Binary values and split into 3 different columns.","53db7bb5":"Encoding Categorical Data","55eba095":"As you can see above that our model accuracy is **93%** which is very good. So, that concludes the Basic implementation of **Multiple Linear Regression Model**. Please feel free to add in case i missed something and correct me if there is any mistake.","e1aa4352":"We can clearly see two vectors above. The left one is predicted profits and right one is real\nprofits from test set. As you can see in results that most of the predicted values are very close when we compare them with real values on right side.\nNow Lets evaluate the performance of our Model. There are multiple methods to evaluate model but we are going to use **RSquare** method for model evaluation.","ac02a3a9":"Importing the Libraries","4feb4ef1":"Importing the Dataset"}}