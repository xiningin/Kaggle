{"cell_type":{"8fdca35b":"code","6f340fc5":"code","b5e48f5f":"code","cb312fb8":"code","d38d4e7c":"code","159cc23b":"code","69eb175c":"code","33696ca7":"code","a46c1e7f":"code","57f1b2b8":"code","97d94f0d":"code","10357716":"markdown","c2dfe61d":"markdown","974a0c86":"markdown","b6aa0904":"markdown"},"source":{"8fdca35b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f340fc5":"# Di chuy\u1ec3n \u0111\u1ebfn th\u01b0 m\u1ee5c ch\u1ee9a d\u1eef li\u1ec7u \ncd \"\/kaggle\/input\/protonx-tf03-linear-regression\/\"","b5e48f5f":"trainDataset = pd.read_csv(\"trainDataset.csv\")","cb312fb8":"trainDataset.head()","d38d4e7c":"# Th\u1ef1c hi\u1ec7n chia b\u1ed9 d\u1eef li\u1ec7u trainDataset th\u00e0nh t\u1eadp Train v\u00e0 Validation \n# Th\u1ef1c hi\u1ec7n l\u1ef1a ch\u1ecdn c\u00e1c \u0111\u1eb7c tr\u01b0ng quan tr\u1ecdng (c\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng h\u1ebft c\u00e1c \u0111\u1eb7c tr\u01b0ng, m\u00e0 c\u1ea7n l\u1ef1a ch\u1ecdn nh\u1eefng \u0111\u1eb7c tr\u01b0ng mang t\u00ednh \u1ea3nh h\u01b0\u1edfng)\n# Th\u1ef1c hi\u1ec7n Train model \n# Ph\u01b0\u01a1ng th\u1ee9c \u0111\u00e1nh gi\u00e1: Mean Square Error ","159cc23b":"# \u0110\u1ecdc d\u1eef li\u1ec7u c\u1ee7a b\u1ed9 submission \nsubmissionDataset = pd.read_csv(\"submissionDataset.csv\")","69eb175c":"submissionDataset.head()","33696ca7":"# Th\u1ef1c hi\u1ec7n d\u1ef1 \u0111o\u00e1n gi\u00e1 tr\u1ecb c\u1ee7a tr\u01b0\u1eddng \"cnt\"\n# predictDataset: b\u1ed9 d\u1eef li\u1ec7u m\u00e0 b\u1ea1n \u0111\u00e3 th\u1ef1c hi\u1ec7n d\u1ef1 \u0111o\u00e1n \npredictDataset = submissionDataset ","a46c1e7f":"# File submit l\u00ean Kaggle ch\u1ec9 c\u1ea7n 2 tr\u01b0\u1eddng th\u00f4ng tin sau: \ncolumn = [\"id\", \"cnt\"]","57f1b2b8":"submission = predictDataset[column]","97d94f0d":"# L\u01b0u file csv v\u00e0 submit \n# D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u sang ph\u1ea7n output trong thanh sidebar ph\u00eda b\u00ean ph\u1ea3i \nsubmission.to_csv(\"\/kaggle\/working\/submission.csv\", index=False)\n\n# Download \u1edf ph\u00eda thanh sidebar b\u00ean c\u1ea1nh v\u00e0 submit l\u00ean Kaggle ","10357716":"![image.png](attachment:9dbd101d-a7ee-4f84-9d94-4dc200054998.png)","c2dfe61d":"## T\u1ea1o File Submit","974a0c86":"# H\u01b0\u1edbng d\u1eabn Submit ","b6aa0904":"# \u0110\u1ecdc d\u1eef li\u1ec7u "}}