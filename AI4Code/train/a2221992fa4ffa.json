{"cell_type":{"4c663877":"code","6f704b55":"code","f51ce1b0":"code","c08fcefb":"code","dc532669":"code","8075510e":"code","24e61cd7":"code","a68f7c0b":"code","efd207df":"code","0acedfba":"code","25bbc34f":"code","c1846553":"code","2f7a1b2e":"code","2fe6c6b1":"code","8e3833a8":"code","7c2ff9a9":"code","2d0834a6":"code","5fd14f38":"code","15e88fdb":"code","f962ffb5":"code","22755519":"code","b6211968":"code","f85cf0dd":"code","c58f29c8":"code","fe08075f":"code","b7cc4e45":"code","98eac14b":"code","c6768a7b":"code","48daaebe":"code","dbf7c639":"code","ec7baf9f":"code","6bb08846":"code","37a7bf08":"code","162129f6":"code","84fd7983":"code","bf30d510":"code","83144552":"code","bb4c323c":"code","6489ea5a":"code","ffdff080":"code","3f871e94":"code","94931969":"code","60a7a8c4":"code","97e21313":"code","c0cf21f0":"code","b3188155":"code","faf6bb81":"code","fc7754ab":"code","c2c253b0":"code","a0837eab":"code","1bd0fd8f":"code","67b3ca8e":"code","9f3f3367":"code","8401ad87":"code","5b584e92":"code","806fbdd1":"code","37cb3087":"code","dc9ee8e6":"code","df8ad9eb":"code","bd4556d6":"code","5872ae97":"code","19f3d98e":"code","e7326f38":"code","ab4fc42c":"code","70321780":"code","d07b5a20":"code","4b68af71":"code","72da09eb":"code","4d256681":"code","0de43a20":"code","6f5cf662":"code","17986c80":"code","0b2f7b6c":"code","75753589":"code","8bcfbc41":"markdown","becd33b4":"markdown","7c662681":"markdown","2228ff38":"markdown","33ca7257":"markdown","81883f0f":"markdown","29952c7c":"markdown","b0c2a24e":"markdown","5709e56b":"markdown","2cf473e3":"markdown","f42a3b2e":"markdown","d374edd7":"markdown","9e32914e":"markdown","a9b3ee88":"markdown","97c14b50":"markdown","c3f0e641":"markdown","d1d5eb83":"markdown","60774b20":"markdown"},"source":{"4c663877":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\n\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score","6f704b55":"dataset = pd.read_csv('..\/input\/50-startups-multiple-linear-regression\/50_startups_dataset.csv')","f51ce1b0":"type(dataset)","c08fcefb":"len(dataset)","dc532669":"dataset.shape","8075510e":"dataset.ndim","24e61cd7":"dataset.head()","a68f7c0b":"dataset.tail()","efd207df":"dataset.iloc[31: 34]","0acedfba":"dataset.sample(2)","25bbc34f":"dataset.info()","c1846553":"dataset.describe()","2f7a1b2e":"dataset.columns","2fe6c6b1":"dataset['Profit'].max()","8e3833a8":"dataset.sort_values(by=\"Profit\").tail()","7c2ff9a9":"dataset.loc[:, [\"R&D Spend\", \"Marketing Spend\"]].head()","2d0834a6":"dataset.isnull().sum()","5fd14f38":"# To drop any rows that have missing data.\n# dataset.dropna(how=\"any\")","15e88fdb":"dataset.groupby(\"State\").sum()","f962ffb5":"dataset.groupby('State').count()","22755519":"dataset.groupby(\"State\").size()","b6211968":"sns.countplot(x='State', data=dataset)\nplt.show()","f85cf0dd":"sns.scatterplot(data=dataset, x=\"State\", y=\"Profit\")\nplt.show()","c58f29c8":"sns.distplot(dataset['R&D Spend'], color='green')\nplt.show()","fe08075f":"sns.distplot(dataset['Administration'], color='red')\nplt.show()","b7cc4e45":"sns.distplot(dataset['Marketing Spend'], color='orange')\nplt.show()","98eac14b":"dataset.head(3)","c6768a7b":"# Encoding categorical data","48daaebe":"# from sklearn.preprocessing import OneHotEncoder","dbf7c639":"state = pd.get_dummies(dataset['State'], drop_first=True)","ec7baf9f":"state.head(3)","6bb08846":"dataset = pd.concat([state, dataset], axis=1)","37a7bf08":"dataset.head(3)","162129f6":"dataset.drop(['State'], axis=1, inplace=True)","84fd7983":"dataset.head(3)","bf30d510":"X = dataset.iloc[:, :-1].values  # features or predictor\ny = dataset.iloc[:, -1].values   # target ","83144552":"type(X)","bb4c323c":"type(y)","6489ea5a":"X.shape","ffdff080":"X.ndim","3f871e94":"y.shape","94931969":"y.ndim","60a7a8c4":"X[:3, :]","97e21313":"np.set_printoptions(precision=2, suppress=True)\n# suppress : bool, optional\n#     If True, always print floating point numbers using fixed point\n#     notation, in which case numbers equal to zero in the current precision\n#     will print as zero.  If False, then scientific notation is used when\n#     absolute value of the smallest number is < 1e-4 or the ratio of the\n#     maximum absolute value to the minimum is > 1e3. The default is False.","c0cf21f0":"np.array(4372.56921)  # Example ","b3188155":"X[:3, :]","faf6bb81":"y","fc7754ab":"# from sklearn.model_selection import train_test_split","c2c253b0":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","a0837eab":"# from sklearn.linear_model import LinearRegression","1bd0fd8f":"model = LinearRegression().fit(X_train, y_train)","67b3ca8e":"# model","9f3f3367":"y_pred = model.predict(X_test)","8401ad87":"y_pred","5b584e92":"# Comparing the predicted_profit with actual_profit \nnp.concatenate(( y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1) ), axis=1)","806fbdd1":"# np.nditer?","37cb3087":"for p1, p2 in np.nditer((y_test, y_pred)):\n    print(f\"[{p2}], [{p1}]\")  ","dc9ee8e6":"# Evaluate the test & train score performance","df8ad9eb":"model.score(X_test, y_test) ","bd4556d6":"model.score(X_train, y_train)","5872ae97":"# from sklearn.metrics import r2_score","19f3d98e":"r2_score(y_test, y_pred)","e7326f38":"model.intercept_    # bo","ab4fc42c":"model.coef_","70321780":"# Istanbul, Pakistan, R&D Spend, Administration, Marketing Spend","d07b5a20":"# Y = b0 + b1X1 + b2X2 + ... bnXn  + e           # MLR","4b68af71":"# Y = b0 + b1X1 + b2X2 + b3X3 + b4X4 + b5X5 + e   # MLR","72da09eb":"print(model.predict([[0, 0, 160000, 130000, 300000]]))","4d256681":"# 0, 0, 160000, 130000, 300000     --> scalars\n# [0, 0, 160000, 130000, 300000]   --> 1D array\n# [[0, 0, 160000, 130000, 300000]] --> 2D array","0de43a20":"model.intercept_","6f5cf662":"model.coef_","17986c80":"# Y = b0 + b1X1 + b2X2 + b3X3 + b4X4 + b5X5","0b2f7b6c":"Profit = 42554.168 + -959.28416006 * 0 + 699.36905251 * 0 + 0.77346719 * 160000 + 0.0328846 * 130000 + 0.03661003 * 300000","75753589":"Profit","8bcfbc41":"Therefore, our model predicts that the profit of a Californian startup which spent 160000 in R&D, 130000 in Administration and 300000 in Marketing is $181566,92.","becd33b4":"#### 1 - Importing the libraries","7c662681":"#### 3 - EDA","2228ff38":"<i><b>How do I use my multiple linear regression model to make a single prediction, for example, the profit of a startup with R&D Spend = 160000, Administration Spend = 130000, Marketing Spend = 300000 and State = California?<\/b><\/i>","33ca7257":"## Happy Machine Learning :)","81883f0f":"#### 6 - Predicting the Test set Results","29952c7c":"Therefore, the equation of our multiple linear regression model is:","b0c2a24e":"### Multiple Linear Regression (MLR)","5709e56b":"### Question 2: ","2cf473e3":"##### Data Preparing","f42a3b2e":"#### 5 - Training the Multiple Linear Regression Model on the Training set","d374edd7":"#### 2 - Importing the dataset","9e32914e":"<b>Important Note 1:<\/b> Notice that the values of the features were all input in a double pair of square brackets. That's because the \"predict\" method always expects a 2D array as the format of its inputs. And putting our values into a double pair of square brackets makes the input exactly a 2D array. Simply put:","a9b3ee88":"<b>Important Note 2:<\/b> Notice also that the \"California\" state was not input as a string in the last column but as \"0, 0\" in the first two columns. That's because of course the predict method expects the one-hot-encoded (categorical) values of the state, and as we see in the second row of the matrix of features X, \"California\" was encoded as \"0, 0\". And be careful to include these values in the first two columns, not the last two ones, because the dummy variables are always created in the first columns.","97c14b50":"#### 4 - Splitting the dataset into the Training set and Test set","c3f0e641":"### Question 1: ","d1d5eb83":"### Machine Learning Algorithm - Regression","60774b20":"<i><b>How do I get the final regression equation y = b0 + b1 x1 + b2 x2 + ... with the final values of the coefficients?<\/b><\/i>"}}