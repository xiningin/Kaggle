{"cell_type":{"1f497a56":"code","70fbc170":"code","0bf10a5d":"code","2c30fda4":"code","38012509":"code","b0b5ee80":"code","010403e6":"code","59bd79bc":"code","cfbe7e67":"code","36543ee8":"code","962c56a4":"markdown","9e72e13a":"markdown"},"source":{"1f497a56":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","70fbc170":"train_csv_path = '\/kaggle\/input\/house-prices-advanced-regression-techniques\/train.csv'\ntest_csv_path  = '\/kaggle\/input\/house-prices-advanced-regression-techniques\/test.csv'\nraw_train_data = pd.read_csv(train_csv_path , index_col='Id')\nraw_test_data  = pd.read_csv(test_csv_path , index_col='Id')","0bf10a5d":"import missingno as miss\nmiss.matrix(raw_train_data , labels=True ,  fontsize=10)","2c30fda4":"y = raw_train_data.SalePrice\nraw_train_data.drop(columns=['SalePrice'] , axis=1 , inplace=True)","38012509":"raw_train_data.info()","b0b5ee80":"from sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import Normalizer , StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.pipeline import Pipeline , make_pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import OrdinalEncoder , LabelEncoder , OneHotEncoder\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor","010403e6":"X_train, X_valid, y_train, y_valid = train_test_split(raw_train_data, y,test_size=0.2)\ncatgorical_columns = [col_name for col_name in X_train.columns if X_train[col_name].dtype == 'object']\nnumerical_columns = [col_name for col_name in X_train.columns if X_train[col_name].dtype in ['int64', 'float64']]","59bd79bc":"\n\nnumerical_columns_transformer = Pipeline([\n    ('imputer' , SimpleImputer(strategy='mean')),\n    ('normalizer' , MinMaxScaler())\n])\n\ncategorical_columns_transformer = Pipeline([\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('onehot', OneHotEncoder(handle_unknown = 'ignore'))\n])    \n\n\npreprocessor = ColumnTransformer([\n        ('numerical'  , numerical_columns_transformer   , numerical_columns),\n        ('catigorical', categorical_columns_transformer , catgorical_columns)\n    ])\n\nmodel = LinearRegression()\n\n\nfull_PL = Pipeline(steps=[\n    ('preprocessor', preprocessor),\n    ('model', model)\n])\n\nfull_PL.fit(X_train, y_train)\nprint(full_PL.score(X_train, y_train) * 100)\nprint(full_PL.score(X_valid, y_valid) * 100)","cfbe7e67":"predictions = full_PL.predict(raw_test_data)\noutput = pd.DataFrame({'Id': raw_test_data.index,'SalePrice': predictions})\noutput.to_csv('submission.csv', index=False)","36543ee8":"output","962c56a4":"# import data","9e72e13a":"# visualize the nulls values in data"}}