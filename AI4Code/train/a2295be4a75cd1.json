{"cell_type":{"8aa9f47a":"code","34a65d09":"code","0bfbc75e":"code","d7d3b77c":"code","263715ce":"code","5c36686d":"code","fdee13a7":"code","f7031108":"code","5c00d58a":"code","36627f4d":"code","a3368eb6":"code","8f58b707":"code","a24684db":"code","772a25fa":"code","f98053b3":"code","461c8f08":"code","be5d9559":"code","c1042cab":"code","e22c5754":"code","5f64798b":"code","04cc01f8":"code","734cc783":"code","1d0598ac":"code","b1295ed1":"code","ed0804f1":"code","325edcdf":"code","3613db42":"code","53782b6c":"code","f89253ae":"code","d3441d97":"code","88994823":"code","29fd8bb5":"code","a2692cf0":"code","9b88f066":"code","64bb0804":"markdown"},"source":{"8aa9f47a":"import pandas as pd\nimport numpy as np\ndf=pd.read_csv('\/kaggle\/input\/salary-data-simple-linear-regression\/Salary_Data.csv')\n\ndf.head()","34a65d09":"df.info()","0bfbc75e":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","d7d3b77c":"X=df.iloc[:,:-1]\nX\nX.head()","263715ce":"y=df.iloc[:,-1]\ny\ny.head()","5c36686d":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20)","fdee13a7":"from sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nfrom sklearn.linear_model import LinearRegression","f7031108":"model_1 = LinearRegression()\nmodel_2 = xgb.XGBRegressor()\nmodel_3 = RandomForestRegressor()","5c00d58a":"model_1.fit(X_train, y_train)\nmodel_2.fit(X_train, y_train)\nmodel_3.fit(X_train, y_train)","36627f4d":"pred_1 = model_1.predict(X_test)\npred_2 = model_2.predict(X_test)\npred_3 = model_3.predict(X_test)","a3368eb6":"pred_final = (pred_1+pred_2+pred_3)\/3.0\npred_final","8f58b707":"print(mean_squared_error(y_test, pred_final))","a24684db":"from sklearn.ensemble import GradientBoostingRegressor","772a25fa":"model = GradientBoostingRegressor()","f98053b3":"model.fit(X_train, y_train)","461c8f08":"pred_final = model.predict(X_test)","be5d9559":"print(mean_squared_error(y_test, pred_final))","c1042cab":"import pandas as pd\ndf=pd.read_csv('\/kaggle\/input\/housedata\/data.csv')\n\ndf.head()","e22c5754":"df.info()","5f64798b":"from sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error","04cc01f8":"X=df.iloc[:,[2,3,4,5,6,7,8,9,10,11,12,13]]\n\nX.head()","734cc783":"y=df.iloc[:,1]\n\ny.head()","1d0598ac":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25)","b1295ed1":"from sklearn.ensemble import GradientBoostingRegressor","ed0804f1":"model = GradientBoostingRegressor()","325edcdf":"model.fit(X_train, y_train)","3613db42":"pred_final = model.predict(X_test)","53782b6c":"print(mean_squared_error(y_test, pred_final))","f89253ae":"from sklearn.ensemble import RandomForestRegressor\nimport xgboost as xgb\nfrom sklearn.linear_model import LinearRegression","d3441d97":"model_1 = LinearRegression()\nmodel_2 = xgb.XGBRegressor()\nmodel_3 = RandomForestRegressor()","88994823":"model_1.fit(X_train, y_train)\nmodel_2.fit(X_train, y_train)\nmodel_3.fit(X_train, y_train)","29fd8bb5":"pred_1 = model_1.predict(X_test)\npred_2 = model_2.predict(X_test)\npred_3 = model_3.predict(X_test)","a2692cf0":"pred_final = (pred_1+pred_2+pred_3)\/3.0","9b88f066":"print(mean_squared_error(y_test, pred_final))","64bb0804":"# SECOND DATASET"}}