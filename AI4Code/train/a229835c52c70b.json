{"cell_type":{"8ec1d74b":"code","6746da89":"code","c4e1591f":"code","000874fa":"code","7e0162ae":"code","f050e179":"code","ee4edd2f":"code","4963e88d":"code","2f76e0a3":"code","7b9f7063":"code","2a63ede8":"code","8fa08dcd":"code","a37856dc":"markdown","c955f506":"markdown","a7ef2715":"markdown","91df6437":"markdown","6e635217":"markdown","70bba9fe":"markdown","7d153710":"markdown","a8be904f":"markdown","cb0285f6":"markdown","415faf5d":"markdown","3bdddda6":"markdown","957ae506":"markdown","69e86f39":"markdown"},"source":{"8ec1d74b":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Convolution2D, MaxPooling2D,Flatten\nfrom tensorflow.keras.optimizers import Adam","6746da89":"mnist = tf.keras.datasets.mnist\n(x_train,y_train),(x_test, y_test) = mnist.load_data()\n\n# using cnn your input data must be 4-dimension\nx_train = x_train.reshape(-1,28,28,1)\/255.0\nx_test = x_test.reshape(-1,28,28,1)\/255.0\n\n# one-hot the labels\ny_train = tf.keras.utils.to_categorical(y_train,num_classes=10)\ny_test = tf.keras.utils.to_categorical(y_test,num_classes=10)","c4e1591f":"# define a sequential fucntion\nmodel = Sequential()\n\n# first convolution layer\nmodel.add(Convolution2D(\n        input_shape = (28,28,1),\n        filters = 32,\n        kernel_size = 5,\n        strides = 1,\n        padding = 'same',\n        activation='relu'\n))\n\n# first pooling layer(MAX)\nmodel.add(MaxPooling2D(\n        pool_size = 2,\n        strides = 2,\n        padding = 'same',\n))\n\n# second convolution layer\nmodel.add(Convolution2D(64,5,strides=1,padding='same',activation='relu'))\n\n# second pooling layer(MAX)\nmodel.add(MaxPooling2D(2,2,'same'))\n\n# data flatten (64,7,7,64) \u2192 \uff0864,7*7*64\uff09\nmodel.add(Flatten())\n\n# a full connected layer\nmodel.add(Dense(1024,activation = 'relu'))\n\n# a out put layer (full connected layer)\nmodel.add(Dense(10,activation='softmax'))","000874fa":"# define optimizer and compile the model\nadam = Adam(lr=1e-4 )\nmodel.compile(optimizer=adam,loss='categorical_crossentropy',metrics=['accuracy'])","7e0162ae":"history = model.fit(x_train,y_train,batch_size=64,epochs=30,validation_data=(x_test, y_test))","f050e179":"model.save('mnist.h5')","ee4edd2f":"import tensorflow as tf\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom PIL import Image\nfrom tensorflow.keras.models import load_model","4963e88d":"epochs = 30\nplt.plot(np.arange(30), history.history['val_accuracy'],c='r',label='CNN')\nplt.legend()\nplt.xlabel('epochs')\nplt.ylabel('accuracy')\nplt.show()","2f76e0a3":"img = Image.open('..\/input\/number\/4.png')\nplt.imshow(img)\nplt.axis('off')\nplt.show()","7b9f7063":"image = np.array(img.resize((28,28)).convert('L'))\nplt.imshow(image,cmap='gray')\nplt.axis('off')\nplt.show()","2a63ede8":"image = (255.0-image)\/255.0\nplt.imshow(image, cmap='gray')\nplt.axis('off')\nplt.show()","8fa08dcd":"image = image.reshape(-1,28,28,1)\nmodel = load_model('.\/mnist.h5')\nprediction = model.predict_classes(image)\nprint(prediction)","a37856dc":"### save the trained model","c955f506":"### BINGO !!!","a7ef2715":"### Today we make a model of MNIST data, handwritten digit recognition, and then we can pass in our own pictures to see the accuracy of our model.","91df6437":"### Let's do some data processing\n\n- We normalize the data to facilitate the operation of the model. \n- One-hot encoding data processing for labels.\n- There are two things are very important here\uff1a\n    - We need four-dimensional data in convolutional neural networks.\n    - After one-hot encoding, the output number of the label is 10 (0~9).","6e635217":"### Load the prediction picture we prepared","70bba9fe":"![tf_keras_mnist_1-1%20%281%29.png](attachment:tf_keras_mnist_1-1%20%281%29.png)","7d153710":"Make a prediction","a8be904f":"### Draw a picture of accuracy and cycle","cb0285f6":"We need to consider that some pictures are in color, so we need to perform highlight processing, and then compress the size of the picture into a shape that the convolutional neural network likes (28,28)","415faf5d":"The pictures in the MNISTS data are white and black. In order to improve the success rate, we convert the predicted pictures.","3bdddda6":"### Import libraries","957ae506":"### Import libraries again","69e86f39":"### Build a CNN model"}}