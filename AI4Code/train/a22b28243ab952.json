{"cell_type":{"d376a033":"code","cc3e693f":"code","196efc91":"code","e0db8ae5":"code","39a4cee9":"code","6e3bb19f":"code","f601a8a2":"code","6117d33d":"code","d4a6102f":"code","dcde9694":"code","6a4d6027":"code","bbb6071e":"code","dfc7557a":"code","c1766624":"code","0471890c":"code","e3b9f763":"code","681ab866":"code","cfb32a16":"code","35c1343c":"code","8229c6b6":"code","0b71fbc4":"code","d7c23fa4":"code","ede12927":"code","47eb80c9":"code","0f1ef21b":"code","2b698c51":"code","ec9b40ee":"code","64290288":"code","55c83bde":"code","4b5f0283":"code","18a0b664":"code","70694cd9":"code","a8d1a7e2":"code","9b96380b":"code","1f92fce6":"markdown","a04a5949":"markdown","8c7f20f9":"markdown","828a67e3":"markdown","73c57e02":"markdown","9d60d238":"markdown","ea8311c9":"markdown","24e957d5":"markdown","2b992e0a":"markdown","6b626a0d":"markdown","98030278":"markdown","bede8ad4":"markdown","6d0bcaee":"markdown","817c42bd":"markdown","10391d06":"markdown","e636baef":"markdown","3d3ef89a":"markdown"},"source":{"d376a033":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"whitegrid\")\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nplt.style.use(\"seaborn-notebook\")\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n\n\n\n","cc3e693f":"df=pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report.csv\")","196efc91":"df.head()","e0db8ae5":"df.describe()","39a4cee9":"df.info()","6e3bb19f":"df2021=pd.read_csv(\"\/kaggle\/input\/world-happiness-report-2021\/world-happiness-report-2021.csv\")","f601a8a2":"df2021.head()","6117d33d":"df2021.describe()","d4a6102f":"df2021.info()","dcde9694":"df2021.columns","6a4d6027":"df2021[\"Country name\"].unique()","bbb6071e":"# count regional indicator\n\nsns.countplot(df2021['Regional indicator'])\nplt.xticks(rotation=60)\nplt.show()","dfc7557a":"# distribution of features set 1\n\nlist_features=['Social support','Freedom to make life choices','Generosity','Perceptions of corruption']\nsns.boxplot(data=df2021.loc[:, list_features], orient='v', palette='Set1') # loc t\u00fcm sat\u0131rlar\u0131 se\u00e7 demek\nplt.show()","c1766624":"list_features=['Ladder score','Logged GDP per capita']\nsns.boxplot(data=df2021.loc[:, list_features], orient='v', palette='Set1')\nplt.show()","0471890c":"list_features=['Healthy life expectancy']\nsns.boxplot(data=df2021.loc[:, list_features], orient='v', palette='Set1')\nplt.show()","e3b9f763":"df2021_happiest_unhappiest=df2021[(df2021.loc[:, 'Ladder score']>7.4) | (df2021.loc[:, 'Ladder score'] <3.5)]\nsns.barplot(x='Ladder score', y='Country name',data=df2021_happiest_unhappiest, palette='coolwarm')\nplt.title('Happiest and Unhappiest Countries in 2021')\nplt.show()","681ab866":"plt.figure(figsize=(15,8))\nsns.kdeplot(df2021['Ladder score'], hue=df2021['Regional indicator'],fill=True, linewidth=2)\nplt.axvline(df2021['Ladder score'].mean() , c='black')\nplt.title('Ladder Score Distribution by Regional Indicator')\nplt.show()","cfb32a16":"fig=px.choropleth(df.sort_values(\"year\"),\n                locations=\"Country name\",\n                 color=\"Life Ladder\",\n                 locationmode=\"country names\",\n                 animation_frame=\"year\")\n\n\n\n\nfig.update_layout(title='Life Ladder Comparison by Countries')\n                 \n                 \n                 \nfig.show()\n                 ","35c1343c":"df2021_g=df2021[(df2021.loc[:, \"Generosity\"]>0.4) | (df2021.loc[:, \"Generosity\"]<-0.2)]\nsns.barplot(x=\"Generosity\",y=\"Country name\",data=df2021_g, palette=\"coolwarm\")\nplt.title(\"Most Generous and Most Ungenerous Countries in 2021\")\nplt.show()","8229c6b6":"fig=px.choropleth(df.sort_values(\"year\"),\n                locations=\"Country name\",\n                 color=\"Generosity\",\n                 locationmode=\"country names\",\n                 animation_frame=\"year\")\n\nfig.update_layout(title=\"Generosity Comparison by Countries\")\nfig.show()","0b71fbc4":"sns.swarmplot(x=\"Regional indicator\",y=\"Generosity\", data=df2021)\nplt.xticks(rotation=60)\nplt.title(\"Generous Distribution by Regional Indicator in 2021\")\nplt.show()","d7c23fa4":"pop=pd.read_csv(\"\/kaggle\/input\/world-population-19602018\/population_total_long.csv\")\npop.head()","ede12927":"pop.tail()","47eb80c9":"df[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()","0f1ef21b":"country_continent={}\nfor i in range(len(df2021)):\n    country_continent[df2021[\"Country name\"][i]]=df2021[\"Regional indicator\"][i]\n    all_countries=df[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()\n    all_countries_2021=df2021[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()\n    \n    \n    for x in all_countries:\n        if x not in all_countries_2021:\n            print(x)","2b698c51":"all_countries=df[\"Country name\"].value_counts().reset_index()[\"index\"].tolist()\nall_countries_pop=pop[\"Country Name\"].value_counts().reset_index()[\"index\"].tolist()\n\ndel_cou=[]\nfor x in all_countries:\n    if x not in all_countries_pop:\n        del_cou.append(x)\n        \ndel_cou","ec9b40ee":"df.columns","64290288":"pop_df=df[['Log GDP per capita','Life Ladder','Country name','year', 'Social support', 'Healthy life expectancy at birth',\n           'Freedom to make life choices', 'Generosity', 'region', 'Perceptions of corruption']].copy()\npop_df.head()","55c83bde":"pop_df=pop_df[~pop_df[\"Country name\"].isin(del_cou)]\npop_df=pop_df[~pop_df.year.isin([2006,2005,2007,2018,2019,2020,2021])]\npop_dict={x:{} for x in range(2008,2018)}\nfor i in range(len(pop)):\n    if(pop[\"Year\"][i] in range (2008,2018)):\n        pop_dict[pop[\"Year\"][i]] [pop[\"Country name\"][i]]= pop[\"Count\"][i]","4b5f0283":"population[]\nfor i in pop_def index:\n    population.append(pop_dict[pop_df[\"year\"][i]] [pop_df[\"Country name\"][i]])\n    \npop_df[\"population\"]=population","18a0b664":"fig=px.scatter(pop_df,\n              x=\"Freedom to make life choices\",\n              y=\"Life Ladder\",\n              animation_frame=\"year,\n               animation_group=\"Country name\",\n               size=\"population\",\n               template=\"plotly_dark\",\n               color=\"region\",\n               hover_name=\"Country name\",\n               size_max=60)\nfig.update_layout(title=\"Life ladder and freedom comparison via regions for each year\")\nfig.show()\n               \n               \n              ","70694cd9":"fig=px.scatter(pop_df,\n              x=\"Perceptions of corruption\",\n              y=\"Life Ladder\",\n              animation_frame=\"year,\n               animation_group=\"Country name\",\n               size=\"population\",\n               template=\"plotly_dark\",\n               color=\"region\",\n               hover_name=\"Country name\",\n               size_max=60)\nfig.update_layout(title=\"Life ladder and corruption comparison via regions for each year\")\nfig.show()","a8d1a7e2":"df.corr()\nsns.heatmap(df.corr(), annot=True , fmt=\".2f\",linewidth=0.7)\nplt.title(\"Relationship Between Features\")\nplt.show()","9b96380b":"sns.clustermap(df.corr(), center=0, cmap=\"vlag\", dendrogram_ratio=(0.1,0.2), annot=True, linewidths=0.7, figsize=(15,15))\nplt.show()","1f92fce6":"<a id='2'><\/a>\n## Data Content","a04a5949":"<a id='7'><\/a>\n## Ladder Score Distribution by Countries in Map View","8c7f20f9":"<a id='10'><\/a>\n## Generous Distribution by Regional Indicator in 2021","828a67e3":"<a id='8'><\/a>\n## Most Generous and Most Ungenerous Countries in 2021","73c57e02":"<a id='14'><\/a>\n## Relationship Between Features","9d60d238":"## What will you learn from this project?\n* Bivariate data anlysis\n* Multivariate data analysis\n* Seaborn library visualization techniques:bar,box,kde,swarm,heatmap,clustermap\n* Plotly library visualization  techniques: animated plot and world map","ea8311c9":"<a id='11'><\/a>\n## Relationship Between Happinees and Income","24e957d5":"# WORLD HAPPINESS EXPLANATORY DATA ANALYSIS","2b992e0a":"## Analysis Content\n* 1.[Python Libraries](#1)\n* 2.[Data Content](#2)\n* 3.[Read and Analyse Data](#3)\n* 4.[Data Distribution in 2021](#4)\n* 5.[Happiest and Unhappiest Countries in 2021](#5)\n* 6.[Ladder Score Distribution by Regional Indicator](#6)\n* 7.[Ladder Score Distribution by Countries in Map View](#7)\n* 8.[Most Generous and Most Ungenerous Countries in 2021](#8)\n* 9.[Generous Distribution by Countries in Map View](#9)\n* 10.[Generous Distribution  by Regional Indicator in 2021](#10)\n* 11.[Relationship Between Happinees and Income](#11)\n* 12.[Relationship Between Happinees and Freedom](#12)\n* 13.[Relationship Between Happinees and Corruption](#13)\n* 14.[Relationship Between Features](#14)","6b626a0d":"<a id='13'><\/a>\n## Relationship Between Happinees and Corruption","98030278":"<a id='9'><\/a>\n## Generous Distribution by Countries in Map View","bede8ad4":"<a id='1'><\/a>\n## Python Libraries\n* In this section we import used libraries during this kernel","6d0bcaee":"<a id='5'><\/a>\n## Happiest and Unhappiest Countries in 2021","817c42bd":"<a id='12'><\/a>\n## Relationship Between Happinees and Freedom","10391d06":"<a id='4'><\/a>\n## Data Distirbution in 2021","e636baef":"<a id='6'><\/a>\n## Ladder Score Distribution by Regional Indicator","3d3ef89a":"<a id='3'><\/a>\n## Read and Analyse Data"}}