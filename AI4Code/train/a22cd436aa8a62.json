{"cell_type":{"ef062c9a":"code","31e9b1bd":"code","c409aa55":"code","66deae57":"code","86527af9":"code","fbd275ff":"code","489a634a":"code","27e37a6c":"code","355c203f":"code","1fcc3c1d":"code","35d2a62c":"code","1925c326":"code","1777c601":"code","5786f8ef":"code","6bbf7f32":"code","a10229f4":"code","72bcd135":"code","24eb76de":"code","1021fe00":"code","72a3a462":"code","9973c91b":"code","0df37265":"code","30a7a257":"code","9f788352":"code","3aaa79b3":"code","42546e4a":"code","1d97b955":"code","eed8433d":"markdown","746d889b":"markdown","25f8870b":"markdown","3acef64a":"markdown","cd586c8c":"markdown","0e48c39e":"markdown","2ca77902":"markdown","8d117e46":"markdown","05f268c5":"markdown","8cd10483":"markdown","f1873517":"markdown","4ce21c6f":"markdown","746cdfc5":"markdown","497da5c8":"markdown","08dc45e7":"markdown","06c0dc54":"markdown","b6b80c41":"markdown","798b1307":"markdown","3626ec42":"markdown","d9ca19cf":"markdown","241934e7":"markdown","66f72508":"markdown","0a410614":"markdown","5279c641":"markdown","5a4c65fd":"markdown","a7563111":"markdown","b6248da3":"markdown","96e06655":"markdown","44da6e4b":"markdown","233c9a3f":"markdown","584539b1":"markdown","4e9d6e6a":"markdown"},"source":{"ef062c9a":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler,PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\n%matplotlib inline","31e9b1bd":"file_name='https:\/\/s3-api.us-geo.objectstorage.softlayer.net\/cf-courses-data\/CognitiveClass\/DA0101EN\/coursera\/project\/kc_house_data_NaN.csv'\ndf=pd.read_csv(file_name)","c409aa55":"df.head()","66deae57":"df.dtypes","86527af9":"df.describe()","fbd275ff":"df=df.drop(['Unnamed: 0','id'],axis=1)","489a634a":"df.describe()","27e37a6c":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())\n","355c203f":"mean=df['bedrooms'].mean()\ndf['bedrooms'].replace(np.nan,mean, inplace=True)","1fcc3c1d":"mean=df['bathrooms'].mean()\ndf['bathrooms'].replace(np.nan,mean, inplace=True)","35d2a62c":"print(\"number of NaN values for the column bedrooms :\", df['bedrooms'].isnull().sum())\nprint(\"number of NaN values for the column bathrooms :\", df['bathrooms'].isnull().sum())","1925c326":"df.floors.value_counts().to_frame()","1777c601":"sns.boxplot(x='waterfront',y='price',data=df)","5786f8ef":"df.waterfront.value_counts()","6bbf7f32":"sns.regplot(x='sqft_above',y='price',data=df)","a10229f4":"df.corr()['price'].sort_values()","72bcd135":"X = df[['long']]\nY = df['price']\nlm = LinearRegression()\nlm.fit(X,Y)\nlm.score(X, Y)","24eb76de":"X1 = df[['sqft_living']]\nY1 = df['price']\nlm = LinearRegression()\nlm\nlm.fit(X1,Y1)\nlm.score(X1, Y1)","1021fe00":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]     ","72a3a462":"X2 = df[features]\nY2 = df['price']\nlm.fit(X2,Y2)\nlm.score(X2,Y2)","9973c91b":"Input=[('scale',StandardScaler()),('polynomial', PolynomialFeatures(include_bias=False)),('model',LinearRegression())]","0df37265":"pipe=Pipeline(Input)\npipe\npipe.fit(X,Y)\npipe.score(X,Y)","30a7a257":"from sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nprint(\"done\")","9f788352":"features =[\"floors\", \"waterfront\",\"lat\" ,\"bedrooms\" ,\"sqft_basement\" ,\"view\" ,\"bathrooms\",\"sqft_living15\",\"sqft_above\",\"grade\",\"sqft_living\"]    \nX = df[features]\nY = df['price']\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.15, random_state=1)\n\n\nprint(\"number of test samples:\", x_test.shape[0])\nprint(\"number of training samples:\",x_train.shape[0])","3aaa79b3":"from sklearn.linear_model import Ridge","42546e4a":"from sklearn.linear_model import Ridge\n\nRigeModel = Ridge(alpha=0.1) \nRigeModel.fit(x_train, y_train)\nRigeModel.score(x_test, y_test)","1d97b955":"pr=PolynomialFeatures(degree=2)\nx_train_pr=pr.fit_transform(x_train[features])\nx_test_pr=pr.fit_transform(x_test[features])\n\nRigeModel = Ridge(alpha=0.1) \nRigeModel.fit(x_train_pr, y_train)\nRigeModel.score(x_test_pr, y_test)","eed8433d":"# Module 3: Exploratory Data Analysis","746d889b":"# Module 2: Data Wrangling","25f8870b":"\nWe can replace the missing values of the column <code>'bedrooms'<\/code> with the mean of the column  <code>'bedrooms' <\/code> using the method <code>replace()<\/code>. Don't forget to set the <code>inplace<\/code> parameter to <code>True<\/code>","3acef64a":" Load the csv:  ","cd586c8c":"Import the necessary modules:","0e48c39e":"### Question 8\nUse the list to create a pipeline object to predict the 'price', fit the object using the features in the list <code>features<\/code>, and calculate the R^2.","2ca77902":"### Question 3\nUse the method <code>value_counts<\/code> to count the number of houses with unique floor values, use the method <code>.to_frame()<\/code> to convert it to a dataframe.\n","8d117e46":"### Question 9\nCreate and fit a Ridge regression object using the training data, set the regularization parameter to 0.1, and calculate the R^2 using the test data. \n","05f268c5":"### This will help with Question 8\n\nCreate a list of tuples, the first element in the tuple contains the name of the estimator:\n\n<code>'scale'<\/code>\n\n<code>'polynomial'<\/code>\n\n<code>'model'<\/code>\n\nThe second element in the tuple  contains the model constructor \n\n<code>StandardScaler()<\/code>\n\n<code>PolynomialFeatures(include_bias=False)<\/code>\n\n<code>LinearRegression()<\/code>\n","8cd10483":"Then calculate the R^2. Take a screenshot of your code.","f1873517":"# Data Analysis with Python","4ce21c6f":"### Question 2 \nDrop the columns <code>\"id\"<\/code>  and <code>\"Unnamed: 0\"<\/code> from axis 1 using the method <code>drop()<\/code>, then use the method <code>describe()<\/code> to obtain a statistical summary of the data. Take a screenshot and submit it, make sure the <code>inplace<\/code> parameter is set to <code>True<\/code>","746cdfc5":"### Question 7\nFit a linear regression model to predict the <code>'price'<\/code> using the list of features:","497da5c8":"<b>id<\/b> : A notation for a house\n\n<b> date<\/b>: Date house was sold\n\n\n<b>price<\/b>: Price is prediction target\n\n\n<b>bedrooms<\/b>: Number of bedrooms\n\n\n<b>bathrooms<\/b>: Number of bathrooms\n\n<b>sqft_living<\/b>: Square footage of the home\n\n<b>sqft_lot<\/b>: Square footage of the lot\n\n\n<b>floors<\/b> :Total floors (levels) in house\n\n\n<b>waterfront<\/b> :House which has a view to a waterfront\n\n\n<b>view<\/b>: Has been viewed\n\n\n<b>condition<\/b> :How good the condition is overall\n\n<b>grade<\/b>: overall grade given to the housing unit, based on King County grading system\n\n\n<b>sqft_above<\/b> : Square footage of house apart from basement\n\n\n<b>sqft_basement<\/b>: Square footage of the basement\n\n<b>yr_built<\/b> : Built Year\n\n\n<b>yr_renovated<\/b> : Year when house was renovated\n\n<b>zipcode<\/b>: Zip code\n\n\n<b>lat<\/b>: Latitude coordinate\n\n<b>long<\/b>: Longitude coordinate\n\n<b>sqft_living15<\/b> : Living room area in 2015(implies-- some renovations) This might or might not have affected the lotsize area\n\n\n<b>sqft_lot15<\/b> : LotSize area in 2015(implies-- some renovations)","08dc45e7":"We will split the data into training and testing sets:","06c0dc54":"# Module 1: Importing Data Sets ","b6b80c41":"You will require the following libraries: ","798b1307":"# House Sales in King County, USA","3626ec42":"# Module 4: Model Development","d9ca19cf":"### Question 1 \nDisplay the data types of each column using the attribute dtype, then take a screenshot and submit it, include your code in the image. ","241934e7":"### Question 10\nPerform a second order polynomial transform on both the training data and testing data. Create and fit a Ridge regression object using the training data, set the regularisation parameter to 0.1, and calculate the R^2 utilising the test data provided. Take a screenshot of your code and the R^2.","66f72508":"\nWe also replace the missing values of the column <code>'bathrooms'<\/code> with the mean of the column  <code>'bathrooms' <\/code> using the method <code>replace()<\/code>. Don't forget to set the <code> inplace <\/code>  parameter top <code> True <\/code>","0a410614":"# Module 5: Model Evaluation and Refinement","5279c641":"### Question 4\nUse the function <code>boxplot<\/code> in the seaborn library  to  determine whether houses with a waterfront view or without a waterfront view have more price outliers.","5a4c65fd":"This dataset contains house sale prices for King County, which includes Seattle. It includes homes sold between May 2014 and May 2015.","a7563111":"### Question  6\nFit a linear regression model to predict the <code>'price'<\/code> using the feature <code>'sqft_living'<\/code> then calculate the R^2. Take a screenshot of your code and the value of the R^2.","b6248da3":"We can see we have missing values for the columns <code> bedrooms<\/code>  and <code> bathrooms <\/code>","96e06655":"### Question 5\nUse the function <code>regplot<\/code>  in the seaborn library  to  determine if the feature <code>sqft_above<\/code> is negatively or positively correlated with price.","44da6e4b":"\nWe use the method <code>head<\/code> to display the first 5 columns of the dataframe.","233c9a3f":"We use the method describe to obtain a statistical summary of the dataframe.","584539b1":"\nWe can Fit a linear regression model using the  longitude feature <code>'long'<\/code> and  caculate the R^2.","4e9d6e6a":"\nWe can use the Pandas method <code>corr()<\/code>  to find the feature other than price that is most correlated with price."}}