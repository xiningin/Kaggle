{"cell_type":{"28e27c69":"code","e9d52c9b":"code","92857cb9":"code","d53469a6":"code","dd95d487":"code","ca82d14f":"code","300d1c9c":"code","eea5cb76":"code","effbd34a":"code","6ff9e965":"code","ae117d61":"code","237460cf":"code","0223ca3d":"code","e310c844":"code","5138b34c":"code","b8687d38":"code","e137e666":"code","4a52ce9d":"code","c0f1f001":"code","6e9621b3":"code","f72ff5ec":"code","c155c39f":"code","98a3f1d2":"code","a6c3c0da":"code","76a63c6c":"code","98f72fcd":"code","5317910a":"code","1bd5591c":"code","47990043":"code","f74c9d73":"code","3b12d4aa":"code","911da22e":"code","4b81d4d7":"code","39e15576":"code","c51cd9a9":"code","4223eb6d":"code","20b0d8f2":"code","a1d4cbc5":"code","6d3f0c4d":"code","37be3478":"code","de721372":"code","54607e8d":"markdown","82fdaec9":"markdown","d918c2ce":"markdown","10312ad0":"markdown","adfe5745":"markdown","f0277f36":"markdown","c0dc2816":"markdown","dc0e2b93":"markdown","46f28d43":"markdown","9182b1ac":"markdown","025d0fb1":"markdown","ceece9dc":"markdown","e2a550f1":"markdown"},"source":{"28e27c69":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e9d52c9b":"train=pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","92857cb9":"test=pd.read_csv('\/kaggle\/input\/titanic\/test.csv')","d53469a6":"train.head()","dd95d487":"train.info()","ca82d14f":"import matplotlib.pyplot as plt\nimport seaborn as sns","300d1c9c":"age=train['Age'].dropna().tolist()\nplt.figure(figsize=(6,6))\nplt.hist(age, histtype='bar',color='grey',bins=45,density=True)\nplt.xlabel('Age groups')\nplt.ylabel('Percentage of Population')\nplt.title(\"Age distribution of population\")\nplt.show()","eea5cb76":"sns.distplot(a = age, bins = 80, color = 'gray', vertical = False\n            ).set_title('Age Distribution Among the Population')","effbd34a":"sns.countplot(x=\"Sex\", \n              data = train, \n              color = 'gray', \n              edgecolor=sns.color_palette(\"dark\", 1)\n             ).set_title('Gender Distribution Among the Population')","6ff9e965":"sns.countplot(x=\"Pclass\", hue=\"Sex\", \n              data = train, color = 'gray', \n              edgecolor=sns.color_palette(\"dark\", 1)\n             ).set_title('Gender Distribution Among the Three Classes of Population')","ae117d61":"sns.countplot(x=\"Survived\", hue=\"Sex\", \n              data = train, color = 'gray', \n              edgecolor=sns.color_palette(\"dark\", 1)\n             ).set_title('Gender distribution among the Survived and the Deceased')","237460cf":"train.columns","0223ca3d":"#find the null values in columns\ntrain.isnull().sum()","e310c844":"#to deal with null values in Age column, replace null values with mean of the column Age\ntrain.Age.mean()","5138b34c":"#to deal with null values in Age column, replace null values with mean of the column Age\ntrain['Age'].replace(np.nan,train['Age'].mean(),inplace=True)","b8687d38":"#column cabin has many null values and can't be dealt with by replacing null values with mode of the column.\n#since the column has no significant value in predicting the results, dropping it is our only option\ntrain.drop('Cabin',axis=1,inplace=True)","e137e666":"#There are still 2 null values in embarked column, lets drop all the null values from the data\ntrain.dropna(inplace=True)","4a52ce9d":"#lets check again for the null values\ntrain.isnull().sum()","c0f1f001":"\ntitles = ['Mrs', 'Mr', 'Don', 'Jonkheer', 'Master', 'Miss', 'Major', \n          'Rev', 'Dr', 'Ms', 'Mlle','Col', 'Capt', 'Mme', 'Countess']\n\ndef get_title(name):\n    for title in titles:\n        if title in name:\n            return title\n    return 'None'","6e9621b3":"train['Title'] = train['Name'].apply(lambda x: get_title(x))\ntrain.head()","f72ff5ec":"X_train=train.drop(['Survived','PassengerId','Name','Ticket'],axis=1)","c155c39f":"y_train=train['Survived']","98a3f1d2":"X_train.head()","a6c3c0da":"X_train=pd.get_dummies(X_train)","76a63c6c":"X_train.head()","98f72fcd":"from sklearn.ensemble import RandomForestClassifier","5317910a":"# Intializing the Model\nclf = RandomForestClassifier(max_depth=75, random_state=0)","1bd5591c":"# Training the Model\nclf.fit(X_train, y_train)","47990043":"test['Title'] = test['Name'].apply(lambda x: get_title(x))\ntest['Age'].fillna(test['Age'].mean(), inplace = True)\ntest.drop('Cabin', axis = 1, inplace = True)\ntest.head()","f74c9d73":"test.info()","3b12d4aa":"#dealing with null value in fare\ntest['Fare'].fillna(test['Fare'].mean(), inplace = True)\ntest.info()","911da22e":"X_test = test.drop(['PassengerId','Name','Ticket'],axis=1)\nX_test.head()","4b81d4d7":"X_test = pd.get_dummies(X_test)","39e15576":"# getting total titles\ntotal_titles = train['Title'].unique().tolist()\ntest_titles = test['Title'].unique().tolist()\n\nfor title in total_titles:\n    if title not in test_titles:\n        print('Title ' + str(title) + ' not in Test Set')\n        X_test['Title_' + str(title)] = 0","c51cd9a9":"X_test.info()","4223eb6d":"Survived = clf.predict(X_test)\nSurvived","20b0d8f2":"gender_submission = pd.read_csv('\/kaggle\/input\/titanic\/gender_submission.csv')\ngender_submission.head()","a1d4cbc5":"gender_submission.info()","6d3f0c4d":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': Survived})\noutput.head()","37be3478":"output.info()","de721372":"output.to_csv('Submission_RandomForest.csv', index=False)","54607e8d":"Let's divide the data into feature and target","82fdaec9":"Gender distribution chart","d918c2ce":"Now using pandas feature dummies lets convert the categorical columns into numerical ones","10312ad0":"# Implementing the model","adfe5745":"Age distribution","f0277f36":"Lets get all the titles from the names","c0dc2816":"Saving the output file as csv","dc0e2b93":"Exploring the gender submission file","46f28d43":"# loading the datasets","9182b1ac":"## Visualising the data to get an overview","025d0fb1":"# Data Preprocessing","ceece9dc":"# Model testing","e2a550f1":"Generate a file in the format given by submission file."}}