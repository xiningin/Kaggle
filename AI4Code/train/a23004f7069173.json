{"cell_type":{"624f7322":"code","fb1a3b6d":"code","640a9b57":"code","ee6b71c2":"code","30a330a6":"code","08f8e546":"code","bb484ab3":"code","21750d7e":"code","bf9da7f6":"code","dfa5a768":"code","e98c4a1e":"code","ef374a4a":"code","3d88d2a5":"code","e48cac6c":"code","60aa76c0":"code","5be5a8f0":"code","929acbb2":"code","908772a5":"code","dab8e8c4":"code","d07c20f5":"code","c61e584e":"code","5023f080":"code","fbd426c1":"code","951ececf":"code","e5bdc7be":"code","cf280f43":"code","718aa270":"code","4674b605":"code","43a995a0":"code","a65d6807":"code","bf5f07ec":"code","9314a1e1":"code","2d845e9b":"code","fef33c34":"code","c58003ef":"code","e54509b5":"code","6be68d79":"code","b967fa2a":"code","0a86df59":"code","a124ed08":"code","14fb8f6b":"code","5c045855":"code","da345411":"code","f3815864":"code","879e7436":"code","e45e7990":"markdown","91f95fcf":"markdown","066a744e":"markdown","32f0f73c":"markdown","0c614ef1":"markdown","958f9904":"markdown","fcd1ac14":"markdown","9b8c71aa":"markdown","2d7eafe8":"markdown","9224310e":"markdown","f9cf2fdc":"markdown","472cc77c":"markdown","4beb21d1":"markdown","c69ac5f9":"markdown","c521ef9c":"markdown","f33a26cc":"markdown","26b64991":"markdown","71f78b2b":"markdown","a8dfb798":"markdown"},"source":{"624f7322":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib as mlp\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","fb1a3b6d":"##reading the data \ndf = pd.read_csv('..\/input\/BlackFriday.csv')\ndf.info()\ndf.head(10)","640a9b57":"##Localizo las variables con valores nulos\ndf.isnull().sum()","ee6b71c2":"##Les asigno valor 0, ya que de momento no s\u00e9 si voy a necesitar esas columnas\ndf.fillna(value=0,inplace=True)","30a330a6":"##varios items para un mismo User_ID, compruebo cuantos usuarios \u00fanicos\nprint(\"Length of the dataset: %d\\nNumber of different User_ID: %d\" % (len(df), len(df.User_ID.unique())))","08f8e546":"sns.countplot (df['Gender'])","bb484ab3":"sns.boxplot(x=\"Gender\", y=\"Purchase\", data=df)","21750d7e":"##Para poder trabajar mejor con esta variable la transformo a F=0 y M=1\ngender = np.unique(df['Gender'])\ngender","bf9da7f6":"def map_gender(gender):\n    if gender == 'M':\n        return 1\n    else:\n        return 0\ndf['Gender'] = df['Gender'].apply(map_gender)\ndf.head()","dfa5a768":"sns.countplot (df['City_Category'])","e98c4a1e":"sns.boxplot(x=\"City_Category\", y=\"Purchase\", data=df)","ef374a4a":"city_category = np.unique(df['City_Category'])\ncity_category","3d88d2a5":"def map_city_category(city_category):\n    if city_category == 'A':\n        return 1\n    elif city_category == 'B':\n        return 2\n    elif city_category == 'C':\n        return 3\n    else:\n        return 0\ndf ['City_Category'] = df ['City_Category'].apply(map_city_category)","e48cac6c":"sns.countplot (df['Age'])","60aa76c0":"sns.boxplot(x=\"Age\", y=\"Purchase\", data=df)","5be5a8f0":"##Para la variable Age me encuentro con rangos y el 55+, voy a limpiar esta variable.\nage = np.unique(df['Age'])\nage","929acbb2":"def map_age(age):\n    if age == '0-17':\n        return 0\n    elif age == '18-25':\n        return 1\n    elif age == '26-35':\n        return 2\n    elif age == '36-45':\n        return 3\n    elif age == '46-50':\n        return 4\n    elif age == '51-55':\n        return 5\n    else:\n        return 6\ndf ['Age'] = df ['Age'].apply(map_age)","908772a5":"sns.countplot (df['Stay_In_Current_City_Years'])","dab8e8c4":"sns.boxplot(x=\"Stay_In_Current_City_Years\", y=\"Purchase\", data=df)","d07c20f5":"##La variable Stay In Current City Years contiene el valor +4, lo transformo para que me devuelva solo 4\ndef map_stay(stay):\n        if stay == '4+':\n            return 4\n        else:\n            return int(stay)\n#             current_years = stay\n#             current_years = current_years.astype(int)\n#             return current_years\ndf['Stay_In_Current_City_Years'] = df['Stay_In_Current_City_Years'].apply(map_stay)","c61e584e":"df.head()","5023f080":"df.describe()","fbd426c1":"##Escalado de valores n\u00famericos. Para trabajar los algoritmos escalo los valores n\u00famericos al intervalo entre 0 y 1 de las siguientes variables: Occupation; Product_Category_1; Product_Category_2; Product_Category_3 y Purchase\n##al dataset resultante le voy a denominar scaleddf para no sobreescribir el original y poder seguir trabajando con ambos\nfrom sklearn.preprocessing import MinMaxScaler\nmms = MinMaxScaler()\ndfScaled = mms.fit_transform(df[['Age', 'Gender', 'Stay_In_Current_City_Years','Occupation','Product_Category_1', 'Product_Category_2', 'Product_Category_3', 'Purchase']])\ndf[['Age', 'Gender', 'Stay_In_Current_City_Years','Occupation','Product_Category_1', 'Product_Category_2', 'Product_Category_3', 'Purchase']] = dfScaled\ndf[['Age', 'Gender', 'Stay_In_Current_City_Years','Occupation','Product_Category_1', 'Product_Category_2', 'Product_Category_3', 'Purchase']].describe()\n##Errores en el campo de edad (no comprende el rango) y en el de Stay In Current City Years (no coge el 4+)","951ececf":"f, ax = plt.subplots(figsize=(12, 12))\ncorr = df.corr()\nsns.heatmap(corr,annot=True,linewidths=.5, fmt= '.2f',mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(100,200, as_cmap=True), square=True, ax=ax)\nplt.show()","e5bdc7be":"#Para buscar el perfil medio combino las variables Gender y Marital_Status\ndf['combined_G_M'] = df.apply(lambda x:'%s_%s' % (x['Gender'],x['Marital_Status']),axis=1)\nprint(df['combined_G_M'].unique())","cf280f43":"sns.countplot(df['Age'],hue=df['combined_G_M'])","718aa270":"df2=df[['Purchase', 'User_ID']].groupby('User_ID').sum()\ndf2.head()","4674b605":"df2 = df2.rename(columns={'Purchase': 'totalPurchase'})\ndf2.head()","43a995a0":"dfMerge = df.merge(df2, on='User_ID')\ndfMerge.head()","a65d6807":"dfMerge.describe()","bf5f07ec":"sns.boxplot(\"totalPurchase\", data=dfMerge)","9314a1e1":"sns.boxplot(x=\"Stay_In_Current_City_Years\", y=\"totalPurchase\", data=dfMerge)","2d845e9b":"sns.boxplot(x=\"Age\", y=\"Purchase\", data=df)","fef33c34":"df3=df[['Purchase', 'User_ID']].groupby('User_ID').count()\ndf3.head()","c58003ef":"df3 = df3.rename(columns={'Purchase': 'countPurchase'})\ndf3.head()","e54509b5":"dfMerge2 = dfMerge.merge(df3, on='User_ID')\ndfMerge2.head()","6be68d79":"sns.boxplot(\"countPurchase\", data=dfMerge2)","b967fa2a":"dfMerge2.describe()","0a86df59":"sns.boxplot(x=\"Gender\", y=\"totalPurchase\", data=dfMerge2)","a124ed08":"sns.boxplot(x=\"Gender\", y=\"countPurchase\", data=dfMerge2)","14fb8f6b":"f, ax = plt.subplots(figsize=(13, 13))\ncorr = dfMerge2.corr()\nsns.heatmap(corr,annot=True,linewidths=.5, fmt= '.2f',mask=np.zeros_like(corr, dtype=np.bool), cmap=sns.diverging_palette(100,200, as_cmap=True), square=True, ax=ax)\nplt.show()","5c045855":"sns.boxplot(x=\"City_Category\", y=\"totalPurchase\", data=dfMerge2)","da345411":"sns.boxplot(x=\"City_Category\", y=\"countPurchase\", data=dfMerge2)","f3815864":"df3=dfMerge2[['totalPurchase', 'Product_ID']].groupby('Product_ID').sum()\ndf3.head()\nproductos_mas_vendidos= df3.sort_values(by='totalPurchase', ascending=False)\nproductos_mas_vendidos= productos_mas_vendidos.head(15)\nprint(productos_mas_vendidos)","879e7436":"product_count = Counter (df.Product_ID)         \nmost_common_product = product_count.most_common(15)  \nx,y = zip(*most_common_product)\nx,y = list(x),list(y)\n# visualization\nplt.figure(figsize=(15,10))\nax= sns.barplot(x=x, y=y,palette = sns.cubehelix_palette(len(x)))\nplt.xlabel('Product_ID')\nplt.ylabel('Frequency')\nplt.title('Most common 15 Product_ID')","e45e7990":"El grupo de edad mayoritario es el de 26-35 con diferencia, en cuanto al gasto se distribuyen de forma parecida destacando algo el rango 51-55","91f95fcf":"Resulta que el perfil que m\u00e1s se repite es el de hombre y soltero con una edad de entre 26 y 35 a\u00f1os","066a744e":"Sorprendentemente muchos m\u00e1s hombres compran en Black Friday, aunque en el gasto no se diferencian tanto","32f0f73c":"Vaya! a priori las variables no tienen mucha correlaci\u00f3n entre ellas por lo que hacer un modelo predictivo no parece factible.","0c614ef1":"## Tratamiento de nulos","958f9904":"### Variable City_Category","fcd1ac14":"### Variable Age","9b8c71aa":"Vaya! parece que los que llevan un a\u00f1o van m\u00e1s a comprar en Black Friday, no se me ocurre raz\u00f3n para esto","2d7eafe8":"### Stay In Current City","9224310e":"Pues s\u00ed los de la Categor\u00eda 1 se gastan m\u00e1s dinero y compran m\u00e1s que los dem\u00e1s","f9cf2fdc":"# Preprocesamiento","472cc77c":"Una vez transformadas las variables categ\u00f3ricas en num\u00e9ricas vamos a explorar c\u00f3mo se relacionan entre ellas","4beb21d1":"## A\u00f1adiendo variables","c69ac5f9":"Tenemos m\u00e1s usuarios de la categor\u00eda B, pero son los de la C los que m\u00e1s gastan","c521ef9c":"### Gender","f33a26cc":"# EDA","26b64991":"## Tratamiento de variables categ\u00f3ricas","71f78b2b":"Sin demasiadas correlaciones, pero hay una que me llama la atenci\u00f3n. City_Category con totalPurchase y countPurchase","a8dfb798":"Vaya! tan solo 5891 User_ID \u00fanicos, vamos a a\u00f1adir cuanto gasta cada uno (totalPurchase) y la cantidad de compras (countPurchase). Pero antes vamos a tratar las variables categ\u00f3ricas"}}