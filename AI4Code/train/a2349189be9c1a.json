{"cell_type":{"52f69211":"code","83c6e9be":"code","5629ac48":"code","7daef8c0":"code","f631ee33":"code","10eecb2f":"code","edf8933a":"code","74eaf74c":"code","19adc5bd":"code","c274ace0":"code","6a38942c":"code","67c0d73a":"code","a6c627aa":"code","ef43ced4":"code","6b947687":"markdown","c2c45665":"markdown","b2616725":"markdown","038c51a4":"markdown","afdaa2da":"markdown"},"source":{"52f69211":"import numpy as np\nimport pandas as pd","83c6e9be":"# number of draws from the prior\nn_draws = 10000\nprior = pd.Series(np.random.uniform(0.0, 1.0, n_draws))\nprior.hist()","5629ac48":"# This is either 0, 1 (binary) rate so it should follow Bernoulli distribution\ndef generative_model(parameters):\n    return np.random.binomial(16, parameters)","7daef8c0":"generative_model(0.1)","f631ee33":"sim_data = list()\nfor p in prior:\n    sim_data.append(generative_model(p))","10eecb2f":"prior[0]","edf8933a":"observed_data = 6\nposterior = prior[list(map(lambda x: x == observed_data, sim_data))]","74eaf74c":"posterior.hist()","19adc5bd":"posterior","c274ace0":"print(\"Number of draws left: %d, Posterior median: %.3f, Posterior quantile interval: %.3f-%.3f\" % (len(posterior), posterior.median(), posterior.quantile(.025),posterior.quantile(.975)))","6a38942c":"# How is the result comparing to 20%\nsum(posterior>0.2)\/len(posterior)","67c0d73a":"# Expected signups for 100 samples\nsignups = pd.Series([np.random.binomial(n=100, p=p) for p in posterior])","a6c627aa":"signups.hist()","ef43ced4":"print('Sign-up 95%% quantile interval %d-%d' % tuple(signups.quantile([0.025, 0.975]).values))","6b947687":"# The generative model","c2c45665":"# Bayesian data analysis","b2616725":"# Simulate the data\nSimulate the data using the prior and the generative model","038c51a4":"# Prior\nWithout any knowledge we assume the rate is uniformly distributed","afdaa2da":"# Posterior\nFilter out all the draws that do not match the data"}}