{"cell_type":{"49af070f":"code","c7be37be":"code","42136ab6":"code","27fc7418":"code","055c6396":"code","17f72b4f":"code","fd9f1cd8":"code","9da03d1f":"code","18cf6ba5":"code","ad571695":"code","c2df9d31":"code","e66bb578":"code","b56a8a10":"code","30706d33":"code","4eb0c8ae":"code","d9777f4e":"code","6eb14317":"code","aef4633c":"code","73772669":"code","0eacab30":"code","de934096":"markdown","0a541b4e":"markdown","96d19493":"markdown","ab2ca9cc":"markdown","6d1b6a23":"markdown","607387ef":"markdown","c047e921":"markdown","729f3774":"markdown","11051b16":"markdown","8e707a34":"markdown","1487c34e":"markdown","e6a52dd5":"markdown","decccdf4":"markdown","3c3e6b5a":"markdown","499d1cfd":"markdown","31f33a40":"markdown","3f99beb7":"markdown","a1325d70":"markdown","87250494":"markdown","298e2d75":"markdown","f2c33b00":"markdown","5d0807ca":"markdown","9f1b4497":"markdown","c39445af":"markdown","447c3a9a":"markdown","ce9f80e4":"markdown","643d1020":"markdown","c92df96a":"markdown"},"source":{"49af070f":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c7be37be":"import numpy as np\nimport pandas as pd\nimport altair as alt\nimport re\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom wordcloud import WordCloud, STOPWORDS\nstopwords = set(STOPWORDS)\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import linear_kernel","42136ab6":"df = pd.read_csv('..\/input\/bollywood-movies-19502019\/bollywood_full.csv')","27fc7418":"# Droping columns which i will not be using for analysis\ndf = df.drop(['title_x','title_y', 'imdb_id', 'poster_path', 'wiki_link', 'is_adult', 'tagline', 'release_date'], axis=1)\n\n# Renaming for ease of reference\ndf = df.rename(columns={'original_title': 'title', 'year_of_release':'year', 'imdb_rating':'rating', 'imdb_votes':'votes', 'wins_nominations':'awards'})","055c6396":"# Data cleaning\ndf['awards'] = df['awards'].apply(lambda x: re.sub(r'[A-Za-z]', '', str(x)))\ndf[['wins', 'nominations']] = df.awards.str.split('&', expand=True)\ndf['wins'] = df['wins'].str.strip()\ndf['wins'] = df['wins'].apply(lambda x: 0 if x=='' else x)\ndf['wins'] = df['wins'].replace(np.nan, 0)\ndf['wins'] = df['wins'].astype(int)\n\ndf['runtime'] = df['runtime'].replace('\\\\N', np.nan)\ndf['runtime'] = df['runtime'].ffill()\ndf['runtime'] = df['runtime'].astype(int)\ndf = df[df['runtime'] >= 60]\n\nactors = df.actors.str.split('|', expand=True)\ndf['lead_actor'] = actors[0]\n\ndf[['genre','genre2', 'genre3']] = df.genres.str.split(\"|\",expand=True)\ndf = df.drop(['genres', 'awards', 'actors', 'genre2', 'genre3', 'nominations'], axis=1)\nminor_genre_list = ['Animation','Documentary','History','Music','War','Sci-Fi','Sport']\ndf = df[~df['genre'].isin(minor_genre_list)]\n\ndf = df.drop_duplicates()","17f72b4f":"alt.Chart(df, title='Bollywood movies released over the years').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('id:O', axis=None, sort='descending'),\n    tooltip=['title', 'year', 'rating'],\n    color='genre'\n).properties(height=600, width=800)","fd9f1cd8":"temp1 = df.groupby(['genre', 'year']).size().reset_index(name='count')\nalt.Chart(temp1, title='Bollywood movies genre over the years').mark_bar(opacity=0.8).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1955, 2015])),\n    alt.Y('count', stack='zero'),\n    color='genre',\n    tooltip=['genre']\n).properties(height=500, width=800)","9da03d1f":"winners = df[df['wins']!=0]\nalt.Chart(winners, title='Award winning movies over the years').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('id:O', axis=None, sort='descending'),\n    tooltip=['title', 'year'],\n    color='genre'\n).properties(height=600, width=800)","18cf6ba5":"alt.Chart(winners[winners['wins']>5], title='Multiple award winning movies over the years').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('rating', scale=alt.Scale(type='linear', domain=[0, 10])),\n    tooltip=['title', 'year'],\n    color='genre'\n).properties(height=600, width=800)","ad571695":"alt.Chart(winners[winners['wins']>=5], title='Movies that won more than 5 award with rating and votes').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('votes', scale=alt.Scale(type='log', domain=[10, 1000000])),\n    tooltip=['title', 'year', 'votes'],\n    color='genre'\n).properties(height=600, width=800)","c2df9d31":"temp2 = winners.lead_actor.value_counts().head(10).rename_axis('actor').reset_index(name='appearences')\nalt.Chart(temp2, title='Lead actor with most appearnces in award winning movies').mark_bar().encode(\n    alt.X('actor', axis=alt.Axis(labelAngle=-45)),\n    alt.Y(\"appearences\")\n).properties(width=600)","e66bb578":"temp3 = winners[winners['lead_actor'].isin(temp2.actor.tolist())]\nalt.Chart(temp3, title='Award winning Movies of Top actors').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('rating', scale=alt.Scale(type='linear', domain=[0, 10])),\n    tooltip=['title', 'year', 'rating','genre'],\n    color='lead_actor'\n).properties(height=600, width=800)","b56a8a10":"movies_done_by_top_actors = df[df['lead_actor'].isin(temp3.lead_actor.tolist())]\nsuccess_percentage = (temp3.lead_actor.value_counts() \/ movies_done_by_top_actors.lead_actor.value_counts() * 100).rename_axis('actor').reset_index(name='% success')\nalt.Chart(success_percentage, title='What is success percentage of top actors').mark_bar().encode(\n    alt.X('actor', axis=alt.Axis(labelAngle=-45)),\n    alt.Y(\"% success\")\n).properties(width=600)","30706d33":"temp4 = df.groupby(['year'])['runtime'].mean().reset_index(name='avg_runtime')\nalt.Chart(temp4, title='Average runtime of movie over the years').mark_area(\n    line={'color':'darkblue'},\n    color=alt.Gradient(\n        gradient='linear',\n        stops=[alt.GradientStop(color='white', offset=0),\n               alt.GradientStop(color='darkblue', offset=1)],\n        x1=1,\n        x2=1,\n        y1=1,\n        y2=0\n    )\n).encode(\n    alt.X('year'),\n    alt.Y('avg_runtime')\n).properties(height=300, width=800)","4eb0c8ae":"alt.Chart(df, title='How rating varies with runtime').mark_circle().encode(\n    alt.X('runtime', bin=alt.Bin(maxbins=20), scale=alt.Scale(type='linear', domain=[60, 220])),\n    alt.Y('rating', bin=alt.Bin(maxbins=10)),\n    size='count()'\n).properties(height=300, width=800)","d9777f4e":"temp5 = df.groupby(['year'])[['title','genre', 'rating']].max().reset_index()\nalt.Chart(temp5, title='Highest rates movies of all years').mark_circle(opacity=0.8).transform_window(\n    id='rank()',\n    groupby=['year']\n).encode(\n    alt.X('year', scale=alt.Scale(type='linear', domain=[1950, 2020])),\n    alt.Y('rating', scale=alt.Scale(type='linear', domain=[0, 10])),\n    tooltip=['title', 'year', 'rating','genre'],\n    color='genre'\n).properties(height=200, width=800)","6eb14317":"temp6 = df.groupby(['genre'])['summary']\n\nx, y = np.ogrid[:300, :300]\n\nmask = (x - 150) ** 2 + (y - 150) ** 2 > 130 ** 2\nmask = 255 * mask.astype(int)\n\nfor name, group in temp6:\n    text = ' '.join(group.tolist())\n    wordcloud = WordCloud(width=500, height=500, margin=0,background_color ='white',\n                          stopwords = stopwords, mask=mask)\n    wordcloud = wordcloud.generate(text)\n    print(name)\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.axis(\"off\")\n    plt.margins(x=0, y=0)\n    plt.show()","aef4633c":"# we are going to use cosine similarity to find movies with similar plot\nmovie_recommend_df = df[['title', 'story']]\nmovie_recommend_df = movie_recommend_df.dropna(subset=['story'])\nmovie_recommend_df = movie_recommend_df.reset_index(level=0)\nmovie_recommend_df['id'] = movie_recommend_df['index']\nmovie_recommend_df = movie_recommend_df.drop(['index'], axis=1)\n\ntf = TfidfVectorizer(analyzer='word', min_df=1, max_features= 200 ,stop_words='english', lowercase=True)\ntfidf_matrix = tf.fit_transform(movie_recommend_df['story'])\n\ncosine_similarities = linear_kernel(tfidf_matrix, tfidf_matrix)\nresults = {}\n\nfor idx, row in movie_recommend_df.iterrows():\n    similar_indices = cosine_similarities[idx].argsort()[:-50:-1]\n    similar_items = [(cosine_similarities[idx][i], movie_recommend_df['id'][i]) for i in similar_indices]\n    results[row['id']] = similar_items[1:]","73772669":"def item(id):\n    return movie_recommend_df.loc[movie_recommend_df['id'] == id]['title']\n\ndef recommend(id, num):\n    print(\"Recommending \" + str(num) + \" movie similar to \" + item(id))\n    recs = results[id][:num]\n    i=0\n    for rec in recs:\n        print(\"We recommend : \" + item(rec[1]) + \" (score:\" + str(rec[0]) + \")\")","0eacab30":"recommend(1787,3)","de934096":"It looks like Drama has dominated bollywood. But, Action movies have gained momentum since 1980 and comedy from early 2000. Also, it looks like thrillers are in vogue right now.","0a541b4e":"Wow, Although Drama dominated movies in till 1980 but highest rated movies are romantic for those years. I guess some really good romantic gems are hidden there. Also, action dominated bollywood since 1990s but ratings show that people love dramas more now.","96d19493":"It seems movie summary are good descriptiors of type of genre.","ab2ca9cc":"### Can we guess movie genre from word cloud of summary?\nLet\u2019s try to see what word cloud of summary of movie in each genre tell us.","6d1b6a23":"**Cleaning process**\n\n- Awards columns has both awards and nominations. We will separate them to wins and nominations and clean and strip them to be useful for analysis later on.\n- Runtime columns has some movies for which duration is not recorded we will forward fill them. This is not the right way to fill but finding movie duration for each missing entry is not worth it. There are better ways to impute missing values. Please try if you feel like.\n- Actors column has list of all the actors from the movie. We are going to take the first actor from each entry as we will only explore dataset in regards to lead actor.\n- Genres columns has all the genres pipe seperated to which movie might belong. We are going to take first genre that describe movie as main genre. Rest we will discard. Also, there we few genres which had very low count, we will not use those in analysis.\n- Lastly we will drop duplicates from the dataset","607387ef":"### Can we recommend similar movie based on it\u2019s plot?\n\nLet\u2019s try to build a basic content based recommender that recommends movie with similar story lines. We will create tfidf vectors from movie story lines and calculate cosine similarities between storylines.","c047e921":"### Does movie that win multiple records also have high ratings\n\nWe will only look at the movies that have won more than 5 awards","729f3774":"Wow, Drama movies dominated the award scene till late 80s. But, since 1990s we are seeing health mix of genre in awards. But, we can clearly see that bollywood has started giving too many awards since 2000.","11051b16":"But, What about votes? Does the movie that have higher rating also have most votes?","8e707a34":"Interesting! Lot of bad movies have started winning awards in hollywood in recent years. Going as low as humshakals and himmatwala each of which have close to two rating and still won awards.","1487c34e":"### Let\u2019s look at the movies that have won more than 5 awards with their rating and votes","e6a52dd5":"### Let\u2019s explore the movies that won awards in bollywood","decccdf4":"It seems bollywood has consensus on movie length. Most of the movie falls between 120-140 mins.","3c3e6b5a":"Great, Big B would have been obvious choice considering Big B\u2019s career span over five decades. Rajesh Khanna aka kaka came second with 40 award winning movies in short career span. For a brief period in bollywood kaka was the biggest star. king khan came fourth right after Ajay devgan in giving award winning movies.","499d1cfd":"### Let\u2019s look at the movies released in each year","31f33a40":"Dataset has some columns which are not useful for analysis. We will drop them, also we will rename columns for ease of use later on.","3f99beb7":"### Who is the actor with multiple appeearence in award winning movies? Guess?\n\nI am big fan of Big B and King khan. Here we will find out lead actors who appeared in award winning movies.","a1325d70":"### Who is the most successful actor in bollywood?\n\nAbove analysis begs the question who is most successful lead actor in bollywood. We will calculate percentage of award winning movies from total movies done by leaading bollywood actors","87250494":"Wow, even this naive recommender is able to recommend movie with good confidence. Guess, I will take help from this reommender to watch few flick in future.\n\nPhew! That was some exploration. I have you have enjoyed the analysis as much as i did. Now, you know who to chat with for movie related conundrums.\n\n**Don't forget to upvote the notebook** ","298e2d75":"Ok. It seems movie length have decreased by sweet 20-30 mins in five decades.\n\n","f2c33b00":"### Does movie length impact its rating?\nIs there a sweet spot of movie runtime that impact the ratings. Do the directors know that?","5d0807ca":"### Are movies becoming shorter?\n\nLet\u2019s look at how the average movie length changed in bollywood over period of time.","9f1b4497":"### Can you guess highest rated bollywood movies since 1950 till 2019?\nLet\u2019s look at highest rated movie each year by the genre.","c39445af":"Expected. Shah Rukh Khan is known as king khan for a reason with highest 80% success rate.","447c3a9a":"It seems that lot of movies from early bollywood era haven\u2019t been rate by many user. Handful of bollywood movies have more than 100000 ratings. 3 idios outclassing every other movie with whopping 300K votes.","ce9f80e4":"### How good are movies of lead actors of bollywood?\nWe will look at the award winning movies of leading bollywood actors across time and see how they were rate by public.","643d1020":"We can see from the chart above that till 1970s drama dominated bollywood. But, after that action movies started gaining momentum, thanks to angry young man Amitabh Bachchan. Action movies dominated bollywood from 1980 till 2000. I feel 80s till 2000 was action era of bollywood. Actors such as Akshay kumar, Ajay devgan, Sunil shetty, Sunny deol, Sanjay dutt were dominating the bollywood scene. From early 2000 comedy movies started gaining catching up to drama and action. From 2000 till 2010 some of the best comedy movies were made like hera pheri. Romantic movies count have been low compared to drama, action or comedy but for few brief period hardly any romantic movies were made. Romantic movie although low in count have been big success in bollywood.","c92df96a":"### Let\u2019s look at how many movies of each genre were made each year"}}