{"cell_type":{"a17a5dcb":"code","18b5d37f":"code","7761a302":"code","1ba5e3a8":"code","2334a7c7":"code","c1157260":"code","565015cc":"code","54f69167":"code","7e276c8d":"code","fa2e0d8d":"code","23fad544":"code","3ba2ba56":"code","440b6cdf":"code","d6b62bcb":"code","ca1497ba":"code","f82427ec":"code","d2fc10df":"code","b8486fa0":"code","a23f038a":"code","df021d22":"code","9f965661":"markdown","fe56b223":"markdown","bee708fc":"markdown","e584d4da":"markdown","594c75ff":"markdown","070ddf21":"markdown","edb84ead":"markdown","b290d748":"markdown","a91ad572":"markdown","042b2ebe":"markdown"},"source":{"a17a5dcb":"import numpy as np\nimport pandas as pd\n# \u91c7\u7528\u79bb\u7ebf\u7ed8\u56fe\u65b9\u5f0f\nimport plotly\nimport plotly.offline as py\nimport plotly.graph_objs as go\nplotly.offline.init_notebook_mode()","18b5d37f":"# \u8bfb\u53d6\u6570\u636e\uff0c\u6ce8\u610f\u6587\u4ef6\u7f16\u7801\u683c\u5f0f\ndf = pd.read_csv('..\/input\/forest-fires-in-brazil\/amazon.csv', encoding='ISO-8859-1')\ndf.head(10)","7761a302":"# \u68c0\u67e5\u6570\u636e\u96c6\u662f\u5426\u6709\u9700\u8981\u820d\u5f03\u7684\u6570\u636e\nprint(\"\u5171\u6709%d\u6761\u6570\u636e\" % len(df))\nprint(\"\u7a7a\u503c\u68c0\u67e5\")\nprint(df.isna().sum())","1ba5e3a8":"# \u6982\u89c8\u6240\u6709\u7edf\u8ba1\u5230\u7684\u5dde\ndf.state.unique()","2334a7c7":"# \u6982\u89c8\u6708\u4efd\ndf.month.unique()","c1157260":"# \u628a\u6708\u4efd\u8f6c\u6362\u6210\u82f1\u8bed\nmonth_map = {'Janeiro': 'January', 'Fevereiro': 'February', 'Mar\u00e7o': 'March', 'Abril': 'April', 'Maio': 'May',\n          'Junho': 'June', 'Julho': 'July', 'Agosto': 'August', 'Setembro': 'September', 'Outubro': 'October',\n          'Novembro': 'November', 'Dezembro': 'December'}\ndf['month'] = df['month'].map(month_map)\ndf.month.unique()","565015cc":"# \u65e5\u671f\u5217\u6ca1\u6709\u610f\u4e49\uff0c\u4e22\u6389\ndf.drop(columns = ['date'], axis=1, inplace=True)\ndf.head(5)","54f69167":"# \u7edf\u8ba1\u5404\u5e74\u53d1\u751f\u7684\u706b\u707e\u603b\u6570\nyears = list(df.year.unique())\nsub_fires_per_year = []\nfor i in years:\n    #\u6570\u636e\u96c6\u4e2d\u6c47\u62a5\u7684\u706b\u707e\u6570\u6709\u5c0f\u6570\uff0c\u56db\u820d\u4e94\u5165\u53d6\u6574\n    count = df.loc[df['year'] == i].number.sum().round(0)\n    sub_fires_per_year.append(count)\nfires_per_year_dic = {'year' : years, 'total_fires' : sub_fires_per_year}\nprint(fires_per_year_dic)","7e276c8d":"# \u7ed8\u5236\u6563\u70b9\u56fe\ntrace = go.Scatter(x = fires_per_year_dic['year'], y = fires_per_year_dic['total_fires'], mode = 'lines+markers')\nlayout = go.Layout(title='1998-2017\u5e74\u5df4\u897f\u706b\u707e\u6570\u91cf\u7edf\u8ba1\u56fe', xaxis={'title':'\u5e74\u4efd'}, yaxis={'title':'\u6570\u91cf'})\ndata = [trace]\nfig = go.Figure(data = data,layout = layout)\npy.iplot(fig)","fa2e0d8d":"# \u6839\u636e\u6708\u4efd\u6dfb\u52a0\u5b63\u8282(\u5df4\u897f\u5728\u5357\u534a\u7403\u548c\u5317\u534a\u7403\u5b63\u8282\u76f8\u53cd)\n# 9\u300110\u300111\u6708\u4e3a\u6625\u5b63\uff0c12\u30011\u30012\u6708\u4e3a\u590f\u5b63\uff0c3\u30014\u30015\u6708\u4e3a\u79cb\u5b63\uff0c6\u30017\u30018\u6708\u4e3a\u51ac\u5b63\nseason_map = {'January': 'Summer', 'February': 'Summer', 'March': 'Autumn', 'April': 'Autumn', 'May': 'Autumn',\n              'June': 'Winter', 'July': 'Winter', 'August': 'Winter', 'September': 'Spring', 'October': 'Spring',\n              'November': 'Spring', 'December': 'Summer'}\ndf['season'] = df['month'].map(season_map)\ndf.season.unique()","23fad544":"# \u628a\u6570\u636e\u96c6\u6309\u7167\u5e74\u4efd\u548c\u5b63\u8282\u8fdb\u884c\u5206\u5272\uff0c\u5e76\u6c42\u51fa\u6bcf\u5e74\u6bcf\u6708\u7684\u706b\u707e\u603b\u6570\ndef split_season(df, season):\n    sub_fires = []\n    for i in years:\n        count = df.loc[(df['year'] == i) & (df['season'] == season)].number.sum().round(0)\n        sub_fires.append(count)\n    return sub_fires\nsub_fires_in_spring = split_season(df, 'Spring')\nsub_fires_in_summer = split_season(df, 'Summer')\nsub_fires_in_autumn = split_season(df, 'Autumn')\nsub_fires_in_winter = split_season(df, 'Winter')\nprint(sub_fires_in_spring)","3ba2ba56":"# \u6761\u5f62\u56fe\u7ed8\u5236\u4ee3\u7801\ntrace_spring = go.Bar(y = years, x = sub_fires_in_spring,\n                name = '\u6625\u5b63', orientation = 'h', marker = dict(color = '#EF7A82'))\ntrace_summer = go.Bar(y = years, x = sub_fires_in_summer,\n                name = '\u590f\u5b63', orientation = 'h', marker = dict(color = '#AFDD22'))\ntrace_autumn = go.Bar(y = years, x = sub_fires_in_autumn,\n                name = '\u79cb\u5b63', orientation = 'h', marker = dict(color = '#FFA631'))\ntrace_winter = go.Bar(y = years, x = sub_fires_in_winter,\n                name = '\u51ac\u5b63', orientation = 'h', marker = dict(color = '#44CEF6'))\ndata = [trace_spring, trace_summer, trace_autumn, trace_winter]\nlayout = go.Layout(\n    title = '1998\u5e74-2017\u5e74\u5404\u5b63\u8282\u706b\u707e\u6570\u91cf\u53ca\u5b63\u8282\u5206\u5e03\u7edf\u8ba1\u56fe',\n    barmode='stack',\n    xaxis={'title':'\u6570\u91cf'},yaxis={'title':'\u5e74\u4efd'}\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","440b6cdf":"# \u628a\u6570\u636e\u96c6\u6309\u7167season\u5206\u5272\nfires_per_season = dict(list(df.groupby(df['season'])))\n# \u5355\u72ec\u5904\u7406\u4e0b12\u6708\uff0c1\u6708\u548c2\u6708\uff0c\u4ee5\u4fbf\u987a\u5e8f\u5c55\u793a\u6708\u4efd\nfires_per_season_summer1 = fires_per_season['Summer'].loc[fires_per_season['Summer']['month'].isin(['December'])]\nfires_per_season_summer2 = fires_per_season['Summer'].loc[fires_per_season['Summer']['month'].isin(['January', 'February'])]\nfires_per_season_summer = fires_per_season_summer1.append(fires_per_season_summer2)\n#\u7ed8\u5236\u7bb1\u56fe\ntrace_summer = go.Box(y=fires_per_season_summer.number, x=fires_per_season_summer.month,\n                      name='Summer', boxpoints='all', marker = dict(color = '#AFDD22'))\ntrace_autumn = go.Box(y=fires_per_season['Autumn'].number, x=fires_per_season['Autumn'].month,\n                      name='Autumn', boxpoints='all', marker = dict(color = '#FFA631'))\ntrace_winter = go.Box(y=fires_per_season['Winter'].number, x=fires_per_season['Winter'].month,\n                      name='Winter', boxpoints='all', marker = dict(color = '#44CEF6'))\ntrace_spring = go.Box(y=fires_per_season['Spring'].number, x=fires_per_season['Spring'].month,\n                      name='Spring', boxpoints='all', marker = dict(color = '#EF7A82'))\ndata = [trace_summer, trace_autumn, trace_winter, trace_spring]\nlayout = go.Layout(\n    title = '1998\u5e74-2017\u5e74\u5404\u5b63\u8282\u706b\u707e\u6570\u91cf\u76d2\u56fe',\n    xaxis={'title':'\u6708\u4efd'},yaxis={'title':'\u6570\u91cf'}\n)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","d6b62bcb":"# \u628a\u6570\u636e\u96c6\u6309\u7167state\u8fdb\u884c\u5206\u5272\uff0c\u5e76\u6c42\u51fa\u6bcf\u4e2a\u5730\u533a\u7684\u706b\u707e\u603b\u6570\nsub_fires_per_state = df['number'].groupby(df['state']).sum().round(0).sort_values(ascending=False)\n# \u7ed8\u5236\u997c\u56fe\ntrace = go.Pie(labels=sub_fires_per_state.index, values=sub_fires_per_state.values, textinfo='label+value')\ndata = [trace]\nlayout = go.Layout(title = '1998\u5e74-2017\u5e74\u5404\u5dde\u706b\u707e\u6570\u91cf\u997c\u56fe', height=800)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","ca1497ba":"# \u6709\u90e8\u5206\u5730\u533a\u706b\u707e\u6570\u8fdc\u8d85\u8fc7\u5176\u4ed6\u5730\u533a\uff0c\u7ecf\u8fc7\u68c0\u67e5\u6570\u636e\u96c6\u4e2d\u7684\u5730\u533a\u6709\u91cd\u540d\u60c5\u51b5\n# \u6570\u636e\u96c6\u4e2dMato Grosso, Paraiba, Rio\u8fd9\u4e09\u4e2a\u5730\u533a\u6709\u591a\u4e2a\u76f8\u540c\u7684\u540d\u79f0\uff0c\u624b\u52a8\u5904\u7406\u6570\u636e\u96c6\u8fdb\u884c\u6807\u8bb0\u540e\u518d\u91cd\u65b0\u8fdb\u884c\u63a2\u7d22\ndf2 = pd.read_csv('..\/input\/forest-fires-in-brazil-relabeling\/amazon_v2.csv', encoding='ISO-8859-1')\nmonth_map = {'Janeiro': 'January', 'Fevereiro': 'February', 'Mar\u00e7o': 'March', 'Abril': 'April', 'Maio': 'May',\n          'Junho': 'June', 'Julho': 'July', 'Agosto': 'August', 'Setembro': 'September', 'Outubro': 'October',\n          'Novembro': 'November', 'Dezembro': 'December'}\ndf2['month'] = df2['month'].map(month_map)\ndf2.drop(columns = ['date'], axis=1, inplace=True)\ndf2.head(5)","f82427ec":"# \u628a\u6570\u636e\u96c6\u6309\u7167\u65b0\u6807\u8bb0\u7684state\u8fdb\u884c\u5206\u5272\uff0c\u5e76\u6c42\u51fa\u6bcf\u4e2a\u5730\u533a\u7684\u706b\u707e\u603b\u6570\nsub_fires_per_state = df2['number'].groupby(df2['state']).sum().round(0).sort_values(ascending=False)\n# \u7ed8\u5236\u997c\u56fe\ntrace = go.Pie(labels=sub_fires_per_state.index, values=sub_fires_per_state.values, textinfo='label+value')\ndata = [trace]\nlayout = go.Layout(title='1998\u5e74-2017\u5e74\u5404\u5dde\u706b\u707e\u6570\u91cf\u997c\u56fe', height=800)\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","d2fc10df":"#\u6839\u636e\u5dde\u62c6\u5206\u6570\u636e\u96c6\nfires_per_state = dict(list(df2.groupby(df2['state'])))\n# print(fires_per_state)\nstates = df2['state'].unique()\nyears = df2['year'].unique()\nfires_per_state_per_year = []\nfor state in states:\n    sub_fires = fires_per_state[state]['number'].groupby(fires_per_state[state]['year']).sum().round(0)\n    fires_per_state_per_year.append(list(sub_fires))\n# print(fires_per_state_per_year)","b8486fa0":"# \u7ed8\u5236\u70ed\u56fe\ntrace = go.Heatmap(z=fires_per_state_per_year, x=years, y=states, colorscale='reds')\ndata = [trace]\nlayout = go.Layout(title = '\u5404\u5dde\u6bcf\u5e74\u706b\u707e\u6570\u91cf\u70ed\u56fe', \n                   xaxis={'title':'\u5e74\u4efd', 'nticks':20},yaxis={'title':'\u5dde', 'nticks':27},\n                   margin={'l':100})\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","a23f038a":"months = df2['month'].unique()\n# \u6708\u4efd\u5982\u679c\u4e3a\u5b57\u7b26\u4e32\u7684\u8bdd\u5c06\u4f1a\u6309\u7167\u5b57\u5178\u987a\u5e8f\u8fdb\u884c\u7edf\u8ba1\uff0c\u6240\u4ee5\u624b\u52a8\u8f6c\u6362\u4e3a\u6570\u503c\u7c7b\u578b\u6708\u4efd\nnum_month_map =  {'January': 1, 'February': 2, 'March': 3, 'April': 4, 'May': 5,'June': 6,\n                  'July': 7, 'August': 8, 'September': 9, 'October': 10,'November': 11, 'December': 12}\ndf2['month_num'] = df2['month'].map(num_month_map)\nfires_per_state = dict(list(df2.groupby(df2['state'])))\n# \u6309\u7167\u6708\u4efd\u5206\u5272\u6570\u636e\u96c6\nfires_per_state_per_month = []\nfor state in states:\n    sub_fires = fires_per_state[state]['number'].groupby(fires_per_state[state]['month_num']).sum().round(0)\n    fires_per_state_per_month.append(list(sub_fires))\n# print(fires_per_state_per_month)","df021d22":"# \u7ed8\u5236\u70ed\u56fe\ntrace = go.Heatmap(z=fires_per_state_per_month, x=months, y=states, colorscale='reds')\ndata = [trace]\nlayout = go.Layout(title = '\u5404\u5dde\u6bcf\u6708\u706b\u707e\u6570\u91cf\u70ed\u56fe', \n                   xaxis={'title':'\u6708\u4efd', 'nticks':20},yaxis={'title':'\u5dde', 'nticks':27},\n                   margin={'l':100})\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","9f965661":"\u628a\u6bcf\u4e2a\u6708\u5206\u53d1\u751f\u7684\u68ee\u6797\u706b\u707e\u4ee5\u7bb1\u56fe\u5f62\u5f0f\u5c55\u73b0\u51fa\u6765\uff0c\u901a\u8fc7\u8be5\u56fe\u6211\u4eec\u53ef\u4ee5\u6709\u6548\u7684\u8bc6\u522b\u6570\u636e\u7684\u7279\u5f81\uff0c\u76f4\u89c2\u5730\u8bc6\u522b\u7edf\u8ba1\u6570\u636e\u4e2d\u6bcf\u4e2a\u6708\u62a5\u544a\u7684\u706b\u707e\u6570\u6709\u65e0\u5f02\u5e38\u6570\u91cf\uff0c\u4ee5\u53ca\u5224\u65ad\u5386\u53f2\u4e0a\u5404\u6708\u706b\u707e\u6570\u91cf\u7684\u79bb\u6563\u7a0b\u5ea6\u548c\u504f\u5411\u3002\n\n\u8be5\u56fe\u8fdb\u4e00\u6b65\u8bc1\u5b9e\u4e86\u6bcf\u5e746\u6708\u523012\u6708\u662f\u68ee\u6797\u706b\u707e\u53d1\u751f\u7684\u9ad8\u5cf0\u671f\uff0c\u5728\u51ac\u5b63\u548c\u6625\u5b63\u4e24\u4e2a\u5b63\u8282\uff0c\u6708\u68ee\u6797\u706b\u707e\u6570\u91cf\u8d85500\u7684\u60c5\u51b5\u8fdc\u8d85\u590f\u5b63\u548c\u79cb\u5b63\u3002","fe56b223":"\u672c\u6570\u636e\u96c6\u7684\u8ba8\u8bba\u4e2d\u4e5f\u63d0\u5230[\u91cd\u590d\u6570\u636e\u7684\u95ee\u9898](https:\/\/www.kaggle.com\/gustavomodelli\/forest-fires-in-brazil\/discussion\/113114)\uff0c\u8fd9\u91cc\u6211\u4eec\u540c\u6837\u8ba4\u4e3a\u4ed6\u4eec\u662f\u4e0d\u540c\u7684\u5dde\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u5982\u4f55\u533a\u5206\u8fd9\u4e9b\u5dde\uff0c\u6240\u4ee5\u6211\u4ec5\u7528\u4e86\u6570\u5b57\u4f5c\u4e3a\u6807\u8bb0\uff0c\u5176\u4ed6\u4fe1\u606f\u4fdd\u6301\u539f\u6837\u3002","bee708fc":"\u628a\u6bcf\u5e74\u53d1\u751f\u7684\u706b\u707e\u603b\u6570\u7ed8\u5236\u6210\u6761\u5f62\u56fe\uff0c\u5e76\u7528\u4e0d\u540c\u7684\u989c\u8272\u8868\u793a\u4e0d\u540c\u5b63\u8282\u53d1\u751f\u7684\u706b\u707e\u3002\u4e2a\u989c\u8272\u7684\u957f\u5ea6\u4ee3\u8868\u7740\u8be5\u5b63\u8282\u68ee\u6797\u706b\u707e\u7684\u6570\u91cf\uff0c\u603b\u957f\u5ea6\u4ee3\u8868\u7740\u8be5\u5e74\u53d1\u751f\u7684\u68ee\u6797\u706b\u707e\u603b\u6570\u3002\n\n\u4ece\u56fe\u4e2d\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u4ece\u6761\u5f62\u56fe\u7684\u89d2\u5ea6\u770b\u5230\u6bcf\u5e74\u706b\u707e\u603b\u6570\u60c5\u51b5\uff0c\u8fd8\u53ef\u4ee5\u770b\u51fa\u6bcf\u5e74\u7684\u706b\u707e\u5927\u90fd\u96c6\u4e2d\u5728\u4e86\u6625\u5b63\u548c\u51ac\u5b63\u4e24\u4e2a\u5b63\u8282\u3002\n","e584d4da":"The English description will be updated later.\n\n\u672c\u6b21\u53ef\u89c6\u5316\u5206\u6790\u5bf9\u4e8e\u6211\u800c\u8a00\u662f\u4e00\u4e2a\u5b66\u4e60\u7684\u8fc7\u7a0b\uff0c\u7528\u5230\u7684\u5de5\u5177\u662fplotly\u3002\n\n\u6211\u4ece[Dgomonov](https:\/\/www.kaggle.com\/dgomonov)\u7684[Advanced Fires Analysis with Plotly](https:\/\/www.kaggle.com\/dgomonov\/advanced-fires-analysis-with-plotly)\uff0c[Ethan Schacht](https:\/\/www.kaggle.com\/etsc9287)\u7684[A Quick Analysis of Forest Fires in Brazil](https:\/\/www.kaggle.com\/etsc9287\/a-quick-analysis-of-forest-fires-in-brazil)\u4ee5\u53ca\u5176\u4ed6\u4eba\u7684\u4f18\u79c0\u4f5c\u54c1\u4e2d\u53d7\u5230\u4e86\u5f88\u5927\u7684\u542f\u53d1\u3002\n\n\u5b9e\u9a8c\u4e3b\u8981\u5305\u542b\u4e86\u6bcf\u5e74\u706b\u707e\u603b\u6570\u7684\u6563\u70b9\u56fe\u3001\u6bcf\u5e74\u706b\u707e\u603b\u6570\u53ca\u6bcf\u5e74\u6bcf\u4e2a\u5b63\u8282\u706b\u707e\u6570\u5360\u6bd4\u7684\u6761\u5f62\u56fe\u3001\u6bcf\u5e74\u6bcf\u6708\u706b\u707e\u6570\u7684\u76d2\u56fe\u3001\u5404\u4e2a\u5dde\u706b\u707e\u603b\u6570\u7684\u997c\u56fe\uff0c\u5404\u4e2a\u5dde\u6bcf\u5e74\u706b\u707e\u6570\u91cf\u7684\u70ed\u56fe\u4ee5\u53ca\u5404\u4e2a\u6708\u6bcf\u5e74\u706b\u707e\u6570\u91cf\u7684\u70ed\u56fe\u3002","594c75ff":"## \u603b\u7ed3\nPlotly\u662f\u4e00\u4e2a\u6570\u636e\u53ef\u89c6\u5316\u7684\u5229\u5668\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e2d\u5bf9\u6570\u636e\u7684\u5904\u7406\u540e\u7ecf\u8fc7Plotly\u7684\u52a8\u6001\u53ef\u89c6\u5316\u7684\u5c55\u793a\uff0c\u6536\u83b7\u4e86\u5f88\u591a\u5173\u4e8e\u5df4\u897f\u68ee\u6797\u706b\u707e\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\n\u5728\u8fc7\u53bb\u768420\u5e74\u91cc\uff0c\u4ee52003\u5e74\u4e3a\u65f6\u95f4\u70b9\u68ee\u6797\u706b\u707e\u7684\u603b\u6570\u7ecf\u5386\u4e86\u5148\u4e0a\u5347\u518d\u4e0b\u964d\u7684\u4e00\u4e2a\u8d8b\u52bf\uff0c\u4f46\u662f\u4ece2008\u5e74\u5f00\u59cb\uff0c\u6bcf\u5e74\u68ee\u6797\u706b\u707e\u7684\u603b\u6570\u672a\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u63a7\u5236\uff0c\u751a\u81f3\u8fd8\u6709\u4e00\u4e2a\u589e\u591a\u7684\u8d8b\u52bf\u3002\u901a\u8fc7\u8fdb\u4e00\u6b65\u5bf9\u5404\u4e2a\u5dde\u7684\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0Mato Grosso\u5dde\u68ee\u6797\u706b\u707e\u7684\u95ee\u9898\u5c24\u4e3a\u4e25\u91cd\uff0c\u5b83\u68ee\u6797\u706b\u707e\u7684\u6570\u91cf\u6700\u591a\u800c\u4e14\u76f8\u5bf9\u4e8e\u5176\u4ed6\u5dde\u6bcf\u5e74\u706b\u707e\u7684\u6570\u91cf\u76f8\u5bf9\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0cMato Grosso\u5dde\u7684\u706b\u707e\u8d8b\u52bf\u662f\u6700\u4e0d\u4e50\u89c2\u7684\u3002\n\n\u5176\u6b21\u901a\u8fc7\u5bf9\u4e0d\u540c\u6708\u4efd\u7684\u5386\u53f2\u68ee\u6797\u706b\u707e\u6570\u91cf\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u51ac\u5b63\u548c\u6625\u5b63\u7684\u68ee\u6797\u706b\u707e\u6700\u4e3a\u4e25\u91cd\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5b63\u8282\u5386\u53f2\u6708\u706b\u707e\u6570\u5927\u4e8e500\u7684\u60c5\u51b5\u8fdc\u5927\u4e8e\u590f\u5b63\u548c\u79cb\u5b63\uff0c\u6240\u4ee5\u5e94\u5f53\u5728\u8fd9\u4e9b\u5b63\u8282\u52a0\u5f3a\u5e94\u5bf9\u63aa\u65bd\u3002\u5f53\u7136\u4e5f\u6709\u5982Roraima\u7b49\u5dde\u7684\u68ee\u6797\u706b\u707e\u591a\u53d1\u751f\u4e8e\u4e0a\u534a\u5e74\uff0c\u4e5f\u5c31\u662f\u590f\u5b63\u548c\u79cb\u5b63\uff0c\u6240\u4ee5\u5e94\u8be5\u7ed3\u5408\u5b9e\u9645\u5236\u5b9a\u9002\u5408\u81ea\u5df1\u7684\u9632\u8303\u63aa\u65bd\u3002\n","070ddf21":"\u628a1998\u5e74\u52302017\u5e74\u5404\u5dde\u7684\u68ee\u6797\u706b\u707e\u6570\u8fdb\u884c\u6c47\u603b\u7ed8\u5236\u997c\u56fe\uff0c\u901a\u8fc7\u4ee3\u8868\u5404\u5dde\u7684\u6247\u9762\u5360\u6574\u4f53\u7684\u6bd4\u4f8b\uff0c\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u5230\u5404\u5dde\u68ee\u6797\u706b\u707e\u7684\u53d1\u751f\u60c5\u51b5\u3002\n\n\u5176\u4e2d\u6392\u540d\u524d\u5341\u7684\u4e3a\uff1aMato Grosso\u3001Paraiba\u3001Sao Paulo\u3001Rio\u3001Bahia\u3001Piau\u3001Goias\u3001Minas Gerais\u3001Tocantins\u3001Amazonas","edb84ead":"\u6570\u636e\u96c6\u4e2d\u5b58\u5728\u76f8\u540c\u540d\u79f0\u5dde\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u6211\u4eec\u73b0\u5728\u628a\u8fd9\u4e9b\u5dde\u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u5dde\uff0c\u5e76\u5bf9\u6570\u636e\u96c6\u624b\u52a8\u8fdb\u884c\u6807\u8bb0\u3002\u91cd\u65b0\u7edf\u8ba1\u6570\u636e\u5e76\u7ed8\u5236\u997c\u56fe\uff0c\u5176\u4e2d\u6392\u540d\u524d\u5341\u7684\u4e3a\uff1aSao Paul\u3001Mato Grosso1\u3001Mato Grosso2\u3001Bahia\u3001Paraiba2\u3001Piau\u3001Goias\u3001Minas Gerais\u3001Tocantins\u3001Amazonas\n\n\u5176\u4e2dMato Grossol\u5dde\u867d\u7136\u88ab\u91cd\u65b0\u6807\u8bb0\u4e3a\u4e24\u4e2a\u5dde\uff0c\u4f46\u662f\u5b83\u4ecd\u7136\u6392\u5728\u68ee\u6797\u706b\u707e\u6570\u91cf\u7684\u7b2c\u4e8c\u540d\u548c\u7b2c\u4e09\u540d\uff0c\u800cParaiba\u6392\u5728\u7b2c\u4e94\u540d\u548c\u4e8c\u5341\u4e00\u540d\uff0cRio\u88ab\u91cd\u65b0\u6807\u8bb0\u540e\u5219\u5747\u672a\u8fdb\u5165\u524d\u4e09\u540d\u3002","b290d748":"\u5404\u5dde\u6bcf\u6708\u53d1\u751f\u68ee\u6797\u706b\u707e\u6570\u91cf\u7684\u70ed\u56fe\uff08HeatMap\uff09\uff0c\u5176\u4e2d\u5927\u591a\u6570\u5dde\u7684\u706b\u707e\u96c6\u4e2d\u4e8e\u4e0b\u534a\u5e74\uff0c\u4f46\u4e5f\u6709\u5c11\u6570\u5f02\u5e38\uff0c\u6bd4\u5982Mato Grosso1\u5dde\u548cRoraima\u5dde\u96c6\u4e2d\u5728\u4e0a\u534a\u5e74\uff0cTocantins\u5dde\u5219\u96c6\u4e2d\u5728\u5e74\u4e2d\u7b49\u7b49\u3002","a91ad572":"\u628a\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u6309\u7167\u5dde\u548c\u5e74\u4efd\u8fdb\u884c\u6c47\u603b\u6574\u7406\uff0c\u7ed8\u5236\u5173\u4e8e\u5404\u5dde\u6bcf\u5e74\u53d1\u751f\u68ee\u6797\u706b\u707e\u6570\u91cf\u7684\u70ed\u56fe\uff08HeatMap\uff09\uff0c\u901a\u8fc7\u989c\u8272\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u7684\u4e86\u89e3\u5404\u4e2a\u5dde\u6bcf\u5e74\u706b\u707e\u6570\u91cf\u7684\u60c5\u51b5\u3002","042b2ebe":"\u4ece1998\u5e74\u52302003\u5e74\u68ee\u6797\u706b\u707e\u6570\u4e0a\u5347\u660e\u663e\uff0c\u4ece2003\u5e74\u52302008\u5e74\u68ee\u6797\u706b\u707e\u5f97\u5230\u4e86\u6bd4\u8f83\u597d\u7684\u63a7\u5236\u6570\u91cf\u6709\u660e\u663e\u4e0b\u964d\uff0c\u4f46\u662f\u4e4b\u540e\u4e00\u76f4\u52302017\u5e74\u6bcf\u5e74\u706b\u707e\u6570\u8d77\u8d77\u4f0f\u4f0f\uff0c\u4e00\u76f4\u572835000\u8d77\u523042000\u8d77\u95f4\u3002"}}