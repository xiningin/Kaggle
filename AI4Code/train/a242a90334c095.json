{"cell_type":{"e890686c":"code","9087a866":"code","0bb2776c":"code","872100ca":"code","76ee1b36":"code","f63bee37":"code","014d60ce":"code","d016e617":"code","ab0f70d7":"code","b06d4fc9":"code","48bc276b":"code","283769db":"code","a101c77a":"code","f60e0099":"markdown","5e04950b":"markdown","8015f5e5":"markdown","1328bb3e":"markdown","9cacb711":"markdown","7eab352b":"markdown"},"source":{"e890686c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9087a866":"from sklearn.model_selection import train_test_split\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\n%matplotlib inline\n\npd.set_option('display.max_columns', 500)","0bb2776c":"df = pd.read_csv('..\/input\/house-prices-dataset\/train.csv')\n\ndf_train, df_test = train_test_split(df, test_size=0.2, random_state=42)","872100ca":"plt.subplots(figsize=(20, 5))\nsns.distplot(df_train['SalePrice'], rug=True)","76ee1b36":"plt.subplots(figsize=(15, 20))\nsns.barplot(x=df_train.count()[:], y=df_train.count().index)","f63bee37":"obj_features = df_train.select_dtypes('object').columns.values\n\nnum_features = df_train.select_dtypes(['int', 'float64']).columns.values","014d60ce":"df[num_features].hist(figsize=(40, 40), bins=20)","d016e617":"categorical = [\n    'BedroomAbvGr',\n    'BsmtFullBath',\n    'BsmtHalfBath',\n    'Fireplaces',\n    'FullBath',\n    'KitchenAbvGr',\n    'OverallCond',\n    'OverallQual',\n    'TotRmsAbvGrd'\n]","ab0f70d7":"categorical_features = categorical + list(obj_features)\n\nnumerical_features = list(set(num_features) - set(categorical_features))\n\nnumerical_features.remove('Id')","b06d4fc9":"nc = 4\nnr = len(categorical_features)\/\/nc\nf, ax = plt.subplots(nrows=nr,ncols=nc,squeeze=False,figsize=(21, 4*nr))\nf.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=0.4, hspace=0.4)\n\nfor col, ax in zip(categorical_features, ax.flatten()[:len(categorical_features)]):\n    b = sns.boxplot(data=df_train,x=col,y='SalePrice', ax=ax)\n    b.twinx()\n    ct = sns.countplot(x=col, data=df_train, color='red', alpha=0.3)\n    ct.set(xlabel=None)\n    \nplt.show()","48bc276b":"plot_data = df_train[numerical_features].sample(n=200, replace=False, random_state=1)\n\ng = sns.PairGrid(plot_data)\ng.map_upper(sns.scatterplot, hue=\"SalePrice\", data=plot_data,\n            palette=sns.cubehelix_palette(plot_data['SalePrice'].nunique(), start=.5, rot=-.75))\ng.map_diag(sns.kdeplot, bw=10)\ng.map_lower(sns.kdeplot, bw=10, cmap=\"Blues\", shade=True, shade_lowest=False)","283769db":"nc = 4\nnr = len(numerical_features)\/\/nc\nf, ax = plt.subplots(nrows=nr,ncols=nc,squeeze=False,figsize=(21, 4*nr))\nf.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=0.4, hspace=0.4)\n\nfor col, ax in zip(numerical_features, ax.flatten()[:len(numerical_features)]):\n    _, _, r_value, _, _ = stats.linregress(df_train[col], df_train['SalePrice'])\n    r_squared = r_value**2\n    ax.set(title= f\"r2:{r_squared:.2f}\")\n    sns.regplot(data=df_train[numerical_features],y='SalePrice',x=col, ax=ax)   \n    \nplt.show()","a101c77a":"correlation = df_train[numerical_features].corr().abs()\nsns.clustermap(correlation, cmap='coolwarm', \n               vmin=0, vmax=0.8, center=0, \n               square=True, linewidths=.5, \n               figsize=(50,50), yticklabels=1)","f60e0099":"# Numerical Features Analysis","5e04950b":"# Checking out null values","8015f5e5":"# Categorical Features Analysis","1328bb3e":"# Number features distribution","9cacb711":"# Feature Correlation","7eab352b":"# Price distribution"}}