{"cell_type":{"a9525bb8":"code","f8941fac":"code","a942ec93":"code","463fbac5":"code","52d7db3a":"code","ae9b4e60":"code","1bbbae6f":"code","0721e271":"code","887dbac1":"code","f4e9c804":"code","b74272b7":"code","c798b7e5":"code","783b1792":"code","7b24e2fb":"code","8fb7cf69":"code","68999bfb":"code","152cf69c":"code","24c65014":"code","49685d3f":"code","0dd82146":"code","a31a6260":"code","8c3fd7b7":"code","14449ef3":"code","f0efd963":"code","976901d4":"code","dc3ccea2":"code","831b19c8":"code","5fcc8d52":"code","5db8dcd2":"code","14afecf9":"code","ff027e32":"code","ba5dc8ab":"code","1d027230":"code","940dc4b2":"code","a0d0fa00":"code","3438ddb0":"code","7977bbec":"code","93a2a68f":"code","89b2a980":"code","5a9e2a4d":"code","566f4f90":"code","8ef72112":"code","180ad1c4":"code","bcc87487":"code","3c5a4bef":"code","a57e34d3":"code","ddc86ec1":"code","e814c163":"code","6a230f4a":"code","f5e80994":"markdown","fcd31e5a":"markdown","bcb8baf0":"markdown","b8f2ac9e":"markdown","dd1ccfe9":"markdown","adcfab9b":"markdown","b010d0d3":"markdown","c132f20a":"markdown","6e84d139":"markdown","ce54bdd4":"markdown","ff41acd0":"markdown","afeabb71":"markdown","b726bc52":"markdown","f779702f":"markdown","f1cb6b00":"markdown","1685b68f":"markdown","88651997":"markdown"},"source":{"a9525bb8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f8941fac":"from IPython.core.display import display, HTML\ndisplay(HTML(\"<style>.container { width:100% !important; }<\/style>\"))\n\nimport os\nimport sys\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\npd.set_option('display.max_colwidth', 0)","a942ec93":"train_df = pd.read_csv('..\/input\/movie-dataset-rotten-tomatoes\/train.tsv', sep='\\t')\ntest_df = pd.read_csv('..\/input\/movie-dataset-rotten-tomatoes\/test.tsv', sep='\\t')","463fbac5":"train_df.head()","52d7db3a":"train_df.shape","ae9b4e60":"train_df.count()","1bbbae6f":"len(train_df.SentenceId.unique())","0721e271":"len(train_df.Phrase.unique()), len(train_df.PhraseId.unique())","887dbac1":"train_df.Sentiment.unique()","f4e9c804":"def id_to_label(id):\n    id_to_label_dict = {\n        0: 'negative',\n        1: 'somewhat negative',\n        2: 'neutral',\n        3: 'somewhat positive',\n        4: 'positive'\n    }\n    return id_to_label_dict[id]","b74272b7":"train_df['sentiment_label'] = list(map(id_to_label, train_df['Sentiment']))","c798b7e5":"train_df.head()","783b1792":"sentiment_distribution_counts = train_df.groupby('sentiment_label')['sentiment_label'].count()","7b24e2fb":"plt.figure(figsize=(16,9))\nsns.countplot(train_df['sentiment_label'])","8fb7cf69":"temp_df = train_df.drop_duplicates(subset=['SentenceId'])","68999bfb":"plt.figure(figsize=(16,9))\nplt.title('Review Sentiments on Unique Sentences')\nsns.countplot(temp_df['sentiment_label'])","152cf69c":"import nltk\ndef remove_punctuation(phrase):\n    tokenizer = nltk.RegexpTokenizer(r\"\\w+\")\n    new_words = tokenizer.tokenize(phrase)\n    return ' '.join(new_words)","24c65014":"train_df['clean_phrase'] = list(map(remove_punctuation, train_df['Phrase']))","49685d3f":"train_df.head()","0dd82146":"from nltk.corpus import stopwords\nenglish_stops = set(stopwords.words('english'))","a31a6260":"print(len(english_stops))","8c3fd7b7":"def remove_stop_words(phrase):\n    tokenized = phrase.split(' ')\n    filtered = list()\n    for word in tokenized:\n        if word.lower() not in english_stops:\n            filtered.append(word)\n    return ' '.join(filtered)","14449ef3":"train_df['phrase_without_stopwords'] = list(map(remove_stop_words, train_df['clean_phrase']))","f0efd963":"train_df.head()","976901d4":"train_df['phrase_length'] = train_df['phrase_without_stopwords'].apply(lambda x: len(x.split(' ')))","dc3ccea2":"train_df.head()","831b19c8":"one_word_review = train_df[train_df.phrase_length == 1]","5fcc8d52":"one_word_review.head()","5db8dcd2":"nan_value = float(\"NaN\")\ntrain_df.replace(\"\", nan_value, inplace=True)\ntrain_df.replace(\" \", nan_value, inplace=True)\ntrain_df.dropna(subset = [\"phrase_without_stopwords\"], inplace=True)","14afecf9":"one_word_review = train_df[train_df.phrase_length == 1]","ff027e32":"one_word_review.head()","ba5dc8ab":"from wordcloud import WordCloud","1d027230":"def show_wordcloud(data, stopwords, title = None):\n    \"\"\"\n    Overridden the function from `https:\/\/www.kaggle.com\/parth05rohilla\/sentiment-analysis-using-7-different-techniques`\n    \"\"\"\n    wordcloud = WordCloud(\n        background_color='black',\n        stopwords=stopwords,\n        max_words=200,\n        max_font_size=40, \n        scale=3,\n        random_state=1 # chosen at random by flipping a coin; it was heads\n    ).generate(str(data))\n    fig = plt.figure(1, figsize=(15, 15))\n    plt.axis('off')\n    if title: \n        fig.suptitle(title, fontsize=20)\n        fig.subplots_adjust(top=2.3)\n\n    plt.imshow(wordcloud)\n    plt.show()","940dc4b2":"show_wordcloud(train_df['phrase_without_stopwords'], english_stops, 'Most Common Words from the whole corpus')","a0d0fa00":"show_wordcloud(train_df[train_df['Sentiment'] == 0]['phrase_without_stopwords'], english_stops, 'Negative Reviews')","3438ddb0":"show_wordcloud(train_df[train_df['Sentiment'] == 1]['phrase_without_stopwords'], english_stops, 'Somewhat Negative Reviews')","7977bbec":"show_wordcloud(train_df[train_df['Sentiment'] == 2]['phrase_without_stopwords'], english_stops, 'Neutral Reviews')","93a2a68f":"show_wordcloud(train_df[train_df['Sentiment'] == 3]['phrase_without_stopwords'], english_stops, 'Somewhat Positive Reviews')","89b2a980":"show_wordcloud(train_df[train_df['Sentiment'] == 4]['phrase_without_stopwords'], english_stops, 'Positive Reviews')","5a9e2a4d":"grouped_by_sentiment = one_word_review.groupby('sentiment_label')","566f4f90":"from collections import defaultdict\nsentiment_word_count_dict = dict()\n\nfor sentiment, data in grouped_by_sentiment:\n    sentiment_word_count_dict[sentiment] = dict()\n    for d in data.values:\n        if d[-2] not in sentiment_word_count_dict[sentiment].keys():\n            sentiment_word_count_dict[sentiment][d[-2]] = 1\n        else:\n            sentiment_word_count_dict[sentiment][d[-2]] +=1","8ef72112":"train_df['sentiment_label'].unique()","180ad1c4":"negative_sentiment_dict = sentiment_word_count_dict['negative']\nsomewhat_negative_sentiment_dict = sentiment_word_count_dict['somewhat negative']\nneutral_sentiment_dict = sentiment_word_count_dict['neutral']\nsomewhat_positive_sentiment_dict = sentiment_word_count_dict['somewhat positive']\npositive_sentiment_dict = sentiment_word_count_dict['positive']","bcc87487":"import operator\nsorted_negative_sentiment_words = sorted(negative_sentiment_dict.items(), key=operator.itemgetter(1), reverse=True)[:10]\nsorted_somewhat_negative_sentiment_words = sorted(somewhat_negative_sentiment_dict.items(), key=operator.itemgetter(1), reverse=True)[:10]\nsorted_neutral_sentiment_words = sorted(neutral_sentiment_dict.items(), key=operator.itemgetter(1), reverse=True)[:10]\nsorted_somewhat_positive_sentiment_words = sorted(somewhat_positive_sentiment_dict.items(), key=operator.itemgetter(1), reverse=True)[:10]\nsorted_positive_sentiment_words = sorted(positive_sentiment_dict.items(), key=operator.itemgetter(1), reverse=True)[:10]","3c5a4bef":"plt.figure(figsize=(32,9))\nplt.xticks(rotation=90)\nplt.title(\"Top 10 one word Negative Reviews\")\nsns.barplot(x=[i[0] for i in sorted_negative_sentiment_words], y=[i[1] for i in sorted_negative_sentiment_words], )\n","a57e34d3":"plt.figure(figsize=(32,9))\nplt.xticks(rotation=90)\nplt.title(\"Top 10 one word Somewhat Negative Reviews\")\nsns.barplot(x=[i[0] for i in sorted_somewhat_negative_sentiment_words], y=[i[1] for i in sorted_somewhat_negative_sentiment_words], )","ddc86ec1":"plt.figure(figsize=(32,9))\nplt.xticks(rotation=90)\nplt.title(\"Top 10 one word Neutral Reviews\")\nsns.barplot(x=[i[0] for i in sorted_neutral_sentiment_words], y=[i[1] for i in sorted_neutral_sentiment_words], )","e814c163":"plt.figure(figsize=(32,9))\nplt.xticks(rotation=90)\nplt.title(\"Top 10 one word Somewhat Positive Reviews\")\nsns.barplot(x=[i[0] for i in sorted_somewhat_positive_sentiment_words], y=[i[1] for i in sorted_somewhat_positive_sentiment_words], )","6a230f4a":"plt.figure(figsize=(32,9))\nplt.xticks(rotation=90)\nplt.title(\"Top 10 one word Positive Reviews\")\nsns.barplot(x=[i[0] for i in sorted_positive_sentiment_words], y=[i[1] for i in sorted_positive_sentiment_words], )","f5e80994":"### Adding Phrase Length as another feature","fcd31e5a":"### Let's remove punctuation marks as well\n### There are multiple ways to do it \n### I am using RegexpTokenizer from nltk\n### (Refer) https:\/\/www.kite.com\/python\/answers\/how-to-remove-all-punctuation-marks-with-nltk-in-python","bcb8baf0":"### There are words like `a, am, and, any... ` etc, such words don't carry any significant importance as such \n### Such words are called `Stop Words` and generally they are omitted from the analysis\n\n### Let's find and remove such stop words from our dataset\n\n```\nIf you have not downloaded already, use this\n\nimport nltk\nnltk.download('stopwords')\n```","b8f2ac9e":"### Similarly we can analyze the data even more to understand it even further","dd1ccfe9":"### No Missing Values","adcfab9b":"### Loading Data","b010d0d3":"### Let's analyze 1 word phrases","c132f20a":"### Some more look into one_word_review (Phrases)","6e84d139":"### Some data cleaning (Removing rows with only whitespace in `phrase_without_stopwords`)","ce54bdd4":"### let's see which words are mostly used for all emotions","ff41acd0":"### At this point we can visualize some most common words using the wordcloud","afeabb71":"```\nThe sentiment labels are:\n\n0 - negative\n1 - somewhat negative\n2 - neutral\n3 - somewhat positive\n4 - positive\n```","b726bc52":"## Let's check the sentiment distribution in the train set","f779702f":"### Plotting Top 10 negative sentiment words","f1cb6b00":"# EDA Movie Review Dataset Rotten Tomatoes","1685b68f":"### Imports","88651997":"### nltk provides us with 179 unique stopwords, we will use this set to filter our `CleanPhrase`"}}