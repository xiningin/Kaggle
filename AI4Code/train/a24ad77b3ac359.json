{"cell_type":{"0e44ed97":"code","952457c6":"code","e1babc70":"code","0dab535f":"code","0fe27c1b":"code","28b2b719":"code","8137b486":"code","a8a4d8c6":"code","47fbee2c":"code","6189ca73":"code","6aef95ef":"code","aeab9d34":"code","8db2cefa":"code","00819c18":"code","2e40f9ff":"code","71b0fb2b":"code","db17057b":"code","e09b5a24":"code","95d56cc2":"code","c4d881d7":"code","e7bed365":"code","53534f39":"code","e3ad8b8c":"code","50559e19":"code","cd7aab16":"code","84ef13e9":"code","5dee6be7":"code","a969d5f5":"code","2d7da3f6":"code","68b3b9d0":"code","bedf9a29":"code","b2a0bd9d":"code","dd2ae4f4":"code","af460365":"code","3543e5b7":"code","0c5d5678":"code","069f9010":"code","5df8296a":"code","6132d497":"code","0dbe7667":"code","beb779bd":"code","718ef954":"code","0f8eb742":"code","ef739eb2":"code","59a029a1":"code","5d021e60":"code","e069f555":"code","fe4989ea":"code","f575a683":"code","08511941":"markdown","10835342":"markdown","13c2f6bf":"markdown","25305ef7":"markdown","32fd07ce":"markdown","8aed206e":"markdown","07b1c6b1":"markdown"},"source":{"0e44ed97":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom pylab import rcParams\n#sklearn \nimport sklearn\nfrom sklearn.cluster import KMeans \nfrom sklearn.preprocessing import scale # for scaling the data\nimport sklearn.metrics as sm # for evaluating the model\nfrom sklearn import datasets\nfrom sklearn.metrics import confusion_matrix,classification_report\nimport plotly.express as px\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","952457c6":"df=pd.read_csv(\"\/kaggle\/input\/top50spotify2019\/top50.csv\",encoding='ISO-8859-1')\ndf.head()","e1babc70":"df.info()","0dab535f":"df.corr()","0fe27c1b":"df.columns","28b2b719":"df=df.rename(columns={'Loudness..dB..':\"loud\",'Valence.':\"valence\",'Length.':\"length\",'Acousticness..':\"acoust\",'Speechiness.':\"speech\",'Beats.Per.Minute':\"bpm\",'Track.Name':\"track\", 'Artist.Name':\"artist\"})","8137b486":"df=df.drop(['Unnamed: 0'],axis=1)\ndf.head()","a8a4d8c6":"import seaborn as sns\nimport matplotlib.pyplot as plt\nheatmap=sns.heatmap(df.corr(),vmax=1, vmin=-1,annot=True,cmap=\"BrBG\")\nplt.figure(figsize=(16, 6))","47fbee2c":"df.Genre.value_counts().plot(kind=\"bar\")","6189ca73":"df.Genre.value_counts()","6aef95ef":"df.artist.value_counts()","aeab9d34":"for i in df.Genre:\n    if \"pop\" in i:\n        df.Genre=df.Genre.replace(i,\"pop\")\n    if \"edm\" in i:\n        df.Genre=df.Genre.replace(i,\"edm\")\n    if \"hip hop\" in i: \n        df.Genre=df.Genre.replace(i,\"hip hop\")\n    if \"room\" in i:\n        df.Genre=df.Genre.replace(i,\"room\")\n    if \"r&b\"  in i:  \n        df.Genre=df.Genre.replace(i,\"r&b\")\n    if \"reggae\" in i:  \n        df.Genre=df.Genre.replace(i,\"reggae\")\n    if \"rap\" in i:\n        df.Genre =df.Genre.replace(i,\"hip hop\")\n    if \"boy band\" in i:\n        df.Genre=df.Genre.replace(i,\"pop\")","8db2cefa":"df.Genre.unique()","00819c18":"df.Genre.value_counts()","2e40f9ff":"for i in df.Genre:\n    if \"pop\" in i:\n        df.Genre=df.Genre.replace(i,\"pop\")\n    if \"edm\" in i:\n        df.Genre=df.Genre.replace(i,\"edm\")\n    if \"hip hop\" in i: \n        df.Genre=df.Genre.replace(i,\"hip hop\")\n    if \"room\" in i:\n        df.Genre=df.Genre.replace(i,\"other\")\n    if \"r&b\"  in i:  \n        df.Genre=df.Genre.replace(i,\"other\")\n    if \"reggae\" in i:  \n        df.Genre=df.Genre.replace(i,\"reggae\")\n    if \"rap\" in i:\n        df.Genre =df.Genre.replace(i,\"hip hop\")\n    if \"boy band\" in i:\n        df.Genre=df.Genre.replace(i,\"pop\")\n    if \"brostep\" in i:\n        df.Genre=df.Genre.replace(i,\"other\")","71b0fb2b":"df.Genre.value_counts()","db17057b":"df=df.drop([\"track\"],axis=1)\n\n","e09b5a24":"df.head()","95d56cc2":"hiphop=df[df.Genre==\"hip hop\"]\npop=df[df.Genre==\"pop\"]\nreggae=df[df.Genre==\"reggae\"]\nlatin=df[df.Genre==\"latin\"]\nother=df[df.Genre==\"other\"]\nedm=df[df.Genre==\"edm\"]","c4d881d7":"hiphop","e7bed365":"px.histogram(hiphop,x='artist',color='Popularity')\n","53534f39":" px.histogram(edm,x='artist',color='Popularity')\n","e3ad8b8c":"px.histogram(pop,x='artist',color='Popularity')\n","50559e19":"px.histogram(other,x='artist',color='Popularity')","cd7aab16":"px.histogram(latin,x='artist',color='Popularity')\n","84ef13e9":"px.histogram(reggae,x='artist',color='Popularity')","5dee6be7":"df.head()","a969d5f5":"df=df.drop([\"artist\",\"Genre\"],axis=1)\ndf.head()\n","2d7da3f6":"X=df.iloc[:,1:-1]\ny=df.iloc[:,-1]\n","68b3b9d0":"X.shape","bedf9a29":"from sklearn.linear_model import LinearRegression\nmodel=LinearRegression()\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)\nmodel.fit(X_train,y_train)\n\n","b2a0bd9d":"y_pred=model.predict(X_test)","dd2ae4f4":"from sklearn import metrics\nprint('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))","af460365":"from statsmodels.api import OLS\nOLS(y_train,X_train).fit().summary()","3543e5b7":"X1=df.iloc[:,1:5]\ny1=df.iloc[:,-1]\nX1.join(df.iloc[:,7])\n","0c5d5678":"X1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1, test_size=0.20)\nmodel.fit(X1_train,y1_train)","069f9010":"y_pred1=model.predict(X1_test)","5df8296a":"from statsmodels.api import OLS\nOLS(y1_train,X1_train).fit().summary()","6132d497":"print('Mean Absolute Error:', metrics.mean_absolute_error(y1_test, y_pred1))\nprint('Mean Squared Error:', metrics.mean_squared_error(y1_test, y_pred1))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y1_test, y_pred1)))","0dbe7667":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nmodel2=DecisionTreeClassifier()\nmodel2.fit(X_train,y_train)","beb779bd":"y1_pred=model2.predict(X_test)","718ef954":"y1_test","0f8eb742":"y1_pred","ef739eb2":"print('Mean Absolute Error:', metrics.mean_absolute_error(y1_test, y1_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y1_test, y1_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y1_test, y1_pred)))","59a029a1":"model3=RandomForestClassifier()\nmodel3.fit(X1_train,y1_train)","5d021e60":"y3_pred=model3.predict(X1_test)","e069f555":"y1_test","fe4989ea":"y3_pred","f575a683":"print('Mean Absolute Error:', metrics.mean_absolute_error(y1_test, y1_pred))\nprint('Mean Squared Error:', metrics.mean_squared_error(y1_test, y1_pred))\nprint('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y1_test, y1_pred)))","08511941":"one can notice that the only relations having r more that .5 are (bpm and speech )and (loud and energy).","10835342":"one can tell from the p-value keeping our hypothesis limit to 0.05 that speech , length,valence has a bad effect.","13c2f6bf":"# prediction","25305ef7":"****Linear regression****","32fd07ce":"the following histograms describe no of tracks on the left and popularity of each track of each individual artist of a genre (color)","8aed206e":"to prevent disproportionate clustering we need at least 3","07b1c6b1":"**trying to increase r**"}}