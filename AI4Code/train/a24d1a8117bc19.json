{"cell_type":{"e5f520e2":"code","692980d1":"code","346fb717":"code","c4df9e5e":"code","c5c2c6a8":"code","a914c9dd":"code","404404d5":"code","41515701":"code","d7acaa97":"code","617df3a2":"code","1f5b3519":"code","e7840a42":"code","f72d7ae0":"code","cbb43bca":"code","3337dfee":"code","fcbae40a":"code","e45c8383":"code","6708baad":"code","815dd649":"code","1579312a":"code","99c3b16a":"code","989d07c0":"code","55020780":"code","7339e921":"code","938d6797":"code","3ba9f9de":"code","1f72a237":"code","94f19a2c":"code","bfd6b2a1":"code","ba35fd75":"code","42abd446":"code","2db55871":"code","20e0dc22":"code","0a72a77e":"code","ae4beacb":"code","483dd524":"code","64fa5edf":"code","44a23ffd":"code","2e1e7f66":"code","58bdce91":"code","7a917ffc":"code","a2545b94":"code","87c4368f":"code","7d8ce1fd":"code","d3d737d1":"code","c86a9303":"code","4dae3508":"code","9773d6f8":"code","3437a433":"code","89df706d":"code","520a3ee9":"code","2951cbdd":"code","1bbf9989":"code","4860f066":"code","0d990dac":"code","08d1832e":"code","d30341aa":"markdown","ab5cbb94":"markdown","b8846689":"markdown","1bed59ab":"markdown","f021a8d6":"markdown","0e70488c":"markdown","3da1c4e2":"markdown","1088d5c7":"markdown","6f5261bb":"markdown","568c1ca0":"markdown","f319b596":"markdown","e820cafe":"markdown","9368fe77":"markdown","17b1cbaa":"markdown"},"source":{"e5f520e2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","692980d1":"import os\n#os.chdir(\"C:\\\\Users\\\\deeks\\\\Documents\\\\PhD\\\\PHD_TrainData_and_ProblemStatement-1558070454703\\\\PHD_TrainData_and_ProblemStatement\")","346fb717":"train_data=pd.read_csv(\"..\/input\/Train.csv\",header=0)","c4df9e5e":"train_data.head()","c5c2c6a8":"train_data.isnull().sum()\nprint(train_data.shape)\ntrain_data.dtypes","a914c9dd":"train_data.describe(include='all')","404404d5":"train_data['ReportID']=train_data['ReportID'].astype('category')\ntrain_data['SalesPersonID']=train_data['SalesPersonID'].astype('category')\ntrain_data['ProductID']=train_data['ProductID'].astype('category')\ntrain_data['Suspicious']=train_data['Suspicious'].astype('category')","41515701":"train_data.dtypes","d7acaa97":"print(train_data.ProductID.unique().shape)\nprint(train_data.SalesPersonID.unique().shape)\nprint(train_data.ReportID.unique().shape)","617df3a2":"100*train_data.Suspicious.value_counts()\/len(train_data.Suspicious)","1f5b3519":"plt.figure(figsize=(20,10))\ncount_classes = pd.value_counts(train_data['Suspicious'], sort = True)\ncount_classes.plot(kind = 'bar', rot=0,color='#819980')\nplt.title(\"Frequency of each level\")\nplt.xlabel(\"Class\")\nplt.ylabel(\"Number of Observations\");","e7840a42":"sns.factorplot(x=\"Suspicious\", y=\"TotalSalesValue\", data=train_data,size=6)\nplt.xlabel(\"Suspicious\", fontsize=15)\nplt.ylabel(\"TotalSalesValue\", fontsize=15)","f72d7ae0":"sns.factorplot(x=\"Suspicious\", y=\"Quantity\", data=train_data,size=6)\nplt.xlabel(\"Suspicious\", fontsize=15)\nplt.ylabel(\"Quantity of products\", fontsize=15)","cbb43bca":"train_data.groupby('Suspicious')['Quantity','TotalSalesValue'].sum().plot.bar()","3337dfee":"train_data['SalesPersonID'].value_counts().sort_index().sort_values(ascending=False)[:10].plot.bar(color='#819980')","fcbae40a":"train_data['ProductID'].value_counts().sort_index().sort_values(ascending=False)[:10].plot.bar(color='#819980')","e45c8383":"train_data['Price_of_oneProduct'] = train_data.apply(lambda row: row.TotalSalesValue \/ row.Quantity, axis = 1)","6708baad":"train_data.head()","815dd649":"train_data[train_data.Suspicious=='No'].SalesPersonID.count()","1579312a":"train_Yes=train_data[train_data.Suspicious=='Yes']\ntrain_Indeterminate=train_data[train_data.Suspicious=='indeterminate']\ntrain_No=train_data[train_data.Suspicious=='No']","99c3b16a":"plt.figure(figsize=(20,10))\nbins = np.linspace(1000, 5000, 100)\nplt.hist(train_Yes.TotalSalesValue, alpha=1,bins=bins,color=\"#a5177d\", normed=True, label='Fraud')\nplt.hist(train_No.TotalSalesValue, alpha=1,bins=bins,color=\"#1769a5\", normed=True, label='Not Fraud')\nplt.legend(loc='upper right')\nplt.title(\"Amount by percentage of totalsales\")\nplt.xlabel(\"Total sales Value\")\nplt.ylabel(\"Percentage of Sales value (%)\");\nplt.show()","989d07c0":"sns.boxplot(train_No.TotalSalesValue,orient='v')","55020780":"sns.boxplot(train_Yes.TotalSalesValue,orient='v')","7339e921":"train_data.groupby('Suspicious').apply(lambda x: x.count())","938d6797":"train_Indeterminate.head()","3ba9f9de":"train_data.groupby(train_data['ProductID'])['Price_of_oneProduct'].mean().sort_index().sort_values(ascending=False)[:10].plot.bar(color='#819980')","1f72a237":"train_data.groupby(train_data['ProductID'])['Price_of_oneProduct'].mean().sort_index().sort_values(ascending=True)[:10].plot.bar(color='#819980')","94f19a2c":"train_Yes['SalesPersonID'].value_counts().sort_values(ascending=False)[:10].plot.bar(color='#819980')","bfd6b2a1":"total_quantity=train_data['Quantity'].sum()\ntotal_totalsalesvalue=train_data['TotalSalesValue'].sum()","ba35fd75":"(((train_data.groupby(train_data['ProductID'])['Quantity'].sum())\/(total_quantity))*100).sort_index().sort_values(ascending=False)[:10].plot.bar(color='#819980')","42abd446":"(((train_data.groupby(train_data['SalesPersonID'])['Quantity'].sum())\/(total_quantity))*100).sort_index().sort_values(ascending=False)[:10].plot.bar(color='#819980')","2db55871":"high_sales_person=train_data.groupby(['SalesPersonID']).sum().sort_values(by='TotalSalesValue',ascending=False).head(10)\nlow_sales_person=train_data.groupby(['SalesPersonID']).sum().sort_values(by='TotalSalesValue',ascending=False).tail(10)","20e0dc22":"((high_sales_person['TotalSalesValue']\/total_totalsalesvalue)*100).plot.bar(color='#819980')","0a72a77e":"((low_sales_person['TotalSalesValue']\/total_totalsalesvalue)*100).plot.bar(color='#819980')","ae4beacb":"outliers=[]\ndef detect_outlier(data_1):\n    \n    threshold=3\n    mean_1 = np.mean(data_1)\n    std_1 =np.std(data_1)\n    \n    \n    for y in data_1:\n        z_score= (y - mean_1)\/std_1 \n        if np.abs(z_score) > threshold:\n            outliers.append(y)\n    return outliers","483dd524":"outlier_datapoints = detect_outlier(train_data['Price_of_oneProduct'])\nprint(len(outlier_datapoints))","64fa5edf":"train_df=train_data.groupby([\"ProductID\"]).median()","44a23ffd":"train_df.describe(include='all')","2e1e7f66":"train_df=train_df.drop(['TotalSalesValue','Quantity'],axis = 1)","58bdce91":"type(train_df)","7a917ffc":"train_df=train_df.rename(columns={'Price_of_oneProduct': 'Avg_of_eachProduct'})","a2545b94":"train_updated = train_data.join(train_df, on='ProductID')\ntrain_updated.describe(include='all')","87c4368f":"sns.boxplot(x=train_updated['TotalSalesValue'],orient='v')","7d8ce1fd":"Q1 = train_updated.quantile(0.25)\nQ3 = train_updated.quantile(0.75)\nIQR = Q3 - Q1\nprint(IQR)","d3d737d1":"data1 = train_updated.groupby(['SalesPersonID'])[['TotalSalesValue']].median()\ndata1 = data1.rename(columns={'TotalSalesValue': 'Average sales per person'})\ntrain_updated = train_updated.join(data1,on = ['SalesPersonID'])","c86a9303":"train_updated.head()","4dae3508":"outlier_datapoints = detect_outlier(train_data['TotalSalesValue'])\nprint(len(outlier_datapoints))","9773d6f8":"data2 = train_updated.groupby(['SalesPersonID'])[['Quantity']].mean()\ndata2 = data2.rename(columns={'Quantity': 'Average amount Quantity per Person'})\ntrain_updated = train_updated.join(data2,on=['SalesPersonID'])","3437a433":"data3 = train_updated.groupby(['SalesPersonID'])[['ProductID']].count()\ndata3 = data3.rename(columns={'ProductID': 'No of products per person'})\ntrain_updated = train_updated.join(data3,on=['SalesPersonID'])","89df706d":"data4 = train_updated.groupby(['SalesPersonID','ProductID'])[['Quantity']].sum()\ndata4=data4.rename(columns={'Quantity': 'sum of each product quuantity per person'})\ntrain_updated = train_updated.join(data4,on=['SalesPersonID','ProductID'])","520a3ee9":"data5 = train_updated.groupby(['SalesPersonID','ProductID'])[['TotalSalesValue']].sum()\ndata5 =data5.rename(columns={'TotalSalesValue': 'sum of each product sales per person'})\ntrain_updated = train_updated.join(data5,on=['SalesPersonID','ProductID'])","2951cbdd":"data6 = train_updated.groupby(['SalesPersonID','ProductID'])[['TotalSalesValue']].median()\ndata6 =data6.rename(columns={'TotalSalesValue': 'Avg of each product sales per person'})\ntrain_updated = train_updated.join(data6,on=['SalesPersonID','ProductID'])","1bbf9989":"data7 = train_updated.groupby(['SalesPersonID','ProductID'])[['Quantity']].mean()\ndata7 =data7.rename(columns={'Quantity': 'Avg of each product quuantity per person'})\ntrain_updated = train_updated.join(data7,on=['SalesPersonID','ProductID'])","4860f066":"data8=train_updated.groupby(['ProductID'])[['Quantity']].mean()\ndata8 = data8.rename(columns={'Quantity': 'Average amount Quantity per Product'})\ntrain_updated = train_updated.join(data8,on=['ProductID'])","0d990dac":"data9=train_updated.groupby(['ProductID'])[['TotalSalesValue']].median()\ndata9 = data9.rename(columns={'TotalSalesValue': 'Average sales per Product'})\ntrain_updated = train_updated.join(data9,on=['ProductID'])","08d1832e":"train_updated.shape","d30341aa":"### Above products are  top 10 high valued products","ab5cbb94":"#### This shows that the transactions made by the sales persons are 0.4% Fraud; 6% are Not Fraud; 93% are not able to determine","b8846689":"### Above are low valued Products","1bed59ab":"train_updated.to_csv('feature_eng.csv',index=False)","f021a8d6":"#### Top 10 salesmen who sold high amount of quantity","0e70488c":"#### The above numericals indicates that there are:-\n#### 1) 593 Products\n#### 2) 992 Sales Persons\n#### 3) 42582 transactions had done","3da1c4e2":"### These salesmen made high number of 'Fraud' transactions","1088d5c7":"## Bivariate Analysis","6f5261bb":"# Overview of this notebook\n### -Univariate Analysis\n### -Multivariate Analysis","568c1ca0":"#### Top 10 products got saled in abundance amount compared to other products","f319b596":"#### Top 10 salesmen having high sales value","e820cafe":"#### top 10 Salesmen having low sales value","9368fe77":"## Univariate Analysis","17b1cbaa":"# Problem statement\n\n#### -A large U.S. Electrical appliance's retailer has many branches. There is no Fixed Price for a product(for various reasons),the SalesPerson has the freedom to choose the price at which they sell the product. There is no cap on the minimum and maximum quantity of sales on the Salesperson.Due to these reasons the average sale size and average quantity for a transaction varies.The company wants to do a 'Sales and Productivity' analysis.\n#### -It is for this reason the company wants to implement a system to classify the reports into one of the Three categories, Suspicious\/Not Suspicious\/Indeterminate.\n#### -The company also wants the Salespersons to be grouped into HighRisk or MediumRisk or LowRisk categories based on the report info provided by them."}}