{"cell_type":{"d08b38fc":"code","783fd2fe":"code","fc5ceb6c":"code","f78c26c6":"code","f648ef86":"code","32e9cc35":"code","3ebb8f4b":"code","7f2ef544":"code","50c09a11":"code","3bbffc2b":"code","67af3151":"code","d7bf18ad":"code","996b1c0b":"code","4bf0f949":"code","c875de58":"code","b150deb2":"code","8be7d600":"code","a62b070b":"code","c940abc9":"code","b66077de":"code","142f7958":"code","77e6fbba":"code","a36e788b":"code","36fbf5d3":"code","7a99a6ac":"code","d6113b04":"code","0dedeb60":"code","d013656b":"code","e1c42b46":"code","b4e4be49":"code","66286b3a":"code","018bf2d9":"code","4bd0154e":"code","f93318e0":"code","58fde06e":"code","ca3f525b":"code","505ca23c":"code","b4621047":"code","e5b28c21":"code","644f3a1f":"code","c0439b1e":"code","6c9e17f4":"code","bfc7da2a":"code","20a70116":"code","0d16ced5":"code","af1fd8e2":"code","c752c57e":"code","eac979e7":"code","0639d06c":"code","452e8516":"code","7572ac12":"code","e334df36":"code","fad5009f":"code","6baa3da9":"code","dc828a2d":"code","947ee2eb":"code","115cc380":"code","943e4d23":"code","575d43e2":"code","5a881c01":"code","f492e8f4":"code","022e4d1a":"code","7d206d23":"code","181f58ba":"code","25399a07":"markdown","0eb5314f":"markdown","ba5fc42e":"markdown","00cd4e49":"markdown","5dd2e2c2":"markdown","ca78406d":"markdown","ce4c43c1":"markdown","63a78e81":"markdown","1f0f59c2":"markdown","0b1e046a":"markdown","343e064b":"markdown","b71fe48a":"markdown","8a7ddcf2":"markdown","89a40b45":"markdown","a273c41e":"markdown","f5d17b6a":"markdown","6d5a3511":"markdown","cade9493":"markdown","b2115c4f":"markdown","bc203e4c":"markdown","4f65e288":"markdown","fa7dadf2":"markdown","8795f090":"markdown","6c019dab":"markdown","15f6ee3b":"markdown","d1d3bbad":"markdown","3df0eb2f":"markdown","3e1e9a45":"markdown"},"source":{"d08b38fc":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.plotly as py\nimport plotly.graph_objs as go \nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True) \n%matplotlib inline","783fd2fe":"df = pd.read_csv('..\/input\/athlete-events\/athlete_events.csv')\ndf.head()","fc5ceb6c":"top_5_gold = df[df['Medal'] == 'Gold']['Team'].value_counts().head(5)","f78c26c6":"top_fg = pd.DataFrame(top_5_gold)","f648ef86":"top_fg.reset_index(inplace=True)","32e9cc35":"top_fg","3ebb8f4b":"top_fg.rename(columns={'index':'Country'}, inplace=True)\nplt.figure(figsize=(12,8))\nsns.barplot(x='Country', y='Team', data=top_fg)","7f2ef544":"df['Age'].mean()","50c09a11":"df[df['Medal'] == 'Gold']['Age'].mean()","3bbffc2b":"\ndf[df['Medal'] == 'Silver']['Age'].mean()","67af3151":"df[df['Medal'] == 'Bronze']['Age'].mean()","d7bf18ad":"df['Age'].min()","996b1c0b":"df['Age'].max()","4bf0f949":"df.describe()","c875de58":"cat_by_year = df.groupby('Year')['Sport'].nunique()\ncat_by_year = pd.DataFrame(cat_by_year)","b150deb2":"cat_by_year.reset_index(inplace=True)","8be7d600":"cat_by_year.head()","a62b070b":"plt.figure(figsize=(20,8))\nsns.barplot(x='Year', y='Sport', data=cat_by_year, palette='inferno')","c940abc9":"df.groupby('NOC')['Medal'].count().head()","b66077de":"med_by_country = df.groupby('NOC')['Medal'].count()\n","142f7958":"med_by_country = pd.DataFrame(med_by_country)\n","77e6fbba":"med_by_country.reset_index(inplace=True)\n","a36e788b":"med_by_country.head()\n","36fbf5d3":"med_by_country = med_by_country.sort_values(by='Medal',ascending=False).head()\n","7a99a6ac":"med_by_country","d6113b04":"df.groupby('Season')['City'].nunique()","0dedeb60":"df['Event'].nunique()\n","d013656b":"most_played = df['Event'].value_counts().head()\n","e1c42b46":"most_played = pd.DataFrame(most_played)\n","b4e4be49":"most_played.reset_index(inplace=True)\n","66286b3a":"most_played.rename(columns={'index':'Sport'}, inplace=True)\n\n","018bf2d9":"most_played\n","4bd0154e":"plt.figure(figsize=(16,8))\nsns.barplot(x='Sport',y='Event', data=most_played)","f93318e0":"df.corr()\n","58fde06e":"most_act = df['NOC'].value_counts()","ca3f525b":"most_act = pd.DataFrame(most_act)","505ca23c":"most_act.reset_index(inplace=True)","b4621047":"most_act.rename(columns={'index':'Country'}, inplace=True)","e5b28c21":"most_act.head()\n","644f3a1f":"data = dict(\n        type = 'choropleth',\n        locations = most_act['Country'],\n        z = most_act['NOC'],\n        text = most_act['Country'],\n        colorbar = {'title' : 'Most active countries in Olympic Games'},\n      ) \n","c0439b1e":"layout = dict(\n    title = 'Most active countries in Olympic Games',\n    geo = dict(\n        showframe = True\n    )\n)\n","6c9e17f4":"choromap = go.Figure(data = [data],layout = layout)\niplot(choromap)\n","bfc7da2a":"biggest_winners = df.groupby('Name')['Medal'].value_counts()\n","20a70116":"biggest_winners = pd.DataFrame(biggest_winners)\n","0d16ced5":"biggest_winners.sort_values(by='Medal', ascending=False).head()\n","af1fd8e2":"df['Gold'] = pd.get_dummies(df['Medal']=='Gold', drop_first=True)","c752c57e":"from sklearn import preprocessing","eac979e7":"le = preprocessing.LabelEncoder()","0639d06c":"le.fit(df['NOC'])","452e8516":"df['country_cod'] = le.transform(df['NOC'])","7572ac12":"le.fit(df['Event'])","e334df36":"le.transform(df['Event'])","fad5009f":"df['event_cod'] = le.transform(df['Event'])","6baa3da9":"df.head()","dc828a2d":"from sklearn.model_selection import train_test_split","947ee2eb":"df['Age'].fillna(df['Age'].mean(), inplace=True)","115cc380":"x = df[['Age', 'Year', 'country_cod', 'event_cod']]\ny = df['Gold']","943e4d23":"x_train, x_test, y_train, y_test = train_test_split(x,y, random_state=101, test_size=0.30)","575d43e2":"from sklearn.ensemble import RandomForestClassifier","5a881c01":"rcf = RandomForestClassifier()","f492e8f4":"rcf.fit(x_train, y_train)","022e4d1a":"pred = rcf.predict(x_test)","7d206d23":"from sklearn.metrics import classification_report","181f58ba":"print(classification_report(y_test, pred))","25399a07":"**Loading data from CSV**","0eb5314f":"**Or all togheter with 'describe'**","ba5fc42e":"No surprise again.","00cd4e49":"**No surprise here, first USA and second SU**","5dd2e2c2":"**Looking for more interesting data.** ","ca78406d":"**Here I create a DF with the countries that had played more in all categories.**","ce4c43c1":"The myth Michael Fred Phelps!","63a78e81":"**Now I'm just checking who won more medals.**","1f0f59c2":"**Now, lets look for a few statistical data**","0b1e046a":"*It's nice to notice that the mean age of the medals winners is near 25 years old.*","343e064b":"USA was the most active country in history of the Olympic Games!","b71fe48a":"As explained in the link bellow, from 1994 we have Summer and Winter games splited, happening every two years, that's why in 94\/98\/2002\/2006\/2010\/2014 we have low sports.\nLink: https:\/\/pt.wikipedia.org\/wiki\/Jogos_Ol%C3%ADmpicos_de_Inverno_de_1994 (in Portuguese)","8a7ddcf2":"**Importing Metrics to show my results.**","89a40b45":"**Now I'll try to predict who'd win a gold medal using the historical data.**","a273c41e":"**Now let's look at the amount of medals by countries.**","f5d17b6a":"**Here I create a DF with most played sports in the Olympics.**","6d5a3511":"**Now let me import model_selection module train_split_test**","cade9493":"**Imports I'll nedd**","b2115c4f":"Medal Ok","bc203e4c":"**Now I'll find out how many categories we had in Olympics trought the years.**","4f65e288":"**Filling null values with mean age.**","fa7dadf2":"*First we need to convert categorical data into numbers.*","8795f090":"**Predicting..**","6c019dab":"**Importing the ML model I've selected, I've tried others but this one performed really good with no adjustments, and without overfitting.**","15f6ee3b":"**In this one I'll check out wich Country won more Gold Medals**","d1d3bbad":"**Looking for a correlation, the only one I've founded was between height and weight but thats nothing to be surprised with as soon as athletes must be in shape.**","3df0eb2f":"As a brazilian, I'm happy to look that it was Soccer.","3e1e9a45":"Well, I've reached 96% of accuracy in this model, seams good to me!\nSee you arround folks!"}}