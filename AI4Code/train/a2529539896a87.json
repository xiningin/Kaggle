{"cell_type":{"a3228cbf":"code","7f44ddce":"code","7c92dc05":"code","5c8a04ee":"code","d2cee87b":"code","b0c64ad1":"code","97bafa6d":"code","78ee0478":"code","e34c8cb4":"code","046dd849":"code","71bf4004":"code","38173027":"code","6975f160":"code","072b0134":"code","f81c924f":"code","9e4751b6":"code","13874e1d":"code","4bc6c28c":"code","a9387736":"code","da6a9939":"code","c36dd4b4":"code","8228ba34":"code","6cc646f0":"code","d2ea1ec2":"code","dd1bb94c":"markdown","68263344":"markdown","4585815d":"markdown","80c2009a":"markdown","bfaff6b9":"markdown","9fc47833":"markdown","42208224":"markdown","7646656a":"markdown","7c33be40":"markdown","766d698e":"markdown","00b36b76":"markdown","00e5057b":"markdown"},"source":{"a3228cbf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7f44ddce":"data_2015= pd.read_csv(\"..\/input\/world-happiness\/2015.csv\")\ndata_2016= pd.read_csv(\"..\/input\/world-happiness\/2016.csv\")\ndata_2017= pd.read_csv(\"..\/input\/world-happiness\/2017.csv\")\ndata_2018= pd.read_csv(\"..\/input\/world-happiness\/2018.csv\")\ndata_2019= pd.read_csv(\"..\/input\/world-happiness\/2019.csv\")","7c92dc05":"data_2015.columns","5c8a04ee":"data_2015.head()","d2cee87b":"data_2015.isnull().sum()","b0c64ad1":"data_2015.shape","97bafa6d":"print(\"2015\")\nfor i in range(len(data_2015['Region'].unique())-1):\n    print(str(data_2015['Region'].unique()[i])+\" : \"+ str(len(data_2015[data_2015['Region']==data_2015['Region'].unique()[i]])))","78ee0478":"sns.barplot(y= data_2015['Region'][:20], x= data_2015['Happiness Score'])","e34c8cb4":"sns.barplot(y= data_2015['Country'][:20], x= data_2015['Happiness Score'])","046dd849":"data_2015.columns","71bf4004":"data_2015.rename(columns={\"Economy (GDP per Capita)\" : \"Economy\"}, inplace=True)\ndata_2016.rename(columns={\"Economy (GDP per Capita)\" : \"Economy\"}, inplace=True)\ndata_2017.rename(columns={\"Economy..GDP.per.Capita.\" : \"Economy\"}, inplace=True)\ndata_2018.rename(columns={\"GDP per capita\" : \"Economy\"}, inplace=True)\ndata_2019.rename(columns={\"GDP per capita\" : \"Economy\"}, inplace=True)","38173027":"data_2015.rename(columns={\"Happiness Score\" : \"Score\"}, inplace=True)\ndata_2016.rename(columns={\"Happiness Score\" : \"Score\"}, inplace=True)\ndata_2017.rename(columns={\"Happiness.Score\" : \"Score\"}, inplace=True)","6975f160":"data_2015.rename(columns={\"Happiness Rank\" : \"Rank\"}, inplace=True)\ndata_2016.rename(columns={\"Happiness Rank\" : \"Rank\"}, inplace=True)\ndata_2017.rename(columns={\"Happiness.Rank\" : \"Rank\"}, inplace=True)\ndata_2018.rename(columns={\"Overall rank\" : \"Rank\"}, inplace=True)\ndata_2019.rename(columns={\"Overall rank\" : \"Rank\"}, inplace=True)","072b0134":"data_2015.drop(columns=[\"Region\"], inplace=True)\ndata_2016.drop(columns=[\"Region\"], inplace=True)\ndata_2018.rename(columns={\"Country or region\" : \"Country\"}, inplace=True)\ndata_2019.rename(columns={\"Country or region\" : \"Country\"}, inplace=True)","f81c924f":"data_2015.rename(columns={\"Health (Life Expectancy)\" : \"Health\"}, inplace=True)\ndata_2016.rename(columns={\"Health (Life Expectancy)\" : \"Health\"}, inplace=True)\ndata_2017.rename(columns={\"Health..Life.Expectancy.\" : \"Health\"}, inplace=True)\ndata_2018.rename(columns={\"Healthy life expectancy\" : \"Health\"}, inplace=True)\ndata_2019.rename(columns={\"Healthy life expectancy\" : \"Health\"}, inplace=True)","9e4751b6":"data_2018.rename(columns={\"Freedom to make life choices\" : \"Freedom\"}, inplace=True)\ndata_2019.rename(columns={\"Freedom to make life choices\" : \"Freedom\"}, inplace=True)","13874e1d":"data_2015.rename(columns={\"Trust (Government Corruption)\" : \"Trust\"}, inplace=True)\ndata_2016.rename(columns={\"Trust (Government Corruption)\" : \"Trust\"}, inplace=True)\ndata_2017.rename(columns={\"Trust..Government.Corruption.\" : \"Trust\"}, inplace=True)\ndata_2018.rename(columns={\"Perceptions of corruption\" : \"Trust\"}, inplace=True)\ndata_2019.rename(columns={\"Perceptions of corruption\" : \"Trust\"}, inplace=True)","4bc6c28c":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= data_2015['Score'],y=data_2015['Economy'])\nsns.scatterplot(x= data_2016['Score'],y=data_2016['Economy'])\nsns.scatterplot(x= data_2017['Score'],y=data_2017['Economy'])\nsns.scatterplot(x= data_2018['Score'],y=data_2018['Economy'])\nsns.scatterplot(x= data_2019['Score'],y=data_2019['Economy'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Economy vs Happiness Score from 2015- 2019\")","a9387736":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= data_2015['Score'],y=data_2015['Health'])\nsns.scatterplot(x= data_2016['Score'],y=data_2016['Health'])\nsns.scatterplot(x= data_2017['Score'],y=data_2017['Health'])\nsns.scatterplot(x= data_2018['Score'],y=data_2018['Health'])\nsns.scatterplot(x= data_2019['Score'],y=data_2019['Health'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Health vs Happiness Score from 2015- 2019\")","da6a9939":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= data_2015['Score'],y=data_2015['Freedom'])\nsns.scatterplot(x= data_2016['Score'],y=data_2016['Freedom'])\nsns.scatterplot(x= data_2017['Score'],y=data_2017['Freedom'])\nsns.scatterplot(x= data_2018['Score'],y=data_2018['Freedom'])\nsns.scatterplot(x= data_2019['Score'],y=data_2019['Freedom'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Freedom vs Happiness Score from 2015- 2019\")","c36dd4b4":"fig = plt.figure(figsize=(10,6))\nsns.scatterplot(x= data_2015['Score'],y=data_2015['Trust'])\nsns.scatterplot(x= data_2016['Score'],y=data_2016['Trust'])\nsns.scatterplot(x= data_2017['Score'],y=data_2017['Trust'])\nsns.scatterplot(x= data_2018['Score'],y=data_2018['Trust'])\nsns.scatterplot(x= data_2019['Score'],y=data_2019['Trust'])\nfig.legend(labels=['2015','2016','2017','2018','2019'])\nplt.title(\"Trust vs Happiness Score from 2015- 2019\")","8228ba34":"print(\"In 2015, Happiest Country is \"+ str(data_2015[:1]['Country'][0]) +\" and Saddest Country is \"+ str(data_2015[-1:]['Country'][len(data_2015)-1]))\nprint(\"In 2016, Happiest Country is \"+ str(data_2016[:1]['Country'][0]) +\" and Saddest Country is \"+ str(data_2016[-1:]['Country'][len(data_2016)-1]))\nprint(\"In 2017, Happiest Country is \"+ str(data_2017[:1]['Country'][0]) +\" and Saddest Country is \"+ str(data_2017[-1:]['Country'][len(data_2017)-1]))\nprint(\"In 2018, Happiest Country is \"+ str(data_2018[:1]['Country'][0]) +\" and Saddest Country is \"+ str(data_2018[-1:]['Country'][len(data_2018)-1]))\nprint(\"In 2019, Happiest Country is \"+ str(data_2019[:1]['Country'][0]) +\" and Saddest Country is \"+ str(data_2019[-1:]['Country'][len(data_2019)-1]))","6cc646f0":"comparison_dataset={'Country':[data_2015[:1]['Country'][0], \n                    data_2015[-1:]['Country'][len(data_2015)-1],\n                    data_2016[:1]['Country'][0], \n                    data_2016[-1:]['Country'][len(data_2016)-1],\n                    data_2017[:1]['Country'][0], \n                    data_2017[-1:]['Country'][len(data_2017)-1],\n                    data_2018[:1]['Country'][0], \n                    data_2018[-1:]['Country'][len(data_2018)-1],\n                    data_2019[:1]['Country'][0], \n                    data_2019[-1:]['Country'][len(data_2019)-1]],\n        'Economy':[data_2015[:1]['Economy'][0],\n                   data_2015[-1:]['Economy'][len(data_2015)-1],\n                   data_2016[:1]['Economy'][0],\n                   data_2016[-1:]['Economy'][len(data_2016)-1],\n                   data_2017[:1]['Economy'][0],\n                   data_2017[-1:]['Economy'][len(data_2017)-1],\n                   data_2018[:1]['Economy'][0],\n                   data_2018[-1:]['Economy'][len(data_2018)-1],\n                   data_2019[:1]['Economy'][0],\n                   data_2019[-1:]['Economy'][len(data_2019)-1]],\n         'Year':['2015','2015','2016','2016','2017','2017','2018','2018','2019','2019']\n        }\ncomparison = pd.DataFrame(comparison_dataset)\ncomparison","d2ea1ec2":"plt.figure(figsize=(10,6))\nsns.barplot(y=comparison['Country'], x=comparison['Economy'], hue=comparison['Year'])\nplt.legend(bbox_to_anchor=(1.01, 1),borderaxespad=0)\nplt.title(\"Happiest Country vs. Saddest Country\")","dd1bb94c":"### Change name for health","68263344":"## Health vs Happiness Score from 2015- 2019","4585815d":"### Rename Happiness Rank to Rank","80c2009a":"### Rename to Economy for every csv","bfaff6b9":"## Freedom vs Happiness Score from 2015- 2019","9fc47833":"### Rename Happiness Score to Score","42208224":"## Trust vs Happiness Score from 2015- 2019","7646656a":"### Change name for Freedom","7c33be40":"### Change name for Trust (Government Corruption","766d698e":"## Happiest Country vs. Saddest Country","00b36b76":"### Remove Region and Change name to Country","00e5057b":"## Economy vs Happiness Score from 2015- 2019"}}