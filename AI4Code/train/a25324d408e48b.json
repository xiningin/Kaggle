{"cell_type":{"c0739638":"code","b29edee0":"code","b62e50f1":"code","019a663d":"code","009ed9bb":"code","0e2419bf":"code","278d1949":"code","c1859ab6":"code","11a8c3cc":"code","fc913e1e":"code","1d404331":"code","dcf2c76d":"code","3ced29f8":"code","52d9d16b":"markdown","4a9bd6bf":"markdown","2616475b":"markdown","ec3331dd":"markdown","bfa88fd7":"markdown","c854e92d":"markdown"},"source":{"c0739638":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n# Any results you write to the current directory are saved as output.","b29edee0":"dfu = pd.read_csv('..\/input\/googleplaystore_user_reviews.csv')\ndfp = pd.read_csv('..\/input\/googleplaystore.csv')\n\ndfu.head(10)","b62e50f1":"dfp.head(10)","019a663d":"dfp[['Genres','Rating']].groupby('Genres').mean().sort_values(by='Rating',ascending=False).head(10).iloc[1:,:]","009ed9bb":"data = dfp[dfp['Category']==\"GAME\"]\ndata.head(10)","0e2419bf":"def splitDataFrameList(df,target_column,separator):\n    ''' df = dataframe to split,\n    target_column = the column containing the values to split\n    separator = the symbol used to perform the split\n    returns: a dataframe with each entry for the target column separated, with each element moved into a new row. \n    The values in the other columns are duplicated across the newly divided rows.\n    '''\n    row_accumulator = []\n\n    def splitListToRows(row, separator):\n        split_row = row[target_column].split(separator)\n        for s in split_row:\n            new_row = row.to_dict()\n            new_row[target_column] = s\n            row_accumulator.append(new_row)\n\n    df.apply(splitListToRows, axis=1, args = (separator, ))\n    new_df = pd.DataFrame(row_accumulator)\n    return new_df\n\n\nnewData = splitDataFrameList(data,'Genres',';')\nnewData = splitDataFrameList(newData,'Genres','&')\nnewData.head(10)","278d1949":"newData['Genres'] = newData['Genres'].str.strip()\nnewData = newData.drop_duplicates(keep='first')\nnewData","c1859ab6":"plt.figure(figsize = (9,9))\nsns.countplot(y = 'Genres' , data = newData);","11a8c3cc":"plt.figure(figsize = (9,9))\nsns.scatterplot(y='Installs', x='Rating', hue='Genres', data=newData);","fc913e1e":"newData['Installs'] = newData['Installs'].str.replace('[+,]','')\nnewData['Installs']  = pd.to_numeric(newData['Installs'])\nnewData['Installs'].head(5)","1d404331":"top3 = newData.groupby('Genres')['Installs'].max().sort_values(ascending=False).head(3)\ntop3","dcf2c76d":"def gameinstalls(df, value):\n    temp = df[df['Genres'] == value]\n    temp['Last Updated'] = pd.to_datetime(temp['Last Updated'])\n    temp = temp[temp['Last Updated']>='2014-1-1']\n    df = temp.groupby('Last Updated')['Last Updated','Installs'].sum().sort_values(by='Last Updated',ascending=True)\\\n    .reindex()\n    plt.plot(df)\n    plt.legend(value)\n    #return df","3ced29f8":"plt.figure(figsize=(12,9))\nfor i in top3.index:\n    gameinstalls(newData, i)\nplt.legend(top3.index)\nplt.show()","52d9d16b":"**Install vs Ratings by Genres **","4a9bd6bf":"**Trend in Gaming**","2616475b":"**Top 3 Game Genres in terms of Max Downloads **","ec3331dd":"Casual Gaming is clearly a new Phenomenon! ","bfa88fd7":"## *Diving into Top Genres*","c854e92d":"**Genres in terms of Games (App)**"}}