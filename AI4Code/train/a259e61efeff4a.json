{"cell_type":{"fd679a4d":"code","c4f847c3":"code","2d3af4b6":"code","c8d3e74f":"code","74696fac":"code","b2dc7e52":"code","154b3159":"code","434b8cb7":"code","ab2e7471":"code","fb4126f8":"code","097c2c3f":"code","dbdbc333":"code","2ebaea9f":"code","bbf5448f":"code","b445d83e":"code","ee95f069":"code","c5f888c3":"code","204e3444":"code","215971f7":"code","c92c8fd5":"code","484e09e8":"code","bd3c51ea":"code","f551b953":"code","abceb3dd":"code","d35fd3dd":"code","fd579580":"markdown","ecf69158":"markdown","76db797a":"markdown","45171e9c":"markdown","170606e5":"markdown","f535e04d":"markdown","2b4a84a4":"markdown","7487daba":"markdown","99abc25f":"markdown","cb37b8a7":"markdown","94552cf6":"markdown"},"source":{"fd679a4d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom collections import Counter\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c4f847c3":"df = pd.read_csv(\"..\/input\/StudentsPerformance.csv\")","2d3af4b6":"# I don't like spaces in my column names, lets fix that\ndf.columns = df.columns.map(lambda x: x.replace(' ', '_'))","c8d3e74f":"#lets see the distinct values for each of the categorical columns\nprint(df['race\/ethnicity'].unique().tolist())\nprint(df['parental_level_of_education'].unique().tolist())\nprint(df['lunch'].unique().tolist())\nprint(df['test_preparation_course'].unique().tolist())","74696fac":"# i don't like the education field, let's create some order to it. converting these over will make them play nicer with sns\nmapper = {'some high school':0, 'high school':1, 'some college':2, \"associate's degree\":3, \"bachelor's degree\":4, \"master's degree\":5}\ndf['parental_level_of_education'] = df['parental_level_of_education'].map(mapper)\n\nmapper = {'none':0, 'completed':1}\ndf['test_preparation_course'] = df['test_preparation_course'].map(mapper)\n\nmapper = {'standard':1, 'free\/reduced':0}\ndf['lunch'] = df['lunch'].map(mapper)\n\nmapper = {'group B':1, 'group C':2, 'group A':0, 'group D':3, 'group E':4}\ndf['race\/ethnicity'] = df['race\/ethnicity'].map(mapper)\n\nmapper = {'male':1, 'female':0}\ndf['gender'] = df['gender'].map(mapper)\n\ndf['avg_score'] = (df['math_score'] + df['reading_score'] + df['writing_score'])\/3\ndf['avg_score_decile'] = (df['avg_score']\/10).astype('int')","b2dc7e52":"# example of some items\ndf.head()","154b3159":"# check for missing values - there are no missing values\ndf[(df.isnull().any(axis=1)) | (df.isna().any(axis=1))]","434b8cb7":"# lets see the size of the dataset\ndf.shape","ab2e7471":"# get the general math stats\ndf.describe()","fb4126f8":"# lets see a pairplot for a high level view\nsns.pairplot(df)","097c2c3f":"# notice the high correction between the three scores\nsns.heatmap(df.corr(), cmap=\"Blues\",annot=True,annot_kws={\"size\": 7.5},linewidths=.5)","dbdbc333":"# scores\nfig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.countplot(x=\"math_score\", data = df, palette=\"muted\", ax=ax[0])\nsns.countplot(x=\"reading_score\", data = df, palette=\"muted\", ax=ax[1])\nsns.countplot(x=\"writing_score\", data = df, palette=\"muted\", ax=ax[2])\nplt.show()","2ebaea9f":"print('math', str(Counter(df[df.math_score > 90].math_score)))\nprint('reading', str(Counter(df[df.reading_score > 90].reading_score)))\nprint('writing', str(Counter(df[df.writing_score > 90].writing_score)))","bbf5448f":"fig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.distplot(df[df.gender == 0]['math_score'], ax=ax[0], color='blue')\nsns.distplot(df[df.gender == 1]['math_score'], ax=ax[0], color='red')\nsns.distplot(df[df.gender == 0]['reading_score'], ax=ax[1], color='blue')\nsns.distplot(df[df.gender == 1]['reading_score'], ax=ax[1], color='red')\nsns.distplot(df[df.gender == 0]['writing_score'], ax=ax[2], color='blue')\nsns.distplot(df[df.gender == 1]['writing_score'], ax=ax[2], color='red')\nplt.show()","b445d83e":"fig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.distplot(df[df.gender == 0]['math_score'],    ax=ax[0], color='blue')\nsns.distplot(df[df.gender == 1]['math_score'],    ax=ax[0], color='red')\nsns.distplot(df[df.gender == 0]['reading_score'], ax=ax[1], color='blue')\nsns.distplot(df[df.gender == 1]['reading_score'], ax=ax[1], color='red')\nsns.distplot(df[df.gender == 0]['writing_score'], ax=ax[2], color='blue')\nsns.distplot(df[df.gender == 1]['writing_score'], ax=ax[2], color='red')\nplt.show()","ee95f069":"fig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.distplot(df[df['test_preparation_course'] == 0]['math_score'], ax=ax[0], color='black')\nsns.distplot(df[df['test_preparation_course'] == 1]['math_score'], ax=ax[0], color='green')\nsns.distplot(df[df['test_preparation_course'] == 0]['reading_score'], ax=ax[1], color='black')\nsns.distplot(df[df['test_preparation_course'] == 1]['reading_score'], ax=ax[1], color='green')\nsns.distplot(df[df['test_preparation_course'] == 0]['writing_score'], ax=ax[2], color='black')\nsns.distplot(df[df['test_preparation_course'] == 1]['writing_score'], ax=ax[2], color='green')\nplt.show()","c5f888c3":"fig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.violinplot(y=\"math_score\",    x='parental_level_of_education', data = df, palette=\"muted\", ax=ax[0], )\nsns.violinplot(y=\"reading_score\", x='parental_level_of_education', data = df, palette=\"muted\", ax=ax[1])\nsns.violinplot(y=\"writing_score\", x='parental_level_of_education', data = df, palette=\"muted\", ax=ax[2])\nplt.show()","204e3444":"fig, ax = plt.subplots(1,3)\nfig.set_size_inches(20, 5)\nsns.violinplot(y=\"math_score\",    x='race\/ethnicity', data = df, palette=\"muted\", ax=ax[0])\nsns.violinplot(y=\"reading_score\", x='race\/ethnicity', data = df, palette=\"muted\", ax=ax[1])\nsns.violinplot(y=\"writing_score\", x='race\/ethnicity', data = df, palette=\"muted\", ax=ax[2])\nplt.show()\n","215971f7":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import *","c92c8fd5":"X = df[['gender', 'race\/ethnicity', 'parental_level_of_education', 'lunch', 'test_preparation_course']]\ny = df['avg_score']","484e09e8":"regressor = RandomForestRegressor(oob_score=True)\nregressor.fit(X,y)\nprint(X.columns.tolist())\nprint(regressor.feature_importances_)","bd3c51ea":"sns.countplot(x='parental_level_of_education', data=df, hue='lunch')","f551b953":"sns.countplot(x='avg_score_decile', data=df, hue='lunch')","abceb3dd":"sns.countplot(x='avg_score_decile', data=df, hue='test_preparation_course')","d35fd3dd":"sns.countplot(x='parental_level_of_education', data=df, hue='lunch')","fd579580":"# doing test prep dominates significantly in both reading and writing, not so much so in math.","ecf69158":"**Assertion #2**\n\nMales\/females should score in general the same across all scores\n\n**Outcome**\n\nwomen are blue, men are red. Women dominate in reading and writing. ","76db797a":"Notice the 100% spike which is prominently on reading and writing? That is oddly characteristic I wouldn't have expected.","45171e9c":"**Questions to answer :**\n\n1. How to imporve the students performance in each test ?\n2. What are the major factors influencing the test scores ?\n3. Effectiveness of test preparation course?\n\nWhat patterns and interactions in the data can you find? Let me know in the comments section below.\n","170606e5":"** feature importance **","f535e04d":"**Answers**\n\nQ1: Below distribution curves for **test_prep** show a significant improvement in scores in reading and writing and a slight improvement in math; it's not strongly correlated with any other feature. Given all the other features are immutable attributes to at least the student,  **test_prep** is the best way to improve a students scores. \n\nBased on the data below one might argue that stoping the free\/lunches to all standard would make the scores go up. This is obviously not true (with assertion #3), without this program they would not be able to afford lunch and their scores would definitely go down being hungry.\n\n**key finding:  although there was no relationship between lunch and education levels of parents. There was a finding that those who received free\/reduced lunches were less likely to get test prep courses. Given test prep did improve scores significantly, a pilot test program should be enacted to offer test_prep to these students also at a free\/reduced rate.**\n\nQ2: Built a basic random forest regression model and exported the feature importance: 'gender': 0.11086688, 'race\/ethnicity': 0.25042748, 'parental_level_of_education': 0.29552437, 'lunch': 0.18123146, 'test_preparation_course': 0.16194981]\n\nQ3: **test_prep** is positively effective and really the only thing within this dataset that a student can do to improve their scores.\n\n\n","2b4a84a4":"I hope you find this kernel helpful... and some **UPVOTES** would be very much appreciated!","7487daba":"**EDA**","99abc25f":"**Assertion #1**\n\nTest out the assertion that those who get reduced\/free lunch are economically disadvantages. Assume that their parents who have more advanced education make more on average, and hence are not eligible for free\/reduced lunches.\n\n**Outcome**\n\nthis assertion does not hold up. If it had been true, college and above educated parents receive free\/reduced lunches at the same rate as standard lunches. This is quite counterintutitive, the opposite should have been seen.","cb37b8a7":"Observations...\nHistograms of scores are all three are slightly left skewed normally distributed. All plot diagrams of scores show a positive correlation with eachother.\n\nFrom a high level point of view, **lunch** and **test_prep** appear the most influencial. Followed by **parents**, **gender**, **race** all being about equal.\n\nLets get a better insight into the histograms. High level view can be deceptive.","94552cf6":"**Assertion #1**\n\nThose who receive reduced\/free lunch are economically disadvantages and can be detected by the parents education level\n\n**Outcome**\n\nThis assertion does not hold up. Data shows that students of college and above educated parents receive free\/reduced lunches at roughly the same rate as standard lunches; we should have seen that these students nearly all had standard lunchs for this assertion to hold true.\n\n\n**Assertion #2**\n\nMales\/females should score in general the same across all scores\n\n**Outcome**\n\nFemale dominate in reading and writing. Male have a slight advantage in math.\n\n\n**Assertion #3**\n\nThere is no difference between the meals on whether one pays full price or reduced\/free.\n\n**Assertion #4**\n\nStudents who receive free\/reduced lunches do so because they do not have the funds to afford full rate.\n"}}