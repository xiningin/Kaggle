{"cell_type":{"a10825ef":"code","3c961eba":"code","873dda48":"code","e3b16a9d":"code","28522f66":"code","731da871":"markdown","2cb237d2":"markdown"},"source":{"a10825ef":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom numpy import nan as NA\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.ensemble import RandomForestClassifier\nimport matplotlib.pyplot as plt \nimport os\nfrom collections import Counter\ndf1=pd.read_csv('..\/input\/software\/city.csv')\n\npd.set_option('display.width', 1000) # \u8bbe\u7f6e\u5b57\u7b26\u663e\u793a\u5bbd\u5ea6\npd.set_option('display.max_rows', None) # \u8bbe\u7f6e\u663e\u793a\u6700\u5927\u884c\npd.set_option('display.max_columns', None) # \u8bbe\u7f6e\u663e\u793a\u6700\u5927\u884c\n\n\ndf1.sort_values(axis=0, ascending=True, inplace=True, by = ['year_id','month_id','cty_cd'])\n# print(df1)","3c961eba":"\ncur_year_id = df1['year_id'].idxmax()\ncur_year = df1.iloc[cur_year_id]['year_id']\n\n# df_select_1\u6700\u8fd1\u4e00\u5e74\u7684\u3010\u67d0\u5730\u533a\u30111-12\u6708\u7684\u65c5\u5ba2\u91cf\u548c\u5ba2\u5ea7\u7387\ndf_select_1 = df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == cur_year )].reset_index(drop=True)\ntotal_people = df_select_1['\u65c5\u5ba2\u91cf'].sum()\ndf_select_1['\u5e02\u573a\u4efd\u989d'] = df_select_1['\u65c5\u5ba2\u91cf'] * 100 \/ total_people\nprint(df_select_1)\nsentence = ''\nsentence = str(cur_year)\nsentence = '\u5e74'\nsentence = '\u8d74AAA\u65c5\u5ba2\u91cf\u4ece\u5168\u5e74\u6574\u4f53\u5e02\u573a\u8d70\u52bf\u6765\u770b\uff0c'\ngrow_flag = 0\nplummet_flag = 0\ngrow_stack = []\nplummet_stack = []\n\n#\u662f\u5426\u6301\u7eed\u589e\u957f\nfor i in range(2,13):\n    mon1 = float(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == cur_year ) & (df1['month_id'] == i )]['\u65c5\u5ba2\u91cf'])\n    mon2 = float(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == cur_year ) & (df1['month_id'] == i-1 )]['\u65c5\u5ba2\u91cf'])\n    x = mon1 - mon2\n    if x > 0:\n        grow_stack.append(i)\n    else:\n        if len(grow_stack) > 2:\n            grow_flag = 1\n            start = grow_stack[0]\n            end = grow_stack.pop()\n            sentence += '\u4ece'\n            sentence += str(start)\n            sentence += '\u5230'\n            sentence += str(end)\n            sentence += '\u6708\u5e02\u573a\u7e41\u8363\uff0c\u5448\u73b0\u6301\u7eed\u589e\u957f\u7684\u6001\u52bf\u3002'\n            grow_stack = []\n        else:\n            grow_stack = []\n#\u662f\u5426\u6301\u7eed\u4e0b\u8dcc\nfor i in range(2,13):\n    mon1 = float(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == cur_year ) & (df1['month_id'] == i )]['\u65c5\u5ba2\u91cf'])\n    mon2 = float(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == cur_year ) & (df1['month_id'] == i-1 )]['\u65c5\u5ba2\u91cf'])\n    x = mon1 - mon2\n    if x < 0:\n        plummet_stack.append(i)\n    else:\n        if len(plummet_stack) > 2:\n            plummet_flag = 1\n            start = plummet_stack[0]\n            end = plummet_stack.pop()\n            sentence += '\u4ece'\n            sentence += str(start)\n            sentence += '\u5230'\n            sentence += str(end)\n            sentence += '\u6708\u5e02\u573a\u4f4e\u8ff7\uff0c\u5448\u73b0\u6301\u7eed\u4e0b\u884c\u7684\u6001\u52bf\u3002'\n            plummet_stack = []\n        else:\n            plummet_stack = []\n# \u65e0\u6301\u7eed\u589e\u957f\u6216\u4e0b\u8dcc\nif (plummet_flag ==0 ) & (grow_flag == 0):\n    sentence += '\u5e02\u573a\u8fd0\u884c\u8f83\u4e3a\u7a33\u5b9a\uff0c\u65e0\u6301\u7eed\u4e0a\u5347\u6216\u4e0b\u884c\u8d8b\u52bf\u3002'\n# \u6700\u201c\u70ed\u201d\u6708\nhot_month_id = df_select_1['\u65c5\u5ba2\u91cf'].idxmax()\nhot_month = df_select_1.iloc[hot_month_id]['month_id']\nhot_month_people = df_select_1.iloc[hot_month_id]['\u65c5\u5ba2\u91cf']\nhot_month_percent = format(df_select_1.iloc[hot_month_id]['\u5e02\u573a\u4efd\u989d'], '.2f')\n# \u6700\u201c\u51c9\u201d\u6708\ncold_month_id = df_select_1['\u65c5\u5ba2\u91cf'].idxmin()\ncold_month = df_select_1.iloc[cold_month_id]['month_id']\ncold_month_people = df_select_1.iloc[cold_month_id]['\u65c5\u5ba2\u91cf']\ncold_month_percent = format(df_select_1.iloc[cold_month_id]['\u5e02\u573a\u4efd\u989d'], '.2f')\nsentence += '\u5728'\nsentence += str(hot_month)\nsentence += '\u6708\uff0c\u5e02\u573a\u8fce\u6765\u4e86\u5168\u5e74\u7684\u65c5\u5ba2\u91cf\u9ad8\u5cf0\uff0c\u8fbe\u5230'\nsentence += str(hot_month_people)\nsentence += '\u4eba\u6b21\uff0c\u5360\u636e\u4e86\u5e02\u573a\u4efd\u989d\u7684'\nsentence += str(hot_month_percent)\nsentence += '%\u3002\u800c'\nsentence += str(cold_month)\nsentence += '\u6708\u662f\u5168\u5e74\u7684\u65c5\u5ba2\u91cf\u8c37\u503c\uff0c\u5171\u8ba1'\nsentence += str(cold_month_people)\nsentence += '\u4eba\u6b21\uff0c\u4ec5\u5360\u5e02\u573a\u4efd\u989d\u7684'\nsentence += str(cold_month_percent)\nsentence += '%\u3002'\n# \u8f83\u4e0a\u6708\u589e\u957f\u5e45\u5ea6\u6700\u5927\u6708\ngrow_best_score = 0\nfor i in range(2,13):\n    mon1 = float(df_select_1[(df_select_1['cty_cd'] == 'AAA') & (df_select_1['year_id'] == cur_year ) & (df_select_1['month_id'] == i )]['\u5e02\u573a\u4efd\u989d'])\n    mon2 = float(df_select_1[(df_select_1['cty_cd'] == 'AAA') & (df_select_1['year_id'] == cur_year ) & (df_select_1['month_id'] == i-1 )]['\u5e02\u573a\u4efd\u989d'])\n    x = mon1 - mon2\n    if x > grow_best_score:\n        grow_best_month = i\n        grow_best_score = x\ngrow_best_score = format(grow_best_score, '.2f')\n# \u8f83\u4e0a\u6708\u4e0b\u8dcc\u5e45\u5ea6\u6700\u5927\u6708\ngrow_worst_score = 0\nfor i in range(2,13):\n    mon1 = float(df_select_1[(df_select_1['cty_cd'] == 'AAA') & (df_select_1['year_id'] == cur_year ) & (df_select_1['month_id'] == i )]['\u5e02\u573a\u4efd\u989d'])\n    mon2 = float(df_select_1[(df_select_1['cty_cd'] == 'AAA') & (df_select_1['year_id'] == cur_year ) & (df_select_1['month_id'] == i-1 )]['\u5e02\u573a\u4efd\u989d'])\n    x = mon1 - mon2\n    if x < grow_worst_score:\n        grow_worst_month = i\n        grow_worst_score = x\ngrow_worst_score = format(-grow_worst_score, '.2f')\nsentence += '\u800c'\nsentence += str(grow_best_month)\nsentence += '\u6708\uff0c\u65c5\u5ba2\u91cf\u5448\u73b0\u7206\u53d1\u5f0f\u589e\u957f\uff0c\u540c\u6bd4\u589e\u5e45\u4e3a'\nsentence += str(grow_best_score)\nsentence += '\u4e2a\u767e\u5206\u70b9\uff1b'\nsentence += str(grow_worst_month)\nsentence += '\u8d74AAA\u65c5\u5ba2\u91cf\u5448\u73b0\u51fa\u65ad\u5d16\u5f0f\u4e0b\u8dcc\uff0c\u8fce\u6765\u5e02\u573a\u201c\u5bd2\u51ac\u201d\uff0c\u540c\u6bd4\u4e0b\u964d'\nsentence += str(grow_worst_score)\nsentence += '%\u3002'\nprint()\nprint(\"\u76f8\u5173\u63cf\u8ff0\u6587\u5b57\uff1a\")\nprint(sentence)\nprint()\n\n\nfig = plt.figure(figsize = (20,10))\nplt.style.use('ggplot') \n# \u8bbe\u7f6e\u5750\u6807\u8f74\u663e\u793a\nplt.xticks(df_select_1['month_id'],size = 20)\nplt.yticks(size = 20)\nplt.xlabel('\u6708\u4efd',fontsize = 23)\nplt.ylabel('\u65c5\u5ba2\u91cf\uff08\u5355\u4f4d\uff1a\u5341\u4e07\u4eba\u6b21\uff09',fontsize = 23)\nplt.title('\u8d74AAA\u65c5\u5ba2\u589e\u957f\u8d70\u52bf',fontsize = 28, y= 1.03)\nplt.plot(df_select_1['month_id'],df_select_1['\u65c5\u5ba2\u91cf'],linewidth = 10)\nplt.show()","873dda48":"\ncur_year_id = df1['year_id'].idxmax()\ncur_year = df1.iloc[cur_year_id]['year_id']\n\ntotal_people = 0\ndf_select_1['\u5730\u533a\u5168\u5e74\u65c5\u5ba2\u91cf'] = 0\nfor i in range(1, 13):\n    # df_select_1\u6700\u8fd1\u4e00\u5e74\u7684\u5404\u5730\u533a10\u6708\u7684\u65c5\u5ba2\u91cf\u548c\u5ba2\u5ea7\u7387\n    df_select_1 = df1[(df1['month_id'] == i ) & (df1['year_id'] == cur_year )].reset_index(drop=True)\n    total_people_tmp = df_select_1['\u65c5\u5ba2\u91cf'].sum()\n    total_people += total_people_tmp\n    if i == 1:\n        df_select_tmp = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n        df_select_2 = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n    if i > 1:\n        df_select_tmp = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n        df_select_2['\u65c5\u5ba2\u91cf'] = df_select_2['\u65c5\u5ba2\u91cf'] + df_select_tmp['\u65c5\u5ba2\u91cf']\n\ndf_select_2['\u5e02\u573a\u4efd\u989d'] = df_select_2['\u65c5\u5ba2\u91cf'] * 100 \/ total_people\n\ntotal_people = 0\nfor i in range(1, 13):\n    # df_select_1\u6700\u8fd1\u4e00\u5e74\u7684\u5404\u5730\u533a10\u6708\u7684\u65c5\u5ba2\u91cf\u548c\u5ba2\u5ea7\u7387\n    df_select_1 = df1[(df1['month_id'] == i ) & (df1['year_id'] == cur_year - 1 )].reset_index(drop=True)\n    total_people_tmp = df_select_1['\u65c5\u5ba2\u91cf'].sum()\n    total_people += total_people_tmp\n    if i == 1:\n        df_select_tmp = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n        df_select_3 = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n    if i > 1:\n        df_select_tmp = df_select_1[(df_select_1['month_id'] == i )].reset_index(drop=True)\n        df_select_3['\u65c5\u5ba2\u91cf'] = df_select_3['\u65c5\u5ba2\u91cf'] + df_select_tmp['\u65c5\u5ba2\u91cf']\n\ndf_select_3['\u5e02\u573a\u4efd\u989d'] = df_select_3['\u65c5\u5ba2\u91cf'] * 100 \/ total_people\n\n\nsentence = ''\nsentence += str(cur_year)\nsentence += '\u5e74\u5168\u5e74\uff0c\u76ee\u7684\u5730\u4e2d\u65c5\u5ba2\u91cf\u6392\u540d\u524d\u4e94\u7684\u57ce\u5e02\u4e3a\uff1a'\n\n# \u65c5\u5ba2\u91cf\u524d\u4e94\u7684\u57ce\u5e02\ndf_largest_five = df_select_2.nlargest(5, '\u65c5\u5ba2\u91cf')\ncnt = 0\nfor i in df_largest_five['cty_cd']:\n    sentence += str(i)\n    cnt +=1\n    if cnt < 5:\n        sentence += '\u3001'\n            \n# \u6700[\u201c\u70ed\u201d\/\u201c\u51c9\u201d]\u57ce\u5e02\nhot_city_id = df_select_2['\u65c5\u5ba2\u91cf'].idxmax()\nhot_city = df_select_2.iloc[hot_city_id]['cty_cd']\nhot_city_people = df_select_2.iloc[hot_city_id]['\u65c5\u5ba2\u91cf']\nhot_city_percent = format(df_select_2.iloc[hot_city_id]['\u5e02\u573a\u4efd\u989d'], '.2f')\ncold_city_id = df_select_2['\u65c5\u5ba2\u91cf'].idxmin()\ncold_city = df_select_2.iloc[cold_city_id]['cty_cd']\ncold_city_people = df_select_2.iloc[cold_city_id]['\u65c5\u5ba2\u91cf']\ncold_city_percent = format(df_select_2.iloc[cold_city_id]['\u5e02\u573a\u4efd\u989d'], '.2f')\n\nsentence += '\u3002\u5176\u4e2d\uff0c'\nsentence += str(hot_city)\nsentence += '\u533a\u57df\u4e3a\u5f53\u524d\u6700\u5927\u70ed\u70b9\uff0c\u65c5\u5ba2\u91cf\u8fbe\u5230'\nsentence += str(hot_city_people)\nsentence += '\u4eba\u6b21\uff0c\u5360\u636e\u4e86\u5e02\u573a\u4efd\u989d\u7684'\nsentence += str(hot_city_percent)\nsentence += '%\uff0c'\nsentence += str(cold_city)\nsentence += '\u5904\u4e8e\u5e02\u573a\u201c\u5bd2\u51ac\u201d\uff0c\u65c5\u5ba2\u91cf\u4ec5\u5360\u5e02\u573a\u4efd\u989d'\nsentence += str(cold_city_percent)\nsentence += '%\u3002'\n\n# \u6bd4\u53bb\u5e74\u540c\u671f[\u8fdb\u6b65\/\u9000\u6b65]\u6700\u5927\u57ce\u5e02\ngrow_best_score = 0\ngrow_worst_score = 0\ncty = set(df_select_2['cty_cd'])\nfor i in cty:\n    x = float(df_select_2[df_select_2['cty_cd'] == i]['\u5e02\u573a\u4efd\u989d'] - df_select_3[df_select_3['cty_cd'] == i]['\u5e02\u573a\u4efd\u989d'])\n    if x > grow_best_score:\n        grow_best_cty = i\n        grow_best_score = x\ngrow_best_score = format(grow_best_score, '.2f')\nfor i in cty:\n    x = float(df_select_2[df_select_2['cty_cd'] == i]['\u5e02\u573a\u4efd\u989d'] - df_select_3[df_select_3['cty_cd'] == i]['\u5e02\u573a\u4efd\u989d'])\n    if x < grow_worst_score:\n        grow_worst_cty = i\n        grow_worst_score = x\ngrow_worst_score = format(-grow_worst_score, '.2f')\n\nsentence += '\u800c\u4e0e\u53bb\u5e74\u5168\u5e74\u65c5\u5ba2\u91cf\u60c5\u51b5\u76f8\u6bd4\uff0c\u53ef\u4ee5\u53d1\u73b0'\nsentence += str(grow_worst_cty)\nsentence += '\u8f83\u53bb\u5e74\u540c\u671f\u5931\u53bb\u4e86'\nsentence += str(grow_worst_score)\nsentence += '%\u7684\u5e02\u573a\u4efd\u989d\uff0c\u5e02\u573a\u9700\u6c42\u52a8\u529b\u6709\u6240\u653e\u7f13\u3002\u4f46\u6301\u7eed\u706b\u70ed\u7684\u5e02\u573a\u9700\u6c42\u4f7f'\nsentence += str(grow_best_cty)\nsentence += '\u533a\u57df\u9884\u8ba2\u4efd\u989d\u589e\u957f'\nsentence += str(grow_best_score)\nsentence += '\u4e2a\u767e\u5206\u70b9\uff0c\u6709\u671b\u5728\u660e\u5e74\u8fbe\u5230\u65b0\u7684\u9ad8\u5cf0\u3002'\n\n# \u65c5\u5ba2\u91cf\u540e\u4e8c\u7684\u57ce\u5e02\ndf_worst_two = df_select_2.nsmallest(2, '\u65c5\u5ba2\u91cf')\ndf_worst_two = df_worst_two.sort_values(by=['\u65c5\u5ba2\u91cf'], ascending=False) \ncnt = 0\nfor i in df_worst_two['cty_cd']:\n    sentence += str(i)\n    cnt +=1\n    if cnt < 2:\n        sentence += '\u3001'\nsentence += '\u533a\u57df\u8981\u60f3\u62a2\u5360\u66f4\u591a\u5e02\u573a\u4efd\u989d\u4ecd\u9700\u66f4\u6709\u5438\u5f15\u529b\u7684\u5143\u7d20\u6fc0\u53d1\u5e02\u573a\u6f5c\u529b\u3002'\n    \nprint()\nprint(\"\u76f8\u5173\u63cf\u8ff0\u6587\u5b57\uff1a\")\nprint(sentence)\nprint()\n\n\nfrom matplotlib import pyplot as plt\nplt.figure(2)\nplt.rcParams['font.sans-serif']=['SimHei'] \nlabels = df_select_2['cty_cd'] #\u5b9a\u4e49\u6807\u7b7e\nsizes = df_select_2['\u5e02\u573a\u4efd\u989d'] #\u6bcf\u5757\u503c\npatches,text1,text2 = plt.pie(sizes,\n                      labels=labels,\n                      radius=1.9,\n                      shadow = True, #\u65e0\u9634\u5f71\u8bbe\u7f6e\n                      autopct='%1.0f%%',\n                      startangle =90, #\u9006\u65f6\u9488\u8d77\u59cb\u89d2\u5ea6\u8bbe\u7f6e\n                      labeldistance=1.1,\n                      pctdistance = 0.8) #\u6570\u503c\u8ddd\u5706\u5fc3\u534a\u5f84\u500d\u6570\u8ddd\u79bb\n#patches\u997c\u56fe\u7684\u8fd4\u56de\u503c\uff0ctexts1\u997c\u56fe\u5916label\u7684\u6587\u672c\uff0ctexts2\u997c\u56fe\u5185\u90e8\u7684\u6587\u672c\n# x\uff0cy\u8f74\u523b\u5ea6\u8bbe\u7f6e\u4e00\u81f4\uff0c\u4fdd\u8bc1\u997c\u56fe\u4e3a\u5706\u5f62\nplt_title = ''\nplt_title += str(cur_year)\nplt_title += '\u5e74\u76ee\u7684\u5730\u57ce\u5e02\u7edf\u8ba1'\nplt.title(plt_title, y= 1.5,fontsize = 28)\nplt.legend(loc=\"upper right\",fontsize=10,bbox_to_anchor=(2.5,1.2),borderaxespad=0.3, ncol=2) \nplt.figure(figsize=(60,80),dpi=200)\nplt.show()\n\n","e3b16a9d":"df1_2_1 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2015 )]['\u65c5\u5ba2\u91cf'])\ndf1_2_2 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2016 )]['\u65c5\u5ba2\u91cf'])\ndf1_2_3 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2017 )]['\u65c5\u5ba2\u91cf'])\n\ndf1_2_4 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2015 )]['\u5ba2\u5ea7\u7387'])\ndf1_2_5 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2016 )]['\u5ba2\u5ea7\u7387'])\ndf1_2_6 =list(df1[(df1['cty_cd'] == 'AAA') & (df1['year_id'] == 2017 )]['\u5ba2\u5ea7\u7387'])\n\ndf1_2_7 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2015 )]['\u65c5\u5ba2\u91cf'])\ndf1_2_8 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2016 )]['\u65c5\u5ba2\u91cf'])\ndf1_2_9 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2017 )]['\u65c5\u5ba2\u91cf'])\n\ndf1_2_10 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2015 )]['\u5ba2\u5ea7\u7387'])\ndf1_2_11 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2016 )]['\u5ba2\u5ea7\u7387'])\ndf1_2_12 =list(df1[(df1['cty_cd'] == 'ZZZ') & (df1['year_id'] == 2017 )]['\u5ba2\u5ea7\u7387'])\n\n\ndates2015 = pd.date_range(start='20150101', end='20151231', freq='M')\ndates2016 = pd.date_range(start='20160101', end='20161231', freq='M')\ndates2017 = pd.date_range(start='20170101', end='20171231', freq='M')\n\ns1 = pd.Series(df1_2_1, index=dates2015)\ns2 = pd.Series(df1_2_4, index=dates2015)\ns3 = pd.Series(df1_2_2, index=dates2016)\ns4 = pd.Series(df1_2_5, index=dates2016)\ns5 = pd.Series(df1_2_3, index=dates2017)\ns6 = pd.Series(df1_2_6, index=dates2017)\n\ns7 = pd.Series(df1_2_7, index=dates2015)\ns8 = pd.Series(df1_2_10, index=dates2015)\ns9 = pd.Series(df1_2_8, index=dates2016)\ns10 = pd.Series(df1_2_11, index=dates2016)\ns11 = pd.Series(df1_2_9, index=dates2017)\ns12 = pd.Series(df1_2_12, index=dates2017)\n","28522f66":"plt.style.use('ggplot')  # \u8bbe\u7f6e\u7ed8\u56fe\u98ce\u683c\nfig = plt.figure(figsize = (20,12))  # \u8bbe\u7f6e\u56fe\u6846\u7684\u5927\u5c0f\nax1 = fig.add_subplot(1,1,1)\nplt.rcParams['font.sans-serif']=['SimHei']\nplt.rcParams['axes.unicode_minus']=False\nplt.title('People amout statistic',color = '#6D6D6D',fontsize = 18)\nplt.xlabel('Year and Month')\nplt.ylabel('value')\n\n# AAA city\nplt.subplot(6,3,1)\nplt.title('AAA Growth trend',color = '#6D6D6D',fontsize = 18)\ns1.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,4)\ns2.plot()\nplt.subplot(6,3,7)\ns3.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,10)\ns4.plot()\nplt.subplot(6,3,13)\ns5.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,16)\ns6.plot()\n\n#ZZZ\nplt.subplot(6,3,2)\nplt.title('ZZZ Growth trend',color = '#6D6D6D',fontsize = 18)\ns7.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,5)\ns8.plot()\nplt.subplot(6,3,8)\ns9.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,11)\ns10.plot()\nplt.subplot(6,3,14)\ns11.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe\nplt.subplot(6,3,17)\ns12.plot() # \u7ed8\u5236\u6298\u7ebf\u56fe","731da871":"## \ud83d\ude972. \u201c[\u5168\u5e74\/\u67d0\u6708]\u76ee\u7684\u5730\u57ce\u5e02\u65c5\u5ba2\u91cf\u6bd4\u8f83\u201d\uff1a\n\n\u90fd\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u6587\u5b57\u6a21\u7248\uff0c\u4ee510\u6708\u4e3a\u4f8b\n- xxxx\u5e74\u76ee\u7684\u5730\u4e2d\u65c5\u5ba2\u91cf\u524d5\u7684\u57ce\u5e02\u4f9d\u6b21\u4e3axx\u3001xx\u3001xx\u3001xx\u548cxx\u3002\n- xxx\u533a\u57df\u4e3a\u5f53\u524d\u6700\u5927\u70ed\u70b9\uff0c\u5360\u636e\u9884\u8ba2\u5e02\u573a\u4efd\u989dxx%\uff1b\n- xxx\u8f83\u53bb\u5e74\u540c\u671f\u76f8\u6bd4\u5931\u53bb\u4e86xx%\u7684\u5e02\u573a\u4efd\u989d\uff0c\u5e02\u573a\u9700\u6c42\u52a8\u529b\u4e0d\u8db3\u3002\n- \u6301\u7eed\u706b\u70ed\u7684\u5e02\u573a\u9700\u6c42\u4ec5\u4f7fxxx\u533a\u57df\u9884\u8ba2\u4efd\u989d\u589e\u957fxx\u4e2a\u767e\u5206\u70b9.\n- xxx\u3001xxx\u533a\u57df\u8981\u60f3\u62a2\u5360\u66f4\u591a\u5e02\u573a\u4efd\u989d\u4ecd\u9700\u66f4\u6709\u5438\u5f15\u529b\u7684\u5143\u7d20\u6fc0\u53d1\u5e02\u573a\u6f5c\u529b\u3002","2cb237d2":"## 1.\ud83d\ude97\u201c\u8d74AAA\u65c5\u5ba2\u91cf\u589e\u957f\u8d70\u52bf\u201d\n - \u5982\u56fe\u6240\u793a\uff0cxxxx\u5e74xx\u6708\u8d74xx\u65c5\u5ba2\u91cf[\u65ad\u5d16\u5f0f\u4e0b\u8dcc]\uff0c\u8fce\u6765\u5e02\u573a\u201c\u5bd2\u51ac\u201d\uff0c\u540c\u6bd4\u4e0b\u964dxx%\u3002\n - xxxx\u5e74xx-xx\u6708\u7684\u65c5\u5ba2\u91cf\u5448[\u7206\u53d1\u5f0f\u589e\u957f]\u3002\n - \u4e4b\u540e\u4ecexx\u6708\u5f00\u59cb\uff0c\u8d74xx\u65c5\u5ba2\u91cf\u589e\u957f\u8d70\u52bf[\u9010\u6e10\u56de\u5f52\u5e38\u6001]\u3002"}}