{"cell_type":{"9f424c7c":"code","a8dec7d1":"code","9eb1fa79":"code","05ca55d8":"code","69fc79d4":"code","dd634d12":"code","739101c6":"code","07470199":"code","be1a6bb0":"code","2c45e4ff":"code","54dd2ea4":"code","1301ad27":"code","57a20936":"code","48bb4d60":"markdown"},"source":{"9f424c7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a8dec7d1":"data = pd.read_csv(\"..\/input\/titanic\/train_and_test2.csv\")\ndata.head(10)","9eb1fa79":"data.shape","05ca55d8":"null = data.isnull().sum()\nnull","69fc79d4":"data = data.dropna(axis = 0)","dd634d12":"train_data = data[0:900]\ntrain_data.shape","739101c6":"test_data = data[900:]\ntest_data.shape","07470199":"features = [\"Age\", \"Sex\", \"Embarked\"]\ntrain_input = train_data[features]","be1a6bb0":"train_output = train_data['2urvived']","2c45e4ff":"features = [\"Age\", \"Sex\", \"Embarked\"]\ntest_input = test_data[features]","54dd2ea4":"test_output = test_data['2urvived']","1301ad27":"from sklearn.linear_model import LinearRegression\nlinear_reg = LinearRegression()\nlinear_reg.fit(train_input, train_output)\npredictions = linear_reg.predict(test_input)","57a20936":"from sklearn.metrics import mean_squared_error\nerror = mean_squared_error(test_output, predictions)\nerror","48bb4d60":"THE END"}}