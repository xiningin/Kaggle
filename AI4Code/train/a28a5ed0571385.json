{"cell_type":{"17bfb84b":"code","3d85e1ab":"code","63a1cca9":"code","609a9f26":"code","a14c9119":"code","6904e3b1":"code","b5f12437":"code","f4db079f":"code","57b09645":"code","7074015c":"code","1d3450b9":"code","152a190d":"markdown","940570dc":"markdown","9043a83c":"markdown","9a79ef86":"markdown","0fb41554":"markdown","7da528c7":"markdown","c0c6b053":"markdown","238ef232":"markdown","45328a60":"markdown","070beb58":"markdown"},"source":{"17bfb84b":"import os\n\n# Used to read the Parquet data\nimport pyarrow.parquet as parquet\n# Used to train the baseline model\nfrom sklearn.linear_model import LogisticRegression\n\n\ninput_path = '..\/input'\nprint(os.listdir(input_path))","3d85e1ab":"%%sh\nls -lhR ..\/input | awk '\n\/:$\/&&f{s=$0;f=0}\n\/:$\/&&!f{sub(\/:$\/,\"\");s=$0;f=1;next}\nNF&&f{ print s\"\/\"$0 }'","63a1cca9":"data = parquet.read_table(input_path + '\/train\/date=2018-02-07').to_pandas()\ndata.head(10)","609a9f26":"# Construct the label (liked objects)\ny = data['feedback'].apply(lambda x: 1.0 if(\"Liked\" in x) else 0.0).values","a14c9119":"# Extract the most interesting features\nX = data[[\n        'auditweights_svd_prelaunch', \n        'auditweights_ctr_high', \n        'auditweights_ctr_gender', \n        'auditweights_friendLikes']].fillna(0.0).values","6904e3b1":"model = LogisticRegression(random_state=23, solver='lbfgs').fit(X, y)\nmodel.coef_","b5f12437":"# Read the test data\ntest = parquet.read_table(input_path + '\/test').to_pandas()\ntest.head(10)","f4db079f":"test[\"predictions\"] = model.predict_proba(\n    test[[\n        'auditweights_svd_prelaunch', \n        'auditweights_ctr_high', \n        'auditweights_ctr_gender', \n        'auditweights_friendLikes'\n    ]].fillna(0.0).values\n)[:, 1]","57b09645":"result_columns = ['instanceId_userId', 'instanceId_objectId', 'predictions']\nresult = test[result_columns].sort_values(by=['instanceId_userId', 'predictions'], ascending=False)\nresult.head(10)","7074015c":"submit = result.groupby(\"instanceId_userId\")['instanceId_objectId'].apply(list)\nsubmit.head(10)","1d3450b9":"submit.to_csv('collab_submit.csv.gz', header=False, compression='gzip')","152a190d":"...\u0438 \u043d\u0430\u0448\u0438 \u0444\u0438\u0447\u0438","940570dc":"\u041c\u043e\u0434\u0435\u043b\u044c \u0433\u043e\u0442\u043e\u0432\u0430, \u0442\u0435\u043f\u0435\u0440\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435...","9043a83c":"\u041e\u0431\u0443\u0447\u0438\u043c \u043d\u0430\u0448\u0443 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e","9a79ef86":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438 \u043d\u0430 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c (\u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e, \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a!)","0fb41554":"# \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u0435\u0439","7da528c7":"\u0421\u043e\u0431\u0435\u0440\u0435\u043c \u043d\u0430\u0448 \u0442\u0430\u0440\u0433\u0435\u0442...","c0c6b053":"\u0422\u0435\u043f\u0435\u0440\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0438 \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u0438 \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u0438\u0445 \u0432 \u0441\u043f\u0438\u0441\u043a\u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `groupby().apply(list)`","238ef232":"\u0412\u043e\u0442 \u0438 \u0432\u0441\u0435, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0441\u0430\u0431\u043c\u0438\u0442 (\u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432\u043e \u0432\u043a\u043b\u0430\u0434\u043a\u0435 `Output` \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u043a\u0435\u0440\u043d\u0435\u043b\u0430) \u0438 \u0431\u0435\u0433\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043d\u0430 [mlbootcamp](https:\/\/mlbootcamp.ru\/round\/17\/tasks\/)!","45328a60":"...\u0438 \u043f\u043e\u0441\u043a\u043e\u0440\u0438\u043c \u0438\u0445.","070beb58":"\u041f\u0440\u043e\u0447\u0442\u0438\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430 \u043e\u0434\u0438\u043d \u0434\u0435\u043d\u044c, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u0448\u0443 \u043b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044e"}}