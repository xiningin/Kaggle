{"cell_type":{"f3d859e1":"code","ca590890":"code","4a8fa47b":"code","40516f5d":"code","2636695b":"code","a34598ab":"code","d6f65643":"code","4752730a":"code","901422a7":"code","591cb5a1":"code","ba6b19fd":"code","d63b0988":"code","93cd833c":"code","f63a15c2":"code","c878790a":"code","0ecce225":"code","209e297c":"code","3a709b31":"code","35cc7e9f":"code","462a0d8b":"code","412eff46":"code","7896e327":"code","26a4e17e":"code","33ba5e12":"code","77875afe":"code","7026ed1f":"code","8c7952c3":"code","1f15098e":"code","27ae5747":"code","d099ae79":"code","60148f9a":"code","84578616":"code","aa14ef82":"code","f8e797c4":"code","b77b74ac":"code","c353dd49":"code","f1253e39":"markdown","89452506":"markdown","ffd3e42a":"markdown","fa8661de":"markdown","58aed05f":"markdown","b08b03ad":"markdown","b11fa53f":"markdown","76eec525":"markdown","4d829bc9":"markdown","7b34be08":"markdown","9a6e1508":"markdown","f9a5b164":"markdown","cdeed0ae":"markdown","b96a5572":"markdown","87f40785":"markdown","19cae36d":"markdown"},"source":{"f3d859e1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ca590890":"import pandas as pd\n\nfuncionarios = pd.read_csv('\/kaggle\/input\/unbgpp-av-final\/AVAL_FINAL_AV6_Amostra.csv', sep=';')\ncandidatos = pd.read_csv('\/kaggle\/input\/unbgpp-av-final\/AVAL_FINAL_AV6_Candidatos.csv', sep=';')","4a8fa47b":"funcionarios.head(5)","40516f5d":"candidatos.head(5)","2636695b":"#Plotar um boxplot para visualizar os dados e como est\u00e3o divididos\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n\nplt.boxplot(funcionarios['Salario'])\n\n#Mostrar\nplt.show","a34598ab":"#Identificar os outliers que podem estar enviezando a m\u00e9dia salarial\nfuncionarios.tail(15)","d6f65643":"#Retiramos os funcion\u00e1rios que ganhavam acima de 72K para retirar os outliers no boxplot\nfuncionarios1 = funcionarios[0:161]\nfuncionarios1.tail(15)","4752730a":"plt.boxplot(funcionarios1['Salario'])\nplt.show","901422a7":"#An\u00e1lise descritiva (contagem, m\u00e9dia, desvio padr\u00e3o, valor minimo, 1\u00ba quartil, mediana, 2\u00baquartil, valor maximo)\nfuncionarios1.describe()","591cb5a1":"#1 Modelo - Sem outliers c\/ vari\u00e1veis\nimport statsmodels.formula.api as smf\nreg = smf.ols('Salario ~ Casado+ Filhos + Educacao + Experiencia + Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios1).fit()\nreg.summary()","ba6b19fd":"#2 Modelo - Com outliers e c\/ vari\u00e1veis\n\nreg = smf.ols('Salario ~ Casado+ Filhos + Educacao + Experiencia + Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios).fit()\nreg.summary()","d63b0988":"#3 Modelo - Com outliers e s\/ vari\u00e1veis\nreg = smf.ols('Salario ~ Educacao +  Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios).fit()\nreg.summary()","93cd833c":"#4 Modelo Sem outliers e s\/ vari\u00e1veis\nreg = smf.ols('Salario ~ Educacao + Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios1).fit()\nreg.summary()","f63a15c2":"import numpy as np\nimport statsmodels\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n%matplotlib inline","c878790a":"import statsmodels.formula.api as smf\nreg = smf.ols('Salario ~ Casado+ Filhos + Educacao + Experiencia + Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios1).fit()\nreg.summary()","0ecce225":"#Linearidade entre X e Y\nx = funcionarios1['Salario']\ny = funcionarios1['Carros']\n\nfig, ax = plt.subplots(figsize=(6,2.5))\nax.scatter(x, y)","209e297c":"pred_val = reg.fittedvalues.copy() #Ponto estimado da reta \ntrue_val = funcionarios1['Salario'].values.copy()\nresidual = true_val - pred_val","3a709b31":"fig, ax = plt.subplots(figsize=(6,2.5))\nax.scatter(residual, pred_val)","35cc7e9f":"#2 M\u00e9dia dos res\u00edduos deve ser zero\n\nresidual = true_val - pred_val\nmean_residual = np.mean(residual)\nprint('A m\u00e9dia dos res\u00edduos {}'.format(mean_residual))","462a0d8b":"#Teste de hip\u00f3tese de amostras independentes\nfrom scipy import stats\nstats.ttest_ind(true_val, pred_val, equal_var=False)","412eff46":"#3 Homocedasticidade - verificar se a vari\u00e2ncia \u00e9 constante\n\np = sns.scatterplot(pred_val, residual)\nplt.xlabel('pred_val\/Previsao do Salario')\nplt.ylabel('Red\u00edduos')\nplt.ylim(-30000,120000)\nplt.xlim(0,120000)\np = sns.lineplot([0,120000],[0,0],color='blue')\np = plt.title('residual vs fitted values plot for homoscedasticity check')","7896e327":"_, pval, _,f_val = statsmodels.stats.diagnostic.het_breuschpagan(residual, funcionarios1[[\"Casado\", \"Filhos\", \"Educacao\", \"Experiencia\", \"Porte_Emp\", \"IG\", \"Ingles\", \"Carros\"]])\npval, f_val","26a4e17e":"#4 - Normalidade dos res\u00edduos ","33ba5e12":"p = sns.distplot(residual, kde=True)\np = plt.title('Normality of error terms\/residuals')","77875afe":"from scipy import stats\nresidual = true_val - pred_val\nstats.shapiro(residual)","7026ed1f":"from scipy import stats\nstats.probplot(residual, dist='norm', plot=plt)\nplt.title('Normal Q-Q Plot dos Res\u00edduos')","8c7952c3":"#5 - Aus\u00eancia de autocorrela\u00e7\u00e3o dos res\u00edduos","1f15098e":"plt.figure(figsize=(10,5))\np = sns.lineplot(pred_val, residual, marker='o', color='blue')\nplt.xlabel('pred_val\/Previsao do Salario')\nplt.ylabel('Red\u00edduos')\nplt.ylim(-30000, 80000)\nplt.xlim(0, 80000)\np = sns.lineplot([0, 120000], [0,0], color='red')\np = plt.title('Residuals vs fitted values plot for autocorrelation check')","27ae5747":"#autocorrelation\nsm.graphics.tsa.plot_acf(residual, lags=40)\nplt.show()","d099ae79":"from statsmodels.stats import diagnostic as diag\nmin(diag.acorr_ljungbox(residual, lags=40)[1])","60148f9a":"#6 Verificar aus\u00eancia de multicolinearidade\nplt.figure(figsize=(10,10))\np=sns.heatmap(funcionarios.corr(), annot=True, cmap='RdYlGn', square=True)","84578616":"import statsmodels.formula.api as smf\nreg= smf.ols('Salario ~ Casado + Filhos + Educacao + Experiencia + Porte_Emp + Tempo_Emp + IG + Ingles + Carros', data=funcionarios1).fit()\nreg.summary()","aa14ef82":"from statsmodels.stats.outliers_influence import variance_inflation_factor\n\nX = funcionarios1.drop(columns=['Salario', 'Experiencia_2', 'Tempo_Emp_2'])\n\nvif_data = pd.DataFrame()\nvif_data['feature'] = X.columns\n\nvif_data['VIF'] = [variance_inflation_factor(X.values, i)\n                       for i in range(len(X.columns))]\n\nprint(vif_data)","f8e797c4":"candidatos.head()","b77b74ac":"# Aplicar o modelo fazendo uma previs\u00e3o de notas no novo conjunto de dados\nnovo_x = pd.DataFrame(candidatos, columns=('Casado', 'Filhos', 'Educacao', 'Experiencia', 'Porte_Emp', 'Tempo_Emp', 'IG', 'Ingles', 'Carros'))\nprevisao = reg.predict(novo_x)\nprevisao","c353dd49":"#Salario com o aumento de 10% dos salarios\nprint(previsao*1.10)","f1253e39":"# **Pressuposi\u00e7\u00e3o do modelo**\n\n1. Linearidade X e Y\n2. M\u00e9dia dos res\u00edduos deve ser zero\n3. Homocedasticidade (Vari\u00e2ncia dos res\u00edduos deve ser constante - igual vari\u00e2ncias)\n4. Normalidade dos res\u00edduos\n5. Aus\u00eancia de autocorrela\u00e7\u00e3o dos res\u00edduos\n6. Aus\u00eancias de multicolinearidade perfeita (vari\u00e1veis X deve ser independentes entre si)","89452506":"**Teste de Hip\u00f3tese do Modelo**\n\nH0 - O modelo \u00e9 bom\n\nH1 - O modelo n\u00e3o \u00e9 bom\n\nDe acordo com o Prob(F-statistic), p-valor \u00e9 menor do que o alpha de 5%, logo rejeito H0, ent\u00e3o o modelo n\u00e3o \u00e9 bom.","ffd3e42a":"**Teste de normalidade de Shapiro**\n\nH0: Os erros prov\u00e9m de uma distribui\u00e7\u00e3o normal\n\nH1: Os erros n\u00e3o prov\u00e9m de uma distribui\u00e7\u00e3o normal\n\nComo o P-valor \u00e9 algo muito pr\u00f3ximo de 0, em um n\u00edvel de signific\u00e2ncia de 5%, rejeitamos a hip\u00f3tese nula de que os erros prov\u00e9m de uma distribui\u00e7\u00e3o normal.","fa8661de":"Os valores de VIF n\u00e3o ultrapassaram 10, ent\u00e3o n\u00e3o apresentam multicolinearidade.","58aed05f":"O p-valor do intercept \u00e9 menor que alpha, ent\u00e3o rejeito H0.","b08b03ad":"**Teste T Student para Hip\u00f3teses de m\u00e9dias**\n\nH0: A m\u00e9dia dos res\u00edduos = 0 (Sal\u00e1rio real - sal\u00e1rio predito = 0)\n\nH1: A m\u00e9dia dos res\u00edduos !=0\n\n\nP valor = 0.99 > 0,05 (5%) de alpha, logo n\u00e3o rejeito a hip\u00f3tese nula (H0)\n\n\nEnt\u00e3o a m\u00e9dia dos res\u00edduos \u00e9 igual a 0. ","b11fa53f":"# **An\u00e1lise dos modelos pelo AIC**\n\n","76eec525":"O valor do AIC no presente modelo sem outliers \u00e9 de 3417, iremos agora verificar o modelo com outliers.","4d829bc9":"**Teste de Breuschpagan para homocedasticidade**\n\nVerificando a heteroscedasticidade: Adotando o teste de Goldfeld Quandt para heteroscedasticidade.\n\n* H0 (hip\u00f3tese nula): A vari\u00e2ncia dos erros \u00e9 constante (homoced\u00e1stica)\n* H1 (hip\u00f3tese  alternativa): A vari\u00e2ncia dos erros n\u00e3o \u00e9 constante (heteroced\u00e1stica)\n\nResultado do teste \n\nNo teste, o p-valor \u00e9 um valor muito pr\u00f3ximo de 0 que \u00e9 menor do que o alfa de 5% (0,05). Portanto, ao n\u00edvel de signif\u00e2ncia de 5%, rejeitamos H0 (hip\u00f3tese nula) de homoscedasticidade.","7b34be08":"# **Modelo Te\u00f3rico**","9a6e1508":"As vari\u00e1veis Tempo_Emp e Tempo_Emp_2 est\u00e3o altamente correlacionadas, assim como Experiencia e Experiencia_2 tamb\u00e9m est\u00e3o altamente correlacionadas, de acordo com o mapa de calor.","f9a5b164":"**Teste de Ljungbox para verificar a autocorrela\u00e7\u00e3o entre os res\u00edduos**\n   \n   H0: A autocorrela\u00e7\u00e3o est\u00e1 ausente.\n   \n   H1: A autocorrela\u00e7\u00e3o est\u00e1 presente.\n   \n   O valor resultante do c\u00f3digo, \u00e9 um valor muito pr\u00f3ximo de 0, sendo assim, em um n\u00edvel de signific\u00e2ncia de 5%, rejeitamos a hip\u00f3tese nula de  que a autocorrela\u00e7\u00e3o est\u00e1 ausente.","cdeed0ae":"**Conclus\u00e3o sobre o modelo**\n\n1. Modelo 1 (sem outliers c\/ todas as vari\u00e1veis): o AIC \u00e9 de 3417\n2. Modelo 2 (com outliers c\/ todas as vari\u00e1veis): o AIC \u00e9 de 3868 (o maior)\n3. Modelo 3 (com outliers s\/vari\u00e1veis): o AIC \u00e9 de 3865\n4. Modelo 4 (sem outliers s\/vari\u00e1veis): o AIC \u00e9 de 3416 (o menor)\n\nNotamos que, retirar as vari\u00e1veis n\u00e3o alterou de forma significativa o AIC dos modelos testados.\n\nLevando isso em considera\u00e7\u00e3o, e tamb\u00e9m levando em considerando o R-quadrado de todos os modelos, decidimos seguir em frente com o modelo 1, que possui o maior R-quadrado (0,623)\n\n*AIC = m\u00e9trica usada para comparar o ajuste de diferentes modelos de regress\u00e3o.\n\n\n","b96a5572":"## **Previs\u00e3o dos Sal\u00e1rios dos candidatos**\n **(MLRM com 9 vari\u00e1veis independentes)**","87f40785":"Notamos que no modelo com outliers, o AIC \u00e9 maior do que o modelo sem outliers (3868).","19cae36d":"De acordo com a previs\u00e3o de sal\u00e1rios e com a previs\u00e3o de aumento de 10%, os candidatos que n\u00f3s selecionariamos para as entrevistas s\u00e3o os candidatos: 1, 2 e 4, tendo em vista o or\u00e7amento de sal\u00e1rio vigente de 50 mil reais."}}