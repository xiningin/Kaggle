{"cell_type":{"d34c331c":"code","1ab0ef92":"code","40dc7e3a":"code","8ca0d5c9":"code","6c79df2a":"code","5e0c9e6e":"code","09e0f9f3":"code","05ab914f":"code","94eb81cc":"code","034e8075":"code","fdbde5e8":"code","c6f09311":"code","6adbbbd1":"code","3259b314":"code","87c75cd6":"code","d5424e7b":"code","968d92bb":"code","2b935ef7":"code","05e61715":"code","6a59942e":"code","8a4f2c2b":"code","23e57b93":"code","96cfe4ce":"code","21ef1eb2":"code","6cc36836":"code","e50d865e":"code","8f00e3b6":"code","4567174f":"code","fbfec006":"code","8e1f160b":"code","41741ea5":"code","d170518d":"code","4e6354da":"code","eb5d7b9a":"code","d27a4c06":"code","7a1fcb3a":"code","9cb714a5":"code","7cf95473":"code","18829b71":"code","7c7f339a":"code","90367a58":"code","8f08e4bb":"code","131eb906":"code","727b5e0b":"code","32ea282c":"code","9da73206":"code","a5e6851d":"code","2e3b2191":"code","c28b8355":"code","9b3d2924":"code","3e2b3081":"code","33f907f3":"code","a647c97d":"code","ac8f70ba":"code","3d14c12f":"code","e22ba44b":"code","7cfcd141":"code","ff5d627d":"code","ec04f86e":"code","78ec61ef":"code","7768ce92":"code","b2d18056":"code","a17894ce":"code","d264c886":"code","4e46f426":"code","672fccd3":"code","92ba998e":"code","73d8ac0e":"code","9716e1e0":"code","824557ec":"code","eaa42bda":"code","413ed5fa":"code","ddede826":"code","cb8bd828":"code","07d4c433":"code","a4819fb2":"code","5201dbac":"code","a5f7f5fa":"code","78cbd044":"code","7eb0b46f":"code","16f04f6f":"code","88188633":"code","73f4a55e":"code","54e83b01":"code","5bbdc028":"code","9434fad1":"code","a734f6bb":"code","c318fdd0":"code","b457a734":"code","78fa5857":"code","5952af0a":"code","37bdbba5":"code","3a829906":"code","828cab69":"code","6d24877a":"code","4eccedf6":"code","bc3fb343":"code","f0f4aa55":"code","1ed7cb95":"code","22b3765c":"code","00147411":"code","e8d8a0fa":"code","762e4934":"code","070a97f7":"code","180e328d":"code","ea19b9f1":"markdown"},"source":{"d34c331c":"import pandas as pd\nimport numpy as np\n\ndf=pd.read_csv('..\/input\/black-friday-sales-prediction\/train_oSwQCTC (1)\/train.csv')\n\ndf.head(3)","1ab0ef92":"df.columns","40dc7e3a":"df.drop(['User_ID','Product_ID'], axis=1, inplace=True)","8ca0d5c9":"df.isnull().sum()","6c79df2a":"df.isnull().mean()","5e0c9e6e":"df.dtypes","09e0f9f3":"df.columns","05ab914f":"import matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nplt.style.use('seaborn-darkgrid')","94eb81cc":"print('The Unique element present in Gender')\nprint(df['Gender'].unique())\nsns.countplot(df['Gender'])\nplt.show()\nimport collections\nc=collections.Counter(df['Gender'])\nprint('The count of Each unique element')\nprint(c)","034e8075":"print('The Unique element present in Age')\nprint(df['Age'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Age'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Age'].value_counts())\ndf['Age'].value_counts(normalize = True).plot.bar(title = 'Age')","fdbde5e8":"df['Age']=df['Age'].replace('55+','55')\nprint(df['Age'].unique())","c6f09311":"print('The Unique element present in Occupation')\nprint(df['Occupation'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Occupation'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Occupation'].value_counts())\nplt.figure(figsize=(10,5))\ndf['Occupation'].value_counts(normalize = True).plot.bar(title = 'Occupation')","6adbbbd1":"df.columns","3259b314":"print('The Unique element present in City_Category')\nprint(df['City_Category'].unique())\n#plt.figure(figsize=(10,5))\nsns.countplot(df['City_Category'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['City_Category'].value_counts())\ndf['City_Category'].value_counts(normalize = True).plot.bar(title = 'City_Category')","87c75cd6":"print('The Unique element present in Stay_In_Current_City_Years')\nprint(df['Stay_In_Current_City_Years'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Stay_In_Current_City_Years'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Stay_In_Current_City_Years'].value_counts())\nplt.figure(figsize=(10,5))\ndf['Stay_In_Current_City_Years'].value_counts(normalize = True).plot.bar(title = 'Stay_In_Current_City_Years')","d5424e7b":"df['Stay_In_Current_City_Years']=df['Stay_In_Current_City_Years'].replace('4+','4')\n\nprint('The Unique element present in Stay_In_Current_City_Years')\nprint(df['Stay_In_Current_City_Years'].unique())","968d92bb":"print('The Unique element present in Marital_Status')\nprint(df['Marital_Status'].unique())\n#plt.figure(figsize=(10,5))\nsns.countplot(df['Marital_Status'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Marital_Status'].value_counts())\ndf['Marital_Status'].value_counts(normalize = True).plot.bar(title = 'Marital_Status')\nplt.show()\nplt.figure(figsize = (10, 5))\nsns.violinplot(x = 'City_Category', y = 'Purchase', hue = 'Marital_Status', data = df)","2b935ef7":"print('The Unique element present in Product_Category_1')\nprint(df['Product_Category_1'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_1'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_1'].value_counts())\nplt.figure(figsize=(10,5))\ndf['Product_Category_1'].value_counts(normalize = True).plot.bar(title = 'Product_Category_1')","05e61715":"print('The Unique element present in Product_Category_2')\nprint(df['Product_Category_2'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_2'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_2'].value_counts())\nplt.figure(figsize=(10,5))\ndf['Product_Category_2'].value_counts(normalize = True).plot.bar(title = 'Product_Category_2')","6a59942e":"print('The Unique element present in Product_Category_1')\nprint(df['Product_Category_3'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_3'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_3'].value_counts())\nplt.figure(figsize=(10,5))\ndf['Product_Category_3'].value_counts(normalize = True).plot.bar(title = 'Product_Category_3')","8a4f2c2b":"df.describe().T","23e57b93":"df.corr()","96cfe4ce":"df['Product_Category_3'].isnull().mean()","21ef1eb2":"df.drop(['Product_Category_3'], axis=1, inplace=True)","6cc36836":"df.columns","e50d865e":"df.isnull().mean()","8f00e3b6":"df1=df.copy()","4567174f":"df1.dropna(inplace=True)","fbfec006":"df1.isnull().mean()","8e1f160b":"from scipy.stats import norm\nplt.figure(figsize=(10,5))\nsns.distplot(df1['Purchase'], color='maroon', fit=norm, kde=False)\nplt.show()\n\nsns.boxplot(df1['Purchase'])\nplt.show()","41741ea5":"df1.dtypes","d170518d":"df1['Occupation']=df1['Occupation'].astype('object')","4e6354da":"df1['Occupation'].dtypes, df1['Age'].dtypes","eb5d7b9a":"df1.dtypes","d27a4c06":"from sklearn.preprocessing import LabelEncoder\nl=LabelEncoder()\ndf1['Gender']=l.fit_transform(df1['Gender'])\ndf1['Age']=l.fit_transform(df1['Age'])\ndf1['Occupation']=l.fit_transform(df1['Occupation'])\ndf1['City_Category']=l.fit_transform(df1['City_Category'])\ndf1['Stay_In_Current_City_Years']=l.fit_transform(df1['Stay_In_Current_City_Years'])","7a1fcb3a":"df1.head()","9cb714a5":"df1['Occupation'].unique()\n","7cf95473":"df1['Product_Category_2']=df1['Product_Category_2'].astype('int64')","18829b71":"df1.head(1)","7c7f339a":"X=df1.drop(['Purchase'], axis=True)\ny=df1['Purchase']","90367a58":"X.head(1)","8f08e4bb":"from sklearn.preprocessing import MinMaxScaler\ndf_num_scl=MinMaxScaler()\nx=df_num_scl.fit_transform(X)","131eb906":"x[:1]","727b5e0b":"x=pd.DataFrame(data=x, columns=X.columns)","32ea282c":"x.head(1)","9da73206":"X_d=x[['Product_Category_1']]\nX_d[:5]","a5e6851d":"\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)","2e3b2191":"X_train.shape, X_test.shape, y_train.shape, y_test.shape","c28b8355":"#Linear Regression\nfrom sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nmodel=lr.fit(X_train, y_train)","9b3d2924":"model.score(X_test,y_test)","3e2b3081":"from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.model_selection import cross_val_score\n","33f907f3":"import xgboost as xg\nfrom sklearn.metrics import mean_squared_error as MSE\nxgb_r = xg.XGBRegressor(n_estimators=500,learning_rate=0.2,gamma=0,min_child_weight=10,\n                           subsample=0.8,colsample_bytree=1,max_depth=7)\nxgb_r.fit(X_train, y_train)","a647c97d":"xgb_r.score(X_test,y_test)","ac8f70ba":"xgb=cross_val_score(xg.XGBRegressor(n_estimators=500,learning_rate=0.2,gamma=0,min_child_weight=10,\n                           subsample=0.8,colsample_bytree=1,max_depth=7),X_train, y_train, cv=5)\nprint(xgb)\n\nprint('The mean Score', np.mean(xgb))","3d14c12f":"from sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\ny_pred = xgb_r.predict(X_test)\nrmse = np.sqrt(mean_squared_error(y_pred, y_test))\nprint(\"RMSE : \", rmse)\nprint(\"R2 score:\", r2_score(y_test,y_pred))","e22ba44b":"df = pd.read_csv('..\/input\/black-friday-sales-prediction\/test_HujdGe7 (1)\/test.csv')","7cfcd141":"df.head()","ff5d627d":"df.columns","ec04f86e":"df.drop(['User_ID','Product_ID'], axis=1, inplace=True)","78ec61ef":"df.isnull().sum()","7768ce92":"df.isnull().mean()","b2d18056":"df.dtypes","a17894ce":"df.columns","d264c886":"import matplotlib.pyplot as plt \nimport seaborn as sns\n%matplotlib inline","4e46f426":"print('The Unique element present in Gender')\nprint(df['Gender'].unique())\nsns.countplot(df['Gender'])\nplt.show()\nimport collections\nc=collections.Counter(df['Gender'])\nprint('The count of Each unique element')\nprint(c)","672fccd3":"print('The Unique element present in Age')\nprint(df['Age'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Age'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Age'].value_counts())","92ba998e":"df['Age']=df['Age'].replace('55+','55')\nprint(df['Age'].unique())","73d8ac0e":"print('The Unique element present in Occupation')\nprint(df['Occupation'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Occupation'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Occupation'].value_counts())","9716e1e0":"df.columns","824557ec":"print('The Unique element present in City_Category')\nprint(df['City_Category'].unique())\n#plt.figure(figsize=(10,5))\nsns.countplot(df['City_Category'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['City_Category'].value_counts())","eaa42bda":"print('The Unique element present in Stay_In_Current_City_Years')\nprint(df['Stay_In_Current_City_Years'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Stay_In_Current_City_Years'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Stay_In_Current_City_Years'].value_counts())","413ed5fa":"df['Stay_In_Current_City_Years']=df['Stay_In_Current_City_Years'].replace('4+','4')\n\nprint('The Unique element present in Stay_In_Current_City_Years')\nprint(df['Stay_In_Current_City_Years'].unique())","ddede826":"print('The Unique element present in Marital_Status')\nprint(df['Marital_Status'].unique())\n#plt.figure(figsize=(10,5))\nsns.countplot(df['Marital_Status'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Marital_Status'].value_counts())","cb8bd828":"print('The Unique element present in Product_Category_1')\nprint(df['Product_Category_1'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_1'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_1'].value_counts())","07d4c433":"print('The Unique element present in Product_Category_2')\nprint(df['Product_Category_2'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_2'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_2'].value_counts())","a4819fb2":"print('The Unique element present in Product_Category_1')\nprint(df['Product_Category_3'].unique())\nplt.figure(figsize=(10,5))\nsns.countplot(df['Product_Category_3'])\nplt.show()\nprint('The count of Each unique element')\nprint(df['Product_Category_3'].value_counts())","5201dbac":"df['Product_Category_3'].isnull().mean()","a5f7f5fa":"df.columns","78cbd044":"df.isnull().mean()","7eb0b46f":"df['Product_Category_2']=df['Product_Category_2'].fillna(df['Product_Category_2'].mean())\ndf['Product_Category_3']=df['Product_Category_3'].fillna(df['Product_Category_3'].mean())","16f04f6f":"df.isnull().mean()","88188633":"df['Occupation']=df['Occupation'].astype('object')","73f4a55e":"df['Occupation'].dtypes, df['Age'].dtypes","54e83b01":"df.dtypes","5bbdc028":"df1=df.copy()","9434fad1":"df1.head(3)","a734f6bb":"from sklearn.preprocessing import LabelEncoder\nl=LabelEncoder()\ndf1['Gender']=l.fit_transform(df1['Gender'])\ndf1['Age']=l.fit_transform(df1['Age'])\ndf1['Occupation']=l.fit_transform(df1['Occupation'])\ndf1['City_Category']=l.fit_transform(df1['City_Category'])\ndf1['Stay_In_Current_City_Years']=l.fit_transform(df1['Stay_In_Current_City_Years'])","c318fdd0":"df1.head()","b457a734":"df1['Occupation'].unique()\n","78fa5857":"df1['Product_Category_2']=df1['Product_Category_2'].astype('int64')","5952af0a":"from sklearn.preprocessing import MinMaxScaler\ndf_num_scl=MinMaxScaler()\nx=df_num_scl.fit_transform(df1)","37bdbba5":"x=pd.DataFrame(data=x, columns=df1.columns)","3a829906":"x.head(3)","828cab69":"x.drop(['Product_Category_3'], axis=1, inplace=True)","6d24877a":"# Test data prediction!","4eccedf6":"Test_predict_value=xgb_r.predict(x)","bc3fb343":"submission=pd.read_csv('\/kaggle\/input\/black-friday-sales-prediction\/sample_submission_V9Inaty.csv')","f0f4aa55":"submission.head(2)","1ed7cb95":"submission.drop(['Purchase'], axis=1, inplace=True)","22b3765c":"submission.head(2)","00147411":"submission['Purchase']=Test_predict_value","e8d8a0fa":"submission.head(1)","762e4934":"submission.shape","070a97f7":"submission.to_csv('submission.csv',index=False)","180e328d":"\nfrom IPython.display import HTML\nimport pandas as pd\nimport numpy as np\nimport base64\n\n# function that takes in a dataframe and creates a text link to  \n\ndef create_download_link(df, title = \"Download CSV file\", filename = \"data.csv\"):  \n    csv = df.to_csv()\n    b64 = base64.b64encode(csv.encode())\n    payload = b64.decode()\n    html = '<a download=\"{filename}\" href=\"data:text\/csv;base64,{payload}\" target=\"_blank\">{title}<\/a>'\n    html = html.format(payload=payload,title=title,filename=filename)\n    return HTML(html)\n\ncreate_download_link(submission)","ea19b9f1":"## Test data"}}