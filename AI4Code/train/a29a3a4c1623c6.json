{"cell_type":{"dbb225a0":"code","9e00f1c0":"code","44dd0800":"code","ce7cc2db":"code","329eee19":"code","a1569316":"code","2aa71a56":"code","1b496238":"code","7d176113":"code","8b5dbee9":"code","f9361a9a":"code","828b83f7":"code","5e296c99":"code","902ebefb":"code","69cf0a3c":"markdown","fd7a5fb5":"markdown","216d2569":"markdown","e93de207":"markdown","fee244f5":"markdown","315283f2":"markdown","789ce092":"markdown","dd768818":"markdown","be618551":"markdown","858d8e50":"markdown","bf316904":"markdown"},"source":{"dbb225a0":"# Importing Libraries\nimport pylab\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n%matplotlib inline\n\nsns.set_style('whitegrid')","9e00f1c0":"df = pd.read_csv(\"..\/input\/absolute_zero.csv\")\ndf","44dd0800":"df.columns = df.iloc[0]\ndf.drop(0, inplace=True)\ndf = df[['Temperature  (\u00b0C)', 'Pressure (mm Hg)']]\ndf.columns = ['Temp', 'Pressure']\ndf","ce7cc2db":"df.dtypes","329eee19":"df = df.replace('\u2013','-',   regex=True).apply(pd.to_numeric)\ndf.dtypes","a1569316":"fig = plt.figure(figsize=(12,6))\n\nsns.regplot('Temp', 'Pressure', df, color='b', fit_reg=False)\n\nplt.xlabel('Temperature (\u00baC)', fontsize=16)\nplt.ylabel('Pressure (mm Hg)', fontsize=16)\nplt.title('Pressure vs Temperature', fontsize=22)\n\npylab.xlim([-400, 200])\npylab.ylim([0, 1100])","2aa71a56":"df['Pressure'][5] = 500\ndf","1b496238":"fig = plt.figure(figsize=(12,6))\n\nsns.regplot('Temp', 'Pressure', df, color='g')\n\nplt.xlabel('Temperature (\u00baC)', fontsize=16)\nplt.ylabel('Pressure (mm Hg)', fontsize=16)\nplt.title('Pressure vs Temperature', fontsize=22)\n\npylab.xlim([-400, 200])\npylab.ylim([0, 1100])","7d176113":"from sklearn.linear_model import LinearRegression\n\nlm = LinearRegression()\nX = df['Pressure'][:, None]\ny = df['Temp']","8b5dbee9":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=101)","f9361a9a":"lm.fit(X_train, y_train)\npredictions = lm.predict(X_test)","828b83f7":"y_test = y_test.as_matrix()\n\nfor i in range(len(predictions)):\n    print(f'True vs Predicted: {y_test[i]} | {round(predictions[i],2)}')","5e296c99":"lm.predict([[0]])","902ebefb":"lm2 = LinearRegression()\nlm2.fit(X, y)\nlm2.predict([[0]])","69cf0a3c":"Now we will split our data in training data and testing data.\nMore information on why can be found here:\nhttps:\/\/www.quora.com\/In-machine-learning-what-s-the-purpose-of-splitting-data-up-into-test-sets-and-training-sets","fd7a5fb5":"Notice that we have 6 rows of data, but one of our rows has a null value. Looking at the graph above we can roughly estimate the missing value and plot it again. What value would you chose?\n\nBefore we continue, see if you can guess the value of Absolute Zero. Whatever you're doing in your head is going to be similar to how the Machine Learning model \"thinks\".","216d2569":"## A Friendly Introduction to Data Science and Machine Learning\n\n#### In 1848 Lord Kelvin estimated the value of Absolute Zero, the coldest temperature in the Universe.  In this notebook we will estimate this value using basic Data Science and Machine Learning techniques.\n\n#### Our data consists of readings of Temperature vs Pressure. To estimate the Absolute Zero we just need to find which temperature would have Pressure = Zero. Since there's no such things as negative pressure it's physically impossible for the temperature to go bellow that point.\n\n#### You will see that even with a very small sample our predition won't be too far from the actual value\n\n#### This notebook is the last part of my introductory series to Data Science and Machine Learning\n#### Here's the link: https:\/\/technocampos.com\/a-friendly-introduction-to-data-science\/\n\n#### Let's start!","e93de207":"### Here it is! According to our model Absolute Zero is -285\u00baC, which is pretty close to the actual value of -273\u00baC.\n\n### Keep in mind that we only used a very small dataset. It's not uncommon to have a much larger data to work with, like hundreds of thousands of rows (in cases like this doing a train test split would make more sense).\n\n### I hope you enjoyed!","fee244f5":"-316\u00baC for Absolute Zero, that's more than 30\u00baC off from the real value of -273\u00baC.\nThat's okay, because we used only 3 values to train the model. Let's try again with the entire set and see if we can do better.","315283f2":"We use data from the website carolina.com\nhttps:\/\/www.carolina.com\/teacher-resources\/Interactive\/gay-lussacs-law-temperature-pressure-relationship-in-gases-determination-absolute-zero\/tr10730.tr","789ce092":"There's more information in this data frame than we actually need. Let's get rid of reading no., type of bath used and temperature in kelvin.","dd768818":"In order to plot the values in a graph, they have to be either integer or floats, but in our table they're strings. Let's change that.","be618551":"We can see that this is not a very good model. But let's predict the temperature for the case where pressure is equal to zero anyway.","858d8e50":"Notice how our estimative for the missing value was spot on! I chose 500 becaue I imagined a line linking the points of the first graph. Now we can see that same line from the computer's perspective.\n\nThe fact that our data lines up as a straight line hints for a linear relationship. Let's follow the hint and implement a linear regression model.\n\nNow to create a linear regression machine learning model we will import LinearRegression from the Scikit-Learn library and define our X (Pressure) and y (Temperature) parameters for the function y = f(X)\n\nWe are calling X = Pressure and not the other way around, because we already know the value of Pressure (Zero) for Absolute Zero.","bf316904":"Finally we can fit the model to our data and predict it's results"}}