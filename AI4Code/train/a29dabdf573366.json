{"cell_type":{"d291ab06":"code","6abb3996":"code","e2be21aa":"code","1ddf22ce":"code","d3259f73":"code","d98ad433":"code","cd286a01":"code","64cb0540":"code","ad47f82b":"code","477620f3":"code","573e1ab2":"code","bec71f1f":"code","51351442":"code","5c644458":"code","f88966db":"code","c1c35939":"code","977d9250":"code","972f9c8f":"code","9afbc4c0":"code","ef6278ec":"code","befacc57":"code","ead33511":"code","f4d53693":"code","bcfa7b2a":"code","997de7b3":"code","2c1b8b71":"code","519f6e55":"code","1436a242":"code","050cb01d":"code","c0d1d599":"code","e991f095":"code","f9991e57":"code","bc7b6e03":"code","d9665cf4":"code","9073b5a4":"code","5b0a44dc":"code","b911a750":"code","fb8ec09d":"code","aa5b5fca":"markdown","4ce41635":"markdown","c6db0ac7":"markdown","1b62a20e":"markdown","ae0bae88":"markdown","a2b528f9":"markdown","5e580c5d":"markdown","51e75001":"markdown","de9fb502":"markdown","35f9aa6f":"markdown","169eae5f":"markdown","ed7f90c1":"markdown","d7960d54":"markdown","cb2eeb57":"markdown","708eac36":"markdown","3c4ed395":"markdown","acb35bcd":"markdown","c83d8928":"markdown","738700de":"markdown","af58715e":"markdown","8d8192df":"markdown","371475b0":"markdown","b661eab3":"markdown"},"source":{"d291ab06":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6abb3996":"data=pd.read_csv(\"\/kaggle\/input\/sloan-digital-sky-survey\/Skyserver_SQL2_27_2018 6_51_39 PM.csv\")\ndata.head()","e2be21aa":"%matplotlib inline\nimport seaborn as sns\nimport matplotlib.pyplot as plt","1ddf22ce":"sns.countplot(data=data,x=\"class\")","d3259f73":"sns.countplot(data=data,x=\"rerun\") ","d98ad433":"data[\"rerun\"].groupby(data[\"rerun\"]).count()","cd286a01":"del data[\"rerun\"]","64cb0540":"data.head()","ad47f82b":"data[\"run\"].groupby(data[\"run\"]).count()","477620f3":"data[\"camcol\"].groupby(data[\"camcol\"]).count()","573e1ab2":"data.describe()","bec71f1f":"data.shape","51351442":"y=data[\"class\"]","5c644458":"x=data[data.columns.difference(['class'])]","f88966db":"from sklearn.svm import SVC\nsvm=SVC(kernel=\"linear\")\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nx_scale=sc.fit_transform(x)\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(svm,x_scale,y,cv=5)","c1c35939":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(x_scale, y, test_size=0.35, random_state=142)\nsvm=SVC(kernel=\"linear\")\nsvm.fit(X_train,y_train)\nypred=ypred=svm.predict(X_test)\nimport sklearn.metrics as metr\nprint(metr.confusion_matrix(y_pred=ypred,y_true=y_test))\nprint(metr.accuracy_score(y_pred=ypred,y_true=y_test))\nprint(metr.classification_report(y_pred=ypred,y_true=y_test))","977d9250":"from sklearn.manifold import TSNE\nx_visu=TSNE(n_components=2).fit_transform(x_scale)","972f9c8f":"x_visuframe=pd.DataFrame(x_visu)\nx_visuframe.columns=[\"bir\",\"iki\"]\nx_visuframe.head()","9afbc4c0":"sns.relplot(data=x_visuframe,x=\"bir\",y=\"iki\",hue=y)","ef6278ec":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nlda = LinearDiscriminantAnalysis()\nx_scale_lda=lda.fit_transform(x_scale,y)","befacc57":"x_visuframelda=pd.DataFrame(x_scale_lda)\nx_visuframelda.columns=[\"bir\",\"iki\"]\nx_visuframelda.head()","ead33511":"sns.relplot(data=x_visuframelda,x=\"bir\",y=\"iki\",hue=y)","f4d53693":"lda = LinearDiscriminantAnalysis()\nx_lda=lda.fit_transform(x,y)\nx_ldaframe=pd.DataFrame(x_lda)\nx_ldaframe.columns=[\"bir\",\"iki\"]\nsns.relplot(data=x_ldaframe,x=\"bir\",y=\"iki\",hue=y)","bcfa7b2a":"correlation=x.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","997de7b3":"xnew=x[x.columns.difference(['i','r'])]\nxnew.head()","2c1b8b71":"x.columns","519f6e55":"correlation=xnew.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","1436a242":"xnew2=x[x.columns.difference(['mjd','g'])]\nxnew2.head()","050cb01d":"lda = LinearDiscriminantAnalysis()\nx_lda=lda.fit_transform(xnew2,y)\nx_ldaframe=pd.DataFrame(x_lda)\nx_ldaframe.columns=[\"bir\",\"iki\"]\nsns.relplot(data=x_ldaframe,x=\"bir\",y=\"iki\",hue=y)","c0d1d599":"xnew2","e991f095":"correlation=xnew2.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","f9991e57":"xnew3=x[x.columns.difference([\"z\",\"i\"])]\nxnew3.head()","bc7b6e03":"lda = LinearDiscriminantAnalysis()\nx_lda=lda.fit_transform(xnew3,y)\nx_ldaframe=pd.DataFrame(x_lda)\nx_ldaframe.columns=[\"bir\",\"iki\"]\nsns.relplot(data=x_ldaframe,x=\"bir\",y=\"iki\",hue=y)","d9665cf4":"correlation=xnew3.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","9073b5a4":"xnew4=xnew3[x.columns.difference([\"z\",\"i\"])]\nxnew3.head()","5b0a44dc":"correlation=xnew4.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","b911a750":"xnew5=xnew4[xnew4.columns.difference([\"mjd\",\"r\",\"plate\"])]\ncorrelation=xnew5.corr()\nplt.figure(figsize=(16, 16))\nsns.heatmap(correlation,annot=True)","fb8ec09d":"lda = LinearDiscriminantAnalysis()\nx_lda=lda.fit_transform(xnew5,y)\nx_ldaframe=pd.DataFrame(x_lda)\nx_ldaframe.columns=[\"bir\",\"iki\"]\nsns.relplot(data=x_ldaframe,x=\"bir\",y=\"iki\",hue=y)","aa5b5fca":"It looks QSO and STARS is slearly separable and Galaxy is beetween these 2. \u0130t's interesting. ","4ce41635":"What if we can't use scalar:","c6db0ac7":"delete i and r columns  and I thing it's solved.","1b62a20e":"Can't work as expected. Howewer some island is very clear. ","ae0bae88":"\u0130t's worked excellent. This Dataset is linearly separable.","a2b528f9":"Camcol has also some value.","5e580c5d":"Now We visualize these Dataset with T-SNE","51e75001":"Maybe we delete CoLinear Variable and work just fine. ","de9fb502":"Okay first we examine LinearSVM with all features.","35f9aa6f":"Interesting maybe rerun have only 1 value or not we have to examine it. ","169eae5f":"1 more example with train test split. ","ed7f90c1":"also delete mjd and g. it's the final result.","d7960d54":"Okay lastly delete z and i ","cb2eeb57":"Okay we delete rerun column","708eac36":"### This data is this. :) :)","3c4ed395":"Okay it's just fine. This is last ","acb35bcd":"Run has values can't like rerun","c83d8928":"Last Last delete g and r","738700de":"Now We see LDA's performance.","af58715e":"\u0130t's worked just fine. ","8d8192df":"g and i and r and z is colinear.","371475b0":"Can't see any difference between unscaled version. ","b661eab3":"Also 0 missing values is occur in this dataset."}}