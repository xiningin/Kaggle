{"cell_type":{"a88e7c3e":"code","a385ee69":"code","bf6448c0":"code","497e0c17":"code","5094f847":"code","b4547f6d":"code","3f2f7cad":"code","fae6a02c":"code","7a36345b":"code","9d109041":"code","9c425183":"code","c908969a":"code","f27c1d39":"code","4d057f3a":"code","9e7f4f86":"code","3bd92cb0":"code","eaf30aa4":"code","a53df1e4":"code","20fd3788":"code","4fc312e5":"code","a23c5868":"code","1fe844ba":"code","45eb1391":"code","42aa6340":"code","2f97c14e":"code","23e26446":"code","0e494803":"code","3b9e5aa4":"code","060cef37":"code","3e800058":"code","edef5880":"code","16a280e7":"code","9aca51b5":"code","bfe4b792":"code","49dc5d97":"code","29f767ad":"code","f7f819d5":"code","e31b9578":"code","524d92d3":"code","79450be4":"code","1d3645ca":"code","497f9755":"code","cda426bc":"code","e297f281":"code","8e669d31":"code","1e1d6a64":"code","50b5840c":"markdown","a4447bf4":"markdown","4ea73148":"markdown","67c17c47":"markdown","f2d2c302":"markdown","ae96b6be":"markdown","77c9497c":"markdown","dff4f9c2":"markdown","a6cfff0e":"markdown","0fd021b6":"markdown","722d01af":"markdown","5d774478":"markdown","b257fcb7":"markdown","4f03338b":"markdown","e7650146":"markdown","755a51f2":"markdown","18d8ff83":"markdown","715cb80c":"markdown","41c7d656":"markdown","b9fe15f5":"markdown","ab3c58e5":"markdown","a9c4da5a":"markdown"},"source":{"a88e7c3e":"import numpy as np\nimport pandas as pd\n\n%precision 3\npd.set_option('precision', 3)    # \ub370\uc774\ud130\ud504\ub808\uc784 \uc18c\uc22b\uc810 \uc790\ub9bf\uc218 \uc81c\ud55c","a385ee69":"df = pd.read_csv('..\/input\/scores-em\/ch2_scores_em.csv',\n                index_col='student number')\ndf.head()","bf6448c0":"scores = np.array(df['english'])[:10]   # 10\uba85\uae4c\uc9c0\uc758 \uc601\uc5b4\uacfc\ubaa9 \uc810\uc218 \ubc30\uc5f4\nscores","497e0c17":"scores_df = pd.DataFrame({'score':scores},\n                        index=pd.Index(['A', 'B', 'C', 'D', 'E',\n                                       'F', 'G', 'H', 'I', 'J'],\n                                      name='student'))\nscores_df","5094f847":"sum(scores) \/ len(scores)    # \ud30c\uc774\uc36c \ud3c9\uade0\uad6c\ud558\uae30","b4547f6d":"np.mean(scores)    # \ub118\ud30c\uc774 \ud3c9\uade0","3f2f7cad":"scores_df.mean()    # \ub370\uc774\ud130\ud504\ub808\uc784 \ud3c9\uade0","fae6a02c":"sorted_scores = np.sort(scores)    # sort \uc774\uc6a9 \uc815\ub82c \uba3c\uc800\nsorted_scores","7a36345b":"n = len(sorted_scores)\nif n % 2 == 0:                   # \uc911\uac04 2\uac1c\uc758 \uac12\uc758 \ud3c9\uade0 \uad6c\ud558\uae30\n    m0 = sorted_scores[n\/\/2 -1]\n    m1 = sorted_scores[n\/\/2]\n    median = (m0 + m1) \/ 2\nelse:\n    median = sorted_scores[(n+1)\/\/2-1]   # \ud640\uc218\uc77c\ub54c\n    \nmedian","9d109041":"np.median(scores)   # \ub118\ud30c\uc774\uc758 \ub9e4\uc11c\ub4dc \ud65c\uc6a9 : median()","9c425183":"scores_df.median()   # \ub370\uc774\ud130\ud504\ub808\uc784 median()","c908969a":"pd.Series([1, 1, 1, 2, 2, 3]).mode()   # \ucd5c\ube48\uac12\uc774 \ud558\ub098\uc778 \uacbd\uc6b0","f27c1d39":"pd.Series([1, 2, 3, 4, 5]).mode()    # \ucd5c\ube48\uac12\uc774 \uc5ec\ub7ec\uac1c\uc778 \uacbd\uc6b0","4d057f3a":"mean = np.mean(scores)\ndeviation = scores - mean\ndeviation","9e7f4f86":"another_scores = [50, 60, 58, 54, 51, 56, 57, 53, 52, 59]\nanother_mean = np.mean(another_scores)\nanother_deviation = another_scores - another_mean\nanother_deviation","3bd92cb0":"np.mean(deviation)    # \ud3b8\ucc28\uc758 \ud3c9\uade0 = 0","eaf30aa4":"np.mean(another_deviation)","a53df1e4":"summary_df = scores_df.copy()\nsummary_df['deviation'] = deviation\nsummary_df","20fd3788":"summary_df.mean()","4fc312e5":"np.mean(deviation ** 2)  # \ubd84\uc0b0 = \ud3b8\ucc28\uc758 \uc81c\uacf1\uc758 \ud3c9\uade0","a23c5868":"np.var(scores)   # \ubd84\uc0b0 : \ub118\ud30c\uc774 \ub9e4\uc11c\ub4dc","1fe844ba":"scores_df.var()","45eb1391":"summary_df['square of deviation'] = np.square(deviation)\nsummary_df","42aa6340":"summary_df.mean()","2f97c14e":"np.sqrt(np.var(scores, ddof=0))   # ddof : \uc790\uc720\ub3c4   ddof=0 : \uc790\uc720\ub3c4\uac00 \uad00\uce21\uce58\uc640 \ub3d9\uc77c","23e26446":"np.std(scores, ddof=0)","0e494803":"np.max(scores) - np.min(scores)    # \ucd5c\ub300\uce58 - \ucd5c\uc18c\uce58","3b9e5aa4":"scores_Q1 = np.percentile(scores, 25)\nscores_Q3 = np.percentile(scores, 75)\nscores_IQR = scores_Q3 - scores_Q1\nscores_IQR","060cef37":"pd.Series(scores).describe()","3e800058":"z = (scores - np.mean(scores)) \/ np.std(scores)    # z : \uc790\uc720\ub3c4\nz","edef5880":"np.mean(z), np.std(z, ddof=0)","16a280e7":"z = 50 + 10 * (scores - np.mean(scores)) \/ np.std(scores)   # z \uac12\uc5d0 10\uc744 \uacf1\ud558\uace0 50\uc744 \ub354\ud568 : z \ub294 \ud3c9\uade0\uc774 0, 50\uc744 \ub354\ud574 \ud3c9\uade0\uc744 50\uc73c\ub85c \ub9cc\ub4e6, z \uac12\uc774 \ubbf8\uc138\ud558\uc5ec 10\uc744 \uacf1\ud568\nz","9aca51b5":"scores_df['deviation value'] = z\nscores_df","bfe4b792":"english_scores = np.array(df['english'])\npd.Series(english_scores).describe()","49dc5d97":"freq, _ = np.histogram(english_scores, bins=10, range=(0, 100))    # freq : \ub3c4\uc218 \uacc4\uc0b0,  bins \uacc4\uae09\uc758 \uac2f\uc218 \uc9c0\uc815\nfreq","29f767ad":"freq_class = [f'{i}~{i+10}' for i in range(0, 100,10)]   # i+10 : 100 \uae4c\uc9c0 \ub098\uc624\ub3c4\ub85d\nfreq_dist_df = pd.DataFrame({'frequency':freq},\n                           index=pd.Index(freq_class,\n                                         name='class'))  # class \ub97c \uc778\ub371\uc2a4\ub85c df \uc0dd\uc131\nfreq_dist_df","f7f819d5":"class_value = [(i+(i+10))\/\/2 for i in range(0, 100, 10)]   # \uacc4\uae09\uac12\nclass_value","e31b9578":"rel_freq = freq \/ freq.sum()    # \uc0c1\ub300\ub3c4\uc218\nrel_freq","524d92d3":"cum_rel_freq = np.cumsum(rel_freq)    # \ub204\uc801 \uc0c1\ub300\ub3c4\uc218\ncum_rel_freq","79450be4":"freq_dist_df['class value'] = class_value\nfreq_dist_df['relative frequency'] = rel_freq\nfreq_dist_df['cumulative relative frequency'] = cum_rel_freq\n\nfreq_dist_df = freq_dist_df[['class value', 'frequency',\n                            'relative frequency', 'cumulative relative frequency']]    # \uacc4\uae09\uac12, \ub3c4\uc218, \uc0c1\ub300\ub3c4\uc218, \ub204\uc801 \uc0c1\ub300\ub3c4\uc218\nfreq_dist_df","1d3645ca":"freq_dist_df.loc[freq_dist_df['frequency'].idxmax(), 'class value']   # frequency \uc5f4\uc911 \ucd5c\ub300\uce58\uc5d0 \ud574\ub2f9\ud558\ub294 \ud589\uc758 class value \ucd9c\ub825\n","497f9755":"import matplotlib.pyplot as plt\n%matplotlib inline","cda426bc":"fig = plt.figure(figsize=(10, 6))\n\nax = fig.add_subplot(221)   # 2*2 \uc601\uc5ed\uc911 1\uc0c1\uc548\uc5d0 \uadf8\ub9bc\nay = fig.add_subplot(224)   # 2*2 \uc601\uc5ed\uc911 4\uc0c1\uc548\uc5d0 \uadf8\ub9bc\n\nfreq, _, _ = ax.hist(english_scores, bins=10, range=(0, 100))   # \uccab\ubc88\uc9f8 freq \uc5d0 \ub300\ud55c\uac83\ub9cc \uc4f0\uaca0\ub2e4\n\nax.set_xlabel('score')\nay.set_xlabel('test1')\n\nax.set_ylabel('person number')\nay.set_ylabel('test2')\n\nax.set_xticks(np.linspace(0, 100, 10+1))    #0~100 \uae4c\uc9c0 10 \ub2e8\uc704\uc758 \ub208\uae08 \ud45c\uc2dc\nay.set_xticks(np.linspace(0, 100, 10+1))\n\nax.set_yticks(np.arange(0, freq.max()+1))\nay.set_yticks(np.arange(0, freq.max()+1))\n\nplt.show()","e297f281":"fig = plt.figure(figsize=(10, 6))\nax = fig.add_subplot(111)\n\nfreq, _ , _ = ax.hist(english_scores, bins=25, range=(0, 100))\n\nax.set_xlabel('score')\nax.set_ylabel('person number')\nax.set_xticks(np.linspace(0, 100, 25+1))   # \ub208\uae08 \uac1c\uc218\nax.set_yticks(np.arange(0, freq.max()+1))   # \ucd5c\ub300\uce58 \uac12\ubcf4\ub2e4 1 \ucd94\uac00\ud558\uc5ec \nplt.show()","8e669d31":"fig = plt.figure(figsize=(10,6))\nax1 = fig.add_subplot(111)\n\nax2 = ax1.twinx()\n\na = len(english_scores)\nweights = np.ones_like(english_scores) \/ len(english_scores)\nrel_freq, _, _ = ax1.hist(english_scores, bins=25,\n                         range=(0,100), weights=weights)\ncum_rel_freq = np.cumsum(rel_freq)\n\nclass_value = [(i + (i+4))\/\/2 for i in range(0, 100, 4)]\n\nax2.plot(class_value, cum_rel_freq,\n        ls='--', marker='o', color='gray')\n\nax1.set_xlabel('score')\nax1.set_ylabel('relative frequency')\nax2.set_ylabel('cumulative relative frequency')\nax1.set_xticks(np.linspace(0, 100, 25+1))\n\nplt.show()","1e1d6a64":"fig = plt.figure(figsize=(5,6))\nax = fig.add_subplot(111)\n\nax.boxplot(english_scores, labels=['english'])\nplt.show()","50b5840c":"## [\ub370\uc774\ud130 \uc911\uc2ec\uc758 \uc9c0\ud45c]","a4447bf4":"## [\ub370\uc774\ud130\uc758 \uc2dc\uac01\ud654]","4ea73148":"### \ub3c4\uc218\ubd84\ud3ec\ud45c","67c17c47":"### \ud3b8\ucc28","f2d2c302":"### \uaebe\uc740\uc120 \uadf8\ub798\ud504","ae96b6be":"## \ubc94\uc704\uc640 4\ubd84\uc704\uc218 \ubc94\uc704","77c9497c":"### \ud3b8\ucc28\uac12","dff4f9c2":"### \ucd5c\ube48\uac12","a6cfff0e":"### \ubc94\uc704","0fd021b6":"### \ud788\uc2a4\ud1a0\uadf8\ub7a8","722d01af":"### 4\ubd84\uc704\uc218 \ubc94\uc704","5d774478":"### \uc911\uc559\uac12","b257fcb7":"### \ud45c\uc900\ud654","4f03338b":"## [\ub370\uc774\ud130\uc758 \uc815\uaddc\ud654]","e7650146":"## [\ub370\uc774\ud130\uc758 \uc0b0\ud3ec\ub3c4 \uc9c0\ud45c]","755a51f2":"### \ud45c\uc900\ud3b8\ucc28","18d8ff83":"## \ubd84\uc0b0\uacfc \ud45c\uc900\ud3b8\ucc28","715cb80c":"### \ubd84\uc0b0","41c7d656":"### \ud3c9\uade0\uac12","b9fe15f5":"## \ub370\uc774\ud130\uc758 \uc9c0\ud45c \uc815\ub9ac","ab3c58e5":"# 1\ucc28\uc6d0 \ub370\uc774\ud130\uc758 \uc815\ub9ac","a9c4da5a":"### \uc0c1\uc790\uadf8\ub9bc (Boxplot)"}}