{"cell_type":{"814b4cc1":"code","71572163":"code","68be75fc":"code","926021c4":"code","ad742099":"code","7cabb177":"code","1a6efbf7":"code","258e05b4":"code","ab5b0e87":"code","c6320141":"code","95e2af82":"code","4c192c20":"code","62168985":"code","18d51cf0":"code","0acb1db3":"code","09e02a9a":"code","46765f6b":"code","1b036394":"code","281889e7":"code","b3e6c035":"code","4b434ec1":"markdown","bc8db7bd":"markdown"},"source":{"814b4cc1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","71572163":"data = pd.read_csv('..\/input\/data.csv')","68be75fc":"data.keys()","926021c4":"len(data.keys())","ad742099":"data.isnull().sum()","7cabb177":"drop_columns = ['Unnamed: 32','id']\ndata = data.drop(drop_columns, axis=1)","1a6efbf7":"data.shape","258e05b4":"data.head()","ab5b0e87":"data['diagnosis'] = data['diagnosis'].map({'M': 1, 'B': 0})\ndata.head()","c6320141":"data['diagnosis'].value_counts()","95e2af82":"labels = ['Benign','Malignant']\nclasses = pd.value_counts(data['diagnosis'], sort = True)\nclasses.plot(kind = 'bar', rot=0)\nplt.title(\"Transaction class distribution\")\nplt.xticks(range(2), labels)\nplt.xlabel(\"Class\")\nplt.ylabel(\"Frequency\")","4c192c20":"y = pd.DataFrame(data['diagnosis'])\nX = data.drop(['diagnosis'], axis = 1)\n\ny","62168985":"from sklearn.model_selection import train_test_split","18d51cf0":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=5)","0acb1db3":"from sklearn.svm import SVC\nfrom sklearn.metrics import confusion_matrix, classification_report","09e02a9a":"svc_model = SVC()","46765f6b":"svc_model.fit(X_train, y_train)","1b036394":"model_predict = svc_model.predict(X_test)","281889e7":"model_predict","b3e6c035":"cm = confusion_matrix(y_test, model_predict)\n\nsns.heatmap(cm, annot=True)","4b434ec1":"**Spliting Data**","bc8db7bd":"Drop Column"}}