{"cell_type":{"69a2bc63":"code","4c8597a2":"code","98596dc1":"code","80ccc329":"code","386bcc40":"code","05b43f25":"code","1b01f216":"code","e005f542":"code","bbd6cb8b":"code","b01ac259":"code","4298cfcd":"code","710bec65":"code","f0d01daf":"code","3d14f4c5":"code","6ca74f78":"code","2f4063e0":"code","8d376933":"code","87d4edc0":"code","c448b0e3":"code","3bca1e30":"code","3f6e16d3":"code","3fe7f9e8":"code","72a94c43":"code","20f47bc3":"code","bb976def":"code","7b5dc89d":"code","02c9a798":"code","c3b0aae3":"code","ebde5919":"code","13c0703a":"code","f05bc8a6":"code","dcef91c4":"code","0d2cb93f":"code","c8e3349a":"code","edaf6147":"code","f8f4264c":"code","e5a2dd4a":"code","90304c41":"code","b8aea8af":"code","ddde5e93":"code","3e57ceeb":"code","8105b0ab":"code","e26fcd06":"code","82c6aa17":"code","b3ef51c2":"code","0fa96f69":"markdown","58cb5f30":"markdown","7c3c0865":"markdown","20f62da1":"markdown","6a484731":"markdown","fa54f4a8":"markdown","101d4daa":"markdown","7bc84507":"markdown","78b98a51":"markdown","3349c47b":"markdown","fd87220d":"markdown","ca16d14d":"markdown","d9971373":"markdown","ea986aef":"markdown","4b395f42":"markdown","58a7f3b9":"markdown","8f53ee48":"markdown","548aa6b8":"markdown","dd2c2035":"markdown","7dd26671":"markdown","611ec24a":"markdown","f7179770":"markdown","0ed6ca37":"markdown","d3f543f5":"markdown","aff897e4":"markdown","312ae99e":"markdown","be20bb38":"markdown","262e295b":"markdown","5fa1be2e":"markdown","c823b3b7":"markdown","ee305528":"markdown","bd5ded38":"markdown","e9f5cd01":"markdown","f26574a8":"markdown"},"source":{"69a2bc63":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4c8597a2":"import pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport numpy as np\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n\nfrom scipy import stats\nfrom scipy.stats import skew","98596dc1":"#load train data\ntrain_df = pd.read_csv('..\/input\/titanic\/train.csv')\ntest_df = pd.read_csv('..\/input\/titanic\/test.csv')\n#create a new column 'Is_train' to differentiate the training data from the testing data, 1 = training, 0 = testing\ntrain_df['Is_train'] = 1\ntest_df['Is_train'] = 0\n#create the 'Survived' column filled with null values in the testing data\n#so as to share the same columns as the training data\ntest_df['Survived'] = np.nan\n#combine the trainning data and testing data\nfull_df = pd.concat([train_df, test_df], ignore_index=True)\n# delete the two dataframes which are no longer needed\ndel train_df, test_df\n#show the first and last rows of the combined data\ndisplay(full_df.head())\nfull_df.tail()","80ccc329":"#fix the data errors according to \n#show the original records\nindices = [279, 746, 1283, 987, 1188, 48, 920, 13, 610, 119, 541, 542, 813, 850, 68, 1105, 736, 436, 1058, 86, 147]\nfull_df.iloc[indices, :]","386bcc40":"#fix the errors and fill in the missing age values for the Sammann family\nfull_df.loc[279, ['SibSp', 'Parch']]= 0, 2\nfull_df.loc[1283, ['SibSp', 'Parch']] = 1, 1\nfull_df.loc[987, 'Age'] = 26\nfull_df.loc[1188, ['Age', 'SibSp', 'Parch']] = 40, 0, 2\nfull_df.loc[48, ['Age', 'SibSp', 'Parch']] = 16, 1, 1\nfull_df.loc[920, ['Age', 'SibSp', 'Parch']] = 18, 1, 1\nfull_df.loc[68, ['SibSp', 'Parch']] = 0, 0\nfull_df.loc[1105, ['SibSp', 'Parch']] = 0, 0\nfull_df.loc[736, ['SibSp', 'Parch']] = 0, 4\nfull_df.loc[[436, 1058, 86, 147], ['SibSp', 'Parch']] = 3, 1","05b43f25":"#sanity check\nfull_df.iloc[indices, :]","1b01f216":"#Two more errors were found during my deep analysis of fare variable\nfull_df.loc[[451, 490], 'Fare'] = 6.9667","e005f542":"#visualize the data distributions of categorical variables\ndef plot_histogram(col_name, df=full_df, bins=None):\n    plt.hist(df[col_name].dropna(), bins)\n    plt.title('Distribution of {}'.format(col_name))\n    plt.xlabel(col_name)\n    plt.ylabel('Number')\n    plt.show()","bbd6cb8b":"def compare_bars(col_name, df=full_df):\n    df[df.Survived==1][col_name].dropna().\\\n    value_counts(normalize=False).plot(kind='bar', color='#008fd5', alpha=0.5, label='survived')\n    df[df.Survived==0][col_name].dropna().\\\n    value_counts(normalize=False).plot(kind='bar', color='#fc4f30', alpha=0.5, label='not survived')\n    plt.xticks(rotation=0)\n    plt.title('Bar of {}'.format(col_name))\n    plt.xlabel(col_name)\n    plt.ylabel('Number')\n    plt.legend(loc='upper right')\n    plt.show()","b01ac259":"def stack_bar(col_name, df=full_df):\n    pd.crosstab(df[col_name], df['Survived']).plot(kind='bar', stacked=True, title='Survived by {}'.format(col_name))\n    plt.xticks(rotation=0)\n    pd.crosstab(df[col_name], df['Survived'], normalize='index').\\\n    plot(kind='bar', stacked=True,title='Survived by {} (%)'.format(col_name))\n    plt.xticks(rotation=0)","4298cfcd":"def compare_hists(col_name, bins=None, df=full_df):\n    plt.hist(df[df.Survived==1][col_name].dropna(), bins=bins, density=False, label='survived', alpha=0.5)\n    plt.hist(df[df.Survived==0][col_name].dropna(), bins=bins, density=False, label='not survived',alpha=0.5)\n    plt.title('Histograms of {}'.format(col_name))\n    plt.xlabel(col_name)\n    plt.ylabel('Number')\n    plt.legend(loc='upper right')\n    plt.show()","710bec65":"#overview (number of samples and columns, column names, data types, the number of null values)\nfull_df.info()","f0d01daf":"isnull_sum = full_df.isnull().sum()\nisnull_df = pd.concat([isnull_sum, round(isnull_sum\/len(full_df)*100)], axis=1)\nisnull_df.columns = ['Number', 'Percentage(%)']\nisnull_df","3d14f4c5":"#summary statistics (check data scales and any signs of incorrect values or outliers)\nfull_df.describe()","6ca74f78":"print('Number of zero-fare tickets:', sum(full_df.Fare==0))","2f4063e0":"full_df[full_df.Fare==0].sort_values(by='Pclass')","8d376933":"#check the number of unique values of each columns\nunique_counts = pd.DataFrame.from_records([(col, full_df[col].nunique()) for col in full_df.columns], columns=['Column_Name', 'Num_Unique']).\\\n                sort_values(by='Num_Unique')\nunique_counts","87d4edc0":"#list the names of the numerical variables\ncols_num = ['Age', 'SibSp', 'Parch', 'Fare']","c448b0e3":"for col in cols_num:\n    skewness = skew(full_df[col].dropna())\n    print('Skewness of {}: {}'.format(col, round(skewness,1)))","3bca1e30":"#check the distribution of numerical variables\nplot_histogram('Age', bins=np.arange(0, 90, 10))","3f6e16d3":"plot_histogram('SibSp', bins=np.arange(0,9,1))","3fe7f9e8":"plot_histogram('Parch', bins=np.arange(0, 7, 1))","72a94c43":"plot_histogram('Fare')","20f47bc3":"sns.boxplot(x='Pclass', y='Fare', data=full_df.dropna(subset=['Pclass', 'Fare']));","bb976def":"#obtain descriptive statistics of fares at different pclasses\nfares_by_pclasses = {}\nfor i in range(1,4):\n    fares_by_pclasses[i]=full_df.loc[full_df.Pclass==i, 'Fare'].describe()\n    \nfares_by_pclasses_df = pd.concat([v[1] for v in fares_by_pclasses.items()], axis=1)\nfares_by_pclasses_df.columns=['Pclass ' + str(i) for i in range(1, 4)]\nprint(\"Fares' distribution in each Pclass:\")\ndisplay(fares_by_pclasses_df)","7b5dc89d":"#List the names of the categorical columns which have fewer than 10 categories\ncols_few_cat = ['Survived', 'Pclass', 'Sex', 'Embarked']\n#List the names of the categorical columns which have more than 10 categories but fewer than 891 categories\ncols_many_cat= ['Ticket', 'Cabin']","02c9a798":"#List the value percentages of the categorical columns which have only a few categories\nfor col in cols_few_cat:\n    print('Column Name:', col)\n    print(full_df[col].value_counts(normalize=True))\n    print('')","c3b0aae3":"#check for duplicated values, this 'value' means the number of samples sharing the same value, \nfor col in cols_many_cat:\n    value_counts = full_df[col].value_counts()\n    duplicated_value_counts = value_counts.value_counts()\n    duplicated_value_counts_df = duplicated_value_counts.to_frame()\n    duplicated_value_counts_df.reset_index(inplace=True)\n    duplicated_value_counts_df.rename(columns={'index': 'number of duplicated samples per uniuqe value', col: 'number of unique values'}, \\\n                                     inplace=True)\n    print('Duplicated value counts of {}'.format(col))\n    print(duplicated_value_counts_df)\n    print('')","ebde5919":"#compare the variation of variable values (median) by Survived\npd.pivot_table(full_df, index='Survived', values=cols_num, aggfunc=np.median)","13c0703a":"#check the median values of the passengers whose ticket numbers were unique\n#firstly group the records by ticket numbers and count each groups\nticket_group_sizes = full_df.groupby('Ticket').size()\n\n#secondly create a new feature 'Ticket_group_size'    \nfull_df['Ticket_group_size'] = full_df['Ticket'].apply(lambda x: ticket_group_sizes[x])\npd.pivot_table(full_df[full_df.Ticket_group_size==1], index='Survived', \\\n               values=['Fare'], aggfunc=np.median)","f05bc8a6":"compare_hists('Age', bins=np.arange(0, 90, 5))","dcef91c4":"compare_hists('Fare', bins=np.arange(0, 600, 20), df=full_df)","0d2cb93f":"#half of the passengers shared the fares with some other(s)\n#only the non-sharing records are selected for this comparison\ncompare_hists('Fare', bins=np.arange(0, 60, 5), df=full_df[full_df.Ticket_group_size==1])","c8e3349a":"stack_bar('Parch')","edaf6147":"#sample sizes of different parches\nfull_df.Parch.value_counts()","f8f4264c":"stack_bar('SibSp')","e5a2dd4a":"#sample size sof differnt SibSp values\nfull_df.SibSp.value_counts()","90304c41":"#Check the categorical variables with only a few unique values\nfor col in cols_few_cat[1:]:\n    table = pd.pivot_table(full_df, index='Survived', columns=col, values='PassengerId', aggfunc='count', margins=True)\n    print('Survival rates (%) varied by {}:'.format(col))\n    display(round(100*table.iloc[[1], :-1].div(table.iloc[-1, :-1], axis=1)))\n    print('')","b8aea8af":"stack_bar('Pclass')","ddde5e93":"stack_bar('Sex')","3e57ceeb":"stack_bar('Embarked')","8105b0ab":"#map the sex values to 0 and 1, and create a new column 'Is_female'\nfull_df['Is_female'] = full_df['Sex'].map({'female': 1, 'male': 0})\nfull_df.drop('Sex',axis=1,inplace=True)\nfeatures = ['Survived', 'Pclass', 'Is_female', 'Age', 'SibSp', 'Parch', 'Fare']\ncorr_spearman = full_df[features].corr(method='spearman')['Survived']\ncorr_spearman","e26fcd06":"#use heatmap for visualization and choose contrast colors for a more clear view\ndisplay(round(full_df[features].corr(method='spearman'), 2))\nsns.heatmap(full_df[features].corr(method='spearman'), cmap=\"PiYG\");","82c6aa17":"#check the correlation between Fare and Pclass after removing the records containing the shared ticket numbers\ntickets_not_shared = full_df[full_df.Ticket_group_size==1]\nround(tickets_not_shared[['Fare', 'Pclass']].corr(method='spearman').iloc[0,1], 2)","b3ef51c2":"#analyze the survival rates across sex and pclass\nsns.barplot(x='Pclass', hue= 'Is_female', y='Survived', data=full_df);","0fa96f69":"### My functions","58cb5f30":"## Review challenge description","7c3c0865":"#### Categorical columns which have many categories","20f62da1":"**Finding:**  \nVery few passengers had 3 or more (max 6) accompanying parches (short for parents and children). Due to their small sample size (each <10), their survival rates are more susceptible to randomness and may not represent the underlying distribution.   \nThe passengers with 1 or 2 parch(es) had much higher survival rates than those without any.","6a484731":"### Load libraries, packages and modules","fa54f4a8":"**Finding:**  \nAmong the passengers who did not share the fares, those with fares below 10 had much lower survival rates than the rest.","101d4daa":"**Finding & analysis on the summary statistics:**\n\nThe data scales of Age and Fare are much bigger than those of the rest numerical variables. The machine-learnig algorithms based on the distance measurements or gradient descent are quite sensitive to the scales, so rescaling is necessary. For tree-based algorithms, scaling is not necessary.\n\nThe minimum fare is zero, involving 17 tickets.It may indicate free tickets or missing values. [Tammy]( https:\/\/www.kaggle.com\/c\/titanic\/discussion\/10570) found the evidence about the complimentary ticket for John George. As not any evidence was found about the missing fare data marked as 0, I interpreted the value 0 as it is (free ticket).  \n\nThe maximum fare is 512, much higher than the median. Are there any outliers? It will be further analyzed in [Data distribution of numerical variables](#Data-distribution-of-numerical-variables)","7bc84507":"**Finding:**   \nBased on the description and [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Lifeboats_of_the_Titanic), people's chances of survival basically depend on whether they got to board the lifeboats before titanic sank.","78b98a51":"#### Check how survival rates vary with the numerical variables","3349c47b":"## Table of Contents\n1. Review challenge description\n2. Load packages, modules, data and functions   \n    2.1 Load libraries, packages and modules   \n    2.2 Load the two datasets and combine them   \n    2.3  Fix some data errors and fill in a couple of missing age values   \n    2.4  My functions   \n3. Understand the variables   \n    3.1  Overview   \n    3.2  Data distribution of numerical variables   \n    3.3  Data distribution of categorical variables   \n        3.3.1  Categorical columns which have only a few categories\n        3.3.2  Categorical columns which have many categories   \n    3.4  Check the relationship between Survived and other variables   \n        3.4.1  Check how survival rates vary with the numerical variables   \n        3.4.2  Check how survival rates vary with the categorical variables   \n        3.4.3  Correlation between variables   ","fd87220d":"### Load the two datasets and combine them\nThe relationship (family member, wife-husband, child-parent, etc.) among passengers is a potential influential factor for the survival rate. For its analysis, the data of all the passengers needs to put together. So the training data and the testing data will be combined.","ca16d14d":"### Data distribution of numerical variables","d9971373":"**Finding:**  \nThe passengers under 15 (esp under 5) had much higher survival rates than the rest.  \nVery few passengers over 65 survived.\n\nThis is consistent with \"Women and Children first\" principle. [Encyclopedia](https:\/\/www.encyclopedia-titanica.org\/community\/threads\/children-on-the-titanic.20096\/) mentions,Titanic's Certificates for Clearance defined **the children as under age 12**, age 12 and upwards were counted as adults.","ea986aef":"## Load packages, modules, data and functions","4b395f42":"**Finding & analysis:**   \nOur full data has 1309 records, one for each passenger. According to [WIKIPEDIA](https:\/\/en.wikipedia.org\/wiki\/Passengers_of_the_Titanic) and [HISTORY ON THE NET](https:\/\/www.historyonthenet.com\/how-many-people-were-on-the-titanic), the total number of Titanic's passengers was 1,317 or 1316. So our full data covers 99% of the passenger population, with only 7 or 8 missing records.","58a7f3b9":"**Finding:**  \nColumns (except Survived) with many missing values: Age(260, 20%), Cabin(1014, 77%).  \nColumns with a couple of  missing values: Fare(1), Embarked(2).\nMy detailed analysis of missingness is included in a separate [notebook](https:\/\/www.kaggle.com\/bofangli\/dealing-with-missing-values-part-1-type-analysis). ","8f53ee48":"### Fix some data errors and fill in a couple of missing age values\n\nReferences:   \n[Some SibSp\/Parch values are wrong](https:\/\/www.kaggle.com\/c\/titanic\/discussion\/39787)   \n[Miss Erna Alexandra Andersson](https:\/\/www.encyclopedia-titanica.org\/titanic-survivor\/erna-andersson.html)   \n[Miss Ida Augusta Margareta Andersson](https:\/\/www.encyclopedia-titanica.org\/titanic-victim\/ida-augusta-margareta-andersson.html)","548aa6b8":"**Finding and analysis**  \nThe top 3 most related variables for Survived: Is_female (0.54), Pclass (-0.33), Fare (0.32).\nAmong these three, Pclass and Fare are strongly correlated (-0.71).Excluding the records containing the shared ticket values, their correlation got stronger (-0.77).  \nAmong all the variables, Age has the most weak correlation with Survived (-0.05), indicating very weak monotonic relationship.This doesn't necessarily mean that the passengers of different ages had the same survival rate. The above analysis shows that the children had a much higher survival rate and the elderly had a much lower survival rates.","dd2c2035":"## Understand the variables","7dd26671":"**Finding and analysis of categorical variables and fare-sharing:**  \nThe victims were twice as many as the survivors. Clearly, this is an imbalanced classfication task.  \nThe istributions of 'Pclass', 'Sex', 'Embarked' are also imbalanced.\n\n'Cabin' and 'Ticket' have several hundreds of categories. Many of them only appear in one sample record.Some cabins accomodated more than one passengers. It makes sense. What suprised me was that many passengers had the same 'Ticket' numbers and fares. Of the 60 records I checked, according to the names and [encyclopedia-titanic](https:\/\/www.encyclopedia-titanica.org\/), the ticket-sharing passengers may be somehow related (family members, employer & maid & valet, colleagues).The fare values of their records is the total value of all of them. So their fare values are much higher than the others.The detailed analysis of the fare variable is in a separate [notebook](https:\/\/www.kaggle.com\/bofangli\/make-fare-crystal-clear-fare-sharing-zero-fare?scriptVersionId=47733767)","611ec24a":"### Check the relationship between Survived and other variables","f7179770":"### Overview\n<a id='2.1'><\/a>","0ed6ca37":"**Finding:**  \nThe pclass is related with the survival rate, the smaller the pclass value, the higher the survival rates.\nThe sex is very much related with the survival rate. The female had more than triple as high survival rate as the male.\nThe passengers who embarked on C had higher survival rates than those who embarked on S or Q.","d3f543f5":"**Analysis on the distribution of numerical variables:**\n\n'Age': relatively normal.  \n'Sibsp', 'Parch', 'Fare': not normal, right skewed. Replace them with their log, square root or inverse values may help remove the skewness and minimize the extreme values' impact on the algorithms.  \n\nUsually, the fares are much related with the classes. It applied to this case, as confirmed by the correlation analysis in the section [Correlation between variables](#Correlation-between-variables). According to the descriptive statistics, the fare median increases a lot (8->15->60) when the Pclass value decreases (3->2->1).  \nHowever, something unusal was spotted. The fares vary greatly in each class (max\/median 5~9). What's worse, all three pclasses overlapped in the fare range below 100. It will be further analyzed.","aff897e4":"#### Check how survival rates vary with the categorical variables","312ae99e":"**Finding**\n* The majority of the female in pclass 1~2 survived. Half of the female in pclass 3 survived.\n* Nearly 40% of the male in pclass 1 survived. Less than 20% of the male in pclass 2~3 survived.","be20bb38":"The sinking of the Titanic is one of the most infamous shipwrecks in history.\n\nOn April 15, 1912, during her maiden voyage, the widely considered \u201cunsinkable\u201d RMS Titanic sank after colliding with an iceberg. Unfortunately, there weren\u2019t enough lifeboats for everyone onboard, resulting in the death of 1502 out of 2224 passengers and crew.\n\nWhile there was some element of luck involved in surviving, it seems some groups of people were more likely to survive than others.\n\nIn this challenge, we are asked build a predictive model that answers the question: \u201cwhat sorts of people were more likely to survive?\u201d using passenger data (ie name, age, gender, socio-economic class, etc).","262e295b":"### Data distribution of categorical variables","5fa1be2e":"#### Correlation between variables\nAccording to [Pearson Product-Moment Correlation](https:\/\/statistics.laerd.com\/statistical-guides\/pearson-correlation-coefficient-statistical-guide-2.php) and [Spearman's Rank-Order Correlation](https:\/\/statistics.laerd.com\/statistical-guides\/spearmans-rank-order-correlation-statistical-guide-2.php) from Laerd website:   \nPearson Product-Moment Correlation is between two interval or ratio variables which are normally distributed.As all variables but 'Age' fail to meet this requirement, this method is not applicable.  \nInstead, Spearman Rank-Order Correlation method is applicable here for it only requires the variables to be either ordinal, interval or ratio. This method measures the strength and direction of the monotonic relationship between two ranked variables.","c823b3b7":"**Finding:**  \nSome categorical variables have 2 or 3 uniuqe values - 'Survived', 'Sex', 'Pclass', 'Embarked'.  \nThe other categorial variables have over 100 unique values - 'Cabin', 'Ticket', 'PassengerId', 'Name'. Not all the ticket numbers or cabin numbers are unique. ","ee305528":"**Finding:**  \nThe passengersthose with fares below 40 (esp 20) had much lower survival rates than the rest.","bd5ded38":"**Finding:**  \nBetween the survivors and the victims, the median values are close of these numerical variables except for fare.","e9f5cd01":"#### Categorical columns which have only a few categories","f26574a8":"**Finding:**  \nVery few passengers had more than one accompanying sibsp (short for sibling and spouse, max 8). Due to their small sample size (each <40), their survival rates are more susceptible to randomness and may not represent the underlying distribution.  \nThe passengers with one accompanying sibling and spous had much higher survival rates than those who without any."}}