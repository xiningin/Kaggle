{"cell_type":{"4a671d9e":"code","865e6271":"code","f0694800":"code","ee1dc21d":"code","d75475d0":"code","43aea63a":"code","2a77cf61":"code","e988325e":"code","b640acd8":"code","90bb0ad1":"code","6a302bbd":"code","8a84863b":"code","f226b939":"code","1f41dd25":"code","d1515b72":"code","2b96b291":"code","54bcd614":"code","2dbc697c":"code","3ea2ed12":"code","9a1373f3":"code","64d9214a":"code","bd457f29":"code","585c3feb":"code","70832377":"code","08a6b084":"code","bc9057a2":"code","bf81fb9e":"code","e6e8ef17":"markdown"},"source":{"4a671d9e":"# importing train and test data into train_df and test_df dataframes\nimport pandas as pd\ntrain_df = pd.read_csv('..\/input\/train.csv')\ntest_df = pd.read_csv('..\/input\/test.csv')","865e6271":"# dataframe deep copy\ndata = train_df.copy(deep = True)","f0694800":"# dataframe column names\ntrain_df.columns.values","ee1dc21d":"# preview the n first rows of dataframe\ntrain_df.head(n = 4)","d75475d0":"# preview the n last rows of dataframe\ntrain_df.tail(n=7)","43aea63a":"# dataframe types\ntrain_df.info()","2a77cf61":"# dataframe numerical features distribution\ntrain_df.describe()","e988325e":"# dataframe categorical features distribution\ntrain_df.describe(include=['O'])","b640acd8":"# dataframe missing data information\ntrain_df.isnull().sum()","90bb0ad1":"# get table of frequency counts for items in a dataframe column\ntrain_df['Pclass'].value_counts()","6a302bbd":"# get table of frequency counts for items in a dataframe column\ntrain_df['Embarked'].value_counts()","8a84863b":"# rename column in dataframe\nd = train_df.copy(deep = True)\nd.rename(columns = {'Survived':'S'}, inplace = True)\nd.head(1)","f226b939":"# selecting a subset of dataframe\ndf_subset = train_df[(train_df.Age > 50) & (train_df.Pclass == 2)] \ndf_subset.describe()","1f41dd25":"# selecting a subset of dataframe\ndf_subset = train_df[((train_df.Pclass == 1) | (train_df.Pclass == 2)) & (train_df.Survived == 'T')] \ndf_subset.describe()","d1515b72":"# selecting a subset of dataframe by range of indexes and column index\ndf_subset = train_df.iloc[0:100, 5]\ndf_subset.describe()","2b96b291":"# group data by dataframe subset\ngrouped_data = train_df.groupby(['Sex', 'Pclass','Age'])\ngrouped_data['Survived'].describe()","54bcd614":"# missing values replacement for numerical column\ndata = train_df.copy(deep = True)\nc = 'Age'\nm = data[c].dropna().mean()\ndata[c].fillna(m, inplace=True)\ndata.info()","2dbc697c":"# missing values replacement for categorical column\ndata = train_df.copy(deep = True)\nc = 'Cabin'\nm = data[c].dropna().mode()[0]\ndata[c].fillna(m, inplace=True)\ndata.info()","3ea2ed12":"# columns transformation - way 1\ndata = train_df.copy(deep = True)\nc = {'T':1,'F':0}\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].map(c)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","9a1373f3":"# columns transformation - way 2\ndata = train_df.copy(deep = True)\ndata.rename(columns = {'Survived':'S'}, inplace = True)\ndata['Survived'] = data['S'].apply(lambda x: 1 if x == 'T' else 0)\ndata['Died'] = 1 - data['Survived']\ndata.head(10)","64d9214a":"# columns transformation - way 3\n# http:\/\/queirozf.com\/entries\/one-hot-encoding-a-feature-on-a-pandas-dataframe-an-example\ndata = train_df.copy(deep = True)\ncols = pd.get_dummies(data['Survived'],prefix='Survived_', drop_first=False)\ndata = pd.concat([data,cols],axis=1)\ndata.head(10)","bd457f29":"# label encoder\n# https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.preprocessing.LabelEncoder.html","585c3feb":"# grouping data and aggregating columns\npd = train_df.groupby('Sex').agg('sum')[['Survived', 'Died']]\nprint(pd.head())","70832377":"# plotting data\npd.plot(kind='bar', figsize=(25, 7), stacked=False, color=['g', 'r'])","08a6b084":"# add a column with constant value\ndata = train_df.copy(deep = True)\ndata['Test'] = 'Test'\ndata.head(10)","bc9057a2":"# add a column and bin to intervals\n# https:\/\/pandas.pydata.org\/pandas-docs\/version\/0.23.4\/generated\/pandas.cut.html\ndata = train_df.copy(deep = True)\ndata['Age_Intervals'] = pd.cut(data['Age'], 4)\ndata.head(10)","bf81fb9e":"#drop a column\ndata = train_df.copy(deep = True)\ndata = data.drop(['Age'], axis=1)\ndata.info()","e6e8ef17":"Manipulating dataframe\nhttps:\/\/gist.github.com\/agalea91\/545e2337b94d965be788f7db18b1f497"}}