{"cell_type":{"58e95e88":"code","3fbd34d3":"code","5740f369":"code","04cea3ae":"code","8808d5fc":"code","ecf66ef8":"code","2535fa21":"code","89a02834":"code","da676e87":"code","26e55c62":"code","72a302ce":"code","094aa9cf":"code","88793f7d":"code","6ef4db23":"code","685436eb":"code","7ce9c3a6":"code","52266d33":"code","18ddb2dd":"code","32cef9c6":"code","bcef4fcc":"code","527f404a":"code","81478404":"code","ecf8b300":"code","7d064ca7":"code","d81c7208":"code","7bcbcedd":"code","330a8ab8":"code","0992809e":"code","17b58651":"code","b0d43719":"code","5e433c7d":"markdown","682c685b":"markdown","c819ec05":"markdown","8e3df17f":"markdown","d439b3d7":"markdown","26426827":"markdown","1f293175":"markdown","6a0d0195":"markdown","6fcd0e6b":"markdown","9f2f1b73":"markdown","a2c287b1":"markdown","46bc52d5":"markdown","e7c316aa":"markdown","ebd659bd":"markdown","a77c16df":"markdown","574b8523":"markdown","0ed4ea10":"markdown","e5b01507":"markdown","6a28ffff":"markdown","883516fe":"markdown","22968432":"markdown"},"source":{"58e95e88":"#Importing required libraries\nimport numpy as np\nimport pandas as pd\n\nfrom geopy.geocoders import Nominatim\ntry:\n    import geocoder\nexcept:\n    !pip install geocoder\n    import geocoder\n\nimport requests\nfrom bs4 import BeautifulSoup\n\ntry:\n    import folium\nexcept:\n    !pip install folium\n    import folium\n    \nfrom sklearn.cluster import KMeans","3fbd34d3":"g = geocoder.arcgis('Bangalore, India')\nblr_lat = g.latlng[0]\nblr_lng = g.latlng[1]\nprint(\"The Latitude and Longitude of Bangalore is {} and {}\".format(blr_lat, blr_lng))","5740f369":"#Scraping the webpage for list of localities\nneig = requests.get(\"https:\/\/commons.wikimedia.org\/wiki\/Category:Suburbs_of_Bangalore\").text","04cea3ae":"soup = BeautifulSoup(neig, 'html.parser')\n#Creating a list to store neighborhood data\nneighborhoodlist = []\nfor i in soup.find_all('div', class_='mw-category')[0].find_all('a'):\n    neighborhoodlist.append(i.text)\n\n#Creating a dataframe from the list\nneig_df = pd.DataFrame({\"Locality\": neighborhoodlist})\nneig_df.head()","8808d5fc":"#Shape of dataframe neig_df\nneig_df.shape","ecf66ef8":"#Defining a function to get the location of the localities\ndef get_location(localities):\n    g = geocoder.arcgis('{}, Bangalore, India'.format(localities))\n    get_latlng = g.latlng\n    return get_latlng","2535fa21":"co_ordinates = []\nfor i in neig_df[\"Locality\"].tolist():\n    co_ordinates.append(get_location(i))\nprint(co_ordinates)","89a02834":"#Creating a dataframe from the list of location\nco_ordinates_df = pd.DataFrame(co_ordinates, columns=['Latitudes', 'Longitudes'])","da676e87":"#Adding co-ordinated to neig_df dataframe\nneig_df[\"Latitudes\"] = co_ordinates_df[\"Latitudes\"]\nneig_df[\"Longitudes\"] = co_ordinates_df[\"Longitudes\"]","26e55c62":"neig_df.head()","72a302ce":"#Creating a map\nblr_map = folium.Map(location=[blr_lat, blr_lng],zoom_start=11)\n\n#adding markers to the map for localities\n#marker for Bangalore\nfolium.Marker([blr_lat, blr_lng], popup='<i>Bangalore<\/i>', color='red', tooltip=\"Click to see\").add_to(blr_map)\n\n#markers for localities\nfor latitude,longitude,name in zip(neig_df[\"Latitudes\"], neig_df[\"Longitudes\"], neig_df[\"Locality\"]):\n    folium.CircleMarker(\n        [latitude, longitude],\n        radius=6,\n        color='blue',\n        popup=name,\n        fill=True,\n        fill_color='#3186ff'\n    ).add_to(blr_map)\n\nblr_map","094aa9cf":"#Foursquare Credentials\n# @hidden_cell\nCLIENT_ID = 'JTB4R2ZERJU1QIVN1L4DXTEHZZS3ALDRVPDITI5KSV45D0DG'\nCLIENT_SECRET = 'ICQ5C1WJOIFWHALH01K3XKDN4UFX3Q5PT3I4ZBNVW3P1SVKD'\nVERSION = '20180605' # Foursquare API version\n\nprint('Your credentails:')\nprint('CLIENT_ID: ' + \"CLIENT_ID\")\nprint('CLIENT_SECRET:' + \"CLIENT_SECRET\")","88793f7d":"#Getting the top 100 venues in each locality\nradius = 2000\nLIMIT = 100\n\nvenues = []\n\nfor lat, lng, locality in zip(neig_df[\"Latitudes\"], neig_df[\"Longitudes\"], neig_df[\"Locality\"]):\n    url = 'https:\/\/api.foursquare.com\/v2\/venues\/explore?client_id={}&client_secret={}&ll={},{}&v={}&radius={}&limit={}'.format(CLIENT_ID, CLIENT_SECRET, lat, lng, VERSION, radius, LIMIT)\n    results = requests.get(url).json()['response']['groups'][0]['items']\n\n    for venue in results:\n        venues.append((locality, lat, lng, venue['venue']['name'], venue['venue']['location']['lat'], venue['venue']['location']['lng'], venue['venue']['categories'][0]['name']))","6ef4db23":"venues[0]","685436eb":"#Convert the venue list into dataframe\nvenues_df = pd.DataFrame(venues)\nvenues_df.columns = ['Locality', 'Latitude', 'Longitude', 'Venue name', 'Venue Lat', 'Venue Lng', 'Venue Category']\nvenues_df.head()","7ce9c3a6":"#Number of venues for each Locality\nvenues_df.groupby(['Locality']).count()","52266d33":"#Getting the unique categories\nprint('There are {} unique categries.'.format(len(venues_df['Venue Category'])))","18ddb2dd":"#List of categories\nprint('Total number of unique catefories are {}'.format(len(venues_df['Venue Category'].unique().tolist())))\n#First 10 categories\nvenues_df['Venue Category'].unique().tolist()#[:10]","32cef9c6":"#one hot encoding\nblr_onehot = pd.get_dummies(venues_df[['Venue Category']], prefix=\"\", prefix_sep=\"\")\n\nblr_onehot['Locality'] = venues_df['Locality']\n\n#move the locality column to the front\nblr_onehot = blr_onehot[ [ 'Locality' ] + [ col for col in blr_onehot.columns if col!='Locality' ] ]\nblr_onehot.head()","bcef4fcc":"blr_grouped = blr_onehot.groupby(['Locality']).mean().reset_index()\nprint(blr_grouped.shape)\nblr_grouped.head()","527f404a":"#numbers of localities having Italian Restaurants\nlen(blr_grouped[blr_grouped['Italian Restaurant'] > 0])","81478404":"blr_italian = blr_grouped[['Locality', 'Italian Restaurant']]\nblr_italian.head()","ecf8b300":"#K-means clustering\ncluster = 3 \n\n#Dataframe for clustering\nblr_clustering = blr_italian.drop(['Locality'], 1)\n\n#run K-means clustering\nk_means = KMeans(init=\"k-means++\", n_clusters=cluster, n_init=12).fit(blr_clustering)\n\n#getting the labels for first 10 locality \nprint(k_means.labels_[0:10])","7d064ca7":"#Creating a of blr_italian dataframe\nblr_labels = blr_italian.copy()\n\n#addring label to blr_labels\nblr_labels[\"Cluster Label\"] = k_means.labels_\n\nblr_labels.head()","d81c7208":"#Merging the blr_labels and neig_df dataframes to get the latitude and longitudes for each locality\nblr_labels = blr_labels.join(neig_df.set_index('Locality'), on='Locality')\nblr_labels.head()","7bcbcedd":"#Grouping the localities according to their Cluster Labels\nblr_labels.sort_values([\"Cluster Label\"], inplace=True)\nblr_labels.head()","330a8ab8":"#Plot the cluster on map\ncluster_map = folium.Map(location=[blr_lat, blr_lng],zoom_start=11)\n\n#marker for Bangalore\nfolium.Marker([blr_lat, blr_lng], popup='<i>Bangalore<\/i>', color='red', tooltip=\"Click to see\").add_to(cluster_map)\n\n#Getting the colors for the clusters\ncol = ['red', 'green', 'blue']\n\n#markers for localities\nfor latitude,longitude,name,clus in zip(blr_labels[\"Latitudes\"], blr_labels[\"Longitudes\"], blr_labels[\"Locality\"], blr_labels[\"Cluster Label\"]):\n    label = folium.Popup(name + ' - Cluster ' + str(clus))\n    folium.CircleMarker(\n        [latitude, longitude],\n        radius=6,\n        color=col[clus],\n        popup=label,\n        fill=False,\n        fill_color=col[clus],\n        fill_opacity=0.3\n    ).add_to(cluster_map)\n       \ncluster_map","0992809e":"#First Cluster\ncluster_1 = blr_labels[blr_labels['Cluster Label'] == 0]\nprint(\"There are {} localities in cluster-1\".format(cluster_1.shape[0]))\nmean_presence_1 = cluster_1['Italian Restaurant'].mean()\nprint(\"The mean occurence of Italian restaurant in cluster-1 is {0:.2f}\".format(mean_presence_1))\ncluster_1","17b58651":"#Second Cluster\ncluster_2 = blr_labels[blr_labels['Cluster Label'] == 1]\nprint(\"There are {} localities in cluster-2\".format(cluster_2.shape[0]))\nmean_presence_2 = cluster_2['Italian Restaurant'].mean()\nprint(\"The mean occurence of Italian restaurant in cluster-2 is {0:.2f}\".format(mean_presence_2))\ncluster_2","b0d43719":"#Third Cluster\ncluster_3 = blr_labels[blr_labels['Cluster Label'] == 2]\nprint(\"There are {} localities in cluster-3\".format(cluster_3.shape[0]))\nmean_presence_3 = cluster_3['Italian Restaurant'].mean()\nprint(\"The mean occurence of Italian restaurant in cluster-3 is {0:.2f}\".format(mean_presence_3))\ncluster_3","5e433c7d":"<t>This project will use data from : <\/t>\n<ul>\n    <li>Geopy - For getting the co-ordinated of different locations.<\/li>\n    <li>Foursquare API - To get the list of vanues and their details around a given location.<\/li>\n<\/ul>","682c685b":"<t>The objective of this report is to determine the best possible location to open an Italian Restaurant in Bangalore, Karnataka based on the different localities of the city, already established Italian restaurant in varios geographical location and ease of accessibility by maximum number of people so that the revenue from the latest venture can be maximized.<\/t>","c819ec05":"<h4>Opening a new Italian Restaurant in Bangalore, Karnataka<\/h4>","8e3df17f":"<h3>5. Plotting the Localities on map<\/h3>","d439b3d7":"<h3>2. Getting the location<\/h3>","26426827":"<h3>9. Analyzing The Cluster<\/h3>","1f293175":"<ul>\n    <li>From above analysis we can infer that cluster 1(shown with red color) has almost no Italian Restaurant with the highest numbers of the same in cluster 2(shown with green color) and moderate number of Italian Restaurants are present in cluster 3(shown with blue color) located in the central part of the city.<\/li>\n    <li>This analysis presents a great opportunity to entrepreneurs to tap into the unutilized potential of the outer parts of the city of Bangalore by opening Italian Restaurants.<\/li>\n    <li>It is also evident that cluster 2(around the central part of the city) is suffering from high competition and over supply, hense investment in this area should be avoided by developers. <\/li>\n    <li>Developers with unique selling propositions that can stand out from the moderate competiton in cluster 3 can take moderate risk and attract the customers already visiting the locality of this cluster because of the existing Italian Restaurant.<\/li>\n<\/ul>","6a0d0195":"<h4>Dataframe for Italian Restaurant<\/h4>","6fcd0e6b":"<h3>10. Conclusion<\/h3>","9f2f1b73":"<h3>Data<\/h3>","a2c287b1":"<ol>\n    <li>Getting the co-ordinates of the target city.<\/li>\n    <li>Getting the list of neighborhoods and their co-ordinates.<\/li>\n    <li>Exploring the most visited venues in the target localities.<\/li>\n    <li>Clustering the localities.<\/li>\n    <li>Analyzing the clusters formed.<\/li>\n<\/ol>","46bc52d5":"<h3>8. Clustering The Localities<\/h3>","e7c316aa":"<h3>Introduction to Business Problem<\/h3>","ebd659bd":"<h3>Methodology<\/h3>","a77c16df":"<h3>6. Using Foursquare API to explore the localities<\/h3>","574b8523":"<h4>Grouping the categories<\/h4>","0ed4ea10":"<h3>1. Importing required libraries<\/h3>","e5b01507":"<h1>Capstone Project - Battle of Neighborhoods (week 2)<\/h1>\n<h2>Applied Data Science Capstone<\/h2>","6a28ffff":"<h3>7. Analyzing the Localities according to the venues<\/h3>","883516fe":"<h3>3. Getting the List of Neighborhoods in Bangalore from Wikipedia<\/h3>","22968432":"<h3>4. Getting the location of the Localities<\/h3>"}}