{"cell_type":{"aae8569b":"code","b9a4d484":"code","4bd2d6ff":"code","dee0d10a":"code","1ffbd586":"code","e81a86c3":"code","9c9ebbc7":"code","61fe2a14":"code","48944c29":"code","f1b81d58":"code","bd4e9d0d":"code","021d9e22":"code","76cfe0ef":"code","fa70887a":"code","c1f3fefc":"code","f45f9389":"code","cbd630dd":"code","2b67c157":"code","66705499":"code","20216a97":"code","74ba6703":"code","b840b27f":"code","9891d0ff":"code","ca66799b":"code","273caeba":"code","29b2e948":"code","61fb01bb":"code","2fd68c3a":"code","bc26c607":"code","4e8ad11a":"code","2d6162ab":"code","6a63353c":"code","b2f4995d":"code","e1e4b650":"markdown","c189477e":"markdown","28c96f7d":"markdown","ad2a7f8c":"markdown","6f7a56d4":"markdown","1ea23de0":"markdown","499314ad":"markdown","ceb04a1f":"markdown","815ff729":"markdown","8fb52c1d":"markdown"},"source":{"aae8569b":"#Importing all the necessary library\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nimport warnings \nwarnings.filterwarnings('ignore')\n\nimport os\nprint(os.listdir(\"..\/input\/dataset\/\"))","b9a4d484":"#Let is convert or dataset into a DataFrame\nloans=pd.read_csv('..\/input\/dataset\/loan_borowwer_data.csv')\nloans.head()","4bd2d6ff":"loans.shape","dee0d10a":"loans.info()","1ffbd586":"loans.describe()","e81a86c3":"plt.figure(figsize=(10,6))\nloans[loans['credit.policy']==1]['fico'].hist(alpha=0.5,color='blue',bins=30,label='Credit.Policy=1')\nloans[loans['credit.policy']==0]['fico'].hist(alpha=0.5,color='red',bins=30,label='Credit.Policy=0')\nplt.legend()\nplt.xlabel('FICO')","9c9ebbc7":"plt.figure(figsize=(10,6))\nloans[loans['not.fully.paid']==1]['fico'].hist(alpha=0.5,color='blue',bins=30,label='not.fully.paid=1')\nloans[loans['not.fully.paid']==0]['fico'].hist(alpha=0.5,color='red',bins=30,label='not.fully.paid=0')\nplt.legend()\nplt.xlabel('FICO')","61fe2a14":"purpose=list(loans['purpose'].unique())\npurpose","48944c29":"plt.figure(figsize=(12,6))\nsns.countplot(loans['purpose'])","f1b81d58":"loans['purpose'].value_counts()","bd4e9d0d":"sns.countplot(loans['not.fully.paid'])","021d9e22":"plt.figure(figsize=(12,6))\nsns.countplot(x=loans['purpose'],hue=loans['not.fully.paid'],palette='Set1')","76cfe0ef":"corrmat=loans.corr()\nplt.subplots(figsize=(10, 9))\nsns.heatmap(corrmat, vmax=.8, square=True,cbar=True, annot=True, fmt='.2f', annot_kws={'size': 10});","fa70887a":"loans[['int.rate','inq.last.6mths','revol.util']].describe()","c1f3fefc":"sns.jointplot(x='fico',y='int.rate',data=loans,color='green')","f45f9389":"plt.figure(figsize=(11,7))\nsns.lmplot(y='int.rate',x='fico',data=loans,hue='credit.policy',\n           col='not.fully.paid',palette='Accent_r')","cbd630dd":"loans.info()","2b67c157":"from sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import OneHotEncoder","66705499":"label_encoder=LabelEncoder()\nloans['purpose']=label_encoder.fit_transform(loans['purpose'])","20216a97":"loans['purpose'].dtype","74ba6703":"from sklearn.model_selection import train_test_split","b840b27f":"X = loans.drop('not.fully.paid',axis=1)\ny = loans['not.fully.paid']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=101)","9891d0ff":"from sklearn.ensemble import RandomForestClassifier\nrfc=RandomForestClassifier(n_estimators=100)\nrfc.fit(X_train,y_train)","ca66799b":"predict_rfc = rfc.predict(X_test)","273caeba":"#Importing Logistic Regression\nfrom sklearn.linear_model import LogisticRegression\nlog=LogisticRegression()\nlog.fit(X_train,y_train)","29b2e948":"predict_Log=log.predict(X_test)","61fb01bb":"#importing a Support Vector machine\nfrom sklearn.svm import SVC\nsvm=SVC(gamma='auto')\nsvm.fit(X_train,y_train)","2fd68c3a":"predict_svm=svm.predict(X_test)","bc26c607":"from sklearn.metrics import classification_report,confusion_matrix,accuracy_score","4e8ad11a":"print('\\t\\t CLASSIFICATION REPORT- Random Forest')\nprint(classification_report(y_test,predict_rfc))\nprint('\\t  CLASSIFICATION REPORT- Logistic Regression')\nprint(classification_report(y_test,predict_Log))","2d6162ab":"sns.heatmap(confusion_matrix(y_test,predict_rfc),annot=True,fmt='')\nplt.title('Confusion Matrix-Random Forest')","6a63353c":"sns.heatmap(confusion_matrix(y_test,predict_Log),annot=True,fmt='')\nplt.title('Confusion Matrix-Logistic Regression')","b2f4995d":"print('Accuracy Score of Random Forest Classifier: {:.2f}'.format(accuracy_score(y_test,predict_rfc)))\nprint('Accuracy Score of Logistic Regression Classifier: {:.2f}'.format(accuracy_score(y_test,predict_Log)))","e1e4b650":"## Train Test Split","c189477e":"![](https:\/\/theme.zdassets.com\/theme_assets\/680652\/3abc1fe11ed0a385b1298f0a1e44a7d7d5f78fc1.png)","28c96f7d":"**Conclusion:** As you can see the Logistic regression worked slightly better in this situation but thats not enougnh. We need to do a lot more feature engineering and try out differenet models in order to understand which is better. I hope you liked this notebook, if yes kindly leave an upvote. \nI'll be updating this notebook with time.","ad2a7f8c":"\nFor this project we'll be using publicly available data from LendingClub.com. Lending Club connects people who need money (borrowers) with people who have money (investors). Hopefully, as an investor you would want to invest in people who showed a profile of having a high probability of paying you back. We will try to create a model that will help predict this.","6f7a56d4":"**Observation:** Only the purpose column is categorical. ","1ea23de0":"## Predictions and Evaluation of All Models","499314ad":"**Observation:** We have 14 columns and 9578 rows. Lets check the datatype of each columns","ceb04a1f":"# Lending Club Dataset:","815ff729":"## Training a Logistic Regession Model","8fb52c1d":"## Training a Random Forest Model"}}