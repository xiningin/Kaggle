{"cell_type":{"e05d7835":"code","948ad3cb":"code","b0e2c296":"code","5d45898b":"code","ab87e2bd":"code","82ddbc2f":"code","219f357a":"code","24e3517c":"code","cecc8ff0":"code","71cf7cea":"code","a388e2a7":"code","d06d6570":"code","97f56430":"code","bb64257b":"code","f9309c28":"code","bfe86172":"code","39547e83":"code","fb36fe5b":"code","b17dad78":"code","44856b3e":"code","d4174208":"code","541eb9bc":"code","f2f6620b":"code","6c5f42c4":"code","78f8b7eb":"code","0a2075c0":"code","62f0d0bd":"code","005e10c4":"code","44c6ae6c":"markdown","4ef2be02":"markdown","71912704":"markdown","b255b685":"markdown","cc7f3407":"markdown","10a83ea2":"markdown","3cd42e3a":"markdown","348987be":"markdown","a57f9eee":"markdown","fcafb3c8":"markdown","d68548b4":"markdown","1e38f29d":"markdown","146961ae":"markdown","ba763f9e":"markdown","e5f97336":"markdown","ae93a44c":"markdown","300a1f03":"markdown","2254f9b0":"markdown","320f740f":"markdown","ab4cf268":"markdown","91348e26":"markdown","24bd6228":"markdown","c757babd":"markdown","7affdb8d":"markdown","57e9ffac":"markdown","bd4a3f61":"markdown","f02d7b6b":"markdown","b7a4554e":"markdown"},"source":{"e05d7835":"import os\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport sklearn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","948ad3cb":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b0e2c296":"# load data (for exploring and cleaning we load test and train datasets)\ndata_train = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/train.csv\")\n\ndata_test = pd.read_csv(\"\/kaggle\/input\/mobile-price-classification\/test.csv\")","5d45898b":"# fast looking (size of dataframe, columns, 5 first rows of data, info and describing)\nprint(f\"The train dataset has {data_train.shape[0]} rows.\")\nprint(f\"And {data_train.shape[1]} columns atleast\")\nprint('-' * 50)\nprint(f\"The test dataset has {data_test.shape[0]} rows.\")\nprint(f\"And {data_test.shape[1]} columns.\")\nprint('-' * 50)\nprint(f\"List of train dataset columns: {data_train.columns}\")\nprint('-' * 50)\nprint(f\"List of test dataset columns: {data_test.columns}\")\n\nprint(\"-\" * 50)\ndata_train.info()\nprint('-' * 50)\ndata_test.info()","ab87e2bd":"data_train.head()","82ddbc2f":"data_train.describe()","219f357a":"procent_of_null = data_train.isnull().sum() \/ data_train.shape[0]\nprint(procent_of_null)\nprint(\"-\" * 20)\nprocent_of_nan = data_train.isna().sum() \/ data_train.shape[0]\nprint(procent_of_nan)","24e3517c":"procent_of_null = data_test.isnull().sum() \/ data_test.shape[0]\nprint(procent_of_null)\nprint(\"-\" * 20)\nprocent_of_nan = data_test.isna().sum() \/ data_test.shape[0]\nprint(procent_of_nan)","cecc8ff0":"plt.figure(figsize=(20, 8))\n\ncorrelation_rate = data_train.corr()\n\nsns.heatmap(correlation_rate, annot = True, cmap = \"Greens\")","71cf7cea":"print(f\"Max RAM value is: {data_train['ram'].max()} MB\")\nprint(f\"Min RAM value is: {data_train['ram'].min()} MB\")\nprint(f\"Mean of RAM values is: {round(data_train['ram'].mean())} MB\")","a388e2a7":"plt.figure(figsize=[8, 6])\n\nsns.boxplot(data_train['ram'], linewidth=2.5)\nplt.xlabel(\"RAM value\")","d06d6570":"cheap = data_train[\"ram\"][data_train[\"price_range\"] == 1]\n\nmedium = data_train[\"ram\"][data_train[\"price_range\"] == 2]\n\nexpensive = data_train[\"ram\"][data_train[\"price_range\"] == 3]\n\nprice_ram_data = pd.DataFrame({\"Low Price\" : cheap,\n                              \"Medium Price\" : medium,\n                              \"High Price\" : expensive})","97f56430":"plt.figure(figsize=[8, 6])\n\nsns.boxplot(data = price_ram_data, linewidth=2.5)\nplt.ylabel(\"RAM\")","bb64257b":"print(f\"Max Battery Power value is: {data_train['battery_power'].max()} mAh\")\nprint(f\"Min Battery Power value is: {data_train['battery_power'].min()} mAh\")\nprint(f\"Mean of Battery Power values is: {round(data_train['battery_power'].mean())} mAh\")","f9309c28":"plt.figure(figsize=[8, 6])\n\nsns.boxplot(data_train['battery_power'], linewidth=2.5)\nplt.xlabel(\"Battery Power value\")","bfe86172":"cheap = data_train[\"battery_power\"][data_train[\"price_range\"] == 1]\n\nmedium = data_train[\"battery_power\"][data_train[\"price_range\"] == 2]\n\nexpensive = data_train[\"battery_power\"][data_train[\"price_range\"] == 3]\n\nprice_bp_data = pd.DataFrame({\"Low Price\" : cheap,\n                              \"Medium Price\" : medium,\n                              \"High Price\" : expensive})","39547e83":"plt.figure(figsize=[8, 6])\n\nsns.boxplot(data = price_ram_data, linewidth=2.5)\nplt.ylabel(\"RAM\")","fb36fe5b":"three_g = data_train[\"three_g\"].value_counts().values\n\nlabels = [\"3G Supported\", \"Not Supported\"]","b17dad78":"plt.figure(figsize=[8, 6])\nplt.pie(three_g, labels = labels, shadow=True, startangle=90)\nplt.title(\"Is 3G supported?\")","44856b3e":"four_g = data_train[\"four_g\"].value_counts().values\n\nlabels = [\"4G Supported\", \"Not Supported\"]","d4174208":"plt.figure(figsize=[8, 6])\nplt.pie(four_g, labels = labels, shadow=True, startangle=90)\nplt.title(\"Is 4G supported?\")","541eb9bc":"X = data_train.drop([\"price_range\"], axis = 1)\nY = data_train[\"price_range\"]\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 25)","f2f6620b":"log_reg = LogisticRegression()\n\nlog_reg.fit(X_train, Y_train)\nprint(f\"Score is {log_reg.score(X_test, Y_test)}\")","6c5f42c4":"tree = DecisionTreeClassifier(max_depth = 9)\n\ntree.fit(X_train, Y_train)\nprint(f\"Score is {tree.score(X_test, Y_test)}\")","78f8b7eb":"forest = RandomForestClassifier(n_estimators = 300)\n\nforest.fit(X_train, Y_train)\nprint(f\"Score is {forest.score(X_test, Y_test)}\")","0a2075c0":"knn = KNeighborsClassifier(n_neighbors = 15)\n\nknn.fit(X_train, Y_train)\nprint(f\"Score is {knn.score(X_test, Y_test)}\")","62f0d0bd":"prediction = knn.predict(X_test)\n\nprint(classification_report(Y_test, prediction))","005e10c4":"prediction_price = knn.predict(data_test.drop([\"id\"], axis = 1))\n\nprepared_data = data_test\nprepared_data[\"Predicted Price\"] = prediction_price\n\nprepared_data.head(5)","44c6ae6c":"**Very bad result, continue.**","4ef2be02":"**Good result, but what about KNN?**","71912704":"# *Logistic Regression*","b255b685":"# 1) Import data and libraries.\n**Firstly, import all useful libraries. Secondly, load data.**","cc7f3407":"# *Decision Tree*","10a83ea2":"**Null and NAN values.**","3cd42e3a":"**Well, we can start modelling. Our task is to classify price range, that\u2019s why we have to create classification models.**","348987be":"# 2) Fast looking on data\n**Let`s see head of our data frames, list of columns, sizes, descriptions and nan\/null values in these datasets.**","a57f9eee":"**In these boxplots we can see:**\n\n**1)\tIn the first graph we can see maximum, minimum, median and mean of whole RAM column.**\n\n**2)\tIn the second graph we can see comparison of price ranges and RAM amount in smartphones of these ranges.**","fcafb3c8":"**In these pie plots we can see that:**\n\n**1)\tMore than a 75% of smartphones support 3G, but only 50% of smartphones support 4G.**","d68548b4":"# *4.2) Battery power*","1e38f29d":"**In these boxplots we can see that:**\n\n**1)\tIn the first graph we can see maximum, minimum, median and mean of whole Battery Power column.**\n\n**2)\tIn the second graph we can see comparison of price ranges and Battery Power amount in smartphones of these ranges. It is very interesting, because Battery Power values is almost similar in every price range.**","146961ae":"**Before modelling we have to prepare data. Let\u2019s do this:**","ba763f9e":"# *KNN*","e5f97336":"# *Random Forest Classifier*","ae93a44c":"**Great result. Let`s make a classification report.**","300a1f03":"# *4.3) 3G\/4G*","2254f9b0":"**Here we can see that there is strong positive correlation between price range and RAM. Also, price range, battery power and 4G\/3G. Other features have small positive correlation, that\u2019s why we will try work with every column.**","320f740f":"**Information about columns:**\n* id: ID\n* battery_power: Total energy a battery can store in one time (mAh)\n* blue: Support bluetooth or not\n* clock_speed: Speed at which microprocessor executes instructions\n* dual_sim: Support dual sim or not\n* fc: Front Camera mega pixels\n* four_g: Support 4G or not\n* int_memory: Internal Memory (GB)\n* m_dep: Mobile Depth (cm)\n* mobile_wt: Weight of mobile phone\n* n_cores: Number of cores of processor\n* pc: Primary Camera mega pixels\n* px_height: Pixel Resolution Height\n* px_width: Pixel Resolution Width\n* ram: Random Access Memory (MB)\n* sc_h: Screen Height of mobile (cm)\n* sc_w: Screen Width of mobile (cm)\n* talk_time: Time that a single battery charge will last\n* three_g: Support 3G or not\n* touch_screen: Has touch screen or not\n* wifi: Support wifi or not","ab4cf268":"# *4.1) RAM*","91348e26":"**Finally, we can see new dataset with our prediction values by KNN.**\n\n**Thank you everyone who check this notebook. If you like my notebook upvote it and if you dislike, please, write your comments. All of your feedback will help me to improve my skills.**","24bd6228":"# 6) Conclusion.","c757babd":"# 3) Cleaning\n**Firstly, before modelling, we have to delete unnecessary columns to prevent overfitting, but to learn which columns we should drop we must create correlation matrix (you can check my interesting notebook about correlation here: https:\/\/www.kaggle.com\/artemborzenko\/calculating-the-correlation-of-a-youtube-dataset).**\n\n**Let`s create this.**  ","7affdb8d":"**How we can see train dataset includes 2000 rows and 21 columns, but test dataset includes 1000 rows and 21. We can look on names of columns and understand what they mean. Also, fortunately, we can see that there are not nan and null values.**","57e9ffac":"# 4) Exploring\n**We will explore columns of TRAIN dataset about RAM, 4G\/3G and Battery Power, because these columns are important for our future modeling.**","bd4a3f61":"# 5) Modelling","f02d7b6b":"# Hello everyone! \n**In this notebook we will analyze dataset about Smartphones features and prices. Let`s start.**","b7a4554e":"**Not bad, but we can try with other models.**"}}