{"cell_type":{"6ab337ab":"code","27ffe0a3":"code","41b17097":"code","a4660b7e":"code","d171812b":"code","8031df8f":"code","b11caaea":"code","9ab9efdc":"code","b72bf4f8":"code","a0cf73f7":"code","272b3c42":"code","a3d494d6":"code","5b4593b8":"code","26f2a293":"code","55a35c47":"code","320f2569":"code","08b3561e":"code","f13247ef":"code","9c4a3093":"code","9e360abe":"code","69fa4d20":"code","982451c1":"code","572b071f":"code","eaa5468d":"code","5ac7dedd":"code","7fc979a0":"code","e4e1ada6":"code","b3035e0e":"code","ea2d9fc5":"code","07796565":"code","fa2efdbb":"code","bfc99786":"code","fdacb05e":"code","f03075ac":"code","1660b56b":"code","320d6ea4":"code","ccb43782":"code","cc911126":"code","e693207c":"code","2909ef7a":"code","53a55091":"code","30104432":"code","44e91709":"code","faecadcd":"code","ff1363e8":"code","4cf8e118":"code","1858dc8d":"code","a8f05d19":"code","0d19a067":"code","4a1bd1f5":"code","c1e147de":"code","48b2b460":"code","c4c4a8f9":"code","6bdc4dda":"code","056445eb":"code","7b8c88be":"code","c5b568de":"code","dba8da11":"code","ef6a3e35":"code","e5bc835d":"code","5d3e86eb":"code","31832678":"code","7831200b":"code","0f25e4e0":"code","4084f2db":"code","1c86a050":"code","dac3e66c":"code","f623c4d5":"code","16bf25df":"code","a68a3963":"code","079b0f44":"code","2b35e13f":"code","38bf4e23":"code","0d54e90d":"code","aeb78ef2":"code","e8b5330f":"code","083723f9":"code","ba7b9766":"code","6f353a41":"code","99d53210":"code","2e9ec4a7":"code","522c6c1a":"code","94f37c6d":"code","1032e036":"code","31f05518":"code","779484f3":"code","bfb5b98c":"code","c7d04f3f":"code","ac46ecc5":"markdown","06793546":"markdown","22be60e8":"markdown","14b02e3f":"markdown","a3c10472":"markdown","09bc3a2e":"markdown","3e63e3f8":"markdown","ca06f8a6":"markdown","282849e7":"markdown","4e570978":"markdown","8eb814ea":"markdown","fdc7f8b0":"markdown","1bd4bfb8":"markdown","853e09a4":"markdown","b8e998c6":"markdown","122f0167":"markdown","f2b6f7ab":"markdown","8a1ce1d1":"markdown","83fef461":"markdown","afadd53e":"markdown","fc738dc0":"markdown"},"source":{"6ab337ab":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","27ffe0a3":"import pandas as pd\nimport numpy as np\nimport statistics\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import LabelEncoder,StandardScaler","41b17097":"data1 = pd.read_csv(\"..\/input\/sloan-digital-sky-survey\/Skyserver_SQL2_27_2018 6_51_39 PM.csv\")\ndata1.head()","a4660b7e":"data1.shape","d171812b":"data1.info()","8031df8f":"data1.drop_duplicates(inplace=True)\ndata1","b11caaea":"data1.isnull().sum(axis=0).sort_values()","9ab9efdc":"data1.describe()","b72bf4f8":"data_L=data1.copy()\ndata_L.head()","a0cf73f7":"from sklearn.preprocessing import LabelEncoder","272b3c42":"L_model=LabelEncoder()","a3d494d6":"for col in data1.columns:\n    data_L[col] = L_model.fit_transform(data_L[col]) \n    \ndata_L.head()","5b4593b8":"fig, ax = plt.subplots(figsize=(15,15))\nsns.heatmap(data_L.corr(),annot=True, linewidths=1)","26f2a293":"for c in data1.columns:\n    print(c,':',data1[c].nunique())","55a35c47":"data1.drop(['objid','rerun'],1,inplace=True)\ndata1.head()","320f2569":"data1.drop(['fiberid','field','plate','ra'],1,inplace=True)\ndata1","08b3561e":"data1['class'].value_counts()","f13247ef":"sns.countplot(x=data1['class'])","9c4a3093":"data1['class'].value_counts().plot.pie(y='class')","9e360abe":"# sns.pairplot(data1,hue='class')","69fa4d20":"data1['class'].value_counts()","982451c1":"plt.figure(figsize = (17, 10))\nplt.style.use('seaborn-white')\nax=plt.subplot(2,5,1)\nsns.boxplot(x='class',y='dec',data=data1)\nax.set_title('Declination (r-band)')\nax=plt.subplot(2,5,2)\nsns.boxplot(x='class',y='u',data=data1)\nax.set_title('u')\nax=plt.subplot(2,5,3)\nsns.boxplot(x='class',y='g',data=data1)\nax.set_title('g')\nax=plt.subplot(2,5,4)\nsns.boxplot(x='class',y='r',data=data1)\nax.set_title('r')\nax=plt.subplot(2,5,5)\nsns.boxplot(x='class',y='i',data=data1)\nax.set_title('i')\nax=plt.subplot(2,5,6)\nsns.boxplot(x='class',y='z',data=data1)\nax.set_title('z')\nax=plt.subplot(2,5,7)\nsns.boxplot(x='class',y='run',data=data1)\nax.set_title('Run Number')\nax=plt.subplot(2,5,8)\nsns.boxplot(x='class',y='camcol',data=data1)\nax.set_title('Camera Column')\nax=plt.subplot(2,5,9)\nsns.boxplot(x='class',y='redshift',data=data1)\nax.set_title('Final Red Shift')\nax=plt.subplot(2,5,10)\nsns.boxplot(x='class',y='mjd',data=data1)\nax.set_title('MJD of observation')","572b071f":"def outlierdetection(data1):\n    sorted(data1)\n    \n    Q1,Q3=np.percentile(data1,[25,75])\n    \n    IQR=Q3-Q1\n    \n    lower_range=Q1-(1.5*IQR)\n    \n    Upper_range=Q3+(1.5*IQR)\n    \n    return lower_range,Upper_range","eaa5468d":"d1=data1[data1['class'] == 'STAR'].dec\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)","5ac7dedd":"data1.drop(data1.index[(data1['class'] == 'STAR') & (data1.dec < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.dec > Ur)],inplace=True)","7fc979a0":"d2=data1[data1['class']  == 'STAR'].u\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class']  == 'STAR') & (data1.u < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'STAR') & (data1.u > Ur)],inplace=True)\nd3=data1[data1['class']  == 'GALAXY'].u\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class']  == 'GALAXY') & (data1.u < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'GALAXY') & (data1.u > Ur)],inplace=True)\nd4=data1[data1['class']  == 'QSO'].u\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class']  == 'QSO') & (data1.u < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'QSO') & (data1.u > Ur)],inplace=True)\n","e4e1ada6":"d1=data1[data1['class']  == 'STAR'].g\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.g < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'STAR') & (data1.g > Ur)],inplace=True)\nd1=data1[data1['class']  == 'GALAXY'].g\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class']  == 'GALAXY') & (data1.g < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'GALAXY') & (data1.g > Ur)],inplace=True)\nd1=data1[data1['class']  == 'QSO'].g\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class']  == 'QSO') & (data1.g < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class']  == 'QSO') & (data1.g > Ur)],inplace=True)","b3035e0e":"d8=data1[data1['class'] == 'GALAXY'].r\nLr,Ur=outlierdetection(d8)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.r < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.r > Ur)],inplace=True)\nd9=data1[data1['class'] == 'QSO'].r\nLr,Ur=outlierdetection(d9)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.r < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.r > Ur)],inplace=True)","ea2d9fc5":"d1=data1[data1['class'] == 'STAR'].i\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.i < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.i > Ur)],inplace=True)\nd1=data1[data1['class'] == 'GALAXY'].i\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.i < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.i > Ur)],inplace=True)\nd1=data1[data1['class'] == 'QSO'].i\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.i < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.i > Ur)],inplace=True)","07796565":"d1=data1[data1['class'] == 'STAR'].z\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.z < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.z > Ur)],inplace=True)\nd1=data1[data1['class'] == 'GALAXY'].z\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.z < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.z > Ur)],inplace=True)\nd1=data1[data1['class'] == 'QSO'].z\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.z < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.z > Ur)],inplace=True)","fa2efdbb":"d1=data1[data1['class'] == 'STAR'].camcol\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.camcol < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'STAR') & (data1.camcol > Ur)],inplace=True)\nd1=data1[data1['class'] == 'GALAXY'].camcol\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.camcol < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.camcol > Ur)],inplace=True)\nd1=data1[data1['class'] == 'QSO'].camcol\nLr,Ur=outlierdetection(d1)\nprint(Lr,Ur)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.camcol < Lr)],inplace=True)\ndata1.drop(data1.index[(data1['class'] == 'QSO') & (data1.camcol > Ur)],inplace=True)","bfc99786":"data1['class'].value_counts()","fdacb05e":"# d1=data1[data1['class'] == 'GALAXY'].mjd\n# Lr,Ur=outlierdetection(d1)\n# print(Lr,Ur)\n# data1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.mjd < Lr)],inplace=True)\n# data1.drop(data1.index[(data1['class'] == 'GALAXY') & (data1.mjd > Ur)],inplace=True)\n# d1=data1[data1['class'] == 'QSO'].mjd\n# Lr,Ur=outlierdetection(d1)\n# print(Lr,Ur)\n# data1.drop(data1.index[(data1['class'] == 'QSO') & (data1.mjd < Lr)],inplace=True)\n# data1.drop(data1.index[(data1['class'] == 'QSO') & (data1.mjd > Ur)],inplace=True)","f03075ac":"plt.figure(figsize = (20, 10))\nplt.style.use('seaborn-white')\nax=plt.subplot(2,5,1)\nsns.boxplot(x='class',y='dec',data=data1)\nax.set_title('Declination (r-band)')\nax=plt.subplot(2,5,2)\nsns.boxplot(x='class',y='u',data=data1)\nax.set_title('u')\nax=plt.subplot(2,5,3)\nsns.boxplot(x='class',y='g',data=data1)\nax.set_title('g')\nax=plt.subplot(2,5,4)\nsns.boxplot(x='class',y='r',data=data1)\nax.set_title('r')\nax=plt.subplot(2,5,5)\nsns.boxplot(x='class',y='i',data=data1)\nax.set_title('i')\nax=plt.subplot(2,5,6)\nsns.boxplot(x='class',y='z',data=data1)\nax.set_title('z')\nax=plt.subplot(2,5,7)\nsns.boxplot(x='class',y='run',data=data1)\nax.set_title('Run Number')\nax=plt.subplot(2,5,8)\nsns.boxplot(x='class',y='camcol',data=data1)\nax.set_title('Camera Column')\nax=plt.subplot(2,5,9)\nsns.boxplot(x='class',y='redshift',data=data1)\nax.set_title('Final Red Shift')\nax=plt.subplot(2,5,10)\nsns.boxplot(x='class',y='mjd',data=data1)\nax.set_title('MJD of observation')","1660b56b":"data1['run'].unique()","320d6ea4":"sns.countplot(x=data1['run'])","ccb43782":"data1['class'].value_counts()","cc911126":"sns.countplot(x=data1['class'])","e693207c":"mino_class=len(data1[data1['class']=='QSO'])\nprint(mino_class)","2909ef7a":"majo_class_index=data1[data1['class']=='GALAXY'].index\nprint(majo_class_index)","53a55091":"mino_class_index=data1[data1['class']=='QSO'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([mino_class_index,random_majority_indices])","30104432":"majo_class_index=data1[data1['class']=='STAR'].index\nrandom_majority_indices=np.random.choice(majo_class_index,mino_class,replace=False)\nunder_sample_indices=np.concatenate([under_sample_indices,random_majority_indices])","44e91709":"data=data1.loc[under_sample_indices]","faecadcd":"data['class'].value_counts()","ff1363e8":"sns.countplot(x=data['class'])","4cf8e118":"X = data.drop('class',axis=1) \ny = data['class']","1858dc8d":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y,train_size=0.2,random_state=1)","a8f05d19":"from sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX_train=sc.fit_transform(X_train)\nX_test=sc.transform(X_test)","0d19a067":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn import metrics\ndt = DecisionTreeClassifier(criterion=\"gini\", max_depth=3)\ndt = dt.fit(X_train,y_train)\ny_pred = dt.predict(X_test)\nprint(\"Accuracy:\",metrics.accuracy_score(y_test, y_pred))","4a1bd1f5":"from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\nprint(\"Confusion Matrix:\\n\",cm)\nfrom sklearn.metrics import classification_report\nprint(\"\\nClassification Report:\\n\",classification_report(y_test, y_pred))","c1e147de":"from sklearn import metrics","48b2b460":"Evaluation=pd.DataFrame(['Decision Tree'],columns=['Algorithm'])\n\nEvaluation.loc[0,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[0,'Accuracy']=metrics.accuracy_score(y_test,y_pred)\nEvaluation","c4c4a8f9":"from sklearn.neighbors import KNeighborsClassifier\nknn=KNeighborsClassifier(n_neighbors=5)","6bdc4dda":"knn.fit(X_train,y_train)","056445eb":"knn.score(X_test,y_test)","7b8c88be":"from sklearn.metrics import confusion_matrix\ny_pred=knn.predict(X_test)\ncm=confusion_matrix(y_test,y_pred)\ncm","c5b568de":"import seaborn as sns\nsns.heatmap(cm, annot=True)","dba8da11":"from sklearn.metrics import classification_report\nprint(classification_report(y_test,y_pred))","ef6a3e35":"Evaluation.loc[1,'Algorithm']='KNN'\nEvaluation.loc[1,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[1,'Accuracy']=metrics.accuracy_score(y_test,y_pred)","e5bc835d":"from sklearn.naive_bayes import GaussianNB\nnb = GaussianNB()\nnb.fit(X_train, y_train)\nnb.score(X_test,y_test)\ny_pred=nb.predict(X_test)","5d3e86eb":"cm=confusion_matrix(y_test,y_pred)\ncm","31832678":"sns.heatmap(cm, annot=True)","7831200b":"print(classification_report(y_test,y_pred))","0f25e4e0":"Evaluation.loc[2,'Algorithm']='Naive Bayes'\nEvaluation.loc[2,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[2,'Accuracy']=metrics.accuracy_score(y_test,y_pred)","4084f2db":"from sklearn.ensemble import RandomForestClassifier\nclassifier1 = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier1.fit(X_train, y_train)\ny_pred=classifier1.predict(X_test)","1c86a050":"cm=confusion_matrix(y_test,y_pred)\ncm","dac3e66c":"sns.heatmap(cm, annot=True)","f623c4d5":"Evaluation.loc[3,'Algorithm']='Random Forest'\nEvaluation.loc[3,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[3,'Accuracy']=metrics.accuracy_score(y_test,y_pred)","16bf25df":"from sklearn.svm import SVC\nsvclassifier = SVC(kernel='linear')\nsvclassifier.fit(X_train, y_train)\ny_pred = svclassifier.predict(X_test)","a68a3963":"cm = confusion_matrix(y_test,y_pred)\ncm","079b0f44":"Evaluation.loc[4,'Algorithm']='SVM'\nEvaluation.loc[4,'Precision']=metrics.precision_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'Recall']=metrics.recall_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'F1 Score']=metrics.f1_score(y_test, y_pred, average='micro')\nEvaluation.loc[4,'Accuracy']=metrics.accuracy_score(y_test,y_pred)","2b35e13f":"Evaluation","38bf4e23":"Ev=Evaluation.sort_values(by='Accuracy' ,ascending=False)\nEv","0d54e90d":"data1['class'].value_counts()","aeb78ef2":"from sklearn.utils import resample\n\n# Separate Target Classes\ndata_1 = data1[data1['class']==\"STAR\"]\ndata_2= data1[data1['class']==\"GALAXY\"]\ndata_3 = data1[data1['class']==\"QSO\"]\n# Upsample minority class\ndata_3_upsampled = resample(data_3, \n                                 replace=True,     \n                                 n_samples=3558,    \n                                 random_state=2925) \n\n\n# Combine majority class with upsampled minority class\ndataO = pd.concat([data_2,data_1, data_3_upsampled,])\n# data_upsampled = pd.concat([data_2])\n \n# Display new class counts\ndataO['class'].value_counts()","e8b5330f":"X1 = dataO.drop('class',axis=1) \ny1 = dataO['class']\nfrom sklearn.model_selection import train_test_split\nX1_train, X1_test, y1_train, y1_test = train_test_split(X1, y1,train_size=0.2,random_state=1)\nfrom sklearn.preprocessing import StandardScaler\nsc=StandardScaler()\nX1_train=sc.fit_transform(X1_train)\nX1_test=sc.transform(X1_test)","083723f9":"dt = DecisionTreeClassifier(criterion=\"gini\", max_depth=3)\ndt = dt.fit(X1_train,y1_train)\ny1_pred = dt.predict(X1_test)","ba7b9766":"Evaluation2=pd.DataFrame(['Decision Tree'],columns=['Algorithm'])\n\nEvaluation2.loc[0,'Precision']=metrics.precision_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[0,'Recall']=metrics.recall_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[0,'F1 Score']=metrics.f1_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[0,'Accuracy']=metrics.accuracy_score(y1_test,y1_pred)\nEvaluation2","6f353a41":"knn=KNeighborsClassifier(n_neighbors=5)\nknn.fit(X1_train,y1_train)\nknn.score(X1_test,y1_test)\ny1_pred=knn.predict(X1_test)","99d53210":"Evaluation2.loc[1,'Algorithm']='KNN'\nEvaluation2.loc[1,'Precision']=metrics.precision_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[1,'Recall']=metrics.recall_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[1,'F1 Score']=metrics.f1_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[1,'Accuracy']=metrics.accuracy_score(y1_test,y1_pred)","2e9ec4a7":"classifier1 = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)\nclassifier1.fit(X1_train, y1_train)\ny1_pred=classifier1.predict(X1_test)","522c6c1a":"Evaluation2.loc[2,'Algorithm']='Random Forest'\nEvaluation2.loc[2,'Precision']=metrics.precision_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[2,'Recall']=metrics.recall_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[2,'F1 Score']=metrics.f1_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[2,'Accuracy']=metrics.accuracy_score(y1_test,y1_pred)","94f37c6d":"nb = GaussianNB()\nnb.fit(X1_train, y1_train)\nnb.score(X1_test,y1_test)\ny1_pred=nb.predict(X1_test)","1032e036":"Evaluation2.loc[3,'Algorithm']='Naive Bayes'\nEvaluation2.loc[3,'Precision']=metrics.precision_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[3,'Recall']=metrics.recall_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[3,'F1 Score']=metrics.f1_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[3,'Accuracy']=metrics.accuracy_score(y1_test,y1_pred)","31f05518":"from sklearn.svm import SVC\nsvclassifier = SVC(kernel='linear')\nsvclassifier.fit(X1_train, y1_train)\ny1_pred = svclassifier.predict(X1_test)","779484f3":"Evaluation2.loc[4,'Algorithm']='SVM'\nEvaluation2.loc[4,'Precision']=metrics.precision_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[4,'Recall']=metrics.recall_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[4,'F1 Score']=metrics.f1_score(y1_test, y1_pred, average='micro')\nEvaluation2.loc[4,'Accuracy']=metrics.accuracy_score(y1_test,y1_pred)","bfb5b98c":"Ev2=Evaluation2.sort_values(by='Accuracy' ,ascending=False)\nEv2.loc[:].style.highlight_max(subset=['Precision', 'Accuracy','Recall','F1 Score'], color='magenta')","c7d04f3f":"print(\"Undersampling\")\ndisplay(Ev.loc[:].style.highlight_max(subset=['Precision', 'Accuracy','Recall','F1 Score'], color='pink'))\nprint(\"\\n\\nOversampling\")\ndisplay(Ev2.loc[:].style.highlight_max(subset=['Precision', 'Accuracy','Recall','F1 Score'], color='pink'))","ac46ecc5":"## 3.Random Forest ","06793546":"## 5. SVM","22be60e8":"## 5. SVM","14b02e3f":"* Overall Oversampling gave a better accuracy. **Random Forest** with *0.993* Accuracy. \n* The best accuracy in Undersampling is **Decision Tree** with *0.981* Accuracy. \n* The overall result of **Oversampling is also better than Undersampling**. ","a3c10472":"# Testing Models on Oversampled Data","09bc3a2e":"# Evaluation for Under Sampling","3e63e3f8":"# Evaluation for Over Sampling","ca06f8a6":"# Feature Scaling","282849e7":"## 4.Naive Bayes","4e570978":"# Over Sampling","8eb814ea":"## 2.KNN","fdc7f8b0":"## 1.Decision Tree","1bd4bfb8":"# **Under Sampling**","853e09a4":"## 3.Naive Bayes ","b8e998c6":"## Train and Test Split","122f0167":"# Train and Test Split","f2b6f7ab":"# Machine Learning Models","8a1ce1d1":"## 2.KNN","83fef461":"# Conclusion","afadd53e":"## 1.Decision Tree","fc738dc0":"## 4.Random Forest"}}