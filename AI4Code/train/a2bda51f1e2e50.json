{"cell_type":{"c20523c6":"code","980e12b8":"code","63b66753":"code","aab46a78":"code","f98dedd2":"code","feb42fca":"code","416b3157":"code","e5a5b72a":"code","8efcbdb3":"code","28d38265":"code","f9e82f47":"code","8ad2e35e":"code","680364fe":"code","8915c371":"code","19dcfa45":"code","2d1ea4ab":"code","e38dc8d1":"code","fc69b3ff":"code","6783d46c":"code","909f1fdd":"code","4c583c0e":"code","8760e456":"code","ed8443f7":"code","48ef82c4":"code","26bc59b4":"code","bf11d187":"code","641a8581":"code","9e168e2c":"code","1fcd282c":"code","c5281ec9":"code","0c47724a":"code","5ae22c39":"code","a02eda4c":"code","e571e7e2":"code","4ef08b6e":"code","98e8e03d":"code","7271110f":"code","222e493d":"markdown","ced243de":"markdown","ae334617":"markdown","956e44e4":"markdown","edf5a1b8":"markdown","11bf6706":"markdown","354d35c1":"markdown","0a48b85a":"markdown","d3b28a03":"markdown","271bfda8":"markdown","9e157614":"markdown","523c39c8":"markdown","292fe3d7":"markdown","b4ae1e0f":"markdown","f961305d":"markdown","8b827844":"markdown","7c6970f0":"markdown","e9911811":"markdown","db65063e":"markdown","26be1c41":"markdown","6f9322a4":"markdown","bad0f654":"markdown","addde21a":"markdown","3cd7dccf":"markdown"},"source":{"c20523c6":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.preprocessing import RobustScaler\nfrom sklearn.model_selection import train_test_split\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report,roc_auc_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom catboost import CatBoostClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import make_scorer,r2_score\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(action=\"ignore\")","980e12b8":"df=pd.read_csv(\"\/kaggle\/input\/creditcardfraud\/creditcard.csv\")\ndf.sample(5)","63b66753":"df.shape","aab46a78":"print(f\"Our dataset has {df.shape[1]} columns and {df.shape[0]} rows\")","f98dedd2":"df.columns","feb42fca":"df.info()","416b3157":"df.describe()","e5a5b72a":"df.isnull().sum()","8efcbdb3":"df.corr().style.background_gradient(cmap=\"BrBG\")","28d38265":"plt.figure(figsize=(12,8))\nsns.heatmap(df.corr(),annot=True,fmt=\".1f\",cmap=\"BuGn\")","f9e82f47":"plt.figure(figsize=(8,6))\nsns.displot(df[\"Time\"],kind=\"kde\",multiple=\"stack\")","8ad2e35e":"df[\"Time\"].hist(bins=50)","680364fe":"plt.figure(figsize=(8,4))\nsns.boxplot(df[\"Amount\"],linewidth=2.0,dodge=True,palette=\"Set1\")","8915c371":"plt.figure(figsize=(8,4))\nsns.boxplot(df[\"Time\"],linewidth=2.0,dodge=True,palette=\"Set2\")","19dcfa45":"plt.figure(figsize=(8,4))\nsns.countplot(df[\"Class\"])\nplt.title(\"Countplot of the target variable\")","2d1ea4ab":"rbst = RobustScaler()\ndf['Amount'] = rbst.fit_transform(df['Amount'].values.reshape(-1,1))\ndf['Time'] = rbst.fit_transform(df['Time'].values.reshape(-1,1))","e38dc8d1":"X=df.iloc[:,:-1].values\nY=df.iloc[:,-1].values\n\nprint(X[:3])\nprint(Y[:3])","fc69b3ff":"X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=0)\nprint(\"Training Cases:%drows  \\n  Testing cases :%drows\"%(X_train.shape[0],X_test.shape[0]))","6783d46c":"sm=SMOTE(random_state=24)\nX_smote,Y_smote=sm.fit_resample(X_train,Y_train)","909f1fdd":"reg=0.01\nmodel=LogisticRegression(C=1\/reg,solver='liblinear')\nmodel.fit(X_smote,Y_smote)\nprint(model)","4c583c0e":"Yhat=model.predict(X_test)\nprint(\"Predicted labels:\",Yhat[0:10])\nprint(\"Actual labels:\",Y_test[0:10])\n","8760e456":"print(\"Accuracy:\",accuracy_score(Y_test,Yhat))\nprint(classification_report(Y_test,Yhat))\nprint(f\"ROC AUC Score for Logistic Regression : {roc_auc_score(Yhat,Y_test)}\")","ed8443f7":"cm=confusion_matrix(Y_test,Yhat,normalize=None)\nsns.heatmap(data=cm,fmt=\".1f\",annot=True)","48ef82c4":"rf=RandomForestClassifier()\nrf.fit(X_smote,Y_smote)\nprint(rf)","26bc59b4":"Yhat2=rf.predict(X_test)\nprint(f\"Actual labels:{Y_test[:10]}\")\nprint(f\"Predicted labels:{Yhat2[:10]}\")","bf11d187":"print(f\"Accuracy:{accuracy_score(Y_test,Yhat2)}\")\nprint(classification_report(Y_test,Yhat2))\nprint(f\"ROC AUC score for Random Forest Classifier:{roc_auc_score(Y_test,Yhat2)} \")","641a8581":"cm2=confusion_matrix(Y_test,Yhat2,normalize=None)\nsns.heatmap(data=cm2,fmt=\".1f\",annot=True)","9e168e2c":"cat_classifier = CatBoostClassifier(iterations=250,verbose=False)\ncat_classifier.fit(X_smote,Y_smote)","1fcd282c":"y_hat3 = cat_classifier.predict(X_test)\nreport3 = classification_report(y_hat3, Y_test)\nprint(report3)\nprint(f\"Accuracy: {accuracy_score(y_hat3, Y_test)}\")\nprint(f\"ROC AUC Score for Cat Boost Classifier: {roc_auc_score(y_hat3, Y_test)}\")","c5281ec9":"cm3=confusion_matrix(Y_test,y_hat3,normalize=None)\nsns.heatmap(data=cm3,fmt=\".1f\",annot=True)","0c47724a":"grb = GradientBoostingClassifier()\ngrb.fit(X_smote,Y_smote)","5ae22c39":"y_hat4 = grb.predict(X_test)\nreport4 = classification_report(y_hat4, Y_test)\nprint(report4)\nprint(f\"Accuracy: {accuracy_score(y_hat4, Y_test)}\")\nprint(f\"ROC AUC Score for Gradient Boosting Classifier: {roc_auc_score(y_hat4, Y_test)}\")","a02eda4c":"cm4=confusion_matrix(Y_test,y_hat4,normalize=None)\nsns.heatmap(data=cm4,fmt=\".1f\",annot=True)","e571e7e2":"st=StandardScaler()\nscale=st.fit_transform(X_smote,Y_smote)\nprint(scale[:3])\n","4ef08b6e":"pipeline=Pipeline(steps=[('t',st),('m',rf)])\ny_hat5=pipeline.predict(X_test)\nprint(f\"Actual labels:{Y_test[:10]}\")\nprint(f\"Predicted labels:{y_hat5[:10]}\")\n","98e8e03d":"print(f\"Accuracy:{accuracy_score(Y_test,y_hat5)}\")\nprint(classification_report(Y_test,y_hat5))\nprint(f\"New ROC AUC score for the model:{roc_auc_score(Y_test,y_hat5)}\")","7271110f":"cm5=confusion_matrix(y_hat5,Y_test,normalize=None)\nsns.heatmap(data=cm5,fmt=\".1f\",annot=True,cmap=\"icefire\")","222e493d":"# \ud83d\udcca Exploratory Data Analysis (EDA)\n\nLet's create some simple plots to check out the data!","ced243de":"# \ud83d\udce6 Robust Scaler\n>Robust Scaler is used for resolving the outliers","ae334617":"# \ud83d\udcca Models Comparison","956e44e4":"# \ud83d\udce4 Import Libraries","edf5a1b8":"**After the standarisation of our RandomForestClassifier model the final accuracy was 99.83% and ROC AUC Score was 0.5272.** ","11bf6706":"![](https:\/\/th.bing.com\/th\/id\/R.33622c01c294962a8921d1ceb6ffded3?rik=R5f9fQztRTIaUg&riu=http%3a%2f%2fsd.keepcalm-o-matic.co.uk%2fi-w600%2fthank-you-for-watching-and-hope-you-enjoyed-watching-it-1.jpg&ehk=ZHLoVkHVTd0M%2f1SRFr0L7WGmn9ToUnthIlDtx4pqoFA%3d&risl=&pid=ImgRaw&r=0)","354d35c1":"![](https:\/\/cdn-images-1.medium.com\/max\/1600\/1*_QGyIwpgq831xI54cIe_GQ.jpeg)","0a48b85a":"## \ud83d\udcbe Check out the Data","d3b28a03":"**We can check the correlation using df.corr() and plot the heatmap**","271bfda8":"# \ud83d\udcc8 Classification Model with Python\n\n> Classification is the simplest algorithm in machine learning, it can be trained in different ways. In this notebook we will cover the following Classification algorithms:\n>1. Random Forest Classifier\n>2. Decision Trees \n>3. CatBoost Classifier\n>4. Gradient Boosting Classifier\n>5. Logistic Regression\n>6. Simple Vector Machine(SVM)\n\n# \ud83d\udcbe Data\n\n>The dataset contains transactions made by credit cards in September 2013 by European cardholders.\nThis dataset presents transactions that occurred in two days, where we have 492 frauds out of 284,807 transactions. The dataset is highly unbalanced, the positive class (frauds) account for 0.172% of all transactions.\n\n>It contains only numerical input variables which are the result of a PCA transformation. Unfortunately, due to confidentiality issues, we cannot provide the original features and more background information about the data. \n>Features V1, V2, \u2026 V28 are the principal components obtained with PCA, the only features which have not been transformed with PCA are 'Time' and 'Amount'. \n>Feature 'Time' contains the seconds elapsed between each transaction and the first transaction in the dataset. \n>The feature 'Amount' is the transaction Amount, this feature can be used for example-dependant cost-sensitive learning. \n>Feature 'Class' is the response variable and it takes value 1 in case of fraud and 0 otherwise.\n","9e157614":"![](https:\/\/dataaspirant.com\/wp-content\/uploads\/2020\/08\/3_confusion_matrix.png)","523c39c8":"# \u2714\ufe0f Logistic Regression\n\n","292fe3d7":"#  \ud83d\udce6 Normalisation using StandardScaler","b4ae1e0f":"# \ud83d\udcc8 Training the Classification Model\n\n> Let's now begin to train out classification model! We will need to first split up our data into an X array that contains the features to train on, and a Y array with the target variable, in this case the Class column. \n\n## X and Y arrays","f961305d":"# Credit Card Fraud Detection Project \n>**By Aman Satyam (A2305219642) 5 CSE 11 X**","8b827844":"# \u2714\ufe0f Cat Classifier","7c6970f0":"## \ud83e\uddf1 Train Test Split\n","e9911811":"# \u2714\ufe0f Random Forest Classifier","db65063e":"We can see that Random Forest Classifier is having more accuracy and ROC_AUC Score than other Classifier. The value of accuracy and ROC_AUC score for RandomForestClassifier are 99.96% and 0.5306 respectively. So we will choose RandomForestClassifier model and use various technique for improving its accuracy further.","26be1c41":"#  \ud83d\udce6 SMOTE\n>For handling class imbalance","6f9322a4":"# \u2714\ufe0f Gradient Boosting Classifier","bad0f654":"# \ud83d\udcdd Summary\nIn this notebook i discovered the Classification algorithm for machine learning.\n\nWe covered a lot of ground including:\n> - The common Classification models used in the notebook(Random Forest Classifier,CatBoost Classifier,Gradient Boosting Classifier,Logistic Regression ...).\n> - ROC AUC score and Accuracy are used to estimate the best model.\n> - How to evaluate a Classification model.\n> - We learn to use Robust Scaler and SMOTE.\n> - We also learn to visualize and understand Classification report and Confusion Matrix .\n","addde21a":"![](http:\/\/th.bing.com\/th\/id\/R.97b2b5c31f3ad3bd9ede429de11dbdcb?rik=to4Gf7Hi86NoQg&riu=http%3a%2f%2fgntech.ae%2fwp-content%2fuploads%2f2017%2f02%2fE6E5E731-1BA5-4C7D-8741-72D5BAE05F31-1.jpg&ehk=oMkIQqxg%2fesfpQB0TJ3YTpMCKo2erQleZAv9xKsfTEs%3d&risl=&pid=ImgRaw&r=0)","3cd7dccf":"# \ud83d\udce6 Confusion Matrix"}}