{"cell_type":{"59732168":"code","c913ebb4":"code","1feb0843":"code","4fe6a23b":"code","28498787":"code","c9e71ee9":"code","0f9122fa":"code","48ab2930":"code","171a7971":"code","35073e11":"code","da31aa05":"code","8935dba3":"code","d50c7e8c":"code","eca80d93":"code","f65e53d5":"code","d3c59d0c":"code","57168083":"code","44174e91":"code","d7c0c898":"code","f9c25d93":"code","6f506f0e":"code","1597107f":"code","a853bd4c":"code","3aad47b6":"code","832c8148":"code","18a8666f":"markdown","94dc72ca":"markdown","11d02fc1":"markdown","79cb9d10":"markdown"},"source":{"59732168":"import pandas as pd\nimport numpy as np\n\ntrain_path = '..\/input\/train.csv'\ntest_path = '..\/input\/test.csv'\n\ntrain = pd.read_csv(train_path, index_col = 'PassengerId' )\ntest= pd.read_csv(test_path, index_col = 'PassengerId')\ntrain.head()","c913ebb4":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\ndef bar_plot(cat):\n    live = train[train['Survived'] == 1][cat].value_counts()\n    dead = train[train['Survived'] == 0][cat].value_counts()\n    df = pd.DataFrame([live, dead, live\/dead],['live', 'dead', 'live\/dead'])\n    print(df)\n    df.plot.bar(stacked = True)","1feb0843":"# number of male are more dead than number of female\nbar_plot('Sex')","4fe6a23b":"# Class 1 people having more survival chance than class 3\n\nbar_plot('Pclass')","28498787":"# Siblings and Spouse\nbar_plot('SibSp')","c9e71ee9":"# Parent and Child\nbar_plot('Parch')","0f9122fa":"# Embarked\nbar_plot(\"Embarked\")","48ab2930":"train.info()","171a7971":"# Age 177  , Cabin 687\ntrain.isnull().sum()","35073e11":"# Age 87, Cabin 327\ntest.isnull().sum()","da31aa05":"# fill the \"Age\" missing values in train and test dataset \ncombined = [train, test]\nfor df in combined:\n    df['Name']=df['Name'].str.extract(pat = '([\\w]+)\\.', expand=True)   ","8935dba3":"train['Name'].head()","d50c7e8c":"map_title = {\"Mr\": 0, \"Miss\": 1, \"Mrs\": 2, \n                 \"Master\": 3, \"Dr\": 3, \"Rev\": 3, \"Col\": 3, \"Major\": 3, \"Mlle\": 3,\"Countess\": 3,\n                 \"Ms\": 3, \"Lady\": 3, \"Jonkheer\": 3, \"Don\": 3, \"Dona\" : 3, \"Mme\": 3,\"Capt\": 3,\"Sir\": 3 }\nfor df in combined:\n    df['Name']=df['Name'].map(map_title)","eca80d93":"train.head()","f65e53d5":"# fill missing 'Age' values \ntrain['Age'].fillna(train.groupby('Name')['Age'].transform('median'),inplace=True)\ntest['Age'].fillna(test.groupby('Name')['Age'].transform('median'),inplace=True)","d3c59d0c":"sex_map = {'male': 0, 'female': 1}\nfor df in combined:\n    df['Sex'] = df['Sex'].map(sex_map)\n    ","57168083":"for df in combined:\n    df['Age'] = np.where(df['Age'] <= 14, 0, df['Age'])\n    df['Age'] = np.where((df['Age'] >14) & (df['Age'] <= 24), 1 ,df['Age'])\n    df['Age'] = np.where((df['Age'] > 24) & (df['Age'] <=64 ), 2, df['Age'])\n    df['Age'] = np.where(df['Age'] >64, 3, df['Age'])","44174e91":"train.head()","d7c0c898":"train['Cabin'].value_counts()","f9c25d93":"train.sample(40).plot.scatter(x='Pclass', y= 'Fare')","6f506f0e":"features = [\"Pclass\", \"Name\", \"Sex\", \"Age\", \"SibSp\", \"Parch\"]\ntarget = [\"Survived\"]\n\nXtrain = train[features]\nytrain = train[target]\nXtest = test[features]","1597107f":"from sklearn.model_selection import train_test_split\nX_train, X_val, y_train, y_val = train_test_split(Xtrain, ytrain, test_size=0.33, random_state=42)","a853bd4c":"#from xgboost import XGBRegressor\n\nfrom xgboost import XGBClassifier\nmy_model = XGBClassifier()\nmy_model.fit(X_train, y_train, \n             early_stopping_rounds=5, \n             eval_set=[(X_val, y_val)], \n             verbose=False)","3aad47b6":"ytest = my_model.predict(Xtest)","832c8148":"df = pd.read_csv(\"..\/input\/gender_submission.csv\")\ndf[\"Survived\"] = ytest\ndf.to_csv(\"submission.csv\", index = False)","18a8666f":"## Introduction\n### 1.1 Load data","94dc72ca":"## 2 check for missing values and label encoding","11d02fc1":"## 1. Introduction\n* Load data\n*  Data Analysis\n\n## 2. Data Preparation\n* Check for null and missing values\n* Label encoding\n\n## 3. Define model \n* check different models\n* Evaluate different model\n\n## 4. Prediction and Submission","79cb9d10":"### 1.2 Data Analysis"}}