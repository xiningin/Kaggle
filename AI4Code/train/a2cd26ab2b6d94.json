{"cell_type":{"164f96bc":"code","4753b07b":"code","0751ab2d":"code","83c1adfe":"code","1e6bf7b7":"code","ad4219d7":"code","81825ea0":"code","d93db99a":"code","43874b04":"code","80b06e4e":"code","eb2ee7b2":"code","01d508d8":"code","08e45575":"code","1f6d38cc":"code","e4be12d9":"markdown","0d393125":"markdown","dd3c83b8":"markdown","50920ebb":"markdown","d3026b80":"markdown","58465648":"markdown","c1c07834":"markdown","fa22fa57":"markdown","f3c1bd03":"markdown","7e5d192b":"markdown","846bf901":"markdown","76c65c33":"markdown"},"source":{"164f96bc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\n\nimport warnings\nwarnings.simplefilter('ignore')\nwarnings.filterwarnings('ignore')\n\nimport seaborn as sns\nimport matplotlib as p\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport plotly.graph_objs as gobj\nfrom plotly.offline import download_plotlyjs,init_notebook_mode,plot,iplot\ninit_notebook_mode(connected=True)\n\nimport plotly.express as px       \nimport plotly.offline as py       \nimport plotly.graph_objects as go \nfrom plotly.subplots import make_subplots\n\nimport re","4753b07b":"pd.set_option('display.max_columns', 200)\nus_hosp_cap = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/harvard_global_health_institute\/hospital-capacity-by-state-60-population-contracted.csv')\nus_death_cases = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/USAFacts\/confirmed-covid-19-deaths-in-us-by-state-and-county.csv')\nus_confirmed_cases = pd.read_csv('\/kaggle\/input\/uncover\/UNCOVER\/USAFacts\/confirmed-covid-19-cases-in-us-by-state-and-county.csv')\ndisplay(us_hosp_cap.head())\ndisplay(us_death_cases.head())\ndisplay(us_confirmed_cases.head())","0751ab2d":"deaths_by_states = us_death_cases.groupby(['state_name'])['deaths'].sum().to_frame(name = 'sum')\ndeaths_by_states = deaths_by_states.sort_values('sum', ascending = False).reset_index()\ndeaths_by_states.head()","83c1adfe":"confirmed_by_states = us_confirmed_cases.groupby(['state_name'])['confirmed'].sum().to_frame(name = 'sum')\nconfirmed_by_states = confirmed_by_states.sort_values('sum', ascending = False).reset_index()\nconfirmed_by_states.head()","1e6bf7b7":"fig = go.Figure()\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\nfig.add_trace(go.Scatter(x=deaths_by_states['state_name'], y=deaths_by_states['sum'], name='<b>Deaths by State', marker_color='rgb(255, 64, 64)'), secondary_y = True)\nfig.add_trace(go.Bar(x=confirmed_by_states['state_name'],y=confirmed_by_states['sum'],name='<b>Confirmed by State',marker_color='rgb(255, 185, 15)'))\n\nconfig = dict({'scrollZoom': True})\n\nfig.update_layout(title='<b>Analysis of Death and Confirmed Cases',xaxis_tickfont_size=14,\n                  yaxis=dict(title='<b>Confirmed',titlefont_size=16,tickfont_size=14,),\n    legend=dict(x=0.5,y=1.0,bgcolor='rgba(255, 255, 255, 0)',bordercolor='rgba(255, 255, 255, 0)'),\n    barmode='group',bargap=0.15, bargroupgap=0.1)\n\nfig.update_xaxes(title_text=\"<b>State\")\nfig.update_yaxes(title_text=\"<b>Deaths\", secondary_y=True)\n\nfig.show()","ad4219d7":"combined_df = pd.merge(deaths_by_states, confirmed_by_states, on = 'state_name')\ncombined_df = combined_df.rename(columns = {'sum_x': 'deaths', 'sum_y': 'confirmed'})\ncombined_df['death_ratio'] = (combined_df['deaths']\/combined_df['confirmed'])*100\ncombined_df = combined_df.sort_values('death_ratio', ascending = True).reset_index(drop=True).round(3)\ncombined_df.head()","81825ea0":"plt.figure(figsize=(20,20))\nplt.barh(combined_df['state_name'], combined_df['death_ratio'])\nplt.title('Death Ratio by State wr.r.t Confirmed Cases', fontsize = 20, color = 'black')\nfor index, value in enumerate(combined_df['death_ratio']):\n    plt.text(value, index, str(value))","d93db99a":"us_hosp_cap.head()","43874b04":"# Extracting Columns for ICU\nimport re\nl = ['state', 'projected_infected_individuals']\ncol = us_hosp_cap.columns.to_list()\n\nfor i in col:\n        # The . symbol is used in place of ? symbol\n        if re.search('icu', i) : \n                l.append(i)\nl","80b06e4e":"icu_df = us_hosp_cap[l]\nicu_df.head()","eb2ee7b2":"icu_df_1 = icu_df[['state', 'potentially_available_icu_beds', 'projected_individuals_needing_icu_care']]\nicu_df_1['ratio'] = (icu_df_1['projected_individuals_needing_icu_care']\/icu_df_1['potentially_available_icu_beds'])*100\nicu_df_1 = icu_df_1.sort_values('ratio', ascending=False).reset_index(drop=True).round()\nicu_df_1.head()","01d508d8":"fig = go.Figure()\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\nfig.add_trace(go.Scatter(x=icu_df_1['state'], y=icu_df_1['potentially_available_icu_beds'], name='Potentially Available ICU Beds', marker_color='rgb(162, 205, 90)'), secondary_y = True)\nfig.add_trace(go.Bar(x=icu_df_1['state'],y=icu_df_1['projected_individuals_needing_icu_care'],name='Projected Individuals Needing ICU Care',marker_color='rgb(255, 185, 15)'))\nfig.add_trace(go.Bar(x=icu_df_1['state'], y=icu_df_1['ratio'], name='Ratio', marker_color='rgb(255, 64, 64)'))\n\nfig.update_layout(title='<b>Potentially Available ICU Beds & Projected Individuals Needing ICU Care',xaxis_tickfont_size=14,\n                  yaxis=dict(title='<b>Project Individuals Needing ICU Care Count',titlefont_size=16,tickfont_size=14,),\n    legend=dict(x=0.5,y=1.0,bgcolor='rgba(255, 255, 255, 0)',bordercolor='rgba(255, 255, 255, 0)'),\n    barmode='group',bargap=0.15, bargroupgap=0.1)\n\n\nfig.update_xaxes(title_text=\"<b>State\")\nfig.update_yaxes(title_text=\"<b>Potentially Available ICU Beds Count\", secondary_y=True)\n\nfig.show()","08e45575":"icu_df_2 = icu_df[['state', 'projected_infected_individuals', 'projected_individuals_needing_icu_care']]\nicu_df_2['ratio'] = (icu_df_2['projected_infected_individuals']\/icu_df_2['projected_individuals_needing_icu_care'])\nicu_df_2 = icu_df_2.sort_values('ratio', ascending=False).reset_index(drop=True).round(2)\nicu_df_2.head()","1f6d38cc":"fig = go.Figure()\nfig = make_subplots(specs=[[{\"secondary_y\": True}]])\nfig.add_trace(go.Bar(x=icu_df_2['state'], y=icu_df_2['projected_infected_individuals'], name='Projected Infected Individuals', marker_color='rgb(162, 205, 90)'))\nfig.add_trace(go.Bar(x=icu_df_2['state'],y=icu_df_2['projected_individuals_needing_icu_care'],name='Projected Individuals Needing ICU Care',marker_color='rgb(255, 185, 15)'))\nfig.add_trace(go.Scatter(x=icu_df_2['state'], y=icu_df_2['ratio'], name='Ratio', marker_color='rgb(255, 64, 64)'), secondary_y = True)\n\nfig.update_layout(title='<b>Projected Infected Individuals & Projected Individuals Needing ICU Care',xaxis_tickfont_size=14,\n                  yaxis=dict(title='<b>Project Individuals Needing ICU Care Count',titlefont_size=16,tickfont_size=14,),\n    legend=dict(x=0.5,y=1.0,bgcolor='rgba(255, 255, 255, 0)',bordercolor='rgba(255, 255, 255, 0)'),\n    barmode='group',bargap=0.15, bargroupgap=0.1)\n\n\nfig.update_xaxes(title_text=\"<b>State\")\nfig.update_yaxes(title_text=\"<b>Ratio\", secondary_y=True)\n\nfig.show()","e4be12d9":"## 3.1 Analysis of ICU <a class=\"anchor\" id=\"3.1\"><\/a>\n\n[Back to Table of Contents](#0.1)","0d393125":"## **Potentially Available ICU Beds & Projected Individuals Needing ICU Care**\n* **States like HI, VT, NH, SD, PR (to quote a few) would require ICU beds based on the Projected Individuals Needing ICU Care. And VT would definitely be a State to focus on owing to the highest death ratio w.r.t. confirmed cases of 4.872**\n* **States like DC, IN, MD, AL, MO (to quote a few) relatively have smaller ratio for ICU Care Needing Patients to ICU Beds**","dd3c83b8":"<a class=\"anchor\" id=\"0.1\"><\/a>\n## Table of Contents\n\n1. [Libraries, Reading Files](#1)\n1. [Analysis of Death and Confirmed Cases by State](#2)\n    -  [2.1 Plot of Death and Confirmed Cases by State](#2.1)\n    -  [2.2 Plot of Death Ratio by State w.r.t. Confirmed Cases ](#2.2)\n    -  [2.3 Admitted to ICU](#2.3)\n1. [Analysis of Hospital Capacity](#3)\n    -  [3.1 Analysis of ICU](#3.1)","50920ebb":"## **Projected Infected Individuals & Projected Individuals Needing ICU Care**\n* **The ratio did not exhbit a large range (between 21-24) while trying to look at the projected infected individuals might needing ICU care**","d3026b80":"# Which populations have contracted COVID-19 and require ventilators?\n# Which populations have contracted COVID-19 who require the ICU?","58465648":"## 3. Analysis of Hospital Capacity <a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","c1c07834":"### **I'm going with my naive assumption of ICU and Ventilator requirement being correlated**\n### ** Initial analysis of Death and Confirmed Cases is done to assist the Hospital Capacity Analysis that follows**","fa22fa57":"## To be continued....","f3c1bd03":"## 2.1 Plot of Death and Confirmed Cases by State <a class=\"anchor\" id=\"2.1\"><\/a>\n\n[Back to Table of Contents](#0.1)","7e5d192b":"## 2.2 Plot of Death Ratio by State w.r.t. Confirmed Cases <a class=\"anchor\" id=\"2.2\"><\/a>\n\n[Back to Table of Contents](#0.1)","846bf901":"## 2. Analysis of Death and Confirmed Cases by State <a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","76c65c33":"## 1. Libraries, Reading Files <a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)"}}