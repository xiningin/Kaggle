{"cell_type":{"c3443e3a":"code","d3870780":"code","182ae4c1":"code","de108cdd":"code","19ac5ffc":"code","7247620b":"code","f95bac6d":"code","88a4f474":"code","6ac0f764":"code","7f76754c":"code","0e8db029":"markdown","dc39629c":"markdown","7e31ecbb":"markdown","7180a806":"markdown","6f350fac":"markdown","1c6e2d4d":"markdown","512ea0f8":"markdown","b2ceb93f":"markdown","0ade4219":"markdown"},"source":{"c3443e3a":"import numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd","d3870780":"dataset = pd.read_csv('..\/input\/Social_Network_Ads.csv')\nX = dataset.iloc[:, [2,3]].values\ny = dataset.iloc[:, 4].values","182ae4c1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)\n","de108cdd":"from sklearn.preprocessing import StandardScaler\nsc_X = StandardScaler()\nX_train = sc_X.fit_transform(X_train)\nX_test = sc_X.transform(X_test)","19ac5ffc":"from sklearn.neighbors import KNeighborsClassifier\nclassifier=KNeighborsClassifier(n_neighbors=5,metric='minkowski',p=2)\nclassifier.fit(X_train,y_train)","7247620b":"y_pred=classifier.predict(X_test)\nprint(y_pred)","f95bac6d":"from sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_pred)\nprint(cm)\n","88a4f474":"from sklearn.metrics import accuracy_score\nacc=accuracy_score(y_test, y_pred)\nprint(acc)","6ac0f764":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_train, y_train\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Training set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()","7f76754c":"from matplotlib.colors import ListedColormap\nX_set, y_set = X_test, y_test\nX1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.01),\n                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.01))\nplt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),\n             alpha = 0.75, cmap = ListedColormap(('red', 'green')))\nplt.xlim(X1.min(), X1.max())\nplt.ylim(X2.min(), X2.max())\nfor i, j in enumerate(np.unique(y_set)):\n    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],\n                c = ListedColormap(('red', 'green'))(i), label = j)\nplt.title('Classifier (Test set)')\nplt.xlabel('Age')\nplt.ylabel('Estimated Salary')\nplt.legend()\nplt.show()\n\n","0e8db029":"importing library\n*  NumPy is a package in Python used for Scientific Computing. The ndarray (NumPy Array) is a multidimensional array used to store values of same datatype\n* matplotlib.pyplot for data visualization \n* pandas for data manipulation  \n","dc39629c":"importing dataset to x and y","7e31ecbb":"confusion_matrix","7180a806":" Visualising the Test set results\n","6f350fac":"fitting model","1c6e2d4d":"Predicting a new result","512ea0f8":" Visualising the Training set results\n","b2ceb93f":"Splitting the dataset into the Training set and Test set","0ade4219":" Feature Scaling"}}