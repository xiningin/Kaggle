{"cell_type":{"1f9e38c9":"code","70993f11":"code","cfdd14a0":"code","3f479a2a":"code","00dfef4d":"code","de777f65":"code","3407123c":"code","b48299ab":"code","3e209a70":"code","79de188c":"code","64fa1b20":"code","8eda9131":"code","dd52d1fb":"code","34921c98":"code","c91ff9da":"code","6247c7db":"code","d33c8ad5":"code","413248a9":"code","06a64b48":"code","6f6fadfb":"code","f36ed8ac":"code","e2fce9a5":"code","b2318f62":"code","757cc17c":"code","894e6be2":"code","0c1116ee":"code","f178663b":"code","e57c825b":"code","ea73b845":"code","2046cd65":"code","cc8b61c0":"code","252a71fc":"code","4c7d9b77":"markdown","56e74202":"markdown","7f05538e":"markdown","0f6b9b02":"markdown","addc1a86":"markdown","5c3c6f75":"markdown","c1fa4361":"markdown","0cf52549":"markdown","c960c2f3":"markdown","f53021ea":"markdown","f0af2e58":"markdown","2e9f8b00":"markdown","b06f2d28":"markdown","d9fdc67e":"markdown","1ef39a5e":"markdown"},"source":{"1f9e38c9":"import numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy.stats import kurtosis, skew\n\nsns.set()\nsns.set_style(\"white\")\ndf = pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\nprint(\"Sneakpeek of the dataset\\n\")\nprint(f\"This dataset has {df.shape[0]} rows and {df.shape[1]} columns.\\n\\nThe columns are:\\n\")\nfor thing in df.columns:\n    print(f\"{thing}\", end = \" | \")\n\nprint(\"\\n\\nSample of the data:\")\n    \ndf.sample(5)","70993f11":"df.describe()","cfdd14a0":"df.info()","3f479a2a":"print(\"NaNs?\")\ndf.isna().sum()","00dfef4d":"print(\"Unique values in each column:\")\ndf.nunique(axis=0)","de777f65":"numeric = [\n    \"age\",\n    \"trestbps\",\n    \"chol\",\n    \"thalach\",\n    \"oldpeak\"\n]\n\ncat = [\n    \"sex\",\n    \"cp\",\n    \"fbs\",\n    \"restecg\",\n    \"exang\",\n    \"slope\",\n    \"ca\",\n    \"thal\"\n]","3407123c":"corr = df.corr()\nmask = np.triu(np.ones_like(corr, dtype=bool))\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(20, 15));\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, mask=mask, cmap=sns.color_palette(\"vlag\", as_cmap=True), annot=True, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5}, fmt=\".2f\");\nplt.title(\"Correlation matrix\");","b48299ab":"print(\"Distribution of sexes:\")\nsexes = df\nsexes[\"sex\"].replace({1: \"Male\", 0: \"Female\"}, inplace=True)\nprint(sexes[\"sex\"].value_counts())\n\nsexes = sexes[\"sex\"].value_counts().to_frame().reset_index().rename(columns={'index': \"Sex\", \"sex\": \"Count\"})\nplt.figure(figsize=(7, 7))\nsns.set_style(\"white\")\nsns.barplot(data=sexes, x=\"Sex\", y=\"Count\", palette=\"muted\", alpha=0.6);\nsns.set(font_scale=1.3)\nsns.despine()\nplt.title(\"Distribution of Sexes\");","3e209a70":"sns.set_style(\"white\")\nsns.displot(df, x=\"age\", hue=\"target\", kind=\"kde\", col=\"sex\", fill=True, alpha=0.5, palette=\"muted\");\nsns.despine()\n# plt.title(\"Distribution of age\");\nplt.axvline(df['age'].mean(), c=\"orange\", ls=\"-\", lw=1, label=\"mean\")\nplt.axvline(df['age'].median(), c=\"darkblue\", ls=\"--\", lw=1, label=\"median\")\nplt.legend();","79de188c":"plt.figure(figsize=(7, 7))\nsns.violinplot(data=df, x=\"sex\", y=\"age\", hue=\"target\", palette=\"pastel\", split=True, inner=\"box\", \n               scale=\"width\");\nsns.despine()\nplt.title(\"Age, sex and heartbreaks\");","64fa1b20":"print(f\"There are {df[(df['sex'] == 'Male') & (df['target'] == 1)].shape[0]} diseased males.\")\nprint(f\"There are {df[(df['sex'] == 'Male') & (df['target'] == 0)].shape[0]} fit males.\")\nprint(f\"There are {df[(df['sex'] == 'Female') & (df['target'] == 1)].shape[0]} diseased females.\")\nprint(f\"There are {df[(df['sex'] == 'Female') & (df['target'] == 0)].shape[0]} fit females.\")","8eda9131":"sns.displot(data=df, x=\"cp\", hue=\"target\", discrete=True, palette=\"muted\", alpha=0.5);\nplt.title(\"Type of Chest Pain and Heart Disease\");","dd52d1fb":"df[\"trestbps\"].describe()","34921c98":"sns.kdeplot(data=df, x=\"trestbps\", hue=\"target\", fill=True, alpha=0.5);\nsns.despine()\nplt.title(\"Distribution of resting blood pressure\");","c91ff9da":"diseased = df[df[\"target\"] == 1]\nfit = df[df[\"target\"] == 0]\n\nprint(f\"Kurtosis of resting blood pressure of the diseased: {kurtosis(diseased['trestbps'])}\")\nprint(f\"Skewness of resting blood pressure of the diseased: {skew(diseased['trestbps'])}\")\n\nprint(f\"\\nKurtosis of resting blood pressure of the fit people: {kurtosis(fit['trestbps'])}\")\nprint(f\"Skewness of resting blood pressure of the fit people: {skew(fit['trestbps'])}\")","6247c7db":"plt.figure(figsize=(7, 7))\nsns.violinplot(data=df, x=\"target\", y=\"trestbps\", hue=\"sex\", split=True, inner=\"quartile\", palette=\"muted\", alpha=0.5);\nsns.despine()","d33c8ad5":"from bokeh.resources import INLINE\nimport bokeh.io\nfrom bokeh import *\nbokeh.io.output_notebook(INLINE)","413248a9":"from bokeh.plotting import figure, show\nfrom bokeh.models import ColorBar, ColumnDataSource\nfrom bokeh.palettes import Viridis3\nfrom bokeh.transform import linear_cmap","06a64b48":"Viridis3 = Viridis3[0:2]\nmapper = linear_cmap(field_name='target', palette=Viridis3 ,low=0 ,high=1)\n\nsource = ColumnDataSource(dict(x=df[\"age\"],y=df[\"target\"]))\n\np = figure(title=\"Age and Cholestrol\", y_axis_label='Cholestrol', x_axis_label='Age')\np.circle(y=\"chol\", x=\"age\", line_color=mapper,color=mapper, fill_alpha=0.8, size=8, source=df)\n\ncolor_bar = ColorBar(color_mapper=mapper['transform'], width=8)\n\np.add_layout(color_bar, 'right')\n\nshow(p)","6f6fadfb":"from sklearn.base import clone\n\nfrom sklearn.model_selection import train_test_split, StratifiedShuffleSplit, StratifiedKFold\n\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.pipeline import Pipeline\n\nfrom sklearn.linear_model import LogisticRegression, SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.model_selection import cross_val_score\n\nfrom sklearn.tree import export_graphviz\n","f36ed8ac":"df_dr = df.drop([\"age\", \"chol\"], axis=1)","e2fce9a5":"numeric = [\n    \"trestbps\",\n    \"thalach\",\n    \"oldpeak\"\n]\n\ncat = [\n    \"sex\",\n    \"cp\",\n    \"fbs\",\n    \"restecg\",\n    \"exang\",\n    \"slope\",\n    \"ca\",\n    \"thal\"\n]","b2318f62":"one_hot = pd.get_dummies(df_dr, columns=cat)","757cc17c":"one_hot.columns","894e6be2":"X_train, X_test, y_train, y_test = train_test_split(one_hot.drop(\"target\", axis=1), one_hot[\"target\"], test_size = 0.25, random_state = 0)","0c1116ee":"preprocessor = ColumnTransformer([\n    (\"num\", StandardScaler(), numeric)\n])","f178663b":"sc = StandardScaler()","e57c825b":"# train_features = preprocessor.fit_transform(X_train)\n# test_features = preprocessor.transform(X_test)\ntrain_features = sc.fit_transform(X_train)\ntest_features = sc.transform(X_test)","ea73b845":"def evaluate_model(mod, processed_train_x, train_y, processed_test_x, test_y, supress_out=False):\n    if not supress_out:\n        fig, axes = plt.subplots(1, 2, figsize=(15, 5))\n    \n    \n    y_pred = mod.predict(processed_test_x)\n    score_test = mod.score(processed_test_x, test_y)\n    conf_m = confusion_matrix(test_y, y_pred)\n    report = classification_report(test_y, y_pred)\n    if not supress_out:\n        print(\"Test Report:\\n\")\n        print('Accuracy:', accuracy_score(test_y, y_pred), end='\\n\\n')\n        print('Report:', report, sep='\\n')\n        sns.heatmap(conf_m, ax=axes[0], annot=True);\n        plt.title(\"Confusion Matrix\");\n        print(\"CrossValidation Score:\")\n        print(cross_val_score(mod, processed_test_x, test_y ,cv=3, scoring=\"accuracy\"))\n    \n    \n    y_pred = mod.predict(processed_train_x)\n    score_train = model.score(processed_train_x, train_y)\n    conf_m = confusion_matrix(train_y, y_pred)\n    report = classification_report(train_y, y_pred)\n    if not supress_out:\n        print(\"Train Report:\\n\")\n        print('Accuracy:', accuracy_score(train_y, y_pred), end='\\n\\n')\n        print('Report:', report, sep='\\n')\n        print(\"CrossValidation Score:\")\n        print(cross_val_score(mod, processed_train_x, train_y ,cv=3, scoring=\"accuracy\"))\n\n        sns.heatmap(conf_m, ax=axes[1], annot=True);\n        plt.title(\"Confusion Matrix\");\n    return (score_test, score_train)","2046cd65":"model = LogisticRegression(solver='liblinear', random_state=0)\nmodel.fit(train_features, y_train)\nevaluate_model(model, train_features, y_train, test_features, y_test);","cc8b61c0":"tree = DecisionTreeClassifier(max_depth=2)\ntree.fit(train_features, y_train)\nevaluate_model(tree, train_features, y_train, test_features, y_test)","252a71fc":"for i in range(2, 20):\n    tree = DecisionTreeClassifier(max_depth=i)\n    tree.fit(train_features, y_train)\n    result = (evaluate_model(tree, train_features, y_train, test_features, y_test, supress_out=True))\n    print(f\"Tree depth: {i:<2} | test: {result[0]} | train {result[1]}\")","4c7d9b77":"We cannot find highly correlated field (|corr| > 0.75), but there are several features which have low\/medium correlation. A few of them are:\n1. target-thalach (negative correlation)\n2. chestpain-thalach (positive correlation)\n3. chestpain-exang (negative correlation)\n4. exang-thalach (negative correlation)\n5. oldpeak-thalach (negative correlation)\n6. thalach-slope (positive correlation)\n7. oldpeak-slope (relatively high negative correlation)\n8. target-chestpain (positive correlation)\n9. target-thalach (positive correlation)\n10. target-exang (negative correaltion)\n11. target-oldpeak (negative correlation)\n12. target-slope (positive correlation)\n13. target-ca (negative correlation)\n14. target-thal (negative correlation)\n\n## 2.1 Age and Sex","56e74202":"### Logistic Regression","7f05538e":"## 2.2 Chest Pain\n\nThere are 4 type of chest pain in the dataset.\n\nHere is what they mean as per UCI's data repository\n> 1 - typical angina\n>\n> 2 - atypical angina\n> \n> 3 - non-anginal pain\n>\n> 4 - asymptomatic\n\nHere's some detail about the types of chest pain\n\n#### Typical Angania (1)\n\n> Typical angina (TA) is defined as substernal chest pain precipitated by physical exertion or emotional stress and relieved with rest or nitroglycerin.\n>\n> -- <cite>National Institutes of Health<\/cite>\n\nIt is the condition where the heart does not get enough blood\/oxygen.\n\n\n#### Atypical Angania (2)\n\nI couldn't find a proper definition, but here is what I found.\n>Women may have more of a subtle presentation called atypical angina. For example, in one study of over 500 women who suffered a heart attack, 71% had fatigue, 48% had sleep disturbances, 42% had shortness of breath, and 30% had chest discomfort in the month prior to the heart attack.\n>\n> -- <cite>Harrington Hospital<\/cite>\n\nIt appears to be a subtle form of angania which usually affects women.\n\n\n#### Non-anganial Pain (3)\n> The term \"atypical chest pain\" is a waste-basket term that leads physicians to send any patient with chest pain to coronary angiography. In order to avoid this term, we must learn to distinguish atypical angina from nonanginal chest pain before angiography is considered in order to avoid unnecessary invasive procedures. A chest pain is very likely nonanginal if its duration is over 30 minutes or less than 5 seconds, it increases with inspiration, can be brought on with one movement of the trunk or arm, can be brought on by local fingers pressure, or bending forward, or it can be relieved immediately on lying down. \n>\n> -- <cite>National Library of Medicine<\/cite>\n\nI doubt I can explain it any better.\n\n#### Asymptomatic (4)\n\nWell, asymptomatic.\n\n## A big problem\n\nAccording to UCIs site these are labeled from 1-4, but in the dataset we are working with it's labeled from 0-4. \nFor now, let us assume type 0 == asymptomatic","0f6b9b02":"It is quite clear from the plots above that the proportion of men with heart diseases is roughly equal to those without; however, for women, it appears that significantly more are diseased. Perhaps the plots below will illustrate this better.","addc1a86":"This may seem rather unbalanced, but this actually representative of the real world - cardiovascular diseases are less prevalent in women compared to men; however, they tend to be more fatal when it comes to women.","5c3c6f75":"The name of the columns are not very clear, here is a bit verbose version of them:\n1. Age (in years)\n2. Sex (1 = male, 0 = female)\n3. CP (chest pain type) (4 values: 0 == no pain??)\n4. Trestbps (resting blood pressure)\n5. Chol (serum cholestoral in mg\/dl)\n6. FBS (fasting blood sugar > 120 mg\/dl)\n7. Restecg (resting electrocardiographic results (values 0,1,2))\n8. Thalach (maximum heart rate achieved)\n9. Exang (exercise induced angina) (1 = yes, 0 = no)\n10. Oldpeak (ST depression induced by exercise relative to rest)\n11. Slpoe (the slope of the peak exercise ST segment)\n12. CA (number of major vessels (0-3) colored by flourosopy)\n13. Thal (3 = normal; 6 = fixed defect; 7 = reversable defect)\n14. Target (0 = fit, 1 = diseased)\n\nHere, savour yourself some statistics.","c1fa4361":"It appears as if there is a rather weak linear relationship between  cholestrol and age.\nAlso, rather surprisingly, there is no correlation between heart diseases and cholestrol - at least according to this dataset.","0cf52549":"It is clear that age, trestbps, chol, thalach and old peak are numeric, while the others are categorical.\n\nNow, let us visualize each of the features and understand what they really mean.","c960c2f3":"<a id=\"section-two\"><a\/>\n# 2. Visualization\n    \n## Correlation Matrix","f53021ea":"# Classification","f0af2e58":"### Decision Tree","2e9f8b00":"This is rather interesting - if we take a look at healthy people, the median resting bps of females is the 3rd quartile of males; when it comes to people with cardiovascular diseases, the quartiles for men and women line up, which is a bit uncanny.\n\n## 2.4 Cholestrol\n- Value 0: normal\n- Value 1: having ST-T wave abnormality (T wave inversions and\/or ST elevation or depression of > 0.05 mV)\n- Value 2: showing probable or definite left ventricular hypertrophy by Estes' criteria","b06f2d28":"# Analysis of Heart Disease\n\nThis notebook aims to find the correlation between different features of the dataset, and possibly create some compund features.\n\nThere are some features whose meaning are not obvious to the oridinary eye, so relavant medical information will be given when necessary. \n\nHope you enjoy going through this notebook.\n\n<a id=\"section-one\"><\/a>\n# 1. Understanding the dataset","d9fdc67e":"The fact that there aren't NaNs in this dataset makes me very happy.","1ef39a5e":"Assuming that the distribution of the types of chest pain in the dataset is representative of what it is like in the real world, we can deduce that if you do not have any chest pain, then you probably do not have any heart disease, but it is the contrary when you have any sort of chest pain. It also suggests that type 3 chest pain is rather uncommon.\n\n## 2.3 Resting Blood Pressure"}}