{"cell_type":{"c8e51768":"code","420fda75":"code","4e1cfedc":"code","90ad09bd":"code","d87145cc":"code","2bab6e56":"code","9474d092":"code","1c442f61":"code","be28527a":"code","6420a719":"code","fc62188b":"code","50dea574":"code","3352ad3d":"code","ec95fb9e":"code","007d0cf1":"code","ca27e4d3":"code","a1dfe917":"code","24085d96":"code","3fedfb78":"code","7da946da":"code","3a85fb70":"markdown","294843db":"markdown","54847fff":"markdown","b5ca5ab1":"markdown","4efb32e8":"markdown","b5602f68":"markdown","a3449bd1":"markdown","6b6ec00b":"markdown","04c518c9":"markdown","5215c0af":"markdown","89a48648":"markdown","26934cc0":"markdown","2e2f6124":"markdown","a0899599":"markdown","b6eab699":"markdown","210b6e85":"markdown"},"source":{"c8e51768":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.feature_selection import f_regression, mutual_info_regression, SelectKBest\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler, Normalizer\nfrom sklearn.ensemble import GradientBoostingRegressor\nfrom sklearn.datasets import make_regression\nfrom sklearn.model_selection import StratifiedKFold, train_test_split, cross_val_score, KFold\nfrom sklearn.metrics import mean_absolute_error, r2_score\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom pandas_profiling import ProfileReport\nfrom statistics import *\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","420fda75":"#carregar os dados de treino para o dataframe do pandas\ndf_train = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv', sep=',')","4e1cfedc":"#visualizar a estrutura do dataframe\ndf_train.shape","90ad09bd":"#separacao do dataframe em treino e teste\nX, y = df_train.drop('SalePrice', axis=1), df_train.SalePrice.copy()","d87145cc":"#extrair as colunas categoricas do dataframe de treino\nX2 = X.copy()\ncategorical_columns_train = X2.select_dtypes(include=['object']).columns","2bab6e56":"#tratar os dados missing (atributos categoricos)\nfor column in categorical_columns_train:\n    X2[column] = LabelEncoder().fit_transform(X[column].fillna('Missing'))    \nX2.fillna(-1, inplace=True) ","9474d092":"#contar a quantidade de valores nulos por atributo\ncat_nans = X2.isna().sum()\nprint(cat_nans[cat_nans > 0])","1c442f61":"#boxplot do atributo saleprice com dados de treino\nax = sns.boxplot(x=df_train[\"SalePrice\"], orient=\"v\")\nplt.show()","be28527a":"#histograma do atributo saleprice com dados de treino\nplt.hist(df_train[\"SalePrice\"], bins='auto')\nplt.show()","6420a719":"#atributos com maior correlacao\nmax_cor = df_train.corr()\nmax_cor_target = abs(max_cor['SalePrice'])\nmax_relevant_features = max_cor_target[max_cor_target>0.5]\nmax_relevant_features","fc62188b":"#criar dataframe para o grafico de correla\u00e7\u00e3o\ndf_plot = df_train[['OverallQual', 'YearBuilt', 'YearRemodAdd', 'TotalBsmtSF', '1stFlrSF',\n       'GrLivArea', 'FullBath', 'TotRmsAbvGrd', 'GarageCars', 'GarageArea', 'SalePrice']]\nfig, ax = plt.subplots(figsize=(10,10)) \ndataplot = sns.heatmap(df_plot.corr(), cmap=\"YlGnBu\", annot=True)\nplt.show()","50dea574":"#instanciar o modelo\nmodel_cat = GradientBoostingRegressor(random_state=0, n_estimators=500)","3352ad3d":"#treinar o modelo\nmodel_cat.fit(X2, y)","ec95fb9e":"# prepare the cross-validation procedure\ncv_cat = KFold(n_splits=10, random_state=1, shuffle=True)\n# evaluate model\nscores_cat = cross_val_score(model_cat, X2, np.sqrt(y), scoring='r2', cv=cv_cat, n_jobs=-1)\n# report performance\nprint('R2 Score: %.5f' % (mean(scores_cat)))","007d0cf1":"#carregar os dados de teste para o dataframe (importar somente os melhores atributos)\ndf_test = pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/test.csv', sep=',')","ca27e4d3":"#extrair as colunas categoricas do dataframe de teste\nX_test = df_test.copy()\ncategorical_columns_test = X_test.select_dtypes(include=['object']).columns","a1dfe917":"#tratar os dados missing (atributos categoricos)\nfor column in categorical_columns_test:\n    X_test[column] = LabelEncoder().fit_transform(X_test[column].fillna('Missing'))    \nX_test.fillna(-1, inplace=True)","24085d96":"#realizar previsao com o modelo treinado sobre os dados de teste\npred_test=model_cat.predict(X_test)","3fedfb78":"#histograma do atributo saleprice com dados previstos pelo modelo\nplt.hist(pred_test, bins='auto')\nplt.show()","7da946da":"#submeter o notebook para avaliacao\nmy_submission = pd.DataFrame({'Id': X_test.Id, 'SalePrice': pred_test.flatten()})\n#my_submission.shape\n#my_submission.tail()\nmy_submission.to_csv('submission.csv', index=False)","3a85fb70":"# 3. Steps with test data","294843db":"# b) Data manipulation","54847fff":"# a) Data acquisition","b5ca5ab1":"# 2. Steps with train data","4efb32e8":"# House Prices - Advanced Regression Techniques","b5602f68":"# d) Data submit","a3449bd1":"# Boxplot to SalePrice","6b6ec00b":"# d) Measure model quality","04c518c9":"# a) Data acquisition","5215c0af":"# Correlation plot","89a48648":"# Histogram to SalePrice","26934cc0":"# c) Data modeling","2e2f6124":"# 1. Imports","a0899599":"# c) Data modeling","b6eab699":"# Histogram to SalePrice","210b6e85":"# b) Data manipulation"}}