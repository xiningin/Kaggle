{"cell_type":{"796e4766":"code","17cfc3fa":"code","84509007":"code","a9a31f19":"code","b60f116d":"code","f48deab0":"code","c8a67996":"code","e188b629":"code","307e1828":"code","e41b19b1":"code","c1766a44":"code","4a384ee5":"code","05ba27e7":"code","5851656a":"code","5bdeed87":"code","c69538a4":"code","03b35adf":"code","92e8e322":"code","b754a38f":"code","8dc73246":"code","f7922c9b":"code","cc549220":"code","ec43918f":"code","1077f7c1":"code","8b8814a9":"code","8bba0f52":"code","de732b62":"code","2402bede":"code","ff4b0d1b":"code","c62f4d95":"code","78285d5c":"code","157a311a":"code","3346835f":"code","ff8d9173":"code","92dbf81f":"code","57b14954":"code","64e1c351":"code","3435c4d1":"code","99c3aff5":"code","f5fb5fa0":"code","274d2b2a":"code","466c5e02":"code","b0c93f68":"code","0355047f":"code","cf33cc99":"code","c5d565ec":"code","01f713a9":"code","79e78094":"code","9119d720":"code","6798d6ba":"code","d20cd9e7":"code","5801afb5":"code","ebc148fa":"code","a4ecae08":"code","1b7c884b":"code","a47825fb":"code","caa111c6":"code","d5c394aa":"code","c72943f8":"code","d1c5284d":"code","5e1caf41":"code","66060ea3":"code","04f0f4c1":"code","6400780c":"code","45848397":"code","17dede57":"code","6666f275":"code","d0f161dc":"code","9cf1b2f8":"code","92bfdb36":"code","18ad3b63":"markdown","760c5280":"markdown","a9deaa68":"markdown","1ac90748":"markdown","c23f29d2":"markdown","43e4af77":"markdown","bc62e4c2":"markdown","10161bf8":"markdown","a351c5ba":"markdown","0051f359":"markdown","ca900b88":"markdown","93edaad6":"markdown","fcc59792":"markdown","061a7af3":"markdown","48d19171":"markdown","a9346547":"markdown","28054cd8":"markdown","4f65e1d5":"markdown","5701b5d8":"markdown","7b397dae":"markdown","3ab93d03":"markdown","3b85550a":"markdown","2da1a8c1":"markdown","ca4f545c":"markdown","8f3903dc":"markdown","8a95e8f4":"markdown","b319038b":"markdown","4d48dff6":"markdown","0e67d7d9":"markdown","e292c8ee":"markdown","fc1f1300":"markdown","6446005a":"markdown","36d226c2":"markdown","ec2b0eb4":"markdown","2f150fe2":"markdown","5adf50ed":"markdown","bde63619":"markdown","9cca767e":"markdown","10de0608":"markdown","8163986d":"markdown","b72fcd42":"markdown","a5d45e2b":"markdown","55b0d07a":"markdown","e295747e":"markdown","04a6ab85":"markdown","dcd8e16f":"markdown","ce998b64":"markdown","5d7b347f":"markdown","82eb14f2":"markdown","a90c51aa":"markdown","9e4eeb94":"markdown"},"source":{"796e4766":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)\n\nimport matplotlib\nmatplotlib.rcParams['xtick.major.size'] = 0\nmatplotlib.rcParams['ytick.major.size'] = 0\n\n\ndf = pd.read_csv('..\/input\/globalterrorismdb_0718dist.csv', encoding='ISO-8859-1', low_memory = False)\n# The column listing number of perpetrators has many attacks listed as -99.0, and some as -9.0.\n# I can't find any discription of the meaning of these values, so I'll replace them with nan to make analysis possible.\nnperps = df['nperps'].replace(-99.0, np.nan).replace(-9.0, np.nan)\ndf['nperps'] = nperps\n\nprint('A little section of the dataset:')\ndisplay(df.head())\n\nprint('Total number of attacks documented:', df.shape[0])","17cfc3fa":"year_count = df.groupby('iyear')['eventid'].count()\n\nplt.subplots(figsize = (16, 10))\nplt.bar(year_count.index, year_count.values, color = 'black')\nplt.title('Number of Attacks Over Time', fontsize = 20, y = 1.02)\nplt.show()","84509007":"print('Worst year:', year_count.idxmax())\nprint('Number of incidents in that year:', year_count.max())\n\nprint('\\nNumber of incidents in 2017 (most recent year in the data):', year_count[2017])","a9a31f19":"# defining a new colormap, so matplotlib doesn't re-use colors\nn = len(df['region_txt'].unique())\ncolor = plt.cm.rainbow(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (26, 15))\nfor region in df['region_txt'].unique():\n    subset = df[df['region_txt'] == region]\n    year_count = subset.groupby('iyear')['eventid'].count()\n    \n    sns.lineplot(year_count.index, year_count.values, label = region, color = colors[count][1], linewidth = 5)\n    if year_count.values[-1] > 110:\n        plt.text(year_count.index[-1] + 0.5, year_count.values[-1], s = region, color = 'white', fontsize = 16, fontweight = 'bold')\n    count += 1\n\nplt.title('Number of Attacks by Region over Time', fontsize = 30, y = 1.03, color = 'white', fontweight = 'bold')\nax.set_facecolor('black')\nfig.set_facecolor('black')\nplt.yticks(fontsize = 16, color = 'white', fontweight = 'bold')\nplt.xticks(fontsize = 16, color = 'white', fontweight = 'bold')\nplt.legend(loc = 'best', prop={'size': 20});","b60f116d":"subset = df[df['region_txt'] == 'Western Europe']\nsubset = subset[subset['iyear'] < 2000]\nyear_count = subset.groupby('iyear')['eventid'].count()\nprint('Mean number of attacks per year in Western Europe before 2000: {:,.2f}'.format(year_count.mean()))","f48deab0":"region_list = ['North America', 'Western Europe', 'Eastern Europe', 'East Asia', 'Sub-Saharan Africa', 'Southeast Asia']\n\nfig, axes = plt.subplots(3, 2, figsize = (18, 12))\nplt.suptitle('Number of Attacks Over Time in a Subset of Regions', fontsize = 22)\n\nsubset = df[df['region_txt'] == 'North America']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[0, 0].plot(year_count, color = 'black')\naxes[0, 0].set_title('North America', fontsize = 16, y = 1.02)\n\nsubset = df[df['region_txt'] == 'South America']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[0, 1].plot(year_count, color = 'black')\naxes[0, 1].set_title('South America', fontsize = 16, y = 1.02)\n\nsubset = df[df['region_txt'] == 'Western Europe']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[1, 0].plot(year_count, color = 'black')\naxes[1, 0].set_title('Western Europe', fontsize = 16, y = 1.02)\n\nsubset = df[df['region_txt'] == 'Eastern Europe']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[1, 1].plot(year_count, color = 'black')\naxes[1, 1].set_title('Eastern Europe', fontsize = 16, y = 1.02)\n\nsubset = df[df['region_txt'] == 'Southeast Asia']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[2, 0].plot(year_count, color = 'black')\naxes[2, 0].set_title('Southeast Asia', fontsize = 16, y = 1.02)\n\nsubset = df[df['region_txt'] == 'East Asia']\nyear_count = subset.groupby('iyear')['eventid'].count()\naxes[2, 1].plot(year_count, color = 'black')\naxes[2, 1].set_title('East Asia', fontsize = 16, y = 1.02)\n\nplt.show()","c8a67996":"region_count = df.groupby('region_txt')['eventid'].count().sort_values(ascending = False)\n\nplt.subplots(figsize = (20, 12))\nsns.barplot(x = region_count.index, y = region_count.values, palette = 'viridis')\nplt.xticks(rotation = 80, fontsize = 15)\nplt.xlabel('')\nsns.despine(left = True)\nplt.title('Number of Attacks by Region, since 1970', fontsize = 22, y = 1.02);\n\n# it would be nice to normalize these values by population size","e188b629":"print('Number of countries in the dataset:', len(df.country_txt.unique()))\n\ncountry_count = df.groupby('country_txt')['eventid'].count().sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (20, 12))\nsns.barplot(country_count.index, country_count.values, palette = 'inferno', alpha = 0.9)\nplt.title('Number of Attacks by Country, since 1970', fontsize = 26, y = 0.94)\nplt.xticks(rotation = 90)\nax.set_xticks([])\nax.margins(x = 0.005)\nplt.xlabel('')\nfig.set_facecolor('snow')\nax.set_facecolor('snow')\nsns.despine(left = True);","307e1828":"# there are 205 countries, so we want the 102nd one in our ordered list\n\ncountry_count = df.groupby('country_txt')['eventid'].count().sort_values(ascending = False)\nmedian = country_count[102]\nname = country_count[country_count == 66].index[0]\n\nprint('The median country is {}, with {} attacks'.format(name, median))","e41b19b1":"country_count = df.groupby('country_txt')['eventid'].count().sort_values(ascending = False)\nprint('Least attacked countries:\\n', country_count.tail(12))","c1766a44":"country_count = df.groupby('country_txt')['eventid'].count().sort_values(ascending = False)\nfig, ax = plt.subplots(figsize = (12, 20))\nplt.barh(country_count[:50].index, country_count[:50].values, color = 'black')\nplt.title('Number of Attacks In Top 50 Countries, since 1970', fontsize = 22, y = 1.02)\nplt.xticks(fontsize = 16)\nplt.yticks(fontsize = 14)\nax.tick_params(axis = 'x', length = 5, width = 2)\nplt.show()\n\nprint('{:,.1f}% of all attacks took place in Iraq'.format((country_count[0] \/ country_count.sum()) * 100))\nprint('{:,.1f}% of all attacks took place in Pakistan'.format((country_count[1] \/ country_count.sum()) * 100))\nprint('{:,.1f}% of all attacks took place in Afghanistan'.format((country_count[2] \/ country_count.sum()) * 100))\nprint('{:,.1f}% of all attacks took place in India\\n'.format((country_count[3] \/ country_count.sum()) * 100))\n\ncombined_percent = ((country_count[0] + country_count[1] + country_count[2] + country_count[3]) \/ country_count.sum()) * 100\nprint('Together, they account for {:,.1f}% of the attacks'.format(combined_percent))","4a384ee5":"city_count = df.groupby('city')['eventid'].count().sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (12, 20))\nplt.barh(city_count[1:21].index, city_count[1:21].values, color = 'black')\nplt.xticks(fontsize = 16)\nax.tick_params(axis = 'x', length = 5, width = 2)\nplt.title('Number of Attacks in Top 20 Cities, since 1970', fontsize = 22, y = 1.02)\nax.margins(x = 0.02);","05ba27e7":"country_count = df.groupby('country_txt')['eventid'].count().sort_values(ascending = False)\n\ndata = dict(type = 'choropleth', \n            locations = country_count.index,\n            locationmode = 'country names',\n            z = country_count.values, \n            text = country_count.index)\nlayout = dict(title = 'Number of Attacks Since 1970', \n              height = 1200,\n              geo = dict(showframe = False, \n                         projection = {'type': 'mercator'}))\n\nfig = go.Figure(data = [data], layout=layout)\niplot(fig)","5851656a":"print('Total number killed: {}'.format(int(df['nkill'].sum())))\nprint('Total number wounded: {}\\n'.format(int(df['nwound'].sum())))\nprint('Mean number killed per attack: {:,.2f}'.format(df['nkill'].mean()))\nprint('Standard deviation in number killed per attack: {:,.2f}\\n'.format(df['nkill'].std()))\nprint('Mean number wounded per attack: {:,.2f}'.format(df['nwound'].mean()))\nprint('Standard deviation in number wounded per attack: {:,.2f}'.format(df['nwound'].std()))","5bdeed87":"killed = df.groupby('nkill').count()['eventid']\ngreater_than_20 = killed[21:]\nkilled = killed[:20]\nint_index = [int(num) for num in killed.index]\nkilled = killed.reindex(int_index)\nkilled = killed.append(pd.Series(greater_than_20.sum(), index = ['>20']))\n\nplt.subplots(figsize = (16, 10))\nsns.barplot(killed.index, killed.values, color = 'black', alpha = 0.9)\nplt.xlabel('Number Killed', fontsize = 14)\nplt.ylabel('Number of Attacks', fontsize = 14)\nplt.title('Number of Attacks By Number Killed', fontsize = 26, y = 1.02)\nsns.despine(left = True)\nplt.show()\n\nnone_killed = df[df['nkill'] == 0]\nprint('Number of attacks in which no one was killed:', len(none_killed))\nprint('Percent of all incidents: {:,.1f}%\\n'.format((len(none_killed) \/ len(df['nkill']) * 100)))\n\none_killed = df[df['nkill'] == 1]\nprint('Number of attacks in which one person was killed:', len(one_killed))\nprint('Percent of all incidents: {:,.1f}%'.format((len(one_killed) \/ len(df['nkill']) * 100)))\n\nover_20_killed = df[df['nkill'] > 20]\nprint()\nprint('Number of attacks in which more than 20 people were killed:', len(over_20_killed))\nprint('Percent of total incidents: {:,.1f}%'.format((len(over_20_killed)\/len(df['nkill'])) * 100))\n\nover_100_killed = df[df['nkill'] > 100]\nprint()\nprint('Number of attacks in which more than 100 people were killed:', len(over_100_killed))\nprint('Percent of total incidents: {:,.1f}%'.format(len(over_100_killed)\/len(df['nkill']) * 100))\n\nover_1000_killed = df[df['nkill'] > 1000]\nprint()\nprint('There were 4 attacks in which more than 1000 people were killed')\nprint('Their records are displayed below:')\ndisplay(over_1000_killed)","c69538a4":"relative_deadliness = df.groupby(by = 'region_txt').mean()['nkill'].sort_values(ascending = False)\n\nplt.subplots(figsize = (12, 8))\nsns.barplot(relative_deadliness.index, relative_deadliness.values, palette = 'viridis')\nplt.xticks(rotation = 70)\nplt.xlabel('')\nsns.despine(left = True)\nplt.title('Average Number Killed Per Attack By Region', fontsize = 18, y = 1.02);","03b35adf":"# defining a new colormap, so matplotlib doesn't re-use colors\nn = len(df['region_txt'].unique())\ncolor = plt.cm.gist_ncar(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (18, 12))\nfor region in df['region_txt'].unique():\n    region_data = df[df['region_txt'] == region].groupby('iyear').mean()['nkill']\n    \n    plt.plot(region_data.index, region_data.values, label = region, color = colors[count][1], linewidth = 3)\n    count += 1\n    \nplt.legend()\nplt.title('Average Number Killed per Attack', fontsize = 22, y = 1.02)\nax.set_facecolor('black')\nsns.despine(left = True);","92e8e322":"ee = df[df['region_txt'] == 'Eastern Europe']\nee = ee[ee['iyear'] == 2004]\nprint('Worst Eastern European attacks in 2004:')\nee.sort_values('nkill', ascending = False).head(6)","b754a38f":"killed2009 = df[df['iyear'] == 2009].sort_values(by = 'nkill', ascending = False)\nprint('Worst attacks in 2009:')\nkilled2009.head(6)","8dc73246":"ea = df[df['region_txt'] == 'East Asia']\nea = ea[ea['iyear'] > 2008]\nprint('Worst East Asian attacks since 2008:')\nea.sort_values('nkill', ascending = False).head(10)","f7922c9b":"from decimal import Decimal\ncountry_killed = df.groupby('country_txt')['nkill'].sum()\ncountry_count = df.groupby('country_txt')['eventid'].count()\nr2, p = stats.pearsonr(country_count, country_killed)\n\nprint('Correlation between number of attacks and number killed by country: {:,.3f}'.format(r2))\nprint('p-value of that correlation: {:,.1E}'.format(Decimal(p)))","cc549220":"# defining a new colormap, so matplotlib doesn't re-use colors\nn = len(df['region_txt'].unique())\ncolor = plt.cm.nipy_spectral(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (18, 12))\nfor region in df['region_txt'].unique():\n    region_data = df[df['region_txt'] == region].groupby('iyear').sum()['nkill']\n    \n    plt.plot(region_data.index, region_data.values, label = region, color = colors[count][1], linewidth = 3)\n    count += 1\n    \nplt.legend()\nplt.title('Numbers Killed by Region', fontsize = 22, y = 1.02)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nax.set_facecolor('black')\nsns.despine(left = True);","ec43918f":"mean_killed_over_time = df.groupby('iyear').mean()['nkill']\nfig, ax = plt.subplots(figsize = (12, 8))\nplt.plot(mean_killed_over_time.index, mean_killed_over_time.values, color = 'darkred', linewidth = 5)\nplt.title('Mean Number Killed per Attack', fontsize = 22, y = 1.02)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nsns.despine(left = True);","1077f7c1":"wounded = df.groupby('nwound').count()['eventid'].drop(8.5)\ngreater_than_20 = wounded[21:]\nwounded = wounded[:20]\nwounded = wounded.append(pd.Series(greater_than_20.sum(), index = ['>20']))\n\nfig, ax = plt.subplots(figsize = (16, 10))\nsns.barplot(wounded.index, wounded.values, color = 'black', alpha = 0.9)\nplt.xlabel('Number Wounded', fontsize = 14)\nplt.ylabel('Number of Attacks', fontsize = 14)\nax.set_xticklabels(list(range(21)) + ['>20'])\nplt.title('Number of Attacks By Number Wounded', fontsize = 26, y = 1.02)\nsns.despine(left = True)\nplt.show()\n\nnone_wounded = df[df['nwound'] == 0]\nprint('Number of incidents in which no one was wounded:', len(none_wounded))\nprint('Percent of total incidents: {:,.1f}%\\n'.format(len(none_wounded)\/len(df['nwound']) * 100))\n\none_wounded = df[df['nwound'] == 1]\nprint('Number of incidents in which one person was wounded:', len(one_wounded))\nprint('Percent of total incidents: {:,.1f}%\\n'.format(len(one_wounded)\/len(df['nwound']) * 100))\n\nover_30_wounded = df[df['nwound'] > 30]\nprint('Number of incidents in which more than 100 people were wounded:', len(over_30_wounded))\nprint('Percent of total incidents: {:,.1f}%\\n'.format(len(over_30_wounded)\/len(df['nwound']) * 100))\n\nover_1000_wounded = df[df['nwound'] > 1000]\nprint('There were {} attacks in which more than 1000 people were wounded'.format(len(over_1000_wounded)))\nprint('Their records are displayed below:')\ndisplay(over_1000_wounded)","8b8814a9":"no_casualties = none_wounded[none_wounded['nkill'] == 0]\nprint('Number of attacks in which no one was killed or wounded:', len(no_casualties))\nprint('Percent of total attacks: {:,.1f}%'.format((len(no_casualties) \/ len(df['nkill'])) * 100))","8bba0f52":"relative_deadliness = df.groupby(by = 'region_txt').mean()['nwound'].sort_values(ascending = False)\n\nplt.subplots(figsize = (12, 8))\nsns.barplot(relative_deadliness.index, relative_deadliness.values, palette = 'viridis')\nplt.xticks(rotation = 70)\nplt.xlabel('')\nsns.despine(left = True)\nplt.title('Average Number Wounded Per Attack By Region', fontsize = 18, y = 1.02);","de732b62":"sarin_removed = df.drop(58841)\n\nregions_wounded = sarin_removed.groupby(by = 'region_txt').sum()['nwound']\nregions_attacked = sarin_removed.groupby(by = 'region_txt').count()['eventid']\nrelative_deadliness = (regions_wounded \/ regions_attacked).sort_values(ascending = False)\n\nprint(\"East Asia's high average is hugely affected by the 1995 sarin gas attack on Tokyo\")\nprint('If it is removed from the calculation, East Asia has an average of {:,.2f} wounded per attack\\n'.format(relative_deadliness['East Asia']))\n\n\nwtc_removed = df.drop([73126, 73127])\n\nregions_wounded = wtc_removed.groupby(by = 'region_txt').sum()['nwound']\nregions_attacked = wtc_removed.groupby(by = 'region_txt').count()['eventid']\nrelative_deadliness = (regions_wounded \/ regions_attacked).sort_values(ascending = False)\n\nprint(\"North America's high average is also hugely affected by the World Trade Center attacks\")\nprint('If they are removed from the calculation, its average plunges to {:,.2f} wounded per attack'.format(relative_deadliness['North America']))","2402bede":"wtc_removed = df.drop([73126, 73127])\n\nrelative_deadliness = (wtc_removed.groupby(by = 'region_txt').mean()['nkill']).sort_values(ascending = False)\n\nrelative_deadliness.index.name = ''\nrelative_deadliness","ff4b0d1b":"fig, ax = plt.subplots(figsize = (16, 12))\nsns.scatterplot(x = 'nkill', y = 'nwound', data = df, hue = 'region_txt', palette = 'gist_rainbow')\nsns.despine(left = True)\nhandles, labels = ax.get_legend_handles_labels()\nplt.title('Scatterplot of Numbers Killed and Wounded', fontsize = 23, y = 1.02)\nplt.xlabel('Number Killed', fontsize = 16)\nplt.ylabel('Number Wounded', fontsize = 16)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nplt.legend(bbox_to_anchor=(1.05, 0.32), loc=2, borderaxespad=0., handles=handles[1:], labels=labels[1:]);","c62f4d95":"attack_type = df.groupby('attacktype1_txt')['eventid'].count().sort_values(ascending = False)\n# the values for the other attack type variables (i.e. attacktype2 and attacktype3) are mostly null\n\nfig, ax = plt.subplots(figsize = (12, 8))\nplt.bar(attack_type.index, attack_type.values, color = 'black')\nplt.title('Number of Incidents by Attack Type, since 1970', fontsize = 18, y = 1.02)\nplt.xticks(rotation = 60)\nsns.despine(left = True)\nplt.show()","78285d5c":"n = len(df['attacktype1_txt'].unique())\ncolor = plt.cm.prism(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (20, 10))\nfor a_type in df['attacktype1_txt'].unique():\n    subset = df[df['attacktype1_txt'] == a_type]\n    year_count = subset.groupby('iyear')['eventid'].count()\n    \n    plt.plot(year_count.index, year_count.values, label = a_type , linewidth = 5, color = colors[count][1])\n    count += 1\n    \nplt.legend(loc = 'best', prop={'size': 16})\nplt.title('Number of Attacks by Attack Type Over Time', fontsize = 23, y = 1.03)\nax.set_facecolor('black')","157a311a":"average_deadliness_type = df.groupby('attacktype1_txt').mean()['nkill'].sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (12, 8))\nsns.barplot(average_deadliness_type.index, average_deadliness_type.values, palette = 'magma')\nplt.xticks(rotation = 70)\nplt.xlabel('')\nplt.ylabel('Mean Number Killed Per Attack', fontsize = 14)\nplt.title('Average Deadliness of Attack Types', fontsize = 20, y = 1.02)\nsns.despine(left = True);","3346835f":"wtc_removed = df.drop([73126, 73127])\n\naverage_deadliness_type = wtc_removed.groupby('attacktype1_txt').mean()['nkill'].sort_values(ascending = False)\n\nprint('If the World Trade Center attacks are removed, the average for hijacking drops to {:,.2f}'.format(average_deadliness_type['Hijacking']))","ff8d9173":"na = df['nperps'].isna().sum()\nprint('Percent of attacks which have no information for number of perpetrators: {:,.1f}%'.format((na \/ len(df)) * 100))","92dbf81f":"mean_perpetrators = df.groupby('attacktype1_txt').mean()['nperps']\ndel mean_perpetrators.index.name\nprint('Mean number of perpetrators involved by attack type:')\ndisplay(mean_perpetrators.sort_values())\n\nmedian_perpetrators = df.groupby('attacktype1_txt').median()['nperps']\ndel median_perpetrators.index.name\nprint('Median number of perpetrators involved by attack type:')\ndisplay(median_perpetrators.sort_values())","57b14954":"fig, ax = plt.subplots(figsize = (16, 12))\nsns.scatterplot(x = 'nperps', y = 'nkill', data = df, hue = 'attacktype1_txt', palette = 'nipy_spectral')\nplt.title('Attacks, by Number of Perpetrators and Number Killed', fontsize = 20, y = 1.02)\nplt.ylabel('Number Killed', fontsize = 16)\nplt.xlabel('Number of Perpetrators', fontsize = 16)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nhandles, labels = ax.get_legend_handles_labels()\nplt.legend(bbox_to_anchor=(1.05, 0.32), loc=2, borderaxespad=0., handles=handles[1:], labels=labels[1:])\nsns.despine(left = True);","64e1c351":"perps_kill = df[['nperps', 'nkill']]\ncorrelation = perps_kill.corr()['nkill']['nperps']\nprint('Correlation between number of perpetrators and number killed: {:,.3f}'.format(correlation))","3435c4d1":"none_killed = pd.DataFrame(columns = ['method', 'percent none killed'])\n\nfor method in df['attacktype1_txt'].unique():\n    method_data = df[df['attacktype1_txt'] == method]\n    percent_none_killed = ((method_data['nkill'] == 0).sum() \/ len(method_data)) * 100\n    \n    none_killed = none_killed.append(pd.DataFrame({'method': method, 'percent none killed': percent_none_killed}, index = [0]))\n    \nnone_killed = none_killed.sort_values(by = 'percent none killed', ascending = False)\n\nfig, ax = plt.subplots(figsize = (16, 8))\nsns.barplot(none_killed['method'], none_killed['percent none killed'], palette = 'viridis')\nplt.title('Probability of No Fatalities by Attack Type', fontsize = 22, y = 1.02)\nplt.ylabel('Percent of Attacks in Which No One Died', fontsize = 14)\nplt.xlabel('')\nplt.yticks(fontsize = 14)\nplt.xticks(fontsize = 14)\nsns.despine(left = True)\nplt.xticks(rotation = 70);","99c3aff5":"assassination = df[df['attacktype1_txt'] == 'Assassination']\npercent_one_killed = ((assassination['nkill'] == 1).sum() \/ len(assassination)) * 100\n\nprint('Percent of assassinations in which exactly one person was killed: {:,.2f}'.format(percent_one_killed))","f5fb5fa0":"data = []\nmethod_name_list = []\nfig, ax = plt.subplots(figsize = (16, 10))\nfor method in df['attacktype1_txt'].unique():\n    method_data = df[df['attacktype1_txt'] == method]['nkill'].dropna().clip(0, 100)\n    data.append(method_data)\n    method_name_list.append(method)\n\nplt.boxplot(data)\nax.set_xticklabels(method_name_list, rotation = 70)\nplt.title('Boxplot of Numbers Killed by Attack Type (for < 100 killed)', fontsize = 22, y = 1.02)\nplt.ylabel('Number Killed')\nsns.despine(left = True);","274d2b2a":"data = []\nmethod_name_list = []\nfig, ax = plt.subplots(figsize = (16, 10))\nfor method in df['attacktype1_txt'].unique():\n    method_data = df[df['attacktype1_txt'] == method]['nkill'].dropna()\n    data.append(method_data)\n    method_name_list.append(method)\n\nplt.boxplot(data)\nax.set_xticklabels(method_name_list, rotation = 70)\nplt.title('Boxplot of Numbers Killed by Attack Type', fontsize = 22, y = 1.02)\nplt.ylabel('Number Killed')\nsns.despine(left = True);","466c5e02":"weapon = df.groupby('weaptype1_txt').count()['eventid'].sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (16, 10))\nplt.bar(weapon.index, weapon.values, color = 'yellow', alpha = 0.96)\nax.set_facecolor('black')\nplt.xticks(rotation = 84)\nplt.title('Number of Attacks by Weapon Used', fontsize = 22, y = 1.03);","b0c93f68":"assassination = df[df['attacktype1_txt'] == 'Assassination']\n\nas_weapons = assassination.groupby('weaptype1_txt').count()['eventid'].sort_values(ascending = False)\n\nprint('Number of assassinations by weapon type:')\nfor index, row in as_weapons.iteritems():\n    print(index, row)","0355047f":"weapon_kills = df.groupby('weaptype1_txt').mean()['nkill'].sort_values(ascending = False)\nweapon_kills.index.name = ''\nprint('Average number killed per attack by weapon type:')\nweapon_kills","cf33cc99":"wtc_removed = df.drop([73126, 73127])\nweapon_kills = wtc_removed.groupby('weaptype1_txt').mean()['nkill'].sort_values(ascending = False)\nweapon_kills.index.name = ''\nprint('Average number killed per attack by weapon type, with WTC attack removed:')\nweapon_kills","c5d565ec":"suicide = df.groupby('suicide')['eventid'].count()\n\nfig, ax = plt.subplots(figsize = (6, 6))\nplt.bar(suicide.index, suicide.values, color = 'darkred', alpha = 0.9)\nplt.xticks([0, 1])\nax.set_xticklabels(['Non-Suicide', 'Suicide'], fontsize = 16, y = - 0.02)\n#ax.tick_params(size = 0)\nplt.title('Number of Incidents by Whether They Were Suicide Attacks', fontsize = 16, y = 1.04)\nsns.despine(left = True)\nplt.show()\n\nsuicide_percentage = (suicide[1] \/ (suicide[0] + suicide[1])) * 100\nprint('Percentage of incidents which were suicide attacks: {:,.1f}%\\n'.format(suicide_percentage))\n\n\nsuicide_average_killed = df.groupby('suicide').sum()['nkill'] \/ suicide\n\nprint('The average number killed per suicide attack was {:,.2f}'.format(suicide_average_killed[1]))\nprint('In comparison, the average number killed per non-suicide attack was {:,.2f}'.format(suicide_average_killed[0]))\nprint('So suicide attacks are rare in history, but tend to be extremely deadly')\nprint('This effect is not contingent on the inclusion of the World Trade Center Attacks')","01f713a9":"suicide_over_time = df.groupby('iyear').mean()['suicide'] * 100\n\nfig, ax = plt.subplots(figsize = (16, 7))\nplt.plot(suicide_over_time.index, suicide_over_time.values, color = 'darkred', linewidth = 5)\nplt.title('Suicide Attacks over Time', fontsize = 22, y = 1.05)\nplt.yticks(fontsize = 14)\nplt.xticks(fontsize = 14)\nplt.ylabel('% of Attacks Which Were Suicidal', fontsize = 16)\nsns.despine(left = True);","79e78094":"target = df.groupby('targtype1_txt')['eventid'].count().sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (20, 10))\nsns.barplot(target.index, target.values, palette = 'plasma')\nplt.title('Number of Attacks by Target Type', fontsize = 26, y = 1.02)\nplt.xticks(rotation = 80)\nplt.xlabel('')\nplt.setp(ax.get_xticklabels(), fontsize = 16)\nsns.despine(left = True)\nplt.show()","9119d720":"def plot_bar(region, axis):\n    region_data = df[df['region_txt'] == region]\n    \n    target = region_data.groupby('targtype1_txt')['eventid'].count().sort_values(ascending = False)\n\n    axis.bar(target.index, target.values, color = 'black')\n    axis.set_title(region, fontsize = 22, y = 1.02)\n    for tick in axis.get_xticklabels():\n        tick.set_rotation(90)\n    plt.setp(axis.get_xticklabels(), fontsize = 16)\n    sns.despine(left = True)\n    \nfig, axes = plt.subplots(6, 2, figsize = (20, 60))\nplt.suptitle('Number of Attacks by Target Type in Each Region', fontsize = 26, y = 0.905)\nplt.subplots_adjust(hspace = 1.2)\n\ncount = 0\nfor country in df['region_txt'].unique()[:6]:\n    plot_bar(country, axes[count, 0])\n    count += 1\n\ncount = 0\nfor country in df['region_txt'].unique()[6:]:\n    plot_bar(country, axes[count, 1])\n    count += 1","6798d6ba":"abortion = df[df['targtype1_txt'] == 'Abortion Related']\nprint('Number of abortion related terror attacks which have taken place in North America since 1970:', len(abortion))\nprint('Number of those attacks which took place in the United States:', len(abortion['country_txt'] == 'United States'))","d20cd9e7":"target = df.groupby('targtype1_txt')['eventid'].count().sort_values(ascending = False)\naverage_target_killed = (df.groupby('targtype1_txt').sum()['nkill'] \/ target).sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (20, 10))\nplt.bar(average_target_killed.index, average_target_killed.values, color = 'black')\nplt.title('Average Number Killed by Target Type', fontsize = 22, y = 1.02)\nplt.xticks(rotation = 80, fontsize = 14)\nsns.despine(left = True);","5801afb5":"average_target_killed = (df.groupby('targtype1_txt').sum()['nkill'] \/ target)\nstd_target_killed = (df.groupby('targtype1_txt').std()['nkill'])\n#average_target_killed.sort_values(ascending = False)\nstd_target_killed\n\ntarget_killed = pd.DataFrame({'average': average_target_killed.values, 'standard deviation': std_target_killed.values}, \n                             index = average_target_killed.index).sort_values(by = 'average', ascending = False)\n\nfig, ax = plt.subplots(figsize = (16, 10))\nplt.bar(target_killed.index, target_killed['average'], yerr = target_killed['standard deviation'], color = 'grey', alpha = 0.6)\nplt.title('Average Number Killed by Target Type, with error bars', fontsize = 20, y = 1.02)\nplt.xticks(rotation = 90, fontsize = 14)\nplt.ylim(0, 25)\nsns.despine(left = True);","ebc148fa":"data = []\nmethod_name_list = []\nfig, ax = plt.subplots(figsize = (16, 10))\nfor method in target_killed.index:\n    method_data = df[df['targtype1_txt'] == method]['nkill'].dropna()\n    data.append(method_data)\n    method_name_list.append(method)\n\nplt.boxplot(data)\nax.set_xticklabels(method_name_list, rotation = 90, fontsize = 14)\nplt.title('Boxplot of Numbers Killed by Target Type', fontsize = 22, y = 1.02)\nplt.ylabel('Number Killed')\nsns.despine(left = True);","a4ecae08":"group = df.groupby('gname').count()['eventid'].sort_values(ascending = False)\n\nworst_groups = group[1:31]\n\nplt.subplots(figsize = (10, 12))\nplt.barh(worst_groups.index, worst_groups.values, color = 'black')\nplt.title('Groups Which Have Made the Most Attacks', fontsize = 20, y = 1.02)\nplt.xlabel('Number of Attacks', fontsize = 14)\nplt.show()\n\nprint('Together, these 30 groups have made {} attacks'.format(worst_groups.sum()))\nprint('That is {:,.1f}% of the attacks in the dataset\\n'.format((worst_groups.sum() \/ len(df) * 100)))\n\n\nprint('Number of incidents for which the group responsible was unknown:', group['Unknown'])\nprint('Percent of total incidents: {:,.1f}%\\n'.format((group['Unknown'] \/ len(df)) * 100))\n\ngroups_10 = group[group >= 10]\nprint('Number of groups which perpetrated 10 or more attacks:', len(groups_10))\nprint('There are {} groups listed in total, so {:,.1f}% of the groups perpetrated 10 or more attacks\\n'.format(\n    len(group), len(groups_10) \/ len(group) * 100))\n\nprint('Collectively, these groups which have done 10 or more attacks commited {} attacks'.format(groups_10.drop('Unknown').sum()))\nprint('That is {:,.1f}% of all attacks'.format((groups_10.drop('Unknown').sum() \/ len(df)) * 100))\nprint('That, together with the attacks for which there is no information, accounts for {:,.1f}% of attacks\\n'.format((groups_10.sum() \/ len(df)) * 100))\n\n\nindividual = df[df['individual'] == 1]\n\npercent_individual = (len(individual) \/ len(df)) * 100\nprint('Percentage of attacks which were perpetrated by an independent actor: {:,.2}%'.format(percent_individual))","1b7c884b":"independent = df[df['individual'] == 1].groupby('region_txt').count()['eventid'].sort_values(ascending = False)\nindependent.index.name = ''\n\nfig, ax = plt.subplots(figsize = (16, 8))\nplt.bar(independent.index, independent.values, color = 'black')\nplt.xticks(rotation = 80)\nsns.despine(left = True)\nplt.title('Number of Lone Wolf Attacks by Region', fontsize = 18, y = 1.02);","a47825fb":"independent = df[df['individual'] == 1].groupby('iyear').count()['eventid']\n\nfig, ax = plt.subplots(figsize = (14, 8))\nplt.plot(independent.index, independent.values, color = 'red', linewidth = 3)\nax.set_facecolor('grey')\nfig.set_facecolor('lightgrey')\nplt.setp(ax.get_xticklabels(), fontsize = 14)\nplt.setp(ax.get_yticklabels(), fontsize = 14)\nplt.title('Number of Lone Wolf Attacks by Year', fontsize = 20, y = 1.03)\nplt.show()\n\n\nyear2017 = df[df['iyear'] == 2017]\nna = year2017[year2017['region_txt'] == 'North America']\nna_independent = na[na['individual'] == 1]\neu = year2017[year2017['region_txt'] == 'Western Europe']\neu_independent = eu[eu['individual'] == 1]\nprint('Percent of North American attacks which were independent in 2017: {:,.1f}%'.format((len(na_independent) \/ len(na)) * 100))\nprint('Percent of Western European attacks which were independent in 2017: {:,.1f}%'.format((len(eu_independent) \/ len(eu)) * 100))","caa111c6":"individual_killed = df.groupby('individual').sum()['nkill'] \/ df.groupby('individual').count()['eventid']\n\nprint('Average number killed in non-independent attacks: {:,.1f}'.format(individual_killed[0]))\nprint('Average number killed in independent attacks: {:,.1f}'.format(individual_killed[1]))","d5c394aa":"group = df.groupby('gname').count()['eventid'].sort_values(ascending = False)\nworst_groups = group[1:31]\n\naverage_kills_dict = {}\nfor group in worst_groups.index:\n    group_data = df[df['gname'] == group]['nkill']\n    \n    average_kills_dict[group] = group_data.mean()\n    \naverage_kills = pd.Series(average_kills_dict).sort_values(ascending = False)\n\nfig, ax = plt.subplots(figsize = (20, 10))\nplt.bar(average_kills.index, average_kills.values, color = 'r')\nplt.xticks(rotation = 90)\nplt.title('Average Number Killed Per Attack, for groups with most attacks', fontsize = 24, y = 1.04)\nsns.despine(left = 'True')\nax.set_facecolor('black')\nplt.setp(ax.get_yticklabels(), fontsize = 16)\nplt.setp(ax.get_xticklabels(), fontsize = 14);","c72943f8":"print('Number of FLNC attacks:', len(df[df['gname'] == 'Corsican National Liberation Front (FLNC)']['nkill']))\nprint('Number of people FLNC has killed:', int(df[df['gname'] == 'Corsican National Liberation Front (FLNC)']['nkill'].sum()))\n\nprint()\nprint('Number of FDN attacks:', len(df[df['gname'] == 'Nicaraguan Democratic Force (FDN)']))\nprint('Number of people the FDN has killed:', int(df[df['gname'] == 'Nicaraguan Democratic Force (FDN)']['nkill'].sum()))","d1c5284d":"success = df.groupby('success')['eventid'].count()\n\nfig, ax = plt.subplots(figsize = (8, 8))\nplt.bar(success.index, success.values, color = 'black')\nplt.xticks([0, 1])\nplt.title('Number of Attacks by Successfulness', fontsize = 18, y = 1.04)\nax.set_xticklabels(['Failure', 'Success'], fontsize = 16, y = - 0.02)\nsns.despine(left = True)\nplt.show()\n\npercent_successful = (success[1] \/ (success[0] + success[1])) * 100\nprint('Percentage of attacks which were successful: {:,.2f}'.format(percent_successful))","5e1caf41":"country_success_rate = df.groupby('country_txt').mean()['success']\n\ndata = dict(type = 'choropleth', \n            locations = country_success_rate.index,\n            locationmode = 'country names',\n            z = country_success_rate.values, \n            text = country_success_rate.index)\nlayout = dict(title = 'Percentage of Attacks Which Were Successful', \n              height = 1200,\n              geo = dict(showframe = False, \n                         projection = {'type': 'mercator'}))\n\nfig = go.Figure(data = [data], layout=layout)\niplot(fig)","66060ea3":"country_success_rate = df.groupby('country_txt').mean()['success']\n\nprint('Countries with the lowest success rate:')\nfor index, row in country_success_rate.sort_values().head(20).iteritems():\n    print(index, '{:,.1f}'.format(row))","04f0f4c1":"grouped = df.groupby('country_txt')\nkilled = grouped.count()['nkill']\nsuccess_rate = grouped.mean()['success'] * 100\nfig, ax = plt.subplots(figsize = (12, 8))\nsns.scatterplot(killed, success_rate, color = 'black')\nplt.title('Scatterplot of Countries by Success Rate and Number Killed', fontsize = 20, y = 1.02)\nplt.ylabel('% Attacks Successful in Country', fontsize = 16)\nplt.xlabel('Number Killed in Country', fontsize = 16)\nplt.xticks(fontsize = 14)\nplt.yticks(fontsize = 14)\nsns.despine(left = True);","6400780c":"year_success = df.groupby('iyear').mean()['success'] * 100\n\nfig, ax = plt.subplots(figsize = (18, 8))\nplt.plot(year_success.index, year_success.values, color = 'black', linewidth = 5)\nplt.title('Success Rate over Time', fontsize = 22, y = 1.03)\nplt.ylabel('Percentage of Attacks which were Successful', fontsize = 14)\nplt.yticks(fontsize = 14)\nplt.xticks(fontsize = 16)\nplt.ylim(0, 100)\nsns.despine(left = True);","45848397":"n = len(df['region_txt'].unique())\ncolor = plt.cm.rainbow(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (16, 10))\nfor region in df['region_txt'].unique():\n    region_data = df[df['region_txt'] == region]\n    year_success = region_data.groupby('iyear').mean()['success'] * 100\n\n    plt.plot(year_success, label = region, color = colors[count][1])\n    count += 1\n    \nplt.legend(bbox_to_anchor=(1.05, 0.8), loc=2, borderaxespad=0.)\nplt.title('Success Rate Over Time by Region', fontsize = 22, y = 1.02)\nsns.despine(left = True);","17dede57":"n = 4\ncolor = plt.cm.viridis(np.linspace(0,1,n))\nc = zip(range(n), color)\ncolors = [color for color in c]\ncount = 0\n\nfig, ax = plt.subplots(figsize = (16, 12))\nfor region in ['Sub-Saharan Africa', 'Middle East & North Africa', 'South Asia', 'Southeast Asia']:\n    region_data = df[df['region_txt'] == region]\n    year_success = region_data.groupby('iyear').mean()['success'] * 100\n    \n    plt.plot(year_success, linewidth = 4, color = colors[count][1])\n    plt.text(year_success.index[-1] + 0.5, year_success.values[-1], region)\n    count += 1\n    \nsns.despine(left = True)\nplt.title('Success Rate Over Time in Most Troubled Regions', fontsize = 22, y = 1.02);","6666f275":"region_success = df.groupby(['region_txt', 'success'])['eventid'].count()\n\nfraction_dict = {}\nfor region in df['region_txt'].unique():\n    success = region_success[region][1]\n    failure = region_success[region][0]\n    fraction_successful = (success \/ (success + failure)) * 100\n    fraction_dict[region] = fraction_successful\n\nfraction_series = pd.Series(fraction_dict).sort_values(ascending = False)\n\nplt.subplots(figsize = (12, 6))\nplt.bar(fraction_series.index, fraction_series.values, alpha = 0.6)\nplt.xticks(rotation = 80)\nplt.title('Percentage of Attacks Which Were Successful By Region', fontsize = 18, y = 1.02)\nsns.despine(left = True)\nplt.show()","d0f161dc":"method_success = df.groupby(['attacktype1_txt', 'success'])['eventid'].count()\n\nfraction_dict = {}\nfor method in df['attacktype1_txt'].unique():\n    success = method_success[method][1]\n    failure = method_success[method][0]\n    fraction_successful = (success \/ (success + failure)) * 100\n    fraction_dict[method] = fraction_successful\n\nfraction_series = pd.Series(fraction_dict).sort_values(ascending = False)\n\nplt.subplots(figsize = (12, 6))\nplt.bar(fraction_series.index, fraction_series.values, alpha = 0.6)\nplt.xticks(rotation = 80)\nplt.title('Percentage of Attacks Which Were Successful By Attack Type', fontsize = 18, y = 1.02)\nsns.despine(left = True)\nplt.show()","9cf1b2f8":"target_success = df.groupby(['targtype1_txt', 'success'])['eventid'].count()\n\nfraction_dict = {}\nfor target in df['targtype1_txt'].unique():\n    success = target_success[target][1]\n    failure = target_success[target][0]\n    fraction_successful = (success \/ (success + failure)) * 100\n    fraction_dict[target] = fraction_successful\n\nfraction_series = pd.Series(fraction_dict).sort_values(ascending = False)\n\nplt.subplots(figsize = (12, 6))\nplt.bar(fraction_series.index, fraction_series.values, alpha = 0.6)\nplt.xticks(rotation = 90)\nplt.title('Percentage of Attacks Which Were Successful By Target Type', fontsize = 18, y = 1.02)\nsns.despine(left = True)\nplt.show()","92bfdb36":"individual = df[df['individual'] == 1]\nindependent_success = individual.groupby('success')['eventid'].count()\n\nprint('Percentage of attacks by independent actors which were successful: {:,.1f}%'.format(\n        (independent_success[1] \/ (independent_success[1] + independent_success[0])) * 100))","18ad3b63":"The success rate has declined somewhat recently, and is at its lowest point since the '70s. ","760c5280":"It looks like terrorists generally manage to achieve the direct objectives of their strikes. Of course, that doesn't necessarily translate into furthering the broader goals which motivate those strikes. This dataset has understandably poor information on the motives behind attacks (almost all of the entries are empty or 'Unknown'), and no information on the wider effects of the attacks. Nonetheless, whether or not attacks were successful in their direct goals is certainly significant. Let's see how other factors in the data relate to success rates.\n\nFirst, we'll look at how success rate varies by country.","a9deaa68":"Yet again one of our averages is hugely influenced by the World Trade Center attacks. The averages with those attacks removed are displayed below.","1ac90748":"Attacks in East Asia were also more deadly on average than those in Sub-Saharan Africa in some recent years. The East Asian average spiked in 2009, but only one incident in the region killed more than one person that year. That incident was the \u00dcr\u00fcmqi riots in China. \u00dcr\u00fcmqi is the capital of China's westernmost province Xinjiang, which occupies the northern portion of China's far west. The riots were part of the Xinjiang conflict, which is a long-running violent conflict between the region's Uyghur Turkic ethnic minority and Han Chinese. A few articles about the riots and the larger conflict are linked below:\n\nhttps:\/\/www.theguardian.com\/world\/2009\/jul\/06\/china-riots-uighur-xinjiang\n\nhttps:\/\/www.npr.org\/sections\/parallels\/2017\/09\/26\/553463964\/wary-of-unrest-among-uighur-minority-china-locks-down-xinjiang-province\n\nhttps:\/\/www.hrw.org\/reports\/2005\/china0405\/china0405.pdf\n\nMany of the other highly deadly attacks in East Asia recently have been related to this conflict, as you can observe in the records displayed below, ordered by decreasing fatality numbers.\n\nOf course, we have to remember that these relatively high averages for number killed per attack in East Asia in recent years occur in the context of a very small number of attacks in East Asia relative to other regions. For example, an attack in 2009 in the Democratic Republic of Congo killed about twice as many people as the \u00dcr\u00fcmqi riots (see the hidden code cell below for the worst attacks that year), but Sub-Saharan Africa also experienced many more attacks with a low death toll that year, so its average wasn't as high. That said, there's no doubt that the recent high casualty attacks in East Asia are extreme, terrible events.","c23f29d2":"It's interesting that several regions had a sucess rate of 100% for long stretches.\n\nThis graph is kind of a mess though, so let's plot success rates in the most attacked regions alone.","43e4af77":"It looks like the trend of attacking suicidally began in the '90s. Now suicide attacks makes up a substantial minority of all attacks, with ~7.7% of attacks in 2017 involving suicide.","bc62e4c2":"Two of the four most deadly incidents were the World Trade Center attacks. \n\nOne of the others was an episode in the Rwandan genocide called the Musha Church Massacre. Thousands of Tutsis sought refuge in this church in Rwanda's capital, Kigali; a Hutu paramilitary group launched an attack on the church using guns, grenades, and machettes, and more than a thousand people were killed. A judgment and sentence related to the case from the International Criminal Tribunal for Rwanda is linked below:\n\nhttp:\/\/unictr.irmct.org\/sites\/unictr.org\/files\/case-documents\/ictr-00-60\/trial-judgements\/en\/060413.pdf\n\nFinally, the attack in the dataset which individually killed the most people was the Camp Speicher massacre in Iraq. In 2014, ISIL attacked this airfield and academy, killing more than 1500 unarmed Iraqi Airforce cadets in mass shooting executions. ISIL posted videos and photographs of the massacre on their website. A news article about the attack is linked below:\n\nhttps:\/\/www.independent.co.uk\/news\/world\/middle-east\/camp-speicher-massacre-isis-islamic-state-tikrit-air-academy-iraq-a8040576.html\n\n<br\/>\nOn a positive rather than horrific note, it's striking how many attacks resulted in no deaths.\n\nThere is substantial regional variation in the average number killed per attack. Let's see a graph.","10161bf8":"It looks like a lot of the recent reduction in success rate stems from falling success rates in these key regions. The success rate in Sub-Sahran Africa remains high, and the rate in Southeast Asia has also stayed quite high, but the rate in South Asia, and the Middle East & North Africa has fallen substantially.\n\nLet's see the total success rate by region, not taking time into account.","a351c5ba":"Independent attacks don't tend to be any deadlier than group-based attacks, unsurprisingly.\n\nLet's see if some of the top groups we identified above tend to kill more than others with their attacks.","0051f359":"And let's get a full boxplot as well, so we can see the extreme outliers.","ca900b88":"The general success rate is ~89%, so independent actors are substantially less likely to succeed, although they mostly still do.","93edaad6":"Another particularly interesting sort of attack is the suicide attack. How common are suicide attacks? Are they worse than regular attacks?","fcc59792":"Let's make separate plots for each region, and see what kind of variation there is.","061a7af3":"It's interesting that Eastern Europe experienced essentially no attacks before the late '80s. I guess they started as the Soviet Union was collapsing.","48d19171":"# Perpetrators","a9346547":"The correlation is high, so number of attacks in a place is probably about as good for evaluating the severity of terrorism in that place as the number killed there is.\n\nNonetheless, let's also get a graph of numbers killed by region over time.","28054cd8":"It's interesting that essentially all of the abortion related terrorism has taken place in North America. Elsewhere it's either vanishingly small or not present at all, but in North America it makes up a substantial portion of the terrorist activity. Unsurprisingly, all of those attacks took place in America, rather than Mexico or Canada (see the hidden code cell above).\n\nNow let's look at how deadly attacks on each target type tend to be.","4f65e1d5":"Sub-Saharan Africa -- with its current high number of attacks -- is just catching up to South America and Western Europe, which have relatively low levels now, but experienced many attacks in the past.\n\nI'll graph the total number of attacks in every country, to help understand the relative distribution.","5701b5d8":"The extremely high average in Sub-Saharan Africa is disturbing. I wonder how consistent that is over time. Let's see a time series.","7b397dae":"A few take-aways:\n\n- The rate at which attacks were committed substantially spiked in the last decade, and then declined constantly since 2014, though it remains high relative to historical levels.\n- Recently, the vast majority of attacks have taken place in the Middle East & North Africa, South Asia, Sub-Saharan Africa, and Southeast Asia.\n- In particular, ~35% of all attacks in the dataset took place in Iraq, Pakistan, Afghanistan, or India.\n- In total, the dataset records about 412,000 deaths of terrorist victims.\n- Approximately half of the attacks killed no one.\n- Of those attacks which killed someone, ~40% killed exactly one person.\n- Bombing has been the most common type of attack for the entire time span covered by the dataset.\n- In most of the dataset, lone wolf attacks are extremely uncommon. However, in recent years they have made up a fairly substantial portion of the attacks in North America (reaching a high of ~50% in 2017).\n- A large majority of terrorist attacks succeed in their direct goals, although their success in furthering broader motivating goals is less clear.\n\n<br\/>\nThank you for reading my exploration of the START UMD terrorism dataset. I hope it was helpful or interesting for you. If you have any questions or suggestions, please leave a comment below.","3ab93d03":"This is a pretty strange boxplot, since the values are so concentrated.\n\nFacility\/Infrastracture Attack, Hijacking, and Unarmed Assault each have all quartiles at zero (because more than 75% of cases had 0 killed), so the boxplot is just a line at 0 for them. Similarly, the boxplot for Assassinations is just a line at 1, because 57% of assassinations resulted in 1 person being killed. That 57% straddles the interquartile range, so all of the quartiles are 1.\n\nThe medians for Armed Assault, Assassination, and Unknown are each 1 killed per attack. The medians of everything other category are 0 killed per attack.\n\nThe upper quartiles of Bombing\/Explosion and both types of kidnapping are 1. The upper quartile of Armed Assault is 3, and the upper quartile of Unknown is 5.\n\nOn the graph above I cut the values at 100 killed, so the boxplots would actually be visible. But the plot of \"outliers\" which results from making a boxplot of the full data is actually interesting as well, so it's plotted below.","3b85550a":"It's a little surprising to me how few attacks were committed by independent actors (i.e. 0.3%), given the prevalence in media of the idea of \"lone wolves\". This may be bias from my North American perspective, as this sort of attack is much more prevalent in North America and Western Europe.","2da1a8c1":"This dataset was created by the National Consortium for the Study of Terrorism and Responses to Terrorism (START), headquartered at the University of Maryland. It claims to be the most comprehensive unclassified database on terrorist attacks in the world.","ca4f545c":"No country in the dataset has avoided attack entirely (or it wouldn't be in the dataset), but several have been attacked only once, including the Falkland Islands, Vatican City, and North Korea (see the hidden code cell above for the full list).\n\nI can't put readable country names on the graph above, so let's also plot number of attacks in some of the worst affected countries.","8f3903dc":"They may also be in the media more because their frequency is increasing.","8a95e8f4":"It seems that attacks in the '70s did tend to kill fewer people than attacks at other points in time.\n\nLet's look at people wounded by attacks.","b319038b":"It looks like Sub-Saharan Africa has had the deadliest average attacks most years since 1990. It was of course outstripped by North America in 2001, because of the 9\/11 attacks. \n\nIt was also outstripped by Eastern Europe in 2004, primarily on the basis of one attack, it seems. Records for the worst Eastern European attacks from that year are displayed below. The exceptionally bad attack which is dragging up the average is a hostage taking incident in Russia called the Beslan school siege, which resulted in the deaths of 344 victims. It was perpetrated by Chechen rebels in the North Caucasus. Many of the people killed were children, and it precipitated large-scale counterterrorism reforms in Russia. A short article about it from the Encyclopedia Britannica is linked below:\n\nhttps:\/\/www.britannica.com\/event\/Beslan-school-attack","4d48dff6":"The countries with the greatest number killed don't have the highest success rates, although they certainly don't have exceptionally low rates of success either.\n\nNow let's look at how the rate has changed over time.","0e67d7d9":"Indeed, bombings do tend to be undertaken by smaller numbers of people than higher-average-mortality alternatives like armed assault and hostage taking.","e292c8ee":"So it looks like this is actually a significant phenomenon in North America and -- to a lesser extent -- in Western Europe.","fc1f1300":"A substantial number of attacks wounded no one. What is the overlap like between these attacks and the ones which killed no one?","6446005a":"# \"Success\" of Attacks","36d226c2":"Now let's check out variation by attack type and target type.","ec2b0eb4":"To my eye, the most obvious differences between this plot and the graph of number of attacks over time, are that Sub-Saharan Africa tends to be higher, and Southeast Asia tends to be lower. This is in line with what we observed in our graphs of relative deadliness by region above.\n\nIt also looks like the portion of the graph between 1970 and 1980 is lower than in the plot of number of attacks. Were attacks then less deadly on average? Let's see.","2f150fe2":"# Method of Attack","5adf50ed":"In the first section, I was essentially using number of attacks as a proxy for the burden of terrorism in a place. Perhaps number killed by terrorism in a place would be a better metric. On the other hand, those two are probably closely related. Let's see what the correlation between number of attacks and number killed is.","bde63619":"The huge spike in recent years is obvious and disturbing. Also very intriguing is the constant decline since 2014.\n\nThere is no data for 1993 because it was lost before everything was digitized, according to the FAQ on the provider's site.","9cca767e":"The correlation between number of perpetrators and number killed is modest but positive. One consideration is that it is powerfully affected by extreme outliers. If two or three of the incidents with extremely high perpetrator counts are dropped, it increases to several times that size, suggesting that the large average difference in perpetrator numbers between bombing and the other attack types may well be a significant contributor to the difference in average numbers killed. It's not totally obvious to me that removing extreme outliers here is a good idea, but it may give a clearer picture of what trends are like in the bulk of the data.\n\nLet's look at which types of attack are most likely to cause no deaths.","10de0608":"Evidently the modern surge in attacks is primarily driven by incidents in the Middle East & North Africa, South Asia, Sub-Saharan Africa, and Southeast Asia.\n\nAustralasia & Oceania, Central Asia, and East Asia are all barely visible, because they've seen such a small number of attacks relative to the other regions for the entire period.\n\nCentral America and South America experienced many attacks in the '80s and '90s, and comparatively few since then. South America still has somewhat high levels though, with more attacks in the latest year than Eastern Europe or North America.\n\nNorth America is sporadically visible, with its levels generally quite low. There has been some increase in the number of attacks there in recent years, approaching the levels of earlier peaks. \n\nEastern Europe, has also had fairly low levels generally, but saw a huge spike in the 2010s. Western Europe had very high relative numbers of attack in the '70s (when most other regions had almost none), and a fairly large number of attacks in the '80s and '90s, with a decline in the 2000s. It is trending upwards in recent years as well, although it's still below its average pre-2000s levels (which was ~463 per year, albeit with fairly large variance; the calculation is in the hidden code cell below this one, if you would like to check it).\n\nLet's graph a few of the regions individually, so their trends are less obscured.","8163986d":"What a contrast. The Corsican National Liberation Front has killed people, but only 13 people, despite launching 639 terror attacks (see the hidden cell above). Whereas the Nicaraguan Democratic Force has killed 6662 people in 895 attacks.","b72fcd42":"# Numbers Killed and Wounded","a5d45e2b":"It looks like the relative balance of attack types has been fairly constant over time.","55b0d07a":"Evidently the rate is high almost everywhere, although there is certainly variation between countries.","e295747e":"Unsurprisingly, given the prevalence of bombings which we have already observed, explosives are the most common weapon used.\n\nPresumably the weapons generally used vary with the target of attack. Let's look at the weapons used in assassinations.","04a6ab85":"# Targets of Attack ","dcd8e16f":"There are attacks which killed many and wounded very few, and also attacks which wounded many and killed very few.\n\nThe point in the top right is of course the World Trade Center attacks. The numbers killed and wounded by the two planes are essentially the same, according to this dataset, so that's actually two points plotted on top of each other. I think they may have just divided the total numbers in two and assigned half to each attack, rather than attempting to accurately adjudicate numbers between the planes.\n\nThe attack with ~1200 killed and none wounded is the Musha church massacre in Rwanda.\n\nThe attack with ~5500 wounded and very few killed is the Tokyo sarin gas attack.\n\nThe Camp Speicher massacre is not displayed, because its entry doesn't include information on numbers wounded\n\nThe incident with ~4000 wounded and ~200 killed is the 1998 bombing of American Embassies in Nairobi, Kenya and Dar es Salaam, Tanzania. Terrorists detonated trucks filled with explosives outside the embassies. The embassy buildings were largely destroyed, and other buildings collapsed within a two to three block radius in Nairobi. These were the attacks which first brought substantial attention to al-Qaida and Osama bin Laden. The incident provoked the Clinton administration to launch cruise missiles against targets in Afghanistan and Sudan. An article from the Gaurdian about the significance of the attacks and bin Laden's role in them is linked below:\n\nhttps:\/\/www.theguardian.com\/world\/2015\/jan\/20\/africa-embassy-bombings-osama-bin-laden-kenya-tanzania-al-qaida","ce998b64":"The other regions are also affected by removing their extreme outliers, but to a much smaller extent.\n\nFor calculations on numbers killed per attack by region, removing the extreme outliers in Africa and the Middle East does not cause large changes, but removing the World Trade Center attacks does cause a huge reduction in the North American average, to about 0.63 killed per attack (see the hidden code cell above for that calculation).","5d7b347f":"What about attacks by people acting alone?","82eb14f2":"The huge drop in the hijacking average is partially because there are few instances of hijacking in the dataset, but also because the WTC attacks were simply extraordinarily destructive. \n\nThere are few instances of the attack type \"Hostage Taking (Baricade Incident)\" as well, but there are of course no similarly extreme outliers in that category. If several of the worst incidents of that kind are removed from the calculation, the average does of course fall, but it remains high.\n\nIt's interesting that Bombing\/Explosion is not the most deadly type of attack, considering that it is so consistently the most common one. Perhaps this is because bombings tend to be smaller scale attacks than some of the types that have higher average death tolls. Let's look at how many people tend to be involved in each type of attack. ~84% of the attacks are missing information on number of perpetrators (see hidden code cell below for that calculation), so the data we do have may not be truly representative. Let's see what the data say though.","a90c51aa":"I'll also plot this graph with error bars of one standard deviation, to give some sense of the variance in the data. The error bars are of course huge relative to the mean values plotted, since most attacks kill no one or very few people, while some attacks kill very many.","9e4eeb94":"# Conclusion"}}