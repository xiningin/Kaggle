{"cell_type":{"d9685c87":"code","854ca1d8":"code","c99eab6e":"code","a14e3759":"code","41721b01":"code","eab3c57e":"code","7918625b":"code","46eb14ea":"code","8353f25a":"code","7a610425":"code","ac80a2ed":"code","7a662589":"code","4735abb8":"code","e5f32e7d":"code","88b5ee26":"markdown","6e41b827":"markdown","d2cc57a8":"markdown","d2cb8f4c":"markdown","b0d20dfe":"markdown","c0145805":"markdown","75d02c60":"markdown","8459c055":"markdown","8d4bbe1d":"markdown","0f7aee3e":"markdown","4fc076d2":"markdown","cb7fd7f7":"markdown"},"source":{"d9685c87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom plotly.offline import init_notebook_mode, iplot\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport plotly.graph_objs as go\nfrom collections import Counter\nimport datetime as dt\nfrom plotly.subplots import make_subplots\nfrom matplotlib.patches import ConnectionPatch\nfrom plotly.offline import iplot\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","854ca1d8":"# read the files, remove the the questions and check what it looks like\n\nsurvey_data = pd.read_csv(\"..\/input\/kaggle-survey-2021\/kaggle_survey_2021_responses.csv\", index_col=False, low_memory=False)\n#survey_data.head()\nsurvey_data = survey_data.iloc[1:,:]\nsurvey_data.head()\n#survey_data.shape","c99eab6e":"# India responses\nindia = survey_data.loc[survey_data.loc[:, 'Q3']== 'India']","a14e3759":"# Countries that are most responsive to the kaggle survey shown in a pie chart\n\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(25, 30))\nfig.subplots_adjust(wspace=0)\n\n# Data for pie chart of countries ranking in number of respondents\nsns.set_palette(\"Set3\", 24)\ncountry = survey_data['Q3'].value_counts().index\nnum = survey_data['Q3'].value_counts().values.tolist()\ncountry = country[0:24]\nnum = num[0:24]\n\nlabel=['India','USA','Other','Japan','China','Brazil','Russia','Nigeria',\n       'UK','Pakistan','Egypt','Germany','Spain','Indonesia','Turkey','France',\n       'South Korea','Taiwan','Canada','Bangledesh','Italy','Mexico','Vietnam', 'Australia']\nexplode=[0.2,0.02,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,\n         0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.9,]\nangle = -185 * num[0]\ncolors= ('burlywood','tab:orange','tab:cyan', 'tab:olive')\nax1.pie(num, autopct='%1.1f%%', startangle=angle, explode=explode, radius=1.6,\n        labels=label, textprops={'fontsize' : 20, 'fontweight' : 'bold'}, \n        colors=colors, rotatelabels=200, labeldistance=1.1)\n\ntextstr = 'TOP 24 COUNTRIES RANKING'\nprops = dict(boxstyle='round', facecolor='white', alpha=0.5)\nax1.text(-0.05, 1.65, textstr, transform=ax1.transAxes, fontsize=35, fontweight='bold',\n        verticalalignment='bottom', bbox=props)\n\n#bar chart parameters of India\nxpos = 0\nbottom = 0\n\n# India age distribution\nindia_age = india['Q1'].value_counts().index\nindia_num = india['Q1'].value_counts().values.tolist()\n\nwidth = 1\nfor j in range(len(india_age)):\n    height = india_num[j]\n    ax2.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax2.patches[j].get_height() \/ 2\n    bottom += height\n    ax2.text(xpos, ypos, \"%d\" % (ax2.patches[j].get_height()),\n             ha='center', fontsize=17, weight='bold')\nax2.set_title('INDIA BREAKDOWN BY AGE',\n              fontsize=28, fontweight='semibold')\nax2.legend((india_age),bbox_to_anchor=(0.65,0.96), \n           facecolor='white',fontsize=30)\nax2.axis('off')\nax2.set_xlim(- 2.5 * width, 2.6 * width)\n\n\n# use ConnectionPatch to draw lines between the two plots\n# get the wedge data\ntheta1, theta2 = ax1.patches[0].theta1, ax1.patches[0].theta2\ncenter, r = ax1.patches[0].center, ax1.patches[0].r\nbar_height = sum([item.get_height() for item in ax2.patches])\n\n# draw top connecting line\nx = r * np.cos(np.pi \/ 180 * theta2) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta2) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, bar_height), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\ncon.set_linewidth(2)\nax2.add_artist(con)\n\n# draw bottom connecting line\nx = r * np.cos(np.pi \/ 180 * theta1) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta1) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, 0), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\nax2.add_artist(con)\ncon.set_linewidth(2)\n\n#Charting the India Job Distribution\nindia_j = india['Q5'].value_counts().index\nindia_j_num = india['Q5'].value_counts().values.tolist()\nwidth = 1\n\nfor j in range(len(india_j)):\n    height = india_j_num[j]\n    ax3.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax3.patches[j].get_height() \/ 2\n    bottom += height\n    ax3.text(xpos, ypos,\"%d\" % (ax3.patches[j].get_height()),\n             ha='center', fontsize=17)\n\nax3.set_title('BY JOB',\n              fontsize=28, fontweight='semibold')\nax3.legend(('1:Student', '2:Data Scientist', '3:Software Engineer',\n            '4:Currently not employed', '5:Data Analyst','6:Other',\n            '7:Machine Learning Engineer', '8:Business Analyst',\n            '9:Program\/Project Manager', '10:Research Scientist', \n            '11:Data Engineer','12:Product Manager', '13:Statistician', \n            '14:DBA\/Database Engineer','15:Developer Relations\/Advocacy'),bbox_to_anchor=(0.60,0.96), \n           facecolor='white',fontsize=28)\nax3.axis('off')\nax3.set_xlim(- 2.5 * width, 2.5 * width)\n\n\nplt.show()\n\n","41721b01":"\n# Establish the OECD countries that are in the kaggle survey \n# This includes Australia\n\na2 = survey_data.loc[survey_data.loc[:, 'Q3']=='Austria']  \naustralia = survey_data.loc[survey_data.loc[:, 'Q3']== 'Australia']\nbel = survey_data.loc[survey_data.loc[:, 'Q3']=='Belgium']\ncan = survey_data.loc[survey_data.loc[:, 'Q3']=='Canada']\nchi = survey_data.loc[survey_data.loc[:, 'Q3']== 'Chile']\nchina = survey_data.loc[survey_data.loc[:, 'Q3']== 'China']\ncol = survey_data.loc[survey_data.loc[:, 'Q3']=='Colombia']\ncez = survey_data.loc[survey_data.loc[:, 'Q3']=='Czech Republic']\nden = survey_data.loc[survey_data.loc[:, 'Q3']=='Denmark']\nfra = survey_data.loc[survey_data.loc[:, 'Q3']=='France']\nger = survey_data.loc[survey_data.loc[:, 'Q3']=='Germany']\ngre = survey_data.loc[survey_data.loc[:, 'Q3']=='Greece']\nire = survey_data.loc[survey_data.loc[:, 'Q3']=='Ireland']\nisr = survey_data.loc[survey_data.loc[:, 'Q3']=='Israel']\nita = survey_data.loc[survey_data.loc[:, 'Q3']=='Italy']\njapan = survey_data.loc[survey_data.loc[:, 'Q3']== 'Japan']\nmex = survey_data.loc[survey_data.loc[:, 'Q3']=='Mexico']\nnet = survey_data.loc[survey_data.loc[:, 'Q3']=='Netherlands']\nnor = survey_data.loc[survey_data.loc[:, 'Q3']=='Norway']\npol = survey_data.loc[survey_data.loc[:, 'Q3']=='Poland']\npor = survey_data.loc[survey_data.loc[:, 'Q3']=='Portugal']\nsko= survey_data.loc[survey_data.loc[:, 'Q3']=='South Korea']\nspa = survey_data.loc[survey_data.loc[:, 'Q3']=='Spain']\nswe = survey_data.loc[survey_data.loc[:, 'Q3']=='Sweden']\nswi = survey_data.loc[survey_data.loc[:, 'Q3']=='Switzerland']\ntur = survey_data.loc[survey_data.loc[:, 'Q3']=='Turkey']\nukn = survey_data.loc[survey_data.loc[:, 'Q3']=='United Kingdom of Great Britain and Northern Ireland']\nusa = survey_data.loc[survey_data.loc[:, 'Q3']== 'United States of America']\n                       \noecd = pd.concat([a2,australia,bel,can,chi,col,cez,den,fra,ger,gre,ire,isr,ita,japan,\n                  mex,net,nor,pol,por,sko,spa,swe,swi,tur,ukn,usa])\n\n# Estabilist the Non-OECD Countries Not including India\n# But include 'I' do not wish to disclose my location' and 'Other'\n\nalg = survey_data.loc[survey_data.loc[:, 'Q3']=='Algeria']\narg= survey_data.loc[survey_data.loc[:, 'Q3']=='Argentina']\nban= survey_data.loc[survey_data.loc[:, 'Q3']=='Bangladesh']\nbea= survey_data.loc[survey_data.loc[:, 'Q3']=='Belarus']\nbrazil = survey_data.loc[survey_data.loc[:, 'Q3']== 'Brazil']\necu= survey_data.loc[survey_data.loc[:, 'Q3']=='Ecuador']\negy= survey_data.loc[survey_data.loc[:, 'Q3']=='Egypt']\neth= survey_data.loc[survey_data.loc[:, 'Q3']=='Ethiopia']\ngha= survey_data.loc[survey_data.loc[:, 'Q3']=='Ghana']\nhks= survey_data.loc[survey_data.loc[:, 'Q3']=='Hong Kong (S.A.R.)']\nloc= survey_data.loc[survey_data.loc[:, 'Q3']=='I do not wish to disclose my location']\nind= survey_data.loc[survey_data.loc[:, 'Q3']=='Indonesia']\nirs= survey_data.loc[survey_data.loc[:, 'Q3']==\"Iran, Islamic Republic of...\"]\niraq= survey_data.loc[survey_data.loc[:, 'Q3']=='Iraq']\nkaz= survey_data.loc[survey_data.loc[:, 'Q3']=='Kazakhstan']\nken= survey_data.loc[survey_data.loc[:, 'Q3']=='Kenya']\nmal= survey_data.loc[survey_data.loc[:, 'Q3']=='Malaysia']\nmor= survey_data.loc[survey_data.loc[:, 'Q3']=='Morocco']\nnel= survey_data.loc[survey_data.loc[:, 'Q3']=='Nepal']\nnig= survey_data.loc[survey_data.loc[:, 'Q3']=='Nigeria']\nother= survey_data.loc[survey_data.loc[:, 'Q3']=='Other']\npak= survey_data.loc[survey_data.loc[:, 'Q3']=='Pakistan']\nperu= survey_data.loc[survey_data.loc[:, 'Q3']=='Peru']\nphi= survey_data.loc[survey_data.loc[:, 'Q3']=='Philippines']\nrom= survey_data.loc[survey_data.loc[:, 'Q3']=='Romania']\nrus= survey_data.loc[survey_data.loc[:, 'Q3']=='Russia']\nsau= survey_data.loc[survey_data.loc[:, 'Q3']=='Saudi Arabia']\nsin= survey_data.loc[survey_data.loc[:, 'Q3']=='Singapore']\nsou= survey_data.loc[survey_data.loc[:, 'Q3']=='South Africa']\nsri= survey_data.loc[survey_data.loc[:, 'Q3']=='Sri Lanka']\ntai= survey_data.loc[survey_data.loc[:, 'Q3']=='Taiwan']\ntha= survey_data.loc[survey_data.loc[:, 'Q3']=='Thailand']\ntun= survey_data.loc[survey_data.loc[:, 'Q3']=='Tunisia']\nuga= survey_data.loc[survey_data.loc[:, 'Q3']=='Uganda']\nukr= survey_data.loc[survey_data.loc[:, 'Q3']=='Ukraine']\nuae= survey_data.loc[survey_data.loc[:, 'Q3']=='United Arab Emirates']\nvie= survey_data.loc[survey_data.loc[:, 'Q3']=='Viet Nam']\n                     \nnon_oecd = pd.concat([alg,arg,ban,bea,brazil,china,ecu,egy,eth,gha,hks,loc,ind,irs,\n                      iraq,kaz,ken,mal,mor,nel,nig,other,pak,peru,phi,rom,\n                      rus,sau,sin,sou,sri,tai,tha,tun,uga,ukr,uae,vie])\n\n\noecd_tot = oecd['Q3'].value_counts().index\noecd_tot1 = oecd['Q3'].value_counts().values.tolist()\noecd2 = sum(oecd_tot1)","eab3c57e":"# Comparing Australia on the left versus the top 5 countries on the right\n# These are age breakdown for all gender\nusa_a = usa['Q1'].value_counts().index\nusa_num = usa['Q1'].value_counts().values.tolist()\n    \njapan_a = japan['Q1'].value_counts().index\njapan_num = japan['Q1'].value_counts().values.tolist()\n\nchina_a = china['Q1'].value_counts().index\nchina_num = china['Q1'].value_counts().values.tolist()\n\nbrazil_a = brazil['Q1'].value_counts().index\nbrazil_num = brazil['Q1'].value_counts().values.tolist()\n\naus_a = australia['Q1'].value_counts().index\naus_num = australia['Q1'].value_counts().values.tolist()\n\nsns.set_style('whitegrid')\nfig, axs = plt.subplots(nrows=1, ncols=2, constrained_layout=True, sharex=True, sharey=True, figsize=(20,8))\nfig.suptitle('AUSTRALIA VERSUS USA,JAPAN, CHINA, BRAZIL\\n   ', fontsize=25, fontweight='bold')\nsns.set_style('whitegrid')\naxs = axs.flatten()\naxs[0].bar(aus_a, aus_num, color='tab:olive')\naxs[0].set_title('Australia Respondents by Age', fontweight='semibold', fontsize=20)\naxs[0].set_ylabel('No of Respondents')\n\naxs[1].bar(usa_a, usa_num, color='blue')\naxs[1].set_title('USA Respondents by Age', fontweight='semibold', fontsize=20)\n\nfig, axs = plt.subplots(nrows=3, ncols=2,constrained_layout=True, sharex=True, sharey=True, figsize=(20,16))\nsns.set_style('whitegrid')\naxs = axs.flatten()\naxs[0].bar(aus_a, aus_num, color='tab:olive')\naxs[0].set_ylabel('No of Respondents')\n\naxs[1].bar(japan_a, japan_num,color=\"r\")\naxs[1].set_title('Japan Respondents by Age', fontweight='semibold', fontsize=20)\n\naxs[2].bar(aus_a, aus_num, color='tab:olive')\naxs[2].set_ylabel('No of Respondents')\n\naxs[3].bar(china_a, china_num, color='tab:purple')\naxs[3].set_title('China Respondents by Age', fontweight='semibold', fontsize=20)\n\naxs[4].bar(aus_a,aus_num,color='tab:olive')\naxs[4].set_ylabel('No of Respondents')\naxs[4].set_xlabel('Age Group', fontsize=15)\n\naxs[5].bar(brazil_a, brazil_num, color='tab:brown')\naxs[5].set_title('Brazil Respondents by Age', fontweight = 'semibold', fontsize=20)\naxs[5].set_xlabel('Age Group', fontsize=15)\n\n\nplt.show()\n","7918625b":"# Comparing OECD vs Non-OECD vs India Responses\n# Show within OECD: 1) The countries and their ranking 2) Age Distribution 3) Job Types \n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=(20, 30))\nfig.subplots_adjust(wspace=0.2)\n\noecd_a = oecd['Q1'].value_counts().index\noecd_num = oecd['Q1'].value_counts().values.tolist()\n\noecd_j = oecd['Q5'].value_counts().index\noecd_j_num = oecd['Q5'].value_counts().values.tolist()\n\noecd_s = oecd['Q25'].value_counts().index\noecd_s_num = oecd['Q25'].value_counts().values.tolist()\n\nsns.set_palette(\"Paired\", 24)\nsns.set(font=\"Arial\")\nres = [8973, 9567, 7434]\nres_label = ['OECD', 'NON-OECD','India']\n\nexplode=[0.3,0.01,0.01,]\nangle = -184 * res[0]\ncolors=('tab:cyan','tab:orange','burlywood')\nax1.pie(res, autopct='%1.1f%%', startangle=angle, explode=explode, radius=1.6,\n        labels=res_label, labeldistance = 1.1, textprops={'fontsize': 18, 'fontweight': 'bold'}, \n        colors=colors, rotatelabels=200,)\n\n#bar chart parameters of OECD Countries\nxpos = 0\nbottom = 0\nwidth = 1\n\ntextstr = 'OECD, INDIA, NON-OECD GROUPINGS\\n% OF RESPONDENTS'\nprops = dict(boxstyle='round', facecolor='white', alpha=0.5)\nax1.text(-0.6, 2, textstr, transform=ax1.transAxes, fontsize=20, fontweight='bold',\n        verticalalignment='bottom', bbox=props)\n\n# This is to chart countries\nfor j in range(len(oecd_tot)):\n    height = oecd_tot1[j]\n    ax2.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax2.patches[j].get_height() \/ 2\n    bottom += height\n    ax2.text(xpos, ypos, \"%d\" % (ax2.patches[j].get_height()),\n             ha='center', fontsize=14)\n\nax2.set_title('OECD COUNTRIES \\nBREAKDOWN BY RESPONSES',fontsize=20, fontweight='semibold')\nax2.legend(('1: USA','2: Japan','3: UK','4: Germany','5: Spain','6: Turkey','7: France','8: S. Korea',\n            '9: Canada','10: Italy','11: Mexico','12: Australia','13: Colombia','14: Poland',\n            '15: Netherlands','16: Israel','17: Portugal','18: Greece','19: Chile','20: Ireland',\n            '21: Sweden','22: Switzerland','23: Belgium','24: Czech\\nRepublic','25: Austria',\n            '26: Denmark','27: Norway'), \n           fontsize=20, bbox_to_anchor=(0.65,0.96), \n           facecolor='white')\nax2.axis('off')\nax2.set_xlim(- 2.5 * width, 2.5 * width)\n\n# use ConnectionPatch to draw lines between the two plots\n# get the wedge data\ntheta1, theta2 = ax1.patches[0].theta1, ax1.patches[0].theta2\ncenter, r = ax1.patches[0].center, ax1.patches[0].r\nbar_height = sum([item.get_height() for item in ax2.patches])\n\n# draw top connecting line\nx = r * np.cos(np.pi \/ 180 * theta2) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta2) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, bar_height), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\ncon.set_linewidth(2)\nax2.add_artist(con)\n\n# draw bottom connecting line\nx = r * np.cos(np.pi \/ 180 * theta1) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta1) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, 0), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\nax2.add_artist(con)\ncon.set_linewidth(2)\n\n# This is to chart the age distribition\nwidth =1\nfor j in range(len(oecd_a)):\n    height = oecd_num[j]\n    ax3.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax3.patches[j].get_height() \/ 2\n    bottom += height\n    ax3.text(xpos, ypos, \"%d\" % (ax3.patches[j].get_height()),\n             ha='center', fontsize=14)\n\nax3.set_title('BY AGE',fontsize=20, fontweight='semibold')\nax3.legend((oecd_a), \n           fontsize=22, bbox_to_anchor=(0.63,0.96), \n           facecolor='white')\nax3.axis('off')\nax3.set_xlim(- 2.5 * width, 2.5 * width)\n\n# This is to chart the job types\nfor j in range(len(oecd_j)):\n    height = oecd_j_num[j]\n    ax4.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax4.patches[j].get_height() \/ 2\n    bottom += height\n    ax4.text(xpos, ypos, \"%d\" % (ax4.patches[j].get_height()),\n             ha='center', fontsize=14)\n\nax4.set_title('BY JOB',fontsize=20, fontweight='semibold')\nax4.legend(('1: Student', '2: Data Scientist', '3: Other', '4: Software Engineer',\n       '5: Research Scientist', '6: Data Analyst', '7: Currently not employed',\n       '8: Machine Learning Engineer', '9: Program\/Project Manager',\n       '10: Business Analyst', '11: Data Engineer', '12: Product Manager', '13: Statistician',\n       '14: DBA\/Database Engineer', '15: Developer Relations\/Advocacy'), \n            fontsize=20, bbox_to_anchor=(0.63,0.96), \n           facecolor='white')\nax4.axis('off')\nax4.set_xlim(- 2.5 * width, 2.5 * width)\n\nplt.show()\n","46eb14ea":"# Comparing OECD vs Non-OECD vs India Responses\n# Show the countries in Non-OECD : 1) Countries Ranking 2)Their Age distribution 2) The Job types\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=(22, 30))\nfig.subplots_adjust(wspace=0)\n\nnon_oecd_tot = non_oecd['Q3'].value_counts().index\nnon_oecd_tot_num = non_oecd['Q3'].value_counts().values.tolist()\n    \nnon_oecd_a = non_oecd['Q1'].value_counts().index\nnon_oecd_num = non_oecd['Q1'].value_counts().values.tolist()\n\nnon_oecd_j = non_oecd['Q5'].value_counts().index\nnon_oecd_j_num = non_oecd['Q5'].value_counts().values.tolist()\n\nnon_oecd_s = non_oecd['Q25'].value_counts().index\nnon_oecd_s_num = non_oecd['Q25'].value_counts().values.tolist()\n\nsns.set_palette(\"Set3\",24)\nres = [9567,8973,7434]\nres_label = ['NON-OECD','OECD','INDIA']\n\ntextstr = 'NON-OECD, INDIA, OECD GROUPINGS\\n% OF RESPONDENTS'\nprops = dict(boxstyle='round', facecolor='white', alpha=0.5)\nax1.text(-0.4, 2, textstr, transform=ax1.transAxes, fontsize=20, fontweight='bold',\n        verticalalignment='bottom', bbox=props)\n\nexplode=[0.3,0.01,0.01,]\nangle = -190 * res[0]\ncolors=('tab:orange','tab:cyan','burlywood')\nax1.pie(res, autopct='%1.1f%%', startangle=angle, explode=explode, radius = 1.2,\n        labels=res_label, textprops={'fontsize': 16, 'fontweight' : 'bold'}, \n        colors=colors, rotatelabels=200)\n\n#bar chart parameters of OECD Countries\nxpos = 0\nbottom = 0\nwidth = 1\n\nfor j in range(len(non_oecd_tot)):\n    height = non_oecd_tot_num[j]\n    ax2.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax2.patches[j].get_height() \/ 2\n    bottom += height\n    ax2.text(xpos, ypos, \"%d\" % (ax2.patches[j].get_height()),\n             ha='center', fontsize=12)\n\nax2.set_title('38 NON-OECD\\nBREAKDOWN BY RESPONSES',fontsize=20, fontweight='semibold')\nax2.legend(('1: Other', '2: China', '3: Brazil', '4: Russia', '5: Nigeria', '6: Pakistan', '7: Egypt',\n       '8: Indonesia', '9: Taiwan', '10: Bangladesh', '11: Vietnam', '12: Kenya',\n       '13: Iran,\\nIslamic Republic of', '14: Ukraine', '15: Argentina', '16: Singapore',\n       '17: Malaysia', '18: South Africa', '19: Morocco', '20: Thailand', '21: Peru',\n       '22: UAE', '23: Tunisia', '24: Philippines', '25: Sri Lanka', '26: Ghana',\n       '27: Saudi Arabia', '28: Hong Kong', '29: Nepal',\n       '30: Not disclose', '31: Romania', '32: Belarus',\n       '33: Ecuador', '34: Uganda', '35: Kazakhstan', '36: Algeria', '37: Iraq', '38: Ethiopia'), \n           fontsize=19, bbox_to_anchor=(0.63,0.96), \n           facecolor='white')\nax2.axis('off')\nax2.set_xlim(- 2.5 * width, 2.5 * width)\n\n# use ConnectionPatch to draw lines between the two plots\n# get the wedge data\ntheta1, theta2 = ax1.patches[0].theta1, ax1.patches[0].theta2\ncenter, r = ax1.patches[0].center, ax1.patches[0].r\nbar_height = sum([item.get_height() for item in ax2.patches])\n\n# draw top connecting line\nx = r * np.cos(np.pi \/ 180 * theta2) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta2) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, bar_height), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\ncon.set_linewidth(2)\nax2.add_artist(con)\n\n# draw bottom connecting line\nx = r * np.cos(np.pi \/ 180 * theta1) + center[0]\ny = r * np.sin(np.pi \/ 180 * theta1) + center[1]\ncon = ConnectionPatch(xyA=(-width \/ 2, 0), coordsA=ax2.transData,\n                      xyB=(x, y), coordsB=ax1.transData)\ncon.set_color([0, 0, 0])\nax2.add_artist(con)\ncon.set_linewidth(2)\n\n\nwidth =1\nfor j in range(len(non_oecd_a)):\n    height = non_oecd_num[j]\n    ax3.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax3.patches[j].get_height() \/ 2\n    bottom += height\n    ax3.text(xpos, ypos, \"%d\" % (ax3.patches[j].get_height()),\n             ha='center', fontsize=12)\n\nax3.set_title('BY AGE',fontsize=20, fontweight='semibold')\nax3.legend((non_oecd_a), \n           fontsize=22, bbox_to_anchor=(0.75,0.96), \n           facecolor='white')\nax3.axis('off')\nax3.set_xlim(- 2.5 * width, 2.5 * width)\n\nwidth =1\nfor j in range(len(non_oecd_j)):\n    height = non_oecd_j_num[j]\n    ax4.bar(xpos, height, width, bottom=bottom)\n    ypos = bottom + ax4.patches[j].get_height() \/ 2\n    bottom += height\n    ax4.text(xpos, ypos, \"%d\" % (ax4.patches[j].get_height()),\n             ha='center', fontsize=12)\n\nax4.set_title('BY JOB',fontsize=20, fontweight='semibold')\nax4.legend(('1: Student', '2: Data Scientist', '3: Data Analyst', '4: Software Engineer',\n       '5: Other', '6: Currently not employed', '7: Machine Learning Engineer',\n       '8: Research Scientist', '9: Business Analyst', '10: Program\/Project Manager',\n       '11: Data Engineer', '12: Statistician', '13: Product Manager',\n       '14: DBA\/Database Engineer', '15: Developer Relations\/Advocacy'), \n           fontsize=22, bbox_to_anchor=(0.63,0.96), \n           facecolor='white')\nax4.axis('off')\nax4.set_xlim(- 2.5 * width, 2.5 * width)\n\nplt.show()\n","8353f25a":"# Salary comparisons between the 3 groups\n# Add a OECD median salary and an Data Scientist median salsry ranking\n\nindia_s = india['Q25'].value_counts().index\nindia_s_num = india['Q25'].value_counts().values.tolist()\n\nfig, axs = plt.subplots(nrows=3, ncols=1,constrained_layout=True, sharex=True, figsize=(20,20))\nfig.suptitle('COMPARING INDIA, OECD, NON-OECD SALARY LEVELS\\n  ', fontsize=20, fontweight='bold')\naxs = axs.flatten()\nsns.set_style('whitegrid')\n\nplt.xticks(rotation=90, fontsize=18)\naxs[0].bar(india_s, india_s_num, color='burlywood')\naxs[0].set_title('INDIA SALARY DISTRIBUTION', fontsize=20, fontweight = 'bold')\naxs[0].axvline(12,0,1000, linewidth=6, linestyle='--', color='r')\ntextstr = 'OECD 2020 AVERAGE ANNUAL WAGES @ 49.2K'\nprops = dict(boxstyle='round', facecolor='white', alpha=0.5)\naxs[0].text(0.35, 0.5, textstr, transform=axs[0].transAxes, fontsize=15,\n        verticalalignment='bottom', bbox=props)\n\n#axs[0].axvline(label='OECD MEDIAN SALARY')\n\naxs[1].bar(oecd_s, oecd_s_num, color='tab:cyan')\naxs[1].set_title('OECD COUNTRIES SALARY DISTRIBUTION', fontsize=20, fontweight = 'bold')\naxs[1].axvline(12,0,600, linewidth=6, linestyle='--', color='r')\n\naxs[2].bar(non_oecd_s, non_oecd_s_num, color='tab:orange')\naxs[2].set_title('ONO-OECD COUNTRIES SALARY DISTRIBUTION', fontsize=20, fontweight = 'bold')\naxs[2].axvline(12, 0, 1750, linewidth=6, linestyle='--', color='r')\n\nplt.show()\n","7a610425":"# Lets look at Gender - Man vs Woman in the 3 Groupings\n\n\noecd_wo = oecd.loc[oecd.loc[:, 'Q2']=='Woman']\noecd_ma = oecd.loc[oecd.loc[:, 'Q2']=='Man']\noecd_gender = pd.concat([oecd_wo, oecd_ma])\n\nnon_oecd_wo = non_oecd.loc[non_oecd.loc[:, 'Q2']=='Woman']\nnon_oecd_ma = non_oecd.loc[non_oecd.loc[:, 'Q2']=='Man']\nnon_oecd_gender = pd.concat([non_oecd_wo,non_oecd_ma]) \n                              \n#non_oecd_wo.shape\n#oecd_gender.shape","ac80a2ed":"# Looking at which industry employ Data Scientists and Analysts\n\ns_d_s = survey_data.loc[survey_data.loc[:, 'Q5']== 'Data Scientist']\ns_d_ana = survey_data.loc[survey_data.loc[:, 'Q5']== 'Data Analyst']\ns_d = pd.concat([s_d_s, s_d_ana])\n\nsns.set_style(\"whitegrid\")\n\nplt.figure(figsize=(20,13))\n\n# Chart the graph according to the order of Data Scientist\n\norder=pd.crosstab(s_d.Q20, s_d.Q5).sort_values('Data Scientist', ascending=False).index\na = sns.countplot(x='Q20', hue='Q5', data=s_d, palette='Paired', order=order)\nplt.xticks(rotation=90, fontsize=15)\nplt.legend(('Data Scientist', 'Data Analyst'), fontsize=20)\n\nplt.title('DATA SCIENTIST AND ANALYST BREAKDOWN BY INDUSTRY', fontweight='bold', fontsize=20)\n#plt.set_ylable('No of Respondents')\n\nplt.show()\n\n","7a662589":"\n#oecd_age = oecd['Q1'].value_counts().index\n#oecd_a_num = oecd['Q1'].value_counts().values.tolist()\n\n# India Gender \nin_wo = india.loc[india.loc[:, 'Q2']=='Woman']\nin_ma = india.loc[india.loc[:, 'Q2']=='Man']\nindia_gender = pd.concat([in_wo, in_ma])\n\n# Lets look at Gender - Man vs Woman in the 3 Groupings\noecd_wo = oecd.loc[oecd.loc[:, 'Q2']=='Woman']\noecd_ma = oecd.loc[oecd.loc[:, 'Q2']=='Man']\noecd_gender = pd.concat([oecd_wo, oecd_ma])\n\n# NON_OECD gender\nnon_oecd_wo = non_oecd.loc[non_oecd.loc[:, 'Q2']=='Woman']\nnon_oecd_ma = non_oecd.loc[non_oecd.loc[:, 'Q2']=='Man']\nnon_oecd_gender = pd.concat([non_oecd_wo,non_oecd_ma]) \n                              ","4735abb8":"# Lets see the distribution of women and men by age in India, OECD and Non_OECD Countries\n\nplt.figure(figsize=(20,10))\nplt.suptitle('GENDER BREAKDOWN : INDIA, OECD, NON-OECD\\n           ', fontsize = 25, fontweight ='bold')\nplt.title('INDIA BREAKDOWN BY GENDER AND AGE',fontsize=20, fontweight='semibold')\nsns.countplot(x='Q1', hue='Q2', data=india_gender,palette='Set2',\n              order=['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+'])\nplt.legend(loc='upper right', fontsize=20)\n\nplt.figure(figsize=(20,6))\nplt.title('OECD BREADKDOWN BY GENDER AND AGE',fontsize=20, fontweight='semibold')\nsns.countplot(x='Q1', hue='Q2', data=oecd_gender, palette='Paired',\n              order=['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+'])\nplt.legend(fontsize=20)\n\nplt.figure(figsize=(20,6))\nplt.title('NON-OECD BREAKDOWN BY GENDER AND AGE',fontsize=20, fontweight='semibold')\nsns.countplot(x='Q1', hue='Q2', data=non_oecd_gender, palette='OrRd',\n              order=['18-21','22-24','25-29','30-34','35-39','40-44','45-49','50-54','55-59','60-69','70+'])\nplt.legend(fontsize=20)\n\nplt.show()","e5f32e7d":"#These sets of charts show how women do\n\nplt.figure(figsize=(20,37))\n\nsns.set_style(\"whitegrid\")\nw_a_age = survey_data.loc[survey_data.loc[:, 'Q2']=='Woman']\n\n# Women in Job Types\nw_j = w_a_age['Q5'].value_counts().index\nw_j_num = w_a_age['Q5'].value_counts().values.tolist()\n\n# Women in education level\nw_e = w_a_age['Q4'].value_counts().index\nw_e_num = w_a_age['Q4'].value_counts().values.tolist()\n\n# Women in salary level\nw_s = w_a_age['Q25'].value_counts().index\nw_s_num = w_a_age['Q25'].value_counts().values.tolist()\n\nplt.subplot(311)\nplt.title('WOMEN BY JOB TYPES', fontsize=20, fontweight='bold')\na = plt.bar(w_j, w_j_num, data=w_a_age, color='orange')\nplt.xticks(rotation=35, fontsize=10)\n\nplt.subplot(312)\nplt.title('WOMEN BY HIGHEST EDUCATION LEVEL', fontsize=20, fontweight='bold')\nb = plt.bar(w_e, w_e_num, data=w_a_age, color='tab:cyan')\nplt.xticks(rotation=10, fontsize=10)\n\nplt.subplot(313)\nplt.title('WOMEN BY SALARY LEVEL', fontsize=20, fontweight='bold')\nc = plt.bar(w_s, w_s_num, data=w_a_age, color='tab:olive')\nplt.xticks(rotation=90, fontsize=10)\n\n\nplt.show()","88b5ee26":"# Sources of information used are:\n\n(1) OECD (2021), Average wages (indicator). doi: 10.1787\/cc3e1387-en (Accessed on 26 November 2021)\n\n(2) Ganguli D 2021., Top 10 Countries with the highest salaries for data scientists, viewed 22nd November https:\/\/www.analyticsinsight.net\/top-10-countries-with-the-highest-salaries-for-data-scientists\/","6e41b827":"# Which Industry \/ Industries employ Data Scientists and Analysts?\n\nAs we have seen earlier, the role of Data Scientists rank second after Students in terms of responses in all three groups. Data Analysts varies between the three groups. They are ranked in each group as follows:\n\n> - INDIA : Rank 5\n> - OECD : 6\n> - NON-OECD : 3\n\nSo here we looked at which roles are deployed in the named industries in the survey. Also, how the two roles compared within an industry. \n\n> **The top three industries that employ most Data Scientists and Analysts are:**\n> - 1) Computers\/Technology\n> - 2) Academics\/Education\n> - 3) Accounting\/Finance\n\n> **In all industries Data Scientists are deployed more than Analysts except for Government\/Public Service**","d2cc57a8":"**As I am interested in Australia, I compare Australia to the top 5 countries**\n\n>Unfortunately, against India with 7434 responses, Australia is a blip in comparison, but also to the other top countries:\n> - **No 1 : India**\n> - **No 2 : USA**\n> - **No 3 : Japan**\n> - **No 4 : China**\n> - **No 5 : Brazil**\n\n>The barcharts show Asutralia on the left, compare to the top five countries according to age distribution. It just shows Australia has low responses. It does highlight there are **very few participants in the over 55 age group.**","d2cb8f4c":" \n**The top country in the number of respondents is India** with **34.6% or 7434** responses. \n\nI am also interested in Australia, but it is ranked 24th with only 1.2% or 264 responses :-(!!!\n\nIn terms of questions I posed, applying to India:\n\n>**Whether Data Scientist is the most popular role**\n> - Data Scientists indeed is popular within the survey after an overwhelming proportion of students. Students based in India respresnt 38% of responses from the country.\n\n>**Where does Data Analyst rank?**\n> - Data Analyst ranked 5th in terms of responses from India with 7.5% of overall india responses.\n\n>**What are the characteristics of kaggle users?**\n> - India participants are young, with **37%** of responses from the 18 - 21 age group.\n\n> The next three questions will be examined next.\n\n>**Which country\/countries have the highest pay for data professionals?**\n\n>**Which industry is looking for data professionals?**\n\n>**How popular is the kaggle platform to women?**\n","b0d20dfe":"\n# IN SUMMARY WHAT DO I FIND?\n\n**In answer to my questions posed based on an analysis on the three groups: INDIA, OECD, NON-OECD, I would conclude the following:**\n\n> **Whether Data Scientist is the most popular role**\n>> - The role of Data Scientists is indeed popular\n>> - Students are however the top kaggle respondents, which suggests that kaggle is popular for learning \n\n> **Where does Data Analyst rank?**\n>> - The role of Data Analyst rose in prominence as a popular type of data professionals\n>> - This is especially true for the Non-OECD countries\n\n> **What are the characteristics of kaggle users?**\n>> - Respondents are young from India and NON-OECD countries, with more 'mature' respondents from OECD countries  \n\n> **Which country\/countries have the highest pay for data professionals?**\n>> - It would seem that OECD countries has higher pay than India and NON-OECD countries\n\n> **Which industry is looking for data professionals?**\n>> The top three industries that employ most Data Scientists and Analysts are:\n>> - 1) Computers\/Technology\n>> - 2) Academics\/Education\n>> - 3) Accounting\/Finance\nIn all industries Data Scientists are deployed more than Analysts except for Government\/Public Service\n\n> **How popular is the kaggle platform to women?**\n>> - I would really like to assess how to encourage women to take up the data related skills or what obstacles need to be removed. This would need more research, surveys and analysis. \n","c0145805":"\n# OECD, NON-OECD and INDIA GROUPING\n\nTo come up with a meaningful set of comparisons and to encompass all countries, I have created the following groupings to assess whether there are any differences according to the questions I have outlined:\n\n> - **Organisation for Economic Co-operation and Development (OECD) Countries**\n> - **Non-OECD Countries**\n> - **India**\n\n[OECD](https:\/\/www.oecd.org\/about\/) is an international organisation that aims, through policies to \"foster prosperity, equality and opportunity for all\". It has over 60 years of experience and 'it partners with government, policy makers and citizens to establish evidence-based international standards and finding solutions to a range of social, economic and environmental challenges.' Currently it has [38 countries](https:\/\/www.oecd.org\/about\/document\/ratification-oecd-convention.htm) as part of the OECD members.  \n\nThere are 27 countries out of 38 of the OECD countries that have participated in this survey. This includes Australia \u2013 yeah!! There are no kaggle participants from these OECD countries; Costa Rica, Estonia, Finland, Hungary, Iceland, Latvia, Lithuania, Luxembourg, New Zealand, Slovak Republic, Slovenia.\n\nAny countries not included in the OECD grouping is in the Non-OECD excluding India. The Non-OECD group includes at least 38 countries as the non-locations and those prefer not to divulge locations are included. \n\nThe three groupings are quite evenly split in terms of number of respondents, which could yield interesting insights. \n","75d02c60":"# HOW MANY WOMEN RESPONDED COMPARING TO THE MEN IN EACH GROUP?\n\n**Given the opportunities for data professionals, has this attracted more women?**\n\nIn all groups, there are very few women respondents. In particular, there are hardly any participants in India and in the Non-OECD Countries in the over 50 years of age categories.\n\nEven though OECD participants are \"older\" than India and Non-OECD countries' participants, they do have more women in the over 50 years of age categories - PHEW!!","8459c055":"# WHAT ARE THE CHARACTERISTICS OF WOMEN KAGGLE USERS?\n\n>**Whether Data Scientist is the most popular role**\n> - Students and Data Scientists also ranked number 1 and 2 respectively in terms of responses. \n\n>**Where does Data Analyst rank?**\n> - Data Analysts ranked 3rd after Data Scientists, similar to the NON-OECD countries. \n\n>**What are the characteristics of kaggle users?**\n> - The age distribution of the women respondents have already been commented. Thus looking at the education levels of the women, it is good to see a high number in the Masters and Bachelors degree level. \n\n> - In terms of salary level, most respondents are in the 0-999 catagory level. It is, however good to see some, below 100 respondents in the high salary ranges which encompasses the 100K+ ranges. \n","8d4bbe1d":"## NON-OECD Analysis\n\nThere are 37 countries in this grouping, not counting those in the Other and No Disclosure categories. The number of respondents is 9,567. China and Brazil ranked 1st and 2nd in this group after the Other category. \n\n>**Whether Data Scientist is the most popular role**\n> - Data Scientists indeed is also popular with the NON-OECD countries. Again the survey shows it is after the a high proportion of students. Students based in NON-OECD countries responding to the survey respresnt **25%** of the responses from this group.\n\n>**Where does Data Analyst rank?**\n> - Data Analysts ranked 3rd after Data Scientists. This is a much higher ranking than INDIA and OECD group. In the other groupings, Software Engineers is ahead of Data Analyst, whereas in NON-OECD, it is ranked 4th after Data Analyst. \n\n>**What are the characteristics of kaggle users?**\n> - The Non-OECD participants have a higher proportion of respondents in the 18 - 21 age group with **17%** as opposed to **6.5%** in the OECD group. However, NON-OECD respondents are not as young as INDIA which has **37%** respondents in the 18 - 21 category. The bulk of the participants in NON-OECD countries are in the 22 - 29 age group.\n\n> These questions will be examined later.\n\n>**Which country\/countries have the highest pay for data professionals?**\n\n>**Which industry is looking for data professionals?**\n\n>**How popular is the kaggle platform to women?**","0f7aee3e":"# Which country\/countries have the highest pay for data professionals?\n\nFurther analysis will be required to ascertain exactly which country or countries within the OECD and NON-OECD groups have the highest pay for data professionals. For now this examination is restricted to these three groupings. \n\n>As the number of respondents in the 'currently not employed' category are within the top 8 of each group. \n> - INDIA    : Rank No 4\n> - OECD     : Rank No 7\n> - NON-OECD : Rank No 6 \n\n>Together with students ranking No 1 in all three groups in terms of Job Role. It is not surprising that the salary category of $0-999 has the highest grouping. \n\nOECD countries show the highest salary levels achieved by respondents comparing to the other two groups. It also shows a high number of respondents above the [OECD 2020 Average Annual Wages](https:\/\/data.oecd.org\/earnwage\/average-wages.htm) of 49.2k. This is inline with articles such as this one which cites [the top 10 most lucrative countries](https:\/\/www.analyticsinsight.net\/top-10-countries-with-the-highest-salaries-for-data-scientists\/) are within OECD Countries.\n","4fc076d2":"## OECD Analysis\n\n>**Whether Data Scientist is the most popular role**\n> - Data Scientists indeed is also popular with the OECD countries. Again the survey shows it is after the a high proportion of students. Students based in OECD countries responding to the survey respresnt **17%** of the responses from OECD.\n\n>**Where does Data Analyst rank?**\n> - Data Analysts ranked slightly lower than India at 6th place in the OECD responses. Data Analyst comes after Software Engineer and Research Scientist which rank at 4th and 5th in terms of the number of responses.\n\n>**What are the characteristics of kaggle users?**\n> - OECD participants are not as young as those in India. The majority of the age groups are between **25 - 44.** The 18 - 21 participants is only **6.5%** of the total number of OECD respondents. Compare to India's overwhelming majority in the age group between 18 - 21, which accounts for **37%** of India's respondents.\n\n> These questions will be examined later.\n\n>**Which country\/countries have the highest pay for data professionals?**\n\n>**Which industry is looking for data professionals?**\n\n>**How popular is the kaggle platform to women?**\n","cb7fd7f7":"\n# \"Data Scientist: The Sexiest Job of the 21st Century\"\n\nThis was an article by the [Harvard Business Review (HBR)](https:\/\/www.hbs.edu\/faculty\/Pages\/item.aspx?num=43110) back in 2012. In it, Data Scientists are said to be the key to unlocking value or discovering the story buried in big data. This means, they will be highly sought after by industries and the world.\n\nNine years on, is the role still in demand and how do individuals around the globe responded to this demand. This is my first year using kaggle, new to programming and studying a Masters on Data Analytics, I am excited to see whether kaggle 2021 survey yields any insights on:\n> - **Whether Data Scientist is the most popular role**\n> - **Where does Data Analyst rank?**\n> - **What are the characteristics of kaggle users?**\n> - **Which country\/countries have the highest pay for data professionals?**\n> - **Which industry is looking for data professionals?**\n> - **How popular is the kaggle platform to women?**\n\n"}}