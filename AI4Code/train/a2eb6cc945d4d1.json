{"cell_type":{"ac93f15c":"code","d6490135":"code","44ad616d":"code","2fb03471":"code","a41a3d06":"code","da403b68":"code","fb5b8b95":"code","3d968de7":"code","3741223e":"code","42f4c2b2":"code","839f8391":"code","e1acf80a":"code","13e7bf24":"code","3714b092":"code","bdcdeab6":"code","2e2b9d49":"code","504b93b8":"code","86312c81":"code","17c1eef6":"code","82d6f6f9":"code","920ce6c0":"code","7c707192":"code","139410da":"markdown","e9e537bd":"markdown","0561e572":"markdown","4de22fac":"markdown","261449c3":"markdown","37e6e49c":"markdown","50adca4f":"markdown"},"source":{"ac93f15c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d6490135":"#load dataset\ntrain = pd.read_csv(\"..\/input\/scl-2021-ds\/train.csv\", index_col=0)\ntest = pd.read_csv(\"..\/input\/scl-2021-ds\/test.csv\", index_col=0)","44ad616d":"#peek at train\ntrain.head(5)","2fb03471":"#peek at test\ntest.head(5)","a41a3d06":"!pip install langdetect","da403b68":"from langdetect import DetectorFactory\nDetectorFactory.seed = 0","fb5b8b95":"from langdetect import detect","3d968de7":"#to see progress\nfrom tqdm import tqdm_notebook as tqdm\nfrom tqdm.auto import tqdm\ntqdm.pandas(desc=\"Progress\")","3741223e":"#let's define a custom function\ndef try_detect(address):\n    try:\n        return detect(address)\n    except:\n        return \"error\"","42f4c2b2":"#detect language\ntrain[\"lang\"] = train[\"raw_address\"].progress_apply(try_detect)\ntest[\"lang\"] = test[\"raw_address\"].progress_apply(try_detect)","839f8391":"import seaborn as sns\nsns.set()","e1acf80a":"train[\"lang\"].value_counts(ascending=True).plot(kind=\"barh\", figsize=(10,10))","13e7bf24":"test[\"lang\"].value_counts(ascending=True).plot(kind=\"barh\", figsize=(10,10))","3714b092":"train[\"lang\"].value_counts().index","bdcdeab6":"train[\"lang\"].value_counts().index.shape","2e2b9d49":"test[\"lang\"].value_counts().index","504b93b8":"test[\"lang\"].value_counts().index.shape","86312c81":"for lang in train[\"lang\"].value_counts(ascending=False)[:5].index:\n    print(lang)\n    display(train[train.lang==lang].sample(5))\n    display(test[test.lang==lang].sample(5))","17c1eef6":"train[train.lang==\"en\"].sample(50)","82d6f6f9":"test[test.lang==\"en\"].sample(50)","920ce6c0":"train[train.lang==\"error\"]","7c707192":"test.loc[test.lang==\"error\"]","139410da":"# Sanity Check\nWow... that's a lot of languages (32)! I wonder if they're correct though? Let's check out the top 5 languages","e9e537bd":"# Preparation","0561e572":"# Conclusion\n\nWe can safely say that most of the addresses are in Indonesian, with some English words appearing in the raw address. Why langdetect misclassified a lot of Indonesian raw address as Tagalog is probably because Indonesian and Tagalog are related (try it for yourself at http:\/\/www.elinguistics.net\/Compare_Languages.aspx)","4de22fac":"# Language Detection","261449c3":"# Introduction\nWhile it is known that most of the datasets are in bahasa Indonesia... I wonder how many of the raw addresses are indeed in Indonesian? \ud83e\udd14 This EDA aims to answer the following two questions:\n\n1. What are all of the \"languages\" in the datasets?\n2. How do the addresses look like for each of the top-existing \"language\"?","37e6e49c":"Bonus: why did the error happened? Apparently some raw addresses contain only numbers","50adca4f":"Oops. Looks like langdetect didn't do its job well :( Let's take a look further at those addressed detected as english (EN), because that seems to be the only one that somehow makes sense (judging from the sanity check we did earlier)"}}