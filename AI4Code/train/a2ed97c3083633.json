{"cell_type":{"004e6aa2":"code","fd647933":"code","3e80a85e":"code","11822391":"code","d53df15f":"code","94511c1b":"markdown"},"source":{"004e6aa2":"import numpy as np\nimport pandas as pd","fd647933":"df=pd.read_csv(\"..\/input\/pbd-load-history\/PDB_Load_History.csv\")\ndf","3e80a85e":"import missingno\n# Plot graphic of missing values\nmissingno.matrix(df, figsize = (9,3))\n# Let's write a little function to show us how many missing values\n# there are\ndef find_missing_values(df, columns):\n    \"\"\"\n    Finds number of rows where certain columns are missing values.\n    ::param_df:: = target dataframe\n    ::param_columns:: = list of columns\n    \"\"\"\n    missing_vals = {}\n    print(\"Number of missing or NaN values for each column:\")\n    df_length = len(df)\n    for column in columns:\n        total_column_values = df[column].value_counts().sum()\n        missing_vals[column] = df_length-total_column_values\n        #missing_vals.append(str(column)+ \" column has {} missing or NaN values.\".format())\n    return missing_vals\n\nmissing_values = find_missing_values(df, columns=df.columns)\nmissing_values","11822391":"temp=pd.DataFrame()\ntemp[\"date\"]=df.date\ntemp[\"demand\"]=df.demand\ntemp[\"temperature\"]=df.temperature\ntemp=temp.groupby([\"date\"]).mean()\ntemp.reset_index(inplace=True)\ntemp.date=pd.to_datetime(temp.date, format='%m\/%d\/%Y')\ntemp=temp.sort_values(by=['date'],ascending=True)\ntemp.reset_index(inplace=True)\ntemp.drop(\"index\",axis=1,inplace=True)\ntemp","d53df15f":"import matplotlib.pyplot as plt\nfrom matplotlib.pyplot import figure\n\nfigure(figsize=(30, 10))\ndate = temp.date.to_list()\ndemand = temp.demand.to_list()\ntemperature = temp.temperature.to_list()\nx=[]\ndim=[]\ntmp=[]\nfor i in range (2003,2015):\n    xx=[]\n    xxx=[]\n    dimm=[]\n    tmpp=[]\n    #index=0\n    for j in range (len(demand)):\n        if date[j].year==i:\n            xx.append(date[j].strftime(\"%m\/%d\/%Y\")[0:-5])\n            #xxx.append(index)\n            dimm.append(demand[j])\n            tmpp.append(temperature[j])\n        #index+=1\n    #index=0\n    x.append(xx)\n    dim.append(dimm)\n    tmp.append(tmpp)\n#print(x[4])\n'''plt.plot(x[0], dim[0], label = \"demand 2003\")\nplt.plot(x[1], dim[1], label = \"demand 2004\")\nplt.plot(x[2], dim[2], label = \"demand 2005\")\nplt.plot(x[3], dim[3], label = \"demand 2006\")\nplt.plot(x[4], dim[4], label = \"demand 2007\")\nplt.plot(x[5], dim[5], label = \"demand 2008\")\nplt.plot(x[6], dim[6], label = \"demand 2009\")\nplt.plot(x[7], dim[7], label = \"demand 2010\")\nplt.plot(x[8], dim[8], label = \"demand 2011\")\nplt.plot(x[9], dim[9], label = \"demand 2012\")\nplt.plot(x[10], dim[10], label = \"demand 2013\")\nplt.plot(x[11], dim[11], label = \"demand 2014\")'''\nfor i in range(2003,2015):\n    label=\"demand \"+str(i)\n    plt.plot(x[i-2003], dim[i-2003], label = label)\n#plt.plot(x[i-2003], tmp[i-2003], label = label2)\nplt.legend()\nplt.show()","94511c1b":"##### "}}