{"cell_type":{"c5302505":"code","f9708f94":"code","b7b1fa69":"code","e44ba17c":"code","0d78bf13":"code","b600c9fd":"code","a8657467":"code","1aa6f0ac":"code","3b3fda1c":"code","ddfb3fdb":"code","a6e0be46":"code","0f934023":"code","f0962475":"code","6fa91c1a":"code","a3ac5e5a":"code","e465d4d1":"code","b19ba38c":"code","d0dfa379":"code","b3164ba1":"markdown","9caa6202":"markdown","9e89340f":"markdown","276a6128":"markdown","1ca1e5eb":"markdown","15bda47f":"markdown","068dc995":"markdown","c7a0b682":"markdown","d30b6248":"markdown"},"source":{"c5302505":"\n#importing libraries\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport geopandas as gpd\nfrom matplotlib import cm\nimport matplotlib\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\ninit_notebook_mode(connected=True)    #THIS LINE IS MOST IMPORTANT AS THIS WILL DISPLAY PLOT ON \n#NOTEBOOK WHILE KERNEL IS RUNNING\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","f9708f94":"df = pd.read_csv('..\/input\/disabled-community-dataset\/disabled_community_dataset.csv')\ndf.head()","b7b1fa69":"df.info()","e44ba17c":"df.isna().sum()","0d78bf13":"df.columns","b600c9fd":"df = df[df.state != 'india']","a8657467":"import plotly.graph_objects as go\n\nstate = list(df.state)\ndisabled = list(df.number_disabled)\n\nfig= go.Figure(go.Treemap(\n    \n    labels =  state,\n    parents=[\"\"]*len(state),\n    values =  disabled,\n    textinfo = \"label+percent entry\"\n))\nfig.update_layout(\n    title_text= 'Distribution of Disabled people in country',\n    paper_bgcolor='rgb(233,233,233)',\n    autosize=False,\n    width= 800,\n    height=700,)\n\nfig.show()","1aa6f0ac":"gdf = gpd.read_file('..\/input\/india-states\/Igismap\/Indian_States.shp')\ngdf['st_nm'] = gdf['st_nm'].str.lower()\ngdf.at[0, 'st_nm']= 'andaman and nicobar islands'\ngdf.at[1,'st_nm'] = 'arunachal pradesh'\ngdf.at[23,'st_nm'] = 'delhi'","3b3fda1c":"new_row = {'state':'telangana', 'number_disabled': 2266607}\ndf = df.append(new_row , ignore_index=True )\n\nmerged = gdf.merge(df , left_on='st_nm', right_on='state')","ddfb3fdb":"from matplotlib.colors import Normalize\nfrom matplotlib import cm\ncmap = 'YlGn'\n\nmerged['coords'] = merged['geometry'].apply(lambda x: x.representative_point().coords[:])\nmerged['coords'] = [coords[0] for coords in merged['coords']]\n\nsns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\nplt.style.use('fivethirtyeight')\n\nfigsize = (25, 25)\n\n\nax= merged.plot(column= 'number_disabled', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\"Number of Disabled people \", size = 25)\nfor idx, row in merged.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['number_disabled'], horizontalalignment='center', bbox={'facecolor': 'gold', 'alpha':0.8, 'pad': 2, 'edgecolor':'blue'})\n\nnorm = Normalize(vmin=merged['number_disabled'].min(), vmax= merged['number_disabled'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","a6e0be46":"df2 = df.sort_values('percent_disabled', ascending = False)","0f934023":"sns.set_context(\"talk\")\nsns.set(rc={'axes.facecolor':'khaki', 'figure.facecolor':'khaki'})\nplt.figure(figsize=(12,14))\n#plt.style.use('fivethirtyeight')\n\nax = sns.barplot( x = 'percent_disabled', y = 'state', data = df2, palette = 'dark')\nplt.title('Percentage of Disabled people in state (wrt population)',size = 20)\nplt.xlabel('percentage of population')\n\nfor p in ax.patches:\n        ax.annotate(\"%.2f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")","f0962475":"sns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\nplt.style.use('fivethirtyeight')\n\nfigsize = (25, 25)\n\n\nax= merged.plot(column= 'literacy_rate_disabled', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\"Literacy rate of Disabled people \", size = 25)\nfor idx, row in merged.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['literacy_rate_disabled'], horizontalalignment='center', bbox={'facecolor': 'yellow', 'alpha':0.8, 'pad': 2, 'edgecolor':'blue'})\n\nnorm = Normalize(vmin=merged['literacy_rate_disabled'].min(), vmax= merged['literacy_rate_disabled'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","6fa91c1a":"df['diff_literacy'] = df['literacy_rate_general'] - df['literacy_rate_disabled']\ndf3 = df.sort_values('diff_literacy', ascending = False)\ndf3['diff_literacy'] = df3['diff_literacy'].round(decimals=3)","a3ac5e5a":"sns.set_context(\"talk\")\nsns.set(rc={'axes.facecolor':'aqua', 'figure.facecolor':'aqua'})\nplt.figure(figsize=(12,14))\n#plt.style.use('bmh')\n\nax = sns.barplot( x = 'diff_literacy', y = 'state', data = df3, palette = 'bright')\nplt.title('Difference of Literacy of Disabled people in state (wrt general population)',size = 20)\nplt.xlabel('percentage')\n\nfor p in ax.patches:\n        ax.annotate(\"%.2f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")","e465d4d1":"sns.set_context(\"poster\")\nsns.set_style(\"darkgrid\")\nplt.style.use('fivethirtyeight')\n\nfigsize = (25, 25)\n\n\nax= merged.plot(column= 'workforce_rate_disabled', cmap= cmap, figsize=figsize, scheme='equal_interval',edgecolor='black')\nax.set_title(\"Workforce rate of Disabled people \", size = 25)\nfor idx, row in merged.iterrows():\n   ax.text(row.coords[0], row.coords[1], s=row['workforce_rate_disabled'], horizontalalignment='center', bbox={'facecolor': 'white', 'alpha':0.8, 'pad': 2, 'edgecolor':'blue'})\n\nnorm = Normalize(vmin=merged['workforce_rate_disabled'].min(), vmax= merged['workforce_rate_disabled'].max())\nn_cmap = cm.ScalarMappable(norm=norm, cmap= cmap)\nn_cmap.set_array([])\nax.get_figure().colorbar(n_cmap)\nax.set_axis_off()\nplt.axis('equal')\nplt.show()","b19ba38c":"df['diff_work'] = df['workforce_rate_general'] - df['workforce_rate_disabled']\ndf4 = df.sort_values('diff_work', ascending = False)\ndf4['diff_work'] = df4['diff_work'].round(decimals=3)","d0dfa379":"sns.set_context(\"talk\")\nsns.set(rc={'axes.facecolor':'snow', 'figure.facecolor':'snow'})\nplt.figure(figsize=(12,14))\nplt.style.use('fivethirtyeight')\n\nax = sns.barplot( x = 'diff_work', y = 'state', data = df4, palette = 'dark')\nplt.title('Difference of Workforce of Disabled people in state (wrt general population)',size = 20)\nplt.xlabel('percentage')\n\nfor p in ax.patches:\n        ax.annotate(\"%.2f\" % p.get_width(), xy=(p.get_width(), p.get_y()+p.get_height()\/2),\n            xytext=(5, 0), textcoords='offset points', ha=\"left\", va=\"center\")","b3164ba1":"Again sikkim is the state where there is total difference of 36.69 ","9caa6202":"Uttarpradesh has most number of disabled people  with 16% of all the disabled people in a country.","9e89340f":"**Lets see the difference between literacy rate of state and the disabled people.**","276a6128":"# Literacy of Disabled people\n\n","1ca1e5eb":"Uttar pradesh , arunachal padesh , nagaland and bihar seems to be good for disabled as they are more in workforce as compared to rate of workforce in that state.","15bda47f":"# Disabled people in workforce","068dc995":"lets see which state has the most percent disabled people according to their population","c7a0b682":"First lets see the distribution of disabled people over the country. We will use treemap to show the distribution","d30b6248":"Sikkim has the highest percentage of disabled people in terms of population."}}