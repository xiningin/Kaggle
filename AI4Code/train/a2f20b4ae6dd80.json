{"cell_type":{"681b3fd8":"code","0fcd5931":"code","2524984a":"code","7e543f5f":"code","6033d73d":"code","58e45a82":"code","4cfbefdd":"code","a0b5ed6c":"code","3d7ff950":"code","0f04b566":"code","5ff32ac3":"code","f3ec5fae":"code","61af23e4":"code","9874caca":"code","a7653015":"code","97fd079b":"code","8110f825":"code","ebf133a5":"code","6d94bf22":"code","1a1b0f7d":"code","7d531ab0":"code","d88624d2":"code","ac35a9c6":"code","28d1ce3c":"code","97ec2d6b":"code","814b6b98":"code","d15d8675":"code","516e717b":"code","510e53ec":"code","e1290cce":"code","bfb2c45c":"code","ed424730":"code","a9862c81":"markdown","a47281e7":"markdown","8ab68c5e":"markdown","4e2a38b8":"markdown","f8fe39c4":"markdown","ced12f42":"markdown","c7c52971":"markdown","7ac16b22":"markdown","ca71ea48":"markdown","29fdbfe8":"markdown","9ba59a33":"markdown","cb07911c":"markdown","8b0954e3":"markdown","9873ea01":"markdown"},"source":{"681b3fd8":"import pandas as pd\nimport numpy as np\nfrom pandas import datetime\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.api import VAR\n%matplotlib inline","0fcd5931":"consumption = pd.read_csv('\/kaggle\/input\/electric-power-consumption-data-set\/household_power_consumption.txt', sep = ';', parse_dates= ['Date'], infer_datetime_format=True, low_memory=False,  na_values=['nan','?'])","2524984a":"consumption.head()","7e543f5f":"consumption.describe()","6033d73d":"consumption.info()","58e45a82":"consumption.isna().sum()","4cfbefdd":"consumption = consumption.dropna()\nconsumption.isna().sum()","a0b5ed6c":"mean_consumption_gby_date = consumption.groupby(['Date']).mean()","3d7ff950":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_gby_date.columns\naxs[0, 0].plot(mean_consumption_gby_date[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_gby_date[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_gby_date[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_gby_date[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\naxs[2, 0].plot(mean_consumption_gby_date[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_gby_date[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_gby_date[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)","0f04b566":"mean_consumption_gby_month = consumption.groupby(consumption['Date'].dt.strftime('%B')).mean()\nreorderlist = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ]\nmean_consumption_gby_month = mean_consumption_gby_month.reindex(reorderlist)","5ff32ac3":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_gby_month.columns\n\naxs[0, 0].plot(mean_consumption_gby_month[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_gby_month[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_gby_month[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_gby_month[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\n\naxs[2, 0].plot(mean_consumption_gby_month[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_gby_month[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_gby_month[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)","f3ec5fae":"import pandas as pd\nimport numpy as np\nfrom pandas import datetime as dt\nimport matplotlib.pyplot as plt\npd.plotting.register_matplotlib_converters()","61af23e4":"consumption_2 = pd.read_csv('\/kaggle\/input\/electric-power-consumption-data-set\/household_power_consumption.txt', sep=';', \n                 parse_dates={'dt' : ['Date', 'Time']}, infer_datetime_format=True, \n                 low_memory=False, na_values=['nan','?'], index_col='dt')","9874caca":"mean_consumption_gby_day_month = consumption_2.groupby(consumption_2.index.day).mean()","a7653015":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_gby_day_month.columns\n\naxs[0, 0].plot(mean_consumption_gby_day_month[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_gby_day_month[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_gby_day_month[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_gby_day_month[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\naxs[2, 0].plot(mean_consumption_gby_day_month[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_gby_day_month[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_gby_day_month[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)","97fd079b":"days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday', 'Sunday']\nmean_consumption_gby_day_week = consumption_2.groupby(consumption_2.index.day_name()).mean().reindex(days)","8110f825":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_gby_day_week.columns\n\naxs[0, 0].plot(mean_consumption_gby_day_week[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_gby_day_week[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_gby_day_week[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_gby_day_week[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\naxs[2, 0].plot(mean_consumption_gby_day_week[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_gby_day_week[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_gby_day_week[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)","ebf133a5":"consumption_resampled_in_a_day = consumption_2.resample('H').sum()\nconsumption_resampled_in_a_day.index = consumption_resampled_in_a_day.index.time\nmean_consumption_gby_time = consumption_resampled_in_a_day.groupby(consumption_resampled_in_a_day.index).mean()\n","6d94bf22":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_gby_time.columns\n\naxs[0, 0].plot(mean_consumption_gby_time[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_gby_time[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_gby_time[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_gby_time[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\naxs[2, 0].plot(mean_consumption_gby_time[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_gby_time[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_gby_time[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)\n","1a1b0f7d":"mean_consumption_resampled_mnthly = consumption_2.resample('M').mean()","7d531ab0":"fig, axs = plt.subplots(3, 2, figsize = (30, 25))\ncolumns = mean_consumption_resampled_mnthly.columns\n\naxs[0, 0].plot(mean_consumption_resampled_mnthly[columns[0]])\naxs[0, 0].set_title(columns[0], fontweight = 'bold', size = 20)\n\naxs[0, 1].plot(mean_consumption_resampled_mnthly[columns[1]])\naxs[0, 1].set_title(columns[1], fontweight = 'bold', size = 20)\n\naxs[1, 0].plot(mean_consumption_resampled_mnthly[columns[2]])\naxs[1, 0].set_title(columns[2], fontweight = 'bold', size = 20)\n\naxs[1, 1].plot(mean_consumption_resampled_mnthly[columns[3]])\naxs[1, 1].set_title(columns[3], fontweight = 'bold', size = 20)\n\naxs[2, 0].plot(mean_consumption_resampled_mnthly[columns[4]])\naxs[2, 0].set_title(columns[4], fontweight = 'bold', size = 20)\n\naxs[2, 1].plot(mean_consumption_resampled_mnthly[columns[5]])\naxs[2, 1].set_title(columns[5], fontweight = 'bold', size = 20)\n\nfig, axs = plt.subplots( figsize = (20, 4))\naxs.plot(mean_consumption_resampled_mnthly[columns[6]])\naxs.set_title(columns[6], fontweight = 'bold', size = 15)\n","d88624d2":"\nfrom statsmodels.tsa.stattools import adfuller\ndef adf_test(ts, signif=0.05):\n    dftest = adfuller(ts, autolag='AIC')\n    adf = pd.Series(dftest[0:4], index=['Test Statistic','p-value','# Lags','# Observations'])\n    for key,value in dftest[4].items():\n       adf['Critical Value (%s)'%key] = value\n    print (adf)\n    \n    p = adf['p-value']\n    if p <= signif:\n        print(f\" Series is Stationary\")\n    else:\n        print(f\" Series is Non-Stationary\")","ac35a9c6":"adf_test(mean_consumption_resampled_mnthly[\"Global_active_power\"])","28d1ce3c":"adf_test(mean_consumption_resampled_mnthly['Global_reactive_power'])","97ec2d6b":"adf_test(mean_consumption_resampled_mnthly['Voltage'])","814b6b98":"adf_test(mean_consumption_resampled_mnthly['Global_intensity'])","d15d8675":"adf_test(mean_consumption_resampled_mnthly['Sub_metering_1'])","516e717b":"adf_test(mean_consumption_resampled_mnthly['Sub_metering_2'])","510e53ec":"adf_test(mean_consumption_resampled_mnthly['Sub_metering_3'])","e1290cce":"def difference(dataset, interval=1):\n    diff = list()\n    diff.append(0)\n    for i in range(interval, len(dataset)):\n        value = dataset[i] - dataset[i - interval]\n        diff.append(value)\n    return diff\n\nmean_consumption_resampled_mnthly['Voltage'] = difference(mean_consumption_resampled_mnthly['Voltage'])\n","bfb2c45c":"adf_test(mean_consumption_resampled_mnthly['Voltage'])","ed424730":"model = VAR(mean_consumption_resampled_mnthly)\nmodel_fit = model.fit()\npred = model_fit.forecast(model_fit.y, steps=4)","a9862c81":"### 1.1. Import the libraries & data","a47281e7":"## Augmented Dickey-Fuller Test (ADF Test)\/unit root test to check stationarity","8ab68c5e":"## Average consumption of each day in 4 years","4e2a38b8":"## Average consumption in each month","f8fe39c4":"## Average consumption of each hour in a day","ced12f42":"## Average consumption of each month in 4 years","c7c52971":"# 2.0","7ac16b22":"## Average consumption of each day in a month","ca71ea48":"# 1.0","29fdbfe8":"## Average consumption of each day in a week ","9ba59a33":"## VAR model","cb07911c":"### Drop the null values","8b0954e3":"## Differencing to remove non-stationarity","9873ea01":"**Please restart the kernel before starting the portion below.**"}}