{"cell_type":{"b96272a6":"code","0959232f":"code","d42cd11c":"code","e68e6bf1":"code","399518ca":"code","1c12c828":"code","abbecad3":"code","38f45650":"code","2500e1a8":"code","0ef39d07":"code","c4261afe":"code","8da8e31e":"code","fc23c4ae":"code","ae9d6d8e":"code","265064e7":"code","5c06268c":"markdown","468f6736":"markdown","3af5515c":"markdown","9714281a":"markdown","c7fe7399":"markdown","f0d113a8":"markdown","34e064dc":"markdown","170afa49":"markdown","5942a0bb":"markdown","f68e798f":"markdown","2b6ab9b4":"markdown"},"source":{"b96272a6":"import pandas as pd\nimport numpy as np\nimport datetime as dt\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","0959232f":"dataset_path = '..\/input\/30-days-of-ml'\n\ndf = pd.read_csv(os.path.join(dataset_path, 'train.csv'))\n\nprint(\"The shape of the dataset is {}.\\n\\n\".format(df.shape))\n\ndf.head()","d42cd11c":"df.info()","e68e6bf1":"df.describe()","399518ca":"sns.set()\ndf.hist(figsize=(25, 15))","1c12c828":"from sklearn.preprocessing import OrdinalEncoder\n\n\nordinal_col = ['cat0', 'cat1', 'cat2', 'cat3', 'cat4', 'cat5']\n\nordinal_encoder = OrdinalEncoder()\n\ndf[ordinal_col] = ordinal_encoder.fit_transform(df[ordinal_col])\n\ndf[ordinal_col]","abbecad3":"from sklearn.preprocessing import OneHotEncoder\n\none_hot_col = ['cat6', 'cat7', 'cat8', 'cat9']\n\nOH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)\n\nOH_cols = pd.DataFrame(OH_encoder.fit_transform(df[one_hot_col]))\n\nOH_cols.index = df.index\n\nnum_X = df.drop(one_hot_col, axis=1)\n\ndf_ = pd.concat([num_X, OH_cols], axis=1)\n\ndf_\n\n","38f45650":"from sklearn.model_selection import train_test_split\n\ndf_train_split, df_val = train_test_split(df_, test_size=0.2, random_state=42)\n\nX_train = df_train_split.drop(columns=['id', 'target'])\ny_train = df_train_split['target']\n\nX_val = df_val.drop(columns=['id', 'target'])\ny_val = df_val['target']","2500e1a8":"from catboost import CatBoostRegressor\nfrom sklearn.metrics import mean_squared_error\n\nct = CatBoostRegressor(\n                          iterations=5000,\n                          learning_rate=0.99,\n                          loss_function=\"RMSE\",\n                          random_state=0,\n                          verbose=0,\n                          thread_count=4,\n                          depth=1,task_type=\"GPU\"\n                         )\n\n\nct.fit(X_train, y_train)\n\ny_val_predict = ct.predict(X_val)\n\nerr = mean_squared_error(y_val, y_val_predict)\nprint(err)","0ef39d07":"X_train_full = df_.drop(columns=['id', 'target'])\ny_train_full = df_['target']\nct.fit(X_train_full, y_train_full)","c4261afe":"test_df = pd.read_csv(os.path.join(dataset_path, 'test.csv'))\n\nprint(test_df.shape)\n\ntest_df.head()","8da8e31e":"test_df[ordinal_col] = ordinal_encoder.fit_transform(test_df[ordinal_col])","fc23c4ae":"OH_cols_t = pd.DataFrame(OH_encoder.fit_transform(test_df[one_hot_col]))\n\nOH_cols_t.index = test_df.index\n\nnum_X_t = test_df.drop(one_hot_col, axis=1)\n\ntest_df_t = pd.concat([num_X_t, OH_cols_t], axis=1)\n\ntest_df_t","ae9d6d8e":"X_test = test_df_t.drop(columns=['id'])\n\ny_test_predicted = ct.predict(X_test)\n\ntest_df_t['target'] = y_test_predicted\n\ntest_df_t.head()","265064e7":"test_df_t[['id', 'target']].to_csv('\/kaggle\/working\/submission.csv', index=False)","5c06268c":"# Exploring Data","468f6736":"# Histograms for all continuous features","3af5515c":"# One Hot Encoding for cat6 - cat9","9714281a":"# fitting full data","c7fe7399":"# Modeling","f0d113a8":"# Spliting Data","34e064dc":"# Importing Libraries","170afa49":"# Ordinal Encoding for cat0 - cat5","5942a0bb":"# Submission File Generation","f68e798f":"# Loading data file into a dataframe","2b6ab9b4":"It is noticed that the data contains 0 nulls and data types are either objects or float64"}}