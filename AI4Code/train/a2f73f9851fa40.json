{"cell_type":{"1e9ba3d8":"code","e36e6d67":"code","d857e4aa":"code","74b7e808":"code","bd3f89cb":"code","bd10b225":"code","9c2eedfe":"code","a9aefdae":"code","eaf68b8c":"code","70f788aa":"code","4b6d31fd":"code","badef7a4":"code","adae6732":"code","85417a22":"code","137d6d10":"code","31226318":"code","09aa8cb9":"code","34057beb":"code","10050a18":"code","4160d7f1":"code","7aecc7e9":"code","0c79e73a":"markdown","787ab54b":"markdown","7f91a925":"markdown","ae29bfe9":"markdown","9c9b92a1":"markdown","6ddc1341":"markdown","d8b7fa53":"markdown","e961dbdc":"markdown","577972b9":"markdown","f22b0b0e":"markdown","fcc016e9":"markdown"},"source":{"1e9ba3d8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e36e6d67":"df = pd.read_csv('\/kaggle\/input\/heart-attack-prediction\/data.csv')\ndf.head()","d857e4aa":"df.isnull().sum()","74b7e808":"x = df.drop(columns=['slope','ca','thal','fbs'])\nprint(x)","bd3f89cb":"y = df['fbs']\nprint(y)","bd10b225":"from sklearn import preprocessing \nlabel_encoder = preprocessing.LabelEncoder()  \nx= x.apply(label_encoder.fit_transform)\nprint(x)","9c2eedfe":"y= label_encoder.fit_transform(y)\nprint(y)","a9aefdae":"from plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go","eaf68b8c":"iplot([go.Histogram2dContour(x=df.head(500)['age'], \n                             y=df.head(500)['fbs'], \n                             contours=go.Contours(coloring='heatmap')),\n       go.Scatter(x=df.head(1000)['age'], y=df.head(1000)['fbs'], mode='markers')])","70f788aa":"df = df.assign(n=0).groupby(['fbs', 'age'])['n'].count().reset_index()\ndf = df[df[\"age\"] < 100]\nv = df.pivot(index='age', columns='fbs', values='n').fillna(0).values.tolist()","4b6d31fd":"iplot([go.Surface(z=v)])","badef7a4":"import seaborn as sns\nimport matplotlib.pyplot as plt","adae6732":"# Set the width and height of the figure\nplt.figure(figsize=(10,6))\n\n# Add title\nplt.title(\"Heart attack prediction\")\n\n# Bar chart showing average arrival delay for Spirit Airlines flights by month\nsns.barplot(x=df['fbs'], y=df['age'])\n\n# Add label for vertical axis\nplt.ylabel(\"age\")","85417a22":"sns.lineplot(data=y)","137d6d10":"sns.scatterplot(data=df, x=\"age\", y=\"fbs\")","31226318":"df['fbs'].value_counts().head(10).plot.pie()","09aa8cb9":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split","34057beb":"x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=4)","10050a18":"nb = GaussianNB()\nnb.fit(x_train, y_train)","4160d7f1":"y_pred = nb.predict(x_test)\nprint(y_pred)\n\nprint(accuracy_score(y_test, y_pred))","7aecc7e9":"from sklearn import model_selection\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\n# random forest model creation\nrfc = RandomForestClassifier()\nrfc.fit(x_train,y_train)\n# predictions\nrfc_predict = rfc.predict(x_test)\n\nprint(\"Accuracy:\",accuracy_score(y_test, rfc_predict))","0c79e73a":"Label Encoding is needed to convert the string value to integer.","787ab54b":" **Surface contours using plotly**","7f91a925":"Scatterplot using seaborn","ae29bfe9":"Predictions using Randomforest","9c9b92a1":"Bar chart using Seaborn","6ddc1341":"Predictions using Naive-Bayes Classifier","d8b7fa53":"Line plot using Seaborn","e961dbdc":"We are dropping three columns, which is necessary to our dataset.","577972b9":"Pie charts","f22b0b0e":"3D plots using plotly","fcc016e9":"We are going to find the null values presented in the datasets."}}