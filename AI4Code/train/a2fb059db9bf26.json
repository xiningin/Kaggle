{"cell_type":{"5c638f73":"code","b215de19":"code","835992cc":"code","0f2e6614":"code","f2b787b4":"code","25f2a6f4":"code","570e64bc":"code","e03c505b":"code","f7e6e5e0":"code","c2fcdca8":"code","e5494324":"code","52dff36f":"code","a661173f":"code","bd702c4e":"code","48a2b6b9":"code","d2ade977":"code","8f809ee7":"code","73e8b445":"code","a45d1e09":"code","efe8c3af":"code","12e43455":"code","8dee076d":"code","9a7d9103":"code","881c0df3":"code","d65d27bf":"code","9d3565a6":"code","65608070":"code","7fbf8306":"code","63ddba1f":"code","b5106211":"code","77ffc7f5":"code","659fb8eb":"code","545dcd92":"code","3ccbb00e":"code","3e48a9fd":"code","523c1a38":"code","bdaaa7ad":"code","cb323a7b":"code","eab83580":"code","d7442ee9":"code","ec162b16":"code","2f169374":"code","a525da49":"code","a65bdb30":"code","f927b3d3":"code","f6dde0bb":"code","07a452a7":"code","3e6ff11d":"code","421bbcf8":"markdown"},"source":{"5c638f73":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b215de19":"import pandas as pd\nimport matplotlib.pyplot as plt","835992cc":"train = pd.read_csv('..\/input\/titanic\/train.csv')\ntest = pd.read_csv('..\/input\/titanic\/test.csv')","0f2e6614":"train.head(2)","f2b787b4":"PassengerID=train['PassengerId'].copy()\n# this will be used to print alongwith prediction result ","25f2a6f4":"train.shape","570e64bc":"train.describe().T","e03c505b":"# we will drop some unnecesary columns as they do not have significant effect over our prediction\ntrain.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis=1,inplace=True)","f7e6e5e0":"train.isnull().sum()","c2fcdca8":"max(list(train.Age.values))","e5494324":"# from train.describe we can see that mean value of Age column is 30, so we will replace it with 30\ntrain.Age.fillna(30,inplace=True)","52dff36f":"train.isnull().sum()","a661173f":"plt.hist(x=train.Age,bins=10)\nplt.xlabel('Age')\n# from the graph below we can see that most of the person are between age 18 to 40","bd702c4e":"import seaborn as sns\nsns.barplot(x=train.Survived,y=train.Age,data=train)\n# we can see that average survival rate is less than average death rate","48a2b6b9":"plt.scatter(train.Age,train.Survived,c='red')\n# from below graph we can see that there are very person above age 65 who survived","d2ade977":"sns.barplot(x=train.Sex,y=train.Survived)\n# more percentage of female survide than male","8f809ee7":"# selecting input and output variable\nx=train.drop('Survived',axis=1)\ny=train.Survived","73e8b445":"# printing first 5 columns of independent variable\nx[0:5]","a45d1e09":"# since our machine learning model cant process categorial data, Sex column must be converted into readable data type\nfrom sklearn.preprocessing import LabelEncoder\nle=LabelEncoder()\nx['Sex']=le.fit_transform(x['Sex'])","efe8c3af":"x[:5]","12e43455":"# creating dummy varibale\ndummies=pd.get_dummies(train.Sex,drop_first=True)\ndummies[0:5]","8dee076d":"train=pd.concat([train, dummies], axis=1)\ntrain.head(2)","9a7d9103":"# since we have created dummy variable for \"sex\" column so we have dropped it..\ntrain.drop('Sex',axis=1,inplace=True)","881c0df3":"train.head()","d65d27bf":"x=train.drop('Survived',axis=1)\ny=train.Survived","9d3565a6":"# random forest model\nfrom sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier(n_estimators=5)\nmodel.fit(x,y)\nmodel.score(x,y)","65608070":"# increaing n_estimators\nfrom sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier(n_estimators=30)\nmodel.fit(x,y)\nmodel.score(x,y)","7fbf8306":"test.head(3)","63ddba1f":"Passenger_ID=test['PassengerId'].copy()","b5106211":"test.drop(['PassengerId','Name','SibSp','Parch','Ticket','Cabin','Embarked'],axis=1,inplace=True)","77ffc7f5":"test.head(3)","659fb8eb":"test.isnull().sum()","545dcd92":"test.Age.describe()\n# mean value is 30","3ccbb00e":"test.Age.fillna(30,inplace=True)","3e48a9fd":"test.isnull().sum()","523c1a38":"test.Fare.fillna(0,inplace=True)","bdaaa7ad":"test.isnull().sum()","cb323a7b":"test_dummies=pd.get_dummies(test.Sex,drop_first=True)\ntest_dummies","eab83580":"test=pd.concat([test,test_dummies],axis=1)","d7442ee9":"test.head(3)","ec162b16":"test.drop('Sex',axis=1,inplace=True)","2f169374":"test.head(2)","a525da49":"y_pred=model.predict(test)","a65bdb30":"y_pred","f927b3d3":"model.predict([[3,35,8,1]])","f6dde0bb":"model.predict([[4,18,8,1]])","07a452a7":"len(y_pred)","3e6ff11d":"output = pd.DataFrame({'PassengerID': Passenger_ID, 'Survived': y_pred})\noutput.to_csv('MySubmission.csv', index=False)","421bbcf8":"### WORKING WITH THE TEST DATA"}}