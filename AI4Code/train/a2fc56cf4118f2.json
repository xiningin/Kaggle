{"cell_type":{"b06db447":"code","3bdf20ac":"code","4c0c6a73":"code","47c64798":"code","55a73893":"code","81824303":"code","180387ea":"code","37e85a57":"code","534590ff":"code","55bb28f2":"code","074315a3":"code","d9fe3bc3":"code","b5a79d42":"code","d1120c15":"code","174a0002":"code","232f4861":"code","834e2892":"code","05d55336":"code","03dac531":"code","405b3ed6":"code","d8b3088e":"code","048c3d5e":"markdown","aedaff8a":"markdown","a6eb3be6":"markdown","1722f0f4":"markdown","6b50903e":"markdown","5ef173fd":"markdown","fee38dfd":"markdown","1d33bc8b":"markdown","be509e2d":"markdown","258e0a3f":"markdown","48804d77":"markdown","678514a4":"markdown","a072938d":"markdown","c7d6b468":"markdown","735e1e97":"markdown","10794053":"markdown","a7d6f040":"markdown","0bfce177":"markdown","68caee57":"markdown","d285cac8":"markdown","1b518faa":"markdown","ac868b08":"markdown","935fbe52":"markdown","89729d38":"markdown","389ca252":"markdown","2ffccfba":"markdown","1f0be844":"markdown","e29577ce":"markdown","3f6d00c6":"markdown","1aaef827":"markdown","21776c24":"markdown","3f171378":"markdown","91f60917":"markdown","be200e86":"markdown","2d45a207":"markdown"},"source":{"b06db447":"# To read and handle data files\nimport pandas as pd\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\n\n# For handling arrays and vectors\nimport numpy as np\n\n# For string manipulation\nimport string\n\n# To show progress\nfrom tqdm.auto import tqdm\ntqdm.pandas()\n\n# For visualization\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# Supress warnings\nimport warnings\nwarnings.filterwarnings('ignore')","3bdf20ac":"# Read tweets data file\ntweets = pd.read_csv('..\/input\/farmers-protest-tweets-dataset-csv\/tweets.csv')\n\n# Print number of rows and columns and display first 5 recrods\nprint('Tweets data read successfully!')\nprint('\\nNumber of rows: {}\\nNumber of columns: {}\\n'.format(tweets.shape[0], tweets.shape[1]))\ntweets.head()","4c0c6a73":"# Display final 5 records\ntweets.tail()","47c64798":"# Number of null values per column\ntweets.isna().sum()","55a73893":"# Function to preprocess text data\ndef preprocess_text(text):\n    # Remove punctuations\n    text = text.translate(str.maketrans('', '', string.punctuation))\n\n    # Remove unwanted words (http, co, amp and \\n)\n    text = text.replace('http', '').replace('co', '').replace('amp', '').replace('\\n', '')\n    \n    # Return processed text\n    return text","81824303":"# Function to preprocess tweets DataFrame\ndef preprocess_tweets(df):\n    print('Preprocessing tweets DataFrame...')\n\n    # Drop duplicates based on tweetId and reset index for DataFrame\n    df.drop_duplicates(subset='tweetId', inplace=True)\n    df.reset_index(drop=True, inplace=True)\n\n    # Drop records with null value for \"source\" column\n    df.dropna(subset=['source'], inplace=True)\n\n    # Convert \"date\" column to datetime and keep only date\n    df['date'] = pd.to_datetime(df['date'], format='%Y\/%m\/%d').dt.date\n\n    # Preprocess text in \"renderedContent\" column\n    print('\\nPreprocessing text in \"renderedContent\" field...')\n    df['textContent'] = df.progress_apply(lambda x: preprocess_text(x['renderedContent']), axis=1)\n\n    # Extract device type from \"source\" column\n    print('\\nExtracting device type from \"source\" field...')\n    df['deviceType'] = df.progress_apply(lambda x: x['source'].split()[1].split('\/')[-1][0:-1], axis=1)\n\n    print('\\ntweets DataFrame transformed successfully!')\n    print('  - Duplicate records dropped based on tweet ID')\n    print('  - Records where source field contains null value dropped')\n    print('  - Date column converted to datetime')\n    print('  - Text content preprocessed to remove punctuations and unwanted words')\n    print('  - Extracted device type from source column')\n    print('\\n\\nNumber of rows after preprocessing: {}\\nNumber of columns after preprocessing: {}\\n'.format(tweets.shape[0], tweets.shape[1]))\n    return","180387ea":"# Preprocess tweets DataFrame and display first 5 records\npreprocess_tweets(tweets)\ntweets.head()","37e85a57":"# Read users data file and display first 5 records\nusers = pd.read_csv('..\/input\/farmers-protest-tweets-dataset-csv\/users.csv')\n\n# Print number of rows and columns and display first 5 recrods\nprint('Users data read successfully!')\nprint('\\nNumber of rows: {}\\nNumber of columns: {}\\n'.format(users.shape[0], users.shape[1]))\nusers.head()","534590ff":"# Display final 5 records\nusers.tail()","55bb28f2":"# Number of null values per column\nusers.isna().sum()","074315a3":"# Function to preprocess users data\ndef preprocess_users(df):\n    print('Preprocessing users DataFrame...')\n\n    # Drop duplicate tweets based on tweetId and reset index for DataFrame\n    users.drop_duplicates(subset='userId', inplace=True)\n    users.reset_index(drop=True, inplace=True)\n\n    # Convert \"created\" column to datetime and keep only date\n    df['created'] = pd.to_datetime(df['created'], format='%Y\/%m\/%d').dt.date\n\n    print('\\nusers DataFrame transformed successfully!')\n    print('  - Duplicate records dropped based on user ID')\n    print('  - Date of profile creation converted to datetime')\n    print('\\n\\nNumber of rows after preprocessing: {}\\nNumber of columns after preprocessing: {}\\n'.format(users.shape[0], users.shape[1]))\n    return","d9fe3bc3":"# Preprocess users DataFrame and display first 5 records\npreprocess_users(users)\nusers.head()","b5a79d42":"# Summary statistics for tweets DataFrame\ntweets.describe().transpose()","d1120c15":"# Get tweet with highest value for \"likeCount\" column from tweets DataFrame\nmost_liked_tweet = tweets[(tweets['likeCount']==tweets['likeCount'].max())][['date', 'userId', 'renderedContent', 'likeCount', 'retweetCount']]\n\n# Join with users DataFrame on \"userId\" column\nmost_liked_tweet = most_liked_tweet.merge(users, on='userId')\n\n# Display details of the most liked tweet and user\nwith pd.option_context('display.max_colwidth', None):\n  display(most_liked_tweet[['date', 'userId', 'username', 'displayname', 'renderedContent', 'likeCount', 'retweetCount']])","174a0002":"# Get tweet with highest value for \"retweetCount\" column from tweets DataFrame\nmost_retweeted_tweet = tweets[(tweets['retweetCount']==tweets['retweetCount'].max())][['date', 'userId', 'renderedContent', 'likeCount', 'retweetCount']]\n\n# Join with users DataFrame on \"userId\" column\nmost_retweeted_tweet = most_retweeted_tweet.merge(users, on='userId')\n\n# Display details of the most retweeted tweet and user\nwith pd.option_context('display.max_colwidth', None):\n    display(most_retweeted_tweet[['date', 'userId', 'username', 'displayname', 'renderedContent', 'likeCount', 'retweetCount']])","232f4861":"# For creating wordcloud\nfrom wordcloud import WordCloud\n\n# Text data from tweets DataFrame\ntweet_text = ' '.join(text for text in tweets.textContent.astype(str))\n\n# Create wordcloud from tweet text\nwc = WordCloud(background_color=\"white\")\nwordcloud = wc.generate(tweet_text)\n\n# Display wordcloud\nplt.axis('off')\nplt.figure(figsize=(16, 10))\nplt.imshow(wordcloud)\nplt.show()","834e2892":"# Get count of tweets per day\ntweets_per_day = tweets.groupby(['date']).count().tweetId.reset_index()\n\n# Line plot for tweets per day\nfig = px.line(tweets_per_day, x='date', y='tweetId', title='Number of tweets per day', labels={'date':'Date', 'tweetId':'Number of tweets'})\nfig.show()","05d55336":"# Get count of each device type from tweets DataFrame\nsource_counts = tweets.deviceType.value_counts()\n\n# If count is greater than 6000 than retain original category otherwise group into \"Other\" category\nsources = source_counts[source_counts>7000]\nsources['Other'] = source_counts[source_counts<=7000].sum()\n\n# Display pie chart\nsources.plot(kind='pie', figsize=(16, 10), title='Source of tweets', legend=False, autopct='%1.1f%%', explode=(0, 0, 0, 0.1), startangle=0)","03dac531":"# Summary statistics for users DataFrame\nusers.describe().transpose()","405b3ed6":"# Get user with highest value for \"followersCount\" column from users DataFrame\nmost_followed_user = users[users['followersCount']==users['followersCount'].max()][['userId', 'username', 'displayname', 'followersCount']]\n\n# Display details of most followed user\nwith pd.option_context('display.max_colwidth', None):\n    display(most_followed_user)","d8b3088e":"# Pie chart for veried and non-verified user profiles\nusers.verified.value_counts().plot(kind='pie', figsize=(16, 10), title='Verified user profiles', legend=False, autopct='%1.1f%%', explode=(0, 0.1), startangle=0)","048c3d5e":"## Data Description","aedaff8a":"### Users data","a6eb3be6":"![#FarmersProtest](https:\/\/images.indianexpress.com\/2020\/12\/farmer.jpg)","1722f0f4":"### 5. Number of tweets per day","6b50903e":"# Future Work","5ef173fd":"The most liked tweet is also the most retweeted tweet. The tweet has been retweeted more than 300,000 times.","fee38dfd":"### 1. Summary statistics","1d33bc8b":"# Data","be509e2d":"The graph above shows the number of tweets tweeted per day from November 2020 till September 2021.\n\nThe most number of tweets with the hashtag *#FarmersProtest* wre tweeted on February 3rd, a day after Rihanna's tweet on the topic.","258e0a3f":"### 2. Most followed user","48804d77":"The function defined below is used to process and transform the user data.","678514a4":"The **users.csv** data file contains information about each user that posted a tweet with the the hashtag *#FarmersProtest*, such as the unique ID for the user, username, display name, number of followers, etc.","a072938d":"The **tweets.csv** data file contains information about each tweet that contains the hashtag *#FarmersProtest*, such as the unique ID for the tweet, number of likes on the tweets, number of times the tweet was retweeted, etc.","c7d6b468":"### 4. WordCloud for tweets","735e1e97":"# Exploratory Data Analysis","10794053":"Using snscrape, a Python library for scraping data from social networking sites such as Twitter, Reddit, etc., I have created a dataset of tweets that contain the hashtag \"#FarmersProtest\".\n\nThe dataset consists of 2 CSV files - one containing data about the tweets that have the hashtag \"#FarmersProtest\" (tweeted since November 1, 2020) and the second having data about users who tweeted with the hashtag.\n\nThis dataset (last updated 30 September, 2021) contains data about nearly 1 million tweets tweeted by nearly 160,000 Twitter users.","a7d6f040":"The function defined in the code cell below processes the text in the *renderedContent* field of the tweets data. All punctuations and unwanted words are removed and only text is retained.","0bfce177":"# Introduction","68caee57":"In this notebook, I have perfomed data preprocessing and EDA for the tweets dataset. In the next part of this project, I will be performing sentiment analysis for the tweets about the farmers' protests in India.","d285cac8":"### 3. Most retweeted tweet","1b518faa":"THe most followed Twitter user who tweeted about the topic is Rihanna, with over 100 million followers on Twitter.","ac868b08":"I will be using this dataset to perform some basic exploratory data analysis as well as sentiment analysis on this topic.","935fbe52":"### 2. Most liked tweet","89729d38":"## Users","389ca252":"## Data Preprocessing & Transformation","2ffccfba":"### 6. Source of tweets","1f0be844":"Let's take a look at the number of null values for each field in the users data file.","e29577ce":"Most of the user profiles who posted a tweet with the hashtag are not verified. Only a small percentage (2.8%) of the tweets are from verified accounts.","3f6d00c6":"The 2020\u20132021 Indian farmers' protest is an ongoing protest against three farm acts which were passed by the Parliament of India in September 2020. Farmer unions and their representatives have demanded that the laws be repealed and have stated that they will not accept a compromise.\n\nIn the light of this protest, social media users have been very active in voicing their opinion about the matter. \"#FarmersProtest\" is very prevalent on Twitter, with thousands of users tweeting thousands of tweets with the hashtag.\n\nIn this notebook, I have performed data preprocessing and transformation for the #FarmersProtest tweets dataset. Further, I have also performed exploratory data analysis (EDA) for this dataset.\n\nThis notebook is the first part of a 2 phase Natural Language Processing project based on the topic of farmers' protests in India. In the second part of the project, I will be performing sentiment analysis based on the tweets in this dataset.","1aaef827":"The most liked tweet was tweeted by American singer Rihanna on February 2nd, 2021. The tweet, which shared a link to an article about the protests by CNN, reads \"why aren't we talking about this?! #FarmersProtest\". The tweet has been liked by 944307 TWitter users.","21776c24":"Let's take a look at the number of null values for each field in the tweets data file.","3f171378":"### Tweets data","91f60917":"### 1. Summary statistics","be200e86":"### 3. Verified profiles","2d45a207":"## Tweets data"}}