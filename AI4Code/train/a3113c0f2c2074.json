{"cell_type":{"1b715b7e":"code","824321a0":"code","51bf856a":"code","1f6d586a":"code","8c7962d6":"code","0ba36d5d":"code","8cb48fb9":"code","d651fa85":"code","0592c9d7":"code","d299d240":"code","0b729191":"code","5b5627f7":"code","379c2e2f":"code","15d7525d":"code","9f31c9fb":"code","db6007ac":"code","bf11095f":"code","946f9ad7":"code","999bfebe":"code","597fead2":"code","438abd67":"code","26450bc9":"code","187a9dc0":"code","6e63cffe":"code","e4e3915d":"code","1dd61e18":"code","08dc2086":"code","6f8beba6":"code","f8df7124":"code","7a5d5991":"code","1d4233d3":"markdown","2de0da6c":"markdown","7fb725e7":"markdown","b0f16f16":"markdown","53734552":"markdown","f1ada4d7":"markdown","6ce85970":"markdown","fbcafbd1":"markdown","253dd111":"markdown","87d63519":"markdown"},"source":{"1b715b7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","824321a0":"!pip install plotly","51bf856a":"# plotly\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected = True)\nimport plotly.graph_objs as go\n\n# word cloud library\nfrom wordcloud import WordCloud\n\n# matplotlib\nimport matplotlib.pyplot as plt\n\n# warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\")","1f6d586a":"print(os.listdir(\"..\/input\"))","8c7962d6":"# load data that we will use\ntimesData = pd.read_csv(\"..\/input\/world-university-rankings\/timesData.csv\")","0ba36d5d":"timesData.info()","8cb48fb9":"timesData.head(10)","d651fa85":"timesData.tail(10)","0592c9d7":"df = timesData.iloc[:100, :]","d299d240":"df.shape","0b729191":"import plotly.graph_objs as go","5b5627f7":"# creating trace 1\ntrace1 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.citations,\n                    mode = \"lines\",\n                    name = \"citations\",\n                    marker = dict(color = \"rgb(16, 112, 2)\"),\n                    text = df.university_name)\n# creating trace 2\ntrace2 = go.Scatter(\n                    x = df.world_rank,\n                    y = df.teaching,\n                    mode = \"lines + markers\",\n                    name = \"teaching\",\n                    marker = dict(color = \"rgb(80,26,80)\"),\n                    text = df.university_name)\n\ndata = [trace1, trace2]\n\nlayout = dict(title = \"Citation and Teaching vs Work Rank of Top 100 Universities\",\n                    xaxis = dict(title = \"World Rank\", ticklen = 5, zeroline = False))\n\nfig = dict(data = data, layout = layout)\niplot(fig)","379c2e2f":"# prepare data drames\ndf2014 = timesData[timesData.year == 2014].iloc[:100, :]\ndf2015 = timesData[timesData.year == 2015].iloc[:100, :]\ndf2016 = timesData[timesData.year == 2016].iloc[:100, :]","15d7525d":"# creating trace 1\ntrace1 = go.Scatter(\n                    x = df2014.world_rank,\n                    y = df2014.citations,\n                    mode = \"markers\",\n                    name = \"2014\",\n                    marker = dict(color = \"rgb(255,128,255)\"),\n                    text = df2014.university_name)\n# creating trace 2\ntrace2 = go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.citations,\n                    mode = \"markers\",\n                    name = \"2015\",\n                    marker = dict(color = \"rgb(255,128,2)\"),\n                    text = df2015.university_name)\n# creating trace 3\ntrace3 = go.Scatter(\n                    x = df2016.world_rank,\n                    y = df2016.citations,\n                    mode = \"markers\",\n                    name = \"2016\",\n                    marker = dict(color = \"rgb(0,255,200)\"),\n                    text = df2016.university_name)\ndata = [trace1, trace2, trace3]\nlayout = dict(title = \"Citation vs Work Rank of Top 100 Universities with 2014, 2015, 2016\",\n             xaxis = dict(title = \"World Rank\", ticklen = 1, zeroline = True),\n             yaxis = dict(title = \"Citation\", ticklen = 1, zeroline = True))\n\nfig = dict(data = data, layout = layout)\niplot(fig)","9f31c9fb":"df2014","db6007ac":"### prepare data frames\ndf2014 = timesData[timesData.year == 2014].iloc[:3,:]\ndf2014","bf11095f":"# create trace1\ntrace1 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.citations,\n                name = \"citations\",\n                marker = dict(color = \"rgb(255, 174, 255)\",\n                                line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n                text = df2014.country)\n# create trace2\ntrace2 = go.Bar(\n                x = df2014.university_name,\n                y = df2014.teaching,\n                name = \"teaching\",\n                marker = dict(color = \"rgb(255, 255, 128)\",\n                                 line = dict(color = \"rgb(0, 0, 0)\", width = 1.5)),\n                text = df2014.country)\ndata = [trace1, trace2]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","946f9ad7":"x = df2014.university_name\n\ntrace1 = {\n    \"x\" : x,\n    \"y\" : df2014.citations,\n    \"name\" : \"citation\",\n    \"type\" : \"bar\"\n};\ntrace2 = {\n    \"x\" : x,\n    \"y\" : df2014.teaching,\n    \"name\" : \"teaching\",\n    \"type\" : \"bar\"\n};\ndata = [trace1, trace2];\nlayout = {\n    \"xaxis\" : {\"title\" : \"Top 3 Universities\"},\n    \"barmode\" : \"relative\",\n    \"title\" : \"citations and teaching of top 3 universities in 2014\"\n};\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","999bfebe":"# data preparation\ndf2016 = timesData[timesData.year == 2016].iloc[:7,:]\ndf2016","597fead2":"pie1 = df2016.num_students\npie1_list = [float(each.replace(\",\", \"\")) for each in df2016.num_students]\npie1_list","438abd67":"labels = df2016.university_name\n# figure\nfig = {\n    \"data\" : [\n        {\n            \"values\" : pie1_list,\n            \"labels\" : labels,\n            \"domain\" : {\"x\": [0, .5]},\n            \"name\" : \"Number Of Students Rates\",\n            \"hoverinfo\" : \"label + percent + name\",\n            \"hole\" : .1,\n            \"type\" : \"pie\"\n        },\n    ],\n    \"layout\" : {\n        \"title\" : \"Universites Number of Students rates\",\n        \"annotations\" : [\n            {\"font\" : {\"size\" : 20},\n             \"text\" : \"Number of Students\",\n             \"x\" : 0.4,\n             \"y\" : 1\n            },\n        ]\n    }\n}\niplot(fig)","26450bc9":"df2016 = timesData[timesData.year == 2016].iloc[:20,:]\nnum_students_size = [float(each.replace(\",\", \".\")) for each in df2016.num_students]\nnum_students_size","187a9dc0":"df2016.international\ninternational_color = [float(each) for each in df2016.international]\ndata = [\n    {\n        \"y\" : df2016.teaching,\n        \"x\" : df2016.world_rank,\n        \"mode\" : \"markers\",\n        \"marker\" : {\n            \"color\" : international_color,\n            \"size\" : num_students_size,\n            \"showscale\" : True\n        },\n        \"text\" : df2016.university_name\n    }\n]\niplot(data)","6e63cffe":"# prepare data\nx2011 = timesData.student_staff_ratio[timesData.year == 2011]\nx2012 = timesData.student_staff_ratio[timesData.year == 2012]","e4e3915d":"x2012","1dd61e18":"trace1 = go.Histogram(\n        x = x2011,\n        opacity = 0.75,\n        name = \"2011\",\n        marker = dict(color= \"rgba(171, 50, 96, 0.6)\"))\ntrace2 = go.Histogram(\n        x = x2012,\n        opacity = 0.75,\n        name = \"2012\",\n        marker = dict(color = \"rgba(12, 50, 196, 0.4)\"))\ndata = [trace1, trace2]\nlayout = go.Layout(\n                barmode = \"overlay\",\n                title = \" Student staff ratio in 2011 and 2012\",\n                xaxis = dict(title = \"students-staff ratio\"),\n                yaxis = dict(title = \"Count\"))\nfig = go.Figure(data = data, layout = layout)\niplot(fig)\n","08dc2086":"x2011 = timesData.country[timesData.year == 2011]\nplt.subplots(figsize = (10, 10))\nwordcloud = WordCloud(\n                        background_color= \"white\",\n                        width = 512,\n                        height= 384).generate(\" \".join(x2011))\nplt.imshow(wordcloud)\nplt.axis(\"off\")\nplt.savefig(\"graph.png\") # save graph in your computer\n\nplt.show()","6f8beba6":"x2015 = timesData[timesData.year == 2015]\n\ntrace1 = go.Box(\n                y = x2015.total_score,\n                name = \"total score of universities in 2015\",\n                marker = dict(color = \"rgb(12, 12, 140)\",\n    )\n)\ntrace2 = go.Box(\n                y = x2015.research,\n                name = \"research of universities in 2015\",\n                marker = dict(\n                    color = \"rgb(12, 128, 128)\",))\ndata = [trace1, trace2]\niplot(data)","f8df7124":"# first line plot\ntrace1 = go.Scatter(\n        x = df2015.world_rank,\n        y = df2015.teaching,\n        name = \"teaching\",\n        marker = dict(color = \"rgb(16, 112, 2)\"),)\n# second line plot\ntrace2 = go.Scatter(\n                    x = df2015.world_rank,\n                    y = df2015.income,\n                    xaxis = \"x2\",\n                    yaxis = \"y2\",\n                    name = \"income\",\n                    marker = dict(color = \"rgb(160, 112, 20)\"),) \ndata = [trace1, trace2]\nlayout = go.Layout(\n                xaxis2 = dict(\n                domain = [0.6, 0.95],\n                anchor = \"y2\"),\n                yaxis2 = dict(\n                domain = [0.6, 0.95],\n                anchor = \"x2\"),\n                title = \"income and teaching vs world rank of universities\")\n\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","7a5d5991":"trace1 = go.Scatter3d(\n                    x = df2015.world_rank,\n                    y = df2015.research,\n                    z = df2015.citations,\n                    mode = \"markers\",\n                    marker = dict(size = 7, color = \"rgb(255, 0, 0)\",))\n\ndata = [trace1]\nlayout = go.Layout(\n                )\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","1d4233d3":"## Pie Charts","2de0da6c":"## Line Charts\nLine Charts Example : Citation and Teaching vs World arank of Top 100 Universities\n\n   * import graph_objs as go\n   * Creating traces\n       * x = x axis\n       * y = y axis\n       * mode = type of plot like marker, line or line + marker\n       * name = name of the plots\n       * marker = marker is used with dictionary\n           * color = color of lines RGB(red, green, blue)\n       * text = chart text\n        \n   * data = is a list that we add traces into it\n   * layout = it is dictionary\n       * title = title of layout\n       * x axis\n           * title = title of x axis\n           * ticklen = length of x axis ticks\n           * zeroline = showing zeroline or no\n   * fig = it includes data and layout\n   * iplot = plots the figure(fig)","7fb725e7":"## Bar Charts","b0f16f16":"## Word Cloud","53734552":"## Scatter Charts","f1ada4d7":"## 3D Scatter plot","6ce85970":"## Inset Plot","fbcafbd1":"## Box Plot","253dd111":"# Bubble Charts","87d63519":"## Histogram"}}