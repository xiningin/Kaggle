{"cell_type":{"b36fcc93":"code","dba20977":"code","ec7788f3":"code","93981115":"code","b6a74acc":"code","f0b92af0":"code","329efe7c":"code","813197f1":"code","62810fa6":"code","33a33552":"code","68f32619":"code","54edd46f":"code","b5c5e87c":"code","d86b6d56":"code","2537935e":"code","0edd40af":"code","9f89c89e":"code","d1437ca7":"code","ef80c5f9":"code","cb8896ee":"code","ca271066":"code","5a2e736a":"code","e331de03":"code","c977c6d7":"code","4889d1ca":"code","8f535572":"code","19485e03":"code","1696ccf3":"code","971c9eb5":"code","4eea8469":"code","f3a5c16c":"code","629b996a":"code","bffa8103":"code","ade6e4e5":"code","92cdf47d":"code","2a494b9b":"code","b3c84745":"code","4bc903dd":"code","69320b17":"code","c64dfe9c":"code","04bb0044":"code","38d8db8e":"code","a7ba6afc":"code","c7ea092c":"code","d8aca2e9":"code","795bc890":"code","21e464c2":"code","8d76f9b4":"code","1d79e734":"code","b7d4da93":"code","44479272":"code","ce617812":"code","cc8f1aa5":"code","a285d93b":"code","507a3e79":"code","42182e33":"code","51b9e68b":"code","45ff64c6":"code","fcc55d7b":"code","d6c083bd":"code","7920da4e":"code","f2948c0a":"code","c19568fd":"code","f6f86d10":"code","4bb3d8a3":"code","8ad5ba4d":"code","2bb5b433":"code","8a90619a":"code","e91fdf12":"code","6c42c785":"code","be524559":"code","0b852989":"code","082f8ac1":"code","233b90b2":"code","4b4b034d":"code","6c7873bb":"code","1b540240":"code","1b6300a3":"code","4fdd7082":"code","2b0c5020":"code","c3d69f67":"code","3a22aeaf":"markdown","75e7b5cd":"markdown","8a82b0f8":"markdown","c3b60bd2":"markdown","dfece116":"markdown","0118e8b5":"markdown"},"source":{"b36fcc93":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","dba20977":"!pip install -U nltk==3.4","ec7788f3":"#GENERAL\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib as mpl\nimport random\nimport time\n#PATH PROCESS\nimport os\nimport os.path\nfrom pathlib import Path\nimport glob\nfrom scipy.io import loadmat\nimport nibabel as nib\n#IMAGE PROCESS\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nimport cv2\nfrom keras.applications.vgg16 import preprocess_input, decode_predictions\nfrom keras.preprocessing import image\nfrom skimage.feature import hessian_matrix, hessian_matrix_eigvals\nfrom scipy.ndimage.filters import convolve\nfrom skimage import data, io, filters\nimport skimage\nfrom skimage.morphology import convex_hull_image, erosion\nfrom IPython import display\nfrom scipy.ndimage import gaussian_filter\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\n#SCALER & TRANSFORMATION\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import MinMaxScaler\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nfrom keras import regularizers\nfrom sklearn.preprocessing import LabelEncoder\n#ACCURACY CONTROL\nfrom sklearn.metrics import confusion_matrix, accuracy_score, classification_report, roc_auc_score, roc_curve\nfrom sklearn.model_selection import GridSearchCV, cross_val_score\nfrom sklearn.metrics import mean_squared_error, r2_score\n#OPTIMIZER\nfrom keras.optimizers import RMSprop,Adam,Optimizer,Optimizer, SGD\n#MODEL LAYERS\nfrom tensorflow.keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D, BatchNormalization,MaxPooling2D,BatchNormalization,\\\n                        Permute, TimeDistributed, Bidirectional,GRU, SimpleRNN,\\\nLSTM, GlobalAveragePooling2D, SeparableConv2D, ZeroPadding2D, Convolution2D, ZeroPadding2D,Reshape, Conv2DTranspose,\\\nLeakyReLU, GaussianNoise, GlobalMaxPooling2D, ReLU, Input, Concatenate\nfrom keras import models\nfrom keras import layers\nimport tensorflow as tf\nfrom keras.applications import VGG16,VGG19,inception_v3\nfrom keras import backend as K\nfrom keras.utils import plot_model\nfrom keras.datasets import mnist\nimport keras\nfrom keras.models import Model\n#IGNORING WARNINGS\nfrom warnings import filterwarnings\nfilterwarnings(\"ignore\",category=DeprecationWarning)\nfilterwarnings(\"ignore\", category=FutureWarning) \nfilterwarnings(\"ignore\", category=UserWarning)","93981115":"Example_Train_NII_Path = \"..\/input\/heart-mri-image-dataset-left-atrial-segmentation\/imagesTr\/la_016.nii\"\nExample_Label_NII_Path = \"..\/input\/heart-mri-image-dataset-left-atrial-segmentation\/labelsTr\/la_016.nii\"","b6a74acc":"Example_Reading_Train_NII = nib.load(Example_Train_NII_Path)\nExample_Reading_Label_NII = nib.load(Example_Label_NII_Path)","f0b92af0":"print(type(Example_Reading_Train_NII))","329efe7c":"print(Example_Reading_Train_NII) # general info","813197f1":"print(Example_Reading_Train_NII.affine)","62810fa6":"print(Example_Reading_Train_NII.extra)","33a33552":"print(Example_Reading_Train_NII.dataobj.dtype)","68f32619":"print(Example_Reading_Train_NII.get_data_dtype())","54edd46f":"print(Example_Reading_Train_NII.get_filename())","b5c5e87c":"print(Example_Reading_Train_NII.get_fdata())","d86b6d56":"print(Example_Reading_Train_NII.file_map.keys())","2537935e":"print(Example_Reading_Train_NII.file_map.items())","0edd40af":"print(Example_Reading_Train_NII.file_map[\"image\"].filename)","9f89c89e":"print(Example_Reading_Train_NII.get_qform())","d1437ca7":"print(Example_Reading_Train_NII.get_data()) # image","ef80c5f9":"print(Example_Reading_Train_NII.get_data().shape)","cb8896ee":"print(Example_Reading_Train_NII.get_data()[0].shape)","ca271066":"Example_ALL_Images = Example_Reading_Train_NII.get_data()\nExample_ALL_Labels = Example_Reading_Label_NII.get_data()","5a2e736a":"print(Example_ALL_Images[0].shape)\nprint(Example_ALL_Labels[0].shape)","e331de03":"print(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2].shape)","c977c6d7":"print(Example_ALL_Images.shape[0]\/\/2)","4889d1ca":"print(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2])","8f535572":"print(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].shape)","19485e03":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\nPlot_Color_Op = axis[0].imshow(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2])\naxis[0].set_xlabel(Example_ALL_Images.shape)\naxis[0].set_ylabel(Example_ALL_Images.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2])\naxis[1].set_xlabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].shape)\naxis[1].set_ylabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].size)\naxis[1].set_title(\"MASK\")\n\nfigure.colorbar(Plot_Color_Op, ax=axis.ravel().tolist(), shrink=0.3, ticks=range(10),label='LAYER')","1696ccf3":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\nPlot_Color_Op = axis[0].imshow(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2],cmap=\"jet\")\naxis[0].set_xlabel(Example_ALL_Images.shape)\naxis[0].set_ylabel(Example_ALL_Images.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2],cmap=\"jet\")\naxis[1].set_xlabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].shape)\naxis[1].set_ylabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].size)\naxis[1].set_title(\"MASK\")\n\nfigure.colorbar(Plot_Color_Op, ax=axis.ravel().tolist(), shrink=0.3, ticks=range(10),label='LAYER')","971c9eb5":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\nPlot_Color_Op = axis[0].imshow(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2],cmap=\"hot\")\naxis[0].set_xlabel(Example_ALL_Images.shape)\naxis[0].set_ylabel(Example_ALL_Images.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2],cmap=\"hot\")\naxis[1].set_xlabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].shape)\naxis[1].set_ylabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].size)\naxis[1].set_title(\"MASK\")\n\nfigure.colorbar(Plot_Color_Op, ax=axis.ravel().tolist(), shrink=0.3, ticks=range(10),label='LAYER')","4eea8469":"figure,axis = plt.subplots(1,2,figsize=(10,10))\n\nPlot_Color_Op = axis[0].imshow(Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2],cmap=\"Spectral\")\naxis[0].set_xlabel(Example_ALL_Images.shape)\naxis[0].set_ylabel(Example_ALL_Images.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2],cmap=\"Spectral\")\naxis[1].set_xlabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].shape)\naxis[1].set_ylabel(Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2].size)\naxis[1].set_title(\"MASK\")\n\nfigure.colorbar(Plot_Color_Op, ax=axis.ravel().tolist(), shrink=0.3, ticks=range(10),label='LAYER')","f3a5c16c":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Example_ALL_Images[Example_ALL_Images.shape[0]\/\/2] \/ 255.\nPicking_Example_Label = Example_ALL_Labels[Example_ALL_Images.shape[0]\/\/2] \/ 255.\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\nPlot_Color_Op = axis[1].imshow(Picking_Example_Label)\naxis[1].set_xlabel(np.mean(Picking_Example_Label))\naxis[1].set_ylabel(Picking_Example_Label.size)\naxis[1].set_title(\"MASK\")\n\nfigure.colorbar(Plot_Color_Op, ax=axis.ravel().tolist(), shrink=0.3, ticks=range(10),label='LAYER')","629b996a":"Main_NII_Path = Path(\"..\/input\/heart-mri-image-dataset-left-atrial-segmentation\/imagesTr\")\nLabel_NII_Path = Path(\"..\/input\/heart-mri-image-dataset-left-atrial-segmentation\/labelsTr\")","bffa8103":"NII_Images = list(Main_NII_Path.glob(r\"*.nii\"))\nNII_Labels = list(Label_NII_Path.glob(r\"*.nii\"))","ade6e4e5":"print(len(NII_Images))\nprint(len(NII_Labels))","92cdf47d":"Images_Series = pd.Series(NII_Images,name=\"IMAGE\").astype(str)\nLabels_Series = pd.Series(NII_Labels,name=\"LABEL\").astype(str)","2a494b9b":"Main_Data = pd.concat([Images_Series,Labels_Series],axis=1)","b3c84745":"print(Main_Data.head(-1))","4bc903dd":"Or_1_0 = []\nImage_List = []\nLabel_List = []\n\nfor i_img,i_mask in zip(Main_Data[\"IMAGE\"].values,Main_Data[\"LABEL\"].values):\n\n    Reading_Train_NII = nib.load(i_img)\n    Reading_Label_NII = nib.load(i_mask)\n    \n    X_Images = Reading_Train_NII.get_data()\n    X_Labels = Reading_Label_NII.get_data()\n     \n    Selecting_Image = X_Images[X_Images.shape[0]\/\/2] \/ 255.\n    Selecting_Label = X_Labels[X_Images.shape[0]\/\/2] \/ 255.\n    \n    if np.mean(Selecting_Label) > 0:\n        Or_1_0.append(1)\n        Selecting_Image = Selecting_Image.astype(\"float32\")\n        Selecting_Label = Selecting_Label.astype(\"float32\")\n    \n        Image_List.append(Selecting_Image)\n        Label_List.append(Selecting_Label)\n    else:\n        Or_1_0.append(0)","69320b17":"for i_img,i_mask in zip(Main_Data[\"IMAGE\"].values,Main_Data[\"LABEL\"].values):\n    Reading_Train_NII = nib.load(i_img)\n    Reading_Label_NII = nib.load(i_mask)\n    \n    X_Images = Reading_Train_NII.get_data()\n    X_Labels = Reading_Label_NII.get_data()\n     \n    Selecting_Image = X_Images[X_Images.shape[0]\/\/2] \/ 255.\n    Selecting_Label = X_Labels[X_Images.shape[0]\/\/2] \/ 255.\n    \n    print(np.shape(Selecting_Image))\n    print(np.shape(Selecting_Label))\n    print(\"---\"*20)","c64dfe9c":"print(Or_1_0)","04bb0044":"print(len(Or_1_0))","38d8db8e":"Main_Data[\"1_OR_0\"] = Or_1_0","a7ba6afc":"print(Main_Data.head(-1))","c7ea092c":"print(len(Image_List))\nprint(len(Label_List))","d8aca2e9":"print(Image_List[0].shape)\nprint(Label_List[0].shape)","795bc890":"print(type(Image_List[0]))\nprint(type(Label_List[0]))","21e464c2":"Testing_Trans = cv2.resize(Image_List[8],(256,256))","8d76f9b4":"print(Testing_Trans.shape)","1d79e734":"plt.imshow(Testing_Trans)","b7d4da93":"True_Seg = Main_Data[Main_Data[\"1_OR_0\"] == 1]","44479272":"Image_List = []\nLabel_List = []\n\nfor i_img,i_mask in zip(True_Seg[\"IMAGE\"].values,True_Seg[\"LABEL\"].values):\n\n    Reading_Train_NII = nib.load(i_img)\n    Reading_Label_NII = nib.load(i_mask)\n    \n    X_Images = Reading_Train_NII.get_data()\n    X_Labels = Reading_Label_NII.get_data()\n     \n    Selecting_Image = X_Images[X_Images.shape[0]\/\/2] \/ 255.\n    Selecting_Label = X_Labels[X_Images.shape[0]\/\/2] \/ 255.\n    \n    Selecting_Image = Selecting_Image.astype(\"float32\")\n    Selecting_Label = Selecting_Label.astype(\"float32\")\n    \n    Resized_IMG = cv2.resize(Selecting_Image,(256,256))\n    Resized_LABEL = cv2.resize(Selecting_Label,(256,256))\n    \n    Image_List.append(Resized_IMG)\n    Label_List.append(Resized_LABE","ce617812":"print(len(Image_List))\nprint(len(Label_List))","cc8f1aa5":"for indexing_i in range(len(Image_List)):\n    print(\"---\"*10)\n    print(Image_List[indexing_i].shape)\n    print(Label_List[indexing_i].shape)","a285d93b":"print(np.shape(np.array(Image_List)))\nprint(np.shape(np.array(Label_List)))","507a3e79":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[0]\nPicking_Example_Label = Label_List[0]\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Picking_Example_Label)\naxis[1].set_xlabel(np.mean(Picking_Example_Label))\naxis[1].set_ylabel(Picking_Example_Label.size)\naxis[1].set_title(\"MASK\")","42182e33":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[2]\nPicking_Example_Label = Label_List[2]\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Picking_Example_Label)\naxis[1].set_xlabel(np.mean(Picking_Example_Label))\naxis[1].set_ylabel(Picking_Example_Label.size)\naxis[1].set_title(\"MASK\")","51b9e68b":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[8]\nPicking_Example_Label = Label_List[8]\nPicking_Example_Label = Picking_Example_Label.astype(\"uint8\")\nPicking_Example_IMG = Picking_Example_IMG.astype(\"uint8\")\n\nCanny_Image = cv2.Canny(Picking_Example_Label,10,100)\n\nNP_Kernel = np.ones((5,5),np.uint8)\nDilation_Image = cv2.dilate(Canny_Image,NP_Kernel,iterations = 5)\n\nBlend_Image = cv2.addWeighted(Picking_Example_IMG,0.8,Dilation_Image,0.4,0.5)\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Blend_Image)\naxis[1].set_xlabel(np.mean(Blend_Image))\naxis[1].set_ylabel(Blend_Image.size)\naxis[1].set_title(\"MASK\")","45ff64c6":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[0]\nPicking_Example_Label = Label_List[0]\nPicking_Example_Label = Picking_Example_Label.astype(\"uint8\")\nPicking_Example_IMG = Picking_Example_IMG.astype(\"uint8\")\n\nCanny_Image = cv2.Canny(Picking_Example_Label,10,100)\n\nNP_Kernel = np.ones((5,5),np.uint8)\nDilation_Image = cv2.dilate(Canny_Image,NP_Kernel,iterations = 5)\n\nBlend_Image = cv2.addWeighted(Picking_Example_IMG,0.8,Dilation_Image,0.4,0.5)\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Blend_Image,cmap=\"jet\")\naxis[1].set_xlabel(np.mean(Blend_Image))\naxis[1].set_ylabel(Blend_Image.size)\naxis[1].set_title(\"MASK\")","fcc55d7b":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[0]\nPicking_Example_Label = Label_List[0]\nPicking_Example_Label = Picking_Example_Label.astype(\"uint8\")\nPicking_Example_IMG = Picking_Example_IMG.astype(\"uint8\")\n\nCanny_Image = cv2.Canny(Picking_Example_Label,10,100)\n\nNP_Kernel = np.ones((5,5),np.uint8)\nDilation_Image = cv2.dilate(Canny_Image,NP_Kernel,iterations = 5)\n\nBlend_Image = cv2.addWeighted(Picking_Example_IMG,0.8,Dilation_Image,0.4,0.5)\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Blend_Image,cmap=\"hot\")\naxis[1].set_xlabel(np.mean(Blend_Image))\naxis[1].set_ylabel(Blend_Image.size)\naxis[1].set_title(\"MASK\")","d6c083bd":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[11]\nPicking_Example_Label = Label_List[11]\nPicking_Example_Label = Picking_Example_Label.astype(\"uint8\")\nPicking_Example_IMG = Picking_Example_IMG.astype(\"uint8\")\n\nBlend_Image = cv2.addWeighted(Picking_Example_IMG,0.8,Picking_Example_Label,0.4,0.5)\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Blend_Image)\naxis[1].set_xlabel(np.mean(Blend_Image))\naxis[1].set_ylabel(Blend_Image.size)\naxis[1].set_title(\"MASK\")","7920da4e":"figure,axis = plt.subplots(1,2,figsize=(12,12))\n\nPicking_Example_IMG = Image_List[11]\nPicking_Example_Label = Label_List[11]\nPicking_Example_Label = Picking_Example_Label.astype(\"uint8\")\nPicking_Example_IMG = Picking_Example_IMG.astype(\"uint8\")\n\nBlend_Image = cv2.addWeighted(Picking_Example_IMG,0.8,Picking_Example_Label,0.4,0.5)\n\naxis[0].imshow(Picking_Example_IMG)\naxis[0].set_xlabel(Picking_Example_IMG.shape)\naxis[0].set_ylabel(Picking_Example_IMG.size)\naxis[0].set_title(\"IMAGE\")\n\naxis[1].imshow(Blend_Image,cmap=\"gray\")\naxis[1].set_xlabel(np.mean(Blend_Image))\naxis[1].set_ylabel(Blend_Image.size)\naxis[1].set_title(\"MASK\")","f2948c0a":"X_TRAIN = np.array(Image_List,dtype=\"float32\")\nX_LABEL = np.array(Label_List,dtype=\"float32\")","c19568fd":"print(X_TRAIN.shape)\nprint(X_LABEL.shape)","f6f86d10":"X_TRAIN = X_TRAIN.reshape(X_TRAIN.shape[0],X_TRAIN.shape[1],X_TRAIN.shape[2],1)\nX_LABEL = X_LABEL.reshape(X_LABEL.shape[0],X_LABEL.shape[1],X_LABEL.shape[2],1)","4bb3d8a3":"print(X_TRAIN.shape)\nprint(X_LABEL.shape)","8ad5ba4d":"print(X_TRAIN[0:-1].shape)","2bb5b433":"Encoder = Sequential()\n#\nEncoder.add(Conv2D(32,(5,5),kernel_initializer = 'he_normal',use_bias=True,name=\"ENCODER_INPUT\"))\nEncoder.add(BatchNormalization())\nEncoder.add(ReLU())\n#\nEncoder.add(Conv2D(64,(5,5),kernel_initializer = 'he_normal',use_bias=True))\nEncoder.add(BatchNormalization())\nEncoder.add(ReLU())\n#\nEncoder.add(Conv2D(128,(2,2),kernel_initializer = 'he_normal',use_bias=True))\nEncoder.add(BatchNormalization())\nEncoder.add(ReLU())\n#\nEncoder.add(Conv2D(128,(2,2),kernel_initializer = 'he_normal',use_bias=True))\nEncoder.add(BatchNormalization())\nEncoder.add(ReLU())\n\n\n\nDecoder = Sequential()\n#\nDecoder.add(Conv2DTranspose(128,(2,2)))\nDecoder.add(ReLU())\n#\nDecoder.add(Conv2DTranspose(64,(2,2)))\nDecoder.add(ReLU())\n#\nDecoder.add(Conv2DTranspose(32,(5,5)))\nDecoder.add(ReLU())\n#\nDecoder.add(Conv2DTranspose(1,(5,5),name=\"DECODER_OUTPUT\"))\n","8a90619a":"AE_Structure = Sequential([Encoder,Decoder])","e91fdf12":"AE_Structure.compile(loss=\"binary_crossentropy\",optimizer=Adam(lr=0.0000001),metrics=[\"accuracy\"])","6c42c785":"AE_Model = AE_Structure.fit(X_TRAIN[0:-1],X_LABEL[0:-1],epochs=100)","be524559":"Prediction_MASK = AE_Structure.predict(X_TRAIN[:10])","0b852989":"figure,axis = plt.subplots(1,2,figsize=(14,14))\nimg_number = 1\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Predict_Mask,cmap=\"jet\")\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","082f8ac1":"figure,axis = plt.subplots(1,2,figsize=(14,14))\nimg_number = 2\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Predict_Mask,cmap=\"hot\")\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","233b90b2":"figure,axis = plt.subplots(1,2,figsize=(14,14))\nimg_number = 3\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Predict_Mask,cmap=\"jet\")\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","4b4b034d":"figure,axis = plt.subplots(1,2,figsize=(14,14))\nimg_number = 7\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Predict_Mask,cmap=\"jet\")\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","6c7873bb":"figure,axis = plt.subplots(1,3,figsize=(14,14))\nimg_number = 9\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\nMain_Mask = X_LABEL[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Main_Mask)\naxis[1].set_xlabel(Main_Mask.shape)\naxis[1].set_ylabel(Main_Mask.size)\naxis[1].set_title(\"MASKING\")\naxis[2].imshow(Predict_Mask,cmap=\"jet\")\naxis[2].set_xlabel(Predict_Mask.shape)\naxis[2].set_ylabel(Predict_Mask.size)\naxis[2].set_title(\"PREDICTION\")","1b540240":"figure,axis = plt.subplots(1,3,figsize=(14,14))\nimg_number = 1\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\nMain_Mask = X_LABEL[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Main_Mask)\naxis[1].set_xlabel(Main_Mask.shape)\naxis[1].set_ylabel(Main_Mask.size)\naxis[1].set_title(\"MASKING\")\naxis[2].imshow(Predict_Mask,cmap=\"jet\")\naxis[2].set_xlabel(Predict_Mask.shape)\naxis[2].set_ylabel(Predict_Mask.size)\naxis[2].set_title(\"PREDICTION\")","1b6300a3":"figure,axis = plt.subplots(1,3,figsize=(14,14))\nimg_number = 5\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_MASK[img_number]\nMain_Mask = X_LABEL[img_number]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Main_Mask)\naxis[1].set_xlabel(Main_Mask.shape)\naxis[1].set_ylabel(Main_Mask.size)\naxis[1].set_title(\"MASKING\")\naxis[2].imshow(Predict_Mask,cmap=\"jet\")\naxis[2].set_xlabel(Predict_Mask.shape)\naxis[2].set_ylabel(Predict_Mask.size)\naxis[2].set_title(\"PREDICTION\")","4fdd7082":"print(X_TRAIN[17:].shape)","2b0c5020":"Prediction_NON_SEEN = AE_Structure.predict(X_TRAIN[17:])","c3d69f67":"figure,axis = plt.subplots(1,2,figsize=(14,14))\nimg_number = 17\n\nOriginal_Img = X_TRAIN[img_number]\nPredict_Mask = Prediction_NON_SEEN[0]\n\naxis[0].imshow(Original_Img)\naxis[0].set_xlabel(Original_Img.shape)\naxis[0].set_ylabel(Original_Img.size)\naxis[0].set_title(\"IMAGE\")\naxis[1].imshow(Predict_Mask,cmap=\"jet\")\naxis[1].set_xlabel(Predict_Mask.shape)\naxis[1].set_ylabel(Predict_Mask.size)\naxis[1].set_title(\"PREDICTION\")","3a22aeaf":"# PATH PROCESS","75e7b5cd":"# checking","8a82b0f8":"# reading process","c3b60bd2":"# MODEL","dfece116":"# To Array","0118e8b5":"# EXAMPLE VISION"}}