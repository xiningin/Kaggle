{"cell_type":{"e34f9fdc":"code","4c25f014":"code","f5af49a5":"code","c9d27985":"code","515dac16":"code","4ac0742b":"code","aa55bc6b":"code","37945e76":"code","e6b6fa96":"code","cd29bb6a":"code","c4fa02eb":"code","eddbe2cc":"code","e6cc7348":"code","11c79241":"code","2730c1da":"code","cd1d80ef":"code","ee38fc75":"code","50af60c6":"code","66a4bd5d":"code","e3bc0bbf":"code","f91ca354":"code","5ac76c1c":"code","440ddcf3":"code","4d14f2a6":"code","93805e36":"code","7bce6423":"code","2ec5e5c2":"code","f6d1fcdb":"code","d1262e79":"code","54ff238c":"code","1815cbfd":"code","90967199":"code","fae3e3cb":"code","88f7325d":"code","037d4284":"code","06813e91":"code","ec6a9451":"code","d1712d45":"code","947cbefb":"code","a1cd255e":"code","a52e6e21":"code","4b7e7b73":"code","2673179f":"code","8187dde3":"code","cb12b64f":"code","262a7c6b":"code","d0d10160":"markdown","780dc39b":"markdown","5d3db1ba":"markdown","0b428f88":"markdown","4970d385":"markdown","2a614696":"markdown","aae12a72":"markdown","74c8187b":"markdown","c7654c35":"markdown","4d6a2c95":"markdown","df3bcea6":"markdown","d6e7d19d":"markdown","6f8c2bfc":"markdown","6a6a6997":"markdown","8d1a4b43":"markdown","743e3cf3":"markdown","728933c1":"markdown","2d1bb07e":"markdown","d3f74896":"markdown","d3939955":"markdown","d0c117e6":"markdown","1af08936":"markdown","80622077":"markdown","d5dc8049":"markdown","2b966411":"markdown","b92ab381":"markdown","374e84aa":"markdown","ebd05262":"markdown","1067e7a0":"markdown","51be3073":"markdown","f55e8136":"markdown","4b0ef881":"markdown","00e32d9a":"markdown","7d7bd582":"markdown","b7652a8f":"markdown","49726cdc":"markdown","71ae6e16":"markdown","99615a08":"markdown","ceae4370":"markdown","f82f9d24":"markdown","c8d2540f":"markdown","cf4b2884":"markdown","727717ca":"markdown","bdc18c0b":"markdown","3405c782":"markdown"},"source":{"e34f9fdc":"# --- CSS STYLE ---\nfrom IPython.core.display import HTML\ndef css_styling():\n    styles = open(\"..\/input\/competiongoal\/archive\/alerts.css\", \"r\").read()\n    return HTML(\"<style>\"+styles+\"<\/style>\")\ncss_styling()","4c25f014":"import pandas as pd\nimport numpy as np\n\ntrain = pd.read_csv('..\/input\/commonlitreadabilityprize\/train.csv')\ntest = pd.read_csv('..\/input\/commonlitreadabilityprize\/test.csv')\nsub = pd.read_csv('..\/input\/commonlitreadabilityprize\/sample_submission.csv')","f5af49a5":"train.head()","c9d27985":"test.head()","515dac16":"sub.head()","4ac0742b":"%matplotlib inline\nfrom glob import glob\nimport os\nimport matplotlib.pyplot as plt\nimport json\nfrom collections import defaultdict\nimport gc\ngc.enable()","aa55bc6b":"import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\nfrom torch.optim.optimizer import Optimizer\nimport torch.optim.lr_scheduler as lr_scheduler\nfrom torch.utils.data import (\n    Dataset, DataLoader, \n    SequentialSampler, RandomSampler\n)\nfrom transformers import RobertaConfig\nfrom transformers import (\n    get_cosine_schedule_with_warmup, \n    get_cosine_with_hard_restarts_schedule_with_warmup\n)\nfrom transformers import RobertaTokenizer\nfrom transformers import RobertaModel\nfrom IPython.display import clear_output\nfrom tqdm import tqdm, trange","37945e76":"def convert_examples_to_features(data, tokenizer, max_len, is_test=False):\n    data = data.replace('\\n', '')\n    tok = tokenizer.encode_plus(\n        data, \n        max_length=max_len, \n        truncation=True,\n        return_attention_mask=True,\n        return_token_type_ids=True\n    )\n    curr_sent = {}\n    padding_length = max_len - len(tok['input_ids'])\n    curr_sent['input_ids'] = tok['input_ids'] + ([0] * padding_length)\n    curr_sent['token_type_ids'] = tok['token_type_ids'] + \\\n        ([0] * padding_length)\n    curr_sent['attention_mask'] = tok['attention_mask'] + \\\n        ([0] * padding_length)\n    return curr_sent","e6b6fa96":"data = test.excerpt.replace('\\n', '')\ndata","cd29bb6a":"model_name = '..\/input\/roberta-base\/'\ntokenizer = RobertaTokenizer.from_pretrained(model_name)\ntokenizer","c4fa02eb":"class DatasetRetriever(Dataset):\n    def __init__(self, data, tokenizer, max_len, is_test=False):\n        self.data = data\n        self.excerpts = self.data.excerpt.values.tolist()\n        self.tokenizer = tokenizer\n        self.is_test = is_test\n        self.max_len = max_len\n    \n    def __len__(self):\n        return len(self.data)\n    \n    def __getitem__(self, item):\n        if not self.is_test:\n            excerpt, label = self.excerpts[item], self.targets[item]\n            features = convert_examples_to_features(\n                excerpt, self.tokenizer, \n                self.max_len, self.is_test\n            )\n            return {\n                'input_ids':torch.tensor(features['input_ids'], dtype=torch.long),\n                'token_type_ids':torch.tensor(features['token_type_ids'], dtype=torch.long),\n                'attention_mask':torch.tensor(features['attention_mask'], dtype=torch.long),\n                'label':torch.tensor(label, dtype=torch.double),\n            }\n        else:\n            excerpt = self.excerpts[item]\n            features = convert_examples_to_features(\n                excerpt, self.tokenizer, \n                self.max_len, self.is_test\n            )\n            return {\n                'input_ids':torch.tensor(features['input_ids'], dtype=torch.long),\n                'token_type_ids':torch.tensor(features['token_type_ids'], dtype=torch.long),\n                'attention_mask':torch.tensor(features['attention_mask'], dtype=torch.long),\n            }","eddbe2cc":"train.head(2)","e6cc7348":"item=0\nexcerpt, label = train.excerpt[item], train.target[item]\nexcerpt","11c79241":"label","2730c1da":"            max_len = 250        \n            features = convert_examples_to_features(\n                excerpt, tokenizer, \n                max_len, test)\n            features['input_ids'][:10]","cd1d80ef":"features['token_type_ids'][:10]","ee38fc75":"features['attention_mask'][:10]","50af60c6":"class CommonLitModel(nn.Module):\n    def __init__(\n        self, \n        model_name, \n        config,  \n        multisample_dropout=False,\n        output_hidden_states=False\n    ):\n        super(CommonLitModel, self).__init__()\n        self.config = config\n        self.roberta = RobertaModel.from_pretrained(\n            model_name, \n            output_hidden_states=output_hidden_states\n        )\n        self.layer_norm = nn.LayerNorm(config.hidden_size)\n        if multisample_dropout:\n            self.dropouts = nn.ModuleList([\n                nn.Dropout(0.5) for _ in range(5)\n            ])\n        else:\n            self.dropouts = nn.ModuleList([nn.Dropout(0.3)])\n        self.regressor = nn.Linear(config.hidden_size, 1)\n        self._init_weights(self.layer_norm)\n        self._init_weights(self.regressor)\n \n    def _init_weights(self, module):\n        if isinstance(module, nn.Linear):\n            module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\n            if module.bias is not None:\n                module.bias.data.zero_()\n        elif isinstance(module, nn.Embedding):\n            module.weight.data.normal_(mean=0.0, std=self.config.initializer_range)\n            if module.padding_idx is not None:\n                module.weight.data[module.padding_idx].zero_()\n        elif isinstance(module, nn.LayerNorm):\n            module.bias.data.zero_()\n            module.weight.data.fill_(1.0)\n \n    def forward(\n        self, \n        input_ids=None,\n        attention_mask=None,\n        token_type_ids=None,\n        labels=None\n    ):\n        outputs = self.roberta(\n            input_ids,\n            attention_mask=attention_mask,\n            token_type_ids=token_type_ids,\n        )\n        sequence_output = outputs[1]\n        sequence_output = self.layer_norm(sequence_output)\n \n        # multi-sample dropout\n        for i, dropout in enumerate(self.dropouts):\n            if i == 0:\n                logits = self.regressor(dropout(sequence_output))\n            else:\n                logits += self.regressor(dropout(sequence_output))\n        \n        logits \/= len(self.dropouts)\n \n        # calculate loss\n        loss = None\n        if labels is not None:\n            loss_fn = torch.nn.MSELoss()\n            logits = logits.view(-1).to(labels.dtype)\n            loss = torch.sqrt(loss_fn(logits, labels.view(-1)))\n        \n        output = (logits,) + outputs[1:]\n        return ((loss,) + output) if loss is not None else output","66a4bd5d":"def make_model(model_name, num_labels=1):\n    tokenizer = RobertaTokenizer.from_pretrained(model_name)\n    config = RobertaConfig.from_pretrained(model_name)\n    config.update({'num_labels':num_labels})\n    model = CommonLitModel(model_name, config=config)\n    return model, tokenizer\n\ndef make_loader(\n    data, \n    tokenizer, \n    max_len,\n    batch_size,\n):\n    \n    test_dataset = DatasetRetriever(data, tokenizer, max_len, is_test=True)\n    test_sampler = SequentialSampler(test_dataset)\n    test_loader = DataLoader(\n        test_dataset, \n        batch_size=batch_size \/\/ 2, \n        sampler=test_sampler, \n        pin_memory=False, \n        drop_last=False, \n        num_workers=0\n    )\n\n    return test_loader","e3bc0bbf":"    model, tokenizer = make_model(\n        model_name=model_name, \n        num_labels=1\n    )","f91ca354":"tokenizer","5ac76c1c":"max_len = 250\nbatch_size = 8\ntest_dataset = DatasetRetriever(test, tokenizer, max_len, is_test=True)\ntest_dataset","440ddcf3":"test_sampler = SequentialSampler(test_dataset)\ntest_sampler","4d14f2a6":"test_loader = DataLoader(\n        test_dataset, \n        batch_size=batch_size \/\/ 2, \n        sampler=test_sampler, \n        pin_memory=False, \n        drop_last=False, \n        num_workers=0\n    )\ntest_loader","93805e36":"config = RobertaConfig.from_pretrained(model_name)\nconfig","7bce6423":"###\u306a\u306b\u304c\u3044\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u3000\nnum_labels=1\nconfig.update({'num_labels':num_labels}) \nconfig","2ec5e5c2":"model = CommonLitModel(model_name, config=config)","f6d1fcdb":"from transformers import RobertaModel\noutput_hidden_states=False\nroberta =RobertaModel.from_pretrained(\n            model_name, \n            output_hidden_states=output_hidden_states\n        )\n#roberta","d1262e79":"class Evaluator:\n    def __init__(self, model, scalar=None):\n        self.model = model\n        self.scalar = scalar\n\n    def evaluate(self, data_loader, tokenizer):\n        preds = []\n        self.model.eval()\n        total_loss = 0\n        with torch.no_grad():\n            for batch_idx, batch_data in enumerate(data_loader):\n                input_ids, attention_mask, token_type_ids = batch_data['input_ids'], \\\n                    batch_data['attention_mask'], batch_data['token_type_ids']\n                input_ids, attention_mask, token_type_ids = input_ids.cuda(), \\\n                    attention_mask.cuda(), token_type_ids.cuda()\n                \n                if self.scalar is not None:\n                    with torch.cuda.amp.autocast():\n                        outputs = self.model(\n                            input_ids=input_ids,\n                            attention_mask=attention_mask,\n                            token_type_ids=token_type_ids\n                        )\n                else:\n                    outputs = self.model(\n                        input_ids=input_ids,\n                        attention_mask=attention_mask,\n                        token_type_ids=token_type_ids\n                    )\n                \n                logits = outputs[0].detach().cpu().numpy().squeeze().tolist()\n                preds += logits\n        return preds","54ff238c":"for batch_idx, batch_data in enumerate(test_loader):\n    input_ids, attention_mask, token_type_ids = batch_data['input_ids'], \\\n                    batch_data['attention_mask'], batch_data['token_type_ids']\n    input_ids, attention_mask, token_type_ids = input_ids.cuda(), \\\n                    attention_mask.cuda(), token_type_ids.cuda()\n                ","1815cbfd":"input_ids[0]","90967199":"attention_mask[0]","fae3e3cb":"token_type_ids[0]","88f7325d":" input_ids.cuda()[0]","037d4284":"#outputs = roberta(\u3000\u4e0d\u660e\u7b87\u6240\n##            input_ids,\n#            attention_mask=attention_mask,\n#            token_type_ids=token_type_ids,\n#        )","06813e91":" def config(fold, model_name, load_model_path):\n    torch.manual_seed(2021)\n    torch.cuda.manual_seed(2021)\n    torch.cuda.manual_seed_all(2021)\n    \n    max_len = 250\n    batch_size = 8\n\n    model, tokenizer = make_model(\n        model_name=model_name, \n        num_labels=1\n    )\n    model.load_state_dict(\n        torch.load(f'{load_model_path}\/model{fold}.bin')\n    )\n    test_loader = make_loader(\n        test, tokenizer, max_len=max_len,\n        batch_size=batch_size\n    )\n\n    if torch.cuda.device_count() >= 1:\n        print('Model pushed to {} GPU(s), type {}.'.format(\n            torch.cuda.device_count(), \n            torch.cuda.get_device_name(0))\n        )\n        model = model.cuda() \n    else:\n        raise ValueError('CPU training is not supported')\n\n    # scaler = torch.cuda.amp.GradScaler()\n    scaler = None\n    return (\n        model, tokenizer, \n        test_loader, scaler\n    )","ec6a9451":"torch.cuda.device_count() ","d1712d45":"    max_len = 250 \n    batch_size = 8\n    test_loader = make_loader(\n        test, tokenizer, max_len=max_len,\n        batch_size=batch_size\n    )","947cbefb":"test_loader","a1cd255e":"def run(fold=0, model_name=None, load_model_path=None):\n    model, tokenizer, \\\n        test_loader, scaler = config(fold, model_name, load_model_path)\n    \n    import time\n\n    evaluator = Evaluator(model, scaler)\n\n    test_time_list = []\n\n    torch.cuda.synchronize()\n    tic1 = time.time()\n\n    preds = evaluator.evaluate(test_loader, tokenizer)\n\n    torch.cuda.synchronize()\n    tic2 = time.time() \n    test_time_list.append(tic2 - tic1)\n    \n    del model, tokenizer, test_loader, scaler\n    gc.collect()\n    torch.cuda.empty_cache()\n    \n    return preds","a52e6e21":"    model, tokenizer, \\\n        test_loader, scaler = config(fold=1, model_name='..\/input\/roberta-base\/', load_model_path='..\/input\/commonlit-roberta-base-i\/')","4b7e7b73":"tokenizer","2673179f":"%%time\npred_df1 = pd.DataFrame()\npred_df2 = pd.DataFrame()\npred_df3 = pd.DataFrame()\nfor fold in tqdm(range(5)):\n    pred_df1[f'fold{fold}'] = run(fold, '..\/input\/roberta-base\/', '..\/input\/commonlit-roberta-base-i\/')\n    pred_df2[f'fold{fold+5}'] = run(fold, '..\/input\/robertalarge\/', '..\/input\/roberta-large-itptfit\/')\n    pred_df3[f'fold{fold+10}'] = run(fold, '..\/input\/robertalarge\/', '..\/input\/commonlit-roberta-large-ii\/')","8187dde3":"sub = pd.read_csv('..\/input\/commonlitreadabilityprize\/sample_submission.csv')\n# sub['target'] = ((pred_df1.mean(axis=1) + pred_df2.mean(axis=1) + pred_df3.mean(axis=1))\/3).values.tolist()\n#sub['target'] = (pred_df2.mean(axis=1)*0.5) + (pred_df1.mean(axis=1)*0.3) + (pred_df3.mean(axis=1) * 0.2).values.tolist()\n#sub['target'] = (pred_df2.mean(axis=1)*0.3) + (pred_df1.mean(axis=1)*0.3) + (pred_df3.mean(axis=1) * 0.4).values.tolist() #0.469\n#sub['target'] = (pred_df2.mean(axis=1)*0.5) + (pred_df1.mean(axis=1)*0.1) + (pred_df3.mean(axis=1) * 0.4).values.tolist() #0.470\nsub['target'] = (pred_df2.mean(axis=1)*0.4) + (pred_df1.mean(axis=1)*0.1) + (pred_df3.mean(axis=1) * 0.5).values.tolist()\nsub.to_csv('submission.csv', index=False)","cb12b64f":"# sub = pd.read_csv('..\/input\/commonlitreadabilityprize\/sample_submission.csv')\n# sub['target'] = pred_df.mean(axis=1).values.tolist()\n# sub.to_csv('submission.csv', index=False)","262a7c6b":"sub","d0d10160":"# \u5b9f\u9a13","780dc39b":"### bert\u306b\u3088\u308a\u5358\u8a9e\u304c\u6570\u5024\u5316\u3055\u308c\u3066\u3044\u308b\u3002","5d3db1ba":"### \u76ee\u7684\u95a2\u6570\u306f\u3053\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u307f\u3002standard_error\u306f\u4e88\u60f3\u3057\u306a\u3044\u3002","0b428f88":"\u4e88\u5b9a\u66f8\u3044\u3066\u304a\u304b\u306a\u3044\u3068\u5fd8\u308c\u3066\u3057\u307e\u3046\u3002\u3042\u3068\u3001\uff11\u30ab\u6708\u3050\u3089\u3044\u3042\u308b\u304b\u3089\u304c\u3093\u3070\u3089\u306a\u3044\u3068\u3002\u30aa\u30ea\u30b8\u30ca\u30eb\u306a\u3082\u306e\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u3051\u3069\u96e3\u3057\u3044\u3002","4970d385":"### Model","2a614696":"### \ud83d\udccc\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9","aae12a72":"> RoBERTa\u30e2\u30c7\u30eb\u306fRoBERTa\u3067\u63d0\u6848\u3055\u308c\u307e\u3057\u305f\uff1aYinhan Liu\u3001Myle Ott\u3001Naman Goyal\u3001Jingfei Du\u3001Mandar Joshi\u3001Danqi Chen\u3001Omer Levy\u3001Mike Lewis\u3001Luke Zettlemoyer\u3001VeselinStoyanov\u306b\u3088\u308b\u5805\u7262\u306b\u6700\u9069\u5316\u3055\u308c\u305fBERT\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30a2\u30d7\u30ed\u30fc\u30c1\u3002\u3053\u308c\u306f\u30012018\u5e74\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fGoogle\u306eBERT\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\n> \n> \u3053\u308c\u306fBERT\u306b\u57fa\u3065\u3044\u3066\u69cb\u7bc9\u3055\u308c\u3001\u4e3b\u8981\u306a\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u3001\u6b21\u306e\u6587\u306e\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u76ee\u7684\u3092\u524a\u9664\u3057\u3001\u306f\u308b\u304b\u306b\u5927\u304d\u306a\u30df\u30cb\u30d0\u30c3\u30c1\u3068\u5b66\u7fd2\u7387\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u307e\u3059\u3002\n> \n> \u8ad6\u6587\u306e\u8981\u7d04\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n> \n> \u8a00\u8a9e\u30e2\u30c7\u30eb\u306e\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u3088\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5927\u5e45\u306b\u5411\u4e0a\u3057\u307e\u3057\u305f\u304c\u3001\u7570\u306a\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u6ce8\u610f\u6df1\u304f\u6bd4\u8f03\u3059\u308b\u3053\u3068\u306f\u56f0\u96e3\u3067\u3059\u3002\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306f\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3001\u3055\u307e\u3056\u307e\u306a\u30b5\u30a4\u30ba\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u884c\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u304f\u3001\u5f8c\u3067\u8aac\u660e\u3059\u308b\u3088\u3046\u306b\u3001\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u9078\u629e\u306f\u6700\u7d42\u7d50\u679c\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3059\u3002\u591a\u304f\u306e\u4e3b\u8981\u306a\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u306e\u5f71\u97ff\u3092\u6ce8\u610f\u6df1\u304f\u6e2c\u5b9a\u3059\u308bBERT\u4e8b\u524d\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\uff08Devlin et al\u3002\u30012019\uff09\u306e\u8907\u88fd\u7814\u7a76\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 BERT\u306f\u5927\u5e45\u306b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4e0d\u8db3\u3067\u3042\u308a\u3001\u305d\u306e\u5f8c\u306b\u516c\u958b\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30e2\u30c7\u30eb\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5339\u6575\u3059\u308b\u304b\u3001\u305d\u308c\u3092\u8d85\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u79c1\u305f\u3061\u306e\u6700\u9ad8\u306e\u30e2\u30c7\u30eb\u306f\u3001GLUE\u3001RACE\u3001SQuAD\u3067\u6700\u5148\u7aef\u306e\u7d50\u679c\u3092\u9054\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u7d50\u679c\u306f\u3001\u4ee5\u524d\u306f\u898b\u904e\u3054\u3055\u308c\u3066\u3044\u305f\u8a2d\u8a08\u306e\u9078\u629e\u306e\u91cd\u8981\u6027\u3092\u6d6e\u304d\u5f6b\u308a\u306b\u3057\u3001\u6700\u8fd1\u5831\u544a\u3055\u308c\u305f\u6539\u5584\u306e\u539f\u56e0\u306b\u3064\u3044\u3066\u7591\u554f\u3092\u6295\u3052\u304b\u3051\u3066\u3044\u307e\u3059\u3002\u30e2\u30c7\u30eb\u3068\u30b3\u30fc\u30c9\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3059\u3002","74c8187b":"# \u4e88\u6e2c","c7654c35":"GPU\u306f\uff11\u500b\u3057\u304b\u306a\u3044\u3068\u601d\u3046","4d6a2c95":"### \ud83d\udcccImport ","df3bcea6":"### \u4e8b\u524d\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b","d6e7d19d":"![image.png](attachment:99b204e3-bb1b-4161-ba3a-6399f720b999.png)","6f8c2bfc":"![image.png](attachment:c04d0b07-712b-4d30-954a-490a6f2261cd.png)","6a6a6997":"## \u7d50\u69cb\u3044\u3058\u308a\u307e\u3057\u305f\u304c\u3001\u7d50\u5c40\u3044\u3044\u30d1\u30e9\u30e1\u30bf\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002","8d1a4b43":"### standard_error \u5404\u629c\u7c8b\u306e\u8907\u6570\u306e\u8a55\u4fa1\u8005\u9593\u306e\u30b9\u30b3\u30a2\u306e\u5e83\u304c\u308a\u306e\u5c3a\u5ea6\u3002 \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3002","743e3cf3":"### \ud83d\udccc\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8","728933c1":"### Run","2d1bb07e":"https:\/\/huggingface.co\/transformers\/model_doc\/roberta.html","d3f74896":"# RobertaTokenizer","d3939955":"![image.png](attachment:ee17a0bc-ab5d-4a7e-8f4f-31d94e0a83a5.png)","d0c117e6":"> \ud83d\udccc\u30b3\u30f3\u30da\u306b\u52dd\u3064\u306b\u306f\u3044\u308d\u3093\u306a\u4eba\u306e\u30b3\u30fc\u30c9\u3068\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u3092\u8aad\u3080\u3053\u3068\u3060\u305d\u3046\u3067\u3059\u3002\u306a\u306e\u3067\u3001\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u30e1\u30e2\u3068\u3057\u3066\u91cd\u8981\u305d\u3046\u306a\u3082\u306e\u3092\u6b8b\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002<br>\n>      \u3053\u308c\u306f\u65e5\u672c\u306e\u521d\u5fc3\u8005\u306e\u305f\u3081\u306e\u3001\u65e5\u672c\u306e\u521d\u5fc3\u8005\u306b\u3088\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\u82f1\u6587\u3070\u304b\u308a\u3067\u3001\u3081\u3052\u307e\u3057\u305f\u3002","1af08936":"### if you can't read Japanese language you have to watch this.\nhttps:\/\/www.kaggle.com\/rhtsingh\/commonlit-readability-prize-roberta-torch-infer-3 t","80622077":"# August 2, 2021 - Final Submission Deadline.","d5dc8049":"### \u5909\u6570\u306e\u4e2d\u8eab\u3092\u307f\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3002","2b966411":"> \u6a5f\u68b0\u5b66\u7fd2\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u4e00\u7bc0\u306e\u9069\u5207\u306a\u8aad\u89e3\u30ec\u30d9\u30eb\u3092\u8b58\u5225\u3057\u3001\u5b66\u7fd2\u3092\u523a\u6fc0\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u304b\uff1f\u8aad\u66f8\u306f\u5b66\u696d\u306e\u6210\u529f\u306b\u6b20\u304b\u305b\u306a\u3044\u30b9\u30ad\u30eb\u3067\u3059\u3002\u5b66\u751f\u304c\u9069\u5207\u306a\u30ec\u30d9\u30eb\u306e\u6311\u6226\u3092\u63d0\u4f9b\u3059\u308b\u9b45\u529b\u7684\u306a\u30d1\u30c3\u30bb\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3068\u304d\u3001\u5f7c\u3089\u306f\u81ea\u7136\u306b\u8aad\u66f8\u30b9\u30ad\u30eb\u3092\u767a\u9054\u3055\u305b\u307e\u3059\u3002\n> \n> \u73fe\u5728\u3001\u307b\u3068\u3093\u3069\u306e\u6559\u80b2\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u5f93\u6765\u306e\u8aad\u307f\u3084\u3059\u3055\u306e\u65b9\u6cd5\u307e\u305f\u306f\u5e02\u8ca9\u306e\u516c\u5f0f\u3092\u4f7f\u7528\u3057\u3066\u8aad\u8005\u3068\u7167\u5408\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u308c\u305e\u308c\u306b\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002 Flesch-Kincaid Grade Level\u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30c7\u30b3\u30fc\u30c9\u306e\u5f31\u3044\u30d7\u30ed\u30ad\u30b7\uff08\u3064\u307e\u308a\u3001\u5358\u8a9e\u3054\u3068\u306e\u6587\u5b57\u307e\u305f\u306f\u97f3\u7bc0\uff09\u3068\u69cb\u6587\u306e\u8907\u96d1\u3055\uff08\u3064\u307e\u308a\u3001\u6587\u3054\u3068\u306e\u6570\u307e\u305f\u306f\u5358\u8a9e\uff09\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u305d\u308c\u3089\u306f\u69cb\u6210\u6982\u5ff5\u3068\u7406\u8ad6\u7684\u59a5\u5f53\u6027\u3092\u6b20\u3044\u3066\u3044\u307e\u3059\u3002\u540c\u6642\u306b\u3001Lexile\u306a\u3069\u306e\u5e02\u8ca9\u306e\u6570\u5f0f\u306f\u3001\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3001\u9069\u5207\u306a\u691c\u8a3c\u7814\u7a76\u304c\u4e0d\u8db3\u3057\u3066\u304a\u308a\u3001\u6570\u5f0f\u306e\u6a5f\u80fd\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u900f\u660e\u6027\u306e\u554f\u984c\u306b\u60a9\u307e\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n> \n> CommonLit\u3001Inc\u3002\u306f\u30012,000\u4e07\u4eba\u3092\u8d85\u3048\u308b\u6559\u5e2b\u3068\u751f\u5f92\u306b\u30013\u5e74\u751f\u304b\u308912\u5e74\u751f\u307e\u3067\u306e\u7121\u6599\u306e\u30c7\u30b8\u30bf\u30eb\u8aad\u307f\u66f8\u304d\u30ec\u30c3\u30b9\u30f3\u3092\u63d0\u4f9b\u3059\u308b\u975e\u55b6\u5229\u306e\u6559\u80b2\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u7d44\u7e54\u3067\u3059\u3002\u30a2\u30c8\u30e9\u30f3\u30bf\u306b\u3042\u308bR1\u516c\u7acb\u7814\u7a76\u5927\u5b66\u3067\u3042\u308b\u30b8\u30e7\u30fc\u30b8\u30a2\u5dde\u7acb\u5927\u5b66\u3068\u5354\u529b\u3057\u3066\u3001\u5f7c\u3089\u306f\u53ef\u8aad\u6027\u306e\u8a55\u4fa1\u65b9\u6cd5\u3092\u6539\u5584\u3059\u308b\u3088\u3046\u306b\u30ab\u30b0\u30e9\u30fc\u306b\u6311\u6226\u3057\u3066\u3044\u307e\u3059\u3002\n> \n> \u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306f\u30013\u5e74\u751f\u304b\u308912\u5e74\u751f\u306e\u6559\u5ba4\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u6587\u7ae0\u3092\u8aad\u3080\u3053\u3068\u306e\u8907\u96d1\u3055\u3092\u8a55\u4fa1\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30b9\u30ad\u30eb\u3092\u3001\u3055\u307e\u3056\u307e\u306a\u5e74\u9f62\u5c64\u306e\u8aad\u8005\u3068\u3055\u307e\u3056\u307e\u306a\u30c9\u30e1\u30a4\u30f3\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u306e\u5927\u898f\u6a21\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u542b\u3080\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u7d44\u307f\u5408\u308f\u305b\u307e\u3059\u3002\u53d7\u8cde\u30e2\u30c7\u30eb\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u307e\u3068\u307e\u308a\u3068\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u304c\u5fc5\u305a\u7d44\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n> \n> \u6210\u529f\u3057\u305f\u5834\u5408\u306f\u3001\u7ba1\u7406\u8005\u3001\u6559\u5e2b\u3001\u751f\u5f92\u3092\u652f\u63f4\u3057\u307e\u3059\u3002\u30d1\u30c3\u30bb\u30fc\u30b8\u3092\u9078\u629e\u3059\u308b\u30ea\u30c6\u30e9\u30b7\u30fc\u30ab\u30ea\u30ad\u30e5\u30e9\u30e0\u306e\u958b\u767a\u8005\u3068\u6559\u5e2b\u306f\u3001\u6559\u5ba4\u306e\u4f5c\u54c1\u3092\u8fc5\u901f\u304b\u3064\u6b63\u78ba\u306b\u8a55\u4fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u3053\u308c\u3089\u306e\u6570\u5f0f\u306f\u3059\u3079\u3066\u306e\u4eba\u306b\u3068\u3063\u3066\u3088\u308a\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u6700\u3082\u91cd\u8981\u306a\u3053\u3068\u306f\u3001\u751f\u5f92\u306f\u81ea\u5206\u306e\u4ed5\u4e8b\u306e\u8907\u96d1\u3055\u3068\u8aad\u307f\u3084\u3059\u3055\u306b\u95a2\u3059\u308b\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u306e\u6069\u6075\u3092\u53d7\u3051\u3001\u672c\u8cea\u7684\u306a\u8aad\u89e3\u529b\u306e\u5411\u4e0a\u3092\u306f\u308b\u304b\u306b\u5bb9\u6613\u306b\u3059\u308b\u3053\u3068\u3067\u3059\u3002","b92ab381":"![image.png](attachment:ddb87ffc-7f40-49f1-92e6-a037f53330cb.png)","374e84aa":"### \u7121\u99c4\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u8db3\u63bb\u3044\u3066\u307f\u308b\u3002","ebd05262":"https:\/\/www.kaggle.com\/rhtsingh\/commonlit-readability-prize-roberta-torch-infer-3 thank you your codes.","1067e7a0":"### tokenizer\u306e\u4e8b\u524d\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b","51be3073":"### \ud83d\udcccConvert Examples `(Excerpt)` to Features","f55e8136":"### \ud83d\udccc\u8a55\u4fa1","4b0ef881":"### \u3053\u3053\u3067max_len\u3088\u308a\u77ed\u3044\u5834\u5408\u306b\u306f\u3001padding\u3092\u5165\u308c\u3066\u3044\u308b\u3002","00e32d9a":"### \u5358\u7d14\u306b\u6539\u884c\u30b3\u30fc\u30c9\u3092\u524a\u9664","7d7bd582":"> \u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306f\u3001\u6587\u5b66\u304b\u3089\u306e\u629c\u7c8b\u306e\u8aad\u307f\u3084\u3059\u3055\u3092\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002 \u3044\u304f\u3064\u304b\u306e\u671f\u9593\u304b\u3089\u306e\u629c\u7c8b\u3068\u5e45\u5e83\u3044\u8aad\u307f\u3084\u3059\u3055\u306e\u30b9\u30b3\u30a2\u3092\u63d0\u4f9b\u3057\u307e\u3057\u305f\u3002 \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30bb\u30c3\u30c8\u3088\u308a\u3082\u308f\u305a\u304b\u306b\u591a\u3044\u5272\u5408\u306e\u6700\u65b0\u306e\u30c6\u30ad\u30b9\u30c8\uff08\u4e00\u822c\u5316\u3057\u305f\u3044\u30c6\u30ad\u30b9\u30c8\u306e\u30bf\u30a4\u30d7\uff09\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n> \n> \u307e\u305f\u3001\u30d1\u30d6\u30ea\u30c3\u30af\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u60c5\u5831\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\uff08\u95a2\u9023\u3059\u308b\u629c\u7c8b\u304c\u8868\u793a\/\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\uff09\u3001\u975e\u8868\u793a\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306b\u306f\u7a7a\u767d\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\/\u6cd5\u7684\u60c5\u5831\u306e\u307f\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002","b7652a8f":"#  \u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u30e1\u30e2\u3000\u307b\u307c\u8b0e\n\u30fb\u73fe\u5728\u3001\u307b\u3068\u3093\u3069\u306e\u6559\u80b2\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u5f93\u6765\u306e\u8aad\u307f\u3084\u3059\u3055\u306e\u65b9\u6cd5\u307e\u305f\u306f\u5e02\u8ca9\u306e\u516c\u5f0f\u3092\u4f7f\u7528\u3057\u3066\u8aad\u8005\u3068\u7167\u5408\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305f\u3060\u3057\u3001\u305d\u308c\u305e\u308c\u306b\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002 Flesch-Kincaid Grade Level\u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30c7\u30b3\u30fc\u30c9\u306e\u5f31\u3044\u30d7\u30ed\u30ad\u30b7\uff08\u3064\u307e\u308a\u3001\u5358\u8a9e\u3054\u3068\u306e\u6587\u5b57\u307e\u305f\u306f\u97f3\u7bc0\uff09\u3068\u69cb\u6587\u306e\u8907\u96d1\u3055\uff08\u3064\u307e\u308a\u3001\u6587\u3054\u3068\u306e\u6570\u307e\u305f\u306f\u5358\u8a9e\uff09\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002 \u7d50\u679c\u3068\u3057\u3066\u3001\u305d\u308c\u3089\u306f\u69cb\u6210\u6982\u5ff5\u3068\u7406\u8ad6\u7684\u59a5\u5f53\u6027\u3092\u6b20\u3044\u3066\u3044\u307e\u3059\u3002 \u540c\u6642\u306b\u3001Lexile\u306a\u3069\u306e\u5e02\u8ca9\u306e\u6570\u5f0f\u306f\u3001\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3001\u9069\u5207\u306a\u691c\u8a3c\u7814\u7a76\u304c\u4e0d\u8db3\u3057\u3066\u304a\u308a\u3001\u6570\u5f0f\u306e\u6a5f\u80fd\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u900f\u660e\u6027\u306e\u554f\u984c\u306b\u60a9\u307e\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u30fb\u53c2\u52a0\u8005\u306f\u307e\u305f\u30012\u3064\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u3069\u3061\u3089\u304c\u7406\u89e3\u3057\u3084\u3059\u3044\u304b\uff08\u3064\u307e\u308a\u3001\u7406\u89e3\uff09\u30012\u3064\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u3069\u3061\u3089\u304c\u3088\u308a\u901f\u304f\u8aad\u3093\u3060\u304b\uff08\u3064\u307e\u308a\u3001\u53c2\u52a0\u8005\u304c\u30c6\u30ad\u30b9\u30c8\u3092\u8aad\u3080\u306e\u306b\u3069\u308c\u3060\u3051\u306e\u51e6\u7406\u52aa\u529b\u3092\u8cbb\u3084\u3057\u305f\u3068\u611f\u3058\u305f\u304b\uff09\u3092\u9078\u629e\u3059\u308b\u3088\u3046\u306b\u6c42\u3081\u3089\u308c\u307e\u3057\u305f\u3002 \u5f7c\u3089\u304c\u3088\u308a\u3088\u304f\u77e5\u3063\u3066\u3044\u305f2\u3064\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u3046\u3061\u3002 \u6700\u521d\u306e2\u3064\u306e\u6bd4\u8f03\u306f\u3001\u305d\u306e\u5f8c\u306e\u8aad\u307f\u3084\u3059\u3055\u306e\u5206\u6790\u3067\u4f7f\u7528\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3092\u5f62\u6210\u3057\u307e\u3057\u305f\u3002<br>\n\u30fb\u8aad\u307f\u3084\u3059\u3055\u306e\u30b9\u30b3\u30a2\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f\u7d20\u6674\u3089\u3057\u3044\u8cea\u554f\u3067\u3059\uff01 \u8aad\u307f\u3084\u3059\u3055\u306e\u30b9\u30b3\u30a2\u306f\u3001\u8ab0\u304b\u304c\u7279\u5b9a\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u8aad\u3080\u306e\u304c\u3069\u308c\u307b\u3069\u7c21\u5358\u304b\u3092\u793a\u3059\u6570\u5024\u3067\u3059\u3002<br>\n\u30fb\u300c\u4ed6\u306e\u591a\u304f\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306b\u306f\u3001\u6d3b\u7528\u3067\u304d\u308b\u512a\u308c\u305f\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u3042\u308a\u307e\u3059\u3002\u6295\u7968\u6570\u3068\u30d5\u30a9\u30fc\u30af\u6570\u304c\u5c11\u306a\u3044\u306e\u306b\u5f79\u7acb\u3064\u30b3\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5f79\u7acb\u3064\u30a2\u30a4\u30c7\u30a2\u3082\u3042\u308a\u307e\u3059\u3002\u73fe\u5728\u8003\u3048\u3066\u3044\u308b\u3082\u306e\u3068\u306f\u7570\u306a\u308b\u65b9\u6cd5\u3067\u8003\u3048\u308b\u306e\u306b\u5f79\u7acb\u3064\u30b3\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u304b\uff1f\u300d<br>\n\u30fb\u5805\u7262\u306a\u691c\u8a3c\u30bb\u30c3\u30c8\u306e\u69cb\u7bc9\u306b\u7126\u70b9\u3092\u5f53\u3066\u308b\uff1a\u91cd\u8981\u6027\u3092\u3053\u308c\u4ee5\u4e0a\u5f37\u8abf\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002 \u591a\u304f\u306e\u5834\u5408\u306b\u767a\u751f\u3059\u308b\u30b7\u30a7\u30a4\u30af\u30a2\u30c3\u30d7\u3068\u6226\u3046\u305f\u3081\u306b\u3001\u5805\u7262\u306a\u691c\u8a3c\u30bb\u30c3\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002 \u6700\u826f\u306e\u65b9\u6cd5\u306f\u3001\u7af6\u6280\u306e\u65e9\u3044\u6bb5\u968e\u3067\u30d5\u30a9\u30fc\u30eb\u30c9\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3089\u3092\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002<br>\n\u30fbAutoNLP\u306f\u3001Hugging Face\u306e\u65b0\u3057\u3044\uff08\u6709\u6599\uff09\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308a\u3001\u7279\u5b9a\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u6570\u767e\u306e\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3001\u30e2\u30c7\u30eb\u306e\u9078\u629e\u3001\u5fae\u8abf\u6574\u3001\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\uff08\u307e\u305f\u306f\u5c55\u958b\uff09\u306b\u3064\u3044\u3066\u5fc3\u914d\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 AutoNLP\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u3053\u3053\u3067\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff1ahttps\uff1a\/\/github.com\/huggingface\/autonlp<br>\n\u30fbAutoML\u304c\u3053\u3053\u3067\u3069\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3057\u3066\u3044\u308b\u304b\u3092\u5b8c\u5168\u306b\u628a\u63e1\u3059\u308b\u3053\u3068\u306f\u307e\u3060\u3067\u304d\u307e\u305b\u3093\u3002 \u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u69cb\u6210\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u308f\u304b\u308b\u9650\u308a\u3001RobertaForSequenceClassification\u3092\u4f7f\u7528\u3057\u3066\u304a\u308a\u3001\u30b5\u30a4\u30ba\u306f\u3001\u3059\u3079\u3066\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u6210\u3092\u5099\u3048\u305fRoberta-Base\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u540c\u3058\u3053\u3068\u3092\u624b\u52d5\u3067\u884c\u3046\u3068\u30015\u500d\u307e\u305f\u306f6\u500d\u306e\u540c\u3058\u30e2\u30c7\u30eb\u30670.52 + rmse\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002 \u305d\u308c\u3067\u3001\u79c1\u306e\u5834\u5408\u306b\u3088\u308a\u6709\u671b\u3067\u3042\u308b\u304c\u3001\u3042\u306a\u305f\u306e\u30b9\u30b3\u30a2\u306b\u306f\u307b\u3069\u9060\u3044\u306e\u3067\u3001\u79c1\u306fDeBERTa\u30d9\u30fc\u30b9\u306b\u5207\u308a\u66ff\u3048\u307e\u3057\u305f\u3002<br>\n\u30fbBERT\u306f\u3001\u4eca\u65e5\u3055\u307e\u3056\u307e\u306aNLP\u30bf\u30b9\u30af\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u5e83\u304f\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6700\u3082\u30db\u30c3\u30c8\u306a\u30e2\u30c7\u30eb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e1\u3064\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u306e\u6df1\u3044\u77e5\u8b58\u3092\u5f97\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u91cd\u8981\u3067\u3059\u3002 BERT\u306b\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u30d6\u30ed\u30b0\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u5b8c\u5168\u306a\u30e2\u30c7\u30eb\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e\u5b8c\u5168\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u306f\u975e\u5e38\u306b\u307e\u308c\u3067\u3059\u3002<br>\n\u30fb\u3053\u306e\u7af6\u4e89\u306f\u4e00\u898b\u7c21\u5358\u306b\u601d\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u79c1\u306e\u4fee\u58eb\u8ab2\u7a0b\u3067\u306f\u3001\u4eba\u9593\u306b\u3088\u3063\u3066\u4f5c\u6210\u304a\u3088\u3073\u8a55\u4fa1\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u3044\u304f\u3064\u304b\u306e\u5074\u9762\u3092\u7814\u7a76\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u901a\u5e38\u3001\u4e3b\u89b3\u7684\u306a\u65b9\u6cd5\u3067\u53ce\u96c6\u3055\u308c\u305f\u60c5\u5831\u3067\u3059\u3002<br>\n\u30fb\u7af6\u4e89\u306f\u53b3\u3057\u3044\u3067\u3059\u304c\u3001\u3042\u306a\u305f\u304c\u8a00\u53ca\u3057\u305f\u7406\u7531\u306e\u305f\u3081\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30e9\u30d9\u30eb\u306f\u78ba\u304b\u306b\u9a12\u3005\u3057\u3044\u3067\u3059\u304c\u3001\u3042\u306a\u305f\u306e\u30e2\u30c7\u30eb\u306f\u3068\u306b\u304b\u304f\u6700\u826f\u306e\u4e2d\u9593\u70b9\u3092\u898b\u3064\u3051\u308b\u306e\u306b\u304b\u306a\u308a\u512a\u308c\u3066\u3044\u307e\u3059\u3001\u305d\u3057\u3066\u305d\u308c\u304b\u3089\u554f\u984c\u5916\u306e\u30a2\u30f3\u30b5\u30f3\u30d6\u30eb\u306b\u305d\u308c\u3089\u306e\u6570\u5341\u304c\u3042\u308a\u307e\u3059\u3002\u7406\u7531\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u554f\u984c\u3068\u30e1\u30c8\u30ea\u30af\u30b9\u306e\u4e21\u65b9\u304c\u5358\u7d14\u3059\u304e\u3066\u3001\u30c7\u30fc\u30bf\u3092\u4efb\u610f\u306e\u30cf\u30b0\u30d5\u30a7\u30a4\u30b9\u30e2\u30c7\u30eb\u306b\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u3001\u3059\u3067\u306b\u9069\u5207\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u5de7\u5999\u306a\u30e2\u30c7\u30ea\u30f3\u30b0\u3084\u5f8c\u51e6\u7406\u306f\u5fc5\u8981\u306a\u304f\u3001\u53ef\u80fd\u6027\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u6a5f\u80fd\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306e\u5fc5\u8981\u6027\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u8208\u5473\u6df1\u3044\u90e8\u5206\u3067\u3059\u3002<br>\n\u3069\u306e\u3088\u3046\u306a\u6a5f\u80fd\u304c\u5fc5\u8981\u3067\u3059\u304b\uff1f \u305d\u308c\u306f\u3042\u306a\u305f\u306e\u5e73\u5747\u7684\u306a\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u304c\u305d\u308c\u81ea\u4f53\u3067\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3067\u3042\u308b\u306b\u9055\u3044\u3042\u308a\u307e\u305b\u3093\u3001\u305d\u3057\u3066\u79c1\u305f\u3061\u306f\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u304c\u4f55\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u304b\u672c\u5f53\u306b\u77e5\u308a\u307e\u305b\u3093\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u7a81\u7834\u53e3\u3092\u958b\u304f\u306b\u306f\u3001\u4e00\u6b69\u4e0b\u304c\u3063\u3066\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3092\u3055\u3089\u306b\u8abf\u3079\u3001\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306b\u4f55\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u304c\u52dd\u3064\u65b9\u6cd5\u3067\u3059\u3002<br>\n\u30fb\u76ee\u6a19\u5024\u306f\u3001\u629c\u7c8b\u9593\u306e111,000\u3092\u8d85\u3048\u308b\u30da\u30a2\u30ef\u30a4\u30ba\u6bd4\u8f03\u306eBradley-Terry\u5206\u6790\u306e\u7d50\u679c\u3067\u3059\u3002 \u3053\u308c\u3089\u306e\u6bd4\u8f03\u306e\u8a55\u4fa1\u8005\u306f\u30013\u5e74\u751f\u304b\u308912\u5e74\u751f\u307e\u3067\u306e\u5927\u591a\u6570\u306e\u6559\u5e2b\u304c6\u5e74\u751f\u304b\u308910\u5e74\u751f\u306e\u9593\u3067\u6559\u3048\u3066\u3044\u307e\u3057\u305f\u3002\u500b\u3005\u306e\u8a55\u4fa1\u8005\u306f\u629c\u7c8b\u306e\u3054\u304f\u4e00\u90e8\u3057\u304b\u898b\u306a\u304b\u3063\u305f\u306e\u306b\u5bfe\u3057\u3001\u3059\u3079\u3066\u306e\u629c\u7c8b\u306f\u591a\u6570\u306e\u8a55\u4fa1\u8005\u304c\u898b\u305f\u305f\u3081\u3001\u6a19\u6e96\u8aa4\u5dee\u304cBradley-Terry\u5206\u6790\u306e\u51fa\u529b\u3068\u3057\u3066\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u3068\u30c8\u30ec\u30a4\u30f3\u30bb\u30c3\u30c8\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30b9\u30b3\u30a2\u3068s.e.\u306e\u5f8c\u306b\u5206\u5272\u3055\u308c\u307e\u3057\u305f\u3002 \u8a08\u7b97\u3055\u308c\u307e\u3057\u305f\u3002<br>\n\u30fb\u5f7c\u3089\u306f\u3069\u306e\u3088\u3046\u306b\u63a1\u7528\u3055\u308c\u3001\u3082\u3057\u3042\u308c\u3070\u3001\u5f7c\u3089\u306f\u3069\u306e\u3088\u3046\u306a\u8a13\u7df4\u3092\u53d7\u3051\u307e\u3057\u305f\u304b\uff1f<br>\n\u5f7c\u3089\u306f\u3001\u7c73\u56fd\u306e\u4f55\u5343\u4eba\u3082\u306e\u6559\u5e2b\u3068\u63a5\u89e6\u3057\u3066\u3044\u308bCommonLit\u3092\u901a\u3058\u3066\u63a1\u7528\u3055\u308c\u307e\u3057\u305f\u3002<br>\n\u30fb\u629c\u7c8b\u306f\u3069\u306e\u3088\u3046\u306b\u9078\u629e\u3055\u308c\u307e\u3057\u305f\u304b\uff1f<br>\n\u3000\u305d\u308c\u3089\u306fCommonLit\u306e\u5c02\u9580\u6750\u6599\u958b\u767a\u8005\u306e\u30c1\u30fc\u30e0\u306b\u3088\u3063\u3066\u9078\u3070\u308c\u307e\u3057\u305f\u3002 \u305d\u308c\u3089\u306f\u4e3b\u306b\u30c6\u30ad\u30b9\u30c8\u306e\u9577\u3055\u3067\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u4ed8\u304f\u3067\u3057\u3087\u3046\u3002 \u3053\u308c\u3089\u306f\u901a\u5e38\u3001\u3088\u308a\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u306e\u629c\u7c8b\u3067\u3042\u308a\u3001\u3053\u308c\u3089\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u6700\u521d\u3001\u4e2d\u9593\u3001\u3000\u304a\u3088\u3073\u6700\u5f8c\u304b\u3089\u9078\u629e\u3055\u308c\u307e\u3057\u305f\u3002 \u305f\u3060\u3057\u3001\u9078\u629e\u306f\u30a2\u30a4\u30c7\u30a2\u30e6\u30cb\u30c3\u30c8\u5168\u4f53\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002<br>\n\u30fb\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u95a2\u3057\u3066\u306f\u3001\u6700\u9ad8\u30b9\u30b3\u30a2\u306f3\u5e74\u751f\u306b\u76f8\u5f53\u3057\u3001\u6700\u4f4e\u30b9\u30b3\u30a2\u306f\u9006\u306b12\u5e74\u751f\u306b\u7b49\u3057\u3044\u3068\u60f3\u5b9a\u3059\u308b\u306e\u306f\u6b63\u3057\u3044\u3067\u3057\u3087\u3046\u304b\u3002<br>\n\u3000\u3053\u308c\u3089\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u30b9\u30af\u30a4\u30fc\u30ba\u3067\u3042\u308b\u3053\u3068\u3092\u5ff5\u982d\u306b\u7f6e\u3044\u3066\u3001\u305d\u308c\u306f\u5b89\u5168\u306a\u7d50\u8ad6\u3067\u3042\u308b\u306f\u305a\u3067\u3059\u3002<br>\n\u30fbR\u306eBradleyTerry2\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3057\u307e\u3057\u305f\u3002<br>\n\u30fb\u8a00\u8a9e\u3068\u306e\u30da\u30a2\u30ef\u30a4\u30ba\u6bd4\u8f03\u306f\u3001\u9806\u5e8f\u306b\u975e\u5e38\u306b\u654f\u611f\u3067\u3042\u308a\u3001\u7279\u306b\u3059\u3067\u306b\u8ff0\u3079\u305f\u8981\u56e0\u3092\u8003\u616e\u3059\u308b\u3068\u20262834\u306e\u629c\u7c8b\u306e800\u4e07\u306e\u53ef\u80fd\u306a\u30da\u30a2\u3068\u6bd4\u8f03\u3057\u3066\u3001111k\u306e\u30da\u30a2\u30ef\u30a4\u30ba\u6bd4\u8f03\u306f\u975e\u5e38\u306b\u5c0f\u3055\u3044\u3067\u3059\u3002<br>\n\u30fb","49726cdc":"### \u3053\u308c\u3067RoBERTa\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002","71ae6e16":"### \ud83d\udccc\u8a2d\u5b9a","99615a08":"### cuda\u3042\u308a\u3068\u306a\u3057\u306e\u9055\u3044\u306f\u4e0d\u660e.\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u307f\u3048\u308b\u3051\u3069\u3002","ceae4370":"### \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3060\u30680.01\u60aa\u5316\u3057\u305f\nnum_labels=5<br>\nconfig.update({\"initializer_range\": 0.5}) #\u5909\u5316\u306a\u3057<br>\nconfig.update({'hidden_dropout_prob':0.5}) #\u8a66\u3057\u3066\u307f\u308b \u5931\u6557<br>\nconfig.update({'num_labels':num_labels}) <br>\n\n### \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u30820.01\u60aa\u5316\u3057\u305f=>\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u4e0d\u53ef\u3068\u5224\u65ad\nnum_labels=2<br>\nconfig.update({\"num_hidden_layers\": 15})<br>\nconfig.update({\"initializer_range\": 0.01}) <br>\nconfig.update({'hidden_dropout_prob':0.01}) <br>\nconfig.update({'num_labels':num_labels}) ","f82f9d24":"# \u5b9f\u9a13","c8d2540f":"![image.png](attachment:394bc121-1584-4199-9eec-82d9f1b99c56.png)","cf4b2884":"### \u307e\u308b\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308a\u307e\u305b\u3093\u3002max_len\u3082\u3044\u3058\u308a\u307e\u3057\u305f\u304c\u3001\u30b9\u30b3\u30a2\u306f\u60aa\u5316\u3057\u307e\u3057\u305f\u3002","727717ca":"### Make Submission","bdc18c0b":"### Bert\u3068\u540c\u3058\u3002\u4e8b\u524d\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u7570\u306a\u308b\u3002","3405c782":"<div class=\"alert simple-alert\"><font color=\"black\">\n\u26be <b>Competition Goal<\/b>:<\/i> \u3053\u306e\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306f\u3001\u6587\u5b66\u304b\u3089\u306e\u629c\u7c8b\u306e\u8aad\u307f\u3084\u3059\u3055\u3092\u4e88\u6e2c\u3057\u3066\u3044\u307e\u3059\u3002\n<\/div>"}}