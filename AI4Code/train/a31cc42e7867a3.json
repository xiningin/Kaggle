{"cell_type":{"bdf2491b":"code","c98f1fa1":"code","a089763b":"code","7412384e":"code","de04c1f8":"code","8fe9d53a":"code","b9801b07":"code","c8eb3cbd":"code","e8f4af85":"code","09d29c4a":"code","153ee9bc":"code","bea19ea9":"markdown","eedecbc8":"markdown","7b226db4":"markdown","fa27624e":"markdown","9fe1a29f":"markdown","bef37d10":"markdown","5b9ecba6":"markdown"},"source":{"bdf2491b":"# https:\/\/www.kaggle.com\/mathematician\/easy-submition-from-cian","c98f1fa1":"from glob import glob\nimport pandas as pd\nimport numpy as np\nfrom PIL import Image as img\n\nimport matplotlib.pyplot as plt\n%matplotlib inline","a089763b":"train_images = glob('..\/input\/train\/train\/*\/*.jpg')","7412384e":"temp = []\n\nfor path in train_images:\n    image = img.open(path) #\u043e\u0442\u043a\u0440\u0432\u0430\u0435\u043c \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443\n    np_image = np.array(image) #\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\n    np_image = np_image[:int(np_image.shape[0]\/9.5),:,:] # \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043d\u0435\u0431\u043e \u0438\u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438\n    image_class = path.split('\/')[-2] #\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043b\u0430\u0441\u0441\n    \n    target = 0 if image_class == 'indoor' else 1\n    \n    temp.append({'y': target, 'R':np_image[:,:,0].mean(), 'G':np_image[:,:,1].mean(), 'B':np_image[:,:,2].mean()})\n\ndf = pd.DataFrame(temp)","de04c1f8":"# red\nplt.hist(df[df['y'] == 0]['R'], range=(0,255), alpha=0.3, color='green',bins=255)\nplt.hist(df[df['y'] == 1]['R'], range=(0,255), alpha=0.3, color='red',bins=255)\nplt.show()","8fe9d53a":"# green\nplt.hist(df[df['y'] == 0]['G'], range=(0,255), alpha=0.3, color='green',bins=255)\nplt.hist(df[df['y'] == 1]['G'], range=(0,255), alpha=0.3, color='red',bins=255)\nplt.show()","b9801b07":"# blue (\u0445\u043e\u0440\u043e\u0448\u0435\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435)\nplt.hist(df[df['y'] == 0]['B'], range=(0,255), alpha=0.3, color='green',bins=255)\nplt.hist(df[df['y'] == 1]['B'], range=(0,255), alpha=0.3, color='red',bins=255)\nplt.show()","c8eb3cbd":"test_images = glob('..\/input\/test\/test\/*.jpg')","e8f4af85":"temp = []\n\nfor path in test_images:\n    imageid = int(path.split('\/')[-1].replace('.jpg',''))\n    image = img.open(path) #\u043e\u0442\u043a\u0440\u0432\u0430\u0435\u043c \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443\n    np_image = np.array(image) #\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\n    np_image = np_image[:int(np_image.shape[0]\/9.5),:,:] # \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043d\u0435\u0431\u043e \u0438\u0437 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438\n    \n    temp.append({'imageid': imageid, 'R':np_image[:,:,0].mean(), 'G':np_image[:,:,1].mean(), 'B':np_image[:,:,2].mean()})\n\ndf = pd.DataFrame(temp)","09d29c4a":"df.loc[df['B'] <= 186.469, 'pred'] = 0\ndf['pred'].fillna(1, inplace = True)","153ee9bc":"submission = df[['imageid', 'pred']]\nsubmission.columns = ['image_number','prob_outdoor']\nsubmission.to_csv('submission.csv',index=False)","bea19ea9":"\u0412 \u043a\u043e\u0434\u0435 \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f **scipy**, \u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u044d\u0442\u043e \u0441\u043b\u0435\u0433\u043a\u0430 \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u043d\u043d\u043e\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 (\u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043d\u0435\u0431\u0430 \u043d\u0430 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f\u0445 \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0443\u043b\u0438\u0446\u0435).","eedecbc8":"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.","7b226db4":"\u041d\u0430 \u0433\u0440\u0430\u0444\u0444\u0438\u043a\u0430\u0445 \u0432\u0438\u0434\u043d\u043e \u0445\u043e\u0440\u043e\u0448\u0435\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u043a\u043b\u0430\u0441\u0441\u0430\u043c \u0443 \u0441\u0438\u043d\u0435\u0433\u043e \u0446\u0432\u0435\u0442\u0430 (\u0431\u0443\u0434\u0435\u043c \u044d\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c).","fa27624e":"\u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u043d\u0430 \u0434\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u043e \u0441\u0438\u043d\u0435\u043c\u0443 \u0446\u0432\u0435\u0442\u0443. (\u0447\u0438\u0441\u043b\u043e **186.469** \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0438\u0437 \u0441\u0430\u043c\u043e\u0433\u043e \n\u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0434\u0435\u0440\u0435\u0432\u0430 DecisionTreeClassifier \u0438\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 sklearn, \u043f\u043e \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\n\u043a\u0430\u043a-\u0431\u044b \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0435\u0451 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435, \u043f\u043e-\u044d\u0442\u043e\u043c\u0443 \u0431\u0435\u0437 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0439 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u044d\u0442\u043e \u043c\u0430\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435\n\u0447\u0438\u0441\u043b\u043e).","9fe1a29f":"\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u0431\u043e (\u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0447\u0430\u0441\u0442\u044c \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438), \u044d\u0442\u043e\u0433\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e, \n\u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u0442\u044c base score.","bef37d10":"\u0412 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430\u0445 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0447\u0430\u0441\u0442\u044c, \u0442.\u043a. \u043d\u0435\u0431\u043e \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0444\u043e\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u043e\u0433\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f. (\u0447\u0438\u0441\u043b\u043e **9.5** \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043f\u0443\u0442\u0451\u043c \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u0430)","5b9ecba6":"\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043e\u0442\u0432\u0435\u0442."}}