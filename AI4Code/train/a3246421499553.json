{"cell_type":{"09b08789":"code","3ac63e76":"code","b5f64553":"code","0f8fe493":"code","d1b1136c":"code","3a412bfc":"code","ad7d013d":"code","0e93392d":"code","06ee005b":"code","ac4726f8":"code","f00296a9":"code","32fd949c":"code","b3778e9e":"code","4ff7bd96":"code","c4bdd97a":"code","c826286c":"code","8af36c6e":"code","89c46415":"code","4f38e50c":"code","bce26baf":"code","75af9a0e":"code","58628ac2":"code","8a1e292f":"code","067467ac":"code","3022d9b8":"code","d0dbdcee":"code","4feb1985":"code","116647de":"code","5ce6b738":"code","eb957bc0":"code","9c8ef19d":"code","ee8d3910":"code","3506d6d2":"code","4c2996b4":"markdown","9ad0e21a":"markdown","61dec87d":"markdown","438e736a":"markdown","99214be4":"markdown","4c9a5082":"markdown","d9019671":"markdown","5741624a":"markdown","f8d04727":"markdown","8df3b9b2":"markdown","6b406f67":"markdown","9bfba15e":"markdown","41fb70d2":"markdown","7978e892":"markdown","f1eaf3e6":"markdown","a0a46749":"markdown","90f6a192":"markdown"},"source":{"09b08789":"import pandas as pd\ndata = pd.read_csv('..\/input\/titanic\/train.csv')\ndata_test = pd.read_csv('..\/input\/titanic\/test.csv')\ndata","3ac63e76":"data.describe()","b5f64553":"import matplotlib.pyplot as plt","0f8fe493":"# survived vs deceased\nfig = plt.figure(figsize=(18,6))\ndata.Survived.value_counts().plot(kind='bar')\nplt.title('Survived vs deceased')","d1b1136c":"# male survived vs male deceased\ndata.Survived[data.Sex == 'male'].value_counts().plot(kind = 'bar')","3a412bfc":"# female survived vs female deceased\ndata.Survived[data.Sex == 'female'].value_counts().plot(kind = 'bar')","ad7d013d":"# gender vs survival\ndata[data.Survived == 1].Sex.value_counts().plot(kind = 'bar')","0e93392d":"# survival within class\nfor x in [1,2,3]:\n    data.Survived[data.Pclass == x].plot(kind=\"kde\")","06ee005b":"# low class male survived vs male deceased\ndata.Survived[(data.Sex == \"male\") & (data.Pclass == 3)].value_counts().plot(kind='bar')","ac4726f8":"# high class male survived vs male deceased\ndata.Survived[(data.Sex == \"male\") & (data.Pclass == 1)].value_counts().plot(kind='bar')","f00296a9":"# low class female survived vs female deceased\ndata.Survived[(data.Sex == \"female\") & (data.Pclass == 3)].value_counts().plot(kind='bar')","32fd949c":"# high class female survived vs female deceased\ndata.Survived[(data.Sex == \"female\") & (data.Pclass == 1)].value_counts().plot(kind='bar')","b3778e9e":"data.isnull().sum()","4ff7bd96":"687\/891, 177\/891","c4bdd97a":"data = data.drop(['Cabin'], axis=1)\ndata_test = data_test.drop(['Cabin'], axis=1)\ndata.head()","c826286c":"data.describe()","8af36c6e":"data['Embarked'].value_counts()","89c46415":"data['Age'] = data['Age'].fillna('29')\ndata_test['Age'] = data_test['Age'].fillna('29')\ndata.isnull().sum()\ndata['Embarked'] = data['Embarked'].fillna('S')\ndata_test['Embarked'] = data_test['Embarked'].fillna('S')\ndata.head()","4f38e50c":"data = data.drop(['Name', 'Ticket'],axis=1)\ndata_test = data_test.drop(['Name', 'Ticket'],axis=1)\ndata_test","bce26baf":"data_test.isnull().sum()","75af9a0e":"data_test.Fare.value_counts()","58628ac2":"data_test['Fare']=data_test['Fare'].fillna('8')","8a1e292f":"data_test.isnull().sum()","067467ac":"data","3022d9b8":"rdata = data.copy()\ntdata = data_test.copy()\n\ntdata['Sex'] = tdata['Sex'].map({'male' : 0, 'female' : 1})\ntdata['Embarked'] = tdata['Embarked'].map({'S' : 0, 'C' : 1, 'Q' : 2})\n\nrdata['Sex'] = rdata['Sex'].map({'male' : 0, 'female' : 1})\nrdata['Embarked'] = rdata['Embarked'].map({'S' : 0, 'C' : 1, 'Q' : 2})\n\ntdata","d0dbdcee":"from sklearn.linear_model import LogisticRegression\n\ntrain_input_data = rdata[[\"Pclass\", \"Age\", \"Sex\", \"Fare\", \"SibSp\", \"Parch\", \"Embarked\"]].values\ntarget = rdata['Survived']\n\nlr = LogisticRegression()\n\nlr.fit(train_input_data, target)","4feb1985":"test_data = tdata[[\"Pclass\", \"Age\", \"Sex\", \"Fare\", \"SibSp\", \"Parch\", \"Embarked\"]].values","116647de":"predictions = lr.predict(test_data)\nprint(predictions[:10])","5ce6b738":"predictionsPD = pd.Series(predictions)\nsubmission = pd.concat([tdata['PassengerId'], predictionsPD], axis=1)\nsubmission=submission.rename(columns={0: \"Survived\"})\nsubmission.to_csv('submission_file.csv', index = False)\nsubmission","eb957bc0":"from sklearn import tree, model_selection\ndecision_tree = tree.DecisionTreeClassifier(random_state=1)\ndecision_tree = decision_tree.fit(train_input_data, target)\npredictions = decision_tree.predict(test_data)","9c8ef19d":"decision_tree_two = tree.DecisionTreeClassifier(\n    max_depth = 7,\n    min_samples_split = 2,\n    random_state = 1)\ndecision_tree_two = decision_tree_two.fit(train_input_data, target)\n\nscores = model_selection.cross_val_score(decision_tree_two, train_input_data, target, scoring='accuracy', cv=10)\n\nprediction_two = decision_tree_two.predict(test_data)","ee8d3910":"tree.export_graphviz(decision_tree_two, feature_names=[\"Pclass\", \"Age\", \"Sex\", \"Fare\", \"SibSp\", \"Parch\", \"Embarked\"], out_file=\"tree.dot\")\n\nimport graphviz\nfrom IPython.display import display\n\nwith open(\"tree.dot\") as f:\n    dot_graph = f.read()\n\ndisplay(graphviz.Source(dot_graph))","3506d6d2":"import pydot #pip install pydot\n\n(graph,) = pydot.graph_from_dot_file('tree.dot')\ngraph.write_png('tree.png')","4c2996b4":"## Data Exploration with Plots","9ad0e21a":"<img src='log1.png' width = 400>","61dec87d":"<img src='tree.png'>","438e736a":"## Cleaning the Data","99214be4":"## Decision Trees","4c9a5082":"## Logistic Regression","d9019671":"<img src='decision.jpg'>","5741624a":"#### Import relevant libraries & load the data","f8d04727":"# What sorts of people were more likely to survive?","8df3b9b2":"#### Converting categorical to numerical variables","6b406f67":"<img src=\"matplotlib.svg\" width=\"400\" height=\"200\">","9bfba15e":"#### Dealing with missing data","41fb70d2":"<img src=\"pandaslogo.png\" width=\"400\" height=\"200\">","7978e892":"<img src=\"panda.jpg\" width=\"400\" height=\"200\">","f1eaf3e6":"## Exploring the dataset","a0a46749":"### Make predictions","90f6a192":"## Make a submission file"}}