{"cell_type":{"a1954680":"code","0fe0e113":"code","82a23fbb":"code","64ca3110":"code","44896750":"code","4c621d4b":"code","ab1089cf":"code","115cd7bb":"code","15777242":"code","b75cc7d8":"code","d2c3807b":"markdown","799a3ee9":"markdown","2531386f":"markdown","0a4e1240":"markdown","9c8fd9c7":"markdown","ca72fecb":"markdown"},"source":{"a1954680":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt","0fe0e113":"train = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/train.csv')\ntest = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/test.csv')\nsub = pd.read_csv('\/kaggle\/input\/liverpool-ion-switching\/sample_submission.csv')","82a23fbb":"train.open_channels.value_counts().plot(kind='bar')","64ca3110":"for i in range(11):\n    train.query(f'open_channels == {i}').signal.hist(bins=100, label=i)\nplt.legend()","44896750":"avgs_array = []\n\nfor i in range(11):\n    avg = train.query(f'open_channels == {i}').signal.median()\n    avgs_array.append(avg)\n\navgs_array = np.array(avgs_array)\navgs_array","4c621d4b":"def shortest_distance_index(v):\n    \"\"\"Return the index (neg or pos) that has the smallest difference from input v\"\"\"\n    return np.argmin(np.abs(v - avgs_array))","ab1089cf":"sub.open_channels = test.signal.apply(shortest_distance_index)","115cd7bb":"sub.time = sub.time.apply(lambda x: '{:.4f}'.format(x))","15777242":"sub.open_channels.value_counts().plot(kind='bar')","b75cc7d8":"sub.to_csv('submission.csv', index=False)","d2c3807b":"We will assign a label to an entry depending on which mean it is closer to.","799a3ee9":"Let's compute the average signal for each class from the training labels:","2531386f":"Let's check if open channels have a clear difference in signal:","0a4e1240":"Let's check what the output distribution looks like:","9c8fd9c7":"This is cloned from https:\/\/www.kaggle.com\/xhlulu\/liverpool-simple-averaging - my only change was switching from mean to median to account for the asymmetry in the data.","ca72fecb":"Thanks to [this kernel by Bojan for finding the fix](https:\/\/www.kaggle.com\/tunguz\/simple-ion-ridge-regression-starter):"}}