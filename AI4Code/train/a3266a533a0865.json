{"cell_type":{"fcc26c7c":"code","54c9e989":"code","373b72b0":"code","1892ac09":"code","a5bebf11":"code","f62a18f2":"code","bebf0afb":"code","649fcb2a":"code","751f35ba":"code","891fbc00":"code","42af90b0":"code","5c39d7fe":"code","d253fefc":"code","0909034d":"code","b531e284":"code","6cc382c7":"code","46e0230b":"code","9a1919e7":"code","ab9e1dea":"code","40a5cc42":"code","effe88e0":"code","f0f1c2a3":"code","eebafea4":"code","f6141c32":"code","bd40435d":"code","d4524dc9":"code","caf4af75":"code","78c1bacc":"code","17b516e3":"code","e81ea5a1":"code","d42882c9":"code","eb1c90d6":"code","c5176599":"code","f9fede61":"code","4882b58e":"code","1a4bea12":"code","b18cf588":"code","6cb1aa10":"code","238a9505":"code","f6615c87":"code","f17e1f27":"code","d4b0b993":"code","44d1b365":"code","c2ece96f":"code","0d20b513":"code","c0c5f5ee":"code","5b3d9ed5":"code","15fe7490":"code","6d461bf5":"markdown","c68221e1":"markdown","f2d6ff1b":"markdown","8b832c43":"markdown","698d86eb":"markdown","762741c0":"markdown","8937c417":"markdown","f29ab9f7":"markdown","eddbcba9":"markdown","768b80a2":"markdown","34a1913f":"markdown","217cb39a":"markdown","adca5894":"markdown","1d545d2c":"markdown","13921430":"markdown"},"source":{"fcc26c7c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","54c9e989":"#important Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nsns.set_style('darkgrid')","373b72b0":"#Data Acqisition\ndata=pd.read_csv('\/kaggle\/input\/amazon-alexa-reviews\/amazon_alexa.tsv', sep='\\t')\ndata.shape","1892ac09":"#head\ndata.head()","a5bebf11":"#information\ndata.info()","f62a18f2":"#data description with statistic measures\ndata.describe()","bebf0afb":"#Checking for count of null values of each feature\ndata.isnull().sum()","649fcb2a":"#Number of unique values of each column\ndata.nunique().plot(kind='bar', figsize=(10,6), color='brown')\nplt.xlabel('Features')\nplt.ylabel('Count')\nplt.title('Number of Unique Values of each Feature ')","751f35ba":"plt.figure(figsize=(10,6))\nsns.countplot(data['rating'],palette='Set3')","891fbc00":"data['date'].value_counts()[:20].plot(kind='bar',figsize=(12,8))\nplt.xlabel('Date')\nplt.ylabel('Count')","42af90b0":"plt.figure(figsize=(14,8))\nbarplot=sns.countplot(data['variation'], palette='Set2')\nbarplot.set_xticklabels(barplot.get_xticklabels(), rotation=90)","5c39d7fe":"plt.figure(figsize=(12,6))\nsns.countplot(data['feedback'], palette='Set1')","d253fefc":"plt.figure(figsize=(12,8))\nsns.countplot(data['rating'], hue=data['feedback'], palette='Set2')","0909034d":"plt.figure(figsize=(14,8))\nbarplot=sns.countplot(data['variation'],hue=data['feedback'], palette='Set2')\nbarplot.set_xticklabels(barplot.get_xticklabels(), rotation=90)","b531e284":"#Length of the string of verified reviews\ndf=data\ndf['length']=df['verified_reviews'].apply(len)\ndf.head()","6cc382c7":"#box plot on length of reviews\nplt.figure(figsize=(12,6))\nsns.boxplot(df['length'], palette='Set3')","46e0230b":"maximum_length=max(df['length'])\nprint('Maximum length Review from overall verified reviews is: ',maximum_length)","9a1919e7":"df[df['length']==2851]['verified_reviews'].iloc[0]","ab9e1dea":"df[df['length']==2851]['feedback'].iloc[0]","40a5cc42":"positive_feedbacks=data[data['feedback']==1]['verified_reviews']\nnegative_feedbacks=data[data['feedback']==0]['verified_reviews']","effe88e0":"#Word Cloud for positive feedback reviews\nfrom wordcloud import WordCloud\nplt.figure(figsize=(14,8))\nwordcloud1=WordCloud(width=400,height=300, contour_color='black').generate(' '.join(positive_feedbacks))\nplt.imshow(wordcloud1)\nplt.axis('off')\nplt.title('Positive Feedback Reviews',fontsize=40)","f0f1c2a3":"#Word Cloud for Negative feedback reviews\nplt.figure(figsize=(14,8))\nwordcloud2=WordCloud(width=400,height=300, contour_color='black').generate(' '.join(negative_feedbacks))\nplt.imshow(wordcloud2)\nplt.axis('off')\nplt.title('Negative Feedback Reviews',fontsize=40)","eebafea4":"#Removing leading and ending spaces of string\ndata['verified_reviews']=data['verified_reviews'].apply(lambda x: x.strip())","f6141c32":"#Text Lowercasing\ndata['verified_reviews']=data['verified_reviews'].apply(lambda x: ' '.join(x.lower() for x in x.split()))\ndata['verified_reviews'].head()","bd40435d":"#removing punctuations from string\nimport string\npunct_dict=dict((ord(punct),None) for punct in string.punctuation)\nprint(string.punctuation)\nprint(punct_dict)","d4524dc9":"for i in range(0, data.shape[0]):\n    data['verified_reviews'][i]=data['verified_reviews'][i].translate(punct_dict)\ndata['verified_reviews'].head()    ","caf4af75":"#Removing Stop Words\nfrom nltk.corpus import stopwords\nstop=stopwords.words('english')\nprint(len(stop))\ndata['verified_reviews']=data['verified_reviews'].apply(lambda x: \" \".join(x for x in x.split() if x not in stop))\ndata['verified_reviews'].head()","78c1bacc":"#Removing Numbers\ndata['verified_reviews']=data['verified_reviews'].apply(lambda x: ''.join([i for i in x if not i.isdigit()]))\ndata['verified_reviews'].head()","17b516e3":"#Lemmatization\nfrom nltk.stem import WordNetLemmatizer\nlem=WordNetLemmatizer()\ndata['verified_reviews']=data['verified_reviews'].apply(lambda x: ''.join(lem.lemmatize(term) for term in x))\ndata['verified_reviews'].head()","e81ea5a1":"#Removing URL's\ndata['verified_reviews'] = data['verified_reviews'].str.replace('http\\S+|www.\\S+','',case=False)\ndata['verified_reviews'].head()","d42882c9":"#List of Tokens-Tokenization\nfrom nltk.tokenize import word_tokenize\nall_words=[]\nfor msg in data['verified_reviews']:\n    words=word_tokenize(msg)\n    for w in words:\n        all_words.append(w)  ","eb1c90d6":"#Frequency of Most Common Words\nimport nltk\nfrequency_dist=nltk.FreqDist(all_words)\nprint('Length of the words',len(frequency_dist))\nprint('Most Common Words',frequency_dist.most_common(100))","c5176599":"#Frequency Plot for first 100 most frequently occuring words\nplt.figure(figsize=(20,8))\nfrequency_dist.plot(100,cumulative=False)","f9fede61":"#### Feature extraction using Tfidf Vectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\ntfidfVect=TfidfVectorizer(max_features=1500,stop_words='english')\n\nX=tfidfVect.fit_transform(data['verified_reviews']).toarray()\ny=data.iloc[:,4].values\nprint(tfidfVect.get_feature_names())","4882b58e":"#Shape of tfidf vectorizer\nX.shape","1a4bea12":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 100)","b18cf588":"from sklearn.naive_bayes import MultinomialNB\nmodel1=MultinomialNB()\nmodel1.fit(X_train, y_train)","6cb1aa10":"y_pred=model1.predict(X_test)","238a9505":"#Important Metrics to know the Performance of Model\nfrom sklearn.metrics import classification_report,confusion_matrix,precision_score,recall_score,f1_score,accuracy_score\nprint('Classification Report',classification_report(y_test,y_pred))\nprint('Confusion Matrix',confusion_matrix(y_test,y_pred))\nprint('Accuracy Score',accuracy_score(y_test,y_pred))\nprint('Precision Score',precision_score(y_test,y_pred))\nprint('Recall Score',recall_score(y_test,y_pred))\nprint('F1 Score',f1_score(y_test,y_pred))","f6615c87":"#Cross Validation\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(model1,X=X_train,y=y_train,cv=5)","f17e1f27":"from sklearn.linear_model import LogisticRegression\nmodel2=LogisticRegression()\nmodel2.fit(X_train,y_train)","d4b0b993":"y_pred2=model2.predict(X_test)","44d1b365":"#Important Metrics to know the Performance of Model\nfrom sklearn.metrics import classification_report,confusion_matrix,precision_score,recall_score,f1_score,accuracy_score\nprint('Classification Report',classification_report(y_test,y_pred2))\nprint('Confusion Matrix',confusion_matrix(y_test,y_pred2))\nprint('Accuracy Score',accuracy_score(y_test,y_pred2))\nprint('Precision Score',precision_score(y_test,y_pred2))\nprint('Recall Score',recall_score(y_test,y_pred2))\nprint('F1 Score',f1_score(y_test,y_pred2))","c2ece96f":"#Cross Validation\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(model2,X=X_train,y=y_train,cv=5)","0d20b513":"from sklearn.ensemble import RandomForestClassifier\nmodel3=RandomForestClassifier()\nmodel3.fit(X_train,y_train)","c0c5f5ee":"y_pred3=model3.predict(X_test)","5b3d9ed5":"#Important Metrics to know the Performance of Model\nfrom sklearn.metrics import classification_report,confusion_matrix,precision_score,recall_score,f1_score,accuracy_score\nprint('Classification Report',classification_report(y_test,y_pred3))\nprint('Confusion Matrix',confusion_matrix(y_test,y_pred3))\nprint('Accuracy Score',accuracy_score(y_test,y_pred3))\nprint('Precision Score',precision_score(y_test,y_pred3))\nprint('Recall Score',recall_score(y_test,y_pred3))\nprint('F1 Score',f1_score(y_test,y_pred3))","15fe7490":"#Cross Validation\nfrom sklearn.model_selection import cross_val_score\ncross_val_score(model3,X=X_train,y=y_train,cv=5)","6d461bf5":"# 1. Naive Bayes Model","c68221e1":"Customer written reviews are more on 30 july'18","f2d6ff1b":"# Data Bifurication","8b832c43":"After checking the review it is confirmed that it belongs to positive feedback review.","698d86eb":"Positive feedbacks are more compared to Negative feedbacks","762741c0":"# Text Preprocessing","8937c417":"From above, we can clearly say that ratings >=3 belong to Positive feedback and ratings 1,2 belong to Negative feedback ","f29ab9f7":"Five rating Customers are more ","eddbcba9":"Black Dot variation is common in both Positive and Negative feedback reviews with more in number. Charcol Fabric variation is more in postive feedback and Black variation is high in negative feedback following Black Dot variation.","768b80a2":"# 2. Logistic regression","34a1913f":"# Model Building","217cb39a":"# EDA","adca5894":"From boxplot, maximum value is 2851 it means that there is a review with the length of 2851. Let's see that review and check whether it is positive or negative review","1d545d2c":"# Random Forest Classifier","13921430":"Variation with Black Dot are more in number "}}