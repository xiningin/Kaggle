{"cell_type":{"a7971c4c":"code","f1fe8505":"code","6bd1b0c2":"code","eea8d206":"code","6d86d1e1":"code","acb645bd":"code","e0f45fa5":"code","0ff4fbc1":"code","335215da":"code","582c9615":"code","23443530":"code","20d0fff9":"code","456980c8":"code","7de277b7":"code","90516242":"code","4c7104e8":"code","d58255a1":"code","66e8dbf7":"code","efa76180":"markdown","d192c2c6":"markdown"},"source":{"a7971c4c":"import warnings\nwarnings.filterwarnings('ignore')","f1fe8505":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","6bd1b0c2":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns","eea8d206":"data = pd.read_csv('\/kaggle\/input\/asian-and-indian-cuisines\/asian_indian_recipes.csv')\ndata.head()","6d86d1e1":"data.info()","acb645bd":"data.shape","e0f45fa5":"X = data.iloc[:,2:]\nX.head()","0ff4fbc1":"y = data[['cuisine']]\ny.head()","335215da":"from sklearn.model_selection import train_test_split\n# from sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import BernoulliNB,GaussianNB\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report","582c9615":"models = [\n    BernoulliNB(),\n    DecisionTreeClassifier(criterion='gini'),\n    RandomForestClassifier(n_estimators=100),\n    SVC(kernel='linear')\n]","23443530":"CV = 10\ncv_df = pd.DataFrame(index=range(CV * len(models)))\nentries = []\ni=0\nfor model in models:\n    model_name = model.__class__.__name__\n    accuracies = cross_val_score(model, X, y, scoring='accuracy', cv=CV) \n    entries.append([model_name, accuracies.mean()])\n    i += 1\ncv_df = pd.DataFrame(entries, columns=['model_name', 'accuracy'])","20d0fff9":"cv_df","456980c8":"plt.figure(figsize=(10,5))\nax=sns.barplot(x=\"accuracy\", y=\"model_name\", data=cv_df)\n","7de277b7":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3)","90516242":"model_nba = BernoulliNB(binarize = .5)\nmodel_nba.fit(X_train,y_train)","4c7104e8":"y_pred = model_nba.predict(X_test)","d58255a1":"confusion_matrix(y_test,y_pred)","66e8dbf7":"print(classification_report(y_test,y_pred))","efa76180":"## Select model","d192c2c6":"* Temporarily, we will choose Bernoulli Naive Bayes because this model has the highest accuracy"}}