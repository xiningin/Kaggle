{"cell_type":{"860d991d":"code","966b0953":"code","ba91b860":"code","add732a9":"code","5b9d385a":"code","61f0b6bb":"code","f7a0907f":"code","6bc46e26":"code","3c627c61":"code","066ba1a3":"code","e3ab89fc":"code","0a031372":"code","5d54900b":"code","1138f0f0":"code","4e345504":"markdown","1e03cee4":"markdown","ce278b60":"markdown","8c47d291":"markdown"},"source":{"860d991d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","966b0953":"# Import modules\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n%matplotlib inline","ba91b860":"df = pd.read_csv('\/kaggle\/input\/coursera-course-dataset\/coursea_data.csv')\ndf.head()","add732a9":"df.columns","5b9d385a":"# No null values in dataset\n# Drop unwanted column\ndf.drop('Unnamed: 0' , axis = 1 , inplace = True)","61f0b6bb":"df['course_students_enrolled']=df['course_students_enrolled'].str.replace('k', '*1000')\ndf['course_students_enrolled']=df['course_students_enrolled'].str.replace('m', '*1000000')\ndf['course_students_enrolled'] = df['course_students_enrolled'].map(lambda x: eval(x))\n","f7a0907f":"df.info(())","6bc46e26":"df['course_students_enrolled'].describe()","3c627c61":"# 75% courses have students a below 995000\nsns.set_style('darkgrid')\nsns.set_context('notebook')\nbins = np.arange(1000 , 995000 , 100000 )\nplt.hist(df['course_students_enrolled'] , bins = bins)\nplt.xlabel('Students Count')\nplt.title('Distribution of Students')","066ba1a3":"# Explore the cluster values\nbins = np.arange(1000 , 20100 , 1000)\nplt.hist(df['course_students_enrolled'] , bins = bins)\nplt.xlabel('Students Count')\nplt.title('Distribution of Students')","e3ab89fc":"# Explore ratings\ndf['course_rating'].describe()","0a031372":"bins = np.arange(4 , 5.1 , 0.1)\nplt.hist(df['course_rating'] , bins = bins)\nplt.xlabel('Course rating')\nplt.title('Distribution of course ratings')\n","5d54900b":"plt.figure(figsize = (10,7))\nsns.countplot(data = df , x ='course_Certificate_type' , hue = 'course_difficulty' )","1138f0f0":"plt.figure(figsize = (10,6))\n\nplt.subplot(1,3,1)\ndf_data = df.groupby(['course_rating' , 'course_difficulty']).size().reset_index()\ndf_new = df_data.pivot('course_rating' , 'course_difficulty', 0)\nsns.heatmap(df_new , cmap='rocket_r')\n\nplt.subplot(1,3,3)\ndf_data = df.groupby(['course_rating'  , 'course_Certificate_type' ]).size().reset_index()\ndf_new = df_data.pivot('course_rating'  , 'course_Certificate_type' ,  0)\nsns.heatmap(df_new , cmap='rocket_r')","4e345504":"#### Most of the course have rating between 4.4 to 4.9","1e03cee4":"* There is no mixed category in specialization courses\n* Professional certificate type courses have only two category ( Beginner and Intermediate)\n* Most courses are for beginners.","ce278b60":"### Distribution of Course Rating","8c47d291":"### Distribution of students enrolled for course."}}