{"cell_type":{"df7ab460":"code","fb4d8153":"code","eb3d81c5":"code","706891da":"markdown","19946840":"markdown","189080d8":"markdown"},"source":{"df7ab460":"%%writefile agent.py\n\n##########################\n# DEFINE YOUR AGENT HERE #\n##########################\n\ndef copy_opponent_agent(observation, configuration):\n    if observation.step > 0:\n        opp_hand = observation.lastOpponentAction\n        return (opp_hand + 1) % 3\n    else:\n        return 1","fb4d8153":"from kaggle_environments.envs.rps.agents import *\nfrom kaggle_environments import make\n\ndef randomAgent(obs, config):\n    return random.randint(0, 2)\n\nenv = make('rps', debug = True)\n\n# Pass in your agent to evaluate\ndef evaluate(agent):\n    \n    pool = [\n        rock,\n        paper,\n        scissors,\n        copy_opponent,\n        reactionary,\n        counter_reactionary,\n        statistical,\n        randomAgent,\n    ]\n\n\n    print()\n    overall = 0\n\n    for opponent in pool:\n\n        env.reset()\n\n        env.run([agent, opponent])\n        json = env.toJSON()\n        rewards = json['rewards']\n\n        opponentName = str(opponent).split()[1].capitalize()\n\n        padding = ''; length = len(str(rewards))\n        if length < 15: padding = ' ' * (15 - length)\n\n        print(f'Rewards: {rewards}{padding}  Agent vs {opponentName}')\n        overall += rewards[0]\n    \n    overall \/= len(pool)\n    print(f'Overall Score: {overall}')\n    \n    return overall\n","eb3d81c5":"score = evaluate('\/kaggle\/working\/agent.py')\nif score <= 0:\n    print('\\nU MIGHT WANNA FIX SOME THINGS BUDDY')\nelse:\n    print('\\nITS GREAT! NOW CHUCK IT INTO THE LEADERBOARD')","706891da":"Credit goes to https:\/\/www.kaggle.com\/ttahara\/rps-simple-baseline. I'm just using their bot to test the evaluation system.","19946840":"# Agent Pool Evaluation\n\nThis is a notebook that should help with evaluating an agent based on other public and built-in agents. If your new agent can beat most of these baseline bots, then it should be ready for the leaderboard!","189080d8":"I hope that this helps with evaluating your agent before submission! Feedback and ideas are always welcome. Good luck!"}}