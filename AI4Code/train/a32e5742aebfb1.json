{"cell_type":{"41403a83":"code","b29d4153":"code","cdfb6d05":"code","a562f488":"code","5c6a978e":"markdown"},"source":{"41403a83":"!pip3 install -U celluloid","b29d4153":"# imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import timedelta\nfrom celluloid import Camera\nfrom IPython.display import HTML, clear_output","cdfb6d05":"# time to eruption dataload\ntrain = pd.read_csv(\"..\/input\/predict-volcanic-eruptions-ingv-oe\/train.csv\")\ntrain['datetime_to_eruption'] = train['time_to_eruption'].apply(lambda x: timedelta(seconds = x\/100))\ntrain.sort_values('datetime_to_eruption', inplace=True)\n\nprint(len(train), 'training samples')","a562f488":"# plot raw training samples\nfig, ax = plt.subplots(figsize=(20, 10)) # setup\ncamera = Camera(fig)\n\nfor s_id in train[::-50].segment_id:\n    seq_str = f\"..\/input\/predict-volcanic-eruptions-ingv-oe\/train\/{s_id}.csv\"\n    sequence = pd.read_csv(seq_str, dtype=\"Int16\") # 10 min period\n    \n    ax = sequence.fillna(0).plot(subplots=True, legend=False, ax=ax)\n    ax[0].text(0, 0, f\"{train[train.segment_id==s_id].datetime_to_eruption.to_list()[0]}\", \n        ha='center', backgroundcolor='white')\n    ax[0].set_title('Spread of training samples')\n    \n    camera.snap() # camera snapshot\n    \nanim = camera.animate() # animating the plots\nclear_output()\nHTML(anim.to_html5_video()) # show HTML vid","5c6a978e":"## Visulising the training dataset\n\nThis notebook provides a useful way for visulising raw training eruption data to guide feature exploration. "}}