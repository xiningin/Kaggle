{"cell_type":{"6336f378":"code","36e932a6":"code","bcfc21bf":"code","90f46627":"code","eb9980db":"code","08fed1be":"code","eb4f715b":"code","bd1f4eb4":"code","60d6125e":"code","d88e4420":"code","48ed6ca3":"markdown","c44b7c22":"markdown"},"source":{"6336f378":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","36e932a6":"df_levels= pd.read_csv('..\/input\/chennai-water-management\/chennai_reservoir_levels.csv')\ndf_levels.head()","bcfc21bf":"def ecdf(data):\n    \"\"\"Compute ECDF for a one-dimensional array of measurements.\"\"\"\n    # Number of data points: n\n    #____ = ____(____)\n    n= len(data)\n    # x-data for the ECDF: x\n    #____ = ____(____)\n    x=np.sort(data)\n    # y-data for the ECDF: y\n    #____ = ____(____, ____) \/ n\n    y=np.arange(start=1,stop=n+1)\/n\n    return x, y\n","90f46627":"def bootstrap_replicate_1d(data, func):\n    return func(np.random.choice(data, size=len(data)))","eb9980db":"def draw_bs_reps(data, func, size=1):\n    \"\"\"Draw bootstrap replicates.\"\"\"\n    \n    # Initialize array of replicates: bs_replicates\n    bs_replicates = np.empty(size)\n\n    # Generate replicates\n    for i in range(size):\n        bs_replicates[i] = bootstrap_replicate_1d(data,func)\n\n    return bs_replicates\n","08fed1be":"def confidence_interval(data,arr):\n    conf_int = np.percentile(data,arr)\n    return conf_int ","eb4f715b":"# Take 10,000 bootstrap replicates of the mean: bs_replicates\nbs_replicates = draw_bs_reps(df_levels['POONDI'],np.mean,10000)\n\n# Compute and print SEM\nsem = np.std(df_levels['POONDI']) \/ np.sqrt(len(df_levels))\nprint('normalized mean',sem)\n\n# Compute and print standard deviation of bootstrap replicates\nbs_std = np.std(bs_replicates)\nprint('bootstrap mean',bs_std)\n\n#Confidence interval\nprint('confidence interval',confidence_interval(bs_replicates,[2.5,97.5]))\n\n\n# Make a histogram of the results\n_ = plt.hist(bs_replicates, bins=50, normed=True)\n_ = plt.xlabel('mean annual water level at poondi (mm)')\n_ = plt.ylabel('PDF')\n\n# Show the plot\nplt.show()","bd1f4eb4":"# Take 10,000 bootstrap replicates of the mean: bs_replicates\nbs_replicates = draw_bs_reps(df_levels['CHOLAVARAM'],np.mean,10000)\n\n# Compute and print SEM\nsem = np.std(df_levels['CHOLAVARAM']) \/ np.sqrt(len(df_levels))\nprint('normalized mean',sem)\n\n# Compute and print standard deviation of bootstrap replicates\nbs_std = np.std(bs_replicates)\nprint('bootstrap mean',bs_std)\n\n#Confidence interval\nprint('confidence interval',confidence_interval(bs_replicates,[2.5,97.5]))\n\n\n# Make a histogram of the results\n_ = plt.hist(bs_replicates, bins=50, normed=True)\n_ = plt.xlabel('mean annual water level at cholavaram (mm)')\n_ = plt.ylabel('PDF')\n\n# Show the plot\nplt.show()","60d6125e":"# Take 10,000 bootstrap replicates of the mean: bs_replicates\nbs_replicates = draw_bs_reps(df_levels['REDHILLS'],np.mean,10000)\n\n# Compute and print SEM\nsem = np.std(df_levels['REDHILLS']) \/ np.sqrt(len(df_levels))\nprint('normalized mean',sem)\n\n# Compute and print standard deviation of bootstrap replicates\nbs_std = np.std(bs_replicates)\nprint('bootstrap mean',bs_std)\n\n#Confidence interval\nprint('confidence interval',confidence_interval(bs_replicates,[2.5,97.5]))\n\n\n# Make a histogram of the results\n_ = plt.hist(bs_replicates, bins=50, normed=True)\n_ = plt.xlabel('mean annual water level at in redhills (mm)')\n_ = plt.ylabel('PDF')\n\n# Show the plot\nplt.show()","d88e4420":"# Take 10,000 bootstrap replicates of the mean: bs_replicates\nbs_replicates = draw_bs_reps(df_levels['CHEMBARAMBAKKAM'],np.mean,10000)\n\n# Compute and print SEM\nsem = np.std(df_levels['CHEMBARAMBAKKAM']) \/ np.sqrt(len(df_levels))\nprint('normalized mean',sem)\n\n# Compute and print standard deviation of bootstrap replicates\nbs_std = np.std(bs_replicates)\nprint('bootstrap mean',bs_std)\n\n#Confidence interval\nprint('confidence interval',confidence_interval(bs_replicates,[2.5,97.5]))\n\n\n# Make a histogram of the results\n_ = plt.hist(bs_replicates, bins=50, normed=True)\n_ = plt.xlabel('mean annual water level at in chembarambakkam')\n_ = plt.ylabel('PDF')\n\n# Show the plot\nplt.show()","48ed6ca3":"# The main focus of these notebook is to find confidence interval for \"chennai reservoir levels\"","c44b7c22":"## Bootstrapping"}}