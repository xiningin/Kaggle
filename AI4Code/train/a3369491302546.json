{"cell_type":{"dff2adcf":"code","97f6290c":"code","1b2cbda4":"code","a21fb7d4":"code","7bc250d8":"code","df4d2040":"code","f1e06ad8":"code","18166504":"code","52e19029":"code","340bc556":"code","219f3970":"code","f1a14d74":"code","3f533972":"markdown","77f10bd1":"markdown","4aa40a09":"markdown","14358795":"markdown","75421e46":"markdown","4dceef1d":"markdown"},"source":{"dff2adcf":"# init\nimport os\nimport numpy as np\nimport pandas as pd\nimport time\nimport warnings \n\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n\nwarnings.filterwarnings('ignore')","97f6290c":"# load metadata\nt1 = time.time()\ndf = pd.read_csv('..\/input\/CORD-19-research-challenge\/metadata.csv')\nt2 = time.time()\nprint('Elapsed time:', t2-t1)","1b2cbda4":"# define keyword\nmy_keyword = 'dexamethason'","a21fb7d4":"def word_finder(i_word, i_text):\n    found = (str(i_text).lower()).find(str(i_word).lower()) # avoid case sensitivity\n    if found == -1:\n        result = 0\n    else:\n        result = 1\n    return result\n\n# partial function for mapping\nword_indicator_partial = lambda text: word_finder(my_keyword, text)\n# build indicator vector (0\/1) of hits\nkeyword_indicator = np.asarray(list(map(word_indicator_partial, df.abstract)))","7bc250d8":"# number of hits\nprint('Number of hits for keyword <', my_keyword, '> : ', keyword_indicator.sum())","df4d2040":"# add index vector as additional column\ndf['selection'] = keyword_indicator\n\n# select only hits from data frame\ndf_hits = df[df['selection']==1]","f1e06ad8":"# show results\ndf_hits","18166504":"text = \" \".join(abst for abst in df_hits.abstract)","52e19029":"stopwords = set(STOPWORDS)","340bc556":"wordcloud = WordCloud(stopwords=stopwords, max_font_size=50, max_words=500,\n                      width = 600, height = 400,\n                      background_color=\"white\").generate(text)\nplt.figure(figsize=(12,8))\nplt.imshow(wordcloud, interpolation=\"bilinear\")\nplt.axis(\"off\")\nplt.show()","219f3970":"# show all abstracts\nn = df_hits.shape[0]\nfor i in range(0,n):\n    print(df_hits.title.iloc[i],\":\\n\")\n    print(df_hits.abstract.iloc[i])\n    print('\\n')","f1a14d74":"# make available for download\ndf_hits.to_csv('hits.csv')","3f533972":"# Dexamethasone - a new hope for treatment of COVID-19?\n\nWikipedia: [https:\/\/en.wikipedia.org\/wiki\/Dexamethasone](http:\/\/en.wikipedia.org\/wiki\/Dexamethasone)","77f10bd1":"# Show all abstracts and save to file","4aa40a09":"# Wordcloud of abstracts","14358795":"### Search for specific keyword in abstracts","75421e46":"### Import data","4dceef1d":"# Filter articles by keywords"}}