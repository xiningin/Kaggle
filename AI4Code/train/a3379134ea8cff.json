{"cell_type":{"43bd804d":"code","4d68d809":"code","889f407d":"code","d749f2f8":"code","772b8c4c":"code","fbe584ae":"code","5c9883c3":"code","2f1e92cd":"code","24b1cb91":"code","a8a69646":"code","8775a2f4":"code","cb612334":"code","d259f03e":"code","853d68ef":"code","7d67e7f8":"code","53387c1b":"code","00e01c0e":"code","bc13b1c4":"code","35acbfaf":"code","a6c1dae6":"code","0a46e8ef":"code","bcbb22f7":"code","1493e45a":"code","a8ea397f":"code","1e8bc343":"code","d3dc3067":"code","70b0e266":"code","868b475c":"code","34660551":"code","1e0443b0":"code","fed41300":"code","9fcdb1da":"code","e040bbf5":"code","dba828fe":"code","4d01c9cb":"code","83086f40":"code","77fbc233":"code","9e32c07f":"code","faf8cd68":"code","8eb5dd10":"code","4b6f4e9f":"code","e60df00f":"code","82ecccc4":"code","9fe01ac9":"code","e657d062":"code","59f9c5ad":"code","38457999":"code","fbbf5de5":"code","7c83c65c":"code","b19fe032":"code","cca5ef39":"code","0cc142e1":"code","64b6c8a8":"code","2661f3f3":"code","90879fa7":"code","178e99b1":"code","d763a6b5":"code","3be1ec30":"code","4a1f1be1":"code","52ff5e51":"code","1855b682":"code","9938e8e8":"code","f8fdab6e":"code","5385241f":"code","b023a552":"code","26f874a4":"code","388c051b":"code","50b28f65":"code","1132e856":"code","d301048b":"code","4a5a661b":"code","424831a3":"code","d58d56d0":"code","f46501f7":"code","a2caa5ad":"code","cd7f2a03":"code","4d32e5fc":"code","d865c03d":"code","dcf5fad7":"code","bbcfc8bc":"code","52328c04":"code","cedb445e":"code","9d73d73b":"code","535c68aa":"code","e599bc8f":"code","2a345a28":"code","058d8e2e":"code","3aaeb7c8":"code","ee318ce5":"code","a49b1e87":"code","e0ca0eb7":"code","b5d668f5":"code","4e513613":"code","c009b4af":"code","f2683a1f":"code","757100e7":"markdown","b890abc2":"markdown","f6fa4897":"markdown","6e374dac":"markdown","39a4d775":"markdown","70361cce":"markdown","572bfd60":"markdown","b7c97d92":"markdown","aa114290":"markdown","5c6a57e2":"markdown","eb0ecb11":"markdown","152c5b8b":"markdown","2143e0b1":"markdown","b9f973cd":"markdown","2e0405cf":"markdown","36243148":"markdown","514c57cf":"markdown","28986ffe":"markdown","c3860ce9":"markdown","a0588554":"markdown","a71008b5":"markdown","598b8fdd":"markdown","fb26c48f":"markdown","7ff1a6b4":"markdown"},"source":{"43bd804d":"# The first step import all dataset and set the Date as index except two all_stock files\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\n% matplotlib inline","4d68d809":"all_stock1=pd.read_csv('..\/input\/all_stocks_2006-01-01_to_2018-01-01.csv')","889f407d":"all_stock1.head()","d749f2f8":"all_stock2=pd.read_csv('..\/input\/all_stocks_2017-01-01_to_2018-01-01.csv')","772b8c4c":"all_stock2.head()","fbe584ae":"AABA=pd.read_csv('..\/input\/AABA_2006-01-01_to_2018-01-01.csv').set_index('Date')","5c9883c3":"AABA.head()","2f1e92cd":"AAPL=pd.read_csv('..\/input\/AAPL_2006-01-01_to_2018-01-01.csv').set_index('Date')","24b1cb91":"AAPL.head()","a8a69646":"AMZN=pd.read_csv('..\/input\/AMZN_2006-01-01_to_2018-01-01.csv').set_index('Date')","8775a2f4":"AMZN.head()","cb612334":"AXP=pd.read_csv('..\/input\/AXP_2006-01-01_to_2018-01-01.csv').set_index('Date')","d259f03e":"AXP.head()","853d68ef":"BA=pd.read_csv('..\/input\/BA_2006-01-01_to_2018-01-01.csv').set_index('Date')","7d67e7f8":"BA.head()","53387c1b":"CAT=pd.read_csv('..\/input\/CAT_2006-01-01_to_2018-01-01.csv').set_index('Date')","00e01c0e":"CAT.head()","bc13b1c4":"CSCO=pd.read_csv('..\/input\/CSCO_2006-01-01_to_2018-01-01.csv').set_index('Date')","35acbfaf":"CSCO.head()","a6c1dae6":"CVX=pd.read_csv('..\/input\/CVX_2006-01-01_to_2018-01-01.csv').set_index('Date')","0a46e8ef":"CVX.head()","bcbb22f7":"DIS=pd.read_csv('..\/input\/DIS_2006-01-01_to_2018-01-01.csv').set_index('Date')","1493e45a":"DIS.head()","a8ea397f":"GE=pd.read_csv('..\/input\/GE_2006-01-01_to_2018-01-01.csv').set_index('Date')","1e8bc343":"GE.head()","d3dc3067":"GOOGL=pd.read_csv('..\/input\/GOOGL_2006-01-01_to_2018-01-01.csv').set_index('Date')","70b0e266":"GOOGL.head()","868b475c":"GS=pd.read_csv('..\/input\/GS_2006-01-01_to_2018-01-01.csv').set_index('Date')","34660551":"GS.head()","1e0443b0":"HD=pd.read_csv('..\/input\/HD_2006-01-01_to_2018-01-01.csv').set_index('Date')","fed41300":"HD.head()","9fcdb1da":"IBM=pd.read_csv('..\/input\/IBM_2006-01-01_to_2018-01-01.csv').set_index('Date')","e040bbf5":"IBM.head()","dba828fe":"INTC=pd.read_csv('..\/input\/INTC_2006-01-01_to_2018-01-01.csv').set_index('Date')","4d01c9cb":"INTC.head()","83086f40":"JNJ=pd.read_csv('..\/input\/JNJ_2006-01-01_to_2018-01-01.csv').set_index('Date')","77fbc233":"JNJ.head()","9e32c07f":"JPM=pd.read_csv('..\/input\/JPM_2006-01-01_to_2018-01-01.csv').set_index('Date')","faf8cd68":"JPM.head()","8eb5dd10":"KO=pd.read_csv('..\/input\/KO_2006-01-01_to_2018-01-01.csv').set_index('Date')","4b6f4e9f":"KO.head()","e60df00f":"MCD=pd.read_csv('..\/input\/MCD_2006-01-01_to_2018-01-01.csv').set_index('Date')","82ecccc4":"MCD.head()","9fe01ac9":"MMM=pd.read_csv('..\/input\/MMM_2006-01-01_to_2018-01-01.csv').set_index('Date')","e657d062":"MMM.head()","59f9c5ad":"MRK=pd.read_csv('..\/input\/MRK_2006-01-01_to_2018-01-01.csv').set_index('Date')","38457999":"MRK.head()","fbbf5de5":"MSFT=pd.read_csv('..\/input\/MSFT_2006-01-01_to_2018-01-01.csv').set_index('Date')","7c83c65c":"MSFT.head()","b19fe032":"NKE=pd.read_csv('..\/input\/NKE_2006-01-01_to_2018-01-01.csv').set_index('Date')","cca5ef39":"NKE.head()","0cc142e1":"PEE=pd.read_csv('..\/input\/PFE_2006-01-01_to_2018-01-01.csv').set_index('Date')","64b6c8a8":"PEE.head()","2661f3f3":"PG=pd.read_csv('..\/input\/PG_2006-01-01_to_2018-01-01.csv').set_index('Date')","90879fa7":"PG.head()","178e99b1":"TRV=pd.read_csv('..\/input\/TRV_2006-01-01_to_2018-01-01.csv').set_index('Date')","d763a6b5":"TRV.head()","3be1ec30":"UNH=pd.read_csv('..\/input\/UNH_2006-01-01_to_2018-01-01.csv').set_index('Date')","4a1f1be1":"UNH.head()","52ff5e51":"UTX=pd.read_csv('..\/input\/UTX_2006-01-01_to_2018-01-01.csv').set_index('Date')","1855b682":"UTX.head()","9938e8e8":"VZ=pd.read_csv('..\/input\/VZ_2006-01-01_to_2018-01-01.csv').set_index('Date')","f8fdab6e":"VZ.head()","5385241f":"WMT=pd.read_csv('..\/input\/WMT_2006-01-01_to_2018-01-01.csv').set_index('Date')","b023a552":"WMT.head()","26f874a4":"XOM=pd.read_csv('..\/input\/XOM_2006-01-01_to_2018-01-01.csv').set_index('Date')","388c051b":"XOM.head()","50b28f65":"tickers=['AABA','AAPL','AMZN','AXP','BA','CAT','CSCO','CVX'\n        ,'DIS','GE','GOOGL','GS','HD','IBM','INTC','JNJ',\n         'JPM','KO','MCD','MMM','MRK','MSFT','NKE','PEE',\n         'PG','TRV','UNH','UTX','VZ','WMT','XOM']","1132e856":"all_stock=pd.concat([AABA.iloc[:,:-1],AAPL.iloc[:,:-1],AMZN.iloc[:,:-1],AXP.iloc[:,:-1],BA.iloc[:,:-1],CAT.iloc[:,:-1],\n                     CSCO.iloc[:,:-1],CVX.iloc[:,:-1],DIS.iloc[:,:-1],GE.iloc[:,:-1],GOOGL.iloc[:,:-1],GS.iloc[:,:-1],\n                     HD.iloc[:,:-1],IBM.iloc[:,:-1], INTC.iloc[:,:-1],JNJ.iloc[:,:-1],JPM.iloc[:,:-1],KO.iloc[:,:-1],\n                     MCD.iloc[:,:-1],MMM.iloc[:,:-1],MRK.iloc[:,:-1],MSFT.iloc[:,:-1],NKE.iloc[:,:-1],PEE.iloc[:,:-1],\n                     PG.iloc[:,:-1],TRV.iloc[:,:-1], UNH.iloc[:,:-1],UTX.iloc[:,:-1],VZ.iloc[:,:-1],WMT.iloc[:,:-1],\n                     XOM.iloc[:,:-1]],axis=1,keys=tickers,sort=True)","d301048b":"all_stock.columns.names = ['Bank Ticker','Stock Info']\nall_stock.head()","4a5a661b":"# Try to find the average open,close price for each stock from 2006-01-01 to 2018-01-01\nall_stock1.groupby('Name',as_index=False).mean()[['Name','Open','Close']]","424831a3":"plt.figure()\nL=all_stock1.groupby('Name',as_index=False).mean()[['Name','Open','Close']]\nx=np.array(L['Name'])\ny=np.array(L['Open'])\nz=np.array(L['Close'])\nplt.subplot(3,1,1)\nplt.plot(x,y)\nplt.xticks(L['Name'],rotation='vertical')\nplt.title('Average open price for each stock')\nplt.xlabel('Stock Name')\nplt.ylabel('Average open price')\nplt.subplot(3, 1, 3)\nplt.plot(x,z)\nplt.xticks(L['Name'],rotation='vertical')\nplt.title('Average close price for each stock')\nplt.xlabel('Stock Name')\nplt.ylabel('Average close price')\nplt.show()","d58d56d0":"'''for all stocks in the time period from 2006-01-01 to 2009-12-31'''\n# What is the max Open price for each stock throughout the time period\nnew_df_allstock1=all_stock1[(all_stock1['Date']>='2006-01-01')&(all_stock1['Date']<='2009-12-31')]#Find the data in the time period\nnew_df_allstock1.loc[new_df_allstock1.groupby('Name')['Open'].idxmax()][['Name','Date','Open']]#show the dataframe with max open price for each stock ","f46501f7":"L=new_df_allstock1.loc[new_df_allstock1.groupby('Name')['Open'].idxmax()][['Name','Date','Open']]\nx=np.array(L['Name'])\ny=np.array(L['Open'])\nplt.plot(x,y,'o',color='black')\nplt.xticks(L['Name'],rotation='vertical')\nplt.title('Max open price for each stock from 2006 to 2009')\nplt.xlabel('Stock Name')\nplt.ylabel('Max open price')\nplt.show()","a2caa5ad":"# Try to find returns for every stock each day which means how much the stock earns all losses each day\nreturns=pd.DataFrame()\nfor tick in tickers:\n    returns[tick+' Return'] = all_stock[tick]['Close'].pct_change()\nreturns.head()","cd7f2a03":"# Shows the return of GOOGL in year 2017\nsns.distplot(returns.loc['2017-01-01':'2017-12-31']['GOOGL Return'],color='blue',bins=100)","4d32e5fc":"# The trend of close price from 2006-01-01 to 2018-01-01 for all stocks\nsns.set_style('whitegrid')\nfor tick in tickers:\n    all_stock[tick]['Close'].plot(figsize=(12,11),label=tick)\nplt.legend()","d865c03d":"# Combine the GOOGL and AMZN as one DataFrame\nticker1=['GOOGL','AMZN']\ntwo_stock=pd.concat([AMZN,GOOGL],axis=1,keys=ticker1)\ntwo_stock.columns.names=['Stock ticker','Stock Info']","dcf5fad7":"two_stock.head()","bbcfc8bc":"# try to find the highest open price of both stocks for each year\nYear=[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\nx=np.array(Year)\nAMZN_open_max=[AMZN['2006':'2007']['Open'].max(),AMZN['2007':'2008']['Open'].max(),AMZN['2008':'2009']['Open'].max(),\n    AMZN['2009':'2010']['Open'].max(),AMZN['2010':'2011']['Open'].max(),AMZN['2011':'2012']['Open'].max(),\n    AMZN['2012':'2013']['Open'].max(),AMZN['2013':'2014']['Open'].max(),AMZN['2014':'2015']['Open'].max(),\n    AMZN['2015':'2016']['Open'].max(),AMZN['2016':'2017']['Open'].max(),AMZN['2017':'2018']['Open'].max()]\ny=np.array(AMZN_open_max)\nGOOGL_open_max=[GOOGL['2006':'2007']['Open'].max(),GOOGL['2007':'2008']['Open'].max(),GOOGL['2008':'2009']['Open'].max(),\n    GOOGL['2009':'2010']['Open'].max(),GOOGL['2010':'2011']['Open'].max(),GOOGL['2011':'2012']['Open'].max(),\n    GOOGL['2012':'2013']['Open'].max(),GOOGL['2013':'2014']['Open'].max(),GOOGL['2014':'2015']['Open'].max(),\n    GOOGL['2015':'2016']['Open'].max(),GOOGL['2016':'2017']['Open'].max(),GOOGL['2017':'2018']['Open'].max()]\nz=np.array(GOOGL_open_max)\nplt.figure()\nplt.plot(x, y, linestyle='solid',label=\"AMZN\")\nplt.plot(x, z, linestyle='dashed',label=\"GOOGL\")\nplt.title('Highest Open Price Each year')\nplt.xlabel('Year')\nplt.ylabel('Open Price')\nplt.legend()","52328c04":"# try to find the lowest volume of both stocks for each year\nYear=[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\nx=np.array(Year)\nAMZN_open_min=[AMZN['2006':'2007']['Volume'].min(),AMZN['2007':'2008']['Volume'].min(),AMZN['2008':'2009']['Volume'].min(),\n    AMZN['2009':'2010']['Volume'].min(),AMZN['2010':'2011']['Volume'].min(),AMZN['2011':'2012']['Volume'].min(),\n    AMZN['2012':'2013']['Volume'].min(),AMZN['2013':'2014']['Volume'].min(),AMZN['2014':'2015']['Volume'].min(),\n    AMZN['2015':'2016']['Volume'].min(),AMZN['2016':'2017']['Volume'].min(),AMZN['2017':'2018']['Volume'].min()]\ny=np.array(AMZN_open_min)\nGOOGL_open_min=[GOOGL['2006':'2007']['Volume'].min(),GOOGL['2007':'2008']['Volume'].min(),GOOGL['2008':'2009']['Volume'].min(),\n    GOOGL['2009':'2010']['Volume'].min(),GOOGL['2010':'2011']['Volume'].min(),GOOGL['2011':'2012']['Volume'].min(),\n    GOOGL['2012':'2013']['Volume'].min(),GOOGL['2013':'2014']['Volume'].min(),GOOGL['2014':'2015']['Volume'].min(),\n    GOOGL['2015':'2016']['Volume'].min(),GOOGL['2016':'2017']['Volume'].min(),GOOGL['2017':'2018']['Volume'].min()]\nz=np.array(GOOGL_open_min)\n\nplt.figure()\nplt.plot(x, y, linestyle='solid',label=\"AMZN\")\nplt.plot(x, z, linestyle='dashed',label=\"GOOGL\")\nplt.title('Lowest Volume')\nplt.xlabel('Year')\nplt.ylabel('Close Price')\nplt.legend()","cedb445e":"# compare the close price\nfor ticker in ticker1:\n        two_stock[ticker]['Close'].plot(figsize=(12,4),label=ticker)\nplt.legend()","9d73d73b":"# compare the open price\nfor ticker in ticker1:\n        two_stock[ticker]['Open'].plot(figsize=(12,4),label=ticker)\nplt.legend()","535c68aa":"# try to find out the relationship between close price and 30-day average close price for stocks from 2010 to 2011\nplt.figure(figsize=(12,6))\nAMZN['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg AMZN')\nAMZN['Close'].loc['2010-01-01':'2011-01-01'].plot(label='AMZN CLOSE')\nGOOGL['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg GOOGL')\nGOOGL['Close'].loc['2010-01-01':'2011-01-01'].plot(label='GOOGL CLOSE')\nplt.legend()","e599bc8f":"# compare the volume trend\nplt.figure(figsize=(12,6))\nAMZN['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='AMZN Volume')\nGOOGL['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='GOOGL Volume')\nplt.legend()","2a345a28":"# show the correlation between open price of stocks\nsns.heatmap(two_stock.xs(key='Open',axis=1,level='Stock Info').corr(),annot=True)","058d8e2e":"# Combine GS BA IBM CVX and MMM as one DataFrame\nticker2=['GS','BA','IBM','CVX','MMM']\nfive_stock=pd.concat([GS,BA,IBM,CVX,MMM],axis=1,keys=ticker2)\nfive_stock.columns.names=['Stock ticker','Stock Info']","3aaeb7c8":"five_stock.head()","ee318ce5":"# try to find the highest open price of both stocks for each year\nYear=[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\nx=np.array(Year)\nGS_open_max=[GS['2006':'2007']['Open'].max(),GS['2007':'2008']['Open'].max(),GS['2008':'2009']['Open'].max(),\n    GS['2009':'2010']['Open'].max(),GS['2010':'2011']['Open'].max(),GS['2011':'2012']['Open'].max(),\n    GS['2012':'2013']['Open'].max(),GS['2013':'2014']['Open'].max(),GS['2014':'2015']['Open'].max(),\n    GS['2015':'2016']['Open'].max(),GS['2016':'2017']['Open'].max(),GS['2017':'2018']['Open'].max()]\ny=np.array(GS_open_max)\n\nBA_open_max=[BA['2006':'2007']['Open'].max(),BA['2007':'2008']['Open'].max(),BA['2008':'2009']['Open'].max(),\n    BA['2009':'2010']['Open'].max(),BA['2010':'2011']['Open'].max(),BA['2011':'2012']['Open'].max(),\n    BA['2012':'2013']['Open'].max(),BA['2013':'2014']['Open'].max(),BA['2014':'2015']['Open'].max(),\n    BA['2015':'2016']['Open'].max(),BA['2016':'2017']['Open'].max(),BA['2017':'2018']['Open'].max()]\nz=np.array(BA_open_max)\n\nIBM_open_max=[IBM['2006':'2007']['Open'].max(),IBM['2007':'2008']['Open'].max(),IBM['2008':'2009']['Open'].max(),\n    IBM['2009':'2010']['Open'].max(),IBM['2010':'2011']['Open'].max(),IBM['2011':'2012']['Open'].max(),\n    IBM['2012':'2013']['Open'].max(),IBM['2013':'2014']['Open'].max(),IBM['2014':'2015']['Open'].max(),\n    IBM['2015':'2016']['Open'].max(),IBM['2016':'2017']['Open'].max(),IBM['2017':'2018']['Open'].max()]\nm=np.array(IBM_open_max)\n\nCVX_open_max=[CVX['2006':'2007']['Open'].max(),CVX['2007':'2008']['Open'].max(),CVX['2008':'2009']['Open'].max(),\n    CVX['2009':'2010']['Open'].max(),CVX['2010':'2011']['Open'].max(),CVX['2011':'2012']['Open'].max(),\n    CVX['2012':'2013']['Open'].max(),CVX['2013':'2014']['Open'].max(),CVX['2014':'2015']['Open'].max(),\n    CVX['2015':'2016']['Open'].max(),CVX['2016':'2017']['Open'].max(),CVX['2017':'2018']['Open'].max()]\nn=np.array(CVX_open_max)\n\nMMM_open_max=[MMM['2006':'2007']['Open'].max(),MMM['2007':'2008']['Open'].max(),MMM['2008':'2009']['Open'].max(),\n    MMM['2009':'2010']['Open'].max(),MMM['2010':'2011']['Open'].max(),MMM['2011':'2012']['Open'].max(),\n    MMM['2012':'2013']['Open'].max(),MMM['2013':'2014']['Open'].max(),MMM['2014':'2015']['Open'].max(),\n    MMM['2015':'2016']['Open'].max(),MMM['2016':'2017']['Open'].max(),MMM['2017':'2018']['Open'].max()]\nl=np.array(MMM_open_max)\n\nplt.figure()\nplt.plot(x, y, linestyle='solid',label=\"GS\")\nplt.plot(x, z, linestyle='dashed',label=\"BA\")\nplt.plot(x, m, linestyle='dashdot',label=\"IBM\")\nplt.plot(x, n, linestyle='dotted',label=\"CVX\")\nplt.plot(x, l, linestyle='dashed',label=\"MMM\")\nplt.title('Highest Open Price Each year')\nplt.xlabel('Year')\nplt.ylabel('Open Price')\nplt.legend(loc=2, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.)","a49b1e87":"# try to find the lowest volume of both stocks for each year\nYear=[2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]\nx=np.array(Year)\nGS_volume_min=[GS['2006':'2007']['Volume'].min(),GS['2007':'2008']['Volume'].min(),GS['2008':'2009']['Volume'].min(),\n    GS['2009':'2010']['Volume'].min(),GS['2010':'2011']['Volume'].min(),GS['2011':'2012']['Volume'].min(),\n    GS['2012':'2013']['Volume'].min(),GS['2013':'2014']['Volume'].min(),GS['2014':'2015']['Volume'].min(),\n    GS['2015':'2016']['Volume'].min(),GS['2016':'2017']['Volume'].min(),GS['2017':'2018']['Volume'].min()]\ny=np.array(GS_volume_min)\n\nBA_volume_min=[BA['2006':'2007']['Volume'].min(),BA['2007':'2008']['Volume'].min(),BA['2008':'2009']['Volume'].min(),\n    BA['2009':'2010']['Volume'].min(),BA['2010':'2011']['Volume'].min(),BA['2011':'2012']['Volume'].min(),\n    BA['2012':'2013']['Volume'].min(),BA['2013':'2014']['Volume'].min(),BA['2014':'2015']['Volume'].min(),\n    BA['2015':'2016']['Volume'].min(),BA['2016':'2017']['Volume'].min(),BA['2017':'2018']['Volume'].min()]\nz=np.array(GS_volume_min)\n\nIBM_volume_min=[IBM['2006':'2007']['Volume'].min(),IBM['2007':'2008']['Volume'].min(),IBM['2008':'2009']['Volume'].min(),\n    IBM['2009':'2010']['Volume'].min(),IBM['2010':'2011']['Volume'].min(),IBM['2011':'2012']['Volume'].min(),\n    IBM['2012':'2013']['Volume'].min(),IBM['2013':'2014']['Volume'].min(),IBM['2014':'2015']['Volume'].min(),\n    IBM['2015':'2016']['Volume'].min(),IBM['2016':'2017']['Volume'].min(),IBM['2017':'2018']['Volume'].min()]\nm=np.array(IBM_volume_min)\n\nCVX_volume_min=[CVX['2006':'2007']['Volume'].min(),CVX['2007':'2008']['Volume'].min(),CVX['2008':'2009']['Volume'].min(),\n    CVX['2009':'2010']['Volume'].min(),CVX['2010':'2011']['Volume'].min(),CVX['2011':'2012']['Volume'].min(),\n    CVX['2012':'2013']['Volume'].min(),CVX['2013':'2014']['Volume'].min(),CVX['2014':'2015']['Volume'].min(),\n    CVX['2015':'2016']['Volume'].min(),CVX['2016':'2017']['Volume'].min(),CVX['2017':'2018']['Volume'].min()]\nn=np.array(CVX_volume_min)\n\nMMM_volume_min=[MMM['2006':'2007']['Volume'].min(),MMM['2007':'2008']['Volume'].min(),MMM['2008':'2009']['Volume'].min(),\n    MMM['2009':'2010']['Volume'].min(),MMM['2010':'2011']['Volume'].min(),MMM['2011':'2012']['Volume'].min(),\n    MMM['2012':'2013']['Volume'].min(),MMM['2013':'2014']['Volume'].min(),MMM['2014':'2015']['Volume'].min(),\n    MMM['2015':'2016']['Volume'].min(),MMM['2016':'2017']['Volume'].min(),MMM['2017':'2018']['Volume'].min()]\nl=np.array(MMM_volume_min)\n\nplt.figure()\nplt.plot(x, y, linestyle='solid',label=\"GS\")\nplt.plot(x, z, linestyle='dashed',label=\"BA\")\nplt.plot(x, m, linestyle='dashdot',label=\"IBM\")\nplt.plot(x, n, linestyle='dotted',label=\"CVX\")\nplt.plot(x, l, linestyle='dashed',label=\"MMM\")\nplt.title('Highest Open Price Each year')\nplt.xlabel('Year')\nplt.ylabel('Open Price')\nplt.legend(loc='best',frameon=False)","e0ca0eb7":"# compare close price over year\nfor ticker in ticker2:\n        five_stock[ticker]['Close'].plot(figsize=(12,4),label=ticker)\nplt.legend()","b5d668f5":"# compare open price over year\nfor ticker in ticker2:\n        five_stock[ticker]['Open'].plot(figsize=(12,4),label=ticker)\nplt.legend()","4e513613":"# try to find out the relationship between close price and 30-day average close price for stocks from 2010 to 2011\nplt.figure(figsize=(12,6))\nGS['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg GS')\nGS['Close'].loc['2010-01-01':'2011-01-01'].plot(label='GS CLOSE')\nBA['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg BA')\nBA['Close'].loc['2010-01-01':'2011-01-01'].plot(label='BA CLOSE')\nIBM['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg IBM')\nIBM['Close'].loc['2010-01-01':'2011-01-01'].plot(label='IBM CLOSE')\nCVX['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg CVX')\nCVX['Close'].loc['2010-01-01':'2011-01-01'].plot(label='CVX CLOSE')\nMMM['Close'].loc['2010-01-01':'2011-01-01'].rolling(window=30).mean().plot(label='30 Day Avg MMM')\nMMM['Close'].loc['2010-01-01':'2011-01-01'].plot(label='MMM CLOSE')\nplt.legend(loc=2, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.)","c009b4af":"# compare volume trend\nplt.figure(figsize=(12,6))\nGS['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='GS Volume')\nBA['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='BA Volume')\nIBM['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='IBM Volume')\nCVX['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='CVX Volume')\nMMM['Volume'].loc['2017-01-01':'2018-01-01'].plot(label='MMM Volume')\nplt.legend()","f2683a1f":"# show the correlation between open price of stocks\nsns.heatmap(five_stock.xs(key='Open',axis=1,level='Stock Info').corr(),annot=True)","757100e7":"As the heatmap shown above, the correlation between the open price of these two stocks is 0.97.","b890abc2":"As shown above,the open price of GS was highest in 2006 and BA became the highest one at the end while it was the almost lowest one at the beginning.","f6fa4897":"As Shown above, MMM always had the lowest volume over years and till 2018, the lowest volume of each stock in the year is almost\nsame","6e374dac":"As shown above, the close price of GS is less stable around average close price than others.","39a4d775":"As shown above, the figures illustrate the relationship between diffrent stocks' open price.","70361cce":"As shown above, in 2006, the highest open price of GS in the year is highest among the five stocks, however, at the end which is \n2018, the highest open price of BA became the highest one.","572bfd60":"Same trend for the Open price of these two stocks in the time period","b7c97d92":"As shown above,the close price of GS was highest in 2006 and BA became the highest one at the end while it was the almost lowest one at the beginning.","aa114290":"'''concatenate the stock dataframes together to a single \ndataframe. Set the keys as the ticker names'''","5c6a57e2":"# Question 1: upload .csv files into dataframe by using pd.read_csv()","eb0ecb11":"I'm going to use five stocks which are GS BA IBM CVX and MMM because they had the highest open price during 2006 and 2009 except \nGOOGL and AMZN","152c5b8b":"For question 2, I analyzed average open,close price for each stock from 2006-01-01 to 2018-01-01 and visualized the result; \nWhat is the max Open price for each stock throughout the time period from 2006-01-01 to 2009-12-31;Try to find returns for every stock each day which means how much the stock earns all losses each day and found the trend of close price from 2006-01-01 to 2018-01-01 for all stocks by visualization.","2143e0b1":"As shown above, the Close price of AMZN is generally higher than GOOGL however GOOGL goes up at the end of the time period \nand beyonds the AMZN","b9f973cd":"# Question4 Take five stocks of your choice and create the same type of report stated in question 3.","2e0405cf":"As shown above, the close price of AMZN is more stable around the 30 days average of the stock close price than GOOGL\nfrom 2010 to 2011","36243148":"Based on the last step, I'm going to use GOOGL and AMZN stocks which have highest average open price and highest average close price.","514c57cf":"As shown above, the return of GOOGL stock reaches the top point at around the point a little bit more than 0.00","28986ffe":"As shown above, the highest open price of AMZN gradually went up over year finally exceeded GOOGL.","c3860ce9":"Fot question 1, I uploaded all stock files by using pd.read_csv() function and concatenate all single stock files into one DataFrame by using pd.concat() function and set the Date as index.","a0588554":"As shown Above, volume increases more sharply for AMZN stock from 2017 to 2018 than GOOGL","a71008b5":"# Q3 Perform descriptive analysis for any two stock from given dataset and compare the analysis.","598b8fdd":"As shown Above, the volume of IBM increases more sharply.","fb26c48f":"# Question 2 EDA","7ff1a6b4":"As shown above, the lowest volume of  GOOGL over year is always lower than AMZN especially in 2009"}}