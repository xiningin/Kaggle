{"cell_type":{"380d4440":"code","18d40729":"code","e20059f4":"code","4437a101":"markdown"},"source":{"380d4440":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\ndata = pd.read_csv('..\/input\/ottawa_bike_counters.csv')\ndata.Date = pd.to_datetime(data.Date)\nfor col in data.columns:\n    if col != 'Date':\n        data.plot(x='Date',y=col, figsize=(32,8),)\n\ndata.describe()","18d40729":"### Weekday Tendancies \nimport calendar\nimport matplotlib.pyplot as plt\n\n\nsums = [0 for i in range(7)]\ncounts = [0 for i in range(7)]\ndata = data.fillna(0)\n\nfor row in range(data.shape[0]):\n    day_of_week = data.loc[row,'Date'].weekday()\n    for col in range(data.shape[1]):\n        if col == 0: continue\n        sums[day_of_week] += data.loc[row,data.columns[col]]\n        counts[day_of_week] += 1\n        \naverages = [summ\/count for summ, count in zip(sums, counts)]\n\n\nfor day_number in range(7):\n    print(calendar.day_name[day_number], counts[day_number], ' ', sums[day_number], ' ', averages[day_number])\n    \nplt.figure(figsize=(10,5))\nplt.bar(list(range(7)),averages)\nplt.xticks(list(range(7)), [calendar.day_name[day] for day in range(7)])\nplt.show()","e20059f4":"### Monthly Tendancies \nimport calendar\nimport matplotlib.pyplot as plt\n\n\nsums = [0 for i in range(12)]\ncounts = [0 for i in range(12)]\ndata = data.fillna(0)\n\nfor row in range(data.shape[0]):\n    month_of_year = data.loc[row,'Date'].month - 1\n    for col in range(data.shape[1]):\n        if col == 0: continue\n        sums[month_of_year] += data.loc[row,data.columns[col]]\n        counts[month_of_year] += 1\n        \naverages = [summ\/count for summ, count in zip(sums, counts)]\n\nfor month_of_year in range(12):\n    print(calendar.month_name[month_of_year + 1], counts[month_of_year], ' ', sums[month_of_year], ' ', averages[month_of_year])\n    \nplt.figure(figsize=(15,5))\nplt.bar(list(range(12)),averages)\nplt.xticks(list(range(12)), [calendar.month_name[month + 1] for month in range(12)])\nplt.show()","4437a101":"### Observations ###\n* Small and big periodic natures, possibly yearly and weekly. \n* Growth year over year\n* Corelation with weather (temp, rain or wind)\n* Predictable nature"}}