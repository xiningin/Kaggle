{"cell_type":{"32e45c03":"code","4e279aa2":"code","c370ad16":"code","3d14e9e0":"code","2420d8f0":"code","8290bd8b":"code","a9ffd181":"code","d06e320d":"code","8ec9e133":"code","f28e67b5":"code","dcaeb489":"code","cd2ce428":"code","58e90460":"code","8067f9d1":"code","71e49a7f":"code","8211d428":"code","746e0935":"code","f4568121":"code","faf2d4ef":"code","ff185ed7":"code","8e01eae6":"code","bc13967f":"code","5dbce975":"code","f3a16198":"code","bbd34928":"code","b7836245":"code","e5bc7381":"code","ec427855":"code","327f1c81":"code","b4db3478":"code","0e765c07":"code","26ae1a55":"code","b313d365":"code","8daac2e0":"code","20129cf3":"code","bf0e116f":"code","1b6aca32":"code","7f4e2242":"code","62ff2726":"code","73b5cc95":"code","75f77998":"code","3ba788ac":"code","1a34a0a0":"code","23396de7":"code","17e70041":"code","dc2c390a":"code","75b22df0":"code","88b73463":"code","6a273ff2":"code","824f428f":"code","ba416b50":"code","1af8d98f":"code","652ce4bc":"code","0f2f17d4":"code","c0743ffe":"code","1cd01503":"code","944a9d27":"code","23554cc0":"code","2ae9d0cb":"code","45315713":"code","57e39fd5":"code","37ec93e4":"code","b6e48bb6":"code","743b1b19":"code","5b254a39":"code","69abd3cb":"code","0293de8c":"code","329bcea1":"code","e492d56e":"code","73ea750b":"code","4afa41c6":"code","ee5becd6":"code","25e9d425":"code","a00fac1f":"code","19cd3f5c":"code","9a5c55b7":"code","e11fe3c6":"code","70b3278b":"code","ac0c830f":"code","67361524":"code","a1c5d59c":"code","f432d96e":"code","35863d2f":"code","3243cedd":"code","c1589dca":"code","3bcf2296":"code","c587c3aa":"code","4f7cfb29":"code","9cb2b0c1":"code","816265d9":"code","c0de7bdc":"code","baf37237":"code","b0e356c9":"code","00c6180a":"code","593f8d25":"code","8fa0465f":"code","858fdc3b":"code","4d7a9445":"code","1011f966":"code","bdab867f":"code","0e4c073d":"code","58855ebc":"code","d1aa643a":"code","ba831925":"code","0cb8ad84":"code","853c03a4":"code","3eb2f8c4":"code","4e65a148":"code","33374b35":"code","e75d0298":"code","af224534":"code","f4ec92a9":"code","d97b9a87":"code","9632acc2":"code","1670b9f5":"code","8a7d2f44":"code","b6b3d006":"code","79ec22ab":"code","f1795c27":"code","3ba919b6":"code","f15c57c9":"code","f60402d9":"code","bb726aaa":"code","bdabb1e5":"code","3fb6417c":"code","42044577":"code","83a6e31f":"code","0d565ce5":"code","dd05c9f8":"code","b80b6aae":"code","d0805b6e":"code","4736dcfa":"code","8b75fa9c":"code","02d4be93":"code","2acef183":"code","d3db9394":"code","d0b23d92":"code","0f25a4e9":"code","8a8b4993":"code","a8428335":"code","a94cc864":"code","05e7dcbb":"code","538850af":"code","67c95bbf":"code","30fb4cca":"code","b68c2cc1":"code","bdc20fad":"code","287ffa77":"code","5060c08c":"code","3f184ce4":"code","97edd565":"code","7c5bfc34":"code","607273c3":"code","e78d6a20":"code","21f132f8":"code","01bd6be5":"code","f4925356":"code","f1b5399c":"code","4b8e1b06":"code","f4023e6b":"code","09c1b460":"code","67235728":"code","97d210a0":"code","ce9b3b74":"code","8224d6e8":"code","c4224bc7":"code","9cb993f1":"code","e45ce055":"code","96ea23e6":"code","0a8c595a":"code","c3ddb427":"markdown","996259d2":"markdown","9f1464a5":"markdown","f2311935":"markdown","b3742c61":"markdown","b040121d":"markdown","f324d55b":"markdown","ce6e8027":"markdown","a7126a88":"markdown","a996550d":"markdown","9d5133ae":"markdown","c26548b5":"markdown","1dcf9540":"markdown","33641315":"markdown","0f124351":"markdown","e7693695":"markdown","f3cb09bd":"markdown","3232866a":"markdown","757da896":"markdown","4c704ca6":"markdown","eaa66328":"markdown","1cdafc3b":"markdown","66601f2b":"markdown","2a00c696":"markdown","41e4f228":"markdown","bfbb43db":"markdown","b589bc4e":"markdown","4772b062":"markdown","27418749":"markdown","2851d154":"markdown"},"source":{"32e45c03":"#from google.colab import drive\n#drive.mount('\/content\/drive')","4e279aa2":"from copy import copy\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom imblearn.over_sampling import SMOTE\nfrom sklearn import metrics\n%matplotlib inline","c370ad16":"data = pd.read_csv('..\/input\/dataset\/train.csv')\ndata.head()","3d14e9e0":"data.info()","2420d8f0":"data.duplicated().sum()","8290bd8b":"plt.figure(figsize=(10,13))\nsns.heatmap(data.isnull(), cbar = False)\nplt.yticks([])\nplt.show()","a9ffd181":"data.isnull().sum()","d06e320d":"round((data.isnull().sum() \/ data.shape[0])*100, 2)","8ec9e133":"print('Number of Rows Containing 4 NULLs or more:', (data.shape[0] - data.dropna(thresh=10).shape[0]))\nprint('Percentage:', round(((data.shape[0] - data.dropna(thresh=10).shape[0])\/data.shape[0])*100, 2), '%')","f28e67b5":"data.dropna(thresh=10, inplace=True)","dcaeb489":"data.company_size.replace('10\/49', '10-49', inplace=True)","cd2ce428":"data.company_size.replace('100-500', '100-499', inplace=True)","58e90460":"data.shape","8067f9d1":"data.isnull().sum()","71e49a7f":"training_data = data.dropna(thresh=14)\ntraining_data.shape","8211d428":"training_data.drop('enrollee_id', axis=1, inplace=True);","746e0935":"training_data_2 = copy(training_data)","f4568121":"training_data.head()","faf2d4ef":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    training_data_2[column] = encoder[column].fit_transform(training_data_2[column])","ff185ed7":"training_data_2.head()","8e01eae6":"plt.figure(figsize=(18,9.5))\nsns.heatmap(training_data_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","bc13967f":"def normalize_columns(column):\n    return (training_data_2[column] - training_data_2[column].min()) \/ (training_data_2[column].max() - training_data_2[column].min())","5dbce975":"for column in training_data.columns:\n    training_data_2[column] = normalize_columns(column)","f3a16198":"training_data_2.head()","bbd34928":"columns = ['city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']","b7836245":"X = training_data_2.loc[:,columns].values\nY = training_data.enrolled_university","e5bc7381":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","ec427855":"rf_grid = {\n 'max_depth': [10, 20, 30, None],\n 'max_features': ['auto', 'sqrt'],\n 'n_estimators': [200, 400, 600]}","327f1c81":"from sklearn.ensemble import RandomForestClassifier\n\neu_classifier = GridSearchCV(estimator= RandomForestClassifier(), param_grid=rf_grid, cv = 3, n_jobs=-1,verbose=1)\neu_classifier.fit(x_train, y_train) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (eu_classifier.best_score_, eu_classifier.best_params_))","b4db3478":"eu_predictions = eu_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, eu_predictions))","0e765c07":"accuracy = eu_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = eu_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(eu_classifier, x_test, y_test, display_labels= encoder['enrolled_university'].classes_, ax = ax, cmap=\"Blues\", values_format = '.0f')\nchart.confusion_matrix;","26ae1a55":"columns = ['city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']","b313d365":"X = training_data_2.loc[:,columns].values\nY = training_data.major_discipline","8daac2e0":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state=30)","20129cf3":"# Random Forest\nmd_classifier = RandomForestClassifier(n_estimators = 500, criterion = 'entropy', random_state = 42)\nmd_classifier.fit(x_train, y_train) \n\naccuracy = md_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')\n\naccuracy = md_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')\n\nfig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(md_classifier, x_test, y_test, display_labels= encoder['major_discipline'].classes_, ax = ax, cmap=\"Blues\", values_format='.0f')\nchart.confusion_matrix;","bf0e116f":"df_3 = copy(data)","1b6aca32":"df_3.fillna('0', inplace=True)","7f4e2242":"x_test = df_3[df_3['enrolled_university'] == '0']\nx_test.shape","62ff2726":"columns = ['enrollee_id', 'city_development_index', 'relevent_experience', 'education_level', 'major_discipline', 'experience',\n                    'company_type', 'last_new_job', 'training_hours', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","73b5cc95":"x_test.shape","75f77998":"encoding_columns_eu = [ 'relevent_experience', 'education_level', 'major_discipline', 'experience', 'company_type', 'last_new_job', 'target']\neu_encoder = {}\nfor column in encoding_columns_eu:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","3ba788ac":"x_test.head()","1a34a0a0":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","23396de7":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","17e70041":"x_test.head()","dc2c390a":"enrolled_university = copy(x_test.enrollee_id)","75b22df0":"enrolled_university = pd.DataFrame({'enrollee_id':enrolled_university, 'enrolled_university':eu_classifier.predict(x_test.iloc[:,1:])})","88b73463":"enrolled_university.head()","6a273ff2":"for i in enrolled_university.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'enrolled_university'] = enrolled_university.query(f'enrollee_id == {i}').enrolled_university","824f428f":"df_3.enrolled_university.unique()","ba416b50":"x_test = df_3[df_3['major_discipline'] == '0']\nx_test.shape","1af8d98f":"columns = ['enrollee_id', 'city', 'city_development_index', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\n\nx_test = x_test.loc[:, columns]\nx_test.head()","652ce4bc":"x_test.shape","0f2f17d4":"encoding_columns_md = [ 'city', 'enrolled_university', 'relevent_experience', 'last_new_job', 'target']\nmd_encoder = {}\nfor column in encoding_columns_md:\n    encoder[column] = LabelEncoder()\n    x_test[column] = encoder[column].fit_transform(x_test[column])","c0743ffe":"x_test.head()","1cd01503":"def normalize_columns(column):\n    return (x_test[column] - x_test[column].min()) \/ (x_test[column].max() - x_test[column].min())","944a9d27":"for column in x_test.columns[1:]:\n    x_test[column] = normalize_columns(column)","23554cc0":"x_test.head()","2ae9d0cb":"major_discipline = copy(x_test.enrollee_id)","45315713":"major_discipline = pd.DataFrame({'enrollee_id':major_discipline, 'major_discipline':md_classifier.predict(x_test.iloc[:,1:])})","57e39fd5":"major_discipline.head()","37ec93e4":"for i in major_discipline.enrollee_id.unique():\n  df_3.loc[df_3.enrollee_id == i, 'major_discipline'] = major_discipline.query(f'enrollee_id == {i}').major_discipline","b6e48bb6":"df_3.major_discipline.unique()","743b1b19":"df = copy(df_3)","5b254a39":"df.head()","69abd3cb":"df.replace('0', 'Unknown', inplace=True)","0293de8c":"color = sns.color_palette('muted')\ncolor_2 = sns.color_palette(\"Paired\")\ncolor_3 = sns.color_palette('pastel')\ncolor_3","329bcea1":"# Null Values\nnull_values = [5039, 4779, 4089, 2838, 457, 342, 367, 59]\ncolumns_null_values = ['company_type', 'company_size', 'gender', 'major_discipline', 'enrolled_university', 'education_level', 'last_new_job', 'experience']\n\nplt.figure(figsize=(13,8))\n\nplt.title('Null Values', fontweight=\"bold\")\nplt.xlabel('Column', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nsns.barplot(x=columns_null_values, y=null_values, color=color[0]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.xticks((0,1,2,3,4,5,6, 7),('Company Type', 'Company Size', 'Gender', 'Major Discipline', 'Enrolled University', 'Education Level', 'Last_New Job', 'Experience'), rotation=15 );\n\nfor i in range(8):\n  plt.text(i, null_values[i]+50, null_values[i], ha='center')\n\nplt.savefig('null.png')","e492d56e":"plt.figure(figsize=(13,8))\nsns.histplot(data=df, x='city_development_index', color=color[9]);\n\nplt.title('City Development Index Distribution', fontweight=\"bold\")\nplt.xlabel('City Development Index', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","73ea750b":"city_10 = df['city'].value_counts()[:11]\n\nplt.figure(figsize=(13,8))\nsns.barplot(x=city_10, y=city_10.index, color=color[9]);\n#plt.xaxis.set_visible(False)\nplt.xlabel('Count')\nplt.ylabel('City')\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\nplt.gca().spines['bottom'].set_visible(False)\nplt.title('Top 10 Cities', fontweight=\"bold\")\nplt.xlabel('Count', fontweight=\"bold\")\nplt.ylabel('City', fontweight=\"bold\")\nplt.xticks([])\nfor i in range(len(city_10)):\n    plt.text(city_10[i]+50, i, city_10[i])","4afa41c6":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', color=color[9]);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","ee5becd6":"order = ['Male', 'Female', 'Other', 'Unknown']\nplt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","25e9d425":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","a00fac1f":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","19cd3f5c":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', color=color[1], order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","9a5c55b7":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(15,8));\nsns.countplot(data=df, x='experience', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Experience Per Count of trainees', fontweight=\"bold\")\nplt.xlabel('Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","e11fe3c6":"plt.figure(figsize=(8,9))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\nsns.countplot(data=df, x='company_size', color=color[1], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=20);","70b3278b":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', color=color[1], order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","ac0c830f":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nlabels = ('0','1','2','3','4','>4', 'Unknown')\nsns.countplot(data=df, x='last_new_job', color=color[9], order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1,2,3,4,5,6,7),labels);","67361524":"plt.figure(figsize=(8,9))\nsns.histplot(data=df, x='training_hours', bins=30, color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","a1c5d59c":"plt.figure(figsize=(8,9))\nsns.kdeplot(data=df, x='training_hours', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours', fontweight=\"bold\")\nplt.xlabel('Training Hours (hr)', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");","f432d96e":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='target', color=color[9]);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","35863d2f":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='relevent_experience', hue='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Relevant Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Relevant Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('13.png')","3243cedd":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='gender', hue='target', order=['Male', 'Female', 'Other', 'Unknown']);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Gender vs. Target', fontweight=\"bold\")\nplt.xlabel('Gender', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","c1589dca":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='enrolled_university', hue='target');\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Enrolled University vs. Target', fontweight=\"bold\")\nplt.xlabel('Enrolled University', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","3bcf2296":"plt.figure(figsize=(8,9))\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\n\nsns.countplot(data=df, x='education_level', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Education Level vs. Target', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","c587c3aa":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='major_discipline', hue='target', order=df.major_discipline.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Major Discipline vs. Target', fontweight=\"bold\")\nplt.xlabel('Major Discipline', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","4f7cfb29":"plt.figure(figsize=(8,9))\nsns.countplot(data=df, x='company_type', hue='target', order=df.company_type.value_counts().index);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Type vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Type', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","9cb2b0c1":"order = ['<1']\nfor i in range(20):\n  order.append(str(i+1))\norder.append('>20')\norder.append('Unknown')\n\nplt.figure(figsize=(16,7))\nsns.countplot(data=df, x='experience', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Experience vs. Target', fontweight=\"bold\")\nplt.xlabel('Trainee Experience', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend(labels=('Not Looking for A Job', 'Looking for A Job'));\nplt.savefig('15.png')","816265d9":"plt.figure(figsize=(9,7))\norder = ['<10', '10-49', '50-99', '100-499', '500-999', '1000-4999', '5000-9999', '10000+', 'Unknown']\n\nsns.countplot(data=df, x='company_size', hue='target', order=order);\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Company Size vs. Target', fontweight=\"bold\")\nplt.xlabel('Company Size', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","c0de7bdc":"plt.figure(figsize=(8,9))\norder = ['never', '1', '2', '3', '4', '>4', 'Unknown']\nsns.countplot(data=df, x='last_new_job', hue='target', order=order);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Last New Job vs. Target', fontweight=\"bold\")\nplt.xlabel('Last New Job', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.legend((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","baf37237":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='city_development_index', x='target', inner='quartile');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","b0e356c9":"plt.figure(figsize=(8,9))\nsns.boxplot(data=df, y='city_development_index', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('City Development Index vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('City Development Index', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","00c6180a":"plt.figure(figsize=(8,9))\nsns.violinplot(data=df, y='training_hours', x='target');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Training Hours vs. Target', fontweight=\"bold\")\nplt.xlabel('Target', fontweight=\"bold\")\nplt.ylabel('Training Hours (hr)', fontweight=\"bold\");\nplt.xticks((0,1), labels=('Not Looking for A Job', 'Looking for A Job'));","593f8d25":"plt.figure(figsize=(7,8));\norder = ['Primary School', 'High School', 'Graduate', 'Masters', 'Phd', 'Unknown']\nsns.swarmplot(data=df, x='education_level', y='training_hours', order=order, palette=color);\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Training Hours', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Training Hours', fontweight=\"bold\");\nplt.xticks(rotation=15);\nplt.savefig('swarm.png')","8fa0465f":"plt.figure(figsize=(8,5))\nsns.countplot(data=df, x='education_level', hue='relevent_experience');\n\nplt.gca().spines['top'].set_visible(False)\nplt.gca().spines['right'].set_visible(False)\n\nplt.title('Trainee Education Level vs. Relevant Experience', fontweight=\"bold\")\nplt.xlabel('Education Level', fontweight=\"bold\")\nplt.ylabel('Count', fontweight=\"bold\");\nplt.xticks(rotation=15);","858fdc3b":"df_2 = copy(data)","4d7a9445":"df_2.fillna('0', inplace=True)","1011f966":"df_2.drop('enrollee_id', axis=1, inplace=True);\ndf_2.head()","bdab867f":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_2[column] = encoder[column].fit_transform(df_2[column])","0e4c073d":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_2.corr(),cbar = True, annot =True, cmap=\"Blues\");","58855ebc":"def normalize_columns(column):\n    return (df_2[column] - df_2[column].min()) \/ (df_2[column].max() - df_2[column].min())","d1aa643a":"for column in df_2.columns:\n    df_2[column] = normalize_columns(column)","ba831925":"df_2.head()","0cb8ad84":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","853c03a4":"X = df_2.loc[:,columns].values\nY = df_2.target.values","3eb2f8c4":"X.shape","4e65a148":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","33374b35":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_resample(x_train, y_train.ravel())","e75d0298":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","af224534":"xgb_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_classifier.best_score_, xgb_classifier.best_params_))","f4ec92a9":"xgb_classifier.best_params_","d97b9a87":"accuracy = xgb_classifier.score(x_train, y_train)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","9632acc2":"accuracy = xgb_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","1670b9f5":"xgb_predictions = xgb_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_predictions))","8a7d2f44":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_1.png')","b6b3d006":"metrics.plot_roc_curve(xgb_classifier, x_test, y_test)\nplt.savefig('auc_1.png')","79ec22ab":"df_3.drop('enrollee_id', axis=1, inplace=True);\ndf_3.head()","f1795c27":"df_3.shape","3ba919b6":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_3[column] = encoder[column].fit_transform(df_3[column])","f15c57c9":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_3.corr(),cbar = True, annot =True, cmap=\"Blues\");","f60402d9":"def normalize_columns(column):\n    return (df_3[column] - df_3[column].min()) \/ (df_3[column].max() - df_3[column].min())","bb726aaa":"for column in df_3.columns:\n    df_3[column] = normalize_columns(column)","bdabb1e5":"df_3.head()","3fb6417c":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","42044577":"X = df_3.loc[:,columns].values\nY = df_3.target.values","83a6e31f":"X.shape","0d565ce5":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","dd05c9f8":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_sample(x_train, y_train.ravel())","b80b6aae":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","d0805b6e":"xgb_2_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_2_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_2_classifier.best_score_, xgb_2_classifier.best_params_))","4736dcfa":"xgb_2_classifier.best_params_","8b75fa9c":"accuracy = xgb_2_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","02d4be93":"accuracy = xgb_2_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","2acef183":"xgb_2_predictions = xgb_2_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_2_predictions))","d3db9394":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_2_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_2.png')","d0b23d92":"metrics.plot_roc_curve(xgb_2_classifier, x_test, y_test)\nplt.savefig('auc_2.png')","0f25a4e9":"df_4 = copy(data)\ndf_4.head()","8a8b4993":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  df_4[i].fillna(df_4[i].mode()[0], inplace=True)","a8428335":"df_4.drop('enrollee_id', axis=1, inplace=True);\ndf_4.head()","a94cc864":"encoding_columns = ['city', 'gender', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'company_type', 'last_new_job', 'target']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    df_4[column] = encoder[column].fit_transform(df_4[column])","05e7dcbb":"plt.figure(figsize=(18,9.5))\nsns.heatmap(df_4.corr(),cbar = True, annot =True, cmap=\"Blues\");","538850af":"def normalize_columns(column):\n    return (df_4[column] - df_4[column].min()) \/ (df_4[column].max() - df_4[column].min())","67c95bbf":"for column in df_4.columns:\n    df_4[column] = normalize_columns(column)","30fb4cca":"df_4.head()","b68c2cc1":"columns = ['city', 'city_development_index', 'relevent_experience', 'enrolled_university', 'education_level', \n           'major_discipline', 'experience', 'company_size', 'last_new_job', 'training_hours']","bdc20fad":"X = df_4.loc[:,columns].values\nY = df_4.target.values","287ffa77":"X.shape","5060c08c":"x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","3f184ce4":"sm = SMOTE(random_state=2)\nx_train_res, y_train_res = sm.fit_sample(x_train, y_train.ravel())","97edd565":"xgb_grid = {\n            'min_child_weight': [1, 5, 10],\n            'gamma': [0.5, 1, 1.5],\n            'subsample': [0.6, 0.8],\n            'colsample_bytree': [0.6, 0.8],\n            'max_depth': [3, 4, 5]\n        }","7c5bfc34":"xgb_3_classifier =  GridSearchCV(estimator= XGBClassifier(), param_grid=xgb_grid, cv = 3, n_jobs=-1,verbose=1)\nxgb_3_classifier.fit(x_train_res, y_train_res) \n\n# Summarize results\nprint(\"Best: %f using %s\" % (xgb_3_classifier.best_score_, xgb_3_classifier.best_params_))","607273c3":"xgb_3_classifier.best_params_","e78d6a20":"accuracy = xgb_3_classifier.score(x_train, y_train)\nprint('Training Accuracy:', round(accuracy *100, 2), '%')","21f132f8":"accuracy = xgb_3_classifier.score(x_test, y_test)\nprint('Testing Accuracy:', round(accuracy *100, 2), '%')","01bd6be5":"xgb_3_predictions = xgb_3_classifier.predict(x_test) \n   \n# print classification report \nprint(metrics.classification_report(y_test, xgb_3_predictions))","f4925356":"fig, ax = plt.subplots(figsize=(10, 6))\nax.set_title('Confusion Matrx')\nchart = metrics.plot_confusion_matrix(xgb_3_classifier, x_test, y_test, display_labels= encoder['target'].classes_, ax = ax, cmap=\"Blues\",  values_format = '.0f')\nchart.confusion_matrix;\nplt.savefig('cm_3.png')","f1b5399c":"metrics.plot_roc_curve(xgb_3_classifier, x_test, y_test)\nplt.savefig('auc_3.png')","4b8e1b06":"test = pd.read_csv('\/content\/drive\/MyDrive\/Colab Notebooks\/HR_Analysis\/test.csv')\ntest.head()","f4023e6b":"test.info()","09c1b460":"test.isnull().sum()","67235728":"null_columns = ['gender','enrolled_university', 'education_level', 'major_discipline', 'experience', 'company_size', 'company_type', 'last_new_job' ]\n\nfor i in null_columns:\n  test[i].fillna(test[i].mode()[0], inplace=True)","97d210a0":"test.head()","ce9b3b74":"test.drop(['enrollee_id', 'gender', 'company_type'], axis=1, inplace=True)","8224d6e8":"encoding_columns = ['city', 'relevent_experience', 'enrolled_university', 'education_level', 'major_discipline', 'experience',\n                    'company_size', 'last_new_job']\n\nencoder = {}\nfor column in encoding_columns:\n    encoder[column] = LabelEncoder()\n    test[column] = encoder[column].fit_transform(test[column])","c4224bc7":"def normalize_columns(column):\n    return (test[column] - test[column].min()) \/ (test[column].max() - test[column].min())","9cb993f1":"for column in test.columns:\n    test[column] = normalize_columns(column)","e45ce055":"test.head()","96ea23e6":"test['target'] = xgb_3_classifier.predict(test.values)","0a8c595a":"test.target.value_counts().plot.pie(colors=color, autopct='%1.0f%%')","c3ddb427":"## Question to be asked about the Data:\nQ1: All columns vs Target<br>\nQ2: Distribution data of all columns<br>\nQ3: What are the three most important things we need to focus on to improve employee\nengagement?<br>\nQ4: What are the three most important things we need to focus on to decrease the numer looking for a new job?<br>\nQ5: What are the trainee most effective features that does not look for another job?<br>\nQ6: what is the effect of training hours that causing the trainee to look for another job?<br>","996259d2":"- ## Normalizing The Data","9f1464a5":"- ## XGBoost Classifier Using SMOTE with Predicted NULL Values","f2311935":"#Creating The Model Using SMOTE (with Predicted NULL Values and Unknown) \n","b3742c61":"# Reading The Data","b040121d":"- ## Filling Major Discipline Column","f324d55b":"- ## Normalizing Training data","ce6e8027":"- ## XGBoost Classifier Using SMOTE(Replacing NULL Values with Mode)","a7126a88":"- ## Encoding The Data","a996550d":"# Predicting NULL Values","9d5133ae":"# Predicting The Target in Test Data ","c26548b5":"- ## Bivariate Charts","1dcf9540":"- ## Encoding The Data","33641315":"- ## Univariate Charts","0f124351":"# Exploratory Data Analysis","e7693695":"- ## Normalizing The Data","f3cb09bd":"- ## Normalizing Data ","3232866a":"- ## XGBoost Classifier Using SMOTE Replacing NULL with *0*","757da896":"# Creating The Model Using SMOTE (Replacing NULL with 0)","4c704ca6":"- ## The Columns to predict their null values\n    - enrolled_university\n    - education_level\n    - major_discipline\n    - experience\n    - company_size\n    - company_type\n    - last_new_job\n    - gender","eaa66328":"- ## Detting The Data Ready","1cdafc3b":"- ## Getting the training data ready","66601f2b":"  - ## Filling Enrolled University Column","2a00c696":"# Creating The Model Using SMOTE(With Predicted NULL Values and Mode)","41e4f228":"- ## Normalizing Test Data","bfbb43db":"- ## `1.`Enrolled University Column","b589bc4e":"- ## `2` Major Discipline","4772b062":"- ## Scaling The test data","27418749":"- ## Scaling The Data","2851d154":"- ## Predicting Target"}}