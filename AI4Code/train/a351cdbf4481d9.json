{"cell_type":{"7698e7d0":"code","60d022d5":"code","9761ce72":"code","c3369d2b":"code","acd2a72f":"code","f63a08ac":"code","c261cf77":"code","538ebcd8":"code","ce5d606e":"code","f5e153c1":"code","257419aa":"code","4e2a6216":"code","642ae59c":"code","4ceea8bf":"code","14678150":"code","201e55a3":"code","cefade71":"code","b6529cee":"code","5160bb30":"code","fc505022":"code","5359b19d":"code","39663222":"code","c614135e":"code","7b02cb28":"code","33e9c6c5":"markdown"},"source":{"7698e7d0":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60d022d5":"## Import Liberaries\nimport pandas as pd\nimport sqlite3","9761ce72":"## Read the files\n\ndf = pd.read_csv('\/kaggle\/input\/latest-covid19-india-statewise-data\/Latest Covid-19 India Status.csv')\ndf.head()","c3369d2b":"## Rename the filename(the name is big and will be difficult for use to fetch it as table while writing the SQL queries)\n\n## To achieve this, we will copy and export the dataframe to our local path, keeping the desired file name\n\ndf_copy= df \ndf_copy.to_csv('CovidNinteenIndia.csv',index=False)\n","acd2a72f":"## Read the Renamed FIle\ndf_short_name = pd.read_csv('CovidNinteenIndia.csv')\ndf_short_name.head()","f63a08ac":"## Let's Rename the titles to simple forms as it will simplify query writing\n\ndf_SQL = df_short_name.rename(columns = {'State\/UTs': 'StateNUTs',\n                          'Total Cases': 'TotalCases',\n                          'Active Ratio (%)' :'activeratio',\n                           'Active' :'Active',\n                            'Discharged' :'Discharged',\n                             'Discharge Ratio (%)':'DischargeRatio',\n                              'Death Ratio (%)':'DeathRatio',\n                              }, inplace = False)\ndf_SQL.head()","c261cf77":"# import sqlalchemy and create a sqlite engine\nfrom sqlalchemy import create_engine\nengine = create_engine('sqlite:\/\/', echo=False)\n\n# export the dataframe as a table 'playstore' to the sqlite engine\ndf_SQL.to_sql(\"CovidNinteenIndia\", con =engine)","538ebcd8":"##Read the Datastet after rename\ndf_SQL.to_sql('CovidNinteenIndia', con=engine, if_exists='append', index=False)\ndf_SQL.head()","ce5d606e":"## Test the code by select the complete table\n\nsql='''\n\nSelect * from CovidNinteenIndia\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","f5e153c1":"## Query 1:- Select the states and UTs available for the data analysis\n\nsql='''\n\nSelect statenuts from CovidNinteenIndia\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head(100)","257419aa":"## Query 2:- states with most active cases\n\nsql='''\n\nSelect \nstatenuts as State_UTs,\nactive as Active_Case\nfrom CovidNinteenIndia\ngroup by statenuts\norder by active desc\nlimit 10\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","4e2a6216":"## Query 3:- states with successful discharges\n\nsql='''\n\nSelect \nstatenuts as State_UTs,\ndischarged as Discharge_Case\nfrom CovidNinteenIndia\ngroup by statenuts\norder by discharged desc\nlimit 10\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","642ae59c":"## Query 4:- states with most 10 deaths\n\nsql='''\n\nSelect \nstatenuts as State_UTs,\ndeaths as Deaths\nfrom CovidNinteenIndia\ngroup by statenuts\norder by deaths desc\nlimit 10\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","4ceea8bf":"## Query 5:- Compute the Discharge Rate\n\n##Note:- The colums is already shared in the input data, the below query is written for demonstrative use of the round off function, the calculated results are check and verifed with the inputs results.\n\nsql='''\n\nselect * from (\nSelect \nstatenuts as State_UTs,\ndischarged as Discharged_Cases,\ntotalcases as Total_Cases,\nround(100*(round(discharged,2)\/round(totalcases,2)),2) as Discharge_Ratio_Calculated\nfrom CovidNinteenIndia\ngroup by statenuts\norder by deaths desc\nlimit 10\n) a\n\norder by a.discharge_ratio_Calculated desc\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","14678150":"## Query 6:- Max Total_Case vs Min Total_Case\n\n\nsql='''\n\nselect * from (\nselect 'The State with Minimum Cases is   :-  ' || statenuts as State, min(totalcases) as Max_Min_Cases from CovidNinteenIndia\nunion all\nselect'The State with Maximum Cases is   :-  ' || statenuts as State, max(totalcases) as Max_Min_Cases from CovidNinteenIndia\n)a\n\norder by a.Max_Min_Cases desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","201e55a3":"## Query 7:- Max Death vs Min Death\n\n\nsql='''\n\nselect * from (\nselect 'The State with Minimum Deaths is   :-  ' || statenuts as State, min(deaths) as Max_Min_Deaths from CovidNinteenIndia\nunion all\nselect 'The State with Maximum Deaths is  :-  ' || statenuts as State, max(deaths) as Max_Min_Deaths from CovidNinteenIndia\n)a\norder by a.Max_Min_Deaths desc\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","cefade71":"## Query 8:- Max Active Cases vs Min Active Cases\n\n\nsql='''\n\nselect * from (\nselect 'The State with Minimum Active Cases is   :-  ' || statenuts as State, min(active) as Max_Min_Active_Cases from CovidNinteenIndia\nunion all\nselect 'The State with Maximum Active Cases A is  :-  ' || statenuts as State, max(active) as Max_Min_Active_Cases from CovidNinteenIndia\n)a\norder by a.Max_Min_Active_Cases desc\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","b6529cee":"## Query 9:- Death Ratio South India vs North India\n\n\nsql= '''\n\nselect 'South India is ' || round(avg(DeathRatio),2) as Avg_Death_Rate from CovidNinteenIndia\nwhere statenuts in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\nunion all\nselect 'North India is ' || round(avg(DeathRatio),2) as Avg_Death_Rate from CovidNinteenIndia\nwhere statenuts not in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","5160bb30":"## Query 10:- Active Ratio South India vs North India\n\n\nsql= '''\n\nselect 'South India is ' || round(avg(activeRatio),2) as Avg_active_Rate from CovidNinteenIndia\nwhere statenuts in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\nunion all\nselect 'North India is ' || round(avg(activeRatio),2) as Avg_active_Rate from CovidNinteenIndia\nwhere statenuts not in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","fc505022":"## Query 11:- Death Ratio South India vs North India\n\n\nsql= '''\n\nselect 'South India is ' || round(avg(dischargeRatio),2) as Avg_Death_Rate from CovidNinteenIndia\nwhere statenuts in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\nunion all\nselect 'North India is ' || round(avg(dischargeRatio),2) as Avg_Death_Rate from CovidNinteenIndia\nwhere statenuts not in ('Tamil Nadu','Puducherry','Telengana','Andhra Pradesh','Karnataka','Kerala')\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","5359b19d":"## Query 12:- Comparision of Active Rate KPIs for all the states\n\nKPI1='AR'## Active Rate\nKPI2='activeratio' ## KPI value\n\nsql= f'''\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI2} else 0 end) as {KPI1}_AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI2} else 0 end) as {KPI1}_AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI2} else 0 end) as {KPI1}_Assam,\nmax(case when a.statenuts='Bihar' then {KPI2} else 0 end) as {KPI1}_Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI2} else 0 end) as {KPI1}_Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI2} else 0 end) as {KPI1}_Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI2} else 0 end) as {KPI1}_DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI2} else 0 end) as {KPI1}_Delhi,\nmax(case when a.statenuts='Goa' then {KPI2} else 0 end) as {KPI1}_Goa,\nmax(case when a.statenuts='Gujarat' then {KPI2} else 0 end) as {KPI1}_Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI2} else 0 end) as {KPI1}_Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI2} else 0 end) as {KPI1}_HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI2} else 0 end) as {KPI1}_JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI2} else 0 end) as {KPI1}_Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI2} else 0 end) as {KPI1}_Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI2} else 0 end) as {KPI1}_Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI2} else 0 end) as {KPI1}_Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI2} else 0 end) as {KPI1}_Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI2} else 0 end) as {KPI1}_MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI2} else 0 end) as {KPI1}_Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI2} else 0 end) as {KPI1}_Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI2} else 0 end) as {KPI1}_Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI2} else 0 end) as {KPI1}_Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI2} else 0 end) as {KPI1}_Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI2} else 0 end) as {KPI1}_Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI2} else 0 end) as {KPI1}_Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI2} else 0 end) as {KPI1}_Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI2} else 0 end) as {KPI1}_Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI2} else 0 end) as {KPI1}_Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI2} else 0 end) as {KPI1}_TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI2} else 0 end) as {KPI1}_Telengana,\nmax(case when a.statenuts='Tripura' then {KPI2} else 0 end) as {KPI1}_Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI2} else 0 end) as {KPI1}_UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI2} else 0 end) as {KPI1}_Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI2} else 0 end) as {KPI1}_WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","39663222":"## Query 13:- Comparision of Discharge Ratio for all the states\n\nKPI1='DizchR'## Death Rate\nKPI2='dischargeratio' ## KPI value\n\nsql= f'''\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI2} else 0 end) as {KPI1}_AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI2} else 0 end) as {KPI1}_AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI2} else 0 end) as {KPI1}_Assam,\nmax(case when a.statenuts='Bihar' then {KPI2} else 0 end) as {KPI1}_Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI2} else 0 end) as {KPI1}_Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI2} else 0 end) as {KPI1}_Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI2} else 0 end) as {KPI1}_DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI2} else 0 end) as {KPI1}_Delhi,\nmax(case when a.statenuts='Goa' then {KPI2} else 0 end) as {KPI1}_Goa,\nmax(case when a.statenuts='Gujarat' then {KPI2} else 0 end) as {KPI1}_Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI2} else 0 end) as {KPI1}_Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI2} else 0 end) as {KPI1}_HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI2} else 0 end) as {KPI1}_JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI2} else 0 end) as {KPI1}_Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI2} else 0 end) as {KPI1}_Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI2} else 0 end) as {KPI1}_Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI2} else 0 end) as {KPI1}_Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI2} else 0 end) as {KPI1}_Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI2} else 0 end) as {KPI1}_MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI2} else 0 end) as {KPI1}_Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI2} else 0 end) as {KPI1}_Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI2} else 0 end) as {KPI1}_Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI2} else 0 end) as {KPI1}_Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI2} else 0 end) as {KPI1}_Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI2} else 0 end) as {KPI1}_Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI2} else 0 end) as {KPI1}_Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI2} else 0 end) as {KPI1}_Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI2} else 0 end) as {KPI1}_Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI2} else 0 end) as {KPI1}_Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI2} else 0 end) as {KPI1}_TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI2} else 0 end) as {KPI1}_Telengana,\nmax(case when a.statenuts='Tripura' then {KPI2} else 0 end) as {KPI1}_Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI2} else 0 end) as {KPI1}_UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI2} else 0 end) as {KPI1}_Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI2} else 0 end) as {KPI1}_WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","c614135e":"## Query 14:- Comparision of Death Rate KPIs for all the states\n\nKPI1='DR'## Death Rate\nKPI2='deathratio' ## KPI value\n\nsql= f'''\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI2} else 0 end) as {KPI1}_AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI2} else 0 end) as {KPI1}_AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI2} else 0 end) as {KPI1}_Assam,\nmax(case when a.statenuts='Bihar' then {KPI2} else 0 end) as {KPI1}_Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI2} else 0 end) as {KPI1}_Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI2} else 0 end) as {KPI1}_Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI2} else 0 end) as {KPI1}_DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI2} else 0 end) as {KPI1}_Delhi,\nmax(case when a.statenuts='Goa' then {KPI2} else 0 end) as {KPI1}_Goa,\nmax(case when a.statenuts='Gujarat' then {KPI2} else 0 end) as {KPI1}_Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI2} else 0 end) as {KPI1}_Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI2} else 0 end) as {KPI1}_HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI2} else 0 end) as {KPI1}_JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI2} else 0 end) as {KPI1}_Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI2} else 0 end) as {KPI1}_Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI2} else 0 end) as {KPI1}_Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI2} else 0 end) as {KPI1}_Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI2} else 0 end) as {KPI1}_Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI2} else 0 end) as {KPI1}_MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI2} else 0 end) as {KPI1}_Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI2} else 0 end) as {KPI1}_Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI2} else 0 end) as {KPI1}_Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI2} else 0 end) as {KPI1}_Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI2} else 0 end) as {KPI1}_Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI2} else 0 end) as {KPI1}_Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI2} else 0 end) as {KPI1}_Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI2} else 0 end) as {KPI1}_Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI2} else 0 end) as {KPI1}_Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI2} else 0 end) as {KPI1}_Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI2} else 0 end) as {KPI1}_TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI2} else 0 end) as {KPI1}_Telengana,\nmax(case when a.statenuts='Tripura' then {KPI2} else 0 end) as {KPI1}_Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI2} else 0 end) as {KPI1}_UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI2} else 0 end) as {KPI1}_Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI2} else 0 end) as {KPI1}_WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql","7b02cb28":"## Query 15:- All the key KPIs combine in 1 table\n\nKPI1='AR'## Active Rate\nKPI2='activeratio' ## KPI value\nKPI3='deathratio'\nKPI4='dischargeratio'\n\nsql= f'''\nselect * from (\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI2} else 0 end) as AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI2} else 0 end) as AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI2} else 0 end) as Assam,\nmax(case when a.statenuts='Bihar' then {KPI2} else 0 end) as Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI2} else 0 end) as Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI2} else 0 end) as Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI2} else 0 end) as DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI2} else 0 end) as delhi,\nmax(case when a.statenuts='Goa' then {KPI2} else 0 end) as Goa,\nmax(case when a.statenuts='Gujarat' then {KPI2} else 0 end) as Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI2} else 0 end) as Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI2} else 0 end) as HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI2} else 0 end) as JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI2} else 0 end) as Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI2} else 0 end) as Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI2} else 0 end) as Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI2} else 0 end) as Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI2} else 0 end) as Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI2} else 0 end) as MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI2} else 0 end) as Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI2} else 0 end) as Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI2} else 0 end) as Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI2} else 0 end) as Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI2} else 0 end) as Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI2} else 0 end) as Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI2} else 0 end) as Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI2} else 0 end) as Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI2} else 0 end) as Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI2} else 0 end) as Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI2} else 0 end) as TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI2} else 0 end) as Telengana,\nmax(case when a.statenuts='Tripura' then {KPI2} else 0 end) as Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI2} else 0 end) as UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI2} else 0 end) as Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI2} else 0 end) as WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a ) active_rate_table\nunion all\nselect * from (\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI3} else 0 end) as AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI3} else 0 end) as AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI3} else 0 end) as Assam,\nmax(case when a.statenuts='Bihar' then {KPI3} else 0 end) as Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI3} else 0 end) as Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI3} else 0 end) as Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI3} else 0 end) as DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI3} else 0 end) as delhi,\nmax(case when a.statenuts='Goa' then {KPI3} else 0 end) as Goa,\nmax(case when a.statenuts='Gujarat' then {KPI3} else 0 end) as Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI3} else 0 end) as Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI3} else 0 end) as HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI3} else 0 end) as JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI3} else 0 end) as Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI3} else 0 end) as Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI3} else 0 end) as Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI3} else 0 end) as Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI3} else 0 end) as Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI3} else 0 end) as MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI3} else 0 end) as Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI3} else 0 end) as Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI3} else 0 end) as Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI3} else 0 end) as Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI3} else 0 end) as Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI3} else 0 end) as Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI3} else 0 end) as Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI3} else 0 end) as Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI3} else 0 end) as Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI3} else 0 end) as Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI3} else 0 end) as TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI3} else 0 end) as Telengana,\nmax(case when a.statenuts='Tripura' then {KPI3} else 0 end) as Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI3} else 0 end) as UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI3} else 0 end) as Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI3} else 0 end) as WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a ) death_rate_table\nunion all\nselect * from (\nselect\nmax(case when a.statenuts='Andaman and Nicobar' then {KPI4} else 0 end) as AndamanNNicobar,\nmax(case when a.statenuts='Andhra Pradesh' then {KPI4} else 0 end) as AndhraPradesh,\nmax(case when a.statenuts='Assam' then {KPI4} else 0 end) as Assam,\nmax(case when a.statenuts='Bihar' then {KPI4} else 0 end) as Bihar,\nmax(case when a.statenuts='Chandigarh' then {KPI4} else 0 end) as Chandigarh,\nmax(case when a.statenuts='Chhattisgarh' then {KPI4} else 0 end) as Chhattisgarh,\nmax(case when a.statenuts='Dadra and Nagar Haveli and Daman and Diu' then {KPI4} else 0 end) as DadraandNagarHaveliandDamanandDiu,\nmax(case when a.statenuts='Delhi' then {KPI4} else 0 end) as delhi,\nmax(case when a.statenuts='Goa' then {KPI4} else 0 end) as Goa,\nmax(case when a.statenuts='Gujarat' then {KPI4} else 0 end) as Gujarat,\nmax(case when a.statenuts='Haryana' then {KPI4} else 0 end) as Haryana,\nmax(case when a.statenuts='Himachal Pradesh' then {KPI4} else 0 end) as HimachalPradesh,\nmax(case when a.statenuts='Jammu and Kashmir' then {KPI4} else 0 end) as JammuandKashmir,\nmax(case when a.statenuts='Jharkhand' then {KPI4} else 0 end) as Jharkhand,\nmax(case when a.statenuts='Karnataka' then {KPI4} else 0 end) as Karnataka,\nmax(case when a.statenuts='Kerala' then {KPI4} else 0 end) as Kerala,\nmax(case when a.statenuts='Ladakh' then {KPI4} else 0 end) as Ladakh,\nmax(case when a.statenuts='Lakshadweep' then {KPI4} else 0 end) as Lakshadweep,\nmax(case when a.statenuts='Madhya Pradesh' then {KPI4} else 0 end) as MadhyaPradesh,\nmax(case when a.statenuts='Maharashtra' then {KPI4} else 0 end) as Maharashtra,\nmax(case when a.statenuts='Manipur' then {KPI4} else 0 end) as Manipur,\nmax(case when a.statenuts='Meghalaya' then {KPI4} else 0 end) as Meghalaya,\nmax(case when a.statenuts='Mizoram' then {KPI4} else 0 end) as Mizoram,\nmax(case when a.statenuts='Nagaland' then {KPI4} else 0 end) as Nagaland,\nmax(case when a.statenuts='Odisha' then {KPI4} else 0 end) as Odisha,\nmax(case when a.statenuts='Puducherry' then {KPI4} else 0 end) as Puducherry,\nmax(case when a.statenuts='Punjab' then {KPI4} else 0 end) as Punjab,\nmax(case when a.statenuts='Rajasthan' then {KPI4} else 0 end) as Rajasthan,\nmax(case when a.statenuts='Sikkim' then {KPI4} else 0 end) as Sikkim,\nmax(case when a.statenuts='Tamil Nadu' then {KPI4} else 0 end) as TamilNadu,\nmax(case when a.statenuts='Telengana' then {KPI4} else 0 end) as Telengana,\nmax(case when a.statenuts='Tripura' then {KPI4} else 0 end) as Tripura,\nmax(case when a.statenuts='Uttar Pradesh' then {KPI4} else 0 end) as UttarPradesh,\nmax(case when a.statenuts='Uttarakhand' then {KPI4} else 0 end) as Uttarakhand,\nmax(case when a.statenuts='West Bengal' then {KPI4} else 0 end) as WestBengal\nfrom\n(select statenuts,activeratio,deathratio,dischargeratio\nfrom CovidNinteenIndia) a ) discharge_rate_table\n\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\nprint('The KPIs are printed as \\n 0:-Active Rate \\n 1:- Death Rate \\n 2:- Discharge Rate')\ndf_sql","33e9c6c5":"\n# Hey Kaggle Fam :)! The below is an exhaustive SQL EDA of the Latest StateWise Covid 19 India,\n# Please Upvote if you liked the notebook, feel free ping on feedback\/query upgrades, if any\n# If you'd like a buddy mentor for SQL and Data Analytics i'm just a ping away :)\n"}}