{"cell_type":{"fb58a743":"code","2204e877":"code","302aaed0":"code","9047a10f":"code","0b7230a4":"code","c738e968":"code","13b63a8f":"code","d89a0be0":"code","681ab138":"code","d80821fc":"code","d5b7b768":"code","826ab645":"code","4b3b07a1":"code","a2ba48c4":"code","16061e04":"code","7cd16b37":"code","7a36bba3":"code","4ae6db5d":"code","9ce9f22d":"code","14a852f6":"code","7c497976":"code","0d43625a":"code","26d468c6":"code","1026ed9d":"code","b3e3574a":"code","383d985a":"code","057d55b6":"code","a10694be":"code","bd9906a2":"markdown","86ee4d59":"markdown"},"source":{"fb58a743":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2204e877":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import log_loss\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.svm import SVC","302aaed0":"iris=pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")","9047a10f":"iris.head()","0b7230a4":"iris.tail()","c738e968":"iris.describe()","13b63a8f":"iris.info()","d89a0be0":"iris.isnull().sum()","681ab138":"iris['Species'].unique()","d80821fc":"iris['Species'].value_counts()","d5b7b768":"import matplotlib.pyplot as plt\nplt.hist(iris['Species'],bins=10, color='purple')","826ab645":"import seaborn as sns\nsns.swarmplot(x=iris['Species'],y=iris['SepalWidthCm'], data=iris)","4b3b07a1":"sns.swarmplot(x=iris['Species'],y=iris['PetalLengthCm'], data=iris)","a2ba48c4":"plt.bar(x=iris['Species'],height=iris['SepalLengthCm'], color='green')\nplt.show()","16061e04":"sns.boxplot(x='Species',y='SepalLengthCm',data=iris);","7cd16b37":"encoder=LabelEncoder()\niris['Species']=encoder.fit_transform(iris['Species'])","7a36bba3":"iris['Species']","4ae6db5d":"iris.drop('Id', axis=1, inplace=True)","9ce9f22d":"X=iris.drop('Species',axis=1)\ny=iris['Species']","14a852f6":"y=iris['Species']","7c497976":"X_train,X_test, y_train,y_test= train_test_split(X,y, test_size=0.25, random_state=1)","0d43625a":"X_train.head()","26d468c6":"# Feature Scaling\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)","1026ed9d":"X_train.shape,X_test.shape,y_train.shape,y_test.shape","b3e3574a":"model = SVC(kernel='linear')\nmodel.fit(X_train,y_train)\n\ny_pred_train=model.predict(X_train)\ny_pred_test=model.predict(X_test)\n\n\nprint(\"Confusion Matrix of test data: \")\nprint(confusion_matrix(y_pred_test,y_test))\n\nprint(\"Classification Report of test data: \") \nprint(classification_report(y_pred_test, y_test))\n\nprint(\"Accuracy score of train data using SVC:\" , accuracy_score(y_pred_train,y_train))\nprint(\"Accuracy score of test data using SVC: \" , accuracy_score(y_pred_test, y_test))","383d985a":"model=LogisticRegression()\nmodel.fit(X_train,y_train)\n\ny_pred_train=model.predict(X_train)\ny_pred_test=model.predict(X_test)\n\ntrain_accuracy=np.round(accuracy_score(y_pred_train,y_train),2)\ntest_accuracy=np.round(accuracy_score(y_pred_test,y_test),2)\n\nprint(\"Accuracy score on train data using Logistic Regression is: \" , train_accuracy)\nprint(\"Accuracy score on test data using Logistic Regression is: \" , test_accuracy)\n","057d55b6":"print(\"Confusion Matrix of test data: \")\nprint(confusion_matrix(y_pred_test,y_test))\n\nprint(\"Classification Report of test data: \") \nprint(classification_report(y_pred_test, y_test))\n\nprint(\"Accuracy score on train data using Logistic Regression is: \" , train_accuracy)","a10694be":"print(\"Confusion Matrix of train data: \")\nprint(confusion_matrix(y_pred_train,y_train))\n\nprint(\"Classification Report of train data: \") \nprint(classification_report(y_pred_train, y_train))\n\nprint(\"Accuracy score on test data using Logistic Regression is: \" , test_accuracy)","bd9906a2":"There are no null values in the dataset.\n","86ee4d59":"There are three categories of Iris flower."}}