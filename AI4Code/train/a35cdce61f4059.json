{"cell_type":{"b35da6e6":"code","a8c03519":"code","ac4af075":"code","5f28c959":"code","93dd600e":"code","d8d908eb":"code","7000d613":"code","14316860":"code","43bba1f6":"code","66109077":"code","c97aa871":"code","a16a2475":"code","80c4ac4e":"code","093d825e":"code","c72e76ff":"code","0a2599cd":"code","a917abbb":"code","87a461ca":"code","5c951a37":"code","c5336852":"code","76917601":"code","62a496b0":"code","b62ff9c6":"code","b60c6836":"code","8fda12dd":"code","b69f0529":"code","c5d7f65b":"code","b1465e40":"code","83c73c40":"code","041f560a":"code","07c343cd":"code","3b7e8150":"code","4d67445b":"code","babb297e":"code","c466932c":"markdown","c9d79bda":"markdown","359d0089":"markdown","00f18e98":"markdown","d1cb5294":"markdown","d707104f":"markdown","509da96c":"markdown","c96ffd30":"markdown","ff03995e":"markdown","4133d101":"markdown"},"source":{"b35da6e6":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn.over_sampling import SMOTE\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","a8c03519":"# we set a random seed so something random won't affect our results\nnp.random.seed(2)","ac4af075":"data = pd.read_csv('..\/input\/creditcard.csv')","5f28c959":"data.head()","93dd600e":"data['normalizedAmount'] = StandardScaler().fit_transform(data['Amount'].values.reshape(-1,1))\ndata = data.drop(['Amount', 'Time'], axis=1)","d8d908eb":"data.head()","7000d613":"sns.countplot(data['Class'])","14316860":"X = data.iloc[:, data.columns != 'Class']\nY = data.iloc[:, data.columns == 'Class']","43bba1f6":"X.corrwith(data.Class).plot.bar(figsize=(20, 10), fontsize=12, grid=True)","66109077":"plt.figure(figsize=(20, 10))\nsns.heatmap(data.corr(), annot= True)","c97aa871":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)","a16a2475":"X_train.shape","80c4ac4e":"model = Sequential()\nmodel.add(Dense(units=16, input_dim= 29, activation='relu'))\nmodel.add(Dense(units=24, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(units=20, activation='relu'))\nmodel.add(Dense(units=24, activation='relu'))\nmodel.add(Dense(units=1, activation='sigmoid'))\nmodel.summary()","093d825e":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])","c72e76ff":"model.fit(X_train, Y_train, batch_size=15, epochs=5, validation_split=0.2)","0a2599cd":"model.evaluate(X_test, Y_test)","a917abbb":"y_pred = model.predict(X_test)","87a461ca":"cm_matrix = confusion_matrix(Y_test, y_pred.round())","5c951a37":"print(cm_matrix)","c5336852":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, Y_train.values.ravel())","76917601":"y_pred = random_forest.predict(X_test)","62a496b0":"random_forest.score(X_test, Y_test)","b62ff9c6":"cm_matrix = confusion_matrix(Y_test, y_pred.round())","b60c6836":"print(cm_matrix)","8fda12dd":"fraud_indices = np.array(data[data.Class == 1].index)\nnon_frud_indices = data[data.Class == 0].index\nnum_fraud = len(fraud_indices)\nprint(num_fraud)","b69f0529":"random_normal = np.array(np.random.choice(non_frud_indices, num_fraud, replace=False))\nprint(len(random_normal))","c5d7f65b":"undersample_idx = np.concatenate([fraud_indices, random_normal])","b1465e40":"new_data = data.iloc[undersample_idx, :]","83c73c40":"X_under = new_data.iloc[:, new_data.columns != 'Class']\nY_under = new_data.iloc[:, new_data.columns == 'Class']\n\nX_train, X_test, Y_train, Y_test = train_test_split(X_under, Y_under, test_size=0.3, random_state=0)","041f560a":"# due to the small amount of data we use random forests instead of neural network and decrease number of estimators to improve performance\n\nrandom_forest = RandomForestClassifier(n_estimators=10)\n\nrandom_forest.fit(X_train, Y_train.values.ravel())\ny_pred = random_forest.predict(X_test)\nprint(random_forest.score(X_test, Y_test))\n\ncm_matrix = confusion_matrix(Y_test, y_pred.round())\nprint(cm_matrix)","07c343cd":"X_over, Y_over = SMOTE().fit_sample(X, Y.values.ravel())","3b7e8150":"X_train, X_test, Y_train, Y_test = train_test_split(X_over, Y_over, test_size=0.3, random_state=0)","4d67445b":"model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\nmodel.fit(X_train, Y_train, batch_size=15, epochs=5, validation_split=0.2)","babb297e":"model.evaluate(X_test, Y_test)\ny_pred = model.predict(X_test)\n\ncm_matrix = confusion_matrix(Y_test, y_pred.round())\nprint(cm_matrix)","c466932c":"* **Random Forest**","c9d79bda":"it is visible that our accuracy for detection of fraud cases has been improved with underSampling","359d0089":"* **Classification with Neural Network**","00f18e98":"* **EXPLORING AND CLEANING DATA**","d1cb5294":"* **Improving the ratio between classes**\n1. Undersampling","d707104f":"the plot above shows the relationship between the features in our dataset. as it can be seen almost all of our features are independant of each other.","509da96c":"As it can be seen our data columns do not have any name so we can't see what numbers really mean here just by looking at them.\nThe amount column isn't normalized, so we will normalize it to be in same range as other values","c96ffd30":"as can be viewed above our dataset is extremely unbalanced, with almost all of our data belonging to non-fraudulent \ntransactions.","ff03995e":"* **OverSampling **<br>\n**SMOTE**","4133d101":"While our test results show that we have 99.9% percent accuracy, around 25% of all frauds where undetected<br>\nand almost all non-fraudulent cases where predicted correctly. this is because of **extreme imbalance in our dataset**<br>\nfor ratio of two classes compared to each other."}}