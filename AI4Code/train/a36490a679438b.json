{"cell_type":{"d8b303c1":"code","ad1d93a2":"code","797157ac":"code","a3473169":"code","11670e12":"code","eefa3109":"code","d0a4fecd":"code","3824ca14":"code","098d9274":"code","96c8a0c2":"code","0351e9fc":"code","061b949b":"code","9da92ace":"code","b757a88b":"code","98b2bf99":"code","89f99eaa":"code","7e29ca52":"code","e47d7b92":"code","58cc963c":"code","3102e3f6":"code","b4bda552":"code","266b15be":"code","82acfbd6":"code","3b88c3a2":"code","e702a537":"code","9c567dfb":"code","e7cdcaa0":"code","42cfaa56":"code","9f4da2c6":"code","ca504329":"code","80abd1a8":"markdown","9f28d170":"markdown","eb3fd0e9":"markdown","be0ed9bc":"markdown","3853ba27":"markdown","612040ff":"markdown","f6d3284f":"markdown","c6aefddf":"markdown","98039615":"markdown","cceb6365":"markdown","31ddd162":"markdown","fdb3a171":"markdown","6299efb8":"markdown","28e1dd21":"markdown","55a9894d":"markdown","6534205d":"markdown","d891ce7e":"markdown","aed15be8":"markdown","b8196ad4":"markdown","a2214706":"markdown","8b195a46":"markdown","18a12b3a":"markdown","62d0ea29":"markdown","7877f514":"markdown"},"source":{"d8b303c1":"import numpy as np\nimport pandas as pd\n\nfrom category_encoders import CountEncoder\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.model_selection import KFold\n\nfrom tqdm.notebook import tqdm\nfrom xgboost import XGBRegressor","ad1d93a2":"# \u30e1\u30a4\u30f3\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u307e\u3059\ndf_train = pd.read_csv('\/kaggle\/input\/data-science-summer2-osaka\/train.csv')\ndf_test = pd.read_csv('\/kaggle\/input\/data-science-summer2-osaka\/test.csv')","797157ac":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u305d\u308c\u305e\u308c\u306e\u884c\u6570\u3068\u5217\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\ndf_train.shape, df_test.shape","a3473169":"# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u5148\u982d\uff15\u884c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\ndf_train.head()","11670e12":"# \u4e0a\u8a18\u304c\u6b63\u5e38\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u307e\u3059\u3002\u2461\u306e\u64cd\u4f5c\u3092\u3057\u3066\u3044\u308c\u3070Watching2\uff5ePlan to Watch2\u304c\u8ffd\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\ndf_train.head()","eefa3109":"# \u8aac\u660e\u5909\u6570\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u306b\u5206\u5272\u3057\u3066\u304a\u304d\u307e\u3059\ny_train = df_train.Score\nX_train = df_train.drop(['Score'], axis=1)\nX_test = df_test.copy()","d0a4fecd":"# dtype\u304cobject\uff08\u6570\u5024\u3067\u306a\u3044\u3082\u306e\uff09\u306e\u30ab\u30e9\u30e0\u540d\u3068\u30e6\u30cb\u30fc\u30af\u6570\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306f5000\u884c\u306a\u306e\u3067\u3001Name\u306f\u5b8c\u5168\u30e6\u30cb\u30fc\u30af\n# \u610f\u5916\u3068English\/Japanese name\u306f\u30e6\u30cb\u30fc\u30af\u3067\u306f\u306a\u304f\u540c\u3058\u3082\u306e\u304c\u7e70\u308a\u8fd4\u3057\u767b\u5834\u3057\u3066\u3044\u308b\u4f8b\u304c\u3042\u308b\u3002\u30b7\u30ea\u30fc\u30ba\u3082\u306e\uff1f\n# Genres\u3068Aired\u306f\u305d\u308c\u305e\u308c\u4e2d\u8eab\u304c\u8907\u5408\u5316\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u305f\u3081\u306bhigh cardinality\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n# Genres\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u9805\u76ee\u304c\u5217\u6319\u3055\u308c\u3066\u304a\u308a\u3001\u5206\u89e3\u3057\u305f\u304f\u306a\u308b\u3002\n# Aired\u306f\u30b9\u30bf\u30fc\u30c8\u3068\u30a8\u30f3\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u3053\u308c\u3082\u5206\u5272\u3059\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\ncats = []\nfor col in X_train.columns:\n    if X_train[col].dtype == 'object':\n        cats.append(col)\n        \n        print(col, X_train[col].nunique())","3824ca14":"X_train_Genres=X_train.Genres\nX_train_Genres.head","098d9274":"# Genres\u306e\u5206\u5272\u3067\u3059\u304c\u3001TFIDF\u3092\u7528\u3044\u3066\u30ab\u30a6\u30f3\u30c8\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\ntfidf = TfidfVectorizer(max_features=1000, use_idf=False, )\n\nTXT_train_enc = tfidf.fit_transform(X_train.Genres)\nTXT_test_enc = tfidf.transform(X_test.Genres)\n","96c8a0c2":"tfidf.vocabulary_","0351e9fc":"# sparse matrix\u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\n# \u4eca\u56de\u306f\u30ab\u30e9\u30e0\u6570\u304c\u5c11\u306a\u3044\u3067\u3059\u304c\u3001\u4e00\u822c\u306b\u306f\u304b\u306a\u308a\u30ef\u30a4\u30c9\u306b\u306a\u308b\u306e\u3067\u30e1\u30e2\u30ea\u52b9\u7387\u4e0a\u5927\u4e8b\u3067\u3059\u306d\u3002\nTXT_train_enc","061b949b":"# \u5bc6\u884c\u5217\u306b\u5909\u63db\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\nTXT_train_enc.todense()","9da92ace":"#[\u30ea\u30de\u30a4\u30f3\u30c9]\u51e6\u7406\u524d\u306eGenres\u306e1\u884c\u76ee\nX_train_Genres.head(1)","b757a88b":"# \u4eca\u56de\u306f\u5217\u6570\u5c11\u306a\u3044\u306e\u3067\u5bc6\u884c\u5217\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n# \u758e\u884c\u5217\u306e\u307e\u307e\u5b66\u7fd2\u5668\u306b\u5165\u308c\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nTXT_train_enc = TXT_train_enc.todense()\nTXT_test_enc = TXT_test_enc.todense()","98b2bf99":"#\u5143\u306e\u30c7\u30fc\u30bf\u306b\u3042\u3063\u305fGenres\u306e\u5217\u306f\u4e0d\u8981\u306a\u305f\u3081\u3001\u524a\u9664\u3057\u3066\u304a\u304d\u307e\u3059\nX_train.drop(['Genres'], axis=1, inplace=True)\nX_test.drop(['Genres'], axis=1, inplace=True)","89f99eaa":"# Aired\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3053\u3067\u306f\u671f\u9593\u306e\u59cb\u307e\u308a\uff1f\u3060\u3051\u53d6\u308a\u51fa\u3057\u3066\u305d\u308c\u304c\u3069\u308c\u3060\u3051\u4ee5\u524d\u304b\u3092\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n# \u3082\u3063\u3068\u8272\u3005\u826f\u3044\u5de5\u592b\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\ndef aired_datetime(air):\n    try:\n        d = pd.to_datetime('2021-08-01') - pd.to_datetime(air.split(' to ')[0])\n        d \/= pd.Timedelta('1d')\n    except:\n        d = -9999\n    return d","7e29ca52":"# \u5909\u63db\u3057\u307e\u3059\nX_train['Aired'] = X_train['Aired'].apply(aired_datetime)\nX_test['Aired'] = X_test['Aired'].apply(aired_datetime)","e47d7b92":"# Aired\u306e\u5217\u304c\u4f55\u65e5\u524d\u306e\uff1f\u5217\u306b\u5909\u63db\u3067\u304d\u3066\u307e\u3059\nX_train['Aired'] ","58cc963c":"# \u305d\u306e\u4ed6\u306b\u3082\u8272\u3005\u3084\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3082\u3046\u4e00\u62ec\u3057\u3066\u30a8\u30a4\u30e4\u3067Count Encoding\u3057\u3066\u3057\u307e\u3044\u307e\u3059\ncats = []\n\nfor col in X_train.columns:\n    if X_train[col].dtype == 'object':\n        cats.append(col)\n        \nce = CountEncoder(cols=cats)\n\nX_train = ce.fit_transform(X_train)\nX_test = ce.transform(X_test)","3102e3f6":"X_train","b4bda552":"#\u3000\u3071\u3063\u3068\u308f\u304b\u308b\u4e0d\u8981\u30ab\u30e9\u30e0\u306f\u9664\u3044\u3066\u304a\u304d\u307e\u3059\nX_train.drop(['MAL_ID', 'Name'], axis=1, inplace=True)\nX_test.drop(['MAL_ID', 'Name'], axis=1, inplace=True)","266b15be":"# \u5148\u307b\u3069'Genres'\u306e\u3068\u3053\u308d\u3067\u51e6\u7406\u3057\u305f\u30c7\u30fc\u30bf\uff08\u30c6\u30ad\u30b9\u30c8\u30ab\u30e9\u30e0\uff09\u3068\u7d50\u5408\u3057\u307e\u3059\nX_train = np.concatenate([X_train.values, TXT_train_enc], axis=1)\nX_test = np.concatenate([X_test.values, TXT_test_enc], axis=1)","82acfbd6":"# \u30bf\u30fc\u30b2\u30c3\u30c8\u3082numpy\u306earray\u306b\u3057\u3066\u304a\u304d\u307e\u3059\ny_train = y_train.values","3b88c3a2":"# \uff15\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u3067\nscores = []\n\ncv = KFold(n_splits=5, random_state=71, shuffle=True)\n\nfor i, (train_ix, val_ix) in tqdm(enumerate(cv.split(X_train, y_train))):\n    X_train_, y_train_ = X_train[train_ix], y_train[train_ix]\n    X_val, y_val = X_train[val_ix], y_train[val_ix]\n \n    model = XGBRegressor(n_estimators=9999, learning_rate=0.05, random_state=71)\n    model.fit(X_train_, y_train_, eval_set=[(X_val, y_val)], eval_metric='rmse', early_stopping_rounds=30)\n    y_pred = model.predict(X_val)\n    score = mean_squared_error(y_val, y_pred)**0.5\n    scores.append(score)\n    \n    print('CV Score of Fold_%d is %f' % (i, score))\n","e702a537":"# \u5e73\u5747\u30b9\u30b3\u30a2\u3092\u7b97\u51fa\nnp.array(scores).mean()","9c567dfb":"# \u3067\u306f\u3001\u5168\u30c7\u30fc\u30bf\u3067\u518d\u5b66\u7fd2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n# \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u6570\u306f\u5148\u307b\u3069\u306e\u6700\u9069\u5024\u3092\u7528\u3044\u3066\u307f\u307e\u3059\nbest_iter = model.best_iteration\nmodel = XGBRegressor(learning_rate=0.05, n_estimators=best_iter, random_state=71)\nmodel.fit(X_train, y_train)","e7cdcaa0":"# \u3044\u3088\u3044\u3088\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e88\u6e2c\u3057\u307e\u3059\ny_pred_test = model.predict(X_test)\ny_pred_test","42cfaa56":"# \u63d0\u51fa\u7528\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4e88\u6e2c\u5024\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\nsubmission = pd.read_csv('\/kaggle\/input\/data-science-summer2-osaka\/sample_submission.csv', index_col=0)\nsubmission.Score = y_pred_test","9f4da2c6":"submission","ca504329":"# csv\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\nsubmission.to_csv('submission.csv')","80abd1a8":"\u6700\u521d\u7406\u89e3\u304c\u8ffd\u3044\u4ed8\u304b\u306a\u304b\u3063\u305f\u306e\u3067disucussion\u3067\u8cea\u554f\u3057\u3066\u6559\u3048\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\nhttps:\/\/www.kaggle.com\/c\/data-science-summer2-osaka\/discussion\/268002\n\nhttps:\/\/www.kaggle.com\/tyonemoto\/map-apply","9f28d170":"#\u2461\u3000\n#\u3053\u306e\u30b3\u30fc\u30c9\u3092\u53f3\u30af\u30ea\u30c3\u30af\u21d2\uff3bChange to Code Cell Type]\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066Markdown\u21d2Code\u306b\u5909\u63db\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n#\u30c7\u30fc\u30bf\u3092\u6bd4\u7387\u306b\u3057\u305f\u7279\u5fb4\u91cf\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u3057\u307e\u3059\ndf_train['Watching2'] = df_train['Watching'] \/ df_train['Members']\ndf_train['Completed2'] = df_train['Completed'] \/ df_train['Members']\ndf_train['On-Hold2'] = df_train['On-Hold'] \/ df_train['Members']\ndf_train['Dropped2'] = df_train['Dropped'] \/ df_train['Members']\ndf_train['Plan to Watch2'] = df_train['Plan to Watch'] \/ df_train['Members']\n\ndf_test['Watching2'] = df_test['Watching'] \/ df_test['Members']\ndf_test['Completed2'] = df_test['Completed'] \/ df_test['Members']\ndf_test['On-Hold2'] = df_test['On-Hold'] \/ df_test['Members']\ndf_test['Dropped2'] = df_test['Dropped'] \/ df_test['Members']\ndf_test['Plan to Watch2'] = df_test['Plan to Watch'] \/ df_test['Members']","eb3fd0e9":"# \u4e0b\u8a18\u306e\u2460\u2461\u90e8\u306f\u5b9f\u969b\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u306b\u3064\u306a\u304c\u308a\u307e\u3059\n","be0ed9bc":"Count Encoding\u3082\u5148\u307b\u3069\u51fa\u3066\u304d\u305ftdfif\u540c\u69d8\u306b\u8a9e\u5f59(Vocabulary)\u3092\u6570\u5024\u5316\u3059\u308b\u51e6\u7406\u3068\u306a\u308a\u307e\u3059\u3002","3853ba27":"\u300c\u5b66\u7fd2\u3059\u308b\u300d\u304b\u3089\u306f\u8aac\u660e\u4e0d\u8db3\u3057\u3066\u3044\u3066\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\uff08\u73fe\u5728\u52c9\u5f37\u4e2d\u306e\u305f\u3081\uff09\n\u4e0a\u8a18\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092submit\u3059\u308b\u3068\u30b9\u30b3\u30a2\u4e0a\u304c\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002","612040ff":"\u6700\u5f8c\u306e\u6a5f\u68b0\u5b66\u7fd2\u7528\u306b\u7b54\u3048\u4ed8\u306etrain\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7b54\u3048\uff08y_train:Score\uff09\u3068\u305d\u306e\u4ed6\u30c7\u30fc\u30bf\uff08X_train\uff09\u306b\u5206\u5272\u3057\u3066\u307e\u3059\u3002","f6d3284f":"\u6b21\u306bGenres\u306e\u5217\u3092\u8a08\u7b97\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n1\u884c\u76ee\u3092\u898b\u308b\u3068Action, Adventure, Comedy, Drama, Sci-Fi, Space\u306a\u3069\uff11\u884c\u306b\u305f\u304f\u3055\u3093\u306e\u30b8\u30e3\u30f3\u30eb\u304c\u8a70\u3081\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u307e\u307e\u3067\u306f\u6a5f\u68b0\u5b66\u7fd2\u3059\u308b\u969b\u306b\u7279\u5fb4\u304c\u63b4\u307f\u306b\u304f\u3044\u306e\u3067\u30d0\u30e9\u30d0\u30e9\u306b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n","c6aefddf":"## \u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u5b9a\u7fa9\uff08\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u4ed6\u306b\u76ee\u7684\u5909\u6570\uff0c\u51fa\u529b\u3068\u3082\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\uff1f\uff09","98039615":"\u2463\u4eca\u56de\u306eTFDIF\u3067\u306e\u51e6\u7406\u524d\u5f8c\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u3053\u3093\u306a\u306b\u5f62\u304c\u5909\u308f\u308a\u307e\u3057\u305f\n\u6587\u5b57\u306e\u30b8\u30e3\u30f3\u30eb\u306e\u8a9e\u5f59(Vocabulary)\u6bce\u00d7\u30a2\u30cb\u30e1\u6bce\u306e\u884c\u5217\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u5c0f\u6570\u306f\u300c\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6(tf)\u300d\u306b\u300c\u5404\u5358\u8a9e\u306e\u30ec\u30a2\u5ea6(idf)\u300d\u3092\u639b\u3051\u7b97\u3057\u305f\u5024\u3092\u8868\u3057\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\nhttps:\/\/www.marsa-blog.com\/2020\/03\/ml-feature-nature-lang.html#p6","cceb6365":"### \u5165\u529b\u3092\u5b9a\u91cf\u7684\u306a\u5024\u306b\u5909\u63db\nCount Encoding\n> \u30c7\u30fc\u30bf\u306b\u542b\u307e\u308c\u308b\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306e\u51fa\u73fe\u56de\u6570\u3092\u6570\u3048\u308b\u3082\u306e\u3002","31ddd162":"\u6b21\u306bAired\u306e\u5217\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059","fdb3a171":"\u2460\u53c2\u8003\u306b\u3057\u305f\u3044\u30b3\u30fc\u30c9\u3092\u958b\u3044\u3066\u3001\u672c\u30da\u30fc\u30b8\u306e\u53f3\u4e0a\u306e\u300cEdit my copy\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u81ea\u5206\u306e\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059","6299efb8":"## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aad\u307f\u8fbc\u307f \n(\u304a\u6c7a\u307e\u308a\u6587\u53e5\u306a\u306e\u3067\u30b9\u30eb\u30fc\u3067\u3082\u53ef)\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306f\u8272\u3005\u306a\u51e6\u7406\u304c\u3067\u304d\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3000\u5ba3\u8a00\u3057\u306a\u3044\u3068\u305d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4f7f\u3048\u306a\u3044","28e1dd21":"# \u64cd\u4f5c\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044\u30fb\u6642\u9593\u304c\u306a\u304f\u3066\u30b3\u30f3\u30da\u53c2\u52a0\u306e\u624b\u304c\u6b62\u307e\u3063\u3066\u3044\u308b\u65b9\u5411\u3051\n\u203b\u521d\u5fc3\u8005\u4e8b\u52d9\u5c40(\u4eca\u56de\u521dpython\uff0b\u521dkaggle)\u304c\u4ed6\u306e\u53c2\u52a0\u8005\u306edisucussion\u306e\u30b3\u30e1\u30f3\u30c8\u3084share\u9802\u3044\u305fCode\u3092\u53c2\u8003\u306b\u3084\u3063\u305f\u3053\u3068\u3084\u8abf\u3079\u305f\u3053\u3068\u3092\u8a18\u5165\u3057\u3066\u307e\u3059\n\n","55a9894d":"\n\nCount Encoding\u306e\u8aac\u660e\n\nhttps:\/\/www.marsa-blog.com\/2020\/03\/ml-feature-nature-lang.html#p6","6534205d":"Genres\u3067\u3069\u306e\u3088\u3046\u306a\u5358\u8a9e\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059","d891ce7e":"\u4eca\u56de\u306e\u30b3\u30f3\u30da\u3067\u4e0e\u3048\u3089\u308c\u3066\u3044\u308b\u57fa\u672c\u30d5\u30a1\u30a4\u30eb\uff08train.csv\u3068test.csv\uff09\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d","aed15be8":"## \u4e88\u6e2c\u3059\u308b","b8196ad4":"## \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080","a2214706":"## \u8aac\u660e\u5909\u6570\u306e\u5b9a\u7fa9\u3000\uff08\u5165\u529b\u3068\u3082\u3044\u3046\uff09","8b195a46":"discussion\u3067\u3088\u308a\u4e00\u756a\u53f3\u5074\u306b\u3042\u308bMembers\uff5ePlan to Watch\u306e\u5217\u306f\u30e1\u30f3\u30d0\u30fc\u6570\uff08\u30a2\u30f3\u30b1\u30fc\u30c8\u56de\u7b54\u8005\u306e\u7dcf\u6570\uff1f\uff09= \u8996\u8074\u4e2d + \u8996\u8074\u5b8c + \u4fdd\u7559\u4e2d + \u8996\u8074\u6b62\u3081\u305f + \u8996\u8074\u4e88\u5b9a\u306e\u95a2\u4fc2\u306b\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nhttps:\/\/www.kaggle.com\/c\/data-science-summer2-osaka\/discussion\/264386\n","18a12b3a":"\u4e0a\u8a18\u306f","62d0ea29":"## \u63d0\u51fa\u306e\u5f62\u306b\u3057\u3066csv\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b","7877f514":"## \u5b66\u7fd2\u3059\u308b"}}