{"cell_type":{"3203d290":"code","e76605a1":"code","daf15a47":"code","1bb6b87c":"code","bf776b2c":"code","39c71421":"code","326780e5":"code","0a3a3cc1":"code","85ce8a87":"code","60b8d1c5":"code","46b3bd16":"code","9ad97231":"code","301d601e":"code","c11f35bd":"code","ddf9ec7d":"code","4d475861":"code","c5725e4b":"code","078638d4":"code","36e1bd72":"code","8c7d4458":"code","c0cc379b":"code","c0d35eeb":"code","85d06536":"code","6d45f959":"code","9531c9d8":"code","944fe714":"code","926dc029":"code","2ebd2bd4":"code","3cbe362c":"code","9ad51faa":"code","c320b0a2":"code","689ccd76":"code","663c97bd":"code","88870233":"code","3338bbc5":"code","99313545":"code","20cd86fb":"code","ee8943fe":"code","0a95e88c":"code","ef9a9e28":"code","8b38feb9":"code","1255243f":"code","e72c4840":"code","f6f24d9d":"code","36448f89":"code","8e12ce8e":"code","5a022c02":"code","8787de53":"code","846b78bd":"code","95762f34":"code","8f206488":"markdown","da5864b3":"markdown","b01ef221":"markdown","a1874d55":"markdown","e63847a3":"markdown","b72883d3":"markdown","78a91d80":"markdown","ac8469ab":"markdown","ad0bbb56":"markdown","0361c9b7":"markdown","7dbfcd75":"markdown","dab81e9c":"markdown","bde1f0d3":"markdown","26be7bb5":"markdown","b7ef1fa5":"markdown","8510aacd":"markdown","21c113ba":"markdown","38fa2a20":"markdown","1cb83901":"markdown","ab6a48d0":"markdown","c76ecbe4":"markdown","2e4357ef":"markdown","2ab93bef":"markdown","e7a22c10":"markdown","8aa04ed0":"markdown","cff0da05":"markdown","b2e53ccb":"markdown","7072085f":"markdown","05154020":"markdown","98eb3034":"markdown","9f30505a":"markdown","d7fe6a6d":"markdown","ec75862a":"markdown","bbf6e9c0":"markdown","8ead09d9":"markdown"},"source":{"3203d290":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom plotly.offline import init_notebook_mode, iplot, plot\nimport plotly as py\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import iplot\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import f1_score\nfrom sklearn.metrics import confusion_matrix\nfrom keras.utils.np_utils import to_categorical\nfrom sklearn.utils import class_weight\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import optimizers, losses, datasets\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ntf.__version__\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","e76605a1":"df = pd.read_csv(\"..\/input\/heart-failure-clinical-data\/heart_failure_clinical_records_dataset.csv\")","daf15a47":"df.head()","1bb6b87c":"df.shape","bf776b2c":"df.info()","39c71421":"df.describe().T","326780e5":"df.isna().sum()","0a3a3cc1":"df.corr()","85ce8a87":"corr = df.corr()\nax = plt.subplots(figsize=(20,10)) \nax = sns.heatmap(corr, \n            xticklabels=corr.columns.values,\n            yticklabels=corr.columns.values, annot=True);","60b8d1c5":"df[\"DEATH_EVENT\"].value_counts()","46b3bd16":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"DEATH_EVENT\"]);","9ad97231":"fig_data = ['anaemia', 'diabetes', 'high_blood_pressure','sex', 'smoking']\nq = 1\nplt.figure(figsize=(16,12))\n# Plot a grid with count plots of all categorical variables\nfor j in fig_data:\n    plt.subplot(2,3,q)\n    ax = sns.countplot(df[j], hue=df.DEATH_EVENT)\n    plt.xlabel(j)\n    q += 1\nplt.show()","301d601e":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"age\", data=df)\nplt.title('DEATH_EVENT- AGE')\nplt.show()","c11f35bd":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"serum_creatinine\", data=df)\nplt.title('DEATH_EVENT- serum_creatinine')\nplt.show()","ddf9ec7d":"plt.figure(figsize=(18,5))\nsns.violinplot(x=\"DEATH_EVENT\", y=\"time\", data=df)\nplt.title('DEATH_EVENT- TIME')\nplt.show()","4d475861":"df[\"age\"].value_counts()","c5725e4b":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.distplot(df[\"age\"], color=\"b\");\nplt.show()","078638d4":"fig=ff.create_distplot([df['serum_sodium'].values],['serum_sodium'])\nfig.update_layout(title_text='serum_sodium Distribution plot')\nfig.show()","36e1bd72":"df[\"high_blood_pressure\"].value_counts()","8c7d4458":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"yellow\", \"red\"]\nplt.pie(df[\"high_blood_pressure\"].value_counts(), labels=[\"Normal Blood Pressure\", \"High Blood Pressure\"],\n        explode = (0.1,0), shadow=True, colors=colors);","c0cc379b":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"diabetes\"], palette=[\"skyblue\", \"deepskyblue\"]);","c0d35eeb":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"anaemia\"], palette=[\"olivedrab\",\"darkolivegreen\"]);","85d06536":"plt.style.use(\"classic\")\nfig, ax = plt.subplots(figsize=(8,6))\nsns.countplot(df[\"sex\"], palette=[\"pink\", \"skyblue\"],);","6d45f959":"plt.style.use(\"seaborn\")\nfig, ax = plt.subplots(figsize=(8,6))\ncolors = [\"mediumorchid\", \"darkorchid\"]\nplt.pie(df[\"smoking\"].value_counts(), labels=[\"Non-Smoker\", \"Smoker\"],\n        explode = (0.05,0), shadow=True, colors=colors);","9531c9d8":"sns.catplot(x=\"DEATH_EVENT\", y=\"creatinine_phosphokinase\", hue=\"sex\", kind=\"swarm\", data=df)\nplt.show()","944fe714":"male = df[df[\"sex\"]==1]\nfemale = df[df[\"sex\"]==0]\n\n\nlabels = ['Male - Survived','Male - Not Survived', \"Female -  Survived\", \"Female - Not Survived\"]\nvalues = [len(male[df[\"DEATH_EVENT\"]==0]),len(male[df[\"DEATH_EVENT\"]==1]),\n          len(female[df[\"DEATH_EVENT\"]==0]),len(female[df[\"DEATH_EVENT\"]==1])]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text=\"Analysis on Survival - Gender\")\nfig.show()","926dc029":"yes_diabetes=df[df['diabetes']==1]\nno_diabetes=df[df['diabetes']==0]\n\ndia_deaths=yes_diabetes[df['DEATH_EVENT']==1]\ndia_live=yes_diabetes[df['DEATH_EVENT']==0]\nno_dia_deaths=no_diabetes[df['DEATH_EVENT']==1]\nno_dia_live=no_diabetes[df['DEATH_EVENT']==0]\nlabels=['died having diabetes','survived having diabetes','died not having diabetes','survived not having diabetes']\nvalues=[len(dia_deaths),len(dia_live),len(no_dia_deaths),len(no_dia_live)]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text='testing')\nfig.show()","2ebd2bd4":"male=df[df['sex']==1]\nfemale=df[df['sex']==0]\n\nmale_smoking=male[df['smoking']==1]\nmale_nosmoking=male[df['smoking']==0]\nfemale_smoking=female[df['smoking']==1]\nfemale_nosmoking=female[df['smoking']==0]\nlabels=['male smoking','male no smoking','female smoking','female no smoking']\nvalues=[len(male_smoking),len(male_nosmoking),len(female_smoking),len(female_nosmoking)]\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.4)])\nfig.update_layout(title_text='testing')\nfig.show()","3cbe362c":"df.head()","9ad51faa":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"creatinine_phosphokinase\"])\nplt.show()","c320b0a2":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"platelets\"])\nplt.show()","689ccd76":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"serum_sodium\"])\nplt.show()","663c97bd":"fig=plt.figure(figsize=(20,10))\nsns.boxplot(data=df[\"serum_creatinine\"])\nplt.show()","88870233":"df","3338bbc5":"y=df[\"DEATH_EVENT\"]\nX=df.drop([\"DEATH_EVENT\"],axis=1)","99313545":"X.shape","20cd86fb":"y.shape","ee8943fe":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0);","0a95e88c":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","ef9a9e28":"X_train, y_train = shuffle(X_train, y_train)","8b38feb9":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'tanh'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","1255243f":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","e72c4840":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(128, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(64, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","f6f24d9d":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'sgd', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","36448f89":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 200)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","8e12ce8e":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 16, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","5a022c02":"y=y.values","8787de53":"X=X.values","846b78bd":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)","95762f34":"model = keras.models.Sequential()\nmodel.add(keras.layers.Dense(64, input_shape=(12,), activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(32, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(16, activation = 'relu'))\nmodel.add(Dropout(0.25))\nmodel.add(keras.layers.Dense(1,  activation = 'sigmoid'))\nmodel.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])\nmodel.fit(X_train, y_train, batch_size = 32, epochs = 100)\n\ny_pred = model.predict(X_test)\ny_pred = np.round(y_pred)\nprint(classification_report(y_test, y_pred))\nprint(confusion_matrix(y_test, y_pred))\nprint(\"test accuracy:\", accuracy_score(y_test, y_pred))","8f206488":"Veri setimizde eksik de\u011fer bulunmamaktad\u0131r. Eksik veri doldurma i\u015flemi yapmam\u0131za gerek kalmad\u0131.","da5864b3":"Normalizasyonumuzu yapal\u0131m.","b01ef221":"# Derin \u00d6\u011frenme","a1874d55":"Veri \u00e7er\u00e7evesinin ka\u00e7 \u00f6znitelik ve ka\u00e7 g\u00f6zlemden olu\u015ftu\u011funu g\u00f6r\u00fcnt\u00fcleyelim.","e63847a3":"Veri \u00e7er\u00e7evemizi bulundu\u011fumuz dizinden y\u00fckleyelim ve bir veri \u00e7er\u00e7evesi haline getirerek df de\u011fi\u015fkenine atayal\u0131m","b72883d3":"DEATH_EVENT - AGE violent plotunu inceledi\u011fimizde iki grafi\u011finde birbirine benzedi\u011fini ve 50-70 aral\u0131\u011f\u0131nda yo\u011funluk oldu\u011funu s\u00f6yleyebiliriz","78a91d80":"DEATH_EVENT - time violent plotunu inceledi\u011fimizde iki durum i\u00e7in olu\u015fturulan grafiklerin birbirinden \u00e7ok farkl\u0131 oldu\u011funu g\u00f6rebiliriz. DEATH_EVENT = 0 durumunda yo\u011funlu\u011fun 250-200 ve 70-120 aral\u0131klar\u0131nda oldu\u011funu, DEATH_EVENT = 1 durumunda ise yo\u011funlu\u011fun 0-100 aral\u0131\u011f\u0131nda oldu\u011funu s\u00f6yleyebiliriz.","ac8469ab":"DEATH_EVENT - serum_creatinine violent plotunu inceledi\u011fimizde DEATH_EVENT = 0 durumunda yo\u011fun olarak 0-2 aral\u0131\u011f\u0131nda,DEATH_EVENT = 1 durumunda da yo\u011funlu\u011fun ayn\u0131 aral\u0131kta ancak daha dengeli oldu\u011funu s\u00f6yleyebiliriz.","ad0bbb56":"En g\u00fc\u00e7l\u00fc pozitif ili\u015fki sex ile smoking \u00f6znitelikleri aras\u0131ndad\u0131r. En g\u00fc\u00e7l\u00fc negatif ili\u015fki ise time ile DEATH_EVENT \u00f6znitelikleri aras\u0131ndad\u0131r","0361c9b7":"Say\u0131sal de\u011fi\u015fkenler aras\u0131nda korelasyon olup olmad\u0131\u011f\u0131n\u0131 g\u00f6stermek i\u00e7in korelasyon matrisi \u00e7izdirelim. Korelasyon katsay\u0131lar\u0131 hakk\u0131nda fikir y\u00fcr\u00fctelim.","7dbfcd75":"Verimizi shuffle ediyoruz.","dab81e9c":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun diyabet hastas\u0131 olmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","bde1f0d3":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun anemi olmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","26be7bb5":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun cinsiyetinin erkek oldu\u011funu g\u00f6rebiliriz.","b7ef1fa5":"Hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131n\u0131 inceledi\u011fimizde \u00f6l\u00fcm olmayan g\u00f6zlemlerin fazlal\u0131kta oldu\u011funu s\u00f6yleyebilriz","8510aacd":"train-test olarak ay\u0131ral\u0131m. Verilerin %20 sini test i\u00e7in ay\u0131r\u0131yoruz","21c113ba":"Grafi\u011fi inceledi\u011fimizde; 40 95 aral\u0131\u011f\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131 ve 60 civar\u0131 de\u011ferlerin yo\u011funlukta oldu\u011funu s\u00f6yleyebiliriz.","38fa2a20":"Veri \u00e7er\u00e7evesindeki say\u0131sal de\u011fi\u015fkenler i\u00e7in temel istatistik de\u011ferlerini g\u00f6r\u00fcnt\u00fcleyelim.","1cb83901":"Grafi\u011fi inceledi\u011fimizde serum_sodium \u00f6zniteli\u011finin 113-148 aras\u0131nda de\u011ferler ald\u0131\u011f\u0131n\u0131 ve 136 ya e\u015fit olan de\u011ferlerin en fazla oldu\u011funu s\u00f6yleyebiliriz.","ab6a48d0":"creatinine_phosphokinase \u00f6zniteli\u011finde genellikle 0-1000 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","c76ecbe4":"Age \u00f6zniteli\u011fini inceleyelim.","2e4357ef":"serum_sodium \u00f6zniteli\u011finde genellikle 130-140 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","2ab93bef":"### Hedef de\u011fi\u015fkenimizi ay\u0131ral\u0131m.","e7a22c10":"platelets \u00f6zniteli\u011finde genellikle 200000-300000 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","8aa04ed0":"serum_creatinine \u00f6zniteli\u011finde genellikle 0-2 aras\u0131nda de\u011fer ald\u0131\u011f\u0131n\u0131, ayk\u0131r\u0131 verinin ise az oldu\u011fu g\u00f6zlemlenmektedir.","cff0da05":"Hedef de\u011fi\u015fkenin da\u011f\u0131l\u0131m\u0131n\u0131 inceleyelim.","b2e53ccb":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun sigara kullanmad\u0131\u011f\u0131n\u0131 g\u00f6rebiliriz.","7072085f":"Veri \u00e7er\u00e7evesinin ilk 5 g\u00f6zlemini g\u00f6r\u00fcnt\u00fcleyelim.","05154020":"Korelasyon katsay\u0131lar\u0131n\u0131 daha iyi okuyabilmek i\u00e7in \u0131s\u0131 haritas\u0131 \u00e7izdirelim.","98eb3034":"Veri \u00e7er\u00e7evesinde hangi \u00f6znitelikte ka\u00e7 adet eksik de\u011fer oldu\u011funu g\u00f6zlemleyelim.","9f30505a":"Grafikleri inceledi\u011fimizde;\n\n* Anemi'ye sahip g\u00f6zlemlerde \u00f6l\u00fcm oran\u0131n\u0131n y\u00fcksek oldu\u011funu, \n* Diyabet'e sahip olanlar\u0131n oran\u0131nda g\u00f6zle g\u00f6r\u00fcl\u00fcr bir fark olmad\u0131\u011f\u0131n\u0131, \n* Y\u00fcksek kan bas\u0131nc\u0131na sahip olanlar\u0131n \u00f6l\u00fcm oran\u0131n\u0131n daha y\u00fcksek oldu\u011funu, \n* Cinsiyetin \u00f6l\u00fcm oran\u0131na g\u00f6zle g\u00f6r\u00fcl\u00fcr bi etkisinin olmad\u0131\u011f\u0131n\u0131,\n* Sigara kullananlarda kullanmayanlara g\u00f6re \u00f6l\u00fcm oran\u0131nda g\u00f6zle g\u00f6r\u00fcl\u00fcr bir fark olmad\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz.","d7fe6a6d":"Grafi\u011fi inceledi\u011fimizde;\n* Diyabet hastas\u0131 g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %28.4 oldu\u011funu,\n* Diyabet hastas\u0131 olmayan g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %39.5 oldu\u011funu,\n* Diyabet hastas\u0131 g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %13.4 oldu\u011funu,\n* Diyabet hastas\u0131 olmayan g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %18.7 oldu\u011funu s\u00f6yleyebiliriz.","ec75862a":"Grafi\u011fi inceledi\u011fimizde;\n* Erkek g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %44.1 oldu\u011funu,\n* Kad\u0131n g\u00f6zlemlerden hayatta kalanlar\u0131n oran\u0131n\u0131n %23.7 oldu\u011funu,\n* Erkek g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %20.7 oldu\u011funu,\n* Kad\u0131n g\u00f6zlemlerden hayat\u0131n\u0131 kaybedenlerin oran\u0131n\u0131n %11.4 oldu\u011funu s\u00f6yleyebiliriz.","bbf6e9c0":"Veri setindeki g\u00f6zlemlerden \u00e7o\u011funlu\u011funun normal kan bas\u0131nc\u0131na sahip oldu\u011funu g\u00f6rebiliriz.","8ead09d9":"grafi\u011fi inceledi\u011fimizde; creatinine_phosphokinase = 0 olan daha \u00e7ok g\u00f6zlemin oldu\u011funu, bu g\u00f6zlemlerin \u00e7o\u011funlu\u011funun 0-1000 aral\u0131\u011f\u0131nda yo\u011funla\u015ft\u0131\u011f\u0131n\u0131 ve cinsiyetin normal da\u011f\u0131ld\u0131\u011f\u0131n\u0131 s\u00f6yleyebiliriz."}}