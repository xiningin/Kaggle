{"cell_type":{"237159f3":"code","6213ed86":"code","a522a44a":"code","dc01b89c":"code","e61c66ef":"code","ee2c25de":"code","098d171c":"code","92b07434":"code","43e1a055":"code","370dfbbc":"code","b16320d4":"code","088f2f41":"code","b8bea03e":"code","eebd71bb":"code","ac2f3a81":"code","81b3ab63":"code","4d8b5b7b":"code","b2439806":"code","ce6dff21":"code","47f07c93":"code","87ef6cf5":"code","f9244782":"code","415b6208":"code","19729f97":"code","f3dc4d2a":"code","cb2ce448":"code","1bd8c9a6":"code","f0b569b6":"code","3d9b6da9":"code","05c14fc0":"code","8b401ba0":"code","dcabb68b":"code","ed2e2722":"code","13b88383":"code","a5529ec9":"code","856360e0":"code","ae702ec3":"code","3b89cf45":"code","c654ccbe":"code","0e85a3b6":"code","7813e134":"code","dad34519":"code","a6e309c3":"code","7157390c":"code","93af12f4":"code","02d23e1e":"code","6c7b2758":"code","e93a0cc1":"code","b28fa367":"code","c1655187":"code","f7337826":"code","48a73f6e":"code","10353a72":"code","9c32a401":"code","f94a88d1":"code","10a15bff":"code","b56aee38":"code","b7c6f073":"code","fd79caea":"code","88121c63":"code","f50b46ac":"code","a79e6299":"code","1216ebf0":"code","7550cedb":"code","bbd48da5":"code","d1b8dbc5":"code","72e0b671":"code","1b0ae4e6":"code","b7e45806":"code","af0ecc04":"code","0a620c9e":"code","d44a1b55":"code","ec0b1aab":"code","e6f3f6fd":"code","db1cfac9":"code","eef7fbdf":"code","db3af0c0":"code","8e6256ef":"code","890998b1":"code","be9ce5d7":"code","779c8135":"code","c4199fac":"code","3d88a537":"code","5f085b20":"code","da46235e":"code","27410bff":"code","ac88117b":"code","4d617585":"code","9f8f6002":"code","6c84bde0":"code","31ed76ea":"code","72466650":"code","d6bd33c6":"code","9f9dfb8d":"code","426f1fe2":"code","4252e340":"code","c3ffb032":"code","373911f7":"code","697da930":"code","3cd60cc9":"code","13082f92":"code","aaf2a5a3":"code","e1310060":"code","130d6292":"code","f8641962":"code","cd462bf2":"code","5bc8d525":"code","fcf8bcbf":"code","0fcd87f1":"code","acb26544":"code","5e981aeb":"code","a8d8519a":"code","0f9e4dc2":"code","51cf50ea":"code","3eff68f1":"code","9da392cb":"code","5324ae4c":"code","18338037":"code","a936bf33":"code","ef2bb937":"code","2ed04526":"code","e6c5153e":"code","0ecb3101":"code","89d12ae5":"code","3e9cb7ba":"code","dbb378ec":"code","68158e2a":"code","ba8dcf79":"code","bd259196":"code","e52576a3":"code","f8248b3b":"code","de761ad7":"code","f0d1b031":"code","c14cbc2b":"code","93d69710":"code","06027207":"code","8adf2fe2":"code","f16201ba":"code","9465b17c":"code","2e2d1306":"code","bfb40150":"code","e052c216":"code","3fe5f72c":"code","d69fd0d8":"code","509806eb":"code","c43250c7":"code","4df96673":"code","5109e08d":"code","e6f1df13":"code","af97b2a5":"code","c46e6599":"code","2833aaa9":"code","435f42e0":"code","8a019acc":"code","578d15e3":"code","399f2921":"code","02ef21d1":"code","3c62ee1c":"code","5b592c4c":"code","695dfcc0":"code","de3cf38a":"code","3ea42754":"code","17a38406":"code","cc2048f8":"code","37aecf22":"code","34c7d210":"code","0e9ea630":"code","c918b986":"code","a9a46d1a":"code","0f70c1a7":"code","438bd1a9":"code","b03029ad":"code","78d4cee4":"code","b81a7fb9":"code","0f2e07a5":"code","aa6ab348":"code","1dd46e07":"code","ea888333":"code","8edfc6ed":"code","ef156e48":"code","03f214ef":"code","9c7447ca":"code","a23069f7":"code","117bef10":"code","1e001544":"code","b446700b":"code","cc1266f8":"code","70676f17":"code","9712b9bd":"code","e300e806":"code","2cdf08e2":"code","31694327":"code","393047c1":"code","2bd757d0":"code","d29e3505":"code","8af73dff":"code","f745bb06":"markdown","44796733":"markdown","0334f0cc":"markdown","df3571b3":"markdown","86cb728d":"markdown","7f1da0d9":"markdown","0c8b25a7":"markdown","2b3dc3cc":"markdown","f71f771d":"markdown","d02b3770":"markdown","0f02e815":"markdown","de47d26d":"markdown","c5bba872":"markdown","dbfb376a":"markdown","f68c44ca":"markdown","a1b3ffe6":"markdown","a3e054d9":"markdown","ff509cf3":"markdown","111db115":"markdown","c44c2c60":"markdown","40d77841":"markdown","625e17b0":"markdown","371ccccb":"markdown","47434766":"markdown","2b9069de":"markdown","39ed3c92":"markdown","12cee3de":"markdown","8d77b3c2":"markdown","2c2f4067":"markdown","a8144857":"markdown","831d7850":"markdown","9fd0c170":"markdown","92376cc2":"markdown","9569d67e":"markdown","50a27bb3":"markdown","84914b4e":"markdown","8a0b08f6":"markdown","f3f977c2":"markdown","d3e6656b":"markdown","d57f8f34":"markdown","80a503ab":"markdown","0cb88fe9":"markdown","188975e0":"markdown","5c3fe3e7":"markdown","0c0895ed":"markdown","23408b24":"markdown","f3f35d6e":"markdown","3de524d4":"markdown","d1015269":"markdown","a631ca6f":"markdown","164280da":"markdown","fb07b345":"markdown","bc305a1e":"markdown","4c5c101f":"markdown","9d2678be":"markdown","8debf6e0":"markdown","d069447b":"markdown","2bf7fef3":"markdown","2e31d82e":"markdown","f71c4885":"markdown","263a8ba1":"markdown","5f003e6a":"markdown","c0cc89a2":"markdown","b84aea49":"markdown","476b8234":"markdown","f98f872a":"markdown","835038b2":"markdown","3ba1f7a4":"markdown","80f0daa1":"markdown","1cf31ac9":"markdown","fce04b17":"markdown","43cc42f4":"markdown","e02d0dd7":"markdown","8e4e636d":"markdown","c97820f2":"markdown","c70c16e5":"markdown","97e64e31":"markdown","1338f94a":"markdown","0dee4134":"markdown","76c12688":"markdown","fe81a629":"markdown","b56a5aa0":"markdown","6d63bee4":"markdown","151de500":"markdown","bdb1dfcd":"markdown"},"source":{"237159f3":"# Supress Warnings\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# visulaisation\nfrom matplotlib.pyplot import xticks\n%matplotlib inline\n\n# Data display coustomization\npd.set_option('display.max_rows', 100)\npd.set_option('display.max_columns', 100)","6213ed86":"data = pd.DataFrame(pd.read_csv('..\/input\/Leads.csv'))\ndata.head(5) ","a522a44a":"#checking duplicates\nsum(data.duplicated(subset = 'Prospect ID')) == 0\n# No duplicate values","dc01b89c":"data.shape","e61c66ef":"data.info()","ee2c25de":"data.describe()","098d171c":"# As we can observe that there are select values for many column.\n#This is because customer did not select any option from the list, hence it shows select.\n# Select values are as good as NULL.\n\n# Converting 'Select' values to NaN.\ndata = data.replace('Select', np.nan)","92b07434":"data.isnull().sum()","43e1a055":"round(100*(data.isnull().sum()\/len(data.index)), 2)","370dfbbc":"# we will drop the columns having more than 70% NA values.\ndata = data.drop(data.loc[:,list(round(100*(data.isnull().sum()\/len(data.index)), 2)>70)].columns, 1)","b16320d4":"# Now we will take care of null values in each column one by one.","088f2f41":"# Lead Quality: Indicates the quality of lead based on the data and intuition the the employee who has been assigned to the lead","b8bea03e":"data['Lead Quality'].describe()","eebd71bb":"sns.countplot(data['Lead Quality'])","ac2f3a81":"# As Lead quality is based on the intution of employee, so if left blank we can impute 'Not Sure' in NaN safely.\ndata['Lead Quality'] = data['Lead Quality'].replace(np.nan, 'Not Sure')","81b3ab63":"sns.countplot(data['Lead Quality'])","4d8b5b7b":"# Asymmetrique Activity Index  |\n# Asymmetrique Profile Index   \\   An index and score assigned to each customer\n# Asymmetrique Activity Score  |    based on their activity and their profile\n# Asymmetrique Profile Score   \\","b2439806":"fig, axs = plt.subplots(2,2, figsize = (10,7.5))\nplt1 = sns.countplot(data['Asymmetrique Activity Index'], ax = axs[0,0])\nplt2 = sns.boxplot(data['Asymmetrique Activity Score'], ax = axs[0,1])\nplt3 = sns.countplot(data['Asymmetrique Profile Index'], ax = axs[1,0])\nplt4 = sns.boxplot(data['Asymmetrique Profile Score'], ax = axs[1,1])\nplt.tight_layout()","ce6dff21":"# There is too much variation in thes parameters so its not reliable to impute any value in it. \n# 45% null values means we need to drop these columns.","47f07c93":"data = data.drop(['Asymmetrique Activity Index','Asymmetrique Activity Score','Asymmetrique Profile Index','Asymmetrique Profile Score'],1)","87ef6cf5":"round(100*(data.isnull().sum()\/len(data.index)), 2)","f9244782":"# City","415b6208":"data.City.describe()","19729f97":"sns.countplot(data.City)\nxticks(rotation = 90)","f3dc4d2a":"# Around 60% of the data is Mumbai so we can impute Mumbai in the missing values.","cb2ce448":"data['City'] = data['City'].replace(np.nan, 'Mumbai')","1bd8c9a6":"# Specailization","f0b569b6":"data.Specialization.describe()","3d9b6da9":"sns.countplot(data.Specialization)\nxticks(rotation = 90)","05c14fc0":"# It maybe the case that lead has not entered any specialization if his\/her option is not availabe on the list,\n#  may not have any specialization or is a student.\n# Hence we can make a category \"Others\" for missing values. ","8b401ba0":"data['Specialization'] = data['Specialization'].replace(np.nan, 'Others')","dcabb68b":"round(100*(data.isnull().sum()\/len(data.index)), 2)","ed2e2722":"# Tags","13b88383":"data.Tags.describe()","a5529ec9":"fig, axs = plt.subplots(figsize = (15,7.5))\nsns.countplot(data.Tags)\nxticks(rotation = 90)","856360e0":"# Blanks in the tag column may be imputed by 'Will revert after reading the email'.","ae702ec3":"data['Tags'] = data['Tags'].replace(np.nan, 'Will revert after reading the email')","3b89cf45":"# What matters most to you in choosing a course","c654ccbe":"data['What matters most to you in choosing a course'].describe()","0e85a3b6":"# Blanks in the this column may be imputed by 'Better Career Prospects'.","7813e134":"data['What matters most to you in choosing a course'] = data['What matters most to you in choosing a course'].replace(np.nan, 'Better Career Prospects')","dad34519":"# Occupation","a6e309c3":"data['What is your current occupation'].describe()","7157390c":"# 86% entries are of Unemployed so we can impute \"Unemployed\" in it.","93af12f4":"data['What is your current occupation'] = data['What is your current occupation'].replace(np.nan, 'Unemployed')","02d23e1e":"# Country","6c7b2758":"# Country is India for most values so let's impute the same in missing values.\ndata['Country'] = data['Country'].replace(np.nan, 'India')","e93a0cc1":"round(100*(data.isnull().sum()\/len(data.index)), 2)","b28fa367":"# Rest missing values are under 2% so we can drop these rows.\ndata.dropna(inplace = True)","c1655187":"round(100*(data.isnull().sum()\/len(data.index)), 2)","f7337826":"data.to_csv('Leads_cleaned')","48a73f6e":"# Converted is the target variable, Indicates whether a lead has been successfully converted (1) or not (0).","10353a72":"Converted = (sum(data['Converted'])\/len(data['Converted'].index))*100\nConverted","9c32a401":"sns.countplot(x = \"Lead Origin\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","f94a88d1":"fig, axs = plt.subplots(figsize = (15,7.5))\nsns.countplot(x = \"Lead Source\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","10a15bff":"data['Lead Source'] = data['Lead Source'].replace(['google'], 'Google')\ndata['Lead Source'] = data['Lead Source'].replace(['Click2call', 'Live Chat', 'NC_EDM', 'Pay per Click Ads', 'Press_Release',\n  'Social Media', 'WeLearn', 'bing', 'blog', 'testone', 'welearnblog_Home', 'youtubechannel'], 'Others')\n","b56aee38":"sns.countplot(x = \"Lead Source\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","b7c6f073":"fig, axs = plt.subplots(1,2,figsize = (15,7.5))\nsns.countplot(x = \"Do Not Email\", hue = \"Converted\", data = data, ax = axs[0])\nsns.countplot(x = \"Do Not Call\", hue = \"Converted\", data = data, ax = axs[1])","fd79caea":"data['TotalVisits'].describe(percentiles=[0.05,.25, .5, .75, .90, .95, .99])","88121c63":"sns.boxplot(data['TotalVisits'])","f50b46ac":"# As we can see there are a number of outliers in the data.\n# We will cap the outliers to 95% value for analysis.","a79e6299":"percentiles = data['TotalVisits'].quantile([0.05,0.95]).values\ndata['TotalVisits'][data['TotalVisits'] <= percentiles[0]] = percentiles[0]\ndata['TotalVisits'][data['TotalVisits'] >= percentiles[1]] = percentiles[1]","1216ebf0":"sns.boxplot(data['TotalVisits'])","7550cedb":"sns.boxplot(y = 'TotalVisits', x = 'Converted', data = data)","bbd48da5":"data['Total Time Spent on Website'].describe()","d1b8dbc5":"sns.boxplot(data['Total Time Spent on Website'])","72e0b671":"sns.boxplot(y = 'Total Time Spent on Website', x = 'Converted', data = data)","1b0ae4e6":"data['Page Views Per Visit'].describe()","b7e45806":"sns.boxplot(data['Page Views Per Visit'])","af0ecc04":"# As we can see there are a number of outliers in the data.\n# We will cap the outliers to 95% value for analysis.","0a620c9e":"percentiles = data['Page Views Per Visit'].quantile([0.05,0.95]).values\ndata['Page Views Per Visit'][data['Page Views Per Visit'] <= percentiles[0]] = percentiles[0]\ndata['Page Views Per Visit'][data['Page Views Per Visit'] >= percentiles[1]] = percentiles[1]","d44a1b55":"sns.boxplot(data['Page Views Per Visit'])","ec0b1aab":"sns.boxplot(y = 'Page Views Per Visit', x = 'Converted', data = data)","e6f3f6fd":"data['Last Activity'].describe()","db1cfac9":"fig, axs = plt.subplots(figsize = (15,5))\nsns.countplot(x = \"Last Activity\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","eef7fbdf":"# Let's keep considerable last activities as such and club all others to \"Other_Activity\"\ndata['Last Activity'] = data['Last Activity'].replace(['Had a Phone Conversation', 'View in browser link Clicked', \n                                                       'Visited Booth in Tradeshow', 'Approached upfront',\n                                                       'Resubscribed to emails','Email Received', 'Email Marked Spam'], 'Other_Activity')","db3af0c0":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"Last Activity\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","8e6256ef":"data.Country.describe()","890998b1":"data.Specialization.describe()","be9ce5d7":"data['Specialization'] = data['Specialization'].replace(['Others'], 'Other_Specialization')","779c8135":"fig, axs = plt.subplots(figsize = (15,5))\nsns.countplot(x = \"Specialization\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","c4199fac":"data['What is your current occupation'].describe()","3d88a537":"data['What is your current occupation'] = data['What is your current occupation'].replace(['Other'], 'Other_Occupation')","5f085b20":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"What is your current occupation\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","da46235e":"data['What matters most to you in choosing a course'].describe()\n","27410bff":"data.Search.describe()","ac88117b":"data.Magazine.describe()","4d617585":"data['Newspaper Article'].describe()","9f8f6002":"data['X Education Forums'].describe()","6c84bde0":"data['Newspaper'].describe()","31ed76ea":"data['Digital Advertisement'].describe()","72466650":"data['Through Recommendations'].describe()","d6bd33c6":"data['Receive More Updates About Our Courses'].describe()","9f9dfb8d":"data.Tags.describe()","426f1fe2":"fig, axs = plt.subplots(figsize = (15,5))\nsns.countplot(x = \"Tags\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","4252e340":"# Let's keep considerable last activities as such and club all others to \"Other_Activity\"\ndata['Tags'] = data['Tags'].replace(['In confusion whether part time or DLP', 'in touch with EINS','Diploma holder (Not Eligible)',\n                                     'Approached upfront','Graduation in progress','number not provided', 'opp hangup','Still Thinking',\n                                    'Lost to Others','Shall take in the next coming month','Lateral student','Interested in Next batch',\n                                    'Recognition issue (DEC approval)','Want to take admission but has financial problems',\n                                    'University not recognized'], 'Other_Tags')","c3ffb032":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"Tags\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","373911f7":"data['Lead Quality'].describe()","697da930":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"Lead Quality\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","3cd60cc9":"data['Update me on Supply Chain Content'].describe()","13082f92":"data['Get updates on DM Content'].describe()","aaf2a5a3":"data['I agree to pay the amount through cheque'].describe()","e1310060":"data['A free copy of Mastering The Interview'].describe()","130d6292":"data.City.describe()","f8641962":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"City\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","cd462bf2":"data['Last Notable Activity'].describe()","5bc8d525":"fig, axs = plt.subplots(figsize = (10,5))\nsns.countplot(x = \"Last Notable Activity\", hue = \"Converted\", data = data)\nxticks(rotation = 90)","fcf8bcbf":"data = data.drop(['Lead Number','What matters most to you in choosing a course','Search','Magazine','Newspaper Article','X Education Forums','Newspaper',\n           'Digital Advertisement','Through Recommendations','Receive More Updates About Our Courses','Update me on Supply Chain Content',\n           'Get updates on DM Content','I agree to pay the amount through cheque','A free copy of Mastering The Interview','Country'],1)","0fcd87f1":"data.shape","acb26544":"data.head()","5e981aeb":"# List of variables to map\n\nvarlist =  ['Do Not Email', 'Do Not Call']\n\n# Defining the map function\ndef binary_map(x):\n    return x.map({'Yes': 1, \"No\": 0})\n\n# Applying the function to the housing list\ndata[varlist] = data[varlist].apply(binary_map)","a8d8519a":"# Creating a dummy variable for some of the categorical variables and dropping the first one.\ndummy1 = pd.get_dummies(data[['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization','What is your current occupation',\n                              'Tags','Lead Quality','City','Last Notable Activity']], drop_first=True)\ndummy1.head()","0f9e4dc2":"# Adding the results to the master dataframe\ndata = pd.concat([data, dummy1], axis=1)\ndata.head()","51cf50ea":"data = data.drop(['Lead Origin', 'Lead Source', 'Last Activity', 'Specialization','What is your current occupation','Tags','Lead Quality','City','Last Notable Activity'], axis = 1)","3eff68f1":"data.head()","9da392cb":"from sklearn.model_selection import train_test_split\n\n# Putting feature variable to X\nX = data.drop(['Prospect ID','Converted'], axis=1)","5324ae4c":"X.head()","18338037":"# Putting response variable to y\ny = data['Converted']\n\ny.head()","a936bf33":"# Splitting the data into train and test\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, test_size=0.3, random_state=100)","ef2bb937":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\n\nX_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(X_train[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']])\n\nX_train.head()","2ed04526":"# Checking the Churn Rate\nConverted = (sum(data['Converted'])\/len(data['Converted'].index))*100\nConverted","e6c5153e":"import statsmodels.api as sm","0ecb3101":"# Logistic regression model\nlogm1 = sm.GLM(y_train,(sm.add_constant(X_train)), family = sm.families.Binomial())\nlogm1.fit().summary()","89d12ae5":"from sklearn.linear_model import LogisticRegression\nlogreg = LogisticRegression()\n\nfrom sklearn.feature_selection import RFE\nrfe = RFE(logreg, 15)             # running RFE with 15 variables as output\nrfe = rfe.fit(X_train, y_train)","3e9cb7ba":"rfe.support_","dbb378ec":"list(zip(X_train.columns, rfe.support_, rfe.ranking_))","68158e2a":"col = X_train.columns[rfe.support_]\ncol","ba8dcf79":"X_train.columns[~rfe.support_]","bd259196":"X_train_sm = sm.add_constant(X_train[col])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","e52576a3":"col1 = col.drop('Tags_invalid number',1)","f8248b3b":"col1","de761ad7":"X_train_sm = sm.add_constant(X_train[col1])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","f0d1b031":"col2 = col1.drop('Tags_wrong number given',1)","c14cbc2b":"col2","93d69710":"X_train_sm = sm.add_constant(X_train[col2])\nlogm2 = sm.GLM(y_train,X_train_sm, family = sm.families.Binomial())\nres = logm2.fit()\nres.summary()","06027207":"# Getting the predicted values on the train set\ny_train_pred = res.predict(X_train_sm)\ny_train_pred[:10]","8adf2fe2":"y_train_pred = y_train_pred.values.reshape(-1)\ny_train_pred[:10]","f16201ba":"y_train_pred_final = pd.DataFrame({'Converted':y_train.values, 'Converted_prob':y_train_pred})\ny_train_pred_final['Prospect ID'] = y_train.index\ny_train_pred_final.head()","9465b17c":"y_train_pred_final['predicted'] = y_train_pred_final.Converted_prob.map(lambda x: 1 if x > 0.5 else 0)\n\n# Let's see the head\ny_train_pred_final.head()","2e2d1306":"from sklearn import metrics\n\n# Confusion matrix \nconfusion = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.predicted )\nprint(confusion)","bfb40150":"# Predicted     not_churn    churn\n# Actual\n# not_churn        3270      365\n# churn            579       708  ","e052c216":"# Let's check the overall accuracy.\nprint(metrics.accuracy_score(y_train_pred_final.Converted, y_train_pred_final.predicted))","3fe5f72c":"# Check for the VIF values of the feature variables. \nfrom statsmodels.stats.outliers_influence import variance_inflation_factor","d69fd0d8":"# Create a dataframe that will contain the names of all the feature variables and their respective VIFs\nvif = pd.DataFrame()\nvif['Features'] = X_train[col2].columns\nvif['VIF'] = [variance_inflation_factor(X_train[col].values, i) for i in range(X_train[col2].shape[1])]\nvif['VIF'] = round(vif['VIF'], 2)\nvif = vif.sort_values(by = \"VIF\", ascending = False)\nvif","509806eb":"TP = confusion[1,1] # true positive \nTN = confusion[0,0] # true negatives\nFP = confusion[0,1] # false positives\nFN = confusion[1,0] # false negatives","c43250c7":"# Let's see the sensitivity of our logistic regression model\nTP \/ float(TP+FN)","4df96673":"# Let us calculate specificity\nTN \/ float(TN+FP)","5109e08d":"# Calculate false postive rate - predicting churn when customer does not have churned\nprint(FP\/ float(TN+FP))","e6f1df13":"# positive predictive value \nprint (TP \/ float(TP+FP))","af97b2a5":"# Negative predictive value\nprint (TN \/ float(TN+ FN))","c46e6599":"def draw_roc( actual, probs ):\n    fpr, tpr, thresholds = metrics.roc_curve( actual, probs,\n                                              drop_intermediate = False )\n    auc_score = metrics.roc_auc_score( actual, probs )\n    plt.figure(figsize=(5, 5))\n    plt.plot( fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score )\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlim([0.0, 1.0])\n    plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate or [1 - True Negative Rate]')\n    plt.ylabel('True Positive Rate')\n    plt.title('Receiver operating characteristic example')\n    plt.legend(loc=\"lower right\")\n    plt.show()\n\n    return None","2833aaa9":"fpr, tpr, thresholds = metrics.roc_curve( y_train_pred_final.Converted, y_train_pred_final.Converted_prob, drop_intermediate = False )","435f42e0":"draw_roc(y_train_pred_final.Converted, y_train_pred_final.Converted_prob)","8a019acc":"# Let's create columns with different probability cutoffs \nnumbers = [float(x)\/10 for x in range(10)]\nfor i in numbers:\n    y_train_pred_final[i]= y_train_pred_final.Converted_prob.map(lambda x: 1 if x > i else 0)\ny_train_pred_final.head()","578d15e3":"# Now let's calculate accuracy sensitivity and specificity for various probability cutoffs.\ncutoff_df = pd.DataFrame( columns = ['prob','accuracy','sensi','speci'])\nfrom sklearn.metrics import confusion_matrix\n\n# TP = confusion[1,1] # true positive \n# TN = confusion[0,0] # true negatives\n# FP = confusion[0,1] # false positives\n# FN = confusion[1,0] # false negatives\n\nnum = [0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]\nfor i in num:\n    cm1 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final[i] )\n    total1=sum(sum(cm1))\n    accuracy = (cm1[0,0]+cm1[1,1])\/total1\n    \n    speci = cm1[0,0]\/(cm1[0,0]+cm1[0,1])\n    sensi = cm1[1,1]\/(cm1[1,0]+cm1[1,1])\n    cutoff_df.loc[i] =[ i ,accuracy,sensi,speci]\nprint(cutoff_df)","399f2921":"# Let's plot accuracy sensitivity and specificity for various probabilities.\ncutoff_df.plot.line(x='prob', y=['accuracy','sensi','speci'])\nplt.show()","02ef21d1":"#### From the curve above, 0.2 is the optimum point to take it as a cutoff probability.\n\ny_train_pred_final['final_predicted'] = y_train_pred_final.Converted_prob.map( lambda x: 1 if x > 0.2 else 0)\n\ny_train_pred_final.head()","3c62ee1c":"y_train_pred_final['Lead_Score'] = y_train_pred_final.Converted_prob.map( lambda x: round(x*100))\n\ny_train_pred_final.head()","5b592c4c":"# Let's check the overall accuracy.\nmetrics.accuracy_score(y_train_pred_final.Converted, y_train_pred_final.final_predicted)\n\nconfusion2 = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.final_predicted )\nconfusion2\n\nTP = confusion2[1,1] # true positive \nTN = confusion2[0,0] # true negatives\nFP = confusion2[0,1] # false positives\nFN = confusion2[1,0] # false negatives","695dfcc0":"# Let's see the sensitivity of our logistic regression model\nTP \/ float(TP+FN)","de3cf38a":"# Let us calculate specificity\nTN \/ float(TN+FP)","3ea42754":"# Calculate false postive rate - predicting churn when customer does not have churned\nprint(FP\/ float(TN+FP))","17a38406":"# Positive predictive value \nprint (TP \/ float(TP+FP))","cc2048f8":"# Negative predictive value\nprint (TN \/ float(TN+ FN))","37aecf22":"#Looking at the confusion matrix again\n\nconfusion = metrics.confusion_matrix(y_train_pred_final.Converted, y_train_pred_final.predicted )\nconfusion","34c7d210":"##### Precision\nTP \/ TP + FP\n\nconfusion[1,1]\/(confusion[0,1]+confusion[1,1])","0e9ea630":"##### Recall\nTP \/ TP + FN\n\nconfusion[1,1]\/(confusion[1,0]+confusion[1,1])","c918b986":"from sklearn.metrics import precision_score, recall_score","a9a46d1a":"precision_score(y_train_pred_final.Converted , y_train_pred_final.predicted)","0f70c1a7":"recall_score(y_train_pred_final.Converted, y_train_pred_final.predicted)","438bd1a9":"from sklearn.metrics import precision_recall_curve","b03029ad":"y_train_pred_final.Converted, y_train_pred_final.predicted","78d4cee4":"p, r, thresholds = precision_recall_curve(y_train_pred_final.Converted, y_train_pred_final.Converted_prob)","b81a7fb9":"plt.plot(thresholds, p[:-1], \"g-\")\nplt.plot(thresholds, r[:-1], \"r-\")\nplt.show()","0f2e07a5":"X_test[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']] = scaler.fit_transform(X_test[['TotalVisits','Total Time Spent on Website','Page Views Per Visit']])\n\nX_train.head()","aa6ab348":"X_test = X_test[col2]\nX_test.head()","1dd46e07":"X_test_sm = sm.add_constant(X_test)","ea888333":"y_test_pred = res.predict(X_test_sm)","8edfc6ed":"y_test_pred[:10]","ef156e48":"# Converting y_pred to a dataframe which is an array\ny_pred_1 = pd.DataFrame(y_test_pred)","03f214ef":"# Let's see the head\ny_pred_1.head()","9c7447ca":"# Converting y_test to dataframe\ny_test_df = pd.DataFrame(y_test)","a23069f7":"# Putting CustID to index\ny_test_df['Prospect ID'] = y_test_df.index","117bef10":"# Removing index for both dataframes to append them side by side \ny_pred_1.reset_index(drop=True, inplace=True)\ny_test_df.reset_index(drop=True, inplace=True)","1e001544":"# Appending y_test_df and y_pred_1\ny_pred_final = pd.concat([y_test_df, y_pred_1],axis=1)","b446700b":"y_pred_final.head()","cc1266f8":"# Renaming the column \ny_pred_final= y_pred_final.rename(columns={ 0 : 'Converted_prob'})","70676f17":"# Rearranging the columns\ny_pred_final = y_pred_final.reindex_axis(['Prospect ID','Converted','Converted_prob'], axis=1)","9712b9bd":"# Let's see the head of y_pred_final\ny_pred_final.head()","e300e806":"y_pred_final['final_predicted'] = y_pred_final.Converted_prob.map(lambda x: 1 if x > 0.2 else 0)","2cdf08e2":"y_pred_final.head()","31694327":"# Let's check the overall accuracy.\nmetrics.accuracy_score(y_pred_final.Converted, y_pred_final.final_predicted)","393047c1":"confusion2 = metrics.confusion_matrix(y_pred_final.Converted, y_pred_final.final_predicted )\nconfusion2","2bd757d0":"TP = confusion2[1,1] # true positive \nTN = confusion2[0,0] # true negatives\nFP = confusion2[0,1] # false positives\nFN = confusion2[1,0] # false negatives","d29e3505":"# Let's see the sensitivity of our logistic regression model\nTP \/ float(TP+FN)","8af73dff":"# Let us calculate specificity\nTN \/ float(TN+FP)","f745bb06":"We have almost 38% conversion","44796733":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","0334f0cc":"### Inference\nMost values are 'India' no such inference can be drawn","df3571b3":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","86cb728d":"### Search","7f1da0d9":"Making predictions on the test set","0c8b25a7":"### Newspaper","2b3dc3cc":"### Specialization","f71f771d":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","d02b3770":"#### Converting some binary variables (Yes\/No) to 1\/0","0f02e815":"### Step 5: Feature Scaling","de47d26d":"### Get updates on DM Content","c5bba872":"### Total Visits","dbfb376a":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","f68c44ca":"### Through Recommendations","a1b3ffe6":"#### Inference\n1. Google and Direct traffic generates maximum number of leads.\n2. Conversion Rate of reference leads and leads through welingak website is high.\n\n__To improve overall lead conversion rate, focus should be on improving lead converion of olark chat, organic search, direct traffic, and google  leads and generate more leads from reference and welingak website.__","a3e054d9":"### Do Not Email & Do Not Call","ff509cf3":"### Receive More Updates About Our Courses","111db115":"### Data Preparation","c44c2c60":"## Problem Statement\nAn education company named __X Education__ sells online courses to industry professionals. On any given day, many professionals who are interested in the courses land on their website and browse for courses. \n\n \n\nThe company markets its courses on several websites and search engines like Google. Once these people land on the website, they might browse the courses or fill up a form for the course or watch some videos. <br>\n\n__When these people fill up a form providing their email address or phone number, they are classified to be a lead. Moreover, the company also gets leads through past referrals.__<br>\n\nOnce these leads are acquired, employees from the sales team start making calls, writing emails, etc. Through this process, some of the leads get converted while most do not. __The typical lead conversion rate at X education is around 30%.__\n \n\nNow, although X Education gets a lot of leads, its lead conversion rate is very poor. For example, if, say, they acquire 100 leads in a day, only about 30 of them are converted. To make this process more efficient, the company wishes to identify the most potential leads, also known as __\u2018Hot Leads\u2019__. <br>\n\nIf they successfully identify this set of leads, the lead conversion rate should go up as the sales team will now be focusing more on communicating with the potential leads rather than making calls to everyone. A typical lead conversion process can be represented using the following funnel:\n![image.jpg](attachment:image.jpg)\n\n\n\n__Lead Conversion Process__ - Demonstrated as a funnel\nAs you can see, there are a lot of leads generated in the initial stage (top) but only a few of them come out as paying customers from the bottom.<br>\n\nIn the middle stage, you need to nurture the potential leads well (i.e. educating the leads about the product, constantly communicating etc. ) in order to get a higher lead conversion. \n\nX Education has appointed you to help them select the most promising leads, i.e. the leads that are most likely to convert into paying customers. <br>\nThe company requires you to build a model wherein you need to assign a lead score to each of the leads such that the customers with higher lead score have a higher conversion chance and the customers with lower lead score have a lower conversion chance.\n\n__The CEO, in particular, has given a ballpark of the target lead conversion rate to be around 80%.__\n\n\n \n\n### Data\n\nYou have been provided with a leads dataset from the past with around 9000 data points. This dataset consists of various attributes such as Lead Source, Total Time Spent on Website, Total Visits, Last Activity, etc. which may or may not be useful in ultimately deciding whether a lead will be converted or not. The target variable, in this case, is the column \u2018Converted\u2019 which tells whether a past lead was converted or not wherein 1 means it was converted and 0 means it wasn\u2019t converted.\n\nAnother thing that you also need to check out for are the levels present in the categorical variables.<br>\n\n__Many of the categorical variables have a level called 'Select' which needs to be handled because it is as good as a null value.__\n\n \n\n### Goal\n\n\n1. Build a logistic regression model to assign a lead score between 0 and 100 to each of the leads which can be used by the company to target potential leads. A higher score would mean that the lead is hot, i.e. is most likely to convert whereas a lower score would mean that the lead is cold and will mostly not get converted.","40d77841":"### City","625e17b0":"### Data Cleaning","371ccccb":"### Newspaper Article","47434766":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","2b9069de":"### Update me on Supply Chain Content","39ed3c92":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","12cee3de":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","8d77b3c2":" ### Inference\n1. Working Professionals going for the course have high chances of joining it.\n2. Unemployed leads are the most in numbers but has around 30-35% conversion rate.","2c2f4067":"### What matters most to you in choosing a course","a8144857":"## Data Preparation","831d7850":"An ROC curve demonstrates several things:\n\n- It shows the tradeoff between sensitivity and specificity (any increase in sensitivity will be accompanied by a decrease in specificity).\n- The closer the curve follows the left-hand border and then the top border of the ROC space, the more accurate the test.\n- The closer the curve comes to the 45-degree diagonal of the ROC space, the less accurate the test.","9fd0c170":"#### Checking VIFs","92376cc2":"### Converted","9569d67e":"### Digital Advertisement","50a27bb3":"# Lead Scoring ","84914b4e":"#### Now Data is clean and we can start with the analysis part","8a0b08f6":"### A free copy of Mastering The Interview","f3f977c2":"### Model Building","d3e6656b":"### I agree to pay the amount through cheque","d57f8f34":"#### Tags","80a503ab":"### Total time spent on website","0cb88fe9":"### Data Inspection","188975e0":"### Inference","5c3fe3e7":"## Results\n\n__Based on the univariate analysis we have seen that many columns are not adding any information to the model, heance we can drop them for frther analysis__","0c0895ed":"### Assigning Lead Score","23408b24":"### Making predictions on the test set","f3f35d6e":"#### For categorical variables with multiple levels, create dummy features (one-hot encoded)","3de524d4":"### Magazine","d1015269":"### Step 9: Plotting the ROC Curve","a631ca6f":"#### Inference\n1. Focus should be more on the Specialization with high conversion rate.","164280da":"### Page views per visit","fb07b345":"#### Inference\n1. API and Landing Page Submission have 30-35% conversion rate but count of lead originated from them are considerable.\n2. Lead Add Form has more than 90% conversion rate but count of lead are not very high.\n3. Lead Import are very less in count.<br>\n\n\n__To improve overall lead conversion rate, we need to focus more on improving lead converion of API and Landing Page Submission origin and generate more leads from Lead Add Form.__","bc305a1e":"### Data Loading","4c5c101f":"#### Inference\n1. Median for converted and not converted leads are the same.\n\n__Nothng conclusive can be said on the basis of Total Visits.__","9d2678be":"Using sklearn utilities for the same","8debf6e0":"### Inference\nMost entries are 'Better Career Prospects'.\nNo Inference can be drawn with this parameter.","d069447b":"##### Creating a dataframe with the actual churn flag and the predicted probabilities","2bf7fef3":"## Metrics beyond simply accuracy","2e31d82e":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","f71c4885":"### Lead Source","263a8ba1":"### Lead Origin","5f003e6a":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","c0cc89a2":"## Logistic Regression","b84aea49":"### Step 10: Finding Optimal Cutoff Point\nOptimal cutoff probability is that prob where we get balanced sensitivity and specificity","476b8234":"# Exploratory Data Analytics","f98f872a":"### Occupation","835038b2":"### Country","3ba1f7a4":"### Precision and recall tradeoff","80f0daa1":"#### Inference\n1. Leads spending more time on the weblise are more likely to be converted.\n\n__Website should be made more engaging to make leads spend more time.__","1cf31ac9":"### Last Activity","fce04b17":"#### Inference\n1. Median for converted and unconverted leads is the same.\n\n__Nothing can be said specifically for lead conversion from Page Views Per Visit __","43cc42f4":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","e02d0dd7":"### Last Notable Activity","8e4e636d":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","c97820f2":"### Lead Quality","c70c16e5":"### Inference\nMost entries are 'No'.\nNo Inference can be drawn with this parameter.","97e64e31":"### Inference\nMost leads are from mumbai with around 30% conversion rate.","1338f94a":"## Univariate Analysis","0dee4134":"### Feature Selection Using RFE","76c12688":"### X Education Forums","fe81a629":"#### Inference\n1. Most of the lead have their Email opened as their last activity.\n2. Conversion rate for leads with last activity as SMS Sent is almost 60%.b","b56a5aa0":"##### Creating new column 'predicted' with 1 if Churn_Prob > 0.5 else 0","6d63bee4":"## Precision and Recall","151de500":"#### Running Your First Training Model","bdb1dfcd":"##### Assessing the model with StatsModels"}}