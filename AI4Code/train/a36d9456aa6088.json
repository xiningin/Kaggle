{"cell_type":{"5b66b27f":"code","347ad965":"code","bfe4a531":"code","a0cb0b6b":"code","6fd8c67b":"code","96420ad6":"code","e094b820":"markdown","c805a246":"markdown"},"source":{"5b66b27f":"import numpy as np\nimport pandas as pd\nimport os\nfrom google.cloud import bigquery","347ad965":"client = bigquery.Client()\nethereum_classic_dataset_ref = client.dataset('crypto_ethereum_classic', project='bigquery-public-data')","bfe4a531":"query = \"\"\"\nSELECT from_address AS address\nFROM `bigquery-public-data.crypto_ethereum_classic.transactions`\nWHERE block_number > 7500000\nGROUP BY from_address\n\"\"\"\n\nquery_job = client.query(query)\niterator = query_job.result()","a0cb0b6b":"rows = list(iterator)\n# Transform the rows into a nice pandas dataframe\nactive_users = pd.DataFrame(data=[list(x.values()) for x in rows], columns=list(rows[0].keys()))","6fd8c67b":"# Post-process: convert to airdrop-tool format\nactive_users['tokens'] = ['1000000000000000000' for x in rows] # to airdrop 1 token (with 18 decimals) to each address\nactive_users.shape","96420ad6":"out = active_users.to_json(orient='records')\nwith open('airdrop.json', 'w') as f:\n    f.write(out)","e094b820":"# Finding active ETC addresses\n\nLet's find recently active ETC addresses and airdrop them some tokens!","c805a246":"## Exporting\n\nThe produced json file can be used in the [airdrop-tool](https:\/\/forum.saturn.network\/t\/how-to-setup-and-launch-your-own-airdrop\/2366). Simply download it from [here](https:\/\/www.kaggle.com\/neuralhax0r\/airdropping-tokens-to-active-etc-addresses)."}}