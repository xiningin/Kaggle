{"cell_type":{"a3b2d75d":"code","45ec7b08":"code","d3ec45a7":"code","7f216e60":"code","03e807f9":"code","502eb4e1":"code","69db4e20":"code","8f2d82f3":"code","1f0a483d":"code","e0577f16":"code","15a1df0d":"code","f58d839d":"code","7abd9c24":"code","55d89b8c":"code","c475fbc2":"code","44fb1f6c":"code","5873b582":"code","22c1adef":"code","afb144d9":"code","bf418d7a":"code","c127002d":"code","11a6a83d":"code","db75697a":"code","d6988c48":"code","84d1aae5":"code","704cdcb1":"code","4d6a0d7b":"code","af0941c0":"markdown","ce34ac88":"markdown","20071541":"markdown","5f56473c":"markdown","53ec1d35":"markdown","776244cd":"markdown","367cbac3":"markdown","305f565c":"markdown","e243663c":"markdown","6522f852":"markdown","b413c617":"markdown","8e9bf22d":"markdown","a023db82":"markdown","588341fb":"markdown","64457d23":"markdown","74234afe":"markdown","33e972e3":"markdown","73b3d10f":"markdown","76616a0f":"markdown","de34235b":"markdown","08337f60":"markdown"},"source":{"a3b2d75d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\n# Too see full dataframe...\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.width', None)\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","45ec7b08":"df_fifa19=pd.read_csv(\"..\/input\/data.csv\", index_col=0)\ndf_fifa19.head(2)\n","d3ec45a7":"# Size of the data\nprint (df_fifa19.shape)\n# type of each column\nprint (df_fifa19.dtypes)","7f216e60":"# see missing data\nprint (df_fifa19.isnull().sum())","03e807f9":"# Deleting all the rows having null values\ndf_fifa19.dropna(subset=['Club', 'Preferred Foot','International Reputation','Weak Foot','Skill Moves', \\\n                         'Work Rate','Body Type','Real Face','Position', 'Jersey Number', 'Height','Weight', \\\n                         'Crossing','Finishing', 'HeadingAccuracy', 'ShortPassing', 'Volleys', 'Dribbling', \\\n                         'Curve', 'FKAccuracy', 'LongPassing', 'BallControl', 'Acceleration', 'SprintSpeed', \\\n                         'Agility', 'Reactions', 'Balance', 'ShotPower', 'Jumping', 'Stamina', 'Strength', 'LongShots', 'Aggression', \\\n                         'Interceptions', 'Positioning','Vision', 'Penalties', 'Composure', 'Marking', 'StandingTackle', 'SlidingTackle', \\\n                         'GKDiving', 'GKHandling', 'GKKicking', 'GKPositioning', 'GKReflexes'], inplace=True)\nprint (df_fifa19.isnull().sum())\nprint (df_fifa19.shape)","502eb4e1":"# Eliminating sign and alphabets like \u20acand M from Columns Value & Wage\ndf_fifa19['Value'] = df_fifa19.Value.apply(lambda x: x.strip ('M'))\ndf_fifa19['Value'] = df_fifa19.Value.apply(lambda x: x.strip ('\u20ac') )  \ndf_fifa19['Value'] = df_fifa19.Value.apply(lambda x: x.strip ('K'))\ndf_fifa19['Wage'] = df_fifa19.Wage.apply(lambda x: x.strip ('K'))\ndf_fifa19['Wage'] = df_fifa19.Wage.apply(lambda x: x.strip ('\u20ac') )   \ndf_fifa19[['Value']]=df_fifa19[['Value']].astype('float')\ndf_fifa19[['Wage']]=df_fifa19[['Wage']].astype('float')\nprint (df_fifa19.dtypes)\ndf_fifa19.head(2)","69db4e20":"#df_club=df_fifa19.group(['Club', as_index=False]).mean()\ndf_club=df_fifa19.groupby(['Club']).mean()\ndf_top15 = df_club.sort_values(['Wage'], ascending=False, axis=0)\n#df_top15=df_top15.groupby(['Club','Wage']).mean()\ndf_top15.head(2)","8f2d82f3":"df_top15=  df_top15.reset_index()\ndf_top15=df_top15.head(15)\ndf_top15.shape\ndf_bar=df_top15[['Club', 'Wage']]\ndf_bar=df_bar.set_index('Club')\ndf_bar=df_bar.round()\ndf_bar[['Wage']]=df_bar[['Wage']].astype('int')\ndf_bar.head(1)","1f0a483d":"# plot data\nimport matplotlib.pyplot as plt\ndf_bar.plot(kind='bar', figsize=(10, 6))\n\nplt.xlabel('Clubs') # add to x-label to the plot\nplt.ylabel('Wages (M)') # add y-label to the plot\nplt.title('CLubs VS Wages') # add title to the plot\n\nplt.show()","e0577f16":"# Plot value on top of bar chart\n# Using artist layes to create bar chart\ncolors_list = ['#5cb85c','#5bc0de','#d9534f']\nax = df_bar.plot( kind='bar', alpha=0.5, figsize=(20, 8), width=.8 , color=colors_list, edgecolor=None, ) #rot=0)\nplt.legend(labels=df_bar.columns,fontsize= 14)\nplt.title(\"CLUB WAGES IN MILLIONS\",fontsize= 16)\n\nplt.xticks(fontsize=14)\nfor spine in plt.gca().spines.values():\n    spine.set_visible(True)\nplt.yticks([])\n\nax.set_title(\"CLUB WAGES IN MILLIONS\")\n\nfor p in ax.patches:\n    width, height = p.get_width(), p.get_height()\n    x, y = p.get_xy() \n    ax.annotate('{:}'.format(height), (p.get_x()+0.15*width, p.get_y() + height + 0.0001 ))","15a1df0d":"df_fifa19_numeric=df_fifa19._get_numeric_data()\ndf_fifa19_numeric.head(2)","f58d839d":"df_fifa19_numeric.corr()","7abd9c24":"# View of Correlation Matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\ncorr_matrix=df_fifa19_numeric.corr()\nfig, ax = plt.subplots(figsize=(30,20))         # Sample figsize in inches\nsns.heatmap(corr_matrix, annot=False, linewidths=5, ax=ax, xticklabels=corr_matrix.columns.values,yticklabels=corr_matrix.columns.values)\n#sns.heatmap(corr, annot=True, fmt=\".1f\",linewidth=0.5 xticklabels=corr.columns.values,yticklabels=corr.columns.values)","55d89b8c":"viz=df_fifa19._get_numeric_data()\nviz.head()","c475fbc2":"from scipy import stats\n\n#1\npearson_coef, p_value = stats.pearsonr(viz['Age'], viz['BallControl'])\nprint(\"#1 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)\n\n#2\npearson_coef, p_value = stats.pearsonr(viz['Weak Foot'], viz['BallControl'])\nprint(\"#2 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#3\npearson_coef, p_value = stats.pearsonr(viz['Skill Moves'], viz['BallControl'])\nprint(\"#3 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#4\npearson_coef, p_value = stats.pearsonr(viz['Crossing'], viz['BallControl'])\nprint(\"#4 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#5\npearson_coef, p_value = stats.pearsonr(viz['Finishing'], viz['BallControl'])\nprint(\"#5 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#6\npearson_coef, p_value = stats.pearsonr(viz['HeadingAccuracy'], viz['BallControl'])\nprint(\"#6 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#7\npearson_coef, p_value = stats.pearsonr(viz['Volleys'], viz['BallControl'])\nprint(\"#7 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#8\npearson_coef, p_value = stats.pearsonr(viz['Dribbling'], viz['BallControl'])\nprint(\"#8 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#9\npearson_coef, p_value = stats.pearsonr(viz['Curve'], viz['Potential'])\nprint(\"#9 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#10\n\npearson_coef, p_value = stats.pearsonr(viz['FKAccuracy'], viz['BallControl'])\nprint(\"#10 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#11\npearson_coef, p_value = stats.pearsonr(viz['LongPassing'], viz['BallControl'])\nprint(\"#11 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#12\npearson_coef, p_value = stats.pearsonr(viz['Potential'], viz['BallControl'])\nprint(\"#12 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#13\npearson_coef, p_value = stats.pearsonr(viz['Acceleration'], viz['BallControl'])\nprint(\"#13 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#14\npearson_coef, p_value = stats.pearsonr(viz['SprintSpeed'], viz['BallControl'])\nprint(\"#14 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#15\npearson_coef, p_value = stats.pearsonr(viz['Agility'], viz['BallControl'])\nprint(\"#15 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#16\npearson_coef, p_value = stats.pearsonr(viz['Reactions'], viz['BallControl'])\nprint(\"#16 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#17\npearson_coef, p_value = stats.pearsonr(viz['Balance'], viz['BallControl'])\nprint(\"#17 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#18\npearson_coef, p_value = stats.pearsonr(viz['ShotPower'], viz['Potential'])\nprint(\"#18 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#19\npearson_coef, p_value = stats.pearsonr(viz['Jumping'], viz['BallControl'])\nprint(\"#19 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#20\npearson_coef, p_value = stats.pearsonr(viz['Stamina'], viz['BallControl'])\nprint(\"#20 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#21\npearson_coef, p_value = stats.pearsonr(viz['Strength'], viz['BallControl'])\nprint(\"#21 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#22\npearson_coef, p_value = stats.pearsonr(viz['LongShots'], viz['BallControl'])\nprint(\"#22 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#23\npearson_coef, p_value = stats.pearsonr(viz['Aggression'], viz['BallControl'])\nprint(\"#23 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#24\npearson_coef, p_value = stats.pearsonr(viz['Interceptions'], viz['BallControl'])\nprint(\"#24 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#25\npearson_coef, p_value = stats.pearsonr(viz['Positioning'], viz['BallControl'])\nprint(\"#25 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#26\npearson_coef, p_value = stats.pearsonr(viz['Vision'], viz['BallControl'])\nprint(\"#26 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#27\npearson_coef, p_value = stats.pearsonr(viz['Penalties'], viz['BallControl'])\nprint(\"# 27 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#28\npearson_coef, p_value = stats.pearsonr(viz['Composure'], viz['BallControl'])\nprint(\"#28 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#29\npearson_coef, p_value = stats.pearsonr(viz['Marking'], viz['BallControl'])\nprint(\"#29 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#30\npearson_coef, p_value = stats.pearsonr(viz['StandingTackle'], viz['BallControl'])\nprint(\"#30 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#31\npearson_coef, p_value = stats.pearsonr(viz['SlidingTackle'], viz['BallControl'])\n\nprint(\"#31 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  ","44fb1f6c":"cdf=viz[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning', 'BallControl','Finishing',\\\n         'Volleys', 'FKAccuracy','LongPassing','HeadingAccuracy', 'Acceleration', 'SprintSpeed', \\\n         'Agility', 'Balance', 'Stamina', 'Vision', 'Penalties', 'Composure']]\nmsk = np.random.rand(len(viz)) < 0.8\ntrain = cdf[msk]\ntest = cdf[~msk]","5873b582":"#plt.scatter(viz.Skill Moves, viz.BallControl,  color='blue')\n#plt.xlabel('Skill Moves')\n#plt.ylabel(\"BallControl\")\n#plt.show()\n\nplt.scatter(viz.Crossing, viz.Potential,  color='blue')\nplt.xlabel('Crossing')\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Dribbling, viz.Potential,  color='blue')\nplt.xlabel('Dribbling')\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.LongShots, viz.Potential,  color='blue')\nplt.xlabel('LongShots')\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Positioning, viz.Potential,  color='blue')\nplt.xlabel('Positioning')\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Finishing, viz.Potential,  color='blue')\nplt.xlabel('Finishing')\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz. Volleys, viz.Potential,  color='blue')\nplt.xlabel(\" Volleys\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.FKAccuracy, viz.Potential,  color='blue')\nplt.xlabel(\"FKAccuracy\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.LongPassing, viz.Potential,  color='blue')\nplt.xlabel(\"LongPassing\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz. HeadingAccuracy, viz.Potential,  color='blue')\nplt.xlabel(\" HeadingAccuracy\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Acceleration, viz.Potential,  color='blue')\nplt.xlabel(\"Acceleration\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.SprintSpeed, viz.Potential,  color='blue')\nplt.xlabel(\"SprintSpeed\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Agility, viz.Potential,  color='blue')\nplt.xlabel(\"Agility\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Balance, viz.Potential,  color='blue')\nplt.xlabel(\"Balance\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\n'Stamina', 'Vision', 'Penalties', 'Composure'\nplt.scatter(viz.Stamina, viz.Potential,  color='blue')\nplt.xlabel(\"Stamina\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Vision, viz.Potential,  color='blue')\nplt.xlabel(\"Vision\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Penalties, viz.Potential,  color='blue')\nplt.xlabel(\"Penalties\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\nplt.scatter(viz.Composure, viz.Potential,  color='blue')\nplt.xlabel(\"Composure\")\nplt.ylabel(\"BallControl\")\nplt.show()\n\n\n\nsns.residplot(x='Skill Moves', y='BallControl', data=viz)\nsns.residplot(x='Vision', y='BallControl', data=viz)\nsns.residplot(x='Composure', y='BallControl', data=viz)\n\nsns.residplot(x='Crossing', y='BallControl', data=viz)\nsns.residplot(x='Dribbling', y='BallControl', data=viz)\nsns.residplot(x='LongShots', y='BallControl', data=viz)\n\nsns.residplot(x='Positioning', y='BallControl', data=viz)\nsns.residplot(x='Finishing', y='BallControl', data=viz)\nsns.residplot(x='Volleys', y='BallControl', data=viz)\n\nsns.residplot(x='FKAccuracy', y='BallControl', data=viz)\nsns.residplot(x='LongPassing', y='BallControl', data=viz)\nsns.residplot(x='HeadingAccuracy', y='BallControl', data=viz)\n\nsns.residplot(x='Acceleration', y='BallControl', data=viz)\nsns.residplot(x='SprintSpeed', y='BallControl', data=viz)\nsns.residplot(x='Agility', y='BallControl', data=viz)\n\nsns.residplot(x='Balance', y='BallControl', data=viz)\nsns.residplot(x='Stamina', y='BallControl', data=viz)\nsns.residplot(x='Penalties', y='BallControl', data=viz)\n\n\n#sns.regplot(x='Reactions', y='Potential', data=viz)","22c1adef":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\nx = np.asanyarray(train[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning', 'BallControl','Finishing',\\\n         'Volleys', 'FKAccuracy','LongPassing','HeadingAccuracy', 'Acceleration', 'SprintSpeed', \\\n         'Agility', 'Balance', 'Stamina', 'Vision', 'Penalties', 'Composure']])\ny = np.asanyarray(train[['BallControl']])\nregr.fit (x, y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)\nprint ('Intercept: ', regr.intercept_)","afb144d9":"y_hat= regr.predict( test[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning', 'BallControl',\\\n                           'Finishing','Volleys', 'FKAccuracy','LongPassing','HeadingAccuracy', 'Acceleration',\\\n                           'SprintSpeed','Agility', 'Balance', 'Stamina', 'Vision', 'Penalties', 'Composure']])\nx = np.asanyarray(test[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning', 'BallControl',\\\n                        'Finishing','Volleys', 'FKAccuracy','LongPassing','HeadingAccuracy', 'Acceleration', \\\n                        'SprintSpeed','Agility', 'Balance', 'Stamina', 'Vision', 'Penalties', 'Composure']])\ny = np.asanyarray(test[['BallControl']])\nprint(\"Residual sum of squares: %.2f\"\n      % np.mean((y_hat - y) ** 2))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % regr.score(x, y))","bf418d7a":"cdf=viz[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning', 'BallControl']]\nmsk = np.random.rand(len(viz)) < 0.8\ntrain = cdf[msk]\ntest = cdf[~msk]","c127002d":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\nx = np.asanyarray(train[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning']])\ny = np.asanyarray(train[['BallControl']])\nregr.fit (x, y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)\nprint ('Intercept: ', regr.intercept_)","11a6a83d":"y_hat= regr.predict( test[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning']])\nx = np.asanyarray(test[['Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning']])\ny = np.asanyarray(test[['BallControl']])\nprint(\"Residual sum of squares: %.2f\"\n      % np.mean((y_hat - y) ** 2))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % regr.score(x, y))","db75697a":"from scipy import stats\n\n#1\npearson_coef, p_value = stats.pearsonr(viz['Age'], viz['Potential'])\nprint(\"#1 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)\n\n#2\npearson_coef, p_value = stats.pearsonr(viz['Weak Foot'], viz['Potential'])\nprint(\"#2 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#3\npearson_coef, p_value = stats.pearsonr(viz['Skill Moves'], viz['Potential'])\nprint(\"#3 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#4\npearson_coef, p_value = stats.pearsonr(viz['Crossing'], viz['Potential'])\nprint(\"#4 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#5\npearson_coef, p_value = stats.pearsonr(viz['Finishing'], viz['Potential'])\nprint(\"#5 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#6\npearson_coef, p_value = stats.pearsonr(viz['HeadingAccuracy'], viz['Potential'])\nprint(\"#6 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#7\npearson_coef, p_value = stats.pearsonr(viz['Volleys'], viz['Potential'])\nprint(\"#7 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#8\npearson_coef, p_value = stats.pearsonr(viz['Dribbling'], viz['Potential'])\nprint(\"#8 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#9\npearson_coef, p_value = stats.pearsonr(viz['Curve'], viz['Potential'])\nprint(\"#9 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#10\n\npearson_coef, p_value = stats.pearsonr(viz['FKAccuracy'], viz['Potential'])\nprint(\"#10 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#11\npearson_coef, p_value = stats.pearsonr(viz['LongPassing'], viz['Potential'])\nprint(\"#11 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#12\npearson_coef, p_value = stats.pearsonr(viz['BallControl'], viz['Potential'])\nprint(\"#12 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#13\npearson_coef, p_value = stats.pearsonr(viz['Acceleration'], viz['Potential'])\nprint(\"#13 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#14\npearson_coef, p_value = stats.pearsonr(viz['SprintSpeed'], viz['Potential'])\nprint(\"#14 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#15\npearson_coef, p_value = stats.pearsonr(viz['Agility'], viz['Potential'])\nprint(\"#15 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#16\npearson_coef, p_value = stats.pearsonr(viz['Reactions'], viz['Potential'])\nprint(\"#16 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#17\npearson_coef, p_value = stats.pearsonr(viz['Balance'], viz['Potential'])\nprint(\"#17 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#18\npearson_coef, p_value = stats.pearsonr(viz['ShotPower'], viz['Potential'])\nprint(\"#18 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#19\npearson_coef, p_value = stats.pearsonr(viz['Jumping'], viz['Potential'])\nprint(\"#19 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#20\npearson_coef, p_value = stats.pearsonr(viz['Stamina'], viz['Potential'])\nprint(\"#20 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#21\npearson_coef, p_value = stats.pearsonr(viz['Strength'], viz['Potential'])\nprint(\"#21 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#22\npearson_coef, p_value = stats.pearsonr(viz['LongShots'], viz['Potential'])\nprint(\"#22 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#23\npearson_coef, p_value = stats.pearsonr(viz['Aggression'], viz['Potential'])\nprint(\"#23 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#24\npearson_coef, p_value = stats.pearsonr(viz['Interceptions'], viz['Potential'])\nprint(\"#24 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#25\npearson_coef, p_value = stats.pearsonr(viz['Positioning'], viz['Potential'])\nprint(\"#25 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#26\npearson_coef, p_value = stats.pearsonr(viz['Vision'], viz['Potential'])\nprint(\"#26 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#27\npearson_coef, p_value = stats.pearsonr(viz['Penalties'], viz['Potential'])\nprint(\"# 27 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#28\npearson_coef, p_value = stats.pearsonr(viz['Composure'], viz['Potential'])\nprint(\"#28 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#29\npearson_coef, p_value = stats.pearsonr(viz['Marking'], viz['Potential'])\nprint(\"#29 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#30\npearson_coef, p_value = stats.pearsonr(viz['StandingTackle'], viz['Potential'])\nprint(\"#30 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  \n\n#31\npearson_coef, p_value = stats.pearsonr(viz['SlidingTackle'], viz['Potential'])\nprint(\"#31 The Pearson Correlation Coefficient is\", pearson_coef, \" with a P-value of P =\", p_value)  ","d6988c48":"plt.scatter(viz.Reactions, viz.Potential,  color='blue')\nplt.xlabel(\"Reactions\")\nplt.ylabel(\"Potential\")\nplt.show()\n\nplt.scatter(viz.Vision, viz.Potential,  color='green')\nplt.xlabel(\"Vision\")\nplt.ylabel(\"Potential\")\nplt.show()\n\nplt.scatter(viz.Composure, viz.Potential,  color='red')\nplt.xlabel(\"Composure\")\nplt.ylabel(\"Potential\")\nplt.show()\n\nsns.residplot(x='Reactions', y='Potential', data=viz)\nsns.residplot(x='Vision', y='Potential', data=viz)\nsns.residplot(x='Composure', y='Potential', data=viz)\n\n#sns.regplot(x='Reactions', y='Potential', data=viz)","84d1aae5":"cdf=viz[['Reactions','Vision','Composure','Potential']]\nmsk = np.random.rand(len(viz)) < 0.8\ntrain = cdf[msk]\ntest = cdf[~msk]","704cdcb1":"from sklearn import linear_model\nregr = linear_model.LinearRegression()\nx = np.asanyarray(train[['Reactions','Vision','Composure']])\ny = np.asanyarray(train[['Potential']])\nregr.fit (x, y)\n# The coefficients\nprint ('Coefficients: ', regr.coef_)\nprint ('Intercept: ', regr.intercept_)","4d6a0d7b":"y_hat= regr.predict( test[['Reactions','Vision','Composure']])\nx = np.asanyarray(test[['Reactions','Vision','Composure']])\ny = np.asanyarray(test[['Potential']])\nprint(\"Residual sum of squares: %.2f\"\n      % np.mean((y_hat - y) ** 2))\n\n# Explained variance score: 1 is perfect prediction\nprint('Variance score: %.2f' % regr.score(x, y))","af0941c0":"# Model Training","ce34ac88":"# Conclusion\n\n### The feature 'BallControl' can be chosen as target variable for predicting the model.","20071541":"### Correlation Results","5f56473c":"# Alternate Model\n\n### Choosing only those features which are providing strong correlation","53ec1d35":"# Model Making\n\n### As we have choose two features ('Potential' & 'BallCOntrol') to determine which one has more dendency on other features. Let start with BallControl.  ","776244cd":"# Model Evaluation","367cbac3":"# Context\n\n### The FIFA19 dataset gives you complete information about the players which are involved in club football or international. The information consists of Age, Wage, Country, Club, and skills.\n\n# Objective\n\n### Can we predict correclty Potential or Ball Control of a player on the basis of other features involving skills","305f565c":"# Model Training","e243663c":"## Model Development","6522f852":"# Multilinear Regression","b413c617":"# Preprocessing\n\n### The preprocessing involves initial data exploration,extract transform load,data cleansing and feature creation.\n\n## Initial Data Exploration\n\n### The data is available in csv format. \n\n## ETL: Extract Transform and Load\n\n### ETL is an import tool to convert data into readable format. We first extract the csv file and then transform into one Data Frame.","8e9bf22d":"# Model Designing with 'Potential' Feature","a023db82":"# Model Training","588341fb":"# Model Prediction","64457d23":"# Model Evaluation","74234afe":"### From the above correlation results, we summarize as follow \n\n### Very Strong Correlation 'Skill Moves','Crossing', 'Dribbling', 'LongShots', 'Positioning'\n\n### Strong Correlation 'Finishing', 'Volleys', 'FKAccuracy','LongPassing','Heading Accuracy', 'Acceleration', 'SprintSpeed', 'Agility', 'Balance', 'Stamina', 'Vision', 'Penalties', 'Composure'","33e972e3":"### After finding the correlation values, we anylze that strong relation is not present. Only moderate correlation exists. The feature 'Reactions' has a value of 0.52, while 'Vision'is 0.35 and composure is 0.44.","73b3d10f":"## Data Cleansing","76616a0f":"### Hence the model who take all the features to predict is the better one.","de34235b":"# Visualization\n\n### The purpose of visualization is to see the trend and shape of the specfic feature.","08337f60":"# Model Definition"}}