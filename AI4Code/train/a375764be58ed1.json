{"cell_type":{"b68a3f0a":"code","d0451efd":"code","1bb94ff0":"code","ff305946":"code","d49ea610":"code","2b421f00":"code","d2088388":"code","8940a07f":"code","d4fb63f6":"code","7e109ec3":"code","7de2fdf2":"code","48880c0c":"code","18b20a30":"code","c72f4677":"code","d686d558":"code","3ba23d58":"code","e3ed2f14":"code","c8c9f127":"code","774e9002":"code","9b4b4b97":"code","0d666107":"code","f3018973":"code","006ed0af":"code","9a70f4bd":"code","261375b0":"code","3da1396a":"code","54141edc":"code","a9dfa82d":"code","1e7b29fd":"code","cfee098c":"code","1729943b":"code","ac515cca":"code","5c522764":"code","738e83de":"code","aa140419":"markdown","d731e1ab":"markdown","251da7d8":"markdown","07e0666c":"markdown","8fc2d0ef":"markdown","a1e21732":"markdown","a3003e29":"markdown","e9c57f99":"markdown","5ca629a3":"markdown","a720ad77":"markdown","e50a9007":"markdown","a2a9d7c0":"markdown","39968e4b":"markdown","4d6a4f22":"markdown","946c9dce":"markdown","d20491a8":"markdown","d7cb1633":"markdown","d82a8607":"markdown","21a40a8c":"markdown","a9dd8f47":"markdown","9e61ca4d":"markdown","d7676d32":"markdown","32a2916d":"markdown","8c71fb7d":"markdown","333d20b7":"markdown","f47e382f":"markdown","32581971":"markdown","25db97e4":"markdown","24bee1c9":"markdown","a08f1530":"markdown","bfa1744e":"markdown","d3701d69":"markdown","dd119d54":"markdown","9ea0fdbb":"markdown","b2c310c3":"markdown","fab6ec1a":"markdown","24bcc95c":"markdown","fe6868a7":"markdown","3832fd37":"markdown","9e509723":"markdown","56c1772f":"markdown","d7aa297b":"markdown","854456f6":"markdown","1c2f14a0":"markdown","328f006d":"markdown","4f4acc72":"markdown","1dce08b3":"markdown","8eb6909b":"markdown","008eea99":"markdown","86890360":"markdown","31736c47":"markdown","bb2c7f1b":"markdown","ab56188d":"markdown","7199e5ab":"markdown","7cd342f8":"markdown","096248bf":"markdown","04460b7e":"markdown","cb2f7d04":"markdown"},"source":{"b68a3f0a":"import seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing\nimport altair as alt\nimport gc","d0451efd":"data=pd.read_csv(r'\/kaggle\/input\/kaggle-survey-2020\/kaggle_survey_2020_responses.csv', low_memory=False)\nprint(data.shape)\ndata.head(5)","1bb94ff0":"list_group_counts=data.Q1[1:].value_counts().sort_index()\nlist_group_counts=pd.DataFrame(list_group_counts)\nlist_group_counts.rename(columns={\"Q1\":\"Number of people participating in the survey\"},inplace=True)\nplt.figure(figsize=(25,8))\nplt.ylabel('Number of people participating in the survey')\nplt.xlabel('Age Groups')\nplt.title('Age Group Distribution')\nclrs = ['#6EB5FF' if (x < max(list_group_counts['Number of people participating in the survey'])) else '#00008B' for x in list_group_counts['Number of people participating in the survey']]\nsns.barplot(x=list_group_counts.index,y=list_group_counts['Number of people participating in the survey'], palette=clrs)\nplt.show()","ff305946":"list_group_counts=data.Q3[1:].value_counts().sort_index()\nlist_group_counts=pd.DataFrame(list_group_counts).sort_values(by='Q3', ascending=False).head(10)\nlist_group_counts.rename(columns={\"Q3\":\"Number of people participating in the survey\"},inplace=True)\nplt.figure(figsize=(30,8))\nplt.ylabel('Number of people participating in the survey')\nplt.title('Country-wise Kaggle Users')\nclrs = ['#00B0B1' if (x < max(list_group_counts['Number of people participating in the survey'])) else '#ADFF2F' for x in list_group_counts['Number of people participating in the survey'] ]\n\nsns.barplot(x=list_group_counts.index,y=list_group_counts['Number of people participating in the survey'], palette=clrs)\nplt.show()","d49ea610":"plt.figure(figsize=(10,5))\nsns.barplot(x=data.Q2[1:].value_counts().index,y=data.Q2[1:].value_counts() , color='#6EB5FF')\n\nplt.show()","2b421f00":"data_copy=data[1:]\ngrouped_data=data_copy.groupby(['Q2','Q5'])['Q2'].count().reset_index(name='Count')\nclustered_column = sns.catplot(\n    data=grouped_data, kind=\"bar\",\n    x=\"Q5\", y=\"Count\", hue=\"Q2\",\n    ci=\"sd\", palette=\"dark\", alpha=.6, height=8.27, aspect=30\/11\n)\nclustered_column.despine(left=True)\nclustered_column.set_axis_labels(\"\", \"Number Of Users\")\nplt.show()","d2088388":"data_copy=data[1:]\ngrouped_data=data_copy.groupby(['Q6','Q5'])['Q6'].count().reset_index(name='Count')\nclustered_column = sns.catplot(\n    data=grouped_data, kind=\"bar\",\n    x=\"Q5\", y=\"Count\", hue=\"Q6\",\n    ci=\"sd\", palette=\"Spectral\", height=8.27, aspect=30\/11\n)\nclustered_column.despine(left=True)\nclustered_column.set_axis_labels(\"\", \"Number Of Users\")\nplt.show()","8940a07f":"list_Q7=data.iloc[:,7:20].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q7:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nplt.figure(figsize=(10,5))\nclrs = ['#00DBFF' if (x < max(list_1)) else '#708090' for x in list_1]\nt=sns.barplot(x=list_value.index,y=list_1,palette=clrs )\n\nplt.show(t)","d4fb63f6":"plt.figure(figsize=(10,6))\nlabels = data.Q8[1:].value_counts().index\npie=plt.pie(x=data.Q8[1:].value_counts(),pctdistance=0.50)\nplt.title(data.Q8[0])\nplt.legend(pie[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=10, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.1, right=0.45)\nplt.show()\n","7e109ec3":"list_Q9=data.iloc[:,21:33].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q9:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nplt.figure(figsize=(29,5))\nclrs = ['#AFEEEE' if (x < max(list_1)) else '#708090' for x in list_1]\n\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\n\nplt.show(t)","7de2fdf2":"list_Q10=data.iloc[:,33:46].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q10:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nplt.figure(figsize=(35,5))\nclrs = ['#AFEEEE' if (x < max(list_1)) else '#708090' for x in list_1]\n\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\n\nplt.show(t)","48880c0c":"plt.figure(figsize=(35,8))\nplt.title(data.Q11[0])\nlist_1=data.Q11[1:].value_counts()\nclrs = ['#98FB98' if (x < max(list_1)) else '#556B2F' for x in list_1]\nsns.barplot(x=data.Q11[1:].value_counts().index,y=data.Q11[1:].value_counts(), palette=clrs) #,color='#93C47D' )\n\nplt.show()","18b20a30":"list_Q12=data.iloc[:,48:52].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q12:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([\n        list_value,test])\n\nplt.figure(figsize=(22,5))\nclrs = ['#FFD700' if (x < max(list_1)) else '#FF4500' for x in list_1]\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.title(data.Q12_Part_1[0])\nplt.show(t)\nplt.figure(figsize=(22,5))\nplt.title(data.Q13[0])\nclrs = ['#FFD700' if (x < max(data.Q13[1:].value_counts())) else '#FF4500' for x in data.Q13[1:].value_counts()]\nsns.barplot(x=data.Q13[1:].value_counts().index,y=data.Q13[1:].value_counts(), color='#F0AD4E', palette=clrs )\n\nplt.show()","c72f4677":"list_Q14=data.iloc[:,53:65].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q14:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\nplt.figure(figsize=(22,5))\nclrs = ['#00DBFF' if (x < max(list_1)) else '#708090' for x in list_1]\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.title(data.Q14_Part_1[0])\nplt.show(t)","d686d558":"data_copy=data[1:]\nsample_data= data_copy.groupby(['Q5','Q15'])['Q15'].count().reset_index(name='Total')\nyears= sample_data.Q15.unique()\ncolor=['red', 'blue',  'green', 'orange','magenta']\nplt.rc('xtick', labelsize=14)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=14)\nfor i,j in zip(years, color):\n    plt.figure(figsize=(38,10))\n    new=sample_data[sample_data.Q15==i]\n    t=plt.plot(new.Q5, new.Total.tolist(), color=j, marker='o')\n    plt.xlabel('Profession', fontsize=18)\n    plt.ylabel('Total Number of people', fontsize=18)\n    #plt.barplot(new.Q5, new.Total, marker='' , linewidth=1, alpha=0.9, label= new.Q5)\n    plt.title('Machine Learning methods used for '+i, fontsize=22)\n    plt.show(t)","3ba23d58":"gc.collect()\nlist_Q16=data.iloc[:,66:82].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q16:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\nplt.figure(figsize=(22,5))\nplt.title('Machine Learning Frameworks used Regularly', fontsize=14)\nplt.xlabel('ML Frameworks\/Libraries', fontsize=11)\nplt.ylabel('Total Number of People who use ML Frameworks Regularly', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nlist_Q17=data.iloc[:,82:94].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q17:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\nplt.figure(figsize=(50,10))\nplt.xlabel('ML Algorithms', fontsize=22)\nplt.ylabel('Total Number of People who use it Regularly', fontsize=22)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\n\nt=sns.barplot(x=list_value.index,y=list_1,  palette=clrs)\nplt.title('Machine Learning Algorithms used Regularly', fontsize=24)\nplt.show(t)","e3ed2f14":"list_Q28=data.iloc[:,144:155].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q28:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('Machine Learning Products Regularly Used', fontsize=14)\nplt.xlabel('Machine Learning Products', fontsize=11)\nplt.ylabel('Total Number of People who use Machine Learning Products', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","c8c9f127":"list_Q18=data.iloc[:,94:101].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q18:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\n\nlabels=list_value.index\nplt.figure(figsize=(40,30))\npie=plt.pie(list_1,pctdistance=0.50)\nplt.title('Categories of computer vision methods used on a regular basis used Regularly', fontsize=20)\nplt.legend(pie[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=18, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.40, right=0.90)","774e9002":"list_Q19=data.iloc[:,101:107].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q19:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\n\nlabels=list_value.index\nplt.figure(figsize=(40,30))\npie=plt.pie(list_1,pctdistance=0.50)\nplt.title('NLP Methods used Regularly', fontsize=20)\nplt.legend(pie[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=18, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.40, right=0.90)","9b4b4b97":"data_copy=data[1:]\ngrouped_data=data_copy.groupby(['Q20','Q21'])['Q21'].count().reset_index(name='Count')\nclustered_column = sns.catplot(\n    data=grouped_data, kind=\"bar\",\n    x=\"Q21\", y=\"Count\", hue=\"Q20\",\n    ci=\"sd\", palette=\"Spectral\", height=8.27, aspect=30\/11\n)\nclustered_column.despine(left=True)\nclustered_column.set_axis_labels(\"The number of individuals are responsible for data science workloads oin the company\", \"Total number of Employees in the Company\")\nplt.show()","0d666107":"plt.figure(figsize=(42,10))\nplt.title(data.Q22[0], fontsize=18)\nplt.xlabel('Company', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(data.Q22[1:].value_counts())) else '#708090' for x in data.Q22[1:].value_counts()]\nsns.barplot(x=data.Q22[1:].value_counts().index,y=data.Q22[1:].value_counts(), palette=clrs  )\nplt.show()","f3018973":"list_Q23=data.iloc[:,110:118].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q23:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\n\nlabels=list_value.index\nplt.figure(figsize=(40,30))\npie=plt.pie(list_1,pctdistance=0.50)\nplt.title('Role at the Current Company', fontsize=20)\nplt.legend(pie[0],labels, bbox_to_anchor=(1,0.5), loc=\"center right\", fontsize=18, \n           bbox_transform=plt.gcf().transFigure)\nplt.subplots_adjust(left=0.0, bottom=0.40, right=0.90)","006ed0af":"gc.collect()\nplt.figure(figsize=(42,10))\nplt.title(data.Q24[0], fontsize=18)\nplt.xlabel('Company', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(data.Q24[1:].value_counts())) else '#708090' for x in data.Q24[1:].value_counts()]\nsns.barplot(x=data.Q24[1:].value_counts().index,y=data.Q24[1:].value_counts(), palette=clrs  )\nplt.show()\n\ndata_copy=data[1:]\nplt.figure(figsize=(70,30))\ngrouped_data= data_copy.groupby(['Q5','Q24'])['Q24'].count().reset_index(name='Total')\nclustered_column = sns.catplot(\n    data=grouped_data, kind=\"bar\",\n    x=\"Q24\", y=\"Total\", hue=\"Q5\",\n    ci=\"sd\", palette=\"Spectral\", height=8.27, aspect=60\/20\n)\n\nplt.title('Yearly compensation with respect to profession')\nclustered_column.despine(left=True)\nclustered_column.set_axis_labels(\"Yearly Compensation\", \"Total number of peope who having a particular yearly compensation\")\nplt.show()","9a70f4bd":"plt.figure(figsize=(42,15))\nplt.title(data.Q25[0], fontsize=18)\nplt.xlabel('Money spent on Machine Learning and cloud computing services past 5 years', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(data.Q25[1:].value_counts())) else '#708090' for x in data.Q25[1:].value_counts()]\nsns.barplot(x=data.Q25[1:].value_counts().index,y=data.Q25[1:].value_counts(), palette=clrs  )\nplt.show()","261375b0":"list_Q26=data.iloc[:,120:132].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q26:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\nplt.figure(figsize=(28,5))\nplt.title('Cloud Computing Platforms used Regularly', fontsize=14)\nplt.xlabel('Cloud Computing Platforms', fontsize=11)\nplt.ylabel('Total Number of People who use Cloud Computing Platforms Regularly', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nlist_Q27=data.iloc[:,132:144].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q27:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\n\nplt.figure(figsize=(35,5))\nplt.title('Cloud Computing Products', fontsize=14)\nplt.xlabel('Cloud Computing Products', fontsize=11)\nplt.ylabel('Total Number of People who use Cloud Computing Products', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","3da1396a":"list_Q29=data.iloc[:,155:173].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q29:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(40,10))\nplt.title('Big Data Products Regularly Used', fontsize=14)\nplt.xlabel('Big Data Products (relational databases, data warehouses, data lakes, or similar)', fontsize=11)\nplt.ylabel('Total Number of People who use Big Data Products', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","54141edc":"list_Q31=data.iloc[:,174:189].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q31:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(30,5))\nplt.title(data['Q31_A_Part_1'][0][:-61], fontsize=14)\nplt.xlabel('Business Intelligence Tools', fontsize=11)\nplt.ylabel('Total Number of People who use Business Intelligence Tools ', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nplt.figure(figsize=(42,10))\nplt.title(data.Q32[0][:-16], fontsize=20)\nplt.xlabel('Business Intelligence Tools', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nplt.rc('xtick', labelsize=14)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=14)\nclrs = ['#6D9EEB' if (x < max(data.Q32[1:].value_counts())) else '#708090' for x in data.Q32[1:].value_counts()]\nsns.barplot(x=data.Q32[1:].value_counts().index,y=data.Q32[1:].value_counts(), palette=clrs  )\nplt.show()","a9dfa82d":"gc.collect()\nlist_Q34=data.iloc[:,198:210].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q34:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(50,10))\nplt.title('Automated Machine Learning Tools used Regularly', fontsize=18)\nplt.xlabel('Automated Machine Learning Tools', fontsize=11)\nplt.ylabel('Total Number of People who use Automated Machine Learning Tools', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","1e7b29fd":"list_Q35=data.iloc[:,210:221].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q34:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(50,10))\n\nplt.title('Tools used to manage machine learning experiments', fontsize=14)\nplt.xlabel('Automated Machine Learning Tools', fontsize=11)\nplt.ylabel('Total Number of People who use Automated Machine Learning Tools', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","cfee098c":"list_Q36=data.iloc[:,221:231].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q36:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(50,10))\n\nplt.title('Publicly Share or deploy ML applications', fontsize=14)\nplt.xlabel('Tools to publicly Share or deploy ML applications', fontsize=11)\nplt.ylabel('Total Number of People who use those Tools', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","1729943b":"list_Q37=data.iloc[:,231:243].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q37:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(50,10))\n\nplt.title('Platforms to begin or completed data science courses', fontsize=14)\nplt.xlabel('Various Educational Platforms', fontsize=11)\nplt.ylabel('Total Number of People who use those Platforms', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","ac515cca":"plt.figure(figsize=(42,15))\nplt.title(data.Q38[0][:-18], fontsize=18)\nplt.xlabel('Money spent on Machine Learning and cloud computing services past 5 years', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nplt.rc('xtick', labelsize=12)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=12)\nclrs = ['#6D9EEB' if (x < max(data.Q38[1:].value_counts())) else '#708090' for x in data.Q38[1:].value_counts()]\nsns.barplot(x=data.Q38[1:].value_counts().index,y=data.Q38[1:].value_counts(), palette=clrs  )\nplt.show()","5c522764":"list_Q39=data.iloc[:,244:256].columns\nlist_1=[]\nlist_value=pd.DataFrame()\nfor i in list_Q39:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(50,10))\nplt.title('Various media sources that report on data science topics', fontsize=14)\nplt.xlabel('Media sources that report on data science topics', fontsize=11)\nplt.ylabel('Total Number of People who read the media sources', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)","738e83de":"list_Q26B=data.iloc[:,256:268].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q26B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('Cloud Computing Platforms Kagglers hope to become familiar with in the next 2 years', fontsize=14)\nplt.xlabel('Cloud Computing Platforms', fontsize=11)\nplt.ylabel('Total Number of People who use Cloud Computing Products', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nlist_Q27B=data.iloc[:,268:280].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q27B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('In the next 2 years, do you hope to become more familiar with any of these specific cloud computing products?', fontsize=14)\nplt.xlabel('Cloud Computing Products', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\n\nlist_Q28B=data.iloc[:,280:291].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q28B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('In the next 2 years, do you hope to become more familiar with any of these specific machine learning products?', fontsize=14)\nplt.xlabel('Machine Learning Products', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nlist_Q29B=data.iloc[:,291:309].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q29B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('In the next 2 years, which of the big data products do you hope to become more familiar with?', fontsize=14)\nplt.xlabel('Big Data Products', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\nlist_Q31B=data.iloc[:,309:324].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q31B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('Which of the following business intelligence tools do you hope to become more familiar with in the next 2 years?', fontsize=14)\nplt.xlabel('Business Intelligence Tools', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n\n\n\n\nlist_Q34B=data.iloc[:,344:355].columns\nlist_value=pd.DataFrame()\nlist_1=[]\nfor i in list_Q34B:\n    test=pd.DataFrame(data[i][1:].value_counts())\n    list_1.append(data[i][1:].value_counts()[0])\n    list_value=pd.concat([list_value,test])\nclrs = ['#6D9EEB' if (x < max(list_1)) else '#708090' for x in list_1]\nplt.figure(figsize=(35,5))\nplt.title('Which of the specific automated machine learning tools do you hope to become more familiar with in the next 2 years?', fontsize=14)\nplt.xlabel('Automated ML Tools', fontsize=11)\nplt.ylabel('Total Number of People', fontsize=11)\nt=sns.barplot(x=list_value.index,y=list_1, palette=clrs)\nplt.show(t)\n","aa140419":"<a id=\"section-9\"><\/a>\n### Regularly used IDE's","d731e1ab":"<a id=\"section-16\"><\/a>\n### Machine Learning Products","251da7d8":"<a id=\"section-one\"><\/a>\n## Survey Data","07e0666c":"# Introduction\n\nThe Kaggle Survey 2020 has a total of 20,037 responses from various Kaggle users of each age group. Using this data I deep-dive to gain further insights.\n\nThe approach taken was to get an indepth knowledge about our Kagglers about their skills, their companies, their knowledge base in various domains and what all skills they plan to enhance or learn.","8fc2d0ef":"Kagglers prefer to use Scikit-Learn as a Machine Learning Framework regularly. \nThe most preferrable and commonly used ML Algorithms are Logistic and Linear Regression which are the basic ML libraries.","a1e21732":"Many Kagglers do not use any Tools. With the second highest count is Auto SkLearn that is commonly used.","a3003e29":"<a id=\"section-20\"><\/a>\n## Companies where Kaggle Users are employed and how they incorporate ML","e9c57f99":"<a id=\"section-32\"><\/a>\n## Media Source to report Data Science Topics\n\nKaggle is leading, many Kaggle users prefer the Kaggle platform to learn about the various Data Science topics.","5ca629a3":"<a id=\"section-6\"><\/a>\n## Coding Proficiency","a720ad77":"<a id=\"section-30\"><\/a>\n# Platforms to Learn Data Science\n\nCoursera is the leading platform among Kagglers for learning Data Science","e50a9007":"## *Analysis:*\n\n- India is leading with a huge margin of Kaggle Users.\n- Second- highest users are from USA\n- Other is inclusive of all the countries not listed in the survey.","a2a9d7c0":"<a id=\"section-4\"><\/a>\n## Gender count who filled the kaggle survey","39968e4b":"<a id=\"section-26\"><\/a>\n# Business Intelligence Tools","4d6a4f22":"<a id=\"section-27\"><\/a>\n# Automated ML Tools","946c9dce":"<a id=\"section-5\"><\/a>\n## Profession-wise Kaggle User count","d20491a8":"There are more male users than female Kaggle users","d7cb1633":"<a id=\"section-22\"><\/a>\n### Yearly Compensation in $USD","d82a8607":"<a id=\"section-13\"><\/a>\n# Data Visualization\n## Visualization Libraries","21a40a8c":"<a id=\"section-8\"><\/a>\n### Recommended first language to learn for an aspiring data scientist\n\nWith Python recommended by a huge majority of the users as the programming language to learn first by an aspiring data scientist","a9dd8f47":"<a id=\"section-17\"><\/a>\n###  Computer Vision Methods Used Regularly","9e61ca4d":"Tableu is the tool that has been most oftenly used among the choices in the survey.","d7676d32":"Many Kagglers do not use any Automated Machine Learning Tools. With the second highest count is Auto SkLearn that is commonly used.","32a2916d":"Kagglers love and prefer to use Colab Notebooks followed by Kaggle Notebooks","8c71fb7d":"<a id=\"section-19\"><\/a>\n# Company-wise Data\n\n### Total Employees vs Number of Employees that are responsible for the Data Science Workload","333d20b7":"<a id=\"section-7\"><\/a>\n## Programming Languages\nThe majority of users use Python, R and SQL programming language on a regular basis\n","f47e382f":"Most Kagglers have not spent any money on ML and Cloud Computing Services in the past 5 years","32581971":"In the next two years, many Kaggle Users want to learn the AWS Cloud Computing Service along with Google Cloud Compute Engine. \nIn the ML domain, Kagglers also hope to get familiar with the Google Cloud AI Platform and AI Engine. Tensorboad is the most selected option Kagglers chose to become familiar with.\n\nMySQL is the database that was the most selected one along with Tableu in the Business Intelligence Side.\n\n","25db97e4":"<a id=\"section-28\"><\/a>\n## Tools To Manage Machine Learning Experiments","24bee1c9":"The most use IDEs are Jupyter Notebook followed VSCode and then Pycharm.\n","a08f1530":"<a id=\"section-14\"><\/a>\n# Machine Learning\n### Years of Experience using ML methods","bfa1744e":"<a id=\"section-21\"><\/a>\n### Kagglers and their role designated by the current employer","d3701d69":"<a id=\"section-12\"><\/a>\n### GPU the preferred Specialized hardware","dd119d54":"It is found that a majority of the most experienced and the Kaggle Users profeicient in coding having 20+ yrs as well as 10-20 yrs are working as a Data Scientist, Software Engineer or Research Scientist.\n\nThe next group with years of experience as 5-10 yrs are majorly Data Scientist, Software Engineers and Students\n\nA vast majority of Students who are Kaggle users have a 1-2 yrs of coding experience.\n\n\n","9ea0fdbb":"<a id=\"section-25\"><\/a>\n# Big Data Products used Regularly","b2c310c3":"It is found that smaller the company i.e. the total number of employees in the company are less than 50, the number of people that handle the Data Science workloads are 1-2.\n\nWhereas when there are 10,000 or more employees the individuals that are handling Data Science workloads are 20 or more.","fab6ec1a":"<a id=\"section-31\"><\/a>\n## Primary Tool Used to analyse data \n\nJupyter Notebooks are commonly used to create scripts such that data can be analysed and insights can be depicted with beautiful and illustrative charts.","24bcc95c":"The most common NLP Methods used by Kagglers are Word Embeddingd\/vectors (GLove, fastText, word2vec)","fe6868a7":"<a id=\"section-2\"><\/a>\n### Age Groups that are most interest in Data Science\n\nIt is found that the top 3 age groups most interested in data science are:\n* 25-29\n* 22-24\n* 18-21","3832fd37":"Most Kaggle Users do not use any Machine Learning Products Regularly.","9e509723":"Since there are many Kaggler that are working as a data scientist as depicted in [this chart](#section-5). \nTherefore most of the Kagglers have to analyze and understant data to influence product or business decisions.","56c1772f":"# Table Of Contents\n---\n1. [Data](#section-one)\n2. [Age Groups interested in Data Science](#section-2)\n3. [Countries with the highest resident Kagglers](#section-3)\n4. [Gender Count of the Kagglers](#section-4)\n5. [Profession-wise Kaggle User Count](#section-5)\n6. [Coding Proficiency](#section-6)\n    * [Programming Languages](#section-7)\n    * [Recommended first language to learn for an aspiring data scientist](#section-8)\n    * [Regularly used IDE's](#section-9)\n\t* [Hosted notebook products used on a regular basis](#section-10)\n    \n7. [Computing Platform](#section-11)\n\t* [Specialized hardware](#section-12)\n8. [Data Visualization](#section-13)\n\t* [Visualization Libraries](#section-13)\n9. [Machine Learning](#section-14)\n\t* [Years of Experience using ML methods](#section-14)\n\t* [Machine Learning Frameworks and Algorithms](#section-15)\n\t* [Machine Learning Products](#section-16)\n\t* [Computer Vision Methods Used Regularly](#section-17)\n\t* [Natural Language Processing Methods](#section-18)    \n10. [Company-wise Data](#section-19)\n    * [Total Employees vs Number of Employees that are responsible for the Data Science Workload](#section-19)\n\t* [Companies where Kaggle Users are employed and how they incorporate ML](#section-20)\n\t* [Kagglers and their role designated by the current employer](#section-21)\n\t* [Yearly Compensation in USD](#section-22)\n\t* [Money spent on Machine Learning and cloud computing services in the past 5 years](#section-23)   \n11. [Cloud Computing Platforms](#section-24)\n12. [Big Data Products used Regularly](#section-25)\n13. [Business Intelligence Tools](#section-26)\n14. [Automated ML Tools](#section-27)\n\t* [Tools To Manage Machine Learning Experiments](#section-28)\n15. [Deployment Platforms](#section-29)\n16. [Platforms to Learn Data Science](#section-30)\n\t* [Primary Tool Used to analyse data](#section-31)\n\t* [Media Source to report Data Science Topics](#section-32)\n17. [ML, Cloud Computing Platforms, etc. Kagglers hope to get familiar with](#section-33)\n\n---\n---","d7aa297b":"The most common Computer Vision Methods are VGG, Inception, ResNet, ResNeXt, NASNet, EfficientNet,etc. These are the common image classification networks used by Kagglers.","854456f6":"Most Kagglers use Amazon Web Services (AWS) and its cloud computing capabilities on a regular basis.\nWith Amazon EC2 as the most popular cloud computing product.","1c2f14a0":"Students are the majority of the kaggle users who have used machine learning methods for 1-2 years. Following which Data Scientist is the another profession with users using the ML methods for 2-3 and 3-4 years.\n\nKaggle users who are Data Scientist and Research Scientist have used Machine Learnig methods for 10-20 years and 20 years or more ","328f006d":"<a id=\"section-18\"><\/a>\n###  Natural Language Processing Methods","4f4acc72":"## *Analysis:*\n\nA majority of the Kaggle Users are Students, followed by Data Scientist and then Software Engineers.\n","1dce08b3":"Most of the companies where Kagglers work, the employers are exploring Machine Learning as a domain.\nMachine Learning models that are in development may one day be pushed to production.","8eb6909b":"<a id=\"section-24\"><\/a>\n# Cloud Computing Platforms","008eea99":"MySQL is a big data product that is most regularly used among different Kagglers. Followed which Postgres-SQL is the next big data product that regularly used.","86890360":"<a id=\"section-3\"><\/a>\n## Top 10 Countries with the highest residents interested in Kaggle","31736c47":"<a id=\"section-33\"><\/a>\n# ML, Cloud Computing Platforms, etc. Kagglers hope to get familiar with","bb2c7f1b":"<a id=\"section-23\"><\/a>\n###  Money spent on Machine Learning and cloud computing services in the past 5 years","ab56188d":"<a id=\"section-10\"><\/a>\n### Hosted notebook products used on a regular basis","7199e5ab":"Matplotlib and Seaborn are the frequently used data visualization libraries.","7cd342f8":"<a id=\"section-29\"><\/a>\n# Deployment Platforms\n\nGitlab is the most commonly used Deployment Platforms","096248bf":"<a id=\"section-15\"><\/a>\n###  Machine Learning Frameworks and Algorithms","04460b7e":"<a id=\"section-11\"><\/a>\n## Computing Platform\n\nMany survey responses suggest that the kaggle users prefer personal computer or laptops compare to a hosted computed platform.\n\nThis huge preference for using personal computers can be due to a fact that most of the Kaggle Users are **students**. Since students would prefer a personal computer than a hosted paid computing platform.","cb2f7d04":"Maximum Kagglers that have a yearly compensation of 0-999$ work as a Data Scientist and Software Engineers."}}