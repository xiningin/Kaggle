{"cell_type":{"bac8e90d":"code","e2b78828":"code","5bdcd39d":"code","e155de17":"code","059565e6":"code","e4f0bea3":"code","8f7930c4":"code","53a67356":"code","270fb65b":"code","cf71c76d":"code","c866b050":"code","a224af91":"code","4b069c91":"code","d34d50bf":"code","5e4e7a00":"code","0d1fd8bd":"code","5d87409f":"code","547c9136":"code","206d6145":"code","afcd5fde":"code","d7c8dfa3":"code","244607c4":"code","ef48cd73":"markdown","c60e4d59":"markdown","081a82c6":"markdown","5b2b3705":"markdown","debfda90":"markdown","f5b0047c":"markdown","e3aabb36":"markdown","615889cd":"markdown","6eb38711":"markdown","e79a9a2b":"markdown","431a38b5":"markdown","71c2c65c":"markdown","f161b140":"markdown"},"source":{"bac8e90d":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score","e2b78828":"wine_dataset = pd.read_csv(r'..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv') # loading the dataset to a Pandas DataFrame","5bdcd39d":"# number of rows & columns in the dataset\nwine_dataset.shape","e155de17":"# first 5 rows of the dataset\nwine_dataset.head()","059565e6":"# checking for missing values\nwine_dataset.isnull().sum()","e4f0bea3":"wine_dataset.describe() # statistical measures of the dataset","8f7930c4":"sns.catplot(x='quality', data = wine_dataset, kind = 'count') # number of values for each quality","53a67356":"# volatile acidity vs Quality\nplot = plt.figure(figsize=(5,5))\nsns.barplot(x='quality', y = 'volatile acidity', data = wine_dataset)","270fb65b":"# citric acid vs Quality\nplot = plt.figure(figsize=(5,5))\nsns.barplot(x='quality', y = 'citric acid', data = wine_dataset)","cf71c76d":"correlation = wine_dataset.corr()","c866b050":"# constructing a heatmap to understand the correlation between the columns\nplt.figure(figsize=(9,9))\nsns.heatmap(correlation, cbar=True, square=True, fmt = '.1f', annot = True, annot_kws={'size':8}, cmap = 'GnBu')","a224af91":"# separate the data and Label\nX = wine_dataset.drop('quality',axis=1)","4b069c91":"print(X)","d34d50bf":"Y = wine_dataset['quality'].apply(lambda y_value: 1 if y_value>=7 else 0) # converting to 1s and 0s binary numbers","5e4e7a00":"print(Y)","0d1fd8bd":"X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=3)","5d87409f":"print(Y.shape, Y_train.shape, Y_test.shape)","547c9136":"model = RandomForestClassifier()","206d6145":"model.fit(X_train, Y_train)","afcd5fde":"# accuracy on test data\nX_test_prediction = model.predict(X_test)\ntest_data_accuracy = accuracy_score(X_test_prediction, Y_test)","d7c8dfa3":"print('Accuracy : ', test_data_accuracy)","244607c4":"input_data = (10.7,0.35,0.53,2.6,0.07,5.0,16.0,0.9972,3.15,0.65,11)\n\n# changing the input data to a numpy array\ninput_data_as_numpy_array = np.asarray(input_data)\n\n# reshape the data as we are predicting the label for only one instance\ninput_data_reshaped = input_data_as_numpy_array.reshape(1,-1)\n\nprediction = model.predict(input_data_reshaped)\nprint(prediction)\n\nif (prediction[0]==1):\n  print('Good Quality Wine')\nelse:\n  print('Bad Quality Wine')","ef48cd73":"**EDA**\n\nRed Wine Quality Dataset: https:\/\/www.kaggle.com\/uciml\/red-wine-quality-cortez-et-al-2009","c60e4d59":"**Correlation**","081a82c6":"**Data Analysis and Visulaization**","5b2b3705":"****Building a Predictive System","debfda90":"**Importing dependencies and libraries **","f5b0047c":"Aim: To predict if the red wine quality is good or bad uing various  relevant features provided in the dataset","e3aabb36":"****Label Binarizaton","615889cd":"Code written by Dhrumil Vadodaria!!\n\nConnect with me on LinkedIn for future discussions on ML: https:\/\/www.linkedin.com\/in\/dhrumil-v-814932128\/\n\nPlease provide citation if you use the code!","6eb38711":"****Model Evaluation","e79a9a2b":"****Train & Test Split","431a38b5":"****Data Preprocessing","71c2c65c":"Accuracy Score","f161b140":"**Model Training:**\n\nRandom Forest Classifier"}}