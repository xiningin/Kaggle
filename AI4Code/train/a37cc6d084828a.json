{"cell_type":{"5d4bf4fb":"code","5d6d88e1":"code","e55d2d47":"code","3d4ecd7d":"code","5f25b148":"code","dfef1e7b":"code","6b84b903":"code","a76cb82a":"code","39da2629":"code","e06747cb":"code","c755669a":"code","72a8a816":"code","960b6c5e":"code","d2c0377b":"code","fe111b46":"code","5b00b5eb":"code","33d491d5":"code","646adbee":"code","6dc03e86":"code","1178ff67":"code","e8247a7f":"code","1792af4e":"code","1b779904":"code","0d2273e7":"code","d39280bd":"code","c13232e8":"code","24768694":"code","c481950d":"code","ee4a5b82":"code","6858adc8":"code","f58a48df":"code","5c1671d1":"code","dbd38e8a":"code","f0f17a2a":"code","8bebaaf3":"code","b7b6ca30":"code","8f3a8cf2":"code","2fcb7571":"code","dcfe1d14":"code","6ac1cbf2":"code","0b6f97f8":"code","bf246e3c":"code","611671af":"code","5b16638b":"code","00f26516":"markdown","b878eec5":"markdown","035c3fe0":"markdown","7741d818":"markdown","08793a0d":"markdown","d8a571d5":"markdown","dda71878":"markdown","116d76fc":"markdown","e0401ed5":"markdown","0962c10f":"markdown","7c64683a":"markdown","4175fa26":"markdown","3df98fa4":"markdown","b622567f":"markdown","bd3b1fce":"markdown","3091bf8f":"markdown","eb7f5c35":"markdown","cb50f4d6":"markdown","1d003af9":"markdown","37dab765":"markdown","d4c86ea4":"markdown","066f5063":"markdown","b0bd9faf":"markdown","e43aa187":"markdown","9e4214ff":"markdown","bbf9fac8":"markdown","f031adf5":"markdown","a7a80c6e":"markdown","47096627":"markdown","cd242ed4":"markdown","8d48475c":"markdown","e7e00896":"markdown"},"source":{"5d4bf4fb":"#import data and modules\nimport pandas as pd \nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\n\noriginal_train=pd.read_csv('train.csv')\noriginal_test=pd.read_csv('test.csv',index_col=0)\noriginal_train.head()\n\n#plot settings\npd.set_option('max_columns',100)\npd.set_option('max_row',300)\n","5d6d88e1":"from dabl import detect_types\noriginal_train_types=detect_types(original_train)\noriginal_train_types","e55d2d47":"original_train['is_business_travel_ready'].value_counts()","3d4ecd7d":"#\u8fd9\u90e8\u5206\u53ef\u5220\u53bb\nfrom dabl import clean\ndablclean_train, dablclean_train_types=clean(original_train,verbose=1,return_types=True)\ndablclean_test, dablclean_test_types=clean(original_test,verbose=1,return_types=True)","5f25b148":"useless=original_train_types[original_train_types['useless']==True].index\nuseless\ndabl_train=original_train.drop(useless, axis=1)\ndabl_test=original_test.drop(useless, axis=1)","dfef1e7b":"dabl_train['price']=dabl_train['price'].apply(lambda x: float(x.split('$')[1].replace(',','')))","6b84b903":"# we want to delete some variables with high correlation with other variables to reduce potential multicollinearity\ndabl_train=dabl_train.drop(['host_total_listings_count','minimum_minimum_nights','maximum_minimum_nights','maximum_maximum_nights','minimum_nights_avg_ntm','maximum_nights_avg_ntm','calculated_host_listings_count_entire_homes'],axis=1)\ndabl_test=dabl_test.drop(['host_total_listings_count','minimum_minimum_nights','maximum_minimum_nights','maximum_maximum_nights','minimum_nights_avg_ntm','maximum_nights_avg_ntm','calculated_host_listings_count_entire_homes'],axis=1)","a76cb82a":"#First let's have a look at the missing values\nimport missingno as msno\nmsno.matrix(dabl_train)\nplt.show()","39da2629":"dabl_train.isnull().sum().sort_values(ascending=False)","e06747cb":"# We want to drop those parameters with too many missing values,like 'square_feet', with 10579 missing values out of 10635, which almost gives no information.\nfilled_train=dabl_train.copy()\nfilled_test=dabl_test.copy()\nfilled_train=filled_train.drop(['square_feet','monthly_discount','weekly_discount'],axis=1)\nfilled_test=filled_test.drop(['square_feet','monthly_discount','weekly_discount'],axis=1)","c755669a":"#Type One: fill with 'none'\uff0c for categorical or text parameters\nfilled_train['neighborhood_overview']=filled_train['neighborhood_overview'].fillna('none')\nfilled_train['access']=filled_train['access'].fillna('none')\nfillna_none_col=['transit','host_response_time','space','house_rules','host_neighbourhood','neighbourhood']\nfilled_train[fillna_none_col]=filled_train[fillna_none_col].fillna('none')\n#\u2019none\u2018 \u4e5f\u53ef\u4ee5\u6362\u6210NAV \u6216\u8005notgiven \n","72a8a816":"#Type Two: fill with '0': for numerical parameters\nfillna_0_col=['reviews_per_month','host_response_rate','host_acceptance_rate','review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness']\nfilled_train[fillna_0_col]=filled_train[fillna_0_col].fillna('0')\n\n#\u8fd9\u8fb9\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u6b63\u6001\u5206\u5e03\u968f\u673a\u751f\u6210\u6cd5","960b6c5e":"#Type Three: Date to transfer to numbers\nfilled_train['last_review']=pd.to_datetime(filled_train['last_review'])\nfilled_train['first_review']=pd.to_datetime(filled_train['first_review'])\nfilled_train['review_gap']=(filled_train['last_review'] - filled_train['first_review'])\n\nfilled_train['review_gap']=filled_train['review_gap'].dt.days\nfilled_train['review_gap']=filled_train['review_gap'].fillna(filled_train['review_gap'].mean())\nfilled_train=filled_train.drop(['last_review','first_review'], axis=1)","d2c0377b":"#Type Four: fill with interpolation\ninter_filled_col=['beds','bedrooms','bathrooms']\nfilled_train[inter_filled_col]=filled_train[inter_filled_col].interpolate()\n\n#\u8fd9\u4e2a\u53ef\u4ee5\u653e\u5728Type Two \u4e00\u8d77\u4f7f\u7528 \uff0c\u4e00\u90e8\u5206\u75280\u4ee3\u66ff\uff0c\u4e00\u90e8\u5206\u7528\u63d2\u503c\u6cd5\uff0c\u4e00\u90e8\u5206\u7528\u968f\u673a\u751f\u6210\u6cd5\u3002\u7406\u7531\u5199\u5728report\u91cc","fe111b46":"#same treatment with the test set\n#Type One: fill with 'none'\uff0c for categorical or text parameters\nfilled_test['neighborhood_overview']=filled_test['neighborhood_overview'].fillna('none')\nfilled_test['access']=filled_test['access'].fillna('none')\nfillna_none_col=['transit','host_response_time','space','house_rules','host_neighbourhood','neighbourhood']\nfilled_test[fillna_none_col]=filled_test[fillna_none_col].fillna('none')\n#\u2019none\u2018 \u4e5f\u53ef\u4ee5\u6362\u6210NAV \u6216\u8005notgiven \n#Type Two: fill with '0': for numerical parameters\nfillna_0_col=['reviews_per_month','host_response_rate','host_acceptance_rate','review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness']\nfilled_test[fillna_0_col]=filled_test[fillna_0_col].fillna(0)\n\n#\u8fd9\u8fb9\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u6b63\u6001\u5206\u5e03\u968f\u673a\u751f\u6210\u6cd5\n\n#Type Three: Date to transfer to numbers\nfilled_test['last_review']=pd.to_datetime(filled_test['last_review'])\nfilled_test['first_review']=pd.to_datetime(filled_test['first_review'])\nfilled_test['review_gap']=(filled_test['last_review'] - filled_test['first_review'])\n\nfilled_test['review_gap']=filled_test['review_gap'].dt.days\nfilled_test['review_gap']=filled_test['review_gap'].fillna(filled_test['review_gap'].mean())\nfilled_test=filled_test.drop(['last_review','first_review'], axis=1)\n\n#Type Four: fill with interpolation\ninter_filled_col=['beds','bedrooms','bathrooms']\nfilled_test[inter_filled_col]=filled_test[inter_filled_col].interpolate()\n\n#\u8fd9\u4e2a\u53ef\u4ee5\u653e\u5728Type Two \u4e00\u8d77\u4f7f\u7528 \uff0c\u4e00\u90e8\u5206\u75280\u4ee3\u66ff\uff0c\u4e00\u90e8\u5206\u7528\u63d2\u503c\u6cd5\uff0c\u4e00\u90e8\u5206\u7528\u968f\u673a\u751f\u6210\u6cd5\u3002\u7406\u7531\u5199\u5728report\u91cc\n","5b00b5eb":"FE_train=filled_train.copy()\nFE_test=filled_test.copy()","33d491d5":"print(FE_train['cancellation_policy'].value_counts())","646adbee":"FE_train.loc[(FE_train['cancellation_policy']=='super_strict_30')|(FE_train['cancellation_policy']=='luxury_no_refund')|(FE_train['cancellation_policy']=='strict_14_with_grace_period')|(FE_train['cancellation_policy']=='super_strict_60')|(FE_train['cancellation_policy']=='luxury_super_strict_125'),'cancellation_policy']='strict'\nFE_train.loc[FE_train['cancellation_policy']=='luxury_moderate','cancellation_policy']='moderate'\nFE_test.loc[(FE_test['cancellation_policy']=='super_strict_30')|(FE_test['cancellation_policy']=='luxury_no_refund')|(FE_test['cancellation_policy']=='strict_14_with_grace_period')|(FE_test['cancellation_policy']=='super_strict_60')|(FE_test['cancellation_policy']=='luxury_super_strict_125'),'cancellation_policy']='strict'\nFE_test.loc[FE_test['cancellation_policy']=='luxury_moderate','cancellation_policy']='moderate'\n\nprint(FE_train['cancellation_policy'].value_counts())","6dc03e86":"sns.boxplot(x=FE_train['cancellation_policy'], y=FE_train['price'],showfliers=False)\nplt.show()","1178ff67":"cancellation_keys={'flexible': 1,\n                   'moderate': 2,\n                   'strict': 3,\n                  }\nFE_train['cancellation_policy']=FE_train['cancellation_policy'].replace(cancellation_keys)\nFE_test['cancellation_policy']=FE_test['cancellation_policy'].replace(cancellation_keys)","e8247a7f":"# we want to transform t and f in 'instant_bookable' into o and 1\nFE_train['instant_bookable'].value_counts()","1792af4e":"tf_keys={'t':1,\n        'f': 0}\nFE_train['instant_bookable']=FE_train['instant_bookable'].replace(tf_keys)\nFE_test['instant_bookable']=FE_test['instant_bookable'].replace(tf_keys)","1b779904":"FE_train['host_verifications']=FE_train['host_verifications'].apply(lambda x:len(x.split(\",\")))\nFE_test['host_verifications']=FE_test['host_verifications'].apply(lambda x:len(x.split(\",\")))","0d2273e7":"print(FE_train['host_verifications'].value_counts())","d39280bd":"print(FE_train['neighbourhood_cleansed'].value_counts())","c13232e8":"neighbourhood_name = FE_train['neighbourhood_cleansed'].value_counts().index[:19]\nFE_train['neighbourhood_cleansed']=FE_train['neighbourhood_cleansed'].apply(lambda x:'Other' if x not in neighbourhood_name else x)\nFE_test['neighbourhood_cleansed']=FE_test['neighbourhood_cleansed'].apply(lambda x:'Other' if x not in neighbourhood_name else x)","24768694":"print(FE_train['neighbourhood_cleansed'].value_counts())","c481950d":"FE_train['host_is_superhost'].value_counts()","ee4a5b82":"FE_train['host_identity_verified'].value_counts()","6858adc8":"FE_train['is_location_exact'].value_counts()","f58a48df":"tf_keys={'t':1,\n        'f': 0}\nFE_train['host_is_superhost']=FE_train['host_is_superhost'].replace(tf_keys)\nFE_test['host_is_superhost']=FE_test['host_is_superhost'].replace(tf_keys)","5c1671d1":"tf_keys={'t':1,\n        'f': 0}\nFE_train['is_location_exact']=FE_train['is_location_exact'].replace(tf_keys)\nFE_test['is_location_exact']=FE_test['is_location_exact'].replace(tf_keys)","dbd38e8a":"FE_train['host_acceptance_rate']=FE_train['host_acceptance_rate'].str.replace(\"%\",\"\").astype(float)\nFE_test['host_acceptance_rate']=FE_test['host_acceptance_rate'].str.replace(\"%\",\"\").astype(float)","f0f17a2a":"model5_train=FE_train[['review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness',\n'instant_bookable','cancellation_policy','calculated_host_listings_count','calculated_host_listings_count_private_rooms','reviews_per_month','price']]\nmodel5_test=FE_test[['review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness'\n,'instant_bookable','cancellation_policy','calculated_host_listings_count','calculated_host_listings_count_private_rooms','reviews_per_month']]\nmodel5_train","8bebaaf3":"#transform into dummy variables\nmodel5_train=pd.get_dummies(model5_train,drop_first=True)\nmodel5_test=pd.get_dummies(model5_test,drop_first=True)\nmodel5_train","b7b6ca30":"descriptive=model5_train.describe()\ndescriptive.loc['skew', :]=model5_train.skew()\ndescriptive.loc['kurt', :]=model5_train.kurt()\ndescriptive","8f3a8cf2":"from statlearning import plot_dists\nplot_dists(model5_train[['review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness','calculated_host_listings_count','calculated_host_listings_count_private_rooms','reviews_per_month'\n                        ,'cancellation_policy']])\nplt.show()","2fcb7571":"from statlearning import plot_regressions\nplot_regressions(model5_train[['review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness','calculated_host_listings_count','calculated_host_listings_count_private_rooms','reviews_per_month','cancellation_policy']],model5_train['price'])\nplt.show()\n\n#\u6211\u60f3\u6362\u4e00\u4e0b\u8d8b\u52bf\u7ebf\u7684\u989c\u8272\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5f04\uff0c\u540e\u671f\u7814\u7a76\u4e00\u4e0b","dcfe1d14":"corrmat5=model5_train.corr()['price'].sort_values(ascending=False)\ncorrmat5","6ac1cbf2":"plt.subplots(figsize=(20,15))\nsns.heatmap(model5_train.corr(),square=True,annot=True,cmap='cool')\nplt.show()","0b6f97f8":"#\u56e0\u4e3a\u6211\u4e4b\u524d\u4e3a\u4e86\u65b9\u4fbf\u628a\u2018price'\u653e\u5728model5_test\u91cc\uff0c\u73b0\u5728\u8bad\u7ec3\u6a21\u578b\u7684\u65f6\u5019\u5f97\u628aprice\u53bb\u6389\uff0c\u4e0d\u7136\u8bef\u5dee\u5c31\u662f0\u4e86\nmodel5_train=model5_train[['review_scores_checkin','review_scores_location','review_scores_value','review_scores_accuracy','review_scores_communication','review_scores_cleanliness',\n'instant_bookable','cancellation_policy','calculated_host_listings_count','calculated_host_listings_count_private_rooms','reviews_per_month']]","bf246e3c":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error as mse\n\nX5_train, X5_vali, y5_train, y5_vali=train_test_split(model5_train,FE_train['price'],test_size=0.25,random_state=1)\n#\u8fd9\u8fb9test,validation split\u7684\u6bd4\u4f8b\u6211\u90090.25\uff0c\u662f\u6211\u968f\u4fbf\u9009\u7684\uff0c\u53ef\u4ee5\u8ba8\u8bba\u4e00\u4e0b\u3002\u4e4b\u540e\u5927\u5bb6\u9a8c\u8bc1\u6a21\u578b\u7684\u65f6\u5019\u90fd\u9009\u4e00\u6837\u7684test_size\u548crandom_state\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u6bd4\u8f83\n\nLinReg=LinearRegression()\nLinReg.fit(X5_train,y5_train)\n\n#\u8bb0\u5f97\u5728X,y \u540e\u9762\u52a0\u4e0a\u6a21\u578b\u7684\u5e8f\u53f7\uff0c\u4ee5\u793a\u533a\u522b\npred5_train=LinReg.predict(X5_train)\npred5_vali=LinReg.predict(X5_vali)\n\n#Calculate MSE\nmse5_train=mse(y5_train,pred5_train)\nmse5_vali=mse(y5_vali,pred5_vali)\n\nprint('Train mse: {:.4f}'.format(mse5_train))\nprint('Validation mse: {:.4f}'.format(mse5_vali))","611671af":"y_pred=LinReg.predict(model5_test)\n\nsubmission=pd.DataFrame(y_pred, index=original_test.index, columns=['price'])\n\nsubmission.head()\n","5b16638b":"submission.to_csv('model5.csv')","00f26516":"from pandas_profiling import ProfileReport\nprofile_train=ProfileReport(dabl_train)\nprofile_train\n#\u8dd1\u8fd9\u4e2apandas profiling\u592a\u5361\u4e86\uff0c\u51e0\u4e07\u4e2a\u6570\u636e\uff0c80\u591a\u4e2a\u53d8\u91cf\uff0c\u4e92\u76f8\u753b\u56fe\u548ccorrelation,\u76f4\u63a5\u6307\u6570\u7206\u70b8\u4e86\u3002\u6211\u7535\u8111\u5185\u5b58\u4e0d\u8db3\uff0c\u5d29\u6e83\u4e86\uff0c\u8fd9\u8fb9\u5c31\u4e0d\u8dd1\u4e86\u3002\u5230\u65f6\u5019\u4ea4\u7684\u65f6\u5019\u6539\u6210code\uff0c\u8ba9\u8001\u5e08\u7684\u9ad8\u7ea7\u7535\u8111\u53bb\u8dd1\u5427 :) \n\u4e0b\u9762\u5c31\u662f\u9ed8\u8ba4\u77e5\u9053Pandas Profiling\u7684\u7ed3\u679c\uff0c\u6839\u636e\u7ed3\u679c\u6765\u5904\u7406\u6570\u636e\u7684","b878eec5":"# 2.6 Correlation plots","035c3fe0":"# 2. EDA","7741d818":"we can see that there are loads of 'white' in the datasets. Loads of missing values. Now let's have a look at the exact numbers of the missingness. ","08793a0d":"We can see from the above that \n1. the distribution of review scores are highly left skewed and concentrated on 10.\n2. a host does not often receive reviews,a host on average gets 0.87 review per month.\n3. a host normally lists on average 8 rooms, but 0.75 room is their private room.","d8a571d5":"# 2.4 Distribution Plots ","dda71878":"2.1 handling missing values","116d76fc":"# 2.3 Statistical EDA","e0401ed5":"# 3. Model Building","0962c10f":"# build a regression model","7c64683a":"Now we want to have a general idea of the correlation between cancellation policies and prices.","4175fa26":"\u540c\u6837\u7684\u9053\u7406\uff0c\u8fd9\u8fb9\u7684\u53d8\u91cf\u4e5f\u9700\u8981\u624b\u5de5\u7b5b\u9009\u8bd5\u9519\u4e00\u4e0b\uff0c\u6709\u4e9b\u53d8\u91cf\u662f\u753b\u4e0d\u4e86Regression\u56fe\u7684","3df98fa4":"We can see that scores are highly correlated with other scores. ","b622567f":"1.1 process useless parameters","bd3b1fce":"In a short glacne, we find the data are all very skewed and kurted. Now let's have a closer look at the plot to get more insights.","3091bf8f":"We can see that the parameter ' is_business_travel_ready' has all the same value of 'f', which contains no useful information. We want to drop this parameter out.","eb7f5c35":"# 4.Submission","cb50f4d6":"We find that there are 4 categories with limited counts. We want to merge them with similiar groups. We group those with 'strict' word into a 'strict' groups. The same goes with the 'moderate' ones. \n\u8fd9\u8fb9\u53ef\u4ee5\u5728report\u91cc\u9762\u5f15\u7528\u5199\u5199\u8fd9\u4e48\u505a\u7684\u4f9d\u636e\uff0c\u6bd4\u5982\u5f15\u7528airbnb\u7684\u5b98\u7f51\u7684\u53d6\u6d88\u653f\u7b56\u662f\u5177\u4f53\u600e\u4e48\u6837\u7684\u3002","1d003af9":"We can see that the more strict is the cancellation policy, the higher the pirce. Therefore, we assign 'strict' with 3, assign 'moderate' with2, assign 'flexible' with 1. ","37dab765":"We don't want to drop the rest of the missing values because to some extent they contain information. For example, missing value of 'house_rules' indicate a probable tolorating host, which in this way has some indication for the house prices.","d4c86ea4":"# 2.5 Regression Plots","066f5063":"\u8fd9\u8fb9\u6211\u4e3b\u8981\u662f\u5199\u4e86Model 5\u7684\u6570\u636evisualization\u548c data transformation. \u65b9\u6cd5\u5176\u5b9e\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u5f88\u591a\u53ef\u4ee5\u76f4\u63a5\u7528\u3002\u66f4\u591a\u53c2\u89c1\u4f5c\u4e1a\u8bfe\u4ee3\u7801","b0bd9faf":"We can see that prices are weakly linear correlated with the rest of the parameters","e43aa187":"# features Transformation and Standardization\n\u4e4b\u540e\u518d\u5f04\u4e86","9e4214ff":"# 1.Data Cleaning","bbf9fac8":"We can roughly see that on average\n1. higher the scores, the higher the price.\n2. more houses a host list, higher the price. This is may because more houses a host list, it is more likely that the host is experienced and knows the trick of the Airbnb trade. \n3. the more private rooms a host have, the lower the price.\n","f031adf5":"# 2.2Feature Engineeriong: Data transormation ","a7a80c6e":"1.2 process price column","47096627":"Filling the missingness:","cd242ed4":"For Model 5, there are 11 parameters remaining in the model:\\\nreview_scores_checkin,                          \nreview_scores_location,                         \nreview_scores_value,                             \nreview_scores_accuracy,                         \nreview_scores_communication,                     \nreview_scores_cleanliness,   \nreviews_per_month ,\ninstant_bookable,\ncancellation_policy,\ncalculated_host_listings_count,\ncalculated_host_listings_count_private_rooms\n\n\nMost of them are numerical parameters. We only have to transform 'cancellation_policy', which is a categorical parameter.","8d48475c":"\u6211\u8fd9\u8fb9\u53ea\u505a\u4e86Model5\u7684EDA, \u4f60\u53ef\u4ee5\u7c7b\u4f3c\u7684\u628a\u4f60\u7684\u53d8\u91cf\u653e\u8fdb[ ]\u5185\uff0c\u53d8\u91cf\u540d\u6539\u6210modelx_train.","e7e00896":"hi,\u6211\u8fd9\u4e2a\u662f\u516c\u5171\u7248\u7684EDA,\u4f60\u53ef\u4ee5\u628a\u7528\u6765\u6e05\u7406\u6570\u636e\u7684\u4ee3\u7801\u590d\u5236\u5230\u6211\u8fd9\u8fb9\uff0c\u5982\u679c\u548c\u6211\u7684\u5904\u7406\u65b9\u6cd5\u4e00\u6837\uff0c\u5c31\u5728[  ] \u91cc\u52a0\u5165\u4f60\u60f3\u5904\u7406\u7684parameter\u5c31\u884c\u3002"}}