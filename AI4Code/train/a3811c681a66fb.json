{"cell_type":{"224f23df":"code","14d2f693":"code","3012a138":"code","e3234039":"code","ebe8727c":"code","e54b0045":"code","ce7f874f":"code","c45da491":"code","c6016cb5":"code","10e74136":"code","4e46d2ff":"code","a6b960ea":"code","6be1e3af":"code","f1682fec":"code","a59b9223":"code","20f254da":"code","c5d477c8":"code","d407ebd3":"code","92fe1df3":"code","81d753be":"code","ff0a6d6d":"code","4324fdbb":"code","d6f7b4f9":"code","e982d33f":"code","0d321931":"code","d20f359e":"code","e649e882":"code","ef04b4d4":"code","9bbb5950":"code","c573c4b6":"code","5ad8dcb1":"code","ea603cf5":"code","bdb0d71f":"code","3805a79c":"code","26be70d5":"code","85706f39":"code","8d666b2e":"code","5459de23":"code","cc66d818":"code","d7812898":"code","f9fb81b8":"markdown","d2aa0002":"markdown","452e950a":"markdown","25e63af0":"markdown","27eb6a30":"markdown","a2cb7116":"markdown"},"source":{"224f23df":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","14d2f693":"data=pd.read_csv('\/kaggle\/input\/daily-temperature-of-major-cities\/city_temperature.csv')","3012a138":"data.drop(columns='State', inplace=True)","e3234039":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport plotly.graph_objects as go\nimport plotly.express as px\npd.set_option('display.max_rows', None)\nfrom plotly.subplots import make_subplots\nimport seaborn as sns\nimport datetime","ebe8727c":"data.shape","e54b0045":"data['Year']=data['Year'].astype('str')","ce7f874f":"# 8 rows with day=0\ndata=data.loc[data.Day!=0]","c45da491":"data.shape","c6016cb5":"def counting(year):\n    c= len(year)\n    if c<4:\n        return 0\n    else:\n        return year","10e74136":"data['Year']=data.Year.apply(counting)\n","4e46d2ff":"#440 rows with year= 202\ndata = data.loc[data.Year!=0]","a6b960ea":"data.shape","6be1e3af":"data.head()","f1682fec":"data=data.loc[data.AvgTemperature!=-99]","a59b9223":"data.head()","20f254da":"data['Year']=data.Year.astype('int64')","c5d477c8":"data_1995=data.loc[data.Year==1995]\n","d407ebd3":"data_1995.head()","92fe1df3":"year1995=data_1995.groupby(['Year','Region','Country']).agg(Mean_temp=('AvgTemperature','mean'),Mean_std=('AvgTemperature','std'))","81d753be":"year1995.reset_index(inplace=True)","ff0a6d6d":"year1995.head()","4324fdbb":"fig = px.choropleth(year1995, locations=year1995['Country'],\n                    color=year1995['Mean_temp'],locationmode='country names', \n                    hover_name=year1995['Country'], \n                    color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark', )\nfig.update_layout(\n    title='Temperature in 1995',\n)\nfig.show()","d6f7b4f9":"year2019=data.loc[data.Year==2019]","e982d33f":"year2019=year2019.groupby(['Year','Region','Country']).agg(Mean_temp=('AvgTemperature','mean'),Mean_std=('AvgTemperature','std'))","0d321931":"year2019.reset_index(inplace=True)","d20f359e":"year2019.head()","e649e882":"fig = px.choropleth(year2019, locations=year2019['Country'],\n                   color=year2019['Mean_temp'], locationmode='country names',\n                   hover_name=year2019['Country'],\n                   color_continuous_scale=px.colors.sequential.Tealgrn,template='plotly_dark')\nfig.update_layout(\n    title='Temperature in 2019',\n)\nfig.show()","ef04b4d4":"data.head()","9bbb5950":"polu=data.loc[(data.Country=='China') | (data.Country=='US') | (data.Country=='India') | (data.Country=='Russia') | (data.Country=='Japan') &(data.Year!=2020)]","c573c4b6":"polu=polu.loc[polu.Year!=2020]","5ad8dcb1":"polu2=polu.groupby(['Year','Country']).agg(Mean_temp=('AvgTemperature','mean'),Mean_std=('AvgTemperature','std'))","ea603cf5":"polu2.head(10)","bdb0d71f":"polu2.reset_index(inplace=True)","3805a79c":"polu2.head(10)","26be70d5":"fig=px.bar(polu2, x='Country', y='Mean_temp', error_y='Mean_std',animation_frame='Year', animation_group='Country', hover_name='Country', range_y=[0,100])\nfig.show()","85706f39":"polu_1=polu.loc[polu.Month==1]","8d666b2e":"polu_m=polu_1.groupby(['Year','Country','Month']).agg(Mean_temp=('AvgTemperature','mean'), Std_temp=('AvgTemperature','std'))","5459de23":"polu_m.reset_index(inplace=True)","cc66d818":"polu_m.head()","d7812898":"fig=px.bar(polu_m, x='Country', y='Mean_temp', error_y='Std_temp', animation_frame='Year', animation_group='Country', hover_name='Country', range_y=[0,90])\nfig.show()","f9fb81b8":"    This is my second analysis with real data. I hope you like it. The variation of 2 for temperature is an important fact, since we expect this variation in 100 years and not for 24 years.\n     I could not fine a standard for the 5 countries I analyzed. The std contains some high values wich might be produced by the variety of locations that temperature may have been measured.","d2aa0002":"time data 2008-3-**0** doesn't match format specified","452e950a":"## Graphic for the top 5 most polluting countries (China, EUA, India, Russia, Japan)","25e63af0":"### Analyzing the variation for the same month between the years of these countries month = January (1)","27eb6a30":"time data **201**-12-3 doesn't match format specified\n","a2cb7116":"## Mean of temperature by city"}}