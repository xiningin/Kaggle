{"cell_type":{"316e218a":"code","15b2cb64":"code","8288b04b":"code","02d8576c":"code","18100e9f":"code","6e3c4a7d":"code","644d8d45":"code","2d0f11a0":"code","5f0a4eb5":"code","0e860de6":"code","a9b7e221":"code","2cf6271e":"code","4f80b20c":"code","ac973771":"code","f251a08b":"code","732fec38":"code","0fa66b33":"code","d7d46f31":"code","3048d1e1":"code","3e47cdc5":"code","87981f20":"code","112019a2":"code","4c392b4a":"code","404c3eef":"code","021b2b59":"code","2458d37a":"code","3b729029":"code","14741e29":"code","e2acb59c":"code","ac56496c":"markdown","77662fb3":"markdown","688fa09b":"markdown","2b0ccc0c":"markdown","5b6aaf97":"markdown","5c0a2d4b":"markdown","844f993d":"markdown","3c8e736e":"markdown","294d6468":"markdown","5bebf708":"markdown","bf331ee0":"markdown","2fdb30dc":"markdown","7130ff81":"markdown","02cb4763":"markdown","f643714b":"markdown","b8579a57":"markdown","ffb2824d":"markdown","7675021b":"markdown","ae0f4f80":"markdown","f9042e47":"markdown","bd49bb75":"markdown","445ca63e":"markdown","72bcc45f":"markdown","ae174836":"markdown","39f85323":"markdown","4c4f0922":"markdown"},"source":{"316e218a":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport plotly.figure_factory as ff","15b2cb64":"dataset = pd.read_csv('marks.csv')\ndataset.head()","8288b04b":"dataset.describe()","02d8576c":"def find_category_column(dataset):\n  for (columnName, columnData) in dataset.iteritems():\n    if(columnData.dtype == object):\n      print('Column Name : ', columnName)\n      if(len(columnData) > 40):\n        print('Column length : ', len(columnData.unique()))\n        print('Column Contents : ', columnData.unique())\n      else:\n        print('Column Contents : More Than 40 different objects')\n\nfind_category_column(dataset)   ","18100e9f":"dataset.shape","6e3c4a7d":"#PRINT THE COMPLETE INFORMATION OF THE DATASET.....\nprint(\"Print a Summary of a Dataframe is :\",dataset.info())","644d8d45":"# Removing id column\ndataset.drop('Unnamed: 0', axis=1, inplace=True)","2d0f11a0":"def find_missing_values(dataset):\n  col_dict = dict(dataset.isna().mean())\n  for columnName, missingPersentage in col_dict.items():\n      print(f'Column {columnName} has {round(missingPersentage,2)*100}% values missing')\n\n\nfind_missing_values(dataset)","5f0a4eb5":"dataset.dropna(axis=0, inplace=True)\nfind_missing_values(dataset)","0e860de6":"# To visualize the outliers, we can simply plot the box plot of the respective column\nfrom plotly.subplots import make_subplots\nfig = make_subplots(rows=1, cols=3,\n    subplot_titles=(\"Math score\", \"Reading score\",\"Writing score\"))\nfig.add_trace(\n    go.Box(y=dataset['math score']),\n    row=1, col=1\n)\nfig.add_trace(\n    go.Box(y=dataset['reading score']),\n    row=1, col=2\n)\nfig.add_trace(\n    go.Box(y=dataset['writing score']),\n    row=1, col=3\n)\nfig.update_layout(showlegend=False)\nfig.show()","a9b7e221":"# Finding the quartiles\ndef find_quartiles(column):\n  IQR = column.quantile(0.75) - column.quantile(0.25)\n  lower_limit = column.quantile(0.25) - (IQR * 1.5)\n  upper_limit = column.quantile(0.75) + (IQR * 1.5) \n  print(f\"Column has lower limit of {round(lower_limit,2)} and upper limt of {round(upper_limit,2)}\")\n  upper_limit_count = column[column > upper_limit].shape[0]\n  lower_limit_count = column[column < lower_limit].shape[0]\n  total_count = dataset.shape[0]\n  print(f\"There are {round((upper_limit_count\/total_count) * 100,2)}% values above Upper limit and {round((lower_limit_count\/total_count) * 100,2)}% valuse below Lower limit\")   \n  return round(lower_limit,2), round(upper_limit,2)  \n","2cf6271e":"find_quartiles(dataset['math score'])\nfind_quartiles(dataset['reading score'])\nfind_quartiles(dataset['writing score'])","4f80b20c":"lower_limit,upper_limit = find_quartiles(dataset['math score'])\ndataset[\"math score\"] = np.where(dataset[\"math score\"] > upper_limit, upper_limit, np.where(dataset[\"math score\"] < lower_limit, lower_limit, dataset[\"math score\"]))","ac973771":"lower_limit,upper_limit = find_quartiles(dataset['reading score'])\ndataset[\"reading score\"] = np.where(dataset[\"reading score\"] > upper_limit, upper_limit, np.where(dataset[\"reading score\"] < lower_limit, lower_limit, dataset[\"reading score\"]))","f251a08b":"lower_limit,upper_limit = find_quartiles(dataset['writing score'])\ndataset[\"writing score\"] = np.where(dataset[\"writing score\"] > upper_limit, upper_limit, np.where(dataset[\"writing score\"] < lower_limit, lower_limit, dataset[\"writing score\"]))","732fec38":"# To visualize the outliers, we can simply plot the box plot of the respective column\nfrom plotly.subplots import make_subplots\nfig = make_subplots(rows=1, cols=3,\n    subplot_titles=(\"Math score\", \"Reading score\",\"Writing score\"))\nfig.add_trace(\n    go.Box(y=dataset['math score']),\n    row=1, col=1\n)\nfig.add_trace(\n    go.Box(y=dataset['reading score']),\n    row=1, col=2\n)\nfig.add_trace(\n    go.Box(y=dataset['writing score']),\n    row=1, col=3\n)\nfig.update_layout(showlegend=False)\nfig.show()","0fa66b33":"import plotly.figure_factory as ff\nfig = make_subplots(\n    rows=1, cols=3,\n)\nfig.add_trace(go.Histogram(x=dataset['math score'], name='Math Score'),\n               row=1, col=1)\n\nfig.add_trace(go.Histogram(x=dataset['reading score'], name='Reading Score'),\n              row=1, col=2)\n\nfig.add_trace(go.Histogram(x=dataset['writing score'], name='Writing Score'),\n              row=1, col=3)\n\n\nfig.update_xaxes(title_text=\"math score\", row=1, col=1)\nfig.update_xaxes(title_text=\"reading score\", row=1, col=2)\nfig.update_xaxes(title_text=\"writing score\", row=1, col=3)\n\n\nfig.update_yaxes(title_text=\"count\", row=1, col=1)\nfig.update_yaxes(title_text=\"count\", row=1, col=2)\nfig.update_yaxes(title_text=\"count\", row=1, col=3)\n\n\nfig.show()","d7d46f31":"temp = pd.get_dummies(dataset['gender'])\ntemp.head()","3048d1e1":"dataset = dataset.join(temp)\ndataset.drop('gender', axis=1, inplace=True)\ndataset.head()","3e47cdc5":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\nle.fit(dataset['race\/ethnicity'])\ndataset['encoded_race\/ethnicity'] = le.transform(dataset['race\/ethnicity'])\ndataset.drop('race\/ethnicity', axis=1, inplace=True)\ndataset.reset_index()\ndataset.head()","87981f20":"le = LabelEncoder()\nle.fit(dataset['parental level of education'])\ndataset['encoded_parental level of education'] = le.transform(dataset['parental level of education'])\ndataset.drop('parental level of education', axis=1, inplace=True)\ndataset.reset_index()\ndataset.head()","112019a2":"temp = pd.get_dummies(dataset['lunch'])\ndataset = dataset.join(temp)\ndataset.drop('lunch', axis=1, inplace=True)\ndataset.head()","4c392b4a":"temp = pd.get_dummies(dataset['test preparation course'])\ndataset = dataset.join(temp)\ndataset.drop('test preparation course', axis=1, inplace=True)\ndataset.head()","404c3eef":"import matplotlib.pyplot as plt\nfrom seaborn.matrix import heatmap\nplt.figure(figsize=(17,9))\nheatmap(dataset.corr(), cmap='Blues', annot=True)\nplt.title('Correlation Matrix')","021b2b59":"dataset['total score'] = dataset['math score'] + dataset['reading score'] + dataset['writing score']\ndataset.head()","2458d37a":"total_bins = [0, 90, 120, 150, 180, 240, 300]\nprint(total_bins)","3b729029":"bin_labels = ['F', 'E', 'D', 'C', 'B', 'A']","14741e29":"total_bins = [0, 90, 120, 150, 180, 240, 300]\nbin_labels = ['F', 'E', 'D', 'C', 'B', 'A']\ndataset['Grade'] = pd.cut(x=dataset['total score'],bins=total_bins, labels=bin_labels, include_lowest=True)\ndataset.head()","e2acb59c":"fig = px.histogram(dataset, x='Grade')\nfig.show()","ac56496c":"### Tushar Tirkey\n","77662fb3":"### Test preparation course (One-Hot Encoding)","688fa09b":"There are 9 column and 1000 rows in the Dataset","2b0ccc0c":"### Gender (One-Hot Encoding)","5b6aaf97":"The process of converting continuous numeric values into discrete intervals is called discretization\nor binning.","5c0a2d4b":"### Topic - Student Performance In Exam","844f993d":"Observations -\n\n1) Math Score, Reading Score and Writing Score column data has outliers\n\n2) Both column have outlier only above lower limit\n\n3) In Math Score column only 0.83% data is above outlier\n\n4) In Reading Score column have 0.62% data is ablove outlier\n\n5) In Writing Score column have 0.52% data is ablove outlier","3c8e736e":"### Complete Case Analysis","294d6468":"## Finding missing value","5bebf708":"### Race\/ethnicity (Label Encoding)","bf331ee0":"## Encoding Categorical Data","2fdb30dc":"It is the most basic technique for handling missing data. In CCA, we simply remove all the rows or records where any column or field contains a missing value.","7130ff81":"### 1.2 Data Loading","02cb4763":"Outlier Handling -\n\nWe will use outlier capping for handling the outliers in all three column","f643714b":"### 1.1 Libraries And Utilities ","b8579a57":"## Equal Width Discretization","ffb2824d":"### Lunch (One-Hot Encoding)","7675021b":"Note - In the above dataset, there are only 4% missing Lunch values. We can directly drop missing valued data without statistical techniques because the percentage is under 5% and it is called Complete Case Analysis\n\n","ae0f4f80":"As we can see that out of all column, only values of lunch is missing.\n\nHow can we deal with blanks in our data?\n\nTo handle missing numerical data, statistical techniques can be used. The use of statistical techniques or algorithms to replace missing values with statistically generated values is called imputation.","f9042e47":"In the dataset we have 5 categorical column - \n\n\n\n*   Gender\n*   race\/ethnicity\t\n*   parental level of education\t\n*   lunch\n*   test preparation course\n\nFor encoding categorical column we will use two method \n\n\n\n*   One-Hot Encoding\n*   Label Encoding\n\n","bd49bb75":"## Fearure Selection","445ca63e":"## Outlier Handling","72bcc45f":"### Outlier capping Math Score","ae174836":"An outlier is an observation that lies an abnormal distance from other values in a random sample from a population.\n\nThe Columns that possibly possess outlier are the continuous numeric column\n\n\n* Math Score\n* Writing Score\n* Reading Score","39f85323":"In this project, we use NumPy and pandas for data handling and Matplotlib and Plotly for data visualization.","4c4f0922":"### Parental level of education (Label Encoding)"}}