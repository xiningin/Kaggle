{"cell_type":{"9c5b4bdd":"code","5225ba5e":"code","e253952e":"code","be5c7615":"code","c658ff84":"code","8a67232d":"code","cab3ce9d":"code","b315e479":"code","846f8617":"code","7b2b834f":"code","530114fc":"code","b1f36692":"code","c19ded04":"code","fbdf66c4":"code","e2141ef1":"code","e90fb74c":"code","4c5c0c3b":"code","54d1414c":"code","c4ea0672":"code","2bfb7a87":"code","91f96020":"code","4335926f":"code","9db1aadf":"code","02a56d8a":"markdown","2ebb57b3":"markdown","6fb3601f":"markdown","6096c42a":"markdown","952e8b7d":"markdown","7f3a5422":"markdown","9c4864ce":"markdown","c7d374ba":"markdown","400f9ece":"markdown"},"source":{"9c5b4bdd":"import warnings\nwarnings.simplefilter('ignore')\nimport pandas as pd\nimport numpy as np\n\nfrom collections import Counter\n\nfrom pandas import DataFrame, Series\nfrom IPython.display import display\npd.set_option(\"display.max_columns\", 200)\n\nimport itertools\n\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\n%matplotlib inline\n\nimport seaborn as sns\nsns.set(style='white')","5225ba5e":"TRAIN_PATH = '\/kaggle\/input\/data-science-winter-osaka2\/train.csv'\nTEST_PATH = '\/kaggle\/input\/data-science-winter-osaka2\/test.csv'\n\ndf_train = pd.read_csv(TRAIN_PATH, index_col=0)\ndf_test = pd.read_csv(TEST_PATH, index_col=0)","e253952e":"df_train.head(3)","be5c7615":"df_train.info()","c658ff84":"# \u4ee5\u4e0b\u3001'popular_tags' \u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\n\ndf_train.popular_tags[105]\n# \uff11\u3064\u306e\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3044\u308b","8a67232d":"# list\u95a2\u6570\uff1a\u30ea\u30b9\u30c8\u5316\u5931\u6557\u3000\u3010 \u00d7 \u3011\ntags = list(df_train.popular_tags[105])\ntags","cab3ce9d":"# split()\u30e1\u30bd\u30c3\u30c9\uff1a\u30ea\u30b9\u30c8\u5316\u5931\u6557\u3000\u3010 \u00d7 \u3011\ntags = df_train.popular_tags[105].split(',')\ntags","b315e479":"# eval\u95a2\u6570\uff1a\u30ea\u30b9\u30c8\u5316\u6210\u529f\u3000\u3010 \u3007 \u3011\ntags = eval(df_train.popular_tags[105])\ntags","846f8617":"# ast\u30e1\u30bd\u30c3\u30c9\uff1a\u30ea\u30b9\u30c8\u5316\u6210\u529f\u3000\u3010 \u3007 \u3011\nimport ast\ntags = ast.literal_eval(df_train.popular_tags[105])\ntags","7b2b834f":"X_train = df_train.copy()\nX_test = df_test.copy()","530114fc":"# \u95a2\u6570\u304c\u4f7f\u3048\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u7a7a\u6b04\u3092\u524a\u9664\u3057\u3001\u5b57\u4f53\u3092\u5927\u6587\u5b57\u306b\u7d71\u4e00\nX_train.popular_tags = X_train.popular_tags.str.upper()\nX_train = X_train.dropna(subset=['popular_tags'])\n\nX_test.popular_tags = X_test.popular_tags.str.upper()\nX_test = X_test.dropna(subset=['popular_tags'])","b1f36692":"# \u5143\u30c7\u30fc\u30bf\u306e\u8aa4\u308a\u4fee\u6b63\nX_train.popular_tags = X_train.popular_tags.str.replace('+','')\nX_train.popular_tags = X_train.popular_tags.str.replace('-','')\nX_train.popular_tags = X_train.popular_tags.str.replace('PERSON','')\nX_train.popular_tags = X_train.popular_tags.str.replace('BASED','')\nX_train.popular_tags = X_train.popular_tags.str.replace('FIRST','FIRST-PERSON')\nX_train.popular_tags = X_train.popular_tags.str.replace('THIRD','THIRD-PERSON')\nX_train.popular_tags = X_train.popular_tags.str.replace('TEAM','TEAM-BASED')","c19ded04":"# \u4eca\u56de\u306f\u3001eval()\u95a2\u6570\u3092\u4f7f\u7528\ntags = []\n\nfor tag in range(len(X_train.index)):\n    tags_ = eval(X_train.popular_tags[tag]) # \u5168\u30c7\u30fc\u30bf\u3092 eval\u95a2\u6570\u3067\u51e6\u7406\n    tags.extend(tags_)\n\ntags","fbdf66c4":"# popular_tags \u306e\u983b\u51fa\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncounted = Counter(w for w in tags) # Counter\u4f7f\u7528\ncounted_ = counted.most_common(21) # \u4e0a\u4f4d20\u307e\u3067\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\ncounted_ # \u4e2d\u306f\u3001tuple","e2141ef1":"# DataFrame\u5316\nX_popular_tags = pd.DataFrame(counted_, columns = ['popular_tags','count'])\nX_popular_tags = X_popular_tags.drop(index=4) # ''\u3092\u524a\u9664\nX_popular_tags.head(20)","e90fb74c":"g = sns.barplot(x='count',y='popular_tags',data=X_popular_tags,orient='h')","4c5c0c3b":"X_train['indie_tag'] = X_train['popular_tags'].str.contains('INDIE')\nX_test['indie_tag'] = X_test['popular_tags'].str.contains('INDIE')","54d1414c":"X_train[['popular_tags','indie_tag']].head(3)","c4ea0672":"X_test[['popular_tags','indie_tag']].head(3)","2bfb7a87":"#  categories\u3001ast.\u4f7f\u7528\nX_train.categories = X_train.categories.str.upper()\nX_test.categories = X_test.categories.str.upper()\n\ncats = []\nfor cat in range(len(X_train.index)):\n    cats_ = ast.literal_eval(X_train.categories[cat])\n    cats.extend(cats_)\n\ncounted = Counter(w for w in cats)\ncounted_ = counted.most_common(21)\n\nX_categories = pd.DataFrame(counted_, columns = ['categories','count'])\nX_categories = X_categories.drop(index=9)\nX_categories.head(20)\n","91f96020":"g = sns.barplot(x='count',y='categories',data=X_categories,orient='h')","4335926f":"# steam \u30ab\u30a6\u30f3\u30c8\nX_train['category_steam'] = 0\nX_train['category_steam'] = X_train['categories'].str.count('STEAM')\n\nX_train['category_steam'].hist(bins=6)","9db1aadf":"rev_stm = X_train.groupby('category_steam')['user_reviews'].value_counts().unstack()\nrev_stm","02a56d8a":"## 4. Feature engineering","2ebb57b3":"\u4eca\u56de\u3001'popular_tags' \u3068 'categories' \u306e\uff12\u3064\u306e\u7279\u5fb4\u91cf\u306f\u3001\u30ea\u30b9\u30c8\u304c\u6587\u5b57\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u51e6\u7406\u306b\u6238\u60d1\u3063\u3066\u3044\u308b\u65b9\u3082\u304a\u3089\u308c\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002(baseline \u3067\u306f\u51e6\u7406\u6e08\uff09  \n\u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u306f\u3001list()\u95a2\u6570\u3001split()\u30e1\u30bd\u30c3\u30c9\u3001eavl()\u95a2\u6570\u3001ast\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u30464\u3064\u306e\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002  \n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u4eca\u56de\u306f\u5f8c\u8005\uff12\u3064\u306e\u3069\u3061\u3089\u304b\u3092\u4f7f\u3048\u3070\u3001\u6587\u5b57\u5217\u3092\u30ea\u30b9\u30c8\u5316\u3067\u304d\u3001\u30ea\u30b9\u30c8\u5185\u306b\u3042\u308b\u8981\u7d20\u304c\u53d6\u308a\u51fa\u305b\u3066\u3001\u6b21\u306e\u7279\u5fb4\u91cf\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u306b\u9032\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002","6fb3601f":"eval() \u304b ast. \u3092\u4f7f\u3048\u3070\u3001\u30ea\u30b9\u30c8\u5185\u306e\u8981\u7d20\u304c\u500b\u5225\u306b\u53d6\u308a\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","6096c42a":"## 3.Data preprocess","952e8b7d":"## 1. Importing libraries and loading datasets","7f3a5422":"\uff11\u4f8b\u3068\u3057\u3066\u3001  \n'popular_tags' \u306b 'INDIE' \u3092\u542b\u3093\u3067\u3044\u308c\u3070\u3001\uff11\u306e\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002","9c4864ce":"## 2. Basic data\/function check","c7d374ba":"\u3010\u307e\u3068\u3081\u3011  \n\u4ee5\u4e0a\u3001'popular_tags' \u3068 'categories' \u306e\uff12\u3064\u306e\u7279\u5fb4\u91cf\u306b\u3064\u3044\u3066\u3001\u8981\u7d20\u306e\u62bd\u51fa\u306e\u3084\u308a\u65b9\u3068\u3001\u4f7f\u3044\u65b9\u306e\uff11\u4f8b\u3092\u793a\u3057\u307e\u3057\u305f\u3002 \n\u30b9\u30b3\u30a2\u30a2\u30c3\u30d7\u306f\u3001\u4f7f\u3044\u65b9\u6b21\u7b2c\u3060\u3068\u601d\u3044\u307e\u3059\u3002  \n\u203b 'categories' \u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306e\u30b3\u30fc\u30c9\u3067\u51e6\u7406\u53ef\u80fd\u3067\u3059\u3002\uff08\u4ee5\u4e0b\uff09","400f9ece":"**<font color=\"blue\">Categorical variables<\/font>**"}}