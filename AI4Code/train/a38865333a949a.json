{"cell_type":{"5eee815f":"code","3e170091":"code","57458b3d":"code","f88bbd05":"code","ee6407b8":"code","89ad8c0a":"code","25ecbbd1":"code","b1455ab0":"code","bb57c7d1":"code","ec9e7abd":"code","3807dc93":"code","7dc9c522":"code","ae815c8d":"code","30472ec4":"code","d2486c3b":"code","b8c4201d":"code","da4c5e10":"code","a7f6f6c6":"code","9bd75e01":"code","2ad6a1d2":"code","2fcd84c7":"code","4f4e55f6":"code","cf064de8":"code","d3f5a7ff":"code","5170e126":"code","525d3e51":"code","465f64f0":"code","332d4dee":"code","6598b10c":"code","b3dff892":"code","9ad5fd18":"code","e1b347ff":"code","164f06ee":"code","4f141562":"code","9d71adf8":"code","b20a7a2f":"code","bdec8674":"code","45a65553":"code","05421ac1":"code","8af00660":"code","12922d56":"code","24b69491":"code","ecf9693a":"code","aa97e1c5":"code","d8dfc934":"code","5b070e7e":"code","b03e009e":"code","359381ac":"code","a76a3df5":"code","93e05d40":"code","96074686":"code","813d2c2a":"code","e0e76c27":"code","44a9386b":"code","67c7ae7f":"code","784f7ddc":"code","785a12e0":"code","7d779070":"code","2057dbca":"code","0b9d6413":"code","a50c7642":"code","b8795b11":"code","e5cca32d":"code","33721b45":"code","33cc2c2b":"code","f111f166":"code","85a8e541":"code","3f54b343":"code","169e488d":"code","1a24da74":"code","a6795632":"code","dfa4e775":"code","17480f28":"code","1a94e443":"code","4f3fdf69":"code","9a0ec62b":"code","0ef8a57f":"code","a921295d":"code","2a464784":"code","f974236b":"code","26c77855":"code","4d016fb2":"code","041da736":"code","32964f02":"code","6553f578":"code","787877e5":"code","de4cb2fa":"code","1a00813b":"markdown","8f2b7027":"markdown","7977f5e8":"markdown","b3f8355f":"markdown","0f03a44e":"markdown","885fab40":"markdown","cc1913f5":"markdown","8c3c7424":"markdown","9cda993a":"markdown","6aada9eb":"markdown","e86d0e0d":"markdown","c6f3ac61":"markdown","a0fe59c0":"markdown","3aa4c438":"markdown","803db96d":"markdown","8a21f0e0":"markdown","51e8eeec":"markdown","e54218ef":"markdown","ae6a2bb4":"markdown","a551c433":"markdown","e555c48f":"markdown","9ed65ad2":"markdown","e095af56":"markdown","2183ccc0":"markdown","fb8e236d":"markdown","1588899f":"markdown","79eb038a":"markdown","b8dc3932":"markdown","05b696ee":"markdown","d2f80747":"markdown","df45598a":"markdown","5002c2cb":"markdown","fc3bb395":"markdown","4a5d39da":"markdown","10cb1e30":"markdown","6fa0f1ea":"markdown","3e8f34b6":"markdown","59a9f2b5":"markdown","6bd1d27d":"markdown","956efb35":"markdown","beb8d9ff":"markdown","9481c963":"markdown","c95e2ec2":"markdown","8816519e":"markdown","563a7902":"markdown","e7f88e28":"markdown","252a270a":"markdown","e4a31485":"markdown","70843305":"markdown","b8fa933d":"markdown","51cf5641":"markdown","79c626a1":"markdown","ec748fda":"markdown","ad82e50a":"markdown","09585578":"markdown","9ba0bfed":"markdown","c0cc77d1":"markdown","1fe318fe":"markdown","f6252d14":"markdown","6ea06b24":"markdown","69484831":"markdown","b94525a9":"markdown","68c84853":"markdown","54791591":"markdown","4ef7db54":"markdown","3214318a":"markdown","1fd85ebb":"markdown","98e786d5":"markdown","fb0b0082":"markdown","d8560a0b":"markdown","04dd4824":"markdown","452f369f":"markdown","573fee9c":"markdown","600bf859":"markdown","a2463ba5":"markdown","8c42e608":"markdown","920343c4":"markdown","c5a21233":"markdown","8be968ab":"markdown","7106ccfc":"markdown","cd4b8e6c":"markdown","8d79b43f":"markdown","b7bd3842":"markdown","20c10d83":"markdown","08e056ca":"markdown","53512003":"markdown","0172917a":"markdown","de05f243":"markdown","e390b676":"markdown","caef0c36":"markdown","bfcf563e":"markdown","67e1be22":"markdown","b45ff694":"markdown","5939af08":"markdown","9fa8946c":"markdown","1116c76e":"markdown","5fba9b1b":"markdown","5d219e9f":"markdown","f90e5ca6":"markdown","b81c7640":"markdown","66368e46":"markdown","a7714d7f":"markdown","f709bfa2":"markdown","29dc8a40":"markdown","68a85359":"markdown","b035f1c5":"markdown","2fd9a4e1":"markdown","a46bc8ef":"markdown","7cef14bc":"markdown","9b711622":"markdown","3a0d4ee8":"markdown","f39b2baa":"markdown","4b20fb99":"markdown","1acce6d8":"markdown","08fe9aec":"markdown","88b7e721":"markdown","12ddc421":"markdown","69cc85de":"markdown","5d819de8":"markdown","d230e055":"markdown","19d48b84":"markdown"},"source":{"5eee815f":"import numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n","3e170091":"from IPython.display import HTML\nHTML(\"\"\"\n<style>\nh1,h2,h3 {\n\tmargin: 1em 0 0.5em 0;\n\tfont-weight: 600;\n\tfont-family: 'Titillium Web', sans-serif;\n\tposition: relative;  \n\tfont-size: 36px;\n\tline-height: 40px;\n\tpadding: 15px 15px 15px 2.5%;\n\tcolor: #13003A;\n\tbox-shadow: \n\t\tinset 0 0 0 1px rgba(53,86,129, 1), \n\t\tinset 0 0 5px rgba(53,86,129, 1),\n\t\tinset -285px 0 35px white;\n\tborder-radius: 0 10px 0 15px;\n\tbackground: #fff\n    \n}\n<\/style>\n\"\"\")\n","57458b3d":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.express as px\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, plot, iplot\nfrom plotly import tools\nfrom warnings import filterwarnings\nfilterwarnings('ignore')","f88bbd05":"deliveries_data = pd.read_csv('\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Ball-by-Ball 2008-2020.csv')\nmatch_data = pd.read_csv('\/kaggle\/input\/ipl-complete-dataset-20082020\/IPL Matches 2008-2020.csv')\nprint(\"Data ready for exploration\")","ee6407b8":"match_data.head()","89ad8c0a":"deliveries_data.head()","25ecbbd1":"match_data.isnull().sum()","b1455ab0":"match_data.shape","bb57c7d1":"match_data.columns","ec9e7abd":"print('Total Matches Played:',match_data.shape[0])\nprint(' \\n Venues Played At:',match_data['city'].unique())     \nprint(' \\n Teams :',match_data['team1'].unique())","3807dc93":"match_data['Season'] = pd.DatetimeIndex(match_data['date']).year\nmatch_data.head()","7dc9c522":"match_per_season=match_data.groupby(['Season'])['id'].count().reset_index().rename(columns={'id':'matches'})\nmatch_per_season.style.background_gradient(cmap='PuBu')","ae815c8d":"colors = ['turquoise',] * 13\ncolors[5] = 'crimson'\n\nfig=px.bar(data_frame=match_per_season,x=match_per_season.Season,y=match_per_season.matches,labels=dict(x=\"Season\",y=\"Count\"),)\nfig.update_layout(title=\"Number of matches played in different seasons \",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","30472ec4":"season_data=match_data[['id','Season']].merge(deliveries_data, left_on = 'id', right_on = 'id', how = 'left').drop('id', axis = 1)\nseason_data.head()","d2486c3b":"season=season_data.groupby(['Season'])['total_runs'].sum().reset_index()\np=season.set_index('Season')\nfig = px.line(p, x=p.index, y=\"total_runs\")\nfig.update_layout(title=\"Total Runs Across the Seasons \",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.show()","b8c4201d":"runs_per_season=pd.concat([match_per_season,season.iloc[:,1]],axis=1)\nruns_per_season['Runs scored per match']=runs_per_season['total_runs']\/runs_per_season['matches']\nruns_per_season.set_index('Season',inplace=True)\nruns_per_season.style.background_gradient(cmap='PuBu',subset=['Runs scored per match'])","da4c5e10":"fig = px.line(runs_per_season, x=runs_per_season.index, y=\"Runs scored per match\")\nfig.update_layout(title=\"Runs scored per match across seasons\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.show()\n","a7f6f6c6":"ump=pd.concat([match_data['umpire1'],match_data['umpire2']])\nump=ump.value_counts()\numps=ump.to_frame().reset_index()\nump.head(10)","9bd75e01":"match_data['toss_winner'].value_counts()","2ad6a1d2":"toss=match_data['toss_winner'].value_counts()\ncolors = ['turquoise',] * 15\ncolors[0] = 'crimson'\nfig=px.bar( y=toss,x=toss.index,labels=dict(x=\"Season\",y=\"Count\"),)\nfig.update_layout(title=\"No. of tosses won by each team\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","2fcd84c7":"temp_series = match_data.toss_decision.value_counts()\nlabels = (np.array(temp_series.index))\nvalues = (np.array((temp_series \/ temp_series.sum())*100))\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='label+percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Toss decision percentage\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","4f4e55f6":"fig=px.histogram(data_frame=match_data,x='Season',color='toss_decision',color_discrete_sequence=colors,barmode='group')\nfig.update_layout(title=\"Toss decision in different seasons\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1)\nfig.show()","cf064de8":"match_data['toss_win_game_win'] = np.where((match_data.toss_winner == match_data.winner),'Yes','No')\nmatch_data.head()","d3f5a7ff":"labels =[\"Yes\",'No']\nvalues = match_data['toss_win_game_win'].value_counts()\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,\n                             values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='label+percent', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Winning toss implies winning macthes?\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","5170e126":"match_data['result'].value_counts()","525d3e51":"winning_teams = match_data[['Season','winner']]\n\n#dictionaries to get winners to each season\nwinners_team = {}\nfor i in sorted(winning_teams.Season.unique()):\n    winners_team[i] = winning_teams[winning_teams.Season == i]['winner'].tail(1).values[0]\n    \nwinners_of_IPL = pd.Series(winners_team)\nwinners_of_IPL = pd.DataFrame(winners_of_IPL, columns=['team'])","465f64f0":"winners_of_IPL.value_counts().index","332d4dee":"colors = ['turquoise',] * 6\ncolors[0] = 'crimson'\nfig=px.bar( y=winners_of_IPL['team'].value_counts(),x=winners_of_IPL['team'].value_counts().index,labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Winners of IPL\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","6598b10c":"matches_played_byteams=pd.concat([match_data['team1'],match_data['team2']],axis=1)\nteams=(matches_played_byteams['team1'].value_counts()+matches_played_byteams['team2'].value_counts()).reset_index()\nteams.columns=['Team Name','Total Matches played']\nteams.sort_values(by=['Total Matches played'],ascending=False).reset_index().drop('index',axis=1).style.background_gradient(cmap='PuBu')","b3dff892":"wins=pd.DataFrame(match_data['winner'].value_counts()).reset_index()\nwins.columns=['Team Name','Wins']\nwins.style.background_gradient(cmap='PuBu')","9ad5fd18":"played=teams.merge(wins,left_on='Team Name',right_on='Team Name',how='inner')\nplayed['% Win']=(played['Wins']\/played['Total Matches played'])*100\nplayed.sort_values(by=['% Win'],ascending=False).reset_index().drop('index',axis=1).style.background_gradient(cmap='PuBu',subset=['% Win'])","e1b347ff":"colors = ['turquoise',] * 15\ncolors[8] = 'crimson'\nfig=px.bar(x=played['Team Name'],y=played['Total Matches played'],labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Total number of matches played\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","164f06ee":"colors = ['turquoise',] * 15\ncolors[8] = 'crimson'\nfig=px.bar(x=played['Team Name'],y=played['Wins'],labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Total Win by teams\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","4f141562":"colors = ['turquoise',] * 15\ncolors[-4] = 'crimson'\nfig=px.bar(x=played['Team Name'],y=played['% Win'],labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Win % by teams\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","9d71adf8":"def lucky(match_data,team_name):\n    return match_data[match_data['winner']==team_name]['venue'].value_counts().nlargest(10)","b20a7a2f":"mi=lucky(match_data,'Mumbai Indians')\nvalues = mi\nlabels=mi.index\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Wins at different Venues for MI:\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","bdec8674":"rcb=lucky(match_data,'Royal Challengers Bangalore')\nvalues = rcb\nlabels=rcb.index\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Wins at different Venues for RCB:\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","45a65553":"csk=lucky(match_data,'Chennai Super Kings')\nvalues = csk\nlabels=csk.index\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Wins at different Venues for CSK:\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","05421ac1":"csk=lucky(match_data,'Kolkata Knight Riders')\nvalues = csk\nlabels=csk.index\ncolors = ['turquoise', 'crimson']\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Wins at different Venues for KKR:\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","8af00660":"def comparison(team1,team2):\n    compare=match_data[((match_data['team1']==team1)|(match_data['team2']==team1))&((match_data['team1']==team2)|(match_data['team2']==team2))]\n    fig=px.histogram(data_frame=compare,x='Season',color='winner',labels=dict(x=\"Team Name\",y=\"Count\"),barmode='group',nbins=16,color_discrete_sequence=colors,)\n    fig.update_layout(title=\"Team Comparision:\",\n                      titlefont={'size': 26},template='simple_white'     \n                      )\n    fig.update_traces(marker_line_color='black',\n                      marker_line_width=2.5, opacity=1)\n    fig.show()\n    ","12922d56":"comparison('Mumbai Indians','Chennai Super Kings')","24b69491":"comparison('Sunrisers Hyderabad','Royal Challengers Bangalore')","ecf9693a":"filt=(deliveries_data['batsman']=='V Kohli')\ndf_kohli=deliveries_data[filt]\ndf_kohli.head()","aa97e1c5":"values = df_kohli['dismissal_kind'].value_counts()\nlabels=df_kohli['dismissal_kind'].value_counts().index\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='label', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Dismissal Type\",\n                  titlefont={'size': 30},\n                  )\nfig.show()","d8dfc934":"len(df_kohli[df_kohli['batsman_runs']==4])","5b070e7e":"len(df_kohli[df_kohli['batsman_runs']==6])","b03e009e":"df_kohli['total_runs'].sum()","359381ac":"def count(df_kohli,runs):\n    return len(df_kohli[df_kohli['batsman_runs']==runs])*runs","a76a3df5":"print(\"Runs scored from 1's :\",count(df_kohli,1))\nprint(\"Runs scored from 2's :\",count(df_kohli,2))\nprint(\"Runs scored from 3's :\",count(df_kohli,3))\nprint(\"Runs scored from 4's :\",count(df_kohli,4))\nprint(\"Runs scored from 6's :\",count(df_kohli,6))","93e05d40":"values=[1919,692,39,2016,1212]\nlabels=[1,2,3,4,6]\nfig = go.Figure(data=[go.Pie(labels=labels,values=values,hole=.3)])\nfig.update_traces(hoverinfo='label+percent', textinfo='label+value', textfont_size=20,\n                  marker=dict(colors=colors, line=dict(color='#000000', width=3)))\nfig.update_layout(title=\"Virat Kohli total runs contribution\",\n                  titlefont={'size': 30},\n                  )\nfig.show()\n","96074686":"runs=deliveries_data.groupby(['id','inning','batting_team'])[['total_runs']].sum().reset_index()\nruns.drop('id',axis=1,inplace=True)\nruns.head()","813d2c2a":"inning1=runs[runs['inning']==1]\ninning2=runs[runs['inning']==2]","e0e76c27":"fig = px.box(y='total_runs',x='batting_team',data_frame=inning1,color='batting_team')\n\nfig.update_layout(title=\"Batting First\",\n                  titlefont={'size': 26},template='simple_white'\n                  )\nfig.show()","44a9386b":"fig = px.box(y='total_runs',x='batting_team',data_frame=inning2,color='batting_team')\n\nfig.update_layout(title=\"Batting Second\",\n                  titlefont={'size': 26},template='simple_white'\n                  )\nfig.show()","67c7ae7f":"high_scores=deliveries_data.groupby(['id', 'inning','batting_team','bowling_team'])['total_runs'].sum().reset_index() \nscore_200=high_scores[high_scores['total_runs']>=200]\nscore_200.head(5)","784f7ddc":"x1=score_200['batting_team'].value_counts()\nx1=pd.DataFrame(x1)\nx1.style.background_gradient(cmap='PuBu')","785a12e0":"colors = ['turquoise',] * 11\ncolors[0] = 'crimson'\nfig=px.bar(x=x1.index,y=x1['batting_team'],labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Total count of 200+ by batting team\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","7d779070":"z=score_200['bowling_team'].value_counts()\nz=pd.DataFrame(z)\nz.style.background_gradient(cmap='PuBu')\n\n","2057dbca":"colors = ['turquoise',] * 13\ncolors[0] = 'crimson'\nfig=px.bar(x=z.index,y=z['bowling_team'],labels=dict(x=\"Team Name\",y=\"Count\"),)\nfig.update_layout(title=\"Total count of 200+ conceded by bowling team\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","0b9d6413":"high_200=deliveries_data.groupby(['id', 'inning','batting_team','bowling_team'])['total_runs'].sum().reset_index()\nhigh_200.set_index(['id'],inplace=True)","a50c7642":"high_200['total_runs'].max()","b8795b11":"match_data[match_data['result_margin']==match_data['result_margin'].max()]","e5cca32d":"balls_played=deliveries_data.groupby(['batsman'])['ball'].count().reset_index()\nballs_played.sort_values(by='ball',ascending=False).head(10).style.background_gradient(cmap='PuBu')\n","33721b45":"runs=deliveries_data.groupby(['batsman'])['batsman_runs'].sum().reset_index()\nruns.columns=['Batsman','runs']\ny=runs.sort_values(by='runs',ascending=False).head(10).reset_index().drop('index',axis=1)\ny.style.background_gradient(cmap='PuBu')","33cc2c2b":"colors = ['turquoise',] * 13\ncolors[0] = 'crimson'\nfig=px.bar(x=y['Batsman'],y=y['runs'],labels=dict(x=\"Player\",y=\"Total Runs\"),)\nfig.update_layout(title=\"Top 10 leading run-scrorer\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","f111f166":"balls_played=balls_played.merge(runs,left_on='batsman',right_on='Batsman',how='outer')\nfour=deliveries_data[deliveries_data['batsman_runs']==4]\nruns_4=four.groupby('batsman')['batsman_runs'].count().reset_index()\nruns_4.columns=['Batsman','4s']\nruns_4.sort_values(by='4s',ascending=False).head(10).reset_index().drop('index',axis=1).style.background_gradient(cmap='PuBu')","85a8e541":"six=deliveries_data.groupby('batsman')['batsman_runs'].agg(lambda x: (x==6).sum()).reset_index()\nsix.columns=['Batsman','6s']\nsix.sort_values(by='6s',ascending=False).head(10).reset_index().drop('index',axis=1).style.background_gradient(cmap='PuBu')","3f54b343":"player=pd.concat([runs,balls_played.iloc[:,1],runs_4.iloc[:,1],six.iloc[:,1]],axis=1)\nplayer['strike_rate']=player['runs']\/player['ball']*100\nplayer['4s'].fillna(0,inplace=True)\nplayer.isnull().values.any()","169e488d":"player.sort_values(by='strike_rate',ascending=False).head(10)","1a24da74":"sr=player[player.ball > 100]\nsr.sort_values(by='strike_rate',ascending=False).head(10)\n","a6795632":"reqsr=sr.drop(columns=['runs','ball','4s','6s'],axis=1)\nreqsr.sort_values(by='strike_rate',ascending=False).head(10).style.background_gradient(cmap='PuBu')","dfa4e775":"deliveries_data['dismissal_kind'].unique()\ndismissal_kinds = ['caught', 'bowled', 'lbw', 'caught and bowled',\n       'stumped', 'hit wicket']\nhwt=deliveries_data[deliveries_data[\"dismissal_kind\"].isin(dismissal_kinds)]\nbo=hwt['bowler'].value_counts()","17480f28":"colors = ['turquoise',] * 13\ncolors[0] = 'crimson'\nfig=px.bar(x=bo[:10].index,y=bo[:10],labels=dict(x=\"Bowler\",y=\"Total Wickets\"),)\nfig.update_layout(title=\"Leading wicket-takers\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","1a94e443":"colors = ['turquoise',] * 13\ncolors[0] = 'crimson'\nfig=px.bar(x=match_data['venue'].value_counts()[:10].index,y=match_data['venue'].value_counts()[:10],labels=dict(x=\"Venue\",y=\"Match count\"),)\nfig.update_layout(title=\"Matches played at different stadiums\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n\n","4f3fdf69":"colors = ['turquoise',] * 11\ncolors[0] = 'crimson'\nfig=px.bar(x=match_data.player_of_match.value_counts()[:10].index,y=match_data.player_of_match.value_counts()[:10],labels=dict(x=\"Players\",y=\"Count\"),)\nfig.update_layout(title=\"Top 10 MOM awardee\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()","9a0ec62b":"data_4 = match_data['Season'].unique()\n\nfours_list = []\nfor var in data_4:\n    new_df = match_data[match_data['Season']==var]\n    total_fours = 0\n    for i in new_df['id'].values:\n        temp_df = deliveries_data[deliveries_data['id']==i]\n        fours = temp_df[temp_df['batsman_runs']==4]['batsman_runs'].count()\n        total_fours+=fours\n    fours_list.append(total_fours)\n    \n\ncolors = ['turquoise',] * 14\ncolors[5] = 'crimson'\nfig=px.bar(x=data_4, y=fours_list,labels=dict(x=\"Season\",y=\"Total Fours\"),)\nfig.update_layout(title=\"Total number of Fours in each season\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","0ef8a57f":"\ndata_6 = match_data['Season'].unique()\n\n# Getting total sixes from each season by check id from matches dataset in deliveries dataset.\nsixes_list = []\nfor var in data_6:\n    new_df = match_data[match_data['Season']==var]\n    total_sixes = 0\n    for i in new_df['id'].values:\n        temp_df = deliveries_data[deliveries_data['id']==i]\n        sixes = temp_df[temp_df['batsman_runs']==6]['batsman_runs'].count()\n        total_sixes+=sixes\n    sixes_list.append(total_sixes)\n    \ncolors = ['turquoise',] * 14\ncolors[-4] = 'crimson'\nfig=px.bar(x=data_4, y=sixes_list,labels=dict(x=\"Season\",y=\"Total Sixes\"),)\nfig.update_layout(title=\"Total number of Sixes in each season\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","a921295d":"runs4=np.dot(fours_list,4)\nruns6=np.dot(sixes_list,6)","2a464784":"k=runs4+runs6\nY=match_data['Season'].unique()\ncolors = ['turquoise',] * 14\ncolors[5] = 'crimson'\nfig=px.bar(x=Y,y=k,labels=dict(x=\"Season\",y=\"Total runs\"),)\nfig.update_layout(title=\"Total number of runs scored from boundaries in each season\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n\n","f974236b":"totruns=np.array(season['total_runs'])\nres=(k\/totruns)*100","26c77855":"res","4d016fb2":"colors = ['turquoise',] * 14\ncolors[10] = 'crimson'\nfig=px.bar(x=Y,y=res,labels=dict(x=\"Season\",y=\"Percentage\"),)\nfig.update_layout(title=\"Total contribution of runs from boundaries in each season\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","041da736":"team = deliveries_data['batting_team'].unique()\nteam_runs = []\nfor var in team:\n    temp_df = deliveries_data[deliveries_data['batting_team']==var]\n    temp_df = temp_df[temp_df['over'].isin([0,1,2,3,4,5])]\n    runs = temp_df['total_runs'].sum()\n    team_runs.append(runs)\nteam = pd.DataFrame(data=team_runs, index=team,columns=['Runs In First 6 Overs'])\n#team.sort_values('Runs In First 6 Overs', ascending=False, inplace=True)\nteam.index.name = 'Team'\n\ncolors = ['turquoise',] * 15\ncolors[6] = 'crimson'\nfig=px.bar(x=team.index,y=team['Runs In First 6 Overs'],labels=dict(x=\"Team Name\",y=\"Total runs\"),)\nfig.update_layout(title=\"Total runs scored by teams in thier first 6 overs\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","32964f02":"team1 = deliveries_data['batting_team'].unique()\nteam_runs1 = []\nfor var in team1:\n    temp_df = deliveries_data[deliveries_data['batting_team']==var]\n    temp_df = temp_df[temp_df['over'].isin([19,18,17,16])]\n    runs1 = temp_df['total_runs'].sum()\n    team_runs1.append(runs1)\nteam1 = pd.DataFrame(data=team_runs1, index=team1,columns=['Runs In Last 4 Overs'])\n# team.sort_values('Runs In First 6 Overs', ascending=False, inplace=True)\nteam1.index.name = 'Team'\ncolors = ['turquoise',] * 15\ncolors[6] = 'crimson'\nfig=px.bar(x=team1.index,y=team1['Runs In Last 4 Overs'],labels=dict(x=\"Team Name\",y=\"Total runs\"),)\nfig.update_layout(title=\"Total runs scored by teams in thier last 4 overs\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","6553f578":"played1=played.merge(team,left_on='Team Name',right_on='Team',how='inner')\nplayed3=played1.merge(team1,left_on='Team Name',right_on='Team',how='inner')\nmintoover=np.dot(played3['Total Matches played'],6)\nmintoover1=np.dot(played3['Total Matches played'],4)\nplayed3['RR in first 6 overs']=(played3['Runs In First 6 Overs']\/mintoover)\nplayed3['RR in last 4 overs']=(played3['Runs In Last 4 Overs']\/mintoover1)\nplayed3","787877e5":"colors = ['turquoise',] * 15\ncolors[4] = 'crimson'\nfig=px.bar(x=played3['Team Name'],y=played3['RR in first 6 overs'],labels=dict(x=\"Team Name\",y=\"Run Rate\"),)\nfig.update_layout(title=\"Run Rate in first 6 overs\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","de4cb2fa":"colors = ['turquoise',] * 15\ncolors[0] = 'crimson'\nfig=px.bar(x=played3['Team Name'],y=played3['RR in last 4 overs'],labels=dict(x=\"Team Name\",y=\"Run Rate\"),)\nfig.update_layout(title=\"Run Rate in last 4 overs\",\n                  titlefont={'size': 26},template='simple_white'     \n                  )\nfig.update_traces(marker_line_color='black',\n                  marker_line_width=2.5, opacity=1,marker_color=colors)\nfig.show()\n","1a00813b":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nIn season 2018, 59.49 % runs of the total runs came from boundaries while 50.88 % runs came from boundaries in season 2009 which is lowest till now.\n<\/p>\n<\/div>\n","8f2b7027":"<small><a href='#0'>Go to top<\/a><\/small>  ","7977f5e8":"<a id=\"7\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 7) Toss decision across seasons :<\/h1>\n\n","b3f8355f":"<a id=\"30\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">30) Total number of fours in each season :<\/h1>\n\n","0f03a44e":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccWe can see that <b>435 out of 816 matches was won by team batting second<\/b> while 364 matches was won by team batting first.\n<\/p>\n<\/div>\n\n","885fab40":"<small><a href='#0'>Go to top<\/a><\/small>  ","cc1913f5":"<a id=\"29\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">29) Man of the Match award :<\/h1>\n","8c3c7424":"<small><a href='#0'>Go to top<\/a><\/small>  ","9cda993a":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccMost of the times, teams decide to feild first except in season 2009,2010,2013 where teams decided to bat first mostly.<br>\nSince 2014, teams have overwhelmingly chosen to bat second. Especially since 2016, teams have chosen to field for more than 80% of the times except in season 2020.<br>\n<\/p>\n<\/div>","6aada9eb":"<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> Basic data exploration:<\/h1>\n","e86d0e0d":"<a id=\"24\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">24) Most number of 4's :<\/h1>\n","c6f3ac61":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nIn season 2017, Mumbai Indians had defeated Delhi Daredevils by a huge margin of 146 runs.\n<\/p>\n<\/div>\n","a0fe59c0":"<a id=\"25\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">25) Most number of 6's :<\/h1>\n","3aa4c438":"<a id=\"18\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">18) Scored 200+ runs :<\/h1>\n","803db96d":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nVirat Kohli is the leading run scorer in IPL.<br>\nOne interesting thing to notice that MS Dhoni is the only player in this list who bats down the order.\n<\/p>\n<\/div>","8a21f0e0":"<a id=\"21\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">21) Biggest win in terms of run margin :<\/h1>\n","51e8eeec":"<a id=\"1\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 1) Number of matches played in various seasons :<\/h1>\n","e54218ef":"<a id=\"10\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 10) Number of times team have won the tournament :<\/h1>","ae6a2bb4":"<a id=\"35\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">35) Total runs scored by teams in last 4 overs :<\/h1>\n\n","a551c433":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccEach season, almost 60 matches were played. However, we see a spike in the number of matches from 2011 to 2013. This is because two new franchises, the Pune Warriors and Kochi Tuskers Kerala, were introduced, increasing the number of teams to 10.<\/p>\n<\/div>","e555c48f":"<a id=\"6\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 6) Decision made after winning the toss :<\/h1>","9ed65ad2":"<small><a href='#0'>Go to top<\/a><\/small>  ","e095af56":"<small><a href='#0'>Go to top<\/a><\/small>  ","2183ccc0":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nGujarat Lions has the highest scoring run-rate in first 6 overs, followed by Rising Pune Supergiant.\n<\/p>\n<\/div>\n","fb8e236d":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nMumbai Indians is slight ahead of Chennai Super Kings in this heavy clash.<br>\nThe dominance was especially seen in the 2019 season, where Mumbai defeated Chennai 4 out of 4 times they met, including the playoff and final.\n<\/p>\n<\/div>","1588899f":"<a id=\"32\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">32) Total runs scored from boundaries in each season :<\/h1>\n","79eb038a":"<small><a href='#0'>Go to top<\/a><\/small>  ","b8dc3932":"<small><a href='#0'>Go to top<\/a><\/small>  ","05b696ee":"<small><a href='#0'>Go to top<\/a><\/small>  ","d2f80747":"<small><a href='#0'>Go to top<\/a><\/small>  ","df45598a":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc<b>Mumbai Indians<\/b> have won the most tosses, followed by Kolkata Knight Riders.\n<\/p>\n<\/div>","5002c2cb":"<a id=\"3\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 3) Runs scored per match across seasons :<\/h1>\n","fc3bb395":"<small><a href='#0'>Go to top<\/a><\/small>  ","4a5d39da":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n<b>Chennai Super Kings<\/b> has the highest scoring run-rate in last 4 overs, followed by Mumbai Indians.\n<\/p>\n<\/div>\n","10cb1e30":"<a id=\"20\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">20) Highest runs in an innings :<\/h1>\n\n","6fa0f1ea":"<a id=\"34\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">34) Total runs scored by teams in first 6 overs :<\/h1>\n\n","3e8f34b6":"<small><a href='#0'>Go to top<\/a><\/small>  ","59a9f2b5":"<a id=\"22\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">22) Most balls played by a batsman:<\/h1>\n","6bd1d27d":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nMumbai Indians had scored most runs in last 4 overs, followed by Royal Challengers Bangalore.\n<\/p>\n<\/div>","956efb35":"<small><a href='#0'>Go to top<\/a><\/small>  ","beb8d9ff":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nShikhar Dhawan holds the record for most number of 4's\n<\/p>\n<\/div>","9481c963":"<small><a href='#0'>Go to top<\/a><\/small>  ","c95e2ec2":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nHighest number of four in a season was is 2013 season while season 2009 had the lowest count of 4's.\n<\/p>\n<\/div>\n","8816519e":"<small><a href='#0'>Go to top<\/a><\/small>  ","563a7902":"<a id=\"31\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">31) Total number of sixes in each season :<\/h1>\n","e7f88e28":"<a id=\"36\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">36) Highest scoring run-rate in first 6 overs :<\/h1>\n\n","252a270a":"<small><a href='#0'>Go to top<\/a><\/small>  ","e4a31485":"<small><a href='#0'>Go to top<\/a><\/small>  ","70843305":"<small><a href='#0'>Go to top<\/a><\/small>  ","b8fa933d":"<small><a href='#0'>Go to top<\/a><\/small>  ","51cf5641":"<a id=\"9\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 9) Match win result:<\/h1>\n","79c626a1":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n<b>Mumbai Indians<\/b> had scored the  most runs in first 6 overs, followed by Kings XI Punjab.\n<\/p>\n<\/div>\n","ec748fda":"<a id=\"13\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 13) Win % by teams :<\/h1>\n","ad82e50a":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nAndre Russel has the highest strike rate, followed by K. Gowtham and B. Cutting.\n<\/p>\n<\/div>","09585578":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccAfter winning the toss, team tends to field first<br>\n<\/p>\n<\/div>","9ba0bfed":"<a id=\"14\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">14) Lucky Venues for a team :<\/h1>","c0cc77d1":"<a id=\"2\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 2) Total number of runs scored across seasons :<\/h1>\n","1fe318fe":"<small><a href='#0'>Go to top<\/a><\/small>  ","f6252d14":"<a id=\"12\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 12) Most number of wins :<\/h1>","6ea06b24":"<small><a href='#0'>Go to top<\/a><\/small>  ","69484831":"<a id=\"4\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black\"> 4) Count of matches by umpires :<\/h1>\n\n","b94525a9":"<small><a href='#0'>Go to top<\/a><\/small>  ","68c84853":"<small><a href='#0'>Go to top<\/a><\/small>  ","54791591":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nRoyal Challengers Bangalore had scored the most 200+ score (18 times), followed by Chennai Super Kings who had scored 17 times.\n<\/p>\n<\/div>\n","4ef7db54":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n<b>Mumbai Indians had won the IPL 5 times<\/b> while Chennai Super Kings had won it 3 times.\n<\/p>\n<\/div>","3214318a":"<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> Loading match and deliveries dataset:<\/h1>","1fd85ebb":"<\/div>\n<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc<b>Season 2013<\/b> was the highest scoring season (22,541 runs), followed by 2012 (22,453 runs)<br>\n<b>Season 2009<\/b> was the lowest scoring season (16,320 runs).<\/p>\n<\/div>","98e786d5":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nIn season 2018, the maximum number of sixes were hit while the lowest was observed in season 2009.\n<\/p>\n<\/div>","fb0b0082":"<a id=\"15\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">15) Comparision between two teams :<\/h1>\n\n","d8560a0b":"<a id=\"16\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">16) Particular batsman analysis :<\/h1>\n\n","04dd4824":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n\"The Universe Boss\" Chris Gayle had smashed 349 sixes, most by any batsman.\n<\/p>\n<\/div>","452f369f":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccIn <b>season 2018<\/b>, runs scored per match was 331.683333 which was highest among others.<br> \nIn <b>season 2009<\/b>, runs scored per match was 286.315789 which was lowest till now.<\/p> <\/div>","573fee9c":"<small><a href='#0'>Go to top<\/a><\/small>  ","600bf859":"<small><a href='#0'>Go to top<\/a><\/small>  ","a2463ba5":"<small><a href='#0'>Go to top<\/a><\/small>  ","8c42e608":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n<b>AB de Villiers<\/b> (23) had won the most MOM awards, followed by Chris Gayle (22)\n<\/p>\n<\/div>\n","920343c4":"<small><a href='#0'>Go to top<\/a><\/small>  ","c5a21233":"<a id=\"27\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">27) Highest wicket-taker :<\/h1>\n","8be968ab":"<a id=\"23\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">23) Top 10 run scorer of all time :<\/h1>\n","7106ccfc":"<a id=\"33\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">33) Total contribution of runs from boundaries in each season :<\/h1>\n","cd4b8e6c":"<small><a href='#0'>Go to top<\/a><\/small>  ","8d79b43f":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nMumbai Indians have played the most matches(203), followed by Royal Challengers Bangalore (195)\n<\/p>\n<\/div>","b7bd3842":"<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">Importing libraries:<\/h1>","20c10d83":"<small><a href='#0'>Go to top<\/a><\/small>  ","08e056ca":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nRising Pune Supergiants have the highest win % of 62.50, followed by Chennai Super kings and Mumbai Indians.<br> \nThis is largely due to the fact that they had played really few matches.\n<\/p>\n<\/div>\n","53512003":"<a id=\"5\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 5) Number of tosses won by teams :<\/h1>\n\n\n","0172917a":"![IPL-1.jpg](attachment:fa5c70b6-6219-4cb4-a6b0-cc49a4d98114.jpg)","de05f243":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nWe can observe that this one is a very tight clash, with most of the times both the teams winning one each.<br>\n   Sunrisers Hyderabad had an upper hand in 2016 and 2020\n<\/p>\n<\/div>","e390b676":"<a id=\"26\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">26) Highest Strike rate (minimum 100 balls):<\/h1>\n","caef0c36":"<small><a href='#0'>Go to top<\/a><\/small>  ","bfcf563e":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nIn season 2013, Royal Challengers Bangalore scored 263\/5 against Pune Warriors India.\n<\/p>\n<\/div>","67e1be22":"<small><a href='#0'>Go to top<\/a><\/small>  ","b45ff694":"<small><a href='#0'>Go to top<\/a><\/small>  ","5939af08":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nVirat kohli had played the most balls.<br> \nDavid Warner and Chris Gayle are the only two foreign players in this top 10 list.\n<\/p>\n<\/div>","9fa8946c":"<small><a href='#0'>Go to top<\/a><\/small>  ","1116c76e":"<small><a href='#0'>Go to top<\/a><\/small>  ","5fba9b1b":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n    Lets see some stats of highest run scorer of IPL : <b>Virat Kohli<\/b>\n<\/p>\n<\/div>","5d219e9f":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nEden Gardens has hosted most number of matches.\n<\/p>\n<\/div>\n","f90e5ca6":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nKings XI Punjab has conceded 200+ runs 20 times, followed by Royal Challengers Bangalore (17)\n<\/p>\n<\/div>","b81c7640":"<a id=\"17\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">17) Innings wise comparision :<\/h1>\n\n","66368e46":"<a id=\"28\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">28) Total count of matches played in differnt stadiums :<\/h1>\n\n","a7714d7f":"<br>\n<h1 style = \"font-size:40px; font-family:cursive ; font-weight : normal; color : #C70039; text-align: center; border-radius: 10px 100px;\">IPL Data Analysis and Visualization Project using\u00a0Python<\/h1>\n<br>\n\n","f709bfa2":"<a id=\"19\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">19) Conceded 200+ runs :<\/h1>\n","29dc8a40":"<a id=\"37\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\">37) Highest scoring rate in last 4 overs :<\/h1>","68a85359":"<small><a href='#0'>Go to top<\/a><\/small>  ","b035f1c5":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\n    Interesting fact is that <b>Virat Kohli<\/b> has scored more runs by taking singles than by hitting 6\n<\/p>\n<\/div>","2fd9a4e1":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nTotal run scored from boundaries is lowest in season 2009 and highest in season 2013.\n<\/p>\n<\/div>\n","a46bc8ef":"## **Thank You** ","7cef14bc":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nRoyal Challengers Bangalore and Mumbai Indians median value is better than other teams while batting first.<br>\nRoyal Challengers Bangalore had scored 250+ in a single match and is the only team to achieve that feat.\n<\/p>\n<\/div>\n\n","9b711622":"<small><a href='#0'>Go to top<\/a><\/small>  ","3a0d4ee8":"<a id=\"8\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 8)Winning toss implies winning game ?<\/h1>\n","f39b2baa":"<small><a href='#0'>Go to top<\/a><\/small>  ","4b20fb99":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc<b>S Ravi<\/b> has umpired in 121 matches, followed by Dharmasena who has umpired in 94 matches.\n<\/p>\n<\/div>","1acce6d8":"<p style = \"font-size:20px; font-weight : normal; color : #0331A8;\">Batting second :<\/p>\n\n\n","08fe9aec":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udcccThough winning toss gives you an advantage <b>but it doesn't significantly implies that winning the toss helps in winning the game.<\/b>\n<\/p>\n<\/div>","88b7e721":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nIt is easily evident that team have won the most of its matches at their home venues.\n<\/p>\n<\/div>\n\n","12ddc421":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nMumbai Indians had won the most matches(120), followed by Chennai Super Kings (106)\n<\/p>\n<\/div>\n","69cc85de":"<div class=\"alert alert-block alert-info\"><p style='color:black;'> \ud83d\udccc\nL. Malinga is the leading wicket taker in IPL.<br>\n6 out of top 10 are spin bowlers.\n<\/p>\n<\/div>","5d819de8":"<small><a href='#0'>Go to top<\/a><\/small>  ","d230e055":"<a id=\"11\">\n<h1 style = \"font-family: Snell Roundhand;font-weight: 500;font-size: 30px; font-style: normal; background-color: #FFFB30; color :black;\"> 11) Total number of matches played by a team :<\/h1>\n","19d48b84":"In this project, I have worked on IPL Data Analysis and Visualization using Python where I will explore interesting insights from the data of IPL matches with data from IPL seasons 2008\u20132020.\n\n## **Analysis covered in this project** :\n\n1. <a href='#1'> What was the count of matches played in each season?<\/a>\n \n2. <a href='#2'>How many runs were scored in each season?<\/a>\n \n3. <a href='#3'>What were the runs scored per match in different seasons? <\/a>\n \n4. <a href='#4'>Who has umpired the most?<\/a>\n \n5. <a href='#5'>Which team has won the most tosses?<\/a>\n \n6. <a href='#6'>What does the team decide after winning the toss?<\/a>\n \n7. <a href='#7'>How toss decision varies across seasons?<\/a>\n \n8. <a href='#8'>Does winning the toss implies winning the game?<\/a>\n \n9. <a href='#9'>How many times chasing team has won the match?<\/a>\n \n10. <a href='#10'>Which all teams had won this tournament?<\/a>\n \n11. <a href='#11'>Which team has played the most number of matches?<\/a>\n \n12. <a href='#12'>Which team has won the most number of times?<\/a>\n \n13. <a href='#13'>Which team has the highest winning percentage?<\/a>\n \n14. <a href='#14'>Is there any lucky venue for a particular team?<\/a>\n \n15. <a href='#15'>Comparison between two teams<\/a>\n \n16. <a href='#16'>Particular Batsmen analysis<\/a>\n \n17. <a href='#17'>Innings wise comparison between teams<\/a>\n \n18. <a href='#18'>Which team has scored the most number of 200+ scores?<\/a>\n \n19. <a href='#19'>Which team has conceded 200+ scores the most?<\/a>\n \n20. <a href='#20'>What was the highest run scored by a team in a single match?<\/a>\n \n21. <a href='#21'>Which is the biggest win in terms of run margin?<\/a>\n \n22. <a href='#22'>Which batsmen have played the most number of balls?<\/a>\n \n23. <a href='#23'>Who are the leading run-scorers of all time?<\/a>\n \n24. <a href='#24'>Who has hit the most number of 4's?<\/a>\n \n25. <a href='#25'>Who has hit the most number of 6's?<\/a>\n \n26. <a href='#26'>Who has the highest strike rate?<\/a>\n \n27. <a href='#27'>Who is the leading wicket-taker?<\/a>\n \n28. <a href='#28'>Which stadium has hosted the most number of matches?<\/a>\n \n29. <a href='#29'>Who has won the most MOM awards?<\/a>\n \n30. <a href='#30'>What is the count of fours hit in each season?<\/a>\n \n31. <a href='#31'>What is the count of sixes hit in each season?<\/a>\n \n32. <a href='#32'>What is the count of runs scored from boundaries in each season?<\/a>\n \n33. <a href='#33'>What is the run contribution from boundaries in each season?<\/a>\n \n34. <a href='#34'>Which team has scored the most runs in the first 6 overs?<\/a>\n \n35. <a href='#35'>Which team has scored the most runs in the last 4 overs?<\/a>\n \n36. <a href='#36'>Which team has the best scoring run-rate in the first 6 overs?<\/a>\n \n37. <a href='#37'>Which team has the best scoring run-rate in the last 4 overs?<\/a>\n \n"}}