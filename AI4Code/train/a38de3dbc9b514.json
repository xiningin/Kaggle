{"cell_type":{"4723fbee":"code","cf1a525d":"code","ee8f9155":"code","7b1d6d7b":"code","a226c179":"code","424641a0":"code","7a8251f2":"code","66da9b30":"code","a74e6715":"code","79a2e09f":"code","5f2d7391":"code","0009aa0a":"code","2c62ad1f":"code","f7104cde":"code","ad012550":"code","f41a42c4":"code","215303c2":"code","34b53b89":"code","c44e25e6":"code","85a7b70c":"code","bad8d8a9":"code","763ab51e":"code","5edea8ab":"code","931d654c":"code","aae58e86":"code","9dd84f6f":"code","af05651a":"code","ea6f6a43":"code","8494b777":"code","bcdda430":"code","51c8c110":"code","ed0000bd":"code","5dec06c1":"code","ee9859ab":"markdown","a7ed0e3d":"markdown","4294b025":"markdown","8f69f296":"markdown","1790a830":"markdown","6411bb50":"markdown","8ac20653":"markdown","168cdab8":"markdown","f4a50e96":"markdown","25f34ba0":"markdown","aea4744e":"markdown","40549c32":"markdown","b79524eb":"markdown","9ab41278":"markdown","7fa234a3":"markdown","c8a75aa4":"markdown","4aba1059":"markdown","69662a10":"markdown","18aff98c":"markdown","d7d093b9":"markdown","05885205":"markdown","17546020":"markdown","d7368a15":"markdown"},"source":{"4723fbee":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","cf1a525d":"# visualization\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n# machine learning\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC, LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom xgboost import XGBClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout\nfrom keras.wrappers.scikit_learn import KerasClassifier","ee8f9155":"data=pd.read_csv('\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')","7b1d6d7b":"data","a226c179":"data.describe()","424641a0":"data.info()","7a8251f2":"data.drop('id',axis=1,inplace=True)","66da9b30":"data","a74e6715":"#Correlation:  Its the most basic way to find degree of relation between any two quantities.\ncorr = data.corr()\n\nplt.figure(figsize=(15,15))\n\nsns.heatmap(corr,vmax=0.9,square=True)\nplt.show()","79a2e09f":"data[\"bmi\"].fillna(data[\"bmi\"].median(), inplace = True)","5f2d7391":"data.info()","0009aa0a":"#Correlation:  Its the most basic way to find degree of relation between any two quantities.\ncorr = data.corr()\n\nplt.figure(figsize=(15,15))\n\nsns.heatmap(corr,vmax=0.9,square=True)\nplt.show()","2c62ad1f":"sns.pairplot(data)","f7104cde":"data.corr()[\"stroke\"]","ad012550":"data[data['stroke']==1]['stroke'].count","f41a42c4":"sns.pointplot(x='stroke', y= 'age', data=data)\n\n","215303c2":"sns.pointplot(x='stroke', y= 'avg_glucose_level', data=data)\n\n","34b53b89":"sns.pointplot(x='stroke', y= 'bmi', data=data)","c44e25e6":"encoder=LabelEncoder()\ndata[\"Residence_type\"]=encoder.fit_transform(data[\"Residence_type\"])\ndata[\"smoking_status\"]=encoder.fit_transform(data[\"smoking_status\"])\ndata[\"work_type\"]=encoder.fit_transform(data[\"work_type\"])\ndata[\"gender\"]=encoder.fit_transform(data[\"gender\"])\ndata[\"ever_married\"]=encoder.fit_transform(data[\"ever_married\"])\n\n\n","85a7b70c":"scaler=StandardScaler()\ndata['age']=scaler.fit_transform(np.array(data['age']).reshape(-1,1))\ndata['avg_glucose_level']=scaler.fit_transform(np.array(data['avg_glucose_level']).reshape(-1,1))\ndata['bmi']=scaler.fit_transform(np.array(data['bmi']).reshape(-1,1))","bad8d8a9":"data","763ab51e":"data.corr()[\"stroke\"]","5edea8ab":"from sklearn.model_selection import train_test_split                \nX=data.drop('stroke',axis=1,inplace=False)\ny=data['stroke']\nX_train,X_test,Y_train,Y_test = train_test_split(X,y,test_size=.2)\n","931d654c":"from sklearn.linear_model import LogisticRegression\nmodel_logistic = LogisticRegression()\nmodel_logistic.fit(X_train,Y_train)\n\naccuracy=accuracy_score(Y_test,model_logistic.predict(X_test))\nprint(accuracy)","aae58e86":"X_=data.drop(['stroke','bmi','smoking_status'],axis=1,inplace=False)\ny_=data['stroke']\nX_train_,X_test_,Y_train_,Y_test_ = train_test_split(X_,y_,test_size=.2)\nX_train_","9dd84f6f":"model_logistic_ = LogisticRegression()\nmodel_logistic_.fit(X_train_,Y_train_)\n\naccuracy_=accuracy_score(Y_test,model_logistic_.predict(X_test_))\nprint(accuracy)","af05651a":"model = Sequential()\nmodel.add(Dense(32, input_dim=10, activation='relu',kernel_initializer='glorot_uniform'))\nmodel.add(Dense(16,activation='relu',kernel_initializer='glorot_uniform'))\nmodel.add(Dense(8,activation='relu',kernel_initializer='glorot_uniform'))\nmodel.add(Dense(1, activation='sigmoid'))\n# Compile model\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","ea6f6a43":"history=model.fit(X, y,validation_split=0.33, epochs=20, batch_size=5)","8494b777":"plt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.legend(['train', 'test'], loc='upper left')","bcdda430":"model_ = Sequential()\nmodel_.add(Dense(32, input_dim=10, activation='relu',kernel_initializer='glorot_uniform',))\nmodel_.add(Dropout(0.2))\nmodel_.add(Dense(16,activation='relu',kernel_initializer='glorot_uniform'))\nmodel_.add(Dropout(0.2))\nmodel_.add(Dense(8,activation='relu',kernel_initializer='glorot_uniform'))\nmodel_.add(Dropout(0.2))\nmodel_.add(Dense(1, activation='sigmoid'))\n# Compile model\nmodel_.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])","51c8c110":"history_=model_.fit(X, y,validation_split=0.33, epochs=10, batch_size=5)","ed0000bd":"plt.plot(history_.history['accuracy'])\nplt.plot(history_.history['val_accuracy'])\nplt.legend(['train', 'test'], loc='upper left')","5dec06c1":"data[data['stroke']==1]['stroke'].count","ee9859ab":"As we said, young people have less chances of having stroke","a7ed0e3d":"I dont why but before doing that I want to find correlation matrix","4294b025":"Lets do some prediction now","8f69f296":"Kind of surprise that BMI has very less correlation with stroke and heart disease","1790a830":"****","6411bb50":"lets find correlation again","8ac20653":"**This is another classification task. we have to predict the stroke cases from the given data points (both health and personal life related)\nThis notebook primarily shows basic EDA and its interpretation\nDataset is quite unbalanced thus models feels overfitted.**","168cdab8":"Good results with basic logistic too.\nLets drop the bmi column now and see","f4a50e96":"It is very clear that id will not contribution anything to analysis and prediction.","25f34ba0":"Low glucose levels implies less risk of stroke","aea4744e":"Lets see what neural network predicts","40549c32":"OK!. So now Smoking have less correlation with stroke too. Nice. Married status matters though. This dataset really indicates to be young, smoke, remain bachelor, and its okay to have a unhealthy bmi too. ","b79524eb":"We have 249 people in our data who had stroke","9ab41278":"Well, as we can see bmi and smoking_status doesnt affects model performance.\nEating whatever you like and smoking may keep your brain ok i guess.","7fa234a3":"Lets do some preprocessing","c8a75aa4":"Well the data seems quite unbalanced too. That could be one of the reason for such behaviour","4aba1059":"Similarly low bmi implies less chances of stroke too","69662a10":"Its very tempting to remove bmi but lets wait ","18aff98c":"Well it seems neural network is performing too well.\nLets introduce dropout and reduce the number of epochs","d7d093b9":"One basic conclusion which we can draw here is that young people are have less chances of getting stroke, have healthier bmi,less avg glucose level, fewer cases of hearth diseases and less hypertension too (kinda obvious).\n\nBut but but..... still not able to digest less correlation of bmi.","05885205":"Cant help, data is too simple for a neural network.","17546020":"Lets fill the null values in BMI again and see what happens","d7368a15":"We know that there are some null values in BMI. So lets fix that first"}}