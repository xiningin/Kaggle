{"cell_type":{"fbc0b3f3":"code","29ee4bb1":"code","a48aab51":"code","f15577e5":"code","9da5bcee":"code","90872520":"code","8f0624b8":"code","aa426a62":"code","3ddab942":"code","159f218f":"code","695cacc6":"code","c404affd":"code","33430beb":"code","b681b735":"code","0335d938":"code","4ecce92e":"code","696cd218":"code","cb6160f9":"code","dfa1a528":"code","17629b40":"code","a31dea45":"code","bb4cbe38":"code","d1bd6e01":"code","b22cd0cf":"code","f13350c1":"markdown","76d1be79":"markdown","7ba676ae":"markdown","83650a76":"markdown","3377f6f1":"markdown","06531d89":"markdown","7d9f62d2":"markdown","b5d22d99":"markdown","39abdb11":"markdown","de8f8862":"markdown","704dcb84":"markdown","c739a78d":"markdown","0d3a8def":"markdown","8e38eacc":"markdown","a16da43f":"markdown","a47cfa9f":"markdown","9c79c127":"markdown","233e5c83":"markdown","54e4329d":"markdown","1de06b29":"markdown","162b1aa1":"markdown","fb8ececf":"markdown","9f3f3b8b":"markdown","78dc2084":"markdown"},"source":{"fbc0b3f3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session\n\n## For plotting data\nfrom IPython.display import Image\nimport os","29ee4bb1":"# Loading the data\ndf = pd.read_csv('\/kaggle\/input\/acea-water-prediction\/Aquifer_Auser.csv')","a48aab51":"df.head()","f15577e5":"Image(\"\/kaggle\/input\/images\/Capture.PNG\")","9da5bcee":"df.columns","90872520":"df[\"Date\"] = pd.to_datetime(df[\"Date\"])\ndf[\"Day\"] = df[\"Date\"].dt.day\ndf[\"Month\"] = df[\"Date\"].dt.month\ndf[\"Year\"] = df[\"Date\"].dt.year","8f0624b8":"rain_feat = [col for col in df.columns if col.startswith(\"Rain\")]\nrain_feat.append(\"Day\")\nrain_feat.append(\"Month\")\nrain_feat.append(\"Year\")\nrain_feat.append(\"Date\")\ndf_rain = df[rain_feat]","aa426a62":"df_rain.head()","3ddab942":"df_rain.isnull().sum() \/ len(df_rain)","159f218f":"import matplotlib.pyplot as plt\nimport seaborn as sns\nrain_feat_only = [col for col in df.columns if col.startswith(\"Rain\")]\nfor col in rain_feat_only:\n    plt.figure(figsize=(30,5), dpi=300)\n    sns.lineplot(df_rain[\"Date\"], df_rain[col])\n    plt.title(col)","695cacc6":"df.head(1)","c404affd":"df.tail(1)","33430beb":"null = []\nfor col in rain_feat_only:\n    df_null = df_rain[df_rain[col].isna()]\n    null.append(df_null.groupby('Year').count()[\"Date\"].to_dict())\n    ","b681b735":"#Convert it to a df\nnull_df = pd.DataFrame(null, index=rain_feat_only)","0335d938":"# We will need to reindex it\nnull_df = null_df.reindex(sorted(null_df.columns), axis=1)","4ecce92e":"null_df","696cd218":"temp_feat = [col for col in df.columns if col.startswith(\"Temp\")]\ntemp_feat.append(\"Day\")\ntemp_feat.append(\"Month\")\ntemp_feat.append(\"Year\")\ntemp_feat.append(\"Date\")\ndf_temp = df[temp_feat]","cb6160f9":"df_temp.head()","dfa1a528":"df_temp.isnull().sum() \/ len(df_temp)","17629b40":"temp_feat_only = [col for col in df.columns if col.startswith(\"Temp\")]\nfor col in temp_feat_only:\n    plt.figure(figsize=(30,5), dpi=300)\n    sns.lineplot(df_temp[\"Date\"], df_temp[col])\n    plt.title(col)","a31dea45":"depth_feat = [col for col in df.columns if col.startswith(\"Depth\")]\ndepth_feat.append(\"Day\")\ndepth_feat.append(\"Month\")\ndepth_feat.append(\"Year\")\ndepth_feat.append(\"Date\")\ndf_depth = df[depth_feat]","bb4cbe38":"df_depth.head()","d1bd6e01":"df_depth.isnull().sum() \/ len(df_depth)","b22cd0cf":"depth_feat_only = [col for col in df.columns if col.startswith(\"Depth\")]\nfor col in depth_feat_only:\n    plt.figure(figsize=(30,5), dpi=300)\n    sns.lineplot(df_depth[\"Date\"], df_depth[col])\n    plt.title(col)","f13350c1":"## Temperature data\n\nNow that we are done with rainfall data, let us move to tempretaure data and make some exploration.","76d1be79":"Any missing values? (hope no!!)","7ba676ae":"I will add also our **TO DO LIST** or our list of hints. \n\n* Consider only data from 2010 (since we will do the same thing with rainfall).\n* Look for a way to replace missing data for Moriano, Make use of seasonality.","83650a76":"I will add also our **TO DO LIST** or our list of hints. \n\n* Consider only data from 2010.\n* Look for a way to replace missing data in 2012. Hints: seasonality or proximity. (If you refer to the map above, Monte Serra is clode to Orentano or Pontetetto).\n* Do not forget to add an additional feature to flag that rainfall in Monte_Serra is missing.","3377f6f1":"How much missing values?","06531d89":"## Depth to groundwater\n\nNow we come to our target variables. Let so do the same analysis before moving to some more avanced stuff.","7d9f62d2":"Let us have a first look at this data.","b5d22d99":"It seems that also for the target variable there are some missing values (I hope that they are in the period before 2010)","39abdb11":"Two conclusions for this section:\n\n* Raifall data for the period starting from 1998 to 2005 is not available for all the regions. This could be maybe explained by the fact that the meteo stations were built before 2005.\n\n* There are some missing values for 2009 and 2012 for the two regions \"Piaggione\" and \"Monte_Serra\" respectively. We might notice that for Piaggione, the measurements started in 2010","de8f8862":"Good news, no missing data (but outliers are looking to us!!).Let plot these temperature data.","704dcb84":"Data show good seasonality which expected. It is true that we did not find missing values and data does not represent some evident outliers bu we need to notice that for the third graph it seems that a number of missing values were replaced by zeros (which is not good for our model :D).","c739a78d":"## In the next notebook:\n\nI will do some feature engineering to come up with additional features and also some feature selection to select the most convenient ones. See you in the next notebook.","0d3a8def":"#### The main objective of this notebook is to perform a detailed EDA and have some insights about data for Auser Aquifier. The EDA of the other data is covered in seperate Notebooks.####","8e38eacc":"## Rainfall data\n\nMissing data is my ultimate nightmare. I see that for some features there is a big number of missing values. Instead of deaming with them in a batch, I will do it for each class of parameters: Rainfall, Depth, etc. Let us isolate these features in a seperate dataframe but before I need to transform parse dates.","a16da43f":"We notice some good seasonality of the depth (which is expected if we take in consideration rainfall and consumption). We need also to explain these peaks in the data as on the second or the forst graph.","a47cfa9f":"The table has mainly data related to 5 classes of parameters: Rainfall, Dapth to Groundwater, Temperature, Volume, Hydrometry. Among these we would like to determine Depth to Groundwater (the target feature).\n\nIn a first step, we will focus on data about rainfall. This data is about the rain falling in different locations in Italy. It is always a good habit to look for these locations on map. I tried my best to show all these on a single picture.\n","9c79c127":"We can strangely that the first two features and the last four ones have exactly the same ratio of missing data. We need to check if this happend on the same dates. Let us make use of a plot! (do not forget to add matplotlib package)","233e5c83":"Let us confirm this by looking deeper to this dataframe. We will groupe nan values by year and see the resutls. Before we select only rows for which there are nan values.","54e4329d":"Approximatly half of the records. This number is high but keep in mind that there could not be very much variability in this data (If we substract rainfall).","1de06b29":"![image.png](attachment:image.png)","162b1aa1":"Let us explore now the missing values","fb8ececf":"## Objective\n\nThe main objective is to give some insights and interpretations and also ideas on data realated to Aquifer_Auser. It is fine to proceed this way since the differnet sources are not related.**","9f3f3b8b":"Ok, a quite number of features we do not really understand. This is why we need to refer to data description attached to the files.","78dc2084":"Here are my conclusions about this analysis for missing data. Normally the data is gathered for a period form: **1998** to **2020** but in for rainfull data, you might notice that data starts from 2006."}}