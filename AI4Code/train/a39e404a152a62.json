{"cell_type":{"e503aac0":"code","461f2340":"code","9b557b7b":"code","9aec750c":"code","a6eaa3a6":"code","b637a36a":"code","baac573d":"code","59e09e3f":"code","f031add5":"code","834ad1a4":"code","e81c1c43":"code","5da62d6d":"code","efe5c531":"code","d2c585e7":"code","0322f259":"code","d1650dd3":"code","70e98b6b":"code","27953f69":"code","f03dfa6e":"code","bb654ba0":"code","8addb659":"code","0455f6a7":"code","0dc9f4a3":"code","12dd658f":"code","a1ee8db5":"code","4deb0c3a":"markdown","48e3c993":"markdown","77bbfc6e":"markdown","06fc00bc":"markdown","aba41803":"markdown","761cd0d2":"markdown","c9fcbe43":"markdown","c6c5bab8":"markdown","4610c8af":"markdown","7ef21e0c":"markdown","69a03394":"markdown","863b5390":"markdown","f7f9359c":"markdown","b3a209f4":"markdown","19f82a2d":"markdown","5316b49f":"markdown","f45cd4c7":"markdown","49754b80":"markdown","2946f0d1":"markdown","e422a223":"markdown","229f0001":"markdown","496595f6":"markdown","1e0bf777":"markdown","0660636e":"markdown","f77084e0":"markdown","381695bc":"markdown","6bc61250":"markdown","977327e4":"markdown","27839202":"markdown","7ef50d72":"markdown","adb85285":"markdown","3fb934d7":"markdown","c580a8c1":"markdown","4e3cb0bf":"markdown","6639a324":"markdown"},"source":{"e503aac0":"# This is a remark line. You can add it to clearify your code, starting with '#'\n\na = 13\nprint(a)\n","461f2340":"a = 7\n b = 8\nc = a + b\n\nprint(c)","9b557b7b":"print('Hello from Python') \nprint(\"=================\")","9aec750c":"a = -5\nb = 3\nc = a + b\n\n\nprint(a, '+', b, '=', c )","a6eaa3a6":"a = \"\"\"  This is Major Tom to Ground Control\n     I'm stepping through the door\nAnd I'm floating in a most peculiar way\nAnd the stars look very different today\"\"\"\n\nprint(a)","b637a36a":"a = 7\nb = 3.0\nc = a\/3\n\ns = 'Hello'\n\n\nprint ('type(a) is: ', type(a))\nprint ('type(b) is: ', type(b))\nprint ('type(c) is: ', type(c))\nprint ('type(s) is: ', type(s))\n\n","baac573d":"name = input('What is your name? ')\n\nprint ('Hello', name)\n\nprint ('Hello', 'name')","59e09e3f":"import math\n\nprint (math.pi)\nprint (math.sin(math.pi\/2))\n","f031add5":"!pip list","834ad1a4":"!pip install pyTelegramBotAPI ","e81c1c43":"import datetime\n\ndate_time_str = '15\/09\/19'\n\ndate_time_obj = datetime.datetime.strptime(date_time_str, '%d\/%m\/%y')\n\nprint (date_time_obj)\n\nprint (date_time_obj.day,'\/',date_time_obj.month)\n\n","5da62d6d":"import datetime\n\nnow = datetime.datetime.now()\n\nname = input('What is your name? ')\nborn_year = input('At what year were you born? ')\n\nage = now.year - born_year\n\nprint ('Hi', name, ', you are',age ,'years old.')\n","efe5c531":"from lxml import html\nimport requests\n \nurl = \"https:\/\/www.boi.org.il\/currency.xml\"\n\nresponse = requests.get(url)\ntree = html.fromstring(response.content)\n\nd2s_rate = float(tree[1][4].text)\n\nprint ('1 USD =', d2s_rate, 'NIS' )","d2c585e7":"a = 5\nb = 4\n                                                              \nc = a \/ b\n\nprint (a, '\/', b, '=' , c)","0322f259":"a = 5\nb = 4\n\nif b!=0:                                                              \n    c = a \/ b\n    print (a, '\/', b, '=' , c)","d1650dd3":"a = 5\nb = 4\n\nif b==0:\n    print ('Can\\'t divide by zero')\nelse:\n    c = a \/ b\n    print (a, '\/', b, '=' , c)","70e98b6b":"# num = int(input('Input a number:'))\n\nnum = 8\n\nprint(num % 2)    # print the residual of (num \/ 2)\n\n# print (num, 'is an even number.')\n\n# print (num, 'is an odd number')","27953f69":"a = 8\nb = 5\n\nif a > b:\n    print (a, 'is greater than', b)\nelif a < b:\n    print (a, 'is less than', b)\nelse:  \n    print (a, 'is equal to', b)","f03dfa6e":"import plotly.express as px\nimport pandas as pd\n\n\nurl = 'https:\/\/raw.githubusercontent.com\/shohame\/Python-Course-For-Beginners\/master\/data\/gapminder_tidy.csv'\n\ndf = pd.read_csv(url)\n\n\nfig = px.scatter(df, y=\"life\", x='gdp', color=\"region\", hover_name=\"Country\", size=\"population\",\n               animation_frame=\"Year\", title=\"Year\", log_x = True, range_y = [0,90], size_max = 70)\n\nfig.show()\n","bb654ba0":"import itertools\nfrom sklearn.metrics import confusion_matrix\nimport tensorflow as tf\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndirec = '..\/input\/digits-28x28\/'\n\n\ntraining_data = np.load   (direc + 'X_train.npy')\ntraining_labels = np.load (direc + 'y_train.npy')\ntest_data = np.load       (direc + 'X_test.npy')\ntest_labels = np.load     (direc + 'y_test.npy')\n","8addb659":"i1 = 1021\ni2 = 2000\n\nplt.subplot(1, 2, 1)\nplt.imshow(training_data[i1].reshape(28,28), cmap='gray')\nplt.title('lable = ' + str(training_labels[i1]))\nplt.subplot(1, 2, 2)\nplt.imshow(training_data[i2].reshape(28,28), cmap='gray')\nplt.title('lable = ' + str(training_labels[i2]))","0455f6a7":"model = tf.keras.Sequential()\n\n\nmodel.add(tf.keras.layers.Flatten(input_shape=(28, 28)))\n\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\nmodel.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))\n\nmodel.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))\n\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])","0dc9f4a3":"model.fit(training_data, training_labels, batch_size = 20, epochs=50)","12dd658f":"def plot_confusion_matrix(cm, classes, normalize=False, title='Confusion matrix', cmap=plt.cm.YlGnBu):\n    \n    plt.figure(figsize=(8, 8))\n    \n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes, rotation=45)\n    plt.yticks(tick_marks, classes)\n\n    if normalize:\n        cm = cm.astype('float') \/ cm.sum(axis=1)[:, np.newaxis]\n\n    thresh = cm.max() \/ 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, cm[i, j],\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')\n\n# Predict the values from the validation dataset\nY_pred = model.predict(test_data)\n\n# Convert predictions classes to one hot vectors \nY_pred_classes = np.argmax(Y_pred, axis=1) \n\n# compute the confusion matrix\nconfusion_mtx = confusion_matrix(test_labels, Y_pred_classes) \n\n# plot the confusion matrix\nplot_confusion_matrix(confusion_mtx, classes = range(10)) ","a1ee8db5":"pred_lable = 8\ntrue_lable = 9\n\nf = (test_labels == true_lable) * (Y_pred_classes == pred_lable)\n\nimgs = test_data[f]\n\nn = imgs.shape[0]\ni=1\nfor img in imgs:\n    plt.subplot(1, n, i)\n    plt.imshow(img.reshape(28,28), cmap='gray')\n    plt.title('Predict = ' + str(pred_lable))\n    i = i + 1\n\n\n","4deb0c3a":"# How to learn to program (or how to learn in general)\n\n![](https:\/\/d3m9l0v76dty0.cloudfront.net\/system\/photos\/129702\/original\/a9325165001a8e56d33d0743286d4e33.jpg)","48e3c993":"<img src=\"https:\/\/miro.medium.com\/max\/837\/1*Ab299OETAeuTEiGg5TwpMQ.png\" alt=\"\" width=\"500\" height=\"600\">\n\n\n","77bbfc6e":"### if, elif & else statment:\n\n\n\n![](https:\/\/github.com\/shohame\/Python-Course-For-Beginners\/blob\/master\/images\/flowchart_if_elif_else.png?raw=true)\n","06fc00bc":"![](https:\/\/digitalowl.org\/wp-content\/uploads\/2020\/01\/nn_in_action.gif)","aba41803":"# Condition","761cd0d2":"### If - Else statment:\n\n\n![](https:\/\/github.com\/shohame\/Python-Course-For-Beginners\/blob\/master\/images\/flowchart_if_else.png?raw=true)","c9fcbe43":"# Let's take a look at the images","c6c5bab8":"<img align=\"left\" src=\"https:\/\/i.gifer.com\/XoCy.gif\" width=\"100\" height=\"100\" alt=\"Pen\" ><br \/><br \/><br \/><br \/>\n### Find the error","4610c8af":"\n___\n___\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","7ef21e0c":"# [MNIST database](https:\/\/en.wikipedia.org\/wiki\/MNIST_database)\n\n![](https:\/\/github.com\/shohame\/Python-Course-For-Beginners\/blob\/master\/images\/AI_Digit.gif?raw=true)","69a03394":"# Fitting the model = Training","863b5390":"<img align=\"left\" src=\"https:\/\/miro.medium.com\/max\/2500\/1*ZB6H4HuF58VcMOWbdpcRxQ.png\" width=\"600\"  alt=\"NN\" ><br \/><br \/><br \/><br \/>\n","f7f9359c":"# Sequential Flowchart:\n\n![](https:\/\/github.com\/shohame\/Python-Course-For-Beginners\/blob\/master\/images\/flowchart_sample.png?raw=true)","b3a209f4":"We can define multiple text lines using tripple \"","19f82a2d":"## Condition:\n\n### Simple if statment: \n\n![](https:\/\/github.com\/shohame\/Python-Course-For-Beginners\/blob\/master\/images\/flowchart_if.png?raw=true)\n\n","5316b49f":"![www.boi.org.il](https:\/\/www.boi.org.il\/Style%20Library\/Boi\/newSite\/img\/logo.png)\n\n# www.boi.org.il","f45cd4c7":"Now lets use plus (+) operator on vrariables","49754b80":"---\n![](https:\/\/icon-library.com\/images\/python-icon-png\/python-icon-png-3.jpg)\n\n\n## Now let's start with Python.\n\n#### We will work on Python version 3. \n#### Python is an Object-Oriented Programming (OOP) language.\n\n#### \"Code cell\" is were we will program and execute our code.\n\n#### Code can be executed by single-clicking it and then pressing ctrl-enter, or by mouse clicking the \"PLAY\" triangle on the left side of the cell. \n\n#### First, lets define varible, and print it: ","2946f0d1":"<table align=\"left\">\n<thead style=\"text-align:right;\"><tr>\n<th style=\"text-align:left;\" >Operator<\/th>\n<th style=\"text-align:left;\">Name<\/th>\n<th style=\"text-align:left;\">Description<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td style=\"text-align:left;\"><code\">a + b<\/code><\/td>\n<td style=\"text-align:left;\">Addition<\/td>\n<td style=\"text-align:left;\">Sum of <code>a<\/code> and <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a - b<\/code><\/td>\n<td style=\"text-align:left;\">Subtraction<\/td>\n<td style=\"text-align:left;\">Difference of <code>a<\/code> and <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a * b<\/code><\/td>\n<td style=\"text-align:left;\">Multiplication<\/td>\n<td style=\"text-align:left;\">Product of <code>a<\/code> and <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a \/ b<\/code><\/td>\n<td style=\"text-align:left;\">True division<\/td>\n<td style=\"text-align:left;\">Quotient of <code>a<\/code> and <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a \/\/ b<\/code><\/td>\n<td style=\"text-align:left;\">Floor division<\/td>\n<td style=\"text-align:left;\">Quotient of <code>a<\/code> and <code>b<\/code>, removing fractional parts<\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a % b<\/code><\/td>\n<td style=\"text-align:left;\">Modulus<\/td>\n<td style=\"text-align:left;\">Integer remainder after division of <code>a<\/code> by <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>a ** b<\/code><\/td>\n<td style=\"text-align:left;\">Exponentiation<\/td>\n<td style=\"text-align:left;\"><code>a<\/code> raised to the power of <code>b<\/code><\/td>\n<\/tr>\n<tr>\n<td style=\"text-align:left;\"><code>-a<\/code><\/td>\n<td style=\"text-align:left;\">Negation<\/td>\n<td style=\"text-align:left;\">The negative of <code>a<\/code><\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n","e422a223":"# Hello, and welcome to a Python introduction meeting.\n![](https:\/\/static.skaip.org\/img\/emoticons\/180x180\/f6fcff\/handshake.gif)\n\n\n## I'm Perry Shoham, \n## Email  :   Perry.Shoham@gmail.com\n## Phone #:   052-8118618\n\n\n---","229f0001":"(In this lesson we will write code without indentation at all, in the following lessons we will talk about indentation)\nhttps:\/\/he.wikipedia.org\/wiki\/%D7%94%D7%96%D7%97%D7%94\n\n The function 'print' can be used to print strings as well:","496595f6":"<img align=\"left\" src=\"https:\/\/static.wixstatic.com\/media\/d03581_9e6ada95f08044eeb87fb25d59b60fa0~mv2.png\/v1\/fill\/w_1069,h_840,al_c\/d03581_9e6ada95f08044eeb87fb25d59b60fa0~mv2.png\" width=\"500\" height=\"500\" alt=\"MakeLab\" ><br \/><br \/><br \/><br \/>","1e0bf777":"# Today's class:\n\n### 1.  Kaggle environment\n### 2.  Variables & Variable types\n### 3.  Printing\n### 4.  Importing a Python package and installing package\n### 5.  Basic mathematical functions\n### 6.  Inputs\n### 7.  Working with dates\n### 8.  Getting USD to NIS currency rate\n### 9.  Condition\n### 10. Advanced Python samples","0660636e":"# Introduction to Python","f77084e0":"# Testing the results:","381695bc":"# Visualisation\n\n![](https:\/\/882029.smushcdn.com\/2004898\/wp-content\/uploads\/2018\/01\/the-power-of-visualisation.jpg?lossy=1&strip=1&webp=1)","6bc61250":"<img align=\"left\" src=\"https:\/\/i.gifer.com\/XoCy.gif\" width=\"100\" height=\"100\" alt=\"Pen\" ><br \/><br \/><br \/><br \/>\n\n\n## Write a code that gets a number from user, and write if it's an odd number or even one.","977327e4":"How can we combine texts with numbers?","27839202":"# Network definition","7ef50d72":"# Neural Networks (NN)","adb85285":"<img align=\"left\" src=\"https:\/\/ivoryintbd.com\/wp-content\/uploads\/2018\/07\/carousel_1450275133120901-china-resorts-to-import-duty-cuts-to-kickstart-slowing-economy.jpg\" width=\"400\" height=\"400\" alt=\"Import\" ><br \/><br \/><br \/><br \/><br \/><br \/><br \/><br \/><br \/><br \/><br \/><br \/>\n\n\n\n\n## Iporting math library ","3fb934d7":"### Each varible has a type. We can print it as follows (note the differences)","c580a8c1":"# Add data to your Kaggle Notebook\n\nhttps:\/\/www.kaggle.com\/perryshoham\/digits-28x28","4e3cb0bf":"### Getting 'input' from  user","6639a324":"https:\/\/raw.githubusercontent.com\/shohame\/Python-Course-For-Beginners\/master\/data\/gapminder_tidy.csv"}}