{"cell_type":{"e6380e0b":"code","38fe4502":"code","6b116396":"code","2e333dfc":"code","ae8f0e2a":"code","f9e8a361":"code","2870625f":"code","d0544574":"code","f7cc14bc":"code","b3600fbb":"code","bb06dd23":"code","51f0ae08":"code","ea397601":"code","d8896191":"code","d4874e1c":"code","748de1a9":"code","9be01054":"code","3b808855":"code","e5213353":"code","40d32a14":"code","1e0ccd09":"code","2ce54e4c":"code","202cad5f":"code","7fbe813c":"code","7ebc67d3":"code","873c93f0":"code","dfd89bc6":"code","ac2abed1":"code","f334d86f":"code","7d398d90":"code","15afb837":"code","02b11cf4":"code","f5239a0a":"code","935f2a96":"code","c60a8f95":"code","ac678ff0":"code","efc5d9eb":"code","888f701a":"code","01ad7be0":"code","7fba2725":"code","67bca1bf":"code","183f95a0":"code","d0bb0c00":"code","6d843c2e":"code","847dc31b":"code","693f7001":"markdown","3d66c9ac":"markdown"},"source":{"e6380e0b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","38fe4502":"import plotly.express as px","6b116396":"train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntrain","2e333dfc":"test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\ntest","ae8f0e2a":"fig = px.scatter_3d(train, x='Pclass', y='Sex', z='Survived',\n                    color='Survived')\nfig.show()","f9e8a361":"train.isnull().sum()","2870625f":"test.isnull().sum()","d0544574":"import matplotlib.pyplot as plt\nimport seaborn as sns","f7cc14bc":"plt.figure(figsize=(15,10))\nsns.heatmap(train.isnull(),cmap=\"plasma\")","b3600fbb":"plt.figure(figsize=(15,10))\nsns.heatmap(train.isnull(),cmap=\"plasma\")","bb06dd23":"train[\"Age\"].fillna(train[\"Age\"].mean())","51f0ae08":"plt.figure(figsize=(15,10))\nsns.boxplot(x=\"Pclass\",y=\"Age\",data=train)","ea397601":"train[\"Age\"].mean()","d8896191":"def age_mean(col):\n    Age=col[0]\n    Pclass=col[1]\n    if pd.isnull(Age):\n        \n        if Pclass==1:\n            return 38\n        elif Pclass ==2:\n            return 29\n        else:\n            return 25\n    else:\n        return Age","d4874e1c":"train[\"Age\"]=train[[\"Age\",\"Pclass\"]].apply(age_mean,axis=1)\ntrain[\"Age\"]","748de1a9":"plt.figure(figsize=(15,10))\nsns.heatmap(train.isnull(),cmap=\"plasma\")","9be01054":"train.drop(\"Cabin\",axis=1,inplace=True)","3b808855":"plt.figure(figsize=(15,10))\nsns.heatmap(train.isnull(),cmap=\"plasma\")","e5213353":"train.isnull().sum()","40d32a14":"train[\"Embarked\"].value_counts()","1e0ccd09":"train[\"Embarked\"].fillna(value=\"S\",inplace=True)","2ce54e4c":"train.isnull().sum()","202cad5f":"test.isnull().sum()","7fbe813c":"test[\"Age\"]=test[[\"Age\",\"Pclass\"]].apply(age_mean,axis=1)\ntest[\"Age\"]","7ebc67d3":"test.isnull().sum()","873c93f0":"test.drop(\"Cabin\",axis=1,inplace=True)\ntest.isnull().sum()","dfd89bc6":"test[\"Fare\"].fillna(value=test[\"Fare\"].mean(),inplace=True)","ac2abed1":"test.isnull().sum()","f334d86f":"train.drop([\"PassengerId\",\"Name\",\"Ticket\"],axis=1,inplace=True)\ntrain","7d398d90":"passenger_id=test[\"PassengerId\"]","15afb837":"sns.set_style(\"darkgrid\")#Set the aesthetic style of the plots like darkgrid, whitegrid, dark, white, ticks\nplt.figure(figsize=(15,10))\nsns.countplot(train[\"Survived\"],hue=\"Sex\",data=train,palette=\"RdBu_r\")","02b11cf4":"sns.set_style(\"darkgrid\")#Set the aesthetic style of the plots like darkgrid, whitegrid, dark, white, ticks\nplt.figure(figsize=(15,10))\nsns.countplot(train[\"Survived\"],hue=\"Pclass\",data=train,palette=\"RdBu_r\")","f5239a0a":"test=test.drop([\"PassengerId\",\"Name\",\"Ticket\"],axis=1)\ntest","935f2a96":"\ntrain=pd.get_dummies(data=train,columns=[\"Sex\",\"Embarked\"],drop_first=True)\ntrain","c60a8f95":"test=pd.get_dummies(data=test,columns=[\"Sex\",\"Embarked\"],drop_first=True)\ntest","ac678ff0":"train","efc5d9eb":"X_train=train.drop(\"Survived\",axis=1)\nX_train","888f701a":"X_train","01ad7be0":"y_train=train[\"Survived\"]\ny_train","7fba2725":"test","67bca1bf":"from sklearn.ensemble import RandomForestClassifier","183f95a0":"forest=RandomForestClassifier(n_estimators=7)","d0bb0c00":"forest.fit(X_train,y_train)","6d843c2e":"predictions=forest.predict(test)\npredictions","847dc31b":"output = pd.DataFrame({'PassengerId': passenger_id, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)","693f7001":"<font color=\"blue\">\n Random forest is a type of ensemble algorithm which means that it includes more than one algorithm and puts them together in order to make more powerful work.","3d66c9ac":"Exploratory Data Analysis"}}