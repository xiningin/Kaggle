{"cell_type":{"57998f30":"code","c5dd65ff":"code","938eb5e9":"code","bb3ad08d":"code","41baf906":"code","e7c7cd82":"code","87ea68ee":"code","d591737a":"markdown","13259ac1":"markdown","8842c498":"markdown"},"source":{"57998f30":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\ntrain = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","c5dd65ff":"y = train['Survived']\ntrain.drop(labels = ['Survived','PassengerId','Name','Ticket','Cabin','Embarked'], axis = 1, inplace = True)\ntrain['Age'].fillna(train['Age'].mean(), inplace = True)\ncategorical_columns = ['Sex']\ntrain = pd.get_dummies(train,columns = categorical_columns, dtype = int)\ntrain.drop(labels = ['Sex_male'], axis = 1, inplace = True)\n\nX = []\nfor column in train.columns:\n    X.append(column)\n\nX = train[X]","938eb5e9":"X.head()","bb3ad08d":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification\n\nclf = RandomForestClassifier(n_estimators=100, max_depth=2,random_state=0)\nclf.fit(X, y) \ny_pred = clf.predict(X)\n\nunique, counts = np.unique( np.asarray(y_pred == y), return_counts=True)\ntrue_false_values = dict(zip(unique, counts))\naccuracy = true_false_values[True]\/len(np.asarray(y_pred == y))\naccuracy\n","41baf906":"from sklearn import metrics\n\ncm = metrics.confusion_matrix(y, y_pred)\nplt.figure(figsize=(9,9))\nsns.heatmap(cm, annot=True, fmt=\".3f\", linewidths=.5, square = True, cmap = 'Blues_r');\nplt.ylabel('Actual label');\nplt.xlabel('Predicted label');\nall_sample_title = 'Confusion Matrix'\nplt.title(all_sample_title, size = 15);","e7c7cd82":"original_test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.drop(labels = ['PassengerId','Name','Ticket','Cabin','Embarked'], axis = 1, inplace = True)\ntest['Age'].fillna(test['Age'].mean(), inplace = True)\ncategorical_columns = ['Sex']\ntest = pd.get_dummies(test,columns = categorical_columns, dtype = int)\ntest.drop(labels = ['Sex_male'], axis = 1, inplace = True)\ntest['Fare'].fillna(test['Fare'].mean(), inplace = True)\n\ntest_pred = clf.predict(test)","87ea68ee":"submission = pd.DataFrame({\n        \"PassengerId\": original_test[\"PassengerId\"],\n        \"Survived\": test_pred\n    }) \n\nfilename = 'submission.csv'\nsubmission.to_csv(filename,index=False)\nprint('Saved file: ' + filename)","d591737a":"(I decided to make a slightly different version to my original as Embarked should note have any effect on whether the person survived or not. I have also dropped sex_male column. I have also removed some code and markdown which I had used in my [original version](https:\/\/www.kaggle.com\/niteshhalai\/titanic-linear-regression-original-version).)","13259ac1":"First I will  split the data between variable and targets. I will also remove the columns PassenderId, Name, Ticket (these should not have any effect on whether the passenger survived or not) and Cabin (as these have a lot of missing values). I will also remove the embarked column as where the passenger has left from shouldn't have any effect on whether they survived or not.","8842c498":"**Using the model on the test data**"}}