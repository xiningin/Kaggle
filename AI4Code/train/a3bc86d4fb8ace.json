{"cell_type":{"cd67fa83":"code","6a026cab":"code","102fea33":"code","a4755108":"code","02018351":"code","0eb0cba5":"code","0e35e473":"code","c207a7c5":"markdown","48ca8ae1":"markdown"},"source":{"cd67fa83":"import pandas as pd\npd.set_option('max_colwidth', None)","6a026cab":"# need to create a dataset of the CSV file, as that kernel was not appearing in search results while importing data.\nsub = pd.read_csv('..\/input\/vinbigdata-0235-lb\/submission_0.235_LB.csv')\nsub.shape","102fea33":"sub.head()","a4755108":"def divide(l, n):\n    '''\n    divide submission string into group of 6\n    '''\n    for i in range(0, len(l), n):  \n        yield l[i:i + n]\n\npreds = sub['PredictionString'].tolist()\ngrouped_preds = [list(divide(pred.split(), 6)) for pred in preds]\ngrouped_preds[:5]","02018351":"new_preds = []\n\nfor pred in grouped_preds:\n    temp = ''\n    # each box is a tuple of 6 i.e. (class, confidence, xmin, ymin, xmax, ymax)\n    for box in pred:\n        # if we found some bounding-box i.e. `len(pred) > 1` & class is \"No finding\".\n        if len(pred) > 1 and box[0] == '14':\n            # Make the probability 0.\n            box[1] = '0'\n        temp += ' '.join(box) + ' '\n    new_preds.append(temp.strip())\n    \nnew_preds[:5]","0eb0cba5":"sub['PredictionString'] = new_preds\nsub.head()","0e35e473":"sub.to_csv('submission_postprocessed.csv', index=False)","c207a7c5":"## On public LB, we're getting improvement of 0.04 i.e. 0.235 to 0.239","48ca8ae1":"## Only purpose of this notebook is to share a post-processing technique of making 14th class probability to 0 when we have found >0 bounding boxes.\n\n## To show that, I have used [@nxhong93](https:\/\/www.kaggle.com\/nxhong93)'s public notebook output which you can find [here](https:\/\/www.kaggle.com\/nxhong93\/yolov5-chest-512). Thanks [@nxhong93](https:\/\/www.kaggle.com\/nxhong93) for sharing the notebook. All credits goes to him.\n\n## So, for samples we don't have bounding boxes, we write 14 1 0 0 1 1 in the submission which means, we found 14th class i.e. \"No finding\" with probability of 1.\n\n## Now, if we found some bounding box, then intuitively we can make that probability to 0, if model predicts it non-zero.\n\n### And obviosly, I am not saying that, this will also work in private test-data, but chances are there that, it may work.\n\n### As there are 21 days to go for this competition to end, everyone should get a fair chance to use this if they want."}}