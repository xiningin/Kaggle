{"cell_type":{"6d8bfdb9":"code","c3e3e952":"code","6d9c93a7":"code","49f90dfb":"code","b59a4ba1":"code","2ab9933c":"code","c74d12a5":"code","c07c4b8a":"code","280dd596":"code","05a32379":"code","136fa93f":"code","88ac9a5f":"code","045a1067":"code","ff741834":"code","609a774c":"code","17d0262c":"code","7cc39b05":"code","81cf094e":"code","ae06d816":"code","e1e7ddfc":"code","0edae4bb":"code","2e7ad672":"code","00ade758":"code","12819280":"code","b7b3b480":"code","d6a20cdc":"code","2b332f49":"code","1f3c1cf5":"code","fbda1abf":"code","cb5c0d9a":"code","d28b55b2":"code","4b0ad1b7":"code","ea0bca85":"code","5c7ecc1d":"code","8f0ad3ce":"code","40243ba0":"code","edd00c0b":"code","15483a90":"code","5c7f206e":"code","204c25ef":"code","ed265edb":"code","194a5721":"code","5f49404e":"code","45176ea3":"code","1e8c2826":"code","ac4e3fa4":"code","3a2b92eb":"code","854d2e66":"code","b787488c":"code","640d29f6":"code","a8fb72f4":"code","cdc99293":"code","a26e33f1":"code","0310a2fd":"code","0c4a64a7":"code","bf12bbfd":"code","8ae80406":"code","d63bb7e3":"code","98e4ef34":"code","1ea174f6":"code","7627f37f":"code","3134de1c":"code","ccd686fc":"code","22678573":"code","1725fdf8":"code","288bbf98":"code","6c100838":"code","1caa7ede":"markdown","48bfeeb4":"markdown","01f7c445":"markdown","fc5b8489":"markdown","71ea48a3":"markdown","ae626fd2":"markdown","a5278c47":"markdown","35d05ae8":"markdown","1595b7d7":"markdown","ef26e222":"markdown","ab070624":"markdown","aef02b67":"markdown","318c21fb":"markdown","04cdeb67":"markdown","ca1d728f":"markdown","fa492df0":"markdown","23d4b49f":"markdown","c793f344":"markdown","acfdff82":"markdown","02ed9dad":"markdown","d2d14f8f":"markdown","61671333":"markdown","6b59b009":"markdown","fc161b80":"markdown","cf153df3":"markdown","1568f5fe":"markdown","25bfa3bf":"markdown","db195f78":"markdown","6d6430af":"markdown","fcbdc247":"markdown","1dcb9a8a":"markdown","258ccca5":"markdown","b5c51585":"markdown","4cbeae23":"markdown","18d0eeb6":"markdown","8175a99d":"markdown","e59a1b01":"markdown","453b1980":"markdown","11fbaca7":"markdown","1dac469e":"markdown","bceb8d4d":"markdown","4e868624":"markdown","1d994f43":"markdown","1bdeefa1":"markdown","e7223ce4":"markdown","48be17b0":"markdown","7d4fabe5":"markdown"},"source":{"6d8bfdb9":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib as mp \nimport numpy as np\nfrom collections import Counter\nimport re\nimport string\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n# Set jupyter's max row display\npd.set_option('display.max_row', 1000)\n\n# Set jupyter's max column width to 50\npd.set_option('display.max_columns', 50)\n\nplt.style.use('ggplot')\n%matplotlib inline","c3e3e952":"data_2017 = pd.read_excel('..\/input\/2017_Batch.xlsx')\ndata_2017.head()","6d9c93a7":"data_2017.shape","49f90dfb":"list(data_2017)","b59a4ba1":"data_2017.isna().sum()","2ab9933c":"# Rename the long name without loss in its meaning\ndata_2017.rename(columns={'DEPARTMENT (ABBR.)': 'Department'}, inplace=True)","c74d12a5":"set(data_2017.Department.values)","c07c4b8a":"data_2017.groupby('Department')['SL.NO.'].count().reset_index(name='No. of students')","280dd596":"subplot = data_2017.groupby('Department')['SL.NO.'].count().plot(kind='barh',figsize=(12,10))\nsubplot.set_ylabel('')\nsubplot.set_title('Number of Students per Department', fontsize = 20)\nfor i in subplot.patches:\n    # get_width pulls left or right; get_y pushes up or down\n    subplot.text(i.get_width()+.3, i.get_y()+.2, \\\n            str(i.get_width()), fontsize=15,)","05a32379":"data_2017.groupby('Department')['SEM AVG'].max().reset_index(name = 'Highest Average Semester Grade')","136fa93f":"subplot = data_2017.groupby('Department')['SEM AVG'].max().plot(kind='barh',figsize=(12,8))\nsubplot.set_ylabel('')\nsubplot.set_title('Highest Average Semester Grade per Department', fontsize = 20)\nfor i in subplot.patches:\n    # get_width pulls left or right; get_y pushes up or down\n    subplot.text(i.get_width()+.1, i.get_y()+.1, \\\n            str(round(i.get_width(),2)), fontsize=13)","88ac9a5f":"data_2017[data_2017['Department'] == 'IT'][['SEM AVG']].head()","045a1067":"data_2017['PERMANENT LOCATION (STATE)'].value_counts()","ff741834":"# Manual engineering but okay! Can be written in an efficient manner using regex\n# The correct entries have also been specified. This is to avoid the entry of NaNs. \ndata_2017['PERMANENT LOCATION (STATE)'] = data_2017['PERMANENT LOCATION (STATE)'] .map({'WESTBENGAL':'WEST BENGAL',\n'WEST BENGAL':'WEST BENGAL', 'West Bengal':'WEST BENGAL', 'WEST-BENGAL':'WEST BENGAL',\n' WEST BENGAL':'WEST BENGAL', 'WB':'WEST BENGAL','West bengal':'WEST BENGAL', 'WEST BINGAL': 'WEST BENGAL',\n'               WEST BENGAL':'WEST BENGAL', '                WEST BENGAL':'WEST BENGAL','WEST BENGAL.':'WEST BENGAL',\n'               JHARKHAND':'JHARKHAND','BIHAR':'BIHAR','TRIPURA':'TRIPURA','JHARKHAND':'JHARKHAND','UTTARAKHAND':'UTTARAKHAND',\n'DELHI':'DELHI','INDIA':'INDIA'})","609a774c":"no_students_state_wise = data_2017['PERMANENT LOCATION (STATE)'].value_counts().reset_index(name='Number of students')\nno_students_state_wise.rename(columns={'index':'State'},inplace=True)\nno_students_state_wise","17d0262c":"subplot = data_2017['PERMANENT LOCATION (STATE)'].value_counts().plot(kind='barh',figsize=(12,8))\nsubplot.set_ylabel('')\nsubplot.set_title('State-wise Distribution of Students', fontsize = 20)\nfor i in subplot.patches:\n    # get_width pulls left or right; get_y pushes up or down\n    subplot.text(i.get_width()+.1, i.get_y()+.1, \\\n            str(round(i.get_width(),2)), fontsize=13)","7cc39b05":"data_2017[data_2017['PERMANENT LOCATION (STATE)'] == 'INDIA']","81cf094e":"data_2017.drop(index=249, inplace=True)","ae06d816":"data_2017[data_2017['PERMANENT LOCATION (STATE)'] == 'INDIA']","e1e7ddfc":"toppers = data_2017.groupby('Department')['SEM AVG'].transform(max) == data_2017['SEM AVG']\ndata_2017[toppers][['Department', 'SEM AVG',\n                    'ACTUAL % OF CLASS XII','NAME OF BOARD\/COUNCIL - CLASS XII']]","0edae4bb":"data_2017[toppers][['Department','SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5']]","2e7ad672":"color=['#81c784','#0288d1','#0288d1','#9575cd','#f44336','#ffb74d','#6d4c41','#f50057']\n\nfig, ax = plt.subplots(figsize=(10,10))\nax.set_ylabel('Semester-wise Grades',fontsize=14)\nax.set_title('Changes in grades of the toppers over time')\nfor i,c in zip(range(len(data_2017[toppers][['Department','Department','SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5']])),color):\n    ax.plot(['SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5'], \n            data_2017[toppers][['SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5']].iloc[i], \n            color=c, linewidth=3,label=data_2017[toppers]['Department'].iloc[i])\n    \nax.legend(loc='lower right')","00ade758":"data_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'].value_counts()","12819280":"data_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] = \\\ndata_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] .map({'WBJEE':'WBJEE',\n'JELET':'JELET', 'JEE-MAINS':'JEE-MAINS','DE-CENTRALISED ADMISSION':'DE-CENTRALISED ADMISSION',\n'WBJEE & JEE-MAINS':'WBJEE & JEE-MAINS'})","b7b3b480":"data_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'].value_counts()","d6a20cdc":"data_2017[data_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'].isna()==True]\\\n[['Department','NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)']]","2b332f49":"data_2017.ix[130, 'NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] = 'JELET'\ndata_2017.ix[581, 'NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] = 'WBJEE'\ndata_2017.ix[586, 'NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] = 'WBJEE'\ndata_2017.ix[617, 'NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'] = 'WBJEE'","1f3c1cf5":"data_2017['NAME OF JOINT ENTRANCE (WBJEE\/JEE-MAINS\/JELET ETC.)'].value_counts()","fbda1abf":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].isna()==False]\\\n        [['IF YES, MENTION NUMBER OF BACKLOG(S)']].sample(20)","cb5c0d9a":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].str.isalnum()==True]\\\n    [['IF YES, MENTION NUMBER OF BACKLOG(S)']]","d28b55b2":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].str.match('^[a-zA-Z0-9]+$')==False]\\\n        [['IF YES, MENTION NUMBER OF BACKLOG(S)']]","4b0ad1b7":"data_2017.iloc[33]['IF YES, MENTION NUMBER OF BACKLOG(S)']","ea0bca85":"data_2017.ix[76, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 1\ndata_2017.ix[77, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 1\ndata_2017.ix[562, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 1\ndata_2017.ix[33, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 5\ndata_2017.ix[74, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 1\ndata_2017.ix[211, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 3\ndata_2017.ix[212, 'IF YES, MENTION NUMBER OF BACKLOG(S)'] = 1","5c7ecc1d":"data_2017.iloc[212][['STUDENT\\'S FULL NAME','IF YES, MENTION NUMBER OF BACKLOG(S)']]","8f0ad3ce":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].isna()==False]\\\n        [['IF YES, MENTION NUMBER OF BACKLOG(S)']].sample(20)","40243ba0":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].str.match('^[a-zA-Z0-9]+$')==False]\\\n        [['IF YES, MENTION NUMBER OF BACKLOG(S)']]","edd00c0b":"data_2017[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].str.match('^[\\d]')==False]\\\n        [['IF YES, MENTION NUMBER OF BACKLOG(S)']]","15483a90":"false_backlog = data_2017.index[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].str.match('^[\\d]')==False].tolist()","5c7f206e":"noisy_backlogs = data_2017.index[data_2017['IF YES, MENTION NUMBER OF BACKLOG(S)'].isna()==False].tolist()","204c25ef":"noisy_backlogs = set(noisy_backlogs) - set(false_backlog)","ed265edb":"data_2017.ix[noisy_backlogs][['Department','IF YES, MENTION NUMBER OF BACKLOG(S)']]","194a5721":"noisy_backlogs_df = data_2017.ix[noisy_backlogs]\\\n                [['Department','IF YES, MENTION NUMBER OF BACKLOG(S)']]\nlabel_counts = Counter(noisy_backlogs_df['Department'].values)\nlabel_counts.most_common()","5f49404e":"plot_df = pd.DataFrame(label_counts.most_common(),columns=['Department','Backlog Count'])\nplot_df","45176ea3":"subplot = plot_df.groupby('Department')['Backlog Count'].sum().plot(kind='barh',figsize=(10,8))\nsubplot.set_title('Number of Backlogs per Department')\nfor i in subplot.patches:\n    # get_width pulls left or right; get_y pushes up or down\n    subplot.text(i.get_width()+.20, i.get_y()+.1, \\\n            str(i.get_width()), fontsize=13)","1e8c2826":"no_stu_dept_wise = data_2017.groupby('Department')['SL.NO.'].count().reset_index(name='Student Count')","ac4e3fa4":"no_stu_dept_wise.merge(plot_df,on='Department')","3a2b92eb":"stu_backlog_count= no_stu_dept_wise.merge(plot_df,on='Department')\nsubplot = stu_backlog_count.groupby('Department').sum().plot(kind='barh',figsize=(10,8))\nsubplot.set_title('Number of backlogs w.r.t number of students per department ')\nfor i in subplot.patches:\n    # get_width pulls left or right; get_y pushes up or down\n    subplot.text(i.get_width()+.5, i.get_y()+.1, \\\n            str(i.get_width()), fontsize=13)","854d2e66":"stu_backlog_count['Backlog percentage'] = round((stu_backlog_count['Backlog Count'] \/ \\\n                                    stu_backlog_count['Student Count'])*100.0,2)\nstu_backlog_count","b787488c":"sem1_df = pd.DataFrame(data_2017['SEM 1'].value_counts().reset_index(name='Student Count'))\nsem1_df.rename(columns={'index':'Grade'},inplace=True)\nsem1_df.head(10)","640d29f6":"plt.scatter(sem1_df['Grade'],sem1_df['Student Count'])\nplt.xlabel('Grades obtained in Semester 1')\nplt.ylabel('Number of students')\nplt.title('Grades vs. Number of students for Sem 1')\nplt.show()","a8fb72f4":"len(data_2017[data_2017['SEM 1']==9])","cdc99293":"len(data_2017[data_2017['SEM 1']>=9])","a26e33f1":"sem2_df = pd.DataFrame(data_2017['SEM 2'].value_counts().reset_index(name='Student Count'))\nsem2_df.rename(columns={'index':'Grade'},inplace=True)\nsem2_df.head(10)","0310a2fd":"plt.scatter(sem2_df['Grade'],sem2_df['Student Count'])\nplt.xlabel('Grades obtained in second semester')\nplt.ylabel('Number of students')\nplt.title('Grades vs. Number of students for Sem 2')\nplt.show()","0c4a64a7":"len(data_2017[data_2017['SEM 2']>=9])","bf12bbfd":"# nine_pointers = []\n# sems = ['SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5']\n# for sem in sems:\n#     print(len(data_2017[data_2017[sem]>=9]))\n# nine_pointers","8ae80406":"# len(data_2017[data_2017['SEM 3']>=9])","d63bb7e3":"data_2017['SEM 3']","98e4ef34":"sem3_without_na = data_2017['SEM 3'].dropna()\nsem3_without_na = pd.to_numeric(sem3_without_na, errors = 'coerce')","1ea174f6":"sem3_without_na.sample(20)","7627f37f":"len(sem3_without_na[lambda x: x>=9])","3134de1c":"sem_1 = len(data_2017[data_2017['SEM 1']>=9])\nsem_2 = len(data_2017[data_2017['SEM 2']>=9])\nsem_3 = len(sem3_without_na[lambda x: x>=9])\nsem_4 = len(data_2017[data_2017['SEM 4']>=9])\nsem_5 = len(data_2017[data_2017['SEM 5']>=9])\n\nnine_pointers_number = [sem_1, sem_2, sem_3, sem_4, sem_5]","ccd686fc":"sems = ['SEM 1', 'SEM 2', 'SEM 3', 'SEM 4', 'SEM 5']\nfig, ax = plt.subplots()\nplt.barh(sems,nine_pointers_number)\nfor i, v in enumerate(nine_pointers_number):\n    ax.text(v+0.5, i, str(v), color='red', fontweight='bold')\nplt.xlabel('Number of students who got 9 points')\nplt.title('Count of 9 pointers in each semester')","22678573":"prog_langs = pd.DataFrame(data_2017['COMPUTER LANGUAGES KNOWN'].value_counts().reset_index(name = 'Count'))\nprog_langs.rename(columns={'index':'Programming Language'},inplace = True)\nprog_langs.head(10)","1725fdf8":"prog_langs_cleaned = \\\n    prog_langs.set_index('Count')\\\n    ['Programming Language'].str.split(',', expand=True).stack()\\\n    .reset_index('Count')","288bbf98":"prog_langs_cleaned.rename(columns={0:'Programming Language'},inplace=True)\nprog_langs_cleaned.head()","6c100838":"prog_langs_cleaned['Programming Language'].unique()","1caa7ede":"Many students have specified the computer programming languages that they know (`COMPUTER LANGUAGES KNOWN` column). I want to find out the language known by highest number of students. ","48bfeeb4":"The story is much more clear now. Time for another question. ","01f7c445":"(The above two cells are commented out intentionally because the errors would hamper the Kernel to be committed. )\nThe errors are because in some of the entries for `SEM 3` there are NaNs. For this, the column values are interpreted as strings not numbers. So we can replace these NaNs with zeros or we can drop them. ","fc5b8489":"The intended record has been successfully deleted. ","71ea48a3":"Looks much more tidy now! Can we plot this? Of course!","ae626fd2":"There are total 84 **lateral** candidates. ","a5278c47":"So, it turned out that the number of 9 pointers is not that high after the first semester. This happens for a lot of reasons - \n* It takes sometime for a candidate to move out from his school phase and adapt to college life in a fast fashion.\n* There are subjects which are absolutely not related to particular disciplines. For example - during first semester some universities make it compulsory to study subjects like Engineering Mechanics which is absolutely not related to anything in disciplines like Information Technology. So candidates do not take much interest to study subjects like this. \n\nLet's now find out if the number of 9 pointers increases in the second semester or not. ","35d05ae8":"## 1. What is the total number of students this dataset has? ","1595b7d7":"(WEST BENGAL BOARD OF HIGHER SECONDARY EXAMINATION and WBCHSE are the same.)\n\nWe see that toppers were pretty good in terms of marks in their high-school examinations. Now, this has something to do with the **BOARD\/COUNCIL** to which their schools were affiliated. Because, getting 90% from WBCHSE was actually a lot more harder than getting 90% (or above) from any other boards back then.","ef26e222":"> Let's now find out if the number of 9 pointers increases in the second semester or not.\n\n- Yes, certainly!","ab070624":"For the same state **West Bengal**, we have several variants like WB, WEST-BENGAL and so on. There are even cases where several spaces are appended before the word. Let's try to give it a proper shape. Otherwise, the numbers will be faulty. We will stick to the name `WEST BENGAL` and will replace the other variants accordingly. We have this problem for other states as well. \n\n**Quick observation**: A candidate has even given India as his\/her state)","aef02b67":"It turns out some the students did not specify their entrance examination details. So, we will have to ignore them. From manual inspection of the dataset I found the departments of the following students. ","318c21fb":"The value **India** is really becoming intolerable to my eyes. I am going drop the row corresponding to it. ","04cdeb67":"* AEIE - Applied Electronics and Instrumentation Engg.\n* BME - Biomedical Engg.\n* CE - Civil Engg.\n* CSE - Computer Science and Engg.\n* ECE - Electronics and Communication Engg.\n* EE - Electrical Engg.\n* IT - Information Technology\n* ME - Mechanical Engg.","ca1d728f":"Looks like someone from the department of **IT** has really improved a lot. Kudos to the individual for that!","fa492df0":"## 4. How many departments are there in the dataset?","23d4b49f":"## 12. How are grades for each semester distributed?\n\nI want to know what fraction of students belonged to what grades' range after the first semester.  ","c793f344":"True enough! Let's now see what is the total number of students who got 9 or above - ","acfdff82":"We split the data w.r.t comma only but there can be other delimiters as well. So, finding that out will be another task in itself and it refers to the domain of text cleaning. Also, There are values which do not really conform to being computer programming languages for example - data structures, ms-office and so on. We cannot include such values. This can be for faulty data collection. ","02ed9dad":"Now it will work. So, for plotting, we will have to find out the number of students that got greater or equal to 9 for a given semester and plot it accordingly. \n","d2d14f8f":"* 670 - The number of students. This is 1 less than 671 because 671 contains the header row as well. \n* 64 - Columns","61671333":"The plot tells us that there are total 4 candidates who got exactly 9 in their first semester. Let's verify this - ","6b59b009":"> A number of students have got backlogs throughout their coursework. What is the total number of backlogs in each of the departments?","fc161b80":"## 5. What is the student count per department?","cf153df3":"With this question I end my analysis. Feel free to download the dataset and come up with your own study and let me know about that. \n\nThank you for your time :-)","1568f5fe":"## 3. Are there any missing values in the dataset? ","25bfa3bf":"## 13. What is the programming language that is known by the highest number of students?","db195f78":"In the above cell, we randomly sampled 20 rows. We can see there is an instance where `IF YES, MENTION NUMBER OF BACKLOG(S)` is `True`. We cannot take this type of instances into the account for calculating the number of backlog students per department. \n\nAnd this type of instances as well - ","6d6430af":"A bit of manual engineering needed here - ","fcbdc247":"## 11. What is the total number of backlogs in each of the departments?","1dcb9a8a":"The manual engineering part is not at all the best of options as it is not scalable. As the data is small, we could go for it. But there are in deed efficient to resolve this type of problems. \n\nNow we need to run a bunch of tests to be sure that we have dealt with the backlog noise in a proper manner. ","258ccca5":"The noise is real here, again. Although we can easily see that **C programming language** is the answer to my question. But what if I want to see the fourth highest language? Good amount of data cleaning is required here. ","b5c51585":"The noise is real here. Some students have specified the subjects in which they got their backlogs instead of specifying numbers. Some specified 'N\/A', '-', 'NO', 'NIL' and so on to denote that they did not get any backlogs. While the instruction for non-backlog candidates was to not specify anything and leave the field as it is. \n\nThere are many ways to fix this. We will explore a one or two - ","4cbeae23":"We need some functionality that would treat words like C PROGRAMMING and C-PROGRAMMING one and the same. \nWe can use **Levenshtein distance** to incorporate similarity measurement to extract the similar words. For example Programming C and C Programming means essentially the same in this context. But we can end this question here to not go out of the scope. ","18d0eeb6":"## 8. How did the toppers perform in their high school examinations?","8175a99d":"## Question answering with Data #1\n\n**Author**: [Sayak Paul](https:\/\/sites.google.com\/view\/spsayakpaul)\n\nIn this study, I explore a dataset which contains information of students who got graduated from a certain college in the year 2017. I ask several questions (in an unordered fashion) to the dataset which are practical according to me and eventually find their answers. I also try to present these answers in a nice graphical way. ","e59a1b01":"We can talk in percentages as well - ","453b1980":"## 6. What is the highest semester grade obtained by a student from a particular department?","11fbaca7":"## 10. Students gave different entrance examinations to get their admissions. How many different entrance examinations are there in the dataset?\n","1dac469e":"## 7. Students from different states took admission in this college. What is the state-wise student count?","bceb8d4d":"The value kept on increasing till fourth semester. ","4e868624":"Now, I want to plot this trend till the fifth semester. ","1d994f43":"So we discard this instances to determine the actual number of backlog candidates from each department. ","1bdeefa1":"We have inconsistency in the data. We have dealt with a similar kind inconsistency moments back. ","e7223ce4":"## 9.  How the semester grades of the toppers have changed over time?","48be17b0":"So, the department of **BME** is good enough. But there is another factor to be considered here - **Number of students per department**.","7d4fabe5":"## 2. What kind of information does this dataset convey? "}}