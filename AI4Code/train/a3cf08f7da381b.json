{"cell_type":{"31dce944":"code","35d2f289":"code","52e15725":"code","4354c062":"code","e415404a":"code","f3766e49":"code","a5aff0af":"code","7dec1cb3":"code","075c2fdf":"code","c453fcdf":"code","a87c7a54":"code","72b9a94d":"code","fdbf615a":"code","ec119176":"code","cdaa12de":"code","faa5d784":"code","ccb12147":"code","e5dfd308":"code","099a0f07":"code","cd0b2fc4":"code","9340cf79":"markdown","357294d4":"markdown","e7a5d9fb":"markdown","a152ae1c":"markdown"},"source":{"31dce944":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","35d2f289":"df=pd.read_csv('..\/input\/iris\/Iris.csv')","52e15725":"df.head(5)","4354c062":"df.info()","e415404a":"df.describe()","f3766e49":"df.drop('Id',axis=1)","a5aff0af":"sns.scatterplot(data=df,x='SepalLengthCm',y='SepalWidthCm',hue='Species')\nplt.title(\"Sepal Length VS Sepal Width\")","7dec1cb3":"sns.scatterplot(data=df,x='PetalLengthCm',y='PetalWidthCm',hue='Species')\nplt.title(\"Petal Length VS Petal Width\")","075c2fdf":"df1=df.drop('Id',axis=1)\nsns.pairplot(df1,hue='Species')","c453fcdf":"plt.figure(figsize=(15,10))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=df1)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=df1)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=df1)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=df1)","a87c7a54":"plt.figure(figsize=(10,8))\nsns.heatmap(df1.corr(),annot=True,cmap=\"YlGnBu\")","72b9a94d":"X = df.drop(['Id', 'Species'], axis=1)\ny = df['Species']\n# print(X.head())\nprint(X.shape)\n# print(y.head())\nprint(y.shape)","fdbf615a":"from sklearn.model_selection import train_test_split  #to split the dataset for training and testing","ec119176":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","cdaa12de":"from sklearn import metrics # for checking the model accuracy\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.naive_bayes import GaussianNB\nimport warnings\nwarnings.filterwarnings(\"ignore\")","faa5d784":"logreg = LogisticRegression()\nlogreg.fit(X_train, y_train)\ny_pred = logreg.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","ccb12147":"Model = DecisionTreeClassifier()\nModel.fit(X_train, y_train)\ny_pred = Model.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","e5dfd308":"knn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","099a0f07":"Model=RandomForestClassifier(max_depth=2)\nModel.fit(X_train,y_train)\ny_pred=Model.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","cd0b2fc4":"Model = GaussianNB()\nModel.fit(X_train, y_train)\n\ny_pred = Model.predict(X_test)\nprint(metrics.accuracy_score(y_test, y_pred))","9340cf79":"we have a strong correlation between Petal Width and Petal length , and also between Petal characteristics and Sepal Length.","357294d4":"This is how the length and width vary according to species.","e7a5d9fb":"Classification Algorithms: which we used with this IRIS (structured) dataset\n1. Logistic Regression\n2. Decision Tree\n3. K-Nearest Neighbours\n4. Random forest classifier","a152ae1c":"1.After graphing the features in a pair plot, it is clear that the relationship between pairs of features of a iris-setosa (in blue) is distinctly different from those of the other two species.\n2.There is some overlap in the pairwise relationships of the other two species, iris-versicolor (yellow) and iris-virginica (green)."}}