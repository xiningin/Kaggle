{"cell_type":{"f85157e0":"code","0a0ac566":"code","ce4da011":"code","daf3d569":"code","9af1b4e7":"code","57f91c87":"code","df2bd8fa":"code","a7e05efe":"code","f7548aa9":"code","57a09906":"code","058bd26f":"code","dd287219":"code","113307e5":"markdown","66376134":"markdown","3df1542e":"markdown","080d267d":"markdown","56a61f9b":"markdown","d24e1f1e":"markdown"},"source":{"f85157e0":"import re\nimport os\nimport numpy as np\nimport pandas as pd\nimport random as rn\nimport seaborn as sns\nfrom tqdm.notebook import tqdm\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport seaborn as sns\nsns.set()\nfrom plotly.offline import init_notebook_mode, iplot \nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport pycountry\npy.init_notebook_mode(connected=True)\nimport folium \nfrom folium import plugins\nfrom pathlib import Path\n\n\nimport gc\nimport sys\nimport warnings\nfrom pathlib import Path\n\nimport ipywidgets as widgets\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom statsmodels.tsa.deterministic import (CalendarFourier,\n                                           CalendarSeasonality,\n                                           CalendarTimeTrend,\n                                           DeterministicProcess)\n\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\n\nwarnings.simplefilter(\"ignore\")\n\n# Set Matplotlib defaults\nplt.style.use(\"seaborn-whitegrid\")\nplt.rc(\"figure\", autolayout=True, figsize=(11, 5))\nplt.rc(\n    \"axes\",\n    labelweight=\"bold\",\n    labelsize=\"large\",\n    titleweight=\"bold\",\n    titlesize=14,\n    titlepad=10,\n)\nplot_params = dict(\n    color=\"0.75\",\n    style=\".-\",\n    markeredgecolor=\"0.25\",\n    markerfacecolor=\"0.25\",\n    legend=False,\n)","0a0ac566":"train=pd.read_csv(\"..\/input\/mlb-player-digital-engagement-forecasting\/train.csv\")\ntest=pd.read_csv('..\/input\/mlb-player-digital-engagement-forecasting\/example_test.csv')\nsub=pd.read_csv(\"..\/input\/mlb-player-digital-engagement-forecasting\/example_sample_submission.csv\")\ndef get_dataset_information(df):\n    '''\n    Take a first view of dataset\n    '''\n    print(\"Number of Columns in dataset:\",df.shape[1])\n    print(\"Number of Rows in dataset:\",df.shape[0])\n    print(\"Name of Columns in dataset:\",df.columns)\n   # print(df.describe())\n    print(df.info())\n    return df.head(5)\n\ndef calculate_missing_percentage(df):\n    ''' calculate missing percentage in data and stored as missing_stat\n    Input: Give dataset, in which you like to check missing values\n    '''\n    missing_stat=df.isnull().sum()\/len(df)*100\n    #convert missing_stat into dataframe\n    prod_count = pd.DataFrame(missing_stat.sort_index())\n    plt.figure()\n    #plot in barplot\n    sns.barplot(x=missing_stat.index, y=missing_stat.values, alpha=0.8)\n    plt.title('Percent Missing')\n    plt.ylabel('Missing', fontsize=12)\n    plt.xlabel('Features', fontsize=12)\n    plt.xticks(rotation=90)\n    plt.show()\n    \ndef draw_num_plot(df,column,col):\n    '''Draw KDE plot for given dataset and particular column\n    Inputs: Pass dataframe and particular column and also pass color for making interactive map\n    '''\n    plt.figure(figsize=(15,8))\n    mean=df[column].mean()\n    median=df[column].median()\n    sns.axes_style(\"dark\")\n    ax=sns.kdeplot(data=df, x=column,fill=True,color=col)\n    ax.axvline(mean, color='crimson', linestyle='dotted')\n    ax.axvline(median, color='g', linestyle='-')\n    plt.legend({'Mean':mean,'Median':median})\n    plt.show()\n    \n\ndef q_q_plot(df,column):\n    '''Check data column follow normal distribution or not by using Q-Q plot\n    '''\n    data = df[column]\n    # q-q plot\n    plt.figure(figsize=(15,8))\n    qqplot(data, line='s')\n    \n    plt.show()\n\ndef draw_correlation_matrix(df):\n    plt.figure(figsize=(18,6))\n    #find correlation between data columns\n    corrMatrix = df.corr()\n    #plot by using heatmap\n    sns.heatmap(corrMatrix,annot = True, vmin=-1, vmax=1, center= 0)\n    plt.show()\n    ","ce4da011":"#change the date format\ntrain['date'] = pd.to_datetime(train['date'], format = \"%Y%m%d\")\nget_dataset_information(train)","daf3d569":"get_dataset_information(test)","9af1b4e7":"get_dataset_information(sub)","57f91c87":"award=pd.read_csv(\"..\/input\/mlb-player-digital-engagement-forecasting\/awards.csv\")\nget_dataset_information(award)","df2bd8fa":"from collections import Counter\ndef find_common_words_and_count(dataframe,col_name):\n    dataframe['temp_list'] = dataframe[col_name].head(30)\n    top = Counter(dataframe[col_name])\n    temp = pd.DataFrame(top.most_common(50))\n    temp.columns = ['Common_words','count']\n    temp.style.background_gradient(cmap='Green')\n    return temp\n#find_common_words_and_count(award,'awardName')\nimport plotly.express as px\nfig = px.bar(find_common_words_and_count(award,'awardName'), x=\"count\", y=\"Common_words\", title='Top 30 AwardNames', orientation='h', \n             width=1000, height=700,color='Common_words')\nfig.show()\n\nfig = px.treemap(find_common_words_and_count(award,'awardName'), path=['Common_words'], values='count',title='Top 30 AwardNames')\nfig.show()","a7e05efe":"from plotly.offline import init_notebook_mode, iplot \ntrace1 = go.Bar(\n                    y=award['playerName'].value_counts().index[0:20],\n                    x =award['playerName'].value_counts(sort=True).values[0:20],\n                    orientation='h',\n                    marker = dict(color='plum',\n                                 line=dict(color='skyblue',width=1)),\n                    text = train.index)\ndata = [trace1]\nlayout = go.Layout(barmode = \"group\",title=\"playerName\",width=800, height=500, \n                       xaxis= dict(title=\"playerName\"),\n                       yaxis=dict(autorange=\"reversed\"),\n                       showlegend=False)\nfig = go.Figure(data = data, layout = layout)\niplot(fig)","f7548aa9":"labels = award['playerName'].value_counts().index[0:20]\nvalues =award['playerName'].value_counts().values[0:20]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.show()","57a09906":"players=pd.read_csv(\"..\/input\/mlb-player-digital-engagement-forecasting\/players.csv\")\nget_dataset_information(players)","058bd26f":"labels = players['birthCountry'].value_counts().index[0:20]\nvalues =players['birthCountry'].value_counts().values[0:20]\n\nfig = go.Figure(data=[go.Pie(labels=labels, values=values, hole=.3)])\nfig.update_layout(\n    title_text=\"Top 20 Countries\",\n   )\nfig.show()","dd287219":"team=pd.read_csv(\"..\/input\/mlb-player-digital-engagement-forecasting\/teams.csv\")\nget_dataset_information(team)","113307e5":"# Train File:\nThis contains data on MLB players active at some point since 2018. Predictions are only scored for those players active in 2021,but previous seasons\u2019 players are included here to provide more data for exploration and modeling purposes.\n","66376134":"- \"nextDayPlayerEngagement\": Nested JSON containing all modeling targets from the following day.","3df1542e":"# What are The most common awardName?","080d267d":"- 1. No doubt MLB is an American professional baseball organization so the Major contribution also from USA but some players are also coming from other parts also.","56a61f9b":"![image.png](attachment:d6fe2666-e0e3-45ea-86af-7aa79347fa41.png)\n# Introduction:\nMajor League Baseball (MLB) is an American professional baseball organization and the oldest of the major professional sports leagues in the United States and Canada. \nThe sport has a long history of being numbers-driven. Nearly every day from at least April through October, baseball fans watch, read, and search for information about players.MLB continues its leadership using technology to engage fans and provide new fans innovative ways to experience America\u2019s Favorite Pastime.\n\n# Problem Statement:\nPredict how fans engage with MLB players\u2019 with help of digital content on a daily basis for a future date range. We\u2019ll have access to player performance data, social media data, and team factors like market size.So forecast four different measures of engagement (target1-target4) for a subset of MLB players who are active in the 2021 season.\n\n# Data:\nThe data contains a set of static files that do not change with time\n- 1.players.csv\n- 2.teams.csv\n- 3.seasons.csv\n- 4.awards.csv\n- daily data (train.csv) which is grouped by day.\n\nWhen predicting on a given date, we are forecasting the target variables for the next day (i.e. for date d, you're predicting the engagement for day d+1).\n","d24e1f1e":"# Work in Progress"}}