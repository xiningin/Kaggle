{"cell_type":{"1f882efc":"code","b7c32d72":"code","3f1f6cd0":"code","e1f8ce25":"code","e3a4cf4a":"code","27fa22db":"code","5658f480":"code","a4f17abb":"code","5021f524":"code","d5a05f5a":"code","cb4a69a9":"code","d526a461":"code","af7d0f8b":"code","26c8efe2":"code","c9157719":"code","f2fece74":"code","d129acfe":"code","69b056f0":"code","07cf82ff":"code","8384a7e3":"code","a14cacc4":"code","dd80336e":"code","87b3f864":"code","2fc12ad2":"code","9c06c493":"code","812a6db0":"code","8e4af6de":"code","c9937b58":"code","a3dd5026":"code","0ddc90ec":"code","421a89ea":"code","38a7dd33":"code","8fd19b13":"code","59d6c33a":"markdown","82c8f031":"markdown","83459c42":"markdown","0fdd4ea6":"markdown","969e35e8":"markdown","4a750394":"markdown","c98d7dfb":"markdown","040b78fb":"markdown","86cdaaeb":"markdown","ff4367f3":"markdown","02a7a196":"markdown","b8d31a16":"markdown","f8ba39d6":"markdown","0de57570":"markdown","165da82e":"markdown","6b398f72":"markdown","ef2c34f6":"markdown","661a12a3":"markdown","d9b528ed":"markdown","ef70a1b7":"markdown","0fec0c6e":"markdown","071ca4e1":"markdown","6802c0cf":"markdown","2aec6099":"markdown","9d635c0c":"markdown","3c03fd2c":"markdown"},"source":{"1f882efc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","b7c32d72":"import seaborn as sns\nimport matplotlib.pyplot as plt","3f1f6cd0":"data=pd.read_csv('..\/input\/marketing-data\/marketing_data.csv')\npd.set_option('display.max_columns', 30)\ndata.head()","e1f8ce25":"data.isna().sum()","e3a4cf4a":"data.loc[data[' Income '].isna()]","27fa22db":"(data[' Income '].isna().sum()\/data.shape[0])*100","5658f480":"clean_data=data.dropna()","a4f17abb":"clean_income=clean_data[' Income '].str.replace('$', '').str.replace(',', '').astype('float')\n","5021f524":"clean_data['clean_income']=clean_income","d5a05f5a":"clean_data.drop(' Income ', axis=1, inplace=True)","cb4a69a9":"clean_data.head(10)","d526a461":"newd=data.dropna()\nimport seaborn as sns\nsns.boxplot(x=newd.Education, y=clean_data.clean_income)","af7d0f8b":"clean_data.loc[clean_data.clean_income>600000]","26c8efe2":"clean_data.drop(index=527, inplace=True)","c9157719":"fig, axs=plt.subplots(1,2, figsize=(10,5))\nsns.boxplot(x=newd.Education, y=clean_data.clean_income, ax=axs[0])\nsns.boxplot(x=newd.Country, y=clean_data.clean_income, ax=axs[1])","f2fece74":"data[' Income '].loc[data.loc[(data.Education=='PhD') & (data[' Income '].isna())].index]=58000\ndata[' Income '].loc[data.loc[(data.Education=='Graduation') & (data[' Income '].isna())].index]=50000\ndata[' Income '].loc[data.loc[(data.Education=='Master') & (data[' Income '].isna())].index]=55000\ndata[' Income '].loc[data.loc[(data.Education=='2n Cycle') & (data[' Income '].isna())].index]=48000\n","d129acfe":"data.isna().sum()","69b056f0":"clean_income=data[' Income '].str.replace('$', '').str.replace(',', '').astype('float')\ndata['clean_income']=clean_income\ndata.drop(' Income ', axis=1, inplace=True)\n#data.drop(index=527, inplace=True)","07cf82ff":"data.dtypes","8384a7e3":"data[['Education', 'Marital_Status','Dt_Customer','Country']]","a14cacc4":"from sklearn.preprocessing import OneHotEncoder\nCat_c=['Education', 'Marital_Status','Country']\n#Cat_c=['Education']\nfor items in Cat_c:\n    le=OneHotEncoder()\n    t=le.fit_transform(data[[items]]).toarray()\n    a=data[items].unique()\n    indexs=np.unique(a, return_index=True)[1]\n    col=[a[indexs] for index in sorted(indexs)]\n    data=pd.concat([data, pd.DataFrame(t, columns=col[1])], axis=1).drop([items],axis=1)","dd80336e":"pd.set_option('display.max_columns', 50)\ndata.head(10)","87b3f864":"data['Dt_Customer_n']=pd.to_datetime(data.Dt_Customer)\ndata=data.drop(['Dt_Customer'], axis=1)","2fc12ad2":"pd.set_option('display.max_column', 50)\ndata.head()","9c06c493":"data.loc[data.clean_income>600000]","812a6db0":"data=data.drop(index=527)","8e4af6de":"fig, axs = plt.subplots(1,2)\nsns.distplot(data.clean_income, ax=axs[0])\nsns.distplot(data.Year_Birth, ax=axs[1])","c9937b58":"data.loc[data.Year_Birth<1910]","a3dd5026":"data=data.drop(index=[513, 827, 2233])","0ddc90ec":"fid, axs=plt.subplots(2,3, figsize=(14,14))\nsns.scatterplot( x='clean_income',y='MntMeatProducts', data=data, ax=axs[0, 0])\nsns.scatterplot( x='clean_income',y='MntWines', data=data, ax=axs[0, 1])\nsns.scatterplot( x='clean_income',y='MntFishProducts', data=data, ax=axs[0, 2])\nsns.scatterplot( x='clean_income',y='MntSweetProducts', data=data, ax=axs[1, 0])\nsns.scatterplot( x='clean_income',y='MntGoldProds', data=data, ax=axs[1, 1])\nsns.scatterplot( x='clean_income',y='MntFruits', data=data, ax=axs[1, 2])","421a89ea":"data=data.drop(index=data[data.clean_income>150000].index)","38a7dd33":"fid, axs=plt.subplots(2,3, figsize=(14,14))\nsns.scatterplot( x='clean_income',y='MntMeatProducts', data=data, ax=axs[0, 0])\nsns.scatterplot( x='clean_income',y='MntWines', data=data, ax=axs[0, 1])\nsns.scatterplot( x='clean_income',y='MntFishProducts', data=data, ax=axs[0, 2])\nsns.scatterplot( x='clean_income',y='MntSweetProducts', data=data, ax=axs[1, 0])\nsns.scatterplot( x='clean_income',y='MntGoldProds', data=data, ax=axs[1, 1])\nsns.scatterplot( x='clean_income',y='MntFruits', data=data, ax=axs[1, 2])","8fd19b13":"fig, axs=plt.subplots(1,2, figsize=(14,7))\nsns.boxplot(x='Kidhome',y='clean_income', data=data, ax=axs[0])\nsns.boxplot(x='Teenhome',y='clean_income', data=data, ax=axs[1])\n","59d6c33a":"We found a better way to deal with the NaN value so lets replace them with the average values based on the Eductaion","82c8f031":"Sometimes, NaN value means there is no value for that specific feature. For instance, when someone does not have any income, they may write NaN for that, which means NaN in this case is zero (no income); or, when a house does not have a pool, we may see NaN for the pool record, which means no pool. However, in this case, NaN values seems to be missed and it does not mean \"there is no income\" or \"income is zero\". ","83459c42":"Our cleaned data is:","0fdd4ea6":"Fist we need to clean the Income column. We have \"$\" and \",\" in the data which should be removed","969e35e8":"Now do the same cleaning procedure on \"Income\" column: ","4a750394":"As can be seen from the figures, amount of different products purchasing is exponentially increasing by the incom. There are a few obvious outliners, which must be removed.","c98d7dfb":"We do not want to change the original data, so we are copying non-NaN values in a new dataset named clean_data","040b78fb":"Now, we are going to change the DT_Customer to a date_times which python can read:","86cdaaeb":"Since this is just one record and the income is not the norm of income for graduate we can delete it as an outlier","ff4367f3":"Wow, it seems some people get more than 600000 after graduation. Good for them :). Lets see who is this lucky person :)","02a7a196":"# Method1: Deleting the NaN values","b8d31a16":"Do we have any Year_Birth before 1910?! wow","f8ba39d6":"#  Dealing with Categorical features","0de57570":"Only about one percent of the data are null values, so we may want to drop them. However, before complate dropping of null values, lets check the relation btw different features and the income value. We may find a way to guess the missing values. Hence, save the non-NaN values in a clean_data variable.","165da82e":"First thing first! lets import our data and quickly check it:","6b398f72":"Are there any null values or outliers? ","ef2c34f6":"Now, lets convert these categorical objects to some meaningful data:","661a12a3":"So, it seems the country does not have too much effect on the income. On the other hand, as expected, PhD on the average geeting more money than Basic!! One way to replace the NaN values can be based on the education. For example, if someone have graduation, we can replace income with the average of graduaction income which is 50000. ","d9b528ed":"Task Details\nYou're a marketing analyst and you've been told by the Chief Marketing Officer that recent marketing campaigns have not been as effective as they were expected to be. You need to analyze the data set to understand this problem and propose data-driven solutions.\n\nExpected Submission\nSubmit a well documented notebook with these three sections:\n\nSection 01: Data Exploration\nAre there any null values or outliers? How will you wrangle\/handle them?\nAre there any variables that warrant transformations?\nAre there any useful variables that you can engineer with the given data?\nDo you notice any patterns or anomalies in the data? Can you plot them?\n","ef70a1b7":"As can be seen, in the \"Income\" column we have some null values. Lets check it closer:","0fec0c6e":"Now, we are going to replace \" Income \" column with \"clean_income\"","071ca4e1":"It seems that no kids at home families have an average income more than one and two kids. On the other hand, no teenhome has an average lower income than one and two teenhome.","6802c0cf":"Anyway, lets check how much missed data we have for \" Income \" column","2aec6099":"# Method 2: Use average values, based on \"Education\" columns","9d635c0c":"We have fairly normal distribution for income and Year_birth:","3c03fd2c":"Lest check the most affected parameters on Income"}}