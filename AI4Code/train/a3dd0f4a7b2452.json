{"cell_type":{"f6a95aaf":"code","9a366feb":"code","435cc016":"code","0197e7b8":"code","c4410cc1":"code","1423a7e4":"code","149be757":"code","edddabc4":"code","b14fb464":"code","5354fe3a":"code","1bb3fd48":"code","3c696515":"code","000ad8c3":"code","6bccacc3":"code","6a3de5c3":"code","c5027096":"code","83062b4d":"code","071e79f5":"code","4423a114":"code","b66b7107":"code","a2044f15":"code","26471e8e":"code","9f5800f0":"code","bfe9147f":"code","da5e3cfe":"code","99076f49":"code","1a33feef":"code","257564cc":"code","e94fe3b5":"markdown","a22243ce":"markdown","6643063a":"markdown","bacc6bb7":"markdown","e4991e3f":"markdown","69f497fc":"markdown","5e021ee5":"markdown","02685669":"markdown"},"source":{"f6a95aaf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9a366feb":"import numpy as np\nimport pandas as pd","435cc016":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\nsns.set_context('notebook', font_scale=1.15)\n%matplotlib inline","0197e7b8":"df = pd.read_csv('..\/input\/montcoalert\/911.csv')","c4410cc1":"df.info()","1423a7e4":"df.head(3)","149be757":"df['zip'].value_counts().head(5)","edddabc4":"df['twp'].value_counts().head(5)","b14fb464":"df['title'].nunique()","5354fe3a":"df['Reason'] = df['title'].apply(lambda title: title.split(':')[0])","1bb3fd48":"df['Reason'].value_counts()","3c696515":"sns.countplot(x = 'Reason', \n              data = df, \n              palette = 'twilight')","000ad8c3":"type(df['timeStamp'].iloc[0])","6bccacc3":"df['timeStamp'] = pd.to_datetime(df['timeStamp'])\ndf['Hour'] = df['timeStamp'].apply(lambda time: time.hour)\ndf['Month'] = df['timeStamp'].apply(lambda time: time.month)\ndf['Day of Week'] = df['timeStamp'].apply(lambda time: time.dayofweek)\n\ndmap = {0:'Mon',1:'Tue',2:'Wed',3:'Thu',4:'Fri',5:'Sat',6:'Sun'}\ndf['Day of Week'] = df['Day of Week'].map(dmap)","6a3de5c3":"sns.countplot(x='Day of Week',data=df,hue='Reason',palette='twilight')\n\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","c5027096":"sns.countplot(x='Month',data=df,hue='Reason',palette='twilight')\n\n# To relocate the legend\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)","83062b4d":"# It is missing some months! 9,10, and 11 are not there.\n\nbyMonth = df.groupby('Month').count()\nbyMonth.head()","071e79f5":"# Could be any column\nbyMonth['twp'].plot(color='purple')","4423a114":"plt.figure(figsize=(12,4))\ndf['Date']=df['timeStamp'].apply(lambda t: t.date())\ndf.groupby('Date').count()['twp'].plot(color='purple')\nplt.tight_layout()","b66b7107":"plt.figure(figsize=(12,4))\ndf[df['Reason']=='Traffic'].groupby('Date').count()['twp'].plot(color='purple')\nplt.title('Traffic')\nplt.tight_layout()","a2044f15":"plt.figure(figsize=(12,4))\ndf[df['Reason']=='Fire'].groupby('Date').count()['twp'].plot(color='purple')\nplt.title('Fire')\nplt.tight_layout()","26471e8e":"plt.figure(figsize=(12,4))\ndf[df['Reason']=='EMS'].groupby('Date').count()['twp'].plot(color='purple')\nplt.title('EMS')\nplt.tight_layout()","9f5800f0":"dayHour = df.groupby(by=['Day of Week','Hour']).count()['Reason'].unstack()\ndayHour.head()","bfe9147f":"plt.figure(figsize=(12,6))\nsns.heatmap(dayHour,cmap='viridis')","da5e3cfe":"sns.clustermap(dayHour,cmap='bone')","99076f49":"dayMonth = df.groupby(by=['Day of Week','Month']).count()['Reason'].unstack()\ndayMonth.head()","1a33feef":"plt.figure(figsize=(12,6))\nsns.heatmap(dayMonth,cmap='viridis')","257564cc":"sns.clustermap(dayMonth,cmap='plasma')","e94fe3b5":"## Sample Questions\n### Top 5 zipcodes for 911 calls","a22243ce":"### Create 3 separate plots with each representing a Reason for the 911 call","6643063a":"### The most common Reason for a 911 call","bacc6bb7":"### Number of unique title codes","e4991e3f":"### Create 3 new columns called Hour, Month, and Day of Week","69f497fc":"### Top 5 townships (twp) for 911 calls","5e021ee5":"### Heatmaps & Clustermaps","02685669":"## Creating New Features\n### Reason: EMS, Fire, and Traffic"}}