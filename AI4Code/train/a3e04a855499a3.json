{"cell_type":{"2b7441b9":"code","ab08e764":"code","6ec1b8e3":"code","b9d68a6f":"code","45973e9c":"code","e58085a7":"code","42fc9682":"code","3a739abf":"code","6349fa7c":"code","3fea409e":"code","3b83188f":"code","9b03f04f":"code","580006d8":"code","1f0685d6":"code","6eb96d4f":"code","353701d4":"code","dd6c9957":"code","2097153c":"code","5a4b0dac":"code","b925cd35":"code","497099e4":"code","dced89b6":"code","4f2c7daa":"code","675158cd":"code","2258446d":"code","05faf253":"code","09a430b1":"code","0ada9ff1":"code","c7f13701":"code","01d7054c":"code","e71897a5":"code","df8ffd75":"code","0475e6a2":"markdown","7b05d6b2":"markdown","c406376c":"markdown","081d0ab2":"markdown","b3df2cd0":"markdown","de03c401":"markdown","9cea6808":"markdown","7a136a5d":"markdown","e2b79b6b":"markdown","bedf1158":"markdown","dc19e73d":"markdown","5a3dfe0c":"markdown","5c629616":"markdown","b246ea47":"markdown"},"source":{"2b7441b9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport math\n\nimport os\nfrom subprocess import check_output\n\nimport re\nprint(\"Setup Complete\")","ab08e764":"path_data = '..\/input\/FilmTV Dataset - ENG.csv'\nfilm_data = pd.read_csv(path_data, index_col='filmtv_ID')\nfilm_data.head()","6ec1b8e3":"film_data.describe()","b9d68a6f":"plt.figure(figsize=(15,10))\nplt.title('Film TV by the year', size=20)\nsns.distplot(film_data.year, kde=False, color=plt.cm.cool(0.99))\nplt.ylabel('nr. of Movie', size=15)\nplt.xlabel('year',size=15)\nplt.axis([1911, 2018, 0, 2800])\nplt.xticks(np.arange(1910, 2018, step=5),rotation=45, ha='right')\nplt.show()","45973e9c":"plt.figure(figsize=(15,10))\nplt.title('Trend of production', size=20)\nsns.distplot(film_data.year, kde=True, color=plt.cm.cool(0),bins=7)\nplt.ylabel('nr. of Movie', size=15)\nplt.xlabel('year',size=15)\nplt.axis([1911, 2010, 0, 0.03])\nplt.xticks(np.arange(1910, 2015, step=5),rotation=45, ha='right')\nplt.show()","e58085a7":"sns.jointplot(x=film_data['year'], y=film_data['avg_vote'], color = plt.cm.cool(0.99),\n              kind=\"kde\", cmap=\"cool\").fig.set_size_inches(10,10,)","42fc9682":"film_data['genre'].fillna('Unknow',inplace=True)\nfilm_data['genre'].unique()","3a739abf":"plt.figure(figsize=(15,10))\nplt.title('Film TV by the genre', size=20)\nsns.barplot(x=film_data.genre.value_counts().index, y=film_data.genre.value_counts(), palette=\"cool\")\nplt.ylabel('nr. of Movie', size=15)\nplt.xlabel('genre',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","6349fa7c":"list_GOOD_or_BAD = []\nfor element in film_data['avg_vote']:\n    if element > 6:\n        list_GOOD_or_BAD.append('GOOD')\n    else:\n        list_GOOD_or_BAD.append('BAD')\nfilm_data['rating'] = list_GOOD_or_BAD\nfilm_data.head()","3fea409e":"plt.figure(figsize=(15,10))\nsns.scatterplot(x=film_data['year'], y=film_data['avg_vote'], hue=film_data['rating'], \n                palette=[plt.cm.cool(0), plt.cm.cool(0.99)])\nplt.show()","3b83188f":"sns.lmplot(x='year', y='avg_vote', hue='rating',\n           data=film_data,  palette=[plt.cm.cool(0), plt.cm.cool(0.99)]).fig.set_size_inches(10,10,)","9b03f04f":"sns.pairplot(film_data, hue='rating', height=5, palette='cool')","580006d8":"decade = []\nfor element in film_data['year']:\n    if element < 1920:\n        decade.append(1910)\n    else:\n        decade.append(int((math.ceil(element \/ 10.0)) * 10)-10)\nabs_vote = []\nfor element in film_data['avg_vote']:\n    abs_vote.append(int(element))\ndz={'1910':0, '1920':0, '1930':0, '1940':0, '1950':0, '1960':0, '1970':0, '1980':0, '1990':0, '2000':0, '2010':0}\nfor element in dz:\n    dz[element]={'0':0, '1':0, '2':0, '3':0, '4':0, '5':0, '6':0, '7':0, '8':0, '9':0}\nc=0\nwhile c<len(decade):\n    dz[str(decade[c])][str(abs_vote[c])]+=1\n    c+=1\ndf_decade=pd.DataFrame(dz)\ndf_decade=df_decade.replace(0, np.nan)\n    ","1f0685d6":"df_decade","6eb96d4f":"plt.figure(figsize=(15,12))\nplt.title(\"Heatmap of absolute quantity avg_vote for decade\")\nsns.heatmap(data=df_decade, annot=True, cmap='cool')\nplt.xlabel(\"Decade\")\nplt.ylabel(\"avg_vote\")\nplt.show()","353701d4":"df_decade.sum(axis = 0, skipna = True)","dd6c9957":"df_decade_prop=df_decade.copy()\ndf_decade_prop['1910']=df_decade_prop['1910']\/91\ndf_decade_prop['1920']=df_decade_prop['1920']\/326\ndf_decade_prop['1930']=df_decade_prop['1930']\/1206\ndf_decade_prop['1940']=df_decade_prop['1940']\/1809\ndf_decade_prop['1950']=df_decade_prop['1950']\/3206\ndf_decade_prop['1960']=df_decade_prop['1960']\/3969\ndf_decade_prop['1970']=df_decade_prop['1970']\/4067\ndf_decade_prop['1980']=df_decade_prop['1980']\/5277\ndf_decade_prop['1990']=df_decade_prop['1990']\/8306\ndf_decade_prop['2000']=df_decade_prop['2000']\/9413\ndf_decade_prop['2010']=df_decade_prop['2010']\/9237\ndf_decade_prop=df_decade_prop.replace(0, np.nan)\ndf_decade_prop","2097153c":"plt.figure(figsize=(15,12))\nplt.title(\"Heatmap of proportional avg_vote for decade\")\nsns.heatmap(data=df_decade_prop, annot=True, cmap='cool')\nplt.xlabel(\"Decade\")\nplt.ylabel(\"avg_vote\")\nplt.show()","5a4b0dac":"genre_value=pd.crosstab(film_data.genre,film_data.rating)\ngenre_value","b925cd35":"group_names=film_data.genre.value_counts().head(10).index\ngroup_size=film_data['genre'].value_counts().head(10)\nsubgroup_names=['GOOD','BAD','GOOD','BAD','GOOD','BAD','GOOD','BAD','GOOD','BAD',\n               'GOOD','BAD','GOOD','BAD','GOOD','BAD','GOOD','BAD','GOOD','BAD']\nsz=[]\nfor element in group_names:\n    sz.append(genre_value.loc[element]['GOOD'])\n    sz.append(genre_value.loc[element]['BAD'])\nsubgroup_size=sz\n \n# Create colors\na, b=[plt.cm.cool, 'grey']\n\n# First Ring (outside)\nfig, ax = plt.subplots()\nax.axis('equal')\nmypie, _ = ax.pie(group_size, radius=4, labels=group_names, \n                  colors=[a(0.05),a(0.1),a(0.15),a(0.2),a(0.25),a(0.3),a(0.35),a(0.4),a(0.45),a(0.5)] )\nplt.setp( mypie, width=1, edgecolor='white')\n \n# Second Ring (Inside)\nmypie2, _ = ax.pie(subgroup_size, radius=3, labels=subgroup_names, labeldistance=0.83, \n                   colors=[a(0.55),b,a(0.60),b,a(0.65),b,a(0.70),b,a(0.75),b,\n                           a(0.80),b,a(0.85),b,a(0.90),b,a(0.95),b,a(1.00),b,])\nplt.setp( mypie2, width=0.4, edgecolor='white')\nplt.margins(0,0)\n \n# show it\nplt.show()\n","497099e4":"film_data.actors.fillna('unknow', inplace=True)\nfilm_data.actors.replace('', 'unknow', inplace=True)\nlist_actors=[]\nfor element in film_data.actors:\n    tmp=element.split(', ')\n    list_actors.append(tmp)\nfilm_data.director.fillna('unknow', inplace=True)\nfilm_data.director.replace('', 'unknow', inplace=True)\nlist_directors=[]\nfor element in film_data.director:\n    tmp=element.split(', ')\n    list_directors.append(tmp)","dced89b6":"n = film_data['actors']\nfilm_data=film_data.drop(['actors'], axis=1)\nfilm_data['actors'] = list_actors\nfilm_data['directors'] = list_directors\nfilm_data.head()","4f2c7daa":"all_dir=[]\nfor element in film_data['directors']:\n    for name in element:\n        if name != '':\n            all_dir.append(name)\ndirectors_names=set(all_dir)\nall_act=[]\nfor element in film_data['actors']:\n    for name in element:\n        if name != '':\n            all_act.append(name)\nactors_names=set(all_act)","675158cd":"diz_directors={}\nfor element in all_dir:\n    if element != 'unknow':\n        if element in diz_directors:\n            diz_directors[element]+=1\n        else:\n            diz_directors[element]=1\ndiz_actors={}\nfor element in all_act:\n    if element != 'unknow':\n        if element in diz_actors:\n            diz_actors[element]+=1\n        else:\n            diz_actors[element]=1","2258446d":"diz_directors_ord=sorted(diz_directors.items(), key=lambda kv: kv[1], reverse=True)\ndiz_actors_ord=sorted(diz_actors.items(), key=lambda kv: kv[1], reverse=True)","05faf253":"top_dir_x=[]\nfor element in diz_directors_ord:\n    top_dir_x.append(element[0])\ntop_dir_y=[]\nfor element in diz_directors_ord:\n    top_dir_y.append(element[1])\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most active directors', size=20)\nsns.barplot(x=top_dir_x[:20], y=top_dir_y[:20], palette=\"cool\")\nplt.ylabel('nr of movie', size=15)\nplt.xlabel('directors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","09a430b1":"top_act_x=[]\nfor element in diz_actors_ord:\n    top_act_x.append(element[0])\ntop_act_y=[]\nfor element in diz_actors_ord:\n    top_act_y.append(element[1])\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most active actors', size=20)\nsns.barplot(x=top_act_x[:20], y=top_act_y[:20], palette=\"cool\")\nplt.ylabel('nr of movie', size=15)\nplt.xlabel('actors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","0ada9ff1":"number_of_movie=30\ndict_direct_avg={}\nfor element in film_data.index:\n    for element2 in film_data['directors'][element]:\n        if element2 in diz_directors:\n            if diz_directors[element2]>=number_of_movie:\n                if film_data['rating'][element]=='GOOD':\n                    if element2 in dict_direct_avg:\n                        dict_direct_avg[element2]+=1\n                    else:\n                        dict_direct_avg[element2]=1\n                else:\n                    if element2 in dict_direct_avg:\n                        dict_direct_avg[element2]-=1\n                    else:\n                        dict_direct_avg[element2]=-1\ndict_direct_avg2={}\nfor element in dict_direct_avg:\n    dict_direct_avg2[element]=(dict_direct_avg[element])\/(diz_directors[element])\ndict_direct_avg_order=sorted(dict_direct_avg2.items(), key=lambda xc:xc[1], reverse=True)\n\ndict_act_avg={}\nfor element in film_data.index:\n    for element2 in film_data['actors'][element]:\n        if element2 in diz_actors:\n            if diz_actors[element2]>=number_of_movie:\n                if film_data['rating'][element]=='GOOD':\n                    if element2 in dict_act_avg:\n                        dict_act_avg[element2]+=1\n                    else:\n                        dict_act_avg[element2]=1\n                else:\n                    if element2 in dict_act_avg:\n                        dict_act_avg[element2]-=1\n                    else:\n                        dict_act_avg[element2]=-1\ndict_act_avg2={}\nfor element in dict_act_avg:\n    dict_act_avg2[element]=(dict_act_avg[element])\/(diz_actors[element])\ndict_act_avg_order=sorted(dict_act_avg2.items(), key=lambda xc:xc[1], reverse=True)\n   ","c7f13701":"print('20 most GOOD directors according the average with at least 30 movies shot')\ntop_dir_x=[]\nfor element in dict_direct_avg_order:\n    top_dir_x.append(element[0])\ntop_dir_y=[]\nfor element in dict_direct_avg_order:\n    top_dir_y.append(element[1])\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most GOOD directors', size=20)\nsns.barplot(x=top_dir_x[:20], y=top_dir_y[:20], palette=\"winter\")\nplt.ylabel('% of GOOD ratings', size=15)\nplt.xlabel('directors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","01d7054c":"print('20 most BAD directors according the average with at least 30 movies shot')\ntop_dir_x=[]\nfor element in dict_direct_avg_order:\n    top_dir_x.append(element[0])\ntop_dir_y=[]\nfor element in dict_direct_avg_order:\n    top_dir_y.append(-(element[1]))\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most BAD directors', size=20)\nsns.barplot(x=top_dir_x[-20:], y=top_dir_y[-20:], palette=\"inferno\")\nplt.ylabel('% of BAD ratings', size=15)\nplt.xlabel('directors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","e71897a5":"print('20 most GOOD actors according the average with at least 30 movies shot')\ntop_dir_x=[]\nfor element in dict_act_avg_order:\n    top_dir_x.append(element[0])\ntop_dir_y=[]\nfor element in dict_act_avg_order:\n    top_dir_y.append(element[1])\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most GOOD actors', size=20)\nsns.barplot(x=top_dir_x[:20], y=top_dir_y[:20], palette=\"winter\")\nplt.ylabel('% of GOOD ratings', size=15)\nplt.xlabel('actors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","df8ffd75":"print('20 most BAD actors according the average with at least 30 movies shot')\ntop_dir_x=[]\nfor element in dict_act_avg_order:\n    top_dir_x.append(element[0])\ntop_dir_y=[]\nfor element in dict_act_avg_order:\n    top_dir_y.append(-(element[1]))\n    \nplt.figure(figsize=(15,10))\nplt.title('20 Most BAD actors', size=20)\nsns.barplot(x=top_dir_x[-20:], y=top_dir_y[-20:], palette=\"inferno\")\nplt.ylabel('% of BAD ratings', size=15)\nplt.xlabel('actors',size=15)\nplt.xticks(rotation=45, ha='right')\nplt.show()","0475e6a2":"# LEGENDA\n\n- [CHAPTER 0: libraries](#a0)\n- [CHAPTER 1: the dataframe](#a1)\n- [CHAPTER 2: a first look](#a2)\n- [CHAPTER 3: the decade](#a3)\n- [CHAPTER 4: the genres](#a4)\n- [CHAPTER 5: who is a GOOD boy?](#a5)","7b05d6b2":"# CHAPTER 2: a first look <a name=\"a2\"><\/a>","c406376c":"**NOTE:** across the year the overall quality of the production it seems to getting worse. Get a closer look with the next chapter.","081d0ab2":"# CHAPTER 1: the dataframe <a name=\"a1\"><\/a>","b3df2cd0":"**NOTE: ** we assume as GOOD rating every avg_vote > 6.0. (the meaning is 5.8)","de03c401":"\n\n ![alt-text](https:\/\/www.filmtv.it\/public\/images\/logo-filmtv.png \"FilmTV.it\")","9cea6808":"# CHAPTER 3: the decade <a name=\"a3\"><\/a>","7a136a5d":"**NOTE:** the old movie are really better or is there some bias? I think the answer is: BIAS. Ther'are a lot of old movie that are re-evaluated by critics and public, and other new movie that need time to be accepted.","e2b79b6b":"**A NOTE:** the production of content good for this media start, obviously, from the beginnig of th 20th century and keeps growing but non linearly. We can assume the television as an 'everyday object' since '50, but the production does not seem to be growing in those years. We have to wait after 1990, in the middle of Blockbuster's period to have a great increase of the production. According to dataset description ther'is 50% of the production after 1995.","bedf1158":"**NOTE:** it has sense make so many Comedy, Thriller, Action, Horror, Adventure or Fantasy movie if they have so many BAD ratings? Maybe the meaning is that a BAD rating is not connected with bad revenues or the people that post on filmtv.it watch a lot of BAD movies and i like to watch it and say how they BAD are. ","dc19e73d":"# CHAPTER 4: the genres <a name=\"a4\"><\/a>","5a3dfe0c":"**A NOTE FOR ME:** actually my some of my favorite actors..","5c629616":"# CHAPTER 5: who is a GOOD boy? <a name=\"a5\"><\/a>","b246ea47":"# CHAPTER 0: libraries <a name=\"a0\"><\/a>"}}