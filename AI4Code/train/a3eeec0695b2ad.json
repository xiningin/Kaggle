{"cell_type":{"5ec178e0":"code","7f319f8f":"code","4d5c0797":"code","b27cd97c":"code","809ae8c2":"code","2d22340f":"code","21ac9608":"code","53d39e84":"code","8b3257b8":"code","75149bdb":"code","7ea175cd":"code","d210b10b":"code","3bbce0b7":"code","2b869a5f":"code","44ba9cb9":"code","215ab25f":"code","a8bb1c86":"code","84b9f81e":"code","5d1ae530":"code","40d42b16":"code","cfff4718":"code","65757227":"code","02a73349":"code","bee80569":"markdown","bdead3c9":"markdown","d5c0e578":"markdown","e46d0f11":"markdown","68fe91b1":"markdown","b1176b09":"markdown","9cd82cff":"markdown","2adc95cf":"markdown","68849946":"markdown","5dd1e19d":"markdown","85fee195":"markdown","dbaf2034":"markdown","4de81eba":"markdown","652452ea":"markdown","e3173b77":"markdown","4c6dd04b":"markdown","752b2a63":"markdown","3cf7acde":"markdown","b5f624fa":"markdown","ddb3e8c1":"markdown","641565bc":"markdown","466a583a":"markdown","0dc71364":"markdown","a1b8f513":"markdown","60ba488a":"markdown","ae1e7258":"markdown","1ff12b6d":"markdown","a9b09e49":"markdown"},"source":{"5ec178e0":"%matplotlib inline\nfrom fastai import *\nfrom fastai.vision import *\nimport pandas as pd\nimport matplotlib.image as mpimg","7f319f8f":"!ls ..\/input\/","4d5c0797":"data_path = Path(\"..\/input\/\")\nherlev_path = data_path\/\"herlev_pap_smear\"\nsipakmed_path = data_path\/\"sipakmed_fci_pap_smear\"","b27cd97c":"herlev_path.ls()","809ae8c2":"class_paths = herlev_path.ls()\nfor c in class_paths:\n    img_in_c_paths = get_image_files(c)\n    print(f\"Number of images in '{c.name}' : {len(img_in_c_paths)}\")","2d22340f":"sample_path = Path(\"..\/input\/herlev_pap_smear\/normal_superficiel\")\nimgs = sorted(get_image_files(sample_path))[:10]\n\nfor img_item in imgs:\n    img = open_image(img_item)\n    img.show()","21ac9608":"sample_path = Path(\"..\/input\/herlev_pap_smear\/normal_superficiel\")\nimgs = sorted(get_image_files(sample_path))\nimgs","53d39e84":"mask, img = imgs[:2]\nmask = open_image(mask)\nimg = open_image(img)\nmask.show()\nimg.show()","8b3257b8":"sipakmed_path.ls()","75149bdb":"classes = sipakmed_path.ls()\nclasses[0].ls()","7ea175cd":"one_class = classes[0]\none_class","d210b10b":"dat_and_img_files = sorted(one_class.ls())\ndat_and_img_files","3bbce0b7":"sample_data = dat_and_img_files[:3]\nsample_data","2b869a5f":"sample_img = sample_data[0]\nopen_image(sample_img)","44ba9cb9":"nuc_data = pd.read_csv(sample_data[1], header=None)\nnuc_data.head()","215ab25f":"cyto_data = pd.read_csv(sample_data[2], header=None)\ncyto_data.head()","a8bb1c86":"img = mpimg.imread(sample_img)\nplt.imshow(img)\nplt.scatter(nuc_data.iloc[:, 0], nuc_data.iloc[:, 1], c=\"red\")\nplt.scatter(cyto_data.iloc[:, 0], cyto_data.iloc[:, 1], c=\"green\")\nplt.show()","84b9f81e":"tfms = get_transforms(flip_vert=True, max_warp=0.0, max_zoom=0.)\nherlev_data_block = (ImageList.from_folder(herlev_path)\n                    .filter_by_func(lambda fname: \"-d\" not in fname.name)\n                    .split_by_rand_pct(valid_pct=0.2, seed=0)\n                    .label_from_func(lambda fname: \"abnormal\" if \"abnormal\" in fname.parent.name else \"normal\")\n                    .transform(tfms, size=128)\n                    .databunch(bs=16)\n                    .normalize(imagenet_stats))","5d1ae530":"herlev_data_block","40d42b16":"herlev_data_block.show_batch(rows=4, figsize=(10 ,10))","cfff4718":"def labelling_func(fname):\n    c = fname.parent.name\n    if \"abnormal\" in c:\n        return \"abnormal\"\n    elif \"benign\" in c:\n        return \"abnormal\"\n    else:\n        return \"normal\"\n\ntfms = get_transforms(flip_vert=True, max_warp=0.0, max_zoom=0.9)\n\nsipakmed_data_block = (ImageList.from_folder(sipakmed_path)\n                      .split_by_rand_pct(valid_pct=0.2, seed=42)\n                      .label_from_func(labelling_func)\n                      .transform(tfms, size=128)\n                      .databunch(bs=16)\n                      .normalize(imagenet_stats))","65757227":"sipakmed_data_block","02a73349":"sipakmed_data_block.show_batch(rows=4, figsize=(10, 10))","bee80569":"# Imports\nLet's import the required packages for our kernel","bdead3c9":"# Introduction\nLet's use Fastai library to load the data, create our model and define the performance metrics.","d5c0e578":"## Herlev dataset pipeline","e46d0f11":"Yes !!!. Let's display some images of this datablock","68fe91b1":"As you can see, the datasets are divided into two subsets.\n* ``herlev_pap_smear`` refers to the Herlev pap smear dataset\n* ``sipakmed_fci_pap_smear`` referes to the SipakMed pap smear single-cell dataset","b1176b09":"## TODO- Merging the datablock pipelines\nLet's merge both of these datablocks using the fastai library.","9cd82cff":"Alright, my intuition is correct. For data modelling, we'll ignore the mask images (as there is no codes file for each mask image).","2adc95cf":"Let's check if the datablock was built correctly","68849946":"Let's explore the ``abnormal_Koilocytotic`` class","5dd1e19d":"# Conclusion\nThis concludes our starter analysis. Let's see how creative you can get with my notebook for your own projects...","85fee195":"Looks cool. For starters, we will only be creating a data pipeline for classification. So, we'll ignore these ``.dat`` files.","dbaf2034":"Oh my God...it's a mixup. I can see there are ``.dat`` files and ``.bmp`` files. Out of these, the ``.bmp`` files are the image files. Let's do some more digging...","4de81eba":"## Exploring Herlev pap smear dataset\n``herlev_path`` contains the path of the Herlev pap smear dataset. Let's look what's inside","652452ea":"As you can see, there are total 5 classes in SipakMed dataset. The dataset is structured as an Imagenet-style dataset. That's pretty convenient !!. Let's check the images of one class ...","e3173b77":"We can see that for each image, there exists 2 ``.dat`` files. Let's check this intuition","4c6dd04b":"Okay, looks like they are coordinates of pixels that surround the nuclues region of the cell image.\nThe first column is the X coordinate and the second column is the Y coordinate.<br>What for the cytoplasm data?? Let's check that out...","752b2a63":"# Exploring the dataset","3cf7acde":"## Storing the paths of the datasets\nLet's store the paths of the respective datasets into variables","b5f624fa":"Let's draw both of the repsective coordinates data on the cell image","ddb3e8c1":"# Creating the data pipeline\nLet's use the data block API of the fastai library","641565bc":"Woohoo...let's plot the data","466a583a":"Wait, what's that?? There are segmentation masks as well !!!!. For each cell, there exists a segmentation mask named with a \"-d\" at the end of the filename. Let me show you..","0dc71364":"## Exploring SipakMed dataset\n``sipkamed_path`` contains the path of the Herlev pap smear dataset. Let's look what's inside","a1b8f513":"## See where the data is (using terminal).","60ba488a":"We've built the data pipeline. Let's check that out...","ae1e7258":"Let's look at some 10 images of a class, shall we...","1ff12b6d":"As you can see, there are total 7 classes in Herlev Pap Smear dataset. The dataset is structured as an Imagenet-style dataset. That's pretty convenient !!. Let's check the images inside...","a9b09e49":"## SipakMed dataset pipeline\nLet's built it for the SipakMed dataset"}}