{"cell_type":{"c38f46fa":"code","78e428ef":"code","0fbb5b94":"code","7d45550e":"code","1f2188a8":"code","a9ffa8d1":"code","2fb51191":"code","8fa1c8b9":"code","e7c8f536":"code","ffe74b3c":"code","698565bb":"code","2bc52a94":"code","945fec91":"code","3e84df87":"code","aa00ce07":"code","442ebe8f":"code","a8ce97d5":"code","82f9b281":"code","5c8db915":"code","446ae632":"code","10f1875d":"code","5a2f8716":"code","75c3f7b3":"code","3e16af25":"code","599d4e31":"code","f48ee363":"code","86f3ddb7":"code","8525cd8c":"code","d4a60501":"code","90ef01bd":"code","d982d33b":"code","de00fb4b":"code","21dfc0ed":"code","2e2fd4b3":"code","4fc4ed15":"code","c57d77cc":"code","f0d47f3d":"code","82fa9a52":"code","c1565e5b":"code","c547acb4":"code","0dfc1b95":"code","d2e4779d":"code","aca961bf":"code","91d44a13":"code","612d67f1":"code","b55eed68":"code","067c3f35":"code","f3e932e0":"code","101f1581":"code","8ad3fce5":"markdown","afc8b06a":"markdown","b90481bc":"markdown","76caed2d":"markdown","0ac6b9c2":"markdown","fe1b7faa":"markdown","a4c30591":"markdown","1ca5c829":"markdown","3a37eef6":"markdown","dc6032ec":"markdown","12facd7a":"markdown","25ff0a6f":"markdown","0f48d6ed":"markdown","6b5b2410":"markdown","e8af4c01":"markdown","bf028d40":"markdown","d7de74c9":"markdown","8d85edfb":"markdown","ef46efdc":"markdown","1097f712":"markdown","e54bc5c1":"markdown","89598bb7":"markdown","ed4806ea":"markdown","05e5edf0":"markdown","5f58fb6b":"markdown","ed4b98c8":"markdown","63ae4267":"markdown"},"source":{"c38f46fa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","78e428ef":"#import required library \n\nimport numpy as np\nimport pandas as pd\nfrom pandas import Series,DataFrame\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","0fbb5b94":"# read the dataset \n\ndf = pd.read_csv(\"..\/input\/salary-data-dataset-for-linear-regression\/Salary_Data.csv\")","7d45550e":"df.head()","1f2188a8":"#check number of rows and number of columns\ndf.shape     #30 rows and 2 columns","a9ffa8d1":"#check dataset information \n\ndf.info()","2fb51191":"df.describe()","8fa1c8b9":"#check any missing values\n\ndf.isnull().sum()","e7c8f536":"#any outliers\n\ndf.skew()","ffe74b3c":"df.kurt()","698565bb":"#check any correlation and covariance\n\ndf[['YearsExperience','Salary']].cov()","2bc52a94":"df.corr()","945fec91":"sns.heatmap(df.corr(),annot=True)\nplt.show()","3e84df87":"sns.pairplot(df)\nplt.show()","aa00ce07":"plt.plot(df, linestyle = '--', linewidth='5.7')\n\nplt.show()","442ebe8f":"plt.plot(df, linestyle = '--', linewidth='5.7', color='#FF1493')\n\nplt.show()","a8ce97d5":"df.plot.line(linestyle = ':', linewidth='3')\n\nplt.title('YearExperiene-VS-Salary')\nplt.show()","82f9b281":"\ndf = pd.DataFrame(data=df)\n\ndf.plot.line(x='Salary',linestyle = ':', linewidth='3')\n\nplt.title('YearExperiene-VS-Salary')\nplt.show()","5c8db915":"X=df.drop('Salary',axis=1)","446ae632":"y=df.Salary","10f1875d":"X.head()","5a2f8716":"y.head()","75c3f7b3":"from sklearn.model_selection import train_test_split","3e16af25":"X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0,test_size=0.30)","599d4e31":"print(X_train.shape)","f48ee363":"X_test.shape","86f3ddb7":"from sklearn.linear_model import LinearRegression","8525cd8c":"LR=LinearRegression()","d4a60501":"LR.fit(X_train,y_train)","90ef01bd":"LR.intercept_   # beta 0","d982d33b":"LR.coef_        # beta 1","de00fb4b":"y_pred=LR.predict(X_test)","21dfc0ed":"y_pred","2e2fd4b3":"y_test","4fc4ed15":"from sklearn import metrics","c57d77cc":"R2=metrics.r2_score(y_test,y_pred)","f0d47f3d":"R2","82fa9a52":"print(metrics.mean_absolute_error(y_test,y_pred))","c1565e5b":"print(metrics.mean_squared_error(y_test,y_pred))","c547acb4":"print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","0dfc1b95":"print(LR.predict([[5]])) ","d2e4779d":"error= y_test-y_pred","aca961bf":"error","91d44a13":"import statsmodels.api as smt\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf","612d67f1":"acf=plot_acf(error)\nplt.show()","b55eed68":"sns.distplot(error)\nplt.xlabel('residual')\nplt.show()","067c3f35":"sns.regplot(X,y)\nplt.show()","f3e932e0":"sns.scatterplot(x=y_pred,y=error)\nplt.xlabel('predicted values')\nplt.ylabel('residuals')\nplt.xlim([0,150000])\nplt.ylim([-8000,8000])\nsns.lineplot([0,150000],[0,0],color='blue')\nplt.show()","101f1581":"sns.heatmap(df.corr(),annot=True)\nplt.show()","8ad3fce5":"**Visualization**","afc8b06a":"**Multicollinearity**","b90481bc":"1. Indenpendent variable(X=YearsExperience) and Dependent variable(y=Salary)","76caed2d":"* **Types of Line Style**\n\nSyntax :- (data, ls='--')\n\n1. Draw a dotted line style use as ':'\n\n2. Draw a dashed line style use as '--'\n\n3. Draw a dashdot line style use as '-.'\n\n4. Draw a solid line style use as '-'  (by default)","0ac6b9c2":"* Here total 30 examples with no any missing values. \n\n* one columns is float and another is intger.","fe1b7faa":"**Linear Regression with Assumptions**\n\n1. Regression analysis is one of the most widely used methods for prediction.","a4c30591":"* Next Plot is Line Plot using data directly. ","1ca5c829":"**Types**\n\n*    There are many more techniques because the model is so well studied. \n\n**1. Simple Linear Regression**\n\nWith simple linear regression when we have a single input, we can use statistics to estimate the coefficients.\n\nThis requires that you calculate statistical properties from the data such as means, standard deviations, correlations and covariance. All of the data must be available to traverse and calculate statistics.\n\n\n**2. Ordinary Least Squares**\n\nWhen we have more than one input we can use Ordinary Least Squares to estimate the values of the coefficients.\n\nThe Ordinary Least Squares procedure seeks to minimize the sum of the squared residuals. This means that given a regression line through the data we calculate the distance from each data point to the regression line, square it, and sum all of the squared errors together.\n\nThis approach treats the data as a matrix and uses linear algebra operations to estimate the optimal values for the coefficients. It means that all of the data must be available and you must have enough memory to fit the data and perform matrix operations.\n\n**3. Gradient Descent**\n\nWhen there are one or more inputs you can use a process of optimizing the values of the coefficients by iteratively minimizing the error of the model on your training data.\n\nThis operation is called Gradient Descent and works by starting with random values for each coefficient. The sum of the squared errors are calculated for each pair of input and output values. A learning rate is used as a scale factor and the coefficients are updated in the direction towards minimizing the error. The process is repeated until a minimum sum squared error is achieved or no further improvement is possible.\n\nWhen using this method, you must select a learning rate (alpha) parameter that determines the size of the improvement step to take on each iteration of the procedure\n\n**4. Regularization**\n\nThere are extensions of the training of the linear model called regularization methods. \n\nThese seek to both minimize the sum of the squared error of the model on the training data (using ordinary least squares) but also to reduce the complexity of the model (like the number or absolute size of the sum of all coefficients in the model).\n\n*  Two popular examples of regularization procedures for linear regression are:\n\n**Lasso Regression:**\n        where Ordinary Least Squares is modified to also minimize the absolute sum of the coefficients (called L1 regularization).\n        \n        \n**Ridge Regression:**\n        where Ordinary Least Squares is modified to also minimize the squared absolute sum of the coefficients (called L2 regularization).\nThese methods are effective to use when there is collinearity in your input values and ordinary least squares would overfit the training data.","3a37eef6":"**Evaluation**","dc6032ec":"**Assumptions**","12facd7a":"**Prediction**","25ff0a6f":"1. Linear regression is a **linear model**, e.g. a model that assumes a linear relationship between the input variables (x) and the single output variable (y).\n\n2. More specifically, that y can be calculated from a linear combination of the input variables (x).\n\n3. When there is a **single input variable (x)**, the method is referred to as simple linear regression and When more than **one input variable** multiple input variables.\n\n4. Different techniques can be used to prepare or train the linear regression equation from data, the most common of which is called **Ordinary Least Squares**. It is common to therefore refer to a model prepared this way as Ordinary Least Squares Linear Regression or just Least Squares Regression.","0f48d6ed":"**EDA**","6b5b2410":"**Homoscedasticity**","e8af4c01":"**Normality**","bf028d40":"* Here I am explaining the linear regression algorithm with assumption.  ","d7de74c9":"**No Autocorrelation**","8d85edfb":"**Splitting the data**","ef46efdc":"1. * Here, clearly shows that linearly relationship between dependent and independent variable. ","1097f712":"* All values are approx. same","e54bc5c1":"**Linear Regression Equation:-**\n\n>                                 y = B0 + B1*x","89598bb7":"**Model Fitting**","ed4806ea":"**Independent and Dependent Variables**","05e5edf0":"1. The linear equation assigns one scale factor to each input value or column, called a coefficient and represented by the capital Greek letter Beta (B). \n\n2. One additional coefficient is also added, giving the line an additional degree of freedom (e.g. moving up and down on a two-dimensional plot) and is often called the intercept or the bias coefficient.\n\n3. In higher dimensions when we have more than one input (x), the line is called a plane or a hyper-plane.","5f58fb6b":"* **Type of Line Color**\n\nSyntax :- (data, color='r')\n\n1. Use any color for example, color='r', 'b', 'g'\n\n2. Alos use **Hexadecimal color values** \n          For Blue - #0000FF\n          For DarkGreen - #006400\n          For DarkRed - #8B000\n          For DeepPink - #FF1493","ed4b98c8":"**Linearity**","63ae4267":"**Plot a Specific Column**"}}