{"cell_type":{"17c3be68":"code","19bb539c":"code","89d6a6ad":"code","b60320c4":"code","f469bc60":"code","5373a310":"code","e671ef4a":"code","dcd0a7bc":"code","6294c217":"code","5a8a1057":"code","0405f482":"code","0e75ddab":"code","15060013":"code","1da5fc13":"code","5815c234":"code","f03e863a":"code","379f002a":"code","54b3b8af":"code","de600a5a":"code","3d640af8":"code","78414e0a":"code","47309f7a":"code","7ded9f20":"code","91674450":"code","9a310fc8":"code","1e5c22d9":"code","c40011e3":"code","a2bfc875":"code","af2aa4f6":"code","0af23d60":"code","07f94f9d":"code","adc49495":"code","47e00cb1":"code","ac5cd481":"code","3c48293b":"code","4dc1458f":"code","167a4cf6":"code","4ba83aca":"code","3ea461da":"code","41852dc1":"code","ac384308":"code","95e72bd7":"markdown","2a951f8a":"markdown","21f59af4":"markdown","b6b69903":"markdown","70ae8d81":"markdown","20a76b38":"markdown","0fab25dc":"markdown","54aed0b9":"markdown","10386dc6":"markdown","a4282c56":"markdown","5154a837":"markdown","b2f37291":"markdown","13a6af80":"markdown","d5dab367":"markdown","ba13b87f":"markdown","f46ccb34":"markdown","ce9325e1":"markdown","8ca189d0":"markdown","60cd168e":"markdown","ed0f98ad":"markdown","60bd0189":"markdown","2dbc730b":"markdown","98c30099":"markdown","0d7d59c8":"markdown","165319ec":"markdown","9ba99401":"markdown","b8c90000":"markdown","613bfc5a":"markdown","6c0ff510":"markdown","32a61dd8":"markdown","3838a414":"markdown","62ce4239":"markdown","2c16641b":"markdown","c9ea9801":"markdown","9970a07f":"markdown","cdf9b92f":"markdown","724f9ea5":"markdown","02feab26":"markdown"},"source":{"17c3be68":"# import the usual frameworks\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport collections\nimport warnings\n\nfrom IPython.core.display import display, HTML\nfrom sklearn.preprocessing import MinMaxScaler\n    \n# import plotly \nimport plotly\nimport plotly.figure_factory as ff\nimport plotly.graph_objs as go\nimport plotly.offline as py\nimport plotly.tools as tls\n\n# for color scales in plotly\nimport colorlover as cl \n\n# configure things\nwarnings.filterwarnings('ignore')\n\npd.options.display.float_format = '{:,.2f}'.format  \npd.options.display.max_columns = 999\n\npy.init_notebook_mode(connected=True)\n\n%load_ext autoreload\n%autoreload 2\n%matplotlib inline","19bb539c":"#!pip list\n# !pwd\n# !ls","89d6a6ad":"df = pd.read_csv(\n    '..\/input\/ds-job-listing-technology\/ds_job_listing_software.csv',\n    usecols=['Keyword','LinkedIn', 'Indeed', 'SimplyHired', 'Monster'],\n    skiprows=0,\n    nrows=37, \n    thousands=',',\n    index_col=0,\n   \n)\ndf","b60320c4":"df.info()","f469bc60":"df.describe()","5373a310":"scale = MinMaxScaler()\nscaled_df = pd.DataFrame(\n    scale.fit_transform(df), \n    columns = df.columns,\n    index = df.index)    ","e671ef4a":"scaled_df.head()","dcd0a7bc":"scaled_df['combined'] = scaled_df[[\"LinkedIn\", \"Indeed\", \"SimplyHired\", \"Monster\"]].mean(axis = 1)\nscaled_df.head()","6294c217":"num_sites = 8\n\ny_linkedin = scaled_df.iloc[:num_sites, 0]\ny_indeed = scaled_df.iloc[:num_sites, 1]\ny_monster = scaled_df.iloc[:num_sites, 2]\ny_simply = scaled_df.iloc[:num_sites, 3]\n\ny_linkedin","5a8a1057":"indeed = go.Bar(x=scaled_df.index, y=y_indeed, name = \"Indeed\")\nsimply = go.Bar(x=scaled_df.index, y=y_simply, name=\"SimplyHired\")\nmonster = go.Bar(x=scaled_df.index, y=y_monster, name=\"Monster\")\nlinked = go.Bar(x=scaled_df.index, y=y_linkedin, name=\"LinkedIn\")\n\ndata = [linked, indeed, simply, monster]\n\nlayout = go.Layout(\n    barmode='group',\n    title=\"Top Software in Job Listings for Data Scientists\",\n    xaxis={'title': 'Software'},\n    yaxis={'title': \"Scaled Listings\", 'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","0405f482":"p_s_df = scaled_df * 100\np_s_df = p_s_df.round(2)\np_s_df.columns = ['LinkedIn', 'Indeed', 'SimplyHired', 'Monster', 'Score']\np_s_df = p_s_df.sort_values(by=['Score'], ascending = False)\np_s_df.head()","0e75ddab":"p_s_df.rename(index = {'Microsoft Office': 'MS Office'}, inplace = True)\np_s_df","15060013":"p_s_df_20 = p_s_df.iloc[:20,:]\np_s_df_20","1da5fc13":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 20)\n\ndata = [\n    go.Bar(\n        x=p_s_df_20.index,          \n        y=p_s_df_20['Score'],\n        marker=dict(\n            colorscale='Jet',\n            color=color_s,\n        ),\n    )\n]\n\nlayout = {\n    'title': 'Top 20 Technology Skills in Data Scientist Job Listings',\n    #'xaxis': {'title': 'Technology'},\n    'yaxis': {'title': \"Score\"}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","5815c234":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 44)\n\ndata = [\n    go.Bar(\n        x=p_s_df.index,          \n        y=p_s_df['Score'],\n        marker=dict(\n            colorscale='Jet',\n            #cauto=True,\n            color=color_s,\n        ),\n        # text=p_s_df['Score'],\n        # textposition='outside',\n        # textfont=dict(size=10)\n    )\n]\n\nlayout = {\n    'title': 'Technology Skills in Data Scientist Job Listings',\n    #'xaxis': {'tickmode': 'linear'},\n    'yaxis': {'title': \"Score\"}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","f03e863a":"total_ds = {\n    'LinkedIn': 8610,\n    'Indeed': 5138,\n    'SimplyHired': 3829,\n    'Monster': 3746,\n}","379f002a":"for key, value in total_ds.items():\n    df[key + \" %\"] = df[key] \/ value * 100\ndf","54b3b8af":"df['avg_percent'] = df.iloc[:,-4:].mean(axis=1)\ndf","de600a5a":"df = df.sort_values(by=\"avg_percent\", ascending = False)\ndf","3d640af8":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 44)\n\ndata = [\n    go.Bar(\n        x=df.index,          \n        y=df['avg_percent'],\n        marker=dict(\n            colorscale='Jet',\n            color=color_s,\n        ),\n    )\n]\n\nlayout = dict(\n    title=\"Technology Skills in Data Scientist Job Listings\",\n    yaxis=dict(title=\"% of Listings\",)\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","78414e0a":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 20)\n\ndata = [\n    go.Bar(\n        x=df.index,          \n        y=df.iloc[:20, -1],\n        marker=dict(\n            colorscale='Jet',\n            color=color_s,\n        ),\n    )\n]\n\nlayout = dict(\n    title=\"Top 20 Technology Skills in Data Scientist Job Listings\",\n    yaxis=dict(title=\"% of Listings\",)\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","47309f7a":"# percentage of data scientist jobs on glassdoor early 2017\nglassdoor = {\n    'Python': 72,\n    'R': 64,\n    'SQL': 51,\n    'Spark': 27,\n    'Hadoop': 39,\n    'Java': 33,\n    'SAS': 30,\n    'Tableau': 14,\n    'Hive': 17,\n    'Matlab': 20\n}","7ded9f20":"# make a data frame of just these\n# could just merge the series and df \n\nseries_gd = pd.Series(glassdoor)\nseries_gd","91674450":"df_gd = pd.merge(\n    df, \n    pd.DataFrame(\n        series_gd, \n        columns=['gd_percent']), \n    right_index=True, \n    left_index=True, \n    how=\"inner\"\n)\n\n# df_gd = df_gd[\"\"]\n# df_gd.columns = \ndf_gd","9a310fc8":"avg = go.Bar(x=df_gd.index, y=df_gd['avg_percent'], name=\"Oct. 2018 Averaged\")\ngd = go.Bar(x=df_gd.index, y=df_gd['gd_percent'], name=\"Early 2017 Glassdoor\")\n\n\ndata = [gd, avg]\n\nlayout = go.Layout(\n    barmode='group',\n    title=\"Technology Skills 2017 Glassdoor Compared to 2018 Average\",\n    xaxis={'title': 'Technology'},\n    yaxis={'title': '% of Listings'},\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","1e5c22d9":"df_skills = pd.read_csv(\n    '..\/input\/data-scientist-general-skills-2018-revised\/ds_general_skills_revised.csv',\n    nrows=15,\n    thousands=',',\n    index_col=0,  \n    )\ndf_skills\n\n# this dataset was updated with \"data engineering included 10\/15\/18\"","c40011e3":"df_skills.rename(index={'AI composite': 'AI', 'NLP composite': 'NLP'}, inplace = True)\ndf_skills","a2bfc875":"scale = MinMaxScaler()\nscaled_df = pd.DataFrame(\n    scale.fit_transform(df_skills), \n    columns = df_skills.columns,\n    index = df_skills.index)    ","af2aa4f6":"scaled_df","0af23d60":"scaled_df['big_sites'] = scaled_df[[\"LinkedIn\", \"Indeed\", \"SimplyHired\", \"Monster\"]].mean(axis = 1)\nscaled_df.sort_values(by = 'big_sites', ascending = False)","07f94f9d":"y_linkedin = scaled_df.iloc[:, 0]\ny_indeed = scaled_df.iloc[:, 1]\ny_simply = scaled_df.iloc[:, 2]\ny_monster = scaled_df.iloc[:, 3]\n\ny_linkedin","adc49495":"indeed = go.Bar(x=scaled_df.index, y=y_indeed, name = \"Indeed\")\nsimply = go.Bar(x=scaled_df.index, y=y_simply, name=\"SimplyHired\")\nlinked = go.Bar(x=scaled_df.index, y=y_linkedin, name=\"LinkedIn\")\nmonster = go.Bar(x=scaled_df.index, y=y_monster, name=\"Monster\")\n\ndata = [linked, indeed, simply, monster]\n\nlayout = go.Layout(\n    barmode='group',\n    title=\"Data Science Skills in Online Job Listings\",\n    xaxis={'title': 'Skills'},\n    yaxis={'title': \"Scaled Listings\", 'separatethousands': True,\n    }\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","47e00cb1":"p_s_df = scaled_df * 100\np_s_df = p_s_df.round(2)\np_s_df.columns = ['LinkedIn', 'Indeed', 'SimplyHired', 'Monster', 'Score']\np_s_df = p_s_df.sort_values(by=['Score'], ascending = False)\np_s_df","ac5cd481":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 14)\n\ndata = [\n    go.Bar(\n        x=p_s_df.index,          \n        y=p_s_df['Score'],\n        marker=dict(\n            colorscale='Jet',\n            #cauto=True,\n            color=color_s,\n        ),\n        # text=p_s_df['Score'],\n        # textposition='outside',\n        # textfont=dict(size=10)\n    )\n]\n\nlayout = {\n    'title': 'General Skills in Data Scientist Job Listings',\n    'xaxis': {'tickmode': 'linear'},\n    'yaxis': {'title': \"Score\"}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","3c48293b":"total_ds = {\n    'LinkedIn': 8610,\n    'Indeed': 5138,\n    'SimplyHired': 3829,\n    'Monster': 3746,\n}","4dc1458f":"for key, value in total_ds.items():\n    df_skills[key + \" %\"] = df_skills[key] \/ value * 100\ndf_skills","167a4cf6":"df_skills['avg_percent'] = df_skills.iloc[:,-4:].mean(axis=1)\ndf_skills","4ba83aca":"df_skills = df_skills.sort_values(by=\"avg_percent\", ascending = False)\ndf_skills","3ea461da":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 16)\n\ndata = [\n    go.Bar(\n        x=df_skills.index,          \n        y=df_skills['avg_percent'],\n        marker=dict(\n            colorscale='Jet',\n            color=color_s,\n        ),\n    )\n]\n\nlayout = dict(\n    title=\"General Skills in Data Scientist Job Listings\",\n    yaxis=dict(title=\"Average % of Listings\",)\n)\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)","41852dc1":"ds_results = pd.Series({\n    'LinkedIn': 8610,\n    'Indeed': 5138, \n    'SimplyHired': 3829,\n    'Monster': 3746,\n    'AngelList': 658\n})\nds_results","ac384308":"cmax=200\ncmin=50\ncolor_s = np.linspace(cmin, cmax, 5)\n\ndata = [\n    go.Bar(\n        x=ds_results.index,          \n        y=ds_results.values,\n        marker=dict(\n            colorscale='Jet',\n            #cauto=True,\n            color=color_s,\n        ),\n        # text=p_s_df['Score'],\n        # textposition='outside',\n        # textfont=dict(size=10)\n    )\n]\n\nlayout = {\n    'title': \"Data Scientist Job Listings\",\n    'xaxis': {'title': 'Website'},\n    'yaxis': {'title': 'Listings', 'separatethousands': True,}\n}\n\nfig = go.Figure(data=data, layout=layout)\npy.iplot(fig)\n\n","95e72bd7":"# A few summary stats","2a951f8a":"# Scale and Aggregate \nScale each column. For each column we'll use MinMaxScaler to subtract the minumum and divide by the original max - original min.","21f59af4":"### Scaled Online Job Listings","b6b69903":"# Part 2: General Data Science Skills\nLet's look at general data science skills next.","70ae8d81":"Glassdoor has some similar analysis from early 2017 [here](https:\/\/www.glassdoor.com\/research\/data-scientist-personas\/). See [my larger Medium article](https:\/\/towardsdatascience.com\/the-most-in-demand-skills-for-data-scientists-4a4a8db896db) for discussion.","20a76b38":"Read in the data from the csv. The Google sheet that holds the data is available [here](https:\/\/docs.google.com\/spreadsheets\/d\/1lac1H2IgCDCs9LLTQL6yb6MUPN1u4C5fJv_6YjipIaM\/edit?usp=sharing).","0fab25dc":"## Let's chart the full list.","54aed0b9":"# Please upvote this Kaggle kernel if you find it helpful.","10386dc6":"Cool. We used the read_csv parameters to give us just what we wanted.","a4282c56":"# Part 1: Data Science Software","5154a837":"All terms were searched with *\"data scientist\"* again. The skills are tricky because there is some overlap. \n\nI combined *AI* and *artificial intelligence* because one is the abbreviation of the other. I did the same for *NLP* and *natural language processing*. I combined these terms be adding the totals together and subtracting the number of listings that had both terms in them.","b2f37291":"## Let's look at them by site\n","13a6af80":"Let's make a combined score for the large sites by taking the mean of the LinkedIn, Indeed, and SimplyHired scores.","d5dab367":"## Let's make a bar chart of the top 20 combined scores","ba13b87f":"Total \"data scientist\" listings.","f46ccb34":"## Let's look at these general skills by % of occurrence, too.","ce9325e1":"# Scale and Aggregate \nScale each column. For each column we'll use MinMaxScaler to subtract the minumum and divide by the original max - original min.","8ca189d0":"## Postscript: Configuring Plotly\n\nPlotly is super cool, but setup can be a bit tricky and there is a lot of old documentation mixed in with relevant documentation. Here's how to get up and running.\n\nFollow the instructions on [plotly's site](https:\/\/github.com\/plotly\/plotly.py).\n\nTo install on Mac\/Linux from the command line with support for plotly's magic, depending on what you already have installed see the plotly docs. Here's what I had to run with a relatively new conda install:\n\nconda install -c plotly plotly=3.3.0 <br>\nconda install -c conda-forge nodejs <br>\nconda install jupyterlab=0.34 \"ipywidgets>=7.2\" <br>\nexport NODE_OPTIONS=--max-old-space-size=4096 <br>\njupyter labextension install @jupyter-widgets\/jupyterlab-manager@0.37 --no-build <br>\njupyter labextension install plotlywidget@0.4.0 --no-build <br>\njupyter labextension install @jupyterlab\/plotly-extension@0.17.2 --no-build <br>\njupyter lab build <br>\nunset NODE_OPTIONS <br>","60cd168e":"## % of job listings with software skills\n","ed0f98ad":"## Let's look at the top 10 by site\nBased on the top 10 on LinkedIn, the largest site.","60bd0189":"Let's rename Microsoft Office. Otherwise it gets cut off.","2dbc730b":"## Let's make a bar chart of all the combined scores","98c30099":"## Let's look at the top 20 scores","0d7d59c8":"Let's make an average of those % columns.","165319ec":"## Basic Data Exploration\nLet's see what the data look like.","9ba99401":"Let's make a combined score for the large sites by taking the mean of the LinkedIn, Indeed, Monster, and SimplyHired scores.","b8c90000":"# Charts with Plotly\nLet's make interactive charts with plotly. ","613bfc5a":"# Pleave upvote if you found this interesting or informative!","6c0ff510":"Let's clean things up for publication","32a61dd8":"## Glassdoor comparision","3838a414":"## Let's chart the full list and then the top 20.","62ce4239":"Let's clean things up for publication","2c16641b":"Let's rename the composite indices.","c9ea9801":"List package versions for reproducibility.","9970a07f":"# The Most in Demand Skills for Data Scientists\n## What are employers looking\u00a0for?\n## By Jeff Hale\n\nI'm going to explore which skills and software for Data Scientists are in demand in the US in October 2018 by looking at online job listing sites. I'll be using plotly and pandas to make interactive visualizations for this project.\n\n### See [this Medium article](https:\/\/towardsdatascience.com\/the-most-in-demand-skills-for-data-scientists-4a4a8db896db) for discussion.\n\n\nThis notebook includes additional analyses not in the Medium article and presents the findings in a slightly different order.","cdf9b92f":"## Let's make a bar chart of the combined scores","724f9ea5":"Let's make an average of those % columns.","02feab26":"### Scaled Online Job Listings"}}