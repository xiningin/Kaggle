{"cell_type":{"88ba8e2a":"code","b4584830":"code","ba334986":"markdown","6b8df85a":"markdown"},"source":{"88ba8e2a":"import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.metrics import mean_absolute_error\nfrom xgboost import XGBRegressor\n\n#Opening our file with the training data in\ntrain = pd.read_csv('..\/input\/train.csv')\n\n#We are trying to predict the sale price column\ntarget = train.SalePrice\n\n#Get rid of the answer and anything thats not an object\ntrain = train.drop(['SalePrice'],axis=1).select_dtypes(exclude=['object'])\n\n#Split the data into test and validation\ntrain_X, test_X, train_y, test_y = train_test_split(train,target,test_size=0.25)\n\n#Impute all the NaNs\nmy_imputer = Imputer()\ntrain_X = my_imputer.fit_transform(train_X)\ntest_X = my_imputer.fit_transform(test_X)\n\n#Simplist XGBRegressor\n#my_model = XGBRegressor()\n#my_model.fit(train_X, train_y)\n\nmy_model = XGBRegressor(n_estimators=1000, learning_rate=0.05)\nmy_model.fit(train_X, train_y, early_stopping_rounds=8, \n             eval_set=[(test_X, test_y)], verbose=False)\n\n\n#Make predictions\npredictions = my_model.predict(test_X)\n\nprint(\"Mean absolute error = \" + str(mean_absolute_error(predictions,test_y)))","b4584830":"#Getting our test data\ntest = pd.read_csv('..\/input\/test.csv')\n\n#Getting it to the right format that we used with our model\ntest = test.select_dtypes(exclude=['object'])\n\n#Fill in all the NaN values with ints\ntest_X = my_imputer.fit_transform(test)\n\n#Make predictions\npredictions = my_model.predict(test_X)\n\nmy_submission = pd.DataFrame({'Id': test.Id, 'SalePrice': predictions})\n# you could use any filename. We choose submission here\nmy_submission.to_csv('submission.csv', index=False)\n\n\n\n\n","ba334986":"# Making our model\nI have included 2 models, the simplist possible and also one with hyperparameters which when tuned give much better results. \nTry playing with them and becareful not to overfit. ","6b8df85a":"# Making a submission"}}