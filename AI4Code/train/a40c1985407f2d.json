{"cell_type":{"ca784b59":"code","8c155b15":"code","aa4503d6":"code","2c13d141":"code","9e5fa1cb":"code","4be9796a":"code","be274a28":"code","4fd6548f":"code","d9dc2301":"code","67e149e6":"code","8271dec7":"code","93353870":"code","bb2c475c":"code","f456a2d1":"code","e530eb5d":"markdown","b4801882":"markdown","6ce688ce":"markdown","64d912ed":"markdown","e02d8bbb":"markdown","54e62bdc":"markdown","9e4e74d0":"markdown","ed76ce2a":"markdown","ef6f9d20":"markdown","5a55d321":"markdown","69f76935":"markdown"},"source":{"ca784b59":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8c155b15":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom scipy.stats import probplot\nimport math\nfrom statistics import mean, stdev\nfrom matplotlib import style\nstyle.use('ggplot')","aa4503d6":"df = pd.read_csv('\/kaggle\/input\/walmart-dataretail-analysis\/Walmart_Store_sales.csv')","2c13d141":"df.head()","9e5fa1cb":"df.describe()","4be9796a":"def EvalCdf(sample, x):\n    count = 0\n    for i in sample:\n        if i <= x:\n            count += 1\n    prob = count \/ len(sample)\n    return prob","be274a28":"## I'm assuming that the temperature is in degree farenheight\n\ntemp3 = df[df.Temperature <= 25.0]\ntemp3_sales = sorted(temp3.Weekly_Sales.values \/ 10**6)\ntemp3_sales_cdf = [EvalCdf(temp3_sales, x) for x in temp3_sales]\n\ntemp4 = df[df.Temperature >= 55.0]\ntemp4_sales = sorted(temp4.Weekly_Sales.values \/ 10**6)\ntemp4_sales_cdf = [EvalCdf(temp4_sales, x) for x in temp4_sales]\n\ntemp5 = df[df.Temperature >= 95.0]\ntemp5_sales = sorted(temp5.Weekly_Sales.values \/ 10**6)\ntemp5_sales_cdf = [EvalCdf(temp5_sales, x) for x in temp5_sales]","4fd6548f":"plt.figure(figsize = (20, 6))\n\nplt.xlabel('weekly sales in million unit')\nplt.ylabel('CDF')\nplt.plot(temp3_sales, temp3_sales_cdf, label = 'Temperature <= 25.0')\nplt.plot(temp4_sales, temp4_sales_cdf, label = 'Temperature >= 55.0')\nplt.plot(temp5_sales, temp5_sales_cdf, label = 'Temperature >= 95.0')\n\nplt.legend()","d9dc2301":"temp3 = df.query('Temperature >= 55.0 and Holiday_Flag == 0')\ntemp3_sales = sorted(temp3.Weekly_Sales.values \/ 10**6)\ntemp3_sales_cdf = [EvalCdf(temp3_sales, x) for x in temp3_sales]\n\ntemp4 = df.query('Temperature >= 55.0 and Holiday_Flag == 1')\ntemp4_sales = sorted(temp4.Weekly_Sales.values \/ 10**6)\ntemp4_sales_cdf = [EvalCdf(temp4_sales, x) for x in temp4_sales]","67e149e6":"plt.figure(figsize = (20, 6))\n\nplt.xlabel('weekly sales in million unit')\nplt.ylabel('CDF')\nplt.plot(temp3_sales, temp3_sales_cdf, label = 'No holiday')\nplt.plot(temp4_sales, temp4_sales_cdf, label = 'Holiday')\n\nplt.legend()","8271dec7":"def de_mean(x):\n    x_bar = mean(x)\n    return [x_i - x_bar for x_i in x]\n\ndef covariance(x, y):\n    n = len(x)\n    return np.dot(de_mean(x), de_mean(y)) \/ (n - 1)\n\ndef correlation(x, y):\n    std_x = stdev(x)\n    std_y = stdev(y)\n    if std_x > 0 and std_y > 0:\n        return covariance(x, y) \/ std_x \/ std_y\n    else:\n        return 0","93353870":"x = df.Unemployment.values\ny = df.Weekly_Sales.values\nz = df.CPI.values\na = df.Fuel_Price.values\nb = df.Temperature.values","bb2c475c":"correlation(y, z)","f456a2d1":"cor = df.corr()\n\nplt.figure(figsize=(12, 10))\nsns.heatmap(cor, annot=True, vmin=-1.0, cmap='mako')\nplt.show()","e530eb5d":"# Defining CDF","b4801882":"Let's find answer to that question","6ce688ce":"# Correlation matrix","64d912ed":"**What does the graph depict?**\n\nThe total no. of goods sold after 80% of the sale is done is more on holidays than on working days","e02d8bbb":"                         ****-- This notebook is under Construction --****","54e62bdc":"**What does the graph depict?**\n\nThe red line crosses the 0.8 cdf mark slightly after 1.0 million, almost past 1.2 million mark whereas the blue line does at 1.5 million mark which means that when the temperature is less than 25.0 degree F, then 80 percent of the sales are less than 1.5 million goods whereas when the teamperature is more than 55.0 degree F, 80% of the sales are capped at 1.5 million goods and when the temperature is more than 95 degree F, 80% of the goods sold comes down to less than 1.0 million which clearly indicates that the moderate climate is more preferable for selling huge amounts of goods","9e4e74d0":"# Are more products sold in hotter weather?","ed76ce2a":"For this purpose, I'll use CDFs (cumulative distribution functions) and correlations. I will not explain these terms, as I have more than a couple of notebooks going about explaining these terms. You can rather check my previous work if you want to learn more about those. The links are given below:\n\n1. correlations: [The Bihar statistics - 3... (Correlations)](http:\/\/www.kaggle.com\/ritikpnayak\/the-bihar-statistics-3-correlations)\n2. CDF: [Introduction: Analytic distribution w\/ Volkswagen\n](https:\/\/www.kaggle.com\/ritikpnayak\/introduction-analytic-distribution-w-volkswagen)","ef6f9d20":"# Defining correlation","5a55d321":"# Case study: temperature more than 55.0 degree F with and without holidays","69f76935":"**checking if our correlation algorithm gives the same results as that of the correlation matrix**"}}