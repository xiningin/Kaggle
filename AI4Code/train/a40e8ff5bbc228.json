{"cell_type":{"37f05f12":"code","8d0f65f8":"code","c7246b98":"code","671f9afa":"code","2e22392e":"code","3d324d01":"code","c98a2581":"code","bc311909":"code","ce0da495":"code","6dff2c18":"code","16008bdf":"code","d1bd14c5":"code","e6414e84":"code","91cb6396":"markdown","6c402f56":"markdown","66ecab7b":"markdown","447a9a77":"markdown"},"source":{"37f05f12":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8d0f65f8":"import matplotlib.pyplot as plt\nplt.rcParams['figure.figsize'] = [20,8]\nimport seaborn as sns","c7246b98":"df=pd.read_csv('..\/input\/fetal-health-classification\/fetal_health.csv')","671f9afa":"display(df.shape)\ndf.head()","2e22392e":"fig, ax =plt.subplots(11,2,figsize=(25,35)) \nplt.style.use(\"seaborn\")\ndf.hist(ax=ax);\n##\n# df.boxplot()\n# plt.xticks(rotation=45)\n# plt.show()","3d324d01":"from sklearn.model_selection import train_test_split","c98a2581":"# y=df.pop('fetal_health')\n# X=df\ny=df['fetal_health']\nX=df[['baseline value', 'accelerations', 'fetal_movement',\n       'uterine_contractions', 'light_decelerations',\n       'severe_decelerations', 'prolongued_decelerations',\n       'abnormal_short_term_variability',\n       'mean_value_of_short_term_variability',\n      'percentage_of_time_with_abnormal_long_term_variability',\n       'mean_value_of_long_term_variability', 'histogram_width',\n       'histogram_min', 'histogram_max','histogram_number_of_peaks',\n       'histogram_number_of_zeroes', 'histogram_mode', 'histogram_mean',\n       'histogram_median', 'histogram_variance', 'histogram_tendency'\n     ]]\n","bc311909":"x_train,x_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=2)","ce0da495":"from sklearn.linear_model import LogisticRegression","6dff2c18":"model = LogisticRegression(solver='liblinear').fit(x_train,y_train)\ny_predict=model.predict(x_test)\ndisplay(model.score(x_test,y_test))\ndisplay(model.predict_proba(x_test))","16008bdf":"plt.figure(figsize=(16,6))\nsns.boxplot(x=y_test,y=y_predict)\nplt.ylabel('y-predict',fontsize=24)\nplt.xlabel('y-test',fontsize=24)","d1bd14c5":"# fig, ax =plt.subplots(1,2,figsize=(25,35)) \nfig,(ax1,ax2) = plt.subplots(1,2,figsize=(16,6))\nax1.set_xlabel('y_predict',fontsize=24)\nsns.histplot(y_predict,ax=ax1)\nax2.set_xlabel('y_test',fontsize=24)\nsns.histplot(y_test,ax=ax2)","e6414e84":"display(model.decision_function(x_test))\ndisplay(model.predict_log_proba(x_test))","91cb6396":"# Train Test","6c402f56":"# LogisticRegression\n\nhttps:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LogisticRegression.html","66ecab7b":"# Extra Function in LogisticRegression","447a9a77":"# Load"}}