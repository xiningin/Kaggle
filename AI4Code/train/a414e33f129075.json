{"cell_type":{"bd00517c":"code","f6b02a46":"code","0ac38117":"code","b3da224f":"code","3990bb5e":"code","789af3bc":"code","1064cac8":"code","b2ca9444":"code","c48ff9b5":"code","88506142":"code","7d55dfed":"code","4f1164be":"code","17f0736e":"code","0874d4ee":"code","285ff9f9":"code","a6b6fc6c":"code","3378d5f1":"code","6fad64be":"code","f6a9f329":"code","35eceba4":"code","acc7b30e":"code","798e7b6d":"code","33f6a95a":"code","e1f86a4d":"markdown","5731f1d6":"markdown","02d0032b":"markdown","79a341ec":"markdown","bee57a4a":"markdown","d2d087c7":"markdown","d02e051d":"markdown","96d59d94":"markdown"},"source":{"bd00517c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f6b02a46":"data = pd.read_csv(\"\/kaggle\/input\/pesquisa-data-hackers-2019\/datahackers-survey-2019-anonymous-responses.csv\")\npd.set_option(\"display.max_columns\", 200)\ndata.head()","0ac38117":"data[\"('D6', 'anonymized_role')\"].value_counts()","b3da224f":"data[\"('P8', 'degreee_level')\"].value_counts()","3990bb5e":"data[\"('P10', 'job_situation')\"].value_counts()","789af3bc":"data[\"('P22', 'most_used_proggraming_languages')\"].value_counts()","1064cac8":"data[\"('P35', 'data_science_plataforms_preference')\"].value_counts()","b2ca9444":"salario_converter = {\n    'de R$ 1.001\/m\u00eas a R$ 2.000\/m\u00eas': 1500., \n    'de R$ 2.001\/m\u00eas a R$ 3000\/m\u00eas': 2500.,\n    'de R$ 4.001\/m\u00eas a R$ 6.000\/m\u00eas': 5000., \n    'de R$ 6.001\/m\u00eas a R$ 8.000\/m\u00eas': 7000.,\n    'de R$ 3.001\/m\u00eas a R$ 4.000\/m\u00eas': 3500.,\n    'de R$ 8.001\/m\u00eas a R$ 12.000\/m\u00eas': 10000.,\n    'de R$ 12.001\/m\u00eas a R$ 16.000\/m\u00eas': 14000.,\n    'Menos de R$ 1.000\/m\u00eas': 1000.,\n    'de R$ 16.001\/m\u00eas a R$ 20.000\/m\u00eas': 18000.,\n    'de R$ 20.001\/m\u00eas a R$ 25.000\/m\u00eas': 22500., \n    'Acima de R$ 25.001\/m\u00eas': 25000.\n}\n\ndata['salario_numerico'] = data[\"('P16', 'salary_range')\"].map(salario_converter)","c48ff9b5":"data.groupby([\"('P22', 'most_used_proggraming_languages')\"])['salario_numerico'].mean().sort_values()","88506142":"data.groupby([\"('D6', 'anonymized_role')\"])['salario_numerico'].mean().sort_values()","7d55dfed":"fig,ax = plt.subplots(1,1, figsize=(20,10))\nplote = sns.barplot(x=\"('D6', 'anonymized_role')\", y=\"salario_numerico\", data=data)\nplote.set_xticklabels(plote.get_xticklabels(), rotation=90)","4f1164be":"ds = data[data[\"('D6', 'anonymized_role')\"] == 'Data Scientist\/Cientista de Dados']\nfig,ax = plt.subplots(1,1, figsize=(15,5))\nplt.hist(ds[\"salario_numerico\"], bins=7)\nplt.axvline(ds['salario_numerico'].mean(), color='k', linewidth=5)\nplt.axvline(ds['salario_numerico'].median(), color='g', linewidth=5)","17f0736e":"fig,ax = plt.subplots(1,1, figsize=(8,8))\ndegree = data.groupby([\"('D6', 'anonymized_role')\", \"('D3', 'anonymized_degree_area')\"]).size().unstack()#.fillna(0)\ndegree = degree.div(degree.sum(axis=1), axis=0)\nsns.heatmap(degree, cmap='viridis')","0874d4ee":"from category_encoders import OneHotEncoder\nfrom sklearn.linear_model import LinearRegression, Ridge\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler, MaxAbsScaler\n\ncols_selected = [\"('P17', 'time_experience_data_science')\"]\nohe = OneHotEncoder(cols=cols_selected, use_cat_names=True)\ndata_t = ohe.fit_transform(data[cols_selected+['salario_numerico']])\n\n#scaler = MaxAbsScaler()\nX = data_t.iloc[:,:-1]\ny = data_t.iloc[:, -1].fillna(data_t.iloc[:, -1].mean()) \/ data_t.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","285ff9f9":"data.groupby(\"('P17', 'time_experience_data_science')\")['salario_numerico'].mean().sort_values()","a6b6fc6c":"from category_encoders import OneHotEncoder\n\n#scaler = MaxAbsScaler()\nX = data[data.filter(regex='P20', axis=1).columns]\ny = data.iloc[:, -1].fillna(data.iloc[:, -1].mean()) \/ data.iloc[:, -1].max()\n\nmdl = Ridge(alpha=0.1)\nmdl.fit(X,y)\n\npd.Series(mdl.coef_, index=X.columns).sort_values().head(10).plot.barh()","3378d5f1":"data.groupby([\"('P19', 'is_data_science_professional')\"])['salario_numerico'].mean()","6fad64be":"ds_pro = data[data[\"('P19', 'is_data_science_professional')\"] == 1]\nds_pro[\"('D6', 'anonymized_role')\"].value_counts()","f6a9f329":"ds_pro = data[data[\"('P19', 'is_data_science_professional')\"] == 1]\nds_pro[\"('P5', 'living_state')\"].value_counts()","35eceba4":"not_ds_pro = data[data[\"('P19', 'is_data_science_professional')\"] == 0]\nnot_ds_pro[\"('P5', 'living_state')\"].value_counts()","acc7b30e":"ds_pro[\"('P1', 'age')\"].hist(figsize=(10,5), bins=20)","798e7b6d":"ds_pro.groupby([\"('P8', 'degreee_level')\"])['salario_numerico'].mean().sort_values()","33f6a95a":"ds_pro.groupby([\"('P8', 'degreee_level')\"])['salario_numerico'].size().sort_values()","e1f86a4d":"# Onde vivem?","5731f1d6":"https:\/\/www.kaggle.com\/c\/kaggle-survey-2019\/notebooks","02d0032b":"# Skills para Data Scientist","79a341ec":"# Quem considera que trabalha com DS?","bee57a4a":"# Faixa et\u00e1ria","d2d087c7":"# Quem participou?","d02e051d":"# N\u00edvel de gradua\u00e7\u00e3o","96d59d94":"# Tempo de experi\u00eancia (todos)"}}