{"cell_type":{"0f4034a7":"code","d0d444c5":"code","765d7c60":"code","76f584e7":"code","d24298d4":"code","1af3b964":"code","f77bc90d":"code","51f541a0":"code","3ed97e74":"code","6156c16e":"code","76ba98c6":"code","b3d0d45b":"code","2330009e":"code","c7cdfd8e":"code","2baeeed0":"code","ab755009":"code","1b691133":"code","79bcb50b":"code","6adf842b":"code","5ca5e739":"code","632e250d":"markdown","bfb7b3b8":"markdown","cc2de093":"markdown","a394c3fc":"markdown","f78e52e5":"markdown","7846aebc":"markdown","cdf659b1":"markdown","92133fa8":"markdown","f6aca310":"markdown","bcc00e5d":"markdown","22be0fb5":"markdown","18acdb40":"markdown","833a74a1":"markdown","b1d9405f":"markdown","9034e849":"markdown","81619957":"markdown","206a26b0":"markdown","584f52c3":"markdown","7202bdca":"markdown"},"source":{"0f4034a7":"# \ub370\uc774\ud130 \ubd84\uc11d \uad00\ub828 \nimport pandas as pd\nfrom pandas import Series, DataFrame\nimport numpy as np\n\n# \ub370\uc774\ud130 \uc2dc\uac01\ud654 \uad00\ub828\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid') # matplotlib\uc758 \uc2a4\ud0c0\uc77c\uc5d0 \uad00\ub828\ud55c \ud568\uc218\n#\uadf8\ub798\ud504 \ucd9c\ub825\uc5d0 \ud544\uc694\ud55c IPython \uba85\ub839\uc5b4\n%matplotlib inline\n\n# Scikit-Learn\uc758 \ub2e4\uc591\ud55c \uba38\uc2e0\ub7ec\ub2dd \ubaa8\ub4c8\uc744 \ubd88\ub7ec\uc635\ub2c8\ub2e4.\n# \ubd84\ub958 \uc54c\uace0\ub9ac\uc998 \uc911 \uc120\ud615\ud68c\uadc0, \uc11c\ud3ec\ud2b8\ubca1\ud130\uba38\uc2e0, \ub79c\ub364\ud3ec\ub808\uc2a4\ud2b8. k-\ucd5c\uadfc\uc811 \uc774\uc6c3 \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC,LinearSVC\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier","d0d444c5":"# \ub370\uc774\ud130\ub97c \uac00\uc838\uc640\uc57c\ud569\ub2c8\ub2e4.\ntrain_df = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/titanic\/test.csv\")\n\n# \ub370\uc774\ud130 \ubbf8\ub9ac\ubcf4\uae30\ntrain_df.head()","765d7c60":"# info() \ud568\uc218\ub294 \uc18d\uc131\ubcc4 \ud0c0\uc785\uacfc \ub110\uc874\uc7ac \uc720\ubb34\ub97c \uc54c\uc218 \uc788\ub2e4.\ntrain_df.info()\ntest_df.info()","76f584e7":"train_df = train_df.drop(['PassengerId', 'Name', 'Ticket'], axis=1)\ntest_df = test_df.drop(['Name','Ticket'], axis=1)","d24298d4":"train_df['Pclass'].value_counts()","1af3b964":"pclass_train_dummies = pd.get_dummies(train_df['Pclass'])\npclass_test_dummies = pd.get_dummies(test_df['Pclass'])\n\ntrain_df.drop(['Pclass'], axis=1, inplace=True)\ntest_df.drop(['Pclass'], axis=1, inplace=True)\n\ntrain_df = train_df.join(pclass_train_dummies)\ntest_df = test_df.join(pclass_test_dummies)","f77bc90d":"sex_train_dummies = pd.get_dummies(train_df['Sex'])\nsex_test_dummies = pd.get_dummies(test_df['Sex'])\n\nsex_train_dummies.columns = ['Female','Male']\nsex_test_dummies.columns = ['Female','Male']\n\ntrain_df.drop(['Sex'],axis=1, inplace=True)\ntest_df.drop(['Sex'],axis=1, inplace=True)\n\ntrain_df = train_df.join(sex_train_dummies)\ntest_df = test_df.join(sex_test_dummies)","51f541a0":"train_df[\"Age\"].fillna(train_df[\"Age\"].mean(), inplace = True)\ntest_df[\"Age\"].fillna(test_df[\"Age\"].mean(), inplace = True)","3ed97e74":"train_df[\"Fare\"].fillna(train_df[\"Fare\"].mean(),inplace=True)\ntest_df[\"Fare\"].fillna(test_df[\"Fare\"].mean(),inplace=True)","6156c16e":"train_df = train_df.drop(['Cabin'], axis=1)\ntest_df = test_df.drop(['Cabin'], axis=1)","76ba98c6":"train_df['Embarked'].value_counts()\ntest_df['Embarked'].value_counts()","b3d0d45b":"train_df[\"Embarked\"].fillna('S', inplace=True)\ntest_df[\"Embarked\"].fillna('S', inplace=True)","2330009e":"embarked_train_dummies = pd.get_dummies(train_df['Embarked'])\nembarked_test_dummies = pd.get_dummies(test_df['Embarked'])\n\nembarked_train_dummies.columns = ['S', 'C', 'Q']\nembarked_test_dummies.columns = ['S', 'C', 'Q']\n\ntrain_df.drop(['Embarked'], axis=1, inplace=True)\ntest_df.drop(['Embarked'], axis=1, inplace=True)\n\ntrain_df = train_df.join(embarked_train_dummies)\ntest_df = test_df.join(embarked_test_dummies)","c7cdfd8e":"train_df.info()\ntest_df.info()","2baeeed0":"X_train = train_df.drop(\"Survived\",axis=1)\nY_train = train_df[\"Survived\"]\nX_test  = test_df.drop(\"PassengerId\",axis=1).copy()\n","ab755009":"# Logistic Regression\n\nlogreg = LogisticRegression()\nlogreg.fit(X_train,Y_train)\n\nY_pred = logreg.predict(X_test)\nlogreg.score(X_train,Y_train)","1b691133":"# Support Vector Machines\n\nsvc = SVC()\nsvc.fit(X_train,Y_train)\nY_pred = svc.predict(X_test)\nsvc.score(X_train, Y_train)","79bcb50b":"# Random Forests\n\nrandom_forest = RandomForestClassifier(n_estimators=100)\n\nrandom_forest.fit(X_train, Y_train)\n\nY_pred = random_forest.predict(X_test)\n\nrandom_forest.score(X_train, Y_train)","6adf842b":"# KNN \nknn = KNeighborsClassifier(n_neighbors = 3)\n\nknn.fit(X_train, Y_train)\n\nY_pred = knn.predict(X_test)\n\nknn.score(X_train, Y_train)","5ca5e739":"# Random Forests\n\nrandom_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train,Y_train)\nY_pred = random_forest.predict(X_test)\nrandom_forest.score(X_train,Y_train)\n\nsubmission = pd.DataFrame({\n    \"PassengerId\" : test_df[\"PassengerId\"],\n    \"Survived\": Y_pred\n})\n\nsubmission.to_csv('titanic.csv', index = False)","632e250d":"1,2,3 \uc740 \uc5f0\uc18d\uc801\uc778 \uc22b\uc790\uc774\uc9c0\ub9cc \uc544\ubb34\ub7f0 \uc0c1\uad00\uad00\uacc4\uac00 \uc5c6\ub294 \ubc94\uc8fc\ud615 \ub370\uc774\ud130\uc785\ub2c8\ub2e4\n\ub530\ub77c\uc11c one-hot-encoding\uc744 'pd.get_dummies()' \uba54\uc11c\ub4dc\ub85c \uc778\ucf54\ub529\ud569\ub2c8\ub2e4.","bfb7b3b8":"### 3.4 SibSp & Panch\n\n\ud615\uc81c \uc790\ub9e4\uc640 \ubd80\ubaa8\ub2d8\uc740 \uac00\uc871\uc73c\ub85c \ud568\uaed8 \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ubc14\uafc0 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.","cc2de093":"### 3.2 Sex\n\nSex\ub294 \uc131\ubcc4\uc785\ub2c8\ub2e4. \ub0a8\uacfc \uc5ec\ub85c \ub098\ub258\ubbc0\ub85c \uc774 \ub610\ud55c one-hot-encoding","a394c3fc":"## 5. \uba38\uc2e0\ub7ec\ub2dd \uc54c\uace0\ub9ac\uc998 \uc801\uc6a9\ud558\uae30\n\n\uc774\uc81c \ub85c\uc9c0\uc2a4\ud2f1 \ud68c\uadc0, SVC, \ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8, K-\ucd5c\uadfc\uc811 \uc774\uc6c3 \uc54c\uace0\ub9ac\uc998\uc744 \uac01\uac01 \uc801\uc6a9\ud574\ubd05\uc2dc\ub2e4.","f78e52e5":"### 3.6 Cabin\n\nCabin\uc740 \uac1d\uc2e4\uc785\ub2c8\ub2e4. NaN\uc774 \ub300\ubd80\ubd84\uc778 \ub370\uc774\ud130\uc774\ubbc0\ub85c \ubc84\ub9bd\uc2dc\ub2e4. \uc774 \ub370\uc774\ud130\ub97c \uc0b4\ub9ac\ub294 \uac83\uc740 \ub108\ubb34 \uc5b4\ub824\uc6b4 \uc77c\uc785\ub2c8\ub2e4.","7846aebc":"## 6. \uc81c\ucd9c\uc6a9 \ud30c\uc77c \ub9cc\ub4e4\uae30\n\n\ub79c\ub364 \ud3ec\ub808\uc2a4\ud2b8\uac00 \uac00\uc7a5 \uc88b\uc740 \uacb0\uacfc\ub97c \ub0b4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8 \uacb0\uacfc\ub85c submission \ud30c\uc77c\uc744 \ub9cc\ub4e4\uc5b4 \uc81c\ucd9c\ud574\ubd05\uc2dc\ub2e4.","cdf659b1":"S\uac00 \ub300\ub2e4\uc218\uc774\uace0 \uc77c\ubd80 \ub370\uc774\ud130\uac00 \ube44\uc5b4\uc788\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube48 \ubd80\ubd84\uc740 S\ub85c \uc6b0\uc120 \ucc44\uc6b0\uace0 \uc2dc\uc791\ud569\uc2dc\ub2e4.","92133fa8":"# \ud0c0\uc774\ud0c0\ub2c9 :  Biginner Ver","f6aca310":"### 3.5 Fare\n\nFare\uc740 \ud0d1\uc2b9\ub8cc\uc785\ub2c8\ub2e4. \uc2e0\uae30\ud558\uac8c test \ub370\uc774\ud130\uc14b\uc5d0 1\uac1c\uc758 \ub370\uc774\ud130\uac00 \ube44\uc5b4\uc788\uc2b5\ub2c8\ub2e4. \uc544\ub9c8 \ub514\uce74\ud504\ub9ac\uc624\uc778\ub4ef \ud569\ub2c8\ub2e4. :-)\n\uc6b0\uc120 \ube48 \ubd80\ubd84\uc744 `fillna` \uba54\uc11c\ub4dc\ub85c \ucc44\uc6b0\uaca0\uc2b5\ub2c8\ub2e4. \n","bcc00e5d":"### 3.3 Age\n\n\ub098\uc774\ub294 \uc5f0\uc18d\ud615 \ub370\uc774\ud130\uc774\ubbc0\ub85c, \ud070 \ucc98\ub9ac\uac00 \ud544\uc694\uc5c6\uc2b5\ub2c8\ub2e4. (\uce74\ud14c\uace0\ub9ac\ud654\ub97c \ud558\uc5ec \uc77c\ubd80 \uc54c\uace0\ub9ac\uc998\uc5d0 \ub354 \uc720\uc6a9\ud55c \uacb0\uacfc\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.)\n\ud558\uc9c0\ub9cc \uc77c\ubd80 NaN \ub370\uc774\ud130\uac00 \uc788\uc73c\ub2c8 \uc774\ub97c \ucc44\uc6b8 \uc218 \uc788\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574\uc11c \uc0dd\uac01\ud574\ubd05\uc2dc\ub2e4.\n\n1. \ub79c\ub364\n2. \ud3c9\uade0\uac12\n3. \uc911\uac04\uac12\n4. \ub370\uc774\ud130 \ubc84\ub9ac\uae30\n\n\uc800\ub294 \uc77c\ub2e8\uc740 \ud3c9\uade0\uac12\uc73c\ub85c \ucc44\uc6b0\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\uc758 \ud1b5\uc77c\uc131\uc744 \uac00\uc9c0\uae30 \uc704\ud574 train \ub370\uc774\ud130\uc14b\uc758 \ud3c9\uade0\uac12\uc73c\ub85c \ud6c8\ub828, \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130\uc14b\uc744 \ucc44\uc6b0\uaca0\uc2b5\ub2c8\ub2e4.","22be0fb5":"## 4. \ub370\uc774\ud130 \ub098\ub204\uae30\n\n\uc774\uc81c \ud559\uc2b5\uc6a9 \ub370\uc774\ud130\ub97c \uc704\ud574 \ub370\uc774\ud130\ub97c \ub098\ub204\uc5b4\uc57c\ud569\ub2c8\ub2e4.\n\n`(\uc815\ubcf4, \uc0dd\uc874 \uc5ec\ubd80)`\uc640 \uac19\uc740 \ud615\ud0dc\ub97c \uc704\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \ub370\uc774\ud130\ub97c \ub098\ub215\ub2c8\ub2e4.","18acdb40":"## 3.\ub370\uc774\ud130 \ud558\ub098\ud558\ub098 \ucc98\ub9ac\ud558\uae30\n\n\uc774\uc81c \ub0a8\uc740 \ub370\uc774\ud130 \uc885\ub958\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\n\n1.Pclass\n2.Sex\n3.Age\n4.SibSp\n5.Parch\n6.Fare\n7.Cabin\n8.Embarked****","833a74a1":"\ud544\uc694\uc5c6\ub294 \ubd80\ubd84\uc774\ub77c\uace0 \uc0dd\uac01\ub418\ub294 \ubd80\ubd84\uc744 \uc9c0\uc6b4\ub2e4.","b1d9405f":"## 1. \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30\n\n\uc6b0\uc120 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uae30 \uc804 \uae30\ucd08\uc801 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ubd88\ub7ec\uc635\ub2c8\ub2e4.","9034e849":"### 3.7 Embarked\n\nEmbarked\ub294 \ud0d1\uc2b9 \ud56d\uad6c\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc6b0\uc120 \ub370\uc774\ud130\ub97c \ud655\uc778\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","81619957":"\ubcf8 \ucee4\ub110\uc740 \ub2e4\uc74c \uc790\ub8cc\ub97c \ud1b5\ud574 \uc7ac\uad6c\uc131\ud55c \uc790\ub8cc \uc785\ub2c8\ub2e4.\n[\uc548\uc218\ube48\ub2d8\uc758 \ub178\ud2b8\ubd81](https:\/\/www.kaggle.com\/subinium\/subinium-tutorial-titanic-beginner\/data)","206a26b0":"## 2. \ub370\uc774\ud130 \uc77d\uae30\n\nkaggle \ub610\ub294 \ub370\uc774\ud130 \ubd84\uc11d\uc5d0\uc11c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \ud30c\uc77c\uc740 csv \ud30c\uc77c\uc785\ub2c8\ub2e4.","584f52c3":"### 3.1 Pclass\n\nPclass\ub294 \uc11c\uc218\ud615 \ub370\uc774\ud130\uc785\ub2c8\ub2e4. 1,2,3 \ub4f1\uc11d\uacfc \uac19\uc740 \uc815\ubcf4\uc785\ub2c8\ub2e4. \uc778\ud3ec\ud568\uc218\ub97c \ud1b5\ud574 \ub370\uc774\ud130\uac00 \ube44\uc5b4\uc788\uc9c0 \uc54a\uc74c\uc744 \ud655\uc778\ud588\uc73c\ubbc0\ub85c\n\ub370\uc774\ud130\uc5d0 \ub300\ud55c \ud655\uc778\uacfc \ub370\uc774\ud130\ub97c \ubcc0\ud658\ud574 \ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc6b0\uc120 \uac01 unique\ud55c value\uc5d0 \ub300\ud55c \uce74\uc6b4\ud305 value_count() \uba54\uc11c\ub4dc\ub85c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","7202bdca":"\ucd5c\uc885\uc801\uc73c\ub85c \ub370\uc774\ud130\uc758 \uc815\ubcf4\ub4e4 \ud655\uc778"}}