{"cell_type":{"c5f0fc30":"code","34429a48":"code","95903ebf":"code","3384e675":"code","8f2f64af":"code","4c60aa39":"code","5a9a263b":"code","62ba3d0a":"code","efb78023":"code","0c0b1061":"code","d456c827":"code","0be58bfc":"code","a909a1cb":"code","ba2e3973":"code","26abf202":"code","0c49ac6d":"code","5d28fa8d":"code","24e31e65":"code","7d956fc1":"code","25494931":"code","c0645812":"code","dd764667":"code","ddc5a28f":"code","f7f933a6":"code","0726ef2c":"code","3970b142":"code","982b9106":"code","1766ef8d":"code","776bcaf4":"code","192f052a":"code","55bcb2be":"code","9f53e645":"code","c55b99a0":"code","0c820577":"code","ff55ec88":"code","39b800a4":"code","f4ec2bb6":"code","10f2b1f1":"code","2d98d022":"markdown","85fff06f":"markdown","737503f6":"markdown","a58b7c34":"markdown","21f06a72":"markdown","7d718f3f":"markdown","c1f79f90":"markdown","b44349da":"markdown","868cdb1c":"markdown","c15045e1":"markdown","eae6416a":"markdown","bfd7c34d":"markdown","f93d662a":"markdown","b741ca40":"markdown","d44747b7":"markdown","055fe641":"markdown","2cb2950c":"markdown","33343cbe":"markdown","fcf5e3dc":"markdown","6ca32e00":"markdown","9dce2d68":"markdown","910221cb":"markdown","71a52428":"markdown","5023c081":"markdown","06ac32ed":"markdown","621123f3":"markdown","b5e1604b":"markdown","7ff00b11":"markdown","d0484a97":"markdown","28698c42":"markdown","6550d5ee":"markdown","c0d2180c":"markdown","9e4f287d":"markdown","cf4ca1f5":"markdown","8d4edaf9":"markdown"},"source":{"c5f0fc30":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","34429a48":"df = pd.read_csv(\"..\/input\/accepted_2007_to_2017Q3.csv.gz\", compression='gzip')","95903ebf":"df = df[(df['loan_status']=='Fully Paid') | (df['loan_status']=='Charged Off')]","3384e675":"df.head(5)","8f2f64af":"df['loan_status_bin'] = df['loan_status'].map({'Charged Off': 1, 'Fully Paid': 0})","4c60aa39":"(df['grade'].value_counts().sort_index()\/len(df)).plot.bar()","5a9a263b":"def emp_to_num(term):\n    if pd.isna(term):\n        return None\n    elif term[2]=='+':\n        return 10\n    elif term[0]=='<':\n        return 0\n    else:\n        return int(term[0])\n\ndf['emp_length_num'] = df['emp_length'].apply(emp_to_num)\n(df['emp_length_num'].value_counts().sort_index()\/len(df)).plot.bar()","62ba3d0a":"df.groupby('emp_length_num')['loan_status_bin'].mean().plot.bar()","efb78023":"df['long_emp'] = df['emp_length'].apply(lambda x: 1*(x=='10+ years'))\ndf['short_emp'] = df['emp_length'].apply(lambda x: 1*(x=='1 year' or x=='< 1 year'))","0c0b1061":"(df['int_rate']\/len(df)).plot.hist(bins=10)","d456c827":"df[df['annual_inc']<200000]['annual_inc'].plot.hist(bins=20)\ndf['annual_inc_log'] = df['annual_inc'].apply(np.log)","0be58bfc":"(df['purpose'].value_counts()\/len(df)).plot.bar()","a909a1cb":"df.groupby('grade')['loan_status_bin'].mean().plot.line()","ba2e3973":"df.groupby('grade')['int_rate'].mean().plot.line(color='blue')","26abf202":"(df['term'].value_counts()\/len(df)).plot.bar(title='value counts')","0c49ac6d":"df.groupby('term')['loan_status_bin'].mean().plot.bar(title='default rate')","5d28fa8d":"(df['home_ownership'].value_counts()\/len(df)).plot.bar(title='value counts')","24e31e65":"df[(df['home_ownership']=='MORTGAGE') | (df['home_ownership']=='OWN')| (df['home_ownership']=='RENT')].groupby('home_ownership')['loan_status_bin'].mean().plot.bar(title='default rate')","7d956fc1":"df['fico_range_high'].plot.hist(bins=20, title='FICO-Score')","25494931":"df['installment'].plot.hist(bins=40, title='installment')","c0645812":"from sklearn.linear_model import LinearRegression\nlr = LinearRegression()\nlr.fit(df.groupby('sub_grade')['loan_status_bin'].mean().values.reshape(-1,1), y=df.groupby('sub_grade')['int_rate'].mean())","dd764667":"import matplotlib.pyplot as plt\nplt.scatter(df.groupby('sub_grade')['loan_status_bin'].mean(), df.groupby('sub_grade')['int_rate'].mean())\nplt.plot(df.groupby('sub_grade')['loan_status_bin'].mean(), lr.predict(df.groupby('sub_grade')['loan_status_bin'].mean().values.reshape(-1,1)))\nplt.xlabel('default rate')\nplt.ylabel('interest rate')","ddc5a28f":"print('interest rate = ', lr.intercept_, '+', lr.coef_[0], '* default rate')","f7f933a6":"columns = ['loan_amnt', 'term', 'int_rate',\n       'installment', 'grade', 'emp_length',\n       'home_ownership', 'annual_inc_log', 'verification_status',\n       'loan_status_bin', 'purpose',\n       'addr_state', 'dti', 'delinq_2yrs',\n       'fico_range_low', 'inq_last_6mths', 'open_acc',\n       'pub_rec', 'revol_bal', 'revol_util', 'total_acc']\ndf = df[columns]","0726ef2c":"df.dropna(inplace=True)","3970b142":"df['grade']=df['grade'].map({'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5, 'F': 6, 'G': 7})","982b9106":"df_dummies = pd.get_dummies(df)","1766ef8d":"drop_columns = df_dummies.columns[(df_dummies.mean()<0.01)]\ndf_dummies.drop(drop_columns, axis=1, inplace=True)","776bcaf4":"df_dummies['verification_status_Verified_sum'] = df_dummies['verification_status_Source Verified']+df_dummies['verification_status_Verified']\ndf_dummies.drop(['verification_status_Source Verified', 'verification_status_Verified'], axis=1, inplace=True)","192f052a":"df_dummies.head()","55bcb2be":"X = df_dummies.drop('loan_status_bin', axis=1)\ny = df_dummies['loan_status_bin']","9f53e645":"from sklearn.cross_validation import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","c55b99a0":"from sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import Pipeline\n\nsc = MinMaxScaler()\nclf = LogisticRegression(penalty='l1', C=0.01)\n\npipe_lr = Pipeline([('scaler', sc), ('clf', clf)])","0c820577":"pipe_lr.fit(X_train, y_train)","ff55ec88":"test_probas = pipe_lr.predict_proba(X_test)[:,1]\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.metrics import roc_curve\n\nfpr, tpr, tresholds = roc_curve(y_test, test_probas)\nplt.plot(fpr, tpr)\nplt.title('ROC')\nplt.xlabel('FPR')\nplt.ylabel('TPR')\n\nprint('ROC-AUC-score: ', roc_auc_score(y_test, test_probas))","39b800a4":"for i in np.argsort(-np.abs(pipe_lr.named_steps['clf'].coef_[0])):\n    print(X.columns[i], ': ', round(pipe_lr.named_steps['clf'].coef_[0,i], 4))","f4ec2bb6":"def prob_to_pred(theta, proba):\n    return [(p<theta) for p in proba]","10f2b1f1":"probs = pipe_lr.predict_proba(X_test)[:,1]\nfor theta in np.arange(0.03,0.21,0.01):\n    print('theta =', round(theta,2), end=\"  \")\n    print(round(y_test.values[prob_to_pred(theta, probs)].mean(),2), end=\"  \")\n    print(round(X_test.values[prob_to_pred(theta, probs), 1].mean(),2), end=\"  \")\n    print(round(lr.predict(y_test.values[prob_to_pred(theta, probs)].mean().reshape(-1,1))[0],2))","2d98d022":"How does the transformed dataset look like?","85fff06f":"# Data visualization and feature enigineering","737503f6":"Is there a connection between employment length and default rate?","a58b7c34":"Drop all rows that contain null-values.","21f06a72":"Let's have a look at the distribution of the annual income (excluding incomes above 200,000). This seems so be log-normal-distributed so we do a log-transform..","7d718f3f":"Get the dummy-variables for categorical features.","c1f79f90":"We are going to drop all dummy-variables which contain not at least 1% ones. In this case we can simply look at the mean of the features because all non-dummy variables have means greater than 0.01.","b44349da":"Transform the grade into numerical values.","868cdb1c":"How high ist the interest rate for different grades? Is there a linear connection too?","c15045e1":"We are only going to look at loans that either have the loan status 'Default' or 'Fully Paid'","eae6416a":"# Training the Logistic Regression","bfd7c34d":"Let's see which features are most important.","f93d662a":"Before we can have a look at the distribution of the employment length we need to transform it into numerical values.","b741ca40":"Now we calculate the mean interest rate and default rate for different thetas and compare it to the interest rate we would get by just looking at the grade.\n\n1. column: parameter $\\theta$\n2. column: default rate on the test data when using logisitc regression with treshold $\\theta$\n3. column: mean interest rate when using logisitc regression with treshold $\\theta$\n4. column: mean interes rate when looking just at the grade","d44747b7":"# Describing the linear connection between default and interest rate\n\nAs said before there seems to be a linear connection between the interest rate and the default rate. We will use Linear Regression to calculate the linear function that maps from the default rate to the interest rate.","055fe641":"Let's have a look at the distirubtion of the interest rates.","2cb2950c":"Intrestingly there is no obvious connection between employment length and default rate. For example employment lengths of 8 and 9 years have almost the same default rate as employment lengths of up to 1 year.\nBut what we can see is that an employment length of 0 or 1 has a high default rate and an emloyment length of more than 10 years has a really low default rate. So we are going to transform the feature into two features called 'long_emp' and 'short_emp'. ","33343cbe":"In the next step we will see whats the connection between default and interest rate when using the Logistic Regression and compare it to the connection we got from the grades. One can control the risk of the investments by choosing different tresholds. The higher one chooses the probability where to seperate *good* from *bad* loans the higher the default rate will be. We now write a function that transforms default probabilities to predictions.\n$$ y_{pred} = \\begin{cases} 1, \\text{ if } P(y_{pred}=1)\\geq\\theta\\\\\n0, text{ else } \\end{cases}$$","fcf5e3dc":"Split the data into training and testing data.","6ca32e00":"Train the logisitc regression model.","9dce2d68":"Which are the most common reasons for requesting a loan on lending club?","910221cb":"How high is the default rate for different grades? It looks like there is a linear connection between the grade an the default rate.","71a52428":"Let's have a look at the distribution of the FICO score and the installment.","5023c081":"# Evaluating the Logistic Regression\n\nLet's see how well the model works by plotting the ROC-curve and calculating the ROC-AUC-Score.","06ac32ed":"Let's do the same for the home_ownership feature.","621123f3":"As we can see there are only two possible values for the term on Lending Club, i.e. 36 months or 60 months, and months with a higher term have a significant higher default rate.","b5e1604b":"# Importing the dataset","7ff00b11":"Set up the pipeline. We will use $L_1$-penalty for built-in feature selectiob","d0484a97":"Let's see how the dataset looks like.","28698c42":"Reduce the dataset to the following columns that are known to investors **before** the loan is funded.","6550d5ee":"Add the two different verification status variables that indicate verified to one variable.","c0d2180c":"As we have seen there is a linear connection between grade and default rate and also between grade and interest rate. But this meens that there is also a linear connection between the default rate and the interest rate. We will come back to this in the next section.","9e4f287d":"Seperate features from targets.","cf4ca1f5":"Which grades occur most often?","8d4edaf9":"At first we transform the loan-status into a binary variable where 'Charged Off' = 1 and 'Fully Paid' = 0."}}