{"cell_type":{"1ce0f0d5":"code","b79d04fe":"code","eebda556":"code","0011abab":"code","929cb8e2":"code","e7514d9a":"code","c05f0ca5":"code","4d182820":"code","7f529c1c":"code","65e7306a":"code","4ebe2b5a":"code","bc17fb4b":"code","133eadf3":"code","5d67608a":"code","3e271ae9":"code","8a6b7c57":"code","a7da00b4":"code","145c2b0c":"code","12600ca4":"markdown","636569b6":"markdown","baf54cc7":"markdown","ece0c4b2":"markdown","d378f222":"markdown","8c2a5597":"markdown","5414384f":"markdown","046a9104":"markdown","c532cd8f":"markdown","ab57dd31":"markdown","ef5555b0":"markdown","aac08b71":"markdown","8a98d150":"markdown","3fcc37ac":"markdown"},"source":{"1ce0f0d5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b79d04fe":"import matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","eebda556":"path = '\/kaggle\/input\/m5-forecasting-accuracy'\ntrain_sales = pd.read_csv(f'{path}\/sales_train_validation.csv')\ncalendar = pd.read_csv(f'{path}\/calendar.csv')\nsubmission = pd.read_csv(f'{path}\/sample_submission.csv')\nsell_prices = pd.read_csv(f'{path}\/sell_prices.csv')\ntrain_sales.shape,calendar.shape,submission.shape,sell_prices.shape","0011abab":"train_sales.head()","929cb8e2":"train_sales['item_id'].value_counts()","e7514d9a":"calendar.head()","c05f0ca5":"submission.head()","4d182820":"sell_prices.head()","7f529c1c":"print(train_sales['item_id'].value_counts())\ntrain_sales.loc[train_sales['item_id']=='HOBBIES_1_001',:]","65e7306a":"train_sales['cat_id'].value_counts()","4ebe2b5a":"# \u4ef7\u683c\u4fe1\u606f\uff1a\u6bcf\u4e2aitem_id\u5bf9\u5e94\u7684\u4ef7\u683c\u662f\u6ce2\u52a8\u7684\ntmp = sell_prices.loc[sell_prices['item_id']=='HOBBIES_1_001',:]\nprint(tmp['sell_price'].value_counts())\ntmp","bc17fb4b":"fig = plt.figure(figsize=(16,6))\nfig.set(alpha=0.2) \n\nplt.subplot2grid((1,2),(0,0)) \n# \u67e5\u770b\u6bcf\u4e2a\u5546\u5e97\u7684\u4ef7\u683c\u6ce2\u52a8\n\nitem_prices = sell_prices.loc[sell_prices['item_id'].isin(['HOBBIES_1_001','FOODS_1_016'])]    \nfor i,item_id in enumerate(['HOBBIES_1_001','FOODS_1_016']):\n    plt.subplot2grid((1,2),(0,i))\n    tmp = item_prices[item_prices['item_id']==item_id]\n    for i,store_id in enumerate(tmp['store_id'].unique()):\n        store_sell_price = tmp.loc[tmp['store_id'] == store_id]\n        plt.plot(store_sell_price['wm_yr_wk'].values,store_sell_price['sell_price'].values,label=store_id)\n        \n    plt.title(f'{item_id} sell_price trend')\n    plt.legend()","133eadf3":"# \u67e5\u770b\u8be5\u5546\u54c1\u4e0b\u6240\u6709\u7c7b\u76ee\u4ef7\u683c\nca_1_prices = sell_prices.loc[sell_prices['store_id'] == 'CA_1']\nca_1_prices['dept_id'] = ca_1_prices['item_id'].apply(lambda x: x[:-4])\n\nplt.figure(figsize=(12, 6))\nfor dept_id in ca_1_prices['dept_id'].unique():\n    small_df = ca_1_prices.loc[ca_1_prices['dept_id'] == dept_id]\n    grouped = small_df.groupby(['wm_yr_wk'])['sell_price'].mean()\n    plt.plot(grouped.index, grouped.values, label=dept_id)\nplt.legend(loc=(1.0, 0.5))\nplt.title('CA_1 mean sell prices by dept');","5d67608a":"ca_prices = sell_prices.loc[sell_prices['store_id'].str.contains('CA')]\nplt.figure(figsize=(12, 6))\nfor d in ca_prices['store_id'].unique():\n    small_df = ca_prices.loc[ca_prices['store_id'] == d]\n    grouped = small_df.groupby(['wm_yr_wk'])['sell_price'].mean()\n    plt.plot(grouped.index, grouped.values, label=d)\nplt.legend(loc=(1.0, 0.5))\nplt.title('Mean sell prices by store in CA');","3e271ae9":"# \u9500\u91cf\u4fe1\u606f\uff1a\u4e0d\u540c\u5546\u54c1\u4fe1\u606f90\u5929\u65e5\u5747\u5b58\u5728\u5f88\u5927\u7684\u6ce2\u52a8\nfig = plt.figure(figsize=(16,16))\nfig.set(alpha=0.2) \n# \u8bbe\u7f6e\u5b50\u56fe\u4f4d\u7f6e\n\nplt.subplot2grid((3,1),(0,0)) \nfor i in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id']=='HOBBIES_1_001'].iloc[i,6:].rolling(90).mean().values,\\\n            label=train_sales.loc[train_sales['item_id']=='HOBBIES_1_001'].iloc[i,5])\n    plt.title('HOBBIES_1_001 sales, rolling mean 90 days')\n    plt.legend();\n\nplt.subplot2grid((3,1),(1,0))\nfor j in range(10):\n    plt.plot(train_sales.loc[train_sales['item_id']=='FOODS_1_016'].iloc[i,6:].rolling(90).mean().values,\\\n            label=train_sales.loc[train_sales['item_id']=='FOODS_1_016'].iloc[i,5])\n    plt.title('FOODS_1_016 sales, rolling mean 90 days')\n    plt.legend();\n\nplt.subplot2grid((3,1),(2,0))\ntmp= train_sales[train_sales['item_id'].isin(['FOODS_1_016','HOBBIES_1_001'])].groupby('item_id',as_index=False).mean()\nfor i in ['FOODS_1_016','HOBBIES_1_001']:\n    plt.plot(tmp.loc[tmp['item_id']==i].iloc[0,1:].rolling(90).mean().values,label=i)\nplt.title('item_id mean trend')\nplt.legend();","8a6b7c57":"# \u5177\u4f53\u5230\u67d0\u4e2a\u5e97\ncat_1_sales = train_sales.loc[train_sales['store_id'] == 'CA_1']\npd.crosstab(cat_1_sales['cat_id'],cat_1_sales['dept_id'])","a7da00b4":"dept_sum = cat_1_sales.groupby('dept_id').sum()\nplt.figure(figsize=(16,12))\nfor i,row in dept_sum.iterrows():\n    plt.plot(row.values,label=i)\nplt.title(f'CA1 sales by dept')\nplt.legend()\nplt.show()","145c2b0c":"fig, ax = plt.subplots(4,3,figsize=(16,22))\nplt.subplots_adjust(wspace=0.2,hspace=0.8)\nfor i, var in enumerate([\"year\", \"weekday\", \"month\", \"event_name_1\", \"event_name_2\", \n                         \"event_type_1\", \"event_type_2\", \"snap_CA\", \"snap_TX\", \"snap_WI\"]):\n    i += 1\n    plt.subplot(4,3,i)\n    g = sns.countplot(calendar[var])\n    g.set_xticklabels(g.get_xticklabels(), rotation=45)\n    g.set_title(var)","12600ca4":"#### \u7ed3\u8bba\n- \u5546\u5e97\u7684\u65e5\u5747\u9500\u91cf\u968f\u65f6\u95f4\u5b58\u5728\u8f83\u5927\u7684\u6ce2\u52a8\uff0c\u5bb9\u6613\u53d7\u5b63\u8282\u6027\u6216\u6d3b\u52a8\u5f71\u54cd\uff0c\u4e0d\u540c\u7684\u5546\u54c1\u5728\u4e0d\u540c\u5e97\u94fa\u7684\u9500\u91cf\u540c\u6837\u5b58\u5728\u8f83\u5927\u5dee\u522b\n- \u56fe\u4e09\u9488\u5bf9\u5355\u4e00\u5546\u54c1\u8fdb\u884c\u65e5\u5747\u9500\u91cf\u7edf\u8ba1\uff0c\u53d1\u73b0\u4e0d\u540c\u5546\u54c1\u6240\u5c5e\u7684\u7c7b\u76ee\u9500\u91cf\u4e4b\u524d\u540c\u6837\u5dee\u5f02\u5f88\u5927","636569b6":"#### \u7ed3\u8bba\n- \u4e0d\u540c\u7684\u7c7b\u76ee\u4e0b\u7684\u4ea7\u54c1\u65e5\u9500\u91cf\u5dee\u522b\u8f83\u5927\uff0cFOODS_3\u9500\u91cf\u6700\u9ad8\uff0c\u5b58\u5728\u4e00\u5b9a\u7684\u5c0f\u5468\u671f\u6027\n- \u7edf\u4e00\u7c7b\u76ee\u4e0b\u4e0d\u540c\u90e8\u95e8\u65e5\u9500\u91cf\u540c\u6837\u8f83\u5927\uff0c\u6709\u4e9b\u5448\u73b0\u4e00\u5b9a\u5468\u671f\u6027\uff0c\u6709\u4e9b\u5b58\u5728\u7ebf\u4e0b\u4e0a\u5347\u8d8b\u52bf","baf54cc7":"### calendar\uff1a\u65e5\u5386\n- date\uff1a2011.1.29--2016.6.19\n- wm_yr_wk:wm\u4ee3\u53f7\u6c83\u5c14\u739b\uff0c\u6807\u8bc61\u65e0\u610f\u4e49\uff0c2-3\u4ee3\u8868\u5e74\u4efd\uff0c\u6700\u540e\u4e24\u4f4d\u4ee3\u8868\u4eca\u5e74\u7b2c\u51e0\u5468\n- d\uff1a\u5bf9\u4e8e\u65e5\u671f\u7684\u7f16\u53f7\n- event_name_1:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e00\u573a\u5927\u4e8b\u4ef6\n- event_type_1:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e00\u573a\u5927\u4e8b\u4ef6\u7c7b\u578b\n- event_name_2:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e8c\u573a\u5927\u4e8b\u4ef6\n- event_type_2:\u5728\u90a3\u4e00\u5929\u53d1\u751f\u7684\u7b2c\u4e8c\u573a\u5927\u4e8b\u4ef6\u7684\u7c7b\u578b\n- snap_CA:\u52a0\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u53ef\u4ee5\u4f7f\u7528\u798f\u5229\u5238\n- snap_TX:\u5f97\u514b\u8428\u65af\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u4f7f\u7528\u798f\u5229\u5238\n- snap_WI:\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u5546\u5e97\u662f\u5426\u53ef\u4ee5\u5728\u90a3\u4e00\u5929\u4f7f\u7528\u798f\u5229\u5238","ece0c4b2":"### 1.2 \u4ef7\u683c\u4fe1\u606f","d378f222":"### \u540e\u7eed\n- \u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\n- \u6301\u7eed\u66f4\u65b0\u4e2d","8c2a5597":"### 5\u3001\u65f6\u95f4\u4fe1\u606f","5414384f":"#### \u7ed3\u8bba\n- \u5728\u4e0d\u540c\u7684\u65f6\u95f4\u5468\u671f\uff0c\u4ef7\u683c\u6ce2\u52a8\u7684\uff0c\u90e8\u5206\u7c7b\u76ee\u5b58\u5728\u6253\u6298\u60c5\u51b5\n- \u4e0d\u540c\u7684\u5546\u5e97\u4e4b\u95f4\u5b9a\u4ef7\u4e5f\u5b58\u5728\u5fae\u5c0f\u7684\u5dee\u5f02\uff0c\u5dee\u522b\u4e0d\u5927\n- \u4ef7\u683c\u7684\u9ad8\u4f4e\u4e0e\u8be5\u90e8\u95e8\u7684\u9500\u91cf\u5b58\u5728\u4e00\u5b9a\u7684\u76f8\u5173\uff0c\u4f46\u4e0d\u660e\u663e\n- \u4e0d\u540c\u7684\u5e97\u94fa\u4ef7\u683c\u6709\u5dee\u5f02\uff0c\u5e76\u4e14\u4ef7\u683c\u7684\u6ce2\u52a8\u662f\u968f\u65f6\u95f4\u53d8\u5316\u7684","046a9104":"#### \u7ed3\u8bba\n- \u6570\u636e\u6765\u6e90\u5206\u5e03: \u540c\u4e00\u4e2aitem_id\uff08\u5546\u54c1\u7c7b\u522b\u2014\u51fa\u552e\u95e8\u5e97-\u51fa\u552e\u7f16\u53f7\uff09\uff0c\u4ece\u4e0d\u540c\u5730\u65b9\u9009\u62e910\u6761\u8bb0\u5f55\n- \u5546\u54c1\u603b\u51713049\u79cd,\u603b\u5171\u4e09\u5927\u7c7b\u4ea7\u54c1","c532cd8f":"### train_sale\uff1a\u9500\u552e\u8bad\u7ec3\u6570\u636e\n- HOBBIES_1_001\uff1aitem_id\u5217\u4e2d:\u7c7b\u522b--\u51fa\u552e\u90e8\u95e8--\u7f16\u53f7\n- dept_id: \u5546\u54c1\u51fa\u552e\u90e8\u95e8\n- cat_id: \u5546\u54c1\u7684\u7c7b\u522b\n- store_id\uff1a\u54ea\u4e2a\u5546\u5e97\u51fa\u552e\n- state_id\uff1a\u5546\u54c1\u6240\u5728\u5dde\n- d_1-d_1913\uff1a\u7b2c\u4e00\u5929\u81f31913\u5929\uff0c\u6bcf\u5929\u7684\u5546\u54c1\u9500\u552e\u60c5\u51b5","ab57dd31":"### 3\u3001\u9500\u91cf\u4fe1\u606f","ef5555b0":"### submission\uff1a\u63d0\u4ea4\u683c\u5f0f\n- \u63d0\u4ea4\u8bad\u7ec3\u96c6\u4e2d\u5f80\u540e1-28\u5929\u7684\u9884\u6d4b\u503c\n- \u6839\u636e\u8bad\u7ec3\u96c6\u4e0a\u7684\u65f6\u95f4\u957f\u5ea6\uff0c\u516c\u5171\u699c\u5355\u4e0a\u7684\u5e94\u8be5\u662fd_1914\u5929\u81f3d_1941\u5929\u7684\u5546\u54c1\u9500\u91cf\u9884\u6d4b\u503c\n- \u516c\u5171\u699c\u5355\u5173\u95ed\u540e\uff0cd_1914\u5929\u81f3d_1941\u7684\u771f\u5b9e\u503c\u4f1a\u516c\u5e03\uff0c\u9884\u6d4b\u7684\u65f6\u95f4\u5f80\u540e\u5ef6\u7eed","aac08b71":"## \u4e00\u3001\u6570\u636eEDA\n### 1.1 \u57fa\u672c\u4fe1\u606f","8a98d150":"### 4\u3001\u5e97\u94fa\u7c7b\u76ee-dept\u4fe1\u606f","3fcc37ac":"### sale_price\uff1a\u9500\u552e\u4ef7\u683c\n- store_id\uff1a\u5546\u5e97\u7684ID\n- item_id\uff1a\u5546\u54c1\u7684\u7f16\u53f7\n- wm_yr_wk\uff1a\u8bad\u7ec3\u96c6\u4e2d\u76f8\u540c\n- sell_price: \u9500\u552e\u4ef7\u683c"}}