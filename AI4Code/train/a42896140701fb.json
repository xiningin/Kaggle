{"cell_type":{"b971f5e8":"code","2ab9e446":"code","32cb499d":"code","036792db":"code","44cae990":"code","0dab1471":"code","8c05730e":"code","ff8c5cb6":"code","705fbdfd":"code","7f8ec1db":"code","433ce695":"code","5edd77dd":"code","ae3e946f":"code","39cba12b":"code","fb4c2a66":"code","734348c3":"code","50b217ca":"code","aba2fe6c":"code","eaa02506":"code","313b2e75":"code","525a3ed9":"code","3f6fa517":"code","2e1c9528":"code","049bc8ee":"code","d589a0d8":"markdown","e42291a3":"markdown","515dd81c":"markdown","2b0071ee":"markdown","0bea2843":"markdown","9efe301b":"markdown","8bc4d4a5":"markdown","a5833b21":"markdown","15d60435":"markdown","23d85777":"markdown","1623da4e":"markdown","d203fd20":"markdown","4a6c5f0e":"markdown","010bd4de":"markdown","53a61051":"markdown","1fa3d666":"markdown","60f01415":"markdown","d4036a21":"markdown","c3967412":"markdown","53b477cf":"markdown"},"source":{"b971f5e8":"import numpy as np \nimport pandas as pd \nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\ntrain = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\nprint(\"train shape : \", train.shape)\nprint(\"test shape : \", test.shape)","2ab9e446":"train.head()","32cb499d":"train.describe()","036792db":"test.describe()","44cae990":"train[\"Survived\"].value_counts().plot(kind=\"pie\",explode=[0,0.05],autopct='%1.1f%%')\nplt.title(\"Ratio of Survived\",weight = \"bold\")","0dab1471":"train1 = train[train.columns[train.isnull().sum()!=0]]\ntest1 = test[test.columns[test.isnull().sum()!=0]]\nna_prop1 = (train1.isnull().sum()).sort_values()\nna_prop2 = (test1.isnull().sum()).sort_values()\nplt.figure(figsize=(10,8))\nsns.set_style('whitegrid')\nplt.subplot(211)\nna_prop1.plot.barh(color='blue')\nplt.title('Missing values(train set)', weight='bold')\nplt.subplot(212)\nna_prop2.plot.barh(color='blue')\nplt.title('Missing values(test set)', weight='bold' )","8c05730e":"train1 = train.select_dtypes(include = \"object\").drop([\"Name\",\"Ticket\",\"Cabin\"],axis=1)\nplt.figure(figsize=(12,6))\nplt.style.use('ggplot')\nfor i, col in enumerate(train1.columns):\n    plt.subplot(1,2,i+1)\n    sns.countplot(col,hue = \"Survived\",data = train)","ff8c5cb6":"train1 = train.select_dtypes(include = \"int\").drop([\"PassengerId\",\"Survived\"],axis=1)\nplt.figure(figsize=(12,5))\nplt.style.use('ggplot')\nfor i, col in enumerate(train1.columns):\n    plt.subplot(1,3,i+1)\n    sns.countplot(col,hue = \"Survived\",data = train)","705fbdfd":"train1 = train.select_dtypes(include = \"float\")\nplt.figure(figsize=(12,5))\nplt.style.use('ggplot')\nfor i, col in enumerate(train1.columns):\n    plt.subplot(1,2,i+1)\n    sns.distplot(train[train[\"Survived\"]==0][col],color='red')\n    sns.distplot(train[train[\"Survived\"]==1][col],color='blue')","7f8ec1db":"plt.figure(figsize=(12,5))\ntrain[\"Family\"] = train[\"SibSp\"] + train[\"Parch\"] + 1\nsns.countplot(\"Family\",hue=\"Survived\",data= train)","433ce695":"train['Age_group'] = pd.qcut(train['Age'], 10)\nplt.figure(figsize=(14,7))\nsns.countplot(x='Age_group', hue='Survived', data=train)","5edd77dd":"plt.figure(figsize=(14,5))\ntrain[\"Cabin\"].fillna(\"None\",inplace=True)\ntrain[\"Cabin_First\"] = [i[0][0] for i in train[\"Cabin\"]]\nplt.subplot(121)\nsns.barplot(\"Cabin_First\",\"Survived\",data = train)\nplt.title(\"Cabin First vs Survived\")\nplt.subplot(122)\nsns.countplot(train[train[\"Cabin_First\"]!=\"N\"][\"Cabin_First\"])\nplt.title(\"Cabin First Count(without NA value)\")","ae3e946f":"cabin_pcl_group = train.groupby([\"Cabin_First\",\"Pclass\"])[\"PassengerId\"].count()\ncabin_pcl_pers = {}\nfor i in train[\"Cabin_First\"].unique():\n    cabin_pcl_pers[i] = cabin_pcl_group[i] \/ cabin_pcl_group[i].sum()\n    for pcl in range(1,4):\n        try:\n            cabin_pcl_pers[i][pcl]\n        except:\n            cabin_pcl_pers[i][pcl] = 0\ncabin_pcl_pers = pd.DataFrame(cabin_pcl_pers).T\n\nplt.figure(figsize = (11,5))\nplt.bar(np.arange(9),cabin_pcl_pers[1], color='skyblue', width=0.7, label='Pclass = 1')\nplt.bar(np.arange(9),cabin_pcl_pers[2], bottom=cabin_pcl_pers[1], color='lightpink', width=0.7, label='Pclass = 2')\nplt.bar(np.arange(9),cabin_pcl_pers[3], bottom=cabin_pcl_pers[1] + cabin_pcl_pers[2], color='lightgray', width=0.7, label='Pclass = 3')\nplt.xticks(np.arange(9),cabin_pcl_pers.index)\nplt.legend(loc='upper left', bbox_to_anchor=(1, 1))\nplt.title('Percentage of Pclass with Cabin')","39cba12b":"train['Name'].head()","fb4c2a66":"train['First_Name'] = train['Name'].str.split(', ', expand=True)[1].str.split('.', expand=True)[0]\ntrain['First_Name'].value_counts()","734348c3":"train['First_Name_label'] = [0 if name=='Mr' else 1 if name=='Mrs'  else 2 if name=='Miss' else 3 if name=='Master' else 4 for name in train['First_Name']]\nplt.figure(figsize=(8,5))\nsns.barplot(x='First_Name_label', y='Survived', data=train)\nplt.xticks(np.arange(5),['Mr','Mrs','Miss','Master','Other'])","50b217ca":"print(train[\"Ticket\"].head(10))\nprint(\"Ticket unique value number : \" , train[\"Ticket\"].nunique())","aba2fe6c":"ticket_group = train.groupby('Ticket')['PassengerId'].count().reset_index()\nticket_group.columns = ['Ticket',\"Ticket_freq\"]\ntrain_t = train.merge(ticket_group, on = \"Ticket\")\nplt.figure(figsize=(13,10))\nplt.subplot(211)\nsns.countplot(x='Ticket_freq', hue='Survived', data=train_t)\nplt.subplot(212)\nsns.barplot(x='Ticket_freq', y='Survived', data=train_t)","eaa02506":"train_group = train.groupby(['Pclass','Sex'])['Survived'].mean()\n\nplt.figure(figsize=(10,7))\nsns.heatmap(train_group.unstack(\"Pclass\"), cmap='Blues', annot=True)","313b2e75":"train_group = train.groupby(['Pclass','Embarked'])['Survived'].mean()\nplt.figure(figsize=(10,7))\nsns.heatmap(train_group.unstack(\"Pclass\"), cmap='Blues', annot=True)","525a3ed9":"train.groupby(['Sex','Pclass','Embarked'])['Survived'].mean()","3f6fa517":"sns.factorplot('Embarked','Survived',hue='Pclass',data=train)","2e1c9528":"from scipy.stats import chi2_contingency\n\ndf1 = train.groupby([\"Embarked\",\"Survived\"])[\"Survived\"].count().unstack(\"Survived\")\nchi2, p, dof, expected = chi2_contingency(df1)\nmsg = 'Embarked Statistic: {}\\np-value: {}\\nDegree of Freedom: {}'\nprint(msg.format(chi2, p, dof))\n\ndf2 = train.groupby([\"Pclass\",\"Survived\"])[\"Survived\"].count().unstack(\"Survived\")\nchi2, p, dof, expected = chi2_contingency(df2)\nmsg = 'Pclass Statistic: {}\\np-value: {}\\nDegree of Freedom: {}'\nprint(msg.format(chi2, p, dof))\n\ndf3 = train.groupby([\"Sex\",\"Survived\"])[\"Survived\"].count().unstack(\"Survived\")\nchi2, p, dof, expected = chi2_contingency(df3)\nmsg = 'Sex Statistic: {}\\np-value: {}\\nDegree of Freedom: {}'\nprint(msg.format(chi2, p, dof))","049bc8ee":"plt.figure(figsize = (8,8))\nsns.heatmap(train.drop(\"PassengerId\",axis=1).corr(), cmap = \"Blues\", annot = True)","d589a0d8":"people have fare clear to 0 has a lower survival rate. And shows people younger than 5 has a higher survival rate.\nI'm going to divide the age into some groups.\nCreate new variable by adding SibSp and Parch.","e42291a3":"## chi square test","515dd81c":"## Missing Value","2b0071ee":"Cabin has many missing values.\n\n## Observation of variables","0bea2843":"When I saw these, I think the influence of Embarked does not seem to be great. Let's do a more detailed analysis","9efe301b":"People SibSp and Parch with 0 and Pclass with 3 has low survival rate.","8bc4d4a5":"Embarked's statistics are small compared to other variables. but it can be said that there is a difference.","a5833b21":"## Cabin\n\nCabin has many missing value, but once deal with rest values.","15d60435":"People male and embarked with S has low survival rate.","23d85777":"Those with low frequency were grouped together.","1623da4e":"## Survial rate by Embarked and Pclass","d203fd20":"## correlation","4a6c5f0e":"## Survial rate by Sex and Pclass","010bd4de":"# EDA\n\n## target value","53a61051":"## Name\nAfter looking at the Name variables's shape, only the first letter was taken.","1fa3d666":"## Survial rate by Sex, Pclass and Embarked","60f01415":"# Ticket\n\nTicket variable have different numbers and different shapes. So the frequency of those with the same number was measured","d4036a21":"Next notebook, I wiil do data preprocessing, modeling, and further work\n\n\n## Next\nhttps:\/\/www.kaggle.com\/rbud613\/taitanic-predictor-using-pipeline-processing","c3967412":"# Introduction\n\nI've been dealing with taitanic data while learning data analysis, but it's my first time in kaggle. \nAccuracy was about 77% before, so let's aim to get more than that score.\nFirst of all, I will do data grasping and EDA in this notebook.\n\n# Load packages and datasets","53b477cf":"Cabin vs Pclass percentage"}}