{"cell_type":{"3e9a707c":"code","ca313976":"code","29f4fb14":"code","698f18d6":"code","724029e1":"code","22a7f2b6":"code","c60a6783":"code","3b702eb6":"code","5a5da60f":"code","829d4117":"code","517f5bb9":"code","5a2048df":"code","8e21ba36":"code","72552bf3":"code","b7f8f7ac":"code","41d8a833":"code","e8aa5b1a":"code","73105f88":"code","ab81d61b":"code","e2d19ee0":"code","05214afa":"code","ae70cb9f":"code","f5b63482":"code","ae262375":"code","57fe84f2":"code","4fcfe512":"code","234c71e4":"code","28b7bdd9":"code","666ff70a":"code","7584a4a1":"code","909b6c9e":"code","b5342b57":"code","33d46f8a":"markdown","331bb8e7":"markdown","39d04ee0":"markdown","93b9a49c":"markdown","322cadb4":"markdown","fd8aae4b":"markdown","8d51863f":"markdown","3b466225":"markdown","79f8b950":"markdown","4b498dbe":"markdown"},"source":{"3e9a707c":"import pandas as pd\nimport seaborn as sns","ca313976":"data = pd.read_csv(\"..\/input\/diamonds\/diamonds.csv\").dropna()\ndata.head()","29f4fb14":"cuts      = list(data[\"cut\"].unique())\ncolors    = list(data[\"color\"].unique())\nclarities = list(data[\"clarity\"].unique())","698f18d6":"def markClass(Value=\"\", Class=[]):\n    for i in range(len(Class)):\n        if(Class[i]==Value):\n            return i","724029e1":"newData = pd.DataFrame(index=data.index, columns=data.columns)\nnewData.astype(\"float\")\nnewData.head()","22a7f2b6":"for i in list( set(data.columns)-set([\"cut\", \"color\", \"clarity\"]) ):\n    newData[i] = data[i]\nnewData[\"cut\"][0]=0\nfor i in data.index:\n    for j in data.columns:\n        if( j==\"cut\" ):\n            newData[j][i] = markClass(data.loc[i][j], cuts)\n        elif( j==\"color\" ):\n            newData[j][i] = markClass(data.loc[i][j], colors)\n        elif( j==\"clarity\" ):\n            newData[j][i] = markClass(data.loc[i][j], clarities)\nnewData.head()","c60a6783":"data = newData","3b702eb6":"data = data[ [\"carat\", \"cut\", \"clarity\", \"depth\", \"table\", \"price\", \"x\", \"y\", \"z\"] ]\ndata.head()","5a5da60f":"print(\"carat\")\nprint(\"mean: \"+str(data[\"carat\"].mean()))\nprint(\"standart deviation: \"+str(data[\"carat\"].std()))\ndata[\"carat\"].plot.hist(bins=15)","829d4117":"print(\"depth\")\nprint(\"mean: \"+str(data[\"depth\"].mean()))\nprint(\"standart deviation: \"+str(data[\"depth\"].std()))\ndata[\"depth\"].plot.hist(bins=25)","517f5bb9":"print(\"table\")\nprint(\"mean: \"+str(data[\"table\"].mean()))\nprint(\"standart deviation: \"+str(data[\"table\"].std()))\ndata[\"table\"].plot.hist(bins=25)","5a2048df":"print(\"price\")\nprint(\"mean: \"+str(data[\"price\"].mean()))\nprint(\"standart deviation: \"+str(data[\"price\"].std()))\ndata[\"price\"].plot.hist(bins=20)","8e21ba36":"print(\"x\")\nprint(\"mean: \"+str(data[\"x\"].mean()))\nprint(\"standart deviation: \"+str(data[\"x\"].std()))\ndata[\"x\"].plot.hist(bins=20)","72552bf3":"print(\"y\")\nprint(\"mean: \"+str(data[\"y\"].mean()))\nprint(\"standart deviation: \"+str(data[\"y\"].std()))\ndata[\"carat\"].plot.hist(bins=20)","b7f8f7ac":"print(\"cut\")\nprint(data[\"cut\"].value_counts())\ndata[\"cut\"].value_counts().plot.bar()","41d8a833":"print(\"clarity\")\nprint(data[\"clarity\"].value_counts())\ndata[\"clarity\"].value_counts().plot.bar()","e8aa5b1a":"print(\"Correlation matrix\")\nsns.heatmap(data.corr())","73105f88":"x_y_z = data[\"x\"]+data[\"y\"]+data[\"z\"]\n\ndata = data[ [\"carat\", \"cut\", \"clarity\", \"depth\", \"table\", \"price\"] ]\ndata[\"x+y+z\"] = x_y_z\ndata.head()","ab81d61b":"print(\"Correlation matrix\")\nsns.heatmap(data.corr())","e2d19ee0":"print(\"Correlation (R^2): carat-x+y+z\")\nprint( data[\"carat\"].corr(data[\"x+y+z\"]) )","05214afa":"X1 = data.drop([\"carat\", \"price\"], axis=1)\ny1 = data[\"price\"]\nX2 = data.drop([\"x+y+z\", \"price\"], axis=1)\ny2 = data[\"price\"]","ae70cb9f":"from sklearn import model_selection\nfrom sklearn import preprocessing\nfrom sklearn.linear_model import LinearRegression","f5b63482":"X1 = preprocessing.PolynomialFeatures(degree=3).fit_transform(X1)\nX2 = preprocessing.PolynomialFeatures(degree=3).fit_transform(X2)","ae262375":"X1_train, X1_test, y1_train, y1_test = model_selection.train_test_split(X1, y1, test_size=0.25)\nX2_train, X2_test, y2_train, y2_test = model_selection.train_test_split(X2, y2, test_size=0.25)\ndel X1\ndel y1\ndel X2\ndel y2","57fe84f2":"predModel1 = LinearRegression().fit(X1_train, y1_train)\npredModel2 = LinearRegression().fit(X2_train, y2_train)","4fcfe512":"from sklearn import metrics","234c71e4":"print( \"MSE for first model: \"+str( metrics.mean_squared_error(y1_test, predModel1.predict(X1_test)) ) )\nprint( \"MSE for second model: \"+str( metrics.mean_squared_error(y2_test, predModel2.predict(X2_test)) ) )","28b7bdd9":"print( \"R2 for first model: \"+str( metrics.r2_score(y1_test, predModel1.predict(X1_test)) ) )\nprint( \"R2 for second model: \"+str( metrics.r2_score(y2_test, predModel2.predict(X2_test)) ) )","666ff70a":"from sklearn.neural_network import MLPRegressor","7584a4a1":"NW = MLPRegressor((3, 3), activation=\"tanh\", max_iter=10000).fit(X2_train, y2_train)","909b6c9e":"print( \"MSE for regression model: \"+str( metrics.mean_squared_error(y2_test, predModel2.predict(X2_test)) ) )\nprint( \"MSE for neural network: \"+str( metrics.mean_squared_error(y2_test, NW.predict(X2_test)) ) )","b5342b57":"print( \"R2 for regression model: \"+str( metrics.r2_score(y2_test, predModel2.predict(X2_test)) ) )\nprint( \"R2 for neural network: \"+str( metrics.r2_score(y2_test, NW.predict(X2_test)) ) )","33d46f8a":"Ok, we have fully numerical data. **Let's begin analysis of data**.","331bb8e7":"As we see, parameters \"x\", \"y\" and \"z\" are good correlated. So let's replace these parameters into one parameter \"x+y+z\".","39d04ee0":"Firstly let's do this data fully numerical.","93b9a49c":"Ok, we have two regression models for prediction price. *First model uses \"cut\", \"clarity\", \"depth\", \"table\" and \"x+y+z\" parameters to predict price. Second model uses \"carat\", \"cut\", \"clarity\", \"depth\" and \"table\" parameters to predict price*. **Let's compare a quality of these models**.","322cadb4":"General analysis.","fd8aae4b":"Categorial data.","8d51863f":"Numerical data.","3b466225":"As we see neural network, built using same data,gives worth result. So there is a reason to search other models to predict price to do other manipulations with data to have better result.","79f8b950":"As we see parameters \"carat\" and \"x+y+z\" are well correlated. To build build better prediction model for predicting a price it would be good to reject one of these parameters. *To know what parameter we should reject let's build two regression models (in first model we will reject \"carat\" parameter and in second model we will reject \"x+y+z\" parameter) and compare these models. At the result **we will select better model**.*","4b498dbe":"As we see both metrics show that second regression model is better for prediction price. But as we see, using MSE, this prediction model is so bad. So let's try build a neural network to predict price and compare a quality."}}