{"cell_type":{"aa983a13":"code","50fb6f5a":"code","b1b51dbb":"code","3cb1ecd1":"code","d2196854":"code","3c833497":"code","37fbcd8c":"code","1910aeca":"code","969683c4":"code","db97cbca":"code","4928b2ea":"code","f43d9937":"code","5be17df7":"code","61f8c866":"code","0b5f9e30":"markdown","e271cdc3":"markdown","d3b183c5":"markdown","6c157a50":"markdown","fce567b7":"markdown","af40065e":"markdown","bf00a597":"markdown","a4a0a51c":"markdown"},"source":{"aa983a13":"#Importing the libraries\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.linear_model import Ridge, Lasso\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.ensemble import AdaBoostRegressor, RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom xgboost import XGBRegressor, XGBRFRegressor\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import mean_squared_log_error, mean_absolute_error\nfrom lightgbm import LGBMRegressor\nfrom sklearn.decomposition import PCA, TruncatedSVD\n\nfrom math import sqrt\nimport warnings\nwarnings.filterwarnings('ignore')","50fb6f5a":"#Reading data files\nimport os\nif not os.path.exists(\"..\/input\/train.csv\"):\n    os.symlink(\"..\/input\/home-data-for-ml-course\/train.csv\", \"..\/input\/train.csv\")  \n    os.symlink(\"..\/input\/home-data-for-ml-course\/test.csv\", \"..\/input\/test.csv\") \n\niowa_file_path = '..\/input\/train.csv'\nhome_data = pd.read_csv(iowa_file_path)\ntest_data_path = '..\/input\/test.csv'\ntest_data = pd.read_csv(test_data_path)\nsample_path = '..\/input\/sample_submission.csv'\nsample = pd.read_csv(sample_path)\nRANDOM_STATE=0  #to make use of in train-test split as well as model for randomness","b1b51dbb":"#Dropping features with high missing values\ntrain_clean=home_data.drop(columns=['MiscFeature','Fence','PoolQC','FireplaceQu','Alley'])","3cb1ecd1":"#Creating features and labels\nX=train_clean.drop(columns=['SalePrice'])\ny=home_data[['SalePrice']]","d2196854":"#Split the dataset to evaluate out sample performance\nfrom sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.15, random_state=RANDOM_STATE)\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","3c833497":"#Seperation of numerical and categorical features\nnum_feat=X_train.select_dtypes(include='number').columns.to_list()\ncat_feat=X_train.select_dtypes(exclude='number').columns.to_list()","37fbcd8c":"num_pipe=Pipeline([\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())\n])\ncat_pipe=Pipeline([\n    ('imputer', SimpleImputer(strategy='most_frequent')),\n    ('encoder', OneHotEncoder(handle_unknown='ignore'))\n])\nct=ColumnTransformer(remainder='drop',\n                    transformers=[\n                        ('numerical', num_pipe, num_feat),\n                        ('categorical', cat_pipe, cat_feat)\n                    ])\nmodel=Pipeline([\n    ('transformer', ct),   \n    ('predictor', GradientBoostingRegressor())\n])","1910aeca":"model.fit(X_train, y_train);","969683c4":"y_pred_train=model.predict(X_train)\ny_pred_test=model.predict(X_test)","db97cbca":"print('In sample MAE error: ', round(mean_absolute_error(y_pred_train, y_train)))\nprint('Out sample MAE error: ', round(mean_absolute_error(y_pred_test, y_test)))","4928b2ea":"#model.fit(X,y);","f43d9937":"def submission(test, model):\n    y_pred=model.predict(test)\n    result=pd.DataFrame({'Id':sample.Id, 'SalePrice':y_pred})\n    result.to_csv('\/kaggle\/working\/result.csv',index=False)","5be17df7":"submission(test_data, model)","61f8c866":"check=pd.read_csv('\/kaggle\/working\/result.csv')\ncheck.head()","0b5f9e30":"Feature Engineering","e271cdc3":"# Regression","d3b183c5":"Basic Libraries","6c157a50":"Prediction","fce567b7":"Result Submission","af40065e":"Loading Data","bf00a597":"Pipeline","a4a0a51c":"Evaluation of Result"}}