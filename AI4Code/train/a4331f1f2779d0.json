{"cell_type":{"a312c392":"code","60afaddd":"code","f8fe2150":"code","dc7d40bc":"code","72b3a886":"code","174bab95":"code","34c49a8c":"code","faf09fe9":"code","fdc626b6":"code","6a82396a":"code","6fac721f":"code","af52e9f4":"code","af661b91":"code","635370df":"code","32d227c7":"code","8663eb29":"code","38497db7":"code","29d3c237":"code","3b6e3f87":"code","841e044a":"code","59ed168d":"code","25bf1639":"code","ecc3e54b":"code","98853cb3":"code","8e961284":"code","6ee54068":"code","157ddb06":"code","51df5adc":"code","a93b90c0":"code","d5b6a171":"code","ea79e8f2":"code","4548342c":"code","ac718486":"code","aebaedd2":"code","b7e03b9a":"code","67e15595":"code","6c417f66":"code","f9cdf4da":"code","96a43a9b":"code","9ff428da":"code","fef49bb4":"code","eaaa7bb2":"code","02e30533":"code","7820a159":"code","4afd39ee":"code","99e56594":"code","b2de971e":"code","65eec8f8":"code","c461b6a7":"code","abb935b1":"code","c2121b74":"code","ebb38f51":"code","3b5bf6d0":"code","ef691e25":"code","27f6e965":"code","9bcfd26a":"code","09162c4a":"code","3b9f78a5":"code","0bed015c":"code","2fa735a7":"code","888399e1":"code","f6a8b5be":"code","0a414e93":"code","e149cc03":"code","800c2aff":"markdown","539f5810":"markdown","661ab11e":"markdown"},"source":{"a312c392":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport matplotlib\nmatplotlib.rcParams[\"figure.figsize\"] = (20,10)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","60afaddd":"df1=pd.read_csv(\"\/kaggle\/input\/bengaluru-house-price-data\/Bengaluru_House_Data.csv\")\ndf1.shape\ndf1.head()\n","f8fe2150":"df1.info()\ndf1.groupby(\"area_type\")[\"area_type\"].agg(\"count\")\ndf2=df1.drop([\"area_type\",\"society\",\"balcony\",\"availability\"],axis=\"columns\")","dc7d40bc":"df2.head()","72b3a886":"df2.isnull().sum()","174bab95":"df3=df2.dropna()\ndf3.isnull().sum()","34c49a8c":"df3.shape","faf09fe9":"df3[\"size\"].unique()","fdc626b6":"df3['bhk']=df3['size'].apply(lambda x: int(x.split(' ')[0]))","6a82396a":"#df3.head()\ndf3['bhk'].unique()","6fac721f":"df3[df3.bhk>20]","af52e9f4":"df3.total_sqft.unique()","af661b91":"#to see variations are float or not.\ndef is_float(x):\n    try:\n        float(x)\n    except:\n        return False\n    return True\n        ","635370df":"# '~'' is for negate operation \ndf3[~df3['total_sqft'].apply(is_float)].head(12)","32d227c7":"#creating a function to take the average of the range of total_sqft\ndef sqft_to_num(x):\n    num=x.split('-')\n    if len(num)==2:\n        return (float(num[0])+float(num[1]))\/2\n    try:\n        return float(x)\n    except:\n        return None\n    ","8663eb29":"df4=df3.copy()\ndf4[\"total_sqft\"] = df4[\"total_sqft\"].apply(sqft_to_num)\ndf4.head()\n","38497db7":"import seaborn as sns\nsns.histplot(df4[\"total_sqft\"])","29d3c237":"sns.boxplot(df4[\"total_sqft\"])","3b6e3f87":"df4[\"total_sqft\"].skew()","841e044a":"df4.loc[30]\ndf4.head()","59ed168d":"df5=df4.copy()\n#creating a feature(feature engineering) which can be helpful for \n#outlier detection and removal in the later stage\n#price*100000(price is in lakh rupees)\/totalsqft\ndf5['price_per_sqft'] =df5['price']*100000\/df5['total_sqft']\ndf5.head()\n","25bf1639":"#location is categorical data. there is 1304 data which is big.\n#Usually to handle text data we convert it into dummy columns using one hot encoding\nlen(df5.location.unique())","ecc3e54b":"df5.location = df5.location.apply(lambda x: x.strip())\nlocation_stats = df5.groupby('location')['location'].agg('count').sort_values(ascending=False)\nlocation_stats","98853cb3":"len(location_stats[location_stats<=10])","8e961284":"location_stats_below_10 = location_stats[location_stats<=10]\nlocation_stats_below_10","6ee54068":"len(df5.location.unique())","157ddb06":"df5.location = df5.location.apply(lambda x: 'other' if x in location_stats_below_10 else x)\nlen(df5.location.unique())","51df5adc":"df5.head(10)","a93b90c0":"df5[df5.total_sqft\/df5.bhk<300].head()","d5b6a171":"df5.shape","ea79e8f2":"df6 = df5[~(df5.total_sqft\/df5.bhk<300)]\ndf6.shape","4548342c":"df6.price_per_sqft.describe()\n# 267 price per sqft in banglore is too low and very unlikely.\n#so we have to remove these.We will use standard deviation","ac718486":"def remove_PricePerSqft_outliers(df):\n    df_out = pd.DataFrame()\n    for key, subdf in df.groupby('location'):\n        m = np.mean(subdf.price_per_sqft)\n        st = np.std(subdf.price_per_sqft)\n        reduced_df = subdf[(subdf.price_per_sqft>(m-st)) & (subdf.price_per_sqft<=(m+st))]\n        df_out = pd.concat([df_out,reduced_df],ignore_index=True)\n    return df_out \ndf7 = remove_PricePerSqft_outliers(df6)\ndf7.shape","aebaedd2":"def plt_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price_per_sqft,color='blue',label='2 BHK', s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price_per_sqft,marker='+',color='green',label='3 BHK', s=50)\n    plt.xlabel('Total Square Feet Area')\n    plt.ylabel(\"Price per Square Feet\")\n    plt.title(location)\n    plt.legend()\n    \nplt_scatter_chart(df7,'Rajaji Nagar')    \n    \n    \n    \n    \n    ","b7e03b9a":"def plt_scatter_chart(df,location):\n    bhk2 = df[(df.location==location) & (df.bhk==2)]\n    bhk3 = df[(df.location==location) & (df.bhk==3)]\n    matplotlib.rcParams['figure.figsize'] = (15,10)\n    plt.scatter(bhk2.total_sqft,bhk2.price,color='blue',label='2 BHK', s=50)\n    plt.scatter(bhk3.total_sqft,bhk3.price,marker='+',color='green',label='3 BHK', s=50)\n    plt.xlabel('Total Square Feet Area')\n    plt.ylabel(\"Price\")\n    plt.title(location)\n    plt.legend()\n    \nplt_scatter_chart(df7,'Hebbal')  ","67e15595":"def remove_bhk_outlier(df):\n    exclude_indices = np.array([])\n    for location,location_df in df.groupby('location'):\n        bhk_stats = {}\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            bhk_stats[bhk] = {\n                'mean' : np.mean(bhk_df.price_per_sqft),\n                'std' : np.std(bhk_df.price_per_sqft),\n                'count' : bhk_df.shape[0]\n            }\n        for bhk, bhk_df in location_df.groupby('bhk'):\n            stats = bhk_stats.get(bhk-1)\n            if stats and stats['count']>5:\n                exclude_indices = np.append(exclude_indices,bhk_df[bhk_df.price_per_sqft<(stats['mean'])].index.values)\n    return df.drop(exclude_indices,axis='index')\ndf8 = remove_bhk_outlier(df7)\ndf8.shape","6c417f66":"plt_scatter_chart(df8,\"Hebbal\")\n","f9cdf4da":"import matplotlib\nmatplotlib.rcParams['figure.figsize'] = (20,10)\nplt.hist(df8.price_per_sqft,rwidth=0.8)\nplt.xlabel(\"Price per Square Feet\")\nplt.ylabel(\"Count\")","96a43a9b":"import seaborn as sns\nsns.histplot(df8[\"price_per_sqft\"])","9ff428da":"df8['bath'].unique()","fef49bb4":"df8[df8['bath']>10]","eaaa7bb2":"sns.histplot(df8[\"bath\"])","02e30533":"df8[df8['bath']>df8['bhk']+2]","7820a159":"df9=df8[df8['bath']<df8['bhk']+2]\ndf9.shape","4afd39ee":"df10=df9.drop(['size','price_per_sqft'],axis='columns')\ndf10.head()","99e56594":"#we have to convert text data to numerical ,here we use 'one hot encoding'\ndummies=pd.get_dummies(df10['location'])\ndummies.head(3)","b2de971e":"df11=pd.concat([df10,dummies.drop('other',axis='columns')],axis='columns')\ndf11.head(3)","65eec8f8":"df12=df11.drop('location',axis='columns')\ndf12.head(3)","c461b6a7":"X=df12.drop('price',axis='columns')\nX.head()","abb935b1":"y=df12['price']\ny.head()","c2121b74":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)","ebb38f51":"from sklearn.linear_model import LinearRegression\nlr_clf = LinearRegression()\nlr_clf.fit(X_train,y_train)\nlr_clf.score(X_test,y_test)","3b5bf6d0":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\n\ncv=ShuffleSplit(n_splits = 5, test_size=0.2, random_state=0)\ncross_val_score(LinearRegression(),X,y,cv=cv)","ef691e25":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.linear_model import Lasso\nfrom sklearn.tree import DecisionTreeRegressor\n\ndef find_best_model_using_gridsearchcv(X,y):\n    algos = {\n        'linear_regression' : {\n            'model':LinearRegression(),\n            'params': {\n                'normalize':[True, False]\n            }\n        },\n        'lasso' : {\n            'model':Lasso(),\n            'params': {\n                'alpha':[1,2],\n                'selection':['random','cyclic']\n            }\n        },\n        'decision tree': {\n            'model':DecisionTreeRegressor(),\n            'params': {\n                'criterion' : ['mse','friedman_mse'],\n                'splitter' : ['best','random']\n            }\n        }\n        \n    }\n    scores=[]\n    cv = ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\n    for algo_name, config in algos.items():\n        gs = GridSearchCV(config['model'],config['params'],cv=cv,return_train_score=False)\n        gs.fit(X,y)\n        scores.append({\n            'model':algo_name,\n            'best_score':gs.best_score_,\n            'best_params' : gs.best_params_\n        })\n    \n    return pd.DataFrame(scores,columns=['model','best_score','best_params'])\n        ","27f6e965":"find_best_model_using_gridsearchcv(X,y)","9bcfd26a":"X.columns","09162c4a":"#np.where(X.columns=='2nd Phase Judicial Layout')[0][0]","3b9f78a5":"def predict_price(location,sqft,bath,bhk):\n    loc_index = np.where(X.columns==location)[0][0]\n    \n    x = np.zeros(len(X.columns))\n    x[0] = sqft\n    x[1] = bath\n    x[2] = bhk\n    if loc_index >= 0:\n        x[loc_index] = 1\n    return lr_clf.predict([x])[0]\n","0bed015c":"predict_price('1st Phase JP Nagar',1000,3,3)","2fa735a7":"predict_price('1st Phase JP Nagar',1000,2,3)","888399e1":"predict_price('1st Phase JP Nagar', 1000, 2,2)","f6a8b5be":"predict_price('Indira Nagar',1000,2,3)","0a414e93":"predict_price('Indira Nagar', 1000, 2,2)","e149cc03":"predict_price('Indira Nagar',1000,3,3)","800c2aff":"OUTLIER REMOVAL\n-\n1020 sqft house with 6 bedroom will be an error\n","539f5810":"here taking dataframe as an input and grouping them by location first, and per location this sub dataframe for which mean m and standard deviation st. Them filtering all the points which are beyond the standard deviation.","661ab11e":"##### "}}