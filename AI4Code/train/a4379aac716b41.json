{"cell_type":{"cd4e3b39":"code","d4a48e68":"code","7084cc8d":"code","a9920e66":"code","bd8663b6":"code","2f589855":"markdown","91ca7524":"markdown","282782e1":"markdown","52e7f5c8":"markdown"},"source":{"cd4e3b39":"from pathlib import Path\nimport numpy as np\nimport pandas as pd\nfrom sklearn import model_selection","d4a48e68":"data_dir = Path('..\/input\/tabular-playground-series-sep-2021\/')\ndf_train = pd.read_csv(data_dir\/'train.csv')\nsample_sub = pd.read_csv(data_dir\/'sample_solution.csv')","7084cc8d":"target = \"claim\"\nfeatures = [c for c in df_train.columns if c not in ['id', 'claim', 'kfold']]","a9920e66":"def create_folds(seed=0, splits=5):\n    print(f\"Creating {splits}-split fold with seed {seed}...\")\n    df_tmp = df_train.copy()\n    df_tmp[\"kfold\"] = -1\n\n    skf = model_selection.StratifiedKFold(n_splits=splits, shuffle=True, random_state=seed)\n    for fold, (train_idx, valid_idx) in enumerate(skf.split(X=df_tmp, y=df_tmp[target])):\n        df_tmp.loc[valid_idx, \"kfold\"] = fold\n\n    print(\"Saving fold...\")\n    df_tmp.to_csv(\"train_folds.csv\", index=False)\n    print(\"Fold saved.\")","bd8663b6":"create_folds(seed=42)","2f589855":"## Load the data","91ca7524":"## Import libraries","282782e1":"## Create folds","52e7f5c8":"## Setup features"}}