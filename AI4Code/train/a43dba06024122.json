{"cell_type":{"0452c30f":"code","63ec0eed":"code","aed16aaa":"code","e2c5104d":"code","df535768":"code","738a56c2":"code","2acf4126":"code","6f5e236a":"code","cec4e230":"code","0d77d703":"code","f0c38464":"code","70873171":"code","bcb0f375":"code","2a89382d":"code","568af7c2":"code","b25d506b":"code","e348ad9e":"code","77d076bc":"code","53388ada":"code","1eaeff76":"code","0d86a1f8":"code","b897b034":"code","887b82be":"code","2e2fed05":"code","11957ac3":"code","1259e123":"markdown","a71db4c3":"markdown","92296afc":"markdown","08a49733":"markdown","efb03b4e":"markdown"},"source":{"0452c30f":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport os\nimport scipy as sp","63ec0eed":"#title_data=pd.read_csv('\/kaggle\/input\/covid-pickle-csv\/title.csv')\ntitle_data_pkl=pd.read_pickle('\/kaggle\/input\/covid-pickle-csv\/title.pkl')\nimport scipy.spatial\nval_k=100\nbase=pd.DataFrame()\nfor k in range(title_data_pkl.shape[0]\/\/val_k):\n    distances=scipy.spatial.distance.cdist(title_data_pkl[val_k*k:val_k*(k+1)], title_data_pkl, \"cosine\")\n    base=base.append(pd.DataFrame(np.argwhere(1-distances > 0.9)))\n    print(\"----\" + str(k) + \"----\")\nbase.to_pickle('result.pkl')","aed16aaa":"#title_data=pd.read_csv('\/kaggle\/input\/covid-pickle-csv\/title.csv')\ntitle_data_pkl=pd.read_pickle('\/kaggle\/input\/covid-pickle-csv\/title_abstract.pkl')\nimport scipy.spatial\nval_k=100\nbase=pd.DataFrame()\nfor k in range(title_data_pkl.shape[0]\/\/val_k):\n    distances=scipy.spatial.distance.cdist(title_data_pkl[val_k*k:val_k*(k+1)], title_data_pkl, \"cosine\")\n    base=base.append(pd.DataFrame(np.argwhere(1-distances > 0.9)))\n    print(\"----\" + str(k) + \"----\")\nbase.to_pickle('result_title_abstract.pkl')","e2c5104d":"# document_mapping={}\n# for i in range(len(title_data_pkl)):\n#     distances = sp.spatial.distance.cdist([title_data_pkl[i]], title_data_pkl, \"cosine\")\n#     for j in range(distances.shape[1]):\n#         if i!=j:\n#             val=distances[0][j]\n#             val=1-val\n#             if val>=0.7:\n#                 if j % 1000==0:\n#                     print(j)\n#                 if i in document_mapping:\n#                     document_mapping[i].append((j,val))\n#                 else:\n#                     document_mapping[i]=[]\n#                     document_mapping[i].append((j,val))","df535768":"# np.array(title_data_pkl).shape\n# title_data_pkl = pd.DataFrame(title_data_pkl)\n\n\n\n# #also can output sparse matrices\n# similarities_sparse = cosine_similarity(A_sparse,dense_output=False)\n#print('pairwise sparse output:\\n {}\\n'.format(similarities_sparse))","738a56c2":"\n# from sklearn.metrics.pairwise import cosine_similarity\n# title_data_pkl= cosine_similarity(title_data_pkl, title_data_pkl)\n# print(title_data_pkl.shape)\n","2acf4126":"# idx = np.argwhere(title_data_pkl > 0.01) ","6f5e236a":"# idx.shape","cec4e230":"# from sklearn.metrics.pairwise import cosine_similarity\n# from scipy import sparse\n# title_data_pkl = sparse.csr_matrix(title_data_pkl)","0d77d703":"# import scipy.sparse as sp\n# #del(A_sparse)\n# B = title_data_pkl > 0.8 #the condition\n# indexes_list = sp.find(B)","f0c38464":"# similarities_sparse","70873171":"# del(similarities_sparse)\n# import gc\n# gc.collect()","bcb0f375":"# np.where(df_new>0.8,1,0).sum()","2a89382d":"os.listdir('\/kaggle\/input\/data-json\/')\ndef _eval_f(x):\n    try:\n        return ast.literal_eval(x)\n    except:\n        return x","568af7c2":"location_for_ref_data='\/kaggle\/input\/data-json\/'\nall_ref=pd.read_pickle(location_for_ref_data+'get_ref_text_df.pkl')\nall_ref['title']=all_ref['title'].str.lower().apply(lambda x: _eval_f(x))\nall_ref['ref_title']=all_ref['ref_title'].str.lower().apply(lambda x: _eval_f(x)).fillna('na')\nall_ref=all_ref[all_ref['title'].apply(lambda x:len(x))>5]\nall_ref=all_ref[all_ref['ref_title'].apply(lambda x:len(str(x)))>5]","b25d506b":"all_ref_1=all_ref[['title','ref_title','paper_id']]\nall_ref_1['ref_title']=all_ref_1['title']\nall_ref_all=all_ref.append(all_ref_1.drop_duplicates(),sort=False)","e348ad9e":"int_lt=list(set(all_ref['title'].str.lower().unique().tolist()) & set(all_ref['ref_title'].str.lower().unique().tolist()))\nprint(\"Citations present in the data \" + str(len(int_lt)))","77d076bc":"all_ref_all_new=all_ref_all[['ref_title','paper_id','title']]\nall_ref_all_new=all_ref_all_new[all_ref_all_new['ref_title'].isin(int_lt)]\n","53388ada":"print(\"Paper id missing for all citations the data =\" + str(all_ref_all_new.paper_id.isna().sum()))","1eaeff76":"# title_abstract_data=pd.read_csv('\/kaggle\/input\/covid-pickle-csv\/title_abstract.csv')\n# title_abstract_data_pkl=pd.read_pickle('\/kaggle\/input\/covid-pickle-csv\/title_abstract.pkl')\n# title_abstract_data","0d86a1f8":"# title_abstract_data_pkl.shape","b897b034":"self_join=all_ref_all_new.merge(all_ref_all_new,on='paper_id')\nself_join=self_join\nself_join.columns\nprint(self_join.ref_title_y.unique().shape[0])\nprint(self_join.ref_title_x.unique().shape[0])\n","887b82be":"all_=self_join.ref_title_x.unique()\n# creating dict \nnode_lookup={}\nfor k in range(all_.shape[0]):\n    node_lookup[all_[k]]=k\nnode_lookup_rev={}\nfor k in range(all_.shape[0]):\n    node_lookup_rev[k]=all_[k]\n#check\nself_join[self_join['ref_title_y']=='molecular advances in severe acute respiratory syndrome-associated coronavirus (sars-cov)']","2e2fed05":"self_join['node_1']=self_join['ref_title_x'].apply(lambda x: node_lookup[x])\nself_join['node_2']=self_join['ref_title_y'].apply(lambda x: node_lookup[x])\nself_join","11957ac3":"self_join.to_pickle('res_ref.pkl')","1259e123":"# Data imported from json to get articles citations\n","a71db4c3":"# Appending the paper as a refrence also","92296afc":"# Assign Nodes","08a49733":"# Finding all citations available in the article. Paper id not available for citations","efb03b4e":"# Reading Vectors match"}}