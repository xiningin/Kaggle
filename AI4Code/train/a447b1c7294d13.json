{"cell_type":{"c4550acf":"code","9295e427":"code","ac96d7cf":"code","19896acd":"code","50313f7f":"code","0ca9afdd":"code","bbfecfb2":"code","9d8f399f":"code","84caca0d":"code","92c623b3":"code","6a715b56":"code","4c5a6ee1":"code","1ffd5202":"code","e66b817f":"code","65dcf3ce":"code","d59d88ef":"code","7f9ec39f":"markdown","423dd8cc":"markdown"},"source":{"c4550acf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport json\nimport re","9295e427":"df_train=pd.read_csv(\"..\/input\/coleridgeinitiative-show-us-the-data\/train.csv\")\nsample=pd.read_csv(\"..\/input\/coleridgeinitiative-show-us-the-data\/sample_submission.csv\")","ac96d7cf":"print(\"No.of Row's and Columns of data \\n *********************** \\n  \",df_train.shape,\n      \"\\n\\n Top 5 records of the data \\n ************************\",df_train.head(5),\n      \"\\n\\n ************************** \\n \\n Bottom 5 records of the data \\n\\n ******************\",df_train.tail(5))","19896acd":"#creating id values as list for json data import\nid_values=df_train.Id.values.tolist()\n\n#Creating a function to import json data\nidwise_json_txt=[]\ndef json_txt_extraction():    \n    for id_lst in range(len(id_values)):\n#         print(id_lst,id_values[id_lst])\n        f = open(\"..\/input\/coleridgeinitiative-show-us-the-data\/train\/\"+ id_values[id_lst] +\".json\",)\n        data = json.load(f)\n        dict_txt_lst=[]\n        for inp_txt in range(len(data)):\n            txt=data[inp_txt]\n            txtn=txt['text']\n            dict_txt_lst.append(txtn)\n        idwise_json_txt_str=' '.join(dict_txt_lst)\n        idwise_json_txt.append(idwise_json_txt_str)\n    return idwise_json_txt \njson_txt_extraction()\n\n#updating train data with json text data\ndf_train['text']=idwise_json_txt","50313f7f":"df_train.head()","0ca9afdd":"def clean_text(txt):\n    return re.sub('[^A-Za-z0-9]+', ' ', str(txt).lower())","bbfecfb2":"data_title = list(map(clean_text, df_train['dataset_title'].unique()))\ndata_label = list(map(clean_text, df_train['dataset_label'].unique()))\ncleaned_label = list(df_train['cleaned_label'].unique())","9d8f399f":"# data_title\n# data_label","84caca0d":"labels = set(data_title + data_label + cleaned_label)","92c623b3":"# labels","6a715b56":"# importing test data\n#creating id values as list for json data import\nid_values_text=sample.Id.values.tolist()\n\n#Creating a function to import json data\nidwise_json_txt_test=[]\ndef json_txt_extraction_test():    \n    for id_lst in range(len(id_values_text)):\n#         print(id_lst,id_values[id_lst])\n        f = open(\"..\/input\/coleridgeinitiative-show-us-the-data\/test\/\"+ id_values_text[id_lst] +\".json\",)\n        data = json.load(f)\n        dict_txt_lst=[]\n        for inp_txt in range(len(data)):\n            txt=data[inp_txt]\n            txtn=txt['text']\n            dict_txt_lst.append(txtn)\n        idwise_json_txt_str=' '.join(dict_txt_lst)\n        idwise_json_txt_test.append(idwise_json_txt_str)\n    return idwise_json_txt_test \njson_txt_extraction_test()\n\n#updating train data with json text data\nsample['text']=idwise_json_txt_test\n","4c5a6ee1":"sample","1ffd5202":"mapping = dict()\nfor row in df_train.iterrows():\n    cleaned_label = row[1]['cleaned_label'].strip()\n    title = clean_text(row[1]['dataset_title']).strip()\n    dataSetLabel = clean_text(row[1]['dataset_label']).strip()\n    mapTitle = mapping.get(title, set())\n    mapTitle.add(cleaned_label)\n    mapping[title] = mapTitle\n    mapLabel = mapping.get(dataSetLabel, set())\n    mapLabel.add(cleaned_label)\n    mapping[dataSetLabel] = mapLabel\n    mapCleanedLabel = mapping.get(cleaned_label, set())\n    mapCleanedLabel.add(cleaned_label)\n    mapping[dataSetLabel] = mapLabel","e66b817f":"strings = []\nfor text in sample['text'].values:\n    text = clean_text(text)\n    predictString = set()\n    for label in labels:\n        if label in text:\n            for string in mapping[label.strip()]:\n                predictString.add(string)\n    predictString = \"|\".join(predictString)\n    strings.append(predictString)","65dcf3ce":"strings","d59d88ef":"sample['PredictionString'] = strings\nsample.drop(['text'], axis=1).to_csv(\"submission.csv\", index=False)","7f9ec39f":"# Data import","423dd8cc":"# Basic Checks"}}