{"cell_type":{"13554eb2":"code","a2374118":"code","c6b46489":"code","dfb4d966":"code","66c1794a":"code","1dbbbf59":"code","8f22783e":"code","23441a91":"code","12730df1":"code","695e8690":"code","6d5d4a43":"code","9fb8739c":"code","bba232d4":"code","aed69bc1":"code","86dd4394":"code","52186d6a":"code","f6fb2f2a":"code","8b78a552":"code","0a31b7ed":"markdown","c19e1c6b":"markdown"},"source":{"13554eb2":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","a2374118":"import pandas as pd","c6b46489":"df=pd.read_csv('\/kaggle\/input\/car-bay-data-set\/Car_Buy.csv')\ndf.head()","dfb4d966":"inputs = df.drop('Buy',axis='columns')","66c1794a":"target = df['Buy']","1dbbbf59":"from sklearn.preprocessing import LabelEncoder\nle_Age = LabelEncoder()\nle_Mil = LabelEncoder()\nle_RoadTested = LabelEncoder()","8f22783e":"inputs['Age_n'] = le_Age.fit_transform(inputs['Age'])\ninputs['Mileage_n'] = le_Mil.fit_transform(inputs['Mileage'])\ninputs['RoadTested_n'] = le_RoadTested.fit_transform(inputs['Road tested'])","23441a91":"inputs_n = inputs.drop(['Age','Mileage','Road tested'],axis='columns')","12730df1":"inputs_n","695e8690":"from sklearn import tree\nmodel = tree.DecisionTreeClassifier()\n#model = tree.DecisionTreeClassifier(criterion='entropy')","6d5d4a43":"model.fit(inputs_n, target)","9fb8739c":"model.score(inputs_n,target)","bba232d4":"model.predict([[1,1,0]])","aed69bc1":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(inputs_n, target, test_size=0.20, random_state=101)","86dd4394":"model.fit(X_train, y_train)","52186d6a":"predictions = model.predict(X_test)\nprint(X_test)\nprint(y_test)\nprint(predictions)","f6fb2f2a":"model.score(X_test,y_test)","8b78a552":"from sklearn.tree import plot_tree\nimport matplotlib.pyplot as plt\nfig = plt.figure(figsize=(16,12))\na = plot_tree(model, feature_names=df.columns, fontsize=12, filled=True, \n              class_names=['Dont Buy', 'Buy'])","0a31b7ed":"Sould I buy recent car with Low mileage which is not road tested?","c19e1c6b":"import sklearn and make your model \n"}}