{"cell_type":{"26cd6bf3":"code","6f56393d":"code","78cb6b3c":"code","2acb8346":"code","7fa6f010":"code","3151f652":"code","4127aa44":"code","4407f0dc":"code","ae40d173":"code","822a96db":"code","b4f4f1a4":"code","63ff88b0":"code","e9c08fee":"code","3e484190":"code","ceed7d18":"code","621bcdbf":"code","c85e6d6a":"code","c9069616":"code","5b2ed11a":"code","e598e367":"code","2f44d96f":"code","b7b1161d":"code","84a622d3":"code","c169c2e6":"code","0176b002":"code","2efc0352":"code","d7089987":"markdown","f3c4ed8f":"markdown","a167e82a":"markdown","1219563a":"markdown","41e57e5b":"markdown","2ff4ca2f":"markdown","711c52e3":"markdown"},"source":{"26cd6bf3":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6f56393d":"df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndf.head()","78cb6b3c":"data = df[ df[\"Country\/Region\"] ==\"Turkey\"]","2acb8346":"x = np.array(data.loc[:,\"Confirmed\"]).reshape(-1,1)\ny = np.array(data.loc[:,\"Deaths\"]).reshape(-1,1)","7fa6f010":"from sklearn.linear_model import LinearRegression\nlinReg = LinearRegression()\nlinReg.fit(x,y)\ny_head = linReg.predict(x)","3151f652":"#Scatter\n\nplt.plot(x,y_head,color=\"red\")\nplt.scatter(x,y)\nplt.xlabel=\"confirmed\"\nplt.ylabel=\"death\"\nplt.show()","4127aa44":"# herhangi bir confirmed say\u0131s\u0131na g\u00f6re predict edelim\n\ny_ = linReg.predict([[6000]])\nprint(\"6k te\u015fhis sonucu \u00f6len ki\u015fi say\u0131s\u0131:\",y_)","4407f0dc":"# yap\u0131lan predictin ne kadar dogru oldgunu de\u011ferlendirme RSQUARE\n\nfrom sklearn.metrics import r2_score \nprint(\"rscore: \",r2_score(y,y_head))","ae40d173":"df2 = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/COVID19_line_list_data.csv\")\ndf2.head(2)","822a96db":"data = df2 [df2[\"country\"]==\"China\"]\ndata.head(2)","b4f4f1a4":"data_ =data[\"country\"].value_counts(dropna=False)\ndata_","63ff88b0":"data1_ =df2[\"case_in_country\"].fillna(-1)\ndata2_ =df2[\"age\"].fillna(-1)\ndata3_ =df2[\"from Wuhan\"].fillna(-1)","e9c08fee":"#x = np.array(df2.iloc[:,[8,14]]).reshape(-1,1) #Age and from whan attr. index num\n#y = np.array(data1_.loc[:,\"case_in_country\"]).reshape(-1,1)","3e484190":"print(\"data1_.size\",data1_.size)\nprint(\"data2_.size\",data2_.size)\nprint(\"data3_.size\",data3_.size)","ceed7d18":"x_ = np.array(data1_).reshape(-1, 1) #case_in_country\ny_ = np.array(data2_).reshape(-1, 1) #age","621bcdbf":"from sklearn.linear_model import LinearRegression\n\nmlReg = LinearRegression()\n\nmlReg.fit(x_, y_) \n\ny_head = mlReg.predict(x_)\n\n# y_head=mlReg.predict( dataMin, dataMax)","c85e6d6a":"plt.scatter(x_,y_,color=\"pink\")\nplt.plot(x_, y_head, 'p--')\nplt.show()","c9069616":"df = pd.read_csv(\"\/kaggle\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv\")\ndf.head()","5b2ed11a":"x = np.array(df[\"Deaths\"]).reshape(-1,1)\ny = np.array(df[\"Confirmed\"]).reshape(-1,1)","e598e367":"from sklearn.preprocessing import PolynomialFeatures\n\npolyReg = PolynomialFeatures(degree=2)\n\nx_poly = polyReg.fit_transform(x)\n\nlinReg = LinearRegression()\n\nlinReg.fit(x_poly,y)\n\ny_head = linReg.predict(x_poly)\n","2f44d96f":"plt.plot(x,y_head,color=\"orange\")\nplt.show()","b7b1161d":"x = np.array(df[\"Deaths\"]).reshape(-1,1)\ny = np.array(df[\"Confirmed\"]).reshape(-1,1)\n\nx_2 = x[10000:11000]\ny_2 = y[10000:11000]","84a622d3":"\n\nfrom sklearn.tree import DecisionTreeRegressor\n\ntreeReg = DecisionTreeRegressor()\n\ntreeReg.fit(x_2,y_2)\n\nx2 = np.arange(min(x_2),max(x_2),0.01).reshape(-1,1)\n\ny_head = treeReg.predict(x_2).reshape(-1,1)\n\nplt.scatter(x_2,y_2,color=\"blue\")\nplt.plot(x_2,y_head,color=\"green\")\nplt.show()","c169c2e6":"x = np.array(df[\"Deaths\"]).reshape(-1,1)\ny = np.array(df[\"Confirmed\"]).reshape(-1,1)\n\nx_2 = x[10000:11000]\ny_2 = y[10000:11000]","0176b002":"from sklearn.ensemble import RandomForestRegressor\n\nrandFReg = RandomForestRegressor(n_estimators=100, random_state=40)\n\nrandFReg.fit(x_2,y_2)\n\ntemp = randFReg.predict([[120]])\n\nprint(temp, \"confirmed say\u0131s\u0131ndan 120 ki\u015fi \u00f6lm\u00fc\u015ft\u00fcr\")\n","2efc0352":"# g\u00f6rselle\u015ftirme\n\nx2 = np.arange(min(x_2),max(x_2),0.01).reshape(-1,1)\n\ny_head = treeReg.predict(x_2).reshape(-1,1)\n\nplt.scatter(x_2,y_2,color=\"blue\")\nplt.plot(x_2,y_head,color=\"green\")\nplt.show()\n\n#desicion tree regresyondan fark\u0131 1 yerine 100 tane tree kullan\u0131lmas\u0131d\u0131r","d7089987":"## 5. Random Forest Regression","f3c4ed8f":"## 3. Polynomial Linear Regression","a167e82a":"## 1. Linear Regression","1219563a":"case_in_country ile age s\u00fctunlar\u0131n\u0131n olusturdugu grafik","41e57e5b":"## 4. Desicion Tree Regression","2ff4ca2f":"## 2. Multi Linear Regression","711c52e3":"# Regression Algorithms"}}