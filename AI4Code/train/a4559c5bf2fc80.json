{"cell_type":{"dc4d794f":"code","6f276e10":"code","3ee62484":"code","c600ab5d":"code","42f2e5ab":"code","ba005bad":"code","34f38665":"code","78291f70":"code","5001628a":"code","ce8ee5d2":"code","be761dc5":"code","2b32295c":"code","49fee20c":"code","07e1443d":"markdown","643c99df":"markdown","c48d8222":"markdown","f541ff70":"markdown","2507ea66":"markdown","cebfab21":"markdown"},"source":{"dc4d794f":"import os\nimport csv\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","6f276e10":"os.listdir('..\/input\/')","3ee62484":"data_path = \"..\/input\/Tomato_Pixel_DataSet.csv\"\ndata_raw = pd.read_csv(data_path)\nprint(\"Number of rows in data =\",data_raw.shape[0])\nprint(\"Number of columns in data =\",data_raw.shape[1])\nprint(\"\\n\")\nprint(\"**Sample data:**\")\ndata_raw.head()","c600ab5d":"df = data_raw.drop('Unnamed: 0',axis =1)","42f2e5ab":"from sklearn.utils import shuffle\ndf = shuffle(df)\ndf.head()","ba005bad":"import seaborn as sns\nsns.set(rc={'figure.figsize':(11.7,8.27)})\nsns.set(style=\"darkgrid\")\nsns.set(font_scale = 2)\nsns.countplot(x=\"Category\", data=df)","34f38665":"y = df['Category']\nX = df.drop('Category',axis =1)","78291f70":"from sklearn.metrics import confusion_matrix \nfrom sklearn.model_selection import train_test_split \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2 , random_state = 0) ","5001628a":"from sklearn.naive_bayes import GaussianNB \ngnb = GaussianNB().fit(X_train, y_train) \ngnb_predictions = gnb.predict(X_test) \naccuracy = gnb.score(X_test, y_test) \nprint('Accuracy   : --  ' ,accuracy )\ncm = confusion_matrix(y_test, gnb_predictions) \nax = sns.heatmap(cm, annot=True, fmt=\"d\")","ce8ee5d2":"from sklearn.naive_bayes import BernoulliNB\nclf = BernoulliNB().fit(X_train, y_train) \naccuracy = clf.score(X_test, y_test) \nprint('Accuracy   : --  ' ,accuracy )\nclf_predictions = clf.predict(X_test)  \ncm = confusion_matrix(y_test, clf_predictions) \nax = sns.heatmap(cm, annot=True, fmt=\"d\")","be761dc5":"from sklearn.tree import DecisionTreeClassifier \ndtree_model = DecisionTreeClassifier(max_depth = 2).fit(X_train, y_train) \ndtree_predictions = dtree_model.predict(X_test) \ncm = confusion_matrix(y_test, dtree_predictions) \naccuracy = dtree_model.score(X_test, y_test) \nprint('Accuracy   : --  ' ,accuracy )\nax = sns.heatmap(cm, annot=True, fmt=\"d\")","2b32295c":"from lightgbm import LGBMClassifier\nclf = LGBMClassifier( random_state=5)\nclf.fit(X_train, y_train) \nclf_predictions = clf.predict(X_test) \ncm = confusion_matrix(y_test, clf_predictions) \naccuracy = clf.score(X_test, y_test) \nprint('Accuracy   : --  ' ,accuracy )\nax = sns.heatmap(cm, annot=True, fmt=\"d\")","49fee20c":"from sklearn.neighbors import KNeighborsClassifier \nknn = KNeighborsClassifier(n_neighbors = 7).fit(X_train, y_train) \naccuracy = knn.score(X_test, y_test) \nprint('Accuracy   : --  ' ,accuracy )\nknn_predictions = knn.predict(X_test)  \ncm = confusion_matrix(y_test, knn_predictions) \nax = sns.heatmap(cm, annot=True, fmt=\"d\")","07e1443d":"# LogisticRegression","643c99df":"# Decision Tree","c48d8222":"# Bernoulli Naive Bayes","f541ff70":"* 'Tomato__Tomato_YellowLeaf__Curl_Virus', ---> 0\n*  'Tomato__Target_Spot',  --->  1\n*  'Tomato_Bacterial_spot',  --->   2\n*  'Tomato_Leaf_Mold',   --->   3\n*  'Tomato_Septoria_leaf_spot',  --->   4\n*  'Tomato_Late_blight',  --->   5\n*  'Tomato_Early_blight',  --->   6\n*  'Tomato__Tomato_mosaic_virus',  --->   7\n*  'Tomato_Spider_mites_Two_spotted_spider_mite',  --->   8\n*  'Tomato_healthy' --->   9","2507ea66":"# Gaussian Naive Bayes","cebfab21":"# KNN (k-nearest neighbours) classifier"}}