{"cell_type":{"f53b6770":"code","18ddefdc":"code","f58b78fe":"markdown","b4eaf11c":"markdown"},"source":{"f53b6770":"def libraries():\n    global np,pd,preprocessing,SimpleImputer\n    import numpy as np\n    import pandas as pd\n    from sklearn import preprocessing \n    from sklearn.impute import SimpleImputer\n#dont use mean when there are outliers,categorical\ndef mean_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to apply mean on missing data:')\n    df[n].fillna(df[n].mean(),inplace=True)\n    \n#use median when mean is not working,categorical\ndef median_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to apply median on misiing data:')\n    df[n].fillna(df[n].median(),inplace=True)\n    \n#use mode when there is categoricaal data\ndef mode_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to apply mode on missing data:')\n    df[n].fillna(df[n].mode()[0],inplace=True)\n    \ndef forward_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to apply forward fill on missing data:')\n    df[n].fillna(df[n].ffill(),inplace=True)\n    \ndef backward_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to apply backward fill on misiing data:')\n    df[n].fillna(df[n].bfill(),inplace=True)\n    \n#use when u know exact data to replace that value\ndef replace_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to replace values:')\n    r = int(input('Press 1 for replace null values\\nPress 2 for replace number'))\n    if r ==1:\n        f = np.nan\n    if r==2:\n        f = int(input('enter a number'))\n    print('\\n Enter datatype you want to enter')\n    x = int(input('press 1 for int\\npress 2 for float\\npress 3 for str'))\n    if x == 1:\n        b = int(input('Enter number u want to replace'))\n    if x == 2:\n        b = float(input('Enter number u want to replace'))\n    if x == 3:\n        b = str(input('Enter string u want to enter'))\n    df[n].replace(f,b,inplace=True)\n    \n#avoid using this\ndef drop_na(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter column name u want to drop:')\n    df[n].dropna(axis = 1,inplace = True)\n    \ndef interpolate(df):\n    print('\\n')\n    print('\\n')\n    n = int(input('Press 1 for column interpolate with mean\\n'\n                  'Press 2 for total data frame interpolate mean'))\n    if n==1:\n        q = input('Enter name of column:')\n        h = input('Enter limit direction(forward\/backward\/both):')\n        df[q].interpolate(method ='linear', limit_direction =h,inplace = True)\n        \n    elif n==2:\n        h = input('Enter limit direction(forward\/backward\/both):')\n        df.interpolate(method ='linear', limit_direction =h,inplace = True)\n        \n\ndef imputer_mean(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter the column')\n    imputer = SimpleImputer(missing_values = np.NaN,strategy = 'mean')\n    df[n] = imputer.fit_transform(df[n].values.reshape(-1,1))[:,0]\n    \n    \ndef imputer_median(df):\n    print('\\n')\n    print('\\n')\n    print(na_variables)\n    n = input('Enter the column')\n    imputer = SimpleImputer(missing_values = np.NaN,strategy = 'median')\n    df[n] = imputer.fit_transform(df[n].values.reshape(-1,1))[:,0]\n    \n\ndef imputer_mode(df):\n    print('\\n')\n    print('\\n')\n    n = input('Enter the column')\n    imputer = SimpleImputer(missing_values = np.NaN,strategy = 'most_frequent')\n    df[n] = imputer.fit_transform(df[n].values.reshape(-1,1))[:,0]\n    \n\nlibraries()\ndata = input('Enter your csv file name\/file path')\ndf = pd.read_csv(data)\n\nprint('\\n')\nprint('\\n')\nprint('Columns with null values are:')\nna_variables = [ var for var in df.columns if df[var].isnull().sum() > 0 ]\nprint(na_variables)\nfor i in na_variables:\n    print('Null values count in {} is:{}'.format(i,df[i].isnull().sum()))\nprint('----------------------------------------------------------------------------------------')\nrestart = 'y'\nwhile restart == 'y':\n    print('Select a Method to fill null values:')\n    p = int(input('Press 1 for mean\\n'\n                  'Press 2 for median\\n'\n                  'Press 3 for mode\\n'\n                  'Press 4 for backward fill\\n'\n                  'Press 5 for forward fill\\n'\n                  'Press 6 for replace\\n'\n                  'Press 7 for drop\\n'\n                  'Press 8 for interpolate\\n'\n                  'Press 9 for imputer mean\\n'\n                  'Press 10 for imputer median\\n'\n                  'Press 11 for imputer mode'))\n    if p==1:\n        mean_na(df)\n    elif p==2:\n        median_na(df)\n    elif p==3:\n        mode_na(df)\n    elif p==4:\n        backward_na(df)\n    elif p==5:\n        forward_na(df)\n    elif p==6:\n        replace_na(df)\n    elif p==7:\n        drop_na(df)\n    elif p==8:\n        interpolate(df)\n    elif p==9:\n        imputer_mean(df)\n    elif p == 10:\n        imputer_median(df)\n    elif p==11:\n        imputer_mode(df)\n    else:\n        print('Invalid option')\n    q = input('Do you want to continue?(y\/n):')\n    if q == 'y':\n        restart = 'y'\n    else:\n        restart = 'n'\ndf","18ddefdc":"df['LotFrontage'].isnull().sum()","f58b78fe":"#### Below is the automation coding for filling null values. What you need to do is that after executing the code, load your dataset and then it will print all columns with null values and their count now you need select a method to fill null values, then select a column to fill. Next it will ask do you need to fill another column if yes the same processes repeats if no the program will end\n\n## Methods to fill null values are:\n#### mean method\n#### median method\n#### mode method\n#### backward fill method\n#### forward fill method\n#### replace method\n#### drop method\n#### interpolate method\n#### imputer mean method\n#### imputer median method\n#### imputer mode method\n\n#### Now you can ask which method should we use..??\n## Points to remember:\n#### If the column is categorical column don't fill them with mean,median,imputer mean,imputer median you can use mode,imputer mode,forward fill and backward fill. MODE is highly recommended\n#### If the column is numerical\/float it has two cases:\n  1. If the column has outliers donot use MEAN to fill values. MEDIAN is recommended but you can use forward and backward fill too.\n  2. If the column doesnot have outliers you can use any method to fill\n#### If the column has many null values(greather than 40%) we can drop whole column\n#### If there are very less null values you can drop those values using dropna\n#### Avoid using dropna because there is a chance of data loss\n#### Always sepcify the axis. axis = 0 for row and axis = 1 for columns\n","b4eaf11c":"https:\/\/www.linkedin.com\/feed\/update\/urn:li:activity:6864129902535327744\/ follow this link and watch full video to completly understand the code i"}}