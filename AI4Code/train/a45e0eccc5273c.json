{"cell_type":{"d0359c05":"code","64e8fa2f":"code","f868116e":"code","218d6907":"code","5ed023b4":"code","a53e9b26":"code","004e1dd1":"code","c25ac310":"code","9f865fef":"code","7afce538":"code","f9ab2b4d":"code","159bb9e3":"code","b89d655d":"code","3de26a78":"markdown","956be9ac":"markdown","a7405de5":"markdown","d09b2167":"markdown","4d2905f4":"markdown","56e8c961":"markdown"},"source":{"d0359c05":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","64e8fa2f":"import matplotlib.pyplot as plt\ncovid = pd.read_csv('..\/input\/corona-virus-report\/covid_19_clean_complete.csv')","f868116e":"top5mostdeaths = covid[covid['Date']=='4\/7\/20'].sort_values(by='Deaths', ascending = False).head(5)\nfigdeaths,ax1 = plt.subplots(dpi=200)\nlength = np.arange(len(top5mostdeaths))\n\nax1.bar(length,top5mostdeaths['Deaths'])\nax1.set_xticks(length)\nax1.set_xticklabels(top5mostdeaths['Country\/Region'],fontsize=8)\nax1.set_ylabel('Deaths')\nax1.set_xlabel('Countries')\nax1.set_title('Countries with the most Coronavirus deaths')","218d6907":"withouttop5 = covid[covid['Date']=='4\/7\/20']['Deaths'].sum()-top5mostdeaths['Deaths'].sum()\ndeaths = list(top5mostdeaths['Deaths'])\ndeaths.append(withouttop5)\ndeaths\ncountrylabelspiechart = list(top5mostdeaths['Country\/Region'])\ncountrylabelspiechart.append('Others')\n\nfigdeathpiechart,ax2 = plt.subplots(dpi=200)\nax2.pie(deaths,labels=countrylabelspiechart,autopct='%1.1f%%',labeldistance=1.2,colors=['crimson','blue','green','orange','violet','yellow'],wedgeprops={'linewidth':2,'edgecolor':'black'})\nax2.set_title('Coronovirus Deaths Worldwide')\n","5ed023b4":"figworldwidedeaths,ax3 = plt.subplots(dpi=200)\nax3.plot(covid['Date'],covid['Deaths'])\nax3.set_ylabel('Deaths', fontsize=15)\nax3.set_xlabel('Time ->', fontsize = 15)\nax3.set_title('Worldwide Coronavirus Deaths', fontsize = 20)","a53e9b26":"figtop5,ax5 = plt.subplots(1,4,figsize=(25,5))\nwidth=0.5\ntop5mostdeaths['NewIndex'] = ['Italy','Spain','US','France','UK']\ntop5mostdeaths = top5mostdeaths.reindex().set_index('NewIndex')\n\n\nax5[0].set_xlim([0,1])\nax5[0].bar(0.5,top5mostdeaths['Deaths'].loc['Italy'],width,label='Death')\nax5[0].bar(0.5,top5mostdeaths['Recovered'].loc['Italy'],width, bottom=top5mostdeaths['Deaths'],label='Recovered')\nax5[0].legend()\nax5[0].set_ylabel('Cases\/People')\nax5[0].set_title('Italy',fontsize=20)\n\nax5[1].set_xlim([0,1])\nax5[1].bar(0.5,top5mostdeaths['Deaths'].loc['Spain'],width,label='Death')\nax5[1].bar(0.5,top5mostdeaths['Recovered'].loc['Spain'],width, bottom=top5mostdeaths['Deaths'],label='Recovered')\nax5[1].legend(loc=1)\nax5[1].set_ylabel('Cases\/People')\nax5[1].set_title('Spain',fontsize=20)\n\nax5[2].set_xlim([0,1])\nax5[2].bar(0.5,top5mostdeaths['Deaths'].loc['US'],width,label='Death')\nax5[2].bar(0.5,top5mostdeaths['Recovered'].loc['US'],width, bottom=top5mostdeaths['Deaths'],label='Recovered')\nax5[2].legend(loc=1)\nax5[2].set_ylabel('Cases\/People')\nax5[2].set_title('United States',fontsize=20)\n\nax5[3].set_xlim([0,1])\nax5[3].bar(0.5,top5mostdeaths['Deaths'].loc['France'],width,label='Death')\nax5[3].bar(0.5,top5mostdeaths['Recovered'].loc['France'],width, bottom=top5mostdeaths['Deaths'],label='Recovered')\nax5[3].legend(loc=1)\nax5[3].set_ylabel('Cases\/People')\nax5[3].set_title('France',fontsize=20)","004e1dd1":"top10countriesdeaths = covid[(covid['Date']=='4\/7\/20')].groupby('Country\/Region').sum()['Deaths'].sort_values(ascending=False).head(10)\n\nfigscatter,ax11 = plt.subplots(dpi=200)\nax11.scatter(y=top10countriesdeaths.loc['Italy'],x=47.3,label='Italy')\nax11.scatter(y=top10countriesdeaths.loc['Spain'],x=44.9,label='Spain')\nax11.scatter(y=top10countriesdeaths.loc['US'],x=38.3,label='US')\nax11.scatter(y=top10countriesdeaths.loc['France'],x=42.3,label='France')\nax11.scatter(y=top10countriesdeaths.loc['United Kingdom'],x=40.5,label='United Kingdom')\nax11.scatter(y=top10countriesdeaths.loc['Iran'],x=32.0,label='Iran')\nax11.scatter(y=top10countriesdeaths.loc['China'],x=38.4,label='China')\nax11.scatter(y=top10countriesdeaths.loc['Netherlands'],x=43.3,label='Netherlands')\nax11.scatter(y=top10countriesdeaths.loc['Germany'],x=45.7,label='Germany')\nax11.scatter(y=top10countriesdeaths.loc['Belgium'],x=41.9,label='Belgium')\nax11.legend()\nax11.set_ylabel('Deaths')\nax11.set_xlabel('Median Age')\nax11.set_title('Correlation between Deaths and Median Age of Top 10 countries with the most deaths')","c25ac310":"covidindia = pd.read_csv('..\/input\/coronavirus-cases-in-india\/Covid cases in India.csv')","9f865fef":"indianstatedeaths = covidindia['Deaths']\nindianstatenames = covidindia['Name of State \/ UT']\n\nbarcolors = []\nimport random\n\n#r = lambda: random.randint(0,255)\n#for x in range(0,30):\n #   barcolors.append('#%02X%02X%02X' % (r(),r(),r()))\nbarcolors = ['#A50BE2',\n '#599A9D',\n '#E0228F',\n '#E733ED',\n '#405AEE',\n '#AAAA40',\n '#0BB511',\n '#E050C1',\n '#1D32A5',\n '#24CFCE',\n '#3B193C',\n '#8259B4',\n '#CF07B6',\n '#C0DD72',\n '#B63E3F',\n '#9F066C',\n '#9E7588',\n '#F74924',\n '#01DCCD',\n '#5BF48A',\n '#60C111',\n '#1A58F9',\n '#50DB7A',\n '#0DD170',\n '#7ACBDF',\n '#9BD787',\n '#C4EC5E',\n '#48523D',\n '#5FC53F',\n '#A382D0']\n\nfigindianstates,ax6 = plt.subplots(dpi=250)\nindianstatelength = np.arange(len(indianstatenames))\n\nax6.barh(indianstatelength,indianstatedeaths,color=barcolors)\nax6.set_yticks(indianstatelength)\nax6.set_yticklabels(indianstatenames,fontsize=5)\nax6.set_ylabel('States\/UT')\nax6.set_xlabel('Deaths')\nax6.set_title('Deaths by State (India)')\n","7afce538":"figindianstatespiechart,ax7 = plt.subplots(figsize=(8,3),dpi=250)\nax7.pie(covidindia['Deaths'],colors=barcolors,wedgeprops={'linewidth':1,'edgecolor':'black','linestyle':'dashed'})\nax7.legend(indianstatenames,loc=4,prop={'size':4},bbox_to_anchor=(1, 0, 0.5, 1))\nax7.set_title('Indian States Coronavirus Pie Chart', fontsize = 8)","f9ab2b4d":"indiancovidinfo = covid[covid['Country\/Region']=='India']\n\nfigindianplot,ax8 = plt.subplots(1,3,dpi=200,figsize=(15,10))\n\nax8[0].plot(indiancovidinfo['Date'],indiancovidinfo['Deaths'],'r--')\nax8[0].set_ylabel('Cases',fontsize=10)\nax8[0].set_title('Deaths')\n\nax8[1].plot(indiancovidinfo['Date'],indiancovidinfo['Recovered'],'b--')\nax8[1].set_xlabel('---------> Date -------->',fontsize = 20)\nax8[1].set_title('Recovered')\n\nax8[2].plot(indiancovidinfo['Date'],indiancovidinfo['Confirmed'],'g--')\nax8[2].set_title('Confirmed Cases')","159bb9e3":"figindianmerge,ax9 = plt.subplots(dpi=200)\n\nax9.plot(indiancovidinfo['Date'],indiancovidinfo['Deaths'],'r--',label='Deaths')\nax9.plot(indiancovidinfo['Date'],indiancovidinfo['Recovered'],'b--',label='Recovered')\nax9.plot(indiancovidinfo['Date'],indiancovidinfo['Confirmed'],'g--',label='Confirmed Cases')\nax9.legend()\nax9.set_ylabel('Deaths')\nax9.set_xlabel('Date -->')\n","b89d655d":"covidindiaconfirmedactions = covidindia[(covidindia['Cured\/Discharged\/Migrated']>0)|(covidindia['Deaths']>0)]\ncovidindiaconfirmedactions\n\n\nfigcovidindiaconfirmed,ax10 = plt.subplots(dpi=200)\nconfirmedactionslength = np.arange(len(covidindiaconfirmedactions))\n\nax10.barh(confirmedactionslength,covidindiaconfirmedactions['Deaths'],label='Deaths')\nax10.barh(confirmedactionslength,covidindiaconfirmedactions['Cured\/Discharged\/Migrated'],left=covidindiaconfirmedactions['Deaths'],label='Cured\/Discharged\/Migrated')\nax10.set_yticks(confirmedactionslength)\nax10.set_yticklabels(covidindiaconfirmedactions['Name of State \/ UT'],fontsize=5)\nax10.legend(prop={'size':6})\nax10.set_xlabel('Cases\/People')\nax10.set_ylabel('States\/UTs')","3de26a78":"Remember to pay attention to the y-axis!","956be9ac":"Remember to pay attention to the y-axis!","a7405de5":"#                            GLOBAL","d09b2167":"# That's it! For now... I will keep adding more charts.\n# Hopefully this was insightful!","4d2905f4":"#                           INDIA","56e8c961":"**WELCOME! THIS NOTEBOOK WILL PRESENT DATA ON *COVID-19* IN THE FORM OF DIFFERENT CHARTS **\n\nThe notebook will be divided into two sections: **1) Global 2) India**\n\nThe data pertaining to the *Global* section will be updated daily.\nCurrently, the *global* data has been updated till 04\/07\/2020 (MM\/DD\/YY), while the *India* data has been updated till 04\/07\/2020. \n\nKindly comment on any kind of demographic\/chart you would like to see added onto the notebook!"}}