{"cell_type":{"6449967a":"code","2e01eb96":"code","b1a27265":"code","96d7d99c":"code","6a486c4d":"code","b1beeb7d":"code","b02727e6":"code","7a9ccfe9":"code","1890fa67":"code","6f72b44d":"code","5205c7d1":"code","7d428cfa":"code","a94a42d4":"code","c598000e":"code","3de260f4":"code","aa6d2936":"code","b8909231":"code","170cd3af":"code","896a9b83":"code","77100806":"code","47b1b423":"code","c754b24d":"code","1fa52cf4":"code","80de6130":"code","7d55a95e":"code","010299d7":"code","fadfb6db":"code","a2f5601f":"code","181f2987":"code","0d4e746f":"code","b5b51d5c":"code","07ccb1e5":"code","adca1ead":"code","6a19ebb4":"code","cfe1a24b":"code","3def7d7f":"code","355ca71c":"code","78c1869c":"code","5effa02f":"code","72876ed7":"code","8e5c0162":"code","8034ee98":"code","402466e2":"code","d784c7c8":"code","e2964508":"code","dd57ae4b":"code","ab5adbdf":"code","e408c5c1":"code","dd070da4":"code","073923da":"code","d24cdee3":"code","fd04f47c":"code","00e2779d":"code","373026d6":"code","6668803a":"code","69008478":"code","aa27fa1f":"code","ba164790":"code","658ed377":"code","9f893de0":"code","ac592afa":"code","386616a0":"code","cc708f52":"code","109b5783":"code","39f024d5":"code","b75ea783":"code","36560405":"code","39d387c4":"code","15f21a1b":"code","c62773c4":"code","e21f5b91":"code","d90c4889":"code","8e9dd12e":"code","1d94d549":"code","3330935e":"code","76f458df":"code","473d5b7d":"code","03521558":"code","ad49f0e3":"code","7008dd8d":"code","33f228c6":"code","823aa6f2":"code","f55e1ec2":"code","e8238e2e":"code","0cce334a":"code","1c212840":"code","9e2c4d8d":"code","0f678a98":"code","9b0e2287":"code","d2502eff":"code","c678ec39":"code","7db1ab69":"code","e13a6626":"code","efba8571":"code","7aea89ec":"code","207c2b34":"code","38b2ba93":"code","c552e9f4":"code","aba66ae7":"code","1bc15ac2":"code","088d05d3":"code","aacd711c":"code","de1fc666":"code","341bffde":"code","57dc3c73":"code","d544d823":"code","d870cf34":"code","eb45b00d":"code","6072ce91":"code","bf80a878":"code","dda62a07":"code","e4e8aee9":"code","83fe2ac4":"code","0d85b904":"code","4a449666":"code","3eb4f688":"code","98ca8952":"code","a50e57e1":"code","c91d82b1":"code","8f4c980b":"code","28a1fd7a":"code","42b844f0":"code","20de4a91":"code","bf801203":"code","2380a386":"code","5fa928ce":"code","5d85cb0d":"code","b029c587":"code","836bd6bc":"code","786c793a":"code","95f1bbec":"markdown","8560be74":"markdown","6afa26bf":"markdown","25774bd5":"markdown","a60842b2":"markdown","cb35430e":"markdown","4abf23ab":"markdown","8a65817e":"markdown","8166ceca":"markdown","276487b6":"markdown","b73ae87b":"markdown","f352a3a4":"markdown","580ffa1f":"markdown","c165e36b":"markdown","210e99fb":"markdown","99635f36":"markdown","f790a87e":"markdown","0dd042e0":"markdown","bd431ce8":"markdown","d9321d8b":"markdown","b4d1336f":"markdown","2c3bfd6f":"markdown","3b5ee2bd":"markdown","e0cfcc9b":"markdown"},"source":{"6449967a":"# numpy, pandas, matplot \uc784\ud3ec\ud2b8\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# matplot\uc758 \uc2a4\ud0c0\uc77c\uacfc \ud3f0\ud2b8\uc0ac\uc774\uc988 \uc9c0\uc815\n\nplt.style.use('seaborn')\nsns.set(font_scale=2.5)\n\n# missingno\ub294 null\uac12\uc744 \uc27d\uac8c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \n\nimport missingno as msno\n\n# \uacbd\uace0 \ubb34\uc2dc\ud558\ub3c4\ub85d \uc124\uc815\n\nimport warnings\nwarnings.filterwarnings('ignore')\n\n# matplotlib\ub294 \uc124\uc815\uc744 \uae30\ubcf8\uc801\uc73c\ub85c \uc0c8\ub85c\uc6b4 \ucc3d\uc73c\ub85c \ub098\uc624\ub294\ub370, \n# inline\uc124\uc815\uc740 \ud574\uc8fc\uba74 \ud574\ub2f9 \ub178\ud2b8\ubd81\uc5d0 \ucd9c\ub825\ud558\uae30 \uc704\ud55c \uc124\uc815.\n\n%matplotlib inline","2e01eb96":"# data \ub85c\ub4dc\n\ndf_train = pd.read_csv('..\/input\/titanic\/train.csv')\ndf_test = pd.read_csv('..\/input\/titanic\/test.csv')","b1a27265":"# \ub370\uc774\ud130 \uc55e\ubd80\ubd84\uc744 \ubcfc \uc218 \uc788\ub294 head()\uba54\uc11c\ub4dc\uc758 default\uac12\uc740 5\n\ndf_train.head()","96d7d99c":"# \ub370\uc774\ud130 \uc55e\ubd80\ubd84\uc744 \ubcfc \uc218 \uc788\ub294 head()\uba54\uc11c\ub4dc\uc758 default\uac12\uc740 5\n\ndf_test.head()","6a486c4d":"# pandas \ub370\uc774\ud130 \ud504\ub808\uc784\uc5d0\ub294 describe \ub9e4\uc11c\ub4dc\uac00 \uc788\ub2e4. \n# train \ub370\uc774\ud130\uc758 \ub300\ub7b5\uc801\uc778 \uc218\uce58\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4.\n\ndf_train.describe()","b1beeb7d":"# train \ub370\uc774\ud130\uc758 \ucc28\uc6d0 \ud655\uc778\n\ndf_train.shape","b02727e6":"# pandas \ub370\uc774\ud130 \ud504\ub808\uc784\uc5d0\ub294 describe \ub9e4\uc11c\ub4dc\uac00 \uc788\ub2e4. \n# test \ub370\uc774\ud130\uc758 \ub300\ub7b5\uc801\uc778 \uc218\uce58\ub4e4\uc744 \ubcf4\uc5ec\uc900\ub2e4.\n\ndf_test.describe()","7a9ccfe9":"# test \ub370\uc774\ud130\uc758 \ucc28\uc6d0 \ud655\uc778\n\ndf_test.shape","1890fa67":"# train data \uac01 \uc5f4\uc5d0 null\ub370\uc774\ud130\uac00 \uba87 \uac1c\uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0 \ud37c\uc13c\ud2b8\ub85c \ud655\uc778\n\nfor col in df_train.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_train[col].isnull().sum() \/ df_train[col].shape[0]))\n    print(msg)","6f72b44d":"# test data \uac01 \uc5f4\uc5d0 null\ub370\uc774\ud130\uac00 \uba87 \uac1c\uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0 \ud37c\uc13c\ud2b8\ub85c \ud655\uc778\n\nfor col in df_test.columns:\n    msg = 'column: {:>10}\\t Percent of NaN value: {:.2f}%'.format(col, 100 * (df_test[col].isnull().sum() \/ df_test[col].shape[0]))\n    print(msg)","5205c7d1":"# train data\uc758 null \uc704\uce58 \ubd84\ud3ec\ub97c \ubcfc \uc218 \uc788\ub2e4.\n# missingno \ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud574\uc11c input\uc5d0 data frame\uc744 \ub118\uaca8\uc8fc\uace0,\n# matrix \ud615\ud0dc\ub97c \ub9cc\ub4e4\uc5b4 \uc8fc\ub294\ub370, \n# index location \uc774\ub77c\ub294 iloc\ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc704\uce58\uc5d0 \uc788\ub294 \uceec\ub7fc\uc744 \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\n# figsize\ub294 \uadf8\ub798\ud504 \ud06c\uae30\uc774\uace0, color\ub294 rgb\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4.\n\nmsno.matrix(df=df_train.iloc[:, :], figsize=(8, 8), color = (0, 0.5, 1))","7d428cfa":"# train data\uc758 null\uc758 \ud37c\uc13c\ud2b8\ub97c \ubcfc \uc218 \uc788\ub2e4.\n# missingno \ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud574\uc11c input\uc5d0 data frame\uc744 \ub118\uaca8\uc8fc\uace0,\n# \uc544\ub798\uc640 \uac19\uc740 bar \ud615\ud0dc\ub97c \ub9cc\ub4e4\uc5b4 \uc900\ub2e4.\n# index location \uc774\ub77c\ub294 iloc\ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc704\uce58\uc5d0 \uc788\ub294 \uceec\ub7fc\uc744 \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\n# figsize\ub294 \uadf8\ub798\ud504 \ud06c\uae30\uc774\uace0, color\ub294 rgb\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4.\n\nmsno.bar(df=df_train.iloc[:, :], figsize=(8, 8), color = (0, 0.5, 1))","a94a42d4":"# test data\uc758 null \uc704\uce58 \ubd84\ud3ec \ud655\uc778\n\n# missingno \ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud574\uc11c input\uc5d0 data frame\uc744 \ub118\uaca8\uc8fc\uace0,\n# matrix \ud615\ud0dc\ub97c \ub9cc\ub4e4\uc5b4 \uc8fc\ub294\ub370, \n# index location \uc774\ub77c\ub294 iloc\ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc704\uce58\uc5d0 \uc788\ub294 \uceec\ub7fc\uc744 \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\n# figsize\ub294 \uadf8\ub798\ud504 \ud06c\uae30\uc774\uace0, color\ub294 rgb\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4.\n\nmsno.matrix(df=df_test.iloc[:, :], figsize=(8, 8), color = (1, 0.3, 0))","c598000e":"# test data\uc758 null\uc758 \ud37c\uc13c\ud2b8 \ud655\uc778\n\n# missingno \ub77c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc774\uc6a9\ud574\uc11c input\uc5d0 data frame\uc744 \ub118\uaca8\uc8fc\uace0,\n# \uc544\ub798\uc640 \uac19\uc740 bar \ud615\ud0dc\ub97c \ub9cc\ub4e4\uc5b4 \uc900\ub2e4.\n# index location \uc774\ub77c\ub294 iloc\ub97c \uc774\uc6a9\ud574\uc11c \uc6d0\ud558\ub294 \uc704\uce58\uc5d0 \uc788\ub294 \uceec\ub7fc\uc744 \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\n# figsize\ub294 \uadf8\ub798\ud504 \ud06c\uae30\uc774\uace0, color\ub294 rgb\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\ub2e4.\n\nmsno.bar(df=df_test.iloc[:, :], figsize=(8, 8), color = (1, 0.3, 0))","3de260f4":"# \ud30c\uc774\ud50c\ub78f\uc5d0 \uc11c\ube0c\ud50c\ub78f\uc73c\ub85c row 1, column2 \uc989 1\ud589 2\uc5f4\ub85c \ub41c \ud30c\ub808\ud2b8\ub97c \ucd1d \uac00\ub85c 18 \uc138\ub85c 8 \ud06c\uae30\ub85c \ub9cc\ub4ec\n\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\n\n# eplode\ub294 pie\ub97c \uc911\uc2ec\uc5d0\uc11c \uc5bc\ub9cc \ud07c \ub5a8\uc5b4\ud2b8\ub9b4\uac83\uc774\ub0d0.\n# autopct='%1.1f%%'\ub294 \ud37c\uc13c\ud2b8\ud615\uc2dd\uc744 \ub098\ud0c0\ub0c4\n# ax=ax[0]\ub294 ax[0,1]\uc911\uc5d0 0\uc5d0\ub2e4 \uadf8\ub9b0\ub2e4\ub294 \ub73b\n\ndf_train['Survived'].value_counts().plot.pie(explode=[0, 0.1], autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title('Pie plot -Survived')\nax[0].set_ylabel('')\n\n# seaborn\uc758 \uce74\uc6b4\ud2b8\ud50c\ub78f\uc758 \uc778\ud48b\uc73c\ub85c 'Survived' \ub77c\ub294 \uc774\ub984\uc744 \uac00\uc9c4 column\uc744 \uc900\ub2e4.\n# \uadf8\ub9ac\uace0 \ub370\uc774\ud130\ub294 df_train\uc744 \uc0ac\uc6a9\ud558\uaca0\ub2e4.\n# \uadf8\ub9ac\uace0 ax=ax[1]\uc774\uc6a9\ud574\uc11c \ub3c4\ud654\uc9c0\uc758 \ub450\ubc88\uc9f8\ubd80\ubd84\uc5d0\ub2e4 \uadf8\ub9ac\uaca0\ub2e4\ub294 \ub73b\n\nsns.countplot('Survived', data=df_train, ax=ax[1])\nax[1].set_title('Count plot - Survived')\nplt.show()","aa6d2936":"# Pclass \uceec\ub7fc\uacfc \uc11c\ubc14\uc774\ubc8c \uceec\ub7fc \ube44\uad50. \uc774\ub54c \ub9ac\uc2a4\ud2b8\ub85c \uac00\uc838\uc640\uc57c\ud568\n\ndf_train[['Pclass', 'Survived']]","b8909231":"# \uadf8\ub8f9\ubc14\uc774\ub85c \ubb36\uc5b4\uc904 \uac83\uc778\ub370,\n\ndf_train[['Pclass', 'Survived']].groupby","170cd3af":"# Pclass\ub85c \ubb36\uc744\ub798\n# data frame groupby \uac1d\uccb4\uac00 \ud558\ub098 \uc0dd\uc131\ub40c\n\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'])","896a9b83":"# \uadf8\ub8f9\ubc14\uc774 \uac1d\uccb4\ub294 \uc218\ub9ce\uc740 \ub9e4\uc11c\ub4dc\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4.\n# sum \ub9e4\uc11c\ub4dc\uc740 Pclass 1, 2, 3\uac01\uac01\uc5d0 \ud574\ub2f9\ud558\ub294 Survived \uc0d8\ud50c\uc744 \ubaa8\ub450 \ub354\ud55c\uac83\uc774\ub2e4.\n\ndf_train[['Pclass', 'Survived']].groupby(['Pclass']).sum()","77100806":"# Survived \uc5f4\uc774 \ubb34\uc2a8 \uac1d\uccb4\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838\uc788\ub294\uc9c0 \ud655\uc778\ud574\ubcf4\uba74\n# 0\uacfc 1\ub85c \uc774\ub8e8\uc5b4\uc838\uc788\uc74c\uc744 \uc54c \uc218 \uc788\uace0,\n# \uc704\uc5d0 136, 87, 119\ub294 \n# Pclass n\uc5d0 \ud574\ub2f9\ud558\ub294 Survived\uc758 \uc0d8\ud50c\ub4e4 0\uacfc 1\uc744 \ubaa8\ub450 \ub354\ud588\ub354\ub2c8 \uac01\uac01 136, 87, 119\ub77c\ub294 \ub73b\n\ndf_train['Survived'].unique()","47b1b423":"# \ud074\ub798\uc2a4 \uc0d8\ud50c\uc774 \uba87\uac1c\ub098 \uc874\uc7ac\ud558\ub294\uc9c0\n\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).count()","c754b24d":"# \uc885\ud569\uc801\uc73c\ub85c \uadf8\ub9b0 \ud45c\n# margins=True \ub294 All\uc744 \ud45c\uc2dc\ud55c\ub2e4\ub294 \ub73b.\n\npd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True)","1fa52cf4":"# .style.background_gradient(cmap='summer_r') \ub97c \uc774\uc6a9\ud574\uc11c \uac00\ub3c5\uc131 \uc88b\uac8c 'symmer_r'\uc0c9\uc0c1\uc744 \uc801\uc6a9\n# \ub354 \ub9ce\uc740 \uc0c9\uc0c1\uc740 color map scheme \ub97c \uac80\uc0c9\ud574\uc11c \ucc3e\uc544\ubcf4\uba74 \ub41c\ub2e4!\n\npd.crosstab(df_train['Pclass'], df_train['Survived'], margins=True).style.background_gradient(cmap='summer_r')","80de6130":"# \uc774 \ub370\uc774\ud130\uc14b\uc5d0\uc11c\ub294 \ud074\ub798\uc2a4\ubcc4\ub85c \ud3c9\uade0\uc744 \uad6c\ud558\uba74 -> \uc0dd\uc874\ub960 \uc774 \ub41c\ub2e4.\n# as_index\ub294 Pclass\ub97c \uc778\ub371\uc2a4\ub85c \ub458 \uac83\uc778\uc9c0 \uacb0\uc815\ud558\ub294 \uac83\uc774\ub2e4.\n# \ub9cc\uc57d False\ub85c \ub450\uba74 \uc2dc\ub9ac\uc988\uac00 2\uac1c\uac00\ub418\uae30 \ub584\ubb38\uc5d0 plot\uc744 2\uac1c\ub85c \ud558\uae30 \ub54c\ubb38\uc5d0\n# \uc774 \ubb38\uc81c\uc5d0\uc11c\ub294 index\ub97c True\ub85c \uc124\uc815\ud574\uc11c \uc2dc\ub9ac\uc988 1\uac1c\ub85c \uc124\uc815\ud558\uace0 plot\ud574\uc57c\ud55c\ub2e4.\n# mean()\ub85c \ud3c9\uade0\uc744 \uad6c\ud558\uba74 Pclass\uc640 Survived \ubb36\uc74c\uc774\uae30\ub54c\ubb38\uc5d0 \uc0dd\uc874\ub960\uc774 \ub40c.\n# ascending\uc740 True\ub85c\ud558\uba74 \uc624\ub984\ucc28\uc21c \uc815\ub82c, False\ub294 \ub0b4\ub9bc\ucc28\uc21c \uc815\ub82c\n# type\uc744 \ucc0d\uc5b4\ubcf4\uba74 data frame\uc774\uae30\ub54c\ubb38\uc5d0 plot\uc744 \uac00\uc9c0\uace0 \ubcfc \uc218 \uc788\uc74c\n# \ub354 \uc798\ubcf4\uae30 \uc704\ud574 plot.bar()\ub97c \ud574\uc8fc\uc5c8\uc74c\n\ndf_train[['Pclass', 'Survived']].groupby(['Pclass'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar()","7d55a95e":"# \uc67c\ucabd\uc740 count\uadf8\ub798\ud504\ub97c \uadf8\ub838\ub2e4.\n# \uc624\ub978\ucabd\uc740 \uc0dd\uc874\uacfc \ud53c\ud074\ub798\uc2a4\uae4c\uc9c0 \ub2e4 \ud569\uccd0\uc11c \ubcfc \uc218 \uc788\ub3c4\ub85d \uadf8\ub838\ub2e4.\n# \uc774\ub54c hue\ub294 \uc0c9\uae54\uc744 \uc11c\ubc14\uc774\ubc8c\uc5d0 \uc0c9\uae54\uc744 \uc9c0\uc815\ud574\uc11c \ud55c plot\uc73c\ub85c \ub098\ud0c0\ub0b4 \uc900 \uac83\uc774\ub2e4. \n# \uc0c9\uc744 \ud558\ub098 \uc9c0\uc815\ud574\uc8fc\uba74 \uc0c9\uae54\uc744 \ub098\ub220\uc11c \ud45c\uc2dc\ud574\uc900\ub2e4.\n\ny_position = 1.02\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\ndf_train['Pclass'].value_counts().plot.bar(color=['#CD7F32', '#FFDF00', '#D3D3D3'], ax=ax[0])\nax[0].set_title('Number of passengers By Pclass', y=y_position)\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('Pclass: Sturvived cs Dead', y=y_position)\nplt.show()","010299d7":"# \uc67c\ucabd\uc740 count\uadf8\ub798\ud504\ub97c \uadf8\ub838\ub2e4.\n# \uc624\ub978\ucabd\uc740 \uc0dd\uc874\uacfc Sex\uae4c\uc9c0 \ub2e4 \ud569\uccd0\uc11c \ubcfc \uc218 \uc788\ub3c4\ub85d \uadf8\ub838\ub2e4.\n# \uc774\ub54c hue\ub294 \uc0c9\uae54\uc744 \uc11c\ubc14\uc774\ubc8c\uc5d0 \uc0c9\uae54\uc744 \uc9c0\uc815\ud574\uc11c \ud55c plot\uc73c\ub85c \ub098\ud0c0\ub0b4 \uc900 \uac83\uc774\ub2e4.\n# \uc0c9\uc744 \ud558\ub098 \uc9c0\uc815\ud574\uc8fc\uba74 \uc0c9\uae54\uc744 \ub098\ub220\uc11c \ud45c\uc2dc\ud574\uc900\ub2e4.\n# index = True\ub85c \ud558\uba74 sex\uac00 \uceec\ub7fc\uc73c\ub85c \ub4e4\uc5b4\uac04\ub2e4\n\nf, ax = plt.subplots(1, 2, figsize=(18 ,8))\ndf_train[['Sex', 'Survived']].groupby(['Sex'], as_index=True).mean().plot.bar(ax=ax[0])\nax[0].set_title('Survived vs Sex')\nsns.countplot('Sex', hue = 'Survived', data=df_train, ax=ax[1])\nax[1].set_title('Sex: Survived vs Dead')\nplt.show()","fadfb6db":"df_train[['Sex', 'Survived']].groupby(['Sex'], as_index=False).mean()","a2f5601f":"pd.crosstab(df_train['Sex'], df_train['Survived'], margins=True).style.background_gradient(cmap=\"summer_r\")","181f2987":"# factorplot\n# X\ucd95\uc740 Pclass, Y\ucd95\uc740 Survived, \n\nsns.factorplot('Pclass', 'Survived', hue='Sex', data=df_train, size=6, aspect=1.5)","0d4e746f":"# x, y, col\n\nsns.factorplot(x=\"Sex\", y='Survived', col=\"Pclass\", data=df_train, saturation=5, size = 9, aspect = 1)","b5b51d5c":"# x, y, hue\n# \uc120 \uc591\ub05d\uc5d0 \uc9c1\uc120\uc740 error bar\ub77c\uace0 \ud558\ub294\ub370 \uc774 \uc218\uce58\uac00 \uc5bc\ub9c8\ub098 \ubbff\uc744 \uc218 \uc788\ub294\uac00 \ub97c \ub098\ud0c0\ub0b4\ub294 \uc9c0\ud45c\ub77c\uace0 \ubcf4\uba74\ub41c\ub2e4.\n# \uc5d0\ub7ec\ubc14\uac00 \uc9e7\uc73c\uba74 \uae34\uac83\ubcf4\ub2e4 \ub354 \uc2e0\ub8b0\ud560 \uc218 \uc788\uc74c. \n\nsns.factorplot(x=\"Sex\", y='Survived', hue=\"Pclass\", data=df_train, saturation=5, size = 9, aspect = 1)","07ccb1e5":"# df_train \uc5d0\uc11c \uac01\uc885 \uc870\uac74\uc758 \ud0d1\uc2b9\uac1d \ub098\uc774 \ud655\uc778\n\nprint('\uc81c\uc77c \ub098\uc774 \ub9ce\uc740 \ud0d1\uc2b9\uac1d : {:.1f} years'.format(df_train['Age'].max()))\nprint('\uc81c\uc77c \uc5b4\ub9b0 \ud0d1\uc2b9\uac1d : {:.1f} years'.format(df_train['Age'].min()))\nprint('\ud0d1\uc2b9\uac1d \ud3c9\uade0 \ub098\uc774 : {:.1f} years'.format(df_train['Age'].mean()))","adca1ead":"# kdeplot \uc744 \uad6c\uae00\ub9c1\ud574\ubcf4\uc790.\n# kernel density estimate plot\uc774\ub2e4.\n# \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc73c\ub85c \uadf8\ub9b0 \uac83\uc744 \ucee4\ub110\ubc00\ub3c4\ud568\uc218\ub97c \uc774\uc6a9\ud574\uc11c \uc2a4\ubb34\uc2a4\ud558\uac8c \ud45c\ud604.\n\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[df_train['Survived']== 1]['Age'], ax = ax)\nsns.kdeplot(df_train[df_train['Survived']== 0]['Age'], ax = ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","6a19ebb4":"# \ubc88\uc678\n# \ub3c4\ud654\uc9c0\ub97c \uc900\ube44\ud558\ub294 \uc138\uac00\uc9c0 \ubc29\ubc95 \uc18c\uac1c\n# \uc138 \uac00\uc9c0 \ubb38\ubc95 \ubaa8\ub450 \uc54c\uba74 \uc88b\uc74c\n\n# 1\n# f = plt.figure(figsize=(5, 5))\n# 2\n# f, ax = plt.subplots(1, 1, figsize=(5, 5))\n# 3\nplt.figure(figsize = (5, 5))\n\na = np.arange(100)\nb = np.sin(a)\n\n# 1\n# plt.plot(b)\n# 2\n# ax.plot(b)\n# 3\nplt.plot(b)","cfe1a24b":"# \ub2e4\uc2dc \ubcf8\ub860\uc73c\ub85c\n# \ud074\ub798\uc2a4\ubcc4\ub85c \ub098\uc774 \ubd84\ud3ec\ub97c \ud655\uc778\n\nplt.figure(figsize=(8, 6))\n# hist\ub97c \uc4f0\uba74 \uacb9\uce58\uba74 \uc548\ubcf4\uc778\ub2e4.\n# df_train['Age'][df_train['Pclass'] == 1].plot(kind ='hist')\n# df_train['Age'][df_train['Pclass'] == 2].plot(kind ='hist')\n# df_train['Age'][df_train['Pclass'] == 3].plot(kind ='hist')\ndf_train['Age'][df_train['Pclass'] == 1].plot(kind ='kde')\ndf_train['Age'][df_train['Pclass'] == 2].plot(kind ='kde')\ndf_train['Age'][df_train['Pclass'] == 3].plot(kind ='kde')\n\nplt.xlabel('Age')\nplt.title(\"Age Distribution within classes\")\nplt.legend(['1st Class', '2nd Class', '3rd Class'])\n","3def7d7f":"# \ud074\ub798\uc2a4 1\uc758 \uc0dd\uc874\ubd84\ud3ec\n# &(\ubd88\ub9b0)\uc744 \uc0ac\uc6a9\ud574\uc11c\n# \uc0dd\uc874\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc778\ub370 pclass\uac00 1\uc778\uac83\n# \uc0dd\uc874\ud55c\uc0ac\ub78c\uc778\ub370 Pclass\uac00 1\uc778\uac83\n\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived']== 0) & (df_train['Pclass'] == 1)]['Age'], ax = ax)\nsns.kdeplot(df_train[(df_train['Survived']== 1) & (df_train['Pclass'] == 1)]['Age'], ax = ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","355ca71c":"# \ud074\ub798\uc2a4 2\uc758 \uc0dd\uc874\ubd84\ud3ec\n# &(\ubd88\ub9b0)\uc744 \uc0ac\uc6a9\ud574\uc11c\n# \uc0dd\uc874\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc778\ub370 pclass\uac00 2\uc778\uac83f\n# \uc0dd\uc874\ud55c\uc0ac\ub78c\uc778\ub370 Pclass\uac00 2\uc778\uac83\n\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived']== 0) & (df_train['Pclass'] == 2)]['Age'], ax = ax)\nsns.kdeplot(df_train[(df_train['Survived']== 1) & (df_train['Pclass'] == 2)]['Age'], ax = ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","78c1869c":"# \ud074\ub798\uc2a4 3\uc758 \uc0dd\uc874\ubd84\ud3ec\n# &(\ubd88\ub9b0)\uc744 \uc0ac\uc6a9\ud574\uc11c\n# \uc0dd\uc874\ud558\uc9c0 \uc54a\uc740 \uc0ac\ub78c\uc778\ub370 pclass\uac00 3\uc778\uac83\n# \uc0dd\uc874\ud55c\uc0ac\ub78c\uc778\ub370 Pclass\uac00 3\uc778\uac83\n\nfig, ax = plt.subplots(1, 1, figsize=(9, 5))\nsns.kdeplot(df_train[(df_train['Survived']== 0) & (df_train['Pclass'] == 3)]['Age'], ax = ax)\nsns.kdeplot(df_train[(df_train['Survived']== 1) & (df_train['Pclass'] == 3)]['Age'], ax = ax)\nplt.legend(['Survived == 1', 'Survived == 0'])\nplt.show()","5effa02f":"# 10\uc0b4\uc740 \ucd1d \uba87\uba85\uc774\uace0 \uadf8\uc911 \uba87\uba85 \uc0b4\uc558\ub294\uc9c0 \n\ni = 10\ndf_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived'])","72876ed7":"# 1\uc0b4~80\uc0b4\uae4c\uc9c0 1\uc0b4\uc740 \ucd1d\uba87\uba85\uc778\ub370 \uba87\uba85 \uc0b4\uc558\uace0, 2\uc0b4\uc740 \ucd1d\uba87\uba85\uc778\ub370 \uadf8\uc911\uc5d0 \uba87\uba85\uc0b4\uc558\uace0 ...\ub4f1\n# y = 1.02\ub294 \uc81c\ubaa9\uc758 \uc704\uce58\ub97c \uc0b4\uc9dd \uc870\uc808\ud574\uc900\uac83 (\uc608\uc058\uac8c \ub098\uc624\ub3c4\ub85d)\n\nchange_age_range_survival_ratio = []\n\nfor i in range(1, 80):\n    change_age_range_survival_ratio.append(df_train[df_train['Age'] < i]['Survived'].sum() \/ len(df_train[df_train['Age'] < i]['Survived']))\n    \nplt.figure(figsize=(7, 7))\nplt.plot(change_age_range_survival_ratio)\nplt.title(\"Survival rate change depending on range of Age\", y = 1.02)\nplt.ylabel(\"Survival rate\")\nplt.xlabel(\"Range of Age(0~x)\")\nplt.show()","8e5c0162":"# split=True\uc740 \uadf8\ub798\ud504\ub97c \uacb9\uccd0\ubcf4\uc5ec\uc8fc\ub294 \uac83. \n# set_yticks y\ucd95 \ub2e8\uc704\n\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\nsns.violinplot('Pclass', 'Age', hue = 'Survived', data=df_train, scale='count', split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 10))\n\nsns.violinplot('Sex', 'Age', hue = 'Survived', data=df_train, scale='count', split=True, ax=ax[1])\nax[1].set_title('Sex and Age vd Survived')\nax[1].set_yticks(range(0,110,10))\nplt.show()","8034ee98":"# \uc2b9\uc120\ud55c \uc7a5\uc18c\uc640 \uc0dd\uc874\uc758 \uad00\uacc4 \ud30c\uc545\n\nf, ax = plt.subplots(1, 1, figsize=(7, 7))\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax)","402466e2":"# \ud310\ub2e4\uc2a4 \ub370\uc774\ud130\ud504\ub808\uc784, \uc2dc\ub9ac\uc988\ub97c \uc815\ub82c\ud558\uace0\uc2f6\uc744\ub54c \uc0ac\uc6a9\ubc95 1\n# value\uc5d0 \ub300\ud574\uc11c sort \ubc29\ubc95\n\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_values(by='Survived')","d784c7c8":"# \ud310\ub2e4\uc2a4 \ub370\uc774\ud130\ud504\ub808\uc784, \uc2dc\ub9ac\uc988\ub97c \uc815\ub82c\ud558\uace0\uc2f6\uc744\ub54c \uc0ac\uc6a9\ubc95 2\n# index\uc5d0 \ub300\ud574\uc11c sort\ud558\ub294 \ubc29\ubc95\n\ndf_train[['Embarked', 'Survived']].groupby(['Embarked'], as_index=True).mean().sort_index()","e2964508":"# plt.subplots_adjust(wspace=0.2, hspace=0.5)\ub294 \uacf5\ubc31\uc744 \uc9c0\uc815\ud574\uc8fc\uc5b4 \uac01 \uadf8\ub798\ud504\uc0ac\uc774\uc5d0 \uac04\uaca9 \uc124\uc815\n\nf, ax = plt.subplots(2, 2, figsize=(20, 12))\nsns.countplot('Embarked', data=df_train, ax=ax[0, 0])\nax[0, 0].set_title('(1) No. of Passengers Board')\n\nsns.countplot('Embarked', hue='Sex', data=df_train, ax=ax[0, 1])\nax[0, 1].set_title('(2) Male-Female split for embarked')\n\nsns.countplot('Embarked', hue='Survived', data=df_train, ax=ax[1, 0])\nax[1, 0].set_title('(3) Embarked vs Survived')\n\nsns.countplot('Embarked', hue='Pclass', data=df_train, ax=ax[1, 1])\nax[1, 1].set_title('(4) Embarked vs Pclass')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()\n","dd57ae4b":"# \uc790\uc2e0\ub3c4 \ud3ec\ud568\ub418\uc57c \ud558\ubbc0\ub85c +1\n# \uadf8\ub9ac\uace0 train\uacfc test\uc5d0 \ubaa8\ub450 \uc801\uc6a9\ud574\uc57c\ud568\n\ndf_train['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1\ndf_test['FamilySize'] = df_train['SibSp'] + df_train['Parch'] + 1","ab5adbdf":"# \uac00\uc871\uc218\uac00 \uac00\uc7a5 \ub9ce\uc740 \uac83\uacfc \uc801\uc740 \uacbd\uc6b0\ub97c \ud655\uc778\n\nprint('Maximum size of Family:', df_train['FamilySize'].max())\nprint('Minimum size of Family:', df_train['FamilySize'].min())","e408c5c1":"# \uac00\uc871\uc218\uc640 \uc0dd\uc874 \uc0c1\uad00\uad00\uacc4 \ud655\uc778\n\nf, ax = plt.subplots(1, 3, figsize=(40, 10))\n\nsns.countplot('FamilySize', data=df_train, ax=ax[0])\nax[0].set_title('(1) No. Of Passenger Boarded', y=1.02)\n\nsns.countplot('FamilySize', hue='Survived', data=df_train, ax=ax[1])\nax[1].set_title('(2) Survived countplot depending on FamilySize', y = 1.02)\n\ndf_train[['FamilySize', 'Survived']].groupby(['FamilySize'],as_index=True).mean().sort_values(by='Survived', ascending=False).plot.bar(ax=ax[2])\nax[2].set_title('(3) Survived rate depending oin FamilySize', y=1.02)\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\nplt.show()","dd070da4":"# distplot\uc740 series\ub97c \ubc1b\uc73c\uba74 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \uadf8\ub824\uc8fc\ub294 plot\n# Skewness\ub294 \uc65c\ub3c4\ub77c\uace0\ud574\uc11c \uadf8\ub798\ud504\uac00 \uc5bc\ub9c8\ub098 \uc3e0\ub837\ub290\ub0d0\ub97c \uc54c\ub824\uc8fc\ub294 \uc9c0\ud45c(\ubd84\ud3ec\uc758 \ube44\ub300\uce6d\uc131)-\uc65c\ub3c4\uc758 \uae30\uc900\uc740\"0\",\ucca8\ub3c4\uc758 \uae30\uc900\uc740\"3\"\uc774\uc9c0\ub9cc \ub9ce\uc740 \ud1b5\uacc4\ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \"-3 shift\"\uc2dc\ucf1c\uc11c \uae30\uc900\uac12\uc774 \ubcf4\ud1b5\"0\"\uc774\ub2e4.\n# a = 0\uc774\uba74 \uc815\uaddc\ubd84\ud3ec, a > 0 \uc774\uba74 \uc88c\uce21\uc73c\ub85c \uce58\uc6b0\uce68, a < 0\uc774\uba74 \uc6b0\uce21\uc73c\ub85c \uce58\uc6b0\uce68\n# g\ub294 matplotlib\uc758 \uac1d\uccb4\uac00\ub41c\ub2e4.\n# g\ub97c \ubc18\ub0a9\ud55c\ub2e4\ub294 \ub9d0\uc740 \uacb0\uad6d \uadf8\ub9bc\uac1d\uccb4 \ud558\ub098\ub97c \ub118\uaca8\uc900\ub2e4\ub294 \uac83.\n# \uadf8\ub9bc\uac1d\uccb4\uc5d0 legend\ub97c \ub2ec\uaca0\ub2e4.\n\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","073923da":"# \uc774\ub300\ub85c \uc0ac\uc6a9\ud558\uba74 \uba38\uc2e0\ub7ec\ub2dd \ud559\uc2b5\ud558\uba74 \ud574\ub2f9 feature\uc758 \ud2b9\uc131\uc744 \uc798 \ud45c\ud604\ud558\uc9c0 \ubabb\ud560 \uc218\ub3c4 \uc788\ub2e4.\n# \ub530\ub77c\uc11c \uc791\uc5c5\uc744 \ud574\uc918\uc11c Skewness\ub97c \uc870\uae08 \uc5c6\uc560\uc904 \uac83\uc774\ub2e4.\n# \ub85c\uadf8\ub97c \ucde8\ud574\uc900\ub2e4.\n# i > 0 \uc774\uba74 \ub85c\uadf8\ub97c \ucde8\ud558\uace0, i < 0\uc774\uba74 0\uc744 \uc900\ub2e4.\n# \uadf8\uac83\uc744 \ub9e4\ud551\ud55c\ub2e4.\n# \ud2b9\uc815 \uc2dc\ub9ac\uc988\uc758 value\ub4e4\uc5d0 \ub3d9\uc77c\ud55c operation\uc744 \uc801\uc6a9\ud558\uace0 \uc2f6\uc744 \ub584\ub294 map\uacfc apply\ub97c \uc774\uc6a9\ud558\uba74 \ub418\ub294\ub370,\n# apply \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \ud568\uc218\ub97c \ub123\uc5b4\uc8fc\uace0,\n# map \uc740 \uac04\ub2e8\ud55c lamda\ud568\uc218\ub098 \ub515\uc154\ub108\ub9ac\ub97c \ub123\uc5b4 \uc904 \uc218 \uc788\ub2e4.\n\ndf_train[\"Fare\"] = df_train[\"Fare\"].map(lambda i: np.log(i) if i > 0 else 0)","d24cdee3":"# \ubc88\uc678\n# lamda\ud568\uc218\ub97c \uc774\uc6a9\ud55c \uac83\uc778\ub370, \uac04\ub2e8\ud55c \uc608\uc2dc\ub294 \uc544\ub798\uc640 \uac19\ub2e4.\nx = lambda i : i * i\nx(2)","fd04f47c":"# \ub2e4\uc2dc \ubcf8\ub860\n\ndf_train['Fare']","00e2779d":"# Fare \ud53c\uccd0\ub97c lamda\ud568\uc218\ub97c \uc774\uc6a9\ud574\uc11c \ub85c\uadf8\ub97c \ucde8\ud574\uc11c \ub9e4\ud551\ud55c \ud6c4 \uadf8\ub798\ud504 \ub2e4\uc2dc \ucd9c\ub825\n# distplot\uc740 series\ub97c \ubc1b\uc73c\uba74 \ud788\uc2a4\ud1a0\uadf8\ub7a8\uc744 \uadf8\ub824\uc8fc\ub294 plot\n# Skewness\ub294 \uc65c\ub3c4\ub77c\uace0\ud574\uc11c \uadf8\ub798\ud504\uac00 \uc5bc\ub9c8\ub098 \uc3e0\ub837\ub290\ub0d0\ub97c \uc54c\ub824\uc8fc\ub294 \uc9c0\ud45c(\ubd84\ud3ec\uc758 \ube44\ub300\uce6d\uc131)-\uc65c\ub3c4\uc758 \uae30\uc900\uc740\"0\",\ucca8\ub3c4\uc758 \uae30\uc900\uc740\"3\"\uc774\uc9c0\ub9cc \ub9ce\uc740 \ud1b5\uacc4\ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \"-3 shift\"\uc2dc\ucf1c\uc11c \uae30\uc900\uac12\uc774 \ubcf4\ud1b5\"0\"\uc774\ub2e4.\n# a = 0\uc774\uba74 \uc815\uaddc\ubd84\ud3ec, a > 0 \uc774\uba74 \uc88c\uce21\uc73c\ub85c \uce58\uc6b0\uce68, a < 0\uc774\uba74 \uc6b0\uce21\uc73c\ub85c \uce58\uc6b0\uce68\n# g\ub294 matplotlib\uc758 \uac1d\uccb4\uac00\ub41c\ub2e4.\n# g\ub97c \ubc18\ub0a9\ud55c\ub2e4\ub294 \ub9d0\uc740 \uacb0\uad6d \uadf8\ub9bc\uac1d\uccb4 \ud558\ub098\ub97c \ub118\uaca8\uc900\ub2e4\ub294 \uac83.\n# \uadf8\ub9bc\uac1d\uccb4\uc5d0 legend\ub97c \ub2ec\uaca0\ub2e4.\n\nfig, ax = plt.subplots(1, 1, figsize=(8, 8))\ng = sns.distplot(df_train['Fare'], color='b', label='Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax=ax)\ng = g.legend(loc='best')","373026d6":"df_train['Ticket'].value_counts()","6668803a":"# Ticket\uc5d0 \ub300\ud55c idea\ub97c \uc0dd\uac01\ud574\ubcf4\uace0 Ticket feature\ub97c \uc774\uc6a9\ud574 \ubcf4\uae30\ub97c \uad8c\uc7a5\ud568.\n\ndf_train['Ticket'].unique()","69008478":"# test \ub370\uc774\ud130\uc5d0\uc11c Fare\uc758 null data\ub294 1\uac1c\n\ndf_test['Fare'].isnull().sum()","aa27fa1f":"# test data\uc758 152\ubc88\uc9f8\n\ndf_test[df_test['Fare'].isnull()]","ba164790":"# train data\uc758 Fare \ud53c\uccd0 \ud3c9\uade0\uac12 \ud655\uc778\n\ndf_train['Fare'].mean()","658ed377":"# test data\uc758 Fare \uacb0\uce21\uac12\uc744 train data\uc758 Fare \ud3c9\uade0\uac12\uc73c\ub85c \ub300\uccb4\n\ndf_test['Fare'].fillna(2.9, inplace=True)","9f893de0":"# test data \uacb0\uce21\uac12 \ub300\uce58 \ud655\uc778\n\ndf_test.loc[152]","ac592afa":"# Age\uc758 null data\ub294 177\uac1c\n\ndf_train['Age'].isnull().sum()","386616a0":"# \uc2b9\uac1d\ub4e4 \ud638\uce6d\ub4e4\uc744 \uac00\uc9c0\uace0 \uadf8\ub8e8\ud551 \ud574\ubcfc \uac83\uc774\ub2e4.\n# \ud638\uce6d\uc744 \ucd94\ucd9c\ud574\uc57c\ud568\n# .str\uc744 \ubd99\ud788\uba74  str type\uc73c\ub85c \ubc14\ub010\ub2e4.\n# \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \uc774\uc6a9\ud560 \uac83\uc774\ub2e4.\n# str.extract()\uc740 \uc6d0\ud558\ub294 \ubb38\uc790\uc5f4\uc744 \ucd94\ucd9c\ud560 \ub54c \uc774\uc6a9\n# A-Za-z\uc740 \ub300\ubb38\uc790 A\ubd80\ud130 Z\uae4c\uc9c0, \uadf8\ub9ac\uace0 \uc18c\ubb38\uc790 a\ubd80\ud130 z\uae4c\uc9c0 \ud558\ub098\uc758 \uce90\ub9ad\ud130\uac00 \ud55c\uac1c \uc774\uc0c1\uc774\uba74 \uac70\uae30\uc5d0 \".\"\uc774 \ubd99\uc740 \uac83\uc744 extract\ud558\uaca0\ub2e4 \ub77c\ub294 \ub73b.\n# ex) Mr, Miss \ub4f1\n# train, test\uc5d0 \uac19\uc774 \uc801\uc6a9\ud560 \uac83.\n# dataframe\uc5d0  Initial column\uc744 \uc0dd\uc131\n\ndf_train['Initial'] = df_train['Name'].str.extract('([A-Za-z]+)\\.')\ndf_test['Initial'] = df_test['Name'].str.extract('([A-Za-z]+)\\.')","cc708f52":"# train dataframe column\ud655\uc778\n\ndf_train.head()","109b5783":"# test dataframe column\ud655\uc778\n\ndf_test.head()","39f024d5":"# \uc131\ubcc4\uc5d0 \ub530\ub77c \uc5b4\ub5bb\uac8c count\ub418\uc5b4\uc788\ub294 \uc9c0 \ud655\uc778\n\npd.crosstab(df_train['Initial'], df_train['Sex']).T.style.background_gradient(cmap='summer_r')","b75ea783":"# Mr, Mrs, Miss \uadf8\ub9ac\uace0 \ub2e4\ub978\uac83\ub4e4\ub85c \uadf8\ub8e8\ud551 \n# inplace=True\ub97c \ud558\uba74 \ubc14\ub85c \uc801\uc6a9\uc774 \ub40c. df_train['Initial'] = df_train['Initial'].replace... \uc548\ud574\ub3c4\ub310\n\n\ndf_train['Initial'].replace(['Mlle', 'Mme', 'Ms', 'Dr', 'Major', 'Lady', 'Countess', 'Jonkheer', 'Col', 'Rev', 'Capt', 'Sir', 'Don', 'Dona'],\n                            ['Miss', 'Miss', 'Miss', 'Mr', 'Mr', 'Mrs', 'Mrs', 'Other', 'Other', 'Other', 'Mr', 'Mr', 'Mr', 'Mr'], inplace=True)\ndf_test['Initial'].replace(['Mlle', 'Mme', 'Ms', 'Dr', 'Major', 'Lady', 'Countess', 'Jonkheer', 'Col', 'Rev', 'Capt', 'Sir', 'Don', 'Dona'],\n                            ['Miss', 'Miss', 'Miss', 'Mr', 'Mr', 'Mrs', 'Mrs', 'Other', 'Other', 'Other', 'Mr', 'Mr', 'Mr', 'Mr'], inplace=True)\n","36560405":"# df_train \uc801\uc6a9 \ud655\uc778\n\ndf_train['Initial'].unique()","39d387c4":"# df_test \uc801\uc6a9 \ud655\uc778\n\ndf_test['Initial'].unique()","15f21a1b":"# df_train\uc744 Initail \uae30\uc900\uc73c\ub85c \uac01\uc885 \ud3c9\uade0\uac12 \ud655\uc778\n\ndf_train.groupby('Initial').mean()","c62773c4":"# df_train\uc744 Initial \uae30\uc900\uc73c\ub85c Survived\uc758 \uac12\uc744 \ud50c\ub78f\uc73c\ub85c \ud655\uc778\n\ndf_train.groupby('Initial')['Survived'].mean().plot.bar()","e21f5b91":"# \ub450\uac1c\uc758 dataframe\uc744 \ud569\uce58\ub294 \uba54\uc18c\ub4dc\ub294 concat, merge \ub4f1\uc774 \uc788\ub2e4.\n# df_train \uc640 df_test \ub97c \ud569\uce5c\ub2e4.\n\ndf_all = pd.concat([df_train, df_test])","d90c4889":"# \ud569\uccd0\uc9c4 dataframe\ud655\uc778\n# 891 + 418 = row 1309 \n# \uc778\ub371\uc2a4\ub3c4 \uadf8\ub300\ub85c \uac00\uc838\uc634 \n# \uadf8\ub7ec\ub2c8\uae4c 1~891 + 1~419 \uc778 \uc0c1\ud0dc\uc784\n# \ub9cc\uc57d \uc778\ub371\uc2a4\ub97c 1309\ub85c \ud569\uce58\uace0\uc2f6\uc73c\uba74(0~1308)\uc774 \ub418\uac8c \ud558\ub294 \ubc29\ubc95\uc740 df_all.reset_index() \n# \ub2e4\uc2dc \ub3cc\uc544\uac00\uace0\uc2f6\uc73c\uba74 df_all.reset_index(drop=True) \n\ndf_all","8e9dd12e":"# Initial\ub85c \uadf8\ub8f9\ud551\ud574\uc11c \ub098\uc628 \ub098\uc774\uc758 \ud3c9\uade0\uc744 \uc774\uc6a9\ud574\uc11c null\uac12\uc744 \ucc44\uc6cc \uc904 \uac83\uc774\ub2e4.\n\ndf_all.groupby('Initial').mean()","1d94d549":"# df_train\uc5d0 Age\uac00 null\uc778 \uac83\ub4e4 \ubc18\ud658\n\ndf_train['Age'].isnull()","3330935e":"# df_train\uc5d0\uc11c Age\uac00 null\uc774\uba74\uc11c Initial\uc774 Mr\uc778 \uac83 \ubc18\ud658\n\ndf_train['Age'].isnull() & (df_train['Initial'] == 'Mr')","76f458df":"# loc\ub97c \uc774\uc6a9\ud574\uc11c df_train\uc5d0\uc11c Age\uac00 null\uc774\uba74\uc11c Initial\uc774 Mr\uc778 \uac83 \uc778\ub371\uc2f1 \n\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Mr'))]","473d5b7d":"# loc\ub97c \uc774\uc6a9\ud574\uc11c df_train\uc5d0\uc11c Age\uac00 null\uc774\uba74\uc11c Initial\uc774 Mr\uc778 \uac83 \uc778\ub371\uc2f1 \ud558\uace0 \uceec\ub7fc\uc744 \uc9c0\uc815\ud574\uc8fc\uba74 \ud574\ub2f9 \uceec\ub7fc\ub9cc \ucd94\ucd9c\n\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Mr'),'Age')]","03521558":"# loc\ub97c \uc774\uc6a9\ud574\uc11c df_train\uc5d0\uc11c Age\uac00 null\uc774\uba74\uc11c Initial\uc774 Mr\uc778 \uac83 \uc778\ub371\uc2f1 \ud558\uace0 \uceec\ub7fc\uc744 \uc9c0\uc815\ud574\uc8fc\uba74 \ud574\ub2f9 \uceec\ub7fc\ub9cc \ucd94\ucd9c\n# \uadf8\ub9ac\uace0 \"=\"\uc744 \uc774\uc6a9\ud574\uc11c \uc22b\uc790\ub97c \uc9c0\uc815\ud574\uc8fc\uba74 \ub098\uc774 null\uac12\uc5d0 33\uc774 \ub2e4 \ub4e4\uc5b4\uac10\n# 33\uc744 \uc9c0\uc815\ud55c \uc774\uc720\ub294 Mr\uc758 \ud3c9\uade0 \ub098\uc774\uac00 32.5\uc774\uae30 \ubc18\uc62c\ub9bc\ud574\uc11c 33\uc744 \ub123\uc74c\n# \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \ubaa8\ub4e0 initial\uc5d0 \uc801\uc6a9\n\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Mr'),'Age')] = 33\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Master'),'Age')] = 5\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Miss'),'Age')] = 22\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Mrs'),'Age')] = 37\ndf_train.loc[(df_train['Age'].isnull() & (df_train['Initial'] == 'Other'),'Age')] = 45\n\n# test data\uc5d0\ub3c4 \ub611\uac19\uc774 \ud574\uc918\uc57c\ud568.\ndf_test.loc[(df_test['Age'].isnull() & (df_test['Initial'] == 'Mr'),'Age')] = 33\ndf_test.loc[(df_test['Age'].isnull() & (df_test['Initial'] == 'Master'),'Age')] = 5\ndf_test.loc[(df_test['Age'].isnull() & (df_test['Initial'] == 'Miss'),'Age')] = 22\ndf_test.loc[(df_test['Age'].isnull() & (df_test['Initial'] == 'Mrs'),'Age')] = 37\ndf_test.loc[(df_test['Age'].isnull() & (df_test['Initial'] == 'Other'),'Age')] = 45\n","ad49f0e3":"# \ud574\ub2f9 null\uac12\uc5d0 33\uc774 \ub4e4\uc5b4\uac04 \uac83\uc744 \ud655\uc778\n# \ubaa8\ub4e0 initial\ub3c4 \uc801\uc6a9\ub418\uc5c8\uc744 \uac83\uc784.\n\ndf_train.loc[(df_train['Initial'] == 'Mr'), 'Age']","7008dd8d":"# df_train\uc5d0  \uc6d0\ud558\ub294 \ub300\ub85c \ub2e4\ucc44\uc6cc\uc838\uc154 null \uc774 \uc5c6\ub294\uc9c0 \ud655\uc778\n\ndf_train['Age'].isnull().sum()","33f228c6":"# df_test\uc5d0  \uc6d0\ud558\ub294 \ub300\ub85c \ub2e4\ucc44\uc6cc\uc838\uc154 null \uc774 \uc5c6\ub294\uc9c0 \ud655\uc778\n\ndf_test['Age'].isnull().sum()","823aa6f2":"# Embarked\uc758 null \ub370\uc774\ud130 \uac2f\uc218 \ud655\uc778\n\ndf_train['Embarked'].isnull().sum()","f55e1ec2":"# \ucd1d \ub370\uc774\ud130\uac00 891\uac1c\ub85c \uaf64 \ub9ce\uae30 \ub54c\ubb38\uc5d0 \uacb0\uce21\uac12 2\uac1c\ub294 \uac00\uc7a5 \ub9ce\uc774 \ub098\uc628 \ub370\uc774\ud130\ub85c \ucc44\uc6cc\uc904 \uac83\uc774\ub2e4\n\ndf_train.shape","e8238e2e":"# S\uac00 \uac00\uc7a5 \ub9ce\uc558\uae30 \ub54c\ubb38\uc5d0 'S'\ub85c \uce58\ud658\n\ndf_train['Embarked'].fillna('S', inplace=True)","0cce334a":"# \uce58\ud658 \ud6c4 Embarked\uc758 null \ub370\uc774\ud130 \uac2f\uc218 \ud655\uc778\n\ndf_train['Embarked'].isnull().sum()","1c212840":"# dataframe\uc5d0 Age \uce74\ud14c\uace0\ub9ac \uceec\ub7fc\uc744 \ud558\ub098 \uc0dd\uc131\n\ndf_train['Age_cat'] = 0","9e2c4d8d":"# dataframe\uc5d0 \uc0dd\uc131\ub41c column\ud655\uc778\n\ndf_train.head()","0f678a98":"# \ud558\ub4dc\ucf54\ub529\ud558\uc5ec df_train\uc758 'Age'\uc758 \ubc94\uc704\ub97c \ub098\ub204\uc5b4 Age_cat\uc5d0 \uac12 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\n\ndf_train.loc[df_train['Age'] < 10, 'Age_cat'] = 0\ndf_train.loc[(10 <= df_train['Age']) & (df_train['Age'] < 20), 'Age_cat'] = 1\ndf_train.loc[(20 <= df_train['Age']) & (df_train['Age'] < 30), 'Age_cat'] = 2\ndf_train.loc[(30 <= df_train['Age']) & (df_train['Age'] < 40), 'Age_cat'] = 3\ndf_train.loc[(40 <= df_train['Age']) & (df_train['Age'] < 50), 'Age_cat'] = 4\ndf_train.loc[(50 <= df_train['Age']) & (df_train['Age'] < 60), 'Age_cat'] = 5\ndf_train.loc[(60 <= df_train['Age']) & (df_train['Age'] < 70), 'Age_cat'] = 6\ndf_train.loc[(70 <= df_train['Age']), 'Age_cat'] = 7","9b0e2287":"# \ud558\ub4dc\ucf54\ub529\ud558\uc5ec df_test 'Age'\uc758 \ubc94\uc704\ub97c \ub098\ub204\uc5b4 Age_cat\uc5d0 \uac12 \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\n\ndf_test.loc[df_test['Age'] < 10, 'Age_cat'] = 0\ndf_test.loc[(10 <= df_test['Age']) & (df_test['Age'] < 20), 'Age_cat'] = 1\ndf_test.loc[(20 <= df_test['Age']) & (df_test['Age'] < 30), 'Age_cat'] = 2\ndf_test.loc[(30 <= df_test['Age']) & (df_test['Age'] < 40), 'Age_cat'] = 3\ndf_test.loc[(40 <= df_test['Age']) & (df_test['Age'] < 50), 'Age_cat'] = 4\ndf_test.loc[(50 <= df_test['Age']) & (df_test['Age'] < 60), 'Age_cat'] = 5\ndf_test.loc[(60 <= df_test['Age']) & (df_test['Age'] < 70), 'Age_cat'] = 6\ndf_test.loc[(70 <= df_test['Age']), 'Age_cat'] = 7","d2502eff":"# df_train\uc758 Age_cat \ud655\uc778\n\ndf_train.head()","c678ec39":"# df_test\uc758 Age_cat \ud655\uc778\n\n\ndf_test.head()","7db1ab69":"# \uc704 \uc758 \uc608\ucc98\ub7fc \ud558\ub4dc\ucf54\ub529\ud558\uc5ec \ud574\uc904 \uc218 \uc788\uc9c0\ub9cc, \ud568\uc218\ub97c \uc774\uc6a9\ud558\uba74 \uc880\ub354 \uc27d\uac8c \uac00\ub2a5\ud558\ub2e4.\n# apply\ub77c\ub294 \uba54\uc11c\ub4dc\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc790.\n# \ud568\uc218\ub97c \uc0dd\uc131\ud55c\ub2e4. \n\ndef category_age(x):\n    if x < 10:\n        return 0 \n    elif x < 20:\n        return 1\n    elif x < 30:\n        return 2\n    elif x < 40:\n        return 3\n    elif x < 50:\n        return 4\n    elif x < 60:\n        return 5\n    elif x < 70:\n        return 6\n    else:\n        return 7","e13a6626":"# apply \uba54\uc11c\ub4dc\ub97c \uc774\uc6a9\ud574\uc11c \ud568\uc218 \uc801\uc6a9\n# \uc704\uc5d0\uc11c \ud558\ub4dc\ucf54\ub529\ud55c \ubc29\ubc95\uc774\ub791 \uacb0\uacfc\ub97c \ube44\uad50\ud558\uae30\uc704\ud574 Age_cat_2\ub77c\uace0 \uc9c0\uc815\n\ndf_train['Age_cat_2'] = df_train['Age'].apply(category_age)","efba8571":"# \ub450 \ubc29\ubc95 \uacb0\uacfc \ube44\uad50\n# .all()\uc740 \ubaa8\ub4e0\uac8c True\uc774\uc5b4\uc57c True\ubc18\ud658, 1\uac1c\ub77c\ub3c4 Flase\uba74 False\ubc18\ud658\n# .any()\ub294 \ud558\ub098\ub77c\ub3c4 True\uba74 True\ubc18\ud658\n# \uc989 \uc804\uccb4\uac00 \uac19\uc740\uc9c0 \ud655\uc778\ud558\ub824\uba74 .all()\n\n(df_train['Age_cat'] == df_train['Age_cat_2']).all()\n\n# \ub450 \ubc29\ubc95\uc740 \uacb0\uacfc\uac00 \uac19\uc73c\ub2c8 \uc880\ub354 \ud3b8\ub9ac\ud55c \ud568\uc218, apply\ub97c \uc774\uc6a9\ud558\ub294 \uc2b5\uad00\uc744 \ub4e4\uc774\uc790.","7aea89ec":"# \uce74\ud14c\uace0\ub9ac\ub85c \ub9cc\ub4e4\uc5c8\uc73c\ub2c8\uae4c train\uc758 Age, Age_cat_2\ub294 drop\ud574\uc57c\ud568.\n# test\uc5d0\ub294 Age_cat_2\ub294 \uc2e4\ud589\uc548\ud588\uc73c\ub2c8\uae4c 'Age' \ub9cc drop\ud574\uc8fc\uba74 \ub40c.\n# axis = 1\uc744 \ud574\uc918\uc57c\ud558\ub294 \uc774\uc720\ub294 \uc138\ub85c column\uc744 drop\ud558\ub294 \uac83\uc774\uae30 \ub54c\ubb38.\n# inplace = True\ub97c \ud574\uc8fc\uc5b4\uc57c \uc2e4\uc81c\ub85c \uc801\uc6a9\ub40c.\n\ndf_train.drop(['Age', 'Age_cat_2'], axis = 1, inplace = True)\ndf_test.drop(['Age'], axis = 1, inplace = True)","207c2b34":"# Initial\uc5d0 \uc5b4\ub5a4 \uce74\ud14c\uace0\ub9ac\uac00 \uc788\ub294\uc9c0 \ud655\uc778\n\ndf_train.Initial.unique()","38b2ba93":"# df_train\uc640 df_tetst\uc758 Initial column\uc5d0 .map()\uc744 \uc774\uc6a9\ud574\uc11c \uce74\ud14c\uace0\ub9ac\ub370\uc774\ud130\ub97c \uc22b\uc790\ub85c \uce58\ud658\n\ndf_train['Initial'] = df_train['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})\ndf_test['Initial'] = df_test['Initial'].map({'Master': 0, 'Miss': 1, 'Mr': 2, 'Mrs': 3, 'Other': 4})","c552e9f4":"# \uce58\ud658\ub410\ub294\uc9c0 \ud655\uc778\n\ndf_train['Initial']","aba66ae7":"# Embarked \uc758 unique\ud655\uc778\n# \uc774\ub807\uac8c \uc4f0\uba74 array type\uc73c\ub85c \ubcf4\uc5ec\uc90c\n\ndf_train.Embarked.unique()","1bc15ac2":"# \uc774\ub807\uac8c \uc4f0\uba74 Series type\uc73c\ub85c \ubcf4\uc5ec\uc90c\n\ndf_train['Embarked'].value_counts()","088d05d3":"# # df_train\uc640 df_tetst\uc758 Embarked column\uc5d0 .map()\uc744 \uc774\uc6a9\ud574\uc11c \uce74\ud14c\uace0\ub9ac\ub370\uc774\ud130\ub97c \uc22b\uc790\ub85c \uce58\ud658\n\ndf_train['Embarked'] = df_train['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})\ndf_test['Embarked'] = df_test['Embarked'].map({'C': 0, 'Q': 1, 'S': 2})","aacd711c":"# \ub370\uc774\ud130 \uce58\ud658\uc774 \uc798 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778\n\ndf_train","de1fc666":"#null data\uac00 \uc788\ub098 \ud655\uc778.\n\ndf_train.Embarked.isnull().sum()","341bffde":"# Sex \ud53c\uccd0\ub3c4 \uc5ec\uc790 0, \ub0a8\uc790 1\ub85c \uce58\ud658\n# df_train, df_test \ubaa8\ub450 \uc801\uc6a9\n\ndf_train['Sex'] = df_train['Sex'].map({'female': 0, 'male': 1})\ndf_test['Sex'] = df_test['Sex'].map({'female': 0, 'male': 1})","57dc3c73":"# train sex\uce58\ud658 \ud655\uc778\n\ndf_train","d544d823":"# test sex \uce58\ud658 \ud655\uc778\n\ndf_test","d870cf34":"#heatmap\uc744 \uadf8\ub9b4 \uac83\uc778\ub370 \uadf8\uc804\uc5d0 8\uac1c\uc758 \ud53c\uccd0\ub97c \uc9c0\uc815\ud574\uc900\ub2e4.\n#  8 by 8\ub85c \uadf8\ub9b4\uac83\uc774\ub2e4.\n\nheatmap_data = df_train[['Survived', 'Pclass', 'Sex', 'Fare', 'Embarked', 'FamilySize', 'Initial', 'Age_cat']]","eb45b00d":"# \ud53c\uc5b4\uc2a8 \uc0c1\uad00\uacc4\uc218\ub97c \uc774\uc6a9\ud574\uc11c correalation(\uc0c1\uad00\uad00\uacc4)\ub97c \uad6c\ud558\ub294 \ubc29\ubc95\uc740\n# .corr() \uc774\ub2e4.\n\nheatmap_data.corr()","6072ce91":"# \uc774\uc81c \ud788\ud2b8\ub9f5\uc744 \uadf8\ub9b0\ub2e4.\n# linewidths=0.1\ub294 \uce78\uc0ac\uc774\uc5d0 \ub77c\uc778\uc758 \uac04\uaca9\uc124\uc815\n# vmax=1.0 \uc0c9\uae54 \ubcc0\ud658\uc758 \uae30\uc900\n# linecolor='white' \uce78\uc0ac\uc774 \ub77c\uc778\uc758 \uc0c9\uc0c1\n# annot=True \uce78\uc5d0 \uc22b\uc790 \ud45c\uc2dc\n# annot_kws={'size':16}\ub294 \uce78\uc5d0 \uc22b\uc790\uae00\uc528 \uc0ac\uc774\uc988\n# fmt='.2f'\uc22b\uc790 \ubc18\uc62c\ub9bc\n\ncolormap = plt.cm.RdBu\nplt.figure(figsize=(12,10))\nplt.title('Pearson Correalation of Features', y=1.05, size=15)\nsns.heatmap(heatmap_data.astype(float).corr(), linewidths=0.1, vmax=1.0,\n           square=True, cmap=colormap, linecolor='white', annot=True, annot_kws={'size':16}, fmt='.2f')","bf80a878":"# df_train \ud655\uc778\n\ndf_train.head()","dda62a07":"# Initial\uc744 \uc6d0\ud56b \uc778\ucf54\ub529\n\n# pd.get_dummies() \ub77c\ub294 \ud568\uc218\ub294 \uc6d0\ud56b\uc778\ucf54\ub529\uc744 \ub9cc\ub4dc\ub294 \ud568\uc218\n# columns=['Initial']\uc740 \uc6d0\ud56b \uc778\ucf54\ub529\uc744 \ud560 \uceec\ub7fc\n# prefix='Initial'\uc740 column\ubcc4 prefix\ub97c \uc9c0\uc815\ud574\uc8fc\ub294 \uac83(\uc774\ub984_n)\n# \uae30\uc874 Initial column\uc740 \uc5c6\uc5b4\uc9d0.\n\n# train, test \ubaa8\ub450 \uc801\uc6a9\n\ndf_train = pd.get_dummies(df_train, columns=['Initial'], prefix='Initial')\ndf_test = pd.get_dummies(df_test, columns=['Initial'], prefix='Initial')","e4e8aee9":"# Embarked\uc744 \uc6d0\ud56b \uc778\ucf54\ub529\n\n# pd.get_dummies() \ub77c\ub294 \ud568\uc218\ub294 \uc6d0\ud56b\uc778\ucf54\ub529\uc744 \ub9cc\ub4dc\ub294 \ud568\uc218\n# columns=['Embarked']\uc740 \uc6d0\ud56b \uc778\ucf54\ub529\uc744 \ud560 \uceec\ub7fc\n# prefix='Embarked'\uc740 column\ubcc4 prefix\ub97c \uc9c0\uc815\ud574\uc8fc\ub294 \uac83(\uc774\ub984_n)\n# \uae30\uc874 Embarked column\uc740 \uc5c6\uc5b4\uc9d0.\n\n# train, test \ubaa8\ub450 \uc801\uc6a9\n\ndf_train = pd.get_dummies(df_train, columns=['Embarked'], prefix='Embarked')\ndf_test = pd.get_dummies(df_test, columns=['Embarked'], prefix='Embarked')","83fe2ac4":"# \ud544\uc694\uc5c6\ub294 column\uc740 \ub0a0\ub9b4 \uac83\uc774\ub2e4.\n# trian, test \ubaa8\ub450 \uc801\uc6a9\n# axis = 1\ub294 \uc138\ub85c\uc5f4\uc744 \uc81c\uac70\ud55c\ub2e4\ub294 \ub73b\n\ndf_train.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis = 1, inplace=True)\ndf_test.drop(['PassengerId', 'Name', 'SibSp', 'Parch', 'Ticket', 'Cabin'], axis = 1, inplace=True)\n","0d85b904":"# train \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0 \uc0ac\uc6a9\ud560 feature\ub9cc \ub0a8\uc558\ub294\uc9c0 \ud655\uc778\n\ndf_train.head()","4a449666":"# test \ub370\uc774\ud130\ud504\ub808\uc784\uc5d0 \uc0ac\uc6a9\ud560 feature\ub9cc \ub0a8\uc558\ub294\uc9c0 \ud655\uc778\n\n\ndf_test.head()","3eb4f688":"# RandomForestClssifier\ub294 \uc6b0\ub9ac\uac00 \ud480\uc5b4\uc57c\ud560 \ubb38\uc81c\uac00 \uc774\uc9c4 \ubd84\ub958 \ubb38\uc81c\uc774\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\n# \uc989 Binary classification \ubb38\uc81c\uc5d0 \uc0ac\uc6a9\ud560 \uac83\uc774\ub2e4.\n# metrics\ub294 \ubaa8\ub378\uc744 \ud3c9\uac00\ud558\ub294 \uc5ec\ub7ec \ud568\uc218\ub4e4\uc744 \uc81c\uacf5\n# train_test_split \ubaa8\ub378 \uac80\uc99d\uc744 \ud560 \ub54c train set\uc744 train\uacfc valid\ub85c \ubd84\ud560 \ud560\ub54c \uc0ac\uc6a9\n\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn import metrics\nfrom sklearn.model_selection import train_test_split","98ca8952":"# \uc0ac\uc6a9\ud560 \ub370\uc774\ud130 \uc9c0\uc815\n\nX_train = df_train.drop('Survived', axis=1).values\ntarget_label = df_train['Survived'].values\nX_test = df_test.values","a50e57e1":"# train data\ub97c train \uacfc valid\ub85c \uc2a4\ud50c\ub9bf \n\nX_tr, X_vld, y_tr, y_vld = train_test_split(X_train, target_label, test_size=0.3, random_state=1)","c91d82b1":"# RandomForestClssifier \ubaa8\ub378 \uc0dd\uc131 \ubc0f \ubaa8\ub378 fit\n\nmodel = RandomForestClassifier()\nmodel.fit(X_tr, y_tr)","8f4c980b":"# \ubaa8\ub378 \uc608\uce21\n\nprediction = model.predict(X_vld)","28a1fd7a":"# \uc608\uce21\ud655\uc778\n\nprediction","42b844f0":"# \uc815\ud655\ub3c4 \uc810\uc218 \ud655\uc778\n\nprint('\ucd1d {}\uba85\uc5d0 \ub300\ud574\uc11c {:.2f}% \uc815\ud655\ub3c4\ub85c \uc0dd\uc874 \uc5ec\ubd80 \uc608\uce21\uc131\uacf5'.format(y_vld.shape[0], 100 * metrics.accuracy_score(prediction, y_vld)))","20de4a91":"# \uc218\uc791\uc5c5\uc73c\ub85c \ud655\uc778\ud558\ub294 \ubc29\ubc95\ub3c4 \uc788\ub2e4.\n\n(prediction == y_vld).sum() \/ prediction.shape[0]","bf801203":"# \ud310\ub2e4\uc2a4 \uc2dc\ub9ac\uc988 \uc784\ud3ec\ud2b8\n\nfrom pandas import Series","2380a386":"# scikitlearn\uc5d0\uc11c\ub294 \ubaa8\ub378\uc744 \ud559\uc2b5\uc2dc\ud0a4\uac8c\ub418\uba74 \ud53c\uccd0\uc784\ud3ec\ud134\uc2a4\ub97c \ud56d\uc0c1 \uac00\uc9c0\uace0\uc788\ub2e4.\n\nfeature_importance = model.feature_importances_\nSeries_feat_imp = Series(feature_importance, index=df_test.columns)","5fa928ce":"# \ud53c\uccd0 \uc784\ud3ec\ud134\uc2a4\ub97c \ud50c\ub78f\uc73c\ub85c \ubcf4\uc790.\n\nplt.figure(figsize=(8, 8))\nSeries_feat_imp.sort_values(ascending=True).plot.barh()\nplt.xlabel('Feature importance')\nplt.ylabel('Feature')\nplt.show()","5d85cb0d":"# \uc774\uc81c test data\ub97c \uac00\uc9c0\uace0 \uc608\uce21\ud574\ubcf4\uc790.\n\nprediction = model.predict(X_test)","b029c587":"submission = pd.read_csv('..\/input\/titanic\/gender_submission.csv')","836bd6bc":"submission.head()","786c793a":"# \uc11c\ube0c\ubbf8\uc158 \uc0dd\uc131 \nsubmission['Survived'] = prediction\nsubmission.to_csv('.\/first_submission.csv', index=False)","95f1bbec":"# data set check","8560be74":"![image.png](attachment:36984dfa-c348-4156-969b-f49ded9af0c3.png)\n### \uac01 \ud53c\uccd0\ub4e4\uac04\uc758 \uc0c1\uad00\uad00\uacc4\ub97c \ud30c\uc545\ud560 \ub54c \uc774\uc6a9","6afa26bf":"# EDA(Exploratory Data Analysis)","25774bd5":"# Feature engineering","a60842b2":"### Fare(continues feature\uc784)","cb35430e":"### Embarked","4abf23ab":"#  Model development - Machine learning(Randomforest)","8a65817e":"2.3 Both Pclass and Sex","8166ceca":"### Family -> SibSp + Parch (\uac00\uc871= \ud615\uc81c\uc790\ub9e4+\ubd80\ubaa8\ub2d8,\ubc30\uc6b0\uc790,\uc790\ub140)","276487b6":"### Cabin\uc740 Null data\uac00 80%\uac00 \ub118\uae30\ub54c\ubb38\uc5d0 \uc77c\ub2e8 \uc81c\uc678\uc2dc\ud0a4\uace0 \ub118\uc5b4\uac10\n### Ticket ","b73ae87b":"### Pclass, Sex, Age","f352a3a4":"# Machine learning prediction - feature importance and prediction on test set\n![image.png](attachment:fa1670a4-7247-44d9-aaa3-287081a2d918.png)","580ffa1f":"### 2.2 Sex (\uc131\ubcc4)","c165e36b":"# import helpful libraries","210e99fb":"### ","99635f36":"### Fill Null in Age","f790a87e":"### Fill Null in Embarked and categorize Age","0dd042e0":"### One-hot encoding on the Initial and Embarked\n\n![image.png](attachment:c4029ec2-b620-4ef9-aa8e-32d739fd0d34.png)\n\n\uadf8\ub0e5 \uc218\uce58\ub85c \uce58\ud658\ud55c\uac83\uc744 \ubaa8\ub378\uc5d0 \uc774\uc6a9\ud574\ub3c4 \ub418\uc9c0\ub9cc,\n\uc6d0\ud56b\uc778\ucf54\ub529\uc740 \uce74\ud14c\uace0\ub9ac \ub370\uc774\ud130\ub97c \uc815\ub9d0 \uce74\ud14c\uace0\ub9ac\ub2f5\uac8c \uc4f0\ub294 \ubc29\ubc95(?)\uc774\ub77c\uace0 \uc0dd\uac01","bd431ce8":"### Fill Null in Fare","d9321d8b":"-Lady first.\n-Money brings survival?","b4d1336f":"### continues feature\ub97c category\ub85c \ub9cc\ub4dc\ub294 \ubc29\ubc95\n1,2,3,4,5,6\ub4f1\uc774 -> 1~3\uae4c\uc9c0\ub294 1 \uadf8\ub9ac\uace0 4~6\uae4c\uc9c0\ub294 4 \ub4f1\uc73c\ub85c \ubc14\uafb8\ub294 \uac83\n\uc790\uce6b \uc815\ubcf4 \uc190\uc2e4\uc774 \uc77c\uc5b4\ub0a0 \uc218 \uc788\uc9c0\ub9cc, \uc5b4\ub5a0\ud55c \uc0c1\ud669\uc5d0\uc11c\ub294 \ub354 \uc798\ub9de\uc744 \uc218\ub3c4 \uc788\ub2e4.","2c3bfd6f":"### Age","3b5ee2bd":"### 2.1 Pclass column (Ordinal data \uc21c\uc11c\uac00\uc788\ub294 \uce74\ud14c\uace0\ub9ac \uc11c\uc218\ud615 \ub370\uc774\ud130)","e0cfcc9b":"### Change string to categorical and Pearson coefficeint\n\uc2a4\ud2b8\ub9c1 \ub370\uc774\ud130\ub97c \uc218\uce58\ub370\uc774\ud130\ub85c \ubc14\uafb8\uae30"}}