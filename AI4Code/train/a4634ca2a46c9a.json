{"cell_type":{"b6afd3dc":"code","aa4815e5":"code","d2dfee85":"code","33ceb0be":"code","76dcfddf":"code","11bad565":"code","b2f66f5f":"code","c56de91b":"code","46babd4b":"code","7f6329f0":"code","028f61e6":"code","fca3144f":"code","1834a4c5":"code","e528f8f5":"code","8c90b522":"code","178aa6d7":"code","2a1ac35e":"code","36d582c7":"code","717c7f9a":"code","d101c7fa":"code","a8b2843d":"code","60b57797":"code","8613cf52":"code","009abf46":"code","3a15792d":"code","1a113cd3":"code","d87c040f":"code","6b8965ff":"markdown","299c0659":"markdown","98f59538":"markdown","4104f695":"markdown","a20e61fa":"markdown","a36f132a":"markdown","e9d59565":"markdown","0bd613d1":"markdown","1e2f5831":"markdown","d6ac4861":"markdown","06b77108":"markdown","2b4fa104":"markdown"},"source":{"b6afd3dc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\n# import pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","aa4815e5":"import pandas as pd\nhousing_df = pd.read_csv(\"..\/input\/generaldatasets\/WestRoxbury.csv\")","d2dfee85":"housing_df.shape #\tfind\tthe\tdimension\tof\tdata\tframe","33ceb0be":"housing_df.head()   \t #\tshow\tthe\tfirst\tfive\trows","76dcfddf":"print(housing_df)\t #\tshow\tall\tthe\tdata","11bad565":"#\tRename\tcolumns:\treplace\tspaces\twith\t\u2019_\u2019\tto\tallow\tdot\tnotation\t\nhousing_df = housing_df.rename(columns={'TOTAL VALUE':'TOTAL_VALUE'})","b2f66f5f":"housing_df.columns=[s.strip().replace(' ','_') for s in housing_df.columns] \n","c56de91b":"#\tPractice\tshowing\tthe\tfirst\tfour\trows\tof\tthe\tdata\nhousing_df.loc[0:3]\t #\tloc[a:b]\tgives\trows\ta\tto\tb,\tinclusive\t","46babd4b":"housing_df.iloc[0:4]\t #\tiloc[a:b]\tgives\trows\ta\tto\tb-1\n","7f6329f0":"#\tDifferent\tways\tof\tshowing\tthe\tfirst\t10\tvalues\tin\tcolumn\t TOTAL_VALUE\nhousing_df['TOTAL_VALUE'].iloc[0:10]\nhousing_df.iloc[0:10]['TOTAL_VALUE']\nhousing_df.iloc[0:10].TOTAL_VALUE\t #\tuse\tdot\tnotation\tif\tthe\t","028f61e6":"#\tShow\tthe\tfifth\trow\tof\tthe\tfirst\t10\tcolumns\nhousing_df.iloc[4][0:10]","fca3144f":"housing_df.iloc[4,\t0:10]","1834a4c5":"housing_df.iloc[4:5,\t0:10]\t #\tuse\ta\tslice\tto\treturn\ta\tdata\tframe\t","e528f8f5":"#\tThe\taxis\targument\tspecifies\tthe\tdimension\talong\twhich\tthe\n#\tconcatenation\thappens,\t0=rows,\t1=columns.\npd.concat([housing_df.iloc[4:6,0:2],\thousing_df.iloc[4:6,4:6]],\t\naxis=1)\n","8c90b522":"#\tTo\tspecify\ta\tfull\tcolumn,\tuse:\nhousing_df.iloc[:,0:1]\nhousing_df.TOTAL_VALUE\nhousing_df['TOTAL_VALUE'][0:10]\t #\tshow\tthe\tfirst\t10\trows\tof\tthe\tfirst\tcolumn","178aa6d7":"#\tDescriptive\tstatistics\nprint('Number\tof\trows\t',\tlen(housing_df['TOTAL_VALUE']))\t#\tshow length\tof\tfirst\tcolumn\n","2a1ac35e":"print('Mean of TOTAL_VALUE', housing_df['TOTAL_VALUE'].mean())\t#\t show\tmean\tof\tcolumn","36d582c7":"housing_df.describe()\t#\tshow\tsummary\tstatistics\tfor\teach\tcolumn","717c7f9a":"import\tnumpy\tas\tnp\nimport\tpandas\tas\tpd\nfrom\tsklearn.model_selection\timport\ttrain_test_split\nfrom\tsklearn.metrics\timport\tr2_score\nfrom\tsklearn.linear_model\timport\tLinearRegression","d101c7fa":"#\trandom\tsample\tof\t5\tobservations\nhousing_df.sample(5)\n","a8b2843d":"#\toversample\thouses\twith\tover\t10\trooms\nweights\t=\t[0.9\tif\trooms\t>\t10\telse\t0.01\tfor\trooms\tin\thousing_df.ROOMS]\nhousing_df.sample(5,\tweights=weights)","60b57797":"housing_df.columns\t\t#\tprint\ta\tlist\tof\tvariables","8613cf52":"#\tREMODEL\tneeds\tto\tbe\tconverted\tto\ta\tcategorical\tvariable\nhousing_df.REMODEL\t=\thousing_df.REMODEL.astype('category')","009abf46":"housing_df.REMODEL.cat.categories\t\t#\tShow\tnumber\tof\tcategories","3a15792d":"housing_df.REMODEL.dtype\t\t#\tCheck\ttype\tof\tconverted\tvariab","1a113cd3":"#\tTo\tillustrate\tmissing\tdata\tprocedures,\twe\tfirst\tconvert\ta\tfew entries\tfor\n#\tbedrooms\tto\tNA\u2019s.\tThen\twe\timpute\tthese\tmissing\tvalues\tusing\tthe\tmedian\tof\tthe\n#\tremaining\tvalues.\nmissingRows\t=\thousing_df.sample(10).index\nhousing_df.loc[missingRows,\t'BEDROOMS']\t=\tnp.nan\nprint('Number\tof\trows\twith\tvalid\tBEDROOMS\tvalues\tafter\tsetting\tto\tNAN:\t',\thousing_df['BEDROOMS'].count())\n#\tremove\trows\twith\tmissing\tvalues\nreduced_df\t=\thousing_df.dropna()\nprint('Number\tof\trows\tafter\tremoving\trows\twith\tmissing\tvalues:\t',\t\nlen(reduced_df))\n#\treplace\tthe\tmissing\tvalues\tusing\tthe\tmedian\tof\tthe\tremaining\t values.\nmedianBedrooms\t=\thousing_df['BEDROOMS'].median()\nhousing_df.BEDROOMS\t= housing_df.BEDROOMS.fillna(value=medianBedrooms)\nprint('Number\tof\trows\twith\tvalid\tBEDROOMS\tvalues\tafter\tfilling\tNA\tvalues:\t',\thousing_df['BEDROOMS'].count())","d87c040f":"from\tsklearn.preprocessing\timport\tMinMaxScaler,\tStandardScaler\ndf\t=\thousing_df.copy()\n#\tNormalizing\ta\tdata\tframe\n#\tpandas:\nnorm_df\t=\t(housing_df\t-\thousing_df.mean())\t\/\thousing_df.std()\n#\tscikit-learn:\nscaler\t=\tStandardScaler()\nnorm_df\t=\tpd.DataFrame(scaler.fit_transform(housing_df),index=housing_df.index,\tcolumns=housing_df.columns)\n#\tthe\tresult\tof\tthe\ttransformation\tis\ta\tnumpy\tarray,\twe\tconvert\tit\tinto\ta\tdataframe\n#\tRescaling\ta\tdata\tframe\n#\tpandas:\nnorm_df\t=\t(housing_df\t-\thousing_df.min())\t\/\t(housing_df.max()\t-housing_df.min())\n#\tscikit-learn:\nscaler\t=\tMinMaxScaler()\nnorm_df\t=\tpd.DataFrame(scaler.fit_transform(housing_df),\tindex=housing_df.index,\tcolumns=housing_df.columns)","6b8965ff":"--------------------------------","299c0659":"* # Missing\tData","98f59538":"# \u2003code\tfor\tsampling\tand\tover\/under-sampling","4104f695":"# Core Idea in Data Mining\n\n1. Classification\n2. Prediction\n3. Association Rules and RecommendationSystem:\n> \n    Online\trecommendation\tsystems,\tsuch\tas\tthose\tused\ton\tAmazon.com\tand\t Netflix.com,\tuse\tcollaborative\tfiltering,\ta\tmethod\tthat\tuses\tindividual\tusers\u2019\t preferences\tand\ttastes\tgiven\ttheir\thistoric\tpurchase,\trating,\tbrowsing,\tor\tany\t  other\tmeasurable\tbehavior\tindicative\tof\tpreference,\tas\twell\tas\tother\tusers\u2019\thistory.\tIn\tcontrast\tto\tassociation\trules\tthat\tgenerate\trules\tgeneral\tto\tan\tentire\t    population,\tcollaborative filtering\tgenerates\t\u201cwhat\tgoes\twith\twhat\u201d\tat\tthe\t  individual\tuser\tlevel.\tHence,\tcollaborative\tfiltering\tis\tused\tin\tmany\trecommendation\tsystems\tthat\taim\tto\tdeliver\tpersonalized\trecommendations\tto\t  users\twith\ta\twide\trange\tof\tpreferences.\n4. Predictive Analytics\n5. Data\tReduction\tand\tDimension\tReduction\n>  In this method we can clusterin our data to some class and make label on them\n6. Data\tExploration\tand\tVisualization\n7. Supervised\tand\tUnsupervised\tLearning\n\n\n    \n","a20e61fa":"# What is the SEMMA?\n\n1. Sample: Take\ta\tsample\tfrom\tthe\tdataset;\tpartition\tinto\ttraining,\tvalidation,and\ttest\tdatasets.\n2. Explore: Examine\tthe\tdataset\tstatistically\tand\tgraphically.\n3. Modify: Transform\tthe\tvariables\tand\timpute\tmissing\tvalues.\n4. Model Fit:\tpredictive\tmodels\t(e.g.,\tregression\ttree,\tneural\tnetwork).\n5. Assess Compare:\tmodels\tusing\ta\tvalidation\tdataset.\n","a36f132a":"# Normalizing\t(Standardizing and\tRescaling\tData","e9d59565":"---------------------------------","0bd613d1":"# Loading\tand\tLooking\tat\tthe\tData\tin\tPython\n","1e2f5831":"Refrence : [Data Mining for Business Analytics: Concepts, Techniques and Applications in Python](https:\/\/www.wiley.com\/en-us\/Data+Mining+for+Business+Analytics%3A+Concepts%2C+Techniques+and+Applications+in+Python-p-9781119549840)","d6ac4861":"# The Steps in Data Mining\n1. Develop\tan\tunderstanding\tof\tthe\tpurpose\tof\tthe\tdata\tmining\tproject\n2. Obtain\tthe\tdataset\tto\tbe\tused\tin\tthe\tanalysis\n3. Explore,\tclean,\tand\tpreprocess\tthe\tdata\n4. Reduce\tthe\tdata\tdimension,\tif\tnecessary\n5. Determine\tthe\tdata\tmining\ttask\t(classification,\tprediction,\tclustering,\tetc.)\n6. Partition\tthe\tdata\t(for\tsupervised\ttasks)\n7. Choose\tthe\tdata\tmining\ttechniques\tto\tbe\tused\t(regression,\tneural\tnets,hierarchical\tclustering,\tand\tso\ton).\n8. Use\talgorithms\tto\tperform\tthe\ttask\n9. Interpret\tthe\tresults\tof\tthe\talgorithms\n10. Deploy\tthe\tmodel\n","06b77108":"**code\tfor\tnormalizing\tand\trescaling\ta\tdata\tframe**","2b4fa104":"# Preprocessing\tand\tCleaning\tthe\tData\n**Types\tof\tVariables**"}}