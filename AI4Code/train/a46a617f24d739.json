{"cell_type":{"d03cec5b":"code","3edb66e7":"code","bfe7d33a":"code","122d94f9":"code","33b6b9f5":"code","bcf9713f":"code","7caaa91f":"code","c0c81050":"code","379b35c2":"code","a5919f83":"code","af8611b2":"code","87cd738b":"code","7f0dde5e":"code","ad73220e":"code","ca15f6a5":"code","726c55f8":"code","5ecc5708":"code","0f504df4":"code","7db0b6b5":"markdown","c16c7b1b":"markdown","06d663f8":"markdown"},"source":{"d03cec5b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # visualization tool\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"..\/input\"]).decode(\"utf8\"))\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","3edb66e7":"# In this code, I read CSV data\ndata = pd.read_csv('..\/input\/student-alcohol-consumption\/student-mat.csv')","bfe7d33a":"# In this code, be shown info()\ndata.info()","122d94f9":"# In this code, be shown correlation map\n# corr() with table\ndata.corr()","33b6b9f5":"# In this code, be shown correlation map\n# corr() with color shema\nf,ax = plt.subplots(figsize=(21, 7))\nsns.heatmap(data.corr(), annot=True, linewidths=.01, fmt= '.2f',ax=ax)\nplt.show()","bcf9713f":"# In this code, be shown expamle inside data\n# head() \ndata.head(10)","7caaa91f":"# In this code, be shown columns name of data\n# columns() \ndata.columns\n\n# It has 33 columns","c0c81050":"# Line Plot\n# color = color, label = label, linewidth = width of line, alpha = opacity, grid = grid, linestyle = sytle of line\n\ndata.age.plot(kind = 'line', color = 'g',label = 'age',linewidth=0.5,alpha = 1,grid = True,linestyle = ':')\ndata.Walc.plot(color = 'r',label = 'Walc',linewidth=0.5, alpha = 1,grid = True,linestyle = '-.')\ndata.Dalc.plot(color = 'b',label = 'Dalc',linewidth=0.5, alpha = 1,grid = True,linestyle = '-')\nplt.legend(loc='center right')     # legend = puts label into plot\nplt.xlabel('x axis')              # label = name of label for x axis\nplt.ylabel('y axis')              # label = name of label for y axis\nplt.title('Age and Dalc&Walc Line Plot')            # title = title of plot\nplt.show()","379b35c2":"# Scatter Plot \n# x = 'Walc' and 'Dalc', y = 'age'\n# Example 1 : One table two variables but one color...\ndata.plot(kind='scatter', x='Walc' and 'Dalc', y='age',alpha = 0.2,color = 'red')\nplt.xlabel('Walc')                               # label = name of label for x axis\nplt.ylabel('age')                                # label = name of label for y axis\nplt.title('Walc - age Scatter Plot')            # title = title of plot\nplt.show()","a5919f83":"# Scatter Plot \n# x = 'Walc' and 'Dalc', y = 'age'\n# Example 2 : Two table for two different variables\ndata.plot(kind='scatter', x='Walc', y='age',alpha = 0.2,color = 'DarkBlue', label='Walc')\nplt.title('Walc - age Scatter Plot')            # title = title of plot\ndata.plot(kind='scatter', x='Dalc', y='age',alpha = 0.2,color = 'DarkGreen', label='Dalc')\nplt.title('Dalc - age Scatter Plot')            # title = title of plot\nplt.show()","af8611b2":"# Scatter Plot \n# x = 'Walc' and 'Dalc', y = 'age'\n# Example 3 : One table two variables with different colors...\nax = data.plot(kind='scatter', x='Dalc', y='age',alpha = 0.5,color = 'DarkBlue', label='Dalc')\ndf = data.plot(kind='scatter', x='Walc', y='age',alpha = 0.2,color = 'Red', label='Walc', ax=ax)\nplt.title('Dalc&Walc - Age Scatter Plot')            # title = title of plot\nplt.show()","87cd738b":"# Histogram\n# bins = number of bar in figure\ndata.age.plot(kind = 'hist',bins = 14,figsize = (21,5))\nplt.xlabel('age') \nplt.title('Age Frequency Histogram') \nplt.show()","7f0dde5e":"# clf() = cleans it up again you can start a fresh\ndata.age.plot(kind = 'hist',bins = 14)\nplt.clf()\n# We cannot see plot due to clf()","ad73220e":"# Scatter Plot \n# x = 'G1' y = 'G2'\n# Example 1 : One table two variables but one color...\ndata.plot(kind='scatter', x='G1', y='G2',alpha = 0.2,color = 'red')\nplt.xlabel('G1')                               # label = name of label for x axis\nplt.ylabel('G2')                               # label = name of label for y axis\nplt.title('G1 - G2 Scatter Plot')              # title = title of plot\nplt.show()","ca15f6a5":"data.columns","726c55f8":"# We are computing the average of G1\n\naverageG1 = sum(data.G1) \/ len(data.G1)\nprint(averageG1)","5ecc5708":"# We are writing the Conditional Expression for rows of G1\n\ndata[\"G1_Status\"] = [\"High\" if i > averageG1 else \"low\" for i in data.G1]","0f504df4":"# We are showing G1_Status and G1 for first 20 rows\ndata.loc[:20,[\"G1_Status\", \"G1\"]]","7db0b6b5":"**List Comprehension**","c16c7b1b":"## **ALCOHOL CONSUMPTION**\nIn this kernel, be shown alcohol consumption of students.","06d663f8":"We use G1 column. We want to write if any row value higher of average,  it write 'high'. If any row value lower than average, it write 'low'.\nLet's get start!"}}