{"cell_type":{"d27b2a88":"code","5e7ebb1b":"code","296e228f":"code","955e1778":"code","fa28e6fb":"code","49e10c31":"code","efd2378a":"code","61b29ed4":"code","0a2a7e04":"code","3fb06f9e":"code","3da529e0":"markdown"},"source":{"d27b2a88":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","5e7ebb1b":"df = pd.read_csv(\"..\/input\/battles.csv\")\ndf.head(10)","296e228f":"kings = pd.Series(df[\"attacker_king\"].append(df[\"defender_king\"].reset_index(drop=True)).unique())\nkings.dropna(inplace = True)\nkings","955e1778":"outcomes = df[[\"name\", \"attacker_king\", \"defender_king\", \"attacker_outcome\"]]\noutcomes.head(3)","fa28e6fb":"attwin = outcomes[outcomes.attacker_outcome == \"win\"][\"attacker_king\"]\nattwin.dropna(inplace = True)\nattwin","49e10c31":"defwin = outcomes[outcomes.attacker_outcome == \"loss\"][\"defender_king\"]\ndefwin.dropna(inplace = True)\ndefwin","efd2378a":"winnerkings = defwin.append(attwin).reset_index(drop=True)\nwinnerkings","61b29ed4":"winnerkings.value_counts()","0a2a7e04":"\nkingsscores = pd.DataFrame({\"kings_name\":[], \"number_of_wins\": []})\ni = 0\nfor king in kings:\n    if king in winnerkings.value_counts():\n        kingsscores.loc[df.index[i],[\"kings_name\"]] = king\n        kingsscores.loc[df.index[i],[\"number_of_wins\"]] = winnerkings.value_counts()[king]\n    else:\n        kingsscores.loc[df.index[i],[\"kings_name\"]] = king\n        kingsscores.loc[df.index[i],[\"number_of_wins\"]] = 0\n    i +=1\n\nkingsscores","3fb06f9e":"plt.figure(dpi = 200)\nplt.bar(kingsscores[\"kings_name\"], kingsscores[\"number_of_wins\"], \n        edgecolor = \"k\",\n       )\nplt.xticks(kings, rotation = \"vertical\")\nplt.grid()","3da529e0":" <h1>Finding a king with most wins<\/h1>"}}