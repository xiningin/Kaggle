{"cell_type":{"27e8950b":"code","2f7b978e":"code","2e26dd2b":"code","102108ec":"code","1dfbd428":"code","87c483d1":"code","30c41731":"code","24afe6fa":"code","7f5b8ca9":"code","9b4b22c1":"code","1037aa63":"code","bf9f7cfd":"code","65e9738b":"code","b2b38276":"code","7c7fe882":"code","6dc68712":"code","33c9408a":"code","3b927b03":"code","89287ac2":"code","88db12a7":"code","7b037092":"code","b6fb57d5":"markdown","ca21bcfd":"markdown","6bbdc313":"markdown"},"source":{"27e8950b":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.\n","2f7b978e":"import os\n\n# Time\nimport time\nimport datetime\n\n# Numerical\nimport numpy as np\nimport pandas as pd\n\n# Tools\nimport itertools\nfrom collections import Counter\n\n# NLP\nimport re\nimport nltk\nfrom nltk.corpus import stopwords\n\n# Preprocessing\nfrom sklearn import preprocessing\nfrom sklearn.utils import class_weight as cw\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import train_test_split\n\n# Model Selection\nfrom sklearn.model_selection import train_test_split\n\n# Evaluation Metrics\nfrom sklearn import metrics \nfrom sklearn.metrics import f1_score, accuracy_score,confusion_matrix,classification_report\n\n# Deep Learing Preprocessing - Keras\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing import sequence\nfrom keras.utils import to_categorical\n\n# Deep Learning Model - Keras\nfrom keras.models import Model\nfrom keras.models import Sequential\n\nfrom keras.layers import Dense, Embedding\nfrom keras.models import Sequential\n\n# Deep Learning Model - Keras - RNN\nfrom keras.layers import Embedding, LSTM, Bidirectional\n\n# Deep Learning Model - Keras - General\nfrom keras.layers import Input, Add, concatenate, Dense, Activation, BatchNormalization, Dropout, Flatten\nfrom keras.layers import LeakyReLU, PReLU, Lambda, Multiply\n\nfrom keras.preprocessing import sequence\nfrom keras import regularizers\n\n# Deep Learning Parameters - Keras\nfrom keras.optimizers import RMSprop, Adam\n\n# Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom fastai.imports import *\nfrom fastai.text import *","2e26dd2b":"path = Path(os.path.abspath(os.curdir))","102108ec":"#File Import\nfilepath = Path('..\/input')\ndf = pd.read_csv(filepath\/'Tweets.csv')\ndf.head()","1dfbd428":"df = df[['airline_sentiment','text']]\ndf.head()","87c483d1":"train = df[:int(len(df)*.99)]\nvalid = df[int(len(df)*.99):]","30c41731":"lm_dat = TextLMDataBunch.from_df(path, train, valid)\nlm_dat.save('data_lm_export.pkl')","24afe6fa":"lm_learn = language_model_learner(lm_dat, AWD_LSTM, drop_mult=0.4)","7f5b8ca9":"lm_learn.lr_find()\nlm_learn.recorder.plot()","9b4b22c1":"lm_learn.fit_one_cycle(4, 1e-2)","1037aa63":"lm_learn.unfreeze()\nlm_learn.lr_find(); lm_learn.recorder.plot()","bf9f7cfd":"lm_learn.fit_one_cycle(4, 1e-3)\n#Encoder\nlm_learn.save_encoder('ft_enc')","65e9738b":"#Splitting the dataset in 80:20 ratio\ntrain = df[:int(len(df)*.80)]\nvalid = df[int(len(df)*.80):]","b2b38276":"# Classifier model data\ndata_clas = TextClasDataBunch.from_df(path, train, valid, vocab=lm_dat.train_ds.vocab, bs=32)\ndata_clas.save('data_clas_export.pkl') ; data_clas = load_data(path, 'data_clas_export.pkl', bs=16)","7c7fe882":"#Building a classifier with fine-tuned encoder \nlm_learn = text_classifier_learner(data_clas, AWD_LSTM, drop_mult=.3, metrics=[accuracy,Precision(average='weighted'),Recall(average='weighted')])\nlm_learn.load_encoder('ft_enc')","6dc68712":"data_clas.show_batch()","33c9408a":"lm_learn.lr_find()\nlm_learn.recorder.plot()","3b927b03":"lm_learn.fit_one_cycle(4, 1e-2)","89287ac2":"lm_learn.freeze_to(-2)\nlm_learn.fit_one_cycle(4, slice(1e-3\/(2.6**4), 1e-3))","88db12a7":"#unfreezing the model and fine-tuning it\nlm_learn.unfreeze()\nlm_learn.fit_one_cycle(8, slice(1e-5\/(2.6**4),1e-5))\nlm_learn.save('final')","7b037092":"#Obtaining Test Accuracy\nvalid['pred_sentiment'] = valid['text'].apply(lambda row: str(lm_learn.predict(row)[0]))\nprint(\"Test Accuracy: \", accuracy_score(valid['airline_sentiment'], valid['pred_sentiment']))","b6fb57d5":"## Fine-tuning Classifier \n","ca21bcfd":"## References\n[1] \u201cApplication to NLP, including ULMFiT fine-tuning,\u201d text | fastai. [Online]. Available: https:\/\/docs.fast.ai\/text.html#Text-models,-data,-and-training. [Accessed: 24-Jul-2019].\n","6bbdc313":"## Transfer Learning\n#### Loading pre-trained language model and fine-tuning"}}