{"cell_type":{"412f68b1":"code","63d5d1de":"code","4dab93ec":"code","0ff4cdb4":"code","9b6ed281":"code","9f8dad34":"code","a555fe9d":"code","eab31200":"code","89690807":"code","be1e692f":"code","c9f5b9d4":"code","bbed25b6":"code","cd5661e7":"code","7f58f9f9":"code","9949ef93":"code","afc78db1":"code","4585579b":"markdown","1edcbd50":"markdown","0c183d58":"markdown","c73d7293":"markdown","d3dd0980":"markdown","87390fbe":"markdown","2c9b44bd":"markdown","1527d044":"markdown","164b5415":"markdown","d6883575":"markdown","3a49bd2e":"markdown","28c2870c":"markdown","310cb900":"markdown","6294ce9f":"markdown","34ea720f":"markdown"},"source":{"412f68b1":"import pandas as pd\n\npatients_data = pd.read_csv('..\/input\/column_2C_weka.csv')\npatients_data.head()","63d5d1de":"all_features = patients_data[['pelvic_incidence', 'pelvic_tilt numeric', 'lumbar_lordosis_angle', 'sacral_slope', 'pelvic_radius', 'degree_spondylolisthesis']].values\n\nall_classes = patients_data['class'].values\n\nfeature_names = ['pelvic_incidence', 'pelvic_tilt numeric', 'lumbar_lordosis_angle', 'sacral_slope', 'pelvic_radius', 'degree_spondylolisthesis']\n\nall_features","4dab93ec":"from sklearn import preprocessing\n\nscaler = preprocessing.StandardScaler()\nall_features_scaled = scaler.fit_transform(all_features)\nall_features_scaled","0ff4cdb4":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import cross_val_score\n\nclf = LogisticRegression()\ncv_scores = cross_val_score(clf, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","9b6ed281":"import numpy\nfrom sklearn.model_selection import train_test_split\n\nnumpy.random.seed(1234)\n\n(training_inputs, testing_inputs, training_classes, testing_classes) = train_test_split(all_features_scaled, all_classes, train_size= 0.8, random_state = 1)","9f8dad34":"from sklearn.tree import DecisionTreeClassifier\n\nclf = DecisionTreeClassifier(random_state=1)\n\nclf.fit(training_inputs, training_classes)","a555fe9d":"clf.score(testing_inputs, testing_classes)","eab31200":"clf = DecisionTreeClassifier(random_state=1)\n\ncv_scores = cross_val_score(clf, all_features_scaled, all_classes, cv=10)\n\ncv_scores.mean()","89690807":"from sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier(n_estimators=10, random_state=1)\ncv_scores = cross_val_score(clf, all_features_scaled, all_classes, cv=10)\n\ncv_scores.mean()","be1e692f":"from sklearn import svm\n\nC = 1.0\nsvc = svm.SVC(kernel='linear', C=C)\ncv_scores = cross_val_score(svc, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","c9f5b9d4":"svc = svm.SVC(kernel='rbf', C=C)\ncv_scores = cross_val_score(svc, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","bbed25b6":"svc = svm.SVC(kernel='sigmoid', C=C)\ncv_scores = cross_val_score(svc, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","cd5661e7":"svc = svm.SVC(kernel='poly', C=C)\ncv_scores = cross_val_score(svc, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","7f58f9f9":"from sklearn import neighbors\n\nfor i in range(1, 51):\n    clf = neighbors.KNeighborsClassifier(n_neighbors= i)\n    cv_scores = cross_val_score(clf, all_features_scaled, all_classes, cv=10)\n    print(i, \":\", cv_scores.mean())\n","9949ef93":"from sklearn.naive_bayes import MultinomialNB\n\nscaler = preprocessing.MinMaxScaler()\nall_features_minmax = scaler.fit_transform(all_features)\n\nclf = MultinomialNB()\ncv_scores = cross_val_score(clf, all_features_minmax, all_classes, cv=10)\n\ncv_scores.mean()","afc78db1":"from tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.wrappers.scikit_learn import KerasClassifier\n\ndef create_model():\n    model = Sequential()\n    model.add(Dense(10, input_dim=6, kernel_initializer='normal', activation='relu'))\n    model.add(Dense(6, kernel_initializer='normal', activation='relu'))\n    model.add(Dense(1, kernel_initializer='normal', activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n    return model\n\nestimator = KerasClassifier(build_fn=create_model, epochs=100, verbose=0)\ncv_scores = cross_val_score(estimator, all_features_scaled, all_classes, cv=10)\ncv_scores.mean()","4585579b":"Now I will also try a RandomForestClassifier to see if that accuracy is any better.","1edcbd50":"## Conclusion\n\nIt seems the best machine learning model was the model using a SVM with a linear kernel hyperparameter. It yielded the highest accuracy being 83.5%.","0c183d58":"## Neural Networks","c73d7293":"Now I will need to normalise the input data.","d3dd0980":"## Preparing the data\nFirst I import the data file into a Pandas dataframe. Fortunatley, there are no missing values in the data set, so we won't have to do any cleaning.","87390fbe":"## K-Nearest Neighbours\n\nIn attempt to find the best value of K, I will use a for loop to iterate through different values of K from 1 to 50 and compare the resulting accuracy from each value of K.","2c9b44bd":"Now I fit a DecisionTreeClassifier to the training data.","1527d044":"## Support Vector Machines\n\nsvm.SVC has different kernels which may vary in performance. I will try linear, rbf, sigmoid and poly and see which results in the highest accuracy.","164b5415":"## Logistic Regression\n\nGiven this is just a binary classification problem, I will first try logistic regression and see how high this accuracy is.","d6883575":"## Naive Bayes","3a49bd2e":"Now I convert the dataframes into numpy arrays to be used by scikit_learn. We have one array that contains the class, another array with the feature data and another array with the feature name labels.","28c2870c":"## Decision Trees\n\nBefore using the DecisionTreeClassifier, I will create a train\/test split of the data - 80% for training and 20% for testing.","310cb900":"Measuring the accuracy of the decision tree model using the test data.","6294ce9f":"# Predicting whether a patient's biomechanical features are normal or abnormal\nby Kevin Young\n\nI will be using the dataset provided by UCI Machine Learning.\n\nThe data contains 310 instances of patients' features with six biomechanical attributes which come from the shape and orientation of the pelvis and lumbar spine:\n\n- pelvic incidence\n- pelvic tilt\n- lumbar lordosis angle\n- sacral slope\n- pelvic radius\n- grade of spondylolisthesis","34ea720f":"Now I am trying K-Fold cross validation to further help avoid overfitting (K=10)."}}