{"cell_type":{"206dd71b":"code","a47e0da5":"code","db7e04f2":"code","7319aa3b":"code","25007e08":"code","6d509526":"code","ebcecd02":"code","46815d66":"code","2ef0ca5e":"code","0de49ddf":"code","d473149f":"code","cf812d08":"code","153497c0":"code","1177507d":"code","1c3dc093":"code","62e82b62":"code","17292e6e":"code","0a7b0907":"code","f86fa207":"code","fe8f5918":"code","fed8477e":"code","5904430a":"code","f85d8006":"code","c7fcba61":"code","136e0bd3":"code","de967d12":"code","72508f5c":"code","efc3de09":"markdown","65443ee9":"markdown","d5446269":"markdown","926c70f8":"markdown","27c18212":"markdown","e76c594d":"markdown","61afe6fa":"markdown","97cb0d34":"markdown","71b70022":"markdown","b576a80b":"markdown","0cf4c8b8":"markdown","2486bd94":"markdown"},"source":{"206dd71b":"import pandas as pd #Data Analysis\nimport numpy as np #Linear Algebra\nimport seaborn as sns #Data Visualization\nimport matplotlib.pyplot as plt #Data Visualization","a47e0da5":"import os\nprint(os.listdir(\"..\/input\"))","db7e04f2":"#This is the Product_sales_train_and_test dataset but without the \"[]\" in the Customer Basket.\ndf1=pd.read_csv(\"..\/input\/remove\/data.csv\")","7319aa3b":"df2=pd.read_csv(\"..\/input\/discount-prediction\/Train.csv\")\ndf3=pd.read_csv(\"..\/input\/discount-prediction\/test.csv\")","25007e08":"df1.fillna(float(0.0),inplace=True)\ndf2.fillna(float(0.0),inplace=True)","6d509526":"from sklearn.feature_extraction.text import CountVectorizer\ncv1 = CountVectorizer(max_features=500)\ny = cv1.fit_transform(df1[\"Customer_Basket\"]).toarray()","ebcecd02":"thirty= list(y)\nthirty1=pd.DataFrame(thirty)","46815d66":"final=pd.concat([df1,thirty1],axis=1)","2ef0ca5e":"df2=df2[df2[\"BillNo\"]!=float(0.0)]","0de49ddf":"finaltrain=pd.merge(final,df2,on=\"BillNo\",how=\"inner\")\nfinaltest=pd.merge(final,df3,on=\"BillNo\",how=\"inner\")","d473149f":"finaltrain.drop([\"BillNo\",\"Customer_Basket\",\"Customer\",\"Date\"],axis=1,inplace=True)\nfinaltest.drop([\"BillNo\",\"Customer_Basket\",\"Customer\",\"Date\"],axis=1,inplace=True)","cf812d08":"X=finaltrain.drop([\"Discount 5%\",\"Discount 12%\",\"Discount 18%\",\"Discount 28%\"],axis=1)\ny=finaltrain[[\"Discount 5%\",\"Discount 12%\",\"Discount 18%\",\"Discount 28%\"]]","153497c0":"X1, y2 = np.array(X), np.array(y)","1177507d":"var = np.reshape(X1, (X1.shape[0], X1.shape[1], 1))","1c3dc093":"import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Dropout","62e82b62":"# Initialising the ANN\nclassifier = Sequential()\n\n# Adding the input layer and the first hidden layer\nclassifier.add(Dense(units = 64, kernel_initializer = 'uniform', activation = 'relu', input_dim = 500))\nclassifier.add(Dropout(0.2))\n\n# Adding the second hidden layer\nclassifier.add(Dense(units =32 , kernel_initializer = 'uniform', activation = 'relu'))\nclassifier.add(Dropout(0.2))\n\nclassifier.add(Dense(units =16 , kernel_initializer = 'uniform', activation = 'relu'))\nclassifier.add(Dropout(0.2))\n\n# Adding the output layer\nclassifier.add(Dense(units = 4, kernel_initializer = 'uniform', activation = 'softmax'))\n\n# Compiling the ANN\nclassifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n\n# Fitting the ANN to the Training set\nclassifier.fit(X, y, batch_size = 10, epochs = 50)","17292e6e":"annpredictions=classifier.predict(finaltest)","0a7b0907":"discountann=list(annpredictions)","f86fa207":"abbasann=pd.DataFrame(discountann)","fe8f5918":"abbasann=(abbasann> 0.4)","fed8477e":"from keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom keras.layers import Dropout","5904430a":"# Initialising the RNN\nregressor = Sequential()\n\n# Adding the first LSTM layer and some Dropout regularisation\nregressor.add(LSTM(units = 50, return_sequences = True, input_shape = (var.shape[1], 1)))\nregressor.add(Dropout(0.2))\n\n# Adding a second LSTM layer and some Dropout regularisation\nregressor.add(LSTM(units = 50, return_sequences = True))\nregressor.add(Dropout(0.2))\n\n# Adding a third LSTM layer and some Dropout regularisation\nregressor.add(LSTM(units = 50, return_sequences = True))\nregressor.add(Dropout(0.2))\n\n# Adding a fourth LSTM layer and some Dropout regularisation\nregressor.add(LSTM(units = 50))\nregressor.add(Dropout(0.2))\n\n# Adding the output layer\nregressor.add(Dense(units=4, activation='softmax'))\n\n# Compiling the RNN\nregressor.compile(optimizer = 'adam', loss = 'categorical_crossentropy')\n\n# Fitting the RNN to the Training set\nregressor.fit(var, y2, epochs = 1, batch_size = 32)\n","f85d8006":"finaltest1=np.array(finaltest)\nbaas=np.reshape(finaltest1, (finaltest1.shape[0], finaltest1.shape[1], 1))","c7fcba61":"discountclass=regressor.predict(baas)","136e0bd3":"discountbaas=list(discountclass)","de967d12":"abbas=pd.DataFrame(discountbaas)","72508f5c":"abbas= (abbas > 0.3)","efc3de09":"<h1>2. LSTM<\/h1><br>\nFirst we used ANN but the results were poor and as seen ini our previous kernel we could not see any Customer getting preference for Discounts. Therefore we tried to capture the pattern of discounts been given using an LSTM approach.","65443ee9":"At the end we were able to discern that an <b>LSTM<\/b> gave us the best result. One major change that we noticed was that the Bill Numbers were change from ZA's to A's from July 1st, 2017 and that in this transition the majority of Discounts also drastically changed from 28% to 12%.","d5446269":"We have purposely set the epoch time to 1 as it takes a long time for the kernel to commit.","926c70f8":"<h1>Result<\/h1>","27c18212":"<h1>Importing the datasets<\/h1>","e76c594d":"Since to differentiate the Customer Basket is an NLP Problem we will be using CountVectoriser. It converts a collection of text documents to a matrix of token counts. ","61afe6fa":"The objective of this \"Discount Prediction\" Competition was to build a model to Predict Medical Wholesales Discount to their customers. In this notebook, we will walk through a complete machine learning solution, try out two deep learning models, select a model and , inspect the outputs of the model and draw conclusions. We would like to thank everyone for this hackathon.","97cb0d34":"<h1>1. Artificial Neural Networks (ANN)<\/h1>","71b70022":"<font size=\"20\">Discount Prediction<\/font>","b576a80b":"Importing the necessary libraries for an LSTM model.","0cf4c8b8":"<h1>Modeling<\/h1>","2486bd94":"<h1>Importing the Libraries<\/h1>"}}