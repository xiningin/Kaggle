{"cell_type":{"11631c99":"code","90b9a37f":"code","7d0ae0c9":"code","19b10bdd":"code","e7a12ee9":"code","de80ed55":"code","b74c45f9":"code","d01b5521":"code","bd2e8414":"code","ce46d4f9":"code","b489db8b":"code","5a7693b3":"code","70491ac4":"markdown","2daec83c":"markdown","302e02e2":"markdown"},"source":{"11631c99":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","90b9a37f":"data= pd.read_csv('..\/input\/Iris.csv')\n","7d0ae0c9":"print(data.describe())","19b10bdd":"#split to data , because kmeans about unlabeled data so unsupervised learning.\nX=data.iloc[ : ,1:-1].values\nprint(X)","e7a12ee9":"#Firstly import Kmeans and \u0131 selected n_cluster=5 if u want other value\n#X data fitting,and predict from fit X \n#print to clusters centroid\nfrom sklearn.cluster import KMeans\nkmeans =KMeans( n_clusters=5 , init='k-means++')\nkmeans.fit(X)\ny_kmeans=kmeans.predict(X)\nprint(kmeans.cluster_centers_)\ncenters = kmeans.cluster_centers_\n","de80ed55":"#First we're seeing Petal length and Petal width  \n#Black circular for clusters center\nplt.scatter(X[:, 2], X[:, 3],  c=y_kmeans, s=20, cmap='viridis')\nplt.scatter(centers[:, 2], centers[:, 3], c='black', s=100, alpha=0.7);\nplt.xlabel('Petal Length')\nplt.ylabel('Petal width')\nplt.show()","b74c45f9":"#for sepal\nplt.scatter(X[:, 0], X[:, 1],  c=y_kmeans, s=20, cmap='viridis')\nplt.scatter(centers[:,0], centers[:, 1], c='black', s=100, alpha=0.7);\nplt.xlabel('sepal Length')\nplt.ylabel('sepal width')\nplt.show()","d01b5521":"#in this graphic, we are seeing decreasing inertia \nresult=[]\nfor i in  range(1,20):\n    kmeans=KMeans(n_clusters=i , init='k-means++' , random_state=1)\n    kmeans.fit(X)\n    result.append(kmeans.inertia_)\nplt.plot(range (1,20), result)\nplt.show()","bd2e8414":"kmeans1 = pd.DataFrame(X)\nfig = plt.figure()\nax = fig.add_subplot(111)\nscatter = ax.scatter(X[ :,2],X[:,3],c=kmeans1[0],s=50)\nax.set_title('K-Means Clustering')\nax.set_xlabel('Petal Length')\nax.set_ylabel('Sepal Length')\nplt.colorbar(scatter)\nplt.show()\n","ce46d4f9":"#for one cluster\nplt.scatter(X[ : ,2], X[ : ,3], s = 10, c = 'red', label = 'Cluster 1')\n","b489db8b":"#for two cluster\nfrom sklearn.cluster import KMeans\nkmeans =KMeans( n_clusters=2 , init='k-means++')\nkmeans.fit(X)\ny_pred=kmeans.predict(X)\nplt.scatter(X[y_pred == 0,2], X[y_pred == 0, 3], s = 10, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_pred == 1,2], X[y_pred == 1, 3], s = 10, c = 'blue', label = 'Cluster 2')\nplt.scatter(kmeans.cluster_centers_[:, 2], kmeans.cluster_centers_[:, 3], s = 30, c = 'black')\n","5a7693b3":"#for three cluster\nfrom sklearn.cluster import KMeans\nkmeans =KMeans( n_clusters=3 , init='k-means++')\nkmeans.fit(X)\ny_pred=kmeans.predict(X)\nplt.scatter(X[y_pred == 0,2], X[y_pred == 0, 3], s = 10, c = 'red', label = 'Cluster 1')\nplt.scatter(X[y_pred == 1,2], X[y_pred == 1, 3], s = 10, c = 'blue', label = 'Cluster 2')\nplt.scatter(X[y_pred == 2,2], X[y_pred == 2, 3], s = 10, c = 'green', label = 'Cluster 2')\nplt.scatter(kmeans.cluster_centers_[:, 2], kmeans.cluster_centers_[:, 3], s = 30, c = 'black')\n","70491ac4":"in this tutorial, i will write k means algorithm and we will see how can we clusters our data .For example like two clusters,three clusters.We will find clusters center.We will see cluster visualization.","2daec83c":"Firstly \u0131 want to see iris data and some feature .For example like column names or mean,std,min value of data set,max value of data set.","302e02e2":"**CLUSTERS V\u0130SUALIZAT\u0130ON***"}}