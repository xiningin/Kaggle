{"cell_type":{"3e4008b6":"code","861b6526":"code","64bda0cb":"code","ab8ef633":"code","933c157c":"code","c86d2892":"code","88ecab12":"code","6faead3f":"code","7fb196ae":"markdown","94ac5014":"markdown","f6e12255":"markdown"},"source":{"3e4008b6":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","861b6526":"#import dataset\ndf = pd.read_csv('\/kaggle\/input\/league-of-legends-worlds-2021-playin-group-stats\/League of Legends 2021 World Championship Play-In Groups Statistics - Raw Data.csv')","64bda0cb":"#show preview of dataset\ndf.head(n=15)","ab8ef633":"df.info()","933c157c":"#Prepare dataset by dropping any missing values and changing Result's dtype to integers for correlation\ndf.dropna(inplace=True)\ndf.loc[(df.Result == 'L'), 'Result'] = 0\ndf.loc[(df.Result == 'W'), 'Result'] = 1\ndf['Result'] = df['Result'].astype(int)","c86d2892":"#Verify our changes affected the df\ndf['Result']","88ecab12":"#We are omitting Gold Earned and Ward Interactions for now since those are individual stats.\ncorrelations = df[['Dragons For', 'Dragons Against', 'Barons For', 'Barons Against', 'Result']].corr()","6faead3f":"sns.heatmap(correlations, xticklabels = correlations.columns, yticklabels = correlations.columns, annot=True)","7fb196ae":"The stats I plan to analyze are Ward Interactions, Dragons For, Barons For, and Gold Earned. Gold Earned will be analyzed through how it is distributed among a team and if certain roles that have higher gold share correlates to higher win percentage.","94ac5014":"The heatmap shows us that teams that prioritize Baron have a slighter higher winrate.","f6e12255":"Looking into the preview of the dataset, it can be seen that the data is ordered in a way that every 10 rows is a match played in Play-Ins between two teams. For instance, in the first 10 rows, the teams consist of only 'UOL' and 'GS'. Additionally, lane opponents are paired together, with rows 0 and 1 being the top laners, rows 2 and 3 being the players in the jungle position, etc. This can be useful for comparing certain stats against win percentage for a team on a game-by-game basis, or to later summarise for all games played by a team in Play-Ins. It's important to note that some teams played tie-breakers, such as C9 and DFM, so they will have more data."}}