{"cell_type":{"105b0e7e":"code","bcb2f6f3":"code","2fc8e6df":"code","18dd3ba8":"code","24e45fbe":"code","b47ea291":"code","d009d52a":"code","87268551":"code","141f2a6a":"code","c912d43e":"code","51149cf3":"code","d348852a":"code","0c451ff8":"code","0a1a428e":"code","5b3384df":"code","373fbc7f":"code","e0c905e2":"code","005dd32b":"code","3d92a7c0":"code","d565f340":"code","8c947d97":"code","c491fa1e":"markdown","18da7700":"markdown","c41b3a8f":"markdown","0d978261":"markdown","dd889e94":"markdown","da0733d8":"markdown"},"source":{"105b0e7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom datetime import datetime, timedelta\nimport matplotlib.dates as mdates\nimport plotly.graph_objects as go\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning)\nwarnings.filterwarnings(\"ignore\", category=FutureWarning)\n\n\nsns.set(style=\"whitegrid\", color_codes=True)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","bcb2f6f3":"world_data = pd.read_csv('\/kaggle\/input\/covid19-by-country-with-government-response\/covid19_by_country.csv')\nworld_data","2fc8e6df":"world_data['Date'] = pd.to_datetime(world_data['Date'])\nworld_data['active'] = world_data['confirmed'] - world_data['deaths'] - world_data['recoveries']\nworld_data['closed cases'] = world_data['deaths'] + world_data['recoveries']\nworld_data","18dd3ba8":"len(world_data['Country'].unique())","24e45fbe":"world_last_date = pd.DataFrame(world_data.tail(1)['Date']).iloc[0]['Date']\npd.DataFrame(world_data[world_data['Date']==world_last_date].head(10000).groupby(by ='Date').sum()[['confirmed', 'active', 'closed cases', 'deaths', 'recoveries']])","b47ea291":"worlds_data = pd.DataFrame(world_data.groupby(by ='Date').sum()[['confirmed', 'active', 'closed cases', 'deaths', 'recoveries']])\n\nfig, ax=plt.subplots(nrows=1, ncols=2, figsize=(25,7), sharex=True, sharey=True)\n\nax[0].title.set_text('World: closed cases vs confirmed cases vs recovered cases')\nax[0].plot(worlds_data.index, worlds_data['confirmed'], label='confirmed cases')\nax[0].plot(worlds_data.index, worlds_data['active'], label='active cases')\nax[0].plot(worlds_data.index, worlds_data['closed cases'], label='closed cases')\nax[0].xaxis.set_major_locator(mdates.DayLocator(interval=10))\nax[0].xaxis.set_major_formatter(mdates.DateFormatter('%d-%m'))\nax[0].tick_params(labelrotation=25)\nax[0].legend(fontsize='x-large', fancybox=True)\n\nax[1].title.set_text('World: breakdown of closed cases')\nax[1].plot(worlds_data.index, worlds_data['recoveries'], label='recoveries')\nax[1].plot(worlds_data.index, worlds_data['deaths'], label='deaths')\nax[1].xaxis.set_major_locator(mdates.DayLocator(interval=10))\nax[1].xaxis.set_major_formatter(mdates.DateFormatter('%d-%m'))\nax[1].tick_params(rotation=45)\nax[1].legend(fontsize='x-large', fancybox=True)\n\n\nplt.show()","d009d52a":"temp5 = pd.DataFrame(world_data[world_data['Date']==world_last_date].head(10000).groupby(by =['Date', 'Country']).sum()[['confirmed', 'active', 'recoveries', 'deaths', 'closed cases']])\ntemp5 = temp5[temp5['active']==0]\n#temp5\ntemp5 = temp5.reset_index()\nzero_case_countries = list(temp5['Country'].unique())\ncolumns = ['Country', 'confirmed', 'active', 'recoveries', 'deaths', 'closed cases']\n\nfig = go.Figure(data=[go.Table(\n    header=dict(values=list(columns),\n                fill_color='paleturquoise',\n                align='left'),\n    cells=dict(values=[temp5['Country'], temp5['confirmed'], temp5['active'], temp5['recoveries'], temp5['deaths'], temp5['closed cases']],\n               fill_color='white',\n               align='left'))\n])\n\n\nfig.show()\n\n\ntemp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'confirmed', 'active', 'recoveries', 'deaths', 'closed cases']]).sort_values(by='confirmed',ascending=False)\nplt.figure(figsize=(15,7))\nplt.title('Zero active cases countires', fontsize='xx-large')\n\ndata = temp3[temp3['Country'].isin(zero_case_countries)]\n\nax = sns.barplot(data=data, y=data['Country'], x=data['confirmed'], color='orange')\nax = sns.barplot(data=data, y=data['Country'], x=data['closed cases'], color='green')\nax = sns.barplot(data=data, y=data['Country'], x=data['deaths'], color='red')\n\nax.set(xlabel='')\n            \nplt.show()","87268551":"temp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'confirmed', 'active', 'recoveries', 'deaths', 'closed cases']]).sort_values(by='confirmed',ascending=False)\nplt.figure(figsize=(15,7))\nplt.title('Confirmed cases country wise', fontsize='xx-large')\n\ndata=temp3.head(25)\npal = sns.light_palette(\"red\", reverse=True)\n\nax = sns.barplot(data=data, y=data['Country'], x=data['confirmed'], color='orange')\nax = sns.barplot(data=data, y=data['Country'], x=data['closed cases'], color='green')\nax = sns.barplot(data=data, y=data['Country'], x=data['deaths'], color='red')\n\nax.set(xlabel='')\n            \nplt.show()","141f2a6a":"temp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'active']]).sort_values(by='active',ascending=False)\nplt.figure(figsize=(15,7))\nplt.title('Active cases country wise', fontsize='xx-large')\ndata3=temp3.head(25)\npal = sns.light_palette(\"orange\", len(temp3.head(50)), reverse=True)\nrank = data3['active'].argsort().argsort()\nsns.barplot(data=data3, y=data3['Country'], x=data3['active'], palette=np.array(pal[::-1])[rank])\n\nplt.show()","c912d43e":"\ntemp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'recoveries']]).sort_values(by='recoveries',ascending=False)\nplt.figure(figsize=(15,7))\nplt.title('Recoveries country wise', fontsize='xx-large')\ndata3=temp3.head(25)\npal = sns.light_palette(\"green\", len(temp3.head(50)), reverse=True)\nrank = data3['recoveries'].argsort().argsort()\nsns.barplot(data=data3, y=data3['Country'], x=data3['recoveries'], palette=np.array(pal[::-1])[rank])\n\nplt.show()","51149cf3":"temp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'deaths']]).sort_values(by='deaths',ascending=False)\nplt.figure(figsize=(15,7))\nplt.title('Deaths country wise', fontsize='xx-large')\ndata3=temp3.head(25)\npal = sns.light_palette(\"red\", len(temp3.head(50)), reverse=True)\nrank = data3['deaths'].argsort().argsort()\nsns.barplot(data=data3, y=data3['Country'], x=data3['deaths'], palette=np.array(pal[::-1])[rank])\n\nplt.show()","d348852a":"def plot(country):\n    \n    \n    temp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'confirmed', 'active', 'recoveries', 'deaths', 'closed cases']]).sort_values(by='confirmed',ascending=False)\n    plt.figure(figsize=(25,1))\n    plt.title(country+': current status', fontsize='xx-large')\n\n    data=temp3[temp3['Country']==country]\n    pal = sns.light_palette(\"red\", reverse=True)\n\n    ax = sns.barplot(data=data, y=data['Country'], x=data['confirmed'], color='orange')\n    ax = sns.barplot(data=data, y=data['Country'], x=data['closed cases'], color='green')\n    ax = sns.barplot(data=data, y=data['Country'], x=data['deaths'], color='red')\n\n    ax.set(xlabel='')\n            \n    plt.show()\n    \n    country_data = world_data[(world_data['Country']==country)&(world_data['confirmed']>0)]\n    country_data.set_index(keys='Date', inplace=True)\n    country_data.index = pd.to_datetime(country_data.index)\n    \n    fig, ax=plt.subplots(nrows=1, ncols=2, figsize=(25,7), sharex=True, sharey=True)\n    \n    ax[0].title.set_text(country + ': closed cases vs confirmed cases vs recovered cases')\n    ax[0].plot(country_data.index,country_data['confirmed'], label='confirmed cases')\n    ax[0].plot(country_data.index, country_data['active'], label='active cases')\n    ax[0].plot(country_data.index, country_data['closed cases'], label='closed cases')\n    ax[0].xaxis.set_major_locator(mdates.DayLocator(interval=10))\n    ax[0].xaxis.set_major_formatter(mdates.DateFormatter('%d-%m'))\n    ax[0].tick_params(labelrotation=45)\n    ax[0].legend(fontsize='xx-large', fancybox=True)\n    \n    \n    ax[1].title.set_text(country + ': breakdown of closed cases')\n    ax[1].plot(country_data.index, country_data['recoveries'], label='recoveries')\n    ax[1].plot(country_data.index, country_data['deaths'], label='deaths')\n    ax[1].xaxis.set_major_locator(mdates.DayLocator(interval=10))\n    ax[1].xaxis.set_major_formatter(mdates.DateFormatter('%d-%m'))\n    ax[1].tick_params(labelrotation=45)\n    ax[1].legend(fontsize='xx-large', fancybox=True)\n    \n    plt.show()\n","0c451ff8":"plot('India')","0a1a428e":"india_data = pd.read_csv('\/kaggle\/input\/covid19-corona-virus-india-dataset\/complete.csv')","5b3384df":"last_date = pd.DataFrame(india_data.tail(1)['Date']).iloc[0]['Date']\n#pd.DataFrame(india_data[india_data['Date']==last_date].head(100).groupby(by = 'Date').sum()['Total Confirmed cases'])","373fbc7f":"temp2 = pd.DataFrame(india_data[india_data['Date']==last_date][['Name of State \/ UT', 'Total Confirmed cases']]).sort_values(by='Total Confirmed cases',ascending=False)\nplt.figure(figsize=(15,7))\nsns.barplot(data=temp2.head(20), x='Total Confirmed cases', y='Name of State \/ UT')\nplt.show()","e0c905e2":"india_data.set_index(keys='Date', inplace=True)\nindia_data.index = pd.to_datetime(india_data.index)","005dd32b":"fig, ax=plt.subplots(figsize=(20,7))\nplt.title('Statewise daily rise in confirmed cases', fontsize='xx-large')\n\nfor state in list(temp2.head(10)['Name of State \/ UT']):\n    ax.plot(india_data[(india_data['Name of State \/ UT']==state)].index, india_data.loc[(india_data['Name of State \/ UT']==state)]['Total Confirmed cases'], label=state)\n\nax.xaxis.set_major_locator(mdates.DayLocator(interval=3))\nax.xaxis.set_major_formatter(mdates.DateFormatter('%d-%m-%y'))\nplt.xticks(rotation=45)\n#plt.legend(fontsize='large', fancybox=True)\nplt.show()","3d92a7c0":"patients_data = pd.read_csv('\/kaggle\/input\/covid19-corona-virus-india-dataset\/patients_data.csv')\npatients_data.head()","d565f340":"#status_change_days = patients_data[['date_announced','status_change_date','current_status']]#\n#status_change_days['date_announced'] = status_change_days['date_announced'].astype('str')\n#status_change_days.dropna(axis=0, how='any', inplace=True)\n#status_change_days['status_change_date'] = status_change_days['status_change_date'].apply(lambda _: datetime.strptime(_,'%d\/%m\/%Y'))\n#status_change_days['date_announced'] = status_change_days['date_announced'].apply(lambda _: datetime.strptime(_,'%d\/%m\/%Y'))\n#status_change_days['diff_days'] = (status_change_days['status_change_date'] - status_change_days['date_announced'])\/np.timedelta64(1,'D')\n#plt.figure(figsize=(15,7))\n#print('Records available: ', status_change_days.shape[0])\n#sns.violinplot(data=status_change_days[status_change_days['current_status']!='Hospitalised'],x='current_status', y='diff_days')\n#plt.show()","8c947d97":"temp3 = pd.DataFrame(world_data[world_data['Date']==world_last_date][['Country', 'confirmed']]).sort_values(by='confirmed',ascending=False)\ncountries = list(temp3['Country'].unique())\n\nfor country in countries:\n    plot(country)","c491fa1e":"# Note\n\nSome data will conflict with each other as I have used various data sources for this notebook. This does not mean that the data is false. To all those who has made an effort to clean and provide this data, KUDOS TO YOU!\n\n\nI would appreciate if comments are in form of what I have done right and what I should improve on.","18da7700":"# Worldwide analysis","c41b3a8f":"# Plots for all countries","0d978261":"Total confirmed cases in India:","dd889e94":"# India analysis","da0733d8":"Plot function taking country as a parameter."}}