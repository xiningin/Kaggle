{"cell_type":{"1284c9bf":"code","1f022ee5":"code","16c88972":"code","780fbc27":"code","6c112eec":"code","acaae223":"code","93c459a7":"code","b4e46709":"code","00ef182e":"code","80b368e0":"code","32bdb9ac":"code","ba9327b9":"code","5fa48cc4":"code","ab616733":"code","91b7edc8":"code","9aa69fdc":"code","8a2a272f":"code","d9e0f6da":"code","48e03e95":"code","6e64a1a3":"code","f441474b":"code","c8643040":"code","d6f9ac47":"code","f3f3350e":"code","d5e39700":"code","67f978d5":"code","b43a6dce":"code","38799587":"code","2a09f483":"code","600185ba":"code","d556be99":"code","59c1db65":"code","40f4782f":"code","a472e47c":"code","fbe874b2":"code","6205e132":"code","649a3254":"code","74401094":"code","c5857e5f":"code","d8a8afbf":"code","db02ced4":"code","918d1be1":"code","17cbccb9":"code","1e3c1553":"code","4772facd":"code","a28bcb60":"code","479f2305":"code","16fa7c27":"code","3adf9671":"code","bb7b8649":"code","13514bf3":"code","59b9e09c":"code","09219131":"code","3697f3d6":"code","7661eee5":"code","a17c83e2":"code","131b3a86":"code","93946c73":"code","d7501e52":"code","e494162a":"code","355ffaf3":"code","b8daf39c":"code","5659a8b0":"code","9e2d99e6":"code","1c447f1d":"code","c7425c46":"code","aefcb264":"code","29574d4b":"code","607ff562":"code","06c55f5a":"code","1d1a12a1":"code","44977461":"code","db9bc8f3":"code","750db6e1":"code","21849434":"code","1c8feaf0":"code","5e1d2080":"code","6968b826":"code","85689218":"code","3d04a76e":"code","78a1d521":"code","760ed9a0":"code","2fd7ff67":"code","da667ef8":"code","66154222":"code","a6fa3dfd":"code","0dadb79a":"code","91541f37":"code","ba0baf55":"code","23b22e1c":"code","70fe7c75":"code","4321140d":"code","0a873be1":"code","409b962e":"code","af7dd6a8":"code","30829a42":"code","d27c95e4":"code","42a3ab47":"code","96fbd223":"code","cf1aeff4":"code","84b6a4b5":"code","560fcce0":"code","6a252bbf":"code","fd6f8879":"code","e903ad5a":"code","ba471b89":"code","5b07339c":"code","39a8ff71":"code","7cc54c96":"code","efec471f":"code","3c30114d":"code","c6017186":"code","7451b2d3":"code","3af8622d":"code","4c2ca297":"code","360eeed9":"code","21728b90":"code","78e1cd9b":"code","9ac97e40":"code","23f2213b":"code","effebc66":"code","1d07706f":"code","5850446d":"code","ef8bffec":"code","2e10297f":"code","b526b31c":"code","47a931fa":"code","84ef43ae":"code","8a1df5dc":"code","0d55939d":"code","08a6a309":"code","9dac3e6d":"code","cbac8fa3":"code","aa179b02":"code","99f134e2":"code","20ed6856":"code","b71bb2b4":"code","6ca859b5":"code","57bd7398":"code","bd54724e":"code","dfaa0131":"code","341d1813":"code","44163663":"code","c9582bb9":"code","02a8aea2":"code","5388aa52":"code","016ecfe9":"code","6ce9e112":"code","e522c971":"code","c6728af2":"code","39796e2f":"code","44bf8519":"code","de4ab979":"code","65692e75":"code","136b1dc0":"code","e26f62e4":"code","1c20fc0f":"code","55a36cdc":"code","9ff66c45":"code","8f4a6e4f":"code","ed0a08c2":"code","1e4c392a":"code","94ece1f4":"code","2fad6772":"code","061aedfc":"code","b47fc47a":"code","7d97fc8b":"code","5982d440":"code","ac4406a9":"code","72f141fd":"code","3dfadda5":"code","4f3ffd78":"code","1ebe88b0":"code","99789294":"code","e77c018b":"code","c7dae99e":"code","155ffeb5":"code","38d042c5":"code","c34fd1e7":"code","a93838d7":"code","d31ce9f3":"code","1075bdd5":"code","87dabab3":"code","5065be44":"code","5e1be2c2":"code","a14724d5":"code","ac5e3c00":"code","ea211a0e":"code","e61b0113":"code","92e2c722":"code","37f1bab3":"code","a8f13f47":"code","08c2bef7":"code","ef6f8092":"code","1cd4b80c":"code","b5403e83":"code","d00b951a":"code","2f6f7b79":"code","c5702749":"code","588453db":"code","7145956f":"code","87351554":"code","8ca98fe3":"code","c9e8ed6d":"code","6cef1c80":"code","49cd1062":"code","b343ca74":"code","23d40259":"code","0da862c3":"code","0db532d0":"code","255fa133":"code","b604c66a":"code","f5427834":"code","b88328c6":"code","19af9643":"code","c2afedec":"code","bbbfe44b":"code","1dc9bad7":"code","1fb72f8e":"code","e5473fe3":"code","edc923f9":"code","831f9caa":"code","235f4831":"code","68481dae":"code","a38331dd":"code","2035b85c":"code","e1c2902d":"markdown","c51ac912":"markdown","980a203a":"markdown","d6ecc90a":"markdown","8617dc7f":"markdown","c7a46cf3":"markdown","0bf752f5":"markdown","f95471ed":"markdown","0843af2a":"markdown","92e7f500":"markdown","204712ee":"markdown","28186df1":"markdown","af9ef23b":"markdown","7cf10ff9":"markdown","eed5ab73":"markdown","19647115":"markdown","72f44223":"markdown","2b6f8da9":"markdown","858fb066":"markdown","130e51da":"markdown","7617c6a8":"markdown","f8135314":"markdown","72aeb8da":"markdown","cb4b2757":"markdown","02d80428":"markdown","6fe36232":"markdown","b4c518d6":"markdown","d25007b7":"markdown","c3ff60dc":"markdown","b73acbbe":"markdown","92d524e3":"markdown","c771aabb":"markdown","a0ce591c":"markdown","8e09cb94":"markdown","cd85692a":"markdown","48b43ebe":"markdown","e44890ba":"markdown","c275ac62":"markdown","5abff57c":"markdown","a923612c":"markdown","2c129bbc":"markdown","58509529":"markdown","ab21bc2b":"markdown","6d61d8fa":"markdown","11b0f9b5":"markdown","8c7e0db8":"markdown","41dc2a5c":"markdown","716b37bd":"markdown","8bf6776c":"markdown","e350c1e4":"markdown","03edf598":"markdown","4d110ad6":"markdown","1077a3cd":"markdown","b429335f":"markdown","53f71a00":"markdown","823c3416":"markdown","420a4574":"markdown","5cd7078d":"markdown","78db0a51":"markdown","b50b0870":"markdown","e79dd28a":"markdown","749c909c":"markdown","0fd2f15f":"markdown","433d730b":"markdown","fee16441":"markdown","c9298789":"markdown","7cc4a1cf":"markdown","b7b08862":"markdown","99494722":"markdown","513e9726":"markdown","99402e9a":"markdown","ee6825fc":"markdown","6fd56f25":"markdown","a52ee36f":"markdown","0cde848d":"markdown","3365ae30":"markdown","57de4494":"markdown","407aa452":"markdown","eb0a1f96":"markdown","dd6fed82":"markdown","62bc0e05":"markdown","5dbf7a5f":"markdown","24a6f297":"markdown","76114487":"markdown","0dc8e91a":"markdown","ba000c7f":"markdown","f47a139e":"markdown","e83f93c5":"markdown","a9cd144a":"markdown","8b098b4c":"markdown","b2401094":"markdown","160b4b79":"markdown","1fbe3c97":"markdown","a1af1769":"markdown","9ee9a32a":"markdown","ff2fb81f":"markdown","d1512176":"markdown","4cb8a834":"markdown","1dce62b4":"markdown","e5c04b76":"markdown","de7fb006":"markdown","91be4f9e":"markdown","2914c921":"markdown","9170065f":"markdown","caae4f07":"markdown"},"source":{"1284c9bf":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport pprint\nfrom sklearn.linear_model import LinearRegression","1f022ee5":"from pydrive.auth import GoogleAuth\nfrom pydrive.drive import GoogleDrive\nfrom google.colab import auth\nfrom oauth2client.client import GoogleCredentials","16c88972":"from google.colab import drive\ndrive.mount('\/content\/drive')","780fbc27":"data=pd.read_csv(\"\/content\/drive\/MyDrive\/4th Sem Project\/Data\/GlobalLandTemperaturesByCountry.csv\",parse_dates=['dt'])\ndata.head(10)","6c112eec":"'''data=pd.read_csv(\"\/content\/drive\/MyDrive\/Datasets\/Climate Change\/Dataset 1\/GlobalLandTemperaturesByCountry.csv\",parse_dates=['dt'])\ndata.head(10)'''","acaae223":"temp=data","93c459a7":"temp.isna().sum()","b4e46709":"data.nunique()","00ef182e":"data['Year']=pd.DatetimeIndex(data['dt']).year","80b368e0":"data.head(5)","32bdb9ac":"data.loc[:,'Country']=data.select_dtypes(['object']).apply(lambda x: x.astype('category'))","ba9327b9":"data.info()","5fa48cc4":"data.isnull().sum()","ab616733":"data=data.dropna(axis=0,how='any')","91b7edc8":"data.shape","9aa69fdc":"data.nunique()","8a2a272f":"countries=np.unique(data['Country'])","d9e0f6da":"years=list(range(np.unique(data['Year']).min(),np.unique(data['Year']).max()+1))","48e03e95":"summary_df_avgtmp=data.groupby(['Country','Year']).agg({'AverageTemperature':'median'}).reset_index()\nsummary_df_avgtmp.head()","6e64a1a3":"temp_summary_df=summary_df_avgtmp","f441474b":"summary_df_avgtmp.isna().sum()","c8643040":"summary_df_avgtmp.shape","d6f9ac47":"yearwise_na=summary_df_avgtmp[['Country','Year']][summary_df_avgtmp.AverageTemperature.isna()]","f3f3350e":"yearwise_na.head()","d5e39700":"countrywisena=summary_df_avgtmp.loc[:,['AverageTemperature']].isnull().groupby(summary_df_avgtmp.Country).sum().reset_index()\ncountrywisena.head()","67f978d5":"count_real=pd.read_excel('\/content\/drive\/MyDrive\/4th Sem Project\/Some_necessary_files\/ActualCountriesNames.xlsx')\ncount_real.head()","b43a6dce":"continentwcountry=pd.read_excel('\/content\/drive\/MyDrive\/4th Sem Project\/Some_necessary_files\/Continentwisecountry.xlsx')\ncontinentwcountry.head()","38799587":"extra_count1=[]\nfor country in countries:\n  if country not in list(continentwcountry['Country']):\n    extra_count1.append(country)\n\npprint.pprint(extra_count1)","2a09f483":"extra_count=[]\nfor country in continentwcountry['Country']:\n  if country not in countries:\n    extra_count.append(country)\npprint.pprint(extra_count)","600185ba":"countries_asia=list(continentwcountry['Country'][continentwcountry['Continent']=='Asia'])\ncountries_africa=list(continentwcountry['Country'][continentwcountry['Continent']=='Africa'])\ncountries_samerica=list(continentwcountry['Country'][continentwcountry['Continent']=='South America'])\ncountries_namerica=list(continentwcountry['Country'][continentwcountry['Continent']=='North America'])\ncountries_antartica=list(continentwcountry['Country'][continentwcountry['Continent']=='Antarctica'])\ncountries_europe=list(continentwcountry['Country'][continentwcountry['Continent']=='Europe'])\ncountries_oceania=list(continentwcountry['Country'][continentwcountry['Continent']=='Oceania'])","d556be99":"data_asia=temp[temp.Country.isin(countries_asia)]\ndata_africa=temp[temp.Country.isin(countries_africa)]\ndata_samerica=temp[temp.Country.isin(countries_samerica)]\ndata_namerica=temp[temp.Country.isin(countries_namerica)]\ndata_europe=temp[temp.Country.isin(countries_europe)]\ndata_oceania=temp[temp.Country.isin(countries_oceania)]\ndata_antarctica=temp[temp.Country.isin(countries_antartica)]","59c1db65":"sample_asia=pd.DataFrame(list(np.unique(data_asia['Country']))).sample(10,random_state=2)\nsample_asia=list(sample_asia[0])\nsample_africa=pd.DataFrame(list(np.unique(data_africa['Country']))).sample(10,random_state=2)\nsample_africa=list(sample_africa[0])\nsample_samerica=pd.DataFrame(list(np.unique(data_samerica['Country']))).sample(5,random_state=0)\nsample_samerica=list(sample_samerica[0])\nsample_namerica=pd.DataFrame(list(np.unique(data_namerica['Country']))).sample(10,random_state=3)\nsample_namerica=list(sample_namerica[0])\nsample_oceania=pd.DataFrame(list(np.unique(data_oceania['Country']))).sample(5,random_state=0)\nsample_oceania=list(sample_oceania[0])\nsample_europe=pd.DataFrame(list(np.unique(data_europe['Country']))).sample(10,random_state=0)\nsample_europe=list(sample_europe[0])","40f4782f":"sampledata_asia=data_asia[data_asia.Country.isin(sample_asia)]\nsampledata_africa=data_africa[data_africa.Country.isin(sample_africa)]\nsampledata_namerica=data_namerica[data_namerica.Country.isin(sample_namerica)]\nsampledata_samerica=data_samerica[data_samerica.Country.isin(sample_samerica)]\nsampledata_oceania=data_oceania[data_oceania.Country.isin(sample_oceania)]\nsampledata_europe=data_europe[data_europe.Country.isin(sample_europe)]","a472e47c":"pprint.pprint(sample_asia)","fbe874b2":"data_tajikistan=sampledata_asia[sampledata_asia['Country']=='Tajikistan']\ndata_vietnam=sampledata_asia[sampledata_asia['Country']=='Vietnam']\ndata_lebanon=sampledata_asia[sampledata_asia['Country']=='Lebanon']\ndata_afghanistan=sampledata_asia[sampledata_asia['Country']=='Afghanistan']\ndata_india=sampledata_asia[sampledata_asia['Country']=='India']\ndata_oman=sampledata_asia[sampledata_asia['Country']=='Oman']\ndata_israel=sampledata_asia[sampledata_asia['Country']=='Israel']\ndata_uae=sampledata_asia[sampledata_asia['Country']=='United Arab Emirates']\ndata_laos=sampledata_asia[sampledata_asia['Country']=='Laos']\ndata_christmas=sampledata_asia[sampledata_asia['Country']=='Christmas Island']","6205e132":"data_india","649a3254":"slicedata_asia={'Tajikistan':data_tajikistan,'India':data_india,'Vietnam':data_vietnam,\\\n                'Lebanon':data_lebanon,'Afghanistan':data_afghanistan,'Oman':data_oman,\\\n                'Israel':data_israel,'United Arab Emirates':data_uae,'Christmas Island':data_christmas,'Laos':data_laos}","74401094":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_asia:\n  #the first data of the country\n  \n  df_date=sampledata_asia.loc[sampledata_asia[sampledata_asia['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_asia[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_asia[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_asia[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_asia[country].shape)","c5857e5f":"slicedata_asia['Oman']","d8a8afbf":"pprint.pprint(sample_africa)","db02ced4":"data_Mozambique=sampledata_africa[sampledata_africa['Country']=='Mozambique']\ndata_Togo=sampledata_africa[sampledata_africa['Country']=='Togo']\ndata_WesternSahara=sampledata_africa[sampledata_africa['Country']=='Western Sahara']\ndata_Mauritius=sampledata_africa[sampledata_africa['Country']=='Mauritius']\ndata_Tunisia=sampledata_africa[sampledata_africa['Country']=='Tunisia']\ndata_Libya=sampledata_africa[sampledata_africa['Country']=='Libya']\ndata_Algeria=sampledata_africa[sampledata_africa['Country']=='Algeria']\ndata_Malawi=sampledata_africa[sampledata_africa['Country']=='Malawi']\ndata_Angola=sampledata_africa[sampledata_africa['Country']=='Angola']\ndata_Senegal=sampledata_africa[sampledata_africa['Country']=='Senegal']","918d1be1":"slicedata_africa={'Mozambique':data_Mozambique,'Togo':data_Togo,'Western Sahara':data_WesternSahara,\\\n                'Mauritius':data_Mauritius,'Tunisia':data_Tunisia,'Libya':data_Libya,\\\n                'Algeria':data_Algeria,'Malawi':data_Malawi,'Angola':data_Angola,'Senegal':data_Senegal}","17cbccb9":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_africa:\n  #the first data of the country\n  \n  df_date=sampledata_africa.loc[sampledata_africa[sampledata_africa['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_africa[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_africa[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_africa[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_africa[country].shape)","1e3c1553":"slicedata_africa['Algeria']","4772facd":"pprint.pprint(sample_namerica)","a28bcb60":"data_PuertoRico=sampledata_namerica[sampledata_namerica['Country']=='Puerto Rico']\ndata_UnitedStates=sampledata_namerica[sampledata_namerica['Country']=='United States']\ndata_Montserrat=sampledata_namerica[sampledata_namerica['Country']=='Montserrat']\ndata_Mexico=sampledata_namerica[sampledata_namerica['Country']=='Mexico']\ndata_Belize=sampledata_namerica[sampledata_namerica['Country']=='Belize']\ndata_Canada=sampledata_namerica[sampledata_namerica['Country']=='Canada']\ndata_BakerIsland=sampledata_namerica[sampledata_namerica['Country']=='Baker Island']\ndata_SaintBarth\u00e9lemy=sampledata_namerica[sampledata_namerica['Country']=='Saint Barth\u00e9lemy']\ndata_Trinidad=sampledata_namerica[sampledata_namerica['Country']=='Trinidad And Tobago']\ndata_ElSalvador=sampledata_namerica[sampledata_namerica['Country']=='El Salvador']","479f2305":"slicedata_namerica={'Puerto Rico':data_PuertoRico,'United States':data_UnitedStates,'Montserrat':data_Montserrat,\\\n                'Mexico':data_Mexico,'Belize':data_Belize,'Canada':data_Canada,\\\n                'Baker Island':data_BakerIsland,'Saint Barth\u00e9lemy':data_SaintBarth\u00e9lemy,'Trinidad And Tobago':data_Trinidad,'El Salvador':data_ElSalvador}","16fa7c27":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_namerica:\n  #the first data of the country\n  \n  df_date=sampledata_namerica.loc[sampledata_namerica[sampledata_namerica['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_namerica[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_namerica[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_namerica[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_namerica[country].shape)","3adf9671":"slicedata_namerica['El Salvador']","bb7b8649":"pprint.pprint(sample_europe)","13514bf3":"data_Slovakia=sampledata_europe[sampledata_europe['Country']=='Slovakia']\ndata_Moldova=sampledata_europe[sampledata_europe['Country']=='Moldova']\ndata_Portugal=sampledata_europe[sampledata_europe['Country']=='Portugal']\ndata_Monaco=sampledata_europe[sampledata_europe['Country']=='Monaco']\ndata_Estonia=sampledata_europe[sampledata_europe['Country']=='Estonia']\ndata_Austria=sampledata_europe[sampledata_europe['Country']=='Austria']\ndata_Malta=sampledata_europe[sampledata_europe['Country']=='Malta']\ndata_SanMarino=sampledata_europe[sampledata_europe['Country']=='San Marino']\ndata_Luxembourg=sampledata_europe[sampledata_europe['Country']=='Luxembourg']\ndata_Latvia=sampledata_europe[sampledata_europe['Country']=='Latvia']","59b9e09c":"slicedata_europe={'Slovakia':data_Slovakia,'Moldova':data_Moldova,'Portugal':data_Portugal,\\\n                'Monaco':data_Monaco,'Estonia':data_Estonia,'Austria':data_Austria,\\\n                'Malta':data_Malta,'San Marino':data_SanMarino,'Luxembourg':data_Luxembourg,'Latvia':data_Latvia}","09219131":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_europe:\n  #the first data of the country\n  \n  df_date=sampledata_europe.loc[sampledata_europe[sampledata_europe['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_europe[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_europe[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_europe[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_europe[country].shape)","3697f3d6":"slicedata_europe['Portugal']","7661eee5":"pprint.pprint(sample_samerica)","a17c83e2":"data_Bolivia=sampledata_samerica[sampledata_samerica['Country']=='Bolivia']\ndata_FalklandIslands=sampledata_samerica[sampledata_samerica['Country']=='Falkland Islands (Islas Malvinas)']\ndata_guyana=sampledata_samerica[sampledata_samerica['Country']=='Guyana']\ndata_paraguay=sampledata_samerica[sampledata_samerica['Country']=='Paraguay']\ndata_Venezuela=sampledata_samerica[sampledata_samerica['Country']=='Venezuela']","131b3a86":"slicedata_samerica={'Bolivia':data_Bolivia,'Falkland Islands (Islas Malvinas)':data_FalklandIslands,'Guyana':data_guyana,\\\n                'Paraguay':data_paraguay,'Venezuela':data_Venezuela}","93946c73":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_samerica:\n  #the first data of the country\n  \n  df_date=sampledata_samerica.loc[sampledata_samerica[sampledata_samerica['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_samerica[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_samerica[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_samerica[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_samerica[country].shape)","d7501e52":"pprint.pprint(sample_oceania)","e494162a":"data_australia=sampledata_oceania[sampledata_oceania['Country']=='Australia']\ndata_kingman=sampledata_oceania[sampledata_oceania['Country']=='Kingman Reef']\ndata_caledonia=sampledata_oceania[sampledata_oceania['Country']=='New Caledonia']\ndata_newzealand=sampledata_oceania[sampledata_oceania['Country']=='New Zealand']\ndata_papanew=sampledata_oceania[sampledata_oceania['Country']=='Papua New Guinea']","355ffaf3":"slicedata_oceania={'Australia':data_australia,'Kingman Reef':data_kingman,'New Caledonia':data_caledonia,\\\n                'New Zealand':data_newzealand,'Papua New Guinea':data_papanew}","b8daf39c":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in sample_oceania:\n  #the first data of the country\n  \n  df_date=sampledata_oceania.loc[sampledata_oceania[sampledata_oceania['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_oceania[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_oceania[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_oceania[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_oceania[country].shape)","5659a8b0":"pprint.pprint(np.unique(data_antarctica['Country']))","9e2d99e6":"data_antar=data_antarctica[data_antarctica['Country']=='Antarctica']\ndata_frenchsouthern=data_antarctica[data_antarctica['Country']=='French Southern And Antarctic Lands']\ndata_heard=data_antarctica[data_antarctica['Country']=='Heard Island And Mcdonald Islands']","1c447f1d":"slicedata_antarctica={'Antarctica':data_antar,'French Southern And Antarctic Lands':data_frenchsouthern,'Heard Island And Mcdonald Islands':data_heard}","c7425c46":"ini_date=pd.to_datetime(['1743-11-01'])\nfor country in slicedata_antarctica.keys():\n  #the first data of the country\n  \n  df_date=data_antarctica.loc[data_antarctica[data_antarctica['Country']==country].index[0],'dt']\n  \n  #difference of months between 1743-11-1 and the first date\n\n  diff=((df_date.year-ini_date.year)*12+(df_date.month-ini_date.month))[0]\n  print(slicedata_antarctica[country].shape)  \n  #creating a new dataframe containing the missing dates\n\n  new_df=pd.DataFrame(pd.Series(pd.date_range(start='1743-11-1',periods=diff,freq='MS')))\n  new_df.rename(columns={0:'dt'},inplace=True)\n  new_df['AverageTemperature']=np.nan\n  new_df['AverageTemperatureUncertainty']=np.nan\n  new_df['Country']=country\n  new_df['Year']=np.nan\n  new_df['Encode']=np.nan\n\n  new_df=new_df.append(slicedata_antarctica[country],ignore_index=True)\n  new_df['Encode']=range(3239)\n  slicedata_antarctica[country]=new_df\n\n  print(country+' '+str(diff))\n  print(slicedata_antarctica[country].shape)","aefcb264":"slicedata_antarctica['French Southern And Antarctic Lands']","29574d4b":"pprint.pprint(sample_asia)","607ff562":"slicedata_asia_nona={}\nfor country in sample_asia:\n  slicedata_asia_nona[country]=slicedata_asia[country].dropna(how='any')","06c55f5a":"x1=np.array(slicedata_asia_nona['Tajikistan']['Encode']).reshape(-1,1)\ny1=np.array(slicedata_asia_nona['Tajikistan']['AverageTemperature'])\nreg1=LinearRegression()\nreg1.fit(x1,y1)","1d1a12a1":"plt.scatter(x1,y1,color='red',alpha=0.05)\nplt.plot(x1,reg1.predict(x1),color='blue')\nplt.show()","44977461":"x2=np.array(slicedata_asia_nona['India']['Encode']).reshape(-1,1)\ny2=np.array(slicedata_asia_nona['India']['AverageTemperature'])\nreg2=LinearRegression()\nreg2.fit(x2,y2)","db9bc8f3":"plt.scatter(x2,y2,color='red',alpha=0.05)\nplt.plot(x2,reg2.predict(x2),color='blue')\nplt.show()","750db6e1":"x3=np.array(slicedata_asia_nona['Vietnam']['Encode']).reshape(-1,1)\ny3=np.array(slicedata_asia_nona['Vietnam']['AverageTemperature'])\nreg3=LinearRegression()\nreg3.fit(x3,y3) ","21849434":"plt.scatter(x3,y3,color='red',alpha=0.05)\nplt.plot(x3,reg3.predict(x3),color='blue')\nplt.show()","1c8feaf0":"x4=np.array(slicedata_asia_nona['Lebanon']['Encode']).reshape(-1,1)\ny4=np.array(slicedata_asia_nona['Lebanon']['AverageTemperature'])\nreg4=LinearRegression()\nreg4.fit(x4,y4)","5e1d2080":"plt.scatter(x4,y4,color='red',alpha=0.05)\nplt.plot(x4,reg4.predict(x4),color='blue')\nplt.show()","6968b826":"x5=np.array(slicedata_asia_nona['Afghanistan']['Encode']).reshape(-1,1)\ny5=np.array(slicedata_asia_nona['Afghanistan']['AverageTemperature'])\nreg5=LinearRegression()\nreg5.fit(x5,y5)","85689218":"plt.scatter(x5,y5,color='red',alpha=0.05)\nplt.plot(x5,reg5.predict(x5),color='blue')\nplt.show()","3d04a76e":"x6=np.array(slicedata_asia_nona['Oman']['Encode']).reshape(-1,1)\ny6=np.array(slicedata_asia_nona['Oman']['AverageTemperature'])\nreg6=LinearRegression()\nreg6.fit(x6,y6)","78a1d521":"plt.scatter(x6,y6,color='red',alpha=0.05)\nplt.plot(x6,reg6.predict(x6),color='blue')\nplt.show()","760ed9a0":"x7=np.array(slicedata_asia_nona['Christmas Island']['Encode']).reshape(-1,1)\ny7=np.array(slicedata_asia_nona['Christmas Island']['AverageTemperature'])\nreg7=LinearRegression()\nreg7.fit(x7,y7)","2fd7ff67":"plt.scatter(x7,y7,color='red',alpha=0.05)\nplt.plot(x7,reg7.predict(x7),color='blue')\nplt.show()","da667ef8":"x8=np.array(slicedata_asia_nona['Laos']['Encode']).reshape(-1,1)\ny8=np.array(slicedata_asia_nona['Laos']['AverageTemperature'])\nreg8=LinearRegression()\nreg8.fit(x8,y8)","66154222":"plt.scatter(x8,y8,color='red',alpha=0.05)\nplt.plot(x8,reg8.predict(x8),color='blue')\nplt.show()","a6fa3dfd":"x9=np.array(slicedata_asia_nona['Israel']['Encode']).reshape(-1,1)\ny9=np.array(slicedata_asia_nona['Israel']['AverageTemperature'])\nreg9=LinearRegression()\nreg9.fit(x9,y9)","0dadb79a":"plt.scatter(x9,y9,color='red',alpha=0.05)\nplt.plot(x9,reg9.predict(x9),color='blue')\nplt.show()","91541f37":"x10=np.array(slicedata_asia_nona['United Arab Emirates']['Encode']).reshape(-1,1)\ny10=np.array(slicedata_asia_nona['United Arab Emirates']['AverageTemperature'])\nreg10=LinearRegression()\nreg10.fit(x10,y10)","ba0baf55":"plt.scatter(x10,y10,color='red',alpha=0.05)\nplt.plot(x10,reg10.predict(x10),color='blue')\nplt.show()","23b22e1c":"reg_list=[reg1,reg2,reg3,reg4,reg5,reg6,reg7,reg8,reg9,reg10]\n\nfor country,reg in zip(sample_asia,reg_list):\n  for i,j in zip(list(slicedata_asia[country]['Encode']),slicedata_asia[country].index):\n    if i not in list(slicedata_asia_nona[country]['Encode']):\n      slicedata_asia[country].loc[j,'AverageTemperature']=reg.predict([[i]])","70fe7c75":"pprint.pprint(sample_africa)","4321140d":"slicedata_africa_nona={}\nfor country in sample_africa:\n  slicedata_africa_nona[country]=slicedata_africa[country].dropna(how='any')","0a873be1":"x11=np.array(slicedata_africa_nona['Mozambique']['Encode']).reshape(-1,1)\ny11=np.array(slicedata_africa_nona['Mozambique']['AverageTemperature'])\nreg11=LinearRegression()\nreg11.fit(x11,y11)","409b962e":"plt.scatter(x11,y11,color='red',alpha=0.05)\nplt.plot(x11,reg11.predict(x11),color='blue')\nplt.show()","af7dd6a8":"x12=np.array(slicedata_africa_nona['Togo']['Encode']).reshape(-1,1)\ny12=np.array(slicedata_africa_nona['Togo']['AverageTemperature'])\nreg12=LinearRegression()\nreg12.fit(x12,y12)","30829a42":"plt.scatter(x12,y12,color='red',alpha=0.05)\nplt.plot(x12,reg12.predict(x12),color='blue')\nplt.show()","d27c95e4":"x13=np.array(slicedata_africa_nona['Western Sahara']['Encode']).reshape(-1,1)\ny13=np.array(slicedata_africa_nona['Western Sahara']['AverageTemperature'])\nreg13=LinearRegression()\nreg13.fit(x13,y13)","42a3ab47":"plt.scatter(x13,y13,color='red',alpha=0.05)\nplt.plot(x13,reg13.predict(x13),color='blue')\nplt.show()","96fbd223":"x14=np.array(slicedata_africa_nona['Mauritius']['Encode']).reshape(-1,1)\ny14=np.array(slicedata_africa_nona['Mauritius']['AverageTemperature'])\nreg14=LinearRegression()\nreg14.fit(x14,y14)","cf1aeff4":"plt.scatter(x14,y14,color='red',alpha=0.05)\nplt.plot(x14,reg14.predict(x14),color='blue')\nplt.show()","84b6a4b5":"x15=np.array(slicedata_africa_nona['Tunisia']['Encode']).reshape(-1,1)\ny15=np.array(slicedata_africa_nona['Tunisia']['AverageTemperature'])\nreg15=LinearRegression()\nreg15.fit(x15,y15)","560fcce0":"plt.scatter(x15,y15,color='red',alpha=0.05)\nplt.plot(x15,reg15.predict(x15),color='blue')\nplt.show()","6a252bbf":"x16=np.array(slicedata_africa_nona['Libya']['Encode']).reshape(-1,1)\ny16=np.array(slicedata_africa_nona['Libya']['AverageTemperature'])\nreg16=LinearRegression()\nreg16.fit(x16,y16)","fd6f8879":"plt.scatter(x16,y16,color='red',alpha=0.05)\nplt.plot(x16,reg16.predict(x16),color='blue')\nplt.show()","e903ad5a":"x17=np.array(slicedata_africa_nona['Algeria']['Encode']).reshape(-1,1)\ny17=np.array(slicedata_africa_nona['Algeria']['AverageTemperature'])\nreg17=LinearRegression()\nreg17.fit(x17,y17)","ba471b89":"plt.scatter(x17,y17,color='red',alpha=0.05)\nplt.plot(x17,reg17.predict(x17),color='blue')\nplt.show()","5b07339c":"x18=np.array(slicedata_africa_nona['Malawi']['Encode']).reshape(-1,1)\ny18=np.array(slicedata_africa_nona['Malawi']['AverageTemperature'])\nreg18=LinearRegression()\nreg18.fit(x18,y18)","39a8ff71":"plt.scatter(x18,y18,color='red',alpha=0.05)\nplt.plot(x18,reg18.predict(x18),color='blue')\nplt.show()","7cc54c96":"x19=np.array(slicedata_africa_nona['Angola']['Encode']).reshape(-1,1)\ny19=np.array(slicedata_africa_nona['Angola']['AverageTemperature'])\nreg19=LinearRegression()\nreg19.fit(x19,y19)","efec471f":"plt.scatter(x19,y19,color='red',alpha=0.05)\nplt.plot(x19,reg19.predict(x19),color='blue')\nplt.show()","3c30114d":"x20=np.array(slicedata_africa_nona['Senegal']['Encode']).reshape(-1,1)\ny20=np.array(slicedata_africa_nona['Senegal']['AverageTemperature'])\nreg20=LinearRegression()\nreg20.fit(x20,y20)","c6017186":"plt.scatter(x20,y20,color='red',alpha=0.05)\nplt.plot(x20,reg20.predict(x20),color='blue')\nplt.show()","7451b2d3":"reg_list2=[reg11,reg12,reg13,reg14,reg15,reg16,reg17,reg18,reg19,reg20]\n\nfor country,reg in zip(sample_africa,reg_list2):\n  for i,j in zip(list(slicedata_africa[country]['Encode']),slicedata_africa[country].index):\n    if i not in list(slicedata_africa_nona[country]['Encode']):\n      slicedata_africa[country].loc[j,'AverageTemperature']=reg.predict([[i]])","3af8622d":"pprint.pprint(sample_namerica)","4c2ca297":"slicedata_namerica_nona={}\nfor country in sample_namerica:\n  slicedata_namerica_nona[country]=slicedata_namerica[country].dropna(how='any')","360eeed9":"x21=np.array(slicedata_namerica_nona['Puerto Rico']['Encode']).reshape(-1,1)\ny21=np.array(slicedata_namerica_nona['Puerto Rico']['AverageTemperature'])\nreg21=LinearRegression()\nreg21.fit(x21,y21)","21728b90":"plt.scatter(x21,y21,color='red',alpha=0.05)\nplt.plot(x21,reg21.predict(x21),color='blue')\nplt.show()","78e1cd9b":"x22=np.array(slicedata_namerica_nona['United States']['Encode']).reshape(-1,1)\ny22=np.array(slicedata_namerica_nona['United States']['AverageTemperature'])\nreg22=LinearRegression()\nreg22.fit(x22,y22)","9ac97e40":"plt.scatter(x22,y22,color='red',alpha=0.05)\nplt.plot(x22,reg22.predict(x22),color='blue')\nplt.show()","23f2213b":"x23=np.array(slicedata_namerica_nona['Montserrat']['Encode']).reshape(-1,1)\ny23=np.array(slicedata_namerica_nona['Montserrat']['AverageTemperature'])\nreg23=LinearRegression()\nreg23.fit(x23,y23)","effebc66":"plt.scatter(x23,y23,color='red',alpha=0.05)\nplt.plot(x23,reg23.predict(x23),color='blue')\nplt.show()","1d07706f":"x24=np.array(slicedata_namerica_nona['Montserrat']['Encode']).reshape(-1,1)\ny24=np.array(slicedata_namerica_nona['Montserrat']['AverageTemperature'])\nreg24=LinearRegression()\nreg24.fit(x24,y24)","5850446d":"plt.scatter(x24,y24,color='red',alpha=0.05)\nplt.plot(x24,reg24.predict(x24),color='blue')\nplt.show()","ef8bffec":"x25=np.array(slicedata_namerica_nona['Belize']['Encode']).reshape(-1,1)\ny25=np.array(slicedata_namerica_nona['Belize']['AverageTemperature'])\nreg25=LinearRegression()\nreg25.fit(x25,y25)","2e10297f":"plt.scatter(x25,y25,color='red',alpha=0.05)\nplt.plot(x25,reg25.predict(x25),color='blue')\nplt.show()","b526b31c":"x26=np.array(slicedata_namerica_nona['Canada']['Encode']).reshape(-1,1)\ny26=np.array(slicedata_namerica_nona['Canada']['AverageTemperature'])\nreg26=LinearRegression()\nreg26.fit(x26,y26)","47a931fa":"plt.scatter(x26,y26,color='red',alpha=0.05)\nplt.plot(x26,reg26.predict(x26),color='blue')\nplt.show()","84ef43ae":"x27=np.array(slicedata_namerica_nona['Baker Island']['Encode']).reshape(-1,1)\ny27=np.array(slicedata_namerica_nona['Baker Island']['AverageTemperature'])\nreg27=LinearRegression()\nreg27.fit(x27,y27)","8a1df5dc":"plt.scatter(x27,y27,color='red',alpha=0.05)\nplt.plot(x27,reg27.predict(x27),color='blue')\nplt.show()","0d55939d":"x28=np.array(slicedata_namerica_nona['Saint Barth\u00e9lemy']['Encode']).reshape(-1,1)\ny28=np.array(slicedata_namerica_nona['Saint Barth\u00e9lemy']['AverageTemperature'])\nreg28=LinearRegression()\nreg28.fit(x28,y28)","08a6a309":"plt.scatter(x28,y28,color='red',alpha=0.05)\nplt.plot(x28,reg28.predict(x28),color='blue')\nplt.show()","9dac3e6d":"x29=np.array(slicedata_namerica_nona['Trinidad And Tobago']['Encode']).reshape(-1,1)\ny29=np.array(slicedata_namerica_nona['Trinidad And Tobago']['AverageTemperature'])\nreg29=LinearRegression()\nreg29.fit(x29,y29)","cbac8fa3":"plt.scatter(x29,y29,color='red',alpha=0.05)\nplt.plot(x29,reg29.predict(x29),color='blue')\nplt.show()","aa179b02":"x30=np.array(slicedata_namerica_nona['El Salvador']['Encode']).reshape(-1,1)\ny30=np.array(slicedata_namerica_nona['El Salvador']['AverageTemperature'])\nreg30=LinearRegression()\nreg30.fit(x30,y30)","99f134e2":"plt.scatter(x30,y30,color='red',alpha=0.05)\nplt.plot(x30,reg30.predict(x30),color='blue')\nplt.show()","20ed6856":"reg_list3=[reg21,reg22,reg23,reg24,reg25,reg26,reg27,reg28,reg29,reg30]\n\nfor country,reg in zip(sample_namerica,reg_list3):\n  for i,j in zip(list(slicedata_namerica[country]['Encode']),slicedata_namerica[country].index):\n    if i not in list(slicedata_namerica_nona[country]['Encode']):\n      slicedata_namerica[country].loc[j,'AverageTemperature']=reg.predict([[i]])","b71bb2b4":"for country in sample_namerica:\n  print(slicedata_namerica[country]['AverageTemperature'].isna().sum())","6ca859b5":"pprint.pprint(sample_europe)","57bd7398":"slicedata_europe_nona={}\nfor country in sample_europe:\n  slicedata_europe_nona[country]=slicedata_europe[country].dropna(how='any')","bd54724e":"x31=np.array(slicedata_europe_nona['Slovakia']['Encode']).reshape(-1,1)\ny31=np.array(slicedata_europe_nona['Slovakia']['AverageTemperature'])\nreg31=LinearRegression()\nreg31.fit(x31,y31)","dfaa0131":"plt.scatter(x31,y31,color='red',alpha=0.05)\nplt.plot(x31,reg31.predict(x31),color='blue')\nplt.show()","341d1813":"x32=np.array(slicedata_europe_nona['Moldova']['Encode']).reshape(-1,1)\ny32=np.array(slicedata_europe_nona['Moldova']['AverageTemperature'])\nreg32=LinearRegression()\nreg32.fit(x32,y32)","44163663":"plt.scatter(x32,y32,color='red',alpha=0.05)\nplt.plot(x32,reg32.predict(x31),color='blue')\nplt.show()","c9582bb9":"x33=np.array(slicedata_europe_nona['Portugal']['Encode']).reshape(-1,1)\ny33=np.array(slicedata_europe_nona['Portugal']['AverageTemperature'])\nreg33=LinearRegression()\nreg33.fit(x33,y33)","02a8aea2":"plt.scatter(x33,y33,color='red',alpha=0.05)\nplt.plot(x33,reg33.predict(x33),color='blue')\nplt.show()","5388aa52":"x34=np.array(slicedata_europe_nona['Monaco']['Encode']).reshape(-1,1)\ny34=np.array(slicedata_europe_nona['Monaco']['AverageTemperature'])\nreg34=LinearRegression()\nreg34.fit(x34,y34)","016ecfe9":"plt.scatter(x34,y34,color='red',alpha=0.05)\nplt.plot(x34,reg34.predict(x34),color='blue')\nplt.show()","6ce9e112":"x35=np.array(slicedata_europe_nona['Estonia']['Encode']).reshape(-1,1)\ny35=np.array(slicedata_europe_nona['Estonia']['AverageTemperature'])\nreg35=LinearRegression()\nreg35.fit(x35,y35)","e522c971":"plt.scatter(x35,y35,color='red',alpha=0.05)\nplt.plot(x35,reg35.predict(x35),color='blue')\nplt.show()","c6728af2":"x36=np.array(slicedata_europe_nona['Austria']['Encode']).reshape(-1,1)\ny36=np.array(slicedata_europe_nona['Austria']['AverageTemperature'])\nreg36=LinearRegression()\nreg36.fit(x36,y36)","39796e2f":"plt.scatter(x36,y36,color='red',alpha=0.05)\nplt.plot(x36,reg36.predict(x36),color='blue')\nplt.show()","44bf8519":"x37=np.array(slicedata_europe_nona['Malta']['Encode']).reshape(-1,1)\ny37=np.array(slicedata_europe_nona['Malta']['AverageTemperature'])\nreg37=LinearRegression()\nreg37.fit(x37,y37)","de4ab979":"plt.scatter(x37,y37,color='red',alpha=0.05)\nplt.plot(x37,reg37.predict(x37),color='blue')\nplt.show()","65692e75":"x38=np.array(slicedata_europe_nona['San Marino']['Encode']).reshape(-1,1)\ny38=np.array(slicedata_europe_nona['San Marino']['AverageTemperature'])\nreg38=LinearRegression()\nreg38.fit(x38,y38)","136b1dc0":"plt.scatter(x38,y38,color='red',alpha=0.05)\nplt.plot(x38,reg38.predict(x38),color='blue')\nplt.show()","e26f62e4":"x39=np.array(slicedata_europe_nona['Luxembourg']['Encode']).reshape(-1,1)\ny39=np.array(slicedata_europe_nona['Luxembourg']['AverageTemperature'])\nreg39=LinearRegression()\nreg39.fit(x39,y39)","1c20fc0f":"plt.scatter(x39,y39,color='red',alpha=0.05)\nplt.plot(x39,reg39.predict(x39),color='blue')\nplt.show()","55a36cdc":"x40=np.array(slicedata_europe_nona['Latvia']['Encode']).reshape(-1,1)\ny40=np.array(slicedata_europe_nona['Latvia']['AverageTemperature'])\nreg40=LinearRegression()\nreg40.fit(x40,y40)","9ff66c45":"plt.scatter(x40,y40,color='red',alpha=0.05)\nplt.plot(x40,reg40.predict(x40),color='blue')\nplt.show()","8f4a6e4f":"reg_list4=[reg31,reg32,reg33,reg34,reg35,reg36,reg37,reg38,reg39,reg40]\n\nfor country,reg in zip(sample_europe,reg_list4):\n  for i,j in zip(list(slicedata_europe[country]['Encode']),slicedata_europe[country].index):\n    if i not in list(slicedata_europe_nona[country]['Encode']):\n      slicedata_europe[country].loc[j,'AverageTemperature']=reg.predict([[i]])","ed0a08c2":"for country in sample_europe:\n  print(slicedata_europe[country]['AverageTemperature'].isna().sum())","1e4c392a":"pprint.pprint(sample_samerica)","94ece1f4":"slicedata_samerica_nona={}\nfor country in sample_samerica:\n  slicedata_samerica_nona[country]=slicedata_samerica[country].dropna(how='any')","2fad6772":"x41=np.array(slicedata_samerica_nona['Bolivia']['Encode']).reshape(-1,1)\ny41=np.array(slicedata_samerica_nona['Bolivia']['AverageTemperature'])\nreg41=LinearRegression()\nreg41.fit(x41,y41)","061aedfc":"plt.scatter(x41,y41,color='red',alpha=0.05)\nplt.plot(x41,reg41.predict(x41),color='blue')\nplt.show()","b47fc47a":"x42=np.array(slicedata_samerica_nona['Falkland Islands (Islas Malvinas)']['Encode']).reshape(-1,1)\ny42=np.array(slicedata_samerica_nona['Falkland Islands (Islas Malvinas)']['AverageTemperature'])\nreg42=LinearRegression()\nreg42.fit(x42,y42)","7d97fc8b":"plt.scatter(x42,y42,color='red',alpha=0.05)\nplt.plot(x42,reg42.predict(x42),color='blue')\nplt.show()","5982d440":"x43=np.array(slicedata_samerica_nona['Guyana']['Encode']).reshape(-1,1)\ny43=np.array(slicedata_samerica_nona['Guyana']['AverageTemperature'])\nreg43=LinearRegression()\nreg43.fit(x43,y43)","ac4406a9":"plt.scatter(x43,y43,color='red',alpha=0.05)\nplt.plot(x43,reg43.predict(x43),color='blue')\nplt.show()","72f141fd":"x44=np.array(slicedata_samerica_nona['Paraguay']['Encode']).reshape(-1,1)\ny44=np.array(slicedata_samerica_nona['Paraguay']['AverageTemperature'])\nreg44=LinearRegression()\nreg44.fit(x44,y44)","3dfadda5":"plt.scatter(x44,y44,color='red',alpha=0.05)\nplt.plot(x44,reg44.predict(x44),color='blue')\nplt.show()","4f3ffd78":"x45=np.array(slicedata_samerica_nona['Venezuela']['Encode']).reshape(-1,1)\ny45=np.array(slicedata_samerica_nona['Venezuela']['AverageTemperature'])\nreg45=LinearRegression()\nreg45.fit(x45,y45)","1ebe88b0":"plt.scatter(x45,y45,color='red',alpha=0.05)\nplt.plot(x45,reg45.predict(x45),color='blue')\nplt.show()","99789294":"reg_list5=[reg41,reg42,reg43,reg44,reg45]\n\nfor country,reg in zip(sample_samerica,reg_list5):\n  for i,j in zip(list(slicedata_samerica[country]['Encode']),slicedata_samerica[country].index):\n    if i not in list(slicedata_samerica_nona[country]['Encode']):\n      slicedata_samerica[country].loc[j,'AverageTemperature']=reg.predict([[i]])","e77c018b":"for country in sample_samerica:\n  print(slicedata_samerica[country]['AverageTemperature'].isna().sum())","c7dae99e":"pprint.pprint(sample_oceania)","155ffeb5":"slicedata_oceania_nona={}\nfor country in sample_oceania:\n  slicedata_oceania_nona[country]=slicedata_oceania[country].dropna(how='any')","38d042c5":"x46=np.array(slicedata_oceania_nona['Australia']['Encode']).reshape(-1,1)\ny46=np.array(slicedata_oceania_nona['Australia']['AverageTemperature'])\nreg46=LinearRegression()\nreg46.fit(x46,y46)","c34fd1e7":"plt.scatter(x46,y46,color='red',alpha=0.05)\nplt.plot(x46,reg46.predict(x46),color='blue')\nplt.show()","a93838d7":"x47=np.array(slicedata_oceania_nona['Kingman Reef']['Encode']).reshape(-1,1)\ny47=np.array(slicedata_oceania_nona['Kingman Reef']['AverageTemperature'])\nreg47=LinearRegression()\nreg47.fit(x47,y47)","d31ce9f3":"plt.scatter(x47,y47,color='red',alpha=0.05)\nplt.plot(x47,reg47.predict(x47),color='blue')\nplt.show()","1075bdd5":"x48=np.array(slicedata_oceania_nona['New Caledonia']['Encode']).reshape(-1,1)\ny48=np.array(slicedata_oceania_nona['New Caledonia']['AverageTemperature'])\nreg48=LinearRegression()\nreg48.fit(x48,y48)","87dabab3":"plt.scatter(x48,y48,color='red',alpha=0.05)\nplt.plot(x48,reg48.predict(x48),color='blue')\nplt.show()","5065be44":"x49=np.array(slicedata_oceania_nona['New Zealand']['Encode']).reshape(-1,1)\ny49=np.array(slicedata_oceania_nona['New Zealand']['AverageTemperature'])\nreg49=LinearRegression()\nreg49.fit(x49,y49)","5e1be2c2":"plt.scatter(x49,y49,color='red',alpha=0.05)\nplt.plot(x49,reg49.predict(x49),color='blue')\nplt.show()","a14724d5":"x50=np.array(slicedata_oceania_nona['Papua New Guinea']['Encode']).reshape(-1,1)\ny50=np.array(slicedata_oceania_nona['Papua New Guinea']['AverageTemperature'])\nreg50=LinearRegression()\nreg50.fit(x50,y50)","ac5e3c00":"plt.scatter(x50,y50,color='red',alpha=0.05)\nplt.plot(x50,reg50.predict(x50),color='blue')\nplt.show()","ea211a0e":"reg_list6=[reg46,reg47,reg48,reg49,reg50]\n\nfor country,reg in zip(sample_oceania,reg_list6):\n  for i,j in zip(list(slicedata_oceania[country]['Encode']),slicedata_oceania[country].index):\n    if i not in list(slicedata_oceania_nona[country]['Encode']):\n      slicedata_oceania[country].loc[j,'AverageTemperature']=reg.predict([[i]])","e61b0113":"for country in sample_oceania:\n  print(slicedata_oceania[country]['AverageTemperature'].isna().sum())","92e2c722":"pprint.pprint(slicedata_antarctica.keys())","37f1bab3":"slicedata_antarctica_nona={}\nfor country in slicedata_antarctica.keys():\n  slicedata_antarctica_nona[country]=slicedata_antarctica[country].dropna(how='any')","a8f13f47":"x51=np.array(slicedata_antarctica_nona['French Southern And Antarctic Lands']['Encode']).reshape(-1,1)\ny51=np.array(slicedata_antarctica_nona['French Southern And Antarctic Lands']['AverageTemperature'])\nreg51=LinearRegression()\nreg51.fit(x51,y51)","08c2bef7":"plt.scatter(x51,y51,color='red',alpha=0.05)\nplt.plot(x51,reg51.predict(x51),color='blue')\nplt.show()","ef6f8092":"x52=np.array(slicedata_antarctica_nona['Heard Island And Mcdonald Islands']['Encode']).reshape(-1,1)\ny52=np.array(slicedata_antarctica_nona['Heard Island And Mcdonald Islands']['AverageTemperature'])\nreg52=LinearRegression()\nreg52.fit(x52,y52)","1cd4b80c":"plt.scatter(x52,y52,color='red',alpha=0.05)\nplt.plot(x52,reg52.predict(x52),color='blue')\nplt.show()","b5403e83":"reg_list7=[reg51,reg52]\n\nfor country,reg in zip(['French Southern And Antarctic Lands','Heard Island And Mcdonald Islands'],reg_list7):\n  for i,j in zip(list(slicedata_antarctica[country]['Encode']),slicedata_antarctica[country].index):\n    if i not in list(slicedata_antarctica_nona[country]['Encode']):\n      slicedata_antarctica[country].loc[j,'AverageTemperature']=reg.predict([[i]])","d00b951a":"for country in slicedata_antarctica.keys():\n  print(slicedata_antarctica[country]['AverageTemperature'].isna().sum())","2f6f7b79":"for country in sample_asia:\n  slicedata_asia[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_asia[country]['Year']=pd.DatetimeIndex(slicedata_asia[country]['dt']).year","c5702749":"for country in sample_africa:\n  slicedata_africa[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_africa[country]['Year']=pd.DatetimeIndex(slicedata_africa[country]['dt']).year","588453db":"for country in sample_namerica:\n  slicedata_namerica[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_namerica[country]['Year']=pd.DatetimeIndex(slicedata_namerica[country]['dt']).year","7145956f":"for country in sample_samerica:\n  slicedata_samerica[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_samerica[country]['Year']=pd.DatetimeIndex(slicedata_samerica[country]['dt']).year","87351554":"for country in sample_europe:\n  slicedata_europe[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_europe[country]['Year']=pd.DatetimeIndex(slicedata_europe[country]['dt']).year","8ca98fe3":"for country in sample_oceania:\n  slicedata_oceania[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_oceania[country]['Year']=pd.DatetimeIndex(slicedata_oceania[country]['dt']).year","c9e8ed6d":"for country in ['French Southern And Antarctic Lands', 'Heard Island And Mcdonald Islands']:\n  slicedata_antarctica[country].drop(columns=['AverageTemperatureUncertainty','Year'],inplace=True)\n  slicedata_antarctica[country]['Year']=pd.DatetimeIndex(slicedata_antarctica[country]['dt']).year","6cef1c80":"sliceaggdata_asia={}\nfor country in sample_asia:\n  sliceaggdata_asia[country]=slicedata_asia[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","49cd1062":"sliceaggdata_africa={}\nfor country in sample_africa:\n  sliceaggdata_africa[country]=slicedata_africa[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","b343ca74":"sliceaggdata_namerica={}\nfor country in sample_namerica:\n  sliceaggdata_namerica[country]=slicedata_namerica[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","23d40259":"sliceaggdata_europe={}\nfor country in sample_europe:\n  sliceaggdata_europe[country]=slicedata_europe[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","0da862c3":"sliceaggdata_samerica={}\nfor country in sample_samerica:\n  sliceaggdata_samerica[country]=slicedata_samerica[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","0db532d0":"sliceaggdata_oceania={}\nfor country in sample_oceania:\n  sliceaggdata_oceania[country]=slicedata_oceania[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","255fa133":"sliceaggdata_antarctica={}\nfor country in ['French Southern And Antarctic Lands', 'Heard Island And Mcdonald Islands']:\n  sliceaggdata_antarctica[country]=slicedata_antarctica[country].groupby(['Year']).agg({'AverageTemperature':'median'}).reset_index()","b604c66a":"pprint.pprint(sample_asia)","f5427834":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_asia['Tajikistan']['Year'],sliceaggdata_asia['Tajikistan']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_asia['India']['Year'],sliceaggdata_asia['India']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_asia['Vietnam']['Year'],sliceaggdata_asia['Vietnam']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_asia['Lebanon']['Year'],sliceaggdata_asia['Lebanon']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_asia['Afghanistan']['Year'],sliceaggdata_asia['Afghanistan']['AverageTemperature'],color='orange',linestyle='-')\nplt.plot(sliceaggdata_asia['Oman']['Year'],sliceaggdata_asia['Oman']['AverageTemperature'],color='black',linestyle='-')\nplt.plot(sliceaggdata_asia['Christmas Island']['Year'],sliceaggdata_asia['Christmas Island']['AverageTemperature'],color='deeppink',linestyle='-')\nplt.plot(sliceaggdata_asia['Laos']['Year'],sliceaggdata_asia['Laos']['AverageTemperature'],color='midnightblue')\nplt.plot(sliceaggdata_asia['Israel']['Year'],sliceaggdata_asia['Israel']['AverageTemperature'],color='violet')\nplt.plot(sliceaggdata_asia['United Arab Emirates']['Year'],sliceaggdata_asia['United Arab Emirates']['AverageTemperature'],color='olive')\nplt.title('Countrywise Plot for Asia')\nplt.xlabel('Years')\nplt.ylabel('Temperatures')\nplt.legend(sample_asia)\nplt.show()","b88328c6":"pprint.pprint(sample_africa)","19af9643":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_africa['Mozambique']['Year'],sliceaggdata_africa['Mozambique']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_africa['Togo']['Year'],sliceaggdata_africa['Togo']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_africa['Western Sahara']['Year'],sliceaggdata_africa['Western Sahara']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_africa['Mauritius']['Year'],sliceaggdata_africa['Mauritius']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_africa['Tunisia']['Year'],sliceaggdata_africa['Tunisia']['AverageTemperature'],color='orange',linestyle='-')\nplt.plot(sliceaggdata_africa['Libya']['Year'],sliceaggdata_africa['Libya']['AverageTemperature'],color='black',linestyle='-')\nplt.plot(sliceaggdata_africa['Algeria']['Year'],sliceaggdata_africa['Algeria']['AverageTemperature'],color='deeppink',linestyle='-')\nplt.plot(sliceaggdata_africa['Malawi']['Year'],sliceaggdata_africa['Malawi']['AverageTemperature'],color='midnightblue',linestyle='-')\nplt.plot(sliceaggdata_africa['Angola']['Year'],sliceaggdata_africa['Angola']['AverageTemperature'],color='violet',linestyle='-')\nplt.plot(sliceaggdata_africa['Senegal']['Year'],sliceaggdata_africa['Senegal']['AverageTemperature'],color='olive',linestyle='-')\nplt.title('Countrywise Plot for Africa')\nplt.xlabel('Years')\nplt.ylabel('Temperatures')\nplt.legend(sample_africa)\nplt.show()","c2afedec":"pprint.pprint(sample_namerica)","bbbfe44b":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_namerica['Puerto Rico']['Year'],sliceaggdata_namerica['Puerto Rico']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_namerica['United States']['Year'],sliceaggdata_namerica['United States']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_namerica['Montserrat']['Year'],sliceaggdata_namerica['Montserrat']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_namerica['Mexico']['Year'],sliceaggdata_namerica['Mexico']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_namerica['Belize']['Year'],sliceaggdata_namerica['Belize']['AverageTemperature'],color='orange',linestyle='-')\nplt.plot(sliceaggdata_namerica['Canada']['Year'],sliceaggdata_namerica['Canada']['AverageTemperature'],color='black',linestyle='-')\nplt.plot(sliceaggdata_namerica['Baker Island']['Year'],sliceaggdata_namerica['Baker Island']['AverageTemperature'],color='deeppink',linestyle='-')\nplt.plot(sliceaggdata_namerica['Saint Barth\u00e9lemy']['Year'],sliceaggdata_namerica['Saint Barth\u00e9lemy']['AverageTemperature'],color='midnightblue',linestyle='-')\nplt.plot(sliceaggdata_namerica['Trinidad And Tobago']['Year'],sliceaggdata_namerica['Trinidad And Tobago']['AverageTemperature'],color='violet',linestyle='-')\nplt.plot(sliceaggdata_namerica['El Salvador']['Year'],sliceaggdata_namerica['El Salvador']['AverageTemperature'],color='olive',linestyle='-')\nplt.title('Countrywise Plot for North America',size=20)\nplt.xlabel('Years',size=20)\nplt.ylabel('Temperatures',size=20)\nplt.legend(sample_namerica)\nplt.show()","1dc9bad7":"pprint.pprint(sample_samerica)","1fb72f8e":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_samerica['Bolivia']['Year'],sliceaggdata_samerica['Bolivia']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_samerica['Falkland Islands (Islas Malvinas)']['Year'],sliceaggdata_samerica['Falkland Islands (Islas Malvinas)']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_samerica['Guyana']['Year'],sliceaggdata_samerica['Guyana']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_samerica['Paraguay']['Year'],sliceaggdata_samerica['Paraguay']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_samerica['Venezuela']['Year'],sliceaggdata_samerica['Venezuela']['AverageTemperature'],color='orange',linestyle='-')\nplt.title('Countrywise Plot for South America',size=20)\nplt.xlabel('Years',size=20)\nplt.ylabel('Temperatures',size=20)\nplt.legend(sample_samerica)\nplt.show()","e5473fe3":"pprint.pprint(sample_europe)","edc923f9":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_europe['Slovakia']['Year'],sliceaggdata_europe['Slovakia']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_europe['Moldova']['Year'],sliceaggdata_europe['Moldova']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_europe['Portugal']['Year'],sliceaggdata_europe['Portugal']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_europe['Monaco']['Year'],sliceaggdata_europe['Monaco']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_europe['Estonia']['Year'],sliceaggdata_europe['Estonia']['AverageTemperature'],color='orange',linestyle='-')\nplt.plot(sliceaggdata_europe['Austria']['Year'],sliceaggdata_europe['Austria']['AverageTemperature'],color='black',linestyle='-')\nplt.plot(sliceaggdata_europe['Malta']['Year'],sliceaggdata_europe['Malta']['AverageTemperature'],color='deeppink',linestyle='-')\nplt.plot(sliceaggdata_europe['San Marino']['Year'],sliceaggdata_europe['San Marino']['AverageTemperature'],color='midnightblue',linestyle='-')\nplt.plot(sliceaggdata_europe['Luxembourg']['Year'],sliceaggdata_europe['Luxembourg']['AverageTemperature'],color='violet',linestyle='-')\nplt.plot(sliceaggdata_europe['Latvia']['Year'],sliceaggdata_europe['Latvia']['AverageTemperature'],color='olive',linestyle='-')\nplt.title('Countrywise Plot for Europe',size=20)\nplt.xlabel('Years',size=20)\nplt.ylabel('Temperatures',size=20)\nplt.legend(sample_europe)\nplt.show()","831f9caa":"pprint.pprint(sample_oceania)","235f4831":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_oceania['Australia']['Year'],sliceaggdata_oceania['Australia']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_oceania['Kingman Reef']['Year'],sliceaggdata_oceania['Kingman Reef']['AverageTemperature'],color='blue',linestyle='-')\nplt.plot(sliceaggdata_oceania['New Caledonia']['Year'],sliceaggdata_oceania['New Caledonia']['AverageTemperature'],color='green',linestyle='-')\nplt.plot(sliceaggdata_oceania['New Zealand']['Year'],sliceaggdata_oceania['New Zealand']['AverageTemperature'],color='brown',linestyle='-')\nplt.plot(sliceaggdata_oceania['Papua New Guinea']['Year'],sliceaggdata_oceania['Papua New Guinea']['AverageTemperature'],color='orange',linestyle='-')\nplt.title('Countrywise Plot for Oceania',size=20)\nplt.xlabel('Years',size=20)\nplt.ylabel('Temperatures',size=20)\nplt.legend(sample_oceania)\nplt.show()","68481dae":"pprint.pprint(sliceaggdata_antarctica.keys())","a38331dd":"plt.figure(figsize=[40,10])\nplt.plot(sliceaggdata_antarctica['French Southern And Antarctic Lands']['Year'],sliceaggdata_antarctica['French Southern And Antarctic Lands']['AverageTemperature'],color='red',linestyle='-')\nplt.plot(sliceaggdata_antarctica['Heard Island And Mcdonald Islands']['Year'],sliceaggdata_antarctica['Heard Island And Mcdonald Islands']['AverageTemperature'],color='blue',linestyle='-')\nplt.title('Countrywise Plot for Antarctica',size=20)\nplt.xlabel('Years',size=20)\nplt.ylabel('Temperatures',size=20)\nplt.legend(sliceaggdata_antarctica.keys())\nplt.show()","2035b85c":"new_temp=slicedata_asia['India']","e1c2902d":"## **North America**","c51ac912":"###Latvia Reg 40","980a203a":"###Europe","d6ecc90a":"Adding another column Year in the data frame for future reference","8617dc7f":"Reading the csv data into pandas dataframe 'data'","c7a46cf3":"As per country there are many missing values, but there are many countries for which between some years the data is missing. So we are trying to get the first year from which the data is started for each country, and we will drop the years before that particular.","0bf752f5":"###Lebanon\nReg 4","f95471ed":"###Guyana Reg 43","0843af2a":"###Montserrat Reg 23\n","92e7f500":"###Belize Reg 25","204712ee":"##**Geographical Region Wise**","28186df1":"# **Trial and Error section**","af9ef23b":"###Paraguay Reg 44","7cf10ff9":"Creating another datafrome to see how many data are missing per country in the summary_df_avgtmp pandas dataframe","eed5ab73":"Dropping the missing values","19647115":"###Antarctica","72f44223":"###Austria Reg 36","2b6f8da9":"###French Southern And Antarctic Lands","858fb066":"###Malawi","130e51da":"###New Zealand","7617c6a8":"###Afghanistan\n\nReg 5","f8135314":"###Tajikistan\n\nReg1","72aeb8da":"###Venezuela Reg 45","cb4b2757":"### **Filling the NaN values of Europe** ","02d80428":"###Plotting The Samples","6fe36232":"####South America","b4c518d6":"## **Antarctica**\n","d25007b7":"###United Arab Emirates\nReg 10","c3ff60dc":"### **Filling the NaN values of Europe** ","b73acbbe":"# **Estimation of the missing values for the random sample**\n\nNote\n1. Asia 1-10\n2. Africa 11-20\n3. Namerica 21-30\n4. Europe 31-40\n5. Samerica 41-45\n6. Oceania 46-50\n7. Antarctica 51,52\n\n","92d524e3":"### **Filling the NaN values of Europe** ","c771aabb":"##Data Manipulation","a0ce591c":"Again checking for missing values","8e09cb94":"####Asia","cd85692a":"###Togo","48b43ebe":"###Western Sahara","e44890ba":"####North America","c275ac62":"Checking if there are any missing values","5abff57c":"####Oceania","a923612c":"###Angola","2c129bbc":"###Portugal Reg 33","58509529":"####Africa","ab21bc2b":"###Papua New Guinea","6d61d8fa":"###Mexico \nReg 24","11b0f9b5":"### **Filling the NaN values of Europe** ","8c7e0db8":"###Vietnam\n\nReg3","41dc2a5c":"###Falkland Islands (Islas Malvinas) Reg 42","716b37bd":"## **South America**","8bf6776c":"###India\nReg2","e350c1e4":"###Tunisia","03edf598":"###United States\nReg 22","4d110ad6":"###Estonia Reg 35","1077a3cd":"###Christmas Island\n\nReg 7 ","b429335f":"# **Comparing samples**\n","53f71a00":"# **Data Manipulation**","823c3416":"## **Oceania**","420a4574":"###**Oman**\nReg 6","5cd7078d":"###Baker Island Reg 27","78db0a51":"###Moldova Reg 32","b50b0870":"# **Importing Modules**\n","e79dd28a":"As in the previous section we have seen that there are 242 countries in the data but in reality there are only 194 countries. So I have downloaded a dataset of the actual countries with their population and world share and land area. And then I checked which countries from our working dataset are not in the actualcountries dataset.","749c909c":"## **Europe**","0fd2f15f":"###El Salvador Reg 30","433d730b":"###Heard Island And Mcdonald Islands","fee16441":"###Libya","c9298789":"###Puerto Rico\nReg 21","7cc4a1cf":"###Monaco Reg 34","b7b08862":"###Senegal","99494722":"###San Marino Reg 38","513e9726":"###Bolivia Reg 41","99402e9a":"###Oceania","ee6825fc":"###Malta Reg 37","6fd56f25":"###Luxembourg Reg 39","a52ee36f":"# **Data Cleaning**","0cde848d":"### **Filling the NaN values of Africa** ","3365ae30":"####Antarctica","57de4494":"exporting the above dataframes as csv","407aa452":"###Kingman Reef","eb0a1f96":"###Saint Barth\u00e9lemy Reg 28","dd6fed82":"As per countries there are more than 2000 values we are taking the yearly median per country","62bc0e05":"##**Asia**\n","5dbf7a5f":"###Laos\nReg 8","24a6f297":"###Slovakia Reg 31","76114487":"###Algeria","0dc8e91a":"####Europe","ba000c7f":"Changing the data type of Country column from object to category using lambda function","f47a139e":"###New Caledonia","e83f93c5":"###North America","a9cd144a":"###Israel\nReg9","8b098b4c":"### **Filling the NaN values of Asia** ","b2401094":"###South America","160b4b79":"###Canada Reg 26","1fbe3c97":"###Mauritius","a1af1769":"###Asia","9ee9a32a":"## **Africa**","ff2fb81f":"Creating dataframe of the years per country for which the yearly median is missing","d1512176":"### **Filling the NaN values of North America** ","4cb8a834":"Creating an list of the countries and the years in the dataframe for future reference","1dce62b4":"###Calculating the yearly median","e5c04b76":"###Mozambique","de7fb006":"###Dropping the unnecessary columns","91be4f9e":"###Australia","2914c921":"##**Continentwise**\n","9170065f":"###Africa","caae4f07":"###Trinidad And Tobago Reg 29"}}