{"cell_type":{"60b500b7":"code","2b2cfe4b":"code","2cfad8b1":"code","cd748cbf":"code","e9a756b8":"code","31feb1e2":"code","8f8b6b7d":"code","cceb6eb6":"markdown","5f480ec2":"markdown","2c62567f":"markdown"},"source":{"60b500b7":"# You may need to uncomment and run this command if you intend to load JPEG encoded DICOM files.\n#!conda install gdcm -c conda-forge -y","2b2cfe4b":"import os\nimport numpy as np\nimport pandas as pd\nimport pydicom\nimport matplotlib.pyplot as plt\nfrom skimage.filters import unsharp_mask\nfrom skimage import exposure","2cfad8b1":"# This function gets the first image path in a StudyInstanceUID directory in the train set\ndef get_image_by_study_id(study_id):\n    base_path = \"\/kaggle\/input\/siim-covid19-detection\/\"\n    study_path = base_path + \"train\/\" + study_id + \"\/\"\n    images = []\n    for subdir, dirs, files in os.walk(study_path):\n        for file in files:     \n            image = os.path.join(subdir, file)\n            if os.path.isfile(image):\n                return image\n    return \"none\"","cd748cbf":"# Function to load image\ndef load_image(study_id):\n    img_file = get_image_by_study_id(study_id)\n    image = pydicom.dcmread(img_file)\n    pixels = image.pixel_array\n\n    min_pixel = np.min(pixels)\n    max_pixel = np.max(pixels)\n\n    if image.PhotometricInterpretation == \"MONOCHROME1\":\n        pixels = max_pixel - pixels\n    else:\n        pixels = pixels\n    return pixels","e9a756b8":"# Apply unsharp mask and hist equalization\ndef unsharp_image(pixels):\n\n    # Tweak the radius and amount for more\/less sharpening\n    unsharp_image = unsharp_mask(pixels, radius=5, amount=2)\n    equalized_image = exposure.equalize_hist(unsharp_image)\n    \n    return equalized_image","31feb1e2":"# Display images\ndef plot_images(pixels, image_unsharp):\n    # Plot both images\n    fig, axes = plt.subplots(nrows=1, ncols=2,sharex=True, sharey=True, figsize=(12, 12))\n    ax = axes.ravel()\n    ax[0].imshow(pixels, cmap=plt.cm.gray)\n    ax[0].set_title('Original image')\n    ax[1].imshow(image_unsharp, cmap=plt.cm.gray)\n    ax[1].set_title('After unsharp \/ hist eq')\n    for a in ax:\n        a.axis('off')\n    fig.tight_layout()\n    plt.show()","8f8b6b7d":"# Grab an random study ID and get the pixels\npixels = load_image('013d698aeecb')\n\n# Apply unsharp and hist equalization\npixels_unsharp = unsharp_image(pixels)\n\n# Plot the images\nplot_images(pixels, pixels_unsharp)","cceb6eb6":"#### As you can tell, the image is more contrasted and seems much clearer.\n- Some anatomy like the distal bronchial\/vascular markings in the upper lobes are better demonstrated.\n- I believe this technique can help with normalization across the dataset and edge detection for CNNs.\n- I won't go into the details of unsharp masking. Read more about it here -> https:\/\/en.wikipedia.org\/wiki\/Unsharp_masking\n- This should be applied sparingly to images that already have sharpening\/unsharp filters.","5f480ec2":"**Here are some other processing notebooks I made:**\n- Lung segmentation without CNN ->https:\/\/www.kaggle.com\/davidbroberts\/lung-segmentation-without-cnn\n- Applying filters to x-rays -> https:\/\/www.kaggle.com\/davidbroberts\/applying-filters-to-chest-x-rays\n- Rib supression on Chest X-Rays -> https:\/\/www.kaggle.com\/davidbroberts\/rib-suppression-poc\n- Manual DICOM VOI LUT -> https:\/\/www.kaggle.com\/davidbroberts\/manual-dicom-voi-lut\n- Apply Unsharp Mask to Chest X-Rays -> https:\/\/www.kaggle.com\/davidbroberts\/unsharp-masking-chest-x-rays\n- Cropping Chest X-Rays -> https:\/\/www.kaggle.com\/davidbroberts\/cropping-chest-x-rays\n- Bounding Boxes on Cropped Images -> https:\/\/www.kaggle.com\/davidbroberts\/bounding-boxes-on-cropped-images\n- Visualizing Chest X-Ray bit planes -> https:\/\/www.kaggle.com\/davidbroberts\/visualizing-chest-x-ray-bitplanes\n- DICOM full range pixels as CNN input -> https:\/\/www.kaggle.com\/davidbroberts\/dicom-full-range-pixels-as-cnn-input\n- Standardizing Chest X-Ray Dataset Exports -> https:\/\/www.kaggle.com\/davidbroberts\/standardizing-cxr-datasets","2c62567f":"<div class='alert alert-info' style='text-align: center'><h1>Unsharp Masking Chest X-Rays<\/h1>\n    - yet another chest x-ray processing notebook -\n<\/div>\n\n#### I noticed a lot of the images have various filter convolutions applied to them. Some are blurred, some have unsharp mask. There are some that were *over filtered* and clipping happens.\n- Here, I will show how to add an unsharp mask (from scikit), and then histogram equalize the image for a bit of normalization.\n- This will create more consistent images across the dataset.\n\n#### The idea is to enhance the contrast and give CNN edge detectors a little more to grab onto."}}