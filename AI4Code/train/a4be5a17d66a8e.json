{"cell_type":{"561350b7":"code","100fbc9a":"code","cb91a582":"code","096b19a7":"code","773b407b":"code","00dbdf3d":"code","ae45c6cc":"code","c3a1f397":"markdown","3fbb3e3d":"markdown","b35511ea":"markdown","edbe72a2":"markdown","60ea2ff9":"markdown","c5637a14":"markdown"},"source":{"561350b7":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import r2_score, mean_squared_error","100fbc9a":"X_train = pd.read_csv('\/kaggle\/input\/student-performance-data-set-competition-form\/X_train.csv')\nX_test = pd.read_csv('\/kaggle\/input\/student-performance-data-set-competition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/student-performance-data-set-competition-form\/y_train.csv')\ny_test = pd.read_csv('\/kaggle\/input\/student-performance-data-set-competition-form\/test_label\/y_test.csv')\n\nX_train.head(3)","cb91a582":"X_train.info()\nprint('------------------------------------------------------------------')\nprint(X_train.describe())\n\nprint('------------------------------------------------------------------')\n\n# \uacb0\uce21\uce58 \uc874\uc7ac \uc5ec\ubd80 \ud655\uc778\nprint(X_train.isnull().sum().sum())\nprint(X_test.isnull().sum().sum())","096b19a7":"# \uc774\uc0b0\ud615 \ubcc0\uc218 unique\uac12 \ud655\uc778\n\nprint('school: ', X_train['school'].unique())\nprint('sex: ', X_train['sex'].unique())\nprint('address: ', X_train['address'].unique())\nprint('famsize: ', X_train['famsize'].unique())\nprint('Pstatus: ', X_train['Pstatus'].unique())\nprint('Mjob: ', X_train['Mjob'].unique())\nprint('Fjob: ', X_train['Fjob'].unique())\nprint('reason: ', X_train['reason'].unique())\nprint('guardian: ', X_train['guardian'].unique())\nprint('schoolsup: ', X_train['schoolsup'].unique())\nprint('famsup: ', X_train['famsup'].unique())\nprint('paid: ', X_train['paid'].unique())\nprint('activities: ', X_train['activities'].unique())\nprint('nursery: ', X_train['nursery'].unique())\nprint('higher: ', X_train['higher'].unique())\nprint('internet: ', X_train['internet'].unique())\nprint('romantic: ', X_train['romantic'].unique())","773b407b":"# \ub77c\ubca8\uc778\ucf54\ub354\n\nle_school = LabelEncoder()\nle_sex = LabelEncoder()\nle_address = LabelEncoder()\nle_famsize = LabelEncoder()\nle_Pstatus = LabelEncoder()\nle_Mjob = LabelEncoder()\nle_Fjob = LabelEncoder()\nle_reason = LabelEncoder()\nle_guardian = LabelEncoder()\nle_schoolsup = LabelEncoder()\nle_famsup = LabelEncoder()\nle_paid = LabelEncoder()\nle_activities = LabelEncoder()\nle_nursery = LabelEncoder()\nle_higher = LabelEncoder()\nle_internet = LabelEncoder()\nle_romantic = LabelEncoder()\n\n# Training data \uc778\ucf54\ub529\n\nX_train['school'] = le_school.fit_transform(X_train['school'])\nX_train['sex'] = le_sex.fit_transform(X_train['sex'])\nX_train['address'] = le_address.fit_transform(X_train['address'])\nX_train['famsize'] = le_famsize.fit_transform(X_train['famsize'])\nX_train['Pstatus'] = le_Pstatus.fit_transform(X_train['Pstatus'])\nX_train['Mjob'] = le_Mjob.fit_transform(X_train['Mjob'])\nX_train['Fjob'] = le_Fjob.fit_transform(X_train['Fjob'])\nX_train['reason'] = le_reason.fit_transform(X_train['reason'])\nX_train['guardian'] = le_guardian.fit_transform(X_train['guardian'])\nX_train['schoolsup'] = le_schoolsup.fit_transform(X_train['schoolsup'])\nX_train['famsup'] = le_famsup.fit_transform(X_train['famsup'])\nX_train['paid'] = le_paid.fit_transform(X_train['paid'])\nX_train['activities'] = le_activities.fit_transform(X_train['activities'])\nX_train['nursery'] = le_nursery.fit_transform(X_train['nursery'])\nX_train['higher'] = le_higher.fit_transform(X_train['higher'])\nX_train['internet'] = le_internet.fit_transform(X_train['internet'])\nX_train['romantic'] = le_romantic.fit_transform(X_train['romantic'])\n\n# Test data \uc778\ucf54\ub529(Training data\uc5d0 fit\ub41c \uc778\ucf54\ub354 \uc0ac\uc6a9)\n\nX_test['school'] = le_school.transform(X_test['school'])\nX_test['sex'] = le_sex.transform(X_test['sex'])\nX_test['address'] = le_address.transform(X_test['address'])\nX_test['famsize'] = le_famsize.transform(X_test['famsize'])\nX_test['Pstatus'] = le_Pstatus.transform(X_test['Pstatus'])\nX_test['Mjob'] = le_Mjob.transform(X_test['Mjob'])\nX_test['Fjob'] = le_Fjob.transform(X_test['Fjob'])\nX_test['reason'] = le_reason.transform(X_test['reason'])\nX_test['guardian'] = le_guardian.transform(X_test['guardian'])\nX_test['schoolsup'] = le_schoolsup.transform(X_test['schoolsup'])\nX_test['famsup'] = le_famsup.transform(X_test['famsup'])\nX_test['paid'] = le_paid.transform(X_test['paid'])\nX_test['activities'] = le_activities.transform(X_test['activities'])\nX_test['nursery'] = le_nursery.transform(X_test['nursery'])\nX_test['higher'] = le_higher.transform(X_test['higher'])\nX_test['internet'] = le_internet.transform(X_test['internet'])\nX_test['romantic'] = le_romantic.transform(X_test['romantic'])","00dbdf3d":"rf_reg = RandomForestRegressor(random_state=1)\nrf_reg.fit(X_train.drop(['StudentID'], axis=1), y_train['G3'])\n\npred = rf_reg.predict(X_test.drop(['StudentID'], axis=1))\n\nprint('R2_Score: ', round(r2_score(y_test['G3'], pred),4))","ae45c6cc":"pd.DataFrame({'StudentID': y_test['StudentID'], 'pred': pred}).to_csv('submission.csv', index=False)\ndf = pd.read_csv('submission.csv')\ndf.head(5)","c3a1f397":"## \ub370\uc774\ud130 \uc804\ucc98\ub9ac","3fbb3e3d":"## \uc81c\ucd9c","b35511ea":"## \ub370\uc774\ud130 \ud655\uc778","edbe72a2":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","60ea2ff9":"## \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","c5637a14":"## \ubaa8\ub378\ub9c1 - Random Forest"}}