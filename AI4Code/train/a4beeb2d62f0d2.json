{"cell_type":{"f06628c6":"code","51ea86ec":"code","4a4b4252":"code","b6c81259":"code","f344878d":"code","23f4b28d":"code","8a46a1e7":"code","b7eba4a6":"code","e83887b6":"code","cdcaf277":"code","56cd5b6a":"code","44de80f6":"code","b17f22d6":"code","3a5e89e4":"code","9a71554c":"code","04b249b6":"code","368bc0f8":"code","9ab98122":"code","05b6af22":"code","05a99dd7":"code","99973fca":"code","276b095f":"code","ce9e0e6c":"code","a9d85aca":"code","74a34430":"code","4ecda7d4":"code","5ec61c68":"code","36ac5a12":"markdown","b1c7db5c":"markdown","95cc3ff9":"markdown","f7d5b844":"markdown","cdedca18":"markdown","610e0640":"markdown","55902bdb":"markdown","4903f72d":"markdown","8f9dd792":"markdown","aa60d24b":"markdown","ad86a273":"markdown","18c16639":"markdown","6ea641de":"markdown","2f975bb2":"markdown","ce570342":"markdown","9c5ed33d":"markdown","5fb1f3fb":"markdown","813f0396":"markdown","a96b9546":"markdown","b4d2d367":"markdown","5a191434":"markdown","55df27d4":"markdown","7a6fec82":"markdown","f0943b27":"markdown"},"source":{"f06628c6":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nsns.set_style('darkgrid')\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","51ea86ec":"data = pd.read_csv('..\/input\/advanced-dls-spring-2021\/train.csv')","4a4b4252":"# \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043f\u043e \u0442\u0438\u043f\u0443\n\n# \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nnum_cols = [\n    'ClientPeriod',\n    'MonthlySpending',\n    'TotalSpent'\n]\n\n# \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ncat_cols = [\n    'Sex',\n    'IsSeniorCitizen',\n    'HasPartner',\n    'HasChild',\n    'HasPhoneService',\n    'HasMultiplePhoneNumbers',\n    'HasInternetService',\n    'HasOnlineSecurityService',\n    'HasOnlineBackup',\n    'HasDeviceProtection',\n    'HasTechSupportAccess',\n    'HasOnlineTV',\n    'HasMovieSubscription',\n    'HasContractPhone',\n    'IsBillingPaperless',\n    'PaymentMethod'\n]\n\nfeature_cols = num_cols + cat_cols\ntarget_col = 'Churn'","b6c81259":"data.head()","f344878d":"data.info()","23f4b28d":"# data['TotalSpent'] = pd.to_numeric(data['TotalSpent'])","8a46a1e7":"data.query('TotalSpent == \" \"')","b7eba4a6":"data.query('ClientPeriod == 0')","e83887b6":"data['TotalSpent'] = data['TotalSpent'].where(data['ClientPeriod'] > 0, data['MonthlySpending'])","cdcaf277":"data['ClientPeriod'] = data['ClientPeriod'].where(data['ClientPeriod'] > 0, 1)","56cd5b6a":"data['TotalSpent'] = pd.to_numeric(data['TotalSpent'])","44de80f6":"data.duplicated().sum()","b17f22d6":"data = data.drop_duplicates().reset_index(drop=True)","3a5e89e4":"# \u0413\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0434\u044f \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ndata[num_cols].hist(figsize=(14, 10), bins=20, color='royalblue');","9a71554c":"# boxplot \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\n\nfig, axs = plt.subplots(1, 3, figsize=(16, 4))\n\nfor i, col in enumerate(num_cols):\n    axs[i].boxplot(data[col], vert=False)\n    axs[i].set_title(col)\n    ","04b249b6":"fig, axs = plt.subplots(4, 4, figsize=(16, 16))\n\nfor i, col in enumerate(cat_cols):\n    axs[i \/\/ 4][i % 4].pie(\n        data[col].value_counts(normalize=True),\n        labels=data[col].value_counts().index,\n        autopct='%1.1f%%'\n    )\n    axs[i \/\/ 4][i % 4].set_title(col)","368bc0f8":"_, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))\nax1.pie(\n        data[target_col].value_counts(normalize=True),\n        labels=['False', 'True'],\n        autopct='%1.1f%%'\n    );\n\nbars = ax2.bar(['False', 'True'], data[target_col].value_counts())\nbars[1].set_color('C1')","9ab98122":"sns.pairplot(data[num_cols + [target_col]], hue=target_col);","05b6af22":"fig, axs = plt.subplots(4, 4, figsize=(20, 20))\n\nfor i, col in enumerate(cat_cols):\n    sns.countplot(x=col, hue=target_col, data=data, ax=axs[i \/\/ 4][i % 4])\n    if i == 15:\n        # \u0447\u0442\u043e\u0431\u044b \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0435 \u043d\u0435 \u043d\u0430\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u043b\u0438\u0441\u044c \u043d\u0430\u0434\u043f\u0438\u0441\u0438\n        axs[i \/\/ 4][i % 4].tick_params(axis='x', labelrotation=50)","05a99dd7":"from sklearn.linear_model import LogisticRegression, LogisticRegressionCV\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.preprocessing import StandardScaler, RobustScaler, LabelEncoder, OneHotEncoder\nfrom sklearn.pipeline import make_pipeline, Pipeline\nfrom sklearn.compose import ColumnTransformer","99973fca":"X = data[num_cols + cat_cols]  # \u043c\u0430\u0442\u0440\u0438\u0446\u0430 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\ny = data[target_col]  # \u0446\u0435\u043b\u0435\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f\nX.head()","276b095f":"# \u0441\u0442\u0440\u043e\u0438\u043c pipeline \u0434\u043b\u044f LogisticRegression, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043a\u0435\u0439\u043b\u0438\u0442 num_cols\n# \u0438 \u0434\u0435\u043b\u0430\u0435\u0442 OneHotEncoding \u0434\u043b\u044f cat_cols\n\nnumeric_transformer = Pipeline(steps=[\n    ('scaler', StandardScaler())])\n\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', numeric_transformer, num_cols),\n        ('cat', OneHotEncoder(), cat_cols)])\n\npipe = Pipeline(steps=[('preprocessor', preprocessor),\n                      ('classifier', LogisticRegression(random_state=42))])\n\n\ngrid = {\"classifier__C\": [100, 10, 1, 0.1, 0.01, 0.001]}\n\ngsc = GridSearchCV(pipe, grid, cv=5, scoring='roc_auc', refit=True)\ngrid_result = gsc.fit(X, y)\nprint('best params:', grid_result.best_params_)\nprint('best score:', grid_result.best_score_)","ce9e0e6c":"!pip install catboost  # \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c catboost\n\nfrom catboost import CatBoostClassifier","a9d85aca":"# \u0422\u044e\u043d\u0438\u043c \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e grid_search\n\nparam_grid = {\n    'iterations': [50, 100, 150, 300],\n    'min_data_in_leaf': [50, 75, 100],\n    'depth': [6, 7],\n    'l2_leaf_reg': [3, 5, 7]\n}\n\nclf = CatBoostClassifier(\n                         eval_metric='AUC:hints=skip_train~false',\n                         cat_features=cat_cols, \n                         random_state=42,\n                         loss_function='Logloss',\n                         learning_rate=0.1)\n\ngs_result = clf.grid_search(param_grid, X, y)","74a34430":"gs_result['params']","4ecda7d4":"print(clf.get_best_score())","5ec61c68":"best_model = CatBoostClassifier(\n                         eval_metric='AUC:hints=skip_train~false', \n                         cat_features=cat_cols, \n                         random_state=42,\n                         iterations=300,\n                         l2_leaf_reg=5,\n                         min_data_in_leaf = 50,\n                         depth=6)  # \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438\n\nbest_model.fit(X, y)  # \u043e\u0431\u0443\u0447\u0430\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0432\u0441\u0435\u043c \u0434\u0430\u0442\u0430\u0441\u0435\u0442\u0435\n\nX_to_predict = pd.read_csv('..\/input\/advanced-dls-spring-2021\/test.csv')\nX_to_predict['TotalSpent'] = X_to_predict['TotalSpent'].where(X_to_predict['ClientPeriod'] > 0, X_to_predict['MonthlySpending'])\nX_to_predict['ClientPeriod'] = X_to_predict['ClientPeriod'].where(X_to_predict['ClientPeriod'] > 0, 1)\nX_to_predict['TotalSpent'] = pd.to_numeric(X_to_predict['TotalSpent'])\n\nsubmission = pd.read_csv('..\/input\/advanced-dls-spring-2021\/submission.csv')\nsubmission['Churn'] = best_model.predict_proba(X_to_predict)[:, 1]\n\nsubmission.to_csv('..\/my_submission.csv', index=False, columns=[\"Id\", \"Churn\"])","36ac5a12":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441 \u043a\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u044b \u0438\u043c\u0435\u0435\u043c \u0434\u0435\u043b\u043e","b1c7db5c":"## \u0410\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445","95cc3ff9":"## \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u0440\u0430\u0434\u0438\u0435\u043d\u0442\u043d\u043e\u0433\u043e \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430\n\n\u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c catboost, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0430\u043c \u043d\u0435 \u043d\u0430\u0434\u043e \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. catboost \u0441\u0434\u0435\u043b\u0430\u0435\u0442 \u044d\u0442\u043e \u0441\u0430\u043c (\u0432 .fit() \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c cat_features=cat_cols). \u0410 \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043d\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0434\u0435\u0440\u0435\u0432\u044c\u044f\u0445 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e.\n\n\u041f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u0430\u043d\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0434\u0435\u0440\u0435\u0432\u044c\u0435\u0432 \u0438 learning_rate'\u0430 \u0438 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u043b\u0443\u0447\u0448\u0443\u044e \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 ROC-AUC \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044e.\n\n\u0414\u043b\u044f \u043f\u043e\u0434\u0431\u043e\u0440\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 grid_search \u0443 CatBoostClassifier","f7d5b844":"\u041b\u0443\u0447\u0448\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441 \u043b\u0443\u0447\u0448\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438:","cdedca18":"## \u041f\u043e\u0438\u0441\u043a \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","610e0640":"\u041a\u0430\u043a \u0432\u0438\u0434\u0438\u043c, \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043a\u0438\u043d\u0443\u043b\u0438 \u043d\u0430\u0448 \u0441\u0435\u0440\u0432\u0438\u0441, \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0438\u043c \u043d\u0435\u0434\u043e\u043b\u0433\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u043d\u043e \u0438\u043c\u0435\u044e\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043c\u0435\u0441\u044f\u0447\u043d\u044b\u0435 \u0437\u0430\u0442\u0440\u0430\u0442\u044b.","55902bdb":"\u041c\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u043b\u0438 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0441\u0442\u044c \u043b\u0438 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b","4903f72d":"\u0423\u0436\u0435 \u0438\u0437 \u0442\u0430\u043a\u0438\u0445 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0434\u0438\u0430\u0433\u0440\u0430\u043c \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0432\u043e\u0434\u044b. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u043a\u043b\u0438\u0435\u043d\u0442\u044b \u043e\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0443\u0441\u043b\u0443\u0433\u0438 \u043f\u043e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u043c\u0443 \u0447\u0435\u043a\u0443 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0447\u0430\u0449\u0435 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u044e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u043c \u043d\u0435\u0436\u0435\u043b\u0438 \u043b\u044e\u0434\u0438 \u043e\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0443\u0441\u043b\u0443\u0433\u0438 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043a\u0430\u0440\u0442. \u0422\u0430\u043a\u0438\u0435 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043c\u043e\u0433\u0443\u0442 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u043e \u0442\u043e\u043c, \u043a\u0430\u043a\u0438\u0435 \u0438\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439 \u043b\u044e\u0434\u0435\u0439 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0441\u043a\u043b\u043e\u043d\u043d\u044b \u043f\u043e\u043a\u0438\u043d\u0443\u0442\u044c \u043d\u0430\u0448 \u0441\u0435\u0440\u0432\u0438\u0441.","8f9dd792":"## \u0420\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439","aa60d24b":"## \u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435","ad86a273":"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432\u043e \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0443 \u044d\u0442\u0438\u0445 9 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 ClientPeriod \u0440\u0430\u0432\u0435\u043d 0 \u0438 \u0432 \u0442\u043e \u0436\u0435 \u0432\u0440\u0435\u043c\u044f TotalSpent \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u043e\u0431\u0435\u043b\u0443. \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u0435\u0439 \u0432\u0441\u0435\u0433\u043e - \u044d\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0435\u0432\u044f\u0442\u0438 \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u043c \u043c\u0435\u043d\u044c\u0448\u0435 1 \u043f\u0435\u0440\u0438\u043e\u0434\u0430 \u0438 TotalSpent \u0434\u043b\u044f \u043d\u0438\u0445 \u043f\u043e\u043f\u0440\u043e\u0441\u0442\u0443 \u043d\u0435 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b\u0438. \u041f\u043e\u044d\u0442\u043e\u043c\u0443, \u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0432 \u044d\u0442\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 MonthlySpending, \u0430 ClientPeriod \u043d\u0430 1.","18c16639":"\u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c \u0432\u044b\u0448\u0435, \u043b\u0443\u0447\u0448\u0435\u0435 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e (\u0430 \u0438\u043c\u0435\u043d\u043d\u043e roc_auc = 0.8445730198922732) \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u043e\u0441\u044c \u043f\u0440\u0438 C = 10.","6ea641de":"\u041d\u0430\u0448 \u0434\u0430\u0442\u0430\u0441\u0435\u0442 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0441\u043e\u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043b\u044f\u043c\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u043d\u0435 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 (\u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 1 \u043a 3).","2f975bb2":"### \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","ce570342":"## \u041f\u043e\u0438\u0441\u043a \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432","9c5ed33d":"\u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0446\u0435\u043b\u044b\u0445 14 \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b\u0445 \u0441\u0442\u0440\u043e\u043a. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u043c \u0438\u0445","5fb1f3fb":"\u041c\u044b \u043d\u0430\u0448\u043b\u0438 \u0446\u0435\u043b\u044b\u0445 9 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u043e\u0431\u0435\u043b \u0432\u043c\u0435\u0441\u0442\u043e TotalSpent. \u0417\u0430\u043c\u0435\u0442\u0438\u043c, \u0447\u0442\u043e \u0443 \u0432\u0441\u0435\u0445 \u044d\u0442\u0438\u0445 \u043d\u0430\u0431\u043b\u044e\u0434\u0435\u043d\u0438\u0439 \u0435\u0441\u0442\u044c \u043e\u0434\u043d\u0430 \u043e\u0431\u0449\u0430\u044f \u0447\u0435\u0440\u0442\u0430 - \u044d\u0442\u043e \u043d\u0443\u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0441\u0442\u043e\u043b\u0431\u0446\u0435 ClientPeriod. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 ClientPeriod \u0440\u0430\u0432\u0435\u043d 0, \u0438 \u043f\u043e\u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0443\u0437\u043d\u0430\u0442\u044c \u043f\u0440\u0438\u0440\u043e\u0434\u0443 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439","813f0396":"\u041a\u0430\u043a \u0432\u0438\u0434\u0438\u043c, pandas \u043d\u0435 \u0441\u043c\u043e\u0433 \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439 \u0442\u0438\u043f. \u0415\u0441\u043b\u0438 \u043f\u0440\u0438\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c\u0441\u044f \u043a \u043e\u0448\u0438\u0431\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438, \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0441\u0440\u0435\u0434\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0442\u043e\u043b\u0431\u0446\u0430 TotalSpent \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u043e\u0431\u0435\u043b \u0432 TotalSpent","a96b9546":"## \u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438","b4d2d367":"# \u041f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c. \u0418\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435","5a191434":"\u041d\u0435\u0441\u043b\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u0442\u0438\u0442\u044c, \u0447\u0442\u043e \u0441\u0442\u043e\u043b\u0431\u0435\u0446 TotalSpent \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u043c, \u043d\u043e \u0443 \u043d\u0430\u0441 \u043e\u043d \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f object. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u0441\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u043c to_numeric \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0432 \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0439","55df27d4":"## \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445","7a6fec82":"## \u0412\u0438\u0437\u0443\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432","f0943b27":"## \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\n\n1) \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043a \u043d\u0438\u043c \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c LogisticRegression. \u0422.\u0435. \u043e\u0442\u043d\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438, \u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e one-hot-encoding'\u0430.\n\n2) \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0440\u043e\u0441\u0441\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c \u0440\u0430\u0437\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0433\u0438\u043f\u0435\u0440\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 C \u0438 \u0432\u044b\u0431\u0435\u0440\u0435\u043c \u043b\u0443\u0447\u0448\u0438\u0439 (\u0431\u0443\u0434\u0435\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0421=100, 10, 1, 0.1, 0.01, 0.001) \u043f\u043e \u043c\u0435\u0442\u0440\u0438\u043a\u0435 ROC-AUC. \n\n\u0421\u043e\u0435\u0434\u0438\u043d\u0438\u043c LogisticRegression \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043e\u0434\u0438\u043d Pipeline \u0438 \u043f\u043e\u0442\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c \u0435\u0433\u043e \u0432 GridSearchCV."}}