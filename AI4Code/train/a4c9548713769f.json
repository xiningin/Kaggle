{"cell_type":{"011d2a92":"code","f4f8bfb8":"code","5cead91a":"code","36a3af8e":"code","ae080223":"code","288662d7":"code","ec3e7632":"code","a6ac83bf":"code","a7168af3":"code","03fcccc6":"code","1cd9da3f":"code","238ebdae":"code","64156c92":"code","18e07fb0":"code","b59ce86e":"code","a2a8406c":"code","6b787c86":"code","62832844":"code","07a801d1":"code","a4ab4090":"code","ca366916":"code","cc98bf5d":"code","c656b5e5":"code","c9b4d7be":"code","5b75f39f":"code","c3ac72a9":"code","abc057b7":"markdown","48fea727":"markdown","09087438":"markdown","d9cdca0e":"markdown","c165d254":"markdown","4fbf3c5a":"markdown","00c115cb":"markdown","cef0a854":"markdown"},"source":{"011d2a92":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f4f8bfb8":"import numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport datetime","5cead91a":"df = pd.read_csv('\/kaggle\/input\/seasonal-variation-in-births\/BirthMonthsData.csv')","36a3af8e":"df.sample(5)","ae080223":"df.shape","288662d7":"df.info()","ec3e7632":"df['Number_of_Births'] = df['Number_of_Births'].astype(int)","a6ac83bf":"df.info()","a7168af3":"df.isnull().sum()","03fcccc6":"df1 = df.groupby('Year')","1cd9da3f":"df1.head()","238ebdae":"df1['Number_of_Births'].sum().reset_index()","64156c92":"df2 = df1['Number_of_Births'].sum().reset_index()\ndf2.columns = ['Year','Total_Birth']\n","18e07fb0":"ax=sns.catplot(x = \"Year\", y=\"Total_Birth\", kind ='bar', data =df2, height = 8 , aspect = 3,legend = True)\n\nplt.title(\" Number of birth Year Wise \")\nplt.xlabel('Year')\nplt.ylabel('Total number of Births')\n\n\n\nplt.grid(True)","b59ce86e":"df['Month'].value_counts()","a2a8406c":"df1 = df","6b787c86":"df1 = df1.drop(df1[df1['Month'] == 'Total'].index)\n","62832844":"df1 = df1.drop(df1[df1['Month'] == 'January - March'].index)\ndf1 = df1.drop(df1[df1['Month'] == 'April - June'].index)\ndf1 = df1.drop(df1[df1['Month'] == 'July - September'].index)\ndf1 = df1.drop(df1[df1['Month'] == 'October - December'].index)\ndf1 = df1.drop(df1[df1['Month'] == 'Unknown'].index)","07a801d1":"df1 = df1.drop(df1[df1['Record Type'] == 'Vital statistics from census'].index)","a4ab4090":"df['Record Type'].value_counts()","ca366916":"plt.figure(figsize= (16,8))\nsns.countplot(df['Month'], hue = df['Record Type'])\nplt.tight_layout()\nplt.legend( \n          title =\"Record Type\",\n         \n          bbox_to_anchor =(0.85, 0,0, 1))\nplt.grid(True)\nplt.show()","cc98bf5d":"raw_company_list = df[\"Country or Area\"].value_counts()[0:25].reset_index()\ncompany_list = raw_company_list['index'].values.tolist()\ndata = df[df['Country or Area'].isin(company_list)]","c656b5e5":"plt.figure(figsize = (30,8))\nsns.countplot(data = data, x = 'Country or Area')\nplt.grid(True)\nplt.xticks(rotation=45)\nplt.xlabel(\"Country\")\nplt.ylabel(\" Total Number of Birth\")\nplt.title('Top 25 Country having maximun number of Birth')\nplt.show()","c9b4d7be":"df1= df['Reliability'].value_counts()","5b75f39f":"df['Reliability'].value_counts()","c3ac72a9":"plt.pie(df1,autopct='%.0f%%',labels=['Final figure, complete ', 'Provisional figure','Other estimate'],radius=2,explode = (0.3,0.5, 0.5),shadow=True)\nplt.legend( \n          title =\"Reliability\",\n         \n          bbox_to_anchor =(1, 0.7,0.6, 1))\nplt.show()","abc057b7":"# Please UPVOTE if you like my Notebook  !! ","48fea727":"# Data Cleaning","09087438":"# Month-wise Record Type ","d9cdca0e":"# Import Dependencies","c165d254":"#  Number of Birth Yearwise ","4fbf3c5a":"# Reliability Distribution","00c115cb":"# Thank you !!\u00b6\nPlease upvote if you liked my work :):)","cef0a854":"# Top 25 Country with maximun number of Birth"}}