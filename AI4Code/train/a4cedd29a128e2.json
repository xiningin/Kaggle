{"cell_type":{"5604ffd6":"code","5d46ec91":"code","bbedce53":"code","e85b2bfa":"code","f1e828f6":"code","eaca6e28":"code","daec62ba":"code","89e06254":"code","e44dfc35":"code","172b65d6":"code","2a1a4166":"code","1682aaec":"code","eca111a5":"code","a2015081":"code","7aca9f18":"code","bbcf3ee9":"code","784cc7e6":"code","94d264df":"code","98211ffc":"code","750d8342":"code","1f754134":"markdown","fe30f0a5":"markdown","5dc7ed2c":"markdown","8aca4982":"markdown","204d0c50":"markdown"},"source":{"5604ffd6":"import numpy as np \nimport pandas as pd \nimport matplotlib.pyplot as plt \nplt.rcParams['figure.figsize'] = (15.0, 8.0)\nimport pickle \nimport seaborn as sb \nfrom keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout\nimport warnings\nwarnings.filterwarnings('always')\nwarnings.filterwarnings('ignore')\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","5d46ec91":"#get the datasets \ncommon_path = '..\/input\/competitive-data-science-predict-future-sales\/'\ntrain = pd.read_csv(common_path+'sales_train.csv')\ntest = pd.read_csv(common_path+'\/test.csv')\nsubmission = pd.read_csv(common_path+'\/sample_submission.csv')\nitems = pd.read_csv(common_path+'\/items.csv')\nitem_cats = pd.read_csv(common_path+'\/item_categories.csv')\nshops = pd.read_csv(common_path+'\/shops.csv')","bbedce53":"#Define a function that shows some info about a dataset \ndef get_info(df):\n    #show some infos about the dataframe\n    print('+++++++++++++++++++++++++++++')\n    print(f'HEAD :',end='\\n')\n    print(df.head())\n    print('+++++++++++++++++++++++++++++')\n    print(f'INFOS :',end='\\n')\n    print(df.info())\n    print('+++++++++++++++++++++++++++++')\n    print(f'STATS :',end='\\n')\n    print(df.describe().transpose())\n    print('+++++++++++++++++++++++++++++')\n    print('Number of Null Values :',end=' ')\n    print(df.isnull().sum().sum())\n    print('+++++++++++++++++++++++++++++')\n    print(f'SHAPE :',end=' ')\n    print(df.shape)  ","e85b2bfa":"#ABOUT TRAIN SET\nget_info(train)","f1e828f6":"#ABOUT TEST SET\nget_info(test)","eaca6e28":"#ABOUT ITEMS \nget_info(items)","daec62ba":"#ABOUT ITEMS CATEGORIES \nget_info(item_cats)","89e06254":"#ABOUT SHOPS\nget_info(shops)","e44dfc35":"#get some informations on our datasets \nprint ('# of shops: ', train['shop_id'].max())\nprint ('# of items: ', train['item_id'].max())\nprint ('# of months: ',train['date_block_num'].max())\nprint ('# of categories: ', items['item_category_id'].max())\n","172b65d6":"items_per_cat = items.groupby('item_category_id').size()\ndf_cats=pd.DataFrame(data=items_per_cat,columns=['Number of Items'],index=items_per_cat.index)\ndf_cats.sort_values(by='item_category_id')","2a1a4166":"#format the dates \ntrain['date'] = pd.to_datetime(train['date'], format='%d.%m.%Y')\n#pivot the dataframe and index with item_id and shop_id\ntrain = train.pivot_table(index=['item_id', 'shop_id'],\n                            values=['item_cnt_day'],\n                            columns='date_block_num', fill_value=0)\n#reset the index \ntrain = train.reset_index()\n#show \ntrain.head()","1682aaec":"#merge the train set and the test set \ndataset = pd.merge(test, train, on=['item_id', 'shop_id'], how='left')\ndataset = dataset.fillna(0)\ndataset.head()","eca111a5":"dataset.shape","a2015081":"#drop  some columns \ndataset.drop(['shop_id', 'item_id', 'ID'], axis=1,inplace=True)\ndataset.head()","7aca9f18":"#splitting the dataset \nX_train = np.expand_dims(dataset.values[:, :-1], axis=2)\ny_train = dataset.values[:, -1:]\nX_test = np.expand_dims(dataset.values[:, 1:], axis=2)\n\nX_train.shape, y_train.shape, X_test.shape","bbcf3ee9":"#buid LSTM Network \nmodel = Sequential()\nmodel.add(LSTM(units=64, input_shape=(33, 1)))\nmodel.add(Dropout(0.3))\nmodel.add(Dense(1))\n\nmodel.compile(loss='rmse',\n              optimizer='adam',\n              metrics=['mean_squared_error'])\nmodel.summary()\n","784cc7e6":"history = model.fit(X_train, y_train,\n                    batch_size=4096, \n                    epochs=10)","94d264df":"#plot the loss function\nplt.rcParams['figure.figsize'] = (15, 8)\nplt.plot(history.history['loss'], label= 'loss(mse)')\nplt.plot(np.sqrt(history.history['mean_squared_error']), label= 'loss(rmse)')\nplt.legend(loc=1)\nplt.title('Loss Function')\nplt.ylabel('# of Epochs')","98211ffc":"# make the forecasts \npredictions = model.predict(X_test)\npredictions = predictions.clip(0, 20)\nprint(predictions[8:20])","750d8342":"submission = pd.DataFrame({'ID': test['ID'], 'item_cnt_month': predictions.ravel()})\nsubmission.to_csv('submission.csv',index=False)\nprint('Submission Made Sucessefully !!')","1f754134":"### Loading the datasets","fe30f0a5":"### EDA and Feature Engineering","5dc7ed2c":"### Under Construction...","8aca4982":"### Building LSTM Model for Forecasting the Sales","204d0c50":"### Submission"}}