{"cell_type":{"e30b6dd4":"code","e4f14294":"code","a3f379cd":"code","edab4921":"code","4888aa70":"code","0642c600":"code","15388ed4":"code","2b659211":"code","2f587720":"code","dcb0cf96":"code","02901a59":"code","6c555417":"code","2184f0d2":"code","b1d161d2":"code","e7c094ad":"code","58271a4b":"code","2760bbef":"code","10094417":"code","959c1ea4":"code","99c538d1":"code","bd786f96":"code","ead85599":"code","438fb299":"code","4407af25":"code","8f3f3adf":"code","be0a18ae":"code","7d62aea8":"code","cd20b7f4":"code","ee3ee5f3":"code","2b1d14e9":"code","9577869f":"code","638a3cd5":"code","ba7f7f86":"code","df358108":"code","c3c3d406":"code","322309e3":"code","d6b9ac29":"code","85542c45":"code","3d0941bc":"code","47bcdf07":"code","0cf4900e":"code","67a85cee":"code","2ab06c0f":"code","a637fe39":"code","d5cddd67":"code","15c78014":"code","76ea1902":"code","9979bdf8":"code","2293bc7d":"code","a464cb81":"code","e3b940f5":"code","ac27f1e2":"code","cf39bc32":"code","90231da1":"code","390c5cdf":"code","5d486332":"code","44622389":"code","e87857c0":"code","db162ed6":"code","450d763a":"code","6b8f0ea3":"code","6eee1a8b":"code","618a40be":"code","8f8e8fc3":"code","e5ae684d":"code","d43e07e8":"code","e8362ad0":"code","c36d446e":"code","6ea493c4":"code","26b466a8":"code","e33eef8b":"code","bc268556":"code","b54e7b44":"code","a375f192":"code","e670ff80":"code","eb709a57":"code","2e9a1b5a":"code","5c76ae6e":"code","b586107b":"code","d70c838b":"code","a5cbe561":"code","8c91ee68":"code","86c68272":"code","af549d99":"code","1934b7a1":"code","51150001":"code","71a08b90":"code","b6102d94":"markdown"},"source":{"e30b6dd4":"import numpy as np\nprint(np.__version__)\nimport time\nsize_of_vec = 10000\n\ndef pure_python_version():\n    t1 = time.time()\n    x = range(size_of_vec)\n    y = range(size_of_vec)\n    z = [x[i] + y[i] for i in range(len(x))]\n    return time.time() - t1\n\ndef numpy_version():\n    t1 = time.time()\n    x = np.arange(size_of_vec)\n    y = np.arange(size_of_vec)\n    z = x + y\n    return time.time() - t1\n\nt1 = pure_python_version()\nt2 = numpy_version()\n\nprint(t1, t1)\nprint(\"Numpy is in this example \" + str(t1 \/ t2) + \" faster!\")","e4f14294":"a = [1,2,3,4,5]\nb = [2,3,4,5,6]\nab = []\n\nfor i in range(0, len(a)):\n    ab.append(a[i] * b[i])\n    \nab","a3f379cd":"a = np.array([1,2,3,4,5])\nb = np.array([2,3,4,5,6])\na*b","edab4921":"a = np.random.randint(10, size = 10)","4888aa70":"a.ndim","0642c600":"a.shape","15388ed4":"a.size","2b659211":"a.dtype","2f587720":"dir(a)","dcb0cf96":"np.arange(1, 10)\nnp.arange(1, 10).reshape((3,3))","02901a59":"a = np.random.randint(10, size=10)\na[0] = 999\na[0:6]","6c555417":"m = np.random.randint(10, size=(3,5))\nm.ndim","2184f0d2":"#np.array([1,2,3,4,5,6])\n#np.zeros(10, dtype=int)\n#np.random.randint(10, 20, size=(10,10)) \n#np.random.normal(10, 4, (3, 4)) #mean: 10, std: 3","b1d161d2":"np.array([1,2,3,4,5,6])","e7c094ad":"type(np.array([1,2,3,4,5,6]))","58271a4b":"np.zeros(10, dtype=int)","2760bbef":"np.random.randint(10, 20, size=(10,10))","10094417":"np.random.normal(10, 4, (3, 4))","959c1ea4":"# step\nstep = np.array([1,2,3,4,5,6,7,8,9,10])\nstep[1:10:2]","99c538d1":"# fancy index\nv = np.arange(0,30,3)\ncatch = [1,2,3]\nv[catch]","bd786f96":"#pandas\nimport pandas as pd\ns = pd.Series([10,12,144,424,55])\ntype(s)","ead85599":"s.index","438fb299":"s.dtype","4407af25":"s.size","8f3f3adf":"s.ndim","be0a18ae":"s.values","7d62aea8":"type(s.values)","cd20b7f4":"s.head(3)","ee3ee5f3":"s.tail(3)","2b1d14e9":"#import glob\n#all_files = glob.glob(r'\/kaggle\/input\/titanic' + \"\/*.csv\")\n#file_list = [pd.read_csv(f) for f in all_files]\n#all_df = pd.concat(file_list, axis=0, ignore_index=True)\n#all_df\n\n#all_df2 = pd.concat(map(pd.read_csv, glob.glob('\/kaggle\/input\/titanic\/*.csv')))","9577869f":"import pandas as pd\ndf = pd.read_csv('..\/input\/titanic\/train.csv')","638a3cd5":"df.info()","ba7f7f86":"df.shape","df358108":"df.index","c3c3d406":"df.describe().T","322309e3":"df.isnull().values.any()","d6b9ac29":"df.isnull().sum()","85542c45":"df[\"Sex\"].value_counts()","3d0941bc":"df[\"Embarked\"].value_counts()","47bcdf07":"df[\"SibSp\"].value_counts()","0cf4900e":"# df.drop(0, axis=0).head()\n#delete_indexis = [1,2,3,4]\n#df = df.drop(delete_indexis, axis=0, inplace=True).head(10)\n#inplace=True, makes permanent change","67a85cee":"df = df.sort_values(\"PassengerId\")\ndf.index = df[\"PassengerId\"]\ndf.head()","2ab06c0f":"df.drop(\"PassengerId\", axis=1).head()","a637fe39":"df.loc[:, df.columns != 'PassengerId'].head()","d5cddd67":"df.drop(\"PassengerId\", axis=1, inplace=True)\n# df.index","15c78014":"df = df.reset_index()","76ea1902":"# df.loc[:, ~df.columns.str.contains(\"Age\")]\n# df.loc[:, df.columns.str.contains(\"Age\")].head()","9979bdf8":"df[df[\"Age\"]>50][\"Name\"]","2293bc7d":"df[df[\"Age\"]>50][\"Name\"].count()","a464cb81":"df.loc[df[\"Age\"] > 50, \"Name\"].head()","e3b940f5":"df[(df[\"Age\"] > 50) & (df[\"Sex\"] == \"female\")].head()","ac27f1e2":"df[(df[\"Age\"] > 50) & (df[\"Sex\"] == \"female\")][\"PassengerId\"].count()","cf39bc32":"# aggregation & grouping","90231da1":"# count()\n# first()\n# last()\n# mean()\n# median()\n# min()\n# max()\n# std()\n# var()\n# sum()\n# pivot table","390c5cdf":"df.loc[df[\"Age\"] > 50, [\"PassengerId\", \"Sex\"]].groupby(\"Sex\").agg({\"count\"})","5d486332":"df.loc[df[\"Age\"] > 50, [\"Age\", \"Sex\"]].groupby(\"Sex\").agg([\"mean\", \"max\"])","44622389":"df.loc[df[\"Age\"] > 50, [\"PassengerId\", \"Age\", \"Sex\"]].groupby(\"Sex\").agg({\"PassengerId\": \"count\",\n                                                                          \"Age\": \"mean\"})","e87857c0":"df.loc[:, [\"PassengerId\", \"Age\", \"Sex\"]].groupby(\"Sex\").agg({\"PassengerId\": \"count\",\n                                                                          \"Age\": [\"min\",\"max\",\"mean\"]})","db162ed6":"df.groupby([\"Sex\",\"Embarked\",\"Pclass\"]).agg({\"PassengerId\": \"count\",\n                                             \"Age\": [\"min\",\"max\",\"mean\"]})","450d763a":"agg_functions = [\"nunique\", \"first\", \"last\", \"sum\", \"var\", \"std\"]\ndf.groupby([\"Sex\",\"Embarked\",\"Pclass\"]).agg({\"PassengerId\": \"count\",\n                                             \"Age\": agg_functions})","6b8f0ea3":"#def load_titanic():\n#    return pd.read_csv('datasets\/titanic.csv')\n\n#df = load_titanic()","6eee1a8b":"df.pivot_table(values=\"Age\", index=\"Sex\", columns=\"Embarked\")","618a40be":"df.pivot_table(values=\"Age\", index=\"Sex\", columns=\"Embarked\", aggfunc=\"std\")","8f8e8fc3":"df[\"new_age\"] = pd.cut(df[\"Age\"],[0,10,18,25,40,90])\ndf.head()","e5ae684d":"df.pivot_table(\"Survived\", index=\"Sex\", columns=\"new_age\")","d43e07e8":"df.pivot_table(\"Survived\", index=[\"Sex\", \"Pclass\"], columns=\"new_age\")","e8362ad0":"def standart_scaler(col_name):\n    return (col_name - col_name.mean()) \/ col_name.std()","c36d446e":"df.loc[:, df.columns.str.contains('Age')].apply(lambda x: (x - x.mean()) \/ x.std()).head()","6ea493c4":"df.loc[:, df.columns.str.contains('Age')].apply(standart_scaler).head()","26b466a8":"df.loc[:, [\"Age\", \"Age2\", \"Age3\"]] = df.loc[:, df.columns.str.contains('Age')].apply(lambda x: (x - x.mean()) \/ x.std()).head()","e33eef8b":"df.loc[:, df.columns.str.contains('Age')] = df.loc[:, df.columns.str.contains('Age')].apply(lambda x: (x - x.mean()) \/ x.std()).head()","bc268556":"import numpy as np\nimport pandas as pd\n\nm = np.random.randint(1, 30, size=(5,3))\ndf1 = pd.DataFrame(m, columns=[\"var1\",\"var2\",\"var3\"])\n\ndf2 = df1+99\n\npd.concat([df1,df2], ignore_index=True)","b54e7b44":"df_1 = pd.DataFrame({'employees': ['john', 'dennis', 'mark', 'maria'],\n                    'group': ['accounting', 'engineering', 'engineering', 'hr']})\n\ndf_2 = pd.DataFrame({'employees': ['mark', 'john', 'dennis', 'maria'],\n                    'start_date': [2010, 2009, 2014, 2019]})\n\npd.merge(df_1, df_2, on=\"employees\")","a375f192":"df_3 = pd.merge(df_1, df_2)\ndf_4 = pd.DataFrame({'group': ['accounting', 'engineering', 'hr'],\n                    'manager': ['Caner', 'Mustafa', 'Berkcan']})\n\ndf_6=pd.merge(df_3, df_4)","e670ff80":"df_5 = pd.DataFrame({'group': ['accounting', 'accounting', ' engineering', 'engineering', 'hr', 'hr'],\n                    'skills': ['math', 'excel', 'coding', 'linux', 'excel', 'management']})\n\npd.merge(df_6,df_5)","eb709a57":"import matplotlib.pyplot as plt\ndf['Sex'].value_counts().plot(kind='bar', rot=0)\nplt.show()\n#titanic","2e9a1b5a":"import seaborn as sns\ndf = sns.load_dataset('tips')\ndf['sex'].value_counts().plot(kind='bar', rot=0)\nplt.show()\ndf.head()\n#tips","5c76ae6e":"df[\"sex\"].value_counts()\nsns.countplot(x=df[\"sex\"], data=df)\nplt.show()","b586107b":"# if numeric variable\n# histogram\n# boxplot\nimport seaborn as sns\ndf = sns.load_dataset('tips')\nplt.hist(df[\"total_bill\"])\nplt.show()","d70c838b":"plt.boxplot(df[\"total_bill\"])\nplt.show()","a5cbe561":"# histogram with pandas\ndf[\"total_bill\"].hist()\nplt.show()","8c91ee68":"# histogram with seaborn\nsns.boxplot(x=df[\"total_bill\"])\nplt.show()","86c68272":"# marker\ny = np.array([13, 28, 11, 100])\n\nplt.plot(y, marker='o')\nplt.show()","af549d99":"plt.plot(y, marker='*')\nplt.show()","1934b7a1":"x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])\nplt.plot(x,y)\n#title\nplt.title(\"this is the main title\")\n# naming the x-axis\nplt.xlabel(\"x-axis nomenclature\")\n# naming the y-axis\nplt.ylabel(\"y-axis nomenclature\")\n# grid\nplt.grid()\n\nplt.show()","51150001":"x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])\nplt.subplot(1,2,1)\nplt.title(\"1\")\nplt.plot(x,y)\n\nx = np.array([8, 8, 9, 9, 10, 10, 11, 11, 12, 12])\ny = np.array([24, 25, 26, 27, 28, 29, 30, 31, 32, 33])\nplt.subplot(1,2,2)\nplt.title(\"2\")\nplt.plot(x,y)","71a08b90":"x = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])\nplt.subplot(1,3,1)\nplt.title(\"1\")\nplt.plot(x,y)\n\nx = np.array([8, 8, 9, 9, 10, 10, 11, 11, 12, 12])\ny = np.array([24, 25, 26, 27, 28, 29, 30, 31, 32, 33])\nplt.subplot(1,3,2)\nplt.title(\"2\")\nplt.plot(x,y)\n\nx = np.array([80, 85, 90, 95, 100, 105, 110, 115, 120, 125])\ny = np.array([240, 250, 260, 270, 280, 290, 300, 310, 320, 330])\nplt.subplot(1,3,3)\nplt.title(\"3\")\nplt.plot(x,y)","b6102d94":"<h2 style='background:#11489c; border:0; color:white'><center>Beginner Data Analysis<\/center><\/h2>\n\nData analysis at the beginner level is covered with the python programming language on data science topics\n\n* <span style=\"color:blue\">Numpy<\/span>\n* <span style=\"color:blue\">Pandas<\/span>\n* <span style=\"color:blue\">Data Visualization: Seaborn & Matplotlib<\/span>\n* <span style=\"color:blue\">Advanced Functional EDA<\/span>\n* <span style=\"color:blue\">Why Numpy?<\/span>\n* <span style=\"color:blue\">Creating Numpy Arrays<\/span>\n* <span style=\"color:blue\">Attributes of Numpy Arrays<\/span>\n* <span style=\"color:blue\">Reshaping<\/span>\n* <span style=\"color:blue\">Index Selection<\/span>\n* <span style=\"color:blue\">Slicing<\/span>\n* <span style=\"color:blue\">Fancy Index<\/span>\n* <span style=\"color:blue\">Conditions on Numpy<\/span>\n* <span style=\"color:blue\">Mathematical Operations<\/span>\n\n<a href=\"https:\/\/ibb.co\/pv0qnV7\"><img src=\"https:\/\/i.ibb.co\/BVzkwWp\/0d7a3df0-cb29-4494-8e8f-4602079b5c88.png\" alt=\"0d7a3df0-cb29-4494-8e8f-4602079b5c88\" border=\"0\"><\/a>"}}