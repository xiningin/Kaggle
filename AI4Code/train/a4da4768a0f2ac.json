{"cell_type":{"4c5c8cdd":"code","c2c8506d":"code","6574cd1b":"code","990e28a0":"code","b2ca3304":"code","cc44b4a3":"code","9b2a547d":"code","9264bfef":"code","69a0bfe1":"code","bfb6f231":"code","5a97cc4b":"code","45aa7941":"code","e31df6d8":"code","f7d78ead":"code","ad676d60":"code","0d0aba21":"code","d783e14c":"code","bd1c6619":"code","b3c133cb":"code","745338e1":"code","540fda46":"code","cf803dea":"code","3872ba41":"code","b041d11b":"code","312ca903":"code","0962577b":"code","8ea8812f":"code","007dc9c2":"code","757e7ff5":"code","5a94a4f8":"code","84731ceb":"code","834d490f":"code","639f67a9":"code","c8b54eb0":"code","024b8448":"code","8e07ac64":"code","b3cfb6bd":"code","e93707f7":"code","700e71c8":"code","5fb4cc33":"code","5e4c4897":"code","0f5cb1e5":"code","655cbdfe":"code","58b20339":"code","d4a5dfc1":"markdown","ea16c3fe":"markdown","fe7cb463":"markdown","93ac1c7f":"markdown","31e3b7d2":"markdown","60de722f":"markdown","f63959f0":"markdown","c9858577":"markdown","55f494d4":"markdown","97da284b":"markdown","a7ee5a70":"markdown","cfd844e0":"markdown","375d4b1e":"markdown","892831ed":"markdown","0fea1c40":"markdown","14697112":"markdown","1e405966":"markdown"},"source":{"4c5c8cdd":"!pip install pycaret\n!pip install sklearn\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.model_selection import train_test_split\nfrom pycaret.classification import *\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score,classification_report,mean_squared_error,mean_absolute_error,confusion_matrix\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.ensemble import ExtraTreesClassifier\nimport pandas_profiling as pp\nfrom imblearn.over_sampling import SMOTE","c2c8506d":"df_1 = pd.read_csv(\"..\/input\/epitope-prediction\/input_bcell.csv\")\ndf_2 = pd.read_csv(\"..\/input\/epitope-prediction\/input_sars.csv\")\ndf_test = pd.read_csv(\"..\/input\/epitope-prediction\/input_covid.csv\")","6574cd1b":"df_train = pd.concat([df_1,df_2])","990e28a0":"df_train.head()","b2ca3304":"df_train.isnull().sum()","cc44b4a3":"df_train.corr()","9b2a547d":"df_test.head()","9264bfef":"pp.ProfileReport(df_train)","69a0bfe1":"def find_unique_length(df):\n    list = []\n    for i in df:\n        if  len(i) not in list:\n            list.append(len(i))\n    return len(list)","bfb6f231":"find_unique_length((df_train[\"protein_seq\"]))","5a97cc4b":"len(df_train[\"protein_seq\"].value_counts())","45aa7941":"find_unique_length(df_train[\"parent_protein_id\"])","e31df6d8":"len(df_train[\"parent_protein_id\"].value_counts())","f7d78ead":"df_train.dtypes","ad676d60":"df_train['protein_seq_length'] = df_train['protein_seq'].astype(str).map(len)\ndf_train['peptide_seq_length'] = df_train['peptide_seq'].astype(str).map(len)\ndf_train['parent_protein_id_length'] = df_train['parent_protein_id'].astype(str).map(len)","0d0aba21":"df_train['peptide_length']=df_train['end_position'] - df_train['start_position'] + 1","d783e14c":"df_train.head()","bd1c6619":"df_train.corr()","b3c133cb":"num_vars=[x for x in df_train.columns if df_train[x].dtypes!='O']","745338e1":"for i in num_vars:\n    fig=px.box(df_train, y=i, color='target')\n    fig.show()","540fda46":"fig, axes=plt.subplots(8,2, figsize=(20,20))\nfor i,j in enumerate(num_vars):\n    ax=axes[int(i\/2), i%2]\n    sns.kdeplot(df_train[j], ax=ax)","cf803dea":"df_train = df_train.drop([\"parent_protein_id\",\"protein_seq\",\"peptide_seq\",\"start_position\",\"end_position\"],axis =1)","3872ba41":"df_train.head()","b041d11b":"X = df_train.drop(\"target\",axis = 1)\nY = df_train[\"target\"]","312ca903":"smote = SMOTE()\nX, Y = smote.fit_resample(X, Y)","0962577b":"df_train = pd.concat([X,Y],axis = 1)","8ea8812f":"train,test = train_test_split(df_train, test_size=0.1,random_state= 27)","007dc9c2":"experiment = setup(\n    data = train,\n    target = 'target',\n    normalize = True\n)","757e7ff5":"compare_models()","5a94a4f8":"X = MinMaxScaler().fit_transform(X)","84731ceb":"X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size = 0.25, random_state = 42)","834d490f":"print('Training Features Shape:', X_train.shape)\nprint('Training Labels Shape:', X_test.shape)\nprint('Testing Features Shape:', Y_train.shape)\nprint('Testing Labels Shape:', Y_test.shape)","639f67a9":"rf = RandomForestClassifier(n_estimators = 1000, random_state = 42)","c8b54eb0":"rf.fit(X_train,Y_train)","024b8448":"Y_pred_rf = rf.predict(X_test)","8e07ac64":"etf = ExtraTreesClassifier(n_estimators=100, random_state=0)","b3cfb6bd":"etf.fit(X_train, Y_train)","e93707f7":"Y_pred_etf = etf.predict(X_test)","700e71c8":"print(accuracy_score(Y_pred_rf,Y_test))","5fb4cc33":"print(confusion_matrix(Y_pred_rf,Y_test))","5e4c4897":"print(classification_report(Y_pred_rf,Y_test))","0f5cb1e5":"print(accuracy_score(Y_pred_etf,Y_test))","655cbdfe":"print(confusion_matrix(Y_pred_etf,Y_test))","58b20339":"print(classification_report(Y_pred_etf,Y_test))","d4a5dfc1":"<center><h1 class=\"list-group-item list-group-item-success\">COVID-19\/SARS B-cell Epitope Prediction<\/center>","ea16c3fe":"## Thank You \ud83e\udd17\n### I hope you had a good time reading my notebook. Pls do support and comment! \ud83d\ude0e","fe7cb463":"# Data Normalization","93ac1c7f":"# Data Upscaling","31e3b7d2":"# Data Preprocessing","60de722f":"![](\"https:\/\/i.pinimg.com\/originals\/86\/74\/a9\/8674a918f3765e5ab9f1191ad5811713.gif\")","f63959f0":"# Importing Data","c9858577":"### Extra trees classifier performs better than Random forest !! \ud83d\ude00","55f494d4":"# Evaluation Metrics","97da284b":"# Training Model","a7ee5a70":"![image info](https:\/\/i.pinimg.com\/originals\/86\/74\/a9\/8674a918f3765e5ab9f1191ad5811713.gif)","cfd844e0":"## Introduction\nDue to spread of COVID-19, vaccine development is beingdemanded as soon as possible. Despite the importance of data analysis in vaccine development, there are not many simple data sets that data analysts can handle. We published the dataset and the sample code for Bcell epitope prediction, one of the key research topics in vaccine development, available for free. This dataset was developed during our research process and the data contained in it was obtained from IEDB and UniProt. We would like to express our deepest gratitude to everyone who helped us. We briefly describe the B-cell epitope predictions covered by this dataset.  For details, please refer to our paper, our blog (only in Japanese), and others. B-cells inducing antigen-specific immune responses in vivo produce large amounts of antigen-specific antibodies by recognizing the subregions (epitope regions) of antigen proteins. They can inhibit their functioning by binding antibodies to antigen proteins. Predicting of epitope regions is beneficial for the design and development of vaccines aimed to induce antigen-specific antibody production. We believe that this dataset and code will be widely useful not only for COVID-19 but also for future medical data analysis.\n\nInformation on whether or not an amino acid peptide exhibited antibody-inducing activity (marked by an activity label) could be obtained from IEDB, which was used in many previous studies. Accordingly, this information was used as the label data. We also obtained the epitope candidate amino acid sequences (peptides) and the activity label data from the B-cell epitope data provided in IEDB. The presented antibody proteins were restricted to IgG that constituted the most recorded type in IEDB. For convenience, we excluded records representing different quantitative measures of antibody activity for the same peptide from experiments. The epitope data obtained from IEDB corresponded to the five types of activity: \"Positive-High,\" \"Positive-Intermediate,\" \"Positive-Low,\" \"Positive,\" and \"Negative.\" However, due to the limited number of data elements marked with the \"Positive-High,\" \"Positive-Intermediate,\" and \"Positive-Low\" labels, we equally considered these labels as \"Positive\", thereby attributing the task to a binary estimation.\n\n\"![image.png](attachment:image.png)\n## Content\nThis contains three data files:\n\n<b>input_bcell.csv<\/b> : this is our main training data. \nThe number of rows is 14387 for all combinations of 14362 peptides and 757 proteins.<br>\n<b>input_sars.csv<\/b> : this is also our main training data. The number of rows is 520.<br>\n<b>input_covid.csv<\/b> : this is our target data. there is no label data in columns.<br>\n\nAll of three datasets consists of information of protein and peptide:\n\n<b>parent_protein_id<\/b> : parent protein ID<br>\n<b>protein_seq<\/b> : parent protein sequence<br>\n<b>start_position<\/b> : start position of peptide<br>\n<b>end_position<\/b> : end position of peptide<br>\n<b>peptide_seq<\/b> : peptide sequence<br>\n<b>chou_fasman<\/b> : peptide feature, \u03b2 turn<br>\n<b>emini<\/b> : peptide feature, relative surface accessibility<br>\n<b>kolaskar_tongaonkar<\/b> : peptide feature, antigenicity<br>\n<b>parker<\/b> : peptide feature, hydrophobicity<br>\n<b>isoelectric_point<\/b> : protein feature<br>\n<b>aromacity<\/b>: protein feature<br>\n<b>hydrophobicity<\/b> : protein feature<br>\n<b>stability<\/b> : protein feature<br>\n<b>target<\/b> : antibody valence (target value)\n\n## Overview\n<font size = 3.5 color = \"blue\">\n<li>Importing Packages<\/li>\n<li>Importing Data<\/li>\n<li>Analysing Data<\/li>\n<li>Data Overview<\/li>\n<li>Data Preprocessing<\/li>\n<li>Data Visualization<\/li>\n<li>Data Upscaling<\/li>\n<li>Models Comparison<\/li>\n<li>Data Normalization<\/li>\n<li>Training Models<\/li>\n<li>Evaluation Metrics<\/li>\n","375d4b1e":"# Data Overview","892831ed":"# Analysing Data","0fea1c40":"# Data Visualization","14697112":"# Importing Packages","1e405966":"# Models Comparison"}}