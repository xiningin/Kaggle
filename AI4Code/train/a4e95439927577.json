{"cell_type":{"0ea38e09":"code","8c806222":"code","13859754":"code","fc69fce2":"code","020005ba":"code","038b7d82":"code","3d761039":"code","a8a4c3fc":"code","c2e8dcb1":"code","aba4d1e8":"code","1c21d767":"code","e255937c":"code","39933f56":"code","8d353a89":"markdown","8b772370":"markdown","3626dbad":"markdown"},"source":{"0ea38e09":"# load library\nimport os\nimport json\nimport numpy as np\nimport pandas as pd","8c806222":"# read train, test, sample and show shape of all.\ndf_train = pd.read_json('\/kaggle\/input\/stanford-covid-vaccine\/train.json', lines=True)\ndf_test = pd.read_json('\/kaggle\/input\/stanford-covid-vaccine\/test.json', lines=True)\ndf_sample = pd.read_csv('..\/input\/stanford-covid-vaccine\/sample_submission.csv')\n\ndf_train.shape, df_test.shape, df_sample.shape","13859754":"# concat train and test.\ndf_train['dataset'] = 'train'\ndf_test['dataset'] = 'test'\ndf_all = pd.concat([df_train, df_test])","fc69fce2":"df_train.head()","020005ba":"df_test.head()","038b7d82":"df_sample.head()","3d761039":"df_all.info()","a8a4c3fc":"# read npy data file\nbpps_list = os.listdir('..\/input\/stanford-covid-vaccine\/bpps\/')\nbpps_npy = np.load(f'..\/input\/stanford-covid-vaccine\/bpps\/{bpps_list[0]}')\nprint('Count of npy files: ', len(bpps_list))\nprint('Size of image: ', bpps_npy.shape)","c2e8dcb1":"# show the images of npy data.\nimport matplotlib.pyplot as plt\nfrom skimage import color\nfrom skimage import io\n\nfig = plt.figure(figsize=(15, 15))\nfor i, f in enumerate(bpps_list):\n    if i == 25:\n        break\n    sub = fig.add_subplot(5,5, i + 1)\n    example_bpps = np.load(f'..\/input\/stanford-covid-vaccine\/bpps\/{f}')\n    sub.imshow(example_bpps,interpolation='nearest')\n    sub.set_title(f)\nplt.tight_layout()\nplt.show()\n","aba4d1e8":"a = []\nb = []\nfor i, f in enumerate(bpps_list):\n    test_bpps = np.load(f'..\/input\/stanford-covid-vaccine\/bpps\/{f}')\n    for j, test_bpp in enumerate(test_bpps):\n        a += [os.path.splitext(f)[0] + \"_\" + str(j)]\n        b += [test_bpp.mean()]\n        \ndf_npy=pd.DataFrame(data={'id_seqpos': a, 'mean_npy': b})","1c21d767":"df_npy['mean_npy2']=df_npy['mean_npy']\/df_npy['mean_npy'].mean()","e255937c":"df_train['mean_reactivity'] = df_train['reactivity'].apply(lambda x: np.mean(x))\ndf_train['mean_deg_Mg_pH10'] = df_train['deg_Mg_pH10'].apply(lambda x: np.mean(x))\ndf_train['mean_deg_pH10'] = df_train['deg_pH10'].apply(lambda x: np.mean(x))\ndf_train['mean_deg_Mg_50C'] = df_train['deg_Mg_50C'].apply(lambda x: np.mean(x))\ndf_train['mean_deg_50C'] = df_train['deg_50C'].apply(lambda x: np.mean(x))\n\nmean_react = df_train['mean_reactivity'].mean()\nmean_deg_Mg_pH10 = df_train['mean_deg_Mg_pH10'].mean()\nmean_deg_pH10 = df_train['mean_deg_pH10'].mean()\nmean_deg_Mg_50C = df_train['mean_deg_Mg_50C'].mean()\nmean_deg_50C = df_train['mean_deg_50C'].mean()\n\ndf_sample = pd.merge(df_sample, df_npy, on='id_seqpos', how='left')\n\ndf_sample['reactivity'] = mean_react\ndf_sample['deg_Mg_pH10'] = mean_deg_Mg_pH10\ndf_sample['deg_pH10'] = mean_deg_pH10\ndf_sample['deg_Mg_50C'] = mean_deg_Mg_50C\ndf_sample['deg_50C'] = mean_deg_50C\n\ndf_sample['reactivity'] = df_sample['reactivity'] * df_sample['mean_npy2'] \ndf_sample['deg_Mg_pH10'] = df_sample['deg_Mg_pH10'] * df_sample['mean_npy2'] \ndf_sample['deg_pH10'] = df_sample['deg_pH10'] * df_sample['mean_npy2'] \ndf_sample['deg_Mg_50C'] = df_sample['deg_Mg_50C'] * df_sample['mean_npy2'] \ndf_sample['deg_50C'] = df_sample['deg_50C'] * df_sample['mean_npy2'] \n\ndf_sample.drop(columns=['mean_npy', 'mean_npy2'], inplace=True)","39933f56":"df_sample.to_csv('submission.csv', index=False)\ndf_sample.head()","8d353a89":"# Reading Json Files","8b772370":"# Submission\nThere 5 columns will be scored.(as below)<br><br>\n*reactivity, deg_Mg_pH10, deg_pH10, deg_Mg_50C, deg_50C*","3626dbad":"# Reading Numpy Data"}}