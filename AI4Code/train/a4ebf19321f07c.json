{"cell_type":{"c3f23096":"code","554ee499":"code","99c222f0":"code","8ae3de33":"code","2444ea61":"code","7406b6ad":"code","bab1cf50":"code","1b5bcd8c":"code","83ca900f":"code","982c02ea":"code","2de41146":"code","a3c24875":"code","4e5ecb0d":"code","618468a6":"code","71214ea5":"code","9069f1db":"code","c08a11eb":"code","2dfa6902":"code","dfb8ad97":"code","9c739970":"code","912272fb":"code","6c60291a":"code","26c679d0":"code","cfd0158e":"code","affaeefe":"code","9d81b0f0":"code","88103b3a":"code","bb15a65c":"code","f6e7c063":"code","f9cc4d08":"code","4f050f55":"code","ae4b772a":"code","ed164d54":"code","e29abc23":"markdown","91df9d63":"markdown","977b73f8":"markdown","da6ab58f":"markdown","764502f6":"markdown","6b81f772":"markdown","a6405e9c":"markdown","0607c8bd":"markdown","6b786263":"markdown","ada06bd5":"markdown","6192d7f4":"markdown","2fb03317":"markdown","a1f33c29":"markdown","140b7494":"markdown","7c9e19e1":"markdown","6b6b14c3":"markdown","2806247f":"markdown","8f4cb7ac":"markdown","78166295":"markdown","924cda5e":"markdown","00415415":"markdown"},"source":{"c3f23096":"import numpy as np\nimport pandas as pd\nimport math\nimport numpy as np\nimport missingno as msno\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nplt.style.use('seaborn-darkgrid')\npalette = plt.get_cmap('Set2')","554ee499":"df=pd.read_csv(\"..\/input\/telecom-users-dataset\/telecom_users.csv\")","99c222f0":"df","8ae3de33":"df.dtypes","2444ea61":"df.TotalCharges = df.TotalCharges.replace(' ', np.NaN)\ndf = df.dropna()\ndf.TotalCharges = pd.to_numeric(df.TotalCharges)","7406b6ad":"df.dtypes","bab1cf50":"import plotly.express as px\nfig = px.scatter(df, x=\"tenure\", y=\"TotalCharges\", color=\"Churn\",\n                 size='TotalCharges', hover_data=['tenure'], color_discrete_sequence=px.colors.qualitative.Set2)\n\nfig.update_layout(title_text='Total Charge vs Tenure', template='ggplot2')\n\nfig.update_xaxes(title_text=\"Tenure\")\n\nfig.update_yaxes(title_text=\"Total Charge\")\n\nfig.show()","1b5bcd8c":"import plotly.express as px\nfig = px.scatter(df, x=\"tenure\", y=\"MonthlyCharges\", color=\"Churn\",\n                 size='TotalCharges', hover_data=['tenure'], color_discrete_sequence=px.colors.qualitative.Pastel)\n\nfig.update_layout(title_text='Monthly Charge vs Tenure', template='ggplot2')\n\nfig.update_xaxes(title_text=\"Tenure\")\n\nfig.update_yaxes(title_text=\"Monthly Charge\")\n\nfig.show()","83ca900f":"gender=df[\"gender\"].value_counts().to_frame()\ngender = gender.reset_index()\n\nimport plotly.express as px\nfig = px.pie(gender, values='gender', names='index', color_discrete_sequence=px.colors.sequential.Reds)\nfig.update_layout(title_text='Gender of the Clients', width=700,\n    height=500, template='ggplot2')\n\nfig.show()","982c02ea":"import plotly.graph_objects as go\n\nismarried=df['Partner'].value_counts()\n\nx, y = ismarried.index, ismarried\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,300,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Clients: married or unmarried?', width=600,\n    height=500, template='ggplot2')\nfig.show()","2de41146":"import plotly.express as px\nimport numpy as np\n\ntenure = df['tenure']\n# create the bins\ncounts, bins = np.histogram(tenure, bins=range(0,tenure.max(),5))\nbins = 0.5 * (bins[:-1] + bins[1:])\n\nfig = px.bar(x=bins, y=counts, labels={'x':'Tenure', 'y':'Count'})\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1, opacity=0.8)\nfig.update_layout(title_text='How long the services are being used by the clients?', width=1000,\n    height=500, template='ggplot2')\nfig.show()","a3c24875":"phone_services=df['PhoneService'].value_counts()\nphone_services","4e5ecb0d":"import plotly.express as px\nimport numpy as np\n\nphone_services=df['PhoneService'].value_counts()\n\nx, y = phone_services.index, phone_services\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,280)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Number of customers using mobiles', width=600,\n    height=500, template='ggplot2')\nfig.show()","618468a6":"df_ = pd.DataFrame()\ndf_['response'] = df.MultipleLines.unique().tolist()\nother_servises = ['MultipleLines', 'InternetService', 'OnlineSecurity',\n                  'OnlineBackup', 'DeviceProtection', 'TechSupport',\n                  'StreamingTV', 'StreamingMovies']\n\nfor i in other_servises:\n    \n    df_[i] = df[i].value_counts().values","71214ea5":"df_","9069f1db":"from plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfig = make_subplots(rows=4, cols=2)\n\nfig.add_trace(go.Bar(x=df_.response, y=df_.MultipleLines),row=1, col=1)\nfig.add_trace(go.Bar(x=df_.response, y=df_.InternetService),row=1, col=2)\nfig.add_trace(go.Bar(x=df_.response, y=df_.OnlineSecurity), row=2, col=1)\nfig.add_trace(go.Bar(x=df_.response, y=df_.OnlineBackup),2, 2)\nfig.add_trace(go.Bar(x=df_.response, y=df_.DeviceProtection), 3, 1)\nfig.add_trace(go.Bar(x=df_.response, y=df_.TechSupport), 3, 2)\nfig.add_trace(go.Bar(x=df_.response, y=df_.StreamingTV), 4, 1)\nfig.add_trace(go.Bar(x=df_.response, y=df_.StreamingMovies), 4, 2)\n\n# Update xaxis properties\nfig.update_xaxes(title_text=\"MultipleLines\", row=1, col=1)\nfig.update_xaxes(title_text=\"InternetService\", row=1, col=2)\nfig.update_xaxes(title_text=\"OnlineSecurity\", row=2, col=1)\nfig.update_xaxes(title_text=\"OnlineBackup\", row=2, col=2)\nfig.update_xaxes(title_text=\"DeviceProtection\", row=3, col=1)\nfig.update_xaxes(title_text=\"TechSupport\", row=3, col=2)\nfig.update_xaxes(title_text=\"StreamingTV\", row=4, col=1)\nfig.update_xaxes(title_text=\"StreamingMovies\", row=4, col=2)\n\n# Update yaxis properties\nfig.update_yaxes(title_text=\"Count\", row=1, col=1)\nfig.update_yaxes(title_text=\"Count\", row=1, col=2)\nfig.update_yaxes(title_text=\"Count\", row=2, col=1)\nfig.update_yaxes(title_text=\"Count\", row=2, col=2)\nfig.update_yaxes(title_text=\"Count\", row=3, col=1)\nfig.update_yaxes(title_text=\"Count\", row=3, col=2)\nfig.update_yaxes(title_text=\"Count\", row=4, col=1)\nfig.update_yaxes(title_text=\"Count\", row=4, col=2)\n\nfig.update_traces(marker_color='rgb(225,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=1, col=1)\nfig.update_traces(marker_color='rgb(225,202,202)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=1, col=2)\nfig.update_traces(marker_color='rgb(202,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=2, col=1)\nfig.update_traces(marker_color='rgb(250,202,230)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=2, col=2)\nfig.update_traces(marker_color='rgb(202,280,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=3, col=1)\nfig.update_traces(marker_color='rgb(250,202,290)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=3, col=2)\nfig.update_traces(marker_color='rgb(280,250,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=4, col=1)\nfig.update_traces(marker_color='rgb(210,280,230)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6, row=4, col=2)\n\n# Update title and height\nfig.update_layout(title_text=\"Customers who use additional services\", height=1200, width=1000, template='ggplot2')\n\nfig.update_layout(coloraxis=dict(colorscale='IceFire'), showlegend=False)\nfig.show()","c08a11eb":"contract=df['Contract'].value_counts()\n\nx, y = contract.index, contract\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(225,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Contracts vs Number of clients', width=600,\n    height=500, template='ggplot2')\nfig.show()","2dfa6902":"billing=df['PaperlessBilling'].value_counts()\n\nx, y = billing.index, billing\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,158,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Paperless Biling?', width=600,\n    height=500, template='ggplot2')\nfig.show()","dfb8ad97":"payment=df['PaymentMethod'].value_counts()\n\nx, y = payment.index, payment\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,222,158)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Clients using mode of payment', width=600,\n    height=500, template='ggplot2')\nfig.show()","9c739970":"charge=df['MonthlyCharges'].value_counts().to_frame()\ncharge = charge.reset_index()\ncharge.columns = ['Monthly Charge', 'MonthlyCharges']\n\n\nfig = px.histogram(charge, x=\"Monthly Charge\", y=\"MonthlyCharges\",\n                   marginal=\"box\",\n                   hover_data=charge.columns)\n\nfig.update_traces(marker_color='rgb(158,225,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\n\nfig.update_layout(title_text='Monthly Payment Data', width=800,\n    height=500, template='ggplot2')\n\nfig.show()","912272fb":"#Removing usless data\ndrop_elements=['Unnamed: 0','customerID','Churn']\ntrain=df.drop(drop_elements, axis=1)\ntest=df['Churn']","6c60291a":"# Label Encoding encoder\nfrom sklearn import preprocessing\nfrom sklearn.preprocessing import LabelEncoder\n\n# Multiple column label encoding with dtype = object\nfor i in train.columns:\n    if 'object' in str(train[str(i)].dtype):\n        train[str(i)] = train[str(i)].astype('category').cat.codes \n\nprint(train.shape)\ntrain.head()","26c679d0":"plt.figure(figsize=(15, 8))\nsns.heatmap(train.corr(method='spearman'), annot=True, vmin=-1.0, vmax=1.0, cmap=sns.color_palette(\"RdBu_r\", 15))\nplt.show()","cfd0158e":"depends=df['Dependents'].value_counts()\n\nx, y = depends.index, depends\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y,\n            hovertext=['27% market share', '24% market share', '19% market share'])])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,202)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='Dependents?', width=600,\n    height=500, template='ggplot2')\nfig.show()","affaeefe":"streamingtv=df['StreamingTV'].value_counts()\n\nx, y = streamingtv.index, streamingtv\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y)])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,202,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='No of Clients streaming TV', width=600,\n    height=500, template='ggplot2')\nfig.show()","9d81b0f0":"streamingmov=df['StreamingMovies'].value_counts()\n\nx, y = streamingmov.index, streamingmov\n\n# Use the hovertext kw argument for hover text\nfig = go.Figure(data=[go.Bar(x=x, y=y)])\n# Customize aspect\nfig.update_traces(marker_color='rgb(158,158,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\nfig.update_layout(title_text='No of Clients streaming Movies', width=600,\n    height=500, template='ggplot2')\nfig.show()","88103b3a":"techsupport=df[\"TechSupport\"].value_counts().to_frame()\ntechsupport = techsupport.reset_index()\n\nimport plotly.express as px\nfig = px.pie(techsupport, values='TechSupport', names='index', color_discrete_sequence=px.colors.sequential.Blues)\nfig.update_layout(title_text='Are clients getting tech support', width=700,\n    height=500, template='ggplot2')\n\nfig.show()","bb15a65c":"churn=df['Churn'].value_counts().to_frame()\nchurn = churn.reset_index()\n\n\nimport plotly.express as px\nfig = px.pie(churn, values='Churn', names='index', color_discrete_sequence=px.colors.sequential.Reds)\nfig.update_layout(title_text='Are clients getting tech support', width=700,\n    height=500, template='ggplot2')\n\nfig.show()","f6e7c063":"tot_charge_gender = df.groupby('SeniorCitizen')['TotalCharges'].agg('mean')\ntot_charge_gender","f9cc4d08":"tot_charge_churn = df.groupby('Churn')['TotalCharges'].agg('mean')\ntot_charge_churn","4f050f55":"import plotly.graph_objects as go\n\ny = tot_charge_churn.values.tolist()\nx = tot_charge_churn.index.tolist()\n\n# Create traces\nfig = go.Figure(data=[go.Bar(x=x, y=y)])\nfig.add_trace(go.Scatter(x=x, y=y,\n                    name='Total Charge vs Churn'))\n\nfig.update_layout(title_text='Total Charge vs Churn', width=600,\n    height=500, template='ggplot2')\n\nfig.update_traces(marker_color='rgb(158,158,225)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\n\nfig.update_xaxes(title_text=\"Churned?\")\n\nfig.update_yaxes(title_text=\"Average Total Charge\")\n\n\nfig.show()","ae4b772a":"import plotly.graph_objects as go\n\ny = tot_charge_gender.values.tolist()\nx = tot_charge_gender.index.tolist()\n\n# Create traces\nfig = go.Figure(data=[go.Bar(x=x, y=y)])\nfig.add_trace(go.Scatter(x=x, y=y,\n                    name='Total Charge vs Senior Citizen'))\n\nfig.update_layout(title_text='Total Charge vs Senior Citizen', width=600,\n    height=500, template='ggplot2')\n\nfig.update_traces(marker_color='rgb(158,158,158)', marker_line_color='rgb(8,48,107)',\n                  marker_line_width=1.5, opacity=0.6)\n\nfig.update_xaxes(title_text=\"Senior Citizen?\")\nfig.update_yaxes(title_text=\"Average Total Charge\")\n\n\nfig.show()","ed164d54":"import plotly.graph_objects as go\nfig = go.Figure(data=[go.Scatter(x=df.MonthlyCharges, y=df.TotalCharges, mode='markers', marker=dict(size=[10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\n                color=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))])\nfig.update_layout(title_text='Monthly Charge vs Total Charge',\n    height=500, template='ggplot2')\n\nfig.update_xaxes(title_text=\"Monthly Charges\")\n\nfig.update_yaxes(title_text=\"Total Charge\")\n\nfig.show()","e29abc23":"## Clients' marital status","91df9d63":"## Monthly charges of the clients","977b73f8":"## Paperless Biling?","da6ab58f":"## Payment methods used by the Clients","764502f6":"## Number of customers using mobiles","6b81f772":"## Clients who stream Movies","a6405e9c":"## Clients who stream TV","0607c8bd":"## What are the additional services being used by the customers?","6b786263":"## Realtionship of Churn and Total Charge","ada06bd5":"## EDA of Telecom Customer Churn Data","6192d7f4":"## Corelation of the features","2fb03317":"## Relationship of Churn and Charges","a1f33c29":"## Thank you for visiting! PLease upvote if you like it! ","140b7494":"## Are the clients dependent or not?","7c9e19e1":"## How long the services are being used by the clients?","6b6b14c3":"## Count of contract-lengths","2806247f":"## How many gender-based data-points do we have?","8f4cb7ac":"## Relationship between Monthly & Total charges","78166295":"## Are they getting tech-support?","924cda5e":"## Are the Senior Citizens paying the right amount?","00415415":"## Did the customer churn? :( "}}