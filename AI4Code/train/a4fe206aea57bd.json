{"cell_type":{"dc6bf102":"code","d8060e0d":"code","c1892ece":"code","add72722":"code","7ead2940":"code","0e0ab87d":"code","6fa1e004":"code","53578c54":"code","174c2e26":"code","840ec37c":"code","abce4dfd":"code","722f1dfd":"code","79b1226d":"code","09ae1555":"code","0654c0ff":"code","3547a486":"code","8909bba9":"code","68f567db":"code","bdb24a44":"code","ccb9866c":"code","387eb92e":"code","478765ab":"code","9c3577a5":"code","a5bdda70":"code","bc16c839":"code","b3a5ef5d":"code","08338ff1":"code","f672d455":"code","0f850e74":"code","0c7c9819":"code","5c8f6fe6":"code","86d82a8e":"code","d48b856a":"code","81f61fab":"code","3e1d5692":"code","feabbb42":"code","a0bafde4":"code","08563438":"code","d8212c4c":"code","7e8681c2":"code","8af7c96a":"code","d2aa5ee9":"code","77b077e5":"code","69d9769b":"code","07af9d5d":"code","7f205759":"code","92657941":"code","6a14d256":"code","8cc87263":"code","0d4f2bec":"code","46cbf797":"code","8d0ff0f1":"code","46c028cd":"code","28381f8b":"code","afbb1554":"code","1fa14600":"markdown","0ed4e03a":"markdown","822bde50":"markdown","f17dccb3":"markdown","52e88fe9":"markdown","3abeb9a6":"markdown","53726bb6":"markdown","9639c044":"markdown","776f3202":"markdown","946d7a91":"markdown","79e4c4af":"markdown","2245741a":"markdown","a6a6491d":"markdown","e894ce96":"markdown","22780314":"markdown","7d72cf7d":"markdown","32c3d870":"markdown","4e13eaca":"markdown","7a1ba8d2":"markdown","48e18824":"markdown","6c54685f":"markdown","be74f3a5":"markdown","884ad820":"markdown","86b44b8d":"markdown","d99cfe69":"markdown","dc36fc7e":"markdown","c2bb5d1d":"markdown","8249602e":"markdown","7ec9ecc0":"markdown","bb25f202":"markdown","96cf2a6f":"markdown","611070e4":"markdown","7c10a90b":"markdown","9dbd9087":"markdown","3d4dafd1":"markdown","3253d96b":"markdown","0991ad28":"markdown","c4663888":"markdown","1e997216":"markdown","ee778938":"markdown","b0726f6a":"markdown","00702a5a":"markdown","9adf76a2":"markdown","3be63034":"markdown","fe7cec8b":"markdown","81b24eec":"markdown","db650059":"markdown","66b17326":"markdown","006395e8":"markdown"},"source":{"dc6bf102":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","d8060e0d":"data = pd.read_csv('..\/input\/suicide-rates-overview-1985-to-2016\/master.csv')\ndata.shape","c1892ece":"data.info()","add72722":"dataEdit = data.drop(columns = \"HDI for year\")\ndataEdit.rename(columns={\"country\":\"Country\",'suicides\/100k pop':'suicid_ratio_100K','gdp_for_year ($)':'gdp_for_Year','gdp_per_capita ($)':'gdp_per_capita'},inplace=True)\ndataEdit.loc[dataEdit[\"generation\"]==\"Generation Z\"]\ndataEdit.head()","7ead2940":"countryData = dataEdit.Country.value_counts().rename_axis(\"Country\").reset_index(name='Number Of Data')\ncountryData.head()","0e0ab87d":"countryData.describe()\n","6fa1e004":"dataEdit.loc[dataEdit[\"Country\"]==\"Macau\"]","53578c54":"dataEdit.loc[dataEdit[\"Country\"]==\"Austria\"].head()\n","174c2e26":"countryYear = dataEdit.groupby([\"Country\",\"year\"])\ncountryYearCount = countryYear.size().reset_index(name='Count')\ncountryYearCount = countryYearCount.loc[countryYearCount[\"Count\"]==12]\ncountryYearCount.head()","840ec37c":"countryYearCount.loc[countryYearCount[\"year\"]==2016]","abce4dfd":"countryYearCountValue = countryYearCount.Country.value_counts().rename_axis('Country').reset_index(name='NumberOfYears')\nFreqCountryCount = countryYearCountValue.NumberOfYears.value_counts().rename_axis('Number Of Years').reset_index(name='Count').sort_values(by=['Number Of Years'],ascending=False)\nFreqCountryCount.head()","722f1dfd":"\nfig, ax = plt.subplots(figsize=(10,26))\nbar = sns.scatterplot(x=\"year\", y=\"Country\", data=countryYearCount)\n\n","79b1226d":"countries31 = countryYearCountValue.loc[countryYearCountValue[\"NumberOfYears\"]==31]\ncountries31.head()","09ae1555":"def OverallRatio(factor,order):\n    result={}\n    ratioDataPoints={}\n    ratioPopulation = {}\n    totalDataPoints = dataEdit.size\n    totalPopulation = dataEdit[\"population\"].sum()\n    for i in order:\n        ratioDataPoints[i] = dataEdit.loc[dataEdit[factor]==i].size\/totalDataPoints\n        ratioPopulation[i] = dataEdit.loc[dataEdit[factor]==i][\"population\"].sum()\/totalPopulation\n    result[\"ratioDataPoints\"]=ratioDataPoints\n    result[\"ratioPopulation\"]=ratioPopulation\n    return result\n\ndef toDataFrame(data,index,columnName):    \n    dataFrame = pd.Series(data, name= columnName)\n    dataFrame.index.names=[index]\n    dataFrame=dataFrame.reset_index(name=columnName)\n    return dataFrame\n\nratioDataPoints = toDataFrame(data=OverallRatio(factor=\"sex\",order=[\"male\",\"female\"])[\"ratioDataPoints\"],index=\"Sex\",columnName=\"Ratio\")\nratioPopulation = toDataFrame(data=OverallRatio(factor=\"sex\",order=[\"male\",\"female\"])[\"ratioPopulation\"],index=\"Sex\",columnName=\"Ratio\")\nratioDataPoints,ratioPopulation\nf, ax = plt.subplots(figsize=(15, 10),ncols=2)\nsns.set_color_codes(\"pastel\")\nplot = sns.barplot(x=\"Sex\", y=\"Ratio\", data=ratioDataPoints,label=\"Total\", color=\"b\" ,ci=None, order=[\"male\",\"female\"],ax=ax[0]).set_title(\"Data Points\")\nplot = sns.barplot(x=\"Sex\", y=\"Ratio\", data=ratioPopulation,label=\"Total\", color=\"b\" ,ci=None, order=[\"male\",\"female\"],ax=ax[1]).set_title(\"Population\")","0654c0ff":"def averageSuicideRatio(factor,order):\n    ratio={}\n    for i in order:\n        ratio[i] = dataEdit.loc[dataEdit[factor]==i][\"suicid_ratio_100K\"].mean()\n    return ratio\n\naverage_Suicide_Ratio = toDataFrame(data=averageSuicideRatio(factor=\"sex\",order=[\"male\",\"female\"]),index=\"Sex\",columnName=\"Average Suicide Ratio per 100k\")\naverage_Suicide_Ratio\n\n","3547a486":"def TotalSuicides(groupby,seperate,suicides_no):\n    result = []\n    groupbyLength = len(groupby)\n    if seperate == True:\n        for i in FreqCountryCount[\"Number Of Years\"]:\n            countries = countryYearCountValue.loc[countryYearCountValue[\"NumberOfYears\"]==i]\n            CountryAnalysis=pd.DataFrame() \n            for country in countries[\"Country\"]:\n                countrydf = dataEdit.loc[dataEdit[\"Country\"]==country]\n                CountryAnalysis = CountryAnalysis.append(countrydf,ignore_index=True)\n\n            #drop year of 2016\n            CountryAnalysis = CountryAnalysis.drop(CountryAnalysis[CountryAnalysis.year==2016].index)\n            #Analysis based on groupby\n            if suicides_no==True:\n                CountryAnalysisTotalSuicides = CountryAnalysis.groupby(groupby).agg({\"suicides_no\":\"sum\"})\n                CountryAnalysisTotalSuicides.reset_index(level=list(range(groupbyLength)), inplace=True)\n                result.append([CountryAnalysisTotalSuicides,i])\n            else:\n                CountryAnalysisTotalSuicides = CountryAnalysis.groupby(groupby).agg({\"suicid_ratio_100K\":\"mean\"})\n                CountryAnalysisTotalSuicides.reset_index(level=list(range(groupbyLength)), inplace=True)\n                result.append([CountryAnalysisTotalSuicides,i])\n        return result\n    else:\n        if suicides_no==True:\n            CountryAnalysisTotalSuicides = dataEdit.groupby(groupby).agg({\"suicides_no\":\"sum\",\"gdp_per_capita\":\"mean\",\"population\":\"sum\"})\n            CountryAnalysisTotalSuicides.reset_index(level=list(range(groupbyLength)), inplace=True)\n            return CountryAnalysisTotalSuicides\n        else:\n            CountryAnalysisTotalSuicides = dataEdit.groupby(groupby).agg({\"suicid_ratio_100K\":\"mean\",\"gdp_per_capita\":\"mean\"})\n            CountryAnalysisTotalSuicides.reset_index(level=list(range(groupbyLength)), inplace=True)\n            return CountryAnalysisTotalSuicides\n\n\n","8909bba9":"def TotalSuicidesSex(all_or_numbers):\n    if all_or_numbers == True:\n        for i in TotalSuicides([\"Country\",\"sex\"],seperate = True,suicides_no=True):\n            sns.set(style=\"whitegrid\")\n            plot = sns.catplot(x=\"Country\", y=\"suicides_no\", data=i[0] ,hue=\"sex\", kind=\"bar\", palette=\"muted\",height=15, aspect=2, ci=None)\n            plt.title(\"Total Suicides From 1985 to 2015 -- {} Years worth of Data \".format(i[1]))\n            plot.set_axis_labels(\"\", \"Number of Suicidies\")\n        return plot\n    else:\n        for i in TotalSuicides([\"Country\",\"sex\"],seperate = True,suicides_no=True):\n            if i[1] in all_or_numbers:\n                sns.set(style=\"whitegrid\")\n                plot = sns.catplot(x=\"Country\", y=\"suicides_no\", data=i[0] ,hue=\"sex\", kind=\"bar\", palette=\"muted\",height=15, aspect=2, ci=None)\n                plt.title(\"Total Suicides From 1985 to 2015 -- {} Years worth of Data \".format(i[1]))\n                plot.set_axis_labels(\"\", \"Number of Suicidies\")\n        return plot    \n\n","68f567db":"TotalSuicidesSex(all_or_numbers=[31,30])","bdb24a44":"def Ratio(data,factors,name,numerator,denominator,suicides_no):\n    Ratio = data\n    if suicides_no==True:\n        c = Ratio.groupby(factors)[\"suicides_no\"].sum().reset_index(name = denominator)\n    else:\n        c = Ratio.groupby(factors)[\"suicid_ratio_100K\"].mean().reset_index(name = denominator)\n    Ratio = pd.merge(Ratio, c, on=factors, how='outer')\n    Ratio[name] = Ratio[numerator]\/Ratio[denominator]\n    Ratio[name] = Ratio[name].replace('nan', np.nan).fillna(0)\n    return Ratio\n\n","ccb9866c":"MenVsWomen = Ratio(TotalSuicides([\"Country\",\"sex\"],seperate=False,suicides_no=True),factors='Country',name=\"Ratio\",numerator=\"suicides_no\",denominator=\"Total\" ,suicides_no=True)\nMenVsWomenNoSuicide =  MenVsWomen.loc[MenVsWomen[\"Total\"]==0]\nMenVsWomen = MenVsWomen.loc[MenVsWomen[\"Total\"]>0]\nonlyMales = MenVsWomen.loc[MenVsWomen[\"sex\"]==\"male\"]\nboxplot = sns.boxplot(x=onlyMales[\"Ratio\"])\nmaximum = onlyMales.loc[onlyMales['Ratio'].idxmax()][\"Country\"]\nminimum = onlyMales.loc[onlyMales['Ratio'].idxmin()][\"Country\"]\nboxplot.text(0.97, 0.1, maximum, horizontalalignment='left', size='medium', color='black', weight='semibold')\nboxplot.text(0.55, 0.1, minimum, horizontalalignment='left', size='medium', color='black', weight='semibold')\nplt.title(\"Ratio of Suicides by Males\")\ndescription = onlyMales.describe()\ndescription=description[\"Ratio\"].reset_index(name='Ratio')\ndescription.rename(columns={'index':'Description'},inplace=True)\ndescription\nMenVsWomenNoSuicide","387eb92e":"age_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\nratioDataPoints = toDataFrame(data=OverallRatio(factor=\"age\",order=age_order)[\"ratioDataPoints\"],index=\"Age Groups\",columnName=\"Ratio\")\nratioPopulation = toDataFrame(data=OverallRatio(factor=\"age\",order=age_order)[\"ratioPopulation\"],index=\"Age Groups\",columnName=\"Ratio\")\nratioDataPoints,ratioPopulation\nf, ax = plt.subplots(figsize=(25, 10),ncols=2)\nsns.set_color_codes(\"pastel\")\nplot = sns.barplot(x=\"Age Groups\", y=\"Ratio\", data=ratioDataPoints,label=\"Total\", color=\"b\" ,ci=None, order=age_order,ax=ax[0]).set_title(\"Data Points\")\nplot = sns.barplot(x=\"Age Groups\", y=\"Ratio\", data=ratioPopulation,label=\"Total\", color=\"b\" ,ci=None, order=age_order,ax=ax[1]).set_title(\"Population\")","478765ab":"age_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\ndef averageSuicideRatio(factor,order):\n    ratio={}\n    for i in order:\n        ratio[i] = dataEdit.loc[dataEdit[factor]==i][\"suicid_ratio_100K\"].mean()\n    return ratio\n\naverage_Suicide_Ratio = toDataFrame(data=averageSuicideRatio(factor=\"age\",order=age_order),index=\"Age\",columnName=\"Average Suicide Ratio per 100k\")\naverage_Suicide_Ratio\n#groupSexRatio(groupName = \"age\",order=age_order,suicides_no=True)","9c3577a5":"average_Suicide_Ratio = toDataFrame(data=averageSuicideRatio(factor=\"age\",order=age_order),index=\"Age Groups\",columnName=\"Average Suicide Ratio per 100k\")\nf, ax = plt.subplots(figsize=(15, 10))\nplot = sns.barplot(x=\"Age Groups\", y=\"Average Suicide Ratio per 100k\", data=average_Suicide_Ratio,\n                color=\"b\",ci=None, order=age_order)","a5bdda70":"def RatioSuicidesPerCounty(all_or_numbers,factor,order):\n    if all_or_numbers == True:\n        for i in TotalSuicides([\"Country\",factor],seperate = True,suicides_no=False):\n            sns.set(style=\"whitegrid\")\n            plot = sns.catplot(x=\"Country\", y=\"suicid_ratio_100K\", data=i[0] ,hue=factor, kind=\"bar\", palette=\"muted\",height=15, aspect=2,hue_order=order)\n            plt.title(\"Total Suicides From 1985 to 2015 -- {} Years worth of Data \".format(i[1]))\n            plot.set_axis_labels(\"\", \"Number of Suicidies per 100k\")\n        return plot\n    else:\n        for i in TotalSuicides([\"Country\",factor],seperate = True,suicides_no=False):\n            if i[1] in all_or_numbers:\n                sns.set(style=\"whitegrid\")\n                plot = sns.catplot(x=\"Country\", y=\"suicid_ratio_100K\", data=i[0] ,hue=factor, kind=\"bar\", palette=\"muted\",height=15, aspect=2,hue_order=order)\n                plt.title(\"Total Suicides From 1985 to 2015 -- {} Years worth of Data \".format(i[1]))\n                plot.set_axis_labels(\"\", \"Number of Suicidies per 100k\")\n        return plot\n \nRatioSuicidesPerCounty(all_or_numbers=[30,31],factor=\"age\",order=age_order)","bc16c839":"def groupSexRatio (groupName,order,suicides_no):\n    if suicides_no==False:\n        groupSexRatio = Ratio(TotalSuicides([groupName,\"sex\"],seperate = False,suicides_no=False),\n                          factors=[groupName],name=\"Ratio\",numerator=\"suicid_ratio_100K\",denominator=\"Total\",suicides_no=False)\n    else:\n        groupSexRatio = Ratio(TotalSuicides([groupName,\"sex\"],seperate = False,suicides_no=True),\n                          factors=[groupName],name=\"Ratio\",numerator=\"suicides_no\",denominator=\"Total\",suicides_no=True)\n    \n\n    sns.set(style=\"whitegrid\")\n\n\n\n    # Plot the Males\n    if suicides_no==False:\n        sns.set_color_codes(\"muted\")\n        plot = sns.catplot(x=groupName, y=\"suicid_ratio_100K\", data=groupSexRatio,\n                    color=\"b\",order=order,hue=\"sex\", kind=\"bar\", palette=\"muted\",height=15, aspect=2)\n        plot.set_axis_labels(\"\", \"Number of Suicidies\")\n        return plot\n    else:\n        groupSexRatio = groupSexRatio.loc[groupSexRatio[\"sex\"]==\"male\"]\n        f, ax = plt.subplots(figsize=(15, 10))\n        # Plot the total \n        sns.set_color_codes(\"pastel\")\n        plot = sns.barplot(x=groupName, y=\"Total\", data=groupSexRatio,\n        label=\"Total\", color=\"b\" ,ci=None, order=order)\n        sns.set_color_codes(\"muted\")\n        plot = sns.barplot(x=groupName, y=\"suicides_no\", data=groupSexRatio,label=\"Male\",\n                            color=\"b\",ci=None, order=order)\n        ax.legend(ncol=2, loc=\"upper right\", frameon=True)\n        ax.set( ylabel=\"Total Number of Suicids\",\n               xlabel=groupName+ \"Groups\")\n        return plot","b3a5ef5d":"age_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\ngroupSexRatio(groupName = \"age\",order=age_order,suicides_no=True)","08338ff1":"def TableSexGroupRatio(groupName):\n    GroupRatio = Ratio(TotalSuicides([\"Country\",groupName,\"sex\"],seperate = False,suicides_no=True),\n               factors='country',name=\"Ratio \"+ groupName +\" Group\",numerator=\"suicides_no\",denominator=\"Total \"+groupName+ \" Group\",suicides_no=True )\n    c = GroupRatio.groupby(['country',groupName])[\"suicides_no\"].sum().reset_index(name = \"Total Sex of Age Group\")\n    GroupRatio = pd.merge(GroupRatio, c, on=['country',groupName], how='outer')\n    GroupRatio[\"Ratio Sex of \"+groupName+\" Group\"] = GroupRatio[\"Total Sex of Age Group\"]\/GroupRatio[\"Total \"+groupName+ \" Group\"]\n    GroupRatio[\"Ratio Sex of \"+groupName+\" Group\"] = GroupRatio[\"Ratio Sex of \"+groupName+\" Group\"].replace('nan', np.nan).fillna(0)\n\n    return GroupRatio","f672d455":"def GroupCountrySexRatio (Data,groupName,hue_order_total,hue_order_group,labels):\n    data = Data.loc[Data[\"Total \" +groupName+\" Group\"]>0]\n    for i in [31]:\n        countries = countryYearCountValue.loc[countryYearCountValue[\"NumberOfYears\"]==i]\n        CountryAnalysis=pd.DataFrame() \n        for country in countries[\"Country\"]:\n            countrydf = data.loc[data[\"Country\"]==country]\n            CountryAnalysis = CountryAnalysis.append(countrydf,ignore_index=True)\n        sns.set(style=\"whitegrid\")\n        f,ax = plt.subplots(figsize=(20, 30))\n        # Plot the total \n        sns.catplot(x=\"Ratio Sex of \" +groupName+ \" Group\", y=\"Country\", data=CountryAnalysis,hue=groupName,\n                     kind=\"bar\", palette=\"dark\",ax=ax, ci=None ,hue_order=hue_order_total)\n        # Plot the Males\n        sns.catplot(x=\"Ratio \"+groupName+\" Group\", y=\"Country\", data=CountryAnalysis,hue=groupName,\n                    kind=\"bar\", palette=\"pastel\",ax=ax, ci=None,hue_order=hue_order_group)\n        \n        ax.legend(ncol=2, loc=\"upper right\", frameon=True,labels=labels)\n        ax.set( ylabel=\"Countries with {} Years of Data \".format(i),xlabel=\"Ratio in terms of \"+groupName+\" group\")\n        plt.close(2)\n        plt.close(3)\n        plt.show()\n    ","0f850e74":"def CountGroupRatio(Data,groupName,order):\n    result={}\n    table = Data\n    countries = table.Country.unique()\n    groupdf=pd.DataFrame()\n    for country in countries:\n        newRow = pd.DataFrame()    \n        ratioMax=table.loc[table[\"Country\"]==country][\"suicid_ratio_100K\"].max()\n        row =table.loc[(table[\"Country\"]==country) & (table[\"suicid_ratio_100K\"] == ratioMax)]\n        newRow[\"Country\"]=row[\"Country\"]\n        newRow[groupName]=row[groupName]\n        newRow[\"sex\"]=row[\"sex\"]\n        newRow[\"suicid_ratio_100K\"]=row[\"suicid_ratio_100K\"]\n        groupdf=groupdf.append(newRow,ignore_index = True)\n    groupName_count = groupdf.groupby([groupName,\"sex\"]).size().reset_index(name='Count')\n    groupName_count[\"Ratio\"] = groupName_count['Count']\/groupName_count['Count'].sum()\n\n    sns.set(style=\"whitegrid\")\n    f,ax = plt.subplots(figsize=(10, 7))\n    # Plot the total \n    plot = sns.catplot(x=groupName, y=\"Count\", data=groupName_count,hue=\"sex\",\n                 kind=\"bar\", palette=\"pastel\",ax=ax, ci=None, order=order)\n    plt.close(2)\n    return groupName_count\n","0c7c9819":"\ndata =Ratio(TotalSuicides([\"Country\",\"age\",\"sex\"],seperate = False,suicides_no=False),\n               factors='Country',name=\"Ratio \"+ \"age\" +\" Group\",numerator=\"suicid_ratio_100K\",denominator=\"Total \"+\"age\"+ \" Group\",suicides_no=False )\norder = [\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\nCountGroupRatio(Data=data,groupName=\"age\",order=order)\n\n","5c8f6fe6":"gen_order=[\"G.I. Generation\",\"Silent\",\"Boomers\",\"Generation X\",\"Millenials\",\"Generation Z\"]\nratioDataPoints = toDataFrame(data=OverallRatio(factor=\"generation\",order=gen_order)[\"ratioDataPoints\"],index=\"Generation Groups\",columnName=\"Ratio\")\nratioPopulation = toDataFrame(data=OverallRatio(factor=\"generation\",order=gen_order)[\"ratioPopulation\"],index=\"Generation Groups\",columnName=\"Ratio\")\nf, ax = plt.subplots(figsize=(25, 10),ncols=2)\nsns.set_color_codes(\"pastel\")\nplot = sns.barplot(x=\"Generation Groups\", y=\"Ratio\", data=ratioDataPoints,label=\"Total\", color=\"b\" ,ci=None, order=gen_order,ax=ax[0]).set_title(\"Data Points\")\nplot = sns.barplot(x=\"Generation Groups\", y=\"Ratio\", data=ratioPopulation,label=\"Total\", color=\"b\" ,ci=None, order=gen_order,ax=ax[1]).set_title(\"Population\")\n","86d82a8e":"def AgeGeneration ():\n    age_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\n    gen_order=[\"G.I. Generation\",\"Silent\",\"Boomers\",\"Generation X\",\"Millenials\",\"Generation Z\"]\n    TableAgeGenerationRatio = Ratio(TotalSuicides([\"generation\",\"age\"],seperate = False,suicides_no=True),factors=\"generation\",\n                                    name=\"Ratio age given generation\",numerator=\"suicides_no\",denominator=\"Total Suicides in the Generation\",suicides_no=True )\n\n    tableGenAge = TableAgeGenerationRatio.pivot(index='generation', columns='age', values='suicides_no')\n    tableGenAge.fillna(0)\n    tableGenAge.reindex(gen_order)\n    tableGenAge1 = TableAgeGenerationRatio.pivot(index='age', columns='generation', values='suicides_no')\n    tableGenAge1.reindex(age_order)\n    tableGenAge1.fillna(0)\n    palette = iter(sns.husl_palette(2*len(age_order)))\n    sns.set(style=\"whitegrid\")\n    f, ax = plt.subplots(figsize=(15, 10),ncols=2)\n    # Plot the other age groups\n    for age in reversed(age_order):\n        filterTable=tableGenAge[age].reindex(gen_order).reset_index(name=\"suicides_no\").fillna(0)\n        filterTable[\"result\"]=0    \n        for gen in gen_order:\n            filterTable1=tableGenAge1[gen].reindex(age_order).reset_index(name=\"suicides_no\").fillna(0)\n            filterTable1[\"culum\"]=filterTable1[\"suicides_no\"].cumsum()\n            value = filterTable1.loc[filterTable1[\"age\"]==age][\"culum\"].get_values()\n            filterTable.loc[filterTable[\"generation\"]==gen,[\"result\"]]=value\n        plot = sns.barplot(x=\"generation\",y=\"result\", data=filterTable,\n                label=age, color=next(palette),ci=None, order=gen_order ,ax=ax[0])\n        ax[0].legend(ncol=2, loc=\"upper right\", frameon=True)\n        ax[0].set( ylabel=\"Number of Suicides\",\n               xlabel=\"Generations\")\n    tableGenAge = TableAgeGenerationRatio.pivot(index='generation', columns='age', values='Ratio age given generation')\n    tableGenAge.fillna(0)\n    tableGenAge.reindex(gen_order)\n    tableGenAge1 = TableAgeGenerationRatio.pivot(index='age', columns='generation', values='Ratio age given generation')\n    tableGenAge1.reindex(age_order)\n    tableGenAge1.fillna(0)\n    for age in reversed(age_order):\n        filterTable=tableGenAge[age].reindex(gen_order).reset_index(name=\"Ratio age given generation\").fillna(0)\n        filterTable[\"result\"]=0    \n        for gen in gen_order:\n            filterTable1=tableGenAge1[gen].reindex(age_order).reset_index(name=\"Ratio age given generation\").fillna(0)\n            filterTable1[\"culum\"]=filterTable1[\"Ratio age given generation\"].cumsum()\n            value = filterTable1.loc[filterTable1[\"age\"]==age][\"culum\"].get_values()\n            filterTable.loc[filterTable[\"generation\"]==gen,[\"result\"]]=value\n        plot = sns.barplot(x=\"generation\",y=\"result\", data=filterTable,\n                label=age, color=next(palette),ci=None, order=gen_order,ax=ax[1] )\n        ax[1].legend(ncol=2, loc=\"upper right\", frameon=True)\n        ax[1].set( ylabel=\"Ratio of Suicides\",\n               xlabel=\"Generations\")\n    return plot","d48b856a":"AgeGeneration()","81f61fab":"groupSexRatio(groupName = \"generation\",order=[\"G.I. Generation\",\"Silent\",\"Boomers\",\"Generation X\",\"Millenials\",\"Generation Z\"],suicides_no=True)","3e1d5692":"TableAgeGenerationRatio = Ratio(TotalSuicides([\"generation\",\"age\"],seperate = False,suicides_no=True),factors=\"generation\",name=\"Ratio age given generation\",\n                                numerator=\"suicides_no\",denominator=\"Total Suicides in the Generation\",suicides_no=True )","feabbb42":"average_Suicide_Ratio = toDataFrame(data=averageSuicideRatio(factor=\"generation\",order=gen_order),index=\"Generation Groups\",columnName=\"Average Suicide Ratio per 100k\")\nf, ax = plt.subplots(figsize=(15, 10))\nplot = sns.barplot(x=\"Generation Groups\", y=\"Average Suicide Ratio per 100k\", data=average_Suicide_Ratio,color=\"b\",ci=None, order=gen_order)","a0bafde4":"RatioSuicidesPerCounty(all_or_numbers=[30,31],factor=\"generation\",order=gen_order)","08563438":"order=[\"G.I. Generation\",\"Silent\",\"Boomers\",\"Generation X\",\"Millenials\",\"Generation Z\"]\ndata =Ratio(TotalSuicides([\"Country\",\"generation\",\"sex\"],seperate = False,suicides_no=False),\n               factors='Country',name=\"Ratio \"+ \"generation\" +\" Group\",numerator=\"suicid_ratio_100K\",denominator=\"Total \"+\"generation\"+ \" Group\",suicides_no=False )\nCountGroupRatio(Data=data,groupName=\"generation\",order=order)\n","d8212c4c":"dataPoints = dataEdit.groupby([\"Country\",\"year\"]).size().reset_index(name=\"count\")\ndataPoints = dataPoints.groupby([\"Country\"]).size().reset_index(name=\"count\")\ndataPoints = dataPoints.loc[dataPoints[\"count\"]>3]\n","7e8681c2":"import numpy as np\nfrom scipy import stats\n\ndef pearsonr_ci(x,y,alpha=0.05):\n    #    r : Pearson's correlation coefficient\/ p : The corresponding p value\/ lo, hi : The lower and upper bound of confidence intervals\n    r, p = stats.pearsonr(x,y)\n    r_z = np.arctanh(r)\n    se = 1\/np.sqrt(x.size-3)\n    z = stats.norm.ppf(1-alpha\/2)\n    lo_z, hi_z = r_z-z*se, r_z+z*se\n    lo, hi = np.tanh((lo_z, hi_z))\n    return r, p, lo, hi","8af7c96a":"\ndata =TotalSuicides([\"Country\",\"year\"],seperate = False,suicides_no=True)\ndata[\"ratio\"]=data[\"suicides_no\"]\/data[\"population\"]*100000\nf, ax = plt.subplots(figsize=(70, 70),nrows=10, ncols=10)\ncolumns=(\"Country\", \"Correlation\", \"P-Value\",\"Confidence Interval Lower\",\"Confidence Interval Higher\")\ncorrCountry =  pd.DataFrame(columns=columns)\nfor counter, country in enumerate (dataPoints.Country.unique()):\n    x = int(counter\/10)\n    y= counter%10\n    dataCountry = data.loc[data[\"Country\"]==country]\n    xdata = dataCountry[\"ratio\"]\n    ydata = dataCountry[\"gdp_per_capita\"]\n    corr = pearsonr_ci(xdata,ydata,alpha=0.05)\n    row=[country]\n    for i in corr:\n        row.append(i)\n    corrCountry.loc[counter]=row\n    plot = sns.regplot(data=dataCountry.loc[dataCountry[\"Country\"]==country],x=\"ratio\",y=\"gdp_per_capita\",ax=ax[x][y],color=\"g\").set_title(country)\n\n","d2aa5ee9":"\nfig, ax = plt.subplots(figsize=(20,26))\ng=sns.pointplot(x=\"Correlation\", y=\"Country\", data=corrCountry,join=False,ax=ax)\nY = corrCountry[\"Country\"].values\nX = corrCountry[\"Correlation\"].values\ncorrCountry[\"low\"] = corrCountry[\"Correlation\"]-corrCountry[\"Confidence Interval Lower\"]\ncorrCountry[\"high\"] = corrCountry[\"Confidence Interval Higher\"]-corrCountry[\"Correlation\"]\nL = corrCountry[\"low\"].values\nH = corrCountry[\"high\"].values\nerror=[L,H]\ng.errorbar(X, Y, xerr=error,fmt='o', capsize=2, elinewidth=1.1)\ng.set_title(\"Correlation of GDP and ratio of Suicides per 100K with confidence Interval\")\n","77b077e5":"fig, ax = plt.subplots(figsize=(30,10))\nbins = np.arange(-1,1,0.1)\nx_axis = []\nfor i in range(0,len(bins)-1):\n    point = [round(bins[i],1),round(bins[i+1],1)]\n    x_axis.append(point)  \ncorrCountry['binned'] = pd.cut(corrCountry['Correlation'], bins)\n\nplot = sns.countplot(x=\"binned\",data=corrCountry)\nplot.set_xticklabels(x_axis, rotation=30)\nplot.set_xlabel(\"Correlation\",labelpad = 30)\nplot.set_ylabel(\"Count\",labelpad = 30)\nplot.set_title(\"Correlation of GDP per Capita and suicide Ratio per 100K\",pad = 30)","69d9769b":"correlationDescribe = corrCountry[\"Correlation\"].describe()\ncorrelationDescribe","07af9d5d":"dataHDI = pd.read_csv('..\/input\/human-development-index-hdi\/HDI.csv')\ndataHDI1 = pd.read_csv('..\/input\/human-development-index-hdi\/HDI.csv')\ndataHDICountry = dataHDI[\"Country\"].unique()\ndataEditCountry = dataEdit[\"Country\"].unique()\ncountriesNotInHDI = []\nfor country in dataEditCountry:\n    if country not in dataHDICountry:\n        countriesNotInHDI.append(country)\nprint(countriesNotInHDI)","7f205759":"\noldColumnName = dataHDI.columns\nnewColumnName= dataHDI1.columns.str.replace(\" \",\"\")\ndiffColumn = dict(zip(oldColumnName, newColumnName))\ndataHDI1.rename(columns=diffColumn, inplace=True)\nHDI2015 = dataHDI1.filter(regex=\"^[A-Za-z()%,-]+2015{1}|^[A-Za-z()%,-]+$\")\nHDI2015Column=HDI2015.columns\nnewDiffColumn={}\nfor col in HDI2015Column:\n    newDiffColumn[col]=[k for k,v in diffColumn.items() if v == col][0]\nHDI2015.rename(columns=newDiffColumn, inplace=True)\nHDI2015=HDI2015.drop(columns=[\"Id\",'Population Median age (years) 2015',\"Total Population (millions) 2015\",\"Population Urban 2015 %\"])","92657941":"\ndataEdit2015 = dataEdit.loc[dataEdit[\"year\"]==2015]\ndataEdit2015Country=dataEdit2015.groupby([\"Country\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\ndataEdit2015Country[\"ratio\"]=dataEdit2015Country[\"suicides_no\"]\/dataEdit2015Country[\"population\"]*100000\nAllDataCountry = pd.merge(dataEdit2015Country, HDI2015, on='Country')\nAllDataCountry=AllDataCountry.dropna()\ndef correlationToRatio(data,matrix):\n    columns=(\"ColName\", \"Correlation\", \"P-Value\",\"Confidence Interval Lower\",\"Confidence Interval Higher\")\n    corrData = pd.DataFrame(columns=columns)\n    indexRatio = data.columns.tolist().index(\"ratio\")\n    for i in range(indexRatio,len(data.columns.tolist())):\n        xData = data[\"ratio\"]\n        colName = data.columns.tolist()[i]\n        yData=data[colName]\n        corr=pearsonr_ci(x=xData,y=yData,alpha=0.05)\n        row=[colName]\n        for j in corr:\n            row.append(j)\n        corrData.loc[i]=row\n    a = corrData[corrData[\"Correlation\"].isnull()]\n    corrData=corrData.dropna()\n    corrData=corrData[corrData.ColName != 'ratio']\n    numberCol=corrData.shape[0]\n    if matrix==True:\n        f, ax = plt.subplots(figsize=(70, 70),nrows=int(numberCol\/5)+1, ncols=5)\n        for counter,colName in enumerate (corrData.ColName.unique()):\n            x = int(counter\/5)\n            y= counter%5\n            plot = sns.regplot(data=data,x=\"ratio\",y=colName,ax=ax[x][y],color=\"g\").set_title(colName,pad=20)\n    fig, ax1 = plt.subplots(figsize=(20,15))\n    g=sns.pointplot(x=\"Correlation\", y=\"ColName\", data=corrData,join=False,ax=ax1)\n    Y = corrData[\"ColName\"].values\n    X = corrData[\"Correlation\"].values\n    corrData[\"low\"] = corrData[\"Correlation\"]-corrData[\"Confidence Interval Lower\"]\n    corrData[\"high\"] = corrData[\"Confidence Interval Higher\"]-corrData[\"Correlation\"]\n    L = corrData[\"low\"].values\n    H = corrData[\"high\"].values\n    error=[L,H]\n    g.errorbar(X, Y, xerr=error,fmt='o', capsize=2, elinewidth=1.1)\n    g.set_title(\"Correlation of Social Economic Factors and ratio of Suicides per 100K with confidence Interval\")\n    plt.xlim(-1, +1)\n\n    return \n        ","6a14d256":"correlationToRatio(data=AllDataCountry,matrix=True)","8cc87263":"dataEdit2015 = dataEdit.loc[dataEdit[\"year\"]==2015]\ndataEdit2015Sex=dataEdit2015.groupby([\"Country\",\"sex\"]).agg({\"suicides_no\":\"sum\"}).reset_index()\nc=dataEdit2015Sex.groupby([\"Country\"]).agg({\"suicides_no\":\"sum\"}).reset_index()\ndataEdit2015Sex = pd.merge(dataEdit2015Sex, c, on=\"Country\", how='outer')\ndataEdit2015Sex.rename(columns={\"suicides_no_x\":\"suicides\",\"suicides_no_y\":\"Total Suicides\"},inplace=True)\ndataEdit2015Sex = dataEdit2015Sex.loc[dataEdit2015Sex[\"Total Suicides\"]>0]\ndataEdit2015Sex[\"ratio\"]=dataEdit2015Sex[\"suicides\"]\/dataEdit2015Sex[\"Total Suicides\"]\ndataEdit2015Sex=dataEdit2015Sex[dataEdit2015Sex.sex != 'female']\nAllDataCountrySex = pd.merge(dataEdit2015Sex, HDI2015, on='Country')\n\n","0d4f2bec":"correlationToRatio(data=AllDataCountrySex.dropna(),matrix=False)","46cbf797":"dataEdit2015 = dataEdit.loc[dataEdit[\"year\"]==2015]\ndataEdit2015Sex=dataEdit2015.groupby([\"Country\",\"sex\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\nc=dataEdit2015Sex.groupby([\"Country\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\ndataEdit2015Sex = pd.merge(dataEdit2015Sex, c, on=\"Country\", how='outer')\ndataEdit2015Sex=dataEdit2015Sex.drop(columns=[\"population_x\",\"suicides_no_y\"])\ndataEdit2015Sex.rename(columns={\"suicides_no_x\":\"suicides\",\"population_y\":\"Total Population\"},inplace=True)\ndataEdit2015Sex = dataEdit2015Sex.loc[dataEdit2015Sex[\"Total Population\"]>0]\ndataEdit2015Sex[\"ratio\"]=dataEdit2015Sex[\"suicides\"]\/dataEdit2015Sex[\"Total Population\"]*100000\ndataEdit2015Sex = dataEdit2015Sex.dropna()\n\ndef correlationToRatioGroup(data,dataHDI,orders,group):\n\n    columns=(\"ColName\", \"Correlation\", \"P-Value\",\"Confidence Interval Lower\",\"Confidence Interval Higher\",\"GroupFactor\")\n    corrDataTotal = pd.DataFrame(columns=columns)\n    for count, order in enumerate (orders):\n        corrData = pd.DataFrame(columns=columns)\n        groupData=data.loc[data[group] == order]\n        AllDataCountryGroup = pd.merge(groupData, dataHDI, on='Country').dropna()       \n        indexRatio = data.columns.tolist().index(\"ratio\")\n        for i in range(indexRatio+1,len(AllDataCountryGroup.columns.tolist())):\n            xData = AllDataCountryGroup[\"ratio\"]\n            colName = AllDataCountryGroup.columns.tolist()[i]\n            yData=AllDataCountryGroup[colName]\n            corr=pearsonr_ci(x=xData,y=yData,alpha=0.05)\n            row=[colName]\n            for j in corr:\n                row.append(j)\n            row.append(order)\n            corrData.loc[i]=row\n        corrDataTotal=corrDataTotal.append(corrData)\n    corrDataTotal=corrDataTotal.dropna()\n    corrDataTotal=corrDataTotal.loc[corrDataTotal.ColName != 'ratio']\n    fig, ax1 = plt.subplots(figsize=(20,len(AllDataCountryGroup.columns.tolist())*0.3+2))\n    g=sns.pointplot(x=\"Correlation\", y=\"ColName\", data=corrDataTotal,join=False,ax=ax1,hue=\"GroupFactor\")\n    color = [\"blue\",\"orange\",\"green\",\"red\",\"grey\",\"brown\"]\n    for count, order in enumerate (orders):\n        filteredData = corrDataTotal.loc[corrDataTotal[\"GroupFactor\"]==order]    \n        Y = filteredData[\"ColName\"].values\n        X = filteredData[\"Correlation\"].values\n        filteredData[\"low\"] = filteredData[\"Correlation\"]-filteredData[\"Confidence Interval Lower\"]\n        filteredData[\"high\"] = filteredData[\"Confidence Interval Higher\"]-filteredData[\"Correlation\"]\n        L = filteredData[\"low\"].values\n        H = filteredData[\"high\"].values\n        error=[L,H]\n        g.errorbar(X, Y, xerr=error,fmt='o', capsize=2, elinewidth=1.1,color=color[count])\n    g.set_title(\"Correlation of Social Economic Factors and ratio of Suicides per 100K with confidence Interval for different sexes\")  \n    plt.xlim(-1, +1)\n\n   \n    return \ncorrelationToRatioGroup(data=dataEdit2015Sex,dataHDI=HDI2015,orders=[\"female\",\"male\"],group=\"sex\")","8d0ff0f1":"HDISex = dataHDI[[\"Country\",'Total fertility rate (birth per woman) 2000\/2007']]\ndataEdit2000_2007 = dataEdit.loc[dataEdit[\"year\"].isin([\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\"])]\ndataEdit2000_2007Sex=dataEdit2000_2007.groupby([\"Country\",\"year\",\"sex\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\ndataEdit2000_2007Sex\ndataEdit2000_2007Sex[\"ratio\"]=dataEdit2000_2007Sex[\"suicides_no\"]\/dataEdit2000_2007Sex[\"population\"]*100000\ndataEdit2000_2007Sex=dataEdit2000_2007Sex.groupby([\"Country\",\"sex\"]).agg({\"ratio\":\"mean\"}).reset_index()","46c028cd":"correlationToRatioGroup(data=dataEdit2000_2007Sex,dataHDI=HDISex,orders=[\"female\",\"male\"],group=\"sex\")","28381f8b":"dataEdit2015 = dataEdit.loc[dataEdit[\"year\"]==2015]\ndataEdit2015Age=dataEdit2015.groupby([\"Country\",\"age\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\nc=dataEdit2015Age.groupby([\"Country\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\ndataEdit2015Age = pd.merge(dataEdit2015Age, c, on=\"Country\", how='outer')\ndataEdit2015Age=dataEdit2015Age.drop(columns=[\"population_x\",\"suicides_no_y\"])\ndataEdit2015Age.rename(columns={\"suicides_no_x\":\"suicides\",\"population_y\":\"Total Population\"},inplace=True)\ndataEdit2015Age = dataEdit2015Age.loc[dataEdit2015Age[\"Total Population\"]>0]\ndataEdit2015Age[\"ratio\"]=dataEdit2015Age[\"suicides\"]\/dataEdit2015Age[\"Total Population\"]*100000\nage_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]\ncorrelationToRatioGroup(data=dataEdit2015Age,dataHDI=HDI2015,orders=age_order,group=\"age\")","afbb1554":"factors = [\"Country\",'Employment in agriculture (% of total employment) 2010-2014','Employment in services (% of total employment) 2010- 2014','Unemployment Youth (% ages 15-24) 2010-2014','Unemployment Youth not in school or employment (% ages 15-24) 2010-2014',]\nage_order=[\"5-14 years\",\"15-24 years\",\"25-34 years\",\"35-54 years\",\"55-74 years\",\"75+ years\"]        \nHDIAge = dataHDI[factors]\ndataEdit2010_2014 = dataEdit.loc[dataEdit[\"year\"].isin([\"2010\",\"2011\",\"2012\",\"2013\",\"2014\"])]\ndataEdit2010_2014Age=dataEdit2010_2014.groupby([\"Country\",\"year\",\"age\"]).agg({\"suicides_no\":\"sum\",\"population\":\"sum\"}).reset_index()\ndataEdit2010_2014Age\ndataEdit2010_2014Age[\"ratio\"]=dataEdit2010_2014Age[\"suicides_no\"]\/dataEdit2010_2014Age[\"population\"]*100000\n\ndataEdit2010_2014Age=dataEdit2010_2014Age.groupby([\"Country\",\"age\"]).agg({\"ratio\":\"mean\"}).reset_index()\ncorrelationToRatioGroup(data=dataEdit2010_2014Age,dataHDI=HDIAge,orders=age_order,group=\"age\")","1fa14600":"In all the countries, men have committed more suicides. 78% of suicides on average are men. It should be noted that we used all the data available because we are looking at the ratio between men and women.  The outliers Macau and Oman both have little data. Domica and Saint Kitts and Nevis were removed because they recorded no suicides and as a result, the ratio will be undefined. ","0ed4e03a":"**Import & Tidy **","822bde50":"For example, Macau only has the year 1994 of all age groups for males and females","f17dccb3":"Each country was split into 12 groups (6 generation groups for each sex). The group with the highest suicides was selected and as result, all the groups were men and there were about 50% of countries that had the male in the GI generation as their highest. The second highest age group was males in the Silent, which only accounted for 23%. ","52e88fe9":"Once again the older age groups are more sensitive but the correlation are in between -0.5 to 0.25, implying there isn't a strong relationship with employment and suicide rates. ","3abeb9a6":"**Sex**","53726bb6":"The 100(1-\u03b1)% confidence interval of the perason correlation is defined as:\n ($\\frac{e^{2L} - 1}{e^{2L} + 1}$,$\\frac{e^{2U} - 1}{e^{2U} + 1}$) \n         where U = Z_r + $\\frac{z^{1} - { \u03b1\\over 2}}{\\sqrt{N-3}}$\n         and L = Z_r - $\\frac{z^{1} - { \u03b1\\over 2}}{\\sqrt{N-3}}$","9639c044":"Each country was split into 12 groups (6 age groups for each sex). The group with the highest suicides ratio per 100k was selected and as result,  there were over 50% of countries that had the male age group 75+ years as their highest. The second highest age group was males 35-5 year old, which only accounted for 9%.","776f3202":"We use the social economic factors to find a correlation with suicide rates. As stated above, we will look at the year 2015. We will first analyse at a country, age and sex level.","946d7a91":"If we simply get the ratio of suicides of men and the total suicides (around 0.8), we can see that all the correlation is between -0.4 and 0.4 and thus these social economic factors have no effect on this ratio. The reason could be due to the concentration of ratio at 0.8 for all countries. We will now look at the ratio of sucides by men and women per population per 100k.","79e4c4af":"**Age Groups**","2245741a":"There is equal amount of male and female Data while males are slighly less in terms of the population. It should be noted that we have summed up the population of a given the year, sex, age and group. However, since its a ratio, it has no effect.","a6a6491d":"We will look at the correlation between the suicide rate per 100K and GDP per capita. Since the GDP per capita is one figure per year, we will **not** average the suicide rates per 100K as we group the age and sex of each country per year as previously. We will simply take the ratio of summation of the total suicides in the year against the summation of the population for the given country and year.","e894ce96":"**GDP**","22780314":"As you can see not all countries have the same amount of data. ","7d72cf7d":"**Age and Social Economic Factors**","32c3d870":"In conclusion, we see that Males commit more suicides. Even though there are more sucidies for the Boomer generation and age groups of 35-54 years in the data, this is due to more data points and population in these groups. If we look closer at the ratio of sucides by population per 100K, we see that the age groups 75+ commit more suicides and the  GI generation have more suicides.  In terms of GDP, there is a negative relationship with suicide rates such that as GDP falls, there are more suicides. However, interestingly, there is a weak positive relationship between HDI and suicide rates.\nIn addition, other social economic factors do not really affect the sucide rates. An explaination could be due to the fact that these factors are on a macro level. We will need to look at social economic factors on an individual level such as the budget of meantal helath. There can be more analysis by different social economic factors with in the HDI database but we would probably find litte correlation.\nFrom this analysis, we will need to focus on older Males in the age group 75+ and analyse them at a suburbian level to find any factors that have a high correlation to suicidal rates. Once we find these factors, we can focus on finding a solution to lower suicide rates. ","4e13eaca":"According to the UNITED Nations development programme, \"The Human Development Index (HDI) is a summary measure of average achievement in key dimensions of human development: a long and healthy life, being knowledgeable and have a decent standard of living. The HDI is the geometric mean of normalized indices for each of the three dimensions\". Its interesting to see that there is a positive relation with HDI and ratio of suicides per 100K. \n\nIn addition, we see the means of schooling has a stronger positive relation than HDI. \n\nHowever most of the factors are in between -0.5 to 0.5 correlation (including HDI) which suggest, there isnt a strong relationship for these factors","7a1ba8d2":"By having all 6 age groups, it becomes messy and difficult to interpret. However, we can see that for the older age groups, the HDI has a stronger relationship to the ratio of suicides per 100k. We can see that these older age groups are more sensitive in other factors. ","48e18824":"* **Sex and Social Economic Factors**","6c54685f":"However, if we look at the ratio of suicides per 100k, the GI generation has the most suicides. This is due to the age group 75+ having the highest ratio of suicides per 100K since the age group 75+ makes almost 60% of the GI generation. ","be74f3a5":"Based on the countires with 30 and 31 years of data,   higher suicides ratio are in the age group 75+. This concurs to our statement above","884ad820":"Countries such as Austria which have 31 years of data have relatively low confidence intervals while Turkey has high confidence intervals because it has only 7 years of data.","86b44b8d":"If we look at the total number of suicides, it shows that the Boomers have more suicides. As explained eariler, there are more data points and a population in the other generations. ","d99cfe69":"Even though there rougly the same males and females, the average suicid ratio for Males is almost 4 times as much. ","dc36fc7e":"So we cannot simply look at the total number of suicides by year because countries such as Macau only has data for 1994. Also we cannot compare each country. So in order to perform an analysis, we need countries that have data for each year for male and female with thier age group. Thus, each year, a country should have 12 data points. 6 age groups for males and 6 age groups for females. Since the data is from 1985 to 2016, there should be 384 data points (32*12) for each country. The problem is that not even the countries with the most data points do not have 384. Austria has only 382 data points since it doesn't have all 12 data points for 2016.\n","c2bb5d1d":"The high amount of people in the age group 35-54 years could explain why there is such a high number of suicides. We can look at the suicide ratio 100k to verify the explaination. The suicide ratio 100k is the number of suicides given the population of the country,year, age and sex. When grouping the data, an average of the ratio was calculated. ","8249602e":"We can see there the correlation is postively skewed meaning there are more countries that have a negative correlation than a positive correlation. As a result, as GDP per capita falls, we will see more suicides ratio per 100K. ","7ec9ecc0":"Based on the data from 100 countires seperated into the number of years of data provided, men have commited suicide more than women. However, above are only countries that have 30 and 31 years of data. ","bb25f202":"We will take off the HDI because there is only 8364 out of 27820 data points. ","96cf2a6f":"There is an evenly distrubuted amount of data points for all the age groups. However, there is a higher population in the age group 35-54 years old.","611070e4":"From the above plot, we see that the GI generation has 2 age groups, Generation Z has one age group and the other generations have 3 age groups. ","7c10a90b":"Based on the countries with 30 and 31 years of data, we can see that the GI generation has the majority. This concurs with our statement above.","9dbd9087":"**Merging the Human Development Reports**","3d4dafd1":"We can see that HDI has more positive effect on females than males implying that as the HDI increase, more females commit suicide. This is true for most of the factors. We see that gap widen in the Gender Development Index Value. Maternity paid leave has a very small effect on the suicide rates  while Inequality in income has a stronger negative correlation with suicide rates. ","3253d96b":"As a result, N needs to be larger than 3 to have a confidence Interval. We now have 93 countries. ","0991ad28":"The total fertality rate has a small effect on suicide rates. ","c4663888":"We will initially look at impacts of all social economic factors in the Human Development Report where the data was taken in 2015.","1e997216":"The Human Development Reports will allow an analysis on the impact of HDI and other economic-social factors on suicide rates. There isn't a description of the data so I will assume columns without a description of year is taken in 2015. In addition, there are 5 countries 'Aruba', 'Macau', 'Puerto Rico', 'Republic of Korea', 'Saint Vincent and Grenadines' that are no in the HDI.","ee778938":"**Conclusion**","b0726f6a":"These are countries and year combinations that have 12 data points. (6 age groups for male and female). There are now only 99 countries and the year 2016 is not included. ","00702a5a":"As a result, an average of over 20 per 100 k people commited sucicde  in the age group 75+. Thus it is more likely that people above the age of 75 will commit suicide.","9adf76a2":"The dataset is from 1985 to 2016. Due to the span of the dataset, the GI generation and Generation Z are lower in data points and population. For the GI generation, the youngest age span is 61 to 92 while for the Generation Z, the older age span is 0 to 10 years. In fact in 1985, Generation Z didn't exist. ","3be63034":"* Introduction \n    *    Import & Tidy \n    * .  Issues with the Data \n*  Analysis \n    *     By Sex \n    *     By Age \n    *     By Generation \n    *     By GDP \n*  Merging HDI database \n    *     By Country \n    *     Sex and Social Economic Factors\n    *     Age and Social Economic Factors \n*  Conculsion","fe7cec8b":"**Generation**","81b24eec":"There are only 23 countries that have data from 1985 to 2015 (31 years). Thus a comparsion of countries or even year to year analysis should only be done with the 23 countries which is 23*31*12 = 8556 data points. This is only 8556\/27820 which is about 30% of the data provided. Also, countries like Beralus have gaps within the their year range. \n     \n","db650059":"**Issues with the Data **","66b17326":"**Analysis**","006395e8":"The age groups that are mainly affected by suicides are 75+ year old and the majority are males. It should be noted that  the average of the male and females of a given age group will equal to the average for the age groups which was shown in the eariler graph. "}}