{"cell_type":{"1dce8494":"code","8bd767e4":"code","1a151445":"code","47a41ec7":"code","91e47562":"code","36e42d8a":"code","f5c16fd9":"code","aa263e4b":"code","87720c4b":"code","c49d91e0":"code","76faa198":"code","ab982ea0":"code","75e78afa":"code","15d19c3b":"code","1b65ce93":"code","778c2e8a":"code","8b51645a":"code","69a5b9e0":"code","02588265":"code","8e486525":"code","d78b23f6":"code","6c4a2970":"code","2e3aba3b":"code","5c4b0fcd":"code","6596a52f":"code","14a0586b":"markdown","d23c3c83":"markdown"},"source":{"1dce8494":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","8bd767e4":"train_data = pd.read_csv(\"..\/input\/house-prices-advanced-regression-techniques\/train.csv\")","1a151445":"df = train_data.copy()","47a41ec7":"df.head()","91e47562":"df.shape","36e42d8a":"df.info()","f5c16fd9":"# see null values with the help of heatmap \nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","aa263e4b":"# Drop Id columns\ndf.drop(['Id'],axis=1,inplace=True)","87720c4b":"# Drop Alley column\n# Alley : Type of alley access\ndf.drop(['Alley'],axis=1,inplace=True)","c49d91e0":"# Drop PoolQC, Fence and MiscFeature columns\n# PoolQC: Pool quality\n# Fence: Fence quality\n# MiscFeature: Miscellaneous feature not covered in other categories\ndf.drop(['PoolQC','Fence','MiscFeature'],axis=1,inplace=True)","76faa198":"# Fill missing values in LotFrontage with mean\ndf['LotFrontage'] = df['LotFrontage'].fillna(df['LotFrontage'].mean())","ab982ea0":"# BsmtQual: Height of the basement\n# BsmtCond: General condition of the basement\n# Fill BsmtCond and BsmtQual with mode\ndf['BsmtCond'] = df['BsmtCond'].fillna(df['BsmtCond'].mode()[0])\ndf['BsmtQual'] = df['BsmtQual'].fillna(df['BsmtQual'].mode()[0])","75e78afa":"# FireplaceQu: Fireplace quality\n# GarageType: Garage location\n# Fill FireplaceQu and GarageType with mode\ndf['FireplaceQu'] = df['FireplaceQu'].fillna(df['FireplaceQu'].mode()[0])\ndf['GarageType'] = df['GarageType'].fillna(df['GarageType'].mode()[0])","15d19c3b":"# GarageYrBlt: Year garage was built\n# Drop GarageYrBlt\ndf.drop(['GarageYrBlt'],axis=1,inplace=True)","1b65ce93":"# GarageFinish: Interior finish of the garage\n# GarageQual: Garage quality\n# GarageCond: Garage condition\n# Fill GarageFinish,GarageQual and GarageCond with mode\ndf['GarageFinish'] = df['GarageFinish'].fillna(df['GarageFinish'].mode()[0])\ndf['GarageQual'] = df['GarageQual'].fillna(df['GarageQual'].mode()[0])\ndf['GarageCond'] = df['GarageCond'].fillna(df['GarageCond'].mode()[0])","778c2e8a":"# BsmtExposure: Walkout or garden level basement walls\n# BsmtFinType1: Quality of basement finished area\n# BsmtFinType2: Quality of second finished area (if present)\n# Fill BsmtExposure,BsmtFinType1 and BsmtFinType2 with mode\ndf['BsmtExposure'] = df['BsmtExposure'].fillna(df['BsmtExposure'].mode()[0])\ndf['BsmtFinType1'] = df['BsmtFinType1'].fillna(df['BsmtFinType1'].mode()[0])\ndf['BsmtFinType2'] = df['BsmtFinType2'].fillna(df['BsmtFinType2'].mode()[0])","8b51645a":"# MasVnrType: Masonry veneer type\n# MasVnrArea: Masonry veneer area in square feet\n# Fill MasVnrType and MasVnrArea with mode\ndf['MasVnrType'] = df['MasVnrType'].fillna(df['MasVnrType'].mode()[0])\ndf['MasVnrArea'] = df['MasVnrArea'].fillna(df['MasVnrArea'].mode()[0])","69a5b9e0":"# Electrical: Electrical system\ndf['Electrical'] = df['Electrical'].fillna(df['Electrical'].mode()[0])","02588265":"df.shape","8e486525":"df.isnull().sum()","d78b23f6":"# see if null values remain with the help of heatmap \nsns.heatmap(df.isnull(),yticklabels=False,cbar=False)","6c4a2970":"df.info()","2e3aba3b":"columns = ['MSZoning','Street','LotShape','LandContour','Utilities','LotConfig',\n           'LandSlope','Neighborhood','Condition1','Condition2','BldgType',\n           'HouseStyle','RoofStyle','RoofMatl', 'Exterior1st', 'Exterior2nd',\n           'MasVnrType','ExterQual','ExterCond','Foundation','BsmtQual','BsmtCond',\n           'BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir',\n           'Electrical','KitchenQual','Functional','FireplaceQu','GarageType','GarageFinish',\n           'GarageQual','GarageCond','PavedDrive','SaleType','SaleCondition']","5c4b0fcd":"len(columns)","6596a52f":"def category_onehot_multcols(multcols):\n    df_final = final_df\n    i = 0\n    for fields in multicolumns:\n        print(fields)\n        df1 = pd.get_dummies(final_df[fields],drop_firsts=True)\n        final_df.drop([fields],axis=1,inplace=True)\n        if (i==0):\n            df_final = df1.copy()\n        else:\n                df_final = pd.concat([df_final,df1],axis=1)\n                i=i+1\n    df_final = pd.concat([final_df,df_final],axis=1)\n    return df_final","14a0586b":"# **Handling Missing Values**","d23c3c83":"# **Handel Categroical Features**"}}