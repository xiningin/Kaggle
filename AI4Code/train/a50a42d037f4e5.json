{"cell_type":{"d14b3f67":"code","bcca94ca":"code","2466c9fa":"code","abbcc934":"code","eda86316":"code","d40b0c50":"code","64f36871":"code","aaef88f5":"code","1ec9f162":"code","85a50f69":"code","4cf63803":"code","68491c59":"code","edc781c4":"code","e56a814a":"code","228fdc51":"code","087488ac":"code","6f0d8df0":"code","1839f2d0":"code","5a2d7ae5":"code","bbf7eee3":"code","011f3920":"code","af86bb94":"markdown","197b99d9":"markdown","f5b7ec58":"markdown","4557bbcd":"markdown","81bc7b6a":"markdown","d909cf5e":"markdown","332a7fa7":"markdown"},"source":{"d14b3f67":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(\"darkgrid\")\ncsv_data = \"..\/input\/fifa19\/data.csv\"\ndf_fifa = pd.read_csv(csv_data)","bcca94ca":"df_fifa=df_fifa.drop([\"Unnamed: 0\",\"ID\",\"Photo\",\"Flag\",\"Club Logo\",\"Nationality\",\n                      \"Name\",\"Jersey Number\",\"Real Face\",\"Loaned From\"], axis=1)\ndf_fifa=df_fifa.drop([9501,26,370]) #drop weird body types","2466c9fa":"df_fifa.head()\n","abbcc934":"#Some simple data cleaning to convert strings to floats for linear regression\ncat = ['LS','ST','RS','LW','LF','CF','RF','RW','LAM','CAM','RAM','LM','LCM','CM'\n       ,'RCM','RM','LWB','LDM','CDM','RDM','RWB','LB','LCB','CB','RCB','RB']\n\n#after a quick google search the + and number after means nothing so I yeeted it \n#This is a transformation function and is passed through as a .apply argument\ndef player_number_change(x):\n    \"\"\" Converts the rating of individual player rating from string to float\n    Parameters\n    \"\"\"\n    if type(x) == str:\n        return float(x.split(\"+\")[0])\n    else:\n        return 0.0\n    \nfor i in cat:     \n    df_fifa[i]=df_fifa[i].apply(player_number_change)","eda86316":"#removes all rows with missing data    \ndf_fifa = df_fifa.dropna()\n\ndef player_money_change(e):\n    if e[-1] == 'K':\n        return float(e[1:-1])\/1000.0\n    else:\n        return float(e[1:-1])\nfor money in ['Value','Wage','Release Clause']:\n    df_fifa[money]=df_fifa[money].apply(player_money_change)","d40b0c50":"def player_height_change(height):\n    h = height.split(\"'\")\n    return float(h[0])*12 + float(h[1])\ndf_fifa[\"Height\"]=df_fifa[\"Height\"].apply(player_height_change)","64f36871":"#Changes mass data type to float\ndf_fifa[\"Weight\"] = df_fifa[\"Weight\"].apply(lambda x : float(x[:-3]) )","aaef88f5":"#no funciton definition needed as the function only has a return statement\ndf_fifa[\"Team experience\"] = df_fifa[\"Joined\"].apply(lambda x : float(x.split(\", \")[1]))\ndf_fifa = df_fifa.drop(\"Joined\", axis = 1)","1ec9f162":"tempwork = df_fifa[\"Work Rate\"].str.split(\"\/ \", n = 1, expand = True)\ndf_fifa['Work rate 1'] = tempwork[0]\ndf_fifa['Work rate 2'] = tempwork[1]\ndf_fifa=df_fifa.drop('Work Rate', axis=1)","85a50f69":"df_fifa[\"Overall_cat\"] = pd.cut(df_fifa[\"Overall\"],6,labels=[i for i in range(1,7)])\nsns.displot(df_fifa, x=\"Overall\",bins=6)","4cf63803":"from sklearn.model_selection import StratifiedShuffleSplit\nsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)\nfor train_index, test_index in split.split(df_fifa, df_fifa[\"Overall_cat\"]):\n    strat_train_set = df_fifa.reindex(train_index)\n    strat_test_set = df_fifa.reindex(test_index)","68491c59":"print(strat_test_set[\"Overall_cat\"].value_counts() \/ len(strat_test_set))","edc781c4":"for set_ in (strat_train_set, strat_test_set):\n    set_.drop(\"Overall_cat\", axis=1, inplace=True)\nstrat_train_set.head()","e56a814a":"strat_train_set= strat_train_set.dropna()\nstrat_test_set = strat_test_set.dropna()\n\ntrain_label = strat_train_set[\"Overall\"]\ntrain_set= strat_train_set.drop(\"Overall\",axis=1)\ntest_label = strat_test_set[\"Overall\"]\ntest_set = strat_test_set.drop(\"Overall\",axis=1)\n","228fdc51":"from sklearn.preprocessing import OneHotEncoder\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.compose import ColumnTransformer","087488ac":"cat_attribs = [\"Club\", \"Work rate 1\", \"Work rate 2\",\"Body Type\",\"Preferred Foot\"\n               ,\"Weak Foot\",\"Position\"]\ntrain_set_num = train_set.drop(cat_attribs,axis=1)","6f0d8df0":"num_pipeline = Pipeline([\n        ('std_scaler', StandardScaler()),\n    ])","1839f2d0":"full_pipeline = ColumnTransformer([\n        (\"num\", num_pipeline, list(train_set_num)),\n        (\"cat\", OneHotEncoder(), cat_attribs),\n    ])\ntrain_set_prepared = full_pipeline.fit_transform(train_set)\ntest_set_prepared = full_pipeline.transform(test_set)","5a2d7ae5":"from sklearn.linear_model import LinearRegression\n\nlin_reg = LinearRegression()\nlin_reg.fit(train_set_prepared, train_label)","bbf7eee3":"from sklearn.metrics import mean_squared_error\nOverall_predictions = lin_reg.predict(train_set_prepared)\nlin_mse = mean_squared_error(train_label, Overall_predictions)\nlin_rmse = np.sqrt(lin_mse)\nlin_rmse","011f3920":"test_prediction = lin_reg.predict(test_set_prepared)\nlin_mse = mean_squared_error(test_label, test_prediction)\nlin_rmse = np.sqrt(lin_mse)\nlin_rmse","af86bb94":"The histogram plot shows that most players have an overall score between 62-70. ","197b99d9":"# pandas.Dataframe.drop()\nThe called function removes unwanted columns (axis=1, means remove columns). Data such as name or nationality is irrelevant when trying to predict the overall score of a player. Minizing the amount of noise(irrelevant data), lowers the amount of computational power needed for a low generlization error.","f5b7ec58":"# Simple linear regression for FIFA 19 player dataset \nThe aim of the notebook is to provide some simple data cleaning and linear regression(Overall player score) for the FIFA 2019 dataset.","4557bbcd":"# pandas.Series.apply()\nThis function uses vectorization instead of applying the transformation function iteratively to each feature. Vectorization means the tranformation function is applied to the series at the same time. ","81bc7b6a":"# StratifiedShuffleSplit()\nStratifiedShuffleSplit splits the dataset into a trian and test dataset, based off of the overall player score histogram.","d909cf5e":"# Discussion about results\nThe root mean squared error is 1.5% on the test set indicating the linear regression model is a good model for predicting the overall score of players based off of other attributes.\n\n**Side Note**: This is a very basic model however all the data cleaning allows for a more in depth analysis, for example logistic regression or decision trees can use the hot encoded data. This notebook is not restricted to linear regression.","332a7fa7":"# Sklearn.pipeline.Pipeline()\nApplys transformations to data in one step."}}