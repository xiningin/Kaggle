{"cell_type":{"11fd934c":"code","a01d5b05":"code","f7561419":"code","da3ce8a4":"code","23e6b1c5":"code","1f1fbecc":"code","145b645d":"markdown","e63a2fdc":"markdown","193eae47":"markdown","e6727d3d":"markdown","47d759e6":"markdown","f2de2e2c":"markdown","6d206024":"markdown"},"source":{"11fd934c":"!curl https:\/\/raw.githubusercontent.com\/pytorch\/xla\/master\/contrib\/scripts\/env-setup.py -o pytorch-xla-env-setup.py\n!python pytorch-xla-env-setup.py --version 1.7 --apt-packages libomp5 libopenblas-dev","a01d5b05":"! pip install pytorch-lightning==1.1.5","f7561419":"import os\n\nimport torch\nfrom torch.nn import functional as F\nfrom torch.utils.data import DataLoader\nfrom torchvision.datasets import MNIST\nfrom torchvision import transforms\nimport pytorch_lightning as pl\n\nclass MNISTModel(pl.LightningModule):\n\n    def __init__(self):\n        super(MNISTModel, self).__init__()\n        # not the best model...\n        self.l1 = torch.nn.Linear(28 * 28, 10)\n\n    def forward(self, x):\n        # called with self(x)\n        return torch.relu(self.l1(x.view(x.size(0), -1)))\n\n    def training_step(self, batch, batch_nb):\n        # REQUIRED\n        x, y = batch\n        y_hat = self(x)\n        loss = F.cross_entropy(y_hat, y)\n        self.log('train_loss', loss)\n        return loss\n\n    def validation_step(self, batch, batch_nb):\n        # OPTIONAL\n        x, y = batch\n        y_hat = self(x)\n        loss = F.cross_entropy(y_hat, y)\n        self.log('val_loss', loss, prog_bar=True)\n\n\n    def test_step(self, batch, batch_nb):\n        # OPTIONAL\n        x, y = batch\n        y_hat = self(x)\n        loss = F.cross_entropy(y_hat, y)\n        self.log('test_loss', loss, prog_bar=True)\n\n    def configure_optimizers(self):\n        # REQUIRED\n        # can return multiple optimizers and learning_rate schedulers\n        # (LBFGS it is automatically supported, no need for closure function)\n        return torch.optim.Adam(self.parameters(), lr=0.001)\n    \n    def prepare_data(self):\n        self.mnist_train = MNIST(os.getcwd(), train=True, download=True, transform=transforms.ToTensor())\n        self.mnist_test = MNIST(os.getcwd(), train=False, download=True, transform=transforms.ToTensor())\n\n    def train_dataloader(self):\n        loader = DataLoader(self.mnist_train, batch_size=64, num_workers=4)\n        return loader\n\n    def val_dataloader(self):\n        loader = DataLoader(self.mnist_test, batch_size=64, num_workers=4)\n        return loader\n\n    def test_dataloader(self):\n        loader = DataLoader(self.mnist_test, batch_size=64, num_workers=4)\n        return loader","da3ce8a4":"mnist_model = MNISTModel()\n\n# most basic trainer, uses good defaults (8 TPU Cores)\n# training only for 20 epochs for demo purposes. For training longer simply adjust number below.\ntrainer = pl.Trainer(tpu_cores=8, max_epochs = 20)    \ntrainer.fit(mnist_model)   ","23e6b1c5":"# ckpt_path=None simply uses the weights your model currently has!\ntrainer.test(ckpt_path=None)","1f1fbecc":"%load_ext tensorboard\n%tensorboard --logdir lightning_logs\/","145b645d":"## Run test set\nIn this example we used the test set to validation (a big no no), it's just for simplicity.\nIn real training, make sure to split the train set into train\/val and use test for testing.","e63a2fdc":"## Train\nThe Trainer automates the rest.\n\nTrains on 8 cores","193eae47":"## View logs in tensorboard","e6727d3d":"### Install XLA\nXLA powers the TPU support for PyTorch","47d759e6":"# PyTorch Lightning TPU kernel\nUse this kernel to bootstrap a PyTorch project on TPUs using PyTorch Lightning\n\n## What is PyTorch Lightning?\nLightning is simply organized PyTorch code. There's NO new framework to learn.\nFor more details about Lightning visit the repo:\n\nhttps:\/\/github.com\/PyTorchLightning\/pytorch-lightning","f2de2e2c":"## Define the LightningModule\nThis is just regular PyTorch organized in a specific format.\n\nNotice the following:\n- no TPU specific code\n- no .to(device)\n- np .cuda()\n\nFor a full intro, read the following:   \nhttps:\/\/pytorch-lightning.readthedocs.io\/en\/stable\/introduction_guide.html","6d206024":"## Install PyTorch Lightning"}}