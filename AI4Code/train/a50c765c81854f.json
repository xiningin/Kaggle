{"cell_type":{"3af3c685":"code","1717f591":"code","cbfbdc7c":"code","1922f0d5":"code","f826e1b9":"code","74021cbe":"code","70265ed4":"code","22b152ee":"markdown","1d42bdf3":"markdown","af1721ca":"markdown","6aa3a5e2":"markdown","4feb16c6":"markdown","2f7b14d4":"markdown","82109166":"markdown","c8b4a60e":"markdown","662bc137":"markdown"},"source":{"3af3c685":"import numpy as np\nimport pandas as pd \nfrom sklearn.preprocessing import MaxAbsScaler","1717f591":"data = [[0, -100,0.01], [-50, 1000,-0.05], [100, -10000,0.001], [-500, 100000,-0.005],[1000,-1000000,0.0001]]\ndf = pd.DataFrame(data=data,columns=[\"col1\",\"col2\",\"col3\"])\ndf.head()","cbfbdc7c":"scaler = MaxAbsScaler()\nscaler.fit(data)","1922f0d5":"scaler.scale_","f826e1b9":"scaled_data = scaler.transform(data)\nscaled_data","74021cbe":"predicted_scaled_data = scaler.transform([[-365, -1234567,-0.02]])\npredicted_scaled_data","70265ed4":"scaled_df = pd.DataFrame(data=scaled_data,columns=df.columns)\nscaled_df.head()","22b152ee":"# make data ","1d42bdf3":"# import libraries","af1721ca":"# MaxAbsScaler","6aa3a5e2":"Scale each feature by its maximum absolute value.\n\nThis estimator scales and translates each feature individually such that the maximal absolute value of each feature in the training set will be 1.0. It does not shift\/center the data, and thus does not destroy any sparsity.\n\nThis scaler can also be applied to sparse CSR or CSC matrices.","4feb16c6":"# transform unseen data using MaxAbsScaler","2f7b14d4":"# transform data using MaxAbsScaler","82109166":"# to DataFrame ","c8b4a60e":"## get scale weight by column","662bc137":"# build MaxAbsScaler"}}