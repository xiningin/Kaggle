{"cell_type":{"aeac83a0":"code","512bcf21":"code","7a0a8a41":"code","20a0124a":"code","163f76e5":"code","d72f9152":"code","8dfee653":"code","bf806a9f":"code","aa061c7c":"code","9586b18b":"code","d04792db":"code","2016239a":"code","e1966a9d":"code","67b132e3":"code","4a7c9db9":"code","3ca79e8c":"code","3be33974":"code","b080e2fd":"code","18bf5e95":"code","f4b5d168":"code","61bcb077":"code","01687805":"code","12d7d72f":"code","9aab4fa8":"code","6e5dcdbc":"code","c307165c":"code","90284036":"code","a340a519":"code","62581ddc":"code","48ccdd50":"code","37d02ef0":"code","61150fcb":"code","4d998d04":"code","f52a7ea9":"code","07b5ce56":"code","426c7838":"code","fe8363ff":"code","f5227457":"code","03f40792":"markdown","204db5af":"markdown","d0a239fb":"markdown","bddd8826":"markdown","bba8c5c6":"markdown","89fdd77f":"markdown","ac7856d5":"markdown","932d1728":"markdown","9e3ab99d":"markdown","78dd2e99":"markdown","ea0dacb7":"markdown","226e2752":"markdown","88ac0798":"markdown","d4334aec":"markdown","d7321b28":"markdown","e8745658":"markdown","b68ade57":"markdown","2a778668":"markdown","52c6a7d0":"markdown","24dec724":"markdown","bf83f294":"markdown","980a1c83":"markdown","3cfac80f":"markdown","ee15dca1":"markdown","c3f91298":"markdown","228bbf17":"markdown","b1a3865f":"markdown","e43a9892":"markdown","6811371b":"markdown","51413631":"markdown","29d17ce1":"markdown","d4f894c4":"markdown","461bb307":"markdown","fb43afa3":"markdown","9ec167df":"markdown","bf2575f0":"markdown","9691845d":"markdown","e49a8a99":"markdown","e1865c4e":"markdown","6841f2fd":"markdown","22b8bac3":"markdown","65c813d9":"markdown","745034fd":"markdown","bbaeef1b":"markdown","116fa01a":"markdown","b9cf2198":"markdown","9184187c":"markdown"},"source":{"aeac83a0":"# import all packages and set plots to be embedded inline\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sb\n\n%matplotlib inline","512bcf21":"# Load the data and look at first 5 rows\ndf = pd.read_csv(\"\/kaggle\/input\/fifa19\/data.csv\")","7a0a8a41":"# Lets start by looking at the columns\ndf.columns","20a0124a":"# I will choose only most interesting columns\ndf = df[['Name', 'Age', 'Nationality', 'Overall', 'Club','Preferred Foot',\n         'Body Type', 'Position', 'Height', 'Weight', 'Finishing', 'Dribbling'\n         ,'Crossing', 'BallControl', 'Acceleration', 'Wage','International Reputation', 'Reactions', 'Value']]\n# Look at the data\ndf.head()","163f76e5":"# Look at nan values\ndf.isna().sum()","d72f9152":"# Drop nan values\ndf.dropna(inplace=True)","8dfee653":"df = df[df['Body Type'].isin(['Lean', 'Normal', \"Stocky\"])]","bf806a9f":"# Lets look at the types\ndf.dtypes","aa061c7c":"# Define faunction to extract the number value from the string\ndef func(s):\n        return eval(s.replace('\u20ac', '').replace('M', \"*1000000\").replace('K', '*1000'))","9586b18b":"# Convert height from foot to cm and save it as float\ndf['Height'] = df['Height'].apply(lambda x: round(float(x.replace(\"'\", '.'))*30.48),2)\ndf['Weight'] = df['Weight'].apply(lambda x: round(float(x.split('l')[0])*0.453592,2))\ndf['Wage'] = df['Wage'].apply(func)\ndf['Value']= df['Value'].apply(func)","d04792db":"df.head()","2016239a":"plt.hist(df['Value']);","e1966a9d":"df['Value'].describe()","67b132e3":"xticks = ['10K','30K','100K','300K',\"1M\",\"3M\",\"10M\",\"30M\",\"100M\"]\nbins = 10 ** np.arange(4, 8+0.1, 0.1)\n\nplt.figure(figsize=(10,6))\nplt.hist(df['Value'], bins=bins)\nplt.xscale('log')\nplt.xticks([10**4+1000, 3*10**4, 10**5, 3*10**5, 10**6, 3*10**6, 10**7, 3*10**7, 10**8], xticks)\nplt.title(\"Distribution of players' Values\")\nplt.xlabel(\"Value\")\nplt.ylabel(\"No. of players\")\n;","4a7c9db9":"plt.hist(df['Wage'])\n;","3ca79e8c":"xticks = ['1K', '3K', '10K','30K','100K','300K']\nbins = 10 ** np.arange(3, 5.65+0.1, 0.1)\n\nplt.figure(figsize=(10,6))\nplt.hist(df['Wage'], bins=bins)\nplt.xscale('log')\nplt.xticks([10**3+100, 3*10**3,10**4, 3*10**4, 10**5, 3*10**5], xticks)\nplt.title(\"Distribution of players' Wages\")\nplt.xlabel(\"Wage\")\nplt.ylabel(\"No. of players\")\n;","3be33974":"# Looks at min\/max to set our bins\ndf['Overall'].describe()","b080e2fd":"# Lets look at Overall distribution\nb = np.arange(46, 94+4, 4)\nplt.hist(df['Overall'], bins=b)\nplt.title(\"Overall distribution\")\nplt.xlabel(\"overall\")\nplt.ylabel('No. of players')\n;","18bf5e95":"default_color = sb.color_palette()[0]\n\n# Create 2 Pie plots\nfig, ax = plt.subplots(ncols=2, figsize=(15,5))\n\n# BodyType Pie\nax[0].pie(df['Body Type'].value_counts(),labels=df['Body Type'].unique(), autopct='%1.1f%%', shadow=True, startangle=90, explode=(0.05,0.05,0))\nax[0].axis('equal')\nax[0].title.set_text(\"Body Type Percentage\\n\")\n\n# PreferredFoot Pie\nax[1].pie(df['Preferred Foot'].value_counts(),labels=df['Preferred Foot'].unique(), autopct='%1.1f%%', shadow=True, startangle=90, explode=(0,0.1))\nax[1].axis('equal')\nax[1].title.set_text(\"Preferred Foot Percentage\\n\")","f4b5d168":"# Create Position barplot\nplt.figure(figsize=(15,5))\nposition_order = df['Position'].value_counts().index\nsb.countplot(data=df, x='Position', color=default_color, order=position_order)\n;","61bcb077":"# Create Position barplot\nplt.figure(figsize=(15,5))\nposition_order = df['International Reputation'].value_counts().index\nsb.countplot(data=df, x='International Reputation', color=default_color, order=position_order)\n;","01687805":"top10Nationalities = df['Nationality'].value_counts().head(10).index\ndf2 = df.loc[df['Nationality'].isin(list(top10Nationalities))]\n# Create Top 10 nationalities barplot\nplt.figure(figsize=(14,4))\nsb.countplot(data=df2, x='Nationality', color=default_color, order=top10Nationalities)\nplt.title('Top 10 Nationalities')\n;","12d7d72f":"# Create subplots\nfig, ax = plt.subplots(nrows=2, ncols=4, figsize=(16,5))\nfig.tight_layout()\n\n# Age\nax[0][0].hist(df['Age'], color='#1f77b4')\nax[0][0].title.set_text('Age distribution')\n# ax[0][0].set_xlabel('Age')\nax[0][0].set_ylabel('No. of players')\n\n# Height\nax[0][1].hist(df['Height'], color='#1f77b4')\nax[0][1].title.set_text('Height distribution')\n# ax[0][1].set_xlabel('Height')\n\n# Weight\nax[0][2].hist(df['Weight'], color='#1f77b4')\nax[0][2].title.set_text('Weight distribution')\n# ax[0][2].set_xlabel('Weight')\n\n# Finishing\nax[0][3].hist(df['Finishing'], color='#1f77b4')\nax[0][3].title.set_text('Finishing distribution')\n# ax[0][3].set_xlabel('Finishing')\n\n# Crossing\nax[1][0].hist(df['Crossing'], color='#1f77b4')\nax[1][0].set_xlabel('Crossing')\nax[1][0].set_ylabel('No. of players')\n\n# Dribbling\nax[1][1].hist(df['Dribbling'], color='#1f77b4')\nax[1][1].set_xlabel('Dribbling Accuracy')\n\n# Ball Control\nax[1][2].hist(df['BallControl'], color='#1f77b4')\nax[1][2].set_xlabel('Ball Control')\n\nax[1][3].hist(df['Acceleration'], color='#1f77b4')\nax[1][3].set_xlabel('Acceleration')\n;","9aab4fa8":"df.head()","6e5dcdbc":"plt.figure(figsize = [12, 8])\nsb.heatmap(df.corr(), annot = True, fmt = '.3f',\n           cmap = 'vlag_r', center = 0)\nplt.show()\n","c307165c":"# We can take a sample to make it clear\ndf_sample = df.sample(2000)\n\ng = sb.PairGrid(df_sample)\ng.map_diag(plt.hist, bins=20)\ng.map_offdiag(plt.scatter)\n;","90284036":"plt.figure(figsize=(10,6))\nplt.scatter(data=df, x='Overall', y='Value')\nplt.title(\"Relation between Overall and Value\")\nplt.yticks([0.0e+00,  2.0e+07,  4.0e+07,  6.0e+07,  8.0e+07,1.0e+08,  1.2e+08],\n            ['0', '20M', '40M', '60M', '80M', '100M', '120M'])\nplt.xlabel('Overall')\nplt.ylabel('Value')\n;","a340a519":"plt.figure(figsize=(10,6))\nplt.scatter(df['Overall'], df['Wage'])\n;","62581ddc":"plt.figure(figsize=(10,10))\nplt.scatter(data=df, x='BallControl', y='Value', alpha=0.7)\nplt.title(\"Relation between Ball Control and Value\")\nplt.yticks([0.0e+00,  2.0e+07,  4.0e+07,  6.0e+07,  8.0e+07,1.0e+08,  1.2e+08],\n            ['0', '20M', '40M', '60M', '80M', '100M', '120M'])\nplt.xlabel('Ball Control')\nplt.ylabel('Value')\n;","48ccdd50":"fig, ax = plt.subplots(ncols=2, figsize=(14,6))\nsb.boxplot(data=df, x='Preferred Foot', y='Value',showfliers = False, color=default_color, ax=ax[0])\nsb.boxplot(data=df, x='Body Type', y='Value', showfliers = False,color=default_color, ax=ax[1])\n;","37d02ef0":"# Lets get position arder based on mean\nposition_order = df.groupby(\"Position\").mean()['Value'].sort_values(ascending=False).index","61150fcb":"plt.figure(figsize=(16,6))\nsb.boxplot(data=df, x='Position', y='Value',showfliers = False, color=default_color, order=position_order)\nplt.yticks([0.0e+00,  0.5e+07,  1e+07,  1.5e+07,  2.0e+07],\n            ['0', '5M', '10M', '15M', '20M'])\nplt.ylabel(\"Mean Value\")\n;","4d998d04":"df['International Reputation']","f52a7ea9":"plt.figure(figsize=(10,10))\nsb.boxplot(data=df, x='International Reputation', y='Value',showfliers = False, color=default_color)\nplt.title(\"International-Reputation and Value relationship\")\nplt.yticks([0,  0.2e+08,  0.4e+08,  0.6e+08,  0.8e+08,  1e+08], [\"0\",  \"20M\",  \"40M\",  \"60M\",  \"80M\",  '100M'])\n;","07b5ce56":"g = sb.FacetGrid(data=df, col='International Reputation', size=4, col_wrap=3)\ng.map(plt.scatter, 'Overall', 'Value')\nplt.yticks([0.0e+00,  2.0e+07,  4.0e+07,  6.0e+07,  8.0e+07,1.0e+08,  1.2e+08],\n            ['0', '20M', '40M', '60M', '80M', '100M', '120M'])\nplt.xlabel('Overall')\nplt.ylabel('Value')\n;","426c7838":"g = sb.FacetGrid(data=df, col='Body Type', size=4, col_wrap=3)\ng.map(plt.scatter, 'Overall', 'Value')\nplt.yticks([0.0e+00,  2.0e+07,  4.0e+07,  6.0e+07,  8.0e+07,1.0e+08,  1.2e+08],\n            ['0', '20M', '40M', '60M', '80M', '100M', '120M'])\nplt.xlabel('Overall')\nplt.ylabel('Value')\n;","fe8363ff":"g = sb.FacetGrid(data=df, col='Preferred Foot', size=4, col_wrap=2)\ng.map(plt.scatter, 'Overall', 'Value')\nplt.yticks([0.0e+00,  2.0e+07,  4.0e+07,  6.0e+07,  8.0e+07,1.0e+08,  1.2e+08],\n            ['0', '20M', '40M', '60M', '80M', '100M', '120M'])\nplt.xlabel('Overall')\nplt.ylabel('Value')\n;","f5227457":"plt.figure(figsize=(14,8))\nsb.pointplot(data=df, x='International Reputation', y='Value', palette = 'Greens',\n             hue='Body Type', dodge = 0.4, linestyles=\"\")\nplt.title(\"Values across International-Reputation and Body Type\")\nplt.yticks([0,  0.2e+08,  0.4e+08,  0.6e+08,  0.8e+08], [\"0\",  \"20M\",  \"40M\",  \"60M\",  \"80M\"])\n;","03f40792":"## Univariate Exploration\n","204db5af":"Let's look at position","d0a239fb":"Left forward players have the Highest values","bddd8826":"### What is the structure of the dataset?\n\n> The dataset consist of 18207 player and 89 columns, but I will use only 16 columns of them.\n\n### What is\/are the main feature(s) of interest in the dataset?\n\n> I'm interested in finding out what features are most related to predict the player value.\n\n### What features in the dataset do we think will help support your investigation into our feature(s) of interest?\n\n> I expect Overall to have the strongest effect on player value. the higher the Overall, the higher the player value. Other factors like: speed, finishing, ballControl and club can also can affect player's value.","bba8c5c6":"First of all, I want to look at the pairwise correlations present between features in the data.","89fdd77f":"> Load in the dataset and describe its properties through the questions below.","ac7856d5":"## Bivariate Exploration\n","932d1728":"Since null vlues are not that much compared to the number of players, we can drop them.","9e3ab99d":"- In Value variable, the numbers of players taking same salary varies alot, so I looked at the data using a log transform on the y axis. Under the transformation, the data looked right skewed, with most players' values less than 20M, and only one player value is 100M.","78dd2e99":"Let's see how our categorical variables relate to player Value.","ea0dacb7":"Overall is strongly related to Value.","226e2752":"Most Vauable players have Normal body Type.","88ac0798":"Findings:\n- as expected Overall is related to Value, and it look a quadratic relation\n- Ball control, Finishing, and Dribbling also seems to relate to Value.\n- Dribbling, Acceleration, ball control, crossing, and Finishing are all highly correlated with one another.\n- Weight is correlated positively with Height.\n- Weight is correlated negatively with Dribbling, Acceleration, ball control.","d4334aec":"Now Let's look at The relation between International Reputation and Value.","d7321b28":"Let's see the relation between Overall and Wage.","e8745658":"## Multivariate Exploration\n\n","b68ade57":"- It's clear that International Reputation is related to Value positevly, and Body type affect this as LEan is greater than Normal, and Normal is greater than Stocky.\n- Top paid player Prefere right foot.\n\n\n> It was interesting that at International Reputation 1,2,3 Stocky is quite similar to Lean, but at  International Reputation, Lean is higher than Stocky, And all players at 5 have Normal Body.","2a778668":"A dodged point plot shows the clear influence of International and Body Type on Player's Value. The larger error bars on the right side are due to there being fewer Players at higher International level.","52c6a7d0":"Let's see how Value correlate to Body Type and International Reputation","24dec724":"Preferred Foot","bf83f294":"Now let's move to Wage variable.","980a1c83":"- It seems most Players who preffered  Left leg have a little higher values than Players who preffered right leg.\n- The median of Stocky is greater than Normal, and Normal is little as same as Lean.","3cfac80f":"there's a long tail in the distribution, so let's put it on a log scale instead\n","ee15dca1":"- Overall is strongly related with Value. An approximately quadratic relationship was observed when Value was  plotted on a log scale.\n- International-Reputation and Value of player are strongly correlated.\n- Body Type seems to have relation too with Price, Stoky has the highest Values\n- Players using left leg have heigher values.\n- Left Forward players are The most expensive players.\n\n- Overall has almost the same relation with Wage as with Value.\n- Dribbling, Acceleration, ball control, crossing, and Finishing are all highly correlated with one another.\n- Height and weight have a positive relationship\n- Weight is negatively corelated with Acceleration\n","c3f91298":"there's a long tail in the distribution, so let's put it on a log scale instead\n","228bbf17":"Let's start by International Reputation","b1a3865f":"Lets see some other variables.","e43a9892":"- in height many people are less than 160 cm, and very few people are between 160 and 15.","6811371b":"It's almost the same as the Value","51413631":"As the International Reputation increases, the Overall and Values increases.","29d17ce1":"Lets look more closely at the Overall-Value relation.","d4f894c4":"What is interesting is that huge number of players take the same Wage (1K), and also some below 3K.","461bb307":"The disrtibution looks abit like normal disrtibution with most values betweem 300K and 1M. There are some few values that are separated (10K, and below 30K).","fb43afa3":"England is the most frequent Nationality among players.","9ec167df":"Striker is the most common position","bf2575f0":"The main thing to explore in this part of the analysis is how the the categorical variables play into the relationship between Overall and Value.","9691845d":"Now we can look at Body Type","e49a8a99":"Next, the first predictor variable of interest: Overall.","e1865c4e":"It appears that there is a positive relationship between International-Reputation and Value of player.","6841f2fd":"# FIFA Data Exploration\n## by Abdallah Mahmoud Elsayed\n\n## Preliminary Wrangling\n\n> This document explores FIFA19 dataset that includes information about more than 18k players.","22b8bac3":"# And Done :D","65c813d9":"It looks like a normal disrtibution, with most players overall around 65","745034fd":"- It looks like the majority of players falls in Lean, followed by Normal, and only a few in Stocky\n- The preferred foot for 76.8% of players is the riht foot","bbaeef1b":"There are some types that need to be converted to numbers:\n- height\n- weight\n- Wage\n- Value","116fa01a":"Let's start by looking at the distribution of the main variable: **Value**","b9cf2198":"# if \ud83d\udc4d please \u2b06\ufe0f ","9184187c":"Now, we can move to bodyType, Preferred Foot"}}