{"cell_type":{"0eea2e15":"code","70e2bb7c":"code","bb192782":"code","055a36ac":"code","dbbff7af":"code","2faa7fc6":"code","de754f42":"code","a661b54b":"code","7aaea136":"code","210419b9":"code","cf76c4c1":"code","13dffd37":"code","f298e28f":"code","984dc10f":"code","8f830742":"code","2f4e10ef":"code","36af6cbe":"code","8d683ee2":"code","bcdcc606":"code","864bb748":"code","14f273cb":"code","b74cf387":"code","73c6e604":"code","bb4fb742":"code","68892be0":"code","9922ea14":"code","5407a5ae":"code","dade21a1":"code","a4c89cc2":"code","2568a60c":"code","df8dee56":"code","00bfd79a":"code","deda44cc":"code","a971c50e":"code","89badce5":"code","21e9103b":"code","7845a07d":"code","469994a2":"code","65ea7652":"code","e5aaa0d8":"code","fa8ebb4a":"code","e5662863":"code","30bef655":"code","985b4d62":"code","cb55ce8a":"code","a918cc62":"code","65f6809c":"code","b74963f3":"code","1c86efe5":"code","ce7e7d2a":"code","991fdbc6":"code","dd3ccd65":"code","a4ba4c91":"code","bfa53eaa":"code","edab4456":"code","8de42657":"code","36f32e2a":"code","2ddb3fe2":"code","77847e5a":"code","4c3a5479":"code","0d72e706":"code","c9a4ffc1":"code","8116427c":"code","7fe21d0b":"code","ecb4dd41":"code","ade873f3":"code","34699ad8":"code","3ffacd94":"code","c05453aa":"code","ee2d00ba":"code","d19351ec":"code","15835c51":"code","00a30fd4":"code","52bd83ef":"code","f2d4600b":"code","7e1389a6":"code","74700fa0":"code","8b3b1144":"code","1058c607":"code","1f1ff925":"code","b174263b":"code","31c744b3":"code","ec663dc3":"code","5435c40d":"code","41ee6632":"code","e7e52b30":"code","1d941fcf":"code","0669502f":"code","fac594f6":"code","962015f7":"code","11ba8701":"code","653adfb8":"code","b9e98c1c":"code","68d4b458":"code","1d00c889":"code","5e02c3df":"code","10fa06c5":"code","d7406171":"code","0d8daecf":"code","34747381":"code","000d0f2b":"code","dac14c7e":"code","6285d9fa":"code","c239e34b":"code","884d5286":"code","bb2bb54a":"code","20935c00":"code","5bddf952":"code","97111031":"code","7f99df2d":"code","d8705b7e":"code","658279f5":"code","fb4d3e0a":"code","cd8cd6d7":"code","82ab9517":"code","71c26b37":"code","fb39ccac":"code","61daa717":"code","25c50636":"code","b22f3e58":"code","5f91becf":"code","a5eafc71":"code","a5a8533f":"code","4c89aac4":"code","069333e7":"code","af4c7269":"code","09f000f1":"code","fcb1a562":"code","a8cb02af":"code","36ab6f28":"code","9dbe4781":"code","49938217":"code","4b9c852c":"code","3465482f":"code","e4af882e":"code","437df815":"code","366d1cb8":"code","dd511c8b":"code","e133fbd8":"code","65722eda":"code","235bbab3":"code","67ee94b3":"code","a4e17085":"code","74903fbe":"code","c51a8264":"code","22f47c4b":"code","cc255eec":"code","475ab082":"code","cb2ba50e":"code","8462a8ec":"code","917e572a":"code","f6a5b3c8":"code","32451fb3":"code","a71570f3":"code","b947a662":"code","f85fec9c":"code","a135f7dd":"code","3b04442b":"code","058ec0f5":"markdown","f102865d":"markdown","83e4b666":"markdown","ac690a5f":"markdown","3920b8cc":"markdown","77f4c581":"markdown","64e09eff":"markdown","1814b88b":"markdown","1f2a613f":"markdown","1998854e":"markdown","76c4ed48":"markdown","89f57ae6":"markdown","182a5689":"markdown","e6a2b01f":"markdown","fdf50d93":"markdown","e1b94207":"markdown","d7847fd4":"markdown","c6fd13b8":"markdown","3a10a477":"markdown","eb23d34f":"markdown","9ebfda4d":"markdown","f2545733":"markdown","d5300038":"markdown","fbf6a9bf":"markdown","76944031":"markdown","0e240137":"markdown"},"source":{"0eea2e15":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')","70e2bb7c":"pd.set_option('display.max_columns',300)","bb192782":"import os\nos.environ['KMP_DUPLICATE_LIB_OK']='True'","055a36ac":"train = pd.read_csv('..\/input\/amexpert-2019\/train.csv')\ntrain.head()","dbbff7af":"train.info()","2faa7fc6":"train.coupon_id.nunique()","de754f42":"campaign = pd.read_csv('..\/input\/amexpert-2019\/campaign_data.csv')\ncampaign.head()","a661b54b":"campaign.info()","7aaea136":"coupon = pd.read_csv('..\/input\/amexpert-2019\/coupon_item_mapping.csv')\ncoupon.head()","210419b9":"coupon.info()","cf76c4c1":"transaction = pd.read_csv('..\/input\/amexpert-2019\/customer_transaction_data.csv')\ntransaction.head()","13dffd37":"train.shape","f298e28f":"transaction.info()","984dc10f":"item = pd.read_csv('..\/input\/amexpert-2019\/item_data.csv')\nitem.head()","8f830742":"item.category.unique()","2f4e10ef":"demograph = pd.read_csv('..\/input\/amexpert-2019\/customer_demographics.csv')\ndemograph.head()","36af6cbe":"demograph.isnull().sum()\/760","8d683ee2":"demograph.info()","bcdcc606":"campaign['start_date'] = pd.to_datetime(campaign['start_date'])\ncampaign['end_date'] = pd.to_datetime(campaign['end_date'])\n#pd.to_datetime(campaign['end_date'])","864bb748":"campaign['duration'] = abs((campaign['end_date'] -  campaign['start_date']).dt.days)","14f273cb":"demograph.income_bracket.unique()","b74cf387":"demograph['marital_status'] = demograph.groupby(['family_size','age_range'])\\\n['marital_status'].apply(lambda x: x.fillna(x.mode()[0]))","73c6e604":"demograph.marital_status.unique()","bb4fb742":"demograph.drop('no_of_children',axis=1,inplace=True)","68892be0":"sns.countplot(train.redemption_status)","9922ea14":"mtc = pd.merge(train,campaign,on='campaign_id',how='left')\nmtc.head()","5407a5ae":"mtc.shape","dade21a1":"mci = pd.merge(coupon,item,on='item_id',how='left')\nmci.head()","a4c89cc2":"mci.coupon_id.nunique()","2568a60c":"mci.shape","df8dee56":"mci.groupby('coupon_id').count().reset_index()[['coupon_id','item_id']].head()","00bfd79a":"mci_group = pd.DataFrame()","deda44cc":"mci_group[['coupon_id','category_count']] = \\\nmci.groupby('coupon_id').count().reset_index()[['coupon_id','item_id']]","a971c50e":"mci.groupby('coupon_id').max().reset_index().head()","89badce5":"mci_group[['brand_type','category']] = \\\nmci.groupby('coupon_id').max().reset_index()[['brand_type','category']]","21e9103b":"mci_group.head()","7845a07d":"#tgroup = transaction.groupby(['customer_id','item_id','date']).sum().reset_index()\ntgroup = transaction.groupby(['customer_id']).sum().reset_index()","469994a2":"tgroup.head()","65ea7652":"tgroup.drop('item_id',axis=1,inplace=True)","e5aaa0d8":"tgroup.shape","fa8ebb4a":"mdtg = pd.merge(tgroup,demograph,on='customer_id',how='outer')\nmdtg.head()","e5662863":"mdtg.shape","30bef655":"mergeddata = pd.merge(mtc,mdtg,on=['customer_id'],how='left')\nmergeddata.head()","985b4d62":"mergeddata.shape","cb55ce8a":"mergeddata.info()","a918cc62":"mergeddata.isnull().sum()\/78369","65f6809c":"mergeddata['marital_status'].fillna(mergeddata['marital_status'].mode()[0],inplace=True)","b74963f3":"mergeddata['age_range'].fillna(mergeddata['age_range'].mode()[0],inplace=True)","1c86efe5":"mergeddata['family_size'].fillna(mergeddata['family_size'].mode()[0],inplace=True)","ce7e7d2a":"mergeddata['rented'].fillna(mergeddata['rented'].mode()[0],inplace=True)","991fdbc6":"mergeddata['income_bracket'].fillna(mergeddata['income_bracket'].median(),inplace=True)","dd3ccd65":"mergeddata = pd.merge(mergeddata,mci_group,on=['coupon_id'],how='left')\nmergeddata.head()","a4ba4c91":"mergeddata.info()","bfa53eaa":"from sklearn.preprocessing import LabelEncoder","edab4456":"lc = LabelEncoder()","8de42657":"mergeddata['age_range'] = lc.fit_transform(mergeddata['age_range'])\nmergeddata['family_size'] = lc.fit_transform(mergeddata['family_size'])","36f32e2a":"mergeddata.info()","2ddb3fe2":"item.category.unique()","77847e5a":"cat_list = ['Bakery', 'Packaged Meat', 'Seafood', 'Dairy, Juices & Snacks',\n            'Prepared Food','Meat','Salads', 'Alcohol','Vegetables (cut)']","4c3a5479":"def mapCategory(x):\n    if x in cat_list:\n        return 'consumable'\n    else:\n        return 'non-consumable'","0d72e706":"mergeddata['category'] = mergeddata['category'].apply(mapCategory)","c9a4ffc1":"mergeddata['final_price'] = mergeddata['selling_price']+ mergeddata['other_discount'] + mergeddata['coupon_discount']","8116427c":"mergeddata.drop(['selling_price','other_discount','coupon_discount'],axis=1,inplace=True)","7fe21d0b":"mergeddata.income_bracket.unique()","ecb4dd41":"sns.countplot(mergeddata.income_bracket)","ade873f3":"def mapIncome(x):\n    if (x<4):\n        return 'low'\n    elif (x>=4 and x<=7):\n        return 'middle'\n    elif (x>7 and x<=10):\n        return 'upper-middle'\n    elif (x>10):\n        return 'high'","34699ad8":"mergeddata['income_bracket'] = mergeddata['income_bracket'].apply(mapIncome)","3ffacd94":"inc_dict = {'low':1,'middle':2,'upper-middle':3,'high':4}\ninc_dict","c05453aa":"mergeddata['income_bracket'] = mergeddata['income_bracket'].map(inc_dict)","ee2d00ba":"dummydata = pd.get_dummies(mergeddata.drop(['redemption_status','coupon_id','customer_id','id','campaign_id','start_date','end_date'],axis=1))\ndummydata.head()","d19351ec":"from sklearn.preprocessing import RobustScaler","15835c51":"rc = RobustScaler()","00a30fd4":"scaledData = pd.DataFrame(rc.fit_transform(dummydata),columns=dummydata.columns)\nscaledData.head()","52bd83ef":"x = scaledData\ny = mergeddata['redemption_status']","f2d4600b":"test = pd.read_csv('..\/input\/amexpert-2019\/test_QyjYwdj.csv')\ntest.head()","7e1389a6":"mtc_test = pd.merge(test,campaign,on='campaign_id',how='left')\n\nmci_test = pd.merge(coupon,item,on='item_id')\n\nmdtg_test = pd.merge(tgroup,demograph,on='customer_id',how='outer')\nmergeddata_test = pd.merge(mtc_test,mdtg_test,on=['customer_id'],how='left')\n\nmergeddata_test['marital_status'].fillna(mergeddata_test['marital_status'].mode()[0],inplace=True)\nmergeddata_test['age_range'].fillna(mergeddata_test['age_range'].mode()[0],inplace=True)\nmergeddata_test['family_size'].fillna(mergeddata_test['family_size'].mode()[0],inplace=True)\nmergeddata_test['rented'].fillna(mergeddata_test['rented'].mode()[0],inplace=True)\nmergeddata_test['income_bracket'].fillna(mergeddata_test['income_bracket'].median(),inplace=True)\n\nmergeddata_test = pd.merge(mergeddata_test,mci_group,on=['coupon_id'],how='left')\n\nmergeddata_test['age_range'] = lc.fit_transform(mergeddata_test['age_range'])\nmergeddata_test['family_size'] = lc.fit_transform(mergeddata_test['family_size'])\n\nmergeddata_test['category'] = mergeddata_test['category'].apply(mapCategory)\nmergeddata_test['final_price'] = mergeddata_test['selling_price']+ mergeddata_test['other_discount'] + mergeddata_test['coupon_discount']\nmergeddata_test.drop(['selling_price','other_discount','coupon_discount'],axis=1,inplace=True)\nmergeddata_test['income_bracket'] = mergeddata_test['income_bracket'].apply(mapIncome)\nmergeddata_test['income_bracket'] = mergeddata_test['income_bracket'].map(inc_dict)\n\ndummydata_test = pd.get_dummies(mergeddata_test.drop(['coupon_id','customer_id','id','campaign_id','start_date','end_date'],axis=1))\nscaledData_test = pd.DataFrame(rc.fit_transform(dummydata_test),columns=dummydata_test.columns)\nscaledData_test.head()","74700fa0":"mergeddata_test.info()","8b3b1144":"from sklearn.model_selection import train_test_split","1058c607":"xtrain,xtest,ytrain,ytest = train_test_split(x,y,random_state=0)","1f1ff925":"from sklearn.metrics import accuracy_score,roc_auc_score","b174263b":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier","31c744b3":"lor = LogisticRegression()","ec663dc3":"lor.fit(xtrain,ytrain)\nypredlor = lor.predict(xtest)","5435c40d":"accuracy_score(ytest,ypredlor)","41ee6632":"yproba_yes = lor.predict_proba(xtest)[:,1]","e7e52b30":"roc_auc_score(ytest,yproba_yes)","1d941fcf":"rf = RandomForestClassifier()\nrf.fit(xtrain,ytrain)\nypredrf = rf.predict(xtest)\nprint(accuracy_score(ytest,ypredrf))\nyproba_yes = rf.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","0669502f":"lor.fit(x,y)\nypredlor = lor.predict(scaledData_test)\nypredlor","fac594f6":"print(test.id.shape)\nprint(ypredlor.shape)\nprint(scaledData_test.shape)","962015f7":"transaction.shape","11ba8701":"#mergeddata_test[mergeddata_test.duplicated()]","653adfb8":"dummydata_test.shape","b9e98c1c":"submission = pd.DataFrame({'id':test['id'],'redemption_status':ypredlor})\nsubmission.head()","68d4b458":"submission.to_csv('rahul_amex_lor.csv',index=False)","1d00c889":"rf = RandomForestClassifier()\nrf.fit(x,y)\nypredrf = rf.predict(scaledData_test)\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':ypredrf})\nsubmission.head()\nsubmission.to_csv('rahul_amex_rf.csv',index=False)","5e02c3df":"param_rf = {\n    'max_depth': [2, 3, 4],\n    'bootstrap': [True, False],\n    'max_features': ['auto', 'sqrt', 'log2', None],\n    'criterion': ['gini', 'entropy']\n}","10fa06c5":"#from sklearn.model_selection import GridSearchCV\n# gridRf = GridSearchCV(rf, cv = 10,param_grid=param_rf,scoring='roc_auc')\n# gridRf.fit(x,y)\n# gridRf.best_params_","d7406171":"from xgboost import XGBClassifier","0d8daecf":"xg = XGBClassifier()","34747381":"xg.fit(xtrain,ytrain)\nypredxg = xg.predict(xtest)\nprint(accuracy_score(ytest,ypredxg))\nyproba_yes = xg.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","000d0f2b":"xg = XGBClassifier()\nxg.fit(x,y)\nypredxg = xg.predict(scaledData_test)\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':ypredxg})\nsubmission.head()\nsubmission.to_csv('rahul_amex_xgb.csv',index=False)","dac14c7e":"from sklearn.ensemble import AdaBoostClassifier","6285d9fa":"ada = AdaBoostClassifier()","c239e34b":"ada.fit(xtrain,ytrain)\nypredada = ada.predict(xtest)\nprint(accuracy_score(ytest,ypredada))\nyproba_yes = ada.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","884d5286":"from sklearn.ensemble import GradientBoostingClassifier","bb2bb54a":"gba = GradientBoostingClassifier()\ngba.fit(xtrain,ytrain)\nypredgba = gba.predict(xtest)\nprint(accuracy_score(ytest,ypredgba))\nyproba_yes = gba.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","20935c00":"gba = GradientBoostingClassifier()\ngba.fit(x,y)\nypredgba = gba.predict(scaledData_test)\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':ypredgba})\nsubmission.head()\nsubmission.to_csv('rahul_amex_gba.csv',index=False)","5bddf952":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier","97111031":"gba = GaussianNB()\ngba.fit(xtrain,ytrain)\nypredgba = gba.predict(xtest)\nprint(accuracy_score(ytest,ypredgba))\nyproba_yes = gba.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","7f99df2d":"gba = KNeighborsClassifier()\ngba.fit(xtrain,ytrain)\nypredgba = gba.predict(xtest)\nprint(accuracy_score(ytest,ypredgba))\nyproba_yes = gba.predict_proba(xtest)[:,1]\nroc_auc_score(ytest,yproba_yes)","d8705b7e":"# gba = SVC()\n# gba.fit(xtrain,ytrain)\n# ypredgba = gba.predict(xtest)\n# print(accuracy_score(ytest,ypredgba))\n# yproba_yes = gba.predict_proba(xtest)[:,1]\n# roc_auc_score(ytest,yproba_yes)","658279f5":"from imblearn.under_sampling import NearMiss","fb4d3e0a":"nm = NearMiss()","cd8cd6d7":"downx,downy = nm.fit_sample(x.drop(['age_range','rented','campaign_type_Y','marital_status_Single',\\\n 'category_non-consumable','brand_type_Established','income_bracket'],axis=1),y)","82ab9517":"xtrain2,xtest2,ytrain2,ytest2 = train_test_split(downx,downy,random_state=0)","71c26b37":"rf = RandomForestClassifier(n_estimators=300)\nrf.fit(xtrain2,ytrain2)\nypredrf2 = rf.predict(xtest2)\nprint(accuracy_score(ytest2,ypredrf2))\nyproba_yes2 = rf.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","fb39ccac":"xg = XGBClassifier(n_estimators=150,learning_rate=0.2)\nxg.fit(xtrain2,ytrain2)\nypredxg2 = xg.predict(xtest2)\nprint(accuracy_score(ytest2,ypredxg2))\nyproba_yes2 = xg.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","61daa717":"ada = AdaBoostClassifier(n_estimators=150,learning_rate=0.4)\nada.fit(xtrain2,ytrain2)\nypredada2 = ada.predict(xtest2)\nprint(accuracy_score(ytest2,ypredada2))\nyproba_yes2 = ada.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","25c50636":"gba = GradientBoostingClassifier(n_estimators=150,learning_rate=0.2)\ngba.fit(xtrain2,ytrain2)\nypredgba2 = gba.predict(xtest2)\nprint(accuracy_score(ytest2,ypredgba2))\nyproba_yes2 = gba.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","b22f3e58":"from imblearn.over_sampling import SMOTE","5f91becf":"sm = SMOTE()","a5eafc71":"upx,upy = sm.fit_sample(x.drop(['age_range','rented','campaign_type_Y','marital_status_Single',\\\n 'category_non-consumable','brand_type_Established','income_bracket'],axis=1),y)","a5a8533f":"scaledData_test_drop = scaledData_test.drop(['age_range','rented','campaign_type_Y','marital_status_Single',\\\n                                'category_non-consumable','brand_type_Established','income_bracket'],axis=1)","4c89aac4":"xtrain2,xtest2,ytrain2,ytest2 = train_test_split(upx,upy,random_state=0)","069333e7":"rf = RandomForestClassifier(n_estimators=150)\nrf.fit(xtrain2,ytrain2)\nypredrf2 = rf.predict(xtest2)\nprint(accuracy_score(ytest2,ypredrf2))\nyproba_yes2 = rf.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","af4c7269":"xg = XGBClassifier(n_estimators=250,learning_rate=0.8)\nxg.fit(xtrain2,ytrain2)\nypredxg2 = xg.predict(xtest2)\nprint(accuracy_score(ytest2,ypredxg2))\nyproba_yes2 = xg.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","09f000f1":"gba = GradientBoostingClassifier(n_estimators=250,learning_rate=0.8)\ngba.fit(xtrain2,ytrain2)\nypredgba2 = gba.predict(xtest2)\nprint(accuracy_score(ytest2,ypredgba2))\nyproba_yes2 = gba.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","fcb1a562":"ada = AdaBoostClassifier(n_estimators=150,learning_rate=0.4)\nada.fit(xtrain2,ytrain2)\nypredada2 = ada.predict(xtest2)\nprint(accuracy_score(ytest2,ypredada2))\nyproba_yes2 = ada.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","a8cb02af":"pd.Series(rf.feature_importances_,scaledData_test_drop.columns).plot.barh()","36ab6f28":"pd.Series(gba.feature_importances_,scaledData_test_drop.columns).plot.barh()","9dbe4781":"pd.Series(xg.feature_importances_,scaledData_test_drop.columns).plot.barh()","49938217":"import statsmodels.api as sms","4b9c852c":"temp = x.copy()\ntemp['constant'] = 1","3465482f":"sms.Logit(y,temp).fit().summary()","e4af882e":"from sklearn.ensemble import VotingClassifier","437df815":"# vf = VotingClassifier(estimators=estimator,voting='soft')\n# vf.fit(xtrain2,ytrain2)\n# ypredada2 = vf.predict(xtest2)\n# print(accuracy_score(ytest2,ypredada2))\n# yproba_yes2 = vf.predict_proba(xtest2)[:,1]\n# roc_auc_score(ytest2,yproba_yes2)","366d1cb8":"# vf = VotingClassifier(estimators=estimator,voting='soft')\n# vf.fit(xtrain2,ytrain2)\n# ypredada2 = vf.predict(xtest2)\n# print(accuracy_score(ytest2,ypredada2))\n# yproba_yes2 = vf.predict_proba(xtest2)[:,1]\n# roc_auc_score(ytest2,yproba_yes2)","dd511c8b":"# vf = VotingClassifier(estimators=estimator,voting='soft')\n# vf.fit(upx,upy)\n# ypredvf = vf.predict(scaledData_test)\n# submission = pd.DataFrame({'id':test['id'],'redemption_status':ypredvf})\n# submission.head()\n# submission.to_csv('rahul_amex_vf.csv',index=False)","e133fbd8":"rf = RandomForestClassifier(n_estimators=150)\nrf.fit(downx,downy)\nypredrf = rf.predict(scaledData_test_drop)\nyproba_rf = rf.predict_proba(scaledData_test_drop)[:,1]\n#submission = pd.DataFrame({'id':test['id'],'redemption_status':ypredrf})\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':yproba_rf})\nsubmission.to_csv('rahul_amex_rf.csv',index=False)","65722eda":"gba = GradientBoostingClassifier(n_estimators=250,learning_rate=0.8)\ngba.fit(upx,upy)\nypredgba = gba.predict(scaledData_test_drop)\nyproba_gba = gba.predict_proba(scaledData_test_drop)[:,1]\n\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':yproba_gba})\nsubmission.head()\nsubmission.to_csv('rahul_amex_gba.csv',index=False)","235bbab3":"xg = XGBClassifier(n_estimators=150,learning_rate=0.2)\nxg.fit(downx,downy)\nypredxgb = xg.predict(scaledData_test_drop.values)\nyproba_xgb = xg.predict_proba(scaledData_test_drop.values)[:,1]\n\nsubmission = pd.DataFrame({'id':test['id'],'redemption_status':yproba_xgb})\nsubmission.head()\nsubmission.to_csv('rahul_amex_xgb.csv',index=False)","67ee94b3":"from statsmodels.stats.outliers_influence import variance_inflation_factor","a4e17085":"vif = [variance_inflation_factor(dummydata.drop(['age_range','rented','campaign_type_Y',\\\n                                        'marital_status_Single','category_non-consumable','brand_type_Established','income_bracket'],axis=1).values,i) for i in range(dummydata.drop(['age_range','rented','campaign_type_Y',\\\n                                        'marital_status_Single','category_non-consumable','brand_type_Established','income_bracket'],axis=1).shape[1])]\npd.Series(vif,index=dummydata.drop(['age_range','rented','campaign_type_Y',\\\n                                        'marital_status_Single','category_non-consumable','brand_type_Established','income_bracket'],axis=1).columns)","74903fbe":"from sklearn.svm import SVC","c51a8264":"# svm = SVC()\n# svm.fit(xtrain2,ytrain2)\n# ypredsvm = svm.predict(xtest2)\n# print(accuracy_score(ytest2,ypredsvm))\n# yproba_yes2 = svm.predict_proba(xtest2)[:,1]\n# roc_auc_score(ytest2,yproba_yes2)","22f47c4b":"from sklearn.decomposition import PCA","cc255eec":"from sklearn.preprocessing import PolynomialFeatures","475ab082":"pca = PCA(n_components=5)","cb2ba50e":"pcax = pca.fit_transform(upx)","8462a8ec":"xtrain2,xtest2,ytrain2,ytest2 = train_test_split(pcax,upy,random_state=0)","917e572a":"gba = GradientBoostingClassifier(n_estimators=150,learning_rate=0.4)\ngba.fit(xtrain2,ytrain2)\nypredgba2 = gba.predict(xtest2)\nprint(accuracy_score(ytest2,ypredgba2))\nyproba_yes2 = gba.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","f6a5b3c8":"xg = XGBClassifier(n_estimators=150,learning_rate=0.4)\nxg.fit(xtrain2,ytrain2)\nypredxg2 = xg.predict(xtest2)\nprint(accuracy_score(ytest2,ypredxg2))\nyproba_yes2 = xg.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","32451fb3":"pl = PolynomialFeatures(degree=3)","a71570f3":"polyx = pl.fit_transform(upx)","b947a662":"polyxtest = pl.fit_transform(scaledData_test_drop)","f85fec9c":"xtrain2,xtest2,ytrain2,ytest2 = train_test_split(polyx,upy,random_state=0)","a135f7dd":"gba = GradientBoostingClassifier(n_estimators=150,learning_rate=0.5)\ngba.fit(xtrain2,ytrain2)\nypredgba2 = gba.predict(xtest2)\nprint(accuracy_score(ytest2,ypredgba2))\nyproba_yes2 = gba.predict_proba(xtest2)[:,1]\nroc_auc_score(ytest2,yproba_yes2)","3b04442b":"# gba = GradientBoostingClassifier(n_estimators=150,learning_rate=0.4)\n# gba.fit(polyx.values,upy)\n# ypredgba = gba.predict(polyxtest.values)\n# yproba_gba = gba.predict_proba(polyxtest.values)[:,1]\n\n# submission = pd.DataFrame({'id':test['id'],'redemption_status':yproba_gba})\n# submission.head()\n# submission.to_csv('rahul_amex_gba.csv',index=False)","058ec0f5":"# RobustScaler","f102865d":"# GaussianNB","83e4b666":"## fill null values","ac690a5f":"# AdaBoostClassifier","3920b8cc":"# One hot encoding","77f4c581":"# Label Encoder","64e09eff":"# Data preprocessing","1814b88b":"down","1f2a613f":"# GradientBoostingClassifier","1998854e":"# upsampling SMOTE","76c4ed48":"# KNeighborsClassifier","89f57ae6":"# XGBClassifier","182a5689":"# Logit","e6a2b01f":"### check if balanced set","fdf50d93":"# Feature Selection","e1b94207":"## RandomForestClassifier","d7847fd4":"up","c6fd13b8":"# Test data processing","3a10a477":"# PCA","eb23d34f":"## LogisticRegression","9ebfda4d":"# Import libraries","f2545733":"## Merge dataframes","d5300038":"# Model Building","fbf6a9bf":"# Load datasets and check info","76944031":"# downsampling NearMiss","0e240137":"# Polynomial Features"}}