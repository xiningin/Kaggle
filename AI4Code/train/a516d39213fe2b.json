{"cell_type":{"c6aa2153":"code","5eab8d57":"code","4b489631":"code","ce7b9c94":"code","a3a974d3":"code","7d9782e0":"code","5f4bdce7":"code","1bd2f0a9":"code","b7bae626":"code","ea52aae6":"code","20eaa0f3":"markdown","babccd9c":"markdown","1c6b9f8c":"markdown","25d9b864":"markdown"},"source":{"c6aa2153":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5eab8d57":"import json","4b489631":"!pip install pyyaml==5.1\n# This is the current pytorch version on Colab. Uncomment this if Colab changes its pytorch version\n!pip install torch==1.9.0+cu102 torchvision==0.10.0+cu102 -f https:\/\/download.pytorch.org\/whl\/torch_stable.html\n\n# Install detectron2 that matches the above pytorch version\n# See https:\/\/detectron2.readthedocs.io\/tutorials\/install.html for instructions\n!pip install detectron2 -f https:\/\/dl.fbaipublicfiles.com\/detectron2\/wheels\/cu102\/torch1.9\/index.html\n# exit(0)  # After installation, you need to \"restart runtime\" in Colab. This line can also restart runtime","ce7b9c94":"# check pytorch installation: \nimport torch, torchvision\nprint(torch.__version__, torch.cuda.is_available())","a3a974d3":"import detectron2\nfrom detectron2.utils.logger import setup_logger\nsetup_logger()\n\nimport numpy as np\nimport os, json, cv2, random\n#from google.colab.patches import cv2_imshow\n\n# import some common detectron2 utilities\nfrom detectron2 import model_zoo\nfrom detectron2.engine import DefaultPredictor\nfrom detectron2.config import get_cfg\nfrom detectron2.utils.visualizer import Visualizer\nfrom detectron2.data import MetadataCatalog, DatasetCatalog","7d9782e0":"!wget http:\/\/images.cocodataset.org\/val2017\/000000439715.jpg -q -O input.jpg\nim = cv2.imread(\".\/input.jpg\")\nimport matplotlib.pyplot as plt\n%matplotlib inline\nplt.imshow(im)","5f4bdce7":"cfg = get_cfg()\n# add project-specific config (e.g., TensorMask) here if you're not running a model in detectron2's core library\ncfg.merge_from_file(model_zoo.get_config_file(\"COCO-InstanceSegmentation\/mask_rcnn_R_50_FPN_3x.yaml\"))\ncfg.MODEL.ROI_HEADS.SCORE_THRESH_TEST = 0.5  # set threshold for this model\n# Find a model from detectron2's model zoo. You can use the https:\/\/dl.fbaipublicfiles... url as well\ncfg.MODEL.WEIGHTS = model_zoo.get_checkpoint_url(\"COCO-InstanceSegmentation\/mask_rcnn_R_50_FPN_3x.yaml\")\npredictor = DefaultPredictor(cfg)\noutputs = predictor(im)\n\n","1bd2f0a9":"print(outputs[\"instances\"].pred_classes)\nprint(outputs[\"instances\"].pred_boxes)","b7bae626":"v = Visualizer(im[:, :, ::-1], MetadataCatalog.get(cfg.DATASETS.TRAIN[0]), scale=1.2)\nout = v.draw_instance_predictions(outputs[\"instances\"].to(\"cpu\"))\nplt.imshow(out.get_image()[:, :, ::-1])","ea52aae6":"data","20eaa0f3":"Greetings, <br>\n\nIn this code notebook, we'll learn how to train various SOTA custom models (image segmentation) <br>\nEvery model has a different pipeline which needs to setup. Learning these meticulous details is a one-time investment.<br><br>\nFeel free to fork the codebook.","babccd9c":"## Detectron2","1c6b9f8c":"# Table of Contents\n\n| Model | Description |Year | Industry Relevance|\n| --- | ----------- | ------| ------|\n| [Detectron2](https:\/\/www.kaggle.com\/antoreepjana\/custom-training-segmentation-models#Detectron2) | Title |   | Relevant  |\n| Mask RCNN | Text |    |  Relevant  |\n","25d9b864":"Official Detectron2"}}