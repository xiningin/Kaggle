{"cell_type":{"b3f138c8":"code","deb003a9":"code","59762756":"code","5fb67f01":"code","7b128e14":"code","d48879bf":"code","b24416ec":"code","b8396919":"code","3c6c2f2f":"code","c7a5b372":"code","203048d1":"code","6ac44d38":"code","dae5e334":"code","b73c46ae":"code","776358ac":"code","169c7aa3":"code","ee9deca7":"code","1167df72":"code","fdedd9e6":"code","b55117d2":"code","edf69ce1":"code","cef9654e":"code","0c451020":"code","421f9df5":"code","761c84bc":"code","db58145a":"code","850361d7":"code","bd2724f4":"code","eef20802":"code","5f5e86cc":"code","7c01f8b5":"code","e7ff5252":"code","33c4aa0d":"code","2825c46b":"code","66be8b03":"code","0064303e":"code","a2e9ab02":"code","e9c9e064":"code","d931ba6c":"code","28e42bc5":"code","d823d3d1":"code","207c4ab2":"code","bcd9e2d9":"code","98b6f147":"code","bf175e39":"code","e49dcb94":"code","5d5b61fe":"code","ec35cf4d":"code","d0ef9090":"markdown","c9568d84":"markdown","b6f2d8d8":"markdown","03bf9b59":"markdown","c1ead154":"markdown","1937955a":"markdown","30820e0a":"markdown","2010e495":"markdown","44a558e7":"markdown"},"source":{"b3f138c8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","deb003a9":"import pandas as pd\nimport pandas_profiling as pp\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly as ply\n\nfrom mlxtend.frequent_patterns import apriori\nfrom mlxtend.frequent_patterns import association_rules\n\nimport networkx as nx","59762756":"import warnings\nwarnings.filterwarnings(\"ignore\")","5fb67f01":"dat = pd.read_csv(\"..\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","7b128e14":"dat.info()","d48879bf":"dat.describe()","b24416ec":"fig,ax = plt.subplots(1,4,figsize=(20,5))\ndat.plot(kind='hist',ax=ax, subplots=True, bins=40)","b8396919":"fig,ax=plt.subplots(1,1,figsize=(20,5))\ndat.groupby(\"Gender\").CustomerID.agg('count').plot(kind='barh',ax=ax).set_title('Count by gender')\nplt.grid()","3c6c2f2f":"fig,ax = plt.subplots(1,4,figsize=(20, 5))\nsdat = dat.groupby(by='Gender')\nsdat.get_group(\"Male\").plot(kind='hist',ax=ax, subplots=True, bins=40)","c7a5b372":"sns.pairplot(sdat.get_group(\"Male\")).fig.set_size_inches(15,15)","203048d1":"fig,ax = plt.subplots(1,4,figsize=(20, 5))\nsdat = dat.groupby(by='Gender')\nsdat.get_group(\"Female\").plot(kind='hist',ax=ax, subplots=True, bins=40)","6ac44d38":"sns.pairplot(sdat.get_group(\"Female\")).fig.set_size_inches(15,15)","dae5e334":"mask = np.triu(np.ones_like(dat.corr(), dtype=bool))\nsns.heatmap(dat.corr(),mask=mask,cmap='Spectral',vmin=-1,vmax=1)","b73c46ae":"dat.columns","776358ac":"sns.scatterplot(data=dat,x='Age',y='Annual Income (k$)',hue='Gender',size='Spending Score (1-100)')\nfig = plt.gcf()\nfig.set_size_inches(20,5)","169c7aa3":"sns.scatterplot(data=dat,x='Age',size='Annual Income (k$)',hue='Gender',y='Spending Score (1-100)')\nfig = plt.gcf()\nfig.set_size_inches(20,5)","ee9deca7":"sns.scatterplot(data=dat,size='Age',x='Annual Income (k$)',hue='Gender',y='Spending Score (1-100)')\nfig = plt.gcf()\nfig.set_size_inches(20,5)","1167df72":"sns.jointplot(x=dat.Age, y=dat['Annual Income (k$)'],kind='hex')\nfig = plt.gcf()\nfig.set_size_inches(6,6)","fdedd9e6":"sns.jointplot(x=dat['Annual Income (k$)'],y = dat['Spending Score (1-100)'],kind='hex')\nfig = plt.gcf()\nfig.set_size_inches(6,6)","b55117d2":"# pp.ProfileReport(dat)","edf69ce1":"df = dat.copy()\ndf.drop(axis=1,columns='CustomerID',inplace=True)\ndf['IsMale'] = 1\ndf.loc[df[df.Gender == \"Female\"].index,'IsMale'] = 0\ndf.drop(axis=1, columns='Gender',inplace=True)\ndf.head()","cef9654e":"df.describe()","0c451020":"from sklearn.cluster import KMeans\nfrom sklearn.preprocessing import MinMaxScaler","421f9df5":"scal = MinMaxScaler()\ntemp = scal.fit_transform(df)\ndfscal = pd.DataFrame(temp,columns=df.columns, index=df.index)\ndfscal.head()","761c84bc":"cdf = dfscal.copy()","db58145a":"inertia = []\nfor icluster in range(1,11):\n    clust = KMeans(n_clusters=icluster, n_init=10, max_iter=300, tol=1e-3, random_state=0)\n    clust.fit(cdf)\n    inertia.append(clust.inertia_)\n    \nsns.lineplot(x=range(1,11), y=inertia)\nplt.grid()\n\n# optimal number of clusters with approximate slope 135 degrees, n = 5","850361d7":"clust = KMeans(n_clusters=4, n_init=10, max_iter=300, tol=1e-3, random_state=0)\nclust.fit(cdf)\ncdf['Labels_'] = clust.labels_\ncentroids = clust.cluster_centers_","bd2724f4":"dfscal.head()","eef20802":"df.head()","5f5e86cc":"cdf.head()","7c01f8b5":"import matplotlib as mp\ncmap = mp.cm.cool\nsns.scatterplot(data=cdf,size='Age',x='Annual Income (k$)',hue='Labels_',y='Spending Score (1-100)',style='IsMale',palette=cmap)\nfig = plt.gcf()\nfig.set_size_inches(10,10)","e7ff5252":"np.random.seed(0)","33c4aa0d":"def jitter(x):\n    if x < 0.5:\n        x = x + np.random.random()*0.45\n    else:\n        x = x - np.random.random()*0.45\n    return x\n            \ncdf['JitterIsMale'] = cdf['IsMale']\ncdf['JitterIsMale'] = cdf['JitterIsMale'].apply(jitter)","2825c46b":"def bin_column(x):\n    # note that this assumes scaled columns\n    nbin = 4\n    bd = np.linspace(0,1,nbin+1)\n    for i, nbd in enumerate(bd):\n        if x < nbd:\n            return i\n            \ncdf['BinIncome'] = cdf['Annual Income (k$)'].apply(bin_column)","66be8b03":"cdf.sample(10)","0064303e":"sns.scatterplot(data=cdf,size='Age',x='JitterIsMale',hue='Labels_',y='Spending Score (1-100)',style='BinIncome',palette=cmap)\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nfig.axes[0].add_patch(mp.patches.Rectangle((0,0),0.5,1,fill=True,facecolor='gray',alpha=0.1))\nfig.axes[0].add_patch(mp.patches.Rectangle((0.5,0),0.5,1,fill=True,facecolor='green',alpha=0.1))\nplt.text(0.25,1.01,\"Female\")\nplt.text(0.75,1.01,\"Male\")\nplt.gca().set_xticks([])\nplt.legend()\nplt.show()","a2e9ab02":"from sklearn.decomposition import PCA","e9c9e064":"cdf.columns","d931ba6c":"dimred_df = cdf.copy()\ndimred_df.drop(columns=['Labels_', 'JitterIsMale', 'BinIncome'], inplace=True)\npca = PCA(n_components=4)\npca.fit_transform(dimred_df)\nplt.plot(np.arange(1,5),np.cumsum(pca.explained_variance_ratio_),'o-')\nplt.ylabel(\"Explained variance\")\nplt.xlabel(\"Number of components\")\nplt.grid()","28e42bc5":"dimred_df.sample(5)","d823d3d1":"pca = PCA(n_components=4)\npca_dat = pca.fit_transform(dimred_df)","207c4ab2":"pca_inertia = []\nfor icluster in range(1,11):\n    clust = KMeans(n_clusters=icluster, n_init=10, max_iter=300, tol=1e-3, random_state=0)\n    clust.fit(pca_dat)\n    pca_inertia.append(clust.inertia_)\n    \nsns.lineplot(x=range(1,11), y=pca_inertia)\nplt.grid()","bcd9e2d9":"clust = KMeans(n_clusters=4, n_init=10, max_iter=300, tol=1e-3, random_state=0)\nclust.fit(pca_dat)\npca_df = pd.DataFrame(pca_dat, index=df.index, columns=['Comp1','Comp2','Comp3','Comp4'])\npca_df['Labels_'] = clust.labels_","98b6f147":"pca_df.head()","bf175e39":"sns.scatterplot(data=pca_df,size='Comp3',x='Comp1',hue='Labels_',y='Comp2',palette=cmap)\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.legend('')","e49dcb94":"test_df = cdf.copy()\ntest_df.drop(inplace=True,columns=['Age', 'Annual Income (k$)', 'Labels_', 'JitterIsMale', 'BinIncome'])\nclust = KMeans(n_clusters=4, n_init=10, max_iter=300, tol=1e-3, random_state=0)\n\nclust.fit(test_df)\ntest_df['Labels_'] = clust.labels_","5d5b61fe":"test_df.sample(5)","ec35cf4d":"sns.scatterplot(data=test_df,y='Spending Score (1-100)',hue='Labels_',x='IsMale',palette=cmap)\nfig = plt.gcf()\nfig.set_size_inches(10,10)","d0ef9090":"**Dimension reduction**","c9568d84":"**Exploratory data analysis (EDA)**","b6f2d8d8":"Based on the analysis, Gender and spending score is sufficent for clustering.","03bf9b59":"**Import libraries**","c1ead154":"**Scale the data**","1937955a":"**Testing hypothesis**","30820e0a":"**Clustering**","2010e495":"# Market Basket Analysis\n\n![person_MBA.png](attachment:60a70da2-3be8-48bf-9a53-4e29f3bd3c55.png)","44a558e7":"**Import data**"}}