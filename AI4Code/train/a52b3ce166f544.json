{"cell_type":{"0dd75338":"code","ed277ce1":"code","5964475c":"code","218e5685":"code","64691b0e":"code","aadbb377":"code","1e124ede":"code","e558c56a":"code","ec0294f4":"code","fbf2c0ee":"code","19d3065b":"code","8c90d611":"code","0778ca67":"code","88ff2360":"code","c49656f5":"code","67f3b173":"code","2123f137":"code","32e6f4b1":"code","29090bb0":"code","75482077":"code","a8b1a78f":"code","c1243da6":"code","734af29e":"code","10044234":"code","eddb1794":"code","959bf1a6":"code","dabd538b":"code","b6a67415":"code","da08909d":"code","ea2c54f0":"code","62dc5da3":"code","9966a1e1":"code","f2c6606a":"code","cb99d334":"code","27e41ac3":"code","0b13f6ae":"code","9f3572f4":"code","318bc505":"code","c89f325c":"code","ff716d0b":"code","184bced9":"code","36c55673":"code","d07b9e90":"code","5a807a2b":"code","3dc1b7a3":"code","e1116927":"code","69f48777":"code","d2f04167":"code","6c3f550a":"markdown","d9388a41":"markdown","fd17f39a":"markdown","d210a47c":"markdown","b67b735b":"markdown","2549b93e":"markdown","5199e16b":"markdown","55a8eef3":"markdown","bc0ef05d":"markdown","9a1ef219":"markdown","7da4a589":"markdown","8d659c42":"markdown","2f9efd65":"markdown","c3f69950":"markdown","984e3a4b":"markdown","5f56f856":"markdown","925f1e1a":"markdown","ff77210d":"markdown","9e28bd16":"markdown","509a1ebd":"markdown","50179649":"markdown","f7c929fe":"markdown","fe305fc0":"markdown","0ba0adb1":"markdown","6af47daa":"markdown","2472513e":"markdown","1215adb8":"markdown","5a95441f":"markdown","b0e301f5":"markdown","97484efa":"markdown","c871aa62":"markdown","d8889904":"markdown","c57d565b":"markdown","d67ef1ab":"markdown","64335965":"markdown","45cf90fd":"markdown","f6d019ee":"markdown","3fb8e915":"markdown","4c12c169":"markdown","06229c3c":"markdown","ef4287e3":"markdown","799f697e":"markdown","a221c7b3":"markdown","1c2e1efb":"markdown","52e8cd4b":"markdown","58f77460":"markdown","42ef8cf5":"markdown","174b6ffc":"markdown","8f794459":"markdown","aee2f8d6":"markdown","43c3762e":"markdown","c7d98ca5":"markdown","6a6486b2":"markdown","791edcd3":"markdown","837b4a0c":"markdown","f4363da9":"markdown"},"source":{"0dd75338":"# Install dataprep library\n!pip install dataprep","ed277ce1":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nfrom dataprep.eda import plot, plot_correlation, plot_missing","5964475c":"for dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","218e5685":"df = pd.read_csv('\/kaggle\/input\/the-movie-database-19022019\/movies.csv')\ndf.head(5)","64691b0e":"df.tail()","aadbb377":"df.info()","1e124ede":"plot_missing(df)","e558c56a":"df = df[['title','release_date','budget','revenue','runtime','genres']]\ndf.head(5)","ec0294f4":"# Test filter for budget and revenue greater than zero\ndf[(df['budget'] > 0) & (df['revenue'] > 0)].head(10)","fbf2c0ee":"# Overwrite the dataframe with the filtered data\ndf = df[(df['budget'] > 0) & (df['revenue'] > 0)]\ndf.head(10)","19d3065b":"# Define a single-genre-assignment function\n# I have written this for human readability.\n# Could be rewritten as a switch statement for improved performance. (Current dataset size does not warrant.)\n\ndef generate_genre(genres):\n    if 'Animation' in genres:\n        return 'Animation'\n    elif 'Horror' in genres:\n        return 'Horror'\n    elif 'Documentary' in genres:\n        return 'Documentary'\n    elif 'Action' in genres:\n        return 'Action'\n    elif 'Family' in genres:\n        return 'Family'\n    elif 'Adventure' in genres:\n        return 'Action'\n    elif 'Science Fiction' in genres:\n        return 'Science Fiction'\n    elif 'Fantasy' in genres:\n        return 'Fantasy'\n    elif 'Western' in genres:\n        return 'Action'\n    elif 'Crime' in genres or 'Mystery' in genres or 'Thriller' in genres:\n        return 'Crime\/Mystery\/Thriller'\n    elif 'Comedy' in genres:\n        return 'Comedy'\n    elif 'Romance' in genres:\n        return 'Romance'\n    elif 'Drama' in genres:\n        return 'Drama'\n    else:\n        return 'Other'","8c90d611":"# Create a new genre column, populating it with the value\n# from the above function, applied to all non-null values for genres\ndf['genre'] = df.loc[df['genres'].notnull(), 'genres'].apply(generate_genre)\ndf.head(10)","0778ca67":"df.drop(columns='genres',inplace=True)\ndf.head(10)","88ff2360":"df.isnull().sum()","c49656f5":"# Check the records with null values for runtime\ndf[df['runtime'].isnull()]","67f3b173":"# Drop records with nulls\ndf.dropna(inplace=True)\ndf.isnull().sum()","2123f137":"df.info()","32e6f4b1":"df['release_date'] = pd.to_datetime(df['release_date'])\ndf['budget'] = df['budget'].astype(int)\ndf['revenue'] = df['revenue'].astype(int)\ndf['runtime'] = df['runtime'].astype(int)\ndf['genre'] = df['genre'].astype('category')\ndf.info()","29090bb0":"# Get a count of non-unique titles to be aware\ndf['title'].count() - df['title'].nunique()","75482077":"# Proceed with knowledge\ndf.set_index('title', inplace=True)\ndf.head()","a8b1a78f":"df['profit'] = df['revenue'] - df['budget'] # Create profit column\ndf['ratio'] = (df['revenue'] \/ df['budget']).round(2) # Create ratio column\ndf = df[['release_date','budget','revenue','profit','ratio','runtime','genre']] # Organize columns in desired order\ndf.head() # View the result","c1243da6":"# Check new dataframe fundamentals\ndf.info()","734af29e":"plot(df)","10044234":"plot(df, 'release_date')","eddb1794":"plot(df, 'release_date','budget')","959bf1a6":"plot(df, 'release_date','revenue')","dabd538b":"plot(df, 'release_date','profit')","b6a67415":"plot(df, 'release_date', 'ratio')","da08909d":"# Avg Runtime by date\nplot(df, 'release_date', 'runtime')","ea2c54f0":"# Budget stats and charts using dataprep.eda\nplot(df, 'budget')\n\n# NOTE: See Histogram and Box Plot tabs:","62dc5da3":"# matplotlib horizontal boxplot\ndf['budget'].plot.box(vert=False, figsize=(12,5));","9966a1e1":"# Get the statistical summary\ndf['budget'].describe().map('{:,.0f}'.format)","f2c6606a":"# Using dataprep.eda\nplot(df, 'revenue')","cb99d334":"# matplotlib horizontal boxplot\ndf['revenue'].plot.box(vert=False, figsize=(12,5));","27e41ac3":"plot(df, 'profit')","0b13f6ae":"plot(df, 'ratio')","9f3572f4":"# matplotlib horizontal boxplot resized\ndf['ratio'].plot.box(vert=False, figsize=(12,5));","318bc505":"cols = ['budget','revenue','profit','ratio']\ndf[cols].sort_values('ratio', ascending=False).head(20)","c89f325c":"# Filter for movies with budgets GTE $50K\ndf_budg50k = df[df['budget'] >= 50000]\ndf_budg50k.sort_values('budget').head(10)","ff716d0b":"cols = ['budget','revenue','profit','ratio']\n(\n    df_budg50k[cols].sort_values('ratio', ascending=False)\n                    .head(20)\n                    .apply(lambda s: s.apply('{:,.0f}'.format))\n)","184bced9":"df = df_budg50k\ndf.info()","36c55673":"# Matplotlib to get a horizontal bar chart, including null values\n(\ndf['genre'].value_counts(dropna=False) # Get a count per category, including null values\n            .plot.barh(title = 'Movies per Genre, 1915-2019', x='title', figsize=(7,5))\n            .invert_yaxis() # Fix sort order for horz bar chart\n)","d07b9e90":"cols = ['budget','revenue','profit','ratio']\nGenre_AVGs = df.pivot_table(values=cols, index='genre', aggfunc='mean')\nGenre_AVGs = Genre_AVGs[['budget','revenue','profit','ratio']]\nGenre_AVGs","5a807a2b":"Genre_AVGs.sort_values('ratio', ascending=False).apply(lambda s: s.apply('{:,.2f}'.format))","3dc1b7a3":"Genre_AVGs['budget'].sort_values().plot.barh(title = 'AVG Budget by Genre', figsize=(7,5));","e1116927":"Genre_AVGs['revenue'].sort_values().plot.barh(title = 'AVG Revenue by Genre', figsize=(7,5));","69f48777":"Genre_AVGs['profit'].sort_values().plot.barh(title = 'AVG Profit by Genre', figsize=(7,5));","d2f04167":"Genre_AVGs['ratio'].sort_values().plot.barh(title = 'AVG Ratio by Genre', figsize=(7,5));","6c3f550a":"### Avg Profit by Date","d9388a41":"### Revenue univariate analysis","fd17f39a":"We have some negative profits, and still a skew to the right, with 627 outliers.","d210a47c":"View records at the tail end of the dataset.","b67b735b":"### Ratio univariate analysis","2549b93e":"### Profit univariate analysis","5199e16b":"## Drop Records with Budget or Revenue of Zero\n\n- Our analysis demands values for budget and revenue.\n- Zero-values indicate missing values.\n- Drop them.","55a8eef3":"**Outliers are those whose values are greater than 1.5 IQR above the 75th percentile.**\n- IQR (interquartile range) = the range between the upper and lower quartile\n- Lower Quartile = 6M\n- Upper Quartile = 40M\n- IQR = 40-6 = 34M\n- 1.5 IQR = 51\n- Upper whisker, bottom border of outliers = 40M + 51M = 91M\n\n**Outliers are those with budget of $91M or greater.**","bc0ef05d":"## File Management\n- You can write up to 20GB to the current directory (`\/kaggle\/working\/`) that gets preserved as output when you create a version using \"Save & Run All\" \n- You can also write temporary files to `\/kaggle\/temp\/`, but they won't be saved outside of the current session","9a1ef219":"#### Sort by ratio and format numbers","7da4a589":"**These huge spikes, dwarfing all other data points, seem incredibly odd and merit further investigation. I will return to examine ratio below.**","8d659c42":"**Interpretation:** Similar to budget, we have 590 outliers with extraordinarily high revenues.","2f9efd65":"**The average budget rose from 2.9M in 1975 to 52.9M in 2019.**","c3f69950":"### Budget univariate analysis","984e3a4b":"## Check again for missing values","5f56f856":"### Plot AVG Revenue by Genre","925f1e1a":"## Time Series Analysis\nTrends over time:\n- Avg budget\n- Avg revenue\n- Avg profit\n- Avg ratio\n\nI'll be using the Dataprep.eda plot function ...","ff77210d":"## Install Dataprep.eda\nI'll be using this library for exploratory data analysis and visualization.\n\nFor creating plots for exploratory data analysis, see the documentation here:\n- https:\/\/docs.dataprep.ai\/user_guide\/eda\/introduction.html\n\nTo learn more about the DataPrep.eda library:\n- [Dataprep.eda: Accelerate your EDA](https:\/\/towardsdatascience.com\/dataprep-eda-accelerate-your-eda-eb845a4088bc)\n- [Exploratory Data Analysis: DataPrep.eda vs Pandas-Profiling](https:\/\/towardsdatascience.com\/exploratory-data-analysis-dataprep-eda-vs-pandas-profiling-7137683fe47f)\n- [DataPrep.eda Homepage - datapre.ai](https:\/\/dataprep.ai)","9e28bd16":"## Investigate Movie Ratios\nThe ratio of Revenue \/ Budget\n- Above analysis shows a few very extreme outliers\n- Do these reflect bad data?\n\n### View key fields sorted by highest ratio","509a1ebd":"These results look good. Let's update the dataframe to include only these movies with $50K+ budgets","50179649":"**Average revenue had a huge spike in 1937 (_total_ revenue over time for _Gone with the Wind_), and has been on a relatively steady increase since.**","f7c929fe":"**Evaluation**\n- Some of the budgets for these biggest outliers are ridiculously low.\n- Let's find a lower-end cut-off for budgets and filter our data accordingly.","fe305fc0":"## Add Calculated Fields\n- profit: Enables us to see negative profits.\n- ratio: Ratio of `revenue` to `budget` gives us important insight into ROI per movie.","0ba0adb1":"## Let the EDA Begin!\n\nLet's start with an overview of our fields using Dataprep.eda's `plot()` function.","6af47daa":"**The mean runtime has normalized over time.**","2472513e":"## Import Libraries","1215adb8":"## Missing Data Report\nUsing dataprep.eda","5a95441f":"## Assign Data Types\n- release_date to datetime\n- budget, revenue, and runtime to int\n- genre to categorical","b0e301f5":"### AVG Runtime by Date","97484efa":"**As we might expect:**\n- The number of movies has greatly increased over time.\n- A small percentage of movies have extraordinarily large budgets, revenue, profit, and revenue\/budget ratio.\n- Average runtime is around 110 minutes.\n- Action is the most common genre.\n\n**But more insights may come to light if we look into these fields one at a time.**","c871aa62":"**These do not seem consequential for our analysis. Rather than filling the values we'll drop the records.**","d8889904":"### AVG Revenue by Date","c57d565b":"### Avg Ratio by date","d67ef1ab":"### Create Pivot Table for Avgs per Genre","64335965":"## Univariate Analysis of Numeric Fields","45cf90fd":"### Plot AVG Ratio by Genre","f6d019ee":"## Drop old genres column","3fb8e915":"### Plot AVG Profit by Genre","4c12c169":"## Reduce and Organize Columns\n\nFor this project, I am interested only in these fields:\n- title\n- release_date\n- budget\n- revenue\n- runtime\n- genres","06229c3c":"### Filter for movies with budgets GTE $50K\n\nThis cut-off point may be somewhat arbitrary. A few points worth considering:\n- It eliminates the unrealistically low budgets.\n- It may unnecessarily exclude movies with budgets such as 15K or 30K, etc.\n- It does leave _Blair Witch Project_, which is a well known case of astounding return on investment.","ef4287e3":"### Noteworthy: Looking at ratios brings about an important shift in our perspective on the most profitable movie genres.","799f697e":"> **We have *456* outliers with extraordinarily high budgets ...**\n\nLet's do the math to see what number defines the upper whisker, beyond which movie budgets are considered outliers.","a221c7b3":"## Read and Review Data","1c2e1efb":"### AVG Budget by Date","52e8cd4b":"**Evaluation:** Skewed to the right by a small number of very high budgets.","58f77460":"# Movies EDA with Dataprep.eda\n\nExploratory data analysis of movies from [TheMovieDB.org](https:\/\/www.themoviedb.org) \n\nIncludes:\n- Data prep and transformation\n- EDA with matplotlib and Dataprep.eda","42ef8cf5":"## Make title the index\n- Using title as the index is helpful for reducing code needed for charts.\n- Be aware: There are a few repeated titles, and so the index will not be unique.","174b6ffc":"## Genre Analysis\n- Count of movies per genre\n- Avg budget per genre\n- Avg revenue per genre\n- Avg profit per genre\n- Avg ratio per genre","8f794459":"### Plot AVG Budget by Genre","aee2f8d6":"**Unsuprisingly, the pattern for average profit is similar to avg revenue. But the relatively lower production cost of Gone with the Wind makes its spike even more pronounced.**","43c3762e":"### Count of Movies per Genre","c7d98ca5":"### Count of movies by date","6a6486b2":"The boxplot reveals a very small number of very extreme outliers. Far more extreme than for the other fields.\n\nThis merits further investigation.","791edcd3":"## Initial Overview","837b4a0c":"### Movies  with $50K+ Budgets Sorted by Revenue\/Budget Ratio","f4363da9":"## Create New genre field\n- Use an algorithm to assign a single genre per title.\n- This has been tested via trial and error and yields satisfactory results, though they may be improved."}}