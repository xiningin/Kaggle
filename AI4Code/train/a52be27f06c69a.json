{"cell_type":{"40286f66":"code","f87a4495":"code","df0ddb4b":"code","a92ec3ad":"code","a8a8491e":"code","6cc72011":"code","acf89279":"code","79e80680":"code","7a62dab0":"code","05171a4e":"code","39d96ef2":"code","7fb89854":"code","0ecd5455":"code","c771f1e0":"code","d63c1c9b":"code","33f4eea0":"code","2387168a":"code","c38da079":"code","47f3cb28":"code","b4701fc8":"code","cbf98af2":"code","a712517e":"code","4d7cf795":"code","3cb8d385":"code","17e5da4a":"code","c5231810":"code","29586ca2":"code","76920e1a":"code","20c40a78":"code","540f355d":"code","49c160f1":"code","9a14bfa3":"code","7cb68798":"code","fc4b1b1f":"code","21d3ae52":"code","93857c99":"code","81e9bb04":"code","17d8db8a":"markdown","50d36183":"markdown","526f32d8":"markdown","0e8c803c":"markdown","c1a5d3d3":"markdown","83fd6fd8":"markdown","3f4956de":"markdown","26833e7d":"markdown"},"source":{"40286f66":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","f87a4495":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head(3)","df0ddb4b":"train.isnull().any()","a92ec3ad":"train.isna().sum()","a8a8491e":"train.describe()","6cc72011":"import seaborn as sns\n\nsns.countplot(x='Survived', hue='Sex', data=train,  palette='hls') ","acf89279":"sns.countplot(x='Survived', hue='Pclass', data=train,  palette='hls') ","79e80680":"sns.countplot(x='Embarked', hue='Survived', data=train)","7a62dab0":"import matplotlib.pyplot as plt\nplt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=train,palette='winter')","05171a4e":"def new_age(row):\n    age, pcl = row[0], row[1]\n    if pd.isnull(age):\n        if pcl == 1:\n            return 37\n        elif pcl == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return age\n\npcl = train['Pclass'].unique()\ntrain['Age'] = train[['Age','Pclass']].apply(new_age, axis=1)","39d96ef2":"train['Sex'] = train['Sex'].map({'male':1, 'female':2})\ntrain[\"Embarked\"] = train[\"Embarked\"].fillna(\"S\")\ntrain['Embarked'] = train['Embarked'].map({'S':1, 'C':3, 'Q':2})","7fb89854":"train['Title'] = train['Name'].str.split(\", \", expand=True)[1].str.split(\".\", expand=True)[0]\nprint(pd.crosstab(train['Title'],train['Survived']))","0ecd5455":"train['IsMr'] = 0\ntrain['IsMr'].loc[train['Title'] == 'Mr'] = 1\ntrain['IsMrs'] = 0\ntrain['IsMrs'].loc[train['Title'] == 'Mrs'] = 1\ntrain['IsMiss'] = 0\ntrain['IsMiss'].loc[train['Title'] == 'Miss'] = 1","c771f1e0":"corelation = train.corr().round(3)\ncorelation","d63c1c9b":"plt.figure(figsize=(15,15))\nsns.heatmap(corelation, annot = True)","33f4eea0":"X = train[['Pclass','Sex','Age','SibSp','Parch','IsMr','IsMrs','IsMiss','Fare','Embarked']]\ny = train['Survived']","2387168a":"X['Age'] = X['Age']\/10\nX['Age']","c38da079":"X['Fare'] = X['Fare']\/20\nX['Fare']","47f3cb28":"X.isnull().any()","b4701fc8":"import numpy as np\n\ntrain_x = X.to_numpy()\nprint(train_x)\ntrain_y = y.to_numpy()\nprint(train_y)","cbf98af2":"from keras.models import Sequential\nfrom keras.layers import Dense, Activation","a712517e":"model = Sequential()\n\nmodel.add(Dense(64,activation = 'relu', input_dim=10))\nmodel.add(Dense(32,activation = 'relu' ))\nmodel.add(Dense(16,activation = 'relu' ))\nmodel.add(Dense(16,activation = 'relu' ))\nmodel.add(Dense(1,activation = 'sigmoid' ))\n\nmodel.summary()","4d7cf795":"model.compile(optimizer='adam',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])","3cb8d385":"model.fit(train_x, train_y, epochs=50, batch_size = 128)","17e5da4a":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\npcl = test['Pclass'].unique()\ntest['Age'] = test[['Age','Pclass']].apply(new_age, axis=1)\ntest['Sex'] = test['Sex'].map({'male':1, 'female':2})\ntest[\"Embarked\"] = test[\"Embarked\"].fillna(\"S\")\ntest['Embarked'] = test['Embarked'].map({'S':1, 'C':3, 'Q':2})\n\ntest['Title'] = test['Name'].str.split(\", \", expand=True)[1].str.split(\".\", expand=True)[0]\nprint(test['Title'])","c5231810":"test['IsMr'] = 0\ntest['IsMr'].loc[test['Title'] == 'Mr'] = 1\ntest['IsMrs'] = 0\ntest['IsMrs'].loc[test['Title'] == 'Mrs'] = 1\ntest['IsMiss'] = 0\ntest['IsMiss'].loc[test['Title'] == 'Miss'] = 1","29586ca2":"test_X = test[['Pclass','Sex','Age','SibSp','Parch','IsMr','IsMrs','IsMiss','Fare','Embarked']]","76920e1a":"med_fare = train[\"Fare\"].median()\ntest_X[\"Fare\"] = test_X[\"Fare\"].fillna(med_fare)","20c40a78":"test_X['Fare'] = test_X['Fare']\/20\ntest_X['Age'] = test_X['Age']\/10","540f355d":"test_X.isnull().any()","49c160f1":"#getting predictions of test data\nprediction = model.predict(test_X)\nprediction = np.array(prediction)\nprediction = prediction.flatten()","9a14bfa3":"prediction","7cb68798":"prediction[prediction<0.5] = 0\nprediction[prediction>0] = 1\nprediction = prediction.astype(int)\nprediction","fc4b1b1f":"test['Survived'] = prediction","21d3ae52":"Submit = test[['PassengerId','Survived']]\nSubmit.head()","93857c99":"Submit.set_index('PassengerId',inplace = True)\nSubmit.head()","81e9bb04":"Submit.to_csv('Titanic.csv')","17d8db8a":"\u4e0a\u8239\u7684\u6e2f\u53e3\u4e5f\u6709\u5dee\u5225\uff0cc\u751f\u5b58\u7387\u6700\u9ad8\uff0cs\u56e0\u70ba\u6bd4\u8f03\u7aae\u56f0\uff0c\u53ef\u80fd\u8cb7\u4f4e\u50f9\u7968\u6bd4\u8f03\u591a","50d36183":"\u5148\u7814\u7a76\u8a13\u7df4\u8cc7\u6599\u548c\u8cc7\u6599\u683c\u5f0f\uff0c\u65b9\u4fbf\u5f8c\u7e8c\u505a\u8cc7\u6599\u8655\u7406\u3002","526f32d8":"\u4e0d\u540c\u6578\u64da\u90fd\u6709\u4e0d\u4e00\u6a23\u7684\u76f8\u95dc\u6027","0e8c803c":"\u6709\u9322\u4eba\u7684\u751f\u5b58\u6a5f\u7387\u90844\u6bd4\u8f03\u5927\u3002","c1a5d3d3":"\u56e0\u70ba\u7f3a\u5931\u503c\u5f88\u5c11(2\u500b)\uff0c\u6240\u4ee5\u5148\u88dc\u6700\u5e38\u898b\u7684\u6e2f\u53e3s\uff0c\u7136\u5f8c\u8f49\u6578\u5b57\u578b\u614b\uff0c\u96d6\u7136\u4e0d\u597d\u4f46\u5148\u9019\u6a23\uff0c\u7136\u5f8c\u9019\u6a23\u7684\u8a71\u6578\u5b57\u8d8a\u9ad8\u660e\u986f\u8d8a\u5bb9\u6613\u7372\u6551\u3002","83fd6fd8":"\u6539\u7528tf","3f4956de":"\u62ff\u5176\u4ed6\u7684\u6771\u897f\u5148\u63a8\u5b9a\u7d66\u4e00\u500b\u5927\u81f4\u7684\u503c\uff0c\u611f\u89ba\u7528\u66f4\u591a\u7d44\u8cc7\u6599\u505a\u7684\u8a71\u6703\u66f4\u597d\uff0c\u4f46\u9084\u6709\u5176\u4ed6\u7f3a\u5931\u503c\uff0c\u63a8\u5b9a\u7684\u60f3\u6cd5\u6bd4\u6211\u7576\u521d\u76f4\u63a5\u7528\u4e2d\u4f4d\u6578\u505a\u5c4c\u591a\u4e86= =","26833e7d":"\u54c7\u54c7Age\u3001Cabin\u3001Embarked\u6709\u7f3a\u5931\u503c\uff0c\u90a3\u8981\u600e\u9ebc\u4f86\u505a\u88dc\u503c\u6703\u6bd4\u8f03\u597d\u52d2(?\n\u984d\u6211\u4e4b\u524d\u505a\u6cd5\u662f\u76f4\u63a5\u62ff\u4e2d\u4f4d\u6578\u311b\uff0c\u6211\u597d\u721b"}}