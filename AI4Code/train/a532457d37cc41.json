{"cell_type":{"2783ecb8":"code","13b43003":"code","3f125aba":"code","da23677a":"code","f4fc0b57":"code","6a6cdc14":"code","282ef4c7":"code","e57317ba":"code","06ba61fb":"code","632579f1":"code","ed51452c":"code","06c430e5":"code","42bd49aa":"code","fec67f96":"code","05e00bb2":"code","4cc9f4f1":"code","e65e3953":"code","9271b46c":"code","84215529":"code","182c55a0":"code","4de6a677":"code","8587790d":"code","7e8c5d05":"code","55fd7910":"code","19097f8f":"markdown","cb8b4eaa":"markdown","e02abe87":"markdown","6f1808cc":"markdown","eac4da2f":"markdown","a53e8d3e":"markdown","e26026cb":"markdown","63247653":"markdown","fc01f0a2":"markdown","262adc92":"markdown"},"source":{"2783ecb8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img\nimport tensorflow as tf\nfrom keras.models import Sequential\nfrom keras.layers import Conv2D, MaxPooling2D, Dropout, Flatten, Dense, Activation, BatchNormalization\nfrom sklearn.model_selection import train_test_split\nfrom keras.callbacks import EarlyStopping, ReduceLROnPlateau\nimport tensorflow_hub as hub\nimport random\n\n\nimport os\n\n\n","13b43003":"labels = pd.read_csv('..\/input\/dog-breed-identification\/labels.csv')\nlabels.head()","3f125aba":"labels[\"breed\"].value_counts().plot.bar(figsize=(20, 10));","da23677a":"filenames = os.listdir('..\/input\/dog-breed-identification\/train')","f4fc0b57":"filenames.sort()","6a6cdc14":"filenames[:20]","282ef4c7":"df = pd.DataFrame({'filenames': filenames,\n                   'breeds': labels['breed']})\ndf.head()","e57317ba":"sample=random.choice(filenames)\nimage = load_img(\"..\/input\/dog-breed-identification\/train\/\"+sample)\nplt.imshow(image)\n","06ba61fb":"train_df,val_df = train_test_split(df,test_size = 0.2,random_state = 42)\ntrain_df.shape,val_df.shape","632579f1":"train_datagen = ImageDataGenerator(\n    rotation_range=15,\n    rescale=1.\/255,\n    shear_range=0.1,\n    zoom_range=0.2,\n    horizontal_flip=True,\n    width_shift_range=0.1,\n    height_shift_range=0.1\n)\n\ntrain_data = train_datagen.flow_from_dataframe( \n    train_df,\n    \"..\/input\/dog-breed-identification\/train\/\", \n    x_col='filenames',\n    y_col='breeds',\n    target_size=(224,224),\n    class_mode='categorical',\n    batch_size=32\n)","ed51452c":"valid_datagen = ImageDataGenerator(rescale = 1.\/255)\nval_data = valid_datagen.flow_from_dataframe(val_df,\n                                             \"..\/input\/dog-breed-identification\/train\/\",\n                                             x_col = 'filenames',\n                                             y_col = 'breeds',\n                                             target_size = (224,224),\n                                             class_mode = 'categorical',\n                                             batch_size = 32)\n","06c430e5":"test_files = os.listdir(\"..\/input\/dog-breed-identification\/test\/\")\ntest_files.sort()\ntest_df = pd.DataFrame({\n    'test_files': test_files\n})","42bd49aa":"test_gen = ImageDataGenerator(rescale=1.\/255)\ntest_data = test_gen.flow_from_dataframe(\n    test_df, \n    \"..\/input\/dog-breed-identification\/test\/\", \n    x_col='test_files',\n    y_col=None,\n    class_mode=None,\n    target_size=(224,224),\n    batch_size=32,\n    shuffle=False\n)","fec67f96":"INPUT_SHAPE = [None, 224, 224, 3] \n\nOUTPUT_SHAPE = 120 \n\nMODEL_URL = \"https:\/\/tfhub.dev\/google\/imagenet\/mobilenet_v2_130_224\/classification\/4\"","05e00bb2":"def create_model(input_shape=INPUT_SHAPE, output_shape=OUTPUT_SHAPE, model_url=MODEL_URL):\n    print(\"Building model with:\", MODEL_URL)\n\n  \n    model = tf.keras.Sequential([\n       hub.KerasLayer(MODEL_URL), \n       tf.keras.layers.Dense(units=OUTPUT_SHAPE, \n                          activation=\"softmax\")])\n\n  \n    model.compile(\n       loss=tf.keras.losses.CategoricalCrossentropy(), \n       optimizer=tf.keras.optimizers.Adam(), \n       metrics=[\"accuracy\"])\n\n \n    model.build(INPUT_SHAPE) \n  \n    return model","4cc9f4f1":"model = create_model()\nmodel.summary()","e65e3953":"early_stopping = EarlyStopping(monitor=\"val_accuracy\",\n                                                  patience=3) \n","9271b46c":"def train_model():\n    model = create_model()\n\n    model.fit(x=train_data,\n            epochs=50,\n            validation_data=val_data,\n            validation_freq=1, \n            callbacks=early_stopping)\n    return model\n  \n    ","84215529":"model = train_model()","182c55a0":"preds = model.predict(test_data,verbose = 1)","4de6a677":"preds[:10]","8587790d":"sub = pd.read_csv('..\/input\/dog-breed-identification\/sample_submission.csv')\nsub.head()","7e8c5d05":"labels = (train_data.class_indices)\nlabels = list(labels.keys())\ndf = pd.DataFrame(data=preds,\n                 columns=labels)\n\ncolumns = list(df)\ncolumns.sort()\ndf = df.reindex(columns=columns)\n\nfilenames = sub[\"id\"]\ndf[\"id\"]  = filenames\n\ncols = df.columns.tolist()\ncols = cols[-1:] + cols[:-1]\ndf = df[cols]\ndf.head(5)","55fd7910":"df.to_csv('submission_df.csv',index = False)","19097f8f":"* Splitting the data","cb8b4eaa":"* preparing a prediction data set for submission","e02abe87":"* Importing images","6f1808cc":"* Creating a function which build a model","eac4da2f":"* Training the model","a53e8d3e":"* Preprocessing the train ,val & test data","e26026cb":"* Visualizing unique breeds count","63247653":"* Predicting on test data","fc01f0a2":"* Adding images and labels into dataframe\n","262adc92":"Reading Labels"}}