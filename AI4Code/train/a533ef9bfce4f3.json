{"cell_type":{"8c11ed4f":"code","65f47114":"code","2e44dbd1":"code","65f86fd3":"code","e49ce7a9":"code","3204fd2f":"code","798f41cc":"code","717a070c":"code","d9d7f51a":"code","f097a3e8":"code","b79e5aa0":"code","b1e24fbc":"code","f726dd09":"code","d9985777":"code","d5d00f5d":"code","33199bed":"code","87179d92":"code","7037e270":"code","8d403dc7":"code","b0d0135a":"code","6c2cad04":"code","d58b397f":"code","b64a6352":"code","4268a244":"code","da940ff5":"code","455a06f7":"code","534b9c09":"code","1f2bad60":"code","2cc8fe68":"code","9925569f":"code","09280af7":"code","75157ab8":"code","8681bee3":"code","960c7542":"code","7be6890a":"code","35e9ac39":"code","c8f9df5e":"code","b4310bbc":"code","f09d0150":"code","c80f8efd":"code","90f2dd94":"code","c86bb60a":"code","1bbd4565":"code","f8b3220c":"markdown","eddd6504":"markdown","02ec91aa":"markdown","0a9d6057":"markdown","7cc705fc":"markdown","7aad1c15":"markdown","a9a821c6":"markdown","7989dc95":"markdown","2f91724a":"markdown","26236c85":"markdown","8b262799":"markdown","7d16b2b9":"markdown","324acfca":"markdown","330902bb":"markdown","650b076a":"markdown","1e316d92":"markdown","e0a86a77":"markdown","9230fde4":"markdown","0ccd60c0":"markdown","ccd52cb4":"markdown","61e6019a":"markdown","f9412c79":"markdown","0b5d05c9":"markdown","09c0d0c7":"markdown","1abc881b":"markdown","52ca2370":"markdown","90b7ca69":"markdown","5a6171c6":"markdown","ff05fbcb":"markdown","243ffa65":"markdown","e5bc7120":"markdown","df0bf977":"markdown","063439c6":"markdown","ddd7ec79":"markdown","79248a70":"markdown","1408e951":"markdown","4c0498fb":"markdown","235d1df2":"markdown","94152a23":"markdown","fddefb70":"markdown","6d68417d":"markdown","7ee4f694":"markdown","14356e63":"markdown"},"source":{"8c11ed4f":"# import library\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import zscore\nimport xgboost as xgb\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.preprocessing import LabelEncoder \nfrom sklearn.model_selection import train_test_split\n\n\npd.set_option('display.float_format', lambda x: '{:.4f}'.format(x)) #Limiting 4 decimal\nplt.rcParams[\"figure.figsize\"] = [9,5]\nplt.style.use('ggplot')\n\n","65f47114":"data_df = pd.read_csv(\"..\/input\/forest-fires-data-set\/forestfires.csv\")","2e44dbd1":"data_df.head()","65f86fd3":"target = 'area' ","e49ce7a9":"data_df.shape","3204fd2f":"data_df.dtypes","798f41cc":"data_df.columns","717a070c":"data_df.describe()","d9d7f51a":"# Calculating missing data in feature columns\ndata_mis = (data_df.isnull().sum() \/ len(data_df)) * 100\ndata_mis = data_mis.drop(data_mis[data_mis == 0].index).sort_values(ascending=False)\ndata_mis = pd.DataFrame({'Percentage' :data_mis})\ndata_mis['Id'] = data_mis.index\ndata_mis.reset_index(drop=True,level=0, inplace=True)\ndata_mis.head()","f097a3e8":"dft = data_df.drop(columns=target)\ncate_columns = dft.select_dtypes(include='object').columns.tolist()\nnume_columns = dft.select_dtypes(exclude='object').columns.tolist()","b79e5aa0":"print('Categorical columns: ',cate_columns)\nprint('Numerical columns: ',nume_columns)","b1e24fbc":"print(\"Skew: \\n{}\".format(data_df.skew()))\nprint(\"Kurtosis: \\n{}\".format(data_df.kurtosis()))","f726dd09":"plt.figure(figsize=(15,5))\nax = sns.kdeplot(data_df[target],shade=True,color='b')\nplt.xticks([i for i in range(0,1250,50)])\nplt.show()","d9985777":"plt.figure(figsize=(15,5))\nax = sns.kdeplot(data_df['FFMC'],shade=True,color='b')\nplt.xticks([i for i in range(0,100,5)])\nplt.show()","d5d00f5d":"plt.figure(figsize=(15,5))\nax = sns.kdeplot(data_df['ISI'],shade=True,color='b')\nplt.xticks([i for i in range(0,100,5)])\nplt.show()","33199bed":"outl_dect = sns.boxplot(data_df[target])","87179d92":"outl_dect = sns.boxplot(data_df['FFMC'])","7037e270":"outl_dect = sns.boxplot(data_df['ISI'])","8d403dc7":"outl_dect = sns.boxplot(data_df['rain'])","b0d0135a":"outlier_columns = ['area','FFMC','ISI','rain']","6c2cad04":"np.log1p(data_df[outlier_columns]).skew()","d58b397f":"np.log1p(data_df[outlier_columns]).kurtosis()","b64a6352":"mask = data_df.loc[:,['FFMC']].apply(zscore).abs() < 3","4268a244":"data_df = data_df[mask.values]\ndata_df.shape","da940ff5":"# Since most of the values in rain are 0.0, we can convert it as a categorical column\ndata_df['rain'] = data_df['rain'].apply(lambda x: int(x > 0.0))\n","455a06f7":"outlier_columns.remove('rain')\ndata_df[outlier_columns] = np.log1p(data_df[outlier_columns])","534b9c09":"data_df[outlier_columns].skew()","1f2bad60":"data_df[outlier_columns].kurtosis() ","2cc8fe68":"data_df.describe()","9925569f":"data_sel = data_df.copy()","09280af7":"le = LabelEncoder() \n  \ndata_sel['day']= le.fit_transform(data_sel['day']) \ndata_sel['month']= le.fit_transform(data_sel['month']) ","75157ab8":"X, y = data_sel.iloc[:,:-1],data_sel.iloc[:,-1]","8681bee3":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=7)\n\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=123)\n","960c7542":"#xg_reg = xgb.XGBRegressor(objective ='reg:squarederror', colsample_bytree = 0.3, learning_rate = 0.1,\n#                max_depth = 5, alpha = 10, n_estimators = 10)\n\nxg_reg = xgb.XGBRegressor(base_score=0.3, booster='gbtree', colsample_bylevel=1,\n       colsample_bytree=0.24, gamma=0, learning_rate=0.01, max_delta_step=0,\n       max_depth=3, min_child_weight=1, missing=None, n_estimators=102,\n       n_jobs=1, nthread=None, objective='reg:linear', random_state=0,\n       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n       silent=True, subsample=1)\n\n","7be6890a":"#eval_set = [(X_test, y_test)]\neval_set = [(X_train, y_train), (X_test, y_test)]\nxg_reg.fit(X_train, y_train, eval_metric=[\"rmse\"],eval_set=eval_set, verbose=False)\npreds = xg_reg.predict(X_test)","35e9ac39":"def calc_ISE(X_train, y_train, model):\n    '''returns the in-sample R^2 and RMSE; assumes model already fit.'''\n    predictions = model.predict(X_train)\n    mse = mean_squared_error(y_train, predictions)\n    rmse = np.sqrt(mse)\n    return model.score(X_train, y_train), rmse\n    \ndef calc_OSE(X_test, y_test, model):\n    '''returns the out-of-sample R^2 and RMSE; assumes model already fit.'''\n    predictions = model.predict(X_test)\n    mse = mean_squared_error(y_test, predictions)\n    rmse = np.sqrt(mse)\n    return model.score(X_test, y_test), rmse\n","c8f9df5e":"is_r2, ise = calc_ISE(X_train, y_train,xg_reg )\nos_r2, ose = calc_OSE(X_test, y_test, xg_reg)\n\n# show dataset sizes\ndata_list = (('R^2_in', is_r2), ('R^2_out', os_r2), \n             ('ISE', ise), ('OSE', ose))\nfor item in data_list:\n    print('{:10}: {}'.format(item[0], item[1]))","b4310bbc":"print('train\/test: ',ose\/ise)","f09d0150":"rmse = np.sqrt(mean_squared_error(y_test, preds))\nprint(\"RMSE: %f\" % (rmse))\n","c80f8efd":"xgb.plot_tree(xg_reg,num_trees=0)\n\nplt.rcParams['figure.figsize'] = [15, 15]\nplt.show()\n","90f2dd94":"xgb.plot_importance(xg_reg)\nplt.rcParams['figure.figsize'] = [7, 7]\nplt.show()\n","c86bb60a":"# retrieve performance metrics\nresults = xg_reg.evals_result()\nepochs = len(results['validation_0']['rmse'])\nx_axis = range(0, epochs)\n# plot RMSE\nfig, ax = plt.subplots()\nax.plot(x_axis, results['validation_0']['rmse'], label='Train')\nax.plot(x_axis, results['validation_1']['rmse'], label='Test')\nax.legend()\nplt.ylabel('RMSE')\nplt.title('XGBoost RMSE')\nplt.show()","1bbd4565":"xg_reg.save_model('0001.model_forest_fire')\n","f8b3220c":"#### ISI is right skewed.","eddd6504":"Dividing dataset into 33% test sample and 67% training sample .","02ec91aa":"### First Five Rows","0a9d6057":"### Univariate Check","7cc705fc":"### Outlier analysis","7aad1c15":"#### How to handle right skewed data?\n<p>Here data are right-skewed (clustered at lower values). We will perform operations like:- square root, cube root, logarithmic, etc. to transform the data. If the data are left-skewed (clustered at higher values). We will perform operations like:- cube, square, etc.<\/p>","a9a821c6":"No missing value is found in the dataset.","7989dc95":"### Skewness & Kurtosis","2f91724a":"## Applying xgboost","26236c85":"#### verbose set to False so that we can hide results of model fit progress","8b262799":"**Calculate In-Sample and Out-of-Sample R^2 and Error**","7d16b2b9":"#### FFMC is left skewed.","324acfca":"**Clearly test error(OSE) is near to the training error(ISE). i.e our model is ok.\n**","330902bb":"Even after transformation we still have high skewness and kurtosis in `FFMC` & `rain`","650b076a":"<p>Skew is the degree of distortion from a normal distribution. skewed, meaning there are a minority of very large values.<\/p>\n<p>Kurtosis is all about the tails of the distribution \u2014 not the peakedness or flatness. It is used to describe the extreme values in one versus the other tail. It is actually the measure of outliers present in the distribution . High kurtosis in a data set is an indicator that data has heavy tails or outliers.<\/p>","1e316d92":"### Describe Dataset","e0a86a77":"<p>Instead of removing them we will transform the data to treat the outliers.<\/p>","9230fde4":"## Import Library","0ccd60c0":"#### target i.e area is right skewed.","ccd52cb4":"#### Set Target Variable\nWe need to find area burned so we set target equals to area ","61e6019a":"<ul>\n    <li>If skewness is less than \u22121 or greater than +1, the distribution is highly skewed.<\/li>\n    <li>If skewness is between \u22121 and \u2212\u00bd or between +\u00bd and +1, the distribution is moderately skewed.<\/li>\n    <li>If skewness is between \u2212\u00bd and +\u00bd, the distribution is approximately symmetric.<\/li>\n<\/ul>","f9412c79":"<p>\n<b> Feature columns:- 'FFMC', 'ISI', & 'rain'  have higher kurtosis value. i,e have outliers.<\/b>\n<\/p>    ","0b5d05c9":"### Feature Columns","09c0d0c7":"<p>\n<b> Feature columns:- 'ISI', & 'rain'  have +ve skewness, value more than +1 so, they are right skewed.<\/b>\n<\/p>    ","1abc881b":"<ul>\n<li>A normal distribution has kurtosis exactly 3 (excess kurtosis exactly 0). Any distribution with kurtosis \u22483 (excess \u22480) is called mesokurtic.<\/li>\n<li>A distribution with kurtosis &lt;3 (excess kurtosis &lt;0 ) is called platykurtic. Compared to a normal distribution, its tails are shorter and thinner, and often its central peak is lower and broader.<\/li>\n<li>A distribution with kurtosis &gt;3 (excess kurtosis >0) is called leptokurtic. Compared to a normal distribution, its tails are longer and fatter, and often its central peak is higher and sharper.<\/li>\n<\/ul>","52ca2370":"#### Numerical and & Categorical Columns","90b7ca69":"### Check missing values","5a6171c6":"<p>As we can see count of every feature columns are same as shape of dataset. So we can say there is no missing data but we need to check to confirm. We will check later.<\/p>\n<p>Wen can see 50% (the middle of the data) also called median of feature columns('X', 'Y', 'DMC', 'ISI', 'RH', 'wind', 'rain', 'area') have higher mean value than median i.e data is right skewed. In all feature columns, column: 'area' is highly skewed.    \n<\/p>","ff05fbcb":"# Objective (Problem Statement): To predict the area burned in the Forest Fire.","243ffa65":"### Load","e5bc7120":"## Load & Describe Dataset","df0bf977":"### Outliers","063439c6":"Outliers are found in the following columns:\n<ol>\n<li>area<\/li>\n<li>FFMC<\/li>\n<li>ISI<\/li>\n<li>rain<\/li>\n<\/ol>\n","ddd7ec79":"## EDA(Explotary Data Analysis)","79248a70":"### Data types","1408e951":"### Shape","4c0498fb":"We need to convert month and day to either `int` or `float` from object data type","235d1df2":"<p>If skewness is positive, the data are positively skewed or skewed right, meaning that the right tail of the distribution is longer than the left. If skewness is negative, the data are negatively skewed or skewed left, meaning that the left tail is longer.<\/p>","94152a23":"<p>\n<b> Feature columns:- 'FFMC', & 'temp'  have -ve skewness, value less than -1 so, they are left skewed.<\/b>\n<\/p>    ","fddefb70":"Feature columns with (high, +ve, or -ve) outliers, skewness and kurtosis are: \n<ol>\n<li>FFMC<\/li>\n<li>ISI<\/li>\n<li>rain<\/li>\n<\/ol>","6d68417d":"Dataset is ready for model preparation.","7ee4f694":"<p>Removing outliers by zscore method.<\/p>","14356e63":"Encoding `day` & `month` column with label encoder"}}