{"cell_type":{"1a707d1d":"code","c71d0a86":"code","94375a73":"code","8bbb4ac4":"code","44e31df6":"code","8ee411ce":"code","93819f9d":"code","932d38c3":"code","15352225":"code","3296b23c":"code","4f2fb576":"code","8a610a7a":"code","ca7073a6":"code","7caacef1":"code","66787894":"code","91b2788f":"code","bb3c3e71":"code","ec363090":"code","748d0084":"markdown","7c2c7bc0":"markdown","4e392ba8":"markdown","213e17b8":"markdown","55ab63b8":"markdown","183ac84c":"markdown","a3f53ef3":"markdown"},"source":{"1a707d1d":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom matplotlib import pyplot \n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.\npd.set_option(\"display.max_rows\", 300)\n","c71d0a86":"def get_diff_pc (row, str_input_previous, str_input_current):\n    int_current = row[str_input_current] \n    int_previous = row[str_input_previous] \n    if int_previous == 0:\n        return None\n    else :\n        int_diff = float(int_current - int_previous)\n        return round( (int_diff \/ int_previous) * 100.0, 1)\n\ndef get_deaths_confirmed (row, flt_input_deaths, int_input_confirmed):\n    flt_deaths = row[flt_input_deaths] \n    int_confirmed = row[int_input_confirmed] \n    if flt_deaths > 0.0:\n        return round( (flt_deaths \/ int_confirmed) * 100.0, 1)\n    else :\n        return 0\n    \ndef get_deaths_population (row, flt_input_deaths, flt_population_millions):\n    flt_deaths = row[flt_input_deaths] \n    flt_population = row[flt_population_millions] \n    if flt_population > 0.0:\n        return round(flt_deaths \/ flt_population, 1)\n        #return round( (flt_deaths \/ int_confirmed) * 100.0, 1)\n    else :\n        return None\n\ndef update_overall_population (row, flt_input_population):\n    flt_population_original = row['PopulationMillions'] \n    if flt_population_original > 0.0:\n        return flt_population_original\n    else:\n        return flt_input_population\n","94375a73":"bln_one_country = True\nstr_one_country = 'Japan'\nbln_australia = False\nif bln_one_country:\n    print('*** using data for', str_one_country,'only ***')\n\nstr_dataset = 'corona-virus-update-dd26' # 'corona-virus-update-dd26'   'novel-corona-virus-2019-dataset'\ndf_cov_deaths = pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_deaths_global.csv\")\nlst_columns = df_cov_deaths.columns.tolist() \n\n#lst_dates = ['3\/18\/20', '3\/19\/20', '3\/20\/20', '3\/21\/20', '3\/22\/20', '3\/23\/20', '3\/24\/20', '3\/25\/20', '3\/26\/20', '3\/27\/20', '3\/28\/20', '3\/29\/20', '3\/30\/20', '3\/31\/20', '4\/01\/2020']\nlst_dates = lst_columns[-28:]\nint_temp = len(lst_dates)\n\nstr_previous7_date = lst_dates[int_temp-8]\nstr_previous_date = lst_dates[int_temp-2]\nstr_current_date = lst_dates[int_temp-1]\nprint ('using dataset:', str_dataset)\nprint('using current date:', str_current_date)\n","8bbb4ac4":"df_cov_deaths = df_cov_deaths[ df_cov_deaths[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_deaths = df_cov_deaths[ df_cov_deaths['Country\/Region'] == str_one_country ]\n\nlst_deaths = []\nfor str_date in lst_dates:\n    int_deaths = df_cov_deaths[str_date].sum()\n    lst_deaths.append(int_deaths)\n\ndf_cov_global_deaths = pd.DataFrame({'date':lst_dates})\ndf_cov_global_deaths['deaths_total'] = lst_deaths\n\ndf_cov_global_active = pd.DataFrame({'date':lst_dates})\ndf_cov_global_active['deaths_total'] = lst_deaths\n\ndf_cov_global_deaths['deaths_total_prev1'] = df_cov_global_deaths['deaths_total'].shift(1)\ndf_cov_global_deaths['deaths_diff_prev1'] = df_cov_global_deaths['deaths_total'] - df_cov_global_deaths['deaths_total_prev1']\ndf_cov_global_deaths['deaths_diff_pc_prev1'] = round((df_cov_global_deaths['deaths_diff_prev1'] \/ df_cov_global_deaths['deaths_total_prev1']) * 100, 2)\ndf_cov_global_deaths['deaths_total_mean7'] = round(df_cov_global_deaths['deaths_total'].rolling(7).mean(),0)\ndf_cov_global_deaths['deaths_total_mean7_prev1'] = df_cov_global_deaths['deaths_total_mean7'].shift(1)\ndf_cov_global_deaths['deaths_total_mean7_diff_prev1'] = df_cov_global_deaths['deaths_total_mean7'] - df_cov_global_deaths['deaths_total_mean7_prev1']\ndf_cov_global_deaths['deaths_total_mean7_diff_pc_prev1'] = round((df_cov_global_deaths['deaths_total_mean7_diff_prev1'] \/ df_cov_global_deaths['deaths_total_mean7_prev1']) * 100, 2)\n# check\ndf_cov_global_deaths = df_cov_global_deaths[ df_cov_global_deaths['deaths_total_mean7_diff_prev1'] >= 0.0 ]\ndisplay(df_cov_global_deaths.head(50))\n\nplot_temp = df_cov_global_deaths.plot(x='date', y='deaths_total', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total deaths')\npyplot.grid()\n\nplot_temp = df_cov_global_deaths.plot.bar(x='date', y='deaths_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new deaths')\npyplot.grid()\n\nplot_temp = df_cov_global_deaths.plot.bar(x='date', y='deaths_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new deaths %')\npyplot.grid()\n\nplot_temp = df_cov_global_deaths.plot(x='date', y='deaths_total_mean7', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total deaths (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_deaths.plot.bar(x='date', y='deaths_total_mean7_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new deaths (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_deaths.plot.bar(x='date', y='deaths_total_mean7_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new deaths % (7 day avg)')\npyplot.grid()\n","44e31df6":"df_cov_deaths= pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_deaths_global.csv\")\ndf_cov_deaths = df_cov_deaths[ df_cov_deaths[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_deaths = df_cov_deaths[ df_cov_deaths['Country\/Region'] == str_one_country ]\ndf_cov_deaths = df_cov_deaths[['Province\/State', 'Country\/Region', str_previous7_date, str_previous_date, str_current_date]]\n\ndf_cov_country_deaths = pd.DataFrame(df_cov_deaths.groupby('Country\/Region')[str_previous7_date, str_previous_date, str_current_date].sum())\ndf_cov_country_deaths = df_cov_country_deaths[ df_cov_country_deaths[str_current_date]>0 ]\n\nint_current_deaths = df_cov_country_deaths[str_current_date].sum()\nprint('total number of deaths (' + str_current_date + '):', int_current_deaths)\n\nint_previous_deaths = df_cov_country_deaths[str_previous_date].sum()\nprint('total number of deaths (' + str_previous_date + '):', int_previous_deaths)\n\nint_diff_deaths = int_current_deaths - int_previous_deaths\nflt_diff_deaths_pc = round(float(int_diff_deaths) * 100 \/ int_previous_deaths, 1)\nprint('difference: ', int_diff_deaths, '(' + str(flt_diff_deaths_pc) + '%)')\n\nint_previous7_deaths = df_cov_country_deaths[str_previous7_date].sum()\nint_diff7_deaths = int_current_deaths - int_previous7_deaths\nflt_diff7_deaths_pc = round(float(int_diff7_deaths) * 100 \/ int_previous7_deaths, 1)\n\nif bln_one_country and bln_australia:\n    df_cov_country_deaths['Province\/State'] = '**********'\n    df_cov_country_deaths = df_cov_country_deaths.reset_index()\n    df_cov_country_deaths = pd.concat([df_cov_deaths, df_cov_country_deaths], axis=0, sort=False)\n\ndf_cov_country_deaths['deaths_diff1'] = df_cov_country_deaths[str_current_date] - df_cov_country_deaths[str_previous_date]\ndf_cov_country_deaths['deaths_diff1_pc'] = df_cov_country_deaths.apply(get_diff_pc, axis=1, str_input_previous=str_previous_date, str_input_current=str_current_date)\n\ndf_cov_country_deaths['deaths_diff7'] = df_cov_country_deaths[str_current_date] - df_cov_country_deaths[str_previous7_date]\ndf_cov_country_deaths['deaths_diff7_pc'] = df_cov_country_deaths.apply(get_diff_pc, axis=1, str_input_previous=str_previous7_date, str_input_current=str_current_date)\n\ndf_cov_country_deaths = df_cov_country_deaths.sort_values(by=['deaths_diff1_pc'], ascending=False)\ndf_cov_country_deaths = df_cov_country_deaths.reset_index()\ndf_cov_country_deaths.rename(columns={str_previous7_date:'deaths_' + str_previous7_date}, inplace=True)\ndf_cov_country_deaths.rename(columns={str_previous_date:'deaths_' + str_previous_date}, inplace=True)\ndf_cov_country_deaths.rename(columns={str_current_date:'deaths_' + str_current_date}, inplace=True)\nif bln_one_country and bln_australia:\n    df_cov_country_deaths.drop('index', axis=1, inplace=True)\ndf_cov_country_deaths.to_csv('cov_country_deaths.csv', index=False)\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_deaths[['Province\/State', 'Country\/Region', 'deaths_' + str_previous_date, 'deaths_' + str_current_date, 'deaths_diff1', 'deaths_diff1_pc']]\nelse:\n    df_temp = df_cov_country_deaths[['Country\/Region', 'deaths_' + str_previous_date, 'deaths_' + str_current_date, 'deaths_diff1', 'deaths_diff1_pc']]\ndf_temp.head(300)","8ee411ce":"print('total number of deaths (' + str_current_date + '):', int_current_deaths)\nprint('total number of deaths (' + str_previous7_date + '):', int_previous7_deaths)\nprint('difference: ', int_diff7_deaths, '(' + str(flt_diff7_deaths_pc) + '%)')\n\ndf_cov_country_deaths = df_cov_country_deaths.sort_values(by=['deaths_diff7_pc'], ascending=False)\ndf_cov_country_deaths = df_cov_country_deaths.reset_index()\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_deaths[['Province\/State', 'Country\/Region', 'deaths_' + str_previous7_date, 'deaths_' + str_current_date, 'deaths_diff7', 'deaths_diff7_pc']]\nelse:\n    df_temp = df_cov_country_deaths[['Country\/Region', 'deaths_' + str_previous7_date, 'deaths_' + str_current_date, 'deaths_diff7', 'deaths_diff7_pc']]\ndf_temp.head(300)","93819f9d":"df_cov_confirmed = pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_confirmed_global.csv\")\ndf_cov_confirmed = df_cov_confirmed[ df_cov_confirmed[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_confirmed = df_cov_confirmed[ df_cov_confirmed['Country\/Region'] == str_one_country ]\n\nlst_confirmed = []\nfor str_date in lst_dates:\n    int_confirmed = df_cov_confirmed[str_date].sum()\n    lst_confirmed.append(int_confirmed)\n\ndf_cov_global_confirmed = pd.DataFrame({'date':lst_dates})\ndf_cov_global_confirmed['confirmed_total'] = lst_confirmed\n\ndf_cov_global_active = pd.merge(df_cov_global_confirmed, df_cov_global_active, how='left', on=['date'])\n\ndf_cov_global_confirmed['confirmed_total_prev1'] = df_cov_global_confirmed['confirmed_total'].shift(1)\ndf_cov_global_confirmed['confirmed_diff_prev1'] = df_cov_global_confirmed['confirmed_total'] - df_cov_global_confirmed['confirmed_total_prev1']\ndf_cov_global_confirmed['confirmed_diff_pc_prev1'] = round((df_cov_global_confirmed['confirmed_diff_prev1'] \/ df_cov_global_confirmed['confirmed_total_prev1']) * 100, 2)\ndf_cov_global_confirmed['confirmed_total_mean7'] = round(df_cov_global_confirmed['confirmed_total'].rolling(7).mean(),0)\ndf_cov_global_confirmed['confirmed_total_mean7_prev1'] = df_cov_global_confirmed['confirmed_total_mean7'].shift(1)\ndf_cov_global_confirmed['confirmed_total_mean7_diff_prev1'] = df_cov_global_confirmed['confirmed_total_mean7'] - df_cov_global_confirmed['confirmed_total_mean7_prev1']\ndf_cov_global_confirmed['confirmed_total_mean7_diff_pc_prev1'] = round((df_cov_global_confirmed['confirmed_total_mean7_diff_prev1'] \/ df_cov_global_confirmed['confirmed_total_mean7_prev1']) * 100, 2)\n# check\ndf_cov_global_confirmed = df_cov_global_confirmed[ df_cov_global_confirmed['confirmed_total_mean7_diff_prev1'] >= 0.0 ]\ndisplay(df_cov_global_confirmed.head(50))\n\n\nplot_temp = df_cov_global_confirmed.plot(x='date', y='confirmed_total', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total confirmed cases')\npyplot.grid()\n\nplot_temp = df_cov_global_confirmed.plot.bar(x='date', y='confirmed_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new confirmed cases')\npyplot.grid()\n\nplot_temp = df_cov_global_confirmed.plot.bar(x='date', y='confirmed_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new confirmed cases %')\npyplot.grid()\n\nplot_temp = df_cov_global_confirmed.plot(x='date', y='confirmed_total_mean7', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total confirmed cases (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_confirmed.plot.bar(x='date', y='confirmed_total_mean7_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new confirmed cases (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_confirmed.plot.bar(x='date', y='confirmed_total_mean7_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new confirmed cases % (7 day avg)')\npyplot.grid()\n","932d38c3":"df_cov_confirmed= pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_confirmed_global.csv\")\ndf_cov_confirmed = df_cov_confirmed[ df_cov_confirmed[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_confirmed = df_cov_confirmed[ df_cov_confirmed['Country\/Region'] == str_one_country ]\ndf_cov_confirmed = df_cov_confirmed[['Province\/State', 'Country\/Region', str_previous7_date, str_previous_date, str_current_date]]\n\ndf_cov_country_confirmed = pd.DataFrame(df_cov_confirmed.groupby('Country\/Region')[str_previous7_date, str_previous_date, str_current_date].sum())\ndf_cov_country_confirmed = df_cov_country_confirmed[ df_cov_country_confirmed[str_current_date]>0 ]\n\nint_current_confirmed = df_cov_country_confirmed[str_current_date].sum()\nprint('total number of confirmed (' + str_current_date + '):', int_current_confirmed)\n\nint_previous_confirmed = df_cov_country_confirmed[str_previous_date].sum()\nprint('total number of confirmed (' + str_previous_date + '):', int_previous_confirmed)\n\nint_diff_confirmed = int_current_confirmed - int_previous_confirmed\nflt_diff_confirmed_pc = round(float(int_diff_confirmed) * 100 \/ int_previous_confirmed, 1)\nprint('difference: ', int_diff_confirmed, '(' + str(flt_diff_confirmed_pc) + '%)')\n\nint_previous7_confirmed = df_cov_country_confirmed[str_previous7_date].sum()\nint_diff7_confirmed = int_current_confirmed - int_previous7_confirmed\nflt_diff7_confirmed_pc = round(float(int_diff7_confirmed) * 100 \/ int_previous7_confirmed, 1)\n\nif bln_one_country and bln_australia:\n    df_cov_country_confirmed['Province\/State'] = '**********'\n    df_cov_country_confirmed = df_cov_country_confirmed.reset_index()\n    df_cov_country_confirmed = pd.concat([df_cov_confirmed, df_cov_country_confirmed], axis=0, sort=False)\n\ndf_cov_country_confirmed['confirmed_diff1'] = df_cov_country_confirmed[str_current_date] - df_cov_country_confirmed[str_previous_date]\ndf_cov_country_confirmed['confirmed_diff1_pc'] = df_cov_country_confirmed.apply(get_diff_pc, axis=1, str_input_previous=str_previous_date, str_input_current=str_current_date)\n\ndf_cov_country_confirmed['confirmed_diff7'] = df_cov_country_confirmed[str_current_date] - df_cov_country_confirmed[str_previous7_date]\ndf_cov_country_confirmed['confirmed_diff7_pc'] = df_cov_country_confirmed.apply(get_diff_pc, axis=1, str_input_previous=str_previous7_date, str_input_current=str_current_date)\n\ndf_cov_country_confirmed = df_cov_country_confirmed.sort_values(by=['confirmed_diff1_pc'], ascending=False)\ndf_cov_country_confirmed = df_cov_country_confirmed.reset_index()\ndf_cov_country_confirmed.rename(columns={str_previous7_date:'confirmed_' + str_previous7_date}, inplace=True)\ndf_cov_country_confirmed.rename(columns={str_previous_date:'confirmed_' + str_previous_date}, inplace=True)\ndf_cov_country_confirmed.rename(columns={str_current_date:'confirmed_' + str_current_date}, inplace=True)\nif bln_one_country and bln_australia:\n    df_cov_country_confirmed.drop('index', axis=1, inplace=True)\ndf_cov_country_confirmed.to_csv('cov_country_confirmed.csv', index=False)\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_confirmed[['Province\/State', 'Country\/Region', 'confirmed_' + str_previous_date, 'confirmed_' + str_current_date, 'confirmed_diff1', 'confirmed_diff1_pc']]\nelse:\n    df_temp = df_cov_country_confirmed[['Country\/Region', 'confirmed_' + str_previous_date, 'confirmed_' + str_current_date, 'confirmed_diff1', 'confirmed_diff1_pc']]\ndf_temp.head(300)","15352225":"print('total number of confirmed (' + str_current_date + '):', int_current_confirmed)\nprint('total number of confirmed (' + str_previous7_date + '):', int_previous7_confirmed)\nprint('difference: ', int_diff7_confirmed, '(' + str(flt_diff7_confirmed_pc) + '%)')\n\ndf_cov_country_confirmed = df_cov_country_confirmed.sort_values(by=['confirmed_diff7_pc'], ascending=False)\ndf_cov_country_confirmed = df_cov_country_confirmed.reset_index()\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_confirmed[['Province\/State', 'Country\/Region', 'confirmed_' + str_previous7_date, 'confirmed_' + str_current_date, 'confirmed_diff7', 'confirmed_diff7_pc']]\nelse:\n    df_temp = df_cov_country_confirmed[['Country\/Region', 'confirmed_' + str_previous7_date, 'confirmed_' + str_current_date, 'confirmed_diff7', 'confirmed_diff7_pc']]\ndf_temp.head(300)","3296b23c":"if bln_one_country and bln_australia:\n    df_cov_country = pd.merge(df_cov_country_confirmed, df_cov_country_deaths, how='left', on=['Province\/State'])\n    df_cov_country_active = pd.merge(df_cov_country_confirmed, df_cov_country_deaths, how='left', on=['Province\/State'])\nelse:\n    df_cov_country = pd.merge(df_cov_country_confirmed, df_cov_country_deaths, how='left', on=['Country\/Region'])\n    df_cov_country_active = pd.merge(df_cov_country_confirmed, df_cov_country_deaths, how='left', on=['Country\/Region'])\ndf_cov_country['deaths_confirmed'] = df_cov_country.apply(get_deaths_confirmed, axis=1, flt_input_deaths='deaths_' + str_current_date, int_input_confirmed='confirmed_' + str_current_date)\ndf_cov_country = df_cov_country.sort_values(by=['deaths_confirmed'], ascending=False)\nif bln_one_country and bln_australia:\n    df_cov_country.rename(columns={'Country\/Region_x':'Country\/Region'}, inplace=True)\n    df_temp = df_cov_country[['Province\/State', 'Country\/Region', 'confirmed_' + str_current_date, 'deaths_' + str_current_date, 'deaths_confirmed' ]]\nelse:\n    df_temp = df_cov_country[['Country\/Region', 'confirmed_' + str_current_date, 'deaths_' + str_current_date, 'deaths_confirmed' ]]\ndf_temp.head(300)\n","4f2fb576":"if bln_one_country and bln_australia:\n    df_state_population = pd.read_csv(\"..\/input\/corona-virus-update-dd26\/state_population.csv\")\n    \n    df_cov_country.drop('Country\/Region_y', axis=1, inplace=True)\n    df_cov_country = pd.merge(df_cov_country, df_state_population, how='left', on=['Province\/State'])\n    df_cov_country.drop('Country\/Region_y', axis=1, inplace=True)\n    df_cov_country.rename(columns={'Country\/Region_x':'Country\/Region'}, inplace=True)\n\n    flt_population_millions = df_state_population['PopulationMillions'].sum()\n    df_cov_country['PopulationMillions'] = df_cov_country.apply(update_overall_population, axis=1, flt_input_population = flt_population_millions)\n    \nelse:\n    df_country_population = pd.read_csv(\"..\/input\/corona-virus-update-dd26\/country_population.csv\")\n    df_cov_country = pd.merge(df_cov_country, df_country_population, how='left', on=['Country\/Region'])\ndf_cov_country['deaths_population'] = df_cov_country.apply(get_deaths_population, axis=1, flt_input_deaths='deaths_' + str_current_date, flt_population_millions = 'PopulationMillions')\ndf_cov_country = df_cov_country.sort_values(by=['deaths_population'], ascending=False)\ndf_cov_country = df_cov_country.reset_index()\nif bln_one_country and bln_australia:\n    df_cov_country = df_cov_country[['Province\/State', 'Country\/Region', 'deaths_' + str_current_date, 'PopulationMillions', 'deaths_population' ]]\nelse:\n    df_cov_country = df_cov_country[['Country\/Region', 'deaths_' + str_current_date, 'PopulationMillions', 'deaths_population' ]]\ndf_cov_country.head(300)\n","8a610a7a":"old='''\ndf_cov_recovered = pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_recovered_global.csv\")\ndf_cov_recovered = df_cov_recovered[ df_cov_recovered[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_recovered = df_cov_recovered[ df_cov_recovered['Country\/Region'] == str_one_country ]\n\nlst_recovered = []\nfor str_date in lst_dates:\n    int_recovered = df_cov_recovered[str_date].sum()\n    lst_recovered.append(int_recovered)\n\ndf_cov_global_recovered = pd.DataFrame({'date':lst_dates})\ndf_cov_global_recovered['recovered_total'] = lst_recovered\n\ndf_cov_global_active = pd.merge(df_cov_global_active, df_cov_global_recovered, how='left', on=['date'])\n\ndf_cov_global_recovered['recovered_total_prev1'] = df_cov_global_recovered['recovered_total'].shift(1)\ndf_cov_global_recovered['recovered_diff_prev1'] = df_cov_global_recovered['recovered_total'] - df_cov_global_recovered['recovered_total_prev1']\ndf_cov_global_recovered['recovered_diff_pc_prev1'] = round((df_cov_global_recovered['recovered_diff_prev1'] \/ df_cov_global_recovered['recovered_total_prev1']) * 100, 2)\ndf_cov_global_recovered['recovered_total_mean7'] = round(df_cov_global_recovered['recovered_total'].rolling(7).mean(),0)\ndf_cov_global_recovered['recovered_total_mean7_prev1'] = df_cov_global_recovered['recovered_total_mean7'].shift(1)\ndf_cov_global_recovered['recovered_total_mean7_diff_prev1'] = df_cov_global_recovered['recovered_total_mean7'] - df_cov_global_recovered['recovered_total_mean7_prev1']\ndf_cov_global_recovered['recovered_total_mean7_diff_pc_prev1'] = round((df_cov_global_recovered['recovered_total_mean7_diff_prev1'] \/ df_cov_global_recovered['recovered_total_mean7_prev1']) * 100, 2)\n# check\ndf_cov_global_recovered = df_cov_global_recovered[ df_cov_global_recovered['recovered_total_mean7_diff_prev1'] >= 0.0 ]\ndisplay(df_cov_global_recovered.head(50))\n\nplot_temp = df_cov_global_recovered.plot(x='date', y='recovered_total', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total recovered')\npyplot.grid()\n\nplot_temp = df_cov_global_recovered.plot.bar(x='date', y='recovered_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new recovered')\npyplot.grid()\n\nplot_temp = df_cov_global_recovered.plot.bar(x='date', y='recovered_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new recovered %')\npyplot.grid()\n\nplot_temp = df_cov_global_recovered.plot(x='date', y='recovered_total_mean7', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total recovered (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_recovered.plot.bar(x='date', y='recovered_total_mean7_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new recovered (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_recovered.plot.bar(x='date', y='recovered_total_mean7_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new recovered % (7 day avg)')\npyplot.grid()\n'''","ca7073a6":"old='''\ndf_cov_recovered= pd.read_csv(\"..\/input\/\" + str_dataset + \"\/time_series_covid19_recovered_global.csv\")\ndf_cov_recovered = df_cov_recovered[ df_cov_recovered[str_current_date] > 0 ]\nif bln_one_country:\n    df_cov_recovered = df_cov_recovered[ df_cov_recovered['Country\/Region'] == str_one_country ]\ndf_cov_recovered = df_cov_recovered[['Province\/State', 'Country\/Region', str_previous7_date, str_previous_date, str_current_date]]\n\ndf_cov_country_recovered = pd.DataFrame(df_cov_recovered.groupby('Country\/Region')[str_previous7_date, str_previous_date, str_current_date].sum())\ndf_cov_country_recovered = df_cov_country_recovered[ df_cov_country_recovered[str_current_date]>0 ]\n\nint_current_recovered = df_cov_country_recovered[str_current_date].sum()\nprint('total number of recovered (' + str_current_date + '):', int_current_recovered)\n\nint_previous_recovered = df_cov_country_recovered[str_previous_date].sum()\nprint('total number of recovered (' + str_previous_date + '):', int_previous_recovered)\n\nint_diff_recovered = int_current_recovered - int_previous_recovered\nflt_diff_recovered_pc = round(float(int_diff_recovered) * 100 \/ int_previous_recovered, 1)\nprint('difference: ', int_diff_recovered, '(' + str(flt_diff_recovered_pc) + '%)')\n\nint_previous7_recovered = df_cov_country_recovered[str_previous7_date].sum()\nint_diff7_recovered = int_current_recovered - int_previous7_recovered\nflt_diff7_recovered_pc = round(float(int_diff7_recovered) * 100 \/ int_previous7_recovered, 1)\n\nif bln_one_country and bln_australia:\n    df_cov_country_recovered['Province\/State'] = '**********'\n    df_cov_country_recovered = df_cov_country_recovered.reset_index()\n    df_cov_country_recovered = pd.concat([df_cov_recovered, df_cov_country_recovered], axis=0, sort=False)\n\ndf_cov_country_recovered['recovered_diff1'] = df_cov_country_recovered[str_current_date] - df_cov_country_recovered[str_previous_date]\ndf_cov_country_recovered['recovered_diff1_pc'] = df_cov_country_recovered.apply(get_diff_pc, axis=1, str_input_previous=str_previous_date, str_input_current=str_current_date)\n\ndf_cov_country_recovered['recovered_diff7'] = df_cov_country_recovered[str_current_date] - df_cov_country_recovered[str_previous7_date]\ndf_cov_country_recovered['recovered_diff7_pc'] = df_cov_country_recovered.apply(get_diff_pc, axis=1, str_input_previous=str_previous7_date, str_input_current=str_current_date)\n\ndf_cov_country_recovered = df_cov_country_recovered.sort_values(by=['recovered_diff1_pc'], ascending=False)\ndf_cov_country_recovered = df_cov_country_recovered.reset_index()\ndf_cov_country_recovered.rename(columns={str_previous7_date:'recovered_' + str_previous7_date}, inplace=True)\ndf_cov_country_recovered.rename(columns={str_previous_date:'recovered_' + str_previous_date}, inplace=True)\ndf_cov_country_recovered.rename(columns={str_current_date:'recovered_' + str_current_date}, inplace=True)\nif bln_one_country and bln_australia:\n    df_cov_country_recovered.drop('index', axis=1, inplace=True)\ndf_cov_country_recovered.to_csv('cov_country_recovered.csv', index=False)\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_recovered[['Province\/State', 'Country\/Region', 'recovered_' + str_previous_date, 'recovered_' + str_current_date, 'recovered_diff1', 'recovered_diff1_pc']]\nelse:\n    df_temp = df_cov_country_recovered[['Country\/Region', 'recovered_' + str_previous_date, 'recovered_' + str_current_date, 'recovered_diff1', 'recovered_diff1_pc']]\ndf_temp.head(300)\n'''","7caacef1":"old='''\nprint('total number of recovered (' + str_current_date + '):', int_current_recovered)\nprint('total number of recovered (' + str_previous7_date + '):', int_previous7_recovered)\nprint('difference: ', int_diff7_recovered, '(' + str(flt_diff7_recovered_pc) + '%)')\n\ndf_cov_country_recovered = df_cov_country_recovered.sort_values(by=['recovered_diff7_pc'], ascending=False)\ndf_cov_country_recovered = df_cov_country_recovered.reset_index()\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_recovered[['Province\/State', 'Country\/Region', 'recovered_' + str_previous7_date, 'recovered_' + str_current_date, 'recovered_diff7', 'recovered_diff7_pc']]\nelse:\n    df_temp = df_cov_country_recovered[['Country\/Region', 'recovered_' + str_previous7_date, 'recovered_' + str_current_date, 'recovered_diff7', 'recovered_diff7_pc']]\ndf_temp.head(300)\n'''","66787894":"old='''\ndf_cov_global_active['active_total'] = df_cov_global_active['confirmed_total'] - df_cov_global_active['deaths_total'] - df_cov_global_active['recovered_total']\ndf_cov_global_active = df_cov_global_active[['date', 'active_total']]\n\ndf_cov_global_active['active_total_prev1'] = df_cov_global_active['active_total'].shift(1)\ndf_cov_global_active['active_diff_prev1'] = df_cov_global_active['active_total'] - df_cov_global_active['active_total_prev1']\ndf_cov_global_active['active_diff_pc_prev1'] = round((df_cov_global_active['active_diff_prev1'] \/ df_cov_global_active['active_total_prev1']) * 100, 2)\ndf_cov_global_active['active_total_mean7'] = round(df_cov_global_active['active_total'].rolling(7).mean(),0)\ndf_cov_global_active['active_total_mean7_prev1'] = df_cov_global_active['active_total_mean7'].shift(1)\ndf_cov_global_active['active_total_mean7_diff_prev1'] = df_cov_global_active['active_total_mean7'] - df_cov_global_active['active_total_mean7_prev1']\ndf_cov_global_active['active_total_mean7_diff_pc_prev1'] = round((df_cov_global_active['active_total_mean7_diff_prev1'] \/ df_cov_global_active['active_total_mean7_prev1']) * 100, 2)\n# check\n#df_cov_global_active = df_cov_global_active[ df_cov_global_active['active_total_mean7_diff_prev1'] >= 0.0 ]\ndf_cov_global_active = df_cov_global_active[ df_cov_global_active['active_total_mean7_diff_prev1'].notnull()]\n\ndisplay(df_cov_global_active.head(50))\n\n\nplot_temp = df_cov_global_active.plot(x='date', y='active_total', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total active cases')\npyplot.grid()\n\nplot_temp = df_cov_global_active.plot.bar(x='date', y='active_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new active cases')\npyplot.grid()\n\nplot_temp = df_cov_global_active.plot.bar(x='date', y='active_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new active cases %')\npyplot.grid()\n\nplot_temp = df_cov_global_active.plot(x='date', y='active_total_mean7', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('total active cases (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_active.plot.bar(x='date', y='active_total_mean7_diff_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new active cases (7 day avg)')\npyplot.grid()\n\nplot_temp = df_cov_global_active.plot.bar(x='date', y='active_total_mean7_diff_pc_prev1', figsize=(10, 5), legend=None)\npyplot.xlabel('date')\npyplot.ylabel('new active cases % (7 day avg)')\npyplot.grid()\n'''","91b2788f":"old='''\nif bln_one_country and bln_australia:\n    df_cov_country_active = pd.merge(df_cov_country_active, df_cov_country_recovered, how='left', on=['Province\/State'])\nelse:\n    df_cov_country_active = pd.merge(df_cov_country_active, df_cov_country_recovered, how='left', on=['Country\/Region'])\n\ndf_cov_country_active['deaths_' + str_current_date].fillna(0, inplace=True)\ndf_cov_country_active['recovered_' + str_current_date].fillna(0, inplace=True)\ndf_cov_country_active['deaths_' + str_previous_date].fillna(0, inplace=True)\ndf_cov_country_active['recovered_' + str_previous_date].fillna(0, inplace=True)\ndf_cov_country_active['deaths_' + str_previous7_date].fillna(0, inplace=True)\ndf_cov_country_active['recovered_' + str_previous7_date].fillna(0, inplace=True)\n\ndf_cov_country_active['active_' + str_current_date] = df_cov_country_active['confirmed_' + str_current_date] - df_cov_country_active['deaths_' + str_current_date] - df_cov_country_active['recovered_' + str_current_date]\ndf_cov_country_active['active_' + str_previous_date] = df_cov_country_active['confirmed_' + str_previous_date] - df_cov_country_active['deaths_' + str_previous_date] - df_cov_country_active['recovered_' + str_previous_date]\ndf_cov_country_active['active_' + str_previous7_date] = df_cov_country_active['confirmed_' + str_previous7_date] - df_cov_country_active['deaths_' + str_previous7_date] - df_cov_country_active['recovered_' + str_previous7_date]\n\nif bln_one_country and bln_australia:\n    df_cov_country_active = df_cov_country_active[['Province\/State', 'Country\/Region', 'active_' + str_previous7_date, 'active_' + str_previous_date, 'active_' + str_current_date]]\nelse:\n    df_cov_country_active = df_cov_country_active[['Country\/Region', 'active_' + str_previous7_date, 'active_' + str_previous_date, 'active_' + str_current_date]]\n\nif bln_one_country and bln_australia:\n    int_current_active = int(df_cov_country_active['active_' + str_current_date].sum() \/ 2)\n    int_previous_active = int(df_cov_country_active['active_' + str_previous_date].sum() \/ 2)\n    int_previous7_active = int(df_cov_country_active['active_' + str_previous7_date].sum() \/ 2)\nelse:\n    int_current_active = int(df_cov_country_active['active_' + str_current_date].sum())\n    int_previous_active = int(df_cov_country_active['active_' + str_previous_date].sum())\n    int_previous7_active = int(df_cov_country_active['active_' + str_previous7_date].sum())\n\nprint('total number of active cases (' + str_current_date + '):', int_current_active)\nprint('total number of active cases (' + str_previous_date + '):', int_previous_active)\n\nint_diff_active = int_current_active - int_previous_active\nflt_diff_active_pc = round(float(int_diff_active) * 100 \/ int_previous_active, 1)\nprint('difference: ', int_diff_active, '(' + str(flt_diff_active_pc) + '%)')\n\nint_diff7_active = int_current_active - int_previous7_active\nflt_diff7_active_pc = round(float(int_diff7_active) * 100 \/ int_previous7_active, 1)\n\n#if bln_one_country:\n#    df_cov_country_active['Province\/State'] = '**********'\n#    df_cov_country_active = df_cov_country_active.reset_index()\n#    df_cov_country_active = pd.concat([df_cov_active, df_cov_country_active], axis=0, sort=False)\n\ndf_cov_country_active['active_diff1'] = df_cov_country_active['active_' + str_current_date] - df_cov_country_active['active_' + str_previous_date]\ndf_cov_country_active['active_diff1_pc'] = df_cov_country_active.apply(get_diff_pc, axis=1, str_input_previous='active_' + str_previous_date, str_input_current='active_' + str_current_date)\n\ndf_cov_country_active['active_diff7'] = df_cov_country_active['active_' + str_current_date] - df_cov_country_active['active_' + str_previous7_date]\ndf_cov_country_active['active_diff7_pc'] = df_cov_country_active.apply(get_diff_pc, axis=1, str_input_previous='active_' + str_previous7_date, str_input_current='active_' + str_current_date)\n\ndf_cov_country_active = df_cov_country_active.sort_values(by=['active_diff1_pc'], ascending=False)\ndf_cov_country_active = df_cov_country_active.reset_index()\n\n#df_cov_country_active.rename(columns={str_previous7_date:'active_' + str_previous7_date}, inplace=True)\n#df_cov_country_active.rename(columns={str_previous_date:'active_' + str_previous_date}, inplace=True)\n#df_cov_country_active.rename(columns={str_current_date:'active_' + str_current_date}, inplace=True)\n\ndf_cov_country_active.drop('index', axis=1, inplace=True)\ndf_cov_country_active.to_csv('cov_country_active.csv', index=False)\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_active[['Province\/State', 'Country\/Region', 'active_' + str_previous_date, 'active_' + str_current_date, 'active_diff1', 'active_diff1_pc']]\nelse:\n    df_temp = df_cov_country_active[['Country\/Region', 'active_' + str_previous_date, 'active_' + str_current_date, 'active_diff1', 'active_diff1_pc']]\ndf_temp.head(300)\n'''","bb3c3e71":"old='''\nprint('total number of active cases (' + str_current_date + '):', int_current_active)\nprint('total number of active cases (' + str_previous7_date + '):', int_previous7_active)\nprint('difference: ', int_diff7_active, '(' + str(flt_diff7_active_pc) + '%)')\n\ndf_cov_country_active = df_cov_country_active.sort_values(by=['active_diff7_pc'], ascending=False)\n#df_cov_country_active.drop('level_0', axis=1, inplace=True)\ndf_cov_country_active = df_cov_country_active.reset_index()\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country_active[['Province\/State', 'Country\/Region', 'active_' + str_previous7_date, 'active_' + str_current_date, 'active_diff7', 'active_diff7_pc']]\nelse:\n    df_temp = df_cov_country_active[['Country\/Region', 'active_' + str_previous7_date, 'active_' + str_current_date, 'active_diff7', 'active_diff7_pc']]\ndf_temp.head(300)\n'''","ec363090":"old='''\nif bln_one_country and bln_australia:\n    df_cov_country = pd.merge(df_cov_country, df_cov_country_active, how='left', on=['Province\/State'])\n    df_cov_country.rename(columns={'Country\/Region_x':'Country\/Region'}, inplace=True)\nelse:\n    df_cov_country = pd.merge(df_cov_country, df_cov_country_active, how='left', on=['Country\/Region'])\n    \ndf_cov_country['active_population'] = df_cov_country.apply(get_deaths_population, axis=1, flt_input_deaths='active_' + str_current_date, flt_population_millions = 'PopulationMillions')\n#df_cov_country = df_cov_country[['Country\/Region', 'active_' + str_current_date, 'PopulationMillions', 'active_population']]\ndf_cov_country = df_cov_country.sort_values(by=['active_population'], ascending=False)\ndf_cov_country = df_cov_country.reset_index()\ndf_cov_country.drop('index', axis=1, inplace=True)\n\nif bln_one_country and bln_australia:\n    df_temp = df_cov_country[['Province\/State', 'Country\/Region', 'active_' + str_current_date, 'PopulationMillions', 'active_population' ]]\nelse:\n    df_temp = df_cov_country[['Country\/Region', 'active_' + str_current_date, 'PopulationMillions', 'active_population' ]]\ndf_temp.head(300)\n'''","748d0084":"## active cases \/ population","7c2c7bc0":"## deaths","4e392ba8":"## deaths \/ confirmed cases","213e17b8":"## active cases","55ab63b8":"## recovered","183ac84c":"## deaths \/ population","a3f53ef3":"## confirmed cases"}}