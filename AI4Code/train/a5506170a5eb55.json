{"cell_type":{"c0a36cd8":"code","3ec7a5f9":"code","287def54":"code","114978f3":"code","e7778996":"code","7faee9ff":"code","e3354e5c":"code","b7f7ec5f":"code","2fbba9e5":"code","c776d80b":"code","4441d157":"code","285bcc5d":"code","fcea6562":"code","6d932a73":"code","546f5863":"code","5664494e":"code","50c88927":"code","dcbfe3c7":"code","4bee42ae":"code","6389f473":"code","6068687a":"code","52562174":"code","bb46a3ac":"code","a1cf93f4":"code","758ec7ec":"code","cbe14843":"code","cfdd5d9b":"markdown","ecb279f8":"markdown","fee78524":"markdown","63126a11":"markdown","02c61b52":"markdown","728d3401":"markdown","34e9391d":"markdown","b3cab4d2":"markdown","37dc8710":"markdown"},"source":{"c0a36cd8":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","3ec7a5f9":"car_df = pd.read_csv('..\/input\/Car_Purchasing_Data.csv', encoding='ISO-8859-1')\n","287def54":"car_df[:10]","114978f3":"sns.pairplot(car_df)","e7778996":"X = car_df.drop(['Customer Name', 'Customer e-mail', 'Country', 'Car Purchase Amount'], axis = 1)","7faee9ff":"X.head()","e3354e5c":"y = car_df['Car Purchase Amount']\ny.shape","b7f7ec5f":"from sklearn.preprocessing import MinMaxScaler\n\nscaler_x = MinMaxScaler()\nX_scaled = scaler_x.fit_transform(X)\n","2fbba9e5":"scaler_x.data_max_","c776d80b":"scaler_x.data_min_","4441d157":"print(X_scaled)","285bcc5d":"X_scaled.shape","fcea6562":"y.shape","6d932a73":"y = y.values.reshape(-1,1)","546f5863":"y.shape","5664494e":"#first ten value\ny[:10]","50c88927":"scaler_y = MinMaxScaler()\n\ny_scaled = scaler_y.fit_transform(y)\n","dcbfe3c7":"y_scaled[:5]","4bee42ae":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X_scaled, y_scaled, test_size = 0.25)","6389f473":"import tensorflow.keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom sklearn.preprocessing import MinMaxScaler\n\nmodel = Sequential()\nmodel.add(Dense(128, input_dim=5, activation='relu'))\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dense(64, activation='relu'))\nmodel.add(Dense(1, activation='linear'))\nmodel.summary()\n","6068687a":"model.compile(optimizer='adam', loss='mean_squared_error')\n","52562174":"epochs_hist = model.fit(X_train, y_train, epochs=100, batch_size=24,  verbose=1, validation_split=0.2)\n","bb46a3ac":"print(epochs_hist.history.keys())\n","a1cf93f4":"plt.plot(epochs_hist.history['loss'])\nplt.plot(epochs_hist.history['val_loss'])\n\nplt.title('Model Loss Progression During Training\/Validation')\nplt.ylabel('Training and Validation Losses')\nplt.xlabel('Epoch Number')\nplt.legend(['Training Loss', 'Validation Loss'])\n","758ec7ec":"# Gender, Age, Annual Salary, Credit Card Debt, Net Worth \n\n# ***(Note that input data must be normalized)***\n\nX_test_sample = np.array([[0, 0.4370344,  0.53515116, 0.57836085, 0.22342985]])\n#X_test_sample = np.array([[1, 0.53462305, 0.51713347, 0.46690159, 0.45198622]])\n\ny_predict_sample = model.predict(X_test_sample)\n\nprint('Expected Purchase Amount=', y_predict_sample)\ny_predict_sample_orig = scaler_y.inverse_transform(y_predict_sample)\nprint('Expected Purchase Amount=', y_predict_sample_orig)","cbe14843":"End","cfdd5d9b":"# STEP #2: VISUALIZE DATASET","ecb279f8":"\nWe would like to develop a model to predict the total dollar amount that customers are willing to pay given the following attributes: \n- Customer Name\n- Customer e-mail\n- Country\n- Gender\n- Age\n- Annual Salary \n- Credit Card Debt \n- Net Worth \n\n### Our model should predict: \n- Car Purchase Amount ","fee78524":"# STEP#5: EVALUATING THE MODEL ","63126a11":"> This is a fake data. It is taken from one of the courses of Dr. Ryan Ahmed (superdatascience.com) and here used for only learning purposes.  ","02c61b52":"# STEP #3: CREATE TESTING AND TRAINING DATASET\/DATA CLEANING","728d3401":"# STEP#4: TRAINING THE MODEL","34e9391d":"# KNOWING THE DATA AND DECIDING WHAT WE NEED TO PREDICT","b3cab4d2":"# STEP #1: IMPORT DATASET","37dc8710":"# STEP #0: LIBRARIES IMPORT\n"}}