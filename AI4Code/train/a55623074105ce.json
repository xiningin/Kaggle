{"cell_type":{"d39c2a1b":"code","1d7800f8":"code","4ed3e8b2":"code","7de2ff6d":"code","ab6ddea3":"code","fba653e1":"code","a2ff1292":"code","f4121ff2":"code","607b8fb3":"code","85336ccd":"code","85bf638e":"code","a4b89765":"code","f055eae5":"code","0e750143":"code","8bb53fd7":"code","17c40999":"code","5e7276b4":"code","8b7bc1ea":"code","9a168828":"code","803e1d48":"code","41e5bced":"code","7fed8371":"code","4455a050":"code","6b4d7645":"code","7d84640d":"markdown","9e433adb":"markdown","a37ba1e7":"markdown","ca3e3dcd":"markdown","e914edd1":"markdown","eb6c3384":"markdown","2d18c57a":"markdown","e4af23e8":"markdown","3bbf9a0d":"markdown","aaf23a11":"markdown","100d71ce":"markdown","df585dd8":"markdown","702f256f":"markdown","a0461d69":"markdown","fd0cbe48":"markdown","7c748540":"markdown","fed8f52e":"markdown"},"source":{"d39c2a1b":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style(style=\"darkgrid\")\nfrom mpl_toolkits.basemap import Basemap # For geographical map","1d7800f8":"df = pd.read_csv(\"..\/input\/kc_house_data.csv\")","4ed3e8b2":"df.head(1)","7de2ff6d":"map = Basemap(lat_0=47.0, lon_0=-121)\nplt.figure(figsize=[20,10])\nmap.drawcoastlines(linewidth=.5,color=\"g\")\nmap.drawcountries(linewidth=.5)\nmap.drawcounties()\n# map.drawstates(color=\"r\")\nmap.fillcontinents(color=\"green\",alpha=.1)\nplt.scatter(df.long,df.lat,alpha=.6,color=\"r\")\nplt.show()","ab6ddea3":"df.drop([\"id\"],axis=1,inplace=True)","fba653e1":"corr = df.corr()","a2ff1292":"plt.figure(figsize=(16,8))\nsns.heatmap(corr,annot=True,cmap=\"RdBu\")","f4121ff2":"plt.figure(figsize=(16,8))\nmask = np.zeros_like(corr,dtype=np.bool)\n\n# Create a msk to draw only lower diagonal corr map\nmask[np.triu_indices_from(mask)] = True\nsns.set_style(style=\"white\")\nsns.heatmap(corr,annot=True,cmap=\"RdBu\",mask=mask)","607b8fb3":"# corr[corr>=.5]\nplt.figure(figsize=(16,8))\nmask = np.zeros_like(corr[corr>=.5],dtype=np.bool)\n\n# Create a msk to draw only lower diagonal corr map\nmask[np.triu_indices_from(mask)] = True\nsns.set_style(style=\"white\")\nsns.heatmap(corr[corr>=.5],annot=True,mask=mask,cbar=False)","85336ccd":"# plt.figure(figsize=(16,8))\n# for idx in high_corr.index:\n#     corr_idx = high_corr.index[high_corr[idx].notna()]\n#     for c_i in corr_idx:\n#         if c_i != idx:\n#             sns.scatterplot(df[c_i],df[idx],alpha=.2,color=\"m\")\n#             plt.show()","85bf638e":"# plt.figure(figsize=(16,8))\n# for idx in high_corr.index:\n#     corr_idx = high_corr.index[high_corr[idx].notna()]\n#     for c_i in corr_idx:\n#         if c_i != idx:\n#             sns.regplot(df[c_i],df[idx],color=\"g\")\n#             plt.show()","a4b89765":"date_df = df.sort_values(by=\"date\")\nplt.figure(figsize=(16,8))\nsns.scatterplot(date_df.date,date_df.price,hue=date_df.floors,alpha=.9,size=date_df.grade,palette=\"winter_r\")\nplt.xticks([])\nplt.show()","f055eae5":"plt.figure(figsize=(16,8))\n# sns.scatterplot(df.zipcode,df.price,hue=date_df.floors,alpha=.9,size=date_df.grade,palette=\"winter_r\")\n# sns.boxplot(df.zipcode,df.price)\nsns.swarmplot(df.zipcode,df.price)\nplt.xticks([])\nplt.show()","0e750143":"plt.figure(figsize=(16,8))\nsns.scatterplot(df.condition,df.price)\nplt.xticks([])\nplt.show()","8bb53fd7":"plt.figure(figsize=(16,8))\nyr_price = df.sort_values(by=\"yr_built\")\nsns.lineplot(yr_price.yr_built.sort_values(),yr_price.price)\nplt.xticks([])\nplt.show()","17c40999":"plt.figure(figsize=(16,8))\nzip_price = df.sort_values(by=\"price\",ascending=False)\n# zip_price\nsns.barplot(x=zip_price.zipcode,y=zip_price.price,palette=\"cool\")\nplt.xticks(rotation=90)\nplt.show()","5e7276b4":"plt.figure(figsize=(16,8))\nhigh_corr = corr[corr>=.5]\nsns.set_style(style=\"darkgrid\")\nsns.scatterplot(df.sqft_living,df.price,hue=df.yr_renovated)","8b7bc1ea":"df.head(1)","9a168828":"plt.figure(figsize=(16,4))\ndate_bedroom = df.sort_values(by=\"date\")\n# date_bedroom\nsns.scatterplot(date_bedroom.date,date_bedroom.bedrooms,hue=df.bathrooms,size=df.bedrooms,palette=\"winter\")\n# plt.xticks(rotation=90)\nplt.show()","803e1d48":"sns.barplot(df.waterfront,df.price)","41e5bced":"sns.barplot(df.view,df.price)","7fed8371":"sns.barplot(df.condition,df.price)","4455a050":"plt.figure(figsize=(16,4))\nsns.barplot(df.grade,df.price)","6b4d7645":"plt.figure(figsize=(16,4))\nsns.countplot(df.sqft_living[:200],palette=\"winter_r\")\nplt.xticks([])\nplt.show()","7d84640d":"# Lets drop those columns which is irrelavant for further analysis","9e433adb":"# See the price if house has different garde\nSo higher the grade then higher the price","a37ba1e7":"# House price based on year it was built","ca3e3dcd":"# See the price if house is in different conditions","e914edd1":"# Find out which zipcode (area) has maximum house price","eb6c3384":"# Living area Vs house price","2d18c57a":"# Date Vs Bedroom","e4af23e8":"# Highlight only those values which are highly correlated (.5 and above)","3bbf9a0d":"# Regression plot for highly correlated columns\nDue to so many plots I have commented. Please uncomment if you want to see the plots","aaf23a11":"# See the price if house is in view","100d71ce":"# Find out correlation between columns","df585dd8":"# Count the supply of sqft_living flats","702f256f":"# Price based on house condition","a0461d69":"# Findout the geographical location where exactly that country and state is by just looking at Longitude and Lattitude in dataset\nSo it's in North-West America!!!","fd0cbe48":"# House pricing over time period","7c748540":"# See the price if house is in waterfront","fed8f52e":"# Draw only lower triangle for correlation map"}}