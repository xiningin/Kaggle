{"cell_type":{"e5ea09cf":"code","cd05512f":"code","1b2da6b5":"code","4dba338c":"code","fbb91d13":"code","dd8fa374":"code","a2c08f7c":"code","923543aa":"code","d9db1ca3":"code","4ac5c07c":"code","908543b4":"code","9f4ade60":"code","88951845":"code","845ec34b":"code","4d97c15c":"code","943f1c62":"code","47998d26":"code","d5e704f4":"code","f96efccc":"code","e32ceec4":"code","a03e502f":"code","1bef6299":"code","c7b9eadb":"code","03d102a5":"code","2fdb782e":"code","eabd6231":"code","b1fcf0d1":"code","3f46f96d":"code","90f9ce72":"code","b1163e1f":"code","7db16931":"code","8a44199e":"code","798bf626":"code","60096210":"code","472cb8c4":"code","61ffe04b":"code","1479d23f":"markdown","f183db6a":"markdown","80fb2eea":"markdown","71df8d5b":"markdown","75e59f90":"markdown","c07314b6":"markdown","243d5620":"markdown","04691aa7":"markdown","3e3c53a1":"markdown","0600884a":"markdown","62abda89":"markdown","6bcd16ee":"markdown","0f64295a":"markdown","4f5dbb38":"markdown","0868a376":"markdown","5e4c5706":"markdown","ca9fe2c0":"markdown","b2ac014d":"markdown","b2f1d482":"markdown","ad7486cf":"markdown","176f3023":"markdown","a947cf83":"markdown","d1b703cd":"markdown"},"source":{"e5ea09cf":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","cd05512f":"airbnb=pd.read_csv('..\/input\/milan-airbnb-dataset-2020\/listings_summary.csv')\n","1b2da6b5":"airbnb.shape","4dba338c":"airbnb.dtypes","fbb91d13":"airbnb.info()","dd8fa374":"airbnb.duplicated().sum()\nairbnb.drop_duplicates(inplace=True)","a2c08f7c":"airbnb.isnull().sum()","923543aa":"airbnb.drop(['name','neighbourhood_group','id','host_name','last_review'], axis=1, inplace=True)","d9db1ca3":"airbnb.head(5)","4ac5c07c":"airbnb.neighbourhood.value_counts(normalize=True)","908543b4":"airbnb.fillna({'reviews_per_month':0}, inplace=True)\n#examing changes\nairbnb.reviews_per_month.isnull().sum()","9f4ade60":"airbnb.isnull().sum()\nairbnb.dropna(how='any',inplace=True)\nairbnb.info() #.info() function is used to get a concise summary of the dataframe","88951845":"airbnb.describe()","845ec34b":"airbnb.columns","4d97c15c":"corr = airbnb.corr(method='kendall')\nplt.figure(figsize=(15,8))\nsns.heatmap(corr, annot=True)\nairbnb.columns","943f1c62":"airbnb.shape","47998d26":"airbnb.head(15)","d5e704f4":"import seaborn as sns","f96efccc":"airbnb['neighbourhood'].unique()","e32ceec4":"sns.countplot(airbnb['neighbourhood'], palette=\"plasma\")\nfig = plt.gcf()\nfig.set_size_inches(100,20)\nplt.title('Neighbourhood')","a03e502f":"\nsns.countplot(airbnb['room_type'], palette=\"plasma\")\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Restaurants delivering online or Not')","1bef6299":"plt.figure(figsize=(10,6))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.neighbourhood)\nplt.ioff()","c7b9eadb":"plt.figure(figsize=(10,6))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.room_type)\nplt.ioff()","03d102a5":"plt.figure(figsize=(10,6))\nsns.scatterplot(airbnb.longitude,airbnb.latitude,hue=airbnb.availability_365)\nplt.ioff()","2fdb782e":"from wordcloud import WordCloud","eabd6231":"plt.subplots(figsize=(25,15))\nwordcloud = WordCloud(\n                          background_color='white',\n                          width=1920,\n                          height=1080\n                         ).generate(\" \".join(airbnb.neighbourhood))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.savefig('neighbourhood.png')\nplt.show()","b1fcf0d1":"airbnb.drop(['host_id','latitude','longitude','neighbourhood','number_of_reviews','reviews_per_month'], axis=1, inplace=True)\n#examing the changes\nairbnb.head(5)","3f46f96d":"#Encode the input Variables\ndef Encode(airbnb):\n    for column in airbnb.columns[airbnb.columns.isin(['neighbourhood', 'room_type'])]:\n        airbnb[column] = airbnb[column].factorize()[0]\n    return airbnb\n\nairbnb_en = Encode(airbnb.copy())","90f9ce72":"airbnb_en.head(15)","b1163e1f":"#Get Correlation between different variables\ncorr = airbnb_en.corr(method='kendall')\nplt.figure(figsize=(18,12))\nsns.heatmap(corr, annot=True)\nairbnb_en.columns","7db16931":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import r2_score","8a44199e":"#Defining the independent variables and dependent variables\nx = airbnb_en.iloc[:,[0,1,2,3]]\ny = airbnb_en['price']\n#Getting Test and Training Set\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=353)\nx_train.head()\ny_train.head()","798bf626":"x_train.shape","60096210":"#Prepare a Linear Regression Model\nreg=LinearRegression()\nreg.fit(x_train,y_train)\ny_pred=reg.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_pred)","472cb8c4":"#Prepairng a Decision Tree Regression\nfrom sklearn.tree import DecisionTreeRegressor\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","61ffe04b":"#Prepairng a Decision Tree Regression\nfrom sklearn.tree import DecisionTreeRegressor\nx_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1,random_state=105)\nDTree=DecisionTreeRegressor(min_samples_leaf=.0001)\nDTree.fit(x_train,y_train)\ny_predict=DTree.predict(x_test)\nfrom sklearn.metrics import r2_score\nr2_score(y_test,y_predict)","1479d23f":"### Neighbourhood","f183db6a":"#### Remove the NaN values from the dataset","80fb2eea":"#### Removing the Duplicates if any","71df8d5b":"### Examine Continous Variables","75e59f90":"#### Relation between neighbourgroup and Availability of Room","c07314b6":"## Data Visualization","243d5620":"## Availability of Room","04691aa7":"### Print all the columns names","3e3c53a1":"1. #### Replace the 'reviews per month' by zero","0600884a":"#### Print the Shape of the dataset","62abda89":"## Regression Analysis","6bcd16ee":"## For further updates of this Kernel check into this GitHub Link: https:\/\/github.com\/ankitpatel1661\/Milan-Airbnb-Predicting-Prices\/blob\/main\/Airbnb%20Analysis%2C%20Visualization%20and%20Prediction.ipynb","0f64295a":">  # <font color='orange'> Please UPVOTE if you found these helpful :) <\/font>","4f5dbb38":"## Importing Libraries","0868a376":"### Examining Changes","5e4c5706":"## WordCloud","ca9fe2c0":"### Room Type","b2ac014d":"### Get Correlation between different variables","b2f1d482":"#### Drop unnecessary columns","ad7486cf":"## Loading Dataset","176f3023":"#### Print the Datatypes of the dataset","a947cf83":"## Map of Neighbourhood","d1b703cd":"# Breakdown of this notebook:\n1. **Importing Libraries**\n2. **Loading the dataset**\n3. **Data Cleaning:** \n - Deleting redundant columns.\n - Dropping duplicates.\n - Cleaning individual columns.\n - Remove the NaN values from the dataset\n - Some Transformations\n4. **Data Visualization:** Using plots to find relations between the features.\n    - Get Correlation between different variables\n    - Neighbourhood\n    - Room Type\n    - Relation between neighbourhood and Availability of Room\n    - Map of Neighbourhood\n    - Availabity of rooom\n5. **Word Cloud**\n6. **Regression Analysis**\n - Linear Regression\n - Decision Tree Regression\n - Random Forest Regression\n"}}