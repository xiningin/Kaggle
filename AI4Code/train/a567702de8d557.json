{"cell_type":{"7ce0a125":"code","deca3bbb":"code","7a048070":"code","8a53c148":"code","b58037b5":"code","bb0fd6ee":"code","6a1a450a":"code","a4f3ba6f":"code","1895e68d":"code","f0135435":"code","a02fc07a":"code","f40a0df5":"code","e3086f19":"code","8fd3b92b":"code","2ec0c2b6":"code","990bce7f":"markdown","d8a8d7df":"markdown","d8dc31c4":"markdown","4e6f7fa8":"markdown"},"source":{"7ce0a125":"\nimport numpy as np \nimport pandas as pd \n\ndata = pd.read_csv(\"..\/input\/covid19-in-turkey\/covid_19_data_tr.csv\")\ndata.head()","deca3bbb":"data.dtypes.value_counts()","7a048070":"data.head().T","8a53c148":"data.drop(['Province\/State', 'Country\/Region', 'Last_Update'], axis=1, inplace=True)","b58037b5":"data.columns","bb0fd6ee":"data.head()\n","6a1a450a":"data.dtypes.value_counts()","a4f3ba6f":"from sklearn.preprocessing import LabelBinarizer\n\nlb = LabelBinarizer()\n\nfor col in ['Confirmed', 'Deaths', 'Recovered']:\n    data[col] = lb.fit_transform(data[col])","1895e68d":"\nx_cols = [x for x in data.columns if x != 'Confirmed']\n\n# Verileri iki dataframe'e bolme\nX_data = data[x_cols]\ny_data = data['Confirmed']\n","f0135435":"from sklearn.neighbors import KNeighborsClassifier\n\nknn = KNeighborsClassifier(n_neighbors=3)\n\nknn = knn.fit(X_data, y_data)\n\ny_pred = knn.predict(X_data)\n\ndef accuracy(real, predict):\n    return sum(y_data == y_pred) \/ float(real.shape[0])\n\nprint(accuracy(y_data, y_pred))","a02fc07a":"from math import sqrt\n\n\nknn = KNeighborsClassifier(n_neighbors=3, p=1, metric='euclidean')\n\nknn = knn.fit(X_data, y_data)\n\ny_pred = knn.predict(X_data)\n\nkare=sqrt(accuracy (y_data, y_pred))\n           \nprint(kare)\n           ","f40a0df5":"\nknn = KNeighborsClassifier(n_neighbors=2, p=2, metric='minkowski')\nknn = knn.fit(X_data, y_data)\ny_pred = knn.predict(X_data)\nkare_1 =sqrt(accuracy (y_data, y_pred))\nprint(kare_1)","e3086f19":"y = (data['Confirmed']).astype(int)\nfields = list(data.columns[:-1])\ncorrelations = data[fields].corrwith(y)\ncorrelations.sort_values(inplace=True)\ncorrelations","8fd3b92b":"import warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nsns.set_context('talk')\nsns.set_palette('dark')\n\n","2ec0c2b6":"sns.kdeplot(correlations, cumulative=True)","990bce7f":"**KNN ALGOR\u0130TMASI**\n\np=1 ve metric='euclidean'","d8a8d7df":"**KNN ALGOR\u0130TMASI**\n\np=2 ve metric='minkowski'","d8dc31c4":"# # **KNN ALGOR\u0130TMASI \u0130LE TAHM\u0130N**","4e6f7fa8":"# # **KNN ALGOR\u0130TMASI**\n\np=1 ve metric='euclidean'"}}