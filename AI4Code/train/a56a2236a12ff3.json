{"cell_type":{"f47f3edc":"code","b85ef011":"code","a0c70e98":"code","60addc7f":"code","6db54933":"code","ef01479d":"code","3e2fd0eb":"code","068b4eb1":"code","2bfc6922":"code","77a08c9c":"code","f4f78621":"code","40e2b6c6":"code","5d50c029":"code","c2c524cb":"code","b550f4be":"code","490ad916":"code","2e06a7c1":"code","fedc1916":"code","7f4f51f2":"code","d49bfda6":"code","028def78":"code","f9d6aa68":"code","5be0e5a7":"code","63dc60ee":"code","b13f4a69":"code","193394cd":"code","e9271d47":"code","9106bd39":"code","5a0bea9a":"code","714f52fb":"code","2f148a75":"code","f279aced":"code","d89b6ddc":"code","aa37cf42":"code","636cd6fd":"code","f2176e40":"code","d4e14e8b":"code","b0fd151a":"code","616700ec":"code","68b43d9a":"code","d11d77a2":"code","e87f0978":"markdown","6f4da6ee":"markdown","bdd8b354":"markdown"},"source":{"f47f3edc":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","b85ef011":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","a0c70e98":"\nretail = pd.read_csv(\"\/kaggle\/input\/purchases.txt\",sep='\\t',names=['custid','amount','date'],parse_dates=[2])\nretail.head()","60addc7f":"retail.info()","6db54933":"retail.shape","ef01479d":"retail.isnull().sum()","3e2fd0eb":"import datetime as dt\n\nretail['year'] = retail['date'].dt.year","068b4eb1":"retail.head()","2bfc6922":"retail.describe()","77a08c9c":"retail.amount.hist()","f4f78621":"plt.boxplot(x = 'amount', data=retail)\nplt.show()","40e2b6c6":"yearwise = retail.groupby('year').agg({'year':'count','amount':['sum','mean']})\ndisplay(yearwise.head())\n\nplt.figure(figsize=(15,4))\nplt.subplot(1,3,1)\nplt.bar(yearwise.index, yearwise['year','count'])\nplt.ylabel(\"No. of transactions\")\n\nplt.subplot(1,3,2)\nplt.bar(yearwise.index, yearwise['amount','mean'])\nplt.ylabel(\"Avg. amount\")\n\nplt.subplot(1,3,3)\nplt.bar(yearwise.index, yearwise['amount','sum'])\nplt.ylabel(\"sum of amount\")\nplt.tight_layout()\nplt.show()","5d50c029":"abv = retail.groupby('custid').agg({'amount':'mean'})\nabv.head()","c2c524cb":"abv.describe()","b550f4be":"retail.date.describe()","490ad916":"now = pd.to_datetime(\"2016-01-01\")\nnow","2e06a7c1":"retail['date2'] = retail['date']\n\ndict = {'date':lambda x:(now-x.max()).days,'date2':lambda x:(now-x.min()).days, 'custid':'count', 'amount':'mean'}\nrffm = retail.groupby('custid').agg(dict)\n\nrffm.rename(columns={'date':'recency','date2':'firstpurchase','custid':'frequency','amount':'monetary'}, inplace=True)\nrffm.head()","fedc1916":"rffm.info()","7f4f51f2":"rffm.describe()","d49bfda6":"cols = ['recency', 'frequency', 'monetary']\n\nrfm = rffm.loc[:,cols]\nrfm.head()","028def78":"rfm.hist()\nplt.tight_layout()\nplt.show()","f9d6aa68":"rfm_log = rfm.copy()\nrfm_log['monetary'] = rfm_log['monetary'].apply(np.log)\nrfm_log.head()","5be0e5a7":"rfm_log.hist()\nplt.show()","63dc60ee":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nrfm_log_scaled = scaler.fit_transform(rfm_log)\nrfm_log_scaled[:5]\n\nrfm_scaled = scaler.fit_transform(rfm)","b13f4a69":"from sklearn.cluster import KMeans\nimport matplotlib.cm as cm\nfrom sklearn.metrics import silhouette_samples,silhouette_score\nfrom mpl_toolkits.mplot3d import Axes3D\n\nk = 4\nkmeans = KMeans(n_clusters=k, n_init=40, random_state=1234)\nkmeans.fit(rfm_scaled)","193394cd":"cluster_labels = kmeans.labels_\nrfm_km = rfm_log.assign(K_Cluster = cluster_labels)\nrfm_km.head()","e9271d47":"rfm_km.groupby('K_Cluster').agg({'recency':'mean','frequency':'mean','monetary':['mean','count']})","9106bd39":"from mpl_toolkits.mplot3d import Axes3D\n\ncmap = cm.get_cmap(\"Accent\")\ncolors=cmap(cluster_labels.astype(float)\/k)\n\nfig=plt.figure(figsize=(12,10))\nax=fig.add_subplot(111,projection='3d')\nx=rfm_km.recency\ny=rfm_km.frequency\nz=rfm_km.monetary\n\nax.scatter(x,y,z,alpha=0.3, c=rfm_km.K_Cluster)\nax.set_xlabel('Recency')\nax.set_ylabel('Frequency')\nax.set_zlabel('Monetary')\nplt.show()","5a0bea9a":"N = len(rfm)\nn = 1841\nk = round(N\/n)\nnum = np.random.randint(1,k,)\nprint(num)\n\nrfm_subset = rfm.iloc[num:N:10,:]\nlen(rfm_subset)","714f52fb":"rfm_subset.head()","2f148a75":"rfm_subset.hist()\nplt.show()","f279aced":"rfm_subset_log = rfm_subset.copy()\nrfm_subset_log['monetary'] = rfm_subset_log['monetary'].apply(np.log)\nrfm_subset_log.head()","d89b6ddc":"rfm_subset_log.describe()","aa37cf42":"rfm_subset_log.hist()\nplt.tight_layout()\nplt.show()","636cd6fd":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nrfm_subset_log_scaled = scaler.fit_transform(rfm_subset_log)\nrfm_subset_log_scaled[:5]","f2176e40":"import scipy.cluster.hierarchy as shc\n\nplt.figure(figsize=(10,7))\nplt.title('Dendrograms')\ndend = shc.dendrogram(shc.linkage(rfm_subset_log_scaled, method='ward'))","d4e14e8b":"plt.figure(figsize=(10, 7))  \nplt.title(\"Dendrograms\")  \ndend = shc.dendrogram(shc.linkage(rfm_subset_log_scaled, method='ward'))\nplt.axhline(y=30, color='k', linestyle='--')","b0fd151a":"from sklearn.cluster import AgglomerativeClustering\n\ncluster = AgglomerativeClustering(n_clusters=4, affinity='euclidean', linkage='ward')  \ncluster.fit_predict(rfm_subset_log_scaled)","616700ec":"cluster_labels = cluster.labels_\nrfm_subset_log.loc[:,'HC_cluster'] = cluster_labels\nrfm_subset_log.head()","68b43d9a":"rfm_subset_log.groupby('HC_cluster').agg({'recency':'mean','frequency':'mean','monetary':['mean','count']})","d11d77a2":"#plt.figure(figsize=(10, 7))  \n#sns.scatterplot(x=rfm_subset.recency, y=rfm_subset.frequency, hue=rfm_subset.HC_cluster, alpha=0.5, palette='viridis')\n\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig=plt.figure(figsize=(12,10))\nax=fig.add_subplot(111,projection='3d')\nx=rfm_subset_log.recency\ny=rfm_subset_log.frequency\nz=rfm_subset_log.monetary\n\nax.scatter(x,y,z,c=rfm_subset_log.HC_cluster)\nax.set_xlabel('Recency')\nax.set_ylabel('Frequency')\nax.set_zlabel('Monetary')\nplt.show()","e87f0978":"## K-means clustering on entire data","6f4da6ee":"## Heirarchical clustering on subset of data","bdd8b354":"Life time value calculator"}}