{"cell_type":{"5f3fbf6a":"code","4515e062":"code","deff31e7":"code","d7a970b7":"code","9e55e31a":"code","4e21f2bd":"code","ead97b77":"code","37ac69b2":"code","074b651e":"code","dca400ba":"code","a65c8c6a":"code","5d4cf6bd":"code","d0352c0e":"code","ce74c475":"code","e4ef01b0":"code","e152eee4":"code","8969b071":"code","3701f4fd":"code","51bae191":"code","fd9df05c":"code","1f5aedba":"code","8f1ea466":"code","b38637cd":"code","f01e5fda":"code","d8fd6043":"code","2a646c35":"code","4f681d4b":"code","e4bba223":"code","cbd4fc43":"code","c5a2c1f9":"code","52e4864e":"code","1cee5704":"code","75cf07e9":"code","6a68be0d":"code","b56d1824":"code","1e2e4162":"code","daf3d898":"code","4f3b6c06":"code","f87840e4":"code","9306ccb6":"markdown","1feae8d2":"markdown","392d02a7":"markdown","6dc50360":"markdown","4d92a9a5":"markdown","f92a38f8":"markdown","76208d87":"markdown","2f61f021":"markdown","f05b5b63":"markdown","ed6e20e0":"markdown","90488b56":"markdown","b387f377":"markdown","81949067":"markdown","cd6096fc":"markdown","09f02e06":"markdown","2d7a53e0":"markdown","6e57a913":"markdown","86a1c81a":"markdown","628b81e0":"markdown","1fa2a4ab":"markdown","0177836d":"markdown","e4818cce":"markdown"},"source":{"5f3fbf6a":"!pip install comet-ml","4515e062":"# import comet_ml at the top of your file\nfrom comet_ml import Experiment\n\nfrom kaggle_secrets import UserSecretsClient\nuser_secrets = UserSecretsClient()\ncomet_api_key = user_secrets.get_secret(\"comet_api_key\")","deff31e7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d7a970b7":"data = pd.read_csv('\/kaggle\/input\/big-mart-salescsv\/Train_UWu5bXk.csv')","9e55e31a":"data.head()","4e21f2bd":"data.shape","ead97b77":"data.isnull().sum()","37ac69b2":"data.info()","074b651e":"data.plot.scatter(x='Item_Visibility',\n                 y='Item_Outlet_Sales',\n                 title='Visibility vs Sales')","dca400ba":"data.groupby('Outlet_Identifier').Item_Outlet_Sales.sum().sort_values().plot.barh(title='Outlet vs Sales')","a65c8c6a":"data.groupby('Item_Type').Item_Outlet_Sales.sum().sort_values().plot.barh(title='Type vs Sales')","5d4cf6bd":"data.Item_Fat_Content.value_counts(dropna=False)","d0352c0e":"data.Item_Fat_Content.replace(to_replace=['LF','low fat'], value='Low Fat', inplace=True)\ndata.Item_Fat_Content.replace(to_replace=['reg'], value='Regular', inplace=True)\ndata.Item_Fat_Content.value_counts()","ce74c475":"data.isnull().sum()","e4ef01b0":"data.Item_Identifier.value_counts()","e152eee4":"data.Item_Weight = data.Item_Weight.fillna(data.groupby('Item_Identifier').Item_Weight.transform('mean'))\n\ndata.isnull().sum()","8969b071":"data[data.Item_Weight.isnull()]","3701f4fd":"data.Item_Weight = data.Item_Weight.fillna(data.groupby('Item_Type').Item_Weight.transform('mean'))\ndata.isnull().sum()","51bae191":"data.Outlet_Size.value_counts(dropna=False)","fd9df05c":"pd.crosstab(index= data.Outlet_Size , columns=  data.Outlet_Type)","1f5aedba":"data.Outlet_Size = data.Outlet_Size.fillna(data.Outlet_Type.map({'Grocery Store': 'Small'}))\ndata.Outlet_Size.value_counts(dropna=False)","8f1ea466":"pd.crosstab(index= data.Outlet_Size , columns=  data.Outlet_Location_Type)","b38637cd":"data.Outlet_Size = data.Outlet_Size.fillna(data.Outlet_Location_Type.map({'Tier 2': 'Small'}))\ndata.Outlet_Size.value_counts(dropna=False)","f01e5fda":"data.isnull().sum()","d8fd6043":"data.select_dtypes(include=[object]).columns.to_list()","2a646c35":"drop_cols = ['Item_Identifier','Outlet_Identifier', 'Item_Outlet_Sales']\n\ncat_cols = ['Item_Fat_Content',\n 'Item_Type',\n 'Outlet_Size',\n 'Outlet_Location_Type',\n 'Outlet_Type']","4f681d4b":"from sklearn.preprocessing import LabelEncoder\nle = LabelEncoder()\n","e4bba223":"for col in cat_cols:\n    data[col] = le.fit_transform(data[col])\n\ndata.head()","cbd4fc43":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler, MinMaxScaler\nfrom sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\nfrom sklearn.model_selection  import train_test_split\nfrom sklearn.metrics import  make_scorer, mean_squared_error\n","c5a2c1f9":"## split data\nX = data.drop(columns=drop_cols) \ny = data.Item_Outlet_Sales\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","52e4864e":"# fit model and predict\nlinear_model1 = LinearRegression()\nlinear_model1.fit(X_train, y_train)\ny_pred = linear_model1.predict(X_test)","1cee5704":"accuracy = linear_model1.score(X_test, y_test)\naccuracy","75cf07e9":"rmse = np.sqrt(mean_squared_error(y_test, y_pred))\nrmse","6a68be0d":"#these will be logged to your sklearn-demos project on Comet.ml\nparams={\"random_state\":0,\n        \"model_type\":\"linear_reg\",\n        \"scaler\":\"N\",\n        \"param_grid\":\"N\",\n}\n\nmetrics = {\n\"accuracy\":accuracy,\n\"rmse\":rmse\n}\n\n# Create an experiment with your api key:\nexp = Experiment(\n    api_key=comet_api_key,\n    project_name=\"codealong-big-mart-sales\",\n    workspace=\"maksteel\",\n)\nexp.log_dataset_hash(X_train)\nexp.log_parameters(params)\nexp.log_metrics(metrics)\nexp.end()","b56d1824":"def rmse(y_true, y_pred):\n    return np.sqrt(mean_squared_error(y_true, y_pred))\n\nrmse_score = make_scorer(rmse, greater_is_better=False)\n\npipeline = Pipeline([\n    ('scaling', 'passthrough'),\n    ('model','passthrough')\n])\n\nparam_grid = {\n    'scaling': [StandardScaler(), MinMaxScaler()],\n    'model' : [LinearRegression(), Ridge(), Lasso(), ElasticNet()]\n               \n}\ngrid = GridSearchCV(pipeline, param_grid=param_grid, cv=5, n_jobs=-1, scoring=rmse_score)","1e2e4162":"grid.fit(X_train, y_train)","daf3d898":"grid.best_estimator_","4f3b6c06":"grid.score(X_test, y_test)","f87840e4":"# track experiments on comet_ml\n\nfor i in range(len(grid.cv_results_['params'])):\n    exp = Experiment(workspace=\"maksteel\",\n        project_name=\"codealong-big-mart-sales\",\n        api_key=comet_api_key)\n    for k,v in grid.cv_results_.items():\n        if k == \"params\":\n            exp.log_parameters(v[i])\n        else:\n            exp.log_metric(k,v[i])\n    exp.end()\n\n","9306ccb6":"### Insight:\n- Fruit and Vege and Snack are among the top selling items\n- Breakfast and Seafood are not selling much","1feae8d2":"## Item type vs Sales","392d02a7":"# EDA","6dc50360":"Item_Weight is imputed with groups formed by Item_Idenfier and Item_Type ","4d92a9a5":"## Feature Engineering Ideas:\n- Create a levelled Visibiilty - Low, High\n- Reduce Item_Type categories to Food, Drink, Non-consumable\n- Operational Year = 2013 - Est. Year","f92a38f8":"### Insight: \n- Outlet 27 is high sales\n- Outlet 10 and 19 are the lowest","76208d87":"all grocery stores are small","2f61f021":"Item_Fat_Content is correctly labelled","f05b5b63":"### Outlet_Size","ed6e20e0":"two cols need cleaning","90488b56":"## Outlet vs Sales","b387f377":"Outlet_Size is imputed using Outlet_Type and Outlet_Location_Type","81949067":"## Item_Fat_Content","cd6096fc":"## Convert to numerical","09f02e06":"## Grid Search, model selection","2d7a53e0":"# Data Pre-processing","6e57a913":"## Item_Weight","86a1c81a":"# Model Building\/ Train\n\n\/kaggle\/input\/big-mart-salescsv\/Train_UWu5bXk.csv","628b81e0":"## Visibility vs Sales","1fa2a4ab":"### Insight:\n visibility of less than 0.2 seems to have more sales","0177836d":"# Prediction on Test set\n\n\/kaggle\/input\/big-mart-salescsv\/Test_u94Q5KV.csv","e4818cce":"all Tier 2 stores are small"}}