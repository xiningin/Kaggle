{"cell_type":{"3bc856b7":"code","2abea4a9":"code","c4e289a1":"code","ae17ded2":"code","663d804a":"code","df678d81":"code","4db83ed0":"code","50b13354":"code","6f04850e":"markdown","0a14efcc":"markdown","e663ff5b":"markdown","68bd8948":"markdown","86b75b06":"markdown","2c3ca8db":"markdown"},"source":{"3bc856b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets, svm, tree, preprocessing, metrics\nimport sklearn.ensemble as ske\nimport tensorflow as tf\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2abea4a9":"# Read in training data\nraw_data = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","c4e289a1":"# Read in test data\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_data.head()","ae17ded2":"# Examine data structure\nraw_data.head(3)","663d804a":"# Dataframe info\nraw_data.info()","df678d81":"# Remove non-useful info such as passenger ID and Name\ntrain_data = raw_data.drop(['PassengerId', 'Name', 'Ticket'], axis = 1)","4db83ed0":"# Examine data by visualising some of it\nfig, axes = plt.subplots(2,2)\n\nfig.tight_layout(pad=3)\naxes[0,0].set_title('Female passengers by class')\naxes[0,1].set_title('Female passengers by age')\n# Examine female passengers\nsns.histplot(data = train_data[train_data['Sex'] == 'female'], x = 'Pclass', ax = axes[0,0], hue = 'Survived', alpha = 0.3, element = 'bars', discrete = True)\nsns.histplot(data = train_data[train_data['Sex'] == 'female'], x = 'Age', ax = axes[0,1], hue = 'Pclass', kde = True, alpha = 0.3, element = 'step')\n\naxes[1,0].set_title('Male passengers by class')\naxes[1,1].set_title('Male passengers by age')\n# Examine male passengers\nsns.histplot(data = train_data[train_data['Sex'] == 'male'], x = 'Pclass', ax = axes[1,0], hue = 'Survived', alpha = 0.3, element = 'bars', discrete = True)\nsns.histplot(data = train_data[train_data['Sex'] == 'male'], x = 'Age', ax = axes[1,1], hue = 'Pclass', kde = True, alpha = 0.3, element = 'step')\n","50b13354":"from sklearn.ensemble import RandomForestClassifier\n\ny = train_data[\"Survived\"]\n\nfeatures = [\"Pclass\", \"Sex\"]\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","6f04850e":"Attributes such as sex, age and class should be the most obvious ones that could potentially have a correlation with the survival, worth examining these more closely.","0a14efcc":"Following assumptions\/hypotheses can be made:\n1. For classes '1' and '2' the survival rate is higher than for the class '3'\n2. Female passengers had a better chance at survival","e663ff5b":"Based on these features we can make a simple random forest classifier.","68bd8948":"# Data investigation\n\nInformation contained in 'PassengerId', 'Name', 'Ticket' realistically should not have played a role in survival, therefore it seems logical to remove these columns.","86b75b06":"An important note is that some of the columns have missing information. The dataset wil require some preprocessing.","2c3ca8db":"# Examining the data structure"}}