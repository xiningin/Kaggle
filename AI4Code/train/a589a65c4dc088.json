{"cell_type":{"64b4c265":"code","2ceaafe6":"code","6e722ccc":"code","5874e327":"code","c36afa5a":"code","f4fbd03d":"code","7aa63708":"code","2eeacfb4":"code","41e3866b":"code","e5968d36":"code","123171e8":"code","d7b3a22d":"code","fe493012":"code","8dda4432":"code","756dfacf":"markdown","1fd640e1":"markdown","d955d028":"markdown","d223ea45":"markdown","441e8e91":"markdown"},"source":{"64b4c265":"import numpy as np\nimport pandas as pd\nimport plotly.express as px","2ceaafe6":"df = pd.read_csv(\"..\/input\/ranzcr-clip-catheter-line-classification\/train.csv\")\ndf.head()","6e722ccc":"print(len(df.PatientID.value_counts()))","5874e327":"fig = px.bar(df.PatientID.value_counts(), title=\"Unique Patient Count\")\nfig.show()","c36afa5a":"len(df.columns[1:-1])","f4fbd03d":"label = df.columns[1:-1]\nsum_label = df[label].values.sum(1)\npx.bar([\"Multi label\", \"Single label\"], [sum(sum_label>1),sum(sum_label==1)], title=\"Single label - Multi label\")\n","7aa63708":"from plotly.subplots import make_subplots\nimport plotly.graph_objs as go\n\nfig = make_subplots(rows=5, cols=3)\n\ntraces = [\n    go.Bar(\n        x=[0, 1], \n        y=[\n            len(df[df[col]==0]),\n            len(df[df[col]==1])\n        ], \n        name=col,\n        text = [\n            str(round(100 * len(df[df[col]==0]) \/ len(df), 2)) + '%',\n            str(round(100 * len(df[df[col]==1]) \/ len(df), 2)) + '%'\n        ],\n        textposition='auto'\n    ) for col in label\n]\n\nfor i in range(len(traces)):\n    fig.append_trace(traces[i], (i \/\/ 3) + 1, (i % 3)  +1)\n\nfig.update_layout(\n    title_text='Train columns',\n    height=1200,\n    width=1000\n)\n\nfig.show()","2eeacfb4":"x = df.drop(['StudyInstanceUID', 'PatientID'], axis=1).sum(axis=0).sort_values().reset_index()\nx.columns = ['column', 'nonzero_records']\n\nfig = px.bar(\n    x, \n    x='nonzero_records', \n    y='column', \n    orientation='h', \n    title='Columns and non zero samples', \n    height=800, \n    width=800\n)\n\nfig.show()","41e3866b":"import matplotlib.pyplot as plt\nimport cv2 as cv\nfig, ax = plt.subplots(figsize=(8, 8))\nax.imshow(\n    cv.imread(\"..\/input\/ranzcr-clip-catheter-line-classification\/train\/1.2.826.0.1.3680043.8.498.10000428974990117276582711948006105617.jpg\")\n)","e5968d36":"test_image = cv.imread(\"..\/input\/ranzcr-clip-catheter-line-classification\/train\/1.2.826.0.1.3680043.8.498.10000428974990117276582711948006105617.jpg\")\nprint(test_image.shape)","123171e8":"import os\nfrom pathlib import Path\nsize_arr = []\nTRAIN_FOLDER = Path(\"..\/input\/ranzcr-clip-catheter-line-classification\/train\")\nfor idx, img in enumerate(os.listdir(TRAIN_FOLDER)):\n    test_image = cv.imread(os.path.join(TRAIN_FOLDER, img))\n    size_arr.append(test_image.shape)\n    if idx > 1000:\n        break","d7b3a22d":"df_size = pd.DataFrame({\"sizeimg\": size_arr})\ndf_size.sizeimg = df_size.sizeimg.map(str)\nfig = px.bar(df_size.sizeimg.value_counts().tolist(),  title=\"img size\")\nfig.show()","fe493012":"df_size.sizeimg.value_counts().index","8dda4432":"f, plots = plt.subplots(6, 6, sharex='col', sharey='row', figsize=(17, 17))\n\nfor i in range(36):\n    plots[i \/\/ 6, i % 6].axis('off')\n    plots[i \/\/ 6, i % 6].imshow(cv.imread(os.path.join(TRAIN_FOLDER, np.random.choice(df.StudyInstanceUID[:10000].values)+'.jpg')))","756dfacf":"## PatientID","1fd640e1":"## Image view","d955d028":"## Label analys","d223ea45":"## Size of all image","441e8e91":" ## Please upvote if it's interesting. \n # Update More"}}