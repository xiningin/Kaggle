{"cell_type":{"85377b0b":"code","30943158":"code","0831cdb3":"code","e26abe98":"code","9396e52d":"code","7eea2bc5":"code","99a08489":"code","0f7bea6f":"code","49e2786f":"code","f9ae3925":"code","f9352112":"code","a3f37aa5":"code","592957ad":"code","be3b50c9":"code","2f7635c8":"code","8270479f":"code","147ba624":"code","44824a68":"code","11926a03":"code","3563914d":"code","f7624796":"code","c15fd4b2":"code","df34bf8c":"code","5c3fac0f":"code","39fee024":"code","87d701c6":"code","a3bb1a52":"code","8d3ae96e":"code","80cf7e4e":"code","e3d66f0e":"code","e9fd2202":"code","cc20dd7b":"code","63e09ff9":"markdown","db73cb96":"markdown","6d195ac4":"markdown","7585124a":"markdown","19b67c42":"markdown","5b5512e4":"markdown","d299f215":"markdown","dca8cf86":"markdown","c18dcc86":"markdown","ce65e724":"markdown","9f775068":"markdown","d57adca1":"markdown","bf7bdcbe":"markdown","f3bf0832":"markdown","b14366bd":"markdown","0a40e340":"markdown","ac185cd0":"markdown","b3888b21":"markdown","a215cafe":"markdown","fedd2fc5":"markdown","bc132f46":"markdown","38ba35ab":"markdown","59b1a645":"markdown","fdf02307":"markdown"},"source":{"85377b0b":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nfrom sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\nfrom sklearn import svm\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import metrics\n%matplotlib inline","30943158":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","0831cdb3":"# Loading data\ndata = pd.read_csv(\"..\/input\/iris\/Iris.csv\")","e26abe98":"data.info()","9396e52d":"data.sample(5)","7eea2bc5":"# Drop Id column\ndata.drop(['Id'], axis=1, inplace=True)","99a08489":"# Iris types\ndata['Species'].unique()","0f7bea6f":"# The dataset is balanced\nclasses = data['Species']\nax = sns.countplot(x=classes, data=data)","49e2786f":"sns.pairplot(data, hue='Species')","f9ae3925":"# Correlation between variables\ncorr = data.corr()\nsns.heatmap(corr, annot= True);","f9352112":"# How length and width vary by species?\nplt.figure(figsize=(12,7))\nplt.subplot(2,2,1)\nsns.violinplot(x='Species',y='PetalLengthCm',data=data)\nplt.subplot(2,2,2)\nsns.violinplot(x='Species',y='PetalWidthCm',data=data)\nplt.subplot(2,2,3)\nsns.violinplot(x='Species',y='SepalLengthCm',data=data)\nplt.subplot(2,2,4)\nsns.violinplot(x='Species',y='SepalWidthCm',data=data)","a3f37aa5":"X = data.drop(['Species'], axis=1)\ny = data['Species'].values.reshape(-1, 1)\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.25, random_state=22\n    )","592957ad":"classes_test = pd.DataFrame(y_test.reshape(-1, 1))\nclasses_test[0].value_counts()","be3b50c9":"log_reg = LogisticRegression()\nlog_reg.fit(X_train, y_train.ravel())\nlog_reg_pred = log_reg.predict(X_test)","2f7635c8":"metrics.accuracy_score(log_reg_pred, y_test)","8270479f":"confusion_matrix = metrics.confusion_matrix(y_test, log_reg_pred)\nconfusion_matrix","147ba624":"lda = LinearDiscriminantAnalysis()\nlda.fit(X_train, y_train.ravel())\nlda_pred = lda.predict(X_test)","44824a68":"metrics.accuracy_score(lda_pred, y_test)","11926a03":"confusion_matrix = metrics.confusion_matrix(y_test, lda_pred)\nconfusion_matrix","3563914d":"qda = QuadraticDiscriminantAnalysis()\nqda.fit(X_train, y_train.ravel())\nqda_pred = qda.predict(X_test)","f7624796":"metrics.accuracy_score(lda_pred, y_test)","c15fd4b2":"confusion_matrix = metrics.confusion_matrix(y_test, qda_pred)\nconfusion_matrix","df34bf8c":"svc = svm.SVC()\nsvc.fit(X_train, y_train.ravel())\nsvc_pred = svc.predict(X_test)","5c3fac0f":"metrics.accuracy_score(svc_pred, y_test)","39fee024":"confusion_matrix = metrics.confusion_matrix(y_test, svc_pred)\nconfusion_matrix","87d701c6":"# Choose k\na_index=list(range(1,15))\na=pd.Series(dtype='float64')\nx=[1,2,3,4,5,6,7,8,9,10, 11, 12, 13, 14]\nfor i in list(range(1,15)):\n    KNNmodel=KNeighborsClassifier(n_neighbors=i) \n    KNNmodel.fit(X_train,y_train.ravel())\n    KNNprediction=KNNmodel.predict(X_test)\n    a=a.append(pd.Series(metrics.accuracy_score(KNNprediction,y_test)))\nplt.plot(a_index, a)\nplt.xticks(x)","a3bb1a52":"knn = KNeighborsClassifier(n_neighbors=7)\nknn.fit(X_train, y_train.ravel())\nknn_pred = knn.predict(X_test)","8d3ae96e":"metrics.accuracy_score(knn_pred, y_test)","80cf7e4e":"confusion_matrix = metrics.confusion_matrix(y_test, svc_pred)\nconfusion_matrix","e3d66f0e":"dtc = DecisionTreeClassifier()\ndtc.fit(X_train, y_train.ravel())\ndtc_pred = dtc.predict(X_test)","e9fd2202":"metrics.accuracy_score(dtc_pred, y_test)","cc20dd7b":"confusion_matrix = metrics.confusion_matrix(y_test, dtc_pred)\nconfusion_matrix","63e09ff9":"The logistic regression model has good precision and its confusion matrix shows that the confusion occurs at the level of Iris-versicolor and Iris-virginica.","db73cb96":"According to this magnificent result thanks to the Seaborn library, PetalLength and PetalWidth give a better division of the classes compared to SepalLength and SepalWidth (in particular the SepalWidth variable see the second figure on the diagonal). This is an indication that the petals can help with better and accurate predictions than the sepals. Likewise, we observe that the Iris-setosa class is linearly separable from the other two classes, which is not the case for Iris-versicolor and Iris-verginica. Therefore, if the test dataset contains a larger number of the Iris-setosa class than the other two, the model gives high precision! We must therefore be careful.","6d195ac4":"### Exploratory data analysis","7585124a":"### Linear discriminant analysis","19b67c42":"The **violinplot** shows the density of length and width in the species. The thinner part indicates there is less density while the thicker part indicates higher density.","5b5512e4":"According to the two commands data.info () and data.sample (5): the dataset contains 150 samples (very small which is not good for machine learning) and 6 columns. The Id column is unnecessary.","d299f215":"### Support vector machine SVM","dca8cf86":"The same result of logistic regression","c18dcc86":"### Conclusion\nThe best model for this problem is **Linear or Qudratic Discriminant Analysis**.","ce65e724":"### K-nearest neighbors method","9f775068":"### Dataset splitting Train\/Test","d57adca1":"### Quadratic discriminant analysis","bf7bdcbe":"SepalWidthCm has no correlation with the other variables. In addition, PetalLengthCm and PetalWidthCm are strongly correlated and have a strong correlation with SepalLengthCm. So ignoring the width of the sepals can improve the accuracy of the model.","f3bf0832":"### Logistic regression","b14366bd":"### Import libraries","0a40e340":"So the decision tree is not the right solution.","ac185cd0":"Excellent!","b3888b21":"Better than logistic regression","a215cafe":"Excellent!","fedd2fc5":"![Texte alternatif\u2026](https:\/\/raw.githubusercontent.com\/saidRaiss\/dataset\/master\/iris_types.jpeg)","bc132f46":"### Dataset description\nThe Iris dataset was first used in Ronald Aylmer Fisher's classic article 1936 ([The Use of Multiple Measurements in Taxonomic Problems](https:\/\/onlinelibrary.wiley.com\/doi\/abs\/10.1111\/j.1469-1809.1936.tb02137.x))\n\nIt includes three species of iris with 50 samples of each type as well as some properties of each flower. One flower species is linearly separable from the other two, but the other two are not linearly separable from each other.\n\nThe columns in this dataset are:\n1. Id\n2. SepalLengthCm\n3. SepalWidthCm \n4. PetalLengthCm \n5. PetalWidthCm \n6. Species (les classes)\n\n![Texte alternatif\u2026](https:\/\/raw.githubusercontent.com\/saidRaiss\/dataset\/master\/iris_flower.jpg)\n","38ba35ab":"### Dataset","59b1a645":"### Decision tree\n","fdf02307":"Okay, the dataset is almost balanced with less of the Iris-setosa species."}}