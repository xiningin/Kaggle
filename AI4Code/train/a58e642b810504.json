{"cell_type":{"5e80b202":"code","9c5917cd":"code","f3c12e88":"code","1482cdc4":"code","f11e724e":"code","0bc2e12d":"code","5f332760":"code","be2c8a52":"code","7eff363e":"code","8c3fcdc5":"code","898cf7ef":"code","3f223df4":"code","0d690b54":"markdown","354af086":"markdown"},"source":{"5e80b202":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n","9c5917cd":"data=pd.read_csv(\"..\/input\/oranges-vs-grapefruit\/citrus.csv\")\ndata","f3c12e88":"data.info()","1482cdc4":"data.describe()","f11e724e":"print(data[\"name\"].unique())\nprint(\" \")\nprint(data[\"name\"].value_counts())","0bc2e12d":"def preprocessing (df):\n    df=df.copy()\n    \n    #splitting\n    y=df[\"name\"].copy()\n    X=df.drop(\"name\",axis=1).copy()\n    \n    #Scalling\n    scaler=StandardScaler()\n    X=scaler.fit_transform(X)\n\n    #training\n    X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.7,shuffle=0,random_state=123)\n    \n    return X_train,X_test,y_train,y_test","5f332760":"X_train,X_test,y_train,y_test=preprocessing(data)","be2c8a52":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.tree import DecisionTreeClassifier","7eff363e":"model_1=LogisticRegression()\nmodel_1.fit(X_train,y_train)\nprint(\"Model score value is :\",model_1.score(X_test,y_test)*100)\n\ny_pred=model_1.predict(X_test)\n\n# Evaluvation metric\n\nfrom sklearn.metrics import classification_report,confusion_matrix\ncm=confusion_matrix(y_pred,y_test)\nsns.heatmap(cm,annot=True)\n\nclr=classification_report(y_pred,y_test)\nprint(clr)","8c3fcdc5":"model=DecisionTreeClassifier()\nmodel.fit(X_train,y_train)\nprint(\"Model score value is :\",model.score(X_test,y_test)*100)\n\ny_pred=model.predict(X_test)\n\n# Evaluvation metric\n\nfrom sklearn.metrics import classification_report,confusion_matrix\ncm=confusion_matrix(y_pred,y_test)\nsns.heatmap(cm,annot=True)\n\nclr=classification_report(y_pred,y_test)\nprint(clr)","898cf7ef":"model_2=RandomForestClassifier()\nmodel_2.fit(X_train,y_train)\nprint(\"Model score value is :\",model_2.score(X_test,y_test)*100)\n\ny_pred=model_2.predict(X_test)\n\n# Evaluvation metric\n\nfrom sklearn.metrics import classification_report,confusion_matrix\ncm=confusion_matrix(y_pred,y_test)\nsns.heatmap(cm,annot=True)\n\nclr=classification_report(y_pred,y_test)\nprint(clr)","3f223df4":"model_3=GradientBoostingClassifier()\nmodel_3.fit(X_train,y_train)\nprint(\"Model score value is :\",model_3.score(X_test,y_test)*100)\n\ny_pred=model_3.predict(X_test)\n\n# Evaluvation metric\n\nfrom sklearn.metrics import classification_report,confusion_matrix\ncm=confusion_matrix(y_pred,y_test)\nsns.heatmap(cm,annot=True)\n\nclr=classification_report(y_pred,y_test)\nprint(clr)","0d690b54":"# Preprocessing\n","354af086":"# Oranges vs. Grapefruit\n\nThe task of separating oranges and grapefruit is fairly obvious to a human, but even with manual observation there is still a bit of error. This dataset takes the color, weight, and diameter of an \"average\" orange and grapefruit and generates a larger dataset containing a wide variety of values and are \"oranges\" and \"grapefruit\"."}}