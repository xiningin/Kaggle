{"cell_type":{"6e38435c":"code","ae8d549c":"code","a51eb6f2":"code","7f8ac01b":"code","12af1532":"code","272d94bb":"code","689065de":"code","6bf00acd":"code","f43d3788":"code","524e4e3a":"code","04af324e":"code","e6368353":"code","e19ae630":"code","03654876":"code","619f594a":"code","6b5ee046":"code","d576c89a":"code","514287f0":"code","d17e7ce1":"code","d06c2bf5":"code","716b3f6d":"code","471fad3a":"code","6c31ae63":"code","a42d5298":"code","e494e9cd":"code","f5449669":"markdown","c861446b":"markdown","ea0b27c6":"markdown","546f8ad5":"markdown","604a5a89":"markdown","94053478":"markdown","17f195f4":"markdown","47e69d2b":"markdown","f16b9a5c":"markdown","92404c04":"markdown","f0fe3bd3":"markdown","6e9cc0cf":"markdown","7f433cd3":"markdown","6a2039ad":"markdown","13e48828":"markdown","f1377eda":"markdown","bf91d7c0":"markdown","e5fa8e9a":"markdown","dc48cdea":"markdown","2840154b":"markdown","ee21bd0d":"markdown","5fa8819d":"markdown","8b802540":"markdown","08f22f41":"markdown","482e336d":"markdown","23c0b4a2":"markdown","4757ecc7":"markdown"},"source":{"6e38435c":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline ","ae8d549c":"customers=pd.read_csv('..\/input\/ecommerce-customers\/Ecommerce Customers.csv')","a51eb6f2":"customers.head()","7f8ac01b":"customers.info()","12af1532":"customers.describe()","272d94bb":"sns.set_palette(\"GnBu_d\")\nsns.set_style('whitegrid')","689065de":"sns.jointplot(x='Time on Website',y='Yearly Amount Spent',data=customers)","6bf00acd":"sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=customers)","f43d3788":"sns.jointplot(x='Time on App',y='Length of Membership',kind='hex',data=customers)","524e4e3a":"sns.pairplot(customers)","04af324e":"# Length of Membership ","e6368353":"sns.lmplot(x='Length of Membership',y='Yearly Amount Spent',data=customers)","e19ae630":"y = customers['Yearly Amount Spent']","03654876":"X = customers[['Avg. Session Length', 'Time on App','Time on Website', 'Length of Membership']]","619f594a":"from sklearn.model_selection import train_test_split","6b5ee046":"X_train,X_test,y_train,y_test=train_test_split(X,y, test_size=0.3 ,random_state=101)","d576c89a":"from sklearn.linear_model import LinearRegression","514287f0":"lm=LinearRegression()","d17e7ce1":"lm.fit(X_train,y_train)","d06c2bf5":"print('Coefficients: \\n', lm.coef_)","716b3f6d":"predictions = lm.predict( X_test)","471fad3a":"plt.scatter(y_test,predictions)\nplt.xlabel('Y Test')\nplt.ylabel('Predicted Y')","6c31ae63":"from sklearn import metrics\n\nprint('MAE:', metrics.mean_absolute_error(y_test, predictions))\nprint('MSE:', metrics.mean_squared_error(y_test, predictions))\nprint('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))","a42d5298":"sns.distplot((y_test-predictions),bins=50);","e494e9cd":"coeffecients = pd.DataFrame(lm.coef_,X.columns)\ncoeffecients.columns = ['Coeffecient']\ncoeffecients","f5449669":"**Let's explore these types of relationships across the entire data set. Use pairplot to recreate the plot below.**","c861446b":"# Ecommerce Customers-Linear Regression","ea0b27c6":"# Training and Testing Data\n\nlet's go ahead and split the data into training and testing sets.\n** Set a variable X equal to the numerical features of the customers and a variable y equal to the \"Yearly Amount Spent\" column. **","546f8ad5":"# Exploratory Data Analysis\n\n**Let's explore the data!**\n_\n**Use seaborn to create a jointplot to compare the Time on Website and Yearly Amount Spent columns. Does the correlation make sense?**","604a5a89":"** Create a scatterplot of the real test values versus the predicted values. **","94053478":"** Use jointplot to create a 2D hex bin plot comparing Time on App and Length of Membership.**","17f195f4":"# Get the Data\n\nWe'll work with the Ecommerce Customers csv file from the company. It has Customer info, such as Email, Address, and their color Avatar. Then it also has numerical value columns:\n\n* Avg. Session Length: Average session of in-store style advice sessions.\n* Time on App: Average time spent on App in minutes\n* Time on Website: Average time spent on Website in minutes\n* Length of Membership: How many years the customer has been a member. \n\n** Read in the Ecommerce Customers csv file as a DataFrame called customers.**","47e69d2b":"**Based off this plot what looks to be the most correlated feature with Yearly Amount Spent?**","f16b9a5c":"An Ecommerce company based in New York City that sells clothing online but they also have in-store style and clothing advice sessions. Customers come in to the store, have sessions\/meetings with a personal stylist, then they can go home and order either on a mobile app or website for the clothes they want.\n\nThe company is trying to decide whether to focus their efforts on their mobile app experience or their website. Lets's figure it out! <br\/>Let's get started!","92404c04":"** Use model_selection.train_test_split from sklearn to split the data into training and testing sets.**","f0fe3bd3":"**Do you think the company should focus more on their mobile app or on their website?**","6e9cc0cf":"** Do the same but with the Time on App column instead. **","7f433cd3":"**Create a linear model plot (using seaborn's lmplot) of  Yearly Amount Spent vs. Length of Membership. **","6a2039ad":"** How can you interpret these coefficients? **","13e48828":"**Check the head of customers, and check out its info() and describe() methods.**","f1377eda":"# Predicting Test Data\nNow that we have fit our model, let's evaluate its performance by predicting off the test values!\n\n** Use lm.predict() to predict off the X_test set of the data.**","bf91d7c0":"# Training the Model\n\nNow its time to train our model on our training data!\n\n** Import LinearRegression from sklearn.linear_model **","e5fa8e9a":"# Evaluating the Model\n\nLet's evaluate our model performance by calculating the residual sum of squares and the explained variance score (R^2).\n\n** Calculate the Mean Absolute Error, Mean Squared Error, and the Root Mean Squared Error.","dc48cdea":"Interpreting the coefficients:\n\n    Holding all other features fixed, a 1 unit increase in Avg. Session Length is associated with an increase of 25.98 total dollars spent.\n    Holding all other features fixed, a 1 unit increase in Time on App is associated with an increase of 38.59 total dollars spent.\n    Holding all other features fixed, a 1 unit increase in Time on Website is associated with an increase of 0.19 total dollars spent.\n    Holding all other features fixed, a 1 unit increase in Length of Membership is associated with an increase of 61.27 total dollars spent.","2840154b":"**Print out the coefficients of the model**","ee21bd0d":"This is tricky, there are two ways to think about this: Develop the Website to catch up to the performance of the mobile app, or develop the app more since that is what is working better. This sort of answer really depends on the other factors going on at the company, You would probably want to explore the relationship between Length of Membership and the App or the Website before coming to a conclusion!","5fa8819d":"Model is Done!!!","8b802540":"# Residuals\n\nWe have gotten a very good model with a good fit. Let's quickly explore the residuals to make sure everything was okay with our data. \n\n**Plot a histogram of the residuals and make sure it looks normally distributed. Use either seaborn distplot, or just plt.hist().**","08f22f41":"**Create an instance of a LinearRegression() model named lm.**","482e336d":"# Imports\nImport pandas, numpy, matplotlib,and seaborn. Then set %matplotlib inline ","23c0b4a2":"X_train.shape<br\/>\nX_train.reshape(-1,1)<br\/>\n** Train\/fit lm on the training data.**","4757ecc7":"# Conclusion\nWe still want to figure out the answer to the original question, do we have to focus our effort on mobile app or website development? Or maybe that doesn't even really matter, and Membership Time is what is really important. Let's see if we can interpret the coefficients at all to get an idea.\n\n** Recreate the dataframe below. **"}}