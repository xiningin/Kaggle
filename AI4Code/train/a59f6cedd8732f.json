{"cell_type":{"4e10b53f":"code","73033b17":"code","f1eca028":"code","76eeff92":"code","173374b3":"code","b8fb2c67":"code","1b524f59":"code","d71f9254":"code","fa542588":"code","2db7bcc9":"code","133425eb":"code","edbda6bd":"code","c808d100":"code","14fdeef4":"code","3553aacf":"code","2b5a8a39":"code","e93231d4":"code","07e03ee3":"code","2735dd2e":"code","fdd7e868":"code","4aa78ac7":"code","9f4880b5":"code","bb124143":"code","50dd916e":"code","40f2a4f1":"code","5dc2e896":"code","4fda0ca3":"code","3b714260":"code","9f482732":"code","14bb140c":"code","8f9e4488":"code","60ee308b":"code","52dccbe0":"code","aae82855":"code","4a3e7f6b":"code","d9d3d696":"code","f3a3ef9c":"code","d599df1c":"code","6434d7d1":"code","00a1625c":"code","1a405c23":"code","e607d8f4":"code","32dbe5f5":"code","21424905":"code","2c165bee":"code","69052c6d":"code","7637a271":"code","702b03a1":"code","dbdb9f31":"code","7b084a5e":"code","9b7f43bd":"code","da4bcaac":"code","c63a3983":"code","507d6b6c":"code","4046e3dd":"markdown","16f6d62e":"markdown","2eec53d6":"markdown","12aa40f9":"markdown","ba6e6dce":"markdown","b6469b9d":"markdown","a47d5370":"markdown","c8623fa2":"markdown","1c166793":"markdown","4e3e805e":"markdown","9ed20fe6":"markdown","88d2d4e3":"markdown","2223481b":"markdown","37531c0b":"markdown","0d03a4fa":"markdown","672976d3":"markdown","fca08c7f":"markdown","4ac90bfc":"markdown","f49e8b26":"markdown","3ff62f78":"markdown","aa8dd83f":"markdown","c5072c6f":"markdown"},"source":{"4e10b53f":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sea\nsea.set_style('whitegrid')","73033b17":"from sklearn.preprocessing import LabelEncoder,PowerTransformer","f1eca028":"df_train=pd.read_csv(\"..\/input\/titanic\/train.csv\")\ndf_test=pd.read_csv(\"..\/input\/titanic\/test.csv\")\nID_test=df_test['PassengerId']","76eeff92":"df_train.head()","173374b3":"sea.countplot(df_train['SibSp'])","b8fb2c67":"df_train['SibSp'].value_counts()","1b524f59":"df_train.sort_values(by=['SibSp'],ascending=False).head(10)","d71f9254":"outliner_SibSp=df_train.loc[df_train['SibSp']==8]\noutliner_SibSp","fa542588":"df_train=df_train.drop(outliner_SibSp.index,axis=0)","2db7bcc9":"df_train.loc[df_train['SibSp']==8]","133425eb":"sea.boxplot(df_train['Fare'],orient='v')","edbda6bd":"df_train.sort_values(by=['Fare','Pclass'],ascending=False).head(10)","c808d100":"outliner_Fare=df_train.loc[df_train['Fare']>500]\noutliner_Fare","14fdeef4":"df_train=df_train.drop(outliner_Fare.index,axis=0)","3553aacf":"df_train.shape","2b5a8a39":"df_test.shape","e93231d4":"dataset=pd.concat([df_train,df_test],ignore_index=True)","07e03ee3":"dataset.head()","2735dd2e":"dataset.shape","fdd7e868":"dataset=dataset.fillna(np.nan)\ndataset.isnull().sum()","4aa78ac7":"dataset.loc[dataset['Embarked'].isnull()]","9f4880b5":"sea.countplot(dataset['Embarked'])","bb124143":"dataset['Embarked']=dataset['Embarked'].fillna('S')","50dd916e":"dataset.loc[dataset['Fare'].isnull()]","40f2a4f1":"dataset.loc[(dataset['Pclass']==3)].sort_values(by=['Fare'],ascending=False).head(15)","5dc2e896":"temp=dataset.loc[(dataset['Pclass']==3) & (dataset['Parch']==0) & (dataset['SibSp']==0) & (dataset['Fare']>0)].sort_values(by=['Fare'],ascending=False)\ntemp.head()","4fda0ca3":"dataset['Fare']=dataset['Fare'].fillna(temp['Fare'].mean())","3b714260":"g= sea.FacetGrid(df_train,col='Survived')\ng= g.map(sea.distplot,'Age')","9f482732":"nullAgeSubset=dataset.loc[dataset['Age'].isnull()]\nnullAgeSubset.shape","14bb140c":"for index in nullAgeSubset.index:\n    ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])&(dataset['Embarked']==nullAgeSubset.loc[index]['Embarked'])&(dataset['Sex']==nullAgeSubset.loc[index]['Sex'])].mean()\n    if(ageSubsetMean>0):\n        dataset['Age'].loc[index]=ageSubsetMean\n    else:\n        ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])&(dataset['Embarked']==nullAgeSubset.loc[index]['Embarked'])].mean()\n        if(ageSubsetMean>0):\n            dataset['Age'].loc[index]=ageSubsetMean\n        else:\n            ageSubsetMean=dataset['Age'].loc[(dataset['Parch']==nullAgeSubset.loc[index]['Parch'])&(dataset['SibSp']==nullAgeSubset.loc[index]['SibSp'])&(dataset['Pclass']==nullAgeSubset.loc[index]['Pclass'])].mean()\n            if(ageSubsetMean>0):\n                dataset['Age'].loc[index]=ageSubsetMean\n            else:\n                dataset['Age'].loc[index]=dataset['Age'].mean()\n                ","8f9e4488":"dataset['Age'].isnull().sum()","60ee308b":"sea.heatmap(df_train.corr(),cmap='BrBG',annot=True)","52dccbe0":"sea.countplot(dataset['Sex'],hue=dataset['Survived'])","aae82855":"sea.catplot(data=dataset,x='Pclass',y='Survived',kind='bar')","4a3e7f6b":"g=sea.FacetGrid(data=dataset.loc[dataset['Survived']==1],col='Pclass')\ng=g.map(sea.countplot,'Sex')","d9d3d696":"dataset.head()","f3a3ef9c":"sea.distplot(np.array(dataset['Fare']).reshape(-1,1),axlabel='Fare')","d599df1c":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Fare']).reshape(-1,1)),axlabel='Fare')","6434d7d1":"sea.distplot(np.array(dataset['Age']).reshape(-1,1),axlabel='Age')","00a1625c":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Age']).reshape(-1,1)),axlabel='Age')","1a405c23":"sea.distplot(np.array(dataset['SibSp']).reshape(-1,1),axlabel='SibSp')","e607d8f4":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['SibSp']).reshape(-1,1)),axlabel='SibSp')","32dbe5f5":"sea.distplot(np.array(dataset['Parch']).reshape(-1,1),axlabel='Parch')","21424905":"sea.distplot(PowerTransformer().fit_transform(np.array(dataset['Parch']).reshape(-1,1)),axlabel='Parch')","2c165bee":"X=dataset.drop(['Cabin','Name','PassengerId','Survived','Ticket'],axis=1)\nY=dataset['Survived']","69052c6d":"X.head(10)","7637a271":"X['Age']=PowerTransformer().fit_transform(np.array(X['Age']).reshape(-1,1))\nX['Fare']=PowerTransformer().fit_transform(np.array(X['Fare']).reshape(-1,1))\nX['Parch']=PowerTransformer().fit_transform(np.array(X['Parch']).reshape(-1,1))\nX['Sex']=LabelEncoder().fit_transform(X['Sex'])\nX['SibSp']=PowerTransformer().fit_transform(np.array(X['SibSp']).reshape(-1,1))\ndummyPclass=pd.get_dummies(X['Pclass'],prefix='Pclass')\ndummyEmbarked=pd.get_dummies(X['Embarked'],prefix='Embarked')\nX=pd.concat([X.drop(['Pclass','Embarked'],axis=1),dummyPclass,dummyEmbarked],axis=1)","702b03a1":"X.head(15)","dbdb9f31":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.svm import SVC\nfrom xgboost import XGBClassifier","7b084a5e":"X_pro=PolynomialFeatures(degree=2).fit_transform(X)","9b7f43bd":"trainDataX=X_pro[:df_train.shape[0]]\ntrainDataY=Y[:df_train.shape[0]].astype('int32')\ntestDataX=X_pro[df_train.shape[0]:]","da4bcaac":"X_train,X_test,Y_train,Y_test=train_test_split(trainDataX,trainDataY,test_size=0.1,random_state=47)","c63a3983":"model=XGBClassifier(learning_rate=0.001,n_estimators=300,max_depth=30)\n#model=SVC(kernel='poly',C=100,gamma=0.1)\nmodel.fit(X_train,Y_train)\naccuracy_score(Y_train,model.predict(X_train))","507d6b6c":"accuracy_score(Y_test,model.predict(X_test))","4046e3dd":"** Replace the missing values of Age column with entries with similar other parameters Else replace with mean age of dataset **","16f6d62e":"**Above analysis shows that survival count of female is more the male irrespective of class **","2eec53d6":"** After removal of outliners now we can merge the train and test dataset to fill the missing values**","12aa40f9":"**Finally do all the transformation needed**\n\nNormally ditribute the Age,Fare,Parch,SibSp\n\nLabel Encode the Sex\n\nCreate dummy columns for values for Embarked and Pclass","ba6e6dce":"Similarly for Parch column","b6469b9d":"** 2 Entries of Emabarked Column have Null Value **","a47d5370":"** Now lets analyze the available \"Age\" data**","c8623fa2":"Now it looks normalized.","1c166793":"** Check if any remaining null value for age **","4e3e805e":"** Fill the missing Embarked Value with the most frequent one i.e 'S' **","9ed20fe6":"**Removal Of Outliners**","88d2d4e3":"** Get data of Passengers with Pclass=3 having 0 Parch and 0 SibSp, simliar to the requirement(fare null value) **","2223481b":"Similarly for Age column","37531c0b":"Its hightly skewed so we will apply normal distribution to it.","0d03a4fa":"** Age is the not very much determining factor for Survival prediction.**\n\n** But it seems that passengers with young age have more chance of survival **\n\n** Age data is also skewed so need logarithmic transformation **\n","672976d3":"Lets see distribution of Fare","fca08c7f":"** 3 entries have very high Fare **","4ac90bfc":"Similarly for SibSp column","f49e8b26":"**7 entries have abnormally high SibSp value**","3ff62f78":"** Fare have no relation with age,sex but varies with number of passengers with same same ticket number **","aa8dd83f":"** First class people have more count of survival **","c5072c6f":"** Replace Fare null value with mean value of above subset **"}}