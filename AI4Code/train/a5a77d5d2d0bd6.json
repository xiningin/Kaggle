{"cell_type":{"92390395":"code","20b50fca":"code","ae8f3622":"code","fa34e9fa":"code","abca6265":"code","3a783322":"code","e7eb95e2":"code","dbd02c9a":"code","506bbf14":"code","a0a20098":"code","9287e9a7":"code","6127c7e7":"code","e2d22ecc":"code","e4f565c3":"code","de024b60":"code","f3aeb3b8":"code","834a4ad9":"code","7ea04955":"markdown","aa10a1d8":"markdown","76f68a99":"markdown","96296940":"markdown","2f14e3eb":"markdown","7c694729":"markdown"},"source":{"92390395":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')","20b50fca":"train = pd.read_csv('..\/input\/of-genomes-and-genetics-hackerearth-ml-challenge\/train.csv')\ntest = pd.read_csv('..\/input\/of-genomes-and-genetics-hackerearth-ml-challenge\/test.csv')\npd.set_option(\"display.max_rows\", None)","ae8f3622":"train.info()","fa34e9fa":"train.describe().T","abca6265":"# Null values\ntrain.isna().sum()","3a783322":"train.drop(['Patient Id', 'Patient First Name', 'Family Name', \"Father's name\",\n           'Institute Name', 'Institute Name', 'Location of Institute', 'Status', 'Place of birth',\n           ], axis = 1, inplace = True)\n\ntrain = train.rename(columns = {'Patient Age':'Patient_Age', \"Genes in mother's side\":\"Genes_in_mothers_side\",\n            'Inherited from father':'Inherited_from_father',\n            'Maternal gene':'Maternal_gene', 'Paternal gene':'Paternal_gene',\n            'Blood cell count (mcL) ':'Blood_cell_count', \"Father's age\":'Fathers_age', \"Mother's age\":'Mothers_age',\n            'Respiratory Rate (breaths\/min)':'Respiratory_Rate', 'Heart Rate (rates\/min':'Heart_Rate',\n            'Test 1':'Test_1', 'Test 2':'Test_2', 'Test 3':'Test_3',\n            'Test 4':'Test_4', 'Test 5':'Test_5', 'Parental consent': 'Parental_consent', 'Follow-up':'Follow_up', \n             'Birth asphyxia':'Birth_asphyxia',\n             'Autopsy shows birth defect (if applicable)': 'Autopsy_shows_birth_defect', \n             'Folic acid details (peri-conceptional)':'Folic_acid_details', \n            'H\/O serious maternal illness':'HO_serious_maternal_illness',\n            'H\/O radiation exposure (x-ray)':'HO_radiation_exposure', 'H\/O substance abuse':'HO_substance_abuse',\n            'Assisted conception IVF\/ART':'Assisted_conception_IVFART', \n            'History of anomalies in previous pregnancies':'History_of_anomalies_in_previous_pregnancies',\n            'No. of previous abortion':'No_of_previous_abortion', 'Birth defects':'Birth_defects', \n            'White Blood cell count (thousand per microliter)':'White_Blood_cell_count', \n            'Blood test result':'Blood_test_result',\n            'Symptom 1':'Symptom_1', 'Symptom 2':'Symptom_2', 'Symptom 3':'Symptom_3', 'Symptom 4':'Symptom_4', \n            'Symptom 5':'Symptom_5',\n            'Genetic Disorder':'Genetic_Disorder', 'Disorder Subclass':'Disorder_Subclass', \n            'Blood cell count (mcL)': 'Blood_cell_count'})","e7eb95e2":"sns.displot(x = 'Patient_Age', data = train);","dbd02c9a":"sns.displot(x = 'Mothers_age', data = train);","506bbf14":"sns.displot(x = 'Fathers_age', data = train);","a0a20098":"plt.figure(figsize=(12, 4))\nsns.countplot(x = 'Genetic_Disorder', data = train);","9287e9a7":"labels1 = 'Mitochondrial genetic inheritance disorders', 'Single-gene inheritance diseases', 'Multifactorial genetic inheritance disorders'\nexplode1 = (0, 0, 0)\n\nplt.pie(train.Genetic_Disorder.value_counts(), explode=explode1, labels=labels1, autopct='%1.1f%%',\n        shadow=True, startangle=90);\n","6127c7e7":"plt.figure(figsize=(18, 6))\nsns.countplot(x = 'Disorder_Subclass', data = train);","e2d22ecc":"#visualizing in Pie chart\nlabels2 = 'Leigh syndrome', 'Mitochondrial myopathy', 'Cystic fibrosis', 'Tay-Sachs', 'Diabetes', 'Hemochromatosis', \"Leber's hereditary optic neuropathy\", \"Alzheimer's\", 'Cancer'\nexplode2 = (0, 0, 0, 0, 0, 0, 0, 0.3, 0.5)\n\nplt.pie(train.Disorder_Subclass.value_counts(), explode=explode2, labels=labels2, autopct='%1.1f%%',\n        shadow=True, startangle=30);","e4f565c3":"cols  = ['Genes_in_mothers_side', 'Inherited_from_father', 'Maternal_gene', 'Paternal_gene', \n         'Follow_up', 'Gender', 'Birth_asphyxia', 'Autopsy_shows_birth_defect', 'Folic_acid_details', 'HO_serious_maternal_illness',\n         'HO_radiation_exposure', 'HO_substance_abuse', 'Assisted_conception_IVFART', 'Birth_defects']\n\nplt.style.use('seaborn-dark')\nfig, ax = plt.subplots(len(cols),  figsize = (15, 45), constrained_layout = True)\n\nfor i, var in enumerate(cols): \n    sns.countplot(data = train, x = var, hue = 'Genetic_Disorder', ax = ax[i], linewidth = 1.5)\n    ax[i].set_ylabel(var)\n    ax[i].set_xlabel(None)","de024b60":"symptom  = ['Symptom_1', 'Symptom_3', 'Symptom_3', 'Symptom_4', 'Symptom_5']\n\nfig, ax = plt.subplots(len(symptom),  figsize = (13, 18), constrained_layout = True)\n\nfor i, var in enumerate(symptom): \n    sns.countplot(data = train, x = var, hue = 'Genetic_Disorder', ax = ax[i], linewidth = 1.5)\n    ax[i].set_ylabel(var)\n    ax[i].set_xlabel(None)","f3aeb3b8":"cols  = ['Genes_in_mothers_side', 'Inherited_from_father', 'Maternal_gene', 'Paternal_gene', \n         'Follow_up', 'Gender', 'Birth_asphyxia', 'Autopsy_shows_birth_defect', 'Folic_acid_details', 'HO_serious_maternal_illness',\n         'HO_radiation_exposure', 'HO_substance_abuse', 'Assisted_conception_IVFART', 'Birth_defects']\n\nfig, ax = plt.subplots(len(cols),  figsize = (18, 50), constrained_layout = True)\n\nfor i, var in enumerate(cols): \n    sns.countplot(data = train, x = var, hue = 'Disorder_Subclass', ax = ax[i], linewidth = 1.5)\n    ax[i].set_ylabel(var)\n    ax[i].set_xlabel(None)","834a4ad9":"symptom  = ['Symptom_1', 'Symptom_3', 'Symptom_3', 'Symptom_4', 'Symptom_5']\n\nfig, ax = plt.subplots(len(symptom),  figsize = (15, 20), constrained_layout = True)\n\nfor i, var in enumerate(symptom): \n    sns.countplot(data = train, x = var, hue = 'Disorder_Subclass', ax = ax[i], linewidth = 1.5)\n    ax[i].set_ylabel(var)\n    ax[i].set_xlabel(None)","7ea04955":"# Preprocessing","aa10a1d8":"Descriptive statistics of our train set","76f68a99":"Let's print a concise summary of our train DataFrame.","96296940":"# Import Section","2f14e3eb":"## If you like this notebook don't foeget to upvote. Thanks","7c694729":"# EDA"}}