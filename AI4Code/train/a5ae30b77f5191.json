{"cell_type":{"dba2cedd":"code","29c7adb1":"code","516c519c":"code","c18a46f8":"code","c728c6e6":"code","1ff27ec7":"code","040957e6":"code","4285e1a5":"code","a8432426":"code","4a6a446d":"code","2882fa60":"code","10abc6b9":"code","d30f14b9":"code","b5faf643":"code","c76bc0ee":"code","6e873075":"code","49ae5db9":"code","24758e4a":"code","c2aba2a2":"code","43adcd43":"code","8dfa1cb3":"code","e0f5802d":"code","80805e06":"code","cd26b154":"code","f85bcaff":"code","654fb102":"code","1d693ab0":"code","7437e0dc":"code","46853d83":"code","866f0b3a":"code","c335536b":"code","bc1c3bf2":"code","96855a09":"code","cf84a7b2":"code","c25b53f4":"code","3217d3f0":"code","d7fff5bf":"code","d4645c27":"code","e0c68ccc":"code","27ddc3c0":"code","456be12b":"markdown","f286501b":"markdown","b8dab924":"markdown","da08926a":"markdown","fdd9127d":"markdown","3d71823f":"markdown","4695ada2":"markdown","01e6822a":"markdown","6a881200":"markdown","2ea5d4a6":"markdown","f19d8356":"markdown","bed6b2a2":"markdown","8e41670d":"markdown","51cd46cb":"markdown","ea1296c8":"markdown","1583cc03":"markdown","70ca8a86":"markdown","bdafd9d8":"markdown","dcba872c":"markdown","338360db":"markdown","a5f0dd4e":"markdown","18ac5fc6":"markdown","0c04340c":"markdown","ea2b8da9":"markdown","cd395a62":"markdown","5cd734cd":"markdown","fcc36150":"markdown","ca49ae85":"markdown","6b50f07d":"markdown","d46314a2":"markdown","f00dc939":"markdown","cbf58528":"markdown","0d4bc8b3":"markdown","dbf362da":"markdown","0a8b5036":"markdown","8645e255":"markdown","83ecd2a6":"markdown","cc326450":"markdown","f5cffff1":"markdown","3584ea55":"markdown","6a0f6f02":"markdown","02fba64d":"markdown","c3e47e21":"markdown","89944ae1":"markdown","b9096701":"markdown","2a72ec78":"markdown","f8f5e345":"markdown","c0b18b17":"markdown","3347206e":"markdown"},"source":{"dba2cedd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\nfrom plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\nfrom PIL import Image\nfrom wordcloud import WordCloud, ImageColorGenerator\n\ninit_notebook_mode(connected=True)","29c7adb1":"df = pd.read_csv(\"..\/input\/all-space-missions-from-1957\/Space_Corrected.csv\")\ndf.head()","516c519c":"df.drop(['Unnamed: 0','Unnamed: 0.1'],axis=1,inplace=True)","c18a46f8":"companies = df.groupby(['Company Name'])['Detail'].count().sort_values(ascending=False).reset_index()\nlen(companies)","c728c6e6":"bar = px.bar(companies[::-1],x='Detail',y='Company Name',labels={'Detail':'No of Missions'})\nbar.update_layout(title=\"Company and total missions\")\nbar.show()","1ff27ec7":"plt.figure(figsize=(25,7))\nbar = sns.barplot(x='Company Name',y='Detail',data=companies[1:],palette='rocket')\nb = bar.set_xticklabels(bar.get_xticklabels(), rotation=30, horizontalalignment='right')\nplt.ylabel('No of launches')\nt=plt.title('Comapany vs launches')","040957e6":"df['Country'] = df['Location'].apply(lambda x:x.split(',')[-1])\ndf['year'] = df['Datum'].apply(lambda x:x.split()[3])","4285e1a5":"year_wise = df.groupby(['Company Name','year']).count()['Detail'].reset_index()\nyear_wise = year_wise[year_wise['Company Name'].isin(companies['Company Name'][:20])]\n\nfig = go.Figure(data=go.Heatmap(\n        z=year_wise['Detail'],\n        x=year_wise['year'],\n        y=year_wise['Company Name'],\n        colorscale='Viridis'))\n\nfig.update_layout(\n    title='Company wise launches  per year',\n    xaxis_nticks=36)\n\nfig.show()\n","a8432426":"\nstatus = df['Status Rocket'].value_counts()\n\nfig = make_subplots(rows=1, cols=2, specs=[[{\"type\": \"xy\"}, {\"type\": \"domain\"}]])\nfig.add_trace(go.Bar( x=status.keys(), y=status.values, text=status.values.tolist(), textposition='auto',marker_color='#003786',name='Status'), row=1, col=1)\nfig.add_trace(go.Pie(labels=status.keys(),values=status.values,textposition='inside', textinfo='percent+label',marker={'colors':['rgb(178,24,43)','rgb(253,219,199)']}), row=1, col=2)\nfig.update_layout(title_text='Status of Rockets', font_size=10, autosize=False, width=800, height=400)\nfig.show()","4a6a446d":"df_ussr = df[df['Company Name']==\"RVSN USSR\"]\nplt.subplot(1,2,1)\nbar=df_ussr.groupby('Status Rocket').count()['Detail'].plot(kind='bar',figsize=(6,3),width=0.1)\nbar.set_xticklabels(bar.get_xticklabels(), rotation=0)\nplt.title('Status of the mission')\nplt.subplot(1,2,2)\nbar=df_ussr['Status Mission'].value_counts().plot(kind='bar',figsize=(13,4))\nbar.set_xticklabels(bar.get_xticklabels(), rotation=0)\nfor p in bar.patches:\n  bar.annotate(int(p.get_height()), \n               (p.get_x() + p.get_width()\/2, p.get_height()), ha='center', va='center', \n               xytext=(0,5), textcoords = 'offset points')\nplt.xlabel('Status')\nt=plt.title('Status of RocketLauch')\n","2882fa60":"\nx=df_ussr.groupby('year').count()['Detail'].plot(kind='bar',figsize=(14,4))\nplt.ylabel('Number of missions')\nt=plt.title('number of missions by RVSN USSR per year')","10abc6b9":"df_active = df[df['Status Rocket'] == \"StatusActive\"]\ndf_active = df_active.groupby('Company Name').count()['Detail'].sort_values(ascending=False).reset_index()\nlen(df_active)","d30f14b9":"top_20 = companies[1:40]\ncmp = df.groupby(['Company Name','Status Rocket']).count()['Detail'].reset_index()\ncmp = cmp[cmp['Company Name'].isin(top_20['Company Name'])]\nactive = cmp[cmp['Status Rocket']==\"StatusActive\"].sort_values('Detail')\nretired = cmp[cmp['Status Rocket']!=\"StatusActive\"]\nfig = go.Figure()\nfig.add_bar(y=active['Detail'],x=active['Company Name'],name='Status Active')\nfig.add_bar(y=retired['Detail'],x=retired['Company Name'],name='Status Retired')\nfig.update_layout(barmode=\"stack\",title=\"Comapnies and Mission Status\",yaxis_title=\"No of Missions\")\nfig.show()","b5faf643":"m = df['Status Mission'].value_counts()\nmf = go.Figure([go.Pie(labels=m.keys(),values=m.values,textposition='inside', textinfo='percent+label',marker={'colors':[\"0e58a8\",\"rgb(215,48,39)\",\"rgb(112,164,148)\",\"e2d9e2\"]})])\nmf.update_layout(title_text='Status of Launch', font_size=10, autosize=False, width=700, height=400)","c76bc0ee":"plt.figure(figsize=(20,5))\ncmp = df.groupby(['Company Name','Status Mission']).count()['Detail'].reset_index()\ncmp = cmp[cmp['Status Mission']==\"Success\"].sort_values('Detail',ascending=False)\nsns.barplot(x='Company Name',y='Detail',data=cmp[1:20])\nplt.ylabel('No of successful missions')\nt=plt.title('company vs sucessful missions')","6e873075":"plt.figure(figsize=(20,5))\ncmp = df[df['Status Mission']!=\"Success\"].groupby('Company Name').count().sort_values('Detail',ascending=False).reset_index()\nsns.barplot(x='Company Name',y='Detail',data=cmp[1:20])\nplt.ylabel('No of unsuccessful missions')\nt=plt.title('company vs unsucessful missions')","49ae5db9":"year_wise = df.groupby(['Country','year']).count()['Detail'].reset_index()\n\nfig = go.Figure(data=go.Heatmap(\n        z=year_wise['Detail'],\n        x=year_wise['year'],\n        y=year_wise['Country'],\n        colorscale='Viridis'))\n\nfig.update_layout(\n    title='Country wise launches  per year',\n    xaxis_nticks=36)\n\nfig.show()","24758e4a":"country = df.groupby('Country').count()['Detail'].sort_values(ascending=False).reset_index()\ncountry.rename(columns={\"Detail\":\"No of Launches\"},inplace=True)\ncountry.head(10).style.background_gradient(cmap='Blues').hide_index()","c2aba2a2":"# df.groupby(['Country','Status Mission']).count()\nr = df.copy()\nr = r.groupby(['Country','Status Mission'])['Detail'].count().unstack(fill_value=0).stack().reset_index()\ncou = pd.DataFrame({\"Country\":r['Country'].unique(),\"Success\":r[r['Status Mission']==\"Success\"][0].values,\n                    \"Failure\":r[r['Status Mission']==\"Failure\"][0].values,\n                    \"Partial Failure\":r[r['Status Mission']==\"Partial Failure\"][0].values,\n                    \"Prelaunch Failure\":r[r['Status Mission']==\"Prelaunch Failure\"][0].values},\n                    columns=[\"Country\",\"Success\",\"Failure\",\"Partial Failure\",\"Prelaunch Failure\"])\n","43adcd43":"country_colors=[\"#01579b\",\"#0277bd\",\"#0288D1\",\"#039BE5\",\"#03A9F4\",\"#29B6F6\",\"#4FC3F7\",\"#81D4FA\",\"#B3E5FC\",\"E1F5FE\",\"E1F5FE\"]\ncountry_colors = sum([[i]*2 for i in country_colors],[])  \n\nfrom collections import OrderedDict\nfrom io import StringIO\nfrom math import log, sqrt\n\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom bokeh.plotting import figure, output_file, show\nfrom bokeh.io import output_notebook\nfrom bokeh.resources import INLINE\noutput_notebook(INLINE)\n\nstatus_color = OrderedDict([\n    (\"Success\",   \"#0d3362\"),\n    (\"Failure\", \"#c64737\"),\n    (\"Partial Failure\", \"white\"  ),\n    (\"Prelaunch Failure\",\"black\")\n])\n\nwidth = 800\nheight = 800\ninner_radius = 90\nouter_radius = 300 - 10\n\nmaxr = sqrt(log(1* 1E4))\nminr = sqrt(log(1395 * 1E4))\na = (outer_radius - inner_radius) \/ (minr - maxr)\nb = inner_radius - a * maxr\n\ndef rad(mic):\n    return a * np.sqrt(np.log(mic * 1E4)) + b\n\nbig_angle = 2.0 * np.pi \/ (len(cou)+1)\nsmall_angle = big_angle\/7 \n\np = figure(plot_width=width, plot_height=height, title=\"\",\n    x_axis_type=None, y_axis_type=None,\n    x_range=(-420, 420), y_range=(-420, 420),\n    min_border=0, outline_line_color=\"black\",\n    background_fill_color=\"#f0e1d2\")\n\np.xgrid.grid_line_color = None\np.ygrid.grid_line_color = None\n\n# annular wedges\nangles = np.pi\/2 - big_angle\/2 - cou.index.to_series()*big_angle\ncolors = country_colors\np.annular_wedge(\n    0, 0, inner_radius, outer_radius, -big_angle+angles, angles, color=colors,\n)\n\n# small wedges\np.annular_wedge(0, 0, inner_radius, rad(cou['Success']),\n                -big_angle+angles+7*small_angle, -big_angle+angles+8*small_angle,\n                color=status_color['Success'])\np.annular_wedge(0, 0, inner_radius, rad(cou['Failure']),\n                -big_angle+angles+5*small_angle, -big_angle+angles+6*small_angle,\n                color=status_color['Failure'])\np.annular_wedge(0, 0, inner_radius, rad(cou[\"Partial Failure\"]),\n                -big_angle+angles+3*small_angle, -big_angle+angles+4*small_angle,\n                color=status_color['Partial Failure'])\np.annular_wedge(0, 0, inner_radius, rad(cou[\"Prelaunch Failure\"]),\n                -big_angle+angles+1*small_angle, -big_angle+angles+2*small_angle,\n                color=status_color['Prelaunch Failure'])\n\n# circular axes and lables\nlabels = np.power(10.0, np.arange(1,4))\nradii = a * np.sqrt(np.log(labels * 1E4)) + b\np.circle(0, 0, radius=radii, fill_color=None, line_color=\"#afc1ce\")\np.text(0, radii[:], [str(r) for r in labels[:]],\n       text_font_size=\"11px\", text_align=\"center\", text_baseline=\"middle\")\n\n# radial axes\np.annular_wedge(0, 0, inner_radius-10, outer_radius+10,\n                -big_angle+angles, -big_angle+angles, color=\"white\")\n\n# #  labels\nxr = radii[-1]*np.cos(np.array(-big_angle\/2+ angles))+0.8\nyr = radii[-1]*np.sin(np.array(-big_angle\/2 + angles))+0.8\nlabel_angle=np.array(-big_angle\/2+angles)\nlabel_angle[label_angle < -np.pi\/2] += np.pi \np.text(xr, yr, cou.Country, angle=label_angle,\n       text_font_size=\"11px\", text_align=\"center\", text_baseline=\"middle\")\n\n\np.rect([-40, -40, -40,-40], [36, 18,0,-18], width=20, height=13,\n       color=list(status_color.values()))\np.text([-15, -15,-15, -15], [36, 18,0,-18], text=list(status_color),\n       text_font_size=\"10px\", text_align=\"left\", text_baseline=\"middle\")\n\nshow(p)","8dfa1cb3":"x = df.groupby(['Country']).count().reset_index()\nx.rename(columns={'Detail':'Missions'},inplace=True)\nfig = px.sunburst(x, path=['Country','Missions'],values='Missions',\n                  color='Missions',\n                  color_continuous_scale='RdBu') #\nfig.show()","e0f5802d":"map_data = [go.Choropleth( \n           locations = country['Country'],\n           locationmode = 'country names',\n           z = country[\"No of Launches\"], \n           text = country['Country'],\n           colorbar = {'title':'No of Launches'},\n           colorscale='ylorrd')]\n\nlayout = dict(title = 'Countries wise Rocket Launches', \n             geo = dict(showframe = False, \n                       projection = dict(type = 'equirectangular')))\n\nworld_map = go.Figure(data=map_data, layout=layout)\niplot(world_map)\n","80805e06":"df['LV'] = df['Detail'].apply(lambda x:x.split()[0])\nro = df['LV'].value_counts().sort_values(ascending=True)[-50:]\nfig = go.Figure(go.Bar(x=ro.values, y=ro.keys(),orientation='h'))\nfig.update_layout(title=\"Launch Vehicle used for number of missions \")","cd26b154":"z = df.groupby(['Country','LV']).count().reset_index()\ntext = z['LV']\n\n\nmask = np.array(Image.open(\"..\/input\/rocket\/LV.jpg\"))\nwordcloud_fra = WordCloud(background_color=\"white\", mode=\"RGBA\", max_words=1000, mask=mask,contour_color='firebrick').generate(\" \".join(text))\n\n\nimage_colors = ImageColorGenerator(mask)\nplt.figure(figsize=[24,8])\nplt.imshow(wordcloud_fra.recolor(color_func=lambda *args, **kwargs: \"black\"), interpolation=\"bilinear\")\npt=plt.axis(\"off\")","f85bcaff":"success = df[df['Status Mission']=='Success'].groupby('LV').count()['Detail'].reset_index()\nnot_s = df[df['Status Mission']!='Success'].groupby('LV').count()['Detail'].reset_index()\nnot_s.rename(columns={'Detail':'Fails'},inplace=True)\ntotal = pd.merge(success,not_s,on='LV').sort_values('Detail',ascending=True)[-50:]\nfig = go.Figure()\nfig.add_bar(x=total['Detail'],y=total['LV'],orientation='h',name=\"Success\")\nfig.add_bar(x=total['Fails'],y=total['LV'],orientation='h',name=\"Failure\")\n\nfig.update_layout(barmode=\"stack\",title=\"Launch vehicle number of success and Failures\",xaxis_title=\"No of Missions\",yaxis_title=\"Launch Vehicle\")\nfig.show()","654fb102":"days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\ndf['day'] = df['Datum'].apply(lambda x:x.split()[0])\ndf_days = df.groupby('day').count()['Detail'].reset_index()\n\ndf_days['day'] = pd.Categorical(df_days['day'], categories=days, ordered=True)\ndf_days = df_days.sort_values('day')\nplt.figure(figsize=(11,4))\nsns.barplot(x='day', y='Detail', data=df_days)\nplt.ylabel('No of launches')\nb=plt.title(' day vs no of launches')","1d693ab0":"from calendar import month_abbr\nplt.figure(figsize=(12,6))\ndf['month'] = df['Datum'].apply(lambda x: x.split()[1])\ndf_month = df.groupby('month').count()['Detail'].reset_index()\ndf_month['month'] = pd.Categorical(df_month['month'], categories=list(month_abbr)[1:], ordered=True)\ndf_month = df_month.sort_values('month')\nbar=sns.barplot(x='month',y='Detail',data=df_month)\nfor p in bar.patches:\n    bar.annotate(int(p.get_height()), \n               (p.get_x() + p.get_width()\/2, p.get_height()), ha='center', va='center', \n               xytext=(0,7), textcoords = 'offset points')\nplt.ylabel('No of launches')\n_ = plt.title('no of rockets launched per month')","7437e0dc":"df['year'] = df['Datum'].apply(lambda x:x.split()[3])\ndate= df.groupby('year').count()['Detail'].reset_index()\nplt.figure(figsize=(20,6))\nb=sns.barplot(x='year', y='Detail', data=date)\nplt.ylabel('no of launches')\nplt.title(' No of launches per year')\n_=b.set_xticklabels(b.get_xticklabels(), rotation=90, horizontalalignment='right')","46853d83":"colors=['#0072b2','#000000','#d55e00']\nstatus= df['Status Mission'].unique()\nj=0\nfor s in status[1:]:\n    df[df['Status Mission']==s].groupby('year').count()['Detail'].plot(kind='bar',figsize=(18,5),color=colors[j])\n    j+=1\nplt.ylabel('No of unsuccessful Missions')\nt = plt.title(\"Number of unsuccessful missions per year\")\nt=plt.legend(status[1:])","866f0b3a":"budget = df.copy().dropna()\nbudget.loc[:, ' Rocket'] = budget[' Rocket'].apply(lambda x:float(x.replace(',','')))\nb = budget.groupby('Company Name').sum().sort_values(' Rocket', ascending=False).reset_index()","c335536b":"plt.figure(figsize=(14,4))\nbar = sns.barplot(x='Company Name',y=' Rocket',data=b)\nbar.set_xticklabels(bar.get_xticklabels(), rotation=30)\nplt.ylabel('Money spent on Missions in million $')\nt=plt.title('Comapny Budget')\n","bc1c3bf2":"budget.groupby('year').mean().plot(kind='bar',figsize=(14,4))\nplt.ylabel('Avg money spent in $')\nplt.legend('Money spent')\nt=plt.title('Average money spent on Missions per year')\n","96855a09":"b = budget.groupby('Country').sum()[' Rocket'].reset_index()\nc= budget.groupby('Country').count()['Detail'].sort_values(ascending=False).reset_index()\nc = c.merge(b,on='Country')\n\n\ny_count=c['Detail'][::-1]\ny_net_worth = c[' Rocket'][::-1]\nx=c['Country'][::-1]\n\nfig = make_subplots(rows=1, cols=2, specs=[[{}, {}]], shared_xaxes=True,\n                    shared_yaxes=False, vertical_spacing=0.001)\n\nfig.append_trace(go.Bar(\n    x=y_count,\n    y=x,\n    marker=dict(\n        color='rgba(50, 171, 96, 0.6)',\n        line=dict(\n            color='rgba(50, 171, 96, 1.0)',\n            width=1),\n    ),\n    name='Countries and number of missions',\n    orientation='h',\n), 1, 1)\n\nfig.append_trace(go.Scatter(\n    x=y_net_worth, y=x,\n    mode='lines+markers',\n    line_color='rgb(128, 0, 128)',\n    name='Mission budget, Million USD',\n), 1, 2)\n\nfig.update_layout(\n    title='Number of missions per country & Money spent in million dollars',\n    yaxis=dict(\n        showgrid=False,\n        showline=False,\n        showticklabels=True,\n        domain=[0, 0.85],\n    ),\n    yaxis2=dict(\n        showgrid=False,\n        showline=True,\n        showticklabels=False,\n        linecolor='rgba(102, 102, 102, 0.8)',\n        linewidth=2,\n        domain=[0, 0.85],\n    ),\n    xaxis=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0, 0.42],\n    ),\n    xaxis2=dict(\n        zeroline=False,\n        showline=False,\n        showticklabels=True,\n        showgrid=True,\n        domain=[0.47, 1],\n        side='top',\n        dtick=25000,\n    ),\n    legend=dict(x=0.029, y=1.038, font_size=10),\n    margin=dict(l=100, r=20, t=70, b=70),\n    paper_bgcolor='rgb(248, 248, 255)',\n    plot_bgcolor='rgb(248, 248, 255)',\n)\n\nannotations = []\n\ny_s = np.round(y_count, decimals=2)\ny_nw = np.rint(y_net_worth)\n\n# Adding labels\nfor ydn, yd, xd in zip(y_nw, y_s, x):\n \n    annotations.append(dict(xref='x2', yref='y2',\n                            y=xd, x=ydn - 20000,\n                            text='{:,}'.format(ydn) + 'M',\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(128, 0, 128)'),\n                            showarrow=False))\n\n    annotations.append(dict(xref='x1', yref='y1',\n                            y=xd, x=yd + 22,\n                            text=str(yd),\n                            font=dict(family='Arial', size=12,\n                                      color='rgb(50, 171, 96)'),\n                            showarrow=False))\n# Source\nannotations.append(dict(xref='paper', yref='paper',\n                        x=-0.2, y=-0.109,\n                        text=\"Country with number of missions and money spent on all missions\",\n                        font=dict(family='Arial', size=10, color='rgb(150,150,150)'),\n                        showarrow=False))\n\nfig.update_layout(annotations=annotations)\n\nfig.show()","cf84a7b2":"df['center'] = df['Location'].apply(lambda x:x.split(',')[1])\ndf.groupby('center').count()['Detail'].sort_values()[-10:].plot(kind='barh')\nplt.xlabel('Number of Launches')\nt=plt.title('center with number of launches')","c25b53f4":"top_10 = country['Country'].head(10)\nx= df.groupby(['year','Country']).count().reset_index()\nx=x[x['Country'].isin(top_10)]\npx.scatter(x,x='year', y='Detail', color='Country')\n","3217d3f0":"df['Hour']=df['Datum'].apply(lambda datum: int(datum.split()[-2][:2]) if datum.split()[-1]=='UTC' else np.nan)\nhr = df.groupby('Hour').count()['Detail'].reset_index()\npx.bar(hr, x='Hour',y='Detail',labels={'Detail':'No of Missions','Hour':\"Time(24hrs)\"},title=\"No of Launches in time\",width=700,height=400)","d7fff5bf":"df['Date'] = df['Datum'].apply(lambda x:\" \".join(x.split()[:4]))\ndf['Date'] = df['Date'].apply(pd.to_datetime)\ndf.set_index('Date',inplace=True)","d4645c27":"r = df[[' Rocket','Status Mission']]\nr.dropna(inplace=True)\nr[' Rocket'] = r[' Rocket'].apply(lambda x:float(x.replace(',','')))\nx=r['2020-08-07':'2010-12-31'].plot(figsize=(12,4),title=\"Money spent on the missions in the last 10 years\",ylabel=\"Money in million $\")","e0c68ccc":"\nplt.figure(figsize=(10,4))\ng=sns.kdeplot(r[' Rocket'],shade=True)\nplt.title('Density plot')\nfor l in g.lines:\n    plt.setp(l,linewidth=2.5)","27ddc3c0":"v = df.reset_index().groupby(['Date','Status Mission']).count()['Detail'].reset_index()\nsucc = v[v['Status Mission']!=\"Success\"].set_index('Date').resample('M').count().reset_index()\nunsuccess = go.Scatter(x=succ.Date,y=succ['Detail'],yaxis='y2',name='Unucessful Launches')\nunsucc = v[v['Status Mission']==\"Success\"].set_index('Date').resample('M').count().reset_index()\nsuccess = go.Scatter(x=unsucc.Date,y=unsucc['Detail'],name='Successful Launches')\n\n\nlayout = go.Layout(height=450, width=1000,\n                   title='Successful and Unsuccessful Launches Plot',\n                   # Same x and first y\n                   xaxis=dict(title='Date'),\n                   yaxis=dict(title='Successful', color='blue'),\n                   # Add a second yaxis to the right of the plot\n                   yaxis2=dict(title='Unsuccessful', color='red',\n                               overlaying='y', side='right')\n                   )\nfig = go.Figure(data=[success, unsuccess],layout=layout)\nfig.update_xaxes(rangeslider_visible=True)\nfig.show()","456be12b":"## <a id=4> Company performance year wise <\/a>","f286501b":"It is observed that most of the lauches were on the weekdays and least number of rockets were launched on sundays","b8dab924":"## <a id=3>Top 10 coutntries Most used Launch Vehicle<\/a>","da08926a":"We will now analyse which company has huge number of success apart from RVSN USSR","fdd9127d":"There are total of 56 companies in space industry. Of all the comapnies **RVSN USSR** has lauched 31.73% of rockets approximately 1777 lauches. As RVSN USSR has launched many rockets let's compare other companies.","3d71823f":"### Buget of the Missions","4695ada2":"Right now only 31 company missions are still active remaining missions are retired. CASC is the third largest company in launching rockets and is the one having 211 active missions till now.","01e6822a":"#### when it comes to rocket launches whether conditions are very important and it changes from country to country. on a whole Maximum number of rockets were launched in december amd minimum number of launches in January","6a881200":"There are total of 128 different launch Vehicles out of which Cosmos-3M is the most used Lauch vehicle. The plot shows the top 50 most used lauch vehicles","2ea5d4a6":"Of all the comapnies NASA spends a lot of money in space missions","f19d8356":"It is observed that in the early years of space exploration there were more failures but later more measures were taken and number of failed missions were reduced by more than 90%","bed6b2a2":"## <a id=4> At what time most of Launches take place? <\/a>","8e41670d":"## <a id=4> Amount spent by companies on space missions <\/a>","51cd46cb":"## <a id=4> Types of Lauch Vehicles<\/a>","ea1296c8":"#### RVSN USSR comapny is one of the oldest and biggest company. so we analyse the data related to that company","1583cc03":"## <a id=4> Centers with maximum number of Launches <\/a>","70ca8a86":"A lot of Rocket buget in this dataset is not given so from what we have the plot is made and suddenly in 1987 we can observe a huge increase in the money spent probably because of increse in the number of missions and research","bdafd9d8":"#### These are top 20 companies and their succesful missions","dcba872c":"Even though the time of Lauch depends on various parameters like the destination of the spacecraft, weather we can observe a patter in the above graph that most of the launches take place during daylight from 9 to 12 or at night from 10to 12.","338360db":"Kazakhstan (which was a part of Soviet Union) and USA were the first countries to launch rocket into space in 1957.The early era of space exploration was driven by a \"Space Race\" between the Soviet Union and the United States. The launch of the first human-made object to orbit Earth, the Soviet Union's Sputnik 1, on 4 October 1957, and the first Moon landing by the American Apollo 11 mission on 20 July 1969 are often taken as landmarks for this initial period. Later Russia joined the race in 1960. As the years progressed and many other countries started investing in this field.","a5f0dd4e":"## <a id=4> Country and their budgets for space mission<\/a>","18ac5fc6":"## <a id=\"2\">Companies in space industry<\/a>","0c04340c":"#### Note that Red indicates maxmimum number of launches from the courty and Yellow indicates minimum number of Launches","ea2b8da9":"The space Missions were started earlier 1957 but the first satellite Sputnik 1 was launched in 1957 from then on many missions have been and still going on. There was a huge increment in the number of missions from 1961-1978 probably because of the moon missions. In 1969, astronaut Neil Armstrong took **\u201cone giant leap for mankind\u201d** as he stepped onto the moon. Six Apollo missions were made to explore the moon between 1969 and 1972.\n\n","cd395a62":"### Density Plot\n\nKDE Density plot to see where budget is located","5cd734cd":"Out of 56 companies 31 companies have active space missions","fcc36150":"## <a id=4>Status of the Launch<\/a>","ca49ae85":"## <a id=3> Geographical plot of Countries and their Launches <\/a>","6b50f07d":"### Which year has more number of unsuccessful launches?","d46314a2":"### Number of Launches per year","f00dc939":"### Amount spent per year","cbf58528":"#### It is observed that Arianespace has lauched more rockets than any other company apart from RVSN USSR","0d4bc8b3":"The dataset consists of following columns:\n* **Company:** Name\n* **Location:** Location of Launch place\n* **Datum:** Date and Time of Launch\n* **Detail:** Rocket Name\n* **Status Rocket:** Status of the Rocket\n* **Rocket:** Cost of the mission: in $ million\n* **Status Mission:** Status of the mission","dbf362da":"RVSN USSR is the first company to venture into space industry and the performance was incredible with increasing number of launches every year and is the only compamy to lauch 97 missions in a single year(1977) until it was collapsed in 1991. There were not many companies in the space research at the beginning(1957) but we can see a tremendous increase in the companies now(2020). These companies not only ventured but also maintained consistency in number of launches per year (SpaceX, VKS RF, Arianespace, ISRO)","0a8b5036":"## <a id=3> In which years countries were more active? <\/a>","8645e255":"## <a id=3>Launch vehicle status<\/a>","83ecd2a6":"## <a id=4> Status of Lauch Country wise<\/a>","cc326450":"## <a id=\"2\">Companies with Successful Missions<\/a>","f5cffff1":"## <a id=\"4\">Status of the Rocket<\/a>","3584ea55":"#### All the missions of \"RVSN USSR\" company are retired and it is no longer producing rockets. The company started growning in 1957 and produced a large number of rockets and has  many successful missions of all the companies till 1998. After 1998 it did not launch any missions","6a0f6f02":"## <a id=\"2\">Companies with Active Missions<\/a>","02fba64d":"## <a id=4> Country with maximum number of Missions <\/a>","c3e47e21":"#### Out of 4324 missions 89.7% of the missions are successful","89944ae1":"### <a id=4>on which day most of the rockets were launched?<\/a>","b9096701":"## <a id=3> Country performance over the years <\/a>","2a72ec78":"# Space Missions - EDA\n\n### Visualization of the Space missions data from 1957 to 2020\n\nHumans have always looked up into the night sky and dreamed about space.\nIn the latter half of the 20th century, rockets were developed that were powerful enough to overcome the force of gravity to reach orbital velocities, paving the way for space exploration to become a reality.\n\n<img src=\"https:\/\/www.teslarati.com\/wp-content\/uploads\/2018\/10\/BFR-2018-Mars-landing-SpaceX-crop.jpg\"><br>\n","f8f5e345":"## <a id=\"2\">Companies with UnSuccessful Missions<\/a>","c0b18b17":"The space industry is one of most influential industries so We wil start our analysis by looking at the companies in this industry   ","3347206e":"### <a id=3>which month is most likely suitable for launch?<\/a>"}}