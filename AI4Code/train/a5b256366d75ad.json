{"cell_type":{"948ffa33":"code","ea49ff7e":"code","479129a4":"code","a3def445":"code","b32edc4d":"code","5faef1f8":"code","8c36dec6":"code","eadf2da5":"code","309d3438":"code","85745f32":"code","5676aee6":"code","78ea23d5":"code","bcc0d1fb":"code","03a5ffeb":"code","eb7f27e2":"code","971c5725":"code","c2252b65":"code","2f1163d6":"code","9ce43c61":"code","850cc810":"code","526948ac":"code","46b386f7":"code","b3b61011":"code","e68154ae":"code","68533a77":"code","d599d0f1":"code","f7cc15e5":"code","67cdef90":"code","efb84668":"code","38dc0c47":"markdown","796b472c":"markdown","196bff1b":"markdown","7f8a2753":"markdown","a72e8b9f":"markdown"},"source":{"948ffa33":"import numpy as np \nimport pandas as pd \nimport geopandas as gpd\n\nimport matplotlib.pyplot as plt\n\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster","ea49ff7e":"\ndata = pd.read_csv(\"..\/input\/colombia-housing-properties-price\/co_properties.csv\", encoding=\"utf-8\")","479129a4":"#Delete \"id\" and \"l1\" columns\ncolumns = data.columns\ncolumns = columns[(columns != \"id\")&(columns != \"l1\")]\ndata = data[columns]","a3def445":"#I'm only interested in apartments and houses\nproperty_types = (data[\"property_type\"] == \"Apartamento\") | (data[\"property_type\"] == \"Casa\")\nproperty_types\ndata = data[property_types]","b32edc4d":"f = (data[\"surface_covered\"] < 1000)\ndata = data[f]","5faef1f8":"f = (data[\"surface_total\"] < 2000)\ndata = data[f]","8c36dec6":"f = data[\"bathrooms\"] > -1\ndata = data[f]","eadf2da5":"f = data[\"bedrooms\"] > -1\ndata[f]","309d3438":"data = data[data[\"price\"] > 10000]","85745f32":"data","5676aee6":"data[\"price\"][data[\"operation_type\"] == \"Venta\"]","78ea23d5":"data.describe()","bcc0d1fb":"x = data[\"price\"][data[\"operation_type\"] == \"Venta\"]\ny = data[\"surface_total\"][data[\"operation_type\"] == \"Venta\"]\n\nfig, ax = plt.subplots(figsize=(15, 10))\n\ncmap = plt.cm.rainbow\nnorm = plt.Normalize(vmin=0, vmax=600)\n\ncolor=cmap(norm(data[\"surface_covered\"][data[\"operation_type\"] == \"Venta\"].values))\n\n\n# Plot\nplt.scatter(x, y, color = color)\nplt.title('S')\nplt.xlabel('Precio')\nplt.ylabel('y')\nax.set_xlim(0,15000000000)\n\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])  # only needed for matplotlib < 3.1\nfig.colorbar(sm)\n\nplt.show()","03a5ffeb":"data = data[data[\"lat\"].isna() == False]","eb7f27e2":"m_5 = folium.Map(location=[5.170035, -74.914305], tiles='cartodbpositron', zoom_start=6)\n\n# Add a heatmap to the base map\nHeatMap(data=data[['lat', 'lon']], radius=10).add_to(m_5)\n\n# Display the map\nm_5","971c5725":"data_apartamento_venta =data[(data[\"property_type\"] == \"Apartamento\") & (data[\"operation_type\"] == \"Venta\")]","c2252b65":"data_apartamento_venta.iloc[0]","2f1163d6":"data_apartamento_venta[\"l3\"] == \"Medell\u00edn\"","9ce43c61":"m_5 = folium.Map(location=[6.243025, -75.577305], tiles='cartodbpositron', zoom_start=12)\n\n# Add a heatmap to the base map\n#HeatMap(data=data[['lat', 'lon']], radius=10).add_to(m_5)\n\nprecio1 = 130000000\nincremento = 60000000\n\ndef color_producer(val):\n    if val < precio1:\n        return 'green'\n    elif val < precio1+incremento:\n        return 'lime'\n    elif val < precio1+incremento*2:\n        return 'greenyellow'\n    elif val < precio1+incremento*3:\n        return 'yellow'\n    elif val < precio1+incremento*4:\n        return 'gold'\n    elif val < precio1+incremento*5:\n        return 'orange'\n    else:\n        return 'red'\n    \nfilter_location = data_apartamento_venta[\"l2\"] == \"Antioquia\"\nfor i in range(0,len(data_apartamento_venta[filter_location])):\n    folium.Circle(\n        location=[data_apartamento_venta[filter_location].iloc[i]['lat'], data_apartamento_venta[filter_location].iloc[i]['lon']],\n        radius=3,\n        color=color_producer(data_apartamento_venta[filter_location].iloc[i]['price'])).add_to(m_5)\nm_5","850cc810":"m_5 = folium.Map(location=[4.646555, -74.092008], tiles='cartodbpositron', zoom_start=10)\n\n# Add a heatmap to the base map\n#HeatMap(data=data[['lat', 'lon']], radius=10).add_to(m_5)\n\nprecio1 = 130000000\nincremento = 60000000\n\ndef color_producer(val):\n    if val < precio1:\n        return 'green'\n    elif val < precio1+incremento:\n        return 'lime'\n    elif val < precio1+incremento*2:\n        return 'greenyellow'\n    elif val < precio1+incremento*3:\n        return 'yellow'\n    elif val < precio1+incremento*4:\n        return 'gold'\n    elif val < precio1+incremento*5:\n        return 'orange'\n    else:\n        return 'red'\n    \nfilter_location = data_apartamento_venta[\"l2\"] == \"Cundinamarca\"\nfor i in range(0,len(data_apartamento_venta[filter_location])):\n    folium.Circle(\n        location=[data_apartamento_venta[filter_location].iloc[i]['lat'], data_apartamento_venta[filter_location].iloc[i]['lon']],\n        radius=3,\n        color=color_producer(data_apartamento_venta[filter_location].iloc[i]['price'])).add_to(m_5)\nm_5","526948ac":"colombia = gpd.read_file('..\/input\/colombia\/Subregiones_-_Provincias_de_Colombia.shp', encoding='utf-8')","46b386f7":"#valleaburra = colombia[colombia[\"OBJECTID\"] == 9]\ncolombia#[[\"ShapeSTAre\"]].isnull().values#.any()","b3b61011":"colombia[[\"ShapeSTAre\"]]","e68154ae":"colombia.set_index(\"OBJECTID\")[\"ShapeSTAre\"]#.iloc[0, 4]","68533a77":"colombiagd = colombia[[\"geometry\", \"OBJECTID\"]].set_index(\"OBJECTID\")","d599d0f1":"colombia.set_index(\"OBJECTID\")[\"ShapeSTAre\"]","f7cc15e5":"colombiadata = colombia.set_index(\"OBJECTID\")[\"ShapeSTAre\"]\/(colombia.set_index(\"OBJECTID\")[\"ShapeSTAre\"].max()\/100)","67cdef90":"m_6 = folium.Map(location=[3.827034, -73.497080], tiles='cartodbpositron', zoom_start=12)\n\n# Add a choropleth map to the base map\nChoropleth(geo_data=colombiagd.__geo_interface__, \n           data=colombiadata, \n           key_on=\"feature.id\", \n           fill_color='YlGnBu', \n           legend_name='Major criminal incidents (Jan-Aug 2018)'\n          ).add_to(m_6)\n\n# Display the map\nm_6","efb84668":"# An \"interface\" to matplotlib.axes.Axes.hist() method\n# n, bins, patches = plt.hist(x=list(data[\"price\"]), bins='auto', color='#0504aa',\n#                             alpha=0.7, rwidth=0.85)\n# plt.grid(axis='y', alpha=0.75)\n# plt.xlabel('Value')\n# plt.ylabel('Frequency')\n# plt.title('My Very Own Histogram')\n# plt.text(23, 45, r'$\\mu=15, b=3$')\n# maxfreq = n.max()\n# # Set a clean upper y-axis limit.\n# plt.ylim(ymax=np.ceil(maxfreq \/ 10) * 10 if maxfreq % 10 else maxfreq + 10)","38dc0c47":"## Relation between price and surface (sq mt)","796b472c":"## Bogot\u00e1 - Apartments on Sale","196bff1b":"## Medell\u00edn - Apartments on Sale","7f8a2753":"## Where are the properties? Heatmap","a72e8b9f":"## The data"}}