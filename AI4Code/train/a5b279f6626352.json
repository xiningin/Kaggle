{"cell_type":{"f3ae3c48":"code","930b7eb4":"code","23cab49e":"code","12dd219d":"code","51b7e6be":"code","8080d6bb":"code","dc2f7208":"code","345727fc":"code","48f67cab":"code","cbd0d14d":"code","c46647b5":"code","4fcb1091":"code","adf46791":"code","a7bc316c":"code","0ab50c95":"code","5db10e03":"code","10786818":"code","83ff9ecd":"code","e59c1669":"code","df212097":"code","ce192334":"code","08976e45":"markdown","36752d3b":"markdown","eea391ca":"markdown","108e85e5":"markdown","a5a44859":"markdown"},"source":{"f3ae3c48":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","930b7eb4":"import numpy as np \nimport pandas as pd\nimport os\nimport seaborn as sns\nprint(os.listdir(\"..\/input\"))\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nimport plotly.offline as py\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode\ninit_notebook_mode(connected=False)\nfrom wordcloud import WordCloud\nfrom geopy.geocoders import Nominatim\nfrom folium.plugins import HeatMap\nimport folium\nfrom tqdm import tqdm\nimport re\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Embedding, LSTM, SpatialDropout1D\nfrom sklearn.model_selection import train_test_split\nfrom nltk import word_tokenize\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nimport gensim\nfrom collections import Counter\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nimport matplotlib.colors as mcolors\nfrom sklearn.manifold import TSNE\nfrom gensim.models import word2vec\nimport nltk","23cab49e":"df=pd.read_csv(\"..\/input\/restaurants-in-jaipur\/Cleaned.csv\")","12dd219d":"print(\"dataset contains {} rows and {} columns\".format(df.shape[0],df.shape[1]))","51b7e6be":"df.info()","8080d6bb":"df.head()","dc2f7208":"#Exploratory data analysis\n\n#which are the top restaurant chains in jaipur\n\nplt.figure(figsize=(10,7))\nchains=df['RestaurantName'].value_counts()[:20]\nsns.barplot(x=chains,y=chains.index,palette='deep')\nplt.title(\"Most famous restaurants chains in Jaipur\")\nplt.xlabel(\"Number of outlets\")","345727fc":"# cost_dist=df[['Ratings','CostForTwo']].dropna()\n# cost_dist['Ratings']=cost_dist['Ratings'].apply(lambda x: float(x.split('\/')[0]) if len(int(x))>3 else 0)\n# cost_dist['CostForTwo']=cost_dist['CostForTwo'].apply(lambda x: int(x.replace(',','')))","48f67cab":"# plt.figure(figsize=(10,7))\n# sns.scatterplot(x=\"Ratings\",y='CostForTwo',data=cost_dist)\n# plt.show()","cbd0d14d":"print(df['Ratings'].dropna())","c46647b5":"rateDist = df['Ratings'].dropna()\nax =sns.distplot(rateDist, hist=True, bins=30, color='#15b01a')\nplt.title(\"Distribution of Ratings\")","4fcb1091":"#Distribution of cost for two people\n\nplt.figure(figsize=(6,6))\nsns.distplot(cost_dist['CostForTwo'])\nplt.show()","adf46791":"#which are the most common restaurant type in jaipur?\n\nplt.figure(figsize=(7,7))\nrest=df['Category'].value_counts()[:20]\nsns.barplot(rest,rest.index)\nplt.title(\"Restaurant types\")\nplt.xlabel(\"count\")","a7bc316c":"#Cost factor ?\n\ntrace0=go.Box(y=df['CostForTwo'],\n              marker = dict(\n        color = 'rgb(214, 12, 140)',\n    ))\ndata=[trace0]\nlayout=go.Layout(title=\"Box plot of approximate cost\",width=800,height=500,yaxis=dict(title=\"Price\"))\nfig=go.Figure(data=data,layout=layout)\npy.iplot(fig)\n","0ab50c95":"#Which are the foodie areas?\n\nplt.figure(figsize=(7,7))\nRest_locations=df['Locality'].value_counts()[:20]\nsns.barplot(Rest_locations,Rest_locations.index,palette=\"rocket\")","5db10e03":"#Which are the most common cuisines in each locations?\n\ndf_1=df.groupby(['Locality','Cuisines']).agg('count')\ndata=df_1.sort_values(['Ratings'],ascending=False).groupby(['Locality'],\n                as_index=False).apply(lambda x : x.sort_values(by=\"Ratings\",ascending=False).head(3))['Ratings'].reset_index().rename(columns={'Ratings':'count'})\n\ndata.head(10)","10786818":"locations=pd.DataFrame({\"RestaurantName\":df['Locality'].unique()})\nlocations['RestaurantName']=locations['RestaurantName'].apply(lambda x: \"Jaipur \" + str(x))\nlat_lon=[]\ngeolocator=Nominatim(user_agent=\"app\")\nfor location in locations['RestaurantName']:\n    location = geolocator.geocode(location)\n    if location is None:\n        lat_lon.append(np.nan)\n    else:    \n        geo=(location.latitude,location.longitude)\n        lat_lon.append(geo)\n\n\nlocations['geo_loc']=lat_lon\nlocations.to_csv('locations.csv',index=False)\nlocations[\"RestaurantName\"]=locations['RestaurantName'].apply(lambda x :  x.replace(\"Jaipur\",\"\")[1:])\nlocations.head()","83ff9ecd":"Rest_locations=pd.DataFrame(df['Locality'].value_counts().reset_index())\nRest_locations.columns=['RestaurantName','count']\nRest_locations=Rest_locations.merge(locations,on='RestaurantName',how=\"left\").dropna()\nRest_locations['count'].max()","e59c1669":"def generateBaseMap(default_location=[26.91, 75.78], default_zoom_start=12):\n    base_map = folium.Map(location=default_location, control_scale=True, zoom_start=default_zoom_start)\n    return base_map","df212097":"lat,lon=zip(*np.array(Rest_locations['geo_loc']))\nRest_locations['lat']=lat\nRest_locations['lon']=lon\nbasemap=generateBaseMap()\nHeatMap(Rest_locations[['lat','lon','count']].values.tolist(),zoom=20,radius=15).add_to(basemap)","ce192334":"#Heatmap of restaurant count on each location\nbasemap","08976e45":"We can observe that Quick Bites type restaurants dominates.","36752d3b":"As you can see Cafe coffee day,Domino's pizza,Baskin Robbins has the most number of outlets in and around jaipur.","eea391ca":"we can see that Mansarovar,Tonk Road and Malviya Nagar has the most number of restaurants.\nMansarovar dominates the section by having more than 550 restaurants.","108e85e5":"We can see that the distribution if left skewed.\nThis means almost 90% of restaurants serve food for budget less than 1000 INR.","a5a44859":"The median approximate cost for two people is 400 for a single meal.\n50 percent of restaurants charge between 300 and 800 for single meal for two people."}}