{"cell_type":{"0271cdc4":"code","017e53b4":"code","467c0061":"code","f3e306b7":"code","d7c5973d":"code","98764307":"code","e8e002bb":"code","9e105206":"code","a9bb7911":"code","8a4059cd":"code","89378786":"code","2b981967":"code","3608824c":"code","aad9b7f9":"code","e00b6eda":"code","0a02a33c":"code","b23f5946":"code","0336c1a2":"code","b83d6e2e":"code","fca9675a":"code","5033a4fc":"code","e4e81088":"code","81500572":"markdown","f053750c":"markdown","895e2b35":"markdown","60039998":"markdown"},"source":{"0271cdc4":"# Boiler plate tools :\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n## For modelling :\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.linear_model import LogisticRegression\n\n# Modelling tools :\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score,recall_score,precision_score,f1_score\nfrom sklearn.metrics import roc_curve,roc_auc_score\nfrom sklearn.metrics import confusion_matrix,ConfusionMatrixDisplay\nfrom sklearn.model_selection import cross_val_score,RandomizedSearchCV,GridSearchCV ","017e53b4":"data = pd.read_csv('\/kaggle\/input\/pokemon\/pokemon.csv')\ndata.head()","467c0061":"# Let's find out whether there is missing data or not...\ndata.isna().sum()","f3e306b7":"## The data looks quiet missing,Lets fill it.But before lets check the main metrics...\nfig,axes = plt.subplots(figsize=(10,10))\naxes.bar(data['name'][:10],data['attack'][:10],color='salmon');\nplt.title('Pokemon attack');\nplt.xlabel('Pokemon');\nplt.ylabel('Attack');\n","d7c5973d":"data.plot(kind='scatter',x='name',y='sp_attack');","98764307":"# Lets Check the missing values...\nfor label,content in data.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            print(label)","e8e002bb":"# Fill them..\nfor label,content in data.items():\n    if pd.api.types.is_numeric_dtype(content):\n        if pd.isnull(content).sum():\n            data[label] = content.fillna(content.median())\n            ","9e105206":"data.dtypes","a9bb7911":"for label,content in data.items():\n    if pd.api.types.is_float_dtype(content):\n        data[label] = data[label].astype('int')","8a4059cd":"data.dtypes","89378786":"for label,content in data.items():\n    if not pd.api.types.is_numeric_dtype(content):\n        data[label] = data[label].astype('category')","2b981967":"data.dtypes","3608824c":"for label,content in data.items():\n    if pd.api.types.is_categorical_dtype(content):\n        data[label] = pd.Categorical(content).codes + 1","aad9b7f9":"X = data.drop('is_legendary',axis=1)\ny = data['is_legendary']","e00b6eda":"model_a = RandomForestClassifier()\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)\nmodel_a.fit(X_train,y_train)\nmodel_a.score(X_test,y_test)","0a02a33c":"model_b = GradientBoostingClassifier()\nmodel_b.fit(X_train,y_train)\nmodel_b.score(X_test,y_test)","b23f5946":"model_c = LogisticRegression()\nmodel_c.fit(X_train,y_train)\nmodel_c.score(X_test,y_test)","0336c1a2":"# Lets check the cross val score\ny_preds = model_a.predict_proba(X_test)\ncvm = cross_val_score(model_a,X,y,cv=10)\nnp.mean(cvm)","b83d6e2e":"# Classification metrics :\ny_preds = model_a.predict(X_test)\n\nprecision = precision_score(y_test,y_preds)\nrecall = recall_score(y_test,y_preds)\naccuracy = accuracy_score(y_test,y_preds)\naccuracy,recall,precision","fca9675a":"## Lets get the legendary predictions : \nPokemon = pd.DataFrame()\ny_preds = model_a.predict(X)\nPokemon['Default values'] = y\nPokemon['Predictions'] = y_preds","5033a4fc":"Pokemon","e4e81088":"fig,axes = plt.subplots()\naxes.stackplot(Pokemon['Default values'],Pokemon['Predictions'],color=['red','blue']);","81500572":"## Clearly , RandomForestClassifier has highest score,Lets use it.\n\n`RFC score = 1.0`\n\n`GBC score = 0.9937888198757764`\n\n`LR score = 0.9937888198757764 `","f053750c":"## 1.Importing tools :","895e2b35":"# Pokemon-Classification\n\n### Well everyone know's pokemon,Dont you? But the task of identifying the pokemon into legendary or not can be subtle one.Let's try to figure it out,Through using Machine learning and Data Science.\n\nModels to be used :\n\n1.`RandomForest Classifier`\n\n2.`GradientBoostingClassifier`\n\n3.`LogisticRegression`\n\nWorkflow :\n\n1.Importing data tools.\n\n2.Studying data.\n\n3.Visualizing data.\n\n4.Modelling\n\n5.Evaluating model\n\n6.Experimenting with data.\n","60039998":"## 2.Data study :"}}