{"cell_type":{"6dd0abb1":"code","1c24586c":"code","94d7f4f2":"code","0aefe67f":"code","b223bff4":"code","f80f807c":"code","ffe8341a":"markdown","3bb4ca33":"markdown","7e40ba3e":"markdown","b7f8d8a6":"markdown","e916e25f":"markdown"},"source":{"6dd0abb1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","1c24586c":"train_transaction = pd.read_csv('..\/input\/train_transaction.csv', index_col='TransactionID')\ntest_transaction = pd.read_csv('..\/input\/test_transaction.csv', index_col='TransactionID')\n\ntrain_identity = pd.read_csv('..\/input\/train_identity.csv', index_col='TransactionID')\ntest_identity = pd.read_csv('..\/input\/test_identity.csv', index_col='TransactionID')\n\nsample_submission = pd.read_csv('..\/input\/sample_submission.csv', index_col='TransactionID')\n\ntrain = train_transaction.merge(train_identity, how='left', left_index=True, right_index=True)\ntest = test_transaction.merge(test_identity, how='left', left_index=True, right_index=True)","94d7f4f2":"def make_day_feature(df, offset=0, tname='TransactionDT'):\n    \"\"\"\n    Creates a day of the week feature, encoded as 0-6. \n    \n    Parameters:\n    -----------\n    df : pd.DataFrame\n        df to manipulate.\n    offset : float (default=0)\n        offset (in days) to shift the start\/end of a day.\n    tname : str\n        Name of the time column in df.\n    \"\"\"\n    # found a good offset is 0.58\n    days = df[tname] \/ (3600*24)        \n    encoded_days = np.floor(days-1+offset) % 7\n    return encoded_days\n\ndef make_hour_feature(df, tname='TransactionDT'):\n    \"\"\"\n    Creates an hour of the day feature, encoded as 0-23. \n    \n    Parameters:\n    -----------\n    df : pd.DataFrame\n        df to manipulate.\n    tname : str\n        Name of the time column in df.\n    \"\"\"\n    hours = df[tname] \/ (3600)        \n    encoded_hours = np.floor(hours) % 24\n    return encoded_hours","0aefe67f":"vals = plt.hist(train['TransactionDT'] \/ (3600*24), bins=1800)\nplt.xlim(70, 78)\nplt.xlabel('Days')\nplt.ylabel('Number of transactions')\nplt.ylim(0,1000)\n","b223bff4":"train['weekday'] = make_day_feature(train, offset=0.58)\nplt.plot(train.groupby('weekday').mean()['isFraud'])\n\nplt.ylim(0, 0.04)\nplt.xlabel('Encoded day')\nplt.ylabel('Fraction of fraudulent transactions')","f80f807c":"train['hours'] = make_hour_feature(train)\nplt.plot(train.groupby('hours').mean()['isFraud'], color='k')\nax = plt.gca()\nax2 = ax.twinx()\n_ = ax2.hist(train['hours'], alpha=0.3, bins=24)\nax.set_xlabel('Encoded hour')\nax.set_ylabel('Fraction of fraudulent transactions')\n\nax2.set_ylabel('Number of transactions')","ffe8341a":"Next we create a feature which encodes the (relative) hour of the day: ","3bb4ca33":"## Motivation\n\nAt a high level, one can observe there is a periodicity to the number of transactions. They vary both over a one day period and potentially over a week.\n\nBelow, we show a histogram of the number of transactions per time interval to display this periodicity.","7e40ba3e":"# Conclusion\n\nThe day of the week does not seem like a very powerful feature, however the hour of the day is very likely to be a useful feature to include in models.","b7f8d8a6":"Wow! Clearly the time of day has a strong dependence on whether the transaction is fraudulent and will likely make a good feature for our machine learning models.\n\nPhysically, the higher fraction of fraudulent transactions coincides with when there are a low number of transactions. This likely reflects international fraud: e.g., card details being used by a third-party in a fraudulent way in a country different to where the card was issued.  \n\nGoing forward, this is a feature you can use in your models and it will likely be a good predictor of the target.","e916e25f":"Next we use our 'make_day_feature' function to create our new feature. We use the offset parameter to change what we define as the 'start' of the day. \n\nAs we can see, there is not a significant correlation on the day of the week and whether a transaction is fraudulent. This feature on is unlikely to be useful."}}