{"cell_type":{"d7d4ba48":"code","1294100f":"code","e9579c09":"code","239458fd":"code","a836e6ce":"code","f7d164b0":"code","a735e92e":"code","ec6cf75a":"code","ce8eec06":"code","7d392926":"code","6b6729fd":"code","8d14626f":"code","002d3573":"code","0173f3e1":"code","7655b74f":"code","21bc6425":"code","914a7fea":"code","c730e24b":"code","bd3d3a9c":"code","91c27426":"code","a4ac53c6":"code","142dda08":"code","2455df62":"code","ba950fd4":"code","a6dc86ca":"code","cbaaab4a":"code","73e3c33d":"code","8c386193":"code","ebcf5aab":"markdown","f9090ae6":"markdown","fbe58a0c":"markdown","cc819dd8":"markdown","f51a6169":"markdown","18cb9834":"markdown","c01f592e":"markdown","c086cf98":"markdown","002cab39":"markdown","950565a8":"markdown","643616db":"markdown","82454f6f":"markdown"},"source":{"d7d4ba48":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nplt.style.use(\"seaborn-whitegrid\")\nimport seaborn as sns\nfrom collections import Counter\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","1294100f":"train_df = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_df = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")\ntest_PassengerId = test_df[\"PassengerId\"]","e9579c09":"train_df.columns","239458fd":"train_df.head()","a836e6ce":"train_df.describe()","f7d164b0":"def bar_plot(variable):\n    \"\"\"\n    input: variable ex:\"Sex\"\n    output: bar plot and value count\n    \"\"\"\n    # get feature\n    var = train_df[variable]\n    \n    # count number of categorical variable(value\/sample)\n    varValue = var.value_counts()\n    \n    #visualize\n    plt.figure(figsize = (9,3))\n    plt.bar(varValue.index, varValue)\n    plt.xticks(varValue.index,varValue.index.values)\n    plt.ylabel(\"Frequency\")\n    plt.title(variable)\n    plt.show()\n    print(\"{}: \\n {}:\".format(variable, varValue))\n        \n","a735e92e":"category1 = [\"Survived\",\"Sex\",\"Pclass\",\"Embarked\",\"SibSp\",\"Parch\"]\nfor c in category1:\n    bar_plot(c)\n","ec6cf75a":"category2 = [\"Cabin\",\"Name\",\"Ticket\"]\nfor c in category2:\n    print(\"{}: \\n\".format(train_df[c].value_counts()))","ce8eec06":"def plot_hist(variable):\n    plt.figure(figsize =(9,3))\n    plt.hist(train_df[variable], bins =50)\n    plt.xlabel(variable)\n    plt.ylabel(\"Frequency\")\n    plt.title(\"{} distribution with hist\".format(variable))\n    plt.show()","7d392926":"numericVar = [\"Fare\",\"Age\",\"PassengerId\"]\nfor n in numericVar:\n    plot_hist(n)","6b6729fd":"#Pclass vs Survived\ntrain_df[[\"Pclass\",\"Survived\"]].groupby([\"Pclass\"], as_index = False).mean().sort_values(by=\"Survived\", ascending = False)","8d14626f":"#Sex vs Survived\ntrain_df[[\"Sex\",\"Survived\"]].groupby([\"Sex\"], as_index = False).mean().sort_values(by=\"Survived\", ascending = False)","002d3573":"#SibSp vs Survived\ntrain_df[[\"SibSp\",\"Survived\"]].groupby([\"SibSp\"], as_index = False).mean().sort_values(by=\"Survived\", ascending = False)","0173f3e1":"#Parch vs Survived\ntrain_df[[\"Parch\",\"Survived\"]].groupby([\"Parch\"], as_index = False).mean().sort_values(by=\"Survived\", ascending = False)","7655b74f":"def detect_outliers(df, features):\n    outlier_indices= []\n    for c in features:\n        # 1st quartile\n        Q1 = np.percentile(df[c], 25)\n        #3rd quartile\n        Q3 = np.percentile(df[c], 75)\n        #IQR\n        IQR = Q3-Q1\n        #Outlier step\n        outlier_step = IQR*1.5\n        #detect outlier and their indeces\n        outlier_list_col =df[(df[c]<Q1 - outlier_step) | (df[c]> Q3+outlier_step )].index\n        #store indice\n        outlier_indices.extend(outlier_list_col)\n        \n    outlier_indices = Counter(outlier_indices)\n    multiple_outliers = list(i for i , v in outlier_indices.items() if v >2)\n    return multiple_outliers\n        ","21bc6425":"train_df.loc[detect_outliers(train_df, [\"Age\",\"SibSp\",\"Parch\",\"Fare\"])]","914a7fea":"#drop outliers\ntrain_df = train_df.drop(detect_outliers(train_df, [\"Age\",\"SibSp\",\"Parch\",\"Fare\"]), axis = 0).reset_index(drop = True)","c730e24b":"train_df_len = len(train_df)\ntrain_df = pd.concat([train_df, test_df], axis = 0).reset_index(drop = True)","bd3d3a9c":"train_df.columns[train_df.isnull().any()]","91c27426":"train_df.isnull().sum()","a4ac53c6":"train_df[train_df[\"Embarked\"].isnull()]","142dda08":"train_df.boxplot(column = \"Fare\", by = \"Embarked\")\nplt.show()\n","2455df62":"train_df.boxplot(column = \"Age\", by = \"Embarked\")\nplt.show()","ba950fd4":"train_df[\"Embarked\"] = train_df[\"Embarked\"].fillna(\"C\")\n","a6dc86ca":"train_df[train_df[\"Embarked\"].isnull()]","cbaaab4a":"train_df[train_df[\"Fare\"].isnull()]\n","73e3c33d":"train_df[\"Fare\"] = train_df[\"Fare\"].fillna(np.mean(train_df[train_df[\"Pclass\"] == 3][\"Fare\"]))","8c386193":"train_df[train_df[\"Fare\"].isnull()]","ebcf5aab":"<a id=\"4\"><\/a>\n## Catogarical Variable","f9090ae6":"<a id=\"9\"><\/a>\n## Find Missing Value","fbe58a0c":"<a id=\"5\"><\/a>\n## Numerical Variable","cc819dd8":"<a id=\"3\"><\/a>\n# Univariate Variable Analysis\n  * Catogarical Variable: Survived, Sex, Pclass, Embarked, Cabin, Ticket, Name, Sibsp and Parch\n  * Numerical Variable: Age, Fare and PassengerId\n","f51a6169":"<a id=\"10\"><\/a>\n## Fill Missing Value\n* Embarked has 2 missing value\n* Fare has only 1","18cb9834":"* float64(2): Fare and Age\n* int64(5):pclass, sibsp, parch, survived and PassengerId\n* object(5): cabin, embarked, name, sex, ticket","c01f592e":"<a id=\"8\"><\/a>\n# Missing Value\n* Find Missing Value\n* Fill Missing Value","c086cf98":"<a id=\"1\"><\/a>\n# Load and Check Data\n","002cab39":"### INTRODUCTION\n\nThe titanic accident occurred in 1912. It is a very famous and catastrophic accident. 1502 of the 2224 passengers and crew died.\n\n<font color= \"blue\">\nContent\n    \n    \n    \n    \n1. [Load and Check Data](#1)\n2. [Variable Description](#2)\n    * [Univariate Variable Analysis](#3)\n        * [Catogarical Variable Analysis](#4)\n        * [Numerical Variable Analysis](#5)\n3. [Basic Data Analysis](#6)\n4. [Outlier Detection](#7)\n5. [Missing Value](#8)\n    * [Find Missing Value](#9)\n    * [Fill Missing Value](#10)\n    \n     \n              ","950565a8":"<a id=\"7\"><\/a>\n# Outlier Detection","643616db":"<a id=\"6\"><\/a>\n# Basic Data Analysis\n\n* Pclass - Survived\n* Sex - Survived\n* SibSp - Survived\n* Parch - Survived\n","82454f6f":"<a id=\"2\"><\/a>\n# Variable Description\n\n\n  \n     1.PassengerId: Un\u0131qe id number to each passenger\n     2.Survived: Passenger survived(1) or died(0)\n     3.Pclass: Passenger class\n     4.Name: name\n     5.Sex: Gender of Passenger\n     6.Age: Age of Passenger\n     7.SibSp: Number of siblings\/ spouses\n     8.Parch: Number of parents\/ children\n     9.Ticket: Ticket number\n     10.Fare:Amount of money spent on ticket\n     11.Cabin:Cabin Category \n     12.Embarked:Port where passenger embarked(C = Cherbourg, Q = Queenstown, S = Southampton)\n  "}}