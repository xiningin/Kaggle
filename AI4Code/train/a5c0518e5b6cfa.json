{"cell_type":{"27bf327b":"code","a6e4f9f7":"code","8e413e28":"code","18ccbe3a":"code","3d0d98a7":"code","8566b86a":"code","1e293227":"markdown"},"source":{"27bf327b":"import warnings\nwarnings.simplefilter('ignore')\n\nimport gc\n\nimport numpy as np\nimport pandas as pd\npd.set_option('max_columns', None)\nfrom tqdm.notebook import tqdm\n\nimport joblib\nimport lightgbm as lgb\nimport pickle","a6e4f9f7":"lgb_model_0 = joblib.load('..\/input\/lightgbm-5folds-baseline\/lgb_0.pkl')\nlgb_model_1 = joblib.load('..\/input\/lightgbm-5folds-baseline\/lgb_0.pkl')\nlgb_model_2 = joblib.load('..\/input\/lightgbm-5folds-baseline\/lgb_0.pkl')\nlgb_model_3 = joblib.load('..\/input\/lightgbm-5folds-baseline\/lgb_0.pkl')\nlgb_model_4 = joblib.load('..\/input\/lightgbm-5folds-baseline\/lgb_0.pkl')","8e413e28":"import numpy as np\nfrom sklearn.decomposition import PCA","18ccbe3a":"pca =  pickle.load(open('..\/input\/lightgbm-5folds-baseline\/pca.sav', 'rb'))","3d0d98a7":"import ubiquant\nenv = ubiquant.make_env()  \niter_test = env.iter_test()","8566b86a":"for (test_df, sample_prediction_df) in iter_test:\n    feature_names = list(filter(lambda x: x not in ['row_id', 'time_id', 'investment_id'], test_df.columns))\n    test_df[feature_names[:50]] = pca.transform(test_df[feature_names])\n    test_df.drop(feature_names[50:], axis=1, inplace = True)\n    try:\n        test_df.drop(['row_id'], axis=1, inplace=True)\n    except:\n        print('already dropped')\n    pred_0 = lgb_model_0.predict(test_df)\n    pred_1 = lgb_model_1.predict(test_df)\n    pred_2 = lgb_model_2.predict(test_df)\n    pred_3 = lgb_model_3.predict(test_df)\n    pred_4 = lgb_model_4.predict(test_df)\n    pred = (pred_0 + pred_1 + pred_2 + pred_3 + pred_4) \/ 5\n    sample_prediction_df['target'] = pred\n    env.predict(sample_prediction_df) ","1e293227":"train code: https:\/\/www.kaggle.com\/hengzheng\/lightgbm-5folds-baseline\n\nchange to \n\n- `kfold = GroupKFold(n_splits=5)`\n- `kfold.split(train[feature_names], train[ycol], train['time_id'])`"}}