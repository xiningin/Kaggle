{"cell_type":{"d401b524":"code","8c846cf3":"code","43d0df9e":"code","38e21e8e":"code","45f0ee92":"code","bcffc738":"code","bfc0fa67":"code","f25d684f":"code","69f1fa62":"code","c892d332":"code","9c70db78":"code","d170e810":"code","2a308461":"code","b213ee2e":"code","311c8190":"code","6f2d469b":"code","50177701":"code","ac316e8e":"code","94590cb0":"markdown","dfb3c019":"markdown","9c248495":"markdown","d10e7c28":"markdown","a7a2ba5a":"markdown","5d88d0e6":"markdown","ed550647":"markdown","d3bcefde":"markdown","4fe85290":"markdown"},"source":{"d401b524":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","8c846cf3":"import pandas as pd\nfrom sklearn.svm import SVC\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","43d0df9e":"PATH_RED_WINE = '..\/input\/wineQualityReds.csv'\nPATH_WHITE_WINE = '..\/input\/wineQualityWhites.csv'","38e21e8e":"reds = pd.read_csv(PATH_RED_WINE, index_col=0)","45f0ee92":"# Check distribution of quality classes\nsns.catplot(x=\"quality\", kind=\"count\", palette=\"ch:.25\", data=reds);","bcffc738":"# Plot features\ng = sns.PairGrid(reds)\ng.map_diag(sns.kdeplot)\ng.map_offdiag(plt.scatter);","bfc0fa67":"# Split between features and label\ny = reds['quality'].values\nX = reds.drop(axis=1, labels=['quality'])","f25d684f":"# Normalize features\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX[X.columns] = scaler.fit_transform(X[X.columns])","69f1fa62":"sns.distplot(X['fixed.acidity']);","c892d332":"sns.distplot(X['alcohol']);","9c70db78":"# Compute correlation matrix\ncorr = X.corr()\n\n# Generate matrix for the upper triangle\nmask = np.zeros_like(corr, dtype=np.bool)\nmask[np.triu_indices_from(mask)] = True\n\nsns.set(style=\"white\")\n\n# Setup matplotlib figure\nf, ax = plt.subplots(figsize=(11,9))\n\n# Generate diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\nsns.heatmap(corr, mask=mask, square=True, cmap=cmap, center=0, linewidths=0.5, cbar_kws={\"shrink\": .5});","d170e810":"# Test and training validation sets\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0, stratify=y)","2a308461":"from sklearn.model_selection import GridSearchCV\n\nparameters = {\n    'kernel': ['linear', 'poly', 'rbf'],\n    'C': [0.001, 0.01, 0.1, 1, 2, 5, 10, 20, 50, 100],\n    'gamma': [0.01, 0.1, 0.5, 1]\n}\n\nsvc = SVC(gamma='scale', random_state=8)\nclf = GridSearchCV(svc, param_grid=parameters, cv=3)\nclf.fit(X_train, y_train)","b213ee2e":"# Best estimator\nclf.best_estimator_","311c8190":"print(\"Train: \", clf.score(X_train, y_train))\nprint(\"Test:  \", clf.score(X_test, y_test))","6f2d469b":"# Score versus C value\nax = sns.lineplot(x=clf.cv_results_['param_C'] ,y=clf.cv_results_['mean_test_score']);\nax.set(xlabel='C value', ylabel='Score')\nplt.show()","50177701":"# Score vs selected kernel\nax = sns.lineplot(x=clf.cv_results_['param_kernel'] ,y=clf.cv_results_['mean_test_score']);\nax.set(xlabel='Kernel', ylabel='Score')\nplt.show()","ac316e8e":"# Score vs Gamma value\nax = sns.lineplot(x=clf.cv_results_['param_gamma'] ,y=clf.cv_results_['mean_test_score']);\nax.set(xlabel='Gamma', ylabel='Score')\nplt.show()","94590cb0":"### Using SVM","dfb3c019":"##  Classifier modelling","9c248495":"## EDA\nThe distribution of samples for the different quality values is not uniform, this will be take into account when dividing the dataset in training and validation.","d10e7c28":"## Load libraries","a7a2ba5a":"## Dataset explanation\nModeling wine preferences by data mining from physicochemical properties.\n\n- *fixed.acidity*: most acids involved with wine or fixed or nonvolatile (do not evaporate readily)\n- *volatile.acidity*: the amount of acetic acid in wine, which at too high of levels can lead to an unpleasant, vinegar taste\n- *citric.acid*: found in small quantities, citric acid can add 'freshness' and flavor to wines\n- *residual.sugar*: the amount of sugar remaining after fermentation stops, it's rare to find wines with less than 1 gram\/liter and wines with greater than 45 grams\/liter are considered sweet\n- *chlorides*: the amount of salt in the wine\n- *free.sulfur.dioxide*: the free form of SO2 exists in equilibrium between molecular SO2 (as a dissolved gas) and bisulfite ion; it prevents microbial growth and the oxidation of wine\n- *total.sulfur.dioxide*: amount of free and bound forms of S02; in low concentrations, SO2 is mostly undetectable in wine, but at free SO2 concentrations over 50 ppm, SO2 becomes evident in the nose and taste of wine\n- *density*: the density of water is close to that of water depending on the percent alcohol and sugar content\n- *pH*: describes how acidic or basic a wine is on a scale from 0 (very acidic) to 14 (very basic); most wines are between 3-4 on the pH scale\n- *sulphates*: a wine additive which can contribute to sulfur dioxide gas (S02) levels, wich acts as an antimicrobial and antioxidant\n- *alcohol*: the percent alcohol content of the wine\n- *quality*: score between 0 and 10","5d88d0e6":"## Normalize features","ed550647":"# Wine Quality dataset analysis","d3bcefde":"## Read data","4fe85290":"## Split dataset into training and validation"}}