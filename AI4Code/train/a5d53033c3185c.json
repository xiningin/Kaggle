{"cell_type":{"78f6e45c":"code","8713912a":"code","f541741d":"code","db1854a8":"code","ce85b6e3":"code","3939f05b":"code","18328473":"code","7975df85":"code","26e69700":"code","f830ef65":"code","8d0ab0e0":"code","74054f3c":"code","82097a1d":"markdown","7a4b7574":"markdown","e9508375":"markdown","f78b3863":"markdown","06c95c11":"markdown","6cce2e0f":"markdown","2dfe0890":"markdown","50112828":"markdown","e08650c9":"markdown","2e26f9c6":"markdown","5be59dd7":"markdown"},"source":{"78f6e45c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","8713912a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nfrom sklearn.model_selection import train_test_split #split data to test and train data \nfrom sklearn.linear_model import LogisticRegression # Logistic Regression model\nfrom sklearn.metrics import classification_report #evaluate the model\nimport matplotlib.pyplot as plt #visualisation ","f541741d":"#get the data path\nad_path=\"..\/input\/advertising\/advertising.csv\"\n\n#get the data\nad_data=pd.read_csv(ad_path)\n\n#show the 5 rows of ad_data\nad_data.head()","db1854a8":"ad_data.describe()","ce85b6e3":"#The outcome \ny=ad_data[\"Clicked on Ad\"]\n# The features \nX= ad_data[[\"Daily Time Spent on Site\",\"Age\",\"Area Income\",\"Daily Internet Usage\",\"Male\"]]","3939f05b":"#33% of data is used for test the rest of data is used for training our model \nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=1)","18328473":"#create an instance of Logistic regression model \nlgmodel=LogisticRegression()\n\n#fit the model on the training set\nlgmodel.fit(X_train,y_train)","7975df85":"predictions =lgmodel.predict(X_test)","26e69700":"#Print a text report showing the main classification metrics\nprint(classification_report(y_test,predictions))","f830ef65":"final_predictions = lgmodel.predict(X)","8d0ab0e0":"predic = pd.DataFrame({'Predict_Click on Ad': final_predictions})\noutput=pd.concat([X,predic], axis=1)\noutput.head()","74054f3c":"output.to_csv('Ad_predictions.csv', index=False)\nprint(\"Your output was successfully saved!\")","82097a1d":"# Bonus\nFit the model on the entire data and save the predictions on csv file ","7a4b7574":"Here is the [documentation](https:\/\/scikit-learn.org\/stable\/modules\/model_evaluation.html#classification-report) of the classification report ","e9508375":"* Train and fit a logistic regression model on the training set","f78b3863":"# Get the data\n* Import Libraries","06c95c11":"# Logistic Regression model\n* Chose the features ","6cce2e0f":"* Split the data","2dfe0890":"* Evaluation","50112828":"* Read the cvs file and set it to a dataframe called ad_data","e08650c9":"# Description \nThis notebook allows you to create a logistic regression model in order  to predict whether a particular internet user will click or not on an advertising. We will work with this [dataset](https:\/\/www.kaggle.com\/fayomi\/advertising)","2e26f9c6":"# Prediction & Evaluations\n* Prediction using the testing set","5be59dd7":"* show statistics information about numerical columns"}}