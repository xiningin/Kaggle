{"cell_type":{"11dad999":"code","d40f6d45":"code","eba54ec6":"code","f1204e07":"code","d775f207":"code","52497ca6":"code","a900a8b4":"code","6072d26e":"code","abb2cf21":"code","013c2441":"code","66ac32d0":"code","ad90d6b9":"code","5941f08c":"markdown","3e034679":"markdown","a470b415":"markdown","276b769c":"markdown","e7991c8e":"markdown","a485baa4":"markdown"},"source":{"11dad999":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\nimport matplotlib.pyplot as plt\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","d40f6d45":"from ipywidgets import interact, Select, HBox, VBox,IntSlider,SelectMultiple","eba54ec6":"DF_players=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/players.csv')\nDF_ScoutingData=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/PFFScoutingData.csv')\nDF_Tracking2019=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2019.csv')\nDF_Tracking2020=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2020.csv')\nDF_Tracking2018=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/tracking2018.csv')\nDF_games=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/games.csv')\nDF_plays=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/plays.csv')\nDF_Tracking2019=DF_Tracking2019.dropna(subset=['nflId'])\nDF_Tracking2020=DF_Tracking2020.dropna(subset=['nflId'])\nDF_Tracking2018=DF_Tracking2018.dropna(subset=['nflId'])\nDF_Tracking2020=DF_Tracking2020[DF_Tracking2020.event!='None']\nDF_Tracking2018=DF_Tracking2018[DF_Tracking2018.event!='None']\nDF_Tracking2019=DF_Tracking2019[DF_Tracking2019.event!='None']\nDF_tracking=pd.concat([DF_Tracking2018,DF_Tracking2019,DF_Tracking2020],axis=0)\ndel DF_Tracking2018, DF_Tracking2020, DF_Tracking2019","f1204e07":"#to investigate who kicker make some events.\n# plt.bar(DF_tracking.displayName.value_counts().index,DF_tracking.displayName.value_counts())\nDF_Players_Tracking=pd.DataFrame(DF_tracking.groupby(['nflId', 'event']).count()['time']).reset_index().pivot(index='nflId', columns='event')\nDF_Players_Tracking=DF_Players_Tracking.time\ndisplay(DF_Players_Tracking)","d775f207":"DF_players=pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2022\/players.csv')\nDF_players=pd.merge(left=DF_players,right=DF_Players_Tracking,on='nflId')\nDF_players.to_csv('\/kaggle\/working\/Players_events.csv')","52497ca6":"def event_scores(col1):\n    plt.barh(DF_players[[\"displayName\",col1]].sort_values(col1,ascending=False).head(10).displayName,\n        DF_players[[\"displayName\",col1]].sort_values(col1,ascending=False).head(10)[col1])\n    plt.show()\n# Select(description='Players Name',options=DF_players.displayName.unique())\nevent_name=Select(description='event Name',options=np.sort(DF_Players_Tracking.columns))\ninteract(event_scores, col1=event_name)","a900a8b4":"DF_players.height=DF_players[DF_players.height.str.contains('-')==True].height.str.split('-',expand=True)[0].astype(float)*0.305+DF_players[DF_players.height.str.contains('-')==True].height.str.split('-',expand=True)[1].astype(float)*0.0254","6072d26e":"# SL=DF_players.loc[DF_players.Position=='SS',:].select_dtypes(float).median()\n# SL[SL!=0]\n# DF_players.loc[DF_players.Position=='SS',SL[SL!=0].index]\n# DF_players.Position.unique()\nDF_players.groupby(['Position']).mean().drop('nflId',axis=1).to_csv('result_each_position.csv')\nDF_players.groupby(['Position']).mean().drop('nflId',axis=1)","abb2cf21":"SL=DF_players.loc[DF_players.Position=='SS',:].select_dtypes(float).median()\nSL[SL>1]\n# DF_players.loc[DF_players.Position=='SS',SL[SL!=0].index]","013c2441":"# DF_plays=pd.merge(left=DF_plays,right=DF_players,left_on='kickerId', right_on='nflId')\n# del DF_players","66ac32d0":"#this data is that tracking data, plays data, and player's data was connected.\nDF_plays=pd.merge(left=DF_plays,right=DF_Players_Tracking,left_on='kickerId', right_on='nflId')","ad90d6b9":"# #\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30c7\u30fc\u30bf\u304b\u3089\u51fa\u73fe\u56de\u6570\u3092\u8abf\u3079\u308b\n# DF_tracking.nflId.value_counts()","5941f08c":"# 1. Dataframe was installed from input data","3e034679":"# 3.visualization","a470b415":"I found height insert error (such as 73). so I delete them...","276b769c":"(B) average height and weight for each positon.","e7991c8e":"(A) Top 10 person for each events","a485baa4":"# 2. investigate which kicker make some event from players_tracking data"}}