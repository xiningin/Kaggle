{"cell_type":{"d763541c":"code","a1b1eb61":"code","1dd75bed":"code","c43358bb":"code","6e32a136":"code","bbe6fe80":"code","55a7b561":"code","5a314c7d":"code","a9d77d49":"code","fad77173":"markdown","8f830cc5":"markdown","2280780c":"markdown","640754ba":"markdown"},"source":{"d763541c":"import numpy as np\nimport pandas as pd\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a1b1eb61":"df_train = pd.read_csv('\/kaggle\/input\/nfl-big-data-bowl-2020\/train.csv', parse_dates=['TimeHandoff','TimeSnap'], infer_datetime_format=True, low_memory=False)","1dd75bed":"df_train.isnull().sum()","c43358bb":"df_train[['GameWeather','Temperature','Humidity','WindSpeed','WindDirection']] = df_train[['GameWeather','Temperature','Humidity','WindSpeed','WindDirection']].fillna(method='ffill')\n\ndef fill_stadiumtype(row):\n    if row['Stadium'] in ['StubHub Center','MetLife Stadium'] and pd.isnull(row['StadiumType']):\n        return 'Outdoor'\n    return row['StadiumType']\n\ndf_train.StadiumType = df_train.apply(fill_stadiumtype, axis=1)\ndf_train.StadiumType = df_train.StadiumType.fillna(method='ffill')\n\ndf_train.FieldPosition = df_train.FieldPosition.fillna('Middle')\n\ndf_train.OffenseFormation = df_train.OffenseFormation.fillna('SINGLEBACK')\n\ndefendersInTheBox = df_train.groupby(['Team','HomeTeamAbbr','VisitorTeamAbbr','DefensePersonnel']).DefendersInTheBox.median()\ndef fill_defendersinthebox(row):\n    if pd.isnull(row['DefendersInTheBox']):\n        return defendersInTheBox[row['Team']][row['HomeTeamAbbr']][row['VisitorTeamAbbr']][row['DefensePersonnel']]\n    return row['DefendersInTheBox']\ndf_train.DefendersInTheBox = df_train.apply(fill_defendersinthebox, axis=1)\n\ndf_train.Orientation = df_train.Orientation.fillna(df_train.Orientation.mean())\ndf_train.Dir = df_train.Dir.fillna(df_train.Dir.mean())","6e32a136":"df_train.isnull().sum()","bbe6fe80":"df_train.StadiumType.unique()","55a7b561":"stadiumtype_map = {\n    'Outdoor':'Outdoor','Outdoors':'Outdoor','Outddors':'Outdoor','Oudoor':'Outdoor','Ourdoor':'Outdoor','Outdor':'Outdoor','Outside':'Outdoor',\n    'Indoors':'Indoor','Indoor':'Indoor',\n    'Retractable Roof':'Retractable Roof',\n    'Retr. Roof-Closed':'Retr. Roof-Closed','Retr. Roof - Closed':'Retr. Roof-Closed','Retr. Roof Closed':'Retr. Roof-Closed',\n    'Retr. Roof-Open':'Retr. Roof-Open','Retr. Roof - Open':'Retr. Roof-Open',\n    'Open':'Open',\n    'Indoor, Open Roof':'Indoor, Open Roof',\n    'Indoor, Roof Closed':'Indoor, Roof Closed',\n    'Outdoor Retr Roof-Open':'Outdoor Retr Roof-Open',\n    'Dome':'Dome','Domed':'Dome',\n    'Domed, closed':'Domed, closed','Closed Dome':'Domed, closed','Dome, closed':'Domed, closed',\n    'Domed, Open':'Domed, Open','Domed, open':'Domed, Open',\n    'Heinz Field':'Heinz Field',\n    'Cloudy':'Cloudy',\n    'Bowl':'Bowl',\n}\ndf_train.StadiumType = df_train.StadiumType.map(stadiumtype_map)","5a314c7d":"possessionteam_map = {\n    'BLT':'BAL',\n    'CLV':'CLE',\n    'ARZ':'ARI',\n    'HST':'HOU'\n}\ndf_train.PossessionTeam = df_train.PossessionTeam.apply(lambda pt:possessionteam_map[pt] if pt in possessionteam_map.keys() else pt)","a9d77d49":"location_map = {\n    'Foxborough, MA':'Foxborough',\n    'Orchard Park NY':'Orchard Park','Orchard Park, NY':'Orchard Park',\n    'Chicago. IL':'Chicago','Chicago, IL':'Chicago',\n    'Cincinnati, Ohio':'Cincinnati','Cincinnati, OH':'Cincinnati',\n    'Cleveland, Ohio':'Cleveland','Cleveland, OH':'Cleveland','Cleveland,Ohio':'Cleveland','Cleveland Ohio':'Cleveland','Cleveland':'Cleveland',\n    'Detroit, MI':'Detroit','Detroit':'Detroit',\n    'Houston, Texas':'Houston','Houston, TX':'Houston',\n    'Nashville, TN':'Nashville',\n    'Landover, MD':'Landover',\n    'Los Angeles, Calif.':'Los Angeles','Los Angeles, CA':'Los Angeles',\n    'Green Bay, WI':'Green Bay',\n    'Santa Clara, CA':'Santa Clara',\n    'Arlington, Texas':'Arlington','Arlington, TX':'Arlington',\n    'Minneapolis, MN':'Minneapolis',\n    'Denver, CO':'Denver',\n    'Baltimore, Md.':'Baltimore','Baltimore, Maryland':'Baltimore',\n    'Charlotte, North Carolina':'Charlotte','Charlotte, NC':'Charlotte',\n    'Indianapolis, Ind.':'Indianapolis',\n    'Jacksonville, FL':'Jacksonville','Jacksonville, Fl':'Jacksonville','Jacksonville, Florida':'Jacksonville','Jacksonville Florida':'Jacksonville',\n    'Kansas City, MO':'Kansas City','Kansas City,  MO':'Kansas City',\n    'New Orleans, LA':'New Orleans','New Orleans, La.':'New Orleans','New Orleans':'New Orleans',\n    'Pittsburgh':'Pittsburgh','Pittsburgh, PA':'Pittsburgh',\n    'Tampa, FL':'Tampa',\n    'Carson, CA':'Carson',\n    'Oakland, CA':'Oakland',\n    'Seattle, WA':'Seattle','Seattle':'Seattle','Cleveland Ohio':'Seattle',\n    'Atlanta, GA':'Atlanta',\n    'East Rutherford, NJ':'East Rutherford','E. Rutherford, NJ':'East Rutherford','East Rutherford, N.J.':'East Rutherford',\n    'London, England':'London','London':'London',\n    'Philadelphia, Pa.':'Philadelphia','Philadelphia, PA':'Philadelphia',\n    'Glendale, AZ':'Glendale',\n    'Foxborough, Ma':'Foxborough',\n    'Miami Gardens, Fla.':'Miami Gardens','Miami Gardens, FLA':'Miami Gardens',\n    'Mexico City':'Mexico City',\n    \n}\ndf_train.Location = df_train.Location.map(location_map)","fad77173":"### Missing value","8f830cc5":"## Preprocess","2280780c":"## Outlier","640754ba":"## Load data"}}