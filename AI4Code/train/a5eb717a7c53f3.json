{"cell_type":{"632ef732":"code","6d16b973":"code","c0426b28":"code","0cc6f38e":"code","0446872e":"code","5368559d":"code","68266fac":"code","93f9b0d5":"code","f37f4c29":"code","870727c8":"code","ebfc5b4b":"code","66b9fd51":"code","60557894":"code","2f620b1a":"code","af56b09d":"code","fcd9273e":"code","7893c536":"code","4eaeedad":"code","5056d3b1":"code","7cf5af63":"code","b0e863b4":"code","b5b84150":"code","fa1c3c8c":"code","4d0d27b5":"code","476324e0":"markdown","c5bbc773":"markdown","396c2d57":"markdown","e4dd2f3f":"markdown"},"source":{"632ef732":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","6d16b973":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.metrics import classification_report, accuracy_score, confusion_matrix","c0426b28":"cv = CountVectorizer()\nnb = MultinomialNB()","0cc6f38e":"spam_data = pd.read_csv(\"\/kaggle\/input\/spam-text-message-classification\/SPAM text message 20170820 - Data.csv\")","0446872e":"spam_data.head()","5368559d":"ham = spam_data[spam_data[\"Category\"]==\"ham\"]\nham.count()","68266fac":"spam_data.count()","93f9b0d5":"spam = spam_data[spam_data[\"Category\"]==\"spam\"]\nspam.count()","f37f4c29":"sns.countplot(spam_data[\"Category\"])","870727c8":"spamHam_count = cv.fit_transform(spam_data[\"Message\"])\nspamHam_count.toarray()","ebfc5b4b":"print(cv.get_feature_names())","66b9fd51":"label = spam_data[\"Category\"].values\nlabel","60557894":"nb.fit(spamHam_count, label)","2f620b1a":"test_sample = [\"hi i will call you later\",\"you have won a reward worth rs 1lakh!!!\"]\ntest_sample = cv.transform(test_sample)\n","af56b09d":"test_predict = nb.predict(test_sample)\ntest_predict","fcd9273e":"X = spamHam_count\ny = label","7893c536":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size = 0.2)","4eaeedad":"nb.fit(X_train,y_train)","5056d3b1":"y_train_predict = nb.predict(X_train)\ny_train_predict","7cf5af63":"score = accuracy_score(y_train,y_train_predict)\nscore","b0e863b4":"cm = confusion_matrix(y_train,y_train_predict)\nsns.heatmap(cm, annot = True)","b5b84150":"y_test_predict = nb.predict(X_test)\nscore = accuracy_score(y_test,y_test_predict)\nscore","fa1c3c8c":"cm = confusion_matrix(y_test,y_test_predict)\nsns.heatmap(cm , annot = True)","4d0d27b5":"print(classification_report(y_test,y_test_predict))","476324e0":"The data contains one set of SMS messages in English of 5,574 messages, tagged according being ham or spam.\nThe files contain one message per line. Each line is composed by two columns: v1 contains the label (ham or spam) and v2 contains the raw text.\nIn this Naive Bayes is used to classify the class (ham,spam) of incoming sms.\nThe accuracy of this model is 98%.","c5bbc773":"**Creating Objects**","396c2d57":"**Importing Libraries**\n","e4dd2f3f":"**Importing Data**"}}