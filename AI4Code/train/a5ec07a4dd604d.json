{"cell_type":{"b8774ac7":"code","f96e18a5":"code","c389cb4d":"code","0f5dc110":"code","607b65a6":"code","052efd67":"code","da17048e":"code","93b0b691":"code","5f6246fc":"code","914d6679":"code","8a8d2d84":"code","97fb54f7":"code","402287d1":"code","6a18984e":"code","b7712302":"code","e077bf69":"code","5ed26ff7":"code","86cd39a6":"markdown","910cb7d8":"markdown","e1ce6736":"markdown","3750e2a2":"markdown","1750fa0a":"markdown","f80e1870":"markdown"},"source":{"b8774ac7":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn import model_selection\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import StratifiedKFold\nimport matplotlib.pyplot as plt\nsns.set()\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","f96e18a5":"%matplotlib inline\ntrain = pd.read_csv(\"..\/input\/titanic\/train.csv\")\ntest= pd.read_csv(\"..\/input\/titanic\/test.csv\")","c389cb4d":"df = train\ndf.head()","0f5dc110":"print(df.info())","607b65a6":"print('Any missing values?')\ndf.isnull().sum()","052efd67":"# Class distribution\nprint(df.groupby('Survived').size())\nprint('')\nprint(df.Survived.value_counts(normalize=True))\n\n# Plot of class distribution\nsns.countplot(df['Survived'], label=\"Count\");","da17048e":"sns.set(font_scale=1.25)  \ncorrelation_matrix = df.corr()\nplt.figure(figsize=(10,10))\nax = sns.heatmap(correlation_matrix, vmax=1, square=True,annot=True,cmap='RdYlGn',annot_kws={'size': 13})\nplt.title('Correlation matrix between the features')\nplt.yticks(rotation=0)\nplt.xticks(rotation=90)\nplt.show()","93b0b691":"y = df.Survived\nX = df.drop(['Survived','Sex','Name','Ticket','Cabin','Embarked'],axis=1)\n","5f6246fc":"print('Any missing values?')\nX.isnull().sum()","914d6679":"X = df.drop(['Survived','Sex','Name','Ticket','Cabin','Embarked','Age'],axis=1)","8a8d2d84":"seed = 1\nX_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.3, random_state=seed, stratify=y)","97fb54f7":"print('Data file  :', X.shape, y.shape)\nprint('Train data :', X_train.shape, y_train.shape)\nprint('Test data  :', X_test.shape, y_test.shape)","402287d1":"from sklearn import preprocessing \nStandardisation = preprocessing.StandardScaler()\nclf = LogisticRegression(random_state=seed)\nX_scaled = preprocessing.scale(X_train)\nX_test_scaled=preprocessing.scale(X_test)\nX_train=X_scaled\nX_test=X_test_scaled\nclf.fit(X_train, y_train)","6a18984e":"# Find the predictions first:\ntrain_pred = clf.predict(X_train)\ntest_pred  = clf.predict(X_test)\n\nprint('Train acc:', clf.score(X_train, y_train))\nprint('Train acc:', accuracy_score(y_train, train_pred))\nprint('Test acc :', clf.score(X_test, y_test))","b7712302":"# The intercept\nclf.intercept_","e077bf69":"# All coefficients\nclf.coef_","5ed26ff7":"probs = clf.predict_proba(X_test)\n\ndata = {'Actual'   : y_test,\n        'Predicted': test_pred,\n        'Prob(0)'  : probs[:,0],\n        'Prob(1)'  : probs[:,1]  \n        }\n\ndfprobs = pd.DataFrame (data)\ndfprobs.sample(15)","86cd39a6":"### Load the dataset","910cb7d8":"### Load the libraries","e1ce6736":"# Build Model 101","3750e2a2":"### Building the model\n","1750fa0a":"### Correlation matrix","f80e1870":"### With this notebook, the model was build using titanic competition data. Variables with missing data are not used.It is a step in ***my learning journey*** towards how to build a simple model."}}