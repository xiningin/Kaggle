{"cell_type":{"382c1166":"code","56528e06":"code","db12d803":"code","efbbd10a":"code","f305cf59":"code","bc018ec0":"code","3bbcc617":"code","83dbff4f":"code","a94f48d0":"code","ded099c2":"code","01d07481":"code","051bb60a":"code","d1597f96":"code","2fab927b":"markdown","99643ce1":"markdown"},"source":{"382c1166":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\nplt.style.use('ggplot')\npd.set_option('display.max_rows', 500)\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","56528e06":"train_data = '..\/input\/titanic\/train.csv'\ntrain_data = pd.read_csv(train_data)","db12d803":"test_data = '..\/input\/titanic\/test.csv'\ntest_data = pd.read_csv(test_data)","efbbd10a":"train_data.head()","f305cf59":"test_data.head()","bc018ec0":"train_data.info()","3bbcc617":"train_data.isnull().sum() \/ len(train_data) * 100","83dbff4f":"train_data.describe(exclude = np.number).T","a94f48d0":"train_data.describe(include = np.number).T","ded099c2":"women = train_data.loc[train_data.Sex == 'female']['Survived']\nrate_women = sum(women)\/len(women)\n\nprint('% of women who survived: {}'.format(rate_women))","01d07481":"men = train_data.loc[train_data.Sex == 'male']['Survived']\nrate_men = sum(men)\/len(men)\n\nprint('% of men who survived: {}'.format(rate_men))","051bb60a":"from sklearn.ensemble import RandomForestClassifier","d1597f96":"y = train_data['Survived']\n\nfeatures = ['Pclass', 'Sex', 'SibSp', 'Parch']\nX = pd.get_dummies(train_data[features])\nX_test = pd.get_dummies(test_data[features])\n\nmodel = RandomForestClassifier(n_estimators = 100, max_depth = 5, random_state = 1)\n\nmodel.fit(X, y)\npredictions = model.predict(X_test)\n\noutput = pd.DataFrame({'PassengerId': test_data.PassengerId, 'Survived': predictions})\n\noutput.to_csv('my_submission.csv', index = False)\nprint('My firts submission was successfully saved!')\n\n\n\n\n\n\n\n\n","2fab927b":"### Test Data","99643ce1":"### Train Data"}}