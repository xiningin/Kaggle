{"cell_type":{"ff993a38":"code","2a447eac":"code","d38d9d5e":"code","661043d6":"code","6ac997e6":"code","174e39d7":"code","79fce78d":"code","de00a3fe":"code","b9c1ec57":"code","d555ae3b":"code","385d3459":"code","c0408746":"code","32e41b48":"code","cb2f4d58":"code","fbe3558c":"code","573f5ed6":"code","9cbb030c":"code","97bfece7":"code","23fe26cb":"markdown","62cc3862":"markdown","4451d415":"markdown","27474307":"markdown","97133f1a":"markdown","7d3cf8c6":"markdown","b129a432":"markdown","7bca791f":"markdown","7f43b6a2":"markdown","3163c870":"markdown","393620f3":"markdown","7e88fe30":"markdown","ef39e717":"markdown","c2a33e85":"markdown","9a2c499a":"markdown"},"source":{"ff993a38":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2a447eac":"import warnings\nwarnings.filterwarnings(\"ignore\")","d38d9d5e":"df=pd.read_csv('..\/input\/haberman.csv\/haberman.csv')","661043d6":"df.head()","6ac997e6":"df.shape","174e39d7":"df.status.value_counts()","79fce78d":"df.age.describe()","de00a3fe":"df.year.value_counts()","b9c1ec57":"df.nodes.describe()","d555ae3b":"import matplotlib.pyplot as plt\nimport seaborn as sns","385d3459":"counts,bin_edges=np.histogram(df.age,bins=10,density=False)\nprint(bin_edges)\npdf=counts\/sum(counts)\nprint(pdf)\ncdf=np.cumsum(pdf)\nprint(cdf)\n\nplt.plot(bin_edges[1:],pdf,label='pdf')\nplt.plot(bin_edges[1:],cdf,label='cdf')\nplt.legend()\nsns.set_style('whitegrid')\nsns.FacetGrid(df,hue='status',height=5).map(sns.distplot,'age').add_legend()\nplt.show()","c0408746":"counts,bin_edges=np.histogram(df.year,bins=10,density=False)\nprint(bin_edges)\npdf=counts\/sum(counts)\nprint(pdf)\ncdf=np.cumsum(pdf)\nprint(cdf)\n\nplt.plot(bin_edges[1:],pdf,label='pdf')\nplt.plot(bin_edges[1:],cdf,label='cdf')\nplt.legend()\nsns.set_style('whitegrid')\nsns.FacetGrid(df,hue='status',height=5).map(sns.distplot,'year').add_legend()\nplt.show()","32e41b48":"counts,bin_edges=np.histogram(df.nodes,bins=10,density=False)\nprint(bin_edges)\npdf=counts\/sum(counts)\nprint(pdf)\ncdf=np.cumsum(pdf)\nprint(cdf)\n\nplt.plot(bin_edges[1:],pdf,label='pdf')\nplt.plot(bin_edges[1:],cdf,label='cdf')\nplt.legend()\nsns.set_style('whitegrid')\n\nsns.FacetGrid(df,hue='status',height=5).map(sns.distplot,'nodes').add_legend()\nplt.show()\n\nplt.figure(2)\nsns.boxplot(data=df,y='nodes',x='status')\n\nplt.figure(3)\nsns.violinplot(data=df,y='nodes',x='status',size=5)\nplt.show()","cb2f4d58":"nodes_1=len(df[df['status']==1][df.nodes<=1])\n\ntotal=len(df[df.nodes<=1])\n\ndef survival_percentage(nodes_n,total):\n    survival_percentage= (nodes_n\/total)*100\n    return survival_percentage\nprint('for nodes<=1 survival_percentage is {}'.format(survival_percentage(nodes_1,total)))","fbe3558c":"nodes_0=len(df[df['status']==1][df.nodes==0])\ntotal=len(df[df.nodes==0])\nprint('for nodes=0 survival_percentage is {}'.format(survival_percentage(nodes_0,total)))","573f5ed6":"nodes_4=len(df[df['status']==1][df.nodes>4])\ntotal=len(df[df.nodes>4])\nprint('for nodes>4 survival_percentage is {}'.format(survival_percentage(nodes_4,total)))","9cbb030c":"df.status=df.status.astype('str')","97bfece7":"sns.set_style('whitegrid')\nsns.pairplot(df,hue='status')\nplt.show()","23fe26cb":"* Pair plots (combinations of the features) are not giving any additional information than univariate plots that we have seen earlier to draw insights from the data.","62cc3862":"* You can see that minimum age of the patient is 30 and maximum age is 78 and average age of the patients is around 52.","4451d415":"* There were 35 tested patients in the year 1958 and only 11 in the year 1969.","27474307":"# Pair Plots","97133f1a":"* From the box plot you can see that most of the survived people has 0 nodes or nodes<=1\n\n* And if the number of nodes is greater than 4 the patient has less chance of survival than non survival","7d3cf8c6":"* There are 305 data points and 4 features(age,year,nodes,status) for each data point.","b129a432":"* You can see that the minumum number of positive nodes is found to be 0 and the maximum of number of positve nodes is found to be 52.\n\n* You can also see that 25 percent of the patients has 0 positive nodes.\n\n* 50 percent of the patients has number of nodes $\\le1$\n\n* The average number of positive nodes that a patient has is found to be 4.","7bca791f":"* you can see that more number of tests were performed between the years 58 and 60 and the majority of the tested patients in this period were not survived.\n\n* During the years 60 to 62 majority of the tested people survived.","7f43b6a2":"## Univariate analysis on Nodes","3163c870":"## Univariate analysis on Year","393620f3":"* There are 2 classes \n\n    - 1 = Survived (Alive after 5 Years)\n    \n    - 2 = Not Survived (Died within 5 Years)\n    \n* This is imbalanced dataset since we have more number of points belongs to class 1 than class 2","7e88fe30":"## Univariate analysis on Age","ef39e717":"* You can clearly see that all the patients with age $\\le35$ are survived. \n\n* And majority of the of the people with age $\\le40$ are survived.\n\n* Patients with $40\\le age \\le60 $ are at high risk and have equal chances of survival or non-survival.","c2a33e85":"### Univariate Analysis(PDF, CDF, Box plot, Violin Plot)","9a2c499a":"### **High Level Statics**"}}