{"cell_type":{"166c2b37":"code","b3b1b149":"code","d00faefa":"code","9ca8c7c9":"code","763e2861":"code","b9bfbdd2":"code","1e319408":"code","3fce3df0":"code","630b2e0e":"code","36fddc2f":"code","ea016cfd":"code","df0f5cef":"code","10d304ae":"code","6ee29fce":"code","aa5424fb":"code","17a85fb3":"code","218cd2b9":"code","de8edb83":"code","a4ad80b2":"code","ec7cb8a8":"code","4d7a751a":"code","b4fdc14a":"code","cd1fd39e":"code","81ae6835":"code","dd5fa983":"code","76fac5fe":"code","840be2ac":"code","43ac0199":"markdown","a15a6d97":"markdown","6b970a6f":"markdown","30be3293":"markdown","f3227391":"markdown","7fa8b7ef":"markdown","5d0db87f":"markdown","75c12e2c":"markdown","ee466a03":"markdown","3beb3671":"markdown","04058c31":"markdown","8d1f9126":"markdown","a4ebc72c":"markdown","61818bad":"markdown","bcc9d325":"markdown","7c625c38":"markdown","cca388e8":"markdown","47164646":"markdown","51b236b6":"markdown","e904d8c7":"markdown","81fdd0f0":"markdown","6cd17b7f":"markdown"},"source":{"166c2b37":"\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestClassifier\nimport matplotlib.pyplot as plt\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b3b1b149":"train = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')\ntrain.head()","d00faefa":"train[['Sex','Survived' ]].groupby('Sex').count()","9ca8c7c9":"sns.countplot(x = 'Survived' ,data =train, hue = 'Sex')\nplt.show()","763e2861":"plt.hist(train.Age)","b9bfbdd2":"sns.catplot(x= 'Sex' , y ='Age', data = train, kind= 'box', col = 'Survived')","1e319408":"train.info()","3fce3df0":"train.Age = train.Age.fillna(train.Age.mean())","630b2e0e":"train.head()","36fddc2f":"test = pd.read_csv('\/kaggle\/input\/titanic\/test.csv')\ntest.head()","ea016cfd":"test.info()","df0f5cef":"test.Age = test.Age.fillna(test.Age.mean())\ntest.Fare = test.Fare.fillna(test.Fare.mean())","10d304ae":"test.info()","6ee29fce":"train.Sex = train.Sex.map({'male':1, 'female': 2})\ntrain.head()","aa5424fb":"train.Embarked = train.Embarked.map({'C':1, 'S':2, 'Q':3})\ntrain.head()","17a85fb3":"train.Embarked = train.Embarked.fillna(train.Embarked.mean())\ntrain.Embarked = train.Embarked.astype('int')\ntrain.head()","218cd2b9":"test.Sex = test.Sex.map({'male':1, 'female':2})\ntest.Embarked = test.Embarked.map({'C':1, 'S':2, 'Q':3})","de8edb83":"test.head()","a4ad80b2":"y = train.Survived","ec7cb8a8":"features = ['Pclass', 'Sex', 'Age','SibSp','Parch', 'Fare'] # 6 features","4d7a751a":"X = pd.get_dummies(train[features])","b4fdc14a":"X.head()","cd1fd39e":"X_test = pd.get_dummies(test[features])\nX_test.head()","81ae6835":"model = RandomForestClassifier(n_estimators=100, max_depth=5, random_state=1)","dd5fa983":"model.fit(X,y)","76fac5fe":"prediction = model.predict(X_test)\nprediction","840be2ac":"output = pd.DataFrame({'PassengerId': test.PassengerId, 'Survived': prediction})\noutput.to_csv('my_submission.csv', index=False)\nprint(\"Your submission was successfully saved!\")","43ac0199":"Get more information about the test columns.","a15a6d97":"Other simple histogram to find out the distribution of passengers depend on their age.","6b970a6f":"Simple visualization to know who survived between male and female.","30be3293":"Fill the missing values in Age and Fare columns.","f3227391":"Simple query to find out the number of male and female in the train file.","7fa8b7ef":"Assign the Survived column to y.","5d0db87f":"Assign the featured columns of train file to X.","75c12e2c":"# Training Data:\n* Define the model.","ee466a03":"Also one more plot by Boxplot to find out the survivors ( male and female )","3beb3671":"Before starting the training the the data, I should convert the string to integer.","04058c31":"# Exporting submission:\nSave your prediction to the sumission file.","8d1f9126":"Now read the test file.","a4ebc72c":"Check if the missing values were filled.","61818bad":"Training the train data.","bcc9d325":"Get more information about the train file to see the missing value and columns type.","7c625c38":"Again have to check.","cca388e8":"Fill the missing values in the Age column by the mean value.","47164646":"Assign the featured columns of the test file to X_test","51b236b6":"# Introduction:\nThis simple kernel is a useful for the new users and beginners in Kaggle. It is very easy to understand how to start your journey in kaggle.\nI meant to make it very easy to encourage you and  make it clear without any complications. \nI will try to optimize this kernal from time to time but will keep it simple as it is.\n\n","e904d8c7":"# Prediction:\n* Predict the X_test.","81fdd0f0":"Read the Train file.","6cd17b7f":"Specify the columns to be included in the training process."}}