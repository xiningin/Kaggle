{"cell_type":{"3dbf060d":"code","2b537956":"code","26462508":"code","8e1680a0":"code","9e5c0619":"code","2aaa391c":"code","68745fc7":"code","cc1eb6ea":"code","6ed74a51":"code","a5e7ef3b":"code","6e27e0c4":"code","a0970ecf":"code","02b4b12f":"code","572fcea9":"code","85b96e16":"code","6a12f14c":"code","f2f466fb":"code","93bf654c":"code","b91b80bf":"code","2ab967fb":"code","c7d77da8":"code","a80d1ffe":"code","b032e8ef":"code","12438ae8":"code","96c8bfde":"markdown","55b25126":"markdown","4554c843":"markdown","8e344d37":"markdown","169179c5":"markdown","ae30cd74":"markdown","0c53b1be":"markdown","4428d004":"markdown","2f51adf0":"markdown","304f56f0":"markdown","396e1c62":"markdown","f5d4c974":"markdown","115235d2":"markdown","5d518c46":"markdown","fc3eec81":"markdown","a72ec33e":"markdown","89b0192e":"markdown"},"source":{"3dbf060d":"!pip install tslearn","2b537956":"import tslearn\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom tslearn.clustering import TimeSeriesKMeans, silhouette_score\nfrom tslearn import metrics\nfrom tslearn.preprocessing import TimeSeriesScalerMinMax\nfrom tslearn.piecewise import PiecewiseAggregateApproximation\nimport warnings\nwarnings.filterwarnings('ignore')","26462508":"stocks_df = pd.read_csv(\"..\/input\/moroccan-stock-prices\/stocks.csv\")","8e1680a0":"stocks_df","9e5c0619":"stocks_df.date = pd.to_datetime(stocks_df.date, format='%d\/%m\/%Y')","2aaa391c":"(stocks_df.isnull().sum()*100 \/ stocks_df.shape[0]).sort_values(ascending = False).head(15)","68745fc7":"stocks_df.drop(columns = [\"SAMIR\", \"Diac Salaf\", \"Aradei Capital\", \"Mutandis\", \"Immr Invest\"], inplace = True)","cc1eb6ea":"stocks_df = stocks_df.ffill()\nstocks_df = stocks_df.bfill()","6ed74a51":"(stocks_df.isnull().sum()*100 \/ stocks_df.shape[0]).sort_values(ascending = False).head(15)","a5e7ef3b":"stocks_df","6e27e0c4":"stocks_df = stocks_df.resample('7D', on = 'date').first().reset_index(drop = True)","a0970ecf":"stocks_df.index = stocks_df.date","02b4b12f":"stocks_df.drop(\"date\", axis = 1, inplace = True)","572fcea9":"stocks_df","85b96e16":"stocks = stocks_df","6a12f14c":"fig, ax = plt.subplots(figsize=(8, 5))\nax.plot(stocks_df.index, stocks_df[\"MASI\"])\nax.grid()\nax.set_title('MASI Index Movements')\nax.set_ylabel('MASI')\nax.set_xlabel('date')\nfig.tight_layout();","f2f466fb":"cols = stocks_df.columns\n\nfig, axs = plt.subplots(10,7,figsize=(35,35))\nfor i in range(10):\n    for j in range(7):\n        axs[i, j].plot(stocks_df[cols[i*7+j]].values)\n        axs[i, j].set_title(cols[i*7+j])\nplt.show()","93bf654c":"ts = np.array(stocks.T).reshape(stocks.T.shape[0], stocks.T.shape[1], 1)\nts = TimeSeriesScalerMinMax().fit_transform(ts)","b91b80bf":"n_segments = 10\npaa = PiecewiseAggregateApproximation(n_segments = n_segments)\nts = paa.fit_transform(ts)","2ab967fb":"km = TimeSeriesKMeans(n_clusters = 4, random_state = 42, metric = 'dtw')\ny_pred = km.fit_predict(ts)\ns = silhouette_score(ts, y_pred, metric='dtw')\nprint(\"K-means metrics : \")\nprint(f\"Silhouette score = {s}, \\nInertia = {km.inertia_}\")","c7d77da8":"clusters_df = pd.DataFrame({'Company':stocks.columns, 'Cluster': y_pred}).sort_values(by = 'Cluster')\nclusters_df.reset_index(drop = True)","a80d1ffe":"for yi in range(4):\n    plt.subplot(3, 3, 4 + yi)\n    for xx in ts[y_pred == yi]:\n        plt.plot(xx.ravel(), \"k-\", alpha=.2)\n    plt.plot(km.cluster_centers_[yi].ravel(), \"r-\")\n    plt.xlim(0, ts.shape[1])\n    plt.ylim(-.5, 1.5)\n    plt.text(0.55, 0.85,'Cluster %d' % (yi),\n             transform=plt.gca().transAxes)\n    plt.gcf().set_size_inches(15, 15)\n    if yi == 1:\n        plt.title(\"DBA $k$-means\")\n","b032e8ef":"cluster_c = clusters_df[\"Cluster\"].value_counts().sort_index()\ncluster_n = [f\"Cluster{str(i)}\" for i in range(km.n_clusters)]\nfig, ax = plt.subplots(1, 1,figsize=(15,5))\nax.set_title(\"Cluster Distribution for KMeans\")\nax.bar(cluster_n, cluster_c)\nplt.show()","12438ae8":"colors = ['blue', 'green','red', 'black', 'orange', 'brown', 'y']\n\nfig, ax = plt.subplots(10, 7,figsize=(35,35))\nfor i in range(10):\n    for j in range(7):\n        try:\n            ax[i, j].plot(stocks[cols[i*7+j]].values, color = colors[y_pred[i*7+j]])\n            ax[i, j].set_title(f\"{cols[i*7+j]}, Cluster {y_pred[i*7+j]}\")\n        except:\n            fig.delaxes(ax[i, j])\n            continue\n\nplt.show()","96c8bfde":"We then visualize individual stocks, we see that not all stocks got affected by pandemic in the same way, some got hit and recovered some didn't and some even peaked during this period","55b25126":"the dataset consists of closing prices of over 70 moroccan stocks including the MASI index","4554c843":"# Visualization","8e344d37":"# Conclusion","169179c5":"We use a min max scaler of our time series because we are not interested in their overall value but rather we want to cluster them according to shape","ae30cd74":"# Moroccan Stock Prices - Time Series Clustering","0c53b1be":"as we can see from the chart our algorithm did pretty well seperating stocks according to these patterns:\n* Trending downward\n* Trending upward\n* Recovering from the pandemic\n* Peaked during the pandemic","4428d004":"If you found this notebook helpful in any way please upvote and star this [github repo](https:\/\/github.com\/pillarxyz\/moroccan-stocks-clustering) ","2f51adf0":"## Cleaning Data","304f56f0":"Our k-means model did accurately extract patterns about trends from the time series ","396e1c62":"### Formatting the date column","f5d4c974":"# Clustering","115235d2":"we remove columns having no data and then we fill the missing values with past or future values","5d518c46":"we resample our time series from daily to weekly data to reduce the noise","fc3eec81":"We then use a Piecewise Aggregate Approximation (PAA) for dimensionality reduction","a72ec33e":"# Reading Data","89b0192e":"We see a significant drop during the pandemic and a remarkable recovery afterwards"}}