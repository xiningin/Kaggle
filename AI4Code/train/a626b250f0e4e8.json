{"cell_type":{"e08b4531":"code","909380c7":"code","8c5b9fff":"code","d0b0176f":"code","5ed96938":"code","d86308f8":"code","dc1e28c5":"code","8ef9c224":"code","1f88387c":"code","f7524e1d":"code","99318782":"code","607f368e":"code","87c702f0":"code","c5cea4d6":"code","10980e92":"code","49466fdd":"code","a17ed62e":"code","d649ecbf":"code","21602cd7":"code","72451ad9":"code","e959ef4d":"markdown","92045280":"markdown","650c0030":"markdown","431e23f7":"markdown","a1d7b94d":"markdown","7681da8a":"markdown","92225c5e":"markdown","e518abfa":"markdown","007ad238":"markdown","3525eb92":"markdown"},"source":{"e08b4531":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","909380c7":"import xgboost as xgb\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split,cross_val_score\nimport random, math\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import RepeatedStratifiedKFold\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.feature_selection import chi2, SelectKBest\nfrom lightgbm import LGBMClassifier","8c5b9fff":"data= pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')","d0b0176f":"data.head(4)","5ed96938":"data['output'].unique()","d86308f8":"data.info()","dc1e28c5":"data.isnull().sum()","8ef9c224":"plt.figure(1, figsize=(6, 4))\nsns.countplot(data['caa'])\nplt.figure(2, figsize=(6, 4))\nsns.countplot(data['cp'])","1f88387c":"plt.title(\"The output label category (1 = stroke, 0 = no stroke)\")\nsns.countplot(data['output'])\nplt.xlabel(\"Labels\")","f7524e1d":"data['output'].value_counts()","99318782":"plt.pie(x=data.sex.value_counts(), labels=data.sex.value_counts().index,radius=2, autopct=\"%1.0f%%\")","607f368e":"corr=data.corr()","87c702f0":"corr","c5cea4d6":"\nplt.figure(figsize=(30,10))\nsns.heatmap(corr, cmap='coolwarm', annot = True)\nplt.show()\n","10980e92":"X= data.drop('output', axis=1)\ny= data['output']","49466fdd":"model = xgb.XGBClassifier()\ncv = RepeatedStratifiedKFold(n_splits=5, n_repeats=2, random_state=1)\nn_scores = cross_val_score(model, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))","a17ed62e":"model2 = LGBMClassifier()\ncv = RepeatedStratifiedKFold(n_splits=10, n_repeats=2, random_state=1)\nn_scores = cross_val_score(model2, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))","d649ecbf":"from sklearn.linear_model import LogisticRegression\nmodel3= LogisticRegression()\nn_scores = cross_val_score(model3, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))","21602cd7":"from sklearn.ensemble import RandomForestClassifier\nmodel4= RandomForestClassifier()\nn_scores = cross_val_score(model4, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))\n","72451ad9":"from sklearn.tree import DecisionTreeClassifier\nmodel5= DecisionTreeClassifier()\nn_scores = cross_val_score(model5, X, y, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')\nprint('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))\n","e959ef4d":"Some data visualization:\n","92045280":"<h2 style='background:gray;color:white; border:0'> <center> Heart attack analysis prediction<\/center><\/h2>","650c0030":"\n    \n1. [Importing libraries](#1)<a href='1' ><\/a> <br>\n1. [Explanatory data analysis (EDA)](#2) <a href= '2'> <\/a> <br>\n    2.1. Data reading <br>\n    2.2. Data statistics <br>\n    2.3. Data visualization <br>\n1. [Modeling](#3) <a href= '3'> <\/a> <br>\n    3.1. XGB model with 5 fold cross validation <br>\n    3.2. LGB model with 5 fold cross validation <br>\n    3.3. Logistic regression model with 5 fold cross validation <br>\n    3.4. Random forest model with 5 fold cross validation <br>\n    3.5. Descision tree model with 5 fold cross validation <br>\n1. [Model evaluation](#4) <a href='4'> <\/a> <br>\n1. [Conclusion](#5) <a href= '5'> <\/a> <br>\n","431e23f7":"<div style=\"color:black;\n           display:fill;\n           border-radius:5px;\n           background-color:Beige;\n           font-size:110%;\n           letter-spacing:0.5px\">\n    <center>\n    <p style=\"color:black;padding:10px\">\n        In this notebook i will be evaluating the performace of some machine learning models on the heart attack prediction data set.\n    <\/p>\n    <\/center>\n<\/div>","a1d7b94d":"**Conclusion:**\n\nIn this note book, I have evaluated the performace of couple of machine learning models in their basic forms, using five fold cross validation. The logistic regression outperformed the others.  \n","7681da8a":"<div style=\"color:black;\n           display:fill;\n           border-radius:5px;\n           font-size:100%;\n           text-align:center;\n            letter-spacing:0.5px\"> <a id='1'><\/a>\n<h2>Importing Libraries <\/h2>\n<\/div>","92225c5e":"<div>\n    <center>\n        <img src='https:\/\/i.pinimg.com\/originals\/c1\/13\/27\/c1132786380aa926155a80b54912352f.gif'>\n    <\/center>\n<\/div>","e518abfa":"Check for imbalancity in the target:","007ad238":"<!-- <h2><center>Table of contents<\/center><\/h2> -->\n<div style=\"color:black;\n           display:fill;\n           border-radius:5px;\n           font-size:100%;\n           text-align:center;\n           letter-spacing:1px\">\n    <h2>Table of contents<\/h2>\n<\/div>","3525eb92":"<div style=\"color:black;\n           display:fill;\n           border-radius:5px;\n           font-size:100%;\n           text-align:center;\n            letter-spacing:0.5px\"> <a id='1'><\/a>\n<h2>Explanatory data analysis (EDA) <\/h2>\n<\/div>"}}