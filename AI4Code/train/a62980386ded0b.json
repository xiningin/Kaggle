{"cell_type":{"cf8c1894":"code","6a811a42":"code","8a0d5791":"code","178d5c0a":"code","f118b5d2":"code","8f5adcd4":"code","38f172c1":"code","50577874":"code","d776e5a7":"code","06311d49":"code","fa9e6cf4":"code","95ef41fa":"code","3776358b":"code","d5b55866":"code","67022820":"code","c9442555":"code","a933d372":"code","369c8822":"code","ca943a84":"code","2c047ccb":"code","76ebddb1":"code","47b49226":"code","74bbbbba":"code","b7ec4103":"code","edc8a2fe":"code","45cf57d1":"code","b6f3d87e":"code","ba502ace":"code","9244d33f":"code","bcfdaecb":"code","a2e0ad12":"code","0ce80c9a":"code","7dd01ed6":"code","6781f832":"code","6702a152":"code","a7d38a05":"code","a6171fcf":"code","7344e902":"code","a7a255dc":"code","1e3c73ba":"code","98b10980":"code","609575c4":"code","eebfcf13":"markdown","f134e283":"markdown","23e56418":"markdown","12240c40":"markdown","5a84601d":"markdown","8c628dda":"markdown","1a286f84":"markdown","18278fa2":"markdown","cd357647":"markdown","6d797bbd":"markdown","667634ea":"markdown","7e49efb1":"markdown","711e023c":"markdown","18b290f8":"markdown"},"source":{"cf8c1894":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\n# for dirname, _, filenames in os.walk('\/kaggle\/input'):\n#     for filename in filenames:\n#         print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6a811a42":"import matplotlib.pyplot as plt","8a0d5791":"import seaborn as sns","178d5c0a":"seg_df = pd.read_csv('..\/input\/ranzcr-clip-catheter-line-classification\/train_annotations.csv')\nseg_df","f118b5d2":"seg_df['label'].value_counts()","8f5adcd4":"plt.rcParams[\"figure.figsize\"] = (25, 10)\nsns.barplot(x=seg_df['label'].value_counts().index.values, y=seg_df['label'].value_counts())","38f172c1":"from PIL import Image","50577874":"def get_point(chosen, seg_df):\n    points = []\n    for i, point in enumerate(seg_df.iloc[chosen,2].split('],')):\n        if i==len(seg_df.iloc[chosen,2].split('],'))-1:\n            xy = tuple([int(x) for x in point[2:-2].split(', ')])\n            print(xy)\n            points.append(xy)\n        else:\n            xy = tuple([int(x) for x in point[2:].split(', ')])\n            print(xy)\n            points.append(xy)\n    return points","d776e5a7":"from PIL import ImageDraw\n\ndef draw_point(points, img):\n    draw = ImageDraw.Draw(img)\n    draw.line(points, fill=255, width=5)\n#     for point in points:\n#         draw.ellipse([(point[0]-2, point[1]-2), (point[0]+2, point[1]+2)], fill='white')\n    plt.imshow(img, cmap='gray')","06311d49":"chosen = seg_df.loc[seg_df['label']=='CVC - Normal'].index.values[0]","fa9e6cf4":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","95ef41fa":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","3776358b":"chosen = seg_df.loc[seg_df['label']=='CVC - Borderline'].index.values[0]","d5b55866":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","67022820":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","c9442555":"chosen = seg_df.loc[seg_df['label']=='CVC - Abnormal'].index.values[0]","a933d372":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","369c8822":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","ca943a84":"chosen = seg_df.loc[seg_df['label']=='ETT - Normal'].index.values[0]","2c047ccb":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","76ebddb1":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","47b49226":"chosen = seg_df.loc[seg_df['label']=='ETT - Borderline'].index.values[0]","74bbbbba":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","b7ec4103":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","edc8a2fe":"chosen = seg_df.loc[seg_df['label']=='ETT - Abnormal'].index.values[0]","45cf57d1":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","b6f3d87e":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","ba502ace":"chosen = seg_df.loc[seg_df['label']=='NGT - Normal'].index.values[0]","9244d33f":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","bcfdaecb":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","a2e0ad12":"chosen = seg_df.loc[seg_df['label']=='NGT - Borderline'].index.values[0]","0ce80c9a":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","7dd01ed6":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","6781f832":"chosen = seg_df.loc[seg_df['label']=='NGT - Abnormal'].index.values[0]","6702a152":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","a7d38a05":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","a6171fcf":"chosen = seg_df.loc[seg_df['label']=='NGT - Incompletely Imaged'].index.values[0]","7344e902":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","a7a255dc":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","1e3c73ba":"chosen = seg_df.loc[seg_df['label']=='Swan Ganz Catheter Present'].index.values[0]","98b10980":"img = Image.open(f'..\/input\/ranzcr-clip-catheter-line-classification\/train\/{seg_df.iloc[chosen,0]}.jpg')\nplt.imshow(img, cmap='gray')","609575c4":"points = get_point(chosen, seg_df)\ndraw_point(points, img)","eebfcf13":"## label Bar Plot","f134e283":"# NGT - Abnormal","23e56418":"# ETT - Normal","12240c40":"# CVC - Abnormal","5a84601d":"## annotation visualization","8c628dda":"# ETT - Borderline","1a286f84":"# NGT - Borderline","18278fa2":"# NGT - Normal","cd357647":"# CVC - Normal","6d797bbd":"# ETT - Abnormal","667634ea":"# CVC - Borderline","7e49efb1":"# train_annotation","711e023c":"# NGT - Incompletely Imaged","18b290f8":"# Swan Ganz Catheter Present"}}