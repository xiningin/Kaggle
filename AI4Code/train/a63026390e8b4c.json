{"cell_type":{"0bd783b1":"code","c7976855":"code","11b416bd":"code","c877df99":"code","0d057482":"code","6d9721b9":"code","8038e18d":"code","6e45ecad":"code","c73dde87":"code","c2ac3c0d":"code","c5735faf":"code","8704aa78":"code","1e6c7680":"code","bd2e00ca":"code","23486157":"code","24ff338f":"markdown","5b5ee6da":"markdown","e7f95f62":"markdown","6f3e3af5":"markdown"},"source":{"0bd783b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\n# Standard libraries\nimport os\nimport json\nimport numpy as np\nimport pandas as pd\n\n# Visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","c7976855":"trainDf = pd.read_csv(\"..\/input\/train\/train.csv\")\ntestDf = pd.read_csv(\"..\/input\/test\/test.csv\")","11b416bd":"trainDf.describe()","c877df99":"trainDf.head(5)","0d057482":"trainDf.columns     ## So here are the Columns ","6d9721b9":"sns.pairplot(trainDf)","8038e18d":"trainDf.columns","6e45ecad":"features=['Type','Age', 'Breed1', 'Breed2', 'Gender', 'Color1', 'Color2',\n       'Color3', 'MaturitySize', 'FurLength', 'Vaccinated', 'Dewormed',\n       'Sterilized', 'Health', 'Quantity', 'Fee', 'State']    ## here Gender 1= male 2= female.     Choose some random feature. Check for it.","c73dde87":"from sklearn.metrics import cohen_kappa_score\nfrom sklearn.metrics import make_scorer\nfrom sklearn.model_selection import cross_val_score\n\n\ndef metric(y1,y2,labels='AdoptionSpeed', weights='quadratic', sample_weight=None):\n    return cohen_kappa_score(y1,y2,labels=None,weights=None,sample_weight=None)","c2ac3c0d":" from sklearn.linear_model import LogisticRegression","c5735faf":"lrclf=LogisticRegression(multi_class='multinomial',solver ='newton-cg')","8704aa78":"lrclf.fit(trainDf[features], trainDf['AdoptionSpeed'])","1e6c7680":"metric(lrclf.predict(trainDf[features])[:50], trainDf['AdoptionSpeed'][:50])  ## OK this is all with the  logistic regression","bd2e00ca":"# Get and store predictions\npredictions = lrclf.predict(testDf[features])\nsubmissionLR = pd.DataFrame(data={\"PetID\" : testDf[\"PetID\"], \n                                   \"AdoptionSpeed\" : predictions})\nsubmissionLR.to_csv(\"submission.csv\", index=False)","23486157":"submissionLR.head()","24ff338f":"A simple elementry guide to start off with this competition.","5b5ee6da":"With the Count in Describe we can see here are no missing values.","e7f95f62":"Here we can see 5 different adoptation speed ,  First we will try Logistic regression (multinomial) ...    Using LR just to give a simple guide for start.   Explore the data and Go for the right algorith technique.\n\nNow Let us identify useful colomn for training.","6f3e3af5":"Lets check the Distribution now"}}