{"cell_type":{"d05a12d4":"code","e66db442":"code","b2839c61":"code","a1ec7375":"code","caabe2df":"code","d9803305":"code","623112a9":"code","d3951417":"code","0b4e7837":"code","d44ff432":"code","f5634793":"code","6acc603c":"code","5f992622":"code","0a781183":"code","667d10c7":"code","440a5947":"code","97f59c25":"markdown","a347850d":"markdown","c7198b0a":"markdown"},"source":{"d05a12d4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e66db442":"df=pd.read_csv('..\/input\/spotify-dataset-19212020-160k-tracks\/data_by_genres.csv')\ndf.head()","b2839c61":"nom_colonnes=list(df.columns)","a1ec7375":"genres=list(df.genres)\nindice_lignes=[]\nfor i in range (len(genres)):\n    if 'rap' in genres[i]:\n        indice_lignes.append(i)\n\nindice_lignes2=[]\nfor i in range (len(genres)):\n    if 'classic' in genres[i]:\n        indice_lignes2.append(i)","caabe2df":"tab=[]\nfor i in indice_lignes:\n    tab.append(list(df.iloc[i]))\nfor i in indice_lignes2:\n    tab.append(list(df.iloc[i]))","d9803305":"df2=pd.DataFrame(tab,columns=nom_colonnes)","623112a9":"df2","d3951417":"from sklearn.cluster import KMeans\nimport seaborn as sns\nfrom sklearn.preprocessing import normalize","0b4e7837":"df3=df2.drop('genres',axis=1)","d44ff432":"kmeans = KMeans(\n    init=\"random\",\n    n_clusters=2,\n    n_init=10,\n    max_iter=300,\n    random_state=42\n)","f5634793":"donnees=normalize(df3, axis=0, norm='max')","6acc603c":"kmeans.fit(donnees)","5f992622":"kmeans.inertia_","0a781183":"kmeans.labels_\nliste_labels=list(kmeans.labels_)","667d10c7":"resultats=[[],[]]\nfor i in range (202):\n    if liste_labels[i]==0:\n        resultats[0].append(df2.loc[i]['genres'])\n    else :\n        resultats[1].append(df2.loc[i]['genres'])\nprint ('Groupe 1 :',resultats[0],'\\n \\n \\n Groupe 2:',resultats[1])","440a5947":"nombre_total=202\nnombre_total_rap=82\nnombre_total_classic=120\nn_vrai_classic=0\nn_faux_classic=0\nfor genres in resultats[0]:\n    if 'classic' in genres:\n        n_vrai_classic+=1\n    else :\n        n_faux_classic+=1\n\npourcentage_vrai_positif=(n_vrai_classic+(nombre_total_rap-n_faux_classic))\/202*100\nprint('Pourcentage de chansons bien class\u00e9es:' ,pourcentage_vrai_positif,'%')","97f59c25":"On cherche toutes les musiques rap et classiques du dataframe","a347850d":"Je cr\u00e9er une liste pour visualiser les deux clusters","c7198b0a":"Calcul du pourcentage de chansons bien class\u00e9es"}}