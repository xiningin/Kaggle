{"cell_type":{"54967f9c":"code","b7d723d0":"code","39071bec":"code","4cf3173c":"code","d80cd4de":"code","d3e1d9d5":"code","4fd3521a":"code","a5aac2b8":"code","07f72e64":"code","7ef2e3c3":"code","eaa58466":"code","3cf206a6":"code","78bf9c87":"code","a21a6f0c":"code","e4d1cde9":"code","e9178950":"code","b53b04cd":"code","b20b240b":"code","03168810":"code","b5274b62":"code","acd80d5f":"code","6941bf93":"code","0bc7e0ca":"code","0d2be028":"code","181eb090":"code","0ca4ef52":"code","5984f978":"code","8b6d7426":"code","70b717ed":"code","ebf69e79":"code","18ea195b":"code","51ffafe1":"code","9bb04950":"code","5b0365b7":"code","7759b6a3":"code","2770de5c":"code","8ae0868e":"code","7ddceb3f":"code","1c382314":"code","ff9571e7":"code","28c7e4c7":"code","153bfb32":"code","1e0b3a5b":"code","1fb14239":"code","ca912093":"code","23246a71":"code","f3fe678b":"code","1f25134e":"code","5e12b7f8":"code","4c25454e":"code","9b815489":"code","9a5d9d6a":"code","1ac02e48":"code","2bb14a49":"code","09142410":"code","e7d933ee":"code","9a2b9048":"markdown","1e396905":"markdown","49423f59":"markdown","3444cd97":"markdown","81723fa7":"markdown","5e76a92e":"markdown","e7d26619":"markdown","9fc00a67":"markdown","bf319246":"markdown","51530577":"markdown","1d5ef023":"markdown","1e348247":"markdown","42197a38":"markdown","ab636b06":"markdown","cbe600fe":"markdown","1643549f":"markdown","e5d4b305":"markdown","bdba3c81":"markdown","6eaa9344":"markdown","94a3e83e":"markdown","d922f77d":"markdown","f31b3763":"markdown","bb945ed8":"markdown","fe260f19":"markdown","51d8965e":"markdown","a8b59b52":"markdown","8bbf3dad":"markdown","9726b2b7":"markdown","5211be19":"markdown","53373ca3":"markdown","332f9c2f":"markdown","dcbed4c3":"markdown","36e96f9d":"markdown","c8ad7799":"markdown","57140a24":"markdown","cd5e8fac":"markdown","43727c92":"markdown","346e51ed":"markdown","bcf67ec2":"markdown","dce803a1":"markdown","7223788d":"markdown"},"source":{"54967f9c":"#importing the necessary libraries\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error as mae\nfrom sklearn.metrics import r2_score as r2\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import LabelEncoder","b7d723d0":"#reading the StudentsPerformance.csv file and viewing it\nstudent = pd.read_csv(\"..\/input\/students-performance-in-exams\/StudentsPerformance.csv\")\nstudent.head()","39071bec":"#Identifying the columns present in the dataset\nstudent.columns","4cf3173c":"#This displays general information about the dataset with informations like the column names their data types \n#and the count of non-null values for every column.\nstudent.info()","d80cd4de":"#checking if there is any column which contains null values\nstudent.isna().sum()","d3e1d9d5":"#this will help in knowing the number of categories present in each categorical variable\nstudent.select_dtypes('object').nunique()","4fd3521a":"#to find out the various categories present in the different categorical variable\nprint(\"Categories in 'gender' variable: \",end=\" \")\nprint(student['gender'].unique())\nprint(\"Categories in 'race\/ethnicity' variable: \",end=\" \")\nprint(student['race\/ethnicity'].unique())\nprint(\"Categories in 'parental level of education' variable: \",end=\" \")\nprint(student['parental level of education'].unique())\nprint(\"Categories in 'lunch' variable: \",end=\" \")\nprint(student['lunch'].unique())\nprint(\"Categories in 'test preparation course' variable: \",end=\" \")\nprint(student['test preparation course'].unique())","a5aac2b8":"#This displays information about the quantitive\/numerical columns, information like count, mean, standard deviation, minimum value, maximum value \n#and the quartiles are displayed \nstudent.describe()","07f72e64":"#Total score = math score + reading score + writing score\nstudent['Total Score']=student['math score']+student['reading score']+student['writing score']","7ef2e3c3":"#Criterion for getting a passing grade\ndef result(TS,MS,WS,RS ):\n    if(TS>120 and MS>40 and WS>40 and RS>40):\n        return 'P'\n    else:\n        return 'F'\n    ","eaa58466":"student['Pass\/Fail']=student.apply(lambda x: result(x['Total Score'],x['math score'],x['writing score'],x['reading score']),axis = 1 )","3cf206a6":"student.head()","78bf9c87":"#Displays the number of students passed and failed according to the passing criterion\nstudent['Pass\/Fail'].value_counts()","a21a6f0c":"plt.pie(student['Pass\/Fail'].value_counts(),labels=['Pass','Fail'],autopct='%1.1f%%')\nplt.title('Percentage of students Passed\/Failed')","e4d1cde9":"sns.countplot(student['Pass\/Fail'])\nplt.title('Bar-plot representing the count of students passed\/failed')","e9178950":"# this displays the number of male and female students in the class\nstudent['gender'].value_counts()","b53b04cd":"#to find out the percentage of female students passed\nprint(\"Percentage of female students passed: {0:.2f}%\"\n    .format((student[(student['gender']=='female') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['gender']=='female'].shape[0])*100))\n\n#to find out the percentage of male students passed\nprint(\"Percentage of male students passed: {0:.2f}%\"\n    .format((student[(student['gender']=='male') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['gender']=='male'].shape[0])*100))","b20b240b":"sns.countplot(student['Pass\/Fail'],hue = student['gender'])\nplt.ylabel('Number of students')","03168810":"fig,ax = plt.subplots(3,1, figsize = (5,10))\nsns.barplot(x=student['gender'],y=student['math score'], ax=ax[0], linewidth=2.5)\nsns.barplot(x=student['gender'],y=student['reading score'], ax=ax[1],linewidth=2.5)\nsns.barplot(x=student['gender'],y=student['writing score'], ax=ax[2],linewidth=2.5)\nplt.tight_layout()","b5274b62":"fig,ax = plt.subplots(3,1, figsize = (5,10))\nsns.boxplot(x=student['gender'],y=student['math score'],ax=ax[0])\nsns.boxplot(x=student['gender'],y=student['reading score'],ax=ax[1])\nsns.boxplot(x=student['gender'],y=student['writing score'],ax=ax[2])\nplt.tight_layout()","acd80d5f":"#number of students belonging to each race\/ethnic group\nstudent['race\/ethnicity'].value_counts()","6941bf93":"#number of students passed across the race\/ethnic groups\nprint(\"The number of students passed across various race\/ethnic group : \")\nprint(student['race\/ethnicity'].loc[student['Pass\/Fail']=='P'].value_counts())\nsns.countplot(student['race\/ethnicity'].loc[student['Pass\/Fail']=='P'])\nplt.xticks(rotation = 45)","0bc7e0ca":"sns.countplot(student['race\/ethnicity'],hue=student['Pass\/Fail'])\nplt.ylabel('Number of students')","0d2be028":"#to find out the percentage of students passed with the race\/ethnicity  as 'group A'\nprint(\"Percentage of students passed with the race\/ethnicity  as 'group A': {0:.2f}%\"\n    .format((student[(student['race\/ethnicity']=='group A') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['race\/ethnicity']=='group A'].shape[0])*100))\n\n#to find out the percentage of students passed with the race\/ethnicity  as 'group B'\nprint(\"Percentage of students passed with the race\/ethnicity  as 'group B': {0:.2f}%\"\n    .format((student[(student['race\/ethnicity']=='group B') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['race\/ethnicity']=='group B'].shape[0])*100))\n\n#to find out the percentage of students passed with the race\/ethnicity  as 'group C'\nprint(\"Percentage of students passed with the race\/ethnicity  as 'group C': {0:.2f}%\"\n    .format((student[(student['race\/ethnicity']=='group C') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['race\/ethnicity']=='group C'].shape[0])*100))\n\n#to find out the percentage of students passed with the race\/ethnicity  as 'group D'\nprint(\"Percentage of students passed with the race\/ethnicity  as 'group D': {0:.2f}%\"\n    .format((student[(student['race\/ethnicity']=='group D') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['race\/ethnicity']=='group D'].shape[0])*100))\n\n#to find out the percentage of students passed with the race\/ethnicity  as 'group E'\nprint(\"Percentage of students passed with the race\/ethnicity  as 'group E': {0:.2f}%\"\n    .format((student[(student['race\/ethnicity']=='group E') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['race\/ethnicity']=='group E'].shape[0])*100))\n","181eb090":"fig, ax = plt.subplots(3,1, figsize=(8,12))\nsns.boxplot(x=student['race\/ethnicity'],y=student['math score'],ax=ax[0])\nsns.boxplot(x=student['race\/ethnicity'],y=student['reading score'],ax=ax[1])\nsns.boxplot(x=student['race\/ethnicity'],y=student['writing score'],ax=ax[2])\nplt.tight_layout()","0ca4ef52":"#number of students having parents with various edication level\nstudent['parental level of education'].value_counts()","5984f978":"#number of students passed across the parental levels of education \nprint(\"The number of students passed across the different parental levels of education: \")\nprint(student['parental level of education'].loc[student['Pass\/Fail']=='P'].value_counts())\nsns.countplot(student['parental level of education'].loc[student['Pass\/Fail']=='P'])\nplt.xticks(rotation = 45)","8b6d7426":"#to find out the percentage of students passed with the parental level of education as 'some college'\nprint(\"Percentage of students passed with the parental level of education as 'some college': {0:.2f}%\"\n    .format((student[(student['parental level of education']=='some college') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']=='some college'].shape[0])*100))\n\n#to find out the percentage of students passed with the parental level of education as 'associate's degree'\nprint(\"Percentage of students passed with the parental level of education as 'associate's degree': {0:.2f}%\"\n    .format((student[(student['parental level of education']==\"associate's degree\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']==\"associate's degree\"].shape[0])*100))\n\n#to find out the percentage of students passed with the parental level of education as 'high school'\nprint(\"Percentage of students passed with the parental level of education as 'high school': {0:.2f}%\"\n    .format((student[(student['parental level of education']==\"high school\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']==\"high school\"].shape[0])*100))\n\n#to find out the percentage of students passed with the parental level of education as 'some high school'\nprint(\"Percentage of students passed with the parental level of education as 'some high school': {0:.2f}%\"\n    .format((student[(student['parental level of education']==\"some high school\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']==\"some high school\"].shape[0])*100))\n\n#to find out the percentage of students passed with the parental level of education as 'bachelor's degree'\nprint(\"Percentage of students passed with the parental level of education as 'bachelor's degree': {0:.2f}%\"\n    .format((student[(student['parental level of education']==\"bachelor's degree\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']==\"bachelor's degree\"].shape[0])*100))\n\n#to find out the percentage of students passed with the parental level of education as 'master's degree'\nprint(\"Percentage of students passed with the parental level of education as 'master's degree': {0:.2f}%\"\n    .format((student[(student['parental level of education']==\"master's degree\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['parental level of education']==\"master's degree\"].shape[0])*100))","70b717ed":"plt.figure(figsize= (10,8))\nsns.countplot(student['parental level of education'],hue=student['Pass\/Fail'])\nplt.xticks(rotation=90)\nplt.ylabel('Number of students')","ebf69e79":"plt.figure(figsize=(10,5))\nplt.title(\"Total Score across parental level of education of students\")\nsns.barplot(x=student['parental level of education'],y=student['Total Score'])","18ea195b":"#number of students having 'standard' lunch vs. number of students having 'free\/reduced' lunch\nstudent['lunch'].value_counts()","51ffafe1":"#number of students passed across the type of lunch \nstudent['lunch'].loc[student['Pass\/Fail']=='P'].value_counts()","9bb04950":"sns.countplot(student['lunch'],hue=student['Pass\/Fail'])","5b0365b7":"#to find out the percentage of students passed with the lunch type as 'standard'\nprint(\"Percentage of students passed with the lunch type as 'standard': {0:.2f}%\"\n    .format((student[(student['lunch']=='standard') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['lunch']=='standard'].shape[0])*100))\n\n#to find out the percentage of students passed with the lunch type as 'free\/reduced'\nprint(\"Percentage of students passed with the lunch type as 'free\/reduced': {0:.2f}%\"\n    .format((student[(student['lunch']==\"free\/reduced\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['lunch']==\"free\/reduced\"].shape[0])*100))\n","7759b6a3":"plt.figure(figsize=(5,5))\nplt.title(\"Total Score across the type of lunch of the students\")\nsns.barplot(x=student['lunch'],y=student['Total Score'],hue=student['gender'])","2770de5c":"#number of students who completed the 'Test preparation course' vs. the students who didn't complete the course\nstudent['test preparation course'].value_counts()","8ae0868e":"#number of students passed across the status of completion of the test preparation course \nprint(\"The number of students passed across the status of completion of the test preparation course:\")\nprint(student['test preparation course'].loc[student['Pass\/Fail']=='P'].value_counts())\n","7ddceb3f":"#to find out the percentage of students passed with the test preparation course status as 'none'\nprint(\"Percentage of students passed with the test preparation course status as 'none': {0:.2f}%\"\n    .format((student[(student['test preparation course']=='none') & (student['Pass\/Fail']=='P')].shape[0]\/student[student['test preparation course']=='none'].shape[0])*100))\n\n#to find out the percentage of students passed with the test preparation course status as 'completed'\nprint(\"Percentage of students passed with the test preparation course status as 'completed': {0:.2f}%\"\n    .format((student[(student['test preparation course']==\"completed\") & (student['Pass\/Fail']=='P')].shape[0]\/student[student['test preparation course']==\"completed\"].shape[0])*100))\n","1c382314":"plt.figure(figsize=(5,5))\nsns.barplot(x=student['test preparation course'],y=student['Total Score'])\nplt.title(\"Total Score across the status of test prep course\")\nplt.xlabel('Status of Test Prep Course')","ff9571e7":"fig, ax = plt.subplots(3,1, figsize=(8,12))\nsns.regplot(x=student['reading score'],y=student['writing score'],ax = ax[0])\nsns.regplot(x=student['reading score'],y=student['math score'],ax = ax[1])\nsns.regplot(x=student['writing score'],y=student['math score'],ax=ax[2])\nplt.tight_layout()","28c7e4c7":"sns.heatmap(student.corr(), cmap =\"Reds\")\nplt.xticks(rotation=90)","153bfb32":"X=student[['gender','race\/ethnicity','parental level of education','lunch','test preparation course']]\nX.head()","1e0b3a5b":"X_category = student[['gender','race\/ethnicity','parental level of education','lunch','test preparation course']]","1fb14239":"# Applying one-hot encoding to each column with categorical data\nOH_encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)","ca912093":"X_OH = pd.DataFrame(OH_encoder.fit_transform(X_category))\nX_OH.index = X.index #One-hot encoding removes the index so it's necessary to put them back\nX_OH.head()","23246a71":"#collecting the total score of the students from the dataset\ny=student['Pass\/Fail']\ny.head()","f3fe678b":"lb=LabelEncoder()\ny=lb.fit_transform(y)","1f25134e":"# Divide data into training and validation subsets\nX_train, X_valid, y_train, y_valid = train_test_split(X_OH, y, train_size=0.8, test_size=0.2,random_state=0)","5e12b7f8":"model = RandomForestRegressor()\nmodel.fit(X_train,y_train)","4c25454e":"#model predicting\npreds=model.predict(X_valid)#predictions made by the model","9b815489":"preds= np.where(preds<0.4,0,1)","9a5d9d6a":"preds","1ac02e48":"y_valid","2bb14a49":"#Calculating the Mean Absolute Error value\nmae(y_valid,preds)","09142410":"scores = -1 * cross_val_score(model, X_OH, y,cv=5,scoring='neg_mean_absolute_error')\nprint(\"MAE scores:\\n\", scores)","e7d933ee":"from sklearn.metrics import confusion_matrix\n\n# creating a confusion matrix\ncm = confusion_matrix(y_valid, preds)\n\n# printing the confusion matrix\nplt.rcParams['figure.figsize'] = (8, 8)\nsns.heatmap(cm, annot = True, cmap = 'Reds')\nplt.show()","9a2b9048":"Now lets try to visualize the performace of the students, sometimes visualization can help in exploring underlying trends\/relationships in a better way:","1e396905":"As can be observed from the above plot that there is some influence the parent's background have on the student's performance. As can be seen, that students having parents with master's degree performed better than other and students with parents having some high school level of education performed poorer than the other groups. ","49423f59":"Thus we can see that out of the 1000 students, 319 are from race group C, 262 are from group D,190 are from group B, 140 from group E and 89 are from the race group A. Now we will try to analyse how the students from the different race\/ethnic groups have performed compared to each other.","3444cd97":"As can be seen from the above plots that there is a strong correlation between the scores.\nTo visualize the correlation in a better way, we produce a heat-map:","81723fa7":"Thus among the 1000 students, 226 students have parents with 'some college' background, 222 with 'associate's degree',196 have 'high school' background, 179 have parents with 'some high school' background, 118 with 'bachelor's degree',59 with 'master's degree' background. Now we will try to analyze how the performance of the students vary depending on their parents educational background.","5e76a92e":"# ****Analyzing StudentPerformance.csv****","e7d26619":"So as we can see that there are no null values in any column of the dataset.","9fc00a67":"The first step is to import all the necessary libraries needed for performing the analysis:","bf319246":"Thus out of the 1000 students, 645 have a standard lunch and 355 have a free\/reduced lunch. Now we will analyze how the type of lunch varies the performance of the students.","51530577":"As the dataset contains both male and female students, we will try to analyze the variation of performance across the gender of the student and will try to findout if one gender performed better than the other","1d5ef023":"So as we have analysed the impact of different features on the student's performance and we observed that factors like 'gender', 'race\/ethinicty', 'lunch', 'test preparation course' and 'parental level of education' impacted the scores obtained by the students. \n\nNow we will try to train a model to be able to predict the **'Pass\/Fail'** status of students provided with the features impacting the score of the student.","1e348247":"Now using the newly added 'Pass\/Fail' column, we will count the number of students passed and failed according to the passing criterion:","42197a38":"As can be seen from the above barplots that the male students have performed better in maths whereas the female students have relatively performed better than the male students in both reading and writing exams.","ab636b06":"Now as we know the number of unique categories present in each of the categorical variable, it is important to see what are the unique categories present in each of them.","cbe600fe":"Thus out of the 1000 students, 642 students didn't complete the 'Test preparation course' and 358 students completed it.","1643549f":"We can observe from the above count plot that there is a variation between how both the genders performed and we can see that the male students have performed overall better than the female students, next we will try to analyze the performance of the students in the three different subjects and their variation across the gender.","e5d4b305":"As can be noted that the test preparation course has an impact on the performance of the students, 97.21% of the students who completed the 'Test Preparation Course'passed whereas 92.06% of the students who didn't complete 'Test Preparation Course' passed.","bdba3c81":"Let's check the dataset again with the newly added two columns 'Total Score' & 'Pass\/Fail'","6eaa9344":"Thus the above observation can also be noted in the above box-plots, 'group A' has a relatively poorer performance in all the three courses whereas in comparison 'group E' performs relatively better than the other groups.","94a3e83e":"We will also add a new column 'Pass\/Fail', which will basically indicate the status of the student i.e. whether they have passed(P) or failed(F). To decide whether a student have passed we are evaluatin a condition on the total score obtained by the student. We are assuming that the passing criterion if a student has a Total Score of 120 or above then they have Passed, otherwise, they Failed.","d922f77d":"As can be seen from the first five rows of the dataset, the dataset contains columns like 'gender', 'race\/ethnicity', 'parental level of education', 'lunch', 'test preparation course', 'math score', 'reading score',\t'writing score'","f31b3763":"Now we will try to evaluate the performace of our model by calculating the Mean Absolute Error  value and the R2 value","bb945ed8":"Therefore from the above analysis we can observe that the male students have overall performed relatively better than the female students","fe260f19":"Analysing the categorical variables:","51d8965e":"Now we are going to find out whether completing the 'Test Preparation Course' helps the students in performing better or not.","a8b59b52":"Next, trying to analyse whether the **ethnicity\/race** of the student plays any role in their performance.","8bbf3dad":"For better evaluation, we will perform cross validation and will try to obtain the Mean Absolute Error(MAE) value:","9726b2b7":"Now we will try to find the impact of the educational background of the parents on the students performance.","5211be19":"We will add a new feature(column) called 'Total Score' which will be basically the sum of the scores obtained in maths, writing and reading for every student. This feature will help in better analysing the overall performance of a student.","53373ca3":"So as we can observe from the above plot, the type of lunch has an impact on the scores of the students. The students with 'standard' lunch performed better than the student with 'free\/reduced' lunch.","332f9c2f":"As we know to train a model with categorical variables, they must be first converted into a form which can be utilized for the model fitting purpose. We have used the One Hot Encoding technique to transform the categorical variables.","dcbed4c3":"Now we will try to find and observe whether there is any correlation between how the students performed in the various courses.","36e96f9d":"Next we are going to see how the quality of lunch impacts the performance of the students:","c8ad7799":"As can be observed from the above heat-map that there is a strong correlation between 'reading score' and 'writing score'. The 'math score' is also correlated with the 'reading score' and 'writing score'","57140a24":"So according to the count, a total of 939 students have passed and 61 students have failed out of the 1000 students.","cd5e8fac":"Thus from the above analysis we can observe that the race\/ethnicity group 'group E' has performed better than all other groups and the group 'group A' has performed poorer than any other groups. It can also be observed that the performance of students in race\/ethinicity group gets better as we move 'group A' to 'group E'.","43727c92":"Exploring the 'StudentPerformance' dataset. ","346e51ed":"So as we can see that out of the 1000 students in the dataset, 518 are female and 482 are male. Thus the ratio of male and female students are almost uniform. Now we will try to findout how did the male & female students performed when compared to each other.","bcf67ec2":"Please upvote the notebook if you liked the analysis and feel free to share some feedbacks.","dce803a1":"The boxplots represent the performance of the male students vs. the performance of the female students in the three courses separately. As can be seen from the medians and the number of outliers, it can be concluded that the female students performed relatively poorer than the male students in maths but they out-performed the male students in both reading and writing scores. Thus we can conclude that, in this case the performance of a student in a course varies with the gender.","7223788d":"**Objective:** To draw inference about whether factors like gender of the student, the race\/ethnicity of the student, the level of education of their parents, the type of lunch they ate and whether the completition of test preparation course has any impact on the scores obtained by the student in the tests. \n\nSome of the questions that this analysis will try to answer are:\n\n1. Does the gender of student plays a role in how they perform in various courses.\n2. Does the educational background of the parents impact the students performance.\n3. Does the ethnicity of the student has an impact on their performance.\n4. Is completing the Test Preparation course help the students in performing better.\n5. Does the quality of lunch the students consume leaves an impact on how they perform.\n\nFinally, a model will be trained to predict how the students will perform given the factors influencing their performance and will also evaluate the performance of the model. "}}