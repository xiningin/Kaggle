{"cell_type":{"09172439":"code","4f1f9750":"code","7e5af144":"code","0b1d3aff":"code","7f09ea81":"code","4952e005":"code","840cba1e":"code","d7c07c19":"code","68c41760":"code","93836153":"code","3f78ff7c":"code","0c5055dd":"code","bfcbd352":"code","d2835eed":"code","37793563":"code","c31d026f":"code","0e53e557":"code","a6424b7e":"code","a3d02992":"code","11a31f96":"code","7bc97b13":"code","dee80ac0":"code","9f6803a2":"code","9d2a3bae":"code","155b1656":"code","78d66fa9":"code","7b361b9f":"code","225c3b9c":"code","ce107cee":"code","c2db8023":"code","68fb6d2a":"markdown","8d61e8b1":"markdown","95fb9309":"markdown","a325d57e":"markdown","f664c485":"markdown","7aa2255c":"markdown","f9d647b2":"markdown","ae02ab3d":"markdown","a3400c7b":"markdown","dc705036":"markdown","7af83485":"markdown","ad0608af":"markdown","bbac7d9f":"markdown","8aa8e588":"markdown","a7504a82":"markdown","3ea3bbb6":"markdown","f68f6dfa":"markdown","35b814a2":"markdown","0719c65c":"markdown"},"source":{"09172439":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","4f1f9750":"import matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.model_selection import cross_val_score, train_test_split, GridSearchCV\nfrom sklearn.pipeline import make_pipeline\nfrom xgboost import XGBRegressor\n\n%config InlineBackend.figure_format = 'retina'","7e5af144":"df = pd.read_csv('..\/input\/seoul-bike-sharing-demand-prediction\/SeoulBikeData.csv', encoding='unicode_escape')\ndf['Date'] = pd.to_datetime(df['Date'])\ndf.columns = ['Date', 'BikeCount', 'Hour', 'Temp', 'Humid', 'WindSpeed', 'Visibility', \n              'DewPTemp', 'SolarRad', 'Rainfall', 'Snowfall', 'Season', 'Holiday', 'Functioning']\n\ndf","0b1d3aff":"# Change holiday\/no holiday to yes\/no\nlabel = {'Holiday': {'Holiday': 'Yes', 'No Holiday': 'No'}}\n\ndf = df.replace(label)\n\ndf","7f09ea81":"# The record dates are weird. Dates are unsorted\ndf.plot(y='Date')","4952e005":"# Create hh:00:00 from hour columns\nhour_str = [str(hour)+':00:00' if hour>9 else '0'+str(hour)+':00:00' for hour in df['Hour']]\n\n# Add hh:00:00 after date columns\ndf['Date'] = [str(date)[:10]+' '+hour for date, hour in zip(df['Date'].values, hour_str)]\n\n# Convert to datetime\ndf['Date'] = pd.to_datetime(df['Date'])\n\ndf","840cba1e":"# Sort dates\ndf = df.sort_values(by=['Date']).reset_index(drop=True)\n\ndf.plot(y='Date')","d7c07c19":"# Bike count is recorded on 12 every month from Jan to Dec 2017\ndf['Date'].dt.date.unique()[:12]","68c41760":"# From 12 Dec onwards, bike count is recorded everyday\ndf['Date'].dt.date.unique()[12:24]","93836153":"# Create days and months as new features\ndates = df.Date\ndays = [date.weekday() for date in dates]\nmonths = [date.month for date in dates]\n\ndf['day'] = days\ndf['month'] = months\n\ndf","3f78ff7c":"df.plot(x='Date', y='BikeCount', figsize=(15,4))","0c5055dd":"# Resample data weekly \ndf_w = df.resample('W', on='Date').mean().dropna()\n\nplt.figure(figsize=(15,4))\nplt.plot(df_w.index, df_w.BikeCount)","bfcbd352":"x = [['Season', 'day'], ['month', 'Hour']]\ntitle = [['Seasonal Bike Rents', 'Daily Bike Rents'], \n         ['Monthly Bike Rents', 'Hourly Bike Rents']]\n\nf, ax = plt.subplots(2,2,figsize=(10,6))\n\nfor i in range(2):\n    for j in range(2):\n        if i==0:\n            sns.barplot(data=df, x=x[i][j], y='BikeCount', ax=ax[i][j], palette='ch:s=-.2,r=.6')\n            if j==1:\n                sns.barplot(data=df, x=x[i][j], y='BikeCount', ax=ax[i][j], palette='YlOrBr')\n\n        else:\n            sns.lineplot(data=df, x=x[i][j], y='BikeCount', ax=ax[i][j])\n\n        ax[i][j].set_title(title[i][j])\n\nplt.tight_layout()","d2835eed":"y = [['BikeCount', 'Temp'], ['Visibility', 'WindSpeed'], ['SolarRad', 'Humid']]\ntitle = [['Bike Counts', 'Temperature [\u00b0C]'], ['Visibility [10 m]', 'Wind Speed [m\/s]'], \n         ['Solar Radiation [MJ\/m2]', 'Humidity [%]']]\n\nf, ax = plt.subplots(3,2,figsize=(11,9))\n\nfor i in range(3):\n    for j in range(2):\n        sns.lineplot(data=df, x='Hour', y=y[i][j], ax=ax[i][j], color='r')\n        ax[i][j].set_title(title[i][j])\n\nplt.tight_layout()","37793563":"y = [['BikeCount', 'Temp'], ['Visibility', 'WindSpeed'], ['Snowfall', 'Rainfall']]\ntitle = [['Bike Counts', 'Temperature [\u00b0C]'], ['Visibility [10 m]', 'Wind Speed [m\/s]'], \n         ['Snowfall [cm]', 'Rainfall [mm]']]\n\nf, ax = plt.subplots(3,2,figsize=(11,9))\n\nfor i in range(3):\n    for j in range(2):\n        sns.lineplot(data=df, x='month', y=y[i][j], ax=ax[i][j], color='green')\n        ax[i][j].set_title(title[i][j])\n\nplt.tight_layout()        ","c31d026f":"y = [['BikeCount', 'Temp'], ['Rainfall', 'Snowfall'], ['SolarRad', 'Humid']]\ntitle = [['Bike Counts', 'Temperature [\u00b0C]'], ['Rainfall [mm]', 'Snowfall [cm]'], \n         ['Solar Radiation [MJ\/m2]', 'Humidity [%]']]\n\nf, ax = plt.subplots(3,2,figsize=(9,9))\n\nfor i in range(3):\n    for j in range(2):\n        sns.barplot(data=df, x='Season', y=y[i][j], ax=ax[i][j], palette='ch:s=-.2,r=.6')\n        ax[i][j].set_title(title[i][j])\n\nplt.tight_layout()        ","0e53e557":"pd.pivot_table(df, index=['Holiday', 'Functioning'], columns='Season', values='BikeCount',\n               aggfunc=lambda x: len(x), margins=True, margins_name='TOTAL')","a6424b7e":"dates = df[(df.Holiday=='No') & (df.Functioning=='No')].Date.dt.date.unique()\n\ndates","a3d02992":"# Special occasion when the bike share not functioning temporarily\nprint(dates[3])\n\ndf[df.Date.dt.date==dates[3]].plot(x='Date', y='BikeCount')","11a31f96":"# On public holidays it keeps operating\ndf[(df.Holiday=='Yes') & (df.Functioning=='Yes')].Date.dt.date.unique()","7bc97b13":"def corr_heatmap(df):    \n    plt.figure(figsize=(8,8))\n\n    mask = np.triu(np.ones_like(df.corr(), dtype=np.bool))\n    sns.heatmap(df.corr(), mask=mask, vmin=-1, vmax=1, annot=True, fmt='.2f', cmap='icefire')","dee80ac0":"corr_heatmap(df)","9f6803a2":"# sns.pairplot(df, vars=['Temp', 'Humid', 'WindSpeed', 'Visibility', \n#                        'SolarRad', 'Snowfall', 'Rainfall', 'BikeCount'],\n#             corner=True, hue='Season')","9d2a3bae":"# df2 = df.copy()\n\n# # Create new feature from visibility and humidity\n# df2['vis_hum'] = np.log((df['Visibility'] \/ (df['Humid'] + 0.0001)))\n\n# # Drop visibility and humidity\n# df2 = df2.drop(columns=['Visibility', 'Humid', 'DewPTemp'])\n\n# corr_heatmap(df2)","155b1656":"# Feature and target\nX = df.drop(columns=['BikeCount', 'Date'])\ny = df.BikeCount\n\n# Encoding\nle = LabelEncoder()\ncateg = ['Holiday', 'Functioning', 'Season']\nX[categ] = X[categ].apply(le.fit_transform)\n\n# Train test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Pipeline with baseline XGBoost\npipe = make_pipeline(StandardScaler(), XGBRegressor())\n\n# Cross-validation\ncv = cross_val_score(pipe, X_train, y_train, cv=10)\nprint('5-fold R2 scores:', cv)\nprint('Mean R2', np.mean(cv))","78d66fa9":"# Feature and target\nX = df.drop(columns=['BikeCount', 'Date'])\ny = df.BikeCount\n\n# Encoding\nle = LabelEncoder()\ncateg = ['Holiday', 'Functioning', 'Season']\nX[categ] = X[categ].apply(le.fit_transform)\n\n# Train test split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Pipeline with tuned XGBoost\npipe = make_pipeline(StandardScaler(), XGBRegressor(n_estimators=70, max_depth=10, eta=0.08,\n                                                    subsample=0.8, reg_lambda=1.2))\n\n# Cross-validation\ncv = cross_val_score(pipe, X_train, y_train, cv=10)\nprint('5-fold R2 scores:', cv)\nprint('Mean R2', np.mean(cv))","7b361b9f":"# Fit and predict\npipe.fit(X_train, y_train)\ny_pred = pipe.predict(X_test)","225c3b9c":"plt.figure(figsize=(7,7))\n\n# 1:1 line\nx = np.linspace(0,3500,10)\ny = x\n\n# Scatter plot predicted vs. actual\nplt.scatter(y_pred, y_test)\nplt.plot(x, y, c='r')\nplt.gca().set_aspect('equal')\nplt.xlabel('Predicted Bike Rents', size=12)\nplt.ylabel('Actual Bike Rents', size=12)\nplt.title('Actual vs. Predicted Bike Rents', size=20)\nplt.xlim(0,3500)\nplt.ylim(0,3500)","ce107cee":"# param = {'xgbregressor__n_estimators': [30, 50, 70],\n#          'xgbregressor__max_depth': [5, 10, 20],\n#          'xgbregressor__eta': [0.05, 0.08],\n#          'xgbregressor__subsample': [0.5, 0.8],\n#          'xgbregressor__reg_lambda': [0.7, 1, 1.2]}\n\n# grid = GridSearchCV(pipe, param, verbose=1, cv=5, n_jobs=-1)\n\n# grid.fit(X_train, y_train)\n\n# print(grid.best_params_)\n# print(grid.best_score_)","c2db8023":"# Create a pd.Series of features importances\nfimp = pipe.steps[1][1].feature_importances_\nimportances = pd.Series(data=fimp,\n                        index= X_train.columns)\n\n# Sort importances\nimportances_sorted = importances.sort_values()\n\n# Draw a horizontal barplot of importances_sorted\nimportances_sorted.plot(kind='barh', color='red')\nplt.title('Features Importances')\nplt.show()","68fb6d2a":"# Read data","8d61e8b1":"We have analyzed Seoul city bike sharing dataset. Through analysis, we saw that in general the number of bike rents in 2018 was more than in 2017. The highest number of bike rents occur in summer while the least bike rents occur in winter. In daily basis, the trend of bike rents is almost similar with slight peaking demands on Thursday while drops on Sunday. In hourly basis, the bike counts peak in the afternoon (from 15.00 to 20.00). There are two peak occurences, at 7.00 and at 17.00, which is most likely to be caused by workers going to office in the morning and going back home in the afternoon.\n\nThe hourly movement of bike counts seems to correlate with temperature, visibility, windspeed, and humidity. The bike counts peak in the afternoon (from 15.00 to 20.00) where temperature is the highest, with the most visibility, windspeed, and least humidity. There were days in a weekday when the bike sharing facility was not functioning. However, during public holidays, the facility was still operating. \n\nBased on this analysis, we built an XGBoost model to predict the number of bike rents. We made new features such as hour and month derived from the dates. We achieved an R2 accuracy of 91.7% based on 10-folds CV. Finally, it was found that rainfall and temperature are the most determining weather predictors.\n\n**Thank you!**","95fb9309":"Surprisingly on holidays, the bike share facility is working. The listed dates when holiday below are in fact public holidays in Korea, for example Korean New Year on 15-17 February 2018, Buddha's birthday on 22 March 2018, and Chuseok on 23-25 September. Except on 10 March 2018, when it was the same date of South Korea and North Korea presidential meeting with US President Donald Trump.","a325d57e":"The hourly movement of bike counts seems to correlate with temperature, visibility, windspeed, and humidity. The bike counts peak in the afternoon (from 15.00 to 20.00) where temperature is the highest, with the most visibility, windspeed, and least humidity. ","f664c485":"# Conclusion","7aa2255c":"* In autumn, there are 24 records when that day is holiday but not functioning and 223 records when that day is a work day but not functioning\n* In spring, there are 48 records when that day is work day but not functioning\n\nIn conclusion, the bike rents do not function on some days in autumn and spring.","f9d647b2":"The highest number of bike rents occur in summer while the least bike rents occur in winter. From day to day basis, the trend of bike rents is almost similar with slight peaking demands on Thursday while drops on Sunday. In monthly basis, there are two peaks occur in June and October. In hourly basis, the bike counts peak in the afternoon (from 15.00 to 20.00). There are two peak occurences, at 7.00 and at 17.00, which is most likely to be caused by workers going to office in the morning and going back home in the afternoon.\n\nThe following is seasons in Seoul:\n* Spring (middle of March to the end of May)\n* Summer (June to August)\n* Autumn (September to November)\n* Winter (Dec to middle of March)","ae02ab3d":"# Prediction of Bike Sharing Demand in Seoul - *Ddareungi (\ub530\ub989\uc774)*\n\n![image](https:\/\/user-images.githubusercontent.com\/51282928\/144457833-502f1794-de78-4ae2-80eb-4c7012402a7b.png)","a3400c7b":"# Analysis of bike rents and correlation with weather conditions","dc705036":"The monthly movement of bike counts seems only to correlate with temperature. The movement of snowfall correlates with season i.e. high snowfall from January to March during winter season. However, there is a bizarre drop of rainfall in July. It seems there is no rain during the occassionally rainy season in July. ","7af83485":"It was found that on 10 June 2018, the bike share facility did not function temporarily from 00.00 midnight to 10.00 in the morning.","ad0608af":"# Is there a day when the bike share is temporarily down or not functioning?","bbac7d9f":"# Bike rents prediction","8aa8e588":"# Analyzing time series","a7504a82":"# EDA","3ea3bbb6":"We achieve an increase from 90.3% R2-score of the baseline XGBoost model to 91.8% R2 of the tuned XGBoost model.","f68f6dfa":"The seasonal movement of bike counts correlates very well with temperature, solar radiation, and humidity. The highest count of rented bikes occurs in summer, while the least occurs in winter.","35b814a2":"In general, the number of bike rents in 2017 was less than in 2018. The bike rents peaked in July 2018 then reduced slightly until December 2018.","0719c65c":"# When does bike rents sharing facility not function?"}}