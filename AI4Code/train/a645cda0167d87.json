{"cell_type":{"11c73dd6":"code","a6d0047e":"code","a2c516b2":"code","6b415943":"code","bbc9550b":"code","60c4ac43":"code","49637c66":"code","c241465c":"code","850bb4da":"code","b9b0e395":"code","acac3eca":"code","c6dd2154":"code","17922953":"code","98178c0e":"code","a909abcc":"code","e686e25c":"code","8ec2bb36":"code","077f4a98":"code","e51983c0":"code","f62df13c":"code","c7d54344":"code","0a68f703":"code","62e88540":"code","2a583b39":"code","84201a0e":"code","8cecea89":"code","222326a6":"code","6487e79a":"code","a0f431be":"code","f639f386":"code","e632bde6":"code","b8fd7a7e":"code","fbe2d8b9":"code","2d3fb8ab":"code","52dbc34e":"code","ee7e8409":"code","5d97a7f3":"code","fd8887cb":"code","971d87be":"code","2ccb0aad":"code","b8b82549":"code","158dcf82":"code","ef58dae8":"code","ebf1f1ab":"code","1f9d3188":"markdown","a645a92f":"markdown","e80c540b":"markdown","cd26601a":"markdown","d640e730":"markdown","bfe52201":"markdown","80c0a17e":"markdown","82a512ea":"markdown","70dd0047":"markdown","1cbf9cd5":"markdown","e0dfb412":"markdown","5cbfabb0":"markdown","11bd6add":"markdown","9b6e0624":"markdown","65e7d3e3":"markdown","67357fb7":"markdown","69fd92b2":"markdown","5105ad1b":"markdown","f77cc557":"markdown","5c6957e4":"markdown","d75fbd5e":"markdown","5fd39170":"markdown","887c8df8":"markdown","09a6e848":"markdown","d523aeb5":"markdown","7067542e":"markdown","2cf27ed1":"markdown","e43598e2":"markdown","55144345":"markdown","2740c287":"markdown","f602097f":"markdown","af5b3f3f":"markdown","531ff896":"markdown","48b6e1d3":"markdown","af27c916":"markdown","a9673554":"markdown","6297748c":"markdown","94c906d9":"markdown","f9fed4c4":"markdown","7fa5f191":"markdown","61a3640a":"markdown","73dc2ff5":"markdown","07957fd8":"markdown","3fac8e35":"markdown"},"source":{"11c73dd6":"# Importar bibliotecas en esta celda\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pylab as plt\nimport seaborn as sns","a6d0047e":"# La siguiente l\u00ednea es para ver las imagenes dentro del notebook\n%matplotlib inline\n# Ac\u00e1 configuramos el tama\u00f1o de las figuras\nplt.rcParams['figure.figsize'] = (12,8)\n# Seteamos opciones de pandas sobre las columnas y su ancho\npd.set_option('max_columns', 120)\npd.set_option('max_colwidth', 5000)\n","a2c516b2":"df = pd.read_csv('..\/input\/datos-properati\/datos_properati.csv', parse_dates = True)\n","6b415943":"print(df.shape)\ndf.head(3)","bbc9550b":"# mostr\u00e1 las categor\u00edas del campo property_type y mostr\u00e1 la cant. de valores en esta celda\n#df=pd.DataFrame(df)\n\ndf.property_type.unique()\n","60c4ac43":"# Filtr\u00e1 el dataframe en esta celda\ndf_filtered = df.copy()\n\n\n\ndf_filtered = df_filtered[(df_filtered['property_type'] == 'house')  | (df_filtered['property_type'] == 'PH') | (df_filtered['property_type'] == 'apartment')] \ndf_filtered.head ()\n","49637c66":"\ndf.property_type.unique()","c241465c":"df_filtered.property_type.unique()","850bb4da":"# Visualiz\u00e1 las categor\u00edas en esta celda\n\nax = sns.countplot(x=\"property_type\", data=df_filtered)\n\n","b9b0e395":"df_filtered_nonull = df_filtered.copy()","acac3eca":"# Quit\u00e1 las instancias con valores nules en esta celdaa\ndf_filtered_nonull = df_filtered_nonull.dropna(subset=['surface_total_in_m2', 'surface_covered_in_m2', 'rooms', 'price_aprox_usd','price_usd_per_m2', ])\ndf_filtered_nonull","c6dd2154":"print(df_filtered_nonull.shape)","17922953":"print(df_filtered.shape)","98178c0e":"inst_descartadas = len(df_filtered) - len(df_filtered_nonull)\ninst_descartadas","a909abcc":"# Mostr\u00e1 en esta celda los otros atributos con valores faltantes\n\ndf_filtered_nonull.columns[df_filtered_nonull.isna().any()].tolist()","e686e25c":"# Mostr\u00e1 en esta celda cu\u00e1ntas instancias tienen errores en la superficie\nwrong_surface_rows = df_filtered_nonull[df_filtered_nonull['surface_total_in_m2']<df_filtered_nonull['surface_covered_in_m2']]\nwrong_surface_rows","8ec2bb36":"df_filtered = df_filtered_nonull","077f4a98":"df_filtered.at[wrong_surface_rows.index, 'surface_total_in_m2'] = wrong_surface_rows.surface_covered_in_m2\ndf_filtered.at[wrong_surface_rows.index, 'surface_covered_in_m2'] = wrong_surface_rows.surface_total_in_m2\n","e51983c0":"conteo_puntos = df_filtered.groupby(['lat', 'lon']).size()\nconteo_puntos[conteo_puntos > 1].sort_values(ascending=False).head(10)","f62df13c":"conteo_puntos.name = 'conteo'\n\ndf_filtered = df_filtered.join(conteo_puntos, on=['lat', 'lon'])\n\ndf_filtered = df_filtered[df_filtered.conteo <= 5]\n","c7d54344":"df_filtered","0a68f703":"df_filtered.drop('conteo', inplace=True, axis=1)","62e88540":"total_propiedades = df_filtered.groupby('barrio')['property_type'].count().values\ntotal_propiedades","2a583b39":"porcentaje_casas_ph = df_filtered[df_filtered.property_type.isin(['PH', 'house'])].groupby('barrio').count().property_type\/total_propiedades\nporcentaje_edificios = df_filtered[df_filtered.property_type == 'apartment'].groupby('barrio').count().property_type\/total_propiedades","84201a0e":"print(\"Barrios con mayor porcentaje de edificios: \\n\", porcentaje_edificios.sort_values()[::-1][:5])\nprint(\"Barrios con mayor porcentaje de casas y phs: \\n \", porcentaje_casas_ph.sort_values()[::-1][:5])","8cecea89":"barrios_casas = porcentaje_casas_ph.sort_values()[::-1][:5].index\nbarrios_edificios = porcentaje_edificios.sort_values()[::-1][:5].index\nfig, axs = plt.subplots(1,2,figsize=(14,7))\ndf_filtered[df_filtered.barrio.isin(barrios_edificios)].property_type.value_counts().plot(x=None,y=None, kind='pie', startangle=30, ax=axs[0],autopct='%1.2f%%')\ndf_filtered[df_filtered.barrio.isin(barrios_casas)].property_type.value_counts().plot(x=None,y=None, kind='pie', ax=axs[1],autopct='%1.2f%%')","222326a6":"df_filtered.price_usd_per_m2.describe()","6487e79a":"# Mostr\u00e1 en esta celda los c\u00e1lculos\n\nminimo=df_filtered.price_usd_per_m2.min()\nmaximo=df_filtered.price_usd_per_m2.max()\nmedia=df_filtered.price_usd_per_m2.mean()\nmediana=df_filtered.price_usd_per_m2.median()\ndesv_estandar=df_filtered.price_usd_per_m2.std()\n\nprint('maximo = {a}\\nminimo: {b}\\nmedia= {c}\\nmediana= {d}\\ndesvio estandar = {e}' .format(a=maximo, b=minimo, c=media, d=mediana, e=desv_estandar))","a0f431be":"# Mostr\u00e1 los cuartiles en esta celda\ndf_filtered.price_usd_per_m2.quantile([0.25,0.75])","f639f386":"Q1= df_filtered.price_usd_per_m2.quantile(0.25)\nQ3= df_filtered.price_usd_per_m2.quantile(0.75)\nIQR = Q3 - Q1\nIQR","e632bde6":"mask = df_filtered['price_usd_per_m2']\np10 = np.percentile(mask, 10)\np90 = np.percentile(mask, 90)\n\ndf_filtered = df_filtered[(df_filtered.price_usd_per_m2 >= p10) & (df_filtered.price_usd_per_m2 <= p90)]\n\n","b8fd7a7e":"# Realiz\u00e1 los calculos en esta celda\nmaximo=df_filtered.price_usd_per_m2.max()\nmedia=df_filtered.price_usd_per_m2.mean()\nmediana=df_filtered.price_usd_per_m2.median()\ndesv_estandar=df_filtered.price_usd_per_m2.std()\n\nprint('maximo = {a}\\nminimo: {b}\\nmedia= {c}\\nmediana= {d}\\ndesvio estandar = {e}' .format(a=maximo, b=minimo, c=media, d=mediana, e=desv_estandar))","fbe2d8b9":"plt.xticks(rotation = 90)\nbarrios = df_filtered.groupby('barrio').mean().sort_values('price_usd_per_m2', ascending=False).index\nsns.barplot(x=\"barrio\", y=\"price_usd_per_m2\", order=barrios, data=df_filtered);","2d3fb8ab":"table = pd.pivot_table(df, values='price_usd_per_m2', index=['barrio'], aggfunc=np.mean)\nmas_caros = table.sort_values('price_usd_per_m2', ascending=False).iloc[:5]\nmas_caros","52dbc34e":"table = pd.pivot_table(df, values='price_usd_per_m2', index=['barrio'], aggfunc=np.mean)\nmas_baratos = table.sort_values('price_usd_per_m2', ascending=True).iloc[:5]\nmas_baratos","ee7e8409":"barrios_caros = mas_caros.index \nbarrios_baratos = mas_baratos.index","5d97a7f3":"g = sns.distplot(df_filtered[df_filtered.barrio.isin(barrios_baratos)].surface_total_in_m2, label=\"Barrios baratos\")\nsns.distplot(df_filtered[df_filtered.barrio.isin(barrios_caros)].surface_total_in_m2, label=\"Barrios caros\")\ng.set_xlim(0, 400)\nplt.legend()","fd8887cb":"g = sns.distplot(df_filtered[df_filtered.barrio.isin(barrios_baratos)].rooms, label=\"Barrios baratos\")\nsns.distplot(df_filtered[df_filtered.barrio.isin(barrios_caros)].rooms, label=\"Barrios caros\")\ng.set_xlim(0, 10)\nplt.legend()","971d87be":"g = sns.distplot(df_filtered[df_filtered.barrio.isin(barrios_baratos)].price_usd_per_m2, label=\"Barrios baratos\")\nsns.distplot(df_filtered[df_filtered.barrio.isin(barrios_caros)].price_usd_per_m2, label=\"Barrios caros\")\nplt.legend()","2ccb0aad":"df_filtered['place_with_parent_names'].apply(lambda x: len(x.split(\"|\"))).unique()","b8b82549":"split_place_filter = df_filtered['place_with_parent_names'].apply(lambda x: len(x.split(\"|\"))!=4)\ndf_filtered = df_filtered.loc[split_place_filter]","158dcf82":"df_filtered['barrio_publicado'] = df_filtered['place_with_parent_names'].apply( lambda x: x.split(\"|\")[3].upper())\ndf_filtered['barrio_publicado'] = df_filtered['barrio_publicado'].str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8')","ef58dae8":"barrios_match = (df_filtered['barrio_publicado'] != df_filtered['barrio'])\ndf_filtered_barrio_not_match = df_filtered.loc[barrios_match]","ebf1f1ab":"table = pd.crosstab(df_filtered_barrio_not_match.barrio, df_filtered_barrio_not_match.barrio_publicado)\ntable.idxmax(axis=1)","1f9d3188":"### Barrios con m\u00e1s edificios y barrios con m\u00e1s casas\nAl saber qu\u00e9 barrios son los que tienen m\u00e1s cantidad de edificios en venta y cu\u00e1les son los que tienen m\u00e1s casas podemos darnos una idea de qu\u00e9 tipo de barrio es. Si es m\u00e1s residencial, con m\u00e1s poblaci\u00f3n, poder adquisitivo, etc. \nPara eso vamos a empezar calculando los porcentajes de cada tipo de propiedad seg\u00fan el barrio.","a645a92f":"#### M\u00e1s caros","e80c540b":"## Exploraci\u00f3n de datos","cd26601a":"**La mediana no cambia por que nosotros eliminamos todos los valores procentuales con respecto a la mediana por lo que el valor ubicado al medio jamas cambiara**","d640e730":"## Estudiando los barrios","bfe52201":"\u00a1Bienvenidos al primer proyecto de la carrera de Data Science de Acamica! \n\nEn este proyecto vamos a trabajar con un dataset de propiedades en venta publicadas en el portal [Properati](www.properati.com.ar). El objetivo es dar los primeros pasos en el proceso de exploraci\u00f3n de datos usando las herramientas que trabajamos en las activades.\n\nVamos a enfocarnos en analizar algunos aspectos del mercado inmobiliario de la Ciudad de Buenos Aires pero para eso primero debemos limpiar un poco el dataset.","80c0a17e":"## Importando las bibliotecas necesarias\n\nPara poder trabajar en la limpieza de datos y la visualizaci\u00f3n de nuestro dataset vamos a utilizar las bibliotecas numpy, pandas, matplotlib.pylab y seaborn. \n\n** 1) Import\u00e1 ** cada una de ellas con los siguientes nombres: \n- **numpy** como **np**\n- **pandas** como **pd**\n- **matplotlib.pylab** como **plt**\n- **seaborn** como **sns**\n","82a512ea":"Basado en informaci\u00f3n de mercado, desde el portal Properati han se\u00f1alado que las inmobiliarias suelen publicar las propiedades ubicadas en barrios que no necesariamente se corresponden con la ubicaci\u00f3n geogr\u00e1fica real. Seg\u00fan mencionan en la nota ([blog)](http:\/\/blog.properati.com.ar\/barrios-que-quieren-ser-otros\/), esto corresponde a una l\u00f3gica comercial en el corredor norte y a usos y costumbres en zona oeste.\n\nAnalicemos qu\u00e9 sucede para nuestro dataset.","70dd0047":"Por otro lado, sucede que las inmobiliarias cuando no cuentan con las coordenadas reales de las propiedades utilizan valores que no son correctos. Por ejemplo, el punto centro de cada barrio o puntos de inter\u00e9s como el Obelisco. Esto puede afectar el an\u00e1lisis relacionado con la ubicaci\u00f3n de cada propiedad.\n\nVeamos en primer lugar si hay coordenadas que se repiten.","1cbf9cd5":"## Categor\u00edas de propiedades\nEn primer lugar vamos a ver qu\u00e9 categor\u00edas existen en el campo `property_type`. Y de esas categor\u00edas cuantos valores tenemos de cada uno.\n\n**3) Mostr\u00e1** las categor\u00edas de `property_type` y cu\u00e1ntas instancias hay de cada una.\n\nRecord\u00e1 utilizar funciones del **dataframe** de pandas para realizar esto.","e0dfb412":"Vamos a graficar ahora los barrios seg\u00fan el precio por metro cuadrado.","5cbfabb0":"### Barrios que quieren ser otros","11bd6add":"## El dataset: propiedades en venta en Ciudad de Buenos Aires.","9b6e0624":"Como algunos tienen 4 elementos, debemos quitarlos.","65e7d3e3":"## Datos err\u00f3neos","67357fb7":"\n## Graficando propiedades de los barrios\n\nAhora que ya sabemos cuales son los barrios m\u00e1s caros y cuales son los m\u00e1s baratos vamos a ver algunas comparaciones gr\u00e1ficas para entender mejor sus diferencias en diferentes atributos del dataset. Vamos a ver las distribuciones seg\u00fan:\n- Superficie total en m2\n- Cuartos totales \n- Precio en dolares por m2","69fd92b2":"### Visualizando las categor\u00edas\n**5)** Utilizando `seaborn` **cre\u00e1 un countplot** para visualizar las categor\u00edas de `df_filtered` en el campo `property_type` ","5105ad1b":"Dada la estructura del atributo `place_with_parent_names`, en primer lugar vamos a extraer el campo asociado al barrio publicado para poder comparar con el que surge de la cartograf\u00eda oficial. Esto lo vamos a agregar en una nueva columna llamada `barrio_publicado`. \n\nDe este modo, lo que vamos a analizar es como se relacionan las columnas `barrio` y `barrio publicado`. Si efectivamente hay barrios que quieren ser otros, esperar\u00edamos ver propiedades ubicadas en geogr\u00e1ficamente en un barrio distinto al que dice la publicaci\u00f3n. Por ejemplo, si una propiedad est\u00e1 ubicada (dadas sus coordenadas) en Villa Crespo pero en la publicaci\u00f3n dice Palermo, entonces decimos que hay indicios que Villa Crespo quiere ser Palermo.\n\nViendo la estructura de este atributo, podemos notar que se compone por una sequencia de lugares separados por `|`. Por ejemplo, en `|Argentina|Capital Federal|Palermo|` vemos que primero est\u00e1 el pa\u00eds, luego la ciudad, luego el barrio y en algunos casos hay una jerarqu\u00eda m\u00e1s, relacionado con zonas dentro del barrio (como Palermo Soho dentro de Palermo). \n\nDe este modo, una estrategia posible para resolver esto es separar las jerarqu\u00edas por `|` y extraer el elemento asociado al barrio. Por ejemplo, para `|Argentina|Capital Federal|Palermo|` queda `['', 'Argentina', 'Capital Federal', 'Palermo', '']`. Extrayendo el tercer elemento obtendremos el barrio independientemente de si hay lugares luego en la jerarqu\u00eda. Aquellos que no tengan barrio no ser\u00e1n considerados puesto que estar\u00edan ubicados en Capital Federal y no ser\u00eda informativo.\n\nLo pasamos a may\u00fasculas y quitamos las tildes para poder comparar con el barrio oficial.","f77cc557":"## Valores Faltantes","5c6957e4":"**ahora leere los unique values de la columna property_type de los dos dataframe (df, df_filtered) para chequear que haya funcionado correctamente, es decir, que el atributo 'store', no este mas**","d75fbd5e":"## Cargando dataset de propiedades\n\n**2) Carg\u00e1** el dataset que se encuentra en la carpeta *dataset\/* y guardalo en una variable llamada **df**. \nNo te olvides de utilizar **parse_dates** sobre la columna **created_on**\n","5fd39170":"\nA partir de quitar estos valores van a cambiar los estad\u00edsticos que calculamos.\n\n**12) Volv\u00e9 a calcular** los mismos estad\u00edsticos (min, max, promedio, etc) para ver los cambios.\n\u00bfPor qu\u00e9 ser\u00e1 que la **mediana** no cambia?","887c8df8":"Con una tabla de doble entrada podemos identificar para cada barrio cu\u00e1l es al que m\u00e1s quiere parecerse.","09a6e848":"### Quitando valores extremos\nEliminemos aquellas observaciones cuyo precio por metro cuadrado este fuera de los percentiles 10 y 90. De este modo intentaremos remover valores extremos de una manera sencilla para tener un an\u00e1lisis m\u00e1s robusto.","d523aeb5":"### Barrios m\u00e1s caros y m\u00e1s baratos","7067542e":"Lo primero que vamos a hacer es ver qu\u00e9 forma tiene el dataset que acabamos de cargar. Para eso vamos a mostrar las primeras 3 entradas del mismo y utilizar la propiedad `shape` para ver la cantidad de instancias y atributos con los que vamos a estar trabajando.","2cf27ed1":"Eliminamos el atributo `conteo` dado que ya no nos sirve.","e43598e2":"El siguiente paso es analizar errores que puede llegar a haber en el dataset. \n\nPor ejemplo, la **superficie total no puede ser menor que la cubierta**. Si esto sucede, podemos optar por eliminar esas filas o intentar corregir el problema. Veamos en primer lugar si esto sucede.\n\n**9) Mostr\u00e1** cuantas instancias existen que tengan el problema de este dato err\u00f3neo y guardalas en una variable llamada `wrong_surface_rows`","55144345":"Podemos ver entonces que los barrios tienden a querer parecerse a barrios con precio con metro cuadrado m\u00e1s caro. Por ejemplo Villa Crespo con Palermo, Constituci\u00f3n con San Telmo y Villa Urquiza con Belgrano. \n\nPor otro lado, vemos tambi\u00e9n que los barrios suelen querer parecerse a sus barrios vecinos.","2740c287":"**7)** A continuaci\u00f3n **mostr\u00e1** cuantas instancias son las que descartaste a partir de quitar las que ten\u00edan valores nulos.","f602097f":"Veamos primero la distribuci\u00f3n del precio por metro cuadrado para todo el dataset. De esta manera, vamos a remover valores que consideremos extremos.\n\nEn el siguiente proyecto vamos a volver sobre este tema con m\u00e1s profundidad.\n\n**10)** Tomando el atributo `price_usd_per_m2` **calcul\u00e1** su **m\u00ednimo**, **m\u00e1ximo**, **promedio (mean)**, **mediana (median)** y **desv\u00edo est\u00e1ndar (std)**","af5b3f3f":"Comparemos entonces el barrio publicado con el real. Nos vamos a quedar con aquellas propiedades donde nos coincidan para luego hacer el conteo por barrio.","531ff896":"# Proyecto: An\u00e1lisis mercado inmobiliario de la Ciudad de Buenos Aires","48b6e1d3":"Proponemos no borrar estas instancias err\u00f3neas, sino intercambiar los valores de **superficie total** con **superficie cubierta** en caso de que se cumpla la condici\u00f3n mencionada.","af27c916":"#### Desaf\u00edo: plante\u00e1 alguna estrategia posible para reemplazar los valores faltantes en el atributo `surface_total_in_m2`.","a9673554":"Para darnos una idea de las diferencias entre los porcentajes de edificios y casas en estos barrios, vamos a graficarlos\nen forma de torta.","6297748c":"Probablemente una estrategia para reemplazar los valores faltantes de 'surface_total_in_m2' en vez de eliminaros, seria utilizar un promedio por barrio y tipo de propiedad para colocar esos valores medios donde corresponda. De esta forma tendr\u00e9 m\u00e1s informaci\u00f3n y no afectare demasiado sobre los valores estad\u00edsticos del dataframe.","94c906d9":"Tambi\u00e9n podemos calcular otros estad\u00edsticos como los cuartiles. \n\n**11) Mostr\u00e1** el **primer y tercer cuartil** y luego tambi\u00e9n el **rango intercuartil\u00edco**","f9fed4c4":"#### M\u00e1s baratos","7fa5f191":"En este proyecto, trabajaremos con una muestra del conjunto de datos de propiedades en venta mencionado. En este dataset, cada fila es una propiedad en venta. \n\n## Los atributos\nA continuaci\u00f3n vamos a describir los atributos que consideramos en esta muestra:\n\n* **id**: id de la propiedad\n* **created_on**: fecha en la que la propiedad ingres\u00f3 al sitio\n* **operation**: alquiler (rent) o venta (sell)\n* **property_type**: tipo de propiedad (casa, departamento, ph, etc\u00e9tera)\n* **place_with_parent_names**: nombre del lugar donde se encuentra la propiedad seg\u00fan el publicador\n* **lat-lon**: coordenadas concatenadas\n* **lat**: latitud\n* **lon**: longitud\n* **price**: precio en la moneda especificada en currency\n* **currency**: divisa en la que est\u00e1 expresada la publicaci\u00f3n\n* **price_aprox_usd**: precio aproximado en d\u00f3lares estadounidenses\n* **surface_total_in_m2**: superficie total (en metros cuadrados)\n* **surface_covered_in_m2**: superficie cubierta (en metros cuadrados)\n* **price_usd_per_m2**: precio por metro cuadrado en d\u00f3lares (precio d\u00f3lares \/ superficie)\n* **floor**: n\u00famero de piso (si corresponde)\n* **rooms**: cantidad de ambientes\n* **expenses**: expensas (si corresponde)\n* **barrio**: barrio seg\u00fan cartograf\u00eda oficial\n* **properati_url**: url de la publicaci\u00f3n en Properati\n","61a3640a":"Posiblemente existan otros atributos con valores faltantes en el dataset, pero que no son de tanta importancia. \n\n**8) Mostr\u00e1** qu\u00e9 otros atributos tienen valores faltantes en el `dataframe`.","73dc2ff5":"Por ejemplo, para el caso del tercer punto, se puede verificar que corresponde a la esquina de Av. Cabildo y Juramento.\nNos quedamos entonces con las propiedades con coordenadas que se repitan hasta 5 veces.","07957fd8":"Vamos a querer descartar aquellas instancias que tengan valores nulos en columnas importantes para el an\u00e1lisis del mercado.\nEstas columnas son las que informan **superficie (total o cubierta)**, **cantidad de ambientes**, **precio** y **precio por metro cuadrado**.\n\n**6) Quit\u00e1** del `dataframe` las instancias que no tengan ning\u00fan valor en los campos nombrados.","3fac8e35":"### Filtrando las categor\u00edas\n\nDe las categor\u00edas existentes s\u00f3lo queremos quedarnos con las que sean casas (house), departamentos (apartment) o PH (PH). \n\nPara esto, \n\n**4) filtr\u00e1** el `dataframe` original creando un **nuevo** `dataframe` llamado `df_filtered`. Este es el `dataframe` que seguir\u00e1s usando a lo largo del an\u00e1lisis.\n"}}