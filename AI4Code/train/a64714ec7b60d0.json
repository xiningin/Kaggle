{"cell_type":{"9a5e012e":"code","b34bc01a":"code","f654604f":"code","0c8eeda5":"code","b714021c":"code","749e41d8":"code","1b7e2da4":"code","a0ab49e9":"code","91d6eb9f":"code","c26639d7":"markdown","0d4d8035":"markdown","f99c2e9b":"markdown","fa4d3ae6":"markdown","2791e384":"markdown","8e01f209":"markdown","231fe98c":"markdown"},"source":{"9a5e012e":"\n\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndf=pd.read_csv('\/kaggle\/input\/ipldata\/matches.csv')\n","b34bc01a":"df.loc[(df.winner=='Delhi Daredevils','winner')]='Delhi Capitals'\ndf.loc[(df.team1=='Delhi Daredevils','team1')]='Delhi Capitals'\ndf.loc[(df.team2=='Delhi Daredevils','team2')]='Delhi Capitals'\ndf.loc[(df.toss_winner=='Delhi Daredevils','toss_winner')]='Delhi Capitals'\n\ndf.loc[(df.winner=='Rising Pune Supergiant','winner')]='Rising Pune Supergiants'\ndf.loc[(df.team1=='Rising Pune Supergiant','team1')]='Rising Pune Supergiants'\ndf.loc[(df.team2=='Rising Pune Supergiant','team2')]='Rising Pune Supergiants'\ndf.loc[(df.toss_winner=='Rising Pune Supergiant','toss_winner')]='Rising Pune Supergiants'\n","f654604f":"teams=np.array(df.winner.value_counts().index.values)[0:8]\nwin=df.winner.value_counts()\nhome_wins=df[df.winner==df.team1].team1.value_counts()\n\nnames=['MI','CSK','KKR','RCB','KXIP','DC','RR','SRH']\ncolor=pd.read_csv('\/kaggle\/input\/colors\/color.csv')\nc=[color[i].values for i in names]\n\nyears=np.array(df.season.value_counts().index.values)\nyears.sort()\n\n\ntoss_winners=df[df.toss_winner==df.winner].winner.value_counts() # won toss won match\ntoss_choice=df.toss_decision.value_counts()\nwon_field=df[np.logical_or(np.logical_and((df.toss_winner==df.winner),(df.toss_decision=='field')),\\\n                           np.logical_and((df.winner!=df.toss_winner),(df.toss_decision!='field')))]\n\nwinner_by_season=pd.DataFrame(df[df.winner.isin(teams)].groupby('winner').season.value_counts().sort_index())\n\nwickets=df[df.win_by_wickets!=0].win_by_wickets.values\nruns=df[df.win_by_runs!=0].win_by_runs.values","0c8eeda5":"sns.set_style('darkgrid')\nplt.figure(figsize=(10,10))\nplt.subplot('221')\nplt.bar(names,win.values[0:8],color=c,alpha=.3,label='Total wins',edgecolor=c)\nplt.bar(names,home_wins.values[0:8],color=c,label='Home wins',edgecolor=c)\nplt.xticks(rotation=45)\nplt.title(\"Matches Won\")\nplt.legend()\n\nplt.subplot('222')\n\nplt.bar(names,win.values[0:8],color=c,alpha=.3,label='Total wins',edgecolor=c)\nplt.bar(names,toss_winners.values[0:8],color=c,label='toss wins',edgecolor=c)\nplt.xticks(rotation=45)\nplt.title(\"Matches Won\")\nplt.legend()\n\nplt.subplot('223')\n\nplt.bar(names,win.values[0:8],color=c,alpha=.3,label='Total wins',edgecolor=c)\nplt.bar(names,won_field.winner.value_counts().values[0:8],color=c,label='Field first')\nplt.xticks(rotation=45)\nplt.title(\"Matches Won\")\nplt.legend()\n\nplt.subplot('224')\ns=list()\nfor i in teams:\n    w=df[df.winner==i].winner.count()\n    total=df[np.logical_or((df.team1==i),(df.team2==i))].winner.count()\n    s.append(w*100\/total)\nplt.bar(names,s,color=c)\nplt.title('Winning %')\nplt.xticks(rotation=45)\n#plt.yticks(range(0,101,10))\nplt.gca().axis([-1,8,0,100])\n","b714021c":"sns.set_style('white')\nwinner_by_season=pd.DataFrame(df[df.winner.isin(teams)].groupby('winner').season.value_counts().sort_index())\nd=df.groupby('season').winner.count().values\nplt.figure(figsize=(7,7))\ntemp=pd.DataFrame(index=years)\ntemp['season']=0\na=np.zeros(12)\nk=0\nfor i in teams:\n    t=pd.DataFrame(winner_by_season.loc[i].season)\n    mergedDf = temp.merge(t,how='left' ,left_index=True, right_index=True).fillna(0)\n\n    \n    plt.barh(years,d,label=names[k],color=c[k])\n   # plt.plot(years,d)\n    d=d-mergedDf.season_y.values\n    \n    k=k+1\nplt.barh(years,d,color='black',label='others')\nplt.legend()\nplt.yticks(years)\nplt.title('Matches Won by each team')\nplt.margins(0)\nplt.gca().spines[\"top\"].set_visible(False)\nplt.gca().spines[\"right\"].set_visible(False)\nplt.gca().spines[\"bottom\"].set_visible(False)","749e41d8":"sns.set_style('darkgrid')\n\nplt.figure(figsize=(10,5))\nplt.subplot('121')\nsns.distplot(wickets, hist_kws={'color': 'Teal'}, kde_kws={'color': 'Navy'})\nplt.xlabel('wickets')\nplt.title(\"mean wickets - {}\".format(int(wickets.mean())))\nplt.plot([6,6],[0,.4],'--b')\nplt.subplot('122')\n\nsns.distplot(runs, hist_kws={'color': 'Teal'}, kde_kws={'color': 'Navy'})\nplt.title(\"median runs - {}\".format(int(np.median(runs))))\nplt.plot([np.median(runs),np.median(runs)],[0,.030],'--b')\nplt.xlabel('runs')\n","1b7e2da4":"sns.set_style('darkgrid')\nranking =[[1,1,3,2,2,4,2,4,1,4,1,4],[3,2,4,4,3,3,2,3,0,0,4,3],[1,1,1,2,4,1,4,1,2,2,2,1],[1,3,1,3,1,1,1,2,3,1,1,1],[2,1,1,1,1,1,3,1,1,1,1,1],[2,2,1,1,2,1,1,1,1,1,1,2],[4,1,1,1,1,2,1,2,0,0,2,1],[0,0,0,0,0,2,1,1,4,2,3,2]]\nranking=np.array(ranking)\nfig,ax=plt.subplots(4,2,figsize=(10,7),sharex=True,sharey=True)\nt=0\n\nplt.setp(ax, yticks=[0,1,2,3,4], yticklabels=['not played','group stage','semi-final','final','trophy'],xticks=years)\nfig.suptitle(\"Team Standings at the end of each season\",size=20)\n\nfor i in range(len(names)):\n    s=i%4\n    if i>3:\n        t=1\n    ax[s,t].scatter(years,ranking[i],label=names[i],c=c[i])\n    \n    ax[s,t].legend(loc = \"upper right\",framealpha = 0.70)\n    ax[s,t].plot(years,ranking[i],'--',c=c[i],alpha=.5)\n    ax[s,t].set_xticklabels(years, rotation=45)\n    \n    \n        \nplt.subplots_adjust(wspace=0.025, hspace=0.05)","a0ab49e9":"head_to_head=pd.DataFrame(columns=list(teams)+['other'],index=list(teams)+['other']).fillna(0)\nteam1=df[df.winner.isin(teams)].team1.values\nteam2=df[df.winner.isin(teams)].team2.values\nwinner=df[df.winner.isin(teams)].winner.values\n\nfor a,b,c in zip(team1,team2,winner):\n    if a not in teams:\n        a='other'\n    if b not in teams:\n        b='other'\n    if c==a:\n        head_to_head.loc[c,b]+=1\n    else:\n        head_to_head.loc[c,a]+=1\nhead_to_head.drop(['other'],axis=1,inplace=True)","91d6eb9f":"color=pd.read_csv('\/kaggle\/input\/colors\/color.csv')\nc=[color[i].values for i in names]\nsns.set_style(\"darkgrid\")\n\nfig ,ax=plt.subplots(1,8,figsize=(10,5),sharey=True)\nplt.setp(ax, xticks=[0,5,10,15])\nfig.suptitle(\"Head to Head Wins\",size=20)\nfor i in range(8):\n    #plt.setp(ax, yticks=[0,5,10,15])\n    \n    x=head_to_head.columns.values\n   \n    y=head_to_head.iloc[i].values\n    y1=head_to_head.iloc[:,i].values[0:8]\n    \n    ax[i].barh(x,y1+y,color=c+[[0,0,0]],height=.3)\n    ax[i].barh(x,y,color=c[i],height=.3)\n    ax[i].set_yticklabels(names+['other'], rotation=45,size=15)\n   # ax[i].set_xticklabels( rotation=45,size=15)\n    #ax[i].set_ylabel(names[i])\n    ax[i].set_title(names[i],size=15)\nplt.setp(ax, xticks=[0,10,20])\nplt.subplots_adjust(wspace=0.025, hspace=0.5)\nsns.despine(left=True)\nplt.margins(0)","c26639d7":"# Head to Head","0d4d8035":"# Win by runs or wickets","f99c2e9b":"# Data Input","fa4d3ae6":"# Team Standings acoss Seasons","2791e384":"# IPL\n<html><img src='https:\/\/upload.wikimedia.org\/wikipedia\/en\/a\/ab\/Indian_Premier_League_Logo.png'><\/html>\n<br>\n\nThe Indian Premier League (IPL) is a domestic, annual Twenty20 cricket tournament in India, organized by the IPL Governing Council, under the aegis of the Board of Control for Cricket in India (BCCI). It is the most watched Twenty20 tournament and the second-best paying sporting league globally.\n\nIPL was established in 2008 and currently consists of eight teams in eight cities across India The inaugural IPL season was won by Rajasthan Royals. As of May 2019, there have been twelve seasons of the IPL tournament The latest season was conducted from March to May 2019, with Mumbai Indians winning the title.","8e01f209":"# Teams Performances ","231fe98c":"# Match wins across seasons"}}