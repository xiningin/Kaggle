{"cell_type":{"209f8ba1":"code","7ab1f9ff":"code","72b287d2":"code","103ad857":"code","68a9702e":"code","de9792c3":"code","257e90de":"code","b60e47e6":"code","0691ce19":"code","c5bbfdcb":"code","a92da40f":"code","c0aae5f2":"code","80628716":"code","2aec832b":"code","626e1314":"code","d07b7b93":"code","c6cd96ed":"code","b1dbc877":"markdown","8de22e37":"markdown","c36676a9":"markdown","9e8f660f":"markdown","0f75dacc":"markdown","2e6852a1":"markdown","8fc9b9af":"markdown"},"source":{"209f8ba1":"# Importing libraries\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport cv2\nimport warnings\nimport os\nfrom tqdm import tqdm\nwarnings.filterwarnings('ignore')","7ab1f9ff":"train_csv_file = '..\/input\/global-wheat-detection\/train.csv'\ntrain_images = '..\/input\/global-wheat-detection\/train\/'","72b287d2":"#Load dataframe\ntrain_df = pd.read_csv(train_csv_file)","103ad857":"train_df.head()","68a9702e":"# check for any null values\ntrain_df.isnull().any().any()","de9792c3":"\n# check for any height and width is other than 1024\nprint((train_df['height'] != 1024).any())\nprint((train_df['width'] != 1024).any())","257e90de":"len(train_df['image_id'].unique())","b60e47e6":"print('Number of images without label: {}'.format(len(os.listdir(train_images)) - len(train_df['image_id'].unique())))","0691ce19":"# create new dataframe with only columns: image_id and bbox\nimg_bbox = train_df[['image_id','bbox']]","c5bbfdcb":"img_bbox.loc[0,'bbox']","a92da40f":"# converting string into list\nimg_bbox['bbox'] = img_bbox['bbox'].str.strip('][').str.split(',')\nimg_bbox.head()","c0aae5f2":"# Now it's in list datatype\nimg_bbox.loc[0,'bbox']","80628716":"column_name = ['filename', 'width', 'height', 'class', 'xmin', 'ymin', 'xmax', 'ymax']","2aec832b":"tfrecord_format_csv = pd.DataFrame(columns=column_name)\n\nfor i in tqdm(range(len(img_bbox))):\n    img_bbox['bbox'][i] = pd.to_numeric(img_bbox['bbox'][i],downcast='integer')\n    tfrecord_format_csv.loc[i,'filename'] = img_bbox.loc[i,'image_id']+ '.jpg'\n    tfrecord_format_csv.loc[i,'width']    = 1024\n    tfrecord_format_csv.loc[i,'height']   = 1024\n    tfrecord_format_csv.loc[i,'class']    = 'wheat'\n    tfrecord_format_csv.loc[i,'xmin']     = img_bbox['bbox'][i][0]\n    tfrecord_format_csv.loc[i,'ymin']     = img_bbox['bbox'][i][1]\n    tfrecord_format_csv.loc[i,'xmax']     = img_bbox['bbox'][i][0] + img_bbox['bbox'][i][2]\n    tfrecord_format_csv.loc[i,'ymax']     = img_bbox['bbox'][i][1] + img_bbox['bbox'][i][3]\n    ","626e1314":"tfrecord_format_csv.head()","d07b7b93":"temp_df = tfrecord_format_csv[tfrecord_format_csv['filename']=='00333207f.jpg'].reset_index(drop=True)\ntemp_img = cv2.imread(train_images+'00333207f.jpg')\nrgb_img = cv2.cvtColor(temp_img,cv2.COLOR_BGR2RGB)\nfor i in range(len(temp_df)):\n    rec = cv2.rectangle(rgb_img, (temp_df.loc[i,'xmin'],temp_df.loc[i,'ymin']), (temp_df.loc[i,'xmax'],temp_df.loc[i,'ymax']), (255,0,0), 2, 1) \nplt.figure(figsize=(8,8))    \nplt.imshow(rec)\nplt.axis('off')\nplt.show()\n    \n","c6cd96ed":"tfrecord_format_csv.to_csv('tf_format_training.csv',index=False)","b1dbc877":"So will only considering 3373 images.","8de22e37":"You can see bounding boxes in sting Datatype ","c36676a9":"# saving file","9e8f660f":"* This kernal is for creating csv file for generating tfrecords using for Tensorflow object detection API\n* This csv file is in format which is easy for generation of tfrecords.\n* csv columns  ['filename', 'width', 'height', 'class', 'xmin', 'ymin', 'xmax', 'ymax']","0f75dacc":"# Processing the data","2e6852a1":"# checking for missing values","8fc9b9af":"# Converting in tfrecord require format"}}