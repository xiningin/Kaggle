{"cell_type":{"a67ce974":"code","7d1c31da":"code","a6341070":"code","7fe17828":"code","a70e052a":"code","d9bbb4ba":"code","2f12f05e":"code","87f4769e":"markdown","679cabfc":"markdown","f1c189fe":"markdown","04593af7":"markdown","91591306":"markdown","3daa1c9e":"markdown","04779f32":"markdown","4fa9bbe3":"markdown","ec306c63":"markdown","eaa73004":"markdown","90c2db38":"markdown"},"source":{"a67ce974":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport sklearn.cluster as clust\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport folium as fl","7d1c31da":"df = pd.read_csv('\/kaggle\/input\/bournemouth-venues\/bournemouth_venues.csv')","a6341070":"df['Venue Category'].value_counts()","7fe17828":"new_cat = df['Venue Category'].copy()\nnew_cat = new_cat.str.replace(r\".*(Shop|Store).*\",\"Shop\",case=False)\nnew_cat = new_cat.str.replace(r\".*Restaurant.*\",\"Rest\",case=False)\nnew_cat = new_cat.str.replace(r\".*(Brewery|Bar|Caf\u00e9|Pub).*\",\"Drink\",case=False)\nnew_cat = new_cat.str.replace(r\".*(Sandwich|Diner|Burger|Pizza|Noodle).*\",\"Eat\",case=False)\nnew_cat = new_cat.str.replace(r\".*(Art|Theater|Aquarium|Nightclub|Gym).*\",\"Art\",case=False)\nnew_cat = new_cat.str.replace(r\".*(Bus|Platform|Train).*\",\"Tran\",case=False)\nnew_cat = new_cat.str.replace(r\".*(Other|Lookout|Garden|Plaza|Multiplex|Park|Beach).*\",\"Place\",case=False)\ndf['Venue Category'] = new_cat\nplt.figure(figsize=(10,6))\nsns.countplot(new_cat).set_title(\"Counting categories\")","a70e052a":"model_clast = clust.KMeans(n_clusters=6,random_state=15).fit(df[['Venue Latitude','Venue Longitude']])\ndf['Venue LatLong Claster'] = model_clast.predict(df[['Venue Latitude','Venue Longitude']])\ndf","d9bbb4ba":"df_pt = df.groupby(by=['Venue Category','Venue LatLong Claster']).count().reset_index().pivot('Venue LatLong Claster','Venue Category','Venue Name').fillna(0)\nplt.figure(figsize=(10,6))\nsns.heatmap(df_pt  ,annot=True,cmap='RdPu')","2f12f05e":"map_center = df[['Venue Latitude','Venue Longitude']].mean().as_matrix()\nmap = fl.Map(map_center,zoom_start=15)\n\nfor n in range(df_pt.shape[0]):\n    [lt,ln] = model_clast.cluster_centers_[n]\n    tit = ''\n    for i in range(df_pt.shape[1]):\n        v = df_pt.iloc[n,i]\n        tit += '<br>' + df_pt.columns[i] + \": \" + str(int(v))\n        if v==0:\n            tit += ' (too little!!!)'\n    fl.Marker(location=[lt,ln],icon=fl.Icon(icon='info-sign'),tooltip='Claster #' + str(n)+'<br>----' + tit).add_to(map)\n\ncat_list = list(df['Venue Category'].unique())\ncolormap=matplotlib.cm.rainbow(np.linspace(0, 1, len(cat_list)))\n\nfor n in range(df.shape[0]):\n    cat = df['Venue Category'][n]\n    t = df['Venue Name'][n] + \" (\" + cat + \")\"\n    c = matplotlib.colors.to_hex(colormap[cat_list.index(cat)])\n    fl.CircleMarker(location=df[['Venue Latitude','Venue Longitude']].as_matrix()[n,:],radius = 5,tooltip=t,color=c,fill=True).add_to(map)\n    \nmap","87f4769e":"## Adding clasters\n\nWe select 6 clusters according to the coordinates of the venues.","679cabfc":"### Counting categories before preparing\n\nWe have more then 50 categories.","f1c189fe":"Explore venues at Bournemouth. We draw them on the color map. We look at what is missing by applying clustering.","04593af7":"Cluster 0 has no drinks, hotels, places, or shops\nClusters 1, 2, 3, and 5 lack transport","91591306":"### Counting categories after preparing\n\nReduce the number of categories to 8.","3daa1c9e":"## Reduce the number of categories\n\nToo many categories. It is necessary to reduce them.","04779f32":"# Loading data\n\nWe load data as standard","4fa9bbe3":"# Visualising data","ec306c63":"## Resulting interactive MAP","eaa73004":"# Preparing data","90c2db38":"## Counting clasters and categories"}}