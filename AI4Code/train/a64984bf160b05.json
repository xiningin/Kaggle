{"cell_type":{"c613bfe0":"code","70acd71a":"code","c087bc8b":"code","08b71fb9":"code","3ac86946":"code","4e0986cc":"code","0a14186a":"code","f2fea74c":"code","a4b9433d":"code","cb2882f0":"code","b702644a":"code","4eddb21e":"code","3a23f995":"code","a8330130":"code","a47e104d":"code","cb8126ce":"code","12a61fa3":"code","936394b0":"code","6f3efdb5":"code","3530a5f2":"code","1c214621":"code","31a7c965":"code","8533e2fe":"code","971f0049":"code","48b32f2a":"code","ec73e38d":"code","0dc79d28":"code","bcc6058b":"code","51dc84e7":"code","aafe8fe3":"code","074dd54f":"code","f1ff35fe":"code","5977ae80":"code","5743852b":"code","39310c37":"code","5b4b722c":"code","ebddd0d7":"code","cff0a1d9":"markdown","a51eaa7f":"markdown","ceb2f7f7":"markdown","6bb99515":"markdown","3d8706e0":"markdown","8b4094f9":"markdown","4600ac13":"markdown","af5c5444":"markdown","713e0dd3":"markdown","aebaa89f":"markdown","38715925":"markdown"},"source":{"c613bfe0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('fivethirtyeight')\n%matplotlib inline","70acd71a":"testing = pd.read_csv('..\/input\/titanic\/test.csv')","c087bc8b":"df = pd.read_csv('..\/input\/titanic\/train.csv')\ndf.head()","08b71fb9":"df.info()","3ac86946":"df.describe()","4e0986cc":"df.isnull().sum()","0a14186a":"df.groupby(['Sex','Survived'])['Survived'].count()","f2fea74c":"f, ax = plt.subplots(1,3,figsize=(18,8))\nsns.countplot(data=df,x='Sex',ax=ax[0])\nax[0].set_title('Number of Male and Female')\nsns.countplot(data=df,x='Survived',hue='Sex',ax=ax[1])\nax[1].set_title('Survived')\nsns.barplot(data=df,x='Sex',y='Survived',ax=ax[2])\nax[2].set_title('Sex')\nplt.show()","a4b9433d":"f, ax = plt.subplots(1,2,figsize=(12,8))\nsns.barplot(data=df,x='Pclass',y='Survived',ax=ax[0])\nsns.barplot(data=df,x='Pclass',y='Survived',hue='Sex',ax=ax[1])\nplt.show()","cb2882f0":"print(\"Oldest Passenger is: \", df['Age'].max())\nprint(\"Youngest Passenger is: \", df['Age'].min())\nprint(\"Average Age is: \", df['Age'].mean())","b702644a":"f,ax = plt.subplots(1,2,figsize=(18,8))\nsns.boxplot(data=df,x='Pclass',y='Age',ax=ax[0],hue='Survived')\nsns.boxplot(data=df,x='Sex',y='Age',ax=ax[1],hue='Survived')\nplt.show()","4eddb21e":"df['Prefix'] = 0\ntesting['Prefix'] = 0\n\ndf['Prefix'] = df.Name.str.extract('([A-Za-z]+)\\.')\ntesting['Prefix'] = testing.Name.str.extract('([A-Za-z]+)\\.')","3a23f995":"pd.crosstab(df.Sex,df.Prefix)","a8330130":"df['Prefix'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],\n                      ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)\ntesting['Prefix'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','Countess','Jonkheer','Col','Rev','Capt','Sir','Don'],\n                      ['Miss','Miss','Miss','Mr','Mr','Mrs','Mrs','Other','Other','Other','Mr','Mr','Mr'],inplace=True)","a47e104d":"df.groupby('Prefix')['Age'].mean()","cb8126ce":"df.loc[(df.Age.isnull()) & (df.Prefix=='Mr'),'Age']=33\ndf.loc[(df.Age.isnull()) & (df.Prefix=='Mrs'),'Age']=36\ndf.loc[(df.Age.isnull()) & (df.Prefix=='Master'),'Age']=5\ndf.loc[(df.Age.isnull()) & (df.Prefix=='Miss'),'Age']=22\ndf.loc[(df.Age.isnull()) & (df.Prefix=='Other'),'Age']=46\n\ntesting.loc[(testing.Age.isnull()) & (testing.Prefix=='Mr'),'Age']=33\ntesting.loc[(testing.Age.isnull()) & (testing.Prefix=='Mrs'),'Age']=36\ntesting.loc[(testing.Age.isnull()) & (testing.Prefix=='Master'),'Age']=5\ntesting.loc[(testing.Age.isnull()) & (testing.Prefix=='Miss'),'Age']=22\ntesting.loc[(testing.Age.isnull()) & (testing.Prefix=='Other'),'Age']=46\n","12a61fa3":"fig, ax = plt.subplots(1,2,figsize=(12,6))\ndf[df['Survived']==0].Age.plot.hist(ax=ax[0],bins=20,edgecolor='black',color='blue')\nax[0].set_title('Survived')\nax[0].set_xlabel('Age')\ndf[df['Survived']==1].Age.plot.hist(ax=ax[1],bins=20,edgecolor='black',color='green')\nax[1].set_title('Not Survived')\nax[1].set_xlabel('Age')\nplt.show()","936394b0":"df.isnull().sum()","6f3efdb5":"fig, ax = plt.subplots(1,3,figsize=(18,8))\nsns.countplot(data=df,x='Embarked',ax=ax[0])\nsns.countplot(data=df,x='Embarked',ax=ax[1],hue='Sex')\nsns.countplot(data=df,x='Embarked',ax=ax[2],hue='Pclass')","3530a5f2":"df['Embarked'].fillna('S',inplace=True)\ntesting['Embarked'].fillna('S',inplace=True)","1c214621":"df.drop(labels=['Cabin', 'Ticket'],axis=1,inplace=True)\ntesting.drop(labels=['Cabin', 'Ticket'],axis=1,inplace=True)","31a7c965":"plt.figure(figsize=(2,4),dpi=100)\nsns.boxplot(data=df,x='Survived',y='Age')","8533e2fe":"plt.figure(figsize=(18,15),dpi=150)\nsns.heatmap(df.corr(),annot=True, cmap=\"YlGnBu\",lw=0.2, annot_kws={'size':20})\nplt.xticks(fontsize=14)\nplt.yticks(fontsize=14)\nplt.show()","971f0049":"df['Family_Size']=0\ndf['Family_Size']=df['Parch']+df['SibSp']\ndf['Alone']=0\ndf.loc[df.Family_Size==0,'Alone']=1","48b32f2a":"df['Sex'].replace(['male','female'],[0,1],inplace=True)\ndf['Embarked'].replace(['S','C','Q'],[0,1,2],inplace=True)\ndf['Prefix'].replace(['Mr','Mrs','Miss','Master','Other'],[0,1,2,3,4],inplace=True)","ec73e38d":"df.drop(['Name','PassengerId'],axis=1,inplace=True)","0dc79d28":"from sklearn.model_selection import train_test_split\nX = df.drop('Survived',axis=1)\ny = df['Survived']","bcc6058b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=101)","51dc84e7":"from sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler()\nX_scaled_train = scaler.fit_transform(X_train)\nX_scaled_test = scaler.transform(X_test)","aafe8fe3":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import GridSearchCV","074dd54f":"model = LogisticRegression()\ngrid_param = {\"penalty\": [\"l2\"], \"fit_intercept\": [True, False], \"solver\": [\"newton-cg\", \"lbfgs\", \"liblinear\", \"sag\", \"saga\"],\n                     \"max_iter\": [50, 100, 200], \"warm_start\": [True, False]}\ngrid_model = GridSearchCV(model, grid_param)\ngrid_model.fit(X_scaled_train,y_train)\ny_pred = grid_model.predict(X_scaled_test)","f1ff35fe":"from sklearn.metrics import accuracy_score,confusion_matrix,classification_report,plot_confusion_matrix","5977ae80":"grid_model.best_params_","5743852b":"accuracy_score(y_test,y_pred)","39310c37":"confusion_matrix(y_test,y_pred)","5b4b722c":"plot_confusion_matrix(grid_model,X_scaled_test,y_test,cmap=plt.cm.Blues)","ebddd0d7":"print(classification_report(y_test,y_pred))","cff0a1d9":"### Now let's do some research on our features","a51eaa7f":"We can see we have some NaN, so we will deal with them in feature","ceb2f7f7":"### As you guys can see there is something so interesting and that's dispite of the fact that men were more than women in general, but females survived way more than males.","6bb99515":"## Welcome to this notebook\n### We will do some EDA and Data Cleaning with Feature Engineering and then we will try some predictions and see how logistic regression works for \"Dietanic\" :))\n","3d8706e0":"## Thnks for reading. If you liked my notebook and find it useful please upvote for me =))","8b4094f9":"### 1- Load Dataset","4600ac13":"### Better Class --> Higher Chance of Survive","af5c5444":"### In this part i tried to do some usefull EDA and in the meantime handled the missing data so we can proceed to the predictions part ","713e0dd3":"![27dbbdd1-95ea-4722-a3f0-a54b12196f40-thumb.jpg](attachment:0e10f3a4-7ee6-462b-af05-7aa02ad9a7b3.jpg)","aebaa89f":"## 2- EDA + Handlling Missing Data","38715925":"#### So one idea is that we can put mean value for missing entries of \"Age\" but i guess that's not the best idea. Imagine that missing value was something like 4 years old and we are changing it to the mean(something more than 20 for sure)\n#### So what can we do??! Just look at the Name of passengers... They some prefixes like \"Mr. Mrs. Master. ...\" That's so cool!! :))\n#### We can categories them and then find out wich passenger was child, man, woman, ...\n#### So let's make a new column for that part:"}}