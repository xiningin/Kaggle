{"cell_type":{"8d868d8e":"code","35b91a74":"code","19d083ec":"code","2703b79b":"code","c908dd63":"code","5867a03b":"code","1ec31807":"code","512ad9a9":"code","d4c153ef":"code","45c217e8":"code","f903757a":"code","da967563":"code","57d6958a":"code","e4a6e289":"code","fb2828d6":"code","5948c158":"code","548ceba0":"code","2411690f":"code","07692ca0":"code","afb7a81b":"code","9c54a4e2":"code","0b866ef5":"code","d8d818fa":"code","dabaaf17":"code","985ff3e4":"code","448b7373":"code","282fd377":"code","152c14dd":"code","eb4e143f":"code","6d5e7fae":"code","a3e4fdcd":"code","b02a5f7e":"code","e1671ba1":"code","7d2668fb":"code","6d55067a":"code","e7a32262":"code","d53d07d4":"code","481a6bdd":"code","e1afbcea":"code","bd923b17":"code","3d6696b2":"code","644e8958":"code","4c854b47":"code","51850e9d":"code","9da2c002":"code","70186e8c":"code","ff6a508c":"code","b44509aa":"code","105ee971":"code","2b080816":"code","c2dde3f2":"code","dbe659ca":"code","f07d320e":"code","89ef27b6":"code","1dceb61e":"code","6055000c":"code","e912fff3":"code","7cbd679f":"code","10bbe29d":"markdown","9dc508c9":"markdown"},"source":{"8d868d8e":"import matplotlib.pyplot as plt\nimport numpy as np \n%matplotlib inline\nimport seaborn as sns \nimport pandas as pd\nimport plotly.express as px\nfrom pandas_profiling import ProfileReport\nfrom sklearn import ensemble\nfrom sklearn import metrics\nimport warnings\nwarnings.filterwarnings(\"ignore\")\npd.set_option(\"display.max_columns\", None)","35b91a74":"uber_df=pd.read_csv(\"..\/input\/uberdataset\/UberDataSet.csv\")","19d083ec":"uber_df.describe()","2703b79b":"uber_df.head()","c908dd63":"uber_df.info()","5867a03b":"uber_df.tail()","1ec31807":"uber_df.shape","512ad9a9":"uber_df['name'].value_counts()","d4c153ef":"uber_df.duplicated().sum()","45c217e8":"uber_df.dropna(inplace=True)","f903757a":"uber_df.timezone.value_counts()","da967563":"uber_df.columns","57d6958a":"uber_df=uber_df.reset_index()\nuber_df = uber_df.drop(['icon','latitude', 'longitude','source', 'destination','datetime','Unnamed: 0','index','id','product_id','long_summary','short_summary','timestamp','timezone','cab_type'], axis=1 )\nuber_df.info()","e4a6e289":"uber_df.shape","fb2828d6":"uber_df.columns","5948c158":"uber_df.isnull().sum()","548ceba0":"profile = ProfileReport(uber_df, minimal=True)\nprofile.to_file(\"output.html\")","2411690f":"profile","07692ca0":"uber_df.rename(columns={'name': 'service_type'}, inplace=True)","afb7a81b":"uber_df.nunique()","9c54a4e2":"uber_df.head(2)","0b866ef5":"uber_df.to_csv(r'CleanAndFilteredData.csv')","d8d818fa":"print(uber_df['price'].describe())\nplt.figure(figsize=(9, 8))\nsns.distplot(uber_df['price'], color='g', bins=100, hist_kws={'alpha': 0.9});","dabaaf17":"sns.set_theme(style=\"white\")\nsns.relplot(x=\"price\", y='service_type', hue=\"service_type\", size=\"price\",\n            sizes=(100,200), alpha=.7, palette=\"muted\",\n            height=6, data=uber_df)","985ff3e4":"sns.set_theme(style=\"darkgrid\")\nax = sns.countplot(x=\"month\",data=uber_df,hue=\"month\",palette=\"colorblind\").set_title(\"number of trips per month\")","448b7373":"sns.relplot(x=\"price\", y=\"distance\",ci=None,kind=\"line\", data=uber_df)\n","282fd377":"sns.displot(data=uber_df, x=\"price\", y=\"temperature\",height=10, aspect=0.9,color=\"red\")","152c14dd":"ax = sns.violinplot(x=\"day\", y=\"price\", data=uber_df,width=1,height=15,aspect=2)","eb4e143f":"sns.barplot(x=uber_df.day.value_counts().index, y=uber_df.day.value_counts(),data=uber_df).set_title(\"number of trips vs days\")","6d5e7fae":"sns.set_theme(style=\"darkgrid\")\nax = sns.countplot(x=\"hour\",data=uber_df,facecolor=(0, 0, 0, 0),\n                   linewidth=2,\n                   edgecolor=sns.color_palette(\"bright\", 3)).set_title(\"number of trips vs hour\")","a3e4fdcd":"uber_df_num = uber_df.select_dtypes(include = ['float64', 'int64'])\nuber_df_num.head()","b02a5f7e":"uber_df_num.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8)","e1671ba1":"uber_df.service_type.value_counts()","7d2668fb":"uber_df = pd.get_dummies(uber_df,drop_first=False)\n","6d55067a":"uber_df.head()","e7a32262":"uber_df.shape","d53d07d4":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.feature_selection import RFE","481a6bdd":"X = uber_df.drop('price', axis= 1)\ny = uber_df['price']\nprint(X.shape)\nprint(y.shape)\nR_sqaured = {}\nMean_SE = {}","e1afbcea":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 10)","bd923b17":"def RFE_Function(i):\n    reg = LinearRegression()\n    rfe = RFE(reg , n_features_to_select = i)\n    rfe = rfe.fit(X_train, y_train)\n    selected_columns = X_train[X_train.columns[rfe.support_]]\n    #Fitting training data\n    reg = reg.fit(selected_columns, y_train)\n    R_sqaured['Feature_'+str(i)]=reg.score(X_test[selected_columns.columns], y_test)\n    y_pred = reg.predict(X_test[selected_columns.columns])\n    Mean_SE['Feature_'+str(i)] = metrics.mean_squared_error(y_test,y_pred)\n    return selected_columns ","3d6696b2":"X_48 = RFE_Function(48)\nprint(\"The R squared of 48 feature is \",R_sqaured['Feature_48'])\nprint(\"The MSE of 48 feature is \",Mean_SE['Feature_48'])\nprint(X_48.shape)","644e8958":"X_28 = RFE_Function(28)\nprint(\"The R squared of 28 feature is \",R_sqaured['Feature_28'])\nprint(\"The MSE of 28 feature is \",Mean_SE['Feature_28'])\nprint(X_28.shape)","4c854b47":"X_18= RFE_Function(18)\nprint(\"The R squared of 18 feature is \",R_sqaured['Feature_18'])\nprint(\"The MSE of 18 feature is \",Mean_SE['Feature_18'])\nprint(X_18.shape)","51850e9d":"X_8= RFE_Function(8)\nprint(\"The R squared of 8 feature is \",R_sqaured['Feature_8'])\nprint(\"The MSE of 8 feature is \",Mean_SE['Feature_8'])\nprint(X_8.shape)","9da2c002":"X_5= RFE_Function(5)\nprint(\"The R squared of 5 feature is \",R_sqaured['Feature_5'])\nprint(\"The MSE of 5 feature is \",Mean_SE['Feature_5'])\nprint(X_5.shape)","70186e8c":"R_sqaured","ff6a508c":"Mean_SE","b44509aa":"print(\"The highest R sqaured is \",max(R_sqaured,key=Mean_SE.get), \" And The minimum is\",min(Mean_SE,key=Mean_SE.get))\nprint(\"The highest MSE  is \",max(Mean_SE,key=Mean_SE.get), \" And The minimum is\",min(Mean_SE,key=Mean_SE.get))","105ee971":"X_8.columns","2b080816":"X_8.drop(['precipIntensity'],axis= 1,inplace=True)\nX_8.columns","c2dde3f2":"X_train = X_8\nX_test = X_test[X_8.columns]","dbe659ca":"print(X_train.shape)\nprint(X_test.shape)","f07d320e":"from sklearn.linear_model import LinearRegression\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor","89ef27b6":"linear = LinearRegression()\nlinear.fit(X_train, y_train)\nprint(linear.score(X_test, y_test))\ny_pred = linear.predict(X_test)\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","1dceb61e":"random = RandomForestRegressor(n_estimators = 100, random_state = 0) \nrandom.fit(X_train, y_train) \nprint(random.score(X_test, y_test))\ny_pred = random.predict(X_test)\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))","6055000c":"y_test.head()","e912fff3":"from sklearn.model_selection import ShuffleSplit\nfrom sklearn.model_selection import cross_val_score\ncv=ShuffleSplit(n_splits=5,test_size=0.2,random_state=0)\nmse = cross_val_score(LinearRegression(),X_test,y_test,cv=cv , scoring='neg_mean_squared_error')\nprint(mse)\nprint(' Mean of All Folds  is',mse.mean() )","7cbd679f":"from sklearn import metrics\nprint('MAE :',\" \", metrics.mean_absolute_error(y_test,y_pred))\nprint('MSE :',\" \", metrics.mean_squared_error(y_test,y_pred))\nprint('RMAE :',\" \", np.sqrt(metrics.mean_squared_error(y_test,y_pred)))\nsns.regplot(y_test,y_pred,scatter_kws={'alpha':0.5})\nplt.xlabel('Price  Test')\nplt.ylabel('Predicted  Price ')","10bbe29d":"Feature selection is a process to select features that are significant and increases the model performance.\nIt reduces the complexity of the model and it becomes easier for interpretability.\nIt improves the performance of the model if right set of features is selected.\nIt reduces the dimensionality of the dataset and helps the algorithm learn faster.","9dc508c9":"Pandas det dummies:\nConverts categorical data into dummy or indicator variable"}}