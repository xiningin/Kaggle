{"cell_type":{"c8a8a77c":"code","74273b45":"code","70d8cbc7":"code","d516f72b":"code","5a43e8d2":"code","ede356b7":"code","8f37e79e":"code","20de03c4":"code","ee4bc010":"code","77a73abc":"code","0b2fba9e":"code","a440379e":"code","a64a47ac":"code","a628cf39":"code","6e1b2511":"code","2fc47cd2":"code","2268ff8d":"code","03b677b5":"code","4a422875":"code","eb9b21c7":"code","4594f5a7":"code","80956b49":"code","2fe07178":"code","9f3567d6":"code","b3bffdc7":"code","c42791af":"code","c2db0cc5":"code","d5f31b0b":"code","1dabff39":"code","a564643d":"code","9f6108a0":"code","05c8fa8d":"code","4ddf92a6":"code","5d15c99c":"code","8b3ccdc3":"code","7aaa1199":"code","aab688e4":"code","4b69443d":"code","30f4b01f":"code","65b57af8":"code","a61b606d":"code","9d3e7139":"code","6f559dcd":"code","d627108b":"code","a1e57f09":"code","3fc69ad4":"code","4baf9fcd":"code","e8f81326":"code","55c242dd":"code","a16b5741":"code","e3d91cfa":"code","139834b9":"code","51eb6229":"code","97b5e17d":"code","6203ddfb":"code","d338fe14":"code","0427ccfe":"markdown","9cb8d6fa":"markdown","e38c7f3c":"markdown","2b7f0b61":"markdown","2273f97a":"markdown","298f1005":"markdown"},"source":{"c8a8a77c":"#import library\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('seaborn')\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression, Lasso\nfrom sklearn import metrics","74273b45":"training1 = pd.read_csv('..\/input\/student-performance-data-set-competition-form\/X_train.csv')\ntraining2 = pd.read_csv('..\/input\/student-performance-data-set-competition-form\/y_train.csv')","70d8cbc7":"training1.shape","d516f72b":"training2.shape","5a43e8d2":"training1.head()","ede356b7":"training2.head()","8f37e79e":"#union of data\njoin = (training1, training2['G3'])\ndf = pd.concat(join, axis = True)\ndf.head()","20de03c4":"#indexing student ID\ndf = df.set_index('StudentID')\ndf.head()","ee4bc010":"df.describe()","77a73abc":"df.info()","0b2fba9e":"#heatmap correlation\nplt.figure(figsize = (8,6))\nsns.heatmap(df.corr(), vmax = 0.9, cmap = 'viridis')\nplt.title(\"Pearson Correlation\")\nplt.show()","a440379e":"#visualize school type\nplt.figure(figsize = (8,6))\nsns.countplot(df['school'])\nplt.title(\"School Type of Student Performance\")\nplt.xlabel(\"School\")\nplt.show()","a64a47ac":"#visualize school type ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'school', y ='G3', palette = 'Set1')\nplt.title(\"School Type of Student Performance ~ G3\")\nplt.xlabel(\"School\")\nplt.ylabel(\"G3\")\nplt.show()","a628cf39":"#visualize gender\nplt.figure(figsize = (8,6))\nsns.countplot(df['sex'], palette = 'Set2')\nplt.title(\"Gender of Student Performance\")\nplt.xlabel(\"Gender\")\nplt.show()","6e1b2511":"#visualize gender ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'sex', y ='G3')\nplt.title(\"Gender of Student Performance ~ G3\")\nplt.xlabel(\"Gender\")\nplt.ylabel(\"G3\")\nplt.show()","2fc47cd2":"#visualize address\nplt.figure(figsize = (8,6))\nsns.countplot(df['address'], palette = 'Set1')\nplt.title(\"Address of Student Performance\")\nplt.xlabel(\"Address\")\nplt.show()","2268ff8d":"#visualize address ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'address', y ='G3', palette = 'Set2')\nplt.title(\"Address of Student Performance ~ G3\")\nplt.xlabel(\"Address\")\nplt.ylabel(\"G3\")\nplt.show()","03b677b5":"#visualize familly size\nplt.figure(figsize = (8,6))\nsns.countplot(df['famsize'])\nplt.title(\"Family Size of Student Performance\")\nplt.xlabel(\"Family Size\")\nplt.show()","4a422875":"#visualize family size ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'famsize', y ='G3', palette = 'Set1')\nplt.title(\"Family Size of Student Performance ~ G3\")\nplt.xlabel(\"Family Size\")\nplt.ylabel(\"G3\")\nplt.show()","eb9b21c7":"#visualize performance status\nplt.figure(figsize = (8,6))\nsns.countplot(df['Pstatus'], palette = 'Set2')\nplt.title(\"Performance Status of Student Performance\")\nplt.xlabel(\"Performance Status\")\nplt.show()","4594f5a7":"#visualize performance status ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Pstatus', y ='G3')\nplt.title(\"Performance Status of Student Performance ~ G3\")\nplt.xlabel(\"Performance Status\")\nplt.ylabel(\"G3\")\nplt.show()","80956b49":"#visualize mother job\nplt.figure(figsize = (8,6))\nsns.countplot(df['Mjob'], palette = 'Set1')\nplt.title(\"Mother Job of Student Performance\")\nplt.xlabel(\"Mother Job\")\nplt.show()","2fe07178":"#visualize mother job ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Mjob', y ='G3', palette = 'Set2')\nplt.title(\"Mother Job of Student Performance ~ G3\")\nplt.xlabel(\"Mother Job\")\nplt.ylabel(\"G3\")\nplt.show()","9f3567d6":"#visualize mother job\nplt.figure(figsize = (8,6))\nsns.countplot(df['Fjob'])\nplt.title(\"Father Job of Student Performance\")\nplt.xlabel(\"Father Job\")\nplt.show()","b3bffdc7":"#visualize father job ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'Fjob', y ='G3', palette = 'Set1')\nplt.title(\"Father Job of Student Performance ~ G3\")\nplt.xlabel(\"Father Job\")\nplt.ylabel(\"G3\")\nplt.show()","c42791af":"#visualize reason\nplt.figure(figsize = (8,6))\nsns.countplot(df['reason'], palette = 'Set2')\nplt.title(\"Reason of Student Performance\")\nplt.xlabel(\"Reason\")\nplt.show()","c2db0cc5":"#visualize reason ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'reason', y ='G3')\nplt.title(\"Reason of Student Performance ~ G3\")\nplt.xlabel(\"Reason\")\nplt.ylabel(\"G3\")\nplt.show()","d5f31b0b":"#visualize guardian\nplt.figure(figsize = (8,6))\nsns.countplot(df['guardian'], palette = 'Set1')\nplt.title(\"Guardian of Student Performance\")\nplt.xlabel(\"Guardian\")\nplt.show()","1dabff39":"#visualize guardian ~ G3\nplt.figure(figsize = (8,6))\nsns.boxplot(data = df, x = 'guardian', y ='G3', palette = 'Set2')\nplt.title(\"Guardian of Student Performance ~ G3\")\nplt.xlabel(\"Guardian\")\nplt.ylabel(\"G3\")\nplt.show()","a564643d":"#group gender & school\ngender_school = df.groupby(['sex', 'school']).size().reset_index(name = 'Count')\n\n#visualize gender ~ school\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_school, x = 'sex', y = 'Count', hue = 'school')\nplt.title(\"Gender ~ School\")\nplt.show()","9f6108a0":"#group gender & address\ngender_address = df.groupby(['sex', 'address']).size().reset_index(name = 'Count')\n\n#visualize gender ~ address\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_address, x = 'sex', y = 'Count', hue = 'address', palette = 'Set1')\nplt.title(\"Gender ~ Address\")\nplt.show()","05c8fa8d":"#group gender & family size\ngender_family = df.groupby(['sex', 'famsize']).size().reset_index(name = 'Count')\n\n#visualize gender ~ family size\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_family, x = 'sex', y = 'Count', hue = 'famsize', palette = 'Set2')\nplt.title(\"Gender ~ Family Size\")\nplt.show()","4ddf92a6":"#group gender & performance status\ngender_performance = df.groupby(['sex', 'Pstatus']).size().reset_index(name = 'Count')\n\n#visualize gender ~ performance status\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_performance, x = 'sex', y = 'Count', hue = 'Pstatus')\nplt.title(\"Gender ~ Performance Status\")\nplt.show()","5d15c99c":"#group gender & mother job\ngender_mother = df.groupby(['sex', 'Mjob']).size().reset_index(name = 'Count')\n\n#visualize gender ~ mother job\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_mother, x = 'sex', y = 'Count', hue = 'Mjob', palette = 'Set1')\nplt.title(\"Gender ~ Mother Job\")\nplt.show()","8b3ccdc3":"#group gender & father job\ngender_father = df.groupby(['sex', 'Fjob']).size().reset_index(name = 'Count')\n\n#visualize gender ~ father job\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_father, x = 'sex', y = 'Count', hue = 'Fjob', palette = 'Set2')\nplt.title(\"Gender ~ Father Job\")\nplt.show()","7aaa1199":"#group gender & reason\ngender_reason = df.groupby(['sex', 'reason']).size().reset_index(name = 'Count')\n\n#visualize gender ~ reason\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_reason, x = 'sex', y = 'Count', hue = 'reason')\nplt.title(\"Gender ~ Reason\")\nplt.show()","aab688e4":"#group gender & guardian\ngender_guardian = df.groupby(['sex', 'guardian']).size().reset_index(name = 'Count')\n\n#visualize gender ~ guardian\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_guardian, x = 'sex', y = 'Count', hue = 'guardian', palette = 'Set1')\nplt.title(\"Gender ~ Guardian\")\nplt.show()","4b69443d":"#group gender & school supply\ngender_school = df.groupby(['sex', 'schoolsup']).size().reset_index(name = 'Count')\n\n#visualize gender ~ school supply\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_school, x = 'sex', y = 'Count', hue = 'schoolsup', palette = 'Set2')\nplt.title(\"Gender ~ School Supply\")\nplt.show()","30f4b01f":"#group gender & family supply\ngender_famliy = df.groupby(['sex', 'famsup']).size().reset_index(name = 'Count')\n\n#visualize gender ~ family supply\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_famliy, x = 'sex', y = 'Count', hue = 'famsup')\nplt.title(\"Gender ~ Family Supply\")\nplt.show()","65b57af8":"#group gender & paid by student\ngender_paid = df.groupby(['sex', 'paid']).size().reset_index(name = 'Count')\n\n#visualize gender ~ paid by student\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_paid, x = 'sex', y = 'Count', hue = 'paid', palette = 'Set1')\nplt.title(\"Gender ~ Paid by Student\")\nplt.show()","a61b606d":"#group gender & activities\ngender_activities = df.groupby(['sex', 'activities']).size().reset_index(name = 'Count')\n\n#visualize gender ~ activities\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_activities, x = 'sex', y = 'Count', hue = 'activities', palette = 'Set2')\nplt.title(\"Gender ~ Activities\")\nplt.show()","9d3e7139":"#group gender & nursery\ngender_nursery = df.groupby(['sex', 'nursery']).size().reset_index(name = 'Count')\n\n#visualize gender ~ nursery\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_nursery, x = 'sex', y = 'Count', hue = 'nursery')\nplt.title(\"Gender ~ Nursery\")\nplt.show()","6f559dcd":"#group gender & higher\ngender_higher = df.groupby(['sex', 'higher']).size().reset_index(name = 'Count')\n\n#visualize gender ~ higher\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_higher, x = 'sex', y = 'Count', hue = 'higher', palette = 'Set1')\nplt.title(\"Gender ~ Higher\")\nplt.show()","d627108b":"#group gender & internet\ngender_internet = df.groupby(['sex', 'internet']).size().reset_index(name = 'Count')\n\n#visualize gender ~ internet\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_internet, x = 'sex', y = 'Count', hue = 'internet', palette = 'Set2')\nplt.title(\"Gender ~ Internet\")\nplt.show()","a1e57f09":"#group gender & romantic\ngender_romantic = df.groupby(['sex', 'romantic']).size().reset_index(name = 'Count')\n\n#visualize gender ~ romantic\nplt.figure(figsize = (8,6))\nsns.barplot(data = gender_romantic, x = 'sex', y = 'Count', hue = 'romantic')\nplt.title(\"Gender ~ Romantic\")\nplt.show()","3fc69ad4":"#visualize histogram of each attribute\ndf.hist(figsize = (12,12), color = 'purple')\nplt.show()","4baf9fcd":"#handling categorical data\ndf = pd.get_dummies(df, drop_first = True)\ndf.head()","e8f81326":"#split data \nX = df.drop('G3', axis = 1)\ny = df['G3']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\nprint(X_train.shape)\nprint(y_train.shape)\nprint(X_test.shape)\nprint(y_test.shape)","55c242dd":"#Linear Regression\nlr = LinearRegression()\n%time lr.fit(X_train, y_train)\nlr.score(X_test, y_test)","a16b5741":"#Lasso Regression\nlasso = Lasso(alpha = 0.5)\n%time lasso.fit(X_train, y_train)\nlasso.score(X_test, y_test)","e3d91cfa":"#prediction\ny_pred = lr.predict(X_test)\nprint(y_pred)","139834b9":"#check MAE, MSE & RMSE\nprint('Mean Absolute Error : ', metrics.mean_absolute_error(y_test, y_pred).round(2))\nprint('Mean Squared Error : ', metrics.mean_squared_error(y_test, y_pred).round(2))\nprint('Root Mean Squared Error : ', np.sqrt(metrics.mean_absolute_error(y_test, y_pred).round(2)))","51eb6229":"#visualize model\nx = y_test\ny = y_pred\n\nplt.figure(figsize = (8,6))\nplt.title(\"Linear Regression Model\")\nplt.plot(x, y, 'o', color = 'r')\n\nm, b = np.polyfit(x, y, 1)\nplt.plot(x, m * x + b, color = 'darkblue')","97b5e17d":"#distribution\nplt.figure(figsize = (8,6))\nsns.distplot(df['G3'], color = 'darkorange')\nplt.title(\"Distribution of G3\")\nplt.show()","6203ddfb":"#defining feature\ncoef = pd.Series(lr.coef_, index = X.columns)\n\nimp_coef = pd.concat([coef.sort_values().head(10),\n                     coef.sort_values().tail(10)])","d338fe14":"#visualize feature\nplt.figure(figsize = (10,6))\nimp_coef.plot(kind = 'barh', color = 'lightseagreen')\nplt.title(\"Feature Importance\")\nplt.xlabel('Score')\nplt.ylabel('Features')\nplt.show()","0427ccfe":"# Check Feature Importance","9cb8d6fa":"# Data Extraction ","e38c7f3c":"## Linear Regression Model is the best accuracy score result on 89%","2b7f0b61":"# Regression Model","2273f97a":"# Student Performance Prediction","298f1005":"# Visualization"}}