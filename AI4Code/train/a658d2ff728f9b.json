{"cell_type":{"e792233b":"code","731d5f7d":"code","652281fb":"code","95cf7f56":"code","63a35ae0":"code","35677800":"code","209858c5":"code","57b77526":"code","10d32837":"code","1d305d3a":"code","d313f557":"code","03409a3a":"code","9fdeda25":"code","73d04706":"code","906af62b":"code","16b31f6e":"code","77557786":"code","4dd7875d":"code","65bf29a5":"code","0426fe82":"code","edc3b99a":"code","1793c952":"code","d430023d":"code","528f6bd0":"markdown","c3d412bf":"markdown","b9135f9c":"markdown","efb5c5d8":"markdown","1df706f1":"markdown","1f324b1c":"markdown","0615962b":"markdown","2eb69064":"markdown","1fb17b52":"markdown","ef27d945":"markdown","d4b40509":"markdown","c79ba54b":"markdown","abec8d58":"markdown","001404c1":"markdown","6705a33e":"markdown","3fe76991":"markdown","9e235315":"markdown","72b54be2":"markdown","b2809988":"markdown","e0c71d35":"markdown","0d522db8":"markdown","711f94f2":"markdown","47582783":"markdown","f5ed549e":"markdown","98fead02":"markdown","cfbf02bf":"markdown","b9136d46":"markdown"},"source":{"e792233b":"import pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt","731d5f7d":"data = pd.read_csv('..\/input\/advanced-dls-spring-2021\/train.csv')\ndata.isna().mean()","652281fb":"# \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\nnum_cols = [\n    'ClientPeriod',\n    'MonthlySpending',\n    'TotalSpent'\n]\n\n# \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438\ncat_cols = [\n    'Sex',\n    'IsSeniorCitizen',\n    'HasPartner',\n    'HasChild',\n    'HasPhoneService',\n    'HasMultiplePhoneNumbers',\n    'HasInternetService',\n    'HasOnlineSecurityService',\n    'HasOnlineBackup',\n    'HasDeviceProtection',\n    'HasTechSupportAccess',\n    'HasOnlineTV',\n    'HasMovieSubscription',\n    'HasContractPhone',\n    'IsBillingPaperless',\n    'PaymentMethod'\n]\n\nfeature_cols = num_cols + cat_cols\ntarget_col = 'Churn'","95cf7f56":"# \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432\nfor i in num_cols:\n    print(i)\n    print(data[i].describe(), end='\\n\\n')","63a35ae0":"# data['TotalSpent'] = pd.to_numeric(data['TotalSpent'])\n\n# >>> ValueError: Unable to parse string \" \" at position 1048","35677800":"bad_data = data[data['TotalSpent'] == \" \"]\nlen(bad_data)","209858c5":"data = data[data['TotalSpent'] != \" \"]","57b77526":"data = data.reset_index()\ndata.loc[1048, 'TotalSpent']","10d32837":"data['TotalSpent'] = pd.to_numeric(data['TotalSpent'])","1d305d3a":"for i in cat_cols:\n    print(data[i].value_counts(), end='\\n\\n')","d313f557":"fig, axs = plt.subplots(4, 4)\nfig.set_figwidth(17)    # \u0448\u0438\u0440\u0438\u043d\u0430 \nfig.set_figheight(10)    # \u0432\u044b\u0441\u043e\u0442\u0430\n\n# \u0442\u0430\u043a \u043a\u0430\u043a \u0443 \u043d\u0430\u0441 \u0432\u0441\u0435\u0433\u043e 16 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432, \u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c 16 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c \n# \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e subplots(4, 4)\nfor i in range(4):\n    col_inc = 4 * i\n    for j in range(4):\n        index_for_cols = cat_cols[col_inc + j]\n\n        labels = data[index_for_cols].unique()\n        values = data[index_for_cols].value_counts().unique()\n        size = np.array(values) \/ sum(values) * 100\n\n        explode = [0 for i in range(len(size))]\n        explode[1] = 0.1\n        \n        axs[i, j].pie(values, labels=labels, autopct=\"%.0f%%\", explode=explode,\n                      startangle=90)\n        axs[i, j].set_title(index_for_cols)","03409a3a":"data[target_col].hist()\nNone","9fdeda25":"from sklearn.linear_model import LogisticRegression, LogisticRegressionCV\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.preprocessing import StandardScaler, RobustScaler, LabelEncoder, OneHotEncoder\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.metrics import roc_auc_score, roc_curve","73d04706":"dummy_features = pd.get_dummies(data[cat_cols], drop_first=True)\ndata_for_LRCV = pd.concat([data[num_cols], dummy_features], axis=1)\nprint(data_for_LRCV.columns)\ndata_for_LRCV.head()","906af62b":"X_train, X_test, y_train, y_test = train_test_split(data_for_LRCV, \n                                                    data[target_col], \n                                                    train_size=0.8,\n                                                    random_state=42)","16b31f6e":"scaler = StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","77557786":"LRCV = LogisticRegressionCV(cv=5, n_jobs=-1, scoring='roc_auc')\nLRCV.fit(X_train, y_train)\nprint(LRCV.score(X_train, y_train), LRCV.score(X_test, y_test))","4dd7875d":"!pip install catboost\nimport catboost","65bf29a5":"X_train_CB, X_test_CB, y_train_CB, y_test_CB = train_test_split(data[cat_cols + num_cols],\n                                                                data[target_col], \n                                                                train_size=0.8,\n                                                                random_state=42)\nX_train_CB","0426fe82":"# boosting_model_CB = catboost.CatBoostClassifier(cat_features=cat_cols,\n#                                                 eval_metric='AUC',\n#                                                 silent=True)\n\n# boosting_model_CB.grid_search({'eta': [0.01, 0.03, 0.1, 0.12], \n#                                'n_estimators': [100, 150, 200, 300]},  \n#                            X_train_CB, \n#                            y_train_CB,\n#                            cv=5, \n#                            plot=True)\n\n# boosting_model_CB.get_all_params()","edc3b99a":"boosting_model = catboost.CatBoostClassifier(n_estimators=200, \n                                             cat_features=cat_cols,\n                                             learning_rate=0.12,\n                                             max_leaves=25,\n                                             depth=3,\n                                             grow_policy='Lossguide',\n                                             custom_metric='AUC',\n                                             min_data_in_leaf=90,\n                                             silent=True)\n\nboosting_model.fit(X_train_CB, y_train_CB)\n\ny_train_predicted = boosting_model.predict_proba(X_train_CB)[:, 1]\ny_test_predicted = boosting_model.predict_proba(X_test_CB)[:, 1]","1793c952":"train_auc = roc_auc_score(y_train_CB, y_train_predicted)\ntest_auc = roc_auc_score(y_test_CB, y_test_predicted)\n\nplt.figure(figsize=(10,7))\nplt.plot(*roc_curve(y_train_CB, y_train_predicted)[:2], label='train AUC={:.4f}'.format(train_auc))\nplt.plot(*roc_curve(y_test_CB, y_test_predicted)[:2], label='test AUC={:.4f}'.format(test_auc))\nlegend_box = plt.legend(fontsize='large', framealpha=1).get_frame()\nlegend_box.set_facecolor(\"white\")\nlegend_box.set_edgecolor(\"black\")\nplt.plot(np.linspace(0,1,100), np.linspace(0,1,100))\nplt.show()","d430023d":"X_test = pd.read_csv('..\/input\/advanced-dls-spring-2021\/test.csv')\nsubmission = pd.read_csv('..\/input\/advanced-dls-spring-2021\/submission.csv')\n\nsubmission['Churn'] = boosting_model.predict_proba(X_test[cat_cols + num_cols])[:, 1]\nsubmission.to_csv('.\/my_submission.csv', index=False)","528f6bd0":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043a \u0434\u0430\u043d\u043d\u044b\u043c. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c StandardScaler.","c3d412bf":" \u0418\u0437\u043e\u0431\u0440\u0430\u0437\u0438\u043c pie-\u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 subplots:","b9135f9c":"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c One_Hot_Encoding \u0434\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","efb5c5d8":"\u0418\u0442\u0430\u043a, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438. ","1df706f1":"#3] \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430","1f324b1c":"#1] \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438 \u0430\u043d\u0430\u043b\u0438\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 (2 + 3 \u0431\u0430\u043b\u043b\u043e\u0432)\n\n\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0441\u0440\u0430\u0437\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u0438\u0445 \u043d\u0430 nan-\u044b.","0615962b":"Good.\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043a\u0430\u0441\u0442\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u043e\u043d\u043a\u0443 TotalSpent \u043a \u0442\u0438\u043f\u0443 float64","2eb69064":"\u0412 \u0438\u0442\u043e\u0433\u0435\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f 0.84983 (\u041a\u0438\u0440\u0438\u043b\u043b_\u0421\u043e\u043a\u043e\u043b\u044c\u0441\u043a\u0438\u0439)","1fb17b52":"\u041f\u043e\u0447\u0435\u043c\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435 \u043a\u043e\u0434 \u0437\u0430\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d?\n\u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u0430\u0432\u0442\u043e\u0440 \u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0441\u044f, \u043d\u043e \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0441\u0435\u0442\u043a\u0435 \u0431\u044b\u043b \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043b\u0433\u0438\u043c \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0430\u0441\u043e\u0432 \u0430\u0432\u0442\u043e\u0440 \u0440\u0435\u0448\u0438\u043b \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0442\u044c \u0440\u0443\u043a\u0430\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043f\u043e\u0442\u043c\u043e\u0443 \u0447\u0442\u043e \u0442\u0430\u043a \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u0435\u0435.","ef27d945":"\u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u043d\u0430 train \u0438 test.","d4b40509":"nan-\u043e\u0432 \u043d\u0435\u0442, \u0441\u043b\u0430\u0432\u043d\u043e.\n\n\u0422\u0430\u043a \u043a\u0430\u043a nan-\u043e\u0432 \u043d\u0435\u0442, \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u0438 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432.","c79ba54b":"#2] \u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (3 \u0431\u0430\u043b\u043b\u0430)\n\n1) \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a LogisticRegressionCV, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e: \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043a \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c One-Hot-Encoding \u0438 \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0443\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435. \u041e\u0434\u043d\u0430\u043a\u043e, \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 train \u0438 test.\n\n2) \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043a \u0434\u0430\u043d\u043d\u044b\u043c \u043c\u043e\u0434\u0435\u043b\u044c LogisticRegressionCV","abec8d58":"\u041e\u0448\u0438\u0431\u043a\u0438 \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0437\u043d\u0430\u0447\u0438\u0442 \u0441\u043a\u0430\u0441\u0442\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0443\u0434\u0430\u043b\u043e\u0441\u044c.","001404c1":"\u0421\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a auc","6705a33e":"\u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c\u0441\u044f \u0441 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438.\n\n\u041d\u0430\u0447\u043d\u0451\u043c \u0441 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0435 \u043a\u043e\u043b-\u0432\u043e \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 .value_counts().","3fe76991":"\u0420\u0430\u0437\u043e\u0431\u044a\u0451\u043c \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043d\u0430 train \u0438 test \u0438 \u0437\u0430\u0434\u0430\u0434\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c.","9e235315":"\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 - \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438.\n\n\u041a\u0430\u043a\u043e\u0439 \u043f\u043b\u0430\u043d? \u0412\u043e\u0442 \u043e\u043d:\n- \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u0430\u043a\u043e\u0439 \u0442\u0438\u043f, \u043a\u0430\u043a\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u0442\u044c \u043b\u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 (\u0441\u043f\u043e\u0439\u043b\u0435\u0440: \u0435\u0441\u0442\u044c). \u041d\u0443 \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \u0438 \u0432\u0441\u044f\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n- \u0421\u0442\u0440\u043e\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u043d\u0430\u0448\u0438\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432. \u0414\u043b\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c. \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u0441\u0434\u0435\u043b\u0430\u0435\u043c data.value_counts() \u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c plt.pie()-\u044b. \u0421\u0434\u0435\u043b\u0430\u0435\u043c \u044d\u0442\u043e \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u0444\u0438\u0433\u0443\u0440\u0435.\n- \u0421\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e, \u043d\u0435\u0441\u0431\u0430\u043b\u0430\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043b\u0438 \u043e\u043d\u0430? (\u043d\u0430 Kaggle \u043f\u0440\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435 \u0444\u0430\u0439\u043b\u0430 train.csv \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u043c\u044b (hist-\u044b), \u0442\u0430\u043a \u0447\u0442\u043e \u0438 \u0442\u0430\u043c \u043c\u043e\u0436\u043d\u043e \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u0433\u043b\u044f\u043d\u0443\u0442\u044c \u0435\u0441\u043b\u0438 \u043d\u0430\u0434\u043e \u043f\u043e-\u0431\u044b\u0441\u0442\u0440\u043e\u043c\u0443).","72b54be2":"\u0414\u043b\u044f \u0431\u0443\u0441\u0442\u0438\u043d\u0433\u0430 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 catboost","b2809988":"\u0410\u0433\u0430, \u0432\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430 TotalSpent \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u0438\u043f\u0430 object. \u041d\u0435 \u0442\u043e, \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e. \u041f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043a\u0430\u0441\u0442\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043e\u043b\u043e\u043d\u043a\u0443 \u0432 \u0442\u0438\u043f float64.","e0c71d35":"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c LogisticRegressionCV","0d522db8":"\u0412\u0438\u0434\u0438\u043c, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435, \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435, \u0431\u043e\u043b\u0435\u0435-\u043c\u0435\u043d\u0435\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435, \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 3:1. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u044d\u0442\u0430\u043f\u0443:","711f94f2":"\u041a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u044d\u0442\u0438 \u0431\u0435\u0434\u043d\u044b\u0435 9 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043e\u0442\u0440\u0435\u0433\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c? \u041a\u0430\u043a \u043e\u0434\u043d\u043e \u0438\u0437 \u0440\u0435\u0448\u0435\u043d\u0438\u0439:\n\n- \u0443\u0431\u0435\u0440\u0451\u043c \u044d\u0442\u0438 9 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 \u043d\u0438\u0445, \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u043a\u0430\u0441\u0442\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u0435\u0437 \u044d\u0442\u0438\u0445 9-\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0442\u0438\u043f float64.\n- \u0438\u0437\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0433\u0438\u0441\u0442\u043e\u0433\u0440\u0430\u043c\u044b, \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439. \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u0430\u043a\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u0438 \u0432 \u044d\u0442\u043e\u043c \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443.\n\n\u041e\u0434\u043d\u0430\u043a\u043e, \u0438\u043c\u0435\u044f \u043d\u0430 \u0440\u0443\u043a\u0430\u0445 \u0431\u043e\u043b\u0435\u0435 5 \u0442\u044b\u0441. \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043d\u0435 \u0440\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0442\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u0443\u0447\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u044d\u0442\u0438 9 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0422\u0430\u043a \u0447\u0442\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0443\u0434\u0430\u043b\u0438\u043c \u0438\u0445 =)\n\n\u041a\u043e\u043d\u0435\u0447\u043d\u043e, \u0435\u0441\u043b\u0438 \u0431\u044b \u0442\u0430\u043a\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0431\u044b\u043b\u043e \u0431\u044b \u0431\u043e\u043b\u044c\u0448\u0435, \u0441\u0442\u043e\u0438\u043b\u043e \u0431\u044b \u043d\u0430\u0434 \u044d\u0442\u0438\u043c \u043f\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.","47582783":"\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u043d\u0430 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u041a\u0430\u0433\u0433\u043b\u0430 \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u0445.","f5ed549e":"\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u044b\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b \u0432\u0440\u0443\u0447\u043d\u0443\u044e, \u043d\u0435\u043a\u043e\u0442\u043e\u044b\u0440\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e boosting_model_CB.grid_search(), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 learning_rate (\u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435, \u0447\u0442\u043e \u043d\u0430\u0448\u0451\u043b \u043f\u043e \u044d\u0442\u043e\u043c\u0443 \u043c\u0435\u0442\u043e\u0434\u0443)","98fead02":"ValueError: Unable to parse string \" \" at position 1048\n\n\u0427\u0442\u043e \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0438\u0442? \u042d\u0442\u043e \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043a\u043e\u043b\u043e\u043d\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u0447\u0442\u043e, \u0447\u0442\u043e \u043c\u0435\u0448\u0430\u0435\u0442 \u043a\u0430\u0441\u0442\u0443 \u0438\u0437 object \u0432 float64. \u042d\u0442\u043e \u043d\u0435 nan-\u044b, \u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0438 \" \". \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u043a\u0438\u0445.","cfbf02bf":"\u0422\u0430\u043a \u043a\u0430\u043a \u0443 \u043d\u0430\u0441 \u0441\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 .reset_index() \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c.","b9136d46":"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439:"}}