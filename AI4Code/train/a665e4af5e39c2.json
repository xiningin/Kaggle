{"cell_type":{"91129d86":"code","4798b769":"code","8ff220cd":"code","617ba2b3":"code","d953cafc":"code","e530ea74":"code","379b0e2d":"code","8dddde36":"code","3945a558":"code","1581fd56":"code","cd838b4f":"code","d6b52dc0":"code","6b1236bc":"code","ad405b5e":"code","784eab6b":"code","40acfaeb":"markdown","7f8b0f0d":"markdown","b9ddbb91":"markdown","15dadee7":"markdown","7cd109c9":"markdown","89cdb33d":"markdown","9ae399cd":"markdown","b677f8f5":"markdown"},"source":{"91129d86":"import matplotlib.pyplot as plt\nimport numpy as np","4798b769":"X = np.linspace(10, 5, 1000)\nplt.plot(X, np.sin(X), label='sin')\nplt.plot(X, np.cos(X), label='cos')\nplt.title('Line plot (sin and cos)')\nplt.legend()\nplt.grid()\nplt.show()","8ff220cd":"plt.plot(X, np.sin(X), '--', label='sin', color='red')\nplt.plot(X, np.cos(X), label='cos')\nplt.title('Line plot (sin and cos)')\nplt.legend()\nplt.grid()\nplt.show()","617ba2b3":"plt.figure() \nplt.subplot(2, 1, 1) \nplt.grid()\nplt.plot(X, np.exp(X))\nplt.title('Exp(X)')\nplt.subplot(2, 1, 2)\nplt.grid()\nplt.plot(X, np.log(X))\nplt.title('Log(X)')","d953cafc":"fig, ax = plt.subplots(4)\n\nfunctions = [np.sin(X), np.cos(X), np.exp(X), np.log(X)]\ncolors = ['orange', 'green', 'red', 'blue']\ntitle = ['sin(x)', 'cos(x)', 'exp(x)', 'log(x)']\nfor index, function in enumerate(functions):\n    ax[index].plot(X, function, color=colors[index])\n    ax[index].set_title(title[index])","e530ea74":"colors = ['orange', 'green', 'red', 'blue']\nfor index in range(1, 5):\n    plt.plot(X, X * index, '--', color=colors[index - 1], label=f'index: {index}')\nplt.grid()\nplt.legend()\nplt.title('Linear plot')\nplt.xlabel('X')\nplt.ylabel('Y')","379b0e2d":"X_value = np.arange(1, 10, 0.4)\nY_value = np.arange(1, 10, 0.4)","8dddde36":"fig, ax = plt.subplots(6)\nmarkers = ['x', 'v', '+', '^', '<', '>']\nfor index, marker in enumerate(markers):\n    ax[index].plot(X_value, Y_value, marker)\n    ax[index].set_title(f'Scatter marker {marker}')","3945a558":"plt.title('Error bar')\nplt.errorbar(X_value, Y_value, yerr=0.9, fmt='o', capsize=0)\nplt.xlabel('X')\nplt.ylabel('Y')","1581fd56":"import pandas as pd\n\nX_value = np.random.randn(15)\nY_value = np.random.randn(15)\n_len = 900\nplt.scatter(X_value, Y_value, c=np.random.randn(15), s=_len * np.random.randn(15), alpha=0.4, cmap='viridis')\nplt.title('Scatter plot')\nplt.colorbar()\n\ndf = pd.DataFrame(X_value, columns=['X'])\ndf['y'] = pd.DataFrame(Y_value)\ndf.head(10)","cd838b4f":"def sample_function(X, y):\n    return np.sin(X) + np.cos(X * y)\n\nX_value = np.linspace(0, 5, 2)\nY_value = np.linspace(0, 5, 512)\n\nX_value, Y_value = np.meshgrid(X_value, Y_value)\nC_value = plt.contour(X_value, Y_value, sample_function(X_value, Y_value))\nplt.clabel(C_value, fontsize=10)\nplt.title('Plot countour')","d6b52dc0":"ax = plt.axes(projection='3d')\nax.plot_surface(X_value, Y_value, sample_function(X_value, Y_value), rstride=1, cstride=1, cmap='viridis', edgecolor='none')\nax.set_title('Surface 3D plot')","6b1236bc":"plt.hist(np.random.randn(30000), color='green', alpha=0.2)\nplt.title('Plot histogram sample')","ad405b5e":"_len = 1000\nfor k in range(0, 4):\n    a_limit = np.random.rand()\n    b_limit = np.random.rand()\n    x = np.random.normal(a_limit, b_limit, _len)\n    plt.hist(x, alpha=0.3)\n    \nplt.title('Hist plot normal')","784eab6b":"data_i = np.arange(start=0, stop=100, step=4)\nplt.boxplot(data_i)","40acfaeb":"## Contour plots","7f8b0f0d":"## Scatter","b9ddbb91":"## Line plot","15dadee7":"### Histogram","7cd109c9":"### Boxplot","89cdb33d":"## 3D Surface plot","9ae399cd":"# Matplotlib Plot Samples","b677f8f5":"# Statistics Learning"}}