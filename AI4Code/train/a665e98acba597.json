{"cell_type":{"79372430":"code","2bd709f6":"code","acbf79de":"code","19074313":"code","f3a6c2d0":"code","2d46b8f5":"code","dc11d817":"code","f4365a9e":"code","6e17b080":"code","b8eccde4":"code","6fd3d89a":"code","42a28eb4":"code","6ffde6ab":"code","1d32f236":"code","32375909":"code","1dd1dd2d":"code","fd31e61a":"code","e1dc548b":"code","457cae44":"code","b530a599":"code","3c1e4699":"code","167fe3dc":"markdown","7b1eff6d":"markdown","aff46930":"markdown","153186ad":"markdown","dcf91af6":"markdown","a7f0529c":"markdown","5aa8cf31":"markdown","4f5e82dc":"markdown","dd7def1f":"markdown","5e64e82d":"markdown","c19ed7fc":"markdown"},"source":{"79372430":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2bd709f6":"!pip install download","acbf79de":"from __future__ import absolute_import,division,print_function,unicode_literals\n\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nfrom datetime import datetime\n\nimport pandas as pd\n\nfrom download import download\n\nmpl.rcParams['figure.figsize'] = (8,6)\nmpl.rcParams['axes.grid'] = False","19074313":"def convert_to_date(x):\n    return datetime.strptime(x,'%m\/%d\/%Y')","f3a6c2d0":"df=pd.read_csv('https:\/\/raw.githubusercontent.com\/srivatsan88\/YouTubeLI\/master\/dataset\/amazon_revenue_profit.csv',\n              parse_dates=['Quarter'],date_parser=convert_to_date)","2d46b8f5":"df.head()","dc11d817":"import plotly.express as px\nfig = px.line(df, x = 'Quarter',y = 'Revenue',title = 'Amazon Revenue')\n\nfig.update_xaxes(\n    rangeslider_visible= True,\n    rangeselector=dict(\n                        buttons = list([\n                        dict(count = 3,label = '1y',step='year',stepmode = \"backward\"),\n                        dict(count = 9,label = '3y',step='year',stepmode = \"backward\"),\n                        dict(count = 15,label = '5y',step='year',stepmode = \"backward\"),\n                        dict(step= 'all')\n                            ])        \n                        )\n                   )\nfig.show()","f4365a9e":"from statsmodels.tsa.stattools import kpss","6e17b080":"tstest=kpss(df['Revenue'],'ct')","b8eccde4":"tstest","6fd3d89a":"amz_df=df.set_index('Quarter')","42a28eb4":"import statsmodels.api as sm\n","6ffde6ab":"res=sm.tsa.seasonal_decompose(amz_df['Revenue'],model='multiplicative')","1d32f236":"res.plot()","32375909":"res.seasonal.plot()","1dd1dd2d":"res.trend.plot()","fd31e61a":"res.resid.plot()","e1dc548b":"res.resid","457cae44":"res.observed[4]","b530a599":"res.seasonal[4]*res.trend[4]*res.resid[4]","3c1e4699":"pd.DataFrame(res.observed\/res.trend).plot()","167fe3dc":"**Null hypothesis: Data is stationary**\n\n**Alternate hypothesis: Data is not stationary**","7b1eff6d":"The decomposition of time series is a statistical task that deconstructs a time series into several components\n\nTrend component - which reflects the long-term progression of the series - Trend can be positive or negative or both\n\nSeasonal Component - includes cyclical component\n\nNoise or residual - remainder of the time series after the other components have been removed\n\nAR and MA model assumes time series to be stationary and real-world data - they are often governed by a (deterministic) trend and they might have (deterministic) cyclical or seasonal components","aff46930":"**Value from the model**","153186ad":"**We can see that trend and seasonality occurs in the plot**","dcf91af6":"**As the trend is decreasing and there occurs seasonality in data**","a7f0529c":"**Observed value**","5aa8cf31":"# Decomposition","4f5e82dc":"0.17 is the KPSS test stats falls in greater than 2.5% so the Null hypothesis is rejected\np values is 0.03 which means Null values is rejected\nhttps:\/\/kite.com\/python\/docs\/statsmodels.tsa.stattools.kpss","dd7def1f":"**As the model is multiplicative, dividing the trend**","5e64e82d":"**Kwiatkowski\u2013Phillips\u2013Schmidt\u2013Shin (KPSS) tests are used for testing a null hypothesis that an observable time series is stationary around a deterministic trend**","c19ed7fc":"# Stationary: variance in data don't change over a period of time"}}