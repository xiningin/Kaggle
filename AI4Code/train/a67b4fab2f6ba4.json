{"cell_type":{"d2fbbbe1":"code","3eadc92d":"code","eb5b0d03":"code","ce19891c":"code","32340d51":"code","8c297259":"code","f4f42bbb":"code","eb09bbb7":"code","5d97704c":"code","22f3138e":"code","8f649348":"code","72f15de7":"code","851ac355":"code","c4816146":"code","a095cadd":"code","62d881b7":"code","3af7e698":"code","6b6be330":"code","fa86759d":"code","694cc71c":"code","c8438314":"code","4ee6e558":"code","710efa89":"code","ac2120b0":"code","74503bd3":"code","a8c09f6b":"code","1df1dc05":"code","213a6635":"code","342d3de5":"code","819c5186":"code","88d48066":"code","a0b64496":"markdown","1ce24560":"markdown","d94b7920":"markdown","62fe3c58":"markdown","0993e318":"markdown","d1e89db4":"markdown","20228351":"markdown","e4ad6b0d":"markdown","a3548876":"markdown","ed983cf4":"markdown","b5667807":"markdown","ac6695b1":"markdown","a5b5b78e":"markdown","c3642778":"markdown","8d4b8422":"markdown","c74c6a0a":"markdown","037e7303":"markdown"},"source":{"d2fbbbe1":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, classification_report, accuracy_score","3eadc92d":"data = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv')\ndata.head(15)","eb5b0d03":"data.info()","ce19891c":"data.isnull().sum()","32340d51":"data.describe()","8c297259":"data.quality.value_counts()","f4f42bbb":"counts = data.quality.value_counts()\nsns.barplot(x=counts.index, y=counts)\nplt.xlabel('quality')\nplt.ylabel('counts')","eb09bbb7":"data.head()","5d97704c":"data['quality']=data.quality.apply(lambda x:1 if x>=7 else 0)\ndata.head(15)","22f3138e":"data.quality.value_counts()","8f649348":"X = data.drop('quality',axis=1)\ny = data['quality']","72f15de7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=12)","851ac355":"y_train.value_counts()","c4816146":"y_test.value_counts()","a095cadd":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.fit_transform(X_test)","62d881b7":"def func(model):\n    model.fit(X_train, y_train)\n    pred = model.predict(X_test)\n    acc = accuracy_score(pred, y_test)\n    print('Test Accuracy : {:.2f}%'.format(acc*100))\n    print(classification_report(y_test, pred))\n    cf_matrix = confusion_matrix(y_test, pred)\n    sns.heatmap(cf_matrix\/np.sum(cf_matrix), annot=True,fmt= '0.2%')\n    return acc","3af7e698":"from sklearn.linear_model import LogisticRegression\nlog_reg = LogisticRegression()\nacc_log_reg = func(log_reg)","6b6be330":"from sklearn.tree import DecisionTreeClassifier\nmodel_dtc = DecisionTreeClassifier()\nacc_dtc = func(model_dtc)","fa86759d":"from sklearn.ensemble import RandomForestClassifier\nmodel_rfc = RandomForestClassifier()\nacc_rfc = func(model_rfc)","694cc71c":"from sklearn.svm import SVC\nmodel_SVC = SVC()\nacc_SVC = func(model_SVC)","c8438314":"from sklearn.linear_model import SGDClassifier\nclf = SGDClassifier()\nacc_clf=func(clf)","4ee6e558":"from sklearn.ensemble import AdaBoostClassifier\nmodel_adaB = AdaBoostClassifier()\nacc_adaB=func(model_adaB)","710efa89":"from sklearn.neighbors import KNeighborsClassifier\nmodel_neigh = KNeighborsClassifier()\nacc_neigh = func(model_neigh)","ac2120b0":"from sklearn.ensemble import ExtraTreesClassifier\nmodel_xtc = ExtraTreesClassifier()\nacc_xtc = func(model_xtc)","74503bd3":"from sklearn.ensemble import BaggingClassifier\nmodel_bc = BaggingClassifier()\nacc_bc = func(model_bc)","a8c09f6b":"from sklearn.naive_bayes import GaussianNB\nmodel_GNB = GaussianNB()\nacc_GNB = func(model_GNB)","1df1dc05":"from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\nmodel_LDA = LinearDiscriminantAnalysis()\nacc_LDA = func(model_LDA)","213a6635":"from sklearn.ensemble import GradientBoostingClassifier\nmodel_GBC = GradientBoostingClassifier()\nacc_GBC = func(model_GBC)","342d3de5":"output = pd.DataFrame({\"Model\":['Logistic Regression','Decision Tree Classifier','Random Forest Classifier',\n                                'SVC','SGD Classifier','AdaBoost Classifier','KNeighbors Classifier',\n                               'Extra Trees Classifier','Bagging Classifier','Gaussian NB',\n                               'Linear Discriminant Analysis','Gradient Boosting for classification'],\n                      \"Accuracy\":[acc_log_reg, acc_dtc, acc_rfc, acc_SVC, acc_clf, acc_adaB,\n                                 acc_neigh, acc_xtc, acc_bc, acc_GNB, acc_LDA, acc_GBC]})","819c5186":"output","88d48066":"plt.figure(figsize=(12, 6))\nplots = sns.barplot(x='Model', y='Accuracy', data=output)\nfor bar in plots.patches:\n    plots.annotate(format(bar.get_height(), '.2f'),\n                   (bar.get_x() + bar.get_width() \/ 2,\n                    bar.get_height()), ha='center', va='center',\n                   size=15, xytext=(0, 8),\n                   textcoords='offset points')\n\nplt.xlabel(\"Models\", size=14)\nplt.xticks(rotation=90);\nplt.ylabel(\"Accuracy\", size=14)\nplt.show()","a0b64496":"# Function","1ce24560":"# Logistic Regression","d94b7920":"# Feature Scaling","62fe3c58":"# SGDClassifier","0993e318":"# GaussianNB","d1e89db4":"# Decision Tree Classifier","20228351":"# Gradient Boosting for classification","e4ad6b0d":"# LinearDiscriminantAnalysis","a3548876":"# Adaboost Classifier","ed983cf4":"# Load Dataset","b5667807":"# KNeighbors Classifier","ac6695b1":"# BaggingClassifier","a5b5b78e":"# ExtraTreesClassifier","c3642778":"# Final Report","8d4b8422":"# Import Libraries","c74c6a0a":"# Random Forest Classifier","037e7303":"# SVC"}}