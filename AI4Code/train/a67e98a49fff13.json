{"cell_type":{"79f283cc":"code","bacc4e7e":"code","5eb07720":"code","9b1199b9":"code","1222d7ec":"code","fd6edbfb":"code","897c7e02":"code","9f211a44":"code","4b92853c":"code","cd858f27":"markdown","faf79aea":"markdown","f61f847e":"markdown","4935e1bf":"markdown","0e3badc8":"markdown","b2377b49":"markdown"},"source":{"79f283cc":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \nimport numpy as np                # algebra lineal\nimport pandas as pd               # data frames\nimport seaborn as sns             # gr\u00e1ficos\nimport matplotlib.pyplot as plt   # gr\u00e1ficos\nimport scipy.stats                # estad\u00edsticas\nfrom datetime import datetime\nfrom sklearn import preprocessing\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nimport warnings\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\nimport os\nprint(os.listdir(\"..\/input\"))\n# Any results you write to the current directory are saved as output.","bacc4e7e":"listings = pd.read_csv(\"..\/input\/dataset\/listings2.csv\")\n# We don't use this information for this first exercise\n# prices = pd.read_csv(\"..\/input\/calendar.csv\")\n# reviews = pd.read_csv(\"..\/input\/reviews.csv\")\n\nlistings.head()","5eb07720":"lDf = listings.loc[:, [\"id\", \"review_scores_location\", \"price\", \"bedrooms\", \"first_review\", \"neighbourhood_cleansed\"]]\n\nprint(\"_ COLUMNS INFO _\")\nprint(lDf.info())\n\nlDf.head()","9b1199b9":"# Scrores Rating change 0 for the mean and divide by 100\nlDf['review_scores_location'] = lDf['review_scores_location'].fillna(-1)\nlDf['review_scores_location'].replace('', -1, inplace=True)\nlDf['first_review'] = lDf['first_review'].fillna(0)\n\n# Format currency to number\nlDf['price'] = lDf['price'].replace('[\\$,]', '', regex=True).astype(float)\n# Change 0 bedrooms to 1\nlDf['bedrooms'] = lDf['bedrooms'].replace(to_replace=0,value=1)\n# Normalize price according to bedrooms\nlDf[\"price_norm\"] = lDf[\"price\"] \/ lDf[\"bedrooms\"] \n\ndef isNaN(num):\n    return num != num\n\n# Reduce columns\nlDf = lDf.loc[:, [\"id\", \"review_scores_location\", \"price_norm\", \"first_review\", \"neighbourhood_cleansed\"]]\nfor i in lDf.index:\n    date_review = lDf.at[i,'first_review']\n    score = lDf.at[i,'review_scores_location']\n    nGhood = lDf.at[i,'neighbourhood_cleansed'] \n    px = lDf.at[i,'price_norm'] \n    # Format date in elapsed months\n    if(date_review!=0):\n        date_review = datetime.strptime(date_review, '%Y-%M-%d')\n        date_review = (datetime.now() - date_review).days\n        lDf.at[i, 'first_review'] = float(date_review\/30)\n    # Replace not reviewed listings location score by its neighbourhood average\n    if(score==-1):\n        score_mean = lDf[ (lDf.neighbourhood_cleansed == nGhood) \n                         & (lDf.review_scores_location > 0) ].mean()['review_scores_location']\n        lDf.at[i,'review_scores_location'] = score_mean\n    if(isNaN(px)):\n         lDf.at[i,'price_norm'] = lDf[ (lDf.neighbourhood_cleansed == nGhood) ].mean()['price_norm']\n    \n    \n# Print transformed DataSet normalized and without outliers\nlDf.head()","1222d7ec":"from scipy.cluster.hierarchy import fcluster\n# Neighbourhoods Data Frame\nnLDf = lDf.loc[:, [\"neighbourhood_cleansed\", \"review_scores_location\"]]\n\nmeanSFD = nLDf.groupby(['neighbourhood_cleansed'], as_index=False).mean()\nmeanSFD.head()\n# Neighbourhoods ranking\nneigsDs = meanSFD.sort_values(['review_scores_location'],ascending=False).reset_index(drop=False)\nplt.figure(figsize=(20,20))\nsns.barplot(x=neigsDs[\"review_scores_location\"],y=neigsDs[\"neighbourhood_cleansed\"])\nplt.xlabel(\"Scores\",fontsize=15)\nplt.ylabel(\"Neighbourhoods\",fontsize=15)\nplt.title(\"Best Locations in Seattle - Airbnb.com\",fontsize=15)\nplt.show()","fd6edbfb":"with warnings.catch_warnings():\n    # Compare location score vs. price\n    sns.lmplot(x=\"review_scores_location\",y=\"price_norm\",data=lDf)","897c7e02":"dist_sin = linkage(lDf.loc[:,[\"price_norm\",\"review_scores_location\",\"first_review\"]],method=\"single\")\nplt.figure(figsize=(18,6))\ndendrogram(dist_sin, leaf_rotation=90)\nplt.xlabel('Index')\nplt.ylabel('D')\nplt.suptitle(\"DENDROGRAM SINGLE METHOD\",fontsize=18)\nplt.show()","9f211a44":"dist_comp = linkage(lDf.loc[:,[\"price_norm\",\"review_scores_location\",\"first_review\"]],method=\"ward\")\n\nplt.figure(figsize=(25,10))\ndendrogram(dist_comp, leaf_rotation=120)\nplt.xlabel('sample index')\nplt.ylabel('distance')\nplt.suptitle(\"Hierarchical Clustering Dendrogram - Complete Method\",fontsize=20) \nplt.show()","4b92853c":"lDf_D=lDf.copy()\nlDf_D['2_clust']=fcluster(dist_comp,2, criterion='maxclust')\nlDf_D['3_clust']=fcluster(dist_comp,3, criterion='maxclust')\nlDf_D['4_clust']=fcluster(dist_comp,4, criterion='maxclust')\nlDf_D.head()\n\nplt.figure(figsize=(24,7))\n\nplt.suptitle(\"Hierarchical Clustering CM\",fontsize=25)\n\nplt.subplot(1,4,1)\nplt.title(\"K = 2\",fontsize=20)\nsns.scatterplot(x=\"price_norm\",y=\"review_scores_location\", data=lDf_D, hue=\"2_clust\",palette=\"Paired\")\n\nplt.subplot(1,4,2)\nplt.title(\"K = 3\",fontsize=20)\nsns.scatterplot(x=\"price_norm\",y=\"review_scores_location\", data=lDf_D, hue=\"3_clust\",palette=\"Paired\")\n\nplt.subplot(1,4,3)\nplt.title(\"K = 4\",fontsize=20)\nsns.scatterplot(x=\"price_norm\",y=\"review_scores_location\", data=lDf_D, hue=\"4_clust\",palette=\"Paired\")","cd858f27":"We observe 2 clusters of points using the complete method.","faf79aea":"<h1>+++ Transforming data<\/h1>","f61f847e":"Previous clustering techniques showed that single method is not very good for this dataset. On the other hand complete method is identifying to big groups and the above graph with k=3 seems to indicate that higher rates per night gives guests a better location \/ neighbourhood which makes sense.\n\nAs an extension of this work there is another interesting criterion which is to correlate every listing description with the guest reviews, to provide and index of truthfulness.","4935e1bf":"Here is the neighbourhood ranking to stay in Seattle.","0e3badc8":"<h1>+ Introduction, february 15th \/ 2019<\/h1>\n\n10 years ago creativity and *the Sharing Economy* allowed Airbnb to emerge on the Internet [ founders: Brian Chesky, Joe Gebbia Nathan Blecharczyk had an idea to afford the rent in San Francisco - https:\/\/getpaidforyourpad.com\/blog\/the-airbnb-founder-story\/ ]. \n\n<table>\n    <tr>\n        <td><a href='https:\/\/www.airbnb.com.co\/rooms\/12000534'><img src=\"https:\/\/drive.google.com\/uc?id=1uTNB4LDj6OHlDUTheV1G6t8-vZYQpqwa\"><\/a><\/td>\n        <td>\n            <p>\n            Nowdays is a website where people can list, find, and rent lodging on almost every city in the world. Almost always, for a lower price than a hotel travelers get a different and memorable experience.\n            <\/p>\n            <p>\n            On Airbnb people can search using various criteria like location, price range, number of rooms, entire apartments or private bedrooms, etc.\n            <\/p>\n        <\/td>\n    <\/tr>\n<\/table>\n\n<h1>++ Idea<\/h1>\n**It occurs to me that it will be interesting to create a measure by different criteria to determine clusters of the listings based on**:\n1. Host experience: Measure the elapsed months since the first review (v.gr. 20 months). If the listing has never been reviewed use 0.\n2. Location ratings: Indicated by the location reviews of the guests (0 to 10). If the listing has never been reviewed use the average rating for the same n.\n3. Price per night: Normalized by the number of rooms (v.gr. \\$100 in a 2 bedrooms apartment means \\$50).","b2377b49":"For this work we take a Dataset of listings from Seattle, WA, USA on a particular period of time:\n\n<table border=\"0\" align=\"center\">\n    <tr>\n        <td><a href='https:\/\/www.airbnb.com.co\/s\/Seattle--Washington--Estados-Unidos\/homes?refinement_paths%5B%5D=%2Fhomes&query=Seattle%2C%20Washington%2C%20Estados%20Unidos&map_toggle=true&allow_override%5B%5D=&zoom=11&search_by_map=true&sw_lat=47.60396858147995&sw_lng=-122.50519050458476&ne_lat=47.80544896193544&ne_lng=-122.19645620439954&s_tag=widMAbd8'><img src=\"https:\/\/drive.google.com\/uc?id=1SSZLduz9A7ZMjV2CjUcuQ2wfy5VvesXx\"><\/a><\/td>\n        <td><a href='https:\/\/www.airbnb.com.co\/s\/Seattle--Washington--Estados-Unidos\/homes?refinement_paths%5B%5D=%2Fhomes&query=Seattle%2C%20Washington%2C%20Estados%20Unidos&map_toggle=true&allow_override%5B%5D=&zoom=11&search_by_map=true&sw_lat=47.60396858147995&sw_lng=-122.50519050458476&ne_lat=47.80544896193544&ne_lng=-122.19645620439954&s_tag=widMAbd8'><img src=\"https:\/\/drive.google.com\/uc?id=1C_FK-A4f845xdhnjmKmnAGjo5VzkcX15\"><\/a><\/td>\n    <\/tr>\n<\/table>"}}