{"cell_type":{"27673b3e":"code","7dce9c5e":"code","533e5547":"code","388badaf":"code","ff657952":"code","9e37ffaa":"code","28eb8242":"code","fd21d2cf":"code","72aa575b":"code","826733e1":"code","230d17d0":"code","eab6df36":"code","6363ed03":"code","bafbac78":"code","de3f76aa":"code","e59a15ec":"code","cedd20c9":"code","c13edab8":"code","28db7a25":"markdown"},"source":{"27673b3e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7dce9c5e":"import pandas as pd\n\ndfa = pd.read_csv('\/kaggle\/input\/gold-prices\/annual_csv.csv')\ndfm = pd.read_csv('\/kaggle\/input\/gold-prices\/monthly_csv.csv')\ndfa","533e5547":"dfa['Price'].plot()","388badaf":"dfa['Date'] = pd.to_datetime(dfa['Date'])\ndfa.info()","ff657952":"dfa['Date']","9e37ffaa":"dfa = pd.DataFrame(dfa['Price']).set_index(dfa['Date'])\ndfa","28eb8242":"import matplotlib.pyplot as plt\n\ntime = pd.Timestamp('1990-12')\ntrain = dfa.loc[:time,['Price']]\ntest = dfa.loc[time:,['Price']]\n\nax = train.plot()\ntest.plot(ax=ax)\nplt.legend(['train', 'test'])","fd21d2cf":"for s in range(0, 10):\n    train['shift_{}'.format(s)] = train['Price'].shift(s)\n    test['shift_{}'.format(s)] = test['Price'].shift(s)\n\ntrain.head(10)","72aa575b":"X_train = train.dropna().drop('Price', axis=1)\ny_train = train.dropna()[['Price']]\n\nX_test = test.dropna().drop('Price', axis=1)\ny_test = test.dropna()[['Price']]\n\n\nX_train_t = X_train.values.reshape(X_train.values.shape[0], 10, 1)\nX_test_t = X_test.values.reshape(X_test.values.shape[0], 10, 1)\nX_train_t.shape","826733e1":"from keras.models import Sequential\nfrom keras.layers import Dense, LSTM, Activation\nimport random as python_random\nimport tensorflow as tf\n\nnp.random.seed(42)\npython_random.seed(42)\ntf.random.set_seed(42)\n\nmodel = Sequential()\nmodel.add(LSTM(100, input_shape=(10,1), activation='gelu'))\nmodel.add(Dense(1))\nmodel.compile(optimizer = 'adam', loss = 'mean_squared_error')\n\nmodel.summary()","230d17d0":"history = model.fit(X_train_t, y_train, epochs=1000, batch_size=128)","eab6df36":"model.evaluate(X_test_t, y_test, batch_size=32)","6363ed03":"y_pred = model.predict(X_test_t, batch_size=32)\ncom = pd.DataFrame({'test' : y_test.Price.values,\n             'pred' : y_pred.reshape(-1)})","bafbac78":"ax = com.plot()\nplt.legend(['test', 'pred'])","de3f76aa":"arr = []\ndata = X_test_t[-1].reshape(-1)\n\nfor i in range(10):\n    y_pred = model.predict(data.reshape(1,-1,1), batch_size=32)\n    y_pred = y_pred.reshape(-1)[0]\n    data = np.roll(data,1)\n    arr.append(y_pred)\narr.insert(0, y_test.Price[-1])\narr","e59a15ec":"X = []\nX.append(pd.Timestamp('2019-12'))\nfor i in range(0,10):\n    X.append(pd.Timestamp('202'+str(i)+'-12'))\nX","cedd20c9":"plt.plot(dfa['Price'])\nplt.plot(X[:],arr[:])","c13edab8":"plt.figure(figsize=(13,9))\n\nplt.plot(dfa['Price']['2000-12-01':])\n\nplt.plot(X[:4],arr[:4])","28db7a25":"# Real Gold Price History\n\n![image.png](attachment:d26856e8-a949-4f6c-95e3-d48ff18a67ce.png)![image.png](attachment:3cd4b6c5-0018-43ba-921b-1c18509df11f.png)\n\nhttps:\/\/goldprice.org\/ko\/gold-price-charts\/all-data-gold-price-history-in-hong-kong-dollars-per-kilogram"}}