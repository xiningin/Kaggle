{"cell_type":{"adbb4628":"code","7803f181":"code","76aeeb4f":"code","79660615":"code","302922b4":"code","8c574f98":"code","599d461d":"code","5ca2a0a8":"code","7dc725dc":"code","2dc8cf58":"code","14b6f04a":"code","b88245c6":"code","bfdaaa23":"code","b3b752a7":"code","2f885982":"code","9d68ac0e":"code","a6322523":"code","de97f143":"code","7e63b984":"code","7ed18981":"code","da9a593e":"code","8e11adb9":"code","150a97e8":"code","eefa76f6":"code","bcaf0d90":"code","efc9830e":"code","a60573fd":"code","1b29b9cc":"code","f699b270":"code","d98d7ef0":"code","7b0e19fe":"code","36b97c17":"code","3369a0e1":"code","5eeaf97e":"code","3dc48b70":"code","cec749c6":"code","adf54540":"code","de5665fb":"code","bfd21c90":"markdown","1b8af9ba":"markdown","f1fb02ba":"markdown","6bcbedda":"markdown","423db7d7":"markdown","3ea2742a":"markdown","81a01f2d":"markdown","8d5e5d49":"markdown","d806ca5e":"markdown","09810a9f":"markdown","4fb44a9c":"markdown","4a040186":"markdown","20cbd93d":"markdown","fa2d975c":"markdown","6e7f4035":"markdown","b6905e6c":"markdown"},"source":{"adbb4628":"import numpy as np \nimport plotly.express as px,plotly.graph_objs as go\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.linear_model import LinearRegression\nimport os\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Activation\nfrom tensorflow.keras.optimizers import Adam\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","7803f181":"df = pd.read_csv('..\/input\/housesalesprediction\/kc_house_data.csv')","76aeeb4f":"df","79660615":"df['date'] = pd.to_datetime(df['date'])","302922b4":"df['year'] = df['date'].apply(lambda date:date.year)","8c574f98":"df.drop(['date'],axis=1,inplace=True)","599d461d":"px.defaults.color_continuous_scale\npx.scatter(df,x='long',y='lat',color='price',color_continuous_scale=px.colors.sequential.Emrld)","5ca2a0a8":"df= df.drop(['zipcode','id'],axis=1)","7dc725dc":"df2 = df[df['price']<=3000000]","2dc8cf58":"df2.describe()","14b6f04a":"X = df2.drop('price',axis=1)\ny = df2['price']","b88245c6":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=101)","bfdaaa23":"scale = MinMaxScaler()","b3b752a7":"X_train = scale.fit_transform(X_train)\nX_test = scale.transform(X_test)","2f885982":"lg = LinearRegression()","9d68ac0e":"lg.fit(X_train,y_train)","a6322523":"pred1 = lg.predict(X_test)","de97f143":"pred1 = pd.Series(pred1)","7e63b984":"pred1.index = y_test.index","7ed18981":"model = Sequential()\n\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(19,activation='relu'))\nmodel.add(Dense(1))\n\nmodel.compile(optimizer='adam',loss='mse')","da9a593e":"model.fit(x=X_train,y=y_train.values,\n          validation_data=(X_test,y_test.values),\n          batch_size=128,epochs=1000)","8e11adb9":"losses = pd.DataFrame(model.history.history)","150a97e8":"losses.plot()","eefa76f6":"predictions = model.predict(X_test)","bcaf0d90":"a=[]\nfor i in range(len(predictions)):\n    a.append(predictions[i][0])","efc9830e":"pred = pd.Series(a)","a60573fd":"pred.index = y_test.index","1b29b9cc":"p=pd.concat([pred,pred1,y_test],axis=1)","f699b270":"p.columns=['Neural Network','Linear Regression','Original']","d98d7ef0":"p['Neural net score']=None\nfor i in p.index:\n\n    \n    if p['Original'][i] >= p['Neural Network'][i]:\n        p['Neural net score'][i] = p['Original'][i] - p['Neural Network'][i]\n    else:\n        p['Neural net score'][i] = p['Neural Network'][i] - p['Original'][i] ","7b0e19fe":"p['linear score']=None\nfor i in p.index:\n    if p['Original'][i] >= p['Linear Regression'][i]:\n        p['linear score'][i] = p['Original'][i] - p['Linear Regression'][i]\n    else:\n        p['linear score'][i] = p['Linear Regression'][i] - p['Original'][i] ","36b97c17":"linear_score = np.array(p['linear score'])","3369a0e1":"Neural_score = np.array(p['Neural net score'])","5eeaf97e":"np.average(Neural_score)","3dc48b70":"np.average(linear_score)","cec749c6":"p","adf54540":"plt.title('Linear Regression')\nplt.scatter(y_test,pred1)\nplt.plot(y_test,y_test,'r')\n","de5665fb":"plt.title('Neural Network')\nplt.scatter(y_test,predictions)\nplt.plot(y_test,y_test,'r')","bfd21c90":"<html>\n    <h1><font face='Courier'>Prediction<\/font><\/h1>","1b8af9ba":"<html>\n    <h1><i><font face='Courier' size = 10>Data Cleaning<\/font><\/i><\/h1>","f1fb02ba":"<html>\n    <h1><font face='Courier'>We will keep only year from date because month and date both barely make a difference in Price<\/font><\/h1>","6bcbedda":"<html>\n    <h1><font face='Courier'>Neural ntwork came out better but if you decrease epochs, say 400 epochs then linear regression will give better outcome<\/font><\/h1>","423db7d7":"<html>\n    <h1><i><font face='Courier' size = 10>Neural Network<\/font><\/i><\/h1>","3ea2742a":"<html>\n    <h1><font face='Courier'>Zipcode and id also don't matter much<\/font><\/h1>","81a01f2d":"<html>\n    <h1><font face='Courier'>I am using only those who have price under 3 millon,because most houses are in this range,but you can try with over 4 or 5 million but if you take full dataset then a few houses are be far off in 6 - 7 million which will make  a big difference in predictions<\/font><\/h1>","8d5e5d49":"<html>\n    <h1><font face='Courier'>In the Graph below the closer the points to the red line the higher accuracy you get<\/font><\/h1>","d806ca5e":"<html>\n    <h1><i><font face='Courier' size = 10>Linear Regression<\/font><\/i><\/h1>","09810a9f":"in this graph start was good but as the value gets higher points tend to go near X-axis","4fb44a9c":"<html>\n    <h1><i><font face='Courier' size = 10>Prediction and Evaluation<\/font><\/i><\/h1>","4a040186":"<html>\n    <h1><i><font face='Courier' size = 10>Importing Libraries<\/font><\/i><\/h1>","20cbd93d":"<html>\n    <h1><i><font face='Courier' size = 10>Scaling the data and Making the Model<\/font><\/i><\/h1>","fa2d975c":"<html>\n    <h1><font face='Courier'>Checking the Average loss<br>\n        the lesser the better<\/font><\/h1>","6e7f4035":"in this graph points steadily go away fom the line but its not very bad","b6905e6c":"<html>\n    <h1 align='center'><b>\n    <img src='https:\/\/media3.giphy.com\/media\/KAq5w47R9rmTuvWOWa\/giphy.gif' width=100 height=100>\n    <font color='sky blue' face='lucida handwriting'size=300>Py<\/font><font color='yellow' face='lucida handwriting' size=300>Tech<\/font><\/b><\/h1>\n   "}}