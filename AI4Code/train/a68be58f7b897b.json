{"cell_type":{"73fb7c31":"code","9902ac92":"code","66524af8":"code","861d53f0":"code","630ee7f6":"code","59a4bca4":"code","bf7ab8e9":"code","c3ddabd5":"code","47d38290":"markdown","6251d671":"markdown"},"source":{"73fb7c31":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os","9902ac92":"train_df = pd.read_parquet(\"..\/input\/ubiquant-parquet\/train_low_mem.parquet\")\ntime_range = int(train_df[\"time_id\"].max())\ntime_range","66524af8":"# Look like there is an upstream screener\/filter to select some investment for this downstream task.\ntrain_df.groupby([\"time_id\"])[\"investment_id\"].count().plot()","861d53f0":"train_df.groupby([\"time_id\"])[\"target\"].mean().plot()","630ee7f6":"# SSE Composite Index\nsse_df = pd.read_csv(\"..\/input\/5yr-sse-composite-index-as-of-20220122\/000001.SS.csv\").tail(time_range)\nprint(sse_df.shape)\nsse_df[\"Adj Close\"].plot()","59a4bca4":"# S&P Composite Index\nsp_df = pd.read_csv(\"..\/input\/sp-500-stocks\/sp500_index.csv\").tail(time_range).reset_index(drop=True)\nsp_df[\"S&P500\"].plot()","bf7ab8e9":"# SSE (More features are related to the SSE vs S&P)\nfor f in [\"target\"] + [f\"f_{i}\" for i in range(0, 300)]:\n    corr = train_df.groupby(\"time_id\")[f].mean().corr(sse_df[\"Adj Close\"])\n    if np.abs(corr) >= .3:\n        print(f, corr)","c3ddabd5":"# S&P (Might be some features come from the US market?)\nfor f in [\"target\"] + [f\"f_{i}\" for i in range(0, 300)]:\n    corr = train_df.groupby(\"time_id\")[f].mean().corr(sp_df[\"S&P500\"])\n    if np.abs(corr) >= .3:\n        print(f, corr)","47d38290":"# Comparing the daily plots ","6251d671":"# P-correlation between the index and all the columns"}}