{"cell_type":{"a9e57b57":"code","5ce245aa":"code","8f4946b8":"code","9b207eb7":"code","3df3d16a":"code","1306a386":"code","a1718db5":"code","04723aee":"code","2e083d28":"code","7a5920b1":"code","4b2fe940":"code","74550104":"code","7d5e05e2":"code","4f21b2a4":"code","a5449844":"code","69f4b0ff":"code","a10c2c96":"code","538704f2":"code","fae131a1":"code","c1f6a2df":"code","194b0908":"code","8f60e14c":"code","18d8f450":"code","6d8818f5":"code","cc7c03e6":"code","bd5410e6":"code","55e0a68e":"markdown","4d6a4ec3":"markdown","f87f6d8a":"markdown","9fe46f4d":"markdown","c322128e":"markdown","f0090c79":"markdown","3add3250":"markdown","3cd06e8e":"markdown","abfad8fd":"markdown","d5ea25de":"markdown","a05e407e":"markdown","08c4c8dd":"markdown","420b4405":"markdown","c28418e6":"markdown","fb1b5b27":"markdown","8116d9ba":"markdown","a1501fce":"markdown","bb9061be":"markdown","76da0b8a":"markdown","0f8cf1e0":"markdown","974d7f19":"markdown","707c78cc":"markdown","c28caa1e":"markdown","3162f148":"markdown","0c5a3958":"markdown","26bd406d":"markdown","b360e76b":"markdown","e75c5961":"markdown","f97aca98":"markdown"},"source":{"a9e57b57":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5ce245aa":"columns = ['age', 'year', 'nodes', 'status']\ndata=pd.read_csv(\"\/kaggle\/input\/habermans-survival-data-set\/haberman.csv\",header=None, names=columns)\ndata.head()\n","8f4946b8":"data.info()","9b207eb7":"data.shape #no of rows and columns ","3df3d16a":"data.describe() #basic statistics","1306a386":"statusdist=data['status'].value_counts(normalize=True)*100\n\nstatusdist # % values of status","a1718db5":"labels=statusdist.keys().map({1:'Survived',2:'Not Survived'}) #Applying a function to label pie chart if 1 means Survived 2 means not survived\n\nplt.pie(x=statusdist,labels=labels,autopct='%1.2f%%')\n\nplt.title(\"Survival rate(%) of Cancer Patients\")","04723aee":"sns.FacetGrid(data,hue='status',height=5).map(sns.distplot, \"year\").add_legend()\nplt.title(\"Distribution of Year\")\nplt.show();\n\n","2e083d28":"Analyze the number of cases across years","7a5920b1":"\n\nNoofcases=data['year'].value_counts()\nld=pd.DataFrame(Noofcases)\nld=ld.reset_index()\n\nld.columns=['Year','NoOfCases']\nld","4b2fe940":"sns.lineplot(data=ld,x='Year',y='NoOfCases')\nplt.xlabel('Year')\nplt.ylabel('No. of cases observed')\nplt.title(\"No. of cases over Years\")\nplt.show()","74550104":"survived=data.loc[data['status']==1];\nnonsurvived=data.loc[data['status']==2]\n\n","7d5e05e2":"data['nodes'].unique()","4f21b2a4":"sns.FacetGrid(data,hue='status',height=5).map(sns.distplot, \"nodes\").add_legend()\nplt.title(\"Survival based on Auxiliary Nodes\")\nplt.show();\n\n","a5449844":"counts, bin_edges = np.histogram(survived['nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\n#plt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf,label='Survived');\n\ncounts, bin_edges = np.histogram(nonsurvived['nodes'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\n#plt.plot(bin_edges[1:],pdf)\nplt.plot(bin_edges[1:],cdf,label='Not Survived');\nplt.legend();\nplt.show();\n\n","69f4b0ff":"for i in range(0,101,10):\n   \n    print(i,\"th percentile for Survived cases\",np.percentile(survived[\"nodes\"],i))\n    print(i,\"th percentile for Non-Survived cases\",np.percentile(nonsurvived[\"nodes\"],i))","a10c2c96":"sns.FacetGrid(data,hue='status',height=5).map(sns.distplot, \"age\").add_legend()\nplt.title(\"Distribution for Age\")\nplt.show();\n\n","538704f2":"counts, bin_edges = np.histogram(survived['age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\n#plt.plot(bin_edges[1:],pdf,label='Survived')\nplt.plot(bin_edges[1:],cdf,label='Survived');\n\ncounts, bin_edges = np.histogram(nonsurvived['age'], bins=10, \n                                 density = True)\npdf = counts\/(sum(counts))\ncdf = np.cumsum(pdf)\n#plt.plot(bin_edges[1:],pdf,label='Not Survived')\nplt.plot(bin_edges[1:],cdf,label='Not Survived');\nplt.legend();\nplt.show();","fae131a1":"data['age'].unique()","c1f6a2df":"\ndata['agegroup'] = pd.cut(data['age'], bins=[29,40,50,60,70,80,90], labels=['30-40','40-50','50-60','60-70','70-80','80-90'])\ndata.head()","194b0908":"data['statusflag']=data['status'].map({1:'Survived',2:'Not Survived'})\ndata.head()","8f60e14c":"sns.set_style(\"whitegrid\");\nsns.pairplot(data, hue=\"status\", height=3);\nplt.show()\n","18d8f450":"corr=data.corr(method='spearman')\ncorr","6d8818f5":"#checking nonsurvived dataframes for various age range\nnonsurvived['agegroups'] = pd.cut(nonsurvived['age'], bins=[29,40,50,60,70,80,90], labels=['30-40','40-50','50-60','60-70','70-80','80-90'])\n\nsns.boxplot(x='agegroups',y='nodes',data=nonsurvived)\nplt.show()","cc7c03e6":"Survivedcases=survived['year'].value_counts()\nlds=pd.DataFrame(Survivedcases)\nlds=lds.reset_index()\n\nlds.columns=['Year','NoOfCases']\nlds['status']='Survived'\n\nNonsurvivedcases=nonsurvived['year'].value_counts()\nldns=pd.DataFrame(Nonsurvivedcases)\nldns=ldns.reset_index()\n\nldns.columns=['Year','NoOfCases']\nldns['status']='NonSurvived'\nfinal=pd.concat([lds,ldns],ignore_index=True)\n#final\nsns.lineplot(x ='Year', y ='NoOfCases', data = final,hue='status')\nplt.title(\"Survived vs Non Survived across years\")\nplt.show()","bd5410e6":"\npt=pd.pivot_table(data,index=[\"year\",'statusflag'],columns=['agegroup'],values=[\"nodes\"],\n               aggfunc='count',fill_value=0,margins=True)\n\npt","55e0a68e":"Observation: Year 65 has highest non survived cases followed by Year 58.","4d6a4ec3":"Observation:Using this pivot table we can get the count of Non Survived cases across each year and different age groups.","f87f6d8a":"Observation: With PDF and CDF of Age, we are not getting enough information.","9fe46f4d":"Load Data:","c322128e":"Observation: Age and Node are having some relation and are important to analyze the survival of patients.","f0090c79":"Conclusions:\n1. Survival rate is more.\n2. No. of Auxiliary nodes is an important factor\n3. Ages between 40-60 have more non survived cases.\n4. PDF-CDF charts are not much helpful.\n5. 90% of survived cases having no. of auxiliary nodes <10.\n6. Year 65 has highest non survived cases.","3add3250":"Positive Auxiliary Nodes","3cd06e8e":"No. of cases observerved are highest in year 58 and 62-64. We need to later compare survived vs non survived cases.","abfad8fd":"### Bivariate Analysis","d5ea25de":"Various Percentile values for Auxiliary Nodes:","a05e407e":"# Univariate Analysis\n","08c4c8dd":"Objective:Analyze the survival of patients after breast cancer surgery","420b4405":"Year of Operation","c28418e6":"Data :\nHaberman's survival dataset contains cases from a study that was conducted between 1958 and 1970 at the University of Chicago's Billings Hospital on the survival of patients who had undergone surgery for breast cancer.\n\nAttribute Information:\nAge of patient at the time of operation (numerical)\n\nPatient's year of operation (year - 1900, numerical)\n\nNumber of positive axillary nodes detected (numerical) Reference:https:\/\/www.medicalnewstoday.com\/articles\/319713#outlook Survival status (class attribute) 1 = the patient survived 5 years or longer 2 = the patient died within 5 years","fb1b5b27":"Observation: If the nodes are less than 5 than chances of survival is more.Women with more than 25 nodes have chances of non-survival is more.","8116d9ba":"Observation: Age Range 40-60 have more non survived cases and more auxiliary nodes","a1501fce":"Observation:Till 90th percentile for survived cases the no of nodes are less than 10 but after that they are increasing.","bb9061be":"Observation: Dataset is imbalanced and status 1 is ~74% which means survival rate is more than the patients who didnt survived.","76da0b8a":"# Multivariate Analysis\n","0f8cf1e0":"Creating Bins of 10 Years ","974d7f19":"Correlation between Numeric Variables","707c78cc":"Observation: There is overlap between the PDFs of  years Survived (1) and Non-Survived(2) cases.","c28caa1e":"Creating 2 categorical variables for Age-Group and Status","3162f148":"Creating dataframes for survived and Non-survived data","0c5a3958":"Pair Plots","26bd406d":"Observation:Status is more related to No of Auxiliary Nodes.","b360e76b":"Age","e75c5961":"Load Liabraries","f97aca98":"Basic Data Analysis"}}