{"cell_type":{"8f261b14":"code","0e0ff26d":"code","ce14c2c6":"code","79d441ca":"code","f9f5e8ee":"code","5bd91139":"code","f704e71f":"code","02ed5ed2":"code","2f349536":"code","12f4d1a4":"code","53e1ee6e":"code","e4e97454":"code","13f7d9bb":"code","ea6dd848":"code","034be0f1":"code","e26b8c97":"code","5b71d19a":"code","7171d288":"code","4e56ad00":"code","9c5a7aba":"code","8f00c71a":"code","0f559966":"code","44d42fa4":"markdown","e48d1291":"markdown","dbd6cfc0":"markdown","1fed9f8d":"markdown"},"source":{"8f261b14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0e0ff26d":"!pip install chart_studio\n!pip install plotly-geo","ce14c2c6":"#Import plotly libraries\nimport chart_studio.plotly as py\nimport plotly.tools as tls\nimport plotly.graph_objs as go\nimport plotly\nimport plotly.figure_factory as ff\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nplotly.offline.init_notebook_mode(connected=True)","79d441ca":"majordir='\/kaggle\/input\/covid19-us-county-trend\/'\ndatadir=majordir+'csse_covid_19_daily_reports\/'\ndate_today=27","f9f5e8ee":"covid_data_world_daily_0322=pd.read_csv(datadir+'03-22-2020.csv')\ncovid_data_world_daily_0322.rename(columns={'Deaths':'Deaths_0322'},inplace=True)\ncovid_data_world_daily_0322.head()\ncovid_data_us_daily_0322=covid_data_world_daily_0322[covid_data_world_daily_0322['Country_Region']=='US'].copy()\ncovid_data_us_daily_0322.shape","5bd91139":"\nfor i in range(23,date_today):\n    dataset=datadir+'03-'+str(i)+'-2020.csv'\n    col='Deaths_03'+str(i)\n    covid_data_world_daily=pd.read_csv(dataset)\n    covid_data_world_daily.rename(columns={'Deaths':col},inplace=True)\n    covid_data_us_daily=covid_data_world_daily[covid_data_world_daily['Country_Region']=='US'].copy()\n\n    if i==23:        \n        covid_data_us_dailytrend=covid_data_us_daily_0322[['FIPS','Deaths_0322']].merge(covid_data_us_daily[['FIPS',col]],on='FIPS').dropna()\n    else:\n        print(i)\n        covid_data_us_dailytrend=covid_data_us_dailytrend.merge(covid_data_us_daily[['FIPS',col]],on='FIPS').dropna()\ncovid_data_us_dailytrend.shape","f704e71f":"covid_data_us_daily_0322.head()","02ed5ed2":"covid_data_us_dailytrend.dropna().shape\ncovid_data_us_dailytrend.head()","2f349536":"census_df_fips = pd.read_excel(majordir+'PopulationEstimates_us_county_level_2018.xlsx',skiprows=1)\ncensus_df_fips.head()","12f4d1a4":"census_df_fips.FIPS=census_df_fips.FIPS.astype(float)","53e1ee6e":"census_df_fips_covid=census_df_fips.merge(covid_data_us_dailytrend,on='FIPS') ","e4e97454":"census_df_fips_covid.head()","13f7d9bb":"for i in range(22,date_today):\n    col='Deaths_03'+str(i)\n    col_10000='Deaths_per10000_03'+str(i)\n    census_df_fips_covid[col_10000]=10000*(census_df_fips_covid[col]\/census_df_fips_covid['POP_ESTIMATE_2018'])","ea6dd848":"census_df_fips_covid.head()","034be0f1":"census_df_fips_covid_50000=census_df_fips_covid[(census_df_fips_covid['POP_ESTIMATE_2018']>50000) & (census_df_fips_covid['Deaths_0324']>5)]\nplt.plot(census_df_fips_covid_50000['POP_ESTIMATE_2018'],census_df_fips_covid_50000[['Deaths_per10000_0322']],'*')\nplt.xscale('log')\nplt.yscale('log')\nplt.xlabel('POP_ESTIMATE_2018')\nplt.ylabel('Deaths_per10000_0322')","e26b8c97":"col='Deaths_per10000_03'+str(date_today-1)\ncol0='Deaths_03'+str(date_today-1)\ncensus_df_fips_covid_50000=census_df_fips_covid[(census_df_fips_covid['POP_ESTIMATE_2018']>50000) & (census_df_fips_covid[col0]>5)]\nplt.plot(census_df_fips_covid_50000['POP_ESTIMATE_2018'],census_df_fips_covid_50000[[col]],'*')\nplt.xscale('log')\nplt.yscale('log')\nplt.xlabel('POP_ESTIMATE_2018')\nplt.ylabel(col)","5b71d19a":"# census_df_fips_covid_100000.sort_values(by='Deaths_per10000_0324',ascending=False).reset_index(drop=True).head(50)","7171d288":"col='Deaths_per10000_03'+str(date_today-1)\ncensus_df_fips_covid_50000.sort_values(by=col,ascending=False).reset_index(drop=True)","4e56ad00":"covid_data_us_dailytrend_nonan=covid_data_us_dailytrend[covid_data_us_dailytrend['FIPS'].notna()].copy()\ncovid_data_us_dailytrend_nonan.FIPS=covid_data_us_dailytrend_nonan.FIPS.astype(str).str.split('.',expand=True)[0]","9c5a7aba":"census_df_fips_covid.head()","8f00c71a":"fips = census_df_fips_covid.FIPS.tolist()\nvalues =census_df_fips_covid.Deaths_per10000_0322.tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","0f559966":"col='Deaths_per10000_03'+str(date_today-1)\nfips = census_df_fips_covid.FIPS.tolist()\nvalues =census_df_fips_covid[col].tolist()\n\nfig = ff.create_choropleth(fips=fips, values=values)\nfig.layout.template = None\nfig.show()","44d42fa4":"##### Lets plot and observe counties that has atleast 50000 population and over 5 Deaths cases.","e48d1291":"### I am guessing the negative trend in general with population indicates more spreading as of now stems from an individual source (who caught virus through travel and might be attending a large gathering like party,funeral,church event in his\/her locality) rather community spread.","dbd6cfc0":"## The below is only basic data analysis. I would request folks to do more analysis and visualization (trends,maps etc) to create meaningful insights as it will be useful in current situation.","1fed9f8d":"## Death relative to the size of the population\n### Death in each county normalized to its population count and presented as per 10000 people unit"}}