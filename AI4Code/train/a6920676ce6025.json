{"cell_type":{"88eb2abc":"code","3014e189":"code","3ad5c990":"code","305faa0e":"code","ac4b084f":"code","652f7e4c":"code","5d436ace":"code","e21618d3":"code","56ff3c04":"code","9b3b4b8b":"code","604eeff8":"code","66e490d2":"code","4ba18dc4":"code","59dcc694":"code","059f85d0":"code","c8c866fb":"code","e559b856":"markdown","8cd201b5":"markdown","b7601ac0":"markdown","e6cc7282":"markdown","0f7fd5cb":"markdown","3a6b7d1e":"markdown","efeef539":"markdown","427b9037":"markdown","61360c6b":"markdown","37eb144a":"markdown","a7fe6f60":"markdown","099f4fdc":"markdown","37d492ff":"markdown"},"source":{"88eb2abc":"import os\nimport glob\nimport math\nfrom PIL import Image\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","3014e189":"!ls ..\/input\/plant-pathology-2021-fgvc8","3ad5c990":"BASE_DIR = \"..\/input\/plant-pathology-2021-fgvc8\"","305faa0e":"# Training data image path and label\ntrain_image_path = glob.glob(os.path.join(BASE_DIR, \"train_images\/*.jpg\"))\nlabel_df = pd.read_csv(os.path.join(BASE_DIR, \"train.csv\"))\n# Number od trainin images\nprint(\"Number of training images: {}\".format(len(train_image_path)))","ac4b084f":"# Show first 10 rows\nprint(train_image_path[:10])\ndisplay(label_df.head(10))","652f7e4c":"labels = label_df.labels.unique()\nprint(labels)\nprint(len(labels))","5d436ace":"# Count number of data for each labels\nlabel_count = label_df.labels.value_counts()\nlabel_ratio = label_df.labels.value_counts(normalize=True, sort=True)\nprint(label_count)","e21618d3":"# Show distribution for label by bar graph and pie chart \nfig, ax = plt.subplots(nrows=1, ncols=2, figsize=(20, 8))\nlabel_count.plot.bar(ax=ax[0], title=\"Number of data per label\", rot=90, fontsize=15)\nlabel_ratio.plot.pie(ax=ax[1], title=\"Ratio of label\", autopct='%1.1f%%', fontsize=15)\nplt.show()","56ff3c04":"# Get set of labels and image path\nlabels = set(label_df[\"image\"].to_list())\nimages = set(os.path.basename(full_path) for full_path in train_image_path)\n\nprint(labels ^ images)","9b3b4b8b":"# Get image size\nimage_property = {\"image\": [], \"width\": [], \"height\": []}\nfor image_path in train_image_path:\n    im = Image.open(image_path)\n    width, height = im.size\n    file_name = os.path.basename(image_path)\n    image_property[\"image\"].append(file_name)\n    image_property[\"width\"].append(width)\n    image_property[\"height\"].append(height)","604eeff8":"# Merge width, height info with label data\nimage_size = pd.DataFrame(image_property)\nimage_size = pd.merge(image_size, label_df, on=\"image\", how=\"outer\")\nimage_size","66e490d2":"# Describe image property\nimage_size.info()","4ba18dc4":"# Plot (width, height) pair\nimage_size.plot(x=\"width\", y=\"height\", linestyle=\"none\", marker = \"x\")","59dcc694":"# Count value pair for (width, height)\nimage_size.groupby([\"width\", \"height\"]).count()","059f85d0":"labels = label_df.labels.value_counts()\ndisplay(labels)","c8c866fb":"display_num = 9\nfor label in labels.index:\n    df_tmp = label_df[label_df.labels == label]\n    images = df_tmp.sample(display_num).image.values\n    images = [os.path.join(BASE_DIR, \"train_images\/\", file_name) for file_name in images]\n    \n    plt.figure(figsize=(20, 20))\n    for idx, image in enumerate(images):\n        plt.subplot(math.ceil(display_num \/ 3), 3, idx+1)\n        im = plt.imread(image)\n        plt.imshow(im)\n    print()\n    print(\"==================== Label:{} ===================\".format(label))\n    plt.tight_layout()\n    plt.show()","e559b856":"## Number of length of label.csv and images","8cd201b5":"# Label distribution","b7601ac0":"# Image properties","e6cc7282":"# Read data","0f7fd5cb":"- All the image do not have the same size","3a6b7d1e":"## Show images","efeef539":"# Summary of notebook","427b9037":"## Image size","61360c6b":"- Number of images in \"train.csv\" and image files are the same","37eb144a":"**Observation from image**\n- Main categories are bellow\n    1. Healthy\n    2. Scab\n    3. Frog_eye_leaf_spot\n    4. Rust\n    5. Powdery_mildew\n    6. *Mixed* (label \"complex\" or ones with multiple label)\n- *Mixed* labels consists of 20% of total\n- \u201ccomplex\u201d is leaves with too many diseases to classify (Mentioned in official discription)\n- Labels \"frog_eye_leaf_spot\", \"rust\", \"powdery_mildew\" seems easy to identify\n- \u201cscab\u201d seems difficult to identify spots<br>\n   -> Consider applying filter to emphasize scab  ","a7fe6f60":"**Note from label distribution**\n1. Both healthy and scrab images consists of 25% of total data\n2. There are label with mix disease. (e.g. scab frog_eye_leaf_spot complex)","099f4fdc":"**Purpose of EDA**<br>\n1. Explore label distribution<br>\n2. Show images for each label<br>\n3. Summarize what I understood<br>\n\n**Summary of EDA**\n1. Number of training images are 18632 and image size are not uniformed\n2. Main categories are bellow\n    1. Healthy\n    2. Scab\n    3. Frog_eye_leaf_spot\n    4. Rust\n    5. Powdery_mildew\n    6. *Mixed* (label \"complex\" or ones with multiple label)\n3. *Mixed* labels consists of 20% of total\n4. \u201ccomplex\u201d is leaves with too many diseases to classify (Mentioned in official discription)\n5. Labels \"frog_eye_leaf_spot\", \"rust\", \"powdery_mildew\" seems easy to identify\n6. \u201cscab\u201d seems difficult to identify spots<br>\n   -> Consider applying filter to emphasize scab  ","37d492ff":"# Imports"}}