{"cell_type":{"b8d3fcb7":"code","5a22e538":"code","167adc8a":"code","adf1ecc5":"code","b192fac7":"code","a8fe5c80":"code","b4fe4693":"code","748941fb":"code","807081ad":"code","5b28f21c":"code","b84cefbd":"code","da84d5fb":"code","10a78bf1":"code","a49c3550":"code","91fa62e5":"code","b3611a7c":"code","2d0b66da":"code","7ab580ae":"code","ccfa28a2":"code","ec549deb":"code","822b0f24":"code","ad908c6b":"code","15e5c171":"code","bce54edf":"markdown","d615b035":"markdown","fc64984c":"markdown","2e2cd471":"markdown","606380c5":"markdown","b6d4fe61":"markdown","38b6f67c":"markdown","fcfe9b65":"markdown"},"source":{"b8d3fcb7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5a22e538":"df=pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')","167adc8a":"df.head()","adf1ecc5":"X=df.iloc[:,2:-1]\ny=df['diagnosis']","b192fac7":"from sklearn.model_selection import train_test_split,GridSearchCV\nfrom sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score","a8fe5c80":"X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)","b4fe4693":"X_train.shape","748941fb":"y_train.shape","807081ad":"svm=SVC()","5b28f21c":"svm.fit(X_train,y_train)","b84cefbd":"y_pred_train=svm.predict(X_train)\ny_pred_test=svm.predict(X_test)","da84d5fb":"print(\"Training Accuracy: \",accuracy_score(y_train,y_pred_train))\nprint(\"Testing Accuracy: \",accuracy_score(y_test,y_pred_test))\n","10a78bf1":"svm=SVC()","a49c3550":"param_grid=[]","91fa62e5":"param_grid.append({'kernel': ['linear'], 'C': [0.01,0.1,1,10,100,200,500,1000]})\nparam_grid.append({'kernel': ['poly'], 'C': [0.01,0.1,1,10,100,200,500,1000], 'degree': range(2,11)})\nparam_grid.append({'kernel': ['rbf'], 'C': [0.01,0.1,1,10,100,200,500,1000]})\nparam_grid","b3611a7c":"gd=GridSearchCV(svm,param_grid,cv=10,n_jobs=-1,scoring='accuracy')","2d0b66da":"gd.fit(X_train,y_train)","7ab580ae":"gd.best_params_","ccfa28a2":"gd.best_estimator_","ec549deb":"gd.best_score_","822b0f24":"svm=gd.best_estimator_","ad908c6b":"y_pred_train=svm.predict(X_train)\ny_pred_test=svm.predict(X_test)","15e5c171":"print(\"Training Accuracy: \",accuracy_score(y_train,y_pred_train))\nprint(\"Testing Accuracy: \",accuracy_score(y_test,y_pred_test))","bce54edf":"### Best Score","d615b035":"## Final Training and Testing Accuracies ","fc64984c":"## Applying GridSearchCV","2e2cd471":"## Taking the best estimator to predict values","606380c5":"## Applying Plain SVM","b6d4fe61":"### Accuracy Scores \n","38b6f67c":"### Best Estimator","fcfe9b65":"### Best Params"}}