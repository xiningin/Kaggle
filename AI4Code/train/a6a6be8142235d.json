{"cell_type":{"77546b7a":"code","45d590d7":"code","f34e68d8":"code","ca240e94":"code","b159d720":"code","de4d94c9":"code","c90d985f":"code","f21d73af":"markdown","42c9f333":"markdown","8e623e84":"markdown","4b134e23":"markdown","74716f90":"markdown","6f940673":"markdown","7071806e":"markdown","40fdcaa7":"markdown"},"source":{"77546b7a":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import roc_auc_score","45d590d7":"X_test = pd.read_csv('\/kaggle\/input\/hr-data-predict-change-jobscompetition-form\/X_test.csv')\ny_train = pd.read_csv('\/kaggle\/input\/hr-data-predict-change-jobscompetition-form\/y_train.csv')\nX_train = pd.read_csv('\/kaggle\/input\/hr-data-predict-change-jobscompetition-form\/X_train.csv')\ny_test = pd.read_csv('\/kaggle\/input\/hr-data-predict-change-jobscompetition-form\/test_label\/y_test.csv')\n\nprint(X_train.head(5))\nprint(y_train.head(5))","f34e68d8":"X_train.info()\nprint('-----------------------------------------------')\nprint(X_train.describe())\n\nprint('-----------------------------------------------')\nprint('X_train \uacb0\uce21\uce58: ', X_train.isnull().sum())\nprint('X_test \uacb0\uce21\uce58: ', X_test.isnull().sum())","ca240e94":"print('city:', X_train.city.unique())\nprint('gender:', X_train.gender.unique())\nprint('relevent_experience:', X_train.relevent_experience.unique())\nprint('enrolled_university:', X_train.enrolled_university.unique())\nprint('education_level:', X_train.education_level.unique())\nprint('major_discipline:', X_train.major_discipline.unique())\nprint('experience:', X_train.experience.unique())\nprint('company_size:', X_train.company_size.unique())\nprint('company_type:', X_train.company_type.unique())\nprint('last_new_job:', X_train.last_new_job.unique())\n","b159d720":"# test data \uc804\ucc98\ub9ac\uc5d0\uc11c training data \uc815\ubcf4\ub97c \ubc18\uc601\ud558\uae30 \uc704\ud574 \ubbf8\ub9ac \uc800\uc7a5\nX_train_city_mode = X_train['city'].mode()[0]\nX_train_gen_mode = X_train['gender'].mode()[0]\nX_train_relex_mode = X_train['relevent_experience'].mode()[0]\nX_train_univ_mode = X_train['enrolled_university'].mode()[0]\nX_train_edu_mode = X_train['education_level'].mode()[0]\nX_train_major_mode = X_train['major_discipline'].mode()[0]\nX_train_ex_mode = X_train['experience'].mode()[0]\nX_train_csize_mode = X_train['company_size'].mode()[0]\nX_train_ctype_mode = X_train['company_type'].mode()[0]\nX_train_lastjob_mode = X_train['last_new_job'].mode()[0]\n\n# Training data \uc804\ucc98\ub9ac\n\nX_train['gender'] = X_train['gender'].fillna(X_train['gender'].mode()[0])\nX_train['relevent_experience'] = X_train['relevent_experience'].fillna(X_train['relevent_experience'].mode()[0])\nX_train['enrolled_university'] = X_train['enrolled_university'].fillna(X_train['enrolled_university'].mode()[0])\nX_train['education_level'] = X_train['education_level'].fillna(X_train['education_level'].mode()[0])\nX_train['major_discipline'] = X_train['major_discipline'].fillna(X_train['major_discipline'].mode()[0])\nX_train['experience'] = X_train['experience'].fillna(X_train['experience'].mode()[0])\nX_train['company_size'] = X_train['company_size'].fillna(X_train['company_size'].mode()[0])\nX_train['company_type'] = X_train['company_type'].fillna(X_train['company_type'].mode()[0])\nX_train['last_new_job'] = X_train['last_new_job'].fillna(X_train['last_new_job'].mode()[0])\n\nX_train['education_level'] = X_train['education_level'].replace('Primary School', \n                                                                0).replace('High School', \n                                                                           1).replace('Graduate',\n                                                                                      2).replace('Masters', \n                                                                                                3).replace('Phd', \n                                                                                                           4).astype(int)\nX_train['experience'] = X_train['experience'].replace('<1', 0).replace('>20', 21).astype(int)\nX_train['company_size'] = X_train['company_size'].replace('<10', \n                                                                0).replace('10\/49', \n                                                                           1).replace('50-99',\n                                                                                      2).replace('100-500', \n                                                                                                3).replace('500-999', \n                                                                                                           4).replace('1000-4999', \n                                                                                                               5).replace('5000-9999', \n                                                                                                               6).replace('10000+', \n                                                                                                               7).astype(int)\n\nX_train['last_new_job'] = X_train['last_new_job'].replace('never', 0).replace('>4', 5).astype(int)\n\n\nle_city = LabelEncoder()\nle_gen = LabelEncoder()\nle_relex = LabelEncoder()\nle_univ = LabelEncoder()\nle_major = LabelEncoder()\nle_ctype = LabelEncoder()\n\n\n\nX_train['city'] = le_city.fit_transform(X_train['city'])\nX_train['gender'] = le_gen.fit_transform(X_train['gender'])\nX_train['relevent_experience'] = le_relex.fit_transform(X_train['relevent_experience'])\nX_train['enrolled_university'] = le_univ.fit_transform(X_train['enrolled_university'])\nX_train['major_discipline'] = le_major.fit_transform(X_train['major_discipline'])\nX_train['company_type'] = le_ctype.fit_transform(X_train['company_type'])\n\n\n# Test data \uc804\ucc98\ub9ac\n\nX_test['gender'] = X_test['gender'].fillna(X_train_gen_mode)\nX_test['relevent_experience'] = X_test['relevent_experience'].fillna(X_train_relex_mode)\nX_test['enrolled_university'] = X_test['enrolled_university'].fillna(X_train_univ_mode)\nX_test['education_level'] = X_test['education_level'].fillna(X_train_edu_mode)\nX_test['major_discipline'] = X_test['major_discipline'].fillna(X_train_major_mode)\nX_test['experience'] = X_test['experience'].fillna(X_train_ex_mode)\nX_test['company_size'] = X_test['company_size'].fillna(X_train_csize_mode)\nX_test['company_type'] = X_test['company_type'].fillna(X_train_ctype_mode)\nX_test['last_new_job'] = X_test['last_new_job'].fillna(X_train_lastjob_mode)\n\nX_test['education_level'] = X_test['education_level'].replace('Primary School', \n                                                                0).replace('High School', \n                                                                           1).replace('Graduate',\n                                                                                      2).replace('Masters', \n                                                                                                3).replace('Phd', \n                                                                                                           4).astype(int)\nX_test['experience'] = X_test['experience'].replace('<1', 0).replace('>20', 21).astype(int)\nX_test['company_size'] = X_test['company_size'].replace('<10', \n                                                                0).replace('10\/49', \n                                                                           1).replace('50-99',\n                                                                                      2).replace('100-500', \n                                                                                                3).replace('500-999', \n                                                                                                           4).replace('1000-4999', \n                                                                                                               5).replace('5000-9999', \n                                                                                                               6).replace('10000+', \n                                                                                                               7).astype(int)\n\nX_test['last_new_job'] = X_test['last_new_job'].replace('never', 0).replace('>4', 5).astype(int)\n\n# ValueError: y contains previously unseen labels: 'city_171' \ub85c \uc778\ud574 \ucd5c\ube48\uac12\uc73c\ub85c \ub300\uccb4\nX_test['city'] = X_test['city'].replace('city_171', X_train_city_mode)\nX_test['city'] = le_city.transform(X_test['city'])\n\nX_test['gender'] = le_gen.transform(X_test['gender'])\nX_test['relevent_experience'] = le_relex.transform(X_test['relevent_experience'])\nX_test['enrolled_university'] = le_univ.transform(X_test['enrolled_university'])\nX_test['major_discipline'] = le_major.transform(X_test['major_discipline'])\nX_test['company_type'] = le_ctype.transform(X_test['company_type'])\n\nprint(X_train.info())\nprint(X_test.info())","de4d94c9":"rf_clf = RandomForestClassifier(random_state=1)\nrf_clf.fit(X_train.drop(['enrollee_id'], axis=1), y_train['target'])\n                                \npred = rf_clf.predict(X_test.drop(['enrollee_id'], axis=1))\npred_prob = rf_clf.predict_proba(X_test.drop(['enrollee_id'], axis=1))\n\nprint('AUROC: ', round(roc_auc_score(y_test['target'], pred_prob[0:,1]),4))","c90d985f":"pd.DataFrame({'enrollee_id': y_test['enrollee_id'], 'pred': pred_prob[0:,1]}).to_csv('submission.csv', index=False)\ndf = pd.read_csv('submission.csv')\ndf.head(5)","f21d73af":"## \ub370\uc774\ud130 \ubd88\ub7ec\uc624\uae30","42c9f333":"## \ub370\uc774\ud130 \uad6c\uc131 \ud655\uc778","8e623e84":"## \uc81c\ucd9c","4b134e23":"\ubcc0\uc218\ubcc4 \uc804\ucc98\ub9ac \ud310\ub2e8(\uac04\ub7b5\ud654)\n- city: LabelEncoding\n- gender: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 LabelEncoding\n- relevent_experience: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 LabelEncoding\n- enrolled_university: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 LabelEncoding\n- education_level: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 level \ubcc4 \uc22b\uc790 \ubd80\uc5ec(\uc11c\uc5f4\uce21\ub3c4)\n- major_discipline: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 LabelEncoding\n- experience: <1, >20\uc744 \uac01\uac01 0, 21\ub85c \ub300\uce58 \ud6c4 integer\ub85c \uc218\uc815 & \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58(\uc11c\uc5f4\uce21\ub3c4)\n- company_size: <10 \ubd80\ud130 10000+\uae4c\uc9c0 \uc815\uc218 0 ~ \ubd80\uc5ec \ubc0f \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58(\uc11c\uc5f4\uce21\ub3c4)\n- company_type: \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 \ud6c4 LabelEncoding\n- last_new_job: never\uc744 0\uc73c\ub85c, >4\ub97c 5\ub85c \uc218\uc815 \ud6c4, integer\ub85c \uc218\uc815 & \uacb0\uce21\uce58 \ucd5c\ube48\uac12 \ub300\uce58 ","74716f90":"## \uc804\ucc98\ub9ac(\uacb0\uce21\uce58 \ucc98\ub9ac, \uc778\ucf54\ub529)","6f940673":"## \ubaa8\ub378\ub9c1(Random Forest)","7071806e":"## \ub77c\uc774\ube0c\ub7ec\ub9ac \ubd88\ub7ec\uc624\uae30","40fdcaa7":"# (+\ucca8\uc5b8)\n\uc800\ucc98\ub7fc \uacb0\uce21\uce58\ub97c \ucd5c\ube48\uac12\uc73c\ub85c \ub300\uce58\ud558\ub294 \uac83\ubcf4\ub2e4, \ub2e4\ub978 \ubd84\ub4e4 \ucf54\ub4dc\ucc98\ub7fc \uc784\uc758\uac12\uc744 \uc9c0\uc815\ud558\uc5ec \ub123\ub294\uac8c \uc131\ub2a5\uc774 \ub354 \uc88b\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4.\n\uc774 \ucf54\ub4dc\ub294 \ucc38\uace0\ub85c\ub9cc \ubcf4\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4."}}