{"cell_type":{"09933db5":"code","a4014f8e":"code","01c558b7":"code","ccab5059":"code","919c0da2":"code","b4c2c689":"code","85d68007":"code","fd9c681f":"code","64c21c8a":"code","805946cc":"code","0b416d11":"code","2ca23040":"code","fac93cec":"code","53a74526":"code","f8f955c3":"code","51f9a38d":"code","7f1b34c8":"code","b3378af6":"code","1441bb6a":"code","3fadc9f1":"code","9aa29811":"code","f7d14ddb":"code","1732ab1a":"markdown","c4838534":"markdown","d61834e0":"markdown","b7674647":"markdown","96ee7f02":"markdown","59d41fde":"markdown","4e66ea73":"markdown","016eb4f7":"markdown","a2eedc31":"markdown"},"source":{"09933db5":"import numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import confusion_matrix, accuracy_score","a4014f8e":"df = pd.read_csv('..\/input\/churn-modelling\/Churn_Modelling.csv')\ndf.head()","01c558b7":"df.describe()","ccab5059":"df.isna().sum()","919c0da2":"df.dtypes","b4c2c689":"X = df.iloc[:, 3:-1].values\ny = df.iloc[:, -1].values","85d68007":"print(X)","fd9c681f":"print(y)","64c21c8a":"le = LabelEncoder()\nX[:, 2] = le.fit_transform(X[:, 2])","805946cc":"X","0b416d11":"ohe = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')\nX = np.array(ohe.fit_transform(X))","2ca23040":"X","fac93cec":"print(X.shape)\nprint(y.shape)","53a74526":"X_train = X[:750,:]\nX_test = X[750:,:]","f8f955c3":"y_train = y[:750]\ny_test = y[750:]","51f9a38d":"scaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)","7f1b34c8":"nn = tf.keras.models.Sequential()","b3378af6":"nn.add(tf.keras.layers.Dense(units=7, activation='relu'))\nnn.add(tf.keras.layers.Dense(units=7, activation='relu'))\nnn.add(tf.keras.layers.Dense(units=1, activation='tanh')) #Output Layer","1441bb6a":"nn.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])","3fadc9f1":"nn.fit(X_train, y_train, batch_size = 64, epochs = 200)","9aa29811":"y_pred = nn.predict(X_test)\ny_pred = (y_pred > 0.5)\nprint(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))","f7d14ddb":"cmatrix = confusion_matrix(y_test, y_pred)\nprint(cmatrix)\naccuracy_score(y_test, y_pred)","1732ab1a":"Created by Berkay Alan\n\nNeural Networks - Churn Modelling\n\n17 of January, 2021\n\nFor more Tutorial: https:\/\/github.com\/berkayalan","c4838534":"## Confusion Matrix","d61834e0":"## Splitting Training and Test Set","b7674647":"## Data Prepration","96ee7f02":"## Creating a Neural Network with Keras","59d41fde":"## Estimating Test Results","4e66ea73":"We will do one hat encoding for Geography column.","016eb4f7":"Label encoding for Gender","a2eedc31":"We scale our data."}}