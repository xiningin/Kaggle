{"cell_type":{"1a91b35b":"code","a89e9db2":"code","f3f8e443":"code","fc0b28fa":"code","7fcf576c":"code","e33f9c24":"code","24416ac3":"code","75edefaa":"code","f6dc9ee3":"code","99c7a528":"code","39b05433":"code","acb60d21":"code","2efe5dfb":"code","39f71d9f":"code","ec0e7fd3":"markdown","5adbfdfd":"markdown","305dda45":"markdown","42fb68ec":"markdown","8cd6bb11":"markdown","2c6117bf":"markdown"},"source":{"1a91b35b":"import numpy as np \nimport pandas as pd ","a89e9db2":"SLA = pd.read_excel('..\/input\/shopee-code-league-20\/_DA_Logistics\/SLA_matrix.xlsx')\norders = pd.read_csv('..\/input\/shopee-code-league-20\/_DA_Logistics\/delivery_orders_march.csv')","f3f8e443":"SLA","fc0b28fa":"orders.head()","7fcf576c":"orders.info()","e33f9c24":"orders.buyeraddress = orders.buyeraddress.apply(lambda x: x.split()[-1]).str.title()\norders.selleraddress = orders.selleraddress.apply(lambda x: x.split()[-1]).str.title()\n\norders.head()","24416ac3":"print(orders.buyeraddress.unique())\nprint(orders.selleraddress.unique())","75edefaa":"days = []\nfor i, j in orders[['selleraddress','buyeraddress']].itertuples(index=False):\n        if i == 'Manila'and j == 'Manila':\n            days.append(3)\n        elif (i == 'Manila' and j == 'Luzon') or (i == 'Luzon' and (j == 'Manila' or j == 'Luzon')):\n            days.append(5)\n        else:\n            days.append(7)\n\norders['days_limit'] = days\norders.head()","f6dc9ee3":"time_features = ['pick', '1st_deliver_attempt', '2nd_deliver_attempt']\n\norders[time_features] += 8 * 60 * 60\norders['2nd_deliver_attempt'] = orders['2nd_deliver_attempt'].replace(np.nan, 0)\nfor f in time_features:\n    orders[f] = pd.to_datetime(orders[f], unit = 's').dt.date\n    \norders.head()","99c7a528":"holidays = ['2020-03-25','2020-03-30','2020-03-31']\n\norders['1st_attempt_days'] = np.busday_count(orders['pick'], orders['1st_deliver_attempt'], weekmask = '1111110', holidays = holidays)\norders['2nd_attempt_days'] = np.busday_count(orders['1st_deliver_attempt'], orders['2nd_deliver_attempt'], weekmask = '1111110', holidays = holidays)\n\norders.head()","39b05433":"orders['is_late'] = (orders['1st_attempt_days'] > orders['days_limit']) | (orders['2nd_attempt_days'] > 3)\n\norders.head()","acb60d21":"orders.is_late.value_counts()","2efe5dfb":"import matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize = (8, 8))\n\nax = plt.pie(x = orders.is_late.value_counts(), labels = ['False', 'True'], explode = (0, 0.1), shadow = True, autopct = '%1.1f%%', startangle = 90)\nplt.title('Percent of orders with late deliveries')\nplt.show()","39f71d9f":"submission = pd.DataFrame({'orderid':orders['orderid'], 'is_late':orders['is_late'].apply(int)})\n\nsubmission","ec0e7fd3":"# Data Exploration","5adbfdfd":"**Extraction of Address**","305dda45":"# Feature Engineering","42fb68ec":"# Importing dataset","8cd6bb11":"**Transformation of Dates**","2c6117bf":"# Analysis of Logistics Performance"}}