{"cell_type":{"ae008cdf":"code","6b0ad453":"code","86905c60":"code","17877947":"code","03b48fa5":"code","98da68fe":"code","ca899f5c":"code","b1d17d59":"code","589ae215":"code","1c2120b9":"code","26090fb8":"code","6d9365ba":"code","6a8020d5":"code","291115d6":"code","60f5a836":"code","cb58f743":"code","2753e924":"code","e5ab177b":"code","c04548fc":"code","2fb20cce":"code","d5df895d":"markdown"},"source":{"ae008cdf":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6b0ad453":"import warnings\nwarnings.filterwarnings(\"ignore\")","86905c60":"df=pd.read_csv(\"..\/input\/melbourne-housing-market\/Melbourne_housing_FULL.csv\")","17877947":"df","03b48fa5":"df.shape","98da68fe":"df.isna().sum()","ca899f5c":"cols=[\"Suburb\",\"Rooms\",\"Type\",\"Method\",\"SellerG\",\"Regionname\",\"Propertycount\",\"Distance\",\"CouncilArea\",\n      \"Bedroom2\",\"Bathroom\",\"Car\",\"Landsize\",\"BuildingArea\",\"Price\"]\ndf=df[cols]\n","b1d17d59":"df","589ae215":"cols_zero=[\"Propertycount\",\"Distance\",\"Bedroom2\",\"Bathroom\",\"Car\"]\ndf[cols_zero]=df[cols_zero].fillna(0)\n\ndf[\"Landsize\"]=df[\"Landsize\"].fillna(df.Landsize.mean())\ndf[\"BuildingArea\"]=df[\"BuildingArea\"].fillna(df.BuildingArea.mean())","1c2120b9":"df.dropna(inplace=True)","26090fb8":"df=pd.get_dummies(df,drop_first=True)\ndf","6d9365ba":"X = df.drop('Price', axis=1)\ny = df['Price']","6a8020d5":"from sklearn.model_selection import train_test_split\ntrain_X,test_X,train_y,test_y=train_test_split(X,y,test_size=0.3,random_state=2)","291115d6":"from sklearn.linear_model import LinearRegression\nreg=LinearRegression().fit(train_X,train_y)","60f5a836":"reg.score(test_X,test_y)","cb58f743":"reg.score(train_X,train_y)","2753e924":"from sklearn import linear_model\nlasso_reg=linear_model.Lasso(alpha=50,max_iter=100,tol=0.1)\nlasso_reg.fit(train_X,train_y)","e5ab177b":"lasso_reg.score(test_X,test_y)","c04548fc":"from sklearn.linear_model import Ridge\nridge_reg=Ridge(alpha=50,max_iter=100,tol=0.1)\nridge_reg.fit(train_X,train_y)","2fb20cce":"ridge_reg.score(test_X,test_y)","d5df895d":"A\u015fa\u011f\u0131daki sat\u0131r dataseti tan\u0131mlar"}}