{"cell_type":{"948861aa":"code","72d64120":"code","096061d0":"code","4aabd3d1":"code","28ee5cdd":"code","7fc8399c":"code","f124c91f":"code","e2a07836":"code","0ab2b9ee":"code","c64ff4c2":"code","3a3ad380":"code","65a9830f":"code","48f68510":"code","1323f630":"code","7b2e0664":"code","deefbbd3":"code","f796afa1":"code","66613769":"code","4f8e9d3f":"code","92953eff":"code","a2037e6d":"code","263771b2":"code","093cd706":"code","00af0223":"code","9d70a0ff":"code","543ea98e":"code","b9460f33":"code","8aba0bcb":"code","f0e0fc73":"code","7e2f7d0b":"code","75279201":"code","33ac832c":"code","9debd010":"markdown","b2ee40ea":"markdown","ec674994":"markdown","427cfc70":"markdown","d135c276":"markdown","785a47e2":"markdown","f835cd45":"markdown","10cf91a3":"markdown"},"source":{"948861aa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","72d64120":"import pandas as pd\nimport numpy as  np\nimport plotly.express as ex\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.model_selection import GridSearchCV, train_test_split\nfrom sklearn.metrics import accuracy_score,classification_report\nfrom warnings import filterwarnings\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfilterwarnings('ignore')","096061d0":"df = pd.read_csv('\/kaggle\/input\/credit-card-customers\/BankChurners.csv').drop(['Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1','CLIENTNUM','Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2'],axis=1)\nprint('shape: {} '.format(df.shape))\ndf.head()","4aabd3d1":"df.info()","28ee5cdd":"df.isna().sum().sum()","7fc8399c":"df.Attrition_Flag.unique() # dependend value count","f124c91f":"df.select_dtypes(['object']).nunique()","e2a07836":"# categoric features\ncat = df.select_dtypes(['object'])\ncat_columns = cat.columns\ncat_columns","0ab2b9ee":"# numeric features\nnumeric_values = df.select_dtypes(['int','float'])","c64ff4c2":"print(cat.shape)\nprint(cat.info())\ncat.head()","3a3ad380":"cat.nunique()","65a9830f":"print(numeric_values.shape)\nprint(numeric_values.info())\nnumeric_values.head()","48f68510":"sns.countplot(df.Attrition_Flag)","1323f630":"cstage = numeric_values.groupby(['Customer_Age']).aggregate('mean') # group the age ","7b2e0664":"cstage.head()","deefbbd3":"fig = make_subplots(\n    rows=5, cols=1,\n    subplot_titles=(\"Relationship between Age and Credit Card limit\", \"Relationship between Age and Dependent Count\", \"Relationship between Age and Avg_Open_To_Buy\", \n                    \"Relationship between Age and Total_Revolving_Bal\",\"Relationship between Age and Contacts_Count_12_mon\"\n                    ))\n\nfig.add_trace(go.Scatter(x=cstage.index, y=cstage.Credit_Limit,mode='lines+markers' ),\n              row=1, col=1)\n\nfig.add_trace(go.Bar(x=cstage.index, y=cstage.Dependent_count),\n              row=2, col=1)\n\nfig.add_trace(go.Scatter(x=cstage.index, y = cstage.Avg_Open_To_Buy,marker={'color': 'blue'},mode = 'lines+markers'),\n              row=3, col=1)\n\nfig.add_trace(go.Bar(x=cstage.index, y=cstage.Total_Revolving_Bal, marker  = {'color':'gray'} ),\n              row=4,col=1)\nfig.add_trace(go.Scatter(x = cstage.index ,y = cstage.Contacts_Count_12_mon, marker = {'color':'magenta'},mode = 'lines+markers'),\n             row=5,col=1)\n\nfig.update_layout(height=1200, width=900,\n                  title_text=\"Relationship between Age and other features\")\n\nfig.show()","f796afa1":"cat.head()","66613769":"cat.Attrition_Flag.unique()","4f8e9d3f":"gender = df.groupby(['Gender']).aggregate('mean')# group the gender","92953eff":"gender","a2037e6d":"fig = ex.pie(df, values='Credit_Limit', names='Gender', title='Relationship between Gender and Credit Limit ')\nfig.show()","263771b2":"fig = ex.pie(df, values='Credit_Limit', names='Education_Level', title='Relationship between Education Level and Credit Limit ')\nfig.show()","093cd706":"fig = ex.histogram(y=df.Credit_Limit, x=df.Marital_Status,title = \"Relationship between Marital Status and Credit Card Limid \" ) \nfig.show()","00af0223":"le = LabelEncoder()","9d70a0ff":"for i in cat.columns:\n    cat[i] = le.fit_transform(cat[[i]])\ncat","543ea98e":"df_reduced = pd.concat([numeric_values,cat],axis=1)","b9460f33":"df_reduced.head()","8aba0bcb":"x = df_reduced.drop(['Attrition_Flag'],axis=1)\ny = df_reduced[[\"Attrition_Flag\"]]","f0e0fc73":"x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25,random_state = 14,shuffle = True)","7e2f7d0b":"grd = GradientBoostingClassifier(n_estimators = 999).fit(x_train,y_train)","75279201":"def metrics(y_true,y_pred):\n    print(classification_report(y_true,y_pred))\n    print(\"Accuracy: {}\".format(accuracy_score(y_true,y_pred)))","33ac832c":"prediction = grd.predict(x_test)\nmetrics(y_test,prediction)","9debd010":"# data visulation ","b2ee40ea":"# train-test split ","ec674994":"# Preprocessing ","427cfc70":"# data exam","d135c276":"# Setup","785a47e2":"# getting data","f835cd45":"# Model","10cf91a3":"# import libraries"}}