{"cell_type":{"8e0da182":"code","490fbb5c":"code","ee59f4e0":"code","7633c714":"code","0f3f1fb9":"code","1393cdc5":"code","175d295b":"code","73fdd37a":"code","33e90e21":"code","e59235a5":"code","3674d879":"code","14427857":"code","d33c5062":"code","0f5e4a7d":"code","88c589ba":"code","27e702aa":"code","46a0fe2f":"code","f45d62cf":"code","48c3806a":"code","6ad4658a":"code","8593f0b2":"code","17beb1fa":"code","5982fc2f":"code","49c83e1a":"code","da498413":"code","b0e3cc1d":"code","be485883":"code","6ea2e228":"code","7b161693":"code","d8f6c438":"code","c8147194":"code","563506ed":"code","f90cf8ce":"code","37b97b9a":"code","893e9c7d":"code","e0ee910e":"code","faa3f0cf":"code","85220680":"code","9c7cbb71":"code","7784f7a6":"code","e94652d7":"code","acd90bd1":"code","fbef5de7":"code","af083eea":"code","8a879e9a":"code","f03daf5b":"code","887b3da8":"code","c1e76cb4":"code","57bce968":"code","6ceba632":"code","ad1226fd":"code","2c992a6d":"code","e28e02ee":"code","bcf43ba8":"code","c11cf38f":"code","cfe8357e":"code","04af8139":"code","53c5e4b2":"code","db613305":"code","384768c8":"code","22030247":"code","07748025":"code","2dcbb54c":"code","0efb2cc7":"code","39fb0e28":"code","5e79d4da":"code","f50c7494":"code","34599833":"code","56e24eb1":"code","67a76683":"code","fa86fcc7":"code","1e5d80c3":"code","0c1952f2":"markdown","dcd9edb7":"markdown","3a2b31a7":"markdown","9de9f736":"markdown","0be57f17":"markdown","00c1d8fa":"markdown","4e38d97b":"markdown","d97fb9e4":"markdown","d550ea12":"markdown","1f79d6ee":"markdown","f2c58c55":"markdown","66d3daf8":"markdown","eab4571a":"markdown","19d42160":"markdown","b07c3a04":"markdown"},"source":{"8e0da182":"# Wine Quality model prediction \n## (Kaggle project)","490fbb5c":"#  Kumar Gaurav, Msc(data science) student ","ee59f4e0":"!python --version # version of python","7633c714":"import sklearn,pandas,numpy","0f3f1fb9":"pandas.__version__ ","1393cdc5":"numpy.__version__","175d295b":"sklearn. __version__","73fdd37a":"import pandas as pd  # import all library as per require\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.decomposition import PCA\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score\nfrom scipy.stats import norm,boxcox","33e90e21":"wine = pd.read_csv('..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv') # Dataset is given on Kaggle ,just downloaded from there\nwine.head()","e59235a5":"wine.shape","3674d879":"wine.info()","14427857":"wine.info","d33c5062":"wine.describe()","0f5e4a7d":"wine.shape","88c589ba":"wine.isnull().any()","27e702aa":"import missingno as msno\nmsno.matrix(wine)","46a0fe2f":"msno.bar(wine)","f45d62cf":"wine.plot()","48c3806a":"wine_corr = wine.corr()\nwine_corr","6ad4658a":"import seaborn as sns\nsns.heatmap(wine_corr,cmap = 'coolwarm')","8593f0b2":"col_names = wine.columns\ncol_names","17beb1fa":"for col in col_names :\n    sns.countplot(x =col, data = wine)","5982fc2f":"sns.countplot(x ='quality', data = wine)","49c83e1a":"plt.scatter(wine[\"quality\"],wine[\"alcohol\"])","da498413":"sns.boxplot(x=\"quality\",y=\"alcohol\", data=wine)","b0e3cc1d":"from collections import Counter\nCounter(wine['quality'])","be485883":"plot = plt.figure(figsize=(15,7))\nsns.boxplot(x=\"quality\",y=\"residual sugar\", data=wine)","6ea2e228":"cols = ['fixed acidity', 'volatile acidity', 'citric acid','residual sugar', 'chlorides', 'free sulfur dioxide', 'density', 'pH', 'sulphates', 'alcohol']","7b161693":"Q1 = wine[cols].quantile(0.25)\nQ3 = wine[cols].quantile(0.75)\n\nIQR = Q3- Q1\nprint(IQR)","d8f6c438":"from scipy import stats\nsns.distplot(wine['fixed acidity'],fit = norm)","c8147194":"\nstats.probplot(wine[\"fixed acidity\"], plot = plt)","563506ed":"\nplt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(wine[\"fixed acidity\"], fit=norm, color=\"orange\")\nplt.title(\"fixed acidity Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(wine[\"fixed acidity\"], plot = plt)\nplt.show()","f90cf8ce":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(wine[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(wine[\"residual sugar\"], plot = plt)\nplt.show()","37b97b9a":"wine[\"residual sugar\"], lam_fixed_acidity = boxcox(wine[\"residual sugar\"])","893e9c7d":"plt.figure(figsize=(10,4))\nplt.subplot(1,2,1)\nsns.distplot(wine[\"residual sugar\"], fit=norm, color=\"orange\")\nplt.title(\"residual sugar Distplot\", color = \"darkred\")\nplt.subplot(1,2,2)\nstats.probplot(wine[\"residual sugar\"], plot = plt)\nplt.show()","e0ee910e":"wine[\"fixed acidity\"], lam = boxcox(wine[\"fixed acidity\"])","faa3f0cf":"#Fixing skewness using boxcox\nwine[\"free sulfur dioxide\"], lam_fixed_acidity = boxcox(wine[\"free sulfur dioxide\"])","85220680":"#Fixing skewness using boxcox\nwine[\"total sulfur dioxide\"], lam_fixed_acidity = boxcox(wine[\"total sulfur dioxide\"])","9c7cbb71":"#Fixing skewness using boxcox\nwine[\"alcohol\"], lam_fixed_acidity = boxcox(wine[\"alcohol\"])","7784f7a6":"wine['quality'].values","e94652d7":"rating = []\nfor num in wine['quality']:\n    if num <= 4:\n        rating.append('1')\n    elif num <=7 :\n        rating.append('2')\n    elif num ==8 :\n        rating.append('3')\nwine[\"rating\"] = rating\n        \n        \n        ","acd90bd1":"from collections import Counter\nCounter(wine['quality'])  # count every row with number","fbef5de7":"Counter(wine['rating'])","af083eea":"x = wine.drop('quality',axis = 1)","8a879e9a":"pca = PCA()","f03daf5b":"x_pca = pca.fit_transform(x)","887b3da8":"plt.figure(figsize = (8,8))\nplt.plot(np.cumsum(pca.explained_variance_ratio_),'ro-')\nplt.grid()\nplt.show()","c1e76cb4":"new_pca = PCA(n_components = 8)\nnew_pca.fit_transform(x)","57bce968":"new_x = new_pca.fit_transform(x)","6ceba632":"x_train,x_test,y_train,y_test = train_test_split(new_x,rating,test_size = 0.50)","ad1226fd":"from scipy import stats\nfrom imblearn.over_sampling import SMOTE","2c992a6d":"sm = SMOTE(random_state = 14)","e28e02ee":"x_train,y_train = sm.fit_resample(x_train,y_train)","bcf43ba8":"import collections\ncollections.Counter(y_train)","c11cf38f":"model = RandomForestClassifier() # used random forest classifier","cfe8357e":"model.fit(x_train,y_train)","04af8139":"prediction_x = model.predict(x_test)","53c5e4b2":"accuracy = accuracy_score(prediction_x , y_test)\naccuracy","db613305":"from sklearn.metrics import confusion_matrix,classification_report\nclassification_report(y_test,prediction_x)","384768c8":"confusion_matrix(prediction_x, y_test)","22030247":"model.score(x_train,y_train)","07748025":"accuracy","2dcbb54c":"from sklearn.svm import SVC","0efb2cc7":"x_train,x_test,y_train,y_test = train_test_split(new_x,rating,test_size = 0.80)","39fb0e28":"classifier_svm = SVC(kernel= 'sigmoid')","5e79d4da":"classifier_svm.fit(x_train,y_train) # used sigmoid function","f50c7494":"classifier_svm.score(x_train,y_train)","34599833":"y_pred = classifier_svm.predict(x_test)","56e24eb1":"accuracy=accuracy_score(y_pred,y_test)\naccuracy","67a76683":"classification_report(y_pred,y_test)","fa86fcc7":"confusion_matrix(y_pred,y_test)","1e5d80c3":"accuracy","0c1952f2":"# PCA","dcd9edb7":"## wine quality scalling in 1,2,3 with column rating","3a2b31a7":"# accuracy","9de9f736":"## fixing skewness using boxcox","0be57f17":"### classification report ,score and confusion matrix","00c1d8fa":"## correlation work","4e38d97b":"## visualized with normal graph,\n## skewedness ","d97fb9e4":"# Model accuracy","d550ea12":"## accuracy with random forest ","1f79d6ee":"# working with imbalanced dataset with help of imlearn library","f2c58c55":"### classification report ,score, confusion matrix","66d3daf8":"## training score","eab4571a":"## Null values visualization","19d42160":"## Now working with support vector machine ","b07c3a04":"## EDA part"}}