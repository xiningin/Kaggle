{"cell_type":{"c883be7e":"code","c1cbad54":"code","9bf708f9":"code","3c9bbec3":"code","efa799b4":"code","4cfa99c6":"code","afb433d3":"code","dc169342":"code","b3cfd739":"markdown","ac725968":"markdown","d50ec5de":"markdown"},"source":{"c883be7e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c1cbad54":"df_netflix=pd.read_csv(\"\/kaggle\/input\/netflix-shows\/netflix_titles.csv\")\nheart_diseases=pd.read_csv(\"\/kaggle\/input\/heart-disease-uci\/heart.csv\")\niris=pd.read_csv(\"\/kaggle\/input\/iris\/Iris.csv\")\ndiabetes=pd.read_csv(\"\/kaggle\/input\/pima-indians-diabetes-database\/diabetes.csv\")","9bf708f9":"import matplotlib.pyplot as plt","3c9bbec3":"plt.hist(df_heart_dis['age'])\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.title('Age distribution.')\nplt.show()","efa799b4":"iris['Species'].value_counts().plot.pie(explode=[0.1,0.1,0.1],autopct='%1.1f%%',shadow=True,figsize=(10,8))\nplt.show()","4cfa99c6":"plt.plot(iris['PetalLengthCm'], iris['PetalWidthCm'], linestyle='none', marker='o', color='r')\nplt.show()","afb433d3":"plt.figure(figsize=(10,6))\nplt.boxplot([diabetes['Age'], diabetes['BMI'], diabetes['BloodPressure'], diabetes['Glucose']])\nplt.xticks([1, 2, 3, 4], ['Age', 'BMI', 'BloodPressure', 'Glucose'])\nplt.ylabel('Value')\nplt.title(\"Box Plot\")\nplt.show()","dc169342":"plt.stem(diabetes['BMI'][:10], diabetes['BloodPressure'][:10])\nplt.xticks(rotation=90)\nplt.show()","b3cfd739":". Matplotlib <br>\n. Seaborn <br>\n. ggplot <br>\n. Bokeh <br>\n. pygal <br>\n. Plotly <br>\n. geoplotlib <br>\n. Gleam <br>\n. missingno <br>\n. Leather <br>","ac725968":"# Matplotlib","d50ec5de":"Lollipop Plot"}}