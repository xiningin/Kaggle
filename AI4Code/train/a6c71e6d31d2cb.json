{"cell_type":{"7fd7cb98":"code","a38cae42":"code","ba838976":"code","d6af17c3":"code","6946acbe":"markdown","da0fd20f":"markdown"},"source":{"7fd7cb98":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pylab as plt\n\nimport warnings\nwarnings.filterwarnings(\"ignore\")","a38cae42":"train = pd.read_csv('..\/input\/jane-street-market-prediction\/train.csv')\ntest = pd.read_csv('..\/input\/jane-street-market-prediction\/example_test.csv')\nss = pd.read_csv('..\/input\/jane-street-market-prediction\/example_sample_submission.csv')","ba838976":"fig, axs = plt.subplots(2, 3, figsize=(12, 10))\naxs = axs.flatten()\nsns.distplot(train['resp'], ax=axs[0])\naxs[0].set_title('resp')\nsns.distplot(train['weight'], ax=axs[1])\naxs[1].set_title('weight')\nsns.distplot(train['resp_1'], ax=axs[2])\nsns.distplot(train['resp_2'], ax=axs[3])\nsns.distplot(train['resp_3'], ax=axs[4])\nsns.distplot(train['resp_4'], ax=axs[5])","d6af17c3":"FEAT_COLS = [c for c in train.columns if 'feature' in c]\nfor f in FEAT_COLS:\n    fig, axs = plt.subplots(1, 4, figsize=(15, 4))\n    sns.distplot(train[f], ax=axs[0])\n    sns.distplot(train.query('weight > 0')[f], ax=axs[1])\n    try:\n        sns.distplot(train.query('weight > 0 and resp > 0')[f].dropna().apply(np.log1p), ax=axs[2])\n        sns.distplot(train.query('weight > 0 and resp < 0')[f].dropna().apply(np.log1p), ax=axs[2])\n    except:\n        pass\n    train.sample(5000).plot(kind='scatter', x=f, y='resp', ax=axs[3])\n    fig.suptitle(f, fontsize=15, y=1.1)\n    \n    axs[0].set_title('feature distribution')\n    axs[1].set_title('only weight > 0')\n    axs[2].set_title('log transform')\n    axs[3].set_title('feature vs. response')\n    \n    plt.tight_layout()\n    plt.show()","6946acbe":"# Plotting All Features\n\nIn this competition we are provided an anonymized set of features.\n\nEven though features are anonymized, we can plot them to gain an understainding of their distributions.","da0fd20f":"# Target Distributions\n- Response, and weights"}}