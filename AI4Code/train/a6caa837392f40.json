{"cell_type":{"43dd7a73":"code","e4b6902f":"markdown","0629e3b5":"markdown"},"source":{"43dd7a73":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load data\ntrain = pd.read_csv('\/kaggle\/input\/ashrae-energy-prediction\/train.csv')\ntrain['timestamp'] = pd.to_datetime(train.timestamp)\ntrain = train.set_index(['timestamp'])\n\n# Plot missing values per building\/meter\nf,a=plt.subplots(1,4,figsize=(20,30))\nfor meter in np.arange(4):\n    df = train[train.meter==meter].copy().reset_index()\n    df['timestamp'] = pd.to_timedelta(df.timestamp).dt.total_seconds() \/ 3600\n    df['timestamp'] = df.timestamp.astype(int)\n    df.timestamp -= df.timestamp.min()\n    missmap = np.empty((1449, df.timestamp.max()+1))\n    missmap.fill(np.nan)\n    for l in df.values:\n        if l[2]!=meter:continue\n        missmap[int(l[1]), int(l[0])] = 0 if l[3]==0 else 1\n    a[meter].set_title(f'meter {meter:d}')\n    sns.heatmap(missmap, cmap='Paired', ax=a[meter], cbar=False)","e4b6902f":"**Legend:**\n- **X axis:** hours elapsed since Jan 1st 2016, for each of the 4 meter types\n- **Y axis:** building_id\n- **Brown:** meter reading available with non-zero value\n- **Light blue:** meter reading available with zero value\n- **White:** missing meter reading","0629e3b5":"**Goal: for each building and meter pair, visualize where target is missing and where target is zero VS time**"}}