{"cell_type":{"2a53548a":"code","52757cd4":"code","0c350ef0":"code","857cc5a0":"code","14ba1d22":"code","cc4cad31":"code","30143c07":"code","e39229ce":"code","aa96754b":"code","2bd81182":"code","73f50016":"code","a28da1e7":"code","80677403":"code","da2c8c02":"code","58114700":"code","dbdc5646":"code","9e774b14":"code","cb6240f5":"code","ce344535":"code","73b5e926":"code","b4d52e59":"code","12ae7509":"code","3d89784a":"code","b60303a5":"code","b26821a3":"code","f649e2f8":"code","288c18da":"code","86363879":"code","88f61c31":"code","548ddb1a":"markdown","3ab5c02e":"markdown","0f3ac84a":"markdown"},"source":{"2a53548a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","52757cd4":"data = pd.read_csv('..\/input\/development-index\/Development Index.csv')\ndata.head()","0c350ef0":"data.count()","857cc5a0":"data.describe()\n","14ba1d22":"data.info()","cc4cad31":"data.info()","30143c07":"data['Area']=data['Area (sq. mi.)']","e39229ce":"data['Area (sq. mi.)'].drop\n","aa96754b":"data.info()","2bd81182":"data.drop(labels =[\"Area (sq. mi.)\"],axis=1,inplace=True)","73f50016":"data.info()","a28da1e7":"data['GDP']=data['GDP ($ per capita)']","80677403":"data.drop(labels =[\"GDP ($ per capita)\"],axis=1,inplace=True)","da2c8c02":"data['Lit']=data['Literacy (%)']","58114700":"data.drop(labels =['Literacy (%)'],axis=1,inplace=True)","dbdc5646":"data.info()","9e774b14":"data['Development_Index']=data['Development Index']","cb6240f5":"data.drop(labels =['Development Index'],axis=1,inplace=True)","ce344535":"data.info()","73b5e926":"data","b4d52e59":"data.describe()\n","12ae7509":"data.head(100)","3d89784a":"from sklearn.model_selection import train_test_split,StratifiedKFold,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.ensemble import RandomForestClassifier, VotingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import accuracy_score","b60303a5":"train_len=len(data)","b26821a3":"train_len","f649e2f8":"train=data[:train_len]\nX_train=train.drop(labels=[\"Development_Index\"],axis=1)\ny_train=train[\"Development_Index\"]\nX_train,X_test ,y_train,y_test=train_test_split(X_train,y_train,test_size=0.20,random_state=42)\nprint(\"X_train\",len(X_train))\nprint(\"X_test\",len(X_test))\nprint(\"y_train\",len(y_train))\nprint(\"y_test\",len(y_test))\nprint(\"test\",len(test))","288c18da":"random_state=42\nclassifier=[SVC(random_state=random_state),\n           LogisticRegression(random_state=random_state),\n           KNeighborsClassifier()]\nsvc_param_grid={\"kernel\":[\"rbf\"],\n               \"gamma\":[0.001,0.01,0.1,1],\n               \"C\":[1,10,50,100,200,300,1000]}\nlogreg_param_grid={\"C\":np.logspace(-3,3,7),\n                  \"penalty\":[\"l1\",\"l2\"]}\nknn_param_grid={\"n_neighbors\":np.linspace(1,19,10,dtype=int).tolist(),\n               \"weights\":[\"uniform\",\"distance\"],\n               \"metric\":[\"euclidean\",\"manhattan\"]}\nclassifier_param=[svc_param_grid,\n                 logreg_param_grid,\n                 knn_param_grid]\ncv_result=[]\nbest_estimators=[]\nfor i in range(len(classifier)):\n    clf=GridSearchCV(classifier[i],param_grid=classifier_param[i],cv=StratifiedKFold(n_splits=10),scoring=\"accuracy\",n_jobs=-1,verbose=1)\n    clf.fit(X_train,y_train)\n    cv_result.append(clf.best_score_)\n    best_estimators.append(clf.best_estimator_)\n    print(cv_result[i])\n","86363879":"import seaborn as sns\ncv_results=pd.DataFrame({\"Cross Validation Means\":cv_result,\"ML Models\":[\"SVM\",\"LogisticRegression\",\"KNeighborsClassifier\"]})\ng=sns.barplot(\"Cross Validation Means\",\"ML Models\",data=cv_results)\ng.set_xlabel(\"Mean Accuracy\")\ng.set_title(\"Cross Validation Score\")","88f61c31":"logreg=LogisticRegression()\nlogreg.fit(X_train,y_train)\nacc_log_train=round(logreg.score(X_train,y_train)*100,2)\nacc_log_test=round(logreg.score(X_test,y_test)*100,2)\nprint(\"Training Accuray:% {}\".format(acc_log_train))\nprint(\"Testing Accuray:% {}\".format(acc_log_test))","548ddb1a":"The graph below shows the accuracy of the 3 models, highlighting that Logistic Regression showed the best result.","3ab5c02e":"Applied 3 different classfication models to predict the Development Index. ","0f3ac84a":"Seperate accuracy printing for the logistic regression model. "}}