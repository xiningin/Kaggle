{"cell_type":{"b5379c38":"code","961b36dd":"code","11c753ba":"code","8dfb36f0":"code","2e72d803":"code","ea807f7c":"code","7137533a":"code","afe5eaa6":"code","11d0c778":"code","28ccd358":"code","c84fa343":"code","6784c57c":"code","03dc2e91":"code","43eac285":"code","be1902b1":"code","6c02d3a4":"code","b9ef3413":"code","a448be80":"code","3a283336":"code","27d62ac4":"code","94b7b1aa":"code","682fd9bd":"markdown","1d2fb436":"markdown","385f61fb":"markdown","e5dadcb9":"markdown","9d62d5e4":"markdown","e4b3a126":"markdown"},"source":{"b5379c38":"import pandas as pd\nimport numpy as np\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom xgboost import XGBClassifier\nimport catboost\nfrom catboost import CatBoostClassifier\nfrom sklearn.metrics import log_loss\nimport warnings\nwarnings.filterwarnings(action='ignore', category=UserWarning)\n\ndf = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/train.csv')","961b36dd":"df.head(1)","11c753ba":"clf = RandomForestClassifier(random_state = 0)\n\nX = df.drop(\"target\", axis=1)\ny = df[\"target\"].astype('category').cat.codes\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state = 0)","8dfb36f0":"clf.fit(X_train, y_train);","2e72d803":"predictions = clf.predict_proba(X_test)\npredictions","ea807f7c":"clf.score(X_test, y_test) ","7137533a":"log_loss_result = log_loss(y_test, predictions)\nround(log_loss_result, 5)","afe5eaa6":"test_df = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/test.csv')\nsubmission_df = pd.read_csv('..\/input\/tabular-playground-series-may-2021\/sample_submission.csv')\nsubmission_df.head(2)","11d0c778":"clf.fit(X, y);","28ccd358":"X = test_df.copy()\ntest_predictions = clf.predict_proba(X)\ntest_predictions","c84fa343":"df_test_predictions = pd.DataFrame(test_predictions, columns=[\"Class_1\", \"Class_2\", \"Class_3\", \"Class_4\"])\ndf_test_predictions.head(2)","6784c57c":"submission_df[\"Class_1\"] = df_test_predictions[\"Class_1\"]\nsubmission_df[\"Class_2\"] = df_test_predictions[\"Class_2\"]\nsubmission_df[\"Class_3\"] = df_test_predictions[\"Class_3\"]\nsubmission_df[\"Class_4\"] = df_test_predictions[\"Class_4\"]","03dc2e91":"submission_df.head(2)","43eac285":"clf = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss', random_state = 0)\nclf.fit(X_train, y_train);","be1902b1":"predictions = clf.predict_proba(X_test).copy()\npredictions","6c02d3a4":"clf.score(X_test, y_test) ","b9ef3413":"log_loss_result = log_loss(y_test, predictions)\nround(log_loss_result, 5)","a448be80":"clf = CatBoostClassifier(random_state = 0)\nclf.fit(X_train, y_train, logging_level = 'Silent');","3a283336":"predictions = clf.predict_proba(X_test)\nprint(predictions)","27d62ac4":"clf.score(X_test, y_test) ","94b7b1aa":"log_loss_result = log_loss(y_test, predictions)\nround(log_loss_result, 5)","682fd9bd":"### Random Forest","1d2fb436":"#### Before submission training on all data","385f61fb":"#### CatBoost gives the best score. ","e5dadcb9":"## XGBoost","9d62d5e4":"## CatBoost","e4b3a126":"## Baseline Random Forest XGBoost CatBoost"}}