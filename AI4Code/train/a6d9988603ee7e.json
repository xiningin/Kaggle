{"cell_type":{"a7eaac78":"code","0eed330c":"code","2c9e59eb":"code","e63bd9b6":"code","22d798f3":"code","8572c899":"code","3b5eccf2":"code","bb74e7cf":"code","397e6d1e":"code","46fca2c4":"code","7131f075":"code","889bd374":"code","bb3d47ba":"code","16075ee2":"code","e0ad3f09":"code","a331999f":"code","08703822":"code","4d5386c9":"code","012827f8":"code","9eb71a3b":"code","f06fa207":"code","ef6788e8":"code","e8df0c28":"code","f94c22a3":"code","80d19a21":"code","059c1561":"code","d6837f7b":"code","0edb27d5":"code","60fea012":"code","61aa294e":"code","392ebb33":"markdown"},"source":{"a7eaac78":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","0eed330c":"import cv2","2c9e59eb":"cats_images = []\npath = \"..\/input\/dog vs cat\/dataset\/training_set\/cats\"\nfor image in os.listdir(path):\n    full_path = os.path.join(path,image)\n    img = cv2.imread(full_path,cv2.IMREAD_GRAYSCALE)\n    img = cv2.resize(img,(128,128))\n    cats_images.append(img)","e63bd9b6":"cat = np.concatenate(cats_images)\ncat.shape","22d798f3":"df1 = pd.DataFrame(cat)","8572c899":"df1['label']=0","3b5eccf2":"df1.head","bb74e7cf":"dogs_images = []\npath = \"..\/input\/dog vs cat\/dataset\/training_set\/dogs\"\nfor image in os.listdir(path):\n    full_path = os.path.join(path,image)\n    img = cv2.imread(full_path,cv2.IMREAD_GRAYSCALE)\n    img = cv2.resize(img,(128,128))\n    dogs_images.append(img)\ndog=np.concatenate(dogs_images)\ndf2 = pd.DataFrame(dog)\ndf2['label']=1","397e6d1e":"df2.head()","46fca2c4":"df = pd.concat([df1,df2])","7131f075":"df.head()","889bd374":"df.shape","bb3d47ba":"features = df.drop(\"label\",axis=1)\ntarget = df['label']","16075ee2":"from sklearn.model_selection import train_test_split\n","e0ad3f09":"X_train,X_test,y_train,y_test = train_test_split(features,target)","a331999f":"from sklearn.linear_model import LogisticRegression","08703822":"model = LogisticRegression()","4d5386c9":"model.fit(X_train,y_train)","012827f8":"y_pred = model.predict(X_test)","9eb71a3b":"from sklearn.metrics import accuracy_score,confusion_matrix","f06fa207":"confusion_matrix(y_test,y_pred)","ef6788e8":"accuracy_score(y_test,y_pred)","e8df0c28":"from PIL import Image","f94c22a3":"Image.open(\"..\/input\/dog vs cat\/dataset\/training_set\/cats\/cat.1.jpg\")","80d19a21":"path = \"..\/input\/dog vs cat\/dataset\/training_set\/cats\/cat.1.jpg\"\nimg = cv2.imread(path,cv2.IMREAD_GRAYSCALE)\nimg = cv2.resize(img,(128,128))","059c1561":"img.shape","d6837f7b":"prediction = model.predict(img)","0edb27d5":"prediction\n","60fea012":"\nnp.mean(prediction == 1)","61aa294e":"np.mean(prediction == 0)","392ebb33":"# 0 --> cat\n# 1 --> dog"}}