{"cell_type":{"96f767ca":"code","b4ca9fe1":"code","cbe353ec":"code","b9152dcf":"code","0305861d":"code","9ef6061f":"code","03d99575":"code","c1cc0400":"code","90535749":"code","64e98974":"code","57f4f4d4":"code","c8558441":"code","52d68eb2":"code","4d9f9591":"code","af828f98":"code","5c59a20c":"code","8878e648":"code","b27fc624":"code","68321920":"code","43817853":"code","b8ed6766":"code","bd855254":"code","ff12e295":"code","7f18ba67":"code","546d7af8":"code","b63c1e13":"code","e7707bec":"code","1694451d":"code","140fb979":"code","22813c8d":"code","d92d6def":"code","a40cf110":"code","ff17de3c":"code","c80a4378":"code","e359cdc6":"code","b3ec3b9f":"code","05c119c8":"code","204a0c39":"code","f3f60268":"code","7f9ea225":"code","ad67d8d7":"code","7e9e5c52":"code","c2564096":"code","bcd7bed5":"code","5d90a425":"code","1f5f23e6":"code","ce9037e4":"code","fbc63fc5":"code","02489f92":"code","5c97367e":"code","b2b7b78c":"code","afd15873":"code","be8a1b4b":"code","f81d8c9b":"code","9bb41b6d":"code","ba7ecf46":"code","2c8afd2a":"code","f43ee553":"markdown","f636ac70":"markdown","e54ab94a":"markdown","7ad147db":"markdown","6e330336":"markdown","ef59c2bd":"markdown","0bf8394d":"markdown","05bf74be":"markdown","2073239d":"markdown","642537aa":"markdown","36944739":"markdown","449ecec0":"markdown","e472dad1":"markdown","4d2893b4":"markdown","3da4a806":"markdown","f744e548":"markdown","77f5c931":"markdown","1a975413":"markdown","17bd282c":"markdown","4b00da31":"markdown","2bae487e":"markdown","2fdf5848":"markdown","c5a4fcb5":"markdown","64b98287":"markdown"},"source":{"96f767ca":"# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","b4ca9fe1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt","cbe353ec":"dados = pd.read_csv('\/kaggle\/input\/covid19\/brazil_covid19.csv')","b9152dcf":"dados.head()","0305861d":"dados.shape","9ef6061f":"dados.dtypes","03d99575":"dados.isnull().sum()","c1cc0400":"dados.describe()","90535749":"a = dados.date.value_counts().sort_index()\nprint('Primeira data da base:',a.index[0])\nprint('\u00daltima data da base:',a.index[-1])","64e98974":"dados.tail()","57f4f4d4":"ultimos_dados = dados[dados.date == a.index[-1]]\nultimos_dados = ultimos_dados.groupby('state').sum()\nultimos_dados = ultimos_dados.drop(['suspects','refuses'], axis=1)\nultimos_dados.head()","c8558441":"# Criando a ordenando o plot\nbar =ultimos_dados.sort_values(by='cases', \n                          ascending=True).plot(kind='bar',\n                          figsize=(20,10),\n                          color = ['yellow','red'],\n                          width = 1,\n                          rot=1)\n\nsns.set(style='whitegrid')\n\nfor i in bar.patches:\n    bar.annotate('{:.0f}'.format(i.get_height()), (i.get_x()+0.4, \n                                                   i.get_height()),ha='center', \n                                                   va='bottom',color= 'black')\n\n# Definindo a legenda e os paramentros\nplt.title('Panorama gr\u00e1fico de casos por estados', size=20)\nplt.ylabel('Quantidade', size=15)\nplt.yticks(size=10)\nplt.xlabel('Estados', size=15)\nplt.xticks(size=10, rotation=45)\nplt.legend(bbox_to_anchor=(0.95,0.95), # coordenadas\n                          frameon = True,\n                          fontsize = 10,\n                          ncol = 2,\n                          fancybox = True,\n                          framealpha = 0.95,\n                          shadow = True,\n                          borderpad = 1);","52d68eb2":"agregado_brasil = dados.groupby('date').sum()\nagregado_brasil.head()","4d9f9591":"agregado_brasil.shape","af828f98":"agregado_brasil = agregado_brasil.reset_index(drop=False)\nagregado_brasil.head()","5c59a20c":"agregado_brasil.dtypes","8878e648":"agregado_brasil.loc[agregado_brasil['cases'] == 1]","b27fc624":"agregado_brasil_inicio_dos_casos = agregado_brasil.loc[agregado_brasil['date'] >= '2020-02-26']\nprint(agregado_brasil_inicio_dos_casos.shape)\nagregado_brasil_inicio_dos_casos.head()","68321920":"plt.figure(figsize = (10,10));\nsns.scatterplot(x='date', s = 100, y='cases', \n                data=agregado_brasil_inicio_dos_casos, color = 'blue')\nplt.xticks(rotation=45);","43817853":"agregado_brasil_inicio_dos_casos['dias'] = range(1, len(agregado_brasil_inicio_dos_casos)+1, 1)\nagregado_brasil_inicio_dos_casos.head()","b8ed6766":"from sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.preprocessing import PolynomialFeatures","bd855254":"agregado_brasil_inicio_dos_casos.columns","ff12e295":"X = agregado_brasil_inicio_dos_casos[['dias']]\ny = agregado_brasil_inicio_dos_casos[['deaths']]","7f18ba67":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)","546d7af8":"# Fitando uma regress\u00e3o polinomial\npoly_reg = PolynomialFeatures(degree=2, include_bias = False)\nX_poly = poly_reg.fit_transform(X_train)\npol_reg = LinearRegression()\npol_reg.fit(X_poly, y_train)","b63c1e13":"y_predict = pol_reg.predict(poly_reg.fit_transform(X_train))","e7707bec":"# Visualizing the Polymonial Regression results\ndef viz_polymonial():\n    plt.scatter(X, y, color='red')\n    plt.plot(X_test, pol_reg.predict(poly_reg.fit_transform(X_test)), color='blue')\n    plt.title('Regression')\n    plt.xlabel('Dias')\n    plt.ylabel('Casos')\n    plt.show()\n    return\nviz_polymonial()","1694451d":"plt.plot(X_train,y_predict, c= 'r')\nplt.scatter(X_train, y_train, s = 32)\n\nplt.plot(X_test, pol_reg.predict(poly_reg.fit_transform(X_test)), c = 'y')\nplt.scatter(X_test, y_test, s=30, c='g')","140fb979":"plt.plot(X_train,y_predict, c= 'r')\nplt.scatter(X_train, y_train, s = 32)","22813c8d":"plt.plot(X_test, pol_reg.predict(poly_reg.fit_transform(X_test)), c = 'y')\nplt.scatter(X_test, y_test, s=30, c='g')","d92d6def":"from sklearn.metrics import mean_squared_error, r2_score\nprint(\"Erro m\u00e9dio quadr\u00e1tico: \",mean_squared_error(y_test,pol_reg.predict(poly_reg.fit_transform(X_test))))\nprint(\"R^2: \", r2_score(y_test,pol_reg.predict(poly_reg.fit_transform(X_test))))","a40cf110":"from sklearn.tree import DecisionTreeRegressor \nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import mean_squared_error","ff17de3c":"tree = DecisionTreeRegressor(random_state=42)","c80a4378":"tree.fit(X_train, y_train)","e359cdc6":"y_tree_treino = tree.predict(X_train)\ny_tree_teste = tree.predict(X_test)","b3ec3b9f":"plt.figure()\nplt.scatter(X, y, s=20, edgecolor=\"black\",\n            c=\"darkorange\", label=\"Dados\")\n\nplt.plot(X_train, y_tree_treino, color=\"cornflowerblue\",\n         label=\"Treino\", linewidth=2)\n\nplt.plot(X_test, y_tree_teste, color=\"yellowgreen\", label=\"Teste\", linewidth=2)\nplt.xlabel(\"Dias\")\nplt.ylabel(\"target\")\nplt.title(\"Fit da \u00e1rvore de decis\u00e3o\")\nplt.legend()","05c119c8":"acc_tree_treino = round(accuracy_score(y_train, y_tree_treino)*100, 2)\nprint('Acur\u00e1cia de: ', acc_tree_treino)","204a0c39":"print(\"Erro m\u00e9dio quadr\u00e1tico: \", np.sqrt(mean_squared_error(y_train, y_tree_treino)))\nprint(\"R^2: \", r2_score(y_train,pol_reg.predict(poly_reg.fit_transform(X_train))))","f3f60268":"acc_tree_teste = round(accuracy_score(y_test, y_tree_teste)*100, 2)\nprint('Acur\u00e1cia de: ', acc_tree_teste)","7f9ea225":"print(\"Erro m\u00e9dio quadr\u00e1tico: \", np.sqrt(mean_squared_error(y_test, y_tree_teste)))\nprint(\"R^2: \", r2_score(y_test,pol_reg.predict(poly_reg.fit_transform(X_test))))","ad67d8d7":"tree.feature_importances_","7e9e5c52":"!pip install pydotplus","c2564096":"from sklearn.externals.six import StringIO\nfrom IPython.display import Image\nfrom sklearn.tree import export_graphviz\nimport pydotplus","bcd7bed5":"plot = X\ntar = agregado_brasil_inicio_dos_casos[['deaths']]\n\ndot_data = StringIO()\nexport_graphviz(tree, out_file=dot_data,\n                filled=True, rounded=True,\n                special_characters=True,\n                feature_names=X.columns,\n                class_names=tar)\n\ngraph = pydotplus.graph_from_dot_data(dot_data.getvalue())\nImage(graph.create_png())","5d90a425":"plt.figure(figsize = (15,10));\nsns.set(style='whitegrid')\nsns.distplot(dados['cases'], rug=True, hist=True, bins=5);","1f5f23e6":"plt.figure(figsize = (15,10));\nsns.set(style='whitegrid');\nsns.jointplot(x='cases', y='deaths', data=dados);","ce9037e4":"dados.head()","fbc63fc5":"dados.drop(['date', 'hour'], axis=1).groupby('state').max().sort_values(by ='cases', \n                                                                        ascending=False).style.background_gradient(cmap='Reds')","02489f92":"dados[dados.date == '2020-03-30'].cases.sum()","5c97367e":"dados.columns","b2b7b78c":"dados_sao_paulo = dados[dados.state == 'S\u00e3o Paulo']\ndados_sao_paulo = dados_sao_paulo.drop(labels=['hour'], axis=1)\ndados_sao_paulo.head()","afd15873":"dados_sao_paulo.shape","be8a1b4b":"dados_sao_paulo.head()","f81d8c9b":"plt.figure(figsize = (20,10));\nsns.set(style='whitegrid')\n\nsns.lineplot(x='date', y='deaths', data=dados_sao_paulo, color='r')\n\nplt.legend(labels=['Casos fatais'])\nplt.title('Quantidade de casos em S\u00e3o Paulo')\nplt.xticks(rotation=45)\nplt.xlabel('Data')\nplt.ylabel('Casos')\nplt.show()","9bb41b6d":"plt.figure(figsize = (20,10));\nsns.set(style='whitegrid')\nsns.lineplot(x='date', y='deaths', data=dados_sao_paulo, color = 'red')\nsns.lineplot(x='date', y='cases', data=dados_sao_paulo, color = 'orange')\nplt.legend(labels=['Casos fatais', 'Infectados'])\nplt.title('Quantidade de casos fatais e infectados ao longo do tempo')\nplt.xticks(rotation=45)\nplt.xlabel('Data')\nplt.ylabel('Casos')\nplt.show()","ba7ecf46":"c = dados_sao_paulo.corr()\nc.style.background_gradient(cmap='coolwarm')","2c8afd2a":"plt.figure(figsize = (10,10));\nsns.set(style='whitegrid')\nsns.scatterplot(x='cases', s = 100, y='deaths', data=dados_sao_paulo, color = 'green')\nplt.title('Infectados x V\u00edtimas fatais em S\u00e3o Paulo')\nplt.xticks(rotation=45)\nplt.xlabel('Casos fatais')\nplt.ylabel('Infectados')\nplt.show()","f43ee553":"## Rela\u00e7\u00e3o de identificados x casos fatais","f636ac70":"### \u00c1rvore de decis\u00e3o","e54ab94a":"# Dados referente a S\u00e3o Paulo ao longo do tempo","7ad147db":"Este notebook tem por objetivo realizar uma an\u00e1lise explorat\u00f3ria da base de dados do Covid-19 que \u00e9 atualizada pelo Raphael Fontes, tal como realizar testes de tecnicas de Machine Learning (Regress\u00e3o Polinomial e \u00c1rvore de Regress\u00e3o), lan\u00e7ando m\u00e3o da biblioteca Sklearn. Os teste n\u00e3o geram um resultado satisfat\u00f3rio e demandam ajuestes e aprimoramentos. Entretanto, o tempo desprendido para a constru\u00e7\u00e3o de cada c\u00e9lula est\u00e1 sendo bastante enriquecedor para o processo de aprendizagem.\n\n* Sobre o Dataset\n    *    O dataset contem uma serie hist\u00f3rica sobre os casos do coronav\u00edrus COVID-19 nos estados do brasileiros.\n    *    Os registros s\u00e3o acumulativos, ent\u00e3o os novos casos podem ser obtidos por uma diferen\u00e7a do dia atual com o dia anterior.\n    *    O Minist\u00e9rio da Sa\u00fade n\u00e3o divulga mais os dados de refuses (descartados) nem os casos suspects (suspeitos).\n    *    N\u00e3o h\u00e1 um c\u00e1lculo entre os casos, salvo nos dias que n\u00e3o houveram levantamento de casos suspeitos apenas o recebimento do resultado dos exames, que a\u00ed sim um caso sa\u00ed de suspeito e vai para descartado ou confirmado.\n\n\n\n* A nova plataforma do Minist\u00e9rio da Sa\u00fade \u00e9 a Coronav\u00edrus Brasil. Lan\u00e7ada em 25\/03\/2020.\n\n     *   Casos descartados: s\u00e3o os casos que eram suspeitos e seus resultados de exames deram negativo para coronav\u00edrus.\n     *   Casos suspeitos: s\u00e3o casos com sintomas de coronav\u00edrus que est\u00e3o aguardando o resultado do exame.\n     *   Casos positivos: s\u00e3o os casos que eram suspeitos e seus resultados de exames deram positivo para o coronav\u00edrus.\n\n\n\n* Colunas\n     *   Cases: s\u00e3o os casos confirmados\n     *   Suspects: s\u00e3o os casos suspeitos\n     *   Refuses: s\u00e3o os casos descartados\n     \n      \n*   Mais informa\u00e7\u00f5es: [https:\/\/www.kaggle.com\/unanimad\/corona-virus-brazil\/discussion\/137694](http:\/\/)","6e330336":"Est\u00e1 representa\u00e7\u00e3o objetiva mostrar e forma ordenada e em tonalidades mais acentuadas de vermelhos, os locais com maiores quantidades de casos de infectados, casos fatais e suspeitas de contamina\u00e7\u00e3o.","ef59c2bd":"## An\u00e1lise visual da quantidade de casos em S\u00e3o Paulo ao longo do tempo","0bf8394d":"Pegando os ultimos valores da s\u00e9rie. O Minist\u00e9rio da Sa\u00fade n\u00e3o divulga mais os dados de refuses (descartados) nem os casos suspects (suspeitos).","05bf74be":"# Panorama geral do Brasil","2073239d":"# Introdu\u00e7\u00e3o","642537aa":"## Imprimindo a \u00e1rvore de decis\u00e3o","36944739":"#### Acur\u00e1cia e RMSE na base de treino","449ecec0":"## Modelos","e472dad1":"#### Acur\u00e1cia e RMSE na base de teste","4d2893b4":"# Entendendo o conte\u00fado da base de dados","3da4a806":"### Regress\u00e3o Polinomial","f744e548":"# Instanciando as Bibliotecas","77f5c931":"Total de casos at\u00e9 dia 30\/03\/20, antes da \u00faltima atualiza\u00e7\u00e3o","1a975413":"## Correlacionando a quandidade de infectados por mortos no estado de SP","17bd282c":"## An\u00e1lise visual da quantidade de infectados e casos fatais em S\u00e3o Paulo ao longo do tempo","4b00da31":"# Concentra\u00e7\u00e3o da quantidade de casos por estado. \n\nPor meio deste gr\u00e1fico podemos verificar que a maior concentra\u00e7\u00e3o de quantidades de casos ficam em uma faixa de 1 a 200 casos.","2bae487e":"Verificando a quantidade de nulos nas colunas","2fdf5848":"Criando a vari\u00e1vel dia na tentativa de discretizar a vari\u00e1vel temporal Data para utilizar os modelos de regress\u00e3o.","c5a4fcb5":"# Importando os dados","64b98287":"## Tratamento dos dados"}}