{"cell_type":{"f22c029d":"code","b02384cb":"code","c2bf208f":"code","0386d70e":"code","efd2c9e3":"code","ef644de1":"code","18c391aa":"code","e638bdb7":"code","1a486643":"code","dfb65f49":"code","79b8a90c":"code","6383412a":"code","b87b0128":"code","4d9b3ad2":"code","27a16b5c":"code","02823164":"code","eee4b0e8":"code","1f09d64e":"code","abe15829":"code","5f8d49e5":"code","4e33d959":"code","887c496b":"code","a68ec236":"code","231b4c0e":"markdown","bb0c3bb6":"markdown","df67121c":"markdown","a1bf00aa":"markdown","fcb955d2":"markdown","0b2b98c0":"markdown","e6d28b25":"markdown","2d047342":"markdown","f1db055b":"markdown","0c599e4b":"markdown","39f97a7b":"markdown","58c8c8d4":"markdown","af222b3b":"markdown","4a0f58fb":"markdown","09da998b":"markdown","53744f9e":"markdown","6eb8693d":"markdown"},"source":{"f22c029d":"# Importing libs\nimport pandas as pd\nimport numpy as np\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings(\"ignore\")","b02384cb":"def format_spines(ax, right_border=True):\n    \"\"\"docstring for format_spines:\n    this function sets up borders from an axis and personalize colors\n    input:\n        ax: figure axis\n        right_border: flag to determine if the right border will be visible or not\"\"\"\n    \n    # Setting up colors\n    ax.spines['bottom'].set_color('#CCCCCC')\n    ax.spines['left'].set_color('#CCCCCC')\n    ax.spines['top'].set_color('#FFFFFF')\n    if right_border:\n        ax.spines['right'].set_color('#CCCCCC')\n    else:\n        ax.spines['right'].set_color('#FFFFFF')\n    ax.patch.set_facecolor('#FFFFFF')\n\n\ndef count_plot(feature, df, colors='Blues_d', hue=False):\n    \"\"\"docstring for count_plot:\n    this function plots data setting up frequency and percentage. This algo sets up borders\n    and personalization\n    input:\n        feature: feature to be plotted\n        df: dataframe\n        colors = color palette (default=Blues_d)\n        hue = second feature analysis (default=False)\"\"\"\n    \n    # Preparing variables\n    ncount = len(df)\n    fig, ax = plt.subplots()\n    if hue != False:\n        ax = sns.countplot(x=feature, data=df, palette=colors, hue=hue)\n    else:\n        ax = sns.countplot(x=feature, data=df, palette=colors)\n\n    # Make twin axis\n    ax2=ax.twinx()\n\n    # Switch so count axis is on right, frequency on left\n    ax2.yaxis.tick_left()\n    ax.yaxis.tick_right()\n\n    # Also switch the labels over\n    ax.yaxis.set_label_position('right')\n    ax2.yaxis.set_label_position('left')\n\n    ax2.set_ylabel('Frequency [%]')\n\n    # Setting borders\n    format_spines(ax)\n    format_spines(ax2)\n\n    # Setting percentage\n    for p in ax.patches:\n        x=p.get_bbox().get_points()[:,0]\n        y=p.get_bbox().get_points()[1,1]\n        ax.annotate('{:.1f}%'.format(100.*y\/ncount), (x.mean(), y), \n                ha='center', va='bottom') # set the alignment of the text\n    if not hue:\n        ax.set_title(df[feature].describe().name + ' Analysis', size=13, pad=15)\n    else:\n        ax.set_title(df[feature].describe().name + ' Analysis by ' + hue, size=13, pad=15)\n        \n    plt.show()\n\ndef compute_square_distances(df, Kmin=1, Kmax=12):\n    \"\"\"docstring for compute_square_distances\n    this function computes the square distance of KMeans algorithm through the number of\n    clusters in range Kmin and Kmax\n    input:\n        df: dataframe\n        Kmin: min index of K analysis\n        Kmax: max index of K analysis\"\"\"\n    \n    square_dist = []\n    K = range(Kmin, Kmax)\n    for k in K:\n        km = KMeans(n_clusters=k)\n        km.fit(df)\n        square_dist.append(km.inertia_)\n    return K, square_dist\n\ndef plot_elbow_method(df, Kmin=1, Kmax=12):\n    \"\"\"docstring for plot_elbow_method\n    this function computes the square distances and plots the elbow method for best cluster\n    number analysis\n    input:\n        df: dataframe\n        Kmin: min index of K analysis\n        Kmax: max index of K analysis\"\"\"\n    \n    # Computing distances\n    K, square_dist = compute_square_distances(df, Kmin, Kmax)\n    \n    # Plotting elbow method\n    fig, ax = plt.subplots()\n    ax.plot(K, square_dist, 'bo-')\n    format_spines(ax, right_border=False)\n    plt.xlabel('Number of Clusters')\n    plt.ylabel('Sum of Square Dist')\n    plt.title(f'Elbow Method - {df.columns[0]} and {df.columns[1]}', size=14)\n    plt.show()\n    \ndef plot_kmeans(df, y_kmeans, centers):\n    \"\"\"docstring for plotKMeans\n    this function plots the result of a KMeans training\n    input:\n        df: dataframe\n        y_kmeans: kmeans prediction\n        centers: cluster centroids\"\"\"\n    \n    # Setting up and plotting\n    X = df.values\n    sns.set(style='white', palette='muted', color_codes=True)\n    fix, ax = plt.subplots(figsize=(7, 5))\n    ax.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='plasma')\n    ax.scatter(centers[:, 0], centers[:, 1], c='black', s=200, alpha=0.5)\n    ax.set_title('KMeans Applied', size=14)\n    ax.set_xlabel(f'{df.columns[0]}', size=12, labelpad=5)\n    ax.set_ylabel(f'{df.columns[1]}', size=12, labelpad=5)\n    format_spines(ax, right_border=False)\n    plt.show()","c2bf208f":"# Reading data\ndf = pd.read_csv(r'..\/input\/Mall_Customers.csv')\ndf.head()","0386d70e":"# Dims\ndf.shape","efd2c9e3":"# Communication\nprint(f'This dataset has {df.shape[0]} rows and {df.shape[1]} columns.')","ef644de1":"# Null data\ndf.isnull().sum()","18c391aa":"# Dataset info\ndf.info()","e638bdb7":"# Some statistics\ndf.describe()","1a486643":"# Numerical features distribution\nsns.set(style='white', palette='muted', color_codes=True)\nfig, axs = plt.subplots(1, 3, figsize=(12, 3))\nsns.despine(left=True)\naxs[0] = sns.distplot(df['Age'], bins=20, ax=axs[0])\naxs[1] = sns.distplot(df['Annual Income (k$)'], bins=20, ax=axs[1], color='g')\naxs[2] = sns.distplot(df['Spending Score (1-100)'], bins=20, ax=axs[2], color='r')\n\nfig.suptitle('Numerical Feature Distribution')\nplt.setp(axs, yticks=[])\nplt.tight_layout()\nplt.show()","dfb65f49":"# Counting gender\ncustom_colors = [\"#3498db\", \"#C8391A\"]\ncount_plot(feature='Gender', df=df, colors=custom_colors)","79b8a90c":"# Looking at age values\ndf['Age'].describe()","6383412a":"# Creating new category\nbins = [18, 22, 50, 70]\nlabels = ['Young', 'Adult', 'Senior']\ndf['Age Range'] = pd.cut(df['Age'], bins=bins, labels=labels, right=False)\n\ndf.head()","b87b0128":"# Result\ncount_plot(feature='Age Range', df=df, colors='YlGnBu')","4d9b3ad2":"# Gender by Age Range\ncount_plot(feature='Gender',df=df, hue='Age Range')","27a16b5c":"# Maybe the inverse would be more clear\ncount_plot(feature='Age Range', df=df, colors=custom_colors, hue='Gender')","02823164":"# Spending Score Distribution\nfig, ax = plt.subplots(figsize=(10, 4), sharex=True)\nfemale = df.loc[df['Gender'] == 'Female']\nmale = df.loc[df['Gender'] == 'Male']\nax = sns.distplot(female['Spending Score (1-100)'], bins=20, label='female', \n                  color='r')\nax = sns.distplot(male['Spending Score (1-100)'], bins=20, label='male')\nax.set_title('Spending Score Distribution by Gender', size=14)\nformat_spines(ax, right_border=False)\nplt.legend()\nplt.show()","eee4b0e8":"# Annual Income Distribution\nfig, ax = plt.subplots(figsize=(10, 4), sharex=True)\nfemale = df.loc[df['Gender'] == 'Female']\nmale = df.loc[df['Gender'] == 'Male']\nax = sns.distplot(female['Annual Income (k$)'], bins=20, label='female', \n                  color='r', hist=True)\nax = sns.distplot(male['Annual Income (k$)'], bins=20, label='male')\nax.set_title('Annual Income Distribution by Gender', size=14)\nformat_spines(ax, right_border=False)\nplt.legend()\nplt.show()","1f09d64e":"# Configuration\nsns.set(style='white', palette='muted', color_codes=True)\nfig, axs = plt.subplots(1, 3, figsize=(12, 3))\nsns.despine(left=True)\n\n# Dataframe indexing\nyoung = df.loc[df['Age Range'] == 'Young']\nadult = df.loc[df['Age Range'] == 'Adult']\nsenior = df.loc[df['Age Range'] == 'Senior']\ntitles = ['Young', 'Adult', 'Senior']\nage_range_dataframes = [young, adult, senior]\n\nfor idx in range(3):\n    age_range = age_range_dataframes[idx]\n    axs[idx] = sns.distplot(age_range[age_range['Gender']=='Male']['Spending Score (1-100)'], \n                          bins=20, ax=axs[idx], label='male', color='b', hist=False)\n    axs[idx] = sns.distplot(age_range[age_range['Gender']=='Female']['Spending Score (1-100)'], \n                          bins=20, ax=axs[idx], label='female', color='r', hist=False)\n    axs[idx].set_title(titles[idx], size=13)\n\nfig.suptitle('Spending Score Distribution by Gender and Age Range')\nplt.setp(axs, yticks=[])\nplt.tight_layout()\nplt.subplots_adjust(top=0.75)\nplt.show()","abe15829":"# Spending Score Distribution by Age Range\nfig, ax = plt.subplots(figsize=(10, 4), sharex=True)\nyoung = df.loc[df['Age Range'] == 'Young']\nadult = df.loc[df['Age Range'] == 'Adult']\nsenior = df.loc[df['Age Range'] == 'Senior']\nax = sns.distplot(young['Spending Score (1-100)'], bins=10, label='Young', color='b')\nax = sns.distplot(adult['Spending Score (1-100)'], bins=10, label='Adult', color='g')\nax = sns.distplot(senior['Spending Score (1-100)'], bins=10, label='Senior', color='grey')\nax.set_title('Spending Score Distribution by Gender', size=14)\nformat_spines(ax, right_border=False)\nplt.legend()\nplt.show()","5f8d49e5":"# Indexing dataframe\ndf_1 = df.loc[:, ['Age', 'Spending Score (1-100)']]\n\n# Searching for optimun K\nplot_elbow_method(df_1)","4e33d959":"# Training KMeans\nk_means = KMeans(n_clusters=4)\nk_means.fit(df_1)\ny_kmeans = k_means.predict(df_1)\ncenters = k_means.cluster_centers_\nplot_kmeans(df_1, y_kmeans, centers)","887c496b":"# Dataframe indexing\ndf_2 = df.loc[:, ['Annual Income (k$)', 'Spending Score (1-100)']]\n\n# Optimum K\nplot_elbow_method(df_2)","a68ec236":"# Training\nk_means = KMeans(n_clusters=5)\nk_means.fit(df_2)\ny_kmeans = k_means.predict(df_2)\ncenters = k_means.cluster_centers_\nplot_kmeans(df_2, y_kmeans, centers)","231b4c0e":"Let's run KMeans with 5 clusters.","bb0c3bb6":"The set of functions in this implementation includes:\n    * format_spines();\n    * count_plot();\n    * compute_square_distances();\n    * plot_elbow_method();\n    * plot_kmeans();\n\nEach one with its set of parameters.","df67121c":"## EDA","a1bf00aa":"Let's train our algorithm with 4 clusters.","fcb955d2":"**Conclusions:**\n* Senior Spending Scores concentrates in low and medium values;\n* In high score valuation, adults have the highest levels;\n* In gender comparison, young and senior women have higher Spending Score values than young and senior men.","0b2b98c0":"Let's analyze data from mall customers to dig intuitions about costumer convergence and apply KMeans algorithm to develop insights about how to deal with different clusters. ","e6d28b25":"**I hope you enjoy this kernel! Please upvote!**","2d047342":"### Annual Income and Spending Score","f1db055b":"<h1>Table of Contents<span class=\"tocSkip\"><\/span><\/h1>\n<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Libraries\" data-toc-modified-id=\"Libraries-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;<\/span>Libraries<\/a><\/span><\/li><li><span><a href=\"#Functions\" data-toc-modified-id=\"Functions-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;<\/span>Functions<\/a><\/span><\/li><li><span><a href=\"#EDA\" data-toc-modified-id=\"EDA-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;<\/span>EDA<\/a><\/span><\/li><li><span><a href=\"#Training-KMeans\" data-toc-modified-id=\"Training-KMeans-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;<\/span>Training KMeans<\/a><\/span><ul class=\"toc-item\"><li><span><a href=\"#Age-and-Spending-Score\" data-toc-modified-id=\"Age-and-Spending-Score-4.1\"><span class=\"toc-item-num\">4.1&nbsp;&nbsp;<\/span>Age and Spending Score<\/a><\/span><\/li><li><span><a href=\"#Annual-Income-and-Spending-Score\" data-toc-modified-id=\"Annual-Income-and-Spending-Score-4.2\"><span class=\"toc-item-num\">4.2&nbsp;&nbsp;<\/span>Annual Income and Spending Score<\/a><\/span><\/li><\/ul><\/li><\/ul><\/div>","0c599e4b":"### Age and Spending Score","39f97a7b":"## Libraries","58c8c8d4":"Here we have analysis between Annual Income and Spending Score. There is 5 differente group, each one with specific characteristics.\n\nThere are costumers with high, medium and low annual income and with high, medium and low spending score. For each one, the administrators could plan different actions.","af222b3b":"## Functions","4a0f58fb":"Let's create a age category for future analysis.","09da998b":"## Training KMeans","53744f9e":"**Analysis:**\nNow we have 4 different clusters grouped by `Age` and `Spending Score`.\n\n* **Group 1: Yellow** - Here we have customers with low score no matter the age. For this group, maybe the mall adminstrators have develop a different strategy including effective marketing action and a different approach to give a new perspective for these costumers. So the score could be raised for higher levels.\n* **Group 2: Purple** - This group identifies young and adult costumers (age < 40) with medium scores (between 35 and 75). To raise the Spending Score of this group, maybe would be good to create new actions for young public like games, customized products and others.\n* **Group 3: Orange** - These costumers have age greater than 40 and medium score. Similar to group 2, for raising the score of group 3 the mall administrators could improve actions for adult and senior public like calm places inside the mall, new restaurants, typical food, and others.\n* **Group 4: Dark Blue** - These are costumers with the highest Spending Score. The actions of mall administrators should be planned to maintain this group with high scores. The challenge is to understand what are the most important mall features for them and improve it.","6eb8693d":"**Conclusions:**\nThe analysis shows there is low score concentration in male gender (between 0 and 25 score points). In female gender, we have high concentration in ranges between 75 and 100 compared to male gender. In general, women have higher Spending Score than men.\n\nIn other hand, the Annual Income distribution shows that in general, men have higher annunal income than women. These two analysi together could give good insights for mall administrators."}}