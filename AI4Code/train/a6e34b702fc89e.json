{"cell_type":{"5c999ebd":"code","692a5064":"code","edd24334":"code","4209b888":"code","9344eca4":"code","a3ec9633":"code","39954d1a":"code","95e2ea52":"code","d72bbd0d":"code","d05aa86e":"code","23783730":"code","81839e87":"code","beddbf28":"code","0e783863":"code","9eef7cc9":"code","7e4cba79":"code","4f5cfb89":"code","1e35bbb7":"code","e8a9e7f0":"code","2971b60f":"code","eccd8fd3":"code","6afda69d":"code","966c2542":"code","bde233b1":"code","9a570f10":"code","afefbd08":"code","2d9928d0":"code","061d1f4b":"code","f7144034":"code","bdb60760":"code","2c782e78":"code","064a6dd3":"code","8e4a531a":"code","1a87ad6a":"code","7a184325":"code","76f71257":"code","2b77f096":"code","9250ce81":"code","82280361":"code","18ddc691":"code","2fa648c7":"markdown","c731e1a6":"markdown","0c11f083":"markdown","6b562c4e":"markdown","0b36be24":"markdown","3f9d0bc7":"markdown","e2e82bbf":"markdown","cd07111a":"markdown","b5f72452":"markdown","cf92ac54":"markdown","d2a8702c":"markdown","3d32cc86":"markdown","d2aec239":"markdown","dc9746c8":"markdown","d30147ef":"markdown","1de18f17":"markdown","6c9a592b":"markdown","d09eb6c1":"markdown"},"source":{"5c999ebd":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nfrom pathlib import Path\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.graph_objects as go # Candlesticks\n\n\nfrom datetime import datetime # timestamp support\n","692a5064":"data_dir = Path('..\/input\/g-research-crypto-forecasting')\n!ls $data_dir","edd24334":"# https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition?scriptVersionId=78721864&cellId=35\nimport time\n\n# auxiliary function, from datetime to timestamp\ntotimestamp = lambda s: np.int32(time.mktime(datetime.strptime(s, \"%d\/%m\/%Y\").timetuple()))","4209b888":"totimestamp(\"1\/1\/2018\")","9344eca4":"%%time\n\nimport datatable as dt\n\ndt = dt.fread(data_dir \/ \"train.csv\")","a3ec9633":"dt","39954d1a":"%%time\ndtype={'Asset_ID': 'int8', 'Count': 'int32', 'row_id': 'int32', 'Count': 'int32',\n       'Open': 'float32', 'High': 'float32', 'Low': 'float32', 'Close': 'float32',\n       'Volume': 'float32', 'VWAP': 'float32'}\n\n# train_df = pd.read_csv('..\/input\/g-research-crypto-forecasting\/train.csv', low_memory=False, parse_dates=['date'], dtype=dtype)\ntrain_df = pd.read_csv( data_dir \/ \"train.csv\", low_memory=False, parse_dates=True)","95e2ea52":"train_df.info()","d72bbd0d":"asset_details = pd.read_csv(data_dir \/ \"asset_details.csv\")\nasset_details","d05aa86e":"bitcoin = train_df[train_df[\"Asset_ID\"] == 1]\nbitcoin.head(3)","23783730":"bitcoin.head()","81839e87":"train_df.loc[train_df.High < 14052.3 , \"timestamp\"] # ['timestamp'] #.fromtimestamp(timestamp).strftime(\"%d\/%m\/%y\")","beddbf28":"train_df.loc[2, 'timestamp']","0e783863":"datetime.fromtimestamp(train_df.loc[2, 'timestamp']).strftime(\"%d\/%m\/%Y %H:%M:%S\") # ","9eef7cc9":"bitcoin.iloc[2] # ['timestamp'] #.fromtimestamp(timestamp).strftime(\"%d\/%m\/%y\")","7e4cba79":"bitcoin.loc[2,'timestamp'] #.fromtimestamp(timestamp).strftime(\"%d\/%m\/%y\")","4f5cfb89":"totimestamp(\"1\/1\/2018\")","1e35bbb7":"bitcoin_2021 = bitcoin.loc[totimestamp('01\/06\/2021'):totimestamp('01\/07\/2021')]\nbitcoin_2020 = bitcoin.loc[totimestamp('01\/01\/2020'):totimestamp('01\/01\/2021')]\n","e8a9e7f0":"bitcoin_2020","2971b60f":"# datetime.fromtimestamp(btc2017.index[1].timestamp).strftime(\"%d\/%m\/%y\")","eccd8fd3":"bitcoin = bitcoin.set_index(\"timestamp\")\nbitcoin_last7 = bitcoin.iloc[-7:]\nbitcoin_last30 = bitcoin.iloc[-30:]\nbitcoin_last200 = bitcoin.iloc[-200:]","6afda69d":"bitcoin_last7","966c2542":"print(f\"{bitcoin_last7.iloc[0]['Open']}, {bitcoin_last7.iloc[0]['Close']}\")","bde233b1":"# bitcoin_last7.index[0].fromtimestamp(timestamp).strftime(\"%d\/%m\/%y\")","9a570f10":"# fromtimestamp(timestamp).strftime(\"%d\/%m\/%y\")","afefbd08":"datetime.fromtimestamp(train_df.loc[2, 'timestamp']).strftime(\"%d\/%m\/%Y %H:%M:%S\")","2d9928d0":"bitcoin.index","061d1f4b":"bitcoin_last7.reset_index(inplace=True)","f7144034":"bitcoin_last7","bdb60760":"bitcoin_last7['Date'] = bitcoin_last7.loc[:,'timestamp'].apply(datetime.fromtimestamp)\nbitcoin_last7","2c782e78":"# datetime.fromtimestamp(bitcoin_last7.timestamp).strftime(\"%d\/%m\/%Y %H:%M:%S\")","064a6dd3":"# bitcoin_last7['date'] = datetime.fromtimestamp(bitcoin_last7.timestamp).strftime(\"%d\/%m\/%Y %H:%M:%S\")\n# bitcoin_last7.head()","8e4a531a":"fig = go.Figure(data=[go.Candlestick(x = bitcoin_last7.Date, \n                                     open=bitcoin_last7['Open'],\n                                     high=bitcoin_last7['High'], \n                                     low=bitcoin_last7['Low'], \n                                     close=bitcoin_last7['Close'])])\nfig.show()","1a87ad6a":"fig = go.Figure(data=[go.Candlestick(x=bitcoin_last30.index, \n                                     open=bitcoin_last30['Open'],\n                                     high=bitcoin_last30['High'], \n                                     low=bitcoin_last30['Low'], \n                                     close=bitcoin_last30['Close'])])\nfig.show()","7a184325":"bitcoin.index[0].astype('datetime64[s]')","76f71257":"begin_bitcoin = bitcoin.index[0].astype('datetime64[s]')\nend_bitcoin = bitcoin.index[-1].astype('datetime64[s]')\n\nprint('Bitcoin data goes from ', begin_bitcoin, 'to ', end_bitcoin)","2b77f096":"bitcoin_last30.Close.plot();","9250ce81":"# parse_dates=[['Date','Time']]\nplt.figure(figsize=(12,8))\nplt.plot(bitcoin_last30.Low)\nplt.plot(bitcoin_last30.High)\nplt.xlim([0,0.5])\n# xlim(0,0.5)\nplt.show()","82280361":" ohlc = go.Figure(data = [go.Ohlc(x=bitcoin_last7.index, \n                                               open = bitcoin_last7[('Open')], \n                                               high = bitcoin_last7[('High')], \n                                               low = bitcoin_last7[('Low')], \n                                               close = bitcoin_last7[('Close')])])\nohlc.update_xaxes(title_text = 'Time',\n                             rangeslider_visible = False)","18ddc691":"# f = plt.figure(figsize=(7,8))\n\n# ax = f.add_subplot(211)\n# plt.plot(btc_mini_2021['Close'], label='btc')\n# plt.legend()\n# plt.xlabel('Time')\n# plt.ylabel('Bitcoin Close')\n\n# ax2 = f.add_subplot(212)\n# ax2.plot(eth_mini_2021['Close'], color='red', label='eth')\n# plt.legend()\n# plt.xlabel('Time')\n# plt.ylabel('Ethereum Close')\n\n# plt.tight_layout()\n# plt.show()","2fa648c7":"## Example of How to Use Method","c731e1a6":"<a id=\"configuration\"><\/a>\n\n# **<span style=\"color:#d5a500;\">Configuration<\/span>**","0c11f083":"# Unix Date Format Conversion\n\n- https:\/\/stackoverflow.com\/questions\/3682748\/converting-unix-timestamp-string-to-readable-date","6b562c4e":"## Load with Pandas","0b36be24":"# Get 2017 Bitcoin Data","3f9d0bc7":"# Crypto Playground\n\nThe notebook where I learn crypto, time series, technical analysis, etc and develop my initial models.\n\n<a id=\"toc\"><\/a>\n\n# Table of Contents\n\n- [Import Libraries](#import-libraries)\n- [Configuration](#configuration)\n- [Load Data](#load-data)\n- [Missing Values](#missing-values)\n- [Summary Statistics](#summary-statistics)\n\n\n\n# Sources\n\n1. [Crypto Prediction: Technical Analysis Features](https:\/\/www.kaggle.com\/yamqwe\/crypto-prediction-technical-analysis-features)\n2. [Tutorial to the G-Research Crypto Competition](https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition) - The Starter Notebook\n3. [volatility plots](https:\/\/www.kaggle.com\/pashadude\/volatility-plots)\n4. [G-Research - Plotly\/Cufflinks Interactive Plots](https:\/\/www.kaggle.com\/dschettler8845\/g-research-plotly-cufflinks-interactive-plots)\n5. [Feature Engineering: Rolling Aggregations](https:\/\/www.kaggle.com\/yamqwe\/feature-engineering-rolling-aggregations\/notebook)\n6. [PurgedGroupTimeSeries CV with Extra Data | NN](https:\/\/www.kaggle.com\/yamqwe\/purgedgrouptimeseries-cv-with-extra-data-nn)\n7. [Crypto Prediction: XGB Regressor](https:\/\/www.kaggle.com\/yamqwe\/crypto-prediction-xgb-regressor)\n8. [\ud83d\udcb2 G-Research Plots + EDA \ud83d\udcb2](https:\/\/www.kaggle.com\/odins0n\/g-research-plots-eda)\n9. [Crypto Forecasting - Intro EDA](https:\/\/www.kaggle.com\/lucasmorin\/crypto-forecasting-intro-eda)\n10. [Simple Exploration Notebook - Crypto Forecasting](https:\/\/www.kaggle.com\/sudalairajkumar\/simple-exploration-notebook-crypto-forecasting)\n\n# Time Series Tutorials\n\n- https:\/\/www.kaggle.com\/iamleonie\/time-series-interpreting-acf-and-pacf\n- https:\/\/www.kaggle.com\/iamleonie\/intro-to-time-series-forecasting","e2e82bbf":"# Date and Time Utilities","cd07111a":"<a id=\"import-libraries\"><\/a>\n\n# **<span style=\"color:#d5a500;\">Import Libraries<\/span>**\n\n - [TOC](#toc)","b5f72452":"# Technical Analysis\n\nTraditional Stock Trading Analysis applied to Crypto\n\n- MACD\n- Moving Average\n  - SMA\n  - 50 Day MA\n  - 200 Day MA\n- Volatility (Variance)\n  - Bollinger Bands- Bollinger Bands\n- Momentum Indicators\n  - Momentum Rate Of Change (ROCMomentum Rate Of Change (ROC\n  - RSI- RSI\n  - Stochastic Oscillator MomentumStochastic Oscillator Momentum","cf92ac54":"# Working with Bitcoin","d2a8702c":"# Candlestick Charts\n\n## References\n\n- https:\/\/www.investopedia.com\/trading\/candlestick-charting-what-is-it\/\n- https:\/\/www.investopedia.com\/articles\/active-trading\/092315\/5-most-powerful-candlestick-patterns.asp\n- https:\/\/en.wikipedia.org\/wiki\/Candlestick_pattern","3d32cc86":"## totimestamp()\n\n- https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition?scriptVersionId=78721864&cellId=35","d2aec239":"# Last 7 Dates","dc9746c8":"# Last 30 Dates","d30147ef":"<a id=\"load-data\"><\/a>\n\n# **<span style=\"color:#d5a500;\">Load Data<\/span>**","1de18f17":"## Datatable\n\nLoads the data faster but I'm not familar with it so I'm still doing to use Pandas too.","6c9a592b":"# Asset Details","d09eb6c1":"# Open\/High\/Low\/Close Chart"}}