{"cell_type":{"3582f5be":"code","c02feea2":"code","837c4659":"code","611932c2":"code","d22f38fa":"code","b7f53d80":"code","6a2611b1":"code","44f60cd9":"code","6f91e9e4":"code","27dac360":"code","a971f0d0":"code","4f7ec400":"code","07b74760":"code","966f7300":"code","146f44d7":"code","af5dcdc1":"code","4c892941":"code","2967a387":"code","bf84198c":"code","95de1b42":"code","96a74cab":"code","ac6f6664":"code","03de8085":"code","0fae6fe2":"code","f991d63d":"markdown"},"source":{"3582f5be":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport cv2\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing.image import load_img, img_to_array\nfrom tensorflow.python.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import classification_report, log_loss, accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom tqdm import tqdm\nimport random","c02feea2":"data_dir = '..\/input\/vehicle-images-dataset\/vehicle_images\/vehicle_images'","837c4659":"data0=pd.read_csv('..\/input\/vehicle-images-dataset\/vehcle_img_data.csv')\ndata0","611932c2":"Name=data0['Model'].unique().tolist()\nprint(Name[0:10])\nprint(len(Name))","d22f38fa":"N=list(range(len(Name)))\nnormal_mapping=dict(zip(Name,N)) \nreverse_mapping=dict(zip(N,Name)) ","b7f53d80":"data1=data0[['Image_Path','Model']]\ndata1['Model']=data1['Model'].map(normal_mapping)\ndata1","6a2611b1":"image=cv2.imread('..\/input\/vehicle-images-dataset\/vehicle_images\/vehicle_images\/1633889154186_Toyota Hilux 2006 for sale.jpg')\nprint(image.shape)\nimage2=cv2.resize(image,dsize=(48,36),interpolation=cv2.INTER_CUBIC)\nprint(image2.shape)\nplt.imshow(image2)","44f60cd9":"dataX=[]\ndataY0=[]\nfor i in range(len(data1)):\n    path=data1.loc[i,'Image_Path']\n    model=data1.loc[i,'Model']\n    image=cv2.imread('..\/input\/vehicle-images-dataset\/vehicle_images'+path)\n    image2=cv2.resize(image,dsize=(48,36),interpolation=cv2.INTER_CUBIC)\n    dataX+=[image2]\n    dataY0+=[model]","6f91e9e4":"dataX=np.array(dataX)\ndataY0=np.array(dataY0)","27dac360":"m=len(dataX)\nM=list(range(m))\nrandom.seed(2021)\nrandom.shuffle(M)","a971f0d0":"trainX=dataX[M[0:(m\/\/4)*3]]\ntrainY0=dataY0[M[0:(m\/\/4)*3]]\ntestX=dataX[M[(m\/\/4)*3:]]\ntestY0=dataY0[M[(m\/\/4)*3:]]","4f7ec400":"labels1=to_categorical(trainY0)\ntrainY=np.array(labels1)","07b74760":"trainx,testx,trainy,testy=train_test_split(trainX,trainY,test_size=0.2,random_state=44)","966f7300":"print(trainx.shape)\nprint(testx.shape)\nprint(trainy.shape)\nprint(testy.shape)","146f44d7":"pretrained_model3 = tf.keras.applications.DenseNet201(input_shape=(36,48,3),include_top=False,weights='imagenet',pooling='avg')\npretrained_model3.trainable = False","af5dcdc1":"inputs3 = pretrained_model3.input\nx3 = tf.keras.layers.Dense(128, activation='relu')(pretrained_model3.output)\noutputs3 = tf.keras.layers.Dense(len(Name), activation='softmax')(x3)\nmodel = tf.keras.Model(inputs=inputs3, outputs=outputs3)","4c892941":"model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])","2967a387":"his=model.fit(trainx,trainy,batch_size=32,validation_data=(testx,testy),epochs=200)\n#his=model.fit(datagen.flow(trainx,trainy,batch_size=32),validation_data=(testx,testy),epochs=2)","bf84198c":"y_pred=model.predict(testx)\npred=np.argmax(y_pred,axis=1)\nground = np.argmax(testy,axis=1)\nprint(classification_report(ground,pred))","95de1b42":"get_acc = his.history['accuracy']\nvalue_acc = his.history['val_accuracy']\nget_loss = his.history['loss']\nvalidation_loss = his.history['val_loss']\n\nepochs = range(len(get_acc))\nplt.plot(epochs, get_acc, 'r', label='Accuracy of Training data')\nplt.plot(epochs, value_acc, 'b', label='Accuracy of Validation data')\nplt.title('Training vs validation accuracy')\nplt.legend(loc=0)\nplt.figure()\nplt.show()","96a74cab":"epochs = range(len(get_loss))\nplt.plot(epochs, get_loss, 'r', label='Loss of Training data')\nplt.plot(epochs, validation_loss, 'b', label='Loss of Validation data')\nplt.title('Training vs validation loss')\nplt.legend(loc=0)\nplt.figure()\nplt.show()","ac6f6664":"pred2=model.predict(testX)\nprint(pred2.shape)\n\nPRED=[]\nfor item in pred2:\n    value2=np.argmax(item)      \n    PRED+=[value2]\nprint(pd.Series(PRED).value_counts())","03de8085":"ANS=testY0\nprint(pd.Series(ANS).value_counts())\naccuracy=accuracy_score(ANS,PRED)\nprint(accuracy)","0fae6fe2":"fig, axs = plt.subplots(3,3,figsize=(12,12))\nfor i in range(9):\n    r=i\/\/3\n    c=i%3\n    img1 = testX[i]\n    ax=axs[r][c].axis(\"off\")\n    actual=reverse_mapping[testY0[i]]\n    predict=reverse_mapping[PRED[i]]    \n    ax=axs[r][c].set_title(actual+'=='+predict)\n    ax=axs[r][c].imshow(img1)\nplt.show()","f991d63d":"datagen = ImageDataGenerator(horizontal_flip=True,vertical_flip=True,rotation_range=20,zoom_range=0.2,\n                        width_shift_range=0.2,height_shift_range=0.2,shear_range=0.1,fill_mode=\"nearest\")"}}