{"cell_type":{"f866e34c":"code","c36264b3":"code","59bceb0a":"code","6b849266":"code","06f43076":"code","c98df7c0":"code","bf736761":"code","7e071434":"code","0ef7ecc3":"code","8c3dd7ee":"code","cb8eae1f":"code","0f0b5a5e":"markdown"},"source":{"f866e34c":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c36264b3":"train_data = pd.read_csv(\"\/kaggle\/input\/titanic\/train.csv\")\ntest_data = pd.read_csv(\"\/kaggle\/input\/titanic\/test.csv\")","59bceb0a":"train_data.head()","6b849266":"test_data.head()","06f43076":"train_data.info()","c98df7c0":"test_data.info()","bf736761":"# Check for Missing Values\ntrain_data.isnull().sum()","7e071434":"test_data.isnull().sum()","0ef7ecc3":"ytest = pd.read_csv(\"\/kaggle\/input\/titanic\/gender_submission.csv\")\ny_test = ytest[\"Survived\"]","8c3dd7ee":"import sklearn.metrics as metrics\n\ncm = metrics.confusion_matrix(y_test, predictions)\ncm","cb8eae1f":"# Show the Accuracy, Precision, Recall\nacc = metrics.accuracy_score(y_test, predictions)\nprec = metrics.precision_score(y_test, predictions)\nrec = metrics.recall_score(y_test, predictions)\nf1 = metrics.f1_score(y_test, predictions)\nkappa = metrics.cohen_kappa_score(y_test, predictions)\nprint(\"Accuracy:\", acc)\nprint(\"Precision:\", prec)\nprint(\"Recall:\", rec)\nprint(\"F1 Score:\", f1)\nprint(\"Cohens Kappa Score:\", kappa)","0f0b5a5e":"Missing value: Age, Cabin, Fare"}}