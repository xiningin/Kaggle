{"cell_type":{"d50143c9":"code","c470cc3b":"code","2eeb64ea":"code","68b5b72d":"code","7e9ebd55":"code","6c9f281f":"code","0a701366":"code","9ddeb7e5":"code","4acbee3f":"code","7d1267b9":"code","6aadeb5b":"code","0166fb8d":"code","c6b12e2f":"code","1443364c":"code","b84b3e9f":"code","68b53c53":"code","6b4f8153":"code","81143ab6":"code","e7865801":"code","406b8e5e":"code","0541bd54":"code","3272f638":"code","a9829dcc":"code","b08058fe":"code","a92572a7":"code","289fe0a8":"code","85f0f49c":"code","20bdec8c":"code","83b58bcc":"code","4da83322":"code","29ff5111":"code","e652c3ab":"code","19809ca4":"code","8f3427f6":"code","0fc3a194":"code","3b81a156":"code","3fec277e":"code","a9edf254":"code","91ed0bc6":"code","209a1f49":"code","67781037":"code","59150d9a":"markdown","a978b807":"markdown","92afebd5":"markdown","acda0e47":"markdown","782b08c5":"markdown","091922dc":"markdown","bd021185":"markdown","54bcb3c7":"markdown","8507626c":"markdown","945f54eb":"markdown","75eb5b38":"markdown","7423d789":"markdown","b5f9c436":"markdown","107f9e82":"markdown","e8a092a1":"markdown"},"source":{"d50143c9":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.style.use('ggplot')\nprint(os.listdir(\"..\/input\"))\n%matplotlib inline","c470cc3b":"team_df = pd.read_csv('..\/input\/team_info.csv')","2eeb64ea":"team_df.head()","68b5b72d":"#game_df.head()","7e9ebd55":"\"\"\"\nAdd home and away team names.\n\"\"\"\ngame_df = pd.read_csv('..\/input\/game.csv')\ngame_df = game_df.merge(team_df[['team_id', 'teamName']],\n              left_on='home_team_id', right_on='team_id') \\\n    .merge(team_df[['team_id', 'teamName']], left_on='away_team_id',\n           right_on='team_id', suffixes=('home','away'))","6c9f281f":"game_df.head()","0a701366":"game_df[['away_goals','home_goals']].plot(kind='hist', figsize=(15,5), bins=10, alpha=0.5, title='Distribution of Home vs. Away Goals')","9ddeb7e5":"game_df.groupby('teamNamehome').mean()['home_goals'] \\\n    .sort_values() \\\n    .plot(kind='barh', figsize=(15, 8), title='Average Goals Scored in Home Games')\nplt.show()\ngame_df.groupby('teamNameaway').mean()['away_goals'] \\\n    .sort_values() \\\n    .plot(kind='barh', figsize=(15, 8), title='Average Goals Scored in Away Games')\nplt.show()","4acbee3f":"game_df.groupby('teamNamehome').mean()['away_goals'] \\\n    .sort_values() \\\n    .plot(kind='barh', figsize=(15, 8), title='Average Goals Allowed in Home Games')\nplt.show()\ngame_df.groupby('teamNameaway').mean()['home_goals'] \\\n    .sort_values() \\\n    .plot(kind='barh', figsize=(15, 8), title='Average Goals Allowed in Away Games')\nplt.show()","7d1267b9":"game_df['point_diff'] = game_df['home_goals'] - game_df['away_goals']","6aadeb5b":"game_df['point_diff'].plot(kind='hist',\n                           bins=18,\n                           title='NHL Point Differential (Negative Home team Loses, Positive Home team Wins)',\n                           xlim=(-10,10))","0166fb8d":"#Biggest Blowout was by 10 points\ngame_df['point_diff'].abs().max()","c6b12e2f":"# Blowout game:\ngame_df.loc[game_df['point_diff'] == 10]","1443364c":"game_df['point_diff_type'] = game_df['point_diff'].abs().apply(lambda x: 'Blowout' if x>=3 else ('Normal' if x>=2 else 'Tight'))","b84b3e9f":"# Create one dataframe with the point \npoint_diff_team = pd.concat([game_df[['teamNamehome','point_diff_type','point_diff','date_time']].rename(columns={'teamNamehome':'team'}),\n    game_df[['teamNameaway','point_diff_type','point_diff','date_time']].rename(columns={'teamNameaway':'team'})])","68b53c53":"point_diff_team['date_time'] = pd.to_datetime(point_diff_team['date_time'])","6b4f8153":"for team, data in point_diff_team.groupby('team'):\n    data.groupby(data['date_time'].dt.year).mean()['point_diff'].plot(kind='line', title='{} Average Point Diff By Year'.format(team), figsize=(15,2))\n    plt.show()","81143ab6":"team_stats_df = pd.read_csv('..\/input\/game_teams_stats.csv')","e7865801":"team_stats_df.head()","406b8e5e":"team_stats_df.describe()","0541bd54":"team_stats_df.columns","3272f638":"team_stats_df.corr()","a9829dcc":"f,ax = plt.subplots(figsize=(20,20))\nsns.heatmap(team_stats_df.corr(), annot = True,linewidths=.2, fmt='.1f', ax=ax)","b08058fe":"sns.distplot(team_stats_df['shots'])","a92572a7":"sns.distplot(team_stats_df['goals'])","289fe0a8":"#make the 'won' column data binary\nteam_stats_df['won'] = team_stats_df['won']*1\n\nteam_stats_df = pd.concat([team_stats_df, pd.get_dummies(team_stats_df.HoA).rename(columns = '{}_binary'.format)],axis = 1)\nteam_stats_df = pd.concat([team_stats_df, pd.get_dummies(team_stats_df.settled_in).rename(columns = '{}_binary'.format)],axis = 1)\ndf_clean = team_stats_df.drop(['game_id','team_id','HoA','settled_in','head_coach','away_binary','OT_binary','SO_binary'], axis=1)\ndf_clean.head()","85f0f49c":"sns.pairplot(df_clean, hue='won')","20bdec8c":"from sklearn.preprocessing import StandardScaler","83b58bcc":"scaler = StandardScaler()\nscaler.fit(df_clean.drop('won',axis=1))\nscaled_features = scaler.transform(df_clean.drop('won',axis=1))\ndf_feat = pd.DataFrame(scaled_features,columns=df_clean.columns[1:])\ndf_feat.head()","4da83322":"from sklearn.model_selection import train_test_split","29ff5111":"X = df_feat\ny = df_clean['won']\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","e652c3ab":"from sklearn.neighbors import KNeighborsClassifier","19809ca4":"knn = KNeighborsClassifier(n_neighbors=1)","8f3427f6":"knn.fit(X_train,y_train)","0fc3a194":"pred = knn.predict(X_test)","3b81a156":"from sklearn.metrics import classification_report,confusion_matrix","3fec277e":"print(confusion_matrix(y_test,pred))","a9edf254":"print(classification_report(y_test,pred))","91ed0bc6":"error_rate = []\n\nfor i in range(1,40):\n    knn = KNeighborsClassifier(n_neighbors=i)\n    knn.fit(X_train,y_train)\n    pred_i = knn.predict(X_test)\n    error_rate.append(np.mean(pred_i != y_test))","209a1f49":"plt.figure(figsize=(10,6))\nplt.plot(range(1,40),error_rate,color='blue',linestyle='dashed',marker='o',markerfacecolor='red',markersize=10)\nplt.title('Error Rate vs K Value')\nplt.xlabel('K')\nplt.ylabel('Error Rate')","67781037":"knn = KNeighborsClassifier(n_neighbors=20)\nknn.fit(X_train,y_train)\npred = knn.predict(X_test)\n\nprint(confusion_matrix(y_test,pred))\nprint('\\n')\nprint(classification_report(y_test,pred))","59150d9a":"# Average Goals Allowed per Team","a978b807":"# Choosing a K Value","92afebd5":"# Train Test Split","acda0e47":"# K = 20","782b08c5":"Lets define game types as:\n- Blowout (abs point diff >= 3 points)\n- Normal Game (win > 2 points)\n- Tight Game (win by 1 point)","091922dc":"# K Nearest Neighbors","bd021185":"# Predictions and Evaluations","54bcb3c7":"# Using KNN","8507626c":"# Average Goals per Team\n","945f54eb":"# TODO\n- Better metrics\n- Figure out how to make plot colors = team colors\n- More fun stuff\n\nGO WINGS!","75eb5b38":"# Biggest Blowout","7423d789":"Ouch that was a blowout. \nHere are the video highlights in case you were wondering how it happened: https:\/\/www.nhl.com\/bluejackets\/video\/recap-mtl-0-cbj-10\/t-283041746\/c-46026003","b5f9c436":"# Distribution of Point Differential\n\nHow much do teams usually win\/lose by? Point differential is computed as:\n`point_diff` = `home team goals` - `away team goals`","107f9e82":"# Standardize the Variables","e8a092a1":"# Distribution of Goals\nThe distribution of home goals had a higher mean than away goals. \"Home ice advantage?\""}}