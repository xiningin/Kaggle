{"cell_type":{"3272fd28":"code","4348d081":"code","a63f184a":"code","9a2e74e0":"code","feee2354":"code","ff05dd92":"code","d62ca319":"code","76eccd3d":"code","1a995019":"code","9e828d9c":"code","2a21476f":"code","8c50941b":"code","acbc68b2":"code","c1bd0e61":"code","b7a6dcc3":"code","839118f6":"code","5d52c4e3":"code","da71d4bb":"code","d24d5091":"code","1d157893":"code","91d68530":"code","ea4ecd1f":"code","fb97862f":"code","2922134c":"code","c45ec6de":"code","40109633":"code","e0932552":"markdown","cf5baa72":"markdown","30dd0090":"markdown","05aa813d":"markdown","c77e23ec":"markdown","658588c2":"markdown","21425a55":"markdown","a0261e96":"markdown","d6bba6f0":"markdown","eed2140f":"markdown","31f838f5":"markdown","036f1a51":"markdown","995f45a5":"markdown","652f6efa":"markdown","8202add6":"markdown","2a1e8893":"markdown","f21d1b9d":"markdown","4100d447":"markdown","ab3c717f":"markdown","3b7e2fbe":"markdown","015c0343":"markdown","0d3cf9ba":"markdown","86b13d3b":"markdown","81c3fb52":"markdown"},"source":{"3272fd28":"import pandas as pd\nimport numpy as np \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport warnings\nwarnings.filterwarnings('ignore')","4348d081":"iris = pd.read_csv(\"..\/input\/iris-flower-dataset\/IRIS.csv\")","a63f184a":"iris.head(5)","9a2e74e0":"iris.tail(5)","feee2354":"iris.shape","ff05dd92":"iris.info()","d62ca319":"iris['species'].value_counts()","76eccd3d":"sns.countplot('species',data=iris)\nplt.show()","1a995019":"sns.FacetGrid(iris,hue=\"species\",height=5).map(sns.distplot,\"petal_length\").add_legend();","9e828d9c":"sns.FacetGrid(iris,hue=\"species\",height=5).map(sns.distplot,\"petal_width\").add_legend();","2a21476f":"sns.FacetGrid(iris,hue=\"species\",height=5).map(sns.distplot,\"sepal_length\").add_legend();","8c50941b":"sns.FacetGrid(iris,hue=\"species\",height=5).map(sns.distplot,\"sepal_width\").add_legend();","acbc68b2":"plt.figure(figsize=(7,7))\nsns.set_style('whitegrid')\nsns.scatterplot(x=iris['sepal_length'], y=iris['sepal_width'], hue=iris['species'], palette=['green','orange','dodgerblue'])","c1bd0e61":"plt.figure(figsize=(7,5))\nsns.set_style('whitegrid')\nsns.scatterplot(x=iris['petal_length'], y=iris['petal_width'], hue=iris['species'], palette=['green','orange','dodgerblue'])","b7a6dcc3":"plt.figure(figsize=(7,7))\nsns.set_style('whitegrid')\nsns.pairplot(data=iris, hue='species', palette=['green','orange','dodgerblue'])","839118f6":"x = iris.drop(['species'],axis=1)\ny = iris.species","5d52c4e3":"iris.describe()","da71d4bb":"from sklearn.preprocessing import StandardScaler\nx = StandardScaler().fit_transform(x)","d24d5091":"from sklearn.cluster import KMeans\nwcss = []\n\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\n    kmeans.fit(x)\n    wcss.append(kmeans.inertia_)","1d157893":"plt.plot(range(1, 11), wcss)\nplt.title('The elbow method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show()","91d68530":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', max_iter = 300, n_init = 10, random_state = 0)\ny_kmeans = kmeans.fit_predict(x)","ea4ecd1f":"y_kmeans","fb97862f":"centroids=kmeans.cluster_centers_\ncentroids","2922134c":"iris1=iris.copy()\niris1[\"species\"]=iris1[\"species\"].map({'Iris-versicolor':0,'Iris-setosa':1,'Iris-virginica':2}).astype(int)\niris1.head()","c45ec6de":"plt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 70, label = 'Iris-setosa')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 70, label = 'Iris-versicolour')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 70, label = 'Iris-virginica')\n\n#Plotting the centroids of the clusters\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 70, c = 'black', label = 'Centroids')\n\nplt.legend()","40109633":"fig = plt.figure(figsize = (10,10))\nax = fig.add_subplot(111, projection='3d')\nplt.scatter(x[y_kmeans == 0, 0], x[y_kmeans == 0, 1], s = 100, label = 'Iris-setosa')\nplt.scatter(x[y_kmeans == 1, 0], x[y_kmeans == 1, 1], s = 100, label = 'Iris-versicolour')\nplt.scatter(x[y_kmeans == 2, 0], x[y_kmeans == 2, 1], s = 100, label = 'Iris-virginica')\n\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], s = 70, c = 'black', label = 'Centroids')\nplt.show()","e0932552":"**Finding the shape of data. Total no of rows and columns.**","cf5baa72":"**From above plot, we see that on the basis of sepal width all species are tight overlapping**","30dd0090":"# Iris Information\n\nIris is a genus of 260\u2013300 species of flowering plants with showy flowers. It takes its name from the Greek word for a rainbow, which is also the name for the Greek goddess of the rainbow, Iris. Iris is also widely used as a common name for all Iris species, as well as some belonging to other closely related genera. Iris is extensively grown as ornamental plant in home and botanical gardens. The Iris flowers color ranges from white, pink, orange, purple, lavender.","05aa813d":"**From above plot, we see that on the basis of petal length setosa is separable while the other two are overlapping**","c77e23ec":"**Since the data set is equally balanced, we got the equal no of counts**","658588c2":"**Load the important required libraries**","21425a55":"**From above plot we can see that,**\n\n1. In case of sepal length & sepal width, setosa is easily seperable but versicolor & virginica have some overlap.\n2. In case of petal length & petal width, all the species are quite seperable. And the useful features to distinguish flower types.","a0261e96":"**Describing the data set**","d6bba6f0":"**From above plot, we see that on the basis of petal width setosa is separable while the other two are overlapping**","eed2140f":"**Load the dataset now**","31f838f5":"**From above plot using sepal length and sepal width, the setosa variety is easily distinguishable. The versicolor and virginica are overlapping, so harder to distinguish.**","036f1a51":"There are almost 300 different species of Iris has been already discoverd, for our Data Science purpose we are going to make EDA for following 3 different Iris species:\n\n* Setosa\n* Versicolor\n* Virginica\n\nThe flowers are classified by the features\n\n* sepal lenght in cm\n* sepal width in cm\n* petal lenth in cm\n* petal lenght in cm\n\n![](https:\/\/miro.medium.com\/max\/3500\/1*f6KbPXwksAliMIsibFyGJw.png)\n![](https:\/\/content.codecademy.com\/programs\/machine-learning\/k-means\/iris.svg)","995f45a5":"**Modelling with K-Means Clustering**","652f6efa":"**We can see here iris data set is a balanced dataset. The Iris dataset consists of 150 data instances. There are 3 classes(Features) - Iris Setosa,Iris Versicolor and Iris Virginica, each have 50 instances.**","8202add6":"**The above method is the implementation of \"The Elbow Method\". The elbow method shows us to pick optimum no of clusters for classification. Also, the plot clearly shows why it is called \"The elbow method\".**\n\n**The optimum clusters is where the elbow curve happens. This is when the within cluster sum of squares (WCSS) doesn't decrease significantly with every iteration. In above graph, clusters = k =3.**\n\n**Now that we have the optimum amount of clusters, we can move on to applying K-means clustering to the Iris dataset.**","2a1e8893":"**From above plot, we see that on the basis of sepal length all species are overlapping**","f21d1b9d":"**Let us start with our work on Iris Dataset**","4100d447":"**From above plot using sepal length and sepal width, the setosa variety is easily distinguishable. The versicolor and virginica are overlapping, so harder to distinguish.**","ab3c717f":"**Finding information of the data with data types, columns and null values**","3b7e2fbe":"**Scaling the Data**","015c0343":"**Applying K-Means Clustering**","0d3cf9ba":"**In iris data set, 4 features are there , sepal length, sepal width, petal length, and petal width and one label (species).**\n\n**Also, there no null values in the data set so we can go ahead**","86b13d3b":"**Checking first 5 and last 5 records from the datasets**","81c3fb52":"**Let's check count for each species**"}}