{"cell_type":{"72dcfb87":"code","34ca5257":"code","01c022c4":"code","cb707dd3":"code","dc841afa":"code","fe96e6cf":"code","2ac37278":"code","eedfd617":"code","a71a8685":"code","e79158a1":"code","75bd9163":"code","d6bba522":"code","d0128ea0":"code","28060c63":"code","7322c32e":"code","8dcd7ec2":"code","dfe98f20":"code","42eaabd3":"code","ff8d3cf9":"code","47fd059b":"code","d29dd5fd":"code","9211b537":"code","c2359238":"code","09cac7e9":"code","f851a62b":"code","02125a53":"code","e2e054bb":"code","1a4000d0":"code","ac3f42ef":"code","7d82a08c":"code","5a66b4bd":"code","92e5221d":"code","bb0b57c0":"code","8d082e3d":"code","e255ebde":"markdown"},"source":{"72dcfb87":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","34ca5257":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndf = pd.read_csv('\/kaggle\/input\/car-price-prediction\/CarPrice_Assignment.csv')\ndf.head(5)","01c022c4":"df.info()","cb707dd3":"df.describe()","dc841afa":"sns.barplot(x ='fuelsystem',y ='price',data= df)\ndf.fuelsystem.unique()\nm = { 'mpfi':0,'2bbl':1, 'mfi':2, '1bbl':3, 'spfi':4, '4bbl':5, 'idi':6, 'spdi':7\n    }\ndf['fuelsystem'] = df['fuelsystem'].map(m)\n","fe96e6cf":"# these information place a vital role in the price of the car ,which is categorical now: so need to convert to integer\n# mapping need to be done\n# find which is most relevent\nsns.barplot(x ='fueltype',y ='price',data= df)\ndf.fueltype.unique()\nm = { 'gas':1,'diesel':2}\ndf['fueltype'] = df['fueltype'].map(m)\n","2ac37278":"sns.barplot(x ='enginelocation',y ='price',data= df)\ndf.enginelocation.unique()\nm = { 'front':1,'rear':2}\ndf['enginelocation'] = df['enginelocation'].map(m)\n","eedfd617":"sns.barplot(x ='aspiration',y ='price',data= df)\ndf.aspiration.unique()\nm = { 'std':1,'turbo':2}\ndf['aspiration'] = df['aspiration'].map(m)","a71a8685":"sns.barplot(x ='drivewheel',y ='price',data= df)\ndf.drivewheel.unique()\nm = { 'rwd':0,'fwd':1,'4wd':2}\ndf['drivewheel'] = df['drivewheel'].map(m)","e79158a1":"sns.barplot(x ='carbody',y ='price',data= df)\ndf.carbody.unique()\nm = { 'convertible':0,'hatchback':1,'sedan':2,'wagon':3,'hardtop':4,}\ndf['carbody'] = df['carbody'].map(m)","75bd9163":"sns.barplot(x ='enginetype',y ='price',data= df)\ndf.enginetype.unique()\n\nm = { 'dohc':0,'ohcv':1,'ohc':2,'l':3,'rotor':4,'ohcf':5,'dohcv':6}\ndf['enginetype'] = df['enginetype'].map(m)","d6bba522":"\n\nsns.barplot(x ='cylindernumber',y ='price',data= df)\n\ndf.cylindernumber.unique()\n\nm = { 'four':4,'six':6,'five':5,'three':3,'twelve':12,'two':2,'eight':8}\ndf['cylindernumber'] = df['cylindernumber'].map(m)","d0128ea0":"#find the corrrelation among int values\ndf.drop(['car_ID','symboling'],axis =1).corr()","28060c63":"sns.heatmap(df.drop(['car_ID','symboling'],axis =1).corr())","7322c32e":"# so most relevent thing from the above graph: \n#'carlength', 'carwidth', 'curbweight', 'enginetype','cylindernumber', 'enginesize', 'fuelsystem', 'boreratio','horsepower\n\n","8dcd7ec2":"sns.pairplot(df,x_vars =['wheelbase','enginelocation',\n       'carlength', 'carwidth', 'curbweight',\n       'cylindernumber', 'enginesize',\n       'compressionratio', 'horsepower'],y_vars ='price',kind='reg')","dfe98f20":"df.info()","42eaabd3":"\ndf.columns","ff8d3cf9":"X = df[['fueltype', 'aspiration', 'carbody', 'drivewheel', 'enginelocation', 'wheelbase',\n       'carlength', 'carwidth', 'carheight', 'curbweight', 'enginetype',\n       'cylindernumber', 'enginesize', 'fuelsystem', 'boreratio','horsepower']]\ny=df['price']","47fd059b":"from sklearn.model_selection import train_test_split\n\n# create training and testing vars\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5,random_state=101)\nprint (X_train.shape, y_train.shape)\nprint (X_test.shape, y_test.shape)","d29dd5fd":"from sklearn.linear_model import LinearRegression\nlm =LinearRegression()\nlm.fit(X_train,y_train)","9211b537":"#intercept:\nlm.intercept_","c2359238":"#coefficients\nprint('coefficients :',lm.coef_)\ncar_coeff =  pd.DataFrame(lm.coef_,X_test.columns,columns=['co-effi'])\n\ncar_coeff","09cac7e9":"# Train set score\nlm.score(X_train,y_train)","f851a62b":"# Test set score\nlm.score(X_test,y_test)","02125a53":"y_pre = lm.predict(X_test)\nplt.scatter(y_test,y_pre)","e2e054bb":"# prediction score : \nlm.score(X_test,y_pre)","1a4000d0":"sns.distplot(y_test-y_pre,bins =25)","ac3f42ef":"sns.distplot(y_pre)","7d82a08c":"from sklearn import metrics\n\nmetrics.r2_score(y_test,y_pre)","5a66b4bd":"metrics.explained_variance_score(y_test,y_pre)","92e5221d":"print('MAE :',metrics.mean_absolute_error(y_test,y_pre))\nprint('MSE :',metrics.mean_squared_error(y_test,y_pre))\nprint('RMSE :',np.sqrt(metrics.mean_squared_error(y_test,y_pre)))\n","bb0b57c0":"price_table = X_test.copy()\nprice_table ['Actual'] =y_test\nprice_table ['predicted'] =y_pre\nprice_table.head(100)","8d082e3d":"sns.lmplot('Actual','predicted',data = price_table)","e255ebde":"[****] Train Test Split"}}