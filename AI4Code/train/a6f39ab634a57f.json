{"cell_type":{"38706040":"code","8552d133":"code","b26f588a":"code","6f0edf76":"code","0feff7b4":"code","618b4583":"code","16d3ffc5":"code","923edd9b":"code","4f3cbd18":"code","7d4ed961":"code","b32a71b0":"markdown","2d8da58d":"markdown"},"source":{"38706040":"import numpy as np\nimport pandas as pd\nimport os","8552d133":"sub_path = \"..\/input\/topmysubmission\/\"\nall_files = os.listdir(sub_path)","b26f588a":"all_files","6f0edf76":"# from IPython.display import display\n# for f in all_files:\n#     display(pd.read_csv(sub_path+f).head())","0feff7b4":"# outs = [pd.read_csv(os.path.join(sub_path, f), index_col=0) for f in all_files if '.csv' in f and '_me' in f]\nouts = [pd.read_csv(os.path.join(sub_path, f), index_col=0) for f in all_files if '.csv' in f]\n\nconcat_sub = pd.concat(outs, axis=1)\ncols = list(map(lambda x: \"target\" + str(x), range(len(concat_sub.columns))))\nconcat_sub.columns = cols\nconcat_sub.reset_index(inplace=True)\nconcat_sub.head()\nncol = concat_sub.shape[1]","618b4583":"# get the data fields ready for stacking\nconcat_sub['target_mean'] = concat_sub.iloc[:, 1:ncol].mean(axis=1)\nconcat_sub['target_median'] = concat_sub.iloc[:, 1:ncol].median(axis=1)","16d3ffc5":"concat_sub.describe()","923edd9b":"concat_sub['target'] = concat_sub['target_mean']\n# concat_sub[['image_name', 'target']].to_csv('submission_mean.csv', \n#                                         index=False, float_format='%.6f')","4f3cbd18":"# concat_sub['target'] = concat_sub['target_median']\n# concat_sub[['image_name', 'target']].to_csv('submission_median.csv', \n#                                         index=False, float_format='%.6f')","7d4ed961":"# loading recently created .csv files from working directory\neff = pd.read_csv('..\/input\/topmysubmission\/submission (9) - 9507.csv')\nmeta = pd.read_csv('..\/input\/analysis-of-melanoma-metadata-and-effnet-ensemble\/meta_simplified_img_data.csv')\nsample = pd.read_csv('..\/input\/siim-isic-melanoma-classification\/sample_submission.csv')\n\n\nsample['target'] = (\n                           \n                           eff['target'] * 0.9 +\n                           meta['target'] * 0.1 \n                          \n                          )\n\n# final submissions\n\nsample.to_csv('fin_submission.csv', header=True, index=False)","b32a71b0":"Credit to origin author for MinMaxBestBaseStacking (https:\/\/github.com\/QuantScientist\/Deep-Learning-Boot-Camp\/blob\/master\/Kaggle-PyTorch\/PyTorch-Ensembler\/utils.py)\n\n","2d8da58d":"## Data if Kagging"}}