{"cell_type":{"47a6fc50":"code","366f0dd7":"code","57015040":"code","8b221bc2":"code","c51870ee":"code","b3c8870e":"code","6afc3874":"code","da17c72a":"code","53084931":"code","cac5354a":"code","7b5d076c":"code","72cf3520":"code","1b827ccd":"code","5f063f53":"code","440054b7":"code","1e8195b8":"code","8c974900":"code","ec01a48d":"code","0559f4b5":"markdown"},"source":{"47a6fc50":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n# path = \"..\/input\/\"\n%matplotlib inline\n\n# Any results you write to the current directory are saved as output\n!pip install fastai -U\n# !pip install fastai==1.0.46 --force-reinstall\n","366f0dd7":"!pip list\n","57015040":"import torch\nimport fastai\n\nfrom fastai import *\nfrom fastai.vision import *\n\nprint(torch.__version__)\nprint(fastai.__version__)\n\nprint(torch.cuda.is_available())\nprint(torch.backends.cudnn.enabled)","8b221bc2":"!pip install torch -U","c51870ee":"!pip install torchvision -U","b3c8870e":"path = untar_data(URLs.DOGS)\npath","6afc3874":"data = ImageDataBunch.from_folder(path, bs=16, ds_tfms=get_transforms(), size=224).normalize(imagenet_stats)\ndata.show_batch(rows=3)","da17c72a":"len(data.train_ds)","53084931":"len(data.valid_ds)","cac5354a":"learner = create_cnn(data, models.resnet34, metrics=accuracy).to_fp16()","7b5d076c":"learner.fit_one_cycle(1)","72cf3520":"learner.unfreeze()\nlearner.fit_one_cycle(1, slice(1e-5,3e-4), pct_start=0.05)","1b827ccd":"learner.to_fp32()","5f063f53":"accuracy(*learner.TTA())","440054b7":"preds, y, losses = learner.get_preds(with_loss=True)","1e8195b8":"interp = ClassificationInterpretation(learner, preds, y, losses)\ninterp.most_confused()","8c974900":"interp.plot_confusion_matrix()","ec01a48d":"interp.plot_top_losses(9, figsize=(7,7))","0559f4b5":"Need to switch back to fp32 for TTA because torch.stack doesn't yet work with FP16. GitHub issue [here.](https:\/\/github.com\/fastai\/fastai\/issues\/1203)"}}