{"cell_type":{"f0b9f71f":"code","bcf5ca85":"code","78ef4298":"code","bece17d9":"code","1ea0f131":"code","311fa13c":"code","269f6668":"code","b3d57744":"code","6f8db6cc":"code","7ce75f7e":"code","7883188d":"code","9e8b0e51":"code","86f448a9":"code","d1d10dc0":"code","0e8a4bb4":"code","dac261ee":"code","dc856542":"code","e03d3a7c":"code","0d2b618d":"code","c0c0055b":"code","7520998b":"code","75f18baf":"code","13e6e43c":"code","1ffb5f2e":"code","216c295e":"code","5a9eee2c":"code","631b4b64":"code","968f1fe4":"code","09df02cd":"code","2b3adc28":"code","0ae38aff":"code","3d934c2c":"markdown","daaf6e2b":"markdown","d7841d6b":"markdown","6e6e89e9":"markdown","97cee6d4":"markdown","17859d89":"markdown","9a8e6472":"markdown","923cdd9a":"markdown","6e264cc1":"markdown","eec2c153":"markdown","a6ddf282":"markdown","57495fd0":"markdown","d9613382":"markdown","1668797d":"markdown","9f15a50b":"markdown","6a02eabf":"markdown","9da4e021":"markdown","acf4e4b3":"markdown","a399d7da":"markdown","787d64c1":"markdown","954c5b9e":"markdown","5ca8a8b2":"markdown","a79cc77f":"markdown","38207f10":"markdown","4241400d":"markdown","6f258351":"markdown","ba9dc714":"markdown","7f6199f8":"markdown","f237512b":"markdown","ca95feb4":"markdown","10421921":"markdown","9acdc359":"markdown","2a0875ea":"markdown","d07522dd":"markdown","07ff4ce1":"markdown","3644deb1":"markdown","58566d6b":"markdown"},"source":{"f0b9f71f":"!pip install stac.py","bcf5ca85":"import stac","78ef4298":"stac.__version__","bece17d9":"service = stac.STAC('https:\/\/brazildatacube.dpi.inpe.br\/stac\/', access_token='change-me')","1ea0f131":"service","311fa13c":"service.collections","269f6668":"collection = service.collection('CB4_64_16D_STK-1')\ncollection","b3d57744":"collection.get_items()","6f8db6cc":"items = collection.get_items(\n            filter={\n                'bbox':'-46.62597656250001,-13.19716452328198,-45.03570556640626,-12.297068292853805',\n                'datetime':'2018-08-01\/2019-07-31',\n                'limit':10\n            }\n)\nitems","7ce75f7e":"for item in items:\n    print(item.id)","7883188d":"item = items.features[0]\n\nitem.id","9e8b0e51":"assets = item.assets","86f448a9":"for k in assets.keys():\n    print(k)","d1d10dc0":"blue_asset = assets['BAND13']\n\nblue_asset","0e8a4bb4":"for asset in assets.values():\n    print(asset)","dac261ee":"import os\ndel os.environ['PROJ_LIB']","dc856542":"nir = item.read('BAND16')","e03d3a7c":"nir","0d2b618d":"from rasterio.windows import Window","c0c0055b":"red = item.read('BAND15', window=Window(0, 0, 500, 500)) # Window(col_off, row_off, width, height)","7520998b":"green = item.read('BAND14', window=Window(0, 0, 500, 500))","75f18baf":"blue = item.read('BAND13', window=Window(0, 0, 500, 500))","13e6e43c":"blue","1ffb5f2e":"%matplotlib inline\nfrom matplotlib import pyplot as plt","216c295e":"fig, (ax1, ax2, ax3) = plt.subplots(1,3, figsize=(12, 4))\nax1.imshow(red, cmap='gray')\nax2.imshow(green, cmap='gray')\nax3.imshow(blue, cmap='gray')","5a9eee2c":"import numpy","631b4b64":"def normalize(array):\n    \"\"\"Normalizes numpy arrays into scale 0.0 - 1.0\"\"\"\n    array_min, array_max = array.min(), array.max()\n    return ((array - array_min)\/(array_max - array_min))","968f1fe4":"rgb = numpy.dstack((normalize(red), normalize(green), normalize(blue)))\n\nplt.imshow(rgb)","09df02cd":"blue_asset.download('img')","2b3adc28":"item.download('images')","0ae38aff":"blue_asset.href","3d934c2c":"From the item collection retrieved with the `get_item` method, it is possible to traverse the list of items:","daaf6e2b":"# Retrieving Image Files\n<hr style=\"border:1px solid #0077b9;\">","d7841d6b":"The file related to an asset can be retrieved through the `download` method. The cell code below shows ho to download the image file associated to the asset into a folder named `img`:","6e6e89e9":"# Retrieving the Metadata of a Data Product\n<hr style=\"border:1px solid #0077b9;\">","97cee6d4":"The [**S**patio**T**emporal **A**sset **C**atalog (STAC)](https:\/\/stacspec.org\/) is a specification created through the colaboration of several organizations intended to increase satellite image search interoperability.\n\nThe diagram depicted in the picture contains the most important concepts behind the STAC data model:\n\n<center>\n<img src=\"https:\/\/raw.githubusercontent.com\/brazil-data-cube\/code-gallery\/master\/img\/stac\/stac-model.png\" width=\"480\" \/>\n<br\/>\n<b>Figure 1<\/b> - STAC model.\n<\/center>\n\nThe description of the concepts below are adapted from the [STAC Specification](https:\/\/github.com\/radiantearth\/stac-spec):\n\n- **Item**: a `STAC Item` is the atomic unit of metadata in STAC, providing links to the actual `assets` (including thumbnails) that they represent. It is a `GeoJSON Feature` with additional fields for things like time, links to related entities and mainly to the assets. According to the specification, this is the atomic unit that describes the data to be discovered in a `STAC Catalog` or `Collection`.\n\n- **Asset**: a `spatiotemporal asset` is any file that represents information about the earth captured in a certain space and time.\n\n\n- **Catalog**: provides a structure to link various `STAC Items` together or even to other `STAC Catalogs` or `Collections`.\n\n\n- **Collection:** is a specialization of the `Catalog` that allows additional information about a spatio-temporal collection of data.","17859d89":"Then, create a `STAC` object attached to the Brazil Data Cube' STAC service:","9a8e6472":"# Listing the Available Data Products\n<hr style=\"border:1px solid #0077b9;\">","923cdd9a":"In order to download all files related to an item, use the `Item.download` method:","6e264cc1":"or, it is possible to use the index operador (`[]`) with the ``features`` property in order to retrieve a specific item from the collection:","eec2c153":"The metadata related to the CBERS-4\/AWFI blue band is available under the dictionary key `BAND13`:","a6ddf282":"# STAC Client API\n<hr style=\"border:1px solid #0077b9;\">\n\nFor running the examples in this Jupyter Notebook you will need to install the [STAC client for Python](https:\/\/github.com\/brazil-data-cube\/stac.py). To install it from PyPI using `pip`, use the following command:","57495fd0":"The `collection` method returns information about a given image or data cube collection identified by its name. In this example we are retrieving information about the datacube collection `CB4_64_16D_STK-1`:","d9613382":"After that, you can check the installed `stac` package version:","1668797d":"- [Spatio Temporal Asset Catalog Specification](https:\/\/stacspec.org\/)\n\n\n- [Brazil Data Cube Python Client Library for STAC Service - GitHub Repository](https:\/\/github.com\/brazil-data-cube\/stac.py)","9f15a50b":"To iterate in the item's assets, use the following pattern:","6a02eabf":"The `Matplotlib` cab be used to plot the arrays read in the last section:","9da4e021":"# Using Matplotlib to Visualize Images\n<hr style=\"border:1px solid #0077b9;\">","acf4e4b3":"The assets with the links to the images, thumbnails or specific metadata files, can be accessed through the property `assets` (from a given item):","a399d7da":"# See also the following Jupyter Notebooks\n<hr style=\"border:1px solid #0077b9;\">\n\n* [NDVI calculation on images obtained through STAC](.\/stac-ndvi-calculation.ipynb)\n\n\n* [Thresholding images obtained through STAC](.\/stac-image-threshold.ipynb)\n\n\n* [Calculating Image Difference on images obtained through STAC](.\/stac-image-difference.ipynb)","787d64c1":"<div style=\"text-align: justify;  margin-left: 15%; margin-right: 15%; border-style: solid; border-color: #0077b9; border-width: 1px; padding: 5px;\">\n    <b>Note:<\/b> If there are errors because of your pyproj version, you can run the code below as specified in <a  href=\"https:\/\/rasterio.readthedocs.io\/en\/latest\/faq.html#why-can-t-rasterio-find-proj-db-rasterio-from-pypi-versions-1-2-0\" target=\"_blank\">rasterio documentation<\/a> and try again:\n\n       import os\n       del os.environ['PROJ_LIB']\n<\/div>","954c5b9e":"# Introduction\n<hr style=\"border:1px solid #0077b9;\">","5ca8a8b2":"Then, from the assets it is possible to traverse or access individual elements:","a79cc77f":"or, access the `collections` property:","38207f10":"Using `Numpy` we can stack the previous arrays and use `Matplotlib` to plot a color image, but first we need to normalize their values:","4241400d":"# Retrieving Collection Items\n<hr style=\"border:1px solid #0077b9;\">","6f258351":"# Using RasterIO and NumPy\n<hr style=\"border:1px solid #0077b9;\">","ba9dc714":"The `rasterio` library can be used to read image files from the Brazil Data Cube' service on-the-fly and then to create `NumPy` arrays. The `read` method of an `Item` can be used to perform the reading and array creation:","7f6199f8":"We can specify a subset of the image file (window or chunck) to be read. Let's read a range that starts on pixel (0, 0) with 500 x 500 and column 0 to column 500, for the spectral bands `red`, `green` and `blue`:","f237512b":"# Assets\n<hr style=\"border:1px solid #0077b9;\">","ca95feb4":"# References\n<hr style=\"border:1px solid #0077b9;\">","10421921":"<img src=\"https:\/\/raw.githubusercontent.com\/brazil-data-cube\/code-gallery\/master\/img\/logo-bdc.png\" align=\"right\" width=\"64\"\/>\n\n# <span style=\"color:#336699\">Introduction to the SpatioTemporal Asset Catalog (STAC)<\/span>\n<hr style=\"border:2px solid #0077b9;\">\n\n<div style=\"text-align: left;\">\n    <a href=\"https:\/\/nbviewer.jupyter.org\/github\/brazil-data-cube\/code-gallery\/blob\/master\/jupyter\/Python\/stac\/stac-introduction.ipynb\"><img src=\"https:\/\/raw.githubusercontent.com\/jupyter\/design\/master\/logos\/Badges\/nbviewer_badge.svg\" align=\"center\"\/><\/a>\n<\/div>\n\n<br\/>\n\n<div style=\"text-align: center;font-size: 90%;\">\n    Matheus Zaglia<sup><a href=\"https:\/\/orcid.org\/0000-0001-6181-2158\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>, Rennan Marujo<sup><a href=\"https:\/\/orcid.org\/0000-0002-0082-9498\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>, Gilberto R. Queiroz<sup><a href=\"https:\/\/orcid.org\/0000-0001-7534-0219\"><i class=\"fab fa-lg fa-orcid\" style=\"color: #a6ce39\"><\/i><\/a><\/sup>\n    <br\/><br\/>\n    Earth Observation and Geoinformatics Division, National Institute for Space Research (INPE)\n    <br\/>\n    Avenida dos Astronautas, 1758, Jardim da Granja, S\u00e3o Jos\u00e9 dos Campos, SP 12227-010, Brazil\n    <br\/><br\/>\n    Contact: <a href=\"mailto:brazildatacube@inpe.br\">brazildatacube@inpe.br<\/a>\n    <br\/><br\/>\n    Last Update: April 09, 2021\n<\/div>\n\n<br\/>\n\n<div style=\"text-align: justify;  margin-left: 25%; margin-right: 25%;\">\n<b>Abstract.<\/b> This Jupyter Notebook gives an overview on how to use the STAC service to discover and access the data products from the <em>Brazil Data Cube<\/em>.\n<\/div>    \n\n<br\/>\n<div style=\"text-align: justify;  margin-left: 25%; margin-right: 25%;font-size: 75%; border-style: solid; border-color: #0077b9; border-width: 1px; padding: 5px;\">\n    <b>This Jupyter Notebook is a supplement to the following paper:<\/b>\n    <div style=\"margin-left: 10px; margin-right: 10px\">\n    Zaglia, M.; Vinhas, L.; Queiroz, G. R.; Sim\u00f5es, R. <a href=\"http:\/\/urlib.net\/rep\/8JMKD3MGPDW34R\/3UFEFD8\" target=\"_blank\">Cataloga\u00e7\u00e3o de Metadados do Cubo de Dados do Brasil com o SpatioTemporal Asset Catalog<\/a>. In: Proceedings XX GEOINFO, November 11-13, 2019, S\u00e3o Jos\u00e9 dos Campos, SP, Brazil. p 280-285.\n    <\/div>\n<\/div>","9acdc359":"The next cell code import the `Window` class from the `rasterio` library in order to retrieve a subset of an image and then create an array:","2a0875ea":"Note that the URL for a given asset can be retrieved by the property `href`:","d07522dd":"The `get_items` method returns the items of a given collection:","07ff4ce1":"The `get_items` method also supports filtering rules through the specification of a rectangle (`bbox`) or a date and time (`datatime`) criterias:","3644deb1":"In order to access the funcionalities of the client API, you should import the `stac` package, as follows:","58566d6b":"In the Jupyter environment, the `STAC` object will list the available image and data cube collections from the service:"}}