{"cell_type":{"60c10e54":"code","775ec947":"code","681d9e78":"code","2a5089c8":"code","b9ea674c":"code","63f7bc8a":"code","d36ab257":"code","4cd2be24":"code","bfd0889d":"code","a7beceb4":"code","02d354bb":"code","0c1d7c02":"code","16ded4f8":"code","badb5868":"code","cb80b0ca":"code","c0c387a6":"code","ad7e99fd":"code","65b4c824":"code","ad1b86cc":"code","cd3685ce":"code","80f608d4":"code","031b4102":"code","74f41dde":"code","9337395d":"code","5a5c7b93":"code","6be4464e":"code","50d5942a":"markdown","70b9aa0f":"markdown","3751582e":"markdown","e536d610":"markdown","5a4fe41c":"markdown","f99b270f":"markdown","1a6da987":"markdown","3a32de37":"markdown","2e5b7b0d":"markdown","63a7d413":"markdown","2965bcc3":"markdown","224fed26":"markdown","3a8e2a47":"markdown","9b595866":"markdown","dd26c16c":"markdown","8ab6ec5e":"markdown","88354028":"markdown","ccd351c4":"markdown"},"source":{"60c10e54":"library(fst)\nlibrary(data.table)\nlibrary(tidyverse)\noptions(scipen=999)","775ec947":"aday <- fread('DATA\/CSV\/Datathon_Aday.csv')\nbasvuru <- fread('DATA\/CSV\/Datathon_Basvuru.csv')\nilan <- fread('DATA\/CSV\/Datathon_ilan.csv')\ntecrube <- fread('DATA\/CSV\/Datathon_Tecrube.csv')\nyetenek <- fread('DATA\/CSV\/Datathon_Yetenek.csv')\ntest <- fread('DATA\/CSV\/test.csv')","681d9e78":"aday %>% write.fst('DATA\/FST\/aday.fst')\nbasvuru %>% write.fst('DATA\/FST\/basvuru.fst')\nilan %>% write.fst('DATA\/FST\/ilan.fst')\ntecrube %>% write.fst('DATA\/FST\/tecrube.fst')\nyetenek %>% write.fst('DATA\/FST\/yetenek.fst')\ntest %>% write.fst('DATA\/FST\/test.fst')","2a5089c8":"rm(list = ls())","b9ea674c":"is.null.string <- function(x){\n    x=='NULL'\n}\n\nmode <-function(x){\n    xtab<-table(x)\n    modes<-xtab[max(xtab)==xtab]\n    mag<-as.numeric(modes[1])\n    themodes<-names(modes)\n    mout<-list(themodes=themodes,modeval=mag)\n    return(mout$themodes)\n}","63f7bc8a":"tecrube %>%\nmutate(Aciklama=ifelse(Aciklama=='NULL','BOS',Aciklama)) %>%\nmutate(CalismaAyi=as.numeric(CalismaAyi)) %>%\nmutate(Staj=ifelse(grepl('taj',PozisyonAdi),1,0)) %>%\nmutate(AyrildigiYil=as.numeric(AyrildigiYil)) %>%\nmutate(AyrildigiYil=ifelse(AyrildigiYil==0,Inf,AyrildigiYil)) %>%\ngroup_by(AdayId) %>%\narrange(AyrildigiYil,.by_group = T) %>%\nfilter_if(~is.character(.), all_vars(!is.null.string(.))) %>%\nsummarise(EnSektor=mode(SektorAdi),\n          SonBirakmaYili=max(AyrildigiYil,na.rm=T),\n          StajYuzde=sum(Staj*CalismaAyi)\/sum(CalismaAyi),\n          CalismaAyi=sum(CalismaAyi,na.rm = T),\n          Aciklama=tolower(Aciklama) %>%paste(collapse=' ')) %>%\nungroup %>%\ngroup_by(AdayId) %>%\nmutate(sira=1:n()) %>%\nfilter(sira==max(sira)) %>%\nas.data.table %>%\nselect(-sira) %>%\nwrite.fst('DATA\/MANIPULATED_FST\/tecrube_summarised2.fst')","d36ab257":"read.fst('DATA\/MANIPULATED_FST\/tecrube_summarised2.fst',from = 18,to =20) %>%\nmutate(Aciklama=strtrim(Aciklama,width = 200) %>% paste0('...'))","4cd2be24":"yetenek %>%\ngroup_by(AdayId) %>%\nsummarise(YetenekSayisi=n(),Yetenekler=tolower(paste0(Yetenek,collapse = ',')),.groups='drop') %>%\nas.data.table%>%\nwrite.fst('DATA\/MANIPULATED_FST\/yetenek_summarised2.fst')","bfd0889d":"read.fst('DATA\/MANIPULATED_FST\/yetenek_summarised2.fst',from = 1,to = 3)","a7beceb4":"aday %>%\nmutate(BitisYili=as.numeric(BitisYili)) %>%\nmutate(BitisYili=ifelse(is.na(BitisYili),0,BitisYili)) %>%\ngroup_by(AdayId) %>%\narrange(BitisYili,.by_group = T) %>%\nmutate(OkulSayisi=n()) %>%\nungroup %>%\ngroup_by(AdayId) %>%\nmutate(sira=1:n()) %>%\nfilter(sira==max(sira)) %>%\nungroup %>%\nselect(-sira) %>%\nas.data.table %>%\nwrite.fst('DATA\/MANIPULATED_FST\/aday_summarised.fst')","02d354bb":"read.fst('DATA\/MANIPULATED_FST\/aday_summarised.fst',from = 1,to = 3)","0c1d7c02":"ilan%>%\ngroup_by(IlanId) %>%\nmutate(sira=1:n()) %>%\nfilter(sira==max(sira)) %>%\nselect(-sira) %>%\nsummarise(Ilan=tolower(ilanMetni),IlanKonum=lokasyon,SektorAdi=sektorAdi,PozisyonAdi=pozisyonAdi) %>%\nas.data.table %>%\nwrite.fst('DATA\/MANIPULATED_FST\/ilan_summarised2.fst')","16ded4f8":"read.fst('DATA\/MANIPULATED_FST\/ilan_summarised2.fst',from=1,to = 3) %>%\nmutate(Ilan=strtrim(Ilan,200) %>% paste0('...'))","badb5868":"library(RecordLinkage)\nlibrary(tidymodels)","cb80b0ca":"IRdisplay::display_png(file = 'DATA\/lev.png')","c0c387a6":"aday_nitelik <- read.fst('DATA\/MANIPULATED_FST\/aday_summarised.fst',as.data.table=T)\naday_tecrube <- read.fst('DATA\/MANIPULATED_FST\/tecrube_summarised2.fst',as.data.table=T)\naday_yetenek <- read.fst('DATA\/MANIPULATED_FST\/yetenek_summarised2.fst',as.data.table=T)\n\naday_nitelik %>%\nfull_join(aday_tecrube,by='AdayId') %>%\nfull_join(aday_yetenek,by='AdayId') %>%\nwrite.fst('DATA\/MANIPULATED_FST\/aday_bilgileri_summarised_joint_2.fst')","ad7e99fd":"rm(list=ls())","65b4c824":"aday <- read.fst('DATA\/MANIPULATED_FST\/aday_bilgileri_summarised_joint_2.fst',as.data.table=T)\nilan <- read.fst('DATA\/MANIPULATED_FST\/ilan_summarised2.fst',as.data.table=T)\nbasvuru <- read.fst('DATA\/FST\/basvuru.fst',as.data.table=T)\n\nbasvuru %>%\nleft_join(aday,by='AdayId') %>%\nleft_join(ilan,by=c('ilanId'='IlanId')) -> aday_vs_ilan\n\nrm(list=setdiff(ls(),'aday_vs_ilan'))","ad1b86cc":"test <- read.fst('DATA\/FST\/test.fst')","cd3685ce":"aday_vs_ilan[,AdayAciklama_Ilan_Benzerlik:=levenshteinSim(Aciklama,Ilan)]","80f608d4":"ilanlar <- aday_vs_ilan %>% select(ilanId) %>% unique %>% pull","031b4102":"match <- data.table()\ncounter <- 1\nfor(i in ilanlar){\n    \ntryCatch({\n    aday_vs_ilan %>%\n    filter(ilanId==i) %>%\n    mutate(IlanAyniKonum=ifelse(SehirAdi==IlanKonum,1,0)) %>%\n    mutate(SonBirakmaYili=ifelse(is.infinite(SonBirakmaYili),2022,SonBirakmaYili)) %>%\n    mutate(OgrencilikBitis=SonBirakmaYili-BitisYili)-> sample\n\n    sample %>%\n    recipe() %>%\n    step_dummy('SehirAdi') %>% \n    step_dummy('OkulId') %>%\n    step_dummy('EnSektor') %>%\n    step_dummy('Tip') %>%\n    step_dummy('BolumAdi') %>%\n    prep(sample) %>%\n    bake(sample) %>%\n    select(-c(IlanKonum,SektorAdi,PozisyonAdi)) %>%\n    na.omit %>%\n    keep(is.numeric) -> sample2\n    \n    current_sample_size <- sample2 %>%nrow\n    \n    if(current_sample_size>=9){\n        \n        clusters <- kmeans(sample2,centers = 3)\n        \n        sample2 %>%\n            mutate(kumeno=clusters$cluster) -> kumeleme\n            \n            \n            kumeleme %>%\n            group_by(kumeno) %>%\n            summarise(AdayAciklama_Ilan_Benzerlik=mean(AdayAciklama_Ilan_Benzerlik)) %>%\n            ungroup %>%\n            filter(AdayAciklama_Ilan_Benzerlik==max(AdayAciklama_Ilan_Benzerlik)) %>%\n            select(kumeno) %>%\n            pull -> eslesme_kumesi\n            \n            kumeleme %>%\n            filter(kumeno==eslesme_kumesi) %>%\n            select(-c(kumeno)) -> sample3\n    \n        \n        current_sample_size <- sample3 %>%nrow\n        \n        if(current_sample_size>=9){\n            \n            clusters2 <- kmeans(sample3,centers=3)\n\n            \n            sample3 %>%\n            mutate(kumeno=clusters2$cluster) -> kumeleme2\n\n            kumeleme2 %>%\n            group_by(kumeno) %>%\n            summarise(IlanAyniKonum=mean(IlanAyniKonum,na.rm=T)) %>%\n            ungroup %>%\n            filter(IlanAyniKonum==max(IlanAyniKonum)) %>%\n            select(kumeno) %>%\n            pull -> ayni_sehir_kumesi\n\n            kumeleme2 %>%\n            filter(kumeno==ayni_sehir_kumesi) %>%\n            select(-c(kumeno)) -> sample4\n            \n            current_sample_size <- sample4 %>%nrow\n\n            \n        }\n    }\n\n    \n    if(exists('sample4')){\n        sample4 %>%\n        select(ilanId,AdayId) -> submit\n        \n        if(nrow(sample4)<5){\n            to_impute <- 5-nrow(sample4)\n            doldurma <- sample3 %>% anti_join(sample4)\n            doldurma2 <- doldurma[sample(1:nrow(doldurma),to_impute),]\n            doldurma3 <- doldurma %>% select(ilanId,AdayId)\n            submit <- rbind(submit,doldurma3)\n        }\n    }else if(exists('sample3')){\n        sample3 %>%\n        select(ilanId,AdayId) -> submit\n        if(nrow(sample3)<5){\n            to_impute <- 5-nrow(sample3)\n            doldurma <- sample2 %>% anti_join(sample3)\n            doldurma2 <- doldurma[sample(1:nrow(doldurma),to_impute),]\n            doldurma3 <- doldurma %>% select(ilanId,AdayId)\n            submit <- rbind(submit,doldurma3)\n        }\n    }else{\n        sample2 %>%\n        select(ilanId,AdayId) -> submit\n    }\n    \n    \n    match <- rbind(match,submit)\n    IRdisplay::display(counter)\n    counter <- counter + 1\n},\n        error=function(cond) {\n            IRdisplay::display(sprintf('%s. iterasyonda hata',i))\n        })\n    \n}","74f41dde":"set.seed(1923)\n\n\nmatch1 <- match %>% group_by(ilanId) %>% mutate(sayi=n()) %>% filter(sayi<=5) %>%ungroup %>%select(-sayi)\nmatch2 <- match %>% group_by(ilanId) %>% mutate(sayi=n()) %>% filter(sayi>5) %>%ungroup %>%select(-sayi)\n\nmatch2 %>%\ngroup_by(ilanId) %>%\nmutate(sira=1:n()) %>%\nfilter(sira %in% sample(1:n(),5,replace = F)) %>%\nungroup %>%\nselect(ilanId,AdayId) -> first_submit_2\n\nfirst_submit <- rbind(match1,first_submit_2)\n\nfirst_submit %>%\ngroup_by(ilanId) %>%summarise(n=n()) %>%select(n) %>%table","9337395d":"aday_vs_ilan2 %>%\nselect(ilanId,AdayId) %>%\ngroup_by(ilanId) %>%\nmutate(sira=1:n(),sample_size=n()) %>%ungroup -> tahminlenemeyen\n\ntahminlenemeyen%>%\ngroup_by(ilanId) %>%\nfilter(sample_size>5) %>%\nfilter(sira %in% sample(1:n(),5,replace = F)) %>%\nunique %>%\nungroup -> part_1\n\ntahminlenemeyen %>%\ngroup_by(ilanId) %>%\nfilter(sample_size<=5) %>%\nunique %>%\nungroup -> part_2\n\ntahminlenemeyen_impute <- rbind(part_1,part_2) %>%select(-c(sira,sample_size))","5a5c7b93":"test %>%\nselect(-AdayId) %>%\nleft_join(first_submit,by='ilanId') %>%\nfilter(!is.na(AdayId)) -> part_1\n\npart_2 <- test %>%\nselect(-AdayId) %>%\nleft_join(first_submit,by='ilanId') %>%\nfilter(is.na(AdayId)) %>%\nselect(-AdayId) %>%\nleft_join(tahminlenemeyen_impute,by='ilanId')\n\nsecond_submit <- rbind(part_1,part_2)","6be4464e":"second_submit %>%write.csv('SUBMIT\/11082021.csv',row.names=F)","50d5942a":"## Yetenek Verisi\n\n- Aday\u0131n toplam yetenek say\u0131s\u0131 `YetenekSayisi` s\u00fctununda toplanm\u0131\u015f\n- Yetenekler virg\u00fclle ayr\u0131k \u015fekilde tek kolona indirgenmi\u015ftir\n\nB\u00f6ylelikle bir aday i\u00e7in bir yetenek sat\u0131r\u0131 olu\u015fturulmu\u015ftur","70b9aa0f":"# Veri Dosyalar\u0131n\u0131 Serialize Etme","3751582e":"## Veri Birle\u015ftirme","e536d610":"Mod alma ve veride NULL olarak yoklu\u011fu temsil eden g\u00f6zlemlerin tespiti i\u00e7in gerekli fonksiyonlar\u0131n yaz\u0131lmas\u0131","5a4fe41c":"## CSV Okuma","f99b270f":"## \u0130lan Verisi\n\n- M\u00fckerrer ilanlar ortadan kald\u0131r\u0131l\u0131p her ilan i\u00e7in tek bir sat\u0131r olu\u015fturulmu\u015f\n- \u0130lan metni k\u00fc\u00e7\u00fck harf ile encode edilmi\u015ftir","1a6da987":"Garbage collecting","3a32de37":"## Tecr\u00fcbe Verisi\n\nOlu\u015facak join problemlerinden ka\u00e7\u0131nmak ad\u0131na her aday\u0131 temsil eden tek bir sat\u0131ra indirgemek i\u00e7in;\n\n- \u00d6ncelikle `Staj` ad\u0131nda, \u00e7al\u0131\u015f\u0131lan pozisyonun staj olup olmad\u0131\u011f\u0131n\u0131 temsil eden bir binary de\u011fi\u015fken t\u00fcretilmi\u015f\n- Aday\u0131n en fazla \u00e7al\u0131\u015ft\u0131\u011f\u0131 sekt\u00f6r `EnSektor` adl\u0131 de\u011fi\u015fkende mod al\u0131narak t\u00fcretilmi\u015f\n- Aday\u0131n i\u015ften \u00e7\u0131kt\u0131\u011f\u0131 en son y\u0131l `SonBirakmaYili` adl\u0131 de\u011fi\u015fkende g\u00f6sterilmi\u015f\n- Aday\u0131n staj s\u00fcresinin toplam \u00e7al\u0131\u015fma s\u00fcresine oran\u0131 ile `StajYuzde` de\u011fi\u015fkeni t\u00fcretilmi\u015ftir.\n- \u00c7al\u0131\u015fma aylar\u0131 toplanarak `CalismaAyi` de\u011fi\u015fkeninde \u00f6zetlenmi\u015f\n- Ve `Aciklama` s\u00fctunu k\u00fc\u00e7\u00fck harfe \u00e7evrilmi\u015ftir","2e5b7b0d":"## Gerekli Fonksiyonlar\u0131n Yaz\u0131lmas\u0131","63a7d413":"## Algoritma Ad\u0131mlar\u0131\n\n- Bir ilana ba\u015fvuran adaylar\u0131 'Euclidean Distance' benzerliklerine g\u00f6re 3 k\u00fcmeye ay\u0131r\n- K\u00fcmeler aras\u0131ndan en y\u00fcksek Levenshtein benzerli\u011fi ortalamas\u0131na sahip k\u00fcmeyi tut\n- Mevcut k\u00fcmeyi 'Euclidean Distance' benzerliklerine g\u00f6re 3 k\u00fcmeye ay\u0131r\n- K\u00fcmeler aras\u0131ndan en y\u00fcksek \u015fehir uyumu ortalamas\u0131na sahip k\u00fcmeyi tut\n- E\u011fer k\u00fcmede kalan aday say\u0131s\u0131 < 5 ise bir \u00f6nceki k\u00fcmeden dolduracak miktarda rassal aday se\u00e7\n- E\u011fer k\u00fcmede kalan aday say\u0131s\u0131 > 5 ise mevcut k\u00fcmeden 5 rassal aday se\u00e7","2965bcc3":"## Aday Verisi\n\n- Okul biti\u015f y\u0131l\u0131 `NA` adaylar modelleme a\u015famas\u0131nda problem yaratmamas\u0131 ad\u0131na 0 ile doldurulmu\u015f\n- Aday\u0131n ka\u00e7 farkl\u0131 derecede e\u011fitim g\u00f6rd\u00fc\u011f\u00fc `OkulSayisi` de\u011fi\u015fkeninde \u00f6zetlenmi\u015f\n- M\u00fckerrer aday kay\u0131tlar\u0131 ortadan kald\u0131r\u0131larak her aday i\u00e7in tek sat\u0131rl\u0131k g\u00f6zlemler kaydedilmi\u015ftir.","224fed26":"\u0130lan metni & Aday A\u00e7\u0131klamas\u0131 & Aday Yetenekleri e\u015fle\u015ftirme tabanl\u0131 bir algoritma tasarlad\u0131\u011f\u0131m i\u00e7in metin benzerli\u011fi yakla\u015f\u0131mlar\u0131ndan `Levenshtein Distance` (ya da`Levenshtein Similarity`) kulland\u0131m. \n\nBu yakla\u015f\u0131m ile iki metin aras\u0131nda bir benzerlik oran\u0131 bulunup di\u011fer g\u00f6zlemler ile k\u0131yaslama yap\u0131labilir.\n\nnot : R i\u00e7in bu hesaplama `RecordLinkage` paketi ile m\u00fcmk\u00fcnd\u00fcr","3a8e2a47":"# E\u015fle\u015ftirme Algoritmas\u0131","9b595866":"# Dikkat - Bu Notebook R Kodlar\u0131 \u0130\u00e7erir","dd26c16c":"## FST Yazma","8ab6ec5e":"## Aday & \u0130lan Verisinin Ba\u015fvuru Verisi Kullan\u0131larak Birle\u015ftirilmesi","88354028":"Bu i\u015flem veri okuma vaktinden tasarruf edilmesi ad\u0131na `fst`<sup id=\"a1\">[1](#f1)<\/sup> paketi ile yap\u0131lm\u0131\u015ft\u0131r. \n\n<b id=\"f1\">1<\/b> <a href='https:\/\/github.com\/fstpackage\/fst'>fst - github<\/a> [\u21a9](#a1)","ccd351c4":"# Veri \u00d6zetleme"}}