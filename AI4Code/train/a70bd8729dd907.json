{"cell_type":{"fe41bab4":"code","e515af9d":"code","ac0ed06c":"code","714e56fe":"code","e62d1db9":"code","d85660cb":"code","eaf13d05":"code","50e9722c":"code","e78f5789":"code","3dab2a78":"code","3ad5cb67":"code","4b81def9":"code","be32629b":"code","b51aca18":"markdown","fb59b52b":"markdown","a6baec6e":"markdown","9ea8d9fc":"markdown","24f84209":"markdown","f13b64a8":"markdown"},"source":{"fe41bab4":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.ensemble import GradientBoostingClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import AdaBoostClassifier","e515af9d":"data = pd.read_csv('..\/input\/uk-fuel-price-weekly-statistics20032020\/fuel price.csv')","ac0ed06c":"data","714e56fe":"data.info()","e62d1db9":"def preprocess_inputs(df):\n    df = df.copy()\n    \n    # Drop index column\n    df = df.drop('Unnamed: 0', axis=1)\n    \n    # Generate date columns\n    df['Date'] = pd.to_datetime(df['Date'])\n    \n    df['Year'] = df['Date'].apply(lambda x: x.year)\n    df['Month'] = df['Date'].apply(lambda x: x.month)\n    df['Day'] = df['Date'].apply(lambda x: x.day)\n    \n    df = df.drop('Date', axis=1)\n    \n    # Create labels from the Year column\n    df['Year'] = df['Year'].apply(lambda x: 1 if x >= 2012 else 0)\n    \n    # Split df into X and y\n    y = df['Year'].copy()\n    X = df.drop('Year', axis=1).copy()\n    \n    # Scale X with a standard scaler\n    scaler = StandardScaler()\n    X = pd.DataFrame(scaler.fit_transform(X), columns=X.columns)\n    \n    return X, y","d85660cb":"X, y = preprocess_inputs(data)","eaf13d05":"X","50e9722c":"y","e78f5789":"y.value_counts()","3dab2a78":"X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=123)","3ad5cb67":"models = {\n    \"   Logistic Regression\": LogisticRegression(),\n    \"Support Vector Machine\": SVC(),\n    \"         Decision Tree\": DecisionTreeClassifier(),\n    \"        Neural Network\": MLPClassifier(),\n    \"   K-Nearest Neighbors\": KNeighborsClassifier(),\n    \"     Gradient Boosting\": GradientBoostingClassifier(),\n    \"         Random Forest\": RandomForestClassifier(),\n    \"              AdaBoost\": AdaBoostClassifier()\n}","4b81def9":"for model in models.values():\n    model.fit(X_train, y_train)","be32629b":"print(\"Model Test Accuracies:\\n----------------------\")\n\nfor name, model in models.items():\n    print(name + \": {:.2f}%\".format(model.score(X_test, y_test) * 100))","b51aca18":"# Data Every Day  \n\nThis notebook is featured on Data Every Day, a YouTube series where I train models on a new dataset each day.  \n\n***\n\nCheck it out!  \nhttps:\/\/youtu.be\/8TCS3jEKS_U","fb59b52b":"# Getting Started","a6baec6e":"# Results","9ea8d9fc":"# Task for Today  \n\n***\n\n## UK Fuel Sale Year Prediction  \n\nGiven *data about fuel sales in the UK*, let's try to predict if a given sale was **made in the last nine years**.  \n  \nWe will use a variety of different models to make our predictions.","24f84209":"# Training","f13b64a8":"# Preprocessing"}}