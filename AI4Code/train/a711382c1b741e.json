{"cell_type":{"0a5957ba":"code","da4e9233":"code","32473193":"code","42681ee7":"code","a0bbb3f9":"code","6ae5d667":"code","e47167ba":"code","5a262c5c":"code","174b1cbc":"code","2390e1c8":"code","d9b6e003":"code","6de96b85":"code","008ded59":"code","888d4e34":"code","ace6530b":"code","be884c2b":"code","1d69978a":"code","af52c073":"code","eb2db683":"code","99702fec":"code","23c8a1e0":"code","33775a97":"code","69d0fa45":"markdown","03e957cf":"markdown","65d72a0f":"markdown","428460d0":"markdown","7d1d3b12":"markdown","251ee14d":"markdown","47a7a49b":"markdown","6a4fd7d1":"markdown","4fec95ba":"markdown","fd7cc35d":"markdown","4e0bfdb9":"markdown","60270e3e":"markdown","61d6d536":"markdown","26e37d40":"markdown","6c7933c0":"markdown","418ca5fe":"markdown","cc161cf4":"markdown","20bcdcfb":"markdown","dfa4ec8f":"markdown","ddfe3c11":"markdown","33061064":"markdown","23e0ed2f":"markdown"},"source":{"0a5957ba":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","da4e9233":"import matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly\nimport plotly.offline as pyo\nimport plotly.express as px\nimport plotly.graph_objs as go\npyo.init_notebook_mode()\nimport plotly.figure_factory as ff\nimport missingno as msno\nfrom collections import Counter\nfrom warnings import filterwarnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression,RidgeClassifier,SGDClassifier,PassiveAggressiveClassifier\nfrom sklearn.linear_model import Perceptron\nfrom sklearn.svm import SVC,LinearSVC,NuSVC\nfrom sklearn.neighbors import KNeighborsClassifier,NearestCentroid\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier,AdaBoostClassifier,GradientBoostingClassifier\nfrom sklearn.naive_bayes import GaussianNB,BernoulliNB\nfrom sklearn.ensemble import VotingClassifier\n\n# Evaluation & CV Libraries\nfrom sklearn.metrics import precision_score,accuracy_score\nfrom sklearn.model_selection import RandomizedSearchCV,GridSearchCV,RepeatedStratifiedKFold","32473193":"df=pd.read_csv('\/kaggle\/input\/water-potability\/water_potability.csv')","42681ee7":"df.head()","a0bbb3f9":"print(df.info())\nprint(\"*****************************************************************************************\")\nprint(df.describe())","6ae5d667":"df.Potability.value_counts()\/df.Potability.count()*100","e47167ba":"df['Potability'].replace({1:\"Yes\",0:\"No\"},inplace=True)","5a262c5c":"fig = msno.matrix(df)\ndf.isnull().sum()","174b1cbc":"d= pd.DataFrame(df['Potability'].value_counts())\nfig = px.pie(d,values='Potability',names=['Not Potable','Potable'],hole=0.4,opacity=0.6,\n            \n             labels={'label':'Potability','Potability':'No. Of Samples'})\n\nfig.add_annotation(text='Potability',\n                   x=0.5,y=0.5,showarrow=False,font_size=14,opacity=0.9,font_family='monospace')\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Distribution of target variable',x=0.47,y=0.98,\n               ),\n    legend=dict(x=0.37,y=-0.05,orientation='h',traceorder='reversed'),\n    hoverlabel=dict(bgcolor='white'))\n\nfig.update_traces(textposition='outside', textinfo='percent+label')\n\nfig.show()","2390e1c8":"fig=plt.figure(figsize=(15,15))\nfig = px.histogram(df,x='ph',y=Counter(df['ph']),color='Potability',template='plotly_white',color_discrete_sequence=['#ff6161','#28b0eb'],\n                  marginal='box',opacity=0.7,nbins=100,\n                  barmode='group',histfunc='count')\n\nfig.add_vline(x=7, line_width=1,line_dash='dot',opacity=0.7)\n\nfig.add_annotation(text='<7 is Acidic',x=4,y=70,showarrow=False,font_size=14)\nfig.add_annotation(text='>7 is Basic',x=10,y=70,showarrow=False,font_size=14)\n\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='pH Level Distribution',x=0.5,y=0.95),\n    xaxis_title_text='pH Level',\n    yaxis_title_text='Count',\n    legend=dict(x=1,y=0.96,borderwidth=0,tracegroupgap=5),\n    bargap=0.3,\n)\nfig.show()","d9b6e003":"fig=plt.figure(figsize=(15,15))\nfig = px.histogram(df,x='Sulfate',y=Counter(df['Sulfate']),color='Potability',template='plotly_white',\n                  marginal='box',opacity=0.7,nbins=100,color_discrete_sequence=['#ff6161','#28b0eb'],\n                  barmode='group',histfunc='count')\n\nfig.add_vline(x=250, line_width=1,line_dash='dot',opacity=0.7)\n\nfig.add_annotation(text='<250 mg\/L is considered<br> safe for drinking',x=175,y=90,showarrow=False)\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Sulfate Distribution',x=0.53,y=0.95\n              ),\n    xaxis_title_text='Sulfate (mg\/L)',\n    yaxis_title_text='Count',\n    legend=dict(x=1,y=0.96,borderwidth=0,tracegroupgap=5),\n    bargap=0.3,\n)\nfig.show()","6de96b85":"fig=plt.figure(figsize=(15,15))\nfig = px.histogram(df,x='Trihalomethanes',y=Counter(df['Trihalomethanes']),color='Potability',template='plotly_white',\n                  marginal='box',opacity=0.7,nbins=100,color_discrete_sequence=['#ff6161','#28b0eb'],\n                  barmode='group',histfunc='count')\n\nfig.add_vline(x=80, line_width=1,line_dash='dot',opacity=0.7)\n\nfig.add_annotation(text='Upper limit of Trihalomethanes<br> level is 80 \u03bcg\/L',x=115,y=90,showarrow=False)\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Trihalomethanes Distribution',x=0.5,y=0.95,\n              ),\n    xaxis_title_text='Trihalomethanes (\u03bcg\/L)',\n    yaxis_title_text='Count',\n    legend=dict(x=1,y=0.96,borderwidth=0,tracegroupgap=5),\n    bargap=0.3,\n)\nfig.show()","008ded59":"fig = px.histogram(df,x='Hardness',y=Counter(df['Hardness']),color='Potability',template='plotly_white',\n                  marginal='box',opacity=0.7,nbins=100,color_discrete_sequence=['#ff6161','#28b0eb'],\n                  barmode='group',histfunc='count')\n\nfig.add_vline(x=151, line_width=1,line_dash='dot',opacity=0.7)\nfig.add_vline(x=301, line_width=1,line_dash='dot',opacity=0.7)\nfig.add_vline(x=76, line_width=1,line_dash='dot',opacity=0.7)\n\nfig.add_annotation(text='<76 mg\/L is<br> considered soft',x=40,y=130,showarrow=False,font_size=12)\nfig.add_annotation(text='Between 76 and 150<br> (mg\/L) is<br>moderately hard',x=113,y=130,showarrow=False,font_size=12)\nfig.add_annotation(text='Between 151 and 300 (mg\/L)<br> is considered hard',x=250,y=130,showarrow=False,font_size=12)\nfig.add_annotation(text='>300 mg\/L is<br> considered very hard',x=340,y=130,showarrow=False,font_size=12)\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Hardness Distribution',x=0.53,y=0.95,\n              ),\n    xaxis_title_text='Hardness (mg\/L)',\n    yaxis_title_text='Count',\n    legend=dict(x=1,y=0.96,borderwidth=0,tracegroupgap=5),\n    bargap=0.3,\n)\nfig.show()","888d4e34":"fig = px.histogram(df,x='Solids',y=Counter(df['Solids']),color='Potability',template='plotly_white',\n                  marginal='box',opacity=0.7,nbins=100,color_discrete_sequence=['#ff6161','#28b0eb'],\n                  barmode='group',histfunc='count')\n\nfig.update_layout(\n    font_family='monospace',\n    title=dict(text='Distribution Of Total Dissolved Solids',x=0.5,y=0.95),\n    xaxis_title_text='Dissolved Solids (ppm)',\n    yaxis_title_text='Count',\n    legend=dict(x=1,y=0.96,borderwidth=0,tracegroupgap=5),\n    bargap=0.3,\n)\nfig.show()","ace6530b":"fig = plt.figure(figsize=(12, 9), facecolor='white')\nsns.pairplot(data=df,hue='Potability')\nplt.show()","be884c2b":"cor=df.drop('Potability',axis=1).corr()\ncor","1d69978a":"fig = px.imshow(cor,height=800,width=800,template='plotly_white')\nfig.show()","af52c073":"print(df[df['Potability']=='No'][['ph','Sulfate','Trihalomethanes']].median())\nprint('*****************************************')\nprint(df[df['Potability']=='Yes'][['ph','Sulfate','Trihalomethanes']].median())","eb2db683":"df['ph'].fillna(value=df.ph.median(),inplace=True)\ndf['Sulfate'].fillna(value=df.Sulfate.median(),inplace=True)\ndf['Trihalomethanes'].fillna(value=df.Trihalomethanes.median(),inplace=True)\nX=df.drop('Potability',axis=1).values\ny=df['Potability'].replace({\"Yes\":1,\"No\":0}).values","99702fec":"X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=27)\nscaler = StandardScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","23c8a1e0":"filterwarnings('ignore')\nmodels =[(\"LR\", LogisticRegression(max_iter=1000)),(\"SVC\", SVC()),('KNN',KNeighborsClassifier(n_neighbors=10)),\n         (\"DTC\", DecisionTreeClassifier()),(\"GNB\", GaussianNB()),\n        (\"SGDC\", SGDClassifier()),\n         ('RF',RandomForestClassifier()),('ADA',AdaBoostClassifier()),\n        ('XGB',GradientBoostingClassifier())]\n\nresults = []\nnames = []\nfinalResults = []\n\nfor name,model in models:\n    model.fit(X_train, y_train)\n    model_results = model.predict(X_test)\n    score = precision_score(y_test, model_results,average='macro')\n    results.append(score)\n    names.append(name)\n    finalResults.append((name,score))\n    \nfinalResults.sort(key=lambda k:k[1],reverse=True)","33775a97":"finalResults","69d0fa45":"# Introduction\nA basic kernel mainly focussed on data visualisations and the infereneces deduced from the plots.\n","03e957cf":"## Observations:\n1. The ph has normal distribution in cases of both portable and non portable water.\n2. For the most cases,the ph of potable water ranges between 6(slightly acidic) to 8(sligthly basic).\n3. The highest count for potable water is at ph 7(neutral) which confirms the assumption that neutral ph water is considered good for drinking.\n4. Some outliers can be for potable water data records(at ph 0 and ph 13).\n5. Median is a good alternative for the missing values.","65d72a0f":"If you find this notebook helpful in any kind then an upvote will be motivating.\nPlease comment if you found anything incorrect.\n\n\n**Thank You**","428460d0":"# Conclusion\n1. The Logistic Regression is having best accuracy of the above models.","7d1d3b12":"# Importing Dataset","251ee14d":"# Imputation(filling the missing data)","47a7a49b":"## Observations:\n1. Median is a good choice for imputation to minimise the affect of outliers.\n2. The data records of potable water having trihalomethanes more than permissible range(80microgram\/L) should be re-evaluated.","6a4fd7d1":"## Observations:\n1. The high amount of dissolved salts is the reason for increased hardness of water.","4fec95ba":"# Descriptive Statistics","fd7cc35d":"## Observations:\n1. Most of the data records for the potable water have more sulfates then the normal drinking water range.\n2. There are some cases of potable water having more than 400mg\/L of sulfate(outlier).\n3. To decrease the affect of outliers, median can be use for imputation of the missing values.\n","4e0bfdb9":"## Observations:\n1. There is not a significant correlation between any pair of features.(Not even in features like hardness and solids dissolved).","60270e3e":"## Observations:\n1. The water is hard irrespective of it being portable or not which indicates towards the high amount of calcium and magnesium present in water.","61d6d536":"## Observations:\n1. Negligible difference between the medians for the case of potable and non potable water.So the overall median of the feature can be used for imputation.","26e37d40":"# Univariate Analysis","6c7933c0":"## Observations:\n1. No significant conclusion can be inferred from any of the above plots.","418ca5fe":"# Spot Checking\nUsing different baseline models to get an overview of which works best","cc161cf4":"### Observations:\n1. The discontinuity in ph,sulfate and trihalomethanes represent the amount of data missing in each of them.","20bcdcfb":"# End Notes\n## References:\n1. **Water Quality: Analysis (Plotly) and Modelling [here](https:\/\/www.kaggle.com\/jaykumar1607\/water-quality-analysis-plotly-and-modelling)**\n\n","dfa4ec8f":"# Importing Libraries","ddfe3c11":"# Bivariate Analysis","33061064":"# Feature Description(taken from the dataset description) \n### 1. pH value:\nPH is an important parameter in evaluating the acid\u2013base balance of water. It is also the indicator of acidic or alkaline condition of water status. WHO has recommended maximum permissible limit of pH from 6.5 to 8.5. The current investigation ranges were 6.52\u20136.83 which are in the range of WHO standards.\n\n### 2. Hardness:\nHardness is mainly caused by calcium and magnesium salts. These salts are dissolved from geologic deposits through which water travels. The length of time water is in contact with hardness producing material helps determine how much hardness there is in raw water. Hardness was originally defined as the capacity of water to precipitate soap caused by Calcium and Magnesium.\n\n### 3. Solids (Total dissolved solids - TDS):\nWater has the ability to dissolve a wide range of inorganic and some organic minerals or salts such as potassium, calcium, sodium, bicarbonates, chlorides, magnesium, sulfates etc. These minerals produced un-wanted taste and diluted color in appearance of water. This is the important parameter for the use of water. The water with high TDS value indicates that water is highly mineralized. Desirable limit for TDS is 500 mg\/l and maximum limit is 1000 mg\/l which prescribed for drinking purpose.\n\n### 4. Chloramines:\nChlorine and chloramine are the major disinfectants used in public water systems. Chloramines are most commonly formed when ammonia is added to chlorine to treat drinking water. Chlorine levels up to 4 milligrams per liter (mg\/L or 4 parts per million (ppm)) are considered safe in drinking water.\n\n### 5. Sulfate:\nSulfates are naturally occurring substances that are found in minerals, soil, and rocks. They are present in ambient air, groundwater, plants, and food. The principal commercial use of sulfate is in the chemical industry. Sulfate concentration in seawater is about 2,700 milligrams per liter (mg\/L). It ranges from 3 to 30 mg\/L in most freshwater supplies, although much higher concentrations (1000 mg\/L) are found in some geographic locations.\n\n### 6. Conductivity:\nPure water is not a good conductor of electric current rather\u2019s a good insulator. Increase in ions concentration enhances the electrical conductivity of water. Generally, the amount of dissolved solids in water determines the electrical conductivity. Electrical conductivity (EC) actually measures the ionic process of a solution that enables it to transmit current. According to WHO standards, EC value should not exceeded 400 \u03bcS\/cm.\n\n### 7. Organic_carbon:\nTotal Organic Carbon (TOC) in source waters comes from decaying natural organic matter (NOM) as well as synthetic sources. TOC is a measure of the total amount of carbon in organic compounds in pure water. According to US EPA < 2 mg\/L as TOC in treated \/ drinking water, and < 4 mg\/Lit in source water which is use for treatment.\n\n### 8. Trihalomethanes:\nTHMs are chemicals which may be found in water treated with chlorine. The concentration of THMs in drinking water varies according to the level of organic material in the water, the amount of chlorine required to treat the water, and the temperature of the water that is being treated. THM levels up to 80 ppm is considered safe in drinking water.\n\n### 9. Turbidity:\nThe turbidity of water depends on the quantity of solid matter present in the suspended state. It is a measure of light emitting properties of water and the test is used to indicate the quality of waste discharge with respect to colloidal matter. The mean turbidity value obtained for Wondo Genet Campus (0.98 NTU) is lower than the WHO recommended value of 5.00 NTU.\n\n### 10. Potability:\nIndicates if water is safe for human consumption where 1 means Potable and 0 means Not potable.","23e0ed2f":"## Observations:\n1. There is not too much of a data imbalance.\n2. It can be concluded from the data that the amount of potable water is less in comparison with the not potable water.(A reminder for humans to start valuing water.)"}}