{"cell_type":{"78f4a258":"code","15957992":"code","7e631008":"code","88dea92e":"code","c763f7a5":"code","09f1507f":"code","6e999635":"code","bb311f34":"code","a5521c40":"code","23f0d470":"code","39857045":"code","af6fde41":"code","b8094d95":"code","a554c3f0":"code","cced7c0b":"code","d88ead12":"code","d0ff1b49":"code","38683b36":"code","2efa963e":"code","88251ea8":"code","2aa0a524":"code","16828683":"code","4bd677b0":"code","deea6d6a":"code","210c58cd":"code","59d718de":"code","c27d2464":"code","23d4fb27":"code","3c314589":"code","b6686c0c":"code","a4690717":"code","27e5179e":"code","31571bbf":"code","83a2123a":"code","883e79d1":"code","517409c8":"code","cff77601":"code","3a99c64f":"code","3ce9069a":"code","0dad7576":"code","ba6ee5b8":"code","fb8ef9fb":"code","a35a7c35":"code","3821b728":"code","f6025fd6":"code","8abc5ddf":"code","16854712":"code","da6561fa":"code","7b8bf3a6":"code","d3d196a1":"code","a2c8e6fc":"code","39586582":"code","9e0f00f7":"code","eb4f186b":"code","04052e70":"code","bb568b6e":"code","b7b9a324":"code","19eeef2b":"code","63f1975f":"code","d863a7e2":"code","3d103c36":"code","471a64e9":"code","cc875372":"code","ba17f713":"code","7ba784d6":"code","d67c8353":"code","a13aeace":"code","2d5c3b78":"code","69ee45d1":"code","c0e8b3be":"code","bb2f11f6":"code","f6335658":"code","faabf54f":"code","61e8d2c7":"code","2a632c84":"code","8ee85214":"code","ad782544":"code","fc4914a2":"code","c5a28422":"code","95aa047b":"code","3acb1324":"code","7c127e90":"code","f215caa4":"code","8bc32b51":"code","70e6cb19":"code","fc8a8cfa":"code","97abe444":"code","b7dcc0a6":"code","bcdaac69":"code","e074d6bb":"code","92972865":"code","f6f1cfdd":"code","63c39df6":"code","7a620c45":"code","e1cc47c3":"code","c82dd281":"code","1b73512e":"code","843f0664":"code","1ad6aef8":"code","8fb3ee39":"code","f94cd756":"code","c8e4bac4":"code","7bfd2567":"code","22458163":"code","f5964727":"code","b2a5fdd0":"code","5ac01dd3":"code","e4c6e429":"code","2b73c85f":"code","170e318f":"code","24410b66":"code","9e27f07d":"code","e44f3be1":"code","f926b777":"code","65381238":"code","c1c03daf":"code","c23bc77d":"code","618f89c4":"code","5794e4bf":"code","8c658624":"code","37916162":"code","ed1f299d":"code","1b1cf253":"code","f995e4ef":"code","220798e7":"code","b9ddd34f":"code","f2303d5d":"code","952990f7":"markdown","8837688a":"markdown","57b047a7":"markdown","b9cee051":"markdown","81d37241":"markdown","5ed8198f":"markdown","d59fefbc":"markdown","da921b2d":"markdown","1afba172":"markdown","06b0db24":"markdown","7cf0c15a":"markdown","d4a2d8be":"markdown","90a9f4e1":"markdown","203f80a5":"markdown","8754f7c2":"markdown","0925fba1":"markdown","446f7e8d":"markdown","d96934d8":"markdown","9b2fe7b5":"markdown","6cf4a7ca":"markdown","53cd97d9":"markdown","4de63349":"markdown","c7fc02a3":"markdown","e3f2c5c9":"markdown","f73ca6de":"markdown","61a61ad6":"markdown","75cace2e":"markdown","34e39139":"markdown","f80dc088":"markdown","0808d18c":"markdown","3495e7b0":"markdown","f0f1a288":"markdown","d06ac091":"markdown","5809cd89":"markdown"},"source":{"78f4a258":"# Importing required Libraries.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport missingno as msno\n\nfrom sklearn.linear_model import LinearRegression , ElasticNet , Lasso , Ridge\nfrom sklearn.preprocessing import LabelEncoder , MinMaxScaler , OneHotEncoder , PolynomialFeatures,StandardScaler\nfrom sklearn.model_selection import train_test_split , GridSearchCV\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.metrics import mean_squared_error, r2_score , make_scorer\nfrom sklearn.ensemble import AdaBoostRegressor,GradientBoostingRegressor , RandomForestRegressor\nfrom sklearn.tree import DecisionTreeRegressor\n\nimport warnings\nwarnings.filterwarnings('ignore')","15957992":"# Loading Training and Testing Dataset.\n\nnews_train=pd.read_csv(r\"C:\\\\Users\\drvcp\\Documents\\GOURI\\PGDDS\\Assignment\\News Popularity Kaggle\\train.csv\")\nnews_test=pd.read_csv(r\"C:\\\\Users\\drvcp\\Documents\\GOURI\\PGDDS\\Assignment\\News Popularity Kaggle\\test.csv\")\npd.options.display.max_columns = None\npd.options.display.min_rows= None","7e631008":"# Checking data shape.\n\nnews_train.shape , news_test.shape","88dea92e":"# Checking training data set.\n\nnews_train.head()","c763f7a5":"# Understanding the training data set. Checking Null Count and Data type.\n\nnews_train.info()","09f1507f":"# 'url' is a non-predictor, hence removed from data. \n\nnews_train=news_train.drop(columns= 'url' , axis = 1)\nnews_test=news_test.drop(columns='url' , axis=1)","6e999635":"# setting 'id' as index. \n\nnews_train=news_train.set_index('id')","bb311f34":"# Understanding data description - 5 point summary.\n\nnews_train.describe()","a5521c40":"# Checking distribution of data w.r.t structure of the article like Words in title, words in content, rate of unique word etc. \n\nnum_val=['n_tokens_title' , 'n_tokens_content','n_unique_tokens' , 'n_non_stop_words' , 'n_non_stop_unique_tokens', \n         'num_hrefs' , 'num_self_hrefs' , 'num_imgs' , 'num_videos','average_token_length' , 'num_keywords']\n\nj=1\nplt.figure(figsize=[20,7])\nfor i in num_val:\n    plt.subplot(2,6,j)\n    sns.boxplot(news_train[i])\n    j=j+1\nplt.show()","23f0d470":"# Daywise Publication of Articles.\n\ndays=[days for days in news_train.columns if 'weekday' in days]\n\nj=1\nplt.figure(figsize=[25,3])\nfor i in days:\n    plt.subplot(1,7,j)\n    news_train[i].value_counts(normalize=True).plot.bar()\n    plt.yticks(np.arange(0,1.1,step=0.1))\n    plt.title([i])\n    plt.grid()\n    j=j+1\nplt.show()","39857045":"# Data Channel Distribution.\n\ndata_channel=[data for data in news_train.columns if 'data' in data]\n\nj=1\nplt.figure(figsize=[25,3])\nfor i in data_channel:\n    plt.subplot(1,6,j)\n    news_train[i].value_counts(normalize=True).plot.bar()\n    plt.yticks(np.arange(0,1.1,step=0.1))\n    plt.grid()\n    plt.title([i])\n    j=j+1\nplt.show()","af6fde41":"# LDA distribution.\n\nlda=[ld for ld in news_train.columns if \"LDA\" in ld]\n\nj=1\nplt.figure(figsize=[25,3])\nfor i in lda:\n    plt.subplot(1,5,j)\n    sns.boxplot(news_train[i])\n    plt.xticks(np.arange(0,1.1,step=0.1))\n    plt.grid()\n    j=j+1\nplt.show()","b8094d95":"# Keyword Distribution.\n\nkey_word=[kw for kw in news_train.columns if 'kw' in kw]\n\nj=1\nplt.figure(figsize=[25,3])\nfor i in key_word:\n    plt.subplot(1,9,j)\n    sns.boxplot(news_train[i])\n    j=j+1\nplt.show()","a554c3f0":"# Correlation Matrix between variables.\n\nplt.figure(figsize=[20,10])\nsns.heatmap(news_train.corr() , cmap='GnBu_r' , linewidths=0.8 , linecolor='grey')\nplt.show()","cced7c0b":"# Correlation Barplot w.r.t Target Variable.\nnews_train.corrwith(news_train['shares']).sort_values(ascending=False).plot.bar(plt.figure(figsize=[25,5]))","d88ead12":"# Pairplot between Article Publishing Day and Shares.\n\nplt.figure(figsize=[25,3])\nsns.pairplot(data=news_train , x_vars=['weekday_is_monday','weekday_is_tuesday','weekday_is_wednesday','weekday_is_thursday',\n                                     'weekday_is_friday','weekday_is_saturday','weekday_is_sunday'] , y_vars='shares',\n                                      diag_kind=None)\nplt.show()","d0ff1b49":"# Pairplot between Data channel and Shares.\n\nplt.figure(figsize=[25,3])\nsns.pairplot(data=news_train , x_vars=['data_channel_is_lifestyle',\n 'data_channel_is_entertainment',\n 'data_channel_is_bus',\n 'data_channel_is_socmed',\n 'data_channel_is_tech',\n 'data_channel_is_world'] , y_vars='shares',diag_kind= None)\nplt.show()","38683b36":"# Distribution of Shares with respect to structure of article.\n\nplt.figure(figsize=[25,3])\nsns.pairplot(data=news_train , x_vars=['num_imgs' , 'n_tokens_title','n_tokens_content','n_unique_tokens',\n                                      'n_non_stop_words' , 'n_non_stop_unique_tokens'] , y_vars='shares' , diag_kind= None)\nplt.show()","2efa963e":"pol=[pol for pol in news_train.columns if \"polarity\" in pol]\npol","88251ea8":"# Relation between Polarity and Shares.\n\nplt.figure(figsize=[25,5])\nsns.pairplot(data=news_train , x_vars=['avg_positive_polarity','min_positive_polarity','max_positive_polarity',\n                                       'avg_negative_polarity','min_negative_polarity','max_negative_polarity',\n                                       'global_sentiment_polarity','title_sentiment_polarity','abs_title_sentiment_polarity'] ,\n                                        y_vars='shares' , diag_kind= None)\nplt.show()","2aa0a524":"# Separating Target Variable from Dataset.\n\nX = news_train.iloc[:,:-1]\ny =news_train.iloc[:,-1]","16828683":"# Splitting the Train and Test Set.\n\nX_train,X_test,y_train,y_test=train_test_split(X,y,train_size= 0.7 , random_state=42)","4bd677b0":"# Checking Data shape of Train- Test set.\n\n[i.shape for i in [X_train,X_test,y_train,y_test]]","deea6d6a":"# Checking Missing Values in Train set.\n\nmsno.bar(X_train)","210c58cd":"# Checking percentage of Null Values.\n\nround((X_train.isnull().sum().sort_values(ascending= False)*100 \/ len(X_train.index)) , 2)","59d718de":"# Separating Numerical and Categorical Variables with Null Values.\n\nnum_col_missing=['num_imgs',\n'num_self_hrefs',\n'global_subjectivity',\n'self_reference_max_shares',\n'kw_max_max',\n'abs_title_sentiment_polarity',\n'avg_positive_polarity',\n'kw_min_min',\n'kw_avg_avg',\n'global_rate_negative_words',\n'global_rate_positive_words',\n'num_hrefs',\n'abs_title_subjectivity',\n'min_negative_polarity',\n'max_negative_polarity',\n'kw_max_avg',\n'rate_negative_words',\n'rate_positive_words',\n'num_videos',\n'num_keywords',\n'kw_max_min',\n'min_positive_polarity',\n'global_sentiment_polarity',\n'self_reference_avg_sharess',\n'kw_min_avg',\n'self_reference_min_shares',\n'title_sentiment_polarity',\n'avg_negative_polarity',\n'max_positive_polarity',\n'kw_min_max',\n'title_subjectivity',\n'kw_avg_max',\n'kw_avg_min',\n]\n\ncat_col_missing=['is_weekend',\n'weekday_is_wednesday',\n'weekday_is_sunday',\n'weekday_is_monday',\n'weekday_is_friday',\n'weekday_is_tuesday',\n'weekday_is_thursday',\n'weekday_is_saturday',\n]","c27d2464":"imputer=SimpleImputer(strategy='mean')\nX_train[num_col_missing]=imputer.fit_transform(X_train[num_col_missing])","23d4fb27":"imputer=SimpleImputer(strategy='mean')\nX_test[num_col_missing]=imputer.fit_transform(X_test[num_col_missing])","3c314589":"imputer=SimpleImputer(strategy='most_frequent')\nX_train[cat_col_missing]=imputer.fit_transform(X_train[cat_col_missing])","b6686c0c":"imputer=SimpleImputer(strategy='most_frequent')\nX_test[cat_col_missing]=imputer.fit_transform(X_test[cat_col_missing])","a4690717":"X_train.isnull().sum()","27e5179e":"# Scaling the Train data.\n\nscale = StandardScaler()\nX_train[:] = scale.fit_transform(X_train)","31571bbf":"# Outlier treatment. Capping outliers to 3rd Standard Deviation.\n\ndef cap_outliers(array, k=3):\n    upper_limit = array.mean() + k*array.std()\n    lower_limit = array.mean() - k*array.std()\n    array[array<lower_limit] = lower_limit\n    array[array>upper_limit] = upper_limit\n    return array","83a2123a":"X_train = X_train.apply(cap_outliers, axis=0)","883e79d1":"# Checking distribution of Target Variable - \n\nplt.figure(figsize=[10,3])\nsns.histplot(y_train)\nplt.title(\"Distribution of Shares\")\nplt.show()","517409c8":"y_train=np.log(y_train)","cff77601":"plt.figure(figsize=[10,3])\nsns.histplot(y_train)\nplt.title(\"Distribution of Shares- After Log conversion\")\nplt.show()","3a99c64f":"from sklearn.pipeline import Pipeline\nfrom imblearn.pipeline import Pipeline as imbpipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.decomposition import IncrementalPCA","3ce9069a":"# Principal Component Analysis - PCA\n\npca =PCA(random_state=42)\ncomponents = pca.fit_transform(X_train)","0dad7576":"corrmat = np.corrcoef( pca.fit_transform(X_train).transpose())","ba6ee5b8":"plt.figure(figsize=[25,15])\nsns.heatmap(corrmat ,linewidths=0.8 , linecolor='grey' )\nplt.show()","fb8ef9fb":"pca.explained_variance_ratio_","a35a7c35":"features=pd.DataFrame({\"Feature\" : X_train.columns,\"Var\":pca.explained_variance_ratio_})\nfeatures","3821b728":"pca_cum=np.cumsum(pca.explained_variance_ratio_)","f6025fd6":"plt.figure(figsize=[20,5])\nplt.plot(pca_cum)\nplt.title(\"Scree Plot\")\nplt.xlabel(\"PCA\")\nplt.ylabel(\"Cummulative Frequency\")\nplt.xticks(np.arange(0, 60, step=1))\nplt.yticks(np.arange(0,1.1,step=0.1))\nplt.grid()\nplt.show()","8abc5ddf":"components=pd.DataFrame({\"Feature\" : X_train.columns,\"PCA19\": pca.components_[19]})\ncomponents.sort_values(by='PCA19', ascending = False)","16854712":"# Building Linear Regression Model with PCA.\n\npipe_lr1=imbpipeline([('scalar' , StandardScaler()),\n                      ('pca',PCA(n_components=19)),\n                      ('lr_regressor' , LinearRegression())])","da6561fa":"pipe_lr1.fit(X_train, y_train)","7b8bf3a6":"y_lr1_pred = pipe_lr1.predict(X_test)","d3d196a1":"lr1_r2=r2_score(y_test ,y_lr1_pred)\nlr1_rss=np.sum(np.square(y_test-y_lr1_pred))\n\nlr1_mse=mean_squared_error(y_test ,y_lr1_pred)\n\nlr1_rmse = lr1_mse**0.5\n\nprint(\"lr1_R2Score:\" , lr1_r2)\nprint(\"lr1_RSS:\" , lr1_rss)\nprint(\"lr1_mse:\" , lr1_mse)\nprint(\"lr1_rmse:\" , lr1_rmse)","a2c8e6fc":"from sklearn.feature_selection import RFE","39586582":"# Creating RFE for Feature selection.\n\nlr2=LinearRegression()\n\nlr2.fit(X_train,y_train)\n\nrfe=RFE(lr2 , 10)\n\nrfe.fit(X_train,y_train)","9e0f00f7":"list(zip(X_train.columns , rfe.support_, rfe.ranking_))","eb4f186b":"col=X_train.columns[rfe.support_]\ncol","04052e70":"X_train_rfe=X_train[col]\nX_test_rfe=X_test[col]","bb568b6e":"# Building Linear Regression Model with RFE\n\nlr_rfe=LinearRegression()\n\nlr_rfe_f=lr_rfe.fit(X_train_rfe , y_train)\n\ny_rfe_pred=lr_rfe_f.predict(X_test_rfe)","b7b9a324":"lr_rfe_r2=r2_score(y_test ,y_rfe_pred)\nlr_rfe_rss=np.sum(np.square(y_test-y_rfe_pred))\n\nlr_rfe_mse=mean_squared_error(y_test ,y_rfe_pred)\n\nlr_rfe_rmse = lr_rfe_mse**0.5\n\nprint(\"lr_rfe_R2Score:\" , lr_rfe_r2)\nprint(\"lr_rfe_RSS:\" , lr_rfe_rss)\nprint(\"lr_rfe_mse:\" , lr_rfe_mse)\nprint(\"lr_rfe_rmse:\" , lr_rfe_rmse)","19eeef2b":"# Building AdaBoost Regressor Model\n\nshallow_tree=DecisionTreeRegressor(random_state=42 , max_depth=2)","63f1975f":"shallow_tree.fit(X_train,y_train)","d863a7e2":"y_dt_pred=shallow_tree.predict(X_test)","3d103c36":"dt_r2=r2_score(y_test ,y_dt_pred)\ndt_rss=np.sum(np.square(y_test-y_dt_pred))\n\ndt_mse=mean_squared_error(y_test ,y_dt_pred)\n\ndt_rmse = dt_mse**0.5\n\nprint(\"dt_R2Score:\" , dt_r2)\nprint(\"dt_RSS:\" , dt_rss)\nprint(\"dt_mse:\" , dt_mse)\nprint(\"dt_rmse:\" ,dt_rmse)","471a64e9":"estimator=list(range(1,50,1))\n\nabc_score=[]\n\nfor i in estimator:\n    ABR=AdaBoostRegressor(base_estimator= shallow_tree,n_estimators=i,random_state= 42)","cc875372":"ABR.fit(X_train,y_train)","ba17f713":"y_abc_pred=ABR.predict(X_test)","7ba784d6":"abr_r2=r2_score(y_test ,y_abc_pred)\nabr_rss=np.sum(np.square(y_test-y_abc_pred))\n\nabr_mse=mean_squared_error(y_test ,y_abc_pred)\n\nabr_rmse = abr_mse**0.5\n\nprint(\"abr_R2Score:\" , abr_r2)\nprint(\"abr_RSS:\" ,abr_rss)\nprint(\"abr_mse:\" , abr_mse)\nprint(\"abr_rmse:\" , abr_rmse)","d67c8353":"# Building Ridge Regression Model.\n\nridge=Ridge(random_state=42)\nparams={'alpha' : [1e-15 , 1e-10 , 1e-8 , 1e-3, 1e-2,1,5,10,20,30,35,40,45,50,55,100,200,500,1000]}\nridge_regressor=GridSearchCV(ridge ,params, scoring = 'neg_mean_squared_error' , cv=5 )\nridge_regressor.fit(X_train,y_train)","a13aeace":"ridge_regressor.best_params_","2d5c3b78":"ridgereg = Ridge(alpha= 100,normalize=True)\nridgereg.fit(X_train,y_train)\ny_ridge_pred = ridgereg.predict(X_test)","69ee45d1":"ridge_r2=r2_score(y_test ,y_ridge_pred)\n\nridge_rss=np.sum(np.square(y_test-y_ridge_pred))\n\nridge_mse=mean_squared_error(y_test ,y_ridge_pred)\n\nridge_rmse=np.sqrt(ridge_mse)\n\nprint(\"ridge_R2Score:\" ,ridge_r2)\nprint(\"ridge_RSS:\" , ridge_rss)\nprint(\"ridge_mse:\" ,ridge_mse)\nprint(\"ridge_rmse:\" , ridge_rmse)","c0e8b3be":"# Building Ridge Regression with 19 PCA explaining 80% variance.\n\npipe_ridge=imbpipeline([('scalar', StandardScaler()),\n            ('pca' , PCA(n_components=19)),\n            ('ridge_reg' ,Ridge(alpha= 100,normalize=True))])","bb2f11f6":"pipe_ridge.fit(X_train,y_train)","f6335658":"y_ridge_pipe_pred=pipe_ridge.predict(X_test)","faabf54f":"ridge_pca_r2=r2_score(y_test ,y_ridge_pipe_pred)\n\nridge_pca_rss=np.sum(np.square(y_test-y_ridge_pipe_pred))\n\nridge_pca_mse=mean_squared_error(y_test ,y_ridge_pipe_pred)\n\nridge_pca_rmse=np.sqrt(ridge_pca_mse)\n\nprint(\"ridge_pca_R2Score:\" , ridge_pca_r2)\nprint(\"ridge_pca_RSS:\" , ridge_pca_rss)\nprint(\"ridge_pca_mse:\" , ridge_pca_mse)\nprint(\"ridge_pca_rmse:\" , ridge_pca_rmse)","61e8d2c7":"# Building Lasso Regression Model.\n\nlasso=Lasso(random_state=42)\nparams={'alpha' : [1e-15 , 1e-10 , 1e-8 , 1e-3, 1e-2,1,5,10,20,30,35,40,45,50,55,100]}\nlasso_regressor=GridSearchCV(lasso ,params, scoring = 'neg_mean_squared_error' , cv=5 )\nlasso_regressor.fit(X_train,y_train)","2a632c84":"lasso_regressor.best_params_","8ee85214":"lassoreg = Lasso(alpha= 0.001,normalize=True)\nlassoreg.fit(X_train,y_train)\ny_lasso_pred = lassoreg.predict(X_test)","ad782544":"lassoreg.coef_","fc4914a2":"lasso_r2=r2_score(y_test ,y_lasso_pred)\n\nlasso_rss=np.sum(np.square(y_test-y_lasso_pred))\n\nlasso_mse=mean_squared_error(y_test ,y_lasso_pred)\n\nlasso_rmse=np.sqrt(lasso_mse)\n\nprint(\"lasso_R2Score:\" ,lasso_r2)\nprint(\"lasso_RSS:\" , lasso_rss)\nprint(\"lasso_mse:\" ,lasso_mse)\nprint(\"lasso_rmse:\" , lasso_rmse)","c5a28422":"# Building Lasso Regression with 19 PCA explaining 80% variance.\n\npipe_lasso=imbpipeline([('scalar' , StandardScaler()),\n                       ('pca',PCA(n_components=19)),\n                       ('lassoreg' , Lasso(alpha= 0.001,normalize=True))])","95aa047b":"pipe_lasso.fit(X_train,y_train)","3acb1324":"y_pipe_lasso_pred=pipe_lasso.predict(X_test)","7c127e90":"pipe_lasso.named_steps['lassoreg'].coef_","f215caa4":"lasso_pca_r2=r2_score(y_test ,y_pipe_lasso_pred)\n\nlasso_pca_rss=np.sum(np.square(y_test-y_pipe_lasso_pred))\n\nlasso_pca_mse=mean_squared_error(y_test ,y_pipe_lasso_pred)\n\nlasso_pca_rmse=np.sqrt(lasso_pca_mse)\n\nprint(\"lasso_pca_R2Score:\" , lasso_pca_r2)\nprint(\"lasso_pca_RSS:\" , lasso_pca_rss)\nprint(\"lasso_pca_mse:\" , lasso_pca_mse)\nprint(\"lasso_pca_rmse:\" , lasso_pca_rmse)","8bc32b51":"y_res_lasso = y_test - y_pipe_lasso_pred","70e6cb19":"plt.scatter( y_pipe_lasso_pred ,y_res_lasso)\nplt.axhline(y=0, color='r', linestyle=':')\nplt.xlabel(\"Predictions\")\nplt.ylabel(\"Residual\")\nplt.yticks(np.arange(-100000, 800000 , step=100000))\nplt.show()","fc8a8cfa":"p = sns.distplot(y_res_lasso,kde=True)\np = plt.title('Normality of error terms\/residuals')\nplt.xlabel(\"Residuals\")\nplt.show()","97abe444":"# Building Elastic Net Regression Model with L1_ratio= 0.5\n\nels=ElasticNet(l1_ratio=0.5 , max_iter=100)\n\n\npara={'alpha':[1e-15 , 1e-10 , 1e-8 , 1e-3, 1e-2,1,5,10,20,30,35,40,45,50,55,100,200,500]}\n\nels_reg=GridSearchCV(estimator=els,param_grid = para,scoring='neg_mean_squared_error',n_jobs=-1,\n    cv=4,\n    verbose=1)","b7dcc0a6":"els_reg.estimator","bcdaac69":"els_best=els_reg.estimator","e074d6bb":"els_best.fit(X_train,y_train)","92972865":"y_els_pred=els_best.predict(X_test)","f6f1cfdd":"els_r2=r2_score(y_test ,y_els_pred)\n\nels_rss=np.sum(np.square(y_test-y_els_pred))\n\nels_mse=mean_squared_error(y_test ,y_els_pred)\n\nels_rmse=np.sqrt(els_mse)\n\nprint(\"els_R2Score:\" , els_r2)\nprint(\"els_RSS:\" , els_rss)\nprint(\"els_mse:\" , els_mse)\nprint(\"els_rmse:\" , els_rmse)","63c39df6":"# Building Random Forest Regressor.\n\nrf=RandomForestRegressor(random_state=42, oob_score= True, n_jobs=-1)","7a620c45":"params={'max_depth':[2,3,5,7,10,20],\n       'min_samples_leaf' : [5,10,20,50,100,500],\n       'n_estimators':[10,25,50,100]}","e1cc47c3":"grid_search=GridSearchCV(estimator=rf,param_grid=params,scoring='neg_mean_squared_error',n_jobs=-1,cv=4,verbose=1)","c82dd281":"%%time\n\ngrid_search.fit(X_train,y_train)","1b73512e":"rf_best=grid_search.best_estimator_","843f0664":"rf_best.fit(X_train,y_train)","1ad6aef8":"y_rf_pred=rf_best.predict(X_test)","8fb3ee39":"rf_r2=r2_score(y_test ,y_rf_pred)\n\nrf_rss=np.sum(np.square(y_test-y_rf_pred))\n\nrf_mse=mean_squared_error(y_test ,y_rf_pred)\n\nrf_rmse=np.sqrt(rf_mse)\n\nprint(\"rf_R2Score:\" , rf_r2)\nprint(\"rf_RSS:\" , rf_rss)\nprint(\"rf_mse:\" , rf_mse)\nprint(\"rf_rmse:\" , rf_rmse)","f94cd756":"rmse_score=[['Linear_Regression_1','lr1_rmse',lr1_rmse],['Linear_Regression_RFE','lr_rfe_rmse',lr_rfe_rmse],\n           ['AdaboostRegressor','abr_rmse', abr_rmse] , ['Ridge_Regression','ridge_rmse' , ridge_rmse],\n           ['Ridge_with_PCA','ridge_pca_rmse' , ridge_pca_rmse] , ['Lasso_Regression','lasso_rmse' , lasso_rmse],\n           ['Lasso_with_PCA','lasso_pca_rmse' , lasso_pca_rmse],['Elastic_Net','els_rmse', els_rmse],\n           ['RandomForest_Regressor','rf_rmse', rf_rmse]]","c8e4bac4":"rmse_score_f=pd.DataFrame(rmse_score , columns=['Model' , 'Model_RMSE' , 'RMSE_value'])\nrmse_score_f=rmse_score_f.round()\nrmse_score_f.sort_values(by='RMSE_value' , ascending = True)","7bfd2567":"imputer=SimpleImputer(strategy='mean')\nnews_test[num_col_missing]=imputer.fit_transform(news_test[num_col_missing])","22458163":"imputer=SimpleImputer(strategy='most_frequent')\nnews_test[cat_col_missing]=imputer.fit_transform(news_test[cat_col_missing])","f5964727":"news_test=news_test.set_index('id')","b2a5fdd0":"news_test['shares'] = pipe_lasso.predict(news_test)","5ac01dd3":"news_test=news_test.reset_index()","e4c6e429":"output2 = news_test[['id','shares']]\noutput2.head()","2b73c85f":"output2.to_csv(r'C:\\Users\\drvcp\\Documents\\GOURI\\PGDDS\\Assignment\\News Popularity Kaggle\\submission_news_popularity_Sept21_Gouri_Patel2.csv',index=False)","170e318f":"from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\n\nfrom scipy.cluster.hierarchy import linkage\nfrom scipy.cluster.hierarchy import dendrogram\nfrom scipy.cluster.hierarchy import cut_tree","24410b66":"news_train.head()","9e27f07d":"news_train_k=news_train.copy()","e44f3be1":"imputer=SimpleImputer(strategy='mean')\nnews_train_k[num_col_missing]=imputer.fit_transform(news_train_k[num_col_missing])","f926b777":"imputer=SimpleImputer(strategy='most_frequent')\nnews_train_k[cat_col_missing]=imputer.fit_transform(news_train_k[cat_col_missing])","65381238":"scalar=StandardScaler()\nnews_train_scaled=scalar.fit_transform(news_train_k)","c1c03daf":"# Applying K Means Clustering:\n\nkmeans = KMeans(n_clusters=4, max_iter=50)\nkmeans.fit(news_train_scaled)","c23bc77d":"kmeans.labels_","618f89c4":"ssd=[]\n\ncluster_range=[2,3,4,5,6,7,8,9,10]\n\nfor num_cluster in cluster_range:\n    kmeans = KMeans(n_clusters= num_cluster, max_iter=50)\n    kmeans.fit(news_train_scaled)\n    ssd.append(kmeans.inertia_)\n    \nplt.plot(ssd)","5794e4bf":"# Number of Clusters sleceted after plotting the Graph - 3\n\nkmeans = KMeans(n_clusters=3, max_iter=50)\nkmeans.fit(news_train_scaled)","8c658624":"news_train['Cluster_ID']=kmeans.labels_\nnews_train.head().sort_values(by='Cluster_ID' , ascending = True)","37916162":"# Cluster 1\n\ncluster_0=news_train[news_train['Cluster_ID'] ==0]\ncluster_0.head().sort_values(by='shares' , ascending = False)","ed1f299d":"# Plotting correlation Barplot of Cluster0 vs Shares.\n\ncluster_0.corrwith(cluster_0['shares']).sort_values(ascending=False).plot.bar(plt.figure(figsize=[25,5]))\nplt.show()","1b1cf253":"# Cluster 2\n\ncluster_1=news_train[news_train['Cluster_ID'] ==1]\ncluster_1.head().sort_values(by='shares' , ascending = False)","f995e4ef":"# Plotting correlation Barplot of Cluster1 vs Shares.\n\ncluster_1.corrwith(cluster_1['shares']).sort_values(ascending=False).plot.bar(plt.figure(figsize=[25,5]))\nplt.show()","220798e7":"# Cluster 3\n\ncluster_2=news_train[news_train['Cluster_ID'] ==2]\ncluster_2.head().sort_values(by='shares' , ascending = False)","b9ddd34f":"# Plotting correlation Barplot of Cluster1 vs Shares.\ncluster_2.corrwith(cluster_2['shares']).sort_values(ascending=False).plot.bar(plt.figure(figsize=[25,5]))\nplt.show()","f2303d5d":"# Plotting Clusterwise Shares.\n\nplt.figure(figsize=[20,3])\nplt.subplot(1,3,1)\nsns.distplot(cluster_0['shares'])\nplt.title('Cluster_0')\nplt.subplot(1,3,2)\nsns.distplot(cluster_1['shares'])\nplt.title('Cluster_1')\nplt.subplot(1,3,3)\nsns.distplot(cluster_2['shares'])\nplt.title('Cluster_2')\nplt.show()","952990f7":"#### Observation: Fig 4. LDA\n- LDA 0 and LDA 01 show higher outlier.","8837688a":"#### Null Value Imputation in test dataset.","57b047a7":"#### Observation:\n- Scree Plot shows PCA component 19 explains 80% variance.","b9cee051":"#### Observation: Fig 13- Log Transformation of Shares.\n- Normal Distribution of Target Variable.","81d37241":"#### Observation: Data Description:\n- Many features are skewed to Right.\n- Outliers are detected in n_tokens_content, n_unique_tokens,n_non_stop_words,num_hrefs,num_self_hrefs ,num_imgs, num_videos,\n   self_reference_min_shares , self_reference_max_shares , self_reference_avg_shares.\n- Data also has Categorical variables already converted in numerical format like Data Channel, Day of week when article published.","5ed8198f":"#### Observation: Fig 7 - Correlation Matrix with Target Variable.\n- Average Keywords, LDA03 topic,number of links, number of images, sharing referrence articles , title subjectivity show positive correlation.\n- Rate of positive words, Data channel- (Business, Technology, World affair) , LDA01,LDA02, average negative polarity show inverse relation.","d59fefbc":"#### Observation: Model Evaluation Score Table\n\n- Table shows lowest RMSE in Lsso Regression with PCA.Therefore, Unseen Data will be processed on this model.","da921b2d":"#### Observation- Fig 9 - Data Channel and Shares.\n- Business Channel and Technology channel shows outliers, indicting popularity of a particular article.\n- Lifestyle and Entertainment show almost equal count of shares.","1afba172":"### Model Building","06b0db24":"### K-NN Algorithm\n- To understand Clusters present in the dataset","7cf0c15a":"#### Observation: Fig 11 - Relation between Polarity and Shares.\n- Title polarity close to 0 shows higher count of Shares.\n- Negative polarity show equal distribution of Shares.\n- Average positive polarity with high Shares is between 0.25 to 0.50.","d4a2d8be":"#### Observation: Fig 2 - Daywise distribution of Published Articles.\n- Higher percentage of articles are published on Tuesday, Wednesday,Thursday apx. 20%.\n- less than 10% articles are published on Weekends (Saturday and Sunday).","90a9f4e1":"#### Model Building on Test Dataset","203f80a5":"#### Observation: Fig 8- Article Published on Day and Shares.\n- Articles published on Tuesday, Wednesday and Thursday show higher Shares. ","8754f7c2":"#### Observation: Fig. 3 - Data Channel.\n- Articles pertaining to 'World affairs' are released more. Indicating Reader's preferrence.\n- apart from that, articles related to Entertainment, Technology and Business Affairs show almost equal number of realeases.","0925fba1":"#### Observation: Fig 1 - Distribution of Structural attributes of Article.\n\n- 75% articles have title length between 8 to 12 words.\n- 75% articles have content length less than 1000 word. Outliers are seen with very high word content even above 6000 words.\n- Unique numbers , rate of non stop words, rate of unique words shows extreme outlier.\n- Average length of words in the data is between 4 to 6 alphabets. Very few articles contain complicated words.i.e over 6 alphabets.","446f7e8d":"### Model Evaluation Score:\n\n- Combining Model Evaluation score of all Models.\n- Root Mean Sqaure Error (RMSE) is evaluated to understand approximate variation in Predicted values and Actual Values.","d96934d8":"### Approach:\n\n- Loading the dataset.\n- Checking Data shape and type.\n- Exploratory Data Analysis:\n    - Data Visualisation. \n    - Univariate Analysis - Checking the distribution of various Features in dataset.\n    - Multivariate Analysis - Correlation Matrix, Pairplots to understand factors influencing Target Variable.\n- Missing Value detection and treatment.\n- Train-Test Split.\n- PCA analysis for Dimension Reductionality. \n- Building Regression Model - Linear Regression,Ridge Regression,Lasso Regression,Random Forest Regressor,AdaBoost Regressor.\n- Evaluation of Model - Root Mean Sqaure Error (RMSE).\n- Checking RMSE score of each Model. Selecting the lowest RMSE score.\n- Applying final Model on Unseen Data. Predicting Results.\n- Reccomendations for Business.","9b2fe7b5":"#### Observation: Cluster 1\n- Cluster 1 is a group of Readers who prefer\n- Social Media Channel, \n- Shares articles published on weekend,\n- Articles with higher length,\n- More number of Images, Videos, Links. ","6cf4a7ca":"#### Observation: Fig 12 - Distribution of Shares\n- Data is highly skewed towards Right.\n- Log Transformation will be applied for transforming data in normal distribution.","53cd97d9":"#### Observation: Fig 10 - Structure of Articles vs Shares.\n- Maximum shares are obtained for\n- articles having images between 0 to 30.\n- Title length between 8 to 15 words.\n- Content length less than 2000 words.","4de63349":"### Univariate Analysis","c7fc02a3":"## Online News Popularity Prediction","e3f2c5c9":"#### Observation: Fig 6 -Correlation Matrix\n- Majority of features show positive correlation with each other indicating higher Multicollinearity.","f73ca6de":"#### Observation: Cluster 3\n- Cluster 3 is a group of Readers who prefer,\n- Business and Technology Articles\n- Articles with keywords, average length of Content,\n- More number of Links, self referrence links.","61a61ad6":"#### Predicting Results on Test Dataset.","75cace2e":"#### Observation: Fig 5 - Keyword distribution.\n- Worst keyword show Shares minimum shares less than 100.\n- Best keyword min shares show outliers upto 750000.\n- Best keyword max shares show outlier in negative direction.","34e39139":"#### Imputation of Missing Values\n\n- Numerical Variables - will be imputed with Mean to normalise the effect of outliers.\n- Categorical Variables - will be imputed with Mode.","f80dc088":"#### Observation: Cluster 2\n- Cluster 2 is a group of Readers who prefer,\n- Articles with negative polarity,\n- Average Keywords , articles with images. ","0808d18c":"### Observations- KNN Method of Clustering.\n- Cluster0 - has lowest density of Shares.\n- Cluster1 - has maximum Shares up to 2 Lakhs.Data is skwed to right. \n- Cluster2 - has highest shares up to 8 lakhs among all clusters\n- Cluster2 - indicates popular articles.","3495e7b0":"### Predicting Results on Unseen Dataset - news_test","f0f1a288":"### Recomendations:\n- All features are highly correlated with each other.\n- Title and Article Content - Title size between 8 to 12 words, content length less than 1000 words, fewers images and videos show higher popularity.\n- High number of keywords, article with average positive polarity \n- Business, Technology, Lifestyle and Entertainment Channel show more polularity.\n- News posted on weekdays are shared more as compared to weekend. ","d06ac091":"### Multivariate Analysis.","5809cd89":"### Problem Statement:\n- The consumption of online news is expediting day by day due to the extensive adoption of smartphones and the rise of social networks. \n- Online news content includes various key properties like it is easily produced, it is small in size, its lifespan is short and the cost is low. \n- Hence predicting the popularity of article before its publication, is important to present the data to right kind of readers.\n- It increases the ability of news organizations to deliver more relevant and appealing content in a proactive manner\n\n### Goal :\n\n- Predicting number of Shares on social network. Indicating popularity of article.\n- Predicting whether an article will have a good or bad popularity.\n- Evaluating which articles carry the most shares and why."}}