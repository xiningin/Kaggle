{"cell_type":{"17544a1a":"code","d83bf736":"code","5a2f390f":"code","8aa667f8":"code","fd79e62f":"code","af0bab81":"code","e5dd5d8e":"code","d846fd63":"code","89143f92":"code","881eef8d":"code","804354a3":"code","0a57846b":"code","a39e851e":"code","70b5254f":"code","9909bea1":"code","04f99d6d":"code","6de79dd4":"code","b18604a2":"code","3632be3e":"code","c1457383":"code","7ce16529":"code","03ec7eec":"code","33668b9e":"code","49129a72":"code","7d7b2121":"code","ca4fd1d4":"code","14998c63":"code","8ded9cbd":"code","86b5224e":"code","f17f6641":"code","2dcd24b5":"code","da50e4bc":"code","5c2f134c":"code","d27a1e1a":"code","8e3f8d3e":"code","7974fbca":"code","ec47e34a":"code","f3fa135f":"code","1be41fa7":"code","3c7a989f":"code","271a9729":"code","a1c15363":"code","64e2dd24":"code","8acfa934":"code","991e0d47":"code","dd39d121":"code","0abc405a":"code","9a9a40e7":"code","e0c104b0":"code","63ae2761":"code","33bb64b8":"code","c10a8638":"code","2231b1fd":"code","4546c440":"code","8df2126e":"code","281c2a92":"code","37717007":"code","34a91c9b":"code","120fde51":"code","52b5e6b1":"code","6eaf9a3d":"code","90528235":"code","8d82f3c2":"markdown","59d4d366":"markdown","b02aed6f":"markdown","043d7414":"markdown","6e6fe78c":"markdown","cfe6a8b4":"markdown","1a9566ec":"markdown","55c0ec30":"markdown","fd36a44d":"markdown"},"source":{"17544a1a":"import pandas as pd\nimport numpy as np","d83bf736":"l=[10,20,30,40,50]\ns1=pd.Series(l) #[parameter1-Data] [Parameter2-index, default -0,1..]\ns1","5a2f390f":"myd={'a':10,'b':20,'c':30}\ns2=pd.Series(myd) #keys->index values->data\ns2","8aa667f8":"#Accessing - using index\nmyd['a']","fd79e62f":"#changing any data using its key \ns2['a']=100","af0bab81":"s2","e5dd5d8e":"#adding new enties\ns2['d']=40","d846fd63":"s2","89143f92":"#Deleting entry\ndel s2['d']","881eef8d":"s2","804354a3":"s1","0a57846b":"s3=pd.Series([0,1,2,3,4],[1,2,3,4,5])","a39e851e":"s3","70b5254f":"s1+s3 #if n=index does not match then nan, if it matches then it performs operation.","9909bea1":"df=pd.DataFrame(np.random.randn(5,4),'1 2 3 4 5'.split(),'A B C D'.split())\n#para 1 - data \n#para 2 - index\n#para 3 - column","04f99d6d":"df","6de79dd4":"#Selecting column\n#Selcting single column\ndf['A']\n","b18604a2":"#Selecting more than 1 column\ndf[['A','B']]","3632be3e":"df","c1457383":"#Selceting rows using iloc[] and loc[]\n#selecting single row\ndf.loc['1']","7ce16529":"#Selecting more than 1 row\ndf.loc[['1','2']]","03ec7eec":"#Selcting an element\ndf.loc['1','A']","33668b9e":"#Using iloc[] i- index\ndf.iloc[0]","49129a72":"df","7d7b2121":"#Creating new column \ndf['E']=df['A']+df['B']","ca4fd1d4":"df","14998c63":"df['F']=[1,2,3,4,5]","8ded9cbd":"df","86b5224e":"#Deleting column\ndf.drop('F',axis=1,inplace=True)","f17f6641":"df\n","2dcd24b5":"df.drop('5',axis=0,inplace =True)","da50e4bc":"df","5c2f134c":"df>True","d27a1e1a":"df[df>True]","8e3f8d3e":"[df['A']>0]","7974fbca":"df[df['A']>0]","ec47e34a":"df[df['A']>0]['B'] # when the fisrt conditon is true and then the column b elements are selected","f3fa135f":"df[(df['A']>0) & (df['B'] > 1)]\n\n#&-and operation\n#| - or operation","1be41fa7":"df","3c7a989f":"df.index=\"10 20 30 40 \".split()","271a9729":"df","a1c15363":"#using an existing column to use it as its index\ndf.set_index('E')\n\n#inplace needs to be passed for permannet change","64e2dd24":"df","8acfa934":"df.reset_index()","991e0d47":"df = pd.DataFrame({'A':[1,2,np.nan],\n                  'B':[5,np.nan,np.nan],\n                  'C':[1,2,3]})","dd39d121":"df","0abc405a":"df.dropna(axis=1,inplace=True)\n#Deletes the row which has nan value \n#axis=0 -> row\n#axis=1 -> column\n","9a9a40e7":"df1 = pd.DataFrame({'A':[1,2,np.nan],\n                  'B':[5,np.nan,np.nan],\n                  'C':[1,2,3]})","e0c104b0":"df1","63ae2761":"df1.fillna(10)\n#Replaces the nan with the value passed ","33bb64b8":"df","c10a8638":"op=pd.DataFrame({'a':[1,2,3,4,5],'b':[11,22,33,44,55]})","2231b1fd":"op\n","4546c440":"op['a'].unique()","8df2126e":"op['b'].nunique()","281c2a92":"def times2(x):\n    return x*3","37717007":"op['b'].apply(times2)","34a91c9b":"op['b'].sum()","120fde51":"op['b'].min()\n","52b5e6b1":"op.sort_values(by='a')","6eaf9a3d":"df.isnull()","90528235":"df.dropna()","8d82f3c2":"### Fillna() used to fill the nan values","59d4d366":"# Pandas\nPandas is used for \n<li>Data analysis<\/li>\n<li>Data cleaning<\/li>\n<li>Data Visualization<\/li>\n","b02aed6f":"# Series \nSeries is similar to numpy, but in series we have index to access the value instead on numbers.\n","043d7414":"# Conditional Selection\n","6e6fe78c":"# Setting index for dataframe","cfe6a8b4":"# DataFrames","1a9566ec":"# Applying functions","55c0ec30":"# Missing datas - nan","fd36a44d":"### Note : Based on above observations\n\n##### Conditions on a dataframe if it is false then NAN is produced.\n##### Conditions on a dataframe if it is false then the row is removed.\n"}}