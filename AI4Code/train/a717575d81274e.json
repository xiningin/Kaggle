{"cell_type":{"b6974acb":"code","3ee86aa8":"code","99b50e25":"code","25487d98":"code","2fa3443d":"code","f4e33a8e":"code","2748f6de":"code","5c8f01f6":"code","444e0332":"code","fd3004c7":"code","78a6bdc5":"code","03f5b91b":"code","c6a52286":"code","4dce7577":"code","4972ffce":"code","dc978b10":"code","afae4ad8":"code","337063a5":"code","fd8d4dd2":"code","bec9e2e6":"code","d6cd6a0c":"code","1097eb48":"code","fdc27aa5":"code","d2e5080b":"code","e9a734e1":"code","a1a6e206":"code","3db64ce5":"code","40d47ba6":"code","e3fe6506":"code","7f926361":"code","ce4584a3":"code","5fea3b04":"code","c947e1b8":"code","9f58a096":"code","c0934488":"code","63a6468c":"code","6a96e34b":"code","4ff2a7b4":"code","6a120176":"code","217884f9":"code","e5ffc56c":"code","46887c3e":"code","07197e58":"code","3512a8bf":"code","b6bfee7f":"code","b1ab7174":"code","e73d881b":"markdown","c541e9f0":"markdown","56018fce":"markdown","5763bfb0":"markdown","8f8ed698":"markdown","613cceb8":"markdown","47b370fa":"markdown","09ed886e":"markdown","90e698c7":"markdown","74dddeef":"markdown","c6504784":"markdown","f33637a6":"markdown","224dba28":"markdown","5ec18664":"markdown","11c6a09c":"markdown","3de4b123":"markdown","1dea6f13":"markdown"},"source":{"b6974acb":"from IPython.display import Image\nImage('\/kaggle\/input\/foreign-trade\/foreign trade.png')","3ee86aa8":"\nimport numpy as np # linear algebra.\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# charts\nimport seaborn as sns \nimport matplotlib.pyplot as plt\nimport squarify #TreeMap\n\n# import graph objects as \"go\"\n\nimport plotly.graph_objs as go\n%matplotlib inline\n\n#ignore warning \nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n#Display markdown formatted output like bold, italic bold etc.\nfrom IPython.display import Markdown\ndef bold(string):\n    display(Markdown(string))\n    \n# Required to use plotly offline in jupyter notebook    \nimport plotly.offline as py\nfrom plotly.offline import iplot, init_notebook_mode\nimport plotly.graph_objs as go\ninit_notebook_mode(connected = True)","99b50e25":"'''Read in export and import data from CSV file'''\n\n%time data_import = pd.read_csv('\/kaggle\/input\/indian-export-and-import-data-since-1997\/Import_Clean')\n%time data_export = pd.read_csv('\/kaggle\/input\/indian-export-and-import-data-since-1997\/Export_Clean')","25487d98":"bold('**Preview of Export Data:**')\ndisplay(data_export.sample(n=5))\ndisplay('Export DataSet',data_export.shape)\nbold('**Preview of Import Data:**')\ndisplay(data_import.sample(n=5))\ndisplay('Import DataSet',data_import.shape)","2fa3443d":"'''Variable Description'''\ndef description(df):\n    summary = pd.DataFrame(df.dtypes,columns=['dtypes'])\n    summary = summary.reset_index()\n    summary['Name'] = summary['index']\n    summary = summary[['Name','dtypes']]\n    summary['Missing'] = df.isnull().sum().values    \n    summary['Uniques'] = df.nunique().values\n    summary['First Value'] = df.loc[0].values\n    summary['Second Value'] = df.loc[1].values\n    summary['Third Value'] = df.loc[2].values\n    return summary","f4e33a8e":"bold('**Variable Description of export dataset:**')\ndisplay(description(data_export))\n\nbold('**Variable Description of import dataset:**')\ndisplay(description(data_import))","2748f6de":"data_import['Year'] = data_import.Year.apply(lambda x: x[:4])\ndata_export['Year'] = data_export.Year.apply(lambda x: x[:4])\ndata_import['Year'] = pd.to_numeric(data_import['Year'])\ndata_export['Year'] = pd.to_numeric(data_export['Year'])","5c8f01f6":"\"\"\"Let's see if export and import data contain the zero and NAN values \"\"\"\nbold('**Export Data with zeros:**')\ndisplay(data_export[data_export.Value_of_Export == 0].head(3))\nbold('**Import Data with zeros:**')\ndisplay(data_import[data_import.Value_of_Import == 0].head(3))\nbold('**Export Data with NAN:**')\ndisplay(data_export.isnull().sum())\nbold('**Import Data with NAN:**')\ndisplay(data_import.isnull().sum())","444e0332":"'''Imputing the missing valriable'''\nprint('Size of export data before cleaning',data_export.shape)\nprint('Size of import data before cleaning',data_import.shape)\ndata_import = data_import.dropna()\ndata_import['Country'] = data_import['Country'].replace({'U S A': 'USA'})\ndata_import = data_import.reset_index(drop=True)\n\ndf_export = data_export.dropna()\ndata_export['Country'] = data_export['Country'].replace({'U S A': 'USA'})\ndf_export = data_export.reset_index(drop=True)\nprint('Size of export data after cleaning',data_export.shape)\nprint('Size of import data after cleaning',data_import.shape)","fd3004c7":"print(\"Import Commodity Count : \"+str(len(data_import['2HSCode'].unique())))\nprint(\"Export Commodity Count : \"+str(len(data_export['2HSCode'].unique())))","78a6bdc5":"print(\"No of Country were we are importing Comodities are \"+str(len(data_import['Country'].unique())))\nprint(\"No of Country were we are Exporting Comodities are \"+str(len(data_export['Country'].unique())))","03f5b91b":"df3 = data_import.groupby('Year').agg({\"Value_of_Import\":'sum'})\ndf4 = data_export.groupby('Year').agg({\"Value_of_Export\":'sum'})\ndf3['Growth_Import']=df3.pct_change()\ndf4['Growth_Export']=df4.pct_change()\n'''Calculating trade deficit'''\ndf3['deficit'] = df4.Value_of_Export - df3.Value_of_Import\ntotal_year = pd.concat([df4, df3], axis = 1)\n\nbold('**Export\/Import and Trade Balance of India**')\ndisplay(total_year)\nbold('**Descriptive statistics**')\ndisplay(total_year.describe())","c6a52286":"# create trace1 \ntrace1 = go.Bar(\n                x = df3.index,\n                y = df3.Value_of_Import,\n                name = \"Import\",\n                marker = dict(color = 'rgba(0,191,255, 1)',\n                             line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df3.Value_of_Import)\n# create trace2 \ntrace2 = go.Bar(\n                x = df4.index,\n                y = df4.Value_of_Export,\n                name = \"Export\",\n                marker = dict(color = 'rgba(1, 255, 130, 1)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df4.Value_of_Export)\n\ntrace3 = go.Bar(\n                x = df3.index,\n                y = df3.deficit,\n                name = \"Trade Deficit\",\n                marker = dict(color = 'rgba(220, 20, 60, 1)',\n                              line=dict(color='rgb(0,0,0)',width=1.5)),\n                text = df3.deficit)\n\n\ndata = [trace1, trace2, trace3]\nlayout = go.Layout(barmode = \"group\")\nfig = go.Figure(data = data, layout = layout)\nfig.update_layout(\n    title=go.layout.Title(\n        text=\"Yearwise Import\/Export\/Trade deficit\",\n        xref=\"paper\",\n        x=0\n    ),\n    xaxis=go.layout.XAxis(\n        title=go.layout.xaxis.Title(\n            text=\"Year\",\n            font=dict(\n                family=\"Courier New, monospace\",\n                size=18,\n                color=\"#7f7f7f\"\n            )\n        )\n    ),\n    yaxis=go.layout.YAxis(\n        title=go.layout.yaxis.Title(\n            text=\"Value\",\n            font=dict(\n                family=\"Courier New, monospace\",\n                size=18,\n                color=\"#7f7f7f\"\n            )\n        )\n    )\n)\n\n\n\n\nfig.show()","4dce7577":"df5 = data_import.groupby('Country').agg({'Value_of_Import':'sum'})\ndf5 = df5.sort_values(by='Value_of_Import', ascending = False)\ndf5 = df5[:10]\n\ndf6 = data_export.groupby('Country').agg({'Value_of_Export':'sum'})\ndf6 = df6.sort_values(by='Value_of_Export', ascending = False)\ndf6 = df6[:10]","4972ffce":"sns.set(rc={'figure.figsize':(15,6)})\nax1 = plt.subplot(121)\n\nsns.barplot(df5.Value_of_Import,df5.index).set_title('Country Wise Import')\n\nax2 = plt.subplot(122)\nsns.barplot(df6.Value_of_Export,df6.index).set_title('Country Wise Export')\nplt.tight_layout()\nplt.show()","dc978b10":"fig = go.Figure()\n# Create and style traces\nfig.add_trace(go.Scatter(x=df3.index, y=df3.Value_of_Import, name='Import',mode='lines+markers',\n                         line=dict(color='firebrick', width=4)))\nfig.add_trace(go.Scatter(x=df4.index, y=df4.Value_of_Export, name = 'Export',mode='lines+markers',\n                         line=dict(color='royalblue', width=4)))\nfig.update_layout(\n    title=go.layout.Title(\n        text=\"Yearwise Import\/Export\",\n        xref=\"paper\",\n        x=0\n    ),\n    xaxis=go.layout.XAxis(\n        title=go.layout.xaxis.Title(\n            text=\"Year\",\n            font=dict(\n                family=\"Courier New, monospace\",\n                size=18,\n                color=\"#7f7f7f\"\n            )\n        )\n    ),\n    yaxis=go.layout.YAxis(\n        title=go.layout.yaxis.Title(\n            text=\"Value\",\n            font=dict(\n                family=\"Courier New, monospace\",\n                size=18,\n                color=\"#7f7f7f\"\n            )\n        )\n    )\n)\n\nfig.show()","afae4ad8":"''' creating a new dataframe on Sections of HSCode'''\nHSCode = pd.DataFrame() \nHSCode['Start']=[1,6,15,16,25,28,39,41,44,47,50,64,68,71,72,84,86,90,93,94,97]\nHSCode['End']=[5,14,15,24,27,38,40,43,46,49,63,67,70,71,83,85,89,92,93,96,99]\nHSCode['Sections Name']=['Animals & Animal Products',\n'Vegetable Products',\n'Animal Or Vegetable Fats',\n'Prepared Foodstuffs',\n'Mineral Products',\n'Chemical Products',\n'Plastics & Rubber',\n'Hides & Skins',\n'Wood & Wood Products',\n'Wood Pulp Products',\n'Textiles & Textile Articles',\n'Footwear, Headgear',\n'Articles Of Stone, Plaster',\n'Pearls, Precious Stones, Metals',\n'Base Metals & Articles Thereof',\n'Machinery & Mechanical Parts',\n'Transportation Equipment',\n'Instruments-Measuring, Musical',\n'Arms & Ammunition',\n'Miscellaneous',\n'Works Of Art',]\nHSCode.index += 1\nHSCode.index.name = 'Section'\nbold('**List Of indian HS Classification is based on the HS Code:**')\ndisplay(HSCode)","337063a5":"data_export['Sections Name'] = data_export['2HSCode']\ndata_import['Sections Name'] = data_import['2HSCode']\nfor i in range(1,22):\n    data_export.loc[(data_export['Sections Name'] >= HSCode['Start'][i]) & (data_export['Sections Name'] <= HSCode['End'][i]),'Sections Name']=i\n    data_import.loc[(data_import['Sections Name'] >= HSCode['Start'][i]) & (data_import['Sections Name'] <= HSCode['End'][i]),'Sections Name']=i\n\nexp_hscode = data_export.groupby(['Sections Name']).agg({'Value_of_Export':'sum'})\nexp_hscode['Sections Name'] = HSCode['Sections Name']\nexp_hscode = exp_hscode.sort_values(['Value_of_Export']).reset_index(drop=True)\nimp_hscode = data_import.groupby(['Sections Name']).agg({'Value_of_Import':'sum'})\nimp_hscode = imp_hscode.sort_values(['Value_of_Import']).reset_index(drop=True)\nimp_hscode['Sections Name'] = HSCode['Sections Name']","fd8d4dd2":"'''Visualization of Export\/Import HS Classification is based'''\ndef bar_plot(y,x, label, color):\n    global ax\n    font_size = 20\n    title_size =30\n    plt.rcParams['figure.figsize'] = (15,9)\n    ax = sns.barplot(x, y, palette = color)\n    ax.set_xlabel(xlabel = 'USD (millions)', fontsize = font_size)\n    ax.set_ylabel(ylabel = 'Sections Name', fontsize = font_size)\n    ax.set_title(label = label, fontsize = title_size)\n    plt.xticks(rotation = 90, fontsize=15)\n    plt.yticks(fontsize=15)\n    plt.show()\n\nbar_plot(exp_hscode['Sections Name'], exp_hscode.Value_of_Export, 'Export of India (HS Classification is based)', 'Paired')\nbar_plot(imp_hscode['Sections Name'], imp_hscode.Value_of_Import, 'Import of India (HS Classification is based)', 'Set1')","bec9e2e6":"expensive_import = data_import[data_import.Value_of_Import>100000]\ndf =data_import.groupby(['2HSCode']).agg({'Value_of_Import': 'sum'})\ndf = df.sort_values(by='Value_of_Import')","d6cd6a0c":"value=np.array(df)\ncommodityCode=df.index\nplt.style.use('ggplot')\nplt.rcParams['figure.figsize'] = (10.0, 10.0)\nsquarify.plot(sizes=value, label=commodityCode, alpha=.7 )\nplt.axis('off')\nplt.title(\"Imports HsCode Share\")\nplt.show()","1097eb48":"df1 = data_import.groupby(['Country']).agg({'Value_of_Import': 'sum'})\ndf1 = df1.sort_values(by='Value_of_Import')","fdc27aa5":"value=np.array(df1)\ncountry=df1.index\nplt.style.use('ggplot')\nplt.rcParams['figure.figsize'] = (10.0, 10.0)\nsquarify.plot(sizes=value, label=country, alpha=.7 )\nplt.title(\"Imports Countrywise Share\")\nplt.axis('off')\nplt.show()","d2e5080b":"export_map = pd.DataFrame(df_export.groupby(['Country'])['Value_of_Export'].sum().reset_index())\ncount = pd.DataFrame(export_map.groupby('Country')['Value_of_Export'].sum().reset_index())\n\ntrace = [go.Choropleth(\n            colorscale = 'algae',\n            locationmode = 'country names',\n            locations = count['Country'],\n            text = count['Country'],\n            z = count['Value_of_Export'],\n            reversescale=True)]\n\nlayout = go.Layout(title = 'India Export to Other Country')\n\nfig = go.Figure(data = trace, layout = layout)\npy.iplot(fig)\nimport_map = pd.DataFrame(data_import.groupby(['Country'])['Value_of_Import'].sum().reset_index())\ncount = pd.DataFrame(import_map.groupby('Country')['Value_of_Import'].sum().reset_index())\n\ntrace = [go.Choropleth(\n            colorscale = 'amp',\n            locationmode = 'country names',\n            locations = count['Country'],\n            text = count['Country'],\n            z = count['Value_of_Import'],\n            reversescale=True)]\n\nlayout = go.Layout(title = 'India Import from Other Country')\n\nfig = go.Figure(data = trace, layout = layout)\npy.iplot(fig)","e9a734e1":"df_final_trade = pd.concat([data_export, data_import])\nfrom wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\nplt.rcParams['figure.figsize'] = (12, 12)\nwordcloud = WordCloud(background_color = 'gray', width = 1200,  height = 1200, max_words = 100).generate(' '.join(df_final_trade['Country']))\nplt.imshow(wordcloud)\nplt.axis('off')\nplt.title('Most Popular Country in Trade With India',fontsize = 30)\nplt.show()","a1a6e206":"def country_graph (Country, title):\n    print(title)\n    df_e = data_export[data_export.Country == Country]\n    df_i = data_import[data_import.Country == Country]\n    df_i = df_i.groupby('Year').agg({\"Value_of_Import\":'sum'})\n    df_e = df_e.groupby('Year').agg({\"Value_of_Export\":'sum'})\n    df_i['Growth_Import']=df_i.pct_change()\n    df_e['Growth_Export']=df_e.pct_change()\n    '''Calculating trade deficit'''\n    df_i['deficit'] = df_e.Value_of_Export - df_i.Value_of_Import\n    total_year = pd.concat([df_e, df_i], axis = 1)\n\n    #print('Export\/Import and Trade Balance of India')\n    #display(total_year)\n    #bold('**Descriptive statistics**')\n    #display(total_year.describe())\n    # create trace1 \n    trace1 = go.Bar(x = df_i.index, y = df_i.Value_of_Import, name = \"Import\", \n                    marker = dict(color = 'rgba(0,191,255, 1)', line=dict(color='rgb(0,0,0)',width=1.5)),\n                    text = df_i.Value_of_Import)\n    # create trace2 \n    trace2 = go.Bar(x = df_e.index, y = df_e.Value_of_Export, name = \"Export\",marker = dict(color = 'rgba(1, 255, 130, 1)',\n                    line=dict(color='rgb(0,0,0)',width=1.5)),text = df_e.Value_of_Export)\n\n    trace3 = go.Bar( x = df_i.index, y = df_i.deficit, name = \"Trade Deficit\", marker = dict(color = 'rgba(220, 20, 60, 1)',\n                    line=dict(color='rgb(0,0,0)',width=1.5)), text = df_i.deficit)\n\n    data = [trace1, trace2, trace3]\n    layout = go.Layout(barmode = \"group\")\n    fig = go.Figure(data = data, layout = layout)\n    fig.update_layout(title=go.layout.Title( text=\"Yearwise Trade (Import\/Export\/Trade deficit)\", xref=\"paper\", x=0 ),\n        xaxis=go.layout.XAxis( title=go.layout.xaxis.Title( text=\"Year\", font=dict( family=\"Courier New, monospace\",size=18, color=\"#7f7f7f\"))),\n        yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Value\",font=dict(family=\"Courier New, monospace\",size=18, color=\"#7f7f7f\")))\n    )\n    fig.show()\n    fig = go.Figure()\n    '''\n        # Create and style traces\n    fig.add_trace(go.Scatter(x=df_i.index, y=df_i.Value_of_Import, name='Import',mode='lines+markers', line=dict(color='firebrick', width=4)))\n    fig.add_trace(go.Scatter(x=df_e.index, y=df_e.Value_of_Export, name = 'Export',mode='lines+markers',line=dict(color='royalblue', width=4)))\n    fig.update_layout(title=go.layout.Title(text=\"Yearwise Trade Import\/Export\", xref=\"paper\",x=0),\n    xaxis=go.layout.XAxis(title=go.layout.xaxis.Title(text=\"Year\",font=dict(family=\"Courier New, monospace\", size=18, color=\"#7f7f7f\"))),\n    yaxis=go.layout.YAxis(title=go.layout.yaxis.Title(text=\"Value\", font=dict( family=\"Courier New, monospace\",size=18,color=\"#7f7f7f\"))))\n    fig.show()'''","3db64ce5":"def bar_plot(Country, title):\n    print(title)\n    df_e = data_export[data_export.Country == Country]\n    df_i = data_import[data_import.Country == Country]\n    df_e['Sections Name'] = df_e['2HSCode']\n    df_i['Sections Name'] = df_i['2HSCode']\n    for i in range(1,22):\n        df_e.loc[(df_e['Sections Name'] >= HSCode['Start'][i]) & (df_e['Sections Name'] <= HSCode['End'][i]),'Sections Name']=i\n        df_i.loc[(df_i['Sections Name'] >= HSCode['Start'][i]) & (df_i['Sections Name'] <= HSCode['End'][i]),'Sections Name']=i\n    exp_hscode = df_e.groupby(['Sections Name']).agg({'Value_of_Export':'sum'})\n    exp_hscode['Sections Name'] = HSCode['Sections Name']\n    exp_hscode = exp_hscode.sort_values(['Value_of_Export']).reset_index(drop=True)\n    imp_hscode = df_i.groupby(['Sections Name']).agg({'Value_of_Import':'sum'})\n    imp_hscode = imp_hscode.sort_values(['Value_of_Import']).reset_index(drop=True)\n    imp_hscode['Sections Name'] = HSCode['Sections Name']\n    global ax\n    font_size = 20\n    title_size =30\n    plt.rcParams['figure.figsize'] = (15,9)\n    ax = sns.barplot(exp_hscode.Value_of_Export, exp_hscode['Sections Name'], palette = 'Paired')\n    ax.set_xlabel(xlabel = 'USD (millions)', fontsize = font_size)\n    ax.set_ylabel(ylabel = 'Sections Name', fontsize = font_size)\n    ax.set_title(label = 'Export of India (HS Classification is based)', fontsize = title_size)\n    plt.xticks(rotation = 90, fontsize=15)\n    plt.yticks(fontsize=15)\n    plt.show()\n    \n    plt.rcParams['figure.figsize'] = (15,9)\n    ax = sns.barplot(imp_hscode.Value_of_Import, imp_hscode['Sections Name'], palette = 'Set1')\n    ax.set_xlabel(xlabel = 'USD (millions)', fontsize = font_size)\n    ax.set_ylabel(ylabel = 'Sections Name', fontsize = font_size)\n    ax.set_title(label = 'Import of India (HS Classification is based)', fontsize = title_size)\n    plt.xticks(rotation = 90, fontsize=15)\n    plt.yticks(fontsize=15)\n    plt.show()\n    \n","40d47ba6":"Country = 'CHINA P RP'\ntitle = 'China'\ncountry_graph(Country, title)\nbar_plot(Country, title)","e3fe6506":"Country = 'USA'\ntitle = 'USA'\ncountry_graph(Country, title)\nbar_plot(Country, title)","7f926361":"Country = 'U ARAB EMTS'\ntitle = 'U ARAB EMTS'\ncountry_graph(Country, title)","ce4584a3":"Country = 'SAUDI ARAB'\ntitle = 'Saudi Arab'\ncountry_graph(Country, title)\nbar_plot(Country, title)","5fea3b04":"Country = 'SWITZERLAND'\ntitle = 'SWITZERLAND'\ncountry_graph(Country, title)","c947e1b8":"Country = 'FRANCE'\ntitle = 'FRANCE'\ncountry_graph(Country, title)\nbar_plot(Country, title)","9f58a096":"Country = 'U ARAB EMTS'\ntitle = 'U ARAB EMTS'\ncountry_graph(Country, title)\nbar_plot(Country, title)","c0934488":"Country = 'U K'\ntitle = 'U K'\ncountry_graph(Country, title)\nbar_plot(Country, title)","63a6468c":"Country = 'AUSTRALIA'\ntitle = 'AUSTRALIA'\ncountry_graph(Country, title)\nbar_plot(Country, title)","6a96e34b":"Country = 'INDONESIA'\ntitle = 'INDONESIA'\ncountry_graph(Country, title)\nbar_plot(Country, title)","4ff2a7b4":"Country = 'SINGAPORE'\ntitle = 'SINGAPORE'\ncountry_graph(Country, title)\nbar_plot(Country, title)","6a120176":"Country = 'HONG KONG'\ntitle = 'HONG KONG'\ncountry_graph(Country, title)\nbar_plot(Country, title)","217884f9":"Country = 'IRAQ'\ntitle = 'IRAQ'\ncountry_graph(Country, title)\nbar_plot(Country, title)","e5ffc56c":"Country = 'KOREA RP'\ntitle = 'KOREA RP'\ncountry_graph(Country, title)\nbar_plot(Country, title)","46887c3e":"gdp = pd.read_csv('\/kaggle\/input\/india-gdp-growth-world-bank-1961-to-2017\/India GDP from 1961 to 2017.csv', index_col = 0)\ngdp.rename({'1961':'Year','3.722742533':'gdp'}, inplace=True, axis = 1)\n#gdp.set_index('Year')\ngdp.drop(gdp.head(35).index, inplace=True)\ngdp.info()\ngdp","07197e58":"gdp_year= pd.concat((df3,df4,gdp),axis=1)","3512a8bf":"gdp_year","b6bfee7f":"#sns.scatterplot(x='gdp', y='Value_of_Export', data = gdp_year)\n\n#sns.lineplot(y=gdp_year.Value_of_Import, x=gdp_year.index)\n","b1ab7174":"#sns.lineplot(y = gdp_year.gdp, x = gdp_year.index)","e73d881b":"## Plaese Upvote this notebook if you find this helpful ##\n","c541e9f0":"Indian exports have come a long way from the time of independence in terms of value. The total value of India\u2019s merchandise exports increased from USD 1.3 billion in 1950-51 to USD 63.8 billion in 2003-04 \u2013 a compound rate of 7.6 per cent.Indian economy and foreign trade has shown progress post liberalization. In contrast to the pre-reform period (1950-90), the actual growth of exports in the post-reform period has been above the potential offered by the growth of world demand. The gap between the actual and potential is mainly explained by an improvement in the overall competitiveness of India\u2019s exports.","56018fce":"**We can clearly see that there are missing values in commodity column**\n\n**We have to change formate of Year and its data type**","5763bfb0":"# To be continued....","8f8ed698":"<a id=\"3\"><\/a>\n<h2 style='background:green; border:0; color:white'><center>3. Data Visvualization<\/center><h2>","613cceb8":"**Only 98 entries are available here. HS Code 77 is not used here as it is being reserver for future use.**","47b370fa":"\n ### **What is HS Code**\n \n HSCode:- HS stands for Harmonized System. It was developed by the WCO (World Customs Organization) as a multipurpose international product nomenclature that describes the type of good that is shipped.\n \n###  **What is Commodity**\n \n In economics, a commodity is defined as a tangible good that can be bought and sold or exchanged for products of similar value. Natural resources such as oil as well as basic foods like corn are two common types of commodities. Like other classes of assets such as stocks, commodities have value and can be traded on open markets. And like other assets, commodities can fluctuate in price according to supply and demand.\n* **Value**: values for export and import of commodities in million US $.\n* **Export**: Exports are the goods and services produced in one country and purchased by residents of another country.\n* **Import**: Imports are foreign goods and services bought by residents of a country. Residents include citizens, businesses, and the government.\n* **Country**: Country Imported From\/ Exported To\n* **Year**: Year in which comodities where Imported\/Exported which is in between 2010 to 2018.","09ed886e":"* [1. Data Loading and Overview](#1)\n* [2. Data Cleaning](#2)\n* [3. Data Visvualization](#3)\n* [4. Country wise trade](#4)","90e698c7":"# Effect Of GDP on Import and Export","74dddeef":"<a id=\"2\"><\/a>\n<h2 style='background:green; border:0; color:white'><center>2. Data Cleaning<\/center><h2>","c6504784":"## Thank You","f33637a6":"### **2000 was the only year when india has positive trade deficit**","224dba28":"<a id=\"1\"><\/a>\n<h2 style='background:green; border:0; color:white'><center>1. Data Loading and Overview<\/center><h2>","5ec18664":"<a id=\"4\"><\/a>\n<h2 style='background:green; border:0; color:white'><center>4. Country wise trade<\/center><h2>","11c6a09c":"### Major Items which india Imports from other Countries\n**HS Code 27** - Mineral Fuels, Mineral Oils and Products of their Distillation; Bituminous Substances; Mineral Waxes\n\n**HS Code 71** - Natural or cultured pearls, precious or semiprecious stones, precious metals, metals clad with precious metal, and articles thereof, imitation jewellery, coin.\n\n**HS Code 85** -  Electrical Machinery And Equipment And Parts Thereof; Sound Recorders And Reproducers, Television Recorders And Reproducers, Parts And Accessories.\n\n**HS Code 84** - Nuclear reactors, boilers, machinery and mechanical appliances.","3de4b123":"<div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n<h2 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:green; border:0; color:white' role=\"tab\" aria-controls=\"home\"><center>Indian Foreign Trade<\/center><\/h2>","1dea6f13":"## Check Yearwise Data"}}