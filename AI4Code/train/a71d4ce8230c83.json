{"cell_type":{"8907e052":"code","10d46de9":"code","50b461db":"code","23ea2693":"markdown","2c4c3f26":"markdown","54b128a2":"markdown","d40c9272":"markdown"},"source":{"8907e052":"import numpy  as np\nimport pandas as pd\n\ntrain_data = pd.read_csv('..\/input\/santander-customer-satisfaction\/train.csv',index_col=0)\ntest_data  = pd.read_csv('..\/input\/santander-customer-satisfaction\/test.csv', index_col=0)\nsample     = pd.read_csv('..\/input\/santander-customer-satisfaction\/sample_submission.csv')\n\nX_train = train_data.iloc[:,:-1]\ny_train = train_data['TARGET']","10d46de9":"# To use this experimental feature, we need to explicitly ask for it:\nfrom sklearn.experimental import enable_hist_gradient_boosting\nfrom sklearn.ensemble import HistGradientBoostingClassifier\n\nclassifier =  HistGradientBoostingClassifier()\nclassifier.fit(X_train,y_train)\n\nfrom sklearn.model_selection import cross_val_score\nCVscores = cross_val_score(classifier, X_train, y_train, scoring='roc_auc', cv=2) \nprint(\"The average CV score is\",CVscores.mean())\n\npredictions = classifier.predict_proba(test_data)[:,1]","50b461db":"sample.iloc[:,1:] = predictions\nsample.to_csv('submission.csv',index=False)","23ea2693":"now for the Histogram Gradient Boosting","2c4c3f26":"# Related links\n* [Aleksei Guryanov \"Histogram-Based Algorithm for Building Gradient Boosting Ensembles of Piecewise Linear Decision Trees\", In: van der Aalst W. et al. (eds) Analysis of Images, Social Networks and Texts. AIST 2019. Lecture Notes in Computer Science, vol 11832. Springer (2019)](https:\/\/link.springer.com\/chapter\/10.1007%2F978-3-030-37334-4_4)","54b128a2":"# Histogram Gradient Boosting Classification\nThis is a basic test of the experimental *histogram-based gradient boosting classification tree estimator* which is now available in scikit-learn as [sklearn.ensemble.HistGradientBoostingClassifier](https:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.HistGradientBoostingClassifier.html). For large datasets this algorithm is *very* fast! \n\nWe shall be using the [Santander Customer Satisfaction](https:\/\/www.kaggle.com\/c\/santander-customer-satisfaction) data. The winning Private Score for this competition was `0.82907` which was achieved using an ensemble solution. Here we obtain a Private Score of `0.82066` with no feature engineering whatsoever.","d40c9272":"and write out a `submission.csv` file"}}