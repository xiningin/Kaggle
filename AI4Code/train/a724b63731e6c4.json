{"cell_type":{"f05336b7":"code","74b39d09":"code","9d54fef4":"code","fbf8272a":"code","d02e4188":"code","46f68f2c":"code","5f617e2a":"code","f19b22e5":"code","5a8e2923":"code","a420dfba":"code","f28a441e":"code","262c29ba":"code","fbd26511":"code","7460318e":"code","8c885048":"code","54953c4f":"code","4f37afd7":"code","9305f57e":"code","b8054fcc":"code","125f7c70":"code","a0fc5d9e":"code","b6324c99":"code","23e41f25":"code","00443982":"code","e57e59b3":"code","7641d669":"code","eccb984c":"code","a7904b15":"code","c402a0bd":"code","d1abac82":"code","60fa1fa3":"code","d30aba94":"code","7ebb6d47":"code","4b68bc99":"code","27f8acd1":"code","7356eea8":"code","40d16ede":"code","64148014":"code","1cb1a5e4":"markdown","2d243014":"markdown","69e9d1cd":"markdown","17d95986":"markdown"},"source":{"f05336b7":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","74b39d09":"df=pd.read_csv('..\/input\/energy-molecule\/roboBohr.csv')\ndf.head()","9d54fef4":"#Unnamed: 0 adl\u0131 de\u011fi\u015fkeni silme:\n#to clear which name is Unnamed: 0 columns\ndf=df.drop(['Unnamed: 0'],axis=1)","fbf8272a":"df.head()","d02e4188":"#our dataset have 16242 observation units and 1277 columns\ndf.shape","46f68f2c":"#the dataset have n\u00fcmeric variable(float64,int64),not catogarical columns(object,categorical)\ndf.info()","5f617e2a":"#have the dataset any null values in the observation? :No\ndf.isnull().sum().sum()","f19b22e5":"df.describe().T","5a8e2923":"#we add the independent variables to x variable\n#we add the dependent variable to y variable\nx=df.drop(['pubchem_id','Eat'],axis=1)\ny=df['Eat']","a420dfba":"#independent variables\nx.head()","f28a441e":"#dependent variable\ny[0:10]","262c29ba":"df.corr()","fbd26511":"#now we will train-test split\n#we will use function of train_test_split\nfrom sklearn.model_selection import train_test_split","7460318e":"#train-test split:\n#test_size:%80 train dataset,%20 test dataset\nx_train,x_test,y_train,y_test=train_test_split(x,y,\n                                              test_size=0.20,\n                                              random_state=42)","8c885048":"#we look new size of train and test dataset:\nprint('x_train_shape:',x_train.shape)\nprint('x_test_shape:',x_test.shape)\nprint('y_train_shape:',y_train.shape)\nprint('y_test_shape',y_test.shape)","54953c4f":"#now we will build a model\n#we will use BaggingRegressor algorithm.\nfrom sklearn.ensemble import BaggingRegressor","4f37afd7":"bag_model=BaggingRegressor(bootstrap_features=True) #object of model\nbag_model.fit(x_train,y_train) #we fit the model and the model was builded","9305f57e":"#we can learn hyperparameter which have model of bag_model(BaggedTrees algoritm)\n# ?bag_model","b8054fcc":"#now we will learn how many trees have our model:\nbag_model.n_estimators","125f7c70":"#the model 10 trees,we will examine feautures of each trees:\nbag_model.estimators_","a0fc5d9e":"#we will see how many observation units each trees\n#this number is number of index the observation units\nbag_model.estimators_samples_","b6324c99":"bag_model.estimators_samples_[0].shape","23e41f25":"bag_model.estimators_samples_[1].shape","00443982":"#we will see independet values of each trees\nbag_model.estimators_features_","e57e59b3":"bag_model.estimators_features_[0].shape","7641d669":"from sklearn.metrics import mean_squared_error,r2_score","eccb984c":"y_pred=bag_model.predict(x_test)","a7904b15":"#predicted values:\ny_pred","c402a0bd":"#we will see primitive test error.\n#this test error;bu test hatas\u0131,10 a\u011fac\u0131n herbirinin verdi\u011fi tahminleri bir araya getirerek olu\u015fturud\u011fu tahminlerdir:\nnp.sqrt(mean_squared_error(y_test,y_pred))","d1abac82":"#ba\u011f\u0131ms\u0131z de\u011fi\u015fkenlerin,ba\u011f\u0131ml\u0131 de\u011fi\u015fkeni a\u00e7\u0131klama ba\u015far\u0131s\u0131:\nr2_score(y_test,y_pred)","60fa1fa3":"#2.a\u011fa\u00e7:\niki_y_pred=bag_model.estimators_[1].fit(x_train,y_train).predict(x_test) #model kuruldu ve tahmin yap\u0131ld\u0131","d30aba94":"np.sqrt(mean_squared_error(y_test,iki_y_pred))","7ebb6d47":"r2_score(y_test,iki_y_pred)","4b68bc99":"\"\"\"\n#model nesnemizi yazal\u0131m:\nbag_model=BaggingRegressor(bootstrap_features=True)\nbag_model.fit(x_train,y_train)\n\"\"\"","27f8acd1":"\"\"\"\n#hiperparametre aral\u0131klar\u0131:\nbag_params={\"n_estimators\":range(2,5)}\n\"\"\"","7356eea8":"from sklearn.model_selection import GridSearchCV","40d16ede":"\"\"\"\nbag_cv_model=GridSearchCV(bag_model,\n                         bag_params,\n                         cv=10).fit(x_train,y_train)\n\"\"\"","64148014":"\"\"\"\n#final model:\nbag_tuned_model=BaggingRegressor(bootstrap_features=True,n_estimators=bag_cv_model.best_params).fit(x_train,y_train)\n#tahmin\ny_pred=bag_tuned_model.predict(x_test)\n#test hatas\u0131:\nnp.sqrt(mean_squared_error(y_test,y_pred))\n#r*2 skoru:\nr2_score(y_test,y_pred)\n\"\"\"","1cb1a5e4":"* normalde 10 tane a\u011fac\u0131m\u0131z vard\u0131\n* \u015fimdi herhangi bir a\u011fac\u0131 al\u0131p sadece o a\u011fa\u00e7la model kurup,test hatas\u0131n\u0131 g\u00f6relim:\n* \u00f6rne\u011fin 2.a\u011fac\u0131 alal\u0131m","2d243014":"* The important Hyperparameter of Bagged Trees algorithm:\n* n_estimator:counts of trees which was builded in model","69e9d1cd":"## Model Tuning:","17d95986":"## Predict:"}}