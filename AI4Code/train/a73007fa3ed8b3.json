{"cell_type":{"3b7c07a3":"code","52ca51b1":"code","fec095f9":"code","2a4e3059":"code","73365de7":"code","b9d29c09":"code","eae12f3a":"code","1f45a393":"code","e13116b0":"code","e216eaeb":"code","36021118":"code","12ead4d5":"code","b58c5410":"code","68ab96cb":"code","b8083efa":"code","0f6f2481":"code","1b52944c":"code","4edd91ad":"code","37b2e89f":"code","c9155291":"code","64f59954":"code","8355be83":"code","60ffb665":"code","861dca01":"code","dabf3e46":"code","5a34f636":"code","70b99a8b":"markdown"},"source":{"3b7c07a3":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","52ca51b1":"df=pd.read_csv(\"..\/input\/videogamesales\/vgsales.csv\")","fec095f9":"df.head()","2a4e3059":"df.columns=[\"rank\",\"name\",\"platform\",\"year\",\"genre\",\"publisher\",\"na_sales\",\"eu_sales\",\"jp_sales\",\"other_sales\",\"global_sales\"]","73365de7":"df.tail()","b9d29c09":"df.isnull().sum()","eae12f3a":"def impute_median(series):\n    return series.fillna(series.median())","1f45a393":"df.year =df[\"year\"].transform(impute_median)","e13116b0":"df[\"year\"]=df[\"year\"].apply(lambda x: str(x).replace('.0','') if '' in str(x) else str(x))","e216eaeb":"print(df[\"publisher\"].mode())","36021118":"df[\"publisher\"].fillna(str(df[\"publisher\"].mode().values[0]),inplace=True)","12ead4d5":"df.isnull().sum()","b58c5410":"df.shape","68ab96cb":"df.info()","b8083efa":"df.describe().T","0f6f2481":"fig = plt.figure(figsize = (10,10))\nax = fig.gca()\ndf.hist(ax = ax)\nplt.show()","1b52944c":"df.nunique()","4edd91ad":"plt.figure(figsize=(18,6))\nresult = df.groupby([\"genre\"])['global_sales'].aggregate(np.median).reset_index().sort_values('global_sales')\nsns.barplot(y=df['global_sales'], x=df[\"genre\"], data=df, order=result['genre'])\nplt.title('genre by global_sales')\nplt.show()","37b2e89f":"plt.figure(figsize=(18,6))\nresult = df.groupby([\"platform\"])['global_sales'].aggregate(np.median).reset_index().sort_values('global_sales')\nsns.barplot(y=df['global_sales'], x=df[\"platform\"], data=df, order=result['platform'])\nplt.title('platform by global_sales')\nplt.show()","c9155291":"fig=plt.figure(figsize=(18,10))\nsns.boxplot(df.genre[:750],df.global_sales[:750])\nplt.xticks(rotation=90)\nplt.show()","64f59954":"plt.figure(figsize=(18,10))\nax = df.na_sales[:100].plot.kde()\nax = df.eu_sales[:100].plot.kde()\nax = df.jp_sales[:100].plot.kde()\nax = df.other_sales[:100].plot.kde()\nax= df.global_sales[:100].plot.kde()\nax.legend()\nplt.show()","8355be83":"labels = df.genre.value_counts().index\ncolors = [\"orange\",\"gray\",\"silver\",\"whitesmoke\",\"rosybrown\",\n          \"firebrick\",\"red\",\"darksalmon\",\"sienna\",\"sandybrown\",\n          \"bisque\",\"tan\"]\nexplode = [0,0,0,0,0,\n           0,0,0,0,0,\n           0,0]\nsizes = df.genre.value_counts().values\n\n# visual \nplt.figure(0,figsize = (18,18))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Games According to Genre',color = 'blue',fontsize = 15)\nplt.show()","60ffb665":"labels = df.platform.value_counts().index\ncolors = [\"orange\",\"gray\",\"silver\",\"whitesmoke\",\"rosybrown\",\n          \"firebrick\",\"red\",\"darksalmon\",\"sienna\",\"sandybrown\",\n          \"bisque\",\"tan\",\"moccasin\",\"floralwhite\",\"gold\",\n          \"darkkhaki\",\"olivedrab\",\"palegreen\",\"lightseagreen\",\"darkcyan\",\n          \"deepskyblue\",\"lime\",\"tomato\",\"mediumpurple\",\"maroon\",\n          \"coral\",\"olive\",\"yellowgreen\",\"violet\",\"crimson\",\n          \"pink\"]\nexplode = [0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0]\nsizes = df.platform.value_counts().values\n\n# visual \nplt.figure(0,figsize = (18,18))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Games According to Platform',color = 'blue',fontsize = 15)\nplt.show()","861dca01":"labels = df.year.value_counts().index\ncolors = [\"orange\",\"gray\",\"silver\",\"whitesmoke\",\"rosybrown\",\n          \"firebrick\",\"red\",\"darksalmon\",\"sienna\",\"sandybrown\",\n          \"bisque\",\"tan\",\"moccasin\",\"floralwhite\",\"gold\",\n          \"darkkhaki\",\"olivedrab\",\"palegreen\",\"lightseagreen\",\"darkcyan\",\n          \"deepskyblue\",\"lime\",\"tomato\",\"mediumpurple\",\"maroon\",\n          \"coral\",\"olive\",\"yellowgreen\",\"violet\",\"crimson\",\n          \"pink\",\"hotpink\",\"navajowhite\",\"peachpuff\",\"powderblue\",\n         \"palegoldenrod\",\"mediumturquoise\",\"dodgerblue\",\"royalblue\"]\nexplode = [0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0,0,\n           0,0,0,0]\nsizes = df.year.value_counts().values\n\n# visual \nplt.figure(0,figsize = (18,18))\nplt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%')\nplt.title('Games According to Year',color = 'blue',fontsize = 15)\nplt.show()","dabf3e46":"from wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.publisher)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"white\").generate(text)\nplt.figure(figsize=(18,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","5a34f636":"from wordcloud import WordCloud, ImageColorGenerator\ntext = \" \".join(str(each) for each in df.name)\n# Create and generate a word cloud image:\nwordcloud = WordCloud(max_words=200, background_color=\"white\").generate(text)\nplt.figure(figsize=(18,10))\n# Display the generated image:\nplt.imshow(wordcloud, interpolation='bilinear')\nplt.axis(\"off\")\nplt.show()","70b99a8b":"to be continued..."}}