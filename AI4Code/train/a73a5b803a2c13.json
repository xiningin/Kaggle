{"cell_type":{"141beede":"code","d60a276b":"code","9c1d1527":"code","9cf5281c":"code","f48bb3c2":"code","73c02d62":"code","9cadbd68":"code","e7388436":"code","516824ff":"code","b6e652a3":"code","e64d661b":"code","fe788499":"code","a1bd0cfa":"code","1c0607d2":"code","50c1441d":"code","411aca36":"code","0b0d5646":"code","32abca04":"code","a5f2645d":"code","483e13c6":"code","2f0bd789":"code","37ca5242":"markdown","99c32bae":"markdown","376facb6":"markdown","a7c6a7dc":"markdown","89b08ee8":"markdown","7402c9f1":"markdown","126e49d7":"markdown","a4645ec1":"markdown","8751e71a":"markdown","6c4fd0dd":"markdown","3e16e4bf":"markdown","bceac404":"markdown","0ce6ac0f":"markdown","e38ac4c4":"markdown","a0de1c19":"markdown","b62b3cd6":"markdown","7156bcd1":"markdown","e4ff416c":"markdown"},"source":{"141beede":"import pandas as pd\nimport numpy as np","d60a276b":"data = {\n    'birds': [\n        'Cranes', 'Cranes', 'plovers', 'spoonbills', 'spoonbills', 'Cranes',\n        'plovers', 'Cranes', 'spoonbills', 'spoonbills'\n    ],\n    'age': [3.5, 4, 1.5, np.nan, 6, 3, 5.5, np.nan, 8, 4],\n    'visits': [2, 4, 3, 4, 3, 4, 2, 2, 3, 2],\n    'priority':\n    ['yes', 'yes', 'no', 'yes', 'no', 'no', 'no', 'yes', 'no', 'no']\n}\n\nlabels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']","9c1d1527":"df = pd.DataFrame.from_dict(data)\nlabels = pd.DataFrame.from_dict(labels)","9cf5281c":"df['labels'] = labels\ndf = df.set_index('labels')\n\ndf","f48bb3c2":"df.describe()","73c02d62":"df[1:3]","9cadbd68":"df[['birds', 'age']]","e7388436":"df[['birds', 'age', 'visits']].iloc[[2, 3, 7]]","516824ff":"df[df['visits']<4]","b6e652a3":"temp= df[df['age'].isnull()]\ntemp[['birds', 'visits']]","e64d661b":"df[(df['birds'] == 'Cranes') & (df['age'] < 4)]","fe788499":"df[(df['age'] <= 4) & (df['age'] >= 2)]","a1bd0cfa":"# df[df['birds'] == 'Cranes']\ndf[(df['birds'] == 'Cranes') & (df['visits'].notnull())].sum()","1c0607d2":"birds = df.groupby('birds')\n\nfor bird, bird_df in birds:\n    print(bird, bird_df['age'].mean())","50c1441d":"df.loc['k'] = ['Cranes', 3.5, 3, 'yes']\ndf","411aca36":"df = df.drop('k')\ndf","0b0d5646":"df['birds'].value_counts()","32abca04":"df.sort_values('age')","a5f2645d":"df.sort_values('visits')","483e13c6":"df['priority'] = df['priority'].replace({'yes': 1, 'no': 0})\ndf","2f0bd789":"df['birds'] = df['birds'].replace({'Cranes': 'trumpeters'})\ndf","37ca5242":"## 12. Find the number of each type of birds in dataframe (Counts)**","99c32bae":"## 4. Select [2, 3, 7] rows and in columns ['birds', 'age', 'visits']**","376facb6":"## 3. Print all the rows with only 'birds' and 'age' columns from the dataframe**","a7c6a7dc":"## 13. Sort dataframe (birds) first by the values in the 'age' in decending order, then by the value in the 'visits' column in ascending order.","89b08ee8":"## 15. In the 'birds' column, change the 'Cranes' entries to 'trumpeters'.","7402c9f1":"## 1. Display a summary of the basic information about birds DataFrame and its data.","126e49d7":"## 2. Print the first 2 rows of the birds dataframe","a4645ec1":"## 10. Calculate the mean age for each different birds in dataframe.","8751e71a":"## 8. Select the rows the age is between 2 and 4(inclusive)","6c4fd0dd":"## Create a DataFrame birds from this dictionary data which has the index labels.","3e16e4bf":"# Pandas Basics","bceac404":"- Consider the following Python dictionary data and Python list labels:\n","0ce6ac0f":"## 9. Find the total number of visits of the bird Cranes","e38ac4c4":"## 11. Append a new row 'k' to dataframe with your choice of values for each column. Then delete that row to return the original DataFrame.","a0de1c19":"## 14. Replace the priority column values with 'yes' should be 1 and 'no' should be 0","b62b3cd6":"## 6. Select the rows with columns ['birds', 'visits'] where the age is missing i.e NaN","7156bcd1":"## 5. Select the rows where the number of visits is less than 4","e4ff416c":"## 7. Select the rows where the birds is a Cranes and the age is less than 4"}}