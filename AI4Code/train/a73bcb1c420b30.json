{"cell_type":{"6a567e00":"code","0f3538b8":"code","29cc015d":"code","8f605205":"code","4e883160":"code","9cc581c2":"code","55afdf80":"code","9a4ead17":"code","d03397e4":"code","c9f915bb":"code","85c3a07e":"code","ae9b7f32":"code","1adbed27":"code","dc15feaf":"code","c6dcd68e":"code","bce207b9":"code","d9980857":"code","51ce438f":"code","c3e75d6e":"code","02f0e357":"code","5bf6c553":"code","81940ea7":"code","a7051d99":"code","2aeb46c2":"markdown","cd0fe0a3":"markdown","2c3d5c8d":"markdown","2bedb84a":"markdown","e865a333":"markdown","41c5451a":"markdown","de7c7cc0":"markdown","f93b95c6":"markdown","9fa4350a":"markdown"},"source":{"6a567e00":"import numpy as np\nimport pandas as pd\n\nimport plotly.graph_objs as go\nimport plotly.express as px\n\nimport matplotlib.pyplot as plt\n\nfrom statsmodels.tsa.arima_model import ARIMA","0f3538b8":"df = pd.read_csv('\/kaggle\/input\/us-police-shootings\/shootings.csv')\ndf.head(10)","29cc015d":"for col in df.columns:\n    print(col, str(round(100* df[col].isnull().sum() \/ len(df), 2)) + '%')","8f605205":"data = df['manner_of_death'].value_counts().reset_index()\n\ndata.columns = [\n    'manner_of_death', \n    'count'\n]\n\nfig = px.pie(\n    data, \n    values='count', \n    names='manner_of_death', \n    title='Manner of death', \n    width=500, \n    height=500\n)\n\nfig.show()","4e883160":"data = df['armed'].value_counts().reset_index()\n\ndata.columns = [\n    'armed', \n    'count'\n]\n\ndata = data.sort_values('count')\n\nfig = px.bar(\n    data.tail(25), \n    x='count', \n    y='armed', \n    orientation='h', \n    title='Weapon', \n    width=800, \n    height=800\n)\n\nfig.show()","9cc581c2":"fig = px.histogram(\n    df, \n    \"age\", \n    nbins=80, \n    title ='Age distribution', \n    width=800,\n    height=500\n)\n\nfig.show()","55afdf80":"fig = go.Figure(\n    data=go.Violin(\n        y=df['age'], \n        x0='Age'\n    )\n)\n\nfig.show()","9a4ead17":"data = df['gender'].value_counts().reset_index()\n\ndata.columns = [\n    'gender', \n    'count'\n]\n\nfig = px.pie(\n    data, \n    values='count', \n    names='gender',  \n    title='Gender distribution', \n    width=500, \n    height=500\n)\n\nfig.show()","d03397e4":"data = df['race'].value_counts().reset_index()\n\ndata.columns = [\n    'race', \n    'count'\n]\n\ndata = data.sort_values('count')\n\nfig = px.bar(\n    data, \n    x='count', \n    y='race', \n    orientation='h', \n    title='Race distribution', \n    width=600,\n    height=600\n)\n\nfig.show()","c9f915bb":"city = df.groupby('city')['name'].count().reset_index().sort_values('name', ascending=True).tail(50)\n\nfig = px.bar(\n    city, \n    x=\"name\", \n    y=\"city\", \n    orientation='h',\n    title=\"Top 50 cities by deaths\", \n    width=800, \n    height=900\n)\n\nfig.show()","85c3a07e":"df[\"date\"] = pd.to_datetime(df[\"date\"])\ndf[\"weekday\"] = df[\"date\"].dt.weekday\ndf['month'] = df['date'].dt.month\ndf['month_day'] = df['date'].dt.day\ndf['year'] = df['date'].dt.year","ae9b7f32":"data = df.groupby(['weekday'])['name'].count().reset_index()\n\ndata.columns = [\n    'weekday', \n    'count'\n]\n\nfig = px.bar(\n    data, \n    x='weekday', \n    y='count',\n    orientation='v', \n    title='Day of week', \n    width=600\n)\n\nfig.show()","1adbed27":"data = df.groupby(['month'])['name'].count().reset_index()\n\ndata.columns = [\n    'month', \n    'count'\n]\n\nfig = px.bar(\n    data, \n    x='month', \n    y='count', \n    orientation='v', \n    title='Month of year', \n    width=800\n)\n\nfig.show()","dc15feaf":"data = df.groupby(['month_day'])['name'].count().reset_index()\n\ndata.columns = [\n    'month_day', \n    'count'\n]\n\nfig = px.bar(\n    data, \n    x='month_day', \n    y='count', \n    orientation='v', \n    title='Day of month', \n    width=800\n)\n\nfig.show()","c6dcd68e":"data = df.groupby(['year'])['name'].count().reset_index()\n\ndata.columns = [\n    'year', \n    'count'\n]\n\nfig = px.bar(\n    data, \n    x='year', \n    y='count',\n    orientation='v', \n    title='Year', \n    width=600\n)\n\nfig.show()","bce207b9":"df['month_year'] = pd.to_datetime(df['date']).dt.to_period('M')\ndf.head()","d9980857":"data = df.groupby(['month_year'])['name'].count().reset_index()\n\ndata.columns = [\n    'month_year', \n    'count'\n]\n\ndata['month_year'] = data['month_year'].astype(str)\n\nfig = px.bar(\n    data, \n    x='month_year', \n    y='count', \n    orientation='v', \n    title='Deaths by months', \n    width=800\n)\n\nfig.show()","51ce438f":"data = df.groupby(['flee'])['name'].count().reset_index()\n\ndata.columns = [\n    'flee', \n    'count'\n]\n\nfig = px.bar(\n    data, \n    x='flee', \n    y='count', \n    orientation='v', \n    title='Flee distribution', \n    width=600\n)\nfig.show()","c3e75d6e":"data = df.groupby(['month_year'])['name'].count().reset_index()\n\ndata.columns = [\n    'month_year', \n    'count'\n]\n\ndata['month_year'] = data['month_year'].astype(str)\ndata = data.head(65)\n\nfig = px.line(\n    data, \n    x=\"month_year\", \n    y=\"count\", \n    title='Deaths month by month'\n)\n\nfig.show()","02f0e357":"model = ARIMA(\n    data['count'], \n    order=(3,1,1)\n)\nmodel_fit = model.fit(disp=0)\nprint(model_fit.summary())","5bf6c553":"model_fit.plot_predict(dynamic=False)\nplt.show()","81940ea7":"preds, _, _ = model_fit.forecast(\n    19, \n    alpha=0.05\n)\npreds = preds.tolist()\npreds = [\n    int(item) for item in preds\n]\n\nmonths = [\n    '2020-06', '2020-07', '2020-08', \n    '2020-09', '2020-10', '2020-11', \n    '2020-12', '2021-01', '2021-02', \n    '2021-03', '2021-04', '2021-05', \n    '2021-06', '2021-07', '2021-08', \n    '2021-09', '2021-10', '2021-11', \n    '2021-12'\n]\n\nnew_df = pd.DataFrame()\nnew_df['month_year'] = months\nnew_df['count'] = preds\ndata = pd.concat([data, new_df])","a7051d99":"fig = px.line(\n    data, \n    x=\"month_year\", \n    y=\"count\", \n    title='Deaths month by month with predictions'\n)\n\nfig.show()","2aeb46c2":"<a id=\"1\"><\/a>\n<center><h2 style='background:black; border:0; color:white'>Data Analysis<h2><center>","cd0fe0a3":"### We will use simple ARIMA model for forecasting","2c3d5c8d":"NaNs percent for every column.","2bedb84a":"<a id=\"2\"><\/a>\n<center><h2 style='background:black; border:0; color:white'>Date feature engineering<h2><center>","e865a333":"## Hello everyone!\n\n### In this kernel I am going to present some basic EDA for this dataset and show simple modeling for time series data.","41c5451a":"<a id=\"3\"><\/a>\n<center><h2 style='background:black; border:0; color:white'>Predict number of deaths until the end of 2021<h2><center>","de7c7cc0":"### Lets extract some standard features from date and check them","f93b95c6":"We can see that the most popular weapons are gun and knife.","9fa4350a":"<a id=\"top\"><\/a>\n\n<center><h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:Black; border:0' role=\"tab\" aria-controls=\"home\">Quick navigation<\/h3><\/center>\n\n* [1. Data Analysis](#1)\n* [2. Date feature engineering](#2)\n* [3. Predict number of deaths until the end of 2021](#3)"}}