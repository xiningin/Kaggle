{"cell_type":{"3e361f86":"code","f884f77b":"code","ce2efe10":"code","ddac1fa6":"code","f966f137":"code","99bce939":"code","81ab711b":"code","ed388504":"code","4b366c84":"code","4cae3a40":"code","8a7fde83":"code","8002dd35":"code","f89793d6":"code","f0d1da59":"code","b1581719":"code","2ee0a371":"code","720d6aeb":"code","46be1f39":"code","6b364c4e":"code","c1aa3d0d":"code","fa951470":"code","a1407547":"code","34f97379":"code","6b3bc38f":"code","b355b9fe":"code","41797496":"code","72b9450a":"code","f83feafa":"code","6c25e174":"code","a8ea9f1c":"code","00ad1b7a":"code","ba5524c3":"code","39b9b0c6":"code","d7349b0e":"code","4edf8bf6":"markdown","2107f9ea":"markdown"},"source":{"3e361f86":"import pandas as pd\nimport numpy as np","f884f77b":"data = pd.read_csv(\"data.csv\", parse_dates=['Data'])","ce2efe10":"data","ddac1fa6":"resultados = list()\nfor gc, gf in data[['Gols Casa', 'Gols Fora']].values:\n    if gc > gf:\n        resultados.append(1)\n    elif gf > gc:\n        resultados.append(-1)\n    else:\n        resultados.append(0)\ndata['resultados'] = resultados","f966f137":"ix = [\"Edi\u00e7\u00e3o\",\"time\"]\ngrupos = data[data['Fase'].str.contains(\"Grupo\")]\nnewnames_casa = {\"Casa\": \"time\", -1: \"derrota\", 0:\"empate\", 1:\"vitoria\"}\nnewnames_fora = {\"Fora\": \"time\", -1: \"vitoria\", 0:\"empate\", 1:\"derrota\"}\ngrupos_casa = grupos.groupby([\"Edi\u00e7\u00e3o\", \"Casa\", 'resultados']).size().unstack().fillna(0).reset_index().rename(columns=newnames_casa).set_index(ix)\ngrupos_fora = grupos.groupby([\"Edi\u00e7\u00e3o\", \"Fora\", 'resultados']).size().unstack().fillna(0).reset_index().rename(columns=newnames_fora).set_index(ix)\npartidas = grupos_casa.add(grupos_fora, fill_value = 0).reset_index()","99bce939":"ix = [\"Edi\u00e7\u00e3o\",\"time\"]\nnewnames_gcasa = {\"Casa\": \"time\", 'Gols Casa': \"marcados\", 'Gols Fora': \"sofridos\"}\ngols_casa = grupos.groupby([\"Edi\u00e7\u00e3o\", \"Casa\"])[['Gols Casa', 'Gols Fora']].sum().reset_index().rename(columns=newnames_gcasa).set_index(ix)\nnewnames_gfora = {\"Fora\": \"time\", 'Gols Casa': \"sofridos\", 'Gols Fora': \"marcados\"}\ngols_fora = grupos.groupby([\"Edi\u00e7\u00e3o\", \"Fora\"])[['Gols Casa', 'Gols Fora']].sum().reset_index().rename(columns=newnames_gfora).set_index(ix)\ngols = gols_casa.add(gols_fora, fill_value=0).reset_index()","81ab711b":"non_grupos = grupos = data[~data['Fase'].str.contains(\"Grupo\")][['Edi\u00e7\u00e3o','Casa', 'Fora', 'resultados']]","ed388504":"df = pd.merge(non_grupos, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf = pd.merge(df, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])\ndf = pd.merge(df, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf = pd.merge(df, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])","4b366c84":"df.head()","4cae3a40":"\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import log_loss, roc_auc_score, classification_report, f1_score","8a7fde83":"noties = {6: -1,\n 13: 1,\n 15: -1,\n 20:-1,\n 25: -1,\n 26: -1,\n 29: 1,\n 34: 1,\n 35: -1,\n 39: 1,\n 41: -1,\n 47: -1,\n 48: 1,\n 50: -1,\n 51: -1\n \n}\ndf.loc[df['resultados'] == 0, 'resultados'] = list(noties.values()) + [0]*4","8002dd35":"df.loc[df['resultados'] == 0, 'resultados'].shape","f89793d6":"len(list(noties.values()))","f0d1da59":"df.loc[noties.keys()]","b1581719":"yval","2ee0a371":"auc = list()\nfor e in [2004, 2007, 2011, 2015, 2016, 2019]:\n    dftr = df[df['Edi\u00e7\u00e3o'] < e]\n    dfval = df[df['Edi\u00e7\u00e3o'] == e]\n    f = ['derrota_casa','empate_casa', 'vitoria_casa', 'derrota_fora',\n       'empate_fora', 'vitoria_fora', 'marcados_casa',\n       'sofridos_casa', 'marcados_fora', 'sofridos_fora']\n    \n    Xtr = dftr[f]\n    ytr = dftr['resultados']\n    Xval = dfval[f]\n    yval = dfval['resultados']\n    \n    #print(dftr.shape)\n    #print(dfval.shape)\n    mdl = LogisticRegression(C=1, class_weight='balanced')\n    #mdl = RandomForestClassifier(n_jobs=6, min_samples_leaf=1, n_estimators=100, random_state=0)\n    mdl.fit(Xtr, ytr)\n    \n    \n    p = mdl.predict_proba(Xval)[:,1]\n    p_ = mdl.predict(Xval)\n    auc_ = roc_auc_score(yval,p,multi_class='ovr')\n    #f1 = \n    print(\"Ano: {} | LL: {} | AUC: {}\".format(e, log_loss(yval, p), auc_))\n    auc.append(auc_)\n    #print(classification_report(yval, p_))\n    print()\nprint(np.mean(auc))\n    ","720d6aeb":"p_","46be1f39":"dfval['p'] = p_","6b364c4e":"dfval[['Edi\u00e7\u00e3o', 'Casa', 'Fora', 'resultados', 'p']]","c1aa3d0d":"e = 2021\ndftr = df[df['Edi\u00e7\u00e3o'] < e]\ndfval = df[df['Edi\u00e7\u00e3o'] == e]\nf = ['derrota_casa','empate_casa', 'vitoria_casa', 'derrota_fora',\n   'empate_fora', 'vitoria_fora', 'marcados_casa',\n   'sofridos_casa', 'marcados_fora', 'sofridos_fora']\n\nXtr = dftr[f]\nytr = dftr['resultados']\nXval = dfval[f]\nyval = dfval['resultados']\n\n#print(dftr.shape)\n#print(dfval.shape)\nmdl = LogisticRegression(C=1, class_weight='balanced')\n#mdl = RandomForestClassifier(n_jobs=6, min_samples_leaf=1, n_estimators=100, random_state=0)\nmdl.fit(Xtr, ytr)\n\n\np = mdl.predict_proba(Xval)[:,1]\np_ = mdl.predict(Xval)\n\n    ","fa951470":"p","a1407547":"dfval['p'] = p_","34f97379":"dfval[['Edi\u00e7\u00e3o', 'Casa', 'Fora', 'resultados', 'p']]","6b3bc38f":"semi = pd.DataFrame([{\"Edi\u00e7\u00e3o\": 2021, \"Casa\": \"Brasil\", \"Fora\": \"Paraguai\", \"resultados\": 0},\n {\"Edi\u00e7\u00e3o\": 2021, \"Casa\": \"Argentina\", \"Fora\": \"Colombia\", \"resultados\": 0}])\nsemi","b355b9fe":"df2 = pd.merge(semi, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf2 = pd.merge(df2, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])\ndf2 = pd.merge(df2, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf2 = pd.merge(df2, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])","41797496":"df2['p'] = mdl.predict(df2[f])\ndf2[['Edi\u00e7\u00e3o', 'Casa', 'Fora', 'resultados', 'p']]","72b9450a":"final = pd.DataFrame([{\"Edi\u00e7\u00e3o\": 2021, \"Casa\": \"Argentina\", \"Fora\": \"Brasil\", \"resultados\": 0}])\nfinal","f83feafa":"df3 = pd.merge(final, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf3 = pd.merge(df3, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])\ndf3 = pd.merge(df3, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf3 = pd.merge(df3, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])","6c25e174":"df3['p'] = mdl.predict(df3[f])\ndf3[['Edi\u00e7\u00e3o', 'Casa', 'Fora', 'resultados', 'p']]","a8ea9f1c":"mdl.predict_proba(df3[f])","00ad1b7a":"possible = dfval['Casa'].tolist() + dfval['Fora'].tolist()\nfrom itertools import permutations\ndf4 = pd.DataFrame(list(permutations(possible, 2)), columns=['Casa','Fora'])\ndf4['Edi\u00e7\u00e3o'] = 2021\ndf4['resultados'] = 2021\ndf4 = pd.merge(df4, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf4 = pd.merge(df4, partidas, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])\ndf4 = pd.merge(df4, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Casa\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left')\ndf4 = pd.merge(df4, gols, left_on=[\"Edi\u00e7\u00e3o\",\"Fora\"], right_on=[\"Edi\u00e7\u00e3o\",\"time\"], how='left', suffixes=[\"_casa\", \"_fora\"])","ba5524c3":"df4['p'] = mdl.predict(df4[f])\ndf4 = df4[['Edi\u00e7\u00e3o', 'Casa', 'Fora', 'p']]","39b9b0c6":"finalr = list()\nfor e,c,fr,pp in df4.values:\n    if pp == 1:\n        finalr.append(c)\n    else:\n        finalr.append(fr)\ndf4['Vencedor'] = finalr","d7349b0e":"df4[[\"Casa\", \"Fora\", \"Vencedor\"]]","4edf8bf6":"# 2021","2107f9ea":"# Sim"}}