{"cell_type":{"c909de14":"code","f8135877":"code","fd25c620":"code","77f75206":"code","8db99029":"code","38753638":"code","a7d5dca7":"code","13e97f94":"code","18a91456":"code","dcc367af":"code","08736bb6":"code","7749342c":"code","14fa38c6":"code","6c8e9288":"code","896e5c3e":"code","2226826b":"markdown","74881394":"markdown","71a63b44":"markdown","1f6c4a0f":"markdown","3c306b0e":"markdown","809fb7de":"markdown","8b3dcdfa":"markdown","30f2e7b0":"markdown","c35e7aa0":"markdown","484c5b40":"markdown","0f133917":"markdown","1208d7fe":"markdown","cf010576":"markdown","9ca17f34":"markdown","8b0c25a7":"markdown","b78436b8":"markdown","697e0310":"markdown","7393558a":"markdown","a8e709f4":"markdown","4e7f15b2":"markdown","62708af2":"markdown","bfe28878":"markdown","64176871":"markdown","c1760666":"markdown","728423d6":"markdown"},"source":{"c909de14":"import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport seaborn as sb\nsb.set_style('darkgrid')\npath = '..\/input\/1950csv\/1950.csv'\nstock_data = pd.read_csv(path)\n# stock_data['Date'] = stock_data['Date'].to_dates='coerce'\nstock_data = stock_data.sort_index(by='Date')\nstock_data = stock_data.set_index('Date')","f8135877":"stock_data['Close'].plot(figsize=(16, 12))","fd25c620":"stock_data['First Difference'] = stock_data['Close'] - stock_data['Close'].shift()\nstock_data['First Difference'].plot(figsize=(16, 12))","77f75206":"stock_data['Natural Log'] = stock_data['Close'].apply(lambda x: np.log(x))\nstock_data['Natural Log'].plot(figsize=(16, 12))","8db99029":"\nstock_data['Original Variance'] = pd.Series.rolling(stock_data['Close'],window=30,center=True).var()\nstock_data['Log Variance'] = pd.Series.rolling(stock_data['Natural Log'],window=30,center=True).var()\n\nfig, ax = plt.subplots(2, 1, figsize=(13, 12))\nstock_data['Original Variance'].plot(ax=ax[0], title='Original Variance')\nstock_data['Log Variance'].plot(ax=ax[1], title='Log Variance')\nfig.tight_layout()","38753638":"stock_data['Logged First Difference'] = stock_data['Natural Log'] - stock_data['Natural Log'].shift()\nstock_data['Logged First Difference'].plot(figsize=(16, 12))","a7d5dca7":"stock_data['Lag 1'] = stock_data['Logged First Difference'].shift()\nstock_data['Lag 2'] = stock_data['Logged First Difference'].shift(2)\nstock_data['Lag 5'] = stock_data['Logged First Difference'].shift(5)\nstock_data['Lag 30'] = stock_data['Logged First Difference'].shift(30)\nsb.jointplot('Logged First Difference', 'Lag 1', stock_data, kind='reg', height=13)","13e97f94":"from statsmodels.tsa.stattools import acf\nfrom statsmodels.tsa.stattools import pacf\n\nlag_correlations = acf(stock_data['Logged First Difference'].iloc[1:])\nlag_partial_correlations = pacf(stock_data['Logged First Difference'].iloc[1:])","18a91456":"fig, ax = plt.subplots(figsize=(16,12))\nax.plot(lag_correlations, marker='o', linestyle='--')\nax.plot(lag_partial_correlations, marker='o', linestyle='--')","dcc367af":"from statsmodels.tsa.seasonal import seasonal_decompose\n\ndecomposition = seasonal_decompose(stock_data['Natural Log'], model='additive', freq=30)\nfig = plt.figure()\nfig = decomposition.plot()","08736bb6":"co2_data = sm.datasets.co2.load_pandas().data\nco2_data.co2.interpolate(inplace=True)\nresult = sm.tsa.seasonal_decompose(co2_data.co2)\nfig = plt.figure()\nfig = result.plot()","7749342c":"model = sm.tsa.ARIMA(stock_data['Natural Log'].iloc[1:], order=(1, 0, 0))\nresults = model.fit(disp=-1)\nstock_data['Forecast'] = results.fittedvalues\nstock_data[['Natural Log', 'Forecast']].plot(figsize=(16, 12))","14fa38c6":"model = sm.tsa.ARIMA(stock_data['Logged First Difference'].iloc[1:], order=(1, 0, 0))\nresults = model.fit(disp=-1)\nstock_data['Forecast'] = results.fittedvalues\nstock_data[['Logged First Difference', 'Forecast']].plot(figsize=(16, 12))","6c8e9288":"stock_data[['Logged First Difference', 'Forecast']].iloc[100:200, : ].plot(figsize=(16, 12))","896e5c3e":"model = sm.tsa.ARIMA(stock_data['Logged First Difference'].iloc[1:], order=(0, 0, 1))\nresults = model.fit(disp=-1)\nstock_data['Forecast'] = results.fittedvalues\nstock_data[['Logged First Difference', 'Forecast']].plot(figsize=(16, 12))","2226826b":"\u8cc7\u6599\u6309\u76f8\u53cd\u7684\u6642\u9593\u9806\u5e8f\u6392\u5217\uff0c\u56e0\u6b64\u6211\u6309\u65e5\u671f\u6392\u5e8f\uff0c\u7136\u5f8c\u5c07\u8cc7\u6599\u6846\u7684\u7d22\u5f15\u8a2d\u7f6e\u70ba\u65e5\u671f\u5217\u3002\u5982\u679c\u4f60\u770b\u770b\u8cc7\u6599\uff0c\u6709\u5e7e\u500b\u6b04\u4f4d\uff0c\u4f46\u6211\u5011\u53ea\u95dc\u6ce8\u6536\u76e4\u50f9\u3002\u8b93\u6211\u5011\u5148\u7e6a\u88fd\u8cc7\u6599\u5716\uff0c\u770b\u770b\u5b83\u662f\u4ec0\u9ebc\u6a23\u5b50\u3002","74881394":"Observe that in the top graph, we can't even see any of the variations until the late 80s. In the bottom graph however it's a different story, changes in the value are clearly visible throughout the entire data set. From this view, it's clear that our transformation has made the variance relatively constant.\n\nNow we can see the earlier variations in the data set quite a bit better than before. We still need to take the first difference though so let's calculate that from the logged series.\n\u89c0\u5bdf\u53ef\u77e5\u5728\u4e0a\u5716\u4e2d\uff0c\u6211\u5011\u751a\u81f3\u770b\u4e0d\u5230\u4efb\u4f55\u8b8a\u5316\uff0c\u76f4\u523080\u5e74\u4ee3\u672b\u3002\u7136\u800c\uff0c\u5728\u4e0b\u5716\u4e2d\uff0c\u503c\u7684\u8b8a\u5316\u5728\u6574\u500b\u8cc7\u6599\u96c6\u4e2d\u90fd\u6e05\u6670\u53ef\u898b\u3002\u5f9e\u9019\u500b\u89d2\u5ea6\u770b\uff0c\u5f88\u660e\u986f\uff0c\u6211\u5011\u7684\u8f49\u63db\u4f7f\u65b9\u5dee\u76f8\u5c0d\u4fdd\u6301\u4e0d\u8b8a\u3002\n\u73fe\u5728\uff0c\u6211\u5011\u53ef\u4ee5\u770b\u5230\u8cc7\u6599\u96c6\u4e2d\u8f03\u65e9\u7684\u8b8a\u9ad4\u6bd4\u4ee5\u524d\u8981\u597d\u5f97\u591a\u3002\u6211\u5011\u4ecd\u7136\u9700\u8981\u63a1\u53d6\u7b2c\u4e00\u500b\u5dee\u7570\uff0c\u96d6\u7136\uff0c\u6240\u4ee5\u8b93\u6211\u5011\u5f9e\u8a18\u9304\u7684\u5e8f\u5217\u8a08\u7b97\u3002","71a63b44":"Much better! We now have a stationary time series model of daily changes to the S&P 500 index. Now let's create some lag variables y(t-1), y(t-2) etc. and examine their relationship to y(t). We'll look at 1 and 2-day lags along with weekly and monthly lags to look for \"seasonal\" effects.\n\u597d\u591a\u4e86\uff01\u6211\u5011\u73fe\u5728\u6709\u4e00\u500b\u56fa\u5b9a\u7684\u6642\u9593\u5e8f\u5217\u6a21\u578b\uff0c\u7528\u65bc\u6bcf\u65e5\u5c0d\u6a19\u6e96\u666e\u723e500\u6307\u6578\u7684\u8b8a\u5316\u3002\u73fe\u5728\uff0c\u8b93\u6211\u5011\u5275\u5efa\u4e00\u4e9b\u6eef\u5f8c\u8b8a\u6578 y\uff08t-1\uff09\u3001y\uff08t-2\uff09\u7b49\uff0c\u4e26\u6aa2\u67e5\u5b83\u5011\u8207 y\uff08t\uff09 \u7684\u95dc\u4fc2\u3002\u6211\u5011\u5c07\u67e5\u770b 1 \u5929\u548c 2 \u5929\u7684\u6eef\u5f8c\u4ee5\u53ca\u6bcf\u9031\u548c\u6bcf\u6708\u7684\u6eef\u5f8c\uff0c\u4ee5\u67e5\u627e\"\u5b63\u7bc0\u6027\"\u6548\u61c9\u3002","1f6c4a0f":"Notice how tightly packed the mass is around 0. It also appears to be pretty evenly distributed - the marginal distributions on both axes are roughly normal. This seems to indicate that knowing the index value one day doesn't tell us much about what it will do the next day.\n\nIt probably comes as no surprise that there's very little correlation between the change in value from one day to the next. Although I didn't plot them out here, the other lagged variables that we created above show similar results. There could be a relationship to other lag steps that we haven't tried, but it's impractical to test every possible lag value manually. Fortunately there is a class of functions that can systematically do this for us.\n\u8acb\u6ce8\u610f\u54c1\u8cea\u7684\u7dca\u5bc6\u5305\u88dd\u7a0b\u5ea6\u7d04\u70ba 0\u3002\u5b83\u770b\u8d77\u4f86\u4e5f\u76f8\u7576\u5747\u52fb\u5206\u4f48 - \u5169\u500b\u8ef8\u4e0a\u7684\u908a\u969b\u5206\u4f48\u5927\u81f4\u6b63\u5e38\u3002\u9019\u4f3c\u4e4e\u8868\u660e\uff0c\u77e5\u9053\u6307\u6578\u503c\u6709\u4e00\u5929\u4e0d\u6703\u544a\u8a34\u6211\u5011\u5f88\u591a\u95dc\u65bc\u5b83\u5c07\u505a\u4ec0\u9ebc\u7b2c\u4e8c\u5929\u3002\n\n\u5f9e\u4e00\u5929\u5230\u4e0b\u4e00\u5929\uff0c\u50f9\u503c\u8b8a\u5316\u4e4b\u9593\u5e7e\u4e4e\u6c92\u6709\u76f8\u95dc\u6027\uff0c\u9019\u4e5f\u8a31\u4e26\u4e0d\u5947\u602a\u3002\u5118\u7ba1\u6211\u5728\u9019\u88e1\u6c92\u6709\u7e6a\u88fd\u5b83\u5011\uff0c\u4f46\u6211\u5011\u5728\u4e0a\u9762\u5275\u5efa\u7684\u5176\u4ed6\u6eef\u5f8c\u8b8a\u6578\u986f\u793a\u4e86\u985e\u4f3c\u7684\u7d50\u679c\u3002\u53ef\u80fd\u8207\u6211\u5011\u5c1a\u672a\u5617\u8a66\u904e\u7684\u5176\u4ed6\u6eef\u5f8c\u6b65\u9a5f\u6709\u95dc\u7cfb\uff0c\u4f46\u624b\u52d5\u6e2c\u8a66\u6bcf\u500b\u53ef\u80fd\u7684\u6eef\u5f8c\u503c\u662f\u4e0d\u5207\u5be6\u969b\u7684\u3002\u5e78\u904b\u7684\u662f\uff0c\u6709\u4e00\u985e\u51fd\u6578\u53ef\u4ee5\u7cfb\u7d71\u5730\u70ba\u6211\u5011\u57f7\u884c\u6b64\u64cd\u4f5c\u3002","3c306b0e":"So at first glance it seems like this model is doing pretty well. But although it appears like the forecasts are really close (the lines are almost indistinguishable after all), remember that we used the un-differenced series! The index only fluctuates a small percentage day-to-day relative to the total absolute value. What we really want is to predict the first difference, or the day-to-day moves. We can either re-run the model using the differenced series, or add an \"I\" term to the ARIMA model (resulting in a (1, 1, 0) model) which should accomplish the same thing. Let's try using the differenced series.\n\u56e0\u6b64\uff0c\u4e4d\u4e00\u770b\uff0c\u9019\u500b\u6a21\u578b\u4f3c\u4e4e\u505a\u5f97\u5f88\u597d\u3002\u4f46\u662f\uff0c\u5118\u7ba1\u9810\u6e2c\u770b\u8d77\u4f86\u975e\u5e38\u63a5\u8fd1\uff08\u7562\u7adf\u7dda\u5e7e\u4e4e\u7121\u6cd5\u5340\u5206\uff09\uff0c\u8acb\u8a18\u4f4f\uff0c\u6211\u5011\u4f7f\u7528\u4e86\u7121\u5dee\u7570\u7684\u5e8f\u5217\uff01\u8a72\u6307\u6578\u50c5\u76f8\u5c0d\u65bc\u7e3d\u7d55\u5c0d\u503c\u6bcf\u5929\u6ce2\u52d5\u4e00\u5c0f\u90e8\u5206\u3002\u6211\u5011\u771f\u6b63\u60f3\u8981\u7684\u662f\u9810\u6e2c\u7b2c\u4e00\u500b\u5dee\u7570\uff0c\u6216\u65e5\u5e38\u79fb\u52d5\u3002\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u5dee\u7570\u5e8f\u5217\u91cd\u65b0\u904b\u884c\u6a21\u578b\uff0c\u6216\u8005\u5411 ARIMA \u6a21\u578b\uff08\u5c0e\u81f4 \uff081\uff0c 1\uff0c 0\uff09 \u6a21\u578b\uff09\u6dfb\u52a0\u4e00\u500b\"I\"\u9805\uff0c\u8a72\u6a21\u578b\u61c9\u5b8c\u6210\u76f8\u540c\u7684\u4efb\u52d9\u3002\u8b93\u6211\u5011\u5617\u8a66\u4f7f\u7528\u5dee\u7570\u7cfb\u5217\u3002","809fb7de":"**ORIGIN AUTHOR\nJohn Wittenauer \nonly for Learining **\n\n\n\nIn this blog post we'll examine some common techniques used in time series analysis by applying them to a data set containing daily closing values for the S&P 500 stock market index from 1950 up to present day. The objective is to explore some of the basic ideas and concepts from time series analysis, and observe their effects when applied to a real world data set. Although it's not possible to actually predict changes in the index using these techniques, the ideas presented here could theoretically be used as part of a larger strategy involving many additional variables to conduct a regression or machine learning effort.\n\nTime series analysis is a branch of statistics that involves reasoning about ordered sequences of related values in order to extract meaningful statistics and other characteristics of the data. It's used in a wide range of disciplines including econometrics, signal processing, weather forecasting, and basically any other field that involves time series data. These techniques are often used to develop models that can be used to attempt to forecast future values of a series, either on their own or in concert with other variables.\n\nTo get started, let's first download the data. I got the historial data set from Yahoo Finance, which includes a link to download the whole thing as a .csv file. Now we can load up the data set and take a look. I'll be using several popular Python libraries for the analysis, so all of the code is in Python.\n\u5728\u672c\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u5011\u5c07\u7814\u7a76\u6642\u9593\u5e8f\u5217\u5206\u6790\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u5e38\u898b\u6280\u8853\uff0c\u5c07\u5176\u61c9\u7528\u65bc\u5305\u542b 1950 \u5e74\u81f3\u4eca\u7684 S&P 500 \u80a1\u7968\u5e02\u5834\u6307\u6578\u6bcf\u65e5\u6536\u76e4\u503c\u7684\u8cc7\u6599\u96c6\u3002\u76ee\u7684\u662f\u5f9e\u6642\u9593\u5e8f\u5217\u5206\u6790\u4e2d\u63a2\u7d22\u4e00\u4e9b\u57fa\u672c\u7684\u60f3\u6cd5\u548c\u6982\u5ff5\uff0c\u4e26\u89c0\u5bdf\u5b83\u5011\u5728\u61c9\u7528\u65bc\u771f\u5be6\u8cc7\u6599\u96c6\u6642\u7684\u6548\u679c\u3002\u5118\u7ba1\u7121\u6cd5\u4f7f\u7528\u9019\u4e9b\u6280\u8853\u5be6\u969b\u9810\u6e2c\u7d22\u5f15\u7684\u8b8a\u5316\uff0c\u4f46\u672c\u6587\u4ecb\u7d39\u7684\u60f3\u6cd5\u7406\u8ad6\u4e0a\u53ef\u4ee5\u7528\u4f5c\u6d89\u53ca\u8a31\u591a\u9644\u52a0\u8b8a\u6578\u4ee5\u9032\u884c\u56de\u6b78\u6216\u6a5f\u5668\u5b78\u7fd2\u5de5\u4f5c\u7684\u5927\u578b\u7b56\u7565\u7684\u4e00\u90e8\u5206\u3002\n\n\u6642\u5e8f\u5206\u6790\u662f\u7d71\u8a08\u7684\u4e00\u500b\u5206\u652f\uff0c\u6d89\u53ca\u5c0d\u76f8\u95dc\u503c\u7684\u6709\u5e8f\u5e8f\u5217\u9032\u884c\u63a8\u7406\uff0c\u4ee5\u4fbf\u63d0\u53d6\u6709\u610f\u7fa9\u7684\u7d71\u8a08\u8cc7\u8a0a\u548c\u8cc7\u6599\u7684\u5176\u4ed6\u7279\u5fb5\u3002\u5b83\u7528\u65bc\u5ee3\u6cdb\u7684\u5b78\u79d1\uff0c\u5305\u62ec\u8a08\u91cf\u7d93\u6fdf\u5b78\u3001\u4fe1\u865f\u8655\u7406\u3001\u5929\u6c23\u9810\u5831\uff0c\u4ee5\u53ca\u57fa\u672c\u4e0a\u6d89\u53ca\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u7684\u4efb\u4f55\u5176\u4ed6\u9818\u57df\u3002\u9019\u4e9b\u6280\u8853\u901a\u5e38\u7528\u65bc\u958b\u767c\u6a21\u578b\uff0c\u9019\u4e9b\u6a21\u578b\u53ef\u7528\u65bc\u5617\u8a66\u9810\u6e2c\u5e8f\u5217\u7684\u672a\u4f86\u503c\uff0c\u7121\u8ad6\u662f\u81ea\u884c\u9810\u6e2c\u9084\u662f\u8207\u5176\u4ed6\u8b8a\u6578\u5354\u540c\u3002\n\n\u8981\u958b\u59cb\u4f7f\u7528\uff0c\u6211\u5011\u9996\u5148\u4e0b\u8f09\u8cc7\u6599\u3002\u6211\u5f9e\u96c5\u864e\u8ca1\u52d9\u7372\u5f97\u4e86\u4e00\u500b\u8cc7\u6599\u96c6\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u500b\u9023\u7d50\uff0c\u4e0b\u8f09\u6574\u500b\u4e8b\u60c5\u4f5c\u70ba\u4e00\u500b.csv\u6a94\u3002\u73fe\u5728\uff0c\u6211\u5011\u53ef\u4ee5\u8f09\u5165\u8cc7\u6599\u96c6\uff0c\u4e26\u770b\u770b\u3002\u6211\u5c07\u4f7f\u7528\u5e7e\u500b\u6d41\u884c\u7684 Python \u5eab\u9032\u884c\u5206\u6790\uff0c\u56e0\u6b64\u6240\u6709\u4ee3\u78bc\u90fd\u5728 Python \u4e2d","8b3dcdfa":"The data no longer appears to be trending up over time and is instead centered around 0. There's another problem though. Look at the variance. It's very small early on and steadily increases over time. This is a sign that the data is not only non-stationary but also exponentially increasing. The magnitude of the day-to-day variations at present day completely dwarf the magnitude of the changes in 1950. To deal with this, we'll apply a log transform to the original series.\n\u8d44\u6599\u968f\u65f6\u95f4\u4e0a\u5347\u3002\u67e5\u770b\u5dee\u7570\u3002\u5b83\u975e\u5e38\u5c0f\u7684\u65e9\u671f\u548c\u7a69\u6b65\u589e\u52a0\u96a8\u8457\u6642\u9593\u7684\u63a8\u79fb\u3002\u9019\u662f\u4e00\u500b\u8de1\u8c61\uff0c\u8868\u660e\u8cc7\u6599\u4e0d\u50c5\u975e\u975c\u6b62\uff0c\u800c\u4e14\u5448\u6307\u6578\u7d1a\u589e\u9577\u3002\u7576\u4eca\u65e5\u5e38\u8b8a\u5316\u7684\u5e45\u5ea6\u82071950\u5e74\u7684\u8b8a\u5316\u7a0b\u5ea6\u5b8c\u5168\u76f8\u5f62\u898b\u7d40\u3002\u70ba\u4e86\u8655\u7406\u9019\u7a2e\u60c5\u6cc1\uff0c\u6211\u5011\u5c07\u5c0d\u539f\u59cb\u7cfb\u5217\u61c9\u7528log\u8f49\u63db\u3002","30f2e7b0":"The decomposition is much more useful in this case. There are three clearly distinct components to the time series - a trend line, a seasonal adjustment, and residual values. Each of these would need to be accounted for and modeled appropriately.\n\nGoing back to our stock data, we're already observed that it's a random walk and that our lagged variables don't seem to have much impact, but we can still try fitting some ARIMA models and see what we get. Let's start with a simple moving average model.\n\n\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u5206\u89e3\u66f4\u6709\u7528\u3002\u6642\u9593\u5e8f\u5217\u6709\u4e09\u500b\u660e\u986f\u4e0d\u540c\u7684\u7d44\u6210\u90e8\u5206 - \u8da8\u52e2\u7dda\u3001\u5b63\u7bc0\u6027\u8abf\u6574\u548c\u6b98\u5dee\u503c\u3002\u5176\u4e2d\u6bcf\u4e00\u9805\u90fd\u9700\u8981\u5f97\u5230\u9069\u7576\u7684\u8aaa\u660e\u548c\u5efa\u6a21\u3002\n\n\u56de\u5230\u6211\u5011\u7684\u80a1\u7968\u8cc7\u6599\uff0c\u6211\u5011\u5df2\u7d93\u89c0\u5bdf\u5230\uff0c\u9019\u662f\u4e00\u500b\u96a8\u6a5f\u7684\u6b65\u884c\uff0c\u6211\u5011\u7684\u6eef\u5f8c\u8b8a\u6578\u4f3c\u4e4e\u6c92\u6709\u592a\u5927\u7684\u5f71\u97ff\uff0c\u4f46\u6211\u5011\u4ecd\u7136\u53ef\u4ee5\u5617\u8a66\u5b89\u88dd\u4e00\u4e9bARIMA\u6a21\u578b\uff0c\u770b\u770b\u6211\u5011\u5f97\u5230\u4e86\u4ec0\u9ebc\u3002\u8b93\u6211\u5011\u5f9e\u4e00\u500b\u7c21\u55ae\u7684\u79fb\u52d5\u5e73\u5747\u6a21\u578b\u958b\u59cb\u3002","c35e7aa0":"\u03bb \u7ea6\u7b49\u4e8e\u5b9a\u4e49\u533f\u540d\u51fd\u6570\uff1a\u4f7f\u7528numpy\u7684log\u51fd\u6570\u5904\u7406\u6570\u636e","484c5b40":"\u5b9a\u4e49l1-l30 \u6765\u8868\u793a\u5e73\u79fb\u6b65\u957f\u7684\u6570\u503c\uff0c\u5e76\u7528joinplot \u5c06 Lag1 \u548c \u539flog\u6570\u636e \u4f5c\u4e24\u8f74 \u5207 \u7528 \u6563\u70b9\u56fe\u663e\u793a ","0f133917":"It's a little hard to tell, but it appears like our forecasted changes are generally much smaller than the actual changes. It might be worth taking a closer look at a subset of the data to see what's really going on.\n\u9019\u6709\u9ede\u5f88\u96e3\u8aaa\uff0c\u4f46\u4f3c\u4e4e\u6211\u5011\u9810\u6e2c\u7684\u8b8a\u5316\u901a\u5e38\u6bd4\u5be6\u969b\u8b8a\u5316\u5c0f\u5f97\u591a\u3002\u53ef\u80fd\u503c\u5f97\u4ed4\u7d30\u67e5\u770b\u8cc7\u6599\u7684\u5b50\u96c6\uff0c\u770b\u770b\u5230\u5e95\u767c\u751f\u4e86\u4ec0\u9ebc\u3002","1208d7fe":"\n\u9996\u5148\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u8cc7\u6599\u8655\u65bc\u975e\u7a69\u5b9a\u72c0\u614b\u4e0a\u5347\u3002\u9019\u5c0d\u5e02\u5834\u8cc7\u6599\u4f86\u8aaa\u5f88\u6709\u610f\u7fa9\uff0c\u56e0\u70ba\u5f9e\u9577\u671f\u4f86\u770b\uff0c\u5b83\u4e0a\u5347\u7684\u6bd4\u4e0b\u8dcc\u7684\u8981\u5927\u3002\u9019\u662f\u6642\u9593\u5e8f\u5217\u5206\u6790\u7684\u4e00\u500b\u554f\u984c\uff0c\u5118\u7ba1\u975e\u56fa\u5b9a\u8cc7\u6599\u5f88\u96e3\u63a8\u7406\u3002\u6211\u5011\u53ef\u4ee5\u5617\u8a66\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u8a72\u7cfb\u5217\u7684\u7b2c\u4e00\u500b\u5340\u5225\u3002\u63db\u53e5\u8a71\u8aaa\uff0c\u5f9e\u7576\u524d\u503c t \u4e2d\u6e1b\u53bb\u524d\u4e00\u500b\u503c t-1 \u4ee5\u7372\u53d6\u5dee\u503c d\uff08t\uff09\u3002","cf010576":"You can probably guess the answer...if predicting the stock market were this easy, everyone would be doing it!\n\u4f60\u5927\u6982\u53ef\u4ee5\u731c\u5230\u7b54\u6848...\u5982\u679c\u9810\u6e2c\u80a1\u5e02\u662f\u90a3\u9ebc\u5bb9\u6613\uff0c\u6bcf\u500b\u4eba\u90fd\u6703\u9019\u6a23\u505a\uff01","9ca17f34":"stock_data['Date'] = stock_data['Date'].convert_objects(convert_dates='coerce')\uff1f\ntips\uff1a.covert_object \u662f\u8001\u7248\u672c\u7684\u5199\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528to_dates\uff0c\u4f46\u662f\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u4f1a\u628adate\u5168\u90e8\u53d8\u6210\u6240\u8c13\u7684coerce\nsort_index \u4fee\u6539\u6210sort_values","8b0c25a7":"\u9009\u62e9\u5e8f\u5217\u53f7\u5c0f\u6bb5\u7684\u5b50\u96c6\u7684date\uff0c\u540c\u7b49\u9884\u6d4b","b78436b8":"As I mentioned at the top, the point of this analysis wasn't to claim that you can predict the market with these techniques, but rather to demonstrate the types of the analysis one might use when breaking down time series data. \n\u6b63\u5982\u6211\u5728\u9802\u90e8\u63d0\u5230\u7684\uff0c\u9019\u7a2e\u5206\u6790\u7684\u8981\u9ede\u4e0d\u662f\u8072\u7a31\u60a8\u53ef\u4ee5\u4f7f\u7528\u9019\u4e9b\u6280\u8853\u9810\u6e2c\u5e02\u5834\uff0c\u800c\u662f\u6f14\u793a\u5728\u5206\u89e3\u6642\u9593\u5e8f\u5217\u8cc7\u6599\u6642\u53ef\u80fd\u4f7f\u7528\u7684\u5206\u6790\u985e\u578b\u3002\n","697e0310":"So that gives us the original closing price with a log transform applied to \"flatten\" the data from an exponential curve to a linear curve. One way to visually see the effect that the log transform had is to analyze the variance over time. We can use a rolling variance statistic and compare both the original series and the logged series.\n\u56e0\u6b64\uff0c\u9019\u70ba\u6211\u5011\u63d0\u4f9b\u4e86\u539f\u59cb\u6536\u76e4\u50f9\uff0c\u4e26\u61c9\u7528\u4e86\u7528\u65bc\"\u5e73\u5c55\"\u8cc7\u6599\u5f9e\u6307\u6578\u66f2\u7dda\u5230\u7dda\u6027\u66f2\u7dda\u7684\u5c0d\u6578\u8b8a\u63db\u3002\u76f4\u89c0\u5730\u770b\u5230\u65e5\u8a8c\u8f49\u63db\u6548\u679c\u7684\u4e00\u7a2e\u65b9\u6cd5\u662f\u5206\u6790\u96a8\u6642\u9593\u8b8a\u5316\u7684\u65b9\u5dee\u3002\u6211\u5011\u53ef\u4ee5\u4f7f\u7528\u6efe\u52d5\u65b9\u5dee\u7d71\u8a08\uff0c\u4e26\u6bd4\u8f03\u539f\u59cb\u7cfb\u5217\u548c\u8a18\u9304\u7684\u5e8f\u5217\u3002\n","7393558a":"The auto-correlation and partial-autocorrelation results are very close to each other (I only plotted the auto-correlation results above). What this shows is that there is no significant (> 0.2) correlation between the value at time t and at any time prior to t up to 40 steps behind. In order words, the series is a random walk.\n\nAnother interesting technique we can try is a decomposition. This is a technique that attempts to break down a time series into trend, seasonal, and residual factors. Statsmodels comes with a decompose function out of the box.\n\u81ea\u52d5\u95dc\u806f\u548c\u90e8\u5206\u81ea\u76f8\u95dc\u7d50\u679c\u5f7c\u6b64\u975e\u5e38\u63a5\u8fd1\uff08\u6211\u53ea\u7e6a\u88fd\u4e86\u4e0a\u9762\u7684\u81ea\u52d5\u95dc\u806f\u7d50\u679c\uff09\u3002\u9019\u8868\u660e\uff0c\u5728 t \u6642\u9593 t \u548c t \u843d\u5f8c 40 \u6b65\u4e4b\u524d\u7684\u4efb\u4f55\u6642\u9593\uff0c\u503c\u4e4b\u9593\u6c92\u6709\u986f\u8457 \uff08= 0.2\uff09 \u76f8\u95dc\u6027\u3002\u6309\u9806\u5e8f\u4f86\u8aaa\uff0c\u9019\u500b\u7cfb\u5217\u662f\u96a8\u6a5f\u7684\u3002\n\n\u6211\u5011\u53ef\u4ee5\u5617\u8a66\u7684\u53e6\u4e00\u500b\u6709\u8da3\u7684\u6280\u8853\u662f\u5206\u89e3\u3002\u9019\u662f\u4e00\u7a2e\u8a66\u5716\u5c07\u6642\u9593\u5e8f\u5217\u5206\u89e3\u70ba\u8da8\u52e2\u3001\u5b63\u7bc0\u548c\u6b98\u9918\u56e0\u7d20\u7684\u6280\u8853\u3002\u7d71\u8a08\u6a21\u578b\u9644\u5e36\u4e00\u500b\u958b\u7bb1\u5373\u7528\u7684\u5206\u89e3\u51fd\u6578\u3002","a8e709f4":"So now it's pretty obvious that the forecast is way off. We're predicting tiny little variations relative to what is actually happening day-to-day. Again, this is more of less expected with a simple moving average model of a random walk time series. There's not enough information from the previous days to accurately forcast what's going to happen the next day.\n\nA moving average model doesn't appear to do so well. What about an exponential smoothing model? Exponential smoothing spreads out the impact of previous values using an exponential weighting, so things that happened more recently are more impactful than things that happened a long time ago. Maybe this \"smarter\" form of averaging will be more accurate?","4e7f15b2":"stock_data['Original Variance'] = pd.rolling_var(stock_data['Close'], 30, min_periods=None, freq=None, center=True) \u65e7\u7248\u672c\u6eda\u52a8\u5931\u6548\u3002\u89c4\u6574\u5230series","62708af2":"The auto-correlation function computes the correlation between a variable and itself at each lag step up to some limit (in this case 40). The partial auto-correlation function computes the correlation at each lag step that is NOT already explained by previous, lower-order lag steps. We can plot the results to see if there are any significant correlations.\n\u81ea\u52d5\u95dc\u806f\u51fd\u6578\u8a08\u7b97\u8b8a\u6578\u548c\u81ea\u8eab\u5728\u6bcf\u500b\u6eef\u5f8c\u7d1a\u9054\u5230\u67d0\u500b\u9650\u5236\u6642\u7684\u76f8\u95dc\u6027\uff08\u5728\u672c\u4f8b\u4e2d\u70ba 40\uff09\u3002\u90e8\u5206\u81ea\u52d5\u95dc\u806f\u51fd\u6578\u8a08\u7b97\u6bcf\u500b\u6eef\u5f8c\u6b65\u9577\u7684\u76f8\u95dc\u6027\uff0c\u800c\u4e4b\u524d\u7684\u4f4e\u968e\u6eef\u5f8c\u6b65\u9577\u5c1a\u672a\u89e3\u91cb\u3002\u6211\u5011\u53ef\u4ee5\u7e6a\u88fd\u7d50\u679c\uff0c\u770b\u770b\u662f\u5426\u6709\u4efb\u4f55\u986f\u8457\u7684\u76f8\u95dc\u6027\u3002","bfe28878":"\u6240\u4ee5\u73fe\u5728\u5f88\u660e\u986f\uff0c\u9810\u6e2c\u5dee\u8fdc\u4e86\u3002\u6211\u5011\u9810\u6e2c\u4e86\u8207\u5be6\u969b\u6bcf\u5929\u767c\u751f\u7684\u60c5\u6cc1\u76f8\u6bd4\u7684\u5fae\u5c0f\u8b8a\u5316\u3002\u540c\u6a23\uff0c\u5c0d\u65bc\u96a8\u6a5f\u6b65\u884c\u6642\u9593\u5e8f\u5217\u7684\u7c21\u55ae\u79fb\u52d5\u5e73\u5747\u6a21\u578b\uff0c\u9019\u66f4\u4e0d\u671f\u671b\u3002\u524d\u5e7e\u5929\u7684\u8cc7\u8a0a\u4e0d\u8db3\u4ee5\u6e96\u78ba\u5224\u65b7\u7b2c\u4e8c\u5929\u5c07\u6703\u767c\u751f\u4ec0\u9ebc\u3002\n\n\u79fb\u52d5\u5e73\u5747\u6a21\u578b\u4f3c\u4e4e\u8868\u73fe\u5f97\u4e0d\u90a3\u9ebc\u597d\u3002\u6307\u6578\u5e73\u6ed1\u6a21\u578b\u5462\uff1f\u6307\u6578\u5e73\u6ed1\u4f7f\u7528\u6307\u6578\u52a0\u6b0a\u4f86\u5206\u6563\u4ee5\u524d\u503c\u7684\u5f71\u97ff\uff0c\u56e0\u6b64\u6700\u8fd1\u767c\u751f\u7684\u4e8b\u60c5\u6bd4\u5f88\u4e45\u4ee5\u524d\u767c\u751f\u7684\u4e8b\u60c5\u66f4\u5177\u5f71\u97ff\u529b\u3002\u4e5f\u8a31\u9019\u7a2e\"\u66f4\u8070\u660e\"\u7684\u5e73\u5747\u503c\u5f62\u5f0f\u6703\u66f4\u6e96\u78ba\uff1f","64176871":"One interesting visual way to evaluate the relationship between lagged variables is to do a scatter plot of the original variable vs. the lagged variable and see where the distribution lies. We can do this with a joint plot using the seaborn package.\n\u8a55\u4f30\u6eef\u5f8c\u8b8a\u6578\u4e4b\u9593\u95dc\u4fc2\u7684\u4e00\u7a2e\u6709\u8da3\u7684\u8996\u89ba\u65b9\u6cd5\u662f\u57f7\u884c\u539f\u59cb\u8b8a\u6578\u8207\u6eef\u5f8c\u8b8a\u6578\u7684\u6563\u4f48\u5716\uff0c\u4e26\u67e5\u770b\u5206\u4f48\u4f4d\u7f6e\u3002\u6211\u5011\u53ef\u4ee5\u7528seaborn\u7684join plot\u4f86\u505a\u5230\u9019\u4e00\u9ede\u3002","c1760666":"ax\u7ec4\u5b9a\u4e49 subplots\u7684\u683c\u5f0f\u548c\u8303\u56f4","728423d6":"Since we don't see any real cycle in the data, the visualization is not that effective in this case. For data where this is a strong seasonal pattern though it can be very useful. The folling instance, for example, is a sample from the statsmodels documentation showing CO2 emissions data over time.\n\u7531\u65bc\u6211\u5011\u5728\u8cc7\u6599\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u5be6\u969b\u9031\u671f\uff0c\u56e0\u6b64\u5728\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u8996\u89ba\u5316\u6548\u679c\u4e26\u4e0d\u6709\u6548\u3002\u5c0d\u65bc\u8cc7\u6599\uff0c\u9019\u662f\u4e00\u500b\u5f37\u5927\u7684\u5b63\u7bc0\u6027\u6a21\u5f0f\uff0c\u96d6\u7136\u5b83\u53ef\u4ee5\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u4f8b\u5982\uff0cfolling \u793a\u4f8b\u662f\u7d71\u8a08\u6a21\u578b\u6587\u6a94\u4e2d\u986f\u793a\u96a8\u6642\u9593\u800c\u986f\u793a CO2 \u6392\u653e\u8cc7\u6599\u7684\u6a23\u672c\u3002"}}