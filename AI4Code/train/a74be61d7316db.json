{"cell_type":{"ab4ed1dd":"code","93e4e113":"code","ef9222de":"code","412c82f6":"code","e2f188da":"code","4cd44882":"code","d8e3505f":"code","403cf504":"code","cc1381c1":"code","48a4b4e0":"code","01925e7f":"code","09ceb6c6":"code","ecf51c0b":"code","4ab7dced":"code","8d59af1a":"code","3ad79235":"code","833bb01c":"code","9735ea86":"code","2d6bfcc3":"code","44549cbb":"code","287ac963":"code","109b288c":"code","f7e41445":"code","a5fecab0":"code","9abf9f29":"code","25b5d7c1":"code","ec040210":"code","34146ed5":"code","08924f5a":"code","66ba8ad5":"code","b972e4d8":"code","33c0ed92":"code","11b3d281":"code","90b9f20a":"code","d17ad8ae":"code","730de363":"code","76e3a30f":"code","187035dc":"code","1c2c459a":"code","024c6b2b":"code","6034a209":"code","0654391f":"code","cee74eeb":"code","5b2c568b":"code","f98182d5":"code","6fbba195":"code","0ddfd658":"code","bf5947c2":"code","f26d4782":"code","869f258d":"code","cc2d881e":"code","1140c722":"code","f0629dc0":"markdown","e4188dce":"markdown","2f46f50d":"markdown","f773a5ff":"markdown","f6ec48bc":"markdown","dfff4573":"markdown","791aa7de":"markdown","3c6cdd5e":"markdown","af5fe903":"markdown","c1a6d660":"markdown","9562b47a":"markdown","616c36d6":"markdown","0e41f630":"markdown","4406f738":"markdown","5694f511":"markdown","335bf118":"markdown","36bae324":"markdown","a94b2c7d":"markdown","809fba79":"markdown"},"source":{"ab4ed1dd":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\n\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","93e4e113":"train_data = pd.read_csv('..\/input\/train.csv',index_col=None)\ntrain_data.head()","ef9222de":"train_data['PassengerId'].count()","412c82f6":"train_data.info()","e2f188da":"train_data.describe()","4cd44882":"train_data['Age'].isnull().count()","d8e3505f":"import matplotlib.pyplot as plt","403cf504":"with sns.plotting_context(\"notebook\",font_scale=1):\n    sns.set_style(\"whitegrid\")\n    fig, ax = plt.subplots(figsize=(25,15))\n    sns.distplot(train_data[\"Age\"].dropna(),bins=80,kde=False,color=\"red\", ax=ax)\n    plt.ylabel(\"Count\")\n    plt.title(\"Age Distribution\")\n","cc1381c1":"sns.pairplot(train_data, hue=\"Sex\");","48a4b4e0":"train_data[:10]","01925e7f":"train_data.tail(10)","09ceb6c6":"train_data.isna().sum()","ecf51c0b":"(train_data['Age'].isna().sum() \/ train_data['PassengerId'].count()) * 100","4ab7dced":"train_data['Survived'].sum()","8d59af1a":"(train_data['Survived'].sum() \/ train_data['PassengerId'].count()) * 100","3ad79235":"sns.countplot(x='Survived', data=train_data, hue='Sex',palette='bwr')","833bb01c":"train_male_survival = train_data[(train_data['Survived'] == 1) & (train_data['Sex'] == 'male')]\ntrain_male_survival['PassengerId'].count()","9735ea86":"train_female_survival = train_data[(train_data['Survived'] == 1) & (train_data['Sex'] == 'female')]\ntrain_female_survival['PassengerId'].count()","2d6bfcc3":"train_male_survival['PassengerId'].count() \/ (train_female_survival['PassengerId'].count()+train_male_survival['PassengerId'].count()) * 100","44549cbb":"train_female_survival['PassengerId'].count() \/ (train_female_survival['PassengerId'].count()+train_male_survival['PassengerId'].count()) * 100","287ac963":"train_data.groupby('Embarked').count()","109b288c":"temp_train = train_data[train_data['Embarked'].notnull()]\ntemp_train.count()","f7e41445":"sns.countplot(x='Survived', data=temp_train, hue='Embarked', palette='bwr')","a5fecab0":"# temp_train = temp_train[temp_train['Survived']==1].groupby(['Embarked','Sex'],as_index=False).agg({'Cabin':'count'})\ntemp_train = train_data[train_data.Survived == 1]\ntemp_train.head()\n\n\n","9abf9f29":"sns.countplot(x='Pclass', data=temp_train, hue='Sex',palette='bwr')","25b5d7c1":"temp_train = train_data[train_data.Age.notna()]\ntemp_train['Child_Adult'] = np.where(temp_train.eval(\"Age <= 16\"), \"child\", \"adult\")\ntemp_train.head()","ec040210":"temp_pclass1 = temp_train[temp_train.Pclass == 1]\ntemp_pclass2 = temp_train[temp_train.Pclass == 2]\ntemp_pclass3 = temp_train[temp_train.Pclass == 3]\ntemp_pclass1.head()","34146ed5":"print('Pclass 1 survival rate: ' + str((temp_pclass1['Survived'][temp_pclass1.Survived == 1].count()\/temp_pclass1['PassengerId'].count())*100))\nprint('Pclass 2 survival rate: ' + str((temp_pclass2['Survived'][temp_pclass2.Survived == 1].count()\/temp_pclass2['PassengerId'].count())*100))\nprint('Pclass 3 survival rate: ' + str((temp_pclass3['Survived'][temp_pclass3.Survived == 1].count()\/temp_pclass3['PassengerId'].count())*100))\n\n\n","08924f5a":"print('Total Pclass 1 passengers count: '+ str(temp_pclass1.PassengerId.count()))\nprint('Total Pclass 2 passengers count: '+ str(temp_pclass2.PassengerId.count()))\nprint('Total Pclass 3 passengers count: '+ str(temp_pclass3.PassengerId.count()))","66ba8ad5":"sns.countplot(x='Pclass', data=temp_pclass1, hue='Sex',palette='bwr')","b972e4d8":"sns.countplot(x='Pclass', data=temp_pclass2, hue='Sex',palette='bwr')","33c0ed92":"sns.countplot(x='Pclass', data=temp_pclass3, hue='Sex',palette='bwr')","11b3d281":"temp_pclass1 = temp_pclass1[temp_pclass1.Age.notna()]\ntemp_pclass2 = temp_pclass2[temp_pclass2.Age.notna()]\ntemp_pclass3 = temp_pclass3[temp_pclass3.Age.notna()]","90b9f20a":"sns.countplot(x='Child_Adult', data=temp_pclass1, hue='Survived',palette='BrBG')","d17ad8ae":"sns.countplot(x='Child_Adult', data=temp_pclass2, hue='Survived',palette='BrBG')","730de363":"sns.countplot(x='Child_Adult', data=temp_pclass3, hue='Survived',palette='BrBG')","76e3a30f":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","187035dc":"train_data['Age'] = train_data[['Age','Pclass']].apply(impute_age,axis=1)","1c2c459a":"sns.heatmap(train_data.isnull(),yticklabels=False,cbar=False,cmap='viridis')","024c6b2b":"train_data.drop('Cabin',axis=1,inplace=True)","6034a209":"train_data.dropna(inplace=True)","0654391f":"sex = pd.get_dummies(train_data['Sex'],drop_first=True)\nembark = pd.get_dummies(train_data['Embarked'],drop_first=True)","cee74eeb":"train_data.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)\ntrain_data = pd.concat([train_data,sex,embark],axis=1)","5b2c568b":"train_data = pd.concat([train_data,sex,embark],axis=1)","f98182d5":"train_data.head()","6fbba195":"from sklearn.model_selection import train_test_split","0ddfd658":"X_train, X_test, y_train, y_test = train_test_split(train_data.drop('Survived',axis=1), \n                                                    train_data['Survived'], test_size=0.30, \n                                                    random_state=101)","bf5947c2":"from sklearn.linear_model import LogisticRegression","f26d4782":"logmodel = LogisticRegression()\nlogmodel.fit(X_train,y_train)","869f258d":"predictions = logmodel.predict(X_test)","cc2d881e":"from sklearn.metrics import classification_report","1140c722":"print(classification_report(y_test,predictions))","f0629dc0":"Now we can start exploring the age variable for each categorie of data.","e4188dce":"1.Age :\n\nAge of the passenger.\n\n2.Sibsp :\n\nThe dataset defines family relations in this way...\n\na. Sibling = brother, sister, stepbrother, stepsister\n\nb. Spouse = husband, wife (mistresses and fianc\u00e9s were ignored)\n\n3.Parch:\n\nThe dataset defines family relations in this way...\n\na. Parent = mother, father\n\nb. Child = daughter, son, stepdaughter, stepson\n\nc. Some children travelled only with a nanny, therefore parch=0 for them.\n\n4.Pclass :\n\nA proxy for socio-economic status (SES)\n1st = Upper\n2nd = Middle\n3rd = Lower\n\n5.Embarked :\nnominal datatype\n\n6.Name:\nnominal datatype . It could be used in feature engineering to derive the gender from title\n\n7.Sex:\nnominal datatype\n\n8.Ticket:\nthat have no impact on the outcome variable. Thus, they will be excluded from analysis\n\n9.Cabin:\nis a nominal datatype that can be used in feature engineering\n\n10.Fare:\nIndicating the fare\n\n11.PassengerID:\nhave no impact on the outcome variable. Thus, it will be excluded from analysis\n\n12.Survival:\ndependent variable , 0 or 1","2f46f50d":"Last 10 rows of the training data set","f773a5ff":"In all categories, the percentage of femal survival rate is higher than male survival. ","f6ec48bc":"From the above analysis we can conclude that the chances of survival rate for children is higher than adult in first two Pclass however in the 3rd class it is almost equivalent. ","dfff4573":"**Training a Linear Regression Model**\n\nLet's now begin to train out regression model! We will need to first split up our data into an X array that contains the features to train on, and a y array with the target variable, in this case the Price column. We will toss out the Address column because it only has text info that the linear regression model can't use.","791aa7de":"According to the above data it seems that there are 20% of the data which is of NaN value for the age. So it is not recomended to conside this variabel for the final analysis. But We can only consider it if we are left with no choice.","3c6cdd5e":"According to above analysis it seems age and cabin have 177 and 687 NaN values and embarked has 2 NaN values. Out of which we need age variable only.","af5fe903":"By this I can say that the data set has 12 variables. Out of which we need to predict teh survival rate. \nI also figured out that I won't be needing variables such as PassengerID, Name, Ticket and cabin.","c1a6d660":"Plotting the age distribution","9562b47a":"How big is the variables?","616c36d6":"According to above analysis, it is clear that the female survival rate is high. Out of the people who survived 31.87% are male and 68.12% aer female. \n\nThis leads to further investegation on what are the characteristics of the femal and male who survived. ","0e41f630":"How big is the data set","4406f738":"The top 10 rows of teh dataset","5694f511":"**Summary**\n\nFrom all the above analysis we can conclude that the chances of survival is higher with following vaiables,\n1. Greater the Pclass rank,\n\n2. Sex : female\n\n3. Age categorie: Child","335bf118":"Checking fro the null values","36bae324":"As we can see that the survival rate is at its l**owest in Pclass 3** and **heighest in Pclass 1**","a94b2c7d":"**Evaluation**\n\nWe can check precision,recall,f1-score using classification report!","809fba79":"According to above analysis, there are is total of **342 survived** out of **891 passengers**. Which means there is **38.38%  survival rate**."}}