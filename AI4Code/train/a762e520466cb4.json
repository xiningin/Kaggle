{"cell_type":{"411b9540":"code","a7a3848f":"markdown"},"source":{"411b9540":"def Snippet_200():\n    print()\n    print(format('How to find optimal parameters for CatBoost using GridSearchCV for Classification','*^82'))\n\n    import warnings\n    warnings.filterwarnings(\"ignore\")\n\n    # load libraries\n    from sklearn import datasets\n    from sklearn.model_selection import train_test_split\n    from sklearn.model_selection import RandomizedSearchCV\n    from scipy.stats import uniform as sp_randFloat\n    from scipy.stats import randint as sp_randInt\n    from catboost import CatBoostClassifier\n\n    # load the iris datasets\n    dataset = datasets.load_wine()\n    X = dataset.data; y = dataset.target\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)\n\n    model = CatBoostClassifier()\n    parameters = {'depth'         : sp_randInt(4, 10),\n                  'learning_rate' : sp_randFloat(),\n                  'iterations'    : sp_randInt(10, 100)\n                 }\n\n    randm = RandomizedSearchCV(estimator=model, param_distributions = parameters,\n                               cv = 2, n_iter = 10, n_jobs=-1)\n    randm.fit(X_train, y_train)\n\n    # Results from Random Search\n    print(\"\\n========================================================\")\n    print(\" Results from Random Search \" )\n    print(\"========================================================\")\n    print(\"\\n The best estimator across ALL searched params:\\n\",randm.best_estimator_)\n    print(\"\\n The best score across ALL searched params:\\n\",randm.best_score_)\n    print(\"\\n The best parameters across ALL searched params:\\n\",randm.best_params_)\n    print(\"\\n ========================================================\")\n\nSnippet_200()","a7a3848f":"# * # How to find optimal parameters for CatBoost using GridSearchCV for Classification?"}}