{"cell_type":{"b3c46dba":"code","9527ae9f":"code","a913f1e6":"code","d20f4803":"code","fdc1f841":"code","3b030ba4":"code","d18abd97":"code","777b33d4":"code","bb9c1c18":"code","64296721":"code","60c634f0":"code","f9934fc3":"code","de44e19d":"code","6cf7dce0":"code","63380aa2":"markdown","afa31b44":"markdown","b5b47451":"markdown","74462fc8":"markdown","236c9ad5":"markdown","07a7994e":"markdown","6058eeaf":"markdown","75970f2d":"markdown","29e4d4a2":"markdown","d4c2bf58":"markdown","df56e9a6":"markdown","21eebfd8":"markdown","51f489b1":"markdown","65973733":"markdown","2c6fc633":"markdown","53c64c72":"markdown","fb4da32e":"markdown","62d1e0e4":"markdown","c526d20f":"markdown","0cb988ff":"markdown","5d29c99e":"markdown"},"source":{"b3c46dba":"import matplotlib.pyplot as plt\n\nimport pandas as pd\nimport numpy as np","9527ae9f":"%matplotlib inline\n\n# genreating 100 numeric between 0 and 10\nx1 = np.linspace(0, 10, 100)\n\nplt.plot(x1, np.sin(x1), '-')\nplt.plot(x1, np.cos(x1), '--')\n\nplt.show()","a913f1e6":"plt.figure()\n\n# using subplot : 2 rows 1 column inside 1 box\nplt.subplot(2, 1, 1)\nplt.plot(x1, np.sin(x1))\n\n# using subplot : 2 rows 1 column inside 2 box\nplt.subplot(2, 1, 2)\nplt.plot(x1, np.cos(x1), c='r')\n\nplt.show()","d20f4803":"# A versatile method\n\nplt.plot([1,2,3,4,5,6,7,8], [1,4,9,16,25,36,49,64])\nplt.xlabel(\"Numbers\")\nplt.ylabel(\"square of numbers\")\nplt.show()","fdc1f841":"x = np.linspace(0, 2, 100)\n\nplt.plot(x, x, label='linear')\nplt.plot(x, x**2, label='quadratic') # here label is for legend labeling\n\nplt.title('2 in 1 plot')\nplt.xlabel('x label')\nplt.ylabel('y label')\n\nplt.legend()\n\nplt.show()","3b030ba4":"# we can create new figure using  -> plot\nplt.figure()\n\n# now creating subplots from plot\nax1 = plt.subplot(2, 2, 1)\nplt.plot(x1, np.sin(x1))\n\n# 2 rows 2 columns 2nd box\nax2 = plt.subplot(2, 2, 2)\nplt.plot(x1, np.sin(x1))\n\n# 2 rows 2 columns 3rd box\nax3 = plt.subplot(2, 2, 3)\nplt.plot(x1, np.cos(x1), c='r')\n\n# 2 rows 2 columns 4th box\nax4 = plt.subplot(2, 2, 4)\nplt.plot(x1, np.cos(x1), c='r')\n\nplt.show()","d18abd97":"# we can create new figure using  -> plot\nplt.figure(figsize=(10, 10))\n\n# now creating subplots from plot\nax1 = plt.subplot(2, 2, 1)\nplt.plot(x1, np.sin(x1), 'go')\nplt.title(\"green o\")\n\n# 2 rows 2 columns 2nd box\nax2 = plt.subplot(2, 2, 2)\nplt.plot(x1, np.sin(x1), 'r^')\nplt.title(\"red triangle\")\n\n# 2 rows 2 columns 3rd box\nax3 = plt.subplot(2, 2, 3)\nplt.plot(x1, np.cos(x1), c='r')\nplt.title(\"red color line\")\n\n# 2 rows 2 columns 4th box\nax4 = plt.subplot(2, 2, 4)\nplt.plot(x1, np.cos(x1), c='b')\nplt.title(\"blue color line\")\n\nplt.show()","777b33d4":"# verical bar graph\n\ndivision = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nmarks = [30, 45, 60, 44, 67]\n\nplt.bar(division, marks, color='black')\nplt.title(\"Bar Graph\")\nplt.xlabel(\"Dvisions\")\nplt.ylabel(\"marks\")\nplt.show()","bb9c1c18":"# horizontal bar graph\n\ndivision = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nmarks = [30, 45, 60, 44, 67]\n\nplt.barh(division, marks, color='black')\nplt.title(\"Bar Graph\")\nplt.xlabel(\"Dvisions\")\nplt.ylabel(\"marks\")\nplt.show()","64296721":"# stacked bar graphs\n\ndivision = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nmarks = [30, 45, 60, 44, 67]\navg_marks = [56, 65, 66, 67, 54]\n\nindex = np.arange(5)\nwidth = 0.3\n\nplt.bar(index, marks, width, color='black', label=\"division marks\")\nplt.bar(index+width, avg_marks, width, color='red', label=\"average marks\")\nplt.title(\"Bar Graph\")\nplt.xlabel(\"Dvisions\")\nplt.ylabel(\"marks\")\n\nplt.legend(loc=\"best\")\nplt.show()","60c634f0":"x = np.random.randn(100)\n# random.randn generates normal distributed data points which have 0 mean and 1 standard deviation as \n# you can get an idea from the hiistogram\n\nplt.hist(x)\nplt.title(\"Histogram\")\nplt.xlabel(\"Random Normal distributed Data\")\nplt.ylabel(\"Frequency\")\nplt.show()","f9934fc3":"height = [167, 170, 149, 180, 146, 159, 156, 134, 156, 178, 166, 167]\nweight = [86, 67, 78, 56, 66, 67, 76, 67, 78 ,87 , 66, 88 ]\n\nplt.xlim(140, 200)\nplt.ylim(60, 100)\n\nplt.scatter(x=height, y=weight)\nplt.title(\"Scatter plot\")\nplt.xlabel(\"height\")\nplt.ylabel(\"weight\")\nplt.show()","de44e19d":"from mpl_toolkits import mplot3d\n\nax = plt.axes(projection='3d')\nax.scatter3D(height, weight)\nax.set_xlabel(\"Height\")\nax.set_ylabel(\"Weight\")\nplt.show()","6cf7dce0":"\ndivision = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nmarks = [30, 45, 60, 44, 67]\nexplode = [0,0.1,0,0,0]\n\nplt.figure(figsize=(6,6))\nplt.pie(marks, explode=explode, labels=division, shadow=True, startangle=45)\nplt.axis('equal')\nplt.legend(loc=\"best\")\nplt.show()","63380aa2":"### Pie Charts","afa31b44":"### plotting from a jupyter notebook","b5b47451":"### Scatter plot","74462fc8":"One more basic type of chart is pie chart, gives a lot of information and can be made using by `pie()`","236c9ad5":"We imported matplotlib as `import matplotlib` most of the time we have to work with `pyplot` of matplotlib so we have called pyplot from matplotlib and gave an `alias as plt` to make this simpler to use.","07a7994e":"### 1. Introducton","6058eeaf":"Scatter plots are widely used graph especially they come in handy in visualizing a problem of regression.","75970f2d":"Matplotlin is a basic visualization tool for python programming language.\nSo basically what is data visualizaton ? \nWhen we want to convey some information with the help of visuals plots and graphs this process is called **Data Visualization**.\n\nIt helps to analyze and visulize complex data clearly and make correct dicisions. with the help of visualization of data, we got an idea of which is to be focused more and where to focus as well.\n\nThe goal of data visualization is basically communicate the information in a clear and efficient manner to non technical people.It can produce publicatiion quality figures in a variety of formats and these figures can be saved for the further use.","29e4d4a2":"### Histogram","d4c2bf58":"## Matplotlib for Data Visualazation","df56e9a6":"Bar graphs are one of the most common type of graph and are use to show data associated with the categorical variable.","21eebfd8":"Resizing the figure according to the need with figsize","51f489b1":">**Learning and taking help from Documentation is not a crime. \nLearn only Basics how to use a specific tool no need to remember every single thing. for that we have documentation**","65973733":"### Figure and Subplots","2c6fc633":"### Importing Matplotlib","53c64c72":"This scatter plot can be visulize in 3d using `mplot3d`","fb4da32e":"**I hope you find this kernel useful and your <font color='red'>UPVOTE<\/font> would be highly appreciated**","62d1e0e4":"### Bar Graphs","c526d20f":"- Histograms are very useful when we have continuous data in nature.\n- histogram's data is plotted within a range against its frequency","0cb988ff":"Jupyter notebook (IPython notebook) provides code execution, graphical plots, rich text and media display as well and much more into a sinle executable documents.\n\nInteractive plotting can be done in IPython notebook with `%matplotlib inline` magic command","5d29c99e":"python has so many visualization tool which are suitable for various purpose. for now we will bw focusing on the basic and powerful tool , Matplotlib"}}