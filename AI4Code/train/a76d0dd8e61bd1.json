{"cell_type":{"5547c658":"code","6642aea8":"code","c4ba793d":"code","0a268df1":"code","f6cc7e18":"code","4fc211e7":"code","fb4ec5a4":"code","4f8c0dd1":"code","86213058":"code","a6f01272":"code","79d1ca10":"code","37569ea0":"code","4796f504":"code","b7fc6bf5":"code","80f76957":"code","ab5bf982":"code","64245c50":"code","a4892680":"code","ce1e80be":"code","40a4ebb7":"code","e165f3cf":"code","dca1c7aa":"code","bd66106b":"code","06f7d1da":"markdown","f0092e42":"markdown","6443e60c":"markdown","a5701c18":"markdown","c6fc82e5":"markdown","0f69e7ff":"markdown","03dd93e5":"markdown","d14be51f":"markdown","ca55aafb":"markdown","8104b0d5":"markdown","b862dae2":"markdown","982e6b68":"markdown","8a0b3982":"markdown"},"source":{"5547c658":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","6642aea8":"#Load the csv file and make the data frame\nauto_df = pd.read_csv('..\/input\/auto-mpg.csv')","c4ba793d":"#display the data frame\nauto_df","0a268df1":"#display the shape of the data\nprint(\"The data frame has {} rows and {} columns\".format(auto_df.shape[0],auto_df.shape[1]))","f6cc7e18":"#display the data types of each column\nauto_df.dtypes","4fc211e7":"#check null values are there or not\nauto_df.apply(lambda x:sum(x.isnull()))","fb4ec5a4":"#calculate how many are '?' values in horsepower column\nauto_df[auto_df['horsepower']=='?']","4f8c0dd1":"#5 point summary\nauto_df.describe()","86213058":"auto_df.replace('?',np.NAN,inplace=True)","a6f01272":"auto_df['horsepower'] = auto_df['horsepower'].astype('float')","79d1ca10":"#check the data type of each column\nauto_df.dtypes","37569ea0":"#5 point summay\nauto_df.describe()","4796f504":"#replace the Nan values of horsepower column with mean value of horsepower column\nauto_df.replace(np.NaN,np.mean(auto_df['horsepower']),inplace=True)","b7fc6bf5":"#5 point summary of horsepower column\nauto_df['horsepower'].describe()","80f76957":"#Now our objective is to predict the mpg that means mpg is our target variable. \n#so for that we have to check which independent variable has linear relationship with mpg(target variable)\n#so for that we are using r value or pearon ceofficient\n#if pearson coefficient is 0.7 in magnitude or greater that this we are considering there is linear relationship between independent variable and target variable\n#if pearson coefficient is less than 0.7 in magnitude than we are considering there is not good linear relationship between independent variable and target variable\n\n#so calculate pearson coefficient for each independent variable with target variable\n\nprint(\"the r value and p value for cylinders and mpg respectively is {}\".format(stats.pearsonr(auto_df['cylinders'],auto_df['mpg'])))","ab5bf982":"for i in auto_df.columns:\n    if i!='car name':\n        print(\"the r and p value for \"+i+\" and mpg respectively is {}\".format(stats.pearsonr(auto_df[i],auto_df['mpg'])))","64245c50":"#multivariate plot\nsns.pairplot(data=auto_df)\nplt.show()","a4892680":"#check how many cylinder cars are most\nsns.countplot(auto_df['cylinders'])\nplt.show()","ce1e80be":"#display most cars are of which model\nsns.countplot(auto_df['model year'])\nplt.show()","40a4ebb7":"sns.jointplot(auto_df['model year'],auto_df['mpg'])\nplt.show()","e165f3cf":"X = auto_df.iloc[:,1:8].values\nY = auto_df.iloc[:,0].values","dca1c7aa":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=0)\n\nregressor = LinearRegression()\nregressor.fit(X_train,Y_train)","bd66106b":"Y_pred = regressor.predict(X_test)\nprint(regressor.score(X_test,Y_test))","06f7d1da":"now '?' values are replaced with NaN values. now we have change the datatype of horsepower column","f0092e42":"what we did is in X we put all independent variable and in Y we put target variable","6443e60c":"so from above we can see mostly car are 73 model","a5701c18":"so from above we can see 4 cylinders car are most.","c6fc82e5":"lets start to build the model:)","0f69e7ff":"now we have two choices for '?' values:\n1. we have to remove those records from the data set.\n2. we can replace these '?' values with some central values.","03dd93e5":"as we can see that we are not able to see 5 point summary of horsepower column because it is of object type. To able to see 5 point summary i am replacing '?' values with Nan values","d14be51f":"now we are able to see 5 point summary of horsepower column","ca55aafb":"as we can see there are no null values but in horsepower column some values are '?'","8104b0d5":"from above we can see that horsepower is of object type. and one thing to be noted that in horsepower column some values are '?'.","b862dae2":"ae we can see from above that cylinders,displacemnet,horsepower,weight have linear relationship with mpg because r value is greater than 0.7. and acceleration,model,origin have less r value. so we can ignore these 3 column\/independent variable beacuse they are not good as much in predictiong mpg as we are using linear regression model.","982e6b68":"as we can see datatype of horsepower column changed from object to float","8a0b3982":"as we can see from above 6 records are there with '?' values in horsepower column."}}