{"cell_type":{"ab49b0e9":"code","2d299781":"code","8cc82898":"code","f383b3ab":"code","df8173ec":"code","71a4f1f0":"code","491368d5":"code","f6c0ee12":"code","87952104":"code","cb00ce25":"code","f2a436c9":"code","9edcd198":"code","2ef94ab7":"code","679de014":"code","d9260c5a":"code","bae35247":"code","ef314b35":"code","2208c483":"code","ec40ea7d":"code","2dc9c086":"code","7292494a":"markdown","69515837":"markdown","596a2aad":"markdown","49253ed9":"markdown","b0f7f076":"markdown"},"source":{"ab49b0e9":"import pandas as pd\nimport numpy as np\n\nfrom sklearn.preprocessing import OrdinalEncoder\nfrom sklearn.model_selection import train_test_split, KFold\n\nfrom xgboost import XGBRegressor\nimport lightgbm as lgb\n\nfrom sklearn.metrics import mean_squared_error\n\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')","2d299781":"train = pd.read_csv(\"..\/input\/30-days-of-ml\/train.csv\")\ntest = pd.read_csv(\"..\/input\/30-days-of-ml\/test.csv\")\nsample_submission = pd.read_csv(\"..\/input\/30-days-of-ml\/sample_submission.csv\")","8cc82898":"print(f'Train Shape: {train.shape}\\nTest Shape: {test.shape}')","f383b3ab":"train.dtypes","df8173ec":"cat_cols = [col for col in train.columns if train[col].dtype=='object']\ncat_cols","71a4f1f0":"cont_cols = [col for col in train.columns \n             if train[col].dtype != 'object' and col not in ('id', 'target')]\ncont_cols","491368d5":"train['target'].describe()","f6c0ee12":"train['target'].hist()","87952104":"# calculate summary statistics\nmean = train['target'].mean() \nstd = train['target'].std()\n# identify outliers\ncut_off = std * 3\nlower, upper = mean - cut_off, mean + cut_off\n\noutliers = train[(train['target'] > upper) | (train['target'] < lower)]\n# dropping outliers\ntrain.drop(outliers.index.to_list(), inplace=True)\ntrain.shape","cb00ce25":"# calculate interquartile range\nq25, q75 = np.percentile(train['target'], 25), np.percentile(train['target'], 75)\niqr = q75 - q25\n\n# calculate the outlier cutoff\ncut_off = iqr * 1.5\nlower, upper = q25 - cut_off, q75 + cut_off\n\n# calculate the outlier cutoff\ncut_off = iqr * 1.5\nlower, upper = q25 - cut_off, q75 + cut_off\n\noutliers = train[(train['target'] > upper) | (train['target'] < lower)]\n# dropping outliers\ntrain.drop(outliers.index.to_list(), inplace=True)\ntrain.shape","f2a436c9":"train['target'].hist()","9edcd198":"train.isna().sum()[train.isna().sum() > 0]","2ef94ab7":"test.isna().sum()[test.isna().sum() > 0]","679de014":"ordinal_encoder = OrdinalEncoder()\ntrain[cat_cols] = ordinal_encoder.fit_transform(train[cat_cols])\ntest[cat_cols] = ordinal_encoder.transform(test[cat_cols])","d9260c5a":"# X_train, X_valid, y_train, y_valid = train_test_split(train.drop(columns=['target']),\n#                                                       train['target'].values,\n#                                                       test_size=0.1, random_state=42)\n# X_train.shape, X_valid.shape, y_train.shape, y_valid.shape","bae35247":"xgb_reg = XGBRegressor(random_state=42, n_jobs=-1)\n# xgb_reg.fit(X_train.drop(columns=['id']), y_train)\n# preds_xgb = xgb_reg.predict(X_valid.drop(columns=['id']))\n# print('RMSE:', mean_squared_error(y_valid, preds_xgb, squared=False))","ef314b35":"kf = KFold(n_splits=5, shuffle=True, random_state=42)\nrmse_scores = []\nfinal_preds = []\nfeatures = train.drop(columns=['id', 'target'])\ntarget = train['target']\n\nX_test = test.drop(columns=['id'])\n\nfor train_index, valid_index in kf.split(features):\n    X_train, X_valid = features.iloc[train_index], features.iloc[valid_index] \n    y_train, y_valid = target.iloc[train_index], target.iloc[valid_index]\n    xgb_reg.fit(X_train, y_train);\n    # train set scores\n    preds_xgb = xgb_reg.predict(X_valid)\n    rmse_scores.append(mean_squared_error(y_valid, preds_xgb, squared=False))\n    # test set scores\n    preds = xgb_reg.predict(X_test)\n    final_preds.append(preds)\n\n","2208c483":"sample_submission['target'] = np.column_stack(final_preds).mean(axis=1)","ec40ea7d":"sample_submission.head()","2dc9c086":"sample_submission.to_csv('submission.csv', index=False)","7292494a":"## select the final model","69515837":"## encode categorical features","596a2aad":"## train model","49253ed9":"## remove outliers\n","b0f7f076":"## check missing values"}}