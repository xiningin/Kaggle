{"cell_type":{"9f6d1859":"code","b4a01447":"code","0025d2b2":"code","4edef8d8":"code","027535e0":"code","7675f225":"code","4642d500":"code","b9baa02a":"code","a633727c":"code","0485cc6e":"code","e0afc9f8":"code","981d8610":"code","e9f3bbe2":"code","936ad79d":"code","0b66c188":"code","0c162ef5":"markdown","797d1169":"markdown","a5693b4d":"markdown","ab9da0df":"markdown","eb3a759f":"markdown","003efb72":"markdown","84845d48":"markdown","c1d0ac5b":"markdown","32d9455f":"markdown"},"source":{"9f6d1859":"import numpy as np \nimport pandas as pd \nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nfrom bokeh.plotting import figure\nfrom bokeh.models import ColumnDataSource, HoverTool, Select, CustomJS\nfrom bokeh.layouts import column\nfrom bokeh.io import output_notebook, show\n\nimport os\n\n# LOAD THE DATA\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        path = str(os.path.join(dirname, filename))\n        if 'inflow' in path:\n            inflow = pd.read_csv(path,index_col=0).replace(to_replace=np.nan,value=0)\n        elif 'outflow' in path:\n            outflow = pd.read_csv(path,index_col=0).replace(to_replace=np.nan,value=0)\n        else: \n            bilateral = pd.read_csv(path,index_col=0)","b4a01447":"# SAMPLE SNIPPET OF 'INFLOW' DATAFRAME\ninflow","0025d2b2":"# REMOVE UNECESSARY ROWS; ADD A NEW COLUMN CONTAINING TOTAL SUM OF USD PER COUNTRY SINCE 1970s\ninflow.drop(inflow.tail(8).index,inplace=True)\ninflow['total_in_usd'] = inflow.sum(axis=1)\n\noutflow.drop(outflow.tail(8).index,inplace=True)\noutflow['total_in_usd'] = outflow.sum(axis=1)","4edef8d8":"# SORT VALUES BY HIGHEST USD SUM TOTAL. GET FIRST 20 ONLY.\ninflow_top_alltime = inflow.sort_values(by='total_in_usd',ascending=False).head(20)\noutflow_top_alltime = outflow.sort_values(by='total_in_usd',ascending=False).head(20)","027535e0":"# RENAME COLUMN AND RESET INDEX\ninflow_top_alltime.rename(columns={'Migrant remittance inflows (US$ million)':'Country'}, inplace=True)\ninflow_top_alltime.reset_index(drop=True, inplace=True)\n\noutflow_top_alltime.rename(columns={'Migrant remittance outflows (US$ million)':'Country'}, inplace=True)\noutflow_top_alltime.reset_index(drop=True, inplace=True)","7675f225":"# SAMPLE CLEANED DATA\ninflow_top_alltime.head()","4642d500":"plot = sns.barplot(x='Country',y='total_in_usd',data=inflow_top_alltime)\nplot.set_xticklabels(plot.get_xticklabels(), rotation=90)\nplt.title('Top 20 countries with most inflows since 1970s (in US$ million)')\nplt.show()","b9baa02a":"plot = sns.barplot(x='Country',y='total_in_usd',data=outflow_top_alltime)\nplot.set_xticklabels(plot.get_xticklabels(), rotation=90)\nplt.title('Top 20 countries with most outflows since 1970s (in US$ million)')\nplt.show()","a633727c":"# LOAD BOKEH PLOTS INLINE\noutput_notebook()","0485cc6e":"# TRANSPOSE INFLOW DATAFRAME\ntranspose_inflow = inflow.set_index('Migrant remittance inflows (US$ million)').transpose()\ntranspose_inflow.drop(transpose_inflow.tail(2).index,inplace=True) # remove total and 2017p\n\n# TRANSPOSE OUTFLOW DATAFRAME\ntranspose_outflow = outflow.set_index('Migrant remittance outflows (US$ million)').transpose()\ntranspose_outflow.drop(transpose_outflow.tail(1).index,inplace=True)\n\n# DISPLAY SAMPLE TRANSPOSED COLUMNS\ntranspose_outflow.tail()","e0afc9f8":"yr_list = [i for i in range(1970,2017,1)]\ncol_list = inflow['Migrant remittance inflows (US$ million)'].unique()\ntemp_df = pd.DataFrame(columns=col_list)\nfor ctry in col_list:\n    temp_df[ctry] = {'year':[], 'inflow':[], 'outflow':[]}\n    temp_df[ctry]['year'] = yr_list\n    temp_df[ctry]['inflow'] = list(transpose_inflow[ctry])\n    temp_df[ctry]['outflow'] = list(transpose_outflow[ctry])\n\n# RESHAPED DATAFRAME FOR CUSTOMJS PURPOSES\ntemp_df","981d8610":"temp_dict = temp_df.to_dict()\nsource = ColumnDataSource(temp_dict['Philippines'])\n\n# DEFINE THE GRAPH\nplot = figure(title='Inflow vs Outflow per Country (US$ million)',plot_height=400)\n\n# CREATE HOVER ITEMS\nhover = HoverTool(tooltips=[('Year','@year'),('Inflow','@inflow{0.2f}'),('Outflow','@outflow{0.2f}')])\nplot.add_tools(hover)\n\n# CREATE DROPDOWN SELECTION\nselect = Select(title='Country List',value='Philippines',options=list(col_list))\n\n# CREATE THE PLOT\nplot.diamond(x='year',y='inflow',source=source,color='navy',alpha=0.5,size=15,legend_label='Inflow Total')\nplot.line(x='year',y='inflow',source=source,color='navy',line_width=2,line_dash=[4,4])\nplot.triangle(x='year',y='outflow',source=source,color='firebrick',alpha=0.5,size=15,legend_label='Outflow Total')\nplot.line(x='year',y='outflow',source=source,color='firebrick',line_width=2,line_dash=[4,4])\nplot.legend.location = 'top_left'\nplot.legend.background_fill_alpha = 0.2\n\n# CREATE CALLBACK\ncallback = CustomJS(args={'source':source, 'temp_dict':temp_dict}, code=\"\"\"\n           console.log('changed selected option',cb_obj.value);\n           var new_data = temp_dict[cb_obj.value]\n           source.data = new_data\n           source.change.emit();\n\"\"\")\nselect.callback = callback\n\n# SHOW LAYOUT AND PLOT \nshow(column(select,plot))","e9f3bbe2":"bilateral.drop(bilateral.tail(1).index, inplace=True)\nbilateral.drop(columns='World', inplace=True)\nbilateral.rename(columns={'Remittance-receiving country (across)                                                              -                                                 Remittance-sending country (down) ':'Receiving(across)_Sending(down)'}, inplace=True)\nbilateral.set_index('Receiving(across)_Sending(down)', inplace=True)\n\n# CLEANED DATAFRAME\nbilateral.head()","936ad79d":"temp_df = pd.DataFrame(columns=col_list)\nfor ctry in col_list:\n    temp_df_20 = bilateral[[ctry]].sort_values(by=ctry, ascending=False).head(20)\n    temp_df[ctry] = {'country':[], 'total':[]}\n    temp_df[ctry]['country'] = list(temp_df_20.index)\n    temp_df[ctry]['total'] = list(temp_df_20[ctry])\n\n# RESHAPED DATAFRAME FOR CUSTOMJS PURPOSES\ntemp_df","0b66c188":"temp_dict = temp_df.to_dict()\nsource = ColumnDataSource(temp_dict['Philippines'])\n\n# DEFINE AND CREATE THE GRAPH\nsorted_cat = sorted(source.data['country'], key=lambda y:source.data['total'][source.data['country'].index(y)],reverse=True)\nplot = figure(title='Top 20 places where remittances come from (Y2016)',plot_height=400,y_range=sorted_cat)\nplot.hbar(y='country',right='total',height=0.8,source=source)\n\n# CREATE HOVER ITEMS\nhover = HoverTool(tooltips=[('Total (US$ million)','@total{0.2f}')])\nplot.add_tools(hover)\n\n# CREATE DROPDOWN SELECTION\nselect = Select(title='Country List',value='Philippines',options=list(col_list))\n\n# CREATE CALLBACK\ncallback = CustomJS(args={'source':source, 'temp_dict':temp_dict, 'plot':plot}, code=\"\"\"\n           console.log('changed selected option',cb_obj.value);\n           var new_data = temp_dict[cb_obj.value]\n           plot.y_range.factors = new_data['country']\n           plot.change.emit();\n           source.data = new_data\n           source.change.emit();\n\"\"\")\nselect.callback = callback\n\n# SHOW LAYOUT AND PLOT \nshow(column(select,plot))","0c162ef5":"# Table of Contents\n* [About this Kernel](#Introduction)\n* [Data Preparation](#Data-Preparation)\n* [Static Graphs: Top countries with most inflows and outflows](#Static-Graphs)\n* [Dynamic Graphs: Remittance movement per country](#Dynamic-Graphs)","797d1169":"<a id='Static-Graphs'><\/a>\n# Static Graphs: Top countries with most inflows and outflows","a5693b4d":"That's all folks for the Global Remittance Visualization. Do leave a note for feedback and improvement. Thank you for reading and spending some time on this kernel. :-)","ab9da0df":"<a id='Dynamic-Graphs'><\/a>\n# Dynamic Graphs: Remittance movement per country","eb3a759f":"<a id='Data-Preparation'><\/a>\n# Data Preparation","003efb72":"The second graph below shows the top places where the highest remittances of a certain country originated.\n\nThis is another interactive graph where you can hover over the datapoints and do country selection on the dropdown list. This time, we'll be using the 'Bilateral' file and restructure this dataframe in order to fit the custom javascript selection.","84845d48":"I'll be re-structuring the 'Inflow' & 'Outflow' dataframe so that we can use it for the custom javascript callback.","c1d0ac5b":"<a id='Introduction'><\/a>\n# About this Kernel\n\nThis notebook contains visualizations regarding worldwide economic remittances. The data here came from the World Bank (which has been slightly cleaned up for Kaggle use). It provides remittance data movements (inbound and outbound) between various countries. \n\nSummary Content:\n* Number of countries involved: 214\n* Time period: 1970 till 2016\n* Unit of measurement: All values are in terms of millions of US dollars.\n* Files:\n    * bilateral-remittance.csv - Estimated remittances between world countries in the year 2016.\n    * remittance-inflow.csv - Historical remittance money inflow into world countries since 1970.\n    * remittance-outflow.csv - Historical remittance money outflow from world countries since 1970. \n\nI will be creating static and dynamic graphs for visualization, mainly using these 2 python libraries: seaborn and bokeh.","32d9455f":"Below is a plot showing Inflow vs Outflow amount total (in US$ million) per Country. Do take note that this is an interactive graph:\n* Hover on the datapoints to see the total inflow\/ outflow amounts per year.\n* Click on the dropdown to select a different country."}}