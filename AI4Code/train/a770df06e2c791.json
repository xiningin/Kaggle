{"cell_type":{"fbb05088":"code","42579c11":"code","6fab355f":"code","d54af0b6":"code","e97c6e98":"code","798bb33d":"code","daf1545d":"code","73e09e34":"code","fcdefcac":"code","a27afa97":"markdown"},"source":{"fbb05088":"import numpy as np\nimport pandas as pd\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport cv2\n\ntest_df = pd.read_csv('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/sample_submission.csv')\ntrain_df = pd.read_csv('..\/input\/rsna-miccai-brain-tumor-radiogenomic-classification\/train_labels.csv')","42579c11":"test_df['caseID'] = test_df['BraTS21ID'].astype(str).str.zfill(5)   \ntest_df","6fab355f":"folders = ['T1w', 'T1wCE', 'T2w', 'FLAIR']\nt1w = []\nt1wce = []\nt2w = []\nflair = []\n\nfor case_id in test_df.caseID:\n    for folder in folders:\n        for dirname, _, filenames in os.walk(f'..\/input\/rsna-miccai-png\/test\/{case_id}\/{folder}\/'):\n            max_nonblack = 0\n            FILENAME = ''\n            for filename in filenames:\n                img = plt.imread(f'{dirname}{filename}')\n                if cv2.countNonZero(img) > max_nonblack:\n                #if np.mean(img) > max_nonblack:\n                    max_nonblack = cv2.countNonZero(img)\n                    FILENAME = filename\n\n            if folder == 'T1w':\n                t1w.append(FILENAME)\n            elif folder == 'T1wCE':\n                t1wce.append(FILENAME)\n            elif folder == 'T2w':\n                t2w.append(FILENAME)\n            elif folder == 'FLAIR':\n                flair.append(FILENAME)\n        \ntest_df['T1w'] = t1w \ntest_df['T1wCE'] = t1wce\ntest_df['T2w'] = t2w\ntest_df['FLAIR'] = flair\n\ntest_df","d54af0b6":"idx = 1\ncase_id = test_df.caseID.iloc[idx]\nfilename = test_df.T1w.iloc[idx]\nt1w = plt.imread(f'..\/input\/rsna-miccai-png\/test\/{case_id}\/T1w\/{filename}')\nfilename = test_df.T1wCE.iloc[idx]\nt1wce = plt.imread(f'..\/input\/rsna-miccai-png\/test\/{case_id}\/T1wCE\/{filename}')\nfilename = test_df.T2w.iloc[idx]\nt2w = plt.imread(f'..\/input\/rsna-miccai-png\/test\/{case_id}\/T2w\/{filename}')\nfilename = test_df.FLAIR.iloc[idx]\nflair = plt.imread(f'..\/input\/rsna-miccai-png\/test\/{case_id}\/FLAIR\/{filename}')\n\nfig = plt.figure(figsize=(26,6))\nplt.gray()\nax1 = fig.add_subplot(141)\nplt.imshow(t1w, aspect='auto')\nax2 = fig.add_subplot(142)\nplt.imshow(t1wce, aspect='auto')\nax3 = fig.add_subplot(143)\nplt.imshow(t2w, aspect='auto')\nax4 = fig.add_subplot(144)\nplt.imshow(flair, aspect='auto')","e97c6e98":"train_df['caseID'] = train_df['BraTS21ID'].astype(str).str.zfill(5)   \ntrain_df","798bb33d":"train_df = train_df[(train_df.caseID != \"00109\") & (train_df.caseID != \"00123\") & (train_df.caseID != \"00709\")]\ntrain_df","daf1545d":"folders = ['T1w', 'T1wCE', 'T2w', 'FLAIR']\nt1w = []\nt1wce = []\nt2w = []\nflair = []\n\nfor case_id in train_df.caseID:\n    for folder in folders:\n        for dirname, _, filenames in os.walk(f'..\/input\/rsna-miccai-png\/train\/{case_id}\/{folder}\/'):\n            max_nonblack = 0\n            FILENAME = ''\n            for filename in filenames:\n                img = plt.imread(f'{dirname}{filename}')\n                if cv2.countNonZero(img) > max_nonblack:\n                #if np.mean(img) > max_nonblack:\n                    max_nonblack = cv2.countNonZero(img)\n                    FILENAME = filename\n\n            if folder == 'T1w':\n                t1w.append(FILENAME)\n            elif folder == 'T1wCE':\n                t1wce.append(FILENAME)\n            elif folder == 'T2w':\n                t2w.append(FILENAME)\n            elif folder == 'FLAIR':\n                flair.append(FILENAME)\n        \ntrain_df['T1w'] = t1w \ntrain_df['T1wCE'] = t1wce\ntrain_df['T2w'] = t2w\ntrain_df['FLAIR'] = flair\n\ntrain_df","73e09e34":"idx = 2\ncase_id = train_df.caseID.iloc[idx]\nfilename = train_df.T1w.iloc[idx]\nt1w = plt.imread(f'..\/input\/rsna-miccai-png\/train\/{case_id}\/T1w\/{filename}')\nfilename = train_df.T1wCE.iloc[idx]\nt1wce = plt.imread(f'..\/input\/rsna-miccai-png\/train\/{case_id}\/T1wCE\/{filename}')\nfilename = train_df.T2w.iloc[idx]\nt2w = plt.imread(f'..\/input\/rsna-miccai-png\/train\/{case_id}\/T2w\/{filename}')\nfilename = train_df.FLAIR.iloc[idx]\nflair = plt.imread(f'..\/input\/rsna-miccai-png\/train\/{case_id}\/FLAIR\/{filename}')\n\nfig = plt.figure(figsize=(26,6))\nplt.gray()\nax1 = fig.add_subplot(141)\nplt.imshow(t1w, aspect='auto')\nax2 = fig.add_subplot(142)\nplt.imshow(t1wce, aspect='auto')\nax3 = fig.add_subplot(143)\nplt.imshow(t2w, aspect='auto')\nax4 = fig.add_subplot(144)\nplt.imshow(flair, aspect='auto')","fcdefcac":"test_df.to_csv('test_df.csv', index=False)\ntrain_df.to_csv('train_df.csv', index=False)","a27afa97":"Note that according to the competition host ([discussion thread](https:\/\/www.kaggle.com\/c\/rsna-miccai-brain-tumor-radiogenomic-classification\/discussion\/262046)), there are three case ids (`00109`, `00123`, `00709`) in the train set that should be excluded because they contain unexpected errors (e.g. missing images). \n\nDrop rows with the following caseID:\n* 00109\n* 00123\n* 00709"}}