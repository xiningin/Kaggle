{"cell_type":{"c330ed04":"code","d3fc973a":"code","3e9d2844":"code","9ca02bc4":"code","586760e5":"code","a3df22e8":"code","65e3deb8":"code","fe886e5b":"code","5f370c58":"code","b4e5bc37":"code","4a6eb3dd":"code","05182aaa":"code","6e904582":"code","8bebb71a":"code","6e37975d":"code","4f49d874":"code","d14237a2":"code","2c700fb7":"code","8a04fc45":"code","3f30856a":"code","b020d205":"markdown","ed9f7290":"markdown","275ee1ae":"markdown","14cb61a9":"markdown","15e3a183":"markdown","237f0855":"markdown","cddb37e7":"markdown","9fe437ea":"markdown","7f4cd806":"markdown"},"source":{"c330ed04":"## Data Analysis Phase\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\n## Display all the columns of the dataframe\n\npd.pandas.set_option('display.max_columns',None)","d3fc973a":"## Data Read\ndataset=pd.read_csv('..\/input\/house-prices-advanced-regression-techniques\/train.csv')\n\n## print shape of dataset with rows and columns\nprint(dataset.shape)","3e9d2844":"## print the top5 records\ndataset.head()","9ca02bc4":"## 1 -step make the list of features which has missing values\nfeatures_with_na=[features for features in dataset.columns if dataset[features].isnull().sum()>1]\n## 2- step print the feature name and the percentage of missing values\n\nfor feature in features_with_na:\n    print(feature, np.round(dataset[feature].isnull().mean(), 4),  ' % missing values')","586760e5":"for feature in features_with_na:\n    temp_ = dataset.copy()\n    \n    # let's make a variable that indicates 1 if the observation was missing or zero otherwise\n    temp_[feature] = np.where(temp_[feature].isnull(), 1, 0)\n    # let's calculate the mean SalePrice where the information is missing or present\n    temp_.groupby(feature)['SalePrice'].median().plot(kind='bar')\n    plt.title(feature)\n    plt.show()","a3df22e8":"print(\"Id of Houses {}\".format(len(dataset.Id)))","65e3deb8":"numerical_features = [feature for feature in dataset.columns if dataset[feature].dtypes != 'O']\n\nprint('Number of numerical variables: ', len(numerical_features))\n\n# visualise the numerical variables\ndataset[numerical_features].head()","fe886e5b":"# list of variables that contain year information\nyear_feature = [feature for feature in numerical_features if 'Yr' in feature or 'Year' in feature]\n\nyear_feature","5f370c58":"# let's explore the content of these year variables\nfor feature in year_feature:\n    print(feature, dataset[feature].unique())","b4e5bc37":"## Lets analyze the Temporal Datetime Variables\n## We will check whether there is a relation between year the house is sold and the sales price\n\ndataset.groupby('YrSold')['SalePrice'].median().plot()\nplt.xlabel('Year Sold')\nplt.ylabel('Median House Price')\nplt.title(\"House Price vs YearSold\")","4a6eb3dd":"\nfor feature in year_feature:\n    if feature!='YrSold':\n        data=dataset.copy()\n        ## We will capture the difference between year variable and year the house was sold for\n        data[feature]=data['YrSold']-data[feature]\n\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalePrice')\n        plt.show()","05182aaa":"## Numerical variables are usually of 2 type\n## 1. Continous variable and Discrete Variables\n\ndiscrete_feature=[feature for feature in numerical_features if len(dataset[feature].unique())<25 and feature not in year_feature+['Id']]\nprint(\"Discrete Variables Count: {}\".format(len(discrete_feature)))","6e904582":"## Lets Find the realtionship between them and Sale PRice\n\nfor feature in discrete_feature:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","8bebb71a":"continuous_feature=[feature for feature in numerical_features if feature not in discrete_feature+year_feature+['Id']]\nprint(\"Continuous feature Count {}\".format(len(continuous_feature)))","6e37975d":"for feature in continuous_feature:\n    data=dataset.copy()\n    data[feature].hist(bins=25)\n    plt.xlabel(feature)\n    plt.ylabel(\"Count\")\n    plt.title(feature)\n    plt.show()","4f49d874":"## We will be using logarithmic transformation\n\n\nfor feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data['SalePrice']=np.log(data['SalePrice'])\n        plt.scatter(data[feature],data['SalePrice'])\n        plt.xlabel(feature)\n        plt.ylabel('SalesPrice')\n        plt.title(feature)\n        plt.show()","d14237a2":"for feature in continuous_feature:\n    data=dataset.copy()\n    if 0 in data[feature].unique():\n        pass\n    else:\n        data[feature]=np.log(data[feature])\n        data.boxplot(column=feature)\n        plt.ylabel(feature)\n        plt.title(feature)\n        plt.show()\n        \n    ","2c700fb7":"categorical_features=[feature for feature in dataset.columns if data[feature].dtypes=='O']\ncategorical_features","8a04fc45":"for feature in categorical_features:\n    print('The feature : {} and has {} categories'.format(feature,len(dataset[feature].unique())))","3f30856a":"for feature in categorical_features:\n    data=dataset.copy()\n    data.groupby(feature)['SalePrice'].median().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel('SalePrice')\n    plt.title(feature)\n    plt.show()","b020d205":"### Temporal Variables(Eg: Datetime Variables)\n\nFrom the Dataset we have 4 year variables. We have extract information from the datetime variables like no of years or no of days. One example in this specific scenario can be difference in years between the year the house was built and the year the house was sold. We will be performing this analysis in the Feature Engineering which is the next video.","ed9f7290":"### Categorical Variables","275ee1ae":"## Project Name: House Prices: Advanced Regression Techniques\n\nThe main aim of this project is to predict the house price based on various features which we will discuss as we go ahead\n\n\nDataset to downloaded from the below link\n\nhttps:\/\/www.kaggle.com\/c\/house-prices-advanced-regression-techniques\/data","14cb61a9":"We do the following preprocessing on data \n* Missing Values\n* All The Numerical Variables\n* Distribution of the Numerical Variables\n* Categorical Variables\n* Cardinality of Categorical Variables\n* Outliers\n* Relationship between independent and dependent feature(SalePrice)","15e3a183":"Since many missing values, we need to find the relationship between **missing values** and **Sales Price**\nLet's plot some diagram for this relationship","237f0855":"### Continuous Variable","cddb37e7":"### Missing Value Identification","9fe437ea":"### Outliers","7f4cd806":"Here With the relation between the missing values and the dependent variable is clearly visible.So We need to replace these nan values with something meaningful which we will do in the Feature Engineering section\n\nFrom the above dataset some of the features like Id is not required"}}