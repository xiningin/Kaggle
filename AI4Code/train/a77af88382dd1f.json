{"cell_type":{"8828a19f":"code","3eeb6aa3":"code","4f9be759":"code","c7a64e0f":"code","4df38320":"code","a26186b9":"code","57ec3f60":"code","16172648":"code","067ec65d":"code","20ad3db6":"code","cfe33da3":"code","5b0c7ebc":"code","e44ee718":"code","c50cd300":"code","298f9d2d":"markdown"},"source":{"8828a19f":"%matplotlib inline\nimport os\nimport numpy as np\nimport pandas as pd \nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\nfrom sklearn.metrics import roc_curve, auc\n\nfrom fastai.text.all import *\n\nprint(os.listdir(\"..\/input\/\"))\n\n# Any results you write to the current directory are saved as output.","3eeb6aa3":"\nMyPath = '\/kaggle\/input\/imdbrawtext\/aclimdb\/'\n\npath = os.path.join(MyPath, \"aclImdb\")\nprint(os.listdir(path))","4f9be759":"print(len(os.listdir(path + '\/train\/pos')))\nprint(len(os.listdir(path + '\/train\/neg')))\nprint(len(os.listdir(path + '\/test\/pos')))\nprint(len(os.listdir(path + '\/test\/neg')))","c7a64e0f":"dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid='test', batch_size=32)","4df38320":"dls.show_batch()","a26186b9":"learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy)","57ec3f60":"learn.fine_tune(4, 1e-2)","16172648":"learn.show_results()","067ec65d":"interp = ClassificationInterpretation.from_learner(learn)\ninterp.plot_confusion_matrix()","20ad3db6":"preds,y, loss = learn.get_preds(with_loss=True)\n# get accuracy\nacc = accuracy(preds, y)\nprint('The accuracy is {0} %.'.format(acc))","cfe33da3":"interp.plot_top_losses(5)","5b0c7ebc":"# probs from preds\nprobs = np.exp(preds[:,1])\n# Compute ROC curve\nfpr, tpr, thresholds = roc_curve(y, probs, pos_label=1)\n\n# Compute ROC area\nroc_auc = auc(fpr, tpr)\nprint('ROC area is {0}'.format(roc_auc))","e44ee718":"plt.figure()\nplt.plot(fpr, tpr, color='darkorange', label='ROC curve (area = %0.2f)' % roc_auc)\nplt.plot([0, 1], [0, 1], color='navy', linestyle='--')\nplt.xlim([-0.01, 1.0])\nplt.ylim([0.0, 1.01])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic')\nplt.legend(loc=\"lower right\")","c50cd300":"learn.predict(\"I couldn't finish watching that movie!\")","298f9d2d":"* Supervised binary classification of imdb reviews into pos and neg sentiment analysis\n* Pos = Neg reviews ... so guessing accuracy is 50%\n* As the dataset is well balanced accuracy & ROC AUC are used as optimization metric and to measure performance\n* Previous nb w Keras+TF, 1D convnet + GRU ... accuracy on test = 0.80 see https:\/\/www.kaggle.com\/drscarlat\/imdb-sentiment-analysis-keras-and-tensorflow\n\n* fastAI ... accuracy on **test = 0.93** w ROC **AUC of 0.98**\n* Based on the exercise in the excellent book https:\/\/www.amazon.com\/Deep-Learning-Coders-fastai-PyTorch\/dp\/1492045527\/ref=sr_1_1?dchild=1&keywords=fastai+no&qid=1608494698&sr=8-1\n\n"}}