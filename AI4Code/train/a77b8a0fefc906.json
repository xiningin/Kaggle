{"cell_type":{"c83d7c0b":"code","18f29054":"code","6f63b7d6":"code","53fc7590":"code","daf95424":"code","6ebb1ba7":"code","25ccadb6":"code","fe44d16d":"code","f6a60360":"code","e4e08045":"code","6057960a":"code","99910710":"code","a2e39b74":"code","bd1b58e7":"code","786bfd00":"code","8d836d05":"code","d72200a5":"code","1f63dabf":"code","a83a8057":"code","20e155eb":"code","267cf054":"markdown","a6186db4":"markdown","47f008f0":"markdown","bba951d8":"markdown","093c6182":"markdown","4a5efa10":"markdown","4b8d33c5":"markdown","7d260080":"markdown","c0ebb684":"markdown"},"source":{"c83d7c0b":"import pandas as pd\nimport numpy as np\n","18f29054":"from sklearn.datasets import load_iris\niris_dataset = load_iris()","6f63b7d6":"print('Keys of iris_dataset: \\n{}'.format(iris_dataset.keys()))","53fc7590":"val = iris_dataset['DESCR']\nstart_val = val[:200]\nprint(start_val +'\\n...')","daf95424":"  print('Target names: {}'.format(iris_dataset['target_names']))","6ebb1ba7":"print('Feature names: \\n{}'.format(iris_dataset['feature_names']))","25ccadb6":"print('Type of data: {}'.format(type(iris_dataset['data'])))","fe44d16d":"print('Shape of data: {}'.format(iris_dataset['data'].shape))","f6a60360":"print('First five rows of data:\\n{}'.format(iris_dataset['data'][:5]))","e4e08045":"print('Type of target: {}'.format(type(iris_dataset['target'])))","6057960a":"print('Shape of target: {}'.format(iris_dataset['target'].shape))","99910710":"print('Target: \\n{}'.format(iris_dataset['target']))","a2e39b74":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(iris_dataset['data'],iris_dataset['target'],random_state=0)","bd1b58e7":"print('X_train shape:{}'.format(X_train.shape))\nprint('y_train shape:{}'.format(y_train.shape))\nprint('X_test shape:{}'.format(X_test.shape))\nprint('y_test shape:{}'.format(y_test.shape))","786bfd00":"from sklearn.neighbors import KNeighborsClassifier\nknn = KNeighborsClassifier(n_neighbors=1)","8d836d05":"knn.fit(X_train,y_train)","d72200a5":"X_new = np.array([[5,2.9,1,0.2]])\nprint('X_new.shape:{}'.format(X_new.shape))","1f63dabf":"prediction = knn.predict(X_new)\nprint('prediction: {}'.format(prediction))\nprint('predicted target name:{}'.format(iris_dataset['target_names'][prediction]))","a83a8057":"y_pred = knn.predict(X_test)\nprint('Test set predictions:\\n {}'.format(y_pred))","20e155eb":"print('Test set score: {}'.format(np.mean(y_pred == y_test)))","267cf054":"Now I will look into each keys","a6186db4":"Now I am going to explore data\n","47f008f0":"Training the model","bba951d8":"Creating model","093c6182":"Making predictions","4a5efa10":"Splitting into training data and testing data","4b8d33c5":"The iris object that is returned by load_iris is similar to a dictionary.Now I will look into the keys in it","7d260080":"Here I have imported some libraries:","c0ebb684":"Evaluating the model"}}