{"cell_type":{"2f2ab1b2":"code","4a243646":"code","aa325457":"code","bf1f8205":"code","8ddd2078":"code","5069cdec":"code","f6bf9d7b":"code","f104fb91":"code","5b6c90aa":"code","7c4230e5":"code","f8892034":"code","cee17f1f":"code","2b8cc288":"code","59c95eaa":"code","1f068d3f":"code","65068e83":"code","d28771f1":"code","5e5e3dae":"code","99b33448":"code","da3ec97b":"code","88dd579f":"code","69b6228b":"code","b2468f51":"code","6aedb401":"code","47c29fb7":"code","417cf004":"markdown","cce7eda1":"markdown","045a1478":"markdown","e31e3eeb":"markdown","a88548f9":"markdown","c56c50a2":"markdown","cf207ee0":"markdown","df8f2928":"markdown","72daaeaa":"markdown","14117df4":"markdown","bfef2578":"markdown","73e579a4":"markdown"},"source":{"2f2ab1b2":"import numpy as np\nimport holoviews as hv\n\nhv.extension('matplotlib')","4a243646":"x0 = -5; x1 = +5\nx = np.linspace(x0,x1,100)","aa325457":"def f(x):\n    return np.exp(-x\/4)*np.cos(x)*np.cos(x)","bf1f8205":"curve = hv.Curve( (x,f(x)) )","8ddd2078":"curve","5069cdec":"N = 5000 # number of random dots in x-y plane\nx = np.random.uniform(low=x0, high=x1, size=N)\ny = np.random.uniform(low=0, high=np.max(f(x)), size=N)","f6bf9d7b":"%opts Scatter (alpha=0.5 s=5)\n\ndots = hv.Scatter( (x,y) )","f104fb91":"dots*curve","5b6c90aa":"X = x[y < f(x)]","7c4230e5":"Y = y[y < f(x)]","f8892034":"selected_dots = hv.Scatter( (X,Y) )","cee17f1f":"dots*selected_dots*curve","2b8cc288":"len(X)","59c95eaa":"print(\"The resulting efficiency (the yield of useful values) is %.1f %%\" % (100*len(X)\/N) )","1f068d3f":"efficiency = len(X)\/N","65068e83":"Np = 10000","d28771f1":"N = int(1.1*(Np\/efficiency))","5e5e3dae":"N","99b33448":"x = np.random.uniform(low=x0, high=x1, size=N)\ny = np.random.uniform(low=0, high=np.max(f(x)), size=N)","da3ec97b":"X = x[y < f(x)]","88dd579f":"len(X)","69b6228b":"X = X[0:Np]","b2468f51":"len(X)","6aedb401":"Y = y[y < f(x)]\nY = Y[0:Np]","47c29fb7":"hv.Scatter( (X,Y) )","417cf004":"Suppose we need Np of resulting values:","cce7eda1":"---","045a1478":"The required N should be somewhat larger than Np\/efficiency","e31e3eeb":"Now the number of values in the resulting array X should be slightly larger than Np:","a88548f9":"We just need to randomly fill the whole x-y plane with dots and then select only the ones below the curve:","c56c50a2":"Let's repeat the same procedure again:","cf207ee0":"If one needs a specific number of random values (Np) it's enough to do the same procedure twice: once with some small number of dots to estimate the yield of useful values and then we can modify the N to produce the required number of useful values (with some safety margin).","df8f2928":"Suppose we would like to generate random numbers from some finite interval with a specific distribution. For example,\n$$\n-5 < x < +5,\\\\\nf(x) = e^{-x\/4}\\cos^2 x\n$$","72daaeaa":"# Generating random numbers with arbitrary distribution\n\n<a href=http:\/\/www.inp.nsk.su\/~petrenko\/>A. Petrenko<\/a> (Novosibirsk, 2020)","14117df4":"So we can simply trim the resulting array to the required length:","bfef2578":"Resulting array X has values distributed according to the function f(x). The length of this array is less than the total number of dots N:","73e579a4":"Now selecting the $x$ values distributed according to the given distribution:"}}