{"cell_type":{"dda0383d":"code","98b1dac0":"code","1dc37da1":"code","619b9c91":"code","084c4451":"code","995d7728":"code","dc2319ea":"code","258a5c6e":"code","0279912c":"code","e8ca476d":"code","2e24757c":"code","d82aecf7":"code","a4f094d2":"code","3b3e9a20":"code","d8e831ed":"code","abecccf7":"code","fcc16fbd":"code","20d79f6e":"code","330dbd43":"markdown","f9c17111":"markdown","c4876bd8":"markdown","505d1667":"markdown","6c3fbcdf":"markdown","8d5d87c3":"markdown","c39955db":"markdown","aa137762":"markdown","48784702":"markdown","374bbc1d":"markdown","6239389a":"markdown","5edab145":"markdown","6ed4d60d":"markdown"},"source":{"dda0383d":"import numpy as np\nimport pandas as pd\nimport string\nfrom collections import defaultdict,Counter\nimport matplotlib.pyplot as plt\nplt.style.use('ggplot')\nfrom nltk.corpus import stopwords\nstop=set(stopwords.words('english'))\n%matplotlib inline\nfrom matplotlib import rcParams \nimport seaborn as sns","98b1dac0":"train = pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest = pd.read_csv('..\/input\/nlp-getting-started\/test.csv')\ntrain.head(100)","1dc37da1":"# train.describe()","619b9c91":"train.isna().sum()","084c4451":"print('There are {} rows and {} columns in train'.format(train.shape[0],train.shape[1]))\nprint('There are {} rows and {} columns in test'.format(test.shape[0],test.shape[1]))","995d7728":"x = train.target.value_counts()\nsns.barplot(x.index,x)\nprint(x)","dc2319ea":"fig, (ax1,ax2)=plt.subplots(1,2,figsize=(10,5))\ntweet_len = train[train['target']==1]['text'].str.len()\nax1.hist(tweet_len, color='red')\nax1.set_title('disaster')\ntweet_len = train[train['target']==0]['text'].str.len()\nax2.hist(tweet_len, color='blue')\nax2.set_title('Not disaster')\nfig.suptitle('Characters in tweets')\nplt.show()","258a5c6e":"fig,(ax1,ax2) = plt.subplots(1,2,figsize=(10,5))\ntweet_len = train[train['target']==1]['text'].str.split().map(lambda x: len(x))\nax1.hist(tweet_len, color='red')\nax1.set_title('disaster')\ntweet_len = train[train['target']==0]['text'].str.split().map(lambda x: len(x))\nax2.hist(tweet_len, color='blue')\nax2.set_title('Not disaster')\nfig.suptitle('Words in a tweet')\nplt.show()","0279912c":"fig,(ax1,ax2) = plt.subplots(1,2,figsize=(10,5))\nword = train[train['target']==1]['text'].str.split().apply(lambda x: [len(i) for i in x])\nsns.distplot(word.map(lambda x: np.mean(x)),ax=ax1,color='red')\nax1.set_title('disaster')\nword = train[train['target']==0]['text'].str.split().apply(lambda x: [len(i) for i in x])\nsns.distplot(word.map(lambda x: np.mean(x)),ax=ax2,color='blue')\nax1.set_title('Not disaster')\nfig.suptitle('Average word length in each tweet')\nplt.show()","e8ca476d":"def create_corpus(target):\n    corpus=[]\n    for x in train[train['target']==target]['text'].str.split():\n        for i in x:\n            corpus.append(i)\n    return corpus","2e24757c":"corpus = create_corpus(1)\ndic = defaultdict(int)\nfor word in corpus:\n    dic[word] += 1\n        \ntop = sorted(dic.items(),key=lambda x: x[1],reverse=True)[:10]\n# print(top)\nx,y=zip(*top)\nplt.bar(x,y)","d82aecf7":"corpus = create_corpus(0)\n\ndic = defaultdict(int)\nfor word in corpus:\n    dic[word]+=1\n\ntop=sorted(dic.items(), key=lambda x:x[1],reverse=True)[:10] \n    \nx,y=zip(*top)\nplt.bar(x,y,color='blue')","a4f094d2":"plt.figure(figsize=(10,5))\ncorpus = create_corpus(1)\n\ndic = defaultdict(int)\nspecial = string.punctuation\nprint(special)\nfor i in (corpus):\n    if i in special:\n        dic[i] += 1\n# print(dic)\nx,y = zip(*dic.items())\nplt.bar(x,y)","3b3e9a20":"plt.figure(figsize=(10,5))\ncorpus = create_corpus(0)\n\ndic = defaultdict(int)\n\nspecial = string.punctuation\nfor i in corpus:\n    if i in special:\n        dic[i] += 1\n# print(dic)\nx,y = zip(*dic.items())\nplt.bar(x,y,color='blue')","d8e831ed":"corpus = create_corpus(1)\ncounter=Counter(corpus)\nmost=counter.most_common()\nx=[]\ny=[]\nfor word,count in most[:40]:\n    if (word not in stop) :\n        x.append(word)\n        y.append(count)\nsns.barplot(x=y,y=x)","abecccf7":"corpus = create_corpus(0)\ncounter=Counter(corpus)\nmost=counter.most_common()\nx=[]\ny=[]\nfor word,count in most[:40]:\n    if (word not in stop) :\n        x.append(word)\n        y.append(count)\nsns.barplot(x=y,y=x)","fcc16fbd":"set(train['keyword'])","20d79f6e":"df = train[['keyword','text']]\ndf.dropna(subset=['keyword'])","330dbd43":"### Common stopwords in tweets","f9c17111":"### Number of words in a tweet","c4876bd8":"### Analyzing punctuations","505d1667":"## Analyzing data","6c3fbcdf":"### Class distribution","8d5d87c3":"## Importing Libraries","c39955db":"### Analyzing common words","aa137762":"### Average word length in a tweet","48784702":"### Data shape","374bbc1d":"### Number of characters in tweets","6239389a":"### what is keyword?","5edab145":"## Loading the data","6ed4d60d":"### Analyzing na"}}