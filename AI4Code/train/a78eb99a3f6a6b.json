{"cell_type":{"a852f92d":"code","a012493c":"code","0bc95882":"code","c4020d4e":"code","f8a4ab9e":"code","84c1eb7b":"code","a7c95401":"code","0b35b810":"code","027e5c5e":"code","48376608":"code","d83c995f":"code","16857385":"code","065cc0ee":"code","205a548b":"code","cc3767c3":"code","dcb39b5d":"code","c1afb8c1":"code","2ef8963a":"code","59719e46":"code","a77260b9":"code","17c571d9":"code","33115d73":"code","88a284bc":"code","5af003a5":"code","25cc2805":"code","15327d9d":"code","146af3f0":"code","9e72acfc":"code","4048ea8e":"code","7d41ee41":"code","65ce4410":"code","b5912a14":"code","83317f38":"code","66f8e0db":"code","62cea49b":"code","c6cfe6d1":"code","8a25f88a":"code","c91f296f":"code","4a959de6":"code","c0a97674":"code","c51b632a":"code","b417a759":"code","2c44649e":"code","7608de2b":"code","3eefa12a":"code","a01529f3":"code","c0d4473d":"code","f0547818":"code","7f5b975f":"code","8fdf9bc6":"code","d61dd5b7":"code","77928cb7":"code","96563992":"code","897ec02d":"code","6a534cd8":"code","53e28717":"code","106ec86b":"code","70e9a5f9":"code","d66d615b":"code","92e99d72":"code","81a3b02a":"code","1090e77d":"code","4e5d5970":"code","4592827c":"code","9ccaa133":"code","cb23b657":"code","993a49b8":"code","c8797e40":"code","f529e085":"code","48ff393b":"code","95c8997c":"code","95d685df":"code","10e73a66":"code","dd76dcea":"code","400c760b":"code","841e9548":"code","59a0bcb9":"code","d3eeec48":"code","f868b13f":"code","4df1c418":"code","29c270a0":"code","723bbd68":"code","287f0ac9":"code","4c4a322e":"code","c5e7e504":"code","d74f4033":"code","674361d2":"code","92098a3f":"code","59a7f7dd":"code","99ce4375":"code","76f05c4c":"code","4697b8e6":"code","c1033c15":"code","940e011a":"code","77417d5b":"code","f0f78bf1":"code","753fc48d":"code","0c756bd2":"code","5daa3a7f":"code","860f3c03":"code","f891d2ab":"code","d50c9f7a":"code","0788f226":"code","ee0f6faa":"code","787995db":"code","fbce954d":"code","19080e59":"code","307c2e7b":"code","6ccf84ec":"code","8b48bc13":"code","224394ef":"code","656e21db":"code","3d0c244b":"code","9f825b8a":"code","9b4b8522":"code","0b1f341b":"code","67b16314":"code","be84c3e4":"code","b22a3a60":"code","8dcab419":"code","7ddddafa":"code","832994f2":"code","9ee2976f":"code","b5331392":"code","6baa5f41":"code","5b92c5f5":"code","6a483b76":"code","e34f82f0":"code","a57a0eda":"code","97dae650":"code","582f8ed3":"code","786e01b7":"code","51ac77df":"code","052a03d5":"code","337bb11c":"code","afe76270":"code","cb17123f":"code","532f907b":"code","66aaf911":"code","05f9b62d":"markdown","2b132c77":"markdown","6bc7b8eb":"markdown","5e9926b3":"markdown","0d86089b":"markdown","08233025":"markdown","f0f2f249":"markdown","dfb8919d":"markdown","e1c24aa8":"markdown","744d06c8":"markdown","e3981602":"markdown","346302c0":"markdown","827ad3d1":"markdown","e3f95bd6":"markdown","1876ac4a":"markdown","5467f67a":"markdown","ce04a963":"markdown","6811d852":"markdown","1e7fd9bf":"markdown","b5a0017d":"markdown","cf2a246e":"markdown","94b58f86":"markdown","bc70a1b1":"markdown"},"source":{"a852f92d":"print(\"HELLO my name is Eymen\")","a012493c":"2.1) Strings :","0bc95882":"a_message = \"hello world\"\n\nprint(\"Hi\")","c4020d4e":"print(a_message)","f8a4ab9e":"a_name = \"Eymen\"\na_surname = \"Ya\u015fao\u011flu\"\n\na_fullname = a_name + a_surname\nprint(a_fullname)aa1so","84c1eb7b":"a_fullname = a_name + \" \" + a_surname\n\nprint(a_fullname)","a7c95401":"a_fullname = a_name + \" \" + a_surname\n\nprint(a_fullname)","0b35b810":"a_num1 = \"100\"\na_num2 = \"200\"\na_numSum1 = a_num1 + a_num2\nprint(a_numSum1)\n","027e5c5e":"a_num1 = 100\na_num2 = 200\na_numSum1 = a_num1 + a_num2\nprint(a_numSum1)","48376608":"#length\na_lenFull = len(a_fullname)\nprint(\"a_fullname : \" ,a_fullname, \" and lenght is : \" ,a_lenFull)","d83c995f":"a_titleF = a_fullname.title()\nprint(\"a_fullname :\", a_fullname ,  \" and title is : \" , a_titleF)","16857385":"#upper :\na_upperF = a_fullname.upper()\n\n#lower\na_lowerF = a_fullname.lower()\nprint(\"a_fullname : \" , a_fullname , \" Upper : \" , a_upperF , \" Lower : \" , a_lowerF)\"%l\"","065cc0ee":"a_2ch = a_fullname[4]\nprint(a_2ch)","205a548b":"a_num1 = 100\na_num2 = 200\na_sum1 = a_num1 + a_num2\n\nprint(a_sum1 , \" and  type : \" , type(a_sum1))","cc3767c3":"#it will get error\n#a_sum2 = a_num1 + a_name\n#print(a_sum2)","dcb39b5d":"a_num1 = a_num1 + 50\na_num2 = a_num2 - 25.5\na_sum1 = a_num1 + a_num2\n\nprint(a_num1)","c1afb8c1":"print(\"a_sum1 : \",a_sum1 , \" type : \" , type(a_sum1))","2ef8963a":"a_fl1 = 25.5\na_fl2 = 15.5\na_s3 = a_fl1 + a_fl2\n\nprint(a_s3 , type(a_s3))","59719e46":"def f_SayHello():\n    print(\"hi. I am comming from f_SayHello\")\n    \ndef f_SayHello2():\n    print(\"hi. I am coming from f_SayHello2\")\nprint(\"good\")\n\nf_SayHello()","a77260b9":"f_SayHello2()","17c571d9":"def f_sayMessage(a_Message1):\n    print(a_Message1 , \" came from 'f_sayMessge '\")\n    \ndef f_getFullName(a_FirstName , a_surname , a_Age):\n    print(\"welcome\" , a_FirstName, \" \", a_Surname , \"your age : \",age)","33115d73":"f_sayMessage(\"how are you?\")","88a284bc":"f_getFullName\n(\"eymen\" , \"yasaroglu\",14)","5af003a5":"def f_Calc1(f_Num1 , f_Num2 , f_Num3):\n    a_Sonuc = f_Num1 + f_Num2 + f_Num3\n    print(\"Sonu\u00e7 =\", a_Sonuc)","25cc2805":"f_Calc1(100 , 250 , 50)","15327d9d":"# return function\ndef f_Calc2(a_Num1 , a_Num2 , a_Num3):\n    a_Out = a_Num1+a_Num2+a_Num3*2\n    print(\"Hi from f_Calc2\")\n    return a_Out","146af3f0":"# Default Functions :\ndef f_getSchoolInfo(a_Name,a_StudentCount,a_City = \"ISTANBUL\"):\n    print(\"Name : \" , a_Name , \" St Count : \" , a_StudentCount \n          , \" City : \" , a_City)","9e72acfc":"f_getSchoolInfo(\"Ayaza\u011fa A\u0130HL\" , 269)\nf_getSchoolInfo(\"Ankara A\u0130HL\" , 432 , \"ANKARA\")\n","4048ea8e":"# Flexible Functions :\n\ndef f_Flex1(a_Name , *a_messages):\n    \n    print ( \"Hi\" , a_Name , \" your first message is :\" , a_messages[1] )","7d41ee41":"f_Flex1(\"eymen\" , \"hi\" , \"Hello\" , \"How are you ?\")","65ce4410":"# Lambda Function :\n\na_result1 = lambda x : x*3\nprint(\"Result is : \" , a_result1(3))","b5912a14":"def f_alan(kenar1,kenar2):\n    print(kenar1*kenar2)","83317f38":"f_alan(7,12)","66f8e0db":"l_list1 = [1,2,3,7,6,9]\nprint(l_list1)\nprint(\"type of 'l_list1 'is:\", type (l_list1))","62cea49b":"l_list2=['monday', 'tuesday',\n'wednesday', 'Thursday', \n'friday','saturday','sunday']\nprint(l_list2)\nprint(\"type of ' l_list2'is:\"\n,type(l_list2))\n","c6cfe6d1":"r_list2_4= l_list2[2]\nprint(r_list2_4)\nprint(\"type of 'r_list2_4'is:\",  \n      type(r_list2_4))","8a25f88a":"r_list2_x3 = l_list2[-4]\nprint(r_list2_x3)","c91f296f":"l_list2_2=l_list2[0:3]\nprint(l_list2_2)","4a959de6":"#len\n\n\nr_len_l_list2_2=len(l_list2_2)\nprint(\"Size of 'l_list2_2'is:\",r_len_l_list2_2)\nprint(l_list2_2)","c0a97674":"e_dict = {\"di\u015f f\u0131r\u00e7as\u0131\" : \"Zahnb\u00fcrste\" ,\n\"asker \": \"Soldat\" , \"kitap\": \"Buch\",\"\u00f6\u011frenci\":\"Sch\u00fcler\"} ","c51b632a":"print(e_dict)\nprint(type(e_dict))","b417a759":"e_deutsch=e_dict[\"di\u015f f\u0131r\u00e7as\u0131\"]\nprint(e_deutsch)\nprint(type(e_deutsch))","2c44649e":"#keys & values \n\ne_key=e_dict.keys()\n\nprint(e_key)\nprint(type(e_key))","7608de2b":"e_values=e_dict.values()\n\nprint(e_values)\nprint(type(e_values))","3eefa12a":"e_factor1=69\ne_factor2=55\n\nif e_factor1>e_factor2:\n    print(e_factor1,\"greather than\" , e_factor2)\n    \nelif e_factor1<e_factor2:\n    print(e_factor1,\"samller than\" , e_factor2)\n    \nelse:\n    print(\"This 2 variables are equal\")","a01529f3":"e_factor1=17\ne_factor2=25\n\nif e_factor1>e_factor2:\n    print(e_factor1,\"greather than\", e_factor2)\n    \nelif e_factor1<e_factor2:\n    print(e_factor1,\"smaller than \", e_factor2)","c0d4473d":"# < , <= , > , >= , == , <>\n\ndef e_factor(e_\u00f6ge1 , e_\u00f6ge2):\n    if e_\u00f6ge1 > e_\u00f6ge2:\n        print(e_\u00f6ge1 , \" is greater then \" , e_\u00f6ge2)\n    elif e_\u00f6ge1 < e_\u00f6ge2:\n        print(e_\u00f6ge1 , \" is smaller then \" , e_\u00f6ge2)\n    else :\n        print(\"These \" , e_\u00f6ge1 , \" variables are equal\")\n        \ne_factor(56,84)\ne_factor(54,32)\ne_factor(99,99)","f0547818":"for a in range(0,30):\n    print(\"Bug\u00fcn \", a , \"dk kitap okudunuz \")","7f5b975f":"v_tebrikmessage=\"TEBR\u0130KLER bug\u00fcn otuz dakika kitap okudunuz .\"\nprint(v_tebrikmessage)","8fdf9bc6":"for v_chrs in v_tebrikmessage:\n    print(v_chrs)\n    print(\"______\")","d61dd5b7":"for v_chrs in v_tebrikmessage.split():\n    print(v_chrs)","77928cb7":"l_list1 = [20,10,15,23] \nprint(l_list1) \nv_sum_list1 = sum(l_list1) \nprint(\"Sum of l_list1 is : \" , v_sum_lis\nt1)\n\n\nprint()\nv_cum_list1 = 0\nv_loopindex = 0\nfor v_current in l_list1:\n    v_cum_list1 = v_cum_list1 + v_curren\nt\n    print(v_loopindex , \" nd value is :\n\" , v_current)\n   print(\"Cumulative is : \" , v_cum_lis\nt1)\n   v_loopindex = v_loopindex + 1\n   print(\"------\")\n\n          ","96563992":"i=0\nwhile(i<7):\n    print(\"km say\u0131n\u0131z\" , i )\n    i=i+1","897ec02d":"print(l_list1)\nprint() \n\n\ni = 0\nk = len(l_list1)\n\n\nwhile(i<k):\n    print(l_list1[i])\n    i=i+1\n","6a534cd8":"#Let's find minimum and maximum number in list\n\n\nl_list2 = [20,6,16,7,-6,-571,182,71,34,-85,1453]\n\n\nv_min = 0\nv_max = 0\n\n\nv_index = 0\nv_len = len(l_list2) \n\n\nwhile (v_index < v_len):\n    v_current = l_list2[v_index] \n    \n    \n    if v_current > v_max:\n        v_max = v_current\n        \n        \n    if v_current < v_min:\n        v_min = v_current\n        \n        \n    v_index = v_index+1\n    \n    \nprint (\"Maximum number is : \" , v_max)\nprint (\"Minimum number is : \" , v_min)","53e28717":"l_list2.sort()\nprint(l_list2)\nv_len_l_list2 = len(l_list2) \n\n\n\nprint (\"Size of l_list2_ is : \" , v_len_l_list2)\n\n\nprint(\"Minimum number is : \" , l_list2[0])\n\nprint (\"Maximum number is : \" , l_list2[10])\n","106ec86b":"# Import library to use \nimport numpy as np","70e9a5f9":"v_array1 =(['M134.','g-3','HK-33','AK-47','M4','M16','MG-3','PKM','BORA12'\n         'MPT76','BARRETT M822A1','RPG-7','T-129','HK-416','GLOCK'])\nv_array2_np = np.array(['M134.','g-3','HK-33','AK-47','M4','M16','MG-3','PKM','BORA12'\n         'MPT76','BARRETT M822A1','RPG-7','T-129','HK-416','GLOCK'])","d66d615b":"print(\"v_array1 : \", v_array1)\nprint(\"Type of v_array1 : \", type(v_array1))","92e99d72":"print(\"v_array2_np : \" , v_array2_np)\nprint(\"Type of v_array2_np : \" , type(v_array2_np))","81a3b02a":"# shape\nv_shape1= v_array2_np.shape\nprint(\"v_shape1 : \" , v_shape1 ,\"and type is: \", type(v_shape1))","1090e77d":"#Reshape\nv_array3_np = v_array2_np.reshape(2,7)\nprint(\"T\u00dcRK S\u0130LAHLI KUVVETLER\u0130N ENVANTER\u0130:\")\nprint(v_array3_np)","4e5d5970":"v_shape2= v_array3_np.shape\nprint(\"v_shape: \",v_shape2,\"and type is : \", type(v_shape2))","4592827c":"#dimension\nv_dimen1 = v_array3_np.ndim\nprint(\"v_dimen: \", v_dimen1,\"type is :\" , type(v_dimen1))","9ccaa133":"#Dtype.name\nv_dtype1= v_array3_np.dtype.name \nprint(\"v_dtype1: \", v_dtype1, \"and type is : \",type(v_dtype1))","cb23b657":"#size \nv_size1 = v_array3_np.size \nprint(\"v_size1 : \",v_size1 , \"and type : \", type(v_size1))","993a49b8":"#zeros \nv_array5_np = np.zeros((5,6))\nprint(v_array5_np)\n","c8797e40":"# Update an item on this array \nv_array5_np[3,4] =69\nprint(v_array5_np)","f529e085":"# Ones\nv_array6_np = np.ones((4,5))\nprint(v_array6_np)","48ff393b":"# Empty\nempty = np.empty((2,5))\nprint(empty)","95c8997c":"# Arrange\nv_array8_np = np.arange(25,256,3)\nprint(v_array8_np)\nprint(v_array8_np.shape)\n","95d685df":"# Linspace\nv_array9_np = np.linspace(10,60,5)\nv_array10_np = np.linspace(0,151,16)\n\nprint(v_array9_np)\nprint(v_array9_np.shape)\nprint(\"-----------------------\")\nprint(v_array10_np)\nprint(v_array10_np.shape)","10e73a66":"# Sum , Subtract , Square\nv_np1 = np.array([20,15,10])\nv_np2 = np.array([6,22,9])\n\nprint(v_np1 + v_np2)\nprint(v_np1 - v_np2)\nprint(v_np2 - v_np1)\nprint(v_np1 ** 2)","dd76dcea":"# Sinus\nprint(np.sin(v_np2))","400c760b":"# True \/ False\nv_np2_TF = v_np2 < 20\nprint(v_np2_TF)\nprint(v_np2_TF.dtype.name)\n","841e9548":"# Element wise Prodcut\nprint(v_np1 * v_np2)","59a0bcb9":"# Transpose\nv_np5 = np.array([[1,2,5],[9,5,3]])\nv_np5Transpose = v_np5.T\nprint(v_np5)\nprint(v_np5.shape)\nprint()\nprint(v_np5Transpose)\nprint(v_np5Transpose.shape)","d3eeec48":"# Matrix Multiplication\nv_np6 = v_np5.dot(v_np5Transpose)\nprint(v_np6)\n","f868b13f":"# Exponential --> We will use on Statistics Lesson\nv_np5Exp = np.exp(v_np5)\n\nprint(v_np5)\nprint(v_np5Exp)","4df1c418":"# Random \nv_np8 = np.random.random((6,6)) # --> It will get between 0 and 1 random numbers\nprint(v_np8)\n","29c270a0":"#Sum , Max ,Min\nv_np8Sum = v_np8.sum()\nprint(\"Sum of array : \", v_np8Sum)  #--> Remember ! If you get sum of array we can use that :  sum(array1)\nprint(\"Max of array : \", v_np8.max()) #--> Remember ! If you get max of array we can use that :  max(array1)\nprint(\"Min of array : \", v_np8.min()) #--> Remember ! If you get min of array we can use that :  min(array1)","723bbd68":"# Sum with Column or Row\nprint(\"Sum of Columns :\")\nprint(v_np8.sum(axis=0)) # --> Sum of Columns\nprint()\nprint(\"Sum of Rows :\")\nprint(v_np8.sum(axis=1)) #Sum of Rows","287f0ac9":"# Square , Sqrt\nprint(np.sqrt(v_np8))\nprint()\nprint(np.square(v_np8))","4c4a322e":"# Add\nv_np10 = np.array([1,2,3,4,5])\nv_np11 = np.array([52,51,50,49,48])\n\nprint(np.add(v_np10,v_np11))\n","c5e7e504":"v_np12 = np.array([4,3,5,8,5,6,7,8,8])\n\nprint(\"First item is : \" , v_np12[8])\nprint(\"Third item is : \" , v_np12[1])\n","d74f4033":"# Get top 4 rows :\nprint(v_np12[0:4])","674361d2":"# Reverse\nv_np12_Rev = v_np12[::-1]\nprint(v_np12_Rev)","92098a3f":"v_np13 = np.array([[5,4,3,2,1],[15,14,153,16,15]])\nprint(v_np13)\nprint()\nprint(v_np13[1,3]) #--> Get a row\n\nprint()\nv_np13[1,3] = 314 #--> Update a row\nprint(v_np13)","59a7f7dd":"# Get all rows but 3rd columns :\nprint(v_np13[:,2])","99ce4375":"#Get 2nd row but 2,3,4th columns\nprint(v_np13[1,1:4])","76f05c4c":"# Get last row all columns\nprint(v_np13[-1,:])\n","4697b8e6":"# Get last columns but all rows\nprint(v_np13[:,-1])","c1033c15":"#Flatten\nv_np14 = np.array([[53,34,61],[1,6,45],[14,51,32],[33,19,13]])\nv_np15 = v_np14.ravel()\n\nprint(v_np14)\nprint(\"Shape of v_np14 is : \" ,v_np14.shape)\nprint()\nprint(v_np15)\nprint(\"Shape of v_np15 is : \" ,v_np15.shape)\nprint()","940e011a":"# Reshape\nv_np16 = v_np15.reshape(3,4)\nprint(v_np16)\nprint(\"Shape of v_np16 is : \" ,v_np16.shape)","77417d5b":"v_np17 = v_np16.T\nprint(v_np17)\nprint(\"Shape of v_np17 is : \" ,v_np17.shape)","f0f78bf1":"v_np20 = np.array([[9,8],[7,6],[5,4]])\n\nprint(v_np20)\nprint()\nprint(v_np20.reshape(2,3))\n\nprint()\nprint(v_np20) #--> It has not changed !!","753fc48d":"# Resize\nv_np20.resize((2,3))\nprint(v_np20) # --> Now it changed !  Resize can change its shape\n","0c756bd2":"v_np21 = np.array([[33,71],[37,43]])\nv_np22 = np.array([[13,64],[71,83]])\n\nprint(v_np21)\nprint()\nprint(v_np22)","5daa3a7f":"# Vertical Stack\nv_np23 = np.vstack((v_np21,v_np22))\nv_np24 = np.vstack((v_np22,v_np21))\n\nprint(v_np23)\nprint()\nprint(v_np24)","860f3c03":"# Horizontal Stack\nv_np25 = np.hstack((v_np21,v_np22))\nv_np26 = np.hstack((v_np22,v_np21))\n\nprint(v_np25)\nprint()\nprint(v_np26)","f891d2ab":"v_list1 = [3,4,9,8]\nv_np30 = np.array(v_list1)\n\nprint(v_list1)\nprint(\"Type of list : \" , type(v_list1))\nprint()\nprint(v_np30)\nprint(\"Type of v_np30 : \" , type(v_np30))","d50c9f7a":"v_list2 = list(v_np30)\nprint(v_list2)\nprint(\"Type of list2 : \" , type(v_list2))","0788f226":"v_list3 = v_list2\nv_list4 = v_list2\n\nprint(v_list2)\nprint()\nprint(v_list3)\nprint()\nprint(v_list4)","ee0f6faa":"v_list2[0] = 55\n\nprint(v_list2)\nprint()\nprint(v_list3) # --> Same address with list2\nprint()\nprint(v_list4) # --> Same address with list2","787995db":"v_list5 = v_list2.copy()\nv_list6 = v_list2.copy()\n\nprint(v_list5)\nprint()\nprint(v_list6)","fbce954d":"v_list2[0] = 71\n\nprint(v_list2)\nprint()\nprint(v_list5) # --> Not same address with list2\nprint()\nprint(v_list6) # --> Not same address with list2","19080e59":"# Import Library\nimport pandas as pd","307c2e7b":"# Let's create Data Frame from Dictionary\nv_dict1 = { \"COUNTRY\" : [\"TURKEY\",\"U.K.\",\"GERMANY\",\"FRANCE\",\"U.S.A\",\"AZERBAIJAN\",\"IRAN\"],\n            \"CAPITAL\":[\"ISTANBUL\",\"LONDON\",\"BERLIN\",\"PARIS\",\"NEW YORK\",\"BAKU\",\"TAHRAN\"],\n            \"POPULATION\":[15.07,8.13,3.57,2.12,8.62,4.3,8.69]}\n\nv_dataFrame1 = pd.DataFrame(v_dict1)\n\nprint(v_dataFrame1)\nprint()\nprint(\"Type of v_dataFrame1 is : \" , type(v_dataFrame1))","6ccf84ec":"# get top 5 rows\nv_head1 = v_dataFrame1.head()\nprint(v_head1)\nprint()\nprint(\"Type of v_head1 is :\" ,type(v_head1))","8b48bc13":"# get top 100 rows\nprint(v_dataFrame1.head(100))","224394ef":"# get last 5 rows\nv_tail1 = v_dataFrame1.tail()\nprint(v_tail1)\nprint()\nprint(\"Type of v_tail1 is :\" ,type(v_tail1))","656e21db":"# Columns\nv_columns1 = v_dataFrame1.columns\nprint(v_columns1)\nprint()\nprint(\"Type of v_columns is : \" , type(v_columns1))","3d0c244b":"v_info1 = v_dataFrame1.info()\nprint(v_info1)\nprint()\nprint(\"Type of v_info1 is : \" , type(v_info1))","9f825b8a":"v_dtypes1 = v_dataFrame1.dtypes\nprint(v_dtypes1)\nprint()\nprint(\"Type of v_dtypes1 is : \" , type(v_dtypes1))","9b4b8522":"v_descr1 = v_dataFrame1.describe()\nprint(v_descr1)\nprint()\nprint(\"Type of v_descr1 is : \" , type(v_descr1))","0b1f341b":"v_country1 = v_dataFrame1[\"COUNTRY\"]\nprint(v_country1)\nprint()\nprint(\"Type of v_country1 is : \" , type(v_country1))","67b16314":"# Add new column\nv_currenyList1 = [\"TRY\",\"GBP\",\"EUR\",\"EUR\",\"USD\",\"AZN\",\"IRR\"]\nv_dataFrame1[\"CURRENCY\"] = v_currenyList1\n\nprint(v_dataFrame1.head())\n","be84c3e4":"# Get all rows ,  1 column\nv_AllCapital = v_dataFrame1.loc[:,\"CAPITAL\"]\nprint(v_AllCapital)\nprint()\nprint(\"Type of v_AllCapital is : \" , type(v_AllCapital))","b22a3a60":"# Get top 3 rows of Currency\nv_top3Currency = v_dataFrame1.loc[0:3,\"CURRENCY\"]\nprint(v_top3Currency)","8dcab419":"v_CityCountry = v_dataFrame1.loc[:,[\"CAPITAL\",\"COUNTRY\",\"BLABLA\"]] #--> BLABLA not defined !!!\nprint(v_CityCountry)","7ddddafa":"v_Reverse1 = v_dataFrame1.loc[::-1,:]\nprint(v_Reverse1)","832994f2":"print(v_dataFrame1.loc[:,:\"POPULATION\"])\nprint()\nprint(v_dataFrame1.loc[:,\"POPULATION\":])","9ee2976f":"#Get data with column index (not column name)\nprint(v_dataFrame1.iloc[:,2])","b5331392":"v_filter1 = v_dataFrame1.POPULATION > 4\nprint(v_filter1)","6baa5f41":"v_filter2 = v_dataFrame1[\"POPULATION\"] < 9\nprint(v_filter2)","5b92c5f5":"print(v_dataFrame1[v_filter1 & v_filter2])","6a483b76":"print(v_dataFrame1[v_dataFrame1[\"CURRENCY\"] == \"EUR\"])","e34f82f0":"v_meanPop =v_dataFrame1[\"POPULATION\"].mean()\nprint(v_meanPop)\n\nv_meanPopNP = np.mean(v_dataFrame1[\"POPULATION\"])\nprint(v_meanPopNP)\n","a57a0eda":"for a in v_dataFrame1[\"POPULATION\"]:\n    print(a)\n","97dae650":"v_dataFrame1[\"POP LEVEL\"] = [\"Low\" if v_meanPop > a else \"HIGH\" for a in v_dataFrame1[\"POPULATION\"]]\nprint(v_dataFrame1)","582f8ed3":"print(v_dataFrame1.columns)\n\nv_dataFrame1.columns = [a.lower() for a in v_dataFrame1.columns]\n\nprint(v_dataFrame1.columns)\n","786e01b7":"v_dataFrame1.columns = [a.split()[0]+\"_\"+a.split()[1] if (len(a.split())>1) else a for a in v_dataFrame1.columns]\nprint(v_dataFrame1.columns)","51ac77df":"v_dataFrame1[\"test1\"] = [-1,-2,-3,-4,-5,-6,-7]\nprint(v_dataFrame1)","052a03d5":"v_dataFrame1.drop([\"test1\"],axis=1,inplace = True) #--> inplace = True must be written\nprint(v_dataFrame1)","337bb11c":"v_data1 = v_dataFrame1.head()\nv_data2 = v_dataFrame1.tail()\n\nprint(v_data1)\nprint()\nprint(v_data2)","afe76270":"v_dataConcat1 = pd.concat([v_data1,v_data2],axis=0) # axis = 0 --> VERTICAL CONCAT\nv_dataConcat2 = pd.concat([v_data2,v_data1],axis=0) # axis = 0 --> VERTICAL CONCAT\n\nprint(v_dataConcat1)\nprint()\nprint(v_dataConcat2)","cb17123f":"v_CAPITAL = v_dataFrame1[\"capital\"]\nv_POPULATION = v_dataFrame1[\"population\"]\n\nv_dataConcat3 = pd.concat([v_CAPITAL,v_POPULATION],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nv_dataConcat4 = pd.concat([v_POPULATION,v_CAPITAL],axis=1) #axis = 1 --> HORIZONTAL CONCAT\nprint(v_dataConcat3)\nprint()\nprint(v_dataConcat4)","532f907b":"v_dataFrame1[\"test1\"] = [a*2 for a in v_dataFrame1[\"population\"]]\nprint(v_dataFrame1)","66aaf911":"def f_multiply(v_population):\n    return v_population*3\n\nv_dataFrame1[\"test2\"] = v_dataFrame1[\"population\"].apply(f_multiply)\nprint(v_dataFrame1)","05f9b62d":"9.5.List Comprehension","2b132c77":"****While Loop**** ","6bc7b8eb":"****8)Numpy****","5e9926b3":"\n****8.2. Basic Operations****","0d86089b":"****Dictionary****","08233025":"\n9.4.Filtering","f0f2f249":"**9)pandas**","dfb8919d":"8.4.Shape Manipulation","e1c24aa8":"9.6.Drop and Concatenating Data","744d06c8":"2) VARIABLES","e3981602":"8.6.Convert and Copy Array","346302c0":"****if Else****","827ad3d1":"\n9.1.Introduction","e3f95bd6":"\n9.3.Indexing and Slicing","1876ac4a":"**8.1)Basic**","5467f67a":"**2)FUNCTIONS**","ce04a963":"9.2.Basic Methods","6811d852":"8.3. Indexing and Slicing","1e7fd9bf":"8.5.Stacking Arrays","b5a0017d":"****3)LIST****","cf2a246e":"2.2) NUMBERS :","94b58f86":"****Foor Loop****","bc70a1b1":"\n9.7.Transforming Data"}}