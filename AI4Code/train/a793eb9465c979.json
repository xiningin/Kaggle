{"cell_type":{"b208b3f8":"code","63bbc7a8":"code","ceb1926f":"code","737ecd10":"code","8df5eae6":"code","7c9f5572":"code","8dfb92af":"code","0c8bd959":"code","c83948e5":"code","14d7cdb9":"code","14bab31e":"code","13cc7323":"code","d7b5c8ff":"code","0da95ee3":"code","0dd8c9ca":"code","9ee2b9f3":"code","75d9fe13":"code","8417c563":"code","3dbc48ff":"code","a416825d":"code","23537682":"code","1a4a9319":"code","5ba0927a":"code","47d3b23c":"code","17ff3e47":"code","4e0176ed":"code","a390b452":"code","7553d3eb":"code","5f421cd2":"code","83f11bb8":"code","d24ebf29":"code","49f26bf7":"code","a3e4b02a":"code","a70e921c":"code","20168d66":"code","37b85dfe":"code","9c1cd6c5":"code","f9dee5a7":"code","4717a3d0":"code","648b79fe":"code","fd7f312e":"code","89dc8d2d":"code","7e5efba9":"code","214e750e":"code","8280e2bd":"code","1cde3287":"code","69c47f84":"code","38230380":"code","271fa502":"code","28d18b64":"code","cb441142":"code","2d1013e1":"code","62beec60":"code","ebe76135":"code","a43dbd3a":"code","6aec115f":"code","82707511":"code","8ed5b568":"code","7168a78f":"code","c7e5de6d":"code","46464e62":"code","5f71eca6":"code","17aa56b5":"code","ee0fd565":"code","32e4f9cd":"code","7ea7c83d":"code","e6c2df0a":"code","8ad111da":"code","f3e3a096":"code","ffea7a31":"code","e1ae1759":"code","2b1cc7f2":"code","93446658":"code","828c4ce2":"code","d1c7d0a9":"code","1d04e03d":"code","50b8a0ad":"code","ffa73082":"code","f043bf6b":"code","d7b10b2e":"code","93d7d2cd":"code","c83c0ced":"code","217bde29":"code","75a91d09":"code","c09795d1":"code","c5b94ede":"code","b34af8b6":"markdown","ddcb2908":"markdown","ad5d5e82":"markdown","4a0864ab":"markdown","9541c5a4":"markdown","2b81cebc":"markdown","3fd46011":"markdown","06026cd1":"markdown","62707695":"markdown","48b80dd5":"markdown","a9ddec34":"markdown","e9585629":"markdown","08ce80b7":"markdown","0fc26a71":"markdown","f30317d1":"markdown","acf6660d":"markdown","9eb88598":"markdown","54b43ee3":"markdown","994e2461":"markdown","65a3130e":"markdown","d26c536d":"markdown","cf25f6d1":"markdown"},"source":{"b208b3f8":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nfrom collections import Counter","63bbc7a8":"df = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/AnnualTicketSales.csv')","ceb1926f":"df.drop('Unnamed: 5',axis = 1,inplace = True)","737ecd10":"df.head()","8df5eae6":"j = []\nfor i in df['TICKETS SOLD']:\n    j.append(i.replace(\",\",\"\"))\n    ","7c9f5572":"df['Tickets_sold'] = j","8dfb92af":"k = []\nfor i in df.columns:\n    if i not in ['YEAR','TICKETS SOLD','Tickets_sold']:\n        for j in df[i]:\n            k.append(j[1:].replace(',',''))\n        df[i] = k\n    k.clear()\n        ","0c8bd959":"df.drop('TICKETS SOLD',axis = 1,inplace = True)","c83948e5":"df = df.astype(float)","14d7cdb9":"topyears = df.nlargest(5,'Tickets_sold')[['YEAR','Tickets_sold']]","14bab31e":"fig = px.bar(x = [i for i in topyears.YEAR],y = [i for i in topyears['Tickets_sold']],color =[i for i in topyears['Tickets_sold']])\nfig.update_layout(xaxis_title = 'YEARS',yaxis_title = 'Tickets Sold',title = 'Distribution based Tickets Sold - YEARS')\nfig.show()\n","13cc7323":"leastyears = [str(i) for i in df.nsmallest(5,'Tickets_sold')['YEAR'].to_list()]","d7b5c8ff":"explode = (0.1, 0.1, 0.1, 0.1,0.1)  # only \"explode\" the 2nd slice (i.e. 'Hogs')\nfig1, ax1 = plt.subplots()\nax1.pie(leastyears,explode=explode, labels=[i for i in leastyears],shadow=True, startangle=90)\nax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nfig = plt.gcf()\nfig.set_size_inches(10,10)\nplt.title('Top 5 Years Least Tickets Sold')\nplt.figtext(0.12, 0.01, 'Conclusion', fontname = 'monospace', size = 15, color = '#dd4124')\nplt.figtext(0.11, -0.05,\"As we can observe because of the Pandemic, Year 2017, 2020, 2021 were most affected years for this Industry.\",fontname = 'monospace', size = 15, color = 'b')\nplt.show()\n","0da95ee3":"topboxoffice = df.nlargest(5,'TOTAL BOX OFFICE')[['YEAR','TOTAL BOX OFFICE']]","0dd8c9ca":"fig = px.bar(x = [i for i in topboxoffice.YEAR],y = [i for i in topboxoffice['TOTAL BOX OFFICE']],color =[i for i in topboxoffice['TOTAL BOX OFFICE']])\nfig.update_layout(xaxis_title = 'YEARS',yaxis_title = 'Total Box Office ($)',title = 'Distribution based on Top Box Office - Years')","9ee2b9f3":"worstboxoffice = df.nsmallest(20,'TOTAL BOX OFFICE')[['YEAR','TOTAL BOX OFFICE']]","75d9fe13":"fig = px.bar(x = [i for i in worstboxoffice.YEAR],y = [i for i in worstboxoffice['TOTAL BOX OFFICE']],color =[i for i in worstboxoffice['TOTAL BOX OFFICE']])\nfig.update_layout(xaxis_title = 'YEARS',yaxis_title = 'Total Box Office ($)',title = 'Distribution based on Worst Box Office - Years')\nfig.show()\n","8417c563":"ticketprices = df[['YEAR','AVERAGE TICKET PRICE']]","3dbc48ff":"fig = px.bar(x = [i for i in ticketprices.YEAR],y = [i for i in ticketprices['AVERAGE TICKET PRICE']],color =[i for i in ticketprices['AVERAGE TICKET PRICE']])\nfig.update_layout(xaxis_title = 'YEARS',yaxis_title = 'AVERAGE TICKET PRICE ($)',title = 'Distribution based AVERAGE TICKET PRICE - YEARS')\nfig.show()\n","a416825d":"df.head()","23537682":"df['InflatedBoxOffice'] = df['TOTAL INFLATION ADJUSTED BOX OFFICE']-df[\"TOTAL BOX OFFICE\"]","1a4a9319":"lastedlonger = df[['YEAR','InflatedBoxOffice']]","5ba0927a":"fig = px.bar(x = [i for i in lastedlonger.YEAR],y = [i for i in lastedlonger['InflatedBoxOffice']],color =[i for i in lastedlonger['InflatedBoxOffice']])\nfig.update_layout(xaxis_title = 'YEARS',yaxis_title = 'ADJUSTED BOX OFFICE ($)',title = 'Distribution based Adjusted Box Office - Years')\nfig.show()\n","47d3b23c":"df1 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/HighestGrossers.csv')","17ff3e47":"df1.head()","4e0176ed":"def clean(df,col):\n    k = []\n    for i in df[col]:\n            k.append(i.replace('$','').replace(',','').replace('%',''))\n    df[col] = k\n                \n","a390b452":"clean(df1,'TOTAL FOR YEAR')\nclean(df1,'TOTAL IN 2019 DOLLARS')\nclean(df1,'TICKETS SOLD')","7553d3eb":"df1.head()","5f421cd2":"df1 = df1.apply(pd.to_numeric, errors='ignore')\n","83f11bb8":"topmovies = df1.nlargest(10,'TICKETS SOLD')[['MOVIE','TICKETS SOLD']]\nfig = px.bar(x = [i for i in topmovies.MOVIE],y = [i for i in topmovies['TICKETS SOLD']],color =[i for i in topmovies['TICKETS SOLD']])\nfig.update_layout(xaxis_title = 'BEST MOVIES',yaxis_title = 'TICKETS SOLD',title = 'Distribution based On Most Tickets Sold')\nfig.show()\n","d24ebf29":"worstmovies = df1.nsmallest(5,'TICKETS SOLD')[['MOVIE','TICKETS SOLD']]\nfig = px.bar(x = [i for i in worstmovies.MOVIE],y = [i for i in worstmovies['TICKETS SOLD']],color =[i for i in worstmovies['TICKETS SOLD']])\nfig.update_layout(xaxis_title = 'MOVIES',yaxis_title = 'TICKETS SOLD',title = 'Distribution based on Least Tickets Sold')\nfig.show()\n","49f26bf7":"df1.head()","a3e4b02a":"df1.dropna(inplace=True)","a70e921c":"bstmovies =  df1.nlargest(10,'TOTAL FOR YEAR')[['MOVIE','TOTAL FOR YEAR']]\nfig = px.bar(x = [i for i in bstmovies.MOVIE],y = [i for i in bstmovies['TOTAL FOR YEAR']],color =[i for i in bstmovies['TOTAL FOR YEAR']])\nfig.update_layout(xaxis_title = 'MOVIES',yaxis_title = 'TOTAL FOR YEAR',title = 'Distribution based on Top Revenue Returning Movies')\nfig.show()\n","20168d66":"wrstmovies =  df1.nsmallest(5,'TOTAL FOR YEAR')[['MOVIE','TOTAL FOR YEAR']]\nfig = px.bar(x = [i for i in wrstmovies.MOVIE],y = [i for i in wrstmovies['TOTAL FOR YEAR']],color =[i for i in wrstmovies['TOTAL FOR YEAR']])\nfig.update_layout(xaxis_title = 'MOVIES',yaxis_title = 'TOTAL FOR YEAR',title = 'Distribution based on Least Revenue Returning Movies')\nfig.show()\n","37b85dfe":"bstmoviess =  df1.nlargest(10,'TOTAL IN 2019 DOLLARS')[['MOVIE','TOTAL IN 2019 DOLLARS']]\nfig = px.bar(x = [i for i in bstmoviess.MOVIE],y = [i for i in bstmoviess['TOTAL IN 2019 DOLLARS']],color =[i for i in bstmoviess['TOTAL IN 2019 DOLLARS']])\nfig.update_layout(xaxis_title = 'MOVIES',yaxis_title = 'TOTAL IN 2019 DOLLARS',title = 'Distribution based on Top Movies Returned Revenue till 2019')\nfig.show()\n","9c1cd6c5":"wrstmoviess =  df1.nsmallest(5,'TOTAL IN 2019 DOLLARS')[['MOVIE','TOTAL IN 2019 DOLLARS']]\nfig = px.bar(x = [i for i in wrstmoviess.MOVIE],y = [i for i in wrstmoviess['TOTAL IN 2019 DOLLARS']],color =[i for i in wrstmoviess['TOTAL IN 2019 DOLLARS']])\nfig.update_layout(xaxis_title = 'MOVIES',yaxis_title = 'TOTAL IN 2019 DOLLARS',title = 'Distribution based on Movies Returned Least Revenue till 2019')\nfig.show()\n","f9dee5a7":"c = Counter(df1['DISTRIBUTOR'])\nfig = px.bar(x = [i[0] for i in c.items()],y = [i[1] for i in c.items()],color =[i for i in (c)])\nfig.update_layout(xaxis_title = 'Distributor',yaxis_title = 'No. Of Years',title = 'Distribution based on Distributors')\nfig.show()","4717a3d0":"dist =  df1.nlargest(10,'TICKETS SOLD')[['DISTRIBUTOR','TICKETS SOLD']]\nfig = px.bar(x = [i for i in dist['DISTRIBUTOR']],y = [i for i in dist['TICKETS SOLD']],color=[i for i in dist['DISTRIBUTOR']])\nfig.update_layout(xaxis_title = 'DISTRIBUTOR',yaxis_title = 'TOTAL TICKETS SOLD',title = 'Distribution based on Most Choosen Distributor')\nfig.show()\n","648b79fe":"c1 = Counter(df1['GENRE'])\nfig = px.bar(x = [i[0] for i in c1.items()],y = [i[1] for i in c1.items()],color =[i for i in (c1)])\nfig.update_layout(xaxis_title = 'Genres',yaxis_title = 'No. Of Years',title = 'Distribution based on Genre')\nfig.show()","fd7f312e":"mpaa =  df1[['MPAA RATING','TICKETS SOLD']]\nfig = px.bar(x = [i for i in mpaa['MPAA RATING']],y = [i for i in mpaa['TICKETS SOLD']],color=[i for i in mpaa['MPAA RATING']])\nfig.update_layout(xaxis_title = 'MPAA RATING',yaxis_title = 'TOTAL TICKETS SOLD',title = 'Distribution based on Most Choosen MPAA Ratings')\nfig.show()\n","89dc8d2d":"df2 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/PopularCreativeTypes.csv')","7e5efba9":"df2.head()","214e750e":"df2.dropna(inplace=True)","8280e2bd":"df2 = df2.astype(str)","1cde3287":"clean(df2,'TOTAL GROSS')\nclean(df2,'AVERAGE GROSS')\nclean(df2,'MOVIES')\nclean(df2,'MARKET SHARE')","69c47f84":"df2 = df2.apply(pd.to_numeric,errors = 'ignore')","38230380":"df2.head() #Cleaned DataFrame","271fa502":"y = 'TOTAL GROSS'\nx = 'CREATIVE TYPES'\ndframe = df2\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","28d18b64":"y = 'MOVIES'\nx = 'CREATIVE TYPES'\ndframe = df2\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","cb441142":"y = 'MARKET SHARE'\nx = 'CREATIVE TYPES'\ndframe = df2\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","2d1013e1":"y = 'AVERAGE GROSS'\nx = 'CREATIVE TYPES'\ndframe = df2\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","62beec60":"df3 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopDistributors.csv')","ebe76135":"df3.head()","a43dbd3a":"df3.dropna(inplace=True)\ndf3 = df3.astype(str)\nclean(df3,'TOTAL GROSS')\nclean(df3,'AVERAGE GROSS')\nclean(df3,'MOVIES')\nclean(df3,'MARKET SHARE')\ndf3 = df3.apply(pd.to_numeric,errors = 'ignore')","6aec115f":"df3.head() #Cleaned DataFrame","82707511":"y = 'TOTAL GROSS'\nx = 'DISTRIBUTORS'\ndframe = df3\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","8ed5b568":"y = 'MARKET SHARE'\nx = 'DISTRIBUTORS'\ndframe = df3\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","7168a78f":"y = 'AVERAGE GROSS'\nx = 'DISTRIBUTORS'\ndframe = df3\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","c7e5de6d":"y = 'MOVIES'\nx = 'DISTRIBUTORS'\ndframe = df3\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","46464e62":"df4 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGenres.csv')","5f71eca6":"df4.head()","17aa56b5":"df4.dropna(inplace=True)\ndf4 = df4.astype(str)\nclean(df4,'TOTAL GROSS')\nclean(df4,'AVERAGE GROSS')\nclean(df4,'MOVIES')\nclean(df4,'MARKET SHARE')\ndf4 = df4.apply(pd.to_numeric,errors = 'ignore')","ee0fd565":"df4.head()","32e4f9cd":"y = 'MOVIES'\nx = 'GENRES'\ndframe = df4\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","7ea7c83d":"y = 'TOTAL GROSS'\nx = 'GENRES'\ndframe = df4\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","e6c2df0a":"y = 'AVERAGE GROSS'\nx = 'GENRES'\ndframe = df4\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","8ad111da":"y = 'MARKET SHARE'\nx = 'GENRES'\ndframe = df4\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","f3e3a096":"df5 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopGrossingRatings.csv')","ffea7a31":"df5.head()","e1ae1759":"df5.dropna(inplace=True)\ndf5 = df5.astype(str)\nclean(df5,'TOTAL GROSS')\nclean(df5,'AVERAGE GROSS')\nclean(df5,'MOVIES')\nclean(df5,'MARKET SHARE')\ndf5 = df5.apply(pd.to_numeric,errors = 'ignore')","2b1cc7f2":"y = 'MOVIES'\nx = 'MPAA RATINGS'\ndframe = df5\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","93446658":"y = 'TOTAL GROSS'\nx = 'MPAA RATINGS'\ndframe = df5\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","828c4ce2":"y = 'AVERAGE GROSS'\nx = 'MPAA RATINGS'\ndframe = df5\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","d1c7d0a9":"y = 'MARKET SHARE'\nx = 'MPAA RATINGS'\ndframe = df5\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","1d04e03d":"df6 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/TopProductionMethods.csv')","50b8a0ad":"df6.head()","ffa73082":"df6.dropna(inplace=True)\ndf6 = df6.astype(str)\nclean(df6,'TOTAL GROSS')\nclean(df6,'AVERAGE GROSS')\nclean(df6,'MOVIES')\nclean(df6,'MARKET SHARE')\ndf6 = df6.apply(pd.to_numeric,errors = 'ignore')","f043bf6b":"y = 'MOVIES'\nx = 'PRODUCTION METHODS'\ndframe = df6\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","d7b10b2e":"y = 'TOTAL GROSS'\nx = 'PRODUCTION METHODS'\ndframe = df6\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","93d7d2cd":"y = 'AVERAGE GROSS'\nx = 'PRODUCTION METHODS'\ndframe = df6\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","c83c0ced":"y = 'MARKET SHARE'\nx = 'PRODUCTION METHODS'\ndframe = df6\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","217bde29":"df7 = pd.read_csv('..\/input\/hollywood-theatrical-market-synopsis-1995-to-2021\/WideReleasesCount.csv')","75a91d09":"df7.head()","c09795d1":"df7.drop('Unnamed: 9',axis = 1,inplace=True)","c5b94ede":"y = 'TOTAL MAJOR 6'\nx = 'YEAR'\ndframe = df7\nfig = px.bar(x = [i for i in dframe[x]],y = [i for i in dframe[y]],color=[i for i in dframe[x]])\nfig.update_layout(xaxis_title = x,yaxis_title = y,title = f'Distribution based on {y} & {x}')\nfig.show()","b34af8b6":"***From the above graph we can say that MPAA Rating 'G' is the worst MPAA Rating a movie can get, Best is PG-13***","ddcb2908":"### Top Movies","ad5d5e82":"## Top Productions","4a0864ab":"### Relation b\/w  Average Ticket Price - Years","9541c5a4":"***Least Tickets Sold Years***","2b81cebc":"## Top Genres","3fd46011":"***From the above graph we can say that Except year 2014, Every other year between 2012 - 2019 were the most booming years for this Industry.***","06026cd1":"## Popular Creative Types","62707695":"## Top Distributors","48b80dd5":"## Top Distributors","a9ddec34":"## TOP MPAA CHOICE","e9585629":"**If this notebook helped you in anyway, Please Upvote**","08ce80b7":"## Wide Releases Count","0fc26a71":"## Top Genres","f30317d1":"***Total Box Office Top Years***","acf6660d":"## Annual Tickets Sales","9eb88598":"### Distribution Based On Adjusted Box Office & Year","54b43ee3":"***Total Box Office Worst Years***","994e2461":"## Top Grossing Ratings","65a3130e":"***Most Tickets Sold Years***","d26c536d":"***We can see a Decreasing Trend Overall***","cf25f6d1":"## Highest Grossers"}}