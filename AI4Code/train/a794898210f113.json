{"cell_type":{"3f30bfb8":"code","ba8dda75":"code","2d52feab":"code","e23c35df":"code","4309bd68":"code","b2c43a64":"code","ebf60a16":"code","394deffe":"markdown"},"source":{"3f30bfb8":"!ls ..\/input","ba8dda75":"!nvidia-smi","2d52feab":"!pip install https:\/\/github.com\/ceshine\/efficientdet-pytorch\/archive\/master.zip\n!pip install typer\n!pip install pytorch-lightning-spells","e23c35df":"!git clone https:\/\/github.com\/ceshine\/global-wheat-detection","4309bd68":"import sys\nsys.path.append(\"\/kaggle\/working\/global-wheat-detection\/\")","b2c43a64":"from omegaconf import OmegaConf, DictConfig\n\nfrom wheat.train import train\nfrom wheat.config import WheatConfig","ebf60a16":"config = WheatConfig(\n    base_dir=\"\/kaggle\/input\/global-wheat-detection-dataset-resized-to-768x768\/768\/\",\n    # base_dir=\"\/kaggle\/input\/wheat-dataset-resized-to-512x512\/512\/\",\n    epochs=16,\n    image_size=768,\n    arch=\"tf_efficientdet_d3\",\n    grad_accu=8,\n    batch_size=4,\n    precision=32,\n    base_lr=4e-4,\n    cutout=True,\n    mixup_alpha=8.,\n    seed=6321,\n    no_op_ratio=0.4,\n    no_op_warmup_steps=2000,\n    mosaic_p=0.8\n)\nomega_conf = OmegaConf.structured(config)\nwith open(\"train_config.yaml\", \"w\") as fout:\n    OmegaConf.save(config=omega_conf, f=fout)\ntrain(omega_conf, fold=0)","394deffe":"* [Augmentation Showcase](https:\/\/www.kaggle.com\/ceshine\/wheat-detection-augmentation-showcase)\n* [Inference Notebook](https:\/\/www.kaggle.com\/ceshine\/wheat-detection-training-efficientdet-public)"}}