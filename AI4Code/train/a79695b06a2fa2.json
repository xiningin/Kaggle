{"cell_type":{"d3e35983":"code","7290b291":"code","c2eda654":"code","e9097a49":"code","2111de9d":"code","b0b31128":"code","5225aae2":"code","6a9af8a5":"code","94192d83":"code","358017ac":"code","87a7da95":"code","8c6c7bca":"code","88e75220":"code","788f6498":"code","1808d172":"code","a186d4f4":"markdown"},"source":{"d3e35983":"import pandas as pd\nimport random as rnd","7290b291":"data = pd.read_csv('..\/input\/santa-workshop-tour-2019\/family_data.csv')","c2eda654":"data","e9097a49":"d = rnd.sample(range(0,5000),5000)\nday_dict = {}\nfam_dict = {}\ndf = data\nfor i in range(100,0,-1):\n    day_dict[i] = 0","2111de9d":"def get_choice_for_family(df, family_id, day_dict,fam_dict):\n    c=1\n    row = df[df['family_id'] == family_id]\n    while c < 11:\n        if day_dict[row.iloc[0,c]] >289:\n            c += 1\n        else:\n            day_dict[row.iloc[0,c]] += int(row.n_people)\n            break\n    fam_dict[family_id] = [row.iloc[0,c],c-1]\n    return day_dict, fam_dict","b0b31128":"for i in d:\n    x = get_choice_for_family(df, i, day_dict, fam_dict)\n    day_dict = x[0]\n    fam_dict = x[1]","5225aae2":"min(day_dict.values())","6a9af8a5":"len(fam_dict)","94192d83":"fam_id = list(fam_dict.keys())","358017ac":"assigned_day = list(fam_dict.values())","87a7da95":"assigned_days = [i[0] for i in assigned_day]","8c6c7bca":"final = {'family_id':fam_id,'assigned_day':assigned_days}","88e75220":"sub = pd.DataFrame.from_dict(final)","788f6498":"sub = sub.sort_values(by='family_id')","1808d172":"sub.to_csv('sub.csv', index=False)","a186d4f4":"## This is a shining moment for all aspiring data scientists (at least for me)\n\nI am not the best at this kaggle competition stuff, but I join and I try. After 4 solid days of thinking about how to assign a family a day without family_id being a factor (a.k.a shuffling the family_ids), I finally wrote a function that simply assigns a day to the family. Is it perfect? Not even close. is it functional? I mean it is a function and all so I guess so. I will eventually try to find a better output with testing the giving cost functions, but it is a great day. \n\nThank you to all that look at this!!"}}