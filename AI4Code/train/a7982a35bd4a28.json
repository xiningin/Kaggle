{"cell_type":{"62755c8d":"code","d5ded694":"code","a50030f7":"code","d2cca0bd":"code","f2c6caa0":"code","1fbcd185":"code","3e5e291e":"code","073ec534":"code","9161f415":"code","0a699ff7":"code","5137a5dd":"code","03cbf903":"code","31457106":"code","bcbf8b87":"code","230f4bce":"code","80786039":"code","778bbba4":"markdown","8871e023":"markdown","5f970caa":"markdown","fc8b25e8":"markdown","dd9fe0d1":"markdown","682586d4":"markdown","9d8c31bd":"markdown","1595c40c":"markdown","ca8a7eb7":"markdown"},"source":{"62755c8d":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt","d5ded694":"#input data\nbakery = pd.read_csv('..\/input\/BreadBasket_DMS.csv')","a50030f7":"#dataset info\nbakery.info()","d2cca0bd":"# missing value\nbakery.isnull().sum()","f2c6caa0":"# check none value\nprint(\"There are \" + str(sum(bakery['Date'] == 'NONE')) + (\" NONE value(s) on Date column\"))\nprint(\"There are \" + str(sum(bakery['Time'] == 'NONE')) + (\" NONE value(s) on Date column\"))\nprint(\"There are \" + str(sum(bakery['Item'] == 'NONE')) + (\" NONE value(s) on Date column\"))","1fbcd185":"#removing none value from dataset\nbakery_new = bakery[bakery['Item'] != 'NONE']","3e5e291e":"#make a new column for splitting date\nbakery_new['Day'] = bakery_new['Date'].apply(lambda x: x.split(\"-\")[2])\nbakery_new['Month'] = bakery_new['Date'].apply(lambda x: x.split(\"-\")[1])\nbakery_new['Year'] = bakery_new['Date'].apply(lambda x: x.split(\"-\")[0])\nbakery_new['Hour'] = bakery_new['Time'].apply(lambda x: x.split(\":\")[0])","073ec534":"bakery_new.head(20)","9161f415":"# number of transaction\nstartdate = bakery_new.iloc[0,0]\nenddate = bakery_new.iloc[-1,0]\nnumoftransaction = bakery_new['Transaction'].nunique()\n\nprint(\"From \" + str(startdate) + \" to \" + str(enddate) + \" there are \" + str(numoftransaction) + \" transactions at the bakery.\")","0a699ff7":"#grouping transaction by time\nmonthly = bakery_new.groupby('Month')['Transaction'].nunique()\ndaily = bakery_new.groupby('Day')['Transaction'].nunique()\nhourly = bakery_new.groupby('Hour')['Transaction'].nunique()\n\n#make it as dataframe\nmonthly_sales = pd.DataFrame({'Month':monthly.index, 'Transaction':monthly.values})\ndaily_sales = pd.DataFrame({'Day':daily.index, 'Transaction':daily.values})\nhourly_sales = pd.DataFrame({'Hour':hourly.index, 'Transaction':hourly.values})","5137a5dd":"#plot monthly transaction\nplt.figure(figsize=(20,8))\nplt.bar(monthly_sales['Month'], monthly_sales['Transaction'], color = 'green')\nplt.grid(True)\nplt.ylabel('Total\\n', size = 15)\nplt.xlabel('\\nMonth', size = 15)\nplt.xticks(monthly_sales['Month'],['January','February','March','April','October','November','December'])\nplt.title('Number of Transaction Per Month\\n', fontweight=\"bold\", fontsize = 21)\nplt.show()","03cbf903":"#plot daily transaction\nplt.figure(figsize=(20,8))\nplt.plot(daily_sales['Day'], daily_sales['Transaction'])\nplt.scatter(daily_sales['Day'], daily_sales['Transaction'], color = 'red')\nplt.grid(True)\nplt.ylabel('Total\\n', size = 15)\nplt.xlabel('\\nDay - n', size = 15)\nplt.xticks(rotation = 45)\nplt.title('Number of Transaction Per Day\\n', fontweight=\"bold\", fontsize = 21)\nplt.show()","31457106":"#plot hourly transaction\nplt.figure(figsize=(20,8))\nplt.plot(hourly_sales['Hour'], hourly_sales['Transaction'])\nplt.scatter(hourly_sales['Hour'], hourly_sales['Transaction'], color = 'red')\nplt.bar(hourly_sales['Hour'], hourly_sales['Transaction'], color = 'pink', alpha = 0.5)\nplt.grid(True)\nplt.ylabel('Total\\n', size = 15)\nplt.xlabel('\\nHour - n', size = 15)\nplt.xticks(rotation = 45)\nplt.title('Number of Transaction Per Hour\\n', fontweight=\"bold\", fontsize = 21)\nplt.show()","bcbf8b87":"#Items in bakery\nbakery_item = bakery_new['Item'].nunique()\n\nprint(\"There are \" + str(bakery_item) + \" items sold at the bakery.\")","230f4bce":"#best seller items at bakery\nitem = bakery_new['Item'].value_counts()\ntotal_item = pd.DataFrame({'Item':item.index, 'Total':item.values}).head(10)","80786039":"plt.figure(figsize=(20,8))\nplt.bar(total_item['Item'], total_item['Total'], color = 'red')\nplt.grid(True)\nplt.ylabel('Total\\n', size = 15)\nplt.xticks(rotation = 45)\nplt.title('Best Seller at Bakery\\n', fontweight=\"bold\", fontsize = 21)\nplt.show()","778bbba4":"This is the header of my new dataset.","8871e023":"This is the basic information of dataset's structure","5f970caa":"**1. Import Package**","fc8b25e8":"**2. Exploratory Data Analysis**","dd9fe0d1":"This is my first kernel using ***python***, I usually use ***R*** for doing EDA and machine learning. I am currently learning python, please give me a feedback :)","682586d4":"Checking the missing value on dataset.","9d8c31bd":"**2. Input Data**\n\nI input data from csv format by using pandas csv.","1595c40c":"After found the missing value, I decided to remove those data from my dataset.","ca8a7eb7":"I mutate the new columns splitted from Date and Time variables. This is for EDA purpose on the next step."}}