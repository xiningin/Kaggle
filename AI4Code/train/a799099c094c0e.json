{"cell_type":{"cad4bb0c":"code","34e7fe33":"code","5fbda637":"code","badd0196":"code","6a0fcae2":"code","d7651917":"code","8d5ad92d":"code","8784fbd6":"code","bfeee531":"code","2dceaaf2":"code","1bff1561":"code","94f10c96":"code","ff4b4aca":"code","cb7cc47a":"code","69457f3a":"code","a1244090":"code","574b6244":"code","03d73aff":"code","73be784e":"code","375e904c":"code","55b04bc6":"code","9d53908d":"code","e24dffaa":"code","734bb6d6":"code","18ecda60":"code","0bb8bd1b":"markdown","3c8539eb":"markdown","f85f0495":"markdown","aa7315d5":"markdown","70d7282c":"markdown","7d8a52ce":"markdown","dc656202":"markdown","dc0d4303":"markdown","f4013e15":"markdown","ce8699de":"markdown","84c00d91":"markdown","5778d26a":"markdown","103b84f7":"markdown","206144df":"markdown","1d18934a":"markdown","cec2746d":"markdown","6aa2d564":"markdown","c43a832f":"markdown","a12ae7b4":"markdown","536f1331":"markdown","6db3887e":"markdown","e4d5cd60":"markdown","0bd2fe5f":"markdown","2f2b71dc":"markdown","9b6d3038":"markdown"},"source":{"cad4bb0c":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.cluster import KMeans\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import AgglomerativeClustering\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","34e7fe33":"df = pd.read_csv('..\/input\/credit-card-customer-data\/Credit Card Customer Data.csv')\ndf.head()","5fbda637":"df.shape","badd0196":"df.info()","6a0fcae2":"df.duplicated().sum()","d7651917":"df.drop(columns = ['Sl_No', 'Customer Key'], inplace = True)","8d5ad92d":"df.head()","8784fbd6":"df.describe().T","bfeee531":"#correlation matrix\ncorrmat= df.corr()\nplt.figure(figsize=(10,7))  \nsns.heatmap(corrmat,annot=True)","2dceaaf2":"dfs=df.copy()\nscaler = StandardScaler()\nscaler.fit(dfs)\nscaled_dfs = pd.DataFrame(scaler.transform(dfs),columns= dfs.columns )\nprint(\"All features are now scaled\")","1bff1561":"#Scaled data to be used for reducing the dimensionality\nprint(\"Dataframe to be used for further modelling:\")\nscaled_dfs.head()","94f10c96":"#Initiating PCA to reduce dimentions aka features to 3\npca = PCA(n_components=3)\npca.fit(scaled_dfs)\nPCA_dfs = pd.DataFrame(pca.transform(scaled_dfs), columns=([\"col1\",\"col2\", \"col3\"]))\nPCA_dfs.describe().T","ff4b4aca":"#A 3D Projection Of Data In The Reduced Dimension\nx =PCA_dfs[\"col1\"]\ny =PCA_dfs[\"col2\"]\nz =PCA_dfs[\"col3\"]\n#To plot\nfig = plt.figure(figsize=(10,8))\nax = fig.add_subplot(111, projection=\"3d\")\nax.scatter(x,y,z, c=\"red\", marker=\"o\" )\nax.set_title(\"A 3D Projection Of Data In The Reduced Dimension\")\nplt.show()","cb7cc47a":"# Quick examination of elbow method to find numbers of clusters to make.\nprint('Elbow Method to determine the number of clusters to be formed:')\nElbow_M = KElbowVisualizer(KMeans(), k=10)\nElbow_M.fit(PCA_dfs)\nElbow_M.show()","69457f3a":"#Initiating the Agglomerative Clustering model \nAC = AgglomerativeClustering(n_clusters=3)\n# fit model and predict clusters\nyhat_AC = AC.fit_predict(PCA_dfs)\nPCA_dfs[\"Clusters\"] = yhat_AC\n#Adding the Clusters feature to the orignal dataframe.\ndf[\"Clusters\"]= yhat_AC","a1244090":"#Plotting the clusters\nfig = plt.figure(figsize=(10,8))\nax = plt.subplot(111, projection='3d', label=\"bla\")\nax.scatter(x, y, z, s=40, c=PCA_dfs[\"Clusters\"], marker='o', cmap='plasma_r')\nax.set_title(\"The Plot Of The Clusters\")\nplt.show()","574b6244":"#Plotting countplot of clusters\npal = [\"#120202\",\"#e60b0b\", \"#dea2a2\"]\npl = sns.countplot(x=df[\"Clusters\"], palette= pal)\npl.set_title(\"Distribution Of The Clusters\")\nplt.show()","03d73aff":"pl = sns.scatterplot(data = df,x=df[\"Total_Credit_Cards\"], y=df[\"Avg_Credit_Limit\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Cluster's Profile Based On Average Credit Limit And Total Credit Cards\")\nplt.legend()\nplt.show()","73be784e":"pl = sns.scatterplot(data = df,x=df[\"Total_visits_bank\"], y=df[\"Avg_Credit_Limit\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Cluster's Profile Based On Average Credit Limit And Total Credit Cards\")\nplt.legend()\nplt.show()","375e904c":"pl = sns.scatterplot(data = df,x=df[\"Total_visits_online\"], y=df[\"Avg_Credit_Limit\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Cluster's Profile Based On Average Credit Limit And Total Credit Cards\")\nplt.legend()\nplt.show()","55b04bc6":"pl = sns.scatterplot(data = df,x=df[\"Total_calls_made\"], y=df[\"Avg_Credit_Limit\"],hue=df[\"Clusters\"], palette= pal)\npl.set_title(\"Cluster's Profile Based On Average Credit Limit And Total Credit Cards\")\nplt.legend()\nplt.show()","9d53908d":"plt.figure()\npl=sns.stripplot(x=df[\"Clusters\"], y=df[\"Total_Credit_Cards\"], color= \"#CBEDDD\", alpha=0.5 )\npl=sns.boxenplot(x=df[\"Clusters\"], y=df[\"Total_Credit_Cards\"], palette=pal)\nplt.show()","e24dffaa":"plt.figure()\npl=sns.stripplot(x=df[\"Clusters\"], y=df[\"Total_visits_bank\"], color= \"#CBEDDD\", alpha=0.5 )\npl=sns.boxenplot(x=df[\"Clusters\"], y=df[\"Total_visits_bank\"], palette=pal)\nplt.show()","734bb6d6":"plt.figure()\npl=sns.stripplot(x=df[\"Clusters\"], y=df[\"Total_visits_online\"], color= \"#CBEDDD\", alpha=0.5 )\npl=sns.boxenplot(x=df[\"Clusters\"], y=df[\"Total_visits_online\"], palette=pal)\nplt.show()","18ecda60":"plt.figure()\npl=sns.stripplot(x=df[\"Clusters\"], y=df[\"Total_calls_made\"], color= \"#CBEDDD\", alpha=0.5 )\npl=sns.boxenplot(x=df[\"Clusters\"], y=df[\"Total_calls_made\"], palette=pal)\nplt.show()","0bb8bd1b":"**Distribution of Clustring**","3c8539eb":"## Correlation","f85f0495":"**Average Credit Limit Vs Total Visits bank plot shows the clusters pattern**\n* Group 0: average to high Total Visits bank & low to average Average Credit Limit.\n* Group 1 low Total Visits bank & low Average Credit Limit.\n* Group 2 low Total Visits bank & average to high Average Credit Limit.","aa7315d5":"**Average Credit Limit Vs Total Visits Online plot shows the clusters pattern**\n* Group 0: average to high Total Visits Online & low to average Average Credit Limit.\n* Group 1: low Total Visits Online & low Average Credit Limit.\n* Group 2: average to high Total Visits Online & average to high Average Credit Limit.","70d7282c":"**Average Credit Limit Vs Total Calls Mode plot shows the clusters pattern**\n* Group 0: low Total Calls Made & average to high Average Credit Limit.\n* Group 1: average to high Total Calls Made & low Average Credit Limit.\n* Group 2: low Total Calls Made & average to high Average Credit Limit.","7d8a52ce":"## Loading Data","dc656202":"## Table of contents\n\n 1. [Introduction](#Introduction)\n 2. [Importing Libraries](#Importing-Libraries)\n 3. [Loading Data](#Loading-Data)\n 4. [Correlation](#Correlation)\n 5. [Scaling Data](#Scaling-Data)\n 6. [Dimensionality reduction](#Dimensionality-reduction)\n 7. [Clustering](#Clustering)\n 8. [Evaluating Models](#Evaluating-Models)\n","dc0d4303":"From the above plot, it can be clearly seen that cluster 2 is our biggest set of total visits online customers. We can explore what each cluster is spending on for the targeted marketing strategies.","f4013e15":"## Scaling Data","ce8699de":"From the above plot, it can be clearly seen that cluster 1 is our biggest set of total calls made customers. We can explore what each cluster is spending on for the targeted marketing strategies.","84c00d91":"## Evaluating Models","5778d26a":"**Dimensionality reduction** is the transformation of data from a high-dimensional space into a low-dimensional space so that the low-dimensional representation retains some meaningful properties of the original data, ideally close to its intrinsic dimension. \n\n**Principal component analysis (PCA)** is the process of computing the principal components and using them to perform a change of basis on the data, sometimes using only the first few principal components and ignoring the rest.\n\n**Steps in this section:**\n\n* Dimensionality reduction with PCA\n* Plotting the reduced dataframe\n\n**Dimensionality reduction with PCA**\n\nFor this project, I will be reducing the dimensions to 3.","103b84f7":"**Examine the clusters formed**","206144df":"## Dimensionality reduction","1d18934a":"**Plotting the reduced dataframe**","cec2746d":"**An optimal number of clusters = 3** , Next, we will be fitting the Agglomerative Clustering Model to get the final clusters","6aa2d564":"# Customer Segmentation","c43a832f":"## Importing Libraries","a12ae7b4":"From the above plot, it can be clearly seen that cluster 2 is our biggest set of total credit cards customers. We can explore what each cluster is spending on for the targeted marketing strategies.","536f1331":"From the above plot, it can be clearly seen that cluster 0 is our biggest set of total visits bank customers. We can explore what each cluster is spending on for the targeted marketing strategies.","6db3887e":"**Average Credit Limit Vs Total Credit Cards plot shows the clusters pattern**\n* Group 0: average Total Credit Cards & low to average Average Credit Limit.\n* Group 1: low Total Credit Cards & low Average Credit Limit.\n* Group 2: high Total Credit Cards & average to high Average Credit Limit.","e4d5cd60":"**Agglomerative Clustering** is a member of the Hierarchical Clustering family which work by merging every single cluster with the process that is repeated until all the data have become one cluster. The step that Agglomerative Clustering take are: Each data point is assigned as a single cluster.\n\n*Agglomerative clustering uses a bottom-up approach, wherein each data point starts in its own cluster. These clusters are then joined greedily, by taking the two most similar clusters together and merging them. Divisive clustering uses a top-down approach, wherein all data points start in the same cluster.*\n\n**Steps involved in the Clustering**\n\n* Elbow Method to determine the number of clusters to be formed\n* Clustering via Agglomerative Clustering\n* Examining the clusters formed via scatter plot","0bd2fe5f":"## Clustering","2f2b71dc":"## Introduction\nA Customer Credit Card Information Dataset which can be used for Identifying Loyal Customers, Customer Segmentation, Targeted Marketing and other such use cases in the Marketing Industry.\n\nThis data set contains information more than 660 rows, It consist of 7 columns such as Customer Key, Avgerage Credit Limit, Total Credit Cards, etc...\n","9b6d3038":"Customer segmentation is the practice of dividing a company's customers into groups that reflect similarity among customers in each group. The goal of segmenting customers is to decide how to relate to customers in each segment in order to maximize the value of each customer to the business."}}