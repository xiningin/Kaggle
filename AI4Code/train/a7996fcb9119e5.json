{"cell_type":{"990dbae1":"code","5c4fce82":"code","00419b54":"code","b2eab7d4":"code","e1cff6b5":"code","09a60c64":"code","abfd41c1":"code","740d65fb":"code","6435dbe9":"code","5ee14bd6":"code","c5fe502b":"code","7429197b":"code","80ec023f":"code","bc2218cb":"code","7e2b3761":"code","3b4b113d":"code","cd2f58e8":"code","8ab6a663":"code","0e68fc63":"code","1d3b4cd4":"code","15c23886":"code","f4da800b":"code","52d87eda":"code","50af584c":"code","b5da9dfc":"code","908689f4":"code","96d5d7c1":"code","eff338c9":"code","f125705f":"code","c98c5824":"code","a17c66f0":"code","5b4cd8f2":"code","2d82ae88":"markdown","0611243b":"markdown","f6829f0e":"markdown","6bc1aad0":"markdown","f923c5e3":"markdown","206b5359":"markdown","8ee60ccf":"markdown","ddffff74":"markdown","d7f9e70d":"markdown","8d299c7b":"markdown","2fafb8e3":"markdown","de93ea2a":"markdown","698c6f72":"markdown","4c10d49c":"markdown","aa704f1d":"markdown","0916fc0e":"markdown","71786056":"markdown","314d86f8":"markdown","493ac51e":"markdown","8ced2878":"markdown","aea335bc":"markdown","d93c3468":"markdown","f9c1e1de":"markdown","b1530278":"markdown","00e98141":"markdown","9ecbe85b":"markdown","05f10562":"markdown","89c7d873":"markdown","603eadfd":"markdown","0e002c63":"markdown","80024541":"markdown","0f9b1c78":"markdown","de2608eb":"markdown","d7c83aa2":"markdown","47175e97":"markdown"},"source":{"990dbae1":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport squarify\nimport folium\nimport plotly.figure_factory as ff\nimport plotly.graph_objects as go\nimport plotly.express as px\n\npd.maxdisplaycolums = None","5c4fce82":"data = pd.read_csv('..\/input\/english-premier-league202021\/EPL_20_21.csv')","00419b54":"data.info()","b2eab7d4":"data.describe()","e1cff6b5":"data.head()","09a60c64":"data.isna().sum()","abfd41c1":"data['Mins\/Match'] = (data['Mins']) \/ (data['Matches'])\ndata['Mins\/Match']  = data['Mins\/Match'].astype(int)","740d65fb":"data['Position'].unique()","6435dbe9":"position = pd.DataFrame(data.Position.str.split(',',1).tolist(),\n                                 columns = ['Position','Secondary_Pos'])","5ee14bd6":"data = data.drop(columns='Position')\nposition = position.drop(columns='Secondary_Pos')","c5fe502b":"data = pd.concat([data,position],axis =1)","7429197b":"df_GK = data.where(data['Position']=='GK')\ndf_GK = df_GK.dropna()\ndf_DF = data.where(data['Position']=='DF')\ndf_DF = df_DF.dropna()\ndf_MF = data.where(data['Position']=='MF')\ndf_MF = df_MF.dropna()\ndf_FW = data.where(data['Position']=='FW')\ndf_FW = df_FW.dropna()","80ec023f":"print(\"Number of Goalkeepers in the league : \",len(df_GK))\nprint(\"Number of Defenders in the league : \",len(df_DF))\nprint(\"Number of Midfielders in the league : \",len(df_MF))\nprint(\"Number of Forwards in the league : \",len(df_FW))","bc2218cb":"goal_team = pd.DataFrame(data.groupby('Position', as_index=False)['Goals'].sum() )\nax =sns.barplot(x='Position', y='Goals', data=goal_team.sort_values(by=\"Goals\"))\nsns.set_theme(style=\"whitegrid\")\nplt.xticks(rotation=0)\nplt.title('Plot of Goals per position')","7e2b3761":"sns.set_theme(style=\"darkgrid\")\nax = sns.countplot(x=\"Position\",data=data, order = data['Position'].value_counts(ascending = True).index)\nplt.xticks(rotation=0)\nplt.title('Plot of Players per position')\nplt.ylabel('Number of players')","3b4b113d":"goals = pd.DataFrame(data.groupby('Club', as_index=False)['Goals'].sum() )\nsns.set_theme(style=\"whitegrid\",color_codes=True)\nax = sns.barplot(x='Club',y='Goals',data=goals.sort_values(by=\"Goals\"))\nax.set_xlabel(\"Club\",fontsize=30)\nax.set_ylabel(\"Goals\",fontsize=20)\nplt.xticks(rotation=75)\nplt.rcParams[\"figure.figsize\"] = (20,8)\nplt.title('Plot of Clubs vs Total goals scored',fontsize = 20)","cd2f58e8":"# Net goals for every player\ndata['net_goals'] = data['Goals'] - data['Penalty_Goals']","8ab6a663":"#Plotting Net goals per club\ngoals = pd.DataFrame(data.groupby('Club', as_index=False)['net_goals'].sum() )\nsns.set_theme(style=\"darkgrid\",color_codes=True)\nax = sns.barplot(x='Club',y='net_goals',data=goals.sort_values(by=\"net_goals\"))\nax.set_xlabel(\"Club\",fontsize=30)\nax.set_ylabel(\"Net Goals\",fontsize=20)\nplt.xticks(rotation=90)\nplt.rcParams[\"figure.figsize\"] = (20,8)\nplt.title('Plot of Clubs vs Non penalty goals scored',fontsize = 20)","0e68fc63":"df_age1 = data.where(data.Age<=20)\ndf_age1 = df_age1.dropna()\ndf_age2 = data[(data['Age']>20) & (data['Age']<=30)]\ndf_age2 = df_age2.dropna()\ndf_age3 = data[(data['Age']>30) & (data['Age']<=40)]\ndf_age3 = df_age3.dropna()","1d3b4cd4":"print(\"Number of Players under the age of 20 : \",len(df_age1))\nprint(\"Number of Players who are in between 20 and 30 yo : \",len(df_age2))\nprint(\"Number of Players over 30 : \",len(df_age3))","15c23886":"y = np.array([df_age1['Name'].count(),df_age2['Name'].count(),df_age3['Name'].count()])\nmylabels = [\"<=20\", \">20 & <=30\", \">30 & <=40\"]\nplt.title('Plot of Number of Players with Age',fontsize = 20)\nplt.pie(y, labels = mylabels, autopct=\"%.1f%%\")\nplt.show()","f4da800b":"plt.figure(figsize=(18,8))\nb = sns.boxplot(x='Club',y='Age',data=data)\nb.set_xlabel(\"Club\",fontsize=25)\nb.set_ylabel(\"Age\",fontsize=20)\nplt.xticks(rotation=90)\nplt.title('Plot of Age range for each Club',fontsize = 20)","52d87eda":"sns.set_theme(style=\"dark\")\nax = sns.barplot(x='Name',y='Goals',data=data.sort_values(by=\"Goals\",ascending= False)[:10],palette='rocket')\nplt.xticks(rotation=90)\nplt.title('Plot of Players vs Total and Non Penalty goals scored',fontsize = 20)\nwidth = 0.5\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=30)\nax.set_ylabel(\"Goals\",fontsize=20)\n    \nax2 = ax.twinx()\nax2 = sns.barplot(x='Name',y='net_goals',data=data.sort_values(by=\"net_goals\",ascending= False)[:10],palette='rocket',alpha = 0.7,hatch = '\/\/')\nfor bar in ax2.containers[0]:\n    x = bar.get_x()\n    w = bar.get_width()\n    bar.set_x(x + w * (1- width))\n    bar.set_width(w * width)","50af584c":"size = data.groupby('Nationality',)['Name'].count().sort_values(ascending= False).tolist() \nlabel=data.groupby('Nationality',)['Name'].count().sort_values(ascending= False).index.values.tolist()\n\nlabel = [i+\" \"+j for i, j in zip(label, [str(x) for x in size])]\nsquarify.plot(sizes=size, label=label, alpha=.6, text_kwargs={'fontsize':12})","b5da9dfc":"plt.figure(figsize=(12,8))\nsns.heatmap(data.corr(), annot=True, cmap='Pastel2')","908689f4":"sns.set_theme(style=\"darkgrid\")\nax = sns.barplot(x='Name',y='Mins\/Match',data=data[(data['Starts'] > 30) & (data['Position'] == 'FW')].sort_values(by ='Mins\/Match',ascending= False)[:10],palette='magma')\nplt.xticks(rotation=45)\nplt.title('Plot of Forwards with 30+ starts vs Mins\/Match',fontsize = 20)\nwidth = 0.75\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=20)\nax.set_ylabel(\"Mins\/Match\",fontsize=20)\n","96d5d7c1":"sns.set_theme(style=\"dark\")\nax = sns.barplot(x='Name',y='Mins\/Match',data=data[(data['Starts'] > 30) & (data['Position'] == 'MF')].sort_values(by ='Mins\/Match',ascending= False)[:10],palette='magma',alpha = 0.8)\nplt.xticks(rotation=45)\nplt.title('Plot of Midfielders with 30+ starts vs Mins\/Match',fontsize = 20)\nwidth = 0.75\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=20)\nax.set_ylabel(\"Mins\/Match\",fontsize=20)","eff338c9":"sns.set_theme(style=\"dark\")\nax = sns.barplot(x='Name',y='Penalty_Attempted',data=data.sort_values(by=\"Penalty_Attempted\",ascending= False)[:10],palette='viridis')\nplt.xticks(rotation=90)\nplt.title('Plot of Players vs Penalties attempted and scored',fontsize = 20)\nwidth = 0.5\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=20)\nax.set_ylabel(\"Penalty_Attempted\",fontsize=20)\n    \nax2 = ax.twinx()\nax2 = sns.barplot(x='Name',y='Penalty_Goals',data=data.sort_values(by=\"Penalty_Goals\",ascending= False)[:10],palette='viridis',alpha = 0.7,hatch = '\/\/')\nfor bar in ax2.containers[0]:\n    x = bar.get_x()\n    w = bar.get_width()\n    bar.set_x(x + w * (1- width))\n    bar.set_width(w * width)","f125705f":"sns.lmplot(x='Goals', y='xG', data = data[(data['Goals'] > 2)],markers=[\"+\", \"x\", \"1\"],hue = 'Position',height = 10)\nplt.title('Plot of Goals vs xG ',fontsize = 20)","c98c5824":"data['Total Cards'] = data['Yellow_Cards'] + data['Red_Cards']","a17c66f0":"cards = pd.DataFrame(data.groupby('Club', as_index=False)['Total Cards'].sum() )\nsns.set_theme(style=\"dark\")\nax = sns.barplot(x='Club',y='Total Cards',data = cards.sort_values(by = 'Total Cards', ascending = False),palette='RdYlGn')\nplt.xticks(rotation=90)\nplt.title('Plot of Clubs vs Total Number of cards',fontsize = 20)\nwidth = 0.75\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=20)\nax.set_ylabel(\"Mins\/Match\",fontsize=20)\n","5b4cd8f2":"cards = pd.DataFrame(data.groupby('Name', as_index=False)['Total Cards'].sum() )\nsns.set_theme(style=\"dark\")\ndeep = sns.color_palette('deep')\nax = sns.barplot(x='Name',y='Total Cards',data = cards.sort_values(by = 'Total Cards', ascending = False)[:10],palette='RdYlGn',alpha = 0.7)\nplt.xticks(rotation=90)\nplt.title('Plot of Clubs vs Total Number of cards',fontsize = 20)\nwidth = 0.75\nfor bar in ax.containers[0]:\n    bar.set_width(bar.get_width() * width)\nax.set_xlabel(\"Name\",fontsize=20)\nax.set_ylabel(\"Mins\/Match\",fontsize=20)\n","2d82ae88":"# **Plot of Total goals scored by each club.**","0611243b":"* **Should be very careful picking these players up, they might just bring negative hits to your lineup**","f6829f0e":"* **With the New season starting in almost 3 weeks, this is probably the best time to stay connected with football and start building starter squads for Fantasy Teams**\n* **Do make sure to lookout for 3 new teams promoted from Championship**\n* **Rest assured you can make a calculated decision on which players to keep in for the longer run**\n* **Will be doing more specific Fantasy League analysis in near future**\n* **Please have a look, any kinds of feedback is welcome**\n* **I do have a much detailed overall football dataset uploaded, have a look and drop in your thoughts on that too**","6bc1aad0":"* **Considering non penalty goals, Tottenham Hotspur do leave Manchester United behind.**\n* **Manchester City still leads the way for the maximum number of open play goals**","f923c5e3":"# **Number of players within different Age brackets**","206b5359":"# **Plot of Goals per position**","8ee60ccf":"* **Considering open play goals, Bruno Fernandes is nowhere to be seen. You surely dont want him in your fantasy squad unless its about penalties**\n* **Harry Kane leading the line as always**","ddffff74":"# **Plot of Most agressive Clubs**","d7f9e70d":"* **Maximum number of defenders are there in the league, followed by Midfielders and Strikers**","8d299c7b":"# **Plot of Goals vs xG for each position(Players who scored 2+ goals)**","2fafb8e3":"# **Plotting Net Goals per club (Total Goals - Penalty Goals)**","de93ea2a":"* **Maximum number of players from England, quite obvious as it is the local league**\n* **Brazil be the only non European nation with so many players in the league**","698c6f72":"# **Final Thoughts**","4c10d49c":"# **Plot of Players vs Penalties attempted and scored**","aa704f1d":"* **When it is about penalties there is nowhere near Bruno Fernandes**","0916fc0e":"# **Number of players according to position**","71786056":"**Importing the Dataset**","314d86f8":"**This indeed is a really nice dataset giving us few cheeky stats for players across the most popular and competitive football league around the globe -- The Premier League!**\n\n**I did some Exploratory Data Analysis (EDA) and performed some visualizations to gain important insights about the Premier League from the dataset!**","493ac51e":"* **Forwards scoring maximum number of goals as expected.**","8ced2878":"# **Plot of Midfielders with 30+ starts vs Mins\/Match**","aea335bc":"# * **Furthermore,You would want to have the below mentioned players playing for your fantasy team if you want to score every week**","d93c3468":"> **Football is a game of mistakes, whoever makes the fewest, Wins!**","f9c1e1de":"# **Plot of Players per position**","b1530278":"# **Plot of Players per Nationality**","00e98141":"# **Plot of correlation between variables**","9ecbe85b":"# **Performing initial checks on the dataset**","05f10562":"# **Importing the Libraries**","89c7d873":"* **Average age of players in the premier league is in between 20-30 years. The future of the league is definitely bright**","603eadfd":"# **Plot of Players vs Total and Non Penalty goals scored**","0e002c63":"# **Plot of Forwards with 30+ starts vs Mins\/Match**","80024541":"# **Adding extra columns and segregating Positions**","0f9b1c78":"# **Plot of most agressive Players**","de2608eb":"* **Manchester City does score maximum number of goals followed by Manchester United and Tottenham Hotspur**","d7c83aa2":"* **Crystal Palace have the oldest average age.**\n* **Manchester United are in with the youngest squad in the league**","47175e97":"# **Plot of Age range for each Club**"}}