{"cell_type":{"bcba351a":"code","ec9a1515":"code","4a5147ba":"code","220516aa":"code","16c16bb6":"code","2193c401":"code","a8b9bf46":"code","c753c79c":"code","e3f0c1ad":"code","d9a6e8e6":"code","d875c140":"code","8698db48":"code","2830923b":"code","3ad17393":"code","bc031368":"code","37df469e":"code","66f19526":"code","975cd929":"code","bc935331":"code","03ca9e58":"code","5108e9eb":"code","89e1cef1":"code","26694f40":"code","124be92a":"code","5ffa2d1c":"code","8519eaf5":"code","26706af2":"code","bcde21b3":"code","31699194":"code","6819baea":"code","1f108dfc":"code","0d9ea1e9":"code","2574941c":"code","0fb9af34":"code","d36869be":"code","b81032d3":"code","b3869b44":"code","cfb0ba35":"code","be0a6f6a":"code","92a96e79":"code","961399fc":"code","aca9b5e5":"code","b7cb69e9":"code","9c86c0de":"code","1be42321":"code","afbeab95":"code","a5e1529c":"code","04773e23":"code","4230fced":"code","a1631a86":"markdown","5ba1d44d":"markdown","fece10e8":"markdown","051bd3de":"markdown","f43b1fc7":"markdown","18dfbc9d":"markdown","a69a771d":"markdown","9f1984aa":"markdown","dfdd0b32":"markdown","2d1de700":"markdown","3e84ce60":"markdown","3c08ede4":"markdown","ac47e1d8":"markdown","1b9d9bc9":"markdown","e60a0743":"markdown","8a5751b8":"markdown","a0e437c9":"markdown","cb8d806c":"markdown","50343832":"markdown","50d814c8":"markdown","43a1e5d6":"markdown","a9929ce8":"markdown","2827fa1c":"markdown","a93c8ae2":"markdown","b8cff67d":"markdown","79047c8e":"markdown","62a150b1":"markdown"},"source":{"bcba351a":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport scipy as sc\nimport warnings \nimport seaborn as sns\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nplt.style.use('ggplot')\nwarnings.filterwarnings('ignore')","ec9a1515":"data = pd.read_csv('..\/input\/insurance\/insurance.csv')","4a5147ba":"data.info()","220516aa":"data.isna().sum()","16c16bb6":"data.duplicated().sum()","2193c401":"data.drop_duplicates(inplace=True)","a8b9bf46":"data.duplicated().sum()","c753c79c":"from sklearn.preprocessing import LabelEncoder","e3f0c1ad":"encoder = LabelEncoder()","d9a6e8e6":"data['smoker'] = encoder.fit_transform(data['smoker'])\nprint(encoder.classes_)","d875c140":"data['region'] = encoder.fit_transform(data['region'])\nprint(encoder.classes_)","8698db48":"data['sex'] = encoder.fit_transform(data['sex'])\nprint(encoder.classes_)","2830923b":"data.head()","3ad17393":"fig = plt.figure(figsize=(9,6), dpi=90)\nax = fig.gca()\n\nsns.heatmap(data.corr('spearman'), annot=True, cmap='bwr', cbar=True)\nax.set_title('Corr Data')\nplt.show()","bc031368":"!pip install pingouin","37df469e":"import pingouin as pg","66f19526":"p_corr = pg.pairwise_corr(data, method='spearman')[['X', 'Y', 'r', 'p-unc']]\n\np_corr = p_corr[p_corr['p-unc']<=0.05]\n\np_corr[p_corr['Y']=='charges']","975cd929":"data.head()","bc935331":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['smoker'], data['charges'], hue=data['sex'], ax=ax, split=True)\nplt.show()","03ca9e58":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['region'], data['charges'], hue=data['sex'], ax=ax, split=True)\nplt.show()","5108e9eb":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['children'], data['charges'], hue=data['sex'], ax=ax, split=True)\nplt.show()","89e1cef1":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['smoker'], data['bmi'], hue=data['sex'], ax=ax, split=True)\nplt.show()","26694f40":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['children'], data['bmi'], hue=data['sex'], ax=ax, split=True)\nplt.show()","124be92a":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.violinplot(data['region'], data['bmi'], hue=data['sex'], ax=ax, split=True)\nplt.show()","5ffa2d1c":"dta = data[['age', 'bmi', 'children', 'smoker', 'charges']]\n\ndta.head()","8519eaf5":"for i in ['age', 'bmi', 'charges']:\n    \n    fig = plt.figure(figsize=(14,5), dpi=70)\n    ax = fig.subplots(1,2)\n    \n    sns.boxplot(dta[i], ax=ax[0])\n    ax[0].set_title(f\"Box: {i}\")\n    \n    sns.distplot(dta[i], ax=ax[1], fit=sc.stats.norm)\n    ax[1].set_title(f\"Dist: {i}\")","26706af2":"for i in ['age', 'bmi', 'charges']:\n    sta, pval = sc.stats.shapiro(dta[i])\n    \n    print(f\"{i.upper()}:\\nStats: {sta:.3f}\\tP-value: {pval:.5f}\")","bcde21b3":"dta.head()","31699194":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nax.scatter(dta['age'], dta['charges'], c=dta['smoker']+2, alpha=0.7,s=15)\nax.set_xlabel('Age')\nax.set_ylabel('Charger')\nax.set_title('smoker')\nplt.show()\n","6819baea":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nax.scatter(dta['bmi'], dta['charges'], c=dta['children']+2, alpha=0.7,s=15)\nax.set_xlabel('bmi')\nax.set_ylabel('Charger')\nax.set_title('children')\nplt.show()","1f108dfc":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nax.scatter(dta['age'], dta['bmi'], c=dta['children']+2, alpha=0.7,s=15)\nax.set_xlabel('age')\nax.set_ylabel('bmi')\nax.set_title('children')\nplt.show()","0d9ea1e9":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nax.scatter(dta['age'], dta['bmi'], c=dta['smoker']+2, alpha=0.7,s=15)\nax.set_xlabel('age')\nax.set_ylabel('bmi')\nax.set_title('smoker')\nplt.show()","2574941c":"dta.head()","0fb9af34":"X, y = dta.loc[:,['age', 'bmi', 'smoker', 'children']], dta.iloc[:,-1]","d36869be":"from sklearn.decomposition import PCA","b81032d3":"pca = PCA(n_components=1)","b3869b44":"dta_pca = pca.fit_transform(X)","cfb0ba35":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.scatterplot(dta_pca[:,0], y, alpha=0.7, hue=X['smoker'])\nax.set_xlabel('Comp PCA')\nax.set_title('PCA')","be0a6f6a":"fig = plt.figure(figsize=(9,5), dpi=80)\nax = fig.gca()\n\nsns.scatterplot(dta_pca[:,0], y, alpha=0.7, hue=X['children'])\nax.set_xlabel('Comp PCA')\nax.set_title('PCA')","92a96e79":"from xgboost import XGBRegressor\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.metrics import mean_absolute_error\nfrom sklearn.model_selection import train_test_split","961399fc":"X_train, X_test, y_train, y_test = train_test_split(X, y)","aca9b5e5":"X_train.head()","b7cb69e9":"def score(model, X_, y_, cv):\n    \n    mae = mean_absolute_error(y_, model.predict(X_))\n    \n    sco = model.score(X_, y_)\n    \n    cross = -1*cross_val_score(model, X_, y_, cv=cv, scoring='neg_mean_absolute_error')\n    \n    print(f'MAE: {mae:.3f}\\tSCORE: {sco:.3f}\\nCross-val-score MAE\\t-->\\tcv: {cv}\\t-->\\t{cross}')","9c86c0de":"model = XGBRegressor(n_estimators=60, max_depth=3, learning_rate=0.1, colsample_bytree=1,\n                                base_score=1500,\n                                objective='reg:tweedie', tweedie_variance_power=1.5554)\nmodel.fit(X_train, y_train)\n\nscore(model, X_test, y_test, cv=3)\n","1be42321":"score(model, X_train, y_train, cv=3)","afbeab95":"score(model, X, y, cv=6)","a5e1529c":"from xgboost import plot_tree,plot_importance","04773e23":"fig = plt.figure(figsize=(9,5), dpi=70)\nax = fig.gca()\n\nplot_importance(model, ax=ax)","4230fced":"for i in range(0,60):\n\n    fig = plt.figure(figsize=(9,5), dpi=220)\n    ax = fig.gca()\n\n    plot_tree(model, ax=ax, num_trees=i)\n    ax.set_title(f\"tree: {i+1}\")","a1631a86":"> *Apparently the variables sex and region do not contain important information for the prediction and even the number of children (but we will use this for this example)*","5ba1d44d":"# **Correlation between variables**","fece10e8":"> If you want to modify the model or improve its precision, try the hyperparameters that are in the code -> model (these)","051bd3de":"*Let's check if these have a normal or skewed distribution.*","f43b1fc7":"> * If the p_value is greater than 0.05 our variable does not meet sufficient properties to be a normal distribution.","18dfbc9d":"# **PCA**","a69a771d":"> *In the data set we have variables that could be contaminating our data in some way; for example sex, at the time of quoting a medical cost the sex of a person is not important, but rather what they have. Also for the region (the data are from a single country, no problem; if they are from different countries, if it is important, they could have valuable information). Even the number of children is not important, but for this example we will use it.*","9f1984aa":"> *We have these four extremely important variables to predict the medical cost of patients; however let's verify if the others influence or have any information.*","dfdd0b32":"**Feature Importances**","2d1de700":"***train test split***","3e84ce60":"# **XGBoost --> Regressor**","3c08ede4":"*We create a function that returns the mae (due to the presence of outliers), score, mae-cross_val_score.*","ac47e1d8":"**Plot Trees**","1b9d9bc9":"***Let's use Spearman's correlation; since this is used when we have variables that suffer from outliers and categorical variables.***","e60a0743":"# **LabelEncoder**","8a5751b8":"> Significance test to verify if our continuous variables have a normal distribution.","a0e437c9":"> *  If the p_value is less than 0.05, our variable has a normal distribution or at least meets some properties to be considered one.\n\n","cb8d806c":"***Let's reduce the dimensionality to get an idea of \u200b\u200bhow our data is distributed.***","50343832":"*The correlation values \u200b\u200bmay have been given at random, let's use the pingouin library to verify which variables have a significant correlation.*","50d814c8":"*Esta distribuci\u00f3n de nuestros datos ya la hab\u00edamos visto m\u00e1s arriba.*","43a1e5d6":"> As we can see, smoker is the variable that provides the most information.","a9929ce8":"*r --> correlation value; p-unc --> p-value\nif p-unc (p-value) is greater than 0.05 then the correlation of this variable is not significant.*","2827fa1c":"**Let's explore our continuous variables.***","a93c8ae2":"# **Data Leakage**","b8cff67d":"# *Check for missing or duplicate data*","79047c8e":"*Let's remember that missing data is not a problem for xgboost.*","62a150b1":"**Let's explore our important variables.**"}}