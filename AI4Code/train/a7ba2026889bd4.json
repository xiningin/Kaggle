{"cell_type":{"2d28d698":"code","192c45a2":"code","95fac2ff":"code","36eb9850":"code","ff1f7c7a":"code","3212d8c2":"code","feeeee5a":"code","9beee371":"code","99fc9089":"code","1833aa5f":"code","229f8512":"code","53c7a21e":"code","e298fcbc":"code","50ba1078":"code","f3e89ade":"code","6e056ee3":"code","4637f6ae":"code","ed51cacb":"code","cc035206":"code","f42a60fd":"code","e026094d":"code","1f6b75a8":"markdown","aab18d78":"markdown","588f457e":"markdown","3e27db99":"markdown","cd72a7da":"markdown","3e66298c":"markdown","74d279fb":"markdown","a51e9c01":"markdown","862dd196":"markdown","1829291e":"markdown","19b87668":"markdown","b179ce75":"markdown","f59ea40a":"markdown","8e68934e":"markdown","683690c0":"markdown","430548b2":"markdown"},"source":{"2d28d698":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","192c45a2":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np","95fac2ff":"data = pd.read_csv(\"\/kaggle\/input\/top-10-highest-grossing-films-19752018\/blockbusters.csv\")\ndata.head()","36eb9850":"data['worldwide_gross'] = data['worldwide_gross'].str.replace('$', '').str.replace(',', '').astype(float)\ndata.head()","ff1f7c7a":"data.isna().sum()","3212d8c2":"data = data.fillna('No Sub Genre')","feeeee5a":"data.head()","9beee371":"highest_grossing = data.groupby('Main_Genre').sum()['worldwide_gross'].reset_index().sort_values(by='Main_Genre', ascending=False)\ndisplay(highest_grossing)\nprint(\"Highest Grossing Main Genre is: \")\ndisplay(highest_grossing[highest_grossing.worldwide_gross == highest_grossing.worldwide_gross.max()])","99fc9089":"count_title = data.groupby('Main_Genre').count().sort_values(by='Main_Genre', ascending=False)['title']\ncount_title","1833aa5f":"np_highest_grossing = np.array(highest_grossing.worldwide_gross)\nnp_count_title = np.array(count_title)\nnp_index = np.array(count_title.index)\nnp_average_amount_per_genre = np_highest_grossing\/np_count_title","229f8512":"np_result = np.vstack((np_index, np_average_amount_per_genre)).transpose()\nresult = pd.DataFrame({'Genre' : np_result[: , 0], 'Average Amount Grossed' : np_result[:, 1]})\nresult","53c7a21e":"result.loc[result['Average Amount Grossed'] == result['Average Amount Grossed'].max()]","e298fcbc":"plt.figure(figsize = (20,7))\nsns.set_style(\"darkgrid\")\nsns.set_palette(\"PRGn\")\nsns.catplot(x=\"Main_Genre\", y=\"worldwide_gross\", data=data, kind=\"bar\", estimator=sum, ci=None)\nplt.xticks(rotation=90)\nplt.title('Film Genres with their worldwide gross sum')\nplt.xlabel('Main Genre')\nplt.ylabel('Worldwide Gross Sum')","50ba1078":"plt.figure(figsize = (20,7))\nsns.set_style(\"darkgrid\")\nsns.catplot(x=\"Main_Genre\", data=data, kind=\"count\")\nplt.xticks(rotation=90)\nplt.title('Count of Films in each Genre')\nplt.xlabel('Main Genre')\nplt.ylabel('No. of Films')","f3e89ade":"plt.figure(figsize=(20,7))\nsns.set_style(\"darkgrid\")\nsns.catplot(x='Genre', y='Average Amount Grossed', data=result, kind='bar')\nplt.xticks(rotation=90)\nplt.title('Average Amount grossed per film')\nplt.xlabel('Main Genre')\nplt.ylabel('Average Amount Grossed per film')","6e056ee3":"film = data.loc[:, ['Main_Genre','title', 'imdb_rating', 'worldwide_gross']].sort_values(by='imdb_rating')\nfilm","4637f6ae":"plt.figure(figsize=(10,3))\nsns.set_style(\"darkgrid\")\ng=sns.lineplot(x='imdb_rating', y='worldwide_gross', data=film, ci=None)\ng.set_title(\"IMDB Ratings vs Worldwide Gross\")\ng.set(xlabel=\"IMDB Rating\", ylabel=\"Worldwide Gross\")","ed51cacb":"plt.figure(figsize=(30,7))\nsns.set(style=\"ticks\")\nsns.jointplot(x=film.imdb_rating, y=film.worldwide_gross, kind= 'reg', color = '#4CB391').set_axis_labels(\"IMDB Ratings\", \"Worldwide Gross\")","cc035206":"data_pivot_table = data.pivot_table(index='Main_Genre', values='worldwide_gross', columns = 'rating', fill_value = 0, margins=True)\ndata_pivot_table","f42a60fd":"max_avg_gross = data_pivot_table.loc['All']\nmax_avg_gross[max_avg_gross == max_avg_gross.max()]","e026094d":"plt.figure(figsize=(5,5))\nsns.set_style(\"darkgrid\")\nsns.set_palette(\"PRGn\")\nsns.barplot(x=data.rating, y=data.worldwide_gross, ci=None)\nplt.xlabel('Rating')\nplt.ylabel('Worldwide Gross')\nplt.title('Rating vs. Worldwide Gross')","1f6b75a8":"There are 29 & 141 missing values in Genre_2 and Genre_3 respectively. Maybe the films had only one or no sub genres. Let's fix that.","aab18d78":"Hence, we see that, on an average, films with ratings of PG-13 tend to make more money as compared to other films.","588f457e":"From the data of highest grossing films, data analysis is performed to discern the effect of multiple factors on the worldwide gross of films. \n\nPlease comment with suggestions for improvements in this project, if required.","3e27db99":"Fantasy has the highest grosing films. Next, we'll find the count of each of the genres.","cd72a7da":"Fantasy collectively made the highest amount of money. But how much was the count of movies from each genre?","3e66298c":"Creating numpy array in order to calculate the average gross in each genre.","74d279fb":"Number of films in Sci-Fi, Romance, Fantasy and Comedy are almost similar. Thriller has higher number of films. Now let's see their Average worldwide gross.","a51e9c01":"Now, we'll be grouping the Main_Genre and finding the sum of worldwide gross.","862dd196":"We see a positive regression line which means that as IMDB Ratings of a film increases, the Worldwide Gross of the film also increases.\n\n3. Which rating has the highest average gross?","1829291e":"[](http:\/\/)1. Which main_genre has collectively made the highest amount of money? Which genre made the highest average amount of money?\n\nFirst, we'll change the worldwide gross from object type to float type","19b87668":"Now, let's fix the dataframe by filling the missing values.","b179ce75":"We see that Fantasy films are most watched films as even though they have a large number of films, their average worldwide gross remains at the top.\n\n2. Do the IMDB Ratings of the film affect its worldwide gross?","f59ea40a":"From this graph, we don't a well defined relationship between IMDB Ratings and the worldwide gross as we can see that it varies greatly. Some films with a rating of less than 5 grossed more than films with a rating between 5 and 8. Let's look at a joint plot to get some clarity.","8e68934e":"Average Amount Grossed for each Main Genre","683690c0":"Highest Average Amount was grossed by Fantasy. Let's visualize our findings for a better understanding. First, we'll create a plot of Film Genres with the sum of their worldwide gross.","430548b2":"Now, we'll create a DataFrame using our data file."}}