{"cell_type":{"4a29d95a":"code","922bcf42":"code","63934735":"code","dfe8c7e3":"code","215dfca6":"code","c5244292":"code","bf64b166":"code","808524df":"code","486f5c52":"code","99094757":"code","dfe6a09f":"code","906584aa":"code","25de89b0":"code","e9596336":"code","40683884":"code","377f3268":"code","fadcec67":"code","e2755b32":"code","a72e162b":"code","5138d847":"code","b13250ee":"code","43575f48":"code","7c71d364":"markdown","4bba4ccc":"markdown","00861e21":"markdown","9eb95152":"markdown","cd36c641":"markdown","5ce8b56e":"markdown","2dbd36de":"markdown","6c84d56c":"markdown","25a361cb":"markdown","29a9a602":"markdown","4f721267":"markdown"},"source":{"4a29d95a":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\nsns.set_style(\"whitegrid\")\nplt.style.use(\"fivethirtyeight\")\n\n# for interactive visualizations\nimport plotly.offline as py\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected = True)\nfrom plotly import tools\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","922bcf42":"### Loading the Datasets\nmall_data = pd.read_csv(\"\/kaggle\/input\/customer-segmentation-tutorial-in-python\/Mall_Customers.csv\")","63934735":"#### Read the top 5 rows using plotly library\ndata = ff.create_table(mall_data.head())\npy.iplot(data)","dfe8c7e3":"##### Check the Descriptions of the datasets using plotly library. \ndesc = ff.create_table(mall_data.describe())\npy.iplot(desc)","215dfca6":"#### Visualizing the null values using missingo function\n\nimport missingno as msno\nmsno.matrix(mall_data)","c5244292":"plt.figure(figsize = (16,5))\n\nplt.subplot(1, 3, 1)\nsns.distplot(mall_data['Age'])\n\nplt.subplot(1, 3, 2)\nsns.distplot(mall_data['Annual Income (k$)'])\n\nplt.subplot(1, 3, 3)\nsns.distplot(mall_data['Spending Score (1-100)'])\n\nplt.show()","bf64b166":"# Prepare Data\ndf = mall_data.groupby('Gender').size()\n\n# Make the plot with pandas\ndf.plot(kind='pie', subplots=True, figsize=(15, 8))\nplt.title(\"Pie Chart of Vehicle Class - Bad\")\nplt.ylabel(\"\")\nplt.show()","808524df":"### hist plot\nmall_data.hist(figsize = (15, 12))\nplt.show()","486f5c52":"### Pair plot\nsns.pairplot(mall_data)\nplt.title('Pairplot for the Data')\nplt.show()","99094757":"#### Pairplot only three columns beteen Gender columns\nsns.pairplot(mall_data,vars = ['Spending Score (1-100)', 'Annual Income (k$)', 'Age'], hue=\"Gender\")","dfe6a09f":"plt.figure(figsize = (16,8))\nsns.countplot(mall_data['Age'], palette = 'hsv')\nplt.title('Distribution of Age', fontsize = 20)","906584aa":"plt.figure(figsize = (20,8))\nsns.countplot(mall_data['Annual Income (k$)'], palette = 'rainbow')\nplt.title('Distribution of Annual Income', fontsize = 20)","25de89b0":"plt.figure(figsize = (20,8))\nsns.countplot(x ='Spending Score (1-100)', data = mall_data,palette = 'rainbow' ) \nplt.title('Distribution of Annual Income')","e9596336":"#visualize the correlation\nplt.figure(figsize = (20,8))\nsns.heatmap(mall_data.corr(), cmap = 'Wistia', annot = True)\nplt.title('Heatmap for the Data')\nplt.show()","40683884":"plt.figure(1 , figsize = (15 , 6))\nfor gender in ['Male' , 'Female']:\n    plt.scatter(x = 'Age' , y = 'Annual Income (k$)' , data = mall_data[mall_data['Gender'] == gender] ,\n                s = 200 , alpha = 0.5 , label = gender)\nplt.xlabel('Age')\nplt.ylabel('Annual Income') \nplt.title('Age vs Annual Income w.r.t Gender')\nplt.legend()\nplt.show()","377f3268":"plt.figure(1 , figsize = (15 , 6))\nfor gender in ['Male' , 'Female']:\n    plt.scatter(x = 'Annual Income (k$)',y = 'Spending Score (1-100)' ,\n                data = mall_data[mall_data['Gender'] == gender] ,s = 200 , alpha = 0.5 , label = gender)\nplt.xlabel('Annual Income (k$)'), \nplt.ylabel('Spending Score (1-100)') \nplt.title('Annual Income vs Spending Score w.r.t Gender')\nplt.legend()\nplt.show()","fadcec67":"#Considering only 2 features (Annual income and Spending Score) and no Label available\nX= mall_data.iloc[:, [3,4]].values","e2755b32":"#Building the Model\n#KMeans Algorithm to decide the optimum cluster number , KMeans++ using Elbow Mmethod\n\nfrom sklearn.cluster import KMeans\nk=[]\n\nfor i in range(1,11):\n    kmeans = KMeans(n_clusters= i, init='k-means++', random_state=0)\n    kmeans.fit(X)\n    k.append(kmeans.inertia_)","a72e162b":"#Visualizing the ELBOW method to get the optimal value of K \n\nplt.figure(1 , figsize = (15 , 6))\nplt.plot(range(1,11), k)\nplt.title('The Elbow Method')\nplt.xlabel('no of clusters')\nplt.ylabel('wcss')\nplt.show()","5138d847":"#Model Build\nmodel = KMeans(n_clusters= 5, init='k-means++', random_state=0)\ny_kmeans= model.fit_predict(X)\n\n#For unsupervised learning we use \"fit_predict()\" where in for supervised learning we use \"fit_tranform()\"\n#y_kmeans is the final model . Now how and where we will deploy this model in production is depends on what tool we are using.\n#This use case is very common and it is used in BFS industry(credit card) and retail for customer segmenattion.","b13250ee":"#Visualizing all the clusters \nplt.figure(1 , figsize = (15 , 8))\nplt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s = 100, c = 'magenta', label = 'Cluster 1') ### Cluster 1\nplt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s = 100, c = 'blue', label = 'Cluster 2')  ## Cluster 2\nplt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s = 100, c = 'cyan', label = 'Cluster 3')  ## Cluster 3\nplt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s = 100, c = 'green', label = 'Cluster 4')  ## Cluster 4\nplt.scatter(X[y_kmeans == 4, 0], X[y_kmeans == 4, 1], s = 100, c = 'red', label = 'Cluster 5')   ## Cluster 5\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 200, c = 'black', label = 'Centroids')\nplt.title('K Means Clustering Algorithm')\nplt.xlabel('Annual Income (k$)')\nplt.ylabel('Spending Score (1-100)')\nplt.legend()\nplt.show()","43575f48":"#Awesome! Here, we can clearly visualize five clusters. The black dots represent the centroid of each cluster.\n\n\n#Cluster 1 (Red Color) -> earning high but spending less\n#cluster 2 (Blue Colr) -> average in terms of earning and spending \n#cluster 3 (Green Color) -> earning high and also spending high [TARGET SET]\n#cluster 4 (cyan Color) -> earning less but spending more\n#Cluster 5 (magenta Color) -> Earning less , spending less","7c71d364":"<font size=\"+3\" color=\"purple\"><b>Model Building: Clustering using K- means<\/b><\/font>","4bba4ccc":"# Problem Statement\n### You own the mall and want to understand the customers like who can be easily converge [Target Customers] so that the sense can be given to marketing team and plan the strategy accordingly.","00861e21":"<font size=\"+3\" color=\"purple\"><b>Importing the Library<\/b><\/font>","9eb95152":"# <font color='blue'> Table of Contant<\/font>\n\n1. What is Clustring?\n2. Properties of Cluster\n3. Application of Clustring in Real World\n5. KMeans Clustring\n6. Stopping Creteria of K-means Clustring\n7. Importing the Library & Datasets\n8. Checking Null Values using Visualization\n9. Data Visualization & EDA\n    - Pairplot\n    - Countplot\n    - DistPlot\n    - BarPlot\n    - Heatmap\n    - Scatter Plot\n10. Model Building","cd36c641":"<font size=\"+3\" color=\"purple\"><b>Reading the Dataset<\/b><\/font>","5ce8b56e":"- In Age columns most people belong to 18 to 50 Age, \n- Maximum Annual Income 45k to 90k.\n- Maximum Spending Sore is 50","2dbd36de":"<a href=\"#top\" class=\"btn btn-success btn-lg active\" role=\"button\" aria-pressed=\"true\" style=\"color:white\" data-toggle=\"popover\" title=\"go to Colors\">Go to TOP<\/a>","6c84d56c":"### <font color=\"purple\"><b>Main Aim of this Notebook is Understanding of K-means Clustring Algorithm & Model Building using Customer Data<\/b><\/font>","25a361cb":"# <font size=\"+3\" color=red ><b> <center><u>Customer Segmentation Analysis<\/u><\/center><\/b><\/font><br><a id=\"top\"><\/a>","29a9a602":"This Clustering Analysis gives us a very clear insight about the different segments of the customers in the Mall. There are clearly Five segments of Customers namely Miser, General, Target, Spendthrift, Careful based on their Annual Income and Spending Score which are reportedly the best factors\/attributes to determine the segments of a customer in a Mall.","4f721267":"<font size=\"+3\" color=\"purple\"><b>Data Visualization<\/b><\/font>"}}