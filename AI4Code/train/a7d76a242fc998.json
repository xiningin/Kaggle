{"cell_type":{"ba478688":"code","628bbc5a":"code","15b53646":"code","fc7dcde1":"code","80a99212":"code","04b16d88":"code","90d0e86a":"code","c095bfd3":"code","7b2aaf09":"code","2930ef71":"code","d2dcacec":"code","02e495e3":"code","8074b156":"code","66438d5f":"code","e7f8b90c":"code","04c1f3db":"code","2a7079b8":"code","f72f6d92":"code","8f18277b":"code","d133a0a2":"code","b04be9ad":"code","9f3b920f":"code","50831c00":"code","85f4f384":"code","5c724626":"code","0688c324":"code","41cf7f13":"code","d809f1b7":"code","60fe0e66":"markdown"},"source":{"ba478688":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","628bbc5a":"## Import Liberaries\nimport pandas as pd\nimport sqlite3","15b53646":"\n## Read the files\n\ndf_movesets = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/movesets.csv')\ndf_items = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/items.csv')\ndf_moves = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/moves.csv')\ndf_abilities = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/abilities.csv')\ndf_pokemon = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/pokemon.csv')\ndf_natures = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/natures.csv')\ndf_type_before = pd.read_csv('\/kaggle\/input\/pokemon-sun-and-moon-gen-7-stats\/type-chart.csv')\ndf_movesets.head()","fc7dcde1":"##rename the type file, to keep the homogenitiy across all the file names (remove '-')\ndf_copy= df_type_before \ndf_copy.to_csv('typechart.csv',index=False)","80a99212":"## Read the Renamed File\ndf_type  = pd.read_csv('typechart.csv')\ndf_type .head()","04b16d88":"## Read all the columns of the files\n\nprint('The columns of the movesets table are:',df_movesets.columns.to_list())\nprint('\\n')\nprint('The columns of the items table are:',df_items.columns.to_list())\nprint('\\n')\nprint('The columns of the moves table are:',df_moves.columns.to_list())\nprint('\\n')\nprint('The columns of the ablities table are:',df_abilities.columns.to_list())\nprint('\\n')\nprint('The columns of the pokemon table are:',df_pokemon.columns.to_list())\nprint('\\n')\nprint('The columns of the natures are:',df_natures.columns.to_list())\nprint('\\n')\nprint('The columns of the types are:',df_type.columns.to_list())\nprint('\\n')","90d0e86a":"## Let's Rename the titles to simple forms as it will simplify query writing\n\n## For Simplicity let's do the rename for only applicable columns (where reading titles need simplification) \n\ndf_movesets_SQL = df_movesets.rename(columns = {'ndex': 'index',\n                                                'forme': 'form',\n                              }, inplace = False)\n\ndf_items_SQL = df_items  ## no changes required\n\ndf_moves_SQL= df_moves.rename(columns = {'z-effect': 'zeffect',\n                              }, inplace = False)\n\ndf_abilities_SQL=df_abilities ## no changes required\n\ndf_pokemon_SQL= df_pokemon.rename(columns = {'ndex': 'index','forme': 'form',\n                                             'percent-male': 'percentmale',\n                                             'percent-female': 'percentfemale',\n                                             'pre-evolution': 'preevolution',\n                                             'egg-group1': 'egggroup1',\n                                             'egg-group2': 'egggroup2',\n                              }, inplace = False)\n\ndf_natures_SQL=df_natures ## no changes required\ndf_type_SQL=df_type.rename(columns = {'defense-type1': 'defensetypeone',\n                                      'defense-type2': 'defensetypetwo',\n                                      'percent-female': 'percentfemale',\n                                      'pre-evolution': 'preevolution',\n                                      'egg-group1': 'egggroup1',\n                                      'egg-group2': 'egggroup2',\n                              }, inplace = False)\n\n\ndf_movesets_SQL.head()\n\n","c095bfd3":"# import sqlalchemy and create a sqlite engine\nfrom sqlalchemy import create_engine\nengine = create_engine('sqlite:\/\/', echo=False)\n\n# export the dataframe as a table 'playstore' to the sqlite engine\ndf_type_SQL.to_sql(\"typechart\", con =engine)\ndf_items_SQL.to_sql(\"items\", con =engine)\ndf_movesets_SQL.to_sql(\"movesets\", con =engine)\ndf_moves_SQL.to_sql(\"moves\", con =engine)\ndf_abilities_SQL.to_sql(\"abilities\", con =engine)\ndf_pokemon_SQL.to_sql(\"pokemon\", con =engine)\ndf_natures_SQL.to_sql(\"natures\", con =engine)\n","7b2aaf09":"##Read the Datastet after rename\ndf_type_SQL.to_sql('typechart', con=engine, if_exists='append', index=False)\ndf_type_SQL.head()","2930ef71":"## Query 1:- Select fire type pokemon\n\nsql='''\n\nSelect species from pokemon\nwhere type1='Fire'\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","d2dcacec":"## Query 2:- distinct types\n\nsql='''\n\nselect distinct(type1) as type from pokemon\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","02e495e3":"## Query 3:- select total number of ablities of all pokemon\n\nsql='''\n\nselect count(ability) as Count_of_Ablities from abilities\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","8074b156":"## Query 4:- types of pokeballs\n\nsql='''\n\nselect item from items\nWHERE item LIKE '%ball%'\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","66438d5f":"## Query 5:- types of pokeballs\n\nsql='''\n\nselect item from items\nWHERE item LIKE '%ball%'\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","e7f8b90c":"## Query 6:- types of pokemon\n\nsql='''\n\nselect distinct(defensetypeone) as type from typechart\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","04c1f3db":"## Query 7- Egg Groups vs Male and Female Population\n\nsql='''\n\nselect distinct(egggroup1) as egg_group,percentfemale,percentmale from pokemon\ngroup by egggroup1\nunion all\nselect distinct(egggroup2) as egg_group,percentfemale,percentmale from pokemon\ngroup by egggroup2\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","2a7079b8":"## Query 8:- Group all the evolutions of a pokemon\n\nsql='''\n\nselect \ndistinct p1.species as Pokemon_Name,\np1.preevolution as Pre_Evolved_State,\np1.type1 as Primary_Type,\np1.type2 as Secondary_Type,\np1.ability1 as Primary_Ablility,\np1.abilityH as Secondary_Ablility\nfrom pokemon p1\nleft join pokemon p2 on p1.species=p2.preevolution\n\n''';\n\nsql_1='''\n\nselect * from pokemon\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head(10)","f72f6d92":"## Query 9- Pokemon stats\nsql ='''\n\nselect \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","8f18277b":"## Query 10- select pokemon with most status\nsql ='''\n\nselect\nstats_table.species,stats_table.total as top_stats\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.total desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","d133a0a2":"## Query 11- select pokemon with most speed\nsql ='''\n\nselect\nstats_table.species,stats_table.speed as top_speed\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.speed desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","b04be9ad":"## Query 12- select pokemon with top spl attack\nsql ='''\n\nselect\nstats_table.species,stats_table.spattack as top_splattack\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.spattack desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","9f3b920f":"## Query 13- select pokemon with top attack\nsql ='''\n\nselect\nstats_table.species,stats_table.attack as top_attack\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.attack desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","50831c00":"## Query 14- select pokemon with top defense\nsql ='''\n\nselect\nstats_table.species,stats_table.defense as top_defense\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.defense desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","85f4f384":"## Query 15- select pokemon with top hp\nsql ='''\n\nselect\nstats_table.species,stats_table.hp as top_hp\nfrom\n(select \nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species) stats_table\norder by stats_table.hp desc\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","5c724626":"## Query 16- Stats leader for each stat\nsql ='''\n\n\nselect \n'Highes Total:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by total desc\nlimit 1) stats\n\n\nunion all\n\nselect \n'Highes Attack:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by attack desc\nlimit 1) stats\n\nunion all\n\nselect \n'Highes Defense:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by defense desc\nlimit 1) stats\n\nunion all\n\nselect \n'Highes Special Attack:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by spattack desc\nlimit 1) stats\n\nunion all\n\nselect \n'Highes Special Defense:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by spdefense desc\nlimit 1) stats\n\nunion all\n\nselect \n'Highes Speed:-    '|| stats.species as Stats_Master\nfrom (\nselect\nspecies,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon\ngroup by species\norder by speed desc\nlimit 1) stats\n\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","0688c324":"## Query 17- Mega Evolution Pokemon\nsql ='''\n\n\nselect form as Mega_Evolved from movesets\nwhere form like '%Mega%'\n\n\n''';\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","41cf7f13":"## Query 18- Pokememon evolutions and stats\n\nsql='''\n\nselect \ndistinct\nevolutions_table.Pokemon_Name,\nevolutions_table.Pre_Evolved_State,\nevolutions_table.Primary_Type,\nhp, \nattack, \ndefense, \nspattack, \nspdefense, \nspeed,\ntotal\nfrom pokemon p\njoin (select \ndistinct p1.species as Pokemon_Name,\np1.preevolution as Pre_Evolved_State,\np1.type1 as Primary_Type,\np1.type2 as Secondary_Type,\np1.ability1 as Primary_Ablility,\np1.abilityH as Secondary_Ablility\nfrom pokemon p1\nleft join pokemon p2 on p1.species=p2.preevolution) evolutions_table\non p.species=evolutions_table.Pokemon_Name\n\n''';\n\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","d809f1b7":"## Query 19- Types of item\n\nsql='''\n\nselect * from (\nselect\nitem,\ncase \nwhen item like '% Heal%' then 'Heal'\nwhen item like '% potion%' then 'Potion'\nwhen item like '% revive%' then 'Revive'\nwhen item like '% berry%' then 'Berry'\nwhen item like '%plate%' then 'Plate'\nwhen item like '%tm%' then 'TM'\nwhen item like '%stone%' then 'Stone'\nwhen item like '%key%' then  'Key'\nelse 0 end as Classification\nfrom items\n) a\nwhere a.classification !=0\n''';\n\n\n    \ndf_sql = pd.read_sql_query(sql,con=engine)\ndf_sql.head()","60fe0e66":"# Hey Kaggle Fam :)! The below is an exhaustive SQL EDA of the Pokemoon Sun and Moon Gen7 dataset,\n# If you'd like a buddy mentor for SQL and Data Analytics i'm just a ping away :)"}}