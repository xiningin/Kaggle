{"cell_type":{"bf8622bb":"code","c9404d20":"code","b11610a7":"code","03bb320b":"code","c21389b2":"code","91e3871b":"code","f9560459":"code","6004db30":"code","e6d396be":"code","a9e7b96a":"code","55c630fb":"code","7971e25e":"code","a75c66e9":"code","4dd18a81":"code","92277540":"code","5a6b1a30":"markdown","8da92741":"markdown","9b0ef6c9":"markdown","8b800aee":"markdown","d83de468":"markdown","17a86a21":"markdown","b0b5e0d8":"markdown","c0d68cb2":"markdown","b2584486":"markdown","bec6304b":"markdown","eaa42e4a":"markdown","fc47ea16":"markdown","4e7afdda":"markdown","49671b67":"markdown","89fded38":"markdown","116ecf4c":"markdown"},"source":{"bf8622bb":"import re\nimport os\nimport cv2\nimport random\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom PIL  import  Image\nimport matplotlib.pyplot as plt","c9404d20":"train=pd.read_csv('..\/input\/global-wheat-detection\/train.csv')\nsample_output = pd.read_csv('..\/input\/global-wheat-detection\/sample_submission.csv')\ntrain_dir = '..\/input\/global-wheat-detection\/train\/'\ntest_dir ='..\/input\/global-wheat-detection\/test\/'","b11610a7":"train.tail()","03bb320b":"print(train['source'].unique())","c21389b2":"train.drop(['width','height'],axis=1, inplace= True)","91e3871b":"sample_output.head()","f9560459":"train1=train\ntrain1.drop(['source'],axis=1,inplace=True)\ndf = train1.drop_duplicates().groupby('image_id').count()\ndf.sort_values(by=['bbox'],ascending= False)\n","6004db30":"sns.distplot(df['bbox'])","e6d396be":"path, dirs, files = next(os.walk(\"..\/input\/global-wheat-detection\/train\"))\nfile_count = len(files)\nprint(\"Total No. of images in  train directory :\", file_count)\nprint('Total number of annotated images in train data :',len(train['image_id'].unique()),'\\n')\nprint('--- > 49 images are unlabelled ')","a9e7b96a":"# train directory images name\nsep = '.'\nimages_dir=[]\nfor image in files:\n    rest = image.split(sep, 1)[0]\n    images_dir.append(rest)\n    \n# train data labeled images name\nimage_labelled =[]\nfor i in train['image_id']:\n    image_labelled.append(i)\n\n# extracting unlabeled images by comparing train dir. images and train.csv dataset      \nunlabelled_images= [x for x in images_dir if x not in image_labelled]\n\nprint(len(unlabelled_images),'unlabelled images are :')\nunlabelled=[]\nfor h in unlabelled_images:\n    unlabelled.append(h+'.jpg')\n# print(unlabelled)","55c630fb":"rows=7\ncols=7\nlis =[]\nfig, axs = plt.subplots(rows, cols, figsize=(30,30))\nfor row in range(rows):\n    for col in range(cols): \n        imgss= random.choice(unlabelled)\n        img = Image.open(train_dir +imgss)\n        axs[row, col].imshow(img)\n        axs[row, col].axis('off')","7971e25e":"# single box plotting\ndef plot():\n    color = (0,0,255) \n    thickness = 2\n    xmax =xmin+width\n    ymax =ymin+height\n    \n    img = cv2.imread(train_dir+image_id+'.jpg')\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img= cv2.rectangle(img,(xmin,ymin), (xmax,ymax),color,thickness)\n\n    plt.figure(figsize=(20, 20))\n    plt.subplot(1, 2, 1)\n    plt.imshow(img)\n    \ndef get_bbox(image_id):\n    df=train.where(train['image_id']== image_id)\n    df =df.dropna(axis='rows')\n    arr = df[\"bbox\"].to_numpy()\n    return(arr)\n\ndef show_box(image_id):\n    df=train.where(train['image_id']== image_id)\n    df =df.dropna(axis='rows')\n    arr = df[\"bbox\"].to_numpy()\n\n    img = cv2.imread(train_dir+image_id+'.jpg')\n    # opencv always read image as BGR - conversion is must\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    for box in arr:\n        box=box[1:-1]\n        xmin,ymin,width,height= box.split(\",\")\n        # converting string to int\n        xmin= int(float(xmin)); ymin= int(float(ymin)) \n        width= int(float(width)) ; height= int(float(height))\n\n        xmax =xmin+width\n        ymax =ymin+height\n\n        img= cv2.rectangle(img,(xmin,ymin), (xmax,ymax),(255,0,0),2)\n        \n        img1 = Image.fromarray(img) # cv2 to PIL\n    return img1\n#     plt.figure(figsize=(20, 20))\n#     plt.subplot(1, 2, 1)\n#     plt.imshow(img1)","a75c66e9":"show_box('134d4a01c')","4dd18a81":"listt = ['ce4124be0','134d4a01c','a5cb30c38','35b935b6c','f1794c924','b70c20580','f79336a8e','22f341965','86296fc32']\nrows=3\ncols=3\ni=0\nfig, axs = plt.subplots(rows, cols, figsize=(20,20))\nfor row in range(rows):\n    for col in range(cols): \n        img1=show_box(listt[i])\n        axs[row, col].imshow(img1)    \n        axs[row, col].axis('off')\n        i=i+1","92277540":"listt=['35b935b6c','f1794c924','f79336a8e','134d4a01c','b70c20580','4cf91995d','026b6f389','c0e168cd3','690c7d8f0','a119a31fb',\n       'a06241eb3','46e480374','b79a35c8d','bf2c0adde','3014e5cad','ab026459d','2cb361be8','c742fa9ae']\nrows=3\ncols=6\ni=0\nfig, axs = plt.subplots(rows, cols, figsize=(35,18))\nfor row in range(rows):\n    for col in range(cols): \n        img1=show_box(listt[i])\n        axs[row, col].imshow(img1)    \n#         axs[row, col].axis('on')\n        i=i+1","5a6b1a30":"# Data exploration","8da92741":"- for now i dont know is there any insights are hidden from different sources","9b0ef6c9":"# Some of the images are not annotated","8b800aee":"# How many [bounding-box](https:\/\/www.google.com\/search?tbm=isch&q=machine%20learning%20bounding%20box) can one image contain ?\n* image id = 35b935b6c\tcontains 116 bounding box\n* on average one image contain 20-60 wheat heads","d83de468":"## Extracting names of Unlabeled images","17a86a21":"![output](https:\/\/i.imgur.com\/qgN9awQ.png)","b0b5e0d8":"# importing Modules","c0d68cb2":">  no wheat heads in images :(  just grass","b2584486":"- width and height are of no use","bec6304b":"# let's plot most and least bounding box images","eaa42e4a":"- submission sample output :","fc47ea16":"## Images containing Maximum wheat heads\n> Note: some bbox are totally incorrect in future for better accuracy data needs to be cleaned","4e7afdda":"\n# Can we Label the those images ?\n## Let's see","49671b67":"# Average wheat heads in a image : 20-60","89fded38":"# Functions for plotting multiple bounding-box images","116ecf4c":"# Wheat head detection\nit is an essential focus of plant breeders for wheat variety selection and improved crop productivity.<a href=\"https:\/\/sourcerer.io\/mmaithani\"><img src=\"https:\/\/img.shields.io\/badge\/Python-124%20commits-orange.svg\" alt=\"\"><\/a>"}}