{"cell_type":{"93631ef0":"code","b24a12b9":"code","e5bdafcc":"code","31d8c7a8":"code","cab440b1":"code","73f4c495":"code","496f2326":"code","6cc9b992":"code","befc278c":"code","2cb1743d":"code","2e2b39ab":"code","99f7080a":"code","dd5eee7b":"code","5b2faa44":"code","40f8d3a3":"code","70bc1b1c":"code","24bf520f":"code","56580ab3":"code","a4aa2941":"code","4d0f295a":"code","06511086":"code","0e0cb87f":"code","7c3b307e":"code","4e0c5584":"code","db951e7f":"code","c219b2ce":"code","ec5468f5":"code","83ec5b4c":"code","c19f0b32":"code","12fc2828":"code","3445d703":"code","db69d46e":"code","03fd611e":"code","45853e52":"code","989f7afb":"code","46301e9a":"code","82a02b44":"code","0762dc59":"code","3453ac6a":"code","282cbef8":"code","4442af35":"code","fd51b192":"code","06261676":"code","12122483":"code","0ffe0656":"code","2f2848dc":"code","d55176f4":"code","7898d651":"code","83883145":"code","b199913a":"code","ac44e899":"code","504b333a":"code","1acc6cee":"code","fb3972a4":"code","ff644044":"code","363a0725":"code","6283af95":"code","5ec944e9":"code","21a55fd5":"code","5894fd51":"code","dfb7682b":"code","4c9fc641":"code","b3457892":"code","ffcfba05":"code","91192761":"code","ec8470f2":"code","95c9ddee":"code","d170c424":"code","2bf53a73":"code","c6dd387d":"code","9618441a":"code","8e6a23fb":"markdown","a19ca665":"markdown","b9b81d75":"markdown","f1e52eb2":"markdown","09718843":"markdown","cd1af09e":"markdown","e6d0bbf5":"markdown","121bd44c":"markdown","ca865959":"markdown","15c6c0da":"markdown","39ec2dba":"markdown","aadb5646":"markdown","b740fc80":"markdown","ca8b17b4":"markdown","66a8e639":"markdown","dd8abf58":"markdown","d262c881":"markdown","c6fd9ff4":"markdown","0b530aae":"markdown","db45aae4":"markdown","7498e7dc":"markdown","04880d2d":"markdown","890ff60f":"markdown","12d41e46":"markdown","ac8c7106":"markdown","5f3462a4":"markdown","4f0caa25":"markdown","f51dc0d1":"markdown","1b91972e":"markdown","61864ecc":"markdown","a7a64e20":"markdown","bc53f8f9":"markdown","f5e6c43f":"markdown"},"source":{"93631ef0":"import numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set(style='darkgrid')\nimport pandas as pd\n","b24a12b9":"df=pd.read_excel(\"..\/input\/portuguesebankmarketing\/bank-full.xlsx\")","e5bdafcc":"df","31d8c7a8":"df.isnull().sum()","cab440b1":"df.info()","73f4c495":"df['y'].value_counts()","496f2326":"df_update=df.copy()\ndf_update","6cc9b992":"a1=df_update[(df_update['age']>=18) & (df_update['age']<=28)]\na2=df_update[(df_update['age']>=29) & (df_update['age']<=39)]\na3=df_update[(df_update['age']>=40) & (df_update['age']<=50)]\na4=df_update[(df_update['age']>=51) & (df_update['age']<=60)]\na5=df_update[(df_update['age']>=61)]","befc278c":"total=[]\nlist1=[a1,a2,a3,a4,a5]\nfor i in list1:\n  total.append(i.shape[0])\nyes_count=[]\nfor i in list1:\n  yes_count.append(i[i['y']=='yes'].count()['y'])","2cb1743d":"age_final=pd.DataFrame()\nage_final['Age Groups']=['18-28','29-39','40-50','51-60','61+']\nage_final['Total']=total\nage_final['Yes Count']=yes_count\nage_final['Percetage']=(age_final['Yes Count']\/age_final['Total'])*100\nage_final.sort_values(by='Percetage',ascending=False)","2e2b39ab":"plt.figure(figsize=(20,20))\nplt.subplot(3,2,1)\nsns.swarmplot(a1['age'],a1['campaign'],hue=a1['y'])\nplt.subplot(3,2,2)\nsns.swarmplot(a2['age'],a2['campaign'],hue=a2['y'])\nplt.subplot(3,2,3)\nsns.swarmplot(a3['age'],a3['campaign'],hue=a3['y'])\nplt.subplot(3,2,4)\nsns.swarmplot(a4['age'],a4['campaign'],hue=a4['y'])\nplt.subplot(3,2,5)\nsns.swarmplot(a5['age'],a5['campaign'],hue=a5['y'])\n\n","99f7080a":"df_update['job'].value_counts().index","dd5eee7b":"total_count_in_each_group=[]\nyes_count=[]\nno_count=[]\ntitle=[]\nfor i in df_update['job'].value_counts().index:\n  df_job=pd.DataFrame()\n  df_job=df_update[df_update['job']==i]\n  title.append(i)\n  total_count_in_each_group.append(df_job.shape[0])\n  yes_count.append(df_job[df_job['y']=='yes'].count()['y'])\n  no_count.append(df_job[df_job['y']=='no'].count()['y'])\ndf_jobs=pd.DataFrame()\ndf_jobs['Job Title']=title\ndf_jobs['Total']=total_count_in_each_group\ndf_jobs['Yes']=yes_count\ndf_jobs['No']=no_count\ndf_jobs","5b2faa44":"labels=df_jobs['Job Title']\npositions = np.arange(0,12,1)\ndf_jobs.plot(kind='bar',figsize=(20,5))\nplt.xticks(positions, labels)","40f8d3a3":"df_jobs_final=pd.DataFrame()\ndf_jobs_final['Job Title']=title\ndf_jobs_final['Percentage_yes']=(df_jobs['Yes']\/df_jobs['Total'])*100\ndf_jobs_final['Percentage_no']=(df_jobs['No']\/df_jobs['Total'])*100\ndf_jobs_final=df_jobs_final.sort_values('Percentage_yes',ascending=False)\ndf_jobs_final","70bc1b1c":"labels=df_jobs_final['Job Title'].tolist()\nposition=df_jobs_final['Job Title'].index\ndf_jobs_final.plot(kind='bar',figsize=(20,5))\nplt.xticks(positions, labels)","24bf520f":"df_married=df_update[df_update['marital']=='married']\ndf_single=df_update[df_update['marital']=='single']\ndf_divorced=df_update[df_update['marital']=='divorced']\nmarried=df_update['marital'].value_counts().to_frame()\nmarried","56580ab3":"yes_count=[]\nyes_count.append(df_married[df_married['y']=='yes'].count()[1])\nyes_count.append(df_single[df_single['y']=='yes'].count()[1])\nyes_count.append(df_divorced[df_divorced['y']=='yes'].count()[1])\nmarried['Subscription count']=yes_count","a4aa2941":"married.plot(kind='bar')","4d0f295a":"married['Percentage']=(married['Subscription count']\/married['marital'])*100\nmarried.sort_values(by='Percentage',ascending=False)","06511086":"education=df_update['education'].value_counts().to_frame()\neducation","0e0cb87f":"df_secondary=df_update[df_update['education']=='secondary']\ndf_tertiary=df_update[df_update['education']=='tertiary']\ndf_primary=df_update[df_update['education']=='primary']\ndf_unknown=df_update[df_update['education']=='unknown']","7c3b307e":"yes_count=[]\nyes_count.append(df_secondary[df_secondary['y']=='yes'].count()[1])\nyes_count.append(df_tertiary[df_tertiary['y']=='yes'].count()[1])\nyes_count.append(df_primary[df_primary['y']=='yes'].count()[1])\nyes_count.append(df_unknown[df_unknown['y']=='yes'].count()[1])\neducation['Subscription count']=yes_count","4e0c5584":"education.plot(kind='bar')","db951e7f":"education['Percentage']=(education['Subscription count']\/education['education'])*100\neducation.sort_values(by='Percentage',ascending=False)","c219b2ce":"success=df_update[(df_update['poutcome']=='success')].count()['poutcome']\nfailure=df_update[(df_update['poutcome']=='failure')].count()['poutcome']\nunknown=df_update[(df_update['poutcome']=='unknown')].count()['poutcome']\nother=df_update[(df_update['poutcome']=='other')].count()['poutcome']\nprevious_campaign=pd.DataFrame({'Status':['Success','Failure','Unknown','Others'],\"Values\":[success,failure,unknown,other]})\nprevious_campaign['Percentage']=(previous_campaign['Values']\/45211)*100\nprevious_campaign","ec5468f5":"df_update[df_update['pdays']==-1]","83ec5b4c":"df_update[(df_update['pdays']!=-1) & (df_update['poutcome']=='unknown')]","c19f0b32":"sns.barplot(df_update['y'],df_update['balance'])","12fc2828":"yes=df_update[df_update['y']=='yes']\nno=df_update[df_update['y']=='no']\nprint(yes['balance'].mean())\nprint(no['balance'].mean())\n\nsns.scatterplot(df_update['balance'],df_update['age'],hue=df_update['y'])","3445d703":"sns.boxplot(df['balance'],df['y'])","db69d46e":"default_yes=df_update[df_update['default']=='yes']\ndefault_no=df_update[df_update['default']=='no']\ntotal=df_update.shape[0]\nyes=default_yes.count()['y']\nno=default_no.count()['y']\nsns.countplot(df_update['default'])\nprint(\"Total Count\",total)\nprint((yes\/total)*100)\nprint((no\/total*100))","03fd611e":"yes=default_yes[default_yes['y']=='yes'].count()['y']\nno=default_yes[default_yes['y']=='no'].count()['y']\ntotal=default_yes.count()['y']\nprint(\"Default\")\nprint(total)\nprint((yes\/total)*100)\nprint((no\/total)*100)","45853e52":"yes=default_no[default_no['y']=='yes'].count()['y']\nno=default_no[default_no['y']=='no'].count()['y']\ntotal=default_no.count()['y']\nprint(\"Non default\")\nprint(total)\nprint((yes\/total)*100)\nprint((no\/total)*100)","989f7afb":"plt.figure(figsize=(20,5))\nsns.countplot(df_update['default'],hue=df_update['y'])","46301e9a":"default_yes=df_update[df_update['housing']=='yes']\ndefault_no=df_update[df_update['housing']=='no']\n\ntotal=df_update.shape[0]\nyes=default_yes.count()['y']\nno=default_no.count()['y']\nsns.countplot(df_update['housing'])\n\nprint(\"Total counts\")\nprint(\"We have \",(yes\/total)*100,\" % who have house loan and count is \", yes)\nprint(\"We have \",(no\/total)*100,\" % who have dont house loan and count is \",no)","82a02b44":"yes=default_yes[default_yes['y']=='yes'].count()['y']\nno=default_yes[default_yes['y']=='no'].count()['y']\ntotal=default_yes.count()['y']\nprint(\"Total that have housing loan are\",total)\nprint(\"Out of the total\",(yes\/total)*100,\" % have subscribed to Term Deposit Plan\")\nprint(\"Out of the total\",(no\/total)*100,\" % have not subscribed to Term Deposit Plan\")","0762dc59":"yes=default_no[default_no['y']=='yes'].count()['y']\nno=default_no[default_no['y']=='no'].count()['y']\ntotal=default_no.count()['y']\nprint(\"Total number of people that don't housing loan are\",total)\nprint(\"Out of the total\",(yes\/total)*100,\" % have subscribed to Term Deposit Plan\")\nprint(\"Out of the total\",(no\/total)*100,\" % have not subscribed to Term Deposit Plan\")","3453ac6a":"plt.figure(figsize=(20,5))\nsns.countplot(df_update['housing'],hue=df_update['y'])","282cbef8":"default_yes=df_update[df_update['loan']=='yes']\ndefault_no=df_update[df_update['loan']=='no']\n\ntotal=df_update.shape[0]\nyes=default_yes.count()['y']\nno=default_no.count()['y']\nsns.countplot(df_update['loan'])\n\nprint(\"Total counts\")\nprint(\"We have \",(yes\/total)*100,\" % who have personal loan and count is \", yes)\nprint(\"We have \",(no\/total)*100,\" % who have dont personal loan and count is \",no)","4442af35":"yes=default_yes[default_yes['y']=='yes'].count()['y']\nno=default_yes[default_yes['y']=='no'].count()['y']\ntotal=default_yes.count()['y']\nprint(\"Total that have Personal loan are\",total)\nprint(\"Out of the total\",(yes\/total)*100,\" % have subscribed to Term Deposit Plan\")\nprint(\"Out of the total\",(no\/total)*100,\" % have not subscribed to Term Deposit Plan\")","fd51b192":"yes=default_no[default_no['y']=='yes'].count()['y']\nno=default_no[default_no['y']=='no'].count()['y']\ntotal=default_no.count()['y']\nprint(\"Total number of people that don't have personal loan are\",total)\nprint(\"Out of the total\",(yes\/total)*100,\" % have subscribed to Term Deposit Plan\")\nprint(\"Out of the total\",(no\/total)*100,\" % have not subscribed to Term Deposit Plan\")","06261676":"plt.figure(figsize=(20,5))\nsns.countplot(df_update['housing'],hue=df_update['y'])","12122483":"df_update['contact'].value_counts()","0ffe0656":"sns.countplot(df['contact'],hue=df['y'])","2f2848dc":"df_update['month'].value_counts()","d55176f4":"df_update.loc[df_update['month']=='jan','month']=1\ndf_update.loc[df_update['month']=='feb','month']=2\ndf_update.loc[df_update['month']=='mar','month']=3\ndf_update.loc[df_update['month']=='apr','month']=4\ndf_update.loc[df_update['month']=='may','month']=5\ndf_update.loc[df_update['month']=='jun','month']=6\ndf_update.loc[df_update['month']=='jul','month']=7\ndf_update.loc[df_update['month']=='aug','month']=8\ndf_update.loc[df_update['month']=='sep','month']=9\ndf_update.loc[df_update['month']=='oct','month']=10\ndf_update.loc[df_update['month']=='nov','month']=11\ndf_update.loc[df_update['month']=='dec','month']=12","7898d651":"dict1=dict(list(df_update.groupby(['month','y'])))\nlist1=[1,2,3,4,5,6,7,8,9,10,11,12]\nno=[]\nyes=[]\nmonths=[]\nfor i in list1:\n  months.append(i)\n  for j in ['no','yes']:\n    if(j=='no'):\n      no.append(dict1[i,j].count()['y'])\n    else:\n      yes.append(dict1[i,j].count()['y'])\n\ntotal_count_per_month=[]\ndict2=dict(list(df_update.groupby(['month'])))\nfor i in list1:\n  total_count_per_month.append(dict2[i].count()['y'])\n\n      \nprint(months)\nprint(total_count_per_month)\nprint(yes)\nprint(no)","83883145":"month_wise=pd.DataFrame()\nmonth_wise['Months']=months\nmonth_wise['Total ENteries per month']=total_count_per_month\nmonth_wise['Count of Subscribed']=yes\nmonth_wise['Count of Not Sub']=no\nmonth_wise['Subscription Rate']=(month_wise['Count of Subscribed']\/month_wise['Total ENteries per month'])*100\nmonth_wise['Not Sub Rate']=(month_wise['Count of Not Sub']\/month_wise['Total ENteries per month'])*100","b199913a":"month_wise=month_wise.sort_values(\"Subscription Rate\",ascending=False)\nmonth_wise","ac44e899":"plt.figure(figsize=(20,5))\nlabels=['Jan','Feb','March','April','May','June','July','Aug','Sep','Oct','Nov','Dec']\nposition=np.arange(0,13,1)\nsns.pointplot(month_wise['Months'],month_wise['Subscription Rate'],color='g')\nplt.xticks(position,labels)\nplt.legend(['Subscription %'])","504b333a":"plt.figure(figsize=(20,5))\nlabels=['Jan','Feb','March','April','May','June','July','Aug','Sep','Oct','Nov','Dec']\nposition=np.arange(0,13,1)\nsns.pointplot(month_wise['Months'],month_wise['Not Sub Rate'],color='r')\nplt.xticks(position,labels)\nplt.legend(['Not subscribed %'])","1acc6cee":"plt.figure(figsize=(20,5))\nlabels=['Jan','Feb','March','April','May','June','July','Aug','Sep','Oct','Nov','Dec']\nposition=np.arange(0,13,1)\nsns.pointplot(month_wise['Months'],month_wise['Total ENteries per month'],color='r')\nplt.xticks(position,labels)\nplt.legend(['Total count- contacted per month'])","fb3972a4":"month_final=month_wise[['Months','Subscription Rate','Not Sub Rate']]\nmonth_final=month_final.set_index('Months')","ff644044":"month_final.plot(kind='bar',figsize=(15,5))\n","363a0725":"sns.boxplot(df_update['duration'],df_update['y'])","6283af95":"total=[]\nno=[]\nyes=[]\n\ntotal.append(df_update[(df_update['duration']<=500)].count()['duration'])\nno.append(df_update[(df_update['duration']<=500) & (df_update['y']=='no')].count()['y'])\nyes.append(df_update[(df_update['duration']<=500) & (df_update['y']=='yes')].count()['y'])\n\n\ntotal.append(df_update[(df_update['duration']<=1000) & (df_update['duration']>500)].count()['duration'])\nno.append(df_update[(df_update['duration']<=1000) & (df_update['duration']>500) & (df_update['y']=='no')].count()['y'])\nyes.append(df_update[(df_update['duration']<=1000) & (df_update['duration']>500) & (df_update['y']=='yes')].count()['y'])\n\ntotal.append(df_update[(df_update['duration']<=1500) & (df_update['duration']>1000)].count()['duration'])\nno.append(df_update[(df_update['duration']<=1500) & (df_update['duration']>1000) & (df_update['y']=='no')].count()['y'])\nyes.append(df_update[(df_update['duration']<=1500) & (df_update['duration']>1000) & (df_update['y']=='yes')].count()['y'])\n\ntotal.append(df_update[(df_update['duration']<=2000) & (df_update['duration']>1500)].count()['duration'])\nno.append(df_update[(df_update['duration']<=2000) & (df_update['duration']>1500) & (df_update['y']=='no')].count()['y'])\nyes.append(df_update[(df_update['duration']<=2000) & (df_update['duration']>1500) & (df_update['y']=='yes')].count()['y'])\n\ntotal.append(df_update[(df_update['duration']>2000)].count()['duration'])\nno.append(df_update[(df_update['duration']>2000) & (df_update['y']=='no')].count()['y'])\nyes.append(df_update[(df_update['duration']>2000) & (df_update['y']=='yes')].count()['y'])\n\n\nduration=pd.DataFrame()\nduration['Duration']=['Till 500','501-1000','1001-1500','1501-2000','2001+']\nduration['total']=total\nduration['Yes']=yes\nduration['No']=no\nduration['Yes percent']=(duration['Yes']\/duration['total'])*100\nduration.sort_values('Yes percent',ascending=False)","5ec944e9":"plt.figure(figsize=(20,5))\nplt.xticks(np.arange(0,5000,150))\nsns.scatterplot(df_update['duration'],df['campaign'],hue=df_update['y'])","21a55fd5":"plt.figure(figsize=(25,10))\nsns.countplot(df['campaign'],hue=df['y'])","5894fd51":"df_15=df_update[(df_update['campaign']<=15) ]\ndf_30=df_update[(df_update['campaign']>=16) & (df_update['campaign']<=30) ]\ndf_31=df_update[(df_update['campaign']>=31) ]","dfb7682b":"total_calls=[]\nyes=[]\nno=[]\nfor i in[df_15,df_30,df_31]:\n  total_calls.append(i.count()['campaign'])\n  yes.append(i[i['y']=='yes'].count()['y'])\n  no.append(i[i['y']=='no'].count()['y'])\n\nprint(total_calls)\nprint(yes)\nprint(no)","4c9fc641":"campaigns=pd.DataFrame()\ncampaigns['No.of call']=['Till 15','16- 30','30+ more']\ncampaigns['Total no of Calls']=total_calls\ncampaigns['Took Subscription']=yes\ncampaigns['No Subscription']=no\ncampaigns['Rate of Sub']=(campaigns['Took Subscription']\/campaigns['Total no of Calls'])*100","b3457892":"campaigns","ffcfba05":"sns.barplot(campaigns['No.of call'],campaigns['Rate of Sub'])","91192761":"df_update['day']","ec8470f2":"plt.figure(figsize=(20,5))\nsns.set(style='darkgrid')\nsns.countplot(df_update['day'],hue=df_update['y'])\n","95c9ddee":"dict1=dict(list(df_update.groupby(['day','y'])))\nlist1=np.arange(1,32,1)\nno=[]\nyes=[]\ndays=[]\nfor i in list1:\n  days.append(i)\n  for j in ['no','yes']:\n    if(j=='no'):\n      no.append(dict1[i,j].count()['y'])\n    else:\n      yes.append(dict1[i,j].count()['y'])\n\ntotal_count_per_day=[]\ndict2=dict(list(df_update.groupby(['day'])))\nfor i in list1:\n  total_count_per_day.append(dict2[i].count()['y'])\n","d170c424":"day_wise=pd.DataFrame()\nday_wise['Day']=days\nday_wise['Total ENteries per day']=total_count_per_day\nday_wise['Count of Subscribed']=yes\nday_wise['Count of Not Sub']=no\nday_wise['Subscription Rate']=(day_wise['Count of Subscribed']\/day_wise['Total ENteries per day'])*100\nday_wise['Not Sub Rate']=(day_wise['Count of Not Sub']\/day_wise['Total ENteries per day'])*100\nday_wise=day_wise.sort_values('Subscription Rate',ascending=False)","2bf53a73":"plt.figure(figsize=(20,5))\nsns.pointplot(day_wise['Day'],day_wise['Subscription Rate'])","c6dd387d":"plt.figure(figsize=(20,5))\nsns.set(style='darkgrid')\nsns.pointplot(day_wise['Day'],day_wise['Total ENteries per day'])","9618441a":"plt.figure(figsize=(20,5))\nsns.set(style='darkgrid')\nsns.pointplot(day_wise['Day'],day_wise['Not Sub Rate'])\nplt.ylabel('Not subscribed percentage')","8e6a23fb":"We have 5 clients that  were contacted in previous campaign but their outcome is mentioned as unknown","a19ca665":"# Marital state","b9b81d75":"# Education \n","f1e52eb2":"1)Columns 'education' and 'y' don't show  strong relstionship\n\n2)Here we have 1857 enteries where education is unknown","09718843":"# CAll Duration","cd1af09e":"# Personal Loan And target column","e6d0bbf5":"# Month wise subscription Rate","121bd44c":"# Pdays","ca865959":"1)We have 39840 who have call duration less than 500 seconds.\n\nWhere the call duration is less(0-500seconds),we have very few clients subscribing.\n\n2)Where the call duration is between 1500- 2000 seconds that is 15-30 mins we can see more number of clients subscribing to Term Deposit plan\n\n3)We have 59 calls where the call duration is more than 2000 seconds\n\n","15c6c0da":"# Housing Loan and Target ","39ec2dba":"If pdays=-1 ,-1 means client was not previously contacted.\n\nHence 36954 clients were not contacted in previous campaigns","aadb5646":"# Age ","b740fc80":"# Job Type\n","ca8b17b4":"81% of values are Unknown value in poutcome column\nThis column can be dropped.","66a8e639":"# balance \n","dd8abf58":"1)Calling between 1-15 has a good subscription rate as compared to calling more than 15 times\n\n2)59 Customers we called more than 30 times,out of which only 1 client took the subscription","d262c881":"1)Day 1, 10 ,30 and 22 mark the high subscription rate\n\n2)Day 20 has the highest contacted members\n\n3)Day 1 has lowest contacted members\n\n4)Days 19 and 20 are having lowest subscription rate\n","c6fd9ff4":"From the people who have default in credits,out of that 6% have subscripted to Term Deposit plan","0b530aae":"1) We can see March Month has highest subscription rate followed by december and September\n\n2)Many people were contacted in the month of May\n\n3)May month marks the lowest subscription rate","db45aae4":"There are more clients who don't have a housing loan and have subscribed to Term Deposit Plan.\n\nWe have 44.41% of people who don't have housing loan and out of that 16.70% people have subscribed to Term Deposit plan","7498e7dc":"More clients with Non Default on credit are subscripted to Term Deposit Plan","04880d2d":"As per the visualization, 'Marital' and y don't have a strong relationship\n\n","890ff60f":"# Previous column and number of Unknown values\n\n\n","12d41e46":"There is no strong relation between Balance and target variable\n\n\n\n","ac8c7106":"# Campaign","5f3462a4":"1)Age groups 18-28 and 61+ age are the two groups who have higher Term Deposit \nSubscription rate as compared to other age groups\n\n2)Rate of subscription is very less for the age group 40-50","4f0caa25":"# Credit and target","f51dc0d1":"# Communication mode\nOut of total 45211, 13020 are unknown in communication mode column","1b91972e":"From the people who have non default on credit, out of that 11% of the clients have subscribed to  Term Deposit plan","61864ecc":"1)From above graph we can see that students and retired people are the clients who have high percentage of of subscription rate.\n\n2)Blue-collar,entrepreneur,housemaid,services have low are few jobs that have low subscription rate.\n\n3)People with job description as 'Blue-collar' are the most contacted people\n\n4)Students are the less contacted people\n\n4)We have 288 enteries where job is unknown.\n","a7a64e20":"Dividing age in 5 parts with difference of 10\n","bc53f8f9":"1.8% has default in credit\n\n98.1% are those who are non default in their credit","f5e6c43f":"There are more clients who don't have a personal loan and have subscribed to Term Deposit Plan.\n\nWe have 83.97% of people who don't have a personal loan and out of that 12.65% people have subscribed to Term Deposit plan"}}