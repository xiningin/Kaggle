{"cell_type":{"5d21ee7f":"code","a9642cf6":"code","db7a777c":"code","f0141dcd":"code","c8491be2":"code","c94e02e5":"code","578f6412":"code","5099962a":"code","13a6fab0":"code","571c9910":"code","f4386e70":"code","dc1e65f4":"code","465fa975":"markdown","df66ea9d":"markdown","76c54205":"markdown","d707d389":"markdown","620b23fd":"markdown","6562bd3d":"markdown","3c6ec4b1":"markdown","f6f080e8":"markdown"},"source":{"5d21ee7f":"import os\nfrom pandas_datareader import data, wb\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport pandas_datareader.data as web\nimport datetime\nimport matplotlib.pyplot as plt\nimport cufflinks as cf\n\n","a9642cf6":"start = \"2019-01-01\"\nend = \"2020-04-03\"\nwixDF = web.DataReader('WIX', 'yahoo', start=start, end=end)\ncelcomDF = web.DataReader('CEL', 'yahoo', start=start, end=end)\nelbitDF = web.DataReader('ESLT', 'yahoo', start=start, end=end)\ntevaDF = web.DataReader('TEVA', 'yahoo', start=start, end=end)\ndelekDF = web.DataReader('DK', 'yahoo', start=start, end=end)","db7a777c":"companiesData = [wixDF, celcomDF, elbitDF, tevaDF, delekDF]\ntickers = \"WIX CEL ESLT TEVA DK\".split()\ncompanies_stocks = pd.concat(companiesData, keys=tickers, axis=1)\ncompanies_stocks.columns.names = ['Company Ticker', 'Stock Info']\n","f0141dcd":"companies_stocks.head()","c8491be2":"# MAX CLOSE DATA FRAME\n\namount_ser = pd.DataFrame(companies_stocks.xs(key=\"Close\", axis=1, level='Stock Info').max())\ndate_ser = pd.DataFrame(companies_stocks.xs(key=\"Close\", axis=1, level='Stock Info').idxmax())\n\nmax_closeDF = pd.merge(amount_ser, date_ser, on='Company Ticker')\nmax_closeDF.columns = ['Close', 'Date']\nmax_closeDF\n\n\n","c94e02e5":"# MIN CLOSE DATA FRAME\n\namount_ser = pd.DataFrame(companies_stocks.xs(key=\"Close\", axis=1, level='Stock Info').min())\ndate_ser = pd.DataFrame(companies_stocks.xs(key=\"Close\", axis=1, level='Stock Info').idxmin())\n\nmin_closeDF = pd.merge(amount_ser, date_ser, on='Company Ticker')\nmin_closeDF.columns = ['Close', 'Date']\nmin_closeDF","578f6412":"minmax = pd.merge(min_closeDF, max_closeDF, on='Company Ticker')\nminmax.columns = ['Min Close', 'Min Date', 'Max Close', 'Max Date']\nminmax","5099962a":"# RETURNS\nreturns = pd.DataFrame(companies_stocks.xs(key='Close', axis=1, level=1).pct_change())\nfig= returns.iplot(asFigure=True,kind='box',title='Returns Box Plot: 2019\/01\/01-2020\/04\/03')\nfig.show()","13a6fab0":"for ticker in tickers:\n    sns.distplot(returns[ticker], hist=False, label=ticker, axlabel=\"Return\")\nplt.title(\"Return's Distribution: 2019\/01\/01-2020\/04\/03\")\nplt.ylabel('Observations')\n","571c9910":"   \nclose = pd.DataFrame(companies_stocks.xs(key='Close', axis=1, level=1), companies_stocks.index, tickers)\nfig1 = close.iplot(asFigure=True, xTitle=\"Date\",\n                   yTitle=\"Close Price\", title=\"Close by Date\")\nfig1.show()","f4386e70":"\nWIX19close = pd.DataFrame()\nWIX19close['Close'] = (close['WIX'].loc['2019':])\nWIX19close['average-30-day'] = None\nfor i in range(30, len(WIX19close)):\n    WIX19close['average-30-day'].iloc[i] = WIX19close['Close'].iloc[i - 30:i].mean()\n\nfig2 = WIX19close.iplot(asFigure=True, xTitle=\"Date\",\n                        yTitle=\"Close\", title=\"WIX: Close by Date\")\nfig2.show()","dc1e65f4":"\nsns.clustermap(close['2019':].corr(), cmap='coolwarm', linewidths=3, linecolor='black', annot=True)\nplt.title('Correlation Since 01\/01\/2019', loc='center')\n\nplt.tight_layout()\nplt.show()","465fa975":"WIX SINCE 2019 WITH MOVING AVERAGE","df66ea9d":"Cheak the head of the stokes dataframe","76c54205":"Find max and min close price throughout the time period? ","d707d389":"COMPANIES RELATIONSHIPS","620b23fd":"Elbit's safe stock is characterized by a narrow distribution ","6562bd3d":"# **Data**\nWe will  will get stock information for the following companies:\n\n* WIX\n* Cellcom\n* Elbit\n* Teva\n* Delek","3c6ec4b1":"Plot returns boxplot and distribution plot","f6f080e8":"ANALIZE CLOSE GATE"}}