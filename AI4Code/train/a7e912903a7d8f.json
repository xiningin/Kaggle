{"cell_type":{"b3f7dc46":"code","d5e5a3f8":"code","2bc7f151":"code","90761a93":"code","9c14551c":"code","5fec263a":"code","2ce3d9c8":"code","e86747a2":"code","174e8146":"code","4f72d257":"code","7edf39ee":"code","32e53013":"code","c7fe0821":"code","a2e1eb6f":"code","2b3dd413":"code","16fd4ecc":"code","8988cabe":"code","12362d11":"code","84bd9d25":"code","bfaeb678":"code","98637b87":"code","6153e674":"markdown","bfeb3a04":"markdown","bd31445b":"markdown","f9553ae4":"markdown"},"source":{"b3f7dc46":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n        \n#load data :\nfile_path = \"..\/input\/hotel-booking-demand\/hotel_bookings.csv\"\ndata = pd.read_csv(file_path)","d5e5a3f8":"data.sample(5)","2bc7f151":"data.columns","90761a93":"data.shape","9c14551c":"data.info()","5fec263a":"data.describe()","2ce3d9c8":"data.isnull().sum()","e86747a2":"null_cols={}\nfor i in data.columns:\n    if data[i].isnull().sum()>0:\n        null_cols[i]=data[i].isnull().sum()\n\n        \nnull_cols","174e8146":"# so as the count of null values in company column is huge so better to drop it\ndata.drop('company',axis=1,inplace=True)\ndata.shape","4f72d257":"# the next is agent with big number of null values in it.\ndata['agent'].unique()","7edf39ee":"data['agent'].mean()","32e53013":"# we will replace the nans with mean.\ndata['agent'].fillna(value= data['agent'].mean(),inplace=True)\ndata['agent'].isnull().sum()","c7fe0821":"data.dropna(how='any',inplace=True)","a2e1eb6f":"# Removed or replaces all null values\ndata.isnull().sum()","2b3dd413":"# for sake of clearity manually check the data with some damaged data value(e.g. '?',etc)\n\nfor i in data.columns:\n    print(i+' -> \\n',data[i].unique())\n    print('\\n','-_'*25)","16fd4ecc":"fig,axes = plt.subplots(1,1,figsize=(10,7))\nsns.heatmap(data.corr())\nplt.show()","8988cabe":"num_cols = []\ncat_cols = []\nfor i in data.columns:\n    if data[i].dtypes == 'int64' or type(i)=='float64':\n        num_cols.append(i)\n    else:\n        cat_cols.append(i)\nprint(\"-\"*50)\nprint(\"NUMERICAL DATA -> \\n\",num_cols)\nprint(\"-\"*50)\nprint(\"CATEGORICAL DATA -> \\n\",cat_cols)","12362d11":"data[num_cols].describe()","84bd9d25":"fig,axes = plt.subplots(1,1,figsize=(10,7))\nsns.heatmap(data[num_cols].corr())\nplt.show()","bfaeb678":"fig,axes = plt.subplots(2,2,figsize=(14,5))\nfig.suptitle('Visualization of canceled bookings in different periods', fontsize=16)\nsns.barplot(data['arrival_date_year'],data['is_canceled'],ax=axes[0,0])\nsns.barplot(data['arrival_date_day_of_month'],data['is_canceled'],ax=axes[0,1])\nsns.barplot(data['arrival_date_week_number'],data['is_canceled'],ax=axes[1,0])\nsns.barplot(data['lead_time'],data['is_canceled'],ax=axes[1,1])\nplt.show()","98637b87":"fig,axes = plt.subplots(3,2,figsize=(18,12))\nfig.suptitle('This is visualization of the pattern of \"Repeated Guests\" ', fontsize=16)\nsns.barplot(data['stays_in_week_nights'],data['is_repeated_guest'],ax=axes[0,0])\nsns.barplot(data['stays_in_weekend_nights'],data['is_repeated_guest'],ax=axes[0,1])\nsns.barplot(data['previous_cancellations'],data['is_repeated_guest'],ax=axes[1,0])\nsns.barplot(data['previous_bookings_not_canceled'],data['is_repeated_guest'],ax=axes[1,1])\nsns.barplot(data['required_car_parking_spaces'],data['is_repeated_guest'],ax=axes[2,0])\nsns.barplot(data['total_of_special_requests'],data['is_repeated_guest'],ax=axes[2,1])\nplt.show()","6153e674":"## 3. Check for Missing values","bfeb3a04":"## 4. Data Visualization ","bd31445b":"## 2. Basic insights of data","f9553ae4":"## 1. Import libraries and read files "}}