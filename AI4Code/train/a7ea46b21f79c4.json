{"cell_type":{"c00945ae":"code","5b94992d":"code","9cc409ed":"code","dac627d1":"code","cd78923a":"code","7e26a361":"code","689fac68":"code","3df67346":"code","d1fc0238":"code","e0917615":"code","36b8663e":"code","83a885e8":"code","55da4b63":"code","7e2dbbf9":"code","19e22a73":"code","db97d168":"code","461b0117":"code","c9b8edc6":"code","c3c897b5":"code","ef1bead9":"code","ce124031":"code","8c818363":"code","49fd95c8":"code","640c6248":"code","ae789c6e":"code","7e86c047":"code","48b5805c":"code","8056d09c":"code","4486f3c9":"code","527073df":"markdown","babe5235":"markdown","c35811f5":"markdown","f49ee2bd":"markdown","caf0a63e":"markdown","cfc0af72":"markdown","73b0b069":"markdown","b9ad9166":"markdown","dc71ebc9":"markdown","f0b39223":"markdown","6dc13c7c":"markdown","8eedb785":"markdown","e7a10b18":"markdown","8d1bc8bf":"markdown","46586c11":"markdown","b6c6794f":"markdown","f6d058a3":"markdown","6aa48e77":"markdown","861a81d8":"markdown","1e01545d":"markdown","c188ff33":"markdown","446c2aa7":"markdown","fa43a5ef":"markdown","1e8deca5":"markdown","a615548d":"markdown","304bc2dd":"markdown","0dd3d437":"markdown"},"source":{"c00945ae":"!pip install plotly","5b94992d":"# system libraries\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter(action='ignore', category=FutureWarning)\nimport logging\nlogging.disable(logging.CRITICAL)\nimport gc\n\n# data manipulation libraries\nimport pandas as pd\nimport numpy as np\n\n# graphical libraries\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\n\nfrom functools import reduce\nfrom datetime import datetime\nimport time","9cc409ed":"dtype_dict ={\"open\" : \"float16\",\n             \"close\" : \"float16\",\n             \"high\" : \"float16\",\n             \"low\" : \"float16\",\n             \"volume\" : \"float16\",\n             \"vwap\" : \"float16\",\n             \"target\" : \"float16\"}","dac627d1":"def crypto_df(asset_id, data):\n    # Copied from https:\/\/www.kaggle.com\/odins0n\/g-research-plots-eda\n    df = data[data[\"asset_name\"] == asset_id].reset_index(drop=True)\n    df['timestamp'] = pd.to_datetime(df['timestamp'], unit='s')\n    df = df.set_index('timestamp')\n    return df\n\n\ndef candelstick_chart(data, title):\n    # Copied from https:\/\/www.kaggle.com\/odins0n\/g-research-plots-eda\n    candlestick = go.Figure(data=[go.Candlestick(x=data.index,\n                                                 open=data[('open')],\n                                                 high=data[('high')],\n                                                 low=data[('low')],\n                                                 close=data[('close')])])\n    candlestick.update_xaxes(title_text='Time',\n                             rangeslider_visible=False)\n\n    candlestick.update_layout(\n        title={\n            'text': '{:} Candelstick Chart'.format(title),\n            'y': 0.90,\n            'x': 0.5,\n            'xanchor': 'center',\n            'yanchor': 'top'})\n\n    candlestick.update_yaxes(title_text='Price in USD', ticksuffix='$')\n    return candlestick\n\n\ndef vol_traded(data, title, color):\n    # Copied from https:\/\/www.kaggle.com\/odins0n\/g-research-plots-eda\n    area = px.area(data_frame=data,\n                   x=data.index,\n                   y=\"volume\")\n    area.update_traces(line_color=color)\n    area.update_xaxes(\n        title_text='Time',\n        rangeslider_visible=False)\n    area.update_yaxes(title_text='Number of trades every minute')\n    area.update_layout(showlegend=True,\n                       title={\n                           'text': '{:} Volume Traded'.format(title),\n                           'y': 0.94,\n                           'x': 0.5,\n                           'xanchor': 'center',\n                           'yanchor': 'top'})\n    return area","cd78923a":"# Importing datasets\n\ndf = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/train.csv\", dtype=dtype_dict)\ndf_sup = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/supplemental_train.csv\", dtype=dtype_dict)\nasset = pd.read_csv(\"..\/input\/g-research-crypto-forecasting\/asset_details.csv\")\ndf.head()","7e26a361":"df.shape","689fac68":"# Creating an unique df with data\ndf = df.append(df_sup,\n               ignore_index=True,\n               verify_integrity=True)","3df67346":"df.shape","d1fc0238":"# Merging dataset to obtain name of each cryptocurrency\ndf = pd.merge(df, asset, on=\"Asset_ID\")\ndf = df[[\"timestamp\", \"Asset_Name\", \"Count\",\n         \"Open\", \"High\", \"Low\",\n         \"Close\", \"Volume\", \"VWAP\",\n         \"Target\"]]\ndf.columns = [\"timestamp\", \"asset_name\", \"count\",\n              \"open\", \"high\", \"low\",\n              \"close\", \"volume\", \"vwap\",\n              \"target\"]\ndf.head()","e0917615":"# Missing values exploration\ndf.isnull().mean() * 100","36b8663e":"# Deleting missing data\ndf.dropna(inplace=True)","83a885e8":"btc = crypto_df(\"Bitcoin\", data=df)\neth = crypto_df(\"Ethereum\", data=df)\niota = crypto_df(\"IOTA\", data=df)","55da4b63":"btc_plot = candelstick_chart(btc[-120:], title=\"Bitcoin\")\nbtc_plot.show()","7e2dbbf9":"eth_plot = candelstick_chart(eth[-120:], title=\"Ethereum\")\neth_plot.show()","19e22a73":"iota_plot = candelstick_chart(iota[-120:], title=\"IOTA\")\niota_plot.show()","db97d168":"vol_traded(btc[-60:], \"Bitcoin\", color=\"Blue\")","461b0117":"vol_traded(eth[-60:], \"Ethereum\", color=\"Green\")","c9b8edc6":"vol_traded(iota[-60:], \"IOTA\", color=\"Green\")","c3c897b5":"df.groupby(\"asset_name\").mean()","ef1bead9":"df.groupby(\"asset_name\").median()","ce124031":"df.groupby(\"asset_name\").std()","8c818363":"df_close = df.copy()\ndf_close = df_close[[\"timestamp\", \"asset_name\", \"close\"]]\ndf_close[\"timestamp\"] = df_close[\"timestamp\"].apply(\n    lambda x: datetime.fromtimestamp(x))\ndf_close[\"date\"] = df_close[\"timestamp\"].astype('datetime64[s]')\ndf_close.set_index(\"date\", inplace=True)\ndf_close.drop(\"timestamp\", axis=1, inplace=True)\ndf_close = df_close[[\"asset_name\", \"close\"]]\ndf_close[\"close\"] = df_close[\"close\"].apply(lambda x: np.log(x))","49fd95c8":"df_close_2021 = df_close.loc['01\/01\/2021':'01\/06\/2021']\ndf_close_2021.reset_index(inplace=True)\ndf_close_2021 = pd.pivot_table(\n    df_close_2021, values=\"close\", columns=\"asset_name\", index=\"date\")","640c6248":"plt.figure(figsize=(15, 15))\nsns.heatmap(df_close_2021.diff().corr(),\n            linewidths=.5,\n            annot=True,\n            square=True,\n            cmap=\"viridis\")\nplt.xlabel(\"Asset Name\")\nplt.ylabel(\"Asset Name\")\nplt.title(\"Correlation matrix between each cryptocurrency during the first semester (2021)\")\nplt.show()","ae789c6e":"del df_close\ndel df_close_2021\ngc.collect()","7e86c047":"dataset = [btc, eth, iota]\n\n\ncols = ['open', 'close', \"high\", \"low\"]\n\nfor i in dataset:\n    for j in cols:\n        i[\"log_\"+j] = i[j].apply(lambda x: np.log(x))","48b5805c":"for i in dataset:\n    i[\"H-L\"] = i[\"log_high\"] - i[\"log_low\"]\n    i[\"O-C\"] = i[\"log_open\"] - i[\"log_close\"]\n    i[\"MA_7d\"] = i[\"log_close\"].rolling(10080).mean()\n    i[\"MA_14d\"] = i[\"log_close\"].rolling(20160).mean()\n    i[\"MA_21d\"] = i[\"log_close\"].rolling(30240).mean()\n    i[\"STD_7d\"] = i[\"log_close\"].rolling(10080).std()","8056d09c":"data = btc.append(eth)\ndata = data.append(iota)","4486f3c9":"data.tail(3)","527073df":"Only 3% of data is missing in the target column. Choice was taken to drop these data. ","babe5235":"Second visualisation is about volume traded during the last 60 minutes. ","c35811f5":"__Datasets__","f49ee2bd":"Cryptocurrencies are very popular but have the disavantage to be more volatile than classical stock prices. The first cryptocurrency, Bitcoin, was created in 2008 by Satoshi Nakamoto. Bitcoin is created as a decentralized system based on the blockchain technology. However, in the next years, creation of many other cryptocurrencies has been exploded. The expansion and democratization of these methods have opened new horizons for stock market. \n\nIn this Kaggle competition, the aim is to predict trends about cryptocurrencies by using the most well-knowledge currencies. It is important to keep in mind that forecasting stock market is a hard task and thus, forecasting trends in cryptocurrencies is harder. ","caf0a63e":"1. Stock High minus Low price (H-L)\n2. Stock Close minus Open price (O-C)\n3. Stock price\u2019s seven days\u2019 moving average (7 DAYS MA)\n4. Stock price\u2019s fourteen days\u2019 moving average (14 DAYS MA)\n5. Stock price\u2019s twenty one days\u2019 moving average (21 DAYS MA)\n6. Stock price\u2019s standard deviation for the past seven days (7 DAYS STD DEV)","cfc0af72":"## 1) Preprocessing","73b0b069":"- Bitcoin","b9ad9166":"In this competition, 5 files are available : \n- A first train set,\n- A supplementary train set,\n- An asset set with information about cryptocurrencies,\n- An example test,\n- An example test submission.","dc71ebc9":"Visually, we can conclude that some currencies are more stable than others. The ups and downs seems to follow the same series but the amplitude are variable. For instance, IOTA shows great difference between the parameters ohlc.","f0b39223":"Only three datasets (*the two train sets & the asset set*) were used in this exploration. ","6dc13c7c":"### a) Candlestick representation","8eedb785":"- Ethereum","e7a10b18":"- Variables from *Vijha et al. 2020*","8d1bc8bf":"In this part, data will be visualised with the help of candlestick graphs. This kind of graph is used to see information about open, close, high and low values of a currency during a certain period of time. Here, the last 120 minutes were reprensented.\nTo realize the graph, a dataframe for each currency was created. Then, Plotly library was used to displayed the graphs.","46586c11":"- IOTA","b6c6794f":"- IOTA","f6d058a3":"Columns of the dataset :\n* timestamp - A timestamp for the minute covered by the row.\n* Asset_ID - An ID code for the cryptoasset.\n* Count - The number of trades that took place this minute.\n* Open - The USD price at the beginning of the minute.\n* High - The highest USD price during the minute.\n* Low - The lowest USD price during the minute.\n* Close - The USD price at the end of the minute.\n* Volume - The number of cryptoasset units traded during the minute.\n* VWAP - The volume weighted average price for the minute.\n* Target - 15 minute residualized returns.","6aa48e77":"## 3) Features Engineering","861a81d8":"# G-Research Crypto Forecasting","1e01545d":"### d) Correlation between cryptocurrencies","c188ff33":"### b) Volume exchange","446c2aa7":"## 2) Exploratory Analysis","fa43a5ef":"__Configuration and Utils__","1e8deca5":"### c) Central tendency analysis","a615548d":"- Bitcoin","304bc2dd":"Target column contains values to predict ([Information about target calculus](https:\/\/www.kaggle.com\/cstein06\/tutorial-to-the-g-research-crypto-competition?cellIds=49&kernelSessionId=78721864)). ","0dd3d437":"- Ethereum"}}