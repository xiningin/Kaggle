{"cell_type":{"bf81d53c":"code","c83422ae":"code","e14f06e1":"code","5de041e2":"code","47ce8706":"code","6764fcc8":"code","236fcb6a":"code","db28f00f":"code","03165da4":"code","85e35013":"code","2b002cc8":"code","915832e9":"code","2bca0c53":"code","fea4c692":"code","cee8e0d1":"code","6a2409e8":"code","2c888cff":"code","0ac8886e":"code","d3f32c69":"code","30fa2af3":"markdown","5e289f86":"markdown","5fb78bdd":"markdown","1f69b961":"markdown"},"source":{"bf81d53c":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","c83422ae":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport seaborn as sns\n%matplotlib inline\nsns.set()","e14f06e1":"stats = pd.read_csv('\/kaggle\/input\/201819-nba-players-stats\/2018-19 NBA Players Stats.csv')\nstats.head()","5de041e2":"stats.shape","47ce8706":"stats.describe()","6764fcc8":"drop = ['PLAYER','TEAM','AGE','GP','W','L','MIN']\nstats_train = stats.drop(columns=drop)\nstats_train.head()","236fcb6a":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nstats_scaled=pd.DataFrame(scaler.fit_transform(stats_train))\nstats_scaled.columns=stats_train.columns","db28f00f":"from sklearn.decomposition import PCA\nn_components=stats_train.shape[1]\npca = PCA(n_components=n_components, random_state=123)\npca.fit(stats_scaled)","03165da4":"explained_variance_ratio = pca.explained_variance_ratio_ \ncum_explained_variance_ratio = np.cumsum(pca.explained_variance_ratio_)\nlst = []\nfor i in range (0, n_components):\n    lst.append([i+1, round(explained_variance_ratio[i],6), cum_explained_variance_ratio[i]])\n\npca_predictor = pd.DataFrame(lst)\npca_predictor.columns = ['Component', 'Explained Variance', 'Cumulative Explained Variance']\npca_predictor","85e35013":"plt.subplots(figsize=(10,8))\n\nplt.bar(pca_predictor['Component'],pca_predictor['Explained Variance'], align='center', alpha=0.5, \n       label='individual explained variance')\nplt.step(pca_predictor['Component'],pca_predictor['Cumulative Explained Variance'], where='mid',\n         label='cumulative explained variance')\nplt.xlabel('Principal components')\nplt.ylabel('Explained variance ratio');\nplt.legend(loc='best')","2b002cc8":"pca = PCA(n_components=10)\npca.fit(stats_scaled)","915832e9":"stats_transformed = pca.fit_transform(stats_scaled)\nstats_transformed.shape","2bca0c53":"from sklearn.cluster import KMeans\n\nn_clusters = 8\nkmeans = KMeans(n_clusters=n_clusters, random_state=123)\nkmeans.fit(stats_transformed)","fea4c692":"cluster_labels = kmeans.labels_\nstats['cluster'] = cluster_labels","cee8e0d1":"ax=plt.subplots(figsize=(10,5))\nax=sns.countplot(cluster_labels)\ntitle=\"Histogram of Cluster Counts\"\nax.set_title(title, fontsize=12)\nplt.show()","6a2409e8":"def cluster_stats(columns):\n    output = pd.DataFrame({'cluster':[ i for i in range(n_clusters)]})\n    for column in columns:\n        lst = []\n        for i in range(n_clusters):\n            mean = stats[stats['cluster'] == i].describe()[column]['mean']\n            lst.append([i, round(mean,2)])\n        df = pd.DataFrame(lst)\n        df.columns = ['cluster', column]\n        output = pd.merge(output, df, on='cluster', how='outer')\n    return output","2c888cff":"columns = stats_train.columns\ncluster_stats(columns)","0ac8886e":"# starter center \nstats[stats['cluster']==4]","d3f32c69":"# starter guard \nstats[stats['cluster']==7]","30fa2af3":"## PCA","5e289f86":"## Comparison of clusters' stats","5fb78bdd":"## Load and clean data","1f69b961":"## K-Means"}}