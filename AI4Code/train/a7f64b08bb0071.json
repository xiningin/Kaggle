{"cell_type":{"20ea3f14":"code","6abc6ae9":"code","af565cf2":"code","ba0bc268":"code","3918e112":"code","0411ce94":"code","09c17c08":"code","8c232b09":"code","94e0d733":"code","d5e09482":"code","05cff530":"code","15bdd9f0":"code","ec9c364a":"markdown","f1330fb5":"markdown","aa055228":"markdown","6e3c569e":"markdown"},"source":{"20ea3f14":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6abc6ae9":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","af565cf2":"data = pd.read_csv(\"..\/input\/used-car-dataset-ford-and-mercedes\/bmw.csv\")\ndata.head()","ba0bc268":"data.shape","3918e112":"data.info()","0411ce94":"data.describe()","09c17c08":"as we can see above, mileage has some outlier values.<br>\nnow we will check for missing values in the dataset.","8c232b09":"missing = [feature for feature in data.columns if data[feature].isna().sum() > 0]\nmissing","94e0d733":"categorical_var = [feature for feature in data.columns if data[feature].dtype == 'O' ]\ncategorical_var","d5e09482":"numerical_var = [feature for feature in data.columns if data[feature].dtype != 'O' and \"year\" not in feature]\nnumerical_var","05cff530":"for feature in categorical_var:\n    df = data.copy()\n    \n    df.groupby(feature)[\"price\"].mean().plot.bar()\n    plt.xlabel(feature)\n    plt.ylabel(\"Price\")\n    plt.show()","15bdd9f0":"for feature in numerical_var:\n    df = data.copy()\n    \n    df.groupby(feature)[\"price\"].mean().plot.hist()\n    plt.xlabel(feature)\n    plt.ylabel(\"Price\")\n    plt.show()","ec9c364a":"9we can see above that mileage and mpg has right screwed data.","f1330fb5":"now we will seperate categorical variable and numerical variable and then we will find relationship with the target varible price.","aa055228":"here we clearly see that x7 has highestr price value followed by 8 series , M5 and i8.<br>\nalso semi-Auto transimission has higher value then automatic and manual car.<br>\nfurther more Hybride fuel type has highets price values somewhere around 26000.","6e3c569e":"as we can see here this dataset dosent have any missing value."}}