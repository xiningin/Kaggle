{"cell_type":{"2c9a4481":"code","2d285d82":"code","b74cf8bc":"code","2e6a2c81":"code","173be7b3":"code","fc54ea43":"code","95239a7d":"code","78438def":"code","f0d8aca5":"code","b310d069":"code","341df07c":"code","23cc7147":"code","e224f01a":"code","9baeed0b":"code","93a24531":"code","35781c66":"code","ead5a444":"code","e0841b9c":"code","6a80dd68":"code","ebd9b961":"code","ffa5d688":"code","ff518607":"code","4209ef00":"code","3e0450a7":"code","48007556":"code","548082cd":"code","badece9a":"code","36c91b27":"markdown","65428b45":"markdown","355c6d5c":"markdown","00f56994":"markdown","144f8f6a":"markdown","fd8a50dc":"markdown","c603a3bf":"markdown","21a83339":"markdown"},"source":{"2c9a4481":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","2d285d82":"train=pd.read_csv('..\/input\/titanic\/train.csv')","b74cf8bc":"train.corr()","2e6a2c81":"train.describe","173be7b3":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.countplot(x='SibSp',hue=\"Survived\",data=train)\nplt.legend(loc=\"upper right\",title=\"Survived ~ Sibsp\")","fc54ea43":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.countplot(x='Parch',hue=\"Survived\",data=train)\nplt.legend(loc=\"upper right\",title=\"Survived ~ Parch\")","95239a7d":"import matplotlib.pyplot as plt\nimport seaborn as sns\nsns.countplot(x='Embarked',hue=\"Survived\",data=train)\nplt.legend(loc=\"upper right\",title=\"Survived ~ Embarked\")","78438def":"sns.distplot(train[train['Survived'] == 0].Fare, kde=False,rug=False)\nsns.distplot(train[train['Survived'] == 1].Fare, kde=False,rug=False)","f0d8aca5":"train.isnull().sum()","b310d069":"train.Age.median()","341df07c":"train.drop(['PassengerId','Name','Cabin','Ticket'], axis=1, inplace=True)\ntrain[\"Age\"].fillna(train[\"Age\"].median(skipna=True), inplace=True)\ntrain[\"Embarked\"].fillna(train['Embarked'].value_counts().idxmax(), inplace=True)","23cc7147":"train['Alone']=np.where((train[\"SibSp\"]+train[\"Parch\"])>0,0,1)\ntrain.drop(['SibSp','Parch'],axis=1,inplace=True)","e224f01a":"train[['Pclass','Embarked','Sex']]","9baeed0b":"pd.get_dummies(train['Sex'])","93a24531":"training=pd.get_dummies(train,columns=[\"Pclass\",\"Embarked\",\"Sex\"],drop_first=True)\ntraining","35781c66":"training.dtypes","ead5a444":"from sklearn.preprocessing import StandardScaler\ntrain_standard=StandardScaler()\ntrain_copied=training.copy()\ntrain_standard.fit(train_copied[['Age','Fare']])\ntrain_std=pd.DataFrame(train_standard.transform(train_copied[['Age','Fare']]))\ntrain_std","e0841b9c":"training[['Age','Fare'] ]=train_std\ntraining","6a80dd68":"from sklearn.linear_model import LogisticRegression\ncols=[\"Age\",\"Fare\",\"Alone\",\"Pclass_2\",\"Pclass_2\",\"Embarked_Q\",\"Embarked_S\",\"Sex_male\"] \nX=training[cols]\ny=training['Survived']\n# Build a logreg and compute the feature importances\nmodel=LogisticRegression()\n# create the RFE model and select 8 attributes\nmodel.fit(X,y)","ebd9b961":"from sklearn.metrics import accuracy_score\ntrain_predicted=model.predict(X)\naccuracy_score(train_predicted, y)","ffa5d688":"test=pd.read_csv('..\/input\/titanic\/test.csv')\ntest.isnull().sum()","ff518607":"test.drop(['PassengerId','Name','Cabin','Ticket'],axis=1,inplace=True)\ntest[\"Age\"].fillna(28,inplace=True)\ntest[\"Embarked\"].fillna(test['Embarked'].value_counts().idxmax(),inplace=True)\ntest[\"Fare\"].fillna(train.Fare.median(),inplace=True)\ntest['Alone']=np.where((test[\"SibSp\"]+test[\"Parch\"])>0,0,1)\ntest.drop(['SibSp','Parch'],axis=1,inplace=True)\ntesting=pd.get_dummies(test,columns=[\"Pclass\",\"Embarked\",\"Sex\"],drop_first=True)\ntesting.dtypes","4209ef00":"train_standard","3e0450a7":"test_copied=testing.copy()\ntest_std=train_standard.transform(test_copied[['Age','Fare']])\ntest_std\ntesting[['Age','Fare']]=test_std\ntesting","48007556":"X_test=testing[cols]\nX_test.dtypes\ntest_predicted=model.predict(X_test)","548082cd":"test_predicted","badece9a":"sub=pd.read_csv('..\/input\/titanic\/gender_submission.csv')\nsub['Survived']=list(map(int,test_predicted))\nsub.to_csv('submission.csv',index=False)","36c91b27":"## \u30c0\u30df\u30fc\u5909\u6570\u306e\u4f5c\u6210","65428b45":"## \u7279\u5fb4\u91cf\u3092\u78ba\u8a8d\u3059\u308b","355c6d5c":"## Submission\u30c7\u30fc\u30bf\u306e\u7528\u610f","00f56994":"## \u6b20\u640d\u5024\u306e\u78ba\u8a8d","144f8f6a":"## \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u30b9\u56de\u5e30","fd8a50dc":"### \u6a19\u6e96\u5316","c603a3bf":"### \u65b0\u3057\u3044\u7279\u5fb4\u91cf\u306e\u8ffd\u52a0","21a83339":"## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406"}}