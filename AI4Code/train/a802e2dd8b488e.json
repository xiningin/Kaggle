{"cell_type":{"01f1d500":"code","618e1bab":"code","87305a3c":"code","e4cde4a0":"code","5f963229":"code","80dc567c":"code","d3f58b74":"code","374bfbfb":"code","e7681588":"code","e5c42c33":"code","54bb2828":"code","44d7f888":"code","9024543e":"code","714d2bf6":"code","7f041944":"code","8af8cc3d":"code","c0a7edbf":"code","2a8c881f":"code","fd525366":"code","67085686":"code","52edcc1b":"code","bc9c7d42":"code","a179f77b":"code","12571bf3":"code","17d1178e":"code","bc3348ba":"code","3e8c2289":"code","e1ef14b5":"code","2809c9c7":"code","e9bc805d":"code","0a677c50":"code","90d44c41":"markdown","80574840":"markdown","4e0e064d":"markdown","718a8549":"markdown","6309a2b9":"markdown","1360a4ab":"markdown","559fcd7f":"markdown","84da473f":"markdown","05b79902":"markdown","8504e1d2":"markdown","ee15dea7":"markdown","93f479ad":"markdown","9445177d":"markdown","9f7cc96e":"markdown","748fd1bc":"markdown","21e19824":"markdown","0b6f50ca":"markdown","78438f2b":"markdown","4cc57689":"markdown","733eac32":"markdown","be065d04":"markdown","e26137be":"markdown","d3a48499":"markdown","eadaddaf":"markdown","46e44f85":"markdown"},"source":{"01f1d500":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","618e1bab":"data=pd.read_csv(\"\/kaggle\/input\/bank-marketing-dataset\/bank.csv\")\ndata.head()","87305a3c":"data.describe()","e4cde4a0":"from sklearn import preprocessing\nle = preprocessing.LabelEncoder()\ndata[\"deposit_numeric\"]=le.fit_transform(data[\"deposit\"])","5f963229":"data[[\"balance\",\"deposit_numeric\"]].corr()","80dc567c":"data_new=data[(data[\"balance\"]>122) & (data[\"balance\"]>2000)]\ndata_new[[\"balance\",\"deposit_numeric\"]].corr()","d3f58b74":"data_new=data[(data[\"balance\"]<-100)]\ndata_new[\"deposit\"].value_counts()","374bfbfb":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15,12))\nsns.relplot(data=data,x=\"age\",y=\"balance\",hue=\"deposit\")","e7681588":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15,12))\nsns.relplot(data=data,x=\"balance\",y=\"campaign\",hue=\"deposit\")","e5c42c33":"plt.figure(figsize=(20,16))\nsns.heatmap(data.corr(),annot=True)","54bb2828":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15,12))\nsns.relplot(data=data,x=\"balance\",y=\"duration\",hue=\"deposit\")","44d7f888":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(15,12))\nsns.relplot(data=data,x=\"age\",y=\"duration\",hue=\"deposit\")","9024543e":"x=data[[\"age\",\"duration\",\"balance\"]]\ny=data[\"deposit_numeric\"]\n\nfrom sklearn.naive_bayes import GaussianNB\nnaive_bayes=GaussianNB()\nfrom sklearn.model_selection import cross_val_score\nscores_naive = cross_val_score(naive_bayes, x, y, cv=10)\nprint(\"Naive Bayes\")\nscores_naive","714d2bf6":"from catboost import CatBoostClassifier\n\n\ncatb = CatBoostClassifier(iterations=1000,verbose=0)\n\nscores_catb = cross_val_score(catb, x, y, cv=10)\nprint(\"Catboost\")\nprint(scores_catb)","7f041944":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(iterations=1000,verbose=0)\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","8af8cc3d":"\nx_full=data.iloc[:,0:16]\nxfull_train, xfull_test, y_train, y_test = train_test_split(x_full, y, test_size=0.25, random_state=142)\n\ncategorical_features_indices = np.where(x_full.dtypes != np.float)[0]\n\ncatb = CatBoostClassifier(iterations=1000,verbose=0,cat_features=categorical_features_indices)\n\ncatb.fit(xfull_train,y_train)\nypred=catb.predict(xfull_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","c0a7edbf":"\n\ncatb = CatBoostClassifier(verbose=0,cat_features=categorical_features_indices)\n\ncatb.fit(xfull_train,y_train)\nypred=catb.predict(xfull_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","2a8c881f":"data","fd525366":"x=data[[\"age\",\"duration\",\"balance\",\"marital\",\"loan\"]]\ny=data[\"deposit_numeric\"]\n\n\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4])\n\nscores_catb = cross_val_score(catb, x, y, cv=10)\nprint(\"Catboost\")\nprint(scores_catb)","67085686":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","52edcc1b":"x=data[[\"age\",\"duration\",\"balance\",\"marital\",\"loan\",\"job\"]]\ny=data[\"deposit_numeric\"]\n\n\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4,5])\n\nscores_catb = cross_val_score(catb, x, y, cv=10)\nprint(\"Catboost\")\nprint(scores_catb)","bc9c7d42":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4,5])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","a179f77b":"x=data[[\"age\",\"duration\",\"balance\",\"job\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","12571bf3":"x=data[[\"age\",\"duration\",\"balance\",\"job\",\"education\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","17d1178e":"x=data[[\"age\",\"duration\",\"balance\",\"job\",\"education\",\"housing\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4,5])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","bc3348ba":"x=data[[\"age\",\"duration\",\"balance\",\"job\",\"education\",\"housing\",\"marital\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[3,4,5,6])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","3e8c2289":"x=data[[\"age\",\"duration\",\"balance\",\"campaign\",\"job\",\"education\",\"housing\",\"marital\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[4,5,6,7])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","e1ef14b5":"importances=catb.get_feature_importance()\nfeatures=[\"age\",\"duration\",\"balance\",\"campaign\",\"job\",\"education\",\"housing\",\"marital\"]\nfor i in range(0,len(importances)):\n    print(features[i],\": \",importances[i])","2809c9c7":"x=data[[\"age\",\"duration\",\"balance\",\"pdays\",\"job\",\"education\",\"housing\"]]\ny=data[\"deposit_numeric\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=142)\ncatb = CatBoostClassifier(verbose=0,cat_features=[4,5,6])\n\ncatb.fit(x_train,y_train)\nypred=catb.predict(x_test)\n\nimport sklearn.metrics as metrik\nprint(metrik.confusion_matrix(y_true=y_test,y_pred=ypred))\nprint(metrik.accuracy_score(y_true=y_test,y_pred=ypred))","e9bc805d":"importances=catb.get_feature_importance()\nfeatures=x.columns\nfor i in range(0,len(importances)):\n    print(features[i],\": \",importances[i])","0a677c50":"catb.save_model(\"model7features\")","90d44c41":"Okay also can't clearly separable. ","80574840":"Campaign also not that important.","4e0e064d":"Okay this 2 is more separable than others. Hovewer it isn't perfect.","718a8549":"## Thanks for Reading :)","6309a2b9":"## Okay, Categorical variables have important informations. Add some Categorical features too our 3 feature model.","1360a4ab":"Okay can't clearly separable also with age and balance variable.","559fcd7f":"## Now Delete Marital and loan features and only use job categorical variable.","84da473f":"Okay, I think balance and deposit have strong negative correlation. ","05b79902":"Interesting correlation is weak. Maybe outlier values effect it's too much.","8504e1d2":"## Okay with these 3 feature (Age, Balance and Duration) we will have good results. ","ee15dea7":"Add marital status and loan effected most I think.","93f479ad":"## Pdays also an important column. Duration and Pdays is the most important features. Also with these 7 features we %81.5 accuracy. \u0130t is better than I expected. This model is usable enough.","9445177d":"With all features. Accuracy is %85 and confusion matrix also looks just fine. ","9f7cc96e":"Okay naive bayes's result is not stable. Naive Bayes can't work fine with bigger datasets.","748fd1bc":"Slightly better maybe job is the most important categorical features.","21e19824":"## Even Smaller. Maybe if balance is negative all say yes to deposit.","0b6f50ca":"Worst better than naive bayes but also not that great. Okay we see classical train test split result.","78438f2b":"## Duration is the most important featues. First five feature leads all features. Job is more important than education and marital.","4cc57689":"Okay now we see all correlations.","733eac32":"Now we add education.","be065d04":"## Okay what about balance with age?","e26137be":"## With all the features:","d3a48499":"Okay only 3 feature and result is fine. Accuracy is %75.","eadaddaf":"Deposit numeric has strong correlation with duration it's interesting. ","46e44f85":"Okay we see more clear observation. \u0130f balance is negative it's more likely to say no to deposit. "}}