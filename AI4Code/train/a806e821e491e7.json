{"cell_type":{"4408c789":"code","a3d20d6f":"code","0dd8fc03":"code","2470e924":"code","9aa5579d":"code","7609f651":"code","8cfc5e6e":"code","f71b5283":"code","42cd4fd5":"code","5ec2f224":"code","68564533":"code","09a27e72":"code","fceb14d5":"code","596da08f":"code","a122ef56":"code","42f9acc9":"code","f3952c0a":"code","9b1d5c1b":"code","c92e38a3":"code","5a334b69":"code","20b4b07a":"code","99db4569":"code","fddcbc85":"code","295682b8":"code","3cd8189a":"code","18a07ee2":"markdown","1d3a3efc":"markdown","ac45e078":"markdown","40814994":"markdown"},"source":{"4408c789":"#importing libraries\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.metrics import accuracy_score,confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.preprocessing import LabelEncoder\nimport matplotlib.pyplot as plt","a3d20d6f":"#find the train and test data from the following link\ntrain_df  = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/dphi-official\/Datasets\/master\/tax_payers\/train_set_label.csv\" )\ntest_df = pd.read_csv('https:\/\/raw.githubusercontent.com\/dphi-official\/Datasets\/master\/tax_payers\/test_set_label.csv')","0dd8fc03":"#checking information about the train data\ntrain_df.info()","2470e924":"#checking information about the test data\ntest_df.info()","9aa5579d":"train_df.describe(include='all')","7609f651":"\ntest_df.describe(include='all')","8cfc5e6e":"sns.countplot(train_df['PoliticalParty'])","f71b5283":"train_df.tail()","42cd4fd5":"test_df.tail()","5ec2f224":"for i in train_df.columns[:-1]:\n    sns.distplot(train_df[i]);\n    plt.show()\n","68564533":"for i in train_df.columns[:-1]:\n    sns.relplot(x=\"HHI\", y=i, hue=\"PoliticalParty\", data=train_df);\n    plt.show()\n","09a27e72":"sns.pairplot(train_df,hue='PoliticalParty');","fceb14d5":"\nfor i in train_df.columns[:-1]:\n    sns.boxplot(x='PoliticalParty',y=i,data=train_df);\n    plt.show()","596da08f":"label_encoder = LabelEncoder() \ntrain_df['PoliticalParty']= label_encoder.fit_transform(train_df['PoliticalParty']) \ntrain_df['PoliticalParty'].unique() ","a122ef56":"X=train_df.drop(['PoliticalParty','Unnamed: 0'],axis=1)\ntest_df=test_df.drop('Unnamed: 0',axis=1)\ny=train_df['PoliticalParty']","42f9acc9":"from sklearn.feature_selection import VarianceThreshold\ndf_var = VarianceThreshold()\ndf_var.fit_transform(X)\nfor feature in zip(X.columns, df_var.variances_):\n    print(feature)","f3952c0a":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\n\nX=pd.DataFrame(scaler.fit_transform(X),columns=X.columns)\ntest_df=pd.DataFrame(scaler.fit_transform(test_df),columns=test_df.columns)","9b1d5c1b":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom numpy.random import seed\nseed(0)\nfrom sklearn.metrics import accuracy_score\nX_train,X_test,Y_train,Y_test=train_test_split(X[['HHDL','HHI','AHHAge','CollegGrads','Filed in 2017','Filed in 2016','Married']],y,test_size = 0.2,random_state=21,stratify=y)\ndt=DecisionTreeClassifier(criterion='gini',max_depth=14)\ndt.fit(X_train,Y_train)","c92e38a3":"pred=dt.predict(X_test)\ncm=confusion_matrix(Y_test,pred)\nsns.heatmap(cm,annot=True);","5a334b69":"accuracy_score(Y_test,pred)","20b4b07a":"pred=dt.predict(test_df[['HHDL','HHI','AHHAge','CollegGrads','Filed in 2017','Filed in 2016','Married']])\n#pred=tree.predict(test_df)\ndf=pd.DataFrame({\"prediction\":pred})\ndf['label']=df['prediction'].replace({0:\"Democrat\",2:\"Republican\",1:\"Independent\"})\ndf1=pd.DataFrame({\"prediction\":df['label']})\ndf1.to_csv(\"dt.csv\",index=False)\n","99db4569":"rf=RandomForestClassifier(random_state=21)\nrf.fit(X_train,Y_train)","fddcbc85":"pred=rf.predict(X_test)\ncm=confusion_matrix(Y_test,pred)\nsns.heatmap(cm,annot=True);","295682b8":"accuracy_score(Y_test,pred)","3cd8189a":"pred=rf.predict(test_df[['HHDL','HHI','AHHAge','CollegGrads','Filed in 2017','Filed in 2016','Married']])\ndf=pd.DataFrame({\"prediction\":pred})\ndf['label']=df['prediction'].replace({0:\"Democrat\",2:\"Republican\",1:\"Independent\"})\ndf1=pd.DataFrame({\"prediction\":df['label']})\ndf1.to_csv(\"rf.csv\",index=False)\n","18a07ee2":"### Exploratory Data Analysis","1d3a3efc":"### Model Building","ac45e078":"### Decision Tree Algorithm","40814994":"### Random Forest Algorithm"}}