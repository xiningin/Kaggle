{"cell_type":{"8b788148":"code","32448029":"code","174455ed":"code","7960faf2":"code","8aaa692b":"code","7f5b2884":"code","3bb888cd":"code","fc608f22":"code","6e0b9979":"code","67494faf":"code","de63bf28":"code","faeea81e":"code","f8eb8491":"code","a9d76fe6":"code","c9644a08":"code","39f51276":"code","f242cb15":"code","05507982":"code","7b33a70f":"code","2810a315":"code","b49e9b99":"code","0ef939f1":"code","90650175":"code","314ee834":"code","0ed6a812":"code","4e37bbcd":"code","f54efb0c":"code","6241a4de":"code","32c079f7":"code","f95ece50":"code","e791b66d":"code","a1721e18":"code","624758ab":"code","3168d762":"code","cf6a8e0d":"code","03ed2be4":"code","66d371ab":"markdown","dba7fd96":"markdown","8e52737f":"markdown","57160463":"markdown","03092c51":"markdown","76cd56f5":"markdown","7e766e34":"markdown","20800516":"markdown"},"source":{"8b788148":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","32448029":"df = pd.read_csv('\/kaggle\/input\/stroke-prediction-dataset\/healthcare-dataset-stroke-data.csv')\ndf","174455ed":"df.columns.tolist()     #columnslist","7960faf2":"df.info()","8aaa692b":"from sklearn import preprocessing                           #using Label Encoder\nlabel_encoder = preprocessing.LabelEncoder()\ndf['gender']= label_encoder.fit_transform(df['gender'])  \n#df['ever_married'] = label_encoder.fit_transform(df['ever_married']) \ndf['work_type']= label_encoder.fit_transform(df['work_type']) \ndf['Residence_type']= label_encoder.fit_transform(df['Residence_type']) \ndf['smoking_status']= label_encoder.fit_transform(df['smoking_status']) \ndf","7f5b2884":"df.isnull().sum()","3bb888cd":"#####################  ever_married   #################################################################################\n\n\n\nprint (df['ever_married'].describe())\nprint (df['ever_married'].unique())\nem = {'Yes': 1, 'No': 2}\ndf['ever_married'] = df['ever_married'].map(em)\ndf['ever_married']= df['ever_married'].astype(int)\nprint(df['ever_married'].dtypes)\ndf","fc608f22":"############### bmi ###########################################################################################\n\ndf['bmi'] = df['bmi'].fillna((df['bmi'].mean()))\nprint (df['bmi'].unique()) \nprint() \nprint(df['bmi'].dtypes) \ndf","6e0b9979":"df.isnull().sum()","67494faf":"df['ae'] = df['age'] * df['ever_married']\ndf","de63bf28":"df['ab'] = df['avg_glucose_level'] * df['bmi']\ndf","faeea81e":"df = df.drop(['id', 'age', 'ever_married', 'avg_glucose_level', 'bmi' ], axis = 1)       #dropping unnecessary columns\ndf","f8eb8491":"a1 = sns.boxplot(x=df['gender'])","a9d76fe6":"a2 = sns.boxplot(x=df['hypertension'])","c9644a08":"a3 = sns.boxplot(x=df['heart_disease'])","39f51276":"a4 = sns.boxplot(x=df['work_type'])","f242cb15":"a6 = sns.boxplot(x=df['Residence_type'])","05507982":"a6 = sns.boxplot(x=df['ae'])","7b33a70f":"df = df[(df['ae']<110)]\nprint(df['ae'].unique())\ndf","2810a315":"a6 = sns.boxplot(x=df['ab'])","b49e9b99":"df = df[(df['ab']<5080)]\nprint(df['ab'].unique())\ndf","0ef939f1":"a6 = sns.boxplot(x=df['Residence_type'])","90650175":"df.columns.tolist()","314ee834":"X= df.drop(['stroke'],axis=1)\ny=df['stroke']","0ed6a812":"X","4e37bbcd":"X.info()","f54efb0c":"X.isnull().sum()","6241a4de":"y","32c079f7":"from sklearn.model_selection import train_test_split     #data splitting\nX_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=20)","f95ece50":"from sklearn.preprocessing import StandardScaler  \nscaler = StandardScaler()  \nscaler.fit(X_train)  \nX_train = scaler.transform(X_train)  \n# apply same transformation to test data\nX_test = scaler.transform(X_test)  \n","e791b66d":"X_test","a1721e18":"from tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import Dropout","624758ab":"# define model\nmodel = Sequential()\n#1st hidden layer with 10 nodes, taking 11 features as input\nmodel.add(Dense(20, activation='relu', kernel_initializer='he_normal', input_shape=(8,)))\n\n#2nd hidden layer with 8 nodes\nmodel.add(Dense(10, activation='relu', kernel_initializer='he_normal'))\nmodel.add(Dense(6, activation='relu', kernel_initializer='he_normal'))\n#model.add(Dropout(0.5))\nmodel.add(BatchNormalization())\n#output layer with 1 node(neuron)\nmodel.add(Dense(1,activation='linear'))  \n\n\n# compile the model\nmodel.compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])\n\n\n\n","3168d762":"model.summary()","cf6a8e0d":"from tensorflow.keras.utils import plot_model\nplot_model(model, 'model.png', show_shapes=True)","03ed2be4":"# fit the model\nmodel.fit(X_train, y_train, epochs=50, batch_size=10, verbose=2)\n\n# evaluate the model\nloss, acc = model.evaluate(X_test, y_test, verbose=0)\nprint('Test Accuracy: %.5f' % acc)\n","66d371ab":" gender, ever_married,  work_type, Residence_type,  smoking_status","dba7fd96":"# standardization","8e52737f":"# Outliers Imputing","57160463":"# 3. PREPROCESSING","03092c51":"# Replacing Categorical data to Numerical values (Encoding)","76cd56f5":"# NAN Value to numeric value","7e766e34":"############### age #########################################################################################\n\ndf['age'] = df['age'].fillna((df['avg_glucose_level'].mean()))\ndf['age']= df['age'].astype(int)\nprint (df['age'].unique()) \nprint() \nprint(df['age'].dtypes) \ndf","20800516":"# 1.  Importing Libraries"}}