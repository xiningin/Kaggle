{"cell_type":{"10917ea8":"code","9b620151":"code","0647e06e":"code","e704cde8":"code","d7cea2e1":"code","903ba980":"code","81500e8a":"code","b04559aa":"code","509990e0":"code","00b36c82":"code","e8e4fe3a":"code","3728699f":"code","7b88afd6":"code","5d37bbbf":"code","6d800f73":"code","d558f0d9":"code","446cffe7":"code","d0bf3225":"code","f284e8e2":"code","b422afd5":"code","9eba41b1":"code","9c825f99":"code","b9329d81":"code","59e0850f":"code","7682eff6":"code","fe6df1b5":"code","bf5e4133":"code","0cbcb6ab":"code","b7e36105":"code","7fc495df":"code","4ac9d297":"code","ee4b16c2":"code","7edc23b5":"code","bf02a6fc":"code","9ce65b46":"code","b3fe01d5":"code","8b809d8a":"code","b77ff26d":"code","e4ed078e":"code","c9ddceee":"code","c52268c9":"code","dcc01052":"code","c6e90683":"code","6bad7277":"code","f55878cd":"code","199befe0":"code","d9e971a7":"code","cf4d4827":"code","f9e73eff":"code","e4692698":"markdown","fc79885f":"markdown","8208c0b5":"markdown","fd2ff330":"markdown","4fdc822f":"markdown","c375958c":"markdown","6806cda7":"markdown","752fec69":"markdown","221cb392":"markdown","a5017854":"markdown","0ee226e6":"markdown","d37bad4b":"markdown","92599353":"markdown","5714b10e":"markdown","86831de6":"markdown","ee2414cc":"markdown","f2514814":"markdown","5b11e816":"markdown","972ac510":"markdown","c47e64c1":"markdown","f469d45d":"markdown","16e49f25":"markdown","90e51211":"markdown","4faa36d8":"markdown","589cbe9d":"markdown","2fcf2c08":"markdown","b995bf8c":"markdown","6e773999":"markdown","fe247b05":"markdown","7cbb938c":"markdown","395354b6":"markdown","93664d99":"markdown","dc84298a":"markdown","67e91820":"markdown"},"source":{"10917ea8":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom sklearn.metrics import silhouette_score\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9b620151":"df = pd.read_csv('\/kaggle\/input\/german-credit\/german_credit_data.csv')\ndf.shape","0647e06e":"df.head()","e704cde8":"df.tail()","d7cea2e1":"df = df.drop(columns = 'Unnamed: 0')","903ba980":"df.info()","81500e8a":"df.describe()","b04559aa":"df.isnull().sum()","509990e0":"df['Cicil'] = df['Credit amount'] \/ df['Duration']","00b36c82":"#create correlation with heatmap\ncorr = df.corr(method = 'pearson')\n\n#convert correlation to numpy array\nmask = np.array(corr)\n\n#to mask the repetitive value for each pair\nmask[np.tril_indices_from(mask)] = False\nfig, ax = plt.subplots(figsize = (15,12))\nfig.set_size_inches(20,20)\nsns.heatmap(corr, mask = mask, vmax = 0.9, square = True, annot = True)","e8e4fe3a":"sns.pairplot(df)","3728699f":"plt.figure(figsize=(16, 6))\nsns.countplot(x='Purpose', data=df, order = df['Purpose'].value_counts().index).set_title('Jumlah dan tujuan mengambil kredit')","7b88afd6":"purpose = df.groupby(by='Purpose').mean()['Age']\npurpose_df = pd.DataFrame({'Purpose' : purpose.index, 'Age' : purpose.values.astype(int)})\nfig = px.line(purpose_df, x=\"Purpose\", y=\"Age\", title='Rata-rata umur pada setiap tujuan kredit')\nfig.show()","5d37bbbf":"df.groupby(by='Housing').mean()","6d800f73":"plt.figure(figsize=(16, 6))\nsns.distplot(df['Credit amount'], kde = True, color = 'darkblue', label = 'Credit amount').set_title('Distribution Plot of Credit amount')","d558f0d9":"df_job = df.where(df['Job']==0).dropna()\ndf_job.where(df_job['Credit amount'] >= df['Credit amount'].mean()).dropna()","446cffe7":"from sklearn.cluster import KMeans\nimport numpy as np","d0bf3225":"X = np.asarray(df[[\"Job\", \"Credit amount\", \"Duration\"]])\nX[:,0] = X[:,0] + 1\n# X[:,1] = np.log(X[:,1])\n# X[:,2] = np.log(X[:,2])\nX = np.log(X)","f284e8e2":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(X)\n    Sum_of_squared_distances.append(km.inertia_)\n\nplt.figure(figsize=(15,10))\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","b422afd5":"kmeans = KMeans(n_clusters=3)\nkmeans.fit(X)\nkmeans.labels_","9eba41b1":"ss_1 = silhouette_score(X, kmeans.labels_, metric='euclidean')","9c825f99":"fig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\nax = plt.axes(projection=\"3d\")\n\nax.scatter3D(X[:,0], X[:,1], X[:,2], c=kmeans.labels_, cmap='rainbow')\nax.scatter3D(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], kmeans.cluster_centers_[:,2], c='black')\n\nxLabel = ax.set_xlabel('Jobs', linespacing=3.2)\nyLabel = ax.set_ylabel('Credit amount', linespacing=3.1)\nzLabel = ax.set_zlabel('Duration', linespacing=3.4)\nprint(\"Grafik klasterisasi Jobs - Credit Amount - Duration\")","b9329d81":"df['Risk Jobs'] = kmeans.labels_","59e0850f":"X = np.asarray(df[[\"Age\", \"Credit amount\", \"Duration\"]])\nX = np.log(X)","7682eff6":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(X)\n    Sum_of_squared_distances.append(km.inertia_)\n\nplt.figure(figsize=(15,10))\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","fe6df1b5":"kmeans = KMeans(n_clusters=3)\nkmeans.fit(X)\nkmeans.labels_","bf5e4133":"ss_2 = silhouette_score(X, kmeans.labels_, metric='euclidean')","0cbcb6ab":"fig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\nax = plt.axes(projection=\"3d\")\n\nax.scatter3D(X[:,0], X[:,1], X[:,2], c=kmeans.labels_, cmap='rainbow')\nax.scatter3D(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], kmeans.cluster_centers_[:,2], c='black')\n\nxLabel = ax.set_xlabel('Age', linespacing=3.2)\nyLabel = ax.set_ylabel('Credit amount', linespacing=3.1)\nzLabel = ax.set_zlabel('Duration', linespacing=3.4)\nprint(\"Grafik Klasterisasi Age - Credit Amount - Duration\")","b7e36105":"df['Risk Ages'] = kmeans.labels_","7fc495df":"X = np.asarray(df[[\"Credit amount\", \"Duration\"]])\nX = np.log(X)","4ac9d297":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(X)\n    Sum_of_squared_distances.append(km.inertia_)\n\nplt.figure(figsize=(15,10))\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","ee4b16c2":"kmeans = KMeans(n_clusters=3)\nkmeans.fit(X)\nkmeans.labels_","7edc23b5":"ss_3 = silhouette_score(X, kmeans.labels_, metric='euclidean')","bf02a6fc":"fig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\n\nplt.scatter(X[:,0], X[:,1], c=kmeans.labels_, cmap='rainbow')\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], color='black')\n\nplt.xlabel('Duration')\nplt.ylabel('Credit amount')\n\nprint(\"Grafik klasterisasi Duration - Credit Amount\")","9ce65b46":"df['Risks'] = kmeans.labels_","b3fe01d5":"X = np.asarray(df[[\"Cicil\", \"Age\"]])\nX = np.log(X)","8b809d8a":"Sum_of_squared_distances = []\nK = range(1,15)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km = km.fit(X)\n    Sum_of_squared_distances.append(km.inertia_)\n\nplt.figure(figsize=(15,10))\nplt.plot(K, Sum_of_squared_distances, 'bx-')\nplt.xlabel('k')\nplt.ylabel('Sum_of_squared_distances')\nplt.title('Elbow Method For Optimal k')\nplt.show()","b77ff26d":"kmeans = KMeans(n_clusters=3)\nkmeans.fit(X)\nkmeans.labels_","e4ed078e":"ss_4 = silhouette_score(X, kmeans.labels_, metric='euclidean')","c9ddceee":"fig = plt.figure(num=None, figsize=(15, 10), dpi=80, facecolor='w', edgecolor='k')\n\nplt.scatter(X[:,0], X[:,1], c=kmeans.labels_, cmap='rainbow')\nplt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], color='black')\n\nplt.xlabel('Cicil')\nplt.ylabel('Age')\n\nprint(\"Grafik klasterisasi Cicil - Age\")","c52268c9":"df['Risk Cicil'] = kmeans.labels_","dcc01052":"df.sort_values(by='Cicil', ascending=False).head()","c6e90683":"df_result = df.drop(columns=['Cicil', 'Risk Jobs', 'Risk Ages', 'Risks', 'Risk Cicil'])\ndf_result.head()","6bad7277":"print('silhouette Job - Credit amount - Duration: ', ss_1) \nprint('silhouette Age - Credit amount - Duration: ', ss_2) \nprint('silhouette Credit amount - Duration: ', ss_3) \nprint('silhouette Cicil - Age: ', ss_4) ","f55878cd":"X = np.asarray(df[[\"Credit amount\", \"Duration\"]])\nX = np.log(X)","199befe0":"silhouette = []\nK = range(3,6)\nfor k in K:\n    km = KMeans(n_clusters=k)\n    km.fit(X)\n    ss = silhouette_score(X, km.labels_, metric='euclidean')\n    silhouette.append(ss)\n    \npd.DataFrame({'K' : K, 'Silhouette' : silhouette})","d9e971a7":"km = KMeans(n_clusters=4)\nkm.fit(X)","cf4d4827":"df_result['Risk'] = km.labels_","f9e73eff":"df_result","e4692698":"# 2. Identifying the missing values","fc79885f":"Pada grafik diatas diambil K=3","8208c0b5":"Dari hasil yang didapat, silhouette yang paling bagus menggunakan feature Credit Amount & Duration. Langkah selanjutnya adalah pengecekan K dengan silhouette score","fd2ff330":"# 4. Clustering with k-means\n\nFeature yang akan digunakan untuk penelitian ini adalah Age, Credit Amount, Duration, dan Cicil**.","4fdc822f":"## 4.2 Feature: Job - Credit amount - Duration","c375958c":"Pada tahap ini, kita akan melakukan pengamatan dari visualisasi data yang diharapkan memberi pandangan baru terhadap data yang akan kita teliti.","6806cda7":"Normalisasi menggunakan Logaritmik","752fec69":"### 4.2.4 Evaluasi","221cb392":"# 1. Load & Quick-look the dataset","a5017854":"### 4.2.3 Klasterisasi dengan K yang Telah Didapat","0ee226e6":"Kepemilikan rumah rerata berada pada umur 35 tahun, sedangkan penyewa terbanyak berada pada umur 30an tahun. namun rerata umur 43 tahun tidak memiliki rumah.","d37bad4b":"Dari yang ditampilkan, rata rata pengguna credit memiliki umur 35 tahun, credit amount 3271 dan durasinya 20 bulan.","92599353":"Pada tahap pertama ini, digunakan untuk menentukan feature yang akan digunakan untuk klasteri sasi agar mendapat klaster yang hampir seragam","5714b10e":"Dari grafik diatas terlihat umur terendah ada pada furniture\/equipment, namun vacation\/other memiliki umur yang paling tinggi.","86831de6":"Lalu hasil klasifikasi dapat dilihat pada df_result, dan jika ada kesalahan mohon diberi kritik pada kolom komentar","ee2414cc":"Pada kolom risk, terdapat value:<br>\n0 : Bad<br>\n1 : Medium<br>\n2 : Good<br>\n3 : Very God","f2514814":"## 4.1 Importing models and training the data\nKlasterisasi menggunakan K-Means, dikarenakan pengaplikasiannya yang cukup mudah dan memiliki keakurasian yang cukup bagus","5b11e816":"Dari tabel diatas, dapat disimpulkan bahwa korelasi yang relatif besar terjadi pada feature Cicil & Credit amount sebesar 0.52, Duration & Credit amount sebesar 0.62 dan lain hal.","972ac510":"Dari hasil query pada dataset diatas, dapat disimpulkan bahwa tiap umur memiliki kecenderungan yang unik. data diatas adalah orang dengan job UnSkilled namun memiliki credit amount lebih dari rata-rata","c47e64c1":"### 4.2.6 Summary of Silhouette Score","f469d45d":"### 4.2.1 Ambil Feature dan Normalisasi","16e49f25":"Pada tahap evaluasi ini, menggunakan Silhouette score yang akan dibandingkan dengan feature lain","90e51211":"Dari diatas kita dapat mengetahui persebaran data numerik yang terbentuk.","4faa36d8":"Kolom 'Unnamed: 0' didrop karena memiliki data yang sama dengan index, sehingga dianggap tidak perlu","589cbe9d":"Setelah dilakukan pengecekan, null values berada pada saving account dan checking account yang merupakan data kategorik, sehingga tidak dilakukan pengisian value dikarenakan proses klasterisasi menggunakan data numerik.","2fcf2c08":"Pada tahap ini, dilakukan identifikasi terhadap data yang memiliki NULL value, atau bisa dikatakan kosong pada baris tertentu","b995bf8c":"### 4.2.2 Mencari Nilai K Menggunakan Elbow Method","6e773999":"Setelah mengetahui jumlah orang untuk setiap tujuan, sewajarnya kita penasaran dengan umur orang yang mengambil tujuan tersebut. Lalu dibawah disajikan rata-rata umur orang pada setiap tujuan yang dipilih","fe247b05":"Dari info datas, terdapat beberapa variable numerik dan kategorikal yang terlihat dari tipedatanya. Namun ada feature yang memiliki tipe data numerik padahal merupakan feature kategorikal, contohnya Job","7cbb938c":"# 3. Get insight with data visualization","395354b6":"### 4.2.5 Visualisasi","93664d99":"# Import library","dc84298a":"Kolom Cicil merupakan pembagian dari Credit amount dan Duration, yang merupakan pembayaran rutin yang harus dibayarkan tiap bulan selama periode durasi tertentu.","67e91820":"Langkah selanjutnya sama seperti diatas, namun akan dikombinasikan dengan Feature yang telah dipilih diatas"}}