{"cell_type":{"f05aedfd":"code","712b181d":"code","1bcbb07d":"code","0c351cff":"code","bd969168":"code","927138be":"code","75dedc1d":"code","ac27ac87":"code","8bc47809":"code","a49e9b77":"code","2297c799":"code","e267a081":"code","cd01db77":"code","e8dae2a8":"code","115555cc":"code","7a00efed":"code","f8c5c6e2":"code","0e58d938":"code","db64e11e":"code","e4d95aa6":"code","0cf05d51":"code","1073bbe7":"code","7d38354a":"code","3c8b80ec":"code","44c40be0":"code","2f30d128":"code","41aca696":"markdown","ea6954eb":"markdown","54dae609":"markdown","2b0f21cd":"markdown","c0e1e612":"markdown","c05ee776":"markdown","fb8ef280":"markdown","dcde7e7a":"markdown","75abc4fe":"markdown"},"source":{"f05aedfd":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\nimport seaborn as sns\nimport scipy.stats\n\nimport missingno\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')","712b181d":"train = pd.read_csv('..\/input\/iba-ml2-mid-project\/train.csv',index_col= 'Id')\ntest = pd.read_csv('..\/input\/iba-ml2-mid-project\/test.csv',index_col= 'Id')","1bcbb07d":"print(\"Shape of train dataset: \", train.shape)\ntrain.head(3)","0c351cff":"print(\"Shape of test dataset: \", test.shape)\ntest.head(3)","bd969168":"test.dtypes","927138be":"test.dtypes","75dedc1d":"train[\"credit_line_utilization\"] = train[\"credit_line_utilization\"].replace(',','.', regex=True).astype(float)\ntest[\"credit_line_utilization\"] = test[\"credit_line_utilization\"].replace(',','.', regex=True).astype(float)\n#Used replace function to replace some \",\" in float values ","ac27ac87":"train.describe()","8bc47809":"test.describe()","a49e9b77":"train.isnull().sum()","2297c799":"test.isnull().sum()","e267a081":"missingno.matrix(train)","cd01db77":"missingno.matrix(test)","e8dae2a8":"train2 = train.copy() #taking copies of data in order to preserve the original data and preventing errors in case of reruns\ntest2 = test.copy()","115555cc":"from sklearn.impute import SimpleImputer \n\nimputer=SimpleImputer(missing_values=np.nan,strategy='median')\nfloat_cols = train2.loc[:, train2.dtypes == np.float64]\nfloat_cols2 = test2.loc[:, test2.dtypes == np.float64]\n\nimputer=imputer.fit(float_cols)\nimputer2 = imputer.fit(float_cols2)\n\ntrain2.loc[:, train2.dtypes == np.float64]=imputer.transform(float_cols)\ntest2.loc[:, test2.dtypes == np.float64]=imputer.transform(float_cols2)","7a00efed":"missingno.matrix(train2)","f8c5c6e2":"missingno.matrix(test2)","0e58d938":"plt.figure(figsize=(12,8))\n\nsns.distplot(train.age, bins=25)\nplt.show()","db64e11e":"plt.style.use('default')\n\ncorrmat = train.corr()\nmatrix = np.triu(corrmat)\nplt.subplots(figsize=(10,7))\nsns.heatmap(corrmat,mask=matrix, cmap=\"Blues\")","e4d95aa6":"from sklearn.feature_selection import SelectKBest,f_classif\n\nnumerical=['age','number_dependent_family_members','monthly_income','number_of_credit_lines','real_estate_loans','ratio_debt_payment_to_income','credit_line_utilization','number_of_previous_late_payments_up_to_59_days','number_of_previous_late_payments_up_to_89_days','number_of_previous_late_payments_90_days_or_more']\nn = SelectKBest(score_func=f_classif, k=10)\nnumcols=n.fit(train2[numerical],train2['defaulted_on_loan'])\nplt.figure(figsize=(7,7))\nsns.barplot(x=numcols.scores_,y=numerical)\nplt.title('Best Numerical Features')\nplt.show()","0cf05d51":"fig, ax = plt.subplots(figsize=(8,6))\nax.set_ylim((0,83000))\nsns.scatterplot(data=train, x='age', y='monthly_income', hue='defaulted_on_loan');","1073bbe7":"sns.pairplot(vars = ['age', 'real_estate_loans', 'number_of_credit_lines'],\n                data = train, hue='defaulted_on_loan', palette='ch:.25')","7d38354a":"fig, ax = plt.subplots(figsize=(12,7))\nsns.countplot(x = 'defaulted_on_loan', hue='number_dependent_family_members', data=train, palette ='ch:.25')","3c8b80ec":"sns.countplot(data=train, x='defaulted_on_loan', order=train2.defaulted_on_loan.value_counts().index,palette ='ch:.25')\n","44c40be0":"train[\"defaulted_on_loan\"].value_counts()","2f30d128":"#Exporting the datasets:\n#train.to_csv(\"trainEDA.csv\", index=False)\n#test.to_csv(\"testEDA.csv\", index=False)","41aca696":"### Loading libraries","ea6954eb":"#### *credit_line_utilization columns seems to have incorrect datatype, we will be correcting it on both dataset.*","54dae609":"# <h1><center> *ML-2 Mid Project Exploratory Data Analysis* <\/center><\/h1>","2b0f21cd":"### Loading data","c0e1e612":"## Visualizations","c05ee776":"### *Let's analyze descriptive statistics*\n","fb8ef280":"<div style=\"width:100%;text-align: center;\"> <img align=middle src=\"https:\/\/cdn.educba.com\/academy\/wp-content\/uploads\/2020\/01\/exploratory-data-analysis.jpg\" alt=\"Heat beating\" style=\"height:500px;margin-top:3rem;\"> <\/div>","dcde7e7a":"### Let's impute missing values for visualizations, which can also be done inside of the Pipeline","75abc4fe":"As you might guess, we have highly imbalanced dataset. We either will balance the labels, or choose algortihm that will not be affected. "}}