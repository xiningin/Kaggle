{"cell_type":{"ef1a1944":"code","a30e77b9":"code","0de75d14":"code","68ae6cb1":"code","97bab461":"code","102f7b43":"code","da3b4a2b":"code","116124d4":"code","87a17d85":"code","4cc3a3d4":"code","f2032844":"code","3a7f26f2":"code","95a7cef9":"code","42a18ec6":"code","a31474a9":"code","cf4e2876":"markdown","ccec8254":"markdown","647e5217":"markdown","768c81f3":"markdown","d59ff03c":"markdown","ba122966":"markdown","0654488c":"markdown","14faa0d6":"markdown","3b52d92a":"markdown","0d89d6a6":"markdown"},"source":{"ef1a1944":"!pip install 'git+https:\/\/github.com\/cocodataset\/cocoapi.git#subdirectory=PythonAPI'","a30e77b9":"%matplotlib inline\nfrom pycocotools.coco import COCO\nimport numpy as np\nimport skimage.io as io\nimport matplotlib.pyplot as plt\nimport pylab\nimport random\npylab.rcParams['figure.figsize'] = (8.0, 10.0)# Import Libraries","0de75d14":"# I am visualizing some images in the 'val\/' directory\n\ndataDir='..\/input\/coco-car-damage-detection-dataset\/val'\ndataType='COCO_val_annos'\nmul_dataType='COCO_mul_val_annos'\nannFile='{}\/{}.json'.format(dataDir,dataType)\nmul_annFile='{}\/{}.json'.format(dataDir,mul_dataType)\nimg_dir = \"..\/input\/coco-car-damage-detection-dataset\/img\"","68ae6cb1":"# initialize coco api for instance annotations\ncoco=COCO(annFile)\nmul_coco=COCO(mul_annFile)","97bab461":"# display categories and supercategories\n\n#Single Class #Damage dataset\ncats = coco.loadCats(coco.getCatIds())\nnms=[cat['name'] for cat in cats]\nprint('COCO categories for damages: \\n{}\\n'.format(', '.join(nms)))\n\nnms = set([cat['supercategory'] for cat in cats])\nprint('COCO supercategories for damages: \\n{}\\n'.format(', '.join(nms)))\n\n#Multi Class #Parts dataset\n\nmul_cats = mul_coco.loadCats(mul_coco.getCatIds())\nmul_nms=[cat['name'] for cat in mul_cats]\nprint('COCO categories for parts: \\n{}\\n'.format(', '.join(mul_nms)))\n\nmul_nms = set([mul_cat['supercategory'] for mul_cat in mul_cats])\nprint('COCO supercategories for parts: \\n{}\\n'.format(', '.join(mul_nms)))","102f7b43":"# get all images containing 'damage' category, select one at random\ncatIds = coco.getCatIds(catNms=['damage']);\nimgIds = coco.getImgIds(catIds=catIds );","da3b4a2b":"random_img_id = random.choice(imgIds)\nprint(\"{} image id was selected at random from the {} list\".format(random_img_id, imgIds))","116124d4":"# Load the image\nimgId = coco.getImgIds(imgIds = [random_img_id])\nimg = coco.loadImgs(imgId)[0]\nprint(\"Image details \\n\",img)","87a17d85":"I = io.imread(img_dir + '\/' + img['file_name'])\nplt.axis('off')\nplt.imshow(I)\nplt.show()","4cc3a3d4":"#get damage annotations\nannIds = coco.getAnnIds(imgIds=imgId,iscrowd=None)\nanns = coco.loadAnns(annIds)\n","f2032844":"#Plot damages\nplt.imshow(I)\nplt.axis('on')\ncoco.showAnns(anns, draw_bbox=True )","3a7f26f2":"#get parts annotations\nmul_annIds = mul_coco.getAnnIds(imgIds=imgId,iscrowd=None)\nmul_anns = mul_coco.loadAnns(mul_annIds)","95a7cef9":"# Create a dictionary between category_id and category name\ncategory_map = dict()\n\nfor ele in list(mul_coco.cats.values()):\n    category_map.update({ele['id']:ele['name']})","42a18ec6":"category_map","a31474a9":"#Create a list of parts in the image\nparts = []\nfor region in mul_anns:\n    parts.append(category_map[region['category_id']])\n\nprint(\"Parts are:\", parts) \n\n#Plot Parts\nI = io.imread(img_dir + '\/' + img['file_name'])\nplt.imshow(I)\nplt.axis('on')\nmul_coco.showAnns(mul_anns, draw_bbox=True )","cf4e2876":"# <center>Coco Dataset Visulation using [Cocoapi](https:\/\/github.com\/cocodataset\/cocoapi)<center\/>","ccec8254":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center>Set constant variables<\/center><\/h3>","647e5217":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center> Image with damage annotation<\/center><\/h3>","768c81f3":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center> Image with parts annotation<\/center><\/h3>","d59ff03c":"### <h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center>Import Libraries<\/center><\/h3>","ba122966":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center> Display damage categories and supercategories<\/center><\/h3>","0654488c":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center> Initialize the COCO API<\/center><\/h3>","14faa0d6":"<h3 class=\"list-group-item list-group-item-action active\" data-toggle=\"list\" style='background:black; border:0' role=\"tab\" aria-controls=\"home\"><center> Raw Image<\/center><\/h3>","3b52d92a":"## This is a Starter notebook for visualization of the given [Car Damage Detection](https:\/\/www.kaggle.com\/lplenka\/coco-car-damage-detection-dataset) dataset.  ","0d89d6a6":"### Installation\n* Most of the libraries required for visualization like [skimage](https:\/\/scikit-image.org\/docs\/dev\/api\/skimage.html) and [matplotlib](https:\/\/matplotlib.org\/) come preinstalled in kaggle environment.\n* One library required to visualize COCO dataset is [Pycocotools]() which can be installed using the following command.\n`pip install 'git+https:\/\/github.com\/cocodataset\/cocoapi.git#subdirectory=PythonAPI`"}}