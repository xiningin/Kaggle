{"cell_type":{"df50772a":"code","5826290f":"code","95839087":"code","fe79abe5":"code","69b83d96":"code","91fdc4fe":"code","ff2d9897":"code","a4744c10":"code","4df70a09":"code","30428e3c":"code","e2a5c4f0":"markdown","42589085":"markdown","91c4975b":"markdown","b5301ddd":"markdown","8ac62358":"markdown","9be4cb4f":"markdown"},"source":{"df50772a":"import numpy as np\nimport pandas as pd\n\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","5826290f":"from numpy import expand_dims\nfrom keras.preprocessing.image import load_img\nfrom keras.preprocessing.image import img_to_array\nfrom keras.preprocessing.image import ImageDataGenerator\n\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport cv2\nimport numpy as np","95839087":"img = cv2.imread('..\/input\/head-ct-hemorrhage\/head_ct\/head_ct\/192.png')\nres = cv2.resize(img, dsize=(224, 224), interpolation=cv2.INTER_CUBIC)\n\ndata = img_to_array(res)\n\nsamples = expand_dims(data, 0)","fe79abe5":"datagen = ImageDataGenerator(width_shift_range=0.1)\n\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\n\nimage1 = batch[0].astype('uint8')\n\nplt.imshow(image1)","69b83d96":"datagen = ImageDataGenerator(height_shift_range=0.1)\n\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\n\nimage2 = batch[0].astype('uint8')\n\nplt.imshow(image2)","91fdc4fe":"datagen = ImageDataGenerator(horizontal_flip=True)\n\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\n\nimage3 = batch[0].astype('uint8')\n\nplt.imshow(image3)","ff2d9897":"datagen = ImageDataGenerator(rotation_range=10)\n\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\n\nimage4 = batch[0].astype('uint8')\n\nplt.imshow(image4)","a4744c10":"datagen = ImageDataGenerator(zoom_range=0.1)\n\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\n\nimage5 = batch[0].astype('uint8')\n\nplt.imshow(image5)","4df70a09":"fig = plt.figure(figsize=(30, 25))\n  \nrows = 1\ncolumns = 6\n\nfig.add_subplot(rows, columns, 1)\nplt.imshow(res)\nplt.axis('off')\nplt.title(\"Original\")\n  \nfig.add_subplot(rows, columns, 2)\nplt.imshow(image1)\nplt.axis('off')\nplt.title(\"Horizontal Shift\")\n  \nfig.add_subplot(rows, columns, 3)\nplt.imshow(image2)\nplt.axis('off')\nplt.title(\"Vertical Shift\")\n  \nfig.add_subplot(rows, columns, 4)\nplt.imshow(image3)\nplt.axis('off')\nplt.title(\"Horizontal Flip\")\n\nfig.add_subplot(rows, columns, 5)\nplt.imshow(image4)\nplt.axis('off')\nplt.title(\"Random Rotation\")\n\nfig.add_subplot(rows, columns, 6)\nplt.imshow(image5)\nplt.axis('off')\nplt.title(\"Zoom\")","30428e3c":"from numpy import expand_dims\nfrom keras.preprocessing.image import load_img\nfrom keras.preprocessing.image import img_to_array\nfrom keras.preprocessing.image import ImageDataGenerator\n\nfrom PIL import Image\nimport matplotlib.pyplot as plt\nimport cv2\nimport numpy as np\n\n# Change the image path as needed.\nimg = cv2.imread('..\/input\/head-ct-hemorrhage\/head_ct\/head_ct\/192.png')\nres = cv2.resize(img, dsize=(224, 224), interpolation=cv2.INTER_CUBIC)\ndata = img_to_array(res)\nsamples = expand_dims(data, 0)\n\n\ndatagen = ImageDataGenerator(width_shift_range=0.1)\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\nimage1 = batch[0].astype('uint8')\n\n\ndatagen = ImageDataGenerator(height_shift_range=0.1)\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\nimage2 = batch[0].astype('uint8')\n\n\ndatagen = ImageDataGenerator(horizontal_flip=True)\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\nimage3 = batch[0].astype('uint8')\n\n\ndatagen = ImageDataGenerator(rotation_range=10)\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\nimage4 = batch[0].astype('uint8')\n\n\ndatagen = ImageDataGenerator(zoom_range=0.1)\nit = datagen.flow(samples, batch_size=1)\nbatch = it.next()\nimage5 = batch[0].astype('uint8')\n\n\n\nfig = plt.figure(figsize=(30, 25))\nrows = 1\ncolumns = 6\n\nfig.add_subplot(rows, columns, 1)\nplt.imshow(res)\nplt.axis('off')\nplt.title(\"Original\")\n  \nfig.add_subplot(rows, columns, 2)\nplt.imshow(image1)\nplt.axis('off')\nplt.title(\"Horizontal Shift\")\n  \nfig.add_subplot(rows, columns, 3)\nplt.imshow(image2)\nplt.axis('off')\nplt.title(\"Vertical Shift\")\n  \nfig.add_subplot(rows, columns, 4)\nplt.imshow(image3)\nplt.axis('off')\nplt.title(\"Horizontal Flip\")\n\nfig.add_subplot(rows, columns, 5)\nplt.imshow(image4)\nplt.axis('off')\nplt.title(\"Random Rotation\")\n\nfig.add_subplot(rows, columns, 6)\nplt.imshow(image5)\nplt.axis('off')\nplt.title(\"Zoom\")","e2a5c4f0":"# Horizontal shift (width_shift_range)\n\nThe example below demonstrates a horizontal shift with the width_shift_range = 0.1 argument which generates a plot of generated images to demonstrate the effect. Each image is shifted horizontally right or left randomly by 10%.","42589085":"# Horizontal flip (horizontal_flip)\n\nThe example below demonstrates augmenting the chosen photograph with horizontal flips via the horizontal_flip argument.","91c4975b":"# Random rotation (rotation_range)\n\nThe example below demonstrates random rotations via the rotation_range argument, with rotations to the image between 0 and 10 degrees.","b5301ddd":"# Vertical shift (height_shift_range)\n\nThe example below demonstrates a vertical shift with the height_shift_range = 0.1 argument which generates a plot of generated images to demonstrate the effect. Each image is shifted vertically right or left randomly by 10%.","8ac62358":"# Zoom (zoom_range)\n\nIf a float is specified, then the range for the zoom will be [1-value, 1+value]. For example, if you specify 0.1, then the range will be [0.9, 1.1], or between 90% (zoom in) and 110% (zoom out).","9be4cb4f":"# All in One"}}