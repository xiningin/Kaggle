{"cell_type":{"8bc85c79":"code","d2904ff9":"code","c4bb7357":"code","5ddc76b8":"code","90d02ec4":"code","33f7a42e":"code","de9f6045":"code","60bdf4a7":"code","82f33981":"code","4ed95042":"code","7dd1dfee":"code","b0d15c72":"code","3717746d":"code","6f60539c":"code","1a47e9d4":"code","47e8a6a2":"code","d5051caa":"code","ea71260e":"code","bddd17fa":"code","8be70a0f":"code","8a13762c":"code","961ac4ef":"markdown","77dfb64f":"markdown","6624b91e":"markdown","96720551":"markdown","e8bc8e47":"markdown","2968d7c6":"markdown","1d0ca033":"markdown","ac719363":"markdown","de85f971":"markdown","b5192a7e":"markdown","a87f9d5f":"markdown"},"source":{"8bc85c79":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns; sns.set(style=\"ticks\", color_codes=True)\nimport plotly_express as px","d2904ff9":"import os\nprint(os.listdir(\"..\/input\"))","c4bb7357":"immigData = pd.read_excel('..\/input\/immigration-to-canada-ibm-dataset\/Canada.xlsx',\n                     sheet_name='Canada by Citizenship',\n                     skiprows = range(20),\n                     skipfooter = 2)\nimmigData.sample(4)\n","5ddc76b8":"countries = pd.read_csv('..\/input\/countries-of-the-world\/countries of the world.csv'\n                    )\ncountries.sample(4)","90d02ec4":"print(immigData.columns)","33f7a42e":"print(countries.columns)","de9f6045":"immigData=immigData.drop(['Type', 'Coverage','AREA', 'AreaName','REG','RegName','DEV','DevName'],axis=1)\nimmigData['TotalImmig']=immigData.sum(axis=1)\nimmigData=immigData[['OdName','TotalImmig']]\nimmigData=immigData.rename(columns={\"OdName\": \"Country\"})\n#immigData=immigData.set_index(\"Country\")\nimmigData.sample(4)","60bdf4a7":"toConvTofloat=['Pop. Density (per sq. mi.)', 'Coastline (coast\/area ratio)',\n       'Net migration', 'Infant mortality (per 1000 births)',\n       'GDP ($ per capita)', 'Literacy (%)', 'Phones (per 1000)', 'Arable (%)',\n       'Crops (%)', 'Other (%)', 'Climate', 'Birthrate', 'Deathrate',\n       'Agriculture', 'Industry', 'Service']\nfor col in toConvTofloat:\n    countries[col]=countries[col].astype(str).str.replace(',','.')\n    countries[col]=countries[col].astype(float)\n    \ncountries.sample(4)","82f33981":"immigData['Country']=immigData['Country'].astype(str)\ncountries['Country']=countries['Country'].astype(str)\ncountries['Country'] = countries['Country'].str.strip()\ncountries['Country'] = countries['Country'].str.replace('&','and')\nimmigData['Country'] = immigData['Country'].str.strip()","4ed95042":"#get The non common Countries \nIS=pd.DataFrame()\nIS['d']= immigData['Country'].isin(countries['Country'])\nimmigData['Country'].loc[ IS.index[IS['d']==False]].tolist()","7dd1dfee":"changeCont = {\t\n\t\t\t 'Bahamas, The': 'Bahamas',\n\t\t\t 'Cape Verde':'Cabo Verde',\n\t\t\t 'Central African Rep.':'Central African Republic',\n\t\t\t 'Congo, Repub. of the' :'Congo',\n\t\t\t 'Israel':'State of Palestine',\n\t\t\t 'Congo, Dem. Rep.' :'Democratic Republic of the Congo',\n\t\t\t 'Gambia, The':'Gambia',\n\t\t\t 'Montserrat' :'Montenegro'\n\t\t\t \n\t\t\t \n\t\t\t \n\t\t\t }\n\t\t\t \nchgangeImmi={\t'Bolivia (Plurinational State of)': 'Bolivia',\n\t\t\t'Brunei Darussalam':'Brunei' ,\n             'Israel':'State of Palestine',\n             \"C\u00f4te d'Ivoire\":\"Cote d'Ivoire\",\n             'Syrian Arab Republic':'Syria',\n             'Russian Federation':'Russia',\n\t\t\t#'China, Hong Kong Special Administrative Region':'China',\n\t\t\t\"Democratic People's Republic of Korea\":\"Korea, South\",\n\t\t\t'Iran (Islamic Republic of)':'Iran' ,\n\t\t\t\"Lao People's Democratic Republic\":'Laos',\n\t\t\t'Republic of Korea':'Korea, North',\n\t\t\t'Republic of Moldova':'Moldova',\n\t\t\t'The former Yugoslav Republic of Macedonia':'Macedonia',\n\t\t\t'United Kingdom of Great Britain and Northern Ireland':'United Kingdom',\n\t\t\t'United Republic of Tanzania':'Tanzania',\n\t\t\t'United States of America':'United States',\n\t\t\t'Venezuela (Bolivarian Republic of)':'Venezuela',\n\t\t\t'Myanmar':'Burma',\n            'Viet Nam':'Vietnam'\n}","b0d15c72":"\ntempcountries=countries['Country']\ntempIcountries=immigData['Country']\ncountries['Country'] = countries['Country'].map(changeCont, na_action='ignore').fillna(tempcountries)\nimmigData['Country'] = immigData['Country'].map(chgangeImmi, na_action='ignore').fillna(tempIcountries)\n\ncomp=immigData.merge(countries,how='inner',left_on = 'Country', right_on ='Country')#,left_index=True,right_index=True)\ncomp.shape","3717746d":"IS=pd.DataFrame()\nIS['d']= immigData['Country'].isin(countries['Country'])\nimmigData['Country'].loc[ IS.index[IS['d']==False]].tolist()","6f60539c":"comp[comp['Country']=='China']","1a47e9d4":"plt.rcParams['figure.figsize'] = (18, 9)\n\nsns.countplot( comp['Region'], palette = 'hsv')\nplt.title('Regions', fontsize = 20, fontweight = 100)\nplt.xticks(rotation = 90)\nplt.show()","47e8a6a2":"#get a scaled version of the data\nfrom sklearn import preprocessing\nmin_max_scaler = preprocessing.MinMaxScaler()\ncomp=comp.fillna(comp.mean())\nscaled=pd.DataFrame( min_max_scaler.fit_transform(comp.drop(['Country','Region'],axis=1)) ,columns= comp.drop(['Country','Region'],axis=1).columns)\n","d5051caa":"comp['%Immig']=(comp['TotalImmig'].div( comp['Population']) ) .astype(float)\ncorr = comp.corr()\n\nf,ax = plt.subplots(figsize=(12,6))\nsns.heatmap(corr, annot = True, linewidths=1.5 , fmt = '.2f',ax=ax)\nplt.show()","ea71260e":"sns.pairplot(comp[['TotalImmig','%Immig','Population','GDP ($ per capita)','Crops (%)','Literacy (%)','Industry','Service']] ,  diag_kind='kde', size=2);","bddd17fa":"sns.pairplot(comp[['TotalImmig','%Immig','Population','GDP ($ per capita)','Crops (%)','Literacy (%)','Industry','Service']] ,kind=\"reg\",  diag_kind='kde', size=2);","8be70a0f":"top10=comp.sort_values(by='%Immig',ascending=False).head(10) \ntop10.set_index('Country')[['TotalImmig','%Immig','Population','GDP ($ per capita)','Crops (%)','Literacy (%)','Industry','Service']].reset_index()","8a13762c":"\ngrid=sns.pairplot(top10[['Country','TotalImmig','%Immig','Population','GDP ($ per capita)','Crops (%)','Literacy (%)','Industry','Service']] , hue='Country', diag_kind='kde', size=2);\nhandles = grid._legend_data.values()\nlabels = grid._legend_data.keys()\ngrid.fig.legend(handles=handles, labels=labels, loc='lower center', ncol=10)","961ac4ef":"I expected that the number of immigrants will depend basically on the GDP,\nBut the % of immigrants seems to depend on <b>Literacy (%), Crops(%)!, Service...","77dfb64f":"Map to same names","6624b91e":"# Top10","96720551":"# Preprocessing","e8bc8e47":"<b>Country names preprocessing<b>","2968d7c6":"# Which Regions do people migrate to Canda from","1d0ca033":"<b>Check differnt Country names in both datasets","ac719363":" I will Focus on the total count of immigrants from 1980-2013","de85f971":"# Pairplot","b5192a7e":"<h1>In this Kernel, I would like to find relations between people immigrating to Canda and their home country features, <\/h1>\n<h3>Applying Cairo's principles of truthfulness, functionality, beauty, and insightfulness.\n<\/h3>\nLooking Forward for your reviews \n\n\nI choose the [immegration to Canada IBM Dataset](https:\/\/www.kaggle.com\/roshansharma\/immigration-to-canada-ibm-dataset) in addition to [the countries of the world Dataset](https:\/\/www.kaggle.com\/fernandol\/countries-of-the-world).","a87f9d5f":"# Heatmap"}}