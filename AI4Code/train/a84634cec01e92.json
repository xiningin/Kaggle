{"cell_type":{"e81b0cf3":"code","a7a87278":"code","0336ab64":"code","40301e59":"code","06317734":"code","949b9084":"code","4e4439c4":"code","70c57483":"code","880d6354":"code","42bda0dc":"code","083567d5":"code","e43f9e67":"code","9e594d97":"code","82ef439f":"code","0d310d26":"code","2cee7720":"code","1d9fa181":"code","7df13afe":"code","1fbf66ed":"code","4e07b0a2":"code","9fbbf7b8":"code","5846fbdb":"code","9818ff81":"code","a2304832":"code","c1048b2b":"code","ab42a672":"code","3f5d2fdf":"code","ccbd2ca3":"code","8ae2b86c":"code","4045261a":"code","98101421":"code","dbed1a0d":"code","15f6e5d5":"code","d478b22c":"code","7bda027a":"code","ea228415":"code","86cc35ae":"code","10829b05":"code","5acc7909":"code","a6b63b37":"code","71bc0cd5":"code","8d9f23a6":"code","0bd4bf2f":"code","5d9239b2":"code","a4316157":"code","8c97ff85":"code","af6f726c":"code","90a3e78e":"code","b8a4661a":"markdown"},"source":{"e81b0cf3":"!pip install pycountry-convert\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy as np\nfrom geopy.exc import GeocoderTimedOut\nfrom geopy.geocoders import Nominatim \nimport folium\nfrom folium.plugins import MarkerCluster\nfrom pycountry_convert import country_alpha2_to_continent_code, country_name_to_country_alpha2\nplt.rcParams.update({'figure.max_open_warning': 0})\nimport warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\npd.options.mode.chained_assignment = None","a7a87278":"df = pd.read_csv('..\/input\/suicide-rates-overview-1985-to-2016\/master.csv')","0336ab64":"df.info()","40301e59":"df.describe()","06317734":"df.columns","949b9084":"countries = df['country'].unique()\nprint(\"Total country : \",len(countries))","4e4439c4":"df['age'].unique()","70c57483":"df['generation'].unique()","880d6354":"def country_suicide():\n    \"\"\"\" shows total suicide in each country \"\"\"\n    \n    temp = df[['country','suicides_no']]\n    temp = temp.groupby('country').sum()\n    temp.reset_index(level=['country'],inplace=True)\n    chart = sns.catplot(x='country',y='suicides_no',kind=\"bar\",data=temp,height=5, aspect=15\/5)\n    chart.set_xticklabels(rotation=90)","42bda0dc":"country_suicide()","083567d5":"def plot_country_yearly_suicide(country):\n    \"\"\"\" shows yearly suicide in a country \"\"\"\n    temp = df[df['country']==country]\n    chart = sns.catplot(x='country-year',y='suicides_no',kind=\"bar\",data=temp,height=3, aspect=9\/4)\n    plt.title(country)\n    chart.set_xticklabels(rotation=90)","e43f9e67":"plot_country_yearly_suicide('Albania')\nplot_country_yearly_suicide('Japan')","9e594d97":"def plot_country_sex_suicide(country):\n    \"\"\"\" shows suicide in each gender in a country \"\"\"\n\n    temp = df[df['country'] == country]\n    temp.groupby('sex').sum()\n    sns.catplot(x='sex',y='population',kind='bar',data=temp,height=3, aspect=9\/4)\n    plt.title(country)","82ef439f":"plot_country_sex_suicide('Albania')\nplot_country_sex_suicide('Japan')","0d310d26":"def plot_country_gdp_suicide(country):\n    \"\"\"\" shows gdp vs suicides in a country.\n         The per capita gdp has been divided by 100 for scaling.\n    \"\"\"\n\n    temp = df.groupby(['country-year','country']).sum()\n    temp.reset_index(level=['country-year','country'],inplace=True)\n    ptemp = temp[temp['country']==country]\n    ptemp['gdp_per_capita ($)'] = ptemp['gdp_per_capita ($)']\/100\n    d = ptemp['country-year']\n    d = [t[-4:] for t in d]\n    ptemp['country-year'] = d\n    plt.figure(figsize=(20,5))\n    plt.xlabel('year')\n    plt.ylabel('gdp_per_capita($)\/100')\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.grid(color='white',linestyle='dotted',linewidth=0.5)\n    plt.plot(ptemp['country-year'],ptemp['suicides_no'],marker='o',label='suicides')\n    plt.plot(ptemp['country-year'],ptemp['gdp_per_capita ($)'],marker='^',label='gdp_per_capita')\n    plt.title(country)\n    plt.legend()","2cee7720":"plot_country_gdp_suicide('Albania')\nplot_country_gdp_suicide('Japan')","1d9fa181":"def plot_country_suicide_sex_yearly(country):\n    \"\"\"\" shows gender wise suicides per year in a country \"\"\"\n\n    temp = df[df['country']==country]\n    sns.set(rc={'figure.figsize':(20,4)})\n    sns.violinplot(x=\"year\", y=\"suicides_no\", hue=\"sex\", data=temp)\n    plt.title(country)\n    return","7df13afe":"plot_country_suicide_sex_yearly('Albania')","1fbf66ed":"plot_country_suicide_sex_yearly('Japan')","4e07b0a2":"def plot_country_suicide_sex_generation(country):\n    \"\"\"\" shows gender wise and genration wise suicides per year in a country \"\"\"\n    \n    sns.catplot(x='sex',y='suicides_no',hue='generation',kind='bar',data=df[df['country']==country])\n    plt.title(country)","9fbbf7b8":"plot_country_suicide_sex_generation('Albania')\nplot_country_suicide_sex_generation('Japan')","5846fbdb":"def findGeocode(country):\n    \"\"\"returns central latitude and longitude of a location\"\"\"\n    \n    try:\n        geolocator = Nominatim(user_agent=\"default_name\") \n        return geolocator.geocode(country) \n      \n    except GeocoderTimedOut: \n        return findGeocode(country)","9818ff81":"def plot_world_map():\n    \"\"\"plot world map and number of suicides\"\"\"\n    \n    temp = df\n    ptemp = temp.groupby('country').sum()\n    dtemp = ptemp.drop(['year','suicides\/100k pop','HDI for year'],axis=1)\n    dtemp.reset_index(level = ['country'],inplace=True)\n    coordinates = [findGeocode(c)[1] for c in dtemp['country']]\n    lat = [coor[0] for coor in coordinates]\n    long = [coor[1] for coor in coordinates]\n    dtemp['latitude'] = lat\n    dtemp['longitude'] = long\n\n    f = folium.Figure(width=1000, height=500)\n\n    world_map= folium.Map(tiles=\"cartodbpositron\",max_bounds=True,zoom_control=False)\n    marker_cluster = MarkerCluster().add_to(world_map)\n    \n    for i in range(len(dtemp)):\n        lat = dtemp.iloc[i]['latitude']\n        long = dtemp.iloc[i]['longitude']\n        radius=5\n        popup_text = \"\"\"Country : {}<br> Suicides : {}<br>\"\"\"\n        popup_text = popup_text.format(dtemp.iloc[i]['country'],dtemp.iloc[i]['suicides_no'])\n        folium.CircleMarker(location = [lat, long], radius=radius, popup= popup_text, fill =True).add_to(marker_cluster)\n        \n    return world_map","a2304832":"plot_world_map()","c1048b2b":"def plot_country_age_suicide(country):\n    \"\"\"shows age wise suicide in a country\"\"\"\n    \n    temp = df\n    dtemp = temp.groupby(['country','age','sex']).sum()\n    dtemp.reset_index(level = ['country'],inplace=True)\n    dtemp.reset_index(level = ['age'],inplace=True)\n    dtemp.reset_index(level = ['sex'],inplace=True)\n    \n    dtemp[dtemp['country']==country]\n    sns.catplot(x='age',y='suicides_no',hue='sex',kind='bar',data=dtemp,height=3, aspect=9\/4)\n    plt.title(country)","ab42a672":"plot_country_age_suicide('Albania')\nplot_country_age_suicide('Japna')","3f5d2fdf":"def plot_country_population_suicides(country):\n    \"\"\"shows population and suicides in a country.\n    popultaion is divided by 10000 to fit to scale\n    \"\"\"\n    temp = df\n    dtemp = temp[temp['country']==country].groupby('year').sum()\n    dtemp.reset_index(level = ['year'],inplace=True)\n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.title('country')\n    plt.xlabel('year')\n    plt.ylabel('count')\n    plt.grid(color='white',linestyle='dashed')\n    plt.plot(dtemp['year'],dtemp['population']\/10000,marker='o',label='population\/10k',color='orange')\n    plt.plot(dtemp['year'],dtemp['suicides_no'],marker='o',label='suicides',color='red')\n    plt.legend()","ccbd2ca3":"plot_country_population_suicides('Albania')\nplot_country_population_suicides('Japan')","8ae2b86c":"def plot_global_change_yearly_population_suicide():\n    \"\"\"show global change in suicide rates over the years\"\"\"\n    \n    temp = df\n    dtemp = temp[['year','population','suicides_no']].groupby('year').sum()\n    dtemp.reset_index(level=['year'],inplace=True)\n    dtemp['population'] \/= 10000\n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.grid(color='white',linestyle='dotted',linewidth=0.5)\n    plt.title('Yearly global change')\n    plt.xlabel('year')\n    plt.ylabel('count')\n    plt.plot(dtemp['year'],dtemp['population'],label='population',marker='o',color='orange')\n    plt.plot(dtemp['year'],dtemp['suicides_no'],label='suicide',marker='x',color='red')\n    plt.plot(dtemp['year'],[dtemp['suicides_no'].mean()]*len(dtemp),label='mean suicide',linestyle='dashed',color='red')\n    plt.plot(dtemp['year'],[dtemp['population'].mean()]*len(dtemp),label='mean population',linestyle='dashed',color='orange')\n    plt.legend()","4045261a":"plot_global_change_yearly_population_suicide()","98101421":"def plot_global_change_generation_yearly():\n    \"\"\"show global change in suicide rates over the years\"\"\"\n    \n    temp = df\n    dtemp = temp[['population','suicides_no','generation']].groupby('generation').sum()\n    dtemp.reset_index(level=['generation'],inplace=True)\n    dtemp['population'] \/= 10000\n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.title('Global change in suicide varying on generation')\n    plt.xlabel('generation')\n    plt.ylabel('count')\n    plt.grid(color='white', linestyle='dotted', linewidth=0.5)\n    plt.plot(dtemp['generation'],dtemp['population'],label='population',marker='o',color='orange')\n    plt.plot(dtemp['generation'],dtemp['suicides_no'],label='suicide',marker='x',color='red')\n    plt.plot(dtemp['generation'],[dtemp['suicides_no'].mean()]*len(dtemp),label='mean suicide',linestyle='dashed',color='orange')\n    plt.plot(dtemp['generation'],[dtemp['population'].mean()]*len(dtemp),label='mean population',linestyle='dashed',color='red')\n    plt.legend()","dbed1a0d":"plot_global_change_generation_yearly()","15f6e5d5":"def plot_global_change_age_yearly():\n    \"\"\"show global change in suicide rates over the years\"\"\"\n    \n    temp = df\n    dtemp = temp[['population','suicides_no','age']].groupby('age').sum()\n    dtemp.reset_index(level=['age'],inplace=True)\n    dtemp['population'] \/= 10000\n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.grid(color='teal',linestyle='dotted')\n    plt.title('global change in suicides varying on age')\n    plt.xlabel('age')\n    plt.ylabel('count')\n    plt.plot(dtemp['age'],dtemp['population'],label='population\/10k',marker='o',color='#F7DC6F')\n    plt.plot(dtemp['age'],dtemp['suicides_no'],label='suicide',marker='x',color='#F1948A')\n    plt.plot(dtemp['age'],[dtemp['suicides_no'].mean()]*len(dtemp),label='mean suicide',linestyle='dashed',color='#F7DC6F')\n    plt.plot(dtemp['age'],[dtemp['population'].mean()]*len(dtemp),label='mean population\/10k',linestyle='dashed',color='#F1948A')\n    plt.legend()","d478b22c":"plot_global_change_age_yearly()","7bda027a":"def get_continent(con):\n    \"\"\"return continent central coordinates\"\"\"\n    try:\n        cn_a2_code =  country_name_to_country_alpha2(con)\n    except:\n        cn_a2_code = con\n    try:\n        cn_continent = country_alpha2_to_continent_code(cn_a2_code)\n    except:\n        cn_continent = con \n    return (cn_continent)","ea228415":"def create_country_continent():\n    \"\"\"create dictionary of continent and their central coordiantes\"\"\"\n    \n    g = [get_continent(c) for c in df['country'].unique()]\n    g[g.index('Republic of Korea')]='AS'\n    g[g.index('Saint Vincent and Grenadines')]='EU'\n    \n    country_continent_dict = {}\n\n    for i in range(0,len(g)):\n        country_continent_dict.update({df['country'].unique()[i]:g[i]})\n    return country_continent_dict","86cc35ae":"def plot_continent_suicide_gdp_population():\n    \"\"\"plot world map and line chart for continent wise suicide count\"\"\"\n    \n    dtemp = df\n    dtemp['continent']=dtemp['country'].map(create_country_continent())\n    dtemp['continent'] = dtemp['continent'].map({'AF':'Africa','AS':'Asia','EU':'Europa','NA':'North America','OC':'Oceania','SA':'South America'})\n    dtemp = df.groupby('continent').sum()\n    dtemp.reset_index(level=['continent'],inplace=True)\n    \n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.grid(color='white',linestyle='dotted')\n    plt.plot(dtemp['continent'],dtemp['suicides_no'],marker='o',label='suicides',color='crimson')\n    plt.plot(dtemp['continent'],dtemp['population']\/10000,marker='x',label='popultaion',color='darkorange')\n    plt.plot(dtemp['continent'],dtemp['gdp_per_capita ($)']\/100,marker='x',label='gdp_per_capita ($)',color='limegreen')\n    plt.legend()\n    \n    continent_list = ['North America','South America','Europa','Asia','Africa','Oceania']\n    coords = [findGeocode(continent) for continent in continent_list]\n    coords_dict = {}\n    for i in range(0,len(coords)):\n        coords_dict.update({coords[i][0]:coords[i][1]})\n        \n    dtemp['coordinates'] = dtemp['continent'].map(coords_dict)\n    \n    f = folium.Figure(width=1000, height=500)\n\n    world_map= folium.Map(tiles=\"cartodbpositron\",max_bounds=True,zoom_control=False)\n    marker_cluster = MarkerCluster().add_to(world_map)\n    \n    for i in range(len(dtemp)):\n        lat = dtemp.iloc[i]['coordinates'][0]\n        long = dtemp.iloc[i]['coordinates'][1]\n        radius=5\n        popup_text = \"\"\"Continent : {}<br> Suicides : {}<br>\"\"\"\n        popup_text = popup_text.format(dtemp.iloc[i]['continent'],dtemp.iloc[i]['suicides_no'])\n        folium.CircleMarker(location = [lat, long], radius=radius, popup= popup_text, fill =True).add_to(marker_cluster)\n        \n    return world_map","10829b05":"plot_continent_suicide_gdp_population()","5acc7909":"def plot_pie_continent_suicide():\n    \"\"\" plot pie chart for continent wise suicide count\"\"\"\n    dtemp = df\n    dtemp['continent']=dtemp['country'].map(create_country_continent())\n    dtemp['continent'] = dtemp['continent'].map({'AF':'Africa','AS':'Asia','EU':'Europa','NA':'North America','OC':'Oceania','SA':'South America'})\n    dtemp = df.groupby('continent').sum()\n    dtemp.reset_index(level=['continent'],inplace=True)\n\n    labels = dtemp['continent']\n    sizes = dtemp['suicides_no']\n    colors = ['#ff9999','#66b3ff','#99ff99','#ffcc99','#F9E79F','#A3E4D7']\n    plt.figure(figsize=(35,15))\n    plt.title('Suicides in different continents',fontsize=30,pad='30.0',backgroundcolor='#F9EBEA')\n    plt.pie(sizes,  labels=labels, autopct='%1.1f%%',colors=colors , startangle=90,pctdistance=0.85,textprops={'fontsize': 20})\n\n    centre_circle = plt.Circle((0,0),0.70,fc='white')\n    fig = plt.gcf()\n    fig.gca().add_artist(centre_circle)\n    plt.legend(prop={'size': 20})\n    plt.axis('equal')\n    plt.show()","a6b63b37":"plot_pie_continent_suicide()","71bc0cd5":"def plot_continent_suicide_sex():\n    \"\"\"plot world map and line chart for continent wise suicide count\"\"\"\n    \n    dtemp = df\n    dtemp['continent']=dtemp['country'].map(create_country_continent())\n    dtemp['continent'] = dtemp['continent'].map({'AF':'Africa','AS':'Asia','EU':'Europa','NA':'North America','OC':'Oceania','SA':'South America'})\n    dtemp = df.groupby(['continent','sex']).sum()\n    dtemp.reset_index(level=['continent'],inplace=True)\n    dtemp.reset_index(level=['sex'],inplace=True)\n    \n    male = dtemp[dtemp['sex']=='male']\n    female = dtemp[dtemp['sex']=='female']\n    \n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#2E4053')\n    plt.grid(color='white',linestyle='dotted')\n    plt.xlabel('continent')\n    plt.ylabel('count')\n    plt.plot(male['continent'],male['suicides_no'],marker='o',label='male',color='crimson',linestyle='dotted',linewidth=3)\n    plt.plot(female['continent'],female['suicides_no'],marker='x',label='female',color='darkorange',linestyle='dotted',linewidth=3)\n    plt.legend()","8d9f23a6":"plot_continent_suicide_sex()","0bd4bf2f":"def plot_continent_suicide_generation():\n    \"\"\"plot world map and line chart for continent wise suicide count\"\"\"\n    \n    dtemp = df\n    dtemp['continent']=dtemp['country'].map(create_country_continent())\n    dtemp['continent'] = dtemp['continent'].map({'AF':'Africa','AS':'Asia','EU':'Europa','NA':'North America','OC':'Oceania','SA':'South America'})\n    dtemp = df.groupby(['continent','generation']).sum()\n    dtemp.reset_index(level=['continent'],inplace=True)\n    dtemp.reset_index(level=['generation'],inplace=True)\n    \n    genx = dtemp[dtemp['generation']=='Generation X']\n    silent = dtemp[dtemp['generation']=='Silent']\n    gengi = dtemp[dtemp['generation']=='G.I. Generation']\n    boomer = dtemp[dtemp['generation']=='Boomers']\n    millenial = dtemp[dtemp['generation']=='Millenials']\n    genz = dtemp[dtemp['generation']=='Generation Z']\n    \n    plt.figure(figsize=(20,5))\n    ax = plt.gca()\n    ax.set_facecolor('#212F3C')\n    plt.xlabel('continent')\n    plt.ylabel('count')\n    plt.grid(linestyle='dotted',linewidth=0.5)\n    plt.plot(genx['continent'],genx['suicides_no'],marker='o',label='generation x',color='#ff9999')\n    plt.plot(silent['continent'],silent['suicides_no'],marker='^',label='silent',color='#66b3ff')\n    plt.plot(gengi['continent'],gengi['suicides_no'],marker='x',label='generation GI',color='#99ff99')\n    plt.plot(boomer['continent'],boomer['suicides_no'],marker='.',label='boomer',color='#ffcc99')\n    plt.plot(millenial['continent'],millenial['suicides_no'],marker='*',label='millenial',color='#F9E79F')\n    plt.plot(genz['continent'],genz['suicides_no'],marker='s',label='generation Z',color='#A3E4D7')\n    \n    plt.legend()","5d9239b2":"plot_continent_suicide_generation()","a4316157":"def plot_happiness_suicide_2016():\n    hp = pd.read_csv('..\/input\/world-happiness\/2016.csv')\n    hdf = hp[['Country','Happiness Score','Health (Life Expectancy)','Freedom','Dystopia Residual']]\n    hdf.rename(columns={\"Country\":\"country\"},inplace=True)\n    tdf = df[df['year']==2016]\n    tdf = tdf.groupby(['country']).mean()\n    tdf.reset_index(level=['country'],inplace=True)\n    finaldf = hdf.merge(tdf,how='inner',on='country')\n    finaldf.drop(['HDI for year','year'],axis=1,inplace=True)\n    plt.figure(figsize=(20,5))\n    plt.grid()\n    ax = plt.gca()\n    ax.set_facecolor('floralwhite')\n    plt.title('Does suicides depend on happiness factors ?')\n    plt.xlabel('country')\n    plt.plot(finaldf['country'],finaldf['suicides\/100k pop'],label='Suicides per 100k people',marker='x',color='red',linestyle='solid',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Happiness Score'],label='Happiness Score',marker='o',linestyle='dashed',color='orange',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Health (Life Expectancy)']*15,label='Health (Life Expectancy)',marker='^',color='seagreen',linestyle='dotted',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Dystopia Residual']*10,label='Dystopia Residual',marker='D',color='teal',linestyle='dotted',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Freedom']*30,label='Freedom',marker='s',color='black',linestyle='dotted',linewidth=1)\n    plt.legend()\n    plt.show()","8c97ff85":"plot_happiness_suicide_2016()","af6f726c":"def plot_happiness_suicide_2015():\n    hp = pd.read_csv('..\/input\/world-happiness\/2015.csv')\n    hdf = hp[['Country','Happiness Score','Health (Life Expectancy)','Freedom','Dystopia Residual']]\n    hdf.rename(columns={\"Country\":\"country\"},inplace=True)\n    tdf = df[df['year']==2015]\n    tdf = tdf.groupby(['country']).mean()\n    tdf.reset_index(level=['country'],inplace=True)\n    finaldf = hdf.merge(tdf,how='inner',on='country')\n    finaldf.drop(['HDI for year','year'],axis=1,inplace=True)\n    plt.figure(figsize=(20,5))\n    plt.xticks(rotation=90)\n    plt.grid()\n    ax = plt.gca()\n    ax.set_facecolor('floralwhite')\n    plt.title('Does suicides depend on happiness factors ?')\n    plt.xlabel('country')\n    plt.plot(finaldf['country'],finaldf['suicides\/100k pop'],label='Suicides per 100k people',marker='x',color='red',linestyle='solid',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Happiness Score'],label='Happiness Score',marker='o',linestyle='dashed',color='orange',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Health (Life Expectancy)']*15,label='Health (Life Expectancy)',marker='^',color='seagreen',linestyle='dotted',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Dystopia Residual']*10,label='Dystopia Residual',marker='D',color='teal',linestyle='dotted',linewidth=1)\n    plt.plot(finaldf['country'],finaldf['Freedom']*30,label='Freedom',marker='s',color='black',linestyle='dotted',linewidth=1)\n    plt.legend()\n    plt.show()","90a3e78e":"plot_happiness_suicide_2015()","b8a4661a":"### Data Analysis"}}