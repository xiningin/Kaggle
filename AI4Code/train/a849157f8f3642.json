{"cell_type":{"03736848":"code","7bad4183":"code","2f44eeb5":"code","c2ac9df8":"code","496eb383":"code","864d3e56":"code","0a6e74b7":"code","1f84b713":"code","ca3261b2":"code","27daffc8":"code","e4e76a41":"code","73ba46c6":"code","45a9bbc9":"code","eabca4b8":"code","ef581e07":"code","104ae5c3":"markdown","d00681cb":"markdown","be685374":"markdown","f0481f23":"markdown"},"source":{"03736848":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt \nimport seaborn as sns\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7bad4183":"df = pd.read_csv('\/kaggle\/input\/breast-cancer-wisconsin-data\/data.csv')\ndf.head()","2f44eeb5":"df.info()","c2ac9df8":"df.describe()","496eb383":"df.isnull().sum()","864d3e56":"plt.figure(figsize=(10,10))\nsns.countplot(x = 'diagnosis',data = df)","0a6e74b7":"col = ['diagnosis','radius_mean', 'texture_mean', 'perimeter_mean',\n       'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',\n       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean']\n\nsns.pairplot(df[col],hue = 'diagnosis')","1f84b713":"plt.figure(figsize=(10,10))\nsns.scatterplot(x = df.radius_mean, y = df.texture_mean,hue = df.diagnosis)","ca3261b2":"for c in col:\n    plt.figure(figsize=(10,10))\n    sns.swarmplot(x='diagnosis' ,y = c, data = df)\n    plt.show()","27daffc8":"df.drop('Unnamed: 32', axis = 1, inplace = True)\nx = df.drop(columns = 'diagnosis')\ny = df.diagnosis\nx.head()","e4e76a41":"y.head()","73ba46c6":"#train_test_splitting of the dataset\nfrom sklearn.model_selection import train_test_split \nX_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)","45a9bbc9":"from sklearn.ensemble import AdaBoostClassifier\nadb = AdaBoostClassifier(base_estimator = None)\nadb.fit(X_train,y_train)","eabca4b8":"from sklearn.metrics import confusion_matrix,accuracy_score\ny_pred=adb.predict(X_test)\nprint(accuracy_score(y_test,y_pred)*100)","ef581e07":"print(confusion_matrix(y_test,y_pred))","104ae5c3":"** Training Model **","d00681cb":"** Splitting Data **","be685374":"# Data Visualization","f0481f23":"# Training Data"}}