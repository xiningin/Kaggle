{"cell_type":{"b3026ffa":"code","277e8f51":"code","84b56bd0":"code","25df200d":"code","2424473b":"code","01f4daa9":"code","b9e78b1f":"code","9b82d47d":"code","2bed47fa":"code","a7b4ec10":"code","c3b2859d":"code","aacc9769":"code","d8b3e037":"markdown","09b3ac0b":"markdown"},"source":{"b3026ffa":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","277e8f51":"import pandas as pd","84b56bd0":"twosigma_train=pd.read_json('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/train.json.zip')\nprint('Train Data : ',twosigma_train.shape)","25df200d":"twosigma_test=pd.read_json('\/kaggle\/input\/two-sigma-connect-rental-listing-inquiries\/test.json.zip')\nprint('Test Data : ',twosigma_test.shape)","2424473b":"print(twosigma_train.columns.to_list())\n","01f4daa9":"print(twosigma_train.interest_level.value_counts())","b9e78b1f":"twosigma_train.describe()","9b82d47d":"twosigma_train.head()","2bed47fa":"import matplotlib.pyplot as plt\nplt.style.use('ggplot')","a7b4ec10":"prices=twosigma_train.groupby('interest_level',as_index=False)['price'].median()","c3b2859d":"#barplot\nfig=plt.figure(figsize=(8,6))\nplt.bar(prices.interest_level,prices.price,color='blue',width=0.5,alpha=0.8)\n#set titles\nplt.xlabel('Interest level')\nplt.ylabel('Median price')\nplt.title('Median listing price across interest level')\nplt.show()","aacc9769":"plt.figure(figsize=(8,6))\nplt.scatter(x=twosigma_train['price'],y=twosigma_train['interest_level'],color='green',alpha=0.5)\nplt.xlabel('price')\nplt.ylabel('interest_level')\nplt.title('comparison b\/w price and interest level')\nplt.show()","d8b3e037":"kindly upvote the kernel if you find it useful! thanks!","09b3ac0b":"Finding median priceby interest level"}}