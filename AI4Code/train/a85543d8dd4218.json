{"cell_type":{"891c594f":"code","2ea84d91":"code","ade027b6":"code","f8333f81":"code","0398da74":"code","0cec5e55":"code","12d7ce04":"code","73cb96df":"code","2582a4b7":"code","aaa81c69":"code","827706bb":"code","5be81258":"code","75e22e9e":"code","693ee84e":"code","91b63948":"code","6e59e5bf":"code","28729f5c":"code","b5abd600":"code","1bb9f313":"code","9a76f003":"code","903dd81a":"code","bf769c2b":"code","ab381e04":"code","791ae9a8":"code","57e3e972":"code","10780fef":"code","1072d782":"code","e11e0255":"code","e9f87e47":"code","2d215c4a":"code","96298b9a":"code","6ab40989":"code","1c419b24":"code","5091524e":"code","b6861a19":"code","dbd6b029":"code","f8960596":"code","3e57422e":"code","4a46dd1c":"code","c749edc6":"code","a690d4e0":"code","f648e6ce":"code","364eb5d8":"code","353dcaf5":"code","f424c402":"code","6a6e4c37":"code","91e0be5a":"code","6ecc461b":"code","bef8767a":"code","2ffb6230":"code","a509789c":"markdown","d10e8b5b":"markdown"},"source":{"891c594f":"import pandas as pd \nimport numpy as np","2ea84d91":"import os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","ade027b6":"df= pd.read_csv(\"\/kaggle\/input\/tayara-tn-carscsv\/tayara_cars.csv\")","f8333f81":"df.head()","0398da74":"df.drop([\"Unnamed: 0\"],axis=1,inplace=True)\n","0cec5e55":"newCols = {'km':'Kms_Driven','annee':'year','marque':'brand','carburant':'Fuel_Type','boite':'Color','puissance':'Horse_pow','cylindre':'body_style'}\ndf.rename(columns=newCols, inplace=True)\ndf.info()\n","12d7ce04":"df.describe()","73cb96df":"df[['city','region']] = df.location.str.split(', ',expand=True)\ndf.drop('location',axis=1, inplace=True)\ndf.head()","2582a4b7":"#check for null values\ndf.isnull().sum()","aaa81c69":"\ndf.dropna()\n","827706bb":"df.drop(df[df['year']=='BMW'].index,inplace=True)\ndf = df[~df['year'].isnull()]\n\ndf['year']=df['year'].astype(int)\n","5be81258":"df.dtypes","75e22e9e":"#handling year column:","693ee84e":"df.year.describe()","91b63948":"#removing faulty years : cars that were made before 1800 and after 2021\nabsurd_year_past=df.year > 2021\nabsurd_year_future=df.year < 1800\nprint(absurd_year_past)\nprint(absurd_year_future)\nabsurd_year_past.unique()\nabsurd_year_future.unique()","6e59e5bf":"absurd_year=absurd_year_past|absurd_year_future","28729f5c":"df.drop(df[absurd_year].index,inplace=True)\n","b5abd600":"df['Current Year']=2021\ndf['nb_year']=df['Current Year']- df['year']\ndf=df.drop(['Current Year'],axis=1)\n\ndf.head()","1bb9f313":"df.describe(include='all')","9a76f003":"#handling Kms_driven","903dd81a":"\ndf.Kms_Driven.describe()\n","bf769c2b":"#as u can see we have negative values\ndrop_negatives=df.Kms_Driven < 0\ndf.drop(df[drop_negatives].index, inplace=True)\ndf.Kms_Driven.describe()","ab381e04":"#handling prices\ndf.price.describe()","791ae9a8":"#some people refer to 10 000dt as 10dt\nbelow100 = df.price < 100\ndf.loc[below100,'price'] *= 1000","57e3e972":"df.price.describe(include=\"all\")","10780fef":"import seaborn as sns\nsns.pairplot(df)","1072d782":"#date column serves no perpose\ndf.drop(columns=['date'],inplace=True)","e11e0255":"#handling horse power column\n\noutliers= df.loc[~df['Horse_pow'].astype(str).str.isdigit(), 'Horse_pow'].tolist() #finding the outlaws that aren't a null value\nprint(outliers)","e9f87e47":"df = df[~df['Horse_pow'].isin(outliers)]#removing outlaws from Horse power Column\n","2d215c4a":"df = df[~df['Horse_pow'].isnull()]#removing nulled value from Horse Pow Column\ndf['Horse_pow']=df['Horse_pow'].astype(int)#converting Horse Power Column Type to integer","96298b9a":"df.Horse_pow.describe()","6ab40989":"# 0 horse power is not logical so we're gonna assign the mean value to them\nzeroHP = df.Horse_pow == 0.0\n\ndf.loc[zeroHP,'Horse_pow']= df.Horse_pow.mean()","1c419b24":"df.Horse_pow.describe()","5091524e":"df.Fuel_Type.unique()","b6861a19":"#region is filled with Autre villes , so we're going to remove it and only keep the city column\ndf.drop([\"region\"],axis=1,inplace=True)\n","dbd6b029":"#making sure we have all the cities: 24\nprint(df.city.unique())\n\nlen(df.city.unique())","f8960596":"df.Color.unique()","3e57422e":"df.drop([\"Color\"],axis=1,inplace=True)\n","4a46dd1c":"df.brand.unique()","c749edc6":"df.model.nunique()","a690d4e0":"df.isnull().sum()","f648e6ce":"df = df[~df['Kms_Driven'].isnull()]\ndf = df[~df['price'].isnull()]\n","364eb5d8":"df.isnull().sum()","353dcaf5":"df.body_style.unique()","f424c402":"df['body_style'].describe()","6a6e4c37":"polo=df.loc[df['model']=='Polo']","91e0be5a":"df.drop([\"body_style\"],axis=1,inplace=True)\n","6ecc461b":"#data.drop([\"Unnamed: 0\"],axis=1,inplace=True)\ndata=data[data['Horse_pow']<20]\n\ndata.head()\n","bef8767a":"#eliminating the brands with less than 50 cars\ndata = df.groupby('brand').filter(lambda x: len(x) > 50)\ndata['brand'].value_counts()","2ffb6230":"data.to_csv(\"clean_tayara_cars.csv\")","a509789c":"i already filtered the cars with 0dt price tags and >=200 000dt while scraping the data from tayara because i noticed people put their phone number in there too    ","d10e8b5b":"we don't have multiple null values i'm assuming there won't be much hard in dropping them"}}