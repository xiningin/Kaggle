{"cell_type":{"e1148e45":"code","7688ef88":"code","5d2e7d01":"code","57a4f187":"code","a4692229":"code","545ce89b":"code","57bd5855":"code","fa9167c8":"code","807614be":"code","a588291f":"code","1abdf4c2":"code","06ffeca3":"code","620cb496":"code","9e71d62f":"markdown","faf41f24":"markdown"},"source":{"e1148e45":"#import Libraries\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\npd.set_option('display.max_column',None)\npd.set_option('display.max_row',None)","7688ef88":"audit_data  = pd.read_csv(\"https:\/\/raw.githubusercontent.com\/dphi-official\/Datasets\/master\/credit_risk\/training_set_labels.csv\" )\ntest_data = pd.read_csv('https:\/\/raw.githubusercontent.com\/dphi-official\/Datasets\/master\/credit_risk\/testing_set_labels.csv')","5d2e7d01":"audit_data.head()","57a4f187":"# checking Unique Values for each Column\nfor col in audit_data.columns:\n    print(col,':',audit_data[col].nunique())\n    print(audit_data[col].unique())\n    print('---'*3)","a4692229":"# Label Encoding\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encod_list=['checking_status','credit_history','purpose','savings_status','employment','personal_status','other_parties','property_magnitude','other_payment_plans','housing','job','own_telephone','foreign_worker']\n\nfor col in label_encod_list:\n    lenc=LabelEncoder()\n    audit_data[col]=lenc.fit_transform(audit_data[col])\n    test_data[col]=lenc.transform(test_data[col])\n    \naudit_data['class']=lenc.fit_transform(audit_data['class'])","545ce89b":"# checking for null values\naudit_data.isna().sum()","57bd5855":"# checking for Duplicates\naudit_data.duplicated().sum()","fa9167c8":"# checking whether Dataset is balanced or not\naudit_data['class'].value_counts(normalize=True)","807614be":"drop_col=['class']\ncol_need=['checking_status', 'duration','savings_status','other_payment_plans']","a588291f":"# assigning X and y\nX=audit_data.drop(drop_col,axis=1)\n#X=audit_data[col_need]\ny=audit_data['class']\n\n# train_test_split\nfrom sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.20, stratify=y,random_state=36)\n\n# XGB classifier\nimport xgboost as xgb\nclf= xgb.XGBClassifier(objective='reg:logistic',seed=36)\n\n# GridSearchCV\nfrom sklearn.model_selection import GridSearchCV\nparam_grid={'n_estimators':[100,200,500],'max_depth':[3,5,7] ,'eta':[0.1,0.01,0.001]}\nclf_cv=GridSearchCV(clf,cv=3,param_grid=param_grid,verbose=True,n_jobs=-1,scoring='accuracy')\n\nclf_cv.fit(X_train,y_train)\ny_predict=clf_cv.predict(X_test)\n\n# confusion matrix\nfrom sklearn.metrics import confusion_matrix\ncm=confusion_matrix(y_test,y_predict)\n\nprint(cm)\nprint(clf_cv.best_params_)\nprint(clf_cv.best_score_)","1abdf4c2":"clf1= xgb.XGBClassifier(objective='reg:logistic',seed=36,max_depth=5, n_estimators=200)\nclf1.fit(X_train,y_train)\nxgb.plot_importance(clf1)","06ffeca3":"\"\"\"from sklearn.feature_selection import RFECV\nselector=RFECV(clf1,cv=5)\nselector.fit(X_train,y_train)\nprint(selector.support_)\nprint(X_train.columns)\"\"\"","620cb496":"#drop_col=['foreign_worker','num_dependents','housing','residence_since','other_parties','job','installment_commitment','credit_history']\ntest_data=test_data\n#test_data=test_data[col_need]\ntest_predict=clf1.predict(test_data)\ntest_data['prediction']=test_predict\n\ntest_data['prediction']=lenc.inverse_transform(test_data['prediction'])\n\n\ntest_data['prediction'].to_csv('loanapplication.csv',index=False)","9e71d62f":"# Data Preprocessing","faf41f24":"# Context\nCredit risks refer to the risks of loss on a debt that occurs when the borrower fails to repay the principal and related interest amounts of a loan back to the lender on due dates.\n\n\n\nWhen a bank receives a loan application, based on the applicant\u2019s profile the bank has to make a decision for its approval or rejection. There are two types of risks associated with this decision:\n\n* If the applicant has good credit risk, i.e. is likely to repay the loan, then rejecting the loan results in a loss to the bank\n* If the applicant has bad credit risk, i.e. is unlikely to repay the loan, then approving the loan results in a loss to the bank\nIt may be assumed that the second risk is a greater risk, as the bank (or any other institution lending the money to an untrustworthy party) had a higher chance of not being paid back the borrowed amount.\n\nSo it's on the part of the bank or other lending authority to evaluate the risks associated with lending money to a customer.\n\n# Hackathon Link\nhttps:\/\/dphi.tech\/practice\/challenge\/38#problem\n\n# Problem Statement\nImagine a bank in your locality. The bank has realized that applying data science methodologies can help them focus their resources efficiently, make smarter decisions on credit risk calculations, and improve performance.\n\nEarlier they used to check the credit risk of the loan applicants manually by analyzing their bank-related data, which used to take months of time. But this time they want a smart data scientist who can automate this process.\n\n# Objective\nYou are required to build a machine learning model that helps you predict the credit risk of the loan applicants.\n\n# Evaluation Criteria\nSubmissions are evaluated using Accuracy Score.\n\n# Data Description\nThere are 20 attributes in the dataset. Some of them are mentioned below:\n\n1. checking_status: Status of the existing checking account\n2. duration: Duration in month\n3. credit_history: Credit history of the applicant\n4. purpose: Purpose of taking the earlier loans\n5. employment: Present employment since\n6. installment_commitment: Installment rate in percentage of disposable income\n7. personal_status: Personal status and sex\n8. other_parties: Other debtors\/guarantors\n9. residence_since: Present residence since\n10. other_payment_plans: Other installment plans\n11. existing_credits: Number of existing credits at this bank\n12. class: The target variable(good, bad)"}}