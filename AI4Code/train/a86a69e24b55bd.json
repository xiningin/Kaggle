{"cell_type":{"7af31062":"code","734658ec":"code","1367bf05":"code","e80cd0fc":"code","29c79590":"code","5f701b3f":"code","08eca72e":"code","aa479d97":"code","21a47f6a":"code","d963a027":"code","abc931df":"code","f3ffa87e":"code","1ac26905":"code","0d95318f":"code","c2f77a59":"code","6d6cbaf3":"code","5a5249c2":"code","a0fffcff":"code","c8be9e2c":"code","2d0dc6cf":"code","b1e794ea":"code","48ae96ed":"markdown","5ad39b68":"markdown","5de6a0c6":"markdown"},"source":{"7af31062":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","734658ec":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\nfrom sklearn.svm import SVR\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.preprocessing import StandardScaler\n\nsns.set_style(style='darkgrid')\npd.set_option('display.max_columns',None)","1367bf05":"df = pd.read_csv('..\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')\ndf.head()","e80cd0fc":"df.shape","29c79590":"df.drop('Serial No.',axis=1, inplace=True)","5f701b3f":"df.describe()","08eca72e":"sns.countplot(df['Research'])","aa479d97":"plt.figure(figsize = (10,10))\nsns.heatmap(df.corr(),annot=True, cmap='Blues')","21a47f6a":"df.columns","d963a027":"fts = ['GRE Score', 'TOEFL Score','SOP', 'LOR ', 'CGPA']\nfor ft in fts:\n    sns.distplot(df[ft])\n    plt.show()","abc931df":"sns.regplot(x='GRE Score',y='CGPA',data=df)","f3ffa87e":"exams =['GRE Score', 'TOEFL Score', 'University Rating', 'SOP', 'LOR ', 'CGPA']\nfor marks in exams:\n    sns.regplot(x=marks,y = 'Chance of Admit ',data=df)\n    plt.show()","1ac26905":"px.scatter(df, x ='GRE Score',y='Chance of Admit ',color='Research')","0d95318f":"x = df.drop('Chance of Admit ',axis=1)\ny = df['Chance of Admit ']","c2f77a59":"X_train, X_test, y_train, y_test = train_test_split(x,y,test_size=0.33, random_state = 10)","6d6cbaf3":"print(X_test.shape)\nprint(X_train.shape)\nprint(y_test.shape)\nprint(y_train.shape)","5a5249c2":"lin_reg = LinearRegression()\nlin_reg.fit(X_train,y_train)","a0fffcff":"scores = cross_val_score(lin_reg,X_test,y_test,cv=5,scoring='r2')","c8be9e2c":"scores.mean()","2d0dc6cf":"model = LinearRegression(normalize=True)\nmodel.fit(X_test, y_test)\nmodel.score(X_test, y_test)","b1e794ea":"print('Your chances are {}%'.format(round(model.predict([[305, 108, 4, 4.5, 4.5, 8.35, 0]])[0]*100, 1)))","48ae96ed":"## 80%","5ad39b68":"## Let's Predict!","5de6a0c6":"# GRE and CGPA clearly determine your chances of admission."}}