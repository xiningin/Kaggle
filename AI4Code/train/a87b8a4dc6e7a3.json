{"cell_type":{"311e809f":"code","625a1d89":"code","e54569b0":"code","6947ed9a":"code","734e7385":"code","5fac2ea2":"code","8fff1cbb":"code","99df6339":"code","48a57085":"code","98bedc09":"code","36074411":"code","664ba872":"code","6f451e6a":"code","7ed0f688":"code","695f9dc0":"code","ee087765":"code","0b5f1741":"code","ee64b5a8":"markdown","62f91c4a":"markdown"},"source":{"311e809f":"import pandas as pd\nfrom sklearn.ensemble import RandomForestClassifier\n\ntrain=pd.read_csv('..\/input\/train.csv')\ntest=pd.read_csv('..\/input\/test.csv')","625a1d89":"train.head()","e54569b0":"#Mapping male to 0 and female to 1\ntrain['Sex']=train['Sex'].map({'male':0,'female':1})\ntest['Sex']=test['Sex'].map({'male':0,'female':1})\ntest.head()","6947ed9a":"#Filling missing values of age with mean age value\nmedianAge=train.Age.median()\ntrain['Age'].fillna(medianAge, inplace=True)\ntrain['Age']=train['Age'].astype(int)\n\nmedianAge=test.Age.median()\ntest['Age'].fillna(medianAge, inplace=True)\ntest['Age']=test['Age'].astype(int)\ntest.head()","734e7385":"#Filling missing values of embarked with S and mapping\ntrain['Embarked'].fillna(train['Embarked'].mode()[0], inplace=True)\ntrain['Embarked']=train['Embarked'].map({'S':0,'Q':1,'C':2})\n\ntest['Embarked'].fillna(test['Embarked'].mode()[0], inplace=True)\ntest['Embarked']=test['Embarked'].map({'S':0,'Q':1,'C':2})","5fac2ea2":"#We drop cabin because more than 70% of the data are missing\nprint('Percentage of missing values in cabin in train data:',(train['Cabin'].isnull().sum()\/len(train['Cabin']))*100)\nprint('Percentage of missing values in cabin in test data:',(test['Cabin'].isnull().sum()\/len(test['Cabin']))*100)\ntrain.drop(['Cabin'], axis=1, inplace = True)\ntest.drop(['Cabin'],axis=1,inplace=True)","8fff1cbb":"#combining sibsp and parch to single family column\ntrain['fam']=train['SibSp']+train['Parch']+1\ntest['fam']=test['SibSp']+test['Parch']+1","99df6339":"#dropping unnecessary features\ntrain=train.drop('Ticket',axis=1)\ntrain=train.drop('SibSp',axis=1)\ntrain=train.drop('Parch',axis=1)\n\ntest=test.drop('Ticket',axis=1)\ntest=test.drop('SibSp',axis=1)\ntest=test.drop('Parch',axis=1)","48a57085":"test.head()","98bedc09":"#Extracting name titles and mapping\ntrain['Name']=train['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\ntitle_mapping = {\"Mr\": 0, \"Miss\": 1, \"Mrs\": 2, \n                 \"Master\": 3, \"Dr\": 3, \"Rev\": 3, \"Col\": 3, \"Major\": 3, \"Mlle\": 3,\"Countess\": 3,\n                 \"Ms\": 3, \"Lady\": 3, \"Jonkheer\": 3, \"Don\": 3, \"Dona\" : 3, \"Mme\": 3,\"Capt\": 3,\"Sir\": 3 }\ntrain['Name']=train['Name'].map(title_mapping)\n\ntest['Name']=test['Name'].map(title_mapping)\ntest['Name']=test['Name'].fillna(0)","36074411":"train['Fare']=train['Fare'].astype(int)\n\n#filling missing values with median\navgFare=test['Fare'].median()\ntest['Fare']=test['Fare'].fillna(avgFare)\ntest['Fare']=test['Fare'].astype(int)","664ba872":"test.isnull().sum()","6f451e6a":"train.isnull().sum()","7ed0f688":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(train.drop(['Survived','PassengerId'], axis=1), \n                                                    train['Survived'], test_size = 0.2, \n                                                    random_state = 0)","695f9dc0":"random_forest = RandomForestClassifier(n_estimators=100)\nrandom_forest.fit(X_train, Y_train)\n\nY_prediction = random_forest.predict(X_test)\n\nrandom_forest.score(X_train, Y_train)\nacc_random_forest = round(random_forest.score(X_train, Y_train) * 100, 2)\n\nprint('The accuracy of the Random Forest Classifier is',acc_random_forest)","ee087765":"ids = test['PassengerId']\npredictions = random_forest.predict(test.drop('PassengerId', axis=1))\n\n\noutput = pd.DataFrame({ 'PassengerId' : ids, 'Survived': predictions })\noutput.to_csv('submission.csv', index=False)","0b5f1741":"submission = pd.read_csv('submission.csv')\nsubmission.head(20)","ee64b5a8":"The data has been split into two groups:\n\ntraining set (train.csv)\n\ntest set (test.csv)\n\nI will be inputting the missing values with relevant information and will be using Random Forest Classifier to predict the survivors with 96% accuracy rate.","62f91c4a":"# **Don't forget to upvote if you find helpful. Thank you**"}}