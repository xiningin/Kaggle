{"cell_type":{"112dc3f4":"code","26e0fe89":"code","983175da":"code","8c55338a":"code","6617b25d":"code","efe0f00d":"code","b5ad8015":"code","228ae7b7":"code","03dcb35e":"code","5044615f":"code","a649a152":"code","f77848c3":"code","a320bb0e":"code","3bd7f72e":"code","3d5f8204":"code","ec07c620":"code","0d73d7aa":"code","395c2c4a":"code","7ec1947c":"code","4823ab8a":"code","d779b551":"markdown","cc4c5922":"markdown"},"source":{"112dc3f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","26e0fe89":"\n#excell dosylarini okumak icin kullandigim kodlar\ndf1 = pd.read_excel('\/kaggle\/input\/examresult\/py_mind.xlsx',sheet_name=None, ignore_index=True)\ndf2 = pd.read_excel('\/kaggle\/input\/examresult\/py_opinion.xlsx',sheet_name=None, ignore_index=True)\ndf3 = pd.read_excel('\/kaggle\/input\/examresult\/py_science.xlsx',sheet_name=None, ignore_index=True)\ndf4 = pd.read_excel('\/kaggle\/input\/examresult\/py_sense.xlsx',sheet_name=None, ignore_index=True)\n","983175da":"#sinif listeleri olusturdum\nnames1 = [list(df1.items())[i][0] for i in range(len(df1))]\nnames2 = [list(df2.items())[i][0] for i in range(len(df2))]\nnames2.remove('Blad11')\nnames3 = [list(df3.items())[i][0] for i in range(len(df3))]\nnames3.remove('Blad9')\nnames4 = [list(df4.items())[i][0] for i in range(len(df4))]\n","8c55338a":"keys = dict(zip(range(20),[pd.read_excel('\/kaggle\/input\/examresult\/py_mind.xlsx',\n                sheet_name = 'emrullah').loc[i,'Cevap A.'] for i in range(20)])) ","6617b25d":"fixlist1 = pd.DataFrame(dict(zip(names1,[pd.read_excel('\/kaggle\/input\/examresult\/py_mind.xlsx'     ,\n                          sheet_name=i, ignore_index=True).loc[:,'ogr.C'] for i in names1])))\nfixlist3 = pd.DataFrame(dict(zip(names3,[pd.read_excel('\/kaggle\/input\/examresult\/py_science.xlsx'  ,\n                          sheet_name=i, ignore_index=True).loc[:,'ogr.C'] for i in names3])))    \nfixlist4 = pd.DataFrame(dict(zip(names4,[pd.read_excel('\/kaggle\/input\/examresult\/py_sense.xlsx'    ,\n                          sheet_name=i, ignore_index=True).loc[:,'ogr.C'] for i in names4])))\n\nfixlist2={}\nfor i in names2:\n    if i == 'Ilhami':\n        fixlist21 = dict(zip([i], [pd.read_excel('\/kaggle\/input\/examresult\/py_opinion.xlsx'  ,\n                                sheet_name='Ilhami').loc[:,'ogr.c'] ]))\n        names2.remove('Ilhami')\n\nfixlist22 = dict(zip(names2,[pd.read_excel('\/kaggle\/input\/examresult\/py_opinion.xlsx'  ,\n                          sheet_name=i, ignore_index=True).loc[:,'ogr.C'] for i in names2]))\n    \nfixlist2 = {**fixlist21 ,  **fixlist22}    \n    \nfixlist2 = pd.DataFrame(fixlist2)\ns1 = (fixlist1)\ns2 = (fixlist2)\ns3 = (fixlist3)\ns4 = (fixlist4)\nnames2.append('Ilhami')","efe0f00d":"def class_add(res,i,clss):\n    res = res.set_value(23, i, clss)\n\nfor i in names1:\n    class_add(fixlist1,i,'py_mind')\nfor i in names2:\n    class_add(fixlist2,i,'py_opinion')\nfor i in names3:\n    class_add(fixlist3,i,'py_science')\nfor i in names4:\n    class_add(fixlist4,i,'py_sense')\n\nnames_top = names1 + names2 + names3 + names4","b5ad8015":"top = pd.merge(fixlist1,fixlist2, left_index=True, right_index=True)\ntop = pd.merge(top,fixlist3, left_index=True, right_index=True)\ntop = pd.merge(top,fixlist4, left_index=True, right_index=True)\ntop = top.drop([20,21,22])\n\nfor i in names_top:\n    for j in range(20):\n        if type(top.loc[j,i]) == float or type(top.loc[j,i]) == int:\n            top.loc[j,i] = 'Empty'\n\nprint(top)","228ae7b7":"#def range_answers(df,name):\n#    global k\n#    for k in range(100):\n#        if isinstance(df.loc[k,name], str):\n#            pass\n#        else:\n#            break","03dcb35e":"for i in names_top:\n    for j in range(20):        \n        if top.loc[j,i] == keys[j]:\n            top.loc[j,i] = 'True'\n        elif top.loc[j,i] == 'Empty' :\n            pass            \n        else:\n            top.loc[j,i] = 'False'","5044615f":"print(top)\n\nhigh = [[top.groupby(i).size()['True']*100\/20,i] for i in names_top]\nmax_high = [ [max(high).pop()] for i in range(7)]","a649a152":"print(\"-sinava kac kisi girmis: \",len(names_top) )\nprint('-en basrili 3 kisi: ', max_high)\nprint('-en cok yanlis yapan :',(top[:]=='False').sum().idxmax(),(top[:]=='False').sum().max())\nprint('-en cok dogru yapan :',(top[:]=='True').sum().idxmax(),(top[:]=='True').sum().max())\nprint('-en cok bos birakan :',(top[:]=='Empty').sum().idxmax(),(top[:]=='Empty').sum().max())\nprint('-ortalama dogru :',(top[:]=='True').sum().mean())\nprint('-ortalama yanlis :',(top[:]=='False').sum().mean())\nprint('-ortalama bos :',(top[:]=='Empty').sum().mean())","f77848c3":"\npy_mind = 0\npy_opinion = 0\npy_science = 0\npy_sense = 0\nfor i in names_top:\n    if top[i][23] == 'py_mind' :\n        py_mind += int(((top[i][:]=='True').sum()*100\/20))\n    elif top[i][23] == 'py_opinion':\n        py_opinion += int((top[i][:]=='True').sum()*100\/20)\n    elif top[i][23] == 'py_science':\n        py_science += int((top[i][:]=='True').sum()*100\/20)\n    elif top[i][23] == 'py_sense':\n        py_sense += int((top[i][:]=='True').sum()*100\/20)\n\n\n#print(py_mind,py_opinion,py_science,py_sense)\nprint('py_mind sinifinin ortalamasi: ', py_mind\/len(names1))\nprint('py_opinion sinifinin ortalamasi: ', py_opinion\/len(names2))\nprint('py_science sinifinin ortalamasi: ', py_science\/len(names3))\nprint('py_sense sinifinin ortalamasi: ', py_sense\/len(names4))\nprint()\nprint('en basarili sinif: py_science','\\ntoplam puani: ', py_science ,\n      '\\nortalama puani:',py_science\/len(names3))","a320bb0e":"mind = []\nopinion = []\nscience = []\nsense = []\nfor i in names_top:\n    if top[i][23] == 'py_mind' :\n        mind.append([int(((top[i][:]=='True').sum()*100\/20)),i])\n    elif top[i][23] == 'py_opinion' :\n        opinion.append([int(((top[i][:]=='True').sum()*100\/20)),i])\n    elif top[i][23] == 'py_science' :\n        science.append([int(((top[i][:]=='True').sum()*100\/20)),i])\n    elif top[i][23] == 'py_sense' :\n        sense.append([int(((top[i][:]=='True').sum()*100\/20)),i])\nprint()\nprint('py_mind, sinifinin en fazla puan alan ogrencisi: ', max(mind))\nprint('py_opinion, sinifinin en fazla puan alan ogrencisi: ', max(opinion))\nprint('py_science, sinifinin en fazla puan alan ogrencisi: ', max(science))\nprint('py_sense, sinifinin en fazla puan alan ogrencisi: ', max(sense))","3bd7f72e":"wrong_answers = [[(top.loc[i, 'emrullah' : 'Emrah']== 'False').sum(),i ] for i in range(20)]\ntrue_answers = [[(top.loc[i, 'emrullah' : 'Emrah']== 'True').sum(),i ] for i in range(20)]\nempty_answers = [[(top.loc[i, 'emrullah' : 'Emrah']== 'Empty').sum(),i ] for i in range(20)]\nprint('-en cok yanlis yapilan soru: ',max(wrong_answers)[1]+1,'.','\\n',\n      max(wrong_answers)[0],' kez yanlis yapilmistir',sep='')","3d5f8204":"print('\\n\\nSINIF BAZINDA EN COK YANLIS YAPILAN SORULAR\\n')\n\nn1 = [[(top.loc[i, names1]== 'False').sum(),i ] for i in range(20)]\nprint('-py_mind sinifinin en cok yanlis yaptigi soru: ',max(n1)[1]+1,'.','\\n',\n      max(n1)[0],' kez yanlis yapilmistir',sep='')\nn2 = [[(top.loc[i, names2]== 'False').sum(),i ] for i in range(20)]\nprint('-py_opinion sinifinin en cok yanlis yaptigi soru: ',max(n2)[1]+1,'.','\\n',\n      max(n2)[0],' kez yanlis yapilmistir',sep='')\nn3 = [[(top.loc[i, names3]== 'False').sum(),i ] for i in range(20)]\nprint('-py_science sinifinin en cok yanlis yaptigi soru: ',max(n3)[1]+1,'.','\\n',\n      max(n3)[0],' kez yanlis yapilmistir',sep='')\nn4 = [[(top.loc[i, names4]== 'False').sum(),i ] for i in range(20)]\nprint('-py_sense sinifinin en cok yanlis yaptigi soru: ',max(n4)[1]+1,'.','\\n',\n      max(n4)[0],' kez yanlis yapilmistir',sep='')","ec07c620":"x = [(wrong_answers[i][1])+1 for i in range(20)]\ny = [wrong_answers[i][0] for i in range(20)]\nplt.scatter(x,y,color='red',label='wrong_answers')\nx = [(true_answers[i][1])+1 for i in range(20)]\ny = [true_answers[i][0] for i in range(20)]\nplt.scatter(x,y,color='green',label='true_answers')\nx = [(empty_answers[i][1])+1 for i in range(20)]\ny = [empty_answers[i][0] for i in range(20)]\nplt.scatter(x,y,color='grey',label='empty_answers')\nplt.legend()\nplt.xlabel(\"question_number\")\nplt.ylabel('times')\nplt.title(\"answers scatter plot\")\nplt.show()","0d73d7aa":"x = [mind[i][1] for i in range(len(names1))]\ny = [mind[i][0] for i in range(len(names1))]\nplt.bar(x,y)\nplt.title(\"py_mind bar plot\")\nplt.ylabel(\"point\")\nplt.xlabel(\"names\")\nplt.show()\n\nx = [opinion[i][1] for i in range(len(names2))]\ny = [opinion[i][0] for i in range(len(names2))]\nplt.bar(x,y)\nplt.title(\"py_opnion bar plot\")\nplt.ylabel(\"point\")\nplt.xlabel(\"names\")\nplt.show()\n\nx = [science[i][1] for i in range(len(names3))]\ny = [science[i][0] for i in range(len(names3))]\nplt.bar(x,y)\nplt.title(\"py_science bar plot\")\nplt.ylabel(\"point\")\nplt.xlabel(\"names\")\nplt.show()\n\nx = [sense[i][1] for i in range(len(names4))]\ny = [sense[i][0] for i in range(len(names4))]\nplt.bar(x,y)\nplt.title(\"py_sense bar plot\")\nplt.ylabel(\"point\")\nplt.xlabel(\"names\")\nplt.show()\n\npoint_top = mind + opinion + science + sense\n\nx = [point_top[i][1] for i in range(len(names_top))]\ny = [point_top[i][0] for i in range(len(names_top))]\nplt.bar(x,y)\nplt.title(\"py_coders bar plot\")\nplt.ylabel(\"point\")\nplt.xlabel(\"names\")\nplt.show()","395c2c4a":"s1 = pd.DataFrame(s1).drop([20,21,22,23]).fillna(0)\ns2 = pd.DataFrame(s2).drop([20,21,22,23]).fillna(0)\ns3 = pd.DataFrame(s3).drop([20,21,22,23]).fillna(0)\ns4 = pd.DataFrame(s4).drop([20,21,22,23]).fillna(0)\ns3['Zerin'][18] = 0\ns3['Zerin'][19] = 0\n\ndef numeric(s_t,names_top):\n    for i in names_top:\n        for j in range(20):\n            if s_t[i][j] == 'A':\n                s_t[i][j] = 1\n            elif s_t[i][j] == 'B':\n                s_t[i][j] = 2\n            elif s_t[i][j] == 'C':\n                s_t[i][j] = 3\n            elif s_t[i][j] == 'D':\n                s_t[i][j] = 4\n            elif s_t[i][j] == 'E':\n                s_t[i][j] = 4\nnumeric(s1,names1)\nnumeric(s2,names2)\nnumeric(s3,names3)\nnumeric(s4,names4)","7ec1947c":"s1.plot(grid=True, alpha= 2, subplots = False,figsize=(10,10)) \nplt.xlabel('Question number')\nplt.ylabel('Choice') \nplt.title('py_mind marking scheme')\nplt.axis([0,20,0,4])  \ns2.plot(grid=True, alpha= 2, subplots = False,figsize=(10,10)) \nplt.xlabel('Question number')\nplt.ylabel('Choice') \nplt.title('py_opnion marking scheme')\nplt.axis([0,20,0,4]) \ns3.plot(grid=True, alpha= 2, subplots = False,figsize=(10,10)) \nplt.xlabel('Question number ')\nplt.ylabel('Choice') \nplt.title('py_science marking scheme')\nplt.axis([0,20,0,4]) \ns4.plot(grid=True, alpha= 2, subplots = False,figsize=(10,10)) \nplt.xlabel('Question number')\nplt.ylabel('Choice') \nplt.title('py_sense marking scheme')\nplt.axis([0,20,0,4])         \nplt.show()","4823ab8a":"labels = 'py_mind','py_opinion','py_science','py_sense'\nsizes = [py_mind\/len(names1)*100\/241.5,\npy_opinion\/len(names2)*100\/241.5,\npy_science\/len(names3)*100\/241.5,\npy_sense\/len(names4)*100\/241.5]\n\nexplode = (0,0,0.2,0)\nfig1,ax1 = plt.subplots()\nax1.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n        shadow=True, startangle=90)\nax1.axis('equal')\nplt.show()\n","d779b551":"eylul ayi ilk odevi, derte vermis oldugum odevi burdan fork ederek yaparsaniz sonuclari kontrol edebiliyorum. odevleri unutmayin bu hafta aldigimiz kararlarida. lutfen bu odev 07.09.2019 saat 24:00 a kadar bitirilsin. iyi calismalar. odevle ilgili yapilmasi gerekenler resim olarak gruba gonderilmistir, Datalari kendiniz ekleyebilir veya sorun yasarsaniz, datalari local calistirabilirisiniz. iyi calismalar","cc4c5922":"dosylarin tamamini okuyorum..."}}