{"cell_type":{"100773f5":"code","e9d3f81c":"code","36af079f":"code","7bad177a":"code","67fec378":"code","f1862f95":"code","7fa2dc6a":"code","f5b76d57":"code","07f65995":"code","367fa54e":"code","75df58cd":"code","91af47f4":"code","fcf3cdac":"code","6f9f1d3e":"code","62b79ad4":"code","56cccb33":"markdown","589e3985":"markdown","b5dc6052":"markdown","80e2c4fb":"markdown","f8c5f651":"markdown","52204dbd":"markdown","1abf75ea":"markdown","3f2a7368":"markdown","6435830f":"markdown","6d7ed49d":"markdown","e9521f8a":"markdown","b95d3a5b":"markdown"},"source":{"100773f5":"# RUN THIS CELL to perform standard imports:\nimport spacy\nnlp = spacy.load('en_core_web_sm')","e9d3f81c":"# Enter your code here:\nwith open('..\/input\/owlcreek\/owlcreek.txt') as f:\n    doc = nlp(f.read())\n\n","36af079f":"# Run this cell to verify it worked:\n\ndoc[:36]","7bad177a":"len(doc)","67fec378":"sents = [sent for sent in doc.sents]\nlen(sents)\n","f1862f95":"print(sents[1].text)\n","7fa2dc6a":"# NORMAL SOLUTION:\n\nfor token in sents[1]:\n    print(token.text, token.pos_, token.dep_, token.lemma_)","f5b76d57":"# CHALLENGE SOLUTION:\nfor token in sents[1]:\n    print(f'{token.text:{15}} {token.pos_:{5}} {token.dep_:{10}} {token.lemma_:{15}}')","07f65995":"# Import the Matcher library:\n\nfrom spacy.matcher import Matcher\nmatcher = Matcher(nlp.vocab)","367fa54e":"# Create a pattern and add it to matcher:\n\npattern = [{'LOWER': 'swimming'}, {'IS_SPACE': True, 'OP':'*'}, {'LOWER': 'vigorously'}]\n\nmatcher.add('Swimming', [pattern])","75df58cd":"# Create a list of matches called \"found_matches\" and print the list:\n\nfound_matches = matcher(doc)\nprint(found_matches)\n","91af47f4":"print(doc[1265:1290])\n","fcf3cdac":"print(doc[3600:3615])\n","6f9f1d3e":"for sent in sents:\n    if found_matches[0][1] < sent.end:\n        print(sent)\n        break\n\n\n","62b79ad4":"\nfor sent in sents:\n    if found_matches[1][1] < sent.end:\n        print(sent)\n        break\n\n","56cccb33":"**EXTRA CREDIT:<br>Print the *sentence* that contains each found match**","589e3985":"For this assessment we'll be using the short story [_An Occurrence at Owl Creek Bridge_](https:\/\/en.wikipedia.org\/wiki\/An_Occurrence_at_Owl_Creek_Bridge) by Ambrose Bierce (1890). <br>The story is in the public domain; the text file was obtained from [Project Gutenberg](https:\/\/www.gutenberg.org\/ebooks\/375.txt.utf-8).","b5dc6052":"**2. How many tokens are contained in the file?**","80e2c4fb":"**4. Print the second sentence in the document**<br> HINT: Indexing starts at zero, and the title counts as the first sentence.","f8c5f651":"___\n\n<a href='http:\/\/www.pieriandata.com'> <img src='..\/Pierian_Data_Logo.png' \/><\/a>\n___","52204dbd":"**7. Print the text surrounding each found match**","1abf75ea":"**1. Create a Doc object from the file `owlcreek.txt`**<br>\n> HINT: Use `with open('..\/TextFiles\/owlcreek.txt') as f:`","3f2a7368":"**3. How many sentences are contained in the file?**<br>HINT: You'll want to build a list first!","6435830f":"# NLP Basics Assessment","6d7ed49d":"**5. For each token in the sentence above, print its `text`, `POS` tag, `dep` tag and `lemma`**<br>\nCHALLENGE: Have values line up in columns in the print output.","e9521f8a":"**6. Write a matcher called 'Swimming' that finds both occurrences of the phrase \"swimming vigorously\" in the text**<br>\nHINT: You should include an `'IS_SPACE': True` pattern between the two words!","b95d3a5b":"### Great Job!"}}