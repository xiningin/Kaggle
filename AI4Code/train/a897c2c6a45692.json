{"cell_type":{"a4ac0479":"code","e10679bd":"code","571caf5c":"code","88d2cffa":"code","2f0c0a80":"code","7ef8f55a":"code","d8925e35":"code","a6731728":"code","6558789b":"code","fc623e07":"code","0069fb53":"code","d643d630":"code","e5a6c917":"code","4de3cb2d":"code","c03b9323":"code","b67c2e43":"code","0b636843":"code","6a77438b":"code","8e56c8c5":"code","1aa1c2fd":"code","e2290cc2":"code","5ddaf9d7":"code","3010e9e0":"code","f3226713":"code","72b91c4b":"code","60dd24c3":"code","96475b81":"code","767450d2":"code","0aa0bbef":"markdown","1483f3c4":"markdown","c5f10301":"markdown"},"source":{"a4ac0479":"from sklearn.datasets import load_iris\niris = load_iris() #loading \u0130ris data set from sklearn.datasets\n","e10679bd":"print(iris.keys()) #keys in the dataset","571caf5c":"print(iris['DESCR']) # summary of dataset","88d2cffa":"print(iris['target_names'])","2f0c0a80":"print(iris['feature_names'])","7ef8f55a":"print(type(iris['data']))","d8925e35":"print(iris['data'].shape) # two dimensions","a6731728":"print(iris['data'][:5])","6558789b":"print(iris['target'])\n# 150 values encoded with the numbers 0,1,2\n# 0: setosa , 1: versicolor, 2:virginica","fc623e07":"print(type(iris['target']))\n# 150 values encoded with the numbers 0,1,2\n# 0: setosa , 1: versicolor, 2:virginica","0069fb53":"#f(X) = y","d643d630":"from sklearn.model_selection import train_test_split","e5a6c917":"X_train, X_test, y_train, y_test = train_test_split(iris['data'],iris['target'],\n                                                   random_state=0)\n# train_test_split function we can get data from all classes by mixing dataset\n# we divide the dataset into two parts","4de3cb2d":"print(X_train.shape)\nprint(y_train.shape)","c03b9323":"print(X_test.shape)\nprint(y_test.shape)","b67c2e43":"import pandas as pd","0b636843":"iris_df = pd.DataFrame(X_train, columns= iris.feature_names)\n# we convert X_train numpySeries to pandas datafarame for see scatterplot","6a77438b":"from pandas.plotting import scatter_matrix","8e56c8c5":"# %matplotlib inline ","1aa1c2fd":"scatter_matrix(iris_df, c=y_train, figsize = (15,15), marker='o',\n              hist_kwds = {'bins':20}, s=80, alpha=0.8);\n#Our ML model can learn well because the three classes are well separated from each other.","e2290cc2":"from sklearn.neighbors import KNeighborsClassifier","5ddaf9d7":"knn = KNeighborsClassifier(n_neighbors=1)","3010e9e0":"knn.fit(X_train, y_train)","f3226713":"import numpy as np\nX_new = np.array([[5,2.9,1,0.2]]) # sepal length in cm  sepal width in cm petal length in cm petal width in cm\nX_new.shape\n# sklearn always expect two dimensional sques","72b91c4b":"pred = knn.predict(X_new) # predict kind of iris \nprint('Prediction class: ', pred)\nprint('Prediction tpye: ', iris['target_names'][pred])\n#","60dd24c3":"y_pred = knn.predict(X_test)\nprint(y_pred)","96475b81":"print(np.mean(y_pred == y_test))\n#the average of how much the predicted species are equal to the real species\n# we predict %97 correctly","767450d2":"print(knn.score(X_test,y_test))","0aa0bbef":"### Model Performance","1483f3c4":"We divide the data set into two parts, one of them is used to set up the ML model (training data) and the second part is used to evaluate how the model works(test data).","c5f10301":"## Creating Model"}}