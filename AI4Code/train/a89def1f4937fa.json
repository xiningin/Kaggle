{"cell_type":{"542023de":"code","5b5f3373":"code","88b2f0b2":"code","46e905c1":"code","08e308c5":"code","82bda613":"code","7cac8831":"code","f83ebd08":"code","ab0ca70b":"code","cae875b0":"code","2a133cd8":"code","383fc8b2":"code","31f02d96":"code","c29a2ff6":"code","3c8a72fe":"markdown","816b0d15":"markdown","76c930b8":"markdown","afbc7acc":"markdown","7eda83cc":"markdown","3e721331":"markdown","2a943c05":"markdown","7e672df9":"markdown"},"source":{"542023de":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","5b5f3373":"train_df=pd.read_csv('..\/input\/nlp-getting-started\/train.csv')\ntest_df=pd.read_csv('..\/input\/nlp-getting-started\/test.csv')","88b2f0b2":"print(train_df.shape)\ntrain_df.head()","46e905c1":"print(test_df.shape)\ntest_df.head()","08e308c5":"train_df.drop(columns=['id',\"keyword\",'location'],inplace=True,axis=0)\ntrain_df.head()","82bda613":"test_df.drop(columns=['id','keyword','location'],inplace=True)\ntest_df.head()","7cac8831":"from sklearn.model_selection import train_test_split\nx=train_df['text']\ny=train_df['target']\nx_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,test_size=0.2)","f83ebd08":"from sklearn.feature_extraction.text import CountVectorizer\nvectorizer=CountVectorizer()\nx_vector=vectorizer.fit_transform(x_train)","ab0ca70b":"from sklearn.linear_model import LogisticRegression\nlr=LogisticRegression(max_iter=500)\nlr.fit(x_vector,y_train)\npred_y=lr.predict(vectorizer.transform(x_test))","cae875b0":"from sklearn.metrics import accuracy_score\nscore_linear=accuracy_score(y_test,pred_y)\nscore_linear","2a133cd8":"from sklearn.naive_bayes import MultinomialNB\nnb=MultinomialNB(alpha=1)\nnb.fit(x_vector,y_train)\ny_pred=nb.predict(vectorizer.transform(x_test))\nscore_nb=accuracy_score(y_test,y_pred)\nscore_nb","383fc8b2":"from sklearn.svm import SVC\nsvm=SVC(C=10,gamma=0.01,kernel='rbf')\nsvm.fit(x_vector,y_train)\ny_pred=svm.predict(vectorizer.transform(x_test))\nscore_svm=accuracy_score(y_test,y_pred)\nscore_svm","31f02d96":"prediction=lr.predict(vectorizer.transform(test_df['text']))\nsubmission=pd.read_csv('\/kaggle\/input\/nlp-getting-started\/sample_submission.csv')\nsubmission['target']=prediction\nsubmission","c29a2ff6":"submission.to_csv('submission.csv',index=False)","3c8a72fe":"### Linear regression Model","816b0d15":"### From above all models Linear regression gives best accuracy of 81%","76c930b8":"### Feature extraction through Count Vectorization scikit learn library","afbc7acc":"### Naive Bayes Model","7eda83cc":"### SVM model","3e721331":"## Now done with feature  extraction now train our models","2a943c05":"### We can see clearly that Keyword and Location Features Have Nan values and they are no use to predict our model, so we will drop these from both train and test dataframe","7e672df9":"### Creating training and testing data"}}