{"cell_type":{"01615034":"code","ebcbe1a6":"code","33e1815f":"code","e9b2ff35":"code","fc1edfe6":"code","46feac39":"code","a21c51e2":"code","93fd12cd":"code","0c55249f":"code","ea67852d":"code","131ae789":"code","c888e859":"code","5a9c1c93":"code","d1a75c5c":"code","a6f0c19f":"code","e6517af4":"code","3529f46c":"code","ae728652":"code","bab7d77a":"code","4f5ecfb1":"code","537c450e":"code","f53886d3":"markdown","b46c0080":"markdown","e2e9acde":"markdown","9ece7f91":"markdown","6f1078e9":"markdown","6a6e49a6":"markdown","e513076b":"markdown","657d5089":"markdown","0d5e0d77":"markdown","0d496eb4":"markdown","736afe09":"markdown","e7ba3195":"markdown","d30e64b2":"markdown","b23fb903":"markdown","006f36b3":"markdown"},"source":{"01615034":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","ebcbe1a6":"%%capture\n!pip install chart-studio","33e1815f":"# Importing libraries\nimport os\nimport warnings\nwarnings.filterwarnings('ignore')\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight') \n# Above is a special style template for matplotlib, highly useful for visualizing time series data\n%matplotlib inline\nfrom pylab import rcParams\nfrom chart_studio import plotly as py\nfrom plotly import tools\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode(connected=True)\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport statsmodels.api as sm\nfrom numpy.random import normal, seed\nfrom scipy.stats import norm\nfrom statsmodels.tsa.arima_model import ARMA\nfrom statsmodels.tsa.stattools import adfuller\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.arima_process import ArmaProcess\nfrom statsmodels.tsa.arima_model import ARIMA\nimport math\nfrom sklearn.metrics import mean_squared_error\nprint(os.listdir(\"..\/input\"))","e9b2ff35":"tesla = pd.read_csv('..\/input\/tesla-latest-stock-data-29-jun10-to-14-oct21\/Tesla_Latest_Stock_Data.csv', index_col='Date', parse_dates=['Date'])\ntesla.head()","fc1edfe6":"tesla.tail(10)","46feac39":"tesla.isna().sum()","a21c51e2":"tesla['2010':'2021'].plot(subplots=True, figsize=(10,12))\nplt.title('Tesla stock attributes from 2012 to 2021')\nplt.savefig('stocks.png')\nplt.show()","93fd12cd":"tesla['Change'] = tesla.High.div(tesla.High.shift())\ntesla['Change'].plot(figsize=(20,8))","0c55249f":"tesla['Return'] = tesla.Change.sub(1).mul(100)\ntesla['Return'].plot(figsize=(20,8))","ea67852d":"tesla.High.pct_change().mul(100).plot(figsize=(20,6)) # Another way to calculate returns","131ae789":"tesla.High.diff().plot(figsize=(20,6))","c888e859":"# OHLC chart of October 2021\ntrace = go.Ohlc(x=tesla['10-2021'].index,\n                open=tesla['10-2021'].Open,\n                high=tesla['10-2021'].High,\n                low=tesla['10-2021'].Low,\n                close=tesla['10-2021'].Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')","5a9c1c93":"# OHLC chart of 2021\ntrace = go.Ohlc(x=tesla['2021'].index,\n                open=tesla['2021'].Open,\n                high=tesla['2021'].High,\n                low=tesla['2021'].Low,\n                close=tesla['2021'].Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')\n\n","d1a75c5c":"# OHLC chart from 2010 to 2021\ntrace = go.Ohlc(x=tesla.index,\n                open=tesla.Open,\n                high=tesla.High,\n                low=tesla.Low,\n                close=tesla.Close)\ndata = [trace]\niplot(data, filename='simple_ohlc')","a6f0c19f":"# Candlestick chart of October 2021\ntrace = go.Candlestick(x=tesla['2021'].index,\n                open=tesla['2021'].Open,\n                high=tesla['2021'].High,\n                low=tesla['2021'].Low,\n                close=tesla['2021'].Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')","e6517af4":"# Candlestick chart of 2021\ntrace = go.Candlestick(x=tesla['2021'].index,\n                open=tesla['2021'].Open,\n                high=tesla['2021'].High,\n                low=tesla['2021'].Low,\n                close=tesla['2021'].Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')","3529f46c":"# Candlestick chart of 2010-2021\ntrace = go.Candlestick(x=tesla.index,\n                open=tesla.Open,\n                high=tesla.High,\n                low=tesla.Low,\n                close=tesla.Close)\ndata = [trace]\niplot(data, filename='simple_candlestick')\n\n","ae728652":"# Autocorrelation of closing price of facebook stocks\nplot_acf(tesla[\"Close\"],lags=25)\nplt.show()\n\n","bab7d77a":"# Partial Autocorrelation of closing price of facebook stocks\nplot_pacf(tesla[\"Close\"],lags=25)\nplt.show()","4f5ecfb1":"# Let's take facebook stocks High for this\ntesla[\"High\"].plot(figsize=(16,8))","537c450e":"# Now, for decomposition.\nrcParams['figure.figsize'] = 11, 9\ndecomposed_tesla_volume = sm.tsa.seasonal_decompose(tesla[\"High\"],freq=360) # The frequncy is annual\nfigure = decomposed_tesla_volume.plot()\nplt.show()","f53886d3":"# **************To be continued************","b46c0080":"\n# Candlestick charts\n\n*     Candlestick charts are used by traders to determine possible price movement based on past patterns.\n*     Candlesticks are useful when trading as they show four price points (open, close, high, and low) throughout the period of time the trader specifies.\n\n**To understand the chart,check this video:** Understanding Candlestick Charts for Beginners\n","e2e9acde":"# Statistics","9ece7f91":"**So, there are no mising values.**","6f1078e9":"## Percent change","6a6e49a6":"\n# Time series decomposition and Random walks\u00b6\n\n**Trends, seasonality and noise**\n\nThese are the components of a **time series**\n\n*     Trend - Consistent upwards or downwards slope of a time series\n*     Seasonality - Clear periodic pattern of a time series(like sine funtion)\n*     Noise - Outliers or missing values\n\n","e513076b":"# Stock returns","657d5089":"# Autocorrelation","0d5e0d77":"# Partial Autocorrelation","0d496eb4":"\n# Autocorrelation and Partial Autocorrelation\n\n*     Autocorrelation - The autocorrelation function (ACF) measures how a series is correlated with itself at different lags.\n\n*     Partial Autocorrelation - The partial autocorrelation function can be interpreted as a regression of the series against its past lags. The terms can be interpreted the same way as a standard linear regression, that is the contribution of a change in that particular lag while holding others constant.\n\n**Source: Quora**\n","736afe09":"# Absolute change in successive rows\n","e7ba3195":"# OHLC charts\n\nAn OHLC chart is any type of price chart that shows the open, high, low and close price of a certain time period. Open-high-low-close Charts (or OHLC Charts) are used as a trading tool to visualise and analyse the price changes over time for securities, currencies, stocks, bonds, commodities, etc. OHLC Charts are useful for interpreting the day-to-day sentiment of the market and forecasting any future price changes through the patterns produced.\n\n**Check this video to know understand the chart** : OHLC Charts Explained\n","d30e64b2":"# Visualizing the datasets","b23fb903":"**Here, only 0th, 1st,22th, 25th  lag are statistically significant.**\n","006f36b3":"**Reference:**\n\n*     https:\/\/www.kaggle.com\/thebrownviking20\/everything-you-can-do-with-a-time-series\/notebook\n*     https:\/\/www.investopedia.com\/articles\/active-trading\/092315\/5-most-powerful-candlestick-patterns.asp\n*     https:\/\/www.kaggle.com\/taronzakaryan\/predicting-stock-price-using-lstm-model-pytorch\/notebook\n*     https:\/\/www.kaggle.com\/faressayah\/stock-market-analysis-prediction-using-lstm\/notebook\n*     https:\/\/www.kaggle.com\/raoulma\/ny-stock-price-prediction-rnn-lstm-gru\/notebook\n*     https:\/\/www.kaggle.com\/pierpaolo28\/stock-market-analysis-and-time-series-prediction\/notebook\n*     https:\/\/www.kaggle.com\/parulpandey\/getting-started-with-time-series-using-pandas\n\n"}}