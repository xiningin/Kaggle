{"cell_type":{"215af7b1":"code","83b6eabb":"code","3557f616":"code","efda0f25":"code","58c86d05":"code","4d44739c":"code","d07c15bd":"code","d74b51cb":"code","47a655eb":"code","964b874a":"code","6c48e75e":"code","c2260772":"code","8bb0cb7c":"code","d2f1ba62":"code","f908142f":"markdown","b2aac264":"markdown","2e61f8be":"markdown","4c79e817":"markdown","64bbb797":"markdown","946dec93":"markdown","beb2ccc1":"markdown","8bb95d9f":"markdown","4ab26a5d":"markdown"},"source":{"215af7b1":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","83b6eabb":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","3557f616":"train_data = pd.read_csv(\"\/kaggle\/input\/loan-prediction-based-on-customer-behavior\/Training Data.csv\")","efda0f25":"train_data.head()","58c86d05":"train_data.shape","4d44739c":"train_data[\"Profession\"]=pd.factorize(train_data.Profession)[0]\ntrain_data[\"CITY\"]=pd.factorize(train_data.CITY)[0]\ntrain_data[\"STATE\"]=pd.factorize(train_data.STATE)[0]\ntrain_data[\"Married\/Single\"]=pd.factorize(train_data['Married\/Single'])[0]\ntrain_data[\"House_Ownership\"]=pd.factorize(train_data.House_Ownership)[0]\ntrain_data[\"Car_Ownership\"]=pd.factorize(train_data.Car_Ownership)[0]","d07c15bd":"xtrain=train_data.drop(\"Risk_Flag\",axis=1)\nytrain=train_data[\"Risk_Flag\"]","d74b51cb":"from sklearn.model_selection import train_test_split","47a655eb":"X_train, X_test, y_train, y_test = train_test_split(xtrain, ytrain, test_size=0.2)","964b874a":"from sklearn.tree import DecisionTreeClassifier\nDTClassifier= DecisionTreeClassifier(criterion='entropy', random_state=0)\nDTClassifier.fit(X_train,y_train)","6c48e75e":"y_pred= DTClassifier.predict(X_test)","c2260772":"y_pred","8bb0cb7c":"from sklearn.metrics import roc_auc_score","d2f1ba62":"auc = roc_auc_score(y_test, y_pred)\nprint(auc)","f908142f":"# Predict on test_data set","b2aac264":"# Drop the dependent variable from the train dataset","2e61f8be":"# Check How Dataset Looks Like","4c79e817":"# Train\/Test Split","64bbb797":"# Evaluate based on ROC_AUC ","946dec93":"# Import Python Libraries","beb2ccc1":"# Convert datatype of selected fields","8bb95d9f":"# Train your model","4ab26a5d":"# Import Datasets"}}