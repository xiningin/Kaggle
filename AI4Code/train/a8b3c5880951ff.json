{"cell_type":{"f0fe556c":"code","5d6e3a01":"code","22b13ad2":"code","3672584a":"code","7a0fbef0":"code","b913ed6d":"code","4ff922f2":"code","c26da333":"code","8eaf2b20":"code","b6a1a7a4":"code","efb81279":"code","e400174b":"code","908fed73":"markdown","81b0ba76":"markdown","fbb18537":"markdown","7d292027":"markdown","7c8baabe":"markdown","a46f49e2":"markdown","3bf06a44":"markdown","2e81ab84":"markdown","07d3c78c":"markdown","aef77034":"markdown","8f62ebd0":"markdown"},"source":{"f0fe556c":"import numpy as np \nimport pandas as pd\nimport os\nimport matplotlib.pylab as plt\n%matplotlib inline\nfrom matplotlib.pylab import rcParams\nrcParams['figure.figsize'] = 15, 6\nprint(os.listdir(\"..\/input\"))\nfrom statistics import mean \n","5d6e3a01":"import plotly.plotly as py\nimport plotly.graph_objs as go\nimport plotly.figure_factory as ff\nimport plotly.offline as py\nfrom plotly import tools\n\npy.init_notebook_mode(connected=True)","22b13ad2":"df = pd.read_csv(\"..\/input\/Iris.csv\")\ntable = ff.create_table(df)\npy.iplot(table, filename='jupyter-table1')","3672584a":"set(df[\"Species\"])","7a0fbef0":"df.isnull().sum()","b913ed6d":"df['Species'].value_counts()","4ff922f2":"df_setosa=df[df['Species']=='Iris-setosa']\ndf_virginica=df[df['Species']=='Iris-virginica']\ndf_versicolor=df[df['Species']=='Iris-versicolor']\n","c26da333":"setosa = go.Scatter(x = df['SepalLengthCm'][df.Species =='Iris-setosa'], y = df['SepalWidthCm'][df.Species =='Iris-setosa']\n                   , mode = 'markers', name = 'setosa')\nversicolor = go.Scatter(x = df['SepalLengthCm'][df.Species =='Iris-versicolor'], y = df['SepalWidthCm'][df.Species =='Iris-versicolor']\n                   , mode = 'markers', name = 'versicolor')\nvirginica = go.Scatter(x = df['SepalLengthCm'][df.Species =='Iris-virginica'], y = df['SepalWidthCm'][df.Species =='Iris-virginica']\n                   , mode = 'markers', name = 'virginica')\ndata = [setosa, versicolor, virginica]\nfig = dict(data=data)\npy.iplot(fig, filename='styled-scatter')","8eaf2b20":"setosa = go.Scatter(x = df['PetalLengthCm'][df.Species =='Iris-setosa'], y = df['PetalWidthCm'][df.Species =='Iris-setosa']\n                   , mode = 'markers', name = 'setosa')\nversicolor = go.Scatter(x = df['PetalLengthCm'][df.Species =='Iris-versicolor'], y = df['PetalWidthCm'][df.Species =='Iris-versicolor']\n                   , mode = 'markers', name = 'versicolor')\nvirginica = go.Scatter(x = df['PetalLengthCm'][df.Species =='Iris-virginica'], y = df['PetalWidthCm'][df.Species =='Iris-virginica']\n                   , mode = 'markers', name = 'virginica')\ndata = [setosa, versicolor, virginica]\nfig = dict(data=data)\npy.iplot(fig, filename='styled-scatter')","b6a1a7a4":"trace0 = go.Box(y=df['PetalWidthCm'][df['Species'] == 'Iris-setosa'],boxmean=True, name = 'setosa')\n\ntrace1 = go.Box(y=df['PetalWidthCm'][df['Species'] == 'Iris-versicolor'],boxmean=True, name = 'versicolor')\n\ntrace2 = go.Box(y=df['PetalWidthCm'][df['Species'] == 'Iris-virginica'],boxmean=True, name = 'virginica')\n\ndata = [trace0, trace1, trace2]\npy.iplot(data)","efb81279":"trace1 = go.Scatter(\n    y = df_setosa[\"SepalLengthCm\"],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color = 300, #set color equal to a variable\n        colorscale='Viridis',\n        showscale=True\n    )\n)\n\ntrace2 = go.Scatter(\n    y = df_setosa[\"SepalWidthCm\"],\n    mode='markers',\n    marker=dict(\n        size=16,\n        color = 200, #set color equal to a variable\n        colorscale='Viridis',\n        showscale=True\n    )\n)\n\n\ndata = [trace1,trace2]\n\npy.iplot(data, filename='scatter-plot-with-colorscale')","e400174b":"\nclasses=np.unique(df['Species'].values).tolist()\nclass_code={classes[k]: k for k in range(3)}\ncolor_vals=[class_code[cl] for cl in df['Species']]\npl_colorscale=[[0.0, '#19d3f3'],\n               [0.333, '#19d3f3'],\n               [0.333, '#e763fa'],\n               [0.666, '#e763fa'],\n               [0.666, '#636efa'],\n               [1, '#636efa']]\n\ntext=[df.loc[ k, 'Species'] for k in range(len(df))]\n\ntrace1 = go.Splom(dimensions=[dict(label='sepal length',\n                                 values=df['SepalLengthCm']),\n                            dict(label='sepal width',\n                                 values=df['SepalWidthCm']),\n                            dict(label='petal length',\n                                 values=df['PetalLengthCm']),\n                            dict(label='petal width',\n                                 values=df['PetalWidthCm'])],\n                text=text,\n                #default axes name assignment :\n                #xaxes= ['x1','x2',  'x3'],\n                #yaxes=  ['y1', 'y2', 'y3'], \n                marker=dict(color=color_vals,\n                            size=7,\n                            colorscale=pl_colorscale,\n                            showscale=False,\n                            line=dict(width=0.5,\n                                      color='rgb(230,230,230)'))\n                )\n\naxis = dict(showline=True,\n          zeroline=False,\n          gridcolor='#fff',\n          ticklen=4)\n\nlayout = go.Layout(\n    title='Iris Data set',\n    dragmode='select',\n    width=600,\n    height=600,\n    autosize=False,\n    hovermode='closest',\n    plot_bgcolor='rgba(240,240,240, 0.95)',\n    xaxis1=dict(axis),\n    xaxis2=dict(axis),\n    xaxis3=dict(axis),\n    xaxis4=dict(axis),\n    yaxis1=dict(axis),\n    yaxis2=dict(axis),\n    yaxis3=dict(axis),\n    yaxis4=dict(axis)\n)\n\nfig1 = dict(data=[trace1], layout=layout)\npy.iplot(fig1, filename='splom-iris1')","908fed73":"# Scatterplot Matrix in Iris Dataset","81b0ba76":"# Sepal Length and Width with each target variable","fbb18537":"# Boxplot to understan better","7d292027":"# Plotly Library\n## We are using offline features of plotly\n\n\n#### To install, execute this command\npip install plotly","7c8baabe":"### Here Species column is target. We need to predict. So lets us find the unique target in Species","a46f49e2":"# Visualization on Iris Dataset by using Plotly\n\n## Basic visulization has been implemented in this notebook","3bf06a44":"# Reading the data with help of pandas","2e81ab84":"#### Lets us find there is any null value in dataset","07d3c78c":"# Petal Length and Width with each target variable","aef77034":"### Thanks for reading the notebook\n## Plz Upvote and comment for your suggestion","8f62ebd0":"#### Let us find how many data is there for Iris-setosa, Iris-versicolor, Iris-virginica. Whether data is equally separated or not?"}}