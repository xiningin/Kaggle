{"cell_type":{"f36eda71":"code","83fc95fe":"code","a4a74ace":"code","ab87f96e":"code","64947796":"code","0821aec8":"code","6a366a9f":"code","6795380b":"code","e6e7d0df":"code","c2518e1a":"code","6061e321":"code","d0be7c4a":"code","414f1f91":"code","c4f86733":"code","14e65cec":"code","4106e3d0":"code","e9f457b3":"code","878f5199":"code","8c5bc68d":"code","744edeee":"code","65526014":"code","272c24e9":"code","d39a8848":"code","e2016cc5":"code","7fe0d395":"code","5f9ee262":"code","7b99c26d":"code","090a2914":"markdown","b9c272fe":"markdown","53e879ea":"markdown","eb7095af":"markdown","2d53909a":"markdown","5a71a719":"markdown","c03fb83b":"markdown","20005339":"markdown","e1f7eab4":"markdown","a0db0aa0":"markdown","a79c5e8b":"markdown","db21aa5d":"markdown","a936d079":"markdown","d648df05":"markdown","d6a80776":"markdown"},"source":{"f36eda71":"# Work with Data - the main Python libraries\nimport numpy as np\nimport pandas as pd\n\n# For import data from API\nimport requests\n\n# Visualization\nimport matplotlib.pyplot as plt\n\n# Modeling and Prediction\nfrom fbprophet import Prophet\nfrom fbprophet.make_holidays import make_holidays_df\nfrom fbprophet.diagnostics import cross_validation, performance_metrics\nfrom fbprophet.plot import plot_cross_validation_metric\nimport holidays\n\nimport warnings\nwarnings.simplefilter('ignore')","83fc95fe":"# Download data vai API from the Portal of RNBO of Ukraine \nfor filename in ['main-data?mode=ukraine&fbclid=IwAR1vNXEE0nkmorUmGP4StG4cLrj1Z9VoX3c3Bi8dfltr0elgOj4b0M3ONvk']:\n    print(f'Download daily data from the Portal of RNBO of Ukraine')\n    url = f'https:\/\/api-covid19.rnbo.gov.ua\/charts\/{filename}'\n    myfile = requests.get(url)\n    open(filename, 'wb').write(myfile.content)\n    \ndf_data = pd.read_json('main-data?mode=ukraine&fbclid=IwAR1vNXEE0nkmorUmGP4StG4cLrj1Z9VoX3c3Bi8dfltr0elgOj4b0M3ONvk')\ndf_data","a4a74ace":"# Display the last 10 rows of the dataframe \"df_data\"\ndf_data.tail(10)","ab87f96e":"# Calculation daily data for number of confirmed cases\ndf_data['n_confirmed'] = df_data['confirmed'].diff()","64947796":"# Filtering the missing data\ndata = df_data[['dates','n_confirmed']].dropna().reset_index(drop=True)\ndata['n_confirmed'] = data['n_confirmed'].astype('int')\ndata.tail(5)","0821aec8":"# Build the plot\ndata['n_confirmed'].plot()","6a366a9f":"df_data['n_deaths'] = df_data['deaths'].diff()","6795380b":"data = df_data[['dates','n_deaths']].dropna().reset_index(drop=True)\ndata['n_deaths'] = data['n_deaths'].astype('int')\ndata.tail(5)","e6e7d0df":"data['n_deaths'].plot()","c2518e1a":"df_data['n_recovered'] = df_data['recovered'].diff()","6061e321":"data = df_data[['dates','n_recovered']].dropna().reset_index(drop=True)\ndata['n_recovered'] = data['n_recovered'].astype('int')\ndata.tail(5)","d0be7c4a":"data['n_recovered'].plot()","414f1f91":"# Prepairing data for modeling with Prophet\ndata.columns = ['ds', 'y']\ndata.tail()","c4f86733":"# Removing zero values\ndata = data[data['y'] > 0].reset_index(drop=True)\ndata","14e65cec":"# Build the plot for July\ndf = data[(data['ds'] >= '2020-04-01') & (data['ds'] < '2020-06-01')]\ndf['y'].plot()","4106e3d0":"# The smallest value\ndf.loc[73,:]","e9f457b3":"# Selection data with the biggest wave\ndf2 = data[73:].reset_index(drop=True)\ndf2.head()","878f5199":"# Build Prophet model\nmodel = Prophet()\n\n# Training model for all data\nmodel.fit(data)","8c5bc68d":"# Build Prophet model with parameters ans structure \n# from the notebook https:\/\/www.kaggle.com\/vbmokin\/covid-19-in-ukraine-eda-forecasting \n# but without holidays\nmodel2 = Prophet(daily_seasonality=True, weekly_seasonality=False, yearly_seasonality=False, \n                changepoint_range=1, changepoint_prior_scale = 0.2)\nmodel2.add_seasonality(name='weekly', period=7, fourier_order=12, \n                      mode = 'multiplicative', prior_scale = 0.24)\nmodel2.add_seasonality(name='triply', period=3, fourier_order=2, \n                      mode = 'multiplicative', prior_scale = 0.15)\n\n# Training model for df2\nmodel2.fit(df2)","744edeee":"# Make a forecast for 7 days ahead\nfuture = model.make_future_dataframe(periods = 7)\nforecast = model.predict(future)","65526014":"# Draw plot of the values with forecasting data\nfigure = model.plot(forecast, xlabel = 'Date', ylabel = 'Number of confirmed cases')","272c24e9":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\nfigure_component = model.plot_components(forecast)","d39a8848":"# Ouput the prediction for the next 7 days\nforecast[['yhat_lower', 'yhat', 'yhat_upper']] = forecast[['yhat_lower', 'yhat', 'yhat_upper']].astype('int')\nforecast[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(7)","e2016cc5":"# Make a forecast for 7 days ahead\nfuture = model2.make_future_dataframe(periods = 7)\nforecast = model2.predict(future)","7fe0d395":"# Draw plot of the values with forecasting data\nfigure = model2.plot(forecast, xlabel = 'Date', ylabel = 'Number of confirmed cases')","5f9ee262":"# Draw plot with the components (trend and weekly seasonality) of the forecasts\nfigure_component = model2.plot_components(forecast)","7b99c26d":"# Ouput the prediction for the next 7 days\nforecast[['yhat_lower', 'yhat', 'yhat_upper']] = forecast[['yhat_lower', 'yhat', 'yhat_upper']].astype('int')\nforecast[['ds', 'yhat_lower', 'yhat', 'yhat_upper']].tail(7)","090a2914":"## 3. EDA & FE<a class=\"anchor\" id=\"3\"><\/a>\n\n[Back to Table of Contents](#0.1)","b9c272fe":"Thanks to [AI-ML-DS Training. L1A : COVID in UA - Prophet](https:\/\/www.kaggle.com\/vbmokin\/ai-ml-ds-training-l1t-covid-in-ua-prophet?scriptVersionId=46900540)\n\nMy upgrade:\n\n    add new plots;\n    changed some parameters;\n    \n\n    ","53e879ea":"### For the biggest wave - df2","eb7095af":"#### Thanks to https:\/\/api-covid19.rnbo.gov.ua\/","2d53909a":"## 1. Import libraries<a class=\"anchor\" id=\"1\"><\/a>\n\n[Back to Table of Contents](#0.1)","5a71a719":"### For all data","c03fb83b":"## 5. Prediction & Visualization<a class=\"anchor\" id=\"5\"><\/a>\n\n[Back to Table of Contents](#0.1)","20005339":"### For the biggest wave - df2","e1f7eab4":"The notebook was prepared by team \"SAIT VNTU SG\" from the course \"AI-ML-DS Training\" (tutor - [@vbmokin](https:\/\/www.kaggle.com\/vbmokin****))","a0db0aa0":"## 2. Download data<a class=\"anchor\" id=\"2\"><\/a>\n\n[Back to Table of Contents](#0.1)","a79c5e8b":"### Selection data with the biggest wave","db21aa5d":"## 4. Modeling<a class=\"anchor\" id=\"4\"><\/a>\n\n[Back to Table of Contents](#0.1)","a936d079":"I hope you find this notebook useful and enjoyable.\n\nYour comments and feedback are most welcome.\n\n[Go to Top](#0)","d648df05":"### For all data","d6a80776":"## Dataset [COVID-19 in Ukraine: daily data](https:\/\/www.kaggle.com\/vbmokin\/covid19-in-ukraine-daily-data)"}}