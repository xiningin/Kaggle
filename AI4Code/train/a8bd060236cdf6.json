{"cell_type":{"47ec4882":"code","230ae3cc":"code","3efad272":"code","695e2638":"code","1bd987d1":"code","a9263139":"code","a37040f4":"code","5578bc4f":"code","1576f55a":"code","3d8cc5ba":"code","0b10690e":"code","b00cb000":"code","2723e0cc":"code","280242a0":"code","24c86230":"code","e911a294":"code","e2267823":"code","7f01a569":"code","95d492dd":"code","84ab9562":"code","eefbdc60":"code","03ad96be":"code","dbd2571e":"code","cbb0624d":"code","63163a65":"code","c4900dcb":"code","98226463":"code","50f9d4cf":"code","76b0b61e":"code","6dbc9479":"code","5a31441e":"code","fda5a671":"code","13f10654":"code","9adc5321":"code","0bbc48f3":"code","a0acb671":"code","55c2a529":"code","0bb618bb":"code","8641fb70":"code","daf0393a":"code","54c0a8e0":"code","021ff758":"code","5da8ff3c":"markdown","c589a3f8":"markdown","02d3e8d1":"markdown","e2200d4d":"markdown","11ccfb3d":"markdown","d842025e":"markdown","629720d8":"markdown","0aa8eaf6":"markdown"},"source":{"47ec4882":"# IMPORTAMOS LIBRERIAS\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split \nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn import metrics\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score\nimport warnings\nwarnings.filterwarnings('ignore')","230ae3cc":"# CARGAMOS DATASET DE KAGGLE\n\ndf = pd.read_csv(\"diamonds_train.csv\", index_col=0)","3efad272":"# EXPLORAMOS EL DATASET, COMPROBAMOS NULOS, DUPLICADOS, TIPOS DE LAS COLUMNAS Y LO QUE NECESITEMOS\n\ndf.info()","695e2638":"df\n","1bd987d1":"df.isnull().sum() #no tengo valores nulos\n","a9263139":"df.describe()","a37040f4":"# compruebo mis columnas categoricas\n\n# Cut, Color y  clarity \n\nfor col in ['cut','color','clarity']:\n    print('{} : {}'.format(col,df[col].unique()))\ndf.nunique()  #To check number of unique values in each feature","5578bc4f":"# compruebo la correlaci\u00f3n entre las variables\nplt.figure(figsize=(10,10))\ncorr = df.corr()\nsns.heatmap(data=corr, square=True , annot=True, cbar=True,linewidth=2)","1576f55a":"df.shape\n","3d8cc5ba":"# la correlacion que existe entre el precio, x, y y z. es alta, por lo que voy a crear otra columna que sea la multiplicacion de las 3, que me dar\u00e1 el volumen","0b10690e":"df['volume'] = df['x']*df['y']*df['z']\ndf.head()","b00cb000":"df.drop(['x','y','z'], axis=1, inplace= True)","2723e0cc":"df","280242a0":"# convierto columnas categoricas en numericas, usando label encoder\n\n#Using LabelEncoder of scikit learn\nlabel_cut = LabelEncoder()\nlabel_color = LabelEncoder()\nlabel_clarity = LabelEncoder()\n\n# mirar encoder\ndf['cut'] = label_cut.fit_transform(df['cut'])\ndf['color'] = label_color.fit_transform(df['color'])\ndf['clarity'] = label_clarity.fit_transform(df['clarity'])","24c86230":"df.head()","e911a294":"df.shape","e2267823":"X = df.drop(['price'],axis=1)\ny = df['price']","7f01a569":"# TRAIN TEST SPLIT\n\nX_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.1, random_state=40)","95d492dd":"#comprobamos\nprint(\"X_train:\" , X_train.shape)\nprint(\"X_test:\" , X_test.shape)\nprint(\"y_train:\" , y_train.shape)\nprint(\"y_test:\" , y_test.shape)","84ab9562":"### Entrenar el modelo con X_train, y_train\n\n\n","eefbdc60":"RFreg_model = RandomForestRegressor()","03ad96be":"RFreg_model.fit(X_train, y_train)","dbd2571e":"import numpy as np ","cbb0624d":"RFreg_model = RandomForestRegressor()\nRFreg_model.fit(X_train,y_train)\nprediction2 = RFreg_model.predict(X_test)\nrmse_RFreg = np.sqrt(mean_squared_error(y_test, prediction2))\nprint('RMSE value is = {}'.format(rmse_RFreg))\nr2_RFreg = r2_score(y_test, prediction2)\nprint('R-squared value is {}'.format(r2_RFreg))","63163a65":"predictions = RFreg_model.predict(X_test)\nprint(predictions)","c4900dcb":"X_pred = pd.read_csv(\"diamonds_test.csv\", index_col = 0)\nX_pred.head()","98226463":"X_pred.shape","50f9d4cf":"X_pred['volume'] = X_pred['x']*X_pred['y']*X_pred['z']\nX_pred.head()","76b0b61e":"X_pred.drop(['x','y','z'], axis=1, inplace= True)","6dbc9479":"X_pred","5a31441e":"# convierto columnas categoricas en numericas, usando label encoder\n\n#Using LabelEncoder of scikit learn\nlabel_cut = LabelEncoder()\nlabel_color = LabelEncoder()\nlabel_clarity = LabelEncoder()\n\n\nX_pred['cut'] = label_cut.fit_transform(X_pred['cut'])\nX_pred['color'] = label_color.fit_transform(X_pred['color'])\nX_pred['clarity'] = label_clarity.fit_transform(X_pred['clarity'])","fda5a671":"X_pred.head()","13f10654":"print(X)","9adc5321":"X_pred = np.array(X_pred[['carat','cut','color','clarity','depth','table','volume']])","0bbc48f3":"print(X_pred)","a0acb671":"predictions_submit = RFreg_model.predict(X_pred)\npredictions_submit","55c2a529":"sample = pd.read_csv(\"sample_submission.csv\")","0bb618bb":"submission = pd.DataFrame({\"id\": range(len(predictions_submit)), \"price\": predictions_submit})","8641fb70":"submission.head()","daf0393a":"import urllib.request\nfrom PIL import Image","54c0a8e0":"def chequeator(df_to_submit):\n    \"\"\"\n    Esta funci\u00f3n se asegura de que tu submission tenga la forma requerida por Kaggle.\n\n\n    \"\"\"\n    if df_to_submit.shape == sample.shape:\n        if df_to_submit.columns.all() == sample.columns.all():\n            if df_to_submit.id.all() == sample.id.all():\n                print(\"You're ready to submit!\")\n                submission.to_csv(\"submission.csv\", index = False) #muy importante el index = False\n                urllib.request.urlretrieve(\"https:\/\/i.kym-cdn.com\/photos\/images\/facebook\/000\/747\/556\/27a.jpg\", \"gfg.png\")     \n                img = Image.open(\"gfg.png\")\n                img.show()   \n            else:\n                print(\"Check the ids and try again\")\n        else:\n            print(\"Check the names of the columns and try again\")\n    else:\n        print(\"Check the number of rows and\/or columns and try again\")\n        print(\"\\nMensaje secreto de Clara: No me puedo creer que despu\u00e9s de todo este notebook hayas hecho alg\u00fan cambio en las filas de `diamonds_test.csv`. Lloro.\")","021ff758":"chequeator(submission)","5da8ff3c":"### Features\n\n* id: only for test & sample submission files, id for prediction sample identification\n* price: price in USD\n* carat: weight of the diamond\n* cut: quality of the cut (Fair, Good, Very Good, Premium, Ideal)\n* color: diamond colour, from J (worst) to D (best)\n* clarity: a measurement of how clear the diamond is (I1 (worst), SI2, SI1, VS2, VS1, VVS2, VVS1, IF (best))\n* x: length in mm\n* y: width in mm\n* z: depth in mm\n* depth: total depth percentage = z \/ mean(x, y) = 2 * z \/ (x + y) (43--79)\n* table: width of top of diamond relative to widest point (43--95)","c589a3f8":"## TRABAJAMOS CON DIAMOND TEST","02d3e8d1":"## Loading Data\n\n####  https:\/\/www.kaggle.com\/t\/ab8726f0cfc84544abbae69a6be88071","e2200d4d":"### ENTRENAMOS AL MODELO\n#### Previamente hemos comprobado que continuamos con el mismo nro de filas","11ccfb3d":"## IMPORTANTE!! NO podemos modificar el nro de filas.\n### 40345 rows","d842025e":"RANDOM FOREST REGRESSOR","629720d8":"# KAGGLE COMPETITION DIAMOND","0aa8eaf6":"![image](diamante.jpg)\n"}}