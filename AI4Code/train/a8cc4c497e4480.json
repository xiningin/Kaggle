{"cell_type":{"7448e167":"code","3c7c9022":"code","98f943cd":"code","992d9eef":"code","84ff882c":"code","49ffdd9d":"code","9b311ace":"code","2c717311":"markdown","68c0cb98":"markdown","66cfd12d":"markdown","ffeb168d":"markdown","8faab15d":"markdown","f031b76e":"markdown","139c1145":"markdown","1908e833":"markdown"},"source":{"7448e167":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.widgets import Slider, Button\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","3c7c9022":"climate_filepath = \"..\/input\/daily-temperature-of-major-cities\/city_temperature.csv\"\n\nclimate_data = pd.read_csv(climate_filepath)\n\nclimate_data.head()","98f943cd":"climate_city_data = climate_data[\"City\"]==\"Delhi\" # City to Search\n\nnew_climate_data = climate_data[climate_city_data]","992d9eef":"climate_month_data = new_climate_data[\"Month\"]==7  # Month to Search \n\nnew_final = new_climate_data[climate_month_data]","84ff882c":"climate_day_data = new_final[\"Day\"]==1 # Day to Search\n\ndone = new_final[climate_day_data]","49ffdd9d":"done.head()","9b311ace":"sns.lineplot(x = done[\"Year\"], y = (done[\"AvgTemperature\"] - 32) * (5\/9))\nplt.ylabel(\"Avg Temperature \u00baC\")\nplt.title(\"Delhi Temperature Measurements on July by Year\")","2c717311":"With this visualization, we can see how the average temperature records on the 1st of July every year from 1995 to 2020 has varied quite dramatically in Delhi. Having had a drastic jump around the year 2012. Also claiming that the temperature has been on a considerably rise in the past few years. ","68c0cb98":"..and finally the day in which we want to filter by, from \"new_final\"(which is filtered by the selected city and month):","66cfd12d":"The same principle will also be now used to filter out the month (in this case July) from that new dataset we had created \"new_climate_data\":","ffeb168d":"Creating a variable named \"climate_filepath\" that would store in filepath and another variable named \"climate_data\" that would read the given filepath:","8faab15d":"With this new variable \"done\" (not very creative), we have a dataframe filtered by the city, month, and day we had selected.","f031b76e":"Now, it is time to visualize the data. We consider the X values to be taken from the \"Year\" column and the Y values from \"AvgTemperature\", in this case the Fahrenheit values have been converted to Celsius with this simple operation --> (\u00b0F \u2212 32) \u00d7 5\/9.\n\nThe Y Label has also been renamed to \"Avg Temperature \u00baC\" and the plot's title is set to \"Delhi Temperature Measurements on July by Year\".","139c1145":"Setting up the notebook by loading in the required libraries:","1908e833":"Next, we want to filter the dataset by a specific city (in this case Delhi) for that we create a variable that would contain the very dataset filtered, \"climate_city_data\"\n\nBut, the new variable contains the values filtered by boolean terms, in other words, it shows only *True* and *False* values. So, we create another variable \"new_climate_data\" that would store in the original dataset \"climate_data\" containing only the *True* values from \"climate_city_data\".\n\nThis way we have a new dataset \"new_climate_data\" filtered:"}}