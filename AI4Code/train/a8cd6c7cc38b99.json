{"cell_type":{"4700c2f4":"code","f96c6acb":"code","49f7c771":"code","2b799609":"code","5810b070":"code","6f43d3f2":"code","1f6072fa":"code","1e530ba2":"code","4a7bf603":"markdown","826cd3ae":"markdown","7a663bb0":"markdown","4032003e":"markdown","e4f2e195":"markdown","e9960056":"markdown","adb98aba":"markdown","54505338":"markdown","2674c4bd":"markdown","8db6aad6":"markdown","35cc0f5d":"markdown"},"source":{"4700c2f4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","f96c6acb":"import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline","49f7c771":"x = np.arange(-5.0, 5.0, 0.1)\n\n##You can adjust the slope and intercept to verify the changes in the graph\ny = 2*(x) + 3\ny_noise = 2 * np.random.normal(size=x.size)\nydata = y + y_noise\n#plt.figure(figsize=(8,6))\nplt.plot(x, ydata,  'bo')\nplt.plot(x,y, 'r') \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","2b799609":"x = np.arange(-5.0, 5.0, 0.1)\n\n##You can adjust the slope and intercept to verify the changes in the graph\ny = 1*(x**3) + 1*(x**2) + 1*x + 3\ny_noise = 20 * np.random.normal(size=x.size)\nydata = y + y_noise\nplt.plot(x, ydata,  'bo')\nplt.plot(x,y, 'r') \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","5810b070":"x = np.arange(-5.0, 5.0, 0.1)\n\n##You can adjust the slope and intercept to verify the changes in the graph\n\ny = np.power(x,2)\ny_noise = 2 * np.random.normal(size=x.size)\nydata = y + y_noise\nplt.plot(x, ydata,  'bo')\nplt.plot(x,y, 'r') \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","6f43d3f2":"X = np.arange(-5.0, 5.0, 0.1)\n\n##You can adjust the slope and intercept to verify the changes in the graph\n\nY= np.exp(X)\n\nplt.plot(X,Y) \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","1f6072fa":"X = np.arange(-5.0, 5.0, 0.1)\n\nY = np.log(X)\n\nplt.plot(X,Y) \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","1e530ba2":"X = np.arange(-5.0, 5.0, 0.1)\n\n\nY = 1-4\/(1+np.power(3, X-2))\n\n\nplt.plot(X,Y) \nplt.ylabel('Dependent Variable')\nplt.xlabel('Indepdendent Variable')\nplt.show()","4a7bf603":"**4. Exponential Function**","826cd3ae":"*  **2. Cubic Function**","7a663bb0":"**6. Sigmoid\/ Logistic Function**","4032003e":"> ****NON-LINEAR FUNCTION****","e4f2e195":"Import Required Libraries","e9960056":"**1. Linear Function:::**\n**Equation:  Y = 2X + 3[](http:\/\/)**","adb98aba":"**5. Logarithmic Function**","54505338":"If the data shows curvy,\nthen linear regresssion will not provide accurate results when compared\nto a non-linear regression because, linear regression presumes the data is in linear.","2674c4bd":"**3. Quadratic Function**","8db6aad6":"# **GRAPHICAL REPRSENTATION OF NON-LINEAR FUNCTION**","35cc0f5d":"Non-Linear Regressions are a relationship between independent variable x and Dependent Variable y which will result in a non Linear Function Modeled Data."}}