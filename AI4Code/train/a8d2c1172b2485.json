{"cell_type":{"fdea3749":"code","7587f13c":"code","a69a63cf":"code","54b2c753":"code","71aff573":"code","d2057b23":"code","ee1d2aee":"code","e8a55159":"code","08bc00a0":"code","3d418a7a":"code","bc11996b":"code","70a6a90f":"code","54d59d1a":"code","0d3bad6c":"code","da91a64e":"code","19fd0c62":"code","4bc39d77":"code","99f134fa":"code","f0677afc":"code","1d34691f":"code","2ceaa60d":"code","bc9e4aae":"code","39e13114":"code","b9e0b4da":"code","b714163b":"code","467a8feb":"code","d18bd150":"code","ec33db3a":"code","8d8fdaee":"code","ba7a9fca":"code","f9505927":"code","67014179":"code","78584254":"code","275dc56b":"code","6dfa3c43":"code","1d7f19e3":"code","cfe15fab":"code","ce8f0cd2":"code","6d63f9e6":"code","07201cea":"code","e6192084":"code","5b51b118":"code","cac87d71":"code","7c71763a":"code","820db77a":"code","8cb07b9f":"markdown","78f22e53":"markdown"},"source":{"fdea3749":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","7587f13c":"import pandas as pd\nimport numpy as np\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport warnings\nwarnings.filterwarnings('ignore')\nfrom plotly.offline import download_plotlyjs, init_notebook_mode , plot,iplot\nimport plotly.express as px\nimport plotly.graph_objects as go\n\n\nfrom plotly.colors import n_colors\nfrom plotly.subplots import make_subplots\ninit_notebook_mode(connected=True)\nimport cufflinks as cf\ncf.go_offline()","a69a63cf":"victims = pd.read_csv('..\/input\/crime-in-india\/20_Victims_of_rape.csv')\npolice_hr = pd.read_csv('..\/input\/crime-in-india\/35_Human_rights_violation_by_police.csv')\nauto_theft = pd.read_csv('..\/input\/crime-in-india\/30_Auto_theft.csv')\nprop_theft = pd.read_csv('..\/input\/crime-in-india\/10_Property_stolen_and_recovered.csv')","54b2c753":"victims","71aff573":"rape_victims= victims[victims['Subgroup']=='Victims of Incest Rape']","d2057b23":"rape_victims","ee1d2aee":"g= pd.DataFrame(rape_victims.groupby(['Year'])['Rape_Cases_Reported'].sum().reset_index())","e8a55159":"g","08bc00a0":"g.columns=['Year','Cases Reported']","3d418a7a":"g.columns","bc11996b":"g","70a6a90f":"fig= px.bar(g,x='Year',y='Cases Reported',color_discrete_sequence=['blue'])\nfig.show()","54d59d1a":"g1= pd.DataFrame(rape_victims.groupby(['Area_Name'])['Rape_Cases_Reported'].sum().reset_index())","0d3bad6c":"g1","da91a64e":"g1.columns=['State\/UT','Cases Reported']","19fd0c62":"g1.columns","4bc39d77":"g1.replace(to_replace='Arunachal Pradesh',value='Arunanchal Pradesh',inplace=True)","99f134fa":"g1","f0677afc":"shp_gdf = gpd.read_file('..\/input\/india-gis-data\/India States\/Indian_states.shp')","1d34691f":"shp_gdf","2ceaa60d":"merge =shp_gdf.set_index('st_nm').join(g1.set_index('State\/UT'))","bc9e4aae":"merge","39e13114":"fig,ax=plt.subplots(1, figsize=(10,10))\n\nax.set_title('State-wise Rape-Cases Reported (2001-2010)',\n             fontdict={'fontsize': '15', 'fontweight' : '3'})\nfig = merge.plot(column='Cases Reported', cmap='Reds', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)","b9e0b4da":"fig,ax=plt.subplots(1, figsize=(10,10))\nax.axis('off')\nax.set_title('State-wise Rape-Cases Reported (2001-2010)',\n             fontdict={'fontsize': '15', 'fontweight' : '3'})\nfig = merge.plot(column='Cases Reported', cmap='Reds', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)","b714163b":"above_50 = rape_victims['Victims_Above_50_Yrs'].sum()\nten_to_14 = rape_victims['Victims_Between_10-14_Yrs'].sum()\nfourteen_to_18 = rape_victims['Victims_Between_14-18_Yrs'].sum()\neighteen_to_30 = rape_victims['Victims_Between_18-30_Yrs'].sum()\nthirty_to_50 = rape_victims['Victims_Between_30-50_Yrs'].sum()\nupto_10 = rape_victims['Victims_Upto_10_Yrs'].sum()\n","467a8feb":"age_grp = ['Upto 10','10 to 14','14 to 18','18 to 30','30 to 50','Above 50']\nage_group_vals = [upto_10,ten_to_14,fourteen_to_18,eighteen_to_30,thirty_to_50,above_50]\n\nfig = go.Figure(data=[go.Pie(labels=age_grp, values=age_group_vals,sort=True,\n                            marker=dict(colors=px.colors.qualitative.G10),textfont_size=12)])\n\nfig.show()","d18bd150":"g2= pd.DataFrame(police_hr.groupby(['Area_Name'])['Cases_Registered_under_Human_Rights_Violations'].sum().reset_index())\n","ec33db3a":"g2.columns= ['State\/UT','Cases Reported']","8d8fdaee":"g2","ba7a9fca":"g2.replace(to_replace='Arunachal Pradesh',value='Arunanchal Pradesh',inplace=True)\n\nshp_gdf = gpd.read_file('..\/input\/india-gis-data\/India States\/Indian_states.shp')\nmerged = shp_gdf.set_index('st_nm').join(g2.set_index('State\/UT'))","f9505927":"shp_gdf","67014179":"fig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('State-wise Property Stolen-Cases Reported',\n             fontdict={'fontsize': '15', 'fontweight' : '3'})\nfig = merged.plot(column='Cases Reported', cmap='RdPu', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)","78584254":"g3 = pd.DataFrame(police_hr.groupby(['Year'])['Cases_Registered_under_Human_Rights_Violations'].sum().reset_index())\ng3.columns = ['Year','Cases Registered']\n\nfig = px.bar(g3,x='Year',y='Cases Registered',color_discrete_sequence=['black'])\nfig.show()","275dc56b":"police_hr.Group_Name.value_counts()","6dfa3c43":"fake_enc_df = police_hr[police_hr['Group_Name']=='HR_Fake encounter killings'] \nfake_enc_df.Cases_Registered_under_Human_Rights_Violations.sum()","1d7f19e3":"false_imp_df = police_hr[police_hr['Group_Name']=='HR_False implication'] \nfalse_imp_df.Cases_Registered_under_Human_Rights_Violations.sum()","cfe15fab":"g4 = pd.DataFrame(police_hr.groupby(['Year'])['Policemen_Chargesheeted','Policemen_Convicted'].sum().reset_index())","ce8f0cd2":"g4","6d63f9e6":"\nyear=['2001','2002','2003','2004','2005','2006','2007','2008','2009','2010']\n\nfig = go.Figure(data=[\n    go.Bar(name='Policemen Chargesheeted', x=year, y=g4['Policemen_Chargesheeted'],\n           marker_color='purple'),\n    go.Bar(name='Policemen Convicted', x=year, y=g4['Policemen_Convicted'],\n          marker_color='red')\n])\n\nfig.update_layout(barmode='group',xaxis_title='Year',yaxis_title='Number of policemen')\nfig.show()\n","07201cea":"g5 = pd.DataFrame(auto_theft.groupby(['Area_Name'])['Auto_Theft_Stolen'].sum().reset_index())\ng5.columns = ['State\/UT','Vehicle_Stolen']\ng5.replace(to_replace='Arunachal Pradesh',value='Arunanchal Pradesh',inplace=True)\n\nshp_gdf = gpd.read_file('..\/input\/india-gis-data\/India States\/Indian_states.shp')\nmerged = shp_gdf.set_index('st_nm').join(g5.set_index('State\/UT'))\n\nfig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('State-wise Auto Theft Cases Reported(2001-2010)',\n             fontdict={'fontsize': '15', 'fontweight' : '3'})\nfig = merged.plot(column='Vehicle_Stolen', cmap='YlOrBr', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)","e6192084":"auto_theft_traced = auto_theft['Auto_Theft_Coordinated\/Traced'].sum()\nauto_theft_recovered = auto_theft['Auto_Theft_Recovered'].sum()\nauto_theft_stolen = auto_theft['Auto_Theft_Stolen'].sum()\n\nvehicle_group = ['Vehicles Stolen','Vehicles Traced','Vehicles Recovered']\nvehicle_vals = [auto_theft_stolen,auto_theft_traced,auto_theft_recovered]\n\ncolors = ['hotpink','purple','red']\n\nfig = go.Figure(data=[go.Pie(labels=vehicle_group, values=vehicle_vals,sort=False,\n                            marker=dict(colors=colors),textfont_size=12)])\n\nfig.show()","5b51b118":"g5 = pd.DataFrame(auto_theft.groupby(['Year'])['Auto_Theft_Stolen'].sum().reset_index())\n\ng5.columns = ['Year','Vehicles Stolen']\n\nfig = px.bar(g5,x='Year',y='Vehicles Stolen',color_discrete_sequence=['#00CC96'])\nfig.show()","cac87d71":"vehicle_list = ['Motor Cycles\/ Scooters','Motor Car\/Taxi\/Jeep','Buses',\n               'Goods carrying vehicles (Trucks\/Tempo etc)','Other Motor vehicles']\n\nsr_no = [1,2,3,4,5]\n\nfig = go.Figure(data=[go.Table(header=dict(values=['Sr No','Vehicle type'],\n                                          fill_color='turquoise',\n                                           height=30),\n                 cells=dict(values=[sr_no,vehicle_list],\n                            height=30))\n                     ])\nfig.show()","7c71763a":"motor_c = auto_theft[auto_theft['Sub_Group_Name']=='1. Motor Cycles\/ Scooters']\n\ng8 = pd.DataFrame(motor_c.groupby(['Area_Name'])['Auto_Theft_Stolen'].sum().reset_index())\ng8_sorted = g8.sort_values(['Auto_Theft_Stolen'],ascending=True)\nfig = px.scatter(g8_sorted.iloc[-10:,:], y='Area_Name', x='Auto_Theft_Stolen',\n             orientation='h',color_discrete_sequence=[\"red\"])\nfig.show()","820db77a":"g7 = pd.DataFrame(prop_theft.groupby(['Area_Name'])['Cases_Property_Stolen'].sum().reset_index())\ng7.columns = ['State\/UT','Cases Reported']\ng7.replace(to_replace='Arunachal Pradesh',value='Arunanchal Pradesh',inplace=True)\n\nshp_gdf = gpd.read_file('..\/input\/india-gis-data\/India States\/Indian_states.shp')\nmerged = shp_gdf.set_index('st_nm').join(g7.set_index('State\/UT'))\n\nfig, ax = plt.subplots(1, figsize=(10, 10))\nax.axis('off')\nax.set_title('State-wise Property Stolen-Cases Reported',\n             fontdict={'fontsize': '15', 'fontweight' : '3'})\nfig = merged.plot(column='Cases Reported', cmap='spring', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)\n","8cb07b9f":"# Crime Analysis","78f22e53":"![Crime.jpg](attachment:325d0a1e-f207-4ab8-8d18-ec3cfcb1811c.jpg)"}}