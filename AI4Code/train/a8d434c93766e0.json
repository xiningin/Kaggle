{"cell_type":{"44829cf4":"code","bc04cf75":"code","124aafba":"code","334de522":"code","d996fcea":"code","36bd56a2":"code","02a66ae2":"code","046756f2":"code","f595f98c":"code","6b35c99b":"code","4e5c232f":"code","25cb90ef":"code","106e7f43":"code","5648a949":"code","b31cf789":"code","bb992ec3":"markdown"},"source":{"44829cf4":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","bc04cf75":"import pandas as pd\nimport numpy as np","124aafba":"import seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline","334de522":"df = pd.read_csv('..\/input\/titanic\/train.csv')","d996fcea":"df.head()","36bd56a2":"df.info()","02a66ae2":"df.describe()","046756f2":"sns.set_style('whitegrid')\nsns.pairplot(df)","f595f98c":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","6b35c99b":"sns.countplot(x='Survived',hue='Sex',data=df)","4e5c232f":"plt.figure(figsize=(12, 7))\nsns.boxplot(x='Pclass',y='Age',data=df,palette='winter')","25cb90ef":"def impute_age(cols):\n    Age = cols[0]\n    Pclass = cols[1]\n    \n    if pd.isnull(Age):\n\n        if Pclass == 1:\n            return 37\n\n        elif Pclass == 2:\n            return 29\n\n        else:\n            return 24\n\n    else:\n        return Age","106e7f43":"df['Age'] = df[['Age','Pclass']].apply(impute_age,axis=1)","5648a949":"sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","b31cf789":"df.drop('Cabin',axis=1,inplace=True)","bb992ec3":"# **data analysis part**"}}