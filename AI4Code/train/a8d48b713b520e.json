{"cell_type":{"d21bbe86":"code","62dc785b":"code","6815d6fe":"code","abc2987e":"code","0169443b":"code","a8215ce5":"code","f52bacf9":"code","4d66898c":"code","b398837c":"code","cea1aecc":"code","7dd75450":"code","53d9f504":"code","abe1b6b7":"code","c4cf58db":"code","fadcce3b":"code","a2a8d5ba":"code","8cd05d51":"code","e4164ca9":"code","fb658bc8":"code","c5e4ea1e":"code","2e08a797":"code","6849f798":"code","96640358":"code","a5a8e7a5":"code","e7854d27":"code","a3f64f37":"code","f0f7361f":"code","26a8607c":"markdown","5079bec3":"markdown","1dd907eb":"markdown","ff2f30bf":"markdown","7173fef4":"markdown","c2c579f1":"markdown","c42a329d":"markdown","26cc8cb5":"markdown","42b9d467":"markdown"},"source":{"d21bbe86":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nimport plotly.express as px\nimport plotly.graph_objs as go\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","62dc785b":"# Use right path to the file. This one ('\/input\/...') is only for open it in Kaggle.com\nmigrants = pd.read_csv(\"..\/input\/MissingMigrants-Global-2019-03-29T18-36-07.csv\")","6815d6fe":"migrants['lat'], migrants['lon'] = migrants['Location Coordinates'].str.split(',',1).str","abc2987e":"migrants['lon'] = [float(x) for x in migrants['lon']]\nmigrants['lat'] = [float(x) for x in migrants['lat']]","0169443b":"migrants.columns","a8215ce5":"migrants_coor = migrants[['Region of Incident','Reported Date','Reported Year','Number Dead', 'lat', 'lon']]\nmigrants_coor = migrants_coor.fillna(0)","f52bacf9":"migrants_coor.head()","4d66898c":"lats = migrants_coor['lat'][:]\nlons = migrants_coor['lon'][:]","b398837c":"deads = migrants_coor[['Region of Incident', 'Number Dead']]","cea1aecc":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=-60,urcrnrlat=90,llcrnrlon=-180,urcrnrlon=180)\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\nm.drawcountries(linewidth=0.2, color=\"black\")\nm.shadedrelief(alpha=0.7)\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 9, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads',size=30)","7dd75450":"deads.groupby('Region of Incident').sum().sort_values('Number Dead', ascending=False)","53d9f504":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=25,urcrnrlat=60,llcrnrlon=-10,urcrnrlon=50,resolution='l')\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\n#m.drawcountries(linewidth=1.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\n\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 8, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads Mediterranean', size=20)","abe1b6b7":"deads.loc[deads['Region of Incident'].isin(['Mediterranean', 'Europe', 'North of Africa'])].sort_values('Number Dead', ascending=False).head(30)","c4cf58db":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=30,urcrnrlat=43,llcrnrlon=10,urcrnrlon=20,resolution='l')\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\n#m.drawcountries(linewidth=1.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 9, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads Lampedusa', size=20)","fadcce3b":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=0,urcrnrlat=50,llcrnrlon=-130,urcrnrlon=-60,resolution='l')\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\nm.drawcountries(linewidth=0.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\n\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 8, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads Center and North America', size=20)","a2a8d5ba":"deads.loc[deads['Region of Incident'].isin(['Caribbean', 'Central America', 'US-Mexico Border', 'North America', 'South America'])].sort_values('Number Dead', ascending=False).head(20)","8cd05d51":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=-40,urcrnrlat=40,llcrnrlon=-30,urcrnrlon=55,resolution='l')\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\nm.drawcountries(linewidth=0.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\n\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 8, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads Africa', size=20)","e4164ca9":"deads.loc[deads['Region of Incident'].isin(['Horn of Africa', 'Middle East', 'North Africa', 'Sub-Saharan Africa'])].sort_values('Number Dead', ascending=False).head(30)","fb658bc8":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(llcrnrlat=-10,urcrnrlat=60,llcrnrlon=65,urcrnrlon=140,resolution='l')\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\n#m.drawcountries(linewidth=1.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\n\nx, y = m(lons, lats)\ns1 = migrants_coor['Number Dead']\n\nl1 = plt.scatter([],[], s=20, color=\"#e60000\")\nl2 = plt.scatter([],[], s=100, color=\"#e60000\")\nl3 = plt.scatter([],[], s=200, color=\"#e60000\")\nl4 = plt.scatter([],[], s=1000, color=\"#e60000\")\n\nlabels = [\"10\", \"50\", \"100\", \"500\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=4, loc = 8, borderpad = 1.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s1*2, marker=\"o\", alpha=1, c=\"#e60000\")\nplt.title('Migration Deads Asia', size=20)","c5e4ea1e":"deads.loc[deads['Region of Incident'].isin(['Central Asia', 'East Asia', 'South Asia', 'Southeast Asia'])].sort_values('Number Dead', ascending=False).head(20)","2e08a797":"m_sum = migrants_coor.groupby('Region of Incident').sum()\nm_mean = migrants_coor.groupby('Region of Incident').mean()","6849f798":"m_sum['lat_mean'] = m_mean['lat']\nm_sum['lon_mean'] = m_mean['lon']\nm_sum = m_sum.drop(['lat','lon'],axis=1)","96640358":"m_sum.columns","a5a8e7a5":"lats_2 = m_sum['lat_mean'][:]\nlons_2 = m_sum['lon_mean'][:]","e7854d27":"plt.figure(figsize=(40,15))\n# A basic map\nm=Basemap(lat_0=0, lon_0=0)\n#m.drawmapboundary(fill_color='white', linewidth=0)\n#m.fillcontinents(color='black', alpha=0.3, lake_color='white')\n#m.drawcoastlines(linewidth=0.5, color=\"black\")\n#m.drawcountries(linewidth=1.5, color=\"black\")\nm.shadedrelief(alpha=0.7)\n\nx, y = m(lons_2, lats_2)\ns = m_sum['Number Dead']\n\nl1 = plt.scatter([],[], s=50, color=\"#e60000\")\nl2 = plt.scatter([],[], s=500, color=\"#e60000\")\nl3 = plt.scatter([],[], s=2000, color=\"#e60000\")\nl4 = plt.scatter([],[], s=5000, color=\"#e60000\")\n\nlabels = [\"50\", \"500\", \"2000\", \"5000\"]\n\nleg = plt.legend([l1, l2, l3, l4], labels, ncol=4, frameon=True, fontsize=14,\nhandlelength=5, loc = 9, borderpad = 3.5,\nhandletextpad=1, scatterpoints = 1)\n\nm.scatter(x, y, latlon=True, s=s, marker=\"o\", alpha=1, c=\"#e60000\")","a3f64f37":"m_sum.sort_values('Number Dead', ascending=False)","f0f7361f":"migrants.groupby('Reported Year').sum()","26a8607c":"## By years","5079bec3":"### Lampedusa","1dd907eb":"### World Wide Map","ff2f30bf":"### Asia","7173fef4":"### Africa","c2c579f1":"# Analysis about migrants deads from 2014 until 2019 around the world","c42a329d":"### Mediterranean Map","26cc8cb5":"### Central and North America","42b9d467":"## Total deads by zone"}}