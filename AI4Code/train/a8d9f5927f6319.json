{"cell_type":{"ad950179":"code","e624a0c3":"code","542718f5":"code","db56a62b":"code","6eb79d3c":"code","97b37ad4":"code","e0223e61":"code","9e92c7c5":"code","95688873":"markdown","01c3ea0a":"markdown","cae8071c":"markdown","ff32ddfa":"markdown"},"source":{"ad950179":"import numpy as np\nimport pandas as pd\n\n# visualize\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style\nimport seaborn as sns\nfrom matplotlib import pyplot\nfrom matplotlib.ticker import ScalarFormatter\nsns.set_context(\"talk\")\nstyle.use('fivethirtyeight')\n\nfrom scipy import stats\nfrom tqdm import tqdm_notebook as tqdm\nimport os","e624a0c3":"# load submission files\n\nBASE_PATH = \"..\/input\/trends-assessment-prediction\"\nSUBMISSION_FILES_PATH = \"..\/input\/trends-master-ensemble\"\n\nsubmission = pd.read_csv(f\"{BASE_PATH}\/sample_submission.csv\")\n\n# high scoring public kernels\nENSEMBLES = [\n    {\"file0\": f\"{SUBMISSION_FILES_PATH}\/submission_rapids_ensemble.csv\", \"weight\": 1.1},\n    {\"file1\": f\"{SUBMISSION_FILES_PATH}\/sub.csv\", \"weight\": 1.13},\n    {\"file2\": f\"{SUBMISSION_FILES_PATH}\/submission.csv\", \"weight\": 1.1},\n    {\"file3\": f\"{SUBMISSION_FILES_PATH}\/submission1.csv\", \"weight\": 1},\n    {\"file4\": f\"{SUBMISSION_FILES_PATH}\/submission_ridge.csv\", \"weight\": 1.12},\n]\n\n","542718f5":"subs = submission.copy()\nfor i, ensemble in enumerate(ENSEMBLES):\n    print(ensemble)\n    tmp = pd.read_csv(ensemble[f'file{i}'])\n    subs[f\"predicted_file{i}\"] = tmp[\"Predicted\"]\n\nsubs.drop(columns=[\"Id\", \"Predicted\"], inplace=True)","db56a62b":"subs.head(10)","6eb79d3c":"# Compute the correlation matrix\ncorr = subs.corr()\n\n# Set up the matplotlib figure\nf, ax = plt.subplots(figsize=(15, 12))\n\n# Generate a custom diverging colormap\ncmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n# Draw the heatmap with the mask and correct aspect ratio\nsns.heatmap(corr, cmap=cmap, annot=True, fmt=\"g\",\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5}, ax=ax)\nax.set_ylim(corr.shape[0], 0)\nplt.yticks(rotation=0)","97b37ad4":"def mean_ensemble(row):\n    return np.mean(row.values)","e0223e61":"submission[\"Predicted\"] = subs.apply(mean_ensemble, axis=1)\nsubmission.to_csv(\"submission.csv\", index=False)","9e92c7c5":"submission.head()","95688873":"## Reading all files","01c3ea0a":"\n\n* https:\/\/www.kaggle.com\/tunguz\/rapids-ensemble-for-trends-neuroimaging\/output [submission_rapids_ensemble.csv] # LB: 0.1595\n* https:\/\/www.kaggle.com\/moradnejad\/trends-eda-fe-mysubmission\/output [sub.csv] # LB: 0.1593\n* https:\/\/www.kaggle.com\/hamditarek\/trends-neuroimaging-blend\/output [submission.csv] # LB: 0.1595\n* https:\/\/www.kaggle.com\/aerdem4\/rapids-svm-on-trends-neuroimaging\/output [submission1.csv] # LB: 0.1598\n* [submission_ridge.csv] # LB: 0.1595","cae8071c":"## Finding Correlation between submissions","ff32ddfa":"## Simple Mean Ensemble"}}