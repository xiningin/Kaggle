{"cell_type":{"976cf7f3":"code","233d2ecb":"code","a1fca62b":"code","430af8d0":"code","1f114898":"code","437b3164":"code","e3fd3dfa":"code","cadbe369":"code","bc47ad50":"code","3443434b":"code","66d6b2ec":"code","563202b6":"code","b3f01725":"code","f3a540da":"code","44bf812e":"code","c2d29d38":"code","d9eebdfa":"code","3a7b775d":"code","8b3fcd91":"code","6d9e0480":"markdown","ffabe81c":"markdown","19213cb7":"markdown","d108ccc0":"markdown","e1cf0318":"markdown","5d48d4cf":"markdown","423f96cb":"markdown","4fe4aa15":"markdown","72dd11da":"markdown","64f13abb":"markdown","9af130ca":"markdown","df3a653c":"markdown","bd1bbc99":"markdown","285aa135":"markdown","9e9c050a":"markdown","e4dc502c":"markdown","9ce0e937":"markdown","cf63df3e":"markdown","8b6105c1":"markdown","0c856b0e":"markdown","d28b0e3b":"markdown"},"source":{"976cf7f3":"# Pandas for reading the data:\nimport pandas as pd\n\n# Libraries for plotting of the data:\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Libraries for Preprocessing of the data:\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split \nimport category_encoders as ce\n\n# Libraries for Predicting on the data:\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom xgboost import XGBClassifier\n\n# Metrics to measure how good we do with predicting on the data:\nfrom sklearn.metrics import *","233d2ecb":"data = pd.read_csv(\"..\/input\/passenger-list-for-the-estonia-ferry-disaster\/estonia-passenger-list.csv\")\ndata.head(7)","a1fca62b":"survived = data['Survived']\n\n# Dropping the labels.\n# Also dropping the PassengerId, Firstname and Lastname columns because they seem useless:\ndata.drop(['PassengerId', 'Firstname', 'Lastname', 'Survived'], axis=1, inplace=True)","430af8d0":"data.head()","1f114898":"plt.figure(figsize=(7,7))\nsns.set_context(\"poster\", font_scale=0.7)\nsns.set_palette(\"Reds\")\nsns.countplot(survived)","437b3164":"sns.set_palette(['skyblue', 'pink'])\nplt.figure(figsize=(7,7))\nsns.countplot(data['Sex'])","e3fd3dfa":"plt.figure(figsize=(20,7))\nsns.set_context(\"poster\", font_scale=0.6)\nsns.countplot(data['Country'])","cadbe369":"plt.figure(figsize=(7,7))\nsns.violinplot(data=data, x='Sex',y='Age')","bc47ad50":"data.isnull().sum()","3443434b":"c = (data.dtypes == 'object')\n\ncategorical = list(c[c].index)","66d6b2ec":"cat = ce.CatBoostEncoder()\n\n# Fitting the data to the labels:\ncat.fit(data[categorical], survived)\n\n# Transforming the columns:\ndata[categorical] = cat.transform(data[categorical])","563202b6":"scale = StandardScaler()\nscaleddata = pd.DataFrame(scale.fit_transform(data), columns=data.columns)","b3f01725":"train, test, ytrain, ytest = train_test_split(scaleddata, y, train_size=0.7, test_size=0.3)","f3a540da":"ran = RandomForestClassifier(n_estimators=500)\n\nran.fit(train, ytrain)\n\nranpred = ran.predict(test)\n","44bf812e":"print(\"The Accuracy of this model is :\", accuracy_score(ranpred, ytest)*100)","c2d29d38":"xgb = XGBClassifier(n_estimators=300)\n\nxgb.fit(train, ytrain)\n\nxpred = xgb.predict(test)","d9eebdfa":"print(\"The Accuracy of this model is :\", accuracy_score(xpred, ytest)*100)","3a7b775d":"tree = DecisionTreeClassifier()\n\ntree.fit(train, ytrain)\n\ntreepred = tree.predict(test)","8b3fcd91":"print(\"The Accuracy of this model is :\", accuracy_score(treepred, ytest)*100)","6d9e0480":"Reading the data:","ffabe81c":"Thank you for going through this notebook, if you liked it an upvote would be appreciated! :D","19213cb7":"What was the distribution of men and women of different ages?","d108ccc0":"# Preprocessing the Data:","e1cf0318":"How many men and women were aboard?","5d48d4cf":"What proportion of people survived?","423f96cb":"So, no missing or NaN values!","4fe4aa15":"Using XGBoost Classifier:","72dd11da":"Its time to use the Cat Boost Encoder from category encoders to encode the categorical columns: ","64f13abb":"Lets make some countplots to check the proportion of various features:","9af130ca":"# Visualizing the Data:","df3a653c":"Using Random Forests:","bd1bbc99":"So, the final step of preprocessing would be the Standardisation of the values in the model:","285aa135":"Using Decision Tree Classifier:","9e9c050a":"What is the distribuition of various countries the passengers were from?","e4dc502c":"Lets find out the missing values in the data:","9ce0e937":"# Importing the Libraries:","cf63df3e":"*Lets encode the labels, *defining the categorical columns:","8b6105c1":"Splitting the data:","0c856b0e":"# Training and Predicting:","d28b0e3b":"Lets define the labels or on what column would we be predicting on using the data:"}}