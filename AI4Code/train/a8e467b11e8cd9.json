{"cell_type":{"ac58284e":"code","8416dedd":"code","d923bcd1":"code","69aba629":"code","ed217eef":"code","4891367f":"code","8914e8e8":"code","121c10e8":"code","4cf58451":"code","17694004":"code","14c9be47":"code","17ab39e9":"code","79843ad6":"code","cd5961d5":"code","fc68c642":"code","a3de280c":"code","bc4c60a1":"code","283b88ef":"code","e8216722":"code","052a417a":"code","cb385a11":"code","37c07b08":"code","fc8ad6c8":"code","694d45a5":"code","5b900774":"code","cae878e1":"code","8bfed430":"code","42e6f69a":"code","339d62ec":"code","01dfdff5":"code","6b2ce160":"code","7b24d7f4":"code","83e1fad7":"code","c39115f5":"code","53971994":"code","5f2255bd":"code","a947008f":"code","1f809260":"code","70081cd2":"code","1209c0bf":"code","7bb13b82":"code","5b85d292":"code","c13c1995":"code","5f85e0be":"code","f5f62ca3":"code","f5a14a6e":"code","26ef40db":"code","8ff51515":"code","582b4ff2":"code","7c228a68":"code","754d1782":"code","8135d246":"code","ab1233df":"code","b7d0c0cb":"markdown","8ca01985":"markdown","746ff82d":"markdown","f2454b24":"markdown","09407c25":"markdown","bdcc4e8c":"markdown","8ca10d2d":"markdown","496678d5":"markdown","bde392ff":"markdown","0675794f":"markdown","b101def7":"markdown","aced207a":"markdown","52cbf826":"markdown","a820a694":"markdown","e2f66322":"markdown","a337bc0a":"markdown","f9a15759":"markdown","01b4aef1":"markdown","f23857ec":"markdown","10036483":"markdown","f1d9f410":"markdown","e1c57d7b":"markdown","dda58666":"markdown","91d8e919":"markdown","9d0cc752":"markdown","0e08bc32":"markdown","890fa1c5":"markdown","442f8aac":"markdown"},"source":{"ac58284e":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.style.use('seaborn-dark')\nimport seaborn as sns\n\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\n\nimport warnings\nwarnings.simplefilter('ignore')","8416dedd":"train = pd.read_csv(\"..\/input\/machine-hack-housing-price-prediction\/Train.csv\")\ntest = pd.read_csv(\"..\/input\/machine-hack-housing-price-prediction\/Test.csv\")\nss = pd.read_csv(\"..\/input\/machine-hack-housing-price-prediction\/sample_submission.csv\")","d923bcd1":"ss.head(10)","69aba629":"train.head(5)\ntest.head(5)","ed217eef":"Target_col = 'TARGET(PRICE_IN_LACS)'","4891367f":"print(f'\\n Train contains {train.shape[0]} samples and {train.shape[1]} variables')\nprint(f'\\n Test contains {test.shape[0]} samples and {test.shape[1]} variables')","8914e8e8":"train[Target_col].plot(kind='density', title=\"Density Distribution\", fontsize=14, figsize=(10,6))","121c10e8":"pd.Series(np.log1p(train[Target_col])).plot(kind='density', title='log distribution', fontsize=14, figsize=(10,4))","4cf58451":"train[Target_col].plot(kind='box', vert=False, fontsize=14, figsize=(12,4), title='box-plot')","17694004":"pd.Series(np.log1p(train[Target_col])).plot(kind='box', title='box-plot log transformation', vert=False, fontsize=14, figsize=(12,4))","14c9be47":"train.head(1)","17ab39e9":"train.info()","79843ad6":"percent_null_val = 100*(train.isnull().sum()\/train.shape[0]).round(3)\npercent_null_val.sort_values(ascending=False)","cd5961d5":"train.nunique()","fc68c642":"train.columns","a3de280c":"cat_col = ['POSTED_BY', 'UNDER_CONSTRUCTION', 'RERA', 'BHK_NO.', \n           'BHK_OR_RK', 'READY_TO_MOVE', 'RESALE']","bc4c60a1":"num_col = [col for col in train.columns if col not in cat_col]\nnum_col","283b88ef":"num_col = [c for c in list(num_col) if c!='ADDRESS']\nnum_col","e8216722":"fig, axis = plt.subplots(4,2, figsize=(14,22))\naxes = [ax for axes_row in axis for ax in axes_row]\n\nfor i,c in enumerate(train[cat_col]):\n  _ = train[c].value_counts()[::-1].plot(kind='pie', ax=axes[i], title=c, autopct='%.0f', fontsize=12)\n  _ = axes[i].set_ylabel('')\n\n_ = plt.tight_layout()","052a417a":"fig, axes = plt.subplots(4,2,figsize=(16,16))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i,c in enumerate(train[cat_col]):\n  _ = train[c].value_counts()[::-1].plot(kind='barh', ax=axes[i], title=c, fontsize=12)\n\n_ = plt.tight_layout()\n","cb385a11":"sns.catplot(x='POSTED_BY', y=Target_col, data=train, height=5, aspect=24\/16)","37c07b08":"['POSTED_BY', 'UNDER_CONSTRUCTION', 'RERA', 'BHK_NO.', \n           'BHK_OR_RK', 'READY_TO_MOVE', 'RESALE']","fc8ad6c8":"sns.catplot(x='UNDER_CONSTRUCTION', y=Target_col, data=train, height=5, aspect=24\/16)","694d45a5":"sns.catplot(x='RERA', y=Target_col, data=train, height=5, aspect=24\/16)","5b900774":"sns.catplot(x='BHK_OR_RK', y=Target_col, data=train, height=4, aspect=24\/16)","cae878e1":"sns.catplot(x='READY_TO_MOVE', y=Target_col, data=train, height=4, aspect=24\/16)","8bfed430":"sns.catplot(x='RESALE', y=Target_col, data=train, height=4, aspect=24\/16)","42e6f69a":"fig, axes = plt.subplots(4,1,figsize=(12,18))\n\nfor i,c in enumerate(train[num_col]):\n  _ = train[[c]].boxplot(ax=axes[i], vert=False)\n\n","339d62ec":"train[num_col].head()","01dfdff5":"sns.set(font_scale=1.3)\nfig, axes = plt.subplots(2,2, figsize=(18,14))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(num_col):\n  train[c].plot.kde(ax=axes[i])\n\nplt.tight_layout()","6b2ce160":"fig, axes = plt.subplots(4,1,figsize=(12,18))\n\nfor i,c in enumerate(train[num_col]):\n  _ = np.log1p(train[[c]]).boxplot(ax=axes[i], vert=False)\n","7b24d7f4":"log_data = pd.DataFrame()\nfor c in num_col:\n    log_data[c] = np.log1p(train[c])\n\nsns.set(font_scale=1.3)\nfig, axes = plt.subplots(2,2, figsize=(18,14))\naxes = [ax for axes_row in axes for ax in axes_row]\n\nfor i, c in enumerate(num_col):\n    log_data[c].plot.kde(ax=axes[i])\n\nplt.tight_layout()","83e1fad7":"plt.figure(figsize=(14,8))\n_ = sns.heatmap(data=train[num_col].corr(), annot=True)","c39115f5":"_ = sns.pairplot(train[num_col], height=5, aspect=24\/16)","53971994":"from wordcloud import WordCloud, STOPWORDS\n\nwc = WordCloud(stopwords = set(list(STOPWORDS) + ['|']), random_state=42)\nplt.figure(figsize=(10,6))\nop = wc.generate(str(train['ADDRESS']))\nplt.imshow(op)\nplt.title(\"ADDRESS\")\nplt.axis('off')","5f2255bd":"train[Target_col].describe()","a947008f":"add_len = train['ADDRESS'].apply(lambda x: len(x))\nadd_len","1f809260":"train[Target_col].corr(add_len)","70081cd2":"train[num_col] = train[num_col].apply(lambda x: np.log1p(x))\nnum_cols = [c for c in num_col if c!=Target_col]\ntest[num_cols] = test[num_cols].apply(lambda x: np.log1p(x))","1209c0bf":"from sklearn.metrics import mean_squared_error, mean_squared_log_error\n\ndef rmsle(y_test, y_pred):\n    return np.sqrt(mean_squared_log_error(y_test, y_pred))\n\ndef av_metric(y_true, y_pred):\n    return 1000 * np.sqrt(mean_squared_error(y_true, y_pred))\n  \ntarget = train[Target_col]","7bb13b82":"pred_targ = pd.Series([target.mean()]*len(train))\n\nav_metric_score = av_metric(target, pred_targ)\n\nprint(f'AV score is {av_metric_score}')","5b85d292":"pred_test = pd.Series([target.mean()]*len(test))\npreds_test = np.expm1(pred_test)\n\nsol_f = pd.DataFrame()\nsol_f[Target_col] = preds_test\nsol_f.to_csv('sol.csv', index=False)","c13c1995":"sol_f.head()","5f85e0be":"pred_targ = pd.Series([target.median()]*len(train))\n\nav_metric_score = av_metric(target, pred_targ)\n\nprint(f'AV score is {av_metric_score}')","f5f62ca3":"pred_test = pd.Series([target.median()]*len(test))\npreds_test = np.expm1(pred_test)\n\nsol_f = pd.DataFrame()\nsol_f[Target_col] = preds_test\nsol_f.to_csv('sol.csv', index=False)","f5a14a6e":"sol_f.head()","26ef40db":"num_col","8ff51515":"target_per_squre = ((train[Target_col] + 1)\/(train['SQUARE_FT'] + 1))\ntarget_per_squre.mean()","582b4ff2":"pred_targ = train['SQUARE_FT']*0.855057\n\nav_metric_score = av_metric(target, pred_targ)\n\nprint(f'AV score is {av_metric_score}')","7c228a68":"pred_test = test['SQUARE_FT']*0.855057\npreds_test = np.expm1(pred_test)\n\nsol_f = pd.DataFrame()\nsol_f[Target_col] = preds_test\nsol_f.to_csv('sol.csv', index=False)","754d1782":"target_per_squre = ((train[Target_col] + 1)\/(train['LATITUDE'] + 1))\ntarget_per_squre.mean()","8135d246":"train['LATITUDE'] = train['LATITUDE'].fillna(train['LATITUDE'].median())\npred_targ = train['LATITUDE']*0.986532\n\nav_metric_score = av_metric(target, pred_targ)\n\nprint(f'AV score is {av_metric_score}')","ab1233df":"train['LATITUDE'].isnull().sum()","b7d0c0cb":"## 6.Unoque value in each column","8ca01985":"### Correlation HeatMaps","746ff82d":"## 4.Variable Datatype","f2454b24":"# Baseline Model(s)","09407c25":"## 2. Univariate Analysis - Density Plots","bdcc4e8c":"# Import library","8ca10d2d":"## 2.Dataset shape","496678d5":"## 1. Univariate Analysis - Boxplots","bde392ff":"## Textual Data","0675794f":"# Segregating Categorical & Numerical Variables","b101def7":"## Bivariate Analysis","aced207a":"#### Catplot","52cbf826":"## Model D (LONGITUDE)","a820a694":"## Univariate Analysis - CountPlots","e2f66322":"## 3.Target Distribution","a337bc0a":"# Analyzing Each Variable & their relationships","f9a15759":"## Numerical Features","01b4aef1":"### Pair plot","f23857ec":"# Exploratory Data Analysis","10036483":"## 1.Brief look into data","f1d9f410":"# Categorical Features","e1c57d7b":"## 5.Null Value","dda58666":"### After log Transformation","91d8e919":"## Model A (mean)","9d0cc752":"## Model C (SQUARE_FT)","0e08bc32":"## Model B (median)","890fa1c5":"### Multivariate Anlysis","442f8aac":"## Univariate Analysis - Pie Charts."}}