{"cell_type":{"64e70de5":"code","21985579":"code","a36e0dfd":"code","5e9e744e":"code","95553dcb":"code","979ee589":"code","041b3989":"code","bfec6411":"code","836d2b46":"code","bb7245c9":"code","18ebc81e":"code","0a2becab":"code","56fb33b8":"code","0e3870d6":"code","d6d7e687":"code","cf6b53ab":"markdown","cdab603d":"markdown","e961e1e7":"markdown","5cdd9fd0":"markdown","45623a80":"markdown","6746ebd7":"markdown"},"source":{"64e70de5":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nimport os\nprint(os.listdir(\"..\/input\"))\n\n# Any results you write to the current directory are saved as output.","21985579":"df_app = pd.read_csv('..\/input\/googleplaystore.csv')\ndf_user = pd.read_csv('..\/input\/googleplaystore_user_reviews.csv')","a36e0dfd":"df_app.head()","5e9e744e":"df_user.head()","95553dcb":"df_app.info()","979ee589":"df_user.info()","041b3989":"df_app.isnull().any()","bfec6411":"df_app.dropna(inplace=True)","836d2b46":"df_app.count()","bb7245c9":"df_user.isnull().any()","18ebc81e":"sns.heatmap(df_user.isnull(), yticklabels=False, cbar=False, cmap='viridis')","0a2becab":"df_app.columns","56fb33b8":"plt.subplots(figsize = (22, 30))\nplt.title(\"The app counts of different category\")\nsns.countplot(y = 'Category', order=df_app['Category'].value_counts().index, data = df_app)","0e3870d6":"# Tryto find the top 10 popular, which Reviews is \n#plt.subplots(figsize = (10,8))\n# plt.title('Top 10 highest rate app')\ndf_app['Reviews'] = pd.to_numeric(df_app['Reviews'])\n\ndf_app[df_app['Reviews']> 100].sort_values(by=['Rating'], ascending=False).head(20)\n","d6d7e687":"df_app.info()","cf6b53ab":"### For the data of googleplaystore.csv","cdab603d":"> # Predicit the rating(Machine Learning)","e961e1e7":"> # Read The Data","5cdd9fd0":"> # Data exploration","45623a80":"### Handle empty data","6746ebd7":"> # Preprocess Data"}}