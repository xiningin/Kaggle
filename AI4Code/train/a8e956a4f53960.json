{"cell_type":{"0e85e6e9":"code","775b02e7":"code","c2995c31":"code","1623d94e":"code","4bf1c63c":"code","14b25c35":"code","1097230c":"code","c84c1f81":"code","782d9421":"code","4554a47b":"code","47b1c66f":"code","61a496a8":"code","6501df02":"code","4f99e2a2":"markdown","aed86989":"markdown","8a9a5055":"markdown","a124425b":"markdown","21caa297":"markdown","77a06e36":"markdown","33e99a63":"markdown","68ed1c7e":"markdown","c0d38f11":"markdown","3718afcc":"markdown"},"source":{"0e85e6e9":"# from https:\/\/www.kaggle.com\/jamesmcguigan\/coleridge-string-literals\nimport numpy as np \nimport pandas as pd\nimport simplejson\nimport re\nimport pydash\nimport sys\nimport os\nfrom collections import defaultdict\nfrom typing import *\nfrom joblib import Parallel, delayed\nfrom glob import glob\n\n\ndef clean_text(text: str) -> str:               return re.sub('[^A-Za-z0-9]+', ' ', str(text).lower()).strip()\ndef clean_texts(texts: List[str]) -> List[str]: return [ clean_text(text) for text in texts ] \n\ndef read_json(index: str, test_train=\"test\") -> Dict:\n    filename = f\"..\/input\/coleridgeinitiative-show-us-the-data\/{test_train}\/{index}.json\"\n    with open(filename) as f:\n        json = simplejson.load(f)\n    return json\n        \ndef json2text(index: str, test_train=\"test\") -> str:\n    json  = read_json(index, test_train)\n    texts = [\n        row[\"section_title\"] + \" \" + row[\"text\"] \n        for row in json\n    ]\n    texts = clean_texts(texts)\n    text  = \" \".join(texts)\n    return text\n\n\ndef extract_label(text: str, lookup: Dict[str, Set[str]]) -> str:\n    labels = []\n    for label, values in lookup.items():\n        if any([\n            value in text\n            for value in values\n        ]):\n            labels += [ label.strip() ]\n            \n    # label = \"|\".join(set(labels))  # multi label support\n    label = Counter(labels).most_common(1)[0][0] if len(labels) else \"\"  # single most-popular label\n    # print('extract_label', labels, '->', label)\n    return label","775b02e7":"def count_words(text):\n    return len(text.split())\n\n\nimport plotly.graph_objects as go\nimport plotly.express as px","c2995c31":"from pathlib import Path\nfrom tqdm.notebook import tqdm\ndatapath = Path('..\/input\/coleridgeinitiative-show-us-the-data\/') ","1623d94e":"train_df = pd.read_csv(datapath \/ 'train.csv')\nprint(train_df.shape)\ntrain_df.head()","4bf1c63c":"sections_df = pd.DataFrame()\nif Path('.\/sections_df.pickle').exists():\n    sections_df = pd.read_pickle('.\/sections_df.pickle')\nelse:\n    # this will takes around 30 mins\n    for i, row in tqdm(train_df.iterrows()):\n        paper_df = pd.DataFrame(read_json(row['Id'], 'train'))\n        # add title to the front\n        sections = ['title'] + clean_texts(paper_df['section_title'].to_list())\n        texts = clean_texts([row['pub_title']] + paper_df['text'].to_list())\n        for sect, text in zip(sections, texts):\n            sections_df = sections_df.append({'id':row['Id'], 'section': sect, 'label_in_section': row['cleaned_label'] in text, 'word_count': count_words(text)}, ignore_index=True)","14b25c35":"sections_df.to_pickle('.\/sections_df.pickle')","1097230c":"# number of unique sections\nprint(f\"number of unique sections {sections_df['section'].nunique()} \/ {len(sections_df)}\")\n\nsection_counts = sections_df['section'].value_counts()\nprint('the top 20 sections')\nsection_counts.head(20)\n","c84c1f81":"section_counts.tail(20)","782d9421":"# probability of apparence of dataset label of each sections\nprob_labels = sections_df[['section','label_in_section']].groupby('section').mean()\n\nprob_labels = prob_labels.join(section_counts)\nprob_labels.columns=['prob label in section', 'section counts']","4554a47b":"prob_labels","47b1c66f":"prob_labels.sort_values('section counts', ascending=False).head(20)\n","61a496a8":"prob_labels.sort_values('prob label in section', ascending=False).head(20)","6501df02":"prob_labels[prob_labels['section counts'] > 20].sort_values('prob label in section', ascending=False).head(20)","4f99e2a2":"### statistics of sections info","aed86989":"# purpose\n\n- The dataset label must appear somewhere in the article. So, let's find out where does the answer located. Intuitativley, the label is likely to appeared in sections like \"dataset\", \"methodology\", .... Thus, we may ignore the irelavent sections.\n\n- In addition, I will give a statistics EDA of the sections. Are there a common section structure of these papers? \n\n","8a9a5055":"## read json text","a124425b":"# prepare dataset","21caa297":"- there are indeed many mis-formated section","77a06e36":"- dataset label seems to appear in many sections","33e99a63":"- Common sections like \"abstracts\", \"introduction\", \"results\", \"methods\", \"discussions\", \"conclusions\" are indeed popular","68ed1c7e":"- I should see the trend with constraints of section counts","c0d38f11":"## training set label and index","3718afcc":"# functions"}}