{"cell_type":{"e3f3a4c1":"code","4e7062bb":"code","924601ae":"code","60e45d61":"code","1abd4df5":"code","7bba5b2e":"code","8e74de31":"code","43cc58c1":"code","29a8d867":"code","7bf8a41d":"code","f98fdfb4":"code","c311241a":"code","0cbaa5f3":"code","416c1696":"code","37c37d0a":"code","a77f17ff":"code","537c92ac":"code","8edf2a64":"code","f1a9acac":"code","d3b81fee":"code","e2dbe5b4":"code","b626581d":"code","8cb0c867":"code","eb2618dd":"code","0d6d20ad":"code","cf714251":"code","5590e5f4":"code","939a3dab":"code","aae001eb":"code","e7c5524c":"code","74cfd052":"code","4c4dbae1":"code","dde94cda":"code","839a1ae7":"code","43bd3956":"code","1cf08a76":"code","f5f222c7":"code","aa9856d8":"code","74bf9d1c":"code","b1d41392":"code","c777c8b3":"code","6fd126e3":"code","e9f0dd42":"code","56ebcaab":"code","a913ea02":"code","0c413d25":"code","e29527d4":"code","6d091242":"code","10029aca":"code","1f3fe2b1":"code","59c2ce9f":"code","9939b77e":"code","e75513f4":"code","827d2707":"code","f910ce01":"code","fde68f0a":"code","d1094143":"code","31f0320c":"code","4dd37b57":"code","1c57ee3a":"code","1154d0fb":"code","634f9186":"code","3ece5adb":"code","048edd9c":"code","77b5a8a9":"code","a18008af":"code","2f5ef170":"code","105d7082":"code","06a3eb7c":"code","2652c29b":"code","adfcb99a":"code","3ff7bda4":"code","c9f3eb3d":"code","b580933d":"code","63c79320":"code","184333d5":"code","757c6d47":"code","43a930f4":"code","dafa3cc1":"code","bf64429f":"code","1ac88da9":"code","09b536df":"code","7f041088":"code","b5d5d7ac":"code","b30bfebc":"code","675b0ed3":"code","f650a2b3":"code","9c1bf4fc":"code","2ec79bbd":"code","a2fd38b5":"code","63035349":"code","18529373":"code","1a74060c":"code","6a54c7c5":"code","6c40726c":"code","57d4b23d":"code","9c98ddeb":"code","485386a4":"code","01ef87bc":"code","43934080":"code","acf80014":"code","ca3cd390":"code","9b6353a2":"code","743a6a77":"code","0ae0d72b":"code","0030b52c":"code","af4ff071":"code","6afbebfc":"code","878d9850":"code","b652682b":"code","e1b11c22":"code","55ed6599":"code","61c71acc":"code","e5ea51d1":"code","7ce58b77":"code","5f13f2a1":"code","8fb5cde2":"code","d3fd8780":"code","9f6a8473":"markdown","12fa740b":"markdown","0f3e0bb3":"markdown","a865cad0":"markdown","d6501d7b":"markdown","9ff23db6":"markdown","8781b47c":"markdown","d8cdf3c3":"markdown","b2f2079b":"markdown","f7ad3384":"markdown","413829f1":"markdown","a634fab6":"markdown","e96ed336":"markdown","dff377c2":"markdown","233f9ff0":"markdown","a9922c3e":"markdown","593c4b23":"markdown","15ea7dbb":"markdown","40bd2fdd":"markdown","2d9cbce8":"markdown","aa31e516":"markdown","0c488f93":"markdown","39a2c37c":"markdown","0b5a7d52":"markdown","c9febd0b":"markdown","e0dda02d":"markdown","81feadbc":"markdown","206b3d24":"markdown","47e60fcb":"markdown","5f2215e3":"markdown","89ed74fb":"markdown","530a579a":"markdown","e8790fc9":"markdown","3032d119":"markdown","39f59a25":"markdown","cdf5d493":"markdown","4e0e7549":"markdown","8868cc97":"markdown","b2233bd1":"markdown","3cf87561":"markdown","f47a6f2c":"markdown","476d571f":"markdown","d4bffa73":"markdown","1ea1871e":"markdown","26bf9808":"markdown","3c6161ac":"markdown"},"source":{"e3f3a4c1":"import numpy as np","4e7062bb":"populasyon = np.random.randint(0, 80, 10000)","924601ae":"populasyon[0:10]","60e45d61":"#orneklem cekimi\nnp.random.seed(115)\norneklem = np.random.choice(a = populasyon, size = 100)\norneklem[0:10]","1abd4df5":"orneklem.mean()","7bba5b2e":"populasyon.mean()","8e74de31":"#orneklem da\u011f\u0131l\u0131m\u0131","43cc58c1":"np.random.seed(10)\norneklem1 = np.random.choice(a = populasyon, size = 100)\norneklem2 = np.random.choice(a = populasyon, size = 100)\norneklem3 = np.random.choice(a = populasyon, size = 100)\norneklem4 = np.random.choice(a = populasyon, size = 100)\norneklem5 = np.random.choice(a = populasyon, size = 100)\norneklem6 = np.random.choice(a = populasyon, size = 100)\norneklem7 = np.random.choice(a = populasyon, size = 100)\norneklem8 = np.random.choice(a = populasyon, size = 100)\norneklem9 = np.random.choice(a = populasyon, size = 100)\norneklem10 = np.random.choice(a = populasyon, size = 100)","29a8d867":"(orneklem1.mean() + orneklem2.mean() + orneklem3.mean() + orneklem4.mean() + orneklem5.mean() \n+ orneklem6.mean() + orneklem7.mean() + orneklem8.mean() + orneklem9.mean() + orneklem10.mean() )  \/ 10","7bf8a41d":"orneklem1.mean()","f98fdfb4":"orneklem2.mean()","c311241a":"import seaborn as sns\ntips = sns.load_dataset(\"tips\")\ndf = tips.copy()\ndf.head()","0cbaa5f3":"df.describe().T","416c1696":"!pip install researchpy\nimport researchpy as rp","37c37d0a":"rp.summary_cont(df[[\"total_bill\",\"tip\",\"size\"]])","a77f17ff":"rp.summary_cat(df[[\"sex\",\"smoker\",\"day\"]])","537c92ac":"df[[\"tip\",\"total_bill\"]].cov()","8edf2a64":"df[[\"tip\",\"total_bill\"]].corr()","f1a9acac":"import numpy as np\nfiyatlar = np.random.randint(10,110, 1000)","d3b81fee":"fiyatlar.mean()","e2dbe5b4":"import statsmodels.stats.api as sms","b626581d":"sms.DescrStatsW(fiyatlar).tconfint_mean()","8cb0c867":"def yazdir(metin):\n    print(metin, \"program \u00f6\u011frenilecek\")\n \nyazdir(\"O\")","eb2618dd":"print(\"metin\", \"program \u00f6\u011frenilecek\")","0d6d20ad":"from scipy.stats import bernoulli","cf714251":"p = 0.6","5590e5f4":"rv = bernoulli(p)\nrv.pmf(k = 0)","939a3dab":"rng.randint(0, 2, size = 5)","aae001eb":"import numpy as np\nrng = np.random.RandomState(123)\nfor i in np.arange(1,21):\n    deney_sayisi = 2**i\n    yazi_turalar = rng.randint(0, 2, size = deney_sayisi)\n    yazi_olasiliklari = np.mean(yazi_turalar)\n    print(\"At\u0131\u015f Say\u0131s\u0131:\",deney_sayisi,\"---\",'Yaz\u0131 Olas\u0131l\u0131\u011f\u0131: %.2f' % (yazi_olasiliklari * 100))","e7c5524c":"1\/5","74cfd052":"from scipy.stats import binom","4c4dbae1":"p = 0.01\nn = 100\nrv = binom(n, p)\nprint(rv.pmf(1))\nprint(rv.pmf(5))\nprint(rv.pmf(10))","dde94cda":"from scipy.stats import poisson","839a1ae7":"lambda_ = 0.1","43bd3956":"rv = poisson(mu = lambda_)\nprint(rv.pmf(k = 0))","1cf08a76":"print(rv.pmf(k = 3))","f5f222c7":"print(rv.pmf(k = 5))","aa9856d8":"from scipy.stats import norm","74bf9d1c":"#90'dan fazla olmas\u0131 \n1-norm.cdf(90, 80, 5)","b1d41392":"#70'den fazla olmas\u0131\n1-norm.cdf(70, 80, 5)","c777c8b3":"#73'den az olmas\u0131\nnorm.cdf(73, 80, 5)","6fd126e3":"#85 ile 90 aras\u0131nda olmas\u0131","e9f0dd42":"norm.cdf(90, 80, 5) - norm.cdf(85, 80, 5)","56ebcaab":"import numpy as np\n\nolcumler = np.array([17, 160, 234, 149, 145, 107, 197, 75, 201, 225, 211, 119, \n              157, 145, 127, 244, 163, 114, 145,  65, 112, 185, 202, 146,\n              203, 224, 203, 114, 188, 156, 187, 154, 177, 95, 165, 50, 110, \n              216, 138, 151, 166, 135, 155, 84, 251, 173, 131, 207, 121, 120])","a913ea02":"olcumler[0:10]","0c413d25":"import scipy.stats as stats","e29527d4":"stats.describe(olcumler)","6d091242":"#normallik varsay\u0131m\u0131","10029aca":"#histogram\npd.DataFrame(olcumler).plot.hist();","1f3fe2b1":"#qqplot\nimport pylab\nstats.probplot(olcumler, dist=\"norm\", plot=pylab)\npylab.show()","59c2ce9f":"from scipy.stats import shapiro","9939b77e":"shapiro(olcumler)","e75513f4":"print(\"T Hesap \u0130statisti\u011fi: \" + str(shapiro(olcumler)[0]))\nprint(\"Hesaplanan P-value: \" + str(shapiro(olcumler)[1]))","827d2707":"stats.ttest_1samp(olcumler, popmean = 170)","f910ce01":"from statsmodels.stats.descriptivestats import sign_test","fde68f0a":"sign_test(olcumler, 170)","d1094143":"from statsmodels.stats.proportion import proportions_ztest","31f0320c":"count = 40\nnobs = 500\nvalue = 0.125","4dd37b57":"proportions_ztest(count, nobs, value)","1c57ee3a":"#VERI TIPI I","1154d0fb":"A = pd.DataFrame([30,27,21,27,29,30,20,20,27,32,35,22,24,23,25,27,23,27,23,\n        25,21,18,24,26,33,26,27,28,19,25])\n\nB = pd.DataFrame([37,39,31,31,34,38,30,36,29,28,38,28,37,37,30,32,31,31,27,\n        32,33,33,33,31,32,33,26,32,33,29])\n\n\nA_B = pd.concat([A, B], axis = 1)\nA_B.columns = [\"A\",\"B\"]\n\nA_B.head()","634f9186":"#VERI TIPI II","3ece5adb":"A = pd.DataFrame([30,27,21,27,29,30,20,20,27,32,35,22,24,23,25,27,23,27,23,\n        25,21,18,24,26,33,26,27,28,19,25])\n\nB = pd.DataFrame([37,39,31,31,34,38,30,36,29,28,38,28,37,37,30,32,31,31,27,\n        32,33,33,33,31,32,33,26,32,33,29])\n\n#A ve A'n\u0131n grubu\nGRUP_A = np.arange(len(A))\nGRUP_A = pd.DataFrame(GRUP_A)\nGRUP_A[:] = \"A\"\nA = pd.concat([A, GRUP_A], axis = 1)\n\n#B ve B'nin Grubu\nGRUP_B = np.arange(len(B))\nGRUP_B = pd.DataFrame(GRUP_B)\nGRUP_B[:] = \"B\"\nB = pd.concat([B, GRUP_B], axis = 1)\n\n#Tum veri\nAB = pd.concat([A,B])\nAB.columns = [\"gelir\",\"GRUP\"]\nprint(AB.head())\nprint(AB.tail())","048edd9c":"import seaborn as sns\nsns.boxplot(x = \"GRUP\", y = \"gelir\", data = AB);","77b5a8a9":"A_B.head()","a18008af":"AB.head()","2f5ef170":"#normallik varsay\u0131m\u0131","105d7082":"from scipy.stats import shapiro","06a3eb7c":"shapiro(A_B.A)","2652c29b":"shapiro(A_B.B)","adfcb99a":"#varyans homojenligi varsay\u0131m\u0131","3ff7bda4":"stats.levene(A_B.A, A_B.B)","c9f3eb3d":"stats.ttest_ind(A_B[\"A\"], A_B[\"B\"], equal_var = True)","b580933d":"test_istatistigi, pvalue = stats.ttest_ind(A_B[\"A\"], A_B[\"B\"], equal_var=True)\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","63c79320":"stats.mannwhitneyu(A_B[\"A\"], A_B[\"B\"])","184333d5":"test_istatistigi, pvalue = stats.mannwhitneyu(A_B[\"A\"], A_B[\"B\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","757c6d47":"oncesi = pd.DataFrame([123,119,119,116,123,123,121,120,117,118,121,121,123,119,\n            121,118,124,121,125,115,115,119,118,121,117,117,120,120,\n            121,117,118,117,123,118,124,121,115,118,125,115])\n\nsonrasi = pd.DataFrame([118,127,122,132,129,123,129,132,128,130,128,138,140,130,\n             134,134,124,140,134,129,129,138,134,124,122,126,133,127,\n             130,130,130,132,117,130,125,129,133,120,127,123])","43a930f4":"oncesi[0:5]","dafa3cc1":"sonrasi[0:5]","bf64429f":" np.arange(len(oncesi))","1ac88da9":"#BIRINCI VERI SETI\nAYRIK = pd.concat([oncesi, sonrasi], axis = 1)\nAYRIK.columns = [\"ONCESI\",\"SONRASI\"]\nprint(\"'AYRIK' Veri Seti: \\n\\n \", AYRIK.head(), \"\\n\\n\")\n\n\n#IKINCI VERI SETI\n#ONCESI FLAG\/TAG'INI OLUSTURMA\nGRUP_ONCESI = np.arange(len(oncesi))\nGRUP_ONCESI = pd.DataFrame(GRUP_ONCESI)\nGRUP_ONCESI[:] = \"ONCESI\"\n#FLAG VE ONCESI DEGERLERINI BIR ARAYA GETIRME\nA = pd.concat([oncesi, GRUP_ONCESI], axis = 1)\n#SONRASI FLAG\/TAG'INI OLUSTURMA\nGRUP_SONRASI = np.arange(len(sonrasi))\nGRUP_SONRASI = pd.DataFrame(GRUP_SONRASI)\nGRUP_SONRASI[:] = \"SONRASI\"\n\n#FLAG VE SONRASI DEGERLERINI BIR ARAYA GETIRME\nB = pd.concat([sonrasi, GRUP_SONRASI], axis = 1)\n\n#TUM VERIYI BIR ARAYA GETIRME\nBIRLIKTE = pd.concat([A,B])\nBIRLIKTE\n\n#ISIMLENDIRME\nBIRLIKTE.columns = [\"PERFORMANS\",\"ONCESI_SONRASI\"]\nprint(\"'BIRLIKTE' Veri Seti: \\n\\n\", BIRLIKTE.head(), \"\\n\")","09b536df":"import seaborn as sns\nsns.boxplot(x = \"ONCESI_SONRASI\", y = \"PERFORMANS\", data = BIRLIKTE);","7f041088":"from scipy.stats import shapiro","b5d5d7ac":"shapiro(AYRIK.ONCESI)","b30bfebc":"shapiro(AYRIK.SONRASI)","675b0ed3":"import scipy.stats as stats\nstats.levene(AYRIK.ONCESI, AYRIK.SONRASI)","f650a2b3":"stats.ttest_rel(AYRIK.ONCESI, AYRIK.SONRASI)","9c1bf4fc":"test_istatistigi, pvalue = stats.ttest_rel(AYRIK[\"ONCESI\"], AYRIK[\"SONRASI\"])\nprint('Test \u0130statisti\u011fi = %.5f, p-de\u011feri = %.5f' % (test_istatistigi, pvalue))","2ec79bbd":"stats.wilcoxon(AYRIK.ONCESI, AYRIK.SONRASI)","a2fd38b5":"test_istatistigi, pvalue = stats.wilcoxon(AYRIK[\"ONCESI\"], AYRIK[\"SONRASI\"])\n\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","63035349":"from statsmodels.stats.proportion import proportions_ztest","18529373":"import numpy as np\nbasari_sayisi = np.array([300, 250])\ngozlem_sayilari = np.array([1000, 1100])","1a74060c":"proportions_ztest(count = basari_sayisi, nobs = gozlem_sayilari)","6a54c7c5":"A = pd.DataFrame([28,33,30,29,28,29,27,31,30,32,28,33,25,29,27,31,31,30,31,34,30,32,31,34,28,32,31,28,33,29])\n\nB = pd.DataFrame([31,32,30,30,33,32,34,27,36,30,31,30,38,29,30,34,34,31,35,35,33,30,28,29,26,37,31,28,34,33])\n\nC = pd.DataFrame([40,33,38,41,42,43,38,35,39,39,36,34,35,40,38,36,39,36,33,35,38,35,40,40,39,38,38,43,40,42])\n\ndfs = [A, B, C]\n\nABC = pd.concat(dfs, axis = 1)\nABC.columns = [\"GRUP_A\",\"GRUP_B\",\"GRUP_C\"]\nABC.head()","6c40726c":"from scipy.stats import shapiro","57d4b23d":"shapiro(ABC[\"GRUP_A\"])","9c98ddeb":"shapiro(ABC[\"GRUP_B\"])","485386a4":"shapiro(ABC[\"GRUP_C\"])","01ef87bc":"stats.levene(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])","43934080":"from scipy.stats import f_oneway","acf80014":"f_oneway(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])","ca3cd390":"print('{:.5f}'.format(f_oneway(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])[1]))","9b6353a2":"ABC.describe().T","743a6a77":"from scipy.stats import kruskal","0ae0d72b":"kruskal(ABC[\"GRUP_A\"], ABC[\"GRUP_B\"],ABC[\"GRUP_C\"])","0030b52c":"import seaborn as sns\ntips = sns.load_dataset('tips')\ndf = tips.copy()\ndf.head()","af4ff071":"df[\"total_bill\"] = df[\"total_bill\"] - df[\"tip\"]","6afbebfc":"df.head()","878d9850":"df.plot.scatter(\"tip\",\"total_bill\");","b652682b":"from scipy.stats import shapiro","e1b11c22":"test_istatistigi, pvalue = shapiro(df[\"tip\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))\n\ntest_istatistigi, pvalue = shapiro(df[\"total_bill\"])\nprint('Test \u0130statisti\u011fi = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","55ed6599":"df[\"tip\"].corr(df[\"total_bill\"])","61c71acc":"df[\"tip\"].corr(df[\"total_bill\"], method = \"spearman\")","e5ea51d1":"from scipy.stats.stats import pearsonr","7ce58b77":"test_istatistigi, pvalue = pearsonr(df[\"tip\"],df[\"total_bill\"])\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","5f13f2a1":"from scipy.stats import stats\nstats.spearmanr(df[\"tip\"],df[\"total_bill\"])","8fb5cde2":"test_istatistigi, pvalue = stats.spearmanr(df[\"tip\"],df[\"total_bill\"])\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","d3fd8780":"test_istatistigi, pvalue = stats.kendalltau(df[\"tip\"],df[\"total_bill\"])\n\nprint('Korelasyon Katsay\u0131s\u0131 = %.4f, p-de\u011feri = %.4f' % (test_istatistigi, pvalue))","9f6a8473":"## Normal Da\u011f\u0131l\u0131m","12fa740b":"## Nonparametrik Ba\u011f\u0131ms\u0131z \u0130ki \u00d6rneklem Testi","0f3e0bb3":"## Varsay\u0131m Kontrol\u00fc","a865cad0":"## Binom Da\u011f\u0131l\u0131m\u0131","d6501d7b":"## Hipotez Testi","9ff23db6":"## B\u00fcy\u00fck Say\u0131lar Yasas\u0131","8781b47c":"HO: p = 0.125 \n\nH1: p != 0.125","d8cdf3c3":"## Poisson Da\u011f\u0131l\u0131m\u0131\n\n${\\displaystyle f(x,\\lambda )={\\frac {\\lambda ^{x}e^{-\\lambda }}{x!}}\\,\\!}$,  x = 0,1,2,...,n","b2f2079b":"# Ba\u011f\u0131ml\u0131 \u0130ki \u00d6rneklem T Testi","f7ad3384":"## Bernoulli Da\u011f\u0131l\u0131m\u0131","413829f1":"## Nonparametrik Hipotez Testi","a634fab6":"## \u0130ki \u00d6rneklem Oran Testi","e96ed336":"# Tek \u00d6rneklem Oran Testi","dff377c2":"## Ba\u011f\u0131ms\u0131z \u0130ki \u00d6rneklem T Testi","233f9ff0":"${\\displaystyle f(x\\mid \\mu ,\\sigma ^{2})={\\frac {1}{\\sqrt {2\\pi \\sigma ^{2}}}}e^{-{\\frac {(x-\\mu )^{2}}{2\\sigma ^{2}}}}}$\n\n* $\\mu$  ortalama ya da da\u011f\u0131l\u0131m\u0131n beklenen de\u011feri\n\n* ${\\displaystyle \\sigma }$  standart sapma\n\n* ${\\displaystyle \\sigma ^{2}}$ varyans","a9922c3e":"Bah\u015fi\u015f veri seti:\n\ntotal_bill: yeme\u011fin toplam fiyat\u0131 (bah\u015fi\u015f ve vergi dahil)\n\ntip: bah\u015fi\u015f\n\nsex: \u00fccreti \u00f6deyen ki\u015finin cinsiyeti (0=male, 1=female)\n\nsmoker: grupta sigara i\u00e7en var m\u0131? (0=No, 1=Yes)\n\nday: g\u00fcn (3=Thur, 4=Fri, 5=Sat, 6=Sun)\n\ntime: ne zaman? (0=Day, 1=Night)\n\nsize: grupta ka\u00e7 ki\u015fi var?","593c4b23":"## Varsay\u0131m Kontrolleri ","15ea7dbb":"## Shapiro-Wilks Testi","40bd2fdd":"${\\displaystyle f(k;p)=p^{k}(1-p)^{1-k}\\quad {\\text{for }}k\\in \\{0,1\\}}$\n\n\n${\\displaystyle \\operatorname {E} \\left(X\\right)=p}$\n\n$\\operatorname {Var} [X]=pq=p(1-p)$","2d9cbce8":"# Varyans Analizi","aa31e516":"# Hipotez Testi","0c488f93":"H0: Web sitemizde ge\u00e7irilen ortalama s\u00fcre 170'tir\nH1: .. de\u011fi\u015ftir","39a2c37c":"# Veri Bilimi i\u00e7in \u0130statistik","0b5a7d52":"## Nonparametrik Ba\u011f\u0131ml\u0131 \u0130ki \u00d6rneklem Testi","c9febd0b":"# Varsay\u0131m Kontrol\u00fc","e0dda02d":"# \u0130\u015f Uygulamas\u0131: Fiyat Stratejisi Karar Destek","81feadbc":"H0: M1 = M2 \n\nH1: M1 != M2","206b3d24":"## Hipotez Testinin Uygulanmas\u0131","47e60fcb":"### Korelasyon Katsay\u0131s\u0131","5f2215e3":"## Hipotez Testi","89ed74fb":"${\\displaystyle f(k;n,p)={n \\choose k}p^{k}(1-p)^{n-k}}$, k = 0, 1, 2, ...,n\n\n\n${\\displaystyle \\operatorname {E} (X)=np}$\n\n\n${\\displaystyle \\operatorname {Var} (X)=np(1-p)}$","530a579a":"# Tek \u00d6rneklem T Testi\n\n\u00d6rnek ortalamas\u0131na ili\u015fkin test yapmak i\u00e7in kullan\u0131l\u0131r.\n\n**Hipotezler:**\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> = <i>50<\/i><\/d>   \n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> \u2260 <i>50<\/i><\/d><br><br>\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> <= <i>50<\/i><\/d><br>\n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> > <i>50<\/i><\/d><br><br>\n\n<d><i>H<\/i><sub>0<\/sub>: <i>\u03bc<\/i> >= <i>50<\/i><\/d><br>\n<d><i>H<\/i><sub>1<\/sub>: <i>\u03bc<\/i> < <i>50<\/i><\/d><br><br>\n\n\n\n\n<table><\/table>\n\n**Test \u0130statisti\u011fi:**\n\n${\\displaystyle t={\\frac {{\\bar {x}}-\\mu _{0}}{\\frac {s}{\\sqrt {n}}}}}$\n","e8790fc9":"## Nonparametrik Tek \u00d6rneklem Testi","3032d119":"H0: \u00d6rnek da\u011f\u0131l\u0131m\u0131 ile teorik normal da\u011f\u0131l\u0131m aras\u0131nda ist. ol. anl. bir fark. yoktur\n\nH1: ... fark vard\u0131r","39f59a25":"### Korelasyonunu Anlaml\u0131l\u0131\u011f\u0131n\u0131n Testi","cdf5d493":"## Nonparametrik Hipotez Testi","4e0e7549":"## Hipotez Testi","8868cc97":"**Bir rassal de\u011fi\u015fkenin uzun vadeli kararl\u0131l\u0131\u011f\u0131n\u0131 tan\u0131mlayan olas\u0131l\u0131k teoremidir.**","b2233bd1":"# Olas\u0131l\u0131k Da\u011f\u0131l\u0131mlar\u0131","3cf87561":"H0: Varyanslar Homojendir\n\nH1: Varyanslar Homojen De\u011fildir","f47a6f2c":"# Betimsel \u0130statistikler","476d571f":"# \u00d6rnek Teorisi","d4bffa73":"## Varsay\u0131m Kontrol\u00fc","1ea1871e":"## Korelasyon Analizi","26bf9808":"H0: M1 = M2 = M3 (grup ortalamalari arasinda ist anl. farklilik yoktur) \n\nH1: Fark vardir.","3c6161ac":"## Varsay\u0131mlar"}}