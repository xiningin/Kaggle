{"cell_type":{"312f4c70":"code","8931a14d":"code","80aebee0":"markdown","390ce5d1":"markdown","94ba2042":"markdown"},"source":{"312f4c70":"from PIL import Image\nimport numpy as np\n\npath_to_img = '..\/input\/akensert-transform-panda-tiles\/akensert_little\/0005f7aaab2800f6170c399693a96917.jpeg'\n\nimgs = np.array(Image.open(path_to_img)).reshape(-1, 256, 256, 3)\n\nimgs.shape","8931a14d":"Image.fromarray(imgs[0])","80aebee0":"Now show a crop:","390ce5d1":"Hi Kagglers, I decided to upload my version of the dataset which I made using the awesome work from @akensert which you can find [here](https:\/\/www.kaggle.com\/akensert\/panda-optimized-tiling-tf-data-dataset).\nThis dataset is optimized for reading directly from a Kaggle Notebook. As a matter of fact, each images comes in dimension `(n_crops * 256, 256, 3)`, so it is possible to retrieve the crops by doing a reshape to `(-1, 256, 256, 3)`. This method let me spare precious space and disk reading speed.\n\nI'm succesfully using it on my Kaggle notebook to train a network and, with basic transformations, I'm able to fully use the GPU. You can find the dataset in the resources of this notebook or [here](https:\/\/www.kaggle.com\/mawanda\/akensert-transform-panda-tiles)\n\n\nA little demonstration follows.","94ba2042":"If you find this dataset helpful pleas upvote! And don't forget to upvote also @akensert work which I mentioned above."}}