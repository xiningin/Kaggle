{"cell_type":{"1a9b5fce":"code","b7e620e2":"code","235adc08":"code","71940bea":"code","efef42c7":"code","ba9092de":"code","e436ecf6":"code","049c8a5d":"code","b9f1531a":"code","14d1d645":"code","80d6d2be":"code","12be8568":"code","f0b2858a":"code","a0f0ab0e":"code","82d475a5":"code","129729ea":"code","b3425176":"code","8975565d":"code","229127f4":"code","d0edee72":"code","b2029cb6":"code","234ec719":"code","fec7a483":"code","af208082":"code","cf942faf":"code","78f12be3":"code","2e5d87e0":"code","1807e7a6":"code","54544cbe":"code","ca18e62d":"code","2daa059b":"code","e9250523":"code","950bc5f2":"code","84be24b1":"code","83b30296":"code","ac2a9966":"code","aeed0a9a":"code","d82bb815":"code","eff14d15":"code","36b781d8":"code","59d62ff0":"code","3eaadc76":"code","919ff133":"code","084bd1d4":"code","a1116262":"code","dd25b01b":"code","35694d7f":"code","5d1b6dd1":"code","8185304b":"code","3097538b":"markdown","cacf068f":"markdown","6ea29a6e":"markdown","fd732fba":"markdown","df22ba57":"markdown","328c7c81":"markdown","01c2e44d":"markdown","d0806f23":"markdown","f5485163":"markdown","68d053f0":"markdown","2584fd52":"markdown","9c8f5cf9":"markdown","7be95030":"markdown","83671306":"markdown","e9c5c1d1":"markdown","a9c83755":"markdown","5846d9aa":"markdown","9da704b3":"markdown","a6d6980f":"markdown","dcd144b4":"markdown","77902c89":"markdown","bb21ce1c":"markdown","9fbec28c":"markdown"},"source":{"1a9b5fce":"import pandas as pd\nimport numpy as np\nimport os\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.datasets import make_classification\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.metrics import mean_absolute_error \nfrom sklearn.metrics import mean_squared_error \nfrom sklearn.metrics import median_absolute_error\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.svm import SVR\nfrom sklearn.svm import SVC","b7e620e2":"df=pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/heart.csv')\ndfg=pd.read_csv('..\/input\/heart-attack-analysis-prediction-dataset\/o2Saturation.csv')","235adc08":"df.head().style.background_gradient(cmap = 'copper')","71940bea":"dfg.head()","efef42c7":"df.shape","ba9092de":"dfg.shape","e436ecf6":"df.describe().style.background_gradient(cmap = 'copper')","049c8a5d":"df.columns","b9f1531a":"df.info()","14d1d645":"df.isna()","80d6d2be":"df.count()","12be8568":"percent_missing = df.isnull().sum() * 100 \/ len(df)\nmissing_value_df = pd.DataFrame({#'column_name': train.columns,\n                                 'percent_missing': percent_missing})\npercent_missing","f0b2858a":"df.isna().mean()","a0f0ab0e":"df.describe().transpose().style.background_gradient(cmap = 'copper')","82d475a5":"plot10=sns.boxplot(df['age'],orient='v')\nplt.title('Numerical Summary',fontdict={'fontsize':8})\nplt.xlabel('Age',fontdict={'fontsize':7})\nplt.ylabel(r'Five Point Summary(BP)',fontdict={'fontsize':7})\nplt.tight_layout()","129729ea":"import plotly.figure_factory as ff\nimport plotly.graph_objs as go\nfrom plotly.offline import init_notebook_mode, iplot\nfrom scipy import stats","b3425176":"fig = ff.create_distplot([df.age],['age'],bin_size=5)\niplot(fig, filename='Basic Distplot')\n\n#Get also the QQ-plot\nfig = plt.figure()\nres = stats.probplot(df['age'], plot=plt)\nplt.show()","8975565d":"print('Heatmap')\nplt.figure(figsize=(15,10))\nsns.heatmap(df.corr(),annot=True,cmap='coolwarm')","229127f4":"sns.jointplot(x = df['chol'], y = df['trtbps'], kind = 'hist',color = 'pink')\nsns.jointplot(x = df['trtbps'], y = df['thalachh'], kind = 'hex', color = 'green')\nsns.jointplot(x = df['chol'], y = df['thalachh'], kind = 'kde', color = 'grey')","d0edee72":"fig = px.histogram(df, x=\"age\",color=\"output\",\n                   marginal=\"box\",\n                   hover_data=df.columns,\n                  color_discrete_sequence=['#f64c72','#85bfdc'])\nfig.update_layout(\n    title=\"Heart attack chance corresponding to age\"\n)\nfig.show()","b2029cb6":"fig = px.scatter_3d(df, x='oldpeak', y='thalachh', z='age',\n              color='output',size='trtbps',color_discrete_sequence=['#f64c72','#85bfdc'])\nfig.show()","234ec719":"px.parallel_coordinates(df, color=\"age\",) ","fec7a483":"px.funnel(df, x='oldpeak', y='age')","af208082":"df.head(1)","cf942faf":"px.scatter_ternary(df, a=\"trtbps\", b=\"age\", c=\"thalachh\")","78f12be3":"X = df.iloc[:, :-1]\ny = df.iloc[:, -1]","2e5d87e0":"X","1807e7a6":"y","54544cbe":"# Feature Scaling\nfrom sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX = sc.fit_transform(X)","ca18e62d":"X","2daa059b":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=1)","e9250523":"LogisticRegration= LogisticRegression()\nLogisticRegration.fit(X_train,y_train)\npredictions1 = LogisticRegration.predict(X_test)\nprint(list(predictions1))","950bc5f2":"print(classification_report(y_test,predictions1))\nprint('\\n')\nprint(confusion_matrix(y_test,predictions1))","84be24b1":"# Fitting Logistic Regression to the Training set\nfrom sklearn.linear_model import LogisticRegression\nclss = LogisticRegression()\nclss.fit(X_train, y_train)","83b30296":"y_pred = clss.predict(X_test)\nprint(list(y_pred ))","ac2a9966":"#  Confusion Matrix\nfrom sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, y_pred)\ncm","aeed0a9a":"sns.heatmap(cm)","d82bb815":"from sklearn.metrics import accuracy_score\nacclr = accuracy_score(y_test,predictions1)*100\nacclr","eff14d15":"MLPRegressorModel = MLPRegressor(activation='relu', # can be also identity , logistic , relu\n                                 solver='adam',  # can be also sgd , adam\n                                 learning_rate='constant', # can be also invscaling , adaptive\n                                 early_stopping= False,\n                                 shuffle=True,\n                                 alpha=0.001 ,hidden_layer_sizes=(100, 3),random_state=33)\nMLPRegressorModel.fit(X_train, y_train)\n","36b781d8":"#Calculating Details\nprint('MLPRegressorModel Train Score is : ' , MLPRegressorModel.score(X_train, y_train))\nprint('----------------------------------------------------')\nprint('MLPRegressorModel Test Score is : ' , MLPRegressorModel.score(X_test, y_test))\nprint('MLPRegressorModel loss is : ' , MLPRegressorModel.loss_)\nprint('----------------------------------------------------')\nprint('MLPRegressorModel No. of iterations is : ' , MLPRegressorModel.n_iter_)\nprint('----------------------------------------------------')\nprint('MLPRegressorModel No. of layers is : ' , MLPRegressorModel.n_layers_)\nprint('----------------------------------------------------')\nprint('MLPRegressorModel last activation is : ' , MLPRegressorModel.out_activation_)\nprint('----------------------------------------------------')\n","59d62ff0":"MLPClassifierModel = MLPClassifier(activation='relu', # can be also identity , logistic , relu\n                                   solver='adam',  # can be also sgd , adam\n                                   learning_rate='constant', # can be also invscaling , adaptive\n                                   early_stopping= False,\n                                   alpha=0.0001 ,hidden_layer_sizes=(100, 3),random_state=33)\nMLPClassifierModel.fit(X_train, y_train)\n\n","3eaadc76":"print('MLPClassifierModel Train Score is : ' , MLPClassifierModel.score(X_train, y_train))\nprint('************\/\/\/\/**************')\nprint('MLPClassifierModel Test Score is : ' , MLPClassifierModel.score(X_test, y_test))\nprint('************\/\/\/\/**************')\nprint('MLPClassifierModel loss is : ' , MLPClassifierModel.loss_)\nprint('MLPClassifierModel No. of iterations is : ' , MLPClassifierModel.n_iter_)\nprint('************\/\/\/\/**************')\nprint('MLPClassifierModel No. of layers is : ' , MLPClassifierModel.n_layers_)\nprint('************\/\/\/\/**************')\nprint('MLPClassifierModel last activation is : ' , MLPClassifierModel.out_activation_)\nprint('************\/\/\/\/**************')","919ff133":"#Calculating Prediction\ny_pred = MLPClassifierModel.predict(X_test)\ny_pred_prob = MLPClassifierModel.predict_proba(X_test)\nprint('Predicted Value for MLPClassifierModel is : ' , y_pred[:10])\nprint('*******************************')\nprint('Prediction Probabilities Value for MLPClassifierModel is : ' , y_pred_prob[:10])\n\n","084bd1d4":"#Calculating Confusion Matrix\nCM = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix is : \\n', CM)\n\n# drawing confusion matrix\nsns.heatmap(CM, center = True)\nplt.show()\n \n","a1116262":"SVRModel = SVR(C = 1.0 ,epsilon=0.1,kernel = 'rbf') # it also can be : linear, poly, rbf, sigmoid, precomputed\nSVRModel.fit(X_train, y_train)\n\n#Calculating Details\nprint('SVRModel Train Score is : ' , SVRModel.score(X_train, y_train))\nprint('----------------------------------------------------')\nprint('SVRModel Test Score is : ' , SVRModel.score(X_test, y_test))\n\n","dd25b01b":"#Calculating Prediction\ny_pred = SVRModel.predict(X_test)\nprint('Predicted Value for SVRModel is : ' , y_pred[:10])\n","35694d7f":"SVCModel = SVC(kernel= 'rbf',# it can be also linear,poly,sigmoid,precomputed\n               max_iter=100000,C=1,gamma='auto')\nSVCModel.fit(X_train, y_train)\n\n#Calculating Details\nprint('SVCModel Train Score is : ' , SVCModel.score(X_train, y_train))\nprint('******************************************')\nprint('SVCModel Test Score is : ' , SVCModel.score(X_test, y_test))\n","5d1b6dd1":"#Calculating Prediction\ny_pred = SVCModel.predict(X_test)\nprint('Predicted Value for SVCModel is : ' , y_pred[:10])\n","8185304b":"#Calculating Confusion Matrix\nCM = confusion_matrix(y_test, y_pred)\nprint('Confusion Matrix is : \\n', CM)\n\n# drawing confusion matrix\nsns.heatmap(CM, center = True)\nplt.show()","3097538b":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Fitting Logistic Regression to the Training set<\/p>","cacf068f":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Jointplot<\/p>","6ea29a6e":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Using Distplot and Q-Q plot<\/p>","fd732fba":"heatmap","df22ba57":" <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Importing Libraries<\/p>","328c7c81":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Showing data<\/p>","01c2e44d":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">MLPRegressor<\/p>","d0806f23":"### As we have seen, the result is very low. Let's improve it with another algorithm","f5485163":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Make train_test split<\/p>\n","68d053f0":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Using the Logistic Regresion<\/p>","2584fd52":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">If you enjoy this notebook, don't forget to vote\ud83d\ude4c\ud83d\ude04\u2600\ufe0f<\/p>","9c8f5cf9":" \n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Calculating Prediction<\/p>","7be95030":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Using ML algo to pred<\/p>","83671306":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\"> MLPClassifier<\/p>","e9c5c1d1":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Read data<\/p>","a9c83755":"##### make Boxplot","5846d9aa":"<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Calculating Prediction<\/p>","9da704b3":" <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">EDA Heart Attack Analysis & PredictionSCORE[100%]<\/p>\n\n### Don't Forget to apvote.\ud83d\ude09","a6d6980f":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Calculating Prediction<\/p>","dcd144b4":"\n<a id=\"2\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Calculate Accuracy<\/p>","77902c89":"![IMAGE](https:\/\/images.medicinenet.com\/images\/featured\/detail_heart4.jpg)","bb21ce1c":"\n <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Make Feature Scaling<\/p>","9fbec28c":" <a id=\"1\"><\/a>\n# <p style=\"background-color:#627D78;font-family:newtimeroman;color:#D5CABD;font-size:150%;text-align:center;border-radius:20px 60px;\">Predicting the Test set results<\/p>"}}