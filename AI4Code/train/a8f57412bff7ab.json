{"cell_type":{"88ccad82":"code","23de97de":"code","809086e0":"code","afdaa513":"code","b3c77016":"code","083eda89":"code","c7df2af3":"code","c0745b78":"code","83eceadb":"code","770b2286":"code","db493e3c":"code","7e2687cd":"code","6a070f27":"code","f2fa1449":"code","5fafa9a7":"code","eb877ef1":"markdown","e65dabc8":"markdown"},"source":{"88ccad82":"#Import scikit-learn dataset library\nfrom sklearn import datasets","23de97de":"#Load dataset\niris_data = datasets.load_iris()","809086e0":"print(iris_data.feature_names)","afdaa513":"print(iris_data.target_names)","b3c77016":"print(iris_data.data[0:5])\niris_data.data.shape","083eda89":"print(iris_data.target)\niris_data.target.shape","c7df2af3":"X = iris_data.data\ny = iris_data.target","c0745b78":"# Import train_test_split function\nfrom sklearn.model_selection import train_test_split\n\n# Split dataset into training set and test set\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) \n\n# 70% training and 30% test","83eceadb":"#Import knearest neighbors Classifier model\nfrom sklearn.neighbors import KNeighborsClassifier\n\n#Create KNN Classifier\nknn = KNeighborsClassifier(n_neighbors=4)\n\n#Train the model using the training sets\nknn.fit(X_train, y_train)\n\n#Predict the response for test dataset\ny_pred = knn.predict(X_test)\ny_pred_train=knn.predict(X_train)","770b2286":"#Import scikit-learn metrics module for accuracy calculation\nfrom sklearn import metrics\n# Model Accuracy, how often is the classifier correct?\nprint(\"Accuracy Test :\",metrics.accuracy_score(y_test, y_pred))\nprint(\"Accuracy Train:\",metrics.accuracy_score(y_train, y_pred_train))","db493e3c":"k_range = range(1, 26)\n\n# We can create Python dictionary using [] or dict()\nscores = []\n\n# We use a loop through the range 1 to 26\n# We append the scores in the dictionary\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n    knn.fit(X_train, y_train)\n    y_pred = knn.predict(X_test)\n    scores.append(metrics.accuracy_score(y_test, y_pred))\n\nprint(scores)","7e2687cd":"# import Matplotlib (scientific plotting library)\nimport matplotlib.pyplot as plt\n\n# allow plots to appear within the notebook\n%matplotlib inline\n\n# plot the relationship between K and testing accuracy\n# plt.plot(x_axis, y_axis)\nplt.plot(k_range, scores)\nplt.xlabel('Value of K for KNN')\nplt.ylabel('Testing Accuracy')","6a070f27":"from statistics import mean, stdev\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import StratifiedKFold","f2fa1449":"# Feature Scaling for input features.\nscaler = preprocessing.MinMaxScaler()\nx_scaled = scaler.fit_transform(X)\n\n# Create StratifiedKFold object.\nskf = StratifiedKFold(n_splits=10, shuffle=True, random_state=1)\nlst_accu_stratified = []\n\nfor train_index, test_index in skf.split(iris_data.data, iris_data.target):\n    x_train_fold, x_test_fold = x_scaled[train_index], x_scaled[test_index]\n    y_train_fold, y_test_fold = y[train_index], y[test_index]\n    knn.fit(x_train_fold, y_train_fold)\n    lst_accu_stratified.append(knn.score(x_test_fold, y_test_fold))\n  ","5fafa9a7":"# Print the output.\nprint('List of possible accuracy:', lst_accu_stratified)\nprint('\\nMaximum Accuracy That can be obtained from this model is:',\n      max(lst_accu_stratified)*100, '%')\nprint('\\nMinimum Accuracy:',\n      min(lst_accu_stratified)*100, '%')\nprint('\\nOverall Accuracy:',\n      mean(lst_accu_stratified)*100, '%')\nprint('\\nStandard Deviation is:', stdev(lst_accu_stratified))","eb877ef1":"5. Use iris dataset of Q3 and build the k-nn model using k-fold cross validation, stratified cross \nfold validation. Compare the results of train_test_split, k-fold and skfold validation techniques.","e65dabc8":"3. Use iris flower dataset to create classification model. Your task is to predict the class to which \nthese plants belong. There are three classes in the dataset: Iris-setosa, Iris-versicolor and Iris\u0002virginica. Create the classification model using k-nn classifier and evaluate the performance of \nyour classifier. Find the best value of \u2018k\u2019 for iris dataset."}}