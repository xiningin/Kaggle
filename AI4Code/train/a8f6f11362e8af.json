{"cell_type":{"2876210e":"code","6f09ea0f":"code","b6baf8ba":"code","33f8c82c":"code","16320c4e":"code","0e33cf43":"code","fc83ee34":"code","662aa2e0":"code","feb7e23f":"code","309fd6a0":"code","d00d2a65":"code","c6f8df4f":"code","1e7784c2":"code","6b09e924":"code","d13e78e3":"code","b8e98a80":"code","4de299e2":"code","89ed9383":"code","ce8e7d7d":"code","26242824":"code","20c3c22b":"code","f7608cf1":"code","74eae601":"code","be24f8d5":"code","3639ab21":"code","bbe0d987":"code","6fde04cc":"code","fae6e97d":"code","4299ab34":"code","bc5f9d83":"code","2d3e0d65":"code","26305ddf":"code","ce0f1677":"code","55eccbfb":"code","14c11401":"markdown","7b935743":"markdown","852134eb":"markdown","682357ef":"markdown","465e4fe0":"markdown","6a48a1ae":"markdown","196016cf":"markdown","05b828f0":"markdown","b03600c5":"markdown","fa6f88c8":"markdown","2c52fee1":"markdown","3a01c2af":"markdown","9e2ace8d":"markdown","c51e6edf":"markdown","cf2b6d2e":"markdown","25d92eb6":"markdown","bbcee4e5":"markdown","e14faef0":"markdown","541add87":"markdown","79e53455":"markdown","5ecbc215":"markdown","bbc8a76e":"markdown","27a6d03b":"markdown","4621b769":"markdown","27be8cfa":"markdown"},"source":{"2876210e":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","6f09ea0f":"from matplotlib import pyplot as plt\nimport seaborn as sns","b6baf8ba":"data = pd.read_csv('..\/input\/bike-sales-in-europe\/Sales.csv')","33f8c82c":"data.head()","16320c4e":"# check the null values\n\ndata.isnull().sum()","0e33cf43":"# check tue unique values\n\ndata.nunique()","fc83ee34":"# check the data information\n\ndata.info()","662aa2e0":"# check the data stats\n\ndata.describe()","feb7e23f":"# 1. Costumer sex\n\ndata_sex = data['Customer_Gender'].value_counts()\n\nlabel = [data_sex.index.tolist()]\nplt.pie(data_sex, labels=label[0], shadow=True, explode=(0.0, 0.2), colors=['#66b3ff','#E63946'], autopct='%1.1f%%', startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","309fd6a0":"sns.countplot(data = data, x='Country', hue='Customer_Gender', palette=['#66b3ff','#E63946'])\nplt.xticks(rotation=60)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(12,6)\nplt.show()","d00d2a65":"# 2. Customer age\n\nsns.countplot(data = data, x='Age_Group', hue='Customer_Gender', palette=['#66b3ff','#E63946'])\nplt.xticks(rotation=0)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(12,6)\nplt.show()","c6f8df4f":"# 2.1 Customer age by country\n\nsns.countplot(data = data, x='Country', hue='Age_Group')\nplt.xticks(rotation=60)\nsns.set_style(\"whitegrid\")\n\nplt.gcf().set_size_inches(12,6)\nplt.show()","1e7784c2":"# 3. Country sales\n\ndata_country = data['Country'].value_counts()\n\nlabel = [data_country.index.tolist()]\nplt.pie(data_country, shadow=True, labels=label[0], explode=(0.2, 0.2, 0.2, 0.2, 0.2, 0.2), autopct='%1.1f%%', startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","6b09e924":"# 3.1 United States sales\n\ndata_USA = data[data['Country'] == 'United States']\n\ndata_USA = data_USA['State'].value_counts()\n\ndef my_autopct(pct):\n    return ('%.2f' % pct) if pct > 5 else ''\n\n#labels = ['California', 'Washington', 'Oregon', 'Other']\nplt.pie(data_USA, shadow=True, autopct=my_autopct, startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","d13e78e3":"# 3.2 Australia\n\ndata_Australia = data[data['Country'] == 'Australia']\n\ndata_Australia = data_Australia['State'].value_counts()\n\nlabel = [data_Australia.index.tolist()]\nplt.pie(data_Australia, shadow=True, autopct='%1.1f%%', startangle=90, labels=label[0])\nplt.gcf().set_size_inches(12,6)\nplt.show()","b8e98a80":"# 4. Product category\n\ndata_product = data['Product_Category'].value_counts()\n\nlabel= [data_product.index.tolist()]\nplt.pie(data_product, shadow=True, labels=label[0], explode=(0.2, 0.2, 0.2), autopct='%1.1f%%', startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","4de299e2":"# 4.1 Product category per sex\n\nsns.countplot(data = data, x='Product_Category', hue='Customer_Gender', palette=['#66b3ff','#E63946'])\nplt.xticks(rotation=0)\nsns.set_style(\"whitegrid\")\nplt.legend(['Male', 'Female'])\nplt.gcf().set_size_inches(12,6)\nplt.show()","89ed9383":"# 4.2 Bikes types\n\ndata_Bikes = data[data['Product_Category'] == 'Bikes']\n\ndata_Bikes = data_Bikes['Sub_Category'].value_counts()\n\nlabel = [data_Bikes.index.tolist()]\nplt.pie(data_Bikes, shadow=True, autopct='%1.1f%%', startangle=90, labels=label[0])\nplt.gcf().set_size_inches(12,6)\nplt.show()","ce8e7d7d":"# 4.3 Accessories types\n\ndata_Accessories = data[data['Product_Category'] == 'Accessories']\n\ndata_Accessories = data_Accessories['Sub_Category'].value_counts()\n\n#def my_autopct(pct):\n#    return ('%.2f' % pct) if pct > 10 else ''\n\n#label = ['Road Bikes', 'Mountain Bikes', 'Touring Bikes']\nplt.pie(data_Accessories, shadow=True, autopct=my_autopct, startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","26242824":"# 4.4 Clothing types\n\ndata_Clothing = data[data['Product_Category'] == 'Clothing']\n\ndata_Clothing = data_Clothing['Sub_Category'].value_counts()\n\nlabel = [data_Clothing.index.tolist()]\nplt.pie(data_Clothing, shadow=True, autopct='%1.1f%%', startangle=90, labels=label[0])\nplt.gcf().set_size_inches(12,6)\nplt.show()","20c3c22b":"# 5. Dates\n# 5.1 Month\ndata_product_m = data['Month'].value_counts()\n\nlabel= [data_product_m.index.tolist()]\nplt.pie(data_product_m, shadow=True, labels=label[0], explode=(0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2), autopct='%1.1f%%', startangle=90)\nplt.gcf().set_size_inches(12,6)\nplt.show()","f7608cf1":"#5.1 Year\n\nsns.catplot(x='Year', kind='count', data=data)","74eae601":"# 5.1 Check sales by season and country\n\nlabel = ['Jan', 'Feb', 'March', 'April', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nsns.countplot(data = data, x='Month', hue='Country')\nplt.xticks(ticks=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], labels=label)\nsns.set_style(\"whitegrid\")\nplt.gcf().set_size_inches(12,6)\nplt.show()","be24f8d5":"# 6. Money\n# 6.1 Profit per year\n\nax = data.groupby('Year')['Profit'].sum().plot(kind='barh')\nax.set(xlabel='Profit (\u20ac)', ylabel='Year')","3639ab21":"# 6.2 Revenue per year\n\nax = data.groupby('Year')['Revenue'].sum().plot(kind='barh')\nax.set(xlabel='Revenue (\u20ac)', ylabel='Year')","bbe0d987":"ax = data.groupby('Year')['Revenue', 'Profit', 'Cost'].sum().plot(kind='barh')\nax.set(xlabel='(\u20ac)', ylabel='Year')","6fde04cc":"ax = data.groupby('Product_Category')['Revenue', 'Profit', 'Cost'].sum().plot(kind='barh')\nax.set(xlabel='(\u20ac)', ylabel='Product Category')","fae6e97d":"data_Bikes = data[data['Product_Category'] == 'Bikes']\n\nax = data_Bikes.groupby('Sub_Category')['Revenue', 'Profit', 'Cost'].sum().plot(kind='barh')\nax.set(xlabel='(\u20ac)', ylabel='Bikes Category')","4299ab34":"data_Accessories = data[data['Product_Category'] == 'Accessories']\n\nax = data_Accessories.groupby('Sub_Category')['Revenue', 'Profit', 'Cost'].sum().plot(kind='barh')\nax.set(xlabel='(\u20ac)', ylabel='Bikes Category')","bc5f9d83":"# Data correlation matrix\ncorr = data.corr()\ncorr","2d3e0d65":"ax = sns.heatmap(corr, cmap='coolwarm', annot=True)\nplt.gcf().set_size_inches(12,12)","26305ddf":"# Correlation plot Revenue vs Cost\n\nsns.scatterplot(data=data, x=\"Revenue\", y=\"Cost\", hue='Year')\nplt.xlim(0,20000)\nplt.ylim(0,10000)\nplt.gcf().set_size_inches(12,6)\n\nm, b = np.polyfit(data[\"Revenue\"], data[\"Cost\"], 1)\nplt.plot(data[\"Revenue\"], m*data[\"Revenue\"] + b)","ce0f1677":"# Correlation plot Profit vs Cost\n\nsns.scatterplot(data=data, x=\"Profit\", y=\"Cost\", hue='Year')\nplt.xlim(0,7500)\nplt.ylim(0,10000)\nplt.gcf().set_size_inches(12,6)\n\nm, b = np.polyfit(data[\"Profit\"], data[\"Cost\"], 1)\nplt.plot(data[\"Profit\"], m*data[\"Profit\"] + b)","55eccbfb":"# Correlation plot Profit vs Revenue\n\nsns.scatterplot(data=data, x=\"Profit\", y=\"Revenue\", hue='Year')\nplt.xlim(0,5000)\nplt.ylim(0,10000)\nplt.gcf().set_size_inches(12,6)\n\nm, b = np.polyfit(data[\"Profit\"], data[\"Revenue\"], 1)\nplt.plot(data[\"Profit\"], m*data[\"Profit\"] + b)","14c11401":"... Male and female customers are almost the same for the general data.","7b935743":"... \n1. New South Wales is the state with higher sales, followed by Victoria and Queensland\n2. Victoria and Queensland have similar values","852134eb":"... Sales are almost constant over the year","682357ef":"# **2. Analyse the data**","465e4fe0":"... Male and female customers are almost the same for each country.","6a48a1ae":"... \n1. Unit_Cost, Unit_Price, Profit, Cost and Revenue are variables highly correlated.\n2. The remaining variables present lower correlation.","196016cf":"... Revenue increases over the years until 2015","05b828f0":"... No significant differences between Male and Female","b03600c5":"... \n1. Adults between 35-64 buy more, followed by the young adults and youth.\n2. Seniors barely buy.\n3. These are verified either for Male and Female.","fa6f88c8":"... Road bikes present the highest profit. ","2c52fee1":"... \n1. United States is the country where sales are higher followed by Australia.\n2. Canada and United Kingdom present similar sales.\n3. European coutries sell less (United Kingdom, Germany, France).","3a01c2af":"... Helmets present the highest profit.","9e2ace8d":"...\n1. Accessories is the most sold category corresponding to 62%\n2. Bikes correspond to 23% of sales","c51e6edf":"... \n1. Tires and Tubes are the most sold\n2. The second most sold accessories are Bottles and Cages\n3. Helmets are the third most sold","cf2b6d2e":"... California sells more, followed by Washington and Oregon","25d92eb6":"...\n1. In Germany and France Adults and Youth Customers do not differ much.\n2. In USA Adults buy much more thant the remaining ages.\n3. Seniors are insignificant for all countries.","bbcee4e5":"... Profit increases over the years until 2015. Then decreases.","e14faef0":"# **1. Read the data file**","541add87":"...\n1. Jersey are the most sold clothes\n2. Caps are the following","79e53455":"... Bikes give the higher profit to sellers.","5ecbc215":"No null values","bbc8a76e":"...\n1. Sales are lower in May and June in USA and Canada\n2. Sales are lower in January, May, June and July in Germany and France\n3. Saler are lower in May and June in Australia","27a6d03b":"... \n1. Sales are minimal for the 2011 and 2012\n2. 2014 and 2016 are similar\n3. 2013 and 2015 are similar","4621b769":"# **3. Correlation analysis**","27be8cfa":"... Road bikes are the most sold."}}