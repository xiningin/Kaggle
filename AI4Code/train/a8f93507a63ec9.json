{"cell_type":{"7c77ed95":"code","70fc5a53":"code","b4d5bc06":"code","40ff3aca":"code","8cecddfd":"code","2d0d817e":"code","3339a51f":"markdown","ed3164fd":"markdown","23ba9775":"markdown","ddac0027":"markdown","be002f4c":"markdown"},"source":{"7c77ed95":"# Python \u22653.5 is required\nfrom pathlib import Path\nimport sys\n\nimport numpy as np\nimport pandas as pd\nimport sklearn\n\nassert sklearn.__version__ >= '0.20'\nassert sys.version_info >= (3, 5)\n\nnp.random.seed(42)","70fc5a53":"def load_titanic_dataset(filename, path='..\/input\/titanic'):\n    csv_path = Path.joinpath(Path(path), filename)\n    return pd.read_csv(csv_path)\n\n\ndata = load_titanic_dataset('train.csv')\nsubmit = load_titanic_dataset('test.csv')\ngender_submission = load_titanic_dataset('gender_submission.csv')","b4d5bc06":"from sklearn.model_selection import train_test_split\n\ntrain, test = train_test_split(data,\n                               test_size=0.2,\n                               random_state=42,\n                               stratify=data['Sex'])","40ff3aca":"from sklearn.metrics import accuracy_score\n\n\ndef show_performance(predictions, ground_truth):\n    accuracy = accuracy_score(predictions, ground_truth)\n    print(f'Test set\\'s accuracy : {accuracy:.5f}.')\n\n\ndef submit_csv(submission, file_name):\n    output_dir = Path('submissions')\n    output_dir.mkdir(parents=True, exist_ok=True)\n\n    submission.to_csv(output_dir.joinpath(file_name), index=False)\n    \ndef data_to_usable(data, need_y):\n    x_attr = ['Pclass', 'Sex', 'Cabin']\n    \n    if need_y:\n        y = data[['Survived']]\n    else:\n        y = None\n    \n    x = data[x_attr]\n    x = x.to_dict()\n\n    for attr in x_attr:\n        x[attr] = list(x[attr].values())\n    \n    def sex_map_to_int(sex):\n        if sex == 'male':\n            return 1\n        else:\n            return 10\n    \n    x['Sex'] = list(map(sex_map_to_int, x['Sex']))\n\n    def cabin_map_to_int(cabin):\n        if type(cabin) == float:\n            return 0\n        else:\n            letter_to_int_map = {\n                \"A\": 1,\n                \"B\": 2,\n                \"C\": 3,\n                \"D\": 4,\n                \"E\": 5,\n                \"F\": 6,\n                \"G\": 7,\n                \"T\": 8\n            }\n            try:\n                rest_cabin = cabin[1:].split(\" \")[0]\n            except:\n                rest_cabin = 0\n            return int(f\"{letter_to_int_map[cabin[0]]}{rest_cabin}\")\n    \n    x['Cabin'] = list(map(cabin_map_to_int, x['Cabin']))\n\n    x = list(x.values())\n\n    x = list(zip(x[0], x[1], x[2]))\n    \n    return x, y\n","8cecddfd":"from sklearn.tree import DecisionTreeClassifier\nimport math\n\nmy_model = DecisionTreeClassifier()\n\nx, y = data_to_usable(data, True)\n\nmy_model.fit(x, y)\n\nprint(my_model.feature_importances_)\n\ndef florian(data, need_y):\n    x, y = data_to_usable(data, need_y)\n    predictions = my_model.predict(x)\n    return predictions\n\npredictions = florian(test, True)\nshow_performance(predictions, test['Survived'])","2d0d817e":"predictions = florian(submit, False)\npredictions[1] = 0  # Otherwise, Kaggle won't compute your score...\n\nsubmission = pd.DataFrame({\n    'PassengerId': submit['PassengerId'],\n    'Survived': predictions\n})\n\nFILE_NAME = 'florian.csv'\nsubmit_csv(submission, FILE_NAME)\nsubmission.head()","3339a51f":"## Model's Common Functions","ed3164fd":"## Neural network setup","23ba9775":"## Florian submission","ddac0027":"## Setup","be002f4c":"### Split Data"}}