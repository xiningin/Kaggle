{"cell_type":{"92c0f341":"code","c5903f75":"code","893ac201":"code","041fb029":"code","d6388778":"code","281d76a3":"code","28335cfc":"code","356c91b3":"code","f0e5c75b":"code","aba09a09":"code","e36418de":"code","33d4a619":"code","56ec07d3":"code","d86c752c":"code","c6f0b23e":"code","96becf13":"code","f3eb2017":"code","a5babfd4":"code","cb0b819a":"code","55d34d56":"code","03c8e800":"code","0b6c6b49":"markdown","0484d0c3":"markdown","cab330ab":"markdown","c0faaf1e":"markdown","00404f87":"markdown","a4f1216b":"markdown","51b74f7e":"markdown"},"source":{"92c0f341":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn import metrics\n\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 5GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","c5903f75":"train=pd.read_csv('\/kaggle\/input\/digit-recognizer\/train.csv')\ntrain","893ac201":"test=pd.read_csv('\/kaggle\/input\/digit-recognizer\/test.csv')\ntest.head()","041fb029":"train.isnull().sum()","d6388778":"test.isnull().sum()","281d76a3":"print(train.shape)\nprint(test.shape)","28335cfc":"X=train.iloc[:,1:].values\nprint(\"The shape of X:\",X.shape)\n\nY=train.iloc[:,0].values\nprint(\"The shape of Y:\",Y.shape)","356c91b3":"#Splitting\nX_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2)\n\nprint(\"The shape of X_train:\",X_train.shape)\nprint(\"The shape of Y_train:\",Y_train.shape)\nprint(Y_test.shape)","f0e5c75b":"knn = KNeighborsClassifier()\nknn.fit(X_train,Y_train)","aba09a09":"#Predicting\nY_predict=knn.predict(X_test) \nprint(Y_predict) \n\n#Finding Accuracy\nAS1=accuracy_score(Y_test,Y_predict) \nprint(\"The accuracy score using knn:\", AS1)","e36418de":"np.sqrt(X_train.shape[0])","33d4a619":"X_test=test.iloc[:,:].values","56ec07d3":"Y_test=knn.predict(X_test)","d86c752c":"test.index","c6f0b23e":"test.index.tolist()","96becf13":"imageid=test.index.tolist()","f3eb2017":"#Converting that index starting from 0 to the one starting from 1\n\nImageId = [x+1 for x in imageid]\nImageId","a5babfd4":"print(len(ImageId))\nprint(Y_test.shape)","cb0b819a":"Final = pd.DataFrame()\nFinal","55d34d56":"\nFinal['ImageId'] = ImageId\nFinal['Label'] = Y_test\nFinal","03c8e800":"#Converting it into csv file\n\nFinal.to_csv('submission.csv', index=False)","0b6c6b49":"# Creating an empty dataframe and then adding these 2 columns \"ImageId\" and \"Label\"\n","0484d0c3":"# Extracting all columns of test","cab330ab":"# Training the model by applying K-Nearest Neighbors Algorithm and passing X_train and Y_train to it.","c0faaf1e":"# Applying Train and Test split","00404f87":"# Predicting using Classifier and Finding Accuracy","a4f1216b":"# Extracting X and Y for train","51b74f7e":"# Creating a new column called \"ImageId\" and storing the index calues"}}