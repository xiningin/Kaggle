{"cell_type":{"b17bfaf1":"code","f798ccee":"code","05fade74":"code","84b15faf":"code","adc45fb3":"code","6a13ecc6":"code","6cba54cd":"code","67abc14a":"code","9341d98a":"code","8b6490d1":"code","4805f6a6":"code","a3367ede":"code","2f01c785":"code","777ba208":"code","ef6d89f2":"code","e74b0e3e":"code","790fdc7c":"code","ade62dc9":"code","ecd1afb1":"code","26a3e14a":"code","633f6297":"code","a03ec637":"code","b963c0a3":"code","5168fdf1":"code","91e5ad94":"code","c2cba739":"code","21096224":"code","ad8f962e":"code","471f0c42":"code","97677347":"code","7e8e1814":"code","ed38d833":"code","9656498f":"code","ed103a55":"code","a90c4881":"code","85d3a39a":"code","e126cefc":"code","65dc1060":"code","b39d9300":"code","5f4573ee":"code","ad357b4d":"code","f6ce62f2":"code","12f37018":"code","b9990f76":"code","5f1369d1":"code","d5d34a00":"code","31bc16d7":"markdown","bd17ac92":"markdown","033fa56c":"markdown","e4dfba83":"markdown","f08e868f":"markdown","1629b5ea":"markdown","6aade86f":"markdown","01c01675":"markdown","eb8403b1":"markdown","6fd452e7":"markdown","d333cfe7":"markdown","9951d824":"markdown","15f9d1f7":"markdown","c809600e":"markdown","65ddfe38":"markdown","3d864818":"markdown","07102d0b":"markdown","eb435ba9":"markdown","eae94e5a":"markdown","604da665":"markdown","5419eddb":"markdown","3324d596":"markdown","782e8fdc":"markdown","fe29abd8":"markdown","02291818":"markdown","48a9cc7d":"markdown","50b218b3":"markdown","40be4949":"markdown","e39fd1c9":"markdown","996a0971":"markdown","e447de72":"markdown","f7ee6651":"markdown","e881569f":"markdown","ddf1f397":"markdown","4cecef73":"markdown","2f23746b":"markdown","91149c1a":"markdown","d307e5f3":"markdown"},"source":{"b17bfaf1":"import pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n%matplotlib inline\npd.pandas.set_option('display.max_columns',None) #To make sure all the columns are displayed","f798ccee":"dataset = pd.read_csv(\"..\/input\/credit-card-customer-data\/Credit Card Customer Data.csv\")","05fade74":"dataset.head() #Check the head of the dataframe","84b15faf":"dataset.info() #Total 660 entries","adc45fb3":"features = ['Total_visits_bank','Total_visits_online','Total_calls_made']","6a13ecc6":"for feature in features:\n    sns.distplot(dataset[feature]) #Checking the distributions of the interactions\n    plt.show()","6cba54cd":"dataset.drop(['Sl_No','Customer Key'],axis=1).describe()","67abc14a":"### Creating a new feature with total interaction with banks  for analysis\ndata=dataset.copy() #Copying the dataset into a new memory\ndata['Total_interactions'] = data['Total_visits_bank'] + data['Total_visits_online'] + data['Total_calls_made']\n# Total interactions = total calls + totals visits in banks + total online visits\nplt.figure(figsize=(12,8))\nfeature_perc=[]\nfor feature in features:\n    feature_perc.append((data[feature].sum()\/data['Total_interactions'].sum())*100)\nplt.pie(feature_perc,labels=['Bank Visits','Online Visits','Calls Made'],autopct='%1.2f',textprops=dict(color=\"w\"))\nplt.legend()\nplt.title(\"% age of interactions with respect to the medium\")\nplt.show()\n\n","9341d98a":"#Finding duplicate rows\ndataset[dataset.duplicated(subset=None, keep='first')]","8b6490d1":"data = dataset.drop(['Sl_No','Customer Key'],axis=1).copy()\nsns.pairplot(data) #Pairplot from seaborn library","4805f6a6":"data.corr() #Checking the correlation of the features","a3367ede":"plt.figure(figsize=(12,7))\nsns.scatterplot(x='Avg_Credit_Limit',y='Total_Credit_Cards',data=dataset)","2f01c785":"plt.figure(figsize=(12,7))\nsns.scatterplot(x='Total_visits_bank',y='Avg_Credit_Limit',data=dataset) ","777ba208":"plt.figure(figsize=(12,7))\nsns.scatterplot(x='Total_visits_online',y='Avg_Credit_Limit',data=dataset) ","ef6d89f2":"plt.figure(figsize=(12,7))\nsns.scatterplot(x='Total_visits_online',y='Total_Credit_Cards',size='Avg_Credit_Limit',data=dataset) ","e74b0e3e":"plt.figure(figsize=(12,7))\nsns.scatterplot(x='Total_visits_online',y='Total_calls_made',size='Avg_Credit_Limit',data=dataset) \n\n#Dots are sized relative to the Avg_Credit_Limit","790fdc7c":"### Creating a new feature with total interaction with banks  for analysis\ndata=dataset.copy() #Copying the dataset into a new memory\ndata['Total_interactions'] = data['Total_visits_bank'] + data['Total_visits_online'] + data['Total_calls_made']\n# Total interactions = total calls + totals visits in banks + total online visits","ade62dc9":"sns.scatterplot(x='Avg_Credit_Limit',y='Total_interactions',data=data)","ecd1afb1":"X = dataset.iloc[:,2:].values #Selecting the features","26a3e14a":"X.shape ","633f6297":"from sklearn.preprocessing import MinMaxScaler #Importing MinMaxScaler\nscaler= MinMaxScaler() #Initialising the instance of the scaler\nscaled_features = scaler.fit_transform(X) #Storing the scaled version of features in scaled_features","a03ec637":"from sklearn.cluster import KMeans #Importing KMeans from sklearn","b963c0a3":"## Writing a for loop to plot the graph for within cluster sum of squares","5168fdf1":"wcss = [] #Within cluster sum of squares\nfor i in range(1, 11):\n    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42) #Initialising \n    kmeans.fit(scaled_features) #Fitting on scaled features\n    wcss.append(kmeans.inertia_) #Appending the wcss to the blank list\nplt.plot(range(1, 11), wcss)\nplt.title('The Elbow Method')\nplt.xlabel('Number of clusters')\nplt.ylabel('WCSS')\nplt.show() ","91e5ad94":"## Training the K-Means model on the dataset","c2cba739":"!pip install yellowbrick","21096224":"from yellowbrick.cluster import SilhouetteVisualizer\nkmeans=KMeans(n_clusters = 3, init = 'k-means++', random_state = 42) #Initialising \nvisualizer = SilhouetteVisualizer(kmeans, colors='yellowbrick')\nvisualizer.fit(scaled_features)        # Fit the data to the visualizer\nvisualizer.show()","ad8f962e":"kmeans = KMeans(n_clusters = 3, init = 'k-means++', random_state = 42)\ny_kmeans = kmeans.fit_predict(X)","471f0c42":"print(y_kmeans)","97677347":"Segment = pd.DataFrame(y_kmeans,columns=['Segment']) #Converting the cluster to data frame\nSegment","7e8e1814":"data=dataset.copy()\ndata=pd.concat([data,Segment],axis=1)","ed38d833":"features = ['Avg_Credit_Limit','Total_Credit_Cards','Total_visits_bank','Total_visits_online','Total_calls_made']","9656498f":"## Analyzing the results","ed103a55":"for feature in features:  #Loop to plot boxplot of each cluster\n    sns.boxplot(x='Segment',y=feature,data=data)\n    plt.show()","a90c4881":"import scipy.cluster.hierarchy as sch #import the library\nplt.figure(figsize=(12,8)) #Canvas size\ndendrogram = sch.dendrogram(sch.linkage(scaled_features, method = 'ward'))\nplt.title('Dendrogram')\nplt.xlabel('Customers')\nplt.ylabel('Euclidean distances')\nplt.show()","85d3a39a":"from scipy.cluster.hierarchy import cophenet","e126cefc":"cophenet_ =np.mean(cophenet(sch.linkage(scaled_features)))\ncophenet_","65dc1060":"from sklearn.cluster import AgglomerativeClustering #Importing lib\nhc = AgglomerativeClustering(n_clusters = 3, affinity = 'euclidean', linkage = 'ward') #Euclidean distance, and ward linkage\ny_hc = hc.fit_predict(X) #TrainingTheModel","b39d9300":"y_hc #Predictions","5f4573ee":"df_yhc = pd.DataFrame(y_hc,columns=['HCluster'])","ad357b4d":"data= dataset.copy()\ndata = pd.concat([data,df_yhc],axis=1)\ndata.head()","f6ce62f2":"for feature in features:  #Loop to plot boxplot of each cluster\n    sns.boxplot(x='HCluster',y=feature,data=data)\n    plt.show()","12f37018":"from sklearn.metrics import silhouette_score","b9990f76":"kmeans_score= silhouette_score(scaled_features,y_kmeans)\nkmeans_score","5f1369d1":"hc_score= silhouette_score(scaled_features,y_hc)\nhc_score","d5d34a00":"print(\"The silhoutte score of kmeans and Hierarchical Cluster are {} and {} respectively\".format(kmeans_score,hc_score))\n","31bc16d7":"# Thank You!","bd17ac92":"**There seems to be two differentiable clusters on the basis of above two features**\n\n**Customers with more than 7 credit cards and with Average Limit > 80000 visits  online more frequently**","033fa56c":"### Total_Credit_Cards v\/s Avg_Credit_Limit","e4dfba83":"**Observations**:\n\n**Cluster 0**\n\n-highest number of phone calls made\n\n-Less online presence\/visits\n\n-high number of visits to the bank\n\n-low limit\n\n-lowest number of cards\n\n**The cluster 0 should be targeted through phone calls with Relationship Managers and cross selling through phone calls**\n    ","f08e868f":" 1. There are no missing values\n 2. A customer carries ~5 CreditCards on an average and visits ~2 times on an average\n 3. There are customers who do not visit banks \/ online\/calls \n","1629b5ea":"**As there is smooth descent afer n_clusters = 3 we will choose number of clusters as 3**","6aade86f":"**There seems to be cleary two clusters on the above two features**\n\n**Customers who visit less frequently online make more phone calls**\n\n**People with Average credit limit >80000 make more frequent online visits**","01c01675":"## Cluster 0 and Cluster 1 should be targeted to cover the operational costs\n\n\n## Cluster 2 should be targeted to reap profits","eb8403b1":"## Key Observations:\n\n**Customers with Avg_Credit_Limit > ~60,000 which maybe loyal customers make fewer calls (0-2.5) than the customers with   Avg_Credit_Limit ~10,000 to 25000**\n\n**Customers with 1-4 Credit Cards make more than 5 calls (5-10)**\n\n**People with lower limit, makes more visits to the bank**\n\n**Customers who visits banks less frequently makes more phone calls**10. ","6fd452e7":"**People with Average Limit > ~70000 make 0 to 1 visits to the bank**\n**People with Average Credit Limit < ~70000 visit frequently i.e. 2 to 5 times**","d333cfe7":"# Q8 Comparing the clusters","9951d824":"**Observations**:\n\n**Cluster 2**\n\n-lowest number of calls made\n\n-highest online visits\n\n-negligible number of visits in the bank\n\n-high limit and cards\n\n\n**Platinum tier customers**\n\n**Affluent and premium customers are present in cluster 2.They should be targeted through loyalty prograns and luxury offers**","15f9d1f7":"Overall for this dataset Agglomerative Clustering has given better results.\nThe silhoutte score of kmeans and Hierarchical Cluster are 0.058573709938719964 and 0.11914770655113151 respectively\nHC has higher silhoutte score.","c809600e":"**As there is a difference in magnitude of Credit Limit and other features, we will scale the features**\n\n**As there are not any negative values, we can use MinMaxScaler**","65ddfe38":"1. Segment 0 has low credit limit and more number of total credit cards.\n\n    -This maybe the indication that they have high credit usage and low income.\n\n    -Segment 0 makes complaints by the medium of phone calls. \n\n    -The bank can arrange periodical feedback phone calls from Relationship Managers at the bank\n    \n    **They can be targeted for cross selling by the medium of phone calls**","3d864818":"## Kmeans Clusters","07102d0b":"**Based on the dendrogram number of clusters = 3**","eb435ba9":"# Q6 Hierarchical Clustering","eae94e5a":"**Observations**:\n\n**Cluster 1**\n\n-medium number of calls made\n\n-lowest online visits\n\n-More number of visits in the bank\n\n-medium limit and cards\n\n\n**Customers in Cluster 1 should be targeted for cross selling through banks branches**","604da665":"# Q9 Final answers","5419eddb":"## Q5 Execute KMeans","3324d596":"## hierarchial Clusters","782e8fdc":"**Customers can be segmented on the basis of Total interactions or total complaints with bank and the average credit limit**","fe29abd8":"2. Segment 1 makes \n\n    -less number of phone calls \n\n    -highest number of online visits\n\n    -does not visit the bank at all\n\n    -This maybe the indication that Segment 1 is literate and premium customers of the bank with higher income.\n\n    **Luxury offers through emails and offers related to online shopping or coupons can be targeted to this segment**\n    **They have the potential of being most profitable customers**","02291818":"## Q7 Calculate avg silhoutte scores","48a9cc7d":"## Importing the libraries","50b218b3":"**The hc_score is greater than kmeans_score**\n\nIts analysis is as follows \u2212\n\n+1 Score \u2212 Near +1 Silhouette score indicates that the sample is far away from its neighboring cluster.\n\n0 Score \u2212 0 Silhouette score indicates that the sample is on or very close to the decision boundary separating two neighboring clusters.\n\n-1 Score \u2212 1 Silhouette score indicates that the samples have been assigned to the wrong clusters.","40be4949":"### Creating a new feature with total interaction with banks  for analysis","e39fd1c9":"3. Segment 2 have almsot similar characterstics:\n    \n    -Median of 3 visits to the bank\n    \n    -Relatively higher visits to the bank\n    \n    -holds 4-6 Total Credit Cards\n    \n    **Both can targeted for cross selling through in bank managers and promotional advertisements in the bank**\n    \n    **Servicescape Promotions are Promotions done in the environment where the service is offered**","996a0971":"###  Total_Credit_Cards v\/s Total_visits_online graph","e447de72":"### Avg_Credit_Limit v\/s Total_visits_online ","f7ee6651":"## Total_visits_online v\/s Total_calls_made\n","e881569f":"1.There are two clusters:\n    **Customers with Average Credit Limit <100000 And Customers with Average Credit Limit < 75000**","ddf1f397":"* There are no duplicate entries in the dataset","4cecef73":"##  Q2,Q3,Q4 - Perform EDA  ,Create Visualizations and present insights","2f23746b":"## Q1  Univariate Analysis","91149c1a":"**There clearly seems to be differentiated 2 clusters on the basis of above two features**\n\n**People with Average Credit Limit >75000 visits more frequently online(>7 times)**","d307e5f3":"### Avg_Credit_Limit vs Total_visits_banks\n"}}