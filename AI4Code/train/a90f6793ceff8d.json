{"cell_type":{"fb87f3ad":"code","7a3c7296":"code","68efc8e9":"code","6d95f7a8":"code","d869c2da":"code","677710cb":"code","eae3efd7":"code","a3963102":"code","737e2d80":"code","61823044":"code","d4b12ce0":"code","89898680":"code","f420921f":"code","44be7bd4":"code","39ee8462":"code","597e3ec3":"code","0e4866e6":"code","df55cf09":"code","27fa82a0":"code","2b53b54a":"code","bbd217da":"code","e48e04f7":"code","43c3284c":"code","99edffaa":"code","98d3399b":"code","917ea5cc":"code","566ab5a1":"code","aaffe785":"code","f18b71c4":"code","593ada2b":"code","1dbb39f3":"code","d5609fa6":"code","767f7a38":"code","a442f93d":"code","de6fe078":"code","b1d10006":"markdown","9a369a25":"markdown","353fb246":"markdown","0bf79d01":"markdown","a0ed5bf1":"markdown","e337ab9c":"markdown","73001e4a":"markdown","1d254bf7":"markdown","94318f11":"markdown","0811aadd":"markdown"},"source":{"fb87f3ad":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go","7a3c7296":"df = pd.read_excel('\/kaggle\/input\/covid19\/Kaggle_Sirio_Libanes_ICU_Prediction.xlsx')\ndf.head()","68efc8e9":"print(df.shape)","6d95f7a8":"# Print list of all the columns\nprint(list(df.columns))","d869c2da":"# Check if the patient IDs are repetative\ndf['PATIENT_VISIT_IDENTIFIER'].value_counts()","677710cb":"##  Sample a patient ID to see the importatn features\nid = 1\ndf[df['PATIENT_VISIT_IDENTIFIER'] == id]\n","eae3efd7":"# How many patients are in ICU\nlen(df[df[\"ICU\"] == 1]['PATIENT_VISIT_IDENTIFIER'].unique())\n\n","a3963102":"# Groupby Patients in ICU and explore some general features\ngeneral_cols = ['PATIENT_VISIT_IDENTIFIER','AGE_ABOVE65','AGE_PERCENTIL','GENDER','IMMUNOCOMPROMISED']\nicu_set = df[df['ICU'] == 1][general_cols].drop_duplicates(keep = 'first')\nicu_set\n","737e2d80":"#from plotly.subplots import make_subplots\n#import plotly.graph_objects as go\ndata1 = icu_set['GENDER'].value_counts()\ndata2 = icu_set['AGE_PERCENTIL'].value_counts()\ndata3 = icu_set['IMMUNOCOMPROMISED'].value_counts()\ndata4 = icu_set['AGE_ABOVE65'].value_counts()\nfig = make_subplots(rows=1, cols=4, subplot_titles=(\"Gender\", \"Age_group\", \"Immunity Compramised\", \"Age Above65\"))\n\nfig.add_trace(\n    go.Bar(name = \"Gender\", x=data1.index, y = data1), row=1, col=1\n)\n\nfig.add_trace(\n    go.Bar(name = 'Ages', x=data2.index, y=data2),row=1, col=2\n)\n\nfig.add_trace(\n    go.Bar(name = \"Immunity Compramised\",x=data3.index, y=data3),row=1, col=3\n)\n\nfig.add_trace(\n    go.Bar(name = \"Age > 65\", x=data4.index, y=data4),row=1, col=4,\n)\n\nfig.update_xaxes(title_text=\"Gender\", row=1, col=1)\nfig.update_xaxes(title_text=\"Age Grouping\", row=1, col=2)\nfig.update_xaxes(title_text=\"Immunity Compromised\", row=1, col=3)\nfig.update_xaxes(title_text=\"Age Above 65\", row=1, col=4)\n\n\nfig.update_layout(height=500, width=1060,title_text=\"ICU Patients\")\nfig.show()","61823044":"window_set = df[['WINDOW', 'ICU']]\nwindow_set = window_set[window_set['ICU'] == 1]\n","d4b12ce0":"import plotly.express as px\ndata = window_set.groupby(\"WINDOW\").sum()\nfig = px.bar(data, title=\"Patient Admited time window and ICU Joining\")\nfig.show()","89898680":"# List of  Patients visit Identifiers who are into ICU ","f420921f":"icu_patients = icu_set['PATIENT_VISIT_IDENTIFIER'].unique()\n","44be7bd4":"# filter out the data that has ICU as 0 (Training data prepration)\nmodel_data = df[df['ICU'] == 0]\nmodel_data.head()","39ee8462":"## Add a column that is sum of missing value row wise. \nmodel_data['Missingness'] = model_data.isnull().sum(axis = 1)\nmodel_data.head()","597e3ec3":"model_data['ICU_Admitted'] = np.where(model_data['PATIENT_VISIT_IDENTIFIER'].isin(icu_patients), 1 , 0)","0e4866e6":"model_data[model_data[\"ICU_Admitted\"] == 1]","df55cf09":"# Remove ICU Column from this set.\nmodel_data.drop('ICU', axis = 'columns', inplace = True)\nmodel_data","27fa82a0":"## Are there any constant value columns \nconst_columns = list(model_data.columns[model_data.nunique() <= 1])\nconst_columns","2b53b54a":"# Remove these constant value columns from the set\nmodel_data.drop(const_columns, axis = 'columns', inplace = True)\nmodel_data","bbd217da":"# Patient ID 199 seems not having data , decided to remove this from the set\nmodel_data = model_data[model_data['PATIENT_VISIT_IDENTIFIER'] != 199]","e48e04f7":"print(model_data.isna().sum()[model_data.isna().sum() > 0])","43c3284c":"model_data = model_data.sort_values(by=['PATIENT_VISIT_IDENTIFIER', 'WINDOW'])\\\n    .groupby('PATIENT_VISIT_IDENTIFIER', as_index=False)\\\n    .fillna(method='ffill')\\\n    .fillna(method='bfill')","99edffaa":"model_data.isna().sum().sum()","98d3399b":"model_data.dtypes","917ea5cc":"# Convert WINDOW, AGE_PERCETIL  columns categorical\nmodel_data['AGE_PERCENTIL'] = model_data['AGE_PERCENTIL'].astype(\"category\")\nmodel_data['WINDOW'] = model_data['WINDOW'].astype(\"category\")\n","566ab5a1":"#Create windows dummies dataframe\nwindow_dummy = pd.get_dummies(model_data['WINDOW'])\n#concat this to main dataframe\nmodel_data = pd.concat([model_data, window_dummy], axis =1)\n# Remove the WINDOW column \nmodel_data = model_data.drop(columns=['WINDOW'])\n#create AGE_PERCENTIL dummy dataframe\nAGE_PERCENTIL_dummy = pd.get_dummies(model_data['AGE_PERCENTIL'])\n#concat this to main dataframe\nmodel_data = pd.concat([model_data, AGE_PERCENTIL_dummy], axis =1)\n# Remove the AGE_PERCENTIL column \nmodel_data = model_data.drop(columns=['AGE_PERCENTIL'])\nmodel_data","aaffe785":"from sklearn.model_selection import train_test_split","f18b71c4":"#Independent Vector\n#All columns Except the 'ICU_Admitted' get an array of this\nX = model_data.drop('ICU_Admitted', axis = 'columns', inplace = False).values\n#Dependent Vector Target column values as an array\ny = model_data['ICU_Admitted'].values\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.40, stratify=y)","593ada2b":"# Import xgboost classifier\nfrom xgboost import XGBClassifier","1dbb39f3":"# fit model on training data\nmodel = XGBClassifier()\nmodel.fit(X_train, y_train)","d5609fa6":"# make predictions for test data\ny_pred = model.predict(X_test)\npredictions = [round(value) for value in y_pred]","767f7a38":"from sklearn.metrics import accuracy_score","a442f93d":"# evaluate predictions\naccuracy = accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))","de6fe078":"                                            #######################################","b1d10006":"#### One Hot encoding of the categorical columns","9a369a25":"#### I will work more on this data set -- Work In progress","353fb246":"### Understanding the features of the data steps of data prepration","0bf79d01":"Now the data set is ready for getting split into train and test sets so that Machine learning techniques can be applied\n\n","a0ed5bf1":"* #### How many rows ?. 1925, How many columns ?. 231\n* #### How many unique Patients are in the set ?. 385 Unique patients\n* #### For each patient how many records ( Rows ) .  5 Rows. \n* #### How many of the patients are in ICU ?. -- 195\n* #### How many of the patients are not in ICU --- 190\n* #### Group Patients who are into ICU with few general fetures. Show features graphically \n* #### After Joining the hopital, each time window count when the disease progressed to ICU requirement\n* #### Filter out all the  records that are having 0 ICU  --  Data for training \/ test preparain\n* #### Add a column count of missing values ( rows wise sum of missing values ) -- This is taken as feature \n* #### Add a column(ICU-Admitted) that indicates this patient had his\/her disease resulted to ICU \n* #### Remove the ICU Column\n* #### Are there any columns that do not have variance ( Constant values through out) - Remove them.\n* #### Observed all the columns that have *-DIFF in thier name are constant value columns - Removed them\n* #### Patient ID 199 seems having no data for all the fields, hence decided to remove this patient ID \n* #### Impute missing values -- Stratetgy as per the data authors suggestion:\n* #### Hot encode columns 'WINDOW', 'AGE_PERCENTIL'\n* #### Now remove the base columns WINDOW, AGE_PERCENTIL (These are hot encoded )\n* #### Now the Data is ready ( All features numerical and Targe column is \"ICU_Admitted\" \n* #### Train and test split :  \n* #### Apply XGBoost Classfication model\n* #### Check the accuracy. ","e337ab9c":"## Covid-19 Patient Disease Progression to ICU - Exploration.  ","73001e4a":"### Make Predictions with test data and model trained","1d254bf7":"### Evaluate the model accuracy ","94318f11":"### Applying xgboot classfication ","0811aadd":"### Missing values imputing strategy as suggested by the data authors:\nIt is reasonable to assume that a patient who does not have a measurement recorded in a time window is clinically stable, potentially presenting vital signs and blood labs similar to neighboring windows. Therefore, one may fill the missing values using the next or previous entry. Attention to multicollinearity and zero variance issues in this data when choosing your algorithm."}}