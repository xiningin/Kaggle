{"cell_type":{"c3094012":"code","1ebf5974":"code","b284fb45":"code","2aecaf90":"code","0c2e73a4":"code","8c50eec2":"code","039dde08":"code","bd621748":"code","d1f22daa":"code","7fbb0e2e":"code","52d0140e":"code","408e2958":"code","5806bfc8":"code","b0862de4":"code","86225781":"code","1e4af6db":"code","09878752":"code","28d5aad3":"code","e8c19eba":"code","b9ca629a":"code","c04e34c2":"code","906733bf":"code","b320365c":"code","2de17183":"code","ca04a8bb":"code","04107f7f":"code","8ab9e895":"code","7d74c404":"code","bccad8c3":"code","46b47545":"code","cc524944":"code","42610d3f":"code","6f0b3afb":"code","bdd9745b":"code","612fe309":"code","d8de3170":"code","cccfafa2":"code","12d7b954":"code","bd80a1c5":"code","adf83df1":"code","04309099":"code","107f90b7":"code","4b588520":"code","d333abdc":"code","325429d7":"code","a8bf369e":"code","87a4066a":"code","f328633a":"code","ac568ae6":"code","cb05e9bb":"code","814dcb2f":"code","35eabab4":"code","d53b9e80":"code","8545097e":"code","33433ead":"code","8859c52b":"code","20185425":"code","ed5c236a":"code","4cd29acf":"code","58e90dad":"code","8a858d22":"code","63bc1b08":"code","a760c8cb":"code","c0706b95":"code","3bc89aa4":"code","a83f2cda":"code","aea6984c":"code","b2816c1c":"code","3bf8430c":"code","c3ef90c0":"code","792e3080":"code","3e384d9b":"code","6e2f5c1b":"markdown","466d2f10":"markdown","2a40f62a":"markdown","9e103837":"markdown","39ea2c8d":"markdown","b90e0820":"markdown","bb812620":"markdown","30292956":"markdown","4f19972b":"markdown","9b01cbdd":"markdown","4832f0b8":"markdown","6591e751":"markdown","3cc703e2":"markdown","afc503a0":"markdown","a67be56a":"markdown","7dd757e8":"markdown","f336b39e":"markdown","2db58965":"markdown","b3a5ae28":"markdown","d42a1da7":"markdown","ad5c9d1e":"markdown","aaf773a4":"markdown","6b2b71b6":"markdown","7ceb9fc4":"markdown","ca7c29df":"markdown","87692ca8":"markdown"},"source":{"c3094012":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline","1ebf5974":"titanic_train_df = pd.read_csv('\/kaggle\/input\/titanic\/train.csv')","b284fb45":"titanic_train_df.head()","2aecaf90":"sns.heatmap(titanic_train_df.isnull(),yticklabels=False,cbar=False)","0c2e73a4":"\nsns.countplot(x='Survived',data=titanic_train_df)","8c50eec2":"sns.countplot(x='Survived',data=titanic_train_df, hue='Sex')","039dde08":"sns.countplot(x='Sex',data=titanic_train_df) ","bd621748":"sns.countplot(x='Sex',data=titanic_train_df, hue='Survived')","d1f22daa":"sns.countplot(x='Sex',data=titanic_train_df, hue='Pclass')","7fbb0e2e":"sns.countplot(x='Survived',data=titanic_train_df, hue='Pclass')","52d0140e":"sns.countplot(x='Pclass',data=titanic_train_df, hue='Survived')","408e2958":"sns.displot(titanic_train_df['Age'].dropna(),kde=False,bins=30)","5806bfc8":"titanic_train_df.info()","b0862de4":"sns.countplot(x=\"SibSp\",data=titanic_train_df)","86225781":"sns.countplot(x=\"SibSp\",data=titanic_train_df,hue=\"Survived\")","1e4af6db":"sns.countplot(x=\"SibSp\",data=titanic_train_df,hue=\"Sex\")","09878752":"sns.countplot(x=\"SibSp\",data=titanic_train_df,hue=\"Pclass\")","28d5aad3":"\nsns.displot(titanic_train_df['Fare'].dropna(),kde=False,bins=50,height=8,aspect=1.8)","e8c19eba":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass',y='Age',data=titanic_train_df)","b9ca629a":"pclass_age_mean = titanic_train_df.groupby('Pclass')['Age'].mean()\nprint(pclass_age_mean)","c04e34c2":"def impute_age(cols):\n    Age = cols[0] #1st column\n    Pclass=cols[1] #2nd column\n    if pd.isnull(Age):\n        if Pclass == 1:\n            return 38\n        elif Pclass == 2:\n            return 29\n        else:\n            return 24\n    else:\n        return Age","906733bf":"titanic_train_df['Age'] = titanic_train_df[['Age','Pclass']].apply(impute_age,axis=1)","b320365c":"sns.heatmap(titanic_train_df.isnull(),yticklabels=False,cbar=False)","2de17183":"plt.figure(figsize=(10,7))\nsns.boxplot(x='Pclass',y='Fare',data=titanic_train_df)","ca04a8bb":"pclass_fare_mean = titanic_train_df.groupby('Pclass')['Fare'].mean()\nprint(pclass_fare_mean)","04107f7f":"def impute_fare(cols):\n    Fare = cols[0] #1st column\n    Pclass=cols[1] #2nd column\n    if pd.isnull(Fare):\n        if Pclass == 1:\n            return 84.154687\n        elif Pclass == 2:\n            return 20.662183\n        else:\n            return 13.675550\n    else:\n        return Fare","8ab9e895":"plt.figure(figsize=(12, 7))\nsns.heatmap(titanic_train_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","7d74c404":"titanic_train_df.drop('Cabin',axis=1,inplace=True)","bccad8c3":"titanic_train_df.dropna(inplace=True)","46b47545":"sns.heatmap(titanic_train_df.isnull(),yticklabels=False,cbar=False)","cc524944":"titanic_train_df.dropna(inplace=True)","42610d3f":"sns.heatmap(titanic_train_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')","6f0b3afb":"pd.get_dummies(titanic_train_df['Sex'])#pandas function","bdd9745b":"sex = pd.get_dummies(titanic_train_df['Sex'],drop_first=True)","612fe309":"sex.head()","d8de3170":"embark = pd.get_dummies(titanic_train_df['Embarked'],drop_first=True)","cccfafa2":"embark.head()","12d7b954":"train = pd.concat([titanic_train_df,sex,embark],axis=1) #we concatenate the new columns into the dataset","bd80a1c5":"train.head()","adf83df1":"train.drop(['Sex','Embarked','Name','Ticket','PassengerId'],axis=1,inplace=True)#we can now drop the Sex and Embarked columns. \n           #We will also drop the Name and Ticketas we wont be using it for machine learning algorithm\n ","04309099":"train.head()","107f90b7":"corr=train.corr().round(1)\n\nplt.figure(figsize=(25, 20))\nsns.set(style=\"ticks\", context=\"talk\",font_scale = 2)\nplt.style.use(\"dark_background\")\nmask = np.zeros_like(corr)\nmask[np.triu_indices_from(mask)] = True\nsns.heatmap(corr,annot=True,cmap='Purples',mask=mask,cbar=True)\nplt.title('Correlation Plot')","4b588520":"X= train.drop('Survived',axis=1)\ny=train['Survived']","d333abdc":"from sklearn.model_selection import train_test_split","325429d7":"X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)","a8bf369e":"from sklearn.linear_model import LogisticRegression","87a4066a":"logmodel = LogisticRegression(max_iter=10000)","f328633a":"logmodel.fit(X_train,y_train)","ac568ae6":"predictions = logmodel.predict(X_test)","cb05e9bb":"from sklearn.metrics import classification_report","814dcb2f":"print(classification_report(y_test,predictions))","35eabab4":"from sklearn.metrics import confusion_matrix","d53b9e80":"confusion_matrix(y_test,predictions)","8545097e":"predictions","33433ead":"from sklearn.metrics import classification_report","8859c52b":"print(classification_report(y_test,predictions))","20185425":"titanic_test_df = pd.read_csv('\/kaggle\/input\/titanic\/test.csv') #test.csv from kaggle","ed5c236a":"sns.heatmap(titanic_test_df.isnull(),yticklabels=False,cbar=False)","4cd29acf":"titanic_test_df['Age'] = titanic_test_df[['Age','Pclass']].apply(impute_age,axis=1)","58e90dad":"sns.heatmap(titanic_test_df.isnull(),yticklabels=False,cbar=False)","8a858d22":"titanic_test_df['Fare'] = titanic_test_df[['Fare','Pclass']].apply(impute_fare,axis=1)","63bc1b08":"sns.heatmap(titanic_test_df.isnull(),yticklabels=False,cbar=False)","a760c8cb":"sex = pd.get_dummies(titanic_test_df['Sex'],drop_first=True)","c0706b95":"embark = pd.get_dummies(titanic_test_df['Embarked'],drop_first=True)","3bc89aa4":"test = pd.concat([titanic_test_df,sex,embark],axis=1)","a83f2cda":"test.head()","aea6984c":"test.drop(['Sex','Embarked','Name','Ticket','PassengerId','Cabin'],axis=1,inplace=True)","b2816c1c":"test.head()","3bf8430c":"sns.heatmap(test.isnull(),yticklabels=False,cbar=False)","c3ef90c0":"predictions = logmodel.predict(test)","792e3080":"predictions","3e384d9b":"export = pd.DataFrame({'PassengerId':titanic_test_df.PassengerId, 'Survived': predictions})\nexport.to_csv('submission.csv', index=False)\nexport.head()","6e2f5c1b":"<p>We will also write imputation method for Fare, as it is needed for the test data<\/p>\n<br>","466d2f10":"<p> The data above prove the hypothesis that the high number of 0 SibSp is probably related to the high level of males in the third class passengers.<\/p>\n<br>\n<p>Lets try to see distribution of fare people pay to get on board.<\/p>","2a40f62a":"<p>Majority of Titanic passengers pay the cheapest fare, which falls under the first bin.<\/p>","9e103837":"\nTime to get the real test dataset csv file from. [Titanic Data Set from Kaggle](https:\/\/www.kaggle.com\/c\/titanic).","39ea2c8d":"<p>The Age data has now been cleaned, as we had imputed the nulls with average age of respective passenger classes<\/p>\n<br>","b90e0820":"<p>Third Class passengers were more likely to die in the incident. However, it might be due to high proportion of male passengers there as well.<\/p>\n<p>First class passengers has most likelihood to survive. And the Third Class passengers has lowest likelihood of survival<\/p>\n<br>\n<p>Lets now see passengers age distribution data<\/p>","bb812620":"<h2>Survived<\/h2>","30292956":"Things to improve in the future:\n1. Use categorical data of Pclass. (use dummy variables instead of 1,2,3).\n2. Remove Embarked dummy variables and replace with categorical Pclass dummy variables","4f19972b":"<p>Now we are left with the Cabin data and 1 Embarked row to be cleaned. However, as there is way too much missing Cabin data, I think its best to drop the data to avoid over\/under sampling imbalance.<\/p>","9b01cbdd":"<h1>Exploratory Data Analysis<\/h1>\n\n","4832f0b8":"<p>We also need to convert Pclass into dummy variables as well. We will do that later<\/p>","6591e751":"<p>One of the two columns above is redundant because we only need one column to identify sex. Having two columns will introduce multicollinearity, as the two columns are perfect predictors of each other.<\/p>","3cc703e2":"<p>We found out a lot of the Cabin data is missing, and a significant Age data is missing.<\/p>\n<p>We might need to remove the entire cabin column as the imbalance might lead to over\/under sampling<\/p>","afc503a0":"<h1>Data Cleaning<\/h1>\n<br>\n<br>    \n<p>So firstly, we found out that a significant portion of age was missing from the data set. Instead of dropping all the missing ages, we can simply fill in the age with the mean age.<\/p>\n<p>Lets check the average age of different passenger class<\/p>","a67be56a":"<p>Most people in the Titanice has zero Sibling\/Spouse, which suggested they might be solo traveler.<\/p>\n<p> I hypothesized the high number of 0 SibSp is probably related to the high level of males in the third class passengers.<\/p>\n\n<p>Lets try to dig deeper into the hypothesis<\/p>","7dd757e8":"<p>Each passenger class has different age spread, probably due to wealthier passengers were usually older.<\/p>\n<p>Now we are ready to impute by making a function<\/p>","f336b39e":"<p>Separating survival data with genders by adding hue. <\/p>\n<br>\n<h2>Sex<\/h2>\n<p>Lets try seeing the initial passenger data based on gender proportion<\/p>","2db58965":"<p>We observe a Normal Distribution curve, with Mean in between 20-30.<\/p>\n","b3a5ae28":"Some notes about the dataframe columns:\n\nVariable\tDefinition\tKey\nsurvival\tSurvival\t0 = No, 1 = Yes\npclass\tTicket class\t1 = 1st, 2 = 2nd, 3 = 3rd\nsex\tSex\t\nAge\tAge in years\t\nsibsp\t# of siblings \/ spouses aboard the Titanic\t\nparch\t# of parents \/ children aboard the Titanic\t\nticket\tTicket number\t\nfare\tPassenger fare\t\ncabin\tCabin number\t\nembarked\tPort of Embarkation\tC = Cherbourg, Q = Queenstown, S = Southampton","d42a1da7":"<p>A quick plot count to glance the rough ratio of survivor and victim <\/p>\n    ","ad5c9d1e":"We will impute the missing Fare information using the average respective Pclass data","aaf773a4":"<p>Next up, we are going to set up dummy variables on categorical features. For example, making Sex category into boolean<\/p>\n","6b2b71b6":"<h1>Evaluation<\/h1>","7ceb9fc4":"<p>Now we are left with one missing Embarked data. Lets drop the row as it is just one data point<\/p>","ca7c29df":"\n<p>Adding hue to survival status, we see male passengers are way more likely to not survive<\/p>\n<br>\n<h2>Passenger Class<\/h2>\n<p>Lets try to separate them based on Passenger class data<\/p>","87692ca8":"<p>Small observation that people with only 1 spouse\/siblings has higher survival ratio than other SibSp category<\/p>"}}