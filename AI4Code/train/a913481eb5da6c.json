{"cell_type":{"59b5ad32":"code","599da3fb":"code","fe84adfd":"code","4c13bcae":"markdown"},"source":{"59b5ad32":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","599da3fb":"import json\nimport matplotlib.pyplot as plt\n\nplt.rcParams['font.sans-serif'] = ['SimHei']\nplt.rcParams['axes.unicode_minus'] = False\n\n%matplotlib inline","fe84adfd":"plt.figure(figsize=(25,20))\n\nboundary_list = [boundary.split(\";\") for boundary in open(\"\/kaggle\/input\/china-province-city-latitude-longitude\/.txt\").readlines()[0].split(\"|\")]\nboundary_lng_list = [[float(latlng.split(\",\")[0]) for latlng in boundary] for boundary in boundary_list]\nboundary_lat_list = [[float(latlng.split(\",\")[1]) for latlng in boundary] for boundary in boundary_list]\n\nfor lng_list,lat_list in zip(boundary_lng_list,boundary_lat_list):\n    plt.plot(lng_list,lat_list,c=\"darkred\")\n    \nprovince_json = json.load(open(\"\/kaggle\/input\/china-province-city-latitude-longitude\/.json\",\"r\"))\ncity_lng_list = [d[0] for p in province_json.keys() for c,d in province_json[p][\"citys\"].items()]\ncity_lat_list = [d[1] for p in province_json.keys() for c,d in province_json[p][\"citys\"].items()]\nplt.scatter(city_lng_list,city_lat_list,s=50,c=\"darkgreen\")\n\nprovince_lng_list = [d[\"coordinate\"][0] for p,d in province_json.items()]\nprovince_lat_list = [d[\"coordinate\"][1] for p,d in province_json.items()]\nplt.scatter(province_lng_list,province_lat_list,marker=\"*\",s=200,c=\"darkblue\")\n\nplt.show()","4c13bcae":"The end."}}