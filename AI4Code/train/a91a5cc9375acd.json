{"cell_type":{"df0747aa":"code","4131fd1b":"code","723c9066":"code","4cf86631":"code","08374459":"code","ebe79333":"code","f0166cbd":"code","2cd79ad7":"code","7f10ef07":"code","8f8e92af":"markdown","a4ea398f":"markdown","39aad9f9":"markdown","d251236b":"markdown"},"source":{"df0747aa":"import sklearn\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import KFold","4131fd1b":"%%time\n\n\ndef metric(y_true, y_pred):\n    return np.mean(np.sum(np.abs(y_true - y_pred), axis=0)\/np.sum(y_true, axis=0))\n\n\nTARGETS = {\"age\": {\"SVR_C\": 100, \"metric_weight\": 0.3},\n           \"domain1_var1\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain1_var2\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain2_var1\": {\"SVR_C\": 10, \"metric_weight\": 0.175},\n           \"domain2_var2\": {\"SVR_C\": 10, \"metric_weight\": 0.175}}\n\nfnc_df = pd.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/fnc.csv\")\nloading_df = pd.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/loading.csv\")\n\nfnc_features, loading_features = list(fnc_df.columns[1:]), list(loading_df.columns[1:])\ndf = fnc_df.merge(loading_df, on=\"Id\")\n\nlabels_df = pd.read_csv(\"\/kaggle\/input\/trends-assessment-prediction\/train_scores.csv\")\nlabels_df[\"is_train\"] = True\n\ndf = df.merge(labels_df, on=\"Id\", how=\"left\")\n\ntest_df = df[df[\"is_train\"] != True].copy()\ndf = df[df[\"is_train\"] == True].copy()\n\nprint(df.shape, test_df.shape)","723c9066":"df.head(2)","4cf86631":"%%time\n\nfrom sklearn.manifold import TSNE\n\n\ndef plot_tsne(features, target):\n    tsne = TSNE(n_components=2)\n\n    X = tsne.fit_transform(df[features])\n\n    plt.figure(figsize=(8, 8), dpi=80)\n    plt.scatter(X[:, 0], X[:, 1], c=df[target].values)\n    plt.legend()\n    \nplot_tsne(features=loading_features, target=\"age\")","08374459":"# Giving less importance to FNC features since they are easier to overfit due to high dimensionality.\nFNC_SCALE = 1\/500\n\ndf[fnc_features] *= FNC_SCALE\ntest_df[fnc_features] *= FNC_SCALE","ebe79333":"%%time\n\nNUM_FOLDS = 7\nkf = KFold(n_splits=NUM_FOLDS, shuffle=True, random_state=0)\n\n\nfeatures = loading_features + fnc_features\n\noveral_score = 0\nfor target, conf in TARGETS.items():    \n    y_oof = np.zeros(df.shape[0])\n    y_test = np.zeros((test_df.shape[0], NUM_FOLDS))\n    \n    for f, (train_ind, val_ind) in enumerate(kf.split(df, df)):\n        train_df, val_df = df.iloc[train_ind], df.iloc[val_ind]\n        train_df = train_df[train_df[target].notnull()]\n\n        model = sklearn.svm.SVR(C=conf[\"SVR_C\"], cache_size=3000.0)\n        model.fit(train_df[features], train_df[target])\n\n        y_oof[val_ind] = model.predict(val_df[features])\n        y_test[:, f] = model.predict(test_df[features])\n        \n    df[\"pred_{}\".format(target)] = y_oof\n    test_df[target] = y_test.mean(axis=1)\n    \n    score = metric(df[df[target].notnull()][target].values, df[df[target].notnull()][\"pred_{}\".format(target)].values)\n    overal_score += conf[\"metric_weight\"]*score\n    print(target, np.round(score, 4))\n    print()\n    \nprint(\"Overal score:\", np.round(overal_score, 4))\nprint()","f0166cbd":"%%time\n\nsub_df = pd.melt(test_df[[\"Id\", \"age\", \"domain1_var1\", \"domain1_var2\", \"domain2_var1\", \"domain2_var2\"]], id_vars=[\"Id\"], value_name=\"Predicted\")\nsub_df[\"Id\"] = sub_df[\"Id\"].astype(\"str\") + \"_\" +  sub_df[\"variable\"].astype(\"str\")\n\nsub_df = sub_df.drop(\"variable\", axis=1).sort_values(\"Id\")\nassert sub_df.shape[0] == test_df.shape[0]*5\nsub_df.head(10)","2cd79ad7":"%%time\n\nsub_df.to_csv(\"submission.csv\", index=False)","7f10ef07":"# TODO: Get most important features and plot TSNE with them","8f8e92af":"# Making submission","a4ea398f":"# Feature Importance and Visualization","39aad9f9":"# Reading and merging dataframes\n* tabular data generated from brain scans\n* **targets**: age and 4 anonymized domain variables\n* **metric**: normalized mean absolute error\n* **fnc_features**: cross-correlation values among 53 component timecourses from fMRI\n* **loading_features**: independent component features from sMRI\n* 5877 patients in train, 5877 patients in test set","d251236b":"# Modelling and Cross-Validation"}}