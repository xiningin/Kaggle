{"cell_type":{"0ebe02ff":"code","3011ea52":"code","3d31965b":"code","3e13383e":"code","c58e68ac":"code","e9180b65":"code","ab514518":"code","d39b2678":"code","e6ec9efa":"code","2713cefd":"code","ba4eaf75":"code","1f4a9768":"code","eb109916":"code","7c3bd397":"code","e545bf5b":"code","6f750fbc":"markdown"},"source":{"0ebe02ff":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)","3011ea52":"from pathlib import Path\nfrom fastai import *\nfrom fastai.vision import *\nimport torch","3d31965b":"data_folder = Path(\"..\/input\")\n#data_folder.ls()","3e13383e":"train_df = pd.read_csv(\"..\/input\/train.csv\")\ntest_df = pd.read_csv(\"..\/input\/sample_submission.csv\")","c58e68ac":"test_img = ImageList.from_df(test_df, path=data_folder\/'test', folder='test')\ntrfm = get_transforms(do_flip=True, flip_vert=True, max_rotate=10.0, max_zoom=1.1, max_lighting=0.2, max_warp=0.2, p_affine=0.75, p_lighting=0.75)\ntrain_img = (ImageList.from_df(train_df, path=data_folder\/'train', folder='train')\n        .split_by_rand_pct(0.01)\n        .label_from_df()\n        .add_test(test_img)\n        .transform(trfm, size=128)\n        .databunch(path='.', bs=64, device= torch.device('cuda:0'))\n        .normalize(imagenet_stats)\n       )","e9180b65":"#train_img.show_batch(rows=3, figsize=(7,6))","ab514518":"learn = cnn_learner(train_img, models.densenet201, metrics=[error_rate, accuracy])","d39b2678":"#learn.lr_find()\n#learn.recorder.plot()","e6ec9efa":"lr = 3e-02\nlearn.fit_one_cycle(5, slice(lr))","2713cefd":"#learn.unfreeze()\n#learn.lr_find()\n#learn.recorder.plot()","ba4eaf75":"#learn.fit_one_cycle(1, slice(1e-06))","1f4a9768":"#interp = ClassificationInterpretation.from_learner(learn)\n#interp.plot_top_losses(9, figsize=(7,6))","eb109916":"preds,_ = learn.get_preds(ds_type=DatasetType.Test)","7c3bd397":"test_df.has_cactus = preds.numpy()[:, 0]","e545bf5b":"test_df.to_csv('submission.csv', index=False)","6f750fbc":"This Kernel is base or upgrade on [Alexander Milekhin](https:\/\/www.kaggle.com\/kenseitrg\/simple-fastai-exercise) and [Hsin Wen Chang](https:\/\/www.kaggle.com\/hsinwenchang\/simple-fastai-exercise-densenet-201), here I applied transfer learning skill with [densenet201](https:\/\/pytorch.org\/docs\/0.3.0\/torchvision\/models.html#id5)"}}