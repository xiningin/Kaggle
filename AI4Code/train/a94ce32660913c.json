{"cell_type":{"99f80f43":"code","35e826f1":"code","e7aaa447":"code","e5307c57":"code","7d7d4cb1":"code","c64b6896":"code","8bdd7663":"code","a8e65867":"code","6b3b827b":"code","29fc87c1":"code","1ea3b9c6":"code","2d3b6da0":"code","f7c76e09":"code","f9df6926":"code","c8efdb1b":"code","552a6f9a":"code","ba30abbe":"code","1645eb98":"code","2bd26359":"code","b58e9272":"code","516dc694":"code","aec4064e":"code","6cdb9c86":"code","277a5c9f":"code","474caf45":"code","16711468":"code","12077341":"code","31919f67":"code","77293a4c":"code","3f778813":"code","c2473201":"code","0f87c340":"code","e7ae1911":"code","d0fa16b2":"code","4eedfd03":"code","d137f3f5":"code","df5ab2c7":"code","167facda":"code","5e2de964":"code","53a6d563":"code","15ae34a9":"code","e26f65b6":"code","5d6c5b0b":"code","796b1b93":"code","e3e447b3":"code","7e1ea5f8":"code","ce2e5a9a":"code","f25a9015":"code","d794ae0a":"code","c9afe313":"code","9c98f6f3":"code","79bb51b5":"code","65a02995":"code","d67216d2":"code","98452c7a":"code","df684cd7":"code","ccac1e63":"markdown","4c1c74d8":"markdown","69b67512":"markdown","c927cded":"markdown","75c9af28":"markdown","85c4b465":"markdown","22b8f67c":"markdown","b408902a":"markdown","e0f25ac1":"markdown","35af69b7":"markdown","818046e2":"markdown","30156051":"markdown","3400e3e4":"markdown","532e9493":"markdown","2f668534":"markdown","064abee7":"markdown","f3a5d6ad":"markdown","57ac7ae7":"markdown","897c76f3":"markdown","c42be109":"markdown","617191b3":"markdown","63e54982":"markdown","c4340c80":"markdown","1e853154":"markdown","ced51813":"markdown","6f4c7d94":"markdown","aed26d4e":"markdown","ac08053c":"markdown","e281e8d4":"markdown","77e98c49":"markdown","7764bbec":"markdown","4e58035b":"markdown","14c7a541":"markdown","785ed7ce":"markdown","1ad4244a":"markdown","1da29109":"markdown","d06b264b":"markdown","3c35236f":"markdown","9c17b50e":"markdown","8ba49022":"markdown","0e3404ab":"markdown","6536bd47":"markdown","035f6830":"markdown","706c3982":"markdown","dd776368":"markdown","cc426cc9":"markdown"},"source":{"99f80f43":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\n","35e826f1":"KS_FILENAME = '\/kaggle\/input\/kickstarter-projects\/ks-projects-201801.csv' \nks_df = pd.read_csv(KS_FILENAME, index_col=['ID'], parse_dates=['launched', 'deadline'])\n# Starting by making float numbers more readable\npd.options.display.float_format = '{:,.3f}'.format","e7aaa447":"def value_counts_with_and_without_normalize(s, include_cumsum=False):\n    ret = pd.DataFrame( s.value_counts() )\n    ret['normalized'] = pd.DataFrame( s.value_counts(normalize=True) )\n    if (include_cumsum):\n       ret['cumsum'] = s.value_counts(normalize=True).cumsum()\n    return ret\n","e5307c57":"BEFORE_CLEANING = len(ks_df)\nBEFORE_CLEANING","7d7d4cb1":"ks_df.info()","c64b6896":"ks_df.goal.plot.hist(bins=100)","8bdd7663":"# Lets see what creates this problem. This piece of code is used to see how many digits are in the goal section\nnumnum = pd.Series(np.ceil(np.log10( ks_df['goal'] )))\nnumnum.index = ks_df['goal']\nvalue_counts_with_and_without_normalize(numnum, True)","a8e65867":"ks_df = ks_df[ ks_df.goal < 100000 ]\nks_df['goal'].hist(bins=100)\nks_df['goal'].value_counts()","6b3b827b":"'Rounded values are {:.2f}% of the goals'.format((ks_df['goal'] % 1000 == 0).mean() * 100)","29fc87c1":"value_counts_with_and_without_normalize(ks_df.state, True)","1ea3b9c6":"ks_df = ks_df[ ks_df.state.isin(['failed', 'successful', 'canceled']) ]","2d3b6da0":"ks_df['campaign_days'] = (ks_df.deadline - ks_df.launched).dt.days","f7c76e09":"ks_df['money_per_day_expected'] = ks_df.goal \/ ks_df.campaign_days\nks_df['money_per_day_pledged'] = ks_df.pledged \/ ks_df.campaign_days\nks_df['goal_percent_per_day_pledged'] = (ks_df.pledged * 100 \/ ks_df.goal) \/ ks_df.campaign_days\nks_df['backers_per_day_pledged'] = ks_df.backers \/ ks_df.campaign_days","f9df6926":"'{:.4f}'.format( (ks_df.campaign_days > 90).mean() )","c8efdb1b":"ks_df = ks_df[ ks_df.campaign_days <= 90 ]","552a6f9a":"ks_df.country.value_counts().plot.pie()","ba30abbe":"ks_df.loc[ ~ks_df.country.isin(['US', 'GB', 'CA']), 'country' ] = 'OTHER'","1645eb98":"ks_df['submition_year'] = ks_df.launched.dt.year","2bd26359":"ks_df['goal_percent'] = ks_df.pledged * 100 \/ ks_df.goal","b58e9272":"ks_df.name = ks_df.name.str.rstrip(' (Canceled)')","516dc694":"print ('We now lost {} that are {:.2f}% of the original list'.format( \n    BEFORE_CLEANING - len(ks_df), (BEFORE_CLEANING - len(ks_df)) * 100 \/ BEFORE_CLEANING ))","aec4064e":"def yearly_grouping_function (df):\n    return pd.Series([\n    '{:.0f}'.format( df.size ),\n    '{:.0f}'.format( (df.state == 'successful').sum() ),\n    (df.state == 'successful').mean() * 100,\n    df.usd_goal_real.median(),\n    df.usd_pledged_real.median(),\n    df.goal_percent.mean()],\n    index = ['projects', 'successful_projects', 'success_rate', 'goal_median', \n             'pledged_median', 'mean_goal_percent']\n)","6cdb9c86":"yearly_groups = ks_df[ ks_df.submition_year != 2018 ].groupby('submition_year')\nyearly_groups.apply(yearly_grouping_function).T","277a5c9f":"goals_group = ks_df.groupby(ks_df.goal \/\/ 1000) # Without this grouping, the graph is unreadable, due to indvidual projects with uneven goals\ngoals_group.apply(lambda df: (df.state == 'successful').mean()).plot()","474caf45":"yearly_cheap_groups = ks_df[ (ks_df.submition_year != 2018) & (ks_df.goal < 1000)].groupby('submition_year')\nyearly_cheap_groups.apply(yearly_grouping_function).T","16711468":"fig, ax = plt.subplots(2)\nyearly_groups.apply(yearly_grouping_function)['success_rate'].plot(ax=ax[0])\nyearly_cheap_groups.apply(yearly_grouping_function)['success_rate'].plot(ax=ax[0])\n\nyearly_groups.apply(yearly_grouping_function)['mean_goal_percent'].plot(ax=ax[1])\n(yearly_cheap_groups.apply(yearly_grouping_function)['mean_goal_percent'] \/ 5).plot(ax=ax[1])","12077341":"fig, ax = plt.subplots(1,2, figsize=(20,5))\nks_df[ ks_df['goal_percent'] >=100 ].state.value_counts(normalize=True).plot.bar(ax=ax[0])\nks_df[ ks_df['goal_percent'] <100 ].state.value_counts(normalize=True).plot.bar(ax=ax[1])","31919f67":"ks_df[ (ks_df.goal_percent >=100) & (ks_df.state == 'failed') ][ ['name', 'goal', 'pledged', 'backers', 'goal_percent', 'state'] ]","77293a4c":"ks_df[ (ks_df.goal_percent < 100) & (ks_df.state == 'successful') ][ \n    ['name', 'goal', 'pledged', 'backers', 'goal_percent', 'state'] ]","3f778813":"clean_goals = ks_df[ ks_df['goal_percent'] < 300 ]['goal_percent']\nclean_goals.plot.hist(bins=100)","c2473201":"print ('{:.2f} percent got no money at all'.format((ks_df.pledged == 0).mean() * 100))\nprint ('{:.2f} percent aimed exactly to thier goal'.format((ks_df.goal_percent == 100).mean() * 100))\nprint ('{:.2f} percent aimed close to thier goal'.format(\n    ((ks_df.goal_percent >= 100) & (ks_df.goal_percent < 120) ).mean() * 100)\n)\nprint ('{:.2f} percent of the successful projects aimed close to thier goal'.format(\n    ((ks_df[ks_df.state == 'successful'].goal_percent < 120).mean() * 100)\n))","0f87c340":"value_counts_with_and_without_normalize( ks_df.campaign_days )","e7ae1911":"campaign_days_group = pd.cut(ks_df.campaign_days, [0, 28, 29, 58, 59, 10000], \n                             labels=['Less than 29', '29', '30-58', '59', 'Over 59'])\nks_df.groupby(campaign_days_group).size().plot.pie(ylabel=\"\", title=\"Campaign Length\")","d0fa16b2":"ks_df.groupby(campaign_days_group).apply(lambda df: pd.Series([\n    (df.state == 'successful').mean(),\n    df.goal.median(),\n    df.pledged.median(),\n    df.money_per_day_pledged.median(),\n    df[df.state == 'successful'].money_per_day_pledged.median(),\n    df[df.state == 'successful'].goal_percent_per_day_pledged.min(),\n], index=['success_rate', 'goal', 'pledged', 'pledged_per_day', 'successful_pleged_per_day', 'min_goal_percent_per_day']))","4eedfd03":"value_counts_with_and_without_normalize( ks_df.campaign_days )","d137f3f5":"campaign_days_group = ks_df.groupby((ks_df.campaign_days))\ncampaign_days_group_success = campaign_days_group.apply(\n    lambda df: (df.state == 'successful').mean() * 100)\n# to show both \ncampaign_days_group_percent = campaign_days_group.apply(\n    lambda df: (df.goal_percent > 200).mean() * 100)\n\nprint( \"Reminder: The avrage success rate is: {:.3f}\".format((ks_df.state == 'successful').mean() * 100) )\nprint( \"{:.3f} success rate for the popular 29. The {}th place\".format(\n    campaign_days_group_success.loc[29], campaign_days_group_success.sort_values().index.get_loc(29)) )\nprint( campaign_days_group_success.sort_values().head() )\nprint( campaign_days_group_success.sort_values().tail() )\n\nfig, ax = plt.subplots(2)\ncampaign_days_group_success.plot(ax=ax[0])\ncampaign_days_group_percent.plot(ax=ax[1], figsize=(10,10), logy=True)\nfig.show()","df5ab2c7":"from wordcloud import WordCloud, STOPWORDS\n\nstopwords = set(STOPWORDS)\ndef wc():\n    return WordCloud(\n                          background_color='black',\n                          normalize_plurals=True,\n                          stopwords=stopwords,\n                          max_words=100,\n                          max_font_size=40, \n                          random_state=42\n)\nwordcloud = wc().generate(str(ks_df['name']).lower())\nfig = plt.figure(1)\nplt.imshow(wordcloud,interpolation=\"bilinear\")\nplt.axis('off')\nplt.show()","167facda":"\nf, ax = plt.subplots(1,2, figsize=(20,10))\nsuccessful_cloud = wc().generate(str(ks_df[ ks_df.state == 'successful' ]['name']).lower())\nax[0].imshow(successful_cloud,interpolation=\"bilinear\")\nax[0].axis('off')\nax[0].set_title('Successful Projects')\n\nunsuccessful_cloud = wc().generate(str(ks_df[ ks_df.state != 'successful' ]['name']).lower())\nax[1].imshow(unsuccessful_cloud, interpolation=\"bilinear\")\nax[1].axis('off')\nax[1].set_title('Failed Projects')\n\nf.show()","5e2de964":"def find_word_mask(word):\n    return ks_df.name.str.lower().str.match(\n        (r'\\b{}\\b').format(word.lower())\n    ) != False\nprint (\"'Bar' susccess rate is {:.2f}\".format(\n    (ks_df[ find_word_mask('bar')].state == 'successful').mean() * 100))\nprint (\"'Art' susccess rate is {:.2f}\".format(\n    (ks_df[ find_word_mask('art')].state == 'successful').mean() * 100))","53a6d563":"words_df = pd.DataFrame([], columns=['rate', 'success'])\n\nfor word in wordcloud.words_.keys():\n    word_df = ks_df[find_word_mask(word)]\n    s = pd.Series({\n        'rate': len( word_df ), \n        'success': (word_df.state == 'successful').mean()\n    },name=word)\n    words_df = words_df.append(s)\n\n","15ae34a9":"f, ax = plt.subplots(1,2, figsize=(20,10))\nwords_df[words_df.rate > 20].rate.plot.pie(ax=ax[0])\nwords_df[words_df.rate > 20].success.plot.bar(ax=ax[1])\nwords_df[words_df.rate > 20].sort_values('success', ascending=False)","e26f65b6":"print (\"reminder: Regular success rate is: {:.2f}\".format( \n    (ks_df.state == 'successful').mean() *100 ))","5d6c5b0b":"ks_df[find_word_mask('help')].name.head()","796b1b93":"sizes = ks_df.country.value_counts()\nlabels=sizes.index\nexplode = [0,] * 4\nexplode[ sizes.index.get_loc('OTHER') ] = 0.2\nplt.pie(sizes,labels=labels,explode=explode,\nautopct='%1.1f%%', shadow=True, startangle=140)\nplt.title(\"Breakdown by Country\")","e3e447b3":"ks_df_no_2018 = ks_df[ ks_df.submition_year < 2018 ]","7e1ea5f8":"grouped_data = ks_df_no_2018.groupby(['submition_year', 'country']).apply(yearly_grouping_function)\n","ce2e5a9a":"projects = grouped_data['projects'].astype('float').unstack(fill_value=0)\nprojects.plot(figsize=(10,10))\nprojects","f25a9015":"ks_df_no_2018.groupby('country').apply(lambda df: (df.state=='successful').mean())","d794ae0a":"grouped_data['success_rate'].unstack(fill_value=0).plot()\nplt.show()\ngrouped_data['success_rate'].unstack(fill_value=0)","c9afe313":"all_countries_years = ks_df_no_2018[ ks_df_no_2018.submition_year >= 2013 ]\nprint (\"2013-2017 avg rate is {:.2f}\".format(\n    (all_countries_years['state'] == 'successful').mean()\n))\naverages = all_countries_years.groupby('country').apply(lambda df:\n    (df['state'] == 'successful').mean()\n)\naverages.plot.bar()\nplt.show()\naverages","9c98f6f3":"\nks_df_no_2018.groupby(['submition_year', 'country']).apply(lambda df: df.goal.median()).unstack()","79bb51b5":"grouped_data['goal_median'].unstack()","65a02995":"fig, ax = plt.subplots(1,2, figsize=(20,5))\nks_df.groupby(ks_df.main_category).apply(\n    lambda df: (df.state == 'successful').mean() * 100).plot.bar(ax=ax[0])\nks_df.groupby(ks_df.main_category).size().plot.bar(ax=ax[1])","d67216d2":"ks_df_no_2018.groupby(['submition_year'])\\\n    .apply(lambda df: df.main_category.value_counts(normalize=True) * 100).unstack().T","98452c7a":"success_by_cat_and_year = ks_df_no_2018.groupby(['submition_year', 'main_category']).apply(\n    lambda df: (df.state == 'successful').mean() * 100).unstack().T","df684cd7":"fig = px.imshow(success_by_cat_and_year)\nfig.show()","ccac1e63":"### Campaign length in days","4c1c74d8":"It looks like a project can be considered successful even if it missed it's goal, and can be considered failed, even if it didn't meet the goal. Lets examine thise projects:","69b67512":"Lets take a quick look at popuplar words in the name. Just to get started","c927cded":"### Countries Breakdown","75c9af28":"### Year of submition\nWe find it useful to easly group by submittion year.","85c4b465":"As can seen in this graph, the more ambitious a project is, it tened to have less success. By exploring only low bar projects in each year, we can see if the failure trend has to do with the year, or with the projects asking for a greater goal","22b8f67c":"Kickstater users try to ask for help in thier project name. Well, it looks like it helps","b408902a":"As can be seen, the US makes the VAST VAST majority of projects. The first five make over 97 percent. However, the others won't be deleted. It makes more sense to just lump them together as \"Other\". This is not clearly seen here, but this process will eliminate null country","e0f25ac1":"# LETS Explore!!!","35af69b7":"On it's face it looks like words like \"songs\" and \"community\", \"help\" and \"new\" show good better than average performance. And they seem to be popular with KS projects.\nHelp seem to be extremly popular. Lets see why:","818046e2":"This table shows us that while the number of projects reached a peeked on 2015, the success rate got a lot lower in latter years. Moreover, the mean goal reaches a lower percentage. However the projects seem to get more ambitious goals. Lets see this separetly as a factor on success","30156051":"*Much Better*\n\n**NOTE! The spikes represent rouded values, as can be seen in the here:**","3400e3e4":"Exploring precentage of goal achivment, uncovered some interesting things. However to explore it, we need to get rid of extrem goal precentage values","532e9493":"# Step 1: Cleanup and additional data\nThere are several extreme values, nulls and problematic parts of the table, We wanted to handle before starting data exploration. Every cleanup job will be explained. Before we start, lets see what we loose","2f668534":"### What's in a name?","064abee7":"### States\nExamining the states reveals 3 states that need to be removed:**","f3a5d6ad":"### Pledge goal, and success analisys\n\nFirst of all, are all projects that got to thier goal successful? Are all project that missed thier goal failed?","57ac7ae7":"As can be seen, longer successful campaigns tend to reach their goal slower, and they don't neccerly search for more money. The most popular choises for campaign length seem to go with much lower success rate. Lets give it a better look","897c76f3":"### Days to goal\nThis missing value contains the number of days for this project. This can be explored\n","c42be109":"Exploring these projects in KickStarter yield not answers to why some failed without meating thier goal, and other succeded, without meeting it. However, it looks like it is a small minority, that we'll have to live without fully understanding. ","617191b3":"This also has some exterme values, that need cleaning. This will have little affect of the data, but will allow us to get some insights","63e54982":"The Undefined and live projects, did not finish, and no real data can be understood about them. They need to be removed too. As they make up less than 3 percent of all data, this shouldn't be an issue","c4340c80":"Well, 59 days - The 2nd place in days popularity (8 percent), seems to be THE ABSOLUTE WORST. 29, is not that more successful. This graph tracks well with the extreme success rate (campaigns over 200% of thier goals achived). \nConclution: Successful campaigns tend to be short. **Tell me you expected this one! I dare you!!!**\n","1e853154":"Looks like projects with over 100,000 contibute less than 3 percent. Lets see how removing them helps us","ced51813":"Step 0: preparation","6f4c7d94":"We can that while KS lost popularity at 2015 in it's main countries, the \"Other\" countries never lost intrest. Their graph keeps rising ","aed26d4e":"2018 has very small number of projects, so the next breakdown will not include it. We created a copy of our DF to remove it","ac08053c":"All instances show that in the first year, KS projects start ambious. However time helps countries to become more similar to the US","e281e8d4":"So, Longer campaigns do have more ambious goals, They tend to be designed to get less mo","77e98c49":"### Rare Countries","7764bbec":"As can be seen here, the days for campaign, there's one clear winner - 29 days. Our guess, its the default setting of a project. However, other, not so obvious choises seem to prop up. \nLets see those who differ","4e58035b":"No. US fell along with all other countries. Some years went better for GB than US. Even canada beat US rates on it's last year. It looks like US rates are better explained by being in KS in the beggining, more than the other way around","14c7a541":"This line here shows that using rounded numbers is popular on all countires. Just using diffrent currancy makes the numbers not round.","785ed7ce":"We can see that US projects tend to go better than average, while all other go a worst. Could the joining of other countries explain why latter years went bad?","1ad4244a":"So, if you want to create a project next year - Better be british!!!","1da29109":"# KICKSTARTER STATS\n","d06b264b":"### Money each day\nThese 4 cols will help us look at the rate a campaign expected to get money, the rate it got money, and the rate of backers per day","3c35236f":"While it may look like Bar is very prevelant in sucessful projects, we should not assume it is also a word that promisses success. Comparing it with Art, that was prevelant in the Failed projects, for example, Art acctually has a better success rate.\nLets try just finding out what the most prevelant words give us.","9c17b50e":"### precentage goal\nWe find it useful to explore the percentage of a goal completed just to see what happened","8ba49022":"### Years\nThis analisys will skip 2018, that has very few projects.","0e3404ab":"It looks like the trend looks fairly similar. While more projects succeed, and the precentage gets a lot better in cheap projects, the success trend looks similar, for cheap and high priced projects","6536bd47":"As we can see, there's a big group of projects, that get no money at all. There is also a trend that project tend to be less likely to fail to meat the goal, when they get closer to it, hence the spike in the 100% area. As can be seen, successful projects, tend to aim thier goal right, as very few get a lot more than they asked for. Lets look at this:","035f6830":"(What is ZGAC?)\nLets see similar clouds for both successful and failed campaigns","706c3982":"Lets have a look at some of these projects that failed to get any money","dd776368":"### Extreme goals\nLooking at the histogram of the goals, revel a problem. There are extrem values, we cannot really handle.","cc426cc9":"Canceled events have the string ' (Canceled)' Attach to them. This has nothing to do with the way we want to look into this data. So..."}}