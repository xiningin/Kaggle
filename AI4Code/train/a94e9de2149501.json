{"cell_type":{"1d8aa265":"code","9c07c018":"code","30c624a6":"code","1a6a5da7":"code","58fcb7b9":"code","7619713c":"code","8c44b83a":"code","106c462a":"code","c0a93583":"markdown","74967ef5":"markdown"},"source":{"1d8aa265":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","9c07c018":"animeDataFrame = pd.read_csv(\"..\/input\/myanimelist-comment-dataset\/animeListGenres.csv\", error_bad_lines=False)\nanimeDataFrame.head()\n#print(animeDataFrame.loc[[3573]])","30c624a6":"animeDataFrame.columns","1a6a5da7":"animeDataFrameAux = animeDataFrame\nanimeDataFrameAux.genres = animeDataFrame.genres.str.split(\", \")\nanimeDataFrameAux.head()\n\n","58fcb7b9":"#Transformar a lista de listas de generos e apenas uma lista\nflat_list = []\nfor sublist in animeDataFrameAux.genres:\n    for item in sublist:\n        flat_list.append(item)    \n        \n#rCriar lista com generos sem repetir\ngenerosUnicos = []\nfor x in flat_list: \n    # check if exists in unique_list or not \n    if x not in generosUnicos: \n        generosUnicos.append(x)\n\n# print list \nprint(generosUnicos)\n","7619713c":"\"\"\"\nfor sublist in animeDataFrameAux.genres:\n    for item in sublist:\n        for item2 in generosUnicos:\n            if item == item2:\n                animeDataFrameAux[item]= 1\n            else: \n                animeDataFrameAux[item]= 0\n\"\"\"","8c44b83a":"#algo errado n\u00e3o est\u00e1 certo nessa parte\n\nAnimesFinal = pd.DataFrame()\n\nfor index, row in animeDataFrameAux.iterrows():\n    for item in generosUnicos:\n        if item in row.genres:\n            row[item] = 1\n        else:\n            row[item] = 0\n        \n        AnimesFinal.append(row)","106c462a":"AnimesFinal.head()","c0a93583":"**Preparado o DataFrame pra mandar a rede neural**","74967ef5":"**Criar colunas com os g\u00eaneros, atribuir 1 caso o anime seja do g\u00eanero ou 0 caso contr\u00e1rio**"}}