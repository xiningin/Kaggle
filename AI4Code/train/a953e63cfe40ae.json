{"cell_type":{"9480f844":"code","a1ceb0e0":"code","a135b440":"code","f4090bca":"code","116508ed":"code","8ef5cd6a":"code","ef737ac8":"code","f67ee1b0":"code","bab9b1f1":"code","355c13cf":"code","132bd5b9":"code","60a53d03":"code","7ec0bd10":"code","88698c3f":"code","2aae857b":"code","e54292dd":"code","75c170c1":"code","2ca59689":"code","ab19092a":"code","328928b5":"code","501a57ca":"code","48724e77":"code","6b11afe0":"code","b8748104":"code","2a3c6fad":"code","cacaa0f9":"code","d401f40f":"code","dd7780ab":"markdown","61f2693a":"markdown","a268c1cd":"markdown","18cc0a4a":"markdown","934e1161":"markdown","90d32693":"markdown","b0cd41a9":"markdown","003abcf4":"markdown","92ef55df":"markdown","25f222bb":"markdown","3fac6c6d":"markdown","6316977d":"markdown"},"source":{"9480f844":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# Any results you write to the current directory are saved as output.","a1ceb0e0":"#import all the necessary libraries\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n","a135b440":"admission = pd.read_csv('\/kaggle\/input\/graduate-admissions\/Admission_Predict_Ver1.1.csv')","f4090bca":"admission.head()","116508ed":"admission.shape","8ef5cd6a":"#check for null value\nadmission.isnull().sum()","ef737ac8":"admission.describe()","f67ee1b0":"admission.info()","bab9b1f1":"#delete the unncessary serial number column from the dataset.\n\nadmission.drop('Serial No.', axis=1,inplace=True)","355c13cf":"admission.head()","132bd5b9":"#correlation matrix\n\nfig, ax = plt.subplots(figsize=(9,9))\nsns.heatmap(admission.corr(), annot=True, ax=ax, cmap='BuPu')","60a53d03":"sns.countplot(x='Research', data=admission)\n","7ec0bd10":"#TOEFL score\n\nadmission['TOEFL Score'].plot(kind='hist')\nplt.title('Histogram of TOEFL Score')\n","88698c3f":"admission['GRE Score'].plot(kind='hist')\nplt.title('Histogram of GRE')","2aae857b":"admission.plot(kind='scatter', x='TOEFL Score', y='GRE Score')\nplt.title('GRE Scores Vs TOEFL score')","e54292dd":"admission.plot(kind='scatter', x='CGPA', y='University Rating')\nplt.title('University Rating Vs CGPA')","75c170c1":"fig, ax = plt.subplots(1,2,figsize=(10,3))\nadmission.plot(kind='scatter', x='CGPA', y='TOEFL Score',ax=ax[0])\nadmission.plot(kind='scatter', x='CGPA', y='GRE Score',ax=ax[1])\nplt.suptitle('CGPA VS (TOEFL Score & GRE Score)')","2ca59689":"admission_count = admission[admission['Chance of Admit '] >=0.75]['University Rating'].value_counts()\nadmission_count.plot(kind='bar')\nplt.title('University rating of candidates with 75% of admission chance')\nplt.xlabel('University Rating')\nplt.ylabel('Students count')","ab19092a":"y = admission['Chance of Admit ']\nX = admission.drop(['Chance of Admit '], axis=1)\n\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1, test_size=0.2)\n","328928b5":"X_train.shape, y_train.shape, X_test.shape, y_test.shape","501a57ca":"#Normalization\n\nfrom sklearn.preprocessing import MinMaxScaler\n\nX_scaler = MinMaxScaler(feature_range=(0,1))\n\nX_train_norm = X_scaler.fit_transform(X_train)\nX_test_norm = X_scaler.transform(X_test)","48724e77":"from sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nlr.fit(X_train_norm, y_train)\n\ny_pred = lr.predict(X_test_norm)","6b11afe0":"from sklearn.metrics import r2_score\n\nprint('R2 score ', r2_score(y_test, y_pred))","b8748104":"from sklearn.ensemble import RandomForestRegressor\n\nrfg = RandomForestRegressor(n_estimators=100, random_state=0)\nrfg.fit(X_train_norm, y_train)\n\ny_pred = rfg.predict(X_test_norm)","2a3c6fad":"print('R2 score ', r2_score(y_test, y_pred))","cacaa0f9":"from sklearn.tree import DecisionTreeRegressor\ndtr = DecisionTreeRegressor(random_state = 42)\ndtr.fit(X_train_norm, y_train)\n\ny_pred = dtr.predict(X_test_norm)","d401f40f":"print('R2 score ', r2_score(y_test, y_pred))","dd7780ab":"The majority of students are having research experience. so this column has got low correlation score","61f2693a":"Decision Tree Regression","a268c1cd":"Normalization\n  --- Since all the values in the columns are in the different ranges, we are going to normalize all the values using Min - Max scaler.\n  ","18cc0a4a":"The most important columns are Gre scores, ToEFL scores and CGPA\nThe least import columns are University Ranking, SOP,LOR and Research.","934e1161":"The CGPA scores are high for high University rating.","90d32693":"The density of GRE score lies between 310 and 330","b0cd41a9":"From this graph, it cleary shows those who scored more in TOEFL, scored well in GRE too.\nLikewise, those who got low scores in TOEFL has got low score in GRE too.","003abcf4":"### Modelling\n\nLinear Regression\n\nFirstly, split the dataset into train and test sets.\n\n","92ef55df":"From the graph, it is clearly evident that those whose got high marks in CGPA, has got high marks in TOELF and GRE too.\n","25f222bb":"Random Forest Regression","3fac6c6d":"The density of TOEFL score lies between 105 and 110.","6316977d":"The dataset contains 500 rows and 9 columns.\nThe columns are as follows\n    - Gre Score\n    - TOEFL score\n    - University Ranking\n    - SOP\n    - LOR\n    - CGPA\n    - Research\n    - Chance of Admit\n\n"}}