{"cell_type":{"bf576696":"code","efdcbaa7":"code","0dfe8163":"code","cfcfd815":"code","8c05c7f4":"code","458e545b":"code","3855a87e":"code","10f89d8e":"code","0ec3ee36":"code","a13d4c85":"code","2be8d8f7":"code","5aea9791":"code","46b8cc3b":"code","beb39751":"code","4bb5e089":"code","7adc833e":"code","766dcd35":"code","ff110ff0":"code","be5e22b5":"code","c5e5d825":"code","ecc17b5d":"code","8769fa75":"code","d091e4bb":"code","729f6708":"code","c670c488":"code","40901759":"code","12477637":"code","6f12ecd6":"code","8f8d499d":"code","61c7ded3":"code","4e2225c9":"code","0722942c":"code","66aa28e8":"code","d877516d":"code","56a46b00":"code","e054f80e":"code","f0386f07":"code","7506b9cd":"code","6e5ac82c":"code","b2e94358":"code","5bf86252":"code","f6dd3aef":"code","a34afa10":"code","9e4eab68":"code","30d33ff7":"code","f5e6133b":"code","84bfbc78":"code","11e3eb44":"code","366e4f84":"markdown","b7cff9fe":"markdown","c9a31bd6":"markdown","759b1c53":"markdown","8ddbe79a":"markdown","cf697242":"markdown","470a78e5":"markdown","d44242ab":"markdown"},"source":{"bf576696":"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport pandas as pd\nimport warnings\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\nfrom sklearn.utils import resample\n\nwarnings.filterwarnings('ignore')\nsns.set(style=\"whitegrid\")\nbaslik_font = {'family': 'arial', 'color': 'darkred','weight': 'bold','size': 13 }\neksen_font  = {'family': 'arial', 'color': 'darkblue','weight': 'bold','size': 10 }","efdcbaa7":"df = pd.read_csv('\/kaggle\/input\/africa-economic-banking-and-systemic-crisis-data\/african_crises.csv', index_col='case')\ndf.head()","0dfe8163":"print(\"Checking the columns in the dataset.\")\ndf.columns","cfcfd815":"df.info()","8c05c7f4":"df.isnull().sum()","458e545b":"df.describe()","3855a87e":"# Dataset is non-uniform and recently formed countries have least data\nplt.figure(figsize=(8,8))\ncounts= df['country'].value_counts()\ncountry=counts.index\nexplode = (0.2, 0.1, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0)\nplt.pie(counts, explode=explode,labels=country,autopct='%1.1f%%')\nplt.show()","10f89d8e":"# Let me visualize the country that has high number of banking_crisis \nplt.figure(figsize=(10,5))\nsns.set_style('whitegrid')\nsns.countplot(x='country', data=df, palette='gist_rainbow', hue='banking_crisis')\nplt.title('Graph of Country Representation based on Banking Crisis')\nplt.xticks(rotation = 60)\nplt.xlabel(None)\nplt.show()","0ec3ee36":"plt.figure(figsize=(20,14))\nplt.subplot(221)\nsns.set_style('whitegrid')\nsns.countplot(x='country', data=df, palette='gist_rainbow', hue='systemic_crisis')\nplt.title('Graph of Country Representation based on systemic_crisis')\nplt.xticks(rotation = 90)\nplt.xlabel(None)\nplt.subplot(222)\nsns.set_style('whitegrid')\nsns.countplot(x='country', data=df, palette='gist_rainbow', hue='inflation_crises')\nplt.title('Graph of Country Representation based on inflation_crises')\nplt.xticks(rotation = 90)\nplt.xlabel(None)\nplt.subplot(223)\nsns.set_style('whitegrid')\nsns.countplot(x='country', data=df, palette='gist_rainbow', hue='banking_crisis')\nplt.title('Graph of Country Representation based on Banking Crisis')\nplt.xticks(rotation = 90)\nplt.xlabel(None)\nplt.tight_layout()\nplt.show()\n","a13d4c85":"plt.figure(figsize=(15,8))\nplt.subplot(121)\nsns.barplot(x='systemic_crisis',y='country',data=df, palette='Paired')\nplt.ylabel(None)\nplt.title(\"Systemic_Crisis\", fontdict=baslik_font)\nplt.subplot(122)\nplt.title(\"\u0130nflation_Crises\", fontdict=baslik_font)\nsns.barplot(y='country',x='inflation_crises',data=df,palette='Paired')\nplt.ylabel(None)\nplt.tight_layout()\nplt.show()","2be8d8f7":"#The inflation and exchange rates are good indicator for economic health for the country\nplt.figure(figsize=(15,8))\ncount = 1\nfor country in df.country.unique():\n    plt.subplot(len(df.country.unique())\/4,5,count)\n    count+=1\n    sns.lineplot(df[df.country==country]['year'],df[df.country==country]['exch_usd'], color=\"darkred\")\n    sns.lineplot(df[df.country==country]['year'],df[df.country==country]['inflation_annual_cpi'],color=\"darkblue\")\n    plt.subplots_adjust(wspace=0.4,hspace=0.5)\n    plt.xlabel(None)\n    plt.ylabel('\u0130nflation\/Exchange Rates')\n    plt.title(country,baslik_font)","5aea9791":"df[\"banking_crisis\"]=df.banking_crisis.replace({'crisis':1,'no_crisis':0})\ndf.head(1)","46b8cc3b":"df.corr()","beb39751":"df.columns","4bb5e089":"plt.figure(figsize=(10,7))\nsns.heatmap(df.corr(), cmap='magma', annot=True)\nplt.ylim(0,11)","7adc833e":"a=df.sort_values(by=['year'])\n\nfig = px.choropleth(a,locations=\"cc3\",\n                    color=\"exch_usd\",animation_frame=\"year\", \n                    hover_name=\"country\", \n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(\n    title_text = 'Africa exch_usd',\n    geo_scope='africa', \n)","766dcd35":"fig = px.choropleth(a,locations=\"cc3\",\n                    color=\"inflation_annual_cpi\",animation_frame=\"year\", \n                    hover_name=\"country\", \n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(\n    title_text = 'Africa Enflasyon Durumu',\n    geo_scope='africa', \n)","ff110ff0":"a1=df.groupby('country').sum()\na1['cc2']=['DZA', 'AGO', 'CAF', 'EGY','CIV',  'KEN', 'MUS', 'MAR', 'NGA',\n       'ZAF', 'TUN', 'ZMB', 'ZWE']\na1['country1']=['Algeria', 'Angola', 'Central African Republic',\n       'Egypt','Ivory Coast', 'Kenya', 'Mauritius', 'Morocco', 'Nigeria',\n       'South Africa', 'Tunisia', 'Zambia', 'Zimbabwe']","be5e22b5":"\nfig = px.choropleth(a1,locations=\"cc2\",\n                    color=\"banking_crisis\",\n                    hover_name=\"country1\", \n                    color_continuous_scale=px.colors.sequential.Plasma)\nfig.update_layout(\n    title_text = 'Africa Enflasyon Durumu',\n    geo_scope='africa',\n)","c5e5d825":"log_reg = LogisticRegression()","ecc17b5d":"df.corr().banking_crisis.abs().sort_values()","8769fa75":"X = df[['year', 'systemic_crisis', 'domestic_debt_in_default', 'sovereign_external_debt_default',\n       'gdp_weighted_default',  'independence',\n       'currency_crises','exch_usd', 'inflation_crises','inflation_annual_cpi']]\ny = df['banking_crisis']","d091e4bb":"X_e\u011fitim, X_test, y_e\u011fitim, y_test =  train_test_split(X, y, test_size=0.20, random_state=111)","729f6708":"log_reg.fit(X_e\u011fitim, y_e\u011fitim)","c670c488":"egitim_dogruluk = log_reg.score(X_e\u011fitim, y_e\u011fitim)\ntest_dogruluk = log_reg.score(X_test, y_test)\nprint('One-vs-rest', '-'*20, \n      'Modelin e\u011fitim verisindeki do\u011frulu\u011fu : {:.2f}'.format(egitim_dogruluk), \n      'Modelin test verisindeki do\u011frulu\u011fu   : {:.2f}'.format(test_dogruluk), sep='\\n')","40901759":"log_reg_mnm = LogisticRegression(multi_class='multinomial', solver='lbfgs')\nlog_reg_mnm.fit(X_e\u011fitim, y_e\u011fitim)\negitim_dogruluk = log_reg_mnm.score(X_e\u011fitim, y_e\u011fitim)\ntest_dogruluk = log_reg_mnm.score(X_test, y_test)\nprint('Multinomial (Softmax)', '-'*20, \n      'Modelin e\u011fitim verisindeki do\u011frulu\u011fu : {:.2f}'.format(egitim_dogruluk), \n      'Modelin test verisindeki do\u011frulu\u011fu   : {:.2f}'.format(test_dogruluk), sep='\\n')","12477637":"tahmin_de\u011ferleri = np.array([[2025,1,1,0,1,0,1.5,1,1,0]])\nprint(log_reg.predict(tahmin_de\u011ferleri))","6f12ecd6":"C_de\u011ferleri = [0.001,0.01,0.1,1,10,100, 1000]\ndogruluk_df = pd.DataFrame(columns = ['C_De\u011feri','Do\u011fruluk'])\n\ndogruluk_de\u011ferleri = pd.DataFrame(columns=['C De\u011feri', 'E\u011fitim Do\u011frulu\u011fu', 'Test Do\u011frulu\u011fu'])\n\nfor c in C_de\u011ferleri:\n    \n    # Apply logistic regression model to training data\n    lr = LogisticRegression(penalty = 'l2', C = c, random_state = 0)\n    lr.fit(X_e\u011fitim,y_e\u011fitim)\n    dogruluk_de\u011ferleri = dogruluk_de\u011ferleri.append({'C De\u011feri': c,\n                                                    'E\u011fitim Do\u011frulu\u011fu' : lr.score(X_e\u011fitim, y_e\u011fitim),\n                                                    'Test Do\u011frulu\u011fu': lr.score(X_test, y_test)\n                                                    }, ignore_index=True)\ndisplay(dogruluk_de\u011ferleri)    ","8f8d499d":"X_e\u011fitim, X_test, y_e\u011fitim, y_test =  train_test_split(X, y, test_size=0.20, random_state=111)\nbankingcrisis_modeli = LogisticRegression()\nbankingcrisis_modeli.fit(X_e\u011fitim, y_e\u011fitim)\n\ntahmin_e\u011fitim =bankingcrisis_modeli.predict(X_e\u011fitim)\ntahmin_test = bankingcrisis_modeli.predict(X_test)","61c7ded3":"tahmin_test_ihtimal = bankingcrisis_modeli.predict_proba(X_test)[:,1]","4e2225c9":"from sklearn.metrics import confusion_matrix\nhata_matrisi_e\u011fitim = confusion_matrix(y_e\u011fitim, tahmin_e\u011fitim)\nhata_matrisi_test = confusion_matrix(y_test, tahmin_test)\nprint(\"Hata Matrisi (E\u011fitim verileri)\", \"-\"*30, hata_matrisi_e\u011fitim, sep=\"\\n\")\nprint(\"Hata Matrisi (Test verileri)\", \"-\"*30, hata_matrisi_test, sep=\"\\n\")","0722942c":"TN = hata_matrisi_test[0][0]\nTP = hata_matrisi_test[1][1]\nFP = hata_matrisi_test[0][1]\nFN = hata_matrisi_test[1][0]\n\nprint(\"Do\u011fru negatif say\u0131s\u0131   :\", TN)\nprint(\"Do\u011fru pozitif say\u0131s\u0131   :\", TP)\nprint(\"Yanl\u0131\u015f pozitif say\u0131s\u0131  :\", FP)\nprint(\"Yanl\u0131\u015f negatif say\u0131s\u0131  :\", FN)","66aa28e8":"from sklearn.metrics import accuracy_score\n\nprint(\"Modelden al\u0131nan do\u011fruluk de\u011feri : \",  bankingcrisis_modeli.score(X_test, y_test))\nprint(\"Hesaplanan do\u011fruluk de\u011feri      : \",  (TN + TP)\/(FN + FP + TN + TP))\nprint(\"accuracy_score() de\u011feri         : \",  accuracy_score(y_test, tahmin_test))","d877516d":"from sklearn.metrics import precision_score\n\nprint(\"Hesaplanan do\u011fruluk de\u011feri      : \",  (TP)\/(FP + TP))\nprint(\"precision_score() de\u011feri        : \",  precision_score(y_test, tahmin_test))","56a46b00":"from sklearn.metrics import recall_score\n\nprint(\"Hesaplanan do\u011fruluk de\u011feri   : \",  (TP)\/(TP + FN))\nprint(\"recall_score() de\u011feri        : \",  recall_score(y_test, tahmin_test))","e054f80e":"print(\"Hesaplanan \u00f6zg\u00fcnl\u00fck de\u011feri   : \",  (TN)\/(TN + FP))","f0386f07":"from sklearn.metrics import f1_score\n\nhassasiyet_degeri = precision_score(y_test, tahmin_test)\nduyarl\u0131l\u0131k_de\u011feri = recall_score(y_test, tahmin_test)\n\n\nprint(\"Hesaplanan f1 skoru   : \",  2*((hassasiyet_degeri*duyarl\u0131l\u0131k_de\u011feri)\/(hassasiyet_degeri + duyarl\u0131l\u0131k_de\u011feri)))\nprint(\"f1_score() de\u011feri     : \",  f1_score(y_test, tahmin_test))","7506b9cd":"from sklearn.metrics import classification_report, precision_recall_fscore_support\n\nprint(classification_report(y_test,tahmin_test) )\n\nprint(\"f1_score() de\u011feri        : {:.2f}\".format(f1_score(y_test, tahmin_test)))\nprint(\"recall_score() de\u011feri    : {:.2f}\".format(recall_score(y_test, tahmin_test)))\nprint(\"precision_score() de\u011feri : {:.2f}\".format(precision_score(y_test, tahmin_test)))\nprint('\\n')\n\nmetrikler =  precision_recall_fscore_support(y_test, tahmin_test)\nprint(\"Hassasiyet :\" , metrikler[0]) \nprint(\"Duyarl\u0131l\u0131k :\" , metrikler[1]) \nprint(\"F1 Skoru   :\" , metrikler[2]) ","6e5ac82c":"from sklearn.metrics import roc_curve, roc_auc_score\n\nfpr, tpr, thresholds  = roc_curve(y_test, tahmin_test_ihtimal)\n\nimport matplotlib.pyplot as plt\n# Plot ROC curve\nplt.plot([0, 1], [0, 1], 'k--')\nplt.plot(fpr, tpr)\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curve')\nplt.show()","b2e94358":"print('AUC De\u011feri : ', roc_auc_score(y_test, tahmin_test_ihtimal))","5bf86252":"from sklearn.metrics import precision_recall_curve\nhassasiyet, duyarl\u0131l\u0131k, _ = precision_recall_curve(y_test, tahmin_test_ihtimal)\n\nplt.plot(duyarl\u0131l\u0131k, hassasiyet)\nplt.show()","f6dd3aef":"C_de\u011ferleri = [0.001,0.01,0.1,1,10,100, 1000]\ndogruluk_df = pd.DataFrame(columns = ['C_De\u011feri','Do\u011fruluk'])\n\ndogruluk_de\u011ferleri = pd.DataFrame(columns=['C De\u011feri', 'E\u011fitim Do\u011frulu\u011fu', 'Test Do\u011frulu\u011fu'])\n\nfor c in C_de\u011ferleri:\n    \n    # Apply logistic regression model to training data\n    lr = LogisticRegression(penalty = 'l2', C = c, random_state = 0)\n    lr.fit(X_e\u011fitim,y_e\u011fitim)\n    dogruluk_de\u011ferleri = dogruluk_de\u011ferleri.append({'C De\u011feri': c,\n                                                    'E\u011fitim Do\u011frulu\u011fu' : lr.score(X_e\u011fitim, y_e\u011fitim),\n                                                    'Test Do\u011frulu\u011fu': lr.score(X_test, y_test)\n                                                    }, ignore_index=True)\ndisplay(dogruluk_de\u011ferleri)  ","a34afa10":"for c in C_de\u011ferleri:\n\n    lr = LogisticRegression(penalty = 'l2', C = c, random_state = 0)\n    lr.fit(X_e\u011fitim,y_e\u011fitim)\n    tahmin_test_ihtimal = lr.predict_proba(X_test)[:,1]\n    fpr, tpr, thresholds  = roc_curve(y_test, tahmin_test_ihtimal)\n    i=0\n    \n    plt.figure(figsize=(5,3))\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.plot(fpr, tpr)\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title(c)\n    \nplt.show()","9e4eab68":"def model_olustur(X, y):\n    X_e\u011fitim, X_test, y_e\u011fitim, y_test =  train_test_split(X, y, test_size=0.20, random_state=111, stratify = y)\n    logreg_model = LogisticRegression()\n    logreg_model.fit(X_e\u011fitim, y_e\u011fitim)\n\n    tahmin_e\u011fitim = logreg_model.predict(X_e\u011fitim)\n    tahmin_test = logreg_model.predict(X_test)\n    hata_matrisi_e\u011fitim = confusion_matrix(y_e\u011fitim, tahmin_e\u011fitim)\n    hata_matrisi_test = confusion_matrix(y_test, tahmin_test)\n    print(\"Modelin do\u011fruluk de\u011feri : \",  logreg_model.score(X_test, y_test))\n    print(\"E\u011fitim veri k\u00fcmesi\")\n    print(classification_report(y_e\u011fitim,tahmin_e\u011fitim) )\n    print(\"Test veri k\u00fcmesi\")\n    print(classification_report(y_test,tahmin_test) )\n    return  None","30d33ff7":"model_olustur(X,y)","f5e6133b":"from sklearn.utils import resample","84bfbc78":"normal_al\u0131sveris = df[df.banking_crisis == 0]\nsahte_al\u0131sveris = df[df.banking_crisis == 1]\n\nsahte_al\u0131sveris_art\u0131r\u0131lm\u0131\u015f = resample(sahte_al\u0131sveris,\n                                     replace = True,\n                                     n_samples = len(normal_al\u0131sveris),\n                                     random_state = 111)\n\nart\u0131r\u0131lm\u0131s_df = pd.concat([normal_al\u0131sveris, sahte_al\u0131sveris_art\u0131r\u0131lm\u0131\u015f])\nart\u0131r\u0131lm\u0131s_df.banking_crisis.value_counts()","11e3eb44":"X = art\u0131r\u0131lm\u0131s_df[['year', 'systemic_crisis', 'domestic_debt_in_default', 'sovereign_external_debt_default',\n       'gdp_weighted_default',  'independence',\n       'currency_crises','exch_usd', 'inflation_crises','inflation_annual_cpi']]\ny = art\u0131r\u0131lm\u0131s_df['banking_crisis']\nmodel_olustur(X,y)\n","366e4f84":"Since there is not enough data according to the classification analysis we made in the prediction of the bank crisis, when we classified the data by multiplying the data, our test set and education set values were very close to each other.","b7cff9fe":"![image.png](attachment:image.png)","c9a31bd6":"#        Africa Economic, Banking and Systemic Crisis Data EDA Project\n","759b1c53":"X = df[['year', 'systemic_crisis', 'domestic_debt_in_default', 'sovereign_external_debt_default',\n         'currency_crises','exch_usd', 'inflation_crises']]\ny = df['banking_crisis']","8ddbe79a":"# Content\nThe dataset specifically focuses on the Banking, Debt, Financial, Inflation and Systemic Crises that occurred, from 1860 to 2014, in 13 African countries, including: Algeria, Angola, Central African Republic, Ivory Coast, Egypt, Kenya, Mauritius, Morocco, Nigeria, South Africa, Tunisia, Zambia and Zimbabwe.","cf697242":"# Classification Analysis","470a78e5":"The Dataset has no null value.","d44242ab":"# Q: Which factors are most associated with Banking Crises in Africa ?"}}