{"cell_type":{"26823fbb":"code","45a73371":"code","e1ec6793":"code","a3e427a1":"code","f20351eb":"code","2f23bc8a":"code","1e164eef":"code","6d2719f5":"code","1ca9de0d":"code","028e9bc5":"code","45a7f001":"code","95cbad8b":"code","d98ce5fe":"code","3e6903e6":"code","ebe57ed8":"code","757194ac":"code","221c2a0d":"code","8b9a1b5c":"code","3f5ae98e":"code","4b8c1831":"code","bf15bdb9":"code","f0993225":"code","03a73cb2":"code","37c69984":"code","91b1824f":"code","a8d847f5":"code","9d5e5467":"code","d48a0a86":"code","dfb648ee":"code","41fffdb5":"code","1f3f5e60":"code","2b84a618":"code","6db305e7":"markdown","ec689c92":"markdown","4002b351":"markdown","2fb74b1c":"markdown","ff5ca2b4":"markdown","ff1b8308":"markdown","da821a17":"markdown","70014db8":"markdown","85d2c186":"markdown","c4ea4054":"markdown","bdf37775":"markdown","7099daf9":"markdown","96fb401b":"markdown","fc3eca54":"markdown","f6efd700":"markdown","7eafeedc":"markdown","b30b45ab":"markdown","d9ac1c58":"markdown"},"source":{"26823fbb":"import pandas as pd\nimport numpy as np\ndf=pd.read_csv(\"..\/input\/red-wine-quality-cortez-et-al-2009\/winequality-red.csv\")\ndf.head()","45a73371":"df.describe()","e1ec6793":"df.info()","a3e427a1":"X=df.drop(\"quality\",axis=1)\ny=df[\"quality\"]","f20351eb":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 43)","2f23bc8a":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier \nfrom sklearn.ensemble import ExtraTreesClassifier \nfrom xgboost import XGBClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score\n","1e164eef":"rfc=RandomForestClassifier()\nrfc.fit(X_train,y_train)","6d2719f5":"rfc.score(X_test,y_test)","1ca9de0d":"xgb=XGBClassifier()\nxgb.fit(X_train,y_train)\nxgb.score(X_test,y_test)","028e9bc5":"import seaborn as sns\nsns.pairplot(df)","45a7f001":"import matplotlib.pyplot as plt\nplt.figure(figsize = (20,10))\nsns.heatmap(df.corr(), annot = True)","95cbad8b":"sns.countplot(df['quality'])","d98ce5fe":"df.var()","3e6903e6":"df[\"total sulfur dioxide\"]=np.log(df[\"total sulfur dioxide\"])\ndf[\"free sulfur dioxide\"]=np.log(df[\"free sulfur dioxide\"])","ebe57ed8":"df.var()","757194ac":"fig,ax = plt.subplots(ncols = 6, nrows = 2, figsize = (20,10))\nax = ax.flatten()\nindex = 0\nfor col in df.columns:\n    sns.boxplot(col,data = df,ax = ax[index])\n    index+=1\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","221c2a0d":"for i in df.columns:\n    print(i)\n    df[i].hist()\n    plt.show()","8b9a1b5c":"df.skew()","3f5ae98e":"df[\"residual sugar\"]=np.log(df[\"residual sugar\"])\ndf[\"chlorides\"]=np.log(df[\"chlorides\"])","4b8c1831":"df.skew()","bf15bdb9":"fig,ax = plt.subplots(ncols = 6, nrows = 2, figsize = (20,10))\nax = ax.flatten()\nindex = 0\nfor col in df.columns:\n    sns.boxplot(col,data = df,ax = ax[index])\n    index+=1\nplt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)","f0993225":"X1=df.drop(\"quality\",axis=1)\ny1=df[\"quality\"]","03a73cb2":"from imblearn.over_sampling import SMOTE\noversample = SMOTE(k_neighbors=4)\n# transform the dataset\nX1, y1 = oversample.fit_resample(X1, y1)\n","37c69984":"x_train, x_test, Y_train, Y_test = train_test_split(X1, y1, test_size=0.25, random_state=42)","91b1824f":"rfc2=RandomForestClassifier()\nrfc2.fit(x_train,Y_train)","a8d847f5":"rfc2.score(x_test,Y_test)","9d5e5467":"from sklearn.ensemble import ExtraTreesClassifier\nmodel1 = ExtraTreesClassifier() \nmodel1.fit(x_train,Y_train)\nmodel1.score(x_test,Y_test)","d48a0a86":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nx_train = sc.fit_transform(x_train)\nx_test = sc.transform(x_test)\n","dfb648ee":"rfc11=ExtraTreesClassifier()\nrfc11.fit(x_train,Y_train)\nrfc11.score(x_test,Y_test)","41fffdb5":"from sklearn.preprocessing import StandardScaler\nsc = StandardScaler()\nX1 = sc.fit_transform(X1)\nX1= sc.transform(X1)\n","1f3f5e60":"from sklearn.model_selection import cross_val_score\nscores = cross_val_score(rfc11, X1, y1, cv=5)","2b84a618":"print(scores.mean())","6db305e7":"## rechecking with cross validation validation","ec689c92":"## Removing outliers","4002b351":"## Standardizing and predicting","2fb74b1c":"##### Find no correlations between the features so no feature removing","ff5ca2b4":"## we can observe a lot of outliers here and have to be removed ","ff1b8308":"## variance corrected","da821a17":"## smot method for class imbalance","70014db8":"## Prediction without preprocessing","85d2c186":"## we can observe class imbalance in quality and skewness in some features","c4ea4054":"## class imbalance occured","bdf37775":"## Got an accuracy of 72% with out any preprocessing","7099daf9":"## acheived an accuracy of 86 percent with out removing outliers","96fb401b":"## train_test_split","fc3eca54":"# Acheived 86 percent accuracy on test set hurray","f6efd700":"## Normalizing data","7eafeedc":"## we can check the variance in total sulfur dioxide was more and have to apply log transformation\n","b30b45ab":"## Fitting the model","d9ac1c58":"## With preprocessing and exploratory data analysis"}}