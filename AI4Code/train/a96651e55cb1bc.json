{"cell_type":{"7459b900":"code","b3bc194b":"code","abeccdf4":"code","993c229f":"code","adc647f9":"code","5c61850f":"code","ad7dfbe1":"code","adacbe0f":"code","ca115810":"code","99af601e":"code","357ac541":"code","4e50bad1":"code","a5b412f4":"code","c4cddede":"code","ce052d16":"code","1ac271ca":"code","35d0cb2d":"code","f8620488":"code","90f1613c":"code","d1453915":"code","4f02772b":"code","da2b52bd":"code","3eb46abf":"code","e5f4ef07":"markdown","1a468f16":"markdown","38a10c28":"markdown","046aa412":"markdown","ca577812":"markdown","c6bb3c19":"markdown","bfd270e7":"markdown","a1a6e44d":"markdown","6e88d750":"markdown","ccedd5b2":"markdown","ff0f75dc":"markdown","1a166124":"markdown","a5b5b1b9":"markdown","6bb5abac":"markdown"},"source":{"7459b900":"import numpy as np \nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport folium\nfrom folium import Choropleth, Circle, Marker\nfrom folium.plugins import HeatMap, MarkerCluster\nimport matplotlib.pyplot as plt\nimport squarify    # pip install squarify (algorithm for treemap)\nimport pandas as pd\nimport math","b3bc194b":"pd.set_option(\"display.max_rows\", 10)","abeccdf4":"raw_data = pd.read_csv(r'..\/input\/fast-food-restaurants-in-america\/FastFoodRestaurants.csv')\nraw_data","993c229f":"raw_data.describe()","adc647f9":"raw_data.info()","5c61850f":"data1=raw_data.copy()","ad7dfbe1":"data1['name'] = data1['name'].str.replace(\"\u2019\",\"\")\ndata1['name'] = data1['name'].str.replace(\"'\",\"\")\ndata1['name'] = data1['name'].str.replace(\" \",\"\")\ndata1['name'] = data1['name'].str.replace(\".\",\"\")\ndata1['name'] = data1['name'].str.replace(\"-\",\"\")\ndata1['name'] = data1['name'].str.replace(\"&\",\"AND\")\ndata1['name'] = data1['name'].str.upper()","adacbe0f":"data2 = data1.groupby(['name', 'city'])['name'].count()","ca115810":"for_tree = data1['name'].value_counts(ascending=False).head(20).reset_index()\nfor_tree = for_tree.rename(columns={'index': 'name', 'name': 'count'})","99af601e":"sns.set()\ndata1['name'].value_counts(ascending=False).head(20).plot(kind='barh', figsize=(12, 8))\nplt.xlabel(\"Restaurants\", labelpad=15)\nplt.ylabel(\"Total Number of Restaurants by Names\", labelpad=15)\nplt.title(\"Total Number of Restaurants\", y=1.02)","357ac541":"plt.figure(figsize=(20, 10))\nsquarify.plot(sizes=for_tree['count'], label=for_tree['name'], alpha=.5,bar_kwargs={'alpha':1}, text_kwargs={'fontsize':10})\nplt.axis('off')\nplt.show()","4e50bad1":"data1['city'].value_counts().head(20).plot(kind='barh', figsize=(10, 8))\nplt.xlabel(\"Cities\", labelpad=15)\nplt.ylabel(\"Total Number of Restaurants\", labelpad=14)\nplt.title(\"Total Number of Restaurants by Cities\", y=1.02)","a5b412f4":"m_2 = folium.Map(location=[39.103119,-84.512016], tiles='cartodbpositron', zoom_start=11)\n\nraw_data1 = raw_data[raw_data['city'] == 'Cincinnati']\n# Add points to the map\nfor idx, row in raw_data1.iterrows():\n    Marker([row['latitude'], row['longitude']]).add_to(m_2)\n\n# Display the map\nm_2","c4cddede":"data1['province'].value_counts().head(20).plot(kind='barh', figsize=(10, 8))\nplt.xlabel(\"Cities\", labelpad=15)\nplt.ylabel(\"Total Number of Restaurants\", labelpad=14)\nplt.title(\"Total Number of Restaurants by Cities\", y=1.02)","ce052d16":"data2 = data1.groupby(['province', 'name'])['name'].count()","1ac271ca":"mac_data = data1[data1.name == 'MCDONALDS']\nbk_data = data1[data1.name == 'BURGERKING']\ntaco_data = data1[data1.name == 'TACOBELL']\nwendys_data = data1[data1.name == 'WENDYS']\narbys_data = data1[data1.name == 'ARBYS']\nrest_data = data1[(data1.name != 'MCDONALDS') & (data1.name != 'BURGERKING') & (data1.name != 'TACOBELL') & (data1.name != 'WENDYS') & (data1.name != 'ARBYS')]","35d0cb2d":"mcd = folium.Map(location=[40,-94], tiles='cartodbpositron', zoom_start=4)\n\n# Add points to the map\nmc = MarkerCluster()\nfor idx, row in data1.iterrows():\n    if not math.isnan(row['longitude']) and not math.isnan(row['latitude']):\n        mc.add_child(Marker([row['latitude'], row['longitude']]))\nmcd.add_child(mc)\n\nmcd","f8620488":"per_state = data1.groupby(['province', 'name']).count().max(level=0)\nper_state = per_state.rename(columns={'index': 'name', 'name': 'count'})\nper_state = data1.groupby(['province', 'name'])['name'].count().reset_index(name='count')\nper_state_all = per_state.groupby(['province']).count().reset_index()\nper_state1 = per_state.groupby(['province'])['count'].max().reset_index()\nper_state2 = pd.merge(per_state1, per_state, on=['province', 'count'])","90f1613c":"url = (\"https:\/\/raw.githubusercontent.com\/python-visualization\/folium\/master\/examples\/data\")\nstate_geo = f\"{url}\/us-states.json\"\n\n# We read the file and print it.\ngeoJSON_df = gpd.read_file(state_geo)\ngeoJSON_df = geoJSON_df.rename(columns={'id': 'province'})\ngeoJSON_df = geoJSON_df.set_index(\"province\")\ngeoJSON_df","d1453915":"per_state3 = pd.merge(per_state2, geoJSON_df, on=['province'])\nper_state3.drop_duplicates(subset ='province',\n                     keep = 'last', inplace = True)\nper_state4 = per_state3.set_index('province')\nper_state4 = per_state4.drop(['name_x', 'name_y', 'count'], axis=1)","4f02772b":"# Create a base map\nm = folium.Map(location=[40,-94], tiles='cartodbpositron', zoom_start=4)\n\n# Add a choropleth map to the base map\nfolium.Choropleth(\n    geo_data=geoJSON_df.__geo_interface__, \n    data=per_state_all,\n    columns=['province', 'count'],\n    key_on='feature.id',\n).add_to(m)\n\n# Display the map\nm","da2b52bd":"per_state_new = per_state3.groupby('province')['name_x'].apply(lambda x: x.value_counts().head(1)).reset_index()\nper_state_new1 = pd.merge(geoJSON_df, per_state_new, on=['province'])\nper_state_new1 = per_state_new1.drop('name_x', axis=1)\n\nper_state4 = per_state.groupby(['province', 'name'])['count'].sum().reset_index()\nper_state4 = per_state4.rename({'name': 'level_1'}, axis=1)\n\nper_state_new1 = pd.merge(per_state_new1, per_state4, on=['province', 'level_1'])\nper_state_new1.head(15)","3eb46abf":"import plotly.express as px\n\nfig = px.choropleth(per_state_new1, geojson=geoJSON_df.__geo_interface__, color=\"level_1\",\n                    locations=\"province\")\n\nfig.update_geos(fitbounds=\"locations\", visible=False)\n\nfig.update_layout(margin=dict(l=0, r=0, t=0, b=0))\n\nfig.show()","e5f4ef07":"**According to the bar chart of the total number of restaurants by cities, Cincinnati has the most number of fast food restaurants**","1a468f16":"![image.png](attachment:2f9dc98f-d70c-4985-9c9d-30f30ffb3e3e.png)","38a10c28":"**With the imported State Boundaries and given dataset the count of fast food places can be seen per State:**","046aa412":"# **Fast Food Restaurants in America**","ca577812":"**After cleaning the dataset let us depict some charts:**\n* According to the *below bar* chart and *treemap*,McDonanlds has significant shares of a market\n* on a second place there is a BurgerKing, which is half as much as McDonalds","c6bb3c19":"**To analyze the data names of the same restaurants in different locations shall be identical to each other. Therefore some symbols will be replaced below:**","bfd270e7":"**At last, in the map below, fast food leaders of each state is illustrated**","a1a6e44d":"**Table has no null values except for websites column, which will not be used**","6e88d750":"**In this dataset, you will find over 10,000 different fast-food restaurants located all over the United States of America, which is represented below:**","ccedd5b2":"**According to the bar chart of the total number of restaurants by province, CA**** has the most number of fast food restaurants**","ff0f75dc":"**According to the 2 maps above, McDonalds does not dominate in regions where fast food restaurants are not widespread**","1a166124":"**Lets import the geoJSON file with the US State boundaries**","a5b5b1b9":"**All the Fast Food Reastaurants in US can be seen in a below interactive map:**","6bb5abac":"**Locations of the restaurants in Cincinnati can be seen below in a interactive map:**"}}