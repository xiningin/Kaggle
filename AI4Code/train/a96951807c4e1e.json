{"cell_type":{"2f8a9d1c":"code","29bc9790":"code","e14822db":"code","7f515e30":"code","9e13a4b5":"code","089fd14c":"code","29b6526f":"code","3576389f":"code","ed193e01":"code","2568dcd4":"code","e8a47c29":"code","a685b417":"code","573e0773":"code","280649a6":"code","d98090ae":"code","4243dafa":"code","6bb5593c":"code","fd6116af":"code","d69f7b36":"code","3f72ec41":"code","243711a0":"markdown","4f674791":"markdown","6be4e284":"markdown","c86016e4":"markdown","8884fbee":"markdown","481e4e1d":"markdown"},"source":{"2f8a9d1c":"# standard\nimport numpy as np\nimport pandas as pd\nimport time\n\n# plots\nimport matplotlib.pyplot as plt\nimport plotly.express as px\nimport seaborn as sns\n\n# missing values visualization\nimport missingno as msno\n\n# statistics\nfrom statsmodels.distributions.empirical_distribution import ECDF\n\n# maps\nimport folium","29bc9790":"# import data and preview\ndf_orig = pd.read_csv('..\/input\/landings-of-meteorite\/LANDINGS OF METEORITE - Meteorite-Landings.csv')\n# data overview\ndf_orig.info()","e14822db":"# remove redundancies\ndf = df_orig.copy()\ndf = df.drop(['nametype','GeoLocation'], axis=1)\ndf.head()","7f515e30":"# show structure of missings\nmsno.matrix(df)\nplt.show()","9e13a4b5":"# extract year (date and time are just dummies)\ndf.year = df.year.astype(str).apply(lambda x : x[6:10])\ndf.year = pd.to_numeric(df.year)\n# we have some missing, let's impute\ndf.year[df.year.isna()] = -1\ndf.year = df.year.astype(int)\ndf.head()","089fd14c":"# let's check for strange values\ndf[(df.year<1000) | (df.year>2021)]","29b6526f":"# check in original data if the two years below 1000 are plausible\nprint(df_orig.iloc[678])\nprint(df_orig.iloc[703])","3576389f":"# basic summary stats\ndf.describe(include='all')","ed193e01":"# distribution of class\ndf.recclass.value_counts()","2568dcd4":"# plot most frequent classes\ndf.recclass.value_counts()[0:20].plot(kind='bar', figsize=(8,4))\nplt.title('Top 20 Classes')\nplt.grid()\nplt.show()","e8a47c29":"# distribution of \"fall\"\ndf.fall.value_counts().plot(kind='bar')\nplt.title('Fell or Found')\nplt.grid()\nplt.show()","a685b417":"# plot mass distribution\ndf['mass (g)'].plot(kind='hist', bins=100, figsize=(8,4))\nplt.title('mass[g]')\nplt.grid()\nplt.show()","573e0773":"# logarithmic plot of mass\nnp.log10(df['mass (g)']).plot(kind='hist', bins=100, figsize=(8,4))\nplt.title('log10(mass[g])')\nplt.grid()\nplt.show()","280649a6":"# empirical CDF of log10(mass)\necdf = ECDF(np.log10(df['mass (g)']))\nplt.plot(ecdf.x, ecdf.y)\nplt.title('Empirical CDF')\nplt.xlabel('log10(mass[g])')\nplt.ylabel('Empirical CDF')\nplt.grid()\nplt.show()","d98090ae":"# top 10 meteorites by mass\nn_top = 10\ndf_top = df.sort_values(by='mass (g)', ascending=False)[0:n_top].copy()\ndf_top","4243dafa":"# plot year distribution; exclude missings (encoded as -1)\ndf.year[df.year>-1].plot(kind='hist', bins=100)\nplt.title('Year - Missings excluded')\nplt.grid()\nplt.show()","6bb5593c":"# plot year distribution; show only years from 1800\ndf.year[df.year>=1800].plot(kind='hist', bins=100)\nplt.title('Year >= 1800')\nplt.grid()\nplt.show()","fd6116af":"# for the following map remove rows having missing coordinates\ndf_complete = df.dropna(subset=['reclat','reclong'])\n\n# remove also rows with (0,0)-coordinates\ndf_complete = df_complete[df_complete.reclat**2 + df_complete.reclong**2 > 0]","d69f7b36":"# basic plot of locations\nplt.figure(figsize=(14,8))\nplt.scatter(x=df_complete.reclong,\n            y=df_complete.reclat,\n            s=np.sqrt(df_complete['mass (g)']),\n            color='blue',\n            alpha=0.1)\nplt.xlabel('Longitude')\nplt.ylabel('Latitude')\nplt.grid()\nplt.title('Landings of Meteorites')\nplt.show()","3f72ec41":"# interactive map\nzoom_factor = 2 # inital map size\n\nmy_map_1 = folium.Map(location=[0,0], zoom_start=zoom_factor)\n\nfor i in range(0,df_complete.shape[0]):\n    folium.CircleMarker(\n       location=[df_complete.iloc[i]['reclat'], df_complete.iloc[i]['reclong']],\n       radius=0.01*np.sqrt(df_complete.iloc[i]['mass (g)']),\n       popup='Name: ' + df_complete.iloc[i]['name'] + ' - Year:' + str(df_complete.iloc[i]['year']),\n       color='blue',\n       weigth=1, # stroke width in pixel\n       opacity=0.25, # stroke opacity\n       fill=True,\n       fill_opacity=0.25\n    ).add_to(my_map_1)\n\nmy_map_1 # display","243711a0":"<a id='3'><\/a>\n# Geospatial Visualization","4f674791":"#### Probably we do not really have much more impacts in the more recent years but it seems to be just an effect of much more research done...  ","6be4e284":"<a id='2'><\/a>\n# Basic Explorations","c86016e4":"## Table of Contents\n* [Data Preparation](#1)\n* [Basic Explorations](#2)\n* [Geospatial Visualization](#3)","8884fbee":"<a id='1'><\/a>\n# Data Preparation","481e4e1d":"#### Let's try a log plot:"}}