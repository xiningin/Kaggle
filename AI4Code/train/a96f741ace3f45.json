{"cell_type":{"dbd3be67":"code","e25f7c4a":"code","8eedf165":"code","f9061190":"code","b21517c1":"code","732a4e0b":"code","4c551f9f":"code","c73a752f":"code","39664d37":"code","67167c50":"code","fae32607":"code","165cb626":"code","77caae05":"code","f9dae8a8":"markdown","e4c1e179":"markdown","ded509d1":"markdown","0b637f25":"markdown","55d123ad":"markdown","1d70d356":"markdown","e894959e":"markdown"},"source":{"dbd3be67":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","e25f7c4a":"# Import package\n\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\n\nwarnings.filterwarnings('ignore')","8eedf165":"# read the data\ndf = pd.read_csv('..\/input\/co2-emission-by-vehicles\/CO2 Emissions_Canada.csv')\ndf.head()","f9061190":"df.describe()","b21517c1":"df.shape","732a4e0b":"df.isnull().sum()","4c551f9f":"# lets test the influence of different variables on the emission of CO2\nsns.set()\nsns.pairplot(df, y_vars='CO2 Emissions(g\/km)', size=3)\nplt.show()","c73a752f":"''' Lets assign the feature variable, `Engine Size` to the variable `X` and\nthe response variable, `CO2 Emissions`, to the variable `y`.'''\n\nX = df['Engine Size(L)']\ny = df['CO2 Emissions(g\/km)']","39664d37":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=100)","67167c50":"from sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nX_train = np.array(X_train).reshape(-1,1)\nX_test = np.array(X_test).reshape(-1,1)\nlr.fit(X_train, y_train)","fae32607":"# lets plot fit line over the data\nplt.scatter(X_train, y_train, color='blue')\nplt.plot(X_train, lr.predict(X_train) ,'-r')\nplt.xlabel(\"Engine Size(L)\")\nplt.ylabel(\"CO2 Emissions(g\/km)']\")\n","165cb626":"from sklearn.metrics import r2_score\n\ny_test_pred = lr.predict(X_test)\n\nprint('Mean absolute error : %.2f' % np.mean(np.absolute(y_test_pred - y_test)))\nprint('Residual sum of square: %.2f' % np.mean(np.square(y_test_pred - y_test)))\nprint('R2-score: %.2f' % r2_score(y_test_pred, y_test))","77caae05":"print('coefficient: ', lr.coef_)\nprint('intercept: ', lr.intercept_)","f9dae8a8":"Here we can see that `CO2 Emissions(g\/km)` is lineraly related with `Engine Size(L)`, `Fuel Consumption City (L\/100 km)`, `Fuel Consumption Hwy (L\/100 km)`, `Fuel Consumption Comb (L\/100 km)`","e4c1e179":"The linear equation we get is:<\/br>\nCO2 Emissions(g\/km) = 133.81 + 36.98 * Engine Size(L)","ded509d1":"### Train-Test split","0b637f25":"### Evaluation","55d123ad":"## Understanding the data","1d70d356":"### Modeling","e894959e":"## Simple Linear Regression\n\n`Regression` is a process of predicting continuous value. In simple linear regression there is a linear relationship between the independent (X) and dependent (y) variable.\n\nEquation of simple linear regression:\n   y = c + mX <\/br>\n    where, c is intercept and m is slope i.e model coefficient\n    \nHere, independent variable is Engine Size and dependent variable is CO2 Emissions."}}