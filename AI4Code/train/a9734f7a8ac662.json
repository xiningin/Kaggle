{"cell_type":{"f0e650a9":"code","3f7d1f29":"code","05ce6f1c":"code","aceb1cee":"code","f3a191a1":"code","248b8f15":"code","1c0add91":"code","78ab0603":"code","96fd62c9":"code","bfbc1582":"code","9bb435cb":"code","0c0beac9":"code","eb6526d4":"code","b654bb04":"code","fc194d6b":"code","cfa65eca":"code","5146c185":"code","84365c46":"code","c7700090":"code","6b618882":"code","e1f9f967":"code","f55955be":"code","23b3fa84":"code","d57dbed1":"code","dc623b66":"markdown","38b1a99b":"markdown","82367230":"markdown","c3ae2e0e":"markdown","c1b5d349":"markdown","f94da33d":"markdown","37104c59":"markdown","2c34547f":"markdown","d45c1a23":"markdown","cd91b431":"markdown","7338ef7f":"markdown","1ef09aaf":"markdown","f0fb32c3":"markdown","b661c47e":"markdown","133ceb6c":"markdown","ff6a34da":"markdown","4a597781":"markdown"},"source":{"f0e650a9":"import numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nimport seaborn as sns\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport plotly.offline as py\n\nfrom urllib.request import urlopen\nimport json\n\nfrom sklearn.model_selection import KFold, GroupKFold, StratifiedKFold\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\nimport lightgbm as lgb\n\nsns.set_style(\"white\")\npd.set_option('display.max_columns', 500)\npy.init_notebook_mode(connected=True)","3f7d1f29":"elections = pd.read_csv('..\/input\/2012-2016-presidential-elections\/US_County_Level_Presidential_Results_12-16.csv')\ndemographic = pd.read_csv('..\/input\/us-census-demographic-data\/acs2017_county_data.csv')","05ce6f1c":"elections['combined_fips'] = elections['combined_fips'].astype(str)\nelections.loc[elections['combined_fips'].apply(len) < 5, 'combined_fips'] = '0' + elections.loc[elections['combined_fips'].apply(len) < 5, 'combined_fips']\n\ndemographic['combined_fips'] = demographic['CountyId'].astype(str)\ndemographic.loc[demographic['combined_fips'].apply(len) < 5, 'combined_fips'] = '0' + demographic.loc[demographic['combined_fips'].apply(len) < 5, 'combined_fips']","aceb1cee":"elections = pd.merge(elections, demographic, on='combined_fips')\n\nelections.head()","f3a191a1":"# some data is missing for 2012 elections (28 counties to be precise)\n# elections.isnull().sum()","248b8f15":"with urlopen('https:\/\/raw.githubusercontent.com\/plotly\/datasets\/master\/geojson-counties-fips.json') as response:\n    counties = json.load(response)","1c0add91":"fig = go.Figure()\n\nfig.add_trace(go.Choropleth(\n                    geojson = counties,\n                    z = elections['per_dem_2012'],\n                    locations = elections['combined_fips'],\n                    text = elections['county_name'],\n                    colorscale = 'rdbu',\n                    colorbar_ticksuffix = '%',\n                    colorbar_title = '% Votes for Democrats',\n                ))\n\nfig.add_trace(go.Choropleth(\n                    geojson = counties,\n                    z = elections['per_dem_2016'],\n                    locations = elections['combined_fips'],\n                    text = elections['county_name'],\n                    colorscale = 'rdbu',\n                    colorbar_ticksuffix = '%',\n                    colorbar_title = '% Votes for Democrats',\n                ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type = \"buttons\",\n            direction = \"left\",\n            buttons=list([\n                dict(label=\"2012\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False]},\n                           {\"title\": \"Votes in 2012\"}]),\n                dict(label=\"2016\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, True]},\n                           {\"title\": \"Votes in 2016\"}])]),\n            pad={\"r\": 10, \"t\": 10},\n            showactive=True,\n            x=0.11,\n            xanchor=\"left\",\n            y=1.1, \n            yanchor=\"top\"\n        ),\n    ],\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n    geo2 = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n)","78ab0603":"elect_clean = elections.dropna().copy()\nelect_clean['evolution%'] = (elect_clean['per_dem_2016'] - elect_clean['per_dem_2012'])\/elect_clean['per_dem_2012']","96fd62c9":"fig = go.Figure(data=go.Choropleth(\n                    geojson = counties,\n                    z = elect_clean['evolution%'],\n                    locations = elect_clean['combined_fips'],\n                    text = elect_clean['county_name'],\n#                     colorscale = 'rdbu',\n                    colorscale= [[0, 'red'],   \n                           [0.3473, 'white'],  #0 - min(elect_clean['evolution%']) \/ (max(elect_clean['evolution%']) - min(elect_clean['evolution%']))\n                           [1, 'blue']],\n                    colorbar_ticksuffix = '%',\n                    colorbar_title = '%',\n                ))\n\nfig.update_layout(\n    title_text='Evolution between 2012 and 2016 elections',\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n)\n\nfig.show()","bfbc1582":"elections_2016 = elections.drop(['total_votes_2012', 'votes_dem_2012', 'votes_gop_2012', 'county_fips',\n       'state_fips', 'per_dem_2012', 'per_gop_2012', 'diff_2012',\n       'per_point_diff_2012', 'Unnamed: 0',  'votes_dem_2016', 'votes_gop_2016',\n       'total_votes_2016', 'per_gop_2016', 'diff_2016', 'per_point_diff_2016', 'FIPS'], axis = 1)\n\nelections_2016['Men%'] = elections_2016['Men']\/elections_2016['TotalPop'] * 100\nelections_2016['Women%'] = elections_2016['Women']\/elections_2016['TotalPop'] * 100\nelections_2016['VotingAge%'] = elections_2016['VotingAgeCitizen']\/elections_2016['TotalPop'] * 100\n\nelections_2016.drop(['Men', 'Women', 'VotingAgeCitizen', 'IncomeErr', 'IncomePerCapErr'], axis = 1, inplace = True)\n\nelections_2016.head()","9bb435cb":"pred_columns = ['per_dem_2016', 'TotalPop', 'Hispanic', 'White', 'Black',\n       'Native', 'Asian', 'Pacific', 'IncomePerCap', 'Poverty',\n       'ChildPoverty', 'Professional', 'Service', 'Office', 'Construction',\n       'Production', 'Drive', 'Carpool', 'Transit', 'Walk', 'OtherTransp',\n       'WorkAtHome', 'MeanCommute', 'PrivateWork', 'PublicWork',\n       'SelfEmployed', 'FamilyWork', 'Unemployment', 'Men%', \n       'VotingAge%']\n# Drop Employed because correlation coefficient of 0.998 with TotalPop\n# Will need to test States as categorical variable\n# Maybe leverage IncomePerCapErr","0c0beac9":"corr_mat = elections_2016[pred_columns].corr()\ncorr_mat['per_dem_2016'].sort_values(ascending = False)","eb6526d4":"fig, (ax1,ax2) = plt.subplots(1,2, figsize=(16,5))\n\nsns.scatterplot(data = elections_2016, x = 'TotalPop', y = 'per_dem_2016', ax = ax1)\nsns.scatterplot(data = elections_2016[elections_2016['TotalPop'] <= elections_2016['TotalPop'].quantile(0.9)],\n                x = 'TotalPop', y = 'per_dem_2016', ax = ax2)\n\nax1.title.set_text('Democrats vote against population per county')\nax2.title.set_text('Zoom on counties below the 90th quantile for population')","b654bb04":"fig, (axes1, axes2) = plt.subplots(2,2, figsize=(16,10))\nsns.scatterplot(data = elections_2016, x = 'White', y = 'per_dem_2016', ax = axes1[0])\nsns.scatterplot(data = elections_2016, x = 'IncomePerCap', y = 'per_dem_2016', ax = axes1[1])\nsns.scatterplot(data = elections_2016, x = 'Hispanic', y = 'per_dem_2016', ax = axes2[0])\nsns.scatterplot(data = elections_2016, x = 'Men%', y = 'per_dem_2016', ax = axes2[1])\n\naxes1[0].title.set_text('Democrats vote against White% per county')\naxes1[1].title.set_text('Democrats vote against Income per person')\naxes2[0].title.set_text('Democrats vote against Hispanic% per county')\naxes2[1].title.set_text('Democrats vote against Men% per county')","fc194d6b":"#Correlation matrix\nfig = plt.figure(figsize = (16,12))\nmask = np.tril(corr_mat)\n\ng = sns.heatmap(corr_mat, mask = mask , annot = True, fmt = '0.1g')\ng.add_patch(Rectangle((0, 0), 32, 1, fill=False, edgecolor='white', lw=3))\n\nplt.show()","cfa65eca":"#Fit a simple model\nX, y = elections_2016[pred_columns].drop(['per_dem_2016'], axis = 1), elections_2016['per_dem_2016']\nlgb_model = lgb.LGBMRegressor(num_iterations = 300)\nfeat_imp = np.zeros(X.shape[1])\npreds = pd.DataFrame(y)\npreds['prediction'] = 0\n\nkf = KFold(n_splits=5, shuffle = True, random_state = 42)\nkf.get_n_splits(X)\n\nfor train_index, test_index in kf.split(X):\n    X_train, X_test = X.iloc[train_index], X.iloc[test_index]\n    y_train, y_test = y.iloc[train_index], y.iloc[test_index]\n    lgb_model.fit(X_train, y_train, eval_set=[(X_test, y_test)],\n            early_stopping_rounds=50, verbose = 10)\n    predictions = lgb_model.predict(X_test)\n    preds.loc[test_index, 'prediction'] = predictions\n    feat_imp += lgb_model.feature_importances_ \/ 5","5146c185":"print('MSE of the 5-Fold LGB Model : {}'.format(mean_squared_error(preds['per_dem_2016'], preds['prediction'])))","84365c46":"preds['squared_error'] = (preds['per_dem_2016'] - preds['prediction']) ** 2\nelections_2016['pred_dem_2016'] = preds['prediction']","c7700090":"fig = go.Figure()\n\nfig.add_trace(go.Choropleth(\n                    geojson = counties,\n                    z = elections_2016['per_dem_2016'],\n                    locations = elections_2016['combined_fips'],\n                    text = elections_2016['county_name'],\n                    colorscale = 'rdbu',\n                    colorbar_ticksuffix = '%',\n                    colorbar_title = '% Votes for Democrats',\n                ))\nfig.add_trace(go.Choropleth(\n                    geojson = counties,\n                    z = preds['squared_error'],\n                    locations = elections_2016['combined_fips'],\n                    text = elections_2016['county_name']+'<br>Votes : '+elections_2016['per_dem_2016'].apply(lambda x: str(x)[:5])+'<br>Predictions :'+elections_2016['pred_dem_2016'].apply(lambda x: str(x)[:5]),\n                    colorbar_title = 'Squared Error',\n                ))\n\nfig.add_trace(go.Choropleth(\n                    geojson = counties,\n                    z = preds['prediction'],\n                    locations = elections_2016['combined_fips'],\n                                        colorscale = 'rdbu',\n                    colorbar_ticksuffix = '%',\n                    colorbar_title = '% Votes for Democrats',\n                    zmax = elections_2016['per_dem_2016'].max()\n                ))\n\nfig.update_layout(\n    updatemenus=[\n        dict(\n            type = \"buttons\",\n            direction = \"left\",\n            buttons=list([\n                dict(label=\"predictions\",\n                     method=\"update\",\n                     args=[{\"visible\": [False, False, True]},\n                           {\"title\": \"Votes in 2016 - Predictions\"}]),\n                dict(label=\"actual\",\n                     method=\"update\",\n                     args=[{\"visible\": [True, False, False]},\n                           {\"title\": \"Votes in 2016 - Actual Values\"}]),\n                dict(label=\"MSE\",\n                         method=\"update\",\n                         args=[{\"visible\": [False, True, False]},\n                               {\"title\": \"Votes in 2016 - MSE\"}])]),\n            pad={\"r\": 10, \"t\": 10},\n#             showactive=True,\n            x=0.11,\n            xanchor=\"left\",\n            y=1.1, \n            yanchor=\"top\"\n        ),\n    ],\n    title_text='Predictions for 2016 Elections',\n    geo = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n    geo2 = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n    geo3 = dict(\n        scope='usa',\n        projection=go.layout.geo.Projection(type = 'albers usa'),\n        lakecolor='rgb(255, 255, 255)'),\n)","6b618882":"feature_importance = pd.DataFrame({\"Value\": feat_imp, \"Feature\": X.columns}) \\\n                    .sort_values(by=\"Value\", ascending=False)\n\n# Change size of the plot, so we can see all features\nfig_dims = (10, 14)\nfig, ax = plt.subplots(figsize=fig_dims)\n\nsns.barplot(x=\"Value\", y=\"Feature\", ax=ax, data=feature_importance)\nplt.title('LightGBM Features')\nplt.tight_layout()\nplt.show()","e1f9f967":"elections_2016['pred_votes_dem'] = (elections_2016['TotalPop'] * elections_2016['VotingAge%']\/100 * elections_2016['pred_dem_2016']).astype(int)\nelections_2016['pred_votes_rep'] = (elections_2016['TotalPop'] * elections_2016['VotingAge%']\/100 * (1 - elections_2016['pred_dem_2016'])).astype(int)\nelections_2016['actual_votes_dem'] = (elections_2016['TotalPop'] * elections_2016['VotingAge%']\/100 * elections_2016['per_dem_2016']).astype(int)\nelections_2016['actual_votes_rep'] = (elections_2016['TotalPop'] * elections_2016['VotingAge%']\/100 * (1 - elections_2016['per_dem_2016'])).astype(int)","f55955be":"states_2016 = elections_2016[['pred_votes_dem', 'pred_votes_rep', 'actual_votes_dem', 'actual_votes_rep', 'state_abbr']].groupby('state_abbr').sum()\nstates_2016['pred_dem%'] = states_2016['pred_votes_dem'] \/ (states_2016['pred_votes_dem'] + states_2016['pred_votes_rep']) * 100\nstates_2016['actual_dem%'] = states_2016['actual_votes_dem'] \/ (states_2016['actual_votes_dem'] + states_2016['actual_votes_rep']) * 100\nstates_2016['state_abbr'] = states_2016.index\nstates_2016.head()","23b3fa84":"fig = go.Figure(data=go.Choropleth(\n    locations=states_2016['state_abbr'], \n    z = states_2016['pred_dem%'],\n    locationmode = 'USA-states',\n    colorscale= [[0, \"red\"],   \n                [0.4, 'white'],\n                [1, \"blue\"]],\n    colorbar_ticksuffix = '%',\n    colorbar_title = '% Votes for Democrats',\n))\n\nfig.update_layout(\n    title_text = 'Predictions for 2016 Elections',\n    geo_scope='usa'\n)\n\nfig.show()","d57dbed1":"fig = go.Figure(data=go.Choropleth(\n    locations=states_2016['state_abbr'], \n    z = states_2016['actual_dem%'],\n    locationmode = 'USA-states',\n    colorscale= [[0, \"rgb(178, 24, 43)\"],   \n                [0.4, 'white'],\n                [1, \"rgb(0,102,172)\"]],\n    colorbar_ticksuffix = '%',\n    colorbar_title = '% Votes for Democrats',\n))\n\nfig.update_layout(\n    title_text = '2016 Presidential results',\n    geo_scope='usa'\n)\n\nfig.show()","dc623b66":"# II - Visualization of votes","38b1a99b":"### Comments\n- As expected, we observe a clear geographical division between costs and the rest of America, particularly for 2016 results, interior lands being more Republicans and costs voting more for Democrats.\n- We can see the changes in votes from 2012 and 2016, with way more red counties in 2016. At this date, many counties have massively vote for Trump, where his score is regularly around 90% of the total votes (!)","82367230":"We see a negative linear trend between White percentage per county and Democrats votes. The other trends are harder to identify, but we can still assert that counties with more Hispanic % and\/or income per person tend to be more pro-Democrats. For Men%, there is no clear relation, but let's note that Forest County (PA), with 80% of Men, is a clear outlier in the plot.","c3ae2e0e":"These correlation coefficients already highlight some obvious trends. Counties with minorities, more unemployment and more population tend to have higher vote percentages for Democrats, whereas countries with more White people, Men and people working in the Construction sector (!) are more pro-Republican.","c1b5d349":"The predictions are rather close to the actual score, but let's note that the highest error (by far) is obtained at Citrus County (FL), where we predicted 31.1% of the votes for Democrats, the actual score being 29.5% : the difference is still low !","f94da33d":"# III - Analysis of vote factors","37104c59":"The most important factors are the White population, the Income per person and the percentage of the population having the right to vote. As we don't have any other age-related variable, we could deduce that the latter introduce this notion in the model, which has a huge impact on county votes.\n\nLet's know visualize our results per state !","2c34547f":"### Target Value Analysis\nLet's select only the variables that we will use in the prediction part.","d45c1a23":"The vast majority of American counties has more votes for Republicans in 2016 than in 2012. We can however note some exceptions, such as Wibaux or Sterling counties, whose Democrat votes have risen up, whereas they are among the most pro-Republican counties. I wonder if this is due to some local events.","cd91b431":"In this part, I will for now focus on 2016 elections, adding some demographic data from 2017. I think the 1-year gap is neglectable at this point.\n\nArbitrarily, the target variable will be the % of Democrats vote per country. Others, such as % for Republicans, or number of votes for each candidate lead to the same results.","7338ef7f":"These results are satisfying: we have a Mean Squared Error of 0.004, which is rather low!","1ef09aaf":"WIP - I'm looking for 2020 Data to make predictions for the elections","f0fb32c3":"It is hard to identify a clear trend, but we can see a slight rise in Democrats vote as the Total Population of counties augments.\n\nLet's now look at the relation between Democrats vote and its most correlated variables:","b661c47e":"# I - Libraries and Data ","133ceb6c":"# IV - Predicting Votes","ff6a34da":"### Dependent Variables Analysis","4a597781":"Hi ! With the upcoming elections, I wanted to analyze the past ones and try to find the demographic factors that have driven Americans' votes. I start by a quick EDA, that I'll deepen later, followed by ML predictions.\n\nShare and upvote this notebook if you like it ! I plan to add an analysis of the 2020 Elections soon."}}