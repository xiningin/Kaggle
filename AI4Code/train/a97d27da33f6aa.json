{"cell_type":{"dc9be2b0":"code","b9573743":"code","94806f18":"code","56ef2956":"code","40a3212b":"code","a74d2a28":"code","c476fb67":"code","5ee3a00e":"code","db2666d0":"code","460c999c":"code","37a5a694":"code","d0d1d408":"code","88a53aa4":"code","861d6cb9":"code","a4fc2d2b":"code","41c8679e":"code","5eeafdb5":"code","1de075c2":"code","a9a5486d":"code","62d2fe56":"code","73ffcd65":"code","604b467e":"code","8a96881f":"code","5f6a7e8d":"code","3cca8453":"code","bc391aba":"code","4a752fdd":"code","6c3fcb0e":"code","020ce79a":"code","8d6fb27e":"code","01691585":"code","cfce60a5":"code","bc22b75a":"code","c93eaabb":"code","8dc65971":"code","904f33ee":"code","8a13a739":"code","27d9313e":"code","7d158cb4":"code","3a843376":"markdown","a42f4c23":"markdown","eadc9fe6":"markdown","865f3c48":"markdown","3e995fd2":"markdown","da9a2b82":"markdown","7cdbab66":"markdown","c980e51b":"markdown","7164e948":"markdown","aa64ec38":"markdown","1bbcce35":"markdown"},"source":{"dc9be2b0":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom os import listdir\nfrom keras.models import Sequential\nfrom keras.layers.normalization import BatchNormalization\nfrom keras.layers.convolutional import Conv2D\nfrom keras.layers.convolutional import MaxPooling2D\nfrom keras.layers.core import Activation, Flatten, Dropout, Dense\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nfrom keras.optimizers import Adam\nfrom keras.models import load_model\nfrom PIL import Image\nfrom keras.preprocessing import image\nfrom keras.callbacks import ModelCheckpoint\nfrom keras.preprocessing.image import img_to_array\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\n","b9573743":"batch_size = 128\nimg_height = 250\nimg_width = 250","94806f18":"\n# Input data files are available in the \"..\/input\/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\ntraindir = \"..\/input\/tasarm2-veriseti\/plant_disase\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/train\"\nvaliddir = \"..\/input\/tasarm2-veriseti\/plant_disase\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/valid\"\ntestdir = \"..\/input\/tasarm2-veriseti\/plant_disase\/test\"\n\ntrain_datagen = ImageDataGenerator(rescale=1.\/255,\n                                   shear_range=0.2,\n                                   zoom_range=0.2,\n                                   width_shift_range=0.2,\n                                   height_shift_range=0.2,\n                                   fill_mode='nearest')\n\nvalid_datagen = ImageDataGenerator(rescale=1.\/255)\n\n\n\ntraining_set = train_datagen.flow_from_directory(traindir,\n                                                 target_size=(250, 250),\n                                                 batch_size=batch_size,\n                                                 class_mode='categorical')\n\nvalid_set = valid_datagen.flow_from_directory(validdir,\n                                            target_size=(250, 250),\n                                            batch_size=batch_size,\n                                            class_mode='categorical')\n\n","56ef2956":"s\u0131n\u0131f_isim_indis = training_set.class_indices # veri setindeki hastal\u0131klar ve indisleri \ns\u0131n\u0131f_isim_indis ","40a3212b":"li = s\u0131n\u0131f_isim_indis.keys()  # hastal\u0131k t\u00fcrleri\nli","a74d2a28":"count = 0 # Her Hastal\u0131k t\u00fcr\u00fcnden ka\u00e7 adet oldu\u011funu saymak i\u00e7in \nde\u011fer = 0\nsay\u0131 = []\nfor i in np.arange(0,38):\n    \n    for count in training_set.classes:\n        \n        if i == count:\n            de\u011fer = de\u011fer+1\n    say\u0131.append(de\u011fer)\n    de\u011fer =0\n        ","c476fb67":"hastal\u0131k_ve_index = pd.DataFrame.from_dict(s\u0131n\u0131f_isim_indis,orient='index', columns=[\"Hastal\u0131k_indexleri\"])\nhastal\u0131k_ve_index['Hastal\u0131k Say\u0131lar\u0131'] = say\u0131\nhastal\u0131k_ve_index","5ee3a00e":"import seaborn as sns\nplt.subplots(figsize=(30,10))\nsns.set_theme(style=\"darkgrid\")\nax = sns.countplot(training_set.classes)","db2666d0":"train_num = training_set.samples #E\u011fitim Veri Setindeki g\u00f6r\u00fcnt\u00fc say\u0131s\u0131\nvalid_num = valid_set.samples #Validasyon Veri Setindeki g\u00f6r\u00fcnt\u00fc say\u0131s\u0131\n\ndict = {\"E\u011fitim Veri Setindeki g\u00f6r\u00fcnt\u00fc say\u0131s\u0131\":train_num,\"Validasyon Veri Setindeki g\u00f6r\u00fcnt\u00fc say\u0131s\u0131\":valid_num }\npd.DataFrame.from_dict(dict, orient='index',columns = [\"G\u00f6r\u00fcnt\u00fc_say\u0131s\u0131\"] )","460c999c":"\nimg,label = training_set[0] # e\u011fitimden ilk 128 g\u00f6r\u00fcnt\u00fcy\u00fc ald\u0131k\nimg2,label2 = valid_set[10] # test den bir batch size g\u00f6r\u00fcnt\u00fc ald\u0131k","37a5a694":"print(\"E\u011fitim Bir EPOCH shape :\" ,img.shape ,\"Validasyon Bir EPOCH shape :\" ,img2.shape)# bir epoktaki g\u00f6r\u00fcnt\u00fc say\u0131s\u0131 ve shape i","d0d1d408":"\nplt.figure(figsize = (15,15))\nfor i in range(0,9):\n    c = 0               # encode edilmi\u015f de\u011ferleri decode etme i\u015flemi\n    for j in label[i]:\n        c = c+1 \n        if j ==1 or c==37 :\n            break\n    ba\u015fl\u0131k = hastal\u0131k_ve_index.index[c-1] +\"--->\"+ str(c-1)\n\n    plt.subplot(3,3,i+1)\n    plt.axis('off')\n    plt.title(ba\u015fl\u0131k)\n    plt.imshow(img[i])\nplt.show()","88a53aa4":"plt.figure(figsize = (15,15))\nfor i in range(0,9):\n    c = 0               # encode edilmi\u015f de\u011ferleri decode etme i\u015flemi\n    for j in label2[i]:\n        c = c+1 \n        if j ==1 or c==37 :\n            break\n    ba\u015fl\u0131k = hastal\u0131k_ve_index.index[c-1] +\"--->\"+ str(c-1)\n\n    plt.subplot(3,3,i+1)\n    plt.axis('off')\n    plt.title(ba\u015fl\u0131k)\n    plt.imshow(img2[i])\nplt.show()","861d6cb9":"depth,height, width=3,250,250\nn_classes=len(li)\nprint(\"class (s\u0131n\u0131f) say\u0131s\u0131:\",n_classes)","a4fc2d2b":"model = Sequential()\ninputShape = (height, width, depth)\nchanDim = -1\n\nmodel.add(Conv2D(32, (3, 3), padding=\"same\",input_shape=inputShape))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization(axis=chanDim))\nmodel.add(MaxPooling2D(pool_size=(3, 3)))\nmodel.add(Conv2D(64, (3, 3), padding=\"same\"))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization(axis=chanDim))\nmodel.add(Conv2D(64, (3, 3), padding=\"same\"))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization(axis=chanDim))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Conv2D(128, (3, 3), padding=\"same\"))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization(axis=chanDim))\nmodel.add(Conv2D(128, (3, 3), padding=\"same\"))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization(axis=chanDim))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Flatten())\nmodel.add(Dense(1024))\nmodel.add(Activation(\"relu\"))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\nmodel.add(Dense(n_classes))\nmodel.add(Activation(\"softmax\"))\nmodel.summary()","41c8679e":"model.compile(optimizer='adam',\n               loss='categorical_crossentropy',\n               metrics=['accuracy'])","5eeafdb5":"checkpointer = ModelCheckpoint('.\/bitki_hast_weights4.h5',verbose =1, save_best_only=True)","1de075c2":"history = model.fit(training_set,\n                   steps_per_epoch=train_num\/\/batch_size,\n                   epochs=19,\n                   validation_data=valid_set,\n                   validation_steps=valid_num\/\/batch_size,\n                   callbacks = [checkpointer])\n\n","a9a5486d":"plt.figure(figsize = (14,3))\nplt.subplot(1,2,1)\nplt.suptitle('E\u011fitim',fontsize = 10)\nplt.ylabel('Loss',fontsize = 16)\nplt.plot(history.history['loss'],color = 'r',label ='Training Loss') #buraya x olarak epoch ekleyebilirsin iyi olur\nplt.plot(history.history['val_loss'],color = 'b',label ='Validation Loss')\nplt.legend(loc='upper right')\n\nplt.subplot(1,2,2)\nplt.suptitle('E\u011fitim',fontsize =10)\nplt.ylabel('Accuracy',fontsize =16)\nplt.plot(history.history['accuracy'],color = 'g',label ='Training Accuracy') #buraya x olarak epoch ekleyebilirsin iyi olur\nplt.plot(history.history['val_accuracy'],color = 'm',label ='Validation Accuracy')\nplt.legend(loc='lower right')\nplt.show()","62d2fe56":"# modeli kaydetme\nmodel_json = model.to_json()\nwith open(\"bitki_hast_model.json4\",'w') as json_file:\n    json_file.write(model_json)\n                    ","73ffcd65":"#en iyi a\u011f\u0131rl\u0131klar\u0131 y\u00fckleme \n\nmodel_best = load_model('.\/bitki_hast_weights4.h5')","604b467e":"#Validasyon setinde tekrar do\u011fruluk kontrol\u00fc yapmak\nx_test, y_test = valid_set.next() \nprint(\"[INFO] Calculating model accuracy\")\nscores = model_best.evaluate(x_test, y_test)\nprint(f\"Test Accuracy: {scores[1]}\")","8a96881f":"import os\nentries = os.listdir(\"..\/input\/tasarm2-veriseti\/plant_disase\/test\")\nentries\n","5f6a7e8d":"#Validasyon setinde tekrar do\u011fruluk kontrol\u00fc yapmak\nx_test, y_test = valid_set.next() \nprint(\"[INFO] Calculating model accuracy\")\nscores = model_best.evaluate(x_test, y_test)\nprint(f\"Test Accuracy: {scores[1]}\")","3cca8453":"\n\nx=19\nimage_path = \"..\/input\/tasarm2-veriseti\/plant_disase\/test\/\"+ entries[x]\nnew_img = image.load_img(image_path, target_size=(250, 250))\nimg = image.img_to_array(new_img)\nimg = np.expand_dims(img, axis=0)\nimg = img\/255\nprediction = model_best.predict(img)\nprint(prediction )\ntabl_ind = np.argmax(prediction)\nprint(tabl_ind)","bc391aba":"plt.figure(figsize = (10,10))\nplt.imshow(new_img)\nplt.title(\"Giri\u015f Resmi: \"+ entries[x]+\"  ,Tahmin Sonucu: \"+hastal\u0131k_ve_index.index[tabl_ind] ,color = 'r')\nplt.axis(\"off\")\nplt.show()","4a752fdd":"TRAIN_DIR = ('..\/input\/tasarm2-veriseti\/plant_disase\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/train\/')\nVAL_DIR = ('..\/input\/tasarm2-veriseti\/plant_disase\/New Plant Diseases Dataset(Augmented)\/New Plant Diseases Dataset(Augmented)\/valid\/')\nTEST_DIR = ('..\/input\/tasarm2-veriseti\/plant_disase\/test\/')","6c3fcb0e":"valid_datagen = ImageDataGenerator(rescale=1.\/255)\n\nvalid_set = valid_datagen.flow_from_directory(VAL_DIR ,\n                                            target_size=(250, 250),\n                                            batch_size=128,\n                                            class_mode='categorical')","020ce79a":"score = 0\nfor i in range(17562\/\/128+1):\n    x_test, y_test = valid_set.next() \n    print(\"[INFO] Calculating model accuracy\")\n    scores = model_best.evaluate(x_test, y_test)\n    print(f\"Test Accuracy: {scores[1]}\")\n    score = score + scores[1]\n\nprint(\"Ortalama Validasyon Accuracy:\",score\/138)","8d6fb27e":"from sklearn.metrics import classification_report, confusion_matrix","01691585":"top_cm3 = np.zeros((38,38))\ntahminler2 = []\ny_testler = []\nfor i in range(17562\/\/128+1):\n    zerolar = np.zeros((38,38))\n    x_test, y_test = valid_set.next() \n    \n    tahminler = model_best.predict_classes(x_test)\n    tahminler2 = np.append(tahminler2,tahminler, axis=0)\n    y_pred_best2 = np.argmax(y_test, axis=1)\n    y_testler = np.append(y_testler,y_pred_best2, axis=0)\n    cm3 = confusion_matrix(y_pred_best2,tahminler)\n    if cm3.shape != (38,38):\n        shape = np.shape(cm3)\n        zerolar[:shape[0],:shape[1]] = cm3\n        top_cm3 = np.add(top_cm3,zerolar)\n    else:   \n        top_cm3 = np.add(top_cm3,cm3)\ntop_cm3\nprint(i)","cfce60a5":"import seaborn as sn\nplt.subplots(figsize=(40,30))\nsn.heatmap(top_cm3, annot=True)","bc22b75a":"print(classification_report(y_testler, tahminler2, target_names = ['Apple___Apple_scab','Apple___Black_rot','Apple___Cedar_apple_rust','Apple___healthy','Blueberry___healthy','Cherry_(including_sour)___Powdery_mildew','Cherry_(including_sour)___healthy','Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot','Corn_(maize)___Common_rust_','Corn_(maize)___Northern_Leaf_Blight','Corn_(maize)___healthy','Grape___Black_rot','Grape___Esca_(Black_Measles)','Grape___Leaf_blight_(Isariopsis_Leaf_Spot)','Grape___healthy','Orange___Haunglongbing_(Citrus_greening)','Peach___Bacterial_spot','Peach___healthy','Pepper,_bell___Bacterial_spot','Pepper,_bell___healthy','Potato___Early_blight','Potato___Late_blight','Potato___healthy','Raspberry___healthy','Soybean___healthy','Squash___Powdery_mildew','Strawberry___Leaf_scorch','Strawberry___healthy','Tomato___Bacterial_spot','Tomato___Early_blight','Tomato___Late_blight','Tomato___Leaf_Mold','Tomato___Septoria_leaf_spot','Tomato___Spider_mites Two-spotted_spider_mite','Tomato___Target_Spot','Tomato___Tomato_Yellow_Leaf_Curl_Virus','Tomato___Tomato_mosaic_virus','Tomato___healthy']))","c93eaabb":"import os\nentries = os.listdir(\"..\/input\/tasarm2-veriseti\/plant_disase\/test\")\nentries","8dc65971":"x=4\nimage_path = \"..\/input\/tasarm2-veriseti\/plant_disase\/test\/\"+ entries[x]\nnew_img = image.load_img(image_path, target_size=(250, 250))\nimg = image.img_to_array(new_img)\nimg = np.expand_dims(img, axis=0)\nimg = img\/255\nprediction = model_best.predict(img)\nprint(prediction )\ntabl_ind = np.argmax(prediction)\nprint(tabl_ind)","904f33ee":"s\u0131n\u0131f_isim_indis = valid_set.class_indices # veri setindeki hastal\u0131klar ve indisleri \nli = s\u0131n\u0131f_isim_indis.keys()  # hastal\u0131k t\u00fcrleri","8a13a739":"list = [(k, v) for k, v in s\u0131n\u0131f_isim_indis.items()]#dict \u00e7a\u011f\u0131r\u0131lmad\u0131\u011f\u0131 i\u00e7in liste haline getirdim\nlist","27d9313e":"plt.figure(figsize = (5,5))\nplt.imshow(new_img)\nplt.title(\"Giri\u015f Resmi: \"+ entries[x]+\"\\n\"+\" Tahmin Sonucu: \"+list[tabl_ind][0]+\"\\n\",color = 'g')\nplt.axis(\"off\")\nplt.show()","7d158cb4":"plt.figure(figsize = (30,90))\ntahminler =[]\nfor i in range(0,len(entries)):\n    image_path = \"..\/input\/tasarm2-veriseti\/plant_disase\/test\/\"+ entries[i]\n    new_img = image.load_img(image_path, target_size=(250, 250))\n    img = image.img_to_array(new_img)\n    img = np.expand_dims(img, axis=0)\n    img = img\/255\n    prediction = model_best.predict(img)\n    tabl_ind = np.argmax(prediction)\n    tahminler = np.append(tahminler,tabl_ind)\n    new_img2 = image.load_img(image_path, target_size=(250, 250))\n    plt.subplot(17,2,i+1)\n    plt.axis('off')\n    cizgiler=\"\\n\"+\"_______________________________________________\"+\"\\n\"\n    plt.title(cizgiler+\"Giri\u015f Resmi: \"+ entries[i]+\"\\n\"+\" Tahmin Sonucu: \"+list[tabl_ind][0]+\"\\n\" ,color = 'b')\n    plt.imshow(new_img2)\nplt.show()","3a843376":"En Ba\u015far\u0131l\u0131 A\u011f\u0131rl\u0131klar\u0131n kaydedilmesi","a42f4c23":"# E\u011e\u0130T\u0130M G\u00d6R\u00dcNT\u00dcLER\u0130 ","eadc9fe6":"FOTO\u011eRAFLARI G\u00d6STERME","865f3c48":"# VAL\u0130DASYON G\u00d6R\u00dcNT\u00dcLER\u0130 ","3e995fd2":"# Confusion Matris","da9a2b82":"# E\u011fitim Sonucunda Elde Edilen E\u011fitim Ve Validasyon Sonu\u00e7lar\u0131n\u0131n Grafikle\u015ftirilmesi","7cdbab66":"# * Veriyi \u0130nceleyelim","c980e51b":"# MODEL\u0130N HAZIRLANMSI","7164e948":"# Farkl\u0131 Test G\u00f6r\u00fcnt\u00fcleriyle Deneme Yapma ","aa64ec38":"# T\u00fcm Test G\u00f6r\u00fcnt\u00fclerinin Tahmin Sonu\u00e7lar\u0131","1bbcce35":"# Test Sonucuna G\u00f6re \u00c7\u0131kt\u0131"}}