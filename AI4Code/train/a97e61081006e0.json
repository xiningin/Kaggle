{"cell_type":{"21cfa1c0":"code","bdbf5ff3":"code","43fc8bf4":"code","1744ac2c":"code","e4037d97":"code","b5556908":"code","85b9abcf":"code","db36f4f6":"code","45de8eb5":"code","ba8259a7":"code","dc6fbaa4":"code","6a1274f9":"code","04d32645":"code","5ca17b50":"code","302d024f":"code","d400810d":"code","de4f2b55":"code","319beb62":"markdown","55123176":"markdown","e0a8ca2f":"markdown"},"source":{"21cfa1c0":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\nimport tensorflow as tf\nfrom tensorflow import keras","bdbf5ff3":"fashion=keras.datasets.fashion_mnist\n(train_images,train_labels),(test_images,test_labels)=fashion.load_data()","43fc8bf4":"plt.imshow(train_images[0])","1744ac2c":"train_images.shape","e4037d97":"train_images[0]","b5556908":"# Normalizing the images both in training and testing dataset\ntrain_images=train_images\/255\ntest_images=test_images\/255","85b9abcf":"# number of different labels\nset(train_labels)","db36f4f6":"train_images=train_images.reshape(len(train_images),28,28,1)\ntest_images=test_images.reshape(len(test_images),28,28,1)","45de8eb5":"def build_model(hp):\n    model=keras.Sequential([\n        # convolution layer 1\n        keras.layers.Conv2D(\n            filters=hp.Int('conv_1_filter', min_value=32, max_value=128, step=16),\n            kernel_size=hp.Choice('conv_1_kernel', values = [3,5]),\n            activation='relu',\n            input_shape=(28,28,1)\n    ),\n        # convolution layer 2\n        keras.layers.Conv2D(\n            filters=hp.Int('conv_2_filter', min_value=32, max_value=64, step=16),\n            kernel_size=hp.Choice('conv_2_kernel', values = [3,5]),\n            activation='relu',\n    ),\n        # ANN layer starts \n        keras.layers.Flatten(),\n            keras.layers.Dense(\n            units=hp.Int('dense_1_units', min_value=32, max_value=128, step=16),\n            activation='relu'\n    ),\n        # since we have 10 outputs and using softmaax so as to sum up the probability of all classes to 1 \n        keras.layers.Dense(10, activation='softmax')\n    ])\n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3])),\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n  \n    return model","ba8259a7":"!pip install keras-tuner","dc6fbaa4":"from kerastuner import RandomSearch\nfrom kerastuner.engine.hyperparameters import HyperParameters","6a1274f9":"tuner_search=RandomSearch(build_model,\n                          objective='val_accuracy',\n                          max_trials=5,directory='output',project_name=\"Fashion\")","04d32645":"tuner_search.search(train_images,train_labels,epochs=3,validation_split=0.1)","5ca17b50":"model=tuner_search.get_best_models(num_models=1)[0]\nmodel.summary()","302d024f":"preds=model.predict(test_images[0:10])\npreds","d400810d":"pred=[]\nfor i in preds:\n    pred.append(np.argmax(i))\nprint(pred)","de4f2b55":"test_labels[:10]","319beb62":"### Building Model and optimizing parameters using KerasTuner","55123176":"### Getting the Dataset from KerasAPI","e0a8ca2f":"### Checking Predictions"}}