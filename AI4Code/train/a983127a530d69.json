{"cell_type":{"a21fc42c":"code","841f4870":"code","d0e53d14":"code","651b797e":"code","908149e3":"code","3f7ebe20":"code","e6302709":"code","cfc607c9":"code","db99854b":"code","5797efd9":"code","29787117":"code","5f14f275":"code","edbe37d3":"code","84d7321a":"code","6ea29776":"code","f2f8dc2b":"code","f7a3ea16":"code","5414f229":"code","40c5581f":"code","7f28abd6":"code","34141e94":"code","d774486e":"code","bad40291":"code","e2d1e0fb":"code","ed396ef7":"code","221c39a8":"code","5de414c3":"code","9fcb7302":"code","ffee693f":"code","c923b345":"code","a77ccb74":"code","41fd5107":"code","555bc5e6":"code","4b17ac0a":"code","8bce6de3":"markdown","65641a3c":"markdown","48a2aa0e":"markdown","b2983536":"markdown","bcfd9317":"markdown","16713255":"markdown","e4a74899":"markdown","835f1d0f":"markdown","54d6486d":"markdown","4bd0e58d":"markdown","3b0f5474":"markdown"},"source":{"a21fc42c":"# Supress Warnings\n\nimport warnings\nwarnings.filterwarnings('ignore')","841f4870":"# Import the numpy and pandas packages\n\nimport numpy as np\nimport pandas as pd","d0e53d14":" # Write your code for importing the csv file here\nmovies=pd.read_csv(\"..\/input\/imdb-movie-data\/MovieAssignmentData.csv\")\nmovies.head() # to see the first five rows ","651b797e":"# Write your code for inspection here\nmovies.columns # to know the column names\nmovies.shape # to know the number of rows and columns\nmovies.info()# to know the data types of the column\nmovies.describe() #to know which column's type data or to find mean average, max and min","908149e3":"# Write your code for column-wise null count here\nmovies.isnull().sum(axis=1)","3f7ebe20":"# Write your code for row-wise null count here\nmovies.isnull().sum()","e6302709":"# Write your code for column-wise null percentages here\nround(100*(movies.isnull().sum()\/len(movies.index)),2) # percentage of null column wise percentage","cfc607c9":"# Write your code for dropping the columns here. It is advised to keep inspecting the dataframe after each set of operations \nmovies=movies.drop([\"color\",\"director_facebook_likes\",\"actor_1_facebook_likes\",\"actor_2_facebook_likes\",\"actor_3_facebook_likes\",\"actor_2_name\",\"cast_total_facebook_likes\",\"actor_3_name\",\"duration\",\"facenumber_in_poster\",\"content_rating\",\"country\",\"movie_imdb_link\",\"aspect_ratio\",\"plot_keywords\"],axis=1)\nmovies.head() #to inspect the column name\n# row size is decreased from 28 to 13","db99854b":"# Write your code for dropping the rows here\nmovies=movies[~np.isnan(movies[\"gross\"])]\n#movies=movies[~np.isnan(movies[\"content_rating\"])]# content rating column dropped #its d ype is object->can we have to convert to float?\nmovies=movies[~np.isnan(movies[\"budget\"])]\n#df=df[~np.isnan(df[\"aspect_ratio\"])] # aspect_ratio column is dropped\nround(100*(movies.isnull().sum()\/len(movies.index)),2) # to caluclate the percentage ","5797efd9":"# Write your code for filling the NaN values in the 'language' column here\nmovies.loc[pd.isnull(movies[\"language\"]),[\"language\"]]=\"English\"\nround(100*(movies.isnull().sum()\/len(movies.index)),2)# to see the percentage of column language\n# after execution language column changed to 0.00","29787117":"# Write your code for checking number of retained rows here\nmovies.shape\nround(100*len(movies.index)\/5043)","5f14f275":"# Write your code for unit conversion here\nmovies[['budget','gross']].apply(lambda x: round(x\/1000000,1))","edbe37d3":"# Write your code for creating the profit column here\nmovies['profit']=movies['gross']-movies['budget']\nmovies.head()\n# profit column is created","84d7321a":"# Write your code for sorting the dataframe here\nmovies=movies.sort_values(by=['profit','movie_title'],ascending=False)\nmovies[0:10]","6ea29776":"# Write code for profit vs budget plot here\nmovies.describe()\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# movies.plot(x=\"budget\", y=\"profit\", kind=\"scatter\")\n# plt.show()\nsns.scatterplot(x=\"budget\",y=\"profit\",data=movies)\nplt.show()\n# outlier away frome the cluster of values","f2f8dc2b":"# Write your code to get the top 10 profiting movies here\ntop10 = movies.head(10)\ntop10.movie_title ","f7a3ea16":"# Write your code for dropping duplicate values here\nmovies.drop_duplicates(keep=\"first\",inplace=True)","5414f229":"# Write code for repeating subtask 2 here\n#movies['profit']=movies['gross']-movies['budget']\nmovies=movies.sort_values(by=['profit','movie_title'],ascending=False)\ntop10 = movies.head(10)\ntop10\n","40c5581f":"# Write your code for extracting the top 250 movies as per the IMDb score here. Make sure that you store it in a new dataframe \n# and name that dataframe as 'IMDb_Top_250'\n#movies['IMDb_Top_250']=movies['imdb_score']\nIMDb_Top_250=movies[movies.num_voted_users>25000].sort_values(\"imdb_score\",ascending=False).head(250)\nrank =[]\nfor i in range(1,251):\n    rank.append (i)\nIMDb_Top_250['rank']=rank\nIMDb_Top_250.head(250)","7f28abd6":"# Write your code to extract top foreign language films from 'IMDb_Top_250' here\nTop_Foreign_Lang_Film = IMDb_Top_250.loc[(IMDb_Top_250.language=='Hindi')]\nTop_Foreign_Lang_Film","34141e94":"# Write your code for extracting the top 10 directors here\nmovies.groupby('director_name')\ntop10director=movies.groupby('director_name').imdb_score.mean().sort_values(ascending=False)\ntop10director.head(10)","d774486e":"# Write your code for extracting the first two genres of each movie here\nmovies['genres']=movies.genres.str.split('|')\nmovies['genre_1']=movies['genres'].apply(lambda x: x[0])\nmovies['genre_2']=movies['genres'].apply(lambda x: x[1] if len(x)>1 else x[0])\nmovies.head()","bad40291":"# Write your code for grouping the dataframe here\nmovies_by_segment = movies.groupby(['genre_1','genre_2'])\nmovies_by_segment.gross.mean().sort_values(ascending=False)","e2d1e0fb":"# Write your code for getting the 5 most popular combo of genres here\nPopGenre = movies_by_segment.gross.mean().sort_values(ascending=False)\nPopGenre[0:5]","ed396ef7":"# Write your code for creating three new dataframes here\n# Include all movies in which Meryl_Streep is the lead\nMeryl_Streep =movies.loc[movies['actor_1_name']=='Meryl Streep',:]\nMeryl_Streep.movie_title","221c39a8":"# Include all movies in which Leo_Caprio is the lead\nLeo_Caprio =movies.loc[movies['actor_1_name']=='Leonardo DiCaprio',:]\nLeo_Caprio.movie_title","5de414c3":"# Include all movies in which Brad_Pitt is the lead\nBrad_Pitt =movies.loc[movies['actor_1_name']=='Brad Pitt',:]\nBrad_Pitt.movie_title","9fcb7302":"# Write your code for combining the three dataframes here\nd1=Meryl_Streep.append(Leo_Caprio)\ncombined_df=d1.append(Brad_Pitt)\ncombined_df.head()","ffee693f":"# Write your code for grouping the combined dataframe here\ndf_by_act= combined_df.groupby(['actor_1_name'])","c923b345":"# Write the code for finding the mean of critic reviews and audience reviews here\ncritic_reviews=df_by_act['num_critic_for_reviews'].mean().sort_values(ascending=False).head(49)\ncritic_reviews","a77ccb74":"audience_reviews=df_by_act['num_user_for_reviews'].mean().sort_values(ascending=False).head(49)\naudience_reviews","41fd5107":"# Write the code for calculating decade here\ndecade =[]\nfor i in range(1,3892):\n    decade=movies['title_year']\/\/10*10\nmovies[\"decade\"]=decade.astype(int)\nmovies.head(2)","555bc5e6":"# Write your code for creating the data frame df_by_decade here \ndf_by_decade=movies.groupby('decade').num_voted_users.sum().sort_values(ascending=True).reset_index()\ndf_by_decade","4b17ac0a":"# Write your code for plotting number of voted users vs decade\nsns.barplot(x=\"decade\",y=\"num_voted_users\",data=movies,ci=68)\nplt.show()","8bce6de3":" Drop duplicate values","65641a3c":"Drop unecessary columns","48a2aa0e":"Find the movies with highest profit","b2983536":"Drop unecessary rows using columns with high Null percentages","bcfd9317":"# Data Analysis\nChange the unit of columns","16713255":" Find IMDb Top 250","e4a74899":"Find popular genres","835f1d0f":"Find the best directors","54d6486d":"# Reading and Inspection\n","4bd0e58d":"# Cleaning the Data","3b0f5474":"Find the critic-favorite and audience-favorite actors"}}