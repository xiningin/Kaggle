{"cell_type":{"a9942beb":"code","9402dbfc":"code","eb4e2b10":"code","07160eb5":"code","72ccb976":"code","a40464c1":"code","543500a1":"code","9be77990":"code","ec84195f":"markdown","ef22d675":"markdown","605a1d4d":"markdown","7a519525":"markdown","3777f365":"markdown","d2c78090":"markdown"},"source":{"a9942beb":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle\/python Docker image: https:\/\/github.com\/kaggle\/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I\/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib.ticker import FuncFormatter\n\nsns.set()\n\n# Input data files are available in the read-only \"..\/input\/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('\/kaggle\/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (\/kaggle\/working\/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to \/kaggle\/temp\/, but they won't be saved outside of the current session","9402dbfc":"df = pd.read_csv('\/kaggle\/input\/pakistans-largest-ecommerce-dataset\/Pakistan Largest Ecommerce Dataset.csv',\n                 low_memory=False, usecols=[*range(0,21)], parse_dates=['created_at', 'Working Date'])\ndf.dropna(how='all', inplace=True)\ndf.info()","eb4e2b10":"df.columns =['item_id', 'status', 'created_at', 'sku', 'price', 'qty_ordered', 'grand_total', 'increment_id', 'category_name_1','sales_commission_code','discount_amount', 'payment_method', 'working_date', 'bi_status', 'mv', 'year', 'month', 'customer_since', 'my', 'fy', 'customer_id']\ndf = df.astype({'year': 'int32', 'month' : 'int32'})\ndf.head()","07160eb5":"ax = df.category_name_1.value_counts().nlargest(n=5).plot(kind='bar')\nax.set_title('Top categories');","72ccb976":"years = sorted(df.year.unique())\nfig, axis = plt.subplots(1, len(years), sharey=True, figsize=(10,5))\n\ndef plotstatus(year, ax):\n    data = df[df.year == year].status.value_counts().nlargest(n=5)\n    ax.bar(data.index, data.values)\n    ax.set_title('Year ' + str(year))\n    ax.tick_params(labelrotation=90, axis='x')\n\nfor i, y in enumerate(years):\n    plotstatus(y, axis[i])\n\nplt.suptitle('Year wise order status')\nplt.show()","a40464c1":"order_price_status = df.groupby(['status', 'year']).size().unstack('year', fill_value=0)\norder_price_status.sort_values(ascending=False, by=[2016,2017,2018], inplace=True)\nax = order_price_status.head().plot(kind='bar')\nax.set_title('Year wise order status');","543500a1":"fig, axis = plt.subplots(1, len(years), sharey=True, figsize=(10,5))\n\ndef plotstatus(year, ax):\n    data = df[df.year == year].payment_method.value_counts().nlargest(n=5)\n    ax.bar(data.index, data.values)\n    ax.set_title('Year ' + str(year))\n    ax.tick_params(labelrotation=90, axis='x')\n\nfor i, y in enumerate(years):\n    plotstatus(y, axis[i])\n\nplt.suptitle('Year wise payment method')\nplt.show()","9be77990":"def millions_formatter(x, pos):\n    return f'{x \/ 1000000:0.0f} m'\n\nprice = df[df['status'] == 'complete'].groupby(['year'])['grand_total'].sum()\nprice = price.astype(int)\nfig, ax = plt.subplots(figsize=(3,4))\nax.yaxis.set_major_formatter(FuncFormatter(millions_formatter))\nax.set_title('Revenue by year in millions')\nax.bar(price.index, price.values);","ec84195f":"## Year wise payment method statistics\n\nFind the payment method statistics over the years and compare them in bar chart","ef22d675":"## Loading the dataset\n\n* Load the dataset into a dataframe \n* Parse the date columns\n* Ignore last five columns, they have null values and are not required in our analysis\n* Show the information about the columns","605a1d4d":"## Revenue over the years\n\nCalculate and show the revenue over the years in millions","7a519525":"## Top categories\n\nShow the top categores in bar chart","3777f365":"## Year wise order status statistics\n\nFind the order status statistics over the years and compare them in bar chart","d2c78090":"## Rename columns\n\nRemove whitespaces from column names and make them all lower case for easy understanding and processing of data"}}