{"cell_type":{"92151f96":"code","125adf12":"code","2c341ed3":"code","6715d7d0":"code","4cfbfd4e":"code","6576889b":"code","97c6bbd8":"code","38a1d072":"code","ae5c25e2":"code","48375fa6":"code","6248d704":"code","acdf5535":"code","c963436e":"code","2df5d555":"code","4d37ab97":"code","5b42cdb4":"code","608889b2":"code","ce4dabaa":"code","d81251d0":"code","4d647aeb":"code","3ae021f2":"code","6ab4b192":"markdown","1d0cd859":"markdown","33ea5efb":"markdown","878bdb5c":"markdown","86d58675":"markdown","cbd0e8de":"markdown"},"source":{"92151f96":"import pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport seaborn as sns","125adf12":"import plotly.express as px","2c341ed3":"file_path = '..\/input\/heart-disease-uci\/heart.csv'\ndf = pd.read_csv(file_path)","6715d7d0":"df.head()","4cfbfd4e":"df.isnull().sum()","6576889b":"df.info()","97c6bbd8":"df.columns","38a1d072":"df.head()","ae5c25e2":"df.target.value_counts()","48375fa6":"X = df.drop('target', axis = 1)\ny = df['target']","6248d704":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)\nX_train.shape, X_test.shape, y_train.shape, y_test.shape","acdf5535":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\npipe = make_pipeline(StandardScaler(), LogisticRegression())\npipe.fit(X_train, y_train)","c963436e":"pipe.score(X_test, y_test)","2df5d555":"from sklearn.tree import DecisionTreeClassifier\nclf = DecisionTreeClassifier(random_state=0)\nclf.fit(X_train, y_train)","4d37ab97":"clf.score(X_test, y_test)","5b42cdb4":"from sklearn.preprocessing import MinMaxScaler\nscaler = MinMaxScaler()\nscaler.fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)","608889b2":"import tensorflow as tf\n\n# random seed \ntf.random.set_seed(42)\n\n# 1. Create a model \nmodel = tf.keras.Sequential([\n  tf.keras.layers.Dense(100, activation = 'relu'),\n  tf.keras.layers.Dense(5, activation = 'relu'),\n  tf.keras.layers.Dense(1, activation = 'sigmoid')\n])\n\n\n# 2. Compile the model \nmodel.compile(\n    loss = tf.keras.losses.BinaryCrossentropy(),\n    optimizer = tf.keras.optimizers.Adam(learning_rate=0.01),\n    metrics = ['accuracy']\n)\n\n\n# 3. Fit the model\nhistory = model.fit(\n    X_train, y_train,\n    epochs = 100\n)","ce4dabaa":"preds = model.predict(X_test)","d81251d0":"y_preds = [\n    1 if x > 0.5 else 0 for x in preds\n]","4d647aeb":"from sklearn.metrics import confusion_matrix\nconfusion_matrix(y_test, y_preds)","3ae021f2":"sns.heatmap(\n    confusion_matrix(\n        y_test, y_preds\n    ), annot = True\n)","6ab4b192":"## Logistic Regression","1d0cd859":"## NN","33ea5efb":"## Dataset description","878bdb5c":"## Decision tree classifier ","86d58675":"* age\n* sex\n* chest pain type (4 values)\n* resting blood pressure\n* serum cholestoral in mg\/dl\n* fasting blood sugar > 120 mg\/dl\n* resting electrocardiographic results (values 0,1,2)\n* maximum heart rate achieved\n* exercise induced angina\n* oldpeak = ST depression induced by exercise relative to rest\n* the slope of the peak exercise ST segment\n* number of major vessels (0-3) colored by flourosopy\n* thal: 3 = normal; 6 = fixed defect; 7 = reversable defect","cbd0e8de":"# Heart Disease Classification"}}