{"cell_type":{"3c96338f":"code","12631af9":"code","c8f17e36":"code","5e5bd2e4":"code","c3c06bf6":"code","81560c4a":"code","37d7737d":"code","64990064":"code","b8e99849":"code","cb313505":"code","ae632325":"code","519eff2a":"code","63c6890a":"code","8b14ea30":"code","5cb2da10":"code","331ec5e4":"code","62984518":"code","95504bc5":"code","3380f687":"code","b719ee5a":"code","1eb907fb":"code","9ea367c9":"code","048367b9":"code","cbbab558":"code","597224ae":"code","956c4ae6":"code","5880f93c":"code","b3f37f7e":"code","dd5664a7":"code","acddfb0c":"code","6c99c37d":"code","5b4aa7c0":"markdown","ac6ae173":"markdown","e014d133":"markdown","8dbe0b52":"markdown","a3a2319b":"markdown","e83dce3d":"markdown","ee06d5ec":"markdown","9fd583bf":"markdown","ffa8be07":"markdown","47654f94":"markdown","f40ea425":"markdown"},"source":{"3c96338f":"import numpy as np\nimport pandas as pd\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import train_test_split","12631af9":"df = pd.read_csv('..\/input\/datathon19\/train.csv')\ndf.head()","c8f17e36":"x_train = df.iloc[:, 0:9]\ny_train = df['class']\nx_train.head()","5e5bd2e4":"x_test = pd.read_csv('..\/input\/datathon19\/test.csv')\nx_test.head()","c3c06bf6":"from sklearn.preprocessing import LabelEncoder\nencoder = LabelEncoder()\n\nx_train['top_left_square'] = encoder.fit_transform(x_train['top_left_square'])\nx_train['top_middle_square'] = encoder.fit_transform(x_train['top_middle_square'])\nx_train['top_right_square'] = encoder.fit_transform(x_train['top_right_square'])\nx_train['middle_left_square'] = encoder.fit_transform(x_train['middle_left_square'])\nx_train['middle_middle_square'] = encoder.fit_transform(x_train['middle_middle_square'])\nx_train['middle_right_square'] = encoder.fit_transform(x_train['middle_right_square'])\nx_train['bottom_left_square'] = encoder.fit_transform(x_train['bottom_left_square'])\nx_train['bottom_middle_square'] = encoder.fit_transform(x_train['bottom_middle_square'])\nx_train['bottom_right_square'] = encoder.fit_transform(x_train['bottom_right_square'])\n\nx_test['top_left_square'] = encoder.fit_transform(x_test['top_left_square'])\nx_test['top_middle_square'] = encoder.fit_transform(x_test['top_middle_square'])\nx_test['top_right_square'] = encoder.fit_transform(x_test['top_right_square'])\nx_test['middle_left_square'] = encoder.fit_transform(x_test['middle_left_square'])\nx_test['middle_middle_square'] = encoder.fit_transform(x_test['middle_middle_square'])\nx_test['middle_right_square'] = encoder.fit_transform(x_test['middle_right_square'])\nx_test['bottom_left_square'] = encoder.fit_transform(x_test['bottom_left_square'])\nx_test['bottom_middle_square'] = encoder.fit_transform(x_test['bottom_middle_square'])\nx_test['bottom_right_square'] = encoder.fit_transform(x_test['bottom_right_square'])","81560c4a":"x_train.head()","37d7737d":"from sklearn.ensemble import RandomForestClassifier\nmodel=RandomForestClassifier(n_estimators=20000)\nmodel.fit(x_train,y_train)","64990064":"x_test_pred = x_test.iloc[:, 0:9]\nx_test_pred.head()","b8e99849":"y_pred = model.predict(x_test_pred)","cb313505":"y_pred","ae632325":"y_pred.shape","519eff2a":"y_test_id = x_test['Id']\ny_test_id.shape","63c6890a":"combined = np.vstack((y_test_id, y_pred)).T\ncombined.shape","8b14ea30":"np.savetxt('datathon19.csv', combined, delimiter=',', fmt=\"%i\")","5cb2da10":"asdf =  pd.read_csv('datathon19.csv')\nasdf.head()","331ec5e4":"import csv\nwith open('datathon19.csv',newline='') as f:\n    r = csv.reader(f)\n    data = [line for line in r]\nwith open('datathon19.csv','w',newline='') as f:\n    w = csv.writer(f)\n    w.writerow(['Id','class'])\n    w.writerows(data)","62984518":"asdf =  pd.read_csv('datathon19.csv')\nasdf.head()","95504bc5":"dfOrigin = pd.read_csv('..\/input\/datathon19\/tic_tac_toe_dataset.csv')","3380f687":"x = dfOrigin.iloc[:, 0:9]\ny = dfOrigin['class']\nx.head()","b719ee5a":"from sklearn.model_selection import train_test_split\n\nx_train_origin, x_test_origin, y_train_origin, y_test_origin = train_test_split(x, y, random_state = 47, test_size = 0.25)","1eb907fb":"x_train_origin.head()\ny_train_origin.head()","9ea367c9":"from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=20000)\n# model.fit(x_train_origin, y_train_origin)","048367b9":"x_train_origin['top_left_square'] = encoder.fit_transform(x_train_origin['top_left_square'])\nx_train_origin['top_middle_square'] = encoder.fit_transform(x_train_origin['top_middle_square'])\nx_train_origin['top_right_square'] = encoder.fit_transform(x_train_origin['top_right_square'])\nx_train_origin['middle_left_square'] = encoder.fit_transform(x_train_origin['middle_left_square'])\nx_train_origin['middle_middle_square'] = encoder.fit_transform(x_train_origin['middle_middle_square'])\nx_train_origin['middle_right_square'] = encoder.fit_transform(x_train_origin['middle_right_square'])\nx_train_origin['bottom_left_square'] = encoder.fit_transform(x_train_origin['bottom_left_square'])\nx_train_origin['bottom_middle_square'] = encoder.fit_transform(x_train_origin['bottom_middle_square'])\nx_train_origin['bottom_right_square'] = encoder.fit_transform(x_train_origin['bottom_right_square'])\n\nx_test_origin['top_left_square'] = encoder.fit_transform(x_test_origin['top_left_square'])\nx_test_origin['top_middle_square'] = encoder.fit_transform(x_test_origin['top_middle_square'])\nx_test_origin['top_right_square'] = encoder.fit_transform(x_test_origin['top_right_square'])\nx_test_origin['middle_left_square'] = encoder.fit_transform(x_test_origin['middle_left_square'])\nx_test_origin['middle_middle_square'] = encoder.fit_transform(x_test_origin['middle_middle_square'])\nx_test_origin['middle_right_square'] = encoder.fit_transform(x_test_origin['middle_right_square'])\nx_test_origin['bottom_left_square'] = encoder.fit_transform(x_test_origin['bottom_left_square'])\nx_test_origin['bottom_middle_square'] = encoder.fit_transform(x_test_origin['bottom_middle_square'])\nx_test_origin['bottom_right_square'] = encoder.fit_transform(x_test_origin['bottom_right_square'])","cbbab558":"x_test_origin.head()","597224ae":"x_test_origin.head()","956c4ae6":"y_train_origin =  encoder.fit_transform(y_train_origin)\ny_test_origin =  encoder.fit_transform(y_test_origin)","5880f93c":"y_test_origin[0:5]","b3f37f7e":"model.fit(x_train_origin, y_train_origin)","dd5664a7":"y_pred_origin = model.predict(x_test_origin)","acddfb0c":"y_pred_origin","6c99c37d":"from sklearn.metrics import accuracy_score\nprint('Accuracy Score on train data: ', accuracy_score(y_true=y_train_origin, y_pred=model.predict(x_train_origin)))\nprint('Accuracy Score on test data: ', accuracy_score(y_true=y_test_origin, y_pred=y_pred_origin))","5b4aa7c0":"# Preprocessing: Using Label Encoder","ac6ae173":"# Accuracy score","e014d133":"Previously achieved 89% using DecisionTreeClassifier. Now, after using RandomForestClassifier there is a significant improvement, as the accuracy has gone up to almost 93%. Pretty decent.","8dbe0b52":"# Calculating Accuracy Using Oirignal Dataset","a3a2319b":"\n# Preprocessing: Using LabelEncoder","e83dce3d":"# Training the Model and making predictions","ee06d5ec":"# Make predictions using the trained model","9fd583bf":"# Import Libs and Get Dataset","ffa8be07":"# Building the Model","47654f94":"This is just to show the accuracy score of the trained model. Previously done with DecisionTreeClassifier which yielded about 89% accuracy.","f40ea425":"Previously I had used DecisionTreeClassifier which gave just about 89% accuracy in the below test I did with the Original dataset. Now trying RandomForestClassifier with n_estimators=20000"}}