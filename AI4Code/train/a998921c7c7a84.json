{"cell_type":{"e9389922":"code","5d8b2b16":"code","9f3ad04b":"code","5acfffac":"code","ebc3b329":"code","2df86541":"code","2b3c2378":"code","74c98026":"code","d5157a97":"code","d49d5c12":"code","63353b23":"code","1ae42326":"code","bf7b5e03":"code","ab376b33":"code","d5af4ebd":"code","9c56e19a":"code","55ceb61f":"code","63e198d0":"code","6daa484a":"code","3cfb07c1":"markdown","77c5789e":"markdown","c9efc414":"markdown","5ad6a34b":"markdown","8a9ac87e":"markdown","385d0a13":"markdown","d4e57aea":"markdown","ba00248b":"markdown","e0bdbc9a":"markdown"},"source":{"e9389922":"%%html\n<div class=\"github-card\" data-github=\"arvkevi\/nba-roster-turnover\" data-width=\"600\" data-height=\"100\" data-theme=\"default\"><\/div>\n<script src=\"\/\/cdn.jsdelivr.net\/github-cards\/latest\/widget.js\"><\/script>","5d8b2b16":"! pip install --user basketball-reference-web-scraper sportsreference;","9f3ad04b":"import os\nimport requests\n\nimport colorlover as cl\nimport cufflinks as cf\nimport numpy as np\nimport pandas as pd\nimport plotly\nimport plotly_express as px\nimport ipywidgets as widgets\n\nfrom basketball_reference_web_scraper import client\nfrom bs4 import BeautifulSoup\nfrom collections import Counter\nfrom ipywidgets import interact\nfrom plotly.graph_objs import Scatter\nfrom sportsreference.nba.schedule import Schedule\nfrom sportsreference.nba.teams import Teams\n\ncf.go_offline()\nplotly.offline.init_notebook_mode() # run at the start of every notebook","5acfffac":"def get_player_statistics(season_end_year):\n    \"\"\"Return a DataFrame of a season stats for all players \n    using basketball reference web scraper\n    \"\"\"\n    results = client.players_season_totals(season_end_year=season_end_year)\n    for result in results:\n        result['team'] = result['team'].value\n    return pd.DataFrame.from_dict(results)\n\n\ndef calculate_turnover(gb, year1=2000, year2=2001):\n    \"\"\"turnover is defined as sum of the \n    absolute difference between mintues played \n    for each player from the two seasons.\n    \n    :param gb: A pandas groupby dataframe\n    \"\"\"\n    s1 = gb.loc[gb['year'] == year1]\n    s1.set_index('slug', inplace=True)\n    \n    s2 = gb.loc[gb['year'] == year2]\n    s2.set_index('slug', inplace=True)\n    \n    combined = s1.join(s2, how='outer', lsuffix='_year1', rsuffix='_year2').fillna(0)\n    turnover = np.abs(combined['minutes_played_year2'] -  combined['minutes_played_year1']).sum()\n    return turnover","ebc3b329":"# keep precomputed as False if you want to scrape the basketball-reference site (much slower)\n# change to True to run the kernel much faster\nprecomputed = True","2df86541":"if precomputed is True:\n    player_minutes = pd.read_csv('..\/input\/nba-roster-turnover\/NBA_player_minutes.2004-2019.csv')\n    roster_turnover = pd.read_csv('..\/input\/nba-roster-turnover\/NBA_roster_turnover_wins.2004-2019.csv')\n    roster_turnover.set_index('team', inplace=True)\n\nelse:\n    # This DataFrame will store minutes played information for every player\n    player_minutes = pd.DataFrame()\n    # This DataFrame will be used to store team name, year, win total, and roster turnover\n    roster_turnover = pd.DataFrame()\n# hold the correlation values between wins and turnover for a given year\nwins_turnover_corr = {}","2b3c2378":"years = range(2004, 2020)\nfor year in years:\n    \n    if precomputed is True:\n        # calculate the correlation between wins and roster turnover\n        wins_turnover_corr[year] = roster_turnover.loc[roster_turnover['year'] == year].corr()['wins']['turnover']\n    \n    else:\n        # scrape basketball reference\n        # calculate total wins for each team and store them dictionary\n        wins = {}\n        teams = Teams(year=year)\n        for team in teams:  \n            sched = Schedule(team.abbreviation, year=year)\n            wins[team.name.upper()] = sched.dataframe['wins'].max()\n        wins_df = pd.DataFrame.from_dict(wins, orient='index', columns=['wins'])\n\n        # scrape season stats for every NBA player for the previous year\n        previous_season = get_player_statistics(year - 1)\n        previous_season['year'] = year - 1\n\n        # scrape season stats for every NBA player for the current year\n        current_season = get_player_statistics(year)\n        current_season['year'] = year\n\n        # combine the season stats into one DataFrame\n        combined = pd.concat([previous_season, current_season])\n        # add minutes played to the larger player_minutes DataFrame\n        player_minutes = player_minutes.append(combined[['team', 'name', 'slug', 'minutes_played', 'year']])\n\n        # GroupBy the teams to calculate how much roster turnover there is from year to year.\n        gb = combined.groupby('team')\n        turnover_df = pd.DataFrame(gb.apply(calculate_turnover, year1=year-1, year2=year), columns=['turnover'])\n\n        # join the calculated turnover with the scraped wins totals\n        turnover_df = turnover_df.join(wins_df)\n        turnover_df['year'] = year\n\n        roster_turnover = roster_turnover.append(turnover_df)\n\n        # calculate the correlation between wins and roster turnover\n        wins_turnover_corr[year] = turnover_df.corr()['wins']['turnover']\n\n# always write these to file, because the kernel self-references it's output\nplayer_minutes = player_minutes.drop_duplicates()\nplayer_minutes.to_csv('NBA_player_minutes.2004-2019.csv')\nroster_turnover.to_csv('NBA_roster_turnover_wins.2004-2019.csv')","74c98026":"# scrape a team's primary colors for the graphs below.\nraw_team_colors = pd.read_json('https:\/\/raw.githubusercontent.com\/jimniels\/teamcolors\/master\/src\/teams.json')\nteam_colors = {}\n\nfor team in Teams(year=2019):\n    team_rgb_strings = raw_team_colors.loc[raw_team_colors['name'] == team.name]['colors'].item()['rgb'][0].split(' ')\n    team_colors[team.name.upper()] = tuple(int(c) for c in team_rgb_strings)\n\n# add old teams, the SuperSonics, and New Jersey Nets\nteam_colors['SEATTLE SUPERSONICS'] = tuple((0, 101, 58))\nteam_colors['NEW JERSEY NETS'] = tuple((0, 42, 96))\nteam_colors['NEW ORLEANS HORNETS'] = tuple((0, 119, 139))\nteam_colors['NEW ORLEANS\/OKLAHOMA CITY HORNETS'] = tuple((0, 119, 139))\nteam_colors['CHARLOTTE BOBCATS'] = tuple((249, 66, 58)) # <--guess","d5157a97":"@interact\ndef scatter_plot(year=range(2004, 2020)):\n    print(f'Correlation Coefficient for {year}: {wins_turnover_corr[year]}')\n    teams = Teams(year=year)\n    teams = sorted([team.name.upper() for team in teams])\n    teams_colorscale = [f'rgb{team_colors[team]}' for team in teams]\n    \n    scatter_data = roster_turnover.reset_index()\n    scatter_data.loc[scatter_data.reset_index()['year'] == year].dropna().iplot(kind='scatter', \n                                                                       x='turnover', \n                                                                       y='wins',\n                                                                       xTitle='Roster Turnover (absolute difference minutes played by player)',\n                                                                       yTitle='Wins',\n                                                                       mode='markers', \n                                                                       categories='team',\n                                                                       title=f'NBA Team Roster Turnover vs Wins in {year}',\n                                                                       theme='ggplot', \n                                                                       colors=teams_colorscale,)","d49d5c12":"year = 2008\nteams = Teams(year=year)\nteam_names = sorted([team.name.upper() for team in teams])\nteams_colorscale = [f'rgb{team_colors[team]}' for team in team_names]\n\nscatter_data = roster_turnover.loc[roster_turnover['year'] == year]\n\ndata = []\nfor team, team_rgb in zip(team_names, teams_colorscale):\n    trace = Scatter(\n        x = [scatter_data.loc[team]['turnover']],\n        y = [scatter_data.loc[team]['wins']],\n        mode = 'markers',\n        name = team,\n        marker = dict(color = team_rgb,\n                      size = 14)\n    )\n    data.append(trace)\n    \nlayout = dict(\n    title = 'NBA Team Roster Turnover vs Wins in 2008',\n    template = 'ggplot2'\n)\n\nfig = dict(data=data, layout=layout)\n# Any Kagglers know how to export png so it will show up in output?\n#plotly.offline.iplot(fig, filename='NBA_roster_turnover_and_wins.png', image='png')","63353b23":"def roster_turnover_pivot(player_minutes, team='ATLANTA HAWKS', year=2004): \n    pm_subset = player_minutes.loc[((player_minutes['year'] == year) \n                                     | (player_minutes['year'] == year - 1))\n                                    & (player_minutes['team'] == team)]\n    return pd.pivot_table(pm_subset, values='minutes_played', index=['team', 'name'], columns=['year']).fillna(0)","1ae42326":"roster_turnover.loc[roster_turnover['year'] == 2008].loc['BOSTON CELTICS']","bf7b5e03":"boston_big3 = roster_turnover_pivot(player_minutes, team='BOSTON CELTICS', year=2008)","ab376b33":"# note Ray Allen and Kevin Garnett\nboston_big3","d5af4ebd":"roster_turnover.loc[roster_turnover['year'] == 2011].loc['MIAMI HEAT']","9c56e19a":"miami_big3 = roster_turnover_pivot(player_minutes, team='MIAMI HEAT', year=2011)","55ceb61f":"# note LeBron and Chris Bosh\nmiami_big3","63e198d0":"yoy_corr = pd.DataFrame.from_dict(wins_turnover_corr, orient='index', columns=['correlation_coefficient']).reset_index()\nyoy_corr.rename(columns={'index': 'year'}, inplace=True)","6daa484a":"px.scatter(yoy_corr,\n           x='year', \n           y='correlation_coefficient',\n           title='Correlation Coefficient Between Win totals and Roster Turnover',\n          )","3cfb07c1":"## Try to generate a static image of 2008 for output\/ directory","77c5789e":"## Check Outlier Seasons","c9efc414":"### Visualize Each Season","5ad6a34b":"## Scrape raw data and calcualate turnover\nI have precomputed the roster turnover and wins for each team and stored them as ouput.\nThis makes the kernel quicker and easier to run.\n","8a9ac87e":"### 2011 -- Miami's Big 3 -- Lebron James and Chris Bosh join Dywayne Wade\n58 Wins","385d0a13":"# NBA roster turnover\nThe 2019 NBA season is over and the start of free agency has begun. Free agency marks the period in the NBA offseason when players who are no longer under contract with any team and decide which team they want to play for in the upcoming season. The summer of 2019 marks one of the most volatile free agency periods in memory, with superstar players like Kawhi Leonard, Kevin Durant, and Kyrie Irving all looking for new teams.\n\nTeam chemistry is often discussed as an \"immeasurable\" metric that is difficult to quanity. This notebook explores correlation between team win totals and total roster turnover from the previous year for that past couple decades. My hypothesis, *a priori*, was that there would be a negative correlation between win totals and roster turnover. The rationale for this was that teams would be less likely to develop team chemsitry if they have many new teammates.","d4e57aea":"### Scrape RGB values for teams' primary colors","ba00248b":"### Was the hypothesis correct?\nYear over year has showed a negative correlation with team roster turnover and total wins.","e0bdbc9a":"### 2008 -- Boston's Big 3 -- Ray Allen and Kevin Garnett join Paul Pierce\n66 Wins"}}