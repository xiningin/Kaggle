{"cell_type":{"74a05c65":"code","756b3ae0":"code","41641836":"code","66fc279b":"code","876bbf9e":"code","07ef246e":"code","9bf0496e":"code","c90d30a4":"code","560679d4":"code","2a9ba93e":"code","6e238dfb":"code","94238813":"code","0d02cde4":"code","ebc5a2a1":"code","03932253":"code","9aadb0a9":"code","102762f0":"code","cba3717b":"code","2b426c3c":"code","600d9c45":"code","88306a1f":"code","2396276d":"code","6801a390":"code","2409aa4b":"code","d975f6e3":"code","7224d8b2":"code","8989cb55":"code","c82f792b":"code","1fc34c86":"code","aee59852":"code","17ce19ae":"code","7376e578":"code","079a7a45":"markdown","2c7c3fcd":"markdown","53ceea85":"markdown","7410448f":"markdown","ceb68040":"markdown","3ad06e9b":"markdown","9474826b":"markdown"},"source":{"74a05c65":"import pandas as pd\ndf=pd.read_csv('..\/input\/creditcardfraud\/creditcard.csv')\ndf.head()","756b3ae0":"df.shape","41641836":"df['Class'].value_counts()\n","66fc279b":"import matplotlib.pyplot as plt","876bbf9e":"def draw_histograms(dataframe, features, rows, cols):\n    fig=plt.figure(figsize=(20,20))\n    for i, feature in enumerate(features):\n        ax=fig.add_subplot(rows,cols,i+1)\n        dataframe[feature].hist(bins=20,ax=ax,facecolor='midnightblue')\n        ax.set_title(feature+\" Distribution\",color='DarkRed')\n        ax.set_yscale('log')\n    fig.tight_layout()  \n    plt.show()\n\ndraw_histograms(df,df.columns,8,4)","07ef246e":"#### Independent and Dependent Features\nX=df.drop(\"Class\",axis=1)\ny=df.Class","9bf0496e":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score,confusion_matrix,classification_report\nfrom sklearn.model_selection import KFold\nimport numpy as np\nfrom sklearn.model_selection import GridSearchCV\n\n","c90d30a4":"log_class=LogisticRegression(solver='liblinear')\ngrid={'C':10.0 **np.arange(-2,3),'penalty':['l1','l2']}\ncv=KFold(n_splits=5,random_state=None,shuffle=False)","560679d4":"from sklearn.model_selection import train_test_split\nX_train,X_test,y_train,y_test=train_test_split(X,y,train_size=0.75)","2a9ba93e":"clf=GridSearchCV(log_class,grid,cv=cv,n_jobs=-1,scoring='f1_macro')\nclf.fit(X_train,y_train)","6e238dfb":"y_pred=clf.predict(X_test)\n","94238813":"import seaborn as sns\n","0d02cde4":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");\n\n","ebc5a2a1":"print(accuracy_score(y_test,y_pred))\n\n","03932253":"2*0.69*0.72\/(0.72+0.69)\n","9aadb0a9":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier(criterion='gini', max_depth=10, min_samples_split=5, min_samples_leaf=1)\nclassifier.fit(X_train,y_train)","102762f0":"y_pred=classifier.predict(X_test)","cba3717b":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");","2b426c3c":"print(accuracy_score(y_test,y_pred))","600d9c45":"print(classification_report(y_test,y_pred))\n","88306a1f":"from collections import Counter\nCounter(y_train)","2396276d":"from imblearn.under_sampling import RandomUnderSampler  \n\nunder_sampler = RandomUnderSampler()\nX_train_ns,y_train_ns= under_sampler.fit_resample(X_train,y_train)\nprint(\"The number of classes before fit {}\".format(Counter(y_train)))\nprint(\"The number of classes after fit {}\".format(Counter(y_train_ns)))","6801a390":"from sklearn.ensemble import RandomForestClassifier\nclassifier=RandomForestClassifier()\nclassifier.fit(X_train_ns,y_train_ns)\n","2409aa4b":"y_pred=classifier.predict(X_test)","d975f6e3":"# confusion Matrix\ncm=confusion_matrix(y_test,y_pred)\nconf_matrix=pd.DataFrame(data=cm,columns=['Predicted:0','Predicted:1'],index=['Actual:0','Actual:1'])\nplt.figure(figsize = (8,5))\nsns.heatmap(conf_matrix, annot=True,fmt='d',cmap=\"YlGnBu\");","7224d8b2":"print(accuracy_score(y_test,y_pred))","8989cb55":"print(classification_report(y_test,y_pred))","c82f792b":"RANDOM_STATE = 2018\nNUM_ESTIMATORS = 100\ntarget = 'Class'\npredictors = ['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\\\n       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19',\\\n       'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28',\\\n       'Amount']","1fc34c86":"from sklearn.ensemble import AdaBoostClassifier\nclf = AdaBoostClassifier(random_state=RANDOM_STATE,\n                         algorithm='SAMME.R',\n                         learning_rate=0.8,\n                             n_estimators=NUM_ESTIMATORS)","aee59852":"clf.fit(df[predictors],df['Class'].values)","17ce19ae":"y_pred = clf.predict(df[predictors])","7376e578":"cm = pd.crosstab(df[target].values, y_pred, rownames=['Actual'], colnames=['Predicted'])\nfig, (ax1) = plt.subplots(ncols=1, figsize=(5,5))\nsns.heatmap(cm, \n            xticklabels=['Not Fraud', 'Fraud'],\n            yticklabels=['Not Fraud', 'Fraud'],\n            annot=True,ax=ax1,\n            linewidths=.2,linecolor=\"Darkblue\", cmap=\"Blues\")\nplt.title('Confusion Matrix', fontsize=8)\nplt.show()","079a7a45":"**<font size=\"6\">6. AdaBoost Classifier:<font>**","2c7c3fcd":"**<font size=\"6\">1. Importing of Credit Card Fraud Dataset<font>**","53ceea85":"**<font size=\"6\">5. Under Sampling on Unbalanced Data set using RandomUnderSampler<font>**\n","7410448f":"**<font size=\"6\">2. Data Analysis from charts of various distributions<font>**","ceb68040":"**<font size=\"6\">3. Logistic Regression: <font>**","3ad06e9b":"**<font size=\"6\">4. Random Forest: <font>**","9474826b":"Weighted Neural Network With Keras\nDefine Weights\nFit the model with thos specific weights"}}