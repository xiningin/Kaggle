{"cell_type":{"61d2b84d":"code","42dcee4c":"code","f9975bf0":"code","e803cca8":"code","859db1fd":"code","717f0d6e":"code","0084ff54":"code","52e71c53":"code","eb86c1c7":"code","87c96ebf":"code","5d65e936":"code","a24d03f3":"code","ff8306e6":"code","c041ad4d":"code","a16bb468":"code","0155fad5":"code","42f7f0fd":"code","3ffc3793":"code","0817df80":"code","a0a4951b":"code","ea4549da":"code","a37a3c2b":"code","b626880c":"code","15af4190":"code","611f321f":"code","ca4d1aeb":"code","fa919234":"code","044f48d2":"code","4bca7d67":"code","f122b1c9":"code","298184b6":"code","a078f70b":"code","121ea8d0":"code","e4ff6834":"code","0110462c":"code","b93b170b":"code","37eb19c9":"code","0fdb73bf":"code","ca369f19":"code","e71e368a":"code","f514a666":"code","6becaf75":"code","daf4bfb8":"code","c0ba2d6f":"code","959640fc":"code","67c2302f":"code","b17cfe8e":"code","682b814c":"code","3b2a77e0":"code","fbbe0ddb":"code","28168be5":"code","9f0fcaa2":"code","04d18db4":"code","59dc41ea":"code","58502ba2":"code","e36eca7a":"code","cb5215a1":"code","6864271d":"code","529fc0d7":"code","570900dc":"code","c3b215ad":"code","d2e02b0c":"code","dec7ab2f":"code","177cfdbc":"code","8569d983":"code","54890894":"code","fc92f930":"code","47086fb7":"code","04da0eea":"code","118ac368":"code","aa5d77fc":"code","10453b7e":"code","c8df6a2c":"code","f5af05d2":"code","1242cbad":"code","dacd0e98":"code","4e8d880b":"code","0247550b":"code","7008e43c":"code","350146ef":"markdown","61d9c10a":"markdown","fe402005":"markdown","1b95adba":"markdown","8066134a":"markdown","5555942a":"markdown","d2bf8b81":"markdown","53c5bbb9":"markdown","0ce52ca6":"markdown","29050752":"markdown","913b9936":"markdown","18f4d37b":"markdown","7860688f":"markdown","0068a5c8":"markdown","237d6a43":"markdown","4d1d266d":"markdown","a25797b2":"markdown","ecb6a73e":"markdown","ae6387d2":"markdown","aad98855":"markdown"},"source":{"61d2b84d":"!pip install dython","42dcee4c":"import pandas as pd\nimport numpy as np\nimport scipy.stats as ss\nimport dython\nfrom dython.nominal import associations\nimport matplotlib.pyplot as plt\nimport warnings\nwarnings.filterwarnings('ignore')\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport datetime\nimport seaborn as sns","f9975bf0":"df = pd.read_csv('..\/input\/novel-corona-virus-2019-dataset\/covid_19_data.csv')","e803cca8":"print(df.shape)","859db1fd":"df.head()","717f0d6e":"df.drop(['SNo'],axis=1).describe()","0084ff54":"cols = [col for col in df.columns if col not in ['SNo','ObservationDate']]\nprint(associations(df[cols],figsize=(10,10)))","52e71c53":"df.isnull().sum()","eb86c1c7":"(df.isnull().sum()\/df.shape[0])*100","87c96ebf":"df['Province\/State'] = df['Province\/State'].fillna('Unrecorded')","5d65e936":"df.dtypes","a24d03f3":"df[['Confirmed','Deaths','Recovered']] = df[['Confirmed','Deaths','Recovered']].astype(int)","ff8306e6":"df.dtypes","c041ad4d":"df.nunique()","a16bb468":"df['Country\/Region'].unique()","0155fad5":"df['Country\/Region'].replace({'Mainland China':'China'},inplace=True)","42f7f0fd":"df.columns","3ffc3793":"df['Live cases'] = df['Confirmed'] - (df['Deaths']+df['Recovered'])","0817df80":"df.head()","a0a4951b":"df[df['Province\/State']=='Anhui']","ea4549da":"DF = df[df['ObservationDate']==max(df['ObservationDate'])].reset_index()","a37a3c2b":"DF.drop(['index'],axis=1,inplace=True)","b626880c":"DF.head()","15af4190":"DF[DF['Province\/State']=='Anhui']","611f321f":"DF.nunique()","ca4d1aeb":"df1 = DF.groupby(['ObservationDate'])[['Confirmed','Live cases','Recovered','Deaths']].sum().reset_index()\ndf1","fa919234":"cols = ['Last Update','Confirmed','Live cases','Recovered','Deaths']\nsplot = go.Figure(data=[go.Table(header=dict(values=cols),cells=dict(values=df1.loc[0,['ObservationDate','Confirmed','Live cases','Recovered','Deaths']]))])\nsplot.update_layout(title='Current COVID-19 statistics around the world')\nsplot.show()","044f48d2":"cols = ['Live cases','Recovered','Deaths']\nvalues = df1.loc[0,cols]\nfig = px.pie(df1,values=values,names=cols)\nfig.update_layout(title='Cases to date:'+str(df1['Confirmed'][0]))\nfig.show()","4bca7d67":"df2 = df.groupby('ObservationDate')[['Confirmed','Live cases','Recovered','Deaths']].sum().reset_index()","f122b1c9":"df2.head()","298184b6":"df2 = df2.sort_values(by='ObservationDate',ascending=True).reset_index()","a078f70b":"df2.drop(['index'],axis=1,inplace=True)","121ea8d0":"df2.head()","e4ff6834":"splot = go.Figure()\nsplot.add_trace(go.Scatter(x=df2.index,y=df2.Confirmed,mode='lines',name='Total confirmed cases'))\nsplot.update_layout(title='Rate of infection with respect to time',xaxis_title='Days',yaxis_title='Total confirmed cases',template='plotly_white')\nsplot.show()","0110462c":"splot1 = go.Figure()\nsplot1.add_trace(go.Scatter(x=df2.index,y=df2['Live cases'],mode='lines',name='Live Cases'))\nsplot1.update_layout(title='Active case rate with respect to time',xaxis_title='Days',yaxis_title='Total Live cases',template='plotly_white')\nsplot1.show()","b93b170b":"splot3 = go.Figure()\nsplot3.add_trace(go.Scatter(x=df2.index,y=df2.Recovered,mode='lines',name='Recovered'))\nsplot3.update_layout(title='Recovery rate with resepct to time',xaxis_title='Days',yaxis_title='Recovered',template='plotly_white')","37eb19c9":"splot3 = go.Figure()\nsplot3.add_trace(go.Scatter(x=df2.index,y=df2.Deaths,mode='lines',name='Deaths',marker_color='red'))\nsplot3.update_layout(title='Death toll with resepct to time',xaxis_title='Days',yaxis_title='Deaths',template='plotly_dark')","0fdb73bf":"t1 = go.Figure(go.Bar(x=df2.ObservationDate,y=df2.Confirmed))\nt1.update_layout(title='Confirmed cases with respect to days',template='plotly_white',xaxis_title='Total confirmed cases',yaxis_title='Days')\nt1.show()","ca369f19":"t1 = go.Figure(go.Bar(x=df2.ObservationDate,y=df2['Live cases']))\nt1.update_layout(title='Live cases with respect to days',template='plotly_white',xaxis_title='Total live cases',yaxis_title='Days')\nt1.show()","e71e368a":"t1 = go.Figure(go.Bar(x=df2.ObservationDate,y=df2.Recovered,marker_color='rgb(17,247,5)'))\nt1.update_layout(title='Recovered cases with respect to days',template='plotly_white',xaxis_title='Total recovered cases',yaxis_title='Days')\nt1.show()","f514a666":"t1 = go.Figure(go.Bar(x=df2.ObservationDate,y=df2.Deaths,marker_color='rgb(255,0,0)'))\nt1.update_layout(title='Death toll with respect to days',template='plotly_dark',xaxis_title='Total deaths',yaxis_title='Days')\nt1.show()","6becaf75":"df3 = df.groupby('Country\/Region')[['Confirmed','Live cases','Recovered','Deaths']]","daf4bfb8":"df3 = df3.sum().reset_index()","c0ba2d6f":"df3 = df3.sort_values('Confirmed',ascending=False).reset_index(drop=True)","959640fc":"summ = go.Figure(data=[go.Table(header=dict(values=['<b>Name of country<\/b>','<b>Total confirmed cases<\/b>'],fill_color='grey',align=['center','center'],font=dict(color='white',size=14)),\n                               cells=dict(values=[df3['Country\/Region'],df3['Confirmed']],fill_color='white',line_color='grey',align=['center','center'],font=dict(color='black',size=12)))])\nsumm.update_layout(title='Total confirmed cases with respect to country')\nsumm.show()","67c2302f":"b1 = go.Figure(go.Bar(x=df3.Confirmed,y=df3['Country\/Region'],orientation='h'))\nb1.update_layout(title='Confirmed cases with respect to country',template='plotly_white',xaxis_title='Confirmed cases',yaxis_title='Countries')\nb1.show()","b17cfe8e":"b2 = go.Figure(go.Bar(x=df3['Live cases'],y=df3['Country\/Region'],orientation='h'))\nb2.update_layout(title='Live cases with respect to country',template='plotly_white',xaxis_title='Live cases',yaxis_title='Countries')\nb2.show()","682b814c":"b3 = go.Figure(go.Bar(x=df3.Recovered,y=df3['Country\/Region'],orientation='h',marker_color='Green'))\nb3.update_layout(title='Recovered cases with respect to country',template='plotly_white',xaxis_title='Recovered cases',yaxis_title='Countries')\nb3.show()","3b2a77e0":"b3 = go.Figure(go.Bar(x=df3.Deaths,y=df3['Country\/Region'],orientation='h',marker_color='Red'))\nb3.update_layout(title='Death toll with respect to country',template='plotly_dark',xaxis_title='Deaths',yaxis_title='Countries')\nb3.show()","fbbe0ddb":"m1 = px.choropleth(df3,locations=df3['Country\/Region'],color=df3.Confirmed,locationmode='country names',hover_name=df3['Country\/Region'],color_continuous_scale=px.colors.sequential.Cividis_r)\nm1.update_layout(title='Confirmed cases in each country')\nm1.show()","28168be5":"m2 = px.choropleth(df3,locations=df3['Country\/Region'],color=df3['Live cases'],locationmode='country names',hover_name=df3['Country\/Region'])\nm2.update_layout(title='Live cases in each country')\nm2.show()","9f0fcaa2":"m3 = px.choropleth(df3,locations=df3['Country\/Region'],color=df3.Recovered,locationmode='country names',hover_name=df3['Country\/Region'],color_continuous_scale=px.colors.sequential.Tealgrn)\nm3.update_layout(title='Recovered cases in each country')\nm3.show()","04d18db4":"m4 = px.choropleth(df3,locations=df3['Country\/Region'],color=df3.Deaths,locationmode='country names',hover_name=df3['Country\/Region'],color_continuous_scale='OrRd',template='plotly_dark')\nm4.update_layout(title='Deaths in each country')\nm4.show()","59dc41ea":"df4 = df.groupby(['Country\/Region','ObservationDate'])[['Confirmed','Live cases','Recovered','Deaths']].sum().reset_index()\ndf4.head()","58502ba2":"df4 = df4.sort_values('ObservationDate',ascending=True).reset_index(drop=True)\ndf4.head()","e36eca7a":"m1 = px.choropleth(df4,locations=df4['Country\/Region'],color=df4.Confirmed,locationmode='country names',hover_name=df4['Country\/Region'],color_continuous_scale=px.colors.sequential.Cividis_r,animation_frame='ObservationDate')\nm1.update_layout(title='Confirmed cases in each country')\nm1.show()","cb5215a1":"m2 = px.choropleth(df4,locations=df4['Country\/Region'],color=df4['Live cases'],locationmode='country names',hover_name=df4['Country\/Region'],animation_frame='ObservationDate')\nm2.update_layout(title='Live cases in each country')\nm2.show()","6864271d":"m3 = px.choropleth(df4,locations=df4['Country\/Region'],color=df4.Recovered,locationmode='country names',hover_name=df4['Country\/Region'],color_continuous_scale=px.colors.sequential.Tealgrn,animation_frame='ObservationDate')\nm3.update_layout(title='Recovered cases in each country')\nm3.show()","529fc0d7":"m4 = px.choropleth(df4,locations=df4['Country\/Region'],color=df4.Deaths,locationmode='country names',hover_name=df4['Country\/Region'],color_continuous_scale='OrRd',template='plotly_dark',animation_frame='ObservationDate')\nm4.update_layout(title='Deaths in each country')\nm4.show()","570900dc":"bar1 = go.Figure(data=[go.Bar(x=df3['Country\/Region'][0:10],y=df3['Confirmed'][0:10],text=df3['Confirmed'][0:10],marker_color='black',textposition='auto')])\nbar1.update_layout(title='Top infected countries',xaxis_title='Countries',yaxis_title='Confirmed cases',template='plotly_white')\nbar1.show()","c3b215ad":"bar1 = go.Figure(data=[go.Bar(x=df3['Country\/Region'][0:10],y=df3['Live cases'][0:10],text=df3['Confirmed'][0:10],marker_color='black',textposition='auto')])\nbar1.update_layout(title='Top live cases countries',xaxis_title='Countries',yaxis_title='Live case count',template='plotly_white')\nbar1.show()","d2e02b0c":"bar1 = go.Figure(data=[go.Bar(x=df3['Country\/Region'][0:10],y=df3['Recovered'][0:10],text=df3['Confirmed'][0:10],marker_color='green',textposition='auto')])\nbar1.update_layout(title='Top recovered cases countries',xaxis_title='Countries',yaxis_title='Recovered cases',template='plotly_white')\nbar1.show()","dec7ab2f":"bar1 = go.Figure(data=[go.Bar(x=df3['Country\/Region'][0:10],y=df3['Deaths'][0:10],text=df3['Confirmed'][0:10],marker_color='green',textposition='auto')])\nbar1.update_layout(title='Top death tolls',xaxis_title='Countries',yaxis_title='Deaths',template='plotly_white')\nbar1.show()","177cfdbc":"fig = go.Figure(data=[go.Scatter(x=df3['Country\/Region'][0:10],y=df3.Confirmed[0:10],mode='markers',marker=dict(color=100+np.random.randn(500),size=(df3['Confirmed'][0:10]\/2500000),showscale=True))])\nfig.update_layout(title='Top confirmed cases',xaxis_title='Countries',yaxis_title='Confirmed cases',template='plotly_white')\nfig.show()","8569d983":"df5 = df.groupby([\"Country\/Region\"])[\"Live cases\"].sum().reset_index().sort_values(\"Live cases\",ascending=False).reset_index(drop=True)","54890894":"summ = go.Figure(data=[go.Table(header=dict(values=['<b>Name of country<\/b>','<b>Total active cases<\/b>'],fill_color='grey',align=['center','center'],font=dict(color='white',size=14)),\n                               cells=dict(values=[df5['Country\/Region'],df5['Live cases']],fill_color='white',line_color='grey',align=['center','center'],font=dict(color='black',size=12)))])\nsumm.update_layout(title='Total live cases with respect to country')\nsumm.show()","fc92f930":"bar1 = go.Figure(data=[go.Bar(x=df5['Country\/Region'][0:10],y=df5['Live cases'][0:10],text=df5['Live cases'][0:10],marker_color='black',textposition='auto')])\nbar1.update_layout(title='Top live cases countries',xaxis_title='Countries',yaxis_title='Live case count',template='plotly_white')\nbar1.show()","47086fb7":"fig = go.Figure(data=[go.Scatter(x=df5['Country\/Region'][0:10],y=df5['Live cases'][0:10],mode='markers',marker=dict(color=100+np.random.randn(500),size=(df5['Live cases'][0:10]\/1500000),showscale=True))])\nfig.update_layout(title='Live cases',xaxis_title='Countries',yaxis_title='Live cases',template='plotly_white')\nfig.show()","04da0eea":"fig = go.Figure(data=[go.Scatter(x=df3['Country\/Region'][0:10],y=df3['Live cases'][0:10],mode='markers',marker=dict(color=100+np.random.randn(500),size=(df3['Live cases'][0:10]\/1500000),showscale=True))])\nfig.update_layout(title='Live cases',xaxis_title='Countries',yaxis_title='Live cases',template='plotly_white')\nfig.show()","118ac368":"df6 = df.groupby(['Country\/Region'])[['Deaths']].sum().reset_index().sort_values(by='Deaths',ascending=False).reset_index(drop=True)","aa5d77fc":"df6.head()","10453b7e":"dth = go.Figure(data=[go.Table(header=dict(values=['<b>Name of country<\/b>','<b>Total Deaths<\/b>'],fill_color='grey',align=['center','center'],font=dict(color='white',size=14)),\n                               cells=dict(values=[df6['Country\/Region'],df6['Deaths']],fill_color='white',line_color='grey',align=['center','center'],font=dict(color='black',size=12)))])\ndth.update_layout(title='Total deaths with respect to country')\ndth.show()","c8df6a2c":"bar1 = go.Figure(data=[go.Bar(x=df6['Country\/Region'][0:10],y=df6['Deaths'][0:10],text=df6['Deaths'][0:10],marker_color='red',textposition='auto')])\nbar1.update_layout(title='Death tolls',xaxis_title='Countries',yaxis_title='Death toll',template='plotly_dark')\nbar1.show()","f5af05d2":"fig = go.Figure(data=[go.Scatter(x=df6['Country\/Region'][0:10],y=df6['Deaths'][0:10],mode='markers',marker=dict(color=100+np.random.randn(500),size=(df6['Deaths'][0:10]\/150000),showscale=True),marker_colorscale='Oranges')])\nfig.update_layout(title='Total Deaths with respect to country',xaxis_title='Countries',yaxis_title='Deaths',template='plotly_dark')\nfig.show()","1242cbad":"df7 = df.groupby('Country\/Region').sum().reset_index().sort_values(by='Recovered',ascending=False).reset_index(drop=True)","dacd0e98":"df7.head()","4e8d880b":"dth = go.Figure(data=[go.Table(header=dict(values=['<b>Name of country<\/b>','<b>Total Recovered cases<\/b>'],fill_color='grey',align=['center','center'],font=dict(color='white',size=14)),\n                               cells=dict(values=[df7['Country\/Region'],df7['Recovered']],fill_color='white',line_color='grey',align=['center','center'],font=dict(color='black',size=12)))])\ndth.update_layout(title='Total deaths with respect to country')\ndth.show()","0247550b":"bar1 = go.Figure(data=[go.Bar(x=df7['Country\/Region'][0:10],y=df7['Recovered'][0:10],text=df7['Recovered'][0:10],marker_color='green',textposition='auto')])\nbar1.update_layout(title='Top 10 countries - Recovered cases',xaxis_title='Countries',yaxis_title='Death toll',template='plotly_white')\nbar1.show()","7008e43c":"fig = go.Figure(data=[go.Scatter(x=df7['Country\/Region'][0:10],y=df7['Recovered'][0:10],mode='markers',marker=dict(color=100+np.random.randn(500),size=(df7['Recovered'][0:10]\/1050000),showscale=True),marker_colorscale='Greens')])\nfig.update_layout(title='Total Recovered cases with respect to country',xaxis_title='Countries',yaxis_title='Recovered',template='plotly_white')\nfig.show()","350146ef":"COVID trends over time","61d9c10a":"<h2>Bulk data analysis<\/h2>","fe402005":"We require the latest update for the current numbers. Set the last update as the most recent one","1b95adba":"<h2>Cases with respect to Country<\/h2>","8066134a":"Live cases are = Confirmed cases - (Deaths + Recovered)","5555942a":"<h2>Feature modeling - live cases<\/h2>","d2bf8b81":"<h1>COVID-19 Exploratory data analysis<\/h1>","53c5bbb9":"<h2>Live cases<\/h2>","0ce52ca6":"<h2>Coronavirus with respect to time<\/h2>","29050752":"<h2>Null Values<\/h2>","913b9936":"<h2>Unique values<\/h2>","18f4d37b":"<h2>Death Toll<\/h2>","7860688f":"<h2>Fill NULL values<\/h2>","0068a5c8":"<h2>All columns<\/h2>","237d6a43":"<h2>Recovered cases<\/h2>","4d1d266d":"<h2>Percentage of NULL values<\/h2>","a25797b2":"<h2>Conclusion<\/h2>\nThrough the given notebook, we were able to derive key-insights regarding the spread and patterns of the COVID-19 pandemic. We can further analyze each country through their respective datasets to dig deeper and extract patterns or causes regarding the same","ecb6a73e":"<h2>Map plots<\/h2>","ae6387d2":"<h2>Exploratory Data analysis<\/h2>","aad98855":"We have a common last update value for all columns, we can use it as the latest statistic of our dataset"}}